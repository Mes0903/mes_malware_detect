
1ce440b619eab01e32a963bba55f5c62f287e5bba22e16a031a39d43eaa4587a.exe:     file format pei-i386


Disassembly of section .text:

65001000 <.text>:
65001000:	mov    eax,DWORD PTR [ecx+0x4]
65001003:	push   ebp
65001004:	push   esi
65001005:	mov    esi,DWORD PTR [eax+0x4]
65001008:	cmp    BYTE PTR [esi+0x45],0x0
6500100c:	mov    ebp,eax
6500100e:	jne    0x65001056
65001010:	push   ebx
65001011:	push   edi
65001012:	mov    edi,DWORD PTR [esp+0x14]
65001016:	lea    ebx,[edi+0x4]
65001019:	lea    esp,[esp+0x0]
65001020:	cmp    DWORD PTR [edi+0x18],0x8
65001024:	mov    edx,DWORD PTR [edi+0x14]
65001027:	lea    ecx,[esi+0xc]
6500102a:	jb     0x65001030
6500102c:	mov    eax,DWORD PTR [ebx]
6500102e:	jmp    0x65001032
65001030:	mov    eax,ebx
65001032:	push   edx
65001033:	push   eax
65001034:	mov    eax,DWORD PTR [ecx+0x14]
65001037:	push   eax
65001038:	push   0x0
6500103a:	call   0x6500a230
6500103f:	test   eax,eax
65001041:	jge    0x65001048
65001043:	mov    esi,DWORD PTR [esi+0x8]
65001046:	jmp    0x6500104c
65001048:	mov    ebp,esi
6500104a:	mov    esi,DWORD PTR [esi]
6500104c:	cmp    BYTE PTR [esi+0x45],0x0
65001050:	je     0x65001020
65001052:	pop    edi
65001053:	mov    eax,ebp
65001055:	pop    ebx
65001056:	pop    esi
65001057:	pop    ebp
65001058:	ret    0x4
6500105b:	int3   
6500105c:	int3   
6500105d:	int3   
6500105e:	int3   
6500105f:	int3   
65001060:	mov    DWORD PTR [ecx],0x65024c08
65001066:	jmp    0x650121a6
6500106b:	int3   
6500106c:	int3   
6500106d:	int3   
6500106e:	int3   
6500106f:	int3   
65001070:	push   esi
65001071:	mov    esi,ecx
65001073:	mov    DWORD PTR [esi],0x65024c08
65001079:	call   0x650121a6
6500107e:	test   BYTE PTR [esp+0x8],0x1
65001083:	je     0x6500108e
65001085:	push   esi
65001086:	call   0x650120d2
6500108b:	add    esp,0x4
6500108e:	mov    eax,esi
65001090:	pop    esi
65001091:	ret    0x4
65001094:	int3   
65001095:	int3   
65001096:	int3   
65001097:	int3   
65001098:	int3   
65001099:	int3   
6500109a:	int3   
6500109b:	int3   
6500109c:	int3   
6500109d:	int3   
6500109e:	int3   
6500109f:	int3   
650010a0:	mov    eax,DWORD PTR [esp+0x4]
650010a4:	push   0x65029fc4
650010a9:	lea    ecx,[esp+0x8]
650010ad:	push   ecx
650010ae:	mov    DWORD PTR [esp+0xc],eax
650010b2:	call   0x650124d6
650010b7:	int3   
650010b8:	int3   
650010b9:	int3   
650010ba:	int3   
650010bb:	int3   
650010bc:	int3   
650010bd:	int3   
650010be:	int3   
650010bf:	int3   
650010c0:	push   ecx
650010c1:	push   ebx
650010c2:	push   esi
650010c3:	push   edi
650010c4:	push   0x2710
650010c9:	call   DWORD PTR ds:0x65024044
650010cf:	mov    esi,DWORD PTR [esp+0x14]
650010d3:	mov    ebx,DWORD PTR ds:0x65024080
650010d9:	mov    DWORD PTR [esp+0xc],0x0
650010e1:	xor    edi,edi
650010e3:	push   0x0
650010e5:	lea    eax,[esp+0x18]
650010e9:	push   eax
650010ea:	push   0x4
650010ec:	lea    ecx,[esp+0x18]
650010f0:	push   ecx
650010f1:	push   esi
650010f2:	call   ebx
650010f4:	test   eax,eax
650010f6:	je     0x65001100
650010f8:	add    edi,0x1
650010fb:	cmp    edi,0xa
650010fe:	jne    0x650010e3
65001100:	test   esi,esi
65001102:	je     0x6500111a
65001104:	call   DWORD PTR ds:0x6502403c
6500110a:	push   esi
6500110b:	mov    edi,eax
6500110d:	call   DWORD PTR ds:0x65024038
65001113:	push   edi
65001114:	call   DWORD PTR ds:0x65024090
6500111a:	pop    edi
6500111b:	pop    esi
6500111c:	xor    eax,eax
6500111e:	pop    ebx
6500111f:	pop    ecx
65001120:	ret    0x4
65001123:	int3   
65001124:	int3   
65001125:	int3   
65001126:	int3   
65001127:	int3   
65001128:	int3   
65001129:	int3   
6500112a:	int3   
6500112b:	int3   
6500112c:	int3   
6500112d:	int3   
6500112e:	int3   
6500112f:	int3   
65001130:	sub    esp,0x14
65001133:	push   ebx
65001134:	mov    ebx,DWORD PTR ds:0x65024040
6500113a:	push   esi
6500113b:	mov    esi,DWORD PTR [esp+0x20]
6500113f:	push   edi
65001140:	mov    edi,DWORD PTR [esi+0xc]
65001143:	push   0x2
65001145:	push   0x0
65001147:	push   0x0
65001149:	lea    eax,[esp+0x18]
6500114d:	push   eax
6500114e:	mov    DWORD PTR [esp+0x1c],0x0
65001156:	call   ebx
65001158:	push   eax
65001159:	push   edi
6500115a:	call   ebx
6500115c:	push   eax
6500115d:	call   DWORD PTR ds:0x65024074
65001163:	test   eax,eax
65001165:	je     0x650011f9
6500116b:	mov    ecx,DWORD PTR [esp+0xc]
6500116f:	push   0x0
65001171:	push   0x0
65001173:	push   ecx
65001174:	push   0x650010c0
65001179:	push   0x0
6500117b:	push   0x0
6500117d:	call   DWORD PTR ds:0x65024064
65001183:	push   0x0
65001185:	lea    edx,[esp+0x18]
65001189:	push   edx
6500118a:	push   0x4
6500118c:	mov    edi,eax
6500118e:	mov    eax,DWORD PTR [esi+0x8]
65001191:	lea    ecx,[esp+0x30]
65001195:	push   ecx
65001196:	push   eax
65001197:	mov    DWORD PTR [esp+0x24],edi
6500119b:	mov    DWORD PTR [esp+0x38],0x0
650011a3:	call   DWORD PTR ds:0x65024078
650011a9:	test   eax,eax
650011ab:	je     0x650011df
650011ad:	cmp    DWORD PTR [esp+0x14],0x4
650011b2:	jne    0x650011df
650011b4:	mov    edx,DWORD PTR [esp+0x24]
650011b8:	mov    eax,DWORD PTR [esi+0x4]
650011bb:	push   0x0
650011bd:	lea    ecx,[esp+0x20]
650011c1:	push   ecx
650011c2:	mov    DWORD PTR [esp+0x20],edx
650011c6:	push   0x4
650011c8:	lea    edx,[esp+0x24]
650011cc:	push   edx
650011cd:	push   eax
650011ce:	call   DWORD PTR ds:0x65024080
650011d4:	lea    ecx,[esp+0x10]
650011d8:	call   0x650016e0
650011dd:	jmp    0x650011f9
650011df:	test   edi,edi
650011e1:	je     0x650011f9
650011e3:	call   DWORD PTR ds:0x6502403c
650011e9:	push   edi
650011ea:	mov    ebx,eax
650011ec:	call   DWORD PTR ds:0x65024038
650011f2:	push   ebx
650011f3:	call   DWORD PTR ds:0x65024090
650011f9:	call   0x65001730
650011fe:	push   esi
650011ff:	call   0x650120d2
65001204:	add    esp,0x4
65001207:	pop    edi
65001208:	pop    esi
65001209:	xor    eax,eax
6500120b:	pop    ebx
6500120c:	add    esp,0x14
6500120f:	ret    0x4
65001212:	int3   
65001213:	int3   
65001214:	int3   
65001215:	int3   
65001216:	int3   
65001217:	int3   
65001218:	int3   
65001219:	int3   
6500121a:	int3   
6500121b:	int3   
6500121c:	int3   
6500121d:	int3   
6500121e:	int3   
6500121f:	int3   
65001220:	push   0xffffffff
65001222:	push   0x65022719
65001227:	mov    eax,fs:0x0
6500122d:	push   eax
6500122e:	sub    esp,0x30
65001231:	mov    eax,ds:0x6502c09c
65001236:	xor    eax,esp
65001238:	mov    DWORD PTR [esp+0x2c],eax
6500123c:	push   ebx
6500123d:	push   ebp
6500123e:	push   esi
6500123f:	push   edi
65001240:	mov    eax,ds:0x6502c09c
65001245:	xor    eax,esp
65001247:	push   eax
65001248:	lea    eax,[esp+0x44]
6500124c:	mov    fs:0x0,eax
65001252:	mov    esi,ecx
65001254:	xor    ebx,ebx
65001256:	mov    DWORD PTR [esp+0x1c],ebx
6500125a:	mov    edi,edx
6500125c:	mov    DWORD PTR [esi+0x18],0xf
65001263:	mov    DWORD PTR [esi+0x14],ebx
65001266:	mov    DWORD PTR [esp+0x20],esi
6500126a:	mov    DWORD PTR [esp+0x18],edi
6500126e:	mov    BYTE PTR [esi+0x4],bl
65001271:	mov    DWORD PTR [esp+0x4c],ebx
65001275:	mov    ebp,0x1
6500127a:	mov    DWORD PTR [esp+0x1c],ebp
6500127e:	call   DWORD PTR ds:0x6502407c
65001284:	xor    ecx,ecx
65001286:	cmp    ecx,ebx
65001288:	jle    0x65001297
6500128a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6500128f:	jne    0x65001297
65001291:	cmp    WORD PTR [eax+ecx*2],bx
65001295:	je     0x6500129b
65001297:	add    ecx,ebp
65001299:	jmp    0x65001286
6500129b:	add    ecx,ecx
6500129d:	push   ecx
6500129e:	push   eax
6500129f:	lea    ecx,[esp+0x2c]
650012a3:	mov    DWORD PTR [esp+0x44],0xf
650012ab:	mov    DWORD PTR [esp+0x40],ebx
650012af:	mov    BYTE PTR [esp+0x30],bl
650012b3:	call   0x650018c0
650012b8:	push   ebx
650012b9:	lea    edx,[esp+0x28]
650012bd:	push   edx
650012be:	or     eax,0xffffffff
650012c1:	mov    DWORD PTR [esp+0x54],ebp
650012c5:	call   0x65001a30
650012ca:	mov    BYTE PTR [esp+0x4c],bl
650012ce:	cmp    DWORD PTR [esp+0x3c],0x10
650012d3:	jb     0x650012e2
650012d5:	mov    eax,DWORD PTR [esp+0x28]
650012d9:	push   eax
650012da:	call   0x650120d2
650012df:	add    esp,0x4
650012e2:	mov    edx,DWORD PTR ds:0x6502d560
650012e8:	mov    eax,DWORD PTR [edx+0xc]
650012eb:	mov    ecx,0x6502d560
650012f0:	call   eax
650012f2:	add    eax,0x10
650012f5:	mov    DWORD PTR [esp+0x14],eax
650012f9:	mov    DWORD PTR [esp+0x4c],0x2
65001301:	mov    eax,DWORD PTR [edi]
65001303:	push   eax
65001304:	lea    ecx,[esp+0x18]
65001308:	push   0x650266c0
6500130d:	push   ecx
6500130e:	call   0x65001da0
65001313:	mov    edi,DWORD PTR [esp+0x20]
65001317:	mov    ebp,DWORD PTR [edi-0xc]
6500131a:	add    esp,0xc
6500131d:	cmp    DWORD PTR [edi-0x4],0x1
65001321:	jle    0x65001333
65001323:	mov    edx,ebp
65001325:	push   edx
65001326:	lea    ecx,[esp+0x18]
6500132a:	call   0x650019b0
6500132f:	mov    edi,DWORD PTR [esp+0x14]
65001333:	lea    eax,[ebp+ebp*1+0x2]
65001337:	push   eax
65001338:	push   edi
65001339:	lea    ecx,[esp+0x2c]
6500133d:	mov    DWORD PTR [esp+0x44],0xf
65001345:	mov    DWORD PTR [esp+0x40],ebx
65001349:	mov    BYTE PTR [esp+0x30],bl
6500134d:	call   0x650018c0
65001352:	push   ebx
65001353:	lea    ecx,[esp+0x28]
65001357:	push   ecx
65001358:	or     eax,0xffffffff
6500135b:	mov    BYTE PTR [esp+0x54],0x3
65001360:	call   0x65001a30
65001365:	cmp    DWORD PTR [esp+0x3c],0x10
6500136a:	jb     0x65001379
6500136c:	mov    edx,DWORD PTR [esp+0x28]
65001370:	push   edx
65001371:	call   0x650120d2
65001376:	add    esp,0x4
65001379:	add    edi,0xfffffff0
6500137c:	mov    DWORD PTR [esp+0x3c],0xf
65001384:	mov    DWORD PTR [esp+0x38],ebx
65001388:	mov    BYTE PTR [esp+0x28],bl
6500138c:	mov    BYTE PTR [esp+0x4c],bl
65001390:	lea    eax,[edi+0xc]
65001393:	or     ecx,0xffffffff
65001396:	lock xadd DWORD PTR [eax],ecx
6500139a:	dec    ecx
6500139b:	test   ecx,ecx
6500139d:	jg     0x650013a9
6500139f:	mov    ecx,DWORD PTR [edi]
650013a1:	mov    edx,DWORD PTR [ecx]
650013a3:	mov    eax,DWORD PTR [edx+0x4]
650013a6:	push   edi
650013a7:	call   eax
650013a9:	mov    edx,DWORD PTR ds:0x6502d560
650013af:	mov    eax,DWORD PTR [edx+0xc]
650013b2:	mov    ecx,0x6502d560
650013b7:	call   eax
650013b9:	add    eax,0x10
650013bc:	mov    DWORD PTR [esp+0x14],eax
650013c0:	mov    ecx,DWORD PTR [esp+0x18]
650013c4:	mov    DWORD PTR [esp+0x4c],0x4
650013cc:	mov    eax,DWORD PTR [ecx+0xc]
650013cf:	push   eax
650013d0:	lea    edx,[esp+0x18]
650013d4:	push   0x650266cc
650013d9:	push   edx
650013da:	call   0x65001da0
650013df:	mov    edi,DWORD PTR [esp+0x20]
650013e3:	mov    ebp,DWORD PTR [edi-0xc]
650013e6:	add    esp,0xc
650013e9:	cmp    DWORD PTR [edi-0x4],0x1
650013ed:	jle    0x650013ff
650013ef:	mov    eax,ebp
650013f1:	push   eax
650013f2:	lea    ecx,[esp+0x18]
650013f6:	call   0x650019b0
650013fb:	mov    edi,DWORD PTR [esp+0x14]
650013ff:	lea    ecx,[ebp+ebp*1+0x2]
65001403:	push   ecx
65001404:	push   edi
65001405:	lea    ecx,[esp+0x2c]
65001409:	mov    DWORD PTR [esp+0x44],0xf
65001411:	mov    DWORD PTR [esp+0x40],ebx
65001415:	mov    BYTE PTR [esp+0x30],bl
65001419:	call   0x650018c0
6500141e:	push   ebx
6500141f:	lea    edx,[esp+0x28]
65001423:	push   edx
65001424:	or     eax,0xffffffff
65001427:	mov    BYTE PTR [esp+0x54],0x5
6500142c:	call   0x65001a30
65001431:	cmp    DWORD PTR [esp+0x3c],0x10
65001436:	jb     0x65001445
65001438:	mov    eax,DWORD PTR [esp+0x28]
6500143c:	push   eax
6500143d:	call   0x650120d2
65001442:	add    esp,0x4
65001445:	mov    ebp,0xf
6500144a:	add    edi,0xfffffff0
6500144d:	mov    DWORD PTR [esp+0x3c],ebp
65001451:	mov    DWORD PTR [esp+0x38],ebx
65001455:	mov    BYTE PTR [esp+0x28],bl
65001459:	mov    BYTE PTR [esp+0x4c],bl
6500145d:	lea    ecx,[edi+0xc]
65001460:	or     edx,0xffffffff
65001463:	lock xadd DWORD PTR [ecx],edx
65001467:	dec    edx
65001468:	test   edx,edx
6500146a:	jg     0x65001476
6500146c:	mov    ecx,DWORD PTR [edi]
6500146e:	mov    eax,DWORD PTR [ecx]
65001470:	mov    edx,DWORD PTR [eax+0x4]
65001473:	push   edi
65001474:	call   edx
65001476:	push   0x2
65001478:	push   0x650266d8
6500147d:	lea    eax,[esp+0x30]
65001481:	push   ebp
65001482:	push   eax
65001483:	mov    DWORD PTR [esp+0x4c],ebp
65001487:	mov    DWORD PTR [esp+0x48],ebx
6500148b:	mov    BYTE PTR [esp+0x38],bl
6500148f:	call   0x65012243
65001494:	mov    eax,DWORD PTR [esp+0x38]
65001498:	mov    edi,0x10
6500149d:	add    esp,0x10
650014a0:	cmp    DWORD PTR [esp+0x3c],edi
650014a4:	mov    DWORD PTR [esp+0x38],0x2
650014ac:	jae    0x650014b2
650014ae:	lea    eax,[esp+0x28]
650014b2:	mov    BYTE PTR [eax+0x2],bl
650014b5:	push   ebx
650014b6:	lea    ecx,[esp+0x28]
650014ba:	push   ecx
650014bb:	or     eax,0xffffffff
650014be:	mov    DWORD PTR [esp+0x54],0x6
650014c6:	call   0x65001a30
650014cb:	cmp    DWORD PTR [esp+0x3c],edi
650014cf:	jb     0x650014de
650014d1:	mov    edx,DWORD PTR [esp+0x28]
650014d5:	push   edx
650014d6:	call   0x650120d2
650014db:	add    esp,0x4
650014de:	mov    eax,esi
650014e0:	mov    ecx,DWORD PTR [esp+0x44]
650014e4:	mov    DWORD PTR fs:0x0,ecx
650014eb:	pop    ecx
650014ec:	pop    edi
650014ed:	pop    esi
650014ee:	pop    ebp
650014ef:	pop    ebx
650014f0:	mov    ecx,DWORD PTR [esp+0x2c]
650014f4:	xor    ecx,esp
650014f6:	call   0x6501292c
650014fb:	add    esp,0x3c
650014fe:	ret    
650014ff:	int3   
65001500:	push   0xffffffff
65001502:	push   0x65022888
65001507:	mov    eax,fs:0x0
6500150d:	push   eax
6500150e:	sub    esp,0x24
65001511:	push   ebx
65001512:	push   ebp
65001513:	push   esi
65001514:	push   edi
65001515:	mov    eax,ds:0x6502c09c
6500151a:	xor    eax,esp
6500151c:	push   eax
6500151d:	lea    eax,[esp+0x38]
65001521:	mov    fs:0x0,eax
65001527:	mov    eax,DWORD PTR [esp+0x48]
6500152b:	xor    edi,edi
6500152d:	push   0x10
6500152f:	mov    DWORD PTR [esp+0x28],eax
65001533:	mov    DWORD PTR [esp+0x18],edi
65001537:	call   0x6501246c
6500153c:	add    esp,0x4
6500153f:	cmp    eax,edi
65001541:	je     0x65001552
65001543:	mov    DWORD PTR [eax],edi
65001545:	mov    DWORD PTR [eax+0x4],edi
65001548:	mov    DWORD PTR [eax+0x8],edi
6500154b:	mov    DWORD PTR [eax+0xc],edi
6500154e:	mov    esi,eax
65001550:	jmp    0x65001554
65001552:	xor    esi,esi
65001554:	mov    DWORD PTR [esp+0x34],esi
65001558:	push   edi
65001559:	lea    ecx,[esp+0x2c]
6500155d:	push   ecx
6500155e:	mov    DWORD PTR [esp+0x48],edi
65001562:	lea    edx,[esp+0x24]
65001566:	push   edx
65001567:	lea    eax,[esp+0x2c]
6500156b:	push   eax
6500156c:	mov    DWORD PTR [esp+0x38],0xc
65001574:	mov    DWORD PTR [esp+0x40],0x1
6500157c:	mov    DWORD PTR [esp+0x3c],edi
65001580:	mov    DWORD PTR [esp+0x30],edi
65001584:	mov    DWORD PTR [esp+0x2c],edi
65001588:	call   DWORD PTR ds:0x65024070
6500158e:	test   eax,eax
65001590:	mov    ebx,DWORD PTR ds:0x6502403c
65001596:	mov    ebp,DWORD PTR ds:0x65024038
6500159c:	je     0x650015f4
6500159e:	mov    edi,DWORD PTR [esi+0x8]
650015a1:	test   edi,edi
650015a3:	mov    ecx,DWORD PTR [esp+0x20]
650015a7:	mov    DWORD PTR [esp+0x14],ecx
650015ab:	je     0x650015c1
650015ad:	call   ebx
650015af:	push   edi
650015b0:	mov    DWORD PTR [esp+0x1c],eax
650015b4:	call   ebp
650015b6:	mov    edx,DWORD PTR [esp+0x18]
650015ba:	push   edx
650015bb:	call   DWORD PTR ds:0x65024090
650015c1:	mov    eax,DWORD PTR [esp+0x14]
650015c5:	mov    DWORD PTR [esi+0x8],eax
650015c8:	mov    edi,DWORD PTR [esi+0xc]
650015cb:	test   edi,edi
650015cd:	mov    ecx,DWORD PTR [esp+0x1c]
650015d1:	mov    DWORD PTR [esp+0x18],ecx
650015d5:	je     0x650015eb
650015d7:	call   ebx
650015d9:	push   edi
650015da:	mov    DWORD PTR [esp+0x18],eax
650015de:	call   ebp
650015e0:	mov    edx,DWORD PTR [esp+0x14]
650015e4:	push   edx
650015e5:	call   DWORD PTR ds:0x65024090
650015eb:	mov    eax,DWORD PTR [esp+0x18]
650015ef:	mov    DWORD PTR [esi+0xc],eax
650015f2:	xor    edi,edi
650015f4:	push   edi
650015f5:	lea    ecx,[esp+0x2c]
650015f9:	push   ecx
650015fa:	lea    edx,[esp+0x24]
650015fe:	push   edx
650015ff:	lea    eax,[esp+0x2c]
65001603:	push   eax
65001604:	call   DWORD PTR ds:0x65024070
6500160a:	test   eax,eax
6500160c:	je     0x65001662
6500160e:	mov    edi,DWORD PTR [esi]
65001610:	test   edi,edi
65001612:	mov    ecx,DWORD PTR [esp+0x20]
65001616:	mov    DWORD PTR [esp+0x18],ecx
6500161a:	je     0x65001630
6500161c:	call   ebx
6500161e:	push   edi
6500161f:	mov    DWORD PTR [esp+0x18],eax
65001623:	call   ebp
65001625:	mov    edx,DWORD PTR [esp+0x14]
65001629:	push   edx
6500162a:	call   DWORD PTR ds:0x65024090
65001630:	mov    eax,DWORD PTR [esp+0x18]
65001634:	mov    DWORD PTR [esi],eax
65001636:	mov    edi,DWORD PTR [esi+0x4]
65001639:	test   edi,edi
6500163b:	mov    ecx,DWORD PTR [esp+0x1c]
6500163f:	mov    DWORD PTR [esp+0x18],ecx
65001643:	je     0x65001659
65001645:	call   ebx
65001647:	push   edi
65001648:	mov    DWORD PTR [esp+0x18],eax
6500164c:	call   ebp
6500164e:	mov    edx,DWORD PTR [esp+0x14]
65001652:	push   edx
65001653:	call   DWORD PTR ds:0x65024090
65001659:	mov    eax,DWORD PTR [esp+0x18]
6500165d:	mov    DWORD PTR [esi+0x4],eax
65001660:	xor    edi,edi
65001662:	mov    ecx,DWORD PTR [esp+0x24]
65001666:	mov    edx,esi
65001668:	call   0x65001220
6500166d:	push   edi
6500166e:	push   edi
6500166f:	push   esi
65001670:	push   0x65001130
65001675:	push   edi
65001676:	push   edi
65001677:	call   DWORD PTR ds:0x65024064
6500167d:	mov    esi,eax
6500167f:	cmp    esi,edi
65001681:	je     0x65001691
65001683:	call   ebx
65001685:	push   esi
65001686:	mov    edi,eax
65001688:	call   ebp
6500168a:	push   edi
6500168b:	call   DWORD PTR ds:0x65024090
65001691:	mov    eax,DWORD PTR [esp+0x24]
65001695:	mov    ecx,DWORD PTR [esp+0x38]
65001699:	mov    DWORD PTR fs:0x0,ecx
650016a0:	pop    ecx
650016a1:	pop    edi
650016a2:	pop    esi
650016a3:	pop    ebp
650016a4:	pop    ebx
650016a5:	add    esp,0x30
650016a8:	ret    
650016a9:	int3   
650016aa:	int3   
650016ab:	int3   
650016ac:	int3   
650016ad:	int3   
650016ae:	int3   
650016af:	int3   
650016b0:	push   esi
650016b1:	mov    esi,ecx
650016b3:	cmp    DWORD PTR [esi+0x18],0x10
650016b7:	jb     0x650016c5
650016b9:	mov    eax,DWORD PTR [esi+0x4]
650016bc:	push   eax
650016bd:	call   0x650120d2
650016c2:	add    esp,0x4
650016c5:	xor    eax,eax
650016c7:	mov    DWORD PTR [esi+0x18],0xf
650016ce:	mov    DWORD PTR [esi+0x14],eax
650016d1:	mov    BYTE PTR [esi+0x4],al
650016d4:	pop    esi
650016d5:	ret    
650016d6:	int3   
650016d7:	int3   
650016d8:	int3   
650016d9:	int3   
650016da:	int3   
650016db:	int3   
650016dc:	int3   
650016dd:	int3   
650016de:	int3   
650016df:	int3   
650016e0:	push   esi
650016e1:	mov    esi,ecx
650016e3:	push   edi
650016e4:	mov    edi,DWORD PTR [esi]
650016e6:	test   edi,edi
650016e8:	je     0x65001702
650016ea:	push   ebx
650016eb:	call   DWORD PTR ds:0x6502403c
650016f1:	push   edi
650016f2:	mov    ebx,eax
650016f4:	call   DWORD PTR ds:0x65024038
650016fa:	push   ebx
650016fb:	call   DWORD PTR ds:0x65024090
65001701:	pop    ebx
65001702:	pop    edi
65001703:	mov    DWORD PTR [esi],0x0
65001709:	pop    esi
6500170a:	ret    
6500170b:	int3   
6500170c:	int3   
6500170d:	int3   
6500170e:	int3   
6500170f:	int3   
65001710:	push   esi
65001711:	mov    esi,DWORD PTR [eax]
65001713:	test   esi,esi
65001715:	je     0x65001725
65001717:	call   0x65001730
6500171c:	push   esi
6500171d:	call   0x650120d2
65001722:	add    esp,0x4
65001725:	pop    esi
65001726:	ret    
65001727:	int3   
65001728:	int3   
65001729:	int3   
6500172a:	int3   
6500172b:	int3   
6500172c:	int3   
6500172d:	int3   
6500172e:	int3   
6500172f:	int3   
65001730:	sub    esp,0x8
65001733:	mov    eax,DWORD PTR [esi+0xc]
65001736:	test   eax,eax
65001738:	push   ebx
65001739:	mov    ebx,DWORD PTR ds:0x65024038
6500173f:	push   ebp
65001740:	mov    ebp,DWORD PTR ds:0x65024090
65001746:	push   edi
65001747:	mov    edi,DWORD PTR ds:0x6502403c
6500174d:	mov    DWORD PTR [esp+0xc],eax
65001751:	je     0x65001767
65001753:	call   edi
65001755:	mov    DWORD PTR [esp+0x10],eax
65001759:	mov    eax,DWORD PTR [esp+0xc]
6500175d:	push   eax
6500175e:	call   ebx
65001760:	mov    ecx,DWORD PTR [esp+0x10]
65001764:	push   ecx
65001765:	call   ebp
65001767:	mov    DWORD PTR [esi+0xc],0x0
6500176e:	mov    eax,DWORD PTR [esi+0x8]
65001771:	test   eax,eax
65001773:	mov    DWORD PTR [esp+0x10],eax
65001777:	je     0x6500178d
65001779:	call   edi
6500177b:	mov    edx,DWORD PTR [esp+0x10]
6500177f:	push   edx
65001780:	mov    DWORD PTR [esp+0x10],eax
65001784:	call   ebx
65001786:	mov    eax,DWORD PTR [esp+0xc]
6500178a:	push   eax
6500178b:	call   ebp
6500178d:	mov    DWORD PTR [esi+0x8],0x0
65001794:	mov    eax,DWORD PTR [esi+0x4]
65001797:	test   eax,eax
65001799:	mov    DWORD PTR [esp+0x10],eax
6500179d:	je     0x650017b3
6500179f:	call   edi
650017a1:	mov    ecx,DWORD PTR [esp+0x10]
650017a5:	push   ecx
650017a6:	mov    DWORD PTR [esp+0x10],eax
650017aa:	call   ebx
650017ac:	mov    edx,DWORD PTR [esp+0xc]
650017b0:	push   edx
650017b1:	call   ebp
650017b3:	mov    DWORD PTR [esi+0x4],0x0
650017ba:	mov    eax,DWORD PTR [esi]
650017bc:	test   eax,eax
650017be:	mov    DWORD PTR [esp+0x10],eax
650017c2:	je     0x650017d2
650017c4:	call   edi
650017c6:	mov    edi,eax
650017c8:	mov    eax,DWORD PTR [esp+0x10]
650017cc:	push   eax
650017cd:	call   ebx
650017cf:	push   edi
650017d0:	call   ebp
650017d2:	pop    edi
650017d3:	pop    ebp
650017d4:	mov    DWORD PTR [esi],0x0
650017da:	pop    ebx
650017db:	add    esp,0x8
650017de:	ret    
650017df:	int3   
650017e0:	push   ebx
650017e1:	mov    ebx,DWORD PTR [esp+0x8]
650017e5:	push   ebp
650017e6:	mov    ebp,DWORD PTR [esp+0x10]
650017ea:	cmp    DWORD PTR [ebx+0x14],ebp
650017ed:	push   esi
650017ee:	push   edi
650017ef:	mov    esi,ecx
650017f1:	jae    0x650017f8
650017f3:	call   0x6501208e
650017f8:	mov    edi,DWORD PTR [ebx+0x14]
650017fb:	mov    eax,DWORD PTR [esp+0x1c]
650017ff:	sub    edi,ebp
65001801:	cmp    eax,edi
65001803:	jae    0x65001807
65001805:	mov    edi,eax
65001807:	cmp    esi,ebx
65001809:	jne    0x6500182a
6500180b:	push   0xffffffff
6500180d:	add    edi,ebp
6500180f:	push   edi
65001810:	mov    ecx,esi
65001812:	call   0x65001b20
65001817:	push   ebp
65001818:	push   0x0
6500181a:	mov    ecx,esi
6500181c:	call   0x65001b20
65001821:	pop    edi
65001822:	mov    eax,esi
65001824:	pop    esi
65001825:	pop    ebp
65001826:	pop    ebx
65001827:	ret    0xc
6500182a:	cmp    edi,0xfffffffe
6500182d:	jbe    0x65001834
6500182f:	call   0x6501204f
65001834:	mov    eax,DWORD PTR [esi+0x18]
65001837:	cmp    eax,edi
65001839:	jae    0x65001856
6500183b:	mov    eax,DWORD PTR [esi+0x14]
6500183e:	push   eax
6500183f:	push   edi
65001840:	mov    ecx,esi
65001842:	call   0x65001bc0
65001847:	test   edi,edi
65001849:	jbe    0x650018b1
6500184b:	cmp    DWORD PTR [ebx+0x18],0x10
6500184f:	jb     0x65001880
65001851:	mov    edx,DWORD PTR [ebx+0x4]
65001854:	jmp    0x65001883
65001856:	test   edi,edi
65001858:	jne    0x65001849
6500185a:	cmp    eax,0x10
6500185d:	mov    DWORD PTR [esi+0x14],edi
65001860:	jb     0x65001871
65001862:	mov    eax,DWORD PTR [esi+0x4]
65001865:	pop    edi
65001866:	mov    BYTE PTR [eax],0x0
65001869:	mov    eax,esi
6500186b:	pop    esi
6500186c:	pop    ebp
6500186d:	pop    ebx
6500186e:	ret    0xc
65001871:	lea    eax,[esi+0x4]
65001874:	pop    edi
65001875:	mov    BYTE PTR [eax],0x0
65001878:	mov    eax,esi
6500187a:	pop    esi
6500187b:	pop    ebp
6500187c:	pop    ebx
6500187d:	ret    0xc
65001880:	lea    edx,[ebx+0x4]
65001883:	mov    ecx,DWORD PTR [esi+0x18]
65001886:	cmp    ecx,0x10
65001889:	lea    ebx,[esi+0x4]
6500188c:	jb     0x65001892
6500188e:	mov    eax,DWORD PTR [ebx]
65001890:	jmp    0x65001894
65001892:	mov    eax,ebx
65001894:	push   edi
65001895:	add    edx,ebp
65001897:	push   edx
65001898:	push   ecx
65001899:	push   eax
6500189a:	call   0x65012243
6500189f:	add    esp,0x10
650018a2:	cmp    DWORD PTR [esi+0x18],0x10
650018a6:	mov    DWORD PTR [esi+0x14],edi
650018a9:	jb     0x650018ad
650018ab:	mov    ebx,DWORD PTR [ebx]
650018ad:	mov    BYTE PTR [ebx+edi*1],0x0
650018b1:	pop    edi
650018b2:	mov    eax,esi
650018b4:	pop    esi
650018b5:	pop    ebp
650018b6:	pop    ebx
650018b7:	ret    0xc
650018ba:	int3   
650018bb:	int3   
650018bc:	int3   
650018bd:	int3   
650018be:	int3   
650018bf:	int3   
650018c0:	push   ebx
650018c1:	push   ebp
650018c2:	push   esi
650018c3:	mov    esi,ecx
650018c5:	mov    ecx,DWORD PTR [esi+0x18]
650018c8:	cmp    ecx,0x10
650018cb:	lea    ebx,[esi+0x4]
650018ce:	jb     0x650018d4
650018d0:	mov    eax,DWORD PTR [ebx]
650018d2:	jmp    0x650018d6
650018d4:	mov    eax,ebx
650018d6:	mov    ebp,DWORD PTR [esp+0x10]
650018da:	cmp    ebp,eax
650018dc:	jb     0x6500190f
650018de:	cmp    ecx,0x10
650018e1:	jb     0x650018e7
650018e3:	mov    eax,DWORD PTR [ebx]
650018e5:	jmp    0x650018e9
650018e7:	mov    eax,ebx
650018e9:	mov    edx,DWORD PTR [esi+0x14]
650018ec:	add    edx,eax
650018ee:	cmp    edx,ebp
650018f0:	jbe    0x6500190f
650018f2:	cmp    ecx,0x10
650018f5:	jb     0x650018f9
650018f7:	mov    ebx,DWORD PTR [ebx]
650018f9:	mov    eax,DWORD PTR [esp+0x14]
650018fd:	push   eax
650018fe:	sub    ebp,ebx
65001900:	push   ebp
65001901:	push   esi
65001902:	mov    ecx,esi
65001904:	call   0x650017e0
65001909:	pop    esi
6500190a:	pop    ebp
6500190b:	pop    ebx
6500190c:	ret    0x8
6500190f:	push   edi
65001910:	mov    edi,DWORD PTR [esp+0x18]
65001914:	cmp    edi,0xfffffffe
65001917:	jbe    0x6500191e
65001919:	call   0x6501204f
6500191e:	mov    eax,DWORD PTR [esi+0x18]
65001921:	cmp    eax,edi
65001923:	jae    0x65001941
65001925:	mov    ecx,DWORD PTR [esi+0x14]
65001928:	push   ecx
65001929:	push   edi
6500192a:	mov    ecx,esi
6500192c:	call   0x65001bc0
65001931:	test   edi,edi
65001933:	jbe    0x65001978
65001935:	mov    ecx,DWORD PTR [esi+0x18]
65001938:	cmp    ecx,0x10
6500193b:	jb     0x6500195b
6500193d:	mov    eax,DWORD PTR [ebx]
6500193f:	jmp    0x6500195d
65001941:	test   edi,edi
65001943:	jne    0x65001933
65001945:	cmp    eax,0x10
65001948:	mov    DWORD PTR [esi+0x14],edi
6500194b:	jb     0x6500194f
6500194d:	mov    ebx,DWORD PTR [ebx]
6500194f:	pop    edi
65001950:	mov    eax,esi
65001952:	pop    esi
65001953:	pop    ebp
65001954:	mov    BYTE PTR [ebx],0x0
65001957:	pop    ebx
65001958:	ret    0x8
6500195b:	mov    eax,ebx
6500195d:	push   edi
6500195e:	push   ebp
6500195f:	push   ecx
65001960:	push   eax
65001961:	call   0x65012243
65001966:	add    esp,0x10
65001969:	cmp    DWORD PTR [esi+0x18],0x10
6500196d:	mov    DWORD PTR [esi+0x14],edi
65001970:	jb     0x65001974
65001972:	mov    ebx,DWORD PTR [ebx]
65001974:	mov    BYTE PTR [ebx+edi*1],0x0
65001978:	pop    edi
65001979:	mov    eax,esi
6500197b:	pop    esi
6500197c:	pop    ebp
6500197d:	pop    ebx
6500197e:	ret    0x8
65001981:	int3   
65001982:	int3   
65001983:	int3   
65001984:	int3   
65001985:	int3   
65001986:	int3   
65001987:	int3   
65001988:	int3   
65001989:	int3   
6500198a:	int3   
6500198b:	int3   
6500198c:	int3   
6500198d:	int3   
6500198e:	int3   
6500198f:	int3   
65001990:	mov    eax,DWORD PTR [ecx]
65001992:	sub    eax,0x10
65001995:	lea    ecx,[eax+0xc]
65001998:	or     edx,0xffffffff
6500199b:	lock xadd DWORD PTR [ecx],edx
6500199f:	dec    edx
650019a0:	test   edx,edx
650019a2:	jg     0x650019ae
650019a4:	mov    ecx,DWORD PTR [eax]
650019a6:	mov    edx,DWORD PTR [ecx]
650019a8:	push   eax
650019a9:	mov    eax,DWORD PTR [edx+0x4]
650019ac:	call   eax
650019ae:	ret    
650019af:	int3   
650019b0:	push   ecx
650019b1:	push   ebx
650019b2:	push   ebp
650019b3:	push   esi
650019b4:	mov    esi,DWORD PTR [ecx]
650019b6:	mov    ebx,DWORD PTR [esi-0xc]
650019b9:	sub    esi,0x10
650019bc:	mov    DWORD PTR [esp+0xc],ecx
650019c0:	mov    ecx,DWORD PTR [esi]
650019c2:	mov    eax,DWORD PTR [ecx]
650019c4:	mov    edx,DWORD PTR [eax+0x10]
650019c7:	push   edi
650019c8:	call   edx
650019ca:	mov    edx,DWORD PTR [eax]
650019cc:	mov    ebp,DWORD PTR [esp+0x18]
650019d0:	push   0x2
650019d2:	mov    ecx,eax
650019d4:	mov    eax,DWORD PTR [edx]
650019d6:	push   ebp
650019d7:	call   eax
650019d9:	mov    edi,eax
650019db:	test   edi,edi
650019dd:	jne    0x650019e4
650019df:	call   0x65001bb0
650019e4:	cmp    ebx,ebp
650019e6:	jge    0x650019ea
650019e8:	mov    ebp,ebx
650019ea:	lea    eax,[ebp+ebp*1+0x2]
650019ee:	push   eax
650019ef:	lea    ecx,[esi+0x10]
650019f2:	push   ecx
650019f3:	push   eax
650019f4:	lea    ebp,[edi+0x10]
650019f7:	push   ebp
650019f8:	call   0x65012243
650019fd:	add    esp,0x10
65001a00:	mov    DWORD PTR [edi+0x4],ebx
65001a03:	lea    edx,[esi+0xc]
65001a06:	or     eax,0xffffffff
65001a09:	lock xadd DWORD PTR [edx],eax
65001a0d:	dec    eax
65001a0e:	test   eax,eax
65001a10:	jg     0x65001a1c
65001a12:	mov    ecx,DWORD PTR [esi]
65001a14:	mov    edx,DWORD PTR [ecx]
65001a16:	mov    eax,DWORD PTR [edx+0x4]
65001a19:	push   esi
65001a1a:	call   eax
65001a1c:	mov    ecx,DWORD PTR [esp+0x10]
65001a20:	pop    edi
65001a21:	pop    esi
65001a22:	mov    DWORD PTR [ecx],ebp
65001a24:	pop    ebp
65001a25:	pop    ebx
65001a26:	pop    ecx
65001a27:	ret    0x4
65001a2a:	int3   
65001a2b:	int3   
65001a2c:	int3   
65001a2d:	int3   
65001a2e:	int3   
65001a2f:	int3   
65001a30:	push   ebx
65001a31:	push   ebp
65001a32:	mov    ebp,DWORD PTR [esp+0xc]
65001a36:	push   edi
65001a37:	mov    edi,DWORD PTR [esp+0x14]
65001a3b:	cmp    DWORD PTR [ebp+0x14],edi
65001a3e:	mov    ebx,eax
65001a40:	jae    0x65001a47
65001a42:	call   0x6501208e
65001a47:	mov    eax,DWORD PTR [ebp+0x14]
65001a4a:	sub    eax,edi
65001a4c:	cmp    eax,ebx
65001a4e:	jae    0x65001a52
65001a50:	mov    ebx,eax
65001a52:	mov    eax,DWORD PTR [esi+0x14]
65001a55:	or     ecx,0xffffffff
65001a58:	sub    ecx,eax
65001a5a:	cmp    ecx,ebx
65001a5c:	jbe    0x65001a65
65001a5e:	lea    edx,[eax+ebx*1]
65001a61:	cmp    edx,eax
65001a63:	jae    0x65001a6a
65001a65:	call   0x6501204f
65001a6a:	test   ebx,ebx
65001a6c:	jbe    0x65001b16
65001a72:	mov    edi,DWORD PTR [esi+0x14]
65001a75:	add    edi,ebx
65001a77:	cmp    edi,0xfffffffe
65001a7a:	jbe    0x65001a81
65001a7c:	call   0x6501204f
65001a81:	mov    eax,DWORD PTR [esi+0x18]
65001a84:	cmp    eax,edi
65001a86:	jae    0x65001aa3
65001a88:	mov    eax,DWORD PTR [esi+0x14]
65001a8b:	push   eax
65001a8c:	push   edi
65001a8d:	mov    ecx,esi
65001a8f:	call   0x65001bc0
65001a94:	test   edi,edi
65001a96:	jbe    0x65001b16
65001a98:	cmp    DWORD PTR [ebp+0x18],0x10
65001a9c:	jb     0x65001acb
65001a9e:	mov    ebp,DWORD PTR [ebp+0x4]
65001aa1:	jmp    0x65001ace
65001aa3:	test   edi,edi
65001aa5:	jne    0x65001a96
65001aa7:	cmp    eax,0x10
65001aaa:	mov    DWORD PTR [esi+0x14],edi
65001aad:	jb     0x65001abd
65001aaf:	mov    eax,DWORD PTR [esi+0x4]
65001ab2:	pop    edi
65001ab3:	pop    ebp
65001ab4:	mov    BYTE PTR [eax],0x0
65001ab7:	mov    eax,esi
65001ab9:	pop    ebx
65001aba:	ret    0x8
65001abd:	pop    edi
65001abe:	lea    eax,[esi+0x4]
65001ac1:	pop    ebp
65001ac2:	mov    BYTE PTR [eax],0x0
65001ac5:	mov    eax,esi
65001ac7:	pop    ebx
65001ac8:	ret    0x8
65001acb:	add    ebp,0x4
65001ace:	mov    eax,DWORD PTR [esi+0x18]
65001ad1:	cmp    eax,0x10
65001ad4:	jb     0x65001adb
65001ad6:	mov    edx,DWORD PTR [esi+0x4]
65001ad9:	jmp    0x65001ade
65001adb:	lea    edx,[esi+0x4]
65001ade:	mov    ecx,DWORD PTR [esi+0x14]
65001ae1:	push   ebx
65001ae2:	mov    ebx,DWORD PTR [esp+0x18]
65001ae6:	add    ebp,ebx
65001ae8:	sub    eax,ecx
65001aea:	push   ebp
65001aeb:	push   eax
65001aec:	add    ecx,edx
65001aee:	push   ecx
65001aef:	call   0x65012243
65001af4:	add    esp,0x10
65001af7:	cmp    DWORD PTR [esi+0x18],0x10
65001afb:	mov    DWORD PTR [esi+0x14],edi
65001afe:	jb     0x65001b0f
65001b00:	mov    eax,DWORD PTR [esi+0x4]
65001b03:	mov    BYTE PTR [eax+edi*1],0x0
65001b07:	pop    edi
65001b08:	pop    ebp
65001b09:	mov    eax,esi
65001b0b:	pop    ebx
65001b0c:	ret    0x8
65001b0f:	lea    eax,[esi+0x4]
65001b12:	mov    BYTE PTR [eax+edi*1],0x0
65001b16:	pop    edi
65001b17:	pop    ebp
65001b18:	mov    eax,esi
65001b1a:	pop    ebx
65001b1b:	ret    0x8
65001b1e:	int3   
65001b1f:	int3   
65001b20:	push   ebx
65001b21:	mov    ebx,DWORD PTR [esp+0x8]
65001b25:	push   esi
65001b26:	mov    esi,ecx
65001b28:	cmp    DWORD PTR [esi+0x14],ebx
65001b2b:	push   edi
65001b2c:	jae    0x65001b33
65001b2e:	call   0x6501208e
65001b33:	mov    eax,DWORD PTR [esi+0x14]
65001b36:	mov    edi,DWORD PTR [esp+0x14]
65001b3a:	sub    eax,ebx
65001b3c:	cmp    eax,edi
65001b3e:	jae    0x65001b42
65001b40:	mov    edi,eax
65001b42:	test   edi,edi
65001b44:	jbe    0x65001b9b
65001b46:	mov    ecx,DWORD PTR [esi+0x18]
65001b49:	cmp    ecx,0x10
65001b4c:	push   ebp
65001b4d:	lea    ebp,[esi+0x4]
65001b50:	jb     0x65001b5b
65001b52:	mov    edx,DWORD PTR [ebp+0x0]
65001b55:	mov    DWORD PTR [esp+0x14],edx
65001b59:	jmp    0x65001b5f
65001b5b:	mov    DWORD PTR [esp+0x14],ebp
65001b5f:	cmp    ecx,0x10
65001b62:	jb     0x65001b69
65001b64:	mov    edx,DWORD PTR [ebp+0x0]
65001b67:	jmp    0x65001b6b
65001b69:	mov    edx,ebp
65001b6b:	sub    eax,edi
65001b6d:	push   eax
65001b6e:	mov    eax,DWORD PTR [esp+0x18]
65001b72:	add    eax,ebx
65001b74:	add    eax,edi
65001b76:	push   eax
65001b77:	sub    ecx,ebx
65001b79:	push   ecx
65001b7a:	add    edx,ebx
65001b7c:	push   edx
65001b7d:	call   0x650122be
65001b82:	mov    eax,DWORD PTR [esi+0x14]
65001b85:	sub    eax,edi
65001b87:	add    esp,0x10
65001b8a:	cmp    DWORD PTR [esi+0x18],0x10
65001b8e:	mov    DWORD PTR [esi+0x14],eax
65001b91:	jb     0x65001b96
65001b93:	mov    ebp,DWORD PTR [ebp+0x0]
65001b96:	mov    BYTE PTR [eax+ebp*1],0x0
65001b9a:	pop    ebp
65001b9b:	pop    edi
65001b9c:	mov    eax,esi
65001b9e:	pop    esi
65001b9f:	pop    ebx
65001ba0:	ret    0x8
65001ba3:	int3   
65001ba4:	int3   
65001ba5:	int3   
65001ba6:	int3   
65001ba7:	int3   
65001ba8:	int3   
65001ba9:	int3   
65001baa:	int3   
65001bab:	int3   
65001bac:	int3   
65001bad:	int3   
65001bae:	int3   
65001baf:	int3   
65001bb0:	push   0x8007000e
65001bb5:	call   0x650010a0
65001bba:	int3   
65001bbb:	int3   
65001bbc:	int3   
65001bbd:	int3   
65001bbe:	int3   
65001bbf:	int3   
65001bc0:	push   ebp
65001bc1:	mov    ebp,esp
65001bc3:	push   0xffffffff
65001bc5:	push   0x650223d0
65001bca:	mov    eax,fs:0x0
65001bd0:	push   eax
65001bd1:	sub    esp,0x1c
65001bd4:	push   ebx
65001bd5:	push   esi
65001bd6:	push   edi
65001bd7:	mov    eax,ds:0x6502c09c
65001bdc:	xor    eax,ebp
65001bde:	push   eax
65001bdf:	lea    eax,[ebp-0xc]
65001be2:	mov    fs:0x0,eax
65001be8:	mov    DWORD PTR [ebp-0x10],esp
65001beb:	mov    edi,ecx
65001bed:	mov    DWORD PTR [ebp-0x14],edi
65001bf0:	mov    eax,DWORD PTR [ebp+0x8]
65001bf3:	mov    esi,eax
65001bf5:	or     esi,0xf
65001bf8:	cmp    esi,0xfffffffe
65001bfb:	jbe    0x65001c01
65001bfd:	mov    esi,eax
65001bff:	jmp    0x65001c23
65001c01:	mov    ebx,DWORD PTR [edi+0x18]
65001c04:	mov    eax,0xaaaaaaab
65001c09:	mul    esi
65001c0b:	mov    ecx,ebx
65001c0d:	shr    ecx,1
65001c0f:	shr    edx,1
65001c11:	cmp    edx,ecx
65001c13:	jae    0x65001c23
65001c15:	mov    eax,0xfffffffe
65001c1a:	sub    eax,ecx
65001c1c:	cmp    ebx,eax
65001c1e:	ja     0x65001c23
65001c20:	lea    esi,[ecx+ebx*1]
65001c23:	xor    ebx,ebx
65001c25:	lea    ecx,[esi+0x1]
65001c28:	cmp    ecx,ebx
65001c2a:	mov    DWORD PTR [ebp-0x4],ebx
65001c2d:	ja     0x65001c3f
65001c2f:	xor    ecx,ecx
65001c31:	push   ecx
65001c32:	call   0x6501246c
65001c37:	add    esp,0x4
65001c3a:	mov    DWORD PTR [ebp+0x8],eax
65001c3d:	jmp    0x65001c97
65001c3f:	or     eax,0xffffffff
65001c42:	xor    edx,edx
65001c44:	div    ecx
65001c46:	cmp    eax,0x1
65001c49:	jae    0x65001c31
65001c4b:	lea    ecx,[ebp-0x18]
65001c4e:	push   ecx
65001c4f:	lea    ecx,[ebp-0x28]
65001c52:	mov    DWORD PTR [ebp-0x18],ebx
65001c55:	call   0x650120e8
65001c5a:	push   0x65029ffc
65001c5f:	lea    edx,[ebp-0x28]
65001c62:	push   edx
65001c63:	mov    DWORD PTR [ebp-0x28],0x65024c08
65001c6a:	call   0x650124d6
65001c6f:	mov    eax,DWORD PTR [ebp+0x8]
65001c72:	mov    ecx,DWORD PTR [ebp-0x14]
65001c75:	mov    DWORD PTR [ebp-0x1c],eax
65001c78:	add    eax,0x1
65001c7b:	mov    DWORD PTR [ebp-0x10],esp
65001c7e:	push   eax
65001c7f:	mov    BYTE PTR [ebp-0x4],0x2
65001c83:	call   0x65001d40
65001c88:	mov    DWORD PTR [ebp+0x8],eax
65001c8b:	mov    eax,0x65001c91
65001c90:	ret    
65001c91:	mov    edi,DWORD PTR [ebp-0x14]
65001c94:	mov    esi,DWORD PTR [ebp-0x1c]
65001c97:	mov    ebx,DWORD PTR [ebp+0xc]
65001c9a:	test   ebx,ebx
65001c9c:	jbe    0x65001cbe
65001c9e:	cmp    DWORD PTR [edi+0x18],0x10
65001ca2:	jb     0x65001ca9
65001ca4:	mov    eax,DWORD PTR [edi+0x4]
65001ca7:	jmp    0x65001cac
65001ca9:	lea    eax,[edi+0x4]
65001cac:	mov    ecx,DWORD PTR [ebp+0x8]
65001caf:	push   ebx
65001cb0:	push   eax
65001cb1:	lea    eax,[esi+0x1]
65001cb4:	push   eax
65001cb5:	push   ecx
65001cb6:	call   0x65012243
65001cbb:	add    esp,0x10
65001cbe:	cmp    DWORD PTR [edi+0x18],0x10
65001cc2:	jb     0x65001cd0
65001cc4:	mov    edx,DWORD PTR [edi+0x4]
65001cc7:	push   edx
65001cc8:	call   0x650120d2
65001ccd:	add    esp,0x4
65001cd0:	cmp    esi,0x10
65001cd3:	mov    ecx,DWORD PTR [ebp+0x8]
65001cd6:	lea    eax,[edi+0x4]
65001cd9:	mov    BYTE PTR [eax],0x0
65001cdc:	mov    DWORD PTR [eax],ecx
65001cde:	mov    DWORD PTR [edi+0x18],esi
65001ce1:	mov    DWORD PTR [edi+0x14],ebx
65001ce4:	jb     0x65001ce8
65001ce6:	mov    eax,ecx
65001ce8:	mov    BYTE PTR [eax+ebx*1],0x0
65001cec:	mov    ecx,DWORD PTR [ebp-0xc]
65001cef:	mov    DWORD PTR fs:0x0,ecx
65001cf6:	pop    ecx
65001cf7:	pop    edi
65001cf8:	pop    esi
65001cf9:	pop    ebx
65001cfa:	mov    esp,ebp
65001cfc:	pop    ebp
65001cfd:	ret    0x8
65001d00:	mov    esi,DWORD PTR [ebp-0x14]
65001d03:	cmp    DWORD PTR [esi+0x18],0x10
65001d07:	jb     0x65001d15
65001d09:	mov    eax,DWORD PTR [esi+0x4]
65001d0c:	push   eax
65001d0d:	call   0x650120d2
65001d12:	add    esp,0x4
65001d15:	push   0x0
65001d17:	mov    DWORD PTR [esi+0x18],0xf
65001d1e:	mov    DWORD PTR [esi+0x14],0x0
65001d25:	push   0x0
65001d27:	mov    BYTE PTR [esi+0x4],0x0
65001d2b:	call   0x650124d6
65001d30:	int3   
65001d31:	int3   
65001d32:	int3   
65001d33:	int3   
65001d34:	int3   
65001d35:	int3   
65001d36:	int3   
65001d37:	int3   
65001d38:	int3   
65001d39:	int3   
65001d3a:	int3   
65001d3b:	int3   
65001d3c:	int3   
65001d3d:	int3   
65001d3e:	int3   
65001d3f:	int3   
65001d40:	mov    ecx,DWORD PTR [esp+0x4]
65001d44:	sub    esp,0xc
65001d47:	test   ecx,ecx
65001d49:	ja     0x65001d5c
65001d4b:	xor    ecx,ecx
65001d4d:	push   ecx
65001d4e:	call   0x6501246c
65001d53:	add    esp,0x4
65001d56:	add    esp,0xc
65001d59:	ret    0x4
65001d5c:	or     eax,0xffffffff
65001d5f:	xor    edx,edx
65001d61:	div    ecx
65001d63:	cmp    eax,0x1
65001d66:	jae    0x65001d4d
65001d68:	lea    eax,[esp+0x10]
65001d6c:	push   eax
65001d6d:	lea    ecx,[esp+0x4]
65001d71:	mov    DWORD PTR [esp+0x14],0x0
65001d79:	call   0x650120e8
65001d7e:	push   0x65029ffc
65001d83:	lea    ecx,[esp+0x4]
65001d87:	push   ecx
65001d88:	mov    DWORD PTR [esp+0x8],0x65024c08
65001d90:	call   0x650124d6
65001d95:	int3   
65001d96:	int3   
65001d97:	int3   
65001d98:	int3   
65001d99:	int3   
65001d9a:	int3   
65001d9b:	int3   
65001d9c:	int3   
65001d9d:	int3   
65001d9e:	int3   
65001d9f:	int3   
65001da0:	mov    ecx,DWORD PTR [esp+0x8]
65001da4:	lea    eax,[esp+0xc]
65001da8:	push   eax
65001da9:	push   ecx
65001daa:	mov    ecx,DWORD PTR [esp+0xc]
65001dae:	call   0x65001de0
65001db3:	ret    
65001db4:	int3   
65001db5:	int3   
65001db6:	int3   
65001db7:	int3   
65001db8:	int3   
65001db9:	int3   
65001dba:	int3   
65001dbb:	int3   
65001dbc:	int3   
65001dbd:	int3   
65001dbe:	int3   
65001dbf:	int3   
65001dc0:	mov    eax,DWORD PTR [esp+0x4]
65001dc4:	push   esi
65001dc5:	push   eax
65001dc6:	mov    esi,ecx
65001dc8:	call   0x6501214e
65001dcd:	mov    DWORD PTR [esi],0x65024c08
65001dd3:	mov    eax,esi
65001dd5:	pop    esi
65001dd6:	ret    0x4
65001dd9:	int3   
65001dda:	int3   
65001ddb:	int3   
65001ddc:	int3   
65001ddd:	int3   
65001dde:	int3   
65001ddf:	int3   
65001de0:	push   ebx
65001de1:	mov    ebx,DWORD PTR [esp+0x8]
65001de5:	test   ebx,ebx
65001de7:	push   edi
65001de8:	mov    edi,ecx
65001dea:	jne    0x65001df6
65001dec:	push   0x80070057
65001df1:	call   0x650010a0
65001df6:	push   ebp
65001df7:	mov    ebp,DWORD PTR [esp+0x14]
65001dfb:	push   esi
65001dfc:	push   ebp
65001dfd:	push   ebx
65001dfe:	call   0x65012ba6
65001e03:	mov    esi,eax
65001e05:	mov    eax,DWORD PTR [edi]
65001e07:	mov    edx,DWORD PTR [eax-0x8]
65001e0a:	sub    eax,0x10
65001e0d:	mov    ecx,0x1
65001e12:	sub    ecx,DWORD PTR [eax+0xc]
65001e15:	sub    edx,esi
65001e17:	add    esp,0x8
65001e1a:	or     ecx,edx
65001e1c:	jge    0x65001e26
65001e1e:	push   esi
65001e1f:	mov    ecx,edi
65001e21:	call   0x65001e60
65001e26:	mov    ecx,DWORD PTR [edi]
65001e28:	push   ebp
65001e29:	push   ebx
65001e2a:	lea    eax,[esi+0x1]
65001e2d:	push   eax
65001e2e:	push   ecx
65001e2f:	call   0x65012d3b
65001e34:	add    esp,0x10
65001e37:	test   esi,esi
65001e39:	jl     0x65001e54
65001e3b:	mov    eax,DWORD PTR [edi]
65001e3d:	cmp    esi,DWORD PTR [eax-0x8]
65001e40:	jg     0x65001e54
65001e42:	mov    DWORD PTR [eax-0xc],esi
65001e45:	mov    edx,DWORD PTR [edi]
65001e47:	mov    WORD PTR [edx+esi*2],0x0
65001e4d:	pop    esi
65001e4e:	pop    ebp
65001e4f:	pop    edi
65001e50:	pop    ebx
65001e51:	ret    0x8
65001e54:	push   0x80070057
65001e59:	call   0x650010a0
65001e5e:	int3   
65001e5f:	int3   
65001e60:	mov    eax,DWORD PTR [ecx]
65001e62:	mov    edx,DWORD PTR [esp+0x4]
65001e66:	sub    eax,0x10
65001e69:	push   esi
65001e6a:	mov    esi,DWORD PTR [eax+0x4]
65001e6d:	cmp    esi,edx
65001e6f:	jle    0x65001e73
65001e71:	mov    edx,esi
65001e73:	cmp    DWORD PTR [eax+0xc],0x1
65001e77:	pop    esi
65001e78:	jle    0x65001e83
65001e7a:	mov    DWORD PTR [esp+0x4],edx
65001e7e:	jmp    0x650019b0
65001e83:	mov    eax,DWORD PTR [eax+0x8]
65001e86:	cmp    eax,edx
65001e88:	jge    0x65001ea9
65001e8a:	cmp    eax,0x400
65001e8f:	jle    0x65001e98
65001e91:	add    eax,0x400
65001e96:	jmp    0x65001e9a
65001e98:	add    eax,eax
65001e9a:	cmp    eax,edx
65001e9c:	jge    0x65001ea0
65001e9e:	mov    eax,edx
65001ea0:	mov    DWORD PTR [esp+0x4],eax
65001ea4:	jmp    0x65001eb0
65001ea9:	ret    0x4
65001eac:	int3   
65001ead:	int3   
65001eae:	int3   
65001eaf:	int3   
65001eb0:	mov    edx,DWORD PTR [esp+0x4]
65001eb4:	push   esi
65001eb5:	mov    esi,ecx
65001eb7:	mov    eax,DWORD PTR [esi]
65001eb9:	mov    ecx,DWORD PTR [eax-0x10]
65001ebc:	sub    eax,0x10
65001ebf:	cmp    DWORD PTR [eax+0x8],edx
65001ec2:	jge    0x65001ed9
65001ec4:	test   edx,edx
65001ec6:	jle    0x65001ed9
65001ec8:	push   edi
65001ec9:	mov    edi,DWORD PTR [ecx]
65001ecb:	push   0x2
65001ecd:	push   edx
65001ece:	push   eax
65001ecf:	mov    eax,DWORD PTR [edi+0x8]
65001ed2:	call   eax
65001ed4:	test   eax,eax
65001ed6:	pop    edi
65001ed7:	jne    0x65001ede
65001ed9:	call   0x65001bb0
65001ede:	add    eax,0x10
65001ee1:	mov    DWORD PTR [esi],eax
65001ee3:	pop    esi
65001ee4:	ret    0x4
65001ee7:	int3   
65001ee8:	int3   
65001ee9:	int3   
65001eea:	int3   
65001eeb:	int3   
65001eec:	int3   
65001eed:	int3   
65001eee:	int3   
65001eef:	int3   
65001ef0:	mov    eax,DWORD PTR [esp+0x4]
65001ef4:	cmp    eax,0x50
65001ef7:	ja     0x65001f1b
65001ef9:	movzx  ecx,BYTE PTR [eax+0x65001f38]
65001f00:	jmp    DWORD PTR [ecx*4+0x65001f28]
65001f07:	push   0x8007000e
65001f0c:	call   0x650010a0
65001f11:	push   0x80070057
65001f16:	call   0x650010a0
65001f1b:	push   0x80004005
65001f20:	call   0x650010a0
65001f25:	ret    
65001f26:	mov    edi,edi
65001f28:	and    eax,0x765001f
65001f2d:	pop    ds
65001f2e:	add    BYTE PTR [ebp+0x11],ah
65001f31:	pop    ds
65001f32:	add    BYTE PTR [ebp+0x1b],ah
65001f35:	pop    ds
65001f36:	add    BYTE PTR [ebp+0x0],ah
65001f39:	add    eax,DWORD PTR [ebx]
65001f3b:	add    eax,DWORD PTR [ebx]
65001f3d:	add    eax,DWORD PTR [ebx]
65001f3f:	add    eax,DWORD PTR [ebx]
65001f41:	add    eax,DWORD PTR [ebx]
65001f43:	add    eax,DWORD PTR [ecx]
65001f45:	add    eax,DWORD PTR [ebx]
65001f47:	add    eax,DWORD PTR [ebx]
65001f49:	add    eax,DWORD PTR [ebx]
65001f4b:	add    eax,DWORD PTR [ebx]
65001f4d:	add    eax,DWORD PTR [edx]
65001f4f:	add    eax,DWORD PTR [ebx]
65001f51:	add    eax,DWORD PTR [ebx]
65001f53:	add    eax,DWORD PTR [ebx]
65001f55:	add    eax,DWORD PTR [ebx]
65001f57:	add    eax,DWORD PTR [ebx]
65001f59:	add    eax,DWORD PTR [edx]
65001f5b:	add    eax,DWORD PTR [ebx]
65001f5d:	add    eax,DWORD PTR [ebx]
65001f5f:	add    eax,DWORD PTR [ebx]
65001f61:	add    eax,DWORD PTR [ebx]
65001f63:	add    eax,DWORD PTR [ebx]
65001f65:	add    eax,DWORD PTR [ebx]
65001f67:	add    eax,DWORD PTR [ebx]
65001f69:	add    eax,DWORD PTR [ebx]
65001f6b:	add    eax,DWORD PTR [ebx]
65001f6d:	add    eax,DWORD PTR [ebx]
65001f6f:	add    eax,DWORD PTR [ebx]
65001f71:	add    eax,DWORD PTR [ebx]
65001f73:	add    eax,DWORD PTR [ebx]
65001f75:	add    eax,DWORD PTR [ebx]
65001f77:	add    eax,DWORD PTR [ebx]
65001f79:	add    eax,DWORD PTR [ebx]
65001f7b:	add    eax,DWORD PTR [ebx]
65001f7d:	add    eax,DWORD PTR [ebx]
65001f7f:	add    eax,DWORD PTR [ebx]
65001f81:	add    eax,DWORD PTR [ebx]
65001f83:	add    eax,DWORD PTR [ebx]
65001f85:	add    eax,DWORD PTR [ebx]
65001f87:	add    eax,DWORD PTR [eax]
65001f89:	int3   
65001f8a:	int3   
65001f8b:	int3   
65001f8c:	int3   
65001f8d:	int3   
65001f8e:	int3   
65001f8f:	int3   
65001f90:	push   ebx
65001f91:	mov    ebx,DWORD PTR [esp+0x8]
65001f95:	push   edi
65001f96:	mov    edi,DWORD PTR [esp+0x10]
65001f9a:	push   edi
65001f9b:	push   ebx
65001f9c:	call   DWORD PTR ds:0x6502402c
65001fa2:	test   eax,eax
65001fa4:	jne    0x65001fa9
65001fa6:	pop    edi
65001fa7:	pop    ebx
65001fa8:	ret    
65001fa9:	push   esi
65001faa:	push   eax
65001fab:	call   DWORD PTR ds:0x65024028
65001fb1:	mov    esi,eax
65001fb3:	test   esi,esi
65001fb5:	je     0x65001fe4
65001fb7:	push   edi
65001fb8:	push   ebx
65001fb9:	call   DWORD PTR ds:0x65024024
65001fbf:	mov    ecx,DWORD PTR [esp+0x18]
65001fc3:	add    eax,esi
65001fc5:	and    ecx,0xf
65001fc8:	jbe    0x65001fe0
65001fca:	lea    ebx,[ebx+0x0]
65001fd0:	cmp    esi,eax
65001fd2:	jae    0x65001fe4
65001fd4:	sub    ecx,0x1
65001fd7:	movzx  edx,WORD PTR [esi]
65001fda:	lea    esi,[esi+edx*2+0x2]
65001fde:	jne    0x65001fd0
65001fe0:	cmp    esi,eax
65001fe2:	jb     0x65001fea
65001fe4:	pop    esi
65001fe5:	pop    edi
65001fe6:	xor    eax,eax
65001fe8:	pop    ebx
65001fe9:	ret    
65001fea:	mov    ax,WORD PTR [esi]
65001fed:	neg    ax
65001ff0:	sbb    eax,eax
65001ff2:	and    eax,esi
65001ff4:	pop    esi
65001ff5:	pop    edi
65001ff6:	pop    ebx
65001ff7:	ret    
65001ff8:	int3   
65001ff9:	int3   
65001ffa:	int3   
65001ffb:	int3   
65001ffc:	int3   
65001ffd:	int3   
65001ffe:	int3   
65001fff:	int3   
65002000:	push   ebx
65002001:	push   ebp
65002002:	push   esi
65002003:	push   edi
65002004:	xor    edi,edi
65002006:	push   edi
65002007:	mov    ecx,0x6502d4ec
6500200c:	call   0x65011d01
65002011:	mov    esi,eax
65002013:	test   esi,esi
65002015:	lea    ebp,[edi+0x1]
65002018:	je     0x65002067
6500201a:	mov    ebx,DWORD PTR [esp+0x14]
6500201e:	mov    edi,edi
65002020:	test   edi,edi
65002022:	jne    0x65002067
65002024:	mov    eax,DWORD PTR [esp+0x18]
65002028:	mov    ecx,ebx
6500202a:	shr    ecx,0x4
6500202d:	add    ecx,0x1
65002030:	push   eax
65002031:	movzx  edx,cx
65002034:	push   edx
65002035:	push   0x6
65002037:	push   esi
65002038:	call   DWORD PTR ds:0x65024034
6500203e:	test   eax,eax
65002040:	je     0x65002053
65002042:	push   ebx
65002043:	push   eax
65002044:	push   esi
65002045:	call   0x65001f90
6500204a:	mov    edi,eax
6500204c:	add    esp,0xc
6500204f:	test   edi,edi
65002051:	jne    0x6500206e
65002053:	push   ebp
65002054:	mov    ecx,0x6502d4ec
65002059:	call   0x65011d01
6500205e:	mov    esi,eax
65002060:	add    ebp,0x1
65002063:	test   esi,esi
65002065:	jne    0x65002020
65002067:	pop    edi
65002068:	pop    esi
65002069:	pop    ebp
6500206a:	xor    eax,eax
6500206c:	pop    ebx
6500206d:	ret    
6500206e:	pop    edi
6500206f:	mov    eax,esi
65002071:	pop    esi
65002072:	pop    ebp
65002073:	pop    ebx
65002074:	ret    
65002075:	int3   
65002076:	int3   
65002077:	int3   
65002078:	int3   
65002079:	int3   
6500207a:	int3   
6500207b:	int3   
6500207c:	int3   
6500207d:	int3   
6500207e:	int3   
6500207f:	int3   
65002080:	push   0xffffffff
65002082:	push   0x650226a8
65002087:	mov    eax,fs:0x0
6500208d:	push   eax
6500208e:	push   ecx
6500208f:	push   esi
65002090:	mov    eax,ds:0x6502c09c
65002095:	xor    eax,esp
65002097:	push   eax
65002098:	lea    eax,[esp+0xc]
6500209c:	mov    fs:0x0,eax
650020a2:	mov    esi,ecx
650020a4:	mov    DWORD PTR [esp+0x8],esi
650020a8:	call   0x650120d7
650020ad:	xor    eax,eax
650020af:	mov    DWORD PTR [esp+0x14],eax
650020b3:	lea    ecx,[esi+0xc]
650020b6:	mov    DWORD PTR [esi],0x650266ec
650020bc:	push   0xffffffff
650020be:	mov    DWORD PTR [ecx+0x14],eax
650020c1:	mov    DWORD PTR [ecx+0x18],0xf
650020c8:	push   eax
650020c9:	mov    BYTE PTR [ecx+0x4],al
650020cc:	mov    eax,DWORD PTR [esp+0x24]
650020d0:	push   eax
650020d1:	call   0x650017e0
650020d6:	mov    eax,esi
650020d8:	mov    ecx,DWORD PTR [esp+0xc]
650020dc:	mov    DWORD PTR fs:0x0,ecx
650020e3:	pop    ecx
650020e4:	pop    esi
650020e5:	add    esp,0x10
650020e8:	ret    0x4
650020eb:	int3   
650020ec:	int3   
650020ed:	int3   
650020ee:	int3   
650020ef:	int3   
650020f0:	push   esi
650020f1:	mov    esi,ecx
650020f3:	mov    DWORD PTR [esi],0x650266ec
650020f9:	cmp    DWORD PTR [esi+0x24],0x10
650020fd:	jb     0x6500210b
650020ff:	mov    eax,DWORD PTR [esi+0x10]
65002102:	push   eax
65002103:	call   0x650120d2
65002108:	add    esp,0x4
6500210b:	xor    eax,eax
6500210d:	mov    DWORD PTR [esi+0x24],0xf
65002114:	mov    DWORD PTR [esi+0x20],eax
65002117:	mov    BYTE PTR [esi+0x10],al
6500211a:	mov    ecx,esi
6500211c:	pop    esi
6500211d:	jmp    0x650121a6
65002122:	int3   
65002123:	int3   
65002124:	int3   
65002125:	int3   
65002126:	int3   
65002127:	int3   
65002128:	int3   
65002129:	int3   
6500212a:	int3   
6500212b:	int3   
6500212c:	int3   
6500212d:	int3   
6500212e:	int3   
6500212f:	int3   
65002130:	push   0xffffffff
65002132:	push   0x65022678
65002137:	mov    eax,fs:0x0
6500213d:	push   eax
6500213e:	push   ecx
6500213f:	push   esi
65002140:	push   edi
65002141:	mov    eax,ds:0x6502c09c
65002146:	xor    eax,esp
65002148:	push   eax
65002149:	lea    eax,[esp+0x10]
6500214d:	mov    fs:0x0,eax
65002153:	mov    esi,ecx
65002155:	mov    DWORD PTR [esp+0xc],esi
65002159:	mov    edi,DWORD PTR [esp+0x20]
6500215d:	push   edi
6500215e:	call   0x6501214e
65002163:	xor    edx,edx
65002165:	mov    DWORD PTR [esp+0x18],edx
65002169:	push   0xffffffff
6500216b:	lea    ecx,[esi+0xc]
6500216e:	mov    DWORD PTR [esi],0x650266ec
65002174:	lea    eax,[edi+0xc]
65002177:	push   edx
65002178:	mov    DWORD PTR [ecx+0x18],0xf
6500217f:	mov    DWORD PTR [ecx+0x14],edx
65002182:	push   eax
65002183:	mov    BYTE PTR [ecx+0x4],dl
65002186:	call   0x650017e0
6500218b:	mov    eax,esi
6500218d:	mov    ecx,DWORD PTR [esp+0x10]
65002191:	mov    DWORD PTR fs:0x0,ecx
65002198:	pop    ecx
65002199:	pop    edi
6500219a:	pop    esi
6500219b:	add    esp,0x10
6500219e:	ret    0x4
650021a1:	int3   
650021a2:	int3   
650021a3:	int3   
650021a4:	int3   
650021a5:	int3   
650021a6:	int3   
650021a7:	int3   
650021a8:	int3   
650021a9:	int3   
650021aa:	int3   
650021ab:	int3   
650021ac:	int3   
650021ad:	int3   
650021ae:	int3   
650021af:	int3   
650021b0:	push   ebp
650021b1:	mov    ebp,esp
650021b3:	and    esp,0xfffffff8
650021b6:	push   0xffffffff
650021b8:	push   0x65022f1b
650021bd:	mov    eax,fs:0x0
650021c3:	push   eax
650021c4:	sub    esp,0x428
650021ca:	mov    eax,ds:0x6502c09c
650021cf:	xor    eax,esp
650021d1:	mov    DWORD PTR [esp+0x420],eax
650021d8:	push   ebx
650021d9:	push   esi
650021da:	push   edi
650021db:	mov    eax,ds:0x6502c09c
650021e0:	xor    eax,esp
650021e2:	push   eax
650021e3:	lea    eax,[esp+0x438]
650021ea:	mov    fs:0x0,eax
650021f0:	mov    eax,DWORD PTR [ebp+0x10]
650021f3:	mov    esi,DWORD PTR [ebp+0x8]
650021f6:	mov    ebx,DWORD PTR [ebp+0xc]
650021f9:	lea    ecx,[esp+0x224]
65002200:	push   ecx
65002201:	push   0x100
65002206:	mov    DWORD PTR [esp+0x1c],esi
6500220a:	mov    DWORD PTR [esp+0x20],eax
6500220e:	mov    DWORD PTR [esp+0x18],0x0
65002216:	call   0x6500e1c0
6500221b:	call   eax
6500221d:	cmp    eax,0x100
65002222:	jbe    0x65002235
65002224:	push   0x650266dc
65002229:	mov    ecx,esi
6500222b:	call   0x650025a0
65002230:	jmp    0x650023c7
65002235:	lea    edx,[esp+0x1c]
65002239:	push   edx
6500223a:	push   0x0
6500223c:	lea    eax,[esp+0x22c]
65002243:	push   0x650266e0
65002248:	push   eax
65002249:	call   0x6500e240
6500224e:	call   eax
65002250:	test   eax,eax
65002252:	je     0x65002224
65002254:	mov    edi,DWORD PTR ds:0x65024044
6500225a:	xor    esi,esi
6500225c:	lea    esp,[esp+0x0]
65002260:	cmp    esi,0x708
65002266:	je     0x65002345
6500226c:	lea    ecx,[esp+0x1c]
65002270:	push   ecx
65002271:	call   0x6500e0a0
65002276:	call   eax
65002278:	test   eax,eax
6500227a:	jne    0x6500228d
6500227c:	push   esi
6500227d:	call   edi
6500227f:	add    esi,0xc8
65002285:	cmp    esi,0x7d0
6500228b:	jne    0x65002260
6500228d:	xor    esi,esi
6500228f:	cmp    esi,0x708
65002295:	je     0x65002345
6500229b:	lea    edx,[esp+0x1c]
6500229f:	push   0x0
650022a1:	push   edx
650022a2:	call   0x6500e2c0
650022a7:	call   eax
650022a9:	test   eax,eax
650022ab:	jne    0x650022be
650022ad:	push   esi
650022ae:	call   edi
650022b0:	add    esi,0xc8
650022b6:	cmp    esi,0x7d0
650022bc:	jne    0x6500228f
650022be:	lea    eax,[esp+0x1c]
650022c2:	lea    edx,[eax+0x2]
650022c5:	mov    cx,WORD PTR [eax]
650022c8:	add    eax,0x2
650022cb:	test   cx,cx
650022ce:	jne    0x650022c5
650022d0:	mov    ecx,DWORD PTR [esp+0x18]
650022d4:	sub    eax,edx
650022d6:	sar    eax,1
650022d8:	push   eax
650022d9:	lea    eax,[esp+0x20]
650022dd:	push   eax
650022de:	call   0x65002af0
650022e3:	lea    ecx,[esp+0x1c]
650022e7:	push   ecx
650022e8:	lea    ecx,[esp+0x14]
650022ec:	call   0x650025a0
650022f1:	push   0x650266e8
650022f6:	lea    ecx,[esp+0x14]
650022fa:	mov    DWORD PTR [esp+0x444],0x0
65002305:	call   0x65002670
6500230a:	mov    eax,DWORD PTR [ebx]
6500230c:	mov    ecx,DWORD PTR [eax-0xc]
6500230f:	push   ecx
65002310:	push   eax
65002311:	lea    ecx,[esp+0x18]
65002315:	call   0x650029f0
6500231a:	mov    esi,DWORD PTR [esp+0x10]
6500231e:	mov    ecx,DWORD PTR [esi-0x10]
65002321:	mov    edx,DWORD PTR [ecx]
65002323:	mov    eax,DWORD PTR [edx+0x10]
65002326:	add    esi,0xfffffff0
65002329:	call   eax
6500232b:	cmp    DWORD PTR [esi+0xc],0x0
6500232f:	lea    edx,[esi+0xc]
65002332:	jl     0x65002357
65002334:	cmp    eax,DWORD PTR [esi]
65002336:	jne    0x65002357
65002338:	mov    edi,esi
6500233a:	mov    ecx,0x1
6500233f:	lock xadd DWORD PTR [edx],ecx
65002343:	jmp    0x65002393
65002345:	mov    esi,DWORD PTR [esp+0x14]
65002349:	push   0x650266dc
6500234e:	mov    ecx,esi
65002350:	call   0x650025a0
65002355:	jmp    0x650023c7
65002357:	mov    ecx,DWORD PTR [esi+0x4]
6500235a:	mov    edx,DWORD PTR [eax]
6500235c:	mov    edx,DWORD PTR [edx]
6500235e:	push   0x2
65002360:	push   ecx
65002361:	mov    ecx,eax
65002363:	call   edx
65002365:	mov    edi,eax
65002367:	test   edi,edi
65002369:	jne    0x65002370
6500236b:	jmp    0x65001bb0
65002370:	mov    eax,DWORD PTR [esi+0x4]
65002373:	mov    DWORD PTR [edi+0x4],eax
65002376:	mov    eax,DWORD PTR [esi+0x4]
65002379:	lea    ecx,[eax+eax*1+0x2]
6500237d:	push   ecx
6500237e:	add    esi,0x10
65002381:	lea    edx,[eax+eax*1+0x2]
65002385:	push   esi
65002386:	push   edx
65002387:	lea    eax,[edi+0x10]
6500238a:	push   eax
6500238b:	call   0x65012243
65002390:	add    esp,0x10
65002393:	mov    esi,DWORD PTR [esp+0x14]
65002397:	mov    DWORD PTR [esp+0x440],0xffffffff
650023a2:	mov    eax,DWORD PTR [esp+0x10]
650023a6:	add    edi,0x10
650023a9:	add    eax,0xfffffff0
650023ac:	mov    DWORD PTR [esi],edi
650023ae:	lea    ecx,[eax+0xc]
650023b1:	or     edx,0xffffffff
650023b4:	lock xadd DWORD PTR [ecx],edx
650023b8:	dec    edx
650023b9:	test   edx,edx
650023bb:	jg     0x650023c7
650023bd:	mov    ecx,DWORD PTR [eax]
650023bf:	mov    edx,DWORD PTR [ecx]
650023c1:	push   eax
650023c2:	mov    eax,DWORD PTR [edx+0x4]
650023c5:	call   eax
650023c7:	mov    eax,esi
650023c9:	mov    ecx,DWORD PTR [esp+0x438]
650023d0:	mov    DWORD PTR fs:0x0,ecx
650023d7:	pop    ecx
650023d8:	pop    edi
650023d9:	pop    esi
650023da:	pop    ebx
650023db:	mov    ecx,DWORD PTR [esp+0x420]
650023e2:	xor    ecx,esp
650023e4:	call   0x6501292c
650023e9:	mov    esp,ebp
650023eb:	pop    ebp
650023ec:	ret    
650023ed:	int3   
650023ee:	int3   
650023ef:	int3   
650023f0:	push   0xffffffff
650023f2:	push   0x65022ef0
650023f7:	mov    eax,fs:0x0
650023fd:	push   eax
650023fe:	sub    esp,0x4c
65002401:	push   ebx
65002402:	push   esi
65002403:	push   edi
65002404:	mov    eax,ds:0x6502c09c
65002409:	xor    eax,esp
6500240b:	push   eax
6500240c:	lea    eax,[esp+0x5c]
65002410:	mov    fs:0x0,eax
65002416:	xor    ebx,ebx
65002418:	push   ebx
65002419:	push   0x80
6500241e:	push   0x2
65002420:	push   ebx
65002421:	push   ebx
65002422:	mov    DWORD PTR [esp+0x78],ebx
65002426:	mov    edi,DWORD PTR [esp+0x80]
6500242d:	push   0x40000000
65002432:	push   edi
65002433:	call   0x6500e130
65002438:	call   eax
6500243a:	mov    esi,eax
6500243c:	mov    DWORD PTR [esp+0x10],esi
65002440:	cmp    esi,0xffffffff
65002443:	mov    BYTE PTR [esp+0x64],0x1
65002448:	push   ebx
65002449:	jne    0x6500248b
6500244b:	push   0x650266de
65002450:	lea    ecx,[esp+0x20]
65002454:	mov    DWORD PTR [esp+0x38],0xf
6500245c:	mov    DWORD PTR [esp+0x34],ebx
65002460:	mov    BYTE PTR [esp+0x24],bl
65002464:	call   0x650018c0
65002469:	lea    eax,[esp+0x18]
6500246d:	push   eax
6500246e:	lea    ecx,[esp+0x38]
65002472:	mov    BYTE PTR [esp+0x68],0x2
65002477:	call   0x65002080
6500247c:	push   0x6502a034
65002481:	lea    ecx,[esp+0x38]
65002485:	push   ecx
65002486:	call   0x650124d6
6500248b:	mov    eax,DWORD PTR [esp+0x78]
6500248f:	mov    ecx,DWORD PTR [esp+0x74]
65002493:	lea    edx,[esp+0x18]
65002497:	push   edx
65002498:	push   eax
65002499:	push   ecx
6500249a:	push   esi
6500249b:	call   DWORD PTR ds:0x65024080
650024a1:	test   eax,eax
650024a3:	jne    0x650024e6
650024a5:	push   ebx
650024a6:	push   0x650266de
650024ab:	lea    ecx,[esp+0x20]
650024af:	mov    DWORD PTR [esp+0x38],0xf
650024b7:	mov    DWORD PTR [esp+0x34],ebx
650024bb:	mov    BYTE PTR [esp+0x24],bl
650024bf:	call   0x650018c0
650024c4:	lea    edx,[esp+0x18]
650024c8:	push   edx
650024c9:	lea    ecx,[esp+0x38]
650024cd:	mov    BYTE PTR [esp+0x68],0x3
650024d2:	call   0x65002080
650024d7:	push   0x6502a034
650024dc:	lea    eax,[esp+0x38]
650024e0:	push   eax
650024e1:	call   0x650124d6
650024e6:	cmp    esi,ebx
650024e8:	je     0x65002500
650024ea:	call   DWORD PTR ds:0x6502403c
650024f0:	push   esi
650024f1:	mov    ebx,eax
650024f3:	call   DWORD PTR ds:0x65024038
650024f9:	push   ebx
650024fa:	call   DWORD PTR ds:0x65024090
65002500:	lea    eax,[edi-0x10]
65002503:	mov    DWORD PTR [esp+0x64],0xffffffff
6500250b:	lea    ecx,[eax+0xc]
6500250e:	or     edx,0xffffffff
65002511:	lock xadd DWORD PTR [ecx],edx
65002515:	dec    edx
65002516:	test   edx,edx
65002518:	jg     0x65002524
6500251a:	mov    ecx,DWORD PTR [eax]
6500251c:	mov    edx,DWORD PTR [ecx]
6500251e:	push   eax
6500251f:	mov    eax,DWORD PTR [edx+0x4]
65002522:	call   eax
65002524:	mov    ecx,DWORD PTR [esp+0x5c]
65002528:	mov    DWORD PTR fs:0x0,ecx
6500252f:	pop    ecx
65002530:	pop    edi
65002531:	pop    esi
65002532:	pop    ebx
65002533:	add    esp,0x58
65002536:	ret    
65002537:	int3   
65002538:	int3   
65002539:	int3   
6500253a:	int3   
6500253b:	int3   
6500253c:	int3   
6500253d:	int3   
6500253e:	int3   
6500253f:	int3   
65002540:	sub    esp,0x8
65002543:	mov    DWORD PTR [esp],0x0
6500254a:	mov    DWORD PTR [esp+0x4],0x0
65002552:	call   DWORD PTR ds:0x6502c06c
65002558:	mov    eax,DWORD PTR [esp+0x10]
6500255c:	mov    eax,DWORD PTR [eax]
6500255e:	lea    ecx,[esp+0x4]
65002562:	push   ecx
65002563:	push   0x0
65002565:	lea    edx,[esp+0x8]
65002569:	push   edx
6500256a:	push   0x0
6500256c:	push   0x0
6500256e:	push   0x5
65002570:	push   0x1
65002572:	push   eax
65002573:	call   0x6500e570
65002578:	call   eax
6500257a:	test   eax,eax
6500257c:	jne    0x6500259a
6500257e:	mov    ecx,DWORD PTR [esp]
65002581:	mov    eax,DWORD PTR [esp+0xc]
65002585:	mov    eax,DWORD PTR [eax]
65002587:	push   0x0
65002589:	push   ecx
6500258a:	push   0x0
6500258c:	push   0x0
6500258e:	push   0x4
65002590:	push   0x1
65002592:	push   eax
65002593:	call   0x6500e600
65002598:	call   eax
6500259a:	add    esp,0x8
6500259d:	ret    
6500259e:	int3   
6500259f:	int3   
650025a0:	push   0xffffffff
650025a2:	push   0x65022bb8
650025a7:	mov    eax,fs:0x0
650025ad:	push   eax
650025ae:	push   ecx
650025af:	push   esi
650025b0:	push   edi
650025b1:	mov    eax,ds:0x6502c09c
650025b6:	xor    eax,esp
650025b8:	push   eax
650025b9:	lea    eax,[esp+0x10]
650025bd:	mov    fs:0x0,eax
650025c3:	mov    edi,ecx
650025c5:	mov    DWORD PTR [esp+0xc],edi
650025c9:	mov    eax,ds:0x6502d560
650025ce:	mov    edx,DWORD PTR [eax+0xc]
650025d1:	mov    ecx,0x6502d560
650025d6:	call   edx
650025d8:	add    eax,0x10
650025db:	mov    DWORD PTR [edi],eax
650025dd:	mov    edx,DWORD PTR [esp+0x20]
650025e1:	test   edx,edx
650025e3:	mov    DWORD PTR [esp+0x18],0x0
650025eb:	je     0x65002612
650025ed:	test   edx,0xffff0000
650025f3:	jne    0x65002616
650025f5:	movzx  esi,dx
650025f8:	push   0x0
650025fa:	push   esi
650025fb:	call   0x65002000
65002600:	add    esp,0x8
65002603:	test   eax,eax
65002605:	je     0x65002638
65002607:	push   esi
65002608:	push   eax
65002609:	mov    ecx,edi
6500260b:	call   0x65002920
65002610:	jmp    0x65002638
65002612:	xor    eax,eax
65002614:	jmp    0x6500262f
65002616:	mov    eax,edx
65002618:	lea    esi,[eax+0x2]
6500261b:	jmp    0x65002620
6500261d:	lea    ecx,[ecx+0x0]
65002620:	mov    cx,WORD PTR [eax]
65002623:	add    eax,0x2
65002626:	test   cx,cx
65002629:	jne    0x65002620
6500262b:	sub    eax,esi
6500262d:	sar    eax,1
6500262f:	push   eax
65002630:	push   edx
65002631:	mov    ecx,edi
65002633:	call   0x65002af0
65002638:	mov    eax,edi
6500263a:	mov    ecx,DWORD PTR [esp+0x10]
6500263e:	mov    DWORD PTR fs:0x0,ecx
65002645:	pop    ecx
65002646:	pop    edi
65002647:	pop    esi
65002648:	add    esp,0x10
6500264b:	ret    0x4
6500264e:	int3   
6500264f:	int3   
65002650:	mov    eax,DWORD PTR [esp+0x4]
65002654:	mov    eax,DWORD PTR [eax]
65002656:	push   esi
65002657:	mov    esi,ecx
65002659:	mov    ecx,DWORD PTR [eax-0xc]
6500265c:	push   ecx
6500265d:	push   eax
6500265e:	mov    ecx,esi
65002660:	call   0x650029f0
65002665:	mov    eax,esi
65002667:	pop    esi
65002668:	ret    0x4
6500266b:	int3   
6500266c:	int3   
6500266d:	int3   
6500266e:	int3   
6500266f:	int3   
65002670:	push   0xffffffff
65002672:	push   0x65022b88
65002677:	mov    eax,fs:0x0
6500267d:	push   eax
6500267e:	push   ecx
6500267f:	push   esi
65002680:	mov    eax,ds:0x6502c09c
65002685:	xor    eax,esp
65002687:	push   eax
65002688:	lea    eax,[esp+0xc]
6500268c:	mov    fs:0x0,eax
65002692:	mov    esi,ecx
65002694:	mov    eax,DWORD PTR [esi]
65002696:	mov    ecx,DWORD PTR [eax-0x10]
65002699:	test   ecx,ecx
6500269b:	je     0x650026a8
6500269d:	mov    edx,DWORD PTR [ecx]
6500269f:	mov    eax,DWORD PTR [edx+0x10]
650026a2:	call   eax
650026a4:	test   eax,eax
650026a6:	jne    0x650026b8
650026a8:	mov    edx,DWORD PTR ds:0x6502d560
650026ae:	mov    eax,DWORD PTR [edx+0x10]
650026b1:	mov    ecx,0x6502d560
650026b6:	call   eax
650026b8:	mov    ecx,DWORD PTR [esp+0x1c]
650026bc:	push   eax
650026bd:	push   ecx
650026be:	lea    ecx,[esp+0x10]
650026c2:	call   0x65002770
650026c7:	mov    DWORD PTR [esp+0x14],0x0
650026cf:	mov    eax,DWORD PTR [esp+0x8]
650026d3:	mov    ecx,DWORD PTR [eax-0xc]
650026d6:	push   ecx
650026d7:	push   eax
650026d8:	mov    ecx,esi
650026da:	call   0x650029f0
650026df:	mov    DWORD PTR [esp+0x14],0xffffffff
650026e7:	mov    eax,DWORD PTR [esp+0x8]
650026eb:	add    eax,0xfffffff0
650026ee:	lea    edx,[eax+0xc]
650026f1:	or     ecx,0xffffffff
650026f4:	lock xadd DWORD PTR [edx],ecx
650026f8:	dec    ecx
650026f9:	test   ecx,ecx
650026fb:	jg     0x65002707
650026fd:	mov    ecx,DWORD PTR [eax]
650026ff:	mov    edx,DWORD PTR [ecx]
65002701:	push   eax
65002702:	mov    eax,DWORD PTR [edx+0x4]
65002705:	call   eax
65002707:	mov    eax,esi
65002709:	mov    ecx,DWORD PTR [esp+0xc]
6500270d:	mov    DWORD PTR fs:0x0,ecx
65002714:	pop    ecx
65002715:	pop    esi
65002716:	add    esp,0x10
65002719:	ret    0x4
6500271c:	int3   
6500271d:	int3   
6500271e:	int3   
6500271f:	int3   
65002720:	mov    edx,DWORD PTR [esp+0x4]
65002724:	push   esi
65002725:	mov    esi,ecx
65002727:	mov    eax,edx
65002729:	push   edi
6500272a:	mov    DWORD PTR [esi+0x18],0xf
65002731:	mov    DWORD PTR [esi+0x14],0x0
65002738:	mov    BYTE PTR [esi+0x4],0x0
6500273c:	lea    edi,[eax+0x1]
6500273f:	nop
65002740:	mov    cl,BYTE PTR [eax]
65002742:	add    eax,0x1
65002745:	test   cl,cl
65002747:	jne    0x65002740
65002749:	sub    eax,edi
6500274b:	push   eax
6500274c:	push   edx
6500274d:	mov    ecx,esi
6500274f:	call   0x650018c0
65002754:	pop    edi
65002755:	mov    eax,esi
65002757:	pop    esi
65002758:	ret    0x4
6500275b:	int3   
6500275c:	int3   
6500275d:	int3   
6500275e:	int3   
6500275f:	int3   
65002760:	mov    eax,DWORD PTR [ecx]
65002762:	push   eax
65002763:	call   0x650120d2
65002768:	pop    ecx
65002769:	ret    
6500276a:	int3   
6500276b:	int3   
6500276c:	int3   
6500276d:	int3   
6500276e:	int3   
6500276f:	int3   
65002770:	push   0xffffffff
65002772:	push   0x65022b58
65002777:	mov    eax,fs:0x0
6500277d:	push   eax
6500277e:	push   ecx
6500277f:	push   esi
65002780:	push   edi
65002781:	mov    eax,ds:0x6502c09c
65002786:	xor    eax,esp
65002788:	push   eax
65002789:	lea    eax,[esp+0x10]
6500278d:	mov    fs:0x0,eax
65002793:	mov    esi,ecx
65002795:	mov    DWORD PTR [esp+0xc],esi
65002799:	mov    ecx,DWORD PTR [esp+0x24]
6500279d:	xor    eax,eax
6500279f:	test   ecx,ecx
650027a1:	setne  al
650027a4:	test   eax,eax
650027a6:	jne    0x650027b2
650027a8:	push   0x80004005
650027ad:	call   0x650010a0
650027b2:	mov    eax,DWORD PTR [ecx]
650027b4:	mov    edx,DWORD PTR [eax+0xc]
650027b7:	call   edx
650027b9:	add    eax,0x10
650027bc:	mov    DWORD PTR [esi],eax
650027be:	mov    eax,DWORD PTR [esp+0x20]
650027c2:	test   eax,eax
650027c4:	mov    DWORD PTR [esp+0x18],0x0
650027cc:	je     0x650027f2
650027ce:	test   eax,0xffff0000
650027d3:	jne    0x650027f2
650027d5:	movzx  edi,ax
650027d8:	push   0x0
650027da:	push   edi
650027db:	call   0x65002000
650027e0:	add    esp,0x8
650027e3:	test   eax,eax
650027e5:	je     0x650027fa
650027e7:	push   edi
650027e8:	push   eax
650027e9:	mov    ecx,esi
650027eb:	call   0x65002920
650027f0:	jmp    0x650027fa
650027f2:	push   eax
650027f3:	mov    ecx,esi
650027f5:	call   0x65002810
650027fa:	mov    eax,esi
650027fc:	mov    ecx,DWORD PTR [esp+0x10]
65002800:	mov    DWORD PTR fs:0x0,ecx
65002807:	pop    ecx
65002808:	pop    edi
65002809:	pop    esi
6500280a:	add    esp,0x10
6500280d:	ret    0x8
65002810:	push   ebx
65002811:	mov    ebx,DWORD PTR [esp+0x8]
65002815:	test   ebx,ebx
65002817:	push   ebp
65002818:	push   esi
65002819:	push   edi
6500281a:	mov    edi,ecx
6500281c:	je     0x65002894
6500281e:	call   DWORD PTR ds:0x6502c06c
65002824:	mov    ebp,DWORD PTR ds:0x6502401c
6500282a:	push   0x0
6500282c:	push   0x0
6500282e:	push   0xffffffff
65002830:	push   ebx
65002831:	push   0x0
65002833:	push   eax
65002834:	call   ebp
65002836:	mov    esi,eax
65002838:	sub    esi,0x1
6500283b:	test   esi,esi
6500283d:	jle    0x65002894
6500283f:	mov    eax,DWORD PTR [edi]
65002841:	mov    edx,DWORD PTR [eax-0x8]
65002844:	sub    eax,0x10
65002847:	mov    ecx,0x1
6500284c:	sub    ecx,DWORD PTR [eax+0xc]
6500284f:	sub    edx,esi
65002851:	or     ecx,edx
65002853:	jge    0x6500285d
65002855:	push   esi
65002856:	mov    ecx,edi
65002858:	call   0x65001e60
6500285d:	mov    eax,DWORD PTR [edi]
6500285f:	push   esi
65002860:	push   eax
65002861:	push   0xffffffff
65002863:	push   ebx
65002864:	push   0x0
65002866:	call   DWORD PTR ds:0x6502c06c
6500286c:	push   eax
6500286d:	call   ebp
6500286f:	mov    eax,DWORD PTR [edi]
65002871:	cmp    esi,DWORD PTR [eax-0x8]
65002874:	jg     0x6500288a
65002876:	mov    DWORD PTR [eax-0xc],esi
65002879:	mov    eax,DWORD PTR [edi]
6500287b:	mov    WORD PTR [eax+esi*2],0x0
65002881:	mov    eax,edi
65002883:	pop    edi
65002884:	pop    esi
65002885:	pop    ebp
65002886:	pop    ebx
65002887:	ret    0x4
6500288a:	push   0x80070057
6500288f:	call   0x650010a0
65002894:	mov    ecx,edi
65002896:	call   0x65002a80
6500289b:	mov    eax,edi
6500289d:	pop    edi
6500289e:	pop    esi
6500289f:	pop    ebp
650028a0:	pop    ebx
650028a1:	ret    0x4
650028a4:	int3   
650028a5:	int3   
650028a6:	int3   
650028a7:	int3   
650028a8:	int3   
650028a9:	int3   
650028aa:	int3   
650028ab:	int3   
650028ac:	int3   
650028ad:	int3   
650028ae:	int3   
650028af:	int3   
650028b0:	push   esi
650028b1:	mov    esi,DWORD PTR [esp+0x8]
650028b5:	mov    ecx,DWORD PTR [esi]
650028b7:	mov    eax,DWORD PTR [ecx]
650028b9:	mov    edx,DWORD PTR [eax+0x10]
650028bc:	push   edi
650028bd:	call   edx
650028bf:	cmp    DWORD PTR [esi+0xc],0x0
650028c3:	lea    ecx,[esi+0xc]
650028c6:	jl     0x650028dc
650028c8:	cmp    eax,DWORD PTR [esi]
650028ca:	jne    0x650028dc
650028cc:	mov    edi,esi
650028ce:	mov    eax,0x1
650028d3:	lock xadd DWORD PTR [ecx],eax
650028d7:	mov    eax,edi
650028d9:	pop    edi
650028da:	pop    esi
650028db:	ret    
650028dc:	mov    ecx,DWORD PTR [esi+0x4]
650028df:	mov    edx,DWORD PTR [eax]
650028e1:	mov    edx,DWORD PTR [edx]
650028e3:	push   0x2
650028e5:	push   ecx
650028e6:	mov    ecx,eax
650028e8:	call   edx
650028ea:	mov    edi,eax
650028ec:	test   edi,edi
650028ee:	jne    0x650028f5
650028f0:	jmp    0x65001bb0
650028f5:	mov    eax,DWORD PTR [esi+0x4]
650028f8:	mov    DWORD PTR [edi+0x4],eax
650028fb:	mov    eax,DWORD PTR [esi+0x4]
650028fe:	lea    eax,[eax+eax*1+0x2]
65002902:	push   eax
65002903:	add    esi,0x10
65002906:	push   esi
65002907:	push   eax
65002908:	lea    ecx,[edi+0x10]
6500290b:	push   ecx
6500290c:	call   0x65012243
65002911:	add    esp,0x10
65002914:	mov    eax,edi
65002916:	pop    edi
65002917:	pop    esi
65002918:	ret    
65002919:	int3   
6500291a:	int3   
6500291b:	int3   
6500291c:	int3   
6500291d:	int3   
6500291e:	int3   
6500291f:	int3   
65002920:	push   ebx
65002921:	push   esi
65002922:	mov    esi,DWORD PTR [esp+0x10]
65002926:	mov    eax,esi
65002928:	shr    eax,0x4
6500292b:	push   edi
6500292c:	mov    edi,DWORD PTR [esp+0x10]
65002930:	add    eax,0x1
65002933:	mov    ebx,ecx
65002935:	movzx  ecx,ax
65002938:	push   0x6
6500293a:	push   ecx
6500293b:	push   edi
6500293c:	call   DWORD PTR ds:0x65024030
65002942:	test   eax,eax
65002944:	je     0x65002957
65002946:	push   esi
65002947:	push   eax
65002948:	push   edi
65002949:	call   0x65001f90
6500294e:	mov    esi,eax
65002950:	add    esp,0xc
65002953:	test   esi,esi
65002955:	jne    0x6500295f
65002957:	pop    edi
65002958:	pop    esi
65002959:	xor    eax,eax
6500295b:	pop    ebx
6500295c:	ret    0x8
6500295f:	mov    eax,DWORD PTR [ebx]
65002961:	movzx  edi,WORD PTR [esi]
65002964:	sub    eax,0x10
65002967:	mov    edx,0x1
6500296c:	sub    edx,DWORD PTR [eax+0xc]
6500296f:	mov    eax,DWORD PTR [eax+0x8]
65002972:	sub    eax,edi
65002974:	or     edx,eax
65002976:	jge    0x65002980
65002978:	push   edi
65002979:	mov    ecx,ebx
6500297b:	call   0x65001e60
65002980:	movzx  eax,WORD PTR [esi]
65002983:	cmp    eax,0xffffffff
65002986:	push   ebp
65002987:	mov    ebp,DWORD PTR [ebx]
65002989:	lea    edx,[esi+0x2]
6500298c:	jne    0x650029a5
6500298e:	mov    eax,edx
65002990:	lea    esi,[eax+0x2]
65002993:	mov    cx,WORD PTR [eax]
65002996:	add    eax,0x2
65002999:	test   cx,cx
6500299c:	jne    0x65002993
6500299e:	sub    eax,esi
650029a0:	sar    eax,1
650029a2:	add    eax,0x1
650029a5:	lea    ecx,[eax+eax*1]
650029a8:	push   ecx
650029a9:	push   edx
650029aa:	lea    esi,[edi+edi*1]
650029ad:	push   esi
650029ae:	push   ebp
650029af:	call   0x65012243
650029b4:	push   eax
650029b5:	call   0x65001ef0
650029ba:	add    esp,0x14
650029bd:	test   edi,edi
650029bf:	pop    ebp
650029c0:	jl     0x650029df
650029c2:	mov    eax,DWORD PTR [ebx]
650029c4:	cmp    edi,DWORD PTR [eax-0x8]
650029c7:	jg     0x650029df
650029c9:	mov    DWORD PTR [eax-0xc],edi
650029cc:	mov    edx,DWORD PTR [ebx]
650029ce:	pop    edi
650029cf:	mov    WORD PTR [esi+edx*1],0x0
650029d5:	pop    esi
650029d6:	mov    eax,0x1
650029db:	pop    ebx
650029dc:	ret    0x8
650029df:	push   0x80070057
650029e4:	call   0x650010a0
650029e9:	int3   
650029ea:	int3   
650029eb:	int3   
650029ec:	int3   
650029ed:	int3   
650029ee:	int3   
650029ef:	int3   
650029f0:	push   ebx
650029f1:	push   ebp
650029f2:	push   esi
650029f3:	mov    esi,DWORD PTR [esp+0x10]
650029f7:	mov    ebp,ecx
650029f9:	mov    eax,DWORD PTR [ebp+0x0]
650029fc:	mov    ebx,DWORD PTR [eax-0xc]
650029ff:	mov    ecx,DWORD PTR [esp+0x14]
65002a03:	sub    esi,eax
65002a05:	mov    edx,0x1
65002a0a:	sub    edx,DWORD PTR [eax-0x4]
65002a0d:	mov    eax,DWORD PTR [eax-0x8]
65002a10:	push   edi
65002a11:	lea    edi,[ebx+ecx*1]
65002a14:	sub    eax,edi
65002a16:	sar    esi,1
65002a18:	or     edx,eax
65002a1a:	jge    0x65002a24
65002a1c:	push   edi
65002a1d:	mov    ecx,ebp
65002a1f:	call   0x65001e60
65002a24:	cmp    esi,ebx
65002a26:	mov    ecx,DWORD PTR [ebp+0x0]
65002a29:	ja     0x65002a32
65002a2b:	lea    edx,[ecx+esi*2]
65002a2e:	mov    DWORD PTR [esp+0x14],edx
65002a32:	mov    eax,DWORD PTR [esp+0x18]
65002a36:	mov    edx,DWORD PTR [esp+0x14]
65002a3a:	add    eax,eax
65002a3c:	push   eax
65002a3d:	push   edx
65002a3e:	push   eax
65002a3f:	lea    eax,[ecx+ebx*2]
65002a42:	push   eax
65002a43:	call   0x65012243
65002a48:	add    esp,0x10
65002a4b:	test   edi,edi
65002a4d:	jl     0x65002a6a
65002a4f:	mov    eax,DWORD PTR [ebp+0x0]
65002a52:	cmp    edi,DWORD PTR [eax-0x8]
65002a55:	jg     0x65002a6a
65002a57:	mov    DWORD PTR [eax-0xc],edi
65002a5a:	mov    ecx,DWORD PTR [ebp+0x0]
65002a5d:	mov    WORD PTR [ecx+edi*2],0x0
65002a63:	pop    edi
65002a64:	pop    esi
65002a65:	pop    ebp
65002a66:	pop    ebx
65002a67:	ret    0x8
65002a6a:	push   0x80070057
65002a6f:	call   0x650010a0
65002a74:	int3   
65002a75:	int3   
65002a76:	int3   
65002a77:	int3   
65002a78:	int3   
65002a79:	int3   
65002a7a:	int3   
65002a7b:	int3   
65002a7c:	int3   
65002a7d:	int3   
65002a7e:	int3   
65002a7f:	int3   
65002a80:	push   esi
65002a81:	mov    esi,ecx
65002a83:	mov    ecx,DWORD PTR [esi]
65002a85:	cmp    DWORD PTR [ecx-0xc],0x0
65002a89:	lea    eax,[ecx-0x10]
65002a8c:	push   edi
65002a8d:	mov    edi,DWORD PTR [eax]
65002a8f:	je     0x65002adf
65002a91:	cmp    DWORD PTR [eax+0xc],0x0
65002a95:	lea    edx,[eax+0xc]
65002a98:	jge    0x65002abb
65002a9a:	cmp    DWORD PTR [ecx-0x8],0x0
65002a9e:	jge    0x65002aaa
65002aa0:	push   0x80070057
65002aa5:	call   0x650010a0
65002aaa:	mov    DWORD PTR [ecx-0xc],0x0
65002ab1:	mov    eax,DWORD PTR [esi]
65002ab3:	pop    edi
65002ab4:	mov    WORD PTR [eax],0x0
65002ab9:	pop    esi
65002aba:	ret    
65002abb:	or     ecx,0xffffffff
65002abe:	lock xadd DWORD PTR [edx],ecx
65002ac2:	dec    ecx
65002ac3:	test   ecx,ecx
65002ac5:	jg     0x65002ad1
65002ac7:	mov    ecx,DWORD PTR [eax]
65002ac9:	mov    edx,DWORD PTR [ecx]
65002acb:	push   eax
65002acc:	mov    eax,DWORD PTR [edx+0x4]
65002acf:	call   eax
65002ad1:	mov    edx,DWORD PTR [edi]
65002ad3:	mov    eax,DWORD PTR [edx+0xc]
65002ad6:	mov    ecx,edi
65002ad8:	call   eax
65002ada:	add    eax,0x10
65002add:	mov    DWORD PTR [esi],eax
65002adf:	pop    edi
65002ae0:	pop    esi
65002ae1:	ret    
65002ae2:	int3   
65002ae3:	int3   
65002ae4:	int3   
65002ae5:	int3   
65002ae6:	int3   
65002ae7:	int3   
65002ae8:	int3   
65002ae9:	int3   
65002aea:	int3   
65002aeb:	int3   
65002aec:	int3   
65002aed:	int3   
65002aee:	int3   
65002aef:	int3   
65002af0:	push   ebx
65002af1:	mov    ebx,DWORD PTR [esp+0xc]
65002af5:	test   ebx,ebx
65002af7:	push   ebp
65002af8:	mov    ebp,ecx
65002afa:	jne    0x65002b06
65002afc:	call   0x65002a80
65002b01:	pop    ebp
65002b02:	pop    ebx
65002b03:	ret    0x8
65002b06:	push   esi
65002b07:	mov    esi,DWORD PTR [esp+0x10]
65002b0b:	test   esi,esi
65002b0d:	jne    0x65002b19
65002b0f:	push   0x80070057
65002b14:	call   0x650010a0
65002b19:	mov    eax,DWORD PTR [ebp+0x0]
65002b1c:	mov    edx,DWORD PTR [eax-0x8]
65002b1f:	mov    ecx,0x1
65002b24:	sub    ecx,DWORD PTR [eax-0x4]
65002b27:	sub    esi,eax
65002b29:	sub    edx,ebx
65002b2b:	sar    esi,1
65002b2d:	or     ecx,edx
65002b2f:	push   edi
65002b30:	mov    edi,DWORD PTR [eax-0xc]
65002b33:	jge    0x65002b3d
65002b35:	push   ebx
65002b36:	mov    ecx,ebp
65002b38:	call   0x65001e60
65002b3d:	mov    eax,DWORD PTR [ebp+0x0]
65002b40:	cmp    esi,edi
65002b42:	lea    edi,[ebx+ebx*1]
65002b45:	push   edi
65002b46:	ja     0x65002b55
65002b48:	lea    ecx,[eax+esi*2]
65002b4b:	push   ecx
65002b4c:	push   edi
65002b4d:	push   eax
65002b4e:	call   0x650122be
65002b53:	jmp    0x65002b61
65002b55:	mov    edx,DWORD PTR [esp+0x18]
65002b59:	push   edx
65002b5a:	push   edi
65002b5b:	push   eax
65002b5c:	call   0x65012243
65002b61:	add    esp,0x10
65002b64:	test   ebx,ebx
65002b66:	jl     0x65002b83
65002b68:	mov    eax,DWORD PTR [ebp+0x0]
65002b6b:	cmp    ebx,DWORD PTR [eax-0x8]
65002b6e:	jg     0x65002b83
65002b70:	mov    DWORD PTR [eax-0xc],ebx
65002b73:	mov    eax,DWORD PTR [ebp+0x0]
65002b76:	mov    WORD PTR [edi+eax*1],0x0
65002b7c:	pop    edi
65002b7d:	pop    esi
65002b7e:	pop    ebp
65002b7f:	pop    ebx
65002b80:	ret    0x8
65002b83:	push   0x80070057
65002b88:	call   0x650010a0
65002b8d:	int3   
65002b8e:	int3   
65002b8f:	int3   
65002b90:	push   esi
65002b91:	mov    esi,DWORD PTR [esp+0x8]
65002b95:	test   esi,esi
65002b97:	je     0x65002bc8
65002b99:	mov    eax,DWORD PTR [esp+0xc]
65002b9d:	test   eax,eax
65002b9f:	je     0x65002bc8
65002ba1:	mov    ecx,DWORD PTR [esp+0x10]
65002ba5:	mov    edx,DWORD PTR [esp+0x14]
65002ba9:	push   0x0
65002bab:	push   0x0
65002bad:	push   ecx
65002bae:	push   esi
65002baf:	push   0xffffffff
65002bb1:	push   eax
65002bb2:	push   0x0
65002bb4:	push   edx
65002bb5:	mov    BYTE PTR [esi],0x0
65002bb8:	call   DWORD PTR ds:0x65024020
65002bbe:	neg    eax
65002bc0:	sbb    eax,eax
65002bc2:	and    eax,esi
65002bc4:	pop    esi
65002bc5:	ret    0x10
65002bc8:	xor    eax,eax
65002bca:	pop    esi
65002bcb:	ret    0x10
65002bce:	int3   
65002bcf:	int3   
65002bd0:	mov    eax,DWORD PTR [esi]
65002bd2:	test   eax,eax
65002bd4:	je     0x65002be3
65002bd6:	push   eax
65002bd7:	call   DWORD PTR ds:0x65024000
65002bdd:	mov    DWORD PTR [esi],0x0
65002be3:	ret    
65002be4:	int3   
65002be5:	int3   
65002be6:	int3   
65002be7:	int3   
65002be8:	int3   
65002be9:	int3   
65002bea:	int3   
65002beb:	int3   
65002bec:	int3   
65002bed:	int3   
65002bee:	int3   
65002bef:	int3   
65002bf0:	push   ecx
65002bf1:	mov    eax,DWORD PTR [edi]
65002bf3:	lea    ecx,[esp]
65002bf6:	push   ecx
65002bf7:	mov    ecx,DWORD PTR [esp+0xc]
65002bfb:	push   esi
65002bfc:	add    eax,eax
65002bfe:	lea    edx,[esp+0x14]
65002c02:	push   edx
65002c03:	mov    DWORD PTR [esp+0xc],eax
65002c07:	mov    eax,DWORD PTR [esp+0x18]
65002c0b:	push   0x0
65002c0d:	mov    DWORD PTR [edi],0x0
65002c13:	mov    edx,DWORD PTR [ecx]
65002c15:	push   eax
65002c16:	push   edx
65002c17:	call   DWORD PTR ds:0x65024008
65002c1d:	test   eax,eax
65002c1f:	jne    0x65002c5e
65002c21:	mov    eax,DWORD PTR [esp+0xc]
65002c25:	cmp    eax,0x1
65002c28:	je     0x65002c2f
65002c2a:	cmp    eax,0x2
65002c2d:	jne    0x65002c4a
65002c2f:	test   esi,esi
65002c31:	mov    eax,DWORD PTR [esp]
65002c34:	je     0x65002c58
65002c36:	test   eax,eax
65002c38:	je     0x65002c53
65002c3a:	test   al,0x1
65002c3c:	jne    0x65002c4a
65002c3e:	mov    ecx,eax
65002c40:	shr    ecx,1
65002c42:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
65002c48:	je     0x65002c58
65002c4a:	mov    eax,0xd
65002c4f:	pop    ecx
65002c50:	ret    0x8
65002c53:	mov    WORD PTR [esi],0x0
65002c58:	shr    eax,1
65002c5a:	mov    DWORD PTR [edi],eax
65002c5c:	xor    eax,eax
65002c5e:	pop    ecx
65002c5f:	ret    0x8
65002c62:	int3   
65002c63:	int3   
65002c64:	int3   
65002c65:	int3   
65002c66:	int3   
65002c67:	int3   
65002c68:	int3   
65002c69:	int3   
65002c6a:	int3   
65002c6b:	int3   
65002c6c:	int3   
65002c6d:	int3   
65002c6e:	int3   
65002c6f:	int3   
65002c70:	ret    
65002c71:	int3   
65002c72:	int3   
65002c73:	int3   
65002c74:	int3   
65002c75:	int3   
65002c76:	int3   
65002c77:	int3   
65002c78:	int3   
65002c79:	int3   
65002c7a:	int3   
65002c7b:	int3   
65002c7c:	int3   
65002c7d:	int3   
65002c7e:	int3   
65002c7f:	int3   
65002c80:	mov    eax,DWORD PTR [esp+0xc]
65002c84:	cmp    eax,0x4
65002c87:	mov    ecx,DWORD PTR [esp+0x8]
65002c8b:	mov    edx,DWORD PTR [esp+0x4]
65002c8f:	push   esi
65002c90:	push   edi
65002c91:	jb     0x65002ca7
65002c93:	mov    esi,DWORD PTR [edx]
65002c95:	cmp    esi,DWORD PTR [ecx]
65002c97:	jne    0x65002cab
65002c99:	sub    eax,0x4
65002c9c:	add    ecx,0x4
65002c9f:	add    edx,0x4
65002ca2:	cmp    eax,0x4
65002ca5:	jae    0x65002c93
65002ca7:	test   eax,eax
65002ca9:	je     0x65002d09
65002cab:	movzx  esi,BYTE PTR [edx]
65002cae:	movzx  edi,BYTE PTR [ecx]
65002cb1:	sub    esi,edi
65002cb3:	jne    0x65002cfa
65002cb5:	sub    eax,0x1
65002cb8:	add    ecx,0x1
65002cbb:	add    edx,0x1
65002cbe:	test   eax,eax
65002cc0:	je     0x65002d09
65002cc2:	movzx  esi,BYTE PTR [edx]
65002cc5:	movzx  edi,BYTE PTR [ecx]
65002cc8:	sub    esi,edi
65002cca:	jne    0x65002cfa
65002ccc:	sub    eax,0x1
65002ccf:	add    ecx,0x1
65002cd2:	add    edx,0x1
65002cd5:	test   eax,eax
65002cd7:	je     0x65002d09
65002cd9:	movzx  esi,BYTE PTR [edx]
65002cdc:	movzx  edi,BYTE PTR [ecx]
65002cdf:	sub    esi,edi
65002ce1:	jne    0x65002cfa
65002ce3:	sub    eax,0x1
65002ce6:	add    ecx,0x1
65002ce9:	add    edx,0x1
65002cec:	test   eax,eax
65002cee:	je     0x65002d09
65002cf0:	movzx  esi,BYTE PTR [edx]
65002cf3:	movzx  eax,BYTE PTR [ecx]
65002cf6:	sub    esi,eax
65002cf8:	je     0x65002d09
65002cfa:	test   esi,esi
65002cfc:	mov    eax,0x1
65002d01:	jg     0x65002d0b
65002d03:	pop    edi
65002d04:	or     eax,0xffffffff
65002d07:	pop    esi
65002d08:	ret    
65002d09:	xor    eax,eax
65002d0b:	pop    edi
65002d0c:	pop    esi
65002d0d:	ret    
65002d0e:	int3   
65002d0f:	int3   
65002d10:	push   0xffffffff
65002d12:	push   0x65022648
65002d17:	mov    eax,fs:0x0
65002d1d:	push   eax
65002d1e:	push   ecx
65002d1f:	push   esi
65002d20:	mov    eax,ds:0x6502c09c
65002d25:	xor    eax,esp
65002d27:	push   eax
65002d28:	lea    eax,[esp+0xc]
65002d2c:	mov    fs:0x0,eax
65002d32:	mov    esi,ecx
65002d34:	mov    DWORD PTR [esp+0x8],esi
65002d38:	call   0x650120d7
65002d3d:	xor    eax,eax
65002d3f:	mov    DWORD PTR [esp+0x14],eax
65002d43:	lea    ecx,[esi+0xc]
65002d46:	mov    DWORD PTR [esi],0x65024c14
65002d4c:	push   0xffffffff
65002d4e:	mov    DWORD PTR [ecx+0x14],eax
65002d51:	mov    DWORD PTR [ecx+0x18],0xf
65002d58:	push   eax
65002d59:	mov    BYTE PTR [ecx+0x4],al
65002d5c:	mov    eax,DWORD PTR [esp+0x24]
65002d60:	push   eax
65002d61:	call   0x650017e0
65002d66:	mov    eax,esi
65002d68:	mov    ecx,DWORD PTR [esp+0xc]
65002d6c:	mov    DWORD PTR fs:0x0,ecx
65002d73:	pop    ecx
65002d74:	pop    esi
65002d75:	add    esp,0x10
65002d78:	ret    0x4
65002d7b:	int3   
65002d7c:	int3   
65002d7d:	int3   
65002d7e:	int3   
65002d7f:	int3   
65002d80:	cmp    DWORD PTR [ecx+0x24],0x10
65002d84:	jb     0x65002d8a
65002d86:	mov    eax,DWORD PTR [ecx+0x10]
65002d89:	ret    
65002d8a:	lea    eax,[ecx+0x10]
65002d8d:	ret    
65002d8e:	int3   
65002d8f:	int3   
65002d90:	push   esi
65002d91:	mov    esi,ecx
65002d93:	mov    DWORD PTR [esi],0x65024c14
65002d99:	cmp    DWORD PTR [esi+0x24],0x10
65002d9d:	jb     0x65002dab
65002d9f:	mov    eax,DWORD PTR [esi+0x10]
65002da2:	push   eax
65002da3:	call   0x650120d2
65002da8:	add    esp,0x4
65002dab:	xor    eax,eax
65002dad:	mov    DWORD PTR [esi+0x24],0xf
65002db4:	mov    DWORD PTR [esi+0x20],eax
65002db7:	mov    ecx,esi
65002db9:	mov    BYTE PTR [esi+0x10],al
65002dbc:	call   0x650121a6
65002dc1:	test   BYTE PTR [esp+0x8],0x1
65002dc6:	je     0x65002dd1
65002dc8:	push   esi
65002dc9:	call   0x650120d2
65002dce:	add    esp,0x4
65002dd1:	mov    eax,esi
65002dd3:	pop    esi
65002dd4:	ret    0x4
65002dd7:	int3   
65002dd8:	int3   
65002dd9:	int3   
65002dda:	int3   
65002ddb:	int3   
65002ddc:	int3   
65002ddd:	int3   
65002dde:	int3   
65002ddf:	int3   
65002de0:	push   esi
65002de1:	mov    esi,ecx
65002de3:	mov    DWORD PTR [esi],0x65024c14
65002de9:	cmp    DWORD PTR [esi+0x24],0x10
65002ded:	jb     0x65002dfb
65002def:	mov    eax,DWORD PTR [esi+0x10]
65002df2:	push   eax
65002df3:	call   0x650120d2
65002df8:	add    esp,0x4
65002dfb:	xor    eax,eax
65002dfd:	mov    DWORD PTR [esi+0x24],0xf
65002e04:	mov    DWORD PTR [esi+0x20],eax
65002e07:	mov    BYTE PTR [esi+0x10],al
65002e0a:	mov    ecx,esi
65002e0c:	pop    esi
65002e0d:	jmp    0x650121a6
65002e12:	int3   
65002e13:	int3   
65002e14:	int3   
65002e15:	int3   
65002e16:	int3   
65002e17:	int3   
65002e18:	int3   
65002e19:	int3   
65002e1a:	int3   
65002e1b:	int3   
65002e1c:	int3   
65002e1d:	int3   
65002e1e:	int3   
65002e1f:	int3   
65002e20:	mov    eax,DWORD PTR [esp+0x4]
65002e24:	push   esi
65002e25:	push   eax
65002e26:	mov    esi,ecx
65002e28:	call   0x65002e40
65002e2d:	mov    DWORD PTR [esi],0x65024c2c
65002e33:	mov    eax,esi
65002e35:	pop    esi
65002e36:	ret    0x4
65002e39:	int3   
65002e3a:	int3   
65002e3b:	int3   
65002e3c:	int3   
65002e3d:	int3   
65002e3e:	int3   
65002e3f:	int3   
65002e40:	push   0xffffffff
65002e42:	push   0x65022618
65002e47:	mov    eax,fs:0x0
65002e4d:	push   eax
65002e4e:	push   ecx
65002e4f:	push   esi
65002e50:	push   edi
65002e51:	mov    eax,ds:0x6502c09c
65002e56:	xor    eax,esp
65002e58:	push   eax
65002e59:	lea    eax,[esp+0x10]
65002e5d:	mov    fs:0x0,eax
65002e63:	mov    esi,ecx
65002e65:	mov    DWORD PTR [esp+0xc],esi
65002e69:	mov    edi,DWORD PTR [esp+0x20]
65002e6d:	push   edi
65002e6e:	call   0x6501214e
65002e73:	xor    edx,edx
65002e75:	mov    DWORD PTR [esp+0x18],edx
65002e79:	push   0xffffffff
65002e7b:	lea    ecx,[esi+0xc]
65002e7e:	mov    DWORD PTR [esi],0x65024c14
65002e84:	lea    eax,[edi+0xc]
65002e87:	push   edx
65002e88:	mov    DWORD PTR [ecx+0x18],0xf
65002e8f:	mov    DWORD PTR [ecx+0x14],edx
65002e92:	push   eax
65002e93:	mov    BYTE PTR [ecx+0x4],dl
65002e96:	call   0x650017e0
65002e9b:	mov    eax,esi
65002e9d:	mov    ecx,DWORD PTR [esp+0x10]
65002ea1:	mov    DWORD PTR fs:0x0,ecx
65002ea8:	pop    ecx
65002ea9:	pop    edi
65002eaa:	pop    esi
65002eab:	add    esp,0x10
65002eae:	ret    0x4
65002eb1:	int3   
65002eb2:	int3   
65002eb3:	int3   
65002eb4:	int3   
65002eb5:	int3   
65002eb6:	int3   
65002eb7:	int3   
65002eb8:	int3   
65002eb9:	int3   
65002eba:	int3   
65002ebb:	int3   
65002ebc:	int3   
65002ebd:	int3   
65002ebe:	int3   
65002ebf:	int3   
65002ec0:	sub    esp,0x6c
65002ec3:	mov    eax,ds:0x6502c09c
65002ec8:	xor    eax,esp
65002eca:	mov    DWORD PTR [esp+0x68],eax
65002ece:	mov    eax,DWORD PTR [esp+0x74]
65002ed2:	movzx  ecx,BYTE PTR [eax+0xf]
65002ed6:	movzx  edx,BYTE PTR [eax+0xe]
65002eda:	push   esi
65002edb:	push   ecx
65002edc:	movzx  ecx,BYTE PTR [eax+0xd]
65002ee0:	push   edx
65002ee1:	movzx  edx,BYTE PTR [eax+0xc]
65002ee5:	push   ecx
65002ee6:	movzx  ecx,BYTE PTR [eax+0xb]
65002eea:	push   edx
65002eeb:	movzx  edx,BYTE PTR [eax+0xa]
65002eef:	mov    esi,DWORD PTR [esp+0x84]
65002ef6:	push   ecx
65002ef7:	movzx  ecx,BYTE PTR [eax+0x9]
65002efb:	push   edx
65002efc:	movzx  edx,BYTE PTR [eax+0x8]
65002f00:	push   ecx
65002f01:	movzx  ecx,WORD PTR [eax+0x6]
65002f05:	push   edx
65002f06:	movzx  edx,WORD PTR [eax+0x4]
65002f0a:	mov    eax,DWORD PTR [eax]
65002f0c:	push   ecx
65002f0d:	push   edx
65002f0e:	push   eax
65002f0f:	push   0x650266f4
65002f14:	push   0x32
65002f16:	push   0x6502672c
65002f1b:	mov    DWORD PTR [esp+0x3c],0x0
65002f23:	call   0x65006a60
65002f28:	add    esp,0xc
65002f2b:	push   eax
65002f2c:	lea    ecx,[esp+0x38]
65002f30:	push   0x64
65002f32:	push   ecx
65002f33:	call   0x6501347d
65002f38:	add    esp,0x38
65002f3b:	lea    edx,[esp+0x8]
65002f3f:	push   edx
65002f40:	mov    ecx,esi
65002f42:	call   0x650067c0
65002f47:	mov    ecx,DWORD PTR [esp+0x6c]
65002f4b:	mov    eax,esi
65002f4d:	pop    esi
65002f4e:	xor    ecx,esp
65002f50:	call   0x6501292c
65002f55:	add    esp,0x6c
65002f58:	ret    
65002f59:	int3   
65002f5a:	int3   
65002f5b:	int3   
65002f5c:	int3   
65002f5d:	int3   
65002f5e:	int3   
65002f5f:	int3   
65002f60:	push   0xffffffff
65002f62:	push   0x65022ea8
65002f67:	mov    eax,fs:0x0
65002f6d:	push   eax
65002f6e:	sub    esp,0x24
65002f71:	mov    eax,ds:0x6502c09c
65002f76:	xor    eax,esp
65002f78:	mov    DWORD PTR [esp+0x20],eax
65002f7c:	push   ebx
65002f7d:	push   ebp
65002f7e:	push   edi
65002f7f:	mov    eax,ds:0x6502c09c
65002f84:	xor    eax,esp
65002f86:	push   eax
65002f87:	lea    eax,[esp+0x34]
65002f8b:	mov    fs:0x0,eax
65002f91:	mov    DWORD PTR [esp+0x3c],0x0
65002f99:	call   DWORD PTR ds:0x6502c06c
65002f9f:	mov    eax,ds:0x65024ba8
65002fa4:	mov    ecx,DWORD PTR ds:0x65024bac
65002faa:	mov    edx,DWORD PTR ds:0x65024bb0
65002fb0:	mov    DWORD PTR [esp+0x20],eax
65002fb4:	mov    eax,ds:0x65024bb4
65002fb9:	mov    DWORD PTR [esp+0x2c],eax
65002fbd:	mov    eax,DWORD PTR [esp+0x44]
65002fc1:	mov    DWORD PTR [esp+0x24],ecx
65002fc5:	mov    DWORD PTR [esp+0x28],edx
65002fc9:	cmp    DWORD PTR [eax-0xc],0x0
65002fcd:	jle    0x65002fed
65002fcf:	lea    ebx,[esp+0x44]
65002fd3:	call   0x65006990
65002fd8:	mov    edi,ebx
65002fda:	call   0x65007350
65002fdf:	call   0x65006910
65002fe4:	call   0x65007350
65002fe9:	mov    eax,DWORD PTR [esp+0x44]
65002fed:	cmp    DWORD PTR [eax-0x4],0x1
65002ff1:	jle    0x65003004
65002ff3:	mov    ecx,DWORD PTR [eax-0xc]
65002ff6:	push   ecx
65002ff7:	lea    ecx,[esp+0x48]
65002ffb:	call   0x650019b0
65003000:	mov    eax,DWORD PTR [esp+0x44]
65003004:	lea    edx,[esp+0x20]
65003008:	push   edx
65003009:	push   eax
6500300a:	call   0x6500e9b0
6500300f:	call   eax
65003011:	test   eax,eax
65003013:	je     0x65003032
65003015:	mov    eax,ds:0x65024bb4
6500301a:	mov    edi,DWORD PTR ds:0x65024ba8
65003020:	mov    ebx,DWORD PTR ds:0x65024bac
65003026:	mov    ebp,DWORD PTR ds:0x65024bb0
6500302c:	mov    DWORD PTR [esp+0x1c],eax
65003030:	jmp    0x65003046
65003032:	mov    edx,DWORD PTR [esp+0x2c]
65003036:	mov    edi,DWORD PTR [esp+0x20]
6500303a:	mov    ebx,DWORD PTR [esp+0x24]
6500303e:	mov    ebp,DWORD PTR [esp+0x28]
65003042:	mov    DWORD PTR [esp+0x1c],edx
65003046:	mov    DWORD PTR [esp+0x3c],0xffffffff
6500304e:	mov    eax,DWORD PTR [esp+0x44]
65003052:	add    eax,0xfffffff0
65003055:	or     edx,0xffffffff
65003058:	lea    ecx,[eax+0xc]
6500305b:	lock xadd DWORD PTR [ecx],edx
6500305f:	dec    edx
65003060:	test   edx,edx
65003062:	jg     0x6500306e
65003064:	mov    ecx,DWORD PTR [eax]
65003066:	mov    edx,DWORD PTR [ecx]
65003068:	push   eax
65003069:	mov    eax,DWORD PTR [edx+0x4]
6500306c:	call   eax
6500306e:	mov    ecx,DWORD PTR [esp+0x1c]
65003072:	mov    DWORD PTR [esi],edi
65003074:	mov    DWORD PTR [esi+0x4],ebx
65003077:	mov    DWORD PTR [esi+0x8],ebp
6500307a:	mov    eax,esi
6500307c:	mov    DWORD PTR [esi+0xc],ecx
6500307f:	mov    ecx,DWORD PTR [esp+0x34]
65003083:	mov    DWORD PTR fs:0x0,ecx
6500308a:	pop    ecx
6500308b:	pop    edi
6500308c:	pop    ebp
6500308d:	pop    ebx
6500308e:	mov    ecx,DWORD PTR [esp+0x20]
65003092:	xor    ecx,esp
65003094:	call   0x6501292c
65003099:	add    esp,0x30
6500309c:	ret    
6500309d:	int3   
6500309e:	int3   
6500309f:	int3   
650030a0:	push   ebp
650030a1:	mov    ebp,esp
650030a3:	sub    esp,0x18
650030a6:	mov    eax,ds:0x6502c09c
650030ab:	xor    eax,ebp
650030ad:	mov    DWORD PTR [ebp-0x4],eax
650030b0:	mov    eax,DWORD PTR [ebp+0x8]
650030b3:	push   ebx
650030b4:	push   esi
650030b5:	push   edi
650030b6:	mov    DWORD PTR [ebp-0x14],eax
650030b9:	mov    DWORD PTR [ebp-0x18],0x0
650030c0:	call   DWORD PTR ds:0x6502c06c
650030c6:	movzx  ecx,BYTE PTR [ebp+0xc]
650030ca:	push   ecx
650030cb:	push   0x65026760
650030d0:	push   0x6
650030d2:	push   0x65026790
650030d7:	mov    ebx,eax
650030d9:	call   0x65006a60
650030de:	add    esp,0xc
650030e1:	push   eax
650030e2:	lea    edx,[ebp-0x10]
650030e5:	push   edx
650030e6:	call   0x65013402
650030eb:	add    esp,0xc
650030ee:	lea    eax,[ebp-0x10]
650030f1:	push   eax
650030f2:	call   DWORD PTR ds:0x6502404c
650030f8:	mov    esi,eax
650030fa:	add    esi,0x1
650030fd:	cmp    esi,0x3fffffff
65003103:	jg     0x65003131
65003105:	lea    eax,[esi+esi*1]
65003108:	call   0x65013030
6500310d:	mov    edi,esp
6500310f:	test   edi,edi
65003111:	je     0x65003131
65003113:	push   esi
65003114:	push   edi
65003115:	push   0xffffffff
65003117:	lea    ecx,[ebp-0x10]
6500311a:	push   ecx
6500311b:	push   0x0
6500311d:	push   ebx
6500311e:	mov    WORD PTR [edi],0x0
65003123:	call   DWORD PTR ds:0x6502401c
65003129:	neg    eax
6500312b:	sbb    eax,eax
6500312d:	and    eax,edi
6500312f:	jmp    0x65003133
65003131:	xor    eax,eax
65003133:	mov    esi,DWORD PTR [ebp-0x14]
65003136:	push   eax
65003137:	mov    ecx,esi
65003139:	call   0x650025a0
6500313e:	mov    eax,esi
65003140:	lea    esp,[ebp-0x24]
65003143:	pop    edi
65003144:	pop    esi
65003145:	pop    ebx
65003146:	mov    ecx,DWORD PTR [ebp-0x4]
65003149:	xor    ecx,ebp
6500314b:	call   0x6501292c
65003150:	mov    esp,ebp
65003152:	pop    ebp
65003153:	ret    
65003154:	int3   
65003155:	int3   
65003156:	int3   
65003157:	int3   
65003158:	int3   
65003159:	int3   
6500315a:	int3   
6500315b:	int3   
6500315c:	int3   
6500315d:	int3   
6500315e:	int3   
6500315f:	int3   
65003160:	push   0xffffffff
65003162:	push   0x65023419
65003167:	mov    eax,fs:0x0
6500316d:	push   eax
6500316e:	sub    esp,0x20
65003171:	push   ebx
65003172:	push   ebp
65003173:	push   esi
65003174:	push   edi
65003175:	mov    eax,ds:0x6502c09c
6500317a:	xor    eax,esp
6500317c:	push   eax
6500317d:	lea    eax,[esp+0x34]
65003181:	mov    fs:0x0,eax
65003187:	xor    ebx,ebx
65003189:	mov    DWORD PTR [esp+0x3c],ebx
6500318d:	mov    DWORD PTR [esp+0x18],ebx
65003191:	mov    eax,ds:0x6502d560
65003196:	mov    edx,DWORD PTR [eax+0xc]
65003199:	mov    ecx,0x6502d560
6500319e:	call   edx
650031a0:	mov    edi,DWORD PTR [esp+0x44]
650031a4:	add    eax,0x10
650031a7:	mov    DWORD PTR [edi],eax
650031a9:	mov    esi,DWORD PTR [esp+0x48]
650031ad:	mov    DWORD PTR [esp+0x3c],ebx
650031b1:	mov    eax,DWORD PTR [esi]
650031b3:	mov    ecx,0x1
650031b8:	sub    eax,0x10
650031bb:	cmp    DWORD PTR [eax+0xc],ecx
650031be:	mov    DWORD PTR [esp+0x18],ecx
650031c2:	jle    0x650031cf
650031c4:	mov    eax,DWORD PTR [eax+0x4]
650031c7:	push   eax
650031c8:	mov    ecx,esi
650031ca:	call   0x650019b0
650031cf:	mov    ebp,DWORD PTR [esi]
650031d1:	movzx  eax,WORD PTR [ebp+0x0]
650031d5:	cmp    ax,bx
650031d8:	je     0x65003479
650031de:	cmp    ax,0x41
650031e2:	jb     0x650031ee
650031e4:	cmp    ax,0x5a
650031e8:	jbe    0x6500341f
650031ee:	cmp    ax,0x61
650031f2:	jb     0x650031fe
650031f4:	cmp    ax,0x7a
650031f8:	jbe    0x6500341f
650031fe:	cmp    ax,0x30
65003202:	jb     0x65003219
65003204:	cmp    ax,0x39
65003208:	ja     0x65003219
6500320a:	movzx  ecx,BYTE PTR [ebp+0x0]
6500320e:	push   ecx
6500320f:	call   0x65006850
65003214:	jmp    0x65003469
65003219:	cmp    ax,0x20
6500321d:	jne    0x6500326b
6500321f:	mov    eax,DWORD PTR [edi]
65003221:	mov    ebx,DWORD PTR [eax-0xc]
65003224:	mov    ecx,0x1
65003229:	sub    ecx,DWORD PTR [eax-0x4]
6500322c:	mov    eax,DWORD PTR [eax-0x8]
6500322f:	lea    esi,[ebx+0x1]
65003232:	sub    eax,esi
65003234:	or     eax,ecx
65003236:	jge    0x65003240
65003238:	push   esi
65003239:	mov    ecx,edi
6500323b:	call   0x65001e60
65003240:	test   esi,esi
65003242:	mov    eax,DWORD PTR [edi]
65003244:	mov    WORD PTR [eax+ebx*2],0x2b
6500324a:	jl     0x6500348f
65003250:	mov    eax,DWORD PTR [edi]
65003252:	cmp    esi,DWORD PTR [eax-0x8]
65003255:	jg     0x6500348f
6500325b:	mov    DWORD PTR [eax-0xc],esi
6500325e:	mov    edx,DWORD PTR [edi]
65003260:	mov    WORD PTR [edx+esi*2],0x0
65003266:	jmp    0x65003469
6500326b:	cmp    ax,0x2d
6500326f:	je     0x6500341f
65003275:	cmp    ax,0x5f
65003279:	je     0x6500341f
6500327f:	cmp    ax,0x2e
65003283:	je     0x6500341f
65003289:	cmp    ax,0x21
6500328d:	je     0x6500341f
65003293:	cmp    ax,0x7e
65003297:	je     0x6500341f
6500329d:	cmp    ax,0x2a
650032a1:	je     0x6500341f
650032a7:	cmp    ax,0x27
650032ab:	je     0x6500341f
650032b1:	cmp    ax,0x28
650032b5:	je     0x6500341f
650032bb:	cmp    ax,0x29
650032bf:	je     0x6500341f
650032c5:	cmp    ax,0x7f
650032c9:	ja     0x65003300
650032cb:	movzx  eax,BYTE PTR [ebp+0x0]
650032cf:	push   eax
650032d0:	lea    ecx,[esp+0x20]
650032d4:	push   ecx
650032d5:	call   0x650030a0
650032da:	add    esp,0x8
650032dd:	push   eax
650032de:	mov    ecx,edi
650032e0:	mov    DWORD PTR [esp+0x40],0x1
650032e8:	call   0x65002650
650032ed:	lea    ecx,[esp+0x1c]
650032f1:	mov    BYTE PTR [esp+0x3c],0x0
650032f6:	call   0x65001990
650032fb:	jmp    0x65003469
65003300:	cmp    ax,0x7ff
65003304:	ja     0x65003375
65003306:	shr    eax,0x6
65003309:	or     eax,0xffffffc0
6500330c:	push   eax
6500330d:	lea    edx,[esp+0x24]
65003311:	push   edx
65003312:	call   0x650030a0
65003317:	add    esp,0x8
6500331a:	push   eax
6500331b:	mov    ecx,edi
6500331d:	mov    DWORD PTR [esp+0x40],0x2
65003325:	call   0x65002650
6500332a:	lea    ecx,[esp+0x20]
6500332e:	mov    BYTE PTR [esp+0x3c],0x0
65003333:	call   0x65001990
65003338:	movzx  eax,BYTE PTR [ebp+0x0]
6500333c:	and    eax,0xffffff3f
65003341:	or     eax,0xffffff80
65003344:	push   eax
65003345:	lea    ecx,[esp+0x28]
65003349:	push   ecx
6500334a:	call   0x650030a0
6500334f:	add    esp,0x8
65003352:	push   eax
65003353:	mov    ecx,edi
65003355:	mov    DWORD PTR [esp+0x40],0x3
6500335d:	call   0x65002650
65003362:	lea    ecx,[esp+0x24]
65003366:	mov    BYTE PTR [esp+0x3c],0x0
6500336b:	call   0x65001990
65003370:	jmp    0x65003469
65003375:	shr    ax,0xc
65003379:	lea    edx,[esp+0x28]
6500337d:	or     eax,0xffffffe0
65003380:	push   eax
65003381:	push   edx
65003382:	call   0x650030a0
65003387:	add    esp,0x8
6500338a:	push   eax
6500338b:	mov    ecx,edi
6500338d:	mov    DWORD PTR [esp+0x40],0x4
65003395:	call   0x65002650
6500339a:	lea    ecx,[esp+0x28]
6500339e:	mov    BYTE PTR [esp+0x3c],0x0
650033a3:	call   0x65001990
650033a8:	movzx  eax,WORD PTR [ebp+0x0]
650033ac:	shr    ax,0x6
650033b0:	lea    ecx,[esp+0x2c]
650033b4:	and    eax,0xffffff3f
650033b9:	or     eax,0xffffff80
650033bc:	push   eax
650033bd:	push   ecx
650033be:	call   0x650030a0
650033c3:	add    esp,0x8
650033c6:	push   eax
650033c7:	mov    ecx,edi
650033c9:	mov    DWORD PTR [esp+0x40],0x5
650033d1:	call   0x65002650
650033d6:	lea    ecx,[esp+0x2c]
650033da:	mov    BYTE PTR [esp+0x3c],0x0
650033df:	call   0x65001990
650033e4:	movzx  edx,BYTE PTR [ebp+0x0]
650033e8:	and    edx,0xffffff3f
650033ee:	or     edx,0xffffff80
650033f1:	push   edx
650033f2:	lea    eax,[esp+0x34]
650033f6:	push   eax
650033f7:	call   0x650030a0
650033fc:	add    esp,0x8
650033ff:	push   eax
65003400:	mov    ecx,edi
65003402:	mov    DWORD PTR [esp+0x40],0x6
6500340a:	call   0x65002650
6500340f:	lea    ecx,[esp+0x30]
65003413:	mov    BYTE PTR [esp+0x3c],0x0
65003418:	call   0x65001990
6500341d:	jmp    0x65003469
6500341f:	mov    cl,BYTE PTR [ebp+0x0]
65003422:	mov    eax,DWORD PTR [edi]
65003424:	mov    ebx,DWORD PTR [eax-0xc]
65003427:	mov    BYTE PTR [esp+0x14],cl
6500342b:	mov    ecx,0x1
65003430:	sub    ecx,DWORD PTR [eax-0x4]
65003433:	mov    eax,DWORD PTR [eax-0x8]
65003436:	lea    esi,[ebx+0x1]
65003439:	sub    eax,esi
6500343b:	or     eax,ecx
6500343d:	jge    0x65003447
6500343f:	push   esi
65003440:	mov    ecx,edi
65003442:	call   0x65001e60
65003447:	test   esi,esi
65003449:	movsx  dx,BYTE PTR [esp+0x14]
6500344f:	mov    eax,DWORD PTR [edi]
65003451:	mov    WORD PTR [eax+ebx*2],dx
65003455:	jl     0x6500348f
65003457:	mov    eax,DWORD PTR [edi]
65003459:	cmp    esi,DWORD PTR [eax-0x8]
6500345c:	jg     0x6500348f
6500345e:	mov    DWORD PTR [eax-0xc],esi
65003461:	mov    eax,DWORD PTR [edi]
65003463:	mov    WORD PTR [eax+esi*2],0x0
65003469:	movzx  eax,WORD PTR [ebp+0x2]
6500346d:	add    ebp,0x2
65003470:	test   ax,ax
65003473:	jne    0x650031de
65003479:	mov    eax,edi
6500347b:	mov    ecx,DWORD PTR [esp+0x34]
6500347f:	mov    DWORD PTR fs:0x0,ecx
65003486:	pop    ecx
65003487:	pop    edi
65003488:	pop    esi
65003489:	pop    ebp
6500348a:	pop    ebx
6500348b:	add    esp,0x2c
6500348e:	ret    
6500348f:	push   0x80070057
65003494:	call   0x650010a0
65003499:	int3   
6500349a:	int3   
6500349b:	int3   
6500349c:	int3   
6500349d:	int3   
6500349e:	int3   
6500349f:	int3   
650034a0:	push   0xffffffff
650034a2:	push   0x65022e79
650034a7:	mov    eax,fs:0x0
650034ad:	push   eax
650034ae:	sub    esp,0x48
650034b1:	push   ebx
650034b2:	push   esi
650034b3:	push   edi
650034b4:	mov    eax,ds:0x6502c09c
650034b9:	xor    eax,esp
650034bb:	push   eax
650034bc:	lea    eax,[esp+0x58]
650034c0:	mov    fs:0x0,eax
650034c6:	xor    ebx,ebx
650034c8:	mov    DWORD PTR [esp+0x60],ebx
650034cc:	mov    DWORD PTR [esp+0x10],ebx
650034d0:	mov    eax,ds:0x6502d560
650034d5:	mov    edx,DWORD PTR [eax+0xc]
650034d8:	mov    ecx,0x6502d560
650034dd:	call   edx
650034df:	mov    edi,DWORD PTR [esp+0x68]
650034e3:	add    eax,0x10
650034e6:	mov    DWORD PTR [edi],eax
650034e8:	mov    DWORD PTR [esp+0x60],ebx
650034ec:	mov    ecx,0x1
650034f1:	sub    ecx,DWORD PTR [eax-0x4]
650034f4:	mov    eax,DWORD PTR [eax-0x8]
650034f7:	sub    eax,0x800
650034fc:	cmp    BYTE PTR [esp+0x6c],bl
65003500:	mov    DWORD PTR [esp+0x10],0x1
65003508:	je     0x6500359b
6500350e:	or     eax,ecx
65003510:	jge    0x6500351e
65003512:	push   0x800
65003517:	mov    ecx,edi
65003519:	call   0x65001e60
6500351e:	mov    eax,DWORD PTR [edi]
65003520:	push   0x800
65003525:	push   eax
65003526:	call   0x6500e3d0
6500352b:	call   eax
6500352d:	test   eax,eax
6500352f:	jne    0x65003622
65003535:	push   0x65026798
6500353a:	push   0x22
6500353c:	push   0x650267cc
65003541:	call   0x65006a60
65003546:	mov    ecx,eax
65003548:	add    esp,0xc
6500354b:	mov    DWORD PTR [esp+0x2c],0xf
65003553:	mov    DWORD PTR [esp+0x28],ebx
65003557:	mov    BYTE PTR [esp+0x18],bl
6500355b:	lea    esi,[ecx+0x1]
6500355e:	mov    edi,edi
65003560:	mov    dl,BYTE PTR [ecx]
65003562:	add    ecx,0x1
65003565:	cmp    dl,bl
65003567:	jne    0x65003560
65003569:	sub    ecx,esi
6500356b:	push   ecx
6500356c:	push   eax
6500356d:	lea    ecx,[esp+0x1c]
65003571:	call   0x650018c0
65003576:	lea    eax,[esp+0x14]
6500357a:	push   eax
6500357b:	lea    ecx,[esp+0x34]
6500357f:	mov    DWORD PTR [esp+0x64],0x1
65003587:	call   0x65002080
6500358c:	push   0x6502a034
65003591:	lea    ecx,[esp+0x34]
65003595:	push   ecx
65003596:	call   0x650124d6
6500359b:	or     eax,ecx
6500359d:	jge    0x650035ab
6500359f:	push   0x800
650035a4:	mov    ecx,edi
650035a6:	call   0x65001e60
650035ab:	mov    eax,DWORD PTR [edi]
650035ad:	push   0x800
650035b2:	push   eax
650035b3:	call   0x6500def0
650035b8:	call   eax
650035ba:	test   eax,eax
650035bc:	jne    0x65003622
650035be:	push   0x650267f0
650035c3:	push   0x1c
650035c5:	push   0x65026830
650035ca:	call   0x65006a60
650035cf:	mov    ecx,eax
650035d1:	add    esp,0xc
650035d4:	mov    DWORD PTR [esp+0x2c],0xf
650035dc:	mov    DWORD PTR [esp+0x28],ebx
650035e0:	mov    BYTE PTR [esp+0x18],bl
650035e4:	lea    esi,[ecx+0x1]
650035e7:	mov    dl,BYTE PTR [ecx]
650035e9:	add    ecx,0x1
650035ec:	cmp    dl,bl
650035ee:	jne    0x650035e7
650035f0:	sub    ecx,esi
650035f2:	push   ecx
650035f3:	push   eax
650035f4:	lea    ecx,[esp+0x1c]
650035f8:	call   0x650018c0
650035fd:	lea    edx,[esp+0x14]
65003601:	push   edx
65003602:	lea    ecx,[esp+0x34]
65003606:	mov    DWORD PTR [esp+0x64],0x2
6500360e:	call   0x65002080
65003613:	push   0x6502a034
65003618:	lea    eax,[esp+0x34]
6500361c:	push   eax
6500361d:	call   0x650124d6
65003622:	mov    edx,DWORD PTR [edi]
65003624:	cmp    edx,ebx
65003626:	jne    0x6500362c
65003628:	xor    eax,eax
6500362a:	jmp    0x65003642
6500362c:	mov    eax,edx
6500362e:	lea    esi,[eax+0x2]
65003631:	mov    cx,WORD PTR [eax]
65003634:	add    eax,0x2
65003637:	cmp    cx,bx
6500363a:	jne    0x65003631
6500363c:	sub    eax,esi
6500363e:	sar    eax,1
65003640:	js     0x65003684
65003642:	cmp    eax,DWORD PTR [edx-0x8]
65003645:	jg     0x65003684
65003647:	mov    DWORD PTR [edx-0xc],eax
6500364a:	mov    ecx,DWORD PTR [edi]
6500364c:	mov    WORD PTR [ecx+eax*2],bx
65003650:	mov    ecx,DWORD PTR [edi]
65003652:	mov    edx,DWORD PTR [ecx-0xc]
65003655:	lea    eax,[edx-0x1]
65003658:	cmp    eax,ebx
6500365a:	jl     0x65003684
6500365c:	cmp    eax,edx
6500365e:	jg     0x65003684
65003660:	movzx  eax,WORD PTR [ecx+eax*2]
65003664:	cmp    ax,0x5c
65003668:	je     0x6500366f
6500366a:	call   0x650068b0
6500366f:	mov    eax,edi
65003671:	mov    ecx,DWORD PTR [esp+0x58]
65003675:	mov    DWORD PTR fs:0x0,ecx
6500367c:	pop    ecx
6500367d:	pop    edi
6500367e:	pop    esi
6500367f:	pop    ebx
65003680:	add    esp,0x54
65003683:	ret    
65003684:	push   0x80070057
65003689:	call   0x650010a0
6500368e:	int3   
6500368f:	int3   
65003690:	push   0xffffffff
65003692:	push   0x650233b1
65003697:	mov    eax,fs:0x0
6500369d:	push   eax
6500369e:	sub    esp,0x48
650036a1:	push   ebx
650036a2:	push   ebp
650036a3:	push   esi
650036a4:	push   edi
650036a5:	mov    eax,ds:0x6502c09c
650036aa:	xor    eax,esp
650036ac:	push   eax
650036ad:	lea    eax,[esp+0x5c]
650036b1:	mov    fs:0x0,eax
650036b7:	mov    esi,DWORD PTR [esp+0x6c]
650036bb:	xor    ebx,ebx
650036bd:	push   ebx
650036be:	mov    DWORD PTR [esp+0x68],ebx
650036c2:	push   esi
650036c3:	mov    DWORD PTR [esp+0x1c],ebx
650036c7:	call   0x650034a0
650036cc:	add    esp,0x8
650036cf:	mov    DWORD PTR [esp+0x64],ebx
650036d3:	mov    eax,DWORD PTR [esi]
650036d5:	mov    ebp,0x1
650036da:	sub    eax,0x10
650036dd:	cmp    DWORD PTR [eax+0xc],ebp
650036e0:	mov    DWORD PTR [esp+0x14],ebp
650036e4:	jle    0x650036f1
650036e6:	mov    eax,DWORD PTR [eax+0x4]
650036e9:	push   eax
650036ea:	mov    ecx,esi
650036ec:	call   0x650019b0
650036f1:	mov    eax,DWORD PTR [esi]
650036f3:	push   0x5c
650036f5:	push   eax
650036f6:	call   0x6501337b
650036fb:	mov    edi,eax
650036fd:	add    esp,0x8
65003700:	cmp    edi,ebx
65003702:	jne    0x65003766
65003704:	push   0x65026850
65003709:	push   0x18
6500370b:	push   0x6502688c
65003710:	call   0x65006a60
65003715:	mov    ecx,eax
65003717:	add    esp,0xc
6500371a:	mov    DWORD PTR [esp+0x30],0xf
65003722:	mov    DWORD PTR [esp+0x2c],ebx
65003726:	mov    BYTE PTR [esp+0x1c],bl
6500372a:	lea    esi,[ecx+0x1]
6500372d:	lea    ecx,[ecx+0x0]
65003730:	mov    dl,BYTE PTR [ecx]
65003732:	add    ecx,ebp
65003734:	cmp    dl,bl
65003736:	jne    0x65003730
65003738:	sub    ecx,esi
6500373a:	push   ecx
6500373b:	push   eax
6500373c:	lea    ecx,[esp+0x20]
65003740:	call   0x650018c0
65003745:	lea    ecx,[esp+0x18]
65003749:	push   ecx
6500374a:	lea    ecx,[esp+0x38]
6500374e:	mov    DWORD PTR [esp+0x68],ebp
65003752:	call   0x65002080
65003757:	push   0x6502a034
6500375c:	lea    edx,[esp+0x38]
65003760:	push   edx
65003761:	call   0x650124d6
65003766:	mov    eax,DWORD PTR [esi]
65003768:	sub    eax,0x10
6500376b:	cmp    DWORD PTR [eax+0xc],ebp
6500376e:	jle    0x6500377b
65003770:	mov    eax,DWORD PTR [eax+0x4]
65003773:	push   eax
65003774:	mov    ecx,esi
65003776:	call   0x650019b0
6500377b:	mov    ecx,DWORD PTR [esi]
6500377d:	sub    edi,ecx
6500377f:	sar    edi,1
65003781:	add    edi,ebp
65003783:	cmp    ecx,ebx
65003785:	jne    0x6500378b
65003787:	xor    eax,eax
65003789:	jmp    0x650037a6
6500378b:	mov    eax,ecx
6500378d:	lea    ebp,[eax+0x2]
65003790:	mov    dx,WORD PTR [eax]
65003793:	add    eax,0x2
65003796:	cmp    dx,bx
65003799:	jne    0x65003790
6500379b:	sub    eax,ebp
6500379d:	sar    eax,1
6500379f:	js     0x650037f9
650037a1:	mov    ebp,0x1
650037a6:	cmp    eax,DWORD PTR [ecx-0x8]
650037a9:	jg     0x650037f9
650037ab:	mov    DWORD PTR [ecx-0xc],eax
650037ae:	mov    ecx,DWORD PTR [esi]
650037b0:	mov    WORD PTR [ecx+eax*2],bx
650037b4:	mov    eax,DWORD PTR [esi]
650037b6:	sub    eax,0x10
650037b9:	mov    ecx,ebp
650037bb:	sub    ecx,DWORD PTR [eax+0xc]
650037be:	mov    eax,DWORD PTR [eax+0x8]
650037c1:	sub    eax,edi
650037c3:	or     eax,ecx
650037c5:	jge    0x650037cf
650037c7:	push   edi
650037c8:	mov    ecx,esi
650037ca:	call   0x65001e60
650037cf:	cmp    edi,ebx
650037d1:	jl     0x650037f9
650037d3:	mov    eax,DWORD PTR [esi]
650037d5:	cmp    edi,DWORD PTR [eax-0x8]
650037d8:	jg     0x650037f9
650037da:	mov    DWORD PTR [eax-0xc],edi
650037dd:	mov    edx,DWORD PTR [esi]
650037df:	mov    WORD PTR [edx+edi*2],bx
650037e3:	mov    eax,esi
650037e5:	mov    ecx,DWORD PTR [esp+0x5c]
650037e9:	mov    DWORD PTR fs:0x0,ecx
650037f0:	pop    ecx
650037f1:	pop    edi
650037f2:	pop    esi
650037f3:	pop    ebp
650037f4:	pop    ebx
650037f5:	add    esp,0x54
650037f8:	ret    
650037f9:	push   0x80070057
650037fe:	call   0x650010a0
65003803:	int3   
65003804:	int3   
65003805:	int3   
65003806:	int3   
65003807:	int3   
65003808:	int3   
65003809:	int3   
6500380a:	int3   
6500380b:	int3   
6500380c:	int3   
6500380d:	int3   
6500380e:	int3   
6500380f:	int3   
65003810:	push   ebp
65003811:	lea    ebp,[esp-0x78]
65003815:	sub    esp,0x78
65003818:	push   0xffffffff
6500381a:	push   0x650234c9
6500381f:	mov    eax,fs:0x0
65003825:	push   eax
65003826:	sub    esp,0xb4
6500382c:	mov    eax,ds:0x6502c09c
65003831:	xor    eax,ebp
65003833:	mov    DWORD PTR [ebp+0x74],eax
65003836:	push   ebx
65003837:	push   esi
65003838:	push   edi
65003839:	push   eax
6500383a:	lea    eax,[ebp-0xc]
6500383d:	mov    fs:0x0,eax
65003843:	call   DWORD PTR ds:0x6502c06c
65003849:	mov    ebx,eax
6500384b:	lea    eax,[ebp+0xc]
6500384e:	push   eax
6500384f:	call   0x65003690
65003854:	add    esp,0x4
65003857:	push   0x0
65003859:	push   0x0
6500385b:	lea    ecx,[ebp+0x0]
6500385e:	push   ecx
6500385f:	lea    edx,[ebp+0x4]
65003862:	push   edx
65003863:	lea    eax,[ebp+0x8]
65003866:	push   eax
65003867:	push   0x0
65003869:	mov    DWORD PTR [ebp-0x4],0x0
65003870:	mov    ecx,DWORD PTR [ebp+0xc]
65003873:	push   0x0
65003875:	push   ecx
65003876:	call   0x6500e340
6500387b:	call   eax
6500387d:	test   eax,eax
6500387f:	jne    0x65003990
65003885:	call   DWORD PTR ds:0x6502403c
6500388b:	push   0xa
6500388d:	lea    edx,[ebp+0x10]
65003890:	push   edx
65003891:	push   eax
65003892:	call   0x650133dd
65003897:	mov    eax,DWORD PTR [ebp+0xc]
6500389a:	add    esp,0xc
6500389d:	test   eax,eax
6500389f:	mov    edi,eax
650038a1:	je     0x650038cf
650038a3:	push   eax
650038a4:	call   DWORD PTR ds:0x65024048
650038aa:	add    eax,0x1
650038ad:	cmp    eax,0x3fffffff
650038b2:	jle    0x650038b8
650038b4:	xor    edi,edi
650038b6:	jmp    0x650038cf
650038b8:	lea    esi,[eax+eax*1]
650038bb:	mov    eax,esi
650038bd:	call   0x65013030
650038c2:	mov    eax,esp
650038c4:	push   ebx
650038c5:	push   esi
650038c6:	push   edi
650038c7:	push   eax
650038c8:	call   0x65002b90
650038cd:	mov    edi,eax
650038cf:	push   0x650268f4
650038d4:	push   0x21
650038d6:	push   0x65026928
650038db:	call   0x65006a60
650038e0:	mov    ecx,eax
650038e2:	add    esp,0xc
650038e5:	mov    DWORD PTR [ebp-0x10],0xf
650038ec:	mov    DWORD PTR [ebp-0x14],0x0
650038f3:	mov    BYTE PTR [ebp-0x24],0x0
650038f7:	lea    esi,[ecx+0x1]
650038fa:	lea    ebx,[ebx+0x0]
65003900:	mov    dl,BYTE PTR [ecx]
65003902:	add    ecx,0x1
65003905:	test   dl,dl
65003907:	jne    0x65003900
65003909:	sub    ecx,esi
6500390b:	push   ecx
6500390c:	push   eax
6500390d:	lea    ecx,[ebp-0x28]
65003910:	call   0x650018c0
65003915:	lea    eax,[ebp-0x28]
65003918:	push   eax
65003919:	lea    esi,[ebp-0x6c]
6500391c:	mov    BYTE PTR [ebp-0x4],0x1
65003920:	call   0x65009e40
65003925:	mov    esi,eax
65003927:	push   0x650268ac
6500392c:	push   0x7
6500392e:	push   0x650268ec
65003933:	mov    BYTE PTR [ebp-0x4],0x2
65003937:	call   0x65006a60
6500393c:	push   esi
6500393d:	mov    edi,eax
6500393f:	lea    esi,[ebp-0x88]
65003945:	call   0x65009e40
6500394a:	push   eax
6500394b:	lea    edi,[ebp+0x10]
6500394e:	lea    esi,[ebp-0xc0]
65003954:	mov    BYTE PTR [ebp-0x4],0x3
65003958:	call   0x65009e40
6500395d:	push   eax
6500395e:	mov    edi,0x650268a8
65003963:	lea    esi,[ebp-0xa4]
65003969:	mov    BYTE PTR [ebp-0x4],0x4
6500396d:	call   0x65009e40
65003972:	add    esp,0x1c
65003975:	push   eax
65003976:	lea    ecx,[ebp-0x50]
65003979:	mov    BYTE PTR [ebp-0x4],0x5
6500397d:	call   0x65002080
65003982:	push   0x6502a034
65003987:	lea    ecx,[ebp-0x50]
6500398a:	push   ecx
6500398b:	call   0x650124d6
65003990:	mov    esi,DWORD PTR [ebp+0x8]
65003993:	mov    DWORD PTR [ebp-0x4],0xffffffff
6500399a:	mov    eax,DWORD PTR [ebp+0xc]
6500399d:	add    eax,0xfffffff0
650039a0:	lea    edx,[eax+0xc]
650039a3:	or     ecx,0xffffffff
650039a6:	lock xadd DWORD PTR [edx],ecx
650039aa:	dec    ecx
650039ab:	test   ecx,ecx
650039ad:	jg     0x650039b9
650039af:	mov    ecx,DWORD PTR [eax]
650039b1:	mov    edx,DWORD PTR [ecx]
650039b3:	push   eax
650039b4:	mov    eax,DWORD PTR [edx+0x4]
650039b7:	call   eax
650039b9:	mov    eax,esi
650039bb:	lea    esp,[ebp-0xd0]
650039c1:	mov    ecx,DWORD PTR [ebp-0xc]
650039c4:	mov    DWORD PTR fs:0x0,ecx
650039cb:	pop    ecx
650039cc:	pop    edi
650039cd:	pop    esi
650039ce:	pop    ebx
650039cf:	mov    ecx,DWORD PTR [ebp+0x74]
650039d2:	xor    ecx,ebp
650039d4:	call   0x6501292c
650039d9:	add    ebp,0x78
650039dc:	mov    esp,ebp
650039de:	pop    ebp
650039df:	ret    
650039e0:	push   ebp
650039e1:	mov    ebp,esp
650039e3:	and    esp,0xfffffff8
650039e6:	push   0xffffffff
650039e8:	push   0x65022e16
650039ed:	mov    eax,fs:0x0
650039f3:	push   eax
650039f4:	sub    esp,0x840
650039fa:	mov    eax,ds:0x6502c09c
650039ff:	xor    eax,esp
65003a01:	mov    DWORD PTR [esp+0x838],eax
65003a08:	push   ebx
65003a09:	push   esi
65003a0a:	push   edi
65003a0b:	mov    eax,ds:0x6502c09c
65003a10:	xor    eax,esp
65003a12:	push   eax
65003a13:	lea    eax,[esp+0x850]
65003a1a:	mov    fs:0x0,eax
65003a20:	xor    eax,eax
65003a22:	xor    ebx,ebx
65003a24:	mov    DWORD PTR [esp+0x34],ebx
65003a28:	mov    DWORD PTR [esp+0x38],eax
65003a2c:	mov    DWORD PTR [esp+0x3c],eax
65003a30:	mov    DWORD PTR [esp+0x40],eax
65003a34:	mov    DWORD PTR [esp+0x1c],ebx
65003a38:	push   0x6502694c
65003a3d:	push   0x1f
65003a3f:	push   0x65026990
65003a44:	mov    DWORD PTR [esp+0x864],ebx
65003a4b:	call   0x65006d50
65003a50:	add    esp,0xc
65003a53:	lea    ecx,[esp+0x18]
65003a57:	push   ecx
65003a58:	push   0x20019
65003a5d:	push   ebx
65003a5e:	push   eax
65003a5f:	push   0x80000002
65003a64:	mov    DWORD PTR [esp+0x2c],ebx
65003a68:	call   DWORD PTR ds:0x6502400c
65003a6e:	cmp    eax,ebx
65003a70:	jne    0x65003ae7
65003a72:	mov    edx,DWORD PTR [esp+0x18]
65003a76:	push   0x650269d0
65003a7b:	push   0xb
65003a7d:	push   0x65026a10
65003a82:	mov    DWORD PTR [esp+0x28],edx
65003a86:	mov    DWORD PTR [esp+0x2c],0x400
65003a8e:	call   0x65006d50
65003a93:	add    esp,0xc
65003a96:	push   eax
65003a97:	lea    eax,[esp+0x20]
65003a9b:	push   eax
65003a9c:	lea    edi,[esp+0x28]
65003aa0:	lea    esi,[esp+0x4c]
65003aa4:	call   0x65002bf0
65003aa9:	test   eax,eax
65003aab:	je     0x65003b0a
65003aad:	mov    eax,DWORD PTR [esp+0x18]
65003ab1:	test   eax,eax
65003ab3:	mov    ecx,DWORD PTR [esp+0x40]
65003ab7:	mov    esi,DWORD PTR [esp+0x34]
65003abb:	mov    edi,DWORD PTR [esp+0x38]
65003abf:	mov    ebx,DWORD PTR [esp+0x3c]
65003ac3:	mov    DWORD PTR [esp+0x30],ecx
65003ac7:	je     0x65003ad0
65003ac9:	push   eax
65003aca:	call   DWORD PTR ds:0x65024000
65003ad0:	mov    eax,DWORD PTR [ebp+0x8]
65003ad3:	mov    edx,DWORD PTR [esp+0x30]
65003ad7:	mov    DWORD PTR [eax],esi
65003ad9:	mov    DWORD PTR [eax+0x4],edi
65003adc:	mov    DWORD PTR [eax+0x8],ebx
65003adf:	mov    DWORD PTR [eax+0xc],edx
65003ae2:	jmp    0x65003bd9
65003ae7:	mov    eax,DWORD PTR [ebp+0x8]
65003aea:	mov    ecx,DWORD PTR [esp+0x34]
65003aee:	mov    edx,DWORD PTR [esp+0x38]
65003af2:	mov    DWORD PTR [eax],ecx
65003af4:	mov    ecx,DWORD PTR [esp+0x3c]
65003af8:	mov    DWORD PTR [eax+0x4],edx
65003afb:	mov    edx,DWORD PTR [esp+0x40]
65003aff:	mov    DWORD PTR [eax+0x8],ecx
65003b02:	mov    DWORD PTR [eax+0xc],edx
65003b05:	jmp    0x65003bd9
65003b0a:	push   0x65026a28
65003b0f:	lea    ecx,[esp+0x18]
65003b13:	call   0x650025a0
65003b18:	lea    eax,[esp+0x44]
65003b1c:	mov    BYTE PTR [esp+0x858],0x1
65003b24:	lea    edx,[eax+0x2]
65003b27:	mov    cx,WORD PTR [eax]
65003b2a:	add    eax,0x2
65003b2d:	cmp    cx,bx
65003b30:	jne    0x65003b27
65003b32:	sub    eax,edx
65003b34:	sar    eax,1
65003b36:	push   eax
65003b37:	lea    eax,[esp+0x48]
65003b3b:	push   eax
65003b3c:	lea    ecx,[esp+0x1c]
65003b40:	call   0x650029f0
65003b45:	push   0x1
65003b47:	push   0x65026a2c
65003b4c:	lea    ecx,[esp+0x1c]
65003b50:	call   0x650029f0
65003b55:	mov    eax,DWORD PTR [esp+0x14]
65003b59:	cmp    DWORD PTR [eax-0x4],0x1
65003b5d:	jle    0x65003b70
65003b5f:	mov    ecx,DWORD PTR [eax-0xc]
65003b62:	push   ecx
65003b63:	lea    ecx,[esp+0x18]
65003b67:	call   0x650019b0
65003b6c:	mov    eax,DWORD PTR [esp+0x14]
65003b70:	lea    edx,[esp+0x34]
65003b74:	push   edx
65003b75:	push   eax
65003b76:	call   DWORD PTR ds:0x650241c8
65003b7c:	mov    eax,DWORD PTR [esp+0x40]
65003b80:	mov    esi,DWORD PTR [esp+0x34]
65003b84:	mov    edi,DWORD PTR [esp+0x38]
65003b88:	mov    ebx,DWORD PTR [esp+0x3c]
65003b8c:	mov    DWORD PTR [esp+0x30],eax
65003b90:	mov    BYTE PTR [esp+0x858],0x0
65003b98:	mov    eax,DWORD PTR [esp+0x14]
65003b9c:	add    eax,0xfffffff0
65003b9f:	lea    ecx,[eax+0xc]
65003ba2:	or     edx,0xffffffff
65003ba5:	lock xadd DWORD PTR [ecx],edx
65003ba9:	dec    edx
65003baa:	test   edx,edx
65003bac:	jg     0x65003bb8
65003bae:	mov    ecx,DWORD PTR [eax]
65003bb0:	mov    edx,DWORD PTR [ecx]
65003bb2:	push   eax
65003bb3:	mov    eax,DWORD PTR [edx+0x4]
65003bb6:	call   eax
65003bb8:	mov    eax,DWORD PTR [esp+0x18]
65003bbc:	test   eax,eax
65003bbe:	je     0x65003bc7
65003bc0:	push   eax
65003bc1:	call   DWORD PTR ds:0x65024000
65003bc7:	mov    eax,DWORD PTR [ebp+0x8]
65003bca:	mov    ecx,DWORD PTR [esp+0x30]
65003bce:	mov    DWORD PTR [eax],esi
65003bd0:	mov    DWORD PTR [eax+0x4],edi
65003bd3:	mov    DWORD PTR [eax+0x8],ebx
65003bd6:	mov    DWORD PTR [eax+0xc],ecx
65003bd9:	mov    ecx,DWORD PTR [esp+0x850]
65003be0:	mov    DWORD PTR fs:0x0,ecx
65003be7:	pop    ecx
65003be8:	pop    edi
65003be9:	pop    esi
65003bea:	pop    ebx
65003beb:	mov    ecx,DWORD PTR [esp+0x838]
65003bf2:	xor    ecx,esp
65003bf4:	call   0x6501292c
65003bf9:	mov    esp,ebp
65003bfb:	pop    ebp
65003bfc:	ret    
65003bfd:	int3   
65003bfe:	int3   
65003bff:	int3   
65003c00:	push   ebp
65003c01:	mov    ebp,esp
65003c03:	and    esp,0xfffffff8
65003c06:	push   0xffffffff
65003c08:	push   0x65022dc4
65003c0d:	mov    eax,fs:0x0
65003c13:	push   eax
65003c14:	sub    esp,0x460
65003c1a:	mov    eax,ds:0x6502c09c
65003c1f:	xor    eax,esp
65003c21:	mov    DWORD PTR [esp+0x458],eax
65003c28:	push   ebx
65003c29:	push   esi
65003c2a:	push   edi
65003c2b:	mov    eax,ds:0x6502c09c
65003c30:	xor    eax,esp
65003c32:	push   eax
65003c33:	lea    eax,[esp+0x470]
65003c3a:	mov    fs:0x0,eax
65003c40:	mov    eax,DWORD PTR [ebp+0x8]
65003c43:	xor    ebx,ebx
65003c45:	test   BYTE PTR ds:0x650303ec,0x1
65003c4c:	mov    esi,ecx
65003c4e:	mov    DWORD PTR [esp+0x18],eax
65003c52:	mov    DWORD PTR [esp+0x14],esi
65003c56:	mov    DWORD PTR [esp+0x38],ebx
65003c5a:	jne    0x65003cad
65003c5c:	or     DWORD PTR ds:0x650303ec,0x1
65003c63:	mov    DWORD PTR [esp+0x478],ebx
65003c6a:	call   0x65008420
65003c6f:	mov    ds:0x650303e4,eax
65003c74:	mov    BYTE PTR [eax+0x29],0x1
65003c78:	mov    eax,ds:0x650303e4
65003c7d:	mov    DWORD PTR [eax+0x4],eax
65003c80:	mov    eax,ds:0x650303e4
65003c85:	mov    DWORD PTR [eax],eax
65003c87:	mov    eax,ds:0x650303e4
65003c8c:	mov    DWORD PTR [eax+0x8],eax
65003c8f:	push   0x65023580
65003c94:	mov    DWORD PTR ds:0x650303e8,ebx
65003c9a:	call   0x65012a5f
65003c9f:	add    esp,0x4
65003ca2:	mov    DWORD PTR [esp+0x478],0xffffffff
65003cad:	mov    eax,DWORD PTR [esi+0x4]
65003cb0:	mov    esi,DWORD PTR [eax]
65003cb2:	mov    eax,DWORD PTR [esp+0x14]
65003cb6:	cmp    esi,DWORD PTR [eax+0x4]
65003cb9:	je     0x65003e1e
65003cbf:	cmp    DWORD PTR [esi+0x24],0x10
65003cc3:	lea    edi,[esi+0xc]
65003cc6:	jb     0x65003ccd
65003cc8:	mov    ecx,DWORD PTR [edi+0x4]
65003ccb:	jmp    0x65003cd0
65003ccd:	lea    ecx,[edi+0x4]
65003cd0:	lea    edx,[esp+0x64]
65003cd4:	mov    al,BYTE PTR [ecx]
65003cd6:	mov    BYTE PTR [edx],al
65003cd8:	add    ecx,0x1
65003cdb:	add    edx,0x1
65003cde:	cmp    al,bl
65003ce0:	jne    0x65003cd4
65003ce2:	mov    ecx,DWORD PTR [esp+0x14]
65003ce6:	cmp    esi,DWORD PTR [ecx+0x4]
65003ce9:	jne    0x65003cf0
65003ceb:	call   0x65012443
65003cf0:	push   0xffffffff
65003cf2:	push   ebx
65003cf3:	push   edi
65003cf4:	lea    ecx,[esp+0x54]
65003cf8:	mov    DWORD PTR [esp+0x6c],0xf
65003d00:	mov    DWORD PTR [esp+0x68],ebx
65003d04:	mov    BYTE PTR [esp+0x58],bl
65003d08:	call   0x650017e0
65003d0d:	lea    edx,[esp+0x64]
65003d11:	push   edx
65003d12:	mov    DWORD PTR [esp+0x47c],0x1
65003d1d:	call   0x6501ecd5
65003d22:	lea    eax,[esp+0x68]
65003d26:	add    esp,0x4
65003d29:	mov    DWORD PTR [esp+0x34],0xf
65003d31:	mov    DWORD PTR [esp+0x30],ebx
65003d35:	mov    BYTE PTR [esp+0x20],bl
65003d39:	lea    edx,[eax+0x1]
65003d3c:	lea    esp,[esp+0x0]
65003d40:	mov    cl,BYTE PTR [eax]
65003d42:	add    eax,0x1
65003d45:	cmp    cl,bl
65003d47:	jne    0x65003d40
65003d49:	sub    eax,edx
65003d4b:	push   eax
65003d4c:	lea    eax,[esp+0x68]
65003d50:	push   eax
65003d51:	lea    ecx,[esp+0x24]
65003d55:	call   0x650018c0
65003d5a:	lea    ecx,[esp+0x1c]
65003d5e:	push   ecx
65003d5f:	lea    edx,[esp+0x40]
65003d63:	push   edx
65003d64:	push   0x650303e0
65003d69:	mov    BYTE PTR [esp+0x484],0x2
65003d71:	call   0x65007110
65003d76:	mov    edi,0x10
65003d7b:	cmp    DWORD PTR [esp+0x34],edi
65003d7f:	jb     0x65003d8e
65003d81:	mov    eax,DWORD PTR [esp+0x20]
65003d85:	push   eax
65003d86:	call   0x650120d2
65003d8b:	add    esp,0x4
65003d8e:	mov    DWORD PTR [esp+0x478],0xffffffff
65003d99:	cmp    DWORD PTR [esp+0x60],edi
65003d9d:	mov    DWORD PTR [esp+0x34],0xf
65003da5:	mov    DWORD PTR [esp+0x30],ebx
65003da9:	mov    BYTE PTR [esp+0x20],bl
65003dad:	jb     0x65003dbc
65003daf:	mov    ecx,DWORD PTR [esp+0x4c]
65003db3:	push   ecx
65003db4:	call   0x650120d2
65003db9:	add    esp,0x4
65003dbc:	cmp    BYTE PTR [esi+0x29],bl
65003dbf:	mov    DWORD PTR [esp+0x60],0xf
65003dc7:	mov    DWORD PTR [esp+0x5c],ebx
65003dcb:	mov    BYTE PTR [esp+0x4c],bl
65003dcf:	je     0x65003ddb
65003dd1:	call   0x65012443
65003dd6:	jmp    0x65003cb2
65003ddb:	mov    ecx,DWORD PTR [esi+0x8]
65003dde:	cmp    BYTE PTR [ecx+0x29],bl
65003de1:	jne    0x65003e00
65003de3:	mov    eax,DWORD PTR [ecx]
65003de5:	cmp    BYTE PTR [eax+0x29],bl
65003de8:	jne    0x65003df9
65003dea:	lea    ebx,[ebx+0x0]
65003df0:	mov    ecx,eax
65003df2:	mov    eax,DWORD PTR [ecx]
65003df4:	cmp    BYTE PTR [eax+0x29],bl
65003df7:	je     0x65003df0
65003df9:	mov    esi,ecx
65003dfb:	jmp    0x65003cb2
65003e00:	mov    eax,DWORD PTR [esi+0x4]
65003e03:	cmp    BYTE PTR [eax+0x29],bl
65003e06:	jne    0x65003e17
65003e08:	cmp    esi,DWORD PTR [eax+0x8]
65003e0b:	jne    0x65003e17
65003e0d:	mov    esi,eax
65003e0f:	mov    eax,DWORD PTR [eax+0x4]
65003e12:	cmp    BYTE PTR [eax+0x29],bl
65003e15:	je     0x65003e08
65003e17:	mov    esi,eax
65003e19:	jmp    0x65003cb2
65003e1e:	mov    esi,DWORD PTR [esp+0x18]
65003e22:	push   esi
65003e23:	call   0x65007040
65003e28:	mov    eax,esi
65003e2a:	mov    ecx,DWORD PTR [esp+0x470]
65003e31:	mov    DWORD PTR fs:0x0,ecx
65003e38:	pop    ecx
65003e39:	pop    edi
65003e3a:	pop    esi
65003e3b:	pop    ebx
65003e3c:	mov    ecx,DWORD PTR [esp+0x458]
65003e43:	xor    ecx,esp
65003e45:	call   0x6501292c
65003e4a:	mov    esp,ebp
65003e4c:	pop    ebp
65003e4d:	ret    
65003e4e:	int3   
65003e4f:	int3   
65003e50:	push   ecx
65003e51:	call   0x65007af0
65003e56:	pop    ecx
65003e57:	ret    
65003e58:	int3   
65003e59:	int3   
65003e5a:	int3   
65003e5b:	int3   
65003e5c:	int3   
65003e5d:	int3   
65003e5e:	int3   
65003e5f:	int3   
65003e60:	push   ebp
65003e61:	lea    ebp,[esp-0x404]
65003e68:	sub    esp,0x404
65003e6e:	push   0xffffffff
65003e70:	push   0x65023361
65003e75:	mov    eax,fs:0x0
65003e7b:	push   eax
65003e7c:	sub    esp,0x3c
65003e7f:	mov    eax,ds:0x6502c09c
65003e84:	xor    eax,ebp
65003e86:	mov    DWORD PTR [ebp+0x400],eax
65003e8c:	push   ebx
65003e8d:	push   esi
65003e8e:	push   edi
65003e8f:	push   eax
65003e90:	lea    eax,[ebp-0xc]
65003e93:	mov    fs:0x0,eax
65003e99:	xor    ebx,ebx
65003e9b:	mov    DWORD PTR [ebp-0x4],ebx
65003e9e:	test   BYTE PTR ds:0x6503040c,0x1
65003ea5:	jne    0x65003eed
65003ea7:	or     DWORD PTR ds:0x6503040c,0x1
65003eae:	mov    BYTE PTR [ebp-0x4],0x1
65003eb2:	call   0x65008420
65003eb7:	mov    ds:0x65030404,eax
65003ebc:	mov    BYTE PTR [eax+0x29],0x1
65003ec0:	mov    eax,ds:0x65030404
65003ec5:	mov    DWORD PTR [eax+0x4],eax
65003ec8:	mov    eax,ds:0x65030404
65003ecd:	mov    DWORD PTR [eax],eax
65003ecf:	mov    eax,ds:0x65030404
65003ed4:	mov    DWORD PTR [eax+0x8],eax
65003ed7:	push   0x65023590
65003edc:	mov    DWORD PTR ds:0x65030408,ebx
65003ee2:	call   0x65012a5f
65003ee7:	add    esp,0x4
65003eea:	mov    BYTE PTR [ebp-0x4],bl
65003eed:	cmp    DWORD PTR ds:0x65030408,ebx
65003ef3:	jne    0x65004cb9
65003ef9:	call   0x65008420
65003efe:	mov    DWORD PTR [ebp-0x30],eax
65003f01:	mov    BYTE PTR [eax+0x29],0x1
65003f05:	mov    eax,DWORD PTR [ebp-0x30]
65003f08:	mov    DWORD PTR [eax+0x4],eax
65003f0b:	mov    eax,DWORD PTR [ebp-0x30]
65003f0e:	mov    DWORD PTR [eax],eax
65003f10:	mov    eax,DWORD PTR [ebp-0x30]
65003f13:	mov    DWORD PTR [eax+0x8],eax
65003f16:	mov    DWORD PTR [ebp-0x2c],ebx
65003f19:	push   0x65026a30
65003f1e:	push   0x3
65003f20:	push   0x65026a58
65003f25:	mov    BYTE PTR [ebp-0x4],0x2
65003f29:	call   0x65006a60
65003f2e:	mov    esi,eax
65003f30:	mov    ecx,esi
65003f32:	add    esp,0xc
65003f35:	mov    DWORD PTR [ebp-0x10],0xf
65003f3c:	mov    DWORD PTR [ebp-0x14],ebx
65003f3f:	mov    BYTE PTR [ebp-0x24],bl
65003f42:	lea    edi,[ecx+0x1]
65003f45:	mov    al,BYTE PTR [ecx]
65003f47:	add    ecx,0x1
65003f4a:	cmp    al,bl
65003f4c:	jne    0x65003f45
65003f4e:	sub    ecx,edi
65003f50:	push   ecx
65003f51:	push   esi
65003f52:	lea    ecx,[ebp-0x28]
65003f55:	call   0x650018c0
65003f5a:	lea    eax,[ebp-0x28]
65003f5d:	push   eax
65003f5e:	lea    ecx,[ebp-0x40]
65003f61:	push   ecx
65003f62:	lea    edx,[ebp-0x34]
65003f65:	push   edx
65003f66:	mov    BYTE PTR [ebp-0x4],0x3
65003f6a:	call   0x65007110
65003f6f:	mov    BYTE PTR [ebp-0x4],0x2
65003f73:	cmp    DWORD PTR [ebp-0x10],0x10
65003f77:	jb     0x65003f85
65003f79:	mov    eax,DWORD PTR [ebp-0x24]
65003f7c:	push   eax
65003f7d:	call   0x650120d2
65003f82:	add    esp,0x4
65003f85:	push   0x65026a5c
65003f8a:	push   0x8
65003f8c:	push   0x65026a80
65003f91:	call   0x65006a60
65003f96:	mov    esi,eax
65003f98:	mov    ecx,esi
65003f9a:	add    esp,0xc
65003f9d:	mov    DWORD PTR [ebp-0x10],0xf
65003fa4:	mov    DWORD PTR [ebp-0x14],ebx
65003fa7:	mov    BYTE PTR [ebp-0x24],bl
65003faa:	lea    edx,[ecx+0x1]
65003fad:	lea    ecx,[ecx+0x0]
65003fb0:	mov    al,BYTE PTR [ecx]
65003fb2:	add    ecx,0x1
65003fb5:	cmp    al,bl
65003fb7:	jne    0x65003fb0
65003fb9:	sub    ecx,edx
65003fbb:	push   ecx
65003fbc:	push   esi
65003fbd:	lea    ecx,[ebp-0x28]
65003fc0:	call   0x650018c0
65003fc5:	lea    ecx,[ebp-0x28]
65003fc8:	push   ecx
65003fc9:	lea    edx,[ebp-0x40]
65003fcc:	push   edx
65003fcd:	lea    eax,[ebp-0x34]
65003fd0:	push   eax
65003fd1:	mov    BYTE PTR [ebp-0x4],0x4
65003fd5:	call   0x65007110
65003fda:	mov    edi,0x10
65003fdf:	mov    BYTE PTR [ebp-0x4],0x2
65003fe3:	cmp    DWORD PTR [ebp-0x10],edi
65003fe6:	jb     0x65003ff4
65003fe8:	mov    ecx,DWORD PTR [ebp-0x24]
65003feb:	push   ecx
65003fec:	call   0x650120d2
65003ff1:	add    esp,0x4
65003ff4:	push   0x65026a8c
65003ff9:	push   0x8
65003ffb:	push   0x65026ac4
65004000:	call   0x65006a60
65004005:	mov    esi,eax
65004007:	mov    ecx,esi
65004009:	add    esp,0xc
6500400c:	mov    DWORD PTR [ebp-0x10],0xf
65004013:	mov    DWORD PTR [ebp-0x14],ebx
65004016:	mov    BYTE PTR [ebp-0x24],bl
65004019:	lea    edx,[ecx+0x1]
6500401c:	lea    esp,[esp+0x0]
65004020:	mov    al,BYTE PTR [ecx]
65004022:	add    ecx,0x1
65004025:	cmp    al,bl
65004027:	jne    0x65004020
65004029:	sub    ecx,edx
6500402b:	push   ecx
6500402c:	push   esi
6500402d:	lea    ecx,[ebp-0x28]
65004030:	call   0x650018c0
65004035:	lea    edx,[ebp-0x28]
65004038:	push   edx
65004039:	lea    eax,[ebp-0x40]
6500403c:	push   eax
6500403d:	lea    ecx,[ebp-0x34]
65004040:	push   ecx
65004041:	mov    BYTE PTR [ebp-0x4],0x5
65004045:	call   0x65007110
6500404a:	mov    BYTE PTR [ebp-0x4],0x2
6500404e:	cmp    DWORD PTR [ebp-0x10],edi
65004051:	jb     0x6500405f
65004053:	mov    edx,DWORD PTR [ebp-0x24]
65004056:	push   edx
65004057:	call   0x650120d2
6500405c:	add    esp,0x4
6500405f:	push   0x65026ad0
65004064:	push   0xa
65004066:	push   0x65026b10
6500406b:	call   0x65006a60
65004070:	mov    esi,eax
65004072:	mov    ecx,esi
65004074:	add    esp,0xc
65004077:	mov    DWORD PTR [ebp-0x10],0xf
6500407e:	mov    DWORD PTR [ebp-0x14],ebx
65004081:	mov    BYTE PTR [ebp-0x24],bl
65004084:	lea    edx,[ecx+0x1]
65004087:	mov    al,BYTE PTR [ecx]
65004089:	add    ecx,0x1
6500408c:	cmp    al,bl
6500408e:	jne    0x65004087
65004090:	sub    ecx,edx
65004092:	push   ecx
65004093:	push   esi
65004094:	lea    ecx,[ebp-0x28]
65004097:	call   0x650018c0
6500409c:	lea    eax,[ebp-0x28]
6500409f:	push   eax
650040a0:	lea    ecx,[ebp-0x40]
650040a3:	push   ecx
650040a4:	lea    edx,[ebp-0x34]
650040a7:	push   edx
650040a8:	mov    BYTE PTR [ebp-0x4],0x6
650040ac:	call   0x65007110
650040b1:	mov    BYTE PTR [ebp-0x4],0x2
650040b5:	cmp    DWORD PTR [ebp-0x10],edi
650040b8:	jb     0x650040c6
650040ba:	mov    eax,DWORD PTR [ebp-0x24]
650040bd:	push   eax
650040be:	call   0x650120d2
650040c3:	add    esp,0x4
650040c6:	push   0x65026b1c
650040cb:	push   0x4
650040cd:	push   0x65026b4c
650040d2:	call   0x65006a60
650040d7:	mov    esi,eax
650040d9:	mov    ecx,esi
650040db:	add    esp,0xc
650040de:	mov    DWORD PTR [ebp-0x10],0xf
650040e5:	mov    DWORD PTR [ebp-0x14],ebx
650040e8:	mov    BYTE PTR [ebp-0x24],bl
650040eb:	lea    edx,[ecx+0x1]
650040ee:	mov    edi,edi
650040f0:	mov    al,BYTE PTR [ecx]
650040f2:	add    ecx,0x1
650040f5:	cmp    al,bl
650040f7:	jne    0x650040f0
650040f9:	sub    ecx,edx
650040fb:	push   ecx
650040fc:	push   esi
650040fd:	lea    ecx,[ebp-0x28]
65004100:	call   0x650018c0
65004105:	lea    ecx,[ebp-0x28]
65004108:	push   ecx
65004109:	lea    edx,[ebp-0x40]
6500410c:	push   edx
6500410d:	lea    eax,[ebp-0x34]
65004110:	push   eax
65004111:	mov    BYTE PTR [ebp-0x4],0x7
65004115:	call   0x65007110
6500411a:	mov    BYTE PTR [ebp-0x4],0x2
6500411e:	cmp    DWORD PTR [ebp-0x10],edi
65004121:	jb     0x6500412f
65004123:	mov    ecx,DWORD PTR [ebp-0x24]
65004126:	push   ecx
65004127:	call   0x650120d2
6500412c:	add    esp,0x4
6500412f:	push   0x65026b54
65004134:	push   0x8
65004136:	push   0x65026b84
6500413b:	call   0x65006a60
65004140:	mov    esi,eax
65004142:	mov    ecx,esi
65004144:	add    esp,0xc
65004147:	mov    DWORD PTR [ebp-0x10],0xf
6500414e:	mov    DWORD PTR [ebp-0x14],ebx
65004151:	mov    BYTE PTR [ebp-0x24],bl
65004154:	lea    edx,[ecx+0x1]
65004157:	mov    al,BYTE PTR [ecx]
65004159:	add    ecx,0x1
6500415c:	cmp    al,bl
6500415e:	jne    0x65004157
65004160:	sub    ecx,edx
65004162:	push   ecx
65004163:	push   esi
65004164:	lea    ecx,[ebp-0x28]
65004167:	call   0x650018c0
6500416c:	lea    edx,[ebp-0x28]
6500416f:	push   edx
65004170:	lea    eax,[ebp-0x40]
65004173:	push   eax
65004174:	lea    ecx,[ebp-0x34]
65004177:	push   ecx
65004178:	mov    BYTE PTR [ebp-0x4],0x8
6500417c:	call   0x65007110
65004181:	mov    BYTE PTR [ebp-0x4],0x2
65004185:	cmp    DWORD PTR [ebp-0x10],edi
65004188:	jb     0x65004196
6500418a:	mov    edx,DWORD PTR [ebp-0x24]
6500418d:	push   edx
6500418e:	call   0x650120d2
65004193:	add    esp,0x4
65004196:	push   0x65026b90
6500419b:	push   0x5
6500419d:	push   0x65026bc0
650041a2:	call   0x65006a60
650041a7:	mov    esi,eax
650041a9:	mov    ecx,esi
650041ab:	add    esp,0xc
650041ae:	mov    DWORD PTR [ebp-0x10],0xf
650041b5:	mov    DWORD PTR [ebp-0x14],ebx
650041b8:	mov    BYTE PTR [ebp-0x24],bl
650041bb:	lea    edx,[ecx+0x1]
650041be:	mov    edi,edi
650041c0:	mov    al,BYTE PTR [ecx]
650041c2:	add    ecx,0x1
650041c5:	cmp    al,bl
650041c7:	jne    0x650041c0
650041c9:	sub    ecx,edx
650041cb:	push   ecx
650041cc:	push   esi
650041cd:	lea    ecx,[ebp-0x28]
650041d0:	call   0x650018c0
650041d5:	lea    eax,[ebp-0x28]
650041d8:	push   eax
650041d9:	lea    ecx,[ebp-0x40]
650041dc:	push   ecx
650041dd:	lea    edx,[ebp-0x34]
650041e0:	push   edx
650041e1:	mov    BYTE PTR [ebp-0x4],0x9
650041e5:	call   0x65007110
650041ea:	mov    BYTE PTR [ebp-0x4],0x2
650041ee:	cmp    DWORD PTR [ebp-0x10],edi
650041f1:	jb     0x650041ff
650041f3:	mov    eax,DWORD PTR [ebp-0x24]
650041f6:	push   eax
650041f7:	call   0x650120d2
650041fc:	add    esp,0x4
650041ff:	push   0x65026bc8
65004204:	push   0x8
65004206:	push   0x65026bf4
6500420b:	call   0x65006a60
65004210:	mov    esi,eax
65004212:	mov    ecx,esi
65004214:	add    esp,0xc
65004217:	mov    DWORD PTR [ebp-0x10],0xf
6500421e:	mov    DWORD PTR [ebp-0x14],ebx
65004221:	mov    BYTE PTR [ebp-0x24],bl
65004224:	lea    edx,[ecx+0x1]
65004227:	mov    al,BYTE PTR [ecx]
65004229:	add    ecx,0x1
6500422c:	cmp    al,bl
6500422e:	jne    0x65004227
65004230:	sub    ecx,edx
65004232:	push   ecx
65004233:	push   esi
65004234:	lea    ecx,[ebp-0x28]
65004237:	call   0x650018c0
6500423c:	lea    ecx,[ebp-0x28]
6500423f:	push   ecx
65004240:	lea    edx,[ebp-0x40]
65004243:	push   edx
65004244:	lea    eax,[ebp-0x34]
65004247:	push   eax
65004248:	mov    BYTE PTR [ebp-0x4],0xa
6500424c:	call   0x65007110
65004251:	mov    BYTE PTR [ebp-0x4],0x2
65004255:	cmp    DWORD PTR [ebp-0x10],edi
65004258:	jb     0x65004266
6500425a:	mov    ecx,DWORD PTR [ebp-0x24]
6500425d:	push   ecx
6500425e:	call   0x650120d2
65004263:	add    esp,0x4
65004266:	push   0x65026c00
6500426b:	push   0xb
6500426d:	push   0x65026c28
65004272:	call   0x65006a60
65004277:	mov    esi,eax
65004279:	mov    ecx,esi
6500427b:	add    esp,0xc
6500427e:	mov    DWORD PTR [ebp-0x10],0xf
65004285:	mov    DWORD PTR [ebp-0x14],ebx
65004288:	mov    BYTE PTR [ebp-0x24],bl
6500428b:	lea    edx,[ecx+0x1]
6500428e:	mov    edi,edi
65004290:	mov    al,BYTE PTR [ecx]
65004292:	add    ecx,0x1
65004295:	cmp    al,bl
65004297:	jne    0x65004290
65004299:	sub    ecx,edx
6500429b:	push   ecx
6500429c:	push   esi
6500429d:	lea    ecx,[ebp-0x28]
650042a0:	call   0x650018c0
650042a5:	lea    edx,[ebp-0x28]
650042a8:	push   edx
650042a9:	lea    eax,[ebp-0x40]
650042ac:	push   eax
650042ad:	lea    ecx,[ebp-0x34]
650042b0:	push   ecx
650042b1:	mov    BYTE PTR [ebp-0x4],0xb
650042b5:	call   0x65007110
650042ba:	mov    BYTE PTR [ebp-0x4],0x2
650042be:	cmp    DWORD PTR [ebp-0x10],edi
650042c1:	jb     0x650042cf
650042c3:	mov    edx,DWORD PTR [ebp-0x24]
650042c6:	push   edx
650042c7:	call   0x650120d2
650042cc:	add    esp,0x4
650042cf:	push   0x65026c34
650042d4:	push   0x1e
650042d6:	push   0x65026c6c
650042db:	call   0x65006a60
650042e0:	mov    esi,eax
650042e2:	mov    ecx,esi
650042e4:	add    esp,0xc
650042e7:	mov    DWORD PTR [ebp-0x10],0xf
650042ee:	mov    DWORD PTR [ebp-0x14],ebx
650042f1:	mov    BYTE PTR [ebp-0x24],bl
650042f4:	lea    edx,[ecx+0x1]
650042f7:	mov    al,BYTE PTR [ecx]
650042f9:	add    ecx,0x1
650042fc:	cmp    al,bl
650042fe:	jne    0x650042f7
65004300:	sub    ecx,edx
65004302:	push   ecx
65004303:	push   esi
65004304:	lea    ecx,[ebp-0x28]
65004307:	call   0x650018c0
6500430c:	lea    eax,[ebp-0x28]
6500430f:	push   eax
65004310:	lea    ecx,[ebp-0x40]
65004313:	push   ecx
65004314:	lea    edx,[ebp-0x34]
65004317:	push   edx
65004318:	mov    BYTE PTR [ebp-0x4],0xc
6500431c:	call   0x65007110
65004321:	mov    BYTE PTR [ebp-0x4],0x2
65004325:	cmp    DWORD PTR [ebp-0x10],edi
65004328:	jb     0x65004336
6500432a:	mov    eax,DWORD PTR [ebp-0x24]
6500432d:	push   eax
6500432e:	call   0x650120d2
65004333:	add    esp,0x4
65004336:	push   0x65026c8c
6500433b:	push   0x7
6500433d:	push   0x65026cb0
65004342:	call   0x65006a60
65004347:	mov    esi,eax
65004349:	mov    ecx,esi
6500434b:	add    esp,0xc
6500434e:	mov    DWORD PTR [ebp-0x10],0xf
65004355:	mov    DWORD PTR [ebp-0x14],ebx
65004358:	mov    BYTE PTR [ebp-0x24],bl
6500435b:	lea    edx,[ecx+0x1]
6500435e:	mov    edi,edi
65004360:	mov    al,BYTE PTR [ecx]
65004362:	add    ecx,0x1
65004365:	cmp    al,bl
65004367:	jne    0x65004360
65004369:	sub    ecx,edx
6500436b:	push   ecx
6500436c:	push   esi
6500436d:	lea    ecx,[ebp-0x28]
65004370:	call   0x650018c0
65004375:	lea    ecx,[ebp-0x28]
65004378:	push   ecx
65004379:	lea    edx,[ebp-0x40]
6500437c:	push   edx
6500437d:	lea    eax,[ebp-0x34]
65004380:	push   eax
65004381:	mov    BYTE PTR [ebp-0x4],0xd
65004385:	call   0x65007110
6500438a:	mov    BYTE PTR [ebp-0x4],0x2
6500438e:	cmp    DWORD PTR [ebp-0x10],edi
65004391:	jb     0x6500439f
65004393:	mov    ecx,DWORD PTR [ebp-0x24]
65004396:	push   ecx
65004397:	call   0x650120d2
6500439c:	add    esp,0x4
6500439f:	push   0x65026cb8
650043a4:	push   0xc
650043a6:	push   0x65026cf8
650043ab:	call   0x65006a60
650043b0:	mov    esi,eax
650043b2:	mov    ecx,esi
650043b4:	add    esp,0xc
650043b7:	mov    DWORD PTR [ebp-0x10],0xf
650043be:	mov    DWORD PTR [ebp-0x14],ebx
650043c1:	mov    BYTE PTR [ebp-0x24],bl
650043c4:	lea    edx,[ecx+0x1]
650043c7:	mov    al,BYTE PTR [ecx]
650043c9:	add    ecx,0x1
650043cc:	cmp    al,bl
650043ce:	jne    0x650043c7
650043d0:	sub    ecx,edx
650043d2:	push   ecx
650043d3:	push   esi
650043d4:	lea    ecx,[ebp-0x28]
650043d7:	call   0x650018c0
650043dc:	lea    edx,[ebp-0x28]
650043df:	push   edx
650043e0:	lea    eax,[ebp-0x40]
650043e3:	push   eax
650043e4:	lea    ecx,[ebp-0x34]
650043e7:	push   ecx
650043e8:	mov    BYTE PTR [ebp-0x4],0xe
650043ec:	call   0x65007110
650043f1:	mov    BYTE PTR [ebp-0x4],0x2
650043f5:	cmp    DWORD PTR [ebp-0x10],edi
650043f8:	jb     0x65004406
650043fa:	mov    edx,DWORD PTR [ebp-0x24]
650043fd:	push   edx
650043fe:	call   0x650120d2
65004403:	add    esp,0x4
65004406:	push   0x65026d08
6500440b:	push   0x11
6500440d:	push   0x65026d48
65004412:	call   0x65006a60
65004417:	mov    esi,eax
65004419:	mov    ecx,esi
6500441b:	add    esp,0xc
6500441e:	mov    DWORD PTR [ebp-0x10],0xf
65004425:	mov    DWORD PTR [ebp-0x14],ebx
65004428:	mov    BYTE PTR [ebp-0x24],bl
6500442b:	lea    edx,[ecx+0x1]
6500442e:	mov    edi,edi
65004430:	mov    al,BYTE PTR [ecx]
65004432:	add    ecx,0x1
65004435:	cmp    al,bl
65004437:	jne    0x65004430
65004439:	sub    ecx,edx
6500443b:	push   ecx
6500443c:	push   esi
6500443d:	lea    ecx,[ebp-0x28]
65004440:	call   0x650018c0
65004445:	lea    eax,[ebp-0x28]
65004448:	push   eax
65004449:	lea    ecx,[ebp-0x40]
6500444c:	push   ecx
6500444d:	lea    edx,[ebp-0x34]
65004450:	push   edx
65004451:	mov    BYTE PTR [ebp-0x4],0xf
65004455:	call   0x65007110
6500445a:	mov    BYTE PTR [ebp-0x4],0x2
6500445e:	cmp    DWORD PTR [ebp-0x10],edi
65004461:	jb     0x6500446f
65004463:	mov    eax,DWORD PTR [ebp-0x24]
65004466:	push   eax
65004467:	call   0x650120d2
6500446c:	add    esp,0x4
6500446f:	push   0x65026d5c
65004474:	push   0x7
65004476:	push   0x65026d90
6500447b:	call   0x65006a60
65004480:	mov    esi,eax
65004482:	mov    ecx,esi
65004484:	add    esp,0xc
65004487:	mov    DWORD PTR [ebp-0x10],0xf
6500448e:	mov    DWORD PTR [ebp-0x14],ebx
65004491:	mov    BYTE PTR [ebp-0x24],bl
65004494:	lea    edx,[ecx+0x1]
65004497:	mov    al,BYTE PTR [ecx]
65004499:	add    ecx,0x1
6500449c:	cmp    al,bl
6500449e:	jne    0x65004497
650044a0:	sub    ecx,edx
650044a2:	push   ecx
650044a3:	push   esi
650044a4:	lea    ecx,[ebp-0x28]
650044a7:	call   0x650018c0
650044ac:	lea    ecx,[ebp-0x28]
650044af:	push   ecx
650044b0:	lea    edx,[ebp-0x40]
650044b3:	push   edx
650044b4:	lea    eax,[ebp-0x34]
650044b7:	push   eax
650044b8:	mov    BYTE PTR [ebp-0x4],0x10
650044bc:	call   0x65007110
650044c1:	mov    BYTE PTR [ebp-0x4],0x2
650044c5:	cmp    DWORD PTR [ebp-0x10],edi
650044c8:	jb     0x650044d6
650044ca:	mov    ecx,DWORD PTR [ebp-0x24]
650044cd:	push   ecx
650044ce:	call   0x650120d2
650044d3:	add    esp,0x4
650044d6:	push   0x65026d98
650044db:	push   0x6
650044dd:	push   0x65026dc4
650044e2:	call   0x65006a60
650044e7:	mov    esi,eax
650044e9:	mov    ecx,esi
650044eb:	add    esp,0xc
650044ee:	mov    DWORD PTR [ebp-0x10],0xf
650044f5:	mov    DWORD PTR [ebp-0x14],ebx
650044f8:	mov    BYTE PTR [ebp-0x24],bl
650044fb:	lea    edx,[ecx+0x1]
650044fe:	mov    edi,edi
65004500:	mov    al,BYTE PTR [ecx]
65004502:	add    ecx,0x1
65004505:	cmp    al,bl
65004507:	jne    0x65004500
65004509:	sub    ecx,edx
6500450b:	push   ecx
6500450c:	push   esi
6500450d:	lea    ecx,[ebp-0x28]
65004510:	call   0x650018c0
65004515:	lea    edx,[ebp-0x28]
65004518:	push   edx
65004519:	lea    eax,[ebp-0x40]
6500451c:	push   eax
6500451d:	lea    ecx,[ebp-0x34]
65004520:	push   ecx
65004521:	mov    BYTE PTR [ebp-0x4],0x11
65004525:	call   0x65007110
6500452a:	mov    BYTE PTR [ebp-0x4],0x2
6500452e:	cmp    DWORD PTR [ebp-0x10],edi
65004531:	jb     0x6500453f
65004533:	mov    edx,DWORD PTR [ebp-0x24]
65004536:	push   edx
65004537:	call   0x650120d2
6500453c:	add    esp,0x4
6500453f:	push   0x65026dcc
65004544:	push   0x3
65004546:	push   0x65026df0
6500454b:	call   0x65006a60
65004550:	mov    esi,eax
65004552:	mov    ecx,esi
65004554:	add    esp,0xc
65004557:	mov    DWORD PTR [ebp-0x10],0xf
6500455e:	mov    DWORD PTR [ebp-0x14],ebx
65004561:	mov    BYTE PTR [ebp-0x24],bl
65004564:	lea    edx,[ecx+0x1]
65004567:	mov    al,BYTE PTR [ecx]
65004569:	add    ecx,0x1
6500456c:	cmp    al,bl
6500456e:	jne    0x65004567
65004570:	sub    ecx,edx
65004572:	push   ecx
65004573:	push   esi
65004574:	lea    ecx,[ebp-0x28]
65004577:	call   0x650018c0
6500457c:	lea    eax,[ebp-0x28]
6500457f:	push   eax
65004580:	lea    ecx,[ebp-0x40]
65004583:	push   ecx
65004584:	lea    edx,[ebp-0x34]
65004587:	push   edx
65004588:	mov    BYTE PTR [ebp-0x4],0x12
6500458c:	call   0x65007110
65004591:	mov    BYTE PTR [ebp-0x4],0x2
65004595:	cmp    DWORD PTR [ebp-0x10],edi
65004598:	jb     0x650045a6
6500459a:	mov    eax,DWORD PTR [ebp-0x24]
6500459d:	push   eax
6500459e:	call   0x650120d2
650045a3:	add    esp,0x4
650045a6:	push   0x65026df4
650045ab:	push   0x8
650045ad:	push   0x65026e1c
650045b2:	call   0x65006a60
650045b7:	mov    esi,eax
650045b9:	mov    ecx,esi
650045bb:	add    esp,0xc
650045be:	mov    DWORD PTR [ebp-0x10],0xf
650045c5:	mov    DWORD PTR [ebp-0x14],ebx
650045c8:	mov    BYTE PTR [ebp-0x24],bl
650045cb:	lea    edx,[ecx+0x1]
650045ce:	mov    edi,edi
650045d0:	mov    al,BYTE PTR [ecx]
650045d2:	add    ecx,0x1
650045d5:	cmp    al,bl
650045d7:	jne    0x650045d0
650045d9:	sub    ecx,edx
650045db:	push   ecx
650045dc:	push   esi
650045dd:	lea    ecx,[ebp-0x28]
650045e0:	call   0x650018c0
650045e5:	lea    ecx,[ebp-0x28]
650045e8:	push   ecx
650045e9:	lea    edx,[ebp-0x40]
650045ec:	push   edx
650045ed:	lea    eax,[ebp-0x34]
650045f0:	push   eax
650045f1:	mov    BYTE PTR [ebp-0x4],0x13
650045f5:	call   0x65007110
650045fa:	mov    BYTE PTR [ebp-0x4],0x2
650045fe:	cmp    DWORD PTR [ebp-0x10],edi
65004601:	jb     0x6500460f
65004603:	mov    ecx,DWORD PTR [ebp-0x24]
65004606:	push   ecx
65004607:	call   0x650120d2
6500460c:	add    esp,0x4
6500460f:	push   0x65026e28
65004614:	push   0xb
65004616:	push   0x65026e5c
6500461b:	call   0x65006a60
65004620:	mov    esi,eax
65004622:	mov    ecx,esi
65004624:	add    esp,0xc
65004627:	mov    DWORD PTR [ebp-0x10],0xf
6500462e:	mov    DWORD PTR [ebp-0x14],ebx
65004631:	mov    BYTE PTR [ebp-0x24],bl
65004634:	lea    edx,[ecx+0x1]
65004637:	mov    al,BYTE PTR [ecx]
65004639:	add    ecx,0x1
6500463c:	cmp    al,bl
6500463e:	jne    0x65004637
65004640:	sub    ecx,edx
65004642:	push   ecx
65004643:	push   esi
65004644:	lea    ecx,[ebp-0x28]
65004647:	call   0x650018c0
6500464c:	lea    edx,[ebp-0x28]
6500464f:	push   edx
65004650:	lea    eax,[ebp-0x40]
65004653:	push   eax
65004654:	lea    ecx,[ebp-0x34]
65004657:	push   ecx
65004658:	mov    BYTE PTR [ebp-0x4],0x14
6500465c:	call   0x65007110
65004661:	mov    BYTE PTR [ebp-0x4],0x2
65004665:	cmp    DWORD PTR [ebp-0x10],edi
65004668:	jb     0x65004676
6500466a:	mov    edx,DWORD PTR [ebp-0x24]
6500466d:	push   edx
6500466e:	call   0x650120d2
65004673:	add    esp,0x4
65004676:	push   0x65026e68
6500467b:	push   edi
6500467c:	push   0x65026ea4
65004681:	call   0x65006a60
65004686:	mov    esi,eax
65004688:	mov    ecx,esi
6500468a:	add    esp,0xc
6500468d:	mov    DWORD PTR [ebp-0x10],0xf
65004694:	mov    DWORD PTR [ebp-0x14],ebx
65004697:	mov    BYTE PTR [ebp-0x24],bl
6500469a:	lea    edx,[ecx+0x1]
6500469d:	lea    ecx,[ecx+0x0]
650046a0:	mov    al,BYTE PTR [ecx]
650046a2:	add    ecx,0x1
650046a5:	cmp    al,bl
650046a7:	jne    0x650046a0
650046a9:	sub    ecx,edx
650046ab:	push   ecx
650046ac:	push   esi
650046ad:	lea    ecx,[ebp-0x28]
650046b0:	call   0x650018c0
650046b5:	lea    eax,[ebp-0x28]
650046b8:	push   eax
650046b9:	lea    ecx,[ebp-0x40]
650046bc:	push   ecx
650046bd:	lea    edx,[ebp-0x34]
650046c0:	push   edx
650046c1:	mov    BYTE PTR [ebp-0x4],0x15
650046c5:	call   0x65007110
650046ca:	mov    BYTE PTR [ebp-0x4],0x2
650046ce:	cmp    DWORD PTR [ebp-0x10],edi
650046d1:	jb     0x650046df
650046d3:	mov    eax,DWORD PTR [ebp-0x24]
650046d6:	push   eax
650046d7:	call   0x650120d2
650046dc:	add    esp,0x4
650046df:	push   0x65026eb8
650046e4:	push   0x5
650046e6:	push   0x65026ef0
650046eb:	call   0x65006a60
650046f0:	mov    esi,eax
650046f2:	mov    ecx,esi
650046f4:	add    esp,0xc
650046f7:	mov    DWORD PTR [ebp-0x10],0xf
650046fe:	mov    DWORD PTR [ebp-0x14],ebx
65004701:	mov    BYTE PTR [ebp-0x24],bl
65004704:	lea    edx,[ecx+0x1]
65004707:	mov    al,BYTE PTR [ecx]
65004709:	add    ecx,0x1
6500470c:	cmp    al,bl
6500470e:	jne    0x65004707
65004710:	sub    ecx,edx
65004712:	push   ecx
65004713:	push   esi
65004714:	lea    ecx,[ebp-0x28]
65004717:	call   0x650018c0
6500471c:	lea    ecx,[ebp-0x28]
6500471f:	push   ecx
65004720:	lea    edx,[ebp-0x40]
65004723:	push   edx
65004724:	lea    eax,[ebp-0x34]
65004727:	push   eax
65004728:	mov    BYTE PTR [ebp-0x4],0x16
6500472c:	call   0x65007110
65004731:	mov    BYTE PTR [ebp-0x4],0x2
65004735:	cmp    DWORD PTR [ebp-0x10],edi
65004738:	jb     0x65004746
6500473a:	mov    ecx,DWORD PTR [ebp-0x24]
6500473d:	push   ecx
6500473e:	call   0x650120d2
65004743:	add    esp,0x4
65004746:	push   0x65026ef8
6500474b:	push   0x5
6500474d:	push   0x65026f38
65004752:	call   0x65006a60
65004757:	mov    esi,eax
65004759:	mov    ecx,esi
6500475b:	add    esp,0xc
6500475e:	mov    DWORD PTR [ebp-0x10],0xf
65004765:	mov    DWORD PTR [ebp-0x14],ebx
65004768:	mov    BYTE PTR [ebp-0x24],bl
6500476b:	lea    edx,[ecx+0x1]
6500476e:	mov    edi,edi
65004770:	mov    al,BYTE PTR [ecx]
65004772:	add    ecx,0x1
65004775:	cmp    al,bl
65004777:	jne    0x65004770
65004779:	sub    ecx,edx
6500477b:	push   ecx
6500477c:	push   esi
6500477d:	lea    ecx,[ebp-0x28]
65004780:	call   0x650018c0
65004785:	lea    edx,[ebp-0x28]
65004788:	push   edx
65004789:	lea    eax,[ebp-0x40]
6500478c:	push   eax
6500478d:	lea    ecx,[ebp-0x34]
65004790:	push   ecx
65004791:	mov    BYTE PTR [ebp-0x4],0x17
65004795:	call   0x65007110
6500479a:	mov    BYTE PTR [ebp-0x4],0x2
6500479e:	cmp    DWORD PTR [ebp-0x10],edi
650047a1:	jb     0x650047af
650047a3:	mov    edx,DWORD PTR [ebp-0x24]
650047a6:	push   edx
650047a7:	call   0x650120d2
650047ac:	add    esp,0x4
650047af:	push   0x65026f40
650047b4:	push   0x8
650047b6:	push   0x65026f68
650047bb:	call   0x65006a60
650047c0:	mov    esi,eax
650047c2:	mov    ecx,esi
650047c4:	add    esp,0xc
650047c7:	mov    DWORD PTR [ebp-0x10],0xf
650047ce:	mov    DWORD PTR [ebp-0x14],ebx
650047d1:	mov    BYTE PTR [ebp-0x24],bl
650047d4:	lea    edx,[ecx+0x1]
650047d7:	mov    al,BYTE PTR [ecx]
650047d9:	add    ecx,0x1
650047dc:	cmp    al,bl
650047de:	jne    0x650047d7
650047e0:	sub    ecx,edx
650047e2:	push   ecx
650047e3:	push   esi
650047e4:	lea    ecx,[ebp-0x28]
650047e7:	call   0x650018c0
650047ec:	lea    eax,[ebp-0x28]
650047ef:	push   eax
650047f0:	lea    ecx,[ebp-0x40]
650047f3:	push   ecx
650047f4:	lea    edx,[ebp-0x34]
650047f7:	push   edx
650047f8:	mov    BYTE PTR [ebp-0x4],0x18
650047fc:	call   0x65007110
65004801:	mov    BYTE PTR [ebp-0x4],0x2
65004805:	cmp    DWORD PTR [ebp-0x10],edi
65004808:	jb     0x65004816
6500480a:	mov    eax,DWORD PTR [ebp-0x24]
6500480d:	push   eax
6500480e:	call   0x650120d2
65004813:	add    esp,0x4
65004816:	push   0x65026f74
6500481b:	push   0x8
6500481d:	push   0x65026f98
65004822:	call   0x65006a60
65004827:	add    esp,0xc
6500482a:	push   eax
6500482b:	lea    ecx,[ebp-0x28]
6500482e:	call   0x65002720
65004833:	lea    ecx,[ebp-0x28]
65004836:	push   ecx
65004837:	lea    edx,[ebp-0x40]
6500483a:	push   edx
6500483b:	lea    eax,[ebp-0x34]
6500483e:	push   eax
6500483f:	mov    BYTE PTR [ebp-0x4],0x19
65004843:	call   0x65007110
65004848:	mov    BYTE PTR [ebp-0x4],0x2
6500484c:	cmp    DWORD PTR [ebp-0x10],edi
6500484f:	jb     0x6500485d
65004851:	mov    ecx,DWORD PTR [ebp-0x24]
65004854:	push   ecx
65004855:	call   0x650120d2
6500485a:	add    esp,0x4
6500485d:	push   0x65026fa4
65004862:	push   0x4
65004864:	push   0x65026fd4
65004869:	call   0x65006a60
6500486e:	add    esp,0xc
65004871:	push   eax
65004872:	lea    ecx,[ebp-0x28]
65004875:	call   0x65002720
6500487a:	lea    edx,[ebp-0x28]
6500487d:	push   edx
6500487e:	lea    eax,[ebp-0x40]
65004881:	push   eax
65004882:	lea    ecx,[ebp-0x34]
65004885:	push   ecx
65004886:	mov    BYTE PTR [ebp-0x4],0x1a
6500488a:	call   0x65007110
6500488f:	mov    BYTE PTR [ebp-0x4],0x2
65004893:	cmp    DWORD PTR [ebp-0x10],edi
65004896:	jb     0x650048a4
65004898:	mov    edx,DWORD PTR [ebp-0x24]
6500489b:	push   edx
6500489c:	call   0x650120d2
650048a1:	add    esp,0x4
650048a4:	push   0x65026fdc
650048a9:	push   0xc
650048ab:	push   0x65027010
650048b0:	call   0x65006a60
650048b5:	add    esp,0xc
650048b8:	push   eax
650048b9:	lea    ecx,[ebp-0x28]
650048bc:	call   0x65002720
650048c1:	lea    eax,[ebp-0x28]
650048c4:	push   eax
650048c5:	lea    ecx,[ebp-0x40]
650048c8:	push   ecx
650048c9:	lea    edx,[ebp-0x34]
650048cc:	push   edx
650048cd:	mov    BYTE PTR [ebp-0x4],0x1b
650048d1:	call   0x65007110
650048d6:	mov    BYTE PTR [ebp-0x4],0x2
650048da:	cmp    DWORD PTR [ebp-0x10],edi
650048dd:	jb     0x650048eb
650048df:	mov    eax,DWORD PTR [ebp-0x24]
650048e2:	push   eax
650048e3:	call   0x650120d2
650048e8:	add    esp,0x4
650048eb:	push   0x65027020
650048f0:	push   edi
650048f1:	push   0x65027048
650048f6:	call   0x65006a60
650048fb:	add    esp,0xc
650048fe:	push   eax
650048ff:	lea    ecx,[ebp-0x28]
65004902:	call   0x65002720
65004907:	lea    ecx,[ebp-0x28]
6500490a:	push   ecx
6500490b:	lea    edx,[ebp-0x40]
6500490e:	push   edx
6500490f:	lea    eax,[ebp-0x34]
65004912:	push   eax
65004913:	mov    BYTE PTR [ebp-0x4],0x1c
65004917:	call   0x65007110
6500491c:	mov    BYTE PTR [ebp-0x4],0x2
65004920:	cmp    DWORD PTR [ebp-0x10],edi
65004923:	jb     0x65004931
65004925:	mov    ecx,DWORD PTR [ebp-0x24]
65004928:	push   ecx
65004929:	call   0x650120d2
6500492e:	add    esp,0x4
65004931:	push   0x6502705c
65004936:	push   0x7
65004938:	push   0x65027084
6500493d:	call   0x65006a60
65004942:	add    esp,0xc
65004945:	push   eax
65004946:	lea    ecx,[ebp-0x28]
65004949:	call   0x65002720
6500494e:	lea    edx,[ebp-0x28]
65004951:	push   edx
65004952:	lea    eax,[ebp-0x40]
65004955:	push   eax
65004956:	lea    ecx,[ebp-0x34]
65004959:	push   ecx
6500495a:	mov    BYTE PTR [ebp-0x4],0x1d
6500495e:	call   0x65007110
65004963:	mov    BYTE PTR [ebp-0x4],0x2
65004967:	cmp    DWORD PTR [ebp-0x10],edi
6500496a:	jb     0x65004978
6500496c:	mov    edx,DWORD PTR [ebp-0x24]
6500496f:	push   edx
65004970:	call   0x650120d2
65004975:	add    esp,0x4
65004978:	push   0x6502708c
6500497d:	push   0x9
6500497f:	push   0x650270c8
65004984:	call   0x65006a60
65004989:	add    esp,0xc
6500498c:	push   eax
6500498d:	lea    ecx,[ebp-0x28]
65004990:	call   0x65002720
65004995:	lea    eax,[ebp-0x28]
65004998:	push   eax
65004999:	lea    ecx,[ebp-0x40]
6500499c:	push   ecx
6500499d:	lea    edx,[ebp-0x34]
650049a0:	push   edx
650049a1:	mov    BYTE PTR [ebp-0x4],0x1e
650049a5:	call   0x65007110
650049aa:	mov    BYTE PTR [ebp-0x4],0x2
650049ae:	cmp    DWORD PTR [ebp-0x10],edi
650049b1:	jb     0x650049bf
650049b3:	mov    eax,DWORD PTR [ebp-0x24]
650049b6:	push   eax
650049b7:	call   0x650120d2
650049bc:	add    esp,0x4
650049bf:	push   0x650270d4
650049c4:	push   0x7
650049c6:	push   0x65027104
650049cb:	call   0x65006a60
650049d0:	add    esp,0xc
650049d3:	push   eax
650049d4:	lea    ecx,[ebp-0x28]
650049d7:	call   0x65002720
650049dc:	lea    ecx,[ebp-0x28]
650049df:	push   ecx
650049e0:	lea    edx,[ebp-0x40]
650049e3:	push   edx
650049e4:	lea    eax,[ebp-0x34]
650049e7:	push   eax
650049e8:	mov    BYTE PTR [ebp-0x4],0x1f
650049ec:	call   0x65007110
650049f1:	mov    BYTE PTR [ebp-0x4],0x2
650049f5:	cmp    DWORD PTR [ebp-0x10],edi
650049f8:	jb     0x65004a06
650049fa:	mov    ecx,DWORD PTR [ebp-0x24]
650049fd:	push   ecx
650049fe:	call   0x650120d2
65004a03:	add    esp,0x4
65004a06:	push   0x6502710c
65004a0b:	push   0xb
65004a0d:	push   0x6502713c
65004a12:	call   0x65006a60
65004a17:	add    esp,0xc
65004a1a:	push   eax
65004a1b:	lea    ecx,[ebp-0x28]
65004a1e:	call   0x65002720
65004a23:	lea    edx,[ebp-0x28]
65004a26:	push   edx
65004a27:	lea    eax,[ebp-0x40]
65004a2a:	push   eax
65004a2b:	lea    ecx,[ebp-0x34]
65004a2e:	push   ecx
65004a2f:	mov    BYTE PTR [ebp-0x4],0x20
65004a33:	call   0x65007110
65004a38:	mov    BYTE PTR [ebp-0x4],0x2
65004a3c:	cmp    DWORD PTR [ebp-0x10],edi
65004a3f:	jb     0x65004a4d
65004a41:	mov    edx,DWORD PTR [ebp-0x24]
65004a44:	push   edx
65004a45:	call   0x650120d2
65004a4a:	add    esp,0x4
65004a4d:	push   0x65027148
65004a52:	push   0x6
65004a54:	push   0x65027180
65004a59:	call   0x65006a60
65004a5e:	add    esp,0xc
65004a61:	push   eax
65004a62:	lea    ecx,[ebp-0x28]
65004a65:	call   0x65002720
65004a6a:	lea    eax,[ebp-0x28]
65004a6d:	push   eax
65004a6e:	lea    ecx,[ebp-0x40]
65004a71:	push   ecx
65004a72:	lea    edx,[ebp-0x34]
65004a75:	push   edx
65004a76:	mov    BYTE PTR [ebp-0x4],0x21
65004a7a:	call   0x65007110
65004a7f:	mov    BYTE PTR [ebp-0x4],0x2
65004a83:	cmp    DWORD PTR [ebp-0x10],edi
65004a86:	jb     0x65004a94
65004a88:	mov    eax,DWORD PTR [ebp-0x24]
65004a8b:	push   eax
65004a8c:	call   0x650120d2
65004a91:	add    esp,0x4
65004a94:	push   0x65027188
65004a99:	push   0x6
65004a9b:	push   0x650271b0
65004aa0:	call   0x65006a60
65004aa5:	add    esp,0xc
65004aa8:	push   eax
65004aa9:	lea    ecx,[ebp-0x28]
65004aac:	call   0x65002720
65004ab1:	lea    ecx,[ebp-0x28]
65004ab4:	push   ecx
65004ab5:	lea    edx,[ebp-0x40]
65004ab8:	push   edx
65004ab9:	lea    eax,[ebp-0x34]
65004abc:	push   eax
65004abd:	mov    BYTE PTR [ebp-0x4],0x22
65004ac1:	call   0x65007110
65004ac6:	mov    BYTE PTR [ebp-0x4],0x2
65004aca:	cmp    DWORD PTR [ebp-0x10],edi
65004acd:	jb     0x65004adb
65004acf:	mov    ecx,DWORD PTR [ebp-0x24]
65004ad2:	push   ecx
65004ad3:	call   0x650120d2
65004ad8:	add    esp,0x4
65004adb:	push   0x650271b8
65004ae0:	push   0x7
65004ae2:	push   0x650271ec
65004ae7:	call   0x65006a60
65004aec:	add    esp,0xc
65004aef:	push   eax
65004af0:	lea    ecx,[ebp-0x28]
65004af3:	call   0x65002720
65004af8:	lea    edx,[ebp-0x28]
65004afb:	push   edx
65004afc:	lea    eax,[ebp-0x40]
65004aff:	push   eax
65004b00:	lea    ecx,[ebp-0x34]
65004b03:	push   ecx
65004b04:	mov    BYTE PTR [ebp-0x4],0x23
65004b08:	call   0x65007110
65004b0d:	mov    BYTE PTR [ebp-0x4],0x2
65004b11:	cmp    DWORD PTR [ebp-0x10],edi
65004b14:	jb     0x65004b22
65004b16:	mov    edx,DWORD PTR [ebp-0x24]
65004b19:	push   edx
65004b1a:	call   0x650120d2
65004b1f:	add    esp,0x4
65004b22:	push   0x650271f4
65004b27:	push   0x9
65004b29:	push   0x65027228
65004b2e:	call   0x65006a60
65004b33:	add    esp,0xc
65004b36:	push   eax
65004b37:	lea    ecx,[ebp-0x28]
65004b3a:	call   0x65002720
65004b3f:	lea    eax,[ebp-0x28]
65004b42:	push   eax
65004b43:	lea    ecx,[ebp-0x40]
65004b46:	push   ecx
65004b47:	lea    edx,[ebp-0x34]
65004b4a:	push   edx
65004b4b:	mov    BYTE PTR [ebp-0x4],0x24
65004b4f:	call   0x65007110
65004b54:	mov    BYTE PTR [ebp-0x4],0x2
65004b58:	cmp    DWORD PTR [ebp-0x10],edi
65004b5b:	jb     0x65004b69
65004b5d:	mov    eax,DWORD PTR [ebp-0x24]
65004b60:	push   eax
65004b61:	call   0x650120d2
65004b66:	add    esp,0x4
65004b69:	push   0x65027234
65004b6e:	push   0x7
65004b70:	push   0x6502726c
65004b75:	call   0x65006a60
65004b7a:	add    esp,0xc
65004b7d:	push   eax
65004b7e:	lea    ecx,[ebp-0x28]
65004b81:	call   0x65002720
65004b86:	lea    ecx,[ebp-0x28]
65004b89:	push   ecx
65004b8a:	lea    edx,[ebp-0x40]
65004b8d:	push   edx
65004b8e:	lea    eax,[ebp-0x34]
65004b91:	push   eax
65004b92:	mov    BYTE PTR [ebp-0x4],0x25
65004b96:	call   0x65007110
65004b9b:	mov    BYTE PTR [ebp-0x4],0x2
65004b9f:	cmp    DWORD PTR [ebp-0x10],edi
65004ba2:	jb     0x65004bb0
65004ba4:	mov    ecx,DWORD PTR [ebp-0x24]
65004ba7:	push   ecx
65004ba8:	call   0x650120d2
65004bad:	add    esp,0x4
65004bb0:	push   0x65027274
65004bb5:	push   0x6
65004bb7:	push   0x650272a0
65004bbc:	call   0x65006a60
65004bc1:	add    esp,0xc
65004bc4:	push   eax
65004bc5:	lea    ecx,[ebp-0x28]
65004bc8:	call   0x65002720
65004bcd:	lea    edx,[ebp-0x28]
65004bd0:	push   edx
65004bd1:	lea    eax,[ebp-0x40]
65004bd4:	push   eax
65004bd5:	lea    ecx,[ebp-0x34]
65004bd8:	push   ecx
65004bd9:	mov    BYTE PTR [ebp-0x4],0x26
65004bdd:	call   0x65007110
65004be2:	mov    BYTE PTR [ebp-0x4],0x2
65004be6:	cmp    DWORD PTR [ebp-0x10],edi
65004be9:	jb     0x65004bf7
65004beb:	mov    edx,DWORD PTR [ebp-0x24]
65004bee:	push   edx
65004bef:	call   0x650120d2
65004bf4:	add    esp,0x4
65004bf7:	push   0x650272a8
65004bfc:	push   0x8
65004bfe:	push   0x650272d8
65004c03:	call   0x65006a60
65004c08:	add    esp,0xc
65004c0b:	push   eax
65004c0c:	lea    ecx,[ebp-0x28]
65004c0f:	call   0x65002720
65004c14:	lea    eax,[ebp-0x28]
65004c17:	push   eax
65004c18:	lea    ecx,[ebp-0x40]
65004c1b:	push   ecx
65004c1c:	lea    edx,[ebp-0x34]
65004c1f:	push   edx
65004c20:	mov    BYTE PTR [ebp-0x4],0x27
65004c24:	call   0x65007110
65004c29:	mov    BYTE PTR [ebp-0x4],0x2
65004c2d:	cmp    DWORD PTR [ebp-0x10],edi
65004c30:	jb     0x65004c3e
65004c32:	mov    eax,DWORD PTR [ebp-0x24]
65004c35:	push   eax
65004c36:	call   0x650120d2
65004c3b:	add    esp,0x4
65004c3e:	push   0x650272e4
65004c43:	push   0x6
65004c45:	push   0x65027308
65004c4a:	call   0x65006a60
65004c4f:	add    esp,0xc
65004c52:	push   eax
65004c53:	lea    ecx,[ebp-0x28]
65004c56:	call   0x65002720
65004c5b:	lea    ecx,[ebp-0x28]
65004c5e:	push   ecx
65004c5f:	lea    edx,[ebp-0x40]
65004c62:	push   edx
65004c63:	lea    eax,[ebp-0x34]
65004c66:	push   eax
65004c67:	mov    BYTE PTR [ebp-0x4],0x28
65004c6b:	call   0x65007110
65004c70:	mov    BYTE PTR [ebp-0x4],0x2
65004c74:	cmp    DWORD PTR [ebp-0x10],edi
65004c77:	jb     0x65004c85
65004c79:	mov    ecx,DWORD PTR [ebp-0x24]
65004c7c:	push   ecx
65004c7d:	call   0x650120d2
65004c82:	add    esp,0x4
65004c85:	lea    edx,[ebp-0x40]
65004c88:	push   edx
65004c89:	lea    ecx,[ebp-0x34]
65004c8c:	call   0x65003c00
65004c91:	add    esp,0x4
65004c94:	mov    ecx,0x65030400
65004c99:	mov    BYTE PTR [ebp-0x4],0x29
65004c9d:	call   0x650070d0
65004ca2:	lea    eax,[ebp-0x40]
65004ca5:	mov    BYTE PTR [ebp-0x4],0x2
65004ca9:	call   0x65007af0
65004cae:	lea    eax,[ebp-0x34]
65004cb1:	mov    BYTE PTR [ebp-0x4],bl
65004cb4:	call   0x65007af0
65004cb9:	call   DWORD PTR ds:0x6502c06c
65004cbf:	mov    edi,DWORD PTR [ebp+0x40c]
65004cc5:	cmp    DWORD PTR [edi-0x4],0x1
65004cc9:	mov    DWORD PTR [ebp-0x48],eax
65004ccc:	jle    0x65004ce3
65004cce:	mov    eax,DWORD PTR [edi-0xc]
65004cd1:	push   eax
65004cd2:	lea    ecx,[ebp+0x40c]
65004cd8:	call   0x650019b0
65004cdd:	mov    edi,DWORD PTR [ebp+0x40c]
65004ce3:	cmp    edi,ebx
65004ce5:	jne    0x65004ceb
65004ce7:	xor    eax,eax
65004ce9:	jmp    0x65004d18
65004ceb:	push   edi
65004cec:	call   DWORD PTR ds:0x65024048
65004cf2:	add    eax,0x1
65004cf5:	cmp    eax,0x3fffffff
65004cfa:	jle    0x65004d00
65004cfc:	xor    eax,eax
65004cfe:	jmp    0x65004d18
65004d00:	lea    esi,[eax+eax*1]
65004d03:	mov    eax,esi
65004d05:	call   0x65013030
65004d0a:	mov    ecx,DWORD PTR [ebp-0x48]
65004d0d:	mov    eax,esp
65004d0f:	push   ecx
65004d10:	push   esi
65004d11:	push   edi
65004d12:	push   eax
65004d13:	call   0x65002b90
65004d18:	lea    edx,[ebp+0x0]
65004d1b:	jmp    0x65004d20
65004d1d:	lea    ecx,[ecx+0x0]
65004d20:	mov    cl,BYTE PTR [eax]
65004d22:	mov    BYTE PTR [edx],cl
65004d24:	add    eax,0x1
65004d27:	add    edx,0x1
65004d2a:	cmp    cl,bl
65004d2c:	jne    0x65004d20
65004d2e:	lea    edx,[ebp+0x0]
65004d31:	push   edx
65004d32:	call   0x6501ecd5
65004d37:	add    esp,0x4
65004d3a:	lea    eax,[ebp+0x0]
65004d3d:	push   eax
65004d3e:	lea    ecx,[ebp-0x28]
65004d41:	call   0x65002720
65004d46:	lea    eax,[ebp-0x28]
65004d49:	mov    esi,0x65030400
65004d4e:	mov    BYTE PTR [ebp-0x4],0x2a
65004d52:	call   0x650072a0
65004d57:	test   eax,eax
65004d59:	setne  BYTE PTR [ebp-0x41]
65004d5d:	cmp    DWORD PTR [ebp-0x10],0x10
65004d61:	jb     0x65004d6f
65004d63:	mov    ecx,DWORD PTR [ebp-0x24]
65004d66:	push   ecx
65004d67:	call   0x650120d2
65004d6c:	add    esp,0x4
65004d6f:	lea    eax,[edi-0x10]
65004d72:	mov    DWORD PTR [ebp-0x10],0xf
65004d79:	mov    DWORD PTR [ebp-0x14],ebx
65004d7c:	mov    BYTE PTR [ebp-0x24],bl
65004d7f:	mov    DWORD PTR [ebp-0x4],0xffffffff
65004d86:	lea    edx,[eax+0xc]
65004d89:	or     ecx,0xffffffff
65004d8c:	lock xadd DWORD PTR [edx],ecx
65004d90:	dec    ecx
65004d91:	test   ecx,ecx
65004d93:	jg     0x65004d9f
65004d95:	mov    ecx,DWORD PTR [eax]
65004d97:	mov    edx,DWORD PTR [ecx]
65004d99:	push   eax
65004d9a:	mov    eax,DWORD PTR [edx+0x4]
65004d9d:	call   eax
65004d9f:	mov    al,BYTE PTR [ebp-0x41]
65004da2:	lea    esp,[ebp-0x58]
65004da5:	mov    ecx,DWORD PTR [ebp-0xc]
65004da8:	mov    DWORD PTR fs:0x0,ecx
65004daf:	pop    ecx
65004db0:	pop    edi
65004db1:	pop    esi
65004db2:	pop    ebx
65004db3:	mov    ecx,DWORD PTR [ebp+0x400]
65004db9:	xor    ecx,ebp
65004dbb:	call   0x6501292c
65004dc0:	add    ebp,0x404
65004dc6:	mov    esp,ebp
65004dc8:	pop    ebp
65004dc9:	ret    
65004dca:	int3   
65004dcb:	int3   
65004dcc:	int3   
65004dcd:	int3   
65004dce:	int3   
65004dcf:	int3   
65004dd0:	push   ebp
65004dd1:	lea    ebp,[esp-0x404]
65004dd8:	sub    esp,0x404
65004dde:	push   0xffffffff
65004de0:	push   0x650231c9
65004de5:	mov    eax,fs:0x0
65004deb:	push   eax
65004dec:	sub    esp,0x3c
65004def:	mov    eax,ds:0x6502c09c
65004df4:	xor    eax,ebp
65004df6:	mov    DWORD PTR [ebp+0x400],eax
65004dfc:	push   ebx
65004dfd:	push   esi
65004dfe:	push   edi
65004dff:	push   eax
65004e00:	lea    eax,[ebp-0xc]
65004e03:	mov    fs:0x0,eax
65004e09:	xor    ebx,ebx
65004e0b:	mov    DWORD PTR [ebp-0x4],ebx
65004e0e:	test   BYTE PTR ds:0x650303fc,0x1
65004e15:	jne    0x65004e5d
65004e17:	or     DWORD PTR ds:0x650303fc,0x1
65004e1e:	mov    BYTE PTR [ebp-0x4],0x1
65004e22:	call   0x65008420
65004e27:	mov    ds:0x650303f4,eax
65004e2c:	mov    BYTE PTR [eax+0x29],0x1
65004e30:	mov    eax,ds:0x650303f4
65004e35:	mov    DWORD PTR [eax+0x4],eax
65004e38:	mov    eax,ds:0x650303f4
65004e3d:	mov    DWORD PTR [eax],eax
65004e3f:	mov    eax,ds:0x650303f4
65004e44:	mov    DWORD PTR [eax+0x8],eax
65004e47:	push   0x650235a0
65004e4c:	mov    DWORD PTR ds:0x650303f8,ebx
65004e52:	call   0x65012a5f
65004e57:	add    esp,0x4
65004e5a:	mov    BYTE PTR [ebp-0x4],bl
65004e5d:	cmp    DWORD PTR ds:0x650303f8,ebx
65004e63:	mov    edi,0x10
65004e68:	jne    0x650061ca
65004e6e:	call   0x65008420
65004e73:	mov    DWORD PTR [ebp-0x30],eax
65004e76:	mov    BYTE PTR [eax+0x29],0x1
65004e7a:	mov    eax,DWORD PTR [ebp-0x30]
65004e7d:	mov    DWORD PTR [eax+0x4],eax
65004e80:	mov    eax,DWORD PTR [ebp-0x30]
65004e83:	mov    DWORD PTR [eax],eax
65004e85:	mov    eax,DWORD PTR [ebp-0x30]
65004e88:	mov    DWORD PTR [eax+0x8],eax
65004e8b:	mov    DWORD PTR [ebp-0x2c],ebx
65004e8e:	push   0x65027310
65004e93:	push   0xd
65004e95:	push   0x65027348
65004e9a:	mov    BYTE PTR [ebp-0x4],0x2
65004e9e:	call   0x65006a60
65004ea3:	mov    ecx,eax
65004ea5:	add    esp,0xc
65004ea8:	mov    DWORD PTR [ebp-0x10],0xf
65004eaf:	mov    DWORD PTR [ebp-0x14],ebx
65004eb2:	mov    BYTE PTR [ebp-0x24],bl
65004eb5:	lea    esi,[ecx+0x1]
65004eb8:	mov    dl,BYTE PTR [ecx]
65004eba:	add    ecx,0x1
65004ebd:	cmp    dl,bl
65004ebf:	jne    0x65004eb8
65004ec1:	sub    ecx,esi
65004ec3:	push   ecx
65004ec4:	push   eax
65004ec5:	lea    ecx,[ebp-0x28]
65004ec8:	call   0x650018c0
65004ecd:	lea    eax,[ebp-0x28]
65004ed0:	push   eax
65004ed1:	lea    ecx,[ebp-0x40]
65004ed4:	push   ecx
65004ed5:	lea    edx,[ebp-0x34]
65004ed8:	push   edx
65004ed9:	mov    BYTE PTR [ebp-0x4],0x3
65004edd:	call   0x65007110
65004ee2:	mov    BYTE PTR [ebp-0x4],0x2
65004ee6:	cmp    DWORD PTR [ebp-0x10],0x10
65004eea:	jb     0x65004ef8
65004eec:	mov    eax,DWORD PTR [ebp-0x24]
65004eef:	push   eax
65004ef0:	call   0x650120d2
65004ef5:	add    esp,0x4
65004ef8:	push   0x65027358
65004efd:	push   0x5
65004eff:	push   0x65027398
65004f04:	call   0x65006a60
65004f09:	mov    ecx,eax
65004f0b:	add    esp,0xc
65004f0e:	mov    DWORD PTR [ebp-0x10],0xf
65004f15:	mov    DWORD PTR [ebp-0x14],ebx
65004f18:	mov    BYTE PTR [ebp-0x24],bl
65004f1b:	lea    esi,[ecx+0x1]
65004f1e:	mov    edi,edi
65004f20:	mov    dl,BYTE PTR [ecx]
65004f22:	add    ecx,0x1
65004f25:	cmp    dl,bl
65004f27:	jne    0x65004f20
65004f29:	sub    ecx,esi
65004f2b:	push   ecx
65004f2c:	push   eax
65004f2d:	lea    ecx,[ebp-0x28]
65004f30:	call   0x650018c0
65004f35:	lea    ecx,[ebp-0x28]
65004f38:	push   ecx
65004f39:	lea    edx,[ebp-0x40]
65004f3c:	push   edx
65004f3d:	lea    eax,[ebp-0x34]
65004f40:	push   eax
65004f41:	mov    BYTE PTR [ebp-0x4],0x4
65004f45:	call   0x65007110
65004f4a:	mov    BYTE PTR [ebp-0x4],0x2
65004f4e:	cmp    DWORD PTR [ebp-0x10],0x10
65004f52:	jb     0x65004f60
65004f54:	mov    ecx,DWORD PTR [ebp-0x24]
65004f57:	push   ecx
65004f58:	call   0x650120d2
65004f5d:	add    esp,0x4
65004f60:	push   0x650273a0
65004f65:	push   0x5
65004f67:	push   0x650273dc
65004f6c:	call   0x65006a60
65004f71:	mov    ecx,eax
65004f73:	add    esp,0xc
65004f76:	mov    DWORD PTR [ebp-0x10],0xf
65004f7d:	mov    DWORD PTR [ebp-0x14],ebx
65004f80:	mov    BYTE PTR [ebp-0x24],bl
65004f83:	lea    esi,[ecx+0x1]
65004f86:	mov    dl,BYTE PTR [ecx]
65004f88:	add    ecx,0x1
65004f8b:	cmp    dl,bl
65004f8d:	jne    0x65004f86
65004f8f:	sub    ecx,esi
65004f91:	push   ecx
65004f92:	push   eax
65004f93:	lea    ecx,[ebp-0x28]
65004f96:	call   0x650018c0
65004f9b:	lea    edx,[ebp-0x28]
65004f9e:	push   edx
65004f9f:	lea    eax,[ebp-0x40]
65004fa2:	push   eax
65004fa3:	lea    ecx,[ebp-0x34]
65004fa6:	push   ecx
65004fa7:	mov    BYTE PTR [ebp-0x4],0x5
65004fab:	call   0x65007110
65004fb0:	mov    BYTE PTR [ebp-0x4],0x2
65004fb4:	cmp    DWORD PTR [ebp-0x10],0x10
65004fb8:	jb     0x65004fc6
65004fba:	mov    edx,DWORD PTR [ebp-0x24]
65004fbd:	push   edx
65004fbe:	call   0x650120d2
65004fc3:	add    esp,0x4
65004fc6:	push   0x650273e4
65004fcb:	push   0x11
65004fcd:	push   0x65027414
65004fd2:	call   0x65006a60
65004fd7:	mov    ecx,eax
65004fd9:	add    esp,0xc
65004fdc:	mov    DWORD PTR [ebp-0x10],0xf
65004fe3:	mov    DWORD PTR [ebp-0x14],ebx
65004fe6:	mov    BYTE PTR [ebp-0x24],bl
65004fe9:	lea    esi,[ecx+0x1]
65004fec:	lea    esp,[esp+0x0]
65004ff0:	mov    dl,BYTE PTR [ecx]
65004ff2:	add    ecx,0x1
65004ff5:	cmp    dl,bl
65004ff7:	jne    0x65004ff0
65004ff9:	sub    ecx,esi
65004ffb:	push   ecx
65004ffc:	push   eax
65004ffd:	lea    ecx,[ebp-0x28]
65005000:	call   0x650018c0
65005005:	lea    eax,[ebp-0x28]
65005008:	push   eax
65005009:	lea    ecx,[ebp-0x40]
6500500c:	push   ecx
6500500d:	lea    edx,[ebp-0x34]
65005010:	push   edx
65005011:	mov    BYTE PTR [ebp-0x4],0x6
65005015:	call   0x65007110
6500501a:	mov    BYTE PTR [ebp-0x4],0x2
6500501e:	cmp    DWORD PTR [ebp-0x10],0x10
65005022:	jb     0x65005030
65005024:	mov    eax,DWORD PTR [ebp-0x24]
65005027:	push   eax
65005028:	call   0x650120d2
6500502d:	add    esp,0x4
65005030:	push   0x65027428
65005035:	push   0x6
65005037:	push   0x6502745c
6500503c:	call   0x65006a60
65005041:	mov    ecx,eax
65005043:	add    esp,0xc
65005046:	mov    DWORD PTR [ebp-0x10],0xf
6500504d:	mov    DWORD PTR [ebp-0x14],ebx
65005050:	mov    BYTE PTR [ebp-0x24],bl
65005053:	lea    esi,[ecx+0x1]
65005056:	mov    dl,BYTE PTR [ecx]
65005058:	add    ecx,0x1
6500505b:	cmp    dl,bl
6500505d:	jne    0x65005056
6500505f:	sub    ecx,esi
65005061:	push   ecx
65005062:	push   eax
65005063:	lea    ecx,[ebp-0x28]
65005066:	call   0x650018c0
6500506b:	lea    ecx,[ebp-0x28]
6500506e:	push   ecx
6500506f:	lea    edx,[ebp-0x40]
65005072:	push   edx
65005073:	lea    eax,[ebp-0x34]
65005076:	push   eax
65005077:	mov    BYTE PTR [ebp-0x4],0x7
6500507b:	call   0x65007110
65005080:	mov    BYTE PTR [ebp-0x4],0x2
65005084:	cmp    DWORD PTR [ebp-0x10],0x10
65005088:	jb     0x65005096
6500508a:	mov    ecx,DWORD PTR [ebp-0x24]
6500508d:	push   ecx
6500508e:	call   0x650120d2
65005093:	add    esp,0x4
65005096:	push   0x65027464
6500509b:	push   0x5
6500509d:	push   0x65027490
650050a2:	call   0x65006a60
650050a7:	mov    ecx,eax
650050a9:	add    esp,0xc
650050ac:	mov    DWORD PTR [ebp-0x10],0xf
650050b3:	mov    DWORD PTR [ebp-0x14],ebx
650050b6:	mov    BYTE PTR [ebp-0x24],bl
650050b9:	lea    esi,[ecx+0x1]
650050bc:	lea    esp,[esp+0x0]
650050c0:	mov    dl,BYTE PTR [ecx]
650050c2:	add    ecx,0x1
650050c5:	cmp    dl,bl
650050c7:	jne    0x650050c0
650050c9:	sub    ecx,esi
650050cb:	push   ecx
650050cc:	push   eax
650050cd:	lea    ecx,[ebp-0x28]
650050d0:	call   0x650018c0
650050d5:	lea    edx,[ebp-0x28]
650050d8:	push   edx
650050d9:	lea    eax,[ebp-0x40]
650050dc:	push   eax
650050dd:	lea    ecx,[ebp-0x34]
650050e0:	push   ecx
650050e1:	mov    BYTE PTR [ebp-0x4],0x8
650050e5:	call   0x65007110
650050ea:	mov    BYTE PTR [ebp-0x4],0x2
650050ee:	cmp    DWORD PTR [ebp-0x10],0x10
650050f2:	jb     0x65005100
650050f4:	mov    edx,DWORD PTR [ebp-0x24]
650050f7:	push   edx
650050f8:	call   0x650120d2
650050fd:	add    esp,0x4
65005100:	push   0x65027498
65005105:	push   0x8
65005107:	push   0x650274cc
6500510c:	call   0x65006a60
65005111:	mov    esi,eax
65005113:	mov    edi,0xf
65005118:	mov    ecx,esi
6500511a:	add    esp,0xc
6500511d:	mov    DWORD PTR [ebp-0x10],edi
65005120:	mov    DWORD PTR [ebp-0x14],ebx
65005123:	mov    BYTE PTR [ebp-0x24],bl
65005126:	lea    edx,[ecx+0x1]
65005129:	lea    esp,[esp+0x0]
65005130:	mov    al,BYTE PTR [ecx]
65005132:	add    ecx,0x1
65005135:	cmp    al,bl
65005137:	jne    0x65005130
65005139:	sub    ecx,edx
6500513b:	push   ecx
6500513c:	push   esi
6500513d:	lea    ecx,[ebp-0x28]
65005140:	call   0x650018c0
65005145:	lea    eax,[ebp-0x28]
65005148:	push   eax
65005149:	lea    ecx,[ebp-0x40]
6500514c:	push   ecx
6500514d:	lea    edx,[ebp-0x34]
65005150:	push   edx
65005151:	mov    BYTE PTR [ebp-0x4],0x9
65005155:	call   0x65007110
6500515a:	mov    BYTE PTR [ebp-0x4],0x2
6500515e:	cmp    DWORD PTR [ebp-0x10],0x10
65005162:	jb     0x65005170
65005164:	mov    eax,DWORD PTR [ebp-0x24]
65005167:	push   eax
65005168:	call   0x650120d2
6500516d:	add    esp,0x4
65005170:	push   0x650274d8
65005175:	push   0x7
65005177:	push   0x65027508
6500517c:	call   0x65006a60
65005181:	mov    ecx,eax
65005183:	add    esp,0xc
65005186:	mov    DWORD PTR [ebp-0x10],edi
65005189:	mov    DWORD PTR [ebp-0x14],ebx
6500518c:	mov    BYTE PTR [ebp-0x24],bl
6500518f:	lea    esi,[ecx+0x1]
65005192:	mov    dl,BYTE PTR [ecx]
65005194:	add    ecx,0x1
65005197:	cmp    dl,bl
65005199:	jne    0x65005192
6500519b:	sub    ecx,esi
6500519d:	push   ecx
6500519e:	push   eax
6500519f:	lea    ecx,[ebp-0x28]
650051a2:	call   0x650018c0
650051a7:	lea    ecx,[ebp-0x28]
650051aa:	push   ecx
650051ab:	lea    edx,[ebp-0x40]
650051ae:	push   edx
650051af:	lea    eax,[ebp-0x34]
650051b2:	push   eax
650051b3:	mov    BYTE PTR [ebp-0x4],0xa
650051b7:	call   0x65007110
650051bc:	mov    BYTE PTR [ebp-0x4],0x2
650051c0:	cmp    DWORD PTR [ebp-0x10],0x10
650051c4:	jb     0x650051d2
650051c6:	mov    ecx,DWORD PTR [ebp-0x24]
650051c9:	push   ecx
650051ca:	call   0x650120d2
650051cf:	add    esp,0x4
650051d2:	push   0x65027510
650051d7:	push   0x5
650051d9:	push   0x65027548
650051de:	call   0x65006a60
650051e3:	mov    ecx,eax
650051e5:	add    esp,0xc
650051e8:	mov    DWORD PTR [ebp-0x10],0xf
650051ef:	mov    DWORD PTR [ebp-0x14],ebx
650051f2:	mov    BYTE PTR [ebp-0x24],bl
650051f5:	lea    esi,[ecx+0x1]
650051f8:	mov    dl,BYTE PTR [ecx]
650051fa:	add    ecx,0x1
650051fd:	cmp    dl,bl
650051ff:	jne    0x650051f8
65005201:	sub    ecx,esi
65005203:	push   ecx
65005204:	push   eax
65005205:	lea    ecx,[ebp-0x28]
65005208:	call   0x650018c0
6500520d:	lea    edx,[ebp-0x28]
65005210:	push   edx
65005211:	lea    eax,[ebp-0x40]
65005214:	push   eax
65005215:	lea    ecx,[ebp-0x34]
65005218:	push   ecx
65005219:	mov    BYTE PTR [ebp-0x4],0xb
6500521d:	call   0x65007110
65005222:	mov    BYTE PTR [ebp-0x4],0x2
65005226:	cmp    DWORD PTR [ebp-0x10],0x10
6500522a:	jb     0x65005238
6500522c:	mov    edx,DWORD PTR [ebp-0x24]
6500522f:	push   edx
65005230:	call   0x650120d2
65005235:	add    esp,0x4
65005238:	push   0x65027550
6500523d:	push   0x5
6500523f:	push   0x65027584
65005244:	call   0x65006a60
65005249:	mov    ecx,eax
6500524b:	add    esp,0xc
6500524e:	mov    DWORD PTR [ebp-0x10],0xf
65005255:	mov    DWORD PTR [ebp-0x14],ebx
65005258:	mov    BYTE PTR [ebp-0x24],bl
6500525b:	lea    esi,[ecx+0x1]
6500525e:	mov    edi,edi
65005260:	mov    dl,BYTE PTR [ecx]
65005262:	add    ecx,0x1
65005265:	cmp    dl,bl
65005267:	jne    0x65005260
65005269:	sub    ecx,esi
6500526b:	push   ecx
6500526c:	push   eax
6500526d:	lea    ecx,[ebp-0x28]
65005270:	call   0x650018c0
65005275:	lea    eax,[ebp-0x28]
65005278:	push   eax
65005279:	lea    ecx,[ebp-0x40]
6500527c:	push   ecx
6500527d:	lea    edx,[ebp-0x34]
65005280:	push   edx
65005281:	mov    BYTE PTR [ebp-0x4],0xc
65005285:	call   0x65007110
6500528a:	mov    BYTE PTR [ebp-0x4],0x2
6500528e:	cmp    DWORD PTR [ebp-0x10],0x10
65005292:	jb     0x650052a0
65005294:	mov    eax,DWORD PTR [ebp-0x24]
65005297:	push   eax
65005298:	call   0x650120d2
6500529d:	add    esp,0x4
650052a0:	push   0x6502758c
650052a5:	push   0xe
650052a7:	push   0x650275c8
650052ac:	call   0x65006a60
650052b1:	mov    ecx,eax
650052b3:	add    esp,0xc
650052b6:	mov    DWORD PTR [ebp-0x10],0xf
650052bd:	mov    DWORD PTR [ebp-0x14],ebx
650052c0:	mov    BYTE PTR [ebp-0x24],bl
650052c3:	lea    esi,[ecx+0x1]
650052c6:	mov    dl,BYTE PTR [ecx]
650052c8:	add    ecx,0x1
650052cb:	cmp    dl,bl
650052cd:	jne    0x650052c6
650052cf:	sub    ecx,esi
650052d1:	push   ecx
650052d2:	push   eax
650052d3:	lea    ecx,[ebp-0x28]
650052d6:	call   0x650018c0
650052db:	lea    ecx,[ebp-0x28]
650052de:	push   ecx
650052df:	lea    edx,[ebp-0x40]
650052e2:	push   edx
650052e3:	lea    eax,[ebp-0x34]
650052e6:	push   eax
650052e7:	mov    BYTE PTR [ebp-0x4],0xd
650052eb:	call   0x65007110
650052f0:	mov    BYTE PTR [ebp-0x4],0x2
650052f4:	cmp    DWORD PTR [ebp-0x10],0x10
650052f8:	jb     0x65005306
650052fa:	mov    ecx,DWORD PTR [ebp-0x24]
650052fd:	push   ecx
650052fe:	call   0x650120d2
65005303:	add    esp,0x4
65005306:	push   0x650275d8
6500530b:	push   0x6
6500530d:	push   0x65027610
65005312:	call   0x65006a60
65005317:	mov    ecx,eax
65005319:	add    esp,0xc
6500531c:	mov    DWORD PTR [ebp-0x10],0xf
65005323:	mov    DWORD PTR [ebp-0x14],ebx
65005326:	mov    BYTE PTR [ebp-0x24],bl
65005329:	lea    esi,[ecx+0x1]
6500532c:	lea    esp,[esp+0x0]
65005330:	mov    dl,BYTE PTR [ecx]
65005332:	add    ecx,0x1
65005335:	cmp    dl,bl
65005337:	jne    0x65005330
65005339:	sub    ecx,esi
6500533b:	push   ecx
6500533c:	push   eax
6500533d:	lea    ecx,[ebp-0x28]
65005340:	call   0x650018c0
65005345:	lea    edx,[ebp-0x28]
65005348:	push   edx
65005349:	lea    eax,[ebp-0x40]
6500534c:	push   eax
6500534d:	lea    ecx,[ebp-0x34]
65005350:	push   ecx
65005351:	mov    BYTE PTR [ebp-0x4],0xe
65005355:	call   0x65007110
6500535a:	mov    BYTE PTR [ebp-0x4],0x2
6500535e:	cmp    DWORD PTR [ebp-0x10],0x10
65005362:	jb     0x65005370
65005364:	mov    edx,DWORD PTR [ebp-0x24]
65005367:	push   edx
65005368:	call   0x650120d2
6500536d:	add    esp,0x4
65005370:	push   0x65027618
65005375:	push   0x3
65005377:	push   0x65027648
6500537c:	call   0x65006a60
65005381:	mov    ecx,eax
65005383:	add    esp,0xc
65005386:	mov    DWORD PTR [ebp-0x10],0xf
6500538d:	mov    DWORD PTR [ebp-0x14],ebx
65005390:	mov    BYTE PTR [ebp-0x24],bl
65005393:	lea    esi,[ecx+0x1]
65005396:	mov    dl,BYTE PTR [ecx]
65005398:	add    ecx,0x1
6500539b:	cmp    dl,bl
6500539d:	jne    0x65005396
6500539f:	sub    ecx,esi
650053a1:	push   ecx
650053a2:	push   eax
650053a3:	lea    ecx,[ebp-0x28]
650053a6:	call   0x650018c0
650053ab:	lea    eax,[ebp-0x28]
650053ae:	push   eax
650053af:	lea    ecx,[ebp-0x40]
650053b2:	push   ecx
650053b3:	lea    edx,[ebp-0x34]
650053b6:	push   edx
650053b7:	mov    BYTE PTR [ebp-0x4],0xf
650053bb:	call   0x65007110
650053c0:	mov    BYTE PTR [ebp-0x4],0x2
650053c4:	cmp    DWORD PTR [ebp-0x10],0x10
650053c8:	jb     0x650053d6
650053ca:	mov    eax,DWORD PTR [ebp-0x24]
650053cd:	push   eax
650053ce:	call   0x650120d2
650053d3:	add    esp,0x4
650053d6:	push   0x6502764c
650053db:	push   0x3
650053dd:	push   0x65027680
650053e2:	call   0x65006a60
650053e7:	mov    esi,eax
650053e9:	mov    edi,0xf
650053ee:	mov    ecx,esi
650053f0:	add    esp,0xc
650053f3:	mov    DWORD PTR [ebp-0x10],edi
650053f6:	mov    DWORD PTR [ebp-0x14],ebx
650053f9:	mov    BYTE PTR [ebp-0x24],bl
650053fc:	lea    edx,[ecx+0x1]
650053ff:	nop
65005400:	mov    al,BYTE PTR [ecx]
65005402:	add    ecx,0x1
65005405:	cmp    al,bl
65005407:	jne    0x65005400
65005409:	sub    ecx,edx
6500540b:	push   ecx
6500540c:	push   esi
6500540d:	lea    ecx,[ebp-0x28]
65005410:	call   0x650018c0
65005415:	lea    ecx,[ebp-0x28]
65005418:	push   ecx
65005419:	lea    edx,[ebp-0x40]
6500541c:	push   edx
6500541d:	lea    eax,[ebp-0x34]
65005420:	push   eax
65005421:	mov    BYTE PTR [ebp-0x4],0x10
65005425:	call   0x65007110
6500542a:	mov    BYTE PTR [ebp-0x4],0x2
6500542e:	cmp    DWORD PTR [ebp-0x10],0x10
65005432:	jb     0x65005440
65005434:	mov    ecx,DWORD PTR [ebp-0x24]
65005437:	push   ecx
65005438:	call   0x650120d2
6500543d:	add    esp,0x4
65005440:	push   0x65027684
65005445:	push   0x3
65005447:	push   0x650276a8
6500544c:	call   0x65006a60
65005451:	mov    ecx,eax
65005453:	add    esp,0xc
65005456:	mov    DWORD PTR [ebp-0x10],edi
65005459:	mov    DWORD PTR [ebp-0x14],ebx
6500545c:	mov    BYTE PTR [ebp-0x24],bl
6500545f:	lea    esi,[ecx+0x1]
65005462:	mov    dl,BYTE PTR [ecx]
65005464:	add    ecx,0x1
65005467:	cmp    dl,bl
65005469:	jne    0x65005462
6500546b:	sub    ecx,esi
6500546d:	push   ecx
6500546e:	push   eax
6500546f:	lea    ecx,[ebp-0x28]
65005472:	call   0x650018c0
65005477:	lea    edx,[ebp-0x28]
6500547a:	push   edx
6500547b:	lea    eax,[ebp-0x40]
6500547e:	push   eax
6500547f:	lea    ecx,[ebp-0x34]
65005482:	push   ecx
65005483:	mov    BYTE PTR [ebp-0x4],0x11
65005487:	call   0x65007110
6500548c:	mov    BYTE PTR [ebp-0x4],0x2
65005490:	cmp    DWORD PTR [ebp-0x10],0x10
65005494:	jb     0x650054a2
65005496:	mov    edx,DWORD PTR [ebp-0x24]
65005499:	push   edx
6500549a:	call   0x650120d2
6500549f:	add    esp,0x4
650054a2:	push   0x650276ac
650054a7:	push   0x4
650054a9:	push   0x650276d0
650054ae:	call   0x65006a60
650054b3:	mov    ecx,eax
650054b5:	add    esp,0xc
650054b8:	mov    DWORD PTR [ebp-0x10],0xf
650054bf:	mov    DWORD PTR [ebp-0x14],ebx
650054c2:	mov    BYTE PTR [ebp-0x24],bl
650054c5:	lea    esi,[ecx+0x1]
650054c8:	mov    dl,BYTE PTR [ecx]
650054ca:	add    ecx,0x1
650054cd:	cmp    dl,bl
650054cf:	jne    0x650054c8
650054d1:	sub    ecx,esi
650054d3:	push   ecx
650054d4:	push   eax
650054d5:	lea    ecx,[ebp-0x28]
650054d8:	call   0x650018c0
650054dd:	lea    eax,[ebp-0x28]
650054e0:	push   eax
650054e1:	lea    ecx,[ebp-0x40]
650054e4:	push   ecx
650054e5:	lea    edx,[ebp-0x34]
650054e8:	push   edx
650054e9:	mov    BYTE PTR [ebp-0x4],0x12
650054ed:	call   0x65007110
650054f2:	mov    BYTE PTR [ebp-0x4],0x2
650054f6:	cmp    DWORD PTR [ebp-0x10],0x10
650054fa:	jb     0x65005508
650054fc:	mov    eax,DWORD PTR [ebp-0x24]
650054ff:	push   eax
65005500:	call   0x650120d2
65005505:	add    esp,0x4
65005508:	push   0x650276d8
6500550d:	push   0x5
6500550f:	push   0x65027704
65005514:	call   0x65006a60
65005519:	mov    esi,eax
6500551b:	mov    edi,0xf
65005520:	mov    ecx,esi
65005522:	add    esp,0xc
65005525:	mov    DWORD PTR [ebp-0x10],edi
65005528:	mov    DWORD PTR [ebp-0x14],ebx
6500552b:	mov    BYTE PTR [ebp-0x24],bl
6500552e:	lea    edx,[ecx+0x1]
65005531:	mov    al,BYTE PTR [ecx]
65005533:	add    ecx,0x1
65005536:	cmp    al,bl
65005538:	jne    0x65005531
6500553a:	sub    ecx,edx
6500553c:	push   ecx
6500553d:	push   esi
6500553e:	lea    ecx,[ebp-0x28]
65005541:	call   0x650018c0
65005546:	lea    ecx,[ebp-0x28]
65005549:	push   ecx
6500554a:	lea    edx,[ebp-0x40]
6500554d:	push   edx
6500554e:	lea    eax,[ebp-0x34]
65005551:	push   eax
65005552:	mov    BYTE PTR [ebp-0x4],0x13
65005556:	call   0x65007110
6500555b:	mov    BYTE PTR [ebp-0x4],0x2
6500555f:	cmp    DWORD PTR [ebp-0x10],0x10
65005563:	jb     0x65005571
65005565:	mov    ecx,DWORD PTR [ebp-0x24]
65005568:	push   ecx
65005569:	call   0x650120d2
6500556e:	add    esp,0x4
65005571:	push   0x6502770c
65005576:	push   0x8
65005578:	push   0x65027740
6500557d:	call   0x65006a60
65005582:	mov    esi,eax
65005584:	mov    ecx,esi
65005586:	add    esp,0xc
65005589:	mov    DWORD PTR [ebp-0x10],edi
6500558c:	mov    DWORD PTR [ebp-0x14],ebx
6500558f:	mov    BYTE PTR [ebp-0x24],bl
65005592:	lea    edx,[ecx+0x1]
65005595:	mov    al,BYTE PTR [ecx]
65005597:	add    ecx,0x1
6500559a:	cmp    al,bl
6500559c:	jne    0x65005595
6500559e:	sub    ecx,edx
650055a0:	push   ecx
650055a1:	push   esi
650055a2:	lea    ecx,[ebp-0x28]
650055a5:	call   0x650018c0
650055aa:	lea    edx,[ebp-0x28]
650055ad:	push   edx
650055ae:	lea    eax,[ebp-0x40]
650055b1:	push   eax
650055b2:	lea    ecx,[ebp-0x34]
650055b5:	push   ecx
650055b6:	mov    BYTE PTR [ebp-0x4],0x14
650055ba:	call   0x65007110
650055bf:	mov    BYTE PTR [ebp-0x4],0x2
650055c3:	cmp    DWORD PTR [ebp-0x10],0x10
650055c7:	jb     0x650055d5
650055c9:	mov    edx,DWORD PTR [ebp-0x24]
650055cc:	push   edx
650055cd:	call   0x650120d2
650055d2:	add    esp,0x4
650055d5:	push   0x6502774c
650055da:	push   0x4
650055dc:	push   0x65027778
650055e1:	call   0x65006a60
650055e6:	mov    esi,eax
650055e8:	mov    ecx,esi
650055ea:	add    esp,0xc
650055ed:	mov    DWORD PTR [ebp-0x10],edi
650055f0:	mov    DWORD PTR [ebp-0x14],ebx
650055f3:	mov    BYTE PTR [ebp-0x24],bl
650055f6:	lea    edx,[ecx+0x1]
650055f9:	lea    esp,[esp+0x0]
65005600:	mov    al,BYTE PTR [ecx]
65005602:	add    ecx,0x1
65005605:	cmp    al,bl
65005607:	jne    0x65005600
65005609:	sub    ecx,edx
6500560b:	push   ecx
6500560c:	push   esi
6500560d:	lea    ecx,[ebp-0x28]
65005610:	call   0x650018c0
65005615:	lea    eax,[ebp-0x28]
65005618:	push   eax
65005619:	lea    ecx,[ebp-0x40]
6500561c:	push   ecx
6500561d:	lea    edx,[ebp-0x34]
65005620:	push   edx
65005621:	mov    BYTE PTR [ebp-0x4],0x15
65005625:	call   0x65007110
6500562a:	mov    BYTE PTR [ebp-0x4],0x2
6500562e:	cmp    DWORD PTR [ebp-0x10],0x10
65005632:	jb     0x65005640
65005634:	mov    eax,DWORD PTR [ebp-0x24]
65005637:	push   eax
65005638:	call   0x650120d2
6500563d:	add    esp,0x4
65005640:	push   0x65027780
65005645:	push   0x5
65005647:	push   0x650277a4
6500564c:	call   0x65006a60
65005651:	mov    ecx,eax
65005653:	add    esp,0xc
65005656:	mov    DWORD PTR [ebp-0x10],edi
65005659:	mov    DWORD PTR [ebp-0x14],ebx
6500565c:	mov    BYTE PTR [ebp-0x24],bl
6500565f:	lea    esi,[ecx+0x1]
65005662:	mov    dl,BYTE PTR [ecx]
65005664:	add    ecx,0x1
65005667:	cmp    dl,bl
65005669:	jne    0x65005662
6500566b:	sub    ecx,esi
6500566d:	push   ecx
6500566e:	push   eax
6500566f:	lea    ecx,[ebp-0x28]
65005672:	call   0x650018c0
65005677:	lea    ecx,[ebp-0x28]
6500567a:	push   ecx
6500567b:	lea    edx,[ebp-0x40]
6500567e:	push   edx
6500567f:	lea    eax,[ebp-0x34]
65005682:	push   eax
65005683:	mov    BYTE PTR [ebp-0x4],0x16
65005687:	call   0x65007110
6500568c:	mov    BYTE PTR [ebp-0x4],0x2
65005690:	cmp    DWORD PTR [ebp-0x10],0x10
65005694:	jb     0x650056a2
65005696:	mov    ecx,DWORD PTR [ebp-0x24]
65005699:	push   ecx
6500569a:	call   0x650120d2
6500569f:	add    esp,0x4
650056a2:	push   0x650277ac
650056a7:	push   0x5
650056a9:	push   0x650277e4
650056ae:	call   0x65006a60
650056b3:	mov    ecx,eax
650056b5:	add    esp,0xc
650056b8:	mov    DWORD PTR [ebp-0x10],0xf
650056bf:	mov    DWORD PTR [ebp-0x14],ebx
650056c2:	mov    BYTE PTR [ebp-0x24],bl
650056c5:	lea    esi,[ecx+0x1]
650056c8:	mov    dl,BYTE PTR [ecx]
650056ca:	add    ecx,0x1
650056cd:	cmp    dl,bl
650056cf:	jne    0x650056c8
650056d1:	sub    ecx,esi
650056d3:	push   ecx
650056d4:	push   eax
650056d5:	lea    ecx,[ebp-0x28]
650056d8:	call   0x650018c0
650056dd:	lea    edx,[ebp-0x28]
650056e0:	push   edx
650056e1:	lea    eax,[ebp-0x40]
650056e4:	push   eax
650056e5:	lea    ecx,[ebp-0x34]
650056e8:	push   ecx
650056e9:	mov    BYTE PTR [ebp-0x4],0x17
650056ed:	call   0x65007110
650056f2:	mov    edi,0x10
650056f7:	mov    BYTE PTR [ebp-0x4],0x2
650056fb:	cmp    DWORD PTR [ebp-0x10],edi
650056fe:	jb     0x6500570c
65005700:	mov    edx,DWORD PTR [ebp-0x24]
65005703:	push   edx
65005704:	call   0x650120d2
65005709:	add    esp,0x4
6500570c:	push   0x650277ec
65005711:	push   0x4
65005713:	push   0x6502782c
65005718:	call   0x65006a60
6500571d:	add    esp,0xc
65005720:	push   eax
65005721:	lea    ecx,[ebp-0x28]
65005724:	call   0x65002720
65005729:	lea    eax,[ebp-0x28]
6500572c:	push   eax
6500572d:	lea    ecx,[ebp-0x40]
65005730:	push   ecx
65005731:	lea    edx,[ebp-0x34]
65005734:	push   edx
65005735:	mov    BYTE PTR [ebp-0x4],0x18
65005739:	call   0x65007110
6500573e:	mov    BYTE PTR [ebp-0x4],0x2
65005742:	cmp    DWORD PTR [ebp-0x10],edi
65005745:	jb     0x65005753
65005747:	mov    eax,DWORD PTR [ebp-0x24]
6500574a:	push   eax
6500574b:	call   0x650120d2
65005750:	add    esp,0x4
65005753:	push   0x65027834
65005758:	push   0x8
6500575a:	push   0x65027860
6500575f:	call   0x65006a60
65005764:	add    esp,0xc
65005767:	push   eax
65005768:	lea    ecx,[ebp-0x28]
6500576b:	call   0x65002720
65005770:	lea    ecx,[ebp-0x28]
65005773:	push   ecx
65005774:	lea    edx,[ebp-0x40]
65005777:	push   edx
65005778:	lea    eax,[ebp-0x34]
6500577b:	push   eax
6500577c:	mov    BYTE PTR [ebp-0x4],0x19
65005780:	call   0x65007110
65005785:	mov    BYTE PTR [ebp-0x4],0x2
65005789:	cmp    DWORD PTR [ebp-0x10],edi
6500578c:	jb     0x6500579a
6500578e:	mov    ecx,DWORD PTR [ebp-0x24]
65005791:	push   ecx
65005792:	call   0x650120d2
65005797:	add    esp,0x4
6500579a:	push   0x6502786c
6500579f:	push   0x6
650057a1:	push   0x650278ac
650057a6:	call   0x65006a60
650057ab:	add    esp,0xc
650057ae:	push   eax
650057af:	lea    ecx,[ebp-0x28]
650057b2:	call   0x65002720
650057b7:	lea    edx,[ebp-0x28]
650057ba:	push   edx
650057bb:	lea    eax,[ebp-0x40]
650057be:	push   eax
650057bf:	lea    ecx,[ebp-0x34]
650057c2:	push   ecx
650057c3:	mov    BYTE PTR [ebp-0x4],0x1a
650057c7:	call   0x65007110
650057cc:	mov    BYTE PTR [ebp-0x4],0x2
650057d0:	cmp    DWORD PTR [ebp-0x10],edi
650057d3:	jb     0x650057e1
650057d5:	mov    edx,DWORD PTR [ebp-0x24]
650057d8:	push   edx
650057d9:	call   0x650120d2
650057de:	add    esp,0x4
650057e1:	push   0x650278b4
650057e6:	push   0x8
650057e8:	push   0x650278d8
650057ed:	call   0x65006a60
650057f2:	add    esp,0xc
650057f5:	push   eax
650057f6:	lea    ecx,[ebp-0x28]
650057f9:	call   0x65002720
650057fe:	lea    eax,[ebp-0x28]
65005801:	push   eax
65005802:	lea    ecx,[ebp-0x40]
65005805:	push   ecx
65005806:	lea    edx,[ebp-0x34]
65005809:	push   edx
6500580a:	mov    BYTE PTR [ebp-0x4],0x1b
6500580e:	call   0x65007110
65005813:	mov    BYTE PTR [ebp-0x4],0x2
65005817:	cmp    DWORD PTR [ebp-0x10],edi
6500581a:	jb     0x65005828
6500581c:	mov    eax,DWORD PTR [ebp-0x24]
6500581f:	push   eax
65005820:	call   0x650120d2
65005825:	add    esp,0x4
65005828:	push   0x650278e4
6500582d:	push   0x6
6500582f:	push   0x65027914
65005834:	call   0x65006a60
65005839:	add    esp,0xc
6500583c:	push   eax
6500583d:	lea    ecx,[ebp-0x28]
65005840:	call   0x65002720
65005845:	lea    ecx,[ebp-0x28]
65005848:	push   ecx
65005849:	lea    edx,[ebp-0x40]
6500584c:	push   edx
6500584d:	lea    eax,[ebp-0x34]
65005850:	push   eax
65005851:	mov    BYTE PTR [ebp-0x4],0x1c
65005855:	call   0x65007110
6500585a:	mov    BYTE PTR [ebp-0x4],0x2
6500585e:	cmp    DWORD PTR [ebp-0x10],edi
65005861:	jb     0x6500586f
65005863:	mov    ecx,DWORD PTR [ebp-0x24]
65005866:	push   ecx
65005867:	call   0x650120d2
6500586c:	add    esp,0x4
6500586f:	push   0x6502791c
65005874:	push   0x7
65005876:	push   0x65027958
6500587b:	call   0x65006a60
65005880:	add    esp,0xc
65005883:	push   eax
65005884:	lea    ecx,[ebp-0x28]
65005887:	call   0x65002720
6500588c:	lea    edx,[ebp-0x28]
6500588f:	push   edx
65005890:	lea    eax,[ebp-0x40]
65005893:	push   eax
65005894:	lea    ecx,[ebp-0x34]
65005897:	push   ecx
65005898:	mov    BYTE PTR [ebp-0x4],0x1d
6500589c:	call   0x65007110
650058a1:	mov    BYTE PTR [ebp-0x4],0x2
650058a5:	cmp    DWORD PTR [ebp-0x10],edi
650058a8:	jb     0x650058b6
650058aa:	mov    edx,DWORD PTR [ebp-0x24]
650058ad:	push   edx
650058ae:	call   0x650120d2
650058b3:	add    esp,0x4
650058b6:	push   0x65027960
650058bb:	push   0x5
650058bd:	push   0x65027988
650058c2:	call   0x65006a60
650058c7:	add    esp,0xc
650058ca:	push   eax
650058cb:	lea    ecx,[ebp-0x28]
650058ce:	call   0x65002720
650058d3:	lea    eax,[ebp-0x28]
650058d6:	push   eax
650058d7:	lea    ecx,[ebp-0x40]
650058da:	push   ecx
650058db:	lea    edx,[ebp-0x34]
650058de:	push   edx
650058df:	mov    BYTE PTR [ebp-0x4],0x1e
650058e3:	call   0x65007110
650058e8:	mov    BYTE PTR [ebp-0x4],0x2
650058ec:	cmp    DWORD PTR [ebp-0x10],edi
650058ef:	jb     0x650058fd
650058f1:	mov    eax,DWORD PTR [ebp-0x24]
650058f4:	push   eax
650058f5:	call   0x650120d2
650058fa:	add    esp,0x4
650058fd:	push   0x65027990
65005902:	push   0x5
65005904:	push   0x650279b8
65005909:	call   0x65006a60
6500590e:	add    esp,0xc
65005911:	push   eax
65005912:	lea    ecx,[ebp-0x28]
65005915:	call   0x65002720
6500591a:	lea    ecx,[ebp-0x28]
6500591d:	push   ecx
6500591e:	lea    edx,[ebp-0x40]
65005921:	push   edx
65005922:	lea    eax,[ebp-0x34]
65005925:	push   eax
65005926:	mov    BYTE PTR [ebp-0x4],0x1f
6500592a:	call   0x65007110
6500592f:	mov    BYTE PTR [ebp-0x4],0x2
65005933:	cmp    DWORD PTR [ebp-0x10],edi
65005936:	jb     0x65005944
65005938:	mov    ecx,DWORD PTR [ebp-0x24]
6500593b:	push   ecx
6500593c:	call   0x650120d2
65005941:	add    esp,0x4
65005944:	push   0x650279c0
65005949:	push   0x7
6500594b:	push   0x650279e8
65005950:	call   0x65006a60
65005955:	add    esp,0xc
65005958:	push   eax
65005959:	lea    ecx,[ebp-0x28]
6500595c:	call   0x65002720
65005961:	lea    edx,[ebp-0x28]
65005964:	push   edx
65005965:	lea    eax,[ebp-0x40]
65005968:	push   eax
65005969:	lea    ecx,[ebp-0x34]
6500596c:	push   ecx
6500596d:	mov    BYTE PTR [ebp-0x4],0x20
65005971:	call   0x65007110
65005976:	mov    BYTE PTR [ebp-0x4],0x2
6500597a:	cmp    DWORD PTR [ebp-0x10],edi
6500597d:	jb     0x6500598b
6500597f:	mov    edx,DWORD PTR [ebp-0x24]
65005982:	push   edx
65005983:	call   0x650120d2
65005988:	add    esp,0x4
6500598b:	push   0x650279f0
65005990:	push   0x6
65005992:	push   0x65027a18
65005997:	call   0x65006a60
6500599c:	add    esp,0xc
6500599f:	push   eax
650059a0:	lea    ecx,[ebp-0x28]
650059a3:	call   0x65002720
650059a8:	lea    eax,[ebp-0x28]
650059ab:	push   eax
650059ac:	lea    ecx,[ebp-0x40]
650059af:	push   ecx
650059b0:	lea    edx,[ebp-0x34]
650059b3:	push   edx
650059b4:	mov    BYTE PTR [ebp-0x4],0x21
650059b8:	call   0x65007110
650059bd:	mov    BYTE PTR [ebp-0x4],0x2
650059c1:	cmp    DWORD PTR [ebp-0x10],edi
650059c4:	jb     0x650059d2
650059c6:	mov    eax,DWORD PTR [ebp-0x24]
650059c9:	push   eax
650059ca:	call   0x650120d2
650059cf:	add    esp,0x4
650059d2:	push   0x65027a20
650059d7:	push   0xe
650059d9:	push   0x65027a60
650059de:	call   0x65006a60
650059e3:	add    esp,0xc
650059e6:	push   eax
650059e7:	lea    ecx,[ebp-0x28]
650059ea:	call   0x65002720
650059ef:	lea    ecx,[ebp-0x28]
650059f2:	push   ecx
650059f3:	lea    edx,[ebp-0x40]
650059f6:	push   edx
650059f7:	lea    eax,[ebp-0x34]
650059fa:	push   eax
650059fb:	mov    BYTE PTR [ebp-0x4],0x22
650059ff:	call   0x65007110
65005a04:	mov    BYTE PTR [ebp-0x4],0x2
65005a08:	cmp    DWORD PTR [ebp-0x10],edi
65005a0b:	jb     0x65005a19
65005a0d:	mov    ecx,DWORD PTR [ebp-0x24]
65005a10:	push   ecx
65005a11:	call   0x650120d2
65005a16:	add    esp,0x4
65005a19:	push   0x65027a70
65005a1e:	push   0x12
65005a20:	push   0x65027a9c
65005a25:	call   0x65006a60
65005a2a:	add    esp,0xc
65005a2d:	push   eax
65005a2e:	lea    ecx,[ebp-0x28]
65005a31:	call   0x65002720
65005a36:	lea    edx,[ebp-0x28]
65005a39:	push   edx
65005a3a:	lea    eax,[ebp-0x40]
65005a3d:	push   eax
65005a3e:	lea    ecx,[ebp-0x34]
65005a41:	push   ecx
65005a42:	mov    BYTE PTR [ebp-0x4],0x23
65005a46:	call   0x65007110
65005a4b:	mov    BYTE PTR [ebp-0x4],0x2
65005a4f:	cmp    DWORD PTR [ebp-0x10],edi
65005a52:	jb     0x65005a60
65005a54:	mov    edx,DWORD PTR [ebp-0x24]
65005a57:	push   edx
65005a58:	call   0x650120d2
65005a5d:	add    esp,0x4
65005a60:	push   0x65027ab0
65005a65:	push   0x17
65005a67:	push   0x65027af0
65005a6c:	call   0x65006a60
65005a71:	add    esp,0xc
65005a74:	push   eax
65005a75:	lea    ecx,[ebp-0x28]
65005a78:	call   0x65002720
65005a7d:	lea    eax,[ebp-0x28]
65005a80:	push   eax
65005a81:	lea    ecx,[ebp-0x40]
65005a84:	push   ecx
65005a85:	lea    edx,[ebp-0x34]
65005a88:	push   edx
65005a89:	mov    BYTE PTR [ebp-0x4],0x24
65005a8d:	call   0x65007110
65005a92:	mov    BYTE PTR [ebp-0x4],0x2
65005a96:	cmp    DWORD PTR [ebp-0x10],edi
65005a99:	jb     0x65005aa7
65005a9b:	mov    eax,DWORD PTR [ebp-0x24]
65005a9e:	push   eax
65005a9f:	call   0x650120d2
65005aa4:	add    esp,0x4
65005aa7:	push   0x65027b08
65005aac:	push   0x11
65005aae:	push   0x65027b44
65005ab3:	call   0x65006a60
65005ab8:	add    esp,0xc
65005abb:	push   eax
65005abc:	lea    ecx,[ebp-0x28]
65005abf:	call   0x65002720
65005ac4:	lea    ecx,[ebp-0x28]
65005ac7:	push   ecx
65005ac8:	lea    edx,[ebp-0x40]
65005acb:	push   edx
65005acc:	lea    eax,[ebp-0x34]
65005acf:	push   eax
65005ad0:	mov    BYTE PTR [ebp-0x4],0x25
65005ad4:	call   0x65007110
65005ad9:	mov    BYTE PTR [ebp-0x4],0x2
65005add:	cmp    DWORD PTR [ebp-0x10],edi
65005ae0:	jb     0x65005aee
65005ae2:	mov    ecx,DWORD PTR [ebp-0x24]
65005ae5:	push   ecx
65005ae6:	call   0x650120d2
65005aeb:	add    esp,0x4
65005aee:	push   0x65027b58
65005af3:	push   0x8
65005af5:	push   0x65027b94
65005afa:	call   0x65006a60
65005aff:	add    esp,0xc
65005b02:	push   eax
65005b03:	lea    ecx,[ebp-0x28]
65005b06:	call   0x65002720
65005b0b:	lea    edx,[ebp-0x28]
65005b0e:	push   edx
65005b0f:	lea    eax,[ebp-0x40]
65005b12:	push   eax
65005b13:	lea    ecx,[ebp-0x34]
65005b16:	push   ecx
65005b17:	mov    BYTE PTR [ebp-0x4],0x26
65005b1b:	call   0x65007110
65005b20:	mov    BYTE PTR [ebp-0x4],0x2
65005b24:	cmp    DWORD PTR [ebp-0x10],edi
65005b27:	jb     0x65005b35
65005b29:	mov    edx,DWORD PTR [ebp-0x24]
65005b2c:	push   edx
65005b2d:	call   0x650120d2
65005b32:	add    esp,0x4
65005b35:	push   0x65027ba0
65005b3a:	push   0x6
65005b3c:	push   0x65027bc4
65005b41:	call   0x65006a60
65005b46:	add    esp,0xc
65005b49:	push   eax
65005b4a:	lea    ecx,[ebp-0x28]
65005b4d:	call   0x65002720
65005b52:	lea    eax,[ebp-0x28]
65005b55:	push   eax
65005b56:	lea    ecx,[ebp-0x40]
65005b59:	push   ecx
65005b5a:	lea    edx,[ebp-0x34]
65005b5d:	push   edx
65005b5e:	mov    BYTE PTR [ebp-0x4],0x27
65005b62:	call   0x65007110
65005b67:	mov    BYTE PTR [ebp-0x4],0x2
65005b6b:	cmp    DWORD PTR [ebp-0x10],edi
65005b6e:	jb     0x65005b7c
65005b70:	mov    eax,DWORD PTR [ebp-0x24]
65005b73:	push   eax
65005b74:	call   0x650120d2
65005b79:	add    esp,0x4
65005b7c:	push   0x65027bcc
65005b81:	push   0x6
65005b83:	push   0x65027bfc
65005b88:	call   0x65006a60
65005b8d:	add    esp,0xc
65005b90:	push   eax
65005b91:	lea    ecx,[ebp-0x28]
65005b94:	call   0x65002720
65005b99:	lea    ecx,[ebp-0x28]
65005b9c:	push   ecx
65005b9d:	lea    edx,[ebp-0x40]
65005ba0:	push   edx
65005ba1:	lea    eax,[ebp-0x34]
65005ba4:	push   eax
65005ba5:	mov    BYTE PTR [ebp-0x4],0x28
65005ba9:	call   0x65007110
65005bae:	mov    BYTE PTR [ebp-0x4],0x2
65005bb2:	cmp    DWORD PTR [ebp-0x10],edi
65005bb5:	jb     0x65005bc3
65005bb7:	mov    ecx,DWORD PTR [ebp-0x24]
65005bba:	push   ecx
65005bbb:	call   0x650120d2
65005bc0:	add    esp,0x4
65005bc3:	push   0x65027c04
65005bc8:	push   0x8
65005bca:	push   0x65027c44
65005bcf:	call   0x65006a60
65005bd4:	add    esp,0xc
65005bd7:	push   eax
65005bd8:	lea    ecx,[ebp-0x28]
65005bdb:	call   0x65002720
65005be0:	lea    edx,[ebp-0x28]
65005be3:	push   edx
65005be4:	lea    eax,[ebp-0x40]
65005be7:	push   eax
65005be8:	lea    ecx,[ebp-0x34]
65005beb:	push   ecx
65005bec:	mov    BYTE PTR [ebp-0x4],0x29
65005bf0:	call   0x65007110
65005bf5:	mov    BYTE PTR [ebp-0x4],0x2
65005bf9:	cmp    DWORD PTR [ebp-0x10],edi
65005bfc:	jb     0x65005c0a
65005bfe:	mov    edx,DWORD PTR [ebp-0x24]
65005c01:	push   edx
65005c02:	call   0x650120d2
65005c07:	add    esp,0x4
65005c0a:	push   0x65027c50
65005c0f:	push   0x6
65005c11:	push   0x65027c84
65005c16:	call   0x65006a60
65005c1b:	add    esp,0xc
65005c1e:	push   eax
65005c1f:	lea    ecx,[ebp-0x28]
65005c22:	call   0x65002720
65005c27:	lea    eax,[ebp-0x28]
65005c2a:	push   eax
65005c2b:	lea    ecx,[ebp-0x40]
65005c2e:	push   ecx
65005c2f:	lea    edx,[ebp-0x34]
65005c32:	push   edx
65005c33:	mov    BYTE PTR [ebp-0x4],0x2a
65005c37:	call   0x65007110
65005c3c:	mov    BYTE PTR [ebp-0x4],0x2
65005c40:	cmp    DWORD PTR [ebp-0x10],edi
65005c43:	jb     0x65005c51
65005c45:	mov    eax,DWORD PTR [ebp-0x24]
65005c48:	push   eax
65005c49:	call   0x650120d2
65005c4e:	add    esp,0x4
65005c51:	push   0x65027c8c
65005c56:	push   0x7
65005c58:	push   0x65027cc8
65005c5d:	call   0x65006a60
65005c62:	add    esp,0xc
65005c65:	push   eax
65005c66:	lea    ecx,[ebp-0x28]
65005c69:	call   0x65002720
65005c6e:	lea    ecx,[ebp-0x28]
65005c71:	push   ecx
65005c72:	lea    edx,[ebp-0x40]
65005c75:	push   edx
65005c76:	lea    eax,[ebp-0x34]
65005c79:	push   eax
65005c7a:	mov    BYTE PTR [ebp-0x4],0x2b
65005c7e:	call   0x65007110
65005c83:	mov    BYTE PTR [ebp-0x4],0x2
65005c87:	cmp    DWORD PTR [ebp-0x10],edi
65005c8a:	jb     0x65005c98
65005c8c:	mov    ecx,DWORD PTR [ebp-0x24]
65005c8f:	push   ecx
65005c90:	call   0x650120d2
65005c95:	add    esp,0x4
65005c98:	push   0x65027cd0
65005c9d:	push   0x6
65005c9f:	push   0x65027cfc
65005ca4:	call   0x65006a60
65005ca9:	add    esp,0xc
65005cac:	push   eax
65005cad:	lea    ecx,[ebp-0x28]
65005cb0:	call   0x65002720
65005cb5:	lea    edx,[ebp-0x28]
65005cb8:	push   edx
65005cb9:	lea    eax,[ebp-0x40]
65005cbc:	push   eax
65005cbd:	lea    ecx,[ebp-0x34]
65005cc0:	push   ecx
65005cc1:	mov    BYTE PTR [ebp-0x4],0x2c
65005cc5:	call   0x65007110
65005cca:	mov    BYTE PTR [ebp-0x4],0x2
65005cce:	cmp    DWORD PTR [ebp-0x10],edi
65005cd1:	jb     0x65005cdf
65005cd3:	mov    edx,DWORD PTR [ebp-0x24]
65005cd6:	push   edx
65005cd7:	call   0x650120d2
65005cdc:	add    esp,0x4
65005cdf:	push   0x65027d04
65005ce4:	push   0x6
65005ce6:	push   0x65027d40
65005ceb:	call   0x65006a60
65005cf0:	add    esp,0xc
65005cf3:	push   eax
65005cf4:	lea    ecx,[ebp-0x28]
65005cf7:	call   0x65002720
65005cfc:	lea    eax,[ebp-0x28]
65005cff:	push   eax
65005d00:	lea    ecx,[ebp-0x40]
65005d03:	push   ecx
65005d04:	lea    edx,[ebp-0x34]
65005d07:	push   edx
65005d08:	mov    BYTE PTR [ebp-0x4],0x2d
65005d0c:	call   0x65007110
65005d11:	mov    BYTE PTR [ebp-0x4],0x2
65005d15:	cmp    DWORD PTR [ebp-0x10],edi
65005d18:	jb     0x65005d26
65005d1a:	mov    eax,DWORD PTR [ebp-0x24]
65005d1d:	push   eax
65005d1e:	call   0x650120d2
65005d23:	add    esp,0x4
65005d26:	push   0x65027d48
65005d2b:	push   0x5
65005d2d:	push   0x65027d74
65005d32:	call   0x65006a60
65005d37:	add    esp,0xc
65005d3a:	push   eax
65005d3b:	lea    ecx,[ebp-0x28]
65005d3e:	call   0x65002720
65005d43:	lea    ecx,[ebp-0x28]
65005d46:	push   ecx
65005d47:	lea    edx,[ebp-0x40]
65005d4a:	push   edx
65005d4b:	lea    eax,[ebp-0x34]
65005d4e:	push   eax
65005d4f:	mov    BYTE PTR [ebp-0x4],0x2e
65005d53:	call   0x65007110
65005d58:	mov    BYTE PTR [ebp-0x4],0x2
65005d5c:	cmp    DWORD PTR [ebp-0x10],edi
65005d5f:	jb     0x65005d6d
65005d61:	mov    ecx,DWORD PTR [ebp-0x24]
65005d64:	push   ecx
65005d65:	call   0x650120d2
65005d6a:	add    esp,0x4
65005d6d:	push   0x65027d7c
65005d72:	push   0x6
65005d74:	push   0x65027dbc
65005d79:	call   0x65006a60
65005d7e:	add    esp,0xc
65005d81:	push   eax
65005d82:	lea    ecx,[ebp-0x28]
65005d85:	call   0x65002720
65005d8a:	lea    edx,[ebp-0x28]
65005d8d:	push   edx
65005d8e:	lea    eax,[ebp-0x40]
65005d91:	push   eax
65005d92:	lea    ecx,[ebp-0x34]
65005d95:	push   ecx
65005d96:	mov    BYTE PTR [ebp-0x4],0x2f
65005d9a:	call   0x65007110
65005d9f:	mov    BYTE PTR [ebp-0x4],0x2
65005da3:	cmp    DWORD PTR [ebp-0x10],edi
65005da6:	jb     0x65005db4
65005da8:	mov    edx,DWORD PTR [ebp-0x24]
65005dab:	push   edx
65005dac:	call   0x650120d2
65005db1:	add    esp,0x4
65005db4:	push   0x65027dc4
65005db9:	push   0xa
65005dbb:	push   0x65027df8
65005dc0:	call   0x65006a60
65005dc5:	add    esp,0xc
65005dc8:	push   eax
65005dc9:	lea    ecx,[ebp-0x28]
65005dcc:	call   0x65002720
65005dd1:	lea    eax,[ebp-0x28]
65005dd4:	push   eax
65005dd5:	lea    ecx,[ebp-0x40]
65005dd8:	push   ecx
65005dd9:	lea    edx,[ebp-0x34]
65005ddc:	push   edx
65005ddd:	mov    BYTE PTR [ebp-0x4],0x30
65005de1:	call   0x65007110
65005de6:	mov    BYTE PTR [ebp-0x4],0x2
65005dea:	cmp    DWORD PTR [ebp-0x10],edi
65005ded:	jb     0x65005dfb
65005def:	mov    eax,DWORD PTR [ebp-0x24]
65005df2:	push   eax
65005df3:	call   0x650120d2
65005df8:	add    esp,0x4
65005dfb:	push   0x65027e04
65005e00:	push   0xf
65005e02:	push   0x65027e3c
65005e07:	call   0x65006a60
65005e0c:	add    esp,0xc
65005e0f:	push   eax
65005e10:	lea    ecx,[ebp-0x28]
65005e13:	call   0x65002720
65005e18:	lea    ecx,[ebp-0x28]
65005e1b:	push   ecx
65005e1c:	lea    edx,[ebp-0x40]
65005e1f:	push   edx
65005e20:	lea    eax,[ebp-0x34]
65005e23:	push   eax
65005e24:	mov    BYTE PTR [ebp-0x4],0x31
65005e28:	call   0x65007110
65005e2d:	mov    BYTE PTR [ebp-0x4],0x2
65005e31:	cmp    DWORD PTR [ebp-0x10],edi
65005e34:	jb     0x65005e42
65005e36:	mov    ecx,DWORD PTR [ebp-0x24]
65005e39:	push   ecx
65005e3a:	call   0x650120d2
65005e3f:	add    esp,0x4
65005e42:	push   0x65027e4c
65005e47:	push   0xa
65005e49:	push   0x65027e74
65005e4e:	call   0x65006a60
65005e53:	add    esp,0xc
65005e56:	push   eax
65005e57:	lea    ecx,[ebp-0x28]
65005e5a:	call   0x65002720
65005e5f:	lea    edx,[ebp-0x28]
65005e62:	push   edx
65005e63:	lea    eax,[ebp-0x40]
65005e66:	push   eax
65005e67:	lea    ecx,[ebp-0x34]
65005e6a:	push   ecx
65005e6b:	mov    BYTE PTR [ebp-0x4],0x32
65005e6f:	call   0x65007110
65005e74:	mov    BYTE PTR [ebp-0x4],0x2
65005e78:	cmp    DWORD PTR [ebp-0x10],edi
65005e7b:	jb     0x65005e89
65005e7d:	mov    edx,DWORD PTR [ebp-0x24]
65005e80:	push   edx
65005e81:	call   0x650120d2
65005e86:	add    esp,0x4
65005e89:	push   0x65027e80
65005e8e:	push   0xb
65005e90:	push   0x65027eb8
65005e95:	call   0x65006a60
65005e9a:	add    esp,0xc
65005e9d:	push   eax
65005e9e:	lea    ecx,[ebp-0x28]
65005ea1:	call   0x65002720
65005ea6:	lea    eax,[ebp-0x28]
65005ea9:	push   eax
65005eaa:	lea    ecx,[ebp-0x40]
65005ead:	push   ecx
65005eae:	lea    edx,[ebp-0x34]
65005eb1:	push   edx
65005eb2:	mov    BYTE PTR [ebp-0x4],0x33
65005eb6:	call   0x65007110
65005ebb:	mov    BYTE PTR [ebp-0x4],0x2
65005ebf:	cmp    DWORD PTR [ebp-0x10],edi
65005ec2:	jb     0x65005ed0
65005ec4:	mov    eax,DWORD PTR [ebp-0x24]
65005ec7:	push   eax
65005ec8:	call   0x650120d2
65005ecd:	add    esp,0x4
65005ed0:	push   0x65027ec4
65005ed5:	push   0x1e
65005ed7:	push   0x65027f00
65005edc:	call   0x65006a60
65005ee1:	add    esp,0xc
65005ee4:	push   eax
65005ee5:	lea    ecx,[ebp-0x28]
65005ee8:	call   0x65002720
65005eed:	lea    ecx,[ebp-0x28]
65005ef0:	push   ecx
65005ef1:	lea    edx,[ebp-0x40]
65005ef4:	push   edx
65005ef5:	lea    eax,[ebp-0x34]
65005ef8:	push   eax
65005ef9:	mov    BYTE PTR [ebp-0x4],0x34
65005efd:	call   0x65007110
65005f02:	mov    BYTE PTR [ebp-0x4],0x2
65005f06:	cmp    DWORD PTR [ebp-0x10],edi
65005f09:	jb     0x65005f17
65005f0b:	mov    ecx,DWORD PTR [ebp-0x24]
65005f0e:	push   ecx
65005f0f:	call   0x650120d2
65005f14:	add    esp,0x4
65005f17:	push   0x65027f20
65005f1c:	push   0x16
65005f1e:	push   0x65027f4c
65005f23:	call   0x65006a60
65005f28:	add    esp,0xc
65005f2b:	push   eax
65005f2c:	lea    ecx,[ebp-0x28]
65005f2f:	call   0x65002720
65005f34:	lea    edx,[ebp-0x28]
65005f37:	push   edx
65005f38:	lea    eax,[ebp-0x40]
65005f3b:	push   eax
65005f3c:	lea    ecx,[ebp-0x34]
65005f3f:	push   ecx
65005f40:	mov    BYTE PTR [ebp-0x4],0x35
65005f44:	call   0x65007110
65005f49:	mov    BYTE PTR [ebp-0x4],0x2
65005f4d:	cmp    DWORD PTR [ebp-0x10],edi
65005f50:	jb     0x65005f5e
65005f52:	mov    edx,DWORD PTR [ebp-0x24]
65005f55:	push   edx
65005f56:	call   0x650120d2
65005f5b:	add    esp,0x4
65005f5e:	push   0x65027f64
65005f63:	push   0x19
65005f65:	push   0x65027f94
65005f6a:	call   0x65006a60
65005f6f:	add    esp,0xc
65005f72:	push   eax
65005f73:	lea    ecx,[ebp-0x28]
65005f76:	call   0x65002720
65005f7b:	lea    eax,[ebp-0x28]
65005f7e:	push   eax
65005f7f:	lea    ecx,[ebp-0x40]
65005f82:	push   ecx
65005f83:	lea    edx,[ebp-0x34]
65005f86:	push   edx
65005f87:	mov    BYTE PTR [ebp-0x4],0x36
65005f8b:	call   0x65007110
65005f90:	mov    BYTE PTR [ebp-0x4],0x2
65005f94:	cmp    DWORD PTR [ebp-0x10],edi
65005f97:	jb     0x65005fa5
65005f99:	mov    eax,DWORD PTR [ebp-0x24]
65005f9c:	push   eax
65005f9d:	call   0x650120d2
65005fa2:	add    esp,0x4
65005fa5:	push   0x65027fb0
65005faa:	push   0x7
65005fac:	push   0x65027fd8
65005fb1:	call   0x65006a60
65005fb6:	add    esp,0xc
65005fb9:	push   eax
65005fba:	lea    ecx,[ebp-0x28]
65005fbd:	call   0x65002720
65005fc2:	lea    ecx,[ebp-0x28]
65005fc5:	push   ecx
65005fc6:	lea    edx,[ebp-0x40]
65005fc9:	push   edx
65005fca:	lea    eax,[ebp-0x34]
65005fcd:	push   eax
65005fce:	mov    BYTE PTR [ebp-0x4],0x37
65005fd2:	call   0x65007110
65005fd7:	mov    BYTE PTR [ebp-0x4],0x2
65005fdb:	cmp    DWORD PTR [ebp-0x10],edi
65005fde:	jb     0x65005fec
65005fe0:	mov    ecx,DWORD PTR [ebp-0x24]
65005fe3:	push   ecx
65005fe4:	call   0x650120d2
65005fe9:	add    esp,0x4
65005fec:	push   0x65027fe0
65005ff1:	push   0x5
65005ff3:	push   0x6502801c
65005ff8:	call   0x65006a60
65005ffd:	add    esp,0xc
65006000:	push   eax
65006001:	lea    ecx,[ebp-0x28]
65006004:	call   0x65002720
65006009:	lea    edx,[ebp-0x28]
6500600c:	push   edx
6500600d:	lea    eax,[ebp-0x40]
65006010:	push   eax
65006011:	lea    ecx,[ebp-0x34]
65006014:	push   ecx
65006015:	mov    BYTE PTR [ebp-0x4],0x38
65006019:	call   0x65007110
6500601e:	mov    BYTE PTR [ebp-0x4],0x2
65006022:	cmp    DWORD PTR [ebp-0x10],edi
65006025:	jb     0x65006033
65006027:	mov    edx,DWORD PTR [ebp-0x24]
6500602a:	push   edx
6500602b:	call   0x650120d2
65006030:	add    esp,0x4
65006033:	push   0x65028024
65006038:	push   0xb
6500603a:	push   0x65028048
6500603f:	call   0x65006a60
65006044:	add    esp,0xc
65006047:	push   eax
65006048:	lea    ecx,[ebp-0x28]
6500604b:	call   0x65002720
65006050:	lea    eax,[ebp-0x28]
65006053:	push   eax
65006054:	lea    ecx,[ebp-0x40]
65006057:	push   ecx
65006058:	lea    edx,[ebp-0x34]
6500605b:	push   edx
6500605c:	mov    BYTE PTR [ebp-0x4],0x39
65006060:	call   0x65007110
65006065:	mov    BYTE PTR [ebp-0x4],0x2
65006069:	cmp    DWORD PTR [ebp-0x10],edi
6500606c:	jb     0x6500607a
6500606e:	mov    eax,DWORD PTR [ebp-0x24]
65006071:	push   eax
65006072:	call   0x650120d2
65006077:	add    esp,0x4
6500607a:	push   0x65028054
6500607f:	push   0xc
65006081:	push   0x65028078
65006086:	call   0x65006a60
6500608b:	add    esp,0xc
6500608e:	push   eax
6500608f:	lea    ecx,[ebp-0x28]
65006092:	call   0x65002720
65006097:	lea    ecx,[ebp-0x28]
6500609a:	push   ecx
6500609b:	lea    edx,[ebp-0x40]
6500609e:	push   edx
6500609f:	lea    eax,[ebp-0x34]
650060a2:	push   eax
650060a3:	mov    BYTE PTR [ebp-0x4],0x3a
650060a7:	call   0x65007110
650060ac:	mov    BYTE PTR [ebp-0x4],0x2
650060b0:	cmp    DWORD PTR [ebp-0x10],edi
650060b3:	jb     0x650060c1
650060b5:	mov    ecx,DWORD PTR [ebp-0x24]
650060b8:	push   ecx
650060b9:	call   0x650120d2
650060be:	add    esp,0x4
650060c1:	push   0x65028088
650060c6:	push   0x8
650060c8:	push   0x650280c4
650060cd:	call   0x65006a60
650060d2:	add    esp,0xc
650060d5:	push   eax
650060d6:	lea    ecx,[ebp-0x28]
650060d9:	call   0x65002720
650060de:	lea    edx,[ebp-0x28]
650060e1:	push   edx
650060e2:	lea    eax,[ebp-0x40]
650060e5:	push   eax
650060e6:	lea    ecx,[ebp-0x34]
650060e9:	push   ecx
650060ea:	mov    BYTE PTR [ebp-0x4],0x3b
650060ee:	call   0x65007110
650060f3:	mov    BYTE PTR [ebp-0x4],0x2
650060f7:	cmp    DWORD PTR [ebp-0x10],edi
650060fa:	jb     0x65006108
650060fc:	mov    edx,DWORD PTR [ebp-0x24]
650060ff:	push   edx
65006100:	call   0x650120d2
65006105:	add    esp,0x4
65006108:	push   0x650280d0
6500610d:	push   0xc
6500610f:	push   0x650280f8
65006114:	call   0x65006a60
65006119:	add    esp,0xc
6500611c:	push   eax
6500611d:	lea    ecx,[ebp-0x28]
65006120:	call   0x65002720
65006125:	lea    eax,[ebp-0x28]
65006128:	push   eax
65006129:	lea    ecx,[ebp-0x40]
6500612c:	push   ecx
6500612d:	lea    edx,[ebp-0x34]
65006130:	push   edx
65006131:	mov    BYTE PTR [ebp-0x4],0x3c
65006135:	call   0x65007110
6500613a:	mov    BYTE PTR [ebp-0x4],0x2
6500613e:	cmp    DWORD PTR [ebp-0x10],edi
65006141:	jb     0x6500614f
65006143:	mov    eax,DWORD PTR [ebp-0x24]
65006146:	push   eax
65006147:	call   0x650120d2
6500614c:	add    esp,0x4
6500614f:	push   0x65028108
65006154:	push   0xa
65006156:	push   0x65028134
6500615b:	call   0x65006a60
65006160:	add    esp,0xc
65006163:	push   eax
65006164:	lea    ecx,[ebp-0x28]
65006167:	call   0x65002720
6500616c:	lea    ecx,[ebp-0x28]
6500616f:	push   ecx
65006170:	lea    edx,[ebp-0x40]
65006173:	push   edx
65006174:	lea    eax,[ebp-0x34]
65006177:	push   eax
65006178:	mov    BYTE PTR [ebp-0x4],0x3d
6500617c:	call   0x65007110
65006181:	mov    BYTE PTR [ebp-0x4],0x2
65006185:	cmp    DWORD PTR [ebp-0x10],edi
65006188:	jb     0x65006196
6500618a:	mov    ecx,DWORD PTR [ebp-0x24]
6500618d:	push   ecx
6500618e:	call   0x650120d2
65006193:	add    esp,0x4
65006196:	lea    edx,[ebp-0x40]
65006199:	push   edx
6500619a:	lea    ecx,[ebp-0x34]
6500619d:	call   0x65003c00
650061a2:	add    esp,0x4
650061a5:	mov    ecx,0x650303f0
650061aa:	mov    BYTE PTR [ebp-0x4],0x3e
650061ae:	call   0x650070d0
650061b3:	lea    eax,[ebp-0x40]
650061b6:	mov    BYTE PTR [ebp-0x4],0x2
650061ba:	call   0x65007af0
650061bf:	lea    eax,[ebp-0x34]
650061c2:	mov    BYTE PTR [ebp-0x4],bl
650061c5:	call   0x65007af0
650061ca:	call   DWORD PTR ds:0x6502c06c
650061d0:	mov    DWORD PTR [ebp-0x48],eax
650061d3:	mov    eax,DWORD PTR [ebp+0x40c]
650061d9:	cmp    DWORD PTR [eax-0x4],0x1
650061dd:	jle    0x650061f4
650061df:	mov    eax,DWORD PTR [eax-0xc]
650061e2:	push   eax
650061e3:	lea    ecx,[ebp+0x40c]
650061e9:	call   0x650019b0
650061ee:	mov    eax,DWORD PTR [ebp+0x40c]
650061f4:	cmp    eax,ebx
650061f6:	jne    0x650061fc
650061f8:	xor    eax,eax
650061fa:	jmp    0x6500622f
650061fc:	push   eax
650061fd:	call   DWORD PTR ds:0x65024048
65006203:	add    eax,0x1
65006206:	cmp    eax,0x3fffffff
6500620b:	jle    0x65006211
6500620d:	xor    eax,eax
6500620f:	jmp    0x6500622f
65006211:	lea    esi,[eax+eax*1]
65006214:	mov    eax,esi
65006216:	call   0x65013030
6500621b:	mov    ecx,DWORD PTR [ebp-0x48]
6500621e:	mov    edx,DWORD PTR [ebp+0x40c]
65006224:	mov    eax,esp
65006226:	push   ecx
65006227:	push   esi
65006228:	push   edx
65006229:	push   eax
6500622a:	call   0x65002b90
6500622f:	lea    edx,[ebp+0x0]
65006232:	mov    cl,BYTE PTR [eax]
65006234:	mov    BYTE PTR [edx],cl
65006236:	add    eax,0x1
65006239:	add    edx,0x1
6500623c:	cmp    cl,bl
6500623e:	jne    0x65006232
65006240:	lea    eax,[ebp+0x0]
65006243:	push   eax
65006244:	call   0x6501ecd5
65006249:	add    esp,0x4
6500624c:	lea    ecx,[ebp+0x0]
6500624f:	push   ecx
65006250:	lea    ecx,[ebp-0x28]
65006253:	call   0x65002720
65006258:	lea    eax,[ebp-0x28]
6500625b:	mov    esi,0x650303f0
65006260:	mov    BYTE PTR [ebp-0x4],0x3f
65006264:	call   0x650072a0
65006269:	test   eax,eax
6500626b:	setne  BYTE PTR [ebp-0x41]
6500626f:	cmp    DWORD PTR [ebp-0x10],edi
65006272:	jb     0x65006280
65006274:	mov    edx,DWORD PTR [ebp-0x24]
65006277:	push   edx
65006278:	call   0x650120d2
6500627d:	add    esp,0x4
65006280:	mov    DWORD PTR [ebp-0x4],0xffffffff
65006287:	mov    eax,DWORD PTR [ebp+0x40c]
6500628d:	add    eax,0xfffffff0
65006290:	mov    DWORD PTR [ebp-0x10],0xf
65006297:	mov    DWORD PTR [ebp-0x14],ebx
6500629a:	mov    BYTE PTR [ebp-0x24],bl
6500629d:	lea    ecx,[eax+0xc]
650062a0:	or     edx,0xffffffff
650062a3:	lock xadd DWORD PTR [ecx],edx
650062a7:	dec    edx
650062a8:	test   edx,edx
650062aa:	jg     0x650062b6
650062ac:	mov    ecx,DWORD PTR [eax]
650062ae:	mov    edx,DWORD PTR [ecx]
650062b0:	push   eax
650062b1:	mov    eax,DWORD PTR [edx+0x4]
650062b4:	call   eax
650062b6:	mov    al,BYTE PTR [ebp-0x41]
650062b9:	lea    esp,[ebp-0x58]
650062bc:	mov    ecx,DWORD PTR [ebp-0xc]
650062bf:	mov    DWORD PTR fs:0x0,ecx
650062c6:	pop    ecx
650062c7:	pop    edi
650062c8:	pop    esi
650062c9:	pop    ebx
650062ca:	mov    ecx,DWORD PTR [ebp+0x400]
650062d0:	xor    ecx,ebp
650062d2:	call   0x6501292c
650062d7:	add    ebp,0x404
650062dd:	mov    esp,ebp
650062df:	pop    ebp
650062e0:	ret    
650062e1:	int3   
650062e2:	int3   
650062e3:	int3   
650062e4:	int3   
650062e5:	int3   
650062e6:	int3   
650062e7:	int3   
650062e8:	int3   
650062e9:	int3   
650062ea:	int3   
650062eb:	int3   
650062ec:	int3   
650062ed:	int3   
650062ee:	int3   
650062ef:	int3   
650062f0:	push   0xffffffff
650062f2:	push   0x65023469
650062f7:	mov    eax,fs:0x0
650062fd:	push   eax
650062fe:	sub    esp,0x44
65006301:	push   ebx
65006302:	push   ebp
65006303:	push   esi
65006304:	push   edi
65006305:	mov    eax,ds:0x6502c09c
6500630a:	xor    eax,esp
6500630c:	push   eax
6500630d:	lea    eax,[esp+0x58]
65006311:	mov    fs:0x0,eax
65006317:	xor    edi,edi
65006319:	mov    DWORD PTR [esp+0x60],edi
6500631d:	mov    DWORD PTR [esp+0x28],edi
65006321:	call   DWORD PTR ds:0x6502c06c
65006327:	mov    eax,ds:0x6502d560
6500632c:	mov    edx,DWORD PTR [eax+0xc]
6500632f:	mov    ecx,0x6502d560
65006334:	call   edx
65006336:	mov    ebx,DWORD PTR [esp+0x68]
6500633a:	add    eax,0x10
6500633d:	mov    DWORD PTR [ebx],eax
6500633f:	push   0x4
65006341:	push   edi
65006342:	mov    DWORD PTR [esp+0x68],edi
65006346:	push   edi
65006347:	mov    DWORD PTR [esp+0x34],0x1
6500634f:	call   0x6500e710
65006354:	call   eax
65006356:	cmp    eax,edi
65006358:	mov    DWORD PTR [esp+0x1c],eax
6500635c:	je     0x650064e4
65006362:	mov    ebp,DWORD PTR ds:0x65024004
65006368:	lea    ecx,[esp+0x20]
6500636c:	push   ecx
6500636d:	lea    edx,[esp+0x1c]
65006371:	push   edx
65006372:	lea    ecx,[esp+0x2c]
65006376:	push   ecx
65006377:	push   0x24
65006379:	lea    edx,[esp+0x44]
6500637d:	push   edx
6500637e:	push   0x3
65006380:	push   0x13f
65006385:	push   eax
65006386:	mov    DWORD PTR [esp+0x40],edi
6500638a:	call   ebp
6500638c:	mov    esi,eax
6500638e:	call   DWORD PTR ds:0x6502403c
65006394:	cmp    esi,edi
65006396:	je     0x6500639f
65006398:	cmp    eax,0xea
6500639d:	jne    0x650063e4
6500639f:	mov    esi,DWORD PTR [esp+0x24]
650063a3:	add    esi,0x24
650063a6:	xor    ecx,ecx
650063a8:	mov    eax,esi
650063aa:	mov    edx,0x24
650063af:	mul    edx
650063b1:	seto   cl
650063b4:	neg    ecx
650063b6:	or     ecx,eax
650063b8:	push   ecx
650063b9:	call   0x650120cd
650063be:	add    esp,0x4
650063c1:	mov    edi,eax
650063c3:	lea    eax,[esp+0x20]
650063c7:	push   eax
650063c8:	mov    eax,DWORD PTR [esp+0x20]
650063cc:	lea    ecx,[esp+0x1c]
650063d0:	push   ecx
650063d1:	lea    edx,[esp+0x2c]
650063d5:	push   edx
650063d6:	push   esi
650063d7:	push   edi
650063d8:	push   0x3
650063da:	push   0x13f
650063df:	push   eax
650063e0:	call   ebp
650063e2:	jmp    0x650063e8
650063e4:	mov    edi,DWORD PTR [esp+0x2c]
650063e8:	xor    ebp,ebp
650063ea:	cmp    DWORD PTR [esp+0x18],ebp
650063ee:	jbe    0x650064e0
650063f4:	mov    ecx,DWORD PTR [edi]
650063f6:	push   ecx
650063f7:	lea    ecx,[esp+0x18]
650063fb:	call   0x650025a0
65006400:	mov    DWORD PTR [esp+0x60],0x1
65006408:	mov    eax,DWORD PTR [esp+0x14]
6500640c:	push   ecx
6500640d:	add    eax,0xfffffff0
65006410:	mov    DWORD PTR [esp+0x34],esp
65006414:	mov    esi,esp
65006416:	push   eax
65006417:	call   0x650028b0
6500641c:	add    eax,0x10
6500641f:	add    esp,0x4
65006422:	cmp    BYTE PTR [esp+0x70],0x0
65006427:	mov    DWORD PTR [esi],eax
65006429:	je     0x65006439
6500642b:	call   0x65004dd0
65006430:	add    esp,0x4
65006433:	test   al,al
65006435:	jne    0x65006445
65006437:	jmp    0x650064ab
65006439:	call   0x65003e60
6500643e:	add    esp,0x4
65006441:	test   al,al
65006443:	jne    0x650064ab
65006445:	push   0x65028140
6500644a:	push   0x4
6500644c:	push   0x65028170
65006451:	call   0x65006a60
65006456:	add    esp,0xc
65006459:	push   eax
6500645a:	mov    ecx,ebx
6500645c:	call   0x65002670
65006461:	lea    edx,[esp+0x14]
65006465:	push   edx
65006466:	lea    eax,[esp+0x30]
6500646a:	push   eax
6500646b:	call   0x65003160
65006470:	add    esp,0x8
65006473:	mov    BYTE PTR [esp+0x60],0x2
65006478:	mov    eax,DWORD PTR [eax]
6500647a:	mov    ecx,DWORD PTR [eax-0xc]
6500647d:	push   ecx
6500647e:	push   eax
6500647f:	mov    ecx,ebx
65006481:	call   0x650029f0
65006486:	mov    BYTE PTR [esp+0x60],0x1
6500648b:	mov    eax,DWORD PTR [esp+0x2c]
6500648f:	add    eax,0xfffffff0
65006492:	lea    ecx,[eax+0xc]
65006495:	or     edx,0xffffffff
65006498:	lock xadd DWORD PTR [ecx],edx
6500649c:	dec    edx
6500649d:	test   edx,edx
6500649f:	jg     0x650064ab
650064a1:	mov    ecx,DWORD PTR [eax]
650064a3:	mov    edx,DWORD PTR [ecx]
650064a5:	push   eax
650064a6:	mov    eax,DWORD PTR [edx+0x4]
650064a9:	call   eax
650064ab:	mov    BYTE PTR [esp+0x60],0x0
650064b0:	mov    eax,DWORD PTR [esp+0x14]
650064b4:	add    eax,0xfffffff0
650064b7:	lea    ecx,[eax+0xc]
650064ba:	or     edx,0xffffffff
650064bd:	lock xadd DWORD PTR [ecx],edx
650064c1:	dec    edx
650064c2:	test   edx,edx
650064c4:	jg     0x650064d0
650064c6:	mov    ecx,DWORD PTR [eax]
650064c8:	mov    edx,DWORD PTR [ecx]
650064ca:	push   eax
650064cb:	mov    eax,DWORD PTR [edx+0x4]
650064ce:	call   eax
650064d0:	add    ebp,0x1
650064d3:	add    edi,0x24
650064d6:	cmp    ebp,DWORD PTR [esp+0x18]
650064da:	jb     0x650063f4
650064e0:	mov    eax,DWORD PTR [esp+0x1c]
650064e4:	push   eax
650064e5:	call   0x6500e7a0
650064ea:	call   eax
650064ec:	mov    eax,ebx
650064ee:	mov    ecx,DWORD PTR [esp+0x58]
650064f2:	mov    DWORD PTR fs:0x0,ecx
650064f9:	pop    ecx
650064fa:	pop    edi
650064fb:	pop    esi
650064fc:	pop    ebp
650064fd:	pop    ebx
650064fe:	add    esp,0x50
65006501:	ret    
65006502:	int3   
65006503:	int3   
65006504:	int3   
65006505:	int3   
65006506:	int3   
65006507:	int3   
65006508:	int3   
65006509:	int3   
6500650a:	int3   
6500650b:	int3   
6500650c:	int3   
6500650d:	int3   
6500650e:	int3   
6500650f:	int3   
65006510:	push   ebp
65006511:	mov    ebp,esp
65006513:	push   0xffffffff
65006515:	push   0x65022f90
6500651a:	mov    eax,fs:0x0
65006520:	push   eax
65006521:	sub    esp,0x15c
65006527:	mov    eax,ds:0x6502c09c
6500652c:	xor    eax,ebp
6500652e:	mov    DWORD PTR [ebp-0x14],eax
65006531:	push   ebx
65006532:	push   esi
65006533:	push   edi
65006534:	push   eax
65006535:	lea    eax,[ebp-0xc]
65006538:	mov    fs:0x0,eax
6500653e:	mov    DWORD PTR [ebp-0x10],esp
65006541:	mov    edi,DWORD PTR [ebp+0x8]
65006544:	push   0xa0
65006549:	lea    eax,[ebp-0x154]
6500654f:	push   eax
65006550:	push   0x7d0
65006555:	push   0x65000000
6500655a:	mov    DWORD PTR [ebp-0x4],0x0
65006561:	call   DWORD PTR ds:0x650241ac
65006567:	test   eax,eax
65006569:	je     0x650065b0
6500656b:	push   ecx
6500656c:	lea    edx,[ebp-0x154]
65006572:	mov    ecx,esp
65006574:	mov    DWORD PTR [ebp-0x158],esp
6500657a:	push   edx
6500657b:	call   0x650025a0
65006580:	lea    esi,[ebp-0x168]
65006586:	call   0x65002f60
6500658b:	mov    ecx,DWORD PTR [eax]
6500658d:	mov    DWORD PTR [edi],ecx
6500658f:	mov    edx,DWORD PTR [eax+0x4]
65006592:	mov    DWORD PTR [edi+0x4],edx
65006595:	mov    ecx,DWORD PTR [eax+0x8]
65006598:	mov    DWORD PTR [edi+0x8],ecx
6500659b:	mov    edx,DWORD PTR [eax+0xc]
6500659e:	add    esp,0x4
650065a1:	mov    DWORD PTR [edi+0xc],edx
650065a4:	mov    al,0x1
650065a6:	jmp    0x650065d3
650065a8:	mov    eax,0x650065ae
650065ad:	ret    
650065ae:	jmp    0x650065d1
650065b0:	mov    eax,ds:0x65024ba8
650065b5:	mov    DWORD PTR [edi],eax
650065b7:	mov    ecx,DWORD PTR ds:0x65024bac
650065bd:	mov    DWORD PTR [edi+0x4],ecx
650065c0:	mov    edx,DWORD PTR ds:0x65024bb0
650065c6:	mov    DWORD PTR [edi+0x8],edx
650065c9:	mov    eax,ds:0x65024bb4
650065ce:	mov    DWORD PTR [edi+0xc],eax
650065d1:	xor    al,al
650065d3:	mov    ecx,DWORD PTR [ebp-0xc]
650065d6:	mov    DWORD PTR fs:0x0,ecx
650065dd:	pop    ecx
650065de:	pop    edi
650065df:	pop    esi
650065e0:	pop    ebx
650065e1:	mov    ecx,DWORD PTR [ebp-0x14]
650065e4:	xor    ecx,ebp
650065e6:	call   0x6501292c
650065eb:	mov    esp,ebp
650065ed:	pop    ebp
650065ee:	ret    
650065ef:	int3   
650065f0:	sub    esp,0x118
650065f6:	mov    eax,ds:0x6502c09c
650065fb:	xor    eax,esp
650065fd:	mov    DWORD PTR [esp+0x114],eax
65006604:	push   esi
65006605:	push   0x110
6500660a:	lea    eax,[esp+0xc]
6500660e:	push   0x0
65006610:	push   eax
65006611:	call   0x65012fb0
65006616:	mov    edx,DWORD PTR ds:0x6502d560
6500661c:	mov    eax,DWORD PTR [edx+0xc]
6500661f:	add    esp,0xc
65006622:	mov    ecx,0x6502d560
65006627:	mov    DWORD PTR [esp+0x4],0x114
6500662f:	call   eax
65006631:	lea    ecx,[esp+0x4]
65006635:	mov    esi,eax
65006637:	push   ecx
65006638:	add    esi,0x10
6500663b:	call   DWORD PTR ds:0x65024060
65006641:	test   eax,eax
65006643:	je     0x65006685
65006645:	mov    edx,DWORD PTR [esp+0x8]
65006649:	mov    eax,DWORD PTR [esp+0xc]
6500664d:	mov    DWORD PTR [edi],edx
6500664f:	mov    DWORD PTR [ebx],eax
65006651:	lea    eax,[esi-0x10]
65006654:	lea    ecx,[eax+0xc]
65006657:	or     edx,0xffffffff
6500665a:	lock xadd DWORD PTR [ecx],edx
6500665e:	dec    edx
6500665f:	test   edx,edx
65006661:	jg     0x6500666d
65006663:	mov    ecx,DWORD PTR [eax]
65006665:	mov    edx,DWORD PTR [ecx]
65006667:	push   eax
65006668:	mov    eax,DWORD PTR [edx+0x4]
6500666b:	call   eax
6500666d:	mov    al,0x1
6500666f:	pop    esi
65006670:	mov    ecx,DWORD PTR [esp+0x114]
65006677:	xor    ecx,esp
65006679:	call   0x6501292c
6500667e:	add    esp,0x118
65006684:	ret    
65006685:	lea    eax,[esi-0x10]
65006688:	lea    ecx,[eax+0xc]
6500668b:	or     edx,0xffffffff
6500668e:	lock xadd DWORD PTR [ecx],edx
65006692:	dec    edx
65006693:	test   edx,edx
65006695:	jg     0x650066a1
65006697:	mov    ecx,DWORD PTR [eax]
65006699:	mov    edx,DWORD PTR [ecx]
6500669b:	push   eax
6500669c:	mov    eax,DWORD PTR [edx+0x4]
6500669f:	call   eax
650066a1:	mov    ecx,DWORD PTR [esp+0x118]
650066a8:	pop    esi
650066a9:	xor    ecx,esp
650066ab:	xor    al,al
650066ad:	call   0x6501292c
650066b2:	add    esp,0x118
650066b8:	ret    
650066b9:	int3   
650066ba:	int3   
650066bb:	int3   
650066bc:	int3   
650066bd:	int3   
650066be:	int3   
650066bf:	int3   
650066c0:	push   ebp
650066c1:	mov    ebp,esp
650066c3:	and    esp,0xfffffff8
650066c6:	push   0xffffffff
650066c8:	push   0x65022d78
650066cd:	mov    eax,fs:0x0
650066d3:	push   eax
650066d4:	sub    esp,0x14
650066d7:	push   ebx
650066d8:	push   edi
650066d9:	mov    eax,ds:0x6502c09c
650066de:	xor    eax,esp
650066e0:	push   eax
650066e1:	lea    eax,[esp+0x20]
650066e5:	mov    fs:0x0,eax
650066eb:	cmp    DWORD PTR ds:0x65030370,0x0
650066f2:	jne    0x650067a5
650066f8:	push   0x65028178
650066fd:	push   0x12
650066ff:	push   0x650281ac
65006704:	mov    DWORD PTR ds:0x65030370,0xc
6500670e:	mov    DWORD PTR ds:0x65030378,0x0
65006718:	call   0x65006d50
6500671d:	add    esp,0xc
65006720:	push   eax
65006721:	lea    ecx,[esp+0x14]
65006725:	call   0x650025a0
6500672a:	lea    ebx,[esp+0x18]
6500672e:	lea    edi,[esp+0x14]
65006732:	mov    DWORD PTR [esp+0x28],0x0
6500673a:	call   0x650065f0
6500673f:	test   al,al
65006741:	je     0x65006768
65006743:	cmp    DWORD PTR [esp+0x14],0x6
65006748:	jb     0x65006768
6500674a:	push   0x650281d4
6500674f:	push   0xf
65006751:	push   0x65028214
65006756:	call   0x65006d50
6500675b:	add    esp,0xc
6500675e:	push   eax
6500675f:	lea    ecx,[esp+0x14]
65006763:	call   0x65006a20
65006768:	mov    eax,DWORD PTR [esp+0x10]
6500676c:	push   0x0
6500676e:	push   0x65030374
65006773:	push   0x1
65006775:	push   eax
65006776:	call   0x6500e690
6500677b:	call   eax
6500677d:	mov    DWORD PTR [esp+0x28],0xffffffff
65006785:	mov    eax,DWORD PTR [esp+0x10]
65006789:	add    eax,0xfffffff0
6500678c:	lea    ecx,[eax+0xc]
6500678f:	or     edx,0xffffffff
65006792:	lock xadd DWORD PTR [ecx],edx
65006796:	dec    edx
65006797:	test   edx,edx
65006799:	jg     0x650067a5
6500679b:	mov    ecx,DWORD PTR [eax]
6500679d:	mov    edx,DWORD PTR [ecx]
6500679f:	push   eax
650067a0:	mov    eax,DWORD PTR [edx+0x4]
650067a3:	call   eax
650067a5:	mov    eax,0x65030370
650067aa:	mov    ecx,DWORD PTR [esp+0x20]
650067ae:	mov    DWORD PTR fs:0x0,ecx
650067b5:	pop    ecx
650067b6:	pop    edi
650067b7:	pop    ebx
650067b8:	mov    esp,ebp
650067ba:	pop    ebp
650067bb:	ret    
650067bc:	int3   
650067bd:	int3   
650067be:	int3   
650067bf:	int3   
650067c0:	push   0xffffffff
650067c2:	push   0x65022d48
650067c7:	mov    eax,fs:0x0
650067cd:	push   eax
650067ce:	push   ecx
650067cf:	push   esi
650067d0:	push   edi
650067d1:	mov    eax,ds:0x6502c09c
650067d6:	xor    eax,esp
650067d8:	push   eax
650067d9:	lea    eax,[esp+0x10]
650067dd:	mov    fs:0x0,eax
650067e3:	mov    esi,ecx
650067e5:	mov    DWORD PTR [esp+0xc],esi
650067e9:	mov    eax,ds:0x6502d560
650067ee:	mov    edx,DWORD PTR [eax+0xc]
650067f1:	mov    ecx,0x6502d560
650067f6:	call   edx
650067f8:	add    eax,0x10
650067fb:	mov    DWORD PTR [esi],eax
650067fd:	mov    eax,DWORD PTR [esp+0x20]
65006801:	test   eax,eax
65006803:	mov    DWORD PTR [esp+0x18],0x0
6500680b:	je     0x65006831
6500680d:	test   eax,0xffff0000
65006812:	jne    0x65006831
65006814:	movzx  edi,ax
65006817:	push   0x0
65006819:	push   edi
6500681a:	call   0x65002000
6500681f:	add    esp,0x8
65006822:	test   eax,eax
65006824:	je     0x65006839
65006826:	push   edi
65006827:	push   eax
65006828:	mov    ecx,esi
6500682a:	call   0x65002920
6500682f:	jmp    0x65006839
65006831:	push   eax
65006832:	mov    ecx,esi
65006834:	call   0x65002810
65006839:	mov    eax,esi
6500683b:	mov    ecx,DWORD PTR [esp+0x10]
6500683f:	mov    DWORD PTR fs:0x0,ecx
65006846:	pop    ecx
65006847:	pop    edi
65006848:	pop    esi
65006849:	add    esp,0x10
6500684c:	ret    0x4
6500684f:	int3   
65006850:	mov    eax,DWORD PTR [edi]
65006852:	mov    edx,DWORD PTR [eax-0x8]
65006855:	push   ebx
65006856:	mov    ebx,DWORD PTR [eax-0xc]
65006859:	push   esi
6500685a:	mov    ecx,0x1
6500685f:	sub    ecx,DWORD PTR [eax-0x4]
65006862:	lea    esi,[ebx+0x1]
65006865:	sub    edx,esi
65006867:	or     ecx,edx
65006869:	jge    0x65006873
6500686b:	push   esi
6500686c:	mov    ecx,edi
6500686e:	call   0x65001e60
65006873:	test   esi,esi
65006875:	movsx  ax,BYTE PTR [esp+0xc]
6500687b:	mov    ecx,DWORD PTR [edi]
6500687d:	mov    WORD PTR [ecx+ebx*2],ax
65006881:	jl     0x6500689c
65006883:	mov    eax,DWORD PTR [edi]
65006885:	cmp    esi,DWORD PTR [eax-0x8]
65006888:	jg     0x6500689c
6500688a:	mov    DWORD PTR [eax-0xc],esi
6500688d:	mov    edx,DWORD PTR [edi]
6500688f:	mov    WORD PTR [edx+esi*2],0x0
65006895:	pop    esi
65006896:	mov    eax,edi
65006898:	pop    ebx
65006899:	ret    0x4
6500689c:	push   0x80070057
650068a1:	call   0x650010a0
650068a6:	int3   
650068a7:	int3   
650068a8:	int3   
650068a9:	int3   
650068aa:	int3   
650068ab:	int3   
650068ac:	int3   
650068ad:	int3   
650068ae:	int3   
650068af:	int3   
650068b0:	mov    eax,DWORD PTR [edi]
650068b2:	mov    edx,DWORD PTR [eax-0x8]
650068b5:	push   ebx
650068b6:	mov    ebx,DWORD PTR [eax-0xc]
650068b9:	push   esi
650068ba:	mov    ecx,0x1
650068bf:	sub    ecx,DWORD PTR [eax-0x4]
650068c2:	lea    esi,[ebx+0x1]
650068c5:	sub    edx,esi
650068c7:	or     ecx,edx
650068c9:	jge    0x650068d3
650068cb:	push   esi
650068cc:	mov    ecx,edi
650068ce:	call   0x65001e60
650068d3:	test   esi,esi
650068d5:	mov    eax,DWORD PTR [edi]
650068d7:	mov    WORD PTR [eax+ebx*2],0x5c
650068dd:	jl     0x650068f6
650068df:	mov    eax,DWORD PTR [edi]
650068e1:	cmp    esi,DWORD PTR [eax-0x8]
650068e4:	jg     0x650068f6
650068e6:	mov    DWORD PTR [eax-0xc],esi
650068e9:	mov    ecx,DWORD PTR [edi]
650068eb:	mov    WORD PTR [ecx+esi*2],0x0
650068f1:	pop    esi
650068f2:	mov    eax,edi
650068f4:	pop    ebx
650068f5:	ret    
650068f6:	push   0x80070057
650068fb:	call   0x650010a0
65006900:	int3   
65006901:	int3   
65006902:	int3   
65006903:	int3   
65006904:	int3   
65006905:	int3   
65006906:	int3   
65006907:	int3   
65006908:	int3   
65006909:	int3   
6500690a:	int3   
6500690b:	int3   
6500690c:	int3   
6500690d:	int3   
6500690e:	int3   
6500690f:	int3   
65006910:	push   esi
65006911:	push   edi
65006912:	mov    edi,DWORD PTR [ebx]
65006914:	mov    ecx,edi
65006916:	movzx  eax,WORD PTR [ecx]
65006919:	xor    edx,edx
6500691b:	test   ax,ax
6500691e:	je     0x65006975
65006920:	cmp    ax,0x7d
65006924:	jne    0x6500692e
65006926:	test   edx,edx
65006928:	jne    0x65006930
6500692a:	mov    edx,ecx
6500692c:	jmp    0x65006930
6500692e:	xor    edx,edx
65006930:	movzx  eax,WORD PTR [ecx+0x2]
65006934:	add    ecx,0x2
65006937:	test   ax,ax
6500693a:	jne    0x65006920
6500693c:	test   edx,edx
6500693e:	je     0x65006975
65006940:	mov    ecx,DWORD PTR [edi-0x8]
65006943:	sub    edx,edi
65006945:	sar    edx,1
65006947:	mov    eax,0x1
6500694c:	sub    eax,DWORD PTR [edi-0x4]
6500694f:	mov    esi,edx
65006951:	sub    ecx,esi
65006953:	or     eax,ecx
65006955:	jge    0x6500695f
65006957:	push   esi
65006958:	mov    ecx,ebx
6500695a:	call   0x65001e60
6500695f:	test   esi,esi
65006961:	jl     0x6500697a
65006963:	mov    eax,DWORD PTR [ebx]
65006965:	cmp    esi,DWORD PTR [eax-0x8]
65006968:	jg     0x6500697a
6500696a:	mov    DWORD PTR [eax-0xc],esi
6500696d:	mov    edx,DWORD PTR [ebx]
6500696f:	mov    WORD PTR [edx+esi*2],0x0
65006975:	pop    edi
65006976:	mov    eax,ebx
65006978:	pop    esi
65006979:	ret    
6500697a:	push   0x80070057
6500697f:	call   0x650010a0
65006984:	int3   
65006985:	int3   
65006986:	int3   
65006987:	int3   
65006988:	int3   
65006989:	int3   
6500698a:	int3   
6500698b:	int3   
6500698c:	int3   
6500698d:	int3   
6500698e:	int3   
6500698f:	int3   
65006990:	mov    ecx,DWORD PTR [ebx]
65006992:	mov    eax,ecx
65006994:	cmp    WORD PTR [eax],0x7b
65006998:	jne    0x650069a9
6500699a:	lea    ebx,[ebx+0x0]
650069a0:	add    eax,0x2
650069a3:	cmp    WORD PTR [eax],0x7b
650069a7:	je     0x650069a0
650069a9:	cmp    eax,ecx
650069ab:	push   esi
650069ac:	je     0x65006a08
650069ae:	sub    eax,ecx
650069b0:	sar    eax,1
650069b2:	push   edi
650069b3:	mov    edx,0x1
650069b8:	sub    edx,DWORD PTR [ecx-0x4]
650069bb:	mov    edi,eax
650069bd:	mov    eax,DWORD PTR [ecx-0xc]
650069c0:	mov    ecx,DWORD PTR [ecx-0x8]
650069c3:	sub    ecx,eax
650069c5:	or     edx,ecx
650069c7:	jge    0x650069d1
650069c9:	push   eax
650069ca:	mov    ecx,ebx
650069cc:	call   0x65001e60
650069d1:	mov    eax,DWORD PTR [ebx]
650069d3:	mov    esi,DWORD PTR [eax-0xc]
650069d6:	sub    esi,edi
650069d8:	lea    ecx,[esi+esi*1+0x2]
650069dc:	push   ecx
650069dd:	lea    edx,[eax+edi*2]
650069e0:	push   edx
650069e1:	push   ecx
650069e2:	push   eax
650069e3:	call   0x650122be
650069e8:	push   eax
650069e9:	call   0x65001ef0
650069ee:	add    esp,0x14
650069f1:	test   esi,esi
650069f3:	pop    edi
650069f4:	jl     0x65006a0c
650069f6:	mov    eax,DWORD PTR [ebx]
650069f8:	cmp    esi,DWORD PTR [eax-0x8]
650069fb:	jg     0x65006a0c
650069fd:	mov    DWORD PTR [eax-0xc],esi
65006a00:	mov    eax,DWORD PTR [ebx]
65006a02:	mov    WORD PTR [eax+esi*2],0x0
65006a08:	mov    eax,ebx
65006a0a:	pop    esi
65006a0b:	ret    
65006a0c:	push   0x80070057
65006a11:	call   0x650010a0
65006a16:	int3   
65006a17:	int3   
65006a18:	int3   
65006a19:	int3   
65006a1a:	int3   
65006a1b:	int3   
65006a1c:	int3   
65006a1d:	int3   
65006a1e:	int3   
65006a1f:	int3   
65006a20:	push   esi
65006a21:	mov    esi,DWORD PTR [esp+0x8]
65006a25:	test   esi,esi
65006a27:	jne    0x65006a36
65006a29:	xor    eax,eax
65006a2b:	push   eax
65006a2c:	push   esi
65006a2d:	call   0x650029f0
65006a32:	pop    esi
65006a33:	ret    0x4
65006a36:	mov    eax,esi
65006a38:	push   edi
65006a39:	lea    edi,[eax+0x2]
65006a3c:	lea    esp,[esp+0x0]
65006a40:	mov    dx,WORD PTR [eax]
65006a43:	add    eax,0x2
65006a46:	test   dx,dx
65006a49:	jne    0x65006a40
65006a4b:	sub    eax,edi
65006a4d:	pop    edi
65006a4e:	sar    eax,1
65006a50:	push   eax
65006a51:	push   esi
65006a52:	call   0x650029f0
65006a57:	pop    esi
65006a58:	ret    0x4
65006a5b:	int3   
65006a5c:	int3   
65006a5d:	int3   
65006a5e:	int3   
65006a5f:	int3   
65006a60:	push   ebp
65006a61:	mov    ebp,esp
65006a63:	and    esp,0xfffffff8
65006a66:	push   0xffffffff
65006a68:	push   0x65022b21
65006a6d:	mov    eax,fs:0x0
65006a73:	push   eax
65006a74:	sub    esp,0xd0
65006a7a:	mov    eax,ds:0x6502c09c
65006a7f:	xor    eax,esp
65006a81:	mov    DWORD PTR [esp+0xc8],eax
65006a88:	push   ebx
65006a89:	push   esi
65006a8a:	push   edi
65006a8b:	mov    eax,ds:0x6502c09c
65006a90:	xor    eax,esp
65006a92:	push   eax
65006a93:	lea    eax,[esp+0xe0]
65006a9a:	mov    fs:0x0,eax
65006aa0:	mov    eax,ds:0x65030290
65006aa5:	mov    esi,DWORD PTR [ebp+0x8]
65006aa8:	xor    ebx,ebx
65006aaa:	cmp    eax,ebx
65006aac:	mov    DWORD PTR [esp+0x28],esi
65006ab0:	jne    0x65006ac0
65006ab2:	push   ebx
65006ab3:	push   ebx
65006ab4:	push   ebx
65006ab5:	call   DWORD PTR ds:0x650240a4
65006abb:	mov    ds:0x65030290,eax
65006ac0:	push   0xffffffff
65006ac2:	push   eax
65006ac3:	call   DWORD PTR ds:0x65024054
65006ac9:	test   eax,eax
65006acb:	je     0x65006ad4
65006acd:	mov    eax,esi
65006acf:	jmp    0x65006d1f
65006ad4:	mov    eax,DWORD PTR [ebp+0xc]
65006ad7:	push   eax
65006ad8:	mov    edi,0xf
65006add:	push   esi
65006ade:	lea    ecx,[esp+0xa8]
65006ae5:	mov    DWORD PTR [esp+0xc0],edi
65006aec:	mov    DWORD PTR [esp+0xbc],ebx
65006af3:	mov    BYTE PTR [esp+0xac],bl
65006afa:	call   0x650018c0
65006aff:	lea    ecx,[esp+0xa0]
65006b06:	push   ecx
65006b07:	lea    edx,[esp+0x18]
65006b0b:	push   edx
65006b0c:	mov    DWORD PTR [esp+0xf0],ebx
65006b13:	call   0x65007430
65006b18:	mov    ecx,eax
65006b1a:	call   0x65007d30
65006b1f:	call   0x65007430
65006b24:	mov    esi,DWORD PTR [esp+0x14]
65006b28:	cmp    esi,ebx
65006b2a:	mov    ecx,DWORD PTR [eax+0x4]
65006b2d:	mov    DWORD PTR [esp+0x20],ecx
65006b31:	je     0x65006b37
65006b33:	cmp    esi,eax
65006b35:	je     0x65006b3c
65006b37:	call   0x65012443
65006b3c:	mov    edx,DWORD PTR [esp+0x20]
65006b40:	cmp    DWORD PTR [esp+0x18],edx
65006b44:	jne    0x65006c48
65006b4a:	sub    esp,0x1c
65006b4d:	mov    ecx,esp
65006b4f:	mov    DWORD PTR [esp+0x48],esp
65006b53:	push   0xffffffff
65006b55:	push   ebx
65006b56:	lea    eax,[esp+0xc4]
65006b5d:	mov    DWORD PTR [ecx+0x18],edi
65006b60:	mov    DWORD PTR [ecx+0x14],ebx
65006b63:	push   eax
65006b64:	mov    BYTE PTR [ecx+0x4],bl
65006b67:	call   0x650017e0
65006b6c:	lea    ecx,[esp+0xd8]
65006b73:	push   ecx
65006b74:	call   0x650074c0
65006b79:	add    esp,0x4
65006b7c:	mov    ecx,esp
65006b7e:	mov    BYTE PTR [esp+0x104],0x1
65006b86:	mov    DWORD PTR [esp+0x48],esp
65006b8a:	push   0xffffffff
65006b8c:	push   ebx
65006b8d:	lea    edx,[esp+0xe0]
65006b94:	mov    DWORD PTR [ecx+0x18],edi
65006b97:	mov    DWORD PTR [ecx+0x14],ebx
65006b9a:	push   edx
65006b9b:	mov    BYTE PTR [ecx+0x4],bl
65006b9e:	call   0x650017e0
65006ba3:	sub    esp,0x1c
65006ba6:	mov    ecx,esp
65006ba8:	mov    BYTE PTR [esp+0x120],0x2
65006bb0:	mov    DWORD PTR [esp+0x54],esp
65006bb4:	push   0xffffffff
65006bb6:	push   ebx
65006bb7:	lea    eax,[esp+0xe0]
65006bbe:	mov    DWORD PTR [ecx+0x18],edi
65006bc1:	mov    DWORD PTR [ecx+0x14],ebx
65006bc4:	push   eax
65006bc5:	mov    BYTE PTR [ecx+0x4],bl
65006bc8:	call   0x650017e0
65006bcd:	lea    ecx,[esp+0xa0]
65006bd4:	push   ecx
65006bd5:	mov    BYTE PTR [esp+0x124],0x1
65006bdd:	call   0x65009ef0
65006be2:	add    esp,0x3c
65006be5:	push   eax
65006be6:	lea    ecx,[esp+0x34]
65006bea:	mov    BYTE PTR [esp+0xec],0x3
65006bf2:	call   0x65009f90
65006bf7:	lea    edx,[esp+0x30]
65006bfb:	push   edx
65006bfc:	lea    eax,[esp+0x20]
65006c00:	push   eax
65006c01:	mov    BYTE PTR [esp+0xf0],0x4
65006c09:	call   0x65007430
65006c0e:	mov    ecx,eax
65006c10:	call   0x65007ba0
65006c15:	lea    ecx,[esp+0x30]
65006c19:	call   0x6500f940
65006c1e:	lea    ecx,[esp+0x68]
65006c22:	call   0x6500f940
65006c27:	mov    BYTE PTR [esp+0xe8],bl
65006c2e:	cmp    DWORD PTR [esp+0xd4],0x10
65006c36:	jb     0x65006c48
65006c38:	mov    ecx,DWORD PTR [esp+0xc0]
65006c3f:	push   ecx
65006c40:	call   0x650120d2
65006c45:	add    esp,0x4
65006c48:	mov    edx,DWORD PTR [ebp+0x10]
65006c4b:	movzx  eax,BYTE PTR [edx]
65006c4e:	cmp    eax,0x100
65006c53:	jge    0x65006c77
65006c55:	lea    ecx,[esp+0xa0]
65006c5c:	push   ecx
65006c5d:	lea    edx,[esp+0x20]
65006c61:	push   edx
65006c62:	call   0x65007430
65006c67:	mov    ecx,eax
65006c69:	call   0x65007d30
65006c6e:	mov    esi,DWORD PTR [eax]
65006c70:	mov    eax,DWORD PTR [eax+0x4]
65006c73:	mov    DWORD PTR [esp+0x18],eax
65006c77:	call   0x65007430
65006c7c:	cmp    esi,ebx
65006c7e:	mov    ecx,DWORD PTR [eax+0x4]
65006c81:	mov    DWORD PTR [esp+0x20],ecx
65006c85:	je     0x65006c8b
65006c87:	cmp    esi,eax
65006c89:	je     0x65006c90
65006c8b:	call   0x65012443
65006c90:	mov    edi,DWORD PTR [esp+0x18]
65006c94:	cmp    edi,DWORD PTR [esp+0x20]
65006c98:	je     0x65006cbd
65006c9a:	cmp    esi,ebx
65006c9c:	jne    0x65006ca3
65006c9e:	call   0x65012443
65006ca3:	cmp    edi,DWORD PTR [esi+0x4]
65006ca6:	jne    0x65006cad
65006ca8:	call   0x65012443
65006cad:	cmp    DWORD PTR [edi+0x40],0x10
65006cb1:	jb     0x65006cb8
65006cb3:	mov    edi,DWORD PTR [edi+0x2c]
65006cb6:	jmp    0x65006cc1
65006cb8:	add    edi,0x2c
65006cbb:	jmp    0x65006cc1
65006cbd:	mov    edi,DWORD PTR [esp+0x28]
65006cc1:	cmp    DWORD PTR ds:0x6502e060,ebx
65006cc7:	jne    0x65006ce5
65006cc9:	push   0x65026640
65006cce:	push   0x65026650
65006cd3:	call   DWORD PTR ds:0x6502406c
65006cd9:	push   eax
65006cda:	call   DWORD PTR ds:0x6502408c
65006ce0:	mov    ds:0x6502e060,eax
65006ce5:	mov    eax,ds:0x65030290
65006cea:	cmp    eax,ebx
65006cec:	jne    0x65006cfc
65006cee:	push   ebx
65006cef:	push   ebx
65006cf0:	push   ebx
65006cf1:	call   DWORD PTR ds:0x650240a4
65006cf7:	mov    ds:0x65030290,eax
65006cfc:	push   eax
65006cfd:	call   DWORD PTR ds:0x6502e060
65006d03:	cmp    DWORD PTR [esp+0xb8],0x10
65006d0b:	jb     0x65006d1d
65006d0d:	mov    edx,DWORD PTR [esp+0xa4]
65006d14:	push   edx
65006d15:	call   0x650120d2
65006d1a:	add    esp,0x4
65006d1d:	mov    eax,edi
65006d1f:	mov    ecx,DWORD PTR [esp+0xe0]
65006d26:	mov    DWORD PTR fs:0x0,ecx
65006d2d:	pop    ecx
65006d2e:	pop    edi
65006d2f:	pop    esi
65006d30:	pop    ebx
65006d31:	mov    ecx,DWORD PTR [esp+0xc8]
65006d38:	xor    ecx,esp
65006d3a:	call   0x6501292c
65006d3f:	mov    esp,ebp
65006d41:	pop    ebp
65006d42:	ret    
65006d43:	int3   
65006d44:	int3   
65006d45:	int3   
65006d46:	int3   
65006d47:	int3   
65006d48:	int3   
65006d49:	int3   
65006d4a:	int3   
65006d4b:	int3   
65006d4c:	int3   
65006d4d:	int3   
65006d4e:	int3   
65006d4f:	int3   
65006d50:	push   ebp
65006d51:	mov    ebp,esp
65006d53:	and    esp,0xfffffff8
65006d56:	push   0xffffffff
65006d58:	push   0x65022ac1
65006d5d:	mov    eax,fs:0x0
65006d63:	push   eax
65006d64:	sub    esp,0xd0
65006d6a:	mov    eax,ds:0x6502c09c
65006d6f:	xor    eax,esp
65006d71:	mov    DWORD PTR [esp+0xc8],eax
65006d78:	push   ebx
65006d79:	push   esi
65006d7a:	push   edi
65006d7b:	mov    eax,ds:0x6502c09c
65006d80:	xor    eax,esp
65006d82:	push   eax
65006d83:	lea    eax,[esp+0xe0]
65006d8a:	mov    fs:0x0,eax
65006d90:	mov    eax,ds:0x65030290
65006d95:	mov    esi,DWORD PTR [ebp+0x8]
65006d98:	xor    ebx,ebx
65006d9a:	cmp    eax,ebx
65006d9c:	mov    DWORD PTR [esp+0x28],esi
65006da0:	jne    0x65006db0
65006da2:	push   ebx
65006da3:	push   ebx
65006da4:	push   ebx
65006da5:	call   DWORD PTR ds:0x650240a4
65006dab:	mov    ds:0x65030290,eax
65006db0:	push   0xffffffff
65006db2:	push   eax
65006db3:	call   DWORD PTR ds:0x65024054
65006db9:	test   eax,eax
65006dbb:	je     0x65006dc4
65006dbd:	mov    eax,esi
65006dbf:	jmp    0x65007013
65006dc4:	mov    eax,DWORD PTR [ebp+0xc]
65006dc7:	push   eax
65006dc8:	mov    edi,0x7
65006dcd:	push   esi
65006dce:	lea    ecx,[esp+0xa8]
65006dd5:	mov    DWORD PTR [esp+0xc0],edi
65006ddc:	mov    DWORD PTR [esp+0xbc],ebx
65006de3:	mov    WORD PTR [esp+0xac],bx
65006deb:	call   0x65008850
65006df0:	lea    ecx,[esp+0xa0]
65006df7:	push   ecx
65006df8:	lea    edx,[esp+0x18]
65006dfc:	push   edx
65006dfd:	mov    DWORD PTR [esp+0xf0],ebx
65006e04:	call   0x65007590
65006e09:	mov    ecx,eax
65006e0b:	call   0x65007ef0
65006e10:	call   0x65007590
65006e15:	mov    esi,DWORD PTR [esp+0x14]
65006e19:	cmp    esi,ebx
65006e1b:	mov    ecx,DWORD PTR [eax+0x4]
65006e1e:	mov    DWORD PTR [esp+0x20],ecx
65006e22:	je     0x65006e28
65006e24:	cmp    esi,eax
65006e26:	je     0x65006e2d
65006e28:	call   0x65012443
65006e2d:	mov    edx,DWORD PTR [esp+0x20]
65006e31:	cmp    DWORD PTR [esp+0x18],edx
65006e35:	jne    0x65006f3c
65006e3b:	sub    esp,0x1c
65006e3e:	mov    ecx,esp
65006e40:	mov    DWORD PTR [esp+0x48],esp
65006e44:	push   0xffffffff
65006e46:	push   ebx
65006e47:	lea    eax,[esp+0xc4]
65006e4e:	mov    DWORD PTR [ecx+0x18],edi
65006e51:	mov    DWORD PTR [ecx+0x14],ebx
65006e54:	push   eax
65006e55:	mov    WORD PTR [ecx+0x4],bx
65006e59:	call   0x65008760
65006e5e:	lea    ecx,[esp+0xd8]
65006e65:	push   ecx
65006e66:	call   0x65007620
65006e6b:	add    esp,0x4
65006e6e:	mov    ecx,esp
65006e70:	mov    BYTE PTR [esp+0x104],0x1
65006e78:	mov    DWORD PTR [esp+0x48],esp
65006e7c:	push   0xffffffff
65006e7e:	push   ebx
65006e7f:	lea    edx,[esp+0xe0]
65006e86:	mov    DWORD PTR [ecx+0x18],edi
65006e89:	mov    DWORD PTR [ecx+0x14],ebx
65006e8c:	push   edx
65006e8d:	mov    WORD PTR [ecx+0x4],bx
65006e91:	call   0x65008760
65006e96:	sub    esp,0x1c
65006e99:	mov    ecx,esp
65006e9b:	mov    BYTE PTR [esp+0x120],0x2
65006ea3:	mov    DWORD PTR [esp+0x54],esp
65006ea7:	push   0xffffffff
65006ea9:	push   ebx
65006eaa:	lea    eax,[esp+0xe0]
65006eb1:	mov    DWORD PTR [ecx+0x18],edi
65006eb4:	mov    DWORD PTR [ecx+0x14],ebx
65006eb7:	push   eax
65006eb8:	mov    WORD PTR [ecx+0x4],bx
65006ebc:	call   0x65008760
65006ec1:	lea    ecx,[esp+0xa0]
65006ec8:	push   ecx
65006ec9:	mov    BYTE PTR [esp+0x124],0x1
65006ed1:	call   0x6500a010
65006ed6:	add    esp,0x3c
65006ed9:	push   eax
65006eda:	lea    ecx,[esp+0x34]
65006ede:	mov    BYTE PTR [esp+0xec],0x3
65006ee6:	call   0x6500a0b0
65006eeb:	lea    edx,[esp+0x30]
65006eef:	push   edx
65006ef0:	lea    eax,[esp+0x20]
65006ef4:	push   eax
65006ef5:	mov    BYTE PTR [esp+0xf0],0x4
65006efd:	call   0x65007590
65006f02:	mov    ecx,eax
65006f04:	call   0x65007de0
65006f09:	lea    ecx,[esp+0x30]
65006f0d:	call   0x65007300
65006f12:	lea    ecx,[esp+0x68]
65006f16:	call   0x65007300
65006f1b:	mov    BYTE PTR [esp+0xe8],bl
65006f22:	cmp    DWORD PTR [esp+0xd4],0x8
65006f2a:	jb     0x65006f3c
65006f2c:	mov    ecx,DWORD PTR [esp+0xc0]
65006f33:	push   ecx
65006f34:	call   0x650120d2
65006f39:	add    esp,0x4
65006f3c:	mov    edx,DWORD PTR [ebp+0x10]
65006f3f:	movzx  eax,BYTE PTR [edx]
65006f42:	cmp    eax,0x100
65006f47:	jge    0x65006f6b
65006f49:	lea    ecx,[esp+0xa0]
65006f50:	push   ecx
65006f51:	lea    edx,[esp+0x20]
65006f55:	push   edx
65006f56:	call   0x65007590
65006f5b:	mov    ecx,eax
65006f5d:	call   0x65007ef0
65006f62:	mov    esi,DWORD PTR [eax]
65006f64:	mov    eax,DWORD PTR [eax+0x4]
65006f67:	mov    DWORD PTR [esp+0x18],eax
65006f6b:	call   0x65007590
65006f70:	cmp    esi,ebx
65006f72:	mov    ecx,DWORD PTR [eax+0x4]
65006f75:	mov    DWORD PTR [esp+0x20],ecx
65006f79:	je     0x65006f7f
65006f7b:	cmp    esi,eax
65006f7d:	je     0x65006f84
65006f7f:	call   0x65012443
65006f84:	mov    edi,DWORD PTR [esp+0x18]
65006f88:	cmp    edi,DWORD PTR [esp+0x20]
65006f8c:	je     0x65006fb1
65006f8e:	cmp    esi,ebx
65006f90:	jne    0x65006f97
65006f92:	call   0x65012443
65006f97:	cmp    edi,DWORD PTR [esi+0x4]
65006f9a:	jne    0x65006fa1
65006f9c:	call   0x65012443
65006fa1:	cmp    DWORD PTR [edi+0x40],0x8
65006fa5:	jb     0x65006fac
65006fa7:	mov    edi,DWORD PTR [edi+0x2c]
65006faa:	jmp    0x65006fb5
65006fac:	add    edi,0x2c
65006faf:	jmp    0x65006fb5
65006fb1:	mov    edi,DWORD PTR [esp+0x28]
65006fb5:	cmp    DWORD PTR ds:0x6502e060,ebx
65006fbb:	jne    0x65006fd9
65006fbd:	push   0x65026640
65006fc2:	push   0x65026650
65006fc7:	call   DWORD PTR ds:0x6502406c
65006fcd:	push   eax
65006fce:	call   DWORD PTR ds:0x6502408c
65006fd4:	mov    ds:0x6502e060,eax
65006fd9:	mov    eax,ds:0x65030290
65006fde:	cmp    eax,ebx
65006fe0:	jne    0x65006ff0
65006fe2:	push   ebx
65006fe3:	push   ebx
65006fe4:	push   ebx
65006fe5:	call   DWORD PTR ds:0x650240a4
65006feb:	mov    ds:0x65030290,eax
65006ff0:	push   eax
65006ff1:	call   DWORD PTR ds:0x6502e060
65006ff7:	cmp    DWORD PTR [esp+0xb8],0x8
65006fff:	jb     0x65007011
65007001:	mov    edx,DWORD PTR [esp+0xa4]
65007008:	push   edx
65007009:	call   0x650120d2
6500700e:	add    esp,0x4
65007011:	mov    eax,edi
65007013:	mov    ecx,DWORD PTR [esp+0xe0]
6500701a:	mov    DWORD PTR fs:0x0,ecx
65007021:	pop    ecx
65007022:	pop    edi
65007023:	pop    esi
65007024:	pop    ebx
65007025:	mov    ecx,DWORD PTR [esp+0xc8]
6500702c:	xor    ecx,esp
6500702e:	call   0x6501292c
65007033:	mov    esp,ebp
65007035:	pop    ebp
65007036:	ret    
65007037:	int3   
65007038:	int3   
65007039:	int3   
6500703a:	int3   
6500703b:	int3   
6500703c:	int3   
6500703d:	int3   
6500703e:	int3   
6500703f:	int3   
65007040:	push   ebp
65007041:	mov    ebp,esp
65007043:	push   0xffffffff
65007045:	push   0x65022d20
6500704a:	mov    eax,fs:0x0
65007050:	push   eax
65007051:	push   ecx
65007052:	push   ebx
65007053:	push   esi
65007054:	push   edi
65007055:	mov    eax,ds:0x6502c09c
6500705a:	xor    eax,ebp
6500705c:	push   eax
6500705d:	lea    eax,[ebp-0xc]
65007060:	mov    fs:0x0,eax
65007066:	mov    DWORD PTR [ebp-0x10],esp
65007069:	mov    esi,DWORD PTR [ebp+0x8]
6500706c:	call   0x65008420
65007071:	mov    DWORD PTR [esi+0x4],eax
65007074:	mov    BYTE PTR [eax+0x29],0x1
65007078:	mov    eax,DWORD PTR [esi+0x4]
6500707b:	mov    DWORD PTR [eax+0x4],eax
6500707e:	mov    eax,DWORD PTR [esi+0x4]
65007081:	mov    DWORD PTR [eax],eax
65007083:	mov    eax,DWORD PTR [esi+0x4]
65007086:	mov    DWORD PTR [eax+0x8],eax
65007089:	mov    ebx,0x650303e0
6500708e:	mov    eax,esi
65007090:	mov    DWORD PTR [esi+0x8],0x0
65007097:	mov    DWORD PTR [ebp-0x4],0x0
6500709e:	call   0x65007800
650070a3:	mov    eax,esi
650070a5:	mov    ecx,DWORD PTR [ebp-0xc]
650070a8:	mov    DWORD PTR fs:0x0,ecx
650070af:	pop    ecx
650070b0:	pop    edi
650070b1:	pop    esi
650070b2:	pop    ebx
650070b3:	mov    esp,ebp
650070b5:	pop    ebp
650070b6:	ret    0x4
650070b9:	mov    eax,DWORD PTR [ebp+0x8]
650070bc:	call   0x65007af0
650070c1:	push   0x0
650070c3:	push   0x0
650070c5:	call   0x650124d6
650070ca:	int3   
650070cb:	int3   
650070cc:	int3   
650070cd:	int3   
650070ce:	int3   
650070cf:	int3   
650070d0:	push   ebp
650070d1:	mov    ebp,esp
650070d3:	and    esp,0xfffffff8
650070d6:	sub    esp,0x8
650070d9:	push   ebx
650070da:	push   edi
650070db:	mov    ebx,eax
650070dd:	mov    edi,ecx
650070df:	cmp    edi,ebx
650070e1:	je     0x650070fd
650070e3:	mov    eax,DWORD PTR [edi+0x4]
650070e6:	mov    ecx,DWORD PTR [eax]
650070e8:	push   eax
650070e9:	push   edi
650070ea:	push   ecx
650070eb:	push   edi
650070ec:	lea    eax,[esp+0x18]
650070f0:	push   eax
650070f1:	call   0x650076f0
650070f6:	mov    eax,edi
650070f8:	call   0x65007800
650070fd:	mov    eax,edi
650070ff:	pop    edi
65007100:	pop    ebx
65007101:	mov    esp,ebp
65007103:	pop    ebp
65007104:	ret    
65007105:	int3   
65007106:	int3   
65007107:	int3   
65007108:	int3   
65007109:	int3   
6500710a:	int3   
6500710b:	int3   
6500710c:	int3   
6500710d:	int3   
6500710e:	int3   
6500710f:	int3   
65007110:	push   ebp
65007111:	mov    ebp,esp
65007113:	and    esp,0xfffffff8
65007116:	sub    esp,0x1c
65007119:	mov    ecx,DWORD PTR [ebp+0x8]
6500711c:	mov    eax,DWORD PTR [ecx+0x4]
6500711f:	push   ebx
65007120:	push   esi
65007121:	mov    esi,DWORD PTR [eax+0x4]
65007124:	cmp    BYTE PTR [esi+0x29],0x0
65007128:	mov    ebx,eax
6500712a:	mov    al,0x1
6500712c:	push   edi
6500712d:	mov    BYTE PTR [esp+0x10],al
65007131:	jne    0x650071d2
65007137:	mov    edx,DWORD PTR [ebp+0x10]
6500713a:	mov    eax,DWORD PTR [edx+0x14]
6500713d:	mov    ecx,DWORD PTR [edx+0x18]
65007140:	mov    DWORD PTR [esp+0x18],eax
65007144:	mov    DWORD PTR [esp+0x14],eax
65007148:	mov    DWORD PTR [esp+0x1c],ecx
6500714c:	jmp    0x65007157
6500714e:	mov    edi,edi
65007150:	mov    edx,DWORD PTR [ebp+0x10]
65007153:	mov    eax,DWORD PTR [esp+0x14]
65007157:	cmp    DWORD PTR [esi+0x24],0x10
6500715b:	mov    ebx,DWORD PTR [esi+0x20]
6500715e:	mov    DWORD PTR [esp+0x20],esi
65007162:	jb     0x65007169
65007164:	mov    ecx,DWORD PTR [esi+0x10]
65007167:	jmp    0x6500716c
65007169:	lea    ecx,[esi+0x10]
6500716c:	mov    edi,DWORD PTR [esp+0x18]
65007170:	cmp    eax,edi
65007172:	mov    DWORD PTR [esp+0xc],ecx
65007176:	jae    0x6500717a
65007178:	mov    edi,eax
6500717a:	cmp    edi,ebx
6500717c:	mov    ecx,edi
6500717e:	jb     0x65007182
65007180:	mov    ecx,ebx
65007182:	cmp    DWORD PTR [esp+0x1c],0x10
65007187:	lea    eax,[edx+0x4]
6500718a:	jb     0x6500718e
6500718c:	mov    eax,DWORD PTR [eax]
6500718e:	mov    edx,DWORD PTR [esp+0xc]
65007192:	push   ecx
65007193:	push   edx
65007194:	push   eax
65007195:	call   0x65002c80
6500719a:	add    esp,0xc
6500719d:	test   eax,eax
6500719f:	jne    0x650071b3
650071a1:	cmp    edi,ebx
650071a3:	jae    0x650071aa
650071a5:	or     eax,0xffffffff
650071a8:	jmp    0x650071b1
650071aa:	xor    eax,eax
650071ac:	cmp    edi,ebx
650071ae:	setne  al
650071b1:	test   eax,eax
650071b3:	setl   al
650071b6:	test   al,al
650071b8:	mov    BYTE PTR [esp+0x10],al
650071bc:	je     0x650071c2
650071be:	mov    esi,DWORD PTR [esi]
650071c0:	jmp    0x650071c5
650071c2:	mov    esi,DWORD PTR [esi+0x8]
650071c5:	cmp    BYTE PTR [esi+0x29],0x0
650071c9:	je     0x65007150
650071cb:	mov    ebx,DWORD PTR [esp+0x20]
650071cf:	mov    ecx,DWORD PTR [ebp+0x8]
650071d2:	test   al,al
650071d4:	mov    esi,ebx
650071d6:	mov    DWORD PTR [esp+0x24],esi
650071da:	mov    DWORD PTR [esp+0x20],ecx
650071de:	je     0x65007223
650071e0:	mov    eax,DWORD PTR [ecx+0x4]
650071e3:	cmp    ebx,DWORD PTR [eax]
650071e5:	jne    0x65007216
650071e7:	mov    edx,DWORD PTR [ebp+0x10]
650071ea:	push   edx
650071eb:	push   0x1
650071ed:	lea    eax,[esp+0x28]
650071f1:	push   eax
650071f2:	push   ecx
650071f3:	mov    ecx,ebx
650071f5:	call   0x65007870
650071fa:	mov    edx,DWORD PTR [eax]
650071fc:	mov    ecx,DWORD PTR [ebp+0xc]
650071ff:	mov    eax,DWORD PTR [eax+0x4]
65007202:	mov    DWORD PTR [ecx+0x4],eax
65007205:	mov    DWORD PTR [ecx],edx
65007207:	mov    BYTE PTR [ecx+0x8],0x1
6500720b:	mov    eax,ecx
6500720d:	pop    edi
6500720e:	pop    esi
6500720f:	pop    ebx
65007210:	mov    esp,ebp
65007212:	pop    ebp
65007213:	ret    0xc
65007216:	lea    esi,[esp+0x20]
6500721a:	call   0x65008d10
6500721f:	mov    esi,DWORD PTR [esp+0x24]
65007223:	mov    edi,DWORD PTR [ebp+0x10]
65007226:	cmp    DWORD PTR [edi+0x18],0x10
6500722a:	mov    edx,DWORD PTR [edi+0x14]
6500722d:	lea    ecx,[esi+0xc]
65007230:	jb     0x65007237
65007232:	mov    eax,DWORD PTR [edi+0x4]
65007235:	jmp    0x6500723a
65007237:	lea    eax,[edi+0x4]
6500723a:	push   edx
6500723b:	mov    edx,DWORD PTR [ecx+0x14]
6500723e:	push   eax
6500723f:	push   edx
65007240:	push   0x0
65007242:	call   0x650073c0
65007247:	test   eax,eax
65007249:	jge    0x6500727d
6500724b:	mov    eax,DWORD PTR [esp+0x10]
6500724f:	mov    edx,DWORD PTR [ebp+0x8]
65007252:	push   edi
65007253:	push   eax
65007254:	lea    ecx,[esp+0x28]
65007258:	push   ecx
65007259:	push   edx
6500725a:	mov    ecx,ebx
6500725c:	call   0x65007870
65007261:	mov    edx,DWORD PTR [eax]
65007263:	mov    ecx,DWORD PTR [ebp+0xc]
65007266:	mov    eax,DWORD PTR [eax+0x4]
65007269:	mov    DWORD PTR [ecx+0x4],eax
6500726c:	mov    DWORD PTR [ecx],edx
6500726e:	mov    BYTE PTR [ecx+0x8],0x1
65007272:	mov    eax,ecx
65007274:	pop    edi
65007275:	pop    esi
65007276:	pop    ebx
65007277:	mov    esp,ebp
65007279:	pop    ebp
6500727a:	ret    0xc
6500727d:	mov    eax,DWORD PTR [ebp+0xc]
65007280:	mov    ecx,DWORD PTR [esp+0x20]
65007284:	pop    edi
65007285:	mov    DWORD PTR [eax+0x4],esi
65007288:	pop    esi
65007289:	mov    DWORD PTR [eax],ecx
6500728b:	mov    BYTE PTR [eax+0x8],0x0
6500728f:	pop    ebx
65007290:	mov    esp,ebp
65007292:	pop    ebp
65007293:	ret    0xc
65007296:	int3   
65007297:	int3   
65007298:	int3   
65007299:	int3   
6500729a:	int3   
6500729b:	int3   
6500729c:	int3   
6500729d:	int3   
6500729e:	int3   
6500729f:	int3   
650072a0:	push   ebp
650072a1:	mov    ebp,esp
650072a3:	and    esp,0xfffffff8
650072a6:	sub    esp,0x8
650072a9:	push   ebx
650072aa:	push   edi
650072ab:	mov    ecx,esi
650072ad:	mov    edi,eax
650072af:	call   0x65008c70
650072b4:	test   esi,esi
650072b6:	mov    ebx,eax
650072b8:	jne    0x650072bf
650072ba:	call   0x65012443
650072bf:	mov    ecx,edi
650072c1:	mov    eax,esi
650072c3:	call   0x65008be0
650072c8:	test   esi,esi
650072ca:	mov    edi,eax
650072cc:	jne    0x650072d3
650072ce:	call   0x65012443
650072d3:	mov    DWORD PTR [esp+0xc],0x0
650072db:	mov    eax,DWORD PTR [esp+0xc]
650072df:	push   eax
650072e0:	push   ebx
650072e1:	push   esi
650072e2:	push   edi
650072e3:	push   esi
650072e4:	lea    ebx,[esp+0x20]
650072e8:	call   0x6500a3b0
650072ed:	mov    eax,DWORD PTR [esp+0x20]
650072f1:	add    esp,0x14
650072f4:	pop    edi
650072f5:	pop    ebx
650072f6:	mov    esp,ebp
650072f8:	pop    ebp
650072f9:	ret    
650072fa:	int3   
650072fb:	int3   
650072fc:	int3   
650072fd:	int3   
650072fe:	int3   
650072ff:	int3   
65007300:	push   esi
65007301:	mov    esi,ecx
65007303:	cmp    DWORD PTR [esi+0x34],0x8
65007307:	push   edi
65007308:	jb     0x65007316
6500730a:	mov    eax,DWORD PTR [esi+0x20]
6500730d:	push   eax
6500730e:	call   0x650120d2
65007313:	add    esp,0x4
65007316:	xor    edi,edi
65007318:	mov    DWORD PTR [esi+0x34],0x7
6500731f:	mov    DWORD PTR [esi+0x30],edi
65007322:	mov    WORD PTR [esi+0x20],di
65007326:	cmp    DWORD PTR [esi+0x18],0x8
6500732a:	jb     0x65007338
6500732c:	mov    ecx,DWORD PTR [esi+0x4]
6500732f:	push   ecx
65007330:	call   0x650120d2
65007335:	add    esp,0x4
65007338:	mov    DWORD PTR [esi+0x14],edi
6500733b:	mov    DWORD PTR [esi+0x18],0x7
65007342:	mov    WORD PTR [esi+0x4],di
65007346:	pop    edi
65007347:	pop    esi
65007348:	ret    
65007349:	int3   
6500734a:	int3   
6500734b:	int3   
6500734c:	int3   
6500734d:	int3   
6500734e:	int3   
6500734f:	int3   
65007350:	mov    ecx,DWORD PTR [eax]
65007352:	push   esi
65007353:	mov    esi,DWORD PTR [edi]
65007355:	lea    eax,[ecx-0x10]
65007358:	sub    esi,0x10
6500735b:	cmp    eax,esi
6500735d:	je     0x650073ad
6500735f:	cmp    DWORD PTR [esi+0xc],0x0
65007363:	push   ebx
65007364:	lea    ebx,[esi+0xc]
65007367:	jl     0x6500739c
65007369:	mov    edx,DWORD PTR [eax]
6500736b:	cmp    edx,DWORD PTR [esi]
6500736d:	jne    0x6500739c
6500736f:	push   ebp
65007370:	push   eax
65007371:	call   0x650028b0
65007376:	mov    ebp,eax
65007378:	add    esp,0x4
6500737b:	or     eax,0xffffffff
6500737e:	lock xadd DWORD PTR [ebx],eax
65007382:	dec    eax
65007383:	test   eax,eax
65007385:	jg     0x65007391
65007387:	mov    ecx,DWORD PTR [esi]
65007389:	mov    edx,DWORD PTR [ecx]
6500738b:	mov    eax,DWORD PTR [edx+0x4]
6500738e:	push   esi
6500738f:	call   eax
65007391:	add    ebp,0x10
65007394:	mov    DWORD PTR [edi],ebp
65007396:	pop    ebp
65007397:	pop    ebx
65007398:	mov    eax,edi
6500739a:	pop    esi
6500739b:	ret    
6500739c:	mov    edx,DWORD PTR [ecx-0xc]
6500739f:	push   edx
650073a0:	push   ecx
650073a1:	mov    ecx,edi
650073a3:	call   0x65002af0
650073a8:	pop    ebx
650073a9:	mov    eax,edi
650073ab:	pop    esi
650073ac:	ret    
650073ad:	mov    eax,edi
650073af:	pop    esi
650073b0:	ret    
650073b1:	int3   
650073b2:	int3   
650073b3:	int3   
650073b4:	int3   
650073b5:	int3   
650073b6:	int3   
650073b7:	int3   
650073b8:	int3   
650073b9:	int3   
650073ba:	int3   
650073bb:	int3   
650073bc:	int3   
650073bd:	int3   
650073be:	int3   
650073bf:	int3   
650073c0:	push   ebx
650073c1:	push   ebp
650073c2:	mov    ebp,DWORD PTR [esp+0xc]
650073c6:	push   esi
650073c7:	push   edi
650073c8:	mov    edi,ecx
650073ca:	cmp    DWORD PTR [edi+0x14],ebp
650073cd:	jae    0x650073d4
650073cf:	call   0x6501208e
650073d4:	mov    eax,DWORD PTR [edi+0x14]
650073d7:	mov    esi,DWORD PTR [esp+0x18]
650073db:	sub    eax,ebp
650073dd:	cmp    eax,esi
650073df:	jae    0x650073e3
650073e1:	mov    esi,eax
650073e3:	mov    ebx,DWORD PTR [esp+0x20]
650073e7:	cmp    esi,ebx
650073e9:	mov    eax,esi
650073eb:	jb     0x650073ef
650073ed:	mov    eax,ebx
650073ef:	cmp    DWORD PTR [edi+0x18],0x10
650073f3:	jb     0x650073fa
650073f5:	mov    edi,DWORD PTR [edi+0x4]
650073f8:	jmp    0x650073fd
650073fa:	add    edi,0x4
650073fd:	push   eax
650073fe:	mov    eax,DWORD PTR [esp+0x20]
65007402:	push   eax
65007403:	add    edi,ebp
65007405:	push   edi
65007406:	call   0x65002c80
6500740b:	add    esp,0xc
6500740e:	test   eax,eax
65007410:	jne    0x65007427
65007412:	cmp    esi,ebx
65007414:	jae    0x65007420
65007416:	pop    edi
65007417:	pop    esi
65007418:	pop    ebp
65007419:	or     eax,0xffffffff
6500741c:	pop    ebx
6500741d:	ret    0x10
65007420:	xor    eax,eax
65007422:	cmp    esi,ebx
65007424:	setne  al
65007427:	pop    edi
65007428:	pop    esi
65007429:	pop    ebp
6500742a:	pop    ebx
6500742b:	ret    0x10
6500742e:	int3   
6500742f:	int3   
65007430:	push   0xffffffff
65007432:	push   0x65022a6e
65007437:	mov    eax,fs:0x0
6500743d:	push   eax
6500743e:	mov    eax,ds:0x6502c09c
65007443:	xor    eax,esp
65007445:	push   eax
65007446:	lea    eax,[esp+0x4]
6500744a:	mov    fs:0x0,eax
65007450:	test   BYTE PTR ds:0x6503036c,0x1
65007457:	jne    0x650074a9
65007459:	or     DWORD PTR ds:0x6503036c,0x1
65007460:	mov    ecx,0x65030350
65007465:	mov    DWORD PTR [esp+0xc],0x0
6500746d:	call   0x650098f0
65007472:	mov    ds:0x65030354,eax
65007477:	mov    BYTE PTR [eax+0x45],0x1
6500747b:	mov    eax,ds:0x65030354
65007480:	mov    DWORD PTR [eax+0x4],eax
65007483:	mov    eax,ds:0x65030354
65007488:	mov    DWORD PTR [eax],eax
6500748a:	mov    eax,ds:0x65030354
6500748f:	mov    DWORD PTR [eax+0x8],eax
65007492:	push   0x65023600
65007497:	mov    DWORD PTR ds:0x65030358,0x0
650074a1:	call   0x65012a5f
650074a6:	add    esp,0x4
650074a9:	mov    eax,0x65030350
650074ae:	mov    ecx,DWORD PTR [esp+0x4]
650074b2:	mov    DWORD PTR fs:0x0,ecx
650074b9:	pop    ecx
650074ba:	add    esp,0xc
650074bd:	ret    
650074be:	int3   
650074bf:	int3   
650074c0:	push   0xffffffff
650074c2:	push   0x650225e8
650074c7:	mov    eax,fs:0x0
650074cd:	push   eax
650074ce:	push   ecx
650074cf:	push   ebx
650074d0:	push   ebp
650074d1:	push   esi
650074d2:	push   edi
650074d3:	mov    eax,ds:0x6502c09c
650074d8:	xor    eax,esp
650074da:	push   eax
650074db:	lea    eax,[esp+0x18]
650074df:	mov    fs:0x0,eax
650074e5:	mov    esi,DWORD PTR [esp+0x28]
650074e9:	xor    eax,eax
650074eb:	mov    DWORD PTR [esp+0x14],eax
650074ef:	mov    DWORD PTR [esp+0x20],eax
650074f3:	push   0xffffffff
650074f5:	mov    DWORD PTR [esi+0x14],eax
650074f8:	mov    DWORD PTR [esi+0x18],0xf
650074ff:	lea    ebp,[esi+0x4]
65007502:	push   eax
65007503:	mov    BYTE PTR [ebp+0x0],al
65007506:	lea    eax,[esp+0x34]
6500750a:	push   eax
6500750b:	mov    ecx,esi
6500750d:	call   0x650017e0
65007512:	mov    eax,DWORD PTR [esi+0x14]
65007515:	mov    edi,0x1
6500751a:	cmp    eax,edi
6500751c:	jbe    0x6500755d
6500751e:	cmp    edi,eax
65007520:	jbe    0x65007527
65007522:	call   0x65012443
65007527:	cmp    DWORD PTR [esi+0x18],0x10
6500752b:	jb     0x65007532
6500752d:	mov    ebx,DWORD PTR [ebp+0x0]
65007530:	jmp    0x65007534
65007532:	mov    ebx,ebp
65007534:	lea    ecx,[edi-0x1]
65007537:	cmp    ecx,DWORD PTR [esi+0x14]
6500753a:	jbe    0x65007541
6500753c:	call   0x65012443
65007541:	cmp    DWORD PTR [esi+0x18],0x10
65007545:	jb     0x6500754c
65007547:	mov    eax,DWORD PTR [ebp+0x0]
6500754a:	jmp    0x6500754e
6500754c:	mov    eax,ebp
6500754e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
65007552:	xor    BYTE PTR [ebx+edi*1],dl
65007555:	add    edi,0x1
65007558:	cmp    edi,DWORD PTR [esi+0x14]
6500755b:	jb     0x65007527
6500755d:	cmp    DWORD PTR [esp+0x44],0x10
65007562:	jb     0x65007571
65007564:	mov    eax,DWORD PTR [esp+0x30]
65007568:	push   eax
65007569:	call   0x650120d2
6500756e:	add    esp,0x4
65007571:	mov    eax,esi
65007573:	mov    ecx,DWORD PTR [esp+0x18]
65007577:	mov    DWORD PTR fs:0x0,ecx
6500757e:	pop    ecx
6500757f:	pop    edi
65007580:	pop    esi
65007581:	pop    ebp
65007582:	pop    ebx
65007583:	add    esp,0x10
65007586:	ret    
65007587:	int3   
65007588:	int3   
65007589:	int3   
6500758a:	int3   
6500758b:	int3   
6500758c:	int3   
6500758d:	int3   
6500758e:	int3   
6500758f:	int3   
65007590:	push   0xffffffff
65007592:	push   0x65022a3e
65007597:	mov    eax,fs:0x0
6500759d:	push   eax
6500759e:	mov    eax,ds:0x6502c09c
650075a3:	xor    eax,esp
650075a5:	push   eax
650075a6:	lea    eax,[esp+0x4]
650075aa:	mov    fs:0x0,eax
650075b0:	test   BYTE PTR ds:0x65030368,0x1
650075b7:	jne    0x65007609
650075b9:	or     DWORD PTR ds:0x65030368,0x1
650075c0:	mov    ecx,0x6503035c
650075c5:	mov    DWORD PTR [esp+0xc],0x0
650075cd:	call   0x650098f0
650075d2:	mov    ds:0x65030360,eax
650075d7:	mov    BYTE PTR [eax+0x45],0x1
650075db:	mov    eax,ds:0x65030360
650075e0:	mov    DWORD PTR [eax+0x4],eax
650075e3:	mov    eax,ds:0x65030360
650075e8:	mov    DWORD PTR [eax],eax
650075ea:	mov    eax,ds:0x65030360
650075ef:	mov    DWORD PTR [eax+0x8],eax
650075f2:	push   0x650235b0
650075f7:	mov    DWORD PTR ds:0x65030364,0x0
65007601:	call   0x65012a5f
65007606:	add    esp,0x4
65007609:	mov    eax,0x6503035c
6500760e:	mov    ecx,DWORD PTR [esp+0x4]
65007612:	mov    DWORD PTR fs:0x0,ecx
65007619:	pop    ecx
6500761a:	add    esp,0xc
6500761d:	ret    
6500761e:	int3   
6500761f:	int3   
65007620:	push   0xffffffff
65007622:	push   0x650225b8
65007627:	mov    eax,fs:0x0
6500762d:	push   eax
6500762e:	push   ecx
6500762f:	push   ebx
65007630:	push   ebp
65007631:	push   esi
65007632:	push   edi
65007633:	mov    eax,ds:0x6502c09c
65007638:	xor    eax,esp
6500763a:	push   eax
6500763b:	lea    eax,[esp+0x18]
6500763f:	mov    fs:0x0,eax
65007645:	mov    esi,DWORD PTR [esp+0x28]
65007649:	xor    eax,eax
6500764b:	mov    DWORD PTR [esp+0x14],eax
6500764f:	mov    DWORD PTR [esp+0x20],eax
65007653:	push   0xffffffff
65007655:	mov    DWORD PTR [esi+0x14],eax
65007658:	mov    DWORD PTR [esi+0x18],0x7
6500765f:	lea    ebp,[esi+0x4]
65007662:	push   eax
65007663:	mov    WORD PTR [ebp+0x0],ax
65007667:	lea    eax,[esp+0x34]
6500766b:	push   eax
6500766c:	mov    ecx,esi
6500766e:	call   0x65008760
65007673:	mov    eax,DWORD PTR [esi+0x14]
65007676:	mov    edi,0x1
6500767b:	cmp    eax,edi
6500767d:	jbe    0x650076c0
6500767f:	cmp    edi,eax
65007681:	jbe    0x65007688
65007683:	call   0x65012443
65007688:	cmp    DWORD PTR [esi+0x18],0x8
6500768c:	jb     0x65007693
6500768e:	mov    ebx,DWORD PTR [ebp+0x0]
65007691:	jmp    0x65007695
65007693:	mov    ebx,ebp
65007695:	lea    ecx,[edi-0x1]
65007698:	cmp    ecx,DWORD PTR [esi+0x14]
6500769b:	jbe    0x650076a2
6500769d:	call   0x65012443
650076a2:	cmp    DWORD PTR [esi+0x18],0x8
650076a6:	jb     0x650076ad
650076a8:	mov    eax,DWORD PTR [ebp+0x0]
650076ab:	jmp    0x650076af
650076ad:	mov    eax,ebp
650076af:	mov    dx,WORD PTR [eax+edi*2-0x2]
650076b4:	xor    WORD PTR [ebx+edi*2],dx
650076b8:	add    edi,0x1
650076bb:	cmp    edi,DWORD PTR [esi+0x14]
650076be:	jb     0x65007688
650076c0:	cmp    DWORD PTR [esp+0x44],0x8
650076c5:	jb     0x650076d4
650076c7:	mov    eax,DWORD PTR [esp+0x30]
650076cb:	push   eax
650076cc:	call   0x650120d2
650076d1:	add    esp,0x4
650076d4:	mov    eax,esi
650076d6:	mov    ecx,DWORD PTR [esp+0x18]
650076da:	mov    DWORD PTR fs:0x0,ecx
650076e1:	pop    ecx
650076e2:	pop    edi
650076e3:	pop    esi
650076e4:	pop    ebp
650076e5:	pop    ebx
650076e6:	add    esp,0x10
650076e9:	ret    
650076ea:	int3   
650076eb:	int3   
650076ec:	int3   
650076ed:	int3   
650076ee:	int3   
650076ef:	int3   
650076f0:	mov    eax,DWORD PTR [edi+0x4]
650076f3:	sub    esp,0xc
650076f6:	push   ebx
650076f7:	mov    ebx,DWORD PTR [eax]
650076f9:	push   ebp
650076fa:	mov    ebp,DWORD PTR [esp+0x1c]
650076fe:	test   ebp,ebp
65007700:	push   esi
65007701:	je     0x65007707
65007703:	cmp    ebp,edi
65007705:	je     0x6500770c
65007707:	call   0x65012443
6500770c:	mov    esi,DWORD PTR [esp+0x24]
65007710:	cmp    esi,ebx
65007712:	jne    0x65007770
65007714:	mov    eax,DWORD PTR [esp+0x28]
65007718:	test   eax,eax
6500771a:	mov    ebx,DWORD PTR [edi+0x4]
6500771d:	je     0x65007723
6500771f:	cmp    eax,edi
65007721:	je     0x65007728
65007723:	call   0x65012443
65007728:	cmp    DWORD PTR [esp+0x2c],ebx
6500772c:	jne    0x65007770
6500772e:	mov    ecx,DWORD PTR [edi+0x4]
65007731:	mov    edx,DWORD PTR [ecx+0x4]
65007734:	push   edx
65007735:	mov    ecx,edi
65007737:	call   0x65008b80
6500773c:	mov    eax,DWORD PTR [edi+0x4]
6500773f:	mov    DWORD PTR [eax+0x4],eax
65007742:	mov    eax,DWORD PTR [edi+0x4]
65007745:	mov    DWORD PTR [edi+0x8],0x0
6500774c:	mov    DWORD PTR [eax],eax
6500774e:	mov    eax,DWORD PTR [edi+0x4]
65007751:	mov    DWORD PTR [eax+0x8],eax
65007754:	mov    eax,DWORD PTR [edi+0x4]
65007757:	mov    ecx,DWORD PTR [eax]
65007759:	mov    eax,DWORD PTR [esp+0x1c]
6500775d:	mov    DWORD PTR [eax+0x4],ecx
65007760:	mov    DWORD PTR [eax],edi
65007762:	pop    esi
65007763:	pop    ebp
65007764:	pop    ebx
65007765:	add    esp,0xc
65007768:	ret    0x14
6500776b:	jmp    0x65007770
6500776d:	lea    ecx,[ecx+0x0]
65007770:	test   ebp,ebp
65007772:	je     0x6500777a
65007774:	cmp    ebp,DWORD PTR [esp+0x28]
65007778:	je     0x6500777f
6500777a:	call   0x65012443
6500777f:	cmp    esi,DWORD PTR [esp+0x2c]
65007783:	je     0x650077ec
65007785:	test   ebp,ebp
65007787:	mov    DWORD PTR [esp+0x24],esi
6500778b:	jne    0x65007792
6500778d:	call   0x65012443
65007792:	cmp    BYTE PTR [esi+0x29],0x0
65007796:	je     0x6500779f
65007798:	call   0x65012443
6500779d:	jmp    0x650077d9
6500779f:	mov    eax,DWORD PTR [esi+0x8]
650077a2:	cmp    BYTE PTR [eax+0x29],0x0
650077a6:	jne    0x650077be
650077a8:	mov    esi,eax
650077aa:	mov    eax,DWORD PTR [esi]
650077ac:	cmp    BYTE PTR [eax+0x29],0x0
650077b0:	jne    0x650077d9
650077b2:	mov    esi,eax
650077b4:	mov    eax,DWORD PTR [esi]
650077b6:	cmp    BYTE PTR [eax+0x29],0x0
650077ba:	je     0x650077b2
650077bc:	jmp    0x650077d9
650077be:	mov    eax,DWORD PTR [esi+0x4]
650077c1:	cmp    BYTE PTR [eax+0x29],0x0
650077c5:	jne    0x650077d7
650077c7:	cmp    esi,DWORD PTR [eax+0x8]
650077ca:	jne    0x650077d7
650077cc:	mov    esi,eax
650077ce:	mov    eax,DWORD PTR [eax+0x4]
650077d1:	cmp    BYTE PTR [eax+0x29],0x0
650077d5:	je     0x650077c7
650077d7:	mov    esi,eax
650077d9:	mov    edx,DWORD PTR [esp+0x24]
650077dd:	push   edx
650077de:	push   ebp
650077df:	lea    eax,[esp+0x18]
650077e3:	push   eax
650077e4:	push   edi
650077e5:	call   0x65007f90
650077ea:	jmp    0x65007770
650077ec:	mov    eax,DWORD PTR [esp+0x1c]
650077f0:	mov    DWORD PTR [eax+0x4],esi
650077f3:	pop    esi
650077f4:	mov    DWORD PTR [eax],ebp
650077f6:	pop    ebp
650077f7:	pop    ebx
650077f8:	add    esp,0xc
650077fb:	ret    0x14
650077fe:	int3   
650077ff:	int3   
65007800:	push   esi
65007801:	mov    esi,eax
65007803:	mov    eax,DWORD PTR [ebx+0x4]
65007806:	push   edi
65007807:	mov    edi,DWORD PTR [esi+0x4]
6500780a:	add    eax,0x4
6500780d:	mov    eax,DWORD PTR [eax]
6500780f:	push   edi
65007810:	push   eax
65007811:	mov    ecx,esi
65007813:	call   0x650082a0
65007818:	mov    DWORD PTR [edi+0x4],eax
6500781b:	mov    ecx,DWORD PTR [ebx+0x8]
6500781e:	mov    edx,DWORD PTR [esi+0x4]
65007821:	mov    DWORD PTR [esi+0x8],ecx
65007824:	mov    eax,DWORD PTR [edx+0x4]
65007827:	cmp    BYTE PTR [eax+0x29],0x0
6500782b:	jne    0x65007861
6500782d:	mov    ecx,DWORD PTR [eax]
6500782f:	cmp    BYTE PTR [ecx+0x29],0x0
65007833:	jne    0x6500783f
65007835:	mov    eax,ecx
65007837:	mov    ecx,DWORD PTR [eax]
65007839:	cmp    BYTE PTR [ecx+0x29],0x0
6500783d:	je     0x65007835
6500783f:	mov    DWORD PTR [edx],eax
65007841:	mov    esi,DWORD PTR [esi+0x4]
65007844:	mov    ecx,DWORD PTR [esi+0x4]
65007847:	mov    eax,DWORD PTR [ecx+0x8]
6500784a:	cmp    BYTE PTR [eax+0x29],0x0
6500784e:	jne    0x6500785b
65007850:	mov    ecx,eax
65007852:	mov    eax,DWORD PTR [ecx+0x8]
65007855:	cmp    BYTE PTR [eax+0x29],0x0
65007859:	je     0x65007850
6500785b:	pop    edi
6500785c:	mov    DWORD PTR [esi+0x8],ecx
6500785f:	pop    esi
65007860:	ret    
65007861:	mov    DWORD PTR [edx],edx
65007863:	mov    esi,DWORD PTR [esi+0x4]
65007866:	pop    edi
65007867:	mov    DWORD PTR [esi+0x8],esi
6500786a:	pop    esi
6500786b:	ret    
6500786c:	int3   
6500786d:	int3   
6500786e:	int3   
6500786f:	int3   
65007870:	push   0xffffffff
65007872:	push   0x65022a08
65007877:	mov    eax,fs:0x0
6500787d:	push   eax
6500787e:	sub    esp,0x44
65007881:	push   ebx
65007882:	push   ebp
65007883:	push   esi
65007884:	push   edi
65007885:	mov    eax,ds:0x6502c09c
6500788a:	xor    eax,esp
6500788c:	push   eax
6500788d:	lea    eax,[esp+0x58]
65007891:	mov    fs:0x0,eax
65007897:	mov    esi,ecx
65007899:	mov    ebp,DWORD PTR [esp+0x68]
6500789d:	xor    ebx,ebx
6500789f:	cmp    DWORD PTR [ebp+0x8],0x9249248
650078a6:	jb     0x650078f1
650078a8:	push   0x13
650078aa:	push   0x65028234
650078af:	lea    ecx,[esp+0x1c]
650078b3:	mov    DWORD PTR [esp+0x34],0xf
650078bb:	mov    DWORD PTR [esp+0x30],ebx
650078bf:	mov    BYTE PTR [esp+0x20],bl
650078c3:	call   0x650018c0
650078c8:	lea    eax,[esp+0x14]
650078cc:	push   eax
650078cd:	lea    ecx,[esp+0x34]
650078d1:	mov    DWORD PTR [esp+0x64],ebx
650078d5:	call   0x65002d10
650078da:	push   0x6502a0c8
650078df:	lea    ecx,[esp+0x34]
650078e3:	push   ecx
650078e4:	mov    DWORD PTR [esp+0x38],0x65024c20
650078ec:	call   0x650124d6
650078f1:	mov    edx,DWORD PTR [esp+0x74]
650078f5:	mov    eax,DWORD PTR [ebp+0x4]
650078f8:	push   ebx
650078f9:	push   edx
650078fa:	push   eax
650078fb:	push   esi
650078fc:	push   eax
650078fd:	call   0x65008460
65007902:	mov    ecx,DWORD PTR [ebp+0x4]
65007905:	mov    edx,eax
65007907:	mov    eax,0x1
6500790c:	add    DWORD PTR [ebp+0x8],eax
6500790f:	cmp    esi,ecx
65007911:	mov    DWORD PTR [esp+0x68],edx
65007915:	jne    0x65007924
65007917:	mov    DWORD PTR [ecx+0x4],edx
6500791a:	mov    ecx,DWORD PTR [ebp+0x4]
6500791d:	mov    DWORD PTR [ecx],edx
6500791f:	mov    ecx,DWORD PTR [ebp+0x4]
65007922:	jmp    0x65007942
65007924:	cmp    BYTE PTR [esp+0x70],bl
65007928:	je     0x65007937
6500792a:	mov    DWORD PTR [esi],edx
6500792c:	mov    ecx,DWORD PTR [ebp+0x4]
6500792f:	cmp    esi,DWORD PTR [ecx]
65007931:	jne    0x65007945
65007933:	mov    DWORD PTR [ecx],edx
65007935:	jmp    0x65007945
65007937:	mov    DWORD PTR [esi+0x8],edx
6500793a:	mov    ecx,DWORD PTR [ebp+0x4]
6500793d:	cmp    esi,DWORD PTR [ecx+0x8]
65007940:	jne    0x65007945
65007942:	mov    DWORD PTR [ecx+0x8],edx
65007945:	mov    esi,DWORD PTR [edx+0x4]
65007948:	cmp    BYTE PTR [esi+0x28],bl
6500794b:	lea    ecx,[edx+0x4]
6500794e:	jne    0x65007ac6
65007954:	mov    esi,DWORD PTR [ecx]
65007956:	mov    edi,DWORD PTR [esi+0x4]
65007959:	cmp    esi,DWORD PTR [edi]
6500795b:	jne    0x65007a07
65007961:	mov    edi,DWORD PTR [edi+0x8]
65007964:	cmp    BYTE PTR [edi+0x28],bl
65007967:	je     0x65007a0e
6500796d:	cmp    edx,DWORD PTR [esi+0x8]
65007970:	jne    0x650079ad
65007972:	mov    edx,esi
65007974:	mov    esi,DWORD PTR [edx+0x8]
65007977:	mov    ecx,DWORD PTR [esi]
65007979:	mov    DWORD PTR [edx+0x8],ecx
6500797c:	mov    ecx,DWORD PTR [esi]
6500797e:	cmp    BYTE PTR [ecx+0x29],bl
65007981:	jne    0x65007986
65007983:	mov    DWORD PTR [ecx+0x4],edx
65007986:	mov    edi,DWORD PTR [edx+0x4]
65007989:	lea    ecx,[edx+0x4]
6500798c:	mov    DWORD PTR [esi+0x4],edi
6500798f:	mov    edi,DWORD PTR [ebp+0x4]
65007992:	cmp    edx,DWORD PTR [edi+0x4]
65007995:	jne    0x6500799c
65007997:	mov    DWORD PTR [edi+0x4],esi
6500799a:	jmp    0x650079a9
6500799c:	mov    edi,DWORD PTR [ecx]
6500799e:	cmp    edx,DWORD PTR [edi]
650079a0:	jne    0x650079a6
650079a2:	mov    DWORD PTR [edi],esi
650079a4:	jmp    0x650079a9
650079a6:	mov    DWORD PTR [edi+0x8],esi
650079a9:	mov    DWORD PTR [esi],edx
650079ab:	mov    DWORD PTR [ecx],esi
650079ad:	mov    esi,DWORD PTR [ecx]
650079af:	mov    BYTE PTR [esi+0x28],al
650079b2:	mov    esi,DWORD PTR [ecx]
650079b4:	mov    esi,DWORD PTR [esi+0x4]
650079b7:	mov    BYTE PTR [esi+0x28],bl
650079ba:	mov    ecx,DWORD PTR [ecx]
650079bc:	mov    ecx,DWORD PTR [ecx+0x4]
650079bf:	mov    esi,DWORD PTR [ecx]
650079c1:	mov    edi,DWORD PTR [esi+0x8]
650079c4:	mov    DWORD PTR [ecx],edi
650079c6:	mov    edi,DWORD PTR [esi+0x8]
650079c9:	cmp    BYTE PTR [edi+0x29],bl
650079cc:	jne    0x650079d1
650079ce:	mov    DWORD PTR [edi+0x4],ecx
650079d1:	mov    edi,DWORD PTR [ecx+0x4]
650079d4:	mov    DWORD PTR [esi+0x4],edi
650079d7:	mov    edi,DWORD PTR [ebp+0x4]
650079da:	cmp    ecx,DWORD PTR [edi+0x4]
650079dd:	jne    0x650079ea
650079df:	mov    DWORD PTR [edi+0x4],esi
650079e2:	mov    DWORD PTR [esi+0x8],ecx
650079e5:	jmp    0x65007ab0
650079ea:	mov    edi,DWORD PTR [ecx+0x4]
650079ed:	cmp    ecx,DWORD PTR [edi+0x8]
650079f0:	jne    0x650079fd
650079f2:	mov    DWORD PTR [edi+0x8],esi
650079f5:	mov    DWORD PTR [esi+0x8],ecx
650079f8:	jmp    0x65007ab0
650079fd:	mov    DWORD PTR [edi],esi
650079ff:	mov    DWORD PTR [esi+0x8],ecx
65007a02:	jmp    0x65007ab0
65007a07:	mov    edi,DWORD PTR [edi]
65007a09:	cmp    BYTE PTR [edi+0x28],bl
65007a0c:	jne    0x65007a28
65007a0e:	mov    edx,esi
65007a10:	mov    BYTE PTR [edx+0x28],al
65007a13:	mov    BYTE PTR [edi+0x28],al
65007a16:	mov    edx,DWORD PTR [ecx]
65007a18:	mov    edx,DWORD PTR [edx+0x4]
65007a1b:	mov    BYTE PTR [edx+0x28],bl
65007a1e:	mov    ecx,DWORD PTR [ecx]
65007a20:	mov    edx,DWORD PTR [ecx+0x4]
65007a23:	jmp    0x65007ab3
65007a28:	cmp    edx,DWORD PTR [esi]
65007a2a:	jne    0x65007a69
65007a2c:	mov    edx,esi
65007a2e:	mov    esi,DWORD PTR [edx]
65007a30:	mov    ecx,DWORD PTR [esi+0x8]
65007a33:	mov    DWORD PTR [edx],ecx
65007a35:	mov    ecx,DWORD PTR [esi+0x8]
65007a38:	cmp    BYTE PTR [ecx+0x29],bl
65007a3b:	jne    0x65007a40
65007a3d:	mov    DWORD PTR [ecx+0x4],edx
65007a40:	mov    edi,DWORD PTR [edx+0x4]
65007a43:	lea    ecx,[edx+0x4]
65007a46:	mov    DWORD PTR [esi+0x4],edi
65007a49:	mov    edi,DWORD PTR [ebp+0x4]
65007a4c:	cmp    edx,DWORD PTR [edi+0x4]
65007a4f:	jne    0x65007a56
65007a51:	mov    DWORD PTR [edi+0x4],esi
65007a54:	jmp    0x65007a64
65007a56:	mov    edi,DWORD PTR [ecx]
65007a58:	cmp    edx,DWORD PTR [edi+0x8]
65007a5b:	jne    0x65007a62
65007a5d:	mov    DWORD PTR [edi+0x8],esi
65007a60:	jmp    0x65007a64
65007a62:	mov    DWORD PTR [edi],esi
65007a64:	mov    DWORD PTR [esi+0x8],edx
65007a67:	mov    DWORD PTR [ecx],esi
65007a69:	mov    esi,DWORD PTR [ecx]
65007a6b:	mov    BYTE PTR [esi+0x28],al
65007a6e:	mov    esi,DWORD PTR [ecx]
65007a70:	mov    esi,DWORD PTR [esi+0x4]
65007a73:	mov    BYTE PTR [esi+0x28],bl
65007a76:	mov    ecx,DWORD PTR [ecx]
65007a78:	mov    ecx,DWORD PTR [ecx+0x4]
65007a7b:	mov    esi,DWORD PTR [ecx+0x8]
65007a7e:	mov    edi,DWORD PTR [esi]
65007a80:	mov    DWORD PTR [ecx+0x8],edi
65007a83:	mov    edi,DWORD PTR [esi]
65007a85:	cmp    BYTE PTR [edi+0x29],bl
65007a88:	jne    0x65007a8d
65007a8a:	mov    DWORD PTR [edi+0x4],ecx
65007a8d:	mov    edi,DWORD PTR [ecx+0x4]
65007a90:	mov    DWORD PTR [esi+0x4],edi
65007a93:	mov    edi,DWORD PTR [ebp+0x4]
65007a96:	cmp    ecx,DWORD PTR [edi+0x4]
65007a99:	jne    0x65007aa0
65007a9b:	mov    DWORD PTR [edi+0x4],esi
65007a9e:	jmp    0x65007aae
65007aa0:	mov    edi,DWORD PTR [ecx+0x4]
65007aa3:	cmp    ecx,DWORD PTR [edi]
65007aa5:	jne    0x65007aab
65007aa7:	mov    DWORD PTR [edi],esi
65007aa9:	jmp    0x65007aae
65007aab:	mov    DWORD PTR [edi+0x8],esi
65007aae:	mov    DWORD PTR [esi],ecx
65007ab0:	mov    DWORD PTR [ecx+0x4],esi
65007ab3:	mov    esi,DWORD PTR [edx+0x4]
65007ab6:	cmp    BYTE PTR [esi+0x28],bl
65007ab9:	lea    ecx,[edx+0x4]
65007abc:	je     0x65007954
65007ac2:	mov    edx,DWORD PTR [esp+0x68]
65007ac6:	mov    ecx,DWORD PTR [ebp+0x4]
65007ac9:	mov    ecx,DWORD PTR [ecx+0x4]
65007acc:	mov    BYTE PTR [ecx+0x28],al
65007acf:	mov    ecx,DWORD PTR [esp+0x6c]
65007ad3:	mov    DWORD PTR [ecx+0x4],edx
65007ad6:	mov    DWORD PTR [ecx],ebp
65007ad8:	mov    eax,ecx
65007ada:	mov    ecx,DWORD PTR [esp+0x58]
65007ade:	mov    DWORD PTR fs:0x0,ecx
65007ae5:	pop    ecx
65007ae6:	pop    edi
65007ae7:	pop    esi
65007ae8:	pop    ebp
65007ae9:	pop    ebx
65007aea:	add    esp,0x50
65007aed:	ret    0x10
65007af0:	push   ebp
65007af1:	mov    ebp,esp
65007af3:	and    esp,0xfffffff8
65007af6:	sub    esp,0xc
65007af9:	push   edi
65007afa:	mov    edi,eax
65007afc:	mov    eax,DWORD PTR [edi+0x4]
65007aff:	mov    ecx,DWORD PTR [eax]
65007b01:	push   eax
65007b02:	push   edi
65007b03:	push   ecx
65007b04:	push   edi
65007b05:	lea    eax,[esp+0x18]
65007b09:	push   eax
65007b0a:	call   0x650076f0
65007b0f:	mov    ecx,DWORD PTR [edi+0x4]
65007b12:	push   ecx
65007b13:	call   0x650120d2
65007b18:	add    esp,0x4
65007b1b:	xor    eax,eax
65007b1d:	mov    DWORD PTR [edi+0x4],eax
65007b20:	mov    DWORD PTR [edi+0x8],eax
65007b23:	pop    edi
65007b24:	mov    esp,ebp
65007b26:	pop    ebp
65007b27:	ret    
65007b28:	int3   
65007b29:	int3   
65007b2a:	int3   
65007b2b:	int3   
65007b2c:	int3   
65007b2d:	int3   
65007b2e:	int3   
65007b2f:	int3   
65007b30:	cmp    DWORD PTR [esi],0x0
65007b33:	jne    0x65007b3a
65007b35:	call   0x65012443
65007b3a:	mov    eax,DWORD PTR [esi+0x4]
65007b3d:	cmp    BYTE PTR [eax+0x29],0x0
65007b41:	je     0x65007b48
65007b43:	jmp    0x65012443
65007b48:	mov    ecx,DWORD PTR [eax+0x8]
65007b4b:	cmp    BYTE PTR [ecx+0x29],0x0
65007b4f:	jne    0x65007b6e
65007b51:	mov    eax,DWORD PTR [ecx]
65007b53:	cmp    BYTE PTR [eax+0x29],0x0
65007b57:	jne    0x65007b6a
65007b59:	lea    esp,[esp+0x0]
65007b60:	mov    ecx,eax
65007b62:	mov    eax,DWORD PTR [ecx]
65007b64:	cmp    BYTE PTR [eax+0x29],0x0
65007b68:	je     0x65007b60
65007b6a:	mov    DWORD PTR [esi+0x4],ecx
65007b6d:	ret    
65007b6e:	mov    eax,DWORD PTR [eax+0x4]
65007b71:	cmp    BYTE PTR [eax+0x29],0x0
65007b75:	jne    0x65007b8d
65007b77:	mov    ecx,DWORD PTR [esi+0x4]
65007b7a:	cmp    ecx,DWORD PTR [eax+0x8]
65007b7d:	jne    0x65007b8d
65007b7f:	mov    DWORD PTR [esi+0x4],eax
65007b82:	mov    edx,eax
65007b84:	mov    eax,DWORD PTR [edx+0x4]
65007b87:	cmp    BYTE PTR [eax+0x29],0x0
65007b8b:	je     0x65007b77
65007b8d:	mov    DWORD PTR [esi+0x4],eax
65007b90:	ret    
65007b91:	int3   
65007b92:	int3   
65007b93:	int3   
65007b94:	int3   
65007b95:	int3   
65007b96:	int3   
65007b97:	int3   
65007b98:	int3   
65007b99:	int3   
65007b9a:	int3   
65007b9b:	int3   
65007b9c:	int3   
65007b9d:	int3   
65007b9e:	int3   
65007b9f:	int3   
65007ba0:	push   ebp
65007ba1:	mov    ebp,esp
65007ba3:	and    esp,0xfffffff8
65007ba6:	sub    esp,0x24
65007ba9:	push   ebx
65007baa:	push   esi
65007bab:	push   edi
65007bac:	mov    edi,ecx
65007bae:	mov    eax,DWORD PTR [edi+0x4]
65007bb1:	mov    esi,DWORD PTR [eax+0x4]
65007bb4:	cmp    BYTE PTR [esi+0x45],0x0
65007bb8:	mov    ecx,eax
65007bba:	mov    al,0x1
65007bbc:	mov    DWORD PTR [esp+0x28],edi
65007bc0:	mov    DWORD PTR [esp+0x10],ecx
65007bc4:	mov    BYTE PTR [esp+0x18],al
65007bc8:	jne    0x65007c68
65007bce:	mov    edx,DWORD PTR [ebp+0xc]
65007bd1:	mov    eax,DWORD PTR [edx+0x14]
65007bd4:	mov    ecx,DWORD PTR [edx+0x18]
65007bd7:	mov    DWORD PTR [esp+0x20],eax
65007bdb:	mov    DWORD PTR [esp+0x1c],eax
65007bdf:	mov    DWORD PTR [esp+0x24],ecx
65007be3:	jmp    0x65007bec
65007be5:	mov    edx,DWORD PTR [ebp+0xc]
65007be8:	mov    eax,DWORD PTR [esp+0x1c]
65007bec:	cmp    DWORD PTR [esi+0x24],0x10
65007bf0:	mov    ebx,DWORD PTR [esi+0x20]
65007bf3:	mov    DWORD PTR [esp+0x10],esi
65007bf7:	jb     0x65007bfe
65007bf9:	mov    ecx,DWORD PTR [esi+0x10]
65007bfc:	jmp    0x65007c01
65007bfe:	lea    ecx,[esi+0x10]
65007c01:	mov    edi,DWORD PTR [esp+0x20]
65007c05:	cmp    eax,edi
65007c07:	mov    DWORD PTR [esp+0x14],ecx
65007c0b:	jae    0x65007c0f
65007c0d:	mov    edi,eax
65007c0f:	cmp    edi,ebx
65007c11:	mov    ecx,edi
65007c13:	jb     0x65007c17
65007c15:	mov    ecx,ebx
65007c17:	cmp    DWORD PTR [esp+0x24],0x10
65007c1c:	lea    eax,[edx+0x4]
65007c1f:	jb     0x65007c23
65007c21:	mov    eax,DWORD PTR [eax]
65007c23:	mov    edx,DWORD PTR [esp+0x14]
65007c27:	push   ecx
65007c28:	push   edx
65007c29:	push   eax
65007c2a:	call   0x65002c80
65007c2f:	add    esp,0xc
65007c32:	test   eax,eax
65007c34:	jne    0x65007c48
65007c36:	cmp    edi,ebx
65007c38:	jae    0x65007c3f
65007c3a:	or     eax,0xffffffff
65007c3d:	jmp    0x65007c46
65007c3f:	xor    eax,eax
65007c41:	cmp    edi,ebx
65007c43:	setne  al
65007c46:	test   eax,eax
65007c48:	setl   al
65007c4b:	test   al,al
65007c4d:	mov    BYTE PTR [esp+0x18],al
65007c51:	je     0x65007c57
65007c53:	mov    esi,DWORD PTR [esi]
65007c55:	jmp    0x65007c5a
65007c57:	mov    esi,DWORD PTR [esi+0x8]
65007c5a:	cmp    BYTE PTR [esi+0x45],0x0
65007c5e:	je     0x65007be5
65007c60:	mov    edi,DWORD PTR [esp+0x28]
65007c64:	mov    ecx,DWORD PTR [esp+0x10]
65007c68:	test   al,al
65007c6a:	mov    esi,ecx
65007c6c:	mov    DWORD PTR [esp+0x2c],esi
65007c70:	mov    DWORD PTR [esp+0x28],edi
65007c74:	je     0x65007cb9
65007c76:	mov    eax,DWORD PTR [edi+0x4]
65007c79:	cmp    ecx,DWORD PTR [eax]
65007c7b:	jne    0x65007cac
65007c7d:	mov    edx,DWORD PTR [ebp+0xc]
65007c80:	push   edx
65007c81:	push   ecx
65007c82:	push   0x1
65007c84:	lea    eax,[esp+0x34]
65007c88:	push   eax
65007c89:	mov    ecx,edi
65007c8b:	call   0x65008510
65007c90:	mov    ecx,eax
65007c92:	mov    edx,DWORD PTR [ecx]
65007c94:	mov    eax,DWORD PTR [ebp+0x8]
65007c97:	mov    ecx,DWORD PTR [ecx+0x4]
65007c9a:	mov    DWORD PTR [eax+0x4],ecx
65007c9d:	mov    BYTE PTR [eax+0x8],0x1
65007ca1:	mov    DWORD PTR [eax],edx
65007ca3:	pop    edi
65007ca4:	pop    esi
65007ca5:	pop    ebx
65007ca6:	mov    esp,ebp
65007ca8:	pop    ebp
65007ca9:	ret    0x8
65007cac:	lea    ecx,[esp+0x28]
65007cb0:	call   0x65009420
65007cb5:	mov    esi,DWORD PTR [esp+0x2c]
65007cb9:	mov    ebx,DWORD PTR [ebp+0xc]
65007cbc:	cmp    DWORD PTR [ebx+0x18],0x10
65007cc0:	mov    edx,DWORD PTR [ebx+0x14]
65007cc3:	lea    ecx,[esi+0xc]
65007cc6:	jb     0x65007ccd
65007cc8:	mov    eax,DWORD PTR [ebx+0x4]
65007ccb:	jmp    0x65007cd0
65007ccd:	lea    eax,[ebx+0x4]
65007cd0:	push   edx
65007cd1:	mov    edx,DWORD PTR [ecx+0x14]
65007cd4:	push   eax
65007cd5:	push   edx
65007cd6:	push   0x0
65007cd8:	call   0x650073c0
65007cdd:	test   eax,eax
65007cdf:	jge    0x65007d14
65007ce1:	mov    eax,DWORD PTR [esp+0x10]
65007ce5:	mov    ecx,DWORD PTR [esp+0x18]
65007ce9:	push   ebx
65007cea:	push   eax
65007ceb:	push   ecx
65007cec:	lea    edx,[esp+0x34]
65007cf0:	push   edx
65007cf1:	mov    ecx,edi
65007cf3:	call   0x65008510
65007cf8:	mov    ecx,eax
65007cfa:	mov    edx,DWORD PTR [ecx]
65007cfc:	mov    eax,DWORD PTR [ebp+0x8]
65007cff:	mov    ecx,DWORD PTR [ecx+0x4]
65007d02:	mov    DWORD PTR [eax+0x4],ecx
65007d05:	mov    BYTE PTR [eax+0x8],0x1
65007d09:	mov    DWORD PTR [eax],edx
65007d0b:	pop    edi
65007d0c:	pop    esi
65007d0d:	pop    ebx
65007d0e:	mov    esp,ebp
65007d10:	pop    ebp
65007d11:	ret    0x8
65007d14:	mov    eax,DWORD PTR [ebp+0x8]
65007d17:	mov    edx,DWORD PTR [esp+0x28]
65007d1b:	pop    edi
65007d1c:	mov    DWORD PTR [eax+0x4],esi
65007d1f:	pop    esi
65007d20:	mov    BYTE PTR [eax+0x8],0x0
65007d24:	mov    DWORD PTR [eax],edx
65007d26:	pop    ebx
65007d27:	mov    esp,ebp
65007d29:	pop    ebp
65007d2a:	ret    0x8
65007d2d:	int3   
65007d2e:	int3   
65007d2f:	int3   
65007d30:	sub    esp,0x18
65007d33:	push   ebx
65007d34:	mov    ebx,DWORD PTR [esp+0x24]
65007d38:	push   esi
65007d39:	push   edi
65007d3a:	push   ebx
65007d3b:	mov    esi,ecx
65007d3d:	call   0x65008d90
65007d42:	test   esi,esi
65007d44:	mov    edi,eax
65007d46:	mov    DWORD PTR [esp+0x14],edi
65007d4a:	jne    0x65007d51
65007d4c:	call   0x65012443
65007d51:	cmp    edi,DWORD PTR [esi+0x4]
65007d54:	mov    DWORD PTR [esp+0x10],esi
65007d58:	je     0x65007d84
65007d5a:	cmp    DWORD PTR [edi+0x24],0x10
65007d5e:	mov    eax,DWORD PTR [edi+0x20]
65007d61:	jb     0x65007d68
65007d63:	mov    edi,DWORD PTR [edi+0x10]
65007d66:	jmp    0x65007d6b
65007d68:	add    edi,0x10
65007d6b:	push   eax
65007d6c:	mov    eax,DWORD PTR [ebx+0x14]
65007d6f:	push   edi
65007d70:	push   eax
65007d71:	push   0x0
65007d73:	mov    ecx,ebx
65007d75:	call   0x650073c0
65007d7a:	test   eax,eax
65007d7c:	jl     0x65007d84
65007d7e:	lea    ecx,[esp+0x10]
65007d82:	jmp    0x65007d93
65007d84:	mov    ecx,DWORD PTR [esi+0x4]
65007d87:	mov    DWORD PTR [esp+0x1c],ecx
65007d8b:	mov    DWORD PTR [esp+0x18],esi
65007d8f:	lea    ecx,[esp+0x18]
65007d93:	mov    edx,DWORD PTR [ecx]
65007d95:	mov    eax,DWORD PTR [esp+0x28]
65007d99:	mov    ecx,DWORD PTR [ecx+0x4]
65007d9c:	pop    edi
65007d9d:	pop    esi
65007d9e:	mov    DWORD PTR [eax],edx
65007da0:	mov    DWORD PTR [eax+0x4],ecx
65007da3:	pop    ebx
65007da4:	add    esp,0x18
65007da7:	ret    0x8
65007daa:	int3   
65007dab:	int3   
65007dac:	int3   
65007dad:	int3   
65007dae:	int3   
65007daf:	int3   
65007db0:	push   esi
65007db1:	mov    esi,ecx
65007db3:	cmp    DWORD PTR [esi+0x18],0x8
65007db7:	jb     0x65007dc5
65007db9:	mov    eax,DWORD PTR [esi+0x4]
65007dbc:	push   eax
65007dbd:	call   0x650120d2
65007dc2:	add    esp,0x4
65007dc5:	xor    eax,eax
65007dc7:	mov    DWORD PTR [esi+0x18],0x7
65007dce:	mov    DWORD PTR [esi+0x14],eax
65007dd1:	mov    WORD PTR [esi+0x4],ax
65007dd5:	pop    esi
65007dd6:	ret    
65007dd7:	int3   
65007dd8:	int3   
65007dd9:	int3   
65007dda:	int3   
65007ddb:	int3   
65007ddc:	int3   
65007ddd:	int3   
65007dde:	int3   
65007ddf:	int3   
65007de0:	push   ebp
65007de1:	mov    ebp,esp
65007de3:	and    esp,0xfffffff8
65007de6:	sub    esp,0x14
65007de9:	mov    eax,DWORD PTR [ecx+0x4]
65007dec:	push   ebx
65007ded:	push   esi
65007dee:	mov    esi,DWORD PTR [eax+0x4]
65007df1:	cmp    BYTE PTR [esi+0x45],0x0
65007df5:	mov    ebx,eax
65007df7:	mov    al,0x1
65007df9:	push   edi
65007dfa:	mov    edi,DWORD PTR [ebp+0xc]
65007dfd:	mov    DWORD PTR [esp+0x14],ecx
65007e01:	mov    BYTE PTR [esp+0x10],al
65007e05:	jne    0x65007e47
65007e07:	cmp    DWORD PTR [esi+0x24],0x8
65007e0b:	mov    ecx,DWORD PTR [esi+0x20]
65007e0e:	mov    ebx,esi
65007e10:	jb     0x65007e17
65007e12:	mov    eax,DWORD PTR [esi+0x10]
65007e15:	jmp    0x65007e1a
65007e17:	lea    eax,[esi+0x10]
65007e1a:	push   ecx
65007e1b:	push   eax
65007e1c:	mov    eax,DWORD PTR [edi+0x14]
65007e1f:	push   eax
65007e20:	push   0x0
65007e22:	mov    ecx,edi
65007e24:	call   0x6500a230
65007e29:	test   eax,eax
65007e2b:	setl   al
65007e2e:	test   al,al
65007e30:	mov    BYTE PTR [esp+0x10],al
65007e34:	je     0x65007e3a
65007e36:	mov    esi,DWORD PTR [esi]
65007e38:	jmp    0x65007e3d
65007e3a:	mov    esi,DWORD PTR [esi+0x8]
65007e3d:	cmp    BYTE PTR [esi+0x45],0x0
65007e41:	je     0x65007e07
65007e43:	mov    ecx,DWORD PTR [esp+0x14]
65007e47:	test   al,al
65007e49:	mov    esi,ebx
65007e4b:	mov    DWORD PTR [esp+0x1c],esi
65007e4f:	mov    DWORD PTR [esp+0x18],ecx
65007e53:	je     0x65007e93
65007e55:	mov    edx,DWORD PTR [ecx+0x4]
65007e58:	cmp    ebx,DWORD PTR [edx]
65007e5a:	jne    0x65007e86
65007e5c:	push   edi
65007e5d:	push   ebx
65007e5e:	push   0x1
65007e60:	lea    eax,[esp+0x24]
65007e64:	push   eax
65007e65:	call   0x65008930
65007e6a:	mov    ecx,eax
65007e6c:	mov    edx,DWORD PTR [ecx]
65007e6e:	mov    eax,DWORD PTR [ebp+0x8]
65007e71:	mov    ecx,DWORD PTR [ecx+0x4]
65007e74:	mov    DWORD PTR [eax+0x4],ecx
65007e77:	mov    BYTE PTR [eax+0x8],0x1
65007e7b:	mov    DWORD PTR [eax],edx
65007e7d:	pop    edi
65007e7e:	pop    esi
65007e7f:	pop    ebx
65007e80:	mov    esp,ebp
65007e82:	pop    ebp
65007e83:	ret    0x8
65007e86:	lea    ecx,[esp+0x18]
65007e8a:	call   0x65009420
65007e8f:	mov    esi,DWORD PTR [esp+0x1c]
65007e93:	cmp    DWORD PTR [edi+0x18],0x8
65007e97:	mov    edx,DWORD PTR [edi+0x14]
65007e9a:	lea    ecx,[esi+0xc]
65007e9d:	jb     0x65007ea4
65007e9f:	mov    eax,DWORD PTR [edi+0x4]
65007ea2:	jmp    0x65007ea7
65007ea4:	lea    eax,[edi+0x4]
65007ea7:	push   edx
65007ea8:	mov    edx,DWORD PTR [ecx+0x14]
65007eab:	push   eax
65007eac:	push   edx
65007ead:	push   0x0
65007eaf:	call   0x6500a230
65007eb4:	test   eax,eax
65007eb6:	jge    0x65007eca
65007eb8:	mov    eax,DWORD PTR [esp+0x10]
65007ebc:	push   edi
65007ebd:	push   ebx
65007ebe:	lea    ecx,[esp+0x20]
65007ec2:	push   eax
65007ec3:	push   ecx
65007ec4:	mov    ecx,DWORD PTR [esp+0x24]
65007ec8:	jmp    0x65007e65
65007eca:	mov    eax,DWORD PTR [ebp+0x8]
65007ecd:	mov    edx,DWORD PTR [esp+0x18]
65007ed1:	pop    edi
65007ed2:	mov    DWORD PTR [eax+0x4],esi
65007ed5:	pop    esi
65007ed6:	mov    BYTE PTR [eax+0x8],0x0
65007eda:	mov    DWORD PTR [eax],edx
65007edc:	pop    ebx
65007edd:	mov    esp,ebp
65007edf:	pop    ebp
65007ee0:	ret    0x8
65007ee3:	int3   
65007ee4:	int3   
65007ee5:	int3   
65007ee6:	int3   
65007ee7:	int3   
65007ee8:	int3   
65007ee9:	int3   
65007eea:	int3   
65007eeb:	int3   
65007eec:	int3   
65007eed:	int3   
65007eee:	int3   
65007eef:	int3   
65007ef0:	sub    esp,0x18
65007ef3:	push   ebx
65007ef4:	mov    ebx,DWORD PTR [esp+0x24]
65007ef8:	push   esi
65007ef9:	push   edi
65007efa:	push   ebx
65007efb:	mov    esi,ecx
65007efd:	call   0x65001000
65007f02:	test   esi,esi
65007f04:	mov    edi,eax
65007f06:	mov    DWORD PTR [esp+0x14],edi
65007f0a:	jne    0x65007f11
65007f0c:	call   0x65012443
65007f11:	cmp    edi,DWORD PTR [esi+0x4]
65007f14:	mov    DWORD PTR [esp+0x10],esi
65007f18:	je     0x65007f44
65007f1a:	cmp    DWORD PTR [edi+0x24],0x8
65007f1e:	mov    eax,DWORD PTR [edi+0x20]
65007f21:	jb     0x65007f28
65007f23:	mov    edi,DWORD PTR [edi+0x10]
65007f26:	jmp    0x65007f2b
65007f28:	add    edi,0x10
65007f2b:	push   eax
65007f2c:	mov    eax,DWORD PTR [ebx+0x14]
65007f2f:	push   edi
65007f30:	push   eax
65007f31:	push   0x0
65007f33:	mov    ecx,ebx
65007f35:	call   0x6500a230
65007f3a:	test   eax,eax
65007f3c:	jl     0x65007f44
65007f3e:	lea    ecx,[esp+0x10]
65007f42:	jmp    0x65007f53
65007f44:	mov    ecx,DWORD PTR [esi+0x4]
65007f47:	mov    DWORD PTR [esp+0x1c],ecx
65007f4b:	mov    DWORD PTR [esp+0x18],esi
65007f4f:	lea    ecx,[esp+0x18]
65007f53:	mov    edx,DWORD PTR [ecx]
65007f55:	mov    eax,DWORD PTR [esp+0x28]
65007f59:	mov    ecx,DWORD PTR [ecx+0x4]
65007f5c:	pop    edi
65007f5d:	pop    esi
65007f5e:	mov    DWORD PTR [eax],edx
65007f60:	mov    DWORD PTR [eax+0x4],ecx
65007f63:	pop    ebx
65007f64:	add    esp,0x18
65007f67:	ret    0x8
65007f6a:	int3   
65007f6b:	int3   
65007f6c:	int3   
65007f6d:	int3   
65007f6e:	int3   
65007f6f:	int3   
65007f70:	mov    eax,DWORD PTR [esp+0x4]
65007f74:	push   esi
65007f75:	push   eax
65007f76:	mov    esi,ecx
65007f78:	call   0x65002e40
65007f7d:	mov    DWORD PTR [esi],0x65024c20
65007f83:	mov    eax,esi
65007f85:	pop    esi
65007f86:	ret    0x4
65007f89:	int3   
65007f8a:	int3   
65007f8b:	int3   
65007f8c:	int3   
65007f8d:	int3   
65007f8e:	int3   
65007f8f:	int3   
65007f90:	push   0xffffffff
65007f92:	push   0x650229d8
65007f97:	mov    eax,fs:0x0
65007f9d:	push   eax
65007f9e:	sub    esp,0x44
65007fa1:	push   ebx
65007fa2:	push   ebp
65007fa3:	push   esi
65007fa4:	push   edi
65007fa5:	mov    eax,ds:0x6502c09c
65007faa:	xor    eax,esp
65007fac:	push   eax
65007fad:	lea    eax,[esp+0x58]
65007fb1:	mov    fs:0x0,eax
65007fb7:	mov    eax,DWORD PTR [esp+0x74]
65007fbb:	cmp    BYTE PTR [eax+0x29],0x0
65007fbf:	je     0x6500800d
65007fc1:	push   0x1b
65007fc3:	xor    esi,esi
65007fc5:	push   0x65028248
65007fca:	lea    ecx,[esp+0x1c]
65007fce:	mov    DWORD PTR [esp+0x34],0xf
65007fd6:	mov    DWORD PTR [esp+0x30],esi
65007fda:	mov    BYTE PTR [esp+0x20],0x0
65007fdf:	call   0x650018c0
65007fe4:	lea    eax,[esp+0x14]
65007fe8:	push   eax
65007fe9:	lea    ecx,[esp+0x34]
65007fed:	mov    DWORD PTR [esp+0x64],esi
65007ff1:	call   0x65002d10
65007ff6:	push   0x6502a08c
65007ffb:	lea    ecx,[esp+0x34]
65007fff:	push   ecx
65008000:	mov    DWORD PTR [esp+0x38],0x65024c2c
65008008:	call   0x650124d6
6500800d:	lea    esi,[esp+0x70]
65008011:	mov    ebp,eax
65008013:	call   0x65007b30
65008018:	mov    eax,DWORD PTR [ebp+0x0]
6500801b:	cmp    BYTE PTR [eax+0x29],0x0
6500801f:	je     0x65008026
65008021:	mov    edi,DWORD PTR [ebp+0x8]
65008024:	jmp    0x6500803e
65008026:	mov    edx,DWORD PTR [ebp+0x8]
65008029:	cmp    BYTE PTR [edx+0x29],0x0
6500802d:	je     0x65008033
6500802f:	mov    edi,eax
65008031:	jmp    0x6500803e
65008033:	mov    ecx,DWORD PTR [esp+0x74]
65008037:	cmp    ecx,ebp
65008039:	mov    edi,DWORD PTR [ecx+0x8]
6500803c:	jne    0x650080b2
6500803e:	cmp    BYTE PTR [edi+0x29],0x0
65008042:	mov    esi,DWORD PTR [ebp+0x4]
65008045:	jne    0x6500804a
65008047:	mov    DWORD PTR [edi+0x4],esi
6500804a:	mov    ecx,DWORD PTR [esp+0x68]
6500804e:	mov    eax,DWORD PTR [ecx+0x4]
65008051:	cmp    DWORD PTR [eax+0x4],ebp
65008054:	jne    0x6500805b
65008056:	mov    DWORD PTR [eax+0x4],edi
65008059:	jmp    0x65008066
6500805b:	cmp    DWORD PTR [esi],ebp
6500805d:	jne    0x65008063
6500805f:	mov    DWORD PTR [esi],edi
65008061:	jmp    0x65008066
65008063:	mov    DWORD PTR [esi+0x8],edi
65008066:	mov    edx,DWORD PTR [ecx+0x4]
65008069:	cmp    DWORD PTR [edx],ebp
6500806b:	jne    0x6500808d
6500806d:	cmp    BYTE PTR [edi+0x29],0x0
65008071:	je     0x65008077
65008073:	mov    ecx,esi
65008075:	jmp    0x6500808b
65008077:	mov    eax,DWORD PTR [edi]
65008079:	cmp    BYTE PTR [eax+0x29],0x0
6500807d:	mov    ecx,edi
6500807f:	jne    0x6500808b
65008081:	mov    ecx,eax
65008083:	mov    eax,DWORD PTR [ecx]
65008085:	cmp    BYTE PTR [eax+0x29],0x0
65008089:	je     0x65008081
6500808b:	mov    DWORD PTR [edx],ecx
6500808d:	mov    eax,DWORD PTR [esp+0x68]
65008091:	mov    ebx,DWORD PTR [eax+0x4]
65008094:	cmp    DWORD PTR [ebx+0x8],ebp
65008097:	jne    0x6500810e
65008099:	cmp    BYTE PTR [edi+0x29],0x0
6500809d:	je     0x650080a6
6500809f:	mov    eax,esi
650080a1:	mov    DWORD PTR [ebx+0x8],eax
650080a4:	jmp    0x6500810e
650080a6:	mov    eax,edi
650080a8:	call   0x650083b0
650080ad:	mov    DWORD PTR [ebx+0x8],eax
650080b0:	jmp    0x6500810e
650080b2:	mov    DWORD PTR [eax+0x4],ecx
650080b5:	mov    edx,DWORD PTR [ebp+0x0]
650080b8:	mov    DWORD PTR [ecx],edx
650080ba:	cmp    ecx,DWORD PTR [ebp+0x8]
650080bd:	jne    0x650080c3
650080bf:	mov    esi,ecx
650080c1:	jmp    0x650080dd
650080c3:	cmp    BYTE PTR [edi+0x29],0x0
650080c7:	mov    esi,DWORD PTR [ecx+0x4]
650080ca:	jne    0x650080cf
650080cc:	mov    DWORD PTR [edi+0x4],esi
650080cf:	mov    DWORD PTR [esi],edi
650080d1:	mov    eax,DWORD PTR [ebp+0x8]
650080d4:	mov    DWORD PTR [ecx+0x8],eax
650080d7:	mov    edx,DWORD PTR [ebp+0x8]
650080da:	mov    DWORD PTR [edx+0x4],ecx
650080dd:	mov    eax,DWORD PTR [esp+0x68]
650080e1:	mov    eax,DWORD PTR [eax+0x4]
650080e4:	cmp    DWORD PTR [eax+0x4],ebp
650080e7:	jne    0x650080ee
650080e9:	mov    DWORD PTR [eax+0x4],ecx
650080ec:	jmp    0x650080fc
650080ee:	mov    eax,DWORD PTR [ebp+0x4]
650080f1:	cmp    DWORD PTR [eax],ebp
650080f3:	jne    0x650080f9
650080f5:	mov    DWORD PTR [eax],ecx
650080f7:	jmp    0x650080fc
650080f9:	mov    DWORD PTR [eax+0x8],ecx
650080fc:	mov    edx,DWORD PTR [ebp+0x4]
650080ff:	mov    DWORD PTR [ecx+0x4],edx
65008102:	mov    dl,BYTE PTR [ebp+0x28]
65008105:	mov    al,BYTE PTR [ecx+0x28]
65008108:	mov    BYTE PTR [ecx+0x28],dl
6500810b:	mov    BYTE PTR [ebp+0x28],al
6500810e:	mov    bl,0x1
65008110:	cmp    BYTE PTR [ebp+0x28],bl
65008113:	jne    0x6500823a
65008119:	mov    eax,DWORD PTR [esp+0x68]
6500811d:	mov    ecx,DWORD PTR [eax+0x4]
65008120:	cmp    edi,DWORD PTR [ecx+0x4]
65008123:	je     0x65008237
65008129:	lea    esp,[esp+0x0]
65008130:	cmp    BYTE PTR [edi+0x28],bl
65008133:	jne    0x65008237
65008139:	mov    ecx,DWORD PTR [esi]
6500813b:	cmp    edi,ecx
6500813d:	jne    0x650081b5
6500813f:	mov    ecx,DWORD PTR [esi+0x8]
65008142:	cmp    BYTE PTR [ecx+0x28],0x0
65008146:	jne    0x6500815e
65008148:	mov    edx,DWORD PTR [esp+0x68]
6500814c:	mov    BYTE PTR [ecx+0x28],bl
6500814f:	push   edx
65008150:	mov    ecx,esi
65008152:	mov    BYTE PTR [esi+0x28],0x0
65008156:	call   0x65008360
6500815b:	mov    ecx,DWORD PTR [esi+0x8]
6500815e:	cmp    BYTE PTR [ecx+0x29],0x0
65008162:	jne    0x650081e9
65008168:	mov    eax,DWORD PTR [ecx]
6500816a:	cmp    BYTE PTR [eax+0x28],bl
6500816d:	jne    0x65008177
6500816f:	mov    edx,DWORD PTR [ecx+0x8]
65008172:	cmp    BYTE PTR [edx+0x28],bl
65008175:	je     0x650081e5
65008177:	mov    eax,DWORD PTR [ecx+0x8]
6500817a:	cmp    BYTE PTR [eax+0x28],bl
6500817d:	jne    0x65008195
6500817f:	mov    edx,DWORD PTR [ecx]
65008181:	mov    eax,DWORD PTR [esp+0x68]
65008185:	mov    BYTE PTR [edx+0x28],bl
65008188:	push   eax
65008189:	mov    BYTE PTR [ecx+0x28],0x0
6500818d:	call   0x650083d0
65008192:	mov    ecx,DWORD PTR [esi+0x8]
65008195:	mov    dl,BYTE PTR [esi+0x28]
65008198:	mov    BYTE PTR [ecx+0x28],dl
6500819b:	mov    BYTE PTR [esi+0x28],bl
6500819e:	mov    eax,DWORD PTR [ecx+0x8]
650081a1:	mov    ecx,DWORD PTR [esp+0x68]
650081a5:	push   ecx
650081a6:	mov    ecx,esi
650081a8:	mov    BYTE PTR [eax+0x28],bl
650081ab:	call   0x65008360
650081b0:	jmp    0x65008237
650081b5:	cmp    BYTE PTR [ecx+0x28],0x0
650081b9:	jne    0x650081d0
650081bb:	mov    eax,DWORD PTR [esp+0x68]
650081bf:	mov    BYTE PTR [ecx+0x28],bl
650081c2:	push   eax
650081c3:	mov    ecx,esi
650081c5:	mov    BYTE PTR [esi+0x28],0x0
650081c9:	call   0x650083d0
650081ce:	mov    ecx,DWORD PTR [esi]
650081d0:	cmp    BYTE PTR [ecx+0x29],0x0
650081d4:	jne    0x650081e9
650081d6:	mov    edx,DWORD PTR [ecx+0x8]
650081d9:	cmp    BYTE PTR [edx+0x28],bl
650081dc:	jne    0x65008200
650081de:	mov    eax,DWORD PTR [ecx]
650081e0:	cmp    BYTE PTR [eax+0x28],bl
650081e3:	jne    0x65008200
650081e5:	mov    BYTE PTR [ecx+0x28],0x0
650081e9:	mov    ecx,DWORD PTR [esp+0x68]
650081ed:	mov    edx,DWORD PTR [ecx+0x4]
650081f0:	mov    edi,esi
650081f2:	cmp    edi,DWORD PTR [edx+0x4]
650081f5:	mov    esi,DWORD PTR [esi+0x4]
650081f8:	jne    0x65008130
650081fe:	jmp    0x65008237
65008200:	mov    edx,DWORD PTR [ecx]
65008202:	cmp    BYTE PTR [edx+0x28],bl
65008205:	jne    0x6500821d
65008207:	mov    eax,DWORD PTR [ecx+0x8]
6500820a:	mov    edx,DWORD PTR [esp+0x68]
6500820e:	mov    BYTE PTR [eax+0x28],bl
65008211:	push   edx
65008212:	mov    BYTE PTR [ecx+0x28],0x0
65008216:	call   0x65008360
6500821b:	mov    ecx,DWORD PTR [esi]
6500821d:	mov    al,BYTE PTR [esi+0x28]
65008220:	mov    edx,DWORD PTR [esp+0x68]
65008224:	mov    BYTE PTR [ecx+0x28],al
65008227:	mov    BYTE PTR [esi+0x28],bl
6500822a:	mov    ecx,DWORD PTR [ecx]
6500822c:	mov    BYTE PTR [ecx+0x28],bl
6500822f:	push   edx
65008230:	mov    ecx,esi
65008232:	call   0x650083d0
65008237:	mov    BYTE PTR [edi+0x28],bl
6500823a:	cmp    DWORD PTR [ebp+0x24],0x10
6500823e:	jb     0x6500824c
65008240:	mov    eax,DWORD PTR [ebp+0x10]
65008243:	push   eax
65008244:	call   0x650120d2
65008249:	add    esp,0x4
6500824c:	mov    DWORD PTR [ebp+0x24],0xf
65008253:	mov    DWORD PTR [ebp+0x20],0x0
6500825a:	push   ebp
6500825b:	mov    BYTE PTR [ebp+0x10],0x0
6500825f:	call   0x650120d2
65008264:	mov    ecx,DWORD PTR [esp+0x6c]
65008268:	mov    eax,DWORD PTR [ecx+0x8]
6500826b:	add    esp,0x4
6500826e:	test   eax,eax
65008270:	jbe    0x65008278
65008272:	add    eax,0xffffffff
65008275:	mov    DWORD PTR [ecx+0x8],eax
65008278:	mov    eax,DWORD PTR [esp+0x6c]
6500827c:	mov    ecx,DWORD PTR [esp+0x70]
65008280:	mov    edx,DWORD PTR [esp+0x74]
65008284:	mov    DWORD PTR [eax],ecx
65008286:	mov    DWORD PTR [eax+0x4],edx
65008289:	mov    ecx,DWORD PTR [esp+0x58]
6500828d:	mov    DWORD PTR fs:0x0,ecx
65008294:	pop    ecx
65008295:	pop    edi
65008296:	pop    esi
65008297:	pop    ebp
65008298:	pop    ebx
65008299:	add    esp,0x50
6500829c:	ret    0x10
6500829f:	int3   
650082a0:	push   ebp
650082a1:	mov    ebp,esp
650082a3:	push   0xffffffff
650082a5:	push   0x65022590
650082aa:	mov    eax,fs:0x0
650082b0:	push   eax
650082b1:	sub    esp,0xc
650082b4:	push   ebx
650082b5:	push   esi
650082b6:	push   edi
650082b7:	mov    eax,ds:0x6502c09c
650082bc:	xor    eax,ebp
650082be:	push   eax
650082bf:	lea    eax,[ebp-0xc]
650082c2:	mov    fs:0x0,eax
650082c8:	mov    DWORD PTR [ebp-0x10],esp
650082cb:	mov    ebx,ecx
650082cd:	mov    DWORD PTR [ebp-0x18],ebx
650082d0:	mov    edi,DWORD PTR [ebp+0x8]
650082d3:	cmp    BYTE PTR [edi+0x29],0x0
650082d7:	mov    eax,DWORD PTR [ebx+0x4]
650082da:	mov    DWORD PTR [ebp-0x14],eax
650082dd:	jne    0x65008324
650082df:	movzx  ecx,BYTE PTR [edi+0x28]
650082e3:	push   ecx
650082e4:	mov    ecx,DWORD PTR [ebp+0xc]
650082e7:	lea    edx,[edi+0xc]
650082ea:	push   edx
650082eb:	push   eax
650082ec:	push   ecx
650082ed:	push   eax
650082ee:	call   0x65008460
650082f3:	mov    edx,DWORD PTR [ebp-0x14]
650082f6:	cmp    BYTE PTR [edx+0x29],0x0
650082fa:	mov    esi,eax
650082fc:	je     0x65008301
650082fe:	mov    DWORD PTR [ebp-0x14],esi
65008301:	mov    DWORD PTR [ebp-0x4],0x0
65008308:	mov    eax,DWORD PTR [edi]
6500830a:	push   esi
6500830b:	push   eax
6500830c:	mov    ecx,ebx
6500830e:	call   0x650082a0
65008313:	mov    DWORD PTR [esi],eax
65008315:	mov    ecx,DWORD PTR [edi+0x8]
65008318:	push   esi
65008319:	push   ecx
6500831a:	mov    ecx,ebx
6500831c:	call   0x650082a0
65008321:	mov    DWORD PTR [esi+0x8],eax
65008324:	mov    eax,DWORD PTR [ebp-0x14]
65008327:	mov    ecx,DWORD PTR [ebp-0xc]
6500832a:	mov    DWORD PTR fs:0x0,ecx
65008331:	pop    ecx
65008332:	pop    edi
65008333:	pop    esi
65008334:	pop    ebx
65008335:	mov    esp,ebp
65008337:	pop    ebp
65008338:	ret    0x8
6500833b:	mov    edx,DWORD PTR [ebp-0x14]
6500833e:	mov    ecx,DWORD PTR [ebp-0x18]
65008341:	push   edx
65008342:	call   0x65008b80
65008347:	push   0x0
65008349:	push   0x0
6500834b:	call   0x650124d6
65008350:	int3   
65008351:	int3   
65008352:	int3   
65008353:	int3   
65008354:	int3   
65008355:	int3   
65008356:	int3   
65008357:	int3   
65008358:	int3   
65008359:	int3   
6500835a:	int3   
6500835b:	int3   
6500835c:	int3   
6500835d:	int3   
6500835e:	int3   
6500835f:	int3   
65008360:	mov    eax,DWORD PTR [ecx+0x8]
65008363:	mov    edx,DWORD PTR [eax]
65008365:	mov    DWORD PTR [ecx+0x8],edx
65008368:	mov    edx,DWORD PTR [eax]
6500836a:	cmp    BYTE PTR [edx+0x29],0x0
6500836e:	jne    0x65008373
65008370:	mov    DWORD PTR [edx+0x4],ecx
65008373:	mov    edx,DWORD PTR [ecx+0x4]
65008376:	mov    DWORD PTR [eax+0x4],edx
65008379:	mov    edx,DWORD PTR [esp+0x4]
6500837d:	mov    edx,DWORD PTR [edx+0x4]
65008380:	cmp    ecx,DWORD PTR [edx+0x4]
65008383:	jne    0x65008390
65008385:	mov    DWORD PTR [edx+0x4],eax
65008388:	mov    DWORD PTR [eax],ecx
6500838a:	mov    DWORD PTR [ecx+0x4],eax
6500838d:	ret    0x4
65008390:	mov    edx,DWORD PTR [ecx+0x4]
65008393:	cmp    ecx,DWORD PTR [edx]
65008395:	jne    0x650083a1
65008397:	mov    DWORD PTR [edx],eax
65008399:	mov    DWORD PTR [eax],ecx
6500839b:	mov    DWORD PTR [ecx+0x4],eax
6500839e:	ret    0x4
650083a1:	mov    DWORD PTR [edx+0x8],eax
650083a4:	mov    DWORD PTR [eax],ecx
650083a6:	mov    DWORD PTR [ecx+0x4],eax
650083a9:	ret    0x4
650083ac:	int3   
650083ad:	int3   
650083ae:	int3   
650083af:	int3   
650083b0:	mov    ecx,DWORD PTR [eax+0x8]
650083b3:	cmp    BYTE PTR [ecx+0x29],0x0
650083b7:	jne    0x650083cb
650083b9:	lea    esp,[esp+0x0]
650083c0:	mov    eax,ecx
650083c2:	mov    ecx,DWORD PTR [eax+0x8]
650083c5:	cmp    BYTE PTR [ecx+0x29],0x0
650083c9:	je     0x650083c0
650083cb:	ret    
650083cc:	int3   
650083cd:	int3   
650083ce:	int3   
650083cf:	int3   
650083d0:	mov    eax,DWORD PTR [ecx]
650083d2:	mov    edx,DWORD PTR [eax+0x8]
650083d5:	mov    DWORD PTR [ecx],edx
650083d7:	mov    edx,DWORD PTR [eax+0x8]
650083da:	cmp    BYTE PTR [edx+0x29],0x0
650083de:	jne    0x650083e3
650083e0:	mov    DWORD PTR [edx+0x4],ecx
650083e3:	mov    edx,DWORD PTR [ecx+0x4]
650083e6:	mov    DWORD PTR [eax+0x4],edx
650083e9:	mov    edx,DWORD PTR [esp+0x4]
650083ed:	mov    edx,DWORD PTR [edx+0x4]
650083f0:	cmp    ecx,DWORD PTR [edx+0x4]
650083f3:	jne    0x65008401
650083f5:	mov    DWORD PTR [edx+0x4],eax
650083f8:	mov    DWORD PTR [eax+0x8],ecx
650083fb:	mov    DWORD PTR [ecx+0x4],eax
650083fe:	ret    0x4
65008401:	mov    edx,DWORD PTR [ecx+0x4]
65008404:	cmp    ecx,DWORD PTR [edx+0x8]
65008407:	jne    0x65008415
65008409:	mov    DWORD PTR [edx+0x8],eax
6500840c:	mov    DWORD PTR [eax+0x8],ecx
6500840f:	mov    DWORD PTR [ecx+0x4],eax
65008412:	ret    0x4
65008415:	mov    DWORD PTR [edx],eax
65008417:	mov    DWORD PTR [eax+0x8],ecx
6500841a:	mov    DWORD PTR [ecx+0x4],eax
6500841d:	ret    0x4
65008420:	push   0x2c
65008422:	call   0x6501246c
65008427:	add    esp,0x4
6500842a:	test   eax,eax
6500842c:	je     0x65008434
6500842e:	mov    DWORD PTR [eax],0x0
65008434:	lea    ecx,[eax+0x4]
65008437:	test   ecx,ecx
65008439:	je     0x65008441
6500843b:	mov    DWORD PTR [ecx],0x0
65008441:	lea    ecx,[eax+0x8]
65008444:	test   ecx,ecx
65008446:	je     0x6500844e
65008448:	mov    DWORD PTR [ecx],0x0
6500844e:	mov    BYTE PTR [eax+0x28],0x1
65008452:	mov    BYTE PTR [eax+0x29],0x0
65008456:	ret    
65008457:	int3   
65008458:	int3   
65008459:	int3   
6500845a:	int3   
6500845b:	int3   
6500845c:	int3   
6500845d:	int3   
6500845e:	int3   
6500845f:	int3   
65008460:	push   ebp
65008461:	mov    ebp,esp
65008463:	push   0xffffffff
65008465:	push   0x65022571
6500846a:	mov    eax,fs:0x0
65008470:	push   eax
65008471:	sub    esp,0xc
65008474:	push   ebx
65008475:	push   esi
65008476:	push   edi
65008477:	mov    eax,ds:0x6502c09c
6500847c:	xor    eax,ebp
6500847e:	push   eax
6500847f:	lea    eax,[ebp-0xc]
65008482:	mov    fs:0x0,eax
65008488:	mov    DWORD PTR [ebp-0x10],esp
6500848b:	push   0x2c
6500848d:	call   0x6501246c
65008492:	mov    esi,eax
65008494:	xor    ebx,ebx
65008496:	mov    DWORD PTR [ebp-0x4],ebx
65008499:	add    esp,0x4
6500849c:	mov    DWORD PTR [ebp-0x14],esi
6500849f:	mov    DWORD PTR [ebp-0x18],esi
650084a2:	cmp    esi,ebx
650084a4:	mov    BYTE PTR [ebp-0x4],0x1
650084a8:	je     0x650084e0
650084aa:	mov    eax,DWORD PTR [ebp+0x8]
650084ad:	mov    ecx,DWORD PTR [ebp+0xc]
650084b0:	mov    edx,DWORD PTR [ebp+0x10]
650084b3:	mov    DWORD PTR [esi],eax
650084b5:	mov    eax,DWORD PTR [ebp+0x14]
650084b8:	mov    DWORD PTR [esi+0x4],ecx
650084bb:	push   0xffffffff
650084bd:	lea    ecx,[esi+0xc]
650084c0:	mov    DWORD PTR [esi+0x8],edx
650084c3:	push   ebx
650084c4:	mov    DWORD PTR [ecx+0x18],0xf
650084cb:	mov    DWORD PTR [ecx+0x14],ebx
650084ce:	push   eax
650084cf:	mov    BYTE PTR [ecx+0x4],bl
650084d2:	call   0x650017e0
650084d7:	mov    cl,BYTE PTR [ebp+0x18]
650084da:	mov    BYTE PTR [esi+0x28],cl
650084dd:	mov    BYTE PTR [esi+0x29],bl
650084e0:	mov    eax,esi
650084e2:	mov    ecx,DWORD PTR [ebp-0xc]
650084e5:	mov    DWORD PTR fs:0x0,ecx
650084ec:	pop    ecx
650084ed:	pop    edi
650084ee:	pop    esi
650084ef:	pop    ebx
650084f0:	mov    esp,ebp
650084f2:	pop    ebp
650084f3:	ret    0x14
650084f6:	mov    edx,DWORD PTR [ebp-0x14]
650084f9:	push   edx
650084fa:	call   0x650120d2
650084ff:	add    esp,0x4
65008502:	xor    ebx,ebx
65008504:	push   ebx
65008505:	push   ebx
65008506:	call   0x650124d6
6500850b:	int3   
6500850c:	int3   
6500850d:	int3   
6500850e:	int3   
6500850f:	int3   
65008510:	push   ebp
65008511:	mov    ebp,esp
65008513:	and    esp,0xfffffff8
65008516:	push   0xffffffff
65008518:	push   0x650229a8
6500851d:	mov    eax,fs:0x0
65008523:	push   eax
65008524:	sub    esp,0x50
65008527:	push   ebx
65008528:	push   esi
65008529:	push   edi
6500852a:	mov    eax,ds:0x6502c09c
6500852f:	xor    eax,esp
65008531:	push   eax
65008532:	lea    eax,[esp+0x60]
65008536:	mov    fs:0x0,eax
6500853c:	mov    edi,ecx
6500853e:	xor    ebx,ebx
65008540:	cmp    DWORD PTR [edi+0x8],0x4924923
65008547:	jb     0x65008592
65008549:	push   0x13
6500854b:	push   0x65028234
65008550:	lea    ecx,[esp+0x20]
65008554:	mov    DWORD PTR [esp+0x38],0xf
6500855c:	mov    DWORD PTR [esp+0x34],ebx
65008560:	mov    BYTE PTR [esp+0x24],bl
65008564:	call   0x650018c0
65008569:	lea    eax,[esp+0x18]
6500856d:	push   eax
6500856e:	lea    ecx,[esp+0x38]
65008572:	mov    DWORD PTR [esp+0x6c],ebx
65008576:	call   0x65002d10
6500857b:	push   0x6502a0c8
65008580:	lea    ecx,[esp+0x38]
65008584:	push   ecx
65008585:	mov    DWORD PTR [esp+0x3c],0x65024c20
6500858d:	call   0x650124d6
65008592:	mov    edx,DWORD PTR [ebp+0x14]
65008595:	mov    eax,DWORD PTR [edi+0x4]
65008598:	mov    esi,DWORD PTR [ebp+0x10]
6500859b:	push   ebx
6500859c:	push   edx
6500859d:	push   eax
6500859e:	push   esi
6500859f:	push   eax
650085a0:	call   0x65008e20
650085a5:	add    DWORD PTR [edi+0x8],0x1
650085a9:	mov    ecx,eax
650085ab:	mov    eax,DWORD PTR [edi+0x4]
650085ae:	cmp    esi,eax
650085b0:	mov    DWORD PTR [esp+0x14],ecx
650085b4:	jne    0x650085c6
650085b6:	mov    DWORD PTR [eax+0x4],ecx
650085b9:	mov    eax,DWORD PTR [edi+0x4]
650085bc:	mov    DWORD PTR [eax],ecx
650085be:	mov    edx,DWORD PTR [edi+0x4]
650085c1:	mov    DWORD PTR [edx+0x8],ecx
650085c4:	jmp    0x650085e6
650085c6:	cmp    BYTE PTR [ebp+0xc],bl
650085c9:	je     0x650085d8
650085cb:	mov    DWORD PTR [esi],ecx
650085cd:	mov    eax,DWORD PTR [edi+0x4]
650085d0:	cmp    esi,DWORD PTR [eax]
650085d2:	jne    0x650085e6
650085d4:	mov    DWORD PTR [eax],ecx
650085d6:	jmp    0x650085e6
650085d8:	mov    DWORD PTR [esi+0x8],ecx
650085db:	mov    eax,DWORD PTR [edi+0x4]
650085de:	cmp    esi,DWORD PTR [eax+0x8]
650085e1:	jne    0x650085e6
650085e3:	mov    DWORD PTR [eax+0x8],ecx
650085e6:	mov    edx,DWORD PTR [ecx+0x4]
650085e9:	cmp    BYTE PTR [edx+0x44],bl
650085ec:	lea    eax,[ecx+0x4]
650085ef:	mov    esi,ecx
650085f1:	jne    0x65008732
650085f7:	mov    ecx,DWORD PTR [eax]
650085f9:	mov    edx,DWORD PTR [ecx+0x4]
650085fc:	cmp    ecx,DWORD PTR [edx]
650085fe:	jne    0x650086a5
65008604:	mov    edx,DWORD PTR [edx+0x8]
65008607:	cmp    BYTE PTR [edx+0x44],bl
6500860a:	je     0x650086ac
65008610:	cmp    esi,DWORD PTR [ecx+0x8]
65008613:	jne    0x65008650
65008615:	mov    esi,ecx
65008617:	mov    ecx,DWORD PTR [esi+0x8]
6500861a:	mov    eax,DWORD PTR [ecx]
6500861c:	mov    DWORD PTR [esi+0x8],eax
6500861f:	mov    eax,DWORD PTR [ecx]
65008621:	cmp    BYTE PTR [eax+0x45],bl
65008624:	jne    0x65008629
65008626:	mov    DWORD PTR [eax+0x4],esi
65008629:	mov    edx,DWORD PTR [esi+0x4]
6500862c:	lea    eax,[esi+0x4]
6500862f:	mov    DWORD PTR [ecx+0x4],edx
65008632:	mov    edx,DWORD PTR [edi+0x4]
65008635:	cmp    esi,DWORD PTR [edx+0x4]
65008638:	jne    0x6500863f
6500863a:	mov    DWORD PTR [edx+0x4],ecx
6500863d:	jmp    0x6500864c
6500863f:	mov    edx,DWORD PTR [eax]
65008641:	cmp    esi,DWORD PTR [edx]
65008643:	jne    0x65008649
65008645:	mov    DWORD PTR [edx],ecx
65008647:	jmp    0x6500864c
65008649:	mov    DWORD PTR [edx+0x8],ecx
6500864c:	mov    DWORD PTR [ecx],esi
6500864e:	mov    DWORD PTR [eax],ecx
65008650:	mov    ecx,DWORD PTR [eax]
65008652:	mov    BYTE PTR [ecx+0x44],0x1
65008656:	mov    edx,DWORD PTR [eax]
65008658:	mov    ecx,DWORD PTR [edx+0x4]
6500865b:	mov    BYTE PTR [ecx+0x44],bl
6500865e:	mov    edx,DWORD PTR [eax]
65008660:	mov    eax,DWORD PTR [edx+0x4]
65008663:	mov    ecx,DWORD PTR [eax]
65008665:	mov    edx,DWORD PTR [ecx+0x8]
65008668:	mov    DWORD PTR [eax],edx
6500866a:	mov    edx,DWORD PTR [ecx+0x8]
6500866d:	cmp    BYTE PTR [edx+0x45],bl
65008670:	jne    0x65008675
65008672:	mov    DWORD PTR [edx+0x4],eax
65008675:	mov    edx,DWORD PTR [eax+0x4]
65008678:	mov    DWORD PTR [ecx+0x4],edx
6500867b:	mov    edx,DWORD PTR [edi+0x4]
6500867e:	cmp    eax,DWORD PTR [edx+0x4]
65008681:	jne    0x6500868e
65008683:	mov    DWORD PTR [edx+0x4],ecx
65008686:	mov    DWORD PTR [ecx+0x8],eax
65008689:	jmp    0x6500871c
6500868e:	mov    edx,DWORD PTR [eax+0x4]
65008691:	cmp    eax,DWORD PTR [edx+0x8]
65008694:	jne    0x6500869e
65008696:	mov    DWORD PTR [edx+0x8],ecx
65008699:	mov    DWORD PTR [ecx+0x8],eax
6500869c:	jmp    0x6500871c
6500869e:	mov    DWORD PTR [edx],ecx
650086a0:	mov    DWORD PTR [ecx+0x8],eax
650086a3:	jmp    0x6500871c
650086a5:	mov    edx,DWORD PTR [edx]
650086a7:	cmp    BYTE PTR [edx+0x44],bl
650086aa:	jne    0x650086c3
650086ac:	mov    BYTE PTR [ecx+0x44],0x1
650086b0:	mov    BYTE PTR [edx+0x44],0x1
650086b4:	mov    edx,DWORD PTR [eax]
650086b6:	mov    ecx,DWORD PTR [edx+0x4]
650086b9:	mov    BYTE PTR [ecx+0x44],bl
650086bc:	mov    edx,DWORD PTR [eax]
650086be:	mov    esi,DWORD PTR [edx+0x4]
650086c1:	jmp    0x6500871f
650086c3:	cmp    esi,DWORD PTR [ecx]
650086c5:	jne    0x650086d1
650086c7:	mov    esi,ecx
650086c9:	push   esi
650086ca:	mov    ecx,edi
650086cc:	call   0x65008fb0
650086d1:	mov    eax,DWORD PTR [esi+0x4]
650086d4:	mov    BYTE PTR [eax+0x44],0x1
650086d8:	mov    ecx,DWORD PTR [esi+0x4]
650086db:	mov    edx,DWORD PTR [ecx+0x4]
650086de:	mov    BYTE PTR [edx+0x44],bl
650086e1:	mov    eax,DWORD PTR [esi+0x4]
650086e4:	mov    eax,DWORD PTR [eax+0x4]
650086e7:	mov    ecx,DWORD PTR [eax+0x8]
650086ea:	mov    edx,DWORD PTR [ecx]
650086ec:	mov    DWORD PTR [eax+0x8],edx
650086ef:	mov    edx,DWORD PTR [ecx]
650086f1:	cmp    BYTE PTR [edx+0x45],bl
650086f4:	jne    0x650086f9
650086f6:	mov    DWORD PTR [edx+0x4],eax
650086f9:	mov    edx,DWORD PTR [eax+0x4]
650086fc:	mov    DWORD PTR [ecx+0x4],edx
650086ff:	mov    edx,DWORD PTR [edi+0x4]
65008702:	cmp    eax,DWORD PTR [edx+0x4]
65008705:	jne    0x6500870c
65008707:	mov    DWORD PTR [edx+0x4],ecx
6500870a:	jmp    0x6500871a
6500870c:	mov    edx,DWORD PTR [eax+0x4]
6500870f:	cmp    eax,DWORD PTR [edx]
65008711:	jne    0x65008717
65008713:	mov    DWORD PTR [edx],ecx
65008715:	jmp    0x6500871a
65008717:	mov    DWORD PTR [edx+0x8],ecx
6500871a:	mov    DWORD PTR [ecx],eax
6500871c:	mov    DWORD PTR [eax+0x4],ecx
6500871f:	mov    ecx,DWORD PTR [esi+0x4]
65008722:	cmp    BYTE PTR [ecx+0x44],bl
65008725:	lea    eax,[esi+0x4]
65008728:	je     0x650085f7
6500872e:	mov    ecx,DWORD PTR [esp+0x14]
65008732:	mov    edx,DWORD PTR [edi+0x4]
65008735:	mov    eax,DWORD PTR [edx+0x4]
65008738:	mov    BYTE PTR [eax+0x44],0x1
6500873c:	mov    eax,DWORD PTR [ebp+0x8]
6500873f:	mov    DWORD PTR [eax+0x4],ecx
65008742:	mov    DWORD PTR [eax],edi
65008744:	mov    ecx,DWORD PTR [esp+0x60]
65008748:	mov    DWORD PTR fs:0x0,ecx
6500874f:	pop    ecx
65008750:	pop    edi
65008751:	pop    esi
65008752:	pop    ebx
65008753:	mov    esp,ebp
65008755:	pop    ebp
65008756:	ret    0x10
65008759:	int3   
6500875a:	int3   
6500875b:	int3   
6500875c:	int3   
6500875d:	int3   
6500875e:	int3   
6500875f:	int3   
65008760:	push   ebx
65008761:	mov    ebx,DWORD PTR [esp+0xc]
65008765:	push   ebp
65008766:	mov    ebp,DWORD PTR [esp+0xc]
6500876a:	cmp    DWORD PTR [ebp+0x14],ebx
6500876d:	push   esi
6500876e:	push   edi
6500876f:	mov    esi,ecx
65008771:	jae    0x65008778
65008773:	call   0x6501208e
65008778:	mov    edi,DWORD PTR [ebp+0x14]
6500877b:	mov    eax,DWORD PTR [esp+0x1c]
6500877f:	sub    edi,ebx
65008781:	cmp    eax,edi
65008783:	jae    0x65008787
65008785:	mov    edi,eax
65008787:	cmp    esi,ebp
65008789:	jne    0x650087aa
6500878b:	push   0xffffffff
6500878d:	add    edi,ebx
6500878f:	push   edi
65008790:	mov    ecx,esi
65008792:	call   0x65008ec0
65008797:	push   ebx
65008798:	push   0x0
6500879a:	mov    ecx,esi
6500879c:	call   0x65008ec0
650087a1:	pop    edi
650087a2:	mov    eax,esi
650087a4:	pop    esi
650087a5:	pop    ebp
650087a6:	pop    ebx
650087a7:	ret    0xc
650087aa:	cmp    edi,0x7ffffffe
650087b0:	jbe    0x650087b7
650087b2:	call   0x6501204f
650087b7:	mov    eax,DWORD PTR [esi+0x18]
650087ba:	cmp    eax,edi
650087bc:	jae    0x650087d9
650087be:	mov    eax,DWORD PTR [esi+0x14]
650087c1:	push   eax
650087c2:	push   edi
650087c3:	mov    ecx,esi
650087c5:	call   0x650091c0
650087ca:	test   edi,edi
650087cc:	jbe    0x65008846
650087ce:	cmp    DWORD PTR [ebp+0x18],0x8
650087d2:	jb     0x65008805
650087d4:	mov    ecx,DWORD PTR [ebp+0x4]
650087d7:	jmp    0x65008808
650087d9:	test   edi,edi
650087db:	jne    0x650087cc
650087dd:	cmp    eax,0x8
650087e0:	mov    DWORD PTR [esi+0x14],edi
650087e3:	jb     0x650087f4
650087e5:	mov    eax,DWORD PTR [esi+0x4]
650087e8:	mov    WORD PTR [eax],di
650087eb:	pop    edi
650087ec:	mov    eax,esi
650087ee:	pop    esi
650087ef:	pop    ebp
650087f0:	pop    ebx
650087f1:	ret    0xc
650087f4:	lea    eax,[esi+0x4]
650087f7:	pop    edi
650087f8:	mov    WORD PTR [eax],0x0
650087fd:	mov    eax,esi
650087ff:	pop    esi
65008800:	pop    ebp
65008801:	pop    ebx
65008802:	ret    0xc
65008805:	lea    ecx,[ebp+0x4]
65008808:	cmp    DWORD PTR [esi+0x18],0x8
6500880c:	lea    ebp,[esi+0x4]
6500880f:	jb     0x65008816
65008811:	mov    eax,DWORD PTR [ebp+0x0]
65008814:	jmp    0x65008818
65008816:	mov    eax,ebp
65008818:	mov    edx,DWORD PTR [esp+0x18]
6500881c:	lea    ecx,[ecx+edx*2]
6500881f:	lea    ebx,[edi+edi*1]
65008822:	push   ebx
65008823:	push   ecx
65008824:	mov    ecx,DWORD PTR [esi+0x18]
65008827:	lea    edx,[ecx+ecx*1]
6500882a:	push   edx
6500882b:	push   eax
6500882c:	call   0x65012243
65008831:	add    esp,0x10
65008834:	cmp    DWORD PTR [esi+0x18],0x8
65008838:	mov    DWORD PTR [esi+0x14],edi
6500883b:	jb     0x65008840
6500883d:	mov    ebp,DWORD PTR [ebp+0x0]
65008840:	mov    WORD PTR [ebx+ebp*1],0x0
65008846:	pop    edi
65008847:	mov    eax,esi
65008849:	pop    esi
6500884a:	pop    ebp
6500884b:	pop    ebx
6500884c:	ret    0xc
6500884f:	int3   
65008850:	push   ebp
65008851:	push   esi
65008852:	mov    esi,ecx
65008854:	mov    edx,DWORD PTR [esi+0x18]
65008857:	cmp    edx,0x8
6500885a:	push   edi
6500885b:	lea    ebp,[esi+0x4]
6500885e:	jb     0x65008865
65008860:	mov    ecx,DWORD PTR [ebp+0x0]
65008863:	jmp    0x65008867
65008865:	mov    ecx,ebp
65008867:	mov    eax,DWORD PTR [esp+0x10]
6500886b:	cmp    eax,ecx
6500886d:	jb     0x650088a5
6500886f:	cmp    edx,0x8
65008872:	jb     0x65008879
65008874:	mov    ecx,DWORD PTR [ebp+0x0]
65008877:	jmp    0x6500887b
65008879:	mov    ecx,ebp
6500887b:	mov    edi,DWORD PTR [esi+0x14]
6500887e:	lea    ecx,[ecx+edi*2]
65008881:	cmp    ecx,eax
65008883:	jbe    0x650088a5
65008885:	cmp    edx,0x8
65008888:	jb     0x6500888d
6500888a:	mov    ebp,DWORD PTR [ebp+0x0]
6500888d:	mov    edx,DWORD PTR [esp+0x14]
65008891:	sub    eax,ebp
65008893:	push   edx
65008894:	sar    eax,1
65008896:	push   eax
65008897:	push   esi
65008898:	mov    ecx,esi
6500889a:	call   0x65008760
6500889f:	pop    edi
650088a0:	pop    esi
650088a1:	pop    ebp
650088a2:	ret    0x8
650088a5:	mov    edi,DWORD PTR [esp+0x14]
650088a9:	cmp    edi,0x7ffffffe
650088af:	jbe    0x650088b6
650088b1:	call   0x6501204f
650088b6:	mov    eax,DWORD PTR [esi+0x18]
650088b9:	cmp    eax,edi
650088bb:	jae    0x650088da
650088bd:	mov    eax,DWORD PTR [esi+0x14]
650088c0:	push   eax
650088c1:	push   edi
650088c2:	mov    ecx,esi
650088c4:	call   0x650091c0
650088c9:	test   edi,edi
650088cb:	jbe    0x65008922
650088cd:	mov    ecx,DWORD PTR [esi+0x18]
650088d0:	cmp    ecx,0x8
650088d3:	jb     0x650088f7
650088d5:	mov    eax,DWORD PTR [ebp+0x0]
650088d8:	jmp    0x650088f9
650088da:	test   edi,edi
650088dc:	jne    0x650088cb
650088de:	cmp    eax,0x8
650088e1:	mov    DWORD PTR [esi+0x14],edi
650088e4:	jb     0x650088e9
650088e6:	mov    ebp,DWORD PTR [ebp+0x0]
650088e9:	pop    edi
650088ea:	mov    eax,esi
650088ec:	pop    esi
650088ed:	mov    WORD PTR [ebp+0x0],0x0
650088f3:	pop    ebp
650088f4:	ret    0x8
650088f7:	mov    eax,ebp
650088f9:	mov    edx,DWORD PTR [esp+0x10]
650088fd:	push   ebx
650088fe:	lea    ebx,[edi+edi*1]
65008901:	push   ebx
65008902:	push   edx
65008903:	add    ecx,ecx
65008905:	push   ecx
65008906:	push   eax
65008907:	call   0x65012243
6500890c:	add    esp,0x10
6500890f:	cmp    DWORD PTR [esi+0x18],0x8
65008913:	mov    DWORD PTR [esi+0x14],edi
65008916:	jb     0x6500891b
65008918:	mov    ebp,DWORD PTR [ebp+0x0]
6500891b:	mov    WORD PTR [ebx+ebp*1],0x0
65008921:	pop    ebx
65008922:	pop    edi
65008923:	mov    eax,esi
65008925:	pop    esi
65008926:	pop    ebp
65008927:	ret    0x8
6500892a:	int3   
6500892b:	int3   
6500892c:	int3   
6500892d:	int3   
6500892e:	int3   
6500892f:	int3   
65008930:	push   ebp
65008931:	mov    ebp,esp
65008933:	and    esp,0xfffffff8
65008936:	push   0xffffffff
65008938:	push   0x65022978
6500893d:	mov    eax,fs:0x0
65008943:	push   eax
65008944:	sub    esp,0x50
65008947:	push   ebx
65008948:	push   esi
65008949:	push   edi
6500894a:	mov    eax,ds:0x6502c09c
6500894f:	xor    eax,esp
65008951:	push   eax
65008952:	lea    eax,[esp+0x60]
65008956:	mov    fs:0x0,eax
6500895c:	mov    edi,ecx
6500895e:	xor    ebx,ebx
65008960:	cmp    DWORD PTR [edi+0x8],0x4924923
65008967:	jb     0x650089b2
65008969:	push   0x13
6500896b:	push   0x65028234
65008970:	lea    ecx,[esp+0x20]
65008974:	mov    DWORD PTR [esp+0x38],0xf
6500897c:	mov    DWORD PTR [esp+0x34],ebx
65008980:	mov    BYTE PTR [esp+0x24],bl
65008984:	call   0x650018c0
65008989:	lea    eax,[esp+0x18]
6500898d:	push   eax
6500898e:	lea    ecx,[esp+0x38]
65008992:	mov    DWORD PTR [esp+0x6c],ebx
65008996:	call   0x65002d10
6500899b:	push   0x6502a0c8
650089a0:	lea    ecx,[esp+0x38]
650089a4:	push   ecx
650089a5:	mov    DWORD PTR [esp+0x3c],0x65024c20
650089ad:	call   0x650124d6
650089b2:	mov    edx,DWORD PTR [ebp+0x14]
650089b5:	mov    eax,DWORD PTR [edi+0x4]
650089b8:	mov    esi,DWORD PTR [ebp+0x10]
650089bb:	push   ebx
650089bc:	push   edx
650089bd:	push   eax
650089be:	push   esi
650089bf:	push   eax
650089c0:	call   0x65009010
650089c5:	add    DWORD PTR [edi+0x8],0x1
650089c9:	mov    ecx,eax
650089cb:	mov    eax,DWORD PTR [edi+0x4]
650089ce:	cmp    esi,eax
650089d0:	mov    DWORD PTR [esp+0x14],ecx
650089d4:	jne    0x650089e6
650089d6:	mov    DWORD PTR [eax+0x4],ecx
650089d9:	mov    eax,DWORD PTR [edi+0x4]
650089dc:	mov    DWORD PTR [eax],ecx
650089de:	mov    edx,DWORD PTR [edi+0x4]
650089e1:	mov    DWORD PTR [edx+0x8],ecx
650089e4:	jmp    0x65008a06
650089e6:	cmp    BYTE PTR [ebp+0xc],bl
650089e9:	je     0x650089f8
650089eb:	mov    DWORD PTR [esi],ecx
650089ed:	mov    eax,DWORD PTR [edi+0x4]
650089f0:	cmp    esi,DWORD PTR [eax]
650089f2:	jne    0x65008a06
650089f4:	mov    DWORD PTR [eax],ecx
650089f6:	jmp    0x65008a06
650089f8:	mov    DWORD PTR [esi+0x8],ecx
650089fb:	mov    eax,DWORD PTR [edi+0x4]
650089fe:	cmp    esi,DWORD PTR [eax+0x8]
65008a01:	jne    0x65008a06
65008a03:	mov    DWORD PTR [eax+0x8],ecx
65008a06:	mov    edx,DWORD PTR [ecx+0x4]
65008a09:	cmp    BYTE PTR [edx+0x44],bl
65008a0c:	lea    eax,[ecx+0x4]
65008a0f:	mov    esi,ecx
65008a11:	jne    0x65008b52
65008a17:	mov    ecx,DWORD PTR [eax]
65008a19:	mov    edx,DWORD PTR [ecx+0x4]
65008a1c:	cmp    ecx,DWORD PTR [edx]
65008a1e:	jne    0x65008ac5
65008a24:	mov    edx,DWORD PTR [edx+0x8]
65008a27:	cmp    BYTE PTR [edx+0x44],bl
65008a2a:	je     0x65008acc
65008a30:	cmp    esi,DWORD PTR [ecx+0x8]
65008a33:	jne    0x65008a70
65008a35:	mov    esi,ecx
65008a37:	mov    ecx,DWORD PTR [esi+0x8]
65008a3a:	mov    eax,DWORD PTR [ecx]
65008a3c:	mov    DWORD PTR [esi+0x8],eax
65008a3f:	mov    eax,DWORD PTR [ecx]
65008a41:	cmp    BYTE PTR [eax+0x45],bl
65008a44:	jne    0x65008a49
65008a46:	mov    DWORD PTR [eax+0x4],esi
65008a49:	mov    edx,DWORD PTR [esi+0x4]
65008a4c:	lea    eax,[esi+0x4]
65008a4f:	mov    DWORD PTR [ecx+0x4],edx
65008a52:	mov    edx,DWORD PTR [edi+0x4]
65008a55:	cmp    esi,DWORD PTR [edx+0x4]
65008a58:	jne    0x65008a5f
65008a5a:	mov    DWORD PTR [edx+0x4],ecx
65008a5d:	jmp    0x65008a6c
65008a5f:	mov    edx,DWORD PTR [eax]
65008a61:	cmp    esi,DWORD PTR [edx]
65008a63:	jne    0x65008a69
65008a65:	mov    DWORD PTR [edx],ecx
65008a67:	jmp    0x65008a6c
65008a69:	mov    DWORD PTR [edx+0x8],ecx
65008a6c:	mov    DWORD PTR [ecx],esi
65008a6e:	mov    DWORD PTR [eax],ecx
65008a70:	mov    ecx,DWORD PTR [eax]
65008a72:	mov    BYTE PTR [ecx+0x44],0x1
65008a76:	mov    edx,DWORD PTR [eax]
65008a78:	mov    ecx,DWORD PTR [edx+0x4]
65008a7b:	mov    BYTE PTR [ecx+0x44],bl
65008a7e:	mov    edx,DWORD PTR [eax]
65008a80:	mov    eax,DWORD PTR [edx+0x4]
65008a83:	mov    ecx,DWORD PTR [eax]
65008a85:	mov    edx,DWORD PTR [ecx+0x8]
65008a88:	mov    DWORD PTR [eax],edx
65008a8a:	mov    edx,DWORD PTR [ecx+0x8]
65008a8d:	cmp    BYTE PTR [edx+0x45],bl
65008a90:	jne    0x65008a95
65008a92:	mov    DWORD PTR [edx+0x4],eax
65008a95:	mov    edx,DWORD PTR [eax+0x4]
65008a98:	mov    DWORD PTR [ecx+0x4],edx
65008a9b:	mov    edx,DWORD PTR [edi+0x4]
65008a9e:	cmp    eax,DWORD PTR [edx+0x4]
65008aa1:	jne    0x65008aae
65008aa3:	mov    DWORD PTR [edx+0x4],ecx
65008aa6:	mov    DWORD PTR [ecx+0x8],eax
65008aa9:	jmp    0x65008b3c
65008aae:	mov    edx,DWORD PTR [eax+0x4]
65008ab1:	cmp    eax,DWORD PTR [edx+0x8]
65008ab4:	jne    0x65008abe
65008ab6:	mov    DWORD PTR [edx+0x8],ecx
65008ab9:	mov    DWORD PTR [ecx+0x8],eax
65008abc:	jmp    0x65008b3c
65008abe:	mov    DWORD PTR [edx],ecx
65008ac0:	mov    DWORD PTR [ecx+0x8],eax
65008ac3:	jmp    0x65008b3c
65008ac5:	mov    edx,DWORD PTR [edx]
65008ac7:	cmp    BYTE PTR [edx+0x44],bl
65008aca:	jne    0x65008ae3
65008acc:	mov    BYTE PTR [ecx+0x44],0x1
65008ad0:	mov    BYTE PTR [edx+0x44],0x1
65008ad4:	mov    edx,DWORD PTR [eax]
65008ad6:	mov    ecx,DWORD PTR [edx+0x4]
65008ad9:	mov    BYTE PTR [ecx+0x44],bl
65008adc:	mov    edx,DWORD PTR [eax]
65008ade:	mov    esi,DWORD PTR [edx+0x4]
65008ae1:	jmp    0x65008b3f
65008ae3:	cmp    esi,DWORD PTR [ecx]
65008ae5:	jne    0x65008af1
65008ae7:	mov    esi,ecx
65008ae9:	push   esi
65008aea:	mov    ecx,edi
65008aec:	call   0x65008fb0
65008af1:	mov    eax,DWORD PTR [esi+0x4]
65008af4:	mov    BYTE PTR [eax+0x44],0x1
65008af8:	mov    ecx,DWORD PTR [esi+0x4]
65008afb:	mov    edx,DWORD PTR [ecx+0x4]
65008afe:	mov    BYTE PTR [edx+0x44],bl
65008b01:	mov    eax,DWORD PTR [esi+0x4]
65008b04:	mov    eax,DWORD PTR [eax+0x4]
65008b07:	mov    ecx,DWORD PTR [eax+0x8]
65008b0a:	mov    edx,DWORD PTR [ecx]
65008b0c:	mov    DWORD PTR [eax+0x8],edx
65008b0f:	mov    edx,DWORD PTR [ecx]
65008b11:	cmp    BYTE PTR [edx+0x45],bl
65008b14:	jne    0x65008b19
65008b16:	mov    DWORD PTR [edx+0x4],eax
65008b19:	mov    edx,DWORD PTR [eax+0x4]
65008b1c:	mov    DWORD PTR [ecx+0x4],edx
65008b1f:	mov    edx,DWORD PTR [edi+0x4]
65008b22:	cmp    eax,DWORD PTR [edx+0x4]
65008b25:	jne    0x65008b2c
65008b27:	mov    DWORD PTR [edx+0x4],ecx
65008b2a:	jmp    0x65008b3a
65008b2c:	mov    edx,DWORD PTR [eax+0x4]
65008b2f:	cmp    eax,DWORD PTR [edx]
65008b31:	jne    0x65008b37
65008b33:	mov    DWORD PTR [edx],ecx
65008b35:	jmp    0x65008b3a
65008b37:	mov    DWORD PTR [edx+0x8],ecx
65008b3a:	mov    DWORD PTR [ecx],eax
65008b3c:	mov    DWORD PTR [eax+0x4],ecx
65008b3f:	mov    ecx,DWORD PTR [esi+0x4]
65008b42:	cmp    BYTE PTR [ecx+0x44],bl
65008b45:	lea    eax,[esi+0x4]
65008b48:	je     0x65008a17
65008b4e:	mov    ecx,DWORD PTR [esp+0x14]
65008b52:	mov    edx,DWORD PTR [edi+0x4]
65008b55:	mov    eax,DWORD PTR [edx+0x4]
65008b58:	mov    BYTE PTR [eax+0x44],0x1
65008b5c:	mov    eax,DWORD PTR [ebp+0x8]
65008b5f:	mov    DWORD PTR [eax+0x4],ecx
65008b62:	mov    DWORD PTR [eax],edi
65008b64:	mov    ecx,DWORD PTR [esp+0x60]
65008b68:	mov    DWORD PTR fs:0x0,ecx
65008b6f:	pop    ecx
65008b70:	pop    edi
65008b71:	pop    esi
65008b72:	pop    ebx
65008b73:	mov    esp,ebp
65008b75:	pop    ebp
65008b76:	ret    0x10
65008b79:	int3   
65008b7a:	int3   
65008b7b:	int3   
65008b7c:	int3   
65008b7d:	int3   
65008b7e:	int3   
65008b7f:	int3   
65008b80:	push   ebx
65008b81:	push   ebp
65008b82:	push   esi
65008b83:	mov    esi,DWORD PTR [esp+0x10]
65008b87:	xor    ebx,ebx
65008b89:	cmp    BYTE PTR [esi+0x29],bl
65008b8c:	push   edi
65008b8d:	mov    ebp,ecx
65008b8f:	mov    edi,esi
65008b91:	jne    0x65008bcf
65008b93:	mov    eax,DWORD PTR [edi+0x8]
65008b96:	push   eax
65008b97:	mov    ecx,ebp
65008b99:	call   0x65008b80
65008b9e:	cmp    DWORD PTR [esi+0x24],0x10
65008ba2:	mov    edi,DWORD PTR [edi]
65008ba4:	jb     0x65008bb2
65008ba6:	mov    ecx,DWORD PTR [esi+0x10]
65008ba9:	push   ecx
65008baa:	call   0x650120d2
65008baf:	add    esp,0x4
65008bb2:	mov    DWORD PTR [esi+0x24],0xf
65008bb9:	mov    DWORD PTR [esi+0x20],ebx
65008bbc:	push   esi
65008bbd:	mov    BYTE PTR [esi+0x10],bl
65008bc0:	call   0x650120d2
65008bc5:	add    esp,0x4
65008bc8:	cmp    BYTE PTR [edi+0x29],bl
65008bcb:	mov    esi,edi
65008bcd:	je     0x65008b93
65008bcf:	pop    edi
65008bd0:	pop    esi
65008bd1:	pop    ebp
65008bd2:	pop    ebx
65008bd3:	ret    0x4
65008bd6:	int3   
65008bd7:	int3   
65008bd8:	int3   
65008bd9:	int3   
65008bda:	int3   
65008bdb:	int3   
65008bdc:	int3   
65008bdd:	int3   
65008bde:	int3   
65008bdf:	int3   
65008be0:	sub    esp,0x8
65008be3:	mov    eax,DWORD PTR [eax+0x4]
65008be6:	push   esi
65008be7:	mov    esi,DWORD PTR [eax+0x4]
65008bea:	cmp    BYTE PTR [esi+0x29],0x0
65008bee:	mov    DWORD PTR [esp+0x4],eax
65008bf2:	jne    0x65008c65
65008bf4:	mov    edx,DWORD PTR [ecx+0x18]
65008bf7:	push   ebx
65008bf8:	mov    ebx,DWORD PTR [ecx+0x14]
65008bfb:	push   ebp
65008bfc:	push   edi
65008bfd:	mov    DWORD PTR [esp+0x14],edx
65008c01:	lea    ebp,[ecx+0x4]
65008c04:	cmp    DWORD PTR [esp+0x14],0x10
65008c09:	jb     0x65008c10
65008c0b:	mov    edx,DWORD PTR [ebp+0x0]
65008c0e:	jmp    0x65008c12
65008c10:	mov    edx,ebp
65008c12:	mov    edi,DWORD PTR [esi+0x20]
65008c15:	mov    eax,edi
65008c17:	cmp    eax,edi
65008c19:	jae    0x65008c1b
65008c1b:	cmp    edi,ebx
65008c1d:	mov    ecx,edi
65008c1f:	jb     0x65008c23
65008c21:	mov    ecx,ebx
65008c23:	cmp    DWORD PTR [esi+0x24],0x10
65008c27:	jb     0x65008c2e
65008c29:	mov    eax,DWORD PTR [esi+0x10]
65008c2c:	jmp    0x65008c31
65008c2e:	lea    eax,[esi+0x10]
65008c31:	push   ecx
65008c32:	push   edx
65008c33:	push   eax
65008c34:	call   0x65002c80
65008c39:	add    esp,0xc
65008c3c:	test   eax,eax
65008c3e:	jne    0x65008c4b
65008c40:	cmp    edi,ebx
65008c42:	jb     0x65008c4d
65008c44:	cmp    edi,ebx
65008c46:	setne  al
65008c49:	test   eax,eax
65008c4b:	jge    0x65008c52
65008c4d:	mov    esi,DWORD PTR [esi+0x8]
65008c50:	jmp    0x65008c58
65008c52:	mov    DWORD PTR [esp+0x10],esi
65008c56:	mov    esi,DWORD PTR [esi]
65008c58:	cmp    BYTE PTR [esi+0x29],0x0
65008c5c:	je     0x65008c04
65008c5e:	mov    eax,DWORD PTR [esp+0x10]
65008c62:	pop    edi
65008c63:	pop    ebp
65008c64:	pop    ebx
65008c65:	pop    esi
65008c66:	add    esp,0x8
65008c69:	ret    
65008c6a:	int3   
65008c6b:	int3   
65008c6c:	int3   
65008c6d:	int3   
65008c6e:	int3   
65008c6f:	int3   
65008c70:	sub    esp,0x10
65008c73:	mov    ecx,DWORD PTR [ecx+0x4]
65008c76:	push   edi
65008c77:	mov    edi,DWORD PTR [ecx+0x4]
65008c7a:	cmp    BYTE PTR [edi+0x29],0x0
65008c7e:	mov    DWORD PTR [esp+0x8],ecx
65008c82:	jne    0x65008d01
65008c84:	mov    edx,DWORD PTR [eax+0x14]
65008c87:	mov    ecx,DWORD PTR [eax+0x18]
65008c8a:	push   ebx
65008c8b:	push   ebp
65008c8c:	add    eax,0x4
65008c8f:	push   esi
65008c90:	mov    ebp,edx
65008c92:	mov    DWORD PTR [esp+0x1c],ecx
65008c96:	mov    DWORD PTR [esp+0x10],eax
65008c9a:	lea    ebx,[ebx+0x0]
65008ca0:	cmp    DWORD PTR [edi+0x24],0x10
65008ca4:	mov    ebx,DWORD PTR [edi+0x20]
65008ca7:	jb     0x65008cae
65008ca9:	mov    edx,DWORD PTR [edi+0x10]
65008cac:	jmp    0x65008cb1
65008cae:	lea    edx,[edi+0x10]
65008cb1:	mov    esi,ebp
65008cb3:	cmp    esi,ebx
65008cb5:	mov    ecx,esi
65008cb7:	jb     0x65008cbb
65008cb9:	mov    ecx,ebx
65008cbb:	cmp    DWORD PTR [esp+0x1c],0x10
65008cc0:	mov    eax,DWORD PTR [esp+0x10]
65008cc4:	jb     0x65008cc8
65008cc6:	mov    eax,DWORD PTR [eax]
65008cc8:	push   ecx
65008cc9:	push   edx
65008cca:	push   eax
65008ccb:	call   0x65002c80
65008cd0:	add    esp,0xc
65008cd3:	test   eax,eax
65008cd5:	jne    0x65008ce2
65008cd7:	cmp    esi,ebx
65008cd9:	jb     0x65008ce4
65008cdb:	cmp    esi,ebx
65008cdd:	setne  al
65008ce0:	test   eax,eax
65008ce2:	jge    0x65008cec
65008ce4:	mov    DWORD PTR [esp+0x14],edi
65008ce8:	mov    edi,DWORD PTR [edi]
65008cea:	jmp    0x65008cef
65008cec:	mov    edi,DWORD PTR [edi+0x8]
65008cef:	cmp    BYTE PTR [edi+0x29],0x0
65008cf3:	je     0x65008ca0
65008cf5:	mov    eax,DWORD PTR [esp+0x14]
65008cf9:	pop    esi
65008cfa:	pop    ebp
65008cfb:	pop    ebx
65008cfc:	pop    edi
65008cfd:	add    esp,0x10
65008d00:	ret    
65008d01:	mov    eax,ecx
65008d03:	pop    edi
65008d04:	add    esp,0x10
65008d07:	ret    
65008d08:	int3   
65008d09:	int3   
65008d0a:	int3   
65008d0b:	int3   
65008d0c:	int3   
65008d0d:	int3   
65008d0e:	int3   
65008d0f:	int3   
65008d10:	cmp    DWORD PTR [esi],0x0
65008d13:	jne    0x65008d1a
65008d15:	call   0x65012443
65008d1a:	mov    eax,DWORD PTR [esi+0x4]
65008d1d:	cmp    BYTE PTR [eax+0x29],0x0
65008d21:	je     0x65008d34
65008d23:	mov    eax,DWORD PTR [eax+0x8]
65008d26:	mov    DWORD PTR [esi+0x4],eax
65008d29:	cmp    BYTE PTR [eax+0x29],0x0
65008d2d:	je     0x65008d86
65008d2f:	jmp    0x65012443
65008d34:	mov    ecx,DWORD PTR [eax]
65008d36:	cmp    BYTE PTR [ecx+0x29],0x0
65008d3a:	jne    0x65008d54
65008d3c:	mov    eax,DWORD PTR [ecx+0x8]
65008d3f:	cmp    BYTE PTR [eax+0x29],0x0
65008d43:	jne    0x65008d50
65008d45:	mov    ecx,eax
65008d47:	mov    eax,DWORD PTR [ecx+0x8]
65008d4a:	cmp    BYTE PTR [eax+0x29],0x0
65008d4e:	je     0x65008d45
65008d50:	mov    DWORD PTR [esi+0x4],ecx
65008d53:	ret    
65008d54:	mov    eax,DWORD PTR [eax+0x4]
65008d57:	cmp    BYTE PTR [eax+0x29],0x0
65008d5b:	jne    0x65008d75
65008d5d:	lea    ecx,[ecx+0x0]
65008d60:	mov    ecx,DWORD PTR [esi+0x4]
65008d63:	cmp    ecx,DWORD PTR [eax]
65008d65:	jne    0x65008d75
65008d67:	mov    DWORD PTR [esi+0x4],eax
65008d6a:	mov    edx,eax
65008d6c:	mov    eax,DWORD PTR [edx+0x4]
65008d6f:	cmp    BYTE PTR [eax+0x29],0x0
65008d73:	je     0x65008d60
65008d75:	mov    ecx,DWORD PTR [esi+0x4]
65008d78:	cmp    BYTE PTR [ecx+0x29],0x0
65008d7c:	je     0x65008d83
65008d7e:	jmp    0x65012443
65008d83:	mov    DWORD PTR [esi+0x4],eax
65008d86:	ret    
65008d87:	int3   
65008d88:	int3   
65008d89:	int3   
65008d8a:	int3   
65008d8b:	int3   
65008d8c:	int3   
65008d8d:	int3   
65008d8e:	int3   
65008d8f:	int3   
65008d90:	push   ecx
65008d91:	mov    eax,DWORD PTR [ecx+0x4]
65008d94:	push   esi
65008d95:	mov    esi,DWORD PTR [eax+0x4]
65008d98:	cmp    BYTE PTR [esi+0x45],0x0
65008d9c:	mov    DWORD PTR [esp+0x4],eax
65008da0:	jne    0x65008e17
65008da2:	mov    eax,DWORD PTR [esp+0xc]
65008da6:	mov    ecx,DWORD PTR [eax+0x18]
65008da9:	push   ebx
65008daa:	mov    ebx,DWORD PTR [eax+0x14]
65008dad:	push   ebp
65008dae:	push   edi
65008daf:	mov    DWORD PTR [esp+0x18],ecx
65008db3:	lea    ebp,[eax+0x4]
65008db6:	cmp    DWORD PTR [esp+0x18],0x10
65008dbb:	jb     0x65008dc2
65008dbd:	mov    edx,DWORD PTR [ebp+0x0]
65008dc0:	jmp    0x65008dc4
65008dc2:	mov    edx,ebp
65008dc4:	mov    edi,DWORD PTR [esi+0x20]
65008dc7:	mov    eax,edi
65008dc9:	cmp    eax,edi
65008dcb:	jae    0x65008dcd
65008dcd:	cmp    edi,ebx
65008dcf:	mov    ecx,edi
65008dd1:	jb     0x65008dd5
65008dd3:	mov    ecx,ebx
65008dd5:	cmp    DWORD PTR [esi+0x24],0x10
65008dd9:	jb     0x65008de0
65008ddb:	mov    eax,DWORD PTR [esi+0x10]
65008dde:	jmp    0x65008de3
65008de0:	lea    eax,[esi+0x10]
65008de3:	push   ecx
65008de4:	push   edx
65008de5:	push   eax
65008de6:	call   0x65002c80
65008deb:	add    esp,0xc
65008dee:	test   eax,eax
65008df0:	jne    0x65008dfd
65008df2:	cmp    edi,ebx
65008df4:	jb     0x65008dff
65008df6:	cmp    edi,ebx
65008df8:	setne  al
65008dfb:	test   eax,eax
65008dfd:	jge    0x65008e04
65008dff:	mov    esi,DWORD PTR [esi+0x8]
65008e02:	jmp    0x65008e0a
65008e04:	mov    DWORD PTR [esp+0x10],esi
65008e08:	mov    esi,DWORD PTR [esi]
65008e0a:	cmp    BYTE PTR [esi+0x45],0x0
65008e0e:	je     0x65008db6
65008e10:	mov    eax,DWORD PTR [esp+0x10]
65008e14:	pop    edi
65008e15:	pop    ebp
65008e16:	pop    ebx
65008e17:	pop    esi
65008e18:	pop    ecx
65008e19:	ret    0x4
65008e1c:	int3   
65008e1d:	int3   
65008e1e:	int3   
65008e1f:	int3   
65008e20:	push   ebp
65008e21:	mov    ebp,esp
65008e23:	push   0xffffffff
65008e25:	push   0x65022541
65008e2a:	mov    eax,fs:0x0
65008e30:	push   eax
65008e31:	sub    esp,0xc
65008e34:	push   ebx
65008e35:	push   esi
65008e36:	push   edi
65008e37:	mov    eax,ds:0x6502c09c
65008e3c:	xor    eax,ebp
65008e3e:	push   eax
65008e3f:	lea    eax,[ebp-0xc]
65008e42:	mov    fs:0x0,eax
65008e48:	mov    DWORD PTR [ebp-0x10],esp
65008e4b:	push   0x48
65008e4d:	call   0x6501246c
65008e52:	mov    esi,eax
65008e54:	mov    DWORD PTR [ebp-0x4],0x0
65008e5b:	add    esp,0x4
65008e5e:	mov    DWORD PTR [ebp-0x14],esi
65008e61:	mov    DWORD PTR [ebp-0x18],esi
65008e64:	test   esi,esi
65008e66:	mov    BYTE PTR [ebp-0x4],0x1
65008e6a:	je     0x65008e93
65008e6c:	mov    eax,DWORD PTR [ebp+0x8]
65008e6f:	mov    ecx,DWORD PTR [ebp+0xc]
65008e72:	mov    edx,DWORD PTR [ebp+0x10]
65008e75:	mov    DWORD PTR [esi],eax
65008e77:	mov    eax,DWORD PTR [ebp+0x14]
65008e7a:	mov    DWORD PTR [esi+0x4],ecx
65008e7d:	push   eax
65008e7e:	lea    ecx,[esi+0xc]
65008e81:	mov    DWORD PTR [esi+0x8],edx
65008e84:	call   0x650094b0
65008e89:	mov    cl,BYTE PTR [ebp+0x18]
65008e8c:	mov    BYTE PTR [esi+0x44],cl
65008e8f:	mov    BYTE PTR [esi+0x45],0x0
65008e93:	mov    eax,esi
65008e95:	mov    ecx,DWORD PTR [ebp-0xc]
65008e98:	mov    DWORD PTR fs:0x0,ecx
65008e9f:	pop    ecx
65008ea0:	pop    edi
65008ea1:	pop    esi
65008ea2:	pop    ebx
65008ea3:	mov    esp,ebp
65008ea5:	pop    ebp
65008ea6:	ret    0x14
65008ea9:	mov    edx,DWORD PTR [ebp-0x14]
65008eac:	push   edx
65008ead:	call   0x650120d2
65008eb2:	add    esp,0x4
65008eb5:	push   0x0
65008eb7:	push   0x0
65008eb9:	call   0x650124d6
65008ebe:	int3   
65008ebf:	int3   
65008ec0:	push   ebx
65008ec1:	mov    ebx,DWORD PTR [esp+0x8]
65008ec5:	push   esi
65008ec6:	mov    esi,ecx
65008ec8:	cmp    DWORD PTR [esi+0x14],ebx
65008ecb:	push   edi
65008ecc:	jae    0x65008ed3
65008ece:	call   0x6501208e
65008ed3:	mov    eax,DWORD PTR [esi+0x14]
65008ed6:	mov    edi,DWORD PTR [esp+0x14]
65008eda:	sub    eax,ebx
65008edc:	cmp    eax,edi
65008ede:	jae    0x65008ee2
65008ee0:	mov    edi,eax
65008ee2:	test   edi,edi
65008ee4:	jbe    0x65008f4f
65008ee6:	mov    ecx,DWORD PTR [esi+0x18]
65008ee9:	cmp    ecx,0x8
65008eec:	push   ebp
65008eed:	lea    ebp,[esi+0x4]
65008ef0:	jb     0x65008efb
65008ef2:	mov    edx,DWORD PTR [ebp+0x0]
65008ef5:	mov    DWORD PTR [esp+0x14],edx
65008ef9:	jmp    0x65008eff
65008efb:	mov    DWORD PTR [esp+0x14],ebp
65008eff:	cmp    ecx,0x8
65008f02:	jb     0x65008f0d
65008f04:	mov    edx,DWORD PTR [ebp+0x0]
65008f07:	mov    DWORD PTR [esp+0x18],edx
65008f0b:	jmp    0x65008f11
65008f0d:	mov    DWORD PTR [esp+0x18],ebp
65008f11:	mov    edx,DWORD PTR [esp+0x14]
65008f15:	sub    eax,edi
65008f17:	add    eax,eax
65008f19:	push   eax
65008f1a:	lea    eax,[ebx+edi*1]
65008f1d:	lea    eax,[edx+eax*2]
65008f20:	sub    ecx,ebx
65008f22:	push   eax
65008f23:	add    ecx,ecx
65008f25:	push   ecx
65008f26:	mov    ecx,DWORD PTR [esp+0x24]
65008f2a:	lea    edx,[ecx+ebx*2]
65008f2d:	push   edx
65008f2e:	call   0x650122be
65008f33:	mov    eax,DWORD PTR [esi+0x14]
65008f36:	sub    eax,edi
65008f38:	add    esp,0x10
65008f3b:	cmp    DWORD PTR [esi+0x18],0x8
65008f3f:	mov    DWORD PTR [esi+0x14],eax
65008f42:	jb     0x65008f47
65008f44:	mov    ebp,DWORD PTR [ebp+0x0]
65008f47:	mov    WORD PTR [ebp+eax*2+0x0],0x0
65008f4e:	pop    ebp
65008f4f:	pop    edi
65008f50:	mov    eax,esi
65008f52:	pop    esi
65008f53:	pop    ebx
65008f54:	ret    0x8
65008f57:	int3   
65008f58:	int3   
65008f59:	int3   
65008f5a:	int3   
65008f5b:	int3   
65008f5c:	int3   
65008f5d:	int3   
65008f5e:	int3   
65008f5f:	int3   
65008f60:	mov    edx,DWORD PTR [esp+0x4]
65008f64:	mov    eax,DWORD PTR [edx+0x8]
65008f67:	push   esi
65008f68:	mov    esi,DWORD PTR [eax]
65008f6a:	mov    DWORD PTR [edx+0x8],esi
65008f6d:	mov    esi,DWORD PTR [eax]
65008f6f:	cmp    BYTE PTR [esi+0x45],0x0
65008f73:	jne    0x65008f78
65008f75:	mov    DWORD PTR [esi+0x4],edx
65008f78:	mov    esi,DWORD PTR [edx+0x4]
65008f7b:	mov    DWORD PTR [eax+0x4],esi
65008f7e:	mov    ecx,DWORD PTR [ecx+0x4]
65008f81:	cmp    edx,DWORD PTR [ecx+0x4]
65008f84:	pop    esi
65008f85:	jne    0x65008f92
65008f87:	mov    DWORD PTR [ecx+0x4],eax
65008f8a:	mov    DWORD PTR [eax],edx
65008f8c:	mov    DWORD PTR [edx+0x4],eax
65008f8f:	ret    0x4
65008f92:	mov    ecx,DWORD PTR [edx+0x4]
65008f95:	cmp    edx,DWORD PTR [ecx]
65008f97:	jne    0x65008fa3
65008f99:	mov    DWORD PTR [ecx],eax
65008f9b:	mov    DWORD PTR [eax],edx
65008f9d:	mov    DWORD PTR [edx+0x4],eax
65008fa0:	ret    0x4
65008fa3:	mov    DWORD PTR [ecx+0x8],eax
65008fa6:	mov    DWORD PTR [eax],edx
65008fa8:	mov    DWORD PTR [edx+0x4],eax
65008fab:	ret    0x4
65008fae:	int3   
65008faf:	int3   
65008fb0:	mov    edx,DWORD PTR [esp+0x4]
65008fb4:	mov    eax,DWORD PTR [edx]
65008fb6:	push   esi
65008fb7:	mov    esi,DWORD PTR [eax+0x8]
65008fba:	mov    DWORD PTR [edx],esi
65008fbc:	mov    esi,DWORD PTR [eax+0x8]
65008fbf:	cmp    BYTE PTR [esi+0x45],0x0
65008fc3:	jne    0x65008fc8
65008fc5:	mov    DWORD PTR [esi+0x4],edx
65008fc8:	mov    esi,DWORD PTR [edx+0x4]
65008fcb:	mov    DWORD PTR [eax+0x4],esi
65008fce:	mov    ecx,DWORD PTR [ecx+0x4]
65008fd1:	cmp    edx,DWORD PTR [ecx+0x4]
65008fd4:	pop    esi
65008fd5:	jne    0x65008fe3
65008fd7:	mov    DWORD PTR [ecx+0x4],eax
65008fda:	mov    DWORD PTR [eax+0x8],edx
65008fdd:	mov    DWORD PTR [edx+0x4],eax
65008fe0:	ret    0x4
65008fe3:	mov    ecx,DWORD PTR [edx+0x4]
65008fe6:	cmp    edx,DWORD PTR [ecx+0x8]
65008fe9:	jne    0x65008ff7
65008feb:	mov    DWORD PTR [ecx+0x8],eax
65008fee:	mov    DWORD PTR [eax+0x8],edx
65008ff1:	mov    DWORD PTR [edx+0x4],eax
65008ff4:	ret    0x4
65008ff7:	mov    DWORD PTR [ecx],eax
65008ff9:	mov    DWORD PTR [eax+0x8],edx
65008ffc:	mov    DWORD PTR [edx+0x4],eax
65008fff:	ret    0x4
65009002:	int3   
65009003:	int3   
65009004:	int3   
65009005:	int3   
65009006:	int3   
65009007:	int3   
65009008:	int3   
65009009:	int3   
6500900a:	int3   
6500900b:	int3   
6500900c:	int3   
6500900d:	int3   
6500900e:	int3   
6500900f:	int3   
65009010:	push   ebp
65009011:	mov    ebp,esp
65009013:	push   0xffffffff
65009015:	push   0x65022861
6500901a:	mov    eax,fs:0x0
65009020:	push   eax
65009021:	sub    esp,0xc
65009024:	push   ebx
65009025:	push   esi
65009026:	push   edi
65009027:	mov    eax,ds:0x6502c09c
6500902c:	xor    eax,ebp
6500902e:	push   eax
6500902f:	lea    eax,[ebp-0xc]
65009032:	mov    fs:0x0,eax
65009038:	mov    DWORD PTR [ebp-0x10],esp
6500903b:	push   0x48
6500903d:	call   0x6501246c
65009042:	mov    esi,eax
65009044:	mov    DWORD PTR [ebp-0x4],0x0
6500904b:	add    esp,0x4
6500904e:	mov    DWORD PTR [ebp-0x14],esi
65009051:	mov    DWORD PTR [ebp-0x18],esi
65009054:	test   esi,esi
65009056:	mov    BYTE PTR [ebp-0x4],0x1
6500905a:	je     0x65009083
6500905c:	mov    eax,DWORD PTR [ebp+0x8]
6500905f:	mov    ecx,DWORD PTR [ebp+0xc]
65009062:	mov    edx,DWORD PTR [ebp+0x10]
65009065:	mov    DWORD PTR [esi],eax
65009067:	mov    eax,DWORD PTR [ebp+0x14]
6500906a:	mov    DWORD PTR [esi+0x4],ecx
6500906d:	push   eax
6500906e:	lea    ecx,[esi+0xc]
65009071:	mov    DWORD PTR [esi+0x8],edx
65009074:	call   0x65009530
65009079:	mov    cl,BYTE PTR [ebp+0x18]
6500907c:	mov    BYTE PTR [esi+0x44],cl
6500907f:	mov    BYTE PTR [esi+0x45],0x0
65009083:	mov    eax,esi
65009085:	mov    ecx,DWORD PTR [ebp-0xc]
65009088:	mov    DWORD PTR fs:0x0,ecx
6500908f:	pop    ecx
65009090:	pop    edi
65009091:	pop    esi
65009092:	pop    ebx
65009093:	mov    esp,ebp
65009095:	pop    ebp
65009096:	ret    0x14
65009099:	mov    edx,DWORD PTR [ebp-0x14]
6500909c:	push   edx
6500909d:	call   0x650120d2
650090a2:	add    esp,0x4
650090a5:	push   0x0
650090a7:	push   0x0
650090a9:	call   0x650124d6
650090ae:	int3   
650090af:	int3   
650090b0:	push   ebp
650090b1:	mov    ebp,esp
650090b3:	and    esp,0xfffffff8
650090b6:	sub    esp,0x14
650090b9:	push   ebx
650090ba:	push   esi
650090bb:	push   edi
650090bc:	mov    edi,ecx
650090be:	mov    eax,DWORD PTR [edi+0x4]
650090c1:	mov    ebx,DWORD PTR [eax]
650090c3:	mov    eax,DWORD PTR [ebp+0xc]
650090c6:	test   eax,eax
650090c8:	je     0x650090ce
650090ca:	cmp    eax,edi
650090cc:	je     0x650090d3
650090ce:	call   0x65012443
650090d3:	mov    esi,DWORD PTR [ebp+0x10]
650090d6:	cmp    esi,ebx
650090d8:	jne    0x65009130
650090da:	mov    eax,DWORD PTR [ebp+0x14]
650090dd:	test   eax,eax
650090df:	mov    ebx,DWORD PTR [edi+0x4]
650090e2:	je     0x650090e8
650090e4:	cmp    eax,edi
650090e6:	je     0x650090ed
650090e8:	call   0x65012443
650090ed:	cmp    DWORD PTR [ebp+0x18],ebx
650090f0:	jne    0x65009130
650090f2:	mov    ecx,DWORD PTR [edi+0x4]
650090f5:	mov    edx,DWORD PTR [ecx+0x4]
650090f8:	push   edx
650090f9:	mov    ecx,edi
650090fb:	call   0x65009cb0
65009100:	mov    eax,DWORD PTR [edi+0x4]
65009103:	mov    DWORD PTR [eax+0x4],eax
65009106:	mov    eax,DWORD PTR [edi+0x4]
65009109:	mov    DWORD PTR [edi+0x8],0x0
65009110:	mov    DWORD PTR [eax],eax
65009112:	mov    eax,DWORD PTR [edi+0x4]
65009115:	mov    DWORD PTR [eax+0x8],eax
65009118:	mov    eax,DWORD PTR [edi+0x4]
6500911b:	mov    ecx,DWORD PTR [eax]
6500911d:	mov    eax,DWORD PTR [ebp+0x8]
65009120:	mov    DWORD PTR [eax+0x4],ecx
65009123:	mov    DWORD PTR [eax],edi
65009125:	pop    edi
65009126:	pop    esi
65009127:	pop    ebx
65009128:	mov    esp,ebp
6500912a:	pop    ebp
6500912b:	ret    0x14
6500912e:	mov    edi,edi
65009130:	mov    ebx,DWORD PTR [ebp+0xc]
65009133:	test   ebx,ebx
65009135:	je     0x6500913c
65009137:	cmp    ebx,DWORD PTR [ebp+0x14]
6500913a:	je     0x65009141
6500913c:	call   0x65012443
65009141:	cmp    esi,DWORD PTR [ebp+0x18]
65009144:	je     0x650091ae
65009146:	test   ebx,ebx
65009148:	mov    DWORD PTR [esp+0x14],esi
6500914c:	jne    0x65009153
6500914e:	call   0x65012443
65009153:	cmp    BYTE PTR [esi+0x45],0x0
65009157:	je     0x65009160
65009159:	call   0x65012443
6500915e:	jmp    0x6500919a
65009160:	mov    eax,DWORD PTR [esi+0x8]
65009163:	cmp    BYTE PTR [eax+0x45],0x0
65009167:	jne    0x6500917f
65009169:	mov    esi,eax
6500916b:	mov    eax,DWORD PTR [esi]
6500916d:	cmp    BYTE PTR [eax+0x45],0x0
65009171:	jne    0x6500919a
65009173:	mov    esi,eax
65009175:	mov    eax,DWORD PTR [esi]
65009177:	cmp    BYTE PTR [eax+0x45],0x0
6500917b:	je     0x65009173
6500917d:	jmp    0x6500919a
6500917f:	mov    eax,DWORD PTR [esi+0x4]
65009182:	cmp    BYTE PTR [eax+0x45],0x0
65009186:	jne    0x65009198
65009188:	cmp    esi,DWORD PTR [eax+0x8]
6500918b:	jne    0x65009198
6500918d:	mov    esi,eax
6500918f:	mov    eax,DWORD PTR [eax+0x4]
65009192:	cmp    BYTE PTR [eax+0x45],0x0
65009196:	je     0x65009188
65009198:	mov    esi,eax
6500919a:	mov    edx,DWORD PTR [esp+0x14]
6500919e:	push   edx
6500919f:	push   ebx
650091a0:	lea    eax,[esp+0x20]
650091a4:	push   eax
650091a5:	mov    ecx,edi
650091a7:	call   0x650095b0
650091ac:	jmp    0x65009130
650091ae:	mov    eax,DWORD PTR [ebp+0x8]
650091b1:	pop    edi
650091b2:	mov    DWORD PTR [eax+0x4],esi
650091b5:	pop    esi
650091b6:	mov    DWORD PTR [eax],ebx
650091b8:	pop    ebx
650091b9:	mov    esp,ebp
650091bb:	pop    ebp
650091bc:	ret    0x14
650091bf:	int3   
650091c0:	push   ebp
650091c1:	mov    ebp,esp
650091c3:	push   0xffffffff
650091c5:	push   0x65022510
650091ca:	mov    eax,fs:0x0
650091d0:	push   eax
650091d1:	sub    esp,0xc
650091d4:	push   ebx
650091d5:	push   esi
650091d6:	push   edi
650091d7:	mov    eax,ds:0x6502c09c
650091dc:	xor    eax,ebp
650091de:	push   eax
650091df:	lea    eax,[ebp-0xc]
650091e2:	mov    fs:0x0,eax
650091e8:	mov    DWORD PTR [ebp-0x10],esp
650091eb:	mov    edi,ecx
650091ed:	mov    DWORD PTR [ebp-0x14],edi
650091f0:	mov    eax,DWORD PTR [ebp+0x8]
650091f3:	mov    esi,eax
650091f5:	or     esi,0x7
650091f8:	cmp    esi,0x7ffffffe
650091fe:	jbe    0x65009204
65009200:	mov    esi,eax
65009202:	jmp    0x65009226
65009204:	mov    ebx,DWORD PTR [edi+0x18]
65009207:	mov    eax,0xaaaaaaab
6500920c:	mul    esi
6500920e:	mov    ecx,ebx
65009210:	shr    ecx,1
65009212:	shr    edx,1
65009214:	cmp    edx,ecx
65009216:	jae    0x65009226
65009218:	mov    eax,0x7ffffffe
6500921d:	sub    eax,ecx
6500921f:	cmp    ebx,eax
65009221:	ja     0x65009226
65009223:	lea    esi,[ecx+ebx*1]
65009226:	lea    ecx,[esi+0x1]
65009229:	push   ecx
6500922a:	mov    ecx,edi
6500922c:	mov    DWORD PTR [ebp-0x4],0x0
65009233:	call   0x65009930
65009238:	mov    DWORD PTR [ebp+0x8],eax
6500923b:	jmp    0x65009265
6500923d:	mov    eax,DWORD PTR [ebp+0x8]
65009240:	mov    ecx,DWORD PTR [ebp-0x14]
65009243:	mov    DWORD PTR [ebp-0x18],eax
65009246:	add    eax,0x1
65009249:	mov    DWORD PTR [ebp-0x10],esp
6500924c:	push   eax
6500924d:	mov    BYTE PTR [ebp-0x4],0x2
65009251:	call   0x65009930
65009256:	mov    DWORD PTR [ebp+0x8],eax
65009259:	mov    eax,0x6500925f
6500925e:	ret    
6500925f:	mov    edi,DWORD PTR [ebp-0x14]
65009262:	mov    esi,DWORD PTR [ebp-0x18]
65009265:	mov    ebx,DWORD PTR [ebp+0xc]
65009268:	test   ebx,ebx
6500926a:	jbe    0x65009290
6500926c:	cmp    DWORD PTR [edi+0x18],0x8
65009270:	jb     0x65009277
65009272:	mov    eax,DWORD PTR [edi+0x4]
65009275:	jmp    0x6500927a
65009277:	lea    eax,[edi+0x4]
6500927a:	mov    ecx,DWORD PTR [ebp+0x8]
6500927d:	lea    edx,[ebx+ebx*1]
65009280:	push   edx
65009281:	push   eax
65009282:	lea    eax,[esi+esi*1+0x2]
65009286:	push   eax
65009287:	push   ecx
65009288:	call   0x65012243
6500928d:	add    esp,0x10
65009290:	cmp    DWORD PTR [edi+0x18],0x8
65009294:	jb     0x650092a2
65009296:	mov    edx,DWORD PTR [edi+0x4]
65009299:	push   edx
6500929a:	call   0x650120d2
6500929f:	add    esp,0x4
650092a2:	cmp    esi,0x8
650092a5:	mov    ecx,DWORD PTR [ebp+0x8]
650092a8:	lea    eax,[edi+0x4]
650092ab:	mov    WORD PTR [eax],0x0
650092b0:	mov    DWORD PTR [eax],ecx
650092b2:	mov    DWORD PTR [edi+0x18],esi
650092b5:	mov    DWORD PTR [edi+0x14],ebx
650092b8:	jb     0x650092bc
650092ba:	mov    eax,ecx
650092bc:	mov    WORD PTR [eax+ebx*2],0x0
650092c2:	mov    ecx,DWORD PTR [ebp-0xc]
650092c5:	mov    DWORD PTR fs:0x0,ecx
650092cc:	pop    ecx
650092cd:	pop    edi
650092ce:	pop    esi
650092cf:	pop    ebx
650092d0:	mov    esp,ebp
650092d2:	pop    ebp
650092d3:	ret    0x8
650092d6:	mov    esi,DWORD PTR [ebp-0x14]
650092d9:	cmp    DWORD PTR [esi+0x18],0x8
650092dd:	jb     0x650092eb
650092df:	mov    eax,DWORD PTR [esi+0x4]
650092e2:	push   eax
650092e3:	call   0x650120d2
650092e8:	add    esp,0x4
650092eb:	xor    eax,eax
650092ed:	push   eax
650092ee:	mov    DWORD PTR [esi+0x18],0x7
650092f5:	mov    DWORD PTR [esi+0x14],eax
650092f8:	push   eax
650092f9:	mov    WORD PTR [esi+0x4],ax
650092fd:	call   0x650124d6
65009302:	int3   
65009303:	int3   
65009304:	int3   
65009305:	int3   
65009306:	int3   
65009307:	int3   
65009308:	int3   
65009309:	int3   
6500930a:	int3   
6500930b:	int3   
6500930c:	int3   
6500930d:	int3   
6500930e:	int3   
6500930f:	int3   
65009310:	push   ebp
65009311:	mov    ebp,esp
65009313:	and    esp,0xfffffff8
65009316:	sub    esp,0x14
65009319:	push   ebx
6500931a:	push   esi
6500931b:	push   edi
6500931c:	mov    edi,ecx
6500931e:	mov    eax,DWORD PTR [edi+0x4]
65009321:	mov    ebx,DWORD PTR [eax]
65009323:	mov    eax,DWORD PTR [ebp+0xc]
65009326:	test   eax,eax
65009328:	je     0x6500932e
6500932a:	cmp    eax,edi
6500932c:	je     0x65009333
6500932e:	call   0x65012443
65009333:	mov    esi,DWORD PTR [ebp+0x10]
65009336:	cmp    esi,ebx
65009338:	jne    0x65009390
6500933a:	mov    eax,DWORD PTR [ebp+0x14]
6500933d:	test   eax,eax
6500933f:	mov    ebx,DWORD PTR [edi+0x4]
65009342:	je     0x65009348
65009344:	cmp    eax,edi
65009346:	je     0x6500934d
65009348:	call   0x65012443
6500934d:	cmp    DWORD PTR [ebp+0x18],ebx
65009350:	jne    0x65009390
65009352:	mov    ecx,DWORD PTR [edi+0x4]
65009355:	mov    edx,DWORD PTR [ecx+0x4]
65009358:	push   edx
65009359:	mov    ecx,edi
6500935b:	call   0x65009d30
65009360:	mov    eax,DWORD PTR [edi+0x4]
65009363:	mov    DWORD PTR [eax+0x4],eax
65009366:	mov    eax,DWORD PTR [edi+0x4]
65009369:	mov    DWORD PTR [edi+0x8],0x0
65009370:	mov    DWORD PTR [eax],eax
65009372:	mov    eax,DWORD PTR [edi+0x4]
65009375:	mov    DWORD PTR [eax+0x8],eax
65009378:	mov    eax,DWORD PTR [edi+0x4]
6500937b:	mov    ecx,DWORD PTR [eax]
6500937d:	mov    eax,DWORD PTR [ebp+0x8]
65009380:	mov    DWORD PTR [eax+0x4],ecx
65009383:	mov    DWORD PTR [eax],edi
65009385:	pop    edi
65009386:	pop    esi
65009387:	pop    ebx
65009388:	mov    esp,ebp
6500938a:	pop    ebp
6500938b:	ret    0x14
6500938e:	mov    edi,edi
65009390:	mov    ebx,DWORD PTR [ebp+0xc]
65009393:	test   ebx,ebx
65009395:	je     0x6500939c
65009397:	cmp    ebx,DWORD PTR [ebp+0x14]
6500939a:	je     0x650093a1
6500939c:	call   0x65012443
650093a1:	cmp    esi,DWORD PTR [ebp+0x18]
650093a4:	je     0x6500940e
650093a6:	test   ebx,ebx
650093a8:	mov    DWORD PTR [esp+0x14],esi
650093ac:	jne    0x650093b3
650093ae:	call   0x65012443
650093b3:	cmp    BYTE PTR [esi+0x45],0x0
650093b7:	je     0x650093c0
650093b9:	call   0x65012443
650093be:	jmp    0x650093fa
650093c0:	mov    eax,DWORD PTR [esi+0x8]
650093c3:	cmp    BYTE PTR [eax+0x45],0x0
650093c7:	jne    0x650093df
650093c9:	mov    esi,eax
650093cb:	mov    eax,DWORD PTR [esi]
650093cd:	cmp    BYTE PTR [eax+0x45],0x0
650093d1:	jne    0x650093fa
650093d3:	mov    esi,eax
650093d5:	mov    eax,DWORD PTR [esi]
650093d7:	cmp    BYTE PTR [eax+0x45],0x0
650093db:	je     0x650093d3
650093dd:	jmp    0x650093fa
650093df:	mov    eax,DWORD PTR [esi+0x4]
650093e2:	cmp    BYTE PTR [eax+0x45],0x0
650093e6:	jne    0x650093f8
650093e8:	cmp    esi,DWORD PTR [eax+0x8]
650093eb:	jne    0x650093f8
650093ed:	mov    esi,eax
650093ef:	mov    eax,DWORD PTR [eax+0x4]
650093f2:	cmp    BYTE PTR [eax+0x45],0x0
650093f6:	je     0x650093e8
650093f8:	mov    esi,eax
650093fa:	mov    edx,DWORD PTR [esp+0x14]
650093fe:	push   edx
650093ff:	push   ebx
65009400:	lea    eax,[esp+0x20]
65009404:	push   eax
65009405:	mov    ecx,edi
65009407:	call   0x65009990
6500940c:	jmp    0x65009390
6500940e:	mov    eax,DWORD PTR [ebp+0x8]
65009411:	pop    edi
65009412:	mov    DWORD PTR [eax+0x4],esi
65009415:	pop    esi
65009416:	mov    DWORD PTR [eax],ebx
65009418:	pop    ebx
65009419:	mov    esp,ebp
6500941b:	pop    ebp
6500941c:	ret    0x14
6500941f:	int3   
65009420:	push   esi
65009421:	mov    esi,ecx
65009423:	cmp    DWORD PTR [esi],0x0
65009426:	jne    0x6500942d
65009428:	call   0x65012443
6500942d:	mov    eax,DWORD PTR [esi+0x4]
65009430:	cmp    BYTE PTR [eax+0x45],0x0
65009434:	je     0x65009448
65009436:	mov    eax,DWORD PTR [eax+0x8]
65009439:	mov    DWORD PTR [esi+0x4],eax
6500943c:	cmp    BYTE PTR [eax+0x45],0x0
65009440:	je     0x650094a7
65009442:	pop    esi
65009443:	jmp    0x65012443
65009448:	mov    ecx,DWORD PTR [eax]
6500944a:	cmp    BYTE PTR [ecx+0x45],0x0
6500944e:	jne    0x65009470
65009450:	mov    eax,DWORD PTR [ecx+0x8]
65009453:	cmp    BYTE PTR [eax+0x45],0x0
65009457:	jne    0x6500946b
65009459:	lea    esp,[esp+0x0]
65009460:	mov    ecx,eax
65009462:	mov    eax,DWORD PTR [ecx+0x8]
65009465:	cmp    BYTE PTR [eax+0x45],0x0
65009469:	je     0x65009460
6500946b:	mov    DWORD PTR [esi+0x4],ecx
6500946e:	pop    esi
6500946f:	ret    
65009470:	mov    eax,DWORD PTR [eax+0x4]
65009473:	cmp    BYTE PTR [eax+0x45],0x0
65009477:	jne    0x65009495
65009479:	lea    esp,[esp+0x0]
65009480:	mov    ecx,DWORD PTR [esi+0x4]
65009483:	cmp    ecx,DWORD PTR [eax]
65009485:	jne    0x65009495
65009487:	mov    DWORD PTR [esi+0x4],eax
6500948a:	mov    edx,eax
6500948c:	mov    eax,DWORD PTR [edx+0x4]
6500948f:	cmp    BYTE PTR [eax+0x45],0x0
65009493:	je     0x65009480
65009495:	mov    ecx,DWORD PTR [esi+0x4]
65009498:	cmp    BYTE PTR [ecx+0x45],0x0
6500949c:	je     0x650094a4
6500949e:	pop    esi
6500949f:	jmp    0x65012443
650094a4:	mov    DWORD PTR [esi+0x4],eax
650094a7:	pop    esi
650094a8:	ret    
650094a9:	int3   
650094aa:	int3   
650094ab:	int3   
650094ac:	int3   
650094ad:	int3   
650094ae:	int3   
650094af:	int3   
650094b0:	push   0xffffffff
650094b2:	push   0x650224e8
650094b7:	mov    eax,fs:0x0
650094bd:	push   eax
650094be:	push   ecx
650094bf:	push   ebx
650094c0:	push   esi
650094c1:	push   edi
650094c2:	mov    eax,ds:0x6502c09c
650094c7:	xor    eax,esp
650094c9:	push   eax
650094ca:	lea    eax,[esp+0x14]
650094ce:	mov    fs:0x0,eax
650094d4:	mov    esi,ecx
650094d6:	mov    DWORD PTR [esp+0x10],esi
650094da:	mov    edi,DWORD PTR [esp+0x24]
650094de:	xor    ebx,ebx
650094e0:	push   0xffffffff
650094e2:	push   ebx
650094e3:	mov    DWORD PTR [esi+0x18],0xf
650094ea:	mov    DWORD PTR [esi+0x14],ebx
650094ed:	push   edi
650094ee:	mov    BYTE PTR [esi+0x4],bl
650094f1:	call   0x650017e0
650094f6:	push   0xffffffff
650094f8:	lea    ecx,[esi+0x1c]
650094fb:	mov    DWORD PTR [esp+0x20],ebx
650094ff:	lea    eax,[edi+0x1c]
65009502:	push   ebx
65009503:	mov    DWORD PTR [ecx+0x18],0xf
6500950a:	mov    DWORD PTR [ecx+0x14],ebx
6500950d:	push   eax
6500950e:	mov    BYTE PTR [ecx+0x4],bl
65009511:	call   0x650017e0
65009516:	mov    eax,esi
65009518:	mov    ecx,DWORD PTR [esp+0x14]
6500951c:	mov    DWORD PTR fs:0x0,ecx
65009523:	pop    ecx
65009524:	pop    edi
65009525:	pop    esi
65009526:	pop    ebx
65009527:	add    esp,0x10
6500952a:	ret    0x4
6500952d:	int3   
6500952e:	int3   
6500952f:	int3   
65009530:	push   0xffffffff
65009532:	push   0x65022828
65009537:	mov    eax,fs:0x0
6500953d:	push   eax
6500953e:	push   ecx
6500953f:	push   ebx
65009540:	push   esi
65009541:	push   edi
65009542:	mov    eax,ds:0x6502c09c
65009547:	xor    eax,esp
65009549:	push   eax
6500954a:	lea    eax,[esp+0x14]
6500954e:	mov    fs:0x0,eax
65009554:	mov    esi,ecx
65009556:	mov    DWORD PTR [esp+0x10],esi
6500955a:	mov    ebx,DWORD PTR [esp+0x24]
6500955e:	xor    edi,edi
65009560:	push   0xffffffff
65009562:	push   edi
65009563:	mov    DWORD PTR [esi+0x18],0x7
6500956a:	mov    DWORD PTR [esi+0x14],edi
6500956d:	push   ebx
6500956e:	mov    WORD PTR [esi+0x4],di
65009572:	call   0x65008760
65009577:	push   0xffffffff
65009579:	lea    ecx,[esi+0x1c]
6500957c:	mov    DWORD PTR [esp+0x20],edi
65009580:	lea    eax,[ebx+0x1c]
65009583:	push   edi
65009584:	mov    DWORD PTR [ecx+0x18],0x7
6500958b:	mov    DWORD PTR [ecx+0x14],edi
6500958e:	push   eax
6500958f:	mov    WORD PTR [ecx+0x4],di
65009593:	call   0x65008760
65009598:	mov    eax,esi
6500959a:	mov    ecx,DWORD PTR [esp+0x14]
6500959e:	mov    DWORD PTR fs:0x0,ecx
650095a5:	pop    ecx
650095a6:	pop    edi
650095a7:	pop    esi
650095a8:	pop    ebx
650095a9:	add    esp,0x10
650095ac:	ret    0x4
650095af:	int3   
650095b0:	push   ebp
650095b1:	mov    ebp,esp
650095b3:	and    esp,0xfffffff8
650095b6:	push   0xffffffff
650095b8:	push   0x65022948
650095bd:	mov    eax,fs:0x0
650095c3:	push   eax
650095c4:	sub    esp,0x50
650095c7:	push   ebx
650095c8:	push   esi
650095c9:	push   edi
650095ca:	mov    eax,ds:0x6502c09c
650095cf:	xor    eax,esp
650095d1:	push   eax
650095d2:	lea    eax,[esp+0x60]
650095d6:	mov    fs:0x0,eax
650095dc:	mov    DWORD PTR [esp+0x14],ecx
650095e0:	mov    edi,DWORD PTR [ebp+0x10]
650095e3:	cmp    BYTE PTR [edi+0x45],0x0
650095e7:	je     0x65009635
650095e9:	push   0x1b
650095eb:	xor    esi,esi
650095ed:	push   0x65028248
650095f2:	lea    ecx,[esp+0x20]
650095f6:	mov    DWORD PTR [esp+0x38],0xf
650095fe:	mov    DWORD PTR [esp+0x34],esi
65009602:	mov    BYTE PTR [esp+0x24],0x0
65009607:	call   0x650018c0
6500960c:	lea    eax,[esp+0x18]
65009610:	push   eax
65009611:	lea    ecx,[esp+0x38]
65009615:	mov    DWORD PTR [esp+0x6c],esi
65009619:	call   0x65002d10
6500961e:	push   0x6502a08c
65009623:	lea    ecx,[esp+0x38]
65009627:	push   ecx
65009628:	mov    DWORD PTR [esp+0x3c],0x65024c2c
65009630:	call   0x650124d6
65009635:	lea    ecx,[ebp+0xc]
65009638:	call   0x65009dd0
6500963d:	mov    ecx,DWORD PTR [edi]
6500963f:	cmp    BYTE PTR [ecx+0x45],0x0
65009643:	je     0x6500964a
65009645:	mov    ebx,DWORD PTR [edi+0x8]
65009648:	jmp    0x65009661
6500964a:	mov    edx,DWORD PTR [edi+0x8]
6500964d:	cmp    BYTE PTR [edx+0x45],0x0
65009651:	je     0x65009657
65009653:	mov    ebx,ecx
65009655:	jmp    0x65009661
65009657:	mov    eax,DWORD PTR [ebp+0x10]
6500965a:	cmp    eax,edi
6500965c:	mov    ebx,DWORD PTR [eax+0x8]
6500965f:	jne    0x650096dd
65009661:	cmp    BYTE PTR [ebx+0x45],0x0
65009665:	mov    esi,DWORD PTR [edi+0x4]
65009668:	jne    0x6500966d
6500966a:	mov    DWORD PTR [ebx+0x4],esi
6500966d:	mov    ecx,DWORD PTR [esp+0x14]
65009671:	mov    eax,DWORD PTR [ecx+0x4]
65009674:	cmp    DWORD PTR [eax+0x4],edi
65009677:	jne    0x6500967e
65009679:	mov    DWORD PTR [eax+0x4],ebx
6500967c:	jmp    0x65009689
6500967e:	cmp    DWORD PTR [esi],edi
65009680:	jne    0x65009686
65009682:	mov    DWORD PTR [esi],ebx
65009684:	jmp    0x65009689
65009686:	mov    DWORD PTR [esi+0x8],ebx
65009689:	mov    eax,DWORD PTR [ecx+0x4]
6500968c:	cmp    DWORD PTR [eax],edi
6500968e:	jne    0x650096ac
65009690:	cmp    BYTE PTR [ebx+0x45],0x0
65009694:	je     0x6500969a
65009696:	mov    eax,esi
65009698:	jmp    0x650096a7
6500969a:	push   ebx
6500969b:	call   0x65009db0
650096a0:	mov    ecx,DWORD PTR [esp+0x18]
650096a4:	add    esp,0x4
650096a7:	mov    edx,DWORD PTR [ecx+0x4]
650096aa:	mov    DWORD PTR [edx],eax
650096ac:	mov    eax,DWORD PTR [ecx+0x4]
650096af:	cmp    DWORD PTR [eax+0x8],edi
650096b2:	jne    0x6500973c
650096b8:	cmp    BYTE PTR [ebx+0x45],0x0
650096bc:	je     0x650096c8
650096be:	mov    edx,DWORD PTR [ecx+0x4]
650096c1:	mov    eax,esi
650096c3:	mov    DWORD PTR [edx+0x8],eax
650096c6:	jmp    0x6500973c
650096c8:	push   ebx
650096c9:	call   0x650098d0
650096ce:	mov    ecx,DWORD PTR [esp+0x18]
650096d2:	mov    edx,DWORD PTR [ecx+0x4]
650096d5:	add    esp,0x4
650096d8:	mov    DWORD PTR [edx+0x8],eax
650096db:	jmp    0x6500973c
650096dd:	mov    DWORD PTR [ecx+0x4],eax
650096e0:	mov    ecx,DWORD PTR [edi]
650096e2:	mov    DWORD PTR [eax],ecx
650096e4:	cmp    eax,DWORD PTR [edi+0x8]
650096e7:	jne    0x650096ed
650096e9:	mov    esi,eax
650096eb:	jmp    0x65009707
650096ed:	cmp    BYTE PTR [ebx+0x45],0x0
650096f1:	mov    esi,DWORD PTR [eax+0x4]
650096f4:	jne    0x650096f9
650096f6:	mov    DWORD PTR [ebx+0x4],esi
650096f9:	mov    DWORD PTR [esi],ebx
650096fb:	mov    edx,DWORD PTR [edi+0x8]
650096fe:	mov    DWORD PTR [eax+0x8],edx
65009701:	mov    ecx,DWORD PTR [edi+0x8]
65009704:	mov    DWORD PTR [ecx+0x4],eax
65009707:	mov    edx,DWORD PTR [esp+0x14]
6500970b:	mov    ecx,DWORD PTR [edx+0x4]
6500970e:	cmp    DWORD PTR [ecx+0x4],edi
65009711:	jne    0x65009718
65009713:	mov    DWORD PTR [ecx+0x4],eax
65009716:	jmp    0x65009726
65009718:	mov    ecx,DWORD PTR [edi+0x4]
6500971b:	cmp    DWORD PTR [ecx],edi
6500971d:	jne    0x65009723
6500971f:	mov    DWORD PTR [ecx],eax
65009721:	jmp    0x65009726
65009723:	mov    DWORD PTR [ecx+0x8],eax
65009726:	mov    ecx,DWORD PTR [edi+0x4]
65009729:	mov    DWORD PTR [eax+0x4],ecx
6500972c:	mov    cl,BYTE PTR [eax+0x44]
6500972f:	mov    dl,BYTE PTR [edi+0x44]
65009732:	mov    BYTE PTR [eax+0x44],dl
65009735:	mov    BYTE PTR [edi+0x44],cl
65009738:	mov    ecx,DWORD PTR [esp+0x14]
6500973c:	cmp    BYTE PTR [edi+0x44],0x1
65009740:	jne    0x65009851
65009746:	mov    eax,DWORD PTR [ecx+0x4]
65009749:	cmp    ebx,DWORD PTR [eax+0x4]
6500974c:	je     0x6500984d
65009752:	cmp    BYTE PTR [ebx+0x44],0x1
65009756:	jne    0x6500984d
6500975c:	mov    eax,DWORD PTR [esi]
6500975e:	cmp    ebx,eax
65009760:	jne    0x650097d0
65009762:	mov    eax,DWORD PTR [esi+0x8]
65009765:	cmp    BYTE PTR [eax+0x44],0x0
65009769:	jne    0x65009780
6500976b:	mov    BYTE PTR [eax+0x44],0x1
6500976f:	push   esi
65009770:	mov    BYTE PTR [esi+0x44],0x0
65009774:	call   0x65008f60
65009779:	mov    eax,DWORD PTR [esi+0x8]
6500977c:	mov    ecx,DWORD PTR [esp+0x14]
65009780:	cmp    BYTE PTR [eax+0x45],0x0
65009784:	jne    0x65009805
65009786:	mov    edx,DWORD PTR [eax]
65009788:	cmp    BYTE PTR [edx+0x44],0x1
6500978c:	jne    0x65009797
6500978e:	mov    edx,DWORD PTR [eax+0x8]
65009791:	cmp    BYTE PTR [edx+0x44],0x1
65009795:	je     0x65009801
65009797:	mov    edx,DWORD PTR [eax+0x8]
6500979a:	cmp    BYTE PTR [edx+0x44],0x1
6500979e:	jne    0x650097b7
650097a0:	mov    edx,DWORD PTR [eax]
650097a2:	mov    BYTE PTR [edx+0x44],0x1
650097a6:	push   eax
650097a7:	mov    BYTE PTR [eax+0x44],0x0
650097ab:	call   0x65008fb0
650097b0:	mov    eax,DWORD PTR [esi+0x8]
650097b3:	mov    ecx,DWORD PTR [esp+0x14]
650097b7:	mov    dl,BYTE PTR [esi+0x44]
650097ba:	mov    BYTE PTR [eax+0x44],dl
650097bd:	mov    BYTE PTR [esi+0x44],0x1
650097c1:	mov    eax,DWORD PTR [eax+0x8]
650097c4:	push   esi
650097c5:	mov    BYTE PTR [eax+0x44],0x1
650097c9:	call   0x65008f60
650097ce:	jmp    0x6500984d
650097d0:	cmp    BYTE PTR [eax+0x44],0x0
650097d4:	jne    0x650097ea
650097d6:	mov    BYTE PTR [eax+0x44],0x1
650097da:	push   esi
650097db:	mov    BYTE PTR [esi+0x44],0x0
650097df:	call   0x65008fb0
650097e4:	mov    eax,DWORD PTR [esi]
650097e6:	mov    ecx,DWORD PTR [esp+0x14]
650097ea:	cmp    BYTE PTR [eax+0x45],0x0
650097ee:	jne    0x65009805
650097f0:	mov    edx,DWORD PTR [eax+0x8]
650097f3:	cmp    BYTE PTR [edx+0x44],0x1
650097f7:	jne    0x65009818
650097f9:	mov    edx,DWORD PTR [eax]
650097fb:	cmp    BYTE PTR [edx+0x44],0x1
650097ff:	jne    0x65009818
65009801:	mov    BYTE PTR [eax+0x44],0x0
65009805:	mov    eax,DWORD PTR [ecx+0x4]
65009808:	mov    ebx,esi
6500980a:	cmp    ebx,DWORD PTR [eax+0x4]
6500980d:	mov    esi,DWORD PTR [esi+0x4]
65009810:	jne    0x65009752
65009816:	jmp    0x6500984d
65009818:	mov    edx,DWORD PTR [eax]
6500981a:	cmp    BYTE PTR [edx+0x44],0x1
6500981e:	jne    0x65009837
65009820:	mov    edx,DWORD PTR [eax+0x8]
65009823:	mov    BYTE PTR [edx+0x44],0x1
65009827:	push   eax
65009828:	mov    BYTE PTR [eax+0x44],0x0
6500982c:	call   0x65008f60
65009831:	mov    eax,DWORD PTR [esi]
65009833:	mov    ecx,DWORD PTR [esp+0x14]
65009837:	mov    dl,BYTE PTR [esi+0x44]
6500983a:	mov    BYTE PTR [eax+0x44],dl
6500983d:	mov    BYTE PTR [esi+0x44],0x1
65009841:	mov    eax,DWORD PTR [eax]
65009843:	push   esi
65009844:	mov    BYTE PTR [eax+0x44],0x1
65009848:	call   0x65008fb0
6500984d:	mov    BYTE PTR [ebx+0x44],0x1
65009851:	cmp    DWORD PTR [edi+0x40],0x10
65009855:	jb     0x65009863
65009857:	mov    ecx,DWORD PTR [edi+0x2c]
6500985a:	push   ecx
6500985b:	call   0x650120d2
65009860:	add    esp,0x4
65009863:	xor    esi,esi
65009865:	mov    ebx,0xf
6500986a:	mov    DWORD PTR [edi+0x40],ebx
6500986d:	mov    DWORD PTR [edi+0x3c],esi
65009870:	mov    BYTE PTR [edi+0x2c],0x0
65009874:	cmp    DWORD PTR [edi+0x24],0x10
65009878:	jb     0x65009886
6500987a:	mov    edx,DWORD PTR [edi+0x10]
6500987d:	push   edx
6500987e:	call   0x650120d2
65009883:	add    esp,0x4
65009886:	mov    DWORD PTR [edi+0x24],ebx
65009889:	mov    DWORD PTR [edi+0x20],esi
6500988c:	push   edi
6500988d:	mov    BYTE PTR [edi+0x10],0x0
65009891:	call   0x650120d2
65009896:	mov    ecx,DWORD PTR [esp+0x18]
6500989a:	mov    eax,DWORD PTR [ecx+0x8]
6500989d:	add    esp,0x4
650098a0:	cmp    eax,esi
650098a2:	jbe    0x650098aa
650098a4:	add    eax,0xffffffff
650098a7:	mov    DWORD PTR [ecx+0x8],eax
650098aa:	mov    eax,DWORD PTR [ebp+0x8]
650098ad:	mov    ecx,DWORD PTR [ebp+0xc]
650098b0:	mov    edx,DWORD PTR [ebp+0x10]
650098b3:	mov    DWORD PTR [eax],ecx
650098b5:	mov    DWORD PTR [eax+0x4],edx
650098b8:	mov    ecx,DWORD PTR [esp+0x60]
650098bc:	mov    DWORD PTR fs:0x0,ecx
650098c3:	pop    ecx
650098c4:	pop    edi
650098c5:	pop    esi
650098c6:	pop    ebx
650098c7:	mov    esp,ebp
650098c9:	pop    ebp
650098ca:	ret    0xc
650098cd:	int3   
650098ce:	int3   
650098cf:	int3   
650098d0:	mov    eax,DWORD PTR [esp+0x4]
650098d4:	mov    ecx,DWORD PTR [eax+0x8]
650098d7:	cmp    BYTE PTR [ecx+0x45],0x0
650098db:	jne    0x650098eb
650098dd:	lea    ecx,[ecx+0x0]
650098e0:	mov    eax,ecx
650098e2:	mov    ecx,DWORD PTR [eax+0x8]
650098e5:	cmp    BYTE PTR [ecx+0x45],0x0
650098e9:	je     0x650098e0
650098eb:	ret    
650098ec:	int3   
650098ed:	int3   
650098ee:	int3   
650098ef:	int3   
650098f0:	push   0x48
650098f2:	call   0x6501246c
650098f7:	add    esp,0x4
650098fa:	test   eax,eax
650098fc:	je     0x65009904
650098fe:	mov    DWORD PTR [eax],0x0
65009904:	lea    ecx,[eax+0x4]
65009907:	test   ecx,ecx
65009909:	je     0x65009911
6500990b:	mov    DWORD PTR [ecx],0x0
65009911:	lea    ecx,[eax+0x8]
65009914:	test   ecx,ecx
65009916:	je     0x6500991e
65009918:	mov    DWORD PTR [ecx],0x0
6500991e:	mov    BYTE PTR [eax+0x44],0x1
65009922:	mov    BYTE PTR [eax+0x45],0x0
65009926:	ret    
65009927:	int3   
65009928:	int3   
65009929:	int3   
6500992a:	int3   
6500992b:	int3   
6500992c:	int3   
6500992d:	int3   
6500992e:	int3   
6500992f:	int3   
65009930:	mov    ecx,DWORD PTR [esp+0x4]
65009934:	sub    esp,0xc
65009937:	test   ecx,ecx
65009939:	ja     0x6500994f
6500993b:	xor    ecx,ecx
6500993d:	lea    edx,[ecx+ecx*1]
65009940:	push   edx
65009941:	call   0x6501246c
65009946:	add    esp,0x4
65009949:	add    esp,0xc
6500994c:	ret    0x4
6500994f:	or     eax,0xffffffff
65009952:	xor    edx,edx
65009954:	div    ecx
65009956:	cmp    eax,0x2
65009959:	jae    0x6500993d
6500995b:	lea    eax,[esp+0x10]
6500995f:	push   eax
65009960:	lea    ecx,[esp+0x4]
65009964:	mov    DWORD PTR [esp+0x14],0x0
6500996c:	call   0x650120e8
65009971:	push   0x65029ffc
65009976:	lea    ecx,[esp+0x4]
6500997a:	push   ecx
6500997b:	mov    DWORD PTR [esp+0x8],0x65024c08
65009983:	call   0x650124d6
65009988:	int3   
65009989:	int3   
6500998a:	int3   
6500998b:	int3   
6500998c:	int3   
6500998d:	int3   
6500998e:	int3   
6500998f:	int3   
65009990:	push   ebp
65009991:	mov    ebp,esp
65009993:	and    esp,0xfffffff8
65009996:	push   0xffffffff
65009998:	push   0x65022918
6500999d:	mov    eax,fs:0x0
650099a3:	push   eax
650099a4:	sub    esp,0x50
650099a7:	push   ebx
650099a8:	push   esi
650099a9:	push   edi
650099aa:	mov    eax,ds:0x6502c09c
650099af:	xor    eax,esp
650099b1:	push   eax
650099b2:	lea    eax,[esp+0x60]
650099b6:	mov    fs:0x0,eax
650099bc:	mov    DWORD PTR [esp+0x14],ecx
650099c0:	mov    edi,DWORD PTR [ebp+0x10]
650099c3:	cmp    BYTE PTR [edi+0x45],0x0
650099c7:	je     0x65009a15
650099c9:	push   0x1b
650099cb:	xor    esi,esi
650099cd:	push   0x65028248
650099d2:	lea    ecx,[esp+0x20]
650099d6:	mov    DWORD PTR [esp+0x38],0xf
650099de:	mov    DWORD PTR [esp+0x34],esi
650099e2:	mov    BYTE PTR [esp+0x24],0x0
650099e7:	call   0x650018c0
650099ec:	lea    eax,[esp+0x18]
650099f0:	push   eax
650099f1:	lea    ecx,[esp+0x38]
650099f5:	mov    DWORD PTR [esp+0x6c],esi
650099f9:	call   0x65002d10
650099fe:	push   0x6502a08c
65009a03:	lea    ecx,[esp+0x38]
65009a07:	push   ecx
65009a08:	mov    DWORD PTR [esp+0x3c],0x65024c2c
65009a10:	call   0x650124d6
65009a15:	lea    ecx,[ebp+0xc]
65009a18:	call   0x65009dd0
65009a1d:	mov    ecx,DWORD PTR [edi]
65009a1f:	cmp    BYTE PTR [ecx+0x45],0x0
65009a23:	je     0x65009a2a
65009a25:	mov    ebx,DWORD PTR [edi+0x8]
65009a28:	jmp    0x65009a41
65009a2a:	mov    edx,DWORD PTR [edi+0x8]
65009a2d:	cmp    BYTE PTR [edx+0x45],0x0
65009a31:	je     0x65009a37
65009a33:	mov    ebx,ecx
65009a35:	jmp    0x65009a41
65009a37:	mov    eax,DWORD PTR [ebp+0x10]
65009a3a:	cmp    eax,edi
65009a3c:	mov    ebx,DWORD PTR [eax+0x8]
65009a3f:	jne    0x65009abd
65009a41:	cmp    BYTE PTR [ebx+0x45],0x0
65009a45:	mov    esi,DWORD PTR [edi+0x4]
65009a48:	jne    0x65009a4d
65009a4a:	mov    DWORD PTR [ebx+0x4],esi
65009a4d:	mov    ecx,DWORD PTR [esp+0x14]
65009a51:	mov    eax,DWORD PTR [ecx+0x4]
65009a54:	cmp    DWORD PTR [eax+0x4],edi
65009a57:	jne    0x65009a5e
65009a59:	mov    DWORD PTR [eax+0x4],ebx
65009a5c:	jmp    0x65009a69
65009a5e:	cmp    DWORD PTR [esi],edi
65009a60:	jne    0x65009a66
65009a62:	mov    DWORD PTR [esi],ebx
65009a64:	jmp    0x65009a69
65009a66:	mov    DWORD PTR [esi+0x8],ebx
65009a69:	mov    eax,DWORD PTR [ecx+0x4]
65009a6c:	cmp    DWORD PTR [eax],edi
65009a6e:	jne    0x65009a8c
65009a70:	cmp    BYTE PTR [ebx+0x45],0x0
65009a74:	je     0x65009a7a
65009a76:	mov    eax,esi
65009a78:	jmp    0x65009a87
65009a7a:	push   ebx
65009a7b:	call   0x65009db0
65009a80:	mov    ecx,DWORD PTR [esp+0x18]
65009a84:	add    esp,0x4
65009a87:	mov    edx,DWORD PTR [ecx+0x4]
65009a8a:	mov    DWORD PTR [edx],eax
65009a8c:	mov    eax,DWORD PTR [ecx+0x4]
65009a8f:	cmp    DWORD PTR [eax+0x8],edi
65009a92:	jne    0x65009b1c
65009a98:	cmp    BYTE PTR [ebx+0x45],0x0
65009a9c:	je     0x65009aa8
65009a9e:	mov    edx,DWORD PTR [ecx+0x4]
65009aa1:	mov    eax,esi
65009aa3:	mov    DWORD PTR [edx+0x8],eax
65009aa6:	jmp    0x65009b1c
65009aa8:	push   ebx
65009aa9:	call   0x650098d0
65009aae:	mov    ecx,DWORD PTR [esp+0x18]
65009ab2:	mov    edx,DWORD PTR [ecx+0x4]
65009ab5:	add    esp,0x4
65009ab8:	mov    DWORD PTR [edx+0x8],eax
65009abb:	jmp    0x65009b1c
65009abd:	mov    DWORD PTR [ecx+0x4],eax
65009ac0:	mov    ecx,DWORD PTR [edi]
65009ac2:	mov    DWORD PTR [eax],ecx
65009ac4:	cmp    eax,DWORD PTR [edi+0x8]
65009ac7:	jne    0x65009acd
65009ac9:	mov    esi,eax
65009acb:	jmp    0x65009ae7
65009acd:	cmp    BYTE PTR [ebx+0x45],0x0
65009ad1:	mov    esi,DWORD PTR [eax+0x4]
65009ad4:	jne    0x65009ad9
65009ad6:	mov    DWORD PTR [ebx+0x4],esi
65009ad9:	mov    DWORD PTR [esi],ebx
65009adb:	mov    edx,DWORD PTR [edi+0x8]
65009ade:	mov    DWORD PTR [eax+0x8],edx
65009ae1:	mov    ecx,DWORD PTR [edi+0x8]
65009ae4:	mov    DWORD PTR [ecx+0x4],eax
65009ae7:	mov    edx,DWORD PTR [esp+0x14]
65009aeb:	mov    ecx,DWORD PTR [edx+0x4]
65009aee:	cmp    DWORD PTR [ecx+0x4],edi
65009af1:	jne    0x65009af8
65009af3:	mov    DWORD PTR [ecx+0x4],eax
65009af6:	jmp    0x65009b06
65009af8:	mov    ecx,DWORD PTR [edi+0x4]
65009afb:	cmp    DWORD PTR [ecx],edi
65009afd:	jne    0x65009b03
65009aff:	mov    DWORD PTR [ecx],eax
65009b01:	jmp    0x65009b06
65009b03:	mov    DWORD PTR [ecx+0x8],eax
65009b06:	mov    ecx,DWORD PTR [edi+0x4]
65009b09:	mov    DWORD PTR [eax+0x4],ecx
65009b0c:	mov    cl,BYTE PTR [eax+0x44]
65009b0f:	mov    dl,BYTE PTR [edi+0x44]
65009b12:	mov    BYTE PTR [eax+0x44],dl
65009b15:	mov    BYTE PTR [edi+0x44],cl
65009b18:	mov    ecx,DWORD PTR [esp+0x14]
65009b1c:	cmp    BYTE PTR [edi+0x44],0x1
65009b20:	jne    0x65009c31
65009b26:	mov    eax,DWORD PTR [ecx+0x4]
65009b29:	cmp    ebx,DWORD PTR [eax+0x4]
65009b2c:	je     0x65009c2d
65009b32:	cmp    BYTE PTR [ebx+0x44],0x1
65009b36:	jne    0x65009c2d
65009b3c:	mov    eax,DWORD PTR [esi]
65009b3e:	cmp    ebx,eax
65009b40:	jne    0x65009bb0
65009b42:	mov    eax,DWORD PTR [esi+0x8]
65009b45:	cmp    BYTE PTR [eax+0x44],0x0
65009b49:	jne    0x65009b60
65009b4b:	mov    BYTE PTR [eax+0x44],0x1
65009b4f:	push   esi
65009b50:	mov    BYTE PTR [esi+0x44],0x0
65009b54:	call   0x65008f60
65009b59:	mov    eax,DWORD PTR [esi+0x8]
65009b5c:	mov    ecx,DWORD PTR [esp+0x14]
65009b60:	cmp    BYTE PTR [eax+0x45],0x0
65009b64:	jne    0x65009be5
65009b66:	mov    edx,DWORD PTR [eax]
65009b68:	cmp    BYTE PTR [edx+0x44],0x1
65009b6c:	jne    0x65009b77
65009b6e:	mov    edx,DWORD PTR [eax+0x8]
65009b71:	cmp    BYTE PTR [edx+0x44],0x1
65009b75:	je     0x65009be1
65009b77:	mov    edx,DWORD PTR [eax+0x8]
65009b7a:	cmp    BYTE PTR [edx+0x44],0x1
65009b7e:	jne    0x65009b97
65009b80:	mov    edx,DWORD PTR [eax]
65009b82:	mov    BYTE PTR [edx+0x44],0x1
65009b86:	push   eax
65009b87:	mov    BYTE PTR [eax+0x44],0x0
65009b8b:	call   0x65008fb0
65009b90:	mov    eax,DWORD PTR [esi+0x8]
65009b93:	mov    ecx,DWORD PTR [esp+0x14]
65009b97:	mov    dl,BYTE PTR [esi+0x44]
65009b9a:	mov    BYTE PTR [eax+0x44],dl
65009b9d:	mov    BYTE PTR [esi+0x44],0x1
65009ba1:	mov    eax,DWORD PTR [eax+0x8]
65009ba4:	push   esi
65009ba5:	mov    BYTE PTR [eax+0x44],0x1
65009ba9:	call   0x65008f60
65009bae:	jmp    0x65009c2d
65009bb0:	cmp    BYTE PTR [eax+0x44],0x0
65009bb4:	jne    0x65009bca
65009bb6:	mov    BYTE PTR [eax+0x44],0x1
65009bba:	push   esi
65009bbb:	mov    BYTE PTR [esi+0x44],0x0
65009bbf:	call   0x65008fb0
65009bc4:	mov    eax,DWORD PTR [esi]
65009bc6:	mov    ecx,DWORD PTR [esp+0x14]
65009bca:	cmp    BYTE PTR [eax+0x45],0x0
65009bce:	jne    0x65009be5
65009bd0:	mov    edx,DWORD PTR [eax+0x8]
65009bd3:	cmp    BYTE PTR [edx+0x44],0x1
65009bd7:	jne    0x65009bf8
65009bd9:	mov    edx,DWORD PTR [eax]
65009bdb:	cmp    BYTE PTR [edx+0x44],0x1
65009bdf:	jne    0x65009bf8
65009be1:	mov    BYTE PTR [eax+0x44],0x0
65009be5:	mov    eax,DWORD PTR [ecx+0x4]
65009be8:	mov    ebx,esi
65009bea:	cmp    ebx,DWORD PTR [eax+0x4]
65009bed:	mov    esi,DWORD PTR [esi+0x4]
65009bf0:	jne    0x65009b32
65009bf6:	jmp    0x65009c2d
65009bf8:	mov    edx,DWORD PTR [eax]
65009bfa:	cmp    BYTE PTR [edx+0x44],0x1
65009bfe:	jne    0x65009c17
65009c00:	mov    edx,DWORD PTR [eax+0x8]
65009c03:	mov    BYTE PTR [edx+0x44],0x1
65009c07:	push   eax
65009c08:	mov    BYTE PTR [eax+0x44],0x0
65009c0c:	call   0x65008f60
65009c11:	mov    eax,DWORD PTR [esi]
65009c13:	mov    ecx,DWORD PTR [esp+0x14]
65009c17:	mov    dl,BYTE PTR [esi+0x44]
65009c1a:	mov    BYTE PTR [eax+0x44],dl
65009c1d:	mov    BYTE PTR [esi+0x44],0x1
65009c21:	mov    eax,DWORD PTR [eax]
65009c23:	push   esi
65009c24:	mov    BYTE PTR [eax+0x44],0x1
65009c28:	call   0x65008fb0
65009c2d:	mov    BYTE PTR [ebx+0x44],0x1
65009c31:	cmp    DWORD PTR [edi+0x40],0x8
65009c35:	jb     0x65009c43
65009c37:	mov    ecx,DWORD PTR [edi+0x2c]
65009c3a:	push   ecx
65009c3b:	call   0x650120d2
65009c40:	add    esp,0x4
65009c43:	xor    esi,esi
65009c45:	mov    ebx,0x7
65009c4a:	mov    DWORD PTR [edi+0x40],ebx
65009c4d:	mov    DWORD PTR [edi+0x3c],esi
65009c50:	mov    WORD PTR [edi+0x2c],si
65009c54:	cmp    DWORD PTR [edi+0x24],0x8
65009c58:	jb     0x65009c66
65009c5a:	mov    edx,DWORD PTR [edi+0x10]
65009c5d:	push   edx
65009c5e:	call   0x650120d2
65009c63:	add    esp,0x4
65009c66:	mov    DWORD PTR [edi+0x24],ebx
65009c69:	mov    DWORD PTR [edi+0x20],esi
65009c6c:	push   edi
65009c6d:	mov    WORD PTR [edi+0x10],si
65009c71:	call   0x650120d2
65009c76:	mov    ecx,DWORD PTR [esp+0x18]
65009c7a:	mov    eax,DWORD PTR [ecx+0x8]
65009c7d:	add    esp,0x4
65009c80:	cmp    eax,esi
65009c82:	jbe    0x65009c8a
65009c84:	add    eax,0xffffffff
65009c87:	mov    DWORD PTR [ecx+0x8],eax
65009c8a:	mov    eax,DWORD PTR [ebp+0x8]
65009c8d:	mov    ecx,DWORD PTR [ebp+0xc]
65009c90:	mov    edx,DWORD PTR [ebp+0x10]
65009c93:	mov    DWORD PTR [eax],ecx
65009c95:	mov    DWORD PTR [eax+0x4],edx
65009c98:	mov    ecx,DWORD PTR [esp+0x60]
65009c9c:	mov    DWORD PTR fs:0x0,ecx
65009ca3:	pop    ecx
65009ca4:	pop    edi
65009ca5:	pop    esi
65009ca6:	pop    ebx
65009ca7:	mov    esp,ebp
65009ca9:	pop    ebp
65009caa:	ret    0xc
65009cad:	int3   
65009cae:	int3   
65009caf:	int3   
65009cb0:	push   ecx
65009cb1:	push   ebx
65009cb2:	push   esi
65009cb3:	mov    esi,DWORD PTR [esp+0x10]
65009cb7:	xor    ebx,ebx
65009cb9:	cmp    BYTE PTR [esi+0x45],bl
65009cbc:	push   edi
65009cbd:	mov    DWORD PTR [esp+0xc],ecx
65009cc1:	mov    edi,esi
65009cc3:	jne    0x65009d26
65009cc5:	push   ebp
65009cc6:	lea    ebp,[ebx+0xf]
65009cc9:	lea    esp,[esp+0x0]
65009cd0:	mov    eax,DWORD PTR [edi+0x8]
65009cd3:	mov    ecx,DWORD PTR [esp+0x10]
65009cd7:	push   eax
65009cd8:	call   0x65009cb0
65009cdd:	cmp    DWORD PTR [esi+0x40],0x10
65009ce1:	mov    edi,DWORD PTR [edi]
65009ce3:	jb     0x65009cf1
65009ce5:	mov    ecx,DWORD PTR [esi+0x2c]
65009ce8:	push   ecx
65009ce9:	call   0x650120d2
65009cee:	add    esp,0x4
65009cf1:	mov    DWORD PTR [esi+0x40],ebp
65009cf4:	mov    DWORD PTR [esi+0x3c],ebx
65009cf7:	mov    BYTE PTR [esi+0x2c],bl
65009cfa:	cmp    DWORD PTR [esi+0x24],0x10
65009cfe:	jb     0x65009d0c
65009d00:	mov    edx,DWORD PTR [esi+0x10]
65009d03:	push   edx
65009d04:	call   0x650120d2
65009d09:	add    esp,0x4
65009d0c:	mov    DWORD PTR [esi+0x24],ebp
65009d0f:	mov    DWORD PTR [esi+0x20],ebx
65009d12:	push   esi
65009d13:	mov    BYTE PTR [esi+0x10],bl
65009d16:	call   0x650120d2
65009d1b:	add    esp,0x4
65009d1e:	cmp    BYTE PTR [edi+0x45],bl
65009d21:	mov    esi,edi
65009d23:	je     0x65009cd0
65009d25:	pop    ebp
65009d26:	pop    edi
65009d27:	pop    esi
65009d28:	pop    ebx
65009d29:	pop    ecx
65009d2a:	ret    0x4
65009d2d:	int3   
65009d2e:	int3   
65009d2f:	int3   
65009d30:	push   ecx
65009d31:	push   ebx
65009d32:	push   esi
65009d33:	mov    esi,DWORD PTR [esp+0x10]
65009d37:	xor    ebx,ebx
65009d39:	cmp    BYTE PTR [esi+0x45],bl
65009d3c:	push   edi
65009d3d:	mov    DWORD PTR [esp+0xc],ecx
65009d41:	mov    edi,esi
65009d43:	jne    0x65009da8
65009d45:	push   ebp
65009d46:	lea    ebp,[ebx+0x7]
65009d49:	lea    esp,[esp+0x0]
65009d50:	mov    eax,DWORD PTR [edi+0x8]
65009d53:	mov    ecx,DWORD PTR [esp+0x10]
65009d57:	push   eax
65009d58:	call   0x65009d30
65009d5d:	cmp    DWORD PTR [esi+0x40],0x8
65009d61:	mov    edi,DWORD PTR [edi]
65009d63:	jb     0x65009d71
65009d65:	mov    ecx,DWORD PTR [esi+0x2c]
65009d68:	push   ecx
65009d69:	call   0x650120d2
65009d6e:	add    esp,0x4
65009d71:	mov    DWORD PTR [esi+0x40],ebp
65009d74:	mov    DWORD PTR [esi+0x3c],ebx
65009d77:	mov    WORD PTR [esi+0x2c],bx
65009d7b:	cmp    DWORD PTR [esi+0x24],0x8
65009d7f:	jb     0x65009d8d
65009d81:	mov    edx,DWORD PTR [esi+0x10]
65009d84:	push   edx
65009d85:	call   0x650120d2
65009d8a:	add    esp,0x4
65009d8d:	mov    DWORD PTR [esi+0x24],ebp
65009d90:	mov    DWORD PTR [esi+0x20],ebx
65009d93:	push   esi
65009d94:	mov    WORD PTR [esi+0x10],bx
65009d98:	call   0x650120d2
65009d9d:	add    esp,0x4
65009da0:	cmp    BYTE PTR [edi+0x45],bl
65009da3:	mov    esi,edi
65009da5:	je     0x65009d50
65009da7:	pop    ebp
65009da8:	pop    edi
65009da9:	pop    esi
65009daa:	pop    ebx
65009dab:	pop    ecx
65009dac:	ret    0x4
65009daf:	int3   
65009db0:	mov    eax,DWORD PTR [esp+0x4]
65009db4:	mov    ecx,DWORD PTR [eax]
65009db6:	cmp    BYTE PTR [ecx+0x45],0x0
65009dba:	jne    0x65009dca
65009dbc:	lea    esp,[esp+0x0]
65009dc0:	mov    eax,ecx
65009dc2:	mov    ecx,DWORD PTR [eax]
65009dc4:	cmp    BYTE PTR [ecx+0x45],0x0
65009dc8:	je     0x65009dc0
65009dca:	ret    
65009dcb:	int3   
65009dcc:	int3   
65009dcd:	int3   
65009dce:	int3   
65009dcf:	int3   
65009dd0:	push   esi
65009dd1:	mov    esi,ecx
65009dd3:	cmp    DWORD PTR [esi],0x0
65009dd6:	jne    0x65009ddd
65009dd8:	call   0x65012443
65009ddd:	mov    eax,DWORD PTR [esi+0x4]
65009de0:	cmp    BYTE PTR [eax+0x45],0x0
65009de4:	je     0x65009dec
65009de6:	pop    esi
65009de7:	jmp    0x65012443
65009dec:	mov    ecx,DWORD PTR [eax+0x8]
65009def:	cmp    BYTE PTR [ecx+0x45],0x0
65009df3:	jne    0x65009e0f
65009df5:	mov    eax,DWORD PTR [ecx]
65009df7:	cmp    BYTE PTR [eax+0x45],0x0
65009dfb:	jne    0x65009e0a
65009dfd:	lea    ecx,[ecx+0x0]
65009e00:	mov    ecx,eax
65009e02:	mov    eax,DWORD PTR [ecx]
65009e04:	cmp    BYTE PTR [eax+0x45],0x0
65009e08:	je     0x65009e00
65009e0a:	mov    DWORD PTR [esi+0x4],ecx
65009e0d:	pop    esi
65009e0e:	ret    
65009e0f:	mov    eax,DWORD PTR [eax+0x4]
65009e12:	cmp    BYTE PTR [eax+0x45],0x0
65009e16:	jne    0x65009e2e
65009e18:	mov    ecx,DWORD PTR [esi+0x4]
65009e1b:	cmp    ecx,DWORD PTR [eax+0x8]
65009e1e:	jne    0x65009e2e
65009e20:	mov    DWORD PTR [esi+0x4],eax
65009e23:	mov    edx,eax
65009e25:	mov    eax,DWORD PTR [edx+0x4]
65009e28:	cmp    BYTE PTR [eax+0x45],0x0
65009e2c:	je     0x65009e18
65009e2e:	mov    DWORD PTR [esi+0x4],eax
65009e31:	pop    esi
65009e32:	ret    
65009e33:	int3   
65009e34:	int3   
65009e35:	int3   
65009e36:	int3   
65009e37:	int3   
65009e38:	int3   
65009e39:	int3   
65009e3a:	int3   
65009e3b:	int3   
65009e3c:	int3   
65009e3d:	int3   
65009e3e:	int3   
65009e3f:	int3   
65009e40:	push   0xffffffff
65009e42:	push   0x650224b8
65009e47:	mov    eax,fs:0x0
65009e4d:	push   eax
65009e4e:	sub    esp,0x20
65009e51:	push   ebx
65009e52:	push   ebp
65009e53:	mov    eax,ds:0x6502c09c
65009e58:	xor    eax,esp
65009e5a:	push   eax
65009e5b:	lea    eax,[esp+0x2c]
65009e5f:	mov    fs:0x0,eax
65009e65:	mov    eax,DWORD PTR [esp+0x3c]
65009e69:	xor    ebx,ebx
65009e6b:	push   0xffffffff
65009e6d:	push   ebx
65009e6e:	push   eax
65009e6f:	lea    ecx,[esp+0x1c]
65009e73:	mov    DWORD PTR [esp+0x18],ebx
65009e77:	mov    DWORD PTR [esp+0x34],0xf
65009e7f:	mov    DWORD PTR [esp+0x30],ebx
65009e83:	mov    BYTE PTR [esp+0x20],bl
65009e87:	call   0x650017e0
65009e8c:	mov    eax,edi
65009e8e:	mov    DWORD PTR [esp+0x34],ebx
65009e92:	lea    ebp,[eax+0x1]
65009e95:	mov    cl,BYTE PTR [eax]
65009e97:	add    eax,0x1
65009e9a:	cmp    cl,bl
65009e9c:	jne    0x65009e95
65009e9e:	sub    eax,ebp
65009ea0:	push   eax
65009ea1:	push   edi
65009ea2:	lea    eax,[esp+0x18]
65009ea6:	call   0x6500a2c0
65009eab:	push   0xffffffff
65009ead:	push   ebx
65009eae:	mov    DWORD PTR [esi+0x18],0xf
65009eb5:	mov    DWORD PTR [esi+0x14],ebx
65009eb8:	push   eax
65009eb9:	mov    ecx,esi
65009ebb:	mov    BYTE PTR [esi+0x4],bl
65009ebe:	call   0x650017e0
65009ec3:	cmp    DWORD PTR [esp+0x28],0x10
65009ec8:	jb     0x65009ed7
65009eca:	mov    ecx,DWORD PTR [esp+0x14]
65009ece:	push   ecx
65009ecf:	call   0x650120d2
65009ed4:	add    esp,0x4
65009ed7:	mov    eax,esi
65009ed9:	mov    ecx,DWORD PTR [esp+0x2c]
65009edd:	mov    DWORD PTR fs:0x0,ecx
65009ee4:	pop    ecx
65009ee5:	pop    ebp
65009ee6:	pop    ebx
65009ee7:	add    esp,0x2c
65009eea:	ret    
65009eeb:	int3   
65009eec:	int3   
65009eed:	int3   
65009eee:	int3   
65009eef:	int3   
65009ef0:	push   0xffffffff
65009ef2:	push   0x65022490
65009ef7:	mov    eax,fs:0x0
65009efd:	push   eax
65009efe:	push   ecx
65009eff:	push   esi
65009f00:	mov    eax,ds:0x6502c09c
65009f05:	xor    eax,esp
65009f07:	push   eax
65009f08:	lea    eax,[esp+0xc]
65009f0c:	mov    fs:0x0,eax
65009f12:	mov    esi,DWORD PTR [esp+0x1c]
65009f16:	mov    DWORD PTR [esp+0x8],0x0
65009f1e:	lea    eax,[esp+0x3c]
65009f22:	push   eax
65009f23:	lea    ecx,[esp+0x24]
65009f27:	push   ecx
65009f28:	mov    ecx,esi
65009f2a:	mov    DWORD PTR [esp+0x1c],0x1
65009f32:	call   0x6500a130
65009f37:	cmp    DWORD PTR [esp+0x38],0x10
65009f3c:	jb     0x65009f4b
65009f3e:	mov    edx,DWORD PTR [esp+0x24]
65009f42:	push   edx
65009f43:	call   0x650120d2
65009f48:	add    esp,0x4
65009f4b:	cmp    DWORD PTR [esp+0x54],0x10
65009f50:	mov    DWORD PTR [esp+0x38],0xf
65009f58:	mov    DWORD PTR [esp+0x34],0x0
65009f60:	mov    BYTE PTR [esp+0x24],0x0
65009f65:	jb     0x65009f74
65009f67:	mov    eax,DWORD PTR [esp+0x40]
65009f6b:	push   eax
65009f6c:	call   0x650120d2
65009f71:	add    esp,0x4
65009f74:	mov    eax,esi
65009f76:	mov    ecx,DWORD PTR [esp+0xc]
65009f7a:	mov    DWORD PTR fs:0x0,ecx
65009f81:	pop    ecx
65009f82:	pop    esi
65009f83:	add    esp,0x10
65009f86:	ret    
65009f87:	int3   
65009f88:	int3   
65009f89:	int3   
65009f8a:	int3   
65009f8b:	int3   
65009f8c:	int3   
65009f8d:	int3   
65009f8e:	int3   
65009f8f:	int3   
65009f90:	push   0xffffffff
65009f92:	push   0x65022458
65009f97:	mov    eax,fs:0x0
65009f9d:	push   eax
65009f9e:	push   ecx
65009f9f:	push   ebx
65009fa0:	push   esi
65009fa1:	push   edi
65009fa2:	mov    eax,ds:0x6502c09c
65009fa7:	xor    eax,esp
65009fa9:	push   eax
65009faa:	lea    eax,[esp+0x14]
65009fae:	mov    fs:0x0,eax
65009fb4:	mov    esi,ecx
65009fb6:	mov    DWORD PTR [esp+0x10],esi
65009fba:	mov    edi,DWORD PTR [esp+0x24]
65009fbe:	xor    ebx,ebx
65009fc0:	push   0xffffffff
65009fc2:	push   ebx
65009fc3:	mov    DWORD PTR [esi+0x18],0xf
65009fca:	mov    DWORD PTR [esi+0x14],ebx
65009fcd:	push   edi
65009fce:	mov    BYTE PTR [esi+0x4],bl
65009fd1:	call   0x650017e0
65009fd6:	push   0xffffffff
65009fd8:	lea    ecx,[esi+0x1c]
65009fdb:	mov    DWORD PTR [esp+0x20],ebx
65009fdf:	lea    eax,[edi+0x1c]
65009fe2:	push   ebx
65009fe3:	mov    DWORD PTR [ecx+0x18],0xf
65009fea:	mov    DWORD PTR [ecx+0x14],ebx
65009fed:	push   eax
65009fee:	mov    BYTE PTR [ecx+0x4],bl
65009ff1:	call   0x650017e0
65009ff6:	mov    eax,esi
65009ff8:	mov    ecx,DWORD PTR [esp+0x14]
65009ffc:	mov    DWORD PTR fs:0x0,ecx
6500a003:	pop    ecx
6500a004:	pop    edi
6500a005:	pop    esi
6500a006:	pop    ebx
6500a007:	add    esp,0x10
6500a00a:	ret    0x4
6500a00d:	int3   
6500a00e:	int3   
6500a00f:	int3   
6500a010:	push   0xffffffff
6500a012:	push   0x65022800
6500a017:	mov    eax,fs:0x0
6500a01d:	push   eax
6500a01e:	push   ecx
6500a01f:	push   esi
6500a020:	mov    eax,ds:0x6502c09c
6500a025:	xor    eax,esp
6500a027:	push   eax
6500a028:	lea    eax,[esp+0xc]
6500a02c:	mov    fs:0x0,eax
6500a032:	mov    esi,DWORD PTR [esp+0x1c]
6500a036:	mov    DWORD PTR [esp+0x8],0x0
6500a03e:	lea    eax,[esp+0x3c]
6500a042:	push   eax
6500a043:	lea    ecx,[esp+0x24]
6500a047:	push   ecx
6500a048:	mov    ecx,esi
6500a04a:	mov    DWORD PTR [esp+0x1c],0x1
6500a052:	call   0x6500a1b0
6500a057:	cmp    DWORD PTR [esp+0x38],0x8
6500a05c:	jb     0x6500a06b
6500a05e:	mov    edx,DWORD PTR [esp+0x24]
6500a062:	push   edx
6500a063:	call   0x650120d2
6500a068:	add    esp,0x4
6500a06b:	cmp    DWORD PTR [esp+0x54],0x8
6500a070:	mov    DWORD PTR [esp+0x38],0x7
6500a078:	mov    DWORD PTR [esp+0x34],0x0
6500a080:	mov    WORD PTR [esp+0x24],0x0
6500a087:	jb     0x6500a096
6500a089:	mov    eax,DWORD PTR [esp+0x40]
6500a08d:	push   eax
6500a08e:	call   0x650120d2
6500a093:	add    esp,0x4
6500a096:	mov    eax,esi
6500a098:	mov    ecx,DWORD PTR [esp+0xc]
6500a09c:	mov    DWORD PTR fs:0x0,ecx
6500a0a3:	pop    ecx
6500a0a4:	pop    esi
6500a0a5:	add    esp,0x10
6500a0a8:	ret    
6500a0a9:	int3   
6500a0aa:	int3   
6500a0ab:	int3   
6500a0ac:	int3   
6500a0ad:	int3   
6500a0ae:	int3   
6500a0af:	int3   
6500a0b0:	push   0xffffffff
6500a0b2:	push   0x650227c8
6500a0b7:	mov    eax,fs:0x0
6500a0bd:	push   eax
6500a0be:	push   ecx
6500a0bf:	push   ebx
6500a0c0:	push   esi
6500a0c1:	push   edi
6500a0c2:	mov    eax,ds:0x6502c09c
6500a0c7:	xor    eax,esp
6500a0c9:	push   eax
6500a0ca:	lea    eax,[esp+0x14]
6500a0ce:	mov    fs:0x0,eax
6500a0d4:	mov    esi,ecx
6500a0d6:	mov    DWORD PTR [esp+0x10],esi
6500a0da:	mov    ebx,DWORD PTR [esp+0x24]
6500a0de:	xor    edi,edi
6500a0e0:	push   0xffffffff
6500a0e2:	push   edi
6500a0e3:	mov    DWORD PTR [esi+0x18],0x7
6500a0ea:	mov    DWORD PTR [esi+0x14],edi
6500a0ed:	push   ebx
6500a0ee:	mov    WORD PTR [esi+0x4],di
6500a0f2:	call   0x65008760
6500a0f7:	push   0xffffffff
6500a0f9:	lea    ecx,[esi+0x1c]
6500a0fc:	mov    DWORD PTR [esp+0x20],edi
6500a100:	lea    eax,[ebx+0x1c]
6500a103:	push   edi
6500a104:	mov    DWORD PTR [ecx+0x18],0x7
6500a10b:	mov    DWORD PTR [ecx+0x14],edi
6500a10e:	push   eax
6500a10f:	mov    WORD PTR [ecx+0x4],di
6500a113:	call   0x65008760
6500a118:	mov    eax,esi
6500a11a:	mov    ecx,DWORD PTR [esp+0x14]
6500a11e:	mov    DWORD PTR fs:0x0,ecx
6500a125:	pop    ecx
6500a126:	pop    edi
6500a127:	pop    esi
6500a128:	pop    ebx
6500a129:	add    esp,0x10
6500a12c:	ret    0x4
6500a12f:	int3   
6500a130:	push   0xffffffff
6500a132:	push   0x65022428
6500a137:	mov    eax,fs:0x0
6500a13d:	push   eax
6500a13e:	push   ecx
6500a13f:	push   ebx
6500a140:	push   esi
6500a141:	mov    eax,ds:0x6502c09c
6500a146:	xor    eax,esp
6500a148:	push   eax
6500a149:	lea    eax,[esp+0x10]
6500a14d:	mov    fs:0x0,eax
6500a153:	mov    esi,ecx
6500a155:	mov    DWORD PTR [esp+0xc],esi
6500a159:	mov    eax,DWORD PTR [esp+0x20]
6500a15d:	xor    ebx,ebx
6500a15f:	push   0xffffffff
6500a161:	push   ebx
6500a162:	mov    DWORD PTR [esi+0x18],0xf
6500a169:	mov    DWORD PTR [esi+0x14],ebx
6500a16c:	push   eax
6500a16d:	mov    BYTE PTR [esi+0x4],bl
6500a170:	call   0x650017e0
6500a175:	mov    edx,DWORD PTR [esp+0x24]
6500a179:	push   0xffffffff
6500a17b:	lea    ecx,[esi+0x1c]
6500a17e:	mov    DWORD PTR [esp+0x1c],ebx
6500a182:	push   ebx
6500a183:	mov    DWORD PTR [ecx+0x18],0xf
6500a18a:	mov    DWORD PTR [ecx+0x14],ebx
6500a18d:	push   edx
6500a18e:	mov    BYTE PTR [ecx+0x4],bl
6500a191:	call   0x650017e0
6500a196:	mov    eax,esi
6500a198:	mov    ecx,DWORD PTR [esp+0x10]
6500a19c:	mov    DWORD PTR fs:0x0,ecx
6500a1a3:	pop    ecx
6500a1a4:	pop    esi
6500a1a5:	pop    ebx
6500a1a6:	add    esp,0x10
6500a1a9:	ret    0x8
6500a1ac:	int3   
6500a1ad:	int3   
6500a1ae:	int3   
6500a1af:	int3   
6500a1b0:	push   0xffffffff
6500a1b2:	push   0x65022798
6500a1b7:	mov    eax,fs:0x0
6500a1bd:	push   eax
6500a1be:	push   ecx
6500a1bf:	push   esi
6500a1c0:	push   edi
6500a1c1:	mov    eax,ds:0x6502c09c
6500a1c6:	xor    eax,esp
6500a1c8:	push   eax
6500a1c9:	lea    eax,[esp+0x10]
6500a1cd:	mov    fs:0x0,eax
6500a1d3:	mov    esi,ecx
6500a1d5:	mov    DWORD PTR [esp+0xc],esi
6500a1d9:	mov    eax,DWORD PTR [esp+0x20]
6500a1dd:	xor    edi,edi
6500a1df:	push   0xffffffff
6500a1e1:	push   edi
6500a1e2:	mov    DWORD PTR [esi+0x18],0x7
6500a1e9:	mov    DWORD PTR [esi+0x14],edi
6500a1ec:	push   eax
6500a1ed:	mov    WORD PTR [esi+0x4],di
6500a1f1:	call   0x65008760
6500a1f6:	mov    edx,DWORD PTR [esp+0x24]
6500a1fa:	push   0xffffffff
6500a1fc:	lea    ecx,[esi+0x1c]
6500a1ff:	mov    DWORD PTR [esp+0x1c],edi
6500a203:	push   edi
6500a204:	mov    DWORD PTR [ecx+0x18],0x7
6500a20b:	mov    DWORD PTR [ecx+0x14],edi
6500a20e:	push   edx
6500a20f:	mov    WORD PTR [ecx+0x4],di
6500a213:	call   0x65008760
6500a218:	mov    eax,esi
6500a21a:	mov    ecx,DWORD PTR [esp+0x10]
6500a21e:	mov    DWORD PTR fs:0x0,ecx
6500a225:	pop    ecx
6500a226:	pop    edi
6500a227:	pop    esi
6500a228:	add    esp,0x10
6500a22b:	ret    0x8
6500a22e:	int3   
6500a22f:	int3   
6500a230:	push   ebx
6500a231:	push   ebp
6500a232:	push   esi
6500a233:	push   edi
6500a234:	mov    edi,DWORD PTR [esp+0x14]
6500a238:	mov    esi,ecx
6500a23a:	cmp    DWORD PTR [esi+0x14],edi
6500a23d:	jae    0x6500a244
6500a23f:	call   0x6501208e
6500a244:	mov    eax,DWORD PTR [esi+0x14]
6500a247:	mov    ebx,DWORD PTR [esp+0x18]
6500a24b:	sub    eax,edi
6500a24d:	cmp    eax,ebx
6500a24f:	jae    0x6500a253
6500a251:	mov    ebx,eax
6500a253:	mov    ebp,DWORD PTR [esp+0x20]
6500a257:	cmp    ebx,ebp
6500a259:	mov    edx,ebx
6500a25b:	jb     0x6500a25f
6500a25d:	mov    edx,ebp
6500a25f:	cmp    DWORD PTR [esi+0x18],0x8
6500a263:	jb     0x6500a26a
6500a265:	mov    eax,DWORD PTR [esi+0x4]
6500a268:	jmp    0x6500a26d
6500a26a:	lea    eax,[esi+0x4]
6500a26d:	test   edx,edx
6500a26f:	mov    ecx,DWORD PTR [esp+0x1c]
6500a273:	lea    eax,[eax+edi*2]
6500a276:	jbe    0x6500a29d
6500a278:	mov    si,WORD PTR [eax]
6500a27b:	cmp    si,WORD PTR [ecx]
6500a27e:	jne    0x6500a28d
6500a280:	add    eax,0x2
6500a283:	add    ecx,0x2
6500a286:	sub    edx,0x1
6500a289:	jne    0x6500a278
6500a28b:	jmp    0x6500a29d
6500a28d:	movzx  eax,WORD PTR [eax]
6500a290:	cmp    ax,WORD PTR [ecx]
6500a293:	sbb    eax,eax
6500a295:	and    eax,0xfffffffe
6500a298:	add    eax,0x1
6500a29b:	jne    0x6500a2b2
6500a29d:	cmp    ebx,ebp
6500a29f:	jae    0x6500a2ab
6500a2a1:	pop    edi
6500a2a2:	pop    esi
6500a2a3:	pop    ebp
6500a2a4:	or     eax,0xffffffff
6500a2a7:	pop    ebx
6500a2a8:	ret    0x10
6500a2ab:	xor    eax,eax
6500a2ad:	cmp    ebx,ebp
6500a2af:	setne  al
6500a2b2:	pop    edi
6500a2b3:	pop    esi
6500a2b4:	pop    ebp
6500a2b5:	pop    ebx
6500a2b6:	ret    0x10
6500a2b9:	int3   
6500a2ba:	int3   
6500a2bb:	int3   
6500a2bc:	int3   
6500a2bd:	int3   
6500a2be:	int3   
6500a2bf:	int3   
6500a2c0:	mov    ecx,DWORD PTR [esp+0x4]
6500a2c4:	push   ebx
6500a2c5:	push   ebp
6500a2c6:	mov    ebp,DWORD PTR [esp+0x10]
6500a2ca:	push   esi
6500a2cb:	mov    esi,eax
6500a2cd:	mov    edx,DWORD PTR [esi+0x18]
6500a2d0:	cmp    edx,0x10
6500a2d3:	push   edi
6500a2d4:	lea    ebx,[esi+0x4]
6500a2d7:	jb     0x6500a2dd
6500a2d9:	mov    eax,DWORD PTR [ebx]
6500a2db:	jmp    0x6500a2df
6500a2dd:	mov    eax,ebx
6500a2df:	cmp    ecx,eax
6500a2e1:	jb     0x6500a310
6500a2e3:	cmp    edx,0x10
6500a2e6:	jb     0x6500a2ec
6500a2e8:	mov    eax,DWORD PTR [ebx]
6500a2ea:	jmp    0x6500a2ee
6500a2ec:	mov    eax,ebx
6500a2ee:	mov    edi,DWORD PTR [esi+0x14]
6500a2f1:	add    edi,eax
6500a2f3:	cmp    edi,ecx
6500a2f5:	jbe    0x6500a310
6500a2f7:	cmp    edx,0x10
6500a2fa:	jb     0x6500a2fe
6500a2fc:	mov    ebx,DWORD PTR [ebx]
6500a2fe:	sub    ecx,ebx
6500a300:	push   ecx
6500a301:	push   esi
6500a302:	mov    eax,ebp
6500a304:	call   0x65001a30
6500a309:	pop    edi
6500a30a:	pop    esi
6500a30b:	pop    ebp
6500a30c:	pop    ebx
6500a30d:	ret    0x8
6500a310:	mov    eax,DWORD PTR [esi+0x14]
6500a313:	or     ecx,0xffffffff
6500a316:	sub    ecx,eax
6500a318:	cmp    ecx,ebp
6500a31a:	jbe    0x6500a323
6500a31c:	lea    edx,[eax+ebp*1]
6500a31f:	cmp    edx,eax
6500a321:	jae    0x6500a328
6500a323:	call   0x6501204f
6500a328:	test   ebp,ebp
6500a32a:	jbe    0x6500a3a0
6500a32c:	mov    edi,DWORD PTR [esi+0x14]
6500a32f:	add    edi,ebp
6500a331:	cmp    edi,0xfffffffe
6500a334:	jbe    0x6500a33b
6500a336:	call   0x6501204f
6500a33b:	mov    eax,DWORD PTR [esi+0x18]
6500a33e:	cmp    eax,edi
6500a340:	jae    0x6500a35e
6500a342:	mov    eax,DWORD PTR [esi+0x14]
6500a345:	push   eax
6500a346:	push   edi
6500a347:	mov    ecx,esi
6500a349:	call   0x65001bc0
6500a34e:	test   edi,edi
6500a350:	jbe    0x6500a3a0
6500a352:	mov    eax,DWORD PTR [esi+0x18]
6500a355:	cmp    eax,0x10
6500a358:	jb     0x6500a378
6500a35a:	mov    edx,DWORD PTR [ebx]
6500a35c:	jmp    0x6500a37a
6500a35e:	test   edi,edi
6500a360:	jne    0x6500a350
6500a362:	cmp    eax,0x10
6500a365:	mov    DWORD PTR [esi+0x14],edi
6500a368:	jb     0x6500a36c
6500a36a:	mov    ebx,DWORD PTR [ebx]
6500a36c:	pop    edi
6500a36d:	mov    eax,esi
6500a36f:	pop    esi
6500a370:	pop    ebp
6500a371:	mov    BYTE PTR [ebx],0x0
6500a374:	pop    ebx
6500a375:	ret    0x8
6500a378:	mov    edx,ebx
6500a37a:	mov    ecx,DWORD PTR [esi+0x14]
6500a37d:	push   ebp
6500a37e:	mov    ebp,DWORD PTR [esp+0x18]
6500a382:	sub    eax,ecx
6500a384:	push   ebp
6500a385:	push   eax
6500a386:	add    ecx,edx
6500a388:	push   ecx
6500a389:	call   0x65012243
6500a38e:	add    esp,0x10
6500a391:	cmp    DWORD PTR [esi+0x18],0x10
6500a395:	mov    DWORD PTR [esi+0x14],edi
6500a398:	jb     0x6500a39c
6500a39a:	mov    ebx,DWORD PTR [ebx]
6500a39c:	mov    BYTE PTR [ebx+edi*1],0x0
6500a3a0:	pop    edi
6500a3a1:	mov    eax,esi
6500a3a3:	pop    esi
6500a3a4:	pop    ebp
6500a3a5:	pop    ebx
6500a3a6:	ret    0x8
6500a3a9:	int3   
6500a3aa:	int3   
6500a3ab:	int3   
6500a3ac:	int3   
6500a3ad:	int3   
6500a3ae:	int3   
6500a3af:	int3   
6500a3b0:	push   ebp
6500a3b1:	mov    ebp,DWORD PTR [esp+0x14]
6500a3b5:	push   esi
6500a3b6:	mov    esi,DWORD PTR [esp+0x10]
6500a3ba:	push   edi
6500a3bb:	mov    edi,DWORD PTR [esp+0x10]
6500a3bf:	nop
6500a3c0:	test   edi,edi
6500a3c2:	je     0x6500a3ca
6500a3c4:	cmp    edi,DWORD PTR [esp+0x18]
6500a3c8:	je     0x6500a3cf
6500a3ca:	call   0x65012443
6500a3cf:	cmp    esi,ebp
6500a3d1:	je     0x6500a42b
6500a3d3:	add    DWORD PTR [ebx],0x1
6500a3d6:	test   edi,edi
6500a3d8:	jne    0x6500a3df
6500a3da:	call   0x65012443
6500a3df:	cmp    BYTE PTR [esi+0x29],0x0
6500a3e3:	je     0x6500a3ec
6500a3e5:	call   0x65012443
6500a3ea:	jmp    0x6500a3c0
6500a3ec:	mov    ecx,DWORD PTR [esi+0x8]
6500a3ef:	cmp    BYTE PTR [ecx+0x29],0x0
6500a3f3:	jne    0x6500a40e
6500a3f5:	mov    eax,DWORD PTR [ecx]
6500a3f7:	cmp    BYTE PTR [eax+0x29],0x0
6500a3fb:	jne    0x6500a40a
6500a3fd:	lea    ecx,[ecx+0x0]
6500a400:	mov    ecx,eax
6500a402:	mov    eax,DWORD PTR [ecx]
6500a404:	cmp    BYTE PTR [eax+0x29],0x0
6500a408:	je     0x6500a400
6500a40a:	mov    esi,ecx
6500a40c:	jmp    0x6500a3c0
6500a40e:	mov    eax,DWORD PTR [esi+0x4]
6500a411:	cmp    BYTE PTR [eax+0x29],0x0
6500a415:	jne    0x6500a427
6500a417:	cmp    esi,DWORD PTR [eax+0x8]
6500a41a:	jne    0x6500a427
6500a41c:	mov    esi,eax
6500a41e:	mov    eax,DWORD PTR [eax+0x4]
6500a421:	cmp    BYTE PTR [eax+0x29],0x0
6500a425:	je     0x6500a417
6500a427:	mov    esi,eax
6500a429:	jmp    0x6500a3c0
6500a42b:	pop    edi
6500a42c:	pop    esi
6500a42d:	pop    ebp
6500a42e:	ret    
6500a42f:	int3   
6500a430:	push   esi
6500a431:	mov    esi,ecx
6500a433:	call   0x6500dd40
6500a438:	call   eax
6500a43a:	mov    DWORD PTR [esi],eax
6500a43c:	mov    eax,esi
6500a43e:	pop    esi
6500a43f:	ret    
6500a440:	mov    eax,DWORD PTR [ecx]
6500a442:	push   eax
6500a443:	call   0x6500ddd0
6500a448:	call   eax
6500a44a:	ret    
6500a44b:	int3   
6500a44c:	int3   
6500a44d:	int3   
6500a44e:	int3   
6500a44f:	int3   
6500a450:	push   ebp
6500a451:	mov    ebp,esp
6500a453:	and    esp,0xfffffff8
6500a456:	push   0xffffffff
6500a458:	push   0x65022cf0
6500a45d:	mov    eax,fs:0x0
6500a463:	push   eax
6500a464:	sub    esp,0x68
6500a467:	mov    eax,ds:0x6502c09c
6500a46c:	xor    eax,esp
6500a46e:	mov    DWORD PTR [esp+0x60],eax
6500a472:	push   ebx
6500a473:	push   esi
6500a474:	push   edi
6500a475:	mov    eax,ds:0x6502c09c
6500a47a:	xor    eax,esp
6500a47c:	push   eax
6500a47d:	lea    eax,[esp+0x78]
6500a481:	mov    fs:0x0,eax
6500a487:	mov    eax,DWORD PTR [ebp+0x14]
6500a48a:	mov    ebx,DWORD PTR [ebp+0xc]
6500a48d:	mov    DWORD PTR [esp+0x1c],ecx
6500a491:	mov    DWORD PTR [esp+0x18],eax
6500a495:	call   DWORD PTR ds:0x65024050
6500a49b:	lea    ecx,[esp+0x44]
6500a49f:	push   ecx
6500a4a0:	mov    DWORD PTR [esp+0x24],eax
6500a4a4:	call   0x6500e830
6500a4a9:	call   eax
6500a4ab:	xor    edi,edi
6500a4ad:	mov    DWORD PTR [esp+0x6c],0xf
6500a4b5:	mov    DWORD PTR [esp+0x68],edi
6500a4b9:	mov    BYTE PTR [esp+0x58],0x0
6500a4be:	mov    ecx,DWORD PTR [ebp+0x10]
6500a4c1:	mov    eax,0x8d3dcb09
6500a4c6:	mul    ecx
6500a4c8:	mov    esi,edx
6500a4ca:	shr    esi,0x8
6500a4cd:	lea    eax,[esi+0x1]
6500a4d0:	cmp    eax,edi
6500a4d2:	mov    DWORD PTR [esp+0x80],edi
6500a4d9:	mov    BYTE PTR [esp+0x13],0x1
6500a4de:	je     0x6500a5a4
6500a4e4:	mov    edx,0x1d0
6500a4e9:	sub    edx,ebx
6500a4eb:	mov    DWORD PTR [esp+0x14],ebx
6500a4ef:	mov    DWORD PTR [esp+0x24],edx
6500a4f3:	mov    eax,DWORD PTR [esp+0x14]
6500a4f7:	add    eax,edx
6500a4f9:	cmp    eax,ecx
6500a4fb:	jb     0x6500a5f6
6500a501:	mov    eax,esi
6500a503:	imul   eax,eax,0x1d0
6500a509:	mov    ebx,ecx
6500a50b:	sub    ebx,eax
6500a50d:	test   ebx,ebx
6500a50f:	je     0x6500a58c
6500a511:	or     ecx,0xffffffff
6500a514:	cmp    DWORD PTR [ebp+0x18],ecx
6500a517:	je     0x6500a530
6500a519:	call   DWORD PTR ds:0x65024050
6500a51f:	sub    eax,DWORD PTR [esp+0x20]
6500a523:	mov    ecx,DWORD PTR [ebp+0x18]
6500a526:	cmp    eax,ecx
6500a528:	ja     0x6500a600
6500a52e:	sub    ecx,eax
6500a530:	mov    edx,DWORD PTR [esp+0x44]
6500a534:	sub    esp,0x10
6500a537:	mov    eax,esp
6500a539:	mov    DWORD PTR [eax],edx
6500a53b:	mov    edx,DWORD PTR [esp+0x58]
6500a53f:	mov    DWORD PTR [eax+0x4],edx
6500a542:	mov    edx,DWORD PTR [esp+0x5c]
6500a546:	mov    DWORD PTR [eax+0x8],edx
6500a549:	mov    edx,DWORD PTR [esp+0x60]
6500a54d:	mov    DWORD PTR [eax+0xc],edx
6500a550:	mov    edx,DWORD PTR [esp+0x24]
6500a554:	test   edi,edi
6500a556:	setne  al
6500a559:	cmp    edi,esi
6500a55b:	push   eax
6500a55c:	mov    eax,DWORD PTR [ebp+0x8]
6500a55f:	push   ecx
6500a560:	setb   cl
6500a563:	push   ecx
6500a564:	mov    ecx,DWORD PTR [esp+0x38]
6500a568:	push   edi
6500a569:	push   ebx
6500a56a:	push   edx
6500a56b:	push   eax
6500a56c:	push   ecx
6500a56d:	lea    edx,[esp+0x43]
6500a571:	lea    ecx,[esp+0x84]
6500a578:	call   0x6500a790
6500a57d:	test   al,al
6500a57f:	je     0x6500a61b
6500a585:	mov    ecx,DWORD PTR [ebp+0x10]
6500a588:	mov    edx,DWORD PTR [esp+0x24]
6500a58c:	add    DWORD PTR [esp+0x14],0x1d0
6500a594:	add    edi,0x1
6500a597:	lea    eax,[esi+0x1]
6500a59a:	cmp    edi,eax
6500a59c:	jne    0x6500a4f3
6500a5a2:	xor    edi,edi
6500a5a4:	mov    esi,DWORD PTR [esp+0x18]
6500a5a8:	push   edi
6500a5a9:	lea    ecx,[esp+0x58]
6500a5ad:	push   ecx
6500a5ae:	or     eax,0xffffffff
6500a5b1:	call   0x65001a30
6500a5b6:	cmp    BYTE PTR [esp+0x13],0x0
6500a5bb:	je     0x6500a74b
6500a5c1:	mov    DWORD PTR [esp+0x14],0xfffffffe
6500a5c9:	lea    esp,[esp+0x0]
6500a5d0:	mov    esi,0xf
6500a5d5:	mov    DWORD PTR [esp+0x40],esi
6500a5d9:	mov    DWORD PTR [esp+0x3c],edi
6500a5dd:	mov    BYTE PTR [esp+0x2c],0x0
6500a5e2:	mov    ebx,DWORD PTR [ebp+0x18]
6500a5e5:	cmp    ebx,0xffffffff
6500a5e8:	mov    BYTE PTR [esp+0x80],0x1
6500a5f0:	jne    0x6500a636
6500a5f2:	or     ecx,ebx
6500a5f4:	jmp    0x6500a64c
6500a5f6:	mov    ebx,0x1d0
6500a5fb:	jmp    0x6500a511
6500a600:	cmp    DWORD PTR [esp+0x6c],0x10
6500a605:	jb     0x6500a614
6500a607:	mov    edx,DWORD PTR [esp+0x58]
6500a60b:	push   edx
6500a60c:	call   0x650120d2
6500a611:	add    esp,0x4
6500a614:	xor    al,al
6500a616:	jmp    0x6500a761
6500a61b:	cmp    DWORD PTR [esp+0x6c],0x10
6500a620:	jb     0x6500a614
6500a622:	mov    eax,DWORD PTR [esp+0x58]
6500a626:	push   eax
6500a627:	call   0x650120d2
6500a62c:	add    esp,0x4
6500a62f:	xor    al,al
6500a631:	jmp    0x6500a761
6500a636:	call   DWORD PTR ds:0x65024050
6500a63c:	sub    eax,DWORD PTR [esp+0x20]
6500a640:	cmp    eax,ebx
6500a642:	ja     0x6500a6db
6500a648:	mov    ecx,ebx
6500a64a:	sub    ecx,eax
6500a64c:	mov    edx,DWORD PTR [esp+0x44]
6500a650:	sub    esp,0x10
6500a653:	mov    eax,esp
6500a655:	mov    DWORD PTR [eax],edx
6500a657:	mov    edx,DWORD PTR [esp+0x58]
6500a65b:	mov    DWORD PTR [eax+0x4],edx
6500a65e:	mov    edx,DWORD PTR [esp+0x5c]
6500a662:	push   0x1
6500a664:	push   ecx
6500a665:	mov    ecx,DWORD PTR [ebp+0x8]
6500a668:	mov    DWORD PTR [eax+0x8],edx
6500a66b:	mov    edx,DWORD PTR [esp+0x68]
6500a66f:	push   edi
6500a670:	mov    DWORD PTR [eax+0xc],edx
6500a673:	mov    eax,DWORD PTR [esp+0x30]
6500a677:	mov    edx,DWORD PTR [esp+0x38]
6500a67b:	push   eax
6500a67c:	push   edi
6500a67d:	push   edi
6500a67e:	push   ecx
6500a67f:	push   edx
6500a680:	lea    edx,[esp+0x43]
6500a684:	lea    ecx,[esp+0x58]
6500a688:	call   0x6500a790
6500a68d:	test   al,al
6500a68f:	je     0x6500a709
6500a691:	cmp    DWORD PTR [esp+0x3c],edi
6500a695:	je     0x6500a737
6500a69b:	mov    esi,DWORD PTR [esp+0x18]
6500a69f:	push   edi
6500a6a0:	lea    eax,[esp+0x2c]
6500a6a4:	push   eax
6500a6a5:	or     eax,0xffffffff
6500a6a8:	call   0x65001a30
6500a6ad:	mov    BYTE PTR [esp+0x80],0x0
6500a6b5:	cmp    DWORD PTR [esp+0x40],0x10
6500a6ba:	jb     0x6500a6c9
6500a6bc:	mov    ecx,DWORD PTR [esp+0x2c]
6500a6c0:	push   ecx
6500a6c1:	call   0x650120d2
6500a6c6:	add    esp,0x4
6500a6c9:	sub    DWORD PTR [esp+0x14],0x1
6500a6ce:	cmp    BYTE PTR [esp+0x13],0x0
6500a6d3:	jne    0x6500a5d0
6500a6d9:	jmp    0x6500a74b
6500a6db:	mov    ebx,0x10
6500a6e0:	cmp    DWORD PTR [esp+0x40],ebx
6500a6e4:	jb     0x6500a6f3
6500a6e6:	mov    edx,DWORD PTR [esp+0x2c]
6500a6ea:	push   edx
6500a6eb:	call   0x650120d2
6500a6f0:	add    esp,0x4
6500a6f3:	cmp    DWORD PTR [esp+0x6c],ebx
6500a6f7:	mov    DWORD PTR [esp+0x40],esi
6500a6fb:	mov    DWORD PTR [esp+0x3c],edi
6500a6ff:	mov    BYTE PTR [esp+0x2c],0x0
6500a704:	jmp    0x6500a620
6500a709:	mov    ebx,0x10
6500a70e:	cmp    DWORD PTR [esp+0x40],ebx
6500a712:	jb     0x6500a721
6500a714:	mov    ecx,DWORD PTR [esp+0x2c]
6500a718:	push   ecx
6500a719:	call   0x650120d2
6500a71e:	add    esp,0x4
6500a721:	cmp    DWORD PTR [esp+0x6c],ebx
6500a725:	mov    DWORD PTR [esp+0x40],esi
6500a729:	mov    DWORD PTR [esp+0x3c],edi
6500a72d:	mov    BYTE PTR [esp+0x2c],0x0
6500a732:	jmp    0x6500a605
6500a737:	cmp    DWORD PTR [esp+0x40],0x10
6500a73c:	jb     0x6500a74b
6500a73e:	mov    eax,DWORD PTR [esp+0x2c]
6500a742:	push   eax
6500a743:	call   0x650120d2
6500a748:	add    esp,0x4
6500a74b:	cmp    DWORD PTR [esp+0x6c],0x10
6500a750:	jb     0x6500a75f
6500a752:	mov    ecx,DWORD PTR [esp+0x58]
6500a756:	push   ecx
6500a757:	call   0x650120d2
6500a75c:	add    esp,0x4
6500a75f:	mov    al,0x1
6500a761:	mov    ecx,DWORD PTR [esp+0x78]
6500a765:	mov    DWORD PTR fs:0x0,ecx
6500a76c:	pop    ecx
6500a76d:	pop    edi
6500a76e:	pop    esi
6500a76f:	pop    ebx
6500a770:	mov    ecx,DWORD PTR [esp+0x60]
6500a774:	xor    ecx,esp
6500a776:	call   0x6501292c
6500a77b:	mov    esp,ebp
6500a77d:	pop    ebp
6500a77e:	ret    0x14
6500a781:	int3   
6500a782:	int3   
6500a783:	int3   
6500a784:	int3   
6500a785:	int3   
6500a786:	int3   
6500a787:	int3   
6500a788:	int3   
6500a789:	int3   
6500a78a:	int3   
6500a78b:	int3   
6500a78c:	int3   
6500a78d:	int3   
6500a78e:	int3   
6500a78f:	int3   
6500a790:	push   0xffffffff
6500a792:	push   0x65022cac
6500a797:	mov    eax,fs:0x0
6500a79d:	push   eax
6500a79e:	mov    eax,0x10074
6500a7a3:	call   0x650181b0
6500a7a8:	mov    eax,ds:0x6502c09c
6500a7ad:	xor    eax,esp
6500a7af:	mov    DWORD PTR [esp+0x10070],eax
6500a7b6:	push   ebx
6500a7b7:	push   ebp
6500a7b8:	push   esi
6500a7b9:	push   edi
6500a7ba:	mov    eax,ds:0x6502c09c
6500a7bf:	xor    eax,esp
6500a7c1:	push   eax
6500a7c2:	lea    eax,[esp+0x10088]
6500a7c9:	mov    fs:0x0,eax
6500a7cf:	mov    eax,DWORD PTR [esp+0x10098]
6500a7d6:	mov    esi,DWORD PTR [esp+0x100a0]
6500a7dd:	mov    ebp,DWORD PTR ds:0x650241bc
6500a7e3:	mov    DWORD PTR [esp+0x18],eax
6500a7e7:	mov    eax,DWORD PTR [esp+0x100b8]
6500a7ee:	mov    DWORD PTR [esp+0x2c],ecx
6500a7f2:	mov    ecx,DWORD PTR [esp+0x100bc]
6500a7f9:	mov    DWORD PTR [esp+0x28],edx
6500a7fd:	mov    edx,DWORD PTR [esp+0x100c0]
6500a804:	mov    DWORD PTR [esp+0x54],eax
6500a808:	mov    eax,DWORD PTR [esp+0x100c4]
6500a80f:	xor    ebx,ebx
6500a811:	mov    DWORD PTR [esp+0x1c],esi
6500a815:	mov    DWORD PTR [esp+0x58],ecx
6500a819:	mov    DWORD PTR [esp+0x5c],edx
6500a81d:	mov    DWORD PTR [esp+0x60],eax
6500a821:	mov    BYTE PTR [esp+0x17],bl
6500a825:	xor    edi,edi
6500a827:	jmp    0x6500a830
6500a829:	lea    esp,[esp+0x0]
6500a830:	mov    DWORD PTR [esp+0x50],0xf
6500a838:	mov    DWORD PTR [esp+0x4c],ebx
6500a83c:	mov    BYTE PTR [esp+0x3c],bl
6500a840:	mov    DWORD PTR [esp+0x10090],ebx
6500a847:	mov    edx,DWORD PTR [esp+0x58]
6500a84b:	mov    eax,DWORD PTR [esp+0x5c]
6500a84f:	mov    ecx,DWORD PTR [esp+0x54]
6500a853:	mov    DWORD PTR [esp+0x70],eax
6500a857:	mov    eax,DWORD PTR [esp+0x100a8]
6500a85e:	mov    DWORD PTR [esp+0x68],ecx
6500a862:	mov    ecx,DWORD PTR [esp+0x60]
6500a866:	mov    DWORD PTR [esp+0x6c],edx
6500a86a:	mov    dl,BYTE PTR [esp+0x100ac]
6500a871:	push   eax
6500a872:	mov    DWORD PTR [esp+0x78],ecx
6500a876:	mov    DWORD PTR [esp+0x7c],eax
6500a87a:	mov    DWORD PTR [esp+0x80],edi
6500a881:	mov    BYTE PTR [esp+0x84],dl
6500a888:	call   ebp
6500a88a:	mov    DWORD PTR [esp+0x78],eax
6500a88e:	mov    eax,DWORD PTR [esp+0x7c]
6500a892:	push   eax
6500a893:	call   ebp
6500a895:	push   0x19
6500a897:	lea    ecx,[esp+0x6c]
6500a89b:	mov    DWORD PTR [esp+0x80],eax
6500a8a2:	push   ecx
6500a8a3:	lea    eax,[esp+0x40]
6500a8a7:	call   0x6500a2c0
6500a8ac:	cmp    esi,ebx
6500a8ae:	je     0x6500a8c2
6500a8b0:	mov    edx,DWORD PTR [esp+0x100a4]
6500a8b7:	push   edx
6500a8b8:	push   esi
6500a8b9:	lea    eax,[esp+0x40]
6500a8bd:	call   0x6500a2c0
6500a8c2:	cmp    DWORD PTR [esp+0x50],0x10
6500a8c7:	mov    eax,DWORD PTR [esp+0x3c]
6500a8cb:	jae    0x6500a8d1
6500a8cd:	lea    eax,[esp+0x3c]
6500a8d1:	mov    ecx,DWORD PTR [esp+0x4c]
6500a8d5:	push   ecx
6500a8d6:	push   eax
6500a8d7:	lea    ecx,[esp+0x2c]
6500a8db:	lea    ebx,[esp+0x38]
6500a8df:	call   0x6500da90
6500a8e4:	mov    edx,DWORD PTR [eax]
6500a8e6:	mov    esi,edx
6500a8e8:	mov    DWORD PTR [eax],0x0
6500a8ee:	mov    DWORD PTR [esp+0x28],esi
6500a8f2:	mov    BYTE PTR [esp+0x10098],0x1
6500a8fa:	mov    eax,DWORD PTR [esp+0x38]
6500a8fe:	push   eax
6500a8ff:	call   0x650120d2
6500a904:	add    esp,0xc
6500a907:	lea    ecx,[esp+0x34]
6500a90b:	push   0x0
6500a90d:	push   ecx
6500a90e:	mov    DWORD PTR [esp+0x3c],0x0
6500a916:	call   0x6500e4e0
6500a91b:	call   eax
6500a91d:	test   eax,eax
6500a91f:	je     0x6500a9ae
6500a925:	mov    eax,DWORD PTR [esp+0x100b0]
6500a92c:	cmp    eax,0x1388
6500a931:	jb     0x6500a938
6500a933:	mov    eax,0x1388
6500a938:	mov    ecx,DWORD PTR [esp+0x1009c]
6500a93f:	push   eax
6500a940:	mov    eax,DWORD PTR [esp+0x28]
6500a944:	push   0xffff
6500a949:	lea    edx,[esp+0x8c]
6500a950:	push   edx
6500a951:	mov    edx,DWORD PTR [esp+0x24]
6500a955:	push   0x0
6500a957:	push   eax
6500a958:	mov    eax,DWORD PTR [edx]
6500a95a:	push   esi
6500a95b:	push   ecx
6500a95c:	push   eax
6500a95d:	call   0x6500dcc0
6500a962:	call   eax
6500a964:	mov    ebx,eax
6500a966:	test   ebx,ebx
6500a968:	jne    0x6500a9b1
6500a96a:	push   esi
6500a96b:	call   0x650120d2
6500a970:	add    esp,0x4
6500a973:	cmp    BYTE PTR [esp+0x100b4],bl
6500a97a:	mov    DWORD PTR [esp+0x10090],0xffffffff
6500a985:	je     0x6500a9d3
6500a987:	cmp    DWORD PTR [esp+0x50],0x10
6500a98c:	jb     0x6500a99b
6500a98e:	mov    ecx,DWORD PTR [esp+0x3c]
6500a992:	push   ecx
6500a993:	call   0x650120d2
6500a998:	add    esp,0x4
6500a99b:	add    edi,0x1
6500a99e:	cmp    edi,0x5
6500a9a1:	je     0x6500a9e7
6500a9a3:	mov    esi,DWORD PTR [esp+0x1c]
6500a9a7:	xor    ebx,ebx
6500a9a9:	jmp    0x6500a830
6500a9ae:	or     ebx,0xffffffff
6500a9b1:	push   esi
6500a9b2:	call   0x650120d2
6500a9b7:	add    esp,0x4
6500a9ba:	mov    DWORD PTR [esp+0x10090],0xffffffff
6500a9c5:	cmp    DWORD PTR [esp+0x50],0x10
6500a9ca:	jb     0x6500a9e7
6500a9cc:	mov    edx,DWORD PTR [esp+0x3c]
6500a9d0:	push   edx
6500a9d1:	jmp    0x6500a9df
6500a9d3:	cmp    DWORD PTR [esp+0x50],0x10
6500a9d8:	jb     0x6500a9e7
6500a9da:	mov    eax,DWORD PTR [esp+0x3c]
6500a9de:	push   eax
6500a9df:	call   0x650120d2
6500a9e4:	add    esp,0x4
6500a9e7:	test   ebx,ebx
6500a9e9:	je     0x6500ab8f
6500a9ef:	mov    ax,WORD PTR [esp+0x90]
6500a9f7:	test   ax,ax
6500a9fa:	je     0x6500ab83
6500aa00:	lea    ecx,[esp+0x24]
6500aa04:	push   ecx
6500aa05:	lea    edx,[esp+0xa4]
6500aa0c:	movzx  ebx,ax
6500aa0f:	push   edx
6500aa10:	lea    edi,[esp+0x24]
6500aa14:	call   0x6500dbc0
6500aa19:	mov    ecx,DWORD PTR [eax]
6500aa1b:	mov    ebp,ecx
6500aa1d:	xor    ebx,ebx
6500aa1f:	mov    DWORD PTR [eax],ebx
6500aa21:	mov    DWORD PTR [esp+0x28],ebp
6500aa25:	mov    DWORD PTR [esp+0x10098],0x2
6500aa30:	mov    edx,DWORD PTR [esp+0x24]
6500aa34:	push   edx
6500aa35:	call   0x650120d2
6500aa3a:	add    esp,0xc
6500aa3d:	cmp    ebp,ebx
6500aa3f:	je     0x6500ab72
6500aa45:	mov    eax,DWORD PTR [ebp+0x10]
6500aa48:	push   eax
6500aa49:	call   DWORD PTR ds:0x650241b8
6500aa4f:	cmp    BYTE PTR [esp+0x100ac],bl
6500aa56:	mov    DWORD PTR [esp+0x18],eax
6500aa5a:	mov    DWORD PTR [ebp+0x10],eax
6500aa5d:	jne    0x6500aa6f
6500aa5f:	cmp    DWORD PTR [esp+0x100a8],ebx
6500aa66:	jle    0x6500aa6f
6500aa68:	mov    DWORD PTR [esp+0x100a8],ebx
6500aa6f:	mov    ecx,0x10
6500aa74:	lea    edx,[esp+0x54]
6500aa78:	mov    esi,ebp
6500aa7a:	lea    ebx,[ebx+0x0]
6500aa80:	mov    eax,DWORD PTR [esi]
6500aa82:	cmp    eax,DWORD PTR [edx]
6500aa84:	jne    0x6500aa98
6500aa86:	sub    ecx,0x4
6500aa89:	add    edx,0x4
6500aa8c:	add    esi,0x4
6500aa8f:	cmp    ecx,0x4
6500aa92:	jae    0x6500aa80
6500aa94:	cmp    ecx,ebx
6500aa96:	je     0x6500aaf5
6500aa98:	movzx  edi,BYTE PTR [esi]
6500aa9b:	movzx  eax,BYTE PTR [edx]
6500aa9e:	sub    edi,eax
6500aaa0:	jne    0x6500aae7
6500aaa2:	sub    ecx,0x1
6500aaa5:	add    edx,0x1
6500aaa8:	add    esi,0x1
6500aaab:	cmp    ecx,ebx
6500aaad:	je     0x6500aaf5
6500aaaf:	movzx  edi,BYTE PTR [esi]
6500aab2:	movzx  eax,BYTE PTR [edx]
6500aab5:	sub    edi,eax
6500aab7:	jne    0x6500aae7
6500aab9:	sub    ecx,0x1
6500aabc:	add    edx,0x1
6500aabf:	add    esi,0x1
6500aac2:	cmp    ecx,ebx
6500aac4:	je     0x6500aaf5
6500aac6:	movzx  edi,BYTE PTR [esi]
6500aac9:	movzx  eax,BYTE PTR [edx]
6500aacc:	sub    edi,eax
6500aace:	jne    0x6500aae7
6500aad0:	sub    ecx,0x1
6500aad3:	add    edx,0x1
6500aad6:	add    esi,0x1
6500aad9:	cmp    ecx,ebx
6500aadb:	je     0x6500aaf5
6500aadd:	movzx  edi,BYTE PTR [esi]
6500aae0:	movzx  ecx,BYTE PTR [edx]
6500aae3:	sub    edi,ecx
6500aae5:	je     0x6500aaf5
6500aae7:	cmp    edi,ebx
6500aae9:	mov    ecx,0x1
6500aaee:	jg     0x6500aaf7
6500aaf0:	or     ecx,0xffffffff
6500aaf3:	jmp    0x6500aaf7
6500aaf5:	xor    ecx,ecx
6500aaf7:	cmp    ecx,ebx
6500aaf9:	jne    0x6500ab72
6500aafb:	mov    edx,DWORD PTR [esp+0x100a8]
6500ab02:	cmp    DWORD PTR [esp+0x18],edx
6500ab06:	jne    0x6500ab72
6500ab08:	mov    al,BYTE PTR [ebp+0x14]
6500ab0b:	mov    ecx,DWORD PTR [esp+0x28]
6500ab0f:	mov    BYTE PTR [ecx],al
6500ab11:	mov    eax,DWORD PTR [esp+0x24]
6500ab15:	add    eax,0xffffffeb
6500ab18:	push   eax
6500ab19:	lea    edx,[ebp+0x15]
6500ab1c:	push   edx
6500ab1d:	lea    ecx,[esp+0x40]
6500ab21:	mov    DWORD PTR [esp+0x58],0xf
6500ab29:	mov    DWORD PTR [esp+0x54],ebx
6500ab2d:	mov    BYTE PTR [esp+0x44],bl
6500ab31:	call   0x650018c0
6500ab36:	mov    ecx,DWORD PTR [esp+0x2c]
6500ab3a:	push   0xffffffff
6500ab3c:	push   ebx
6500ab3d:	lea    eax,[esp+0x40]
6500ab41:	push   eax
6500ab42:	mov    BYTE PTR [esp+0x1009c],0x3
6500ab4a:	call   0x650017e0
6500ab4f:	cmp    DWORD PTR [esp+0x50],0x10
6500ab54:	jb     0x6500ab63
6500ab56:	mov    ecx,DWORD PTR [esp+0x3c]
6500ab5a:	push   ecx
6500ab5b:	call   0x650120d2
6500ab60:	add    esp,0x4
6500ab63:	push   ebp
6500ab64:	mov    bl,0x1
6500ab66:	call   0x650120d2
6500ab6b:	add    esp,0x4
6500ab6e:	mov    al,bl
6500ab70:	jmp    0x6500ab93
6500ab72:	mov    bl,BYTE PTR [esp+0x17]
6500ab76:	push   ebp
6500ab77:	call   0x650120d2
6500ab7c:	add    esp,0x4
6500ab7f:	mov    al,bl
6500ab81:	jmp    0x6500ab93
6500ab83:	cmp    BYTE PTR [esp+0x100ac],0x0
6500ab8b:	mov    al,0x1
6500ab8d:	jne    0x6500ab93
6500ab8f:	mov    al,BYTE PTR [esp+0x17]
6500ab93:	mov    ecx,DWORD PTR [esp+0x10088]
6500ab9a:	mov    DWORD PTR fs:0x0,ecx
6500aba1:	pop    ecx
6500aba2:	pop    edi
6500aba3:	pop    esi
6500aba4:	pop    ebp
6500aba5:	pop    ebx
6500aba6:	mov    ecx,DWORD PTR [esp+0x10070]
6500abad:	xor    ecx,esp
6500abaf:	call   0x6501292c
6500abb4:	add    esp,0x10080
6500abba:	ret    0x30
6500abbd:	int3   
6500abbe:	int3   
6500abbf:	int3   
6500abc0:	push   0xffffffff
6500abc2:	push   0x650222cb
6500abc7:	mov    eax,fs:0x0
6500abcd:	push   eax
6500abce:	push   ecx
6500abcf:	push   esi
6500abd0:	mov    eax,ds:0x6502c09c
6500abd5:	xor    eax,esp
6500abd7:	push   eax
6500abd8:	lea    eax,[esp+0xc]
6500abdc:	mov    fs:0x0,eax
6500abe2:	push   0xc
6500abe4:	call   0x6501246c
6500abe9:	mov    esi,eax
6500abeb:	add    esp,0x4
6500abee:	mov    DWORD PTR [esp+0x8],esi
6500abf2:	test   esi,esi
6500abf4:	mov    DWORD PTR [esp+0x14],0x0
6500abfc:	je     0x6500ac1a
6500abfe:	mov    eax,DWORD PTR [esp+0x1c]
6500ac02:	push   eax
6500ac03:	mov    DWORD PTR [esi+0x4],0x0
6500ac0a:	mov    DWORD PTR [esi+0x8],0x1
6500ac11:	call   0x6501e870
6500ac16:	mov    DWORD PTR [esi],eax
6500ac18:	jmp    0x6500ac1c
6500ac1a:	xor    esi,esi
6500ac1c:	test   esi,esi
6500ac1e:	mov    DWORD PTR [esp+0x14],0xffffffff
6500ac26:	mov    DWORD PTR [ebx],esi
6500ac28:	jne    0x6500ac34
6500ac2a:	push   0x8007000e
6500ac2f:	call   0x6501ea00
6500ac34:	mov    eax,ebx
6500ac36:	mov    ecx,DWORD PTR [esp+0xc]
6500ac3a:	mov    DWORD PTR fs:0x0,ecx
6500ac41:	pop    ecx
6500ac42:	pop    esi
6500ac43:	add    esp,0x10
6500ac46:	ret    0x4
6500ac49:	int3   
6500ac4a:	int3   
6500ac4b:	int3   
6500ac4c:	int3   
6500ac4d:	int3   
6500ac4e:	int3   
6500ac4f:	int3   
6500ac50:	push   0xffffffff
6500ac52:	push   0x6502229b
6500ac57:	mov    eax,fs:0x0
6500ac5d:	push   eax
6500ac5e:	push   ebp
6500ac5f:	push   esi
6500ac60:	mov    eax,ds:0x6502c09c
6500ac65:	xor    eax,esp
6500ac67:	push   eax
6500ac68:	lea    eax,[esp+0xc]
6500ac6c:	mov    fs:0x0,eax
6500ac72:	mov    ebp,DWORD PTR [esp+0x1c]
6500ac76:	push   0xc
6500ac78:	call   0x6501246c
6500ac7d:	mov    esi,eax
6500ac7f:	add    esp,0x4
6500ac82:	mov    DWORD PTR [esp+0x1c],esi
6500ac86:	test   esi,esi
6500ac88:	mov    DWORD PTR [esp+0x14],0x0
6500ac90:	je     0x6500acbd
6500ac92:	push   edi
6500ac93:	mov    DWORD PTR [esi+0x4],0x0
6500ac9a:	mov    DWORD PTR [esi+0x8],0x1
6500aca1:	call   DWORD PTR ds:0x6502419c
6500aca7:	test   eax,eax
6500aca9:	mov    DWORD PTR [esi],eax
6500acab:	jne    0x6500acbf
6500acad:	test   edi,edi
6500acaf:	je     0x6500acbf
6500acb1:	push   0x8007000e
6500acb6:	call   0x6501ea00
6500acbb:	jmp    0x6500acbf
6500acbd:	xor    esi,esi
6500acbf:	test   esi,esi
6500acc1:	mov    DWORD PTR [esp+0x14],0xffffffff
6500acc9:	mov    DWORD PTR [ebp+0x0],esi
6500accc:	jne    0x6500acd8
6500acce:	push   0x8007000e
6500acd3:	call   0x6501ea00
6500acd8:	mov    eax,ebp
6500acda:	mov    ecx,DWORD PTR [esp+0xc]
6500acde:	mov    DWORD PTR fs:0x0,ecx
6500ace5:	pop    ecx
6500ace6:	pop    esi
6500ace7:	pop    ebp
6500ace8:	add    esp,0xc
6500aceb:	ret    0x4
6500acee:	int3   
6500acef:	int3   
6500acf0:	push   esi
6500acf1:	mov    esi,DWORD PTR [edi]
6500acf3:	test   esi,esi
6500acf5:	je     0x6500ad35
6500acf7:	lea    eax,[esi+0x8]
6500acfa:	push   eax
6500acfb:	call   DWORD PTR ds:0x65024094
6500ad01:	test   eax,eax
6500ad03:	jne    0x6500ad2f
6500ad05:	test   esi,esi
6500ad07:	je     0x6500ad2f
6500ad09:	mov    eax,DWORD PTR [esi]
6500ad0b:	test   eax,eax
6500ad0d:	je     0x6500ad16
6500ad0f:	push   eax
6500ad10:	call   DWORD PTR ds:0x650241a0
6500ad16:	mov    eax,DWORD PTR [esi+0x4]
6500ad19:	test   eax,eax
6500ad1b:	je     0x6500ad26
6500ad1d:	push   eax
6500ad1e:	call   0x65012faa
6500ad23:	add    esp,0x4
6500ad26:	push   esi
6500ad27:	call   0x650120d2
6500ad2c:	add    esp,0x4
6500ad2f:	mov    DWORD PTR [edi],0x0
6500ad35:	pop    esi
6500ad36:	ret    
6500ad37:	int3   
6500ad38:	int3   
6500ad39:	int3   
6500ad3a:	int3   
6500ad3b:	int3   
6500ad3c:	int3   
6500ad3d:	int3   
6500ad3e:	int3   
6500ad3f:	int3   
6500ad40:	push   0xffffffff
6500ad42:	push   0x6502226b
6500ad47:	mov    eax,fs:0x0
6500ad4d:	push   eax
6500ad4e:	push   ebp
6500ad4f:	push   esi
6500ad50:	mov    eax,ds:0x6502c09c
6500ad55:	xor    eax,esp
6500ad57:	push   eax
6500ad58:	lea    eax,[esp+0xc]
6500ad5c:	mov    fs:0x0,eax
6500ad62:	mov    ebp,DWORD PTR [esp+0x1c]
6500ad66:	test   ebp,ebp
6500ad68:	je     0x6500ad7e
6500ad6a:	mov    eax,DWORD PTR [ebx]
6500ad6c:	test   eax,eax
6500ad6e:	je     0x6500ad74
6500ad70:	mov    eax,DWORD PTR [eax]
6500ad72:	jmp    0x6500ad76
6500ad74:	xor    eax,eax
6500ad76:	cmp    eax,ebp
6500ad78:	je     0x6500ae23
6500ad7e:	mov    esi,DWORD PTR [ebx]
6500ad80:	test   esi,esi
6500ad82:	je     0x6500adc2
6500ad84:	lea    eax,[esi+0x8]
6500ad87:	push   eax
6500ad88:	call   DWORD PTR ds:0x65024094
6500ad8e:	test   eax,eax
6500ad90:	jne    0x6500adbc
6500ad92:	test   esi,esi
6500ad94:	je     0x6500adbc
6500ad96:	mov    eax,DWORD PTR [esi]
6500ad98:	test   eax,eax
6500ad9a:	je     0x6500ada3
6500ad9c:	push   eax
6500ad9d:	call   DWORD PTR ds:0x650241a0
6500ada3:	mov    eax,DWORD PTR [esi+0x4]
6500ada6:	test   eax,eax
6500ada8:	je     0x6500adb3
6500adaa:	push   eax
6500adab:	call   0x65012faa
6500adb0:	add    esp,0x4
6500adb3:	push   esi
6500adb4:	call   0x650120d2
6500adb9:	add    esp,0x4
6500adbc:	mov    DWORD PTR [ebx],0x0
6500adc2:	push   0xc
6500adc4:	call   0x6501246c
6500adc9:	mov    esi,eax
6500adcb:	add    esp,0x4
6500adce:	mov    DWORD PTR [esp+0x1c],esi
6500add2:	test   esi,esi
6500add4:	mov    DWORD PTR [esp+0x14],0x0
6500addc:	je     0x6500ae09
6500adde:	push   ebp
6500addf:	mov    DWORD PTR [esi+0x4],0x0
6500ade6:	mov    DWORD PTR [esi+0x8],0x1
6500aded:	call   DWORD PTR ds:0x6502419c
6500adf3:	test   eax,eax
6500adf5:	mov    DWORD PTR [esi],eax
6500adf7:	jne    0x6500ae0b
6500adf9:	test   ebp,ebp
6500adfb:	je     0x6500ae0b
6500adfd:	push   0x8007000e
6500ae02:	call   0x6501ea00
6500ae07:	jmp    0x6500ae0b
6500ae09:	xor    esi,esi
6500ae0b:	test   esi,esi
6500ae0d:	mov    DWORD PTR [esp+0x14],0xffffffff
6500ae15:	mov    DWORD PTR [ebx],esi
6500ae17:	jne    0x6500ae23
6500ae19:	push   0x8007000e
6500ae1e:	call   0x6501ea00
6500ae23:	mov    eax,ebx
6500ae25:	mov    ecx,DWORD PTR [esp+0xc]
6500ae29:	mov    DWORD PTR fs:0x0,ecx
6500ae30:	pop    ecx
6500ae31:	pop    esi
6500ae32:	pop    ebp
6500ae33:	add    esp,0xc
6500ae36:	ret    0x4
6500ae39:	int3   
6500ae3a:	int3   
6500ae3b:	int3   
6500ae3c:	int3   
6500ae3d:	int3   
6500ae3e:	int3   
6500ae3f:	int3   
6500ae40:	push   0xffffffff
6500ae42:	push   0x650222fb
6500ae47:	mov    eax,fs:0x0
6500ae4d:	push   eax
6500ae4e:	push   ecx
6500ae4f:	push   esi
6500ae50:	push   edi
6500ae51:	mov    eax,ds:0x6502c09c
6500ae56:	xor    eax,esp
6500ae58:	push   eax
6500ae59:	lea    eax,[esp+0x10]
6500ae5d:	mov    fs:0x0,eax
6500ae63:	push   0xc
6500ae65:	call   0x6501246c
6500ae6a:	add    esp,0x4
6500ae6d:	mov    DWORD PTR [esp+0xc],eax
6500ae71:	test   eax,eax
6500ae73:	mov    DWORD PTR [esp+0x18],0x0
6500ae7b:	je     0x6500ae8e
6500ae7d:	mov    ecx,DWORD PTR [esp+0x20]
6500ae81:	push   ecx
6500ae82:	push   ebx
6500ae83:	mov    edi,eax
6500ae85:	call   0x6500afa0
6500ae8a:	mov    edi,eax
6500ae8c:	jmp    0x6500ae90
6500ae8e:	xor    edi,edi
6500ae90:	test   edi,edi
6500ae92:	mov    DWORD PTR [esp+0x18],0xffffffff
6500ae9a:	jne    0x6500aea8
6500ae9c:	push   0x8007000e
6500aea1:	call   0x6501ea00
6500aea6:	jmp    0x6500aeee
6500aea8:	mov    esi,DWORD PTR [ebx]
6500aeaa:	test   esi,esi
6500aeac:	je     0x6500aeec
6500aeae:	lea    edx,[esi+0x8]
6500aeb1:	push   edx
6500aeb2:	call   DWORD PTR ds:0x65024094
6500aeb8:	test   eax,eax
6500aeba:	jne    0x6500aee6
6500aebc:	test   esi,esi
6500aebe:	je     0x6500aee6
6500aec0:	mov    eax,DWORD PTR [esi]
6500aec2:	test   eax,eax
6500aec4:	je     0x6500aecd
6500aec6:	push   eax
6500aec7:	call   DWORD PTR ds:0x650241a0
6500aecd:	mov    eax,DWORD PTR [esi+0x4]
6500aed0:	test   eax,eax
6500aed2:	je     0x6500aedd
6500aed4:	push   eax
6500aed5:	call   0x65012faa
6500aeda:	add    esp,0x4
6500aedd:	push   esi
6500aede:	call   0x650120d2
6500aee3:	add    esp,0x4
6500aee6:	mov    DWORD PTR [ebx],0x0
6500aeec:	mov    DWORD PTR [ebx],edi
6500aeee:	mov    eax,ebx
6500aef0:	mov    ecx,DWORD PTR [esp+0x10]
6500aef4:	mov    DWORD PTR fs:0x0,ecx
6500aefb:	pop    ecx
6500aefc:	pop    edi
6500aefd:	pop    esi
6500aefe:	add    esp,0x10
6500af01:	ret    0x4
6500af04:	int3   
6500af05:	int3   
6500af06:	int3   
6500af07:	int3   
6500af08:	int3   
6500af09:	int3   
6500af0a:	int3   
6500af0b:	int3   
6500af0c:	int3   
6500af0d:	int3   
6500af0e:	int3   
6500af0f:	int3   
6500af10:	push   0xffffffff
6500af12:	push   0x650223a9
6500af17:	mov    eax,fs:0x0
6500af1d:	push   eax
6500af1e:	push   ecx
6500af1f:	push   ebx
6500af20:	mov    eax,ds:0x6502c09c
6500af25:	xor    eax,esp
6500af27:	push   eax
6500af28:	lea    eax,[esp+0xc]
6500af2c:	mov    fs:0x0,eax
6500af32:	mov    ebx,DWORD PTR [esp+0x20]
6500af36:	mov    eax,DWORD PTR [esp+0x1c]
6500af3a:	mov    DWORD PTR [esp+0x8],0x0
6500af42:	mov    eax,DWORD PTR [eax]
6500af44:	test   eax,eax
6500af46:	mov    DWORD PTR [ebx],eax
6500af48:	je     0x6500af54
6500af4a:	add    eax,0x8
6500af4d:	push   eax
6500af4e:	call   DWORD PTR ds:0x65024018
6500af54:	mov    ecx,DWORD PTR [esp+0x24]
6500af58:	mov    DWORD PTR [esp+0x14],0x0
6500af60:	push   ecx
6500af61:	mov    DWORD PTR [esp+0xc],0x1
6500af69:	call   0x6500ae40
6500af6e:	mov    eax,ebx
6500af70:	mov    ecx,DWORD PTR [esp+0xc]
6500af74:	mov    DWORD PTR fs:0x0,ecx
6500af7b:	pop    ecx
6500af7c:	pop    ebx
6500af7d:	add    esp,0x10
6500af80:	ret    0xc
6500af83:	int3   
6500af84:	int3   
6500af85:	int3   
6500af86:	int3   
6500af87:	int3   
6500af88:	int3   
6500af89:	int3   
6500af8a:	int3   
6500af8b:	int3   
6500af8c:	int3   
6500af8d:	int3   
6500af8e:	int3   
6500af8f:	int3   
6500af90:	mov    eax,DWORD PTR [eax]
6500af92:	test   eax,eax
6500af94:	je     0x6500af99
6500af96:	mov    eax,DWORD PTR [eax]
6500af98:	ret    
6500af99:	xor    eax,eax
6500af9b:	ret    
6500af9c:	int3   
6500af9d:	int3   
6500af9e:	int3   
6500af9f:	int3   
6500afa0:	mov    eax,DWORD PTR [esp+0x4]
6500afa4:	push   ebx
6500afa5:	xor    ebx,ebx
6500afa7:	mov    DWORD PTR [edi+0x4],ebx
6500afaa:	mov    DWORD PTR [edi+0x8],0x1
6500afb1:	mov    eax,DWORD PTR [eax]
6500afb3:	cmp    eax,ebx
6500afb5:	push   ebp
6500afb6:	push   esi
6500afb7:	mov    esi,DWORD PTR ds:0x65024190
6500afbd:	je     0x6500afcc
6500afbf:	mov    eax,DWORD PTR [eax]
6500afc1:	cmp    eax,ebx
6500afc3:	je     0x6500afcc
6500afc5:	push   eax
6500afc6:	call   esi
6500afc8:	mov    ebp,eax
6500afca:	jmp    0x6500afce
6500afcc:	xor    ebp,ebp
6500afce:	mov    ecx,DWORD PTR [esp+0x14]
6500afd2:	mov    eax,DWORD PTR [ecx]
6500afd4:	cmp    eax,ebx
6500afd6:	je     0x6500afe3
6500afd8:	mov    eax,DWORD PTR [eax]
6500afda:	cmp    eax,ebx
6500afdc:	je     0x6500afe3
6500afde:	push   eax
6500afdf:	call   esi
6500afe1:	mov    ebx,eax
6500afe3:	lea    esi,[ebx+ebp*1]
6500afe6:	add    esi,esi
6500afe8:	push   esi
6500afe9:	push   0x0
6500afeb:	call   DWORD PTR ds:0x65024188
6500aff1:	test   eax,eax
6500aff3:	mov    DWORD PTR [edi],eax
6500aff5:	jne    0x6500b009
6500aff7:	push   0x8007000e
6500affc:	call   0x6501ea00
6500b001:	pop    esi
6500b002:	pop    ebp
6500b003:	mov    eax,edi
6500b005:	pop    ebx
6500b006:	ret    0x8
6500b009:	mov    edx,DWORD PTR [esp+0x10]
6500b00d:	mov    ecx,DWORD PTR [edx]
6500b00f:	test   ecx,ecx
6500b011:	je     0x6500b02c
6500b013:	mov    ecx,DWORD PTR [ecx]
6500b015:	test   ecx,ecx
6500b017:	je     0x6500b02c
6500b019:	lea    edx,[ebp+ebp*1+0x2]
6500b01d:	push   edx
6500b01e:	push   ecx
6500b01f:	add    esi,0x2
6500b022:	push   esi
6500b023:	push   eax
6500b024:	call   0x65012243
6500b029:	add    esp,0x10
6500b02c:	mov    eax,DWORD PTR [esp+0x14]
6500b030:	mov    eax,DWORD PTR [eax]
6500b032:	test   eax,eax
6500b034:	je     0x6500b051
6500b036:	mov    ecx,DWORD PTR [eax]
6500b038:	test   ecx,ecx
6500b03a:	je     0x6500b051
6500b03c:	lea    eax,[ebx+ebx*1+0x2]
6500b040:	push   eax
6500b041:	push   ecx
6500b042:	mov    ecx,DWORD PTR [edi]
6500b044:	push   eax
6500b045:	lea    edx,[ecx+ebp*2]
6500b048:	push   edx
6500b049:	call   0x65012243
6500b04e:	add    esp,0x10
6500b051:	pop    esi
6500b052:	pop    ebp
6500b053:	mov    eax,edi
6500b055:	pop    ebx
6500b056:	ret    0x8
6500b059:	int3   
6500b05a:	int3   
6500b05b:	int3   
6500b05c:	int3   
6500b05d:	int3   
6500b05e:	int3   
6500b05f:	int3   
6500b060:	push   ecx
6500b061:	call   DWORD PTR ds:0x6502418c
6500b067:	ret    
6500b068:	int3   
6500b069:	int3   
6500b06a:	int3   
6500b06b:	int3   
6500b06c:	int3   
6500b06d:	int3   
6500b06e:	int3   
6500b06f:	int3   
6500b070:	push   0xffffffff
6500b072:	push   0x65022368
6500b077:	mov    eax,fs:0x0
6500b07d:	push   eax
6500b07e:	sub    esp,0x18
6500b081:	push   ebx
6500b082:	mov    eax,ds:0x6502c09c
6500b087:	xor    eax,esp
6500b089:	push   eax
6500b08a:	lea    eax,[esp+0x20]
6500b08e:	mov    fs:0x0,eax
6500b094:	mov    ebx,ecx
6500b096:	cmp    WORD PTR [esi],0x8
6500b09a:	jne    0x6500b0b8
6500b09c:	mov    eax,DWORD PTR [esi+0x8]
6500b09f:	push   eax
6500b0a0:	call   0x6500ad40
6500b0a5:	mov    eax,ebx
6500b0a7:	mov    ecx,DWORD PTR [esp+0x20]
6500b0ab:	mov    DWORD PTR fs:0x0,ecx
6500b0b2:	pop    ecx
6500b0b3:	pop    ebx
6500b0b4:	add    esp,0x24
6500b0b7:	ret    
6500b0b8:	lea    ecx,[esp+0xc]
6500b0bc:	push   ecx
6500b0bd:	call   DWORD PTR ds:0x65024194
6500b0c3:	lea    edx,[esp+0xc]
6500b0c7:	cmp    edx,esi
6500b0c9:	mov    DWORD PTR [esp+0x28],0x0
6500b0d1:	jne    0x6500b0db
6500b0d3:	cmp    WORD PTR [esp+0xc],0x8
6500b0d9:	je     0x6500b0f5
6500b0db:	push   0x8
6500b0dd:	push   0x0
6500b0df:	push   esi
6500b0e0:	lea    eax,[esp+0x18]
6500b0e4:	push   eax
6500b0e5:	call   DWORD PTR ds:0x65024198
6500b0eb:	test   eax,eax
6500b0ed:	jge    0x6500b0f5
6500b0ef:	push   eax
6500b0f0:	call   0x6501ea00
6500b0f5:	mov    ecx,DWORD PTR [esp+0x14]
6500b0f9:	push   ecx
6500b0fa:	call   0x6500ad40
6500b0ff:	lea    edx,[esp+0xc]
6500b103:	push   edx
6500b104:	call   DWORD PTR ds:0x6502418c
6500b10a:	mov    eax,ebx
6500b10c:	mov    ecx,DWORD PTR [esp+0x20]
6500b110:	mov    DWORD PTR fs:0x0,ecx
6500b117:	pop    ecx
6500b118:	pop    ebx
6500b119:	add    esp,0x24
6500b11c:	ret    
6500b11d:	int3   
6500b11e:	int3   
6500b11f:	int3   
6500b120:	sub    esp,0x8
6500b123:	test   eax,eax
6500b125:	mov    BYTE PTR [edi],0x0
6500b128:	jle    0x6500b27e
6500b12e:	push   ebx
6500b12f:	push   ebp
6500b130:	push   esi
6500b131:	xor    esi,esi
6500b133:	add    eax,ecx
6500b135:	mov    BYTE PTR [esp+0xf],0x0
6500b13a:	mov    BYTE PTR [edi],0x0
6500b13d:	mov    DWORD PTR [esp+0x10],eax
6500b141:	mov    ebp,eax
6500b143:	mov    al,BYTE PTR [ebp+0x0]
6500b146:	test   al,al
6500b148:	je     0x6500b1f4
6500b14e:	movsx  edx,al
6500b151:	push   edx
6500b152:	call   0x650135b0
6500b157:	mov    bl,al
6500b159:	movsx  eax,bl
6500b15c:	push   eax
6500b15d:	call   0x6501369e
6500b162:	add    esp,0x8
6500b165:	test   eax,eax
6500b167:	je     0x6500b16b
6500b169:	mov    bl,0x30
6500b16b:	shl    BYTE PTR [esi+edi*1],0x4
6500b16f:	add    BYTE PTR [esp+0xf],0x1
6500b174:	mov    cl,BYTE PTR [esi+edi*1]
6500b177:	mov    al,bl
6500b179:	sub    al,0x30
6500b17b:	cmp    al,0x9
6500b17d:	ja     0x6500b186
6500b17f:	or     al,cl
6500b181:	mov    BYTE PTR [esi+edi*1],al
6500b184:	jmp    0x6500b198
6500b186:	mov    dl,bl
6500b188:	sub    dl,0x61
6500b18b:	cmp    dl,0x5
6500b18e:	ja     0x6500b1ca
6500b190:	sub    bl,0x57
6500b193:	or     bl,cl
6500b195:	mov    BYTE PTR [esi+edi*1],bl
6500b198:	cmp    BYTE PTR [esp+0xf],0x2
6500b19d:	jne    0x6500b1c2
6500b19f:	mov    al,BYTE PTR [esi+edi*1]
6500b1a2:	test   al,al
6500b1a4:	je     0x6500b1b6
6500b1a6:	movsx  eax,al
6500b1a9:	push   eax
6500b1aa:	call   0x6501371b
6500b1af:	add    esp,0x4
6500b1b2:	test   eax,eax
6500b1b4:	je     0x6500b1ca
6500b1b6:	add    esi,0x1
6500b1b9:	mov    BYTE PTR [esp+0xf],0x0
6500b1be:	mov    BYTE PTR [esi+edi*1],0x0
6500b1c2:	add    ebp,0x1
6500b1c5:	jmp    0x6500b143
6500b1ca:	mov    ebp,DWORD PTR [esp+0x10]
6500b1ce:	xor    esi,esi
6500b1d0:	mov    bl,BYTE PTR [ebp+0x0]
6500b1d3:	test   bl,bl
6500b1d5:	je     0x6500b1f4
6500b1d7:	movsx  ecx,bl
6500b1da:	push   ecx
6500b1db:	call   0x6501371b
6500b1e0:	add    esp,0x4
6500b1e3:	test   eax,eax
6500b1e5:	je     0x6500b1f2
6500b1e7:	mov    BYTE PTR [esi+edi*1],bl
6500b1ea:	add    esi,0x1
6500b1ed:	add    ebp,0x1
6500b1f0:	jmp    0x6500b1d0
6500b1f2:	xor    esi,esi
6500b1f4:	cmp    DWORD PTR [esp+0x18],0x0
6500b1f9:	mov    BYTE PTR [esi+edi*1],0x0
6500b1fd:	je     0x6500b222
6500b1ff:	test   esi,esi
6500b201:	jle    0x6500b222
6500b203:	add    esi,0xffffffff
6500b206:	shr    esi,1
6500b208:	lea    eax,[edi+0x1]
6500b20b:	add    esi,0x1
6500b20e:	mov    edi,edi
6500b210:	mov    cl,BYTE PTR [eax-0x1]
6500b213:	mov    dl,BYTE PTR [eax]
6500b215:	mov    BYTE PTR [eax-0x1],dl
6500b218:	mov    BYTE PTR [eax],cl
6500b21a:	add    eax,0x2
6500b21d:	sub    esi,0x1
6500b220:	jne    0x6500b210
6500b222:	or     ebx,0xffffffff
6500b225:	or     ebp,ebx
6500b227:	xor    esi,esi
6500b229:	cmp    BYTE PTR [edi],0x0
6500b22c:	je     0x6500b27b
6500b22e:	mov    edi,edi
6500b230:	movsx  eax,BYTE PTR [esi+edi*1]
6500b234:	push   eax
6500b235:	call   0x6501369e
6500b23a:	add    esp,0x4
6500b23d:	test   eax,eax
6500b23f:	jne    0x6500b249
6500b241:	test   ebp,ebp
6500b243:	jge    0x6500b247
6500b245:	mov    ebp,esi
6500b247:	mov    ebx,esi
6500b249:	add    esi,0x1
6500b24c:	cmp    BYTE PTR [esi+edi*1],0x0
6500b250:	jne    0x6500b230
6500b252:	test   ebp,ebp
6500b254:	jl     0x6500b27b
6500b256:	test   ebx,ebx
6500b258:	jl     0x6500b27b
6500b25a:	cmp    ebp,ebx
6500b25c:	mov    eax,ebp
6500b25e:	jg     0x6500b275
6500b260:	mov    edx,edi
6500b262:	sub    edx,ebp
6500b264:	mov    cl,BYTE PTR [eax+edi*1]
6500b267:	test   cl,cl
6500b269:	je     0x6500b275
6500b26b:	mov    BYTE PTR [edx+eax*1],cl
6500b26e:	add    eax,0x1
6500b271:	cmp    eax,ebx
6500b273:	jle    0x6500b264
6500b275:	sub    eax,ebp
6500b277:	mov    BYTE PTR [eax+edi*1],0x0
6500b27b:	pop    esi
6500b27c:	pop    ebp
6500b27d:	pop    ebx
6500b27e:	mov    eax,edi
6500b280:	add    esp,0x8
6500b283:	ret    
6500b284:	int3   
6500b285:	int3   
6500b286:	int3   
6500b287:	int3   
6500b288:	int3   
6500b289:	int3   
6500b28a:	int3   
6500b28b:	int3   
6500b28c:	int3   
6500b28d:	int3   
6500b28e:	int3   
6500b28f:	int3   
6500b290:	push   ebp
6500b291:	mov    ebp,esp
6500b293:	and    esp,0xfffffff8
6500b296:	mov    eax,0x2f34
6500b29b:	call   0x650181b0
6500b2a0:	mov    eax,ds:0x6502c09c
6500b2a5:	xor    eax,esp
6500b2a7:	mov    DWORD PTR [esp+0x2f30],eax
6500b2ae:	push   ebx
6500b2af:	mov    eax,DWORD PTR [ebp+0x8]
6500b2b2:	mov    ecx,DWORD PTR [ebp+0xc]
6500b2b5:	mov    ebx,DWORD PTR [ebp+0x10]
6500b2b8:	push   esi
6500b2b9:	push   edi
6500b2ba:	xor    edi,edi
6500b2bc:	push   edi
6500b2bd:	push   edi
6500b2be:	push   0x3
6500b2c0:	push   edi
6500b2c1:	push   0x3
6500b2c3:	push   edi
6500b2c4:	push   0x65028264
6500b2c9:	push   0x12
6500b2cb:	push   0x65028294
6500b2d0:	mov    DWORD PTR [esp+0x3c],eax
6500b2d4:	mov    DWORD PTR [esp+0x40],ecx
6500b2d8:	mov    BYTE PTR [esp+0x37],0x0
6500b2dd:	call   0x65006d50
6500b2e2:	add    esp,0xc
6500b2e5:	push   eax
6500b2e6:	call   0x6500e130
6500b2eb:	call   eax
6500b2ed:	mov    esi,eax
6500b2ef:	cmp    esi,0xffffffff
6500b2f2:	jne    0x6500b30b
6500b2f4:	xor    al,al
6500b2f6:	pop    edi
6500b2f7:	pop    esi
6500b2f8:	pop    ebx
6500b2f9:	mov    ecx,DWORD PTR [esp+0x2f30]
6500b300:	xor    ecx,esp
6500b302:	call   0x6501292c
6500b307:	mov    esp,ebp
6500b309:	pop    ebp
6500b30a:	ret    
6500b30b:	xor    eax,eax
6500b30d:	push   0x2710
6500b312:	lea    edx,[esp+0x82c]
6500b319:	push   edi
6500b31a:	mov    DWORD PTR [esp+0x2c],eax
6500b31e:	mov    DWORD PTR [esp+0x30],eax
6500b322:	push   edx
6500b323:	mov    DWORD PTR [esp+0x20],edi
6500b327:	mov    DWORD PTR [esp+0x38],eax
6500b32b:	mov    DWORD PTR [esp+0x30],edi
6500b32f:	mov    DWORD PTR [esp+0x34],edi
6500b333:	call   0x65012fb0
6500b338:	add    esp,0xc
6500b33b:	push   edi
6500b33c:	lea    eax,[esp+0x18]
6500b340:	push   eax
6500b341:	push   0x2710
6500b346:	lea    ecx,[esp+0x834]
6500b34d:	push   ecx
6500b34e:	push   0xc
6500b350:	lea    edx,[esp+0x38]
6500b354:	push   edx
6500b355:	push   0x2d1400
6500b35a:	push   esi
6500b35b:	call   0x6500e460
6500b360:	call   eax
6500b362:	test   eax,eax
6500b364:	je     0x6500b3c4
6500b366:	mov    eax,DWORD PTR [esp+0x838]
6500b36d:	push   edi
6500b36e:	lea    edi,[esp+0x444]
6500b375:	lea    ecx,[esp+0x82c]
6500b37c:	call   0x6500b120
6500b381:	mov    eax,DWORD PTR [esp+0x844]
6500b388:	add    esp,0x4
6500b38b:	push   0x1
6500b38d:	lea    edi,[esp+0x5c]
6500b391:	lea    ecx,[esp+0x82c]
6500b398:	call   0x6500b120
6500b39d:	mov    ecx,DWORD PTR [esp+0x1c]
6500b3a1:	add    esp,0x4
6500b3a4:	mov    eax,edi
6500b3a6:	push   eax
6500b3a7:	call   0x65002810
6500b3ac:	lea    ecx,[esp+0x440]
6500b3b3:	push   ecx
6500b3b4:	mov    ecx,DWORD PTR [esp+0x20]
6500b3b8:	call   0x65002810
6500b3bd:	mov    BYTE PTR [esp+0x13],0x1
6500b3c2:	xor    edi,edi
6500b3c4:	xor    eax,eax
6500b3c6:	push   edi
6500b3c7:	lea    edx,[esp+0x24]
6500b3cb:	push   edx
6500b3cc:	push   0x28
6500b3ce:	mov    DWORD PTR [esp+0x40],eax
6500b3d2:	mov    DWORD PTR [esp+0x44],eax
6500b3d6:	mov    DWORD PTR [esp+0x48],eax
6500b3da:	mov    DWORD PTR [esp+0x4c],eax
6500b3de:	mov    DWORD PTR [esp+0x50],eax
6500b3e2:	mov    DWORD PTR [esp+0x54],eax
6500b3e6:	mov    DWORD PTR [esp+0x58],eax
6500b3ea:	mov    DWORD PTR [esp+0x5c],eax
6500b3ee:	mov    DWORD PTR [esp+0x60],eax
6500b3f2:	lea    eax,[esp+0x3c]
6500b3f6:	push   eax
6500b3f7:	push   edi
6500b3f8:	push   edi
6500b3f9:	push   0x700a0
6500b3fe:	push   esi
6500b3ff:	mov    DWORD PTR [esp+0x50],edi
6500b403:	mov    DWORD PTR [ebx],edi
6500b405:	mov    DWORD PTR [ebx+0x4],edi
6500b408:	call   0x6500e460
6500b40d:	call   eax
6500b40f:	test   eax,eax
6500b411:	je     0x6500b420
6500b413:	mov    ecx,DWORD PTR [esp+0x48]
6500b417:	mov    edx,DWORD PTR [esp+0x4c]
6500b41b:	mov    DWORD PTR [ebx],ecx
6500b41d:	mov    DWORD PTR [ebx+0x4],edx
6500b420:	push   esi
6500b421:	call   DWORD PTR ds:0x65024038
6500b427:	mov    ecx,DWORD PTR [esp+0x2f3c]
6500b42e:	mov    al,BYTE PTR [esp+0x13]
6500b432:	pop    edi
6500b433:	pop    esi
6500b434:	pop    ebx
6500b435:	xor    ecx,esp
6500b437:	call   0x6501292c
6500b43c:	mov    esp,ebp
6500b43e:	pop    ebp
6500b43f:	ret    
6500b440:	push   ebp
6500b441:	lea    ebp,[esp-0x28c]
6500b448:	sub    esp,0x28c
6500b44e:	push   0xffffffff
6500b450:	push   0x65022c50
6500b455:	mov    eax,fs:0x0
6500b45b:	push   eax
6500b45c:	sub    esp,0x34
6500b45f:	mov    eax,ds:0x6502c09c
6500b464:	xor    eax,ebp
6500b466:	mov    DWORD PTR [ebp+0x288],eax
6500b46c:	push   ebx
6500b46d:	push   esi
6500b46e:	push   edi
6500b46f:	push   eax
6500b470:	lea    eax,[ebp-0xc]
6500b473:	mov    fs:0x0,eax
6500b479:	mov    eax,DWORD PTR [ebp+0x294]
6500b47f:	lea    ecx,[ebp-0x14]
6500b482:	push   ecx
6500b483:	lea    edx,[ebp+0x0]
6500b486:	push   edx
6500b487:	mov    DWORD PTR [ebp-0x20],eax
6500b48a:	mov    DWORD PTR [ebp-0x14],0x1
6500b491:	call   0x6500de60
6500b496:	call   eax
6500b498:	cmp    eax,0x6f
6500b49b:	jne    0x6500b671
6500b4a1:	mov    eax,DWORD PTR [ebp-0x14]
6500b4a4:	push   eax
6500b4a5:	call   0x650120cd
6500b4aa:	mov    ebx,eax
6500b4ac:	add    esp,0x4
6500b4af:	mov    DWORD PTR [ebp-0x24],ebx
6500b4b2:	lea    ecx,[ebp-0x14]
6500b4b5:	push   ecx
6500b4b6:	push   ebx
6500b4b7:	mov    DWORD PTR [ebp-0x4],0x0
6500b4be:	call   0x6500de60
6500b4c3:	call   eax
6500b4c5:	test   eax,eax
6500b4c7:	je     0x6500b4cf
6500b4c9:	push   ebx
6500b4ca:	jmp    0x6500b669
6500b4cf:	call   DWORD PTR ds:0x6502c06c
6500b4d5:	mov    edx,DWORD PTR ds:0x6502d560
6500b4db:	mov    DWORD PTR [ebp-0x1c],eax
6500b4de:	mov    eax,DWORD PTR [edx+0xc]
6500b4e1:	mov    ecx,0x6502d560
6500b4e6:	call   eax
6500b4e8:	lea    edi,[eax+0x10]
6500b4eb:	mov    DWORD PTR [ebp-0x10],edi
6500b4ee:	xor    esi,esi
6500b4f0:	mov    BYTE PTR [ebp-0x4],0x1
6500b4f4:	cmp    DWORD PTR [ebx+0x190],esi
6500b4fa:	je     0x6500b582
6500b500:	mov    edx,DWORD PTR ds:0x6502d560
6500b506:	mov    eax,DWORD PTR [edx+0xc]
6500b509:	mov    ecx,0x6502d560
6500b50e:	call   eax
6500b510:	add    eax,0x10
6500b513:	mov    DWORD PTR [ebp-0x18],eax
6500b516:	mov    BYTE PTR [ebp-0x4],0x2
6500b51a:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6500b522:	push   ecx
6500b523:	push   0x650282bc
6500b528:	push   0x4
6500b52a:	push   0x650282f4
6500b52f:	call   0x65006d50
6500b534:	add    esp,0xc
6500b537:	push   eax
6500b538:	lea    edx,[ebp-0x18]
6500b53b:	push   edx
6500b53c:	call   0x65001da0
6500b541:	mov    edi,DWORD PTR [ebp-0x18]
6500b544:	mov    eax,DWORD PTR [edi-0xc]
6500b547:	add    esp,0xc
6500b54a:	push   eax
6500b54b:	push   edi
6500b54c:	lea    ecx,[ebp-0x10]
6500b54f:	call   0x650029f0
6500b554:	lea    eax,[edi-0x10]
6500b557:	mov    BYTE PTR [ebp-0x4],0x1
6500b55b:	lea    ecx,[eax+0xc]
6500b55e:	or     edx,0xffffffff
6500b561:	lock xadd DWORD PTR [ecx],edx
6500b565:	dec    edx
6500b566:	test   edx,edx
6500b568:	jg     0x6500b574
6500b56a:	mov    ecx,DWORD PTR [eax]
6500b56c:	mov    edx,DWORD PTR [ecx]
6500b56e:	push   eax
6500b56f:	mov    eax,DWORD PTR [edx+0x4]
6500b572:	call   eax
6500b574:	add    esi,0x1
6500b577:	cmp    esi,DWORD PTR [ebx+0x190]
6500b57d:	jne    0x6500b500
6500b57f:	mov    edi,DWORD PTR [ebp-0x10]
6500b582:	cmp    DWORD PTR [edi-0x4],0x1
6500b586:	jle    0x6500b597
6500b588:	mov    ecx,DWORD PTR [edi-0xc]
6500b58b:	push   ecx
6500b58c:	lea    ecx,[ebp-0x10]
6500b58f:	call   0x650019b0
6500b594:	mov    edi,DWORD PTR [ebp-0x10]
6500b597:	test   edi,edi
6500b599:	jne    0x6500b59f
6500b59b:	xor    esi,esi
6500b59d:	jmp    0x6500b5ed
6500b59f:	push   edi
6500b5a0:	call   DWORD PTR ds:0x65024048
6500b5a6:	add    eax,0x1
6500b5a9:	cmp    eax,0x3fffffff
6500b5ae:	jg     0x6500b5e9
6500b5b0:	lea    edi,[eax+eax*1]
6500b5b3:	mov    eax,edi
6500b5b5:	call   0x65013030
6500b5ba:	mov    esi,esp
6500b5bc:	test   esi,esi
6500b5be:	je     0x6500b5e6
6500b5c0:	mov    edx,DWORD PTR [ebp-0x10]
6500b5c3:	mov    eax,DWORD PTR [ebp-0x1c]
6500b5c6:	push   0x0
6500b5c8:	push   0x0
6500b5ca:	push   edi
6500b5cb:	push   esi
6500b5cc:	push   0xffffffff
6500b5ce:	push   edx
6500b5cf:	push   0x0
6500b5d1:	push   eax
6500b5d2:	mov    BYTE PTR [esi],0x0
6500b5d5:	call   DWORD PTR ds:0x65024020
6500b5db:	mov    edi,DWORD PTR [ebp-0x10]
6500b5de:	neg    eax
6500b5e0:	sbb    eax,eax
6500b5e2:	and    eax,esi
6500b5e4:	jmp    0x6500b5eb
6500b5e6:	mov    edi,DWORD PTR [ebp-0x10]
6500b5e9:	xor    eax,eax
6500b5eb:	mov    esi,eax
6500b5ed:	mov    eax,esi
6500b5ef:	mov    DWORD PTR [ebp-0x28],0xf
6500b5f6:	mov    DWORD PTR [ebp-0x2c],0x0
6500b5fd:	mov    BYTE PTR [ebp-0x3c],0x0
6500b601:	lea    edx,[eax+0x1]
6500b604:	mov    cl,BYTE PTR [eax]
6500b606:	add    eax,0x1
6500b609:	test   cl,cl
6500b60b:	jne    0x6500b604
6500b60d:	sub    eax,edx
6500b60f:	push   eax
6500b610:	push   esi
6500b611:	lea    ecx,[ebp-0x40]
6500b614:	call   0x650018c0
6500b619:	mov    esi,DWORD PTR [ebp-0x20]
6500b61c:	lea    ecx,[ebp-0x40]
6500b61f:	push   ecx
6500b620:	mov    BYTE PTR [ebp-0x4],0x3
6500b624:	call   0x6500bbd0
6500b629:	cmp    DWORD PTR [ebp-0x28],0x10
6500b62d:	jb     0x6500b63b
6500b62f:	mov    edx,DWORD PTR [ebp-0x3c]
6500b632:	push   edx
6500b633:	call   0x650120d2
6500b638:	add    esp,0x4
6500b63b:	mov    ebx,DWORD PTR [ebx]
6500b63d:	lea    eax,[edi-0x10]
6500b640:	mov    BYTE PTR [ebp-0x4],0x0
6500b644:	lea    ecx,[eax+0xc]
6500b647:	or     edx,0xffffffff
6500b64a:	lock xadd DWORD PTR [ecx],edx
6500b64e:	dec    edx
6500b64f:	test   edx,edx
6500b651:	jg     0x6500b65d
6500b653:	mov    ecx,DWORD PTR [eax]
6500b655:	mov    edx,DWORD PTR [ecx]
6500b657:	push   eax
6500b658:	mov    eax,DWORD PTR [edx+0x4]
6500b65b:	call   eax
6500b65d:	test   ebx,ebx
6500b65f:	jne    0x6500b4cf
6500b665:	mov    ecx,DWORD PTR [ebp-0x24]
6500b668:	push   ecx
6500b669:	call   0x650120d2
6500b66e:	add    esp,0x4
6500b671:	lea    esp,[ebp-0x50]
6500b674:	mov    ecx,DWORD PTR [ebp-0xc]
6500b677:	mov    DWORD PTR fs:0x0,ecx
6500b67e:	pop    ecx
6500b67f:	pop    edi
6500b680:	pop    esi
6500b681:	pop    ebx
6500b682:	mov    ecx,DWORD PTR [ebp+0x288]
6500b688:	xor    ecx,ebp
6500b68a:	call   0x6501292c
6500b68f:	add    ebp,0x28c
6500b695:	mov    esp,ebp
6500b697:	pop    ebp
6500b698:	ret    
6500b699:	int3   
6500b69a:	int3   
6500b69b:	int3   
6500b69c:	int3   
6500b69d:	int3   
6500b69e:	int3   
6500b69f:	int3   
6500b6a0:	push   0xffffffff
6500b6a2:	push   0x65022c10
6500b6a7:	mov    eax,fs:0x0
6500b6ad:	push   eax
6500b6ae:	sub    esp,0x50
6500b6b1:	push   ebx
6500b6b2:	push   ebp
6500b6b3:	push   esi
6500b6b4:	push   edi
6500b6b5:	mov    eax,ds:0x6502c09c
6500b6ba:	xor    eax,esp
6500b6bc:	push   eax
6500b6bd:	lea    eax,[esp+0x64]
6500b6c1:	mov    fs:0x0,eax
6500b6c7:	mov    ebp,DWORD PTR [esp+0x74]
6500b6cb:	lea    eax,[esp+0x18]
6500b6cf:	xor    ebx,ebx
6500b6d1:	push   eax
6500b6d2:	mov    edi,0x650266dc
6500b6d7:	mov    DWORD PTR [esp+0x3c],ebx
6500b6db:	call   0x6500ac50
6500b6e0:	push   ebx
6500b6e1:	push   ebx
6500b6e2:	mov    DWORD PTR [esp+0x74],ebx
6500b6e6:	call   0x6500e930
6500b6eb:	call   eax
6500b6ed:	test   eax,eax
6500b6ef:	jge    0x6500b744
6500b6f1:	mov    esi,DWORD PTR [esp+0x18]
6500b6f5:	cmp    esi,ebx
6500b6f7:	mov    DWORD PTR [ebp+0x0],esi
6500b6fa:	je     0x6500ba26
6500b700:	lea    edi,[esi+0x8]
6500b703:	push   edi
6500b704:	call   DWORD PTR ds:0x65024018
6500b70a:	push   edi
6500b70b:	call   DWORD PTR ds:0x65024094
6500b711:	test   eax,eax
6500b713:	jne    0x6500ba26
6500b719:	mov    eax,DWORD PTR [esi]
6500b71b:	cmp    eax,ebx
6500b71d:	je     0x6500b726
6500b71f:	push   eax
6500b720:	call   DWORD PTR ds:0x650241a0
6500b726:	mov    eax,DWORD PTR [esi+0x4]
6500b729:	cmp    eax,ebx
6500b72b:	je     0x6500b736
6500b72d:	push   eax
6500b72e:	call   0x65012faa
6500b733:	add    esp,0x4
6500b736:	push   esi
6500b737:	call   0x650120d2
6500b73c:	add    esp,0x4
6500b73f:	jmp    0x6500ba26
6500b744:	push   0x65028344
6500b749:	push   0x9
6500b74b:	push   0x6502837c
6500b750:	mov    DWORD PTR [esp+0x2c],ebx
6500b754:	call   0x65006d50
6500b759:	add    esp,0xc
6500b75c:	mov    edi,eax
6500b75e:	push   edi
6500b75f:	call   DWORD PTR ds:0x6502406c
6500b765:	cmp    eax,ebx
6500b767:	jne    0x6500b770
6500b769:	push   edi
6500b76a:	call   DWORD PTR ds:0x65024058
6500b770:	lea    ecx,[esp+0x20]
6500b774:	push   ecx
6500b775:	push   0x65024a18
6500b77a:	push   0x1
6500b77c:	push   ebx
6500b77d:	push   0x65024ae8
6500b782:	push   0x65028300
6500b787:	push   0x10
6500b789:	push   0x65028330
6500b78e:	mov    esi,eax
6500b790:	call   0x65006a60
6500b795:	add    esp,0xc
6500b798:	push   eax
6500b799:	push   esi
6500b79a:	call   DWORD PTR ds:0x6502408c
6500b7a0:	call   eax
6500b7a2:	cmp    eax,ebx
6500b7a4:	jl     0x6500ba02
6500b7aa:	push   0x65028390
6500b7af:	push   0xa
6500b7b1:	push   0x650283b4
6500b7b6:	mov    DWORD PTR [esp+0x28],ebx
6500b7ba:	call   0x65006d50
6500b7bf:	add    esp,0xc
6500b7c2:	lea    edx,[esp+0x30]
6500b7c6:	push   edx
6500b7c7:	mov    edi,eax
6500b7c9:	call   0x6500ac50
6500b7ce:	mov    BYTE PTR [esp+0x6c],0x1
6500b7d3:	mov    eax,DWORD PTR [eax]
6500b7d5:	cmp    eax,ebx
6500b7d7:	je     0x6500b7dd
6500b7d9:	mov    eax,DWORD PTR [eax]
6500b7db:	jmp    0x6500b7df
6500b7dd:	xor    eax,eax
6500b7df:	mov    ecx,DWORD PTR [esp+0x20]
6500b7e3:	mov    edx,DWORD PTR [ecx]
6500b7e5:	lea    esi,[esp+0x1c]
6500b7e9:	push   esi
6500b7ea:	push   ebx
6500b7eb:	push   ebx
6500b7ec:	push   ebx
6500b7ed:	push   ebx
6500b7ee:	push   ebx
6500b7ef:	push   ebx
6500b7f0:	push   eax
6500b7f1:	mov    eax,DWORD PTR [edx+0xc]
6500b7f4:	push   ecx
6500b7f5:	call   eax
6500b7f7:	lea    edi,[esp+0x30]
6500b7fb:	mov    esi,eax
6500b7fd:	mov    BYTE PTR [esp+0x6c],bl
6500b801:	call   0x6500acf0
6500b806:	cmp    esi,ebx
6500b808:	jge    0x6500b813
6500b80a:	mov    eax,DWORD PTR [esp+0x20]
6500b80e:	jmp    0x6500b9fa
6500b813:	mov    eax,DWORD PTR [esp+0x1c]
6500b817:	push   ebx
6500b818:	push   ebx
6500b819:	push   0x3
6500b81b:	push   0x3
6500b81d:	push   ebx
6500b81e:	push   ebx
6500b81f:	push   0xa
6500b821:	push   eax
6500b822:	call   0x6500e8b0
6500b827:	call   eax
6500b829:	cmp    eax,ebx
6500b82b:	jge    0x6500b842
6500b82d:	mov    eax,DWORD PTR [esp+0x1c]
6500b831:	mov    ecx,DWORD PTR [eax]
6500b833:	mov    edx,DWORD PTR [ecx+0x8]
6500b836:	push   eax
6500b837:	call   edx
6500b839:	mov    eax,DWORD PTR [esp+0x20]
6500b83d:	jmp    0x6500b9fa
6500b842:	push   0x650283cc
6500b847:	push   0xe
6500b849:	push   0x650283f0
6500b84e:	mov    DWORD PTR [esp+0x30],ebx
6500b852:	call   0x65006a60
6500b857:	add    esp,0xc
6500b85a:	push   eax
6500b85b:	lea    ebx,[esp+0x3c]
6500b85f:	call   0x6500abc0
6500b864:	mov    ecx,DWORD PTR [esp+0x78]
6500b868:	push   ecx
6500b869:	lea    edx,[esp+0x38]
6500b86d:	push   edx
6500b86e:	push   eax
6500b86f:	mov    BYTE PTR [esp+0x78],0x2
6500b874:	call   0x6500af10
6500b879:	mov    esi,eax
6500b87b:	push   0x65028400
6500b880:	push   0x3
6500b882:	push   0x65028438
6500b887:	mov    BYTE PTR [esp+0x78],0x3
6500b88c:	call   0x65006a60
6500b891:	add    esp,0xc
6500b894:	push   eax
6500b895:	lea    ebx,[esp+0x34]
6500b899:	call   0x6500abc0
6500b89e:	mov    BYTE PTR [esp+0x6c],0x4
6500b8a3:	mov    ecx,DWORD PTR [esi]
6500b8a5:	xor    ebx,ebx
6500b8a7:	cmp    ecx,ebx
6500b8a9:	je     0x6500b8af
6500b8ab:	mov    ecx,DWORD PTR [ecx]
6500b8ad:	jmp    0x6500b8b1
6500b8af:	xor    ecx,ecx
6500b8b1:	mov    eax,DWORD PTR [eax]
6500b8b3:	cmp    eax,ebx
6500b8b5:	je     0x6500b8bb
6500b8b7:	mov    edx,DWORD PTR [eax]
6500b8b9:	jmp    0x6500b8bd
6500b8bb:	xor    edx,edx
6500b8bd:	mov    eax,DWORD PTR [esp+0x1c]
6500b8c1:	mov    esi,DWORD PTR [eax]
6500b8c3:	lea    edi,[esp+0x24]
6500b8c7:	push   edi
6500b8c8:	push   ebx
6500b8c9:	push   0x30
6500b8cb:	push   ecx
6500b8cc:	push   edx
6500b8cd:	push   eax
6500b8ce:	mov    eax,DWORD PTR [esi+0x50]
6500b8d1:	call   eax
6500b8d3:	lea    edi,[esp+0x30]
6500b8d7:	mov    esi,eax
6500b8d9:	call   0x6500acf0
6500b8de:	lea    edi,[esp+0x34]
6500b8e2:	call   0x6500acf0
6500b8e7:	lea    edi,[esp+0x38]
6500b8eb:	mov    BYTE PTR [esp+0x6c],bl
6500b8ef:	call   0x6500acf0
6500b8f4:	cmp    esi,ebx
6500b8f6:	jge    0x6500b90d
6500b8f8:	mov    eax,DWORD PTR [esp+0x1c]
6500b8fc:	mov    ecx,DWORD PTR [eax]
6500b8fe:	mov    edx,DWORD PTR [ecx+0x8]
6500b901:	push   eax
6500b902:	call   edx
6500b904:	mov    eax,DWORD PTR [esp+0x20]
6500b908:	jmp    0x6500b9fa
6500b90d:	mov    eax,DWORD PTR [esp+0x24]
6500b911:	cmp    eax,ebx
6500b913:	mov    DWORD PTR [esp+0x2c],ebx
6500b917:	je     0x6500b9d2
6500b91d:	mov    edi,DWORD PTR ds:0x6502418c
6500b923:	mov    ecx,DWORD PTR [eax]
6500b925:	lea    edx,[esp+0x2c]
6500b929:	push   edx
6500b92a:	lea    edx,[esp+0x2c]
6500b92e:	push   edx
6500b92f:	push   0x1
6500b931:	push   0xffffffff
6500b933:	push   eax
6500b934:	mov    eax,DWORD PTR [ecx+0x10]
6500b937:	call   eax
6500b939:	cmp    DWORD PTR [esp+0x2c],ebx
6500b93d:	je     0x6500b9d2
6500b943:	mov    esi,DWORD PTR [esp+0x28]
6500b947:	mov    eax,DWORD PTR [esp+0x7c]
6500b94b:	mov    ebp,DWORD PTR [esi]
6500b94d:	push   ebx
6500b94e:	push   ebx
6500b94f:	lea    ecx,[esp+0x44]
6500b953:	push   ecx
6500b954:	push   ebx
6500b955:	call   0x6500af90
6500b95a:	mov    edx,DWORD PTR [ebp+0x10]
6500b95d:	push   eax
6500b95e:	push   esi
6500b95f:	call   edx
6500b961:	cmp    eax,ebx
6500b963:	jl     0x6500b96d
6500b965:	cmp    WORD PTR [esp+0x3c],0x8
6500b96b:	je     0x6500b98e
6500b96d:	lea    eax,[esp+0x3c]
6500b971:	push   eax
6500b972:	call   edi
6500b974:	mov    eax,DWORD PTR [esp+0x28]
6500b978:	mov    ecx,DWORD PTR [eax]
6500b97a:	mov    edx,DWORD PTR [ecx+0x8]
6500b97d:	push   eax
6500b97e:	call   edx
6500b980:	mov    eax,DWORD PTR [esp+0x24]
6500b984:	cmp    eax,ebx
6500b986:	mov    ebp,DWORD PTR [esp+0x74]
6500b98a:	jne    0x6500b923
6500b98c:	jmp    0x6500b9d2
6500b98e:	lea    eax,[esp+0x4c]
6500b992:	push   eax
6500b993:	call   DWORD PTR ds:0x65024194
6500b999:	lea    ecx,[esp+0x3c]
6500b99d:	push   ecx
6500b99e:	lea    edx,[esp+0x50]
6500b9a2:	push   edx
6500b9a3:	call   DWORD PTR ds:0x650241a4
6500b9a9:	cmp    eax,ebx
6500b9ab:	jge    0x6500b9b3
6500b9ad:	push   eax
6500b9ae:	call   0x6501ea00
6500b9b3:	lea    esi,[esp+0x4c]
6500b9b7:	lea    ecx,[esp+0x18]
6500b9bb:	mov    BYTE PTR [esp+0x6c],0x5
6500b9c0:	call   0x6500b070
6500b9c5:	mov    eax,esi
6500b9c7:	push   eax
6500b9c8:	mov    BYTE PTR [esp+0x70],bl
6500b9cc:	call   edi
6500b9ce:	mov    ebp,DWORD PTR [esp+0x74]
6500b9d2:	mov    eax,DWORD PTR [esp+0x1c]
6500b9d6:	mov    ecx,DWORD PTR [eax]
6500b9d8:	mov    edx,DWORD PTR [ecx+0x8]
6500b9db:	push   eax
6500b9dc:	call   edx
6500b9de:	mov    eax,DWORD PTR [esp+0x20]
6500b9e2:	mov    ecx,DWORD PTR [eax]
6500b9e4:	mov    edx,DWORD PTR [ecx+0x8]
6500b9e7:	push   eax
6500b9e8:	call   edx
6500b9ea:	mov    eax,DWORD PTR [esp+0x24]
6500b9ee:	mov    ecx,DWORD PTR [eax]
6500b9f0:	mov    edx,DWORD PTR [ecx+0x8]
6500b9f3:	push   eax
6500b9f4:	call   edx
6500b9f6:	mov    eax,DWORD PTR [esp+0x28]
6500b9fa:	mov    ecx,DWORD PTR [eax]
6500b9fc:	mov    edx,DWORD PTR [ecx+0x8]
6500b9ff:	push   eax
6500ba00:	call   edx
6500ba02:	call   DWORD PTR ds:0x650241cc
6500ba08:	mov    eax,DWORD PTR [esp+0x18]
6500ba0c:	cmp    eax,ebx
6500ba0e:	mov    DWORD PTR [ebp+0x0],eax
6500ba11:	je     0x6500ba1d
6500ba13:	add    eax,0x8
6500ba16:	push   eax
6500ba17:	call   DWORD PTR ds:0x65024018
6500ba1d:	lea    edi,[esp+0x18]
6500ba21:	call   0x6500acf0
6500ba26:	mov    eax,ebp
6500ba28:	mov    ecx,DWORD PTR [esp+0x64]
6500ba2c:	mov    DWORD PTR fs:0x0,ecx
6500ba33:	pop    ecx
6500ba34:	pop    edi
6500ba35:	pop    esi
6500ba36:	pop    ebp
6500ba37:	pop    ebx
6500ba38:	add    esp,0x5c
6500ba3b:	ret    
6500ba3c:	int3   
6500ba3d:	int3   
6500ba3e:	int3   
6500ba3f:	int3   
6500ba40:	push   ebp
6500ba41:	mov    ebp,esp
6500ba43:	and    esp,0xfffffff8
6500ba46:	push   0xffffffff
6500ba48:	push   0x65022f68
6500ba4d:	mov    eax,fs:0x0
6500ba53:	push   eax
6500ba54:	sub    esp,0x14
6500ba57:	push   esi
6500ba58:	push   edi
6500ba59:	mov    eax,ds:0x6502c09c
6500ba5e:	xor    eax,esp
6500ba60:	push   eax
6500ba61:	lea    eax,[esp+0x20]
6500ba65:	mov    fs:0x0,eax
6500ba6b:	mov    DWORD PTR [esp+0x18],0x0
6500ba73:	call   DWORD PTR ds:0x6502c06c
6500ba79:	push   0x6502843c
6500ba7e:	push   0xc
6500ba80:	push   0x65028470
6500ba85:	call   0x65006d50
6500ba8a:	add    esp,0xc
6500ba8d:	lea    ecx,[esp+0x14]
6500ba91:	push   ecx
6500ba92:	mov    edi,eax
6500ba94:	call   0x6500ac50
6500ba99:	push   0x6502848c
6500ba9e:	push   0x15
6500baa0:	push   0x650284b0
6500baa5:	mov    DWORD PTR [esp+0x34],0x0
6500baad:	call   0x65006d50
6500bab2:	add    esp,0xc
6500bab5:	lea    edx,[esp+0x10]
6500bab9:	push   edx
6500baba:	mov    edi,eax
6500babc:	call   0x6500ac50
6500bac1:	lea    eax,[esp+0x14]
6500bac5:	push   eax
6500bac6:	lea    ecx,[esp+0x14]
6500baca:	push   ecx
6500bacb:	lea    edx,[esp+0x20]
6500bacf:	push   edx
6500bad0:	mov    BYTE PTR [esp+0x34],0x1
6500bad5:	call   0x6500b6a0
6500bada:	add    esp,0xc
6500badd:	mov    esi,DWORD PTR [esp+0x10]
6500bae1:	test   esi,esi
6500bae3:	je     0x6500bb19
6500bae5:	lea    eax,[esi+0x8]
6500bae8:	push   eax
6500bae9:	call   DWORD PTR ds:0x65024094
6500baef:	test   eax,eax
6500baf1:	jne    0x6500bb19
6500baf3:	mov    eax,DWORD PTR [esi]
6500baf5:	test   eax,eax
6500baf7:	je     0x6500bb00
6500baf9:	push   eax
6500bafa:	call   DWORD PTR ds:0x650241a0
6500bb00:	mov    eax,DWORD PTR [esi+0x4]
6500bb03:	test   eax,eax
6500bb05:	je     0x6500bb10
6500bb07:	push   eax
6500bb08:	call   0x65012faa
6500bb0d:	add    esp,0x4
6500bb10:	push   esi
6500bb11:	call   0x650120d2
6500bb16:	add    esp,0x4
6500bb19:	mov    BYTE PTR [esp+0x28],0x4
6500bb1e:	mov    esi,DWORD PTR [esp+0x14]
6500bb22:	test   esi,esi
6500bb24:	je     0x6500bb5a
6500bb26:	lea    ecx,[esi+0x8]
6500bb29:	push   ecx
6500bb2a:	call   DWORD PTR ds:0x65024094
6500bb30:	test   eax,eax
6500bb32:	jne    0x6500bb5a
6500bb34:	mov    eax,DWORD PTR [esi]
6500bb36:	test   eax,eax
6500bb38:	je     0x6500bb41
6500bb3a:	push   eax
6500bb3b:	call   DWORD PTR ds:0x650241a0
6500bb41:	mov    eax,DWORD PTR [esi+0x4]
6500bb44:	test   eax,eax
6500bb46:	je     0x6500bb51
6500bb48:	push   eax
6500bb49:	call   0x65012faa
6500bb4e:	add    esp,0x4
6500bb51:	push   esi
6500bb52:	call   0x650120d2
6500bb57:	add    esp,0x4
6500bb5a:	mov    esi,DWORD PTR [esp+0x18]
6500bb5e:	test   esi,esi
6500bb60:	je     0x6500bb66
6500bb62:	mov    eax,DWORD PTR [esi]
6500bb64:	jmp    0x6500bb68
6500bb66:	xor    eax,eax
6500bb68:	mov    edi,DWORD PTR [ebp+0x8]
6500bb6b:	push   eax
6500bb6c:	mov    ecx,edi
6500bb6e:	call   0x650025a0
6500bb73:	test   esi,esi
6500bb75:	je     0x6500bbab
6500bb77:	lea    edx,[esi+0x8]
6500bb7a:	push   edx
6500bb7b:	call   DWORD PTR ds:0x65024094
6500bb81:	test   eax,eax
6500bb83:	jne    0x6500bbab
6500bb85:	mov    eax,DWORD PTR [esi]
6500bb87:	test   eax,eax
6500bb89:	je     0x6500bb92
6500bb8b:	push   eax
6500bb8c:	call   DWORD PTR ds:0x650241a0
6500bb92:	mov    eax,DWORD PTR [esi+0x4]
6500bb95:	test   eax,eax
6500bb97:	je     0x6500bba2
6500bb99:	push   eax
6500bb9a:	call   0x65012faa
6500bb9f:	add    esp,0x4
6500bba2:	push   esi
6500bba3:	call   0x650120d2
6500bba8:	add    esp,0x4
6500bbab:	mov    eax,edi
6500bbad:	mov    ecx,DWORD PTR [esp+0x20]
6500bbb1:	mov    DWORD PTR fs:0x0,ecx
6500bbb8:	pop    ecx
6500bbb9:	pop    edi
6500bbba:	pop    esi
6500bbbb:	mov    esp,ebp
6500bbbd:	pop    ebp
6500bbbe:	ret    
6500bbbf:	int3   
6500bbc0:	mov    ecx,DWORD PTR [eax]
6500bbc2:	push   ecx
6500bbc3:	call   0x650120d2
6500bbc8:	pop    ecx
6500bbc9:	ret    
6500bbca:	int3   
6500bbcb:	int3   
6500bbcc:	int3   
6500bbcd:	int3   
6500bbce:	int3   
6500bbcf:	int3   
6500bbd0:	push   ebp
6500bbd1:	mov    ebp,esp
6500bbd3:	and    esp,0xfffffff8
6500bbd6:	sub    esp,0x8
6500bbd9:	push   ebx
6500bbda:	mov    ebx,DWORD PTR [esi+0x4]
6500bbdd:	test   ebx,ebx
6500bbdf:	push   edi
6500bbe0:	jne    0x6500bbe6
6500bbe2:	xor    edi,edi
6500bbe4:	jmp    0x6500bbfe
6500bbe6:	mov    ecx,DWORD PTR [esi+0x8]
6500bbe9:	sub    ecx,ebx
6500bbeb:	mov    eax,0x92492493
6500bbf0:	imul   ecx
6500bbf2:	add    edx,ecx
6500bbf4:	sar    edx,0x4
6500bbf7:	mov    edi,edx
6500bbf9:	shr    edi,0x1f
6500bbfc:	add    edi,edx
6500bbfe:	test   ebx,ebx
6500bc00:	je     0x6500bc51
6500bc02:	mov    ecx,DWORD PTR [esi+0xc]
6500bc05:	sub    ecx,ebx
6500bc07:	mov    eax,0x92492493
6500bc0c:	imul   ecx
6500bc0e:	add    edx,ecx
6500bc10:	sar    edx,0x4
6500bc13:	mov    eax,edx
6500bc15:	shr    eax,0x1f
6500bc18:	add    eax,edx
6500bc1a:	cmp    edi,eax
6500bc1c:	jae    0x6500bc51
6500bc1e:	mov    edx,DWORD PTR [ebp+0x8]
6500bc21:	mov    edi,DWORD PTR [esi+0x8]
6500bc24:	mov    BYTE PTR [esp+0x8],0x0
6500bc29:	mov    eax,DWORD PTR [esp+0x8]
6500bc2d:	mov    ecx,DWORD PTR [esp+0x8]
6500bc31:	push   eax
6500bc32:	push   ecx
6500bc33:	push   esi
6500bc34:	push   edx
6500bc35:	push   edi
6500bc36:	mov    ecx,0x1
6500bc3b:	call   0x6500c270
6500bc40:	add    esp,0x14
6500bc43:	add    edi,0x1c
6500bc46:	mov    DWORD PTR [esi+0x8],edi
6500bc49:	pop    edi
6500bc4a:	pop    ebx
6500bc4b:	mov    esp,ebp
6500bc4d:	pop    ebp
6500bc4e:	ret    0x4
6500bc51:	mov    edi,DWORD PTR [esi+0x8]
6500bc54:	cmp    ebx,edi
6500bc56:	jbe    0x6500bc5d
6500bc58:	call   0x65012443
6500bc5d:	mov    eax,DWORD PTR [ebp+0x8]
6500bc60:	push   edi
6500bc61:	push   esi
6500bc62:	push   eax
6500bc63:	lea    ecx,[esp+0x14]
6500bc67:	push   ecx
6500bc68:	mov    eax,esi
6500bc6a:	call   0x6500bcb0
6500bc6f:	pop    edi
6500bc70:	pop    ebx
6500bc71:	mov    esp,ebp
6500bc73:	pop    ebp
6500bc74:	ret    0x4
6500bc77:	int3   
6500bc78:	int3   
6500bc79:	int3   
6500bc7a:	int3   
6500bc7b:	int3   
6500bc7c:	int3   
6500bc7d:	int3   
6500bc7e:	int3   
6500bc7f:	int3   
6500bc80:	mov    eax,DWORD PTR [ecx+0x4]
6500bc83:	test   eax,eax
6500bc85:	jne    0x6500bc88
6500bc87:	ret    
6500bc88:	mov    ecx,DWORD PTR [ecx+0x8]
6500bc8b:	sub    ecx,eax
6500bc8d:	mov    eax,0x92492493
6500bc92:	imul   ecx
6500bc94:	add    edx,ecx
6500bc96:	sar    edx,0x4
6500bc99:	mov    eax,edx
6500bc9b:	shr    eax,0x1f
6500bc9e:	add    eax,edx
6500bca0:	ret    
6500bca1:	int3   
6500bca2:	int3   
6500bca3:	int3   
6500bca4:	int3   
6500bca5:	int3   
6500bca6:	int3   
6500bca7:	int3   
6500bca8:	int3   
6500bca9:	int3   
6500bcaa:	int3   
6500bcab:	int3   
6500bcac:	int3   
6500bcad:	int3   
6500bcae:	int3   
6500bcaf:	int3   
6500bcb0:	push   ecx
6500bcb1:	push   ebx
6500bcb2:	push   ebp
6500bcb3:	mov    ebp,DWORD PTR [esp+0x1c]
6500bcb7:	push   esi
6500bcb8:	mov    esi,eax
6500bcba:	push   edi
6500bcbb:	mov    edi,DWORD PTR [esi+0x4]
6500bcbe:	test   edi,edi
6500bcc0:	je     0x6500bcde
6500bcc2:	mov    ebx,DWORD PTR [esi+0x8]
6500bcc5:	mov    ecx,ebx
6500bcc7:	sub    ecx,edi
6500bcc9:	mov    eax,0x92492493
6500bcce:	imul   ecx
6500bcd0:	add    edx,ecx
6500bcd2:	sar    edx,0x4
6500bcd5:	mov    eax,edx
6500bcd7:	shr    eax,0x1f
6500bcda:	add    eax,edx
6500bcdc:	jne    0x6500bce6
6500bcde:	mov    ebx,DWORD PTR [esp+0x20]
6500bce2:	xor    edi,edi
6500bce4:	jmp    0x6500bd17
6500bce6:	cmp    edi,ebx
6500bce8:	jbe    0x6500bcef
6500bcea:	call   0x65012443
6500bcef:	mov    ebx,DWORD PTR [esp+0x20]
6500bcf3:	test   ebx,ebx
6500bcf5:	je     0x6500bcfb
6500bcf7:	cmp    ebx,esi
6500bcf9:	je     0x6500bd00
6500bcfb:	call   0x65012443
6500bd00:	mov    ecx,ebp
6500bd02:	sub    ecx,edi
6500bd04:	mov    eax,0x92492493
6500bd09:	imul   ecx
6500bd0b:	add    edx,ecx
6500bd0d:	sar    edx,0x4
6500bd10:	mov    edi,edx
6500bd12:	shr    edi,0x1f
6500bd15:	add    edi,edx
6500bd17:	mov    ecx,DWORD PTR [esp+0x1c]
6500bd1b:	push   ebp
6500bd1c:	push   ebx
6500bd1d:	push   ecx
6500bd1e:	mov    ecx,esi
6500bd20:	call   0x6500bda0
6500bd25:	mov    ebx,DWORD PTR [esi+0x4]
6500bd28:	cmp    ebx,DWORD PTR [esi+0x8]
6500bd2b:	jbe    0x6500bd32
6500bd2d:	call   0x65012443
6500bd32:	lea    edx,[edi*8+0x0]
6500bd39:	sub    edx,edi
6500bd3b:	lea    edi,[ebx+edx*4]
6500bd3e:	cmp    edi,DWORD PTR [esi+0x8]
6500bd41:	mov    DWORD PTR [esp+0x24],ebx
6500bd45:	ja     0x6500bd4c
6500bd47:	cmp    edi,DWORD PTR [esi+0x4]
6500bd4a:	jae    0x6500bd51
6500bd4c:	call   0x65012443
6500bd51:	mov    eax,DWORD PTR [esp+0x18]
6500bd55:	mov    DWORD PTR [eax+0x4],edi
6500bd58:	pop    edi
6500bd59:	mov    DWORD PTR [eax],esi
6500bd5b:	pop    esi
6500bd5c:	pop    ebp
6500bd5d:	pop    ebx
6500bd5e:	pop    ecx
6500bd5f:	ret    0x10
6500bd62:	int3   
6500bd63:	int3   
6500bd64:	int3   
6500bd65:	int3   
6500bd66:	int3   
6500bd67:	int3   
6500bd68:	int3   
6500bd69:	int3   
6500bd6a:	int3   
6500bd6b:	int3   
6500bd6c:	int3   
6500bd6d:	int3   
6500bd6e:	int3   
6500bd6f:	int3   
6500bd70:	push   ecx
6500bd71:	mov    ecx,DWORD PTR [esp+0x8]
6500bd75:	mov    BYTE PTR [esp],0x0
6500bd79:	mov    eax,DWORD PTR [esp]
6500bd7c:	push   eax
6500bd7d:	mov    eax,DWORD PTR [esp+0xc]
6500bd81:	push   ecx
6500bd82:	push   edx
6500bd83:	push   eax
6500bd84:	push   edi
6500bd85:	mov    ecx,esi
6500bd87:	call   0x6500c270
6500bd8c:	lea    ecx,[esi*8+0x0]
6500bd93:	sub    ecx,esi
6500bd95:	lea    eax,[edi+ecx*4]
6500bd98:	add    esp,0x18
6500bd9b:	ret    0x4
6500bd9e:	int3   
6500bd9f:	int3   
6500bda0:	push   ebp
6500bda1:	mov    ebp,esp
6500bda3:	push   0xffffffff
6500bda5:	push   0x650228e8
6500bdaa:	mov    eax,fs:0x0
6500bdb0:	push   eax
6500bdb1:	sub    esp,0x34
6500bdb4:	mov    eax,ds:0x6502c09c
6500bdb9:	xor    eax,ebp
6500bdbb:	mov    DWORD PTR [ebp-0x14],eax
6500bdbe:	push   ebx
6500bdbf:	push   esi
6500bdc0:	push   edi
6500bdc1:	push   eax
6500bdc2:	lea    eax,[ebp-0xc]
6500bdc5:	mov    fs:0x0,eax
6500bdcb:	mov    DWORD PTR [ebp-0x10],esp
6500bdce:	mov    eax,DWORD PTR [ebp+0x8]
6500bdd1:	push   0xffffffff
6500bdd3:	xor    edi,edi
6500bdd5:	mov    ebx,ecx
6500bdd7:	push   edi
6500bdd8:	push   eax
6500bdd9:	lea    ecx,[ebp-0x30]
6500bddc:	mov    DWORD PTR [ebp-0x3c],ebx
6500bddf:	mov    DWORD PTR [ebp-0x18],0xf
6500bde6:	mov    DWORD PTR [ebp-0x1c],edi
6500bde9:	mov    BYTE PTR [ebp-0x2c],0x0
6500bded:	call   0x650017e0
6500bdf2:	mov    DWORD PTR [ebp-0x4],edi
6500bdf5:	mov    ecx,DWORD PTR [ebx+0x4]
6500bdf8:	cmp    ecx,edi
6500bdfa:	je     0x6500be14
6500bdfc:	mov    esi,DWORD PTR [ebx+0xc]
6500bdff:	sub    esi,ecx
6500be01:	mov    eax,0x92492493
6500be06:	imul   esi
6500be08:	add    edx,esi
6500be0a:	sar    edx,0x4
6500be0d:	mov    edi,edx
6500be0f:	shr    edi,0x1f
6500be12:	add    edi,edx
6500be14:	test   ecx,ecx
6500be16:	jne    0x6500be1c
6500be18:	xor    eax,eax
6500be1a:	jmp    0x6500be34
6500be1c:	mov    esi,DWORD PTR [ebx+0x8]
6500be1f:	sub    esi,ecx
6500be21:	mov    eax,0x92492493
6500be26:	imul   esi
6500be28:	add    edx,esi
6500be2a:	sar    edx,0x4
6500be2d:	mov    eax,edx
6500be2f:	shr    eax,0x1f
6500be32:	add    eax,edx
6500be34:	mov    edx,0x9249249
6500be39:	sub    edx,eax
6500be3b:	cmp    edx,0x1
6500be3e:	jae    0x6500be45
6500be40:	call   0x6500c0e0
6500be45:	test   ecx,ecx
6500be47:	jne    0x6500be4d
6500be49:	xor    eax,eax
6500be4b:	jmp    0x6500be65
6500be4d:	mov    esi,DWORD PTR [ebx+0x8]
6500be50:	sub    esi,ecx
6500be52:	mov    eax,0x92492493
6500be57:	imul   esi
6500be59:	add    edx,esi
6500be5b:	sar    edx,0x4
6500be5e:	mov    eax,edx
6500be60:	shr    eax,0x1f
6500be63:	add    eax,edx
6500be65:	add    eax,0x1
6500be68:	cmp    edi,eax
6500be6a:	jae    0x6500bfc6
6500be70:	mov    eax,edi
6500be72:	shr    eax,1
6500be74:	mov    edx,0x9249249
6500be79:	sub    edx,eax
6500be7b:	cmp    edx,edi
6500be7d:	jae    0x6500be83
6500be7f:	xor    edi,edi
6500be81:	jmp    0x6500be85
6500be83:	add    edi,eax
6500be85:	test   ecx,ecx
6500be87:	jne    0x6500be8d
6500be89:	xor    eax,eax
6500be8b:	jmp    0x6500bea5
6500be8d:	mov    esi,DWORD PTR [ebx+0x8]
6500be90:	sub    esi,ecx
6500be92:	mov    eax,0x92492493
6500be97:	imul   esi
6500be99:	add    edx,esi
6500be9b:	sar    edx,0x4
6500be9e:	mov    eax,edx
6500bea0:	shr    eax,0x1f
6500bea3:	add    eax,edx
6500bea5:	add    eax,0x1
6500bea8:	cmp    edi,eax
6500beaa:	jae    0x6500beb8
6500beac:	mov    ecx,ebx
6500beae:	call   0x6500bc80
6500beb3:	mov    edi,eax
6500beb5:	add    edi,0x1
6500beb8:	push   0x0
6500beba:	push   edi
6500bebb:	call   0x6500c200
6500bec0:	mov    BYTE PTR [ebp-0x4],0x1
6500bec4:	mov    ecx,DWORD PTR [ebx+0x4]
6500bec7:	mov    BYTE PTR [ebp-0x34],0x0
6500becb:	mov    edx,DWORD PTR [ebp-0x34]
6500bece:	push   edx
6500becf:	mov    edx,DWORD PTR [ebp-0x34]
6500bed2:	push   edx
6500bed3:	mov    edx,DWORD PTR [ebp+0x10]
6500bed6:	push   ebx
6500bed7:	push   edx
6500bed8:	mov    edx,eax
6500beda:	mov    DWORD PTR [ebp-0x40],eax
6500bedd:	mov    DWORD PTR [ebp-0x38],eax
6500bee0:	call   0x6500c390
6500bee5:	add    esp,0x18
6500bee8:	mov    esi,eax
6500beea:	mov    BYTE PTR [ebp-0x34],0x0
6500beee:	mov    eax,DWORD PTR [ebp-0x34]
6500bef1:	mov    ecx,DWORD PTR [ebp-0x34]
6500bef4:	push   eax
6500bef5:	push   ecx
6500bef6:	push   ebx
6500bef7:	lea    edx,[ebp-0x30]
6500befa:	push   edx
6500befb:	push   esi
6500befc:	mov    ecx,0x1
6500bf01:	mov    DWORD PTR [ebp-0x38],esi
6500bf04:	call   0x6500c270
6500bf09:	mov    eax,DWORD PTR [ebx+0x8]
6500bf0c:	add    esp,0x14
6500bf0f:	mov    BYTE PTR [ebp-0x34],0x0
6500bf13:	mov    ecx,DWORD PTR [ebp-0x34]
6500bf16:	mov    edx,DWORD PTR [ebp-0x34]
6500bf19:	push   ecx
6500bf1a:	mov    ecx,DWORD PTR [ebp+0x10]
6500bf1d:	push   edx
6500bf1e:	add    esi,0x1c
6500bf21:	push   ebx
6500bf22:	push   eax
6500bf23:	mov    edx,esi
6500bf25:	mov    DWORD PTR [ebp-0x38],esi
6500bf28:	call   0x6500c390
6500bf2d:	mov    esi,DWORD PTR [ebx+0x4]
6500bf30:	add    esp,0x10
6500bf33:	test   esi,esi
6500bf35:	jne    0x6500bf3b
6500bf37:	xor    eax,eax
6500bf39:	jmp    0x6500bf53
6500bf3b:	mov    ecx,DWORD PTR [ebx+0x8]
6500bf3e:	sub    ecx,esi
6500bf40:	mov    eax,0x92492493
6500bf45:	imul   ecx
6500bf47:	add    edx,ecx
6500bf49:	sar    edx,0x4
6500bf4c:	mov    eax,edx
6500bf4e:	shr    eax,0x1f
6500bf51:	add    eax,edx
6500bf53:	add    eax,0x1
6500bf56:	test   esi,esi
6500bf58:	mov    DWORD PTR [ebp-0x34],eax
6500bf5b:	je     0x6500bf7b
6500bf5d:	mov    eax,DWORD PTR [ebp-0x34]
6500bf60:	mov    ecx,DWORD PTR [ebx+0x8]
6500bf63:	push   eax
6500bf64:	push   ebx
6500bf65:	push   ecx
6500bf66:	push   esi
6500bf67:	call   0x6500c320
6500bf6c:	mov    edx,DWORD PTR [ebx+0x4]
6500bf6f:	push   edx
6500bf70:	call   0x650120d2
6500bf75:	mov    eax,DWORD PTR [ebp-0x34]
6500bf78:	add    esp,0x14
6500bf7b:	mov    ecx,DWORD PTR [ebp-0x40]
6500bf7e:	lea    edx,[edi*8+0x0]
6500bf85:	sub    edx,edi
6500bf87:	lea    edx,[ecx+edx*4]
6500bf8a:	mov    DWORD PTR [ebx+0xc],edx
6500bf8d:	lea    edx,[eax*8+0x0]
6500bf94:	sub    edx,eax
6500bf96:	lea    eax,[ecx+edx*4]
6500bf99:	mov    DWORD PTR [ebx+0x8],eax
6500bf9c:	mov    DWORD PTR [ebx+0x4],ecx
6500bf9f:	jmp    0x6500c082
6500bfa4:	mov    ecx,DWORD PTR [ebp-0x38]
6500bfa7:	mov    esi,DWORD PTR [ebp-0x40]
6500bfaa:	push   ecx
6500bfab:	mov    ecx,DWORD PTR [ebp-0x3c]
6500bfae:	push   esi
6500bfaf:	call   0x6500c0c0
6500bfb4:	push   esi
6500bfb5:	call   0x650120d2
6500bfba:	add    esp,0x4
6500bfbd:	push   0x0
6500bfbf:	push   0x0
6500bfc1:	call   0x650124d6
6500bfc6:	mov    edi,DWORD PTR [ebx+0x8]
6500bfc9:	mov    esi,DWORD PTR [ebp+0x10]
6500bfcc:	mov    ecx,edi
6500bfce:	sub    ecx,esi
6500bfd0:	mov    eax,0x92492493
6500bfd5:	imul   ecx
6500bfd7:	add    edx,ecx
6500bfd9:	sar    edx,0x4
6500bfdc:	mov    eax,edx
6500bfde:	shr    eax,0x1f
6500bfe1:	add    eax,edx
6500bfe3:	cmp    eax,0x1
6500bfe6:	mov    edx,ebx
6500bfe8:	jae    0x6500c05a
6500bfea:	lea    ecx,[esi+0x1c]
6500bfed:	push   ecx
6500bfee:	push   edi
6500bfef:	push   esi
6500bff0:	call   0x6500c160
6500bff5:	mov    BYTE PTR [ebp-0x4],0x3
6500bff9:	mov    edi,DWORD PTR [ebx+0x8]
6500bffc:	lea    edx,[ebp-0x30]
6500bfff:	push   edx
6500c000:	mov    ecx,edi
6500c002:	sub    ecx,esi
6500c004:	mov    eax,0x92492493
6500c009:	imul   ecx
6500c00b:	add    edx,ecx
6500c00d:	sar    edx,0x4
6500c010:	mov    eax,edx
6500c012:	shr    eax,0x1f
6500c015:	add    eax,edx
6500c017:	mov    esi,0x1
6500c01c:	sub    esi,eax
6500c01e:	mov    edx,ebx
6500c020:	call   0x6500bd70
6500c025:	mov    eax,DWORD PTR [ebp+0x10]
6500c028:	mov    DWORD PTR [ebp-0x4],0x0
6500c02f:	add    DWORD PTR [ebx+0x8],0x1c
6500c033:	mov    ebx,DWORD PTR [ebx+0x8]
6500c036:	lea    edi,[ebx-0x1c]
6500c039:	jmp    0x6500c07a
6500c03b:	mov    ecx,DWORD PTR [ebp-0x3c]
6500c03e:	mov    edx,DWORD PTR [ecx+0x8]
6500c041:	mov    eax,DWORD PTR [ebp+0x10]
6500c044:	add    edx,0x1c
6500c047:	push   edx
6500c048:	add    eax,0x1c
6500c04b:	push   eax
6500c04c:	call   0x6500c0c0
6500c051:	push   0x0
6500c053:	push   0x0
6500c055:	call   0x650124d6
6500c05a:	push   edi
6500c05b:	lea    eax,[edi-0x1c]
6500c05e:	push   edi
6500c05f:	push   eax
6500c060:	mov    DWORD PTR [ebp-0x34],eax
6500c063:	call   0x6500c160
6500c068:	mov    DWORD PTR [ebx+0x8],eax
6500c06b:	mov    eax,DWORD PTR [ebp-0x34]
6500c06e:	mov    ebx,esi
6500c070:	call   0x6500c1b0
6500c075:	lea    edi,[esi+0x1c]
6500c078:	mov    eax,esi
6500c07a:	lea    ebx,[ebp-0x30]
6500c07d:	call   0x6500c190
6500c082:	cmp    DWORD PTR [ebp-0x18],0x10
6500c086:	jb     0x6500c094
6500c088:	mov    ecx,DWORD PTR [ebp-0x2c]
6500c08b:	push   ecx
6500c08c:	call   0x650120d2
6500c091:	add    esp,0x4
6500c094:	mov    ecx,DWORD PTR [ebp-0xc]
6500c097:	mov    DWORD PTR fs:0x0,ecx
6500c09e:	pop    ecx
6500c09f:	pop    edi
6500c0a0:	pop    esi
6500c0a1:	pop    ebx
6500c0a2:	mov    ecx,DWORD PTR [ebp-0x14]
6500c0a5:	xor    ecx,ebp
6500c0a7:	call   0x6501292c
6500c0ac:	mov    esp,ebp
6500c0ae:	pop    ebp
6500c0af:	ret    0xc
6500c0b2:	int3   
6500c0b3:	int3   
6500c0b4:	int3   
6500c0b5:	int3   
6500c0b6:	int3   
6500c0b7:	int3   
6500c0b8:	int3   
6500c0b9:	int3   
6500c0ba:	int3   
6500c0bb:	int3   
6500c0bc:	int3   
6500c0bd:	int3   
6500c0be:	int3   
6500c0bf:	int3   
6500c0c0:	mov    eax,DWORD PTR [esp+0x8]
6500c0c4:	mov    edx,DWORD PTR [esp+0x4]
6500c0c8:	push   eax
6500c0c9:	push   ecx
6500c0ca:	mov    ecx,DWORD PTR [esp+0x10]
6500c0ce:	push   ecx
6500c0cf:	push   edx
6500c0d0:	call   0x6500c320
6500c0d5:	add    esp,0x10
6500c0d8:	ret    0x8
6500c0db:	int3   
6500c0dc:	int3   
6500c0dd:	int3   
6500c0de:	int3   
6500c0df:	int3   
6500c0e0:	push   ebp
6500c0e1:	mov    ebp,esp
6500c0e3:	and    esp,0xfffffff8
6500c0e6:	push   0xffffffff
6500c0e8:	push   0x650228b8
6500c0ed:	mov    eax,fs:0x0
6500c0f3:	push   eax
6500c0f4:	sub    esp,0x4c
6500c0f7:	mov    eax,ds:0x6502c09c
6500c0fc:	xor    eax,esp
6500c0fe:	push   eax
6500c0ff:	lea    eax,[esp+0x50]
6500c103:	mov    fs:0x0,eax
6500c109:	push   0x12
6500c10b:	push   0x650284dc
6500c110:	lea    ecx,[esp+0x10]
6500c114:	mov    DWORD PTR [esp+0x28],0xf
6500c11c:	mov    DWORD PTR [esp+0x24],0x0
6500c124:	mov    BYTE PTR [esp+0x14],0x0
6500c129:	call   0x650018c0
6500c12e:	lea    eax,[esp+0x8]
6500c132:	push   eax
6500c133:	lea    ecx,[esp+0x28]
6500c137:	mov    DWORD PTR [esp+0x5c],0x0
6500c13f:	call   0x65002d10
6500c144:	push   0x6502a0c8
6500c149:	lea    ecx,[esp+0x28]
6500c14d:	push   ecx
6500c14e:	mov    DWORD PTR [esp+0x2c],0x65024c20
6500c156:	call   0x650124d6
6500c15b:	int3   
6500c15c:	int3   
6500c15d:	int3   
6500c15e:	int3   
6500c15f:	int3   
6500c160:	push   ecx
6500c161:	mov    ecx,DWORD PTR [esp+0xc]
6500c165:	mov    BYTE PTR [esp],0x0
6500c169:	mov    eax,DWORD PTR [esp]
6500c16c:	push   eax
6500c16d:	mov    eax,DWORD PTR [esp+0x10]
6500c171:	push   ecx
6500c172:	mov    ecx,DWORD PTR [esp+0x10]
6500c176:	push   edx
6500c177:	mov    edx,DWORD PTR [esp+0x1c]
6500c17b:	push   eax
6500c17c:	call   0x6500c390
6500c181:	add    esp,0x14
6500c184:	ret    0xc
6500c187:	int3   
6500c188:	int3   
6500c189:	int3   
6500c18a:	int3   
6500c18b:	int3   
6500c18c:	int3   
6500c18d:	int3   
6500c18e:	int3   
6500c18f:	int3   
6500c190:	push   esi
6500c191:	mov    esi,eax
6500c193:	cmp    esi,edi
6500c195:	je     0x6500c1aa
6500c197:	push   0xffffffff
6500c199:	push   0x0
6500c19b:	push   ebx
6500c19c:	mov    ecx,esi
6500c19e:	call   0x650017e0
6500c1a3:	add    esi,0x1c
6500c1a6:	cmp    esi,edi
6500c1a8:	jne    0x6500c197
6500c1aa:	pop    esi
6500c1ab:	ret    
6500c1ac:	int3   
6500c1ad:	int3   
6500c1ae:	int3   
6500c1af:	int3   
6500c1b0:	push   ecx
6500c1b1:	push   esi
6500c1b2:	mov    esi,eax
6500c1b4:	mov    BYTE PTR [esp+0x4],0x0
6500c1b9:	mov    eax,DWORD PTR [esp+0x4]
6500c1bd:	mov    ecx,DWORD PTR [esp+0x4]
6500c1c1:	mov    edx,DWORD PTR [esp+0x4]
6500c1c5:	push   eax
6500c1c6:	push   ecx
6500c1c7:	push   edx
6500c1c8:	push   edi
6500c1c9:	push   ebx
6500c1ca:	mov    ecx,esi
6500c1cc:	call   0x6500c4d0
6500c1d1:	sub    esi,ebx
6500c1d3:	mov    eax,0x92492493
6500c1d8:	imul   esi
6500c1da:	add    edx,esi
6500c1dc:	sar    edx,0x4
6500c1df:	mov    eax,edx
6500c1e1:	shr    eax,0x1f
6500c1e4:	add    eax,edx
6500c1e6:	lea    ecx,[eax*8+0x0]
6500c1ed:	sub    ecx,eax
6500c1ef:	add    ecx,ecx
6500c1f1:	add    esp,0x14
6500c1f4:	add    ecx,ecx
6500c1f6:	mov    eax,edi
6500c1f8:	sub    eax,ecx
6500c1fa:	pop    esi
6500c1fb:	pop    ecx
6500c1fc:	ret    
6500c1fd:	int3   
6500c1fe:	int3   
6500c1ff:	int3   
6500c200:	mov    ecx,DWORD PTR [esp+0x4]
6500c204:	sub    esp,0xc
6500c207:	test   ecx,ecx
6500c209:	ja     0x6500c227
6500c20b:	xor    ecx,ecx
6500c20d:	lea    edx,[ecx*8+0x0]
6500c214:	sub    edx,ecx
6500c216:	add    edx,edx
6500c218:	add    edx,edx
6500c21a:	push   edx
6500c21b:	call   0x6501246c
6500c220:	add    esp,0x4
6500c223:	add    esp,0xc
6500c226:	ret    
6500c227:	or     eax,0xffffffff
6500c22a:	xor    edx,edx
6500c22c:	div    ecx
6500c22e:	cmp    eax,0x1c
6500c231:	jae    0x6500c20d
6500c233:	lea    eax,[esp+0x10]
6500c237:	push   eax
6500c238:	lea    ecx,[esp+0x4]
6500c23c:	mov    DWORD PTR [esp+0x14],0x0
6500c244:	call   0x650120e8
6500c249:	push   0x65029ffc
6500c24e:	lea    ecx,[esp+0x4]
6500c252:	push   ecx
6500c253:	mov    DWORD PTR [esp+0x8],0x65024c08
6500c25b:	call   0x650124d6
6500c260:	int3   
6500c261:	int3   
6500c262:	int3   
6500c263:	int3   
6500c264:	int3   
6500c265:	int3   
6500c266:	int3   
6500c267:	int3   
6500c268:	int3   
6500c269:	int3   
6500c26a:	int3   
6500c26b:	int3   
6500c26c:	int3   
6500c26d:	int3   
6500c26e:	int3   
6500c26f:	int3   
6500c270:	push   ebp
6500c271:	mov    ebp,esp
6500c273:	push   0xffffffff
6500c275:	push   0x65022401
6500c27a:	mov    eax,fs:0x0
6500c280:	push   eax
6500c281:	sub    esp,0x10
6500c284:	push   ebx
6500c285:	push   esi
6500c286:	push   edi
6500c287:	mov    eax,ds:0x6502c09c
6500c28c:	xor    eax,ebp
6500c28e:	push   eax
6500c28f:	lea    eax,[ebp-0xc]
6500c292:	mov    fs:0x0,eax
6500c298:	mov    DWORD PTR [ebp-0x10],esp
6500c29b:	mov    edi,ecx
6500c29d:	mov    esi,DWORD PTR [ebp+0x8]
6500c2a0:	xor    ebx,ebx
6500c2a2:	mov    DWORD PTR [ebp-0x14],esi
6500c2a5:	mov    DWORD PTR [ebp-0x4],ebx
6500c2a8:	cmp    edi,ebx
6500c2aa:	jbe    0x6500c308
6500c2ac:	mov    DWORD PTR [ebp-0x18],esi
6500c2af:	mov    DWORD PTR [ebp-0x1c],esi
6500c2b2:	cmp    esi,ebx
6500c2b4:	mov    BYTE PTR [ebp-0x4],0x1
6500c2b8:	je     0x6500c2d5
6500c2ba:	mov    eax,DWORD PTR [ebp+0xc]
6500c2bd:	push   0xffffffff
6500c2bf:	push   ebx
6500c2c0:	mov    DWORD PTR [esi+0x18],0xf
6500c2c7:	mov    DWORD PTR [esi+0x14],ebx
6500c2ca:	push   eax
6500c2cb:	mov    ecx,esi
6500c2cd:	mov    BYTE PTR [esi+0x4],bl
6500c2d0:	call   0x650017e0
6500c2d5:	sub    edi,0x1
6500c2d8:	add    esi,0x1c
6500c2db:	mov    BYTE PTR [ebp-0x4],bl
6500c2de:	mov    DWORD PTR [ebp+0x8],esi
6500c2e1:	jmp    0x6500c2a8
6500c2e3:	mov    esi,DWORD PTR [ebp-0x14]
6500c2e6:	mov    edi,DWORD PTR [ebp+0x8]
6500c2e9:	cmp    esi,edi
6500c2eb:	je     0x6500c2ff
6500c2ed:	mov    ebx,DWORD PTR [ebp+0x10]
6500c2f0:	push   esi
6500c2f1:	mov    ecx,ebx
6500c2f3:	call   0x6500c360
6500c2f8:	add    esi,0x1c
6500c2fb:	cmp    esi,edi
6500c2fd:	jne    0x6500c2f0
6500c2ff:	xor    ebx,ebx
6500c301:	push   ebx
6500c302:	push   ebx
6500c303:	call   0x650124d6
6500c308:	mov    ecx,DWORD PTR [ebp-0xc]
6500c30b:	mov    DWORD PTR fs:0x0,ecx
6500c312:	pop    ecx
6500c313:	pop    edi
6500c314:	pop    esi
6500c315:	pop    ebx
6500c316:	mov    esp,ebp
6500c318:	pop    ebp
6500c319:	ret    
6500c31a:	int3   
6500c31b:	int3   
6500c31c:	int3   
6500c31d:	int3   
6500c31e:	int3   
6500c31f:	int3   
6500c320:	push   esi
6500c321:	mov    esi,DWORD PTR [esp+0x8]
6500c325:	push   edi
6500c326:	mov    edi,DWORD PTR [esp+0x10]
6500c32a:	cmp    esi,edi
6500c32c:	je     0x6500c358
6500c32e:	push   ebx
6500c32f:	xor    ebx,ebx
6500c331:	cmp    DWORD PTR [esi+0x18],0x10
6500c335:	jb     0x6500c343
6500c337:	mov    eax,DWORD PTR [esi+0x4]
6500c33a:	push   eax
6500c33b:	call   0x650120d2
6500c340:	add    esp,0x4
6500c343:	mov    DWORD PTR [esi+0x18],0xf
6500c34a:	mov    DWORD PTR [esi+0x14],ebx
6500c34d:	mov    BYTE PTR [esi+0x4],bl
6500c350:	add    esi,0x1c
6500c353:	cmp    esi,edi
6500c355:	jne    0x6500c331
6500c357:	pop    ebx
6500c358:	pop    edi
6500c359:	pop    esi
6500c35a:	ret    
6500c35b:	int3   
6500c35c:	int3   
6500c35d:	int3   
6500c35e:	int3   
6500c35f:	int3   
6500c360:	push   esi
6500c361:	mov    esi,DWORD PTR [esp+0x8]
6500c365:	cmp    DWORD PTR [esi+0x18],0x10
6500c369:	jb     0x6500c377
6500c36b:	mov    eax,DWORD PTR [esi+0x4]
6500c36e:	push   eax
6500c36f:	call   0x650120d2
6500c374:	add    esp,0x4
6500c377:	xor    eax,eax
6500c379:	mov    DWORD PTR [esi+0x18],0xf
6500c380:	mov    DWORD PTR [esi+0x14],eax
6500c383:	mov    BYTE PTR [esi+0x4],al
6500c386:	pop    esi
6500c387:	ret    0x4
6500c38a:	int3   
6500c38b:	int3   
6500c38c:	int3   
6500c38d:	int3   
6500c38e:	int3   
6500c38f:	int3   
6500c390:	push   ebp
6500c391:	mov    ebp,esp
6500c393:	push   0xffffffff
6500c395:	push   0x65022769
6500c39a:	mov    eax,fs:0x0
6500c3a0:	push   eax
6500c3a1:	sub    esp,0x44
6500c3a4:	mov    eax,ds:0x6502c09c
6500c3a9:	xor    eax,ebp
6500c3ab:	mov    DWORD PTR [ebp-0x14],eax
6500c3ae:	push   ebx
6500c3af:	push   esi
6500c3b0:	push   edi
6500c3b1:	push   eax
6500c3b2:	lea    eax,[ebp-0xc]
6500c3b5:	mov    fs:0x0,eax
6500c3bb:	mov    DWORD PTR [ebp-0x10],esp
6500c3be:	mov    esi,edx
6500c3c0:	xor    eax,eax
6500c3c2:	mov    edi,ecx
6500c3c4:	mov    DWORD PTR [ebp-0x44],esi
6500c3c7:	mov    DWORD PTR [ebp-0x48],esi
6500c3ca:	mov    DWORD PTR [ebp-0x18],0xf
6500c3d1:	mov    DWORD PTR [ebp-0x1c],eax
6500c3d4:	mov    BYTE PTR [ebp-0x2c],al
6500c3d7:	mov    DWORD PTR [ebp-0x4],eax
6500c3da:	mov    BYTE PTR [ebp-0x4],0x1
6500c3de:	mov    edi,edi
6500c3e0:	cmp    edi,DWORD PTR [ebp+0x8]
6500c3e3:	je     0x6500c499
6500c3e9:	mov    DWORD PTR [ebp-0x4c],esi
6500c3ec:	mov    DWORD PTR [ebp-0x50],esi
6500c3ef:	cmp    esi,eax
6500c3f1:	mov    BYTE PTR [ebp-0x4],0x2
6500c3f5:	je     0x6500c412
6500c3f7:	push   0xffffffff
6500c3f9:	mov    DWORD PTR [esi+0x14],eax
6500c3fc:	mov    DWORD PTR [esi+0x18],0xf
6500c403:	push   eax
6500c404:	mov    BYTE PTR [esi+0x4],al
6500c407:	lea    eax,[ebp-0x30]
6500c40a:	push   eax
6500c40b:	mov    ecx,esi
6500c40d:	call   0x650017e0
6500c412:	mov    BYTE PTR [ebp-0x4],0x1
6500c416:	mov    ebx,DWORD PTR [esi+0x10]
6500c419:	mov    eax,DWORD PTR [esi+0x4]
6500c41c:	mov    ecx,DWORD PTR [esi+0x8]
6500c41f:	mov    edx,DWORD PTR [esi+0xc]
6500c422:	mov    DWORD PTR [ebp-0x34],ebx
6500c425:	mov    ebx,DWORD PTR [edi+0x4]
6500c428:	mov    DWORD PTR [esi+0x4],ebx
6500c42b:	mov    ebx,DWORD PTR [edi+0x8]
6500c42e:	mov    DWORD PTR [esi+0x8],ebx
6500c431:	mov    ebx,DWORD PTR [edi+0xc]
6500c434:	mov    DWORD PTR [esi+0xc],ebx
6500c437:	mov    ebx,DWORD PTR [edi+0x10]
6500c43a:	mov    DWORD PTR [esi+0x10],ebx
6500c43d:	mov    DWORD PTR [edi+0x4],eax
6500c440:	mov    DWORD PTR [edi+0x8],ecx
6500c443:	mov    ecx,DWORD PTR [ebp-0x34]
6500c446:	mov    DWORD PTR [edi+0xc],edx
6500c449:	mov    edx,DWORD PTR [edi+0x14]
6500c44c:	mov    DWORD PTR [edi+0x10],ecx
6500c44f:	mov    eax,DWORD PTR [esi+0x14]
6500c452:	mov    DWORD PTR [esi+0x14],edx
6500c455:	mov    ecx,DWORD PTR [edi+0x18]
6500c458:	mov    DWORD PTR [edi+0x14],eax
6500c45b:	mov    eax,DWORD PTR [esi+0x18]
6500c45e:	mov    DWORD PTR [esi+0x18],ecx
6500c461:	mov    DWORD PTR [edi+0x18],eax
6500c464:	add    esi,0x1c
6500c467:	add    edi,0x1c
6500c46a:	mov    DWORD PTR [ebp-0x44],esi
6500c46d:	xor    eax,eax
6500c46f:	jmp    0x6500c3e0
6500c474:	mov    esi,DWORD PTR [ebp-0x48]
6500c477:	mov    edi,DWORD PTR [ebp-0x44]
6500c47a:	cmp    esi,edi
6500c47c:	je     0x6500c490
6500c47e:	mov    ebx,DWORD PTR [ebp+0xc]
6500c481:	push   esi
6500c482:	mov    ecx,ebx
6500c484:	call   0x6500c360
6500c489:	add    esi,0x1c
6500c48c:	cmp    esi,edi
6500c48e:	jne    0x6500c481
6500c490:	push   0x0
6500c492:	push   0x0
6500c494:	call   0x650124d6
6500c499:	cmp    DWORD PTR [ebp-0x18],0x10
6500c49d:	jb     0x6500c4ab
6500c49f:	mov    edx,DWORD PTR [ebp-0x2c]
6500c4a2:	push   edx
6500c4a3:	call   0x650120d2
6500c4a8:	add    esp,0x4
6500c4ab:	mov    eax,esi
6500c4ad:	mov    ecx,DWORD PTR [ebp-0xc]
6500c4b0:	mov    DWORD PTR fs:0x0,ecx
6500c4b7:	pop    ecx
6500c4b8:	pop    edi
6500c4b9:	pop    esi
6500c4ba:	pop    ebx
6500c4bb:	mov    ecx,DWORD PTR [ebp-0x14]
6500c4be:	xor    ecx,ebp
6500c4c0:	call   0x6501292c
6500c4c5:	mov    esp,ebp
6500c4c7:	pop    ebp
6500c4c8:	ret    
6500c4c9:	int3   
6500c4ca:	int3   
6500c4cb:	int3   
6500c4cc:	int3   
6500c4cd:	int3   
6500c4ce:	int3   
6500c4cf:	int3   
6500c4d0:	push   ecx
6500c4d1:	mov    eax,ds:0x6502c09c
6500c4d6:	xor    eax,esp
6500c4d8:	mov    DWORD PTR [esp],eax
6500c4db:	cmp    DWORD PTR [esp+0x8],ecx
6500c4df:	mov    eax,DWORD PTR [esp+0xc]
6500c4e3:	je     0x6500c548
6500c4e5:	push   ebx
6500c4e6:	push   ebp
6500c4e7:	push   esi
6500c4e8:	push   edi
6500c4e9:	lea    esp,[esp+0x0]
6500c4f0:	mov    ebp,DWORD PTR [ecx-0x18]
6500c4f3:	mov    edx,DWORD PTR [eax-0x18]
6500c4f6:	mov    esi,DWORD PTR [eax-0x14]
6500c4f9:	mov    edi,DWORD PTR [eax-0x10]
6500c4fc:	mov    ebx,DWORD PTR [eax-0xc]
6500c4ff:	sub    ecx,0x1c
6500c502:	sub    eax,0x1c
6500c505:	cmp    ecx,DWORD PTR [esp+0x18]
6500c509:	mov    DWORD PTR [eax+0x4],ebp
6500c50c:	mov    ebp,DWORD PTR [ecx+0x8]
6500c50f:	mov    DWORD PTR [eax+0x8],ebp
6500c512:	mov    ebp,DWORD PTR [ecx+0xc]
6500c515:	mov    DWORD PTR [eax+0xc],ebp
6500c518:	mov    ebp,DWORD PTR [ecx+0x10]
6500c51b:	mov    DWORD PTR [eax+0x10],ebp
6500c51e:	mov    DWORD PTR [ecx+0x4],edx
6500c521:	mov    DWORD PTR [ecx+0x8],esi
6500c524:	mov    esi,DWORD PTR [ecx+0x14]
6500c527:	mov    DWORD PTR [ecx+0xc],edi
6500c52a:	mov    DWORD PTR [ecx+0x10],ebx
6500c52d:	mov    edx,DWORD PTR [eax+0x14]
6500c530:	mov    DWORD PTR [eax+0x14],esi
6500c533:	mov    esi,DWORD PTR [ecx+0x18]
6500c536:	mov    DWORD PTR [ecx+0x14],edx
6500c539:	mov    edx,DWORD PTR [eax+0x18]
6500c53c:	mov    DWORD PTR [eax+0x18],esi
6500c53f:	mov    DWORD PTR [ecx+0x18],edx
6500c542:	jne    0x6500c4f0
6500c544:	pop    edi
6500c545:	pop    esi
6500c546:	pop    ebp
6500c547:	pop    ebx
6500c548:	mov    ecx,DWORD PTR [esp]
6500c54b:	xor    ecx,esp
6500c54d:	call   0x6501292c
6500c552:	pop    ecx
6500c553:	ret    
6500c554:	int3   
6500c555:	int3   
6500c556:	int3   
6500c557:	int3   
6500c558:	int3   
6500c559:	int3   
6500c55a:	int3   
6500c55b:	int3   
6500c55c:	int3   
6500c55d:	int3   
6500c55e:	int3   
6500c55f:	int3   
6500c560:	sub    esp,0x800
6500c566:	push   ebx
6500c567:	push   ebp
6500c568:	xor    ecx,ecx
6500c56a:	push   esi
6500c56b:	lea    eax,[ecx+0x1]
6500c56e:	push   edi
6500c56f:	nop
6500c570:	mov    edx,eax
6500c572:	and    dl,0x80
6500c575:	neg    dl
6500c577:	lea    esi,[eax+eax*1]
6500c57a:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6500c581:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6500c585:	sbb    edx,edx
6500c587:	and    edx,0x1b
6500c58a:	xor    edx,esi
6500c58c:	xor    edx,eax
6500c58e:	and    edx,0xff
6500c594:	add    ecx,0x1
6500c597:	cmp    ecx,0x100
6500c59d:	mov    eax,edx
6500c59f:	jl     0x6500c570
6500c5a1:	mov    eax,0x1
6500c5a6:	mov    ecx,0x6502e968
6500c5ab:	jmp    0x6500c5b0
6500c5ad:	lea    ecx,[ecx+0x0]
6500c5b0:	mov    edx,eax
6500c5b2:	and    dl,0x80
6500c5b5:	neg    dl
6500c5b7:	mov    DWORD PTR [ecx],eax
6500c5b9:	sbb    edx,edx
6500c5bb:	and    edx,0x1b
6500c5be:	add    eax,eax
6500c5c0:	xor    edx,eax
6500c5c2:	and    edx,0xff
6500c5c8:	add    ecx,0x4
6500c5cb:	cmp    ecx,0x6502e990
6500c5d1:	mov    eax,edx
6500c5d3:	jl     0x6500c5b0
6500c5d5:	mov    BYTE PTR ds:0x6502e068,0x63
6500c5dc:	mov    BYTE PTR ds:0x650301f3,0x0
6500c5e3:	mov    ebx,0x1
6500c5e8:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6500c5ec:	add    ecx,ecx
6500c5ee:	add    ecx,ecx
6500c5f0:	lea    edx,[esp+0x80c]
6500c5f7:	sub    edx,ecx
6500c5f9:	mov    eax,DWORD PTR [edx]
6500c5fb:	mov    ecx,eax
6500c5fd:	sar    ecx,0x7
6500c600:	lea    edx,[eax+eax*1]
6500c603:	or     ecx,edx
6500c605:	and    ecx,0xff
6500c60b:	xor    eax,ecx
6500c60d:	mov    edx,ecx
6500c60f:	sar    edx,0x7
6500c612:	add    ecx,ecx
6500c614:	or     edx,ecx
6500c616:	and    edx,0xff
6500c61c:	xor    eax,edx
6500c61e:	mov    ecx,edx
6500c620:	add    edx,edx
6500c622:	sar    ecx,0x7
6500c625:	or     ecx,edx
6500c627:	and    ecx,0xff
6500c62d:	xor    eax,ecx
6500c62f:	mov    edx,ecx
6500c631:	sar    edx,0x7
6500c634:	add    ecx,ecx
6500c636:	or     edx,ecx
6500c638:	xor    edx,0x63
6500c63b:	and    edx,0xff
6500c641:	xor    eax,edx
6500c643:	mov    BYTE PTR [ebx+0x6502e068],al
6500c649:	mov    BYTE PTR [eax+0x65030190],bl
6500c64f:	add    ebx,0x1
6500c652:	cmp    ebx,0x100
6500c658:	jl     0x6500c5e8
6500c65a:	xor    ecx,ecx
6500c65c:	lea    esp,[esp+0x0]
6500c660:	movzx  edx,BYTE PTR [ecx+0x6502e068]
6500c667:	mov    eax,edx
6500c669:	and    al,0x80
6500c66b:	neg    al
6500c66d:	lea    esi,[edx+edx*1]
6500c670:	sbb    eax,eax
6500c672:	and    eax,0x1b
6500c675:	xor    eax,esi
6500c677:	and    eax,0xff
6500c67c:	mov    esi,eax
6500c67e:	xor    eax,edx
6500c680:	shl    eax,0x8
6500c683:	xor    eax,edx
6500c685:	shl    eax,0x8
6500c688:	xor    eax,edx
6500c68a:	shl    eax,0x8
6500c68d:	xor    eax,esi
6500c68f:	mov    DWORD PTR [ecx*4+0x6502fd90],eax
6500c696:	rol    eax,0x8
6500c699:	mov    DWORD PTR [ecx*4+0x6502f990],eax
6500c6a0:	rol    eax,0x8
6500c6a3:	mov    DWORD PTR [ecx*4+0x6502f590],eax
6500c6aa:	rol    eax,0x8
6500c6ad:	mov    DWORD PTR [ecx*4+0x6502f190],eax
6500c6b4:	movzx  eax,BYTE PTR [ecx+0x65030190]
6500c6bb:	test   eax,eax
6500c6bd:	je     0x6500c711
6500c6bf:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6500c6c3:	mov    edx,DWORD PTR [esp+0x48]
6500c6c7:	lea    eax,[esi+edx*1]
6500c6ca:	cdq    
6500c6cb:	mov    edi,0xff
6500c6d0:	idiv   edi
6500c6d2:	mov    eax,DWORD PTR [esp+0x34]
6500c6d6:	add    eax,esi
6500c6d8:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6500c6df:	cdq    
6500c6e0:	idiv   edi
6500c6e2:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6500c6e9:	mov    edx,DWORD PTR [esp+0x44]
6500c6ed:	lea    eax,[esi+edx*1]
6500c6f0:	cdq    
6500c6f1:	idiv   edi
6500c6f3:	mov    eax,DWORD PTR [esp+0x3c]
6500c6f7:	add    eax,esi
6500c6f9:	mov    esi,0xff
6500c6fe:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6500c705:	cdq    
6500c706:	idiv   esi
6500c708:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6500c70f:	jmp    0x6500c719
6500c711:	xor    ebp,ebp
6500c713:	xor    ebx,ebx
6500c715:	xor    edi,edi
6500c717:	xor    edx,edx
6500c719:	shl    edx,0x8
6500c71c:	xor    edx,edi
6500c71e:	shl    edx,0x8
6500c721:	xor    edx,ebx
6500c723:	shl    edx,0x8
6500c726:	xor    edx,ebp
6500c728:	mov    DWORD PTR [ecx*4+0x6502ed90],edx
6500c72f:	rol    edx,0x8
6500c732:	mov    DWORD PTR [ecx*4+0x6502e990],edx
6500c739:	rol    edx,0x8
6500c73c:	mov    DWORD PTR [ecx*4+0x6502e568],edx
6500c743:	rol    edx,0x8
6500c746:	mov    DWORD PTR [ecx*4+0x6502e168],edx
6500c74d:	add    ecx,0x1
6500c750:	cmp    ecx,0x100
6500c756:	jl     0x6500c660
6500c75c:	pop    edi
6500c75d:	pop    esi
6500c75e:	pop    ebp
6500c75f:	pop    ebx
6500c760:	add    esp,0x800
6500c766:	ret    
6500c767:	int3   
6500c768:	int3   
6500c769:	int3   
6500c76a:	int3   
6500c76b:	int3   
6500c76c:	int3   
6500c76d:	int3   
6500c76e:	int3   
6500c76f:	int3   
6500c770:	cmp    DWORD PTR ds:0x65030294,0x0
6500c777:	push   ebx
6500c778:	push   esi
6500c779:	push   edi
6500c77a:	mov    edi,eax
6500c77c:	jne    0x6500c78d
6500c77e:	call   0x6500c560
6500c783:	mov    DWORD PTR ds:0x65030294,0x1
6500c78d:	lea    eax,[edi+0x8]
6500c790:	mov    ecx,0x6502d38a
6500c795:	mov    esi,eax
6500c797:	mov    DWORD PTR [edi],0xa
6500c79d:	mov    DWORD PTR [edi+0x4],eax
6500c7a0:	sub    esi,ecx
6500c7a2:	movzx  ebx,BYTE PTR [ecx-0x1]
6500c7a6:	xor    edx,edx
6500c7a8:	mov    dh,BYTE PTR [ecx+0x1]
6500c7ab:	add    ecx,0x4
6500c7ae:	mov    dl,BYTE PTR [ecx-0x4]
6500c7b1:	shl    edx,0x8
6500c7b4:	or     edx,ebx
6500c7b6:	movzx  ebx,BYTE PTR [ecx-0x6]
6500c7ba:	shl    edx,0x8
6500c7bd:	or     edx,ebx
6500c7bf:	cmp    ecx,0x6502d39a
6500c7c5:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6500c7c9:	jl     0x6500c7a2
6500c7cb:	mov    edi,DWORD PTR [edi]
6500c7cd:	sub    edi,0xa
6500c7d0:	je     0x6500ca8c
6500c7d6:	sub    edi,0x2
6500c7d9:	je     0x6500c8bf
6500c7df:	sub    edi,0x2
6500c7e2:	jne    0x6500cc6f
6500c7e8:	push   ebp
6500c7e9:	mov    ebp,0x6502e968
6500c7ee:	mov    edi,edi
6500c7f0:	mov    edi,DWORD PTR [eax+0x1c]
6500c7f3:	xor    edx,edx
6500c7f5:	mov    ecx,edi
6500c7f7:	and    ecx,0xff
6500c7fd:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c803:	movzx  ecx,BYTE PTR [eax+0x1f]
6500c807:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c80e:	xor    edx,ecx
6500c810:	movzx  ecx,BYTE PTR [eax+0x1e]
6500c814:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c81b:	shl    edx,0x8
6500c81e:	xor    edx,ecx
6500c820:	movzx  ecx,BYTE PTR [eax+0x1d]
6500c824:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c82b:	mov    esi,DWORD PTR [eax+0x8]
6500c82e:	shl    edx,0x8
6500c831:	xor    edx,ecx
6500c833:	xor    edx,DWORD PTR [eax]
6500c835:	xor    ebx,ebx
6500c837:	mov    ecx,edx
6500c839:	xor    ecx,DWORD PTR [ebp+0x0]
6500c83c:	mov    edx,DWORD PTR [eax+0x4]
6500c83f:	xor    edx,ecx
6500c841:	mov    DWORD PTR [eax+0x20],ecx
6500c844:	mov    ecx,DWORD PTR [eax+0xc]
6500c847:	xor    esi,edx
6500c849:	xor    ecx,esi
6500c84b:	mov    DWORD PTR [eax+0x2c],ecx
6500c84e:	mov    DWORD PTR [eax+0x24],edx
6500c851:	movzx  edx,BYTE PTR [eax+0x2f]
6500c855:	mov    DWORD PTR [eax+0x28],esi
6500c858:	mov    bh,BYTE PTR [edx+0x6502e068]
6500c85e:	movzx  edx,BYTE PTR [eax+0x2e]
6500c862:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c869:	xor    ebx,edx
6500c86b:	movzx  edx,BYTE PTR [eax+0x2d]
6500c86f:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c876:	and    ecx,0xff
6500c87c:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c883:	shl    ebx,0x8
6500c886:	xor    ebx,edx
6500c888:	mov    edx,DWORD PTR [eax+0x14]
6500c88b:	shl    ebx,0x8
6500c88e:	xor    ecx,ebx
6500c890:	xor    ecx,DWORD PTR [eax+0x10]
6500c893:	add    ebp,0x4
6500c896:	xor    edx,ecx
6500c898:	mov    DWORD PTR [eax+0x30],ecx
6500c89b:	mov    ecx,DWORD PTR [eax+0x18]
6500c89e:	xor    ecx,edx
6500c8a0:	mov    DWORD PTR [eax+0x38],ecx
6500c8a3:	xor    ecx,edi
6500c8a5:	mov    DWORD PTR [eax+0x34],edx
6500c8a8:	mov    DWORD PTR [eax+0x3c],ecx
6500c8ab:	add    eax,0x20
6500c8ae:	cmp    ebp,0x6502e984
6500c8b4:	jl     0x6500c7f0
6500c8ba:	pop    ebp
6500c8bb:	pop    edi
6500c8bc:	pop    esi
6500c8bd:	pop    ebx
6500c8be:	ret    
6500c8bf:	mov    esi,0x6502e96c
6500c8c4:	mov    edi,DWORD PTR [eax+0x14]
6500c8c7:	xor    ecx,ecx
6500c8c9:	mov    edx,edi
6500c8cb:	and    edx,0xff
6500c8d1:	mov    ch,BYTE PTR [edx+0x6502e068]
6500c8d7:	movzx  edx,BYTE PTR [eax+0x17]
6500c8db:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8e2:	xor    ecx,edx
6500c8e4:	movzx  edx,BYTE PTR [eax+0x16]
6500c8e8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8ef:	shl    ecx,0x8
6500c8f2:	xor    ecx,edx
6500c8f4:	movzx  edx,BYTE PTR [eax+0x15]
6500c8f8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8ff:	shl    ecx,0x8
6500c902:	xor    ecx,edx
6500c904:	xor    ecx,DWORD PTR [esi-0x4]
6500c907:	mov    edx,DWORD PTR [eax+0x4]
6500c90a:	xor    ecx,DWORD PTR [eax]
6500c90c:	xor    edx,ecx
6500c90e:	mov    DWORD PTR [eax+0x18],ecx
6500c911:	mov    ecx,DWORD PTR [eax+0x8]
6500c914:	xor    ecx,edx
6500c916:	mov    DWORD PTR [eax+0x1c],edx
6500c919:	mov    edx,DWORD PTR [eax+0xc]
6500c91c:	xor    edx,ecx
6500c91e:	mov    DWORD PTR [eax+0x20],ecx
6500c921:	mov    ecx,DWORD PTR [eax+0x10]
6500c924:	xor    ecx,edx
6500c926:	mov    DWORD PTR [eax+0x28],ecx
6500c929:	mov    DWORD PTR [eax+0x24],edx
6500c92c:	xor    ecx,edi
6500c92e:	mov    DWORD PTR [eax+0x2c],ecx
6500c931:	and    ecx,0xff
6500c937:	xor    edx,edx
6500c939:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c93f:	movzx  ecx,BYTE PTR [eax+0x2f]
6500c943:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c94a:	xor    edx,ecx
6500c94c:	movzx  ecx,BYTE PTR [eax+0x2e]
6500c950:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c957:	shl    edx,0x8
6500c95a:	xor    edx,ecx
6500c95c:	movzx  ecx,BYTE PTR [eax+0x2d]
6500c960:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c967:	mov    edi,DWORD PTR [eax+0x28]
6500c96a:	shl    edx,0x8
6500c96d:	xor    edx,ecx
6500c96f:	xor    edx,DWORD PTR [eax+0x18]
6500c972:	mov    ecx,edx
6500c974:	xor    ecx,DWORD PTR [esi]
6500c976:	mov    edx,DWORD PTR [eax+0x1c]
6500c979:	xor    edx,ecx
6500c97b:	mov    DWORD PTR [eax+0x30],ecx
6500c97e:	mov    ecx,DWORD PTR [eax+0x20]
6500c981:	xor    ecx,edx
6500c983:	mov    DWORD PTR [eax+0x34],edx
6500c986:	mov    edx,DWORD PTR [eax+0x24]
6500c989:	xor    edx,ecx
6500c98b:	mov    DWORD PTR [eax+0x38],ecx
6500c98e:	mov    ecx,DWORD PTR [eax+0x2c]
6500c991:	xor    edi,edx
6500c993:	mov    DWORD PTR [eax+0x3c],edx
6500c996:	xor    ecx,edi
6500c998:	mov    DWORD PTR [eax+0x44],ecx
6500c99b:	and    ecx,0xff
6500c9a1:	xor    edx,edx
6500c9a3:	mov    DWORD PTR [eax+0x40],edi
6500c9a6:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c9ac:	movzx  ecx,BYTE PTR [eax+0x47]
6500c9b0:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c9b7:	xor    edx,ecx
6500c9b9:	movzx  ecx,BYTE PTR [eax+0x46]
6500c9bd:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c9c4:	shl    edx,0x8
6500c9c7:	xor    edx,ecx
6500c9c9:	movzx  ecx,BYTE PTR [eax+0x45]
6500c9cd:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c9d4:	shl    edx,0x8
6500c9d7:	xor    edx,ecx
6500c9d9:	xor    edx,DWORD PTR [esi+0x4]
6500c9dc:	mov    ecx,edx
6500c9de:	xor    ecx,DWORD PTR [eax+0x30]
6500c9e1:	mov    edx,DWORD PTR [eax+0x34]
6500c9e4:	xor    edx,ecx
6500c9e6:	mov    DWORD PTR [eax+0x48],ecx
6500c9e9:	mov    ecx,DWORD PTR [eax+0x38]
6500c9ec:	xor    ecx,edx
6500c9ee:	mov    DWORD PTR [eax+0x4c],edx
6500c9f1:	mov    edx,DWORD PTR [eax+0x3c]
6500c9f4:	xor    edx,ecx
6500c9f6:	mov    DWORD PTR [eax+0x50],ecx
6500c9f9:	mov    ecx,DWORD PTR [eax+0x44]
6500c9fc:	xor    edi,edx
6500c9fe:	mov    DWORD PTR [eax+0x54],edx
6500ca01:	xor    ecx,edi
6500ca03:	mov    DWORD PTR [eax+0x5c],ecx
6500ca06:	and    ecx,0xff
6500ca0c:	xor    edx,edx
6500ca0e:	mov    DWORD PTR [eax+0x58],edi
6500ca11:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500ca17:	movzx  ecx,BYTE PTR [eax+0x5f]
6500ca1b:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca22:	xor    edx,ecx
6500ca24:	movzx  ecx,BYTE PTR [eax+0x5e]
6500ca28:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca2f:	shl    edx,0x8
6500ca32:	xor    edx,ecx
6500ca34:	movzx  ecx,BYTE PTR [eax+0x5d]
6500ca38:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca3f:	shl    edx,0x8
6500ca42:	xor    edx,ecx
6500ca44:	xor    edx,DWORD PTR [esi+0x8]
6500ca47:	add    esi,0x10
6500ca4a:	mov    ecx,edx
6500ca4c:	xor    ecx,DWORD PTR [eax+0x48]
6500ca4f:	mov    edx,DWORD PTR [eax+0x4c]
6500ca52:	xor    edx,ecx
6500ca54:	mov    DWORD PTR [eax+0x60],ecx
6500ca57:	mov    ecx,DWORD PTR [eax+0x50]
6500ca5a:	xor    ecx,edx
6500ca5c:	mov    DWORD PTR [eax+0x64],edx
6500ca5f:	mov    edx,DWORD PTR [eax+0x54]
6500ca62:	xor    edx,ecx
6500ca64:	mov    DWORD PTR [eax+0x68],ecx
6500ca67:	mov    DWORD PTR [eax+0x6c],edx
6500ca6a:	mov    ecx,edi
6500ca6c:	xor    ecx,edx
6500ca6e:	mov    edx,DWORD PTR [eax+0x5c]
6500ca71:	xor    edx,ecx
6500ca73:	mov    DWORD PTR [eax+0x70],ecx
6500ca76:	mov    DWORD PTR [eax+0x74],edx
6500ca79:	add    eax,0x60
6500ca7c:	cmp    esi,0x6502e98c
6500ca82:	jl     0x6500c8c4
6500ca88:	pop    edi
6500ca89:	pop    esi
6500ca8a:	pop    ebx
6500ca8b:	ret    
6500ca8c:	mov    ecx,0x6502e96c
6500ca91:	mov    esi,DWORD PTR [eax+0xc]
6500ca94:	mov    edx,esi
6500ca96:	and    edx,0xff
6500ca9c:	xor    ebx,ebx
6500ca9e:	mov    bh,BYTE PTR [edx+0x6502e068]
6500caa4:	movzx  edx,BYTE PTR [eax+0xf]
6500caa8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500caaf:	xor    ebx,edx
6500cab1:	movzx  edx,BYTE PTR [eax+0xe]
6500cab5:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cabc:	mov    edi,DWORD PTR [eax+0x4]
6500cabf:	shl    ebx,0x8
6500cac2:	xor    ebx,edx
6500cac4:	movzx  edx,BYTE PTR [eax+0xd]
6500cac8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cacf:	shl    ebx,0x8
6500cad2:	xor    ebx,edx
6500cad4:	xor    ebx,DWORD PTR [ecx-0x4]
6500cad7:	mov    edx,ebx
6500cad9:	xor    edx,DWORD PTR [eax]
6500cadb:	mov    DWORD PTR [eax+0x10],edx
6500cade:	xor    edi,edx
6500cae0:	mov    edx,DWORD PTR [eax+0x8]
6500cae3:	xor    edx,edi
6500cae5:	xor    esi,edx
6500cae7:	mov    DWORD PTR [eax+0x18],edx
6500caea:	mov    DWORD PTR [eax+0x1c],esi
6500caed:	and    esi,0xff
6500caf3:	xor    edx,edx
6500caf5:	mov    DWORD PTR [eax+0x14],edi
6500caf8:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cafe:	movzx  esi,BYTE PTR [eax+0x1f]
6500cb02:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb09:	xor    edx,esi
6500cb0b:	movzx  esi,BYTE PTR [eax+0x1e]
6500cb0f:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb16:	shl    edx,0x8
6500cb19:	xor    edx,esi
6500cb1b:	movzx  esi,BYTE PTR [eax+0x1d]
6500cb1f:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb26:	shl    edx,0x8
6500cb29:	xor    edx,esi
6500cb2b:	xor    edx,DWORD PTR [ecx]
6500cb2d:	mov    esi,edi
6500cb2f:	xor    edx,DWORD PTR [eax+0x10]
6500cb32:	xor    esi,edx
6500cb34:	mov    DWORD PTR [eax+0x20],edx
6500cb37:	mov    edx,DWORD PTR [eax+0x18]
6500cb3a:	xor    edx,esi
6500cb3c:	mov    DWORD PTR [eax+0x24],esi
6500cb3f:	mov    esi,DWORD PTR [eax+0x1c]
6500cb42:	xor    esi,edx
6500cb44:	mov    DWORD PTR [eax+0x28],edx
6500cb47:	mov    DWORD PTR [eax+0x2c],esi
6500cb4a:	and    esi,0xff
6500cb50:	xor    edx,edx
6500cb52:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cb58:	movzx  esi,BYTE PTR [eax+0x2f]
6500cb5c:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb63:	xor    edx,esi
6500cb65:	movzx  esi,BYTE PTR [eax+0x2e]
6500cb69:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb70:	shl    edx,0x8
6500cb73:	xor    edx,esi
6500cb75:	movzx  esi,BYTE PTR [eax+0x2d]
6500cb79:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb80:	shl    edx,0x8
6500cb83:	xor    edx,esi
6500cb85:	xor    edx,DWORD PTR [ecx+0x4]
6500cb88:	mov    esi,DWORD PTR [eax+0x24]
6500cb8b:	xor    edx,DWORD PTR [eax+0x20]
6500cb8e:	xor    esi,edx
6500cb90:	mov    DWORD PTR [eax+0x30],edx
6500cb93:	mov    edx,DWORD PTR [eax+0x28]
6500cb96:	xor    edx,esi
6500cb98:	mov    DWORD PTR [eax+0x34],esi
6500cb9b:	mov    esi,DWORD PTR [eax+0x2c]
6500cb9e:	xor    esi,edx
6500cba0:	mov    DWORD PTR [eax+0x3c],esi
6500cba3:	mov    DWORD PTR [eax+0x38],edx
6500cba6:	and    esi,0xff
6500cbac:	xor    edx,edx
6500cbae:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cbb4:	movzx  esi,BYTE PTR [eax+0x3f]
6500cbb8:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbbf:	xor    edx,esi
6500cbc1:	movzx  esi,BYTE PTR [eax+0x3e]
6500cbc5:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbcc:	shl    edx,0x8
6500cbcf:	xor    edx,esi
6500cbd1:	movzx  esi,BYTE PTR [eax+0x3d]
6500cbd5:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbdc:	shl    edx,0x8
6500cbdf:	xor    edx,esi
6500cbe1:	xor    edx,DWORD PTR [ecx+0x8]
6500cbe4:	mov    esi,DWORD PTR [eax+0x34]
6500cbe7:	xor    edx,DWORD PTR [eax+0x30]
6500cbea:	add    ecx,0x14
6500cbed:	xor    esi,edx
6500cbef:	mov    DWORD PTR [eax+0x40],edx
6500cbf2:	mov    edx,DWORD PTR [eax+0x38]
6500cbf5:	xor    edx,esi
6500cbf7:	mov    DWORD PTR [eax+0x44],esi
6500cbfa:	mov    esi,DWORD PTR [eax+0x3c]
6500cbfd:	xor    esi,edx
6500cbff:	mov    DWORD PTR [eax+0x48],edx
6500cc02:	mov    DWORD PTR [eax+0x4c],esi
6500cc05:	and    esi,0xff
6500cc0b:	xor    edx,edx
6500cc0d:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cc13:	movzx  esi,BYTE PTR [eax+0x4f]
6500cc17:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cc1e:	xor    edx,esi
6500cc20:	movzx  esi,BYTE PTR [eax+0x4e]
6500cc24:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cc2b:	shl    edx,0x8
6500cc2e:	xor    edx,esi
6500cc30:	movzx  esi,BYTE PTR [eax+0x4d]
6500cc34:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cc3b:	shl    edx,0x8
6500cc3e:	xor    edx,esi
6500cc40:	xor    edx,DWORD PTR [ecx-0x8]
6500cc43:	mov    esi,DWORD PTR [eax+0x44]
6500cc46:	xor    edx,DWORD PTR [eax+0x40]
6500cc49:	add    eax,0x50
6500cc4c:	xor    esi,edx
6500cc4e:	mov    DWORD PTR [eax],edx
6500cc50:	mov    edx,DWORD PTR [eax-0x8]
6500cc53:	xor    edx,esi
6500cc55:	mov    DWORD PTR [eax+0x4],esi
6500cc58:	mov    esi,DWORD PTR [eax-0x4]
6500cc5b:	xor    esi,edx
6500cc5d:	cmp    ecx,0x6502e994
6500cc63:	mov    DWORD PTR [eax+0x8],edx
6500cc66:	mov    DWORD PTR [eax+0xc],esi
6500cc69:	jl     0x6500ca91
6500cc6f:	pop    edi
6500cc70:	pop    esi
6500cc71:	pop    ebx
6500cc72:	ret    
6500cc73:	int3   
6500cc74:	int3   
6500cc75:	int3   
6500cc76:	int3   
6500cc77:	int3   
6500cc78:	int3   
6500cc79:	int3   
6500cc7a:	int3   
6500cc7b:	int3   
6500cc7c:	int3   
6500cc7d:	int3   
6500cc7e:	int3   
6500cc7f:	int3   
6500cc80:	sub    esp,0x11c
6500cc86:	push   esi
6500cc87:	push   edi
6500cc88:	mov    edi,eax
6500cc8a:	lea    esi,[edi+0x8]
6500cc8d:	lea    eax,[esp+0x8]
6500cc91:	mov    DWORD PTR [edi],0xa
6500cc97:	mov    DWORD PTR [edi+0x4],esi
6500cc9a:	call   0x6500c770
6500cc9f:	mov    eax,DWORD PTR [esp+0x8]
6500cca3:	shl    eax,0x4
6500cca6:	add    eax,DWORD PTR [esp+0xc]
6500ccaa:	add    esi,0x4
6500ccad:	mov    ecx,DWORD PTR [eax]
6500ccaf:	mov    DWORD PTR [esi-0x4],ecx
6500ccb2:	mov    edx,DWORD PTR [eax+0x4]
6500ccb5:	add    eax,0x4
6500ccb8:	mov    DWORD PTR [esi],edx
6500ccba:	mov    ecx,DWORD PTR [eax+0x4]
6500ccbd:	add    eax,0x4
6500ccc0:	add    esi,0x4
6500ccc3:	mov    DWORD PTR [esi],ecx
6500ccc5:	mov    edx,DWORD PTR [eax+0x4]
6500ccc8:	add    eax,0x4
6500cccb:	add    esi,0x4
6500ccce:	mov    DWORD PTR [esi],edx
6500ccd0:	mov    ecx,DWORD PTR [edi]
6500ccd2:	sub    ecx,0x1
6500ccd5:	add    esi,0x4
6500ccd8:	sub    eax,0x1c
6500ccdb:	test   ecx,ecx
6500ccdd:	jle    0x6500ce35
6500cce3:	movzx  edx,BYTE PTR [eax+0x3]
6500cce7:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500ccee:	mov    edx,DWORD PTR [edx*4+0x6502e168]
6500ccf5:	movzx  edi,BYTE PTR [eax+0x2]
6500ccf9:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd00:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cd07:	movzx  edi,BYTE PTR [eax+0x1]
6500cd0b:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd12:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500cd19:	mov    edi,DWORD PTR [eax]
6500cd1b:	and    edi,0xff
6500cd21:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd28:	xor    edx,DWORD PTR [edi*4+0x6502ed90]
6500cd2f:	add    eax,0x10
6500cd32:	mov    DWORD PTR [esi],edx
6500cd34:	mov    edx,DWORD PTR [eax-0xc]
6500cd37:	movzx  edi,BYTE PTR [eax-0x9]
6500cd3b:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd42:	and    edx,0xff
6500cd48:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cd4f:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cd56:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cd5d:	movzx  edi,BYTE PTR [eax-0xa]
6500cd61:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd68:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cd6f:	movzx  edi,BYTE PTR [eax-0xb]
6500cd73:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd7a:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500cd81:	sub    ecx,0x1
6500cd84:	mov    DWORD PTR [esi+0x4],edx
6500cd87:	mov    edx,DWORD PTR [eax-0x8]
6500cd8a:	movzx  edi,BYTE PTR [eax-0x5]
6500cd8e:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd95:	and    edx,0xff
6500cd9b:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cda2:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cda9:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cdb0:	movzx  edi,BYTE PTR [eax-0x6]
6500cdb4:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdbb:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cdc2:	movzx  edi,BYTE PTR [eax-0x7]
6500cdc6:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdcd:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500cdd4:	add    esi,0x10
6500cdd7:	mov    DWORD PTR [esi-0x8],edx
6500cdda:	mov    edx,DWORD PTR [eax-0x4]
6500cddd:	movzx  edi,BYTE PTR [eax-0x1]
6500cde1:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cde8:	and    edx,0xff
6500cdee:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cdf5:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cdfc:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500ce03:	movzx  edi,BYTE PTR [eax-0x2]
6500ce07:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500ce0e:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500ce15:	movzx  edi,BYTE PTR [eax-0x3]
6500ce19:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500ce20:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500ce27:	sub    eax,0x20
6500ce2a:	test   ecx,ecx
6500ce2c:	mov    DWORD PTR [esi-0x4],edx
6500ce2f:	jg     0x6500cce3
6500ce35:	mov    ecx,DWORD PTR [eax]
6500ce37:	mov    DWORD PTR [esi],ecx
6500ce39:	mov    edx,DWORD PTR [eax+0x4]
6500ce3c:	add    esi,0x4
6500ce3f:	add    eax,0x4
6500ce42:	mov    DWORD PTR [esi],edx
6500ce44:	mov    ecx,DWORD PTR [eax+0x4]
6500ce47:	add    esi,0x4
6500ce4a:	add    eax,0x4
6500ce4d:	mov    DWORD PTR [esi],ecx
6500ce4f:	mov    edx,DWORD PTR [eax+0x4]
6500ce52:	pop    edi
6500ce53:	mov    DWORD PTR [esi+0x4],edx
6500ce56:	pop    esi
6500ce57:	add    esp,0x11c
6500ce5d:	ret    
6500ce5e:	int3   
6500ce5f:	int3   
6500ce60:	sub    esp,0x10
6500ce63:	xor    ecx,ecx
6500ce65:	push   ebx
6500ce66:	push   ebp
6500ce67:	mov    ebp,DWORD PTR [esp+0x1c]
6500ce6b:	push   esi
6500ce6c:	push   edi
6500ce6d:	mov    edi,eax
6500ce6f:	mov    ch,BYTE PTR [edi+0x3]
6500ce72:	movzx  edx,BYTE PTR [edi+0x1]
6500ce76:	mov    eax,DWORD PTR [ebp+0x4]
6500ce79:	movzx  esi,BYTE PTR [edi+0x9]
6500ce7d:	mov    cl,BYTE PTR [edi+0x2]
6500ce80:	movzx  ebx,BYTE PTR [edi+0xd]
6500ce84:	add    eax,0x4
6500ce87:	add    eax,0x4
6500ce8a:	add    eax,0x4
6500ce8d:	shl    ecx,0x8
6500ce90:	or     ecx,edx
6500ce92:	movzx  edx,BYTE PTR [edi]
6500ce95:	shl    ecx,0x8
6500ce98:	or     ecx,edx
6500ce9a:	xor    ecx,DWORD PTR [eax-0xc]
6500ce9d:	movzx  edx,BYTE PTR [edi+0x5]
6500cea1:	mov    DWORD PTR [esp+0x24],ecx
6500cea5:	xor    ecx,ecx
6500cea7:	mov    ch,BYTE PTR [edi+0x7]
6500ceaa:	add    eax,0x4
6500cead:	mov    cl,BYTE PTR [edi+0x6]
6500ceb0:	shl    ecx,0x8
6500ceb3:	or     ecx,edx
6500ceb5:	movzx  edx,BYTE PTR [edi+0x4]
6500ceb9:	shl    ecx,0x8
6500cebc:	or     ecx,edx
6500cebe:	xor    edx,edx
6500cec0:	mov    dh,BYTE PTR [edi+0xb]
6500cec3:	xor    ecx,DWORD PTR [eax-0xc]
6500cec6:	mov    dl,BYTE PTR [edi+0xa]
6500cec9:	shl    edx,0x8
6500cecc:	or     edx,esi
6500cece:	movzx  esi,BYTE PTR [edi+0x8]
6500ced2:	shl    edx,0x8
6500ced5:	or     edx,esi
6500ced7:	xor    edx,DWORD PTR [eax-0x8]
6500ceda:	mov    esi,edx
6500cedc:	xor    edx,edx
6500cede:	mov    dh,BYTE PTR [edi+0xf]
6500cee1:	mov    DWORD PTR [esp+0x10],esi
6500cee5:	mov    dl,BYTE PTR [edi+0xe]
6500cee8:	movzx  edi,BYTE PTR [edi+0xc]
6500ceec:	shl    edx,0x8
6500ceef:	or     edx,ebx
6500cef1:	shl    edx,0x8
6500cef4:	or     edx,edi
6500cef6:	xor    edx,DWORD PTR [eax-0x4]
6500cef9:	cmp    DWORD PTR [esp+0x28],0x0
6500cefe:	jne    0x6500d399
6500cf04:	mov    ebp,DWORD PTR [ebp+0x0]
6500cf07:	sar    ebp,1
6500cf09:	sub    ebp,0x1
6500cf0c:	test   ebp,ebp
6500cf0e:	jle    0x6500d13f
6500cf14:	mov    ebx,esi
6500cf16:	movzx  edi,dh
6500cf19:	mov    esi,DWORD PTR [edi*4+0x6502e990]
6500cf20:	mov    edi,ecx
6500cf22:	shr    edi,0x18
6500cf25:	shr    ebx,0x10
6500cf28:	and    ebx,0xff
6500cf2e:	xor    esi,DWORD PTR [ebx*4+0x6502e568]
6500cf35:	add    eax,0x4
6500cf38:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cf3f:	mov    edi,DWORD PTR [esp+0x24]
6500cf43:	and    edi,0xff
6500cf49:	mov    DWORD PTR [esp+0x28],esi
6500cf4d:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cf54:	movzx  edi,BYTE PTR [esp+0x25]
6500cf59:	xor    esi,DWORD PTR [eax-0x4]
6500cf5c:	add    eax,0x4
6500cf5f:	mov    DWORD PTR [esp+0x14],esi
6500cf63:	mov    esi,edx
6500cf65:	shr    esi,0x10
6500cf68:	and    esi,0xff
6500cf6e:	mov    esi,DWORD PTR [esi*4+0x6502e568]
6500cf75:	xor    esi,DWORD PTR [edi*4+0x6502e990]
6500cf7c:	mov    edi,DWORD PTR [esp+0x10]
6500cf80:	shr    edi,0x18
6500cf83:	mov    DWORD PTR [esp+0x28],esi
6500cf87:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cf8e:	mov    edi,ecx
6500cf90:	and    edi,0xff
6500cf96:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cf9d:	mov    edi,DWORD PTR [esp+0x24]
6500cfa1:	xor    esi,DWORD PTR [eax-0x4]
6500cfa4:	shr    edi,0x10
6500cfa7:	mov    DWORD PTR [esp+0x18],esi
6500cfab:	movzx  esi,ch
6500cfae:	mov    esi,DWORD PTR [esi*4+0x6502e990]
6500cfb5:	and    edi,0xff
6500cfbb:	xor    esi,DWORD PTR [edi*4+0x6502e568]
6500cfc2:	mov    edi,edx
6500cfc4:	shr    edi,0x18
6500cfc7:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cfce:	mov    edi,DWORD PTR [esp+0x10]
6500cfd2:	and    edi,0xff
6500cfd8:	mov    DWORD PTR [esp+0x28],esi
6500cfdc:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cfe3:	shr    ecx,0x10
6500cfe6:	xor    esi,DWORD PTR [eax]
6500cfe8:	and    ecx,0xff
6500cfee:	mov    DWORD PTR [esp+0x28],esi
6500cff2:	movzx  esi,BYTE PTR [esp+0x11]
6500cff7:	mov    ebx,DWORD PTR [esi*4+0x6502e990]
6500cffe:	xor    ebx,DWORD PTR [ecx*4+0x6502e568]
6500d005:	mov    ecx,DWORD PTR [esp+0x24]
6500d009:	mov    esi,DWORD PTR [esp+0x28]
6500d00d:	shr    ecx,0x18
6500d010:	xor    ebx,DWORD PTR [ecx*4+0x6502e168]
6500d017:	and    edx,0xff
6500d01d:	xor    ebx,DWORD PTR [edx*4+0x6502ed90]
6500d024:	add    eax,0x4
6500d027:	xor    ebx,DWORD PTR [eax]
6500d029:	mov    ecx,esi
6500d02b:	shr    ecx,0x10
6500d02e:	and    ecx,0xff
6500d034:	movzx  edx,bh
6500d037:	mov    edi,DWORD PTR [edx*4+0x6502e990]
6500d03e:	xor    edi,DWORD PTR [ecx*4+0x6502e568]
6500d045:	mov    edx,DWORD PTR [esp+0x18]
6500d049:	mov    ecx,edx
6500d04b:	shr    ecx,0x18
6500d04e:	xor    edi,DWORD PTR [ecx*4+0x6502e168]
6500d055:	mov    ecx,DWORD PTR [esp+0x14]
6500d059:	and    ecx,0xff
6500d05f:	xor    edi,DWORD PTR [ecx*4+0x6502ed90]
6500d066:	add    eax,0x4
6500d069:	xor    edi,DWORD PTR [eax]
6500d06b:	mov    ecx,ebx
6500d06d:	shr    ecx,0x10
6500d070:	mov    DWORD PTR [esp+0x24],edi
6500d074:	movzx  edi,BYTE PTR [esp+0x15]
6500d079:	add    eax,0x4
6500d07c:	and    ecx,0xff
6500d082:	mov    ecx,DWORD PTR [ecx*4+0x6502e568]
6500d089:	xor    ecx,DWORD PTR [edi*4+0x6502e990]
6500d090:	shr    esi,0x18
6500d093:	xor    ecx,DWORD PTR [esi*4+0x6502e168]
6500d09a:	mov    esi,edx
6500d09c:	and    esi,0xff
6500d0a2:	xor    ecx,DWORD PTR [esi*4+0x6502ed90]
6500d0a9:	mov    esi,DWORD PTR [esp+0x14]
6500d0ad:	xor    ecx,DWORD PTR [eax]
6500d0af:	movzx  edx,dh
6500d0b2:	mov    edx,DWORD PTR [edx*4+0x6502e990]
6500d0b9:	mov    edi,DWORD PTR [esp+0x18]
6500d0bd:	shr    esi,0x10
6500d0c0:	and    esi,0xff
6500d0c6:	xor    edx,DWORD PTR [esi*4+0x6502e568]
6500d0cd:	mov    esi,ebx
6500d0cf:	shr    esi,0x18
6500d0d2:	xor    edx,DWORD PTR [esi*4+0x6502e168]
6500d0d9:	mov    esi,DWORD PTR [esp+0x28]
6500d0dd:	and    esi,0xff
6500d0e3:	xor    edx,DWORD PTR [esi*4+0x6502ed90]
6500d0ea:	add    eax,0x4
6500d0ed:	xor    edx,DWORD PTR [eax]
6500d0ef:	shr    edi,0x10
6500d0f2:	mov    esi,edx
6500d0f4:	movzx  edx,BYTE PTR [esp+0x29]
6500d0f9:	mov    edx,DWORD PTR [edx*4+0x6502e990]
6500d100:	and    edi,0xff
6500d106:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500d10d:	mov    edi,DWORD PTR [esp+0x14]
6500d111:	shr    edi,0x18
6500d114:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500d11b:	and    ebx,0xff
6500d121:	xor    edx,DWORD PTR [ebx*4+0x6502ed90]
6500d128:	add    eax,0x4
6500d12b:	xor    edx,DWORD PTR [eax]
6500d12d:	sub    ebp,0x1
6500d130:	add    eax,0x4
6500d133:	test   ebp,ebp
6500d135:	mov    DWORD PTR [esp+0x10],esi
6500d139:	jg     0x6500cf14
6500d13f:	mov    ebx,esi
6500d141:	movzx  edi,dh
6500d144:	mov    esi,DWORD PTR [edi*4+0x6502e990]
6500d14b:	mov    edi,ecx
6500d14d:	shr    edi,0x18
6500d150:	shr    ebx,0x10
6500d153:	and    ebx,0xff
6500d159:	xor    esi,DWORD PTR [ebx*4+0x6502e568]
6500d160:	add    eax,0x4
6500d163:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d16a:	mov    edi,DWORD PTR [esp+0x24]
6500d16e:	mov    DWORD PTR [esp+0x28],esi
6500d172:	and    edi,0xff
6500d178:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d17f:	movzx  edi,BYTE PTR [esp+0x25]
6500d184:	xor    esi,DWORD PTR [eax-0x4]
6500d187:	add    eax,0x4
6500d18a:	mov    DWORD PTR [esp+0x14],esi
6500d18e:	mov    esi,edx
6500d190:	shr    esi,0x10
6500d193:	and    esi,0xff
6500d199:	mov    esi,DWORD PTR [esi*4+0x6502e568]
6500d1a0:	xor    esi,DWORD PTR [edi*4+0x6502e990]
6500d1a7:	mov    edi,DWORD PTR [esp+0x10]
6500d1ab:	shr    edi,0x18
6500d1ae:	mov    DWORD PTR [esp+0x28],esi
6500d1b2:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d1b9:	mov    edi,ecx
6500d1bb:	and    edi,0xff
6500d1c1:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d1c8:	mov    edi,DWORD PTR [esp+0x24]
6500d1cc:	xor    esi,DWORD PTR [eax-0x4]
6500d1cf:	shr    edi,0x10
6500d1d2:	mov    DWORD PTR [esp+0x18],esi
6500d1d6:	movzx  esi,ch
6500d1d9:	mov    esi,DWORD PTR [esi*4+0x6502e990]
6500d1e0:	and    edi,0xff
6500d1e6:	xor    esi,DWORD PTR [edi*4+0x6502e568]
6500d1ed:	mov    edi,edx
6500d1ef:	shr    edi,0x18
6500d1f2:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d1f9:	mov    edi,DWORD PTR [esp+0x10]
6500d1fd:	mov    DWORD PTR [esp+0x28],esi
6500d201:	and    edi,0xff
6500d207:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d20e:	shr    ecx,0x10
6500d211:	xor    esi,DWORD PTR [eax]
6500d213:	and    ecx,0xff
6500d219:	mov    DWORD PTR [esp+0x28],esi
6500d21d:	movzx  esi,BYTE PTR [esp+0x11]
6500d222:	mov    ebx,DWORD PTR [esi*4+0x6502e990]
6500d229:	xor    ebx,DWORD PTR [ecx*4+0x6502e568]
6500d230:	mov    ecx,DWORD PTR [esp+0x24]
6500d234:	mov    edi,DWORD PTR [esp+0x28]
6500d238:	shr    ecx,0x18
6500d23b:	xor    ebx,DWORD PTR [ecx*4+0x6502e168]
6500d242:	mov    ecx,DWORD PTR [esp+0x18]
6500d246:	and    edx,0xff
6500d24c:	xor    ebx,DWORD PTR [edx*4+0x6502ed90]
6500d253:	add    eax,0x4
6500d256:	xor    ebx,DWORD PTR [eax]
6500d258:	add    eax,0x4
6500d25b:	shr    ecx,0x18
6500d25e:	mov    DWORD PTR [esp+0x1c],eax
6500d262:	xor    eax,eax
6500d264:	mov    ah,BYTE PTR [ecx+0x65030190]
6500d26a:	mov    edx,edi
6500d26c:	shr    edx,0x10
6500d26f:	and    edx,0xff
6500d275:	movzx  edx,BYTE PTR [edx+0x65030190]
6500d27c:	movzx  ecx,bh
6500d27f:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d286:	xor    edx,eax
6500d288:	shl    edx,0x8
6500d28b:	xor    edx,ecx
6500d28d:	mov    ecx,DWORD PTR [esp+0x14]
6500d291:	and    ecx,0xff
6500d297:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d29e:	shl    edx,0x8
6500d2a1:	mov    DWORD PTR [esp+0x24],ebx
6500d2a5:	xor    edx,ecx
6500d2a7:	xor    ecx,ecx
6500d2a9:	shr    edi,0x18
6500d2ac:	mov    ch,BYTE PTR [edi+0x65030190]
6500d2b2:	mov    eax,DWORD PTR [esp+0x1c]
6500d2b6:	xor    edx,DWORD PTR [eax]
6500d2b8:	shr    ebx,0x10
6500d2bb:	and    ebx,0xff
6500d2c1:	movzx  esi,BYTE PTR [ebx+0x65030190]
6500d2c8:	xor    esi,ecx
6500d2ca:	mov    ecx,DWORD PTR [esp+0x14]
6500d2ce:	shl    esi,0x8
6500d2d1:	movzx  edi,ch
6500d2d4:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d2db:	xor    esi,edi
6500d2dd:	mov    edi,DWORD PTR [esp+0x18]
6500d2e1:	shl    esi,0x8
6500d2e4:	and    edi,0xff
6500d2ea:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d2f1:	xor    esi,edi
6500d2f3:	xor    esi,DWORD PTR [eax+0x4]
6500d2f6:	shr    ecx,0x10
6500d2f9:	mov    DWORD PTR [esp+0x1c],esi
6500d2fd:	and    ecx,0xff
6500d303:	movzx  esi,BYTE PTR [ecx+0x65030190]
6500d30a:	mov    ecx,DWORD PTR [esp+0x24]
6500d30e:	add    eax,0x4
6500d311:	shr    ecx,0x18
6500d314:	xor    ebx,ebx
6500d316:	mov    bh,BYTE PTR [ecx+0x65030190]
6500d31c:	mov    ecx,DWORD PTR [esp+0x18]
6500d320:	movzx  edi,ch
6500d323:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d32a:	xor    esi,ebx
6500d32c:	shl    esi,0x8
6500d32f:	xor    esi,edi
6500d331:	mov    edi,DWORD PTR [esp+0x28]
6500d335:	shl    esi,0x8
6500d338:	and    edi,0xff
6500d33e:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d345:	xor    esi,edi
6500d347:	xor    esi,DWORD PTR [eax+0x4]
6500d34a:	add    eax,0x4
6500d34d:	mov    DWORD PTR [esp+0x10],esi
6500d351:	mov    esi,DWORD PTR [esp+0x14]
6500d355:	shr    esi,0x18
6500d358:	shr    ecx,0x10
6500d35b:	xor    ebx,ebx
6500d35d:	mov    bh,BYTE PTR [esi+0x65030190]
6500d363:	movzx  esi,BYTE PTR [esp+0x29]
6500d368:	movzx  esi,BYTE PTR [esi+0x65030190]
6500d36f:	and    ecx,0xff
6500d375:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d37c:	xor    ecx,ebx
6500d37e:	shl    ecx,0x8
6500d381:	xor    ecx,esi
6500d383:	mov    esi,DWORD PTR [esp+0x24]
6500d387:	and    esi,0xff
6500d38d:	movzx  esi,BYTE PTR [esi+0x65030190]
6500d394:	jmp    0x6500d82c
6500d399:	mov    edi,DWORD PTR [ebp+0x0]
6500d39c:	sar    edi,1
6500d39e:	sub    edi,0x1
6500d3a1:	test   edi,edi
6500d3a3:	mov    DWORD PTR [esp+0x1c],edi
6500d3a7:	jle    0x6500d5e3
6500d3ad:	lea    ecx,[ecx+0x0]
6500d3b0:	shr    esi,0x10
6500d3b3:	and    esi,0xff
6500d3b9:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d3c0:	movzx  edi,ch
6500d3c3:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d3ca:	mov    edi,edx
6500d3cc:	shr    edi,0x18
6500d3cf:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d3d6:	mov    edi,DWORD PTR [esp+0x24]
6500d3da:	mov    DWORD PTR [esp+0x28],esi
6500d3de:	and    edi,0xff
6500d3e4:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d3eb:	movzx  edi,BYTE PTR [esp+0x11]
6500d3f0:	xor    esi,DWORD PTR [eax]
6500d3f2:	add    eax,0x4
6500d3f5:	mov    DWORD PTR [esp+0x14],esi
6500d3f9:	mov    esi,edx
6500d3fb:	shr    esi,0x10
6500d3fe:	and    esi,0xff
6500d404:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d40b:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d412:	mov    edi,DWORD PTR [esp+0x24]
6500d416:	mov    DWORD PTR [esp+0x28],esi
6500d41a:	shr    edi,0x18
6500d41d:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d424:	mov    edi,ecx
6500d426:	and    edi,0xff
6500d42c:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d433:	mov    edi,DWORD PTR [esp+0x24]
6500d437:	xor    esi,DWORD PTR [eax]
6500d439:	shr    edi,0x10
6500d43c:	mov    DWORD PTR [esp+0x18],esi
6500d440:	and    edi,0xff
6500d446:	movzx  esi,dh
6500d449:	mov    esi,DWORD PTR [esi*4+0x6502f990]
6500d450:	xor    esi,DWORD PTR [edi*4+0x6502f590]
6500d457:	mov    edi,ecx
6500d459:	shr    edi,0x18
6500d45c:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d463:	mov    edi,DWORD PTR [esp+0x10]
6500d467:	mov    DWORD PTR [esp+0x28],esi
6500d46b:	and    edi,0xff
6500d471:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d478:	add    eax,0x4
6500d47b:	xor    esi,DWORD PTR [eax]
6500d47d:	shr    ecx,0x10
6500d480:	mov    DWORD PTR [esp+0x28],esi
6500d484:	movzx  esi,BYTE PTR [esp+0x25]
6500d489:	and    ecx,0xff
6500d48f:	mov    ebx,DWORD PTR [ecx*4+0x6502f590]
6500d496:	xor    ebx,DWORD PTR [esi*4+0x6502f990]
6500d49d:	mov    ecx,DWORD PTR [esp+0x10]
6500d4a1:	shr    ecx,0x18
6500d4a4:	xor    ebx,DWORD PTR [ecx*4+0x6502f190]
6500d4ab:	mov    ecx,DWORD PTR [esp+0x18]
6500d4af:	and    edx,0xff
6500d4b5:	xor    ebx,DWORD PTR [edx*4+0x6502fd90]
6500d4bc:	mov    edx,DWORD PTR [esp+0x28]
6500d4c0:	xor    ebx,DWORD PTR [eax+0x4]
6500d4c3:	add    eax,0x4
6500d4c6:	mov    esi,edx
6500d4c8:	shr    esi,0x10
6500d4cb:	and    esi,0xff
6500d4d1:	mov    ebp,DWORD PTR [esi*4+0x6502f590]
6500d4d8:	movzx  edi,ch
6500d4db:	xor    ebp,DWORD PTR [edi*4+0x6502f990]
6500d4e2:	mov    esi,ebx
6500d4e4:	shr    esi,0x18
6500d4e7:	xor    ebp,DWORD PTR [esi*4+0x6502f190]
6500d4ee:	mov    esi,DWORD PTR [esp+0x14]
6500d4f2:	mov    edi,esi
6500d4f4:	and    edi,0xff
6500d4fa:	xor    ebp,DWORD PTR [edi*4+0x6502fd90]
6500d501:	add    eax,0x4
6500d504:	xor    ebp,DWORD PTR [eax]
6500d506:	mov    edi,ebx
6500d508:	shr    edi,0x10
6500d50b:	add    eax,0x4
6500d50e:	mov    DWORD PTR [esp+0x24],ebp
6500d512:	and    edi,0xff
6500d518:	movzx  edx,dh
6500d51b:	mov    edi,DWORD PTR [edi*4+0x6502f590]
6500d522:	xor    edi,DWORD PTR [edx*4+0x6502f990]
6500d529:	mov    edx,esi
6500d52b:	shr    edx,0x18
6500d52e:	xor    edi,DWORD PTR [edx*4+0x6502f190]
6500d535:	shr    esi,0x10
6500d538:	and    esi,0xff
6500d53e:	movzx  edx,bh
6500d541:	mov    edx,DWORD PTR [edx*4+0x6502f990]
6500d548:	xor    edx,DWORD PTR [esi*4+0x6502f590]
6500d54f:	mov    esi,DWORD PTR [esp+0x18]
6500d553:	shr    esi,0x18
6500d556:	xor    edx,DWORD PTR [esi*4+0x6502f190]
6500d55d:	mov    esi,DWORD PTR [esp+0x28]
6500d561:	and    ecx,0xff
6500d567:	xor    edi,DWORD PTR [ecx*4+0x6502fd90]
6500d56e:	and    esi,0xff
6500d574:	xor    edi,DWORD PTR [eax]
6500d576:	xor    edx,DWORD PTR [esi*4+0x6502fd90]
6500d57d:	mov    ecx,edi
6500d57f:	xor    edx,DWORD PTR [eax+0x4]
6500d582:	mov    edi,DWORD PTR [esp+0x18]
6500d586:	add    eax,0x4
6500d589:	shr    edi,0x10
6500d58c:	and    edi,0xff
6500d592:	mov    ebp,DWORD PTR [edi*4+0x6502f590]
6500d599:	mov    edi,DWORD PTR [esp+0x28]
6500d59d:	mov    esi,edx
6500d59f:	movzx  edx,BYTE PTR [esp+0x15]
6500d5a4:	xor    ebp,DWORD PTR [edx*4+0x6502f990]
6500d5ab:	shr    edi,0x18
6500d5ae:	xor    ebp,DWORD PTR [edi*4+0x6502f190]
6500d5b5:	mov    edi,DWORD PTR [esp+0x1c]
6500d5b9:	and    ebx,0xff
6500d5bf:	xor    ebp,DWORD PTR [ebx*4+0x6502fd90]
6500d5c6:	add    eax,0x4
6500d5c9:	xor    ebp,DWORD PTR [eax]
6500d5cb:	sub    edi,0x1
6500d5ce:	add    eax,0x4
6500d5d1:	test   edi,edi
6500d5d3:	mov    DWORD PTR [esp+0x10],esi
6500d5d7:	mov    edx,ebp
6500d5d9:	mov    DWORD PTR [esp+0x1c],edi
6500d5dd:	jg     0x6500d3b0
6500d5e3:	shr    esi,0x10
6500d5e6:	and    esi,0xff
6500d5ec:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d5f3:	movzx  edi,ch
6500d5f6:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d5fd:	mov    edi,edx
6500d5ff:	shr    edi,0x18
6500d602:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d609:	mov    edi,DWORD PTR [esp+0x24]
6500d60d:	mov    DWORD PTR [esp+0x28],esi
6500d611:	and    edi,0xff
6500d617:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d61e:	movzx  edi,BYTE PTR [esp+0x11]
6500d623:	xor    esi,DWORD PTR [eax]
6500d625:	add    eax,0x4
6500d628:	mov    DWORD PTR [esp+0x14],esi
6500d62c:	mov    esi,edx
6500d62e:	shr    esi,0x10
6500d631:	and    esi,0xff
6500d637:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d63e:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d645:	mov    edi,DWORD PTR [esp+0x24]
6500d649:	shr    edi,0x18
6500d64c:	mov    DWORD PTR [esp+0x28],esi
6500d650:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d657:	mov    edi,ecx
6500d659:	and    edi,0xff
6500d65f:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d666:	mov    edi,DWORD PTR [esp+0x24]
6500d66a:	xor    esi,DWORD PTR [eax]
6500d66c:	shr    edi,0x10
6500d66f:	mov    DWORD PTR [esp+0x18],esi
6500d673:	movzx  esi,dh
6500d676:	mov    esi,DWORD PTR [esi*4+0x6502f990]
6500d67d:	and    edi,0xff
6500d683:	xor    esi,DWORD PTR [edi*4+0x6502f590]
6500d68a:	mov    edi,ecx
6500d68c:	shr    edi,0x18
6500d68f:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d696:	mov    edi,DWORD PTR [esp+0x10]
6500d69a:	mov    DWORD PTR [esp+0x28],esi
6500d69e:	and    edi,0xff
6500d6a4:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d6ab:	movzx  edi,BYTE PTR [esp+0x25]
6500d6b0:	xor    esi,DWORD PTR [eax+0x4]
6500d6b3:	shr    ecx,0x10
6500d6b6:	and    ecx,0xff
6500d6bc:	add    eax,0x4
6500d6bf:	mov    DWORD PTR [esp+0x28],esi
6500d6c3:	mov    esi,DWORD PTR [ecx*4+0x6502f590]
6500d6ca:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d6d1:	mov    ecx,DWORD PTR [esp+0x10]
6500d6d5:	and    edx,0xff
6500d6db:	shr    ecx,0x18
6500d6de:	xor    esi,DWORD PTR [ecx*4+0x6502f190]
6500d6e5:	add    eax,0x4
6500d6e8:	xor    esi,DWORD PTR [edx*4+0x6502fd90]
6500d6ef:	mov    edx,DWORD PTR [esp+0x28]
6500d6f3:	xor    esi,DWORD PTR [eax]
6500d6f5:	shr    edx,0x10
6500d6f8:	and    edx,0xff
6500d6fe:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500d705:	mov    ecx,esi
6500d707:	shr    ecx,0x18
6500d70a:	xor    ebx,ebx
6500d70c:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d712:	movzx  ecx,BYTE PTR [esp+0x19]
6500d717:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d71e:	xor    edx,ebx
6500d720:	shl    edx,0x8
6500d723:	xor    edx,ecx
6500d725:	mov    ecx,DWORD PTR [esp+0x14]
6500d729:	mov    edi,ecx
6500d72b:	and    edi,0xff
6500d731:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500d738:	shl    edx,0x8
6500d73b:	add    eax,0x4
6500d73e:	xor    edx,edi
6500d740:	xor    edx,DWORD PTR [eax]
6500d742:	mov    DWORD PTR [esp+0x24],esi
6500d746:	add    eax,0x4
6500d749:	shr    esi,0x10
6500d74c:	and    esi,0xff
6500d752:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d759:	shr    ecx,0x18
6500d75c:	xor    ebx,ebx
6500d75e:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d764:	movzx  ecx,BYTE PTR [esp+0x29]
6500d769:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d770:	xor    esi,ebx
6500d772:	shl    esi,0x8
6500d775:	xor    esi,ecx
6500d777:	mov    ecx,DWORD PTR [esp+0x18]
6500d77b:	mov    edi,ecx
6500d77d:	shl    esi,0x8
6500d780:	and    edi,0xff
6500d786:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500d78d:	xor    esi,edi
6500d78f:	xor    esi,DWORD PTR [eax]
6500d791:	mov    edi,DWORD PTR [esp+0x28]
6500d795:	mov    DWORD PTR [esp+0x1c],esi
6500d799:	mov    esi,DWORD PTR [esp+0x14]
6500d79d:	shr    ecx,0x18
6500d7a0:	shr    esi,0x10
6500d7a3:	and    esi,0xff
6500d7a9:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d7b0:	xor    ebx,ebx
6500d7b2:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d7b8:	movzx  ecx,BYTE PTR [esp+0x25]
6500d7bd:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7c4:	xor    esi,ebx
6500d7c6:	shl    esi,0x8
6500d7c9:	xor    esi,ecx
6500d7cb:	mov    ecx,edi
6500d7cd:	and    ecx,0xff
6500d7d3:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7da:	shl    esi,0x8
6500d7dd:	xor    esi,ecx
6500d7df:	xor    esi,DWORD PTR [eax+0x4]
6500d7e2:	mov    ecx,DWORD PTR [esp+0x18]
6500d7e6:	shr    ecx,0x10
6500d7e9:	xor    ebx,ebx
6500d7eb:	add    eax,0x4
6500d7ee:	shr    edi,0x18
6500d7f1:	mov    bh,BYTE PTR [edi+0x6502e068]
6500d7f7:	and    ecx,0xff
6500d7fd:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d804:	mov    DWORD PTR [esp+0x10],esi
6500d808:	movzx  esi,BYTE PTR [esp+0x15]
6500d80d:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d814:	xor    ecx,ebx
6500d816:	shl    ecx,0x8
6500d819:	xor    ecx,esi
6500d81b:	mov    esi,DWORD PTR [esp+0x24]
6500d81f:	and    esi,0xff
6500d825:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d82c:	shl    ecx,0x8
6500d82f:	xor    ecx,esi
6500d831:	xor    ecx,DWORD PTR [eax+0x4]
6500d834:	mov    esi,DWORD PTR [esp+0x2c]
6500d838:	mov    eax,edx
6500d83a:	shr    eax,0x8
6500d83d:	mov    BYTE PTR [esi+0x1],al
6500d840:	mov    eax,edx
6500d842:	mov    BYTE PTR [esi],dl
6500d844:	shr    edx,0x18
6500d847:	shr    eax,0x10
6500d84a:	mov    BYTE PTR [esi+0x3],dl
6500d84d:	mov    BYTE PTR [esi+0x2],al
6500d850:	mov    eax,DWORD PTR [esp+0x1c]
6500d854:	mov    edx,eax
6500d856:	shr    edx,0x8
6500d859:	mov    BYTE PTR [esi+0x5],dl
6500d85c:	mov    BYTE PTR [esi+0x4],al
6500d85f:	mov    edx,eax
6500d861:	shr    edx,0x10
6500d864:	shr    eax,0x18
6500d867:	mov    BYTE PTR [esi+0x6],dl
6500d86a:	mov    BYTE PTR [esi+0x7],al
6500d86d:	mov    eax,DWORD PTR [esp+0x10]
6500d871:	mov    edx,eax
6500d873:	shr    edx,0x8
6500d876:	mov    BYTE PTR [esi+0x9],dl
6500d879:	mov    edx,eax
6500d87b:	mov    BYTE PTR [esi+0x8],al
6500d87e:	shr    edx,0x10
6500d881:	shr    eax,0x18
6500d884:	mov    BYTE PTR [esi+0xa],dl
6500d887:	mov    BYTE PTR [esi+0xb],al
6500d88a:	mov    eax,ecx
6500d88c:	mov    edx,ecx
6500d88e:	mov    BYTE PTR [esi+0xc],cl
6500d891:	shr    eax,0x8
6500d894:	shr    edx,0x10
6500d897:	pop    edi
6500d898:	shr    ecx,0x18
6500d89b:	mov    BYTE PTR [esi+0xd],al
6500d89e:	mov    BYTE PTR [esi+0xe],dl
6500d8a1:	mov    BYTE PTR [esi+0xf],cl
6500d8a4:	pop    esi
6500d8a5:	pop    ebp
6500d8a6:	pop    ebx
6500d8a7:	add    esp,0x10
6500d8aa:	ret    
6500d8ab:	int3   
6500d8ac:	int3   
6500d8ad:	int3   
6500d8ae:	int3   
6500d8af:	int3   
6500d8b0:	sub    esp,0x30
6500d8b3:	mov    eax,ds:0x6502c09c
6500d8b8:	xor    eax,esp
6500d8ba:	mov    DWORD PTR [esp+0x2c],eax
6500d8be:	cmp    DWORD PTR [esp+0x38],0x0
6500d8c3:	mov    eax,DWORD PTR [esp+0x34]
6500d8c7:	push   ebx
6500d8c8:	push   ebp
6500d8c9:	mov    ebp,DWORD PTR [esp+0x44]
6500d8cd:	push   esi
6500d8ce:	mov    esi,DWORD PTR [esp+0x4c]
6500d8d2:	push   edi
6500d8d3:	mov    edi,edx
6500d8d5:	mov    DWORD PTR [esp+0x24],eax
6500d8d9:	jne    0x6500d997
6500d8df:	test   ecx,ecx
6500d8e1:	jle    0x6500da76
6500d8e7:	lea    eax,[ecx-0x1]
6500d8ea:	mov    ebx,ebp
6500d8ec:	shr    eax,0x4
6500d8ef:	sub    ebx,esi
6500d8f1:	add    eax,0x1
6500d8f4:	mov    DWORD PTR [esp+0x10],eax
6500d8f8:	mov    edx,DWORD PTR [edi+0x4]
6500d8fb:	mov    ecx,DWORD PTR [edi]
6500d8fd:	mov    eax,DWORD PTR [edi+0x8]
6500d900:	push   esi
6500d901:	mov    DWORD PTR [esp+0x34],edx
6500d905:	mov    edx,DWORD PTR [esp+0x28]
6500d909:	mov    DWORD PTR [esp+0x30],ecx
6500d90d:	mov    ecx,DWORD PTR [edi+0xc]
6500d910:	mov    DWORD PTR [esp+0x38],eax
6500d914:	push   0x0
6500d916:	push   edx
6500d917:	mov    eax,edi
6500d919:	mov    DWORD PTR [esp+0x44],ecx
6500d91d:	call   0x6500ce60
6500d922:	mov    eax,esi
6500d924:	add    esp,0xc
6500d927:	lea    ecx,[ebp+0x2]
6500d92a:	mov    esi,0x4
6500d92f:	nop
6500d930:	movzx  edx,BYTE PTR [ebx+eax*1]
6500d934:	xor    BYTE PTR [eax],dl
6500d936:	movzx  edx,BYTE PTR [ecx-0x1]
6500d93a:	xor    BYTE PTR [eax+0x1],dl
6500d93d:	movzx  edx,BYTE PTR [ecx]
6500d940:	xor    BYTE PTR [eax+0x2],dl
6500d943:	movzx  edx,BYTE PTR [ecx+0x1]
6500d947:	xor    BYTE PTR [eax+0x3],dl
6500d94a:	add    eax,0x4
6500d94d:	add    ecx,0x4
6500d950:	sub    esi,0x1
6500d953:	jne    0x6500d930
6500d955:	mov    ecx,DWORD PTR [esp+0x2c]
6500d959:	mov    edx,DWORD PTR [esp+0x30]
6500d95d:	mov    DWORD PTR [ebp+0x0],ecx
6500d960:	mov    ecx,DWORD PTR [esp+0x34]
6500d964:	mov    DWORD PTR [ebp+0x4],edx
6500d967:	mov    edx,DWORD PTR [esp+0x38]
6500d96b:	add    edi,0x10
6500d96e:	sub    ebx,0x10
6500d971:	sub    DWORD PTR [esp+0x10],0x1
6500d976:	mov    DWORD PTR [ebp+0x8],ecx
6500d979:	mov    DWORD PTR [ebp+0xc],edx
6500d97c:	mov    esi,eax
6500d97e:	jne    0x6500d8f8
6500d984:	pop    edi
6500d985:	pop    esi
6500d986:	pop    ebp
6500d987:	pop    ebx
6500d988:	mov    ecx,DWORD PTR [esp+0x2c]
6500d98c:	xor    ecx,esp
6500d98e:	call   0x6501292c
6500d993:	add    esp,0x30
6500d996:	ret    
6500d997:	test   ecx,ecx
6500d999:	jle    0x6500da76
6500d99f:	mov    eax,ebp
6500d9a1:	sub    eax,esi
6500d9a3:	mov    DWORD PTR [esp+0x10],eax
6500d9a7:	mov    eax,ebp
6500d9a9:	sub    eax,edi
6500d9ab:	mov    DWORD PTR [esp+0x14],eax
6500d9af:	lea    eax,[ecx-0x1]
6500d9b2:	shr    eax,0x4
6500d9b5:	add    eax,0x1
6500d9b8:	mov    DWORD PTR [esp+0x1c],eax
6500d9bc:	lea    esp,[esp+0x0]
6500d9c0:	lea    eax,[ebp+0x3]
6500d9c3:	mov    edx,esi
6500d9c5:	sub    edx,edi
6500d9c7:	mov    DWORD PTR [esp+0x20],eax
6500d9cb:	lea    ecx,[esi+0x1]
6500d9ce:	mov    eax,edi
6500d9d0:	mov    DWORD PTR [esp+0x28],edx
6500d9d4:	mov    DWORD PTR [esp+0x18],0x4
6500d9dc:	jmp    0x6500d9e4
6500d9de:	mov    edi,edi
6500d9e0:	mov    edx,DWORD PTR [esp+0x28]
6500d9e4:	mov    ebx,DWORD PTR [esp+0x14]
6500d9e8:	movzx  ebx,BYTE PTR [eax+ebx*1]
6500d9ec:	xor    bl,BYTE PTR [eax]
6500d9ee:	add    eax,0x4
6500d9f1:	mov    BYTE PTR [edx+eax*1-0x4],bl
6500d9f5:	mov    edx,DWORD PTR [esp+0x10]
6500d9f9:	mov    dl,BYTE PTR [ecx+edx*1]
6500d9fc:	xor    dl,BYTE PTR [eax-0x3]
6500d9ff:	add    ecx,0x4
6500da02:	mov    BYTE PTR [ecx-0x4],dl
6500da05:	movzx  ebx,BYTE PTR [eax-0x2]
6500da09:	mov    edx,DWORD PTR [esp+0x20]
6500da0d:	xor    bl,BYTE PTR [edx-0x1]
6500da10:	add    edx,0x4
6500da13:	mov    BYTE PTR [ecx-0x3],bl
6500da16:	movzx  ebx,BYTE PTR [eax-0x1]
6500da1a:	xor    bl,BYTE PTR [edx-0x4]
6500da1d:	mov    DWORD PTR [esp+0x20],edx
6500da21:	mov    BYTE PTR [ecx-0x2],bl
6500da24:	mov    ebx,0x1
6500da29:	sub    DWORD PTR [esp+0x18],ebx
6500da2d:	jne    0x6500d9e0
6500da2f:	mov    eax,DWORD PTR [esp+0x48]
6500da33:	mov    ecx,DWORD PTR [esp+0x24]
6500da37:	push   esi
6500da38:	push   eax
6500da39:	push   ecx
6500da3a:	mov    eax,esi
6500da3c:	call   0x6500ce60
6500da41:	mov    edx,DWORD PTR [esi]
6500da43:	mov    DWORD PTR [ebp+0x0],edx
6500da46:	mov    eax,DWORD PTR [esi+0x4]
6500da49:	mov    DWORD PTR [ebp+0x4],eax
6500da4c:	mov    ecx,DWORD PTR [esi+0x8]
6500da4f:	mov    eax,0x10
6500da54:	sub    DWORD PTR [esp+0x20],eax
6500da58:	sub    DWORD PTR [esp+0x1c],eax
6500da5c:	mov    DWORD PTR [ebp+0x8],ecx
6500da5f:	mov    edx,DWORD PTR [esi+0xc]
6500da62:	add    esp,0xc
6500da65:	add    edi,eax
6500da67:	add    esi,eax
6500da69:	sub    DWORD PTR [esp+0x1c],ebx
6500da6d:	mov    DWORD PTR [ebp+0xc],edx
6500da70:	jne    0x6500d9c0
6500da76:	mov    ecx,DWORD PTR [esp+0x3c]
6500da7a:	pop    edi
6500da7b:	pop    esi
6500da7c:	pop    ebp
6500da7d:	pop    ebx
6500da7e:	xor    ecx,esp
6500da80:	call   0x6501292c
6500da85:	add    esp,0x30
6500da88:	ret    
6500da89:	int3   
6500da8a:	int3   
6500da8b:	int3   
6500da8c:	int3   
6500da8d:	int3   
6500da8e:	int3   
6500da8f:	int3   
6500da90:	push   0xffffffff
6500da92:	push   0x6502232b
6500da97:	mov    eax,fs:0x0
6500da9d:	push   eax
6500da9e:	sub    esp,0x138
6500daa4:	mov    eax,ds:0x6502c09c
6500daa9:	xor    eax,esp
6500daab:	mov    DWORD PTR [esp+0x134],eax
6500dab2:	push   ebp
6500dab3:	push   esi
6500dab4:	push   edi
6500dab5:	mov    eax,ds:0x6502c09c
6500daba:	xor    eax,esp
6500dabc:	push   eax
6500dabd:	lea    eax,[esp+0x148]
6500dac4:	mov    fs:0x0,eax
6500daca:	mov    ebp,DWORD PTR [esp+0x15c]
6500dad1:	mov    eax,DWORD PTR [esp+0x158]
6500dad8:	mov    DWORD PTR [esp+0x14],eax
6500dadc:	lea    esi,[ebp+0x8]
6500dadf:	mov    eax,esi
6500dae1:	and    eax,0xf
6500dae4:	mov    DWORD PTR [esp+0x18],ecx
6500dae8:	mov    DWORD PTR [esp+0x10],0x0
6500daf0:	je     0x6500dafb
6500daf2:	mov    edx,0x10
6500daf7:	sub    edx,eax
6500daf9:	add    esi,edx
6500dafb:	push   esi
6500dafc:	call   0x650120cd
6500db01:	mov    edi,eax
6500db03:	mov    DWORD PTR [esp+0x14],edi
6500db07:	push   esi
6500db08:	mov    DWORD PTR [esp+0x158],0x0
6500db13:	call   0x650120cd
6500db18:	push   esi
6500db19:	push   0x0
6500db1b:	push   edi
6500db1c:	mov    DWORD PTR [ebx],eax
6500db1e:	call   0x65012fb0
6500db23:	mov    eax,DWORD PTR [esp+0x28]
6500db27:	push   ebp
6500db28:	push   eax
6500db29:	lea    ecx,[edi+0x8]
6500db2c:	mov    DWORD PTR [edi],0x52514f4b
6500db32:	push   ecx
6500db33:	mov    DWORD PTR [edi+0x4],ebp
6500db36:	call   0x650141e0
6500db3b:	xor    eax,eax
6500db3d:	mov    DWORD PTR [esp+0x154],eax
6500db44:	mov    DWORD PTR [esp+0x158],eax
6500db4b:	mov    DWORD PTR [esp+0x15c],eax
6500db52:	mov    DWORD PTR [esp+0x160],eax
6500db59:	lea    eax,[esp+0x3c]
6500db5d:	call   0x6500c770
6500db62:	mov    eax,DWORD PTR [ebx]
6500db64:	push   eax
6500db65:	lea    edx,[esp+0x158]
6500db6c:	push   edx
6500db6d:	lea    eax,[esp+0x44]
6500db71:	push   0x1
6500db73:	push   eax
6500db74:	mov    edx,edi
6500db76:	mov    ecx,esi
6500db78:	call   0x6500d8b0
6500db7d:	mov    ecx,DWORD PTR [esp+0x48]
6500db81:	push   0x0
6500db83:	mov    DWORD PTR [ecx],esi
6500db85:	call   0x650120d2
6500db8a:	push   edi
6500db8b:	call   0x650120d2
6500db90:	add    esp,0x38
6500db93:	mov    eax,ebx
6500db95:	mov    ecx,DWORD PTR [esp+0x148]
6500db9c:	mov    DWORD PTR fs:0x0,ecx
6500dba3:	pop    ecx
6500dba4:	pop    edi
6500dba5:	pop    esi
6500dba6:	pop    ebp
6500dba7:	mov    ecx,DWORD PTR [esp+0x134]
6500dbae:	xor    ecx,esp
6500dbb0:	call   0x6501292c
6500dbb5:	add    esp,0x144
6500dbbb:	ret    
6500dbbc:	int3   
6500dbbd:	int3   
6500dbbe:	int3   
6500dbbf:	int3   
6500dbc0:	sub    esp,0x13c
6500dbc6:	mov    eax,ds:0x6502c09c
6500dbcb:	xor    eax,esp
6500dbcd:	mov    DWORD PTR [esp+0x134],eax
6500dbd4:	mov    eax,DWORD PTR [esp+0x144]
6500dbdb:	push   ebp
6500dbdc:	mov    ebp,DWORD PTR [esp+0x144]
6500dbe3:	mov    DWORD PTR [esp+0x8],eax
6500dbe7:	xor    eax,eax
6500dbe9:	test   bl,0xf
6500dbec:	push   esi
6500dbed:	mov    DWORD PTR [esp+0x8],eax
6500dbf1:	je     0x6500dbff
6500dbf3:	mov    DWORD PTR [esp+0x8],eax
6500dbf7:	mov    DWORD PTR [edi],eax
6500dbf9:	push   eax
6500dbfa:	jmp    0x6500dc9f
6500dbff:	push   ebx
6500dc00:	call   0x650120cd
6500dc05:	mov    esi,eax
6500dc07:	xor    eax,eax
6500dc09:	mov    DWORD PTR [esp+0x130],eax
6500dc10:	mov    DWORD PTR [esp+0x134],eax
6500dc17:	mov    DWORD PTR [esp+0x138],eax
6500dc1e:	mov    DWORD PTR [esp+0x13c],eax
6500dc25:	add    esp,0x4
6500dc28:	lea    eax,[esp+0x10]
6500dc2c:	call   0x6500cc80
6500dc31:	push   esi
6500dc32:	lea    ecx,[esp+0x130]
6500dc39:	push   ecx
6500dc3a:	lea    edx,[esp+0x18]
6500dc3e:	push   0x0
6500dc40:	push   edx
6500dc41:	mov    edx,ebp
6500dc43:	mov    ecx,ebx
6500dc45:	call   0x6500d8b0
6500dc4a:	add    esp,0x10
6500dc4d:	cmp    DWORD PTR [esi],0x52534f4b
6500dc53:	je     0x6500dc7a
6500dc55:	push   0x0
6500dc57:	mov    DWORD PTR [esp+0xc],0x0
6500dc5f:	mov    DWORD PTR [edi],0x0
6500dc65:	call   0x650120d2
6500dc6a:	add    esp,0x4
6500dc6d:	push   0x0
6500dc6f:	call   0x650120d2
6500dc74:	add    esp,0x4
6500dc77:	push   esi
6500dc78:	jmp    0x6500dc9f
6500dc7a:	mov    eax,DWORD PTR [esi+0x4]
6500dc7d:	mov    ecx,DWORD PTR [esp+0xc]
6500dc81:	push   eax
6500dc82:	lea    edx,[esi+0x8]
6500dc85:	push   edx
6500dc86:	push   esi
6500dc87:	mov    DWORD PTR [ecx],eax
6500dc89:	call   0x650138f0
6500dc8e:	add    esp,0xc
6500dc91:	push   0x0
6500dc93:	mov    DWORD PTR [edi],esi
6500dc95:	call   0x650120d2
6500dc9a:	add    esp,0x4
6500dc9d:	push   0x0
6500dc9f:	call   0x650120d2
6500dca4:	mov    ecx,DWORD PTR [esp+0x140]
6500dcab:	add    esp,0x4
6500dcae:	pop    esi
6500dcaf:	pop    ebp
6500dcb0:	xor    ecx,esp
6500dcb2:	mov    eax,edi
6500dcb4:	call   0x6501292c
6500dcb9:	add    esp,0x13c
6500dcbf:	ret    
6500dcc0:	push   esi
6500dcc1:	push   0x0
6500dcc3:	push   0x1
6500dcc5:	push   0x65030298
6500dcca:	call   DWORD PTR ds:0x65024084
6500dcd0:	test   eax,eax
6500dcd2:	jne    0x6500dd2c
6500dcd4:	push   0x650284f0
6500dcd9:	push   0xc
6500dcdb:	push   0x65028518
6500dce0:	call   0x65006a60
6500dce5:	push   0x65028528
6500dcea:	push   0x8
6500dcec:	push   0x65028560
6500dcf1:	mov    esi,eax
6500dcf3:	call   0x65006d50
6500dcf8:	add    esp,0x18
6500dcfb:	push   eax
6500dcfc:	call   DWORD PTR ds:0x65024058
6500dd02:	add    DWORD PTR ds:0x6502d37c,0x1
6500dd09:	test   eax,eax
6500dd0b:	je     0x6500dd23
6500dd0d:	push   esi
6500dd0e:	push   eax
6500dd0f:	call   DWORD PTR ds:0x6502408c
6500dd15:	add    DWORD PTR ds:0x6502d380,0x1
6500dd1c:	mov    ds:0x6503037c,eax
6500dd21:	pop    esi
6500dd22:	ret    
6500dd23:	xor    eax,eax
6500dd25:	mov    ds:0x6503037c,eax
6500dd2a:	pop    esi
6500dd2b:	ret    
6500dd2c:	mov    eax,ds:0x6503037c
6500dd31:	pop    esi
6500dd32:	ret    
6500dd33:	int3   
6500dd34:	int3   
6500dd35:	int3   
6500dd36:	int3   
6500dd37:	int3   
6500dd38:	int3   
6500dd39:	int3   
6500dd3a:	int3   
6500dd3b:	int3   
6500dd3c:	int3   
6500dd3d:	int3   
6500dd3e:	int3   
6500dd3f:	int3   
6500dd40:	push   ebp
6500dd41:	mov    ebp,esp
6500dd43:	and    esp,0xfffffff8
6500dd46:	push   ecx
6500dd47:	push   esi
6500dd48:	push   0x0
6500dd4a:	push   0x1
6500dd4c:	push   0x6503029c
6500dd51:	call   DWORD PTR ds:0x65024084
6500dd57:	test   eax,eax
6500dd59:	jne    0x6500ddb9
6500dd5b:	push   0x65028574
6500dd60:	push   0xe
6500dd62:	push   0x650285a8
6500dd67:	call   0x65006a60
6500dd6c:	push   0x650285b8
6500dd71:	push   0x8
6500dd73:	push   0x65028560
6500dd78:	mov    esi,eax
6500dd7a:	call   0x65006d50
6500dd7f:	add    esp,0x18
6500dd82:	push   eax
6500dd83:	call   DWORD PTR ds:0x65024058
6500dd89:	add    DWORD PTR ds:0x6502d37c,0x1
6500dd90:	test   eax,eax
6500dd92:	je     0x6500ddad
6500dd94:	push   esi
6500dd95:	push   eax
6500dd96:	call   DWORD PTR ds:0x6502408c
6500dd9c:	add    DWORD PTR ds:0x6502d380,0x1
6500dda3:	mov    ds:0x65030380,eax
6500dda8:	pop    esi
6500dda9:	mov    esp,ebp
6500ddab:	pop    ebp
6500ddac:	ret    
6500ddad:	xor    eax,eax
6500ddaf:	mov    ds:0x65030380,eax
6500ddb4:	pop    esi
6500ddb5:	mov    esp,ebp
6500ddb7:	pop    ebp
6500ddb8:	ret    
6500ddb9:	mov    eax,ds:0x65030380
6500ddbe:	pop    esi
6500ddbf:	mov    esp,ebp
6500ddc1:	pop    ebp
6500ddc2:	ret    
6500ddc3:	int3   
6500ddc4:	int3   
6500ddc5:	int3   
6500ddc6:	int3   
6500ddc7:	int3   
6500ddc8:	int3   
6500ddc9:	int3   
6500ddca:	int3   
6500ddcb:	int3   
6500ddcc:	int3   
6500ddcd:	int3   
6500ddce:	int3   
6500ddcf:	int3   
6500ddd0:	push   ebp
6500ddd1:	mov    ebp,esp
6500ddd3:	and    esp,0xfffffff8
6500ddd6:	push   ecx
6500ddd7:	push   esi
6500ddd8:	push   0x0
6500ddda:	push   0x1
6500dddc:	push   0x650302a0
6500dde1:	call   DWORD PTR ds:0x65024084
6500dde7:	test   eax,eax
6500dde9:	jne    0x6500de49
6500ddeb:	push   0x650285dc
6500ddf0:	push   0xf
6500ddf2:	push   0x6502861c
6500ddf7:	call   0x65006a60
6500ddfc:	push   0x6502862c
6500de01:	push   0x8
6500de03:	push   0x65028560
6500de08:	mov    esi,eax
6500de0a:	call   0x65006d50
6500de0f:	add    esp,0x18
6500de12:	push   eax
6500de13:	call   DWORD PTR ds:0x65024058
6500de19:	add    DWORD PTR ds:0x6502d37c,0x1
6500de20:	test   eax,eax
6500de22:	je     0x6500de3d
6500de24:	push   esi
6500de25:	push   eax
6500de26:	call   DWORD PTR ds:0x6502408c
6500de2c:	add    DWORD PTR ds:0x6502d380,0x1
6500de33:	mov    ds:0x65030384,eax
6500de38:	pop    esi
6500de39:	mov    esp,ebp
6500de3b:	pop    ebp
6500de3c:	ret    
6500de3d:	xor    eax,eax
6500de3f:	mov    ds:0x65030384,eax
6500de44:	pop    esi
6500de45:	mov    esp,ebp
6500de47:	pop    ebp
6500de48:	ret    
6500de49:	mov    eax,ds:0x65030384
6500de4e:	pop    esi
6500de4f:	mov    esp,ebp
6500de51:	pop    ebp
6500de52:	ret    
6500de53:	int3   
6500de54:	int3   
6500de55:	int3   
6500de56:	int3   
6500de57:	int3   
6500de58:	int3   
6500de59:	int3   
6500de5a:	int3   
6500de5b:	int3   
6500de5c:	int3   
6500de5d:	int3   
6500de5e:	int3   
6500de5f:	int3   
6500de60:	push   ebp
6500de61:	mov    ebp,esp
6500de63:	and    esp,0xfffffff8
6500de66:	push   ecx
6500de67:	push   esi
6500de68:	push   0x0
6500de6a:	push   0x1
6500de6c:	push   0x650302a4
6500de71:	call   DWORD PTR ds:0x65024084
6500de77:	test   eax,eax
6500de79:	jne    0x6500ded9
6500de7b:	push   0x65028658
6500de80:	push   0xf
6500de82:	push   0x65028680
6500de87:	call   0x65006a60
6500de8c:	push   0x65028690
6500de91:	push   0x8
6500de93:	push   0x65028560
6500de98:	mov    esi,eax
6500de9a:	call   0x65006d50
6500de9f:	add    esp,0x18
6500dea2:	push   eax
6500dea3:	call   DWORD PTR ds:0x65024058
6500dea9:	add    DWORD PTR ds:0x6502d37c,0x1
6500deb0:	test   eax,eax
6500deb2:	je     0x6500decd
6500deb4:	push   esi
6500deb5:	push   eax
6500deb6:	call   DWORD PTR ds:0x6502408c
6500debc:	add    DWORD PTR ds:0x6502d380,0x1
6500dec3:	mov    ds:0x65030388,eax
6500dec8:	pop    esi
6500dec9:	mov    esp,ebp
6500decb:	pop    ebp
6500decc:	ret    
6500decd:	xor    eax,eax
6500decf:	mov    ds:0x65030388,eax
6500ded4:	pop    esi
6500ded5:	mov    esp,ebp
6500ded7:	pop    ebp
6500ded8:	ret    
6500ded9:	mov    eax,ds:0x65030388
6500dede:	pop    esi
6500dedf:	mov    esp,ebp
6500dee1:	pop    ebp
6500dee2:	ret    
6500dee3:	int3   
6500dee4:	int3   
6500dee5:	int3   
6500dee6:	int3   
6500dee7:	int3   
6500dee8:	int3   
6500dee9:	int3   
6500deea:	int3   
6500deeb:	int3   
6500deec:	int3   
6500deed:	int3   
6500deee:	int3   
6500deef:	int3   
6500def0:	push   ebp
6500def1:	mov    ebp,esp
6500def3:	and    esp,0xfffffff8
6500def6:	push   ecx
6500def7:	push   esi
6500def8:	push   0x0
6500defa:	push   0x1
6500defc:	push   0x650302a8
6500df01:	call   DWORD PTR ds:0x65024084
6500df07:	test   eax,eax
6500df09:	jne    0x6500df69
6500df0b:	push   0x650286c8
6500df10:	push   0x13
6500df12:	push   0x650286f0
6500df17:	call   0x65006a60
6500df1c:	push   0x65028704
6500df21:	push   0x8
6500df23:	push   0x65028728
6500df28:	mov    esi,eax
6500df2a:	call   0x65006d50
6500df2f:	add    esp,0x18
6500df32:	push   eax
6500df33:	call   DWORD PTR ds:0x65024058
6500df39:	add    DWORD PTR ds:0x6502d37c,0x1
6500df40:	test   eax,eax
6500df42:	je     0x6500df5d
6500df44:	push   esi
6500df45:	push   eax
6500df46:	call   DWORD PTR ds:0x6502408c
6500df4c:	add    DWORD PTR ds:0x6502d380,0x1
6500df53:	mov    ds:0x6503038c,eax
6500df58:	pop    esi
6500df59:	mov    esp,ebp
6500df5b:	pop    ebp
6500df5c:	ret    
6500df5d:	xor    eax,eax
6500df5f:	mov    ds:0x6503038c,eax
6500df64:	pop    esi
6500df65:	mov    esp,ebp
6500df67:	pop    ebp
6500df68:	ret    
6500df69:	mov    eax,ds:0x6503038c
6500df6e:	pop    esi
6500df6f:	mov    esp,ebp
6500df71:	pop    ebp
6500df72:	ret    
6500df73:	int3   
6500df74:	int3   
6500df75:	int3   
6500df76:	int3   
6500df77:	int3   
6500df78:	int3   
6500df79:	int3   
6500df7a:	int3   
6500df7b:	int3   
6500df7c:	int3   
6500df7d:	int3   
6500df7e:	int3   
6500df7f:	int3   
6500df80:	push   ebp
6500df81:	mov    ebp,esp
6500df83:	and    esp,0xfffffff8
6500df86:	push   ecx
6500df87:	push   esi
6500df88:	push   0x0
6500df8a:	push   0x1
6500df8c:	push   0x650302ac
6500df91:	call   DWORD PTR ds:0x65024084
6500df97:	test   eax,eax
6500df99:	jne    0x6500dff9
6500df9b:	push   0x6502873c
6500dfa0:	push   0xe
6500dfa2:	push   0x65028760
6500dfa7:	call   0x65006a60
6500dfac:	push   0x65028770
6500dfb1:	push   0x8
6500dfb3:	push   0x65028728
6500dfb8:	mov    esi,eax
6500dfba:	call   0x65006d50
6500dfbf:	add    esp,0x18
6500dfc2:	push   eax
6500dfc3:	call   DWORD PTR ds:0x65024058
6500dfc9:	add    DWORD PTR ds:0x6502d37c,0x1
6500dfd0:	test   eax,eax
6500dfd2:	je     0x6500dfed
6500dfd4:	push   esi
6500dfd5:	push   eax
6500dfd6:	call   DWORD PTR ds:0x6502408c
6500dfdc:	add    DWORD PTR ds:0x6502d380,0x1
6500dfe3:	mov    ds:0x65030390,eax
6500dfe8:	pop    esi
6500dfe9:	mov    esp,ebp
6500dfeb:	pop    ebp
6500dfec:	ret    
6500dfed:	xor    eax,eax
6500dfef:	mov    ds:0x65030390,eax
6500dff4:	pop    esi
6500dff5:	mov    esp,ebp
6500dff7:	pop    ebp
6500dff8:	ret    
6500dff9:	mov    eax,ds:0x65030390
6500dffe:	pop    esi
6500dfff:	mov    esp,ebp
6500e001:	pop    ebp
6500e002:	ret    
6500e003:	int3   
6500e004:	int3   
6500e005:	int3   
6500e006:	int3   
6500e007:	int3   
6500e008:	int3   
6500e009:	int3   
6500e00a:	int3   
6500e00b:	int3   
6500e00c:	int3   
6500e00d:	int3   
6500e00e:	int3   
6500e00f:	int3   
6500e010:	push   ebp
6500e011:	mov    ebp,esp
6500e013:	and    esp,0xfffffff8
6500e016:	push   ecx
6500e017:	push   esi
6500e018:	push   0x0
6500e01a:	push   0x1
6500e01c:	push   0x650302b0
6500e021:	call   DWORD PTR ds:0x65024084
6500e027:	test   eax,eax
6500e029:	jne    0x6500e089
6500e02b:	push   0x650287b0
6500e030:	push   0xb
6500e032:	push   0x650287ec
6500e037:	call   0x65006a60
6500e03c:	push   0x650287f8
6500e041:	push   0x8
6500e043:	push   0x65028728
6500e048:	mov    esi,eax
6500e04a:	call   0x65006d50
6500e04f:	add    esp,0x18
6500e052:	push   eax
6500e053:	call   DWORD PTR ds:0x65024058
6500e059:	add    DWORD PTR ds:0x6502d37c,0x1
6500e060:	test   eax,eax
6500e062:	je     0x6500e07d
6500e064:	push   esi
6500e065:	push   eax
6500e066:	call   DWORD PTR ds:0x6502408c
6500e06c:	add    DWORD PTR ds:0x6502d380,0x1
6500e073:	mov    ds:0x65030394,eax
6500e078:	pop    esi
6500e079:	mov    esp,ebp
6500e07b:	pop    ebp
6500e07c:	ret    
6500e07d:	xor    eax,eax
6500e07f:	mov    ds:0x65030394,eax
6500e084:	pop    esi
6500e085:	mov    esp,ebp
6500e087:	pop    ebp
6500e088:	ret    
6500e089:	mov    eax,ds:0x65030394
6500e08e:	pop    esi
6500e08f:	mov    esp,ebp
6500e091:	pop    ebp
6500e092:	ret    
6500e093:	int3   
6500e094:	int3   
6500e095:	int3   
6500e096:	int3   
6500e097:	int3   
6500e098:	int3   
6500e099:	int3   
6500e09a:	int3   
6500e09b:	int3   
6500e09c:	int3   
6500e09d:	int3   
6500e09e:	int3   
6500e09f:	int3   
6500e0a0:	push   ebp
6500e0a1:	mov    ebp,esp
6500e0a3:	and    esp,0xfffffff8
6500e0a6:	push   ecx
6500e0a7:	push   esi
6500e0a8:	push   0x0
6500e0aa:	push   0x1
6500e0ac:	push   0x650302b4
6500e0b1:	call   DWORD PTR ds:0x65024084
6500e0b7:	test   eax,eax
6500e0b9:	jne    0x6500e119
6500e0bb:	push   0x65028820
6500e0c0:	push   0xb
6500e0c2:	push   0x65028848
6500e0c7:	call   0x65006a60
6500e0cc:	push   0x65028854
6500e0d1:	push   0x8
6500e0d3:	push   0x65028728
6500e0d8:	mov    esi,eax
6500e0da:	call   0x65006d50
6500e0df:	add    esp,0x18
6500e0e2:	push   eax
6500e0e3:	call   DWORD PTR ds:0x65024058
6500e0e9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e0f0:	test   eax,eax
6500e0f2:	je     0x6500e10d
6500e0f4:	push   esi
6500e0f5:	push   eax
6500e0f6:	call   DWORD PTR ds:0x6502408c
6500e0fc:	add    DWORD PTR ds:0x6502d380,0x1
6500e103:	mov    ds:0x65030398,eax
6500e108:	pop    esi
6500e109:	mov    esp,ebp
6500e10b:	pop    ebp
6500e10c:	ret    
6500e10d:	xor    eax,eax
6500e10f:	mov    ds:0x65030398,eax
6500e114:	pop    esi
6500e115:	mov    esp,ebp
6500e117:	pop    ebp
6500e118:	ret    
6500e119:	mov    eax,ds:0x65030398
6500e11e:	pop    esi
6500e11f:	mov    esp,ebp
6500e121:	pop    ebp
6500e122:	ret    
6500e123:	int3   
6500e124:	int3   
6500e125:	int3   
6500e126:	int3   
6500e127:	int3   
6500e128:	int3   
6500e129:	int3   
6500e12a:	int3   
6500e12b:	int3   
6500e12c:	int3   
6500e12d:	int3   
6500e12e:	int3   
6500e12f:	int3   
6500e130:	push   ebp
6500e131:	mov    ebp,esp
6500e133:	and    esp,0xfffffff8
6500e136:	push   ecx
6500e137:	push   esi
6500e138:	push   0x0
6500e13a:	push   0x1
6500e13c:	push   0x650302b8
6500e141:	call   DWORD PTR ds:0x65024084
6500e147:	test   eax,eax
6500e149:	jne    0x6500e1a9
6500e14b:	push   0x65028890
6500e150:	push   0xb
6500e152:	push   0x650288c0
6500e157:	call   0x65006a60
6500e15c:	push   0x650288cc
6500e161:	push   0x8
6500e163:	push   0x65028728
6500e168:	mov    esi,eax
6500e16a:	call   0x65006d50
6500e16f:	add    esp,0x18
6500e172:	push   eax
6500e173:	call   DWORD PTR ds:0x65024058
6500e179:	add    DWORD PTR ds:0x6502d37c,0x1
6500e180:	test   eax,eax
6500e182:	je     0x6500e19d
6500e184:	push   esi
6500e185:	push   eax
6500e186:	call   DWORD PTR ds:0x6502408c
6500e18c:	add    DWORD PTR ds:0x6502d380,0x1
6500e193:	mov    ds:0x6503039c,eax
6500e198:	pop    esi
6500e199:	mov    esp,ebp
6500e19b:	pop    ebp
6500e19c:	ret    
6500e19d:	xor    eax,eax
6500e19f:	mov    ds:0x6503039c,eax
6500e1a4:	pop    esi
6500e1a5:	mov    esp,ebp
6500e1a7:	pop    ebp
6500e1a8:	ret    
6500e1a9:	mov    eax,ds:0x6503039c
6500e1ae:	pop    esi
6500e1af:	mov    esp,ebp
6500e1b1:	pop    ebp
6500e1b2:	ret    
6500e1b3:	int3   
6500e1b4:	int3   
6500e1b5:	int3   
6500e1b6:	int3   
6500e1b7:	int3   
6500e1b8:	int3   
6500e1b9:	int3   
6500e1ba:	int3   
6500e1bb:	int3   
6500e1bc:	int3   
6500e1bd:	int3   
6500e1be:	int3   
6500e1bf:	int3   
6500e1c0:	push   esi
6500e1c1:	push   0x0
6500e1c3:	push   0x1
6500e1c5:	push   0x650302bc
6500e1ca:	call   DWORD PTR ds:0x65024084
6500e1d0:	test   eax,eax
6500e1d2:	jne    0x6500e22c
6500e1d4:	push   0x650288f8
6500e1d9:	push   0xc
6500e1db:	push   0x65028930
6500e1e0:	call   0x65006a60
6500e1e5:	push   0x65028940
6500e1ea:	push   0x8
6500e1ec:	push   0x65028728
6500e1f1:	mov    esi,eax
6500e1f3:	call   0x65006d50
6500e1f8:	add    esp,0x18
6500e1fb:	push   eax
6500e1fc:	call   DWORD PTR ds:0x65024058
6500e202:	add    DWORD PTR ds:0x6502d37c,0x1
6500e209:	test   eax,eax
6500e20b:	je     0x6500e223
6500e20d:	push   esi
6500e20e:	push   eax
6500e20f:	call   DWORD PTR ds:0x6502408c
6500e215:	add    DWORD PTR ds:0x6502d380,0x1
6500e21c:	mov    ds:0x650303a0,eax
6500e221:	pop    esi
6500e222:	ret    
6500e223:	xor    eax,eax
6500e225:	mov    ds:0x650303a0,eax
6500e22a:	pop    esi
6500e22b:	ret    
6500e22c:	mov    eax,ds:0x650303a0
6500e231:	pop    esi
6500e232:	ret    
6500e233:	int3   
6500e234:	int3   
6500e235:	int3   
6500e236:	int3   
6500e237:	int3   
6500e238:	int3   
6500e239:	int3   
6500e23a:	int3   
6500e23b:	int3   
6500e23c:	int3   
6500e23d:	int3   
6500e23e:	int3   
6500e23f:	int3   
6500e240:	push   esi
6500e241:	push   0x0
6500e243:	push   0x1
6500e245:	push   0x650302c0
6500e24a:	call   DWORD PTR ds:0x65024084
6500e250:	test   eax,eax
6500e252:	jne    0x6500e2ac
6500e254:	push   0x65028978
6500e259:	push   0x10
6500e25b:	push   0x650289ac
6500e260:	call   0x65006a60
6500e265:	push   0x650289c0
6500e26a:	push   0x8
6500e26c:	push   0x65028728
6500e271:	mov    esi,eax
6500e273:	call   0x65006d50
6500e278:	add    esp,0x18
6500e27b:	push   eax
6500e27c:	call   DWORD PTR ds:0x65024058
6500e282:	add    DWORD PTR ds:0x6502d37c,0x1
6500e289:	test   eax,eax
6500e28b:	je     0x6500e2a3
6500e28d:	push   esi
6500e28e:	push   eax
6500e28f:	call   DWORD PTR ds:0x6502408c
6500e295:	add    DWORD PTR ds:0x6502d380,0x1
6500e29c:	mov    ds:0x650303a4,eax
6500e2a1:	pop    esi
6500e2a2:	ret    
6500e2a3:	xor    eax,eax
6500e2a5:	mov    ds:0x650303a4,eax
6500e2aa:	pop    esi
6500e2ab:	ret    
6500e2ac:	mov    eax,ds:0x650303a4
6500e2b1:	pop    esi
6500e2b2:	ret    
6500e2b3:	int3   
6500e2b4:	int3   
6500e2b5:	int3   
6500e2b6:	int3   
6500e2b7:	int3   
6500e2b8:	int3   
6500e2b9:	int3   
6500e2ba:	int3   
6500e2bb:	int3   
6500e2bc:	int3   
6500e2bd:	int3   
6500e2be:	int3   
6500e2bf:	int3   
6500e2c0:	push   esi
6500e2c1:	push   0x0
6500e2c3:	push   0x1
6500e2c5:	push   0x650302c4
6500e2ca:	call   DWORD PTR ds:0x65024084
6500e2d0:	test   eax,eax
6500e2d2:	jne    0x6500e32c
6500e2d4:	push   0x650289fc
6500e2d9:	push   0x10
6500e2db:	push   0x65028a30
6500e2e0:	call   0x65006a60
6500e2e5:	push   0x65028a44
6500e2ea:	push   0x8
6500e2ec:	push   0x65028728
6500e2f1:	mov    esi,eax
6500e2f3:	call   0x65006d50
6500e2f8:	add    esp,0x18
6500e2fb:	push   eax
6500e2fc:	call   DWORD PTR ds:0x65024058
6500e302:	add    DWORD PTR ds:0x6502d37c,0x1
6500e309:	test   eax,eax
6500e30b:	je     0x6500e323
6500e30d:	push   esi
6500e30e:	push   eax
6500e30f:	call   DWORD PTR ds:0x6502408c
6500e315:	add    DWORD PTR ds:0x6502d380,0x1
6500e31c:	mov    ds:0x650303a8,eax
6500e321:	pop    esi
6500e322:	ret    
6500e323:	xor    eax,eax
6500e325:	mov    ds:0x650303a8,eax
6500e32a:	pop    esi
6500e32b:	ret    
6500e32c:	mov    eax,ds:0x650303a8
6500e331:	pop    esi
6500e332:	ret    
6500e333:	int3   
6500e334:	int3   
6500e335:	int3   
6500e336:	int3   
6500e337:	int3   
6500e338:	int3   
6500e339:	int3   
6500e33a:	int3   
6500e33b:	int3   
6500e33c:	int3   
6500e33d:	int3   
6500e33e:	int3   
6500e33f:	int3   
6500e340:	push   ebp
6500e341:	mov    ebp,esp
6500e343:	and    esp,0xfffffff8
6500e346:	push   ecx
6500e347:	push   esi
6500e348:	push   0x0
6500e34a:	push   0x1
6500e34c:	push   0x650302c8
6500e351:	call   DWORD PTR ds:0x65024084
6500e357:	test   eax,eax
6500e359:	jne    0x6500e3b9
6500e35b:	push   0x65028a78
6500e360:	push   0x15
6500e362:	push   0x65028ab8
6500e367:	call   0x65006a60
6500e36c:	push   0x65028ad0
6500e371:	push   0x8
6500e373:	push   0x65028728
6500e378:	mov    esi,eax
6500e37a:	call   0x65006d50
6500e37f:	add    esp,0x18
6500e382:	push   eax
6500e383:	call   DWORD PTR ds:0x65024058
6500e389:	add    DWORD PTR ds:0x6502d37c,0x1
6500e390:	test   eax,eax
6500e392:	je     0x6500e3ad
6500e394:	push   esi
6500e395:	push   eax
6500e396:	call   DWORD PTR ds:0x6502408c
6500e39c:	add    DWORD PTR ds:0x6502d380,0x1
6500e3a3:	mov    ds:0x650303ac,eax
6500e3a8:	pop    esi
6500e3a9:	mov    esp,ebp
6500e3ab:	pop    ebp
6500e3ac:	ret    
6500e3ad:	xor    eax,eax
6500e3af:	mov    ds:0x650303ac,eax
6500e3b4:	pop    esi
6500e3b5:	mov    esp,ebp
6500e3b7:	pop    ebp
6500e3b8:	ret    
6500e3b9:	mov    eax,ds:0x650303ac
6500e3be:	pop    esi
6500e3bf:	mov    esp,ebp
6500e3c1:	pop    ebp
6500e3c2:	ret    
6500e3c3:	int3   
6500e3c4:	int3   
6500e3c5:	int3   
6500e3c6:	int3   
6500e3c7:	int3   
6500e3c8:	int3   
6500e3c9:	int3   
6500e3ca:	int3   
6500e3cb:	int3   
6500e3cc:	int3   
6500e3cd:	int3   
6500e3ce:	int3   
6500e3cf:	int3   
6500e3d0:	push   ebp
6500e3d1:	mov    ebp,esp
6500e3d3:	and    esp,0xfffffff8
6500e3d6:	push   ecx
6500e3d7:	push   esi
6500e3d8:	push   0x0
6500e3da:	push   0x1
6500e3dc:	push   0x650302cc
6500e3e1:	call   DWORD PTR ds:0x65024084
6500e3e7:	test   eax,eax
6500e3e9:	jne    0x6500e449
6500e3eb:	push   0x65028b04
6500e3f0:	push   0x18
6500e3f2:	push   0x65028b2c
6500e3f7:	call   0x65006a60
6500e3fc:	push   0x65028b48
6500e401:	push   0x8
6500e403:	push   0x65028728
6500e408:	mov    esi,eax
6500e40a:	call   0x65006d50
6500e40f:	add    esp,0x18
6500e412:	push   eax
6500e413:	call   DWORD PTR ds:0x65024058
6500e419:	add    DWORD PTR ds:0x6502d37c,0x1
6500e420:	test   eax,eax
6500e422:	je     0x6500e43d
6500e424:	push   esi
6500e425:	push   eax
6500e426:	call   DWORD PTR ds:0x6502408c
6500e42c:	add    DWORD PTR ds:0x6502d380,0x1
6500e433:	mov    ds:0x650303b0,eax
6500e438:	pop    esi
6500e439:	mov    esp,ebp
6500e43b:	pop    ebp
6500e43c:	ret    
6500e43d:	xor    eax,eax
6500e43f:	mov    ds:0x650303b0,eax
6500e444:	pop    esi
6500e445:	mov    esp,ebp
6500e447:	pop    ebp
6500e448:	ret    
6500e449:	mov    eax,ds:0x650303b0
6500e44e:	pop    esi
6500e44f:	mov    esp,ebp
6500e451:	pop    ebp
6500e452:	ret    
6500e453:	int3   
6500e454:	int3   
6500e455:	int3   
6500e456:	int3   
6500e457:	int3   
6500e458:	int3   
6500e459:	int3   
6500e45a:	int3   
6500e45b:	int3   
6500e45c:	int3   
6500e45d:	int3   
6500e45e:	int3   
6500e45f:	int3   
6500e460:	push   esi
6500e461:	push   0x0
6500e463:	push   0x1
6500e465:	push   0x650302d0
6500e46a:	call   DWORD PTR ds:0x65024084
6500e470:	test   eax,eax
6500e472:	jne    0x6500e4cc
6500e474:	push   0x65028b7c
6500e479:	push   0xf
6500e47b:	push   0x65028ba4
6500e480:	call   0x65006a60
6500e485:	push   0x65028bb8
6500e48a:	push   0x8
6500e48c:	push   0x65028728
6500e491:	mov    esi,eax
6500e493:	call   0x65006d50
6500e498:	add    esp,0x18
6500e49b:	push   eax
6500e49c:	call   DWORD PTR ds:0x65024058
6500e4a2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e4a9:	test   eax,eax
6500e4ab:	je     0x6500e4c3
6500e4ad:	push   esi
6500e4ae:	push   eax
6500e4af:	call   DWORD PTR ds:0x6502408c
6500e4b5:	add    DWORD PTR ds:0x6502d380,0x1
6500e4bc:	mov    ds:0x650303b4,eax
6500e4c1:	pop    esi
6500e4c2:	ret    
6500e4c3:	xor    eax,eax
6500e4c5:	mov    ds:0x650303b4,eax
6500e4ca:	pop    esi
6500e4cb:	ret    
6500e4cc:	mov    eax,ds:0x650303b4
6500e4d1:	pop    esi
6500e4d2:	ret    
6500e4d3:	int3   
6500e4d4:	int3   
6500e4d5:	int3   
6500e4d6:	int3   
6500e4d7:	int3   
6500e4d8:	int3   
6500e4d9:	int3   
6500e4da:	int3   
6500e4db:	int3   
6500e4dc:	int3   
6500e4dd:	int3   
6500e4de:	int3   
6500e4df:	int3   
6500e4e0:	push   ebp
6500e4e1:	mov    ebp,esp
6500e4e3:	and    esp,0xfffffff8
6500e4e6:	push   ecx
6500e4e7:	push   esi
6500e4e8:	push   0x0
6500e4ea:	push   0x1
6500e4ec:	push   0x650302ec
6500e4f1:	call   DWORD PTR ds:0x65024084
6500e4f7:	test   eax,eax
6500e4f9:	jne    0x6500e559
6500e4fb:	push   0x65028bf8
6500e500:	push   0x19
6500e502:	push   0x65028c1c
6500e507:	call   0x65006a60
6500e50c:	push   0x65028c38
6500e511:	push   0x7
6500e513:	push   0x65028c60
6500e518:	mov    esi,eax
6500e51a:	call   0x65006d50
6500e51f:	add    esp,0x18
6500e522:	push   eax
6500e523:	call   DWORD PTR ds:0x65024058
6500e529:	add    DWORD PTR ds:0x6502d37c,0x1
6500e530:	test   eax,eax
6500e532:	je     0x6500e54d
6500e534:	push   esi
6500e535:	push   eax
6500e536:	call   DWORD PTR ds:0x6502408c
6500e53c:	add    DWORD PTR ds:0x6502d380,0x1
6500e543:	mov    ds:0x650303b8,eax
6500e548:	pop    esi
6500e549:	mov    esp,ebp
6500e54b:	pop    ebp
6500e54c:	ret    
6500e54d:	xor    eax,eax
6500e54f:	mov    ds:0x650303b8,eax
6500e554:	pop    esi
6500e555:	mov    esp,ebp
6500e557:	pop    ebp
6500e558:	ret    
6500e559:	mov    eax,ds:0x650303b8
6500e55e:	pop    esi
6500e55f:	mov    esp,ebp
6500e561:	pop    ebp
6500e562:	ret    
6500e563:	int3   
6500e564:	int3   
6500e565:	int3   
6500e566:	int3   
6500e567:	int3   
6500e568:	int3   
6500e569:	int3   
6500e56a:	int3   
6500e56b:	int3   
6500e56c:	int3   
6500e56d:	int3   
6500e56e:	int3   
6500e56f:	int3   
6500e570:	push   ebp
6500e571:	mov    ebp,esp
6500e573:	and    esp,0xfffffff8
6500e576:	push   ecx
6500e577:	push   esi
6500e578:	push   0x0
6500e57a:	push   0x1
6500e57c:	push   0x650302f4
6500e581:	call   DWORD PTR ds:0x65024084
6500e587:	test   eax,eax
6500e589:	jne    0x6500e5e9
6500e58b:	push   0x65028c84
6500e590:	push   0x15
6500e592:	push   0x65028ca8
6500e597:	call   0x65006a60
6500e59c:	push   0x65028cc0
6500e5a1:	push   0x8
6500e5a3:	push   0x65028c70
6500e5a8:	mov    esi,eax
6500e5aa:	call   0x65006d50
6500e5af:	add    esp,0x18
6500e5b2:	push   eax
6500e5b3:	call   DWORD PTR ds:0x65024058
6500e5b9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e5c0:	test   eax,eax
6500e5c2:	je     0x6500e5dd
6500e5c4:	push   esi
6500e5c5:	push   eax
6500e5c6:	call   DWORD PTR ds:0x6502408c
6500e5cc:	add    DWORD PTR ds:0x6502d380,0x1
6500e5d3:	mov    ds:0x650303bc,eax
6500e5d8:	pop    esi
6500e5d9:	mov    esp,ebp
6500e5db:	pop    ebp
6500e5dc:	ret    
6500e5dd:	xor    eax,eax
6500e5df:	mov    ds:0x650303bc,eax
6500e5e4:	pop    esi
6500e5e5:	mov    esp,ebp
6500e5e7:	pop    ebp
6500e5e8:	ret    
6500e5e9:	mov    eax,ds:0x650303bc
6500e5ee:	pop    esi
6500e5ef:	mov    esp,ebp
6500e5f1:	pop    ebp
6500e5f2:	ret    
6500e5f3:	int3   
6500e5f4:	int3   
6500e5f5:	int3   
6500e5f6:	int3   
6500e5f7:	int3   
6500e5f8:	int3   
6500e5f9:	int3   
6500e5fa:	int3   
6500e5fb:	int3   
6500e5fc:	int3   
6500e5fd:	int3   
6500e5fe:	int3   
6500e5ff:	int3   
6500e600:	push   ebp
6500e601:	mov    ebp,esp
6500e603:	and    esp,0xfffffff8
6500e606:	push   ecx
6500e607:	push   esi
6500e608:	push   0x0
6500e60a:	push   0x1
6500e60c:	push   0x650302f8
6500e611:	call   DWORD PTR ds:0x65024084
6500e617:	test   eax,eax
6500e619:	jne    0x6500e679
6500e61b:	push   0x65028d00
6500e620:	push   0x15
6500e622:	push   0x65028d38
6500e627:	call   0x65006a60
6500e62c:	push   0x65028d50
6500e631:	push   0x8
6500e633:	push   0x65028c70
6500e638:	mov    esi,eax
6500e63a:	call   0x65006d50
6500e63f:	add    esp,0x18
6500e642:	push   eax
6500e643:	call   DWORD PTR ds:0x65024058
6500e649:	add    DWORD PTR ds:0x6502d37c,0x1
6500e650:	test   eax,eax
6500e652:	je     0x6500e66d
6500e654:	push   esi
6500e655:	push   eax
6500e656:	call   DWORD PTR ds:0x6502408c
6500e65c:	add    DWORD PTR ds:0x6502d380,0x1
6500e663:	mov    ds:0x650303c0,eax
6500e668:	pop    esi
6500e669:	mov    esp,ebp
6500e66b:	pop    ebp
6500e66c:	ret    
6500e66d:	xor    eax,eax
6500e66f:	mov    ds:0x650303c0,eax
6500e674:	pop    esi
6500e675:	mov    esp,ebp
6500e677:	pop    ebp
6500e678:	ret    
6500e679:	mov    eax,ds:0x650303c0
6500e67e:	pop    esi
6500e67f:	mov    esp,ebp
6500e681:	pop    ebp
6500e682:	ret    
6500e683:	int3   
6500e684:	int3   
6500e685:	int3   
6500e686:	int3   
6500e687:	int3   
6500e688:	int3   
6500e689:	int3   
6500e68a:	int3   
6500e68b:	int3   
6500e68c:	int3   
6500e68d:	int3   
6500e68e:	int3   
6500e68f:	int3   
6500e690:	push   esi
6500e691:	push   0x0
6500e693:	push   0x1
6500e695:	push   0x650302fc
6500e69a:	call   DWORD PTR ds:0x65024084
6500e6a0:	test   eax,eax
6500e6a2:	jne    0x6500e6fc
6500e6a4:	push   0x65028d80
6500e6a9:	push   0x34
6500e6ab:	push   0x65028da8
6500e6b0:	call   0x65006a60
6500e6b5:	push   0x65028de0
6500e6ba:	push   0x8
6500e6bc:	push   0x65028c70
6500e6c1:	mov    esi,eax
6500e6c3:	call   0x65006d50
6500e6c8:	add    esp,0x18
6500e6cb:	push   eax
6500e6cc:	call   DWORD PTR ds:0x65024058
6500e6d2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e6d9:	test   eax,eax
6500e6db:	je     0x6500e6f3
6500e6dd:	push   esi
6500e6de:	push   eax
6500e6df:	call   DWORD PTR ds:0x6502408c
6500e6e5:	add    DWORD PTR ds:0x6502d380,0x1
6500e6ec:	mov    ds:0x650303c4,eax
6500e6f1:	pop    esi
6500e6f2:	ret    
6500e6f3:	xor    eax,eax
6500e6f5:	mov    ds:0x650303c4,eax
6500e6fa:	pop    esi
6500e6fb:	ret    
6500e6fc:	mov    eax,ds:0x650303c4
6500e701:	pop    esi
6500e702:	ret    
6500e703:	int3   
6500e704:	int3   
6500e705:	int3   
6500e706:	int3   
6500e707:	int3   
6500e708:	int3   
6500e709:	int3   
6500e70a:	int3   
6500e70b:	int3   
6500e70c:	int3   
6500e70d:	int3   
6500e70e:	int3   
6500e70f:	int3   
6500e710:	push   ebp
6500e711:	mov    ebp,esp
6500e713:	and    esp,0xfffffff8
6500e716:	push   ecx
6500e717:	push   esi
6500e718:	push   0x0
6500e71a:	push   0x1
6500e71c:	push   0x65030308
6500e721:	call   DWORD PTR ds:0x65024084
6500e727:	test   eax,eax
6500e729:	jne    0x6500e789
6500e72b:	push   0x65028e04
6500e730:	push   0xe
6500e732:	push   0x65028e34
6500e737:	call   0x65006a60
6500e73c:	push   0x65028e44
6500e741:	push   0x8
6500e743:	push   0x65028c70
6500e748:	mov    esi,eax
6500e74a:	call   0x65006d50
6500e74f:	add    esp,0x18
6500e752:	push   eax
6500e753:	call   DWORD PTR ds:0x65024058
6500e759:	add    DWORD PTR ds:0x6502d37c,0x1
6500e760:	test   eax,eax
6500e762:	je     0x6500e77d
6500e764:	push   esi
6500e765:	push   eax
6500e766:	call   DWORD PTR ds:0x6502408c
6500e76c:	add    DWORD PTR ds:0x6502d380,0x1
6500e773:	mov    ds:0x650303c8,eax
6500e778:	pop    esi
6500e779:	mov    esp,ebp
6500e77b:	pop    ebp
6500e77c:	ret    
6500e77d:	xor    eax,eax
6500e77f:	mov    ds:0x650303c8,eax
6500e784:	pop    esi
6500e785:	mov    esp,ebp
6500e787:	pop    ebp
6500e788:	ret    
6500e789:	mov    eax,ds:0x650303c8
6500e78e:	pop    esi
6500e78f:	mov    esp,ebp
6500e791:	pop    ebp
6500e792:	ret    
6500e793:	int3   
6500e794:	int3   
6500e795:	int3   
6500e796:	int3   
6500e797:	int3   
6500e798:	int3   
6500e799:	int3   
6500e79a:	int3   
6500e79b:	int3   
6500e79c:	int3   
6500e79d:	int3   
6500e79e:	int3   
6500e79f:	int3   
6500e7a0:	push   ebp
6500e7a1:	mov    ebp,esp
6500e7a3:	and    esp,0xfffffff8
6500e7a6:	push   ecx
6500e7a7:	push   esi
6500e7a8:	push   0x0
6500e7aa:	push   0x1
6500e7ac:	push   0x6503031c
6500e7b1:	call   DWORD PTR ds:0x65024084
6500e7b7:	test   eax,eax
6500e7b9:	jne    0x6500e819
6500e7bb:	push   0x65028e74
6500e7c0:	push   0x12
6500e7c2:	push   0x65028e9c
6500e7c7:	call   0x65006a60
6500e7cc:	push   0x65028eb0
6500e7d1:	push   0x8
6500e7d3:	push   0x65028c70
6500e7d8:	mov    esi,eax
6500e7da:	call   0x65006d50
6500e7df:	add    esp,0x18
6500e7e2:	push   eax
6500e7e3:	call   DWORD PTR ds:0x65024058
6500e7e9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e7f0:	test   eax,eax
6500e7f2:	je     0x6500e80d
6500e7f4:	push   esi
6500e7f5:	push   eax
6500e7f6:	call   DWORD PTR ds:0x6502408c
6500e7fc:	add    DWORD PTR ds:0x6502d380,0x1
6500e803:	mov    ds:0x650303cc,eax
6500e808:	pop    esi
6500e809:	mov    esp,ebp
6500e80b:	pop    ebp
6500e80c:	ret    
6500e80d:	xor    eax,eax
6500e80f:	mov    ds:0x650303cc,eax
6500e814:	pop    esi
6500e815:	mov    esp,ebp
6500e817:	pop    ebp
6500e818:	ret    
6500e819:	mov    eax,ds:0x650303cc
6500e81e:	pop    esi
6500e81f:	mov    esp,ebp
6500e821:	pop    ebp
6500e822:	ret    
6500e823:	int3   
6500e824:	int3   
6500e825:	int3   
6500e826:	int3   
6500e827:	int3   
6500e828:	int3   
6500e829:	int3   
6500e82a:	int3   
6500e82b:	int3   
6500e82c:	int3   
6500e82d:	int3   
6500e82e:	int3   
6500e82f:	int3   
6500e830:	push   esi
6500e831:	push   0x0
6500e833:	push   0x1
6500e835:	push   0x6503033c
6500e83a:	call   DWORD PTR ds:0x65024084
6500e840:	test   eax,eax
6500e842:	jne    0x6500e89c
6500e844:	push   0x65028ee0
6500e849:	push   0xc
6500e84b:	push   0x65028f10
6500e850:	call   0x65006a60
6500e855:	push   0x65028f20
6500e85a:	push   0x5
6500e85c:	push   0x65028f4c
6500e861:	mov    esi,eax
6500e863:	call   0x65006d50
6500e868:	add    esp,0x18
6500e86b:	push   eax
6500e86c:	call   DWORD PTR ds:0x65024058
6500e872:	add    DWORD PTR ds:0x6502d37c,0x1
6500e879:	test   eax,eax
6500e87b:	je     0x6500e893
6500e87d:	push   esi
6500e87e:	push   eax
6500e87f:	call   DWORD PTR ds:0x6502408c
6500e885:	add    DWORD PTR ds:0x6502d380,0x1
6500e88c:	mov    ds:0x650303d0,eax
6500e891:	pop    esi
6500e892:	ret    
6500e893:	xor    eax,eax
6500e895:	mov    ds:0x650303d0,eax
6500e89a:	pop    esi
6500e89b:	ret    
6500e89c:	mov    eax,ds:0x650303d0
6500e8a1:	pop    esi
6500e8a2:	ret    
6500e8a3:	int3   
6500e8a4:	int3   
6500e8a5:	int3   
6500e8a6:	int3   
6500e8a7:	int3   
6500e8a8:	int3   
6500e8a9:	int3   
6500e8aa:	int3   
6500e8ab:	int3   
6500e8ac:	int3   
6500e8ad:	int3   
6500e8ae:	int3   
6500e8af:	int3   
6500e8b0:	push   esi
6500e8b1:	push   0x0
6500e8b3:	push   0x1
6500e8b5:	push   0x65030340
6500e8ba:	call   DWORD PTR ds:0x65024084
6500e8c0:	test   eax,eax
6500e8c2:	jne    0x6500e91c
6500e8c4:	push   0x65028f58
6500e8c9:	push   0x11
6500e8cb:	push   0x65028f7c
6500e8d0:	call   0x65006a60
6500e8d5:	push   0x65028f90
6500e8da:	push   0x5
6500e8dc:	push   0x65028f4c
6500e8e1:	mov    esi,eax
6500e8e3:	call   0x65006d50
6500e8e8:	add    esp,0x18
6500e8eb:	push   eax
6500e8ec:	call   DWORD PTR ds:0x65024058
6500e8f2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e8f9:	test   eax,eax
6500e8fb:	je     0x6500e913
6500e8fd:	push   esi
6500e8fe:	push   eax
6500e8ff:	call   DWORD PTR ds:0x6502408c
6500e905:	add    DWORD PTR ds:0x6502d380,0x1
6500e90c:	mov    ds:0x650303d4,eax
6500e911:	pop    esi
6500e912:	ret    
6500e913:	xor    eax,eax
6500e915:	mov    ds:0x650303d4,eax
6500e91a:	pop    esi
6500e91b:	ret    
6500e91c:	mov    eax,ds:0x650303d4
6500e921:	pop    esi
6500e922:	ret    
6500e923:	int3   
6500e924:	int3   
6500e925:	int3   
6500e926:	int3   
6500e927:	int3   
6500e928:	int3   
6500e929:	int3   
6500e92a:	int3   
6500e92b:	int3   
6500e92c:	int3   
6500e92d:	int3   
6500e92e:	int3   
6500e92f:	int3   
6500e930:	push   esi
6500e931:	push   0x0
6500e933:	push   0x1
6500e935:	push   0x65030344
6500e93a:	call   DWORD PTR ds:0x65024084
6500e940:	test   eax,eax
6500e942:	jne    0x6500e99c
6500e944:	push   0x65028fc4
6500e949:	push   0xe
6500e94b:	push   0x65028ffc
6500e950:	call   0x65006a60
6500e955:	push   0x6502900c
6500e95a:	push   0x5
6500e95c:	push   0x65028f4c
6500e961:	mov    esi,eax
6500e963:	call   0x65006d50
6500e968:	add    esp,0x18
6500e96b:	push   eax
6500e96c:	call   DWORD PTR ds:0x65024058
6500e972:	add    DWORD PTR ds:0x6502d37c,0x1
6500e979:	test   eax,eax
6500e97b:	je     0x6500e993
6500e97d:	push   esi
6500e97e:	push   eax
6500e97f:	call   DWORD PTR ds:0x6502408c
6500e985:	add    DWORD PTR ds:0x6502d380,0x1
6500e98c:	mov    ds:0x650303d8,eax
6500e991:	pop    esi
6500e992:	ret    
6500e993:	xor    eax,eax
6500e995:	mov    ds:0x650303d8,eax
6500e99a:	pop    esi
6500e99b:	ret    
6500e99c:	mov    eax,ds:0x650303d8
6500e9a1:	pop    esi
6500e9a2:	ret    
6500e9a3:	int3   
6500e9a4:	int3   
6500e9a5:	int3   
6500e9a6:	int3   
6500e9a7:	int3   
6500e9a8:	int3   
6500e9a9:	int3   
6500e9aa:	int3   
6500e9ab:	int3   
6500e9ac:	int3   
6500e9ad:	int3   
6500e9ae:	int3   
6500e9af:	int3   
6500e9b0:	push   ebp
6500e9b1:	mov    ebp,esp
6500e9b3:	and    esp,0xfffffff8
6500e9b6:	push   ecx
6500e9b7:	push   esi
6500e9b8:	push   0x0
6500e9ba:	push   0x1
6500e9bc:	push   0x65030348
6500e9c1:	call   DWORD PTR ds:0x65024084
6500e9c7:	test   eax,eax
6500e9c9:	jne    0x6500ea29
6500e9cb:	push   0x6502903c
6500e9d0:	push   0xf
6500e9d2:	push   0x65029070
6500e9d7:	call   0x65006a60
6500e9dc:	push   0x65029080
6500e9e1:	push   0x6
6500e9e3:	push   0x650290a4
6500e9e8:	mov    esi,eax
6500e9ea:	call   0x65006d50
6500e9ef:	add    esp,0x18
6500e9f2:	push   eax
6500e9f3:	call   DWORD PTR ds:0x65024058
6500e9f9:	add    DWORD PTR ds:0x6502d37c,0x1
6500ea00:	test   eax,eax
6500ea02:	je     0x6500ea1d
6500ea04:	push   esi
6500ea05:	push   eax
6500ea06:	call   DWORD PTR ds:0x6502408c
6500ea0c:	add    DWORD PTR ds:0x6502d380,0x1
6500ea13:	mov    ds:0x650303dc,eax
6500ea18:	pop    esi
6500ea19:	mov    esp,ebp
6500ea1b:	pop    ebp
6500ea1c:	ret    
6500ea1d:	xor    eax,eax
6500ea1f:	mov    ds:0x650303dc,eax
6500ea24:	pop    esi
6500ea25:	mov    esp,ebp
6500ea27:	pop    ebp
6500ea28:	ret    
6500ea29:	mov    eax,ds:0x650303dc
6500ea2e:	pop    esi
6500ea2f:	mov    esp,ebp
6500ea31:	pop    ebp
6500ea32:	ret    
6500ea33:	int3   
6500ea34:	int3   
6500ea35:	int3   
6500ea36:	int3   
6500ea37:	int3   
6500ea38:	int3   
6500ea39:	int3   
6500ea3a:	int3   
6500ea3b:	int3   
6500ea3c:	int3   
6500ea3d:	int3   
6500ea3e:	int3   
6500ea3f:	int3   
6500ea40:	push   esi
6500ea41:	push   edi
6500ea42:	mov    edi,DWORD PTR [esp+0xc]
6500ea46:	mov    esi,DWORD PTR [edi+0xc]
6500ea49:	cmp    esi,DWORD PTR [edi+0x14]
6500ea4c:	je     0x6500ea64
6500ea4e:	mov    edi,edi
6500ea50:	mov    eax,DWORD PTR [esi-0x4]
6500ea53:	mov    ecx,DWORD PTR [esi-0x8]
6500ea56:	push   eax
6500ea57:	call   ecx
6500ea59:	add    esi,0xfffffff8
6500ea5c:	add    esp,0x4
6500ea5f:	cmp    esi,DWORD PTR [edi+0x14]
6500ea62:	jne    0x6500ea50
6500ea64:	mov    edx,DWORD PTR [edi+0x14]
6500ea67:	push   edx
6500ea68:	call   0x65013746
6500ea6d:	mov    edi,DWORD PTR [edi+0x8]
6500ea70:	mov    esi,DWORD PTR [edi]
6500ea72:	push   edi
6500ea73:	call   0x65013746
6500ea78:	add    esp,0x8
6500ea7b:	test   esi,esi
6500ea7d:	je     0x6500ea91
6500ea7f:	nop
6500ea80:	mov    eax,esi
6500ea82:	mov    esi,DWORD PTR [esi]
6500ea84:	push   eax
6500ea85:	call   0x65013746
6500ea8a:	add    esp,0x4
6500ea8d:	test   esi,esi
6500ea8f:	jne    0x6500ea80
6500ea91:	pop    edi
6500ea92:	pop    esi
6500ea93:	ret    
6500ea94:	int3   
6500ea95:	int3   
6500ea96:	int3   
6500ea97:	int3   
6500ea98:	int3   
6500ea99:	int3   
6500ea9a:	int3   
6500ea9b:	int3   
6500ea9c:	int3   
6500ea9d:	int3   
6500ea9e:	int3   
6500ea9f:	int3   
6500eaa0:	push   esi
6500eaa1:	mov    esi,DWORD PTR [esp+0x8]
6500eaa5:	push   edi
6500eaa6:	mov    edi,DWORD PTR [esp+0x10]
6500eaaa:	lea    eax,[edi+0x4]
6500eaad:	push   eax
6500eaae:	mov    DWORD PTR [esi+0x18],edi
6500eab1:	call   0x65013823
6500eab6:	xor    ecx,ecx
6500eab8:	add    esp,0x4
6500eabb:	cmp    eax,ecx
6500eabd:	je     0x6500eada
6500eabf:	mov    DWORD PTR [esi+0x8],eax
6500eac2:	mov    DWORD PTR [esi],edi
6500eac4:	lea    edx,[eax+0x4]
6500eac7:	mov    DWORD PTR [esi+0x4],edx
6500eaca:	mov    DWORD PTR [eax],ecx
6500eacc:	pop    edi
6500eacd:	mov    DWORD PTR [esi+0xc],ecx
6500ead0:	mov    DWORD PTR [esi+0x10],ecx
6500ead3:	mov    DWORD PTR [esi+0x14],ecx
6500ead6:	mov    al,0x1
6500ead8:	pop    esi
6500ead9:	ret    
6500eada:	pop    edi
6500eadb:	xor    al,al
6500eadd:	pop    esi
6500eade:	ret    
6500eadf:	int3   
6500eae0:	mov    ecx,DWORD PTR [ebx]
6500eae2:	push   esi
6500eae3:	mov    esi,eax
6500eae5:	add    esi,0x3
6500eae8:	and    esi,0xfffffffc
6500eaeb:	cmp    ecx,esi
6500eaed:	jae    0x6500eb23
6500eaef:	push   edi
6500eaf0:	mov    edi,DWORD PTR [ebx+0x18]
6500eaf3:	cmp    edi,esi
6500eaf5:	jae    0x6500eafd
6500eaf7:	add    edi,edi
6500eaf9:	cmp    edi,esi
6500eafb:	jb     0x6500eaf7
6500eafd:	lea    eax,[edi+0x4]
6500eb00:	push   eax
6500eb01:	call   0x65013823
6500eb06:	mov    edx,DWORD PTR [ebx+0x8]
6500eb09:	mov    DWORD PTR [eax],edx
6500eb0b:	add    esp,0x4
6500eb0e:	sub    edi,esi
6500eb10:	lea    ecx,[eax+0x4]
6500eb13:	mov    DWORD PTR [ebx+0x8],eax
6500eb16:	lea    eax,[ecx+esi*1]
6500eb19:	mov    DWORD PTR [ebx],edi
6500eb1b:	pop    edi
6500eb1c:	mov    DWORD PTR [ebx+0x4],eax
6500eb1f:	mov    eax,ecx
6500eb21:	pop    esi
6500eb22:	ret    
6500eb23:	mov    eax,DWORD PTR [ebx+0x4]
6500eb26:	sub    ecx,esi
6500eb28:	mov    DWORD PTR [ebx],ecx
6500eb2a:	lea    ecx,[eax+esi*1]
6500eb2d:	mov    DWORD PTR [ebx+0x4],ecx
6500eb30:	pop    esi
6500eb31:	ret    
6500eb32:	int3   
6500eb33:	int3   
6500eb34:	int3   
6500eb35:	int3   
6500eb36:	int3   
6500eb37:	int3   
6500eb38:	int3   
6500eb39:	int3   
6500eb3a:	int3   
6500eb3b:	int3   
6500eb3c:	int3   
6500eb3d:	int3   
6500eb3e:	int3   
6500eb3f:	int3   
6500eb40:	push   ebx
6500eb41:	mov    DWORD PTR [esi],0x6
6500eb47:	mov    DWORD PTR [esi+0x8],0x0
6500eb4e:	mov    ebx,DWORD PTR [ecx]
6500eb50:	shl    eax,0x4
6500eb53:	call   0x6500eae0
6500eb58:	mov    DWORD PTR [esi+0xc],eax
6500eb5b:	neg    eax
6500eb5d:	sbb    eax,eax
6500eb5f:	neg    eax
6500eb61:	sub    eax,0x1
6500eb64:	pop    ebx
6500eb65:	ret    
6500eb66:	int3   
6500eb67:	int3   
6500eb68:	int3   
6500eb69:	int3   
6500eb6a:	int3   
6500eb6b:	int3   
6500eb6c:	int3   
6500eb6d:	int3   
6500eb6e:	int3   
6500eb6f:	int3   
6500eb70:	push   ebx
6500eb71:	mov    DWORD PTR [esi],0x7
6500eb77:	mov    DWORD PTR [esi+0x8],0x0
6500eb7e:	mov    ebx,DWORD PTR [ecx]
6500eb80:	shl    eax,0x5
6500eb83:	call   0x6500eae0
6500eb88:	mov    DWORD PTR [esi+0xc],eax
6500eb8b:	neg    eax
6500eb8d:	sbb    eax,eax
6500eb8f:	neg    eax
6500eb91:	sub    eax,0x1
6500eb94:	pop    ebx
6500eb95:	ret    
6500eb96:	int3   
6500eb97:	int3   
6500eb98:	int3   
6500eb99:	int3   
6500eb9a:	int3   
6500eb9b:	int3   
6500eb9c:	int3   
6500eb9d:	int3   
6500eb9e:	int3   
6500eb9f:	int3   
6500eba0:	sub    esp,0x44
6500eba3:	mov    eax,DWORD PTR [esp+0x54]
6500eba7:	mov    edx,DWORD PTR [esp+0x4c]
6500ebab:	mov    ecx,DWORD PTR [esp+0x48]
6500ebaf:	mov    eax,DWORD PTR [eax]
6500ebb1:	push   ebx
6500ebb2:	push   ebp
6500ebb3:	push   esi
6500ebb4:	mov    esi,DWORD PTR [esp+0x5c]
6500ebb8:	add    eax,edx
6500ebba:	add    edx,esi
6500ebbc:	mov    esi,DWORD PTR [ecx+0xc]
6500ebbf:	mov    DWORD PTR [esp+0x18],esi
6500ebc3:	mov    esi,DWORD PTR [ecx+0x8]
6500ebc6:	mov    ecx,DWORD PTR [ecx+0x10]
6500ebc9:	push   edi
6500ebca:	xor    edi,edi
6500ebcc:	cmp    eax,edx
6500ebce:	mov    DWORD PTR [esp+0x60],ecx
6500ebd2:	mov    DWORD PTR [esp+0x14],eax
6500ebd6:	mov    DWORD PTR [esp+0x20],edx
6500ebda:	mov    DWORD PTR [esp+0x18],esi
6500ebde:	lea    ecx,[edi+0x20]
6500ebe1:	je     0x6500f461
6500ebe7:	mov    ebp,DWORD PTR [esp+0x38]
6500ebeb:	jmp    0x6500ebf0
6500ebed:	lea    ecx,[ecx+0x0]
6500ebf0:	mov    eax,DWORD PTR [esp+0x18]
6500ebf4:	test   eax,eax
6500ebf6:	mov    ebx,DWORD PTR [esp+0x14]
6500ebfa:	jne    0x6500ed0f
6500ec00:	mov    al,BYTE PTR [ebx]
6500ec02:	cmp    al,0x7f
6500ec04:	ja     0x6500ec1a
6500ec06:	movzx  eax,al
6500ec09:	cdq    
6500ec0a:	mov    ebx,0x2
6500ec0f:	mov    ebp,eax
6500ec11:	mov    DWORD PTR [esp+0x3c],edx
6500ec15:	jmp    0x6500f2ec
6500ec1a:	cmp    al,0xe0
6500ec1c:	jb     0x6500ec42
6500ec1e:	cmp    al,0xff
6500ec20:	ja     0x6500ec42
6500ec22:	test   al,al
6500ec24:	movsx  eax,al
6500ec27:	cdq    
6500ec28:	mov    ebp,eax
6500ec2a:	mov    DWORD PTR [esp+0x3c],edx
6500ec2e:	mov    DWORD PTR [esp+0x38],ebp
6500ec32:	jl     0x6500ef4b
6500ec38:	mov    ebx,0x2
6500ec3d:	jmp    0x6500f2f0
6500ec42:	cmp    al,0xc0
6500ec44:	jb     0x6500ecde
6500ec4a:	cmp    al,0xdf
6500ec4c:	ja     0x6500ecde
6500ec52:	movzx  eax,al
6500ec55:	lea    ecx,[eax-0xc0]
6500ec5b:	cmp    ecx,0x1f
6500ec5e:	ja     0x6500f465
6500ec64:	movzx  ecx,BYTE PTR [ecx+0x6500f4b0]
6500ec6b:	jmp    DWORD PTR [ecx*4+0x6500f498]
6500ec72:	xor    ebx,ebx
6500ec74:	jmp    0x6500f2f0
6500ec79:	mov    BYTE PTR [esp+0x38],0x0
6500ec7e:	mov    ebp,DWORD PTR [esp+0x38]
6500ec82:	mov    ebx,0x1
6500ec87:	jmp    0x6500f2f0
6500ec8c:	mov    ebx,0x1
6500ec91:	mov    BYTE PTR [esp+0x38],bl
6500ec95:	mov    ebp,DWORD PTR [esp+0x38]
6500ec99:	jmp    0x6500f2f0
6500ec9e:	mov    ecx,eax
6500eca0:	and    ecx,0x3
6500eca3:	mov    esi,0x1
6500eca8:	shl    esi,cl
6500ecaa:	and    eax,0x1f
6500ecad:	add    ebx,0x1
6500ecb0:	mov    DWORD PTR [esp+0x18],eax
6500ecb4:	mov    DWORD PTR [esp+0x1c],esi
6500ecb8:	mov    DWORD PTR [esp+0x14],ebx
6500ecbc:	jmp    0x6500ed13
6500ecbe:	mov    ecx,eax
6500ecc0:	and    ecx,0x1
6500ecc3:	mov    esi,0x2
6500ecc8:	shl    esi,cl
6500ecca:	and    eax,0x1f
6500eccd:	add    ebx,0x1
6500ecd0:	mov    DWORD PTR [esp+0x18],eax
6500ecd4:	mov    DWORD PTR [esp+0x1c],esi
6500ecd8:	mov    DWORD PTR [esp+0x14],ebx
6500ecdc:	jmp    0x6500ed13
6500ecde:	cmp    al,0xa0
6500ece0:	jb     0x6500f242
6500ece6:	cmp    al,0xbf
6500ece8:	ja     0x6500f242
6500ecee:	and    eax,0x1f
6500ecf1:	mov    esi,eax
6500ecf3:	mov    DWORD PTR [esp+0x1c],esi
6500ecf7:	je     0x6500efed
6500ecfd:	mov    eax,0x20
6500ed02:	add    ebx,0x1
6500ed05:	mov    DWORD PTR [esp+0x18],eax
6500ed09:	mov    DWORD PTR [esp+0x14],ebx
6500ed0d:	jmp    0x6500ed13
6500ed0f:	mov    esi,DWORD PTR [esp+0x1c]
6500ed13:	mov    ecx,edx
6500ed15:	sub    ecx,ebx
6500ed17:	cmp    ecx,esi
6500ed19:	jb     0x6500f461
6500ed1f:	mov    edi,ebx
6500ed21:	add    eax,0xfffffff6
6500ed24:	cmp    eax,0x16
6500ed27:	lea    ebx,[ebx+esi*1-0x1]
6500ed2b:	mov    DWORD PTR [esp+0x14],ebx
6500ed2f:	ja     0x6500f465
6500ed35:	jmp    DWORD PTR [eax*4+0x6500f4d0]
6500ed3c:	xor    eax,eax
6500ed3e:	mov    ah,BYTE PTR [edi]
6500ed40:	mov    al,BYTE PTR [edi+0x1]
6500ed43:	mov    esi,eax
6500ed45:	test   esi,esi
6500ed47:	jmp    0x6500ecf3
6500ed49:	movzx  eax,BYTE PTR [edi+0x2]
6500ed4d:	xor    ecx,ecx
6500ed4f:	mov    ch,BYTE PTR [edi]
6500ed51:	mov    cl,BYTE PTR [edi+0x1]
6500ed54:	shl    ecx,0x8
6500ed57:	or     ecx,eax
6500ed59:	movzx  eax,BYTE PTR [edi+0x3]
6500ed5d:	shl    ecx,0x8
6500ed60:	or     ecx,eax
6500ed62:	mov    esi,ecx
6500ed64:	jmp    0x6500ecf3
6500ed66:	movzx  edx,BYTE PTR [edi+0x2]
6500ed6a:	movzx  eax,BYTE PTR [edi+0x3]
6500ed6e:	xor    ecx,ecx
6500ed70:	mov    ch,BYTE PTR [edi]
6500ed72:	mov    ebx,0x4
6500ed77:	mov    cl,BYTE PTR [edi+0x1]
6500ed7a:	shl    ecx,0x8
6500ed7d:	or     ecx,edx
6500ed7f:	shl    ecx,0x8
6500ed82:	or     ecx,eax
6500ed84:	mov    DWORD PTR [esp+0x24],ecx
6500ed88:	fld    DWORD PTR [esp+0x24]
6500ed8c:	fstp   QWORD PTR [esp+0x38]
6500ed90:	mov    ebp,DWORD PTR [esp+0x38]
6500ed94:	jmp    0x6500f2f0
6500ed99:	movzx  eax,BYTE PTR [edi]
6500ed9c:	cdq    
6500ed9d:	shld   edx,eax,0x8
6500eda1:	shl    eax,0x8
6500eda4:	mov    ecx,eax
6500eda6:	movzx  eax,BYTE PTR [edi+0x1]
6500edaa:	mov    esi,edx
6500edac:	cdq    
6500edad:	or     ecx,eax
6500edaf:	movzx  eax,BYTE PTR [edi+0x2]
6500edb3:	or     esi,edx
6500edb5:	shld   esi,ecx,0x8
6500edb9:	shl    ecx,0x8
6500edbc:	cdq    
6500edbd:	or     ecx,eax
6500edbf:	movzx  eax,BYTE PTR [edi+0x3]
6500edc3:	or     esi,edx
6500edc5:	shld   esi,ecx,0x8
6500edc9:	shl    ecx,0x8
6500edcc:	cdq    
6500edcd:	or     ecx,eax
6500edcf:	movzx  eax,BYTE PTR [edi+0x4]
6500edd3:	or     esi,edx
6500edd5:	shld   esi,ecx,0x8
6500edd9:	shl    ecx,0x8
6500eddc:	cdq    
6500eddd:	or     ecx,eax
6500eddf:	movzx  eax,BYTE PTR [edi+0x5]
6500ede3:	or     esi,edx
6500ede5:	shld   esi,ecx,0x8
6500ede9:	shl    ecx,0x8
6500edec:	cdq    
6500eded:	or     ecx,eax
6500edef:	movzx  eax,BYTE PTR [edi+0x6]
6500edf3:	or     esi,edx
6500edf5:	shld   esi,ecx,0x8
6500edf9:	shl    ecx,0x8
6500edfc:	cdq    
6500edfd:	or     ecx,eax
6500edff:	movzx  eax,BYTE PTR [edi+0x7]
6500ee03:	or     esi,edx
6500ee05:	shld   esi,ecx,0x8
6500ee09:	cdq    
6500ee0a:	shl    ecx,0x8
6500ee0d:	or     ecx,eax
6500ee0f:	or     esi,edx
6500ee11:	mov    DWORD PTR [esp+0x28],ecx
6500ee15:	mov    DWORD PTR [esp+0x2c],esi
6500ee19:	mov    ebx,0x4
6500ee1e:	fld    QWORD PTR [esp+0x28]
6500ee22:	fstp   QWORD PTR [esp+0x38]
6500ee26:	mov    ebp,DWORD PTR [esp+0x38]
6500ee2a:	jmp    0x6500f2f0
6500ee2f:	movzx  eax,BYTE PTR [edi]
6500ee32:	cdq    
6500ee33:	mov    ebx,0x2
6500ee38:	mov    ebp,eax
6500ee3a:	mov    DWORD PTR [esp+0x3c],edx
6500ee3e:	jmp    0x6500f2ec
6500ee43:	xor    edx,edx
6500ee45:	mov    dh,BYTE PTR [edi]
6500ee47:	mov    ebx,0x2
6500ee4c:	mov    dl,BYTE PTR [edi+0x1]
6500ee4f:	movzx  eax,dx
6500ee52:	cdq    
6500ee53:	mov    ebp,eax
6500ee55:	mov    DWORD PTR [esp+0x3c],edx
6500ee59:	jmp    0x6500f2ec
6500ee5e:	movzx  ecx,BYTE PTR [edi+0x2]
6500ee62:	movzx  edx,BYTE PTR [edi+0x3]
6500ee66:	xor    eax,eax
6500ee68:	mov    ah,BYTE PTR [edi]
6500ee6a:	mov    ebx,0x2
6500ee6f:	mov    DWORD PTR [esp+0x3c],0x0
6500ee77:	mov    al,BYTE PTR [edi+0x1]
6500ee7a:	shl    eax,0x8
6500ee7d:	or     eax,ecx
6500ee7f:	shl    eax,0x8
6500ee82:	or     eax,edx
6500ee84:	mov    ebp,eax
6500ee86:	jmp    0x6500f2ec
6500ee8b:	movzx  eax,BYTE PTR [edi]
6500ee8e:	cdq    
6500ee8f:	shld   edx,eax,0x8
6500ee93:	shl    eax,0x8
6500ee96:	mov    ecx,eax
6500ee98:	movzx  eax,BYTE PTR [edi+0x1]
6500ee9c:	mov    esi,edx
6500ee9e:	cdq    
6500ee9f:	or     ecx,eax
6500eea1:	movzx  eax,BYTE PTR [edi+0x2]
6500eea5:	or     esi,edx
6500eea7:	shld   esi,ecx,0x8
6500eeab:	shl    ecx,0x8
6500eeae:	cdq    
6500eeaf:	or     ecx,eax
6500eeb1:	movzx  eax,BYTE PTR [edi+0x3]
6500eeb5:	or     esi,edx
6500eeb7:	shld   esi,ecx,0x8
6500eebb:	shl    ecx,0x8
6500eebe:	cdq    
6500eebf:	or     ecx,eax
6500eec1:	movzx  eax,BYTE PTR [edi+0x4]
6500eec5:	or     esi,edx
6500eec7:	shld   esi,ecx,0x8
6500eecb:	shl    ecx,0x8
6500eece:	cdq    
6500eecf:	or     ecx,eax
6500eed1:	movzx  eax,BYTE PTR [edi+0x5]
6500eed5:	or     esi,edx
6500eed7:	shld   esi,ecx,0x8
6500eedb:	shl    ecx,0x8
6500eede:	cdq    
6500eedf:	or     ecx,eax
6500eee1:	movzx  eax,BYTE PTR [edi+0x6]
6500eee5:	or     esi,edx
6500eee7:	shld   esi,ecx,0x8
6500eeeb:	cdq    
6500eeec:	shl    ecx,0x8
6500eeef:	or     ecx,eax
6500eef1:	movzx  eax,BYTE PTR [edi+0x7]
6500eef5:	or     esi,edx
6500eef7:	mov    ebp,ecx
6500eef9:	mov    ecx,esi
6500eefb:	shld   ecx,ebp,0x8
6500eeff:	cdq    
6500ef00:	shl    ebp,0x8
6500ef03:	or     ebp,eax
6500ef05:	mov    ebx,0x2
6500ef0a:	or     ecx,edx
6500ef0c:	jmp    0x6500f2e8
6500ef11:	mov    al,BYTE PTR [edi]
6500ef13:	jmp    0x6500ec22
6500ef18:	xor    edx,edx
6500ef1a:	mov    dh,BYTE PTR [edi]
6500ef1c:	mov    dl,BYTE PTR [edi+0x1]
6500ef1f:	movzx  eax,dx
6500ef22:	test   ax,ax
6500ef25:	movsx  eax,ax
6500ef28:	jmp    0x6500ec27
6500ef2d:	movzx  ecx,BYTE PTR [edi+0x2]
6500ef31:	movzx  edx,BYTE PTR [edi+0x3]
6500ef35:	xor    eax,eax
6500ef37:	mov    ah,BYTE PTR [edi]
6500ef39:	mov    al,BYTE PTR [edi+0x1]
6500ef3c:	shl    eax,0x8
6500ef3f:	or     eax,ecx
6500ef41:	shl    eax,0x8
6500ef44:	or     eax,edx
6500ef46:	jmp    0x6500ec27
6500ef4b:	mov    ebx,0x3
6500ef50:	jmp    0x6500f2f0
6500ef55:	movzx  eax,BYTE PTR [edi]
6500ef58:	cdq    
6500ef59:	shld   edx,eax,0x8
6500ef5d:	shl    eax,0x8
6500ef60:	mov    ecx,eax
6500ef62:	movzx  eax,BYTE PTR [edi+0x1]
6500ef66:	mov    esi,edx
6500ef68:	cdq    
6500ef69:	or     ecx,eax
6500ef6b:	movzx  eax,BYTE PTR [edi+0x2]
6500ef6f:	or     esi,edx
6500ef71:	shld   esi,ecx,0x8
6500ef75:	shl    ecx,0x8
6500ef78:	cdq    
6500ef79:	or     ecx,eax
6500ef7b:	movzx  eax,BYTE PTR [edi+0x3]
6500ef7f:	or     esi,edx
6500ef81:	shld   esi,ecx,0x8
6500ef85:	shl    ecx,0x8
6500ef88:	cdq    
6500ef89:	or     ecx,eax
6500ef8b:	movzx  eax,BYTE PTR [edi+0x4]
6500ef8f:	or     esi,edx
6500ef91:	shld   esi,ecx,0x8
6500ef95:	shl    ecx,0x8
6500ef98:	cdq    
6500ef99:	or     ecx,eax
6500ef9b:	movzx  eax,BYTE PTR [edi+0x5]
6500ef9f:	or     esi,edx
6500efa1:	shld   esi,ecx,0x8
6500efa5:	shl    ecx,0x8
6500efa8:	cdq    
6500efa9:	or     ecx,eax
6500efab:	movzx  eax,BYTE PTR [edi+0x6]
6500efaf:	or     esi,edx
6500efb1:	shld   esi,ecx,0x8
6500efb5:	cdq    
6500efb6:	shl    ecx,0x8
6500efb9:	or     ecx,eax
6500efbb:	movzx  eax,BYTE PTR [edi+0x7]
6500efbf:	or     esi,edx
6500efc1:	mov    ebp,ecx
6500efc3:	mov    ecx,esi
6500efc5:	shld   ecx,ebp,0x8
6500efc9:	cdq    
6500efca:	shl    ebp,0x8
6500efcd:	or     ebp,eax
6500efcf:	or     ecx,edx
6500efd1:	jl     0x6500efe3
6500efd3:	jg     0x6500efd9
6500efd5:	test   ebp,ebp
6500efd7:	jb     0x6500efe3
6500efd9:	mov    ebx,0x2
6500efde:	jmp    0x6500f2e8
6500efe3:	mov    ebx,0x3
6500efe8:	jmp    0x6500f2e8
6500efed:	mov    edx,DWORD PTR [esp+0x58]
6500eff1:	mov    ebx,0x5
6500eff6:	mov    DWORD PTR [esp+0x3c],edi
6500effa:	mov    ebp,esi
6500effc:	mov    BYTE PTR [edx+0x4],0x1
6500f000:	jmp    0x6500f2ec
6500f005:	cmp    DWORD PTR [esp+0x60],0x20
6500f00a:	jae    0x6500f465
6500f010:	mov    eax,DWORD PTR [esp+0x60]
6500f014:	mov    ecx,DWORD PTR [esp+0x58]
6500f018:	lea    eax,[eax+eax*4]
6500f01b:	lea    esi,[ecx+eax*8+0x18]
6500f01f:	xor    eax,eax
6500f021:	mov    ah,BYTE PTR [edi]
6500f023:	mov    al,BYTE PTR [edi+0x1]
6500f026:	mov    DWORD PTR [esi],0x6
6500f02c:	mov    DWORD PTR [esi+0x8],0x0
6500f033:	mov    ebx,DWORD PTR [ecx]
6500f035:	shl    eax,0x4
6500f038:	call   0x6500eae0
6500f03d:	test   eax,eax
6500f03f:	mov    DWORD PTR [esi+0xc],eax
6500f042:	je     0x6500f465
6500f048:	xor    ecx,ecx
6500f04a:	mov    ch,BYTE PTR [edi]
6500f04c:	mov    cl,BYTE PTR [edi+0x1]
6500f04f:	test   cx,cx
6500f052:	jne    0x6500f069
6500f054:	mov    edx,DWORD PTR [esi+0x4]
6500f057:	mov    ebx,DWORD PTR [esi]
6500f059:	mov    ebp,DWORD PTR [esi+0x8]
6500f05c:	mov    DWORD PTR [esp+0x34],edx
6500f060:	mov    DWORD PTR [esp+0x3c],eax
6500f064:	jmp    0x6500f2ec
6500f069:	xor    ecx,ecx
6500f06b:	add    DWORD PTR [esp+0x60],0x1
6500f070:	mov    DWORD PTR [esi+0x14],0x0
6500f077:	mov    ch,BYTE PTR [edi]
6500f079:	mov    cl,BYTE PTR [edi+0x1]
6500f07c:	mov    DWORD PTR [esi+0x10],ecx
6500f07f:	jmp    0x6500f41a
6500f084:	cmp    DWORD PTR [esp+0x60],0x20
6500f089:	jae    0x6500f465
6500f08f:	mov    eax,DWORD PTR [esp+0x60]
6500f093:	mov    ecx,DWORD PTR [esp+0x58]
6500f097:	lea    edx,[eax+eax*4]
6500f09a:	xor    eax,eax
6500f09c:	mov    ah,BYTE PTR [edi]
6500f09e:	lea    esi,[ecx+edx*8+0x18]
6500f0a2:	movzx  edx,BYTE PTR [edi+0x2]
6500f0a6:	mov    al,BYTE PTR [edi+0x1]
6500f0a9:	shl    eax,0x8
6500f0ac:	or     eax,edx
6500f0ae:	movzx  edx,BYTE PTR [edi+0x3]
6500f0b2:	shl    eax,0x8
6500f0b5:	or     eax,edx
6500f0b7:	mov    DWORD PTR [esi],0x6
6500f0bd:	mov    DWORD PTR [esi+0x8],0x0
6500f0c4:	mov    ebx,DWORD PTR [ecx]
6500f0c6:	shl    eax,0x4
6500f0c9:	call   0x6500eae0
6500f0ce:	test   eax,eax
6500f0d0:	mov    DWORD PTR [esi+0xc],eax
6500f0d3:	je     0x6500f465
6500f0d9:	movzx  ecx,BYTE PTR [edi+0x2]
6500f0dd:	movzx  edx,BYTE PTR [edi+0x3]
6500f0e1:	xor    eax,eax
6500f0e3:	mov    ah,BYTE PTR [edi]
6500f0e5:	mov    al,BYTE PTR [edi+0x1]
6500f0e8:	shl    eax,0x8
6500f0eb:	or     eax,ecx
6500f0ed:	shl    eax,0x8
6500f0f0:	or     eax,edx
6500f0f2:	je     0x6500f2d9
6500f0f8:	xor    edx,edx
6500f0fa:	mov    DWORD PTR [esi+0x14],0x0
6500f101:	mov    dh,BYTE PTR [edi]
6500f103:	movzx  eax,BYTE PTR [edi+0x2]
6500f107:	movzx  ecx,BYTE PTR [edi+0x3]
6500f10b:	mov    dl,BYTE PTR [edi+0x1]
6500f10e:	shl    edx,0x8
6500f111:	or     edx,eax
6500f113:	shl    edx,0x8
6500f116:	or     edx,ecx
6500f118:	add    DWORD PTR [esp+0x60],0x1
6500f11d:	jmp    0x6500f417
6500f122:	cmp    DWORD PTR [esp+0x60],0x20
6500f127:	jae    0x6500f465
6500f12d:	mov    eax,DWORD PTR [esp+0x60]
6500f131:	mov    ecx,DWORD PTR [esp+0x58]
6500f135:	lea    edx,[eax+eax*4]
6500f138:	xor    eax,eax
6500f13a:	mov    ah,BYTE PTR [edi]
6500f13c:	lea    esi,[ecx+edx*8+0x18]
6500f140:	mov    al,BYTE PTR [edi+0x1]
6500f143:	mov    DWORD PTR [esi],0x7
6500f149:	mov    DWORD PTR [esi+0x8],0x0
6500f150:	mov    ebx,DWORD PTR [ecx]
6500f152:	shl    eax,0x5
6500f155:	call   0x6500eae0
6500f15a:	test   eax,eax
6500f15c:	mov    DWORD PTR [esi+0xc],eax
6500f15f:	je     0x6500f465
6500f165:	xor    eax,eax
6500f167:	mov    ah,BYTE PTR [edi]
6500f169:	mov    al,BYTE PTR [edi+0x1]
6500f16c:	test   ax,ax
6500f16f:	jne    0x6500f189
6500f171:	mov    ecx,DWORD PTR [esi+0x4]
6500f174:	mov    edx,DWORD PTR [esi+0xc]
6500f177:	mov    ebx,DWORD PTR [esi]
6500f179:	mov    ebp,DWORD PTR [esi+0x8]
6500f17c:	mov    DWORD PTR [esp+0x34],ecx
6500f180:	mov    DWORD PTR [esp+0x3c],edx
6500f184:	jmp    0x6500f2ec
6500f189:	xor    ecx,ecx
6500f18b:	mov    eax,0x1
6500f190:	add    DWORD PTR [esp+0x60],eax
6500f194:	mov    DWORD PTR [esi+0x14],eax
6500f197:	mov    ch,BYTE PTR [edi]
6500f199:	mov    cl,BYTE PTR [edi+0x1]
6500f19c:	mov    DWORD PTR [esi+0x10],ecx
6500f19f:	jmp    0x6500f41a
6500f1a4:	cmp    DWORD PTR [esp+0x60],0x20
6500f1a9:	jae    0x6500f465
6500f1af:	mov    eax,DWORD PTR [esp+0x60]
6500f1b3:	mov    ecx,DWORD PTR [esp+0x58]
6500f1b7:	lea    edx,[eax+eax*4]
6500f1ba:	xor    eax,eax
6500f1bc:	mov    ah,BYTE PTR [edi]
6500f1be:	lea    esi,[ecx+edx*8+0x18]
6500f1c2:	movzx  edx,BYTE PTR [edi+0x2]
6500f1c6:	mov    al,BYTE PTR [edi+0x1]
6500f1c9:	shl    eax,0x8
6500f1cc:	or     eax,edx
6500f1ce:	movzx  edx,BYTE PTR [edi+0x3]
6500f1d2:	shl    eax,0x8
6500f1d5:	or     eax,edx
6500f1d7:	mov    DWORD PTR [esi],0x7
6500f1dd:	mov    DWORD PTR [esi+0x8],0x0
6500f1e4:	mov    ebx,DWORD PTR [ecx]
6500f1e6:	shl    eax,0x5
6500f1e9:	call   0x6500eae0
6500f1ee:	test   eax,eax
6500f1f0:	mov    DWORD PTR [esi+0xc],eax
6500f1f3:	je     0x6500f465
6500f1f9:	movzx  ecx,BYTE PTR [edi+0x2]
6500f1fd:	movzx  edx,BYTE PTR [edi+0x3]
6500f201:	xor    eax,eax
6500f203:	mov    ah,BYTE PTR [edi]
6500f205:	mov    al,BYTE PTR [edi+0x1]
6500f208:	shl    eax,0x8
6500f20b:	or     eax,ecx
6500f20d:	shl    eax,0x8
6500f210:	or     eax,edx
6500f212:	je     0x6500f2d9
6500f218:	xor    edx,edx
6500f21a:	mov    eax,0x1
6500f21f:	mov    DWORD PTR [esi+0x14],eax
6500f222:	mov    dh,BYTE PTR [edi]
6500f224:	movzx  ecx,BYTE PTR [edi+0x2]
6500f228:	mov    dl,BYTE PTR [edi+0x1]
6500f22b:	shl    edx,0x8
6500f22e:	or     edx,ecx
6500f230:	movzx  ecx,BYTE PTR [edi+0x3]
6500f234:	shl    edx,0x8
6500f237:	or     edx,ecx
6500f239:	add    DWORD PTR [esp+0x60],eax
6500f23d:	jmp    0x6500f417
6500f242:	cmp    al,0x90
6500f244:	jb     0x6500f293
6500f246:	cmp    al,0x9f
6500f248:	ja     0x6500f293
6500f24a:	cmp    DWORD PTR [esp+0x60],ecx
6500f24e:	jae    0x6500f465
6500f254:	mov    ecx,DWORD PTR [esp+0x60]
6500f258:	lea    edx,[ecx+ecx*4]
6500f25b:	mov    ecx,DWORD PTR [esp+0x58]
6500f25f:	lea    esi,[ecx+edx*8+0x18]
6500f263:	and    eax,0xf
6500f266:	call   0x6500eb40
6500f26b:	test   eax,eax
6500f26d:	jl     0x6500f465
6500f273:	mov    eax,DWORD PTR [esp+0x14]
6500f277:	test   BYTE PTR [eax],0xf
6500f27a:	je     0x6500f2d9
6500f27c:	mov    DWORD PTR [esi+0x14],0x0
6500f283:	movzx  edx,BYTE PTR [eax]
6500f286:	and    edx,0xf
6500f289:	add    DWORD PTR [esp+0x60],0x1
6500f28e:	jmp    0x6500f417
6500f293:	cmp    al,0x80
6500f295:	jb     0x6500f465
6500f29b:	cmp    al,0x8f
6500f29d:	ja     0x6500f465
6500f2a3:	cmp    DWORD PTR [esp+0x60],ecx
6500f2a7:	jae    0x6500f465
6500f2ad:	mov    ecx,DWORD PTR [esp+0x60]
6500f2b1:	lea    edx,[ecx+ecx*4]
6500f2b4:	mov    ecx,DWORD PTR [esp+0x58]
6500f2b8:	lea    esi,[ecx+edx*8+0x18]
6500f2bc:	and    eax,0xf
6500f2bf:	call   0x6500eb70
6500f2c4:	test   eax,eax
6500f2c6:	jl     0x6500f465
6500f2cc:	mov    eax,DWORD PTR [esp+0x14]
6500f2d0:	test   BYTE PTR [eax],0xf
6500f2d3:	jne    0x6500f405
6500f2d9:	mov    eax,DWORD PTR [esi+0x4]
6500f2dc:	mov    ecx,DWORD PTR [esi+0xc]
6500f2df:	mov    ebp,DWORD PTR [esi+0x8]
6500f2e2:	mov    ebx,DWORD PTR [esi]
6500f2e4:	mov    DWORD PTR [esp+0x34],eax
6500f2e8:	mov    DWORD PTR [esp+0x3c],ecx
6500f2ec:	mov    DWORD PTR [esp+0x38],ebp
6500f2f0:	mov    eax,DWORD PTR [esp+0x60]
6500f2f4:	lea    edx,[eax+eax*4]
6500f2f7:	mov    eax,DWORD PTR [esp+0x58]
6500f2fb:	lea    edx,[eax+edx*8+0x18]
6500f2ff:	lea    eax,[edx-0x28]
6500f302:	add    edx,0xfffffff0
6500f305:	mov    esi,0x1
6500f30a:	lea    ebx,[ebx+0x0]
6500f310:	cmp    DWORD PTR [esp+0x60],0x0
6500f315:	je     0x6500f441
6500f31b:	mov    ecx,DWORD PTR [eax+0x14]
6500f31e:	sub    ecx,0x0
6500f321:	je     0x6500f39d
6500f323:	sub    ecx,esi
6500f325:	je     0x6500f3e8
6500f32b:	sub    ecx,esi
6500f32d:	jne    0x6500f465
6500f333:	mov    ecx,DWORD PTR [edx+0x4]
6500f336:	mov    esi,DWORD PTR [edx]
6500f338:	mov    DWORD PTR [esp+0x44],ecx
6500f33c:	mov    ecx,DWORD PTR [edx+0x8]
6500f33f:	mov    DWORD PTR [esp+0x48],ecx
6500f343:	mov    ecx,DWORD PTR [edx+0xc]
6500f346:	mov    DWORD PTR [esp+0x4c],ecx
6500f34a:	mov    ecx,DWORD PTR [eax+0x8]
6500f34d:	shl    ecx,0x5
6500f350:	add    ecx,DWORD PTR [eax+0xc]
6500f353:	mov    DWORD PTR [ecx],esi
6500f355:	mov    esi,DWORD PTR [esp+0x44]
6500f359:	mov    DWORD PTR [ecx+0x4],esi
6500f35c:	mov    esi,DWORD PTR [esp+0x48]
6500f360:	mov    DWORD PTR [ecx+0x8],esi
6500f363:	mov    esi,DWORD PTR [esp+0x4c]
6500f367:	mov    DWORD PTR [ecx+0xc],esi
6500f36a:	mov    ecx,DWORD PTR [eax+0x8]
6500f36d:	mov    esi,DWORD PTR [eax+0xc]
6500f370:	shl    ecx,0x5
6500f373:	lea    ecx,[ecx+esi*1+0x10]
6500f377:	mov    esi,DWORD PTR [esp+0x34]
6500f37b:	mov    DWORD PTR [ecx],ebx
6500f37d:	mov    DWORD PTR [ecx+0x4],esi
6500f380:	mov    esi,DWORD PTR [esp+0x3c]
6500f384:	mov    DWORD PTR [ecx+0x8],ebp
6500f387:	mov    DWORD PTR [ecx+0xc],esi
6500f38a:	mov    esi,0x1
6500f38f:	add    DWORD PTR [eax+0x8],esi
6500f392:	add    DWORD PTR [eax+0x10],0xffffffff
6500f396:	je     0x6500f3c2
6500f398:	mov    DWORD PTR [eax+0x14],esi
6500f39b:	jmp    0x6500f41a
6500f39d:	mov    ecx,DWORD PTR [eax+0x8]
6500f3a0:	shl    ecx,0x4
6500f3a3:	add    ecx,DWORD PTR [eax+0xc]
6500f3a6:	mov    DWORD PTR [ecx],ebx
6500f3a8:	mov    ebx,DWORD PTR [esp+0x34]
6500f3ac:	mov    DWORD PTR [ecx+0x4],ebx
6500f3af:	mov    ebx,DWORD PTR [esp+0x3c]
6500f3b3:	mov    DWORD PTR [ecx+0x8],ebp
6500f3b6:	mov    DWORD PTR [ecx+0xc],ebx
6500f3b9:	add    DWORD PTR [eax+0x8],esi
6500f3bc:	add    DWORD PTR [eax+0x10],0xffffffff
6500f3c0:	jne    0x6500f41a
6500f3c2:	mov    ecx,DWORD PTR [eax+0x4]
6500f3c5:	mov    ebp,DWORD PTR [eax+0x8]
6500f3c8:	mov    ebx,DWORD PTR [eax]
6500f3ca:	sub    DWORD PTR [esp+0x60],esi
6500f3ce:	mov    DWORD PTR [esp+0x34],ecx
6500f3d2:	mov    ecx,DWORD PTR [eax+0xc]
6500f3d5:	sub    eax,0x28
6500f3d8:	mov    DWORD PTR [esp+0x38],ebp
6500f3dc:	mov    DWORD PTR [esp+0x3c],ecx
6500f3e0:	sub    edx,0x28
6500f3e3:	jmp    0x6500f310
6500f3e8:	mov    edx,DWORD PTR [esp+0x34]
6500f3ec:	mov    ecx,DWORD PTR [esp+0x3c]
6500f3f0:	mov    DWORD PTR [eax+0x18],ebx
6500f3f3:	mov    DWORD PTR [eax+0x1c],edx
6500f3f6:	mov    DWORD PTR [eax+0x20],ebp
6500f3f9:	mov    DWORD PTR [eax+0x24],ecx
6500f3fc:	mov    DWORD PTR [eax+0x14],0x2
6500f403:	jmp    0x6500f41a
6500f405:	mov    ecx,0x1
6500f40a:	mov    DWORD PTR [esi+0x14],ecx
6500f40d:	movzx  edx,BYTE PTR [eax]
6500f410:	and    edx,0xf
6500f413:	add    DWORD PTR [esp+0x60],ecx
6500f417:	mov    DWORD PTR [esi+0x10],edx
6500f41a:	mov    eax,DWORD PTR [esp+0x14]
6500f41e:	add    eax,0x1
6500f421:	cmp    eax,DWORD PTR [esp+0x20]
6500f425:	mov    DWORD PTR [esp+0x18],0x0
6500f42d:	mov    DWORD PTR [esp+0x14],eax
6500f431:	je     0x6500f461
6500f433:	mov    edx,DWORD PTR [esp+0x20]
6500f437:	mov    ecx,0x20
6500f43c:	jmp    0x6500ebf0
6500f441:	mov    eax,DWORD PTR [esp+0x58]
6500f445:	mov    ecx,DWORD PTR [esp+0x34]
6500f449:	mov    edx,DWORD PTR [esp+0x3c]
6500f44d:	add    DWORD PTR [esp+0x14],esi
6500f451:	mov    DWORD PTR [eax+0x18],ebx
6500f454:	mov    DWORD PTR [eax+0x1c],ecx
6500f457:	mov    DWORD PTR [eax+0x20],ebp
6500f45a:	mov    DWORD PTR [eax+0x24],edx
6500f45d:	mov    eax,esi
6500f45f:	jmp    0x6500f468
6500f461:	xor    eax,eax
6500f463:	jmp    0x6500f468
6500f465:	or     eax,0xffffffff
6500f468:	mov    ecx,DWORD PTR [esp+0x58]
6500f46c:	mov    edx,DWORD PTR [esp+0x18]
6500f470:	mov    DWORD PTR [ecx+0x8],edx
6500f473:	mov    edx,DWORD PTR [esp+0x1c]
6500f477:	mov    DWORD PTR [ecx+0xc],edx
6500f47a:	mov    edx,DWORD PTR [esp+0x60]
6500f47e:	mov    DWORD PTR [ecx+0x10],edx
6500f481:	mov    ecx,DWORD PTR [esp+0x14]
6500f485:	sub    ecx,DWORD PTR [esp+0x5c]
6500f489:	mov    edx,DWORD PTR [esp+0x64]
6500f48d:	pop    edi
6500f48e:	pop    esi
6500f48f:	pop    ebp
6500f490:	mov    DWORD PTR [edx],ecx
6500f492:	pop    ebx
6500f493:	add    esp,0x44
6500f496:	ret    
6500f497:	nop
6500f498:	jb     0x6500f486
6500f49a:	add    BYTE PTR [ebp+0x79],ah
6500f49d:	in     al,dx
6500f49e:	add    BYTE PTR [ebp-0x74],ah
6500f4a1:	in     al,dx
6500f4a2:	add    BYTE PTR [ebp-0x62],ah
6500f4a5:	in     al,dx
6500f4a6:	add    BYTE PTR [ebp-0x42],ah
6500f4a9:	in     al,dx
6500f4aa:	add    BYTE PTR [ebp+0x65],ah
6500f4ad:	hlt    
6500f4ae:	add    BYTE PTR [ebp+0x0],ah
6500f4b1:	add    eax,0x5050201
6500f4b6:	add    eax,0x3050505
6500f4bb:	add    eax,DWORD PTR [ebx]
6500f4bd:	add    eax,DWORD PTR [ebx]
6500f4bf:	add    eax,DWORD PTR [ebx]
6500f4c1:	add    eax,DWORD PTR [ebx]
6500f4c3:	add    eax,DWORD PTR ds:0x5050505
6500f4c9:	add    eax,0x4040404
6500f4ce:	add    al,0x4
6500f4d0:	in     ax,dx
6500f4d2:	add    BYTE PTR [ebp-0x67],ah
6500f4d5:	in     eax,dx
6500f4d6:	add    BYTE PTR [ebp+0x2f],ah
6500f4d9:	out    dx,al
6500f4da:	add    BYTE PTR [ebp+0x43],ah
6500f4dd:	out    dx,al
6500f4de:	add    BYTE PTR [ebp+0x5e],ah
6500f4e1:	out    dx,al
6500f4e2:	add    BYTE PTR [ebp-0x75],ah
6500f4e5:	out    dx,al
6500f4e6:	add    BYTE PTR [ebp+0x11],ah
6500f4e9:	out    dx,eax
6500f4ea:	add    BYTE PTR [ebp+0x18],ah
6500f4ed:	out    dx,eax
6500f4ee:	add    BYTE PTR [ebp+0x2d],ah
6500f4f1:	out    dx,eax
6500f4f2:	add    BYTE PTR [ebp+0x55],ah
6500f4f5:	out    dx,eax
6500f4f6:	add    BYTE PTR [ebp+0x65],ah
6500f4f9:	hlt    
6500f4fa:	add    BYTE PTR [ebp+0x65],ah
6500f4fd:	hlt    
6500f4fe:	add    BYTE PTR [ebp+0x65],ah
6500f501:	hlt    
6500f502:	add    BYTE PTR [ebp+0x65],ah
6500f505:	hlt    
6500f506:	add    BYTE PTR [ebp+0x65],ah
6500f509:	hlt    
6500f50a:	add    BYTE PTR [ebp+0x65],ah
6500f50d:	hlt    
6500f50e:	add    BYTE PTR [ebp+0x3c],ah
6500f511:	in     eax,dx
6500f512:	add    BYTE PTR [ebp+0x49],ah
6500f515:	in     eax,dx
6500f516:	add    BYTE PTR [ebp+0x5],ah
6500f519:	lock add BYTE PTR [ebp-0x7c],ah
6500f51d:	lock add BYTE PTR [ebp+0x22],ah
6500f521:	icebp  
6500f522:	add    BYTE PTR [ebp-0x5c],ah
6500f525:	icebp  
6500f526:	add    BYTE PTR [ebp-0x13],ah
6500f529:	out    dx,eax
6500f52a:	add    BYTE PTR [ebp-0x34],ah
6500f52d:	int3   
6500f52e:	int3   
6500f52f:	int3   
6500f530:	push   ebp
6500f531:	mov    ebp,esp
6500f533:	and    esp,0xfffffff8
6500f536:	sub    esp,0x51c
6500f53c:	push   ebx
6500f53d:	push   esi
6500f53e:	mov    esi,DWORD PTR [ebp+0x10]
6500f541:	xor    ebx,ebx
6500f543:	xor    eax,eax
6500f545:	cmp    esi,ebx
6500f547:	push   edi
6500f548:	mov    DWORD PTR [esp+0xc],eax
6500f54c:	je     0x6500f554
6500f54e:	mov    eax,DWORD PTR [esi]
6500f550:	mov    DWORD PTR [esp+0xc],eax
6500f554:	mov    edi,DWORD PTR [ebp+0xc]
6500f557:	cmp    edi,eax
6500f559:	ja     0x6500f564
6500f55b:	xor    eax,eax
6500f55d:	pop    edi
6500f55e:	pop    esi
6500f55f:	pop    ebx
6500f560:	mov    esp,ebp
6500f562:	pop    ebp
6500f563:	ret    
6500f564:	mov    edx,DWORD PTR [ebp+0x8]
6500f567:	xor    eax,eax
6500f569:	lea    ecx,[esp+0xc]
6500f56d:	push   ecx
6500f56e:	mov    DWORD PTR [esp+0x2c],eax
6500f572:	mov    DWORD PTR [esp+0x30],eax
6500f576:	mov    DWORD PTR [esp+0x34],eax
6500f57a:	mov    DWORD PTR [esp+0x38],eax
6500f57e:	mov    eax,DWORD PTR [ebp+0x14]
6500f581:	push   edi
6500f582:	mov    DWORD PTR [esp+0x18],eax
6500f586:	push   edx
6500f587:	lea    eax,[esp+0x1c]
6500f58b:	push   eax
6500f58c:	mov    DWORD PTR [esp+0x28],ebx
6500f590:	mov    DWORD PTR [esp+0x2c],ebx
6500f594:	mov    DWORD PTR [esp+0x30],ebx
6500f598:	mov    BYTE PTR [esp+0x24],bl
6500f59c:	call   0x6500eba0
6500f5a1:	add    esp,0x10
6500f5a4:	cmp    eax,ebx
6500f5a6:	jge    0x6500f5b2
6500f5a8:	or     eax,0xffffffff
6500f5ab:	pop    edi
6500f5ac:	pop    esi
6500f5ad:	pop    ebx
6500f5ae:	mov    esp,ebp
6500f5b0:	pop    ebp
6500f5b1:	ret    
6500f5b2:	cmp    esi,ebx
6500f5b4:	mov    ecx,DWORD PTR [esp+0xc]
6500f5b8:	je     0x6500f5bc
6500f5ba:	mov    DWORD PTR [esi],ecx
6500f5bc:	cmp    eax,ebx
6500f5be:	je     0x6500f55b
6500f5c0:	mov    eax,DWORD PTR [ebp+0x18]
6500f5c3:	mov    edx,DWORD PTR [esp+0x28]
6500f5c7:	mov    DWORD PTR [eax],edx
6500f5c9:	mov    edx,DWORD PTR [esp+0x2c]
6500f5cd:	mov    DWORD PTR [eax+0x4],edx
6500f5d0:	mov    edx,DWORD PTR [esp+0x30]
6500f5d4:	mov    DWORD PTR [eax+0x8],edx
6500f5d7:	mov    edx,DWORD PTR [esp+0x34]
6500f5db:	cmp    ecx,edi
6500f5dd:	pop    edi
6500f5de:	mov    DWORD PTR [eax+0xc],edx
6500f5e1:	sbb    eax,eax
6500f5e3:	pop    esi
6500f5e4:	add    eax,0x2
6500f5e7:	pop    ebx
6500f5e8:	mov    esp,ebp
6500f5ea:	pop    ebp
6500f5eb:	ret    
6500f5ec:	int3   
6500f5ed:	int3   
6500f5ee:	int3   
6500f5ef:	int3   
6500f5f0:	mov    eax,DWORD PTR [esp+0x8]
6500f5f4:	sub    eax,0x1
6500f5f7:	jne    0x6500f602
6500f5f9:	mov    eax,DWORD PTR [esp+0x4]
6500f5fd:	mov    ds:0x6502d4c4,eax
6500f602:	mov    eax,0x1
6500f607:	ret    0xc
6500f60a:	int3   
6500f60b:	int3   
6500f60c:	int3   
6500f60d:	int3   
6500f60e:	int3   
6500f60f:	int3   
6500f610:	cmp    BYTE PTR ds:0x6502d4c0,0x0
6500f617:	jne    0x6500f676
6500f619:	push   esi
6500f61a:	push   edi
6500f61b:	push   0x650242d4
6500f620:	mov    BYTE PTR ds:0x6502d4c0,0x1
6500f627:	call   DWORD PTR ds:0x65024058
6500f62d:	push   0x650242ac
6500f632:	push   0xb
6500f634:	push   0x650242a0
6500f639:	mov    esi,eax
6500f63b:	call   0x65006a60
6500f640:	mov    edi,DWORD PTR ds:0x6502408c
6500f646:	add    esp,0xc
6500f649:	push   eax
6500f64a:	push   esi
6500f64b:	call   edi
6500f64d:	push   0x65024264
6500f652:	push   0x19
6500f654:	push   0x65024248
6500f659:	mov    ds:0x6502d4b8,eax
6500f65e:	call   0x65006a60
6500f663:	add    esp,0xc
6500f666:	push   eax
6500f667:	push   esi
6500f668:	call   edi
6500f66a:	pop    edi
6500f66b:	mov    ds:0x6502d4bc,eax
6500f670:	pop    esi
6500f671:	jmp    0x65011a70
6500f676:	ret    
6500f677:	int3   
6500f678:	int3   
6500f679:	int3   
6500f67a:	int3   
6500f67b:	int3   
6500f67c:	int3   
6500f67d:	int3   
6500f67e:	int3   
6500f67f:	int3   
6500f680:	call   0x6500f610
6500f685:	mov    eax,ds:0x6502d4b8
6500f68a:	test   eax,eax
6500f68c:	je     0x6500f690
6500f68e:	jmp    eax
6500f690:	ret    0x8
6500f693:	int3   
6500f694:	int3   
6500f695:	int3   
6500f696:	int3   
6500f697:	int3   
6500f698:	int3   
6500f699:	int3   
6500f69a:	int3   
6500f69b:	int3   
6500f69c:	int3   
6500f69d:	int3   
6500f69e:	int3   
6500f69f:	int3   
6500f6a0:	call   0x6500f610
6500f6a5:	mov    eax,ds:0x6502d4bc
6500f6aa:	test   eax,eax
6500f6ac:	je     0x6500f6b0
6500f6ae:	jmp    eax
6500f6b0:	ret    0x4
6500f6b3:	int3   
6500f6b4:	int3   
6500f6b5:	int3   
6500f6b6:	int3   
6500f6b7:	int3   
6500f6b8:	int3   
6500f6b9:	int3   
6500f6ba:	int3   
6500f6bb:	int3   
6500f6bc:	int3   
6500f6bd:	int3   
6500f6be:	int3   
6500f6bf:	int3   
6500f6c0:	mov    eax,DWORD PTR [esp+0x4]
6500f6c4:	mov    edx,DWORD PTR [ecx]
6500f6c6:	mov    DWORD PTR [eax],edx
6500f6c8:	mov    edx,DWORD PTR [ecx+0x4]
6500f6cb:	mov    DWORD PTR [eax+0x4],edx
6500f6ce:	mov    edx,DWORD PTR [ecx+0x8]
6500f6d1:	mov    ecx,DWORD PTR [ecx+0xc]
6500f6d4:	mov    DWORD PTR [eax+0x8],edx
6500f6d7:	mov    DWORD PTR [eax+0xc],ecx
6500f6da:	ret    0x4
6500f6dd:	int3   
6500f6de:	int3   
6500f6df:	int3   
6500f6e0:	jmp    0x650121fa
6500f6e5:	int3   
6500f6e6:	int3   
6500f6e7:	int3   
6500f6e8:	int3   
6500f6e9:	int3   
6500f6ea:	int3   
6500f6eb:	int3   
6500f6ec:	int3   
6500f6ed:	int3   
6500f6ee:	int3   
6500f6ef:	int3   
6500f6f0:	push   esi
6500f6f1:	mov    esi,ecx
6500f6f3:	call   0x650121fa
6500f6f8:	test   BYTE PTR [esp+0x8],0x1
6500f6fd:	je     0x6500f708
6500f6ff:	push   esi
6500f700:	call   0x650120d2
6500f705:	add    esp,0x4
6500f708:	mov    eax,esi
6500f70a:	pop    esi
6500f70b:	ret    0x4
6500f70e:	int3   
6500f70f:	int3   
6500f710:	push   ebx
6500f711:	mov    ebx,DWORD PTR ds:0x65024044
6500f717:	push   esi
6500f718:	push   edi
6500f719:	mov    edi,DWORD PTR [esp+0x10]
6500f71d:	xor    esi,esi
6500f71f:	nop
6500f720:	lea    eax,[esp+0x10]
6500f724:	push   0x0
6500f726:	push   eax
6500f727:	mov    DWORD PTR [esp+0x18],0x0
6500f72f:	call   0x6500e4e0
6500f734:	call   eax
6500f736:	test   eax,eax
6500f738:	je     0x6500f749
6500f73a:	cmp    edi,0xffffffff
6500f73d:	je     0x6500f749
6500f73f:	add    esi,0x3e8
6500f745:	cmp    esi,edi
6500f747:	ja     0x6500f752
6500f749:	push   0x3e8
6500f74e:	call   ebx
6500f750:	jmp    0x6500f720
6500f752:	pop    edi
6500f753:	pop    esi
6500f754:	mov    al,0x1
6500f756:	pop    ebx
6500f757:	ret    
6500f758:	int3   
6500f759:	int3   
6500f75a:	int3   
6500f75b:	int3   
6500f75c:	int3   
6500f75d:	int3   
6500f75e:	int3   
6500f75f:	int3   
6500f760:	mov    ecx,DWORD PTR [esp+0x4]
6500f764:	sub    esp,0xc
6500f767:	test   ecx,ecx
6500f769:	ja     0x6500f781
6500f76b:	xor    ecx,ecx
6500f76d:	lea    edx,[ecx*4+0x0]
6500f774:	push   edx
6500f775:	call   0x6501246c
6500f77a:	add    esp,0x4
6500f77d:	add    esp,0xc
6500f780:	ret    
6500f781:	or     eax,0xffffffff
6500f784:	xor    edx,edx
6500f786:	div    ecx
6500f788:	cmp    eax,0x4
6500f78b:	jae    0x6500f76d
6500f78d:	lea    eax,[esp+0x10]
6500f791:	push   eax
6500f792:	lea    ecx,[esp+0x4]
6500f796:	mov    DWORD PTR [esp+0x14],0x0
6500f79e:	call   0x650120e8
6500f7a3:	push   0x65029ffc
6500f7a8:	lea    ecx,[esp+0x4]
6500f7ac:	push   ecx
6500f7ad:	mov    DWORD PTR [esp+0x8],0x65024c08
6500f7b5:	call   0x650124d6
6500f7ba:	int3   
6500f7bb:	int3   
6500f7bc:	int3   
6500f7bd:	int3   
6500f7be:	int3   
6500f7bf:	int3   
6500f7c0:	push   esi
6500f7c1:	mov    esi,DWORD PTR [ecx]
6500f7c3:	test   esi,esi
6500f7c5:	je     0x6500f7d6
6500f7c7:	push   esi
6500f7c8:	call   0x6500ea40
6500f7cd:	push   esi
6500f7ce:	call   0x650120d2
6500f7d3:	add    esp,0x8
6500f7d6:	pop    esi
6500f7d7:	ret    
6500f7d8:	int3   
6500f7d9:	int3   
6500f7da:	int3   
6500f7db:	int3   
6500f7dc:	int3   
6500f7dd:	int3   
6500f7de:	int3   
6500f7df:	int3   
6500f7e0:	push   esi
6500f7e1:	mov    esi,DWORD PTR [ecx+0x10]
6500f7e4:	test   esi,esi
6500f7e6:	je     0x6500f7f7
6500f7e8:	push   esi
6500f7e9:	call   0x6500ea40
6500f7ee:	push   esi
6500f7ef:	call   0x650120d2
6500f7f4:	add    esp,0x8
6500f7f7:	pop    esi
6500f7f8:	ret    
6500f7f9:	int3   
6500f7fa:	int3   
6500f7fb:	int3   
6500f7fc:	int3   
6500f7fd:	int3   
6500f7fe:	int3   
6500f7ff:	int3   
6500f800:	mov    ecx,DWORD PTR [esp+0x8]
6500f804:	test   ecx,ecx
6500f806:	jne    0x6500f812
6500f808:	push   0x80004005
6500f80d:	call   0x650010a0
6500f812:	mov    eax,DWORD PTR [esp+0x4]
6500f816:	mov    eax,DWORD PTR [eax]
6500f818:	mov    dx,WORD PTR [eax]
6500f81b:	cmp    dx,WORD PTR [ecx]
6500f81e:	jne    0x6500f846
6500f820:	test   dx,dx
6500f823:	je     0x6500f83a
6500f825:	mov    dx,WORD PTR [eax+0x2]
6500f829:	cmp    dx,WORD PTR [ecx+0x2]
6500f82d:	jne    0x6500f846
6500f82f:	add    eax,0x4
6500f832:	add    ecx,0x4
6500f835:	test   dx,dx
6500f838:	jne    0x6500f818
6500f83a:	xor    eax,eax
6500f83c:	xor    ecx,ecx
6500f83e:	test   eax,eax
6500f840:	setne  cl
6500f843:	mov    al,cl
6500f845:	ret    
6500f846:	sbb    eax,eax
6500f848:	sbb    eax,0xffffffff
6500f84b:	xor    ecx,ecx
6500f84d:	test   eax,eax
6500f84f:	setne  cl
6500f852:	mov    al,cl
6500f854:	ret    
6500f855:	int3   
6500f856:	int3   
6500f857:	int3   
6500f858:	int3   
6500f859:	int3   
6500f85a:	int3   
6500f85b:	int3   
6500f85c:	int3   
6500f85d:	int3   
6500f85e:	int3   
6500f85f:	int3   
6500f860:	mov    eax,DWORD PTR [esp+0x4]
6500f864:	mov    ecx,DWORD PTR [esp+0x8]
6500f868:	cmp    eax,ecx
6500f86a:	je     0x6500f87d
6500f86c:	mov    edx,DWORD PTR [esp+0xc]
6500f870:	push   esi
6500f871:	mov    esi,DWORD PTR [edx]
6500f873:	mov    DWORD PTR [eax],esi
6500f875:	add    eax,0x4
6500f878:	cmp    eax,ecx
6500f87a:	jne    0x6500f871
6500f87c:	pop    esi
6500f87d:	ret    
6500f87e:	int3   
6500f87f:	int3   
6500f880:	mov    eax,DWORD PTR [esp+0x8]
6500f884:	mov    edx,DWORD PTR [esp+0x4]
6500f888:	sub    eax,edx
6500f88a:	sar    eax,0x2
6500f88d:	push   esi
6500f88e:	mov    esi,DWORD PTR [esp+0x10]
6500f892:	lea    ecx,[eax*4+0x0]
6500f899:	sub    esi,ecx
6500f89b:	test   eax,eax
6500f89d:	jle    0x6500f8ab
6500f89f:	push   ecx
6500f8a0:	push   edx
6500f8a1:	push   ecx
6500f8a2:	push   esi
6500f8a3:	call   0x650122be
6500f8a8:	add    esp,0x10
6500f8ab:	mov    eax,esi
6500f8ad:	pop    esi
6500f8ae:	ret    
6500f8af:	int3   
6500f8b0:	mov    eax,DWORD PTR [esp+0x14]
6500f8b4:	push   ebp
6500f8b5:	mov    ebp,DWORD PTR [esp+0x8]
6500f8b9:	push   esi
6500f8ba:	mov    esi,DWORD PTR [esp+0x14]
6500f8be:	push   edi
6500f8bf:	lea    edi,[esi+eax*1]
6500f8c2:	mov    eax,DWORD PTR [ebp+0x0]
6500f8c5:	mov    edx,DWORD PTR [eax-0x8]
6500f8c8:	sub    eax,0x10
6500f8cb:	mov    ecx,0x1
6500f8d0:	sub    ecx,DWORD PTR [eax+0xc]
6500f8d3:	sub    edx,edi
6500f8d5:	or     ecx,edx
6500f8d7:	jge    0x6500f8e1
6500f8d9:	push   edi
6500f8da:	mov    ecx,ebp
6500f8dc:	call   0x65001e60
6500f8e1:	mov    eax,DWORD PTR [esp+0x14]
6500f8e5:	push   ebx
6500f8e6:	mov    ebx,DWORD PTR [ebp+0x0]
6500f8e9:	add    esi,esi
6500f8eb:	push   esi
6500f8ec:	push   eax
6500f8ed:	push   esi
6500f8ee:	push   ebx
6500f8ef:	call   0x65012243
6500f8f4:	mov    eax,DWORD PTR [esp+0x34]
6500f8f8:	mov    ecx,DWORD PTR [esp+0x30]
6500f8fc:	add    eax,eax
6500f8fe:	push   eax
6500f8ff:	push   ecx
6500f900:	push   eax
6500f901:	add    esi,ebx
6500f903:	push   esi
6500f904:	call   0x65012243
6500f909:	add    esp,0x20
6500f90c:	test   edi,edi
6500f90e:	pop    ebx
6500f90f:	jl     0x6500f929
6500f911:	mov    eax,DWORD PTR [ebp+0x0]
6500f914:	cmp    edi,DWORD PTR [eax-0x8]
6500f917:	jg     0x6500f929
6500f919:	mov    DWORD PTR [eax-0xc],edi
6500f91c:	mov    edx,DWORD PTR [ebp+0x0]
6500f91f:	mov    WORD PTR [edx+edi*2],0x0
6500f925:	pop    edi
6500f926:	pop    esi
6500f927:	pop    ebp
6500f928:	ret    
6500f929:	push   0x80070057
6500f92e:	call   0x650010a0
6500f933:	int3   
6500f934:	int3   
6500f935:	int3   
6500f936:	int3   
6500f937:	int3   
6500f938:	int3   
6500f939:	int3   
6500f93a:	int3   
6500f93b:	int3   
6500f93c:	int3   
6500f93d:	int3   
6500f93e:	int3   
6500f93f:	int3   
6500f940:	push   ebx
6500f941:	push   esi
6500f942:	mov    esi,ecx
6500f944:	cmp    DWORD PTR [esi+0x34],0x10
6500f948:	jb     0x6500f956
6500f94a:	mov    eax,DWORD PTR [esi+0x20]
6500f94d:	push   eax
6500f94e:	call   0x650120d2
6500f953:	add    esp,0x4
6500f956:	xor    ebx,ebx
6500f958:	mov    DWORD PTR [esi+0x34],0xf
6500f95f:	mov    DWORD PTR [esi+0x30],ebx
6500f962:	mov    BYTE PTR [esi+0x20],bl
6500f965:	cmp    DWORD PTR [esi+0x18],0x10
6500f969:	jb     0x6500f977
6500f96b:	mov    ecx,DWORD PTR [esi+0x4]
6500f96e:	push   ecx
6500f96f:	call   0x650120d2
6500f974:	add    esp,0x4
6500f977:	mov    DWORD PTR [esi+0x14],ebx
6500f97a:	mov    DWORD PTR [esi+0x18],0xf
6500f981:	mov    BYTE PTR [esi+0x4],bl
6500f984:	pop    esi
6500f985:	pop    ebx
6500f986:	ret    
6500f987:	int3   
6500f988:	int3   
6500f989:	int3   
6500f98a:	int3   
6500f98b:	int3   
6500f98c:	int3   
6500f98d:	int3   
6500f98e:	int3   
6500f98f:	int3   
6500f990:	push   0xffffffff
6500f992:	push   0x65021e89
6500f997:	mov    eax,fs:0x0
6500f99d:	push   eax
6500f99e:	push   ecx
6500f99f:	push   esi
6500f9a0:	push   edi
6500f9a1:	mov    eax,ds:0x6502c09c
6500f9a6:	xor    eax,esp
6500f9a8:	push   eax
6500f9a9:	lea    eax,[esp+0x10]
6500f9ad:	mov    fs:0x0,eax
6500f9b3:	mov    edi,DWORD PTR [esp+0x24]
6500f9b7:	mov    DWORD PTR [esp+0xc],0x0
6500f9bf:	mov    eax,DWORD PTR [edi]
6500f9c1:	mov    ecx,DWORD PTR [eax-0x10]
6500f9c4:	test   ecx,ecx
6500f9c6:	mov    DWORD PTR [esp+0x18],0x0
6500f9ce:	je     0x6500f9db
6500f9d0:	mov    edx,DWORD PTR [ecx]
6500f9d2:	mov    eax,DWORD PTR [edx+0x10]
6500f9d5:	call   eax
6500f9d7:	test   eax,eax
6500f9d9:	jne    0x6500f9eb
6500f9db:	mov    edx,DWORD PTR ds:0x6502d560
6500f9e1:	mov    eax,DWORD PTR [edx+0x10]
6500f9e4:	mov    ecx,0x6502d560
6500f9e9:	call   eax
6500f9eb:	xor    ecx,ecx
6500f9ed:	test   eax,eax
6500f9ef:	setne  cl
6500f9f2:	test   ecx,ecx
6500f9f4:	jne    0x6500fa00
6500f9f6:	push   0x80004005
6500f9fb:	call   0x650010a0
6500fa00:	mov    edx,DWORD PTR [eax]
6500fa02:	mov    ecx,eax
6500fa04:	mov    eax,DWORD PTR [edx+0xc]
6500fa07:	call   eax
6500fa09:	mov    esi,DWORD PTR [esp+0x20]
6500fa0d:	add    eax,0x10
6500fa10:	mov    DWORD PTR [esi],eax
6500fa12:	mov    ecx,DWORD PTR [esp+0x28]
6500fa16:	mov    eax,DWORD PTR [ecx]
6500fa18:	mov    edx,DWORD PTR [eax-0xc]
6500fa1b:	mov    ecx,DWORD PTR [edi]
6500fa1d:	mov    edi,DWORD PTR [ecx-0xc]
6500fa20:	push   edx
6500fa21:	push   eax
6500fa22:	push   edi
6500fa23:	push   ecx
6500fa24:	push   esi
6500fa25:	mov    DWORD PTR [esp+0x2c],0x0
6500fa2d:	mov    DWORD PTR [esp+0x20],0x1
6500fa35:	call   0x6500f8b0
6500fa3a:	add    esp,0x14
6500fa3d:	mov    eax,esi
6500fa3f:	mov    ecx,DWORD PTR [esp+0x10]
6500fa43:	mov    DWORD PTR fs:0x0,ecx
6500fa4a:	pop    ecx
6500fa4b:	pop    edi
6500fa4c:	pop    esi
6500fa4d:	add    esp,0x10
6500fa50:	ret    
6500fa51:	int3   
6500fa52:	int3   
6500fa53:	int3   
6500fa54:	int3   
6500fa55:	int3   
6500fa56:	int3   
6500fa57:	int3   
6500fa58:	int3   
6500fa59:	int3   
6500fa5a:	int3   
6500fa5b:	int3   
6500fa5c:	int3   
6500fa5d:	int3   
6500fa5e:	int3   
6500fa5f:	int3   
6500fa60:	push   0xffffffff
6500fa62:	push   0x65021ec9
6500fa67:	mov    eax,fs:0x0
6500fa6d:	push   eax
6500fa6e:	push   ecx
6500fa6f:	push   ebp
6500fa70:	push   esi
6500fa71:	push   edi
6500fa72:	mov    eax,ds:0x6502c09c
6500fa77:	xor    eax,esp
6500fa79:	push   eax
6500fa7a:	lea    eax,[esp+0x14]
6500fa7e:	mov    fs:0x0,eax
6500fa84:	mov    ebp,DWORD PTR [esp+0x28]
6500fa88:	mov    DWORD PTR [esp+0x10],0x0
6500fa90:	mov    eax,DWORD PTR [ebp+0x0]
6500fa93:	mov    ecx,DWORD PTR [eax-0x10]
6500fa96:	test   ecx,ecx
6500fa98:	mov    DWORD PTR [esp+0x1c],0x0
6500faa0:	je     0x6500faad
6500faa2:	mov    edx,DWORD PTR [ecx]
6500faa4:	mov    eax,DWORD PTR [edx+0x10]
6500faa7:	call   eax
6500faa9:	test   eax,eax
6500faab:	jne    0x6500fabd
6500faad:	mov    edx,DWORD PTR ds:0x6502d560
6500fab3:	mov    eax,DWORD PTR [edx+0x10]
6500fab6:	mov    ecx,0x6502d560
6500fabb:	call   eax
6500fabd:	xor    ecx,ecx
6500fabf:	test   eax,eax
6500fac1:	setne  cl
6500fac4:	test   ecx,ecx
6500fac6:	jne    0x6500fad2
6500fac8:	push   0x80004005
6500facd:	call   0x650010a0
6500fad2:	mov    edx,DWORD PTR [eax]
6500fad4:	mov    ecx,eax
6500fad6:	mov    eax,DWORD PTR [edx+0xc]
6500fad9:	call   eax
6500fadb:	mov    esi,DWORD PTR [esp+0x24]
6500fadf:	add    eax,0x10
6500fae2:	mov    DWORD PTR [esi],eax
6500fae4:	mov    edi,DWORD PTR [esp+0x2c]
6500fae8:	test   edi,edi
6500faea:	mov    DWORD PTR [esp+0x1c],0x0
6500faf2:	mov    DWORD PTR [esp+0x10],0x1
6500fafa:	jne    0x6500fb00
6500fafc:	xor    eax,eax
6500fafe:	jmp    0x6500fb14
6500fb00:	mov    eax,edi
6500fb02:	lea    edx,[eax+0x2]
6500fb05:	mov    cx,WORD PTR [eax]
6500fb08:	add    eax,0x2
6500fb0b:	test   cx,cx
6500fb0e:	jne    0x6500fb05
6500fb10:	sub    eax,edx
6500fb12:	sar    eax,1
6500fb14:	mov    ecx,DWORD PTR [ebp+0x0]
6500fb17:	mov    edx,DWORD PTR [ecx-0xc]
6500fb1a:	push   eax
6500fb1b:	push   edi
6500fb1c:	push   edx
6500fb1d:	push   ecx
6500fb1e:	push   esi
6500fb1f:	call   0x6500f8b0
6500fb24:	add    esp,0x14
6500fb27:	mov    eax,esi
6500fb29:	mov    ecx,DWORD PTR [esp+0x14]
6500fb2d:	mov    DWORD PTR fs:0x0,ecx
6500fb34:	pop    ecx
6500fb35:	pop    edi
6500fb36:	pop    esi
6500fb37:	pop    ebp
6500fb38:	add    esp,0x10
6500fb3b:	ret    
6500fb3c:	int3   
6500fb3d:	int3   
6500fb3e:	int3   
6500fb3f:	int3   
6500fb40:	mov    eax,DWORD PTR [esp+0x8]
6500fb44:	mov    ecx,DWORD PTR [esp+0x4]
6500fb48:	mov    edx,DWORD PTR [esp+0xc]
6500fb4c:	sub    eax,ecx
6500fb4e:	sar    eax,0x2
6500fb51:	lea    eax,[eax*4+0x0]
6500fb58:	push   esi
6500fb59:	lea    esi,[eax+edx*1]
6500fb5c:	je     0x6500fb6a
6500fb5e:	push   eax
6500fb5f:	push   ecx
6500fb60:	push   eax
6500fb61:	push   edx
6500fb62:	call   0x650122be
6500fb67:	add    esp,0x10
6500fb6a:	mov    eax,esi
6500fb6c:	pop    esi
6500fb6d:	ret    0xc
6500fb70:	push   esi
6500fb71:	mov    esi,DWORD PTR [esp+0xc]
6500fb75:	test   esi,esi
6500fb77:	push   edi
6500fb78:	mov    edi,DWORD PTR [esp+0xc]
6500fb7c:	mov    eax,esi
6500fb7e:	mov    ecx,edi
6500fb80:	jbe    0x6500fb96
6500fb82:	mov    edx,DWORD PTR [esp+0x14]
6500fb86:	push   ebx
6500fb87:	mov    ebx,DWORD PTR [edx]
6500fb89:	mov    DWORD PTR [ecx],ebx
6500fb8b:	sub    eax,0x1
6500fb8e:	add    ecx,0x4
6500fb91:	test   eax,eax
6500fb93:	ja     0x6500fb87
6500fb95:	pop    ebx
6500fb96:	lea    eax,[edi+esi*4]
6500fb99:	pop    edi
6500fb9a:	pop    esi
6500fb9b:	ret    0xc
6500fb9e:	int3   
6500fb9f:	int3   
6500fba0:	mov    eax,DWORD PTR [esp+0x4]
6500fba4:	push   esi
6500fba5:	push   eax
6500fba6:	mov    esi,ecx
6500fba8:	call   0x650121e2
6500fbad:	mov    DWORD PTR [esi],0x6502430c
6500fbb3:	mov    eax,esi
6500fbb5:	pop    esi
6500fbb6:	ret    0x4
6500fbb9:	int3   
6500fbba:	int3   
6500fbbb:	int3   
6500fbbc:	int3   
6500fbbd:	int3   
6500fbbe:	int3   
6500fbbf:	int3   
6500fbc0:	push   esi
6500fbc1:	mov    esi,ecx
6500fbc3:	mov    DWORD PTR [esi],0x650266ec
6500fbc9:	cmp    DWORD PTR [esi+0x24],0x10
6500fbcd:	jb     0x6500fbdb
6500fbcf:	mov    eax,DWORD PTR [esi+0x10]
6500fbd2:	push   eax
6500fbd3:	call   0x650120d2
6500fbd8:	add    esp,0x4
6500fbdb:	xor    eax,eax
6500fbdd:	mov    DWORD PTR [esi+0x24],0xf
6500fbe4:	mov    DWORD PTR [esi+0x20],eax
6500fbe7:	mov    ecx,esi
6500fbe9:	mov    BYTE PTR [esi+0x10],al
6500fbec:	call   0x650121a6
6500fbf1:	test   BYTE PTR [esp+0x8],0x1
6500fbf6:	je     0x6500fc01
6500fbf8:	push   esi
6500fbf9:	call   0x650120d2
6500fbfe:	add    esp,0x4
6500fc01:	mov    eax,esi
6500fc03:	pop    esi
6500fc04:	ret    0x4
6500fc07:	int3   
6500fc08:	int3   
6500fc09:	int3   
6500fc0a:	int3   
6500fc0b:	int3   
6500fc0c:	int3   
6500fc0d:	int3   
6500fc0e:	int3   
6500fc0f:	int3   
6500fc10:	push   0xffffffff
6500fc12:	push   0x65021ef8
6500fc17:	mov    eax,fs:0x0
6500fc1d:	push   eax
6500fc1e:	sub    esp,0x44
6500fc21:	mov    eax,ds:0x6502c09c
6500fc26:	xor    eax,esp
6500fc28:	push   eax
6500fc29:	lea    eax,[esp+0x48]
6500fc2d:	mov    fs:0x0,eax
6500fc33:	push   0x12
6500fc35:	push   0x650284dc
6500fc3a:	lea    ecx,[esp+0xc]
6500fc3e:	mov    DWORD PTR [esp+0x24],0xf
6500fc46:	mov    DWORD PTR [esp+0x20],0x0
6500fc4e:	mov    BYTE PTR [esp+0x10],0x0
6500fc53:	call   0x650018c0
6500fc58:	lea    eax,[esp+0x4]
6500fc5c:	push   eax
6500fc5d:	lea    ecx,[esp+0x24]
6500fc61:	mov    DWORD PTR [esp+0x54],0x0
6500fc69:	call   0x65002d10
6500fc6e:	push   0x6502a0c8
6500fc73:	lea    ecx,[esp+0x24]
6500fc77:	push   ecx
6500fc78:	mov    DWORD PTR [esp+0x28],0x65024c20
6500fc80:	call   0x650124d6
6500fc85:	int3   
6500fc86:	int3   
6500fc87:	int3   
6500fc88:	int3   
6500fc89:	int3   
6500fc8a:	int3   
6500fc8b:	int3   
6500fc8c:	int3   
6500fc8d:	int3   
6500fc8e:	int3   
6500fc8f:	int3   
6500fc90:	sub    esp,0x10
6500fc93:	mov    edx,DWORD PTR [ecx+0x4]
6500fc96:	mov    eax,DWORD PTR [ecx]
6500fc98:	cmp    eax,0x5
6500fc9b:	mov    DWORD PTR [esp+0x4],edx
6500fc9f:	mov    edx,DWORD PTR [ecx+0x8]
6500fca2:	mov    ecx,DWORD PTR [ecx+0xc]
6500fca5:	je     0x6500fccc
6500fca7:	push   0x65024314
6500fcac:	lea    ecx,[esp+0x4]
6500fcb0:	call   0x650121c9
6500fcb5:	push   0x65029578
6500fcba:	lea    eax,[esp+0x4]
6500fcbe:	push   eax
6500fcbf:	mov    DWORD PTR [esp+0x8],0x6502430c
6500fcc7:	call   0x650124d6
6500fccc:	push   edx
6500fccd:	push   ecx
6500fcce:	mov    ecx,DWORD PTR [esp+0x1c]
6500fcd2:	call   0x650018c0
6500fcd7:	add    esp,0x10
6500fcda:	ret    0x4
6500fcdd:	int3   
6500fcde:	int3   
6500fcdf:	int3   
6500fce0:	push   0xffffffff
6500fce2:	push   0x65021f3e
6500fce7:	mov    eax,fs:0x0
6500fced:	push   eax
6500fcee:	sub    esp,0x9c
6500fcf4:	push   ebx
6500fcf5:	push   ebp
6500fcf6:	push   edi
6500fcf7:	mov    eax,ds:0x6502c09c
6500fcfc:	xor    eax,esp
6500fcfe:	push   eax
6500fcff:	lea    eax,[esp+0xac]
6500fd06:	mov    fs:0x0,eax
6500fd0c:	xor    ebx,ebx
6500fd0e:	push   0x1c
6500fd10:	mov    DWORD PTR [esp+0x14],ebx
6500fd14:	call   0x6501246c
6500fd19:	mov    edi,eax
6500fd1b:	add    esp,0x4
6500fd1e:	cmp    edi,ebx
6500fd20:	je     0x6500fd32
6500fd22:	push   0x2000
6500fd27:	push   edi
6500fd28:	call   0x6500eaa0
6500fd2d:	add    esp,0x8
6500fd30:	jmp    0x6500fd34
6500fd32:	xor    edi,edi
6500fd34:	mov    DWORD PTR [esp+0x20],edi
6500fd38:	mov    ecx,DWORD PTR [esp+0xc4]
6500fd3f:	mov    edx,DWORD PTR [esp+0xc0]
6500fd46:	lea    eax,[esp+0x10]
6500fd4a:	push   eax
6500fd4b:	mov    eax,DWORD PTR [esp+0xc0]
6500fd52:	push   edi
6500fd53:	push   ecx
6500fd54:	push   edx
6500fd55:	push   eax
6500fd56:	mov    DWORD PTR [esp+0xc8],ebx
6500fd5d:	call   0x6500f530
6500fd62:	add    esp,0x14
6500fd65:	sub    eax,ebx
6500fd67:	je     0x6500fe36
6500fd6d:	sub    eax,0x1
6500fd70:	je     0x6500fe19
6500fd76:	sub    eax,0x1
6500fd79:	je     0x6500fdc8
6500fd7b:	push   0xb
6500fd7d:	push   0x6502433c
6500fd82:	lea    ecx,[esp+0x2c]
6500fd86:	mov    DWORD PTR [esp+0x44],0xf
6500fd8e:	mov    DWORD PTR [esp+0x40],ebx
6500fd92:	mov    BYTE PTR [esp+0x30],bl
6500fd96:	call   0x650018c0
6500fd9b:	lea    ecx,[esp+0x24]
6500fd9f:	push   ecx
6500fda0:	lea    ecx,[esp+0x60]
6500fda4:	mov    BYTE PTR [esp+0xb8],0x2
6500fdac:	call   0x65002080
6500fdb1:	push   0x650295fc
6500fdb6:	lea    edx,[esp+0x60]
6500fdba:	push   edx
6500fdbb:	mov    DWORD PTR [esp+0x64],0x65024320
6500fdc3:	call   0x650124d6
6500fdc8:	mov    eax,DWORD PTR [esp+0x10]
6500fdcc:	mov    ecx,DWORD PTR [esp+0x14]
6500fdd0:	mov    edx,DWORD PTR [esp+0x18]
6500fdd4:	mov    DWORD PTR [esi],eax
6500fdd6:	mov    eax,DWORD PTR [esp+0x1c]
6500fdda:	mov    DWORD PTR [esi+0x4],ecx
6500fddd:	mov    DWORD PTR [esi+0x8],edx
6500fde0:	mov    DWORD PTR [esi+0xc],eax
6500fde3:	mov    ebp,DWORD PTR [esi+0x10]
6500fde6:	cmp    edi,ebp
6500fde8:	je     0x6500fdfd
6500fdea:	cmp    ebp,ebx
6500fdec:	je     0x6500fdfd
6500fdee:	push   ebp
6500fdef:	call   0x6500ea40
6500fdf4:	push   ebp
6500fdf5:	call   0x650120d2
6500fdfa:	add    esp,0x8
6500fdfd:	mov    DWORD PTR [esi+0x10],edi
6500fe00:	mov    ecx,DWORD PTR [esp+0xac]
6500fe07:	mov    DWORD PTR fs:0x0,ecx
6500fe0e:	pop    ecx
6500fe0f:	pop    edi
6500fe10:	pop    ebp
6500fe11:	pop    ebx
6500fe12:	add    esp,0xa8
6500fe18:	ret    
6500fe19:	mov    ecx,DWORD PTR [esp+0x10]
6500fe1d:	mov    edx,DWORD PTR [esp+0x14]
6500fe21:	mov    eax,DWORD PTR [esp+0x18]
6500fe25:	mov    DWORD PTR [esi],ecx
6500fe27:	mov    ecx,DWORD PTR [esp+0x1c]
6500fe2b:	mov    DWORD PTR [esi+0x4],edx
6500fe2e:	mov    DWORD PTR [esi+0x8],eax
6500fe31:	mov    DWORD PTR [esi+0xc],ecx
6500fe34:	jmp    0x6500fde3
6500fe36:	push   0x12
6500fe38:	push   0x65024328
6500fe3d:	lea    ecx,[esp+0x48]
6500fe41:	mov    DWORD PTR [esp+0x60],0xf
6500fe49:	mov    DWORD PTR [esp+0x5c],ebx
6500fe4d:	mov    BYTE PTR [esp+0x4c],bl
6500fe51:	call   0x650018c0
6500fe56:	lea    edx,[esp+0x40]
6500fe5a:	push   edx
6500fe5b:	lea    ecx,[esp+0x88]
6500fe62:	mov    BYTE PTR [esp+0xb8],0x1
6500fe6a:	call   0x65002080
6500fe6f:	push   0x650295fc
6500fe74:	lea    eax,[esp+0x88]
6500fe7b:	push   eax
6500fe7c:	mov    DWORD PTR [esp+0x8c],0x65024320
6500fe87:	call   0x650124d6
6500fe8c:	int3   
6500fe8d:	int3   
6500fe8e:	int3   
6500fe8f:	int3   
6500fe90:	mov    eax,DWORD PTR [esp+0x4]
6500fe94:	push   esi
6500fe95:	push   eax
6500fe96:	mov    esi,ecx
6500fe98:	call   0x65002130
6500fe9d:	mov    DWORD PTR [esi],0x65024320
6500fea3:	mov    eax,esi
6500fea5:	pop    esi
6500fea6:	ret    0x4
6500fea9:	int3   
6500feaa:	int3   
6500feab:	int3   
6500feac:	int3   
6500fead:	int3   
6500feae:	int3   
6500feaf:	int3   
6500feb0:	cmp    DWORD PTR [esp+0x4],0x6
6500feb5:	push   esi
6500feb6:	mov    esi,ecx
6500feb8:	je     0x6500fedf
6500feba:	push   0x65024314
6500febf:	lea    ecx,[esp+0xc]
6500fec3:	call   0x650121c9
6500fec8:	push   0x65029578
6500fecd:	lea    eax,[esp+0xc]
6500fed1:	push   eax
6500fed2:	mov    DWORD PTR [esp+0x10],0x6502430c
6500feda:	call   0x650124d6
6500fedf:	push   ebx
6500fee0:	mov    ebx,DWORD PTR [esp+0x14]
6500fee4:	test   ebx,ebx
6500fee6:	jbe    0x6500ff09
6500fee8:	mov    ecx,DWORD PTR [esi]
6500feea:	push   edi
6500feeb:	mov    edi,DWORD PTR [esp+0x1c]
6500feef:	push   ecx
6500fef0:	mov    ecx,edi
6500fef2:	call   0x6500fc90
6500fef7:	cmp    ebx,0x1
6500fefa:	jbe    0x6500ff08
6500fefc:	mov    edx,DWORD PTR [esi+0x4]
6500feff:	push   edx
6500ff00:	lea    ecx,[edi+0x10]
6500ff03:	call   0x6500fc90
6500ff08:	pop    edi
6500ff09:	pop    ebx
6500ff0a:	pop    esi
6500ff0b:	ret    0x10
6500ff0e:	int3   
6500ff0f:	int3   
6500ff10:	mov    eax,DWORD PTR [esp+0x10]
6500ff14:	push   ebx
6500ff15:	push   esi
6500ff16:	mov    esi,ecx
6500ff18:	mov    ecx,DWORD PTR [eax]
6500ff1a:	mov    DWORD PTR [esp+0x18],ecx
6500ff1e:	mov    ecx,DWORD PTR [esi+0x4]
6500ff21:	test   ecx,ecx
6500ff23:	push   edi
6500ff24:	jne    0x6500ff2a
6500ff26:	xor    edi,edi
6500ff28:	jmp    0x6500ff32
6500ff2a:	mov    edi,DWORD PTR [esi+0xc]
6500ff2d:	sub    edi,ecx
6500ff2f:	sar    edi,0x2
6500ff32:	mov    ebx,DWORD PTR [esp+0x18]
6500ff36:	test   ebx,ebx
6500ff38:	je     0x650100bf
6500ff3e:	test   ecx,ecx
6500ff40:	jne    0x6500ff46
6500ff42:	xor    eax,eax
6500ff44:	jmp    0x6500ff4e
6500ff46:	mov    eax,DWORD PTR [esi+0x8]
6500ff49:	sub    eax,ecx
6500ff4b:	sar    eax,0x2
6500ff4e:	mov    edx,0x3fffffff
6500ff53:	sub    edx,eax
6500ff55:	cmp    edx,ebx
6500ff57:	jae    0x6500ff5e
6500ff59:	call   0x6500fc10
6500ff5e:	test   ecx,ecx
6500ff60:	jne    0x6500ff66
6500ff62:	xor    eax,eax
6500ff64:	jmp    0x6500ff6e
6500ff66:	mov    eax,DWORD PTR [esi+0x8]
6500ff69:	sub    eax,ecx
6500ff6b:	sar    eax,0x2
6500ff6e:	add    eax,ebx
6500ff70:	cmp    edi,eax
6500ff72:	push   ebp
6500ff73:	jae    0x6501002d
6500ff79:	mov    eax,edi
6500ff7b:	shr    eax,1
6500ff7d:	mov    edx,0x3fffffff
6500ff82:	sub    edx,eax
6500ff84:	cmp    edx,edi
6500ff86:	jae    0x6500ff8c
6500ff88:	xor    edi,edi
6500ff8a:	jmp    0x6500ff8e
6500ff8c:	add    edi,eax
6500ff8e:	test   ecx,ecx
6500ff90:	jne    0x6500ff96
6500ff92:	xor    eax,eax
6500ff94:	jmp    0x6500ff9e
6500ff96:	mov    eax,DWORD PTR [esi+0x8]
6500ff99:	sub    eax,ecx
6500ff9b:	sar    eax,0x2
6500ff9e:	add    eax,ebx
6500ffa0:	cmp    edi,eax
6500ffa2:	jae    0x6500ffb6
6500ffa4:	test   ecx,ecx
6500ffa6:	jne    0x6500ffac
6500ffa8:	xor    edi,edi
6500ffaa:	jmp    0x6500ffb4
6500ffac:	mov    edi,DWORD PTR [esi+0x8]
6500ffaf:	sub    edi,ecx
6500ffb1:	sar    edi,0x2
6500ffb4:	add    edi,ebx
6500ffb6:	push   0x0
6500ffb8:	push   edi
6500ffb9:	call   0x6500f760
6500ffbe:	mov    ecx,DWORD PTR [esi+0x4]
6500ffc1:	add    esp,0x8
6500ffc4:	mov    ebp,eax
6500ffc6:	mov    eax,DWORD PTR [esp+0x18]
6500ffca:	push   ebp
6500ffcb:	push   eax
6500ffcc:	push   ecx
6500ffcd:	mov    ecx,esi
6500ffcf:	call   0x6500fb40
6500ffd4:	lea    edx,[esp+0x20]
6500ffd8:	push   edx
6500ffd9:	push   ebx
6500ffda:	push   eax
6500ffdb:	mov    ecx,esi
6500ffdd:	call   0x6500fb70
6500ffe2:	mov    ecx,DWORD PTR [esp+0x18]
6500ffe6:	push   eax
6500ffe7:	mov    eax,DWORD PTR [esi+0x8]
6500ffea:	push   eax
6500ffeb:	push   ecx
6500ffec:	mov    ecx,esi
6500ffee:	call   0x6500fb40
6500fff3:	mov    eax,DWORD PTR [esi+0x4]
6500fff6:	test   eax,eax
6500fff8:	jne    0x6500fffe
6500fffa:	xor    ecx,ecx
6500fffc:	jmp    0x65010006
6500fffe:	mov    ecx,DWORD PTR [esi+0x8]
65010001:	sub    ecx,eax
65010003:	sar    ecx,0x2
65010006:	add    ebx,ecx
65010008:	test   eax,eax
6501000a:	je     0x65010015
6501000c:	push   eax
6501000d:	call   0x650120d2
65010012:	add    esp,0x4
65010015:	lea    edx,[ebp+edi*4+0x0]
65010019:	lea    eax,[ebp+ebx*4+0x0]
6501001d:	mov    DWORD PTR [esi+0x4],ebp
65010020:	pop    ebp
65010021:	pop    edi
65010022:	mov    DWORD PTR [esi+0xc],edx
65010025:	mov    DWORD PTR [esi+0x8],eax
65010028:	pop    esi
65010029:	pop    ebx
6501002a:	ret    0x10
6501002d:	mov    ebp,DWORD PTR [esi+0x8]
65010030:	mov    edi,DWORD PTR [esp+0x18]
65010034:	mov    ecx,ebp
65010036:	sub    ecx,edi
65010038:	sar    ecx,0x2
6501003b:	lea    eax,[ebx*4+0x0]
65010042:	cmp    ecx,ebx
65010044:	mov    DWORD PTR [esp+0x1c],eax
65010048:	mov    ecx,esi
6501004a:	jae    0x65010092
6501004c:	add    eax,edi
6501004e:	push   eax
6501004f:	push   ebp
65010050:	push   edi
65010051:	call   0x6500fb40
65010056:	mov    eax,DWORD PTR [esi+0x8]
65010059:	mov    ecx,eax
6501005b:	sub    ecx,edi
6501005d:	sar    ecx,0x2
65010060:	lea    edx,[esp+0x20]
65010064:	push   edx
65010065:	sub    ebx,ecx
65010067:	push   ebx
65010068:	push   eax
65010069:	mov    ecx,esi
6501006b:	call   0x6500fb70
65010070:	mov    eax,DWORD PTR [esp+0x1c]
65010074:	add    DWORD PTR [esi+0x8],eax
65010077:	mov    esi,DWORD PTR [esi+0x8]
6501007a:	lea    edx,[esp+0x20]
6501007e:	push   edx
6501007f:	sub    esi,eax
65010081:	push   esi
65010082:	push   edi
65010083:	call   0x6500f860
65010088:	add    esp,0xc
6501008b:	pop    ebp
6501008c:	pop    edi
6501008d:	pop    esi
6501008e:	pop    ebx
6501008f:	ret    0x10
65010092:	push   ebp
65010093:	mov    ebx,ebp
65010095:	sub    ebx,eax
65010097:	push   ebp
65010098:	push   ebx
65010099:	call   0x6500fb40
6501009e:	push   ebp
6501009f:	push   ebx
650100a0:	push   edi
650100a1:	mov    DWORD PTR [esi+0x8],eax
650100a4:	call   0x6500f880
650100a9:	mov    ecx,DWORD PTR [esp+0x28]
650100ad:	lea    eax,[esp+0x2c]
650100b1:	push   eax
650100b2:	add    ecx,edi
650100b4:	push   ecx
650100b5:	push   edi
650100b6:	call   0x6500f860
650100bb:	add    esp,0x18
650100be:	pop    ebp
650100bf:	pop    edi
650100c0:	pop    esi
650100c1:	pop    ebx
650100c2:	ret    0x10
650100c5:	int3   
650100c6:	int3   
650100c7:	int3   
650100c8:	int3   
650100c9:	int3   
650100ca:	int3   
650100cb:	int3   
650100cc:	int3   
650100cd:	int3   
650100ce:	int3   
650100cf:	int3   
650100d0:	push   ecx
650100d1:	push   ebx
650100d2:	push   ebp
650100d3:	mov    ebp,DWORD PTR [esp+0x14]
650100d7:	push   esi
650100d8:	mov    esi,ecx
650100da:	push   edi
650100db:	mov    edi,DWORD PTR [esi+0x4]
650100de:	test   edi,edi
650100e0:	je     0x650100ee
650100e2:	mov    eax,DWORD PTR [esi+0x8]
650100e5:	mov    ecx,eax
650100e7:	sub    ecx,edi
650100e9:	sar    ecx,0x2
650100ec:	jne    0x650100f2
650100ee:	xor    ebx,ebx
650100f0:	jmp    0x65010111
650100f2:	cmp    edi,eax
650100f4:	jbe    0x650100fb
650100f6:	call   0x65012443
650100fb:	test   ebp,ebp
650100fd:	je     0x65010103
650100ff:	cmp    ebp,esi
65010101:	je     0x65010108
65010103:	call   0x65012443
65010108:	mov    ebx,DWORD PTR [esp+0x20]
6501010c:	sub    ebx,edi
6501010e:	sar    ebx,0x2
65010111:	mov    edx,DWORD PTR [esp+0x24]
65010115:	mov    eax,DWORD PTR [esp+0x20]
65010119:	push   edx
6501011a:	push   0x1
6501011c:	push   eax
6501011d:	push   ebp
6501011e:	mov    ecx,esi
65010120:	call   0x6500ff10
65010125:	mov    edi,DWORD PTR [esi+0x4]
65010128:	cmp    edi,DWORD PTR [esi+0x8]
6501012b:	jbe    0x65010132
6501012d:	call   0x65012443
65010132:	mov    DWORD PTR [esp+0x20],edi
65010136:	lea    edi,[edi+ebx*4]
65010139:	cmp    edi,DWORD PTR [esi+0x8]
6501013c:	ja     0x65010143
6501013e:	cmp    edi,DWORD PTR [esi+0x4]
65010141:	jae    0x65010148
65010143:	call   0x65012443
65010148:	mov    eax,DWORD PTR [esp+0x18]
6501014c:	mov    DWORD PTR [eax+0x4],edi
6501014f:	pop    edi
65010150:	mov    DWORD PTR [eax],esi
65010152:	pop    esi
65010153:	pop    ebp
65010154:	pop    ebx
65010155:	pop    ecx
65010156:	ret    0x10
65010159:	int3   
6501015a:	int3   
6501015b:	int3   
6501015c:	int3   
6501015d:	int3   
6501015e:	int3   
6501015f:	int3   
65010160:	sub    esp,0x8
65010163:	push   esi
65010164:	mov    esi,ecx
65010166:	mov    edx,DWORD PTR [esi+0x4]
65010169:	test   edx,edx
6501016b:	jne    0x65010171
6501016d:	xor    ecx,ecx
6501016f:	jmp    0x65010179
65010171:	mov    ecx,DWORD PTR [esi+0x8]
65010174:	sub    ecx,edx
65010176:	sar    ecx,0x2
65010179:	test   edx,edx
6501017b:	je     0x650101a1
6501017d:	mov    eax,DWORD PTR [esi+0xc]
65010180:	sub    eax,edx
65010182:	sar    eax,0x2
65010185:	cmp    ecx,eax
65010187:	jae    0x650101a1
65010189:	mov    eax,DWORD PTR [esi+0x8]
6501018c:	mov    ecx,DWORD PTR [esp+0x10]
65010190:	mov    edx,DWORD PTR [ecx]
65010192:	mov    DWORD PTR [eax],edx
65010194:	add    eax,0x4
65010197:	mov    DWORD PTR [esi+0x8],eax
6501019a:	pop    esi
6501019b:	add    esp,0x8
6501019e:	ret    0x4
650101a1:	push   edi
650101a2:	mov    edi,DWORD PTR [esi+0x8]
650101a5:	cmp    edx,edi
650101a7:	jbe    0x650101ae
650101a9:	call   0x65012443
650101ae:	mov    eax,DWORD PTR [esp+0x14]
650101b2:	push   eax
650101b3:	push   edi
650101b4:	push   esi
650101b5:	lea    ecx,[esp+0x14]
650101b9:	push   ecx
650101ba:	mov    ecx,esi
650101bc:	call   0x650100d0
650101c1:	pop    edi
650101c2:	pop    esi
650101c3:	add    esp,0x8
650101c6:	ret    0x4
650101c9:	int3   
650101ca:	int3   
650101cb:	int3   
650101cc:	int3   
650101cd:	int3   
650101ce:	int3   
650101cf:	int3   
650101d0:	sub    esp,0x20
650101d3:	mov    eax,DWORD PTR [ecx]
650101d5:	mov    edx,DWORD PTR [ecx+0x4]
650101d8:	mov    DWORD PTR [esp],eax
650101db:	mov    eax,DWORD PTR [ecx+0x8]
650101de:	mov    ecx,DWORD PTR [ecx+0xc]
650101e1:	mov    DWORD PTR [esp+0x4],edx
650101e5:	lea    edx,[esp+0x10]
650101e9:	mov    DWORD PTR [esp+0xc],ecx
650101ed:	push   edx
650101ee:	lea    ecx,[esp+0x4]
650101f2:	mov    DWORD PTR [esp+0xc],eax
650101f6:	call   0x6500f6c0
650101fb:	mov    ecx,DWORD PTR [esp+0x24]
650101ff:	lea    edx,[ecx+0x1c]
65010202:	mov    DWORD PTR [esp],edx
65010205:	mov    edx,DWORD PTR [eax]
65010207:	mov    DWORD PTR [esp+0x4],ecx
6501020b:	sub    esp,0x10
6501020e:	mov    ecx,esp
65010210:	mov    DWORD PTR [ecx],edx
65010212:	mov    edx,DWORD PTR [eax+0x4]
65010215:	mov    DWORD PTR [ecx+0x4],edx
65010218:	mov    edx,DWORD PTR [eax+0x8]
6501021b:	mov    eax,DWORD PTR [eax+0xc]
6501021e:	mov    DWORD PTR [ecx+0x8],edx
65010221:	mov    DWORD PTR [ecx+0xc],eax
65010224:	lea    ecx,[esp+0x10]
65010228:	call   0x6500feb0
6501022d:	add    esp,0x20
65010230:	ret    0x4
65010233:	int3   
65010234:	int3   
65010235:	int3   
65010236:	int3   
65010237:	int3   
65010238:	int3   
65010239:	int3   
6501023a:	int3   
6501023b:	int3   
6501023c:	int3   
6501023d:	int3   
6501023e:	int3   
6501023f:	int3   
65010240:	push   ebp
65010241:	lea    ebp,[esp-0x74]
65010245:	sub    esp,0x74
65010248:	push   0xffffffff
6501024a:	push   0x65021fa8
6501024f:	mov    eax,fs:0x0
65010255:	push   eax
65010256:	sub    esp,0x70
65010259:	mov    eax,ds:0x6502c09c
6501025e:	xor    eax,ebp
65010260:	mov    DWORD PTR [ebp+0x70],eax
65010263:	push   ebx
65010264:	push   esi
65010265:	push   edi
65010266:	push   eax
65010267:	lea    eax,[ebp-0xc]
6501026a:	mov    fs:0x0,eax
65010270:	mov    DWORD PTR [ebp-0x10],esp
65010273:	mov    eax,DWORD PTR [ebp+0x7c]
65010276:	mov    ecx,0xf
6501027b:	xor    edi,edi
6501027d:	mov    DWORD PTR [ebp+0x50],ecx
65010280:	mov    DWORD PTR [ebp+0x4c],edi
65010283:	mov    BYTE PTR [ebp+0x3c],0x0
65010287:	mov    DWORD PTR [ebp+0x6c],ecx
6501028a:	mov    DWORD PTR [ebp+0x68],edi
6501028d:	mov    BYTE PTR [ebp+0x58],0x0
65010291:	mov    DWORD PTR [ebp-0x4],edi
65010294:	mov    DWORD PTR [ebp-0x38],edi
65010297:	mov    DWORD PTR [ebp-0x28],edi
6501029a:	mov    ecx,DWORD PTR [eax+0x14]
6501029d:	mov    ebx,0x10
650102a2:	cmp    DWORD PTR [eax+0x18],ebx
650102a5:	mov    BYTE PTR [ebp-0x4],0x2
650102a9:	jb     0x650102b0
650102ab:	mov    eax,DWORD PTR [eax+0x4]
650102ae:	jmp    0x650102b3
650102b0:	add    eax,0x4
650102b3:	push   edi
650102b4:	push   ecx
650102b5:	push   eax
650102b6:	lea    esi,[ebp-0x38]
650102b9:	call   0x6500fce0
650102be:	add    esp,0xc
650102c1:	lea    eax,[ebp+0x38]
650102c4:	push   eax
650102c5:	mov    ecx,esi
650102c7:	call   0x650101d0
650102cc:	mov    DWORD PTR [ebp-0x4],0x1
650102d3:	call   DWORD PTR ds:0x6502c06c
650102d9:	cmp    DWORD PTR [ebp+0x6c],ebx
650102dc:	mov    DWORD PTR [ebp+0x0],eax
650102df:	mov    BYTE PTR [ebp-0x4],0x4
650102e3:	jb     0x650102f0
650102e5:	mov    ebx,DWORD PTR [ebp+0x58]
650102e8:	cmp    ebx,edi
650102ea:	jne    0x650102f3
650102ec:	xor    eax,eax
650102ee:	jmp    0x6501033a
650102f0:	lea    ebx,[ebp+0x58]
650102f3:	push   ebx
650102f4:	call   DWORD PTR ds:0x6502404c
650102fa:	mov    edi,eax
650102fc:	add    edi,0x1
650102ff:	cmp    edi,0x3fffffff
65010305:	jg     0x65010336
65010307:	lea    eax,[edi+edi*1]
6501030a:	call   0x65013030
6501030f:	mov    esi,esp
65010311:	test   esi,esi
65010313:	mov    DWORD PTR [ebp-0x10],esp
65010316:	je     0x65010336
65010318:	mov    ecx,DWORD PTR [ebp+0x0]
6501031b:	push   edi
6501031c:	push   esi
6501031d:	push   0xffffffff
6501031f:	push   ebx
65010320:	push   0x0
65010322:	push   ecx
65010323:	mov    WORD PTR [esi],0x0
65010328:	call   DWORD PTR ds:0x6502401c
6501032e:	neg    eax
65010330:	sbb    eax,eax
65010332:	and    eax,esi
65010334:	jmp    0x65010338
65010336:	xor    eax,eax
65010338:	xor    edi,edi
6501033a:	push   eax
6501033b:	lea    ecx,[ebp+0x10]
6501033e:	call   0x650025a0
65010343:	mov    edx,DWORD PTR ds:0x6502d560
65010349:	mov    eax,DWORD PTR [edx+0xc]
6501034c:	mov    ecx,0x6502d560
65010351:	mov    BYTE PTR [ebp-0x4],0x5
65010355:	call   eax
65010357:	add    eax,0x10
6501035a:	mov    DWORD PTR [ebp+0x14],eax
6501035d:	lea    ecx,[ebp+0x14]
65010360:	push   ecx
65010361:	lea    edx,[ebp+0x10]
65010364:	push   edx
65010365:	lea    eax,[ebp+0x18]
65010368:	push   eax
65010369:	mov    BYTE PTR [ebp-0x4],0x6
6501036d:	call   0x650021b0
65010372:	add    esp,0xc
65010375:	lea    ecx,[ebp+0x18]
65010378:	push   0x650266dc
6501037d:	push   ecx
6501037e:	mov    BYTE PTR [ebp-0x4],0x7
65010382:	call   0x6500f800
65010387:	add    esp,0x8
6501038a:	test   al,al
6501038c:	je     0x65010564
65010392:	mov    esi,DWORD PTR [ebp+0x14]
65010395:	call   0x6500e0a0
6501039a:	push   esi
6501039b:	call   eax
6501039d:	cmp    DWORD PTR [ebp+0x50],0x10
650103a1:	mov    edx,DWORD PTR [ebp+0x4c]
650103a4:	mov    eax,DWORD PTR [ebp+0x3c]
650103a7:	push   edx
650103a8:	jae    0x650103ad
650103aa:	lea    eax,[ebp+0x3c]
650103ad:	push   eax
650103ae:	mov    eax,DWORD PTR [ebp+0x18]
650103b1:	push   ecx
650103b2:	add    eax,0xfffffff0
650103b5:	mov    DWORD PTR [ebp+0xc],esp
650103b8:	mov    esi,esp
650103ba:	push   eax
650103bb:	call   0x650028b0
650103c0:	add    eax,0x10
650103c3:	add    esp,0x4
650103c6:	mov    DWORD PTR [esi],eax
650103c8:	call   0x650023f0
650103cd:	add    esp,0xc
650103d0:	lea    eax,[ebp+0xc]
650103d3:	push   edi
650103d4:	push   eax
650103d5:	call   0x650034a0
650103da:	add    esp,0x8
650103dd:	push   0x65024348
650103e2:	push   eax
650103e3:	lea    ecx,[ebp+0x8]
650103e6:	push   ecx
650103e7:	mov    BYTE PTR [ebp-0x4],0x8
650103eb:	call   0x6500fa60
650103f0:	add    esp,0xc
650103f3:	mov    eax,DWORD PTR [ebp+0xc]
650103f6:	add    eax,0xfffffff0
650103f9:	mov    BYTE PTR [ebp-0x4],0xa
650103fd:	lea    edx,[eax+0xc]
65010400:	or     ecx,0xffffffff
65010403:	lock xadd DWORD PTR [edx],ecx
65010407:	dec    ecx
65010408:	test   ecx,ecx
6501040a:	jg     0x65010416
6501040c:	mov    ecx,DWORD PTR [eax]
6501040e:	mov    edx,DWORD PTR [ecx]
65010410:	push   eax
65010411:	mov    eax,DWORD PTR [edx+0x4]
65010414:	call   eax
65010416:	mov    eax,DWORD PTR [ebp+0x18]
65010419:	cmp    eax,edi
6501041b:	mov    ebx,eax
6501041d:	jne    0x65010423
6501041f:	xor    eax,eax
65010421:	jmp    0x65010453
65010423:	push   eax
65010424:	call   DWORD PTR ds:0x65024048
6501042a:	add    eax,0x1
6501042d:	cmp    eax,0x3fffffff
65010432:	jle    0x65010438
65010434:	xor    eax,eax
65010436:	jmp    0x65010453
65010438:	lea    esi,[eax+eax*1]
6501043b:	mov    eax,esi
6501043d:	call   0x65013030
65010442:	mov    ecx,DWORD PTR [ebp+0x0]
65010445:	mov    DWORD PTR [ebp-0x10],esp
65010448:	mov    eax,esp
6501044a:	push   ecx
6501044b:	push   esi
6501044c:	push   ebx
6501044d:	push   eax
6501044e:	call   0x65002b90
65010453:	push   eax
65010454:	lea    ecx,[ebp+0x4]
65010457:	call   0x650067c0
6501045c:	lea    edx,[ebp+0x8]
6501045f:	push   edx
65010460:	lea    eax,[ebp+0x4]
65010463:	push   eax
65010464:	mov    BYTE PTR [ebp-0x4],0xb
65010468:	call   0x65002540
6501046d:	mov    eax,DWORD PTR [ebp+0x4]
65010470:	add    eax,0xfffffff0
65010473:	add    esp,0x8
65010476:	mov    BYTE PTR [ebp-0x4],0xa
6501047a:	lea    ecx,[eax+0xc]
6501047d:	or     edx,0xffffffff
65010480:	lock xadd DWORD PTR [ecx],edx
65010484:	dec    edx
65010485:	test   edx,edx
65010487:	jg     0x65010493
65010489:	mov    ecx,DWORD PTR [eax]
6501048b:	mov    edx,DWORD PTR [ecx]
6501048d:	push   eax
6501048e:	mov    eax,DWORD PTR [edx+0x4]
65010491:	call   eax
65010493:	push   0x40
65010495:	xor    eax,eax
65010497:	lea    ecx,[ebp-0x78]
6501049a:	push   edi
6501049b:	push   ecx
6501049c:	mov    DWORD PTR [ebp-0x20],edi
6501049f:	mov    DWORD PTR [ebp-0x1c],eax
650104a2:	mov    DWORD PTR [ebp-0x18],eax
650104a5:	mov    DWORD PTR [ebp-0x14],eax
650104a8:	call   0x65012fb0
650104ad:	lea    edx,[ebp+0x1c]
650104b0:	push   edx
650104b1:	mov    DWORD PTR [ebp-0x7c],0x44
650104b8:	call   0x65001500
650104bd:	add    esp,0x10
650104c0:	cmp    DWORD PTR [ebp+0x34],0x10
650104c4:	mov    ebx,DWORD PTR [ebp+0x20]
650104c7:	mov    BYTE PTR [ebp-0x4],0xc
650104cb:	jae    0x650104d0
650104cd:	lea    ebx,[ebp+0x20]
650104d0:	mov    esi,DWORD PTR [ebp+0x18]
650104d3:	call   0x6500df80
650104d8:	lea    ecx,[ebp-0x20]
650104db:	push   ecx
650104dc:	lea    edx,[ebp-0x7c]
650104df:	push   edx
650104e0:	push   edi
650104e1:	push   ebx
650104e2:	push   0x400
650104e7:	push   0x1
650104e9:	push   edi
650104ea:	push   edi
650104eb:	push   edi
650104ec:	push   esi
650104ed:	call   eax
650104ef:	cmp    eax,edi
650104f1:	je     0x65010505
650104f3:	mov    eax,DWORD PTR [ebp-0x1c]
650104f6:	mov    esi,DWORD PTR ds:0x65024038
650104fc:	push   eax
650104fd:	call   esi
650104ff:	mov    ecx,DWORD PTR [ebp-0x20]
65010502:	push   ecx
65010503:	call   esi
65010505:	mov    esi,DWORD PTR [ebp+0x18]
65010508:	call   0x6500e010
6501050d:	push   0x4
6501050f:	push   edi
65010510:	push   esi
65010511:	call   eax
65010513:	mov    esi,DWORD PTR [ebp+0x14]
65010516:	call   0x6500e010
6501051b:	push   0x4
6501051d:	push   edi
6501051e:	push   esi
6501051f:	call   eax
65010521:	cmp    DWORD PTR [ebp+0x34],0x10
65010525:	jb     0x65010533
65010527:	mov    edx,DWORD PTR [ebp+0x20]
6501052a:	push   edx
6501052b:	call   0x650120d2
65010530:	add    esp,0x4
65010533:	mov    eax,DWORD PTR [ebp+0x8]
65010536:	add    eax,0xfffffff0
65010539:	mov    DWORD PTR [ebp+0x34],0xf
65010540:	mov    DWORD PTR [ebp+0x30],edi
65010543:	mov    BYTE PTR [ebp+0x20],0x0
65010547:	mov    BYTE PTR [ebp-0x4],0x7
6501054b:	lea    ecx,[eax+0xc]
6501054e:	or     edx,0xffffffff
65010551:	lock xadd DWORD PTR [ecx],edx
65010555:	dec    edx
65010556:	test   edx,edx
65010558:	jg     0x65010564
6501055a:	mov    ecx,DWORD PTR [eax]
6501055c:	mov    edx,DWORD PTR [ecx]
6501055e:	push   eax
6501055f:	mov    eax,DWORD PTR [edx+0x4]
65010562:	call   eax
65010564:	mov    eax,DWORD PTR [ebp+0x18]
65010567:	add    eax,0xfffffff0
6501056a:	mov    BYTE PTR [ebp-0x4],0x6
6501056e:	lea    ecx,[eax+0xc]
65010571:	or     edx,0xffffffff
65010574:	lock xadd DWORD PTR [ecx],edx
65010578:	dec    edx
65010579:	test   edx,edx
6501057b:	jg     0x65010587
6501057d:	mov    ecx,DWORD PTR [eax]
6501057f:	mov    edx,DWORD PTR [ecx]
65010581:	push   eax
65010582:	mov    eax,DWORD PTR [edx+0x4]
65010585:	call   eax
65010587:	mov    eax,DWORD PTR [ebp+0x14]
6501058a:	add    eax,0xfffffff0
6501058d:	mov    BYTE PTR [ebp-0x4],0x5
65010591:	lea    ecx,[eax+0xc]
65010594:	or     edx,0xffffffff
65010597:	lock xadd DWORD PTR [ecx],edx
6501059b:	dec    edx
6501059c:	test   edx,edx
6501059e:	jg     0x650105aa
650105a0:	mov    ecx,DWORD PTR [eax]
650105a2:	mov    edx,DWORD PTR [ecx]
650105a4:	push   eax
650105a5:	mov    eax,DWORD PTR [edx+0x4]
650105a8:	call   eax
650105aa:	mov    eax,DWORD PTR [ebp+0x10]
650105ad:	add    eax,0xfffffff0
650105b0:	mov    BYTE PTR [ebp-0x4],0x4
650105b4:	lea    ecx,[eax+0xc]
650105b7:	or     edx,0xffffffff
650105ba:	lock xadd DWORD PTR [ecx],edx
650105be:	dec    edx
650105bf:	test   edx,edx
650105c1:	jg     0x650105d7
650105c3:	mov    ecx,DWORD PTR [eax]
650105c5:	mov    edx,DWORD PTR [ecx]
650105c7:	push   eax
650105c8:	mov    eax,DWORD PTR [edx+0x4]
650105cb:	call   eax
650105cd:	jmp    0x650105d7
650105cf:	mov    eax,0x650105d5
650105d4:	ret    
650105d5:	xor    edi,edi
650105d7:	mov    esi,DWORD PTR [ebp-0x28]
650105da:	cmp    esi,edi
650105dc:	je     0x650105ed
650105de:	push   esi
650105df:	call   0x6500ea40
650105e4:	push   esi
650105e5:	call   0x650120d2
650105ea:	add    esp,0x8
650105ed:	mov    esi,0x10
650105f2:	cmp    DWORD PTR [ebp+0x6c],esi
650105f5:	jb     0x65010603
650105f7:	mov    ecx,DWORD PTR [ebp+0x58]
650105fa:	push   ecx
650105fb:	call   0x650120d2
65010600:	add    esp,0x4
65010603:	cmp    DWORD PTR [ebp+0x50],esi
65010606:	mov    DWORD PTR [ebp+0x6c],0xf
6501060d:	mov    DWORD PTR [ebp+0x68],edi
65010610:	mov    BYTE PTR [ebp+0x58],0x0
65010614:	jb     0x6501063a
65010616:	mov    edx,DWORD PTR [ebp+0x3c]
65010619:	push   edx
6501061a:	call   0x650120d2
6501061f:	add    esp,0x4
65010622:	jmp    0x6501063a
65010624:	mov    eax,0x6501062a
65010629:	ret    
6501062a:	lea    ecx,[ebp-0x38]
6501062d:	call   0x6500f7e0
65010632:	lea    ecx,[ebp+0x38]
65010635:	call   0x6500f940
6501063a:	lea    esp,[ebp-0x8c]
65010640:	mov    ecx,DWORD PTR [ebp-0xc]
65010643:	mov    DWORD PTR fs:0x0,ecx
6501064a:	pop    ecx
6501064b:	pop    edi
6501064c:	pop    esi
6501064d:	pop    ebx
6501064e:	mov    ecx,DWORD PTR [ebp+0x70]
65010651:	xor    ecx,ebp
65010653:	call   0x6501292c
65010658:	add    ebp,0x74
6501065b:	mov    esp,ebp
6501065d:	pop    ebp
6501065e:	ret    
6501065f:	int3   
65010660:	push   ecx
65010661:	push   esi
65010662:	mov    esi,ecx
65010664:	mov    eax,DWORD PTR [esi+0x4]
65010667:	test   eax,eax
65010669:	je     0x65010687
6501066b:	mov    ecx,DWORD PTR [esp+0x4]
6501066f:	mov    edx,DWORD PTR [esi+0x8]
65010672:	push   ecx
65010673:	push   esi
65010674:	push   edx
65010675:	push   eax
65010676:	call   0x6500c320
6501067b:	mov    eax,DWORD PTR [esi+0x4]
6501067e:	push   eax
6501067f:	call   0x650120d2
65010684:	add    esp,0x14
65010687:	mov    DWORD PTR [esi+0x4],0x0
6501068e:	mov    DWORD PTR [esi+0x8],0x0
65010695:	mov    DWORD PTR [esi+0xc],0x0
6501069c:	pop    esi
6501069d:	pop    ecx
6501069e:	ret    
6501069f:	int3   
650106a0:	push   0xffffffff
650106a2:	push   0x65021fde
650106a7:	mov    eax,fs:0x0
650106ad:	push   eax
650106ae:	push   ecx
650106af:	push   ebx
650106b0:	push   esi
650106b1:	push   edi
650106b2:	mov    eax,ds:0x6502c09c
650106b7:	xor    eax,esp
650106b9:	push   eax
650106ba:	lea    eax,[esp+0x14]
650106be:	mov    fs:0x0,eax
650106c4:	mov    eax,0x1
650106c9:	test   BYTE PTR ds:0x6502d4e8,al
650106cf:	jne    0x6501070a
650106d1:	or     DWORD PTR ds:0x6502d4e8,eax
650106d7:	push   0x65023650
650106dc:	mov    DWORD PTR ds:0x6502d4dc,0x0
650106e6:	mov    DWORD PTR ds:0x6502d4e0,0x0
650106f0:	mov    DWORD PTR ds:0x6502d4e4,0x0
650106fa:	call   0x65012a5f
650106ff:	add    esp,0x4
65010702:	mov    DWORD PTR [esp+0x1c],0xffffffff
6501070a:	mov    esi,DWORD PTR ds:0x6502d4dc
65010710:	test   esi,esi
65010712:	je     0x65010727
65010714:	mov    edi,DWORD PTR ds:0x6502d4e0
6501071a:	mov    eax,edi
6501071c:	sub    eax,esi
6501071e:	sar    eax,0x2
65010721:	jne    0x6501083d
65010727:	push   0x65024450
6501072c:	push   0xc
6501072e:	push   0x65024440
65010733:	call   0x65006a60
65010738:	mov    esi,DWORD PTR ds:0x650241c0
6501073e:	add    esp,0xc
65010741:	push   eax
65010742:	call   esi
65010744:	lea    ecx,[esp+0x10]
65010748:	push   ecx
65010749:	mov    ecx,0x6502d4d8
6501074e:	mov    DWORD PTR [esp+0x14],eax
65010752:	call   0x65010160
65010757:	push   0x65024414
6501075c:	push   0xc
6501075e:	push   0x65024404
65010763:	call   0x65006a60
65010768:	add    esp,0xc
6501076b:	push   eax
6501076c:	call   esi
6501076e:	lea    edx,[esp+0x10]
65010772:	push   edx
65010773:	mov    ecx,0x6502d4d8
65010778:	mov    DWORD PTR [esp+0x14],eax
6501077c:	call   0x65010160
65010781:	push   0x650243c8
65010786:	push   0xc
65010788:	push   0x65024404
6501078d:	call   0x65006a60
65010792:	add    esp,0xc
65010795:	push   eax
65010796:	call   esi
65010798:	mov    DWORD PTR [esp+0x10],eax
6501079c:	lea    eax,[esp+0x10]
650107a0:	push   eax
650107a1:	mov    ecx,0x6502d4d8
650107a6:	call   0x65010160
650107ab:	push   0x65024398
650107b0:	push   0xc
650107b2:	push   0x65024388
650107b7:	call   0x65006a60
650107bc:	add    esp,0xc
650107bf:	push   eax
650107c0:	call   esi
650107c2:	lea    ecx,[esp+0x10]
650107c6:	push   ecx
650107c7:	mov    ecx,0x6502d4d8
650107cc:	mov    DWORD PTR [esp+0x14],eax
650107d0:	call   0x65010160
650107d5:	push   0x65024360
650107da:	push   0xc
650107dc:	push   0x65024388
650107e1:	call   0x65006a60
650107e6:	add    esp,0xc
650107e9:	push   eax
650107ea:	call   esi
650107ec:	lea    edx,[esp+0x10]
650107f0:	push   edx
650107f1:	mov    ecx,0x6502d4d8
650107f6:	mov    DWORD PTR [esp+0x14],eax
650107fa:	call   0x65010160
650107ff:	call   DWORD PTR ds:0x65024050
65010805:	push   eax
65010806:	call   0x6501305c
6501080b:	mov    eax,ds:0x6502d4dc
65010810:	add    esp,0x4
65010813:	test   eax,eax
65010815:	jne    0x6501081b
65010817:	xor    esi,esi
65010819:	jmp    0x65010826
6501081b:	mov    esi,DWORD PTR ds:0x6502d4e0
65010821:	sub    esi,eax
65010823:	sar    esi,0x2
65010826:	call   0x65013069
6501082b:	mov    edi,DWORD PTR ds:0x6502d4e0
65010831:	xor    edx,edx
65010833:	div    esi
65010835:	mov    esi,DWORD PTR ds:0x6502d4dc
6501083b:	jmp    0x65010843
6501083d:	mov    edx,DWORD PTR ds:0x6502d4d4
65010843:	test   esi,esi
65010845:	jne    0x6501084b
65010847:	xor    ecx,ecx
65010849:	jmp    0x65010852
6501084b:	mov    ecx,edi
6501084d:	sub    ecx,esi
6501084f:	sar    ecx,0x2
65010852:	lea    eax,[edx+0x1]
65010855:	xor    edx,edx
65010857:	div    ecx
65010859:	test   esi,esi
6501085b:	mov    DWORD PTR ds:0x6502d4d4,edx
65010861:	mov    ebx,edx
65010863:	je     0x6501086e
65010865:	sub    edi,esi
65010867:	sar    edi,0x2
6501086a:	cmp    edx,edi
6501086c:	jb     0x6501088e
6501086e:	call   0x65012443
65010873:	mov    eax,ds:0x6502d4dc
65010878:	mov    eax,DWORD PTR [eax+ebx*4]
6501087b:	mov    ecx,DWORD PTR [esp+0x14]
6501087f:	mov    DWORD PTR fs:0x0,ecx
65010886:	pop    ecx
65010887:	pop    edi
65010888:	pop    esi
65010889:	pop    ebx
6501088a:	add    esp,0x10
6501088d:	ret    
6501088e:	mov    eax,DWORD PTR [esi+ebx*4]
65010891:	mov    ecx,DWORD PTR [esp+0x14]
65010895:	mov    DWORD PTR fs:0x0,ecx
6501089c:	pop    ecx
6501089d:	pop    edi
6501089e:	pop    esi
6501089f:	pop    ebx
650108a0:	add    esp,0x10
650108a3:	ret    
650108a4:	int3   
650108a5:	int3   
650108a6:	int3   
650108a7:	int3   
650108a8:	int3   
650108a9:	int3   
650108aa:	int3   
650108ab:	int3   
650108ac:	int3   
650108ad:	int3   
650108ae:	int3   
650108af:	int3   
650108b0:	push   ebp
650108b1:	mov    ebp,esp
650108b3:	push   0xffffffff
650108b5:	push   0x65022008
650108ba:	mov    eax,fs:0x0
650108c0:	push   eax
650108c1:	sub    esp,0x8
650108c4:	push   ebx
650108c5:	push   esi
650108c6:	push   edi
650108c7:	mov    eax,ds:0x6502c09c
650108cc:	xor    eax,ebp
650108ce:	push   eax
650108cf:	lea    eax,[ebp-0xc]
650108d2:	mov    fs:0x0,eax
650108d8:	mov    DWORD PTR [ebp-0x10],esp
650108db:	xor    ebx,ebx
650108dd:	mov    DWORD PTR [ebp-0x4],ebx
650108e0:	call   0x650106a0
650108e5:	lea    ecx,[ebp-0x14]
650108e8:	mov    edi,eax
650108ea:	call   0x6500a430
650108ef:	mov    eax,DWORD PTR [ebp+0x8]
650108f2:	cmp    DWORD PTR [eax+0x18],0x10
650108f6:	mov    ecx,DWORD PTR [eax+0x14]
650108f9:	mov    BYTE PTR [ebp-0x4],0x1
650108fd:	jb     0x65010904
650108ff:	mov    eax,DWORD PTR [eax+0x4]
65010902:	jmp    0x65010907
65010904:	add    eax,0x4
65010907:	mov    esi,DWORD PTR [ebp+0xc]
6501090a:	push   0xffffffff
6501090c:	push   esi
6501090d:	add    ecx,0x1
65010910:	push   ecx
65010911:	push   eax
65010912:	push   edi
65010913:	lea    ecx,[ebp-0x14]
65010916:	call   0x6500a450
6501091b:	cmp    al,bl
6501091d:	je     0x6501093e
6501091f:	lea    ecx,[ebp-0x14]
65010922:	mov    BYTE PTR [ebp-0x4],bl
65010925:	call   0x6500a440
6501092a:	mov    al,0x1
6501092c:	mov    ecx,DWORD PTR [ebp-0xc]
6501092f:	mov    DWORD PTR fs:0x0,ecx
65010936:	pop    ecx
65010937:	pop    edi
65010938:	pop    esi
65010939:	pop    ebx
6501093a:	mov    esp,ebp
6501093c:	pop    ebp
6501093d:	ret    
6501093e:	push   ebx
6501093f:	push   0x650266de
65010944:	mov    ecx,esi
65010946:	call   0x650018c0
6501094b:	lea    ecx,[ebp-0x14]
6501094e:	mov    BYTE PTR [ebp-0x4],bl
65010951:	call   0x6500a440
65010956:	xor    al,al
65010958:	mov    ecx,DWORD PTR [ebp-0xc]
6501095b:	mov    DWORD PTR fs:0x0,ecx
65010962:	pop    ecx
65010963:	pop    edi
65010964:	pop    esi
65010965:	pop    ebx
65010966:	mov    esp,ebp
65010968:	pop    ebp
65010969:	ret    
6501096a:	mov    eax,0x65010956
6501096f:	ret    
65010970:	push   ecx
65010971:	push   esi
65010972:	push   0x65024498
65010977:	push   0x17
65010979:	push   0x65024480
6501097e:	mov    DWORD PTR [esp+0x10],0x0
65010986:	call   0x65006a60
6501098b:	mov    esi,DWORD PTR [esp+0x18]
6501098f:	add    esp,0xc
65010992:	push   eax
65010993:	mov    ecx,esi
65010995:	call   0x650067c0
6501099a:	mov    eax,esi
6501099c:	pop    esi
6501099d:	pop    ecx
6501099e:	ret    
6501099f:	int3   
650109a0:	push   0xffffffff
650109a2:	push   0x65022038
650109a7:	mov    eax,fs:0x0
650109ad:	push   eax
650109ae:	push   ecx
650109af:	push   esi
650109b0:	mov    eax,ds:0x6502c09c
650109b5:	xor    eax,esp
650109b7:	push   eax
650109b8:	lea    eax,[esp+0xc]
650109bc:	mov    fs:0x0,eax
650109c2:	lea    eax,[esp+0x8]
650109c6:	push   eax
650109c7:	call   0x65010970
650109cc:	add    esp,0x4
650109cf:	mov    eax,DWORD PTR [eax]
650109d1:	push   eax
650109d2:	push   0x0
650109d4:	mov    DWORD PTR [esp+0x1c],0x0
650109dc:	call   0x650066c0
650109e1:	push   eax
650109e2:	call   DWORD PTR ds:0x650240a4
650109e8:	mov    esi,eax
650109ea:	mov    eax,DWORD PTR [esp+0x8]
650109ee:	add    eax,0xfffffff0
650109f1:	mov    DWORD PTR [esp+0x14],0xffffffff
650109f9:	lea    ecx,[eax+0xc]
650109fc:	or     edx,0xffffffff
650109ff:	lock xadd DWORD PTR [ecx],edx
65010a03:	dec    edx
65010a04:	test   edx,edx
65010a06:	jg     0x65010a12
65010a08:	mov    ecx,DWORD PTR [eax]
65010a0a:	mov    edx,DWORD PTR [ecx]
65010a0c:	push   eax
65010a0d:	mov    eax,DWORD PTR [edx+0x4]
65010a10:	call   eax
65010a12:	test   esi,esi
65010a14:	jne    0x65010a29
65010a16:	xor    al,al
65010a18:	mov    ecx,DWORD PTR [esp+0xc]
65010a1c:	mov    DWORD PTR fs:0x0,ecx
65010a23:	pop    ecx
65010a24:	pop    esi
65010a25:	add    esp,0x10
65010a28:	ret    
65010a29:	push   0x0
65010a2b:	push   esi
65010a2c:	call   DWORD PTR ds:0x65024054
65010a32:	test   eax,eax
65010a34:	sete   al
65010a37:	mov    ecx,DWORD PTR [esp+0xc]
65010a3b:	mov    DWORD PTR fs:0x0,ecx
65010a42:	pop    ecx
65010a43:	pop    esi
65010a44:	add    esp,0x10
65010a47:	ret    
65010a48:	int3   
65010a49:	int3   
65010a4a:	int3   
65010a4b:	int3   
65010a4c:	int3   
65010a4d:	int3   
65010a4e:	int3   
65010a4f:	int3   
65010a50:	push   0xffffffff
65010a52:	push   0x65022070
65010a57:	mov    eax,fs:0x0
65010a5d:	push   eax
65010a5e:	sub    esp,0x8
65010a61:	push   ebx
65010a62:	push   esi
65010a63:	push   edi
65010a64:	mov    eax,ds:0x6502c09c
65010a69:	xor    eax,esp
65010a6b:	push   eax
65010a6c:	lea    eax,[esp+0x18]
65010a70:	mov    fs:0x0,eax
65010a76:	xor    ebx,ebx
65010a78:	mov    DWORD PTR [esp+0x14],ebx
65010a7c:	push   0x650244f0
65010a81:	push   0xf
65010a83:	push   0x650244cc
65010a88:	mov    DWORD PTR [esp+0x2c],ebx
65010a8c:	call   0x65006d50
65010a91:	add    esp,0xc
65010a94:	push   eax
65010a95:	lea    ecx,[esp+0x14]
65010a99:	call   0x650025a0
65010a9e:	mov    eax,DWORD PTR [esp+0x10]
65010aa2:	push   ebx
65010aa3:	push   ebx
65010aa4:	push   0x3
65010aa6:	push   ebx
65010aa7:	push   ebx
65010aa8:	push   0xc0000000
65010aad:	push   eax
65010aae:	mov    BYTE PTR [esp+0x3c],0x1
65010ab3:	call   0x6500e130
65010ab8:	call   eax
65010aba:	mov    esi,eax
65010abc:	mov    eax,DWORD PTR [esp+0x10]
65010ac0:	add    eax,0xfffffff0
65010ac3:	mov    DWORD PTR [esp+0x14],esi
65010ac7:	mov    BYTE PTR [esp+0x20],bl
65010acb:	or     edx,0xffffffff
65010ace:	lea    ecx,[eax+0xc]
65010ad1:	lock xadd DWORD PTR [ecx],edx
65010ad5:	dec    edx
65010ad6:	cmp    esi,0xffffffff
65010ad9:	je     0x65010b18
65010adb:	test   edx,edx
65010add:	jg     0x65010ae9
65010adf:	mov    ecx,DWORD PTR [eax]
65010ae1:	mov    edx,DWORD PTR [ecx]
65010ae3:	push   eax
65010ae4:	mov    eax,DWORD PTR [edx+0x4]
65010ae7:	call   eax
65010ae9:	cmp    esi,ebx
65010aeb:	je     0x65010b03
65010aed:	call   DWORD PTR ds:0x6502403c
65010af3:	push   esi
65010af4:	mov    edi,eax
65010af6:	call   DWORD PTR ds:0x65024038
65010afc:	push   edi
65010afd:	call   DWORD PTR ds:0x65024090
65010b03:	mov    al,0x1
65010b05:	mov    ecx,DWORD PTR [esp+0x18]
65010b09:	mov    DWORD PTR fs:0x0,ecx
65010b10:	pop    ecx
65010b11:	pop    edi
65010b12:	pop    esi
65010b13:	pop    ebx
65010b14:	add    esp,0x14
65010b17:	ret    
65010b18:	test   edx,edx
65010b1a:	jg     0x65010b26
65010b1c:	mov    ecx,DWORD PTR [eax]
65010b1e:	mov    edx,DWORD PTR [ecx]
65010b20:	push   eax
65010b21:	mov    eax,DWORD PTR [edx+0x4]
65010b24:	call   eax
65010b26:	call   DWORD PTR ds:0x6502403c
65010b2c:	push   0xffffffff
65010b2e:	mov    esi,eax
65010b30:	call   DWORD PTR ds:0x65024038
65010b36:	push   esi
65010b37:	call   DWORD PTR ds:0x65024090
65010b3d:	xor    al,al
65010b3f:	mov    ecx,DWORD PTR [esp+0x18]
65010b43:	mov    DWORD PTR fs:0x0,ecx
65010b4a:	pop    ecx
65010b4b:	pop    edi
65010b4c:	pop    esi
65010b4d:	pop    ebx
65010b4e:	add    esp,0x14
65010b51:	ret    
65010b52:	int3   
65010b53:	int3   
65010b54:	int3   
65010b55:	int3   
65010b56:	int3   
65010b57:	int3   
65010b58:	int3   
65010b59:	int3   
65010b5a:	int3   
65010b5b:	int3   
65010b5c:	int3   
65010b5d:	int3   
65010b5e:	int3   
65010b5f:	int3   
65010b60:	push   ebp
65010b61:	lea    ebp,[esp-0x128]
65010b68:	sub    esp,0x128
65010b6e:	push   0xffffffff
65010b70:	push   0x65022191
65010b75:	mov    eax,fs:0x0
65010b7b:	push   eax
65010b7c:	sub    esp,0x90
65010b82:	mov    eax,ds:0x6502c09c
65010b87:	xor    eax,ebp
65010b89:	mov    DWORD PTR [ebp+0x124],eax
65010b8f:	push   ebx
65010b90:	push   esi
65010b91:	push   edi
65010b92:	push   eax
65010b93:	lea    eax,[ebp-0xc]
65010b96:	mov    fs:0x0,eax
65010b9c:	mov    esi,DWORD PTR [ebp+0x130]
65010ba2:	xor    ebx,ebx
65010ba4:	mov    DWORD PTR [ebp-0x4],ebx
65010ba7:	mov    DWORD PTR [ebp-0x58],esi
65010baa:	mov    DWORD PTR [ebp-0x50],ebx
65010bad:	call   DWORD PTR ds:0x6502c06c
65010bb3:	mov    eax,ds:0x6502d560
65010bb8:	mov    edx,DWORD PTR [eax+0xc]
65010bbb:	mov    ecx,0x6502d560
65010bc0:	call   edx
65010bc2:	add    eax,0x10
65010bc5:	mov    DWORD PTR [esi],eax
65010bc7:	push   0x65024934
65010bcc:	push   0xd
65010bce:	mov    edi,0x1
65010bd3:	push   0x65024924
65010bd8:	mov    DWORD PTR [ebp-0x4],ebx
65010bdb:	mov    DWORD PTR [ebp-0x50],edi
65010bde:	call   0x65006a60
65010be3:	add    esp,0xc
65010be6:	push   eax
65010be7:	mov    ecx,esi
65010be9:	call   0x65002670
65010bee:	push   0x65024900
65010bf3:	push   0x3
65010bf5:	push   0x650248fc
65010bfa:	call   0x65006a60
65010bff:	add    esp,0xc
65010c02:	push   eax
65010c03:	mov    ecx,esi
65010c05:	call   0x65002670
65010c0a:	push   0x650248f0
65010c0f:	mov    ecx,esi
65010c11:	call   0x65002670
65010c16:	push   0x650248bc
65010c1b:	push   0x3
65010c1d:	push   0x650248b8
65010c22:	call   0x65006a60
65010c27:	add    esp,0xc
65010c2a:	push   eax
65010c2b:	mov    ecx,esi
65010c2d:	call   0x65002670
65010c32:	push   0x650248b0
65010c37:	mov    ecx,esi
65010c39:	call   0x65002670
65010c3e:	mov    eax,ds:0x6502d560
65010c43:	mov    edx,DWORD PTR [eax+0xc]
65010c46:	mov    ecx,0x6502d560
65010c4b:	call   edx
65010c4d:	add    eax,0x10
65010c50:	mov    DWORD PTR [ebp-0x4c],eax
65010c53:	mov    eax,ds:0x6502d560
65010c58:	mov    edx,DWORD PTR [eax+0xc]
65010c5b:	mov    ecx,0x6502d560
65010c60:	mov    DWORD PTR [ebp-0x4],edi
65010c63:	call   edx
65010c65:	add    eax,0x10
65010c68:	mov    DWORD PTR [ebp-0x54],eax
65010c6b:	lea    eax,[ebp+0x114]
65010c71:	push   eax
65010c72:	mov    BYTE PTR [ebp-0x4],0x2
65010c76:	call   0x65006510
65010c7b:	add    esp,0x4
65010c7e:	test   al,al
65010c80:	je     0x65010d20
65010c86:	push   0x6502488c
65010c8b:	push   0x4
65010c8d:	push   0x65024884
65010c92:	call   0x65006a60
65010c97:	add    esp,0xc
65010c9a:	push   eax
65010c9b:	lea    ecx,[ebp-0x10]
65010c9e:	call   0x650067c0
65010ca3:	mov    eax,DWORD PTR [eax]
65010ca5:	mov    ecx,DWORD PTR [eax-0xc]
65010ca8:	push   ecx
65010ca9:	push   eax
65010caa:	mov    ecx,esi
65010cac:	mov    BYTE PTR [ebp-0x4],0x3
65010cb0:	call   0x650029f0
65010cb5:	mov    eax,DWORD PTR [ebp-0x10]
65010cb8:	add    eax,0xfffffff0
65010cbb:	mov    BYTE PTR [ebp-0x4],0x2
65010cbf:	lea    ecx,[eax+0xc]
65010cc2:	or     edx,0xffffffff
65010cc5:	lock xadd DWORD PTR [ecx],edx
65010cc9:	dec    edx
65010cca:	test   edx,edx
65010ccc:	jg     0x65010cd8
65010cce:	mov    ecx,DWORD PTR [eax]
65010cd0:	mov    edx,DWORD PTR [ecx]
65010cd2:	push   eax
65010cd3:	mov    eax,DWORD PTR [edx+0x4]
65010cd6:	call   eax
65010cd8:	lea    ecx,[ebp+0x114]
65010cde:	push   ecx
65010cdf:	lea    edx,[ebp-0x10]
65010ce2:	push   edx
65010ce3:	call   0x65002ec0
65010ce8:	add    esp,0x8
65010ceb:	mov    eax,DWORD PTR [eax]
65010ced:	mov    ecx,DWORD PTR [eax-0xc]
65010cf0:	push   ecx
65010cf1:	push   eax
65010cf2:	mov    ecx,esi
65010cf4:	mov    BYTE PTR [ebp-0x4],0x4
65010cf8:	call   0x650029f0
65010cfd:	mov    eax,DWORD PTR [ebp-0x10]
65010d00:	add    eax,0xfffffff0
65010d03:	mov    BYTE PTR [ebp-0x4],0x2
65010d07:	lea    ecx,[eax+0xc]
65010d0a:	or     edx,0xffffffff
65010d0d:	lock xadd DWORD PTR [ecx],edx
65010d11:	dec    edx
65010d12:	test   edx,edx
65010d14:	jg     0x65010d20
65010d16:	mov    ecx,DWORD PTR [eax]
65010d18:	mov    edx,DWORD PTR [ecx]
65010d1a:	push   eax
65010d1b:	mov    eax,DWORD PTR [edx+0x4]
65010d1e:	call   eax
65010d20:	push   0x65024858
65010d25:	push   0x7
65010d27:	push   0x65024850
65010d2c:	call   0x65006a60
65010d31:	add    esp,0xc
65010d34:	push   eax
65010d35:	mov    ecx,esi
65010d37:	call   0x65002670
65010d3c:	call   0x65010a50
65010d41:	test   al,al
65010d43:	je     0x65010d61
65010d45:	push   0x6502482c
65010d4a:	push   0x6
65010d4c:	push   0x65024824
65010d51:	call   0x65006a60
65010d56:	add    esp,0xc
65010d59:	push   eax
65010d5a:	mov    ecx,esi
65010d5c:	call   0x65002670
65010d61:	mov    edx,DWORD PTR ds:0x6502d560
65010d67:	mov    eax,DWORD PTR [edx+0xc]
65010d6a:	mov    ecx,0x6502d560
65010d6f:	call   eax
65010d71:	add    eax,0x10
65010d74:	mov    DWORD PTR [ebp-0x28],eax
65010d77:	mov    edx,DWORD PTR ds:0x6502d560
65010d7d:	mov    eax,DWORD PTR [edx+0xc]
65010d80:	mov    ecx,0x6502d560
65010d85:	mov    BYTE PTR [ebp-0x4],0x5
65010d89:	call   eax
65010d8b:	add    eax,0x10
65010d8e:	mov    DWORD PTR [ebp-0x48],eax
65010d91:	mov    edx,DWORD PTR ds:0x6502d560
65010d97:	mov    eax,DWORD PTR [edx+0xc]
65010d9a:	mov    ecx,0x6502d560
65010d9f:	mov    BYTE PTR [ebp-0x4],0x6
65010da3:	call   eax
65010da5:	add    eax,0x10
65010da8:	mov    DWORD PTR [ebp-0x24],eax
65010dab:	lea    ecx,[ebp-0x44]
65010dae:	push   ecx
65010daf:	lea    edx,[ebp-0x24]
65010db2:	push   edx
65010db3:	lea    eax,[ebp-0x28]
65010db6:	push   eax
65010db7:	mov    BYTE PTR [ebp-0x4],0x7
65010dbb:	mov    DWORD PTR [ebp-0x44],ebx
65010dbe:	mov    DWORD PTR [ebp-0x40],ebx
65010dc1:	call   0x6500b290
65010dc6:	add    esp,0xc
65010dc9:	test   al,al
65010dcb:	je     0x6501100c
65010dd1:	lea    ecx,[ebp-0x24]
65010dd4:	push   ecx
65010dd5:	lea    edx,[ebp-0x14]
65010dd8:	push   edx
65010dd9:	call   0x65003160
65010dde:	mov    edi,eax
65010de0:	push   0x650247f8
65010de5:	push   0x5
65010de7:	mov    bl,0x8
65010de9:	push   0x650247f0
65010dee:	mov    BYTE PTR [ebp-0x4],bl
65010df1:	call   0x65006a60
65010df6:	add    esp,0x14
65010df9:	push   eax
65010dfa:	lea    ecx,[ebp-0x18]
65010dfd:	call   0x650067c0
65010e02:	push   edi
65010e03:	push   eax
65010e04:	lea    eax,[ebp-0x10]
65010e07:	push   eax
65010e08:	mov    BYTE PTR [ebp-0x4],0x9
65010e0c:	call   0x6500f990
65010e11:	add    esp,0xc
65010e14:	mov    eax,DWORD PTR [eax]
65010e16:	mov    ecx,DWORD PTR [eax-0xc]
65010e19:	push   ecx
65010e1a:	push   eax
65010e1b:	mov    ecx,esi
65010e1d:	mov    BYTE PTR [ebp-0x4],0xa
65010e21:	call   0x650029f0
65010e26:	mov    eax,DWORD PTR [ebp-0x10]
65010e29:	add    eax,0xfffffff0
65010e2c:	mov    BYTE PTR [ebp-0x4],0x9
65010e30:	lea    ecx,[eax+0xc]
65010e33:	or     edx,0xffffffff
65010e36:	lock xadd DWORD PTR [ecx],edx
65010e3a:	dec    edx
65010e3b:	test   edx,edx
65010e3d:	jg     0x65010e49
65010e3f:	mov    ecx,DWORD PTR [eax]
65010e41:	mov    edx,DWORD PTR [ecx]
65010e43:	push   eax
65010e44:	mov    eax,DWORD PTR [edx+0x4]
65010e47:	call   eax
65010e49:	mov    eax,DWORD PTR [ebp-0x18]
65010e4c:	add    eax,0xfffffff0
65010e4f:	mov    BYTE PTR [ebp-0x4],bl
65010e52:	lea    ecx,[eax+0xc]
65010e55:	or     edx,0xffffffff
65010e58:	lock xadd DWORD PTR [ecx],edx
65010e5c:	dec    edx
65010e5d:	test   edx,edx
65010e5f:	jg     0x65010e6b
65010e61:	mov    ecx,DWORD PTR [eax]
65010e63:	mov    edx,DWORD PTR [ecx]
65010e65:	push   eax
65010e66:	mov    eax,DWORD PTR [edx+0x4]
65010e69:	call   eax
65010e6b:	mov    eax,DWORD PTR [ebp-0x14]
65010e6e:	add    eax,0xfffffff0
65010e71:	mov    BYTE PTR [ebp-0x4],0x7
65010e75:	lea    ecx,[eax+0xc]
65010e78:	or     edx,0xffffffff
65010e7b:	lock xadd DWORD PTR [ecx],edx
65010e7f:	dec    edx
65010e80:	test   edx,edx
65010e82:	jg     0x65010e8e
65010e84:	mov    ecx,DWORD PTR [eax]
65010e86:	mov    edx,DWORD PTR [ecx]
65010e88:	push   eax
65010e89:	mov    eax,DWORD PTR [edx+0x4]
65010e8c:	call   eax
65010e8e:	lea    ecx,[ebp-0x28]
65010e91:	push   ecx
65010e92:	lea    edx,[ebp-0x10]
65010e95:	push   edx
65010e96:	call   0x65003160
65010e9b:	mov    edi,eax
65010e9d:	push   0x650247b0
65010ea2:	push   0x7
65010ea4:	mov    bl,0xb
65010ea6:	push   0x650247a8
65010eab:	mov    BYTE PTR [ebp-0x4],bl
65010eae:	call   0x65006a60
65010eb3:	add    esp,0x14
65010eb6:	push   eax
65010eb7:	lea    ecx,[ebp-0x18]
65010eba:	call   0x650067c0
65010ebf:	push   edi
65010ec0:	push   eax
65010ec1:	lea    eax,[ebp-0x14]
65010ec4:	push   eax
65010ec5:	mov    BYTE PTR [ebp-0x4],0xc
65010ec9:	call   0x6500f990
65010ece:	add    esp,0xc
65010ed1:	mov    eax,DWORD PTR [eax]
65010ed3:	mov    ecx,DWORD PTR [eax-0xc]
65010ed6:	push   ecx
65010ed7:	push   eax
65010ed8:	mov    ecx,esi
65010eda:	mov    BYTE PTR [ebp-0x4],0xd
65010ede:	call   0x650029f0
65010ee3:	mov    eax,DWORD PTR [ebp-0x14]
65010ee6:	add    eax,0xfffffff0
65010ee9:	mov    BYTE PTR [ebp-0x4],0xc
65010eed:	lea    ecx,[eax+0xc]
65010ef0:	or     edx,0xffffffff
65010ef3:	lock xadd DWORD PTR [ecx],edx
65010ef7:	dec    edx
65010ef8:	test   edx,edx
65010efa:	jg     0x65010f06
65010efc:	mov    ecx,DWORD PTR [eax]
65010efe:	mov    edx,DWORD PTR [ecx]
65010f00:	push   eax
65010f01:	mov    eax,DWORD PTR [edx+0x4]
65010f04:	call   eax
65010f06:	mov    eax,DWORD PTR [ebp-0x18]
65010f09:	add    eax,0xfffffff0
65010f0c:	mov    BYTE PTR [ebp-0x4],bl
65010f0f:	lea    ecx,[eax+0xc]
65010f12:	or     edx,0xffffffff
65010f15:	lock xadd DWORD PTR [ecx],edx
65010f19:	dec    edx
65010f1a:	test   edx,edx
65010f1c:	jg     0x65010f28
65010f1e:	mov    ecx,DWORD PTR [eax]
65010f20:	mov    edx,DWORD PTR [ecx]
65010f22:	push   eax
65010f23:	mov    eax,DWORD PTR [edx+0x4]
65010f26:	call   eax
65010f28:	mov    eax,DWORD PTR [ebp-0x10]
65010f2b:	add    eax,0xfffffff0
65010f2e:	mov    BYTE PTR [ebp-0x4],0x7
65010f32:	lea    ecx,[eax+0xc]
65010f35:	or     edx,0xffffffff
65010f38:	lock xadd DWORD PTR [ecx],edx
65010f3c:	dec    edx
65010f3d:	test   edx,edx
65010f3f:	jg     0x65010f4b
65010f41:	mov    ecx,DWORD PTR [eax]
65010f43:	mov    edx,DWORD PTR [ecx]
65010f45:	push   eax
65010f46:	mov    eax,DWORD PTR [edx+0x4]
65010f49:	call   eax
65010f4b:	mov    edx,DWORD PTR ds:0x6502d560
65010f51:	mov    eax,DWORD PTR [edx+0xc]
65010f54:	mov    ecx,0x6502d560
65010f59:	call   eax
65010f5b:	add    eax,0x10
65010f5e:	mov    DWORD PTR [ebp-0x10],eax
65010f61:	mov    ecx,DWORD PTR [ebp-0x40]
65010f64:	mov    edx,DWORD PTR [ebp-0x44]
65010f67:	push   ecx
65010f68:	push   edx
65010f69:	push   0x6502477c
65010f6e:	push   0xc
65010f70:	push   0x65024760
65010f75:	mov    BYTE PTR [ebp-0x4],0xe
65010f79:	call   0x65006d50
65010f7e:	add    esp,0xc
65010f81:	push   eax
65010f82:	lea    eax,[ebp-0x10]
65010f85:	push   eax
65010f86:	call   0x65001da0
65010f8b:	add    esp,0x10
65010f8e:	call   DWORD PTR ds:0x6502c06c
65010f94:	mov    edi,DWORD PTR [ebp-0x10]
65010f97:	cmp    DWORD PTR [edi-0x4],0x1
65010f9b:	mov    DWORD PTR [ebp-0x14],eax
65010f9e:	jle    0x65010faf
65010fa0:	mov    ecx,DWORD PTR [edi-0xc]
65010fa3:	push   ecx
65010fa4:	lea    ecx,[ebp-0x10]
65010fa7:	call   0x650019b0
65010fac:	mov    edi,DWORD PTR [ebp-0x10]
65010faf:	test   edi,edi
65010fb1:	jne    0x65010fb7
65010fb3:	xor    eax,eax
65010fb5:	jmp    0x65010fe4
65010fb7:	push   edi
65010fb8:	call   DWORD PTR ds:0x65024048
65010fbe:	add    eax,0x1
65010fc1:	cmp    eax,0x3fffffff
65010fc6:	jle    0x65010fcc
65010fc8:	xor    eax,eax
65010fca:	jmp    0x65010fe4
65010fcc:	lea    ebx,[eax+eax*1]
65010fcf:	mov    eax,ebx
65010fd1:	call   0x65013030
65010fd6:	mov    edx,DWORD PTR [ebp-0x14]
65010fd9:	mov    eax,esp
65010fdb:	push   edx
65010fdc:	push   ebx
65010fdd:	push   edi
65010fde:	push   eax
65010fdf:	call   0x65002b90
65010fe4:	push   eax
65010fe5:	mov    ecx,esi
65010fe7:	call   0x65002670
65010fec:	add    edi,0xfffffff0
65010fef:	mov    BYTE PTR [ebp-0x4],0x7
65010ff3:	lea    eax,[edi+0xc]
65010ff6:	or     ecx,0xffffffff
65010ff9:	lock xadd DWORD PTR [eax],ecx
65010ffd:	dec    ecx
65010ffe:	test   ecx,ecx
65011000:	jg     0x6501100c
65011002:	mov    ecx,DWORD PTR [edi]
65011004:	mov    edx,DWORD PTR [ecx]
65011006:	mov    eax,DWORD PTR [edx+0x4]
65011009:	push   edi
6501100a:	call   eax
6501100c:	xor    edi,edi
6501100e:	mov    DWORD PTR [ebp-0x38],edi
65011011:	mov    DWORD PTR [ebp-0x34],edi
65011014:	mov    DWORD PTR [ebp-0x30],edi
65011017:	lea    ecx,[ebp-0x3c]
6501101a:	push   ecx
6501101b:	mov    BYTE PTR [ebp-0x4],0xf
6501101f:	call   0x6500b440
65011024:	add    esp,0x4
65011027:	mov    DWORD PTR [ebp-0x10],edi
6501102a:	xor    ebx,ebx
6501102c:	lea    esp,[esp+0x0]
65011030:	mov    eax,DWORD PTR [ebp-0x38]
65011033:	cmp    eax,edi
65011035:	jne    0x6501103b
65011037:	xor    eax,eax
65011039:	jmp    0x65011053
6501103b:	mov    ecx,DWORD PTR [ebp-0x34]
6501103e:	sub    ecx,eax
65011040:	mov    eax,0x92492493
65011045:	imul   ecx
65011047:	add    edx,ecx
65011049:	sar    edx,0x4
6501104c:	mov    eax,edx
6501104e:	shr    eax,0x1f
65011051:	add    eax,edx
65011053:	cmp    DWORD PTR [ebp-0x10],eax
65011056:	je     0x65011101
6501105c:	push   0x65024738
65011061:	push   0x5
65011063:	push   0x65024730
65011068:	call   0x65006a60
6501106d:	add    esp,0xc
65011070:	push   eax
65011071:	lea    ecx,[ebp-0x14]
65011074:	call   0x650067c0
65011079:	mov    eax,DWORD PTR [eax]
6501107b:	mov    ecx,DWORD PTR [eax-0xc]
6501107e:	push   ecx
6501107f:	push   eax
65011080:	mov    ecx,esi
65011082:	mov    BYTE PTR [ebp-0x4],0x10
65011086:	call   0x650029f0
6501108b:	mov    eax,DWORD PTR [ebp-0x14]
6501108e:	add    eax,0xfffffff0
65011091:	mov    BYTE PTR [ebp-0x4],0xf
65011095:	lea    edx,[eax+0xc]
65011098:	or     ecx,0xffffffff
6501109b:	lock xadd DWORD PTR [edx],ecx
6501109f:	dec    ecx
650110a0:	test   ecx,ecx
650110a2:	jg     0x650110ae
650110a4:	mov    ecx,DWORD PTR [eax]
650110a6:	mov    edx,DWORD PTR [ecx]
650110a8:	push   eax
650110a9:	mov    eax,DWORD PTR [edx+0x4]
650110ac:	call   eax
650110ae:	mov    edi,DWORD PTR [ebp-0x38]
650110b1:	test   edi,edi
650110b3:	je     0x650110d2
650110b5:	mov    ecx,DWORD PTR [ebp-0x34]
650110b8:	sub    ecx,edi
650110ba:	mov    eax,0x92492493
650110bf:	imul   ecx
650110c1:	add    edx,ecx
650110c3:	sar    edx,0x4
650110c6:	mov    eax,edx
650110c8:	shr    eax,0x1f
650110cb:	add    eax,edx
650110cd:	cmp    DWORD PTR [ebp-0x10],eax
650110d0:	jb     0x650110da
650110d2:	call   0x65012443
650110d7:	mov    edi,DWORD PTR [ebp-0x38]
650110da:	cmp    DWORD PTR [edi+ebx*1+0x18],0x10
650110df:	jb     0x650110e7
650110e1:	mov    edi,DWORD PTR [edi+ebx*1+0x4]
650110e5:	jmp    0x650110eb
650110e7:	lea    edi,[edi+ebx*1+0x4]
650110eb:	push   edi
650110ec:	mov    ecx,esi
650110ee:	call   0x65002670
650110f3:	add    DWORD PTR [ebp-0x10],0x1
650110f7:	add    ebx,0x1c
650110fa:	xor    edi,edi
650110fc:	jmp    0x65011030
65011101:	call   DWORD PTR ds:0x6502c06c
65011107:	push   0x110
6501110c:	lea    ecx,[ebp+0x4]
6501110f:	push   edi
65011110:	push   ecx
65011111:	mov    DWORD PTR [ebp-0x14],eax
65011114:	call   0x65012fb0
65011119:	mov    edx,DWORD PTR ds:0x6502d560
6501111f:	mov    eax,DWORD PTR [edx+0xc]
65011122:	add    esp,0xc
65011125:	mov    ecx,0x6502d560
6501112a:	mov    DWORD PTR [ebp+0x0],0x114
65011131:	call   eax
65011133:	add    eax,0x10
65011136:	mov    DWORD PTR [ebp-0x10],eax
65011139:	lea    ecx,[ebp+0x0]
6501113c:	push   ecx
6501113d:	mov    BYTE PTR [ebp-0x4],0x11
65011141:	call   DWORD PTR ds:0x65024060
65011147:	test   eax,eax
65011149:	je     0x65011176
6501114b:	mov    edx,DWORD PTR [ebp+0x8]
6501114e:	mov    eax,DWORD PTR [ebp+0x4]
65011151:	push   edx
65011152:	push   eax
65011153:	push   0x650246f8
65011158:	push   0x12
6501115a:	push   0x650246d0
6501115f:	call   0x65006d50
65011164:	add    esp,0xc
65011167:	push   eax
65011168:	lea    ecx,[ebp-0x10]
6501116b:	push   ecx
6501116c:	call   0x65001da0
65011171:	add    esp,0x10
65011174:	jmp    0x650111b2
65011176:	push   0x650246a8
6501117b:	push   0xc
6501117d:	push   0x6502468c
65011182:	call   0x65006d50
65011187:	add    esp,0xc
6501118a:	cmp    eax,edi
6501118c:	jne    0x65011192
6501118e:	xor    ecx,ecx
65011190:	jmp    0x650111a8
65011192:	mov    ecx,eax
65011194:	lea    edi,[ecx+0x2]
65011197:	mov    dx,WORD PTR [ecx]
6501119a:	add    ecx,0x2
6501119d:	test   dx,dx
650111a0:	jne    0x65011197
650111a2:	sub    ecx,edi
650111a4:	sar    ecx,1
650111a6:	xor    edi,edi
650111a8:	push   ecx
650111a9:	push   eax
650111aa:	lea    ecx,[ebp-0x10]
650111ad:	call   0x65002af0
650111b2:	xor    eax,eax
650111b4:	lea    edx,[ebp-0x8c]
650111ba:	push   edx
650111bb:	mov    DWORD PTR [ebp-0x8c],edi
650111c1:	mov    DWORD PTR [ebp-0x88],eax
650111c7:	mov    DWORD PTR [ebp-0x84],eax
650111cd:	mov    DWORD PTR [ebp-0x80],eax
650111d0:	mov    DWORD PTR [ebp-0x7c],eax
650111d3:	mov    DWORD PTR [ebp-0x78],eax
650111d6:	mov    DWORD PTR [ebp-0x74],eax
650111d9:	mov    DWORD PTR [ebp-0x70],eax
650111dc:	mov    DWORD PTR [ebp-0x6c],eax
650111df:	call   DWORD PTR ds:0x6502405c
650111e5:	movzx  eax,WORD PTR [ebp-0x8c]
650111ec:	cmp    eax,edi
650111ee:	je     0x65011223
650111f0:	cmp    eax,0x9
650111f3:	jne    0x6501125d
650111f5:	push   0x65024650
650111fa:	push   0x4
650111fc:	push   0x65024644
65011201:	call   0x65006d50
65011206:	add    esp,0xc
65011209:	cmp    eax,edi
6501120b:	jne    0x65011211
6501120d:	xor    ecx,ecx
6501120f:	jmp    0x65011253
65011211:	mov    ecx,eax
65011213:	lea    edi,[ecx+0x2]
65011216:	mov    dx,WORD PTR [ecx]
65011219:	add    ecx,0x2
6501121c:	test   dx,dx
6501121f:	jne    0x65011216
65011221:	jmp    0x6501124f
65011223:	push   0x6502460c
65011228:	push   0x4
6501122a:	push   0x65024600
6501122f:	call   0x65006d50
65011234:	add    esp,0xc
65011237:	cmp    eax,edi
65011239:	jne    0x6501123f
6501123b:	xor    ecx,ecx
6501123d:	jmp    0x65011253
6501123f:	mov    ecx,eax
65011241:	lea    edi,[ecx+0x2]
65011244:	mov    dx,WORD PTR [ecx]
65011247:	add    ecx,0x2
6501124a:	test   dx,dx
6501124d:	jne    0x65011244
6501124f:	sub    ecx,edi
65011251:	sar    ecx,1
65011253:	push   ecx
65011254:	push   eax
65011255:	lea    ecx,[ebp-0x10]
65011258:	call   0x650029f0
6501125d:	mov    edi,DWORD PTR [ebp-0x10]
65011260:	test   edi,edi
65011262:	jne    0x65011268
65011264:	xor    eax,eax
65011266:	jmp    0x650112b1
65011268:	push   edi
65011269:	call   DWORD PTR ds:0x65024048
6501126f:	add    eax,0x1
65011272:	cmp    eax,0x3fffffff
65011277:	jg     0x650112ac
65011279:	lea    ebx,[eax+eax*1]
6501127c:	mov    eax,ebx
6501127e:	call   0x65013030
65011283:	mov    edi,esp
65011285:	test   edi,edi
65011287:	je     0x650112ac
65011289:	mov    eax,DWORD PTR [ebp-0x10]
6501128c:	mov    ecx,DWORD PTR [ebp-0x14]
6501128f:	push   0x0
65011291:	push   0x0
65011293:	push   ebx
65011294:	push   edi
65011295:	push   0xffffffff
65011297:	push   eax
65011298:	push   0x0
6501129a:	push   ecx
6501129b:	mov    BYTE PTR [edi],0x0
6501129e:	call   DWORD PTR ds:0x65024020
650112a4:	neg    eax
650112a6:	sbb    eax,eax
650112a8:	and    eax,edi
650112aa:	jmp    0x650112ae
650112ac:	xor    eax,eax
650112ae:	mov    edi,DWORD PTR [ebp-0x10]
650112b1:	push   eax
650112b2:	mov    ecx,esi
650112b4:	call   0x65002670
650112b9:	lea    eax,[edi-0x10]
650112bc:	mov    BYTE PTR [ebp-0x4],0xf
650112c0:	lea    edx,[eax+0xc]
650112c3:	or     ecx,0xffffffff
650112c6:	lock xadd DWORD PTR [edx],ecx
650112ca:	dec    ecx
650112cb:	test   ecx,ecx
650112cd:	jg     0x650112d9
650112cf:	mov    ecx,DWORD PTR [eax]
650112d1:	mov    edx,DWORD PTR [ecx]
650112d3:	push   eax
650112d4:	mov    eax,DWORD PTR [edx+0x4]
650112d7:	call   eax
650112d9:	lea    ecx,[ebp-0x20]
650112dc:	push   ecx
650112dd:	call   0x6500ba40
650112e2:	push   eax
650112e3:	lea    edx,[ebp-0x10]
650112e6:	push   edx
650112e7:	mov    BYTE PTR [ebp-0x4],0x12
650112eb:	call   0x65003160
650112f0:	mov    edi,eax
650112f2:	push   0x650245cc
650112f7:	push   0x7
650112f9:	push   0x650245c4
650112fe:	mov    BYTE PTR [ebp-0x4],0x13
65011302:	call   0x65006a60
65011307:	add    esp,0x18
6501130a:	push   eax
6501130b:	lea    ecx,[ebp-0x18]
6501130e:	call   0x650067c0
65011313:	push   edi
65011314:	push   eax
65011315:	lea    eax,[ebp-0x14]
65011318:	mov    bl,0x14
6501131a:	push   eax
6501131b:	mov    BYTE PTR [ebp-0x4],bl
6501131e:	call   0x6500f990
65011323:	add    esp,0xc
65011326:	mov    eax,DWORD PTR [eax]
65011328:	mov    ecx,DWORD PTR [eax-0xc]
6501132b:	push   ecx
6501132c:	push   eax
6501132d:	mov    ecx,esi
6501132f:	mov    BYTE PTR [ebp-0x4],0x15
65011333:	call   0x650029f0
65011338:	mov    eax,DWORD PTR [ebp-0x14]
6501133b:	add    eax,0xfffffff0
6501133e:	mov    BYTE PTR [ebp-0x4],bl
65011341:	lea    ecx,[eax+0xc]
65011344:	or     edx,0xffffffff
65011347:	lock xadd DWORD PTR [ecx],edx
6501134b:	dec    edx
6501134c:	test   edx,edx
6501134e:	jg     0x6501135a
65011350:	mov    ecx,DWORD PTR [eax]
65011352:	mov    edx,DWORD PTR [ecx]
65011354:	push   eax
65011355:	mov    eax,DWORD PTR [edx+0x4]
65011358:	call   eax
6501135a:	mov    eax,DWORD PTR [ebp-0x18]
6501135d:	add    eax,0xfffffff0
65011360:	mov    BYTE PTR [ebp-0x4],0x13
65011364:	lea    ecx,[eax+0xc]
65011367:	or     edx,0xffffffff
6501136a:	lock xadd DWORD PTR [ecx],edx
6501136e:	dec    edx
6501136f:	test   edx,edx
65011371:	jg     0x6501137d
65011373:	mov    ecx,DWORD PTR [eax]
65011375:	mov    edx,DWORD PTR [ecx]
65011377:	push   eax
65011378:	mov    eax,DWORD PTR [edx+0x4]
6501137b:	call   eax
6501137d:	mov    eax,DWORD PTR [ebp-0x10]
65011380:	add    eax,0xfffffff0
65011383:	mov    BYTE PTR [ebp-0x4],0x12
65011387:	lea    ecx,[eax+0xc]
6501138a:	or     edx,0xffffffff
6501138d:	lock xadd DWORD PTR [ecx],edx
65011391:	dec    edx
65011392:	test   edx,edx
65011394:	jg     0x650113a0
65011396:	mov    ecx,DWORD PTR [eax]
65011398:	mov    edx,DWORD PTR [ecx]
6501139a:	push   eax
6501139b:	mov    eax,DWORD PTR [edx+0x4]
6501139e:	call   eax
650113a0:	mov    eax,DWORD PTR [ebp-0x20]
650113a3:	add    eax,0xfffffff0
650113a6:	mov    BYTE PTR [ebp-0x4],0xf
650113aa:	lea    ecx,[eax+0xc]
650113ad:	or     edx,0xffffffff
650113b0:	lock xadd DWORD PTR [ecx],edx
650113b4:	dec    edx
650113b5:	test   edx,edx
650113b7:	jg     0x650113c3
650113b9:	mov    ecx,DWORD PTR [eax]
650113bb:	mov    edx,DWORD PTR [ecx]
650113bd:	push   eax
650113be:	mov    eax,DWORD PTR [edx+0x4]
650113c1:	call   eax
650113c3:	call   DWORD PTR ds:0x6502c06c
650113c9:	mov    edx,DWORD PTR ds:0x6502d560
650113cf:	mov    DWORD PTR [ebp-0x14],eax
650113d2:	mov    eax,DWORD PTR [edx+0xc]
650113d5:	mov    ecx,0x6502d560
650113da:	call   eax
650113dc:	add    eax,0x10
650113df:	mov    DWORD PTR [ebp-0x10],eax
650113e2:	mov    BYTE PTR [ebp-0x4],0x16
650113e6:	call   0x65003810
650113eb:	push   eax
650113ec:	push   0x650245a0
650113f1:	push   0x4
650113f3:	push   0x65024594
650113f8:	call   0x65006d50
650113fd:	add    esp,0xc
65011400:	push   eax
65011401:	lea    ecx,[ebp-0x10]
65011404:	push   ecx
65011405:	call   0x65001da0
6501140a:	mov    ebx,DWORD PTR [ebp-0x10]
6501140d:	mov    eax,DWORD PTR [ebx-0x8]
65011410:	mov    ecx,0x1
65011415:	sub    ecx,DWORD PTR [ebx-0x4]
65011418:	add    eax,0x1
6501141b:	add    esp,0xc
6501141e:	or     eax,ecx
65011420:	jge    0x6501142f
65011422:	push   0xffffffff
65011424:	lea    ecx,[ebp-0x10]
65011427:	call   0x65001e60
6501142c:	mov    ebx,DWORD PTR [ebp-0x10]
6501142f:	test   ebx,ebx
65011431:	je     0x65011477
65011433:	push   ebx
65011434:	call   DWORD PTR ds:0x65024048
6501143a:	add    eax,0x1
6501143d:	cmp    eax,0x3fffffff
65011442:	jg     0x65011477
65011444:	add    eax,eax
65011446:	mov    DWORD PTR [ebp-0x20],eax
65011449:	call   0x65013030
6501144e:	mov    edi,esp
65011450:	test   edi,edi
65011452:	je     0x65011477
65011454:	mov    edx,DWORD PTR [ebp-0x20]
65011457:	mov    eax,DWORD PTR [ebp-0x14]
6501145a:	push   0x0
6501145c:	push   0x0
6501145e:	push   edx
6501145f:	push   edi
65011460:	push   0xffffffff
65011462:	push   ebx
65011463:	push   0x0
65011465:	push   eax
65011466:	mov    BYTE PTR [edi],0x0
65011469:	call   DWORD PTR ds:0x65024020
6501146f:	neg    eax
65011471:	sbb    eax,eax
65011473:	and    eax,edi
65011475:	jmp    0x65011479
65011477:	xor    eax,eax
65011479:	push   eax
6501147a:	lea    ecx,[ebp-0x1c]
6501147d:	call   0x650067c0
65011482:	mov    edi,eax
65011484:	push   0x65024568
65011489:	push   0x5
6501148b:	push   0x65024560
65011490:	mov    BYTE PTR [ebp-0x4],0x17
65011494:	call   0x65006a60
65011499:	add    esp,0xc
6501149c:	push   eax
6501149d:	lea    ecx,[ebp-0x2c]
650114a0:	call   0x650067c0
650114a5:	push   edi
650114a6:	push   eax
650114a7:	lea    ecx,[ebp-0x18]
650114aa:	push   ecx
650114ab:	mov    BYTE PTR [ebp-0x4],0x18
650114af:	call   0x6500f990
650114b4:	add    esp,0xc
650114b7:	mov    eax,DWORD PTR [eax]
650114b9:	mov    ecx,DWORD PTR [eax-0xc]
650114bc:	push   ecx
650114bd:	push   eax
650114be:	mov    ecx,esi
650114c0:	mov    BYTE PTR [ebp-0x4],0x19
650114c4:	call   0x650029f0
650114c9:	mov    eax,DWORD PTR [ebp-0x18]
650114cc:	add    eax,0xfffffff0
650114cf:	mov    BYTE PTR [ebp-0x4],0x18
650114d3:	lea    edx,[eax+0xc]
650114d6:	or     ecx,0xffffffff
650114d9:	lock xadd DWORD PTR [edx],ecx
650114dd:	dec    ecx
650114de:	test   ecx,ecx
650114e0:	jg     0x650114ec
650114e2:	mov    ecx,DWORD PTR [eax]
650114e4:	mov    edx,DWORD PTR [ecx]
650114e6:	push   eax
650114e7:	mov    eax,DWORD PTR [edx+0x4]
650114ea:	call   eax
650114ec:	mov    eax,DWORD PTR [ebp-0x2c]
650114ef:	add    eax,0xfffffff0
650114f2:	mov    BYTE PTR [ebp-0x4],0x17
650114f6:	lea    ecx,[eax+0xc]
650114f9:	or     edx,0xffffffff
650114fc:	lock xadd DWORD PTR [ecx],edx
65011500:	dec    edx
65011501:	test   edx,edx
65011503:	jg     0x6501150f
65011505:	mov    ecx,DWORD PTR [eax]
65011507:	mov    edx,DWORD PTR [ecx]
65011509:	push   eax
6501150a:	mov    eax,DWORD PTR [edx+0x4]
6501150d:	call   eax
6501150f:	mov    eax,DWORD PTR [ebp-0x1c]
65011512:	add    eax,0xfffffff0
65011515:	mov    BYTE PTR [ebp-0x4],0x16
65011519:	lea    ecx,[eax+0xc]
6501151c:	or     edx,0xffffffff
6501151f:	lock xadd DWORD PTR [ecx],edx
65011523:	dec    edx
65011524:	test   edx,edx
65011526:	jg     0x65011532
65011528:	mov    ecx,DWORD PTR [eax]
6501152a:	mov    edx,DWORD PTR [ecx]
6501152c:	push   eax
6501152d:	mov    eax,DWORD PTR [edx+0x4]
65011530:	call   eax
65011532:	add    ebx,0xfffffff0
65011535:	mov    BYTE PTR [ebp-0x4],0xf
65011539:	lea    ecx,[ebx+0xc]
6501153c:	or     edx,0xffffffff
6501153f:	lock xadd DWORD PTR [ecx],edx
65011543:	dec    edx
65011544:	test   edx,edx
65011546:	jg     0x65011552
65011548:	mov    ecx,DWORD PTR [ebx]
6501154a:	mov    eax,DWORD PTR [ecx]
6501154c:	mov    edx,DWORD PTR [eax+0x4]
6501154f:	push   ebx
65011550:	call   edx
65011552:	lea    eax,[ebp-0x9c]
65011558:	push   eax
65011559:	call   0x650039e0
6501155e:	mov    ecx,DWORD PTR [eax]
65011560:	mov    DWORD PTR [ebp-0x68],ecx
65011563:	mov    edx,DWORD PTR [eax+0x4]
65011566:	mov    DWORD PTR [ebp-0x64],edx
65011569:	mov    ecx,DWORD PTR [eax+0x8]
6501156c:	push   0x65024538
65011571:	mov    DWORD PTR [ebp-0x60],ecx
65011574:	mov    edx,DWORD PTR [eax+0xc]
65011577:	push   0x5
65011579:	push   0x65024530
6501157e:	mov    DWORD PTR [ebp-0x5c],edx
65011581:	call   0x65006a60
65011586:	add    esp,0x10
65011589:	push   eax
6501158a:	lea    ecx,[ebp-0x10]
6501158d:	call   0x650067c0
65011592:	lea    eax,[ebp-0x68]
65011595:	push   eax
65011596:	lea    ecx,[ebp-0x2c]
65011599:	push   ecx
6501159a:	mov    BYTE PTR [ebp-0x4],0x1a
6501159e:	call   0x65002ec0
650115a3:	push   eax
650115a4:	lea    edx,[ebp-0x10]
650115a7:	push   edx
650115a8:	lea    eax,[ebp-0x1c]
650115ab:	mov    bl,0x1b
650115ad:	push   eax
650115ae:	mov    BYTE PTR [ebp-0x4],bl
650115b1:	call   0x6500f990
650115b6:	add    esp,0x14
650115b9:	mov    eax,DWORD PTR [eax]
650115bb:	mov    ecx,DWORD PTR [eax-0xc]
650115be:	push   ecx
650115bf:	push   eax
650115c0:	mov    ecx,esi
650115c2:	mov    BYTE PTR [ebp-0x4],0x1c
650115c6:	call   0x650029f0
650115cb:	mov    eax,DWORD PTR [ebp-0x1c]
650115ce:	add    eax,0xfffffff0
650115d1:	mov    BYTE PTR [ebp-0x4],bl
650115d4:	lea    ecx,[eax+0xc]
650115d7:	or     edx,0xffffffff
650115da:	lock xadd DWORD PTR [ecx],edx
650115de:	dec    edx
650115df:	test   edx,edx
650115e1:	jg     0x650115ed
650115e3:	mov    ecx,DWORD PTR [eax]
650115e5:	mov    edx,DWORD PTR [ecx]
650115e7:	push   eax
650115e8:	mov    eax,DWORD PTR [edx+0x4]
650115eb:	call   eax
650115ed:	mov    eax,DWORD PTR [ebp-0x2c]
650115f0:	add    eax,0xfffffff0
650115f3:	mov    BYTE PTR [ebp-0x4],0x1a
650115f7:	lea    ecx,[eax+0xc]
650115fa:	or     edx,0xffffffff
650115fd:	lock xadd DWORD PTR [ecx],edx
65011601:	dec    edx
65011602:	test   edx,edx
65011604:	jg     0x65011610
65011606:	mov    ecx,DWORD PTR [eax]
65011608:	mov    edx,DWORD PTR [ecx]
6501160a:	push   eax
6501160b:	mov    eax,DWORD PTR [edx+0x4]
6501160e:	call   eax
65011610:	mov    eax,DWORD PTR [ebp-0x10]
65011613:	add    eax,0xfffffff0
65011616:	mov    BYTE PTR [ebp-0x4],0xf
6501161a:	lea    ecx,[eax+0xc]
6501161d:	or     edx,0xffffffff
65011620:	lock xadd DWORD PTR [ecx],edx
65011624:	dec    edx
65011625:	test   edx,edx
65011627:	jg     0x65011633
65011629:	mov    ecx,DWORD PTR [eax]
6501162b:	mov    edx,DWORD PTR [ecx]
6501162d:	push   eax
6501162e:	mov    eax,DWORD PTR [edx+0x4]
65011631:	call   eax
65011633:	lea    ecx,[ebp-0x1c]
65011636:	push   0x1
65011638:	push   ecx
65011639:	call   0x650062f0
6501163e:	add    esp,0x8
65011641:	mov    eax,DWORD PTR [eax]
65011643:	mov    ecx,DWORD PTR [eax-0xc]
65011646:	push   ecx
65011647:	push   eax
65011648:	mov    ecx,esi
6501164a:	mov    BYTE PTR [ebp-0x4],0x1d
6501164e:	call   0x650029f0
65011653:	mov    eax,DWORD PTR [ebp-0x1c]
65011656:	add    eax,0xfffffff0
65011659:	mov    BYTE PTR [ebp-0x4],0xf
6501165d:	lea    edx,[eax+0xc]
65011660:	or     ecx,0xffffffff
65011663:	lock xadd DWORD PTR [edx],ecx
65011667:	dec    ecx
65011668:	test   ecx,ecx
6501166a:	jg     0x65011676
6501166c:	mov    ecx,DWORD PTR [eax]
6501166e:	mov    edx,DWORD PTR [ecx]
65011670:	push   eax
65011671:	mov    eax,DWORD PTR [edx+0x4]
65011674:	call   eax
65011676:	mov    eax,DWORD PTR [ebp-0x38]
65011679:	xor    edi,edi
6501167b:	cmp    eax,edi
6501167d:	je     0x6501169d
6501167f:	mov    ecx,DWORD PTR [ebp-0x58]
65011682:	push   ecx
65011683:	mov    ecx,DWORD PTR [ebp-0x34]
65011686:	lea    edx,[ebp-0x3c]
65011689:	push   edx
6501168a:	push   ecx
6501168b:	push   eax
6501168c:	call   0x6500c320
65011691:	mov    edx,DWORD PTR [ebp-0x38]
65011694:	push   edx
65011695:	call   0x650120d2
6501169a:	add    esp,0x14
6501169d:	mov    eax,DWORD PTR [ebp-0x24]
650116a0:	add    eax,0xfffffff0
650116a3:	mov    DWORD PTR [ebp-0x38],edi
650116a6:	mov    DWORD PTR [ebp-0x34],edi
650116a9:	mov    DWORD PTR [ebp-0x30],edi
650116ac:	mov    BYTE PTR [ebp-0x4],0x6
650116b0:	lea    ecx,[eax+0xc]
650116b3:	or     edx,0xffffffff
650116b6:	lock xadd DWORD PTR [ecx],edx
650116ba:	dec    edx
650116bb:	test   edx,edx
650116bd:	jg     0x650116c9
650116bf:	mov    ecx,DWORD PTR [eax]
650116c1:	mov    edx,DWORD PTR [ecx]
650116c3:	push   eax
650116c4:	mov    eax,DWORD PTR [edx+0x4]
650116c7:	call   eax
650116c9:	mov    eax,DWORD PTR [ebp-0x48]
650116cc:	add    eax,0xfffffff0
650116cf:	mov    BYTE PTR [ebp-0x4],0x5
650116d3:	lea    ecx,[eax+0xc]
650116d6:	or     edx,0xffffffff
650116d9:	lock xadd DWORD PTR [ecx],edx
650116dd:	dec    edx
650116de:	test   edx,edx
650116e0:	jg     0x650116ec
650116e2:	mov    ecx,DWORD PTR [eax]
650116e4:	mov    edx,DWORD PTR [ecx]
650116e6:	push   eax
650116e7:	mov    eax,DWORD PTR [edx+0x4]
650116ea:	call   eax
650116ec:	mov    eax,DWORD PTR [ebp-0x28]
650116ef:	add    eax,0xfffffff0
650116f2:	mov    BYTE PTR [ebp-0x4],0x2
650116f6:	lea    ecx,[eax+0xc]
650116f9:	or     edx,0xffffffff
650116fc:	lock xadd DWORD PTR [ecx],edx
65011700:	dec    edx
65011701:	test   edx,edx
65011703:	jg     0x6501170f
65011705:	mov    ecx,DWORD PTR [eax]
65011707:	mov    edx,DWORD PTR [ecx]
65011709:	push   eax
6501170a:	mov    eax,DWORD PTR [edx+0x4]
6501170d:	call   eax
6501170f:	mov    eax,DWORD PTR [ebp-0x54]
65011712:	add    eax,0xfffffff0
65011715:	mov    BYTE PTR [ebp-0x4],0x1
65011719:	lea    ecx,[eax+0xc]
6501171c:	or     edx,0xffffffff
6501171f:	lock xadd DWORD PTR [ecx],edx
65011723:	dec    edx
65011724:	test   edx,edx
65011726:	jg     0x65011732
65011728:	mov    ecx,DWORD PTR [eax]
6501172a:	mov    edx,DWORD PTR [ecx]
6501172c:	push   eax
6501172d:	mov    eax,DWORD PTR [edx+0x4]
65011730:	call   eax
65011732:	mov    eax,DWORD PTR [ebp-0x4c]
65011735:	add    eax,0xfffffff0
65011738:	mov    BYTE PTR [ebp-0x4],0x0
6501173c:	lea    ecx,[eax+0xc]
6501173f:	or     edx,0xffffffff
65011742:	lock xadd DWORD PTR [ecx],edx
65011746:	dec    edx
65011747:	test   edx,edx
65011749:	jg     0x65011755
6501174b:	mov    ecx,DWORD PTR [eax]
6501174d:	mov    edx,DWORD PTR [ecx]
6501174f:	push   eax
65011750:	mov    eax,DWORD PTR [edx+0x4]
65011753:	call   eax
65011755:	mov    eax,esi
65011757:	lea    esp,[ebp-0xac]
6501175d:	mov    ecx,DWORD PTR [ebp-0xc]
65011760:	mov    DWORD PTR fs:0x0,ecx
65011767:	pop    ecx
65011768:	pop    edi
65011769:	pop    esi
6501176a:	pop    ebx
6501176b:	mov    ecx,DWORD PTR [ebp+0x124]
65011771:	xor    ecx,ebp
65011773:	call   0x6501292c
65011778:	add    ebp,0x128
6501177e:	mov    esp,ebp
65011780:	pop    ebp
65011781:	ret    
65011782:	int3   
65011783:	int3   
65011784:	int3   
65011785:	int3   
65011786:	int3   
65011787:	int3   
65011788:	int3   
65011789:	int3   
6501178a:	int3   
6501178b:	int3   
6501178c:	int3   
6501178d:	int3   
6501178e:	int3   
6501178f:	int3   
65011790:	push   ebp
65011791:	mov    ebp,esp
65011793:	push   0xffffffff
65011795:	push   0x650221d8
6501179a:	mov    eax,fs:0x0
650117a0:	push   eax
650117a1:	sub    esp,0x50
650117a4:	mov    eax,ds:0x6502c09c
650117a9:	xor    eax,ebp
650117ab:	mov    DWORD PTR [ebp-0x10],eax
650117ae:	push   ebx
650117af:	push   esi
650117b0:	push   edi
650117b1:	push   eax
650117b2:	lea    eax,[ebp-0xc]
650117b5:	mov    fs:0x0,eax
650117bb:	call   DWORD PTR ds:0x6502c06c
650117c1:	push   0xea60
650117c6:	mov    DWORD PTR [ebp-0x3c],eax
650117c9:	call   0x6500f710
650117ce:	add    esp,0x4
650117d1:	mov    DWORD PTR [ebp-0x34],0x0
650117d8:	lea    eax,[ebp-0x30]
650117db:	push   eax
650117dc:	call   0x65010b60
650117e1:	add    esp,0x4
650117e4:	xor    esi,esi
650117e6:	mov    DWORD PTR [ebp-0x4],esi
650117e9:	mov    DWORD PTR [ebp-0x14],0xf
650117f0:	mov    DWORD PTR [ebp-0x18],esi
650117f3:	mov    BYTE PTR [ebp-0x28],0x0
650117f7:	mov    eax,DWORD PTR [ebp-0x30]
650117fa:	cmp    eax,esi
650117fc:	mov    BYTE PTR [ebp-0x4],0x1
65011800:	mov    ebx,eax
65011802:	jne    0x65011808
65011804:	xor    ecx,ecx
65011806:	jmp    0x6501184f
65011808:	push   eax
65011809:	call   DWORD PTR ds:0x65024048
6501180f:	add    eax,0x1
65011812:	cmp    eax,0x3fffffff
65011817:	jg     0x65011849
65011819:	lea    edi,[eax+eax*1]
6501181c:	mov    eax,edi
6501181e:	call   0x65013030
65011823:	mov    esi,esp
65011825:	test   esi,esi
65011827:	je     0x65011849
65011829:	mov    ecx,DWORD PTR [ebp-0x3c]
6501182c:	push   0x0
6501182e:	push   0x0
65011830:	push   edi
65011831:	push   esi
65011832:	push   0xffffffff
65011834:	push   ebx
65011835:	push   0x0
65011837:	push   ecx
65011838:	mov    BYTE PTR [esi],0x0
6501183b:	call   DWORD PTR ds:0x65024020
65011841:	neg    eax
65011843:	sbb    eax,eax
65011845:	and    eax,esi
65011847:	jmp    0x6501184b
65011849:	xor    eax,eax
6501184b:	mov    ecx,eax
6501184d:	xor    esi,esi
6501184f:	mov    eax,ecx
65011851:	mov    DWORD PTR [ebp-0x48],esi
65011854:	mov    DWORD PTR [ebp-0x44],0xf
6501185b:	mov    BYTE PTR [ebp-0x58],0x0
6501185f:	lea    esi,[eax+0x1]
65011862:	mov    dl,BYTE PTR [eax]
65011864:	add    eax,0x1
65011867:	test   dl,dl
65011869:	jne    0x65011862
6501186b:	sub    eax,esi
6501186d:	push   eax
6501186e:	push   ecx
6501186f:	lea    ecx,[ebp-0x5c]
65011872:	call   0x650018c0
65011877:	lea    edx,[ebp-0x2c]
6501187a:	push   edx
6501187b:	lea    eax,[ebp-0x5c]
6501187e:	push   eax
6501187f:	mov    BYTE PTR [ebp-0x4],0x2
65011883:	call   0x650108b0
65011888:	mov    edi,0x10
6501188d:	add    esp,0x8
65011890:	cmp    DWORD PTR [ebp-0x44],edi
65011893:	mov    bl,al
65011895:	mov    BYTE PTR [ebp-0x4],0x1
65011899:	jb     0x650118a7
6501189b:	mov    ecx,DWORD PTR [ebp-0x58]
6501189e:	push   ecx
6501189f:	call   0x650120d2
650118a4:	add    esp,0x4
650118a7:	test   bl,bl
650118a9:	jne    0x6501193c
650118af:	xor    ebx,ebx
650118b1:	xor    esi,esi
650118b3:	lea    edx,[ebp-0x38]
650118b6:	push   ebx
650118b7:	push   edx
650118b8:	mov    DWORD PTR [ebp-0x38],ebx
650118bb:	call   0x6500e4e0
650118c0:	call   eax
650118c2:	test   eax,eax
650118c4:	je     0x650118d4
650118c6:	add    esi,0x3e8
650118cc:	cmp    esi,0x493e0
650118d2:	ja     0x650118e1
650118d4:	push   0x3e8
650118d9:	call   DWORD PTR ds:0x65024044
650118df:	jmp    0x650118b3
650118e1:	cmp    DWORD PTR [ebp-0x14],edi
650118e4:	jb     0x650118f2
650118e6:	mov    eax,DWORD PTR [ebp-0x28]
650118e9:	push   eax
650118ea:	call   0x650120d2
650118ef:	add    esp,0x4
650118f2:	mov    eax,DWORD PTR [ebp-0x30]
650118f5:	add    eax,0xfffffff0
650118f8:	mov    DWORD PTR [ebp-0x14],0xf
650118ff:	mov    DWORD PTR [ebp-0x18],ebx
65011902:	mov    BYTE PTR [ebp-0x28],0x0
65011906:	mov    DWORD PTR [ebp-0x4],0xffffffff
6501190d:	lea    ecx,[eax+0xc]
65011910:	or     edx,0xffffffff
65011913:	lock xadd DWORD PTR [ecx],edx
65011917:	dec    edx
65011918:	test   edx,edx
6501191a:	jg     0x65011926
6501191c:	mov    ecx,DWORD PTR [eax]
6501191e:	mov    edx,DWORD PTR [ecx]
65011920:	push   eax
65011921:	mov    eax,DWORD PTR [edx+0x4]
65011924:	call   eax
65011926:	mov    eax,DWORD PTR [ebp-0x34]
65011929:	add    eax,0x1
6501192c:	cmp    eax,0x3
6501192f:	mov    DWORD PTR [ebp-0x34],eax
65011932:	jne    0x650117d8
65011938:	xor    ebx,ebx
6501193a:	jmp    0x65011994
6501193c:	xor    ebx,ebx
6501193e:	cmp    DWORD PTR [ebp-0x18],ebx
65011941:	je     0x6501194f
65011943:	lea    ecx,[ebp-0x2c]
65011946:	push   ecx
65011947:	call   0x65010240
6501194c:	add    esp,0x4
6501194f:	cmp    DWORD PTR [ebp-0x14],edi
65011952:	jb     0x65011960
65011954:	mov    edx,DWORD PTR [ebp-0x28]
65011957:	push   edx
65011958:	call   0x650120d2
6501195d:	add    esp,0x4
65011960:	mov    eax,DWORD PTR [ebp-0x30]
65011963:	add    eax,0xfffffff0
65011966:	mov    DWORD PTR [ebp-0x14],0xf
6501196d:	mov    DWORD PTR [ebp-0x18],ebx
65011970:	mov    BYTE PTR [ebp-0x28],0x0
65011974:	mov    DWORD PTR [ebp-0x4],0xffffffff
6501197b:	lea    ecx,[eax+0xc]
6501197e:	or     edx,0xffffffff
65011981:	lock xadd DWORD PTR [ecx],edx
65011985:	dec    edx
65011986:	test   edx,edx
65011988:	jg     0x65011994
6501198a:	mov    ecx,DWORD PTR [eax]
6501198c:	mov    edx,DWORD PTR [ecx]
6501198e:	push   eax
6501198f:	mov    eax,DWORD PTR [edx+0x4]
65011992:	call   eax
65011994:	xor    esi,esi
65011996:	lea    ecx,[ebp-0x40]
65011999:	push   ebx
6501199a:	push   ecx
6501199b:	mov    DWORD PTR [ebp-0x40],ebx
6501199e:	call   0x6500e4e0
650119a3:	call   eax
650119a5:	test   eax,eax
650119a7:	je     0x650119bb
650119a9:	add    esi,0x3e8
650119af:	cmp    esi,0x12e1fc0
650119b5:	ja     0x650117d1
650119bb:	push   0x3e8
650119c0:	call   DWORD PTR ds:0x65024044
650119c6:	jmp    0x65011996
650119c8:	int3   
650119c9:	int3   
650119ca:	int3   
650119cb:	int3   
650119cc:	int3   
650119cd:	int3   
650119ce:	int3   
650119cf:	int3   
650119d0:	sub    esp,0x20c
650119d6:	mov    eax,ds:0x6502c09c
650119db:	xor    eax,esp
650119dd:	mov    DWORD PTR [esp+0x208],eax
650119e4:	push   0x208
650119e9:	lea    eax,[esp+0x4]
650119ed:	push   eax
650119ee:	push   0x0
650119f0:	call   DWORD PTR ds:0x65024068
650119f6:	test   eax,eax
650119f8:	je     0x65011a54
650119fa:	lea    ecx,[esp]
650119fd:	push   0x104
65011a02:	push   ecx
65011a03:	call   0x65012f97
65011a08:	push   0x6502498c
65011a0d:	push   0xb
65011a0f:	push   0x65024974
65011a14:	call   0x65006d50
65011a19:	push   eax
65011a1a:	lea    edx,[esp+0x18]
65011a1e:	push   edx
65011a1f:	call   0x65012a71
65011a24:	add    esp,0x1c
65011a27:	test   eax,eax
65011a29:	je     0x65011a54
65011a2b:	call   0x650109a0
65011a30:	test   al,al
65011a32:	je     0x65011a54
65011a34:	push   0x0
65011a36:	push   0x0
65011a38:	push   0x0
65011a3a:	push   0x65011790
65011a3f:	push   0x0
65011a41:	push   0x0
65011a43:	call   DWORD PTR ds:0x65024064
65011a49:	test   eax,eax
65011a4b:	je     0x65011a54
65011a4d:	push   eax
65011a4e:	call   DWORD PTR ds:0x65024038
65011a54:	mov    ecx,DWORD PTR [esp+0x208]
65011a5b:	xor    ecx,esp
65011a5d:	xor    eax,eax
65011a5f:	call   0x6501292c
65011a64:	add    esp,0x20c
65011a6a:	ret    0x4
65011a6d:	int3   
65011a6e:	int3   
65011a6f:	int3   
65011a70:	push   0x0
65011a72:	push   0x0
65011a74:	push   0x0
65011a76:	push   0x650119d0
65011a7b:	push   0x0
65011a7d:	push   0x0
65011a7f:	call   DWORD PTR ds:0x65024064
65011a85:	ret    
65011a86:	push   ebp
65011a87:	mov    ebp,esp
65011a89:	sub    esp,0xc
65011a8c:	mov    eax,ds:0x6502c09c
65011a91:	xor    eax,ebp
65011a93:	mov    DWORD PTR [ebp-0x4],eax
65011a96:	push   esi
65011a97:	xor    esi,esi
65011a99:	call   DWORD PTR ds:0x650240dc
65011a9f:	push   0x7
65011aa1:	lea    ecx,[ebp-0xc]
65011aa4:	push   ecx
65011aa5:	push   0x1004
65011aaa:	push   eax
65011aab:	call   DWORD PTR ds:0x650240d8
65011ab1:	test   eax,eax
65011ab3:	je     0x65011ad4
65011ab5:	mov    cl,BYTE PTR [ebp-0xc]
65011ab8:	test   cl,cl
65011aba:	lea    eax,[ebp-0xc]
65011abd:	je     0x65011ad4
65011abf:	imul   esi,esi,0xa
65011ac2:	movsx  ecx,cl
65011ac5:	inc    eax
65011ac6:	lea    esi,[esi+ecx*1-0x30]
65011aca:	mov    cl,BYTE PTR [eax]
65011acc:	test   cl,cl
65011ace:	jne    0x65011abf
65011ad0:	test   esi,esi
65011ad2:	jne    0x65011adc
65011ad4:	call   DWORD PTR ds:0x650240d4
65011ada:	mov    esi,eax
65011adc:	mov    ecx,DWORD PTR [ebp-0x4]
65011adf:	mov    eax,esi
65011ae1:	xor    ecx,ebp
65011ae3:	pop    esi
65011ae4:	call   0x6501292c
65011ae9:	leave  
65011aea:	ret    
65011aeb:	push   0x3
65011aed:	pop    eax
65011aee:	ret    
65011aef:	push   ebp
65011af0:	mov    ebp,esp
65011af2:	sub    esp,0x98
65011af8:	mov    eax,ds:0x6502c09c
65011afd:	xor    eax,ebp
65011aff:	mov    DWORD PTR [ebp-0x4],eax
65011b02:	lea    eax,[ebp-0x98]
65011b08:	push   eax
65011b09:	mov    DWORD PTR [ebp-0x98],0x94
65011b13:	call   DWORD PTR ds:0x650240e0
65011b19:	cmp    DWORD PTR [ebp-0x88],0x2
65011b20:	jne    0x65011b30
65011b22:	cmp    DWORD PTR [ebp-0x94],0x5
65011b29:	mov    eax,0x65011aeb
65011b2e:	jae    0x65011b35
65011b30:	mov    eax,0x65011a86
65011b35:	push   eax
65011b36:	push   0x6502c06c
65011b3b:	call   DWORD PTR ds:0x650240d0
65011b41:	call   DWORD PTR ds:0x6502c06c
65011b47:	mov    ecx,DWORD PTR [ebp-0x4]
65011b4a:	xor    ecx,ebp
65011b4c:	call   0x6501292c
65011b51:	leave  
65011b52:	ret    
65011b53:	push   esi
65011b54:	push   0x18
65011b56:	mov    esi,ecx
65011b58:	push   0x0
65011b5a:	push   esi
65011b5b:	call   0x65012fb0
65011b60:	add    esp,0xc
65011b63:	mov    eax,esi
65011b65:	pop    esi
65011b66:	ret    
65011b67:	push   0xc
65011b69:	push   0x65029990
65011b6e:	call   0x65013e70
65011b73:	and    DWORD PTR [ebp-0x4],0x0
65011b77:	push   ecx
65011b78:	call   DWORD PTR ds:0x65024014
65011b7e:	and    DWORD PTR [ebp-0x1c],0x0
65011b82:	jmp    0x65011ba2
65011b84:	mov    eax,DWORD PTR [ebp-0x14]
65011b87:	mov    eax,DWORD PTR [eax]
65011b89:	mov    eax,DWORD PTR [eax]
65011b8b:	xor    ecx,ecx
65011b8d:	cmp    eax,0xc0000017
65011b92:	sete   cl
65011b95:	mov    eax,ecx
65011b97:	ret    
65011b98:	mov    esp,DWORD PTR [ebp-0x18]
65011b9b:	mov    DWORD PTR [ebp-0x1c],0x8007000e
65011ba2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65011ba9:	mov    eax,DWORD PTR [ebp-0x1c]
65011bac:	call   0x65013eb5
65011bb1:	ret    
65011bb2:	mov    eax,DWORD PTR [esp+0x4]
65011bb6:	test   eax,eax
65011bb8:	jne    0x65011bc1
65011bba:	mov    eax,0x80070057
65011bbf:	jmp    0x65011bd2
65011bc1:	cmp    DWORD PTR [eax],0x2c
65011bc4:	jne    0x65011bba
65011bc6:	and    DWORD PTR [eax+0x1c],0x0
65011bca:	lea    ecx,[eax+0x4]
65011bcd:	call   0x65011b67
65011bd2:	ret    0x4
65011bd5:	push   esi
65011bd6:	mov    esi,ecx
65011bd8:	mov    eax,DWORD PTR [esi]
65011bda:	test   eax,eax
65011bdc:	je     0x65011be8
65011bde:	push   eax
65011bdf:	call   0x65013746
65011be4:	and    DWORD PTR [esi],0x0
65011be7:	pop    ecx
65011be8:	and    DWORD PTR [esi+0x4],0x0
65011bec:	and    DWORD PTR [esi+0x8],0x0
65011bf0:	pop    esi
65011bf1:	ret    
65011bf2:	mov    eax,DWORD PTR [esp+0x4]
65011bf6:	test   eax,eax
65011bf8:	jl     0x65011c07
65011bfa:	cmp    eax,DWORD PTR [ecx+0x4]
65011bfd:	jge    0x65011c07
65011bff:	mov    ecx,DWORD PTR [ecx]
65011c01:	lea    eax,[ecx+eax*2]
65011c04:	ret    0x4
65011c07:	push   0x0
65011c09:	push   0x0
65011c0b:	push   0x1
65011c0d:	push   0xc000008c
65011c12:	call   DWORD PTR ds:0x650240e4
65011c18:	int3   
65011c19:	mov    eax,DWORD PTR [esp+0x4]
65011c1d:	test   eax,eax
65011c1f:	jl     0x65011c2e
65011c21:	cmp    eax,DWORD PTR [ecx+0x4]
65011c24:	jge    0x65011c2e
65011c26:	mov    ecx,DWORD PTR [ecx]
65011c28:	lea    eax,[ecx+eax*4]
65011c2b:	ret    0x4
65011c2e:	push   0x0
65011c30:	push   0x0
65011c32:	push   0x1
65011c34:	push   0xc000008c
65011c39:	call   DWORD PTR ds:0x650240e4
65011c3f:	int3   
65011c40:	push   esi
65011c41:	mov    esi,ecx
65011c43:	lea    ecx,[esi+0x4]
65011c46:	call   0x65011b53
65011c4b:	xor    eax,eax
65011c4d:	mov    DWORD PTR [esi+0x20],eax
65011c50:	mov    DWORD PTR [esi+0x24],eax
65011c53:	mov    DWORD PTR [esi+0x28],eax
65011c56:	mov    eax,esi
65011c58:	pop    esi
65011c59:	ret    
65011c5a:	push   esi
65011c5b:	mov    esi,DWORD PTR [esp+0x8]
65011c5f:	test   esi,esi
65011c61:	jne    0x65011c6a
65011c63:	mov    eax,0x80070057
65011c68:	jmp    0x65011cb6
65011c6a:	mov    eax,DWORD PTR [esi]
65011c6c:	test   eax,eax
65011c6e:	je     0x65011cb4
65011c70:	cmp    eax,0x2c
65011c73:	jne    0x65011c63
65011c75:	push   edi
65011c76:	xor    edi,edi
65011c78:	cmp    DWORD PTR [esi+0x24],edi
65011c7b:	jle    0x65011c9e
65011c7d:	push   ebx
65011c7e:	lea    ebx,[esi+0x20]
65011c81:	push   edi
65011c82:	mov    ecx,ebx
65011c84:	call   0x65011bf2
65011c89:	movzx  eax,WORD PTR [eax]
65011c8c:	push   DWORD PTR [esp+0x14]
65011c90:	push   eax
65011c91:	call   DWORD PTR ds:0x650241b0
65011c97:	inc    edi
65011c98:	cmp    edi,DWORD PTR [esi+0x24]
65011c9b:	jl     0x65011c81
65011c9d:	pop    ebx
65011c9e:	lea    ecx,[esi+0x20]
65011ca1:	call   0x65011bd5
65011ca6:	lea    eax,[esi+0x4]
65011ca9:	push   eax
65011caa:	call   DWORD PTR ds:0x650240a0
65011cb0:	and    DWORD PTR [esi],0x0
65011cb3:	pop    edi
65011cb4:	xor    eax,eax
65011cb6:	pop    esi
65011cb7:	ret    0x8
65011cba:	push   esi
65011cbb:	mov    esi,ecx
65011cbd:	cmp    BYTE PTR [esi+0x4],0x0
65011cc1:	je     0x65011ccf
65011cc3:	push   DWORD PTR [esi]
65011cc5:	call   DWORD PTR ds:0x6502409c
65011ccb:	mov    BYTE PTR [esi+0x4],0x0
65011ccf:	pop    esi
65011cd0:	ret    
65011cd1:	push   esi
65011cd2:	mov    esi,ecx
65011cd4:	lea    ecx,[esi+0x18]
65011cd7:	call   0x65011b53
65011cdc:	xor    eax,eax
65011cde:	mov    DWORD PTR [esi+0x30],eax
65011ce1:	mov    DWORD PTR [esi+0x34],eax
65011ce4:	mov    DWORD PTR [esi+0x38],eax
65011ce7:	mov    eax,esi
65011ce9:	pop    esi
65011cea:	ret    
65011ceb:	push   esi
65011cec:	mov    esi,ecx
65011cee:	lea    eax,[esi+0x18]
65011cf1:	push   eax
65011cf2:	call   DWORD PTR ds:0x650240a0
65011cf8:	lea    ecx,[esi+0x30]
65011cfb:	pop    esi
65011cfc:	jmp    0x65011bd5
65011d01:	push   ebp
65011d02:	mov    ebp,esp
65011d04:	push   ecx
65011d05:	push   ecx
65011d06:	push   esi
65011d07:	mov    esi,ecx
65011d09:	lea    eax,[esi+0x18]
65011d0c:	push   eax
65011d0d:	mov    DWORD PTR [ebp-0x8],eax
65011d10:	call   DWORD PTR ds:0x65024098
65011d16:	mov    eax,DWORD PTR [esi+0x34]
65011d19:	mov    ecx,DWORD PTR [ebp+0x8]
65011d1c:	cmp    ecx,eax
65011d1e:	mov    BYTE PTR [ebp-0x4],0x1
65011d22:	jg     0x65011d48
65011d24:	test   ecx,ecx
65011d26:	jl     0x65011d48
65011d28:	cmp    ecx,eax
65011d2a:	jne    0x65011d3b
65011d2c:	mov    esi,DWORD PTR [esi+0x8]
65011d2f:	lea    ecx,[ebp-0x8]
65011d32:	call   0x65011cba
65011d37:	mov    eax,esi
65011d39:	jmp    0x65011d52
65011d3b:	push   ecx
65011d3c:	lea    ecx,[esi+0x30]
65011d3f:	call   0x65011c19
65011d44:	mov    esi,DWORD PTR [eax]
65011d46:	jmp    0x65011d2f
65011d48:	lea    ecx,[ebp-0x8]
65011d4b:	call   0x65011cba
65011d50:	xor    eax,eax
65011d52:	pop    esi
65011d53:	leave  
65011d54:	ret    0x4
65011d57:	push   esi
65011d58:	mov    esi,ecx
65011d5a:	call   0x65011c40
65011d5f:	push   esi
65011d60:	mov    DWORD PTR [esi],0x2c
65011d66:	call   0x65011bb2
65011d6b:	test   eax,eax
65011d6d:	jge    0x65011d79
65011d6f:	mov    BYTE PTR ds:0x6503034c,0x1
65011d76:	and    DWORD PTR [esi],0x0
65011d79:	mov    eax,esi
65011d7b:	pop    esi
65011d7c:	ret    
65011d7d:	push   ebp
65011d7e:	lea    ebp,[esp-0x78]
65011d82:	sub    esp,0x98
65011d88:	mov    eax,ds:0x6502c09c
65011d8d:	xor    eax,ebp
65011d8f:	mov    DWORD PTR [ebp+0x74],eax
65011d92:	push   esi
65011d93:	mov    esi,ecx
65011d95:	call   0x65011cd1
65011d9a:	mov    eax,0x65000000
65011d9f:	push   0x94
65011da4:	mov    DWORD PTR [esi+0x8],eax
65011da7:	mov    DWORD PTR [esi+0x4],eax
65011daa:	lea    eax,[ebp-0x20]
65011dad:	push   0x0
65011daf:	push   eax
65011db0:	mov    DWORD PTR [esi],0x3c
65011db6:	mov    BYTE PTR [esi+0xc],0x0
65011dba:	call   0x65012fb0
65011dbf:	add    esp,0xc
65011dc2:	lea    eax,[ebp-0x20]
65011dc5:	push   eax
65011dc6:	mov    DWORD PTR [ebp-0x20],0x94
65011dcd:	call   DWORD PTR ds:0x650240e0
65011dd3:	cmp    DWORD PTR [ebp-0x10],0x2
65011dd7:	jne    0x65011de1
65011dd9:	cmp    DWORD PTR [ebp-0x1c],0x5
65011ddd:	jb     0x65011df9
65011ddf:	jmp    0x65011df5
65011de1:	cmp    DWORD PTR [ebp-0x10],0x1
65011de5:	jne    0x65011df9
65011de7:	cmp    DWORD PTR [ebp-0x1c],0x4
65011deb:	ja     0x65011df5
65011ded:	jne    0x65011df9
65011def:	cmp    DWORD PTR [ebp-0x18],0x0
65011df3:	jbe    0x65011df9
65011df5:	mov    BYTE PTR [esi+0xc],0x1
65011df9:	lea    ecx,[esi+0x18]
65011dfc:	mov    DWORD PTR [esi+0x10],0x800
65011e03:	mov    DWORD PTR [esi+0x14],0x65024bc8
65011e0a:	call   0x65011b67
65011e0f:	test   eax,eax
65011e11:	jge    0x65011e1a
65011e13:	mov    BYTE PTR ds:0x6503034c,0x1
65011e1a:	mov    ecx,DWORD PTR [ebp+0x74]
65011e1d:	mov    eax,esi
65011e1f:	xor    ecx,ebp
65011e21:	pop    esi
65011e22:	call   0x6501292c
65011e27:	add    ebp,0x78
65011e2a:	leave  
65011e2b:	ret    
65011e2c:	push   esi
65011e2d:	push   DWORD PTR ds:0x6502d4f0
65011e33:	mov    esi,ecx
65011e35:	push   esi
65011e36:	call   0x65011c5a
65011e3b:	lea    ecx,[esi+0x20]
65011e3e:	pop    esi
65011e3f:	jmp    0x65011bd5
65011e44:	cmp    BYTE PTR [ecx+0x8],0x0
65011e48:	mov    DWORD PTR [ecx],0x65024bd8
65011e4e:	je     0x65011e5e
65011e50:	mov    ecx,DWORD PTR [ecx+0x4]
65011e53:	test   ecx,ecx
65011e55:	je     0x65011e5e
65011e57:	push   ecx
65011e58:	call   DWORD PTR ds:0x650240e8
65011e5e:	ret    
65011e5f:	push   DWORD PTR [esp+0x4]
65011e63:	push   0x0
65011e65:	push   DWORD PTR [ecx+0x4]
65011e68:	call   DWORD PTR ds:0x650240ec
65011e6e:	ret    0x4
65011e71:	cmp    DWORD PTR [esp+0x4],0x0
65011e76:	je     0x65011e87
65011e78:	push   DWORD PTR [esp+0x4]
65011e7c:	push   0x0
65011e7e:	push   DWORD PTR [ecx+0x4]
65011e81:	call   DWORD PTR ds:0x650240f0
65011e87:	ret    0x4
65011e8a:	push   ebp
65011e8b:	mov    ebp,esp
65011e8d:	xor    eax,eax
65011e8f:	cmp    DWORD PTR [ebp+0x8],eax
65011e92:	jne    0x65011e9d
65011e94:	push   DWORD PTR [ebp+0xc]
65011e97:	mov    eax,DWORD PTR [ecx]
65011e99:	call   DWORD PTR [eax]
65011e9b:	jmp    0x65011ebe
65011e9d:	cmp    DWORD PTR [ebp+0xc],eax
65011ea0:	jne    0x65011eae
65011ea2:	push   DWORD PTR [ebp+0x8]
65011ea5:	mov    eax,DWORD PTR [ecx]
65011ea7:	call   DWORD PTR [eax+0x4]
65011eaa:	xor    eax,eax
65011eac:	jmp    0x65011ebe
65011eae:	push   DWORD PTR [ebp+0xc]
65011eb1:	push   DWORD PTR [ebp+0x8]
65011eb4:	push   eax
65011eb5:	push   DWORD PTR [ecx+0x4]
65011eb8:	call   DWORD PTR ds:0x650240f4
65011ebe:	pop    ebp
65011ebf:	ret    0x8
65011ec2:	push   DWORD PTR [esp+0x4]
65011ec6:	push   0x0
65011ec8:	push   DWORD PTR [ecx+0x4]
65011ecb:	call   DWORD PTR ds:0x650240f8
65011ed1:	ret    0x4
65011ed4:	push   esi
65011ed5:	mov    esi,ecx
65011ed7:	call   0x65011e44
65011edc:	test   BYTE PTR [esp+0x8],0x1
65011ee1:	je     0x65011eea
65011ee3:	push   esi
65011ee4:	call   0x650120d2
65011ee9:	pop    ecx
65011eea:	mov    eax,esi
65011eec:	pop    esi
65011eed:	ret    0x4
65011ef0:	mov    eax,ecx
65011ef2:	mov    ecx,DWORD PTR [esp+0x4]
65011ef6:	mov    DWORD PTR [eax+0x4],ecx
65011ef9:	mov    DWORD PTR [eax],0x65024bec
65011eff:	xor    ecx,ecx
65011f01:	mov    DWORD PTR [eax+0x14],0x2
65011f08:	mov    DWORD PTR [eax+0xc],ecx
65011f0b:	mov    DWORD PTR [eax+0x10],ecx
65011f0e:	mov    WORD PTR [eax+0x18],cx
65011f12:	mov    WORD PTR [eax+0x1a],cx
65011f16:	mov    DWORD PTR [eax+0x8],eax
65011f19:	ret    0x4
65011f1c:	mov    eax,DWORD PTR [esp+0x8]
65011f20:	mul    DWORD PTR [esp+0xc]
65011f24:	test   edx,edx
65011f26:	ja     0x65011f2d
65011f28:	cmp    eax,0xffffffff
65011f2b:	jbe    0x65011f33
65011f2d:	mov    eax,0x80070057
65011f32:	ret    
65011f33:	mov    ecx,DWORD PTR [esp+0x4]
65011f37:	mov    DWORD PTR [ecx],eax
65011f39:	xor    eax,eax
65011f3b:	ret    
65011f3c:	mov    ecx,DWORD PTR [ecx+0x4]
65011f3f:	mov    eax,DWORD PTR [ecx]
65011f41:	jmp    DWORD PTR [eax+0x4]
65011f44:	xor    edx,edx
65011f46:	lea    eax,[ecx+0x14]
65011f49:	inc    edx
65011f4a:	lock xadd DWORD PTR [eax],edx
65011f4e:	lea    eax,[ecx+0x8]
65011f51:	ret    
65011f52:	mov    eax,ecx
65011f54:	ret    
65011f55:	test   BYTE PTR [esp+0x4],0x1
65011f5a:	push   esi
65011f5b:	mov    esi,ecx
65011f5d:	mov    DWORD PTR [esi],0x65024bec
65011f63:	je     0x65011f6c
65011f65:	push   esi
65011f66:	call   0x650120d2
65011f6b:	pop    ecx
65011f6c:	mov    eax,esi
65011f6e:	pop    esi
65011f6f:	ret    0x4
65011f72:	mov    eax,DWORD PTR [esp+0x8]
65011f76:	mov    ecx,DWORD PTR [esp+0xc]
65011f7a:	or     edx,0xffffffff
65011f7d:	sub    edx,eax
65011f7f:	cmp    edx,ecx
65011f81:	jae    0x65011f89
65011f83:	mov    eax,0x80070057
65011f88:	ret    
65011f89:	add    eax,ecx
65011f8b:	mov    ecx,DWORD PTR [esp+0x4]
65011f8f:	mov    DWORD PTR [ecx],eax
65011f91:	xor    eax,eax
65011f93:	ret    
65011f94:	push   ebp
65011f95:	mov    ebp,esp
65011f97:	push   esi
65011f98:	mov    esi,DWORD PTR [ebp+0x8]
65011f9b:	push   edi
65011f9c:	push   DWORD PTR [ebp+0xc]
65011f9f:	add    esi,0x8
65011fa2:	and    esi,0xfffffff8
65011fa5:	lea    eax,[ebp+0x8]
65011fa8:	push   esi
65011fa9:	push   eax
65011faa:	mov    edi,ecx
65011fac:	call   0x65011f1c
65011fb1:	add    esp,0xc
65011fb4:	test   eax,eax
65011fb6:	jl     0x65011fee
65011fb8:	push   DWORD PTR [ebp+0x8]
65011fbb:	lea    eax,[ebp+0x8]
65011fbe:	push   0x10
65011fc0:	push   eax
65011fc1:	call   0x65011f72
65011fc6:	add    esp,0xc
65011fc9:	test   eax,eax
65011fcb:	jl     0x65011fee
65011fcd:	mov    ecx,DWORD PTR [edi+0x4]
65011fd0:	push   DWORD PTR [ebp+0x8]
65011fd3:	mov    eax,DWORD PTR [ecx]
65011fd5:	call   DWORD PTR [eax]
65011fd7:	test   eax,eax
65011fd9:	je     0x65011fee
65011fdb:	dec    esi
65011fdc:	and    DWORD PTR [eax+0x4],0x0
65011fe0:	mov    DWORD PTR [eax],edi
65011fe2:	mov    DWORD PTR [eax+0xc],0x1
65011fe9:	mov    DWORD PTR [eax+0x8],esi
65011fec:	jmp    0x65011ff0
65011fee:	xor    eax,eax
65011ff0:	pop    edi
65011ff1:	pop    esi
65011ff2:	pop    ebp
65011ff3:	ret    0x8
65011ff6:	push   ebp
65011ff7:	mov    ebp,esp
65011ff9:	push   esi
65011ffa:	mov    esi,DWORD PTR [ebp+0xc]
65011ffd:	push   edi
65011ffe:	push   DWORD PTR [ebp+0x10]
65012001:	add    esi,0x8
65012004:	and    esi,0xfffffff8
65012007:	lea    eax,[ebp+0xc]
6501200a:	push   esi
6501200b:	push   eax
6501200c:	mov    edi,ecx
6501200e:	call   0x65011f1c
65012013:	add    esp,0xc
65012016:	test   eax,eax
65012018:	jl     0x65012047
6501201a:	push   DWORD PTR [ebp+0xc]
6501201d:	lea    eax,[ebp+0xc]
65012020:	push   0x10
65012022:	push   eax
65012023:	call   0x65011f72
65012028:	add    esp,0xc
6501202b:	test   eax,eax
6501202d:	jl     0x65012047
6501202f:	push   DWORD PTR [ebp+0xc]
65012032:	mov    ecx,DWORD PTR [edi+0x4]
65012035:	push   DWORD PTR [ebp+0x8]
65012038:	mov    eax,DWORD PTR [ecx]
6501203a:	call   DWORD PTR [eax+0x8]
6501203d:	test   eax,eax
6501203f:	je     0x65012047
65012041:	dec    esi
65012042:	mov    DWORD PTR [eax+0x8],esi
65012045:	jmp    0x65012049
65012047:	xor    eax,eax
65012049:	pop    edi
6501204a:	pop    esi
6501204b:	pop    ebp
6501204c:	ret    0xc
6501204f:	push   0x44
65012051:	mov    eax,0x65022205
65012056:	call   0x6501410b
6501205b:	push   0x65024c34
65012060:	lea    ecx,[ebp-0x28]
65012063:	call   0x65002720
65012068:	and    DWORD PTR [ebp-0x4],0x0
6501206c:	lea    eax,[ebp-0x28]
6501206f:	push   eax
65012070:	lea    ecx,[ebp-0x50]
65012073:	call   0x65002d10
65012078:	push   0x6502a0c8
6501207d:	lea    eax,[ebp-0x50]
65012080:	push   eax
65012081:	mov    DWORD PTR [ebp-0x50],0x65024c20
65012088:	call   0x650124d6
6501208d:	int3   
6501208e:	push   0x44
65012090:	mov    eax,0x65022228
65012095:	call   0x6501410b
6501209a:	push   0x65024c44
6501209f:	lea    ecx,[ebp-0x28]
650120a2:	call   0x65002720
650120a7:	and    DWORD PTR [ebp-0x4],0x0
650120ab:	lea    eax,[ebp-0x28]
650120ae:	push   eax
650120af:	lea    ecx,[ebp-0x50]
650120b2:	call   0x65002d10
650120b7:	push   0x6502a08c
650120bc:	lea    eax,[ebp-0x50]
650120bf:	push   eax
650120c0:	mov    DWORD PTR [ebp-0x50],0x65024c2c
650120c7:	call   0x650124d6
650120cc:	int3   
650120cd:	jmp    0x6501246c
650120d2:	jmp    0x65013746
650120d7:	mov    eax,ecx
650120d9:	and    DWORD PTR [eax+0x4],0x0
650120dd:	and    DWORD PTR [eax+0x8],0x0
650120e1:	mov    DWORD PTR [eax],0x65024c60
650120e7:	ret    
650120e8:	push   ebx
650120e9:	mov    ebx,DWORD PTR [esp+0x8]
650120ed:	push   esi
650120ee:	push   edi
650120ef:	mov    edi,ecx
650120f1:	mov    DWORD PTR [edi],0x65024c60
650120f7:	mov    eax,DWORD PTR [ebx]
650120f9:	test   eax,eax
650120fb:	je     0x65012123
650120fd:	push   eax
650120fe:	call   0x65014080
65012103:	mov    esi,eax
65012105:	inc    esi
65012106:	push   esi
65012107:	call   0x65013823
6501210c:	test   eax,eax
6501210e:	pop    ecx
6501210f:	pop    ecx
65012110:	mov    DWORD PTR [edi+0x4],eax
65012113:	je     0x65012127
65012115:	push   DWORD PTR [ebx]
65012117:	push   esi
65012118:	push   eax
65012119:	call   0x65014174
6501211e:	add    esp,0xc
65012121:	jmp    0x65012127
65012123:	and    DWORD PTR [edi+0x4],0x0
65012127:	mov    DWORD PTR [edi+0x8],0x1
6501212e:	mov    eax,edi
65012130:	pop    edi
65012131:	pop    esi
65012132:	pop    ebx
65012133:	ret    0x4
65012136:	mov    eax,ecx
65012138:	mov    ecx,DWORD PTR [esp+0x4]
6501213c:	mov    DWORD PTR [eax],0x65024c60
65012142:	mov    ecx,DWORD PTR [ecx]
65012144:	and    DWORD PTR [eax+0x8],0x0
65012148:	mov    DWORD PTR [eax+0x4],ecx
6501214b:	ret    0x8
6501214e:	push   ebx
6501214f:	mov    ebx,DWORD PTR [esp+0x8]
65012153:	push   esi
65012154:	mov    esi,ecx
65012156:	mov    DWORD PTR [esi],0x65024c60
6501215c:	mov    eax,DWORD PTR [ebx+0x8]
6501215f:	mov    DWORD PTR [esi+0x8],eax
65012162:	test   eax,eax
65012164:	mov    eax,DWORD PTR [ebx+0x4]
65012167:	push   edi
65012168:	je     0x6501219b
6501216a:	test   eax,eax
6501216c:	je     0x65012195
6501216e:	push   eax
6501216f:	call   0x65014080
65012174:	mov    edi,eax
65012176:	inc    edi
65012177:	push   edi
65012178:	call   0x65013823
6501217d:	test   eax,eax
6501217f:	pop    ecx
65012180:	pop    ecx
65012181:	mov    DWORD PTR [esi+0x4],eax
65012184:	je     0x6501219e
65012186:	push   DWORD PTR [ebx+0x4]
65012189:	push   edi
6501218a:	push   eax
6501218b:	call   0x65014174
65012190:	add    esp,0xc
65012193:	jmp    0x6501219e
65012195:	and    DWORD PTR [esi+0x4],0x0
65012199:	jmp    0x6501219e
6501219b:	mov    DWORD PTR [esi+0x4],eax
6501219e:	pop    edi
6501219f:	mov    eax,esi
650121a1:	pop    esi
650121a2:	pop    ebx
650121a3:	ret    0x4
650121a6:	cmp    DWORD PTR [ecx+0x8],0x0
650121aa:	mov    DWORD PTR [ecx],0x65024c60
650121b0:	je     0x650121bb
650121b2:	push   DWORD PTR [ecx+0x4]
650121b5:	call   0x65013746
650121ba:	pop    ecx
650121bb:	ret    
650121bc:	mov    eax,DWORD PTR [ecx+0x4]
650121bf:	test   eax,eax
650121c1:	jne    0x650121c8
650121c3:	mov    eax,0x65024c68
650121c8:	ret    
650121c9:	push   esi
650121ca:	lea    eax,[esp+0x8]
650121ce:	push   eax
650121cf:	mov    esi,ecx
650121d1:	call   0x650120e8
650121d6:	mov    DWORD PTR [esi],0x65024c80
650121dc:	mov    eax,esi
650121de:	pop    esi
650121df:	ret    0x4
650121e2:	push   esi
650121e3:	push   DWORD PTR [esp+0x8]
650121e7:	mov    esi,ecx
650121e9:	call   0x6501214e
650121ee:	mov    DWORD PTR [esi],0x65024c80
650121f4:	mov    eax,esi
650121f6:	pop    esi
650121f7:	ret    0x4
650121fa:	mov    DWORD PTR [ecx],0x65024c80
65012200:	jmp    0x650121a6
65012205:	push   esi
65012206:	mov    esi,ecx
65012208:	call   0x650121a6
6501220d:	test   BYTE PTR [esp+0x8],0x1
65012212:	je     0x6501221b
65012214:	push   esi
65012215:	call   0x650120d2
6501221a:	pop    ecx
6501221b:	mov    eax,esi
6501221d:	pop    esi
6501221e:	ret    0x4
65012221:	push   esi
65012222:	mov    esi,ecx
65012224:	mov    DWORD PTR [esi],0x65024c80
6501222a:	call   0x650121a6
6501222f:	test   BYTE PTR [esp+0x8],0x1
65012234:	je     0x6501223d
65012236:	push   esi
65012237:	call   0x650120d2
6501223c:	pop    ecx
6501223d:	mov    eax,esi
6501223f:	pop    esi
65012240:	ret    0x4
65012243:	push   ebp
65012244:	mov    ebp,esp
65012246:	push   esi
65012247:	mov    esi,DWORD PTR [ebp+0x14]
6501224a:	push   edi
6501224b:	xor    edi,edi
6501224d:	cmp    esi,edi
6501224f:	jne    0x65012255
65012251:	xor    eax,eax
65012253:	jmp    0x650122ba
65012255:	cmp    DWORD PTR [ebp+0x8],edi
65012258:	jne    0x65012275
6501225a:	call   0x65014580
6501225f:	push   0x16
65012261:	pop    esi
65012262:	mov    DWORD PTR [eax],esi
65012264:	push   edi
65012265:	push   edi
65012266:	push   edi
65012267:	push   edi
65012268:	push   edi
65012269:	call   0x6501241f
6501226e:	add    esp,0x14
65012271:	mov    eax,esi
65012273:	jmp    0x650122ba
65012275:	cmp    DWORD PTR [ebp+0x10],edi
65012278:	je     0x65012290
6501227a:	cmp    DWORD PTR [ebp+0xc],esi
6501227d:	jb     0x65012290
6501227f:	push   esi
65012280:	push   DWORD PTR [ebp+0x10]
65012283:	push   DWORD PTR [ebp+0x8]
65012286:	call   0x650141e0
6501228b:	add    esp,0xc
6501228e:	jmp    0x65012251
65012290:	push   DWORD PTR [ebp+0xc]
65012293:	push   edi
65012294:	push   DWORD PTR [ebp+0x8]
65012297:	call   0x65012fb0
6501229c:	add    esp,0xc
6501229f:	cmp    DWORD PTR [ebp+0x10],edi
650122a2:	je     0x6501225a
650122a4:	cmp    DWORD PTR [ebp+0xc],esi
650122a7:	jae    0x650122b7
650122a9:	call   0x65014580
650122ae:	push   0x22
650122b0:	pop    ecx
650122b1:	mov    DWORD PTR [eax],ecx
650122b3:	mov    esi,ecx
650122b5:	jmp    0x65012264
650122b7:	push   0x16
650122b9:	pop    eax
650122ba:	pop    edi
650122bb:	pop    esi
650122bc:	pop    ebp
650122bd:	ret    
650122be:	push   ebp
650122bf:	mov    ebp,esp
650122c1:	mov    eax,DWORD PTR [ebp+0x14]
650122c4:	push   esi
650122c5:	push   edi
650122c6:	xor    edi,edi
650122c8:	cmp    eax,edi
650122ca:	je     0x65012313
650122cc:	cmp    DWORD PTR [ebp+0x8],edi
650122cf:	jne    0x650122ec
650122d1:	call   0x65014580
650122d6:	push   0x16
650122d8:	pop    esi
650122d9:	mov    DWORD PTR [eax],esi
650122db:	push   edi
650122dc:	push   edi
650122dd:	push   edi
650122de:	push   edi
650122df:	push   edi
650122e0:	call   0x6501241f
650122e5:	add    esp,0x14
650122e8:	mov    eax,esi
650122ea:	jmp    0x65012315
650122ec:	cmp    DWORD PTR [ebp+0x10],edi
650122ef:	je     0x650122d1
650122f1:	cmp    DWORD PTR [ebp+0xc],eax
650122f4:	jae    0x65012304
650122f6:	call   0x65014580
650122fb:	push   0x22
650122fd:	pop    ecx
650122fe:	mov    DWORD PTR [eax],ecx
65012300:	mov    esi,ecx
65012302:	jmp    0x650122db
65012304:	push   eax
65012305:	push   DWORD PTR [ebp+0x10]
65012308:	push   DWORD PTR [ebp+0x8]
6501230b:	call   0x650138f0
65012310:	add    esp,0xc
65012313:	xor    eax,eax
65012315:	pop    edi
65012316:	pop    esi
65012317:	pop    ebp
65012318:	ret    
65012319:	mov    eax,DWORD PTR [esp+0x4]
6501231d:	mov    ds:0x6502d57c,eax
65012322:	ret    
65012323:	push   ebp
65012324:	lea    ebp,[esp-0x2a8]
6501232b:	sub    esp,0x328
65012331:	mov    eax,ds:0x6502c09c
65012336:	xor    eax,ebp
65012338:	mov    DWORD PTR [ebp+0x2a4],eax
6501233e:	push   esi
6501233f:	mov    DWORD PTR [ebp+0x88],eax
65012345:	mov    DWORD PTR [ebp+0x84],ecx
6501234b:	mov    DWORD PTR [ebp+0x80],edx
65012351:	mov    DWORD PTR [ebp+0x7c],ebx
65012354:	mov    DWORD PTR [ebp+0x78],esi
65012357:	mov    DWORD PTR [ebp+0x74],edi
6501235a:	data16 mov WORD PTR [ebp+0xa0],ss
65012361:	data16 mov WORD PTR [ebp+0x94],cs
65012368:	data16 mov WORD PTR [ebp+0x70],ds
6501236c:	data16 mov WORD PTR [ebp+0x6c],es
65012370:	data16 mov WORD PTR [ebp+0x68],fs
65012374:	data16 mov WORD PTR [ebp+0x64],gs
65012378:	pushf  
65012379:	pop    DWORD PTR [ebp+0x98]
6501237f:	mov    esi,DWORD PTR [ebp+0x2ac]
65012385:	lea    eax,[ebp+0x2ac]
6501238b:	mov    DWORD PTR [ebp+0x9c],eax
65012391:	mov    DWORD PTR [ebp-0x28],0x10001
65012398:	mov    DWORD PTR [ebp+0x90],esi
6501239e:	mov    eax,DWORD PTR [eax-0x4]
650123a1:	push   0x50
650123a3:	mov    DWORD PTR [ebp+0x8c],eax
650123a9:	lea    eax,[ebp-0x80]
650123ac:	push   0x0
650123ae:	push   eax
650123af:	call   0x65012fb0
650123b4:	lea    eax,[ebp-0x80]
650123b7:	mov    DWORD PTR [ebp-0x30],eax
650123ba:	lea    eax,[ebp-0x28]
650123bd:	add    esp,0xc
650123c0:	mov    DWORD PTR [ebp-0x80],0xc000000d
650123c7:	mov    DWORD PTR [ebp-0x74],esi
650123ca:	mov    DWORD PTR [ebp-0x2c],eax
650123cd:	call   DWORD PTR ds:0x6502410c
650123d3:	push   0x0
650123d5:	mov    esi,eax
650123d7:	call   DWORD PTR ds:0x65024108
650123dd:	lea    eax,[ebp-0x30]
650123e0:	push   eax
650123e1:	call   DWORD PTR ds:0x65024104
650123e7:	test   eax,eax
650123e9:	jne    0x650123f7
650123eb:	test   esi,esi
650123ed:	jne    0x650123f7
650123ef:	push   0x2
650123f1:	call   0x650145c4
650123f6:	pop    ecx
650123f7:	push   0xc000000d
650123fc:	call   DWORD PTR ds:0x65024040
65012402:	push   eax
65012403:	call   DWORD PTR ds:0x65024100
65012409:	mov    ecx,DWORD PTR [ebp+0x2a4]
6501240f:	xor    ecx,ebp
65012411:	pop    esi
65012412:	call   0x6501292c
65012417:	add    ebp,0x2a8
6501241d:	leave  
6501241e:	ret    
6501241f:	push   ebp
65012420:	mov    ebp,esp
65012422:	push   DWORD PTR ds:0x6502d57c
65012428:	call   0x650146af
6501242d:	test   eax,eax
6501242f:	pop    ecx
65012430:	je     0x65012435
65012432:	pop    ebp
65012433:	jmp    eax
65012435:	push   0x2
65012437:	call   0x650145c4
6501243c:	pop    ecx
6501243d:	pop    ebp
6501243e:	jmp    0x65012323
65012443:	xor    eax,eax
65012445:	push   eax
65012446:	push   eax
65012447:	push   eax
65012448:	push   eax
65012449:	push   eax
6501244a:	call   0x6501241f
6501244f:	add    esp,0x14
65012452:	ret    
65012453:	push   esi
65012454:	push   0x1
65012456:	push   0x6502c07c
6501245b:	mov    esi,ecx
6501245d:	call   0x65012136
65012462:	mov    DWORD PTR [esi],0x65024c08
65012468:	mov    eax,esi
6501246a:	pop    esi
6501246b:	ret    
6501246c:	push   ebp
6501246d:	mov    ebp,esp
6501246f:	sub    esp,0xc
65012472:	jmp    0x65012481
65012474:	push   DWORD PTR [ebp+0x8]
65012477:	call   0x65014bfb
6501247c:	test   eax,eax
6501247e:	pop    ecx
6501247f:	je     0x65012490
65012481:	push   DWORD PTR [ebp+0x8]
65012484:	call   0x65013823
65012489:	test   eax,eax
6501248b:	pop    ecx
6501248c:	je     0x65012474
6501248e:	leave  
6501248f:	ret    
65012490:	test   BYTE PTR ds:0x6502d58c,0x1
65012497:	mov    esi,0x6502d580
6501249c:	jne    0x650124b7
6501249e:	or     DWORD PTR ds:0x6502d58c,0x1
650124a5:	mov    ecx,esi
650124a7:	call   0x65012453
650124ac:	push   0x650236aa
650124b1:	call   0x65012a5f
650124b6:	pop    ecx
650124b7:	push   esi
650124b8:	lea    ecx,[ebp-0xc]
650124bb:	call   0x6501214e
650124c0:	push   0x65029ffc
650124c5:	lea    eax,[ebp-0xc]
650124c8:	push   eax
650124c9:	mov    DWORD PTR [ebp-0xc],0x65024c08
650124d0:	call   0x650124d6
650124d5:	int3   
650124d6:	push   ebp
650124d7:	mov    ebp,esp
650124d9:	sub    esp,0x20
650124dc:	mov    eax,DWORD PTR [ebp+0x8]
650124df:	push   esi
650124e0:	push   edi
650124e1:	push   0x8
650124e3:	pop    ecx
650124e4:	mov    esi,0x65024c88
650124e9:	lea    edi,[ebp-0x20]
650124ec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650124ee:	mov    DWORD PTR [ebp-0x8],eax
650124f1:	mov    eax,DWORD PTR [ebp+0xc]
650124f4:	test   eax,eax
650124f6:	pop    edi
650124f7:	mov    DWORD PTR [ebp-0x4],eax
650124fa:	pop    esi
650124fb:	je     0x65012509
650124fd:	test   BYTE PTR [eax],0x8
65012500:	je     0x65012509
65012502:	mov    DWORD PTR [ebp-0xc],0x1994000
65012509:	lea    eax,[ebp-0xc]
6501250c:	push   eax
6501250d:	push   DWORD PTR [ebp-0x10]
65012510:	push   DWORD PTR [ebp-0x1c]
65012513:	push   DWORD PTR [ebp-0x20]
65012516:	call   DWORD PTR ds:0x650240e4
6501251c:	leave  
6501251d:	ret    0x8
65012520:	push   ecx
65012521:	mov    DWORD PTR [ecx],0x65024cac
65012527:	call   0x65014c1d
6501252c:	pop    ecx
6501252d:	ret    
6501252e:	push   esi
6501252f:	mov    esi,ecx
65012531:	call   0x65012520
65012536:	test   BYTE PTR [esp+0x8],0x1
6501253b:	je     0x65012544
6501253d:	push   esi
6501253e:	call   0x650120d2
65012543:	pop    ecx
65012544:	mov    eax,esi
65012546:	pop    esi
65012547:	ret    0x4
6501254a:	mov    eax,DWORD PTR [esp+0x4]
6501254e:	add    ecx,0x9
65012551:	push   ecx
65012552:	add    eax,0x9
65012555:	push   eax
65012556:	call   0x65014c90
6501255b:	neg    eax
6501255d:	pop    ecx
6501255e:	sbb    eax,eax
65012560:	pop    ecx
65012561:	inc    eax
65012562:	ret    0x4
65012565:	push   ebp
65012566:	mov    ebp,esp
65012568:	push   ecx
65012569:	push   ebx
6501256a:	mov    eax,DWORD PTR [ebp+0xc]
6501256d:	add    eax,0xc
65012570:	mov    DWORD PTR [ebp-0x4],eax
65012573:	mov    ebx,DWORD PTR fs:0x0
6501257a:	mov    eax,DWORD PTR [ebx]
6501257c:	mov    fs:0x0,eax
65012582:	mov    eax,DWORD PTR [ebp+0x8]
65012585:	mov    ebx,DWORD PTR [ebp+0xc]
65012588:	mov    ebp,DWORD PTR [ebp-0x4]
6501258b:	mov    esp,DWORD PTR [ebx-0x4]
6501258e:	jmp    eax
65012590:	pop    ebx
65012591:	leave  
65012592:	ret    0x8
65012595:	pop    eax
65012596:	pop    ecx
65012597:	xchg   DWORD PTR [esp],eax
6501259a:	jmp    eax
6501259c:	push   ebp
6501259d:	mov    ebp,esp
6501259f:	push   ecx
650125a0:	push   ecx
650125a1:	push   ebx
650125a2:	push   esi
650125a3:	push   edi
650125a4:	mov    esi,DWORD PTR fs:0x0
650125ab:	mov    DWORD PTR [ebp-0x4],esi
650125ae:	mov    DWORD PTR [ebp-0x8],0x650125c5
650125b5:	push   0x0
650125b7:	push   DWORD PTR [ebp+0xc]
650125ba:	push   DWORD PTR [ebp-0x8]
650125bd:	push   DWORD PTR [ebp+0x8]
650125c0:	call   0x6501eb1c
650125c5:	mov    eax,DWORD PTR [ebp+0xc]
650125c8:	mov    eax,DWORD PTR [eax+0x4]
650125cb:	and    eax,0xfffffffd
650125ce:	mov    ecx,DWORD PTR [ebp+0xc]
650125d1:	mov    DWORD PTR [ecx+0x4],eax
650125d4:	mov    edi,DWORD PTR fs:0x0
650125db:	mov    ebx,DWORD PTR [ebp-0x4]
650125de:	mov    DWORD PTR [ebx],edi
650125e0:	mov    DWORD PTR fs:0x0,ebx
650125e7:	pop    edi
650125e8:	pop    esi
650125e9:	pop    ebx
650125ea:	leave  
650125eb:	ret    0x8
650125ee:	push   ebp
650125ef:	mov    ebp,esp
650125f1:	sub    esp,0x8
650125f4:	push   ebx
650125f5:	push   esi
650125f6:	push   edi
650125f7:	cld    
650125f8:	mov    DWORD PTR [ebp-0x4],eax
650125fb:	xor    eax,eax
650125fd:	push   eax
650125fe:	push   eax
650125ff:	push   eax
65012600:	push   DWORD PTR [ebp-0x4]
65012603:	push   DWORD PTR [ebp+0x14]
65012606:	push   DWORD PTR [ebp+0x10]
65012609:	push   DWORD PTR [ebp+0xc]
6501260c:	push   DWORD PTR [ebp+0x8]
6501260f:	call   0x650158be
65012614:	add    esp,0x20
65012617:	mov    DWORD PTR [ebp-0x8],eax
6501261a:	pop    edi
6501261b:	pop    esi
6501261c:	pop    ebx
6501261d:	mov    eax,DWORD PTR [ebp-0x8]
65012620:	mov    esp,ebp
65012622:	pop    ebp
65012623:	ret    
65012624:	push   esi
65012625:	cld    
65012626:	mov    esi,DWORD PTR [esp+0xc]
6501262a:	mov    ecx,DWORD PTR [esi+0x8]
6501262d:	xor    ecx,esi
6501262f:	call   0x6501292c
65012634:	push   0x0
65012636:	push   esi
65012637:	push   DWORD PTR [esi+0x14]
6501263a:	push   DWORD PTR [esi+0xc]
6501263d:	push   0x0
6501263f:	push   DWORD PTR [esp+0x24]
65012643:	push   DWORD PTR [esi+0x10]
65012646:	push   DWORD PTR [esp+0x24]
6501264a:	call   0x650158be
6501264f:	add    esp,0x20
65012652:	pop    esi
65012653:	ret    
65012654:	push   ebp
65012655:	mov    ebp,esp
65012657:	sub    esp,0x38
6501265a:	push   ebx
6501265b:	cmp    DWORD PTR [ebp+0x8],0x123
65012662:	jne    0x65012676
65012664:	mov    eax,0x650126fd
65012669:	mov    ecx,DWORD PTR [ebp+0xc]
6501266c:	mov    DWORD PTR [ecx],eax
6501266e:	xor    eax,eax
65012670:	inc    eax
65012671:	jmp    0x65012726
65012676:	and    DWORD PTR [ebp-0x28],0x0
6501267a:	mov    DWORD PTR [ebp-0x24],0x65012729
65012681:	mov    eax,ds:0x6502c09c
65012686:	lea    ecx,[ebp-0x28]
65012689:	xor    eax,ecx
6501268b:	mov    DWORD PTR [ebp-0x20],eax
6501268e:	mov    eax,DWORD PTR [ebp+0x18]
65012691:	mov    DWORD PTR [ebp-0x1c],eax
65012694:	mov    eax,DWORD PTR [ebp+0xc]
65012697:	mov    DWORD PTR [ebp-0x18],eax
6501269a:	mov    eax,DWORD PTR [ebp+0x1c]
6501269d:	mov    DWORD PTR [ebp-0x14],eax
650126a0:	mov    eax,DWORD PTR [ebp+0x20]
650126a3:	mov    DWORD PTR [ebp-0x10],eax
650126a6:	and    DWORD PTR [ebp-0xc],0x0
650126aa:	and    DWORD PTR [ebp-0x8],0x0
650126ae:	and    DWORD PTR [ebp-0x4],0x0
650126b2:	mov    DWORD PTR [ebp-0xc],esp
650126b5:	mov    DWORD PTR [ebp-0x8],ebp
650126b8:	mov    eax,fs:0x0
650126be:	mov    DWORD PTR [ebp-0x28],eax
650126c1:	lea    eax,[ebp-0x28]
650126c4:	mov    fs:0x0,eax
650126ca:	mov    DWORD PTR [ebp-0x38],0x1
650126d1:	mov    eax,DWORD PTR [ebp+0x8]
650126d4:	mov    DWORD PTR [ebp-0x34],eax
650126d7:	mov    eax,DWORD PTR [ebp+0x10]
650126da:	mov    DWORD PTR [ebp-0x30],eax
650126dd:	call   0x650148cb
650126e2:	mov    eax,DWORD PTR [eax+0x80]
650126e8:	mov    DWORD PTR [ebp-0x2c],eax
650126eb:	lea    eax,[ebp-0x34]
650126ee:	push   eax
650126ef:	mov    eax,DWORD PTR [ebp+0x8]
650126f2:	push   DWORD PTR [eax]
650126f4:	call   DWORD PTR [ebp-0x2c]
650126f7:	pop    ecx
650126f8:	pop    ecx
650126f9:	and    DWORD PTR [ebp-0x38],0x0
650126fd:	cmp    DWORD PTR [ebp-0x4],0x0
65012701:	je     0x6501271a
65012703:	mov    ebx,DWORD PTR fs:0x0
6501270a:	mov    eax,DWORD PTR [ebx]
6501270c:	mov    ebx,DWORD PTR [ebp-0x28]
6501270f:	mov    DWORD PTR [ebx],eax
65012711:	mov    DWORD PTR fs:0x0,ebx
65012718:	jmp    0x65012723
6501271a:	mov    eax,DWORD PTR [ebp-0x28]
6501271d:	mov    fs:0x0,eax
65012723:	mov    eax,DWORD PTR [ebp-0x38]
65012726:	pop    ebx
65012727:	leave  
65012728:	ret    
65012729:	push   ebp
6501272a:	mov    ebp,esp
6501272c:	push   ecx
6501272d:	push   ebx
6501272e:	cld    
6501272f:	mov    eax,DWORD PTR [ebp+0xc]
65012732:	mov    ecx,DWORD PTR [eax+0x8]
65012735:	xor    ecx,DWORD PTR [ebp+0xc]
65012738:	call   0x6501292c
6501273d:	mov    eax,DWORD PTR [ebp+0x8]
65012740:	mov    eax,DWORD PTR [eax+0x4]
65012743:	and    eax,0x66
65012746:	je     0x65012759
65012748:	mov    eax,DWORD PTR [ebp+0xc]
6501274b:	mov    DWORD PTR [eax+0x24],0x1
65012752:	xor    eax,eax
65012754:	inc    eax
65012755:	jmp    0x650127c3
65012757:	jmp    0x650127c3
65012759:	push   0x1
6501275b:	mov    eax,DWORD PTR [ebp+0xc]
6501275e:	push   DWORD PTR [eax+0x18]
65012761:	mov    eax,DWORD PTR [ebp+0xc]
65012764:	push   DWORD PTR [eax+0x14]
65012767:	mov    eax,DWORD PTR [ebp+0xc]
6501276a:	push   DWORD PTR [eax+0xc]
6501276d:	push   0x0
6501276f:	push   DWORD PTR [ebp+0x10]
65012772:	mov    eax,DWORD PTR [ebp+0xc]
65012775:	push   DWORD PTR [eax+0x10]
65012778:	push   DWORD PTR [ebp+0x8]
6501277b:	call   0x650158be
65012780:	add    esp,0x20
65012783:	mov    eax,DWORD PTR [ebp+0xc]
65012786:	cmp    DWORD PTR [eax+0x24],0x0
6501278a:	jne    0x65012797
6501278c:	push   DWORD PTR [ebp+0x8]
6501278f:	push   DWORD PTR [ebp+0xc]
65012792:	call   0x6501259c
65012797:	push   0x0
65012799:	push   0x0
6501279b:	push   0x0
6501279d:	push   0x0
6501279f:	push   0x0
650127a1:	lea    eax,[ebp-0x4]
650127a4:	push   eax
650127a5:	push   0x123
650127aa:	call   0x65012654
650127af:	add    esp,0x1c
650127b2:	mov    eax,DWORD PTR [ebp-0x4]
650127b5:	mov    ebx,DWORD PTR [ebp+0xc]
650127b8:	mov    esp,DWORD PTR [ebx+0x1c]
650127bb:	mov    ebp,DWORD PTR [ebx+0x20]
650127be:	jmp    eax
650127c0:	xor    eax,eax
650127c2:	inc    eax
650127c3:	pop    ebx
650127c4:	leave  
650127c5:	ret    
650127c6:	push   ebp
650127c7:	mov    ebp,esp
650127c9:	push   ecx
650127ca:	push   ebx
650127cb:	push   esi
650127cc:	push   edi
650127cd:	mov    edi,DWORD PTR [ebp+0x8]
650127d0:	mov    eax,DWORD PTR [edi+0x10]
650127d3:	mov    esi,DWORD PTR [edi+0xc]
650127d6:	mov    DWORD PTR [ebp-0x4],eax
650127d9:	mov    ebx,esi
650127db:	jmp    0x6501280a
650127dd:	cmp    esi,0xffffffff
650127e0:	jne    0x650127e7
650127e2:	call   0x650159ee
650127e7:	mov    ecx,DWORD PTR [ebp-0x4]
650127ea:	dec    esi
650127eb:	mov    eax,esi
650127ed:	imul   eax,eax,0x14
650127f0:	add    eax,ecx
650127f2:	mov    ecx,DWORD PTR [ebp+0x10]
650127f5:	cmp    DWORD PTR [eax+0x4],ecx
650127f8:	jge    0x650127ff
650127fa:	cmp    ecx,DWORD PTR [eax+0x8]
650127fd:	jle    0x65012804
650127ff:	cmp    esi,0xffffffff
65012802:	jne    0x6501280d
65012804:	dec    DWORD PTR [ebp+0xc]
65012807:	mov    ebx,DWORD PTR [ebp+0x8]
6501280a:	mov    DWORD PTR [ebp+0x8],esi
6501280d:	cmp    DWORD PTR [ebp+0xc],0x0
65012811:	jge    0x650127dd
65012813:	mov    eax,DWORD PTR [ebp+0x14]
65012816:	inc    esi
65012817:	mov    DWORD PTR [eax],esi
65012819:	mov    eax,DWORD PTR [ebp+0x18]
6501281c:	mov    DWORD PTR [eax],ebx
6501281e:	cmp    ebx,DWORD PTR [edi+0xc]
65012821:	ja     0x65012827
65012823:	cmp    esi,ebx
65012825:	jbe    0x6501282c
65012827:	call   0x650159ee
6501282c:	mov    eax,esi
6501282e:	imul   eax,eax,0x14
65012831:	add    eax,DWORD PTR [ebp-0x4]
65012834:	pop    edi
65012835:	pop    esi
65012836:	pop    ebx
65012837:	leave  
65012838:	ret    
65012839:	mov    eax,DWORD PTR [esp+0x8]
6501283d:	push   esi
6501283e:	mov    esi,DWORD PTR [esp+0x8]
65012842:	mov    DWORD PTR [esi],eax
65012844:	call   0x650148cb
65012849:	mov    eax,DWORD PTR [eax+0x98]
6501284f:	mov    DWORD PTR [esi+0x4],eax
65012852:	call   0x650148cb
65012857:	mov    DWORD PTR [eax+0x98],esi
6501285d:	mov    eax,esi
6501285f:	pop    esi
65012860:	ret    
65012861:	call   0x650148cb
65012866:	mov    eax,DWORD PTR [eax+0x98]
6501286c:	jmp    0x65012879
6501286e:	mov    ecx,DWORD PTR [eax]
65012870:	cmp    ecx,DWORD PTR [esp+0x4]
65012874:	je     0x6501287f
65012876:	mov    eax,DWORD PTR [eax+0x4]
65012879:	test   eax,eax
6501287b:	jne    0x6501286e
6501287d:	inc    eax
6501287e:	ret    
6501287f:	xor    eax,eax
65012881:	ret    
65012882:	push   esi
65012883:	call   0x650148cb
65012888:	mov    esi,DWORD PTR [esp+0x8]
6501288c:	cmp    esi,DWORD PTR [eax+0x98]
65012892:	jne    0x650128a4
65012894:	call   0x650148cb
65012899:	mov    ecx,DWORD PTR [esi+0x4]
6501289c:	mov    DWORD PTR [eax+0x98],ecx
650128a2:	pop    esi
650128a3:	ret    
650128a4:	call   0x650148cb
650128a9:	mov    eax,DWORD PTR [eax+0x98]
650128af:	jmp    0x650128ba
650128b1:	mov    ecx,DWORD PTR [eax+0x4]
650128b4:	cmp    esi,ecx
650128b6:	je     0x650128c6
650128b8:	mov    eax,ecx
650128ba:	cmp    DWORD PTR [eax+0x4],0x0
650128be:	jne    0x650128b1
650128c0:	pop    esi
650128c1:	jmp    0x650159ee
650128c6:	mov    ecx,DWORD PTR [esi+0x4]
650128c9:	mov    DWORD PTR [eax+0x4],ecx
650128cc:	pop    esi
650128cd:	ret    
650128ce:	push   ebp
650128cf:	mov    ebp,esp
650128d1:	sub    esp,0x18
650128d4:	mov    eax,ds:0x6502c09c
650128d9:	and    DWORD PTR [ebp-0x18],0x0
650128dd:	lea    ecx,[ebp-0x18]
650128e0:	xor    eax,ecx
650128e2:	mov    ecx,DWORD PTR [ebp+0x8]
650128e5:	mov    DWORD PTR [ebp-0x10],eax
650128e8:	mov    eax,DWORD PTR [ebp+0xc]
650128eb:	mov    DWORD PTR [ebp-0xc],eax
650128ee:	mov    eax,DWORD PTR [ebp+0x14]
650128f1:	inc    eax
650128f2:	mov    DWORD PTR [ebp-0x14],0x65012624
650128f9:	mov    DWORD PTR [ebp-0x8],ecx
650128fc:	mov    DWORD PTR [ebp-0x4],eax
650128ff:	mov    eax,fs:0x0
65012905:	mov    DWORD PTR [ebp-0x18],eax
65012908:	lea    eax,[ebp-0x18]
6501290b:	mov    fs:0x0,eax
65012911:	push   DWORD PTR [ebp+0x18]
65012914:	push   ecx
65012915:	push   DWORD PTR [ebp+0x10]
65012918:	call   0x65015a40
6501291d:	mov    ecx,eax
6501291f:	mov    eax,DWORD PTR [ebp-0x18]
65012922:	mov    fs:0x0,eax
65012928:	mov    eax,ecx
6501292a:	leave  
6501292b:	ret    
6501292c:	cmp    ecx,DWORD PTR ds:0x6502c09c
65012932:	jne    0x65012936
65012934:	repz ret 
65012936:	jmp    0x65015a8c
6501293b:	push   ecx
6501293c:	push   ebx
6501293d:	push   ebp
6501293e:	push   esi
6501293f:	push   edi
65012940:	push   DWORD PTR ds:0x65031570
65012946:	call   0x650146af
6501294b:	push   DWORD PTR ds:0x6503156c
65012951:	mov    esi,eax
65012953:	mov    DWORD PTR [esp+0x18],esi
65012957:	call   0x650146af
6501295c:	mov    edi,eax
6501295e:	cmp    edi,esi
65012960:	pop    ecx
65012961:	pop    ecx
65012962:	jb     0x650129ec
65012968:	mov    ebx,edi
6501296a:	sub    ebx,esi
6501296c:	lea    ebp,[ebx+0x4]
6501296f:	cmp    ebp,0x4
65012972:	jb     0x650129ec
65012974:	push   esi
65012975:	call   0x65015c63
6501297a:	mov    esi,eax
6501297c:	cmp    esi,ebp
6501297e:	pop    ecx
6501297f:	jae    0x650129cb
65012981:	mov    eax,0x800
65012986:	cmp    esi,eax
65012988:	jae    0x6501298c
6501298a:	mov    eax,esi
6501298c:	add    eax,esi
6501298e:	cmp    eax,esi
65012990:	jb     0x650129a2
65012992:	push   eax
65012993:	push   DWORD PTR [esp+0x14]
65012997:	call   0x65015c18
6501299c:	test   eax,eax
6501299e:	pop    ecx
6501299f:	pop    ecx
650129a0:	jne    0x650129b9
650129a2:	lea    eax,[esi+0x10]
650129a5:	cmp    eax,esi
650129a7:	jb     0x650129ec
650129a9:	push   eax
650129aa:	push   DWORD PTR [esp+0x14]
650129ae:	call   0x65015c18
650129b3:	test   eax,eax
650129b5:	pop    ecx
650129b6:	pop    ecx
650129b7:	je     0x650129ec
650129b9:	sar    ebx,0x2
650129bc:	push   eax
650129bd:	lea    edi,[eax+ebx*4]
650129c0:	call   0x65014638
650129c5:	pop    ecx
650129c6:	mov    ds:0x65031570,eax
650129cb:	push   DWORD PTR [esp+0x18]
650129cf:	call   0x65014638
650129d4:	mov    DWORD PTR [edi],eax
650129d6:	add    edi,0x4
650129d9:	push   edi
650129da:	call   0x65014638
650129df:	pop    ecx
650129e0:	mov    ds:0x6503156c,eax
650129e5:	mov    eax,DWORD PTR [esp+0x1c]
650129e9:	pop    ecx
650129ea:	jmp    0x650129ee
650129ec:	xor    eax,eax
650129ee:	pop    edi
650129ef:	pop    esi
650129f0:	pop    ebp
650129f1:	pop    ebx
650129f2:	pop    ecx
650129f3:	ret    
650129f4:	push   esi
650129f5:	push   0x4
650129f7:	push   0x20
650129f9:	call   0x65015bd0
650129fe:	mov    esi,eax
65012a00:	push   esi
65012a01:	call   0x65014638
65012a06:	add    esp,0xc
65012a09:	test   esi,esi
65012a0b:	mov    ds:0x65031570,eax
65012a10:	mov    ds:0x6503156c,eax
65012a15:	jne    0x65012a1c
65012a17:	push   0x18
65012a19:	pop    eax
65012a1a:	pop    esi
65012a1b:	ret    
65012a1c:	and    DWORD PTR [esi],0x0
65012a1f:	xor    eax,eax
65012a21:	pop    esi
65012a22:	ret    
65012a23:	push   0xc
65012a25:	push   0x65029a08
65012a2a:	call   0x65013e70
65012a2f:	call   0x65015d65
65012a34:	and    DWORD PTR [ebp-0x4],0x0
65012a38:	push   DWORD PTR [ebp+0x8]
65012a3b:	call   0x6501293b
65012a40:	pop    ecx
65012a41:	mov    DWORD PTR [ebp-0x1c],eax
65012a44:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65012a4b:	call   0x65012a59
65012a50:	mov    eax,DWORD PTR [ebp-0x1c]
65012a53:	call   0x65013eb5
65012a58:	ret    
65012a59:	call   0x65015d6e
65012a5e:	ret    
65012a5f:	push   DWORD PTR [esp+0x4]
65012a63:	call   0x65012a23
65012a68:	neg    eax
65012a6a:	sbb    eax,eax
65012a6c:	neg    eax
65012a6e:	pop    ecx
65012a6f:	dec    eax
65012a70:	ret    
65012a71:	mov    eax,DWORD PTR [esp+0x4]
65012a75:	push   ebx
65012a76:	mov    ebx,DWORD PTR [esp+0xc]
65012a7a:	cmp    WORD PTR [ebx],0x0
65012a7e:	push   edi
65012a7f:	mov    edi,eax
65012a81:	je     0x65012ac8
65012a83:	movzx  ecx,WORD PTR [eax]
65012a86:	test   cx,cx
65012a89:	je     0x65012ac6
65012a8b:	movzx  edx,cx
65012a8e:	sub    eax,ebx
65012a90:	test   dx,dx
65012a93:	mov    ecx,DWORD PTR [esp+0x10]
65012a97:	je     0x65012ab4
65012a99:	movzx  edx,WORD PTR [ecx]
65012a9c:	test   dx,dx
65012a9f:	je     0x65012acb
65012aa1:	movzx  ebx,WORD PTR [eax+ecx*1]
65012aa5:	movzx  edx,dx
65012aa8:	sub    ebx,edx
65012aaa:	jne    0x65012ab4
65012aac:	inc    ecx
65012aad:	inc    ecx
65012aae:	cmp    WORD PTR [eax+ecx*1],bx
65012ab2:	jne    0x65012a99
65012ab4:	cmp    WORD PTR [ecx],0x0
65012ab8:	je     0x65012acb
65012aba:	inc    edi
65012abb:	inc    edi
65012abc:	movzx  edx,WORD PTR [edi]
65012abf:	inc    eax
65012ac0:	inc    eax
65012ac1:	test   dx,dx
65012ac4:	jne    0x65012a90
65012ac6:	xor    eax,eax
65012ac8:	pop    edi
65012ac9:	pop    ebx
65012aca:	ret    
65012acb:	mov    eax,edi
65012acd:	jmp    0x65012ac8
65012acf:	mov    eax,DWORD PTR [esp+0x4]
65012ad3:	test   eax,eax
65012ad5:	push   esi
65012ad6:	mov    esi,ecx
65012ad8:	mov    BYTE PTR [esi+0xc],0x0
65012adc:	jne    0x65012b41
65012ade:	call   0x650148cb
65012ae3:	mov    DWORD PTR [esi+0x8],eax
65012ae6:	mov    ecx,DWORD PTR [eax+0x6c]
65012ae9:	mov    DWORD PTR [esi],ecx
65012aeb:	mov    ecx,DWORD PTR [eax+0x68]
65012aee:	mov    DWORD PTR [esi+0x4],ecx
65012af1:	mov    ecx,DWORD PTR [esi]
65012af3:	cmp    ecx,DWORD PTR ds:0x6502c870
65012af9:	je     0x65012b0d
65012afb:	mov    ecx,DWORD PTR ds:0x6502c78c
65012b01:	test   DWORD PTR [eax+0x70],ecx
65012b04:	jne    0x65012b0d
65012b06:	call   0x6501694f
65012b0b:	mov    DWORD PTR [esi],eax
65012b0d:	mov    eax,DWORD PTR [esi+0x4]
65012b10:	cmp    eax,DWORD PTR ds:0x6502c690
65012b16:	je     0x65012b2e
65012b18:	mov    eax,DWORD PTR [esi+0x8]
65012b1b:	mov    ecx,DWORD PTR ds:0x6502c78c
65012b21:	test   DWORD PTR [eax+0x70],ecx
65012b24:	jne    0x65012b2e
65012b26:	call   0x65016210
65012b2b:	mov    DWORD PTR [esi+0x4],eax
65012b2e:	mov    eax,DWORD PTR [esi+0x8]
65012b31:	test   BYTE PTR [eax+0x70],0x2
65012b35:	jne    0x65012b4b
65012b37:	or     DWORD PTR [eax+0x70],0x2
65012b3b:	mov    BYTE PTR [esi+0xc],0x1
65012b3f:	jmp    0x65012b4b
65012b41:	mov    ecx,DWORD PTR [eax]
65012b43:	mov    DWORD PTR [esi],ecx
65012b45:	mov    eax,DWORD PTR [eax+0x4]
65012b48:	mov    DWORD PTR [esi+0x4],eax
65012b4b:	mov    eax,esi
65012b4d:	pop    esi
65012b4e:	ret    0x4
65012b51:	push   ebp
65012b52:	mov    ebp,esp
65012b54:	sub    esp,0x20
65012b57:	push   esi
65012b58:	xor    esi,esi
65012b5a:	cmp    DWORD PTR [ebp+0xc],esi
65012b5d:	jne    0x65012b7c
65012b5f:	call   0x65014580
65012b64:	push   esi
65012b65:	push   esi
65012b66:	push   esi
65012b67:	push   esi
65012b68:	push   esi
65012b69:	mov    DWORD PTR [eax],0x16
65012b6f:	call   0x6501241f
65012b74:	add    esp,0x14
65012b77:	or     eax,0xffffffff
65012b7a:	jmp    0x65012ba3
65012b7c:	push   DWORD PTR [ebp+0x14]
65012b7f:	lea    eax,[ebp-0x20]
65012b82:	push   DWORD PTR [ebp+0x10]
65012b85:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
65012b8c:	push   DWORD PTR [ebp+0xc]
65012b8f:	mov    DWORD PTR [ebp-0x14],0x42
65012b96:	push   eax
65012b97:	mov    DWORD PTR [ebp-0x18],esi
65012b9a:	mov    DWORD PTR [ebp-0x20],esi
65012b9d:	call   DWORD PTR [ebp+0x8]
65012ba0:	add    esp,0x10
65012ba3:	pop    esi
65012ba4:	leave  
65012ba5:	ret    
65012ba6:	push   DWORD PTR [esp+0x8]
65012baa:	push   0x0
65012bac:	push   DWORD PTR [esp+0xc]
65012bb0:	push   0x65016b4a
65012bb5:	call   0x65012b51
65012bba:	add    esp,0x10
65012bbd:	ret    
65012bbe:	push   ebp
65012bbf:	mov    ebp,esp
65012bc1:	sub    esp,0x20
65012bc4:	push   ebx
65012bc5:	xor    ebx,ebx
65012bc7:	cmp    DWORD PTR [ebp+0x14],ebx
65012bca:	jne    0x65012bec
65012bcc:	call   0x65014580
65012bd1:	push   ebx
65012bd2:	push   ebx
65012bd3:	push   ebx
65012bd4:	push   ebx
65012bd5:	push   ebx
65012bd6:	mov    DWORD PTR [eax],0x16
65012bdc:	call   0x6501241f
65012be1:	add    esp,0x14
65012be4:	or     eax,0xffffffff
65012be7:	jmp    0x65012cb1
65012bec:	push   esi
65012bed:	mov    esi,DWORD PTR [ebp+0xc]
65012bf0:	push   edi
65012bf1:	mov    edi,DWORD PTR [ebp+0x10]
65012bf4:	cmp    edi,ebx
65012bf6:	je     0x65012c1c
65012bf8:	cmp    esi,ebx
65012bfa:	jne    0x65012c1c
65012bfc:	call   0x65014580
65012c01:	push   ebx
65012c02:	push   ebx
65012c03:	push   ebx
65012c04:	push   ebx
65012c05:	push   ebx
65012c06:	mov    DWORD PTR [eax],0x16
65012c0c:	call   0x6501241f
65012c11:	add    esp,0x14
65012c14:	or     eax,0xffffffff
65012c17:	jmp    0x65012caf
65012c1c:	cmp    edi,0x3fffffff
65012c22:	mov    DWORD PTR [ebp-0x14],0x42
65012c29:	mov    DWORD PTR [ebp-0x18],esi
65012c2c:	mov    DWORD PTR [ebp-0x20],esi
65012c2f:	jbe    0x65012c3a
65012c31:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
65012c38:	jmp    0x65012c40
65012c3a:	lea    eax,[edi+edi*1]
65012c3d:	mov    DWORD PTR [ebp-0x1c],eax
65012c40:	push   DWORD PTR [ebp+0x1c]
65012c43:	lea    eax,[ebp-0x20]
65012c46:	push   DWORD PTR [ebp+0x18]
65012c49:	push   DWORD PTR [ebp+0x14]
65012c4c:	push   eax
65012c4d:	call   DWORD PTR [ebp+0x8]
65012c50:	add    esp,0x10
65012c53:	cmp    esi,ebx
65012c55:	mov    DWORD PTR [ebp+0x14],eax
65012c58:	je     0x65012caf
65012c5a:	cmp    eax,ebx
65012c5c:	jl     0x65012ca0
65012c5e:	dec    DWORD PTR [ebp-0x1c]
65012c61:	js     0x65012c6d
65012c63:	mov    eax,DWORD PTR [ebp-0x20]
65012c66:	mov    BYTE PTR [eax],bl
65012c68:	inc    DWORD PTR [ebp-0x20]
65012c6b:	jmp    0x65012c7e
65012c6d:	lea    eax,[ebp-0x20]
65012c70:	push   eax
65012c71:	push   ebx
65012c72:	call   0x650169c5
65012c77:	cmp    eax,0xffffffff
65012c7a:	pop    ecx
65012c7b:	pop    ecx
65012c7c:	je     0x65012ca0
65012c7e:	dec    DWORD PTR [ebp-0x1c]
65012c81:	js     0x65012c8a
65012c83:	mov    eax,DWORD PTR [ebp-0x20]
65012c86:	mov    BYTE PTR [eax],bl
65012c88:	jmp    0x65012c9b
65012c8a:	lea    eax,[ebp-0x20]
65012c8d:	push   eax
65012c8e:	push   ebx
65012c8f:	call   0x650169c5
65012c94:	cmp    eax,0xffffffff
65012c97:	pop    ecx
65012c98:	pop    ecx
65012c99:	je     0x65012ca0
65012c9b:	mov    eax,DWORD PTR [ebp+0x14]
65012c9e:	jmp    0x65012caf
65012ca0:	xor    eax,eax
65012ca2:	cmp    DWORD PTR [ebp-0x1c],ebx
65012ca5:	mov    WORD PTR [esi+edi*2-0x2],bx
65012caa:	setge  al
65012cad:	dec    eax
65012cae:	dec    eax
65012caf:	pop    edi
65012cb0:	pop    esi
65012cb1:	pop    ebx
65012cb2:	leave  
65012cb3:	ret    
65012cb4:	push   ebp
65012cb5:	mov    ebp,esp
65012cb7:	push   esi
65012cb8:	xor    esi,esi
65012cba:	cmp    DWORD PTR [ebp+0x10],esi
65012cbd:	jne    0x65012cdc
65012cbf:	call   0x65014580
65012cc4:	push   esi
65012cc5:	push   esi
65012cc6:	push   esi
65012cc7:	push   esi
65012cc8:	push   esi
65012cc9:	mov    DWORD PTR [eax],0x16
65012ccf:	call   0x6501241f
65012cd4:	add    esp,0x14
65012cd7:	or     eax,0xffffffff
65012cda:	jmp    0x65012d38
65012cdc:	push   edi
65012cdd:	mov    edi,DWORD PTR [ebp+0x8]
65012ce0:	cmp    edi,esi
65012ce2:	je     0x65012ce9
65012ce4:	cmp    DWORD PTR [ebp+0xc],esi
65012ce7:	ja     0x65012cf6
65012ce9:	call   0x65014580
65012cee:	mov    DWORD PTR [eax],0x16
65012cf4:	jmp    0x65012d27
65012cf6:	push   DWORD PTR [ebp+0x18]
65012cf9:	push   DWORD PTR [ebp+0x14]
65012cfc:	push   DWORD PTR [ebp+0x10]
65012cff:	push   DWORD PTR [ebp+0xc]
65012d02:	push   edi
65012d03:	push   0x650174ce
65012d08:	call   0x65012bbe
65012d0d:	add    esp,0x18
65012d10:	cmp    eax,esi
65012d12:	jge    0x65012d17
65012d14:	mov    WORD PTR [edi],si
65012d17:	cmp    eax,0xfffffffe
65012d1a:	jne    0x65012d37
65012d1c:	call   0x65014580
65012d21:	mov    DWORD PTR [eax],0x22
65012d27:	push   esi
65012d28:	push   esi
65012d29:	push   esi
65012d2a:	push   esi
65012d2b:	push   esi
65012d2c:	call   0x6501241f
65012d31:	add    esp,0x14
65012d34:	or     eax,0xffffffff
65012d37:	pop    edi
65012d38:	pop    esi
65012d39:	pop    ebp
65012d3a:	ret    
65012d3b:	push   DWORD PTR [esp+0x10]
65012d3f:	push   0x0
65012d41:	push   DWORD PTR [esp+0x14]
65012d45:	push   DWORD PTR [esp+0x14]
65012d49:	push   DWORD PTR [esp+0x14]
65012d4d:	call   0x65012cb4
65012d52:	add    esp,0x14
65012d55:	ret    
65012d56:	mov    ecx,DWORD PTR [esp+0x4]
65012d5a:	push   ebx
65012d5b:	push   esi
65012d5c:	push   edi
65012d5d:	xor    edi,edi
65012d5f:	cmp    ecx,edi
65012d61:	je     0x65012d6b
65012d63:	mov    ebx,DWORD PTR [esp+0x14]
65012d67:	cmp    ebx,edi
65012d69:	ja     0x65012d86
65012d6b:	call   0x65014580
65012d70:	push   0x16
65012d72:	pop    esi
65012d73:	mov    DWORD PTR [eax],esi
65012d75:	push   edi
65012d76:	push   edi
65012d77:	push   edi
65012d78:	push   edi
65012d79:	push   edi
65012d7a:	call   0x6501241f
65012d7f:	add    esp,0x14
65012d82:	mov    eax,esi
65012d84:	jmp    0x65012dbe
65012d86:	mov    esi,DWORD PTR [esp+0x18]
65012d8a:	cmp    esi,edi
65012d8c:	jne    0x65012d93
65012d8e:	mov    WORD PTR [ecx],di
65012d91:	jmp    0x65012d6b
65012d93:	mov    edx,ecx
65012d95:	movzx  eax,WORD PTR [esi]
65012d98:	mov    WORD PTR [edx],ax
65012d9b:	inc    edx
65012d9c:	inc    edx
65012d9d:	inc    esi
65012d9e:	inc    esi
65012d9f:	cmp    ax,di
65012da2:	je     0x65012da7
65012da4:	dec    ebx
65012da5:	jne    0x65012d95
65012da7:	cmp    ebx,edi
65012da9:	jne    0x65012dbc
65012dab:	mov    WORD PTR [ecx],di
65012dae:	call   0x65014580
65012db3:	push   0x22
65012db5:	pop    ecx
65012db6:	mov    DWORD PTR [eax],ecx
65012db8:	mov    esi,ecx
65012dba:	jmp    0x65012d75
65012dbc:	xor    eax,eax
65012dbe:	pop    edi
65012dbf:	pop    esi
65012dc0:	pop    ebx
65012dc1:	ret    
65012dc2:	mov    eax,DWORD PTR [esp+0x4]
65012dc6:	test   eax,eax
65012dc8:	je     0x65012ddc
65012dca:	sub    eax,0x8
65012dcd:	cmp    DWORD PTR [eax],0xdddd
65012dd3:	jne    0x65012ddc
65012dd5:	push   eax
65012dd6:	call   0x65013746
65012ddb:	pop    ecx
65012ddc:	ret    
65012ddd:	push   ebp
65012dde:	mov    ebp,esp
65012de0:	sub    esp,0xc
65012de3:	mov    eax,ds:0x6502c09c
65012de8:	xor    eax,ebp
65012dea:	mov    DWORD PTR [ebp-0x4],eax
65012ded:	push   esi
65012dee:	xor    esi,esi
65012df0:	cmp    ebx,esi
65012df2:	push   edi
65012df3:	jne    0x65012e13
65012df5:	call   0x65014580
65012dfa:	push   0x16
65012dfc:	pop    edi
65012dfd:	push   esi
65012dfe:	push   esi
65012dff:	push   esi
65012e00:	push   esi
65012e01:	push   esi
65012e02:	mov    DWORD PTR [eax],edi
65012e04:	call   0x6501241f
65012e09:	add    esp,0x14
65012e0c:	mov    eax,edi
65012e0e:	jmp    0x65012f53
65012e13:	push   DWORD PTR [ebp+0x8]
65012e16:	push   ebx
65012e17:	call   0x6501808b
65012e1c:	cmp    eax,DWORD PTR [ebp+0x8]
65012e1f:	pop    ecx
65012e20:	pop    ecx
65012e21:	jb     0x65012e28
65012e23:	mov    WORD PTR [ebx],si
65012e26:	jmp    0x65012df5
65012e28:	mov    edx,DWORD PTR [ebp+0xc]
65012e2b:	mov    eax,DWORD PTR [edx]
65012e2d:	mov    ecx,DWORD PTR [eax+0x14]
65012e30:	cmp    ecx,esi
65012e32:	jne    0x65012e5e
65012e34:	cmp    WORD PTR [ebx],si
65012e37:	mov    eax,ebx
65012e39:	je     0x65012e57
65012e3b:	movzx  ecx,WORD PTR [eax]
65012e3e:	cmp    cx,0x41
65012e42:	jb     0x65012e50
65012e44:	cmp    cx,0x5a
65012e48:	ja     0x65012e50
65012e4a:	add    ecx,0x20
65012e4d:	mov    WORD PTR [eax],cx
65012e50:	inc    eax
65012e51:	inc    eax
65012e52:	cmp    WORD PTR [eax],si
65012e55:	jne    0x65012e3b
65012e57:	xor    eax,eax
65012e59:	jmp    0x65012f53
65012e5e:	push   DWORD PTR [eax+0x4]
65012e61:	mov    edi,0x100
65012e66:	push   esi
65012e67:	push   esi
65012e68:	push   0xffffffff
65012e6a:	push   ebx
65012e6b:	push   edi
65012e6c:	push   ecx
65012e6d:	push   edx
65012e6e:	call   0x6501804b
65012e73:	mov    ecx,eax
65012e75:	add    esp,0x20
65012e78:	cmp    ecx,esi
65012e7a:	mov    DWORD PTR [ebp-0xc],ecx
65012e7d:	jne    0x65012e96
65012e7f:	call   0x65014580
65012e84:	mov    DWORD PTR [eax],0x2a
65012e8a:	call   0x65014580
65012e8f:	mov    eax,DWORD PTR [eax]
65012e91:	jmp    0x65012f53
65012e96:	cmp    DWORD PTR [ebp+0x8],ecx
65012e99:	jae    0x65012eaa
65012e9b:	mov    WORD PTR [ebx],si
65012e9e:	call   0x65014580
65012ea3:	push   0x22
65012ea5:	jmp    0x65012dfc
65012eaa:	cmp    ecx,esi
65012eac:	jle    0x65012ef4
65012eae:	push   0xffffffe0
65012eb0:	xor    edx,edx
65012eb2:	pop    eax
65012eb3:	div    ecx
65012eb5:	cmp    eax,0x2
65012eb8:	jb     0x65012ef4
65012eba:	lea    eax,[ecx+ecx*1+0x8]
65012ebe:	cmp    eax,0x400
65012ec3:	ja     0x65012ed8
65012ec5:	call   0x65013030
65012eca:	mov    eax,esp
65012ecc:	cmp    eax,esi
65012ece:	je     0x65012eec
65012ed0:	mov    DWORD PTR [eax],0xcccc
65012ed6:	jmp    0x65012ee9
65012ed8:	push   eax
65012ed9:	call   0x65013823
65012ede:	cmp    eax,esi
65012ee0:	pop    ecx
65012ee1:	je     0x65012eec
65012ee3:	mov    DWORD PTR [eax],0xdddd
65012ee9:	add    eax,0x8
65012eec:	mov    ecx,DWORD PTR [ebp-0xc]
65012eef:	mov    DWORD PTR [ebp-0x8],eax
65012ef2:	jmp    0x65012ef7
65012ef4:	mov    DWORD PTR [ebp-0x8],esi
65012ef7:	cmp    DWORD PTR [ebp-0x8],esi
65012efa:	jne    0x65012f09
65012efc:	call   0x65014580
65012f01:	mov    DWORD PTR [eax],0xc
65012f07:	jmp    0x65012e8a
65012f09:	mov    edx,DWORD PTR [ebp+0xc]
65012f0c:	mov    eax,DWORD PTR [edx]
65012f0e:	push   DWORD PTR [eax+0x4]
65012f11:	push   ecx
65012f12:	push   DWORD PTR [ebp-0x8]
65012f15:	push   0xffffffff
65012f17:	push   ebx
65012f18:	push   edi
65012f19:	push   DWORD PTR [eax+0x14]
65012f1c:	push   edx
65012f1d:	call   0x6501804b
65012f22:	add    esp,0x20
65012f25:	test   eax,eax
65012f27:	je     0x65012f3c
65012f29:	push   DWORD PTR [ebp-0x8]
65012f2c:	push   DWORD PTR [ebp+0x8]
65012f2f:	push   ebx
65012f30:	call   0x65012d56
65012f35:	add    esp,0xc
65012f38:	mov    esi,eax
65012f3a:	jmp    0x65012f48
65012f3c:	call   0x65014580
65012f41:	push   0x2a
65012f43:	pop    ecx
65012f44:	mov    DWORD PTR [eax],ecx
65012f46:	mov    esi,ecx
65012f48:	push   DWORD PTR [ebp-0x8]
65012f4b:	call   0x65012dc2
65012f50:	pop    ecx
65012f51:	mov    eax,esi
65012f53:	lea    esp,[ebp-0x14]
65012f56:	pop    edi
65012f57:	pop    esi
65012f58:	mov    ecx,DWORD PTR [ebp-0x4]
65012f5b:	xor    ecx,ebp
65012f5d:	call   0x6501292c
65012f62:	leave  
65012f63:	ret    
65012f64:	push   ebp
65012f65:	mov    ebp,esp
65012f67:	sub    esp,0x10
65012f6a:	push   ebx
65012f6b:	push   DWORD PTR [ebp+0x10]
65012f6e:	lea    ecx,[ebp-0x10]
65012f71:	call   0x65012acf
65012f76:	mov    ebx,DWORD PTR [ebp+0x8]
65012f79:	lea    eax,[ebp-0x10]
65012f7c:	push   eax
65012f7d:	push   DWORD PTR [ebp+0xc]
65012f80:	call   0x65012ddd
65012f85:	cmp    BYTE PTR [ebp-0x4],0x0
65012f89:	pop    ecx
65012f8a:	pop    ecx
65012f8b:	pop    ebx
65012f8c:	je     0x65012f95
65012f8e:	mov    ecx,DWORD PTR [ebp-0x8]
65012f91:	and    DWORD PTR [ecx+0x70],0xfffffffd
65012f95:	leave  
65012f96:	ret    
65012f97:	push   0x0
65012f99:	push   DWORD PTR [esp+0xc]
65012f9d:	push   DWORD PTR [esp+0xc]
65012fa1:	call   0x65012f64
65012fa6:	add    esp,0xc
65012fa9:	ret    
65012faa:	jmp    0x650120d2
65012faf:	int3   
65012fb0:	mov    edx,DWORD PTR [esp+0xc]
65012fb4:	mov    ecx,DWORD PTR [esp+0x4]
65012fb8:	test   edx,edx
65012fba:	je     0x65013025
65012fbc:	xor    eax,eax
65012fbe:	mov    al,BYTE PTR [esp+0x8]
65012fc2:	test   al,al
65012fc4:	jne    0x65012fdc
65012fc6:	cmp    edx,0x100
65012fcc:	jb     0x65012fdc
65012fce:	cmp    DWORD PTR ds:0x65031564,0x0
65012fd5:	je     0x65012fdc
65012fd7:	jmp    0x650180fe
65012fdc:	push   edi
65012fdd:	mov    edi,ecx
65012fdf:	cmp    edx,0x4
65012fe2:	jb     0x65013015
65012fe4:	neg    ecx
65012fe6:	and    ecx,0x3
65012fe9:	je     0x65012ff7
65012feb:	sub    edx,ecx
65012fed:	mov    BYTE PTR [edi],al
65012fef:	add    edi,0x1
65012ff2:	sub    ecx,0x1
65012ff5:	jne    0x65012fed
65012ff7:	mov    ecx,eax
65012ff9:	shl    eax,0x8
65012ffc:	add    eax,ecx
65012ffe:	mov    ecx,eax
65013000:	shl    eax,0x10
65013003:	add    eax,ecx
65013005:	mov    ecx,edx
65013007:	and    edx,0x3
6501300a:	shr    ecx,0x2
6501300d:	je     0x65013015
6501300f:	rep stos DWORD PTR es:[edi],eax
65013011:	test   edx,edx
65013013:	je     0x6501301f
65013015:	mov    BYTE PTR [edi],al
65013017:	add    edi,0x1
6501301a:	sub    edx,0x1
6501301d:	jne    0x65013015
6501301f:	mov    eax,DWORD PTR [esp+0x8]
65013023:	pop    edi
65013024:	ret    
65013025:	mov    eax,DWORD PTR [esp+0x4]
65013029:	ret    
6501302a:	int3   
6501302b:	int3   
6501302c:	int3   
6501302d:	int3   
6501302e:	int3   
6501302f:	int3   
65013030:	push   ecx
65013031:	lea    ecx,[esp+0x8]
65013035:	sub    ecx,eax
65013037:	and    ecx,0xf
6501303a:	add    eax,ecx
6501303c:	sbb    ecx,ecx
6501303e:	or     eax,ecx
65013040:	pop    ecx
65013041:	jmp    0x650181b0
65013046:	push   ecx
65013047:	lea    ecx,[esp+0x8]
6501304b:	sub    ecx,eax
6501304d:	and    ecx,0x7
65013050:	add    eax,ecx
65013052:	sbb    ecx,ecx
65013054:	or     eax,ecx
65013056:	pop    ecx
65013057:	jmp    0x650181b0
6501305c:	call   0x650148cb
65013061:	mov    ecx,DWORD PTR [esp+0x4]
65013065:	mov    DWORD PTR [eax+0x14],ecx
65013068:	ret    
65013069:	call   0x650148cb
6501306e:	mov    ecx,DWORD PTR [eax+0x14]
65013071:	imul   ecx,ecx,0x343fd
65013077:	add    ecx,0x269ec3
6501307d:	mov    DWORD PTR [eax+0x14],ecx
65013080:	mov    eax,ecx
65013082:	shr    eax,0x10
65013085:	and    eax,0x7fff
6501308a:	ret    
6501308b:	push   ebp
6501308c:	mov    ebp,esp
6501308e:	push   ecx
6501308f:	mov    eax,DWORD PTR [ebp+0xc]
65013092:	cmp    eax,0x1
65013095:	push   ebx
65013096:	push   esi
65013097:	push   edi
65013098:	jne    0x650131b5
6501309e:	mov    ebx,DWORD PTR ds:0x650240fc
650130a4:	mov    edi,0x94
650130a9:	push   edi
650130aa:	push   0x0
650130ac:	call   ebx
650130ae:	push   eax
650130af:	call   DWORD PTR ds:0x650240ec
650130b5:	mov    esi,eax
650130b7:	test   esi,esi
650130b9:	jne    0x650130c2
650130bb:	xor    eax,eax
650130bd:	jmp    0x6501325d
650130c2:	push   esi
650130c3:	mov    DWORD PTR [esi],edi
650130c5:	call   DWORD PTR ds:0x650240e0
650130cb:	test   eax,eax
650130cd:	push   esi
650130ce:	push   0x0
650130d0:	jne    0x650130dd
650130d2:	call   ebx
650130d4:	push   eax
650130d5:	call   DWORD PTR ds:0x650240f0
650130db:	jmp    0x650130bb
650130dd:	mov    eax,DWORD PTR [esi+0x10]
650130e0:	mov    edi,DWORD PTR [esi+0xc]
650130e3:	mov    DWORD PTR [ebp+0xc],eax
650130e6:	mov    eax,DWORD PTR [esi+0x4]
650130e9:	mov    DWORD PTR [ebp+0x10],eax
650130ec:	mov    eax,DWORD PTR [esi+0x8]
650130ef:	mov    DWORD PTR [ebp-0x4],eax
650130f2:	and    edi,0x7fff
650130f8:	call   ebx
650130fa:	push   eax
650130fb:	call   DWORD PTR ds:0x650240f0
65013101:	mov    eax,DWORD PTR [ebp+0xc]
65013104:	cmp    eax,0x2
65013107:	je     0x6501310f
65013109:	or     edi,0x8000
6501310f:	mov    ecx,DWORD PTR [ebp-0x4]
65013112:	mov    ds:0x6502d8f4,eax
65013117:	mov    eax,DWORD PTR [ebp+0x10]
6501311a:	mov    edx,eax
6501311c:	shl    edx,0x8
6501311f:	add    edx,ecx
65013121:	push   0x1
65013123:	mov    DWORD PTR ds:0x6502d8fc,edx
65013129:	mov    ds:0x6502d900,eax
6501312e:	mov    DWORD PTR ds:0x6502d904,ecx
65013134:	mov    DWORD PTR ds:0x6502d8f8,edi
6501313a:	call   0x6501897f
6501313f:	test   eax,eax
65013141:	pop    ecx
65013142:	je     0x650130bb
65013148:	call   0x65014a6d
6501314d:	test   eax,eax
6501314f:	jne    0x6501315b
65013151:	call   0x650189d9
65013156:	jmp    0x650130bb
6501315b:	call   0x650188dc
65013160:	call   DWORD PTR ds:0x65024118
65013166:	mov    ds:0x65031580,eax
6501316b:	call   0x650187a7
65013170:	mov    ds:0x6502d594,eax
65013175:	call   0x650181db
6501317a:	test   eax,eax
6501317c:	jge    0x65013185
6501317e:	call   0x65014758
65013183:	jmp    0x65013151
65013185:	call   0x650186ee
6501318a:	test   eax,eax
6501318c:	jl     0x650131ae
6501318e:	call   0x6501847b
65013193:	test   eax,eax
65013195:	jl     0x650131ae
65013197:	push   0x0
65013199:	call   0x65015e22
6501319e:	test   eax,eax
650131a0:	pop    ecx
650131a1:	jne    0x650131ae
650131a3:	inc    DWORD PTR ds:0x6502d590
650131a9:	jmp    0x6501325a
650131ae:	call   0x6501842f
650131b3:	jmp    0x6501317e
650131b5:	xor    edi,edi
650131b7:	cmp    eax,edi
650131b9:	jne    0x650131f0
650131bb:	cmp    DWORD PTR ds:0x6502d590,edi
650131c1:	jle    0x650130bb
650131c7:	dec    DWORD PTR ds:0x6502d590
650131cd:	cmp    DWORD PTR ds:0x6502d930,edi
650131d3:	jne    0x650131da
650131d5:	call   0x65015fa7
650131da:	cmp    DWORD PTR [ebp+0x10],edi
650131dd:	jne    0x6501325a
650131df:	call   0x6501842f
650131e4:	call   0x65014758
650131e9:	call   0x650189d9
650131ee:	jmp    0x6501325a
650131f0:	cmp    eax,0x2
650131f3:	jne    0x6501324e
650131f5:	call   0x65014726
650131fa:	push   0x214
650131ff:	push   0x1
65013201:	call   0x65015bd0
65013206:	mov    esi,eax
65013208:	cmp    esi,edi
6501320a:	pop    ecx
6501320b:	pop    ecx
6501320c:	je     0x650130bb
65013212:	push   esi
65013213:	push   DWORD PTR ds:0x6502c220
65013219:	push   DWORD PTR ds:0x6502d5ac
6501321f:	call   0x650146af
65013224:	pop    ecx
65013225:	call   eax
65013227:	test   eax,eax
65013229:	je     0x65013242
6501322b:	push   edi
6501322c:	push   esi
6501322d:	call   0x65014795
65013232:	pop    ecx
65013233:	pop    ecx
65013234:	call   DWORD PTR ds:0x65024114
6501323a:	or     DWORD PTR [esi+0x4],0xffffffff
6501323e:	mov    DWORD PTR [esi],eax
65013240:	jmp    0x6501325a
65013242:	push   esi
65013243:	call   0x65013746
65013248:	pop    ecx
65013249:	jmp    0x650130bb
6501324e:	cmp    eax,0x3
65013251:	jne    0x6501325a
65013253:	push   edi
65013254:	call   0x65014a04
65013259:	pop    ecx
6501325a:	xor    eax,eax
6501325c:	inc    eax
6501325d:	pop    edi
6501325e:	pop    esi
6501325f:	pop    ebx
65013260:	leave  
65013261:	ret    0xc
65013264:	push   0xc
65013266:	push   0x65029a28
6501326b:	call   0x65013e70
65013270:	mov    edi,ecx
65013272:	mov    esi,edx
65013274:	mov    ebx,DWORD PTR [ebp+0x8]
65013277:	xor    eax,eax
65013279:	inc    eax
6501327a:	mov    DWORD PTR [ebp-0x1c],eax
6501327d:	test   esi,esi
6501327f:	jne    0x6501328d
65013281:	cmp    DWORD PTR ds:0x6502d590,edx
65013287:	je     0x65013352
6501328d:	and    DWORD PTR [ebp-0x4],0x0
65013291:	cmp    esi,eax
65013293:	je     0x6501329a
65013295:	cmp    esi,0x2
65013298:	jne    0x650132c8
6501329a:	mov    eax,ds:0x65024cb0
6501329f:	test   eax,eax
650132a1:	je     0x650132ab
650132a3:	push   edi
650132a4:	push   esi
650132a5:	push   ebx
650132a6:	call   eax
650132a8:	mov    DWORD PTR [ebp-0x1c],eax
650132ab:	cmp    DWORD PTR [ebp-0x1c],0x0
650132af:	je     0x6501334b
650132b5:	push   edi
650132b6:	push   esi
650132b7:	push   ebx
650132b8:	call   0x6501308b
650132bd:	mov    DWORD PTR [ebp-0x1c],eax
650132c0:	test   eax,eax
650132c2:	je     0x6501334b
650132c8:	push   edi
650132c9:	push   esi
650132ca:	push   ebx
650132cb:	call   0x6500f5f0
650132d0:	mov    DWORD PTR [ebp-0x1c],eax
650132d3:	cmp    esi,0x1
650132d6:	jne    0x650132fc
650132d8:	test   eax,eax
650132da:	jne    0x650132fc
650132dc:	push   edi
650132dd:	push   eax
650132de:	push   ebx
650132df:	call   0x6500f5f0
650132e4:	push   edi
650132e5:	push   0x0
650132e7:	push   ebx
650132e8:	call   0x6501308b
650132ed:	mov    eax,ds:0x65024cb0
650132f2:	test   eax,eax
650132f4:	je     0x650132fc
650132f6:	push   edi
650132f7:	push   0x0
650132f9:	push   ebx
650132fa:	call   eax
650132fc:	test   esi,esi
650132fe:	je     0x65013305
65013300:	cmp    esi,0x3
65013303:	jne    0x6501332b
65013305:	push   edi
65013306:	push   esi
65013307:	push   ebx
65013308:	call   0x6501308b
6501330d:	test   eax,eax
6501330f:	jne    0x65013314
65013311:	and    DWORD PTR [ebp-0x1c],eax
65013314:	cmp    DWORD PTR [ebp-0x1c],0x0
65013318:	je     0x6501332b
6501331a:	mov    eax,ds:0x65024cb0
6501331f:	test   eax,eax
65013321:	je     0x6501332b
65013323:	push   edi
65013324:	push   esi
65013325:	push   ebx
65013326:	call   eax
65013328:	mov    DWORD PTR [ebp-0x1c],eax
6501332b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013332:	mov    eax,DWORD PTR [ebp-0x1c]
65013335:	jmp    0x65013354
65013337:	mov    eax,DWORD PTR [ebp-0x14]
6501333a:	mov    ecx,DWORD PTR [eax]
6501333c:	mov    ecx,DWORD PTR [ecx]
6501333e:	push   eax
6501333f:	push   ecx
65013340:	call   0x65018bac
65013345:	pop    ecx
65013346:	pop    ecx
65013347:	ret    
65013348:	mov    esp,DWORD PTR [ebp-0x18]
6501334b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013352:	xor    eax,eax
65013354:	call   0x65013eb5
65013359:	ret    
6501335a:	cmp    DWORD PTR [esp+0x8],0x1
6501335f:	jne    0x65013366
65013361:	call   0x65018bc7
65013366:	push   DWORD PTR [esp+0x4]
6501336a:	mov    ecx,DWORD PTR [esp+0x10]
6501336e:	mov    edx,DWORD PTR [esp+0xc]
65013372:	call   0x65013264
65013377:	pop    ecx
65013378:	ret    0xc
6501337b:	mov    eax,DWORD PTR [esp+0x4]
6501337f:	mov    dx,WORD PTR [esp+0x8]
65013384:	jmp    0x6501338d
65013386:	cmp    cx,dx
65013389:	je     0x6501339c
6501338b:	inc    eax
6501338c:	inc    eax
6501338d:	movzx  ecx,WORD PTR [eax]
65013390:	test   cx,cx
65013393:	jne    0x65013386
65013395:	cmp    WORD PTR [eax],dx
65013398:	je     0x6501339c
6501339a:	xor    eax,eax
6501339c:	ret    
6501339d:	cmp    DWORD PTR [esp+0x8],0x0
650133a2:	je     0x650133aa
650133a4:	mov    BYTE PTR [ecx],0x2d
650133a7:	inc    ecx
650133a8:	neg    eax
650133aa:	push   esi
650133ab:	mov    esi,ecx
650133ad:	xor    edx,edx
650133af:	div    DWORD PTR [esp+0x8]
650133b3:	cmp    edx,0x9
650133b6:	jbe    0x650133bd
650133b8:	add    dl,0x57
650133bb:	jmp    0x650133c0
650133bd:	add    dl,0x30
650133c0:	mov    BYTE PTR [ecx],dl
650133c2:	inc    ecx
650133c3:	test   eax,eax
650133c5:	ja     0x650133ad
650133c7:	mov    BYTE PTR [ecx],0x0
650133ca:	dec    ecx
650133cb:	mov    dl,BYTE PTR [esi]
650133cd:	mov    al,BYTE PTR [ecx]
650133cf:	mov    BYTE PTR [ecx],dl
650133d1:	dec    ecx
650133d2:	mov    BYTE PTR [esi],al
650133d4:	inc    esi
650133d5:	cmp    esi,ecx
650133d7:	jb     0x650133cb
650133d9:	pop    esi
650133da:	ret    0x8
650133dd:	push   ebp
650133de:	mov    ebp,esp
650133e0:	xor    eax,eax
650133e2:	cmp    DWORD PTR [ebp+0x10],0xa
650133e6:	jne    0x650133ee
650133e8:	cmp    DWORD PTR [ebp+0x8],eax
650133eb:	jge    0x650133ee
650133ed:	inc    eax
650133ee:	mov    ecx,DWORD PTR [ebp+0xc]
650133f1:	push   eax
650133f2:	push   DWORD PTR [ebp+0x10]
650133f5:	mov    eax,DWORD PTR [ebp+0x8]
650133f8:	call   0x6501339d
650133fd:	mov    eax,DWORD PTR [ebp+0xc]
65013400:	pop    ebp
65013401:	ret    
65013402:	push   ebp
65013403:	mov    ebp,esp
65013405:	sub    esp,0x20
65013408:	push   ebx
65013409:	xor    ebx,ebx
6501340b:	cmp    DWORD PTR [ebp+0xc],ebx
6501340e:	jne    0x6501342d
65013410:	call   0x65014580
65013415:	push   ebx
65013416:	push   ebx
65013417:	push   ebx
65013418:	push   ebx
65013419:	push   ebx
6501341a:	mov    DWORD PTR [eax],0x16
65013420:	call   0x6501241f
65013425:	add    esp,0x14
65013428:	or     eax,0xffffffff
6501342b:	jmp    0x6501347a
6501342d:	mov    eax,DWORD PTR [ebp+0x8]
65013430:	cmp    eax,ebx
65013432:	je     0x65013410
65013434:	push   esi
65013435:	mov    DWORD PTR [ebp-0x18],eax
65013438:	mov    DWORD PTR [ebp-0x20],eax
6501343b:	lea    eax,[ebp+0x10]
6501343e:	push   eax
6501343f:	push   ebx
65013440:	push   DWORD PTR [ebp+0xc]
65013443:	lea    eax,[ebp-0x20]
65013446:	push   eax
65013447:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
6501344e:	mov    DWORD PTR [ebp-0x14],0x42
65013455:	call   0x65018d96
6501345a:	add    esp,0x10
6501345d:	dec    DWORD PTR [ebp-0x1c]
65013460:	mov    esi,eax
65013462:	js     0x6501346b
65013464:	mov    eax,DWORD PTR [ebp-0x20]
65013467:	mov    BYTE PTR [eax],bl
65013469:	jmp    0x65013477
6501346b:	lea    eax,[ebp-0x20]
6501346e:	push   eax
6501346f:	push   ebx
65013470:	call   0x650169c5
65013475:	pop    ecx
65013476:	pop    ecx
65013477:	mov    eax,esi
65013479:	pop    esi
6501347a:	pop    ebx
6501347b:	leave  
6501347c:	ret    
6501347d:	lea    eax,[esp+0x10]
65013481:	push   eax
65013482:	push   0x0
65013484:	push   DWORD PTR [esp+0x14]
65013488:	push   DWORD PTR [esp+0x14]
6501348c:	push   DWORD PTR [esp+0x14]
65013490:	call   0x650197f4
65013495:	add    esp,0x14
65013498:	ret    
65013499:	push   ebp
6501349a:	mov    ebp,esp
6501349c:	sub    esp,0x18
6501349f:	push   ebx
650134a0:	push   esi
650134a1:	push   DWORD PTR [ebp+0xc]
650134a4:	lea    ecx,[ebp-0x18]
650134a7:	call   0x65012acf
650134ac:	mov    ebx,DWORD PTR [ebp+0x8]
650134af:	mov    esi,0x100
650134b4:	cmp    ebx,esi
650134b6:	jae    0x6501350c
650134b8:	mov    ecx,DWORD PTR [ebp-0x18]
650134bb:	cmp    DWORD PTR [ecx+0xac],0x1
650134c2:	jle    0x650134d8
650134c4:	lea    eax,[ebp-0x18]
650134c7:	push   eax
650134c8:	push   0x1
650134ca:	push   ebx
650134cb:	call   0x65019ca3
650134d0:	mov    ecx,DWORD PTR [ebp-0x18]
650134d3:	add    esp,0xc
650134d6:	jmp    0x650134e5
650134d8:	mov    eax,DWORD PTR [ecx+0xc8]
650134de:	movzx  eax,BYTE PTR [eax+ebx*2]
650134e2:	and    eax,0x1
650134e5:	test   eax,eax
650134e7:	je     0x650134f8
650134e9:	mov    eax,DWORD PTR [ecx+0xcc]
650134ef:	movzx  eax,BYTE PTR [eax+ebx*1]
650134f3:	jmp    0x6501359f
650134f8:	cmp    BYTE PTR [ebp-0xc],0x0
650134fc:	je     0x65013505
650134fe:	mov    eax,DWORD PTR [ebp-0x10]
65013501:	and    DWORD PTR [eax+0x70],0xfffffffd
65013505:	mov    eax,ebx
65013507:	jmp    0x650135ac
6501350c:	mov    eax,DWORD PTR [ebp-0x18]
6501350f:	cmp    DWORD PTR [eax+0xac],0x1
65013516:	jle    0x65013549
65013518:	mov    DWORD PTR [ebp+0x8],ebx
6501351b:	sar    DWORD PTR [ebp+0x8],0x8
6501351f:	lea    eax,[ebp-0x18]
65013522:	push   eax
65013523:	mov    eax,DWORD PTR [ebp+0x8]
65013526:	and    eax,0xff
6501352b:	push   eax
6501352c:	call   0x65019c5f
65013531:	test   eax,eax
65013533:	pop    ecx
65013534:	pop    ecx
65013535:	je     0x65013549
65013537:	mov    al,BYTE PTR [ebp+0x8]
6501353a:	push   0x2
6501353c:	mov    BYTE PTR [ebp-0x4],al
6501353f:	mov    BYTE PTR [ebp-0x3],bl
65013542:	mov    BYTE PTR [ebp-0x2],0x0
65013546:	pop    ecx
65013547:	jmp    0x6501355e
65013549:	call   0x65014580
6501354e:	mov    DWORD PTR [eax],0x2a
65013554:	xor    ecx,ecx
65013556:	mov    BYTE PTR [ebp-0x4],bl
65013559:	mov    BYTE PTR [ebp-0x3],0x0
6501355d:	inc    ecx
6501355e:	mov    eax,DWORD PTR [ebp-0x18]
65013561:	push   0x1
65013563:	push   DWORD PTR [eax+0x4]
65013566:	lea    edx,[ebp-0x8]
65013569:	push   0x3
6501356b:	push   edx
6501356c:	push   ecx
6501356d:	lea    ecx,[ebp-0x4]
65013570:	push   ecx
65013571:	push   esi
65013572:	push   DWORD PTR [eax+0x14]
65013575:	lea    eax,[ebp-0x18]
65013578:	push   eax
65013579:	call   0x65019c1c
6501357e:	add    esp,0x24
65013581:	test   eax,eax
65013583:	je     0x650134f8
65013589:	cmp    eax,0x1
6501358c:	jne    0x65013594
6501358e:	movzx  eax,BYTE PTR [ebp-0x8]
65013592:	jmp    0x6501359f
65013594:	movzx  ecx,BYTE PTR [ebp-0x7]
65013598:	xor    eax,eax
6501359a:	mov    ah,BYTE PTR [ebp-0x8]
6501359d:	or     eax,ecx
6501359f:	cmp    BYTE PTR [ebp-0xc],0x0
650135a3:	je     0x650135ac
650135a5:	mov    ecx,DWORD PTR [ebp-0x10]
650135a8:	and    DWORD PTR [ecx+0x70],0xfffffffd
650135ac:	pop    esi
650135ad:	pop    ebx
650135ae:	leave  
650135af:	ret    
650135b0:	cmp    DWORD PTR ds:0x6502d954,0x0
650135b7:	jne    0x650135c9
650135b9:	mov    eax,DWORD PTR [esp+0x4]
650135bd:	lea    ecx,[eax-0x41]
650135c0:	cmp    ecx,0x19
650135c3:	ja     0x650135d6
650135c5:	add    eax,0x20
650135c8:	ret    
650135c9:	push   0x0
650135cb:	push   DWORD PTR [esp+0x8]
650135cf:	call   0x65013499
650135d4:	pop    ecx
650135d5:	pop    ecx
650135d6:	ret    
650135d7:	push   ebp
650135d8:	mov    ebp,esp
650135da:	sub    esp,0x10
650135dd:	push   DWORD PTR [ebp+0xc]
650135e0:	lea    ecx,[ebp-0x10]
650135e3:	call   0x65012acf
650135e8:	mov    eax,DWORD PTR [ebp-0x10]
650135eb:	cmp    DWORD PTR [eax+0xac],0x1
650135f2:	jle    0x65013607
650135f4:	lea    eax,[ebp-0x10]
650135f7:	push   eax
650135f8:	push   0x4
650135fa:	push   DWORD PTR [ebp+0x8]
650135fd:	call   0x65019ca3
65013602:	add    esp,0xc
65013605:	jmp    0x65013617
65013607:	mov    eax,DWORD PTR [eax+0xc8]
6501360d:	mov    ecx,DWORD PTR [ebp+0x8]
65013610:	movzx  eax,BYTE PTR [eax+ecx*2]
65013614:	and    eax,0x4
65013617:	cmp    BYTE PTR [ebp-0x4],0x0
6501361b:	je     0x65013624
6501361d:	mov    ecx,DWORD PTR [ebp-0x8]
65013620:	and    DWORD PTR [ecx+0x70],0xfffffffd
65013624:	leave  
65013625:	ret    
65013626:	cmp    DWORD PTR ds:0x6502d954,0x0
6501362d:	jne    0x65013641
6501362f:	mov    eax,DWORD PTR [esp+0x4]
65013633:	mov    ecx,DWORD PTR ds:0x6502c860
65013639:	movzx  eax,BYTE PTR [ecx+eax*2]
6501363d:	and    eax,0x4
65013640:	ret    
65013641:	push   0x0
65013643:	push   DWORD PTR [esp+0x8]
65013647:	call   0x650135d7
6501364c:	pop    ecx
6501364d:	pop    ecx
6501364e:	ret    
6501364f:	push   ebp
65013650:	mov    ebp,esp
65013652:	sub    esp,0x10
65013655:	push   DWORD PTR [ebp+0xc]
65013658:	lea    ecx,[ebp-0x10]
6501365b:	call   0x65012acf
65013660:	mov    eax,DWORD PTR [ebp-0x10]
65013663:	cmp    DWORD PTR [eax+0xac],0x1
6501366a:	jle    0x6501367f
6501366c:	lea    eax,[ebp-0x10]
6501366f:	push   eax
65013670:	push   0x8
65013672:	push   DWORD PTR [ebp+0x8]
65013675:	call   0x65019ca3
6501367a:	add    esp,0xc
6501367d:	jmp    0x6501368f
6501367f:	mov    eax,DWORD PTR [eax+0xc8]
65013685:	mov    ecx,DWORD PTR [ebp+0x8]
65013688:	movzx  eax,BYTE PTR [eax+ecx*2]
6501368c:	and    eax,0x8
6501368f:	cmp    BYTE PTR [ebp-0x4],0x0
65013693:	je     0x6501369c
65013695:	mov    ecx,DWORD PTR [ebp-0x8]
65013698:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501369c:	leave  
6501369d:	ret    
6501369e:	cmp    DWORD PTR ds:0x6502d954,0x0
650136a5:	jne    0x650136b9
650136a7:	mov    eax,DWORD PTR [esp+0x4]
650136ab:	mov    ecx,DWORD PTR ds:0x6502c860
650136b1:	movzx  eax,BYTE PTR [ecx+eax*2]
650136b5:	and    eax,0x8
650136b8:	ret    
650136b9:	push   0x0
650136bb:	push   DWORD PTR [esp+0x8]
650136bf:	call   0x6501364f
650136c4:	pop    ecx
650136c5:	pop    ecx
650136c6:	ret    
650136c7:	push   ebp
650136c8:	mov    ebp,esp
650136ca:	sub    esp,0x10
650136cd:	push   DWORD PTR [ebp+0xc]
650136d0:	lea    ecx,[ebp-0x10]
650136d3:	call   0x65012acf
650136d8:	mov    eax,DWORD PTR [ebp-0x10]
650136db:	cmp    DWORD PTR [eax+0xac],0x1
650136e2:	jle    0x650136fa
650136e4:	lea    eax,[ebp-0x10]
650136e7:	push   eax
650136e8:	push   0x157
650136ed:	push   DWORD PTR [ebp+0x8]
650136f0:	call   0x65019ca3
650136f5:	add    esp,0xc
650136f8:	jmp    0x6501370c
650136fa:	mov    eax,DWORD PTR [eax+0xc8]
65013700:	mov    ecx,DWORD PTR [ebp+0x8]
65013703:	movzx  eax,WORD PTR [eax+ecx*2]
65013707:	and    eax,0x157
6501370c:	cmp    BYTE PTR [ebp-0x4],0x0
65013710:	je     0x65013719
65013712:	mov    ecx,DWORD PTR [ebp-0x8]
65013715:	and    DWORD PTR [ecx+0x70],0xfffffffd
65013719:	leave  
6501371a:	ret    
6501371b:	cmp    DWORD PTR ds:0x6502d954,0x0
65013722:	jne    0x65013738
65013724:	mov    eax,DWORD PTR [esp+0x4]
65013728:	mov    ecx,DWORD PTR ds:0x6502c860
6501372e:	movzx  eax,WORD PTR [ecx+eax*2]
65013732:	and    eax,0x157
65013737:	ret    
65013738:	push   0x0
6501373a:	push   DWORD PTR [esp+0x8]
6501373e:	call   0x650136c7
65013743:	pop    ecx
65013744:	pop    ecx
65013745:	ret    
65013746:	push   0xc
65013748:	push   0x65029a48
6501374d:	call   0x65013e70
65013752:	mov    esi,DWORD PTR [ebp+0x8]
65013755:	test   esi,esi
65013757:	je     0x650137ce
65013759:	cmp    DWORD PTR ds:0x6503143c,0x3
65013760:	jne    0x650137a5
65013762:	push   0x4
65013764:	call   0x65019ecf
65013769:	pop    ecx
6501376a:	and    DWORD PTR [ebp-0x4],0x0
6501376e:	push   esi
6501376f:	call   0x65019f48
65013774:	pop    ecx
65013775:	mov    DWORD PTR [ebp-0x1c],eax
65013778:	test   eax,eax
6501377a:	je     0x65013785
6501377c:	push   esi
6501377d:	push   eax
6501377e:	call   0x65019f73
65013783:	pop    ecx
65013784:	pop    ecx
65013785:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501378c:	call   0x6501379c
65013791:	cmp    DWORD PTR [ebp-0x1c],0x0
65013795:	jne    0x650137ce
65013797:	push   DWORD PTR [ebp+0x8]
6501379a:	jmp    0x650137a6
6501379c:	push   0x4
6501379e:	call   0x65019df7
650137a3:	pop    ecx
650137a4:	ret    
650137a5:	push   esi
650137a6:	push   0x0
650137a8:	push   DWORD PTR ds:0x6502da8c
650137ae:	call   DWORD PTR ds:0x650240f0
650137b4:	test   eax,eax
650137b6:	jne    0x650137ce
650137b8:	call   0x65014580
650137bd:	mov    esi,eax
650137bf:	call   DWORD PTR ds:0x6502403c
650137c5:	push   eax
650137c6:	call   0x65014545
650137cb:	mov    DWORD PTR [esi],eax
650137cd:	pop    ecx
650137ce:	call   0x65013eb5
650137d3:	ret    
650137d4:	push   0xc
650137d6:	push   0x65029a68
650137db:	call   0x65013e70
650137e0:	and    DWORD PTR [ebp-0x1c],0x0
650137e4:	mov    esi,DWORD PTR [ebp+0x8]
650137e7:	cmp    esi,DWORD PTR ds:0x6503142c
650137ed:	ja     0x65013811
650137ef:	push   0x4
650137f1:	call   0x65019ecf
650137f6:	pop    ecx
650137f7:	and    DWORD PTR [ebp-0x4],0x0
650137fb:	push   esi
650137fc:	call   0x6501a71c
65013801:	pop    ecx
65013802:	mov    DWORD PTR [ebp-0x1c],eax
65013805:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501380c:	call   0x6501381a
65013811:	mov    eax,DWORD PTR [ebp-0x1c]
65013814:	call   0x65013eb5
65013819:	ret    
6501381a:	push   0x4
6501381c:	call   0x65019df7
65013821:	pop    ecx
65013822:	ret    
65013823:	push   ebp
65013824:	mov    ebp,DWORD PTR [esp+0x8]
65013828:	cmp    ebp,0xffffffe0
6501382b:	ja     0x650138d0
65013831:	push   ebx
65013832:	mov    ebx,DWORD PTR ds:0x650240ec
65013838:	push   esi
65013839:	push   edi
6501383a:	xor    esi,esi
6501383c:	cmp    DWORD PTR ds:0x6502da8c,esi
65013842:	mov    edi,ebp
65013844:	jne    0x6501385e
65013846:	call   0x6501ab9f
6501384b:	push   0x1e
6501384d:	call   0x6501a9ff
65013852:	push   0xff
65013857:	call   0x65015d50
6501385c:	pop    ecx
6501385d:	pop    ecx
6501385e:	mov    eax,ds:0x6503143c
65013863:	cmp    eax,0x1
65013866:	jne    0x65013876
65013868:	cmp    ebp,esi
6501386a:	je     0x65013870
6501386c:	mov    eax,ebp
6501386e:	jmp    0x65013873
65013870:	xor    eax,eax
65013872:	inc    eax
65013873:	push   eax
65013874:	jmp    0x65013894
65013876:	cmp    eax,0x3
65013879:	jne    0x65013886
6501387b:	push   ebp
6501387c:	call   0x650137d4
65013881:	cmp    eax,esi
65013883:	pop    ecx
65013884:	jne    0x6501389d
65013886:	cmp    ebp,esi
65013888:	jne    0x6501388d
6501388a:	xor    edi,edi
6501388c:	inc    edi
6501388d:	add    edi,0xf
65013890:	and    edi,0xfffffff0
65013893:	push   edi
65013894:	push   esi
65013895:	push   DWORD PTR ds:0x6502da8c
6501389b:	call   ebx
6501389d:	mov    esi,eax
6501389f:	test   esi,esi
650138a1:	jne    0x650138c9
650138a3:	cmp    DWORD PTR ds:0x6502df04,eax
650138a9:	push   0xc
650138ab:	pop    edi
650138ac:	je     0x650138bb
650138ae:	push   ebp
650138af:	call   0x65014bfb
650138b4:	test   eax,eax
650138b6:	pop    ecx
650138b7:	jne    0x6501383a
650138b9:	jmp    0x650138c2
650138bb:	call   0x65014580
650138c0:	mov    DWORD PTR [eax],edi
650138c2:	call   0x65014580
650138c7:	mov    DWORD PTR [eax],edi
650138c9:	pop    edi
650138ca:	mov    eax,esi
650138cc:	pop    esi
650138cd:	pop    ebx
650138ce:	pop    ebp
650138cf:	ret    
650138d0:	push   ebp
650138d1:	call   0x65014bfb
650138d6:	pop    ecx
650138d7:	call   0x65014580
650138dc:	mov    DWORD PTR [eax],0xc
650138e2:	xor    eax,eax
650138e4:	pop    ebp
650138e5:	ret    
650138e6:	int3   
650138e7:	int3   
650138e8:	int3   
650138e9:	int3   
650138ea:	int3   
650138eb:	int3   
650138ec:	int3   
650138ed:	int3   
650138ee:	int3   
650138ef:	int3   
650138f0:	push   ebp
650138f1:	mov    ebp,esp
650138f3:	push   edi
650138f4:	push   esi
650138f5:	mov    esi,DWORD PTR [ebp+0xc]
650138f8:	mov    ecx,DWORD PTR [ebp+0x10]
650138fb:	mov    edi,DWORD PTR [ebp+0x8]
650138fe:	mov    eax,ecx
65013900:	mov    edx,ecx
65013902:	add    eax,esi
65013904:	cmp    edi,esi
65013906:	jbe    0x65013910
65013908:	cmp    edi,eax
6501390a:	jb     0x65013ab4
65013910:	cmp    ecx,0x100
65013916:	jb     0x65013937
65013918:	cmp    DWORD PTR ds:0x65031564,0x0
6501391f:	je     0x65013937
65013921:	push   edi
65013922:	push   esi
65013923:	and    edi,0xf
65013926:	and    esi,0xf
65013929:	cmp    edi,esi
6501392b:	pop    esi
6501392c:	pop    edi
6501392d:	jne    0x65013937
6501392f:	pop    esi
65013930:	pop    edi
65013931:	pop    ebp
65013932:	jmp    0x6501ac5f
65013937:	test   edi,0x3
6501393d:	jne    0x65013954
6501393f:	shr    ecx,0x2
65013942:	and    edx,0x3
65013945:	cmp    ecx,0x8
65013948:	jb     0x65013974
6501394a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501394c:	jmp    DWORD PTR [edx*4+0x65013a64]
65013953:	nop
65013954:	mov    eax,edi
65013956:	mov    edx,0x3
6501395b:	sub    ecx,0x4
6501395e:	jb     0x6501396c
65013960:	and    eax,0x3
65013963:	add    ecx,eax
65013965:	jmp    DWORD PTR [eax*4+0x65013978]
6501396c:	jmp    DWORD PTR [ecx*4+0x65013a74]
65013973:	nop
65013974:	jmp    DWORD PTR [ecx*4+0x650139f8]
6501397b:	nop
6501397c:	mov    BYTE PTR [ecx],bh
6501397e:	add    DWORD PTR [ebp-0x4c],esp
65013981:	cmp    DWORD PTR [ecx],eax
65013983:	fdivr  DWORD PTR gs:[ecx]
65013986:	add    DWORD PTR [ebp+0x23],esp
65013989:	ror    DWORD PTR [edx-0x75f877fa],1
6501398f:	inc    esi
65013990:	add    DWORD PTR [eax+0x468a0147],ecx
65013996:	add    al,cl
65013998:	jmp    0x6748c19f
6501399d:	add    esi,0x3
650139a0:	add    edi,0x3
650139a3:	cmp    ecx,0x8
650139a6:	jb     0x65013974
650139a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650139aa:	jmp    DWORD PTR [edx*4+0x65013a64]
650139b1:	lea    ecx,[ecx+0x0]
650139b4:	and    edx,ecx
650139b6:	mov    al,BYTE PTR [esi]
650139b8:	mov    BYTE PTR [edi],al
650139ba:	mov    al,BYTE PTR [esi+0x1]
650139bd:	shr    ecx,0x2
650139c0:	mov    BYTE PTR [edi+0x1],al
650139c3:	add    esi,0x2
650139c6:	add    edi,0x2
650139c9:	cmp    ecx,0x8
650139cc:	jb     0x65013974
650139ce:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650139d0:	jmp    DWORD PTR [edx*4+0x65013a64]
650139d7:	nop
650139d8:	and    edx,ecx
650139da:	mov    al,BYTE PTR [esi]
650139dc:	mov    BYTE PTR [edi],al
650139de:	add    esi,0x1
650139e1:	shr    ecx,0x2
650139e4:	add    edi,0x1
650139e7:	cmp    ecx,0x8
650139ea:	jb     0x65013974
650139ec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650139ee:	jmp    DWORD PTR [edx*4+0x65013a64]
650139f5:	lea    ecx,[ecx+0x0]
650139f8:	pop    ebx
650139f9:	cmp    al,BYTE PTR [ecx]
650139fb:	gs dec eax
650139fd:	cmp    al,BYTE PTR [ecx]
650139ff:	gs inc eax
65013a01:	cmp    al,BYTE PTR [ecx]
65013a03:	cmp    BYTE PTR gs:[edx],bh
65013a06:	add    DWORD PTR [ebp+0x30],esp
65013a09:	cmp    al,BYTE PTR [ecx]
65013a0b:	sub    BYTE PTR gs:[edx],bh
65013a0e:	add    DWORD PTR [ebp+0x20],esp
65013a11:	cmp    al,BYTE PTR [ecx]
65013a13:	sbb    BYTE PTR gs:[edx],bh
65013a16:	add    DWORD PTR [ebp-0x75],esp
65013a19:	inc    esp
65013a1a:	mov    fs,esp
65013a1c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
65013a20:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
65013a24:	mov    DWORD PTR [edi+ecx*4-0x18],eax
65013a28:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
65013a2c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
65013a30:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
65013a34:	mov    DWORD PTR [edi+ecx*4-0x10],eax
65013a38:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
65013a3c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
65013a40:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
65013a44:	mov    DWORD PTR [edi+ecx*4-0x8],eax
65013a48:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
65013a4c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
65013a50:	lea    eax,[ecx*4+0x0]
65013a57:	add    esi,eax
65013a59:	add    edi,eax
65013a5b:	jmp    DWORD PTR [edx*4+0x65013a64]
65013a62:	mov    edi,edi
65013a64:	je     0x65013aa0
65013a66:	add    DWORD PTR [ebp+0x7c],esp
65013a69:	cmp    al,BYTE PTR [ecx]
65013a6b:	mov    BYTE PTR gs:[edx],bh
65013a6e:	add    DWORD PTR [ebp-0x64],esp
65013a71:	cmp    al,BYTE PTR [ecx]
65013a73:	mov    eax,DWORD PTR gs:[ebp+0x8]
65013a77:	pop    esi
65013a78:	pop    edi
65013a79:	leave  
65013a7a:	ret    
65013a7b:	nop
65013a7c:	mov    al,BYTE PTR [esi]
65013a7e:	mov    BYTE PTR [edi],al
65013a80:	mov    eax,DWORD PTR [ebp+0x8]
65013a83:	pop    esi
65013a84:	pop    edi
65013a85:	leave  
65013a86:	ret    
65013a87:	nop
65013a88:	mov    al,BYTE PTR [esi]
65013a8a:	mov    BYTE PTR [edi],al
65013a8c:	mov    al,BYTE PTR [esi+0x1]
65013a8f:	mov    BYTE PTR [edi+0x1],al
65013a92:	mov    eax,DWORD PTR [ebp+0x8]
65013a95:	pop    esi
65013a96:	pop    edi
65013a97:	leave  
65013a98:	ret    
65013a99:	lea    ecx,[ecx+0x0]
65013a9c:	mov    al,BYTE PTR [esi]
65013a9e:	mov    BYTE PTR [edi],al
65013aa0:	mov    al,BYTE PTR [esi+0x1]
65013aa3:	mov    BYTE PTR [edi+0x1],al
65013aa6:	mov    al,BYTE PTR [esi+0x2]
65013aa9:	mov    BYTE PTR [edi+0x2],al
65013aac:	mov    eax,DWORD PTR [ebp+0x8]
65013aaf:	pop    esi
65013ab0:	pop    edi
65013ab1:	leave  
65013ab2:	ret    
65013ab3:	nop
65013ab4:	lea    esi,[ecx+esi*1-0x4]
65013ab8:	lea    edi,[ecx+edi*1-0x4]
65013abc:	test   edi,0x3
65013ac2:	jne    0x65013ae8
65013ac4:	shr    ecx,0x2
65013ac7:	and    edx,0x3
65013aca:	cmp    ecx,0x8
65013acd:	jb     0x65013adc
65013acf:	std    
65013ad0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013ad2:	cld    
65013ad3:	jmp    DWORD PTR [edx*4+0x65013c00]
65013ada:	mov    edi,edi
65013adc:	neg    ecx
65013ade:	jmp    DWORD PTR [ecx*4+0x65013bb0]
65013ae5:	lea    ecx,[ecx+0x0]
65013ae8:	mov    eax,edi
65013aea:	mov    edx,0x3
65013aef:	cmp    ecx,0x4
65013af2:	jb     0x65013b00
65013af4:	and    eax,0x3
65013af7:	sub    ecx,eax
65013af9:	jmp    DWORD PTR [eax*4+0x65013b04]
65013b00:	jmp    DWORD PTR [ecx*4+0x65013c00]
65013b07:	nop
65013b08:	adc    al,0x3b
65013b0a:	add    DWORD PTR [ebp+0x38],esp
65013b0d:	cmp    eax,DWORD PTR [ecx]
65013b0f:	gs pusha 
65013b11:	cmp    eax,DWORD PTR [ecx]
65013b13:	mov    al,BYTE PTR gs:[esi+0x3]
65013b17:	and    edx,ecx
65013b19:	mov    BYTE PTR [edi+0x3],al
65013b1c:	sub    esi,0x1
65013b1f:	shr    ecx,0x2
65013b22:	sub    edi,0x1
65013b25:	cmp    ecx,0x8
65013b28:	jb     0x65013adc
65013b2a:	std    
65013b2b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013b2d:	cld    
65013b2e:	jmp    DWORD PTR [edx*4+0x65013c00]
65013b35:	lea    ecx,[ecx+0x0]
65013b38:	mov    al,BYTE PTR [esi+0x3]
65013b3b:	and    edx,ecx
65013b3d:	mov    BYTE PTR [edi+0x3],al
65013b40:	mov    al,BYTE PTR [esi+0x2]
65013b43:	shr    ecx,0x2
65013b46:	mov    BYTE PTR [edi+0x2],al
65013b49:	sub    esi,0x2
65013b4c:	sub    edi,0x2
65013b4f:	cmp    ecx,0x8
65013b52:	jb     0x65013adc
65013b54:	std    
65013b55:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013b57:	cld    
65013b58:	jmp    DWORD PTR [edx*4+0x65013c00]
65013b5f:	nop
65013b60:	mov    al,BYTE PTR [esi+0x3]
65013b63:	and    edx,ecx
65013b65:	mov    BYTE PTR [edi+0x3],al
65013b68:	mov    al,BYTE PTR [esi+0x2]
65013b6b:	mov    BYTE PTR [edi+0x2],al
65013b6e:	mov    al,BYTE PTR [esi+0x1]
65013b71:	shr    ecx,0x2
65013b74:	mov    BYTE PTR [edi+0x1],al
65013b77:	sub    esi,0x3
65013b7a:	sub    edi,0x3
65013b7d:	cmp    ecx,0x8
65013b80:	jb     0x65013adc
65013b86:	std    
65013b87:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013b89:	cld    
65013b8a:	jmp    DWORD PTR [edx*4+0x65013c00]
65013b91:	lea    ecx,[ecx+0x0]
65013b94:	mov    ah,0x3b
65013b96:	add    DWORD PTR [ebp-0x44],esp
65013b99:	cmp    eax,DWORD PTR [ecx]
65013b9b:	les    edi,FWORD PTR gs:[ebx]
65013b9e:	add    DWORD PTR [ebp-0x34],esp
65013ba1:	cmp    eax,DWORD PTR [ecx]
65013ba3:	gs aam 0x3b
65013ba6:	add    DWORD PTR [ebp-0x24],esp
65013ba9:	cmp    eax,DWORD PTR [ecx]
65013bab:	gs in  al,0x3b
65013bae:	add    DWORD PTR [ebp-0x9],esp
65013bb1:	cmp    eax,DWORD PTR [ecx]
65013bb3:	mov    eax,DWORD PTR gs:[esi+ecx*4+0x1c]
65013bb8:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
65013bbc:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
65013bc0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
65013bc4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
65013bc8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
65013bcc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
65013bd0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
65013bd4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
65013bd8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
65013bdc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
65013be0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
65013be4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
65013be8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
65013bec:	lea    eax,[ecx*4+0x0]
65013bf3:	add    esi,eax
65013bf5:	add    edi,eax
65013bf7:	jmp    DWORD PTR [edx*4+0x65013c00]
65013bfe:	mov    edi,edi
65013c00:	adc    BYTE PTR [ecx+eax*1],bh
65013c03:	sbb    BYTE PTR gs:[ecx+eax*1],bh
65013c07:	sub    BYTE PTR gs:[ecx+eax*1],bh
65013c0b:	gs cmp al,0x3c
65013c0e:	add    DWORD PTR [ebp-0x75],esp
65013c11:	inc    ebp
65013c12:	or     BYTE PTR [esi+0x5f],bl
65013c15:	leave  
65013c16:	ret    
65013c17:	nop
65013c18:	mov    al,BYTE PTR [esi+0x3]
65013c1b:	mov    BYTE PTR [edi+0x3],al
65013c1e:	mov    eax,DWORD PTR [ebp+0x8]
65013c21:	pop    esi
65013c22:	pop    edi
65013c23:	leave  
65013c24:	ret    
65013c25:	lea    ecx,[ecx+0x0]
65013c28:	mov    al,BYTE PTR [esi+0x3]
65013c2b:	mov    BYTE PTR [edi+0x3],al
65013c2e:	mov    al,BYTE PTR [esi+0x2]
65013c31:	mov    BYTE PTR [edi+0x2],al
65013c34:	mov    eax,DWORD PTR [ebp+0x8]
65013c37:	pop    esi
65013c38:	pop    edi
65013c39:	leave  
65013c3a:	ret    
65013c3b:	nop
65013c3c:	mov    al,BYTE PTR [esi+0x3]
65013c3f:	mov    BYTE PTR [edi+0x3],al
65013c42:	mov    al,BYTE PTR [esi+0x2]
65013c45:	mov    BYTE PTR [edi+0x2],al
65013c48:	mov    al,BYTE PTR [esi+0x1]
65013c4b:	mov    BYTE PTR [edi+0x1],al
65013c4e:	mov    eax,DWORD PTR [ebp+0x8]
65013c51:	pop    esi
65013c52:	pop    edi
65013c53:	leave  
65013c54:	ret    
65013c55:	push   0x10
65013c57:	push   0x65029a88
65013c5c:	call   0x65013e70
65013c61:	mov    ebx,DWORD PTR [ebp+0x8]
65013c64:	test   ebx,ebx
65013c66:	jne    0x65013c76
65013c68:	push   DWORD PTR [ebp+0xc]
65013c6b:	call   0x65013823
65013c70:	pop    ecx
65013c71:	jmp    0x65013e42
65013c76:	mov    esi,DWORD PTR [ebp+0xc]
65013c79:	test   esi,esi
65013c7b:	jne    0x65013c89
65013c7d:	push   ebx
65013c7e:	call   0x65013746
65013c83:	pop    ecx
65013c84:	jmp    0x65013e40
65013c89:	cmp    DWORD PTR ds:0x6503143c,0x3
65013c90:	jne    0x65013e29
65013c96:	xor    edi,edi
65013c98:	mov    DWORD PTR [ebp-0x1c],edi
65013c9b:	cmp    esi,0xffffffe0
65013c9e:	ja     0x65013e2e
65013ca4:	push   0x4
65013ca6:	call   0x65019ecf
65013cab:	pop    ecx
65013cac:	mov    DWORD PTR [ebp-0x4],edi
65013caf:	push   ebx
65013cb0:	call   0x65019f48
65013cb5:	pop    ecx
65013cb6:	mov    DWORD PTR [ebp-0x20],eax
65013cb9:	cmp    eax,edi
65013cbb:	je     0x65013d5f
65013cc1:	cmp    esi,DWORD PTR ds:0x6503142c
65013cc7:	ja     0x65013d12
65013cc9:	push   esi
65013cca:	push   ebx
65013ccb:	push   eax
65013ccc:	call   0x6501a43d
65013cd1:	add    esp,0xc
65013cd4:	test   eax,eax
65013cd6:	je     0x65013cdd
65013cd8:	mov    DWORD PTR [ebp-0x1c],ebx
65013cdb:	jmp    0x65013d12
65013cdd:	push   esi
65013cde:	call   0x6501a71c
65013ce3:	pop    ecx
65013ce4:	mov    DWORD PTR [ebp-0x1c],eax
65013ce7:	cmp    eax,edi
65013ce9:	je     0x65013d12
65013ceb:	mov    eax,DWORD PTR [ebx-0x4]
65013cee:	dec    eax
65013cef:	cmp    eax,esi
65013cf1:	jb     0x65013cf5
65013cf3:	mov    eax,esi
65013cf5:	push   eax
65013cf6:	push   ebx
65013cf7:	push   DWORD PTR [ebp-0x1c]
65013cfa:	call   0x650141e0
65013cff:	push   ebx
65013d00:	call   0x65019f48
65013d05:	mov    DWORD PTR [ebp-0x20],eax
65013d08:	push   ebx
65013d09:	push   eax
65013d0a:	call   0x65019f73
65013d0f:	add    esp,0x18
65013d12:	cmp    DWORD PTR [ebp-0x1c],edi
65013d15:	jne    0x65013d5f
65013d17:	cmp    esi,edi
65013d19:	jne    0x65013d21
65013d1b:	xor    esi,esi
65013d1d:	inc    esi
65013d1e:	mov    DWORD PTR [ebp+0xc],esi
65013d21:	add    esi,0xf
65013d24:	and    esi,0xfffffff0
65013d27:	mov    DWORD PTR [ebp+0xc],esi
65013d2a:	push   esi
65013d2b:	push   edi
65013d2c:	push   DWORD PTR ds:0x6502da8c
65013d32:	call   DWORD PTR ds:0x650240ec
65013d38:	mov    DWORD PTR [ebp-0x1c],eax
65013d3b:	cmp    eax,edi
65013d3d:	je     0x65013d5f
65013d3f:	mov    eax,DWORD PTR [ebx-0x4]
65013d42:	dec    eax
65013d43:	cmp    eax,esi
65013d45:	jb     0x65013d49
65013d47:	mov    eax,esi
65013d49:	push   eax
65013d4a:	push   ebx
65013d4b:	push   DWORD PTR [ebp-0x1c]
65013d4e:	call   0x650141e0
65013d53:	push   ebx
65013d54:	push   DWORD PTR [ebp-0x20]
65013d57:	call   0x65019f73
65013d5c:	add    esp,0x14
65013d5f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013d66:	call   0x65013d99
65013d6b:	cmp    DWORD PTR [ebp-0x20],0x0
65013d6f:	jne    0x65013da2
65013d71:	test   esi,esi
65013d73:	jne    0x65013d76
65013d75:	inc    esi
65013d76:	add    esi,0xf
65013d79:	and    esi,0xfffffff0
65013d7c:	mov    DWORD PTR [ebp+0xc],esi
65013d7f:	push   esi
65013d80:	push   ebx
65013d81:	push   0x0
65013d83:	push   DWORD PTR ds:0x6502da8c
65013d89:	call   DWORD PTR ds:0x650240f4
65013d8f:	mov    edi,eax
65013d91:	jmp    0x65013da5
65013d93:	mov    esi,DWORD PTR [ebp+0xc]
65013d96:	mov    ebx,DWORD PTR [ebp+0x8]
65013d99:	push   0x4
65013d9b:	call   0x65019df7
65013da0:	pop    ecx
65013da1:	ret    
65013da2:	mov    edi,DWORD PTR [ebp-0x1c]
65013da5:	test   edi,edi
65013da7:	jne    0x65013e6c
65013dad:	cmp    DWORD PTR ds:0x6502df04,edi
65013db3:	je     0x65013de1
65013db5:	push   esi
65013db6:	call   0x65014bfb
65013dbb:	pop    ecx
65013dbc:	test   eax,eax
65013dbe:	jne    0x65013c96
65013dc4:	call   0x65014580
65013dc9:	cmp    DWORD PTR [ebp-0x20],edi
65013dcc:	jne    0x65013e3a
65013dce:	mov    esi,eax
65013dd0:	call   DWORD PTR ds:0x6502403c
65013dd6:	push   eax
65013dd7:	call   0x65014545
65013ddc:	pop    ecx
65013ddd:	mov    DWORD PTR [esi],eax
65013ddf:	jmp    0x65013e40
65013de1:	test   edi,edi
65013de3:	jne    0x65013e6c
65013de9:	call   0x65014580
65013dee:	cmp    DWORD PTR [ebp-0x20],edi
65013df1:	je     0x65013e5b
65013df3:	mov    DWORD PTR [eax],0xc
65013df9:	jmp    0x65013e6c
65013dfb:	test   esi,esi
65013dfd:	jne    0x65013e00
65013dff:	inc    esi
65013e00:	push   esi
65013e01:	push   ebx
65013e02:	push   0x0
65013e04:	push   DWORD PTR ds:0x6502da8c
65013e0a:	call   DWORD PTR ds:0x650240f4
65013e10:	mov    edi,eax
65013e12:	test   edi,edi
65013e14:	jne    0x65013e6c
65013e16:	cmp    DWORD PTR ds:0x6502df04,eax
65013e1c:	je     0x65013e52
65013e1e:	push   esi
65013e1f:	call   0x65014bfb
65013e24:	pop    ecx
65013e25:	test   eax,eax
65013e27:	je     0x65013e48
65013e29:	cmp    esi,0xffffffe0
65013e2c:	jbe    0x65013dfb
65013e2e:	push   esi
65013e2f:	call   0x65014bfb
65013e34:	pop    ecx
65013e35:	call   0x65014580
65013e3a:	mov    DWORD PTR [eax],0xc
65013e40:	xor    eax,eax
65013e42:	call   0x65013eb5
65013e47:	ret    
65013e48:	call   0x65014580
65013e4d:	jmp    0x65013dce
65013e52:	test   edi,edi
65013e54:	jne    0x65013e6c
65013e56:	call   0x65014580
65013e5b:	mov    esi,eax
65013e5d:	call   DWORD PTR ds:0x6502403c
65013e63:	push   eax
65013e64:	call   0x65014545
65013e69:	mov    DWORD PTR [esi],eax
65013e6b:	pop    ecx
65013e6c:	mov    eax,edi
65013e6e:	jmp    0x65013e42
65013e70:	push   0x65013ee0
65013e75:	push   DWORD PTR fs:0x0
65013e7c:	mov    eax,DWORD PTR [esp+0x10]
65013e80:	mov    DWORD PTR [esp+0x10],ebp
65013e84:	lea    ebp,[esp+0x10]
65013e88:	sub    esp,eax
65013e8a:	push   ebx
65013e8b:	push   esi
65013e8c:	push   edi
65013e8d:	mov    eax,ds:0x6502c09c
65013e92:	xor    DWORD PTR [ebp-0x4],eax
65013e95:	xor    eax,ebp
65013e97:	push   eax
65013e98:	mov    DWORD PTR [ebp-0x18],esp
65013e9b:	push   DWORD PTR [ebp-0x8]
65013e9e:	mov    eax,DWORD PTR [ebp-0x4]
65013ea1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013ea8:	mov    DWORD PTR [ebp-0x8],eax
65013eab:	lea    eax,[ebp-0x10]
65013eae:	mov    fs:0x0,eax
65013eb4:	ret    
65013eb5:	mov    ecx,DWORD PTR [ebp-0x10]
65013eb8:	mov    DWORD PTR fs:0x0,ecx
65013ebf:	pop    ecx
65013ec0:	pop    edi
65013ec1:	pop    edi
65013ec2:	pop    esi
65013ec3:	pop    ebx
65013ec4:	mov    esp,ebp
65013ec6:	pop    ebp
65013ec7:	push   ecx
65013ec8:	ret    
65013ec9:	int3   
65013eca:	int3   
65013ecb:	int3   
65013ecc:	int3   
65013ecd:	int3   
65013ece:	int3   
65013ecf:	int3   
65013ed0:	int3   
65013ed1:	int3   
65013ed2:	int3   
65013ed3:	int3   
65013ed4:	int3   
65013ed5:	int3   
65013ed6:	int3   
65013ed7:	int3   
65013ed8:	int3   
65013ed9:	int3   
65013eda:	int3   
65013edb:	int3   
65013edc:	int3   
65013edd:	int3   
65013ede:	int3   
65013edf:	int3   
65013ee0:	sub    esp,0x14
65013ee3:	push   ebx
65013ee4:	mov    ebx,DWORD PTR [esp+0x20]
65013ee8:	push   ebp
65013ee9:	push   esi
65013eea:	mov    esi,DWORD PTR [ebx+0x8]
65013eed:	xor    esi,DWORD PTR ds:0x6502c09c
65013ef3:	push   edi
65013ef4:	mov    eax,DWORD PTR [esi]
65013ef6:	cmp    eax,0xfffffffe
65013ef9:	mov    BYTE PTR [esp+0x13],0x0
65013efe:	mov    DWORD PTR [esp+0x18],0x1
65013f06:	lea    edi,[ebx+0x10]
65013f09:	je     0x65013f18
65013f0b:	mov    ecx,DWORD PTR [esi+0x4]
65013f0e:	add    ecx,edi
65013f10:	xor    ecx,DWORD PTR [eax+edi*1]
65013f13:	call   0x6501292c
65013f18:	mov    ecx,DWORD PTR [esi+0xc]
65013f1b:	mov    eax,DWORD PTR [esi+0x8]
65013f1e:	add    ecx,edi
65013f20:	xor    ecx,DWORD PTR [eax+edi*1]
65013f23:	call   0x6501292c
65013f28:	mov    eax,DWORD PTR [esp+0x28]
65013f2c:	test   BYTE PTR [eax+0x4],0x66
65013f30:	jne    0x65014055
65013f36:	mov    ebp,DWORD PTR [ebx+0xc]
65013f39:	cmp    ebp,0xfffffffe
65013f3c:	mov    ecx,DWORD PTR [esp+0x30]
65013f40:	lea    edx,[esp+0x1c]
65013f44:	mov    DWORD PTR [esp+0x1c],eax
65013f48:	mov    DWORD PTR [esp+0x20],ecx
65013f4c:	mov    DWORD PTR [ebx-0x4],edx
65013f4f:	je     0x65013faf
65013f51:	lea    eax,[ebp+ebp*2+0x0]
65013f55:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
65013f59:	test   ecx,ecx
65013f5b:	lea    ebx,[esi+eax*4+0x10]
65013f5f:	mov    eax,DWORD PTR [ebx]
65013f61:	mov    DWORD PTR [esp+0x14],eax
65013f65:	je     0x65013f7d
65013f67:	mov    edx,edi
65013f69:	call   0x6501ae36
65013f6e:	test   eax,eax
65013f70:	mov    BYTE PTR [esp+0x13],0x1
65013f75:	jl     0x65013fbb
65013f77:	jg     0x65013fc5
65013f79:	mov    eax,DWORD PTR [esp+0x14]
65013f7d:	cmp    eax,0xfffffffe
65013f80:	mov    ebp,eax
65013f82:	jne    0x65013f51
65013f84:	cmp    BYTE PTR [esp+0x13],0x0
65013f89:	je     0x65013faf
65013f8b:	mov    eax,DWORD PTR [esi]
65013f8d:	cmp    eax,0xfffffffe
65013f90:	je     0x65013f9f
65013f92:	mov    ecx,DWORD PTR [esi+0x4]
65013f95:	add    ecx,edi
65013f97:	xor    ecx,DWORD PTR [eax+edi*1]
65013f9a:	call   0x6501292c
65013f9f:	mov    ecx,DWORD PTR [esi+0xc]
65013fa2:	mov    eax,DWORD PTR [esi+0x8]
65013fa5:	add    ecx,edi
65013fa7:	xor    ecx,DWORD PTR [eax+edi*1]
65013faa:	call   0x6501292c
65013faf:	mov    eax,DWORD PTR [esp+0x18]
65013fb3:	pop    edi
65013fb4:	pop    esi
65013fb5:	pop    ebp
65013fb6:	pop    ebx
65013fb7:	add    esp,0x14
65013fba:	ret    
65013fbb:	mov    DWORD PTR [esp+0x18],0x0
65013fc3:	jmp    0x65013f8b
65013fc5:	mov    ecx,DWORD PTR [esp+0x28]
65013fc9:	cmp    DWORD PTR [ecx],0xe06d7363
65013fcf:	jne    0x65013ffb
65013fd1:	cmp    DWORD PTR ds:0x65024d18,0x0
65013fd8:	je     0x65013ffb
65013fda:	push   0x65024d18
65013fdf:	call   0x6501af20
65013fe4:	add    esp,0x4
65013fe7:	test   eax,eax
65013fe9:	je     0x65013ffb
65013feb:	mov    edx,DWORD PTR [esp+0x28]
65013fef:	push   0x1
65013ff1:	push   edx
65013ff2:	call   DWORD PTR ds:0x65024d18
65013ff8:	add    esp,0x8
65013ffb:	mov    ecx,DWORD PTR [esp+0x2c]
65013fff:	call   0x6501ae66
65014004:	mov    eax,DWORD PTR [esp+0x2c]
65014008:	cmp    DWORD PTR [eax+0xc],ebp
6501400b:	je     0x65014020
6501400d:	push   0x6502c09c
65014012:	push   edi
65014013:	mov    edx,ebp
65014015:	mov    ecx,eax
65014017:	call   0x6501ae80
6501401c:	mov    eax,DWORD PTR [esp+0x2c]
65014020:	mov    ecx,DWORD PTR [esp+0x14]
65014024:	mov    DWORD PTR [eax+0xc],ecx
65014027:	mov    eax,DWORD PTR [esi]
65014029:	cmp    eax,0xfffffffe
6501402c:	je     0x6501403b
6501402e:	mov    ecx,DWORD PTR [esi+0x4]
65014031:	add    ecx,edi
65014033:	xor    ecx,DWORD PTR [eax+edi*1]
65014036:	call   0x6501292c
6501403b:	mov    ecx,DWORD PTR [esi+0xc]
6501403e:	mov    edx,DWORD PTR [esi+0x8]
65014041:	add    ecx,edi
65014043:	xor    ecx,DWORD PTR [edx+edi*1]
65014046:	call   0x6501292c
6501404b:	mov    ecx,DWORD PTR [ebx+0x8]
6501404e:	mov    edx,edi
65014050:	jmp    0x6501ae4d
65014055:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
65014059:	je     0x65013faf
6501405f:	push   0x6502c09c
65014064:	push   edi
65014065:	mov    ecx,ebx
65014067:	mov    edx,0xfffffffe
6501406c:	call   0x6501ae80
65014071:	jmp    0x65013f8b
65014076:	int3   
65014077:	int3   
65014078:	int3   
65014079:	int3   
6501407a:	int3   
6501407b:	int3   
6501407c:	int3   
6501407d:	int3   
6501407e:	int3   
6501407f:	int3   
65014080:	mov    ecx,DWORD PTR [esp+0x4]
65014084:	test   ecx,0x3
6501408a:	je     0x650140b0
6501408c:	mov    al,BYTE PTR [ecx]
6501408e:	add    ecx,0x1
65014091:	test   al,al
65014093:	je     0x650140e3
65014095:	test   ecx,0x3
6501409b:	jne    0x6501408c
6501409d:	add    eax,0x0
650140a2:	lea    esp,[esp+0x0]
650140a9:	lea    esp,[esp+0x0]
650140b0:	mov    eax,DWORD PTR [ecx]
650140b2:	mov    edx,0x7efefeff
650140b7:	add    edx,eax
650140b9:	xor    eax,0xffffffff
650140bc:	xor    eax,edx
650140be:	add    ecx,0x4
650140c1:	test   eax,0x81010100
650140c6:	je     0x650140b0
650140c8:	mov    eax,DWORD PTR [ecx-0x4]
650140cb:	test   al,al
650140cd:	je     0x65014101
650140cf:	test   ah,ah
650140d1:	je     0x650140f7
650140d3:	test   eax,0xff0000
650140d8:	je     0x650140ed
650140da:	test   eax,0xff000000
650140df:	je     0x650140e3
650140e1:	jmp    0x650140b0
650140e3:	lea    eax,[ecx-0x1]
650140e6:	mov    ecx,DWORD PTR [esp+0x4]
650140ea:	sub    eax,ecx
650140ec:	ret    
650140ed:	lea    eax,[ecx-0x2]
650140f0:	mov    ecx,DWORD PTR [esp+0x4]
650140f4:	sub    eax,ecx
650140f6:	ret    
650140f7:	lea    eax,[ecx-0x3]
650140fa:	mov    ecx,DWORD PTR [esp+0x4]
650140fe:	sub    eax,ecx
65014100:	ret    
65014101:	lea    eax,[ecx-0x4]
65014104:	mov    ecx,DWORD PTR [esp+0x4]
65014108:	sub    eax,ecx
6501410a:	ret    
6501410b:	push   eax
6501410c:	push   DWORD PTR fs:0x0
65014113:	lea    eax,[esp+0xc]
65014117:	sub    esp,DWORD PTR [esp+0xc]
6501411b:	push   ebx
6501411c:	push   esi
6501411d:	push   edi
6501411e:	mov    DWORD PTR [eax],ebp
65014120:	mov    ebp,eax
65014122:	mov    eax,ds:0x6502c09c
65014127:	xor    eax,ebp
65014129:	push   eax
6501412a:	push   DWORD PTR [ebp-0x4]
6501412d:	mov    DWORD PTR [ebp-0x4],0xffffffff
65014134:	lea    eax,[ebp-0xc]
65014137:	mov    fs:0x0,eax
6501413d:	ret    
6501413e:	push   eax
6501413f:	push   DWORD PTR fs:0x0
65014146:	lea    eax,[esp+0xc]
6501414a:	sub    esp,DWORD PTR [esp+0xc]
6501414e:	push   ebx
6501414f:	push   esi
65014150:	push   edi
65014151:	mov    DWORD PTR [eax],ebp
65014153:	mov    ebp,eax
65014155:	mov    eax,ds:0x6502c09c
6501415a:	xor    eax,ebp
6501415c:	push   eax
6501415d:	mov    DWORD PTR [ebp-0x10],esp
65014160:	push   DWORD PTR [ebp-0x4]
65014163:	mov    DWORD PTR [ebp-0x4],0xffffffff
6501416a:	lea    eax,[ebp-0xc]
6501416d:	mov    fs:0x0,eax
65014173:	ret    
65014174:	mov    ecx,DWORD PTR [esp+0x4]
65014178:	push   ebx
65014179:	xor    ebx,ebx
6501417b:	cmp    ecx,ebx
6501417d:	push   esi
6501417e:	push   edi
6501417f:	je     0x65014189
65014181:	mov    edi,DWORD PTR [esp+0x14]
65014185:	cmp    edi,ebx
65014187:	ja     0x650141a4
65014189:	call   0x65014580
6501418e:	push   0x16
65014190:	pop    esi
65014191:	mov    DWORD PTR [eax],esi
65014193:	push   ebx
65014194:	push   ebx
65014195:	push   ebx
65014196:	push   ebx
65014197:	push   ebx
65014198:	call   0x6501241f
6501419d:	add    esp,0x14
650141a0:	mov    eax,esi
650141a2:	jmp    0x650141d5
650141a4:	mov    esi,DWORD PTR [esp+0x18]
650141a8:	cmp    esi,ebx
650141aa:	jne    0x650141b0
650141ac:	mov    BYTE PTR [ecx],bl
650141ae:	jmp    0x65014189
650141b0:	mov    edx,ecx
650141b2:	mov    al,BYTE PTR [esi]
650141b4:	mov    BYTE PTR [edx],al
650141b6:	inc    edx
650141b7:	inc    esi
650141b8:	cmp    al,bl
650141ba:	je     0x650141bf
650141bc:	dec    edi
650141bd:	jne    0x650141b2
650141bf:	cmp    edi,ebx
650141c1:	jne    0x650141d3
650141c3:	mov    BYTE PTR [ecx],bl
650141c5:	call   0x65014580
650141ca:	push   0x22
650141cc:	pop    ecx
650141cd:	mov    DWORD PTR [eax],ecx
650141cf:	mov    esi,ecx
650141d1:	jmp    0x65014193
650141d3:	xor    eax,eax
650141d5:	pop    edi
650141d6:	pop    esi
650141d7:	pop    ebx
650141d8:	ret    
650141d9:	int3   
650141da:	int3   
650141db:	int3   
650141dc:	int3   
650141dd:	int3   
650141de:	int3   
650141df:	int3   
650141e0:	push   ebp
650141e1:	mov    ebp,esp
650141e3:	push   edi
650141e4:	push   esi
650141e5:	mov    esi,DWORD PTR [ebp+0xc]
650141e8:	mov    ecx,DWORD PTR [ebp+0x10]
650141eb:	mov    edi,DWORD PTR [ebp+0x8]
650141ee:	mov    eax,ecx
650141f0:	mov    edx,ecx
650141f2:	add    eax,esi
650141f4:	cmp    edi,esi
650141f6:	jbe    0x65014200
650141f8:	cmp    edi,eax
650141fa:	jb     0x650143a4
65014200:	cmp    ecx,0x100
65014206:	jb     0x65014227
65014208:	cmp    DWORD PTR ds:0x65031564,0x0
6501420f:	je     0x65014227
65014211:	push   edi
65014212:	push   esi
65014213:	and    edi,0xf
65014216:	and    esi,0xf
65014219:	cmp    edi,esi
6501421b:	pop    esi
6501421c:	pop    edi
6501421d:	jne    0x65014227
6501421f:	pop    esi
65014220:	pop    edi
65014221:	pop    ebp
65014222:	jmp    0x6501ac5f
65014227:	test   edi,0x3
6501422d:	jne    0x65014244
6501422f:	shr    ecx,0x2
65014232:	and    edx,0x3
65014235:	cmp    ecx,0x8
65014238:	jb     0x65014264
6501423a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501423c:	jmp    DWORD PTR [edx*4+0x65014354]
65014243:	nop
65014244:	mov    eax,edi
65014246:	mov    edx,0x3
6501424b:	sub    ecx,0x4
6501424e:	jb     0x6501425c
65014250:	and    eax,0x3
65014253:	add    ecx,eax
65014255:	jmp    DWORD PTR [eax*4+0x65014268]
6501425c:	jmp    DWORD PTR [ecx*4+0x65014364]
65014263:	nop
65014264:	jmp    DWORD PTR [ecx*4+0x650142e8]
6501426b:	nop
6501426c:	js     0x650142b0
6501426e:	add    DWORD PTR [ebp-0x5c],esp
65014271:	inc    edx
65014272:	add    DWORD PTR [ebp-0x38],esp
65014275:	inc    edx
65014276:	add    DWORD PTR [ebp+0x23],esp
65014279:	ror    DWORD PTR [edx-0x75f877fa],1
6501427f:	inc    esi
65014280:	add    DWORD PTR [eax+0x468a0147],ecx
65014286:	add    al,cl
65014288:	jmp    0x6748ca8f
6501428d:	add    esi,0x3
65014290:	add    edi,0x3
65014293:	cmp    ecx,0x8
65014296:	jb     0x65014264
65014298:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501429a:	jmp    DWORD PTR [edx*4+0x65014354]
650142a1:	lea    ecx,[ecx+0x0]
650142a4:	and    edx,ecx
650142a6:	mov    al,BYTE PTR [esi]
650142a8:	mov    BYTE PTR [edi],al
650142aa:	mov    al,BYTE PTR [esi+0x1]
650142ad:	shr    ecx,0x2
650142b0:	mov    BYTE PTR [edi+0x1],al
650142b3:	add    esi,0x2
650142b6:	add    edi,0x2
650142b9:	cmp    ecx,0x8
650142bc:	jb     0x65014264
650142be:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650142c0:	jmp    DWORD PTR [edx*4+0x65014354]
650142c7:	nop
650142c8:	and    edx,ecx
650142ca:	mov    al,BYTE PTR [esi]
650142cc:	mov    BYTE PTR [edi],al
650142ce:	add    esi,0x1
650142d1:	shr    ecx,0x2
650142d4:	add    edi,0x1
650142d7:	cmp    ecx,0x8
650142da:	jb     0x65014264
650142dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650142de:	jmp    DWORD PTR [edx*4+0x65014354]
650142e5:	lea    ecx,[ecx+0x0]
650142e8:	dec    ebx
650142e9:	inc    ebx
650142ea:	add    DWORD PTR [ebp+0x38],esp
650142ed:	inc    ebx
650142ee:	add    DWORD PTR [ebp+0x30],esp
650142f1:	inc    ebx
650142f2:	add    DWORD PTR [ebp+0x28],esp
650142f5:	inc    ebx
650142f6:	add    DWORD PTR [ebp+0x20],esp
650142f9:	inc    ebx
650142fa:	add    DWORD PTR [ebp+0x18],esp
650142fd:	inc    ebx
650142fe:	add    DWORD PTR [ebp+0x10],esp
65014301:	inc    ebx
65014302:	add    DWORD PTR [ebp+0x8],esp
65014305:	inc    ebx
65014306:	add    DWORD PTR [ebp-0x75],esp
65014309:	inc    esp
6501430a:	mov    fs,esp
6501430c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
65014310:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
65014314:	mov    DWORD PTR [edi+ecx*4-0x18],eax
65014318:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6501431c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
65014320:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
65014324:	mov    DWORD PTR [edi+ecx*4-0x10],eax
65014328:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6501432c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
65014330:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
65014334:	mov    DWORD PTR [edi+ecx*4-0x8],eax
65014338:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6501433c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
65014340:	lea    eax,[ecx*4+0x0]
65014347:	add    esi,eax
65014349:	add    edi,eax
6501434b:	jmp    DWORD PTR [edx*4+0x65014354]
65014352:	mov    edi,edi
65014354:	fs inc ebx
65014356:	add    DWORD PTR [ebp+0x6c],esp
65014359:	inc    ebx
6501435a:	add    DWORD PTR [ebp+0x78],esp
6501435d:	inc    ebx
6501435e:	add    DWORD PTR [ebp-0x74],esp
65014361:	inc    ebx
65014362:	add    DWORD PTR [ebp-0x75],esp
65014365:	inc    ebp
65014366:	or     BYTE PTR [esi+0x5f],bl
65014369:	leave  
6501436a:	ret    
6501436b:	nop
6501436c:	mov    al,BYTE PTR [esi]
6501436e:	mov    BYTE PTR [edi],al
65014370:	mov    eax,DWORD PTR [ebp+0x8]
65014373:	pop    esi
65014374:	pop    edi
65014375:	leave  
65014376:	ret    
65014377:	nop
65014378:	mov    al,BYTE PTR [esi]
6501437a:	mov    BYTE PTR [edi],al
6501437c:	mov    al,BYTE PTR [esi+0x1]
6501437f:	mov    BYTE PTR [edi+0x1],al
65014382:	mov    eax,DWORD PTR [ebp+0x8]
65014385:	pop    esi
65014386:	pop    edi
65014387:	leave  
65014388:	ret    
65014389:	lea    ecx,[ecx+0x0]
6501438c:	mov    al,BYTE PTR [esi]
6501438e:	mov    BYTE PTR [edi],al
65014390:	mov    al,BYTE PTR [esi+0x1]
65014393:	mov    BYTE PTR [edi+0x1],al
65014396:	mov    al,BYTE PTR [esi+0x2]
65014399:	mov    BYTE PTR [edi+0x2],al
6501439c:	mov    eax,DWORD PTR [ebp+0x8]
6501439f:	pop    esi
650143a0:	pop    edi
650143a1:	leave  
650143a2:	ret    
650143a3:	nop
650143a4:	lea    esi,[ecx+esi*1-0x4]
650143a8:	lea    edi,[ecx+edi*1-0x4]
650143ac:	test   edi,0x3
650143b2:	jne    0x650143d8
650143b4:	shr    ecx,0x2
650143b7:	and    edx,0x3
650143ba:	cmp    ecx,0x8
650143bd:	jb     0x650143cc
650143bf:	std    
650143c0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650143c2:	cld    
650143c3:	jmp    DWORD PTR [edx*4+0x650144f0]
650143ca:	mov    edi,edi
650143cc:	neg    ecx
650143ce:	jmp    DWORD PTR [ecx*4+0x650144a0]
650143d5:	lea    ecx,[ecx+0x0]
650143d8:	mov    eax,edi
650143da:	mov    edx,0x3
650143df:	cmp    ecx,0x4
650143e2:	jb     0x650143f0
650143e4:	and    eax,0x3
650143e7:	sub    ecx,eax
650143e9:	jmp    DWORD PTR [eax*4+0x650143f4]
650143f0:	jmp    DWORD PTR [ecx*4+0x650144f0]
650143f7:	nop
650143f8:	add    al,0x44
650143fa:	add    DWORD PTR [ebp+0x28],esp
650143fd:	inc    esp
650143fe:	add    DWORD PTR [ebp+0x50],esp
65014401:	inc    esp
65014402:	add    DWORD PTR [ebp-0x76],esp
65014405:	inc    esi
65014406:	add    esp,DWORD PTR [ebx]
65014408:	ror    DWORD PTR [eax-0x117cfcb9],1
6501440e:	add    ecx,eax
65014410:	jmp    0x66f0c717
65014415:	cmp    ecx,0x8
65014418:	jb     0x650143cc
6501441a:	std    
6501441b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501441d:	cld    
6501441e:	jmp    DWORD PTR [edx*4+0x650144f0]
65014425:	lea    ecx,[ecx+0x0]
65014428:	mov    al,BYTE PTR [esi+0x3]
6501442b:	and    edx,ecx
6501442d:	mov    BYTE PTR [edi+0x3],al
65014430:	mov    al,BYTE PTR [esi+0x2]
65014433:	shr    ecx,0x2
65014436:	mov    BYTE PTR [edi+0x2],al
65014439:	sub    esi,0x2
6501443c:	sub    edi,0x2
6501443f:	cmp    ecx,0x8
65014442:	jb     0x650143cc
65014444:	std    
65014445:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65014447:	cld    
65014448:	jmp    DWORD PTR [edx*4+0x650144f0]
6501444f:	nop
65014450:	mov    al,BYTE PTR [esi+0x3]
65014453:	and    edx,ecx
65014455:	mov    BYTE PTR [edi+0x3],al
65014458:	mov    al,BYTE PTR [esi+0x2]
6501445b:	mov    BYTE PTR [edi+0x2],al
6501445e:	mov    al,BYTE PTR [esi+0x1]
65014461:	shr    ecx,0x2
65014464:	mov    BYTE PTR [edi+0x1],al
65014467:	sub    esi,0x3
6501446a:	sub    edi,0x3
6501446d:	cmp    ecx,0x8
65014470:	jb     0x650143cc
65014476:	std    
65014477:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65014479:	cld    
6501447a:	jmp    DWORD PTR [edx*4+0x650144f0]
65014481:	lea    ecx,[ecx+0x0]
65014484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
65014485:	inc    esp
65014486:	add    DWORD PTR [ebp-0x54],esp
65014489:	inc    esp
6501448a:	add    DWORD PTR [ebp-0x4c],esp
6501448d:	inc    esp
6501448e:	add    DWORD PTR [ebp-0x44],esp
65014491:	inc    esp
65014492:	add    DWORD PTR [ebp-0x3c],esp
65014495:	inc    esp
65014496:	add    DWORD PTR [ebp-0x34],esp
65014499:	inc    esp
6501449a:	add    DWORD PTR [ebp-0x2c],esp
6501449d:	inc    esp
6501449e:	add    DWORD PTR [ebp-0x19],esp
650144a1:	inc    esp
650144a2:	add    DWORD PTR [ebp-0x75],esp
650144a5:	inc    esp
650144a6:	mov    ds,WORD PTR [ecx+ecx*4]
650144a9:	inc    esp
650144aa:	(bad)  
650144ab:	sbb    al,0x8b
650144ad:	inc    esp
650144ae:	mov    ds,WORD PTR [eax]
650144b0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
650144b4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
650144b8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
650144bc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
650144c0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
650144c4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
650144c8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
650144cc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
650144d0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
650144d4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
650144d8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
650144dc:	lea    eax,[ecx*4+0x0]
650144e3:	add    esi,eax
650144e5:	add    edi,eax
650144e7:	jmp    DWORD PTR [edx*4+0x650144f0]
650144ee:	mov    edi,edi
650144f0:	add    BYTE PTR [ebp+0x1],al
650144f3:	or     BYTE PTR gs:[ebp+0x1],al
650144f7:	sbb    BYTE PTR gs:[ebp+0x1],al
650144fb:	gs sub al,0x45
650144fe:	add    DWORD PTR [ebp-0x75],esp
65014501:	inc    ebp
65014502:	or     BYTE PTR [esi+0x5f],bl
65014505:	leave  
65014506:	ret    
65014507:	nop
65014508:	mov    al,BYTE PTR [esi+0x3]
6501450b:	mov    BYTE PTR [edi+0x3],al
6501450e:	mov    eax,DWORD PTR [ebp+0x8]
65014511:	pop    esi
65014512:	pop    edi
65014513:	leave  
65014514:	ret    
65014515:	lea    ecx,[ecx+0x0]
65014518:	mov    al,BYTE PTR [esi+0x3]
6501451b:	mov    BYTE PTR [edi+0x3],al
6501451e:	mov    al,BYTE PTR [esi+0x2]
65014521:	mov    BYTE PTR [edi+0x2],al
65014524:	mov    eax,DWORD PTR [ebp+0x8]
65014527:	pop    esi
65014528:	pop    edi
65014529:	leave  
6501452a:	ret    
6501452b:	nop
6501452c:	mov    al,BYTE PTR [esi+0x3]
6501452f:	mov    BYTE PTR [edi+0x3],al
65014532:	mov    al,BYTE PTR [esi+0x2]
65014535:	mov    BYTE PTR [edi+0x2],al
65014538:	mov    al,BYTE PTR [esi+0x1]
6501453b:	mov    BYTE PTR [edi+0x1],al
6501453e:	mov    eax,DWORD PTR [ebp+0x8]
65014541:	pop    esi
65014542:	pop    edi
65014543:	leave  
65014544:	ret    
65014545:	mov    eax,DWORD PTR [esp+0x4]
65014549:	xor    ecx,ecx
6501454b:	cmp    eax,DWORD PTR [ecx*8+0x6502c0b0]
65014552:	je     0x65014566
65014554:	inc    ecx
65014555:	cmp    ecx,0x2d
65014558:	jb     0x6501454b
6501455a:	lea    ecx,[eax-0x13]
6501455d:	cmp    ecx,0x11
65014560:	ja     0x6501456e
65014562:	push   0xd
65014564:	pop    eax
65014565:	ret    
65014566:	mov    eax,DWORD PTR [ecx*8+0x6502c0b4]
6501456d:	ret    
6501456e:	add    eax,0xffffff44
65014573:	push   0xe
65014575:	pop    ecx
65014576:	cmp    ecx,eax
65014578:	sbb    eax,eax
6501457a:	and    eax,ecx
6501457c:	add    eax,0x8
6501457f:	ret    
65014580:	call   0x65014854
65014585:	test   eax,eax
65014587:	jne    0x6501458f
65014589:	mov    eax,0x6502c218
6501458e:	ret    
6501458f:	add    eax,0x8
65014592:	ret    
65014593:	call   0x65014854
65014598:	test   eax,eax
6501459a:	jne    0x650145a2
6501459c:	mov    eax,0x6502c21c
650145a1:	ret    
650145a2:	add    eax,0xc
650145a5:	ret    
650145a6:	push   esi
650145a7:	call   0x65014593
650145ac:	mov    ecx,DWORD PTR [esp+0x8]
650145b0:	push   ecx
650145b1:	mov    DWORD PTR [eax],ecx
650145b3:	call   0x65014545
650145b8:	pop    ecx
650145b9:	mov    esi,eax
650145bb:	call   0x65014580
650145c0:	mov    DWORD PTR [eax],esi
650145c2:	pop    esi
650145c3:	ret    
650145c4:	and    DWORD PTR ds:0x6503157c,0x0
650145cb:	ret    
650145cc:	push   ebp
650145cd:	mov    ebp,esp
650145cf:	push   ecx
650145d0:	push   ecx
650145d1:	push   ebx
650145d2:	push   esi
650145d3:	xor    esi,esi
650145d5:	lea    eax,[ebp-0x4]
650145d8:	inc    esi
650145d9:	xor    ebx,ebx
650145db:	push   eax
650145dc:	mov    DWORD PTR [ebp-0x8],esi
650145df:	mov    DWORD PTR [ebp-0x4],ebx
650145e2:	call   0x65015de6
650145e7:	cmp    DWORD PTR [ebp-0x4],0x5
650145eb:	pop    ecx
650145ec:	jle    0x650145f2
650145ee:	mov    eax,esi
650145f0:	jmp    0x65014634
650145f2:	push   edi
650145f3:	push   ebx
650145f4:	call   DWORD PTR ds:0x6502411c
650145fa:	mov    esi,DWORD PTR [eax+0x3c]
650145fd:	add    esi,eax
650145ff:	cmp    WORD PTR [esi+0x6],bx
65014603:	movzx  eax,WORD PTR [esi+0x14]
65014607:	lea    edi,[eax+esi*1+0x18]
6501460b:	jbe    0x65014630
6501460d:	push   edi
6501460e:	push   0x65024cb4
65014613:	call   0x65014c90
65014618:	test   eax,eax
6501461a:	pop    ecx
6501461b:	pop    ecx
6501461c:	je     0x6501462c
6501461e:	movzx  eax,WORD PTR [esi+0x6]
65014622:	inc    ebx
65014623:	add    edi,0x28
65014626:	cmp    ebx,eax
65014628:	jb     0x6501460d
6501462a:	jmp    0x65014630
6501462c:	and    DWORD PTR [ebp-0x8],0x0
65014630:	mov    eax,DWORD PTR [ebp-0x8]
65014633:	pop    edi
65014634:	pop    esi
65014635:	pop    ebx
65014636:	leave  
65014637:	ret    
65014638:	push   esi
65014639:	push   DWORD PTR ds:0x6502c224
6501463f:	mov    esi,DWORD PTR ds:0x65024120
65014645:	call   esi
65014647:	test   eax,eax
65014649:	je     0x6501466c
6501464b:	mov    eax,ds:0x6502c220
65014650:	cmp    eax,0xffffffff
65014653:	je     0x6501466c
65014655:	push   eax
65014656:	push   DWORD PTR ds:0x6502c224
6501465c:	call   esi
6501465e:	call   eax
65014660:	test   eax,eax
65014662:	je     0x6501466c
65014664:	mov    eax,DWORD PTR [eax+0x1f8]
6501466a:	jmp    0x65014692
6501466c:	push   0x65024ccc
65014671:	call   DWORD PTR ds:0x6502411c
65014677:	mov    esi,eax
65014679:	test   esi,esi
6501467b:	je     0x650146a0
6501467d:	call   0x650145cc
65014682:	test   eax,eax
65014684:	je     0x650146a0
65014686:	push   0x65024cbc
6501468b:	push   esi
6501468c:	call   DWORD PTR ds:0x6502408c
65014692:	test   eax,eax
65014694:	je     0x650146a0
65014696:	push   DWORD PTR [esp+0x8]
6501469a:	call   eax
6501469c:	mov    DWORD PTR [esp+0x8],eax
650146a0:	mov    eax,DWORD PTR [esp+0x8]
650146a4:	pop    esi
650146a5:	ret    
650146a6:	push   0x0
650146a8:	call   0x65014638
650146ad:	pop    ecx
650146ae:	ret    
650146af:	push   esi
650146b0:	push   DWORD PTR ds:0x6502c224
650146b6:	mov    esi,DWORD PTR ds:0x65024120
650146bc:	call   esi
650146be:	test   eax,eax
650146c0:	je     0x650146e3
650146c2:	mov    eax,ds:0x6502c220
650146c7:	cmp    eax,0xffffffff
650146ca:	je     0x650146e3
650146cc:	push   eax
650146cd:	push   DWORD PTR ds:0x6502c224
650146d3:	call   esi
650146d5:	call   eax
650146d7:	test   eax,eax
650146d9:	je     0x650146e3
650146db:	mov    eax,DWORD PTR [eax+0x1fc]
650146e1:	jmp    0x65014709
650146e3:	push   0x65024ccc
650146e8:	call   DWORD PTR ds:0x6502411c
650146ee:	mov    esi,eax
650146f0:	test   esi,esi
650146f2:	je     0x65014717
650146f4:	call   0x650145cc
650146f9:	test   eax,eax
650146fb:	je     0x65014717
650146fd:	push   0x65024cdc
65014702:	push   esi
65014703:	call   DWORD PTR ds:0x6502408c
65014709:	test   eax,eax
6501470b:	je     0x65014717
6501470d:	push   DWORD PTR [esp+0x8]
65014711:	call   eax
65014713:	mov    DWORD PTR [esp+0x8],eax
65014717:	mov    eax,DWORD PTR [esp+0x8]
6501471b:	pop    esi
6501471c:	ret    
6501471d:	call   DWORD PTR ds:0x65024124
65014723:	ret    0x4
65014726:	push   esi
65014727:	push   DWORD PTR ds:0x6502c224
6501472d:	call   DWORD PTR ds:0x65024120
65014733:	mov    esi,eax
65014735:	test   esi,esi
65014737:	jne    0x65014754
65014739:	push   DWORD PTR ds:0x6502d5a8
6501473f:	call   0x650146af
65014744:	pop    ecx
65014745:	mov    esi,eax
65014747:	push   esi
65014748:	push   DWORD PTR ds:0x6502c224
6501474e:	call   DWORD PTR ds:0x65024128
65014754:	mov    eax,esi
65014756:	pop    esi
65014757:	ret    
65014758:	mov    eax,ds:0x6502c220
6501475d:	cmp    eax,0xffffffff
65014760:	je     0x65014778
65014762:	push   eax
65014763:	push   DWORD PTR ds:0x6502d5b0
65014769:	call   0x650146af
6501476e:	pop    ecx
6501476f:	call   eax
65014771:	or     DWORD PTR ds:0x6502c220,0xffffffff
65014778:	mov    eax,ds:0x6502c224
6501477d:	cmp    eax,0xffffffff
65014780:	je     0x65014790
65014782:	push   eax
65014783:	call   DWORD PTR ds:0x6502412c
65014789:	or     DWORD PTR ds:0x6502c224,0xffffffff
65014790:	jmp    0x65019da2
65014795:	push   0xc
65014797:	push   0x65029aa8
6501479c:	call   0x65013e70
650147a1:	push   0x65024ccc
650147a6:	call   DWORD PTR ds:0x6502411c
650147ac:	mov    DWORD PTR [ebp-0x1c],eax
650147af:	mov    esi,DWORD PTR [ebp+0x8]
650147b2:	mov    DWORD PTR [esi+0x5c],0x6502c8c8
650147b9:	xor    edi,edi
650147bb:	inc    edi
650147bc:	mov    DWORD PTR [esi+0x14],edi
650147bf:	test   eax,eax
650147c1:	je     0x650147f2
650147c3:	call   0x650145cc
650147c8:	test   eax,eax
650147ca:	je     0x650147f2
650147cc:	push   0x65024cbc
650147d1:	push   DWORD PTR [ebp-0x1c]
650147d4:	mov    ebx,DWORD PTR ds:0x6502408c
650147da:	call   ebx
650147dc:	mov    DWORD PTR [esi+0x1f8],eax
650147e2:	push   0x65024cdc
650147e7:	push   DWORD PTR [ebp-0x1c]
650147ea:	call   ebx
650147ec:	mov    DWORD PTR [esi+0x1fc],eax
650147f2:	mov    DWORD PTR [esi+0x70],edi
650147f5:	mov    BYTE PTR [esi+0xc8],0x43
650147fc:	mov    BYTE PTR [esi+0x14b],0x43
65014803:	mov    eax,0x6502c268
65014808:	mov    DWORD PTR [esi+0x68],eax
6501480b:	push   eax
6501480c:	call   DWORD PTR ds:0x65024018
65014812:	push   0xc
65014814:	call   0x65019ecf
65014819:	pop    ecx
6501481a:	and    DWORD PTR [ebp-0x4],0x0
6501481e:	mov    eax,DWORD PTR [ebp+0xc]
65014821:	mov    DWORD PTR [esi+0x6c],eax
65014824:	test   eax,eax
65014826:	jne    0x65014830
65014828:	mov    eax,ds:0x6502c870
6501482d:	mov    DWORD PTR [esi+0x6c],eax
65014830:	push   DWORD PTR [esi+0x6c]
65014833:	call   0x650167ff
65014838:	pop    ecx
65014839:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014840:	call   0x6501484b
65014845:	call   0x65013eb5
6501484a:	ret    
6501484b:	push   0xc
6501484d:	call   0x65019df7
65014852:	pop    ecx
65014853:	ret    
65014854:	push   esi
65014855:	push   edi
65014856:	call   DWORD PTR ds:0x6502403c
6501485c:	push   DWORD PTR ds:0x6502c220
65014862:	mov    edi,eax
65014864:	call   0x65014726
65014869:	call   eax
6501486b:	mov    esi,eax
6501486d:	test   esi,esi
6501486f:	jne    0x650148bf
65014871:	push   0x214
65014876:	push   0x1
65014878:	call   0x65015bd0
6501487d:	mov    esi,eax
6501487f:	test   esi,esi
65014881:	pop    ecx
65014882:	pop    ecx
65014883:	je     0x650148bf
65014885:	push   esi
65014886:	push   DWORD PTR ds:0x6502c220
6501488c:	push   DWORD PTR ds:0x6502d5ac
65014892:	call   0x650146af
65014897:	pop    ecx
65014898:	call   eax
6501489a:	test   eax,eax
6501489c:	je     0x650148b6
6501489e:	push   0x0
650148a0:	push   esi
650148a1:	call   0x65014795
650148a6:	pop    ecx
650148a7:	pop    ecx
650148a8:	call   DWORD PTR ds:0x65024114
650148ae:	or     DWORD PTR [esi+0x4],0xffffffff
650148b2:	mov    DWORD PTR [esi],eax
650148b4:	jmp    0x650148bf
650148b6:	push   esi
650148b7:	call   0x65013746
650148bc:	pop    ecx
650148bd:	xor    esi,esi
650148bf:	push   edi
650148c0:	call   DWORD PTR ds:0x65024090
650148c6:	pop    edi
650148c7:	mov    eax,esi
650148c9:	pop    esi
650148ca:	ret    
650148cb:	push   esi
650148cc:	call   0x65014854
650148d1:	mov    esi,eax
650148d3:	test   esi,esi
650148d5:	jne    0x650148df
650148d7:	push   0x10
650148d9:	call   0x65015d06
650148de:	pop    ecx
650148df:	mov    eax,esi
650148e1:	pop    esi
650148e2:	ret    
650148e3:	push   0x8
650148e5:	push   0x65029ac8
650148ea:	call   0x65013e70
650148ef:	mov    esi,DWORD PTR [ebp+0x8]
650148f2:	test   esi,esi
650148f4:	je     0x650149e4
650148fa:	mov    eax,DWORD PTR [esi+0x24]
650148fd:	test   eax,eax
650148ff:	je     0x65014908
65014901:	push   eax
65014902:	call   0x65013746
65014907:	pop    ecx
65014908:	mov    eax,DWORD PTR [esi+0x2c]
6501490b:	test   eax,eax
6501490d:	je     0x65014916
6501490f:	push   eax
65014910:	call   0x65013746
65014915:	pop    ecx
65014916:	mov    eax,DWORD PTR [esi+0x34]
65014919:	test   eax,eax
6501491b:	je     0x65014924
6501491d:	push   eax
6501491e:	call   0x65013746
65014923:	pop    ecx
65014924:	mov    eax,DWORD PTR [esi+0x3c]
65014927:	test   eax,eax
65014929:	je     0x65014932
6501492b:	push   eax
6501492c:	call   0x65013746
65014931:	pop    ecx
65014932:	mov    eax,DWORD PTR [esi+0x44]
65014935:	test   eax,eax
65014937:	je     0x65014940
65014939:	push   eax
6501493a:	call   0x65013746
6501493f:	pop    ecx
65014940:	mov    eax,DWORD PTR [esi+0x48]
65014943:	test   eax,eax
65014945:	je     0x6501494e
65014947:	push   eax
65014948:	call   0x65013746
6501494d:	pop    ecx
6501494e:	mov    eax,DWORD PTR [esi+0x5c]
65014951:	cmp    eax,0x6502c8c8
65014956:	je     0x6501495f
65014958:	push   eax
65014959:	call   0x65013746
6501495e:	pop    ecx
6501495f:	push   0xd
65014961:	call   0x65019ecf
65014966:	pop    ecx
65014967:	and    DWORD PTR [ebp-0x4],0x0
6501496b:	mov    edi,DWORD PTR [esi+0x68]
6501496e:	test   edi,edi
65014970:	je     0x6501498c
65014972:	push   edi
65014973:	call   DWORD PTR ds:0x65024094
65014979:	test   eax,eax
6501497b:	jne    0x6501498c
6501497d:	cmp    edi,0x6502c268
65014983:	je     0x6501498c
65014985:	push   edi
65014986:	call   0x65013746
6501498b:	pop    ecx
6501498c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014993:	call   0x650149ef
65014998:	push   0xc
6501499a:	call   0x65019ecf
6501499f:	pop    ecx
650149a0:	mov    DWORD PTR [ebp-0x4],0x1
650149a7:	mov    edi,DWORD PTR [esi+0x6c]
650149aa:	test   edi,edi
650149ac:	je     0x650149d1
650149ae:	push   edi
650149af:	call   0x65016885
650149b4:	pop    ecx
650149b5:	cmp    edi,DWORD PTR ds:0x6502c870
650149bb:	je     0x650149d1
650149bd:	cmp    edi,0x6502c798
650149c3:	je     0x650149d1
650149c5:	cmp    DWORD PTR [edi],0x0
650149c8:	jne    0x650149d1
650149ca:	push   edi
650149cb:	call   0x650166bf
650149d0:	pop    ecx
650149d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650149d8:	call   0x650149fb
650149dd:	push   esi
650149de:	call   0x65013746
650149e3:	pop    ecx
650149e4:	call   0x65013eb5
650149e9:	ret    0x4
650149ec:	mov    esi,DWORD PTR [ebp+0x8]
650149ef:	push   0xd
650149f1:	call   0x65019df7
650149f6:	pop    ecx
650149f7:	ret    
650149f8:	mov    esi,DWORD PTR [ebp+0x8]
650149fb:	push   0xc
650149fd:	call   0x65019df7
65014a02:	pop    ecx
65014a03:	ret    
65014a04:	cmp    DWORD PTR ds:0x6502c220,0xffffffff
65014a0b:	je     0x65014a59
65014a0d:	push   edi
65014a0e:	mov    edi,DWORD PTR [esp+0x8]
65014a12:	test   edi,edi
65014a14:	jne    0x65014a3c
65014a16:	push   esi
65014a17:	push   DWORD PTR ds:0x6502c224
65014a1d:	mov    esi,DWORD PTR ds:0x65024120
65014a23:	call   esi
65014a25:	test   eax,eax
65014a27:	je     0x65014a3b
65014a29:	push   DWORD PTR ds:0x6502c220
65014a2f:	push   DWORD PTR ds:0x6502c224
65014a35:	call   esi
65014a37:	call   eax
65014a39:	mov    edi,eax
65014a3b:	pop    esi
65014a3c:	push   0x0
65014a3e:	push   DWORD PTR ds:0x6502c220
65014a44:	push   DWORD PTR ds:0x6502d5ac
65014a4a:	call   0x650146af
65014a4f:	pop    ecx
65014a50:	call   eax
65014a52:	push   edi
65014a53:	call   0x650148e3
65014a58:	pop    edi
65014a59:	mov    eax,ds:0x6502c224
65014a5e:	cmp    eax,0xffffffff
65014a61:	je     0x65014a6c
65014a63:	push   0x0
65014a65:	push   eax
65014a66:	call   DWORD PTR ds:0x65024128
65014a6c:	ret    
65014a6d:	push   edi
65014a6e:	push   0x65024ccc
65014a73:	call   DWORD PTR ds:0x6502411c
65014a79:	mov    edi,eax
65014a7b:	test   edi,edi
65014a7d:	jne    0x65014a88
65014a7f:	call   0x65014758
65014a84:	xor    eax,eax
65014a86:	pop    edi
65014a87:	ret    
65014a88:	push   esi
65014a89:	mov    esi,DWORD PTR ds:0x6502408c
65014a8f:	push   0x65024d0c
65014a94:	push   edi
65014a95:	call   esi
65014a97:	push   0x65024d00
65014a9c:	push   edi
65014a9d:	mov    ds:0x6502d5a4,eax
65014aa2:	call   esi
65014aa4:	push   0x65024cf4
65014aa9:	push   edi
65014aaa:	mov    ds:0x6502d5a8,eax
65014aaf:	call   esi
65014ab1:	push   0x65024cec
65014ab6:	push   edi
65014ab7:	mov    ds:0x6502d5ac,eax
65014abc:	call   esi
65014abe:	cmp    DWORD PTR ds:0x6502d5a4,0x0
65014ac5:	mov    esi,DWORD PTR ds:0x65024128
65014acb:	mov    ds:0x6502d5b0,eax
65014ad0:	je     0x65014ae8
65014ad2:	cmp    DWORD PTR ds:0x6502d5a8,0x0
65014ad9:	je     0x65014ae8
65014adb:	cmp    DWORD PTR ds:0x6502d5ac,0x0
65014ae2:	je     0x65014ae8
65014ae4:	test   eax,eax
65014ae6:	jne    0x65014b0c
65014ae8:	mov    eax,ds:0x65024120
65014aed:	mov    ds:0x6502d5a8,eax
65014af2:	mov    eax,ds:0x6502412c
65014af7:	mov    DWORD PTR ds:0x6502d5a4,0x6501471d
65014b01:	mov    DWORD PTR ds:0x6502d5ac,esi
65014b07:	mov    ds:0x6502d5b0,eax
65014b0c:	call   DWORD PTR ds:0x65024124
65014b12:	cmp    eax,0xffffffff
65014b15:	mov    ds:0x6502c224,eax
65014b1a:	je     0x65014bec
65014b20:	push   DWORD PTR ds:0x6502d5a8
65014b26:	push   eax
65014b27:	call   esi
65014b29:	test   eax,eax
65014b2b:	je     0x65014bec
65014b31:	call   0x65015fb6
65014b36:	push   DWORD PTR ds:0x6502d5a4
65014b3c:	call   0x65014638
65014b41:	push   DWORD PTR ds:0x6502d5a8
65014b47:	mov    ds:0x6502d5a4,eax
65014b4c:	call   0x65014638
65014b51:	push   DWORD PTR ds:0x6502d5ac
65014b57:	mov    ds:0x6502d5a8,eax
65014b5c:	call   0x65014638
65014b61:	push   DWORD PTR ds:0x6502d5b0
65014b67:	mov    ds:0x6502d5ac,eax
65014b6c:	call   0x65014638
65014b71:	add    esp,0x10
65014b74:	mov    ds:0x6502d5b0,eax
65014b79:	call   0x65019d59
65014b7e:	test   eax,eax
65014b80:	je     0x65014be7
65014b82:	push   0x650148e3
65014b87:	push   DWORD PTR ds:0x6502d5a4
65014b8d:	call   0x650146af
65014b92:	pop    ecx
65014b93:	call   eax
65014b95:	cmp    eax,0xffffffff
65014b98:	mov    ds:0x6502c220,eax
65014b9d:	je     0x65014be7
65014b9f:	push   0x214
65014ba4:	push   0x1
65014ba6:	call   0x65015bd0
65014bab:	mov    esi,eax
65014bad:	test   esi,esi
65014baf:	pop    ecx
65014bb0:	pop    ecx
65014bb1:	je     0x65014be7
65014bb3:	push   esi
65014bb4:	push   DWORD PTR ds:0x6502c220
65014bba:	push   DWORD PTR ds:0x6502d5ac
65014bc0:	call   0x650146af
65014bc5:	pop    ecx
65014bc6:	call   eax
65014bc8:	test   eax,eax
65014bca:	je     0x65014be7
65014bcc:	push   0x0
65014bce:	push   esi
65014bcf:	call   0x65014795
65014bd4:	pop    ecx
65014bd5:	pop    ecx
65014bd6:	call   DWORD PTR ds:0x65024114
65014bdc:	or     DWORD PTR [esi+0x4],0xffffffff
65014be0:	mov    DWORD PTR [esi],eax
65014be2:	xor    eax,eax
65014be4:	inc    eax
65014be5:	jmp    0x65014bee
65014be7:	call   0x65014758
65014bec:	xor    eax,eax
65014bee:	pop    esi
65014bef:	pop    edi
65014bf0:	ret    
65014bf1:	mov    eax,DWORD PTR [esp+0x4]
65014bf5:	mov    ds:0x6502d5b4,eax
65014bfa:	ret    
65014bfb:	push   DWORD PTR ds:0x6502d5b4
65014c01:	call   0x650146af
65014c06:	test   eax,eax
65014c08:	pop    ecx
65014c09:	je     0x65014c1a
65014c0b:	push   DWORD PTR [esp+0x4]
65014c0f:	call   eax
65014c11:	test   eax,eax
65014c13:	pop    ecx
65014c14:	je     0x65014c1a
65014c16:	xor    eax,eax
65014c18:	inc    eax
65014c19:	ret    
65014c1a:	xor    eax,eax
65014c1c:	ret    
65014c1d:	push   0xc
65014c1f:	push   0x65029af0
65014c24:	call   0x65013e70
65014c29:	push   0xe
65014c2b:	call   0x65019ecf
65014c30:	pop    ecx
65014c31:	and    DWORD PTR [ebp-0x4],0x0
65014c35:	mov    esi,DWORD PTR [ebp+0x8]
65014c38:	mov    ecx,DWORD PTR [esi+0x4]
65014c3b:	test   ecx,ecx
65014c3d:	je     0x65014c6e
65014c3f:	mov    eax,ds:0x6502d5bc
65014c44:	mov    edx,0x6502d5b8
65014c49:	mov    DWORD PTR [ebp-0x1c],eax
65014c4c:	test   eax,eax
65014c4e:	je     0x65014c61
65014c50:	cmp    DWORD PTR [eax],ecx
65014c52:	jne    0x65014c80
65014c54:	mov    ecx,DWORD PTR [eax+0x4]
65014c57:	mov    DWORD PTR [edx+0x4],ecx
65014c5a:	push   eax
65014c5b:	call   0x65013746
65014c60:	pop    ecx
65014c61:	push   DWORD PTR [esi+0x4]
65014c64:	call   0x65013746
65014c69:	pop    ecx
65014c6a:	and    DWORD PTR [esi+0x4],0x0
65014c6e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014c75:	call   0x65014c84
65014c7a:	call   0x65013eb5
65014c7f:	ret    
65014c80:	mov    edx,eax
65014c82:	jmp    0x65014c49
65014c84:	push   0xe
65014c86:	call   0x65019df7
65014c8b:	pop    ecx
65014c8c:	ret    
65014c8d:	int3   
65014c8e:	int3   
65014c8f:	int3   
65014c90:	mov    edx,DWORD PTR [esp+0x4]
65014c94:	mov    ecx,DWORD PTR [esp+0x8]
65014c98:	test   edx,0x3
65014c9e:	jne    0x65014cdc
65014ca0:	mov    eax,DWORD PTR [edx]
65014ca2:	cmp    al,BYTE PTR [ecx]
65014ca4:	jne    0x65014cd4
65014ca6:	or     al,al
65014ca8:	je     0x65014cd0
65014caa:	cmp    ah,BYTE PTR [ecx+0x1]
65014cad:	jne    0x65014cd4
65014caf:	or     ah,ah
65014cb1:	je     0x65014cd0
65014cb3:	shr    eax,0x10
65014cb6:	cmp    al,BYTE PTR [ecx+0x2]
65014cb9:	jne    0x65014cd4
65014cbb:	or     al,al
65014cbd:	je     0x65014cd0
65014cbf:	cmp    ah,BYTE PTR [ecx+0x3]
65014cc2:	jne    0x65014cd4
65014cc4:	add    ecx,0x4
65014cc7:	add    edx,0x4
65014cca:	or     ah,ah
65014ccc:	jne    0x65014ca0
65014cce:	mov    edi,edi
65014cd0:	xor    eax,eax
65014cd2:	ret    
65014cd3:	nop
65014cd4:	sbb    eax,eax
65014cd6:	shl    eax,1
65014cd8:	add    eax,0x1
65014cdb:	ret    
65014cdc:	test   edx,0x1
65014ce2:	je     0x65014cfc
65014ce4:	mov    al,BYTE PTR [edx]
65014ce6:	add    edx,0x1
65014ce9:	cmp    al,BYTE PTR [ecx]
65014ceb:	jne    0x65014cd4
65014ced:	add    ecx,0x1
65014cf0:	or     al,al
65014cf2:	je     0x65014cd0
65014cf4:	test   edx,0x2
65014cfa:	je     0x65014ca0
65014cfc:	mov    ax,WORD PTR [edx]
65014cff:	add    edx,0x2
65014d02:	cmp    al,BYTE PTR [ecx]
65014d04:	jne    0x65014cd4
65014d06:	or     al,al
65014d08:	je     0x65014cd0
65014d0a:	cmp    ah,BYTE PTR [ecx+0x1]
65014d0d:	jne    0x65014cd4
65014d0f:	or     ah,ah
65014d11:	je     0x65014cd0
65014d13:	add    ecx,0x2
65014d16:	jmp    0x65014ca0
65014d18:	mov    DWORD PTR [ecx],0x65024d20
65014d1e:	jmp    0x650121a6
65014d23:	push   esi
65014d24:	mov    esi,ecx
65014d26:	mov    DWORD PTR [esi],0x65024d20
65014d2c:	call   0x650121a6
65014d31:	test   BYTE PTR [esp+0x8],0x1
65014d36:	je     0x65014d3f
65014d38:	push   esi
65014d39:	call   0x650120d2
65014d3e:	pop    ecx
65014d3f:	mov    eax,esi
65014d41:	pop    esi
65014d42:	ret    0x4
65014d45:	push   esi
65014d46:	push   edi
65014d47:	mov    edi,DWORD PTR [esp+0xc]
65014d4b:	mov    eax,DWORD PTR [edi+0x4]
65014d4e:	test   eax,eax
65014d50:	je     0x65014d9b
65014d52:	lea    edx,[eax+0x8]
65014d55:	cmp    BYTE PTR [edx],0x0
65014d58:	je     0x65014d9b
65014d5a:	mov    esi,DWORD PTR [esp+0x10]
65014d5e:	mov    ecx,DWORD PTR [esi+0x4]
65014d61:	cmp    eax,ecx
65014d63:	je     0x65014d79
65014d65:	add    ecx,0x8
65014d68:	push   ecx
65014d69:	push   edx
65014d6a:	call   0x65014c90
65014d6f:	test   eax,eax
65014d71:	pop    ecx
65014d72:	pop    ecx
65014d73:	je     0x65014d79
65014d75:	xor    eax,eax
65014d77:	jmp    0x65014d9e
65014d79:	test   BYTE PTR [esi],0x2
65014d7c:	je     0x65014d83
65014d7e:	test   BYTE PTR [edi],0x8
65014d81:	je     0x65014d75
65014d83:	mov    eax,DWORD PTR [esp+0x14]
65014d87:	mov    eax,DWORD PTR [eax]
65014d89:	test   al,0x1
65014d8b:	je     0x65014d92
65014d8d:	test   BYTE PTR [edi],0x1
65014d90:	je     0x65014d75
65014d92:	test   al,0x2
65014d94:	je     0x65014d9b
65014d96:	test   BYTE PTR [edi],0x2
65014d99:	je     0x65014d75
65014d9b:	xor    eax,eax
65014d9d:	inc    eax
65014d9e:	pop    edi
65014d9f:	pop    esi
65014da0:	ret    
65014da1:	mov    eax,DWORD PTR [esp+0x4]
65014da5:	mov    eax,DWORD PTR [eax]
65014da7:	mov    eax,DWORD PTR [eax]
65014da9:	cmp    eax,0xe0434f4d
65014dae:	je     0x65014dc8
65014db0:	cmp    eax,0xe06d7363
65014db5:	jne    0x65014de2
65014db7:	call   0x650148cb
65014dbc:	and    DWORD PTR [eax+0x90],0x0
65014dc3:	jmp    0x650159a2
65014dc8:	call   0x650148cb
65014dcd:	cmp    DWORD PTR [eax+0x90],0x0
65014dd4:	jle    0x65014de2
65014dd6:	call   0x650148cb
65014ddb:	add    eax,0x90
65014de0:	dec    DWORD PTR [eax]
65014de2:	xor    eax,eax
65014de4:	ret    
65014de5:	push   0x10
65014de7:	push   0x65029b10
65014dec:	call   0x65013e70
65014df1:	mov    edi,DWORD PTR [ebp+0x10]
65014df4:	mov    ebx,DWORD PTR [ebp+0x8]
65014df7:	cmp    DWORD PTR [edi+0x4],0x80
65014dfe:	jg     0x65014e06
65014e00:	movsx  esi,BYTE PTR [ebx+0x8]
65014e04:	jmp    0x65014e09
65014e06:	mov    esi,DWORD PTR [ebx+0x8]
65014e09:	mov    DWORD PTR [ebp-0x1c],esi
65014e0c:	call   0x650148cb
65014e11:	add    eax,0x90
65014e16:	inc    DWORD PTR [eax]
65014e18:	and    DWORD PTR [ebp-0x4],0x0
65014e1c:	cmp    esi,DWORD PTR [ebp+0x14]
65014e1f:	je     0x65014e86
65014e21:	cmp    esi,0xffffffff
65014e24:	jle    0x65014e2b
65014e26:	cmp    esi,DWORD PTR [edi+0x4]
65014e29:	jl     0x65014e30
65014e2b:	call   0x650159ee
65014e30:	mov    eax,esi
65014e32:	shl    eax,0x3
65014e35:	mov    ecx,DWORD PTR [edi+0x8]
65014e38:	add    ecx,eax
65014e3a:	mov    esi,DWORD PTR [ecx]
65014e3c:	mov    DWORD PTR [ebp-0x20],esi
65014e3f:	mov    DWORD PTR [ebp-0x4],0x1
65014e46:	cmp    DWORD PTR [ecx+0x4],0x0
65014e4a:	je     0x65014e61
65014e4c:	mov    DWORD PTR [ebx+0x8],esi
65014e4f:	push   0x103
65014e54:	push   ebx
65014e55:	mov    ecx,DWORD PTR [edi+0x8]
65014e58:	push   DWORD PTR [ecx+eax*1+0x4]
65014e5c:	call   0x65015a40
65014e61:	and    DWORD PTR [ebp-0x4],0x0
65014e65:	jmp    0x65014e81
65014e67:	push   DWORD PTR [ebp-0x14]
65014e6a:	call   0x65014da1
65014e6f:	pop    ecx
65014e70:	ret    
65014e71:	mov    esp,DWORD PTR [ebp-0x18]
65014e74:	and    DWORD PTR [ebp-0x4],0x0
65014e78:	mov    edi,DWORD PTR [ebp+0x10]
65014e7b:	mov    ebx,DWORD PTR [ebp+0x8]
65014e7e:	mov    esi,DWORD PTR [ebp-0x20]
65014e81:	mov    DWORD PTR [ebp-0x1c],esi
65014e84:	jmp    0x65014e1c
65014e86:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014e8d:	call   0x65014eab
65014e92:	cmp    esi,DWORD PTR [ebp+0x14]
65014e95:	je     0x65014e9c
65014e97:	call   0x650159ee
65014e9c:	mov    DWORD PTR [ebx+0x8],esi
65014e9f:	call   0x65013eb5
65014ea4:	ret    
65014ea5:	mov    ebx,DWORD PTR [ebp+0x8]
65014ea8:	mov    esi,DWORD PTR [ebp-0x1c]
65014eab:	call   0x650148cb
65014eb0:	cmp    DWORD PTR [eax+0x90],0x0
65014eb7:	jle    0x65014ec5
65014eb9:	call   0x650148cb
65014ebe:	add    eax,0x90
65014ec3:	dec    DWORD PTR [eax]
65014ec5:	ret    
65014ec6:	mov    eax,DWORD PTR [eax]
65014ec8:	cmp    DWORD PTR [eax],0xe06d7363
65014ece:	jne    0x65014f08
65014ed0:	cmp    DWORD PTR [eax+0x10],0x3
65014ed4:	jne    0x65014f08
65014ed6:	mov    ecx,DWORD PTR [eax+0x14]
65014ed9:	cmp    ecx,0x19930520
65014edf:	je     0x65014ef1
65014ee1:	cmp    ecx,0x19930521
65014ee7:	je     0x65014ef1
65014ee9:	cmp    ecx,0x19930522
65014eef:	jne    0x65014f08
65014ef1:	cmp    DWORD PTR [eax+0x1c],0x0
65014ef5:	jne    0x65014f08
65014ef7:	call   0x650148cb
65014efc:	xor    ecx,ecx
65014efe:	inc    ecx
65014eff:	mov    DWORD PTR [eax+0x20c],ecx
65014f05:	mov    eax,ecx
65014f07:	ret    
65014f08:	xor    eax,eax
65014f0a:	ret    
65014f0b:	push   0x8
65014f0d:	push   0x65029b38
65014f12:	call   0x65013e70
65014f17:	mov    ecx,DWORD PTR [ebp+0x8]
65014f1a:	test   ecx,ecx
65014f1c:	je     0x65014f48
65014f1e:	cmp    DWORD PTR [ecx],0xe06d7363
65014f24:	jne    0x65014f48
65014f26:	mov    eax,DWORD PTR [ecx+0x1c]
65014f29:	test   eax,eax
65014f2b:	je     0x65014f48
65014f2d:	mov    eax,DWORD PTR [eax+0x4]
65014f30:	test   eax,eax
65014f32:	je     0x65014f48
65014f34:	and    DWORD PTR [ebp-0x4],0x0
65014f38:	push   eax
65014f39:	push   DWORD PTR [ecx+0x18]
65014f3c:	call   0x65012595
65014f41:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014f48:	call   0x65013eb5
65014f4d:	ret    
65014f4e:	xor    eax,eax
65014f50:	cmp    BYTE PTR [ebp+0xc],al
65014f53:	setne  al
65014f56:	ret    
65014f57:	mov    esp,DWORD PTR [ebp-0x18]
65014f5a:	jmp    0x650159a2
65014f5f:	mov    ecx,DWORD PTR [esp+0x8]
65014f63:	mov    eax,DWORD PTR [ecx]
65014f65:	push   esi
65014f66:	mov    esi,DWORD PTR [esp+0x8]
65014f6a:	add    eax,esi
65014f6c:	cmp    DWORD PTR [ecx+0x4],0x0
65014f70:	jl     0x65014f82
65014f72:	mov    edx,DWORD PTR [ecx+0x4]
65014f75:	mov    ecx,DWORD PTR [ecx+0x8]
65014f78:	mov    esi,DWORD PTR [edx+esi*1]
65014f7b:	mov    ecx,DWORD PTR [esi+ecx*1]
65014f7e:	add    ecx,edx
65014f80:	add    eax,ecx
65014f82:	pop    esi
65014f83:	ret    
65014f84:	push   ebp
65014f85:	mov    ebp,esp
65014f87:	sub    esp,0xc
65014f8a:	test   edi,edi
65014f8c:	jne    0x65014f98
65014f8e:	call   0x650159ee
65014f93:	jmp    0x650159a2
65014f98:	and    DWORD PTR [ebp-0x8],0x0
65014f9c:	cmp    DWORD PTR [edi],0x0
65014f9f:	mov    BYTE PTR [ebp-0x1],0x0
65014fa3:	jle    0x65014ff8
65014fa5:	push   ebx
65014fa6:	push   esi
65014fa7:	mov    eax,DWORD PTR [ebp+0x8]
65014faa:	mov    eax,DWORD PTR [eax+0x1c]
65014fad:	mov    eax,DWORD PTR [eax+0xc]
65014fb0:	mov    ebx,DWORD PTR [eax]
65014fb2:	test   ebx,ebx
65014fb4:	lea    esi,[eax+0x4]
65014fb7:	jle    0x65014fec
65014fb9:	mov    eax,DWORD PTR [ebp-0x8]
65014fbc:	shl    eax,0x4
65014fbf:	mov    DWORD PTR [ebp-0xc],eax
65014fc2:	mov    ecx,DWORD PTR [ebp+0x8]
65014fc5:	push   DWORD PTR [ecx+0x1c]
65014fc8:	mov    eax,DWORD PTR [esi]
65014fca:	push   eax
65014fcb:	mov    eax,DWORD PTR [edi+0x4]
65014fce:	add    eax,DWORD PTR [ebp-0xc]
65014fd1:	push   eax
65014fd2:	call   0x65014d45
65014fd7:	add    esp,0xc
65014fda:	test   eax,eax
65014fdc:	jne    0x65014fe8
65014fde:	dec    ebx
65014fdf:	add    esi,0x4
65014fe2:	test   ebx,ebx
65014fe4:	jg     0x65014fc2
65014fe6:	jmp    0x65014fec
65014fe8:	mov    BYTE PTR [ebp-0x1],0x1
65014fec:	inc    DWORD PTR [ebp-0x8]
65014fef:	mov    eax,DWORD PTR [ebp-0x8]
65014ff2:	cmp    eax,DWORD PTR [edi]
65014ff4:	jl     0x65014fa7
65014ff6:	pop    esi
65014ff7:	pop    ebx
65014ff8:	mov    al,BYTE PTR [ebp-0x1]
65014ffb:	leave  
65014ffc:	ret    
65014ffd:	push   0x4
65014fff:	mov    eax,0x65022243
65015004:	call   0x6501413e
65015009:	call   0x650148cb
6501500e:	cmp    DWORD PTR [eax+0x94],0x0
65015015:	je     0x6501501c
65015017:	call   0x650159ee
6501501c:	and    DWORD PTR [ebp-0x4],0x0
65015020:	call   0x650159db
65015025:	or     DWORD PTR [ebp-0x4],0xffffffff
65015029:	jmp    0x650159a2
6501502e:	call   0x650148cb
65015033:	mov    ecx,DWORD PTR [ebp+0x8]
65015036:	push   0x0
65015038:	push   0x0
6501503a:	mov    DWORD PTR [eax+0x94],ecx
65015040:	call   0x650124d6
65015045:	int3   
65015046:	push   0x2c
65015048:	push   0x65029bb0
6501504d:	call   0x65013e70
65015052:	mov    ebx,ecx
65015054:	mov    edi,DWORD PTR [ebp+0xc]
65015057:	mov    esi,DWORD PTR [ebp+0x8]
6501505a:	mov    DWORD PTR [ebp-0x1c],ebx
6501505d:	and    DWORD PTR [ebp-0x34],0x0
65015061:	mov    eax,DWORD PTR [edi-0x4]
65015064:	mov    DWORD PTR [ebp-0x24],eax
65015067:	push   DWORD PTR [esi+0x18]
6501506a:	lea    eax,[ebp-0x3c]
6501506d:	push   eax
6501506e:	call   0x65012839
65015073:	pop    ecx
65015074:	pop    ecx
65015075:	mov    DWORD PTR [ebp-0x28],eax
65015078:	call   0x650148cb
6501507d:	mov    eax,DWORD PTR [eax+0x88]
65015083:	mov    DWORD PTR [ebp-0x2c],eax
65015086:	call   0x650148cb
6501508b:	mov    eax,DWORD PTR [eax+0x8c]
65015091:	mov    DWORD PTR [ebp-0x30],eax
65015094:	call   0x650148cb
65015099:	mov    DWORD PTR [eax+0x88],esi
6501509f:	call   0x650148cb
650150a4:	mov    ecx,DWORD PTR [ebp+0x10]
650150a7:	mov    DWORD PTR [eax+0x8c],ecx
650150ad:	and    DWORD PTR [ebp-0x4],0x0
650150b1:	xor    eax,eax
650150b3:	inc    eax
650150b4:	mov    DWORD PTR [ebp+0x10],eax
650150b7:	mov    DWORD PTR [ebp-0x4],eax
650150ba:	push   DWORD PTR [ebp+0x1c]
650150bd:	push   DWORD PTR [ebp+0x18]
650150c0:	push   ebx
650150c1:	push   DWORD PTR [ebp+0x14]
650150c4:	push   edi
650150c5:	call   0x650128ce
650150ca:	add    esp,0x14
650150cd:	mov    DWORD PTR [ebp-0x1c],eax
650150d0:	and    DWORD PTR [ebp-0x4],0x0
650150d4:	jmp    0x65015145
650150d6:	mov    eax,DWORD PTR [ebp-0x14]
650150d9:	call   0x65014ec6
650150de:	ret    
650150df:	mov    esp,DWORD PTR [ebp-0x18]
650150e2:	call   0x650148cb
650150e7:	and    DWORD PTR [eax+0x20c],0x0
650150ee:	mov    esi,DWORD PTR [ebp+0x14]
650150f1:	mov    edi,DWORD PTR [ebp+0xc]
650150f4:	cmp    DWORD PTR [esi+0x4],0x80
650150fb:	jg     0x65015103
650150fd:	movsx  ecx,BYTE PTR [edi+0x8]
65015101:	jmp    0x65015106
65015103:	mov    ecx,DWORD PTR [edi+0x8]
65015106:	mov    ebx,DWORD PTR [esi+0x10]
65015109:	and    DWORD PTR [ebp-0x20],0x0
6501510d:	mov    eax,DWORD PTR [ebp-0x20]
65015110:	cmp    eax,DWORD PTR [esi+0xc]
65015113:	jae    0x6501512d
65015115:	imul   eax,eax,0x14
65015118:	add    eax,ebx
6501511a:	mov    edx,DWORD PTR [eax+0x4]
6501511d:	cmp    ecx,edx
6501511f:	jle    0x65015161
65015121:	cmp    ecx,DWORD PTR [eax+0x8]
65015124:	jg     0x65015161
65015126:	mov    eax,DWORD PTR [esi+0x8]
65015129:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
6501512d:	push   ecx
6501512e:	push   esi
6501512f:	push   0x0
65015131:	push   edi
65015132:	call   0x65014de5
65015137:	add    esp,0x10
6501513a:	and    DWORD PTR [ebp-0x1c],0x0
6501513e:	and    DWORD PTR [ebp-0x4],0x0
65015142:	mov    esi,DWORD PTR [ebp+0x8]
65015145:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501514c:	mov    DWORD PTR [ebp+0x10],0x0
65015153:	call   0x6501516c
65015158:	mov    eax,DWORD PTR [ebp-0x1c]
6501515b:	call   0x65013eb5
65015160:	ret    
65015161:	inc    DWORD PTR [ebp-0x20]
65015164:	jmp    0x6501510d
65015166:	mov    edi,DWORD PTR [ebp+0xc]
65015169:	mov    esi,DWORD PTR [ebp+0x8]
6501516c:	mov    eax,DWORD PTR [ebp-0x24]
6501516f:	mov    DWORD PTR [edi-0x4],eax
65015172:	push   DWORD PTR [ebp-0x28]
65015175:	call   0x65012882
6501517a:	pop    ecx
6501517b:	call   0x650148cb
65015180:	mov    ecx,DWORD PTR [ebp-0x2c]
65015183:	mov    DWORD PTR [eax+0x88],ecx
65015189:	call   0x650148cb
6501518e:	mov    ecx,DWORD PTR [ebp-0x30]
65015191:	mov    DWORD PTR [eax+0x8c],ecx
65015197:	cmp    DWORD PTR [esi],0xe06d7363
6501519d:	jne    0x650151e1
6501519f:	cmp    DWORD PTR [esi+0x10],0x3
650151a3:	jne    0x650151e1
650151a5:	mov    eax,DWORD PTR [esi+0x14]
650151a8:	cmp    eax,0x19930520
650151ad:	je     0x650151bd
650151af:	cmp    eax,0x19930521
650151b4:	je     0x650151bd
650151b6:	cmp    eax,0x19930522
650151bb:	jne    0x650151e1
650151bd:	cmp    DWORD PTR [ebp-0x34],0x0
650151c1:	jne    0x650151e1
650151c3:	cmp    DWORD PTR [ebp-0x1c],0x0
650151c7:	je     0x650151e1
650151c9:	push   DWORD PTR [esi+0x18]
650151cc:	call   0x65012861
650151d1:	pop    ecx
650151d2:	test   eax,eax
650151d4:	je     0x650151e1
650151d6:	push   DWORD PTR [ebp+0x10]
650151d9:	push   esi
650151da:	call   0x65014f0b
650151df:	pop    ecx
650151e0:	pop    ecx
650151e1:	ret    
650151e2:	push   0xc
650151e4:	push   0x65029bd8
650151e9:	call   0x65013e70
650151ee:	xor    edx,edx
650151f0:	mov    DWORD PTR [ebp-0x1c],edx
650151f3:	mov    eax,DWORD PTR [ebp+0x10]
650151f6:	mov    ecx,DWORD PTR [eax+0x4]
650151f9:	cmp    ecx,edx
650151fb:	je     0x65015359
65015201:	cmp    BYTE PTR [ecx+0x8],dl
65015204:	je     0x65015359
6501520a:	mov    ecx,DWORD PTR [eax+0x8]
6501520d:	cmp    ecx,edx
6501520f:	jne    0x6501521d
65015211:	test   DWORD PTR [eax],0x80000000
65015217:	je     0x65015359
6501521d:	mov    eax,DWORD PTR [eax]
6501521f:	mov    esi,DWORD PTR [ebp+0xc]
65015222:	test   eax,eax
65015224:	js     0x6501522a
65015226:	lea    esi,[ecx+esi*1+0xc]
6501522a:	mov    DWORD PTR [ebp-0x4],edx
6501522d:	xor    ebx,ebx
6501522f:	inc    ebx
65015230:	push   ebx
65015231:	test   al,0x8
65015233:	je     0x65015276
65015235:	mov    edi,DWORD PTR [ebp+0x8]
65015238:	push   DWORD PTR [edi+0x18]
6501523b:	call   0x6501afdb
65015240:	pop    ecx
65015241:	pop    ecx
65015242:	test   eax,eax
65015244:	je     0x6501533c
6501524a:	push   ebx
6501524b:	push   esi
6501524c:	call   0x6501afdb
65015251:	pop    ecx
65015252:	pop    ecx
65015253:	test   eax,eax
65015255:	je     0x6501533c
6501525b:	mov    eax,DWORD PTR [edi+0x18]
6501525e:	mov    DWORD PTR [esi],eax
65015260:	mov    ecx,DWORD PTR [ebp+0x14]
65015263:	add    ecx,0x8
65015266:	push   ecx
65015267:	push   eax
65015268:	call   0x65014f5f
6501526d:	pop    ecx
6501526e:	pop    ecx
6501526f:	mov    DWORD PTR [esi],eax
65015271:	jmp    0x65015341
65015276:	mov    edi,DWORD PTR [ebp+0x14]
65015279:	mov    eax,DWORD PTR [ebp+0x8]
6501527c:	push   DWORD PTR [eax+0x18]
6501527f:	test   BYTE PTR [edi],bl
65015281:	je     0x650152cb
65015283:	call   0x6501afdb
65015288:	pop    ecx
65015289:	pop    ecx
6501528a:	test   eax,eax
6501528c:	je     0x6501533c
65015292:	push   ebx
65015293:	push   esi
65015294:	call   0x6501afdb
65015299:	pop    ecx
6501529a:	pop    ecx
6501529b:	test   eax,eax
6501529d:	je     0x6501533c
650152a3:	push   DWORD PTR [edi+0x14]
650152a6:	mov    eax,DWORD PTR [ebp+0x8]
650152a9:	push   DWORD PTR [eax+0x18]
650152ac:	push   esi
650152ad:	call   0x650138f0
650152b2:	add    esp,0xc
650152b5:	cmp    DWORD PTR [edi+0x14],0x4
650152b9:	jne    0x65015341
650152bf:	mov    eax,DWORD PTR [esi]
650152c1:	test   eax,eax
650152c3:	je     0x65015341
650152c5:	add    edi,0x8
650152c8:	push   edi
650152c9:	jmp    0x65015267
650152cb:	cmp    DWORD PTR [edi+0x18],edx
650152ce:	jne    0x65015308
650152d0:	call   0x6501afdb
650152d5:	pop    ecx
650152d6:	pop    ecx
650152d7:	test   eax,eax
650152d9:	je     0x6501533c
650152db:	push   ebx
650152dc:	push   esi
650152dd:	call   0x6501afdb
650152e2:	pop    ecx
650152e3:	pop    ecx
650152e4:	test   eax,eax
650152e6:	je     0x6501533c
650152e8:	push   DWORD PTR [edi+0x14]
650152eb:	add    edi,0x8
650152ee:	push   edi
650152ef:	mov    eax,DWORD PTR [ebp+0x8]
650152f2:	push   DWORD PTR [eax+0x18]
650152f5:	call   0x65014f5f
650152fa:	pop    ecx
650152fb:	pop    ecx
650152fc:	push   eax
650152fd:	push   esi
650152fe:	call   0x650138f0
65015303:	add    esp,0xc
65015306:	jmp    0x65015341
65015308:	call   0x6501afdb
6501530d:	pop    ecx
6501530e:	pop    ecx
6501530f:	test   eax,eax
65015311:	je     0x6501533c
65015313:	push   ebx
65015314:	push   esi
65015315:	call   0x6501afdb
6501531a:	pop    ecx
6501531b:	pop    ecx
6501531c:	test   eax,eax
6501531e:	je     0x6501533c
65015320:	push   DWORD PTR [edi+0x18]
65015323:	call   0x6501afdb
65015328:	pop    ecx
65015329:	test   eax,eax
6501532b:	je     0x6501533c
6501532d:	test   BYTE PTR [edi],0x4
65015330:	push   0x0
65015332:	pop    eax
65015333:	setne  al
65015336:	inc    eax
65015337:	mov    DWORD PTR [ebp-0x1c],eax
6501533a:	jmp    0x65015341
6501533c:	call   0x650159ee
65015341:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015348:	mov    eax,DWORD PTR [ebp-0x1c]
6501534b:	jmp    0x6501535b
6501534d:	xor    eax,eax
6501534f:	inc    eax
65015350:	ret    
65015351:	mov    esp,DWORD PTR [ebp-0x18]
65015354:	jmp    0x650159a2
65015359:	xor    eax,eax
6501535b:	call   0x65013eb5
65015360:	ret    
65015361:	push   0x8
65015363:	push   0x65029bf8
65015368:	call   0x65013e70
6501536d:	mov    eax,DWORD PTR [ebp+0x10]
65015370:	test   DWORD PTR [eax],0x80000000
65015376:	je     0x6501537d
65015378:	mov    ebx,DWORD PTR [ebp+0xc]
6501537b:	jmp    0x65015387
6501537d:	mov    ecx,DWORD PTR [eax+0x8]
65015380:	mov    edx,DWORD PTR [ebp+0xc]
65015383:	lea    ebx,[ecx+edx*1+0xc]
65015387:	and    DWORD PTR [ebp-0x4],0x0
6501538b:	mov    esi,DWORD PTR [ebp+0x14]
6501538e:	push   esi
6501538f:	push   eax
65015390:	push   DWORD PTR [ebp+0xc]
65015393:	mov    edi,DWORD PTR [ebp+0x8]
65015396:	push   edi
65015397:	call   0x650151e2
6501539c:	add    esp,0x10
6501539f:	dec    eax
650153a0:	je     0x650153c1
650153a2:	dec    eax
650153a3:	jne    0x650153d9
650153a5:	push   0x1
650153a7:	lea    eax,[esi+0x8]
650153aa:	push   eax
650153ab:	push   DWORD PTR [edi+0x18]
650153ae:	call   0x65014f5f
650153b3:	pop    ecx
650153b4:	pop    ecx
650153b5:	push   eax
650153b6:	push   DWORD PTR [esi+0x18]
650153b9:	push   ebx
650153ba:	call   0x65012595
650153bf:	jmp    0x650153d9
650153c1:	lea    eax,[esi+0x8]
650153c4:	push   eax
650153c5:	push   DWORD PTR [edi+0x18]
650153c8:	call   0x65014f5f
650153cd:	pop    ecx
650153ce:	pop    ecx
650153cf:	push   eax
650153d0:	push   DWORD PTR [esi+0x18]
650153d3:	push   ebx
650153d4:	call   0x65012595
650153d9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650153e0:	call   0x65013eb5
650153e5:	ret    
650153e6:	xor    eax,eax
650153e8:	inc    eax
650153e9:	ret    
650153ea:	mov    esp,DWORD PTR [ebp-0x18]
650153ed:	jmp    0x650159a2
650153f2:	push   ebp
650153f3:	mov    ebp,esp
650153f5:	cmp    DWORD PTR [ebp+0x18],0x0
650153f9:	je     0x6501540b
650153fb:	push   DWORD PTR [ebp+0x18]
650153fe:	push   ebx
650153ff:	push   esi
65015400:	push   DWORD PTR [ebp+0x8]
65015403:	call   0x65015361
65015408:	add    esp,0x10
6501540b:	cmp    DWORD PTR [ebp+0x20],0x0
6501540f:	push   DWORD PTR [ebp+0x8]
65015412:	jne    0x65015417
65015414:	push   esi
65015415:	jmp    0x6501541a
65015417:	push   DWORD PTR [ebp+0x20]
6501541a:	call   0x6501259c
6501541f:	push   DWORD PTR [edi]
65015421:	push   DWORD PTR [ebp+0x14]
65015424:	push   DWORD PTR [ebp+0x10]
65015427:	push   esi
65015428:	call   0x65014de5
6501542d:	mov    eax,DWORD PTR [edi+0x4]
65015430:	push   0x100
65015435:	push   DWORD PTR [ebp+0x1c]
65015438:	inc    eax
65015439:	push   DWORD PTR [ebp+0x14]
6501543c:	mov    DWORD PTR [esi+0x8],eax
6501543f:	push   DWORD PTR [ebp+0xc]
65015442:	mov    ecx,DWORD PTR [ebx+0xc]
65015445:	push   esi
65015446:	push   DWORD PTR [ebp+0x8]
65015449:	call   0x65015046
6501544e:	add    esp,0x28
65015451:	test   eax,eax
65015453:	je     0x6501545c
65015455:	push   esi
65015456:	push   eax
65015457:	call   0x65012565
6501545c:	pop    ebp
6501545d:	ret    
6501545e:	push   ebp
6501545f:	mov    ebp,esp
65015461:	push   ecx
65015462:	push   ecx
65015463:	push   esi
65015464:	mov    esi,DWORD PTR [ebp+0x8]
65015467:	cmp    DWORD PTR [esi],0x80000003
6501546d:	je     0x6501554d
65015473:	push   edi
65015474:	call   0x650148cb
65015479:	cmp    DWORD PTR [eax+0x80],0x0
65015480:	je     0x650154c1
65015482:	call   0x650148cb
65015487:	lea    edi,[eax+0x80]
6501548d:	call   0x650146a6
65015492:	cmp    DWORD PTR [edi],eax
65015494:	je     0x650154c1
65015496:	cmp    DWORD PTR [esi],0xe0434f4d
6501549c:	je     0x650154c1
6501549e:	push   DWORD PTR [ebp+0x24]
650154a1:	push   DWORD PTR [ebp+0x20]
650154a4:	push   DWORD PTR [ebp+0x18]
650154a7:	push   DWORD PTR [ebp+0x14]
650154aa:	push   DWORD PTR [ebp+0x10]
650154ad:	push   DWORD PTR [ebp+0xc]
650154b0:	push   esi
650154b1:	call   0x65012654
650154b6:	add    esp,0x1c
650154b9:	test   eax,eax
650154bb:	jne    0x6501554c
650154c1:	mov    edi,DWORD PTR [ebp+0x18]
650154c4:	cmp    DWORD PTR [edi+0xc],0x0
650154c8:	jne    0x650154cf
650154ca:	call   0x650159ee
650154cf:	mov    esi,DWORD PTR [ebp+0x1c]
650154d2:	lea    eax,[ebp-0x8]
650154d5:	push   eax
650154d6:	lea    eax,[ebp-0x4]
650154d9:	push   eax
650154da:	push   esi
650154db:	push   DWORD PTR [ebp+0x20]
650154de:	push   edi
650154df:	call   0x650127c6
650154e4:	mov    edi,eax
650154e6:	mov    eax,DWORD PTR [ebp-0x4]
650154e9:	add    esp,0x14
650154ec:	cmp    eax,DWORD PTR [ebp-0x8]
650154ef:	jae    0x6501554c
650154f1:	push   ebx
650154f2:	cmp    esi,DWORD PTR [edi]
650154f4:	jl     0x6501553d
650154f6:	cmp    esi,DWORD PTR [edi+0x4]
650154f9:	jg     0x6501553d
650154fb:	mov    eax,DWORD PTR [edi+0xc]
650154fe:	mov    ecx,DWORD PTR [edi+0x10]
65015501:	shl    eax,0x4
65015504:	add    eax,ecx
65015506:	mov    ecx,DWORD PTR [eax-0xc]
65015509:	test   ecx,ecx
6501550b:	je     0x65015513
6501550d:	cmp    BYTE PTR [ecx+0x8],0x0
65015511:	jne    0x6501553d
65015513:	lea    ebx,[eax-0x10]
65015516:	test   BYTE PTR [ebx],0x40
65015519:	jne    0x6501553d
6501551b:	push   DWORD PTR [ebp+0x24]
6501551e:	mov    esi,DWORD PTR [ebp+0xc]
65015521:	push   DWORD PTR [ebp+0x20]
65015524:	push   0x0
65015526:	push   DWORD PTR [ebp+0x18]
65015529:	push   DWORD PTR [ebp+0x14]
6501552c:	push   DWORD PTR [ebp+0x10]
6501552f:	push   DWORD PTR [ebp+0x8]
65015532:	call   0x650153f2
65015537:	mov    esi,DWORD PTR [ebp+0x1c]
6501553a:	add    esp,0x1c
6501553d:	inc    DWORD PTR [ebp-0x4]
65015540:	mov    eax,DWORD PTR [ebp-0x4]
65015543:	add    edi,0x14
65015546:	cmp    eax,DWORD PTR [ebp-0x8]
65015549:	jb     0x650154f2
6501554b:	pop    ebx
6501554c:	pop    edi
6501554d:	pop    esi
6501554e:	leave  
6501554f:	ret    
65015550:	push   ebp
65015551:	mov    ebp,esp
65015553:	sub    esp,0x2c
65015556:	mov    ecx,DWORD PTR [ebp+0xc]
65015559:	push   ebx
6501555a:	mov    ebx,DWORD PTR [ebp+0x18]
6501555d:	mov    eax,DWORD PTR [ebx+0x4]
65015560:	cmp    eax,0x80
65015565:	push   esi
65015566:	push   edi
65015567:	mov    BYTE PTR [ebp-0x1],0x0
6501556b:	jg     0x65015573
6501556d:	movsx  ecx,BYTE PTR [ecx+0x8]
65015571:	jmp    0x65015576
65015573:	mov    ecx,DWORD PTR [ecx+0x8]
65015576:	cmp    ecx,0xffffffff
65015579:	mov    DWORD PTR [ebp-0x8],ecx
6501557c:	jl     0x65015582
6501557e:	cmp    ecx,eax
65015580:	jl     0x65015587
65015582:	call   0x650159ee
65015587:	mov    esi,DWORD PTR [ebp+0x8]
6501558a:	mov    edi,0xe06d7363
6501558f:	cmp    DWORD PTR [esi],edi
65015591:	jne    0x65015862
65015597:	cmp    DWORD PTR [esi+0x10],0x3
6501559b:	mov    ebx,0x19930520
650155a0:	jne    0x650156cf
650155a6:	mov    eax,DWORD PTR [esi+0x14]
650155a9:	cmp    eax,ebx
650155ab:	je     0x650155bf
650155ad:	cmp    eax,0x19930521
650155b2:	je     0x650155bf
650155b4:	cmp    eax,0x19930522
650155b9:	jne    0x650156cf
650155bf:	cmp    DWORD PTR [esi+0x1c],0x0
650155c3:	jne    0x650156cf
650155c9:	call   0x650148cb
650155ce:	cmp    DWORD PTR [eax+0x88],0x0
650155d5:	je     0x650158a1
650155db:	call   0x650148cb
650155e0:	mov    esi,DWORD PTR [eax+0x88]
650155e6:	mov    DWORD PTR [ebp+0x8],esi
650155e9:	call   0x650148cb
650155ee:	mov    eax,DWORD PTR [eax+0x8c]
650155f4:	push   0x1
650155f6:	push   esi
650155f7:	mov    DWORD PTR [ebp+0x10],eax
650155fa:	call   0x6501afdb
650155ff:	test   eax,eax
65015601:	pop    ecx
65015602:	pop    ecx
65015603:	jne    0x6501560a
65015605:	call   0x650159ee
6501560a:	cmp    DWORD PTR [esi],edi
6501560c:	jne    0x65015634
6501560e:	cmp    DWORD PTR [esi+0x10],0x3
65015612:	jne    0x65015634
65015614:	mov    eax,DWORD PTR [esi+0x14]
65015617:	cmp    eax,ebx
65015619:	je     0x65015629
6501561b:	cmp    eax,0x19930521
65015620:	je     0x65015629
65015622:	cmp    eax,0x19930522
65015627:	jne    0x65015634
65015629:	cmp    DWORD PTR [esi+0x1c],0x0
6501562d:	jne    0x65015634
6501562f:	call   0x650159ee
65015634:	call   0x650148cb
65015639:	cmp    DWORD PTR [eax+0x94],0x0
65015640:	je     0x650156cf
65015646:	call   0x650148cb
6501564b:	mov    edi,DWORD PTR [eax+0x94]
65015651:	call   0x650148cb
65015656:	push   DWORD PTR [ebp+0x8]
65015659:	xor    esi,esi
6501565b:	mov    DWORD PTR [eax+0x94],esi
65015661:	call   0x65014f84
65015666:	test   al,al
65015668:	pop    ecx
65015669:	jne    0x650156c7
6501566b:	xor    ebx,ebx
6501566d:	cmp    DWORD PTR [edi],ebx
6501566f:	jle    0x6501568e
65015671:	mov    eax,DWORD PTR [edi+0x4]
65015674:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
65015678:	push   0x6502c234
6501567d:	call   0x6501254a
65015682:	test   al,al
65015684:	jne    0x65015693
65015686:	inc    esi
65015687:	add    ebx,0x10
6501568a:	cmp    esi,DWORD PTR [edi]
6501568c:	jl     0x65015671
6501568e:	jmp    0x650159a2
65015693:	push   0x1
65015695:	push   DWORD PTR [ebp+0x8]
65015698:	call   0x65014f0b
6501569d:	pop    ecx
6501569e:	pop    ecx
6501569f:	lea    eax,[ebp+0x8]
650156a2:	push   eax
650156a3:	lea    ecx,[ebp-0x2c]
650156a6:	mov    DWORD PTR [ebp+0x8],0x65024d28
650156ad:	call   0x650120e8
650156b2:	push   0x65029c14
650156b7:	lea    eax,[ebp-0x2c]
650156ba:	push   eax
650156bb:	mov    DWORD PTR [ebp-0x2c],0x65024d20
650156c2:	call   0x650124d6
650156c7:	mov    esi,DWORD PTR [ebp+0x8]
650156ca:	mov    edi,0xe06d7363
650156cf:	cmp    DWORD PTR [esi],edi
650156d1:	jne    0x6501585f
650156d7:	cmp    DWORD PTR [esi+0x10],0x3
650156db:	jne    0x6501585f
650156e1:	mov    eax,DWORD PTR [esi+0x14]
650156e4:	cmp    eax,ebx
650156e6:	je     0x650156fa
650156e8:	cmp    eax,0x19930521
650156ed:	je     0x650156fa
650156ef:	cmp    eax,0x19930522
650156f4:	jne    0x6501585f
650156fa:	mov    edi,DWORD PTR [ebp+0x18]
650156fd:	cmp    DWORD PTR [edi+0xc],0x0
65015701:	jbe    0x650157c6
65015707:	lea    eax,[ebp-0x1c]
6501570a:	push   eax
6501570b:	lea    eax,[ebp-0x10]
6501570e:	push   eax
6501570f:	push   DWORD PTR [ebp-0x8]
65015712:	push   DWORD PTR [ebp+0x20]
65015715:	push   edi
65015716:	call   0x650127c6
6501571b:	add    esp,0x14
6501571e:	mov    edi,eax
65015720:	mov    eax,DWORD PTR [ebp-0x10]
65015723:	cmp    eax,DWORD PTR [ebp-0x1c]
65015726:	jae    0x650157c3
6501572c:	mov    eax,DWORD PTR [ebp-0x8]
6501572f:	cmp    DWORD PTR [edi],eax
65015731:	jg     0x650157b8
65015737:	cmp    eax,DWORD PTR [edi+0x4]
6501573a:	jg     0x650157b8
6501573c:	mov    eax,DWORD PTR [edi+0x10]
6501573f:	mov    DWORD PTR [ebp-0xc],eax
65015742:	mov    eax,DWORD PTR [edi+0xc]
65015745:	test   eax,eax
65015747:	mov    DWORD PTR [ebp-0x18],eax
6501574a:	jle    0x650157b8
6501574c:	mov    eax,DWORD PTR [esi+0x1c]
6501574f:	mov    eax,DWORD PTR [eax+0xc]
65015752:	lea    ebx,[eax+0x4]
65015755:	mov    eax,DWORD PTR [eax]
65015757:	test   eax,eax
65015759:	mov    DWORD PTR [ebp-0x14],eax
6501575c:	jle    0x65015781
6501575e:	push   DWORD PTR [esi+0x1c]
65015761:	mov    eax,DWORD PTR [ebx]
65015763:	push   eax
65015764:	push   DWORD PTR [ebp-0xc]
65015767:	mov    DWORD PTR [ebp-0x20],eax
6501576a:	call   0x65014d45
6501576f:	add    esp,0xc
65015772:	test   eax,eax
65015774:	jne    0x65015790
65015776:	dec    DWORD PTR [ebp-0x14]
65015779:	add    ebx,0x4
6501577c:	cmp    DWORD PTR [ebp-0x14],eax
6501577f:	jg     0x6501575e
65015781:	dec    DWORD PTR [ebp-0x18]
65015784:	add    DWORD PTR [ebp-0xc],0x10
65015788:	cmp    DWORD PTR [ebp-0x18],0x0
6501578c:	jg     0x6501574c
6501578e:	jmp    0x650157b8
65015790:	push   DWORD PTR [ebp+0x24]
65015793:	mov    ebx,DWORD PTR [ebp-0xc]
65015796:	push   DWORD PTR [ebp+0x20]
65015799:	mov    BYTE PTR [ebp-0x1],0x1
6501579d:	push   DWORD PTR [ebp-0x20]
650157a0:	push   DWORD PTR [ebp+0x18]
650157a3:	push   DWORD PTR [ebp+0x14]
650157a6:	push   DWORD PTR [ebp+0x10]
650157a9:	push   esi
650157aa:	mov    esi,DWORD PTR [ebp+0xc]
650157ad:	call   0x650153f2
650157b2:	mov    esi,DWORD PTR [ebp+0x8]
650157b5:	add    esp,0x1c
650157b8:	inc    DWORD PTR [ebp-0x10]
650157bb:	add    edi,0x14
650157be:	jmp    0x65015720
650157c3:	mov    edi,DWORD PTR [ebp+0x18]
650157c6:	cmp    BYTE PTR [ebp+0x1c],0x0
650157ca:	je     0x650157d6
650157cc:	push   0x1
650157ce:	push   esi
650157cf:	call   0x65014f0b
650157d4:	pop    ecx
650157d5:	pop    ecx
650157d6:	cmp    BYTE PTR [ebp-0x1],0x0
650157da:	jne    0x6501588e
650157e0:	mov    eax,DWORD PTR [edi]
650157e2:	and    eax,0x1fffffff
650157e7:	cmp    eax,0x19930521
650157ec:	jb     0x6501588e
650157f2:	mov    edi,DWORD PTR [edi+0x1c]
650157f5:	test   edi,edi
650157f7:	je     0x6501588e
650157fd:	push   esi
650157fe:	call   0x65014f84
65015803:	test   al,al
65015805:	pop    ecx
65015806:	jne    0x6501588e
6501580c:	call   0x650148cb
65015811:	call   0x650148cb
65015816:	call   0x650148cb
6501581b:	mov    DWORD PTR [eax+0x88],esi
65015821:	call   0x650148cb
65015826:	cmp    DWORD PTR [ebp+0x24],0x0
6501582a:	mov    ecx,DWORD PTR [ebp+0x10]
6501582d:	mov    DWORD PTR [eax+0x8c],ecx
65015833:	push   esi
65015834:	jne    0x6501583b
65015836:	push   DWORD PTR [ebp+0xc]
65015839:	jmp    0x6501583e
6501583b:	push   DWORD PTR [ebp+0x24]
6501583e:	call   0x6501259c
65015843:	mov    esi,DWORD PTR [ebp+0x18]
65015846:	push   0xffffffff
65015848:	push   esi
65015849:	push   DWORD PTR [ebp+0x14]
6501584c:	push   DWORD PTR [ebp+0xc]
6501584f:	call   0x65014de5
65015854:	add    esp,0x10
65015857:	push   DWORD PTR [esi+0x1c]
6501585a:	call   0x65014ffd
6501585f:	mov    ebx,DWORD PTR [ebp+0x18]
65015862:	cmp    DWORD PTR [ebx+0xc],0x0
65015866:	jbe    0x6501588e
65015868:	cmp    BYTE PTR [ebp+0x1c],0x0
6501586c:	jne    0x6501568e
65015872:	push   DWORD PTR [ebp+0x24]
65015875:	push   DWORD PTR [ebp+0x20]
65015878:	push   DWORD PTR [ebp-0x8]
6501587b:	push   ebx
6501587c:	push   DWORD PTR [ebp+0x14]
6501587f:	push   DWORD PTR [ebp+0x10]
65015882:	push   DWORD PTR [ebp+0xc]
65015885:	push   esi
65015886:	call   0x6501545e
6501588b:	add    esp,0x20
6501588e:	call   0x650148cb
65015893:	cmp    DWORD PTR [eax+0x94],0x0
6501589a:	je     0x650158a1
6501589c:	call   0x650159ee
650158a1:	pop    edi
650158a2:	pop    esi
650158a3:	pop    ebx
650158a4:	leave  
650158a5:	ret    
650158a6:	push   esi
650158a7:	push   DWORD PTR [esp+0x8]
650158ab:	mov    esi,ecx
650158ad:	call   0x6501214e
650158b2:	mov    DWORD PTR [esi],0x65024d20
650158b8:	mov    eax,esi
650158ba:	pop    esi
650158bb:	ret    0x4
650158be:	push   ebp
650158bf:	mov    ebp,esp
650158c1:	push   ebx
650158c2:	push   esi
650158c3:	push   edi
650158c4:	call   0x650148cb
650158c9:	cmp    DWORD PTR [eax+0x20c],0x0
650158d0:	mov    eax,DWORD PTR [ebp+0x18]
650158d3:	mov    ecx,DWORD PTR [ebp+0x8]
650158d6:	mov    edi,0xe06d7363
650158db:	mov    esi,0x1fffffff
650158e0:	mov    ebx,0x19930522
650158e5:	jne    0x65015907
650158e7:	mov    edx,DWORD PTR [ecx]
650158e9:	cmp    edx,edi
650158eb:	je     0x65015907
650158ed:	cmp    edx,0x80000026
650158f3:	je     0x65015907
650158f5:	mov    edx,DWORD PTR [eax]
650158f7:	and    edx,esi
650158f9:	cmp    edx,ebx
650158fb:	jb     0x65015907
650158fd:	test   BYTE PTR [eax+0x20],0x1
65015901:	jne    0x6501599a
65015907:	test   BYTE PTR [ecx+0x4],0x66
6501590b:	je     0x65015930
6501590d:	cmp    DWORD PTR [eax+0x4],0x0
65015911:	je     0x6501599a
65015917:	cmp    DWORD PTR [ebp+0x1c],0x0
6501591b:	jne    0x6501599a
6501591d:	push   0xffffffff
6501591f:	push   eax
65015920:	push   DWORD PTR [ebp+0x14]
65015923:	push   DWORD PTR [ebp+0xc]
65015926:	call   0x65014de5
6501592b:	add    esp,0x10
6501592e:	jmp    0x6501599a
65015930:	cmp    DWORD PTR [eax+0xc],0x0
65015934:	jne    0x65015948
65015936:	mov    edx,DWORD PTR [eax]
65015938:	and    edx,esi
6501593a:	cmp    edx,0x19930521
65015940:	jb     0x6501599a
65015942:	cmp    DWORD PTR [eax+0x1c],0x0
65015946:	je     0x6501599a
65015948:	cmp    DWORD PTR [ecx],edi
6501594a:	jne    0x6501597e
6501594c:	cmp    DWORD PTR [ecx+0x10],0x3
65015950:	jb     0x6501597e
65015952:	cmp    DWORD PTR [ecx+0x14],ebx
65015955:	jbe    0x6501597e
65015957:	mov    edx,DWORD PTR [ecx+0x1c]
6501595a:	mov    edx,DWORD PTR [edx+0x8]
6501595d:	test   edx,edx
6501595f:	je     0x6501597e
65015961:	movzx  esi,BYTE PTR [ebp+0x24]
65015965:	push   esi
65015966:	push   DWORD PTR [ebp+0x20]
65015969:	push   DWORD PTR [ebp+0x1c]
6501596c:	push   eax
6501596d:	push   DWORD PTR [ebp+0x14]
65015970:	push   DWORD PTR [ebp+0x10]
65015973:	push   DWORD PTR [ebp+0xc]
65015976:	push   ecx
65015977:	call   edx
65015979:	add    esp,0x20
6501597c:	jmp    0x6501599d
6501597e:	push   DWORD PTR [ebp+0x20]
65015981:	push   DWORD PTR [ebp+0x1c]
65015984:	push   DWORD PTR [ebp+0x24]
65015987:	push   eax
65015988:	push   DWORD PTR [ebp+0x14]
6501598b:	push   DWORD PTR [ebp+0x10]
6501598e:	push   DWORD PTR [ebp+0xc]
65015991:	push   ecx
65015992:	call   0x65015550
65015997:	add    esp,0x20
6501599a:	xor    eax,eax
6501599c:	inc    eax
6501599d:	pop    edi
6501599e:	pop    esi
6501599f:	pop    ebx
650159a0:	pop    ebp
650159a1:	ret    
650159a2:	push   0x8
650159a4:	push   0x65029c50
650159a9:	call   0x65013e70
650159ae:	call   0x650148cb
650159b3:	mov    eax,DWORD PTR [eax+0x78]
650159b6:	test   eax,eax
650159b8:	je     0x650159d0
650159ba:	and    DWORD PTR [ebp-0x4],0x0
650159be:	call   eax
650159c0:	jmp    0x650159c9
650159c2:	xor    eax,eax
650159c4:	inc    eax
650159c5:	ret    
650159c6:	mov    esp,DWORD PTR [ebp-0x18]
650159c9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650159d0:	call   0x6501afe8
650159d5:	call   0x65013eb5
650159da:	ret    
650159db:	call   0x650148cb
650159e0:	mov    eax,DWORD PTR [eax+0x7c]
650159e3:	test   eax,eax
650159e5:	je     0x650159e9
650159e7:	call   eax
650159e9:	jmp    0x650159a2
650159ee:	push   0x8
650159f0:	push   0x65029c70
650159f5:	call   0x65013e70
650159fa:	push   DWORD PTR ds:0x6502d5c0
65015a00:	call   0x650146af
65015a05:	pop    ecx
65015a06:	test   eax,eax
65015a08:	je     0x65015a20
65015a0a:	and    DWORD PTR [ebp-0x4],0x0
65015a0e:	call   eax
65015a10:	jmp    0x65015a19
65015a12:	xor    eax,eax
65015a14:	inc    eax
65015a15:	ret    
65015a16:	mov    esp,DWORD PTR [ebp-0x18]
65015a19:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015a20:	jmp    0x650159a2
65015a25:	push   0x650159a2
65015a2a:	call   0x65014638
65015a2f:	pop    ecx
65015a30:	mov    ds:0x6502d5c0,eax
65015a35:	ret    
65015a36:	int3   
65015a37:	int3   
65015a38:	int3   
65015a39:	int3   
65015a3a:	int3   
65015a3b:	int3   
65015a3c:	int3   
65015a3d:	int3   
65015a3e:	int3   
65015a3f:	int3   
65015a40:	push   ebp
65015a41:	mov    ebp,esp
65015a43:	sub    esp,0x4
65015a46:	push   ebx
65015a47:	push   ecx
65015a48:	mov    eax,DWORD PTR [ebp+0xc]
65015a4b:	add    eax,0xc
65015a4e:	mov    DWORD PTR [ebp-0x4],eax
65015a51:	mov    eax,DWORD PTR [ebp+0x8]
65015a54:	push   ebp
65015a55:	push   DWORD PTR [ebp+0x10]
65015a58:	mov    ecx,DWORD PTR [ebp+0x10]
65015a5b:	mov    ebp,DWORD PTR [ebp-0x4]
65015a5e:	call   0x6501b1e8
65015a63:	push   esi
65015a64:	push   edi
65015a65:	call   eax
65015a67:	pop    edi
65015a68:	pop    esi
65015a69:	mov    ebx,ebp
65015a6b:	pop    ebp
65015a6c:	mov    ecx,DWORD PTR [ebp+0x10]
65015a6f:	push   ebp
65015a70:	mov    ebp,ebx
65015a72:	cmp    ecx,0x100
65015a78:	jne    0x65015a7f
65015a7a:	mov    ecx,0x2
65015a7f:	push   ecx
65015a80:	call   0x6501b1e8
65015a85:	pop    ebp
65015a86:	pop    ecx
65015a87:	pop    ebx
65015a88:	leave  
65015a89:	ret    0xc
65015a8c:	push   ebp
65015a8d:	mov    ebp,esp
65015a8f:	sub    esp,0x328
65015a95:	mov    ds:0x6502d6d0,eax
65015a9a:	mov    DWORD PTR ds:0x6502d6cc,ecx
65015aa0:	mov    DWORD PTR ds:0x6502d6c8,edx
65015aa6:	mov    DWORD PTR ds:0x6502d6c4,ebx
65015aac:	mov    DWORD PTR ds:0x6502d6c0,esi
65015ab2:	mov    DWORD PTR ds:0x6502d6bc,edi
65015ab8:	data16 mov WORD PTR ds:0x6502d6e8,ss
65015abf:	data16 mov WORD PTR ds:0x6502d6dc,cs
65015ac6:	data16 mov WORD PTR ds:0x6502d6b8,ds
65015acd:	data16 mov WORD PTR ds:0x6502d6b4,es
65015ad4:	data16 mov WORD PTR ds:0x6502d6b0,fs
65015adb:	data16 mov WORD PTR ds:0x6502d6ac,gs
65015ae2:	pushf  
65015ae3:	pop    DWORD PTR ds:0x6502d6e0
65015ae9:	mov    eax,DWORD PTR [ebp+0x0]
65015aec:	mov    ds:0x6502d6d4,eax
65015af1:	mov    eax,DWORD PTR [ebp+0x4]
65015af4:	mov    ds:0x6502d6d8,eax
65015af9:	lea    eax,[ebp+0x8]
65015afc:	mov    ds:0x6502d6e4,eax
65015b01:	mov    eax,DWORD PTR [ebp-0x320]
65015b07:	mov    DWORD PTR ds:0x6502d620,0x10001
65015b11:	mov    eax,ds:0x6502d6d8
65015b16:	mov    ds:0x6502d5d4,eax
65015b1b:	mov    DWORD PTR ds:0x6502d5c8,0xc0000409
65015b25:	mov    DWORD PTR ds:0x6502d5cc,0x1
65015b2f:	mov    eax,ds:0x6502c09c
65015b34:	mov    DWORD PTR [ebp-0x328],eax
65015b3a:	mov    eax,ds:0x6502c0a0
65015b3f:	mov    DWORD PTR [ebp-0x324],eax
65015b45:	call   DWORD PTR ds:0x6502410c
65015b4b:	mov    ds:0x6502d618,eax
65015b50:	push   0x1
65015b52:	call   0x650145c4
65015b57:	pop    ecx
65015b58:	push   0x0
65015b5a:	call   DWORD PTR ds:0x65024108
65015b60:	push   0x65024d38
65015b65:	call   DWORD PTR ds:0x65024104
65015b6b:	cmp    DWORD PTR ds:0x6502d618,0x0
65015b72:	jne    0x65015b7c
65015b74:	push   0x1
65015b76:	call   0x650145c4
65015b7b:	pop    ecx
65015b7c:	push   0xc0000409
65015b81:	call   DWORD PTR ds:0x65024040
65015b87:	push   eax
65015b88:	call   DWORD PTR ds:0x65024100
65015b8e:	leave  
65015b8f:	ret    
65015b90:	push   esi
65015b91:	push   edi
65015b92:	xor    esi,esi
65015b94:	push   DWORD PTR [esp+0xc]
65015b98:	call   0x65013823
65015b9d:	mov    edi,eax
65015b9f:	test   edi,edi
65015ba1:	pop    ecx
65015ba2:	jne    0x65015bcb
65015ba4:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015baa:	jbe    0x65015bcb
65015bac:	push   esi
65015bad:	call   DWORD PTR ds:0x65024044
65015bb3:	lea    eax,[esi+0x3e8]
65015bb9:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015bbf:	jbe    0x65015bc4
65015bc1:	or     eax,0xffffffff
65015bc4:	cmp    eax,0xffffffff
65015bc7:	mov    esi,eax
65015bc9:	jne    0x65015b94
65015bcb:	mov    eax,edi
65015bcd:	pop    edi
65015bce:	pop    esi
65015bcf:	ret    
65015bd0:	push   esi
65015bd1:	push   edi
65015bd2:	xor    esi,esi
65015bd4:	push   0x0
65015bd6:	push   DWORD PTR [esp+0x14]
65015bda:	push   DWORD PTR [esp+0x14]
65015bde:	call   0x6501b213
65015be3:	mov    edi,eax
65015be5:	add    esp,0xc
65015be8:	test   edi,edi
65015bea:	jne    0x65015c13
65015bec:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015bf2:	jbe    0x65015c13
65015bf4:	push   esi
65015bf5:	call   DWORD PTR ds:0x65024044
65015bfb:	lea    eax,[esi+0x3e8]
65015c01:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015c07:	jbe    0x65015c0c
65015c09:	or     eax,0xffffffff
65015c0c:	cmp    eax,0xffffffff
65015c0f:	mov    esi,eax
65015c11:	jne    0x65015bd4
65015c13:	mov    eax,edi
65015c15:	pop    edi
65015c16:	pop    esi
65015c17:	ret    
65015c18:	push   esi
65015c19:	push   edi
65015c1a:	xor    esi,esi
65015c1c:	push   DWORD PTR [esp+0x10]
65015c20:	push   DWORD PTR [esp+0x10]
65015c24:	call   0x65013c55
65015c29:	mov    edi,eax
65015c2b:	test   edi,edi
65015c2d:	pop    ecx
65015c2e:	pop    ecx
65015c2f:	jne    0x65015c5e
65015c31:	cmp    DWORD PTR [esp+0x10],eax
65015c35:	je     0x65015c5e
65015c37:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015c3d:	jbe    0x65015c5e
65015c3f:	push   esi
65015c40:	call   DWORD PTR ds:0x65024044
65015c46:	lea    eax,[esi+0x3e8]
65015c4c:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015c52:	jbe    0x65015c57
65015c54:	or     eax,0xffffffff
65015c57:	cmp    eax,0xffffffff
65015c5a:	mov    esi,eax
65015c5c:	jne    0x65015c1c
65015c5e:	mov    eax,edi
65015c60:	pop    edi
65015c61:	pop    esi
65015c62:	ret    
65015c63:	push   0x10
65015c65:	push   0x65029c90
65015c6a:	call   0x65013e70
65015c6f:	xor    eax,eax
65015c71:	mov    ebx,DWORD PTR [ebp+0x8]
65015c74:	xor    edi,edi
65015c76:	cmp    ebx,edi
65015c78:	setne  al
65015c7b:	cmp    eax,edi
65015c7d:	jne    0x65015c9c
65015c7f:	call   0x65014580
65015c84:	mov    DWORD PTR [eax],0x16
65015c8a:	push   edi
65015c8b:	push   edi
65015c8c:	push   edi
65015c8d:	push   edi
65015c8e:	push   edi
65015c8f:	call   0x6501241f
65015c94:	add    esp,0x14
65015c97:	or     eax,0xffffffff
65015c9a:	jmp    0x65015cef
65015c9c:	cmp    DWORD PTR ds:0x6503143c,0x3
65015ca3:	jne    0x65015cdd
65015ca5:	push   0x4
65015ca7:	call   0x65019ecf
65015cac:	pop    ecx
65015cad:	mov    DWORD PTR [ebp-0x4],edi
65015cb0:	push   ebx
65015cb1:	call   0x65019f48
65015cb6:	pop    ecx
65015cb7:	mov    DWORD PTR [ebp-0x20],eax
65015cba:	cmp    eax,edi
65015cbc:	je     0x65015cc9
65015cbe:	mov    esi,DWORD PTR [ebx-0x4]
65015cc1:	sub    esi,0x9
65015cc4:	mov    DWORD PTR [ebp-0x1c],esi
65015cc7:	jmp    0x65015ccc
65015cc9:	mov    esi,DWORD PTR [ebp-0x1c]
65015ccc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015cd3:	call   0x65015cfd
65015cd8:	cmp    DWORD PTR [ebp-0x20],edi
65015cdb:	jne    0x65015ced
65015cdd:	push   ebx
65015cde:	push   edi
65015cdf:	push   DWORD PTR ds:0x6502da8c
65015ce5:	call   DWORD PTR ds:0x650240f8
65015ceb:	mov    esi,eax
65015ced:	mov    eax,esi
65015cef:	call   0x65013eb5
65015cf4:	ret    
65015cf5:	xor    edi,edi
65015cf7:	mov    ebx,DWORD PTR [ebp+0x8]
65015cfa:	mov    esi,DWORD PTR [ebp-0x1c]
65015cfd:	push   0x4
65015cff:	call   0x65019df7
65015d04:	pop    ecx
65015d05:	ret    
65015d06:	call   0x6501ab9f
65015d0b:	push   DWORD PTR [esp+0x4]
65015d0f:	call   0x6501a9ff
65015d14:	push   DWORD PTR ds:0x6502c260
65015d1a:	call   0x650146af
65015d1f:	push   0xff
65015d24:	call   eax
65015d26:	add    esp,0xc
65015d29:	ret    
65015d2a:	push   0x65024d50
65015d2f:	call   DWORD PTR ds:0x6502411c
65015d35:	test   eax,eax
65015d37:	je     0x65015d4f
65015d39:	push   0x65024d40
65015d3e:	push   eax
65015d3f:	call   DWORD PTR ds:0x6502408c
65015d45:	test   eax,eax
65015d47:	je     0x65015d4f
65015d49:	push   DWORD PTR [esp+0x4]
65015d4d:	call   eax
65015d4f:	ret    
65015d50:	push   DWORD PTR [esp+0x4]
65015d54:	call   0x65015d2a
65015d59:	pop    ecx
65015d5a:	push   DWORD PTR [esp+0x4]
65015d5e:	call   DWORD PTR ds:0x65024130
65015d64:	int3   
65015d65:	push   0x8
65015d67:	call   0x65019ecf
65015d6c:	pop    ecx
65015d6d:	ret    
65015d6e:	push   0x8
65015d70:	call   0x65019df7
65015d75:	pop    ecx
65015d76:	ret    
65015d77:	push   esi
65015d78:	mov    esi,eax
65015d7a:	jmp    0x65015d87
65015d7c:	mov    eax,DWORD PTR [esi]
65015d7e:	test   eax,eax
65015d80:	je     0x65015d84
65015d82:	call   eax
65015d84:	add    esi,0x4
65015d87:	cmp    esi,DWORD PTR [esp+0x8]
65015d8b:	jb     0x65015d7c
65015d8d:	pop    esi
65015d8e:	ret    
65015d8f:	push   esi
65015d90:	mov    esi,DWORD PTR [esp+0x8]
65015d94:	xor    eax,eax
65015d96:	jmp    0x65015da7
65015d98:	test   eax,eax
65015d9a:	jne    0x65015dad
65015d9c:	mov    ecx,DWORD PTR [esi]
65015d9e:	test   ecx,ecx
65015da0:	je     0x65015da4
65015da2:	call   ecx
65015da4:	add    esi,0x4
65015da7:	cmp    esi,DWORD PTR [esp+0xc]
65015dab:	jb     0x65015d98
65015dad:	pop    esi
65015dae:	ret    
65015daf:	mov    ecx,DWORD PTR [esp+0x4]
65015db3:	push   esi
65015db4:	xor    esi,esi
65015db6:	cmp    ecx,esi
65015db8:	jne    0x65015dd7
65015dba:	call   0x65014580
65015dbf:	push   esi
65015dc0:	push   esi
65015dc1:	push   esi
65015dc2:	push   esi
65015dc3:	push   esi
65015dc4:	mov    DWORD PTR [eax],0x16
65015dca:	call   0x6501241f
65015dcf:	add    esp,0x14
65015dd2:	push   0x16
65015dd4:	pop    eax
65015dd5:	pop    esi
65015dd6:	ret    
65015dd7:	mov    eax,ds:0x6502d8f4
65015ddc:	cmp    eax,esi
65015dde:	je     0x65015dba
65015de0:	mov    DWORD PTR [ecx],eax
65015de2:	xor    eax,eax
65015de4:	pop    esi
65015de5:	ret    
65015de6:	mov    eax,DWORD PTR [esp+0x4]
65015dea:	push   esi
65015deb:	xor    esi,esi
65015ded:	cmp    eax,esi
65015def:	jne    0x65015e0e
65015df1:	call   0x65014580
65015df6:	push   esi
65015df7:	push   esi
65015df8:	push   esi
65015df9:	push   esi
65015dfa:	push   esi
65015dfb:	mov    DWORD PTR [eax],0x16
65015e01:	call   0x6501241f
65015e06:	add    esp,0x14
65015e09:	push   0x16
65015e0b:	pop    eax
65015e0c:	pop    esi
65015e0d:	ret    
65015e0e:	cmp    DWORD PTR ds:0x6502d8f4,esi
65015e14:	je     0x65015df1
65015e16:	mov    ecx,DWORD PTR ds:0x6502d900
65015e1c:	mov    DWORD PTR [eax],ecx
65015e1e:	xor    eax,eax
65015e20:	pop    esi
65015e21:	ret    
65015e22:	cmp    DWORD PTR ds:0x650265c4,0x0
65015e29:	je     0x65015e45
65015e2b:	push   0x650265c4
65015e30:	call   0x6501af20
65015e35:	test   eax,eax
65015e37:	pop    ecx
65015e38:	je     0x65015e45
65015e3a:	push   DWORD PTR [esp+0x4]
65015e3e:	call   DWORD PTR ds:0x650265c4
65015e44:	pop    ecx
65015e45:	call   0x6501b331
65015e4a:	push   0x65024208
65015e4f:	push   0x650241f0
65015e54:	call   0x65015d8f
65015e59:	test   eax,eax
65015e5b:	pop    ecx
65015e5c:	pop    ecx
65015e5d:	jne    0x65015eb3
65015e5f:	push   esi
65015e60:	push   edi
65015e61:	push   0x65018900
65015e66:	call   0x65012a5f
65015e6b:	mov    esi,0x650241d4
65015e70:	mov    eax,esi
65015e72:	mov    edi,0x650241ec
65015e77:	cmp    eax,edi
65015e79:	pop    ecx
65015e7a:	jae    0x65015e8b
65015e7c:	mov    eax,DWORD PTR [esi]
65015e7e:	test   eax,eax
65015e80:	je     0x65015e84
65015e82:	call   eax
65015e84:	add    esi,0x4
65015e87:	cmp    esi,edi
65015e89:	jb     0x65015e7c
65015e8b:	cmp    DWORD PTR ds:0x65031578,0x0
65015e92:	pop    edi
65015e93:	pop    esi
65015e94:	je     0x65015eb1
65015e96:	push   0x65031578
65015e9b:	call   0x6501af20
65015ea0:	test   eax,eax
65015ea2:	pop    ecx
65015ea3:	je     0x65015eb1
65015ea5:	push   0x0
65015ea7:	push   0x2
65015ea9:	push   0x0
65015eab:	call   DWORD PTR ds:0x65031578
65015eb1:	xor    eax,eax
65015eb3:	ret    
65015eb4:	push   0x10
65015eb6:	push   0x65029cb0
65015ebb:	call   0x65013e70
65015ec0:	push   0x8
65015ec2:	call   0x65019ecf
65015ec7:	pop    ecx
65015ec8:	xor    edi,edi
65015eca:	mov    DWORD PTR [ebp-0x4],edi
65015ecd:	xor    ebx,ebx
65015ecf:	inc    ebx
65015ed0:	cmp    DWORD PTR ds:0x6502d934,ebx
65015ed6:	je     0x65015f56
65015ed8:	mov    DWORD PTR ds:0x6502d930,ebx
65015ede:	mov    al,BYTE PTR [ebp+0x10]
65015ee1:	mov    ds:0x6502d92c,al
65015ee6:	cmp    DWORD PTR [ebp+0xc],edi
65015ee9:	jne    0x65015f46
65015eeb:	push   DWORD PTR ds:0x65031570
65015ef1:	call   0x650146af
65015ef6:	mov    DWORD PTR [ebp-0x1c],eax
65015ef9:	push   DWORD PTR ds:0x6503156c
65015eff:	call   0x650146af
65015f04:	pop    ecx
65015f05:	pop    ecx
65015f06:	mov    esi,eax
65015f08:	mov    DWORD PTR [ebp-0x20],esi
65015f0b:	cmp    DWORD PTR [ebp-0x1c],edi
65015f0e:	je     0x65015f36
65015f10:	sub    esi,0x4
65015f13:	mov    DWORD PTR [ebp-0x20],esi
65015f16:	cmp    esi,DWORD PTR [ebp-0x1c]
65015f19:	jb     0x65015f36
65015f1b:	cmp    DWORD PTR [esi],0x0
65015f1e:	je     0x65015f10
65015f20:	mov    edi,DWORD PTR [esi]
65015f22:	call   0x650146a6
65015f27:	cmp    edi,eax
65015f29:	je     0x65015f10
65015f2b:	push   edi
65015f2c:	call   0x650146af
65015f31:	pop    ecx
65015f32:	call   eax
65015f34:	jmp    0x65015f10
65015f36:	push   0x65024218
65015f3b:	mov    eax,0x6502420c
65015f40:	call   0x65015d77
65015f45:	pop    ecx
65015f46:	push   0x65024220
65015f4b:	mov    eax,0x6502421c
65015f50:	call   0x65015d77
65015f55:	pop    ecx
65015f56:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015f5d:	call   0x65015f81
65015f62:	cmp    DWORD PTR [ebp+0x10],0x0
65015f66:	jne    0x65015f90
65015f68:	mov    DWORD PTR ds:0x6502d934,ebx
65015f6e:	push   0x8
65015f70:	call   0x65019df7
65015f75:	pop    ecx
65015f76:	push   DWORD PTR [ebp+0x8]
65015f79:	call   0x65015d50
65015f7e:	xor    ebx,ebx
65015f80:	inc    ebx
65015f81:	cmp    DWORD PTR [ebp+0x10],0x0
65015f85:	je     0x65015f8f
65015f87:	push   0x8
65015f89:	call   0x65019df7
65015f8e:	pop    ecx
65015f8f:	ret    
65015f90:	call   0x65013eb5
65015f95:	ret    
65015f96:	push   0x0
65015f98:	push   0x1
65015f9a:	push   DWORD PTR [esp+0xc]
65015f9e:	call   0x65015eb4
65015fa3:	add    esp,0xc
65015fa6:	ret    
65015fa7:	push   0x1
65015fa9:	push   0x0
65015fab:	push   0x0
65015fad:	call   0x65015eb4
65015fb2:	add    esp,0xc
65015fb5:	ret    
65015fb6:	push   esi
65015fb7:	call   0x650146a6
65015fbc:	mov    esi,eax
65015fbe:	push   esi
65015fbf:	call   0x65014bf1
65015fc4:	push   esi
65015fc5:	call   0x6501b56e
65015fca:	push   esi
65015fcb:	call   0x65012319
65015fd0:	push   esi
65015fd1:	call   0x6501b564
65015fd6:	push   esi
65015fd7:	call   0x6501b55a
65015fdc:	push   esi
65015fdd:	call   0x6501b350
65015fe2:	push   esi
65015fe3:	call   0x65018a4d
65015fe8:	push   esi
65015fe9:	call   0x65015a25
65015fee:	push   0x65015f96
65015ff3:	call   0x65014638
65015ff8:	add    esp,0x24
65015ffb:	mov    ds:0x6502c260,eax
65016000:	pop    esi
65016001:	ret    
65016002:	sub    eax,0x3a4
65016007:	je     0x6501602b
65016009:	sub    eax,0x4
6501600c:	je     0x65016025
6501600e:	sub    eax,0xd
65016011:	je     0x6501601f
65016013:	dec    eax
65016014:	je     0x65016019
65016016:	xor    eax,eax
65016018:	ret    
65016019:	mov    eax,0x404
6501601e:	ret    
6501601f:	mov    eax,0x412
65016024:	ret    
65016025:	mov    eax,0x804
6501602a:	ret    
6501602b:	mov    eax,0x411
65016030:	ret    
65016031:	push   ebx
65016032:	push   ebp
65016033:	push   esi
65016034:	push   edi
65016035:	mov    ebp,0x101
6501603a:	mov    esi,eax
6501603c:	push   ebp
6501603d:	xor    edi,edi
6501603f:	lea    ebx,[esi+0x1c]
65016042:	push   edi
65016043:	push   ebx
65016044:	call   0x65012fb0
65016049:	mov    DWORD PTR [esi+0x4],edi
6501604c:	mov    DWORD PTR [esi+0x8],edi
6501604f:	mov    DWORD PTR [esi+0xc],edi
65016052:	xor    eax,eax
65016054:	lea    edi,[esi+0x10]
65016057:	stos   DWORD PTR es:[edi],eax
65016058:	stos   DWORD PTR es:[edi],eax
65016059:	stos   DWORD PTR es:[edi],eax
6501605a:	mov    eax,0x6502c268
6501605f:	add    esp,0xc
65016062:	sub    eax,esi
65016064:	mov    cl,BYTE PTR [eax+ebx*1]
65016067:	mov    BYTE PTR [ebx],cl
65016069:	inc    ebx
6501606a:	dec    ebp
6501606b:	jne    0x65016064
6501606d:	lea    ecx,[esi+0x11d]
65016073:	mov    esi,0x100
65016078:	mov    dl,BYTE PTR [ecx+eax*1]
6501607b:	mov    BYTE PTR [ecx],dl
6501607d:	inc    ecx
6501607e:	dec    esi
6501607f:	jne    0x65016078
65016081:	pop    edi
65016082:	pop    esi
65016083:	pop    ebp
65016084:	pop    ebx
65016085:	ret    
65016086:	push   ebp
65016087:	lea    ebp,[esp-0x49c]
6501608e:	sub    esp,0x51c
65016094:	mov    eax,ds:0x6502c09c
65016099:	xor    eax,ebp
6501609b:	mov    DWORD PTR [ebp+0x498],eax
650160a1:	push   ebx
650160a2:	push   edi
650160a3:	lea    eax,[ebp-0x7c]
650160a6:	push   eax
650160a7:	push   DWORD PTR [esi+0x4]
650160aa:	call   DWORD PTR ds:0x65024134
650160b0:	test   eax,eax
650160b2:	mov    edi,0x100
650160b7:	je     0x650161ac
650160bd:	xor    eax,eax
650160bf:	mov    BYTE PTR [ebp+eax*1+0x398],al
650160c6:	inc    eax
650160c7:	cmp    eax,edi
650160c9:	jb     0x650160bf
650160cb:	mov    al,BYTE PTR [ebp-0x76]
650160ce:	test   al,al
650160d0:	mov    BYTE PTR [ebp+0x398],0x20
650160d7:	je     0x65016104
650160d9:	lea    ebx,[ebp-0x75]
650160dc:	movzx  ecx,al
650160df:	movzx  eax,BYTE PTR [ebx]
650160e2:	cmp    ecx,eax
650160e4:	ja     0x650160fc
650160e6:	sub    eax,ecx
650160e8:	inc    eax
650160e9:	push   eax
650160ea:	lea    edx,[ebp+ecx*1+0x398]
650160f1:	push   0x20
650160f3:	push   edx
650160f4:	call   0x65012fb0
650160f9:	add    esp,0xc
650160fc:	inc    ebx
650160fd:	mov    al,BYTE PTR [ebx]
650160ff:	inc    ebx
65016100:	test   al,al
65016102:	jne    0x650160dc
65016104:	push   0x0
65016106:	push   DWORD PTR [esi+0xc]
65016109:	lea    eax,[ebp-0x68]
6501610c:	push   DWORD PTR [esi+0x4]
6501610f:	push   eax
65016110:	push   edi
65016111:	lea    eax,[ebp+0x398]
65016117:	push   eax
65016118:	push   0x1
6501611a:	push   0x0
6501611c:	call   0x6501b805
65016121:	xor    ebx,ebx
65016123:	push   ebx
65016124:	push   DWORD PTR [esi+0x4]
65016127:	lea    eax,[ebp+0x298]
6501612d:	push   edi
6501612e:	push   eax
6501612f:	push   edi
65016130:	lea    eax,[ebp+0x398]
65016136:	push   eax
65016137:	push   edi
65016138:	push   DWORD PTR [esi+0xc]
6501613b:	push   ebx
6501613c:	call   0x65019c1c
65016141:	add    esp,0x44
65016144:	push   ebx
65016145:	push   DWORD PTR [esi+0x4]
65016148:	lea    eax,[ebp+0x198]
6501614e:	push   edi
6501614f:	push   eax
65016150:	push   edi
65016151:	lea    eax,[ebp+0x398]
65016157:	push   eax
65016158:	push   0x200
6501615d:	push   DWORD PTR [esi+0xc]
65016160:	push   ebx
65016161:	call   0x65019c1c
65016166:	add    esp,0x24
65016169:	xor    eax,eax
6501616b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
65016170:	test   cl,0x1
65016173:	je     0x65016183
65016175:	or     BYTE PTR [esi+eax*1+0x1d],0x10
6501617a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
65016181:	jmp    0x65016194
65016183:	test   cl,0x2
65016186:	je     0x6501619d
65016188:	or     BYTE PTR [esi+eax*1+0x1d],0x20
6501618d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
65016194:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6501619b:	jmp    0x650161a5
6501619d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
650161a5:	inc    eax
650161a6:	cmp    eax,edi
650161a8:	jb     0x6501616b
650161aa:	jmp    0x650161f9
650161ac:	lea    eax,[esi+0x11d]
650161b2:	mov    DWORD PTR [ebp-0x80],0xffffff9f
650161b9:	xor    ecx,ecx
650161bb:	sub    DWORD PTR [ebp-0x80],eax
650161be:	mov    edx,DWORD PTR [ebp-0x80]
650161c1:	lea    eax,[esi+ecx*1+0x11d]
650161c8:	add    edx,eax
650161ca:	lea    ebx,[edx+0x20]
650161cd:	cmp    ebx,0x19
650161d0:	ja     0x650161de
650161d2:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
650161d7:	mov    dl,cl
650161d9:	add    dl,0x20
650161dc:	jmp    0x650161ed
650161de:	cmp    edx,0x19
650161e1:	ja     0x650161f1
650161e3:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
650161e8:	mov    dl,cl
650161ea:	sub    dl,0x20
650161ed:	mov    BYTE PTR [eax],dl
650161ef:	jmp    0x650161f4
650161f1:	mov    BYTE PTR [eax],0x0
650161f4:	inc    ecx
650161f5:	cmp    ecx,edi
650161f7:	jb     0x650161be
650161f9:	mov    ecx,DWORD PTR [ebp+0x498]
650161ff:	pop    edi
65016200:	xor    ecx,ebp
65016202:	pop    ebx
65016203:	call   0x6501292c
65016208:	add    ebp,0x49c
6501620e:	leave  
6501620f:	ret    
65016210:	push   0xc
65016212:	push   0x65029cd0
65016217:	call   0x65013e70
6501621c:	call   0x650148cb
65016221:	mov    edi,eax
65016223:	mov    eax,ds:0x6502c78c
65016228:	test   DWORD PTR [edi+0x70],eax
6501622b:	je     0x6501624a
6501622d:	cmp    DWORD PTR [edi+0x6c],0x0
65016231:	je     0x6501624a
65016233:	mov    esi,DWORD PTR [edi+0x68]
65016236:	test   esi,esi
65016238:	jne    0x65016242
6501623a:	push   0x20
6501623c:	call   0x65015d06
65016241:	pop    ecx
65016242:	mov    eax,esi
65016244:	call   0x65013eb5
65016249:	ret    
6501624a:	push   0xd
6501624c:	call   0x65019ecf
65016251:	pop    ecx
65016252:	and    DWORD PTR [ebp-0x4],0x0
65016256:	mov    esi,DWORD PTR [edi+0x68]
65016259:	mov    DWORD PTR [ebp-0x1c],esi
6501625c:	cmp    esi,DWORD PTR ds:0x6502c690
65016262:	je     0x6501629a
65016264:	test   esi,esi
65016266:	je     0x65016282
65016268:	push   esi
65016269:	call   DWORD PTR ds:0x65024094
6501626f:	test   eax,eax
65016271:	jne    0x65016282
65016273:	cmp    esi,0x6502c268
65016279:	je     0x65016282
6501627b:	push   esi
6501627c:	call   0x65013746
65016281:	pop    ecx
65016282:	mov    eax,ds:0x6502c690
65016287:	mov    DWORD PTR [edi+0x68],eax
6501628a:	mov    esi,DWORD PTR ds:0x6502c690
65016290:	mov    DWORD PTR [ebp-0x1c],esi
65016293:	push   esi
65016294:	call   DWORD PTR ds:0x65024018
6501629a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650162a1:	call   0x650162ab
650162a6:	jmp    0x65016236
650162a8:	mov    esi,DWORD PTR [ebp-0x1c]
650162ab:	push   0xd
650162ad:	call   0x65019df7
650162b2:	pop    ecx
650162b3:	ret    
650162b4:	push   ebp
650162b5:	mov    ebp,esp
650162b7:	sub    esp,0x10
650162ba:	push   ebx
650162bb:	xor    ebx,ebx
650162bd:	push   ebx
650162be:	lea    ecx,[ebp-0x10]
650162c1:	call   0x65012acf
650162c6:	cmp    esi,0xfffffffe
650162c9:	mov    DWORD PTR ds:0x6502d938,ebx
650162cf:	jne    0x650162ef
650162d1:	mov    DWORD PTR ds:0x6502d938,0x1
650162db:	call   DWORD PTR ds:0x65024138
650162e1:	cmp    BYTE PTR [ebp-0x4],bl
650162e4:	je     0x6501632b
650162e6:	mov    ecx,DWORD PTR [ebp-0x8]
650162e9:	and    DWORD PTR [ecx+0x70],0xfffffffd
650162ed:	jmp    0x6501632b
650162ef:	cmp    esi,0xfffffffd
650162f2:	jne    0x65016306
650162f4:	mov    DWORD PTR ds:0x6502d938,0x1
650162fe:	call   DWORD PTR ds:0x650240d4
65016304:	jmp    0x650162e1
65016306:	cmp    esi,0xfffffffc
65016309:	jne    0x6501631d
6501630b:	mov    eax,DWORD PTR [ebp-0x10]
6501630e:	mov    eax,DWORD PTR [eax+0x4]
65016311:	mov    DWORD PTR ds:0x6502d938,0x1
6501631b:	jmp    0x650162e1
6501631d:	cmp    BYTE PTR [ebp-0x4],bl
65016320:	je     0x65016329
65016322:	mov    eax,DWORD PTR [ebp-0x8]
65016325:	and    DWORD PTR [eax+0x70],0xfffffffd
65016329:	mov    eax,esi
6501632b:	pop    ebx
6501632c:	leave  
6501632d:	ret    
6501632e:	push   ebp
6501632f:	mov    ebp,esp
65016331:	sub    esp,0x20
65016334:	mov    eax,ds:0x6502c09c
65016339:	xor    eax,ebp
6501633b:	mov    DWORD PTR [ebp-0x4],eax
6501633e:	push   ebx
6501633f:	mov    ebx,DWORD PTR [ebp+0xc]
65016342:	push   esi
65016343:	mov    esi,DWORD PTR [ebp+0x8]
65016346:	push   edi
65016347:	call   0x650162b4
6501634c:	mov    edi,eax
6501634e:	xor    esi,esi
65016350:	cmp    edi,esi
65016352:	mov    DWORD PTR [ebp+0x8],edi
65016355:	jne    0x65016365
65016357:	mov    eax,ebx
65016359:	call   0x65016031
6501635e:	xor    eax,eax
65016360:	jmp    0x650164f8
65016365:	mov    DWORD PTR [ebp-0x1c],esi
65016368:	xor    eax,eax
6501636a:	cmp    DWORD PTR [eax+0x6502c698],edi
65016370:	je     0x65016407
65016376:	inc    DWORD PTR [ebp-0x1c]
65016379:	add    eax,0x30
6501637c:	cmp    eax,0xf0
65016381:	jb     0x6501636a
65016383:	cmp    edi,0xfde8
65016389:	je     0x650164f5
6501638f:	cmp    edi,0xfde9
65016395:	je     0x650164f5
6501639b:	movzx  eax,di
6501639e:	push   eax
6501639f:	call   DWORD PTR ds:0x6502413c
650163a5:	test   eax,eax
650163a7:	je     0x650164f5
650163ad:	lea    eax,[ebp-0x18]
650163b0:	push   eax
650163b1:	push   edi
650163b2:	call   DWORD PTR ds:0x65024134
650163b8:	test   eax,eax
650163ba:	je     0x650164e9
650163c0:	push   0x101
650163c5:	lea    eax,[ebx+0x1c]
650163c8:	push   esi
650163c9:	push   eax
650163ca:	call   0x65012fb0
650163cf:	xor    edx,edx
650163d1:	inc    edx
650163d2:	add    esp,0xc
650163d5:	cmp    DWORD PTR [ebp-0x18],edx
650163d8:	mov    DWORD PTR [ebx+0x4],edi
650163db:	mov    DWORD PTR [ebx+0xc],esi
650163de:	jbe    0x650164dc
650163e4:	cmp    BYTE PTR [ebp-0x12],0x0
650163e8:	je     0x650164bd
650163ee:	lea    esi,[ebp-0x11]
650163f1:	mov    cl,BYTE PTR [esi]
650163f3:	test   cl,cl
650163f5:	je     0x650164bd
650163fb:	movzx  eax,BYTE PTR [esi-0x1]
650163ff:	movzx  ecx,cl
65016402:	jmp    0x650164ad
65016407:	push   0x101
6501640c:	lea    eax,[ebx+0x1c]
6501640f:	push   esi
65016410:	push   eax
65016411:	call   0x65012fb0
65016416:	mov    ecx,DWORD PTR [ebp-0x1c]
65016419:	add    esp,0xc
6501641c:	imul   ecx,ecx,0x30
6501641f:	mov    DWORD PTR [ebp-0x20],esi
65016422:	lea    esi,[ecx+0x6502c6a8]
65016428:	mov    DWORD PTR [ebp-0x1c],esi
6501642b:	jmp    0x65016457
6501642d:	mov    al,BYTE PTR [esi+0x1]
65016430:	test   al,al
65016432:	je     0x6501645c
65016434:	movzx  edi,BYTE PTR [esi]
65016437:	movzx  eax,al
6501643a:	jmp    0x6501644e
6501643c:	mov    eax,DWORD PTR [ebp-0x20]
6501643f:	mov    al,BYTE PTR [eax+0x6502c694]
65016445:	or     BYTE PTR [ebx+edi*1+0x1d],al
65016449:	movzx  eax,BYTE PTR [esi+0x1]
6501644d:	inc    edi
6501644e:	cmp    edi,eax
65016450:	jbe    0x6501643c
65016452:	mov    edi,DWORD PTR [ebp+0x8]
65016455:	inc    esi
65016456:	inc    esi
65016457:	cmp    BYTE PTR [esi],0x0
6501645a:	jne    0x6501642d
6501645c:	mov    esi,DWORD PTR [ebp-0x1c]
6501645f:	inc    DWORD PTR [ebp-0x20]
65016462:	add    esi,0x8
65016465:	cmp    DWORD PTR [ebp-0x20],0x4
65016469:	mov    DWORD PTR [ebp-0x1c],esi
6501646c:	jb     0x65016457
6501646e:	mov    eax,edi
65016470:	mov    DWORD PTR [ebx+0x4],edi
65016473:	mov    DWORD PTR [ebx+0x8],0x1
6501647a:	call   0x65016002
6501647f:	push   0x6
65016481:	mov    DWORD PTR [ebx+0xc],eax
65016484:	lea    eax,[ebx+0x10]
65016487:	lea    ecx,[ecx+0x6502c69c]
6501648d:	pop    edx
6501648e:	mov    si,WORD PTR [ecx]
65016491:	inc    ecx
65016492:	mov    WORD PTR [eax],si
65016495:	inc    ecx
65016496:	inc    eax
65016497:	inc    eax
65016498:	dec    edx
65016499:	jne    0x6501648e
6501649b:	mov    esi,ebx
6501649d:	call   0x65016086
650164a2:	jmp    0x6501635e
650164a7:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
650164ac:	inc    eax
650164ad:	cmp    eax,ecx
650164af:	jbe    0x650164a7
650164b1:	inc    esi
650164b2:	inc    esi
650164b3:	cmp    BYTE PTR [esi-0x1],0x0
650164b7:	jne    0x650163f1
650164bd:	lea    eax,[ebx+0x1e]
650164c0:	mov    ecx,0xfe
650164c5:	or     BYTE PTR [eax],0x8
650164c8:	inc    eax
650164c9:	dec    ecx
650164ca:	jne    0x650164c5
650164cc:	mov    eax,DWORD PTR [ebx+0x4]
650164cf:	call   0x65016002
650164d4:	mov    DWORD PTR [ebx+0xc],eax
650164d7:	mov    DWORD PTR [ebx+0x8],edx
650164da:	jmp    0x650164df
650164dc:	mov    DWORD PTR [ebx+0x8],esi
650164df:	xor    eax,eax
650164e1:	lea    edi,[ebx+0x10]
650164e4:	stos   DWORD PTR es:[edi],eax
650164e5:	stos   DWORD PTR es:[edi],eax
650164e6:	stos   DWORD PTR es:[edi],eax
650164e7:	jmp    0x6501649b
650164e9:	cmp    DWORD PTR ds:0x6502d938,esi
650164ef:	jne    0x65016357
650164f5:	or     eax,0xffffffff
650164f8:	mov    ecx,DWORD PTR [ebp-0x4]
650164fb:	pop    edi
650164fc:	pop    esi
650164fd:	xor    ecx,ebp
650164ff:	pop    ebx
65016500:	call   0x6501292c
65016505:	leave  
65016506:	ret    
65016507:	push   0x14
65016509:	push   0x65029cf0
6501650e:	call   0x65013e70
65016513:	or     DWORD PTR [ebp-0x20],0xffffffff
65016517:	call   0x650148cb
6501651c:	mov    edi,eax
6501651e:	mov    DWORD PTR [ebp-0x24],edi
65016521:	call   0x65016210
65016526:	mov    ebx,DWORD PTR [edi+0x68]
65016529:	mov    esi,DWORD PTR [ebp+0x8]
6501652c:	call   0x650162b4
65016531:	mov    DWORD PTR [ebp+0x8],eax
65016534:	cmp    eax,DWORD PTR [ebx+0x4]
65016537:	je     0x65016694
6501653d:	push   0x220
65016542:	call   0x65015b90
65016547:	pop    ecx
65016548:	mov    ebx,eax
6501654a:	test   ebx,ebx
6501654c:	je     0x65016698
65016552:	mov    ecx,0x88
65016557:	mov    esi,DWORD PTR [edi+0x68]
6501655a:	mov    edi,ebx
6501655c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501655e:	and    DWORD PTR [ebx],0x0
65016561:	push   ebx
65016562:	push   DWORD PTR [ebp+0x8]
65016565:	call   0x6501632e
6501656a:	pop    ecx
6501656b:	pop    ecx
6501656c:	mov    DWORD PTR [ebp-0x20],eax
6501656f:	test   eax,eax
65016571:	jne    0x65016673
65016577:	mov    esi,DWORD PTR [ebp-0x24]
6501657a:	push   DWORD PTR [esi+0x68]
6501657d:	call   DWORD PTR ds:0x65024094
65016583:	test   eax,eax
65016585:	jne    0x65016598
65016587:	mov    eax,DWORD PTR [esi+0x68]
6501658a:	cmp    eax,0x6502c268
6501658f:	je     0x65016598
65016591:	push   eax
65016592:	call   0x65013746
65016597:	pop    ecx
65016598:	mov    DWORD PTR [esi+0x68],ebx
6501659b:	push   ebx
6501659c:	mov    edi,DWORD PTR ds:0x65024018
650165a2:	call   edi
650165a4:	test   BYTE PTR [esi+0x70],0x2
650165a8:	jne    0x65016698
650165ae:	test   BYTE PTR ds:0x6502c78c,0x1
650165b5:	jne    0x65016698
650165bb:	push   0xd
650165bd:	call   0x65019ecf
650165c2:	pop    ecx
650165c3:	and    DWORD PTR [ebp-0x4],0x0
650165c7:	mov    eax,DWORD PTR [ebx+0x4]
650165ca:	mov    ds:0x6502d948,eax
650165cf:	mov    eax,DWORD PTR [ebx+0x8]
650165d2:	mov    ds:0x6502d94c,eax
650165d7:	mov    eax,DWORD PTR [ebx+0xc]
650165da:	mov    ds:0x6502d950,eax
650165df:	xor    eax,eax
650165e1:	mov    DWORD PTR [ebp-0x1c],eax
650165e4:	cmp    eax,0x5
650165e7:	jge    0x650165f9
650165e9:	mov    cx,WORD PTR [ebx+eax*2+0x10]
650165ee:	mov    WORD PTR [eax*2+0x6502d93c],cx
650165f6:	inc    eax
650165f7:	jmp    0x650165e1
650165f9:	xor    eax,eax
650165fb:	mov    DWORD PTR [ebp-0x1c],eax
650165fe:	cmp    eax,0x101
65016603:	jge    0x65016612
65016605:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
65016609:	mov    BYTE PTR [eax+0x6502c488],cl
6501660f:	inc    eax
65016610:	jmp    0x650165fb
65016612:	xor    eax,eax
65016614:	mov    DWORD PTR [ebp-0x1c],eax
65016617:	cmp    eax,0x100
6501661c:	jge    0x6501662e
6501661e:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
65016625:	mov    BYTE PTR [eax+0x6502c590],cl
6501662b:	inc    eax
6501662c:	jmp    0x65016614
6501662e:	push   DWORD PTR ds:0x6502c690
65016634:	call   DWORD PTR ds:0x65024094
6501663a:	test   eax,eax
6501663c:	jne    0x65016651
6501663e:	mov    eax,ds:0x6502c690
65016643:	cmp    eax,0x6502c268
65016648:	je     0x65016651
6501664a:	push   eax
6501664b:	call   0x65013746
65016650:	pop    ecx
65016651:	mov    DWORD PTR ds:0x6502c690,ebx
65016657:	push   ebx
65016658:	call   edi
6501665a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65016661:	call   0x65016668
65016666:	jmp    0x65016698
65016668:	push   0xd
6501666a:	call   0x65019df7
6501666f:	pop    ecx
65016670:	ret    
65016671:	jmp    0x65016698
65016673:	cmp    eax,0xffffffff
65016676:	jne    0x65016698
65016678:	cmp    ebx,0x6502c268
6501667e:	je     0x65016687
65016680:	push   ebx
65016681:	call   0x65013746
65016686:	pop    ecx
65016687:	call   0x65014580
6501668c:	mov    DWORD PTR [eax],0x16
65016692:	jmp    0x65016698
65016694:	and    DWORD PTR [ebp-0x20],0x0
65016698:	mov    eax,DWORD PTR [ebp-0x20]
6501669b:	call   0x65013eb5
650166a0:	ret    
650166a1:	cmp    DWORD PTR ds:0x65031574,0x0
650166a8:	jne    0x650166bc
650166aa:	push   0xfffffffd
650166ac:	call   0x65016507
650166b1:	pop    ecx
650166b2:	mov    DWORD PTR ds:0x65031574,0x1
650166bc:	xor    eax,eax
650166be:	ret    
650166bf:	push   ebx
650166c0:	push   ebp
650166c1:	push   esi
650166c2:	mov    esi,DWORD PTR [esp+0x10]
650166c6:	mov    eax,DWORD PTR [esi+0xbc]
650166cc:	xor    ebp,ebp
650166ce:	cmp    eax,ebp
650166d0:	push   edi
650166d1:	je     0x65016742
650166d3:	cmp    eax,0x6502cc38
650166d8:	je     0x65016742
650166da:	mov    eax,DWORD PTR [esi+0xb0]
650166e0:	cmp    eax,ebp
650166e2:	je     0x65016742
650166e4:	cmp    DWORD PTR [eax],ebp
650166e6:	jne    0x65016742
650166e8:	mov    eax,DWORD PTR [esi+0xb8]
650166ee:	cmp    eax,ebp
650166f0:	je     0x65016709
650166f2:	cmp    DWORD PTR [eax],ebp
650166f4:	jne    0x65016709
650166f6:	push   eax
650166f7:	call   0x65013746
650166fc:	push   DWORD PTR [esi+0xbc]
65016702:	call   0x6501ba15
65016707:	pop    ecx
65016708:	pop    ecx
65016709:	mov    eax,DWORD PTR [esi+0xb4]
6501670f:	cmp    eax,ebp
65016711:	je     0x6501672a
65016713:	cmp    DWORD PTR [eax],ebp
65016715:	jne    0x6501672a
65016717:	push   eax
65016718:	call   0x65013746
6501671d:	push   DWORD PTR [esi+0xbc]
65016723:	call   0x6501b9d5
65016728:	pop    ecx
65016729:	pop    ecx
6501672a:	push   DWORD PTR [esi+0xb0]
65016730:	call   0x65013746
65016735:	push   DWORD PTR [esi+0xbc]
6501673b:	call   0x65013746
65016740:	pop    ecx
65016741:	pop    ecx
65016742:	mov    eax,DWORD PTR [esi+0xc0]
65016748:	cmp    eax,ebp
6501674a:	je     0x65016790
6501674c:	cmp    DWORD PTR [eax],ebp
6501674e:	jne    0x65016790
65016750:	mov    eax,DWORD PTR [esi+0xc4]
65016756:	sub    eax,0xfe
6501675b:	push   eax
6501675c:	call   0x65013746
65016761:	mov    eax,DWORD PTR [esi+0xcc]
65016767:	mov    edi,0x80
6501676c:	sub    eax,edi
6501676e:	push   eax
6501676f:	call   0x65013746
65016774:	mov    eax,DWORD PTR [esi+0xd0]
6501677a:	sub    eax,edi
6501677c:	push   eax
6501677d:	call   0x65013746
65016782:	push   DWORD PTR [esi+0xc0]
65016788:	call   0x65013746
6501678d:	add    esp,0x10
65016790:	lea    edi,[esi+0xd4]
65016796:	mov    eax,DWORD PTR [edi]
65016798:	cmp    eax,0x6502cb78
6501679d:	je     0x650167b6
6501679f:	cmp    DWORD PTR [eax+0xb4],ebp
650167a5:	jne    0x650167b6
650167a7:	push   eax
650167a8:	call   0x6501b845
650167ad:	push   DWORD PTR [edi]
650167af:	call   0x65013746
650167b4:	pop    ecx
650167b5:	pop    ecx
650167b6:	push   0x6
650167b8:	lea    edi,[esi+0x50]
650167bb:	pop    ebx
650167bc:	cmp    DWORD PTR [edi-0x8],0x6502c790
650167c3:	je     0x650167d6
650167c5:	mov    eax,DWORD PTR [edi]
650167c7:	cmp    eax,ebp
650167c9:	je     0x650167d6
650167cb:	cmp    DWORD PTR [eax],ebp
650167cd:	jne    0x650167d6
650167cf:	push   eax
650167d0:	call   0x65013746
650167d5:	pop    ecx
650167d6:	cmp    DWORD PTR [edi-0x4],ebp
650167d9:	je     0x650167ed
650167db:	mov    eax,DWORD PTR [edi+0x4]
650167de:	cmp    eax,ebp
650167e0:	je     0x650167ed
650167e2:	cmp    DWORD PTR [eax],ebp
650167e4:	jne    0x650167ed
650167e6:	push   eax
650167e7:	call   0x65013746
650167ec:	pop    ecx
650167ed:	add    edi,0x10
650167f0:	dec    ebx
650167f1:	jne    0x650167bc
650167f3:	push   esi
650167f4:	call   0x65013746
650167f9:	pop    ecx
650167fa:	pop    edi
650167fb:	pop    esi
650167fc:	pop    ebp
650167fd:	pop    ebx
650167fe:	ret    
650167ff:	push   ebx
65016800:	push   ebp
65016801:	push   esi
65016802:	mov    esi,DWORD PTR [esp+0x10]
65016806:	push   edi
65016807:	mov    edi,DWORD PTR ds:0x65024018
6501680d:	push   esi
6501680e:	call   edi
65016810:	mov    eax,DWORD PTR [esi+0xb0]
65016816:	test   eax,eax
65016818:	je     0x6501681d
6501681a:	push   eax
6501681b:	call   edi
6501681d:	mov    eax,DWORD PTR [esi+0xb8]
65016823:	test   eax,eax
65016825:	je     0x6501682a
65016827:	push   eax
65016828:	call   edi
6501682a:	mov    eax,DWORD PTR [esi+0xb4]
65016830:	test   eax,eax
65016832:	je     0x65016837
65016834:	push   eax
65016835:	call   edi
65016837:	mov    eax,DWORD PTR [esi+0xc0]
6501683d:	test   eax,eax
6501683f:	je     0x65016844
65016841:	push   eax
65016842:	call   edi
65016844:	push   0x6
65016846:	lea    ebx,[esi+0x50]
65016849:	pop    ebp
6501684a:	cmp    DWORD PTR [ebx-0x8],0x6502c790
65016851:	je     0x6501685c
65016853:	mov    eax,DWORD PTR [ebx]
65016855:	test   eax,eax
65016857:	je     0x6501685c
65016859:	push   eax
6501685a:	call   edi
6501685c:	cmp    DWORD PTR [ebx-0x4],0x0
65016860:	je     0x6501686c
65016862:	mov    eax,DWORD PTR [ebx+0x4]
65016865:	test   eax,eax
65016867:	je     0x6501686c
65016869:	push   eax
6501686a:	call   edi
6501686c:	add    ebx,0x10
6501686f:	dec    ebp
65016870:	jne    0x6501684a
65016872:	mov    eax,DWORD PTR [esi+0xd4]
65016878:	add    eax,0xb4
6501687d:	push   eax
6501687e:	call   edi
65016880:	pop    edi
65016881:	pop    esi
65016882:	pop    ebp
65016883:	pop    ebx
65016884:	ret    
65016885:	push   esi
65016886:	mov    esi,DWORD PTR [esp+0x8]
6501688a:	test   esi,esi
6501688c:	je     0x6501690d
6501688e:	push   ebx
6501688f:	push   ebp
65016890:	push   edi
65016891:	mov    edi,DWORD PTR ds:0x65024094
65016897:	push   esi
65016898:	call   edi
6501689a:	mov    eax,DWORD PTR [esi+0xb0]
650168a0:	test   eax,eax
650168a2:	je     0x650168a7
650168a4:	push   eax
650168a5:	call   edi
650168a7:	mov    eax,DWORD PTR [esi+0xb8]
650168ad:	test   eax,eax
650168af:	je     0x650168b4
650168b1:	push   eax
650168b2:	call   edi
650168b4:	mov    eax,DWORD PTR [esi+0xb4]
650168ba:	test   eax,eax
650168bc:	je     0x650168c1
650168be:	push   eax
650168bf:	call   edi
650168c1:	mov    eax,DWORD PTR [esi+0xc0]
650168c7:	test   eax,eax
650168c9:	je     0x650168ce
650168cb:	push   eax
650168cc:	call   edi
650168ce:	push   0x6
650168d0:	lea    ebx,[esi+0x50]
650168d3:	pop    ebp
650168d4:	cmp    DWORD PTR [ebx-0x8],0x6502c790
650168db:	je     0x650168e6
650168dd:	mov    eax,DWORD PTR [ebx]
650168df:	test   eax,eax
650168e1:	je     0x650168e6
650168e3:	push   eax
650168e4:	call   edi
650168e6:	cmp    DWORD PTR [ebx-0x4],0x0
650168ea:	je     0x650168f6
650168ec:	mov    eax,DWORD PTR [ebx+0x4]
650168ef:	test   eax,eax
650168f1:	je     0x650168f6
650168f3:	push   eax
650168f4:	call   edi
650168f6:	add    ebx,0x10
650168f9:	dec    ebp
650168fa:	jne    0x650168d4
650168fc:	mov    eax,DWORD PTR [esi+0xd4]
65016902:	add    eax,0xb4
65016907:	push   eax
65016908:	call   edi
6501690a:	pop    edi
6501690b:	pop    ebp
6501690c:	pop    ebx
6501690d:	mov    eax,esi
6501690f:	pop    esi
65016910:	ret    
65016911:	test   edi,edi
65016913:	je     0x6501694c
65016915:	test   eax,eax
65016917:	je     0x6501694c
65016919:	push   esi
6501691a:	mov    esi,DWORD PTR [eax]
6501691c:	cmp    esi,edi
6501691e:	je     0x65016948
65016920:	push   edi
65016921:	mov    DWORD PTR [eax],edi
65016923:	call   0x650167ff
65016928:	test   esi,esi
6501692a:	pop    ecx
6501692b:	je     0x65016948
6501692d:	push   esi
6501692e:	call   0x65016885
65016933:	cmp    DWORD PTR [esi],0x0
65016936:	pop    ecx
65016937:	jne    0x65016948
65016939:	cmp    esi,0x6502c798
6501693f:	je     0x65016948
65016941:	push   esi
65016942:	call   0x650166bf
65016947:	pop    ecx
65016948:	mov    eax,edi
6501694a:	pop    esi
6501694b:	ret    
6501694c:	xor    eax,eax
6501694e:	ret    
6501694f:	push   0xc
65016951:	push   0x65029d10
65016956:	call   0x65013e70
6501695b:	call   0x650148cb
65016960:	mov    esi,eax
65016962:	mov    eax,ds:0x6502c78c
65016967:	test   DWORD PTR [esi+0x70],eax
6501696a:	je     0x6501698e
6501696c:	cmp    DWORD PTR [esi+0x6c],0x0
65016970:	je     0x6501698e
65016972:	call   0x650148cb
65016977:	mov    esi,DWORD PTR [eax+0x6c]
6501697a:	test   esi,esi
6501697c:	jne    0x65016986
6501697e:	push   0x20
65016980:	call   0x65015d06
65016985:	pop    ecx
65016986:	mov    eax,esi
65016988:	call   0x65013eb5
6501698d:	ret    
6501698e:	push   0xc
65016990:	call   0x65019ecf
65016995:	pop    ecx
65016996:	and    DWORD PTR [ebp-0x4],0x0
6501699a:	lea    eax,[esi+0x6c]
6501699d:	mov    edi,DWORD PTR ds:0x6502c870
650169a3:	call   0x65016911
650169a8:	mov    DWORD PTR [ebp-0x1c],eax
650169ab:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650169b2:	call   0x650169b9
650169b7:	jmp    0x6501697a
650169b9:	push   0xc
650169bb:	call   0x65019df7
650169c0:	pop    ecx
650169c1:	mov    esi,DWORD PTR [ebp-0x1c]
650169c4:	ret    
650169c5:	push   ebp
650169c6:	mov    ebp,esp
650169c8:	push   ecx
650169c9:	push   esi
650169ca:	mov    esi,DWORD PTR [ebp+0xc]
650169cd:	push   esi
650169ce:	call   0x6501c72d
650169d3:	mov    DWORD PTR [ebp+0xc],eax
650169d6:	mov    eax,DWORD PTR [esi+0xc]
650169d9:	test   al,0x82
650169db:	pop    ecx
650169dc:	jne    0x650169f5
650169de:	call   0x65014580
650169e3:	mov    DWORD PTR [eax],0x9
650169e9:	or     DWORD PTR [esi+0xc],0x20
650169ed:	or     eax,0xffffffff
650169f0:	jmp    0x65016b22
650169f5:	test   al,0x40
650169f7:	je     0x65016a06
650169f9:	call   0x65014580
650169fe:	mov    DWORD PTR [eax],0x22
65016a04:	jmp    0x650169e9
65016a06:	push   ebx
65016a07:	xor    ebx,ebx
65016a09:	test   al,0x1
65016a0b:	je     0x65016a23
65016a0d:	test   al,0x10
65016a0f:	mov    DWORD PTR [esi+0x4],ebx
65016a12:	je     0x65016a9d
65016a18:	mov    ecx,DWORD PTR [esi+0x8]
65016a1b:	and    eax,0xfffffffe
65016a1e:	mov    DWORD PTR [esi],ecx
65016a20:	mov    DWORD PTR [esi+0xc],eax
65016a23:	mov    eax,DWORD PTR [esi+0xc]
65016a26:	and    eax,0xffffffef
65016a29:	or     eax,0x2
65016a2c:	test   ax,0x10c
65016a30:	mov    DWORD PTR [esi+0xc],eax
65016a33:	mov    DWORD PTR [esi+0x4],ebx
65016a36:	mov    DWORD PTR [ebp-0x4],ebx
65016a39:	jne    0x65016a67
65016a3b:	call   0x6501c58c
65016a40:	add    eax,0x20
65016a43:	cmp    esi,eax
65016a45:	je     0x65016a53
65016a47:	call   0x6501c58c
65016a4c:	add    eax,0x40
65016a4f:	cmp    esi,eax
65016a51:	jne    0x65016a60
65016a53:	push   DWORD PTR [ebp+0xc]
65016a56:	call   0x6501c52e
65016a5b:	test   eax,eax
65016a5d:	pop    ecx
65016a5e:	jne    0x65016a67
65016a60:	push   esi
65016a61:	call   0x6501c4ea
65016a66:	pop    ecx
65016a67:	test   WORD PTR [esi+0xc],0x108
65016a6d:	push   edi
65016a6e:	je     0x65016af4
65016a74:	mov    eax,DWORD PTR [esi+0x8]
65016a77:	mov    edi,DWORD PTR [esi]
65016a79:	lea    ecx,[eax+0x1]
65016a7c:	mov    DWORD PTR [esi],ecx
65016a7e:	mov    ecx,DWORD PTR [esi+0x18]
65016a81:	sub    edi,eax
65016a83:	dec    ecx
65016a84:	cmp    edi,ebx
65016a86:	mov    DWORD PTR [esi+0x4],ecx
65016a89:	jle    0x65016aa8
65016a8b:	push   edi
65016a8c:	push   eax
65016a8d:	push   DWORD PTR [ebp+0xc]
65016a90:	call   0x6501c40e
65016a95:	add    esp,0xc
65016a98:	mov    DWORD PTR [ebp-0x4],eax
65016a9b:	jmp    0x65016aea
65016a9d:	or     eax,0x20
65016aa0:	mov    DWORD PTR [esi+0xc],eax
65016aa3:	or     eax,0xffffffff
65016aa6:	jmp    0x65016b21
65016aa8:	mov    ecx,DWORD PTR [ebp+0xc]
65016aab:	cmp    ecx,0xffffffff
65016aae:	je     0x65016acb
65016ab0:	cmp    ecx,0xfffffffe
65016ab3:	je     0x65016acb
65016ab5:	mov    eax,ecx
65016ab7:	and    eax,0x1f
65016aba:	mov    edx,ecx
65016abc:	sar    edx,0x5
65016abf:	shl    eax,0x6
65016ac2:	add    eax,DWORD PTR [edx*4+0x65031460]
65016ac9:	jmp    0x65016ad0
65016acb:	mov    eax,0x6502c880
65016ad0:	test   BYTE PTR [eax+0x4],0x20
65016ad4:	je     0x65016aea
65016ad6:	push   0x2
65016ad8:	push   ebx
65016ad9:	push   ebx
65016ada:	push   ecx
65016adb:	call   0x6501bcd3
65016ae0:	and    eax,edx
65016ae2:	add    esp,0x10
65016ae5:	cmp    eax,0xffffffff
65016ae8:	je     0x65016b0f
65016aea:	mov    eax,DWORD PTR [esi+0x8]
65016aed:	mov    cl,BYTE PTR [ebp+0x8]
65016af0:	mov    BYTE PTR [eax],cl
65016af2:	jmp    0x65016b0a
65016af4:	xor    edi,edi
65016af6:	inc    edi
65016af7:	push   edi
65016af8:	lea    eax,[ebp+0x8]
65016afb:	push   eax
65016afc:	push   DWORD PTR [ebp+0xc]
65016aff:	call   0x6501c40e
65016b04:	add    esp,0xc
65016b07:	mov    DWORD PTR [ebp-0x4],eax
65016b0a:	cmp    DWORD PTR [ebp-0x4],edi
65016b0d:	je     0x65016b18
65016b0f:	or     DWORD PTR [esi+0xc],0x20
65016b13:	or     eax,0xffffffff
65016b16:	jmp    0x65016b20
65016b18:	mov    eax,DWORD PTR [ebp+0x8]
65016b1b:	and    eax,0xff
65016b20:	pop    edi
65016b21:	pop    ebx
65016b22:	pop    esi
65016b23:	leave  
65016b24:	ret    
65016b25:	push   ebp
65016b26:	mov    ebp,esp
65016b28:	push   esi
65016b29:	mov    esi,eax
65016b2b:	jmp    0x65016b41
65016b2d:	push   DWORD PTR [ebp+0x8]
65016b30:	mov    eax,DWORD PTR [ebp+0x10]
65016b33:	dec    DWORD PTR [ebp+0xc]
65016b36:	call   0x6501745a
65016b3b:	cmp    DWORD PTR [esi],0xffffffff
65016b3e:	pop    ecx
65016b3f:	je     0x65016b47
65016b41:	cmp    DWORD PTR [ebp+0xc],0x0
65016b45:	jg     0x65016b2d
65016b47:	pop    esi
65016b48:	pop    ebp
65016b49:	ret    
65016b4a:	push   ebp
65016b4b:	lea    ebp,[esp-0x3f4]
65016b52:	sub    esp,0x474
65016b58:	mov    eax,ds:0x6502c09c
65016b5d:	xor    eax,ebp
65016b5f:	mov    DWORD PTR [ebp+0x3f0],eax
65016b65:	mov    eax,DWORD PTR [ebp+0x3fc]
65016b6b:	push   ebx
65016b6c:	mov    ebx,DWORD PTR [ebp+0x408]
65016b72:	push   esi
65016b73:	mov    esi,DWORD PTR [ebp+0x400]
65016b79:	push   edi
65016b7a:	push   DWORD PTR [ebp+0x404]
65016b80:	xor    edi,edi
65016b82:	lea    ecx,[ebp-0x64]
65016b85:	mov    DWORD PTR [ebp-0x3c],eax
65016b88:	mov    DWORD PTR [ebp-0x28],ebx
65016b8b:	mov    DWORD PTR [ebp-0x54],edi
65016b8e:	mov    DWORD PTR [ebp-0x14],edi
65016b91:	mov    DWORD PTR [ebp-0x38],edi
65016b94:	mov    DWORD PTR [ebp-0x18],edi
65016b97:	mov    DWORD PTR [ebp-0x30],edi
65016b9a:	mov    DWORD PTR [ebp-0x48],edi
65016b9d:	mov    DWORD PTR [ebp-0x34],edi
65016ba0:	call   0x65012acf
65016ba5:	cmp    DWORD PTR [ebp-0x3c],edi
65016ba8:	jne    0x65016bd7
65016baa:	call   0x65014580
65016baf:	push   edi
65016bb0:	push   edi
65016bb1:	push   edi
65016bb2:	push   edi
65016bb3:	mov    DWORD PTR [eax],0x16
65016bb9:	push   edi
65016bba:	call   0x6501241f
65016bbf:	add    esp,0x14
65016bc2:	cmp    BYTE PTR [ebp-0x58],0x0
65016bc6:	je     0x65016bcf
65016bc8:	mov    eax,DWORD PTR [ebp-0x5c]
65016bcb:	and    DWORD PTR [eax+0x70],0xfffffffd
65016bcf:	or     eax,0xffffffff
65016bd2:	jmp    0x65017422
65016bd7:	cmp    esi,edi
65016bd9:	je     0x65016baa
65016bdb:	movzx  edx,WORD PTR [esi]
65016bde:	xor    ecx,ecx
65016be0:	cmp    dx,di
65016be3:	mov    DWORD PTR [ebp-0x2c],edi
65016be6:	mov    DWORD PTR [ebp-0x20],edi
65016be9:	mov    DWORD PTR [ebp-0x50],edi
65016bec:	mov    DWORD PTR [ebp-0x24],edx
65016bef:	je     0x65017412
65016bf5:	push   0x2
65016bf7:	pop    edi
65016bf8:	add    esi,edi
65016bfa:	cmp    DWORD PTR [ebp-0x2c],0x0
65016bfe:	mov    DWORD PTR [ebp-0x4c],esi
65016c01:	jl     0x65017412
65016c07:	lea    eax,[edx-0x20]
65016c0a:	cmp    ax,0x58
65016c0e:	ja     0x65016c1f
65016c10:	movzx  eax,dx
65016c13:	movzx  eax,BYTE PTR [eax+0x65024de0]
65016c1a:	and    eax,0xf
65016c1d:	jmp    0x65016c21
65016c1f:	xor    eax,eax
65016c21:	movsx  eax,BYTE PTR [ecx+eax*8+0x65024e00]
65016c29:	push   0x7
65016c2b:	sar    eax,0x4
65016c2e:	pop    ecx
65016c2f:	cmp    eax,ecx
65016c31:	mov    DWORD PTR [ebp-0x68],eax
65016c34:	ja     0x650173e0
65016c3a:	jmp    DWORD PTR [eax*4+0x6501743a]
65016c41:	xor    eax,eax
65016c43:	or     DWORD PTR [ebp-0x18],0xffffffff
65016c47:	mov    DWORD PTR [ebp-0x6c],eax
65016c4a:	mov    DWORD PTR [ebp-0x48],eax
65016c4d:	mov    DWORD PTR [ebp-0x38],eax
65016c50:	mov    DWORD PTR [ebp-0x30],eax
65016c53:	mov    DWORD PTR [ebp-0x14],eax
65016c56:	mov    DWORD PTR [ebp-0x34],eax
65016c59:	jmp    0x650173e0
65016c5e:	movzx  eax,dx
65016c61:	sub    eax,0x20
65016c64:	je     0x65016ca4
65016c66:	sub    eax,0x3
65016c69:	je     0x65016c98
65016c6b:	sub    eax,0x8
65016c6e:	je     0x65016c8f
65016c70:	sub    eax,edi
65016c72:	je     0x65016c86
65016c74:	sub    eax,0x3
65016c77:	jne    0x650173e0
65016c7d:	or     DWORD PTR [ebp-0x14],0x8
65016c81:	jmp    0x650173e0
65016c86:	or     DWORD PTR [ebp-0x14],0x4
65016c8a:	jmp    0x650173e0
65016c8f:	or     DWORD PTR [ebp-0x14],0x1
65016c93:	jmp    0x650173e0
65016c98:	or     DWORD PTR [ebp-0x14],0x80
65016c9f:	jmp    0x650173e0
65016ca4:	or     DWORD PTR [ebp-0x14],edi
65016ca7:	jmp    0x650173e0
65016cac:	cmp    dx,0x2a
65016cb0:	jne    0x65016cd2
65016cb2:	add    ebx,0x4
65016cb5:	mov    DWORD PTR [ebp-0x28],ebx
65016cb8:	mov    ebx,DWORD PTR [ebx-0x4]
65016cbb:	test   ebx,ebx
65016cbd:	mov    DWORD PTR [ebp-0x38],ebx
65016cc0:	jge    0x650173e0
65016cc6:	or     DWORD PTR [ebp-0x14],0x4
65016cca:	neg    DWORD PTR [ebp-0x38]
65016ccd:	jmp    0x650173e0
65016cd2:	mov    eax,DWORD PTR [ebp-0x38]
65016cd5:	imul   eax,eax,0xa
65016cd8:	movzx  ecx,dx
65016cdb:	lea    eax,[eax+ecx*1-0x30]
65016cdf:	mov    DWORD PTR [ebp-0x38],eax
65016ce2:	jmp    0x650173e0
65016ce7:	and    DWORD PTR [ebp-0x18],0x0
65016ceb:	jmp    0x650173e0
65016cf0:	cmp    dx,0x2a
65016cf4:	jne    0x65016d13
65016cf6:	add    ebx,0x4
65016cf9:	mov    DWORD PTR [ebp-0x28],ebx
65016cfc:	mov    ebx,DWORD PTR [ebx-0x4]
65016cff:	test   ebx,ebx
65016d01:	mov    DWORD PTR [ebp-0x18],ebx
65016d04:	jge    0x650173e0
65016d0a:	or     DWORD PTR [ebp-0x18],0xffffffff
65016d0e:	jmp    0x650173e0
65016d13:	mov    eax,DWORD PTR [ebp-0x18]
65016d16:	imul   eax,eax,0xa
65016d19:	movzx  ecx,dx
65016d1c:	lea    eax,[eax+ecx*1-0x30]
65016d20:	mov    DWORD PTR [ebp-0x18],eax
65016d23:	jmp    0x650173e0
65016d28:	movzx  eax,dx
65016d2b:	cmp    eax,0x49
65016d2e:	je     0x65016d78
65016d30:	cmp    eax,0x68
65016d33:	je     0x65016d6f
65016d35:	cmp    eax,0x6c
65016d38:	je     0x65016d4f
65016d3a:	cmp    eax,0x77
65016d3d:	jne    0x650173e0
65016d43:	or     DWORD PTR [ebp-0x14],0x800
65016d4a:	jmp    0x650173e0
65016d4f:	cmp    WORD PTR [esi],0x6c
65016d53:	jne    0x65016d66
65016d55:	add    esi,edi
65016d57:	or     DWORD PTR [ebp-0x14],0x1000
65016d5e:	mov    DWORD PTR [ebp-0x4c],esi
65016d61:	jmp    0x650173e0
65016d66:	or     DWORD PTR [ebp-0x14],0x10
65016d6a:	jmp    0x650173e0
65016d6f:	or     DWORD PTR [ebp-0x14],0x20
65016d73:	jmp    0x650173e0
65016d78:	movzx  eax,WORD PTR [esi]
65016d7b:	cmp    ax,0x36
65016d7f:	jne    0x65016d9a
65016d81:	cmp    WORD PTR [esi+0x2],0x34
65016d86:	jne    0x65016d9a
65016d88:	add    esi,0x4
65016d8b:	or     DWORD PTR [ebp-0x14],0x8000
65016d92:	mov    DWORD PTR [ebp-0x4c],esi
65016d95:	jmp    0x650173e0
65016d9a:	cmp    ax,0x33
65016d9e:	jne    0x65016db9
65016da0:	cmp    WORD PTR [esi+0x2],0x32
65016da5:	jne    0x65016db9
65016da7:	add    esi,0x4
65016daa:	and    DWORD PTR [ebp-0x14],0xffff7fff
65016db1:	mov    DWORD PTR [ebp-0x4c],esi
65016db4:	jmp    0x650173e0
65016db9:	cmp    ax,0x64
65016dbd:	je     0x650173e0
65016dc3:	cmp    ax,0x69
65016dc7:	je     0x650173e0
65016dcd:	cmp    ax,0x6f
65016dd1:	je     0x650173e0
65016dd7:	cmp    ax,0x75
65016ddb:	je     0x650173e0
65016de1:	cmp    ax,0x78
65016de5:	je     0x650173e0
65016deb:	cmp    ax,0x58
65016def:	je     0x650173e0
65016df5:	and    DWORD PTR [ebp-0x68],0x0
65016df9:	mov    eax,DWORD PTR [ebp-0x3c]
65016dfc:	push   edx
65016dfd:	lea    esi,[ebp-0x2c]
65016e00:	mov    DWORD PTR [ebp-0x34],0x1
65016e07:	call   0x6501745a
65016e0c:	jmp    0x650173df
65016e11:	movzx  eax,dx
65016e14:	cmp    eax,0x64
65016e17:	jg     0x65016fc4
65016e1d:	je     0x65017043
65016e23:	cmp    eax,0x53
65016e26:	jg     0x65016f03
65016e2c:	je     0x65016e8d
65016e2e:	sub    eax,0x41
65016e31:	je     0x65016e43
65016e33:	sub    eax,edi
65016e35:	je     0x65016e78
65016e37:	sub    eax,edi
65016e39:	je     0x65016e43
65016e3b:	sub    eax,edi
65016e3d:	jne    0x650172c4
65016e43:	add    edx,0x20
65016e46:	mov    DWORD PTR [ebp-0x6c],0x1
65016e4d:	mov    DWORD PTR [ebp-0x24],edx
65016e50:	or     DWORD PTR [ebp-0x14],0x40
65016e54:	cmp    DWORD PTR [ebp-0x18],0x0
65016e58:	lea    esi,[ebp-0x10]
65016e5b:	mov    eax,0x200
65016e60:	mov    DWORD PTR [ebp-0x1c],esi
65016e63:	mov    DWORD PTR [ebp-0x20],eax
65016e66:	jge    0x65017067
65016e6c:	mov    DWORD PTR [ebp-0x18],0x6
65016e73:	jmp    0x650170b4
65016e78:	test   WORD PTR [ebp-0x14],0x830
65016e7e:	jne    0x65016f20
65016e84:	or     DWORD PTR [ebp-0x14],0x20
65016e88:	jmp    0x65016f20
65016e8d:	test   WORD PTR [ebp-0x14],0x830
65016e93:	jne    0x65016e99
65016e95:	or     DWORD PTR [ebp-0x14],0x20
65016e99:	mov    edi,DWORD PTR [ebp-0x18]
65016e9c:	cmp    edi,0xffffffff
65016e9f:	jne    0x65016ea6
65016ea1:	mov    edi,0x7fffffff
65016ea6:	add    ebx,0x4
65016ea9:	test   BYTE PTR [ebp-0x14],0x20
65016ead:	mov    DWORD PTR [ebp-0x28],ebx
65016eb0:	mov    ebx,DWORD PTR [ebx-0x4]
65016eb3:	mov    DWORD PTR [ebp-0x1c],ebx
65016eb6:	je     0x65017297
65016ebc:	test   ebx,ebx
65016ebe:	jne    0x65016ec8
65016ec0:	mov    eax,ds:0x6502c950
65016ec5:	mov    DWORD PTR [ebp-0x1c],eax
65016ec8:	and    DWORD PTR [ebp-0x20],0x0
65016ecc:	test   edi,edi
65016ece:	mov    esi,DWORD PTR [ebp-0x1c]
65016ed1:	jle    0x650172c4
65016ed7:	mov    al,BYTE PTR [esi]
65016ed9:	test   al,al
65016edb:	je     0x650172c4
65016ee1:	lea    ecx,[ebp-0x64]
65016ee4:	movzx  eax,al
65016ee7:	push   ecx
65016ee8:	push   eax
65016ee9:	call   0x65019c5f
65016eee:	test   eax,eax
65016ef0:	pop    ecx
65016ef1:	pop    ecx
65016ef2:	je     0x65016ef5
65016ef4:	inc    esi
65016ef5:	inc    esi
65016ef6:	inc    DWORD PTR [ebp-0x20]
65016ef9:	cmp    DWORD PTR [ebp-0x20],edi
65016efc:	jl     0x65016ed7
65016efe:	jmp    0x650172c4
65016f03:	sub    eax,0x58
65016f06:	je     0x6501714f
65016f0c:	sub    eax,edi
65016f0e:	je     0x65016f77
65016f10:	sub    eax,ecx
65016f12:	je     0x65016e50
65016f18:	sub    eax,edi
65016f1a:	jne    0x650172c4
65016f20:	movzx  eax,WORD PTR [ebx]
65016f23:	add    ebx,0x4
65016f26:	xor    esi,esi
65016f28:	inc    esi
65016f29:	test   BYTE PTR [ebp-0x14],0x20
65016f2d:	mov    DWORD PTR [ebp-0x34],esi
65016f30:	mov    DWORD PTR [ebp-0x28],ebx
65016f33:	mov    DWORD PTR [ebp-0x70],eax
65016f36:	je     0x65016f65
65016f38:	mov    BYTE PTR [ebp-0x40],al
65016f3b:	lea    eax,[ebp-0x64]
65016f3e:	push   eax
65016f3f:	mov    eax,DWORD PTR [ebp-0x64]
65016f42:	mov    BYTE PTR [ebp-0x3f],0x0
65016f46:	push   DWORD PTR [eax+0xac]
65016f4c:	lea    eax,[ebp-0x40]
65016f4f:	push   eax
65016f50:	lea    eax,[ebp-0x10]
65016f53:	push   eax
65016f54:	call   0x6501c94e
65016f59:	add    esp,0x10
65016f5c:	test   eax,eax
65016f5e:	jge    0x65016f69
65016f60:	mov    DWORD PTR [ebp-0x48],esi
65016f63:	jmp    0x65016f69
65016f65:	mov    WORD PTR [ebp-0x10],ax
65016f69:	lea    eax,[ebp-0x10]
65016f6c:	mov    DWORD PTR [ebp-0x1c],eax
65016f6f:	mov    DWORD PTR [ebp-0x20],esi
65016f72:	jmp    0x650172c4
65016f77:	mov    eax,DWORD PTR [ebx]
65016f79:	add    ebx,0x4
65016f7c:	test   eax,eax
65016f7e:	mov    DWORD PTR [ebp-0x28],ebx
65016f81:	je     0x65016fb0
65016f83:	mov    ecx,DWORD PTR [eax+0x4]
65016f86:	test   ecx,ecx
65016f88:	je     0x65016fb0
65016f8a:	test   WORD PTR [ebp-0x14],0x800
65016f90:	movsx  eax,WORD PTR [eax]
65016f93:	mov    DWORD PTR [ebp-0x1c],ecx
65016f96:	je     0x65016fa7
65016f98:	cdq    
65016f99:	sub    eax,edx
65016f9b:	mov    DWORD PTR [ebp-0x34],0x1
65016fa2:	jmp    0x650172bf
65016fa7:	and    DWORD PTR [ebp-0x34],0x0
65016fab:	jmp    0x650172c1
65016fb0:	mov    eax,ds:0x6502c950
65016fb5:	mov    DWORD PTR [ebp-0x1c],eax
65016fb8:	push   eax
65016fb9:	call   0x65014080
65016fbe:	pop    ecx
65016fbf:	jmp    0x650172c1
65016fc4:	cmp    eax,0x70
65016fc7:	jg     0x65017154
65016fcd:	je     0x65017148
65016fd3:	cmp    eax,0x65
65016fd6:	jl     0x650172c4
65016fdc:	cmp    eax,0x67
65016fdf:	jle    0x65016e50
65016fe5:	cmp    eax,0x69
65016fe8:	je     0x65017043
65016fea:	cmp    eax,0x6e
65016fed:	je     0x6501700e
65016fef:	cmp    eax,0x6f
65016ff2:	jne    0x650172c4
65016ff8:	test   BYTE PTR [ebp-0x14],0x80
65016ffc:	mov    DWORD PTR [ebp-0x24],0x8
65017003:	je     0x6501704e
65017005:	or     DWORD PTR [ebp-0x14],0x200
6501700c:	jmp    0x6501704e
6501700e:	mov    esi,DWORD PTR [ebx]
65017010:	add    ebx,0x4
65017013:	mov    DWORD PTR [ebp-0x28],ebx
65017016:	call   0x6501c938
6501701b:	test   eax,eax
6501701d:	je     0x650173fb
65017023:	test   BYTE PTR [ebp-0x14],0x20
65017027:	je     0x65017032
65017029:	mov    ax,WORD PTR [ebp-0x2c]
6501702d:	mov    WORD PTR [esi],ax
65017030:	jmp    0x65017037
65017032:	mov    eax,DWORD PTR [ebp-0x2c]
65017035:	mov    DWORD PTR [esi],eax
65017037:	mov    DWORD PTR [ebp-0x48],0x1
6501703e:	jmp    0x650173cd
65017043:	or     DWORD PTR [ebp-0x14],0x40
65017047:	mov    DWORD PTR [ebp-0x24],0xa
6501704e:	test   WORD PTR [ebp-0x14],0x8000
65017054:	je     0x6501719e
6501705a:	mov    eax,DWORD PTR [ebx]
6501705c:	mov    edx,DWORD PTR [ebx+0x4]
6501705f:	add    ebx,0x8
65017062:	jmp    0x650171d7
65017067:	jne    0x65017078
65017069:	cmp    dx,0x67
6501706d:	jne    0x650170b4
6501706f:	mov    DWORD PTR [ebp-0x18],0x1
65017076:	jmp    0x650170b4
65017078:	cmp    DWORD PTR [ebp-0x18],eax
6501707b:	jle    0x65017080
6501707d:	mov    DWORD PTR [ebp-0x18],eax
65017080:	cmp    DWORD PTR [ebp-0x18],0xa3
65017087:	jle    0x650170b4
65017089:	mov    edi,DWORD PTR [ebp-0x18]
6501708c:	add    edi,0x15d
65017092:	push   edi
65017093:	call   0x65015b90
65017098:	test   eax,eax
6501709a:	mov    edx,DWORD PTR [ebp-0x24]
6501709d:	pop    ecx
6501709e:	mov    DWORD PTR [ebp-0x50],eax
650170a1:	je     0x650170ad
650170a3:	mov    DWORD PTR [ebp-0x1c],eax
650170a6:	mov    DWORD PTR [ebp-0x20],edi
650170a9:	mov    esi,eax
650170ab:	jmp    0x650170b4
650170ad:	mov    DWORD PTR [ebp-0x18],0xa3
650170b4:	mov    eax,DWORD PTR [ebx]
650170b6:	add    ebx,0x8
650170b9:	mov    DWORD PTR [ebp-0x78],eax
650170bc:	mov    eax,DWORD PTR [ebx-0x4]
650170bf:	mov    DWORD PTR [ebp-0x74],eax
650170c2:	lea    eax,[ebp-0x64]
650170c5:	push   eax
650170c6:	push   DWORD PTR [ebp-0x6c]
650170c9:	movsx  eax,dl
650170cc:	push   DWORD PTR [ebp-0x18]
650170cf:	mov    DWORD PTR [ebp-0x28],ebx
650170d2:	push   eax
650170d3:	push   DWORD PTR [ebp-0x20]
650170d6:	lea    eax,[ebp-0x78]
650170d9:	push   esi
650170da:	push   eax
650170db:	push   DWORD PTR ds:0x6502cb5c
650170e1:	call   0x650146af
650170e6:	pop    ecx
650170e7:	call   eax
650170e9:	mov    ebx,DWORD PTR [ebp-0x14]
650170ec:	add    esp,0x1c
650170ef:	and    ebx,0x80
650170f5:	je     0x65017112
650170f7:	cmp    DWORD PTR [ebp-0x18],0x0
650170fb:	jne    0x65017112
650170fd:	lea    eax,[ebp-0x64]
65017100:	push   eax
65017101:	push   esi
65017102:	push   DWORD PTR ds:0x6502cb68
65017108:	call   0x650146af
6501710d:	pop    ecx
6501710e:	call   eax
65017110:	pop    ecx
65017111:	pop    ecx
65017112:	cmp    WORD PTR [ebp-0x24],0x67
65017117:	jne    0x65017132
65017119:	test   ebx,ebx
6501711b:	jne    0x65017132
6501711d:	lea    eax,[ebp-0x64]
65017120:	push   eax
65017121:	push   esi
65017122:	push   DWORD PTR ds:0x6502cb64
65017128:	call   0x650146af
6501712d:	pop    ecx
6501712e:	call   eax
65017130:	pop    ecx
65017131:	pop    ecx
65017132:	cmp    BYTE PTR [esi],0x2d
65017135:	jne    0x65017142
65017137:	or     DWORD PTR [ebp-0x14],0x100
6501713e:	inc    esi
6501713f:	mov    DWORD PTR [ebp-0x1c],esi
65017142:	push   esi
65017143:	jmp    0x65016fb9
65017148:	mov    DWORD PTR [ebp-0x18],0x8
6501714f:	mov    DWORD PTR [ebp-0x54],ecx
65017152:	jmp    0x65017175
65017154:	sub    eax,0x73
65017157:	je     0x65016e99
6501715d:	sub    eax,edi
6501715f:	je     0x65017047
65017165:	sub    eax,0x3
65017168:	jne    0x650172c4
6501716e:	mov    DWORD PTR [ebp-0x54],0x27
65017175:	test   BYTE PTR [ebp-0x14],0x80
65017179:	mov    DWORD PTR [ebp-0x24],0x10
65017180:	je     0x6501704e
65017186:	mov    eax,DWORD PTR [ebp-0x54]
65017189:	add    eax,0x51
6501718c:	mov    WORD PTR [ebp-0x44],0x30
65017192:	mov    WORD PTR [ebp-0x42],ax
65017196:	mov    DWORD PTR [ebp-0x30],edi
65017199:	jmp    0x6501704e
6501719e:	test   WORD PTR [ebp-0x14],0x1000
650171a4:	jne    0x6501705a
650171aa:	add    ebx,0x4
650171ad:	test   BYTE PTR [ebp-0x14],0x20
650171b1:	je     0x650171c9
650171b3:	test   BYTE PTR [ebp-0x14],0x40
650171b7:	mov    DWORD PTR [ebp-0x28],ebx
650171ba:	je     0x650171c2
650171bc:	movsx  eax,WORD PTR [ebx-0x4]
650171c0:	jmp    0x650171c6
650171c2:	movzx  eax,WORD PTR [ebx-0x4]
650171c6:	cdq    
650171c7:	jmp    0x650171da
650171c9:	test   BYTE PTR [ebp-0x14],0x40
650171cd:	mov    eax,DWORD PTR [ebx-0x4]
650171d0:	je     0x650171d5
650171d2:	cdq    
650171d3:	jmp    0x650171d7
650171d5:	xor    edx,edx
650171d7:	mov    DWORD PTR [ebp-0x28],ebx
650171da:	test   BYTE PTR [ebp-0x14],0x40
650171de:	je     0x650171f8
650171e0:	test   edx,edx
650171e2:	jg     0x650171f8
650171e4:	jl     0x650171ea
650171e6:	test   eax,eax
650171e8:	jae    0x650171f8
650171ea:	neg    eax
650171ec:	adc    edx,0x0
650171ef:	neg    edx
650171f1:	or     DWORD PTR [ebp-0x14],0x100
650171f8:	test   WORD PTR [ebp-0x14],0x9000
650171fe:	mov    ebx,edx
65017200:	mov    edi,eax
65017202:	jne    0x65017206
65017204:	xor    ebx,ebx
65017206:	cmp    DWORD PTR [ebp-0x18],0x0
6501720a:	jge    0x65017215
6501720c:	mov    DWORD PTR [ebp-0x18],0x1
65017213:	jmp    0x65017226
65017215:	and    DWORD PTR [ebp-0x14],0xfffffff7
65017219:	mov    eax,0x200
6501721e:	cmp    DWORD PTR [ebp-0x18],eax
65017221:	jle    0x65017226
65017223:	mov    DWORD PTR [ebp-0x18],eax
65017226:	mov    eax,edi
65017228:	or     eax,ebx
6501722a:	jne    0x6501722f
6501722c:	and    DWORD PTR [ebp-0x30],eax
6501722f:	lea    esi,[ebp+0x1ef]
65017235:	mov    eax,DWORD PTR [ebp-0x18]
65017238:	dec    DWORD PTR [ebp-0x18]
6501723b:	test   eax,eax
6501723d:	jg     0x65017245
6501723f:	mov    eax,edi
65017241:	or     eax,ebx
65017243:	je     0x65017269
65017245:	mov    eax,DWORD PTR [ebp-0x24]
65017248:	cdq    
65017249:	push   edx
6501724a:	push   eax
6501724b:	push   ebx
6501724c:	push   edi
6501724d:	call   0x65018c60
65017252:	add    ecx,0x30
65017255:	cmp    ecx,0x39
65017258:	mov    DWORD PTR [ebp-0x7c],ebx
6501725b:	mov    edi,eax
6501725d:	mov    ebx,edx
6501725f:	jle    0x65017264
65017261:	add    ecx,DWORD PTR [ebp-0x54]
65017264:	mov    BYTE PTR [esi],cl
65017266:	dec    esi
65017267:	jmp    0x65017235
65017269:	lea    eax,[ebp+0x1ef]
6501726f:	sub    eax,esi
65017271:	inc    esi
65017272:	test   WORD PTR [ebp-0x14],0x200
65017278:	mov    DWORD PTR [ebp-0x20],eax
6501727b:	mov    DWORD PTR [ebp-0x1c],esi
6501727e:	je     0x650172c4
65017280:	test   eax,eax
65017282:	je     0x6501728b
65017284:	mov    ecx,esi
65017286:	cmp    BYTE PTR [ecx],0x30
65017289:	je     0x650172c4
6501728b:	dec    DWORD PTR [ebp-0x1c]
6501728e:	mov    ecx,DWORD PTR [ebp-0x1c]
65017291:	mov    BYTE PTR [ecx],0x30
65017294:	inc    eax
65017295:	jmp    0x650172c1
65017297:	test   ebx,ebx
65017299:	jne    0x650172a3
6501729b:	mov    eax,ds:0x6502c954
650172a0:	mov    DWORD PTR [ebp-0x1c],eax
650172a3:	mov    eax,DWORD PTR [ebp-0x1c]
650172a6:	mov    DWORD PTR [ebp-0x34],0x1
650172ad:	jmp    0x650172b8
650172af:	dec    edi
650172b0:	cmp    WORD PTR [eax],0x0
650172b4:	je     0x650172bc
650172b6:	inc    eax
650172b7:	inc    eax
650172b8:	test   edi,edi
650172ba:	jne    0x650172af
650172bc:	sub    eax,DWORD PTR [ebp-0x1c]
650172bf:	sar    eax,1
650172c1:	mov    DWORD PTR [ebp-0x20],eax
650172c4:	cmp    DWORD PTR [ebp-0x48],0x0
650172c8:	jne    0x650173cd
650172ce:	mov    eax,DWORD PTR [ebp-0x14]
650172d1:	test   al,0x40
650172d3:	je     0x65017300
650172d5:	test   ax,0x100
650172d9:	je     0x650172e3
650172db:	mov    WORD PTR [ebp-0x44],0x2d
650172e1:	jmp    0x650172f9
650172e3:	test   al,0x1
650172e5:	je     0x650172ef
650172e7:	mov    WORD PTR [ebp-0x44],0x2b
650172ed:	jmp    0x650172f9
650172ef:	test   al,0x2
650172f1:	je     0x65017300
650172f3:	mov    WORD PTR [ebp-0x44],0x20
650172f9:	mov    DWORD PTR [ebp-0x30],0x1
65017300:	mov    ebx,DWORD PTR [ebp-0x38]
65017303:	mov    esi,DWORD PTR [ebp-0x20]
65017306:	sub    ebx,esi
65017308:	sub    ebx,DWORD PTR [ebp-0x30]
6501730b:	test   BYTE PTR [ebp-0x14],0xc
6501730f:	jne    0x65017322
65017311:	push   DWORD PTR [ebp-0x3c]
65017314:	lea    eax,[ebp-0x2c]
65017317:	push   ebx
65017318:	push   0x20
6501731a:	call   0x65016b25
6501731f:	add    esp,0xc
65017322:	push   DWORD PTR [ebp-0x30]
65017325:	mov    edi,DWORD PTR [ebp-0x3c]
65017328:	lea    eax,[ebp-0x2c]
6501732b:	lea    ecx,[ebp-0x44]
6501732e:	call   0x6501747f
65017333:	test   BYTE PTR [ebp-0x14],0x8
65017337:	pop    ecx
65017338:	je     0x6501734f
6501733a:	test   BYTE PTR [ebp-0x14],0x4
6501733e:	jne    0x6501734f
65017340:	push   edi
65017341:	push   ebx
65017342:	push   0x30
65017344:	lea    eax,[ebp-0x2c]
65017347:	call   0x65016b25
6501734c:	add    esp,0xc
6501734f:	cmp    DWORD PTR [ebp-0x34],0x0
65017353:	jne    0x650173a3
65017355:	test   esi,esi
65017357:	jle    0x650173a3
65017359:	mov    edi,DWORD PTR [ebp-0x1c]
6501735c:	mov    DWORD PTR [ebp-0x24],esi
6501735f:	dec    DWORD PTR [ebp-0x24]
65017362:	lea    eax,[ebp-0x64]
65017365:	push   eax
65017366:	mov    eax,DWORD PTR [ebp-0x64]
65017369:	push   DWORD PTR [eax+0xac]
6501736f:	lea    eax,[ebp-0x70]
65017372:	push   edi
65017373:	push   eax
65017374:	call   0x6501c94e
65017379:	add    esp,0x10
6501737c:	test   eax,eax
6501737e:	mov    DWORD PTR [ebp-0x7c],eax
65017381:	jle    0x6501739d
65017383:	push   DWORD PTR [ebp-0x70]
65017386:	mov    eax,DWORD PTR [ebp-0x3c]
65017389:	lea    esi,[ebp-0x2c]
6501738c:	call   0x6501745a
65017391:	add    edi,DWORD PTR [ebp-0x7c]
65017394:	cmp    DWORD PTR [ebp-0x24],0x0
65017398:	pop    ecx
65017399:	jg     0x6501735f
6501739b:	jmp    0x650173b0
6501739d:	or     DWORD PTR [ebp-0x2c],0xffffffff
650173a1:	jmp    0x650173b0
650173a3:	mov    ecx,DWORD PTR [ebp-0x1c]
650173a6:	push   esi
650173a7:	lea    eax,[ebp-0x2c]
650173aa:	call   0x6501747f
650173af:	pop    ecx
650173b0:	cmp    DWORD PTR [ebp-0x2c],0x0
650173b4:	jl     0x650173cd
650173b6:	test   BYTE PTR [ebp-0x14],0x4
650173ba:	je     0x650173cd
650173bc:	push   DWORD PTR [ebp-0x3c]
650173bf:	lea    eax,[ebp-0x2c]
650173c2:	push   ebx
650173c3:	push   0x20
650173c5:	call   0x65016b25
650173ca:	add    esp,0xc
650173cd:	cmp    DWORD PTR [ebp-0x50],0x0
650173d1:	je     0x650173e0
650173d3:	push   DWORD PTR [ebp-0x50]
650173d6:	call   0x65013746
650173db:	and    DWORD PTR [ebp-0x50],0x0
650173df:	pop    ecx
650173e0:	mov    esi,DWORD PTR [ebp-0x4c]
650173e3:	movzx  eax,WORD PTR [esi]
650173e6:	test   ax,ax
650173e9:	mov    DWORD PTR [ebp-0x24],eax
650173ec:	je     0x65017412
650173ee:	mov    ecx,DWORD PTR [ebp-0x68]
650173f1:	mov    ebx,DWORD PTR [ebp-0x28]
650173f4:	mov    edx,eax
650173f6:	jmp    0x65016bf5
650173fb:	call   0x65014580
65017400:	mov    DWORD PTR [eax],0x16
65017406:	xor    eax,eax
65017408:	push   eax
65017409:	push   eax
6501740a:	push   eax
6501740b:	push   eax
6501740c:	push   eax
6501740d:	jmp    0x65016bba
65017412:	cmp    BYTE PTR [ebp-0x58],0x0
65017416:	je     0x6501741f
65017418:	mov    eax,DWORD PTR [ebp-0x5c]
6501741b:	and    DWORD PTR [eax+0x70],0xfffffffd
6501741f:	mov    eax,DWORD PTR [ebp-0x2c]
65017422:	mov    ecx,DWORD PTR [ebp+0x3f0]
65017428:	pop    edi
65017429:	pop    esi
6501742a:	xor    ecx,ebp
6501742c:	pop    ebx
6501742d:	call   0x6501292c
65017432:	add    ebp,0x3f4
65017438:	leave  
65017439:	ret    
6501743a:	stc    
6501743b:	ins    DWORD PTR es:[edi],dx
6501743c:	add    DWORD PTR [ebp+0x41],esp
6501743f:	ins    BYTE PTR es:[edi],dx
65017440:	add    DWORD PTR [ebp+0x5e],esp
65017443:	ins    BYTE PTR es:[edi],dx
65017444:	add    DWORD PTR [ebp-0x54],esp
65017447:	ins    BYTE PTR es:[edi],dx
65017448:	add    DWORD PTR [ebp-0x19],esp
6501744b:	ins    BYTE PTR es:[edi],dx
6501744c:	add    DWORD PTR [ebp-0x10],esp
6501744f:	ins    BYTE PTR es:[edi],dx
65017450:	add    DWORD PTR [ebp+0x28],esp
65017453:	ins    DWORD PTR es:[edi],dx
65017454:	add    DWORD PTR [ebp+0x11],esp
65017457:	outs   dx,BYTE PTR ds:[esi]
65017458:	add    DWORD PTR [ebp-0xa],esp
6501745b:	inc    eax
6501745c:	or     al,0x40
6501745e:	je     0x65017466
65017460:	cmp    DWORD PTR [eax+0x8],0x0
65017464:	je     0x6501747c
65017466:	push   eax
65017467:	push   DWORD PTR [esp+0x8]
6501746b:	call   0x6501c75a
65017470:	cmp    ax,0xffff
65017474:	pop    ecx
65017475:	pop    ecx
65017476:	jne    0x6501747c
65017478:	or     DWORD PTR [esi],0xffffffff
6501747b:	ret    
6501747c:	inc    DWORD PTR [esi]
6501747e:	ret    
6501747f:	test   BYTE PTR [edi+0xc],0x40
65017483:	push   ebx
65017484:	push   esi
65017485:	mov    esi,eax
65017487:	mov    ebx,ecx
65017489:	je     0x650174c4
6501748b:	cmp    DWORD PTR [edi+0x8],0x0
6501748f:	jne    0x650174c4
65017491:	mov    eax,DWORD PTR [esp+0xc]
65017495:	add    DWORD PTR [esi],eax
65017497:	jmp    0x650174cb
65017499:	movzx  eax,WORD PTR [ebx]
6501749c:	dec    DWORD PTR [esp+0xc]
650174a0:	push   eax
650174a1:	mov    eax,edi
650174a3:	call   0x6501745a
650174a8:	inc    ebx
650174a9:	inc    ebx
650174aa:	cmp    DWORD PTR [esi],0xffffffff
650174ad:	pop    ecx
650174ae:	jne    0x650174c4
650174b0:	call   0x65014580
650174b5:	cmp    DWORD PTR [eax],0x2a
650174b8:	jne    0x650174cb
650174ba:	push   0x3f
650174bc:	mov    eax,edi
650174be:	call   0x6501745a
650174c3:	pop    ecx
650174c4:	cmp    DWORD PTR [esp+0xc],0x0
650174c9:	jg     0x65017499
650174cb:	pop    esi
650174cc:	pop    ebx
650174cd:	ret    
650174ce:	push   ebp
650174cf:	lea    ebp,[esp-0x3f4]
650174d6:	sub    esp,0x474
650174dc:	mov    eax,ds:0x6502c09c
650174e1:	xor    eax,ebp
650174e3:	mov    DWORD PTR [ebp+0x3f0],eax
650174e9:	push   ebx
650174ea:	mov    ebx,DWORD PTR [ebp+0x408]
650174f0:	push   esi
650174f1:	mov    esi,DWORD PTR [ebp+0x3fc]
650174f7:	xor    eax,eax
650174f9:	push   edi
650174fa:	push   DWORD PTR [ebp+0x404]
65017500:	mov    edi,DWORD PTR [ebp+0x400]
65017506:	lea    ecx,[ebp-0x58]
65017509:	mov    DWORD PTR [ebp-0x48],esi
6501750c:	mov    DWORD PTR [ebp-0x24],ebx
6501750f:	mov    DWORD PTR [ebp-0x60],eax
65017512:	mov    DWORD PTR [ebp-0x14],eax
65017515:	mov    DWORD PTR [ebp-0x38],eax
65017518:	mov    DWORD PTR [ebp-0x18],eax
6501751b:	mov    DWORD PTR [ebp-0x30],eax
6501751e:	mov    DWORD PTR [ebp-0x5c],eax
65017521:	mov    DWORD PTR [ebp-0x34],eax
65017524:	call   0x65012acf
65017529:	test   esi,esi
6501752b:	jne    0x6501755c
6501752d:	call   0x65014580
65017532:	mov    DWORD PTR [eax],0x16
65017538:	xor    eax,eax
6501753a:	push   eax
6501753b:	push   eax
6501753c:	push   eax
6501753d:	push   eax
6501753e:	push   eax
6501753f:	call   0x6501241f
65017544:	add    esp,0x14
65017547:	cmp    BYTE PTR [ebp-0x4c],0x0
6501754b:	je     0x65017554
6501754d:	mov    eax,DWORD PTR [ebp-0x50]
65017550:	and    DWORD PTR [eax+0x70],0xfffffffd
65017554:	or     eax,0xffffffff
65017557:	jmp    0x65017db2
6501755c:	xor    esi,esi
6501755e:	cmp    edi,esi
65017560:	jne    0x65017574
65017562:	call   0x65014580
65017567:	push   esi
65017568:	push   esi
65017569:	push   esi
6501756a:	push   esi
6501756b:	mov    DWORD PTR [eax],0x16
65017571:	push   esi
65017572:	jmp    0x6501753f
65017574:	movzx  ecx,WORD PTR [edi]
65017577:	cmp    cx,si
6501757a:	mov    DWORD PTR [ebp-0x2c],esi
6501757d:	mov    DWORD PTR [ebp-0x20],esi
65017580:	mov    DWORD PTR [ebp-0x40],esi
65017583:	mov    DWORD PTR [ebp-0x64],esi
65017586:	mov    DWORD PTR [ebp-0x28],ecx
65017589:	je     0x65017da2
6501758f:	push   0x2
65017591:	pop    esi
65017592:	add    edi,esi
65017594:	xor    eax,eax
65017596:	cmp    DWORD PTR [ebp-0x2c],eax
65017599:	mov    DWORD PTR [ebp-0x6c],edi
6501759c:	jl     0x65017d92
650175a2:	lea    edx,[ecx-0x20]
650175a5:	cmp    dx,0x58
650175a9:	ja     0x650175b8
650175ab:	movzx  eax,cx
650175ae:	movzx  eax,BYTE PTR [eax+0x65026488]
650175b5:	and    eax,0xf
650175b8:	mov    edx,DWORD PTR [ebp-0x40]
650175bb:	imul   eax,eax,0x9
650175be:	movzx  eax,BYTE PTR [eax+edx*1+0x650264a8]
650175c6:	push   0x8
650175c8:	shr    eax,0x4
650175cb:	pop    edx
650175cc:	cmp    eax,edx
650175ce:	mov    DWORD PTR [ebp-0x40],eax
650175d1:	je     0x6501752d
650175d7:	cmp    eax,0x7
650175da:	ja     0x65017d7a
650175e0:	jmp    DWORD PTR [eax*4+0x65017dca]
650175e7:	xor    eax,eax
650175e9:	or     DWORD PTR [ebp-0x18],0xffffffff
650175ed:	mov    DWORD PTR [ebp-0x68],eax
650175f0:	mov    DWORD PTR [ebp-0x5c],eax
650175f3:	mov    DWORD PTR [ebp-0x38],eax
650175f6:	mov    DWORD PTR [ebp-0x30],eax
650175f9:	mov    DWORD PTR [ebp-0x14],eax
650175fc:	mov    DWORD PTR [ebp-0x34],eax
650175ff:	jmp    0x65017d80
65017604:	movzx  eax,cx
65017607:	sub    eax,0x20
6501760a:	je     0x65017648
6501760c:	sub    eax,0x3
6501760f:	je     0x6501763c
65017611:	sub    eax,edx
65017613:	je     0x65017633
65017615:	sub    eax,esi
65017617:	je     0x6501762a
65017619:	sub    eax,0x3
6501761c:	jne    0x65017d7a
65017622:	or     DWORD PTR [ebp-0x14],edx
65017625:	jmp    0x65017d80
6501762a:	or     DWORD PTR [ebp-0x14],0x4
6501762e:	jmp    0x65017d80
65017633:	or     DWORD PTR [ebp-0x14],0x1
65017637:	jmp    0x65017d80
6501763c:	or     DWORD PTR [ebp-0x14],0x80
65017643:	jmp    0x65017d80
65017648:	or     DWORD PTR [ebp-0x14],esi
6501764b:	jmp    0x65017d80
65017650:	cmp    cx,0x2a
65017654:	jne    0x65017675
65017656:	mov    eax,DWORD PTR [ebx]
65017658:	add    ebx,0x4
6501765b:	test   eax,eax
6501765d:	mov    DWORD PTR [ebp-0x24],ebx
65017660:	mov    DWORD PTR [ebp-0x38],eax
65017663:	jge    0x65017d80
65017669:	or     DWORD PTR [ebp-0x14],0x4
6501766d:	neg    DWORD PTR [ebp-0x38]
65017670:	jmp    0x65017d80
65017675:	mov    eax,DWORD PTR [ebp-0x38]
65017678:	imul   eax,eax,0xa
6501767b:	movzx  ecx,cx
6501767e:	lea    eax,[eax+ecx*1-0x30]
65017682:	mov    DWORD PTR [ebp-0x38],eax
65017685:	jmp    0x65017d80
6501768a:	and    DWORD PTR [ebp-0x18],0x0
6501768e:	jmp    0x65017d80
65017693:	cmp    cx,0x2a
65017697:	jne    0x650176b5
65017699:	mov    eax,DWORD PTR [ebx]
6501769b:	add    ebx,0x4
6501769e:	test   eax,eax
650176a0:	mov    DWORD PTR [ebp-0x24],ebx
650176a3:	mov    DWORD PTR [ebp-0x18],eax
650176a6:	jge    0x65017d80
650176ac:	or     DWORD PTR [ebp-0x18],0xffffffff
650176b0:	jmp    0x65017d80
650176b5:	mov    eax,DWORD PTR [ebp-0x18]
650176b8:	imul   eax,eax,0xa
650176bb:	movzx  ecx,cx
650176be:	lea    eax,[eax+ecx*1-0x30]
650176c2:	mov    DWORD PTR [ebp-0x18],eax
650176c5:	jmp    0x65017d80
650176ca:	movzx  eax,cx
650176cd:	cmp    eax,0x49
650176d0:	je     0x65017717
650176d2:	cmp    eax,0x68
650176d5:	je     0x6501770e
650176d7:	cmp    eax,0x6c
650176da:	je     0x650176f1
650176dc:	cmp    eax,0x77
650176df:	jne    0x65017d80
650176e5:	or     DWORD PTR [ebp-0x14],0x800
650176ec:	jmp    0x65017d80
650176f1:	cmp    WORD PTR [edi],0x6c
650176f5:	jne    0x65017705
650176f7:	add    edi,esi
650176f9:	or     DWORD PTR [ebp-0x14],0x1000
65017700:	jmp    0x65017d80
65017705:	or     DWORD PTR [ebp-0x14],0x10
65017709:	jmp    0x65017d80
6501770e:	or     DWORD PTR [ebp-0x14],0x20
65017712:	jmp    0x65017d80
65017717:	movzx  eax,WORD PTR [edi]
6501771a:	cmp    ax,0x36
6501771e:	jne    0x65017736
65017720:	cmp    WORD PTR [edi+0x2],0x34
65017725:	jne    0x65017736
65017727:	add    edi,0x4
6501772a:	or     DWORD PTR [ebp-0x14],0x8000
65017731:	jmp    0x65017d80
65017736:	cmp    ax,0x33
6501773a:	jne    0x65017752
6501773c:	cmp    WORD PTR [edi+0x2],0x32
65017741:	jne    0x65017752
65017743:	add    edi,0x4
65017746:	and    DWORD PTR [ebp-0x14],0xffff7fff
6501774d:	jmp    0x65017d80
65017752:	cmp    ax,0x64
65017756:	je     0x65017d80
6501775c:	cmp    ax,0x69
65017760:	je     0x65017d80
65017766:	cmp    ax,0x6f
6501776a:	je     0x65017d80
65017770:	cmp    ax,0x75
65017774:	je     0x65017d80
6501777a:	cmp    ax,0x78
6501777e:	je     0x65017d80
65017784:	cmp    ax,0x58
65017788:	je     0x65017d80
6501778e:	and    DWORD PTR [ebp-0x40],0x0
65017792:	mov    eax,DWORD PTR [ebp-0x48]
65017795:	push   ecx
65017796:	lea    esi,[ebp-0x2c]
65017799:	mov    DWORD PTR [ebp-0x34],0x1
650177a0:	call   0x6501745a
650177a5:	pop    ecx
650177a6:	jmp    0x65017d80
650177ab:	movzx  eax,cx
650177ae:	cmp    eax,0x64
650177b1:	jg     0x6501795f
650177b7:	je     0x650179da
650177bd:	cmp    eax,0x53
650177c0:	jg     0x6501789d
650177c6:	je     0x65017827
650177c8:	sub    eax,0x41
650177cb:	je     0x650177dd
650177cd:	sub    eax,esi
650177cf:	je     0x65017812
650177d1:	sub    eax,esi
650177d3:	je     0x650177dd
650177d5:	sub    eax,esi
650177d7:	jne    0x65017c5e
650177dd:	add    ecx,0x20
650177e0:	mov    DWORD PTR [ebp-0x68],0x1
650177e7:	mov    DWORD PTR [ebp-0x28],ecx
650177ea:	or     DWORD PTR [ebp-0x14],0x40
650177ee:	cmp    DWORD PTR [ebp-0x18],0x0
650177f2:	lea    esi,[ebp-0x10]
650177f5:	mov    eax,0x200
650177fa:	mov    DWORD PTR [ebp-0x1c],esi
650177fd:	mov    DWORD PTR [ebp-0x20],eax
65017800:	jge    0x650179fe
65017806:	mov    DWORD PTR [ebp-0x18],0x6
6501780d:	jmp    0x65017a4e
65017812:	test   WORD PTR [ebp-0x14],0x830
65017818:	jne    0x650178bb
6501781e:	or     DWORD PTR [ebp-0x14],0x20
65017822:	jmp    0x650178bb
65017827:	test   WORD PTR [ebp-0x14],0x830
6501782d:	jne    0x65017833
6501782f:	or     DWORD PTR [ebp-0x14],0x20
65017833:	mov    edi,DWORD PTR [ebp-0x18]
65017836:	cmp    edi,0xffffffff
65017839:	jne    0x65017840
6501783b:	mov    edi,0x7fffffff
65017840:	add    ebx,0x4
65017843:	test   BYTE PTR [ebp-0x14],0x20
65017847:	mov    DWORD PTR [ebp-0x24],ebx
6501784a:	mov    ebx,DWORD PTR [ebx-0x4]
6501784d:	mov    DWORD PTR [ebp-0x1c],ebx
65017850:	je     0x65017c31
65017856:	test   ebx,ebx
65017858:	jne    0x65017862
6501785a:	mov    eax,ds:0x6502c950
6501785f:	mov    DWORD PTR [ebp-0x1c],eax
65017862:	and    DWORD PTR [ebp-0x20],0x0
65017866:	test   edi,edi
65017868:	mov    esi,DWORD PTR [ebp-0x1c]
6501786b:	jle    0x65017c5e
65017871:	mov    al,BYTE PTR [esi]
65017873:	test   al,al
65017875:	je     0x65017c5e
6501787b:	lea    ecx,[ebp-0x58]
6501787e:	movzx  eax,al
65017881:	push   ecx
65017882:	push   eax
65017883:	call   0x65019c5f
65017888:	test   eax,eax
6501788a:	pop    ecx
6501788b:	pop    ecx
6501788c:	je     0x6501788f
6501788e:	inc    esi
6501788f:	inc    esi
65017890:	inc    DWORD PTR [ebp-0x20]
65017893:	cmp    DWORD PTR [ebp-0x20],edi
65017896:	jl     0x65017871
65017898:	jmp    0x65017c5e
6501789d:	sub    eax,0x58
650178a0:	je     0x65017ae5
650178a6:	sub    eax,esi
650178a8:	je     0x65017912
650178aa:	sub    eax,0x7
650178ad:	je     0x650177ea
650178b3:	sub    eax,esi
650178b5:	jne    0x65017c5e
650178bb:	movzx  eax,WORD PTR [ebx]
650178be:	add    ebx,0x4
650178c1:	xor    esi,esi
650178c3:	inc    esi
650178c4:	test   BYTE PTR [ebp-0x14],0x20
650178c8:	mov    DWORD PTR [ebp-0x34],esi
650178cb:	mov    DWORD PTR [ebp-0x24],ebx
650178ce:	mov    DWORD PTR [ebp-0x70],eax
650178d1:	je     0x65017900
650178d3:	mov    BYTE PTR [ebp-0x44],al
650178d6:	lea    eax,[ebp-0x58]
650178d9:	push   eax
650178da:	mov    eax,DWORD PTR [ebp-0x58]
650178dd:	mov    BYTE PTR [ebp-0x43],0x0
650178e1:	push   DWORD PTR [eax+0xac]
650178e7:	lea    eax,[ebp-0x44]
650178ea:	push   eax
650178eb:	lea    eax,[ebp-0x10]
650178ee:	push   eax
650178ef:	call   0x6501c94e
650178f4:	add    esp,0x10
650178f7:	test   eax,eax
650178f9:	jge    0x65017904
650178fb:	mov    DWORD PTR [ebp-0x5c],esi
650178fe:	jmp    0x65017904
65017900:	mov    WORD PTR [ebp-0x10],ax
65017904:	lea    eax,[ebp-0x10]
65017907:	mov    DWORD PTR [ebp-0x1c],eax
6501790a:	mov    DWORD PTR [ebp-0x20],esi
6501790d:	jmp    0x65017c5e
65017912:	mov    eax,DWORD PTR [ebx]
65017914:	add    ebx,0x4
65017917:	test   eax,eax
65017919:	mov    DWORD PTR [ebp-0x24],ebx
6501791c:	je     0x6501794b
6501791e:	mov    ecx,DWORD PTR [eax+0x4]
65017921:	test   ecx,ecx
65017923:	je     0x6501794b
65017925:	test   WORD PTR [ebp-0x14],0x800
6501792b:	movsx  eax,WORD PTR [eax]
6501792e:	mov    DWORD PTR [ebp-0x1c],ecx
65017931:	je     0x65017942
65017933:	cdq    
65017934:	sub    eax,edx
65017936:	mov    DWORD PTR [ebp-0x34],0x1
6501793d:	jmp    0x65017c59
65017942:	and    DWORD PTR [ebp-0x34],0x0
65017946:	jmp    0x65017c5b
6501794b:	mov    eax,ds:0x6502c950
65017950:	mov    DWORD PTR [ebp-0x1c],eax
65017953:	push   eax
65017954:	call   0x65014080
65017959:	pop    ecx
6501795a:	jmp    0x65017c5b
6501795f:	cmp    eax,0x70
65017962:	jg     0x65017aee
65017968:	je     0x65017ae2
6501796e:	cmp    eax,0x65
65017971:	jl     0x65017c5e
65017977:	cmp    eax,0x67
6501797a:	jle    0x650177ea
65017980:	cmp    eax,0x69
65017983:	je     0x650179da
65017985:	cmp    eax,0x6e
65017988:	je     0x650179a5
6501798a:	cmp    eax,0x6f
6501798d:	jne    0x65017c5e
65017993:	test   BYTE PTR [ebp-0x14],0x80
65017997:	mov    DWORD PTR [ebp-0x28],edx
6501799a:	je     0x650179e5
6501799c:	or     DWORD PTR [ebp-0x14],0x200
650179a3:	jmp    0x650179e5
650179a5:	mov    esi,DWORD PTR [ebx]
650179a7:	add    ebx,0x4
650179aa:	mov    DWORD PTR [ebp-0x24],ebx
650179ad:	call   0x6501c938
650179b2:	test   eax,eax
650179b4:	je     0x6501752d
650179ba:	test   BYTE PTR [ebp-0x14],0x20
650179be:	je     0x650179c9
650179c0:	mov    ax,WORD PTR [ebp-0x2c]
650179c4:	mov    WORD PTR [esi],ax
650179c7:	jmp    0x650179ce
650179c9:	mov    eax,DWORD PTR [ebp-0x2c]
650179cc:	mov    DWORD PTR [esi],eax
650179ce:	mov    DWORD PTR [ebp-0x5c],0x1
650179d5:	jmp    0x65017d67
650179da:	or     DWORD PTR [ebp-0x14],0x40
650179de:	mov    DWORD PTR [ebp-0x28],0xa
650179e5:	test   WORD PTR [ebp-0x14],0x8000
650179eb:	je     0x65017b38
650179f1:	add    ebx,edx
650179f3:	mov    eax,DWORD PTR [ebx-0x8]
650179f6:	mov    edx,DWORD PTR [ebx-0x4]
650179f9:	jmp    0x65017b71
650179fe:	jne    0x65017a0f
65017a00:	cmp    cx,0x67
65017a04:	jne    0x65017a4e
65017a06:	mov    DWORD PTR [ebp-0x18],0x1
65017a0d:	jmp    0x65017a4e
65017a0f:	cmp    DWORD PTR [ebp-0x18],eax
65017a12:	jle    0x65017a17
65017a14:	mov    DWORD PTR [ebp-0x18],eax
65017a17:	cmp    DWORD PTR [ebp-0x18],0xa3
65017a1e:	jle    0x65017a4e
65017a20:	mov    edi,DWORD PTR [ebp-0x18]
65017a23:	add    edi,0x15d
65017a29:	push   edi
65017a2a:	call   0x65015b90
65017a2f:	test   eax,eax
65017a31:	pop    ecx
65017a32:	mov    ecx,DWORD PTR [ebp-0x28]
65017a35:	push   0x8
65017a37:	mov    DWORD PTR [ebp-0x64],eax
65017a3a:	pop    edx
65017a3b:	je     0x65017a47
65017a3d:	mov    DWORD PTR [ebp-0x1c],eax
65017a40:	mov    DWORD PTR [ebp-0x20],edi
65017a43:	mov    esi,eax
65017a45:	jmp    0x65017a4e
65017a47:	mov    DWORD PTR [ebp-0x18],0xa3
65017a4e:	add    ebx,edx
65017a50:	mov    eax,DWORD PTR [ebx-0x8]
65017a53:	mov    DWORD PTR [ebp-0x78],eax
65017a56:	mov    eax,DWORD PTR [ebx-0x4]
65017a59:	mov    DWORD PTR [ebp-0x74],eax
65017a5c:	lea    eax,[ebp-0x58]
65017a5f:	push   eax
65017a60:	push   DWORD PTR [ebp-0x68]
65017a63:	movsx  eax,cl
65017a66:	push   DWORD PTR [ebp-0x18]
65017a69:	mov    DWORD PTR [ebp-0x24],ebx
65017a6c:	push   eax
65017a6d:	push   DWORD PTR [ebp-0x20]
65017a70:	lea    eax,[ebp-0x78]
65017a73:	push   esi
65017a74:	push   eax
65017a75:	push   DWORD PTR ds:0x6502cb5c
65017a7b:	call   0x650146af
65017a80:	pop    ecx
65017a81:	call   eax
65017a83:	mov    ebx,DWORD PTR [ebp-0x14]
65017a86:	add    esp,0x1c
65017a89:	and    ebx,0x80
65017a8f:	je     0x65017aac
65017a91:	cmp    DWORD PTR [ebp-0x18],0x0
65017a95:	jne    0x65017aac
65017a97:	lea    eax,[ebp-0x58]
65017a9a:	push   eax
65017a9b:	push   esi
65017a9c:	push   DWORD PTR ds:0x6502cb68
65017aa2:	call   0x650146af
65017aa7:	pop    ecx
65017aa8:	call   eax
65017aaa:	pop    ecx
65017aab:	pop    ecx
65017aac:	cmp    WORD PTR [ebp-0x28],0x67
65017ab1:	jne    0x65017acc
65017ab3:	test   ebx,ebx
65017ab5:	jne    0x65017acc
65017ab7:	lea    eax,[ebp-0x58]
65017aba:	push   eax
65017abb:	push   esi
65017abc:	push   DWORD PTR ds:0x6502cb64
65017ac2:	call   0x650146af
65017ac7:	pop    ecx
65017ac8:	call   eax
65017aca:	pop    ecx
65017acb:	pop    ecx
65017acc:	cmp    BYTE PTR [esi],0x2d
65017acf:	jne    0x65017adc
65017ad1:	or     DWORD PTR [ebp-0x14],0x100
65017ad8:	inc    esi
65017ad9:	mov    DWORD PTR [ebp-0x1c],esi
65017adc:	push   esi
65017add:	jmp    0x65017954
65017ae2:	mov    DWORD PTR [ebp-0x18],edx
65017ae5:	mov    DWORD PTR [ebp-0x60],0x7
65017aec:	jmp    0x65017b0f
65017aee:	sub    eax,0x73
65017af1:	je     0x65017833
65017af7:	sub    eax,esi
65017af9:	je     0x650179de
65017aff:	sub    eax,0x3
65017b02:	jne    0x65017c5e
65017b08:	mov    DWORD PTR [ebp-0x60],0x27
65017b0f:	test   BYTE PTR [ebp-0x14],0x80
65017b13:	mov    DWORD PTR [ebp-0x28],0x10
65017b1a:	je     0x650179e5
65017b20:	mov    eax,DWORD PTR [ebp-0x60]
65017b23:	add    eax,0x51
65017b26:	mov    WORD PTR [ebp-0x3c],0x30
65017b2c:	mov    WORD PTR [ebp-0x3a],ax
65017b30:	mov    DWORD PTR [ebp-0x30],esi
65017b33:	jmp    0x650179e5
65017b38:	test   WORD PTR [ebp-0x14],0x1000
65017b3e:	jne    0x650179f1
65017b44:	add    ebx,0x4
65017b47:	test   BYTE PTR [ebp-0x14],0x20
65017b4b:	je     0x65017b63
65017b4d:	test   BYTE PTR [ebp-0x14],0x40
65017b51:	mov    DWORD PTR [ebp-0x24],ebx
65017b54:	je     0x65017b5c
65017b56:	movsx  eax,WORD PTR [ebx-0x4]
65017b5a:	jmp    0x65017b60
65017b5c:	movzx  eax,WORD PTR [ebx-0x4]
65017b60:	cdq    
65017b61:	jmp    0x65017b74
65017b63:	test   BYTE PTR [ebp-0x14],0x40
65017b67:	mov    eax,DWORD PTR [ebx-0x4]
65017b6a:	je     0x65017b6f
65017b6c:	cdq    
65017b6d:	jmp    0x65017b71
65017b6f:	xor    edx,edx
65017b71:	mov    DWORD PTR [ebp-0x24],ebx
65017b74:	test   BYTE PTR [ebp-0x14],0x40
65017b78:	je     0x65017b92
65017b7a:	test   edx,edx
65017b7c:	jg     0x65017b92
65017b7e:	jl     0x65017b84
65017b80:	test   eax,eax
65017b82:	jae    0x65017b92
65017b84:	neg    eax
65017b86:	adc    edx,0x0
65017b89:	neg    edx
65017b8b:	or     DWORD PTR [ebp-0x14],0x100
65017b92:	test   WORD PTR [ebp-0x14],0x9000
65017b98:	mov    ebx,edx
65017b9a:	mov    edi,eax
65017b9c:	jne    0x65017ba0
65017b9e:	xor    ebx,ebx
65017ba0:	cmp    DWORD PTR [ebp-0x18],0x0
65017ba4:	jge    0x65017baf
65017ba6:	mov    DWORD PTR [ebp-0x18],0x1
65017bad:	jmp    0x65017bc0
65017baf:	and    DWORD PTR [ebp-0x14],0xfffffff7
65017bb3:	mov    eax,0x200
65017bb8:	cmp    DWORD PTR [ebp-0x18],eax
65017bbb:	jle    0x65017bc0
65017bbd:	mov    DWORD PTR [ebp-0x18],eax
65017bc0:	mov    eax,edi
65017bc2:	or     eax,ebx
65017bc4:	jne    0x65017bc9
65017bc6:	and    DWORD PTR [ebp-0x30],eax
65017bc9:	lea    esi,[ebp+0x1ef]
65017bcf:	mov    eax,DWORD PTR [ebp-0x18]
65017bd2:	dec    DWORD PTR [ebp-0x18]
65017bd5:	test   eax,eax
65017bd7:	jg     0x65017bdf
65017bd9:	mov    eax,edi
65017bdb:	or     eax,ebx
65017bdd:	je     0x65017c03
65017bdf:	mov    eax,DWORD PTR [ebp-0x28]
65017be2:	cdq    
65017be3:	push   edx
65017be4:	push   eax
65017be5:	push   ebx
65017be6:	push   edi
65017be7:	call   0x65018c60
65017bec:	add    ecx,0x30
65017bef:	cmp    ecx,0x39
65017bf2:	mov    DWORD PTR [ebp-0x7c],ebx
65017bf5:	mov    edi,eax
65017bf7:	mov    ebx,edx
65017bf9:	jle    0x65017bfe
65017bfb:	add    ecx,DWORD PTR [ebp-0x60]
65017bfe:	mov    BYTE PTR [esi],cl
65017c00:	dec    esi
65017c01:	jmp    0x65017bcf
65017c03:	lea    eax,[ebp+0x1ef]
65017c09:	sub    eax,esi
65017c0b:	inc    esi
65017c0c:	test   WORD PTR [ebp-0x14],0x200
65017c12:	mov    DWORD PTR [ebp-0x20],eax
65017c15:	mov    DWORD PTR [ebp-0x1c],esi
65017c18:	je     0x65017c5e
65017c1a:	test   eax,eax
65017c1c:	je     0x65017c25
65017c1e:	mov    ecx,esi
65017c20:	cmp    BYTE PTR [ecx],0x30
65017c23:	je     0x65017c5e
65017c25:	dec    DWORD PTR [ebp-0x1c]
65017c28:	mov    ecx,DWORD PTR [ebp-0x1c]
65017c2b:	mov    BYTE PTR [ecx],0x30
65017c2e:	inc    eax
65017c2f:	jmp    0x65017c5b
65017c31:	test   ebx,ebx
65017c33:	jne    0x65017c3d
65017c35:	mov    eax,ds:0x6502c954
65017c3a:	mov    DWORD PTR [ebp-0x1c],eax
65017c3d:	mov    eax,DWORD PTR [ebp-0x1c]
65017c40:	mov    DWORD PTR [ebp-0x34],0x1
65017c47:	jmp    0x65017c52
65017c49:	dec    edi
65017c4a:	cmp    WORD PTR [eax],0x0
65017c4e:	je     0x65017c56
65017c50:	add    eax,esi
65017c52:	test   edi,edi
65017c54:	jne    0x65017c49
65017c56:	sub    eax,DWORD PTR [ebp-0x1c]
65017c59:	sar    eax,1
65017c5b:	mov    DWORD PTR [ebp-0x20],eax
65017c5e:	cmp    DWORD PTR [ebp-0x5c],0x0
65017c62:	jne    0x65017d67
65017c68:	mov    eax,DWORD PTR [ebp-0x14]
65017c6b:	test   al,0x40
65017c6d:	je     0x65017c9a
65017c6f:	test   ax,0x100
65017c73:	je     0x65017c7d
65017c75:	mov    WORD PTR [ebp-0x3c],0x2d
65017c7b:	jmp    0x65017c93
65017c7d:	test   al,0x1
65017c7f:	je     0x65017c89
65017c81:	mov    WORD PTR [ebp-0x3c],0x2b
65017c87:	jmp    0x65017c93
65017c89:	test   al,0x2
65017c8b:	je     0x65017c9a
65017c8d:	mov    WORD PTR [ebp-0x3c],0x20
65017c93:	mov    DWORD PTR [ebp-0x30],0x1
65017c9a:	mov    ebx,DWORD PTR [ebp-0x38]
65017c9d:	mov    esi,DWORD PTR [ebp-0x20]
65017ca0:	sub    ebx,esi
65017ca2:	sub    ebx,DWORD PTR [ebp-0x30]
65017ca5:	test   BYTE PTR [ebp-0x14],0xc
65017ca9:	jne    0x65017cbc
65017cab:	push   DWORD PTR [ebp-0x48]
65017cae:	lea    eax,[ebp-0x2c]
65017cb1:	push   ebx
65017cb2:	push   0x20
65017cb4:	call   0x65016b25
65017cb9:	add    esp,0xc
65017cbc:	push   DWORD PTR [ebp-0x30]
65017cbf:	mov    edi,DWORD PTR [ebp-0x48]
65017cc2:	lea    eax,[ebp-0x2c]
65017cc5:	lea    ecx,[ebp-0x3c]
65017cc8:	call   0x6501747f
65017ccd:	test   BYTE PTR [ebp-0x14],0x8
65017cd1:	pop    ecx
65017cd2:	je     0x65017ce9
65017cd4:	test   BYTE PTR [ebp-0x14],0x4
65017cd8:	jne    0x65017ce9
65017cda:	push   edi
65017cdb:	push   ebx
65017cdc:	push   0x30
65017cde:	lea    eax,[ebp-0x2c]
65017ce1:	call   0x65016b25
65017ce6:	add    esp,0xc
65017ce9:	cmp    DWORD PTR [ebp-0x34],0x0
65017ced:	jne    0x65017d3d
65017cef:	test   esi,esi
65017cf1:	jle    0x65017d3d
65017cf3:	mov    edi,DWORD PTR [ebp-0x1c]
65017cf6:	mov    DWORD PTR [ebp-0x28],esi
65017cf9:	dec    DWORD PTR [ebp-0x28]
65017cfc:	lea    eax,[ebp-0x58]
65017cff:	push   eax
65017d00:	mov    eax,DWORD PTR [ebp-0x58]
65017d03:	push   DWORD PTR [eax+0xac]
65017d09:	lea    eax,[ebp-0x70]
65017d0c:	push   edi
65017d0d:	push   eax
65017d0e:	call   0x6501c94e
65017d13:	add    esp,0x10
65017d16:	test   eax,eax
65017d18:	mov    DWORD PTR [ebp-0x7c],eax
65017d1b:	jle    0x65017d37
65017d1d:	push   DWORD PTR [ebp-0x70]
65017d20:	mov    eax,DWORD PTR [ebp-0x48]
65017d23:	lea    esi,[ebp-0x2c]
65017d26:	call   0x6501745a
65017d2b:	add    edi,DWORD PTR [ebp-0x7c]
65017d2e:	cmp    DWORD PTR [ebp-0x28],0x0
65017d32:	pop    ecx
65017d33:	jg     0x65017cf9
65017d35:	jmp    0x65017d4a
65017d37:	or     DWORD PTR [ebp-0x2c],0xffffffff
65017d3b:	jmp    0x65017d4a
65017d3d:	mov    ecx,DWORD PTR [ebp-0x1c]
65017d40:	push   esi
65017d41:	lea    eax,[ebp-0x2c]
65017d44:	call   0x6501747f
65017d49:	pop    ecx
65017d4a:	cmp    DWORD PTR [ebp-0x2c],0x0
65017d4e:	jl     0x65017d67
65017d50:	test   BYTE PTR [ebp-0x14],0x4
65017d54:	je     0x65017d67
65017d56:	push   DWORD PTR [ebp-0x48]
65017d59:	lea    eax,[ebp-0x2c]
65017d5c:	push   ebx
65017d5d:	push   0x20
65017d5f:	call   0x65016b25
65017d64:	add    esp,0xc
65017d67:	cmp    DWORD PTR [ebp-0x64],0x0
65017d6b:	je     0x65017d7a
65017d6d:	push   DWORD PTR [ebp-0x64]
65017d70:	call   0x65013746
65017d75:	and    DWORD PTR [ebp-0x64],0x0
65017d79:	pop    ecx
65017d7a:	mov    edi,DWORD PTR [ebp-0x6c]
65017d7d:	mov    ebx,DWORD PTR [ebp-0x24]
65017d80:	movzx  eax,WORD PTR [edi]
65017d83:	test   ax,ax
65017d86:	mov    DWORD PTR [ebp-0x28],eax
65017d89:	je     0x65017d92
65017d8b:	mov    ecx,eax
65017d8d:	jmp    0x6501758f
65017d92:	cmp    DWORD PTR [ebp-0x40],0x0
65017d96:	je     0x65017da2
65017d98:	cmp    DWORD PTR [ebp-0x40],0x7
65017d9c:	jne    0x6501752d
65017da2:	cmp    BYTE PTR [ebp-0x4c],0x0
65017da6:	je     0x65017daf
65017da8:	mov    eax,DWORD PTR [ebp-0x50]
65017dab:	and    DWORD PTR [eax+0x70],0xfffffffd
65017daf:	mov    eax,DWORD PTR [ebp-0x2c]
65017db2:	mov    ecx,DWORD PTR [ebp+0x3f0]
65017db8:	pop    edi
65017db9:	pop    esi
65017dba:	xor    ecx,ebp
65017dbc:	pop    ebx
65017dbd:	call   0x6501292c
65017dc2:	add    ebp,0x3f4
65017dc8:	leave  
65017dc9:	ret    
65017dca:	xchg   edx,eax
65017dcb:	ja     0x65017dce
65017dcd:	gs out 0x75,eax
65017dd0:	add    DWORD PTR [ebp+0x4],esp
65017dd3:	jbe    0x65017dd6
65017dd5:	gs push eax
65017dd7:	jbe    0x65017dda
65017dd9:	mov    dh,BYTE PTR gs:[esi+0x1]
65017ddd:	gs xchg ebx,eax
65017ddf:	jbe    0x65017de2
65017de1:	gs retf 0x176
65017de5:	gs stos DWORD PTR es:[edi],eax
65017de7:	ja     0x65017dea
65017de9:	gs push ebp
65017deb:	mov    ebp,esp
65017ded:	sub    esp,0x10
65017df0:	mov    eax,ds:0x6502c09c
65017df5:	xor    eax,ebp
65017df7:	mov    DWORD PTR [ebp-0x4],eax
65017dfa:	push   ebx
65017dfb:	push   esi
65017dfc:	mov    esi,DWORD PTR ds:0x65024144
65017e02:	xor    ebx,ebx
65017e04:	cmp    DWORD PTR ds:0x6502d978,ebx
65017e0a:	push   edi
65017e0b:	mov    edi,ecx
65017e0d:	jne    0x65017e45
65017e0f:	push   ebx
65017e10:	push   ebx
65017e11:	push   0x1
65017e13:	push   0x650266d8
65017e18:	push   0x100
65017e1d:	push   ebx
65017e1e:	call   esi
65017e20:	test   eax,eax
65017e22:	je     0x65017e30
65017e24:	mov    DWORD PTR ds:0x6502d978,0x1
65017e2e:	jmp    0x65017e45
65017e30:	call   DWORD PTR ds:0x6502403c
65017e36:	cmp    eax,0x78
65017e39:	jne    0x65017e45
65017e3b:	mov    DWORD PTR ds:0x6502d978,0x2
65017e45:	cmp    DWORD PTR [ebp+0x14],ebx
65017e48:	jle    0x65017e67
65017e4a:	mov    ecx,DWORD PTR [ebp+0x14]
65017e4d:	mov    eax,DWORD PTR [ebp+0x10]
65017e50:	dec    ecx
65017e51:	cmp    WORD PTR [eax],bx
65017e54:	je     0x65017e5f
65017e56:	inc    eax
65017e57:	inc    eax
65017e58:	cmp    ecx,ebx
65017e5a:	jne    0x65017e50
65017e5c:	or     ecx,0xffffffff
65017e5f:	or     eax,0xffffffff
65017e62:	sub    eax,ecx
65017e64:	add    DWORD PTR [ebp+0x14],eax
65017e67:	mov    eax,ds:0x6502d978
65017e6c:	cmp    eax,0x1
65017e6f:	jne    0x65017e8a
65017e71:	push   DWORD PTR [ebp+0x1c]
65017e74:	push   DWORD PTR [ebp+0x18]
65017e77:	push   DWORD PTR [ebp+0x14]
65017e7a:	push   DWORD PTR [ebp+0x10]
65017e7d:	push   DWORD PTR [ebp+0xc]
65017e80:	push   DWORD PTR [ebp+0x8]
65017e83:	call   esi
65017e85:	jmp    0x65018039
65017e8a:	cmp    eax,0x2
65017e8d:	je     0x65017e93
65017e8f:	cmp    eax,ebx
65017e91:	jne    0x65017ee5
65017e93:	cmp    DWORD PTR [ebp+0x8],ebx
65017e96:	mov    DWORD PTR [ebp-0xc],ebx
65017e99:	jne    0x65017ea3
65017e9b:	mov    eax,DWORD PTR [edi]
65017e9d:	mov    eax,DWORD PTR [eax+0x14]
65017ea0:	mov    DWORD PTR [ebp+0x8],eax
65017ea3:	cmp    DWORD PTR [ebp+0x20],ebx
65017ea6:	jne    0x65017eb0
65017ea8:	mov    eax,DWORD PTR [edi]
65017eaa:	mov    eax,DWORD PTR [eax+0x4]
65017ead:	mov    DWORD PTR [ebp+0x20],eax
65017eb0:	push   DWORD PTR [ebp+0x8]
65017eb3:	call   0x6501d428
65017eb8:	cmp    DWORD PTR [ebp+0x20],eax
65017ebb:	pop    ecx
65017ebc:	je     0x65017ec6
65017ebe:	cmp    eax,0xffffffff
65017ec1:	je     0x65017ec6
65017ec3:	mov    DWORD PTR [ebp+0x20],eax
65017ec6:	mov    esi,DWORD PTR ds:0x65024020
65017ecc:	push   ebx
65017ecd:	push   ebx
65017ece:	push   ebx
65017ecf:	push   ebx
65017ed0:	push   DWORD PTR [ebp+0x14]
65017ed3:	push   DWORD PTR [ebp+0x10]
65017ed6:	push   ebx
65017ed7:	push   DWORD PTR [ebp+0x20]
65017eda:	call   esi
65017edc:	mov    edi,eax
65017ede:	cmp    edi,ebx
65017ee0:	mov    DWORD PTR [ebp-0x10],edi
65017ee3:	jne    0x65017eec
65017ee5:	xor    eax,eax
65017ee7:	jmp    0x65018039
65017eec:	jle    0x65017f30
65017eee:	push   0xffffffe0
65017ef0:	xor    edx,edx
65017ef2:	pop    eax
65017ef3:	div    edi
65017ef5:	cmp    eax,0x1
65017ef8:	jb     0x65017f30
65017efa:	lea    eax,[edi+0x8]
65017efd:	cmp    eax,0x400
65017f02:	ja     0x65017f17
65017f04:	call   0x65013030
65017f09:	mov    eax,esp
65017f0b:	cmp    eax,ebx
65017f0d:	je     0x65017f2b
65017f0f:	mov    DWORD PTR [eax],0xcccc
65017f15:	jmp    0x65017f28
65017f17:	push   eax
65017f18:	call   0x65013823
65017f1d:	cmp    eax,ebx
65017f1f:	pop    ecx
65017f20:	je     0x65017f2b
65017f22:	mov    DWORD PTR [eax],0xdddd
65017f28:	add    eax,0x8
65017f2b:	mov    DWORD PTR [ebp-0x8],eax
65017f2e:	jmp    0x65017f33
65017f30:	mov    DWORD PTR [ebp-0x8],ebx
65017f33:	cmp    DWORD PTR [ebp-0x8],ebx
65017f36:	je     0x65017ee5
65017f38:	push   ebx
65017f39:	push   ebx
65017f3a:	push   edi
65017f3b:	push   DWORD PTR [ebp-0x8]
65017f3e:	push   DWORD PTR [ebp+0x14]
65017f41:	push   DWORD PTR [ebp+0x10]
65017f44:	push   ebx
65017f45:	push   DWORD PTR [ebp+0x20]
65017f48:	call   esi
65017f4a:	test   eax,eax
65017f4c:	je     0x6501802d
65017f52:	push   ebx
65017f53:	push   ebx
65017f54:	push   edi
65017f55:	push   DWORD PTR [ebp-0x8]
65017f58:	mov    edi,DWORD PTR ds:0x65024140
65017f5e:	push   DWORD PTR [ebp+0xc]
65017f61:	push   DWORD PTR [ebp+0x8]
65017f64:	call   edi
65017f66:	mov    esi,eax
65017f68:	cmp    esi,ebx
65017f6a:	je     0x6501802d
65017f70:	jle    0x65017fb1
65017f72:	push   0xffffffe0
65017f74:	xor    edx,edx
65017f76:	pop    eax
65017f77:	div    esi
65017f79:	cmp    eax,0x1
65017f7c:	jb     0x65017fb1
65017f7e:	lea    eax,[esi+0x8]
65017f81:	cmp    eax,0x400
65017f86:	ja     0x65017f9b
65017f88:	call   0x65013030
65017f8d:	mov    eax,esp
65017f8f:	cmp    eax,ebx
65017f91:	je     0x65017faf
65017f93:	mov    DWORD PTR [eax],0xcccc
65017f99:	jmp    0x65017fac
65017f9b:	push   eax
65017f9c:	call   0x65013823
65017fa1:	cmp    eax,ebx
65017fa3:	pop    ecx
65017fa4:	je     0x65017faf
65017fa6:	mov    DWORD PTR [eax],0xdddd
65017fac:	add    eax,0x8
65017faf:	mov    ebx,eax
65017fb1:	test   ebx,ebx
65017fb3:	je     0x6501802d
65017fb5:	push   esi
65017fb6:	push   ebx
65017fb7:	push   DWORD PTR [ebp-0x10]
65017fba:	push   DWORD PTR [ebp-0x8]
65017fbd:	push   DWORD PTR [ebp+0xc]
65017fc0:	push   DWORD PTR [ebp+0x8]
65017fc3:	call   edi
65017fc5:	test   eax,eax
65017fc7:	je     0x65018026
65017fc9:	test   WORD PTR [ebp+0xc],0x400
65017fcf:	je     0x65018005
65017fd1:	mov    eax,DWORD PTR [ebp+0x1c]
65017fd4:	xor    edi,edi
65017fd6:	cmp    eax,edi
65017fd8:	mov    DWORD PTR [ebp-0xc],esi
65017fdb:	je     0x65018026
65017fdd:	cmp    eax,esi
65017fdf:	jg     0x65017fe4
65017fe1:	lea    esi,[eax-0x1]
65017fe4:	push   esi
65017fe5:	push   ebx
65017fe6:	push   eax
65017fe7:	push   DWORD PTR [ebp+0x18]
65017fea:	call   0x6501bb56
65017fef:	add    esp,0x10
65017ff2:	test   eax,eax
65017ff4:	je     0x65018026
65017ff6:	push   edi
65017ff7:	push   edi
65017ff8:	push   edi
65017ff9:	push   edi
65017ffa:	push   edi
65017ffb:	call   0x65012323
65018000:	add    esp,0x14
65018003:	jmp    0x65018026
65018005:	xor    eax,eax
65018007:	cmp    DWORD PTR [ebp+0x1c],eax
6501800a:	jne    0x65018010
6501800c:	push   eax
6501800d:	push   eax
6501800e:	jmp    0x65018016
65018010:	push   DWORD PTR [ebp+0x1c]
65018013:	push   DWORD PTR [ebp+0x18]
65018016:	push   esi
65018017:	push   ebx
65018018:	push   0x1
6501801a:	push   DWORD PTR [ebp+0x20]
6501801d:	call   DWORD PTR ds:0x6502401c
65018023:	mov    DWORD PTR [ebp-0xc],eax
65018026:	push   ebx
65018027:	call   0x65012dc2
6501802c:	pop    ecx
6501802d:	push   DWORD PTR [ebp-0x8]
65018030:	call   0x65012dc2
65018035:	mov    eax,DWORD PTR [ebp-0xc]
65018038:	pop    ecx
65018039:	lea    esp,[ebp-0x1c]
6501803c:	pop    edi
6501803d:	pop    esi
6501803e:	pop    ebx
6501803f:	mov    ecx,DWORD PTR [ebp-0x4]
65018042:	xor    ecx,ebp
65018044:	call   0x6501292c
65018049:	leave  
6501804a:	ret    
6501804b:	push   ebp
6501804c:	mov    ebp,esp
6501804e:	sub    esp,0x10
65018051:	push   DWORD PTR [ebp+0x8]
65018054:	lea    ecx,[ebp-0x10]
65018057:	call   0x65012acf
6501805c:	push   DWORD PTR [ebp+0x24]
6501805f:	lea    ecx,[ebp-0x10]
65018062:	push   DWORD PTR [ebp+0x20]
65018065:	push   DWORD PTR [ebp+0x1c]
65018068:	push   DWORD PTR [ebp+0x18]
6501806b:	push   DWORD PTR [ebp+0x14]
6501806e:	push   DWORD PTR [ebp+0x10]
65018071:	push   DWORD PTR [ebp+0xc]
65018074:	call   0x65017dea
65018079:	add    esp,0x1c
6501807c:	cmp    BYTE PTR [ebp-0x4],0x0
65018080:	je     0x65018089
65018082:	mov    ecx,DWORD PTR [ebp-0x8]
65018085:	and    DWORD PTR [ecx+0x70],0xfffffffd
65018089:	leave  
6501808a:	ret    
6501808b:	xor    eax,eax
6501808d:	cmp    DWORD PTR [esp+0x8],eax
65018091:	jbe    0x650180a6
65018093:	mov    ecx,DWORD PTR [esp+0x4]
65018097:	cmp    WORD PTR [ecx],0x0
6501809b:	je     0x650180a6
6501809d:	inc    eax
6501809e:	inc    ecx
6501809f:	inc    ecx
650180a0:	cmp    eax,DWORD PTR [esp+0x8]
650180a4:	jb     0x65018097
650180a6:	ret    
650180a7:	push   ebp
650180a8:	mov    ebp,esp
650180aa:	sub    esp,0x4
650180ad:	mov    DWORD PTR [ebp-0x4],edi
650180b0:	mov    edi,DWORD PTR [ebp+0x8]
650180b3:	mov    ecx,DWORD PTR [ebp+0xc]
650180b6:	shr    ecx,0x7
650180b9:	pxor   xmm0,xmm0
650180bd:	jmp    0x650180c7
650180bf:	lea    esp,[esp+0x0]
650180c6:	nop
650180c7:	movdqa XMMWORD PTR [edi],xmm0
650180cb:	movdqa XMMWORD PTR [edi+0x10],xmm0
650180d0:	movdqa XMMWORD PTR [edi+0x20],xmm0
650180d5:	movdqa XMMWORD PTR [edi+0x30],xmm0
650180da:	movdqa XMMWORD PTR [edi+0x40],xmm0
650180df:	movdqa XMMWORD PTR [edi+0x50],xmm0
650180e4:	movdqa XMMWORD PTR [edi+0x60],xmm0
650180e9:	movdqa XMMWORD PTR [edi+0x70],xmm0
650180ee:	lea    edi,[edi+0x80]
650180f4:	dec    ecx
650180f5:	jne    0x650180c7
650180f7:	mov    edi,DWORD PTR [ebp-0x4]
650180fa:	mov    esp,ebp
650180fc:	pop    ebp
650180fd:	ret    
650180fe:	push   ebp
650180ff:	mov    ebp,esp
65018101:	sub    esp,0x10
65018104:	mov    DWORD PTR [ebp-0x4],edi
65018107:	mov    eax,DWORD PTR [ebp+0x8]
6501810a:	cdq    
6501810b:	mov    edi,eax
6501810d:	xor    edi,edx
6501810f:	sub    edi,edx
65018111:	and    edi,0xf
65018114:	xor    edi,edx
65018116:	sub    edi,edx
65018118:	test   edi,edi
6501811a:	jne    0x65018158
6501811c:	mov    ecx,DWORD PTR [ebp+0x10]
6501811f:	mov    edx,ecx
65018121:	and    edx,0x7f
65018124:	mov    DWORD PTR [ebp-0xc],edx
65018127:	cmp    ecx,edx
65018129:	je     0x6501813d
6501812b:	sub    ecx,edx
6501812d:	push   ecx
6501812e:	push   eax
6501812f:	call   0x650180a7
65018134:	add    esp,0x8
65018137:	mov    eax,DWORD PTR [ebp+0x8]
6501813a:	mov    edx,DWORD PTR [ebp-0xc]
6501813d:	test   edx,edx
6501813f:	je     0x65018186
65018141:	add    eax,DWORD PTR [ebp+0x10]
65018144:	sub    eax,edx
65018146:	mov    DWORD PTR [ebp-0x8],eax
65018149:	xor    eax,eax
6501814b:	mov    edi,DWORD PTR [ebp-0x8]
6501814e:	mov    ecx,DWORD PTR [ebp-0xc]
65018151:	rep stos BYTE PTR es:[edi],al
65018153:	mov    eax,DWORD PTR [ebp+0x8]
65018156:	jmp    0x65018186
65018158:	neg    edi
6501815a:	add    edi,0x10
6501815d:	mov    DWORD PTR [ebp-0x10],edi
65018160:	xor    eax,eax
65018162:	mov    edi,DWORD PTR [ebp+0x8]
65018165:	mov    ecx,DWORD PTR [ebp-0x10]
65018168:	rep stos BYTE PTR es:[edi],al
6501816a:	mov    eax,DWORD PTR [ebp-0x10]
6501816d:	mov    ecx,DWORD PTR [ebp+0x8]
65018170:	mov    edx,DWORD PTR [ebp+0x10]
65018173:	add    ecx,eax
65018175:	sub    edx,eax
65018177:	push   edx
65018178:	push   0x0
6501817a:	push   ecx
6501817b:	call   0x650180fe
65018180:	add    esp,0xc
65018183:	mov    eax,DWORD PTR [ebp+0x8]
65018186:	mov    edi,DWORD PTR [ebp-0x4]
65018189:	mov    esp,ebp
6501818b:	pop    ebp
6501818c:	ret    
6501818d:	and    DWORD PTR ds:0x65031560,0x0
65018194:	call   0x6501d671
65018199:	mov    ds:0x65031560,eax
6501819e:	xor    eax,eax
650181a0:	ret    
650181a1:	int3   
650181a2:	int3   
650181a3:	int3   
650181a4:	int3   
650181a5:	int3   
650181a6:	int3   
650181a7:	int3   
650181a8:	int3   
650181a9:	int3   
650181aa:	int3   
650181ab:	int3   
650181ac:	int3   
650181ad:	int3   
650181ae:	int3   
650181af:	int3   
650181b0:	push   ecx
650181b1:	lea    ecx,[esp+0x4]
650181b5:	sub    ecx,eax
650181b7:	sbb    eax,eax
650181b9:	not    eax
650181bb:	and    ecx,eax
650181bd:	mov    eax,esp
650181bf:	and    eax,0xfffff000
650181c4:	cmp    ecx,eax
650181c6:	jb     0x650181d2
650181c8:	mov    eax,ecx
650181ca:	pop    ecx
650181cb:	xchg   esp,eax
650181cc:	mov    eax,DWORD PTR [eax]
650181ce:	mov    DWORD PTR [esp],eax
650181d1:	ret    
650181d2:	sub    eax,0x1000
650181d7:	test   DWORD PTR [eax],eax
650181d9:	jmp    0x650181c4
650181db:	push   0x54
650181dd:	push   0x65029d30
650181e2:	call   0x65013e70
650181e7:	xor    edi,edi
650181e9:	mov    DWORD PTR [ebp-0x4],edi
650181ec:	lea    eax,[ebp-0x64]
650181ef:	push   eax
650181f0:	call   DWORD PTR ds:0x65024154
650181f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650181fd:	push   0x40
650181ff:	push   0x20
65018201:	pop    esi
65018202:	push   esi
65018203:	call   0x65015bd0
65018208:	pop    ecx
65018209:	pop    ecx
6501820a:	cmp    eax,edi
6501820c:	je     0x65018426
65018212:	mov    ds:0x65031460,eax
65018217:	mov    DWORD PTR ds:0x65031440,esi
6501821d:	lea    ecx,[eax+0x800]
65018223:	jmp    0x65018255
65018225:	mov    BYTE PTR [eax+0x4],0x0
65018229:	or     DWORD PTR [eax],0xffffffff
6501822c:	mov    BYTE PTR [eax+0x5],0xa
65018230:	mov    DWORD PTR [eax+0x8],edi
65018233:	mov    BYTE PTR [eax+0x24],0x0
65018237:	mov    BYTE PTR [eax+0x25],0xa
6501823b:	mov    BYTE PTR [eax+0x26],0xa
6501823f:	mov    DWORD PTR [eax+0x38],edi
65018242:	mov    BYTE PTR [eax+0x34],0x0
65018246:	add    eax,0x40
65018249:	mov    ecx,DWORD PTR ds:0x65031460
6501824f:	add    ecx,0x800
65018255:	cmp    eax,ecx
65018257:	jb     0x65018225
65018259:	cmp    WORD PTR [ebp-0x32],di
6501825d:	je     0x6501836d
65018263:	mov    eax,DWORD PTR [ebp-0x30]
65018266:	cmp    eax,edi
65018268:	je     0x6501836d
6501826e:	mov    edi,DWORD PTR [eax]
65018270:	lea    ebx,[eax+0x4]
65018273:	lea    eax,[ebx+edi*1]
65018276:	mov    DWORD PTR [ebp-0x1c],eax
65018279:	mov    esi,0x800
6501827e:	cmp    edi,esi
65018280:	jl     0x65018284
65018282:	mov    edi,esi
65018284:	mov    DWORD PTR [ebp-0x20],0x1
6501828b:	jmp    0x650182e8
6501828d:	push   0x40
6501828f:	push   0x20
65018291:	call   0x65015bd0
65018296:	pop    ecx
65018297:	pop    ecx
65018298:	test   eax,eax
6501829a:	je     0x650182f2
6501829c:	mov    ecx,DWORD PTR [ebp-0x20]
6501829f:	lea    ecx,[ecx*4+0x65031460]
650182a6:	mov    DWORD PTR [ecx],eax
650182a8:	add    DWORD PTR ds:0x65031440,0x20
650182af:	lea    edx,[eax+0x800]
650182b5:	jmp    0x650182e1
650182b7:	mov    BYTE PTR [eax+0x4],0x0
650182bb:	or     DWORD PTR [eax],0xffffffff
650182be:	mov    BYTE PTR [eax+0x5],0xa
650182c2:	and    DWORD PTR [eax+0x8],0x0
650182c6:	and    BYTE PTR [eax+0x24],0x80
650182ca:	mov    BYTE PTR [eax+0x25],0xa
650182ce:	mov    BYTE PTR [eax+0x26],0xa
650182d2:	and    DWORD PTR [eax+0x38],0x0
650182d6:	mov    BYTE PTR [eax+0x34],0x0
650182da:	add    eax,0x40
650182dd:	mov    edx,DWORD PTR [ecx]
650182df:	add    edx,esi
650182e1:	cmp    eax,edx
650182e3:	jb     0x650182b7
650182e5:	inc    DWORD PTR [ebp-0x20]
650182e8:	cmp    DWORD PTR ds:0x65031440,edi
650182ee:	jl     0x6501828d
650182f0:	jmp    0x650182f8
650182f2:	mov    edi,DWORD PTR ds:0x65031440
650182f8:	and    DWORD PTR [ebp-0x20],0x0
650182fc:	test   edi,edi
650182fe:	jle    0x6501836d
65018300:	mov    eax,DWORD PTR [ebp-0x1c]
65018303:	mov    ecx,DWORD PTR [eax]
65018305:	cmp    ecx,0xffffffff
65018308:	je     0x65018360
6501830a:	cmp    ecx,0xfffffffe
6501830d:	je     0x65018360
6501830f:	mov    al,BYTE PTR [ebx]
65018311:	test   al,0x1
65018313:	je     0x65018360
65018315:	test   al,0x8
65018317:	jne    0x65018324
65018319:	push   ecx
6501831a:	call   DWORD PTR ds:0x65024150
65018320:	test   eax,eax
65018322:	je     0x65018360
65018324:	mov    esi,DWORD PTR [ebp-0x20]
65018327:	mov    eax,esi
65018329:	sar    eax,0x5
6501832c:	and    esi,0x1f
6501832f:	shl    esi,0x6
65018332:	add    esi,DWORD PTR [eax*4+0x65031460]
65018339:	mov    eax,DWORD PTR [ebp-0x1c]
6501833c:	mov    eax,DWORD PTR [eax]
6501833e:	mov    DWORD PTR [esi],eax
65018340:	mov    al,BYTE PTR [ebx]
65018342:	mov    BYTE PTR [esi+0x4],al
65018345:	push   0xfa0
6501834a:	lea    eax,[esi+0xc]
6501834d:	push   eax
6501834e:	call   0x6501b588
65018353:	pop    ecx
65018354:	pop    ecx
65018355:	test   eax,eax
65018357:	je     0x65018426
6501835d:	inc    DWORD PTR [esi+0x8]
65018360:	inc    DWORD PTR [ebp-0x20]
65018363:	inc    ebx
65018364:	add    DWORD PTR [ebp-0x1c],0x4
65018368:	cmp    DWORD PTR [ebp-0x20],edi
6501836b:	jl     0x65018300
6501836d:	xor    ebx,ebx
6501836f:	mov    esi,ebx
65018371:	shl    esi,0x6
65018374:	add    esi,DWORD PTR ds:0x65031460
6501837a:	mov    eax,DWORD PTR [esi]
6501837c:	cmp    eax,0xffffffff
6501837f:	je     0x6501838c
65018381:	cmp    eax,0xfffffffe
65018384:	je     0x6501838c
65018386:	or     BYTE PTR [esi+0x4],0x80
6501838a:	jmp    0x650183fe
6501838c:	mov    BYTE PTR [esi+0x4],0x81
65018390:	test   ebx,ebx
65018392:	jne    0x65018399
65018394:	push   0xfffffff6
65018396:	pop    eax
65018397:	jmp    0x650183a3
65018399:	mov    eax,ebx
6501839b:	dec    eax
6501839c:	neg    eax
6501839e:	sbb    eax,eax
650183a0:	add    eax,0xfffffff5
650183a3:	push   eax
650183a4:	call   DWORD PTR ds:0x6502414c
650183aa:	mov    edi,eax
650183ac:	cmp    edi,0xffffffff
650183af:	je     0x650183f4
650183b1:	test   edi,edi
650183b3:	je     0x650183f4
650183b5:	push   edi
650183b6:	call   DWORD PTR ds:0x65024150
650183bc:	test   eax,eax
650183be:	je     0x650183f4
650183c0:	mov    DWORD PTR [esi],edi
650183c2:	and    eax,0xff
650183c7:	cmp    eax,0x2
650183ca:	jne    0x650183d2
650183cc:	or     BYTE PTR [esi+0x4],0x40
650183d0:	jmp    0x650183db
650183d2:	cmp    eax,0x3
650183d5:	jne    0x650183db
650183d7:	or     BYTE PTR [esi+0x4],0x8
650183db:	push   0xfa0
650183e0:	lea    eax,[esi+0xc]
650183e3:	push   eax
650183e4:	call   0x6501b588
650183e9:	pop    ecx
650183ea:	pop    ecx
650183eb:	test   eax,eax
650183ed:	je     0x65018426
650183ef:	inc    DWORD PTR [esi+0x8]
650183f2:	jmp    0x650183fe
650183f4:	or     BYTE PTR [esi+0x4],0x40
650183f8:	mov    DWORD PTR [esi],0xfffffffe
650183fe:	inc    ebx
650183ff:	cmp    ebx,0x3
65018402:	jl     0x6501836f
65018408:	push   DWORD PTR ds:0x65031440
6501840e:	call   DWORD PTR ds:0x65024148
65018414:	xor    eax,eax
65018416:	jmp    0x65018429
65018418:	xor    eax,eax
6501841a:	inc    eax
6501841b:	ret    
6501841c:	mov    esp,DWORD PTR [ebp-0x18]
6501841f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65018426:	or     eax,0xffffffff
65018429:	call   0x65013eb5
6501842e:	ret    
6501842f:	push   esi
65018430:	push   edi
65018431:	mov    esi,0x65031460
65018436:	mov    edi,DWORD PTR [esi]
65018438:	test   edi,edi
6501843a:	je     0x6501846d
6501843c:	lea    eax,[edi+0x800]
65018442:	jmp    0x6501845e
65018444:	cmp    DWORD PTR [edi+0x8],0x0
65018448:	je     0x65018454
6501844a:	lea    eax,[edi+0xc]
6501844d:	push   eax
6501844e:	call   DWORD PTR ds:0x650240a0
65018454:	mov    eax,DWORD PTR [esi]
65018456:	add    edi,0x40
65018459:	add    eax,0x800
6501845e:	cmp    edi,eax
65018460:	jb     0x65018444
65018462:	push   DWORD PTR [esi]
65018464:	call   0x65013746
65018469:	and    DWORD PTR [esi],0x0
6501846c:	pop    ecx
6501846d:	add    esi,0x4
65018470:	cmp    esi,0x65031560
65018476:	jl     0x65018436
65018478:	pop    edi
65018479:	pop    esi
6501847a:	ret    
6501847b:	push   ebx
6501847c:	xor    ebx,ebx
6501847e:	cmp    DWORD PTR ds:0x65031574,ebx
65018484:	push   esi
65018485:	push   edi
65018486:	jne    0x6501848d
65018488:	call   0x650166a1
6501848d:	mov    esi,DWORD PTR ds:0x6502d594
65018493:	xor    edi,edi
65018495:	cmp    esi,ebx
65018497:	jne    0x650184b1
65018499:	or     eax,0xffffffff
6501849c:	jmp    0x6501853c
650184a1:	cmp    al,0x3d
650184a3:	je     0x650184a6
650184a5:	inc    edi
650184a6:	push   esi
650184a7:	call   0x65014080
650184ac:	pop    ecx
650184ad:	lea    esi,[esi+eax*1+0x1]
650184b1:	mov    al,BYTE PTR [esi]
650184b3:	cmp    al,bl
650184b5:	jne    0x650184a1
650184b7:	push   0x4
650184b9:	inc    edi
650184ba:	push   edi
650184bb:	call   0x65015bd0
650184c0:	mov    edi,eax
650184c2:	cmp    edi,ebx
650184c4:	pop    ecx
650184c5:	pop    ecx
650184c6:	mov    DWORD PTR ds:0x6502d914,edi
650184cc:	je     0x65018499
650184ce:	mov    esi,DWORD PTR ds:0x6502d594
650184d4:	push   ebp
650184d5:	jmp    0x65018517
650184d7:	push   esi
650184d8:	call   0x65014080
650184dd:	mov    ebp,eax
650184df:	inc    ebp
650184e0:	cmp    BYTE PTR [esi],0x3d
650184e3:	pop    ecx
650184e4:	je     0x65018515
650184e6:	push   0x1
650184e8:	push   ebp
650184e9:	call   0x65015bd0
650184ee:	cmp    eax,ebx
650184f0:	pop    ecx
650184f1:	pop    ecx
650184f2:	mov    DWORD PTR [edi],eax
650184f4:	je     0x65018540
650184f6:	push   esi
650184f7:	push   ebp
650184f8:	push   eax
650184f9:	call   0x65014174
650184fe:	add    esp,0xc
65018501:	test   eax,eax
65018503:	je     0x65018512
65018505:	push   ebx
65018506:	push   ebx
65018507:	push   ebx
65018508:	push   ebx
65018509:	push   ebx
6501850a:	call   0x65012323
6501850f:	add    esp,0x14
65018512:	add    edi,0x4
65018515:	add    esi,ebp
65018517:	cmp    BYTE PTR [esi],bl
65018519:	jne    0x650184d7
6501851b:	push   DWORD PTR ds:0x6502d594
65018521:	call   0x65013746
65018526:	mov    DWORD PTR ds:0x6502d594,ebx
6501852c:	mov    DWORD PTR [edi],ebx
6501852e:	mov    DWORD PTR ds:0x65031568,0x1
65018538:	xor    eax,eax
6501853a:	pop    ecx
6501853b:	pop    ebp
6501853c:	pop    edi
6501853d:	pop    esi
6501853e:	pop    ebx
6501853f:	ret    
65018540:	push   DWORD PTR ds:0x6502d914
65018546:	call   0x65013746
6501854b:	mov    DWORD PTR ds:0x6502d914,ebx
65018551:	or     eax,0xffffffff
65018554:	jmp    0x6501853a
65018556:	push   ebp
65018557:	mov    ebp,esp
65018559:	push   ecx
6501855a:	mov    ecx,DWORD PTR [ebp+0x10]
6501855d:	push   ebx
6501855e:	xor    eax,eax
65018560:	cmp    DWORD PTR [ebp+0x8],eax
65018563:	push   esi
65018564:	mov    DWORD PTR [edi],eax
65018566:	mov    esi,edx
65018568:	mov    edx,DWORD PTR [ebp+0xc]
6501856b:	mov    DWORD PTR [ecx],0x1
65018571:	je     0x6501857c
65018573:	mov    ebx,DWORD PTR [ebp+0x8]
65018576:	add    DWORD PTR [ebp+0x8],0x4
6501857a:	mov    DWORD PTR [ebx],edx
6501857c:	mov    DWORD PTR [ebp-0x4],eax
6501857f:	cmp    BYTE PTR [esi],0x22
65018582:	jne    0x65018594
65018584:	xor    eax,eax
65018586:	cmp    DWORD PTR [ebp-0x4],eax
65018589:	mov    bl,0x22
6501858b:	sete   al
6501858e:	inc    esi
6501858f:	mov    DWORD PTR [ebp-0x4],eax
65018592:	jmp    0x650185d0
65018594:	inc    DWORD PTR [edi]
65018596:	test   edx,edx
65018598:	je     0x650185a2
6501859a:	mov    al,BYTE PTR [esi]
6501859c:	mov    BYTE PTR [edx],al
6501859e:	inc    edx
6501859f:	mov    DWORD PTR [ebp+0xc],edx
650185a2:	mov    bl,BYTE PTR [esi]
650185a4:	movzx  eax,bl
650185a7:	push   eax
650185a8:	inc    esi
650185a9:	call   0x6501d72f
650185ae:	test   eax,eax
650185b0:	pop    ecx
650185b1:	je     0x650185c6
650185b3:	inc    DWORD PTR [edi]
650185b5:	cmp    DWORD PTR [ebp+0xc],0x0
650185b9:	je     0x650185c5
650185bb:	mov    ecx,DWORD PTR [ebp+0xc]
650185be:	mov    al,BYTE PTR [esi]
650185c0:	inc    DWORD PTR [ebp+0xc]
650185c3:	mov    BYTE PTR [ecx],al
650185c5:	inc    esi
650185c6:	test   bl,bl
650185c8:	mov    edx,DWORD PTR [ebp+0xc]
650185cb:	mov    ecx,DWORD PTR [ebp+0x10]
650185ce:	je     0x65018602
650185d0:	cmp    DWORD PTR [ebp-0x4],0x0
650185d4:	jne    0x6501857f
650185d6:	cmp    bl,0x20
650185d9:	je     0x650185e0
650185db:	cmp    bl,0x9
650185de:	jne    0x6501857f
650185e0:	test   edx,edx
650185e2:	je     0x650185e8
650185e4:	mov    BYTE PTR [edx-0x1],0x0
650185e8:	and    DWORD PTR [ebp-0x4],0x0
650185ec:	cmp    BYTE PTR [esi],0x0
650185ef:	je     0x650186de
650185f5:	mov    al,BYTE PTR [esi]
650185f7:	cmp    al,0x20
650185f9:	je     0x650185ff
650185fb:	cmp    al,0x9
650185fd:	jne    0x65018605
650185ff:	inc    esi
65018600:	jmp    0x650185f5
65018602:	dec    esi
65018603:	jmp    0x650185e8
65018605:	cmp    BYTE PTR [esi],0x0
65018608:	je     0x650186de
6501860e:	cmp    DWORD PTR [ebp+0x8],0x0
65018612:	je     0x6501861d
65018614:	mov    eax,DWORD PTR [ebp+0x8]
65018617:	add    DWORD PTR [ebp+0x8],0x4
6501861b:	mov    DWORD PTR [eax],edx
6501861d:	inc    DWORD PTR [ecx]
6501861f:	xor    ebx,ebx
65018621:	inc    ebx
65018622:	xor    ecx,ecx
65018624:	jmp    0x65018628
65018626:	inc    esi
65018627:	inc    ecx
65018628:	cmp    BYTE PTR [esi],0x5c
6501862b:	je     0x65018626
6501862d:	cmp    BYTE PTR [esi],0x22
65018630:	jne    0x65018658
65018632:	test   cl,0x1
65018635:	jne    0x65018656
65018637:	cmp    DWORD PTR [ebp-0x4],0x0
6501863b:	je     0x65018649
6501863d:	lea    eax,[esi+0x1]
65018640:	cmp    BYTE PTR [eax],0x22
65018643:	jne    0x65018649
65018645:	mov    esi,eax
65018647:	jmp    0x65018656
65018649:	xor    eax,eax
6501864b:	xor    ebx,ebx
6501864d:	cmp    DWORD PTR [ebp-0x4],eax
65018650:	sete   al
65018653:	mov    DWORD PTR [ebp-0x4],eax
65018656:	shr    ecx,1
65018658:	test   ecx,ecx
6501865a:	je     0x6501866e
6501865c:	dec    ecx
6501865d:	test   edx,edx
6501865f:	je     0x65018665
65018661:	mov    BYTE PTR [edx],0x5c
65018664:	inc    edx
65018665:	inc    DWORD PTR [edi]
65018667:	test   ecx,ecx
65018669:	jne    0x6501865c
6501866b:	mov    DWORD PTR [ebp+0xc],edx
6501866e:	mov    al,BYTE PTR [esi]
65018670:	test   al,al
65018672:	je     0x650186c9
65018674:	cmp    DWORD PTR [ebp-0x4],0x0
65018678:	jne    0x65018682
6501867a:	cmp    al,0x20
6501867c:	je     0x650186c9
6501867e:	cmp    al,0x9
65018680:	je     0x650186c9
65018682:	test   ebx,ebx
65018684:	je     0x650186c3
65018686:	test   edx,edx
65018688:	movsx  eax,al
6501868b:	push   eax
6501868c:	je     0x650186b1
6501868e:	call   0x6501d72f
65018693:	test   eax,eax
65018695:	pop    ecx
65018696:	je     0x650186a5
65018698:	mov    al,BYTE PTR [esi]
6501869a:	mov    ecx,DWORD PTR [ebp+0xc]
6501869d:	inc    DWORD PTR [ebp+0xc]
650186a0:	mov    BYTE PTR [ecx],al
650186a2:	inc    esi
650186a3:	inc    DWORD PTR [edi]
650186a5:	mov    ecx,DWORD PTR [ebp+0xc]
650186a8:	mov    al,BYTE PTR [esi]
650186aa:	inc    DWORD PTR [ebp+0xc]
650186ad:	mov    BYTE PTR [ecx],al
650186af:	jmp    0x650186be
650186b1:	call   0x6501d72f
650186b6:	test   eax,eax
650186b8:	pop    ecx
650186b9:	je     0x650186be
650186bb:	inc    esi
650186bc:	inc    DWORD PTR [edi]
650186be:	inc    DWORD PTR [edi]
650186c0:	mov    edx,DWORD PTR [ebp+0xc]
650186c3:	inc    esi
650186c4:	jmp    0x6501861f
650186c9:	test   edx,edx
650186cb:	je     0x650186d4
650186cd:	mov    BYTE PTR [edx],0x0
650186d0:	inc    edx
650186d1:	mov    DWORD PTR [ebp+0xc],edx
650186d4:	inc    DWORD PTR [edi]
650186d6:	mov    ecx,DWORD PTR [ebp+0x10]
650186d9:	jmp    0x650185ec
650186de:	mov    eax,DWORD PTR [ebp+0x8]
650186e1:	test   eax,eax
650186e3:	pop    esi
650186e4:	pop    ebx
650186e5:	je     0x650186ea
650186e7:	and    DWORD PTR [eax],0x0
650186ea:	inc    DWORD PTR [ecx]
650186ec:	leave  
650186ed:	ret    
650186ee:	push   ebp
650186ef:	mov    ebp,esp
650186f1:	sub    esp,0xc
650186f4:	push   ebx
650186f5:	xor    ebx,ebx
650186f7:	cmp    DWORD PTR ds:0x65031574,ebx
650186fd:	push   esi
650186fe:	push   edi
650186ff:	jne    0x65018706
65018701:	call   0x650166a1
65018706:	push   0x104
6501870b:	mov    esi,0x6502d980
65018710:	push   esi
65018711:	push   ebx
65018712:	mov    BYTE PTR ds:0x6502da84,bl
65018718:	call   DWORD PTR ds:0x65024158
6501871e:	mov    eax,ds:0x65031580
65018723:	cmp    eax,ebx
65018725:	mov    DWORD PTR ds:0x6502d924,esi
6501872b:	je     0x65018734
6501872d:	cmp    BYTE PTR [eax],bl
6501872f:	mov    DWORD PTR [ebp-0x4],eax
65018732:	jne    0x65018737
65018734:	mov    DWORD PTR [ebp-0x4],esi
65018737:	mov    edx,DWORD PTR [ebp-0x4]
6501873a:	lea    eax,[ebp-0x8]
6501873d:	push   eax
6501873e:	push   ebx
6501873f:	push   ebx
65018740:	lea    edi,[ebp-0xc]
65018743:	call   0x65018556
65018748:	mov    eax,DWORD PTR [ebp-0x8]
6501874b:	add    esp,0xc
6501874e:	cmp    eax,0x3fffffff
65018753:	jae    0x6501879f
65018755:	mov    ecx,DWORD PTR [ebp-0xc]
65018758:	cmp    ecx,0xffffffff
6501875b:	jae    0x6501879f
6501875d:	mov    edi,eax
6501875f:	shl    edi,0x2
65018762:	lea    eax,[edi+ecx*1]
65018765:	cmp    eax,ecx
65018767:	jb     0x6501879f
65018769:	push   eax
6501876a:	call   0x65015b90
6501876f:	mov    esi,eax
65018771:	cmp    esi,ebx
65018773:	pop    ecx
65018774:	je     0x6501879f
65018776:	mov    edx,DWORD PTR [ebp-0x4]
65018779:	lea    eax,[ebp-0x8]
6501877c:	push   eax
6501877d:	add    edi,esi
6501877f:	push   edi
65018780:	push   esi
65018781:	lea    edi,[ebp-0xc]
65018784:	call   0x65018556
65018789:	mov    eax,DWORD PTR [ebp-0x8]
6501878c:	add    esp,0xc
6501878f:	dec    eax
65018790:	mov    ds:0x6502d908,eax
65018795:	mov    DWORD PTR ds:0x6502d90c,esi
6501879b:	xor    eax,eax
6501879d:	jmp    0x650187a2
6501879f:	or     eax,0xffffffff
650187a2:	pop    edi
650187a3:	pop    esi
650187a4:	pop    ebx
650187a5:	leave  
650187a6:	ret    
650187a7:	push   ecx
650187a8:	push   ecx
650187a9:	mov    eax,ds:0x6502da88
650187ae:	push   ebx
650187af:	push   ebp
650187b0:	push   esi
650187b1:	push   edi
650187b2:	mov    edi,DWORD PTR ds:0x6502407c
650187b8:	xor    ebx,ebx
650187ba:	xor    esi,esi
650187bc:	cmp    eax,ebx
650187be:	push   0x2
650187c0:	pop    ebp
650187c1:	jne    0x650187f0
650187c3:	call   edi
650187c5:	mov    esi,eax
650187c7:	cmp    esi,ebx
650187c9:	je     0x650187d7
650187cb:	mov    DWORD PTR ds:0x6502da88,0x1
650187d5:	jmp    0x650187f9
650187d7:	call   DWORD PTR ds:0x6502403c
650187dd:	cmp    eax,0x78
650187e0:	jne    0x650187eb
650187e2:	mov    eax,ebp
650187e4:	mov    ds:0x6502da88,eax
650187e9:	jmp    0x650187f0
650187eb:	mov    eax,ds:0x6502da88
650187f0:	cmp    eax,0x1
650187f3:	jne    0x6501887d
650187f9:	cmp    esi,ebx
650187fb:	jne    0x6501880c
650187fd:	call   edi
650187ff:	mov    esi,eax
65018801:	cmp    esi,ebx
65018803:	jne    0x6501880c
65018805:	xor    eax,eax
65018807:	jmp    0x650188d5
6501880c:	cmp    WORD PTR [esi],bx
6501880f:	mov    eax,esi
65018811:	je     0x65018821
65018813:	add    eax,ebp
65018815:	cmp    WORD PTR [eax],bx
65018818:	jne    0x65018813
6501881a:	add    eax,ebp
6501881c:	cmp    WORD PTR [eax],bx
6501881f:	jne    0x65018813
65018821:	mov    edi,DWORD PTR ds:0x65024020
65018827:	push   ebx
65018828:	push   ebx
65018829:	push   ebx
6501882a:	sub    eax,esi
6501882c:	push   ebx
6501882d:	sar    eax,1
6501882f:	inc    eax
65018830:	push   eax
65018831:	push   esi
65018832:	push   ebx
65018833:	push   ebx
65018834:	mov    DWORD PTR [esp+0x34],eax
65018838:	call   edi
6501883a:	mov    ebp,eax
6501883c:	cmp    ebp,ebx
6501883e:	je     0x65018872
65018840:	push   ebp
65018841:	call   0x65015b90
65018846:	cmp    eax,ebx
65018848:	pop    ecx
65018849:	mov    DWORD PTR [esp+0x10],eax
6501884d:	je     0x65018872
6501884f:	push   ebx
65018850:	push   ebx
65018851:	push   ebp
65018852:	push   eax
65018853:	push   DWORD PTR [esp+0x24]
65018857:	push   esi
65018858:	push   ebx
65018859:	push   ebx
6501885a:	call   edi
6501885c:	test   eax,eax
6501885e:	jne    0x6501886e
65018860:	push   DWORD PTR [esp+0x10]
65018864:	call   0x65013746
65018869:	pop    ecx
6501886a:	mov    DWORD PTR [esp+0x10],ebx
6501886e:	mov    ebx,DWORD PTR [esp+0x10]
65018872:	push   esi
65018873:	call   DWORD PTR ds:0x65024164
65018879:	mov    eax,ebx
6501887b:	jmp    0x650188d5
6501887d:	cmp    eax,ebp
6501887f:	je     0x65018885
65018881:	cmp    eax,ebx
65018883:	jne    0x65018805
65018885:	call   DWORD PTR ds:0x65024160
6501888b:	mov    esi,eax
6501888d:	cmp    esi,ebx
6501888f:	je     0x65018805
65018895:	cmp    BYTE PTR [esi],bl
65018897:	je     0x650188a3
65018899:	inc    eax
6501889a:	cmp    BYTE PTR [eax],bl
6501889c:	jne    0x65018899
6501889e:	inc    eax
6501889f:	cmp    BYTE PTR [eax],bl
650188a1:	jne    0x65018899
650188a3:	sub    eax,esi
650188a5:	inc    eax
650188a6:	mov    ebp,eax
650188a8:	push   ebp
650188a9:	call   0x65015b90
650188ae:	mov    edi,eax
650188b0:	cmp    edi,ebx
650188b2:	pop    ecx
650188b3:	jne    0x650188c1
650188b5:	push   esi
650188b6:	call   DWORD PTR ds:0x6502415c
650188bc:	jmp    0x65018805
650188c1:	push   ebp
650188c2:	push   esi
650188c3:	push   edi
650188c4:	call   0x650141e0
650188c9:	add    esp,0xc
650188cc:	push   esi
650188cd:	call   DWORD PTR ds:0x6502415c
650188d3:	mov    eax,edi
650188d5:	pop    edi
650188d6:	pop    esi
650188d7:	pop    ebp
650188d8:	pop    ebx
650188d9:	pop    ecx
650188da:	pop    ecx
650188db:	ret    
650188dc:	push   esi
650188dd:	push   edi
650188de:	mov    eax,0x65029510
650188e3:	mov    edi,0x65029510
650188e8:	cmp    eax,edi
650188ea:	mov    esi,eax
650188ec:	jae    0x650188fd
650188ee:	mov    eax,DWORD PTR [esi]
650188f0:	test   eax,eax
650188f2:	je     0x650188f6
650188f4:	call   eax
650188f6:	add    esi,0x4
650188f9:	cmp    esi,edi
650188fb:	jb     0x650188ee
650188fd:	pop    edi
650188fe:	pop    esi
650188ff:	ret    
65018900:	push   esi
65018901:	push   edi
65018902:	mov    eax,0x65029518
65018907:	mov    edi,0x65029518
6501890c:	cmp    eax,edi
6501890e:	mov    esi,eax
65018910:	jae    0x65018921
65018912:	mov    eax,DWORD PTR [esi]
65018914:	test   eax,eax
65018916:	je     0x6501891a
65018918:	call   eax
6501891a:	add    esi,0x4
6501891d:	cmp    esi,edi
6501891f:	jb     0x65018912
65018921:	pop    edi
65018922:	pop    esi
65018923:	ret    
65018924:	push   ebp
65018925:	mov    ebp,esp
65018927:	push   ecx
65018928:	push   ecx
65018929:	push   esi
6501892a:	lea    eax,[ebp-0x4]
6501892d:	xor    esi,esi
6501892f:	push   eax
65018930:	mov    DWORD PTR [ebp-0x4],esi
65018933:	mov    DWORD PTR [ebp-0x8],esi
65018936:	call   0x65015daf
6501893b:	test   eax,eax
6501893d:	pop    ecx
6501893e:	je     0x6501894d
65018940:	push   esi
65018941:	push   esi
65018942:	push   esi
65018943:	push   esi
65018944:	push   esi
65018945:	call   0x65012323
6501894a:	add    esp,0x14
6501894d:	lea    eax,[ebp-0x8]
65018950:	push   eax
65018951:	call   0x65015de6
65018956:	test   eax,eax
65018958:	pop    ecx
65018959:	je     0x65018968
6501895b:	push   esi
6501895c:	push   esi
6501895d:	push   esi
6501895e:	push   esi
6501895f:	push   esi
65018960:	call   0x65012323
65018965:	add    esp,0x14
65018968:	cmp    DWORD PTR [ebp-0x4],0x2
6501896c:	pop    esi
6501896d:	jne    0x6501897a
6501896f:	cmp    DWORD PTR [ebp-0x8],0x5
65018973:	jb     0x6501897a
65018975:	xor    eax,eax
65018977:	inc    eax
65018978:	leave  
65018979:	ret    
6501897a:	push   0x3
6501897c:	pop    eax
6501897d:	leave  
6501897e:	ret    
6501897f:	xor    eax,eax
65018981:	cmp    DWORD PTR [esp+0x4],eax
65018985:	push   0x0
65018987:	sete   al
6501898a:	push   0x1000
6501898f:	push   eax
65018990:	call   DWORD PTR ds:0x65024168
65018996:	test   eax,eax
65018998:	mov    ds:0x6502da8c,eax
6501899d:	jne    0x650189a2
6501899f:	xor    eax,eax
650189a1:	ret    
650189a2:	call   0x65018924
650189a7:	cmp    eax,0x3
650189aa:	mov    ds:0x6503143c,eax
650189af:	jne    0x650189d5
650189b1:	push   0x3f8
650189b6:	call   0x65019f00
650189bb:	test   eax,eax
650189bd:	pop    ecx
650189be:	jne    0x650189d5
650189c0:	push   DWORD PTR ds:0x6502da8c
650189c6:	call   DWORD PTR ds:0x650240e8
650189cc:	and    DWORD PTR ds:0x6502da8c,0x0
650189d3:	jmp    0x6501899f
650189d5:	xor    eax,eax
650189d7:	inc    eax
650189d8:	ret    
650189d9:	push   ebp
650189da:	xor    ebp,ebp
650189dc:	cmp    DWORD PTR ds:0x6503143c,0x3
650189e3:	jne    0x65018a39
650189e5:	push   ebx
650189e6:	mov    ebx,DWORD PTR ds:0x650240f0
650189ec:	push   edi
650189ed:	xor    edi,edi
650189ef:	cmp    DWORD PTR ds:0x65031424,ebp
650189f5:	jle    0x65018a28
650189f7:	push   esi
650189f8:	mov    esi,DWORD PTR ds:0x65031428
650189fe:	add    esi,0x10
65018a01:	push   0x8000
65018a06:	push   ebp
65018a07:	push   DWORD PTR [esi-0x4]
65018a0a:	call   DWORD PTR ds:0x6502416c
65018a10:	push   DWORD PTR [esi]
65018a12:	push   ebp
65018a13:	push   DWORD PTR ds:0x6502da8c
65018a19:	call   ebx
65018a1b:	add    esi,0x14
65018a1e:	inc    edi
65018a1f:	cmp    edi,DWORD PTR ds:0x65031424
65018a25:	jl     0x65018a01
65018a27:	pop    esi
65018a28:	push   DWORD PTR ds:0x65031428
65018a2e:	push   ebp
65018a2f:	push   DWORD PTR ds:0x6502da8c
65018a35:	call   ebx
65018a37:	pop    edi
65018a38:	pop    ebx
65018a39:	push   DWORD PTR ds:0x6502da8c
65018a3f:	call   DWORD PTR ds:0x650240e8
65018a45:	mov    DWORD PTR ds:0x6502da8c,ebp
65018a4b:	pop    ebp
65018a4c:	ret    
65018a4d:	ret    
65018a4e:	push   ebp
65018a4f:	mov    ebp,esp
65018a51:	push   ecx
65018a52:	push   ecx
65018a53:	push   esi
65018a54:	call   0x65014854
65018a59:	mov    esi,eax
65018a5b:	test   esi,esi
65018a5d:	je     0x65018ba9
65018a63:	mov    edx,DWORD PTR [esi+0x5c]
65018a66:	mov    eax,ds:0x6502c94c
65018a6b:	push   edi
65018a6c:	mov    edi,DWORD PTR [ebp+0x8]
65018a6f:	mov    ecx,edx
65018a71:	push   ebx
65018a72:	cmp    DWORD PTR [ecx],edi
65018a74:	je     0x65018a84
65018a76:	mov    ebx,eax
65018a78:	imul   ebx,ebx,0xc
65018a7b:	add    ecx,0xc
65018a7e:	add    ebx,edx
65018a80:	cmp    ecx,ebx
65018a82:	jb     0x65018a72
65018a84:	imul   eax,eax,0xc
65018a87:	add    eax,edx
65018a89:	cmp    ecx,eax
65018a8b:	jae    0x65018a95
65018a8d:	cmp    DWORD PTR [ecx],edi
65018a8f:	jne    0x65018a95
65018a91:	mov    eax,ecx
65018a93:	jmp    0x65018a97
65018a95:	xor    eax,eax
65018a97:	test   eax,eax
65018a99:	je     0x65018aa5
65018a9b:	mov    ebx,DWORD PTR [eax+0x8]
65018a9e:	test   ebx,ebx
65018aa0:	mov    DWORD PTR [ebp-0x4],ebx
65018aa3:	jne    0x65018aac
65018aa5:	xor    eax,eax
65018aa7:	jmp    0x65018ba7
65018aac:	cmp    ebx,0x5
65018aaf:	jne    0x65018abd
65018ab1:	and    DWORD PTR [eax+0x8],0x0
65018ab5:	xor    eax,eax
65018ab7:	inc    eax
65018ab8:	jmp    0x65018ba7
65018abd:	cmp    ebx,0x1
65018ac0:	je     0x65018ba4
65018ac6:	mov    ecx,DWORD PTR [esi+0x60]
65018ac9:	mov    DWORD PTR [ebp-0x8],ecx
65018acc:	mov    ecx,DWORD PTR [ebp+0xc]
65018acf:	mov    DWORD PTR [esi+0x60],ecx
65018ad2:	mov    ecx,DWORD PTR [eax+0x4]
65018ad5:	cmp    ecx,0x8
65018ad8:	jne    0x65018b96
65018ade:	mov    ecx,DWORD PTR ds:0x6502c940
65018ae4:	mov    edi,DWORD PTR ds:0x6502c944
65018aea:	mov    edx,ecx
65018aec:	add    edi,ecx
65018aee:	cmp    edx,edi
65018af0:	jge    0x65018b16
65018af2:	imul   ecx,ecx,0xc
65018af5:	mov    edi,DWORD PTR [esi+0x5c]
65018af8:	and    DWORD PTR [ecx+edi*1+0x8],0x0
65018afd:	mov    edi,DWORD PTR ds:0x6502c940
65018b03:	mov    ebx,DWORD PTR ds:0x6502c944
65018b09:	inc    edx
65018b0a:	add    ebx,edi
65018b0c:	add    ecx,0xc
65018b0f:	cmp    edx,ebx
65018b11:	jl     0x65018af5
65018b13:	mov    ebx,DWORD PTR [ebp-0x4]
65018b16:	mov    eax,DWORD PTR [eax]
65018b18:	cmp    eax,0xc000008e
65018b1d:	mov    edi,DWORD PTR [esi+0x64]
65018b20:	jne    0x65018b2b
65018b22:	mov    DWORD PTR [esi+0x64],0x83
65018b29:	jmp    0x65018b89
65018b2b:	cmp    eax,0xc0000090
65018b30:	jne    0x65018b3b
65018b32:	mov    DWORD PTR [esi+0x64],0x81
65018b39:	jmp    0x65018b89
65018b3b:	cmp    eax,0xc0000091
65018b40:	jne    0x65018b4b
65018b42:	mov    DWORD PTR [esi+0x64],0x84
65018b49:	jmp    0x65018b89
65018b4b:	cmp    eax,0xc0000093
65018b50:	jne    0x65018b5b
65018b52:	mov    DWORD PTR [esi+0x64],0x85
65018b59:	jmp    0x65018b89
65018b5b:	cmp    eax,0xc000008d
65018b60:	jne    0x65018b6b
65018b62:	mov    DWORD PTR [esi+0x64],0x82
65018b69:	jmp    0x65018b89
65018b6b:	cmp    eax,0xc000008f
65018b70:	jne    0x65018b7b
65018b72:	mov    DWORD PTR [esi+0x64],0x86
65018b79:	jmp    0x65018b89
65018b7b:	cmp    eax,0xc0000092
65018b80:	jne    0x65018b89
65018b82:	mov    DWORD PTR [esi+0x64],0x8a
65018b89:	push   DWORD PTR [esi+0x64]
65018b8c:	push   0x8
65018b8e:	call   ebx
65018b90:	pop    ecx
65018b91:	mov    DWORD PTR [esi+0x64],edi
65018b94:	jmp    0x65018b9d
65018b96:	and    DWORD PTR [eax+0x8],0x0
65018b9a:	push   ecx
65018b9b:	call   ebx
65018b9d:	mov    eax,DWORD PTR [ebp-0x8]
65018ba0:	pop    ecx
65018ba1:	mov    DWORD PTR [esi+0x60],eax
65018ba4:	or     eax,0xffffffff
65018ba7:	pop    ebx
65018ba8:	pop    edi
65018ba9:	pop    esi
65018baa:	leave  
65018bab:	ret    
65018bac:	mov    eax,0xe06d7363
65018bb1:	cmp    DWORD PTR [esp+0x4],eax
65018bb5:	jne    0x65018bc4
65018bb7:	push   DWORD PTR [esp+0x8]
65018bbb:	push   eax
65018bbc:	call   0x65018a4e
65018bc1:	pop    ecx
65018bc2:	pop    ecx
65018bc3:	ret    
65018bc4:	xor    eax,eax
65018bc6:	ret    
65018bc7:	push   ebp
65018bc8:	mov    ebp,esp
65018bca:	sub    esp,0x10
65018bcd:	mov    eax,ds:0x6502c09c
65018bd2:	and    DWORD PTR [ebp-0x8],0x0
65018bd6:	and    DWORD PTR [ebp-0x4],0x0
65018bda:	push   ebx
65018bdb:	push   edi
65018bdc:	mov    edi,0xbb40e64e
65018be1:	cmp    eax,edi
65018be3:	mov    ebx,0xffff0000
65018be8:	je     0x65018bf7
65018bea:	test   ebx,eax
65018bec:	je     0x65018bf7
65018bee:	not    eax
65018bf0:	mov    ds:0x6502c0a0,eax
65018bf5:	jmp    0x65018c57
65018bf7:	push   esi
65018bf8:	lea    eax,[ebp-0x8]
65018bfb:	push   eax
65018bfc:	call   DWORD PTR ds:0x65024178
65018c02:	mov    esi,DWORD PTR [ebp-0x4]
65018c05:	xor    esi,DWORD PTR [ebp-0x8]
65018c08:	call   DWORD PTR ds:0x65024174
65018c0e:	xor    esi,eax
65018c10:	call   DWORD PTR ds:0x65024114
65018c16:	xor    esi,eax
65018c18:	call   DWORD PTR ds:0x65024050
65018c1e:	xor    esi,eax
65018c20:	lea    eax,[ebp-0x10]
65018c23:	push   eax
65018c24:	call   DWORD PTR ds:0x65024170
65018c2a:	mov    eax,DWORD PTR [ebp-0xc]
65018c2d:	xor    eax,DWORD PTR [ebp-0x10]
65018c30:	xor    esi,eax
65018c32:	cmp    esi,edi
65018c34:	jne    0x65018c3d
65018c36:	mov    esi,0xbb40e64f
65018c3b:	jmp    0x65018c48
65018c3d:	test   ebx,esi
65018c3f:	jne    0x65018c48
65018c41:	mov    eax,esi
65018c43:	shl    eax,0x10
65018c46:	or     esi,eax
65018c48:	mov    DWORD PTR ds:0x6502c09c,esi
65018c4e:	not    esi
65018c50:	mov    DWORD PTR ds:0x6502c0a0,esi
65018c56:	pop    esi
65018c57:	pop    edi
65018c58:	pop    ebx
65018c59:	leave  
65018c5a:	ret    
65018c5b:	int3   
65018c5c:	int3   
65018c5d:	int3   
65018c5e:	int3   
65018c5f:	int3   
65018c60:	push   esi
65018c61:	mov    eax,DWORD PTR [esp+0x14]
65018c65:	or     eax,eax
65018c67:	jne    0x65018c91
65018c69:	mov    ecx,DWORD PTR [esp+0x10]
65018c6d:	mov    eax,DWORD PTR [esp+0xc]
65018c71:	xor    edx,edx
65018c73:	div    ecx
65018c75:	mov    ebx,eax
65018c77:	mov    eax,DWORD PTR [esp+0x8]
65018c7b:	div    ecx
65018c7d:	mov    esi,eax
65018c7f:	mov    eax,ebx
65018c81:	mul    DWORD PTR [esp+0x10]
65018c85:	mov    ecx,eax
65018c87:	mov    eax,esi
65018c89:	mul    DWORD PTR [esp+0x10]
65018c8d:	add    edx,ecx
65018c8f:	jmp    0x65018cd8
65018c91:	mov    ecx,eax
65018c93:	mov    ebx,DWORD PTR [esp+0x10]
65018c97:	mov    edx,DWORD PTR [esp+0xc]
65018c9b:	mov    eax,DWORD PTR [esp+0x8]
65018c9f:	shr    ecx,1
65018ca1:	rcr    ebx,1
65018ca3:	shr    edx,1
65018ca5:	rcr    eax,1
65018ca7:	or     ecx,ecx
65018ca9:	jne    0x65018c9f
65018cab:	div    ebx
65018cad:	mov    esi,eax
65018caf:	mul    DWORD PTR [esp+0x14]
65018cb3:	mov    ecx,eax
65018cb5:	mov    eax,DWORD PTR [esp+0x10]
65018cb9:	mul    esi
65018cbb:	add    edx,ecx
65018cbd:	jb     0x65018ccd
65018cbf:	cmp    edx,DWORD PTR [esp+0xc]
65018cc3:	ja     0x65018ccd
65018cc5:	jb     0x65018cd6
65018cc7:	cmp    eax,DWORD PTR [esp+0x8]
65018ccb:	jbe    0x65018cd6
65018ccd:	dec    esi
65018cce:	sub    eax,DWORD PTR [esp+0x10]
65018cd2:	sbb    edx,DWORD PTR [esp+0x14]
65018cd6:	xor    ebx,ebx
65018cd8:	sub    eax,DWORD PTR [esp+0x8]
65018cdc:	sbb    edx,DWORD PTR [esp+0xc]
65018ce0:	neg    edx
65018ce2:	neg    eax
65018ce4:	sbb    edx,0x0
65018ce7:	mov    ecx,edx
65018ce9:	mov    edx,ebx
65018ceb:	mov    ebx,ecx
65018ced:	mov    ecx,eax
65018cef:	mov    eax,esi
65018cf1:	pop    esi
65018cf2:	ret    0x10
65018cf5:	test   BYTE PTR [ecx+0xc],0x40
65018cf9:	je     0x65018d01
65018cfb:	cmp    DWORD PTR [ecx+0x8],0x0
65018cff:	je     0x65018d25
65018d01:	dec    DWORD PTR [ecx+0x4]
65018d04:	js     0x65018d11
65018d06:	mov    edx,DWORD PTR [ecx]
65018d08:	mov    BYTE PTR [edx],al
65018d0a:	inc    DWORD PTR [ecx]
65018d0c:	movzx  eax,al
65018d0f:	jmp    0x65018d1d
65018d11:	movsx  eax,al
65018d14:	push   ecx
65018d15:	push   eax
65018d16:	call   0x650169c5
65018d1b:	pop    ecx
65018d1c:	pop    ecx
65018d1d:	cmp    eax,0xffffffff
65018d20:	jne    0x65018d25
65018d22:	or     DWORD PTR [esi],eax
65018d24:	ret    
65018d25:	inc    DWORD PTR [esi]
65018d27:	ret    
65018d28:	push   ebp
65018d29:	mov    ebp,esp
65018d2b:	push   esi
65018d2c:	mov    esi,eax
65018d2e:	jmp    0x65018d43
65018d30:	mov    ecx,DWORD PTR [ebp+0x10]
65018d33:	mov    al,BYTE PTR [ebp+0x8]
65018d36:	dec    DWORD PTR [ebp+0xc]
65018d39:	call   0x65018cf5
65018d3e:	cmp    DWORD PTR [esi],0xffffffff
65018d41:	je     0x65018d49
65018d43:	cmp    DWORD PTR [ebp+0xc],0x0
65018d47:	jg     0x65018d30
65018d49:	pop    esi
65018d4a:	pop    ebp
65018d4b:	ret    
65018d4c:	test   BYTE PTR [edi+0xc],0x40
65018d50:	push   ebx
65018d51:	push   esi
65018d52:	mov    esi,eax
65018d54:	mov    ebx,ecx
65018d56:	je     0x65018d8c
65018d58:	cmp    DWORD PTR [edi+0x8],0x0
65018d5c:	jne    0x65018d8c
65018d5e:	mov    eax,DWORD PTR [esp+0xc]
65018d62:	add    DWORD PTR [esi],eax
65018d64:	jmp    0x65018d93
65018d66:	mov    al,BYTE PTR [ebx]
65018d68:	dec    DWORD PTR [esp+0xc]
65018d6c:	mov    ecx,edi
65018d6e:	call   0x65018cf5
65018d73:	inc    ebx
65018d74:	cmp    DWORD PTR [esi],0xffffffff
65018d77:	jne    0x65018d8c
65018d79:	call   0x65014580
65018d7e:	cmp    DWORD PTR [eax],0x2a
65018d81:	jne    0x65018d93
65018d83:	mov    ecx,edi
65018d85:	mov    al,0x3f
65018d87:	call   0x65018cf5
65018d8c:	cmp    DWORD PTR [esp+0xc],0x0
65018d91:	jg     0x65018d66
65018d93:	pop    esi
65018d94:	pop    ebx
65018d95:	ret    
65018d96:	push   ebp
65018d97:	lea    ebp,[esp-0x1f8]
65018d9e:	sub    esp,0x278
65018da4:	mov    eax,ds:0x6502c09c
65018da9:	xor    eax,ebp
65018dab:	mov    DWORD PTR [ebp+0x1f4],eax
65018db1:	mov    eax,DWORD PTR [ebp+0x200]
65018db7:	push   ebx
65018db8:	mov    ebx,DWORD PTR [ebp+0x204]
65018dbe:	push   esi
65018dbf:	xor    esi,esi
65018dc1:	push   edi
65018dc2:	mov    edi,DWORD PTR [ebp+0x20c]
65018dc8:	push   DWORD PTR [ebp+0x208]
65018dce:	lea    ecx,[ebp-0x64]
65018dd1:	mov    DWORD PTR [ebp-0x30],eax
65018dd4:	mov    DWORD PTR [ebp-0x2c],edi
65018dd7:	mov    DWORD PTR [ebp-0x4c],esi
65018dda:	mov    DWORD PTR [ebp-0x18],esi
65018ddd:	mov    DWORD PTR [ebp-0x40],esi
65018de0:	mov    DWORD PTR [ebp-0x20],esi
65018de3:	mov    DWORD PTR [ebp-0x3c],esi
65018de6:	mov    DWORD PTR [ebp-0x50],esi
65018de9:	mov    DWORD PTR [ebp-0x44],esi
65018dec:	call   0x65012acf
65018df1:	cmp    DWORD PTR [ebp-0x30],esi
65018df4:	jne    0x65018e23
65018df6:	call   0x65014580
65018dfb:	push   esi
65018dfc:	push   esi
65018dfd:	push   esi
65018dfe:	push   esi
65018dff:	mov    DWORD PTR [eax],0x16
65018e05:	push   esi
65018e06:	call   0x6501241f
65018e0b:	add    esp,0x14
65018e0e:	cmp    BYTE PTR [ebp-0x58],0x0
65018e12:	je     0x65018e1b
65018e14:	mov    eax,DWORD PTR [ebp-0x5c]
65018e17:	and    DWORD PTR [eax+0x70],0xfffffffd
65018e1b:	or     eax,0xffffffff
65018e1e:	jmp    0x650196f2
65018e23:	mov    eax,DWORD PTR [ebp-0x30]
65018e26:	test   BYTE PTR [eax+0xc],0x40
65018e2a:	jne    0x65018ed4
65018e30:	push   eax
65018e31:	call   0x6501c72d
65018e36:	cmp    eax,0xffffffff
65018e39:	pop    ecx
65018e3a:	je     0x65018e72
65018e3c:	push   DWORD PTR [ebp-0x30]
65018e3f:	call   0x6501c72d
65018e44:	cmp    eax,0xfffffffe
65018e47:	pop    ecx
65018e48:	je     0x65018e72
65018e4a:	push   DWORD PTR [ebp-0x30]
65018e4d:	call   0x6501c72d
65018e52:	push   DWORD PTR [ebp-0x30]
65018e55:	sar    eax,0x5
65018e58:	lea    esi,[eax*4+0x65031460]
65018e5f:	call   0x6501c72d
65018e64:	and    eax,0x1f
65018e67:	shl    eax,0x6
65018e6a:	add    eax,DWORD PTR [esi]
65018e6c:	pop    ecx
65018e6d:	pop    ecx
65018e6e:	xor    esi,esi
65018e70:	jmp    0x65018e77
65018e72:	mov    eax,0x6502c880
65018e77:	test   BYTE PTR [eax+0x24],0x7f
65018e7b:	jne    0x65018df6
65018e81:	push   DWORD PTR [ebp-0x30]
65018e84:	call   0x6501c72d
65018e89:	cmp    eax,0xffffffff
65018e8c:	pop    ecx
65018e8d:	je     0x65018ec5
65018e8f:	push   DWORD PTR [ebp-0x30]
65018e92:	call   0x6501c72d
65018e97:	cmp    eax,0xfffffffe
65018e9a:	pop    ecx
65018e9b:	je     0x65018ec5
65018e9d:	push   DWORD PTR [ebp-0x30]
65018ea0:	call   0x6501c72d
65018ea5:	push   DWORD PTR [ebp-0x30]
65018ea8:	sar    eax,0x5
65018eab:	lea    esi,[eax*4+0x65031460]
65018eb2:	call   0x6501c72d
65018eb7:	and    eax,0x1f
65018eba:	shl    eax,0x6
65018ebd:	add    eax,DWORD PTR [esi]
65018ebf:	pop    ecx
65018ec0:	pop    ecx
65018ec1:	xor    esi,esi
65018ec3:	jmp    0x65018eca
65018ec5:	mov    eax,0x6502c880
65018eca:	test   BYTE PTR [eax+0x24],0x80
65018ece:	jne    0x65018df6
65018ed4:	cmp    ebx,esi
65018ed6:	je     0x65018df6
65018edc:	mov    dl,BYTE PTR [ebx]
65018ede:	xor    ecx,ecx
65018ee0:	test   dl,dl
65018ee2:	mov    DWORD PTR [ebp-0x34],esi
65018ee5:	mov    DWORD PTR [ebp-0x28],esi
65018ee8:	mov    DWORD PTR [ebp-0x54],esi
65018eeb:	mov    BYTE PTR [ebp-0x19],dl
65018eee:	je     0x650196e2
65018ef4:	inc    ebx
65018ef5:	cmp    DWORD PTR [ebp-0x34],0x0
65018ef9:	mov    DWORD PTR [ebp-0x48],ebx
65018efc:	jl     0x650196e2
65018f02:	mov    al,dl
65018f04:	sub    al,0x20
65018f06:	cmp    al,0x58
65018f08:	ja     0x65018f1b
65018f0a:	movsx  eax,dl
65018f0d:	movzx  eax,BYTE PTR [eax+0x65024de0]
65018f14:	and    eax,0xf
65018f17:	xor    esi,esi
65018f19:	jmp    0x65018f1f
65018f1b:	xor    esi,esi
65018f1d:	xor    eax,eax
65018f1f:	movsx  eax,BYTE PTR [ecx+eax*8+0x65024e00]
65018f27:	push   0x7
65018f29:	sar    eax,0x4
65018f2c:	pop    ecx
65018f2d:	cmp    eax,ecx
65018f2f:	mov    DWORD PTR [ebp-0x74],eax
65018f32:	ja     0x650196b2
65018f38:	jmp    DWORD PTR [eax*4+0x6501970a]
65018f3f:	or     DWORD PTR [ebp-0x20],0xffffffff
65018f43:	mov    DWORD PTR [ebp-0x78],esi
65018f46:	mov    DWORD PTR [ebp-0x50],esi
65018f49:	mov    DWORD PTR [ebp-0x40],esi
65018f4c:	mov    DWORD PTR [ebp-0x3c],esi
65018f4f:	mov    DWORD PTR [ebp-0x18],esi
65018f52:	mov    DWORD PTR [ebp-0x44],esi
65018f55:	jmp    0x650196b2
65018f5a:	movsx  eax,dl
65018f5d:	sub    eax,0x20
65018f60:	je     0x65018fa0
65018f62:	sub    eax,0x3
65018f65:	je     0x65018f94
65018f67:	sub    eax,0x8
65018f6a:	je     0x65018f8b
65018f6c:	dec    eax
65018f6d:	dec    eax
65018f6e:	je     0x65018f82
65018f70:	sub    eax,0x3
65018f73:	jne    0x650196b2
65018f79:	or     DWORD PTR [ebp-0x18],0x8
65018f7d:	jmp    0x650196b2
65018f82:	or     DWORD PTR [ebp-0x18],0x4
65018f86:	jmp    0x650196b2
65018f8b:	or     DWORD PTR [ebp-0x18],0x1
65018f8f:	jmp    0x650196b2
65018f94:	or     DWORD PTR [ebp-0x18],0x80
65018f9b:	jmp    0x650196b2
65018fa0:	or     DWORD PTR [ebp-0x18],0x2
65018fa4:	jmp    0x650196b2
65018fa9:	cmp    dl,0x2a
65018fac:	jne    0x65018fce
65018fae:	add    edi,0x4
65018fb1:	mov    DWORD PTR [ebp-0x2c],edi
65018fb4:	mov    edi,DWORD PTR [edi-0x4]
65018fb7:	cmp    edi,esi
65018fb9:	mov    DWORD PTR [ebp-0x40],edi
65018fbc:	jge    0x650196b2
65018fc2:	or     DWORD PTR [ebp-0x18],0x4
65018fc6:	neg    DWORD PTR [ebp-0x40]
65018fc9:	jmp    0x650196b2
65018fce:	mov    eax,DWORD PTR [ebp-0x40]
65018fd1:	imul   eax,eax,0xa
65018fd4:	movsx  ecx,dl
65018fd7:	lea    eax,[eax+ecx*1-0x30]
65018fdb:	mov    DWORD PTR [ebp-0x40],eax
65018fde:	jmp    0x650196b2
65018fe3:	mov    DWORD PTR [ebp-0x20],esi
65018fe6:	jmp    0x650196b2
65018feb:	cmp    dl,0x2a
65018fee:	jne    0x6501900d
65018ff0:	add    edi,0x4
65018ff3:	mov    DWORD PTR [ebp-0x2c],edi
65018ff6:	mov    edi,DWORD PTR [edi-0x4]
65018ff9:	cmp    edi,esi
65018ffb:	mov    DWORD PTR [ebp-0x20],edi
65018ffe:	jge    0x650196b2
65019004:	or     DWORD PTR [ebp-0x20],0xffffffff
65019008:	jmp    0x650196b2
6501900d:	mov    eax,DWORD PTR [ebp-0x20]
65019010:	imul   eax,eax,0xa
65019013:	movsx  ecx,dl
65019016:	lea    eax,[eax+ecx*1-0x30]
6501901a:	mov    DWORD PTR [ebp-0x20],eax
6501901d:	jmp    0x650196b2
65019022:	cmp    dl,0x49
65019025:	je     0x6501906d
65019027:	cmp    dl,0x68
6501902a:	je     0x65019064
6501902c:	cmp    dl,0x6c
6501902f:	je     0x65019046
65019031:	cmp    dl,0x77
65019034:	jne    0x650196b2
6501903a:	or     DWORD PTR [ebp-0x18],0x800
65019041:	jmp    0x650196b2
65019046:	cmp    BYTE PTR [ebx],0x6c
65019049:	jne    0x6501905b
6501904b:	inc    ebx
6501904c:	or     DWORD PTR [ebp-0x18],0x1000
65019053:	mov    DWORD PTR [ebp-0x48],ebx
65019056:	jmp    0x650196b2
6501905b:	or     DWORD PTR [ebp-0x18],0x10
6501905f:	jmp    0x650196b2
65019064:	or     DWORD PTR [ebp-0x18],0x20
65019068:	jmp    0x650196b2
6501906d:	mov    al,BYTE PTR [ebx]
6501906f:	cmp    al,0x36
65019071:	jne    0x6501908a
65019073:	cmp    BYTE PTR [ebx+0x1],0x34
65019077:	jne    0x6501908a
65019079:	inc    ebx
6501907a:	inc    ebx
6501907b:	or     DWORD PTR [ebp-0x18],0x8000
65019082:	mov    DWORD PTR [ebp-0x48],ebx
65019085:	jmp    0x650196b2
6501908a:	cmp    al,0x33
6501908c:	jne    0x650190a5
6501908e:	cmp    BYTE PTR [ebx+0x1],0x32
65019092:	jne    0x650190a5
65019094:	inc    ebx
65019095:	inc    ebx
65019096:	and    DWORD PTR [ebp-0x18],0xffff7fff
6501909d:	mov    DWORD PTR [ebp-0x48],ebx
650190a0:	jmp    0x650196b2
650190a5:	cmp    al,0x64
650190a7:	je     0x650196b2
650190ad:	cmp    al,0x69
650190af:	je     0x650196b2
650190b5:	cmp    al,0x6f
650190b7:	je     0x650196b2
650190bd:	cmp    al,0x75
650190bf:	je     0x650196b2
650190c5:	cmp    al,0x78
650190c7:	je     0x650196b2
650190cd:	cmp    al,0x58
650190cf:	je     0x650196b2
650190d5:	mov    DWORD PTR [ebp-0x74],esi
650190d8:	lea    eax,[ebp-0x64]
650190db:	push   eax
650190dc:	movzx  eax,dl
650190df:	push   eax
650190e0:	mov    DWORD PTR [ebp-0x44],esi
650190e3:	call   0x65019c5f
650190e8:	pop    ecx
650190e9:	test   eax,eax
650190eb:	mov    al,BYTE PTR [ebp-0x19]
650190ee:	pop    ecx
650190ef:	je     0x6501910a
650190f1:	mov    ecx,DWORD PTR [ebp-0x30]
650190f4:	lea    esi,[ebp-0x34]
650190f7:	call   0x65018cf5
650190fc:	mov    al,BYTE PTR [ebx]
650190fe:	inc    ebx
650190ff:	test   al,al
65019101:	mov    DWORD PTR [ebp-0x48],ebx
65019104:	je     0x650196cb
6501910a:	mov    ecx,DWORD PTR [ebp-0x30]
6501910d:	lea    esi,[ebp-0x34]
65019110:	call   0x65018cf5
65019115:	jmp    0x650196b2
6501911a:	movsx  eax,dl
6501911d:	cmp    eax,0x64
65019120:	jg     0x65019298
65019126:	je     0x65019317
6501912c:	cmp    eax,0x53
6501912f:	jg     0x650191e0
65019135:	je     0x65019191
65019137:	sub    eax,0x41
6501913a:	je     0x6501914c
6501913c:	dec    eax
6501913d:	dec    eax
6501913e:	je     0x65019180
65019140:	dec    eax
65019141:	dec    eax
65019142:	je     0x6501914c
65019144:	dec    eax
65019145:	dec    eax
65019146:	jne    0x6501959a
6501914c:	add    dl,0x20
6501914f:	mov    DWORD PTR [ebp-0x78],0x1
65019156:	mov    BYTE PTR [ebp-0x19],dl
65019159:	or     DWORD PTR [ebp-0x18],0x40
6501915d:	cmp    DWORD PTR [ebp-0x20],esi
65019160:	lea    ebx,[ebp-0x14]
65019163:	mov    eax,0x200
65019168:	mov    DWORD PTR [ebp-0x24],ebx
6501916b:	mov    DWORD PTR [ebp-0x68],eax
6501916e:	jge    0x6501933b
65019174:	mov    DWORD PTR [ebp-0x20],0x6
6501917b:	jmp    0x65019389
65019180:	test   WORD PTR [ebp-0x18],0x830
65019186:	jne    0x650191fd
65019188:	or     DWORD PTR [ebp-0x18],0x800
6501918f:	jmp    0x650191fd
65019191:	test   WORD PTR [ebp-0x18],0x830
65019197:	jne    0x650191a0
65019199:	or     DWORD PTR [ebp-0x18],0x800
650191a0:	mov    ecx,DWORD PTR [ebp-0x20]
650191a3:	cmp    ecx,0xffffffff
650191a6:	jne    0x650191ad
650191a8:	mov    ecx,0x7fffffff
650191ad:	add    edi,0x4
650191b0:	test   WORD PTR [ebp-0x18],0x810
650191b6:	mov    DWORD PTR [ebp-0x2c],edi
650191b9:	mov    edi,DWORD PTR [edi-0x4]
650191bc:	mov    DWORD PTR [ebp-0x24],edi
650191bf:	je     0x65019578
650191c5:	cmp    edi,esi
650191c7:	jne    0x650191d1
650191c9:	mov    eax,ds:0x6502c954
650191ce:	mov    DWORD PTR [ebp-0x24],eax
650191d1:	mov    eax,DWORD PTR [ebp-0x24]
650191d4:	mov    DWORD PTR [ebp-0x44],0x1
650191db:	jmp    0x6501956d
650191e0:	sub    eax,0x58
650191e3:	je     0x65019422
650191e9:	dec    eax
650191ea:	dec    eax
650191eb:	je     0x6501924a
650191ed:	sub    eax,ecx
650191ef:	je     0x65019159
650191f5:	dec    eax
650191f6:	dec    eax
650191f7:	jne    0x6501959a
650191fd:	add    edi,0x4
65019200:	test   WORD PTR [ebp-0x18],0x810
65019206:	mov    DWORD PTR [ebp-0x2c],edi
65019209:	je     0x65019232
6501920b:	movzx  eax,WORD PTR [edi-0x4]
6501920f:	push   eax
65019210:	push   0x200
65019215:	lea    eax,[ebp-0x14]
65019218:	push   eax
65019219:	lea    eax,[ebp-0x28]
6501921c:	push   eax
6501921d:	call   0x6501d8a1
65019222:	add    esp,0x10
65019225:	test   eax,eax
65019227:	je     0x6501923f
65019229:	mov    DWORD PTR [ebp-0x50],0x1
65019230:	jmp    0x6501923f
65019232:	mov    al,BYTE PTR [edi-0x4]
65019235:	mov    BYTE PTR [ebp-0x14],al
65019238:	mov    DWORD PTR [ebp-0x28],0x1
6501923f:	lea    eax,[ebp-0x14]
65019242:	mov    DWORD PTR [ebp-0x24],eax
65019245:	jmp    0x6501959a
6501924a:	mov    eax,DWORD PTR [edi]
6501924c:	add    edi,0x4
6501924f:	cmp    eax,esi
65019251:	mov    DWORD PTR [ebp-0x2c],edi
65019254:	je     0x65019284
65019256:	mov    ecx,DWORD PTR [eax+0x4]
65019259:	cmp    ecx,esi
6501925b:	je     0x65019284
6501925d:	test   WORD PTR [ebp-0x18],0x800
65019263:	movsx  eax,WORD PTR [eax]
65019266:	mov    DWORD PTR [ebp-0x24],ecx
65019269:	je     0x6501927c
6501926b:	cdq    
6501926c:	sub    eax,edx
6501926e:	sar    eax,1
65019270:	mov    DWORD PTR [ebp-0x44],0x1
65019277:	jmp    0x65019597
6501927c:	mov    DWORD PTR [ebp-0x44],esi
6501927f:	jmp    0x65019597
65019284:	mov    eax,ds:0x6502c950
65019289:	mov    DWORD PTR [ebp-0x24],eax
6501928c:	push   eax
6501928d:	call   0x65014080
65019292:	pop    ecx
65019293:	jmp    0x65019597
65019298:	cmp    eax,0x70
6501929b:	jg     0x65019427
650192a1:	je     0x6501941b
650192a7:	cmp    eax,0x65
650192aa:	jl     0x6501959a
650192b0:	cmp    eax,0x67
650192b3:	jle    0x65019159
650192b9:	cmp    eax,0x69
650192bc:	je     0x65019317
650192be:	cmp    eax,0x6e
650192c1:	je     0x650192e2
650192c3:	cmp    eax,0x6f
650192c6:	jne    0x6501959a
650192cc:	test   BYTE PTR [ebp-0x18],0x80
650192d0:	mov    DWORD PTR [ebp-0x28],0x8
650192d7:	je     0x65019322
650192d9:	or     DWORD PTR [ebp-0x18],0x200
650192e0:	jmp    0x65019322
650192e2:	mov    esi,DWORD PTR [edi]
650192e4:	add    edi,0x4
650192e7:	mov    DWORD PTR [ebp-0x2c],edi
650192ea:	call   0x6501c938
650192ef:	test   eax,eax
650192f1:	je     0x650196cb
650192f7:	test   BYTE PTR [ebp-0x18],0x20
650192fb:	je     0x65019306
650192fd:	mov    ax,WORD PTR [ebp-0x34]
65019301:	mov    WORD PTR [esi],ax
65019304:	jmp    0x6501930b
65019306:	mov    eax,DWORD PTR [ebp-0x34]
65019309:	mov    DWORD PTR [esi],eax
6501930b:	mov    DWORD PTR [ebp-0x50],0x1
65019312:	jmp    0x6501969f
65019317:	or     DWORD PTR [ebp-0x18],0x40
6501931b:	mov    DWORD PTR [ebp-0x28],0xa
65019322:	mov    ecx,DWORD PTR [ebp-0x18]
65019325:	test   cx,cx
65019328:	jns    0x65019471
6501932e:	mov    eax,DWORD PTR [edi]
65019330:	mov    edx,DWORD PTR [edi+0x4]
65019333:	add    edi,0x8
65019336:	jmp    0x650194a6
6501933b:	jne    0x6501934b
6501933d:	cmp    dl,0x67
65019340:	jne    0x65019389
65019342:	mov    DWORD PTR [ebp-0x20],0x1
65019349:	jmp    0x65019389
6501934b:	cmp    DWORD PTR [ebp-0x20],eax
6501934e:	jle    0x65019353
65019350:	mov    DWORD PTR [ebp-0x20],eax
65019353:	cmp    DWORD PTR [ebp-0x20],0xa3
6501935a:	jle    0x65019389
6501935c:	mov    esi,DWORD PTR [ebp-0x20]
6501935f:	add    esi,0x15d
65019365:	push   esi
65019366:	call   0x65015b90
6501936b:	test   eax,eax
6501936d:	mov    dl,BYTE PTR [ebp-0x19]
65019370:	pop    ecx
65019371:	mov    DWORD PTR [ebp-0x54],eax
65019374:	je     0x65019380
65019376:	mov    DWORD PTR [ebp-0x24],eax
65019379:	mov    DWORD PTR [ebp-0x68],esi
6501937c:	mov    ebx,eax
6501937e:	jmp    0x65019387
65019380:	mov    DWORD PTR [ebp-0x20],0xa3
65019387:	xor    esi,esi
65019389:	mov    eax,DWORD PTR [edi]
6501938b:	add    edi,0x8
6501938e:	mov    DWORD PTR [ebp-0x80],eax
65019391:	mov    eax,DWORD PTR [edi-0x4]
65019394:	mov    DWORD PTR [ebp-0x7c],eax
65019397:	lea    eax,[ebp-0x64]
6501939a:	push   eax
6501939b:	push   DWORD PTR [ebp-0x78]
6501939e:	movsx  eax,dl
650193a1:	push   DWORD PTR [ebp-0x20]
650193a4:	mov    DWORD PTR [ebp-0x2c],edi
650193a7:	push   eax
650193a8:	push   DWORD PTR [ebp-0x68]
650193ab:	lea    eax,[ebp-0x80]
650193ae:	push   ebx
650193af:	push   eax
650193b0:	push   DWORD PTR ds:0x6502cb5c
650193b6:	call   0x650146af
650193bb:	pop    ecx
650193bc:	call   eax
650193be:	mov    edi,DWORD PTR [ebp-0x18]
650193c1:	add    esp,0x1c
650193c4:	and    edi,0x80
650193ca:	je     0x650193e6
650193cc:	cmp    DWORD PTR [ebp-0x20],esi
650193cf:	jne    0x650193e6
650193d1:	lea    eax,[ebp-0x64]
650193d4:	push   eax
650193d5:	push   ebx
650193d6:	push   DWORD PTR ds:0x6502cb68
650193dc:	call   0x650146af
650193e1:	pop    ecx
650193e2:	call   eax
650193e4:	pop    ecx
650193e5:	pop    ecx
650193e6:	cmp    BYTE PTR [ebp-0x19],0x67
650193ea:	jne    0x65019405
650193ec:	cmp    edi,esi
650193ee:	jne    0x65019405
650193f0:	lea    eax,[ebp-0x64]
650193f3:	push   eax
650193f4:	push   ebx
650193f5:	push   DWORD PTR ds:0x6502cb64
650193fb:	call   0x650146af
65019400:	pop    ecx
65019401:	call   eax
65019403:	pop    ecx
65019404:	pop    ecx
65019405:	cmp    BYTE PTR [ebx],0x2d
65019408:	jne    0x65019415
6501940a:	or     DWORD PTR [ebp-0x18],0x100
65019411:	inc    ebx
65019412:	mov    DWORD PTR [ebp-0x24],ebx
65019415:	push   ebx
65019416:	jmp    0x6501928d
6501941b:	mov    DWORD PTR [ebp-0x20],0x8
65019422:	mov    DWORD PTR [ebp-0x4c],ecx
65019425:	jmp    0x65019448
65019427:	sub    eax,0x73
6501942a:	je     0x650191a0
65019430:	dec    eax
65019431:	dec    eax
65019432:	je     0x6501931b
65019438:	sub    eax,0x3
6501943b:	jne    0x6501959a
65019441:	mov    DWORD PTR [ebp-0x4c],0x27
65019448:	test   BYTE PTR [ebp-0x18],0x80
6501944c:	mov    DWORD PTR [ebp-0x28],0x10
65019453:	je     0x65019322
65019459:	mov    al,BYTE PTR [ebp-0x4c]
6501945c:	add    al,0x51
6501945e:	mov    BYTE PTR [ebp-0x38],0x30
65019462:	mov    BYTE PTR [ebp-0x37],al
65019465:	mov    DWORD PTR [ebp-0x3c],0x2
6501946c:	jmp    0x65019322
65019471:	test   cx,0x1000
65019476:	jne    0x6501932e
6501947c:	add    edi,0x4
6501947f:	test   cl,0x20
65019482:	je     0x65019499
65019484:	test   cl,0x40
65019487:	mov    DWORD PTR [ebp-0x2c],edi
6501948a:	je     0x65019492
6501948c:	movsx  eax,WORD PTR [edi-0x4]
65019490:	jmp    0x65019496
65019492:	movzx  eax,WORD PTR [edi-0x4]
65019496:	cdq    
65019497:	jmp    0x650194a9
65019499:	test   cl,0x40
6501949c:	mov    eax,DWORD PTR [edi-0x4]
6501949f:	je     0x650194a4
650194a1:	cdq    
650194a2:	jmp    0x650194a6
650194a4:	xor    edx,edx
650194a6:	mov    DWORD PTR [ebp-0x2c],edi
650194a9:	test   cl,0x40
650194ac:	je     0x650194c6
650194ae:	cmp    edx,esi
650194b0:	jg     0x650194c6
650194b2:	jl     0x650194b8
650194b4:	cmp    eax,esi
650194b6:	jae    0x650194c6
650194b8:	neg    eax
650194ba:	adc    edx,0x0
650194bd:	neg    edx
650194bf:	or     DWORD PTR [ebp-0x18],0x100
650194c6:	test   WORD PTR [ebp-0x18],0x9000
650194cc:	mov    ebx,edx
650194ce:	mov    edi,eax
650194d0:	jne    0x650194d4
650194d2:	xor    ebx,ebx
650194d4:	cmp    DWORD PTR [ebp-0x20],0x0
650194d8:	jge    0x650194e3
650194da:	mov    DWORD PTR [ebp-0x20],0x1
650194e1:	jmp    0x650194f4
650194e3:	and    DWORD PTR [ebp-0x18],0xfffffff7
650194e7:	mov    eax,0x200
650194ec:	cmp    DWORD PTR [ebp-0x20],eax
650194ef:	jle    0x650194f4
650194f1:	mov    DWORD PTR [ebp-0x20],eax
650194f4:	mov    eax,edi
650194f6:	or     eax,ebx
650194f8:	jne    0x650194fd
650194fa:	and    DWORD PTR [ebp-0x3c],eax
650194fd:	lea    esi,[ebp+0x1eb]
65019503:	mov    eax,DWORD PTR [ebp-0x20]
65019506:	dec    DWORD PTR [ebp-0x20]
65019509:	test   eax,eax
6501950b:	jg     0x65019513
6501950d:	mov    eax,edi
6501950f:	or     eax,ebx
65019511:	je     0x65019537
65019513:	mov    eax,DWORD PTR [ebp-0x28]
65019516:	cdq    
65019517:	push   edx
65019518:	push   eax
65019519:	push   ebx
6501951a:	push   edi
6501951b:	call   0x65018c60
65019520:	add    ecx,0x30
65019523:	cmp    ecx,0x39
65019526:	mov    DWORD PTR [ebp-0x68],ebx
65019529:	mov    edi,eax
6501952b:	mov    ebx,edx
6501952d:	jle    0x65019532
6501952f:	add    ecx,DWORD PTR [ebp-0x4c]
65019532:	mov    BYTE PTR [esi],cl
65019534:	dec    esi
65019535:	jmp    0x65019503
65019537:	lea    eax,[ebp+0x1eb]
6501953d:	sub    eax,esi
6501953f:	inc    esi
65019540:	test   WORD PTR [ebp-0x18],0x200
65019546:	mov    DWORD PTR [ebp-0x28],eax
65019549:	mov    DWORD PTR [ebp-0x24],esi
6501954c:	je     0x6501959a
6501954e:	test   eax,eax
65019550:	je     0x65019559
65019552:	mov    ecx,esi
65019554:	cmp    BYTE PTR [ecx],0x30
65019557:	je     0x6501959a
65019559:	dec    DWORD PTR [ebp-0x24]
6501955c:	mov    ecx,DWORD PTR [ebp-0x24]
6501955f:	mov    BYTE PTR [ecx],0x30
65019562:	inc    eax
65019563:	jmp    0x65019597
65019565:	dec    ecx
65019566:	cmp    WORD PTR [eax],si
65019569:	je     0x65019571
6501956b:	inc    eax
6501956c:	inc    eax
6501956d:	cmp    ecx,esi
6501956f:	jne    0x65019565
65019571:	sub    eax,DWORD PTR [ebp-0x24]
65019574:	sar    eax,1
65019576:	jmp    0x65019597
65019578:	cmp    edi,esi
6501957a:	jne    0x65019584
6501957c:	mov    eax,ds:0x6502c950
65019581:	mov    DWORD PTR [ebp-0x24],eax
65019584:	mov    eax,DWORD PTR [ebp-0x24]
65019587:	jmp    0x65019590
65019589:	dec    ecx
6501958a:	cmp    BYTE PTR [eax],0x0
6501958d:	je     0x65019594
6501958f:	inc    eax
65019590:	cmp    ecx,esi
65019592:	jne    0x65019589
65019594:	sub    eax,DWORD PTR [ebp-0x24]
65019597:	mov    DWORD PTR [ebp-0x28],eax
6501959a:	cmp    DWORD PTR [ebp-0x50],0x0
6501959e:	jne    0x6501969f
650195a4:	mov    eax,DWORD PTR [ebp-0x18]
650195a7:	test   al,0x40
650195a9:	je     0x650195d0
650195ab:	test   ax,0x100
650195af:	je     0x650195b7
650195b1:	mov    BYTE PTR [ebp-0x38],0x2d
650195b5:	jmp    0x650195c9
650195b7:	test   al,0x1
650195b9:	je     0x650195c1
650195bb:	mov    BYTE PTR [ebp-0x38],0x2b
650195bf:	jmp    0x650195c9
650195c1:	test   al,0x2
650195c3:	je     0x650195d0
650195c5:	mov    BYTE PTR [ebp-0x38],0x20
650195c9:	mov    DWORD PTR [ebp-0x3c],0x1
650195d0:	mov    ebx,DWORD PTR [ebp-0x40]
650195d3:	sub    ebx,DWORD PTR [ebp-0x28]
650195d6:	sub    ebx,DWORD PTR [ebp-0x3c]
650195d9:	test   BYTE PTR [ebp-0x18],0xc
650195dd:	jne    0x650195f0
650195df:	push   DWORD PTR [ebp-0x30]
650195e2:	lea    eax,[ebp-0x34]
650195e5:	push   ebx
650195e6:	push   0x20
650195e8:	call   0x65018d28
650195ed:	add    esp,0xc
650195f0:	push   DWORD PTR [ebp-0x3c]
650195f3:	mov    edi,DWORD PTR [ebp-0x30]
650195f6:	lea    eax,[ebp-0x34]
650195f9:	lea    ecx,[ebp-0x38]
650195fc:	call   0x65018d4c
65019601:	test   BYTE PTR [ebp-0x18],0x8
65019605:	pop    ecx
65019606:	je     0x6501961d
65019608:	test   BYTE PTR [ebp-0x18],0x4
6501960c:	jne    0x6501961d
6501960e:	push   edi
6501960f:	push   ebx
65019610:	push   0x30
65019612:	lea    eax,[ebp-0x34]
65019615:	call   0x65018d28
6501961a:	add    esp,0xc
6501961d:	cmp    DWORD PTR [ebp-0x44],0x0
65019621:	mov    eax,DWORD PTR [ebp-0x28]
65019624:	je     0x65019677
65019626:	test   eax,eax
65019628:	jle    0x65019677
6501962a:	mov    esi,DWORD PTR [ebp-0x24]
6501962d:	mov    DWORD PTR [ebp-0x68],eax
65019630:	movzx  eax,WORD PTR [esi]
65019633:	dec    DWORD PTR [ebp-0x68]
65019636:	push   eax
65019637:	push   0x6
65019639:	lea    eax,[ebp+0x1ec]
6501963f:	push   eax
65019640:	lea    eax,[ebp-0x70]
65019643:	inc    esi
65019644:	push   eax
65019645:	inc    esi
65019646:	call   0x6501d8a1
6501964b:	add    esp,0x10
6501964e:	test   eax,eax
65019650:	jne    0x65019671
65019652:	cmp    DWORD PTR [ebp-0x70],eax
65019655:	je     0x65019671
65019657:	push   DWORD PTR [ebp-0x70]
6501965a:	lea    eax,[ebp-0x34]
6501965d:	lea    ecx,[ebp+0x1ec]
65019663:	call   0x65018d4c
65019668:	cmp    DWORD PTR [ebp-0x68],0x0
6501966c:	pop    ecx
6501966d:	jne    0x65019630
6501966f:	jmp    0x65019684
65019671:	or     DWORD PTR [ebp-0x34],0xffffffff
65019675:	jmp    0x65019684
65019677:	mov    ecx,DWORD PTR [ebp-0x24]
6501967a:	push   eax
6501967b:	lea    eax,[ebp-0x34]
6501967e:	call   0x65018d4c
65019683:	pop    ecx
65019684:	cmp    DWORD PTR [ebp-0x34],0x0
65019688:	jl     0x6501969f
6501968a:	test   BYTE PTR [ebp-0x18],0x4
6501968e:	je     0x6501969f
65019690:	push   edi
65019691:	push   ebx
65019692:	push   0x20
65019694:	lea    eax,[ebp-0x34]
65019697:	call   0x65018d28
6501969c:	add    esp,0xc
6501969f:	cmp    DWORD PTR [ebp-0x54],0x0
650196a3:	je     0x650196b2
650196a5:	push   DWORD PTR [ebp-0x54]
650196a8:	call   0x65013746
650196ad:	and    DWORD PTR [ebp-0x54],0x0
650196b1:	pop    ecx
650196b2:	mov    ebx,DWORD PTR [ebp-0x48]
650196b5:	mov    al,BYTE PTR [ebx]
650196b7:	test   al,al
650196b9:	mov    BYTE PTR [ebp-0x19],al
650196bc:	je     0x650196e2
650196be:	mov    ecx,DWORD PTR [ebp-0x74]
650196c1:	mov    edi,DWORD PTR [ebp-0x2c]
650196c4:	mov    dl,al
650196c6:	jmp    0x65018ef4
650196cb:	call   0x65014580
650196d0:	mov    DWORD PTR [eax],0x16
650196d6:	xor    eax,eax
650196d8:	push   eax
650196d9:	push   eax
650196da:	push   eax
650196db:	push   eax
650196dc:	push   eax
650196dd:	jmp    0x65018e06
650196e2:	cmp    BYTE PTR [ebp-0x58],0x0
650196e6:	je     0x650196ef
650196e8:	mov    eax,DWORD PTR [ebp-0x5c]
650196eb:	and    DWORD PTR [eax+0x70],0xfffffffd
650196ef:	mov    eax,DWORD PTR [ebp-0x34]
650196f2:	mov    ecx,DWORD PTR [ebp+0x1f4]
650196f8:	pop    edi
650196f9:	pop    esi
650196fa:	xor    ecx,ebp
650196fc:	pop    ebx
650196fd:	call   0x6501292c
65019702:	add    ebp,0x1f8
65019708:	leave  
65019709:	ret    
6501970a:	fcom   DWORD PTR [eax-0x70c09aff]
65019710:	add    DWORD PTR [ebp+0x5a],esp
65019713:	pop    DWORD PTR [ecx]
65019715:	gs test eax,0xe365018f
6501971b:	pop    DWORD PTR [ecx]
6501971d:	gs jmp 0x650196af
65019720:	add    DWORD PTR [ebp+0x22],esp
65019723:	nop
65019724:	add    DWORD PTR [ebp+0x1a],esp
65019727:	xchg   ecx,eax
65019728:	add    DWORD PTR [ebp+0x55],esp
6501972b:	mov    ebp,esp
6501972d:	sub    esp,0x20
65019730:	push   ebx
65019731:	xor    ebx,ebx
65019733:	cmp    DWORD PTR [ebp+0x14],ebx
65019736:	jne    0x65019758
65019738:	call   0x65014580
6501973d:	push   ebx
6501973e:	push   ebx
6501973f:	push   ebx
65019740:	push   ebx
65019741:	push   ebx
65019742:	mov    DWORD PTR [eax],0x16
65019748:	call   0x6501241f
6501974d:	add    esp,0x14
65019750:	or     eax,0xffffffff
65019753:	jmp    0x650197f1
65019758:	push   esi
65019759:	mov    esi,DWORD PTR [ebp+0xc]
6501975c:	push   edi
6501975d:	mov    edi,DWORD PTR [ebp+0x10]
65019760:	cmp    edi,ebx
65019762:	je     0x65019785
65019764:	cmp    esi,ebx
65019766:	jne    0x65019785
65019768:	call   0x65014580
6501976d:	push   ebx
6501976e:	push   ebx
6501976f:	push   ebx
65019770:	push   ebx
65019771:	push   ebx
65019772:	mov    DWORD PTR [eax],0x16
65019778:	call   0x6501241f
6501977d:	add    esp,0x14
65019780:	or     eax,0xffffffff
65019783:	jmp    0x650197ef
65019785:	mov    eax,0x7fffffff
6501978a:	cmp    edi,eax
6501978c:	mov    DWORD PTR [ebp-0x1c],eax
6501978f:	ja     0x65019794
65019791:	mov    DWORD PTR [ebp-0x1c],edi
65019794:	push   DWORD PTR [ebp+0x1c]
65019797:	lea    eax,[ebp-0x20]
6501979a:	push   DWORD PTR [ebp+0x18]
6501979d:	mov    DWORD PTR [ebp-0x14],0x42
650197a4:	push   DWORD PTR [ebp+0x14]
650197a7:	mov    DWORD PTR [ebp-0x18],esi
650197aa:	push   eax
650197ab:	mov    DWORD PTR [ebp-0x20],esi
650197ae:	call   DWORD PTR [ebp+0x8]
650197b1:	add    esp,0x10
650197b4:	cmp    esi,ebx
650197b6:	mov    DWORD PTR [ebp+0x14],eax
650197b9:	je     0x650197ef
650197bb:	cmp    eax,ebx
650197bd:	jl     0x650197e1
650197bf:	dec    DWORD PTR [ebp-0x1c]
650197c2:	js     0x650197cb
650197c4:	mov    eax,DWORD PTR [ebp-0x20]
650197c7:	mov    BYTE PTR [eax],bl
650197c9:	jmp    0x650197dc
650197cb:	lea    eax,[ebp-0x20]
650197ce:	push   eax
650197cf:	push   ebx
650197d0:	call   0x650169c5
650197d5:	cmp    eax,0xffffffff
650197d8:	pop    ecx
650197d9:	pop    ecx
650197da:	je     0x650197e1
650197dc:	mov    eax,DWORD PTR [ebp+0x14]
650197df:	jmp    0x650197ef
650197e1:	xor    eax,eax
650197e3:	cmp    DWORD PTR [ebp-0x1c],ebx
650197e6:	mov    BYTE PTR [esi+edi*1-0x1],bl
650197ea:	setge  al
650197ed:	dec    eax
650197ee:	dec    eax
650197ef:	pop    edi
650197f0:	pop    esi
650197f1:	pop    ebx
650197f2:	leave  
650197f3:	ret    
650197f4:	push   ebp
650197f5:	mov    ebp,esp
650197f7:	push   ebx
650197f8:	xor    ebx,ebx
650197fa:	cmp    DWORD PTR [ebp+0x10],ebx
650197fd:	jne    0x6501981c
650197ff:	call   0x65014580
65019804:	push   ebx
65019805:	push   ebx
65019806:	push   ebx
65019807:	push   ebx
65019808:	push   ebx
65019809:	mov    DWORD PTR [eax],0x16
6501980f:	call   0x6501241f
65019814:	add    esp,0x14
65019817:	or     eax,0xffffffff
6501981a:	jmp    0x65019877
6501981c:	push   esi
6501981d:	mov    esi,DWORD PTR [ebp+0x8]
65019820:	cmp    esi,ebx
65019822:	je     0x65019829
65019824:	cmp    DWORD PTR [ebp+0xc],ebx
65019827:	ja     0x65019836
65019829:	call   0x65014580
6501982e:	mov    DWORD PTR [eax],0x16
65019834:	jmp    0x65019866
65019836:	push   DWORD PTR [ebp+0x18]
65019839:	push   DWORD PTR [ebp+0x14]
6501983c:	push   DWORD PTR [ebp+0x10]
6501983f:	push   DWORD PTR [ebp+0xc]
65019842:	push   esi
65019843:	push   0x6501ca78
65019848:	call   0x6501972a
6501984d:	add    esp,0x18
65019850:	cmp    eax,ebx
65019852:	jge    0x65019856
65019854:	mov    BYTE PTR [esi],bl
65019856:	cmp    eax,0xfffffffe
65019859:	jne    0x65019876
6501985b:	call   0x65014580
65019860:	mov    DWORD PTR [eax],0x22
65019866:	push   ebx
65019867:	push   ebx
65019868:	push   ebx
65019869:	push   ebx
6501986a:	push   ebx
6501986b:	call   0x6501241f
65019870:	add    esp,0x14
65019873:	or     eax,0xffffffff
65019876:	pop    esi
65019877:	pop    ebx
65019878:	pop    ebp
65019879:	ret    
6501987a:	push   ebp
6501987b:	mov    ebp,esp
6501987d:	sub    esp,0x14
65019880:	mov    eax,ds:0x6502c09c
65019885:	xor    eax,ebp
65019887:	mov    DWORD PTR [ebp-0x4],eax
6501988a:	push   ebx
6501988b:	push   esi
6501988c:	xor    ebx,ebx
6501988e:	cmp    DWORD PTR ds:0x6502da90,ebx
65019894:	push   edi
65019895:	mov    esi,ecx
65019897:	jne    0x650198d1
65019899:	push   ebx
6501989a:	push   ebx
6501989b:	xor    edi,edi
6501989d:	inc    edi
6501989e:	push   edi
6501989f:	push   0x650266d8
650198a4:	push   0x100
650198a9:	push   ebx
650198aa:	call   DWORD PTR ds:0x65024144
650198b0:	test   eax,eax
650198b2:	je     0x650198bc
650198b4:	mov    DWORD PTR ds:0x6502da90,edi
650198ba:	jmp    0x650198d1
650198bc:	call   DWORD PTR ds:0x6502403c
650198c2:	cmp    eax,0x78
650198c5:	jne    0x650198d1
650198c7:	mov    DWORD PTR ds:0x6502da90,0x2
650198d1:	cmp    DWORD PTR [ebp+0x14],ebx
650198d4:	jle    0x650198f8
650198d6:	mov    ecx,DWORD PTR [ebp+0x14]
650198d9:	mov    eax,DWORD PTR [ebp+0x10]
650198dc:	dec    ecx
650198dd:	cmp    BYTE PTR [eax],bl
650198df:	je     0x650198e9
650198e1:	inc    eax
650198e2:	cmp    ecx,ebx
650198e4:	jne    0x650198dc
650198e6:	or     ecx,0xffffffff
650198e9:	mov    eax,DWORD PTR [ebp+0x14]
650198ec:	sub    eax,ecx
650198ee:	dec    eax
650198ef:	cmp    eax,DWORD PTR [ebp+0x14]
650198f2:	jge    0x650198f5
650198f4:	inc    eax
650198f5:	mov    DWORD PTR [ebp+0x14],eax
650198f8:	mov    eax,ds:0x6502da90
650198fd:	cmp    eax,0x2
65019900:	je     0x65019ab1
65019906:	cmp    eax,ebx
65019908:	je     0x65019ab1
6501990e:	cmp    eax,0x1
65019911:	jne    0x65019ae2
65019917:	cmp    DWORD PTR [ebp+0x20],ebx
6501991a:	mov    DWORD PTR [ebp-0x8],ebx
6501991d:	jne    0x65019927
6501991f:	mov    eax,DWORD PTR [esi]
65019921:	mov    eax,DWORD PTR [eax+0x4]
65019924:	mov    DWORD PTR [ebp+0x20],eax
65019927:	mov    esi,DWORD PTR ds:0x6502401c
6501992d:	xor    eax,eax
6501992f:	cmp    DWORD PTR [ebp+0x24],ebx
65019932:	push   ebx
65019933:	push   ebx
65019934:	push   DWORD PTR [ebp+0x14]
65019937:	setne  al
6501993a:	push   DWORD PTR [ebp+0x10]
6501993d:	lea    eax,[eax*8+0x1]
65019944:	push   eax
65019945:	push   DWORD PTR [ebp+0x20]
65019948:	call   esi
6501994a:	mov    edi,eax
6501994c:	cmp    edi,ebx
6501994e:	je     0x65019ae2
65019954:	jle    0x65019999
65019956:	push   0xffffffe0
65019958:	xor    edx,edx
6501995a:	pop    eax
6501995b:	div    edi
6501995d:	cmp    eax,0x2
65019960:	jb     0x65019999
65019962:	lea    eax,[edi+edi*1+0x8]
65019966:	cmp    eax,0x400
6501996b:	ja     0x65019980
6501996d:	call   0x65013030
65019972:	mov    eax,esp
65019974:	cmp    eax,ebx
65019976:	je     0x65019994
65019978:	mov    DWORD PTR [eax],0xcccc
6501997e:	jmp    0x65019991
65019980:	push   eax
65019981:	call   0x65013823
65019986:	cmp    eax,ebx
65019988:	pop    ecx
65019989:	je     0x65019994
6501998b:	mov    DWORD PTR [eax],0xdddd
65019991:	add    eax,0x8
65019994:	mov    DWORD PTR [ebp-0xc],eax
65019997:	jmp    0x6501999c
65019999:	mov    DWORD PTR [ebp-0xc],ebx
6501999c:	cmp    DWORD PTR [ebp-0xc],ebx
6501999f:	je     0x65019ae2
650199a5:	push   edi
650199a6:	push   DWORD PTR [ebp-0xc]
650199a9:	push   DWORD PTR [ebp+0x14]
650199ac:	push   DWORD PTR [ebp+0x10]
650199af:	push   0x1
650199b1:	push   DWORD PTR [ebp+0x20]
650199b4:	call   esi
650199b6:	test   eax,eax
650199b8:	je     0x65019aa0
650199be:	mov    esi,DWORD PTR ds:0x65024144
650199c4:	push   ebx
650199c5:	push   ebx
650199c6:	push   edi
650199c7:	push   DWORD PTR [ebp-0xc]
650199ca:	push   DWORD PTR [ebp+0xc]
650199cd:	push   DWORD PTR [ebp+0x8]
650199d0:	call   esi
650199d2:	mov    ecx,eax
650199d4:	cmp    ecx,ebx
650199d6:	mov    DWORD PTR [ebp-0x8],ecx
650199d9:	je     0x65019aa0
650199df:	test   WORD PTR [ebp+0xc],0x400
650199e5:	je     0x65019a10
650199e7:	cmp    DWORD PTR [ebp+0x1c],ebx
650199ea:	je     0x65019aa0
650199f0:	cmp    ecx,DWORD PTR [ebp+0x1c]
650199f3:	jg     0x65019aa0
650199f9:	push   DWORD PTR [ebp+0x1c]
650199fc:	push   DWORD PTR [ebp+0x18]
650199ff:	push   edi
65019a00:	push   DWORD PTR [ebp-0xc]
65019a03:	push   DWORD PTR [ebp+0xc]
65019a06:	push   DWORD PTR [ebp+0x8]
65019a09:	call   esi
65019a0b:	jmp    0x65019aa0
65019a10:	cmp    ecx,ebx
65019a12:	jle    0x65019a59
65019a14:	push   0xffffffe0
65019a16:	xor    edx,edx
65019a18:	pop    eax
65019a19:	div    ecx
65019a1b:	cmp    eax,0x2
65019a1e:	jb     0x65019a59
65019a20:	lea    eax,[ecx+ecx*1+0x8]
65019a24:	cmp    eax,0x400
65019a29:	ja     0x65019a41
65019a2b:	call   0x65013030
65019a30:	mov    esi,esp
65019a32:	cmp    esi,ebx
65019a34:	je     0x65019aa0
65019a36:	mov    DWORD PTR [esi],0xcccc
65019a3c:	add    esi,0x8
65019a3f:	jmp    0x65019a5b
65019a41:	push   eax
65019a42:	call   0x65013823
65019a47:	cmp    eax,ebx
65019a49:	pop    ecx
65019a4a:	je     0x65019a55
65019a4c:	mov    DWORD PTR [eax],0xdddd
65019a52:	add    eax,0x8
65019a55:	mov    esi,eax
65019a57:	jmp    0x65019a5b
65019a59:	xor    esi,esi
65019a5b:	cmp    esi,ebx
65019a5d:	je     0x65019aa0
65019a5f:	push   DWORD PTR [ebp-0x8]
65019a62:	push   esi
65019a63:	push   edi
65019a64:	push   DWORD PTR [ebp-0xc]
65019a67:	push   DWORD PTR [ebp+0xc]
65019a6a:	push   DWORD PTR [ebp+0x8]
65019a6d:	call   DWORD PTR ds:0x65024144
65019a73:	test   eax,eax
65019a75:	je     0x65019a99
65019a77:	cmp    DWORD PTR [ebp+0x1c],ebx
65019a7a:	push   ebx
65019a7b:	push   ebx
65019a7c:	jne    0x65019a82
65019a7e:	push   ebx
65019a7f:	push   ebx
65019a80:	jmp    0x65019a88
65019a82:	push   DWORD PTR [ebp+0x1c]
65019a85:	push   DWORD PTR [ebp+0x18]
65019a88:	push   DWORD PTR [ebp-0x8]
65019a8b:	push   esi
65019a8c:	push   ebx
65019a8d:	push   DWORD PTR [ebp+0x20]
65019a90:	call   DWORD PTR ds:0x65024020
65019a96:	mov    DWORD PTR [ebp-0x8],eax
65019a99:	push   esi
65019a9a:	call   0x65012dc2
65019a9f:	pop    ecx
65019aa0:	push   DWORD PTR [ebp-0xc]
65019aa3:	call   0x65012dc2
65019aa8:	mov    eax,DWORD PTR [ebp-0x8]
65019aab:	pop    ecx
65019aac:	jmp    0x65019c0a
65019ab1:	cmp    DWORD PTR [ebp+0x8],ebx
65019ab4:	mov    DWORD PTR [ebp-0xc],ebx
65019ab7:	mov    DWORD PTR [ebp-0x10],ebx
65019aba:	jne    0x65019ac4
65019abc:	mov    eax,DWORD PTR [esi]
65019abe:	mov    eax,DWORD PTR [eax+0x14]
65019ac1:	mov    DWORD PTR [ebp+0x8],eax
65019ac4:	cmp    DWORD PTR [ebp+0x20],ebx
65019ac7:	jne    0x65019ad1
65019ac9:	mov    eax,DWORD PTR [esi]
65019acb:	mov    eax,DWORD PTR [eax+0x4]
65019ace:	mov    DWORD PTR [ebp+0x20],eax
65019ad1:	push   DWORD PTR [ebp+0x8]
65019ad4:	call   0x6501d428
65019ad9:	cmp    eax,0xffffffff
65019adc:	pop    ecx
65019add:	mov    DWORD PTR [ebp-0x14],eax
65019ae0:	jne    0x65019ae9
65019ae2:	xor    eax,eax
65019ae4:	jmp    0x65019c0a
65019ae9:	cmp    eax,DWORD PTR [ebp+0x20]
65019aec:	je     0x65019bcd
65019af2:	push   ebx
65019af3:	push   ebx
65019af4:	lea    ecx,[ebp+0x14]
65019af7:	push   ecx
65019af8:	push   DWORD PTR [ebp+0x10]
65019afb:	push   eax
65019afc:	push   DWORD PTR [ebp+0x20]
65019aff:	call   0x6501d46f
65019b04:	add    esp,0x18
65019b07:	cmp    eax,ebx
65019b09:	mov    DWORD PTR [ebp-0xc],eax
65019b0c:	je     0x65019ae2
65019b0e:	mov    esi,DWORD PTR ds:0x65024140
65019b14:	push   ebx
65019b15:	push   ebx
65019b16:	push   DWORD PTR [ebp+0x14]
65019b19:	push   eax
65019b1a:	push   DWORD PTR [ebp+0xc]
65019b1d:	push   DWORD PTR [ebp+0x8]
65019b20:	call   esi
65019b22:	cmp    eax,ebx
65019b24:	mov    DWORD PTR [ebp-0x8],eax
65019b27:	jne    0x65019b30
65019b29:	xor    esi,esi
65019b2b:	jmp    0x65019be7
65019b30:	jle    0x65019b6f
65019b32:	cmp    eax,0xffffffe0
65019b35:	ja     0x65019b6f
65019b37:	add    eax,0x8
65019b3a:	cmp    eax,0x400
65019b3f:	ja     0x65019b57
65019b41:	call   0x65013030
65019b46:	mov    edi,esp
65019b48:	cmp    edi,ebx
65019b4a:	je     0x65019b29
65019b4c:	mov    DWORD PTR [edi],0xcccc
65019b52:	add    edi,0x8
65019b55:	jmp    0x65019b71
65019b57:	push   eax
65019b58:	call   0x65013823
65019b5d:	cmp    eax,ebx
65019b5f:	pop    ecx
65019b60:	je     0x65019b6b
65019b62:	mov    DWORD PTR [eax],0xdddd
65019b68:	add    eax,0x8
65019b6b:	mov    edi,eax
65019b6d:	jmp    0x65019b71
65019b6f:	xor    edi,edi
65019b71:	cmp    edi,ebx
65019b73:	je     0x65019b29
65019b75:	push   DWORD PTR [ebp-0x8]
65019b78:	push   ebx
65019b79:	push   edi
65019b7a:	call   0x65012fb0
65019b7f:	add    esp,0xc
65019b82:	push   DWORD PTR [ebp-0x8]
65019b85:	push   edi
65019b86:	push   DWORD PTR [ebp+0x14]
65019b89:	push   DWORD PTR [ebp-0xc]
65019b8c:	push   DWORD PTR [ebp+0xc]
65019b8f:	push   DWORD PTR [ebp+0x8]
65019b92:	call   esi
65019b94:	cmp    eax,ebx
65019b96:	mov    DWORD PTR [ebp-0x8],eax
65019b99:	jne    0x65019b9f
65019b9b:	xor    esi,esi
65019b9d:	jmp    0x65019bc4
65019b9f:	push   DWORD PTR [ebp+0x1c]
65019ba2:	lea    eax,[ebp-0x8]
65019ba5:	push   DWORD PTR [ebp+0x18]
65019ba8:	push   eax
65019ba9:	push   edi
65019baa:	push   DWORD PTR [ebp+0x20]
65019bad:	push   DWORD PTR [ebp-0x14]
65019bb0:	call   0x6501d46f
65019bb5:	mov    esi,eax
65019bb7:	mov    DWORD PTR [ebp-0x10],esi
65019bba:	add    esp,0x18
65019bbd:	neg    esi
65019bbf:	sbb    esi,esi
65019bc1:	and    esi,DWORD PTR [ebp-0x8]
65019bc4:	push   edi
65019bc5:	call   0x65012dc2
65019bca:	pop    ecx
65019bcb:	jmp    0x65019be7
65019bcd:	push   DWORD PTR [ebp+0x1c]
65019bd0:	push   DWORD PTR [ebp+0x18]
65019bd3:	push   DWORD PTR [ebp+0x14]
65019bd6:	push   DWORD PTR [ebp+0x10]
65019bd9:	push   DWORD PTR [ebp+0xc]
65019bdc:	push   DWORD PTR [ebp+0x8]
65019bdf:	call   DWORD PTR ds:0x65024140
65019be5:	mov    esi,eax
65019be7:	cmp    DWORD PTR [ebp-0xc],ebx
65019bea:	je     0x65019bf5
65019bec:	push   DWORD PTR [ebp-0xc]
65019bef:	call   0x65013746
65019bf4:	pop    ecx
65019bf5:	mov    eax,DWORD PTR [ebp-0x10]
65019bf8:	cmp    eax,ebx
65019bfa:	je     0x65019c08
65019bfc:	cmp    DWORD PTR [ebp+0x18],eax
65019bff:	je     0x65019c08
65019c01:	push   eax
65019c02:	call   0x65013746
65019c07:	pop    ecx
65019c08:	mov    eax,esi
65019c0a:	lea    esp,[ebp-0x20]
65019c0d:	pop    edi
65019c0e:	pop    esi
65019c0f:	pop    ebx
65019c10:	mov    ecx,DWORD PTR [ebp-0x4]
65019c13:	xor    ecx,ebp
65019c15:	call   0x6501292c
65019c1a:	leave  
65019c1b:	ret    
65019c1c:	push   ebp
65019c1d:	mov    ebp,esp
65019c1f:	sub    esp,0x10
65019c22:	push   DWORD PTR [ebp+0x8]
65019c25:	lea    ecx,[ebp-0x10]
65019c28:	call   0x65012acf
65019c2d:	push   DWORD PTR [ebp+0x28]
65019c30:	lea    ecx,[ebp-0x10]
65019c33:	push   DWORD PTR [ebp+0x24]
65019c36:	push   DWORD PTR [ebp+0x20]
65019c39:	push   DWORD PTR [ebp+0x1c]
65019c3c:	push   DWORD PTR [ebp+0x18]
65019c3f:	push   DWORD PTR [ebp+0x14]
65019c42:	push   DWORD PTR [ebp+0x10]
65019c45:	push   DWORD PTR [ebp+0xc]
65019c48:	call   0x6501987a
65019c4d:	add    esp,0x20
65019c50:	cmp    BYTE PTR [ebp-0x4],0x0
65019c54:	je     0x65019c5d
65019c56:	mov    ecx,DWORD PTR [ebp-0x8]
65019c59:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019c5d:	leave  
65019c5e:	ret    
65019c5f:	push   ebp
65019c60:	mov    ebp,esp
65019c62:	sub    esp,0x10
65019c65:	push   DWORD PTR [ebp+0xc]
65019c68:	lea    ecx,[ebp-0x10]
65019c6b:	call   0x65012acf
65019c70:	movzx  eax,BYTE PTR [ebp+0x8]
65019c74:	mov    ecx,DWORD PTR [ebp-0x10]
65019c77:	mov    ecx,DWORD PTR [ecx+0xc8]
65019c7d:	movzx  eax,WORD PTR [ecx+eax*2]
65019c81:	and    eax,0x8000
65019c86:	cmp    BYTE PTR [ebp-0x4],0x0
65019c8a:	je     0x65019c93
65019c8c:	mov    ecx,DWORD PTR [ebp-0x8]
65019c8f:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019c93:	leave  
65019c94:	ret    
65019c95:	push   0x0
65019c97:	push   DWORD PTR [esp+0x8]
65019c9b:	call   0x65019c5f
65019ca0:	pop    ecx
65019ca1:	pop    ecx
65019ca2:	ret    
65019ca3:	push   ebp
65019ca4:	mov    ebp,esp
65019ca6:	sub    esp,0x18
65019ca9:	push   ebx
65019caa:	push   DWORD PTR [ebp+0x10]
65019cad:	lea    ecx,[ebp-0x18]
65019cb0:	call   0x65012acf
65019cb5:	mov    ebx,DWORD PTR [ebp+0x8]
65019cb8:	lea    eax,[ebx+0x1]
65019cbb:	cmp    eax,0x100
65019cc0:	ja     0x65019cd1
65019cc2:	mov    eax,DWORD PTR [ebp-0x18]
65019cc5:	mov    eax,DWORD PTR [eax+0xc8]
65019ccb:	movzx  eax,WORD PTR [eax+ebx*2]
65019ccf:	jmp    0x65019d46
65019cd1:	mov    DWORD PTR [ebp+0x8],ebx
65019cd4:	sar    DWORD PTR [ebp+0x8],0x8
65019cd8:	lea    eax,[ebp-0x18]
65019cdb:	push   eax
65019cdc:	mov    eax,DWORD PTR [ebp+0x8]
65019cdf:	and    eax,0xff
65019ce4:	push   eax
65019ce5:	call   0x65019c5f
65019cea:	test   eax,eax
65019cec:	pop    ecx
65019ced:	pop    ecx
65019cee:	je     0x65019d02
65019cf0:	mov    al,BYTE PTR [ebp+0x8]
65019cf3:	push   0x2
65019cf5:	mov    BYTE PTR [ebp-0x8],al
65019cf8:	mov    BYTE PTR [ebp-0x7],bl
65019cfb:	mov    BYTE PTR [ebp-0x6],0x0
65019cff:	pop    ecx
65019d00:	jmp    0x65019d0c
65019d02:	xor    ecx,ecx
65019d04:	mov    BYTE PTR [ebp-0x8],bl
65019d07:	mov    BYTE PTR [ebp-0x7],0x0
65019d0b:	inc    ecx
65019d0c:	mov    eax,DWORD PTR [ebp-0x18]
65019d0f:	push   0x1
65019d11:	push   DWORD PTR [eax+0x14]
65019d14:	push   DWORD PTR [eax+0x4]
65019d17:	lea    eax,[ebp-0x4]
65019d1a:	push   eax
65019d1b:	push   ecx
65019d1c:	lea    eax,[ebp-0x8]
65019d1f:	push   eax
65019d20:	lea    eax,[ebp-0x18]
65019d23:	push   0x1
65019d25:	push   eax
65019d26:	call   0x6501b805
65019d2b:	add    esp,0x20
65019d2e:	test   eax,eax
65019d30:	jne    0x65019d42
65019d32:	cmp    BYTE PTR [ebp-0xc],al
65019d35:	je     0x65019d3e
65019d37:	mov    eax,DWORD PTR [ebp-0x10]
65019d3a:	and    DWORD PTR [eax+0x70],0xfffffffd
65019d3e:	xor    eax,eax
65019d40:	jmp    0x65019d56
65019d42:	movzx  eax,WORD PTR [ebp-0x4]
65019d46:	and    eax,DWORD PTR [ebp+0xc]
65019d49:	cmp    BYTE PTR [ebp-0xc],0x0
65019d4d:	je     0x65019d56
65019d4f:	mov    ecx,DWORD PTR [ebp-0x10]
65019d52:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019d56:	pop    ebx
65019d57:	leave  
65019d58:	ret    
65019d59:	push   esi
65019d5a:	push   edi
65019d5b:	xor    esi,esi
65019d5d:	mov    edi,0x6502da98
65019d62:	cmp    DWORD PTR [esi*8+0x6502c95c],0x1
65019d6a:	jne    0x65019d8a
65019d6c:	lea    eax,[esi*8+0x6502c958]
65019d73:	mov    DWORD PTR [eax],edi
65019d75:	push   0xfa0
65019d7a:	push   DWORD PTR [eax]
65019d7c:	add    edi,0x18
65019d7f:	call   0x6501b588
65019d84:	test   eax,eax
65019d86:	pop    ecx
65019d87:	pop    ecx
65019d88:	je     0x65019d96
65019d8a:	inc    esi
65019d8b:	cmp    esi,0x24
65019d8e:	jl     0x65019d62
65019d90:	xor    eax,eax
65019d92:	inc    eax
65019d93:	pop    edi
65019d94:	pop    esi
65019d95:	ret    
65019d96:	and    DWORD PTR [esi*8+0x6502c958],0x0
65019d9e:	xor    eax,eax
65019da0:	jmp    0x65019d93
65019da2:	push   ebx
65019da3:	mov    ebx,DWORD PTR ds:0x650240a0
65019da9:	push   esi
65019daa:	mov    esi,0x6502c958
65019daf:	push   edi
65019db0:	mov    edi,DWORD PTR [esi]
65019db2:	test   edi,edi
65019db4:	je     0x65019dc9
65019db6:	cmp    DWORD PTR [esi+0x4],0x1
65019dba:	je     0x65019dc9
65019dbc:	push   edi
65019dbd:	call   ebx
65019dbf:	push   edi
65019dc0:	call   0x65013746
65019dc5:	and    DWORD PTR [esi],0x0
65019dc8:	pop    ecx
65019dc9:	add    esi,0x8
65019dcc:	cmp    esi,0x6502ca78
65019dd2:	jl     0x65019db0
65019dd4:	mov    esi,0x6502c958
65019dd9:	pop    edi
65019dda:	mov    eax,DWORD PTR [esi]
65019ddc:	test   eax,eax
65019dde:	je     0x65019de9
65019de0:	cmp    DWORD PTR [esi+0x4],0x1
65019de4:	jne    0x65019de9
65019de6:	push   eax
65019de7:	call   ebx
65019de9:	add    esi,0x8
65019dec:	cmp    esi,0x6502ca78
65019df2:	jl     0x65019dda
65019df4:	pop    esi
65019df5:	pop    ebx
65019df6:	ret    
65019df7:	push   ebp
65019df8:	mov    ebp,esp
65019dfa:	mov    eax,DWORD PTR [ebp+0x8]
65019dfd:	push   DWORD PTR [eax*8+0x6502c958]
65019e04:	call   DWORD PTR ds:0x6502409c
65019e0a:	pop    ebp
65019e0b:	ret    
65019e0c:	push   0xc
65019e0e:	push   0x65029d50
65019e13:	call   0x65013e70
65019e18:	xor    edi,edi
65019e1a:	inc    edi
65019e1b:	mov    DWORD PTR [ebp-0x1c],edi
65019e1e:	xor    ebx,ebx
65019e20:	cmp    DWORD PTR ds:0x6502da8c,ebx
65019e26:	jne    0x65019e40
65019e28:	call   0x6501ab9f
65019e2d:	push   0x1e
65019e2f:	call   0x6501a9ff
65019e34:	push   0xff
65019e39:	call   0x65015d50
65019e3e:	pop    ecx
65019e3f:	pop    ecx
65019e40:	mov    esi,DWORD PTR [ebp+0x8]
65019e43:	lea    esi,[esi*8+0x6502c958]
65019e4a:	cmp    DWORD PTR [esi],ebx
65019e4c:	je     0x65019e52
65019e4e:	mov    eax,edi
65019e50:	jmp    0x65019ec0
65019e52:	push   0x18
65019e54:	call   0x65015b90
65019e59:	pop    ecx
65019e5a:	mov    edi,eax
65019e5c:	cmp    edi,ebx
65019e5e:	jne    0x65019e6f
65019e60:	call   0x65014580
65019e65:	mov    DWORD PTR [eax],0xc
65019e6b:	xor    eax,eax
65019e6d:	jmp    0x65019ec0
65019e6f:	push   0xa
65019e71:	call   0x65019ecf
65019e76:	pop    ecx
65019e77:	mov    DWORD PTR [ebp-0x4],ebx
65019e7a:	cmp    DWORD PTR [esi],ebx
65019e7c:	jne    0x65019eaa
65019e7e:	push   0xfa0
65019e83:	push   edi
65019e84:	call   0x6501b588
65019e89:	pop    ecx
65019e8a:	pop    ecx
65019e8b:	test   eax,eax
65019e8d:	jne    0x65019ea6
65019e8f:	push   edi
65019e90:	call   0x65013746
65019e95:	pop    ecx
65019e96:	call   0x65014580
65019e9b:	mov    DWORD PTR [eax],0xc
65019ea1:	mov    DWORD PTR [ebp-0x1c],ebx
65019ea4:	jmp    0x65019eb1
65019ea6:	mov    DWORD PTR [esi],edi
65019ea8:	jmp    0x65019eb1
65019eaa:	push   edi
65019eab:	call   0x65013746
65019eb0:	pop    ecx
65019eb1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65019eb8:	call   0x65019ec6
65019ebd:	mov    eax,DWORD PTR [ebp-0x1c]
65019ec0:	call   0x65013eb5
65019ec5:	ret    
65019ec6:	push   0xa
65019ec8:	call   0x65019df7
65019ecd:	pop    ecx
65019ece:	ret    
65019ecf:	push   ebp
65019ed0:	mov    ebp,esp
65019ed2:	mov    eax,DWORD PTR [ebp+0x8]
65019ed5:	push   esi
65019ed6:	lea    esi,[eax*8+0x6502c958]
65019edd:	cmp    DWORD PTR [esi],0x0
65019ee0:	jne    0x65019ef5
65019ee2:	push   eax
65019ee3:	call   0x65019e0c
65019ee8:	test   eax,eax
65019eea:	pop    ecx
65019eeb:	jne    0x65019ef5
65019eed:	push   0x11
65019eef:	call   0x65015d06
65019ef4:	pop    ecx
65019ef5:	push   DWORD PTR [esi]
65019ef7:	call   DWORD PTR ds:0x65024098
65019efd:	pop    esi
65019efe:	pop    ebp
65019eff:	ret    
65019f00:	push   0x140
65019f05:	push   0x0
65019f07:	push   DWORD PTR ds:0x6502da8c
65019f0d:	call   DWORD PTR ds:0x650240ec
65019f13:	test   eax,eax
65019f15:	mov    ds:0x65031428,eax
65019f1a:	jne    0x65019f1d
65019f1c:	ret    
65019f1d:	mov    ecx,DWORD PTR [esp+0x4]
65019f21:	and    DWORD PTR ds:0x6502dbe8,0x0
65019f28:	and    DWORD PTR ds:0x65031424,0x0
65019f2f:	mov    ds:0x65031430,eax
65019f34:	xor    eax,eax
65019f36:	mov    DWORD PTR ds:0x6503142c,ecx
65019f3c:	mov    DWORD PTR ds:0x65031434,0x10
65019f46:	inc    eax
65019f47:	ret    
65019f48:	mov    ecx,DWORD PTR ds:0x65031424
65019f4e:	mov    eax,ds:0x65031428
65019f53:	imul   ecx,ecx,0x14
65019f56:	add    ecx,eax
65019f58:	jmp    0x65019f6c
65019f5a:	mov    edx,DWORD PTR [esp+0x4]
65019f5e:	sub    edx,DWORD PTR [eax+0xc]
65019f61:	cmp    edx,0x100000
65019f67:	jb     0x65019f72
65019f69:	add    eax,0x14
65019f6c:	cmp    eax,ecx
65019f6e:	jb     0x65019f5a
65019f70:	xor    eax,eax
65019f72:	ret    
65019f73:	push   ebp
65019f74:	mov    ebp,esp
65019f76:	sub    esp,0x10
65019f79:	mov    ecx,DWORD PTR [ebp+0x8]
65019f7c:	mov    eax,DWORD PTR [ecx+0x10]
65019f7f:	push   esi
65019f80:	mov    esi,DWORD PTR [ebp+0xc]
65019f83:	push   edi
65019f84:	mov    edi,esi
65019f86:	sub    edi,DWORD PTR [ecx+0xc]
65019f89:	add    esi,0xfffffffc
65019f8c:	shr    edi,0xf
65019f8f:	mov    ecx,edi
65019f91:	imul   ecx,ecx,0x204
65019f97:	lea    ecx,[ecx+eax*1+0x144]
65019f9e:	mov    DWORD PTR [ebp-0x10],ecx
65019fa1:	mov    ecx,DWORD PTR [esi]
65019fa3:	dec    ecx
65019fa4:	test   cl,0x1
65019fa7:	mov    DWORD PTR [ebp-0x4],ecx
65019faa:	jne    0x6501a283
65019fb0:	push   ebx
65019fb1:	lea    ebx,[ecx+esi*1]
65019fb4:	mov    edx,DWORD PTR [ebx]
65019fb6:	mov    DWORD PTR [ebp-0xc],edx
65019fb9:	mov    edx,DWORD PTR [esi-0x4]
65019fbc:	mov    DWORD PTR [ebp-0x8],edx
65019fbf:	mov    edx,DWORD PTR [ebp-0xc]
65019fc2:	test   dl,0x1
65019fc5:	mov    DWORD PTR [ebp+0xc],ebx
65019fc8:	jne    0x6501a03e
65019fca:	sar    edx,0x4
65019fcd:	dec    edx
65019fce:	cmp    edx,0x3f
65019fd1:	jbe    0x65019fd6
65019fd3:	push   0x3f
65019fd5:	pop    edx
65019fd6:	mov    ecx,DWORD PTR [ebx+0x4]
65019fd9:	cmp    ecx,DWORD PTR [ebx+0x8]
65019fdc:	jne    0x6501a020
65019fde:	cmp    edx,0x20
65019fe1:	mov    ebx,0x80000000
65019fe6:	jae    0x6501a001
65019fe8:	mov    ecx,edx
65019fea:	shr    ebx,cl
65019fec:	lea    ecx,[edx+eax*1+0x4]
65019ff0:	not    ebx
65019ff2:	and    DWORD PTR [eax+edi*4+0x44],ebx
65019ff6:	dec    BYTE PTR [ecx]
65019ff8:	jne    0x6501a01d
65019ffa:	mov    ecx,DWORD PTR [ebp+0x8]
65019ffd:	and    DWORD PTR [ecx],ebx
65019fff:	jmp    0x6501a01d
6501a001:	lea    ecx,[edx-0x20]
6501a004:	shr    ebx,cl
6501a006:	lea    ecx,[edx+eax*1+0x4]
6501a00a:	not    ebx
6501a00c:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6501a013:	dec    BYTE PTR [ecx]
6501a015:	jne    0x6501a01d
6501a017:	mov    ecx,DWORD PTR [ebp+0x8]
6501a01a:	and    DWORD PTR [ecx+0x4],ebx
6501a01d:	mov    ebx,DWORD PTR [ebp+0xc]
6501a020:	mov    edx,DWORD PTR [ebx+0x8]
6501a023:	mov    ebx,DWORD PTR [ebx+0x4]
6501a026:	mov    ecx,DWORD PTR [ebp-0x4]
6501a029:	add    ecx,DWORD PTR [ebp-0xc]
6501a02c:	mov    DWORD PTR [edx+0x4],ebx
6501a02f:	mov    edx,DWORD PTR [ebp+0xc]
6501a032:	mov    ebx,DWORD PTR [edx+0x4]
6501a035:	mov    edx,DWORD PTR [edx+0x8]
6501a038:	mov    DWORD PTR [ebx+0x8],edx
6501a03b:	mov    DWORD PTR [ebp-0x4],ecx
6501a03e:	mov    edx,ecx
6501a040:	sar    edx,0x4
6501a043:	dec    edx
6501a044:	cmp    edx,0x3f
6501a047:	jbe    0x6501a04c
6501a049:	push   0x3f
6501a04b:	pop    edx
6501a04c:	mov    ebx,DWORD PTR [ebp-0x8]
6501a04f:	and    ebx,0x1
6501a052:	mov    DWORD PTR [ebp-0xc],ebx
6501a055:	jne    0x6501a0ea
6501a05b:	sub    esi,DWORD PTR [ebp-0x8]
6501a05e:	mov    ebx,DWORD PTR [ebp-0x8]
6501a061:	sar    ebx,0x4
6501a064:	push   0x3f
6501a066:	mov    DWORD PTR [ebp+0xc],esi
6501a069:	dec    ebx
6501a06a:	pop    esi
6501a06b:	cmp    ebx,esi
6501a06d:	jbe    0x6501a071
6501a06f:	mov    ebx,esi
6501a071:	add    ecx,DWORD PTR [ebp-0x8]
6501a074:	mov    edx,ecx
6501a076:	sar    edx,0x4
6501a079:	dec    edx
6501a07a:	cmp    edx,esi
6501a07c:	mov    DWORD PTR [ebp-0x4],ecx
6501a07f:	jbe    0x6501a083
6501a081:	mov    edx,esi
6501a083:	cmp    ebx,edx
6501a085:	je     0x6501a0e5
6501a087:	mov    ecx,DWORD PTR [ebp+0xc]
6501a08a:	mov    esi,DWORD PTR [ecx+0x4]
6501a08d:	cmp    esi,DWORD PTR [ecx+0x8]
6501a090:	jne    0x6501a0cd
6501a092:	cmp    ebx,0x20
6501a095:	mov    esi,0x80000000
6501a09a:	jae    0x6501a0b3
6501a09c:	mov    ecx,ebx
6501a09e:	shr    esi,cl
6501a0a0:	not    esi
6501a0a2:	and    DWORD PTR [eax+edi*4+0x44],esi
6501a0a6:	dec    BYTE PTR [ebx+eax*1+0x4]
6501a0aa:	jne    0x6501a0cd
6501a0ac:	mov    ecx,DWORD PTR [ebp+0x8]
6501a0af:	and    DWORD PTR [ecx],esi
6501a0b1:	jmp    0x6501a0cd
6501a0b3:	lea    ecx,[ebx-0x20]
6501a0b6:	shr    esi,cl
6501a0b8:	not    esi
6501a0ba:	and    DWORD PTR [eax+edi*4+0xc4],esi
6501a0c1:	dec    BYTE PTR [ebx+eax*1+0x4]
6501a0c5:	jne    0x6501a0cd
6501a0c7:	mov    ecx,DWORD PTR [ebp+0x8]
6501a0ca:	and    DWORD PTR [ecx+0x4],esi
6501a0cd:	mov    ecx,DWORD PTR [ebp+0xc]
6501a0d0:	mov    esi,DWORD PTR [ecx+0x8]
6501a0d3:	mov    ecx,DWORD PTR [ecx+0x4]
6501a0d6:	mov    DWORD PTR [esi+0x4],ecx
6501a0d9:	mov    ecx,DWORD PTR [ebp+0xc]
6501a0dc:	mov    esi,DWORD PTR [ecx+0x4]
6501a0df:	mov    ecx,DWORD PTR [ecx+0x8]
6501a0e2:	mov    DWORD PTR [esi+0x8],ecx
6501a0e5:	mov    esi,DWORD PTR [ebp+0xc]
6501a0e8:	jmp    0x6501a0ed
6501a0ea:	mov    ebx,DWORD PTR [ebp+0x8]
6501a0ed:	cmp    DWORD PTR [ebp-0xc],0x0
6501a0f1:	jne    0x6501a0fb
6501a0f3:	cmp    ebx,edx
6501a0f5:	je     0x6501a17b
6501a0fb:	mov    ecx,DWORD PTR [ebp-0x10]
6501a0fe:	lea    ecx,[ecx+edx*8]
6501a101:	mov    ebx,DWORD PTR [ecx+0x4]
6501a104:	mov    DWORD PTR [esi+0x8],ecx
6501a107:	mov    DWORD PTR [esi+0x4],ebx
6501a10a:	mov    DWORD PTR [ecx+0x4],esi
6501a10d:	mov    ecx,DWORD PTR [esi+0x4]
6501a110:	mov    DWORD PTR [ecx+0x8],esi
6501a113:	mov    ecx,DWORD PTR [esi+0x4]
6501a116:	cmp    ecx,DWORD PTR [esi+0x8]
6501a119:	jne    0x6501a17b
6501a11b:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6501a11f:	mov    BYTE PTR [ebp+0xf],cl
6501a122:	inc    cl
6501a124:	cmp    edx,0x20
6501a127:	mov    BYTE PTR [edx+eax*1+0x4],cl
6501a12b:	jae    0x6501a152
6501a12d:	cmp    BYTE PTR [ebp+0xf],0x0
6501a131:	jne    0x6501a141
6501a133:	mov    ecx,edx
6501a135:	mov    ebx,0x80000000
6501a13a:	shr    ebx,cl
6501a13c:	mov    ecx,DWORD PTR [ebp+0x8]
6501a13f:	or     DWORD PTR [ecx],ebx
6501a141:	mov    ebx,0x80000000
6501a146:	mov    ecx,edx
6501a148:	shr    ebx,cl
6501a14a:	lea    eax,[eax+edi*4+0x44]
6501a14e:	or     DWORD PTR [eax],ebx
6501a150:	jmp    0x6501a17b
6501a152:	cmp    BYTE PTR [ebp+0xf],0x0
6501a156:	jne    0x6501a168
6501a158:	lea    ecx,[edx-0x20]
6501a15b:	mov    ebx,0x80000000
6501a160:	shr    ebx,cl
6501a162:	mov    ecx,DWORD PTR [ebp+0x8]
6501a165:	or     DWORD PTR [ecx+0x4],ebx
6501a168:	lea    ecx,[edx-0x20]
6501a16b:	mov    edx,0x80000000
6501a170:	shr    edx,cl
6501a172:	lea    eax,[eax+edi*4+0xc4]
6501a179:	or     DWORD PTR [eax],edx
6501a17b:	mov    eax,DWORD PTR [ebp-0x4]
6501a17e:	mov    DWORD PTR [esi],eax
6501a180:	mov    DWORD PTR [eax+esi*1-0x4],eax
6501a184:	mov    eax,DWORD PTR [ebp-0x10]
6501a187:	dec    DWORD PTR [eax]
6501a189:	jne    0x6501a282
6501a18f:	mov    eax,ds:0x6502dbe8
6501a194:	test   eax,eax
6501a196:	je     0x6501a274
6501a19c:	mov    ecx,DWORD PTR ds:0x65031438
6501a1a2:	mov    esi,DWORD PTR ds:0x6502416c
6501a1a8:	push   0x4000
6501a1ad:	shl    ecx,0xf
6501a1b0:	add    ecx,DWORD PTR [eax+0xc]
6501a1b3:	mov    ebx,0x8000
6501a1b8:	push   ebx
6501a1b9:	push   ecx
6501a1ba:	call   esi
6501a1bc:	mov    ecx,DWORD PTR ds:0x65031438
6501a1c2:	mov    eax,ds:0x6502dbe8
6501a1c7:	mov    edx,0x80000000
6501a1cc:	shr    edx,cl
6501a1ce:	or     DWORD PTR [eax+0x8],edx
6501a1d1:	mov    eax,ds:0x6502dbe8
6501a1d6:	mov    eax,DWORD PTR [eax+0x10]
6501a1d9:	mov    ecx,DWORD PTR ds:0x65031438
6501a1df:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6501a1e7:	mov    eax,ds:0x6502dbe8
6501a1ec:	mov    eax,DWORD PTR [eax+0x10]
6501a1ef:	dec    BYTE PTR [eax+0x43]
6501a1f2:	mov    eax,ds:0x6502dbe8
6501a1f7:	mov    ecx,DWORD PTR [eax+0x10]
6501a1fa:	cmp    BYTE PTR [ecx+0x43],0x0
6501a1fe:	jne    0x6501a209
6501a200:	and    DWORD PTR [eax+0x4],0xfffffffe
6501a204:	mov    eax,ds:0x6502dbe8
6501a209:	cmp    DWORD PTR [eax+0x8],0xffffffff
6501a20d:	jne    0x6501a274
6501a20f:	push   ebx
6501a210:	push   0x0
6501a212:	push   DWORD PTR [eax+0xc]
6501a215:	call   esi
6501a217:	mov    eax,ds:0x6502dbe8
6501a21c:	push   DWORD PTR [eax+0x10]
6501a21f:	push   0x0
6501a221:	push   DWORD PTR ds:0x6502da8c
6501a227:	call   DWORD PTR ds:0x650240f0
6501a22d:	mov    ecx,DWORD PTR ds:0x65031424
6501a233:	mov    eax,ds:0x6502dbe8
6501a238:	imul   ecx,ecx,0x14
6501a23b:	mov    edx,DWORD PTR ds:0x65031428
6501a241:	sub    ecx,eax
6501a243:	lea    ecx,[ecx+edx*1-0x14]
6501a247:	push   ecx
6501a248:	lea    ecx,[eax+0x14]
6501a24b:	push   ecx
6501a24c:	push   eax
6501a24d:	call   0x650138f0
6501a252:	mov    eax,DWORD PTR [ebp+0x8]
6501a255:	add    esp,0xc
6501a258:	dec    DWORD PTR ds:0x65031424
6501a25e:	cmp    eax,DWORD PTR ds:0x6502dbe8
6501a264:	jbe    0x6501a26a
6501a266:	sub    DWORD PTR [ebp+0x8],0x14
6501a26a:	mov    eax,ds:0x65031428
6501a26f:	mov    ds:0x65031430,eax
6501a274:	mov    eax,DWORD PTR [ebp+0x8]
6501a277:	mov    ds:0x6502dbe8,eax
6501a27c:	mov    DWORD PTR ds:0x65031438,edi
6501a282:	pop    ebx
6501a283:	pop    edi
6501a284:	pop    esi
6501a285:	leave  
6501a286:	ret    
6501a287:	mov    eax,ds:0x65031434
6501a28c:	push   esi
6501a28d:	mov    esi,DWORD PTR ds:0x65031424
6501a293:	push   edi
6501a294:	xor    edi,edi
6501a296:	cmp    esi,eax
6501a298:	jne    0x6501a2ce
6501a29a:	add    eax,0x10
6501a29d:	imul   eax,eax,0x14
6501a2a0:	push   eax
6501a2a1:	push   DWORD PTR ds:0x65031428
6501a2a7:	push   edi
6501a2a8:	push   DWORD PTR ds:0x6502da8c
6501a2ae:	call   DWORD PTR ds:0x650240f4
6501a2b4:	cmp    eax,edi
6501a2b6:	jne    0x6501a2bc
6501a2b8:	xor    eax,eax
6501a2ba:	jmp    0x6501a334
6501a2bc:	add    DWORD PTR ds:0x65031434,0x10
6501a2c3:	mov    esi,DWORD PTR ds:0x65031424
6501a2c9:	mov    ds:0x65031428,eax
6501a2ce:	imul   esi,esi,0x14
6501a2d1:	add    esi,DWORD PTR ds:0x65031428
6501a2d7:	push   0x41c4
6501a2dc:	push   0x8
6501a2de:	push   DWORD PTR ds:0x6502da8c
6501a2e4:	call   DWORD PTR ds:0x650240ec
6501a2ea:	cmp    eax,edi
6501a2ec:	mov    DWORD PTR [esi+0x10],eax
6501a2ef:	je     0x6501a2b8
6501a2f1:	push   0x4
6501a2f3:	push   0x2000
6501a2f8:	push   0x100000
6501a2fd:	push   edi
6501a2fe:	call   DWORD PTR ds:0x6502417c
6501a304:	cmp    eax,edi
6501a306:	mov    DWORD PTR [esi+0xc],eax
6501a309:	jne    0x6501a31d
6501a30b:	push   DWORD PTR [esi+0x10]
6501a30e:	push   edi
6501a30f:	push   DWORD PTR ds:0x6502da8c
6501a315:	call   DWORD PTR ds:0x650240f0
6501a31b:	jmp    0x6501a2b8
6501a31d:	or     DWORD PTR [esi+0x8],0xffffffff
6501a321:	mov    DWORD PTR [esi],edi
6501a323:	mov    DWORD PTR [esi+0x4],edi
6501a326:	inc    DWORD PTR ds:0x65031424
6501a32c:	mov    eax,DWORD PTR [esi+0x10]
6501a32f:	or     DWORD PTR [eax],0xffffffff
6501a332:	mov    eax,esi
6501a334:	pop    edi
6501a335:	pop    esi
6501a336:	ret    
6501a337:	push   ebp
6501a338:	mov    ebp,esp
6501a33a:	push   ecx
6501a33b:	push   ecx
6501a33c:	mov    ecx,DWORD PTR [ebp+0x8]
6501a33f:	mov    eax,DWORD PTR [ecx+0x8]
6501a342:	push   ebx
6501a343:	push   esi
6501a344:	mov    esi,DWORD PTR [ecx+0x10]
6501a347:	push   edi
6501a348:	xor    ebx,ebx
6501a34a:	jmp    0x6501a34f
6501a34c:	add    eax,eax
6501a34e:	inc    ebx
6501a34f:	test   eax,eax
6501a351:	jge    0x6501a34c
6501a353:	mov    eax,ebx
6501a355:	imul   eax,eax,0x204
6501a35b:	lea    eax,[eax+esi*1+0x144]
6501a362:	push   0x3f
6501a364:	mov    DWORD PTR [ebp-0x8],eax
6501a367:	pop    edx
6501a368:	mov    DWORD PTR [eax+0x8],eax
6501a36b:	mov    DWORD PTR [eax+0x4],eax
6501a36e:	add    eax,0x8
6501a371:	dec    edx
6501a372:	jne    0x6501a368
6501a374:	push   0x4
6501a376:	mov    edi,ebx
6501a378:	push   0x1000
6501a37d:	shl    edi,0xf
6501a380:	add    edi,DWORD PTR [ecx+0xc]
6501a383:	push   0x8000
6501a388:	push   edi
6501a389:	call   DWORD PTR ds:0x6502417c
6501a38f:	test   eax,eax
6501a391:	jne    0x6501a39b
6501a393:	or     eax,0xffffffff
6501a396:	jmp    0x6501a438
6501a39b:	lea    edx,[edi+0x7000]
6501a3a1:	cmp    edi,edx
6501a3a3:	mov    DWORD PTR [ebp-0x4],edx
6501a3a6:	ja     0x6501a3eb
6501a3a8:	mov    ecx,edx
6501a3aa:	sub    ecx,edi
6501a3ac:	shr    ecx,0xc
6501a3af:	lea    eax,[edi+0x10]
6501a3b2:	inc    ecx
6501a3b3:	or     DWORD PTR [eax-0x8],0xffffffff
6501a3b7:	or     DWORD PTR [eax+0xfec],0xffffffff
6501a3be:	lea    edx,[eax+0xffc]
6501a3c4:	mov    DWORD PTR [eax],edx
6501a3c6:	lea    edx,[eax-0x1004]
6501a3cc:	mov    DWORD PTR [eax-0x4],0xff0
6501a3d3:	mov    DWORD PTR [eax+0x4],edx
6501a3d6:	mov    DWORD PTR [eax+0xfe8],0xff0
6501a3e0:	add    eax,0x1000
6501a3e5:	dec    ecx
6501a3e6:	jne    0x6501a3b3
6501a3e8:	mov    edx,DWORD PTR [ebp-0x4]
6501a3eb:	mov    eax,DWORD PTR [ebp-0x8]
6501a3ee:	add    eax,0x1f8
6501a3f3:	lea    ecx,[edi+0xc]
6501a3f6:	mov    DWORD PTR [eax+0x4],ecx
6501a3f9:	mov    DWORD PTR [ecx+0x8],eax
6501a3fc:	lea    ecx,[edx+0xc]
6501a3ff:	mov    DWORD PTR [eax+0x8],ecx
6501a402:	mov    DWORD PTR [ecx+0x4],eax
6501a405:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6501a40a:	xor    edi,edi
6501a40c:	inc    edi
6501a40d:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6501a414:	mov    al,BYTE PTR [esi+0x43]
6501a417:	mov    cl,al
6501a419:	inc    cl
6501a41b:	test   al,al
6501a41d:	mov    eax,DWORD PTR [ebp+0x8]
6501a420:	mov    BYTE PTR [esi+0x43],cl
6501a423:	jne    0x6501a428
6501a425:	or     DWORD PTR [eax+0x4],edi
6501a428:	mov    edx,0x80000000
6501a42d:	mov    ecx,ebx
6501a42f:	shr    edx,cl
6501a431:	not    edx
6501a433:	and    DWORD PTR [eax+0x8],edx
6501a436:	mov    eax,ebx
6501a438:	pop    edi
6501a439:	pop    esi
6501a43a:	pop    ebx
6501a43b:	leave  
6501a43c:	ret    
6501a43d:	push   ebp
6501a43e:	mov    ebp,esp
6501a440:	sub    esp,0xc
6501a443:	mov    ecx,DWORD PTR [ebp+0x8]
6501a446:	mov    eax,DWORD PTR [ecx+0x10]
6501a449:	push   ebx
6501a44a:	push   esi
6501a44b:	mov    esi,DWORD PTR [ebp+0x10]
6501a44e:	push   edi
6501a44f:	mov    edi,DWORD PTR [ebp+0xc]
6501a452:	mov    edx,edi
6501a454:	sub    edx,DWORD PTR [ecx+0xc]
6501a457:	add    esi,0x17
6501a45a:	shr    edx,0xf
6501a45d:	mov    ecx,edx
6501a45f:	imul   ecx,ecx,0x204
6501a465:	lea    ecx,[ecx+eax*1+0x144]
6501a46c:	mov    DWORD PTR [ebp-0xc],ecx
6501a46f:	mov    ecx,DWORD PTR [edi-0x4]
6501a472:	and    esi,0xfffffff0
6501a475:	dec    ecx
6501a476:	cmp    esi,ecx
6501a478:	lea    edi,[ecx+edi*1-0x4]
6501a47c:	mov    ebx,DWORD PTR [edi]
6501a47e:	mov    DWORD PTR [ebp+0x10],ecx
6501a481:	mov    DWORD PTR [ebp-0x4],ebx
6501a484:	jle    0x6501a5df
6501a48a:	test   bl,0x1
6501a48d:	jne    0x6501a5d8
6501a493:	add    ebx,ecx
6501a495:	cmp    esi,ebx
6501a497:	jg     0x6501a5d8
6501a49d:	mov    ecx,DWORD PTR [ebp-0x4]
6501a4a0:	sar    ecx,0x4
6501a4a3:	dec    ecx
6501a4a4:	cmp    ecx,0x3f
6501a4a7:	mov    DWORD PTR [ebp-0x8],ecx
6501a4aa:	jbe    0x6501a4b2
6501a4ac:	push   0x3f
6501a4ae:	pop    ecx
6501a4af:	mov    DWORD PTR [ebp-0x8],ecx
6501a4b2:	mov    ebx,DWORD PTR [edi+0x4]
6501a4b5:	cmp    ebx,DWORD PTR [edi+0x8]
6501a4b8:	jne    0x6501a4fd
6501a4ba:	cmp    ecx,0x20
6501a4bd:	mov    ebx,0x80000000
6501a4c2:	jae    0x6501a4de
6501a4c4:	shr    ebx,cl
6501a4c6:	mov    ecx,DWORD PTR [ebp-0x8]
6501a4c9:	lea    ecx,[ecx+eax*1+0x4]
6501a4cd:	not    ebx
6501a4cf:	and    DWORD PTR [eax+edx*4+0x44],ebx
6501a4d3:	dec    BYTE PTR [ecx]
6501a4d5:	jne    0x6501a4fd
6501a4d7:	mov    ecx,DWORD PTR [ebp+0x8]
6501a4da:	and    DWORD PTR [ecx],ebx
6501a4dc:	jmp    0x6501a4fd
6501a4de:	add    ecx,0xffffffe0
6501a4e1:	shr    ebx,cl
6501a4e3:	mov    ecx,DWORD PTR [ebp-0x8]
6501a4e6:	lea    ecx,[ecx+eax*1+0x4]
6501a4ea:	not    ebx
6501a4ec:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6501a4f3:	dec    BYTE PTR [ecx]
6501a4f5:	jne    0x6501a4fd
6501a4f7:	mov    ecx,DWORD PTR [ebp+0x8]
6501a4fa:	and    DWORD PTR [ecx+0x4],ebx
6501a4fd:	mov    ecx,DWORD PTR [edi+0x8]
6501a500:	mov    ebx,DWORD PTR [edi+0x4]
6501a503:	mov    DWORD PTR [ecx+0x4],ebx
6501a506:	mov    ecx,DWORD PTR [edi+0x4]
6501a509:	mov    edi,DWORD PTR [edi+0x8]
6501a50c:	mov    DWORD PTR [ecx+0x8],edi
6501a50f:	mov    ecx,DWORD PTR [ebp+0x10]
6501a512:	sub    ecx,esi
6501a514:	add    DWORD PTR [ebp-0x4],ecx
6501a517:	cmp    DWORD PTR [ebp-0x4],0x0
6501a51b:	jle    0x6501a5c6
6501a521:	mov    edi,DWORD PTR [ebp-0x4]
6501a524:	mov    ecx,DWORD PTR [ebp+0xc]
6501a527:	sar    edi,0x4
6501a52a:	dec    edi
6501a52b:	cmp    edi,0x3f
6501a52e:	lea    ecx,[ecx+esi*1-0x4]
6501a532:	jbe    0x6501a537
6501a534:	push   0x3f
6501a536:	pop    edi
6501a537:	mov    ebx,DWORD PTR [ebp-0xc]
6501a53a:	lea    ebx,[ebx+edi*8]
6501a53d:	mov    DWORD PTR [ebp+0x10],ebx
6501a540:	mov    ebx,DWORD PTR [ebx+0x4]
6501a543:	mov    DWORD PTR [ecx+0x4],ebx
6501a546:	mov    ebx,DWORD PTR [ebp+0x10]
6501a549:	mov    DWORD PTR [ecx+0x8],ebx
6501a54c:	mov    DWORD PTR [ebx+0x4],ecx
6501a54f:	mov    ebx,DWORD PTR [ecx+0x4]
6501a552:	mov    DWORD PTR [ebx+0x8],ecx
6501a555:	mov    ebx,DWORD PTR [ecx+0x4]
6501a558:	cmp    ebx,DWORD PTR [ecx+0x8]
6501a55b:	jne    0x6501a5b4
6501a55d:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6501a561:	mov    BYTE PTR [ebp+0x13],cl
6501a564:	inc    cl
6501a566:	cmp    edi,0x20
6501a569:	mov    BYTE PTR [edi+eax*1+0x4],cl
6501a56d:	jae    0x6501a58b
6501a56f:	cmp    BYTE PTR [ebp+0x13],0x0
6501a573:	jne    0x6501a583
6501a575:	mov    ecx,edi
6501a577:	mov    ebx,0x80000000
6501a57c:	shr    ebx,cl
6501a57e:	mov    ecx,DWORD PTR [ebp+0x8]
6501a581:	or     DWORD PTR [ecx],ebx
6501a583:	lea    eax,[eax+edx*4+0x44]
6501a587:	mov    ecx,edi
6501a589:	jmp    0x6501a5ab
6501a58b:	cmp    BYTE PTR [ebp+0x13],0x0
6501a58f:	jne    0x6501a5a1
6501a591:	lea    ecx,[edi-0x20]
6501a594:	mov    ebx,0x80000000
6501a599:	shr    ebx,cl
6501a59b:	mov    ecx,DWORD PTR [ebp+0x8]
6501a59e:	or     DWORD PTR [ecx+0x4],ebx
6501a5a1:	lea    eax,[eax+edx*4+0xc4]
6501a5a8:	lea    ecx,[edi-0x20]
6501a5ab:	mov    edx,0x80000000
6501a5b0:	shr    edx,cl
6501a5b2:	or     DWORD PTR [eax],edx
6501a5b4:	mov    edx,DWORD PTR [ebp+0xc]
6501a5b7:	mov    ecx,DWORD PTR [ebp-0x4]
6501a5ba:	lea    eax,[edx+esi*1-0x4]
6501a5be:	mov    DWORD PTR [eax],ecx
6501a5c0:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6501a5c4:	jmp    0x6501a5c9
6501a5c6:	mov    edx,DWORD PTR [ebp+0xc]
6501a5c9:	lea    eax,[esi+0x1]
6501a5cc:	mov    DWORD PTR [edx-0x4],eax
6501a5cf:	mov    DWORD PTR [edx+esi*1-0x8],eax
6501a5d3:	jmp    0x6501a714
6501a5d8:	xor    eax,eax
6501a5da:	jmp    0x6501a717
6501a5df:	jge    0x6501a714
6501a5e5:	mov    ebx,DWORD PTR [ebp+0xc]
6501a5e8:	sub    DWORD PTR [ebp+0x10],esi
6501a5eb:	lea    ecx,[esi+0x1]
6501a5ee:	mov    DWORD PTR [ebx-0x4],ecx
6501a5f1:	lea    ebx,[ebx+esi*1-0x4]
6501a5f5:	mov    esi,DWORD PTR [ebp+0x10]
6501a5f8:	sar    esi,0x4
6501a5fb:	dec    esi
6501a5fc:	cmp    esi,0x3f
6501a5ff:	mov    DWORD PTR [ebp+0xc],ebx
6501a602:	mov    DWORD PTR [ebx-0x4],ecx
6501a605:	jbe    0x6501a60a
6501a607:	push   0x3f
6501a609:	pop    esi
6501a60a:	test   BYTE PTR [ebp-0x4],0x1
6501a60e:	jne    0x6501a694
6501a614:	mov    esi,DWORD PTR [ebp-0x4]
6501a617:	sar    esi,0x4
6501a61a:	dec    esi
6501a61b:	cmp    esi,0x3f
6501a61e:	jbe    0x6501a623
6501a620:	push   0x3f
6501a622:	pop    esi
6501a623:	mov    ecx,DWORD PTR [edi+0x4]
6501a626:	cmp    ecx,DWORD PTR [edi+0x8]
6501a629:	jne    0x6501a66d
6501a62b:	cmp    esi,0x20
6501a62e:	mov    ebx,0x80000000
6501a633:	jae    0x6501a64e
6501a635:	mov    ecx,esi
6501a637:	shr    ebx,cl
6501a639:	lea    esi,[esi+eax*1+0x4]
6501a63d:	not    ebx
6501a63f:	and    DWORD PTR [eax+edx*4+0x44],ebx
6501a643:	dec    BYTE PTR [esi]
6501a645:	jne    0x6501a66a
6501a647:	mov    ecx,DWORD PTR [ebp+0x8]
6501a64a:	and    DWORD PTR [ecx],ebx
6501a64c:	jmp    0x6501a66a
6501a64e:	lea    ecx,[esi-0x20]
6501a651:	shr    ebx,cl
6501a653:	lea    ecx,[esi+eax*1+0x4]
6501a657:	not    ebx
6501a659:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6501a660:	dec    BYTE PTR [ecx]
6501a662:	jne    0x6501a66a
6501a664:	mov    ecx,DWORD PTR [ebp+0x8]
6501a667:	and    DWORD PTR [ecx+0x4],ebx
6501a66a:	mov    ebx,DWORD PTR [ebp+0xc]
6501a66d:	mov    ecx,DWORD PTR [edi+0x8]
6501a670:	mov    esi,DWORD PTR [edi+0x4]
6501a673:	mov    DWORD PTR [ecx+0x4],esi
6501a676:	mov    esi,DWORD PTR [edi+0x8]
6501a679:	mov    ecx,DWORD PTR [edi+0x4]
6501a67c:	mov    DWORD PTR [ecx+0x8],esi
6501a67f:	mov    esi,DWORD PTR [ebp+0x10]
6501a682:	add    esi,DWORD PTR [ebp-0x4]
6501a685:	mov    DWORD PTR [ebp+0x10],esi
6501a688:	sar    esi,0x4
6501a68b:	dec    esi
6501a68c:	cmp    esi,0x3f
6501a68f:	jbe    0x6501a694
6501a691:	push   0x3f
6501a693:	pop    esi
6501a694:	mov    ecx,DWORD PTR [ebp-0xc]
6501a697:	lea    ecx,[ecx+esi*8]
6501a69a:	mov    edi,DWORD PTR [ecx+0x4]
6501a69d:	mov    DWORD PTR [ebx+0x8],ecx
6501a6a0:	mov    DWORD PTR [ebx+0x4],edi
6501a6a3:	mov    DWORD PTR [ecx+0x4],ebx
6501a6a6:	mov    ecx,DWORD PTR [ebx+0x4]
6501a6a9:	mov    DWORD PTR [ecx+0x8],ebx
6501a6ac:	mov    ecx,DWORD PTR [ebx+0x4]
6501a6af:	cmp    ecx,DWORD PTR [ebx+0x8]
6501a6b2:	jne    0x6501a70b
6501a6b4:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6501a6b8:	mov    BYTE PTR [ebp+0xf],cl
6501a6bb:	inc    cl
6501a6bd:	cmp    esi,0x20
6501a6c0:	mov    BYTE PTR [esi+eax*1+0x4],cl
6501a6c4:	jae    0x6501a6e2
6501a6c6:	cmp    BYTE PTR [ebp+0xf],0x0
6501a6ca:	jne    0x6501a6da
6501a6cc:	mov    ecx,esi
6501a6ce:	mov    edi,0x80000000
6501a6d3:	shr    edi,cl
6501a6d5:	mov    ecx,DWORD PTR [ebp+0x8]
6501a6d8:	or     DWORD PTR [ecx],edi
6501a6da:	lea    eax,[eax+edx*4+0x44]
6501a6de:	mov    ecx,esi
6501a6e0:	jmp    0x6501a702
6501a6e2:	cmp    BYTE PTR [ebp+0xf],0x0
6501a6e6:	jne    0x6501a6f8
6501a6e8:	lea    ecx,[esi-0x20]
6501a6eb:	mov    edi,0x80000000
6501a6f0:	shr    edi,cl
6501a6f2:	mov    ecx,DWORD PTR [ebp+0x8]
6501a6f5:	or     DWORD PTR [ecx+0x4],edi
6501a6f8:	lea    eax,[eax+edx*4+0xc4]
6501a6ff:	lea    ecx,[esi-0x20]
6501a702:	mov    edx,0x80000000
6501a707:	shr    edx,cl
6501a709:	or     DWORD PTR [eax],edx
6501a70b:	mov    eax,DWORD PTR [ebp+0x10]
6501a70e:	mov    DWORD PTR [ebx],eax
6501a710:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6501a714:	xor    eax,eax
6501a716:	inc    eax
6501a717:	pop    edi
6501a718:	pop    esi
6501a719:	pop    ebx
6501a71a:	leave  
6501a71b:	ret    
6501a71c:	push   ebp
6501a71d:	mov    ebp,esp
6501a71f:	sub    esp,0x14
6501a722:	mov    eax,ds:0x65031424
6501a727:	mov    ecx,DWORD PTR [ebp+0x8]
6501a72a:	imul   eax,eax,0x14
6501a72d:	add    eax,DWORD PTR ds:0x65031428
6501a733:	add    ecx,0x17
6501a736:	and    ecx,0xfffffff0
6501a739:	mov    DWORD PTR [ebp-0x10],ecx
6501a73c:	sar    ecx,0x4
6501a73f:	push   ebx
6501a740:	dec    ecx
6501a741:	cmp    ecx,0x20
6501a744:	push   esi
6501a745:	push   edi
6501a746:	jge    0x6501a753
6501a748:	or     esi,0xffffffff
6501a74b:	shr    esi,cl
6501a74d:	or     DWORD PTR [ebp-0x8],0xffffffff
6501a751:	jmp    0x6501a760
6501a753:	add    ecx,0xffffffe0
6501a756:	or     edx,0xffffffff
6501a759:	xor    esi,esi
6501a75b:	shr    edx,cl
6501a75d:	mov    DWORD PTR [ebp-0x8],edx
6501a760:	mov    ecx,DWORD PTR ds:0x65031430
6501a766:	mov    ebx,ecx
6501a768:	jmp    0x6501a77b
6501a76a:	mov    edx,DWORD PTR [ebx+0x4]
6501a76d:	mov    edi,DWORD PTR [ebx]
6501a76f:	and    edx,DWORD PTR [ebp-0x8]
6501a772:	and    edi,esi
6501a774:	or     edx,edi
6501a776:	jne    0x6501a782
6501a778:	add    ebx,0x14
6501a77b:	cmp    ebx,eax
6501a77d:	mov    DWORD PTR [ebp+0x8],ebx
6501a780:	jb     0x6501a76a
6501a782:	cmp    ebx,eax
6501a784:	jne    0x6501a805
6501a786:	mov    ebx,DWORD PTR ds:0x65031428
6501a78c:	jmp    0x6501a79f
6501a78e:	mov    edx,DWORD PTR [ebx+0x4]
6501a791:	mov    edi,DWORD PTR [ebx]
6501a793:	and    edx,DWORD PTR [ebp-0x8]
6501a796:	and    edi,esi
6501a798:	or     edx,edi
6501a79a:	jne    0x6501a7a6
6501a79c:	add    ebx,0x14
6501a79f:	cmp    ebx,ecx
6501a7a1:	mov    DWORD PTR [ebp+0x8],ebx
6501a7a4:	jb     0x6501a78e
6501a7a6:	cmp    ebx,ecx
6501a7a8:	jne    0x6501a805
6501a7aa:	jmp    0x6501a7b8
6501a7ac:	cmp    DWORD PTR [ebx+0x8],0x0
6501a7b0:	jne    0x6501a7bc
6501a7b2:	add    ebx,0x14
6501a7b5:	mov    DWORD PTR [ebp+0x8],ebx
6501a7b8:	cmp    ebx,eax
6501a7ba:	jb     0x6501a7ac
6501a7bc:	cmp    ebx,eax
6501a7be:	jne    0x6501a7f1
6501a7c0:	mov    ebx,DWORD PTR ds:0x65031428
6501a7c6:	jmp    0x6501a7d1
6501a7c8:	cmp    DWORD PTR [ebx+0x8],0x0
6501a7cc:	jne    0x6501a7d8
6501a7ce:	add    ebx,0x14
6501a7d1:	cmp    ebx,ecx
6501a7d3:	mov    DWORD PTR [ebp+0x8],ebx
6501a7d6:	jb     0x6501a7c8
6501a7d8:	cmp    ebx,ecx
6501a7da:	jne    0x6501a7f1
6501a7dc:	call   0x6501a287
6501a7e1:	mov    ebx,eax
6501a7e3:	test   ebx,ebx
6501a7e5:	mov    DWORD PTR [ebp+0x8],ebx
6501a7e8:	jne    0x6501a7f1
6501a7ea:	xor    eax,eax
6501a7ec:	jmp    0x6501a9fa
6501a7f1:	push   ebx
6501a7f2:	call   0x6501a337
6501a7f7:	pop    ecx
6501a7f8:	mov    ecx,DWORD PTR [ebx+0x10]
6501a7fb:	mov    DWORD PTR [ecx],eax
6501a7fd:	mov    eax,DWORD PTR [ebx+0x10]
6501a800:	cmp    DWORD PTR [eax],0xffffffff
6501a803:	je     0x6501a7ea
6501a805:	mov    DWORD PTR ds:0x65031430,ebx
6501a80b:	mov    eax,DWORD PTR [ebx+0x10]
6501a80e:	mov    edx,DWORD PTR [eax]
6501a810:	cmp    edx,0xffffffff
6501a813:	mov    DWORD PTR [ebp-0x4],edx
6501a816:	je     0x6501a82c
6501a818:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6501a81f:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6501a823:	and    ecx,DWORD PTR [ebp-0x8]
6501a826:	and    edi,esi
6501a828:	or     ecx,edi
6501a82a:	jne    0x6501a855
6501a82c:	and    DWORD PTR [ebp-0x4],0x0
6501a830:	mov    edx,DWORD PTR [eax+0xc4]
6501a836:	lea    ecx,[eax+0x44]
6501a839:	mov    edi,DWORD PTR [ecx]
6501a83b:	and    edx,DWORD PTR [ebp-0x8]
6501a83e:	and    edi,esi
6501a840:	or     edx,edi
6501a842:	jne    0x6501a852
6501a844:	inc    DWORD PTR [ebp-0x4]
6501a847:	mov    edx,DWORD PTR [ecx+0x84]
6501a84d:	add    ecx,0x4
6501a850:	jmp    0x6501a839
6501a852:	mov    edx,DWORD PTR [ebp-0x4]
6501a855:	mov    ecx,edx
6501a857:	imul   ecx,ecx,0x204
6501a85d:	lea    ecx,[ecx+eax*1+0x144]
6501a864:	mov    DWORD PTR [ebp-0xc],ecx
6501a867:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6501a86b:	xor    edi,edi
6501a86d:	and    ecx,esi
6501a86f:	jne    0x6501a883
6501a871:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6501a878:	and    ecx,DWORD PTR [ebp-0x8]
6501a87b:	push   0x20
6501a87d:	pop    edi
6501a87e:	jmp    0x6501a883
6501a880:	add    ecx,ecx
6501a882:	inc    edi
6501a883:	test   ecx,ecx
6501a885:	jge    0x6501a880
6501a887:	mov    ecx,DWORD PTR [ebp-0xc]
6501a88a:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6501a88e:	mov    ecx,DWORD PTR [edx]
6501a890:	sub    ecx,DWORD PTR [ebp-0x10]
6501a893:	mov    esi,ecx
6501a895:	sar    esi,0x4
6501a898:	dec    esi
6501a899:	cmp    esi,0x3f
6501a89c:	mov    DWORD PTR [ebp-0x8],ecx
6501a89f:	jle    0x6501a8a4
6501a8a1:	push   0x3f
6501a8a3:	pop    esi
6501a8a4:	cmp    esi,edi
6501a8a6:	je     0x6501a9ad
6501a8ac:	mov    ecx,DWORD PTR [edx+0x4]
6501a8af:	cmp    ecx,DWORD PTR [edx+0x8]
6501a8b2:	jne    0x6501a910
6501a8b4:	cmp    edi,0x20
6501a8b7:	mov    ebx,0x80000000
6501a8bc:	jge    0x6501a8e4
6501a8be:	mov    ecx,edi
6501a8c0:	shr    ebx,cl
6501a8c2:	mov    ecx,DWORD PTR [ebp-0x4]
6501a8c5:	lea    edi,[eax+edi*1+0x4]
6501a8c9:	not    ebx
6501a8cb:	mov    DWORD PTR [ebp-0x14],ebx
6501a8ce:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6501a8d2:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6501a8d6:	dec    BYTE PTR [edi]
6501a8d8:	jne    0x6501a90d
6501a8da:	mov    ecx,DWORD PTR [ebp-0x14]
6501a8dd:	mov    ebx,DWORD PTR [ebp+0x8]
6501a8e0:	and    DWORD PTR [ebx],ecx
6501a8e2:	jmp    0x6501a910
6501a8e4:	lea    ecx,[edi-0x20]
6501a8e7:	shr    ebx,cl
6501a8e9:	mov    ecx,DWORD PTR [ebp-0x4]
6501a8ec:	lea    ecx,[eax+ecx*4+0xc4]
6501a8f3:	lea    edi,[eax+edi*1+0x4]
6501a8f7:	not    ebx
6501a8f9:	and    DWORD PTR [ecx],ebx
6501a8fb:	dec    BYTE PTR [edi]
6501a8fd:	mov    DWORD PTR [ebp-0x14],ebx
6501a900:	jne    0x6501a90d
6501a902:	mov    ebx,DWORD PTR [ebp+0x8]
6501a905:	mov    ecx,DWORD PTR [ebp-0x14]
6501a908:	and    DWORD PTR [ebx+0x4],ecx
6501a90b:	jmp    0x6501a910
6501a90d:	mov    ebx,DWORD PTR [ebp+0x8]
6501a910:	cmp    DWORD PTR [ebp-0x8],0x0
6501a914:	mov    ecx,DWORD PTR [edx+0x8]
6501a917:	mov    edi,DWORD PTR [edx+0x4]
6501a91a:	mov    DWORD PTR [ecx+0x4],edi
6501a91d:	mov    ecx,DWORD PTR [edx+0x4]
6501a920:	mov    edi,DWORD PTR [edx+0x8]
6501a923:	mov    DWORD PTR [ecx+0x8],edi
6501a926:	je     0x6501a9b9
6501a92c:	mov    ecx,DWORD PTR [ebp-0xc]
6501a92f:	lea    ecx,[ecx+esi*8]
6501a932:	mov    edi,DWORD PTR [ecx+0x4]
6501a935:	mov    DWORD PTR [edx+0x8],ecx
6501a938:	mov    DWORD PTR [edx+0x4],edi
6501a93b:	mov    DWORD PTR [ecx+0x4],edx
6501a93e:	mov    ecx,DWORD PTR [edx+0x4]
6501a941:	mov    DWORD PTR [ecx+0x8],edx
6501a944:	mov    ecx,DWORD PTR [edx+0x4]
6501a947:	cmp    ecx,DWORD PTR [edx+0x8]
6501a94a:	jne    0x6501a9aa
6501a94c:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6501a950:	mov    BYTE PTR [ebp+0xb],cl
6501a953:	inc    cl
6501a955:	cmp    esi,0x20
6501a958:	mov    BYTE PTR [esi+eax*1+0x4],cl
6501a95c:	jge    0x6501a981
6501a95e:	cmp    BYTE PTR [ebp+0xb],0x0
6501a962:	jne    0x6501a96f
6501a964:	mov    edi,0x80000000
6501a969:	mov    ecx,esi
6501a96b:	shr    edi,cl
6501a96d:	or     DWORD PTR [ebx],edi
6501a96f:	mov    ecx,esi
6501a971:	mov    edi,0x80000000
6501a976:	shr    edi,cl
6501a978:	mov    ecx,DWORD PTR [ebp-0x4]
6501a97b:	or     DWORD PTR [eax+ecx*4+0x44],edi
6501a97f:	jmp    0x6501a9aa
6501a981:	cmp    BYTE PTR [ebp+0xb],0x0
6501a985:	jne    0x6501a994
6501a987:	lea    ecx,[esi-0x20]
6501a98a:	mov    edi,0x80000000
6501a98f:	shr    edi,cl
6501a991:	or     DWORD PTR [ebx+0x4],edi
6501a994:	mov    ecx,DWORD PTR [ebp-0x4]
6501a997:	lea    edi,[eax+ecx*4+0xc4]
6501a99e:	lea    ecx,[esi-0x20]
6501a9a1:	mov    esi,0x80000000
6501a9a6:	shr    esi,cl
6501a9a8:	or     DWORD PTR [edi],esi
6501a9aa:	mov    ecx,DWORD PTR [ebp-0x8]
6501a9ad:	test   ecx,ecx
6501a9af:	je     0x6501a9bc
6501a9b1:	mov    DWORD PTR [edx],ecx
6501a9b3:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6501a9b7:	jmp    0x6501a9bc
6501a9b9:	mov    ecx,DWORD PTR [ebp-0x8]
6501a9bc:	mov    esi,DWORD PTR [ebp-0x10]
6501a9bf:	add    edx,ecx
6501a9c1:	lea    ecx,[esi+0x1]
6501a9c4:	mov    DWORD PTR [edx],ecx
6501a9c6:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6501a9ca:	mov    esi,DWORD PTR [ebp-0xc]
6501a9cd:	mov    ecx,DWORD PTR [esi]
6501a9cf:	test   ecx,ecx
6501a9d1:	lea    edi,[ecx+0x1]
6501a9d4:	mov    DWORD PTR [esi],edi
6501a9d6:	jne    0x6501a9f2
6501a9d8:	cmp    ebx,DWORD PTR ds:0x6502dbe8
6501a9de:	jne    0x6501a9f2
6501a9e0:	mov    ecx,DWORD PTR [ebp-0x4]
6501a9e3:	cmp    ecx,DWORD PTR ds:0x65031438
6501a9e9:	jne    0x6501a9f2
6501a9eb:	and    DWORD PTR ds:0x6502dbe8,0x0
6501a9f2:	mov    ecx,DWORD PTR [ebp-0x4]
6501a9f5:	mov    DWORD PTR [eax],ecx
6501a9f7:	lea    eax,[edx+0x4]
6501a9fa:	pop    edi
6501a9fb:	pop    esi
6501a9fc:	pop    ebx
6501a9fd:	leave  
6501a9fe:	ret    
6501a9ff:	push   ecx
6501aa00:	push   ebx
6501aa01:	mov    ebx,DWORD PTR [esp+0xc]
6501aa05:	push   esi
6501aa06:	push   edi
6501aa07:	xor    esi,esi
6501aa09:	xor    edi,edi
6501aa0b:	cmp    ebx,DWORD PTR [edi*8+0x6502ca78]
6501aa12:	je     0x6501aa1a
6501aa14:	inc    edi
6501aa15:	cmp    edi,0x17
6501aa18:	jb     0x6501aa0b
6501aa1a:	cmp    edi,0x17
6501aa1d:	jae    0x6501ab9a
6501aa23:	push   ebp
6501aa24:	push   0x3
6501aa26:	call   0x6501da79
6501aa2b:	cmp    eax,0x1
6501aa2e:	pop    ecx
6501aa2f:	je     0x6501ab66
6501aa35:	push   0x3
6501aa37:	call   0x6501da79
6501aa3c:	test   eax,eax
6501aa3e:	pop    ecx
6501aa3f:	jne    0x6501aa4e
6501aa41:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501aa48:	je     0x6501ab66
6501aa4e:	cmp    ebx,0xfc
6501aa54:	je     0x6501ab99
6501aa5a:	push   0x65025400
6501aa5f:	mov    ebx,0x314
6501aa64:	push   ebx
6501aa65:	mov    ebp,0x6502dbf0
6501aa6a:	push   ebp
6501aa6b:	call   0x65014174
6501aa70:	add    esp,0xc
6501aa73:	test   eax,eax
6501aa75:	je     0x6501aa84
6501aa77:	push   esi
6501aa78:	push   esi
6501aa79:	push   esi
6501aa7a:	push   esi
6501aa7b:	push   esi
6501aa7c:	call   0x65012323
6501aa81:	add    esp,0x14
6501aa84:	push   0x104
6501aa89:	mov    esi,0x6502dc09
6501aa8e:	push   esi
6501aa8f:	push   0x0
6501aa91:	mov    BYTE PTR ds:0x6502dd0d,0x0
6501aa98:	call   DWORD PTR ds:0x65024158
6501aa9e:	test   eax,eax
6501aaa0:	jne    0x6501aac8
6501aaa2:	push   0x650253e8
6501aaa7:	push   0x2fb
6501aaac:	push   esi
6501aaad:	call   0x65014174
6501aab2:	add    esp,0xc
6501aab5:	test   eax,eax
6501aab7:	je     0x6501aac8
6501aab9:	xor    eax,eax
6501aabb:	push   eax
6501aabc:	push   eax
6501aabd:	push   eax
6501aabe:	push   eax
6501aabf:	push   eax
6501aac0:	call   0x65012323
6501aac5:	add    esp,0x14
6501aac8:	push   esi
6501aac9:	call   0x65014080
6501aace:	inc    eax
6501aacf:	cmp    eax,0x3c
6501aad2:	pop    ecx
6501aad3:	jbe    0x6501ab0d
6501aad5:	push   esi
6501aad6:	call   0x65014080
6501aadb:	sub    esi,0x3b
6501aade:	add    eax,esi
6501aae0:	push   0x3
6501aae2:	mov    ecx,0x6502df04
6501aae7:	push   0x650253e4
6501aaec:	sub    ecx,eax
6501aaee:	push   ecx
6501aaef:	push   eax
6501aaf0:	call   0x6501bb56
6501aaf5:	add    esp,0x14
6501aaf8:	test   eax,eax
6501aafa:	je     0x6501ab0d
6501aafc:	xor    esi,esi
6501aafe:	push   esi
6501aaff:	push   esi
6501ab00:	push   esi
6501ab01:	push   esi
6501ab02:	push   esi
6501ab03:	call   0x65012323
6501ab08:	add    esp,0x14
6501ab0b:	jmp    0x6501ab0f
6501ab0d:	xor    esi,esi
6501ab0f:	push   0x650253e0
6501ab14:	push   ebx
6501ab15:	push   ebp
6501ab16:	call   0x6501ba9e
6501ab1b:	add    esp,0xc
6501ab1e:	test   eax,eax
6501ab20:	je     0x6501ab2f
6501ab22:	push   esi
6501ab23:	push   esi
6501ab24:	push   esi
6501ab25:	push   esi
6501ab26:	push   esi
6501ab27:	call   0x65012323
6501ab2c:	add    esp,0x14
6501ab2f:	push   DWORD PTR [edi*8+0x6502ca7c]
6501ab36:	push   ebx
6501ab37:	push   ebp
6501ab38:	call   0x6501ba9e
6501ab3d:	add    esp,0xc
6501ab40:	test   eax,eax
6501ab42:	je     0x6501ab51
6501ab44:	push   esi
6501ab45:	push   esi
6501ab46:	push   esi
6501ab47:	push   esi
6501ab48:	push   esi
6501ab49:	call   0x65012323
6501ab4e:	add    esp,0x14
6501ab51:	push   0x12010
6501ab56:	push   0x650253b8
6501ab5b:	push   ebp
6501ab5c:	call   0x6501d8bc
6501ab61:	add    esp,0xc
6501ab64:	jmp    0x6501ab99
6501ab66:	push   0xfffffff4
6501ab68:	call   DWORD PTR ds:0x6502414c
6501ab6e:	mov    ebp,eax
6501ab70:	cmp    ebp,esi
6501ab72:	je     0x6501ab99
6501ab74:	cmp    ebp,0xffffffff
6501ab77:	je     0x6501ab99
6501ab79:	push   0x0
6501ab7b:	lea    eax,[esp+0x14]
6501ab7f:	push   eax
6501ab80:	lea    esi,[edi*8+0x6502ca7c]
6501ab87:	push   DWORD PTR [esi]
6501ab89:	call   0x65014080
6501ab8e:	pop    ecx
6501ab8f:	push   eax
6501ab90:	push   DWORD PTR [esi]
6501ab92:	push   ebp
6501ab93:	call   DWORD PTR ds:0x65024080
6501ab99:	pop    ebp
6501ab9a:	pop    edi
6501ab9b:	pop    esi
6501ab9c:	pop    ebx
6501ab9d:	pop    ecx
6501ab9e:	ret    
6501ab9f:	push   0x3
6501aba1:	call   0x6501da79
6501aba6:	cmp    eax,0x1
6501aba9:	pop    ecx
6501abaa:	je     0x6501abc1
6501abac:	push   0x3
6501abae:	call   0x6501da79
6501abb3:	test   eax,eax
6501abb5:	pop    ecx
6501abb6:	jne    0x6501abd7
6501abb8:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501abbf:	jne    0x6501abd7
6501abc1:	push   0xfc
6501abc6:	call   0x6501a9ff
6501abcb:	push   0xff
6501abd0:	call   0x6501a9ff
6501abd5:	pop    ecx
6501abd6:	pop    ecx
6501abd7:	ret    
6501abd8:	push   ebp
6501abd9:	mov    ebp,esp
6501abdb:	sub    esp,0x8
6501abde:	mov    DWORD PTR [ebp-0x4],edi
6501abe1:	mov    DWORD PTR [ebp-0x8],esi
6501abe4:	mov    esi,DWORD PTR [ebp+0xc]
6501abe7:	mov    edi,DWORD PTR [ebp+0x8]
6501abea:	mov    ecx,DWORD PTR [ebp+0x10]
6501abed:	shr    ecx,0x7
6501abf0:	jmp    0x6501abf8
6501abf2:	lea    ebx,[ebx+0x0]
6501abf8:	movdqa xmm0,XMMWORD PTR [esi]
6501abfc:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6501ac01:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6501ac06:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6501ac0b:	movdqa XMMWORD PTR [edi],xmm0
6501ac0f:	movdqa XMMWORD PTR [edi+0x10],xmm1
6501ac14:	movdqa XMMWORD PTR [edi+0x20],xmm2
6501ac19:	movdqa XMMWORD PTR [edi+0x30],xmm3
6501ac1e:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6501ac23:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6501ac28:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6501ac2d:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6501ac32:	movdqa XMMWORD PTR [edi+0x40],xmm4
6501ac37:	movdqa XMMWORD PTR [edi+0x50],xmm5
6501ac3c:	movdqa XMMWORD PTR [edi+0x60],xmm6
6501ac41:	movdqa XMMWORD PTR [edi+0x70],xmm7
6501ac46:	lea    esi,[esi+0x80]
6501ac4c:	lea    edi,[edi+0x80]
6501ac52:	dec    ecx
6501ac53:	jne    0x6501abf8
6501ac55:	mov    esi,DWORD PTR [ebp-0x8]
6501ac58:	mov    edi,DWORD PTR [ebp-0x4]
6501ac5b:	mov    esp,ebp
6501ac5d:	pop    ebp
6501ac5e:	ret    
6501ac5f:	push   ebp
6501ac60:	mov    ebp,esp
6501ac62:	sub    esp,0x1c
6501ac65:	mov    DWORD PTR [ebp-0xc],edi
6501ac68:	mov    DWORD PTR [ebp-0x8],esi
6501ac6b:	mov    DWORD PTR [ebp-0x4],ebx
6501ac6e:	mov    ebx,DWORD PTR [ebp+0xc]
6501ac71:	mov    eax,ebx
6501ac73:	cdq    
6501ac74:	mov    ecx,eax
6501ac76:	mov    eax,DWORD PTR [ebp+0x8]
6501ac79:	xor    ecx,edx
6501ac7b:	sub    ecx,edx
6501ac7d:	and    ecx,0xf
6501ac80:	xor    ecx,edx
6501ac82:	sub    ecx,edx
6501ac84:	cdq    
6501ac85:	mov    edi,eax
6501ac87:	xor    edi,edx
6501ac89:	sub    edi,edx
6501ac8b:	and    edi,0xf
6501ac8e:	xor    edi,edx
6501ac90:	sub    edi,edx
6501ac92:	mov    edx,ecx
6501ac94:	or     edx,edi
6501ac96:	jne    0x6501ace2
6501ac98:	mov    esi,DWORD PTR [ebp+0x10]
6501ac9b:	mov    ecx,esi
6501ac9d:	and    ecx,0x7f
6501aca0:	mov    DWORD PTR [ebp-0x18],ecx
6501aca3:	cmp    esi,ecx
6501aca5:	je     0x6501acba
6501aca7:	sub    esi,ecx
6501aca9:	push   esi
6501acaa:	push   ebx
6501acab:	push   eax
6501acac:	call   0x6501abd8
6501acb1:	add    esp,0xc
6501acb4:	mov    eax,DWORD PTR [ebp+0x8]
6501acb7:	mov    ecx,DWORD PTR [ebp-0x18]
6501acba:	test   ecx,ecx
6501acbc:	je     0x6501ad35
6501acbe:	mov    ebx,DWORD PTR [ebp+0x10]
6501acc1:	mov    edx,DWORD PTR [ebp+0xc]
6501acc4:	add    edx,ebx
6501acc6:	sub    edx,ecx
6501acc8:	mov    DWORD PTR [ebp-0x14],edx
6501accb:	add    ebx,eax
6501accd:	sub    ebx,ecx
6501accf:	mov    DWORD PTR [ebp-0x10],ebx
6501acd2:	mov    esi,DWORD PTR [ebp-0x14]
6501acd5:	mov    edi,DWORD PTR [ebp-0x10]
6501acd8:	mov    ecx,DWORD PTR [ebp-0x18]
6501acdb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501acdd:	mov    eax,DWORD PTR [ebp+0x8]
6501ace0:	jmp    0x6501ad35
6501ace2:	cmp    ecx,edi
6501ace4:	jne    0x6501ad1b
6501ace6:	neg    ecx
6501ace8:	add    ecx,0x10
6501aceb:	mov    DWORD PTR [ebp-0x1c],ecx
6501acee:	mov    esi,DWORD PTR [ebp+0xc]
6501acf1:	mov    edi,DWORD PTR [ebp+0x8]
6501acf4:	mov    ecx,DWORD PTR [ebp-0x1c]
6501acf7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501acf9:	mov    ecx,DWORD PTR [ebp+0x8]
6501acfc:	add    ecx,DWORD PTR [ebp-0x1c]
6501acff:	mov    edx,DWORD PTR [ebp+0xc]
6501ad02:	add    edx,DWORD PTR [ebp-0x1c]
6501ad05:	mov    eax,DWORD PTR [ebp+0x10]
6501ad08:	sub    eax,DWORD PTR [ebp-0x1c]
6501ad0b:	push   eax
6501ad0c:	push   edx
6501ad0d:	push   ecx
6501ad0e:	call   0x6501ac5f
6501ad13:	add    esp,0xc
6501ad16:	mov    eax,DWORD PTR [ebp+0x8]
6501ad19:	jmp    0x6501ad35
6501ad1b:	mov    esi,DWORD PTR [ebp+0xc]
6501ad1e:	mov    edi,DWORD PTR [ebp+0x8]
6501ad21:	mov    ecx,DWORD PTR [ebp+0x10]
6501ad24:	mov    edx,ecx
6501ad26:	shr    ecx,0x2
6501ad29:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501ad2b:	mov    ecx,edx
6501ad2d:	and    ecx,0x3
6501ad30:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501ad32:	mov    eax,DWORD PTR [ebp+0x8]
6501ad35:	mov    ebx,DWORD PTR [ebp-0x4]
6501ad38:	mov    esi,DWORD PTR [ebp-0x8]
6501ad3b:	mov    edi,DWORD PTR [ebp-0xc]
6501ad3e:	mov    esp,ebp
6501ad40:	pop    ebp
6501ad41:	ret    
6501ad42:	int3   
6501ad43:	int3   
6501ad44:	push   ebx
6501ad45:	push   esi
6501ad46:	push   edi
6501ad47:	mov    edx,DWORD PTR [esp+0x10]
6501ad4b:	mov    eax,DWORD PTR [esp+0x14]
6501ad4f:	mov    ecx,DWORD PTR [esp+0x18]
6501ad53:	push   ebp
6501ad54:	push   edx
6501ad55:	push   eax
6501ad56:	push   ecx
6501ad57:	push   ecx
6501ad58:	push   0x6501add4
6501ad5d:	push   DWORD PTR fs:0x0
6501ad64:	mov    eax,ds:0x6502c09c
6501ad69:	xor    eax,esp
6501ad6b:	mov    DWORD PTR [esp+0x8],eax
6501ad6f:	mov    DWORD PTR fs:0x0,esp
6501ad76:	mov    eax,DWORD PTR [esp+0x30]
6501ad7a:	mov    ebx,DWORD PTR [eax+0x8]
6501ad7d:	mov    ecx,DWORD PTR [esp+0x2c]
6501ad81:	xor    ebx,DWORD PTR [ecx]
6501ad83:	mov    esi,DWORD PTR [eax+0xc]
6501ad86:	cmp    esi,0xfffffffe
6501ad89:	je     0x6501adc6
6501ad8b:	mov    edx,DWORD PTR [esp+0x34]
6501ad8f:	cmp    edx,0xfffffffe
6501ad92:	je     0x6501ad98
6501ad94:	cmp    esi,edx
6501ad96:	jbe    0x6501adc6
6501ad98:	lea    esi,[esi+esi*2]
6501ad9b:	lea    ebx,[ebx+esi*4+0x10]
6501ad9f:	mov    ecx,DWORD PTR [ebx]
6501ada1:	mov    DWORD PTR [eax+0xc],ecx
6501ada4:	cmp    DWORD PTR [ebx+0x4],0x0
6501ada8:	jne    0x6501ad76
6501adaa:	push   0x101
6501adaf:	mov    eax,DWORD PTR [ebx+0x8]
6501adb2:	call   0x6501b1f1
6501adb7:	mov    ecx,0x1
6501adbc:	mov    eax,DWORD PTR [ebx+0x8]
6501adbf:	call   0x6501b210
6501adc4:	jmp    0x6501ad76
6501adc6:	pop    DWORD PTR fs:0x0
6501adcd:	add    esp,0x18
6501add0:	pop    edi
6501add1:	pop    esi
6501add2:	pop    ebx
6501add3:	ret    
6501add4:	mov    ecx,DWORD PTR [esp+0x4]
6501add8:	test   DWORD PTR [ecx+0x4],0x6
6501addf:	mov    eax,0x1
6501ade4:	je     0x6501ae19
6501ade6:	mov    eax,DWORD PTR [esp+0x8]
6501adea:	mov    ecx,DWORD PTR [eax+0x8]
6501aded:	xor    ecx,eax
6501adef:	call   0x6501292c
6501adf4:	push   ebp
6501adf5:	mov    ebp,DWORD PTR [eax+0x18]
6501adf8:	push   DWORD PTR [eax+0xc]
6501adfb:	push   DWORD PTR [eax+0x10]
6501adfe:	push   DWORD PTR [eax+0x14]
6501ae01:	call   0x6501ad44
6501ae06:	add    esp,0xc
6501ae09:	pop    ebp
6501ae0a:	mov    eax,DWORD PTR [esp+0x8]
6501ae0e:	mov    edx,DWORD PTR [esp+0x10]
6501ae12:	mov    DWORD PTR [edx],eax
6501ae14:	mov    eax,0x3
6501ae19:	ret    
6501ae1a:	push   ebp
6501ae1b:	mov    ecx,DWORD PTR [esp+0x8]
6501ae1f:	mov    ebp,DWORD PTR [ecx]
6501ae21:	push   DWORD PTR [ecx+0x1c]
6501ae24:	push   DWORD PTR [ecx+0x18]
6501ae27:	push   DWORD PTR [ecx+0x28]
6501ae2a:	call   0x6501ad44
6501ae2f:	add    esp,0xc
6501ae32:	pop    ebp
6501ae33:	ret    0x4
6501ae36:	push   ebp
6501ae37:	push   esi
6501ae38:	push   edi
6501ae39:	push   ebx
6501ae3a:	mov    ebp,edx
6501ae3c:	xor    eax,eax
6501ae3e:	xor    ebx,ebx
6501ae40:	xor    edx,edx
6501ae42:	xor    esi,esi
6501ae44:	xor    edi,edi
6501ae46:	call   ecx
6501ae48:	pop    ebx
6501ae49:	pop    edi
6501ae4a:	pop    esi
6501ae4b:	pop    ebp
6501ae4c:	ret    
6501ae4d:	mov    ebp,edx
6501ae4f:	mov    esi,ecx
6501ae51:	mov    eax,ecx
6501ae53:	push   0x1
6501ae55:	call   0x6501b1f1
6501ae5a:	xor    eax,eax
6501ae5c:	xor    ebx,ebx
6501ae5e:	xor    ecx,ecx
6501ae60:	xor    edx,edx
6501ae62:	xor    edi,edi
6501ae64:	jmp    esi
6501ae66:	push   ebp
6501ae67:	mov    ebp,esp
6501ae69:	push   ebx
6501ae6a:	push   esi
6501ae6b:	push   edi
6501ae6c:	push   0x0
6501ae6e:	push   0x0
6501ae70:	push   0x6501ae7b
6501ae75:	push   ecx
6501ae76:	call   0x6501eb1c
6501ae7b:	pop    edi
6501ae7c:	pop    esi
6501ae7d:	pop    ebx
6501ae7e:	pop    ebp
6501ae7f:	ret    
6501ae80:	push   ebp
6501ae81:	mov    ebp,DWORD PTR [esp+0x8]
6501ae85:	push   edx
6501ae86:	push   ecx
6501ae87:	push   DWORD PTR [esp+0x14]
6501ae8b:	call   0x6501ad44
6501ae90:	add    esp,0xc
6501ae93:	pop    ebp
6501ae94:	ret    0x8
6501ae97:	int3   
6501ae98:	int3   
6501ae99:	int3   
6501ae9a:	int3   
6501ae9b:	int3   
6501ae9c:	int3   
6501ae9d:	int3   
6501ae9e:	int3   
6501ae9f:	int3   
6501aea0:	mov    ecx,DWORD PTR [esp+0x4]
6501aea4:	cmp    WORD PTR [ecx],0x5a4d
6501aea9:	je     0x6501aeae
6501aeab:	xor    eax,eax
6501aead:	ret    
6501aeae:	mov    eax,DWORD PTR [ecx+0x3c]
6501aeb1:	add    eax,ecx
6501aeb3:	cmp    DWORD PTR [eax],0x4550
6501aeb9:	jne    0x6501aeab
6501aebb:	xor    ecx,ecx
6501aebd:	cmp    WORD PTR [eax+0x18],0x10b
6501aec3:	sete   cl
6501aec6:	mov    eax,ecx
6501aec8:	ret    
6501aec9:	int3   
6501aeca:	int3   
6501aecb:	int3   
6501aecc:	int3   
6501aecd:	int3   
6501aece:	int3   
6501aecf:	int3   
6501aed0:	mov    eax,DWORD PTR [esp+0x4]
6501aed4:	mov    ecx,DWORD PTR [eax+0x3c]
6501aed7:	add    ecx,eax
6501aed9:	movzx  eax,WORD PTR [ecx+0x14]
6501aedd:	push   ebx
6501aede:	push   esi
6501aedf:	movzx  esi,WORD PTR [ecx+0x6]
6501aee3:	xor    edx,edx
6501aee5:	test   esi,esi
6501aee7:	push   edi
6501aee8:	lea    eax,[eax+ecx*1+0x18]
6501aeec:	jbe    0x6501af0c
6501aeee:	mov    edi,DWORD PTR [esp+0x14]
6501aef2:	mov    ecx,DWORD PTR [eax+0xc]
6501aef5:	cmp    edi,ecx
6501aef7:	jb     0x6501af02
6501aef9:	mov    ebx,DWORD PTR [eax+0x8]
6501aefc:	add    ebx,ecx
6501aefe:	cmp    edi,ebx
6501af00:	jb     0x6501af0e
6501af02:	add    edx,0x1
6501af05:	add    eax,0x28
6501af08:	cmp    edx,esi
6501af0a:	jb     0x6501aef2
6501af0c:	xor    eax,eax
6501af0e:	pop    edi
6501af0f:	pop    esi
6501af10:	pop    ebx
6501af11:	ret    
6501af12:	int3   
6501af13:	int3   
6501af14:	int3   
6501af15:	int3   
6501af16:	int3   
6501af17:	int3   
6501af18:	int3   
6501af19:	int3   
6501af1a:	int3   
6501af1b:	int3   
6501af1c:	int3   
6501af1d:	int3   
6501af1e:	int3   
6501af1f:	int3   
6501af20:	push   ebp
6501af21:	mov    ebp,esp
6501af23:	push   0xfffffffe
6501af25:	push   0x65029d70
6501af2a:	push   0x65013ee0
6501af2f:	mov    eax,fs:0x0
6501af35:	push   eax
6501af36:	sub    esp,0x8
6501af39:	push   ebx
6501af3a:	push   esi
6501af3b:	push   edi
6501af3c:	mov    eax,ds:0x6502c09c
6501af41:	xor    DWORD PTR [ebp-0x8],eax
6501af44:	xor    eax,ebp
6501af46:	push   eax
6501af47:	lea    eax,[ebp-0x10]
6501af4a:	mov    fs:0x0,eax
6501af50:	mov    DWORD PTR [ebp-0x18],esp
6501af53:	mov    DWORD PTR [ebp-0x4],0x0
6501af5a:	push   0x65000000
6501af5f:	call   0x6501aea0
6501af64:	add    esp,0x4
6501af67:	test   eax,eax
6501af69:	je     0x6501afc0
6501af6b:	mov    eax,DWORD PTR [ebp+0x8]
6501af6e:	sub    eax,0x65000000
6501af73:	push   eax
6501af74:	push   0x65000000
6501af79:	call   0x6501aed0
6501af7e:	add    esp,0x8
6501af81:	test   eax,eax
6501af83:	je     0x6501afc0
6501af85:	mov    eax,DWORD PTR [eax+0x24]
6501af88:	shr    eax,0x1f
6501af8b:	not    eax
6501af8d:	and    eax,0x1
6501af90:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501af97:	mov    ecx,DWORD PTR [ebp-0x10]
6501af9a:	mov    DWORD PTR fs:0x0,ecx
6501afa1:	pop    ecx
6501afa2:	pop    edi
6501afa3:	pop    esi
6501afa4:	pop    ebx
6501afa5:	mov    esp,ebp
6501afa7:	pop    ebp
6501afa8:	ret    
6501afa9:	mov    eax,DWORD PTR [ebp-0x14]
6501afac:	mov    ecx,DWORD PTR [eax]
6501afae:	mov    eax,DWORD PTR [ecx]
6501afb0:	xor    edx,edx
6501afb2:	cmp    eax,0xc0000005
6501afb7:	sete   dl
6501afba:	mov    eax,edx
6501afbc:	ret    
6501afbd:	mov    esp,DWORD PTR [ebp-0x18]
6501afc0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501afc7:	xor    eax,eax
6501afc9:	mov    ecx,DWORD PTR [ebp-0x10]
6501afcc:	mov    DWORD PTR fs:0x0,ecx
6501afd3:	pop    ecx
6501afd4:	pop    edi
6501afd5:	pop    esi
6501afd6:	pop    ebx
6501afd7:	mov    esp,ebp
6501afd9:	pop    ebp
6501afda:	ret    
6501afdb:	xor    eax,eax
6501afdd:	inc    eax
6501afde:	cmp    DWORD PTR [esp+0x4],0x0
6501afe3:	jne    0x6501afe7
6501afe5:	xor    eax,eax
6501afe7:	ret    
6501afe8:	push   ebp
6501afe9:	lea    ebp,[esp-0x2a8]
6501aff0:	sub    esp,0x328
6501aff6:	mov    eax,ds:0x6502c09c
6501affb:	xor    eax,ebp
6501affd:	mov    DWORD PTR [ebp+0x2a4],eax
6501b003:	test   BYTE PTR ds:0x6502cb30,0x1
6501b00a:	push   esi
6501b00b:	je     0x6501b015
6501b00d:	push   0xa
6501b00f:	call   0x6501a9ff
6501b014:	pop    ecx
6501b015:	call   0x6501b39d
6501b01a:	test   eax,eax
6501b01c:	je     0x6501b026
6501b01e:	push   0x16
6501b020:	call   0x6501b3aa
6501b025:	pop    ecx
6501b026:	test   BYTE PTR ds:0x6502cb30,0x2
6501b02d:	je     0x6501b0d3
6501b033:	mov    DWORD PTR [ebp+0x88],eax
6501b039:	mov    DWORD PTR [ebp+0x84],ecx
6501b03f:	mov    DWORD PTR [ebp+0x80],edx
6501b045:	mov    DWORD PTR [ebp+0x7c],ebx
6501b048:	mov    DWORD PTR [ebp+0x78],esi
6501b04b:	mov    DWORD PTR [ebp+0x74],edi
6501b04e:	data16 mov WORD PTR [ebp+0xa0],ss
6501b055:	data16 mov WORD PTR [ebp+0x94],cs
6501b05c:	data16 mov WORD PTR [ebp+0x70],ds
6501b060:	data16 mov WORD PTR [ebp+0x6c],es
6501b064:	data16 mov WORD PTR [ebp+0x68],fs
6501b068:	data16 mov WORD PTR [ebp+0x64],gs
6501b06c:	pushf  
6501b06d:	pop    DWORD PTR [ebp+0x98]
6501b073:	mov    esi,DWORD PTR [ebp+0x2ac]
6501b079:	lea    eax,[ebp+0x2ac]
6501b07f:	mov    DWORD PTR [ebp+0x9c],eax
6501b085:	mov    DWORD PTR [ebp-0x28],0x10001
6501b08c:	mov    DWORD PTR [ebp+0x90],esi
6501b092:	mov    eax,DWORD PTR [eax-0x4]
6501b095:	push   0x50
6501b097:	mov    DWORD PTR [ebp+0x8c],eax
6501b09d:	lea    eax,[ebp-0x80]
6501b0a0:	push   0x0
6501b0a2:	push   eax
6501b0a3:	call   0x65012fb0
6501b0a8:	lea    eax,[ebp-0x80]
6501b0ab:	add    esp,0xc
6501b0ae:	mov    DWORD PTR [ebp-0x30],eax
6501b0b1:	lea    eax,[ebp-0x28]
6501b0b4:	push   0x0
6501b0b6:	mov    DWORD PTR [ebp-0x80],0x40000015
6501b0bd:	mov    DWORD PTR [ebp-0x74],esi
6501b0c0:	mov    DWORD PTR [ebp-0x2c],eax
6501b0c3:	call   DWORD PTR ds:0x65024108
6501b0c9:	lea    eax,[ebp-0x30]
6501b0cc:	push   eax
6501b0cd:	call   DWORD PTR ds:0x65024104
6501b0d3:	push   0x3
6501b0d5:	call   0x65015f96
6501b0da:	int3   
6501b0db:	int3   
6501b0dc:	push   ebp
6501b0dd:	mov    ebp,esp
6501b0df:	push   ebx
6501b0e0:	push   esi
6501b0e1:	push   edi
6501b0e2:	push   ebp
6501b0e3:	push   0x0
6501b0e5:	push   0x0
6501b0e7:	push   0x6501b0f4
6501b0ec:	push   DWORD PTR [ebp+0x8]
6501b0ef:	call   0x6501eb1c
6501b0f4:	pop    ebp
6501b0f5:	pop    edi
6501b0f6:	pop    esi
6501b0f7:	pop    ebx
6501b0f8:	mov    esp,ebp
6501b0fa:	pop    ebp
6501b0fb:	ret    
6501b0fc:	mov    ecx,DWORD PTR [esp+0x4]
6501b100:	test   DWORD PTR [ecx+0x4],0x6
6501b107:	mov    eax,0x1
6501b10c:	je     0x6501b140
6501b10e:	mov    eax,DWORD PTR [esp+0x14]
6501b112:	mov    ecx,DWORD PTR [eax-0x4]
6501b115:	xor    ecx,eax
6501b117:	call   0x6501292c
6501b11c:	push   ebp
6501b11d:	mov    ebp,DWORD PTR [eax+0x10]
6501b120:	mov    edx,DWORD PTR [eax+0x28]
6501b123:	push   edx
6501b124:	mov    edx,DWORD PTR [eax+0x24]
6501b127:	push   edx
6501b128:	call   0x6501b141
6501b12d:	add    esp,0x8
6501b130:	pop    ebp
6501b131:	mov    eax,DWORD PTR [esp+0x8]
6501b135:	mov    edx,DWORD PTR [esp+0x10]
6501b139:	mov    DWORD PTR [edx],eax
6501b13b:	mov    eax,0x3
6501b140:	ret    
6501b141:	push   ebx
6501b142:	push   esi
6501b143:	push   edi
6501b144:	mov    eax,DWORD PTR [esp+0x10]
6501b148:	push   ebp
6501b149:	push   eax
6501b14a:	push   0xfffffffe
6501b14c:	push   0x6501b0fc
6501b151:	push   DWORD PTR fs:0x0
6501b158:	mov    eax,ds:0x6502c09c
6501b15d:	xor    eax,esp
6501b15f:	push   eax
6501b160:	lea    eax,[esp+0x4]
6501b164:	mov    fs:0x0,eax
6501b16a:	mov    eax,DWORD PTR [esp+0x28]
6501b16e:	mov    ebx,DWORD PTR [eax+0x8]
6501b171:	mov    esi,DWORD PTR [eax+0xc]
6501b174:	cmp    esi,0xffffffff
6501b177:	je     0x6501b1b3
6501b179:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6501b17e:	je     0x6501b186
6501b180:	cmp    esi,DWORD PTR [esp+0x2c]
6501b184:	jbe    0x6501b1b3
6501b186:	lea    esi,[esi+esi*2]
6501b189:	mov    ecx,DWORD PTR [ebx+esi*4]
6501b18c:	mov    DWORD PTR [esp+0xc],ecx
6501b190:	mov    DWORD PTR [eax+0xc],ecx
6501b193:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6501b198:	jne    0x6501b1b1
6501b19a:	push   0x101
6501b19f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6501b1a3:	call   0x6501b1f1
6501b1a8:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6501b1ac:	call   0x6501b210
6501b1b1:	jmp    0x6501b16a
6501b1b3:	mov    ecx,DWORD PTR [esp+0x4]
6501b1b7:	mov    DWORD PTR fs:0x0,ecx
6501b1be:	add    esp,0x18
6501b1c1:	pop    edi
6501b1c2:	pop    esi
6501b1c3:	pop    ebx
6501b1c4:	ret    
6501b1c5:	xor    eax,eax
6501b1c7:	mov    ecx,DWORD PTR fs:0x0
6501b1ce:	cmp    DWORD PTR [ecx+0x4],0x6501b0fc
6501b1d5:	jne    0x6501b1e7
6501b1d7:	mov    edx,DWORD PTR [ecx+0xc]
6501b1da:	mov    edx,DWORD PTR [edx+0xc]
6501b1dd:	cmp    DWORD PTR [ecx+0x8],edx
6501b1e0:	jne    0x6501b1e7
6501b1e2:	mov    eax,0x1
6501b1e7:	ret    
6501b1e8:	push   ebx
6501b1e9:	push   ecx
6501b1ea:	mov    ebx,0x6502cb34
6501b1ef:	jmp    0x6501b1fc
6501b1f1:	push   ebx
6501b1f2:	push   ecx
6501b1f3:	mov    ebx,0x6502cb34
6501b1f8:	mov    ecx,DWORD PTR [esp+0xc]
6501b1fc:	mov    DWORD PTR [ebx+0x8],ecx
6501b1ff:	mov    DWORD PTR [ebx+0x4],eax
6501b202:	mov    DWORD PTR [ebx+0xc],ebp
6501b205:	push   ebp
6501b206:	push   ecx
6501b207:	push   eax
6501b208:	pop    eax
6501b209:	pop    ecx
6501b20a:	pop    ebp
6501b20b:	pop    ecx
6501b20c:	pop    ebx
6501b20d:	ret    0x4
6501b210:	call   eax
6501b212:	ret    
6501b213:	push   0xc
6501b215:	push   0x65029d90
6501b21a:	call   0x65013e70
6501b21f:	mov    ecx,DWORD PTR [ebp+0x8]
6501b222:	xor    edi,edi
6501b224:	cmp    ecx,edi
6501b226:	jbe    0x6501b256
6501b228:	push   0xffffffe0
6501b22a:	pop    eax
6501b22b:	xor    edx,edx
6501b22d:	div    ecx
6501b22f:	cmp    eax,DWORD PTR [ebp+0xc]
6501b232:	sbb    eax,eax
6501b234:	inc    eax
6501b235:	jne    0x6501b256
6501b237:	call   0x65014580
6501b23c:	mov    DWORD PTR [eax],0xc
6501b242:	push   edi
6501b243:	push   edi
6501b244:	push   edi
6501b245:	push   edi
6501b246:	push   edi
6501b247:	call   0x6501241f
6501b24c:	add    esp,0x14
6501b24f:	xor    eax,eax
6501b251:	jmp    0x6501b32b
6501b256:	imul   ecx,DWORD PTR [ebp+0xc]
6501b25a:	mov    esi,ecx
6501b25c:	mov    DWORD PTR [ebp+0x8],esi
6501b25f:	cmp    esi,edi
6501b261:	jne    0x6501b266
6501b263:	xor    esi,esi
6501b265:	inc    esi
6501b266:	xor    ebx,ebx
6501b268:	mov    DWORD PTR [ebp-0x1c],ebx
6501b26b:	cmp    esi,0xffffffe0
6501b26e:	ja     0x6501b2d9
6501b270:	cmp    DWORD PTR ds:0x6503143c,0x3
6501b277:	jne    0x6501b2c4
6501b279:	add    esi,0xf
6501b27c:	and    esi,0xfffffff0
6501b27f:	mov    DWORD PTR [ebp+0xc],esi
6501b282:	mov    eax,DWORD PTR [ebp+0x8]
6501b285:	cmp    eax,DWORD PTR ds:0x6503142c
6501b28b:	ja     0x6501b2c4
6501b28d:	push   0x4
6501b28f:	call   0x65019ecf
6501b294:	pop    ecx
6501b295:	mov    DWORD PTR [ebp-0x4],edi
6501b298:	push   DWORD PTR [ebp+0x8]
6501b29b:	call   0x6501a71c
6501b2a0:	pop    ecx
6501b2a1:	mov    DWORD PTR [ebp-0x1c],eax
6501b2a4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b2ab:	call   0x6501b30f
6501b2b0:	mov    ebx,DWORD PTR [ebp-0x1c]
6501b2b3:	cmp    ebx,edi
6501b2b5:	je     0x6501b2c8
6501b2b7:	push   DWORD PTR [ebp+0x8]
6501b2ba:	push   edi
6501b2bb:	push   ebx
6501b2bc:	call   0x65012fb0
6501b2c1:	add    esp,0xc
6501b2c4:	cmp    ebx,edi
6501b2c6:	jne    0x6501b329
6501b2c8:	push   esi
6501b2c9:	push   0x8
6501b2cb:	push   DWORD PTR ds:0x6502da8c
6501b2d1:	call   DWORD PTR ds:0x650240ec
6501b2d7:	mov    ebx,eax
6501b2d9:	cmp    ebx,edi
6501b2db:	jne    0x6501b329
6501b2dd:	cmp    DWORD PTR ds:0x6502df04,edi
6501b2e3:	je     0x6501b318
6501b2e5:	push   esi
6501b2e6:	call   0x65014bfb
6501b2eb:	pop    ecx
6501b2ec:	test   eax,eax
6501b2ee:	jne    0x6501b266
6501b2f4:	mov    eax,DWORD PTR [ebp+0x10]
6501b2f7:	cmp    eax,edi
6501b2f9:	je     0x6501b24f
6501b2ff:	mov    DWORD PTR [eax],0xc
6501b305:	jmp    0x6501b24f
6501b30a:	xor    edi,edi
6501b30c:	mov    esi,DWORD PTR [ebp+0xc]
6501b30f:	push   0x4
6501b311:	call   0x65019df7
6501b316:	pop    ecx
6501b317:	ret    
6501b318:	cmp    ebx,edi
6501b31a:	jne    0x6501b329
6501b31c:	mov    eax,DWORD PTR [ebp+0x10]
6501b31f:	cmp    eax,edi
6501b321:	je     0x6501b329
6501b323:	mov    DWORD PTR [eax],0xc
6501b329:	mov    eax,ebx
6501b32b:	call   0x65013eb5
6501b330:	ret    
6501b331:	push   esi
6501b332:	push   edi
6501b333:	xor    edi,edi
6501b335:	lea    esi,[edi+0x6502cb44]
6501b33b:	push   DWORD PTR [esi]
6501b33d:	call   0x65014638
6501b342:	add    edi,0x4
6501b345:	cmp    edi,0x28
6501b348:	pop    ecx
6501b349:	mov    DWORD PTR [esi],eax
6501b34b:	jb     0x6501b335
6501b34d:	pop    edi
6501b34e:	pop    esi
6501b34f:	ret    
6501b350:	mov    eax,DWORD PTR [esp+0x4]
6501b354:	mov    ds:0x6502df44,eax
6501b359:	mov    ds:0x6502df48,eax
6501b35e:	mov    ds:0x6502df4c,eax
6501b363:	mov    ds:0x6502df50,eax
6501b368:	ret    
6501b369:	mov    eax,DWORD PTR [esp+0x4]
6501b36d:	mov    ecx,DWORD PTR ds:0x6502c94c
6501b373:	push   esi
6501b374:	cmp    DWORD PTR [eax+0x4],edx
6501b377:	je     0x6501b389
6501b379:	mov    esi,ecx
6501b37b:	imul   esi,esi,0xc
6501b37e:	add    esi,DWORD PTR [esp+0x8]
6501b382:	add    eax,0xc
6501b385:	cmp    eax,esi
6501b387:	jb     0x6501b374
6501b389:	imul   ecx,ecx,0xc
6501b38c:	add    ecx,DWORD PTR [esp+0x8]
6501b390:	pop    esi
6501b391:	cmp    eax,ecx
6501b393:	jae    0x6501b39a
6501b395:	cmp    DWORD PTR [eax+0x4],edx
6501b398:	je     0x6501b39c
6501b39a:	xor    eax,eax
6501b39c:	ret    
6501b39d:	push   DWORD PTR ds:0x6502df4c
6501b3a3:	call   0x650146af
6501b3a8:	pop    ecx
6501b3a9:	ret    
6501b3aa:	push   0x20
6501b3ac:	push   0x65029db0
6501b3b1:	call   0x65013e70
6501b3b6:	xor    edi,edi
6501b3b8:	mov    DWORD PTR [ebp-0x1c],edi
6501b3bb:	mov    DWORD PTR [ebp-0x28],edi
6501b3be:	mov    ebx,DWORD PTR [ebp+0x8]
6501b3c1:	cmp    ebx,0xb
6501b3c4:	jg     0x6501b412
6501b3c6:	je     0x6501b3dd
6501b3c8:	mov    eax,ebx
6501b3ca:	push   0x2
6501b3cc:	pop    ecx
6501b3cd:	sub    eax,ecx
6501b3cf:	je     0x6501b3f3
6501b3d1:	sub    eax,ecx
6501b3d3:	je     0x6501b3dd
6501b3d5:	sub    eax,ecx
6501b3d7:	je     0x6501b43d
6501b3d9:	sub    eax,ecx
6501b3db:	jne    0x6501b421
6501b3dd:	call   0x65014854
6501b3e2:	mov    edi,eax
6501b3e4:	mov    DWORD PTR [ebp-0x28],edi
6501b3e7:	test   edi,edi
6501b3e9:	jne    0x6501b3ff
6501b3eb:	or     eax,0xffffffff
6501b3ee:	jmp    0x6501b554
6501b3f3:	mov    esi,0x6502df44
6501b3f8:	mov    eax,ds:0x6502df44
6501b3fd:	jmp    0x6501b45f
6501b3ff:	push   DWORD PTR [edi+0x5c]
6501b402:	mov    edx,ebx
6501b404:	call   0x6501b369
6501b409:	mov    esi,eax
6501b40b:	add    esi,0x8
6501b40e:	mov    eax,DWORD PTR [esi]
6501b410:	jmp    0x6501b46c
6501b412:	mov    eax,ebx
6501b414:	sub    eax,0xf
6501b417:	je     0x6501b455
6501b419:	sub    eax,0x6
6501b41c:	je     0x6501b449
6501b41e:	dec    eax
6501b41f:	je     0x6501b43d
6501b421:	call   0x65014580
6501b426:	mov    DWORD PTR [eax],0x16
6501b42c:	xor    eax,eax
6501b42e:	push   eax
6501b42f:	push   eax
6501b430:	push   eax
6501b431:	push   eax
6501b432:	push   eax
6501b433:	call   0x6501241f
6501b438:	add    esp,0x14
6501b43b:	jmp    0x6501b3eb
6501b43d:	mov    esi,0x6502df4c
6501b442:	mov    eax,ds:0x6502df4c
6501b447:	jmp    0x6501b45f
6501b449:	mov    esi,0x6502df48
6501b44e:	mov    eax,ds:0x6502df48
6501b453:	jmp    0x6501b45f
6501b455:	mov    esi,0x6502df50
6501b45a:	mov    eax,ds:0x6502df50
6501b45f:	mov    DWORD PTR [ebp-0x1c],0x1
6501b466:	push   eax
6501b467:	call   0x650146af
6501b46c:	mov    DWORD PTR [ebp-0x20],eax
6501b46f:	pop    ecx
6501b470:	xor    eax,eax
6501b472:	cmp    DWORD PTR [ebp-0x20],0x1
6501b476:	je     0x6501b554
6501b47c:	cmp    DWORD PTR [ebp-0x20],eax
6501b47f:	jne    0x6501b488
6501b481:	push   0x3
6501b483:	call   0x65015f96
6501b488:	cmp    DWORD PTR [ebp-0x1c],eax
6501b48b:	je     0x6501b494
6501b48d:	push   eax
6501b48e:	call   0x65019ecf
6501b493:	pop    ecx
6501b494:	xor    eax,eax
6501b496:	mov    DWORD PTR [ebp-0x4],eax
6501b499:	cmp    ebx,0x8
6501b49c:	je     0x6501b4a8
6501b49e:	cmp    ebx,0xb
6501b4a1:	je     0x6501b4a8
6501b4a3:	cmp    ebx,0x4
6501b4a6:	jne    0x6501b4c3
6501b4a8:	mov    ecx,DWORD PTR [edi+0x60]
6501b4ab:	mov    DWORD PTR [ebp-0x2c],ecx
6501b4ae:	mov    DWORD PTR [edi+0x60],eax
6501b4b1:	cmp    ebx,0x8
6501b4b4:	jne    0x6501b4f6
6501b4b6:	mov    ecx,DWORD PTR [edi+0x64]
6501b4b9:	mov    DWORD PTR [ebp-0x30],ecx
6501b4bc:	mov    DWORD PTR [edi+0x64],0x8c
6501b4c3:	cmp    ebx,0x8
6501b4c6:	jne    0x6501b4f6
6501b4c8:	mov    ecx,DWORD PTR ds:0x6502c940
6501b4ce:	mov    DWORD PTR [ebp-0x24],ecx
6501b4d1:	mov    ecx,DWORD PTR ds:0x6502c944
6501b4d7:	mov    edx,DWORD PTR ds:0x6502c940
6501b4dd:	add    ecx,edx
6501b4df:	cmp    DWORD PTR [ebp-0x24],ecx
6501b4e2:	jge    0x6501b4fd
6501b4e4:	mov    ecx,DWORD PTR [ebp-0x24]
6501b4e7:	imul   ecx,ecx,0xc
6501b4ea:	mov    edx,DWORD PTR [edi+0x5c]
6501b4ed:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6501b4f1:	inc    DWORD PTR [ebp-0x24]
6501b4f4:	jmp    0x6501b4d1
6501b4f6:	call   0x650146a6
6501b4fb:	mov    DWORD PTR [esi],eax
6501b4fd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b504:	call   0x6501b51e
6501b509:	cmp    ebx,0x8
6501b50c:	jne    0x6501b52d
6501b50e:	push   DWORD PTR [edi+0x64]
6501b511:	push   ebx
6501b512:	call   DWORD PTR [ebp-0x20]
6501b515:	pop    ecx
6501b516:	jmp    0x6501b531
6501b518:	mov    ebx,DWORD PTR [ebp+0x8]
6501b51b:	mov    edi,DWORD PTR [ebp-0x28]
6501b51e:	cmp    DWORD PTR [ebp-0x1c],0x0
6501b522:	je     0x6501b52c
6501b524:	push   0x0
6501b526:	call   0x65019df7
6501b52b:	pop    ecx
6501b52c:	ret    
6501b52d:	push   ebx
6501b52e:	call   DWORD PTR [ebp-0x20]
6501b531:	pop    ecx
6501b532:	cmp    ebx,0x8
6501b535:	je     0x6501b541
6501b537:	cmp    ebx,0xb
6501b53a:	je     0x6501b541
6501b53c:	cmp    ebx,0x4
6501b53f:	jne    0x6501b552
6501b541:	mov    eax,DWORD PTR [ebp-0x2c]
6501b544:	mov    DWORD PTR [edi+0x60],eax
6501b547:	cmp    ebx,0x8
6501b54a:	jne    0x6501b552
6501b54c:	mov    eax,DWORD PTR [ebp-0x30]
6501b54f:	mov    DWORD PTR [edi+0x64],eax
6501b552:	xor    eax,eax
6501b554:	call   0x65013eb5
6501b559:	ret    
6501b55a:	mov    eax,DWORD PTR [esp+0x4]
6501b55e:	mov    ds:0x6502df58,eax
6501b563:	ret    
6501b564:	mov    eax,DWORD PTR [esp+0x4]
6501b568:	mov    ds:0x6502df64,eax
6501b56d:	ret    
6501b56e:	mov    eax,DWORD PTR [esp+0x4]
6501b572:	mov    ds:0x6502df68,eax
6501b577:	ret    
6501b578:	push   DWORD PTR [esp+0x4]
6501b57c:	call   DWORD PTR ds:0x65024014
6501b582:	xor    eax,eax
6501b584:	inc    eax
6501b585:	ret    0x8
6501b588:	push   0x14
6501b58a:	push   0x65029dd0
6501b58f:	call   0x65013e70
6501b594:	xor    edi,edi
6501b596:	mov    DWORD PTR [ebp-0x1c],edi
6501b599:	push   DWORD PTR ds:0x6502df68
6501b59f:	call   0x650146af
6501b5a4:	pop    ecx
6501b5a5:	mov    esi,eax
6501b5a7:	cmp    esi,edi
6501b5a9:	jne    0x6501b5fe
6501b5ab:	lea    eax,[ebp-0x1c]
6501b5ae:	push   eax
6501b5af:	call   0x65015daf
6501b5b4:	pop    ecx
6501b5b5:	cmp    eax,edi
6501b5b7:	je     0x6501b5c6
6501b5b9:	push   edi
6501b5ba:	push   edi
6501b5bb:	push   edi
6501b5bc:	push   edi
6501b5bd:	push   edi
6501b5be:	call   0x65012323
6501b5c3:	add    esp,0x14
6501b5c6:	cmp    DWORD PTR [ebp-0x1c],0x1
6501b5ca:	je     0x6501b5ed
6501b5cc:	push   0x65025b60
6501b5d1:	call   DWORD PTR ds:0x6502411c
6501b5d7:	cmp    eax,edi
6501b5d9:	je     0x6501b5ed
6501b5db:	push   0x65025b38
6501b5e0:	push   eax
6501b5e1:	call   DWORD PTR ds:0x6502408c
6501b5e7:	mov    esi,eax
6501b5e9:	cmp    esi,edi
6501b5eb:	jne    0x6501b5f2
6501b5ed:	mov    esi,0x6501b578
6501b5f2:	push   esi
6501b5f3:	call   0x65014638
6501b5f8:	pop    ecx
6501b5f9:	mov    ds:0x6502df68,eax
6501b5fe:	mov    DWORD PTR [ebp-0x4],edi
6501b601:	push   DWORD PTR [ebp+0xc]
6501b604:	push   DWORD PTR [ebp+0x8]
6501b607:	call   esi
6501b609:	mov    DWORD PTR [ebp-0x20],eax
6501b60c:	jmp    0x6501b63d
6501b60e:	mov    eax,DWORD PTR [ebp-0x14]
6501b611:	mov    eax,DWORD PTR [eax]
6501b613:	mov    eax,DWORD PTR [eax]
6501b615:	mov    DWORD PTR [ebp-0x24],eax
6501b618:	xor    ecx,ecx
6501b61a:	cmp    eax,0xc0000017
6501b61f:	sete   cl
6501b622:	mov    eax,ecx
6501b624:	ret    
6501b625:	mov    esp,DWORD PTR [ebp-0x18]
6501b628:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6501b62f:	jne    0x6501b639
6501b631:	push   0x8
6501b633:	call   DWORD PTR ds:0x65024090
6501b639:	and    DWORD PTR [ebp-0x20],0x0
6501b63d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b644:	mov    eax,DWORD PTR [ebp-0x20]
6501b647:	call   0x65013eb5
6501b64c:	ret    
6501b64d:	push   ebp
6501b64e:	mov    ebp,esp
6501b650:	push   ecx
6501b651:	push   ecx
6501b652:	mov    eax,ds:0x6502c09c
6501b657:	xor    eax,ebp
6501b659:	mov    DWORD PTR [ebp-0x4],eax
6501b65c:	mov    eax,ds:0x6502df6c
6501b661:	push   ebx
6501b662:	push   esi
6501b663:	xor    ebx,ebx
6501b665:	cmp    eax,ebx
6501b667:	push   edi
6501b668:	mov    edi,ecx
6501b66a:	jne    0x6501b6a6
6501b66c:	lea    eax,[ebp-0x8]
6501b66f:	push   eax
6501b670:	xor    esi,esi
6501b672:	inc    esi
6501b673:	push   esi
6501b674:	push   0x650266d8
6501b679:	push   esi
6501b67a:	call   DWORD PTR ds:0x650240b8
6501b680:	test   eax,eax
6501b682:	je     0x6501b68c
6501b684:	mov    DWORD PTR ds:0x6502df6c,esi
6501b68a:	jmp    0x6501b6c0
6501b68c:	call   DWORD PTR ds:0x6502403c
6501b692:	cmp    eax,0x78
6501b695:	jne    0x6501b6a1
6501b697:	push   0x2
6501b699:	pop    eax
6501b69a:	mov    ds:0x6502df6c,eax
6501b69f:	jmp    0x6501b6a6
6501b6a1:	mov    eax,ds:0x6502df6c
6501b6a6:	cmp    eax,0x2
6501b6a9:	je     0x6501b77e
6501b6af:	cmp    eax,ebx
6501b6b1:	je     0x6501b77e
6501b6b7:	cmp    eax,0x1
6501b6ba:	jne    0x6501b7a8
6501b6c0:	cmp    DWORD PTR [ebp+0x18],ebx
6501b6c3:	mov    DWORD PTR [ebp-0x8],ebx
6501b6c6:	jne    0x6501b6d0
6501b6c8:	mov    eax,DWORD PTR [edi]
6501b6ca:	mov    eax,DWORD PTR [eax+0x4]
6501b6cd:	mov    DWORD PTR [ebp+0x18],eax
6501b6d0:	mov    esi,DWORD PTR ds:0x6502401c
6501b6d6:	xor    eax,eax
6501b6d8:	cmp    DWORD PTR [ebp+0x20],ebx
6501b6db:	push   ebx
6501b6dc:	push   ebx
6501b6dd:	push   DWORD PTR [ebp+0x10]
6501b6e0:	setne  al
6501b6e3:	push   DWORD PTR [ebp+0xc]
6501b6e6:	lea    eax,[eax*8+0x1]
6501b6ed:	push   eax
6501b6ee:	push   DWORD PTR [ebp+0x18]
6501b6f1:	call   esi
6501b6f3:	mov    edi,eax
6501b6f5:	cmp    edi,ebx
6501b6f7:	je     0x6501b7a8
6501b6fd:	jle    0x6501b73b
6501b6ff:	cmp    edi,0x7ffffff0
6501b705:	ja     0x6501b73b
6501b707:	lea    eax,[edi+edi*1+0x8]
6501b70b:	cmp    eax,0x400
6501b710:	ja     0x6501b725
6501b712:	call   0x65013030
6501b717:	mov    eax,esp
6501b719:	cmp    eax,ebx
6501b71b:	je     0x6501b739
6501b71d:	mov    DWORD PTR [eax],0xcccc
6501b723:	jmp    0x6501b736
6501b725:	push   eax
6501b726:	call   0x65013823
6501b72b:	cmp    eax,ebx
6501b72d:	pop    ecx
6501b72e:	je     0x6501b739
6501b730:	mov    DWORD PTR [eax],0xdddd
6501b736:	add    eax,0x8
6501b739:	mov    ebx,eax
6501b73b:	test   ebx,ebx
6501b73d:	je     0x6501b7a8
6501b73f:	lea    eax,[edi+edi*1]
6501b742:	push   eax
6501b743:	push   0x0
6501b745:	push   ebx
6501b746:	call   0x65012fb0
6501b74b:	add    esp,0xc
6501b74e:	push   edi
6501b74f:	push   ebx
6501b750:	push   DWORD PTR [ebp+0x10]
6501b753:	push   DWORD PTR [ebp+0xc]
6501b756:	push   0x1
6501b758:	push   DWORD PTR [ebp+0x18]
6501b75b:	call   esi
6501b75d:	test   eax,eax
6501b75f:	je     0x6501b772
6501b761:	push   DWORD PTR [ebp+0x14]
6501b764:	push   eax
6501b765:	push   ebx
6501b766:	push   DWORD PTR [ebp+0x8]
6501b769:	call   DWORD PTR ds:0x650240b8
6501b76f:	mov    DWORD PTR [ebp-0x8],eax
6501b772:	push   ebx
6501b773:	call   0x65012dc2
6501b778:	mov    eax,DWORD PTR [ebp-0x8]
6501b77b:	pop    ecx
6501b77c:	jmp    0x6501b7f3
6501b77e:	xor    esi,esi
6501b780:	cmp    DWORD PTR [ebp+0x1c],ebx
6501b783:	jne    0x6501b78d
6501b785:	mov    eax,DWORD PTR [edi]
6501b787:	mov    eax,DWORD PTR [eax+0x14]
6501b78a:	mov    DWORD PTR [ebp+0x1c],eax
6501b78d:	cmp    DWORD PTR [ebp+0x18],ebx
6501b790:	jne    0x6501b79a
6501b792:	mov    eax,DWORD PTR [edi]
6501b794:	mov    eax,DWORD PTR [eax+0x4]
6501b797:	mov    DWORD PTR [ebp+0x18],eax
6501b79a:	push   DWORD PTR [ebp+0x1c]
6501b79d:	call   0x6501d428
6501b7a2:	cmp    eax,0xffffffff
6501b7a5:	pop    ecx
6501b7a6:	jne    0x6501b7ac
6501b7a8:	xor    eax,eax
6501b7aa:	jmp    0x6501b7f3
6501b7ac:	cmp    eax,DWORD PTR [ebp+0x18]
6501b7af:	je     0x6501b7cf
6501b7b1:	push   ebx
6501b7b2:	push   ebx
6501b7b3:	lea    ecx,[ebp+0x10]
6501b7b6:	push   ecx
6501b7b7:	push   DWORD PTR [ebp+0xc]
6501b7ba:	push   eax
6501b7bb:	push   DWORD PTR [ebp+0x18]
6501b7be:	call   0x6501d46f
6501b7c3:	mov    esi,eax
6501b7c5:	add    esp,0x18
6501b7c8:	cmp    esi,ebx
6501b7ca:	je     0x6501b7a8
6501b7cc:	mov    DWORD PTR [ebp+0xc],esi
6501b7cf:	push   DWORD PTR [ebp+0x14]
6501b7d2:	push   DWORD PTR [ebp+0x10]
6501b7d5:	push   DWORD PTR [ebp+0xc]
6501b7d8:	push   DWORD PTR [ebp+0x8]
6501b7db:	push   DWORD PTR [ebp+0x1c]
6501b7de:	call   DWORD PTR ds:0x650240c0
6501b7e4:	cmp    esi,ebx
6501b7e6:	mov    edi,eax
6501b7e8:	je     0x6501b7f1
6501b7ea:	push   esi
6501b7eb:	call   0x65013746
6501b7f0:	pop    ecx
6501b7f1:	mov    eax,edi
6501b7f3:	lea    esp,[ebp-0x14]
6501b7f6:	pop    edi
6501b7f7:	pop    esi
6501b7f8:	pop    ebx
6501b7f9:	mov    ecx,DWORD PTR [ebp-0x4]
6501b7fc:	xor    ecx,ebp
6501b7fe:	call   0x6501292c
6501b803:	leave  
6501b804:	ret    
6501b805:	push   ebp
6501b806:	mov    ebp,esp
6501b808:	sub    esp,0x10
6501b80b:	push   DWORD PTR [ebp+0x8]
6501b80e:	lea    ecx,[ebp-0x10]
6501b811:	call   0x65012acf
6501b816:	push   DWORD PTR [ebp+0x24]
6501b819:	lea    ecx,[ebp-0x10]
6501b81c:	push   DWORD PTR [ebp+0x20]
6501b81f:	push   DWORD PTR [ebp+0x1c]
6501b822:	push   DWORD PTR [ebp+0x18]
6501b825:	push   DWORD PTR [ebp+0x14]
6501b828:	push   DWORD PTR [ebp+0x10]
6501b82b:	push   DWORD PTR [ebp+0xc]
6501b82e:	call   0x6501b64d
6501b833:	add    esp,0x1c
6501b836:	cmp    BYTE PTR [ebp-0x4],0x0
6501b83a:	je     0x6501b843
6501b83c:	mov    ecx,DWORD PTR [ebp-0x8]
6501b83f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501b843:	leave  
6501b844:	ret    
6501b845:	push   esi
6501b846:	mov    esi,DWORD PTR [esp+0x8]
6501b84a:	test   esi,esi
6501b84c:	je     0x6501b9d3
6501b852:	push   DWORD PTR [esi+0x4]
6501b855:	call   0x65013746
6501b85a:	push   DWORD PTR [esi+0x8]
6501b85d:	call   0x65013746
6501b862:	push   DWORD PTR [esi+0xc]
6501b865:	call   0x65013746
6501b86a:	push   DWORD PTR [esi+0x10]
6501b86d:	call   0x65013746
6501b872:	push   DWORD PTR [esi+0x14]
6501b875:	call   0x65013746
6501b87a:	push   DWORD PTR [esi+0x18]
6501b87d:	call   0x65013746
6501b882:	push   DWORD PTR [esi]
6501b884:	call   0x65013746
6501b889:	push   DWORD PTR [esi+0x20]
6501b88c:	call   0x65013746
6501b891:	push   DWORD PTR [esi+0x24]
6501b894:	call   0x65013746
6501b899:	push   DWORD PTR [esi+0x28]
6501b89c:	call   0x65013746
6501b8a1:	push   DWORD PTR [esi+0x2c]
6501b8a4:	call   0x65013746
6501b8a9:	push   DWORD PTR [esi+0x30]
6501b8ac:	call   0x65013746
6501b8b1:	push   DWORD PTR [esi+0x34]
6501b8b4:	call   0x65013746
6501b8b9:	push   DWORD PTR [esi+0x1c]
6501b8bc:	call   0x65013746
6501b8c1:	push   DWORD PTR [esi+0x38]
6501b8c4:	call   0x65013746
6501b8c9:	push   DWORD PTR [esi+0x3c]
6501b8cc:	call   0x65013746
6501b8d1:	add    esp,0x40
6501b8d4:	push   DWORD PTR [esi+0x40]
6501b8d7:	call   0x65013746
6501b8dc:	push   DWORD PTR [esi+0x44]
6501b8df:	call   0x65013746
6501b8e4:	push   DWORD PTR [esi+0x48]
6501b8e7:	call   0x65013746
6501b8ec:	push   DWORD PTR [esi+0x4c]
6501b8ef:	call   0x65013746
6501b8f4:	push   DWORD PTR [esi+0x50]
6501b8f7:	call   0x65013746
6501b8fc:	push   DWORD PTR [esi+0x54]
6501b8ff:	call   0x65013746
6501b904:	push   DWORD PTR [esi+0x58]
6501b907:	call   0x65013746
6501b90c:	push   DWORD PTR [esi+0x5c]
6501b90f:	call   0x65013746
6501b914:	push   DWORD PTR [esi+0x60]
6501b917:	call   0x65013746
6501b91c:	push   DWORD PTR [esi+0x64]
6501b91f:	call   0x65013746
6501b924:	push   DWORD PTR [esi+0x68]
6501b927:	call   0x65013746
6501b92c:	push   DWORD PTR [esi+0x6c]
6501b92f:	call   0x65013746
6501b934:	push   DWORD PTR [esi+0x70]
6501b937:	call   0x65013746
6501b93c:	push   DWORD PTR [esi+0x74]
6501b93f:	call   0x65013746
6501b944:	push   DWORD PTR [esi+0x78]
6501b947:	call   0x65013746
6501b94c:	push   DWORD PTR [esi+0x7c]
6501b94f:	call   0x65013746
6501b954:	add    esp,0x40
6501b957:	push   DWORD PTR [esi+0x80]
6501b95d:	call   0x65013746
6501b962:	push   DWORD PTR [esi+0x84]
6501b968:	call   0x65013746
6501b96d:	push   DWORD PTR [esi+0x88]
6501b973:	call   0x65013746
6501b978:	push   DWORD PTR [esi+0x8c]
6501b97e:	call   0x65013746
6501b983:	push   DWORD PTR [esi+0x90]
6501b989:	call   0x65013746
6501b98e:	push   DWORD PTR [esi+0x94]
6501b994:	call   0x65013746
6501b999:	push   DWORD PTR [esi+0x98]
6501b99f:	call   0x65013746
6501b9a4:	push   DWORD PTR [esi+0x9c]
6501b9aa:	call   0x65013746
6501b9af:	push   DWORD PTR [esi+0xa0]
6501b9b5:	call   0x65013746
6501b9ba:	push   DWORD PTR [esi+0xa4]
6501b9c0:	call   0x65013746
6501b9c5:	push   DWORD PTR [esi+0xa8]
6501b9cb:	call   0x65013746
6501b9d0:	add    esp,0x2c
6501b9d3:	pop    esi
6501b9d4:	ret    
6501b9d5:	push   esi
6501b9d6:	mov    esi,DWORD PTR [esp+0x8]
6501b9da:	test   esi,esi
6501b9dc:	je     0x6501ba13
6501b9de:	mov    eax,DWORD PTR [esi]
6501b9e0:	cmp    eax,DWORD PTR ds:0x6502cc38
6501b9e6:	je     0x6501b9ef
6501b9e8:	push   eax
6501b9e9:	call   0x65013746
6501b9ee:	pop    ecx
6501b9ef:	mov    eax,DWORD PTR [esi+0x4]
6501b9f2:	cmp    eax,DWORD PTR ds:0x6502cc3c
6501b9f8:	je     0x6501ba01
6501b9fa:	push   eax
6501b9fb:	call   0x65013746
6501ba00:	pop    ecx
6501ba01:	mov    esi,DWORD PTR [esi+0x8]
6501ba04:	cmp    esi,DWORD PTR ds:0x6502cc40
6501ba0a:	je     0x6501ba13
6501ba0c:	push   esi
6501ba0d:	call   0x65013746
6501ba12:	pop    ecx
6501ba13:	pop    esi
6501ba14:	ret    
6501ba15:	push   esi
6501ba16:	mov    esi,DWORD PTR [esp+0x8]
6501ba1a:	test   esi,esi
6501ba1c:	je     0x6501ba9c
6501ba1e:	mov    eax,DWORD PTR [esi+0xc]
6501ba21:	cmp    eax,DWORD PTR ds:0x6502cc44
6501ba27:	je     0x6501ba30
6501ba29:	push   eax
6501ba2a:	call   0x65013746
6501ba2f:	pop    ecx
6501ba30:	mov    eax,DWORD PTR [esi+0x10]
6501ba33:	cmp    eax,DWORD PTR ds:0x6502cc48
6501ba39:	je     0x6501ba42
6501ba3b:	push   eax
6501ba3c:	call   0x65013746
6501ba41:	pop    ecx
6501ba42:	mov    eax,DWORD PTR [esi+0x14]
6501ba45:	cmp    eax,DWORD PTR ds:0x6502cc4c
6501ba4b:	je     0x6501ba54
6501ba4d:	push   eax
6501ba4e:	call   0x65013746
6501ba53:	pop    ecx
6501ba54:	mov    eax,DWORD PTR [esi+0x18]
6501ba57:	cmp    eax,DWORD PTR ds:0x6502cc50
6501ba5d:	je     0x6501ba66
6501ba5f:	push   eax
6501ba60:	call   0x65013746
6501ba65:	pop    ecx
6501ba66:	mov    eax,DWORD PTR [esi+0x1c]
6501ba69:	cmp    eax,DWORD PTR ds:0x6502cc54
6501ba6f:	je     0x6501ba78
6501ba71:	push   eax
6501ba72:	call   0x65013746
6501ba77:	pop    ecx
6501ba78:	mov    eax,DWORD PTR [esi+0x20]
6501ba7b:	cmp    eax,DWORD PTR ds:0x6502cc58
6501ba81:	je     0x6501ba8a
6501ba83:	push   eax
6501ba84:	call   0x65013746
6501ba89:	pop    ecx
6501ba8a:	mov    esi,DWORD PTR [esi+0x24]
6501ba8d:	cmp    esi,DWORD PTR ds:0x6502cc5c
6501ba93:	je     0x6501ba9c
6501ba95:	push   esi
6501ba96:	call   0x65013746
6501ba9b:	pop    ecx
6501ba9c:	pop    esi
6501ba9d:	ret    
6501ba9e:	mov    eax,DWORD PTR [esp+0x4]
6501baa2:	push   ebx
6501baa3:	xor    ebx,ebx
6501baa5:	cmp    eax,ebx
6501baa7:	push   esi
6501baa8:	push   edi
6501baa9:	je     0x6501bab3
6501baab:	mov    edi,DWORD PTR [esp+0x14]
6501baaf:	cmp    edi,ebx
6501bab1:	ja     0x6501bace
6501bab3:	call   0x65014580
6501bab8:	push   0x16
6501baba:	pop    esi
6501babb:	mov    DWORD PTR [eax],esi
6501babd:	push   ebx
6501babe:	push   ebx
6501babf:	push   ebx
6501bac0:	push   ebx
6501bac1:	push   ebx
6501bac2:	call   0x6501241f
6501bac7:	add    esp,0x14
6501baca:	mov    eax,esi
6501bacc:	jmp    0x6501bb0b
6501bace:	mov    esi,DWORD PTR [esp+0x18]
6501bad2:	cmp    esi,ebx
6501bad4:	jne    0x6501bada
6501bad6:	mov    BYTE PTR [eax],bl
6501bad8:	jmp    0x6501bab3
6501bada:	mov    edx,eax
6501badc:	cmp    BYTE PTR [edx],bl
6501bade:	je     0x6501bae4
6501bae0:	inc    edx
6501bae1:	dec    edi
6501bae2:	jne    0x6501badc
6501bae4:	cmp    edi,ebx
6501bae6:	je     0x6501bad6
6501bae8:	mov    cl,BYTE PTR [esi]
6501baea:	mov    BYTE PTR [edx],cl
6501baec:	inc    edx
6501baed:	inc    esi
6501baee:	cmp    cl,bl
6501baf0:	je     0x6501baf5
6501baf2:	dec    edi
6501baf3:	jne    0x6501bae8
6501baf5:	cmp    edi,ebx
6501baf7:	jne    0x6501bb09
6501baf9:	mov    BYTE PTR [eax],bl
6501bafb:	call   0x65014580
6501bb00:	push   0x22
6501bb02:	pop    ecx
6501bb03:	mov    DWORD PTR [eax],ecx
6501bb05:	mov    esi,ecx
6501bb07:	jmp    0x6501babd
6501bb09:	xor    eax,eax
6501bb0b:	pop    edi
6501bb0c:	pop    esi
6501bb0d:	pop    ebx
6501bb0e:	ret    
6501bb0f:	int3   
6501bb10:	push   ebp
6501bb11:	mov    ebp,esp
6501bb13:	push   esi
6501bb14:	xor    eax,eax
6501bb16:	push   eax
6501bb17:	push   eax
6501bb18:	push   eax
6501bb19:	push   eax
6501bb1a:	push   eax
6501bb1b:	push   eax
6501bb1c:	push   eax
6501bb1d:	push   eax
6501bb1e:	mov    edx,DWORD PTR [ebp+0xc]
6501bb21:	lea    ecx,[ecx+0x0]
6501bb24:	mov    al,BYTE PTR [edx]
6501bb26:	or     al,al
6501bb28:	je     0x6501bb33
6501bb2a:	add    edx,0x1
6501bb2d:	bts    DWORD PTR [esp],eax
6501bb31:	jmp    0x6501bb24
6501bb33:	mov    esi,DWORD PTR [ebp+0x8]
6501bb36:	or     ecx,0xffffffff
6501bb39:	lea    ecx,[ecx+0x0]
6501bb3c:	add    ecx,0x1
6501bb3f:	mov    al,BYTE PTR [esi]
6501bb41:	or     al,al
6501bb43:	je     0x6501bb4e
6501bb45:	add    esi,0x1
6501bb48:	bt     DWORD PTR [esp],eax
6501bb4c:	jae    0x6501bb3c
6501bb4e:	mov    eax,ecx
6501bb50:	add    esp,0x20
6501bb53:	pop    esi
6501bb54:	leave  
6501bb55:	ret    
6501bb56:	push   ebp
6501bb57:	mov    ebp,esp
6501bb59:	push   ebx
6501bb5a:	push   esi
6501bb5b:	mov    esi,DWORD PTR [ebp+0x8]
6501bb5e:	xor    ebx,ebx
6501bb60:	cmp    DWORD PTR [ebp+0x14],ebx
6501bb63:	push   edi
6501bb64:	jne    0x6501bb76
6501bb66:	cmp    esi,ebx
6501bb68:	jne    0x6501bb7a
6501bb6a:	cmp    DWORD PTR [ebp+0xc],ebx
6501bb6d:	jne    0x6501bb81
6501bb6f:	xor    eax,eax
6501bb71:	pop    edi
6501bb72:	pop    esi
6501bb73:	pop    ebx
6501bb74:	pop    ebp
6501bb75:	ret    
6501bb76:	cmp    esi,ebx
6501bb78:	je     0x6501bb81
6501bb7a:	mov    edi,DWORD PTR [ebp+0xc]
6501bb7d:	cmp    edi,ebx
6501bb7f:	ja     0x6501bb9c
6501bb81:	call   0x65014580
6501bb86:	push   0x16
6501bb88:	pop    esi
6501bb89:	mov    DWORD PTR [eax],esi
6501bb8b:	push   ebx
6501bb8c:	push   ebx
6501bb8d:	push   ebx
6501bb8e:	push   ebx
6501bb8f:	push   ebx
6501bb90:	call   0x6501241f
6501bb95:	add    esp,0x14
6501bb98:	mov    eax,esi
6501bb9a:	jmp    0x6501bb71
6501bb9c:	cmp    DWORD PTR [ebp+0x14],ebx
6501bb9f:	jne    0x6501bba5
6501bba1:	mov    BYTE PTR [esi],bl
6501bba3:	jmp    0x6501bb6f
6501bba5:	mov    edx,DWORD PTR [ebp+0x10]
6501bba8:	cmp    edx,ebx
6501bbaa:	jne    0x6501bbb0
6501bbac:	mov    BYTE PTR [esi],bl
6501bbae:	jmp    0x6501bb81
6501bbb0:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6501bbb4:	mov    eax,esi
6501bbb6:	jne    0x6501bbc7
6501bbb8:	mov    cl,BYTE PTR [edx]
6501bbba:	mov    BYTE PTR [eax],cl
6501bbbc:	inc    eax
6501bbbd:	inc    edx
6501bbbe:	cmp    cl,bl
6501bbc0:	je     0x6501bbe0
6501bbc2:	dec    edi
6501bbc3:	jne    0x6501bbb8
6501bbc5:	jmp    0x6501bbe0
6501bbc7:	mov    cl,BYTE PTR [edx]
6501bbc9:	mov    BYTE PTR [eax],cl
6501bbcb:	inc    eax
6501bbcc:	inc    edx
6501bbcd:	cmp    cl,bl
6501bbcf:	je     0x6501bbd9
6501bbd1:	dec    edi
6501bbd2:	je     0x6501bbd9
6501bbd4:	dec    DWORD PTR [ebp+0x14]
6501bbd7:	jne    0x6501bbc7
6501bbd9:	cmp    DWORD PTR [ebp+0x14],ebx
6501bbdc:	jne    0x6501bbe0
6501bbde:	mov    BYTE PTR [eax],bl
6501bbe0:	cmp    edi,ebx
6501bbe2:	jne    0x6501bb6f
6501bbe4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6501bbe8:	jne    0x6501bbf9
6501bbea:	mov    eax,DWORD PTR [ebp+0xc]
6501bbed:	push   0x50
6501bbef:	mov    BYTE PTR [esi+eax*1-0x1],bl
6501bbf3:	pop    eax
6501bbf4:	jmp    0x6501bb71
6501bbf9:	mov    BYTE PTR [esi],bl
6501bbfb:	call   0x65014580
6501bc00:	push   0x22
6501bc02:	pop    ecx
6501bc03:	mov    DWORD PTR [eax],ecx
6501bc05:	mov    esi,ecx
6501bc07:	jmp    0x6501bb8b
6501bc09:	int3   
6501bc0a:	int3   
6501bc0b:	int3   
6501bc0c:	int3   
6501bc0d:	int3   
6501bc0e:	int3   
6501bc0f:	int3   
6501bc10:	push   ebp
6501bc11:	mov    ebp,esp
6501bc13:	push   esi
6501bc14:	xor    eax,eax
6501bc16:	push   eax
6501bc17:	push   eax
6501bc18:	push   eax
6501bc19:	push   eax
6501bc1a:	push   eax
6501bc1b:	push   eax
6501bc1c:	push   eax
6501bc1d:	push   eax
6501bc1e:	mov    edx,DWORD PTR [ebp+0xc]
6501bc21:	lea    ecx,[ecx+0x0]
6501bc24:	mov    al,BYTE PTR [edx]
6501bc26:	or     al,al
6501bc28:	je     0x6501bc33
6501bc2a:	add    edx,0x1
6501bc2d:	bts    DWORD PTR [esp],eax
6501bc31:	jmp    0x6501bc24
6501bc33:	mov    esi,DWORD PTR [ebp+0x8]
6501bc36:	mov    edi,edi
6501bc38:	mov    al,BYTE PTR [esi]
6501bc3a:	or     al,al
6501bc3c:	je     0x6501bc4a
6501bc3e:	add    esi,0x1
6501bc41:	bt     DWORD PTR [esp],eax
6501bc45:	jae    0x6501bc38
6501bc47:	lea    eax,[esi-0x1]
6501bc4a:	add    esp,0x20
6501bc4d:	pop    esi
6501bc4e:	leave  
6501bc4f:	ret    
6501bc50:	push   ebp
6501bc51:	mov    ebp,esp
6501bc53:	push   ecx
6501bc54:	push   ecx
6501bc55:	mov    eax,DWORD PTR [ebp+0xc]
6501bc58:	push   esi
6501bc59:	mov    esi,DWORD PTR [ebp+0x8]
6501bc5c:	mov    DWORD PTR [ebp-0x8],eax
6501bc5f:	mov    eax,DWORD PTR [ebp+0x10]
6501bc62:	push   edi
6501bc63:	push   esi
6501bc64:	mov    DWORD PTR [ebp-0x4],eax
6501bc67:	call   0x6501db8f
6501bc6c:	or     edi,0xffffffff
6501bc6f:	cmp    eax,edi
6501bc71:	pop    ecx
6501bc72:	jne    0x6501bc85
6501bc74:	call   0x65014580
6501bc79:	mov    DWORD PTR [eax],0x9
6501bc7f:	mov    eax,edi
6501bc81:	mov    edx,edi
6501bc83:	jmp    0x6501bccf
6501bc85:	push   DWORD PTR [ebp+0x14]
6501bc88:	lea    ecx,[ebp-0x4]
6501bc8b:	push   ecx
6501bc8c:	push   DWORD PTR [ebp-0x8]
6501bc8f:	push   eax
6501bc90:	call   DWORD PTR ds:0x650240b4
6501bc96:	cmp    eax,edi
6501bc98:	mov    DWORD PTR [ebp-0x8],eax
6501bc9b:	jne    0x6501bcb0
6501bc9d:	call   DWORD PTR ds:0x6502403c
6501bca3:	test   eax,eax
6501bca5:	je     0x6501bcb0
6501bca7:	push   eax
6501bca8:	call   0x650145a6
6501bcad:	pop    ecx
6501bcae:	jmp    0x6501bc7f
6501bcb0:	mov    eax,esi
6501bcb2:	sar    eax,0x5
6501bcb5:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501bcbc:	and    esi,0x1f
6501bcbf:	shl    esi,0x6
6501bcc2:	lea    eax,[eax+esi*1+0x4]
6501bcc6:	and    BYTE PTR [eax],0xfd
6501bcc9:	mov    eax,DWORD PTR [ebp-0x8]
6501bccc:	mov    edx,DWORD PTR [ebp-0x4]
6501bccf:	pop    edi
6501bcd0:	pop    esi
6501bcd1:	leave  
6501bcd2:	ret    
6501bcd3:	push   0x14
6501bcd5:	push   0x65029df0
6501bcda:	call   0x65013e70
6501bcdf:	or     esi,0xffffffff
6501bce2:	mov    DWORD PTR [ebp-0x24],esi
6501bce5:	mov    DWORD PTR [ebp-0x20],esi
6501bce8:	mov    eax,DWORD PTR [ebp+0x8]
6501bceb:	cmp    eax,0xfffffffe
6501bcee:	jne    0x6501bd0c
6501bcf0:	call   0x65014593
6501bcf5:	and    DWORD PTR [eax],0x0
6501bcf8:	call   0x65014580
6501bcfd:	mov    DWORD PTR [eax],0x9
6501bd03:	mov    eax,esi
6501bd05:	mov    edx,esi
6501bd07:	jmp    0x6501bddc
6501bd0c:	xor    edi,edi
6501bd0e:	cmp    eax,edi
6501bd10:	jl     0x6501bd1a
6501bd12:	cmp    eax,DWORD PTR ds:0x65031440
6501bd18:	jb     0x6501bd3b
6501bd1a:	call   0x65014593
6501bd1f:	mov    DWORD PTR [eax],edi
6501bd21:	call   0x65014580
6501bd26:	mov    DWORD PTR [eax],0x9
6501bd2c:	push   edi
6501bd2d:	push   edi
6501bd2e:	push   edi
6501bd2f:	push   edi
6501bd30:	push   edi
6501bd31:	call   0x6501241f
6501bd36:	add    esp,0x14
6501bd39:	jmp    0x6501bd03
6501bd3b:	mov    ecx,eax
6501bd3d:	sar    ecx,0x5
6501bd40:	lea    ebx,[ecx*4+0x65031460]
6501bd47:	mov    esi,eax
6501bd49:	and    esi,0x1f
6501bd4c:	shl    esi,0x6
6501bd4f:	mov    ecx,DWORD PTR [ebx]
6501bd51:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501bd56:	and    ecx,0x1
6501bd59:	jne    0x6501bd81
6501bd5b:	call   0x65014593
6501bd60:	mov    DWORD PTR [eax],edi
6501bd62:	call   0x65014580
6501bd67:	mov    DWORD PTR [eax],0x9
6501bd6d:	push   edi
6501bd6e:	push   edi
6501bd6f:	push   edi
6501bd70:	push   edi
6501bd71:	push   edi
6501bd72:	call   0x6501241f
6501bd77:	add    esp,0x14
6501bd7a:	or     edx,0xffffffff
6501bd7d:	mov    eax,edx
6501bd7f:	jmp    0x6501bddc
6501bd81:	push   eax
6501bd82:	call   0x6501dc00
6501bd87:	pop    ecx
6501bd88:	mov    DWORD PTR [ebp-0x4],edi
6501bd8b:	mov    eax,DWORD PTR [ebx]
6501bd8d:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501bd92:	je     0x6501bdb0
6501bd94:	push   DWORD PTR [ebp+0x14]
6501bd97:	push   DWORD PTR [ebp+0x10]
6501bd9a:	push   DWORD PTR [ebp+0xc]
6501bd9d:	push   DWORD PTR [ebp+0x8]
6501bda0:	call   0x6501bc50
6501bda5:	add    esp,0x10
6501bda8:	mov    DWORD PTR [ebp-0x24],eax
6501bdab:	mov    DWORD PTR [ebp-0x20],edx
6501bdae:	jmp    0x6501bdca
6501bdb0:	call   0x65014580
6501bdb5:	mov    DWORD PTR [eax],0x9
6501bdbb:	call   0x65014593
6501bdc0:	mov    DWORD PTR [eax],edi
6501bdc2:	or     DWORD PTR [ebp-0x24],0xffffffff
6501bdc6:	or     DWORD PTR [ebp-0x20],0xffffffff
6501bdca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501bdd1:	call   0x6501bde2
6501bdd6:	mov    eax,DWORD PTR [ebp-0x24]
6501bdd9:	mov    edx,DWORD PTR [ebp-0x20]
6501bddc:	call   0x65013eb5
6501bde1:	ret    
6501bde2:	push   DWORD PTR [ebp+0x8]
6501bde5:	call   0x6501dca0
6501bdea:	pop    ecx
6501bdeb:	ret    
6501bdec:	push   ebp
6501bded:	lea    ebp,[esp-0x514]
6501bdf4:	sub    esp,0x590
6501bdfa:	mov    eax,ds:0x6502c09c
6501bdff:	xor    eax,ebp
6501be01:	mov    DWORD PTR [ebp+0x510],eax
6501be07:	mov    eax,DWORD PTR [ebp+0x520]
6501be0d:	push   esi
6501be0e:	xor    esi,esi
6501be10:	cmp    DWORD PTR [ebp+0x524],esi
6501be16:	mov    DWORD PTR [ebp-0x64],eax
6501be19:	mov    DWORD PTR [ebp-0x60],esi
6501be1c:	mov    DWORD PTR [ebp-0x68],esi
6501be1f:	jne    0x6501be28
6501be21:	xor    eax,eax
6501be23:	jmp    0x6501c3f8
6501be28:	cmp    eax,esi
6501be2a:	jne    0x6501be53
6501be2c:	call   0x65014593
6501be31:	mov    DWORD PTR [eax],esi
6501be33:	call   0x65014580
6501be38:	push   esi
6501be39:	push   esi
6501be3a:	push   esi
6501be3b:	push   esi
6501be3c:	push   esi
6501be3d:	mov    DWORD PTR [eax],0x16
6501be43:	call   0x6501241f
6501be48:	add    esp,0x14
6501be4b:	or     eax,0xffffffff
6501be4e:	jmp    0x6501c3f8
6501be53:	push   ebx
6501be54:	push   edi
6501be55:	mov    edi,DWORD PTR [ebp+0x51c]
6501be5b:	mov    eax,edi
6501be5d:	sar    eax,0x5
6501be60:	lea    esi,[eax*4+0x65031460]
6501be67:	mov    eax,DWORD PTR [esi]
6501be69:	and    edi,0x1f
6501be6c:	shl    edi,0x6
6501be6f:	add    eax,edi
6501be71:	mov    bl,BYTE PTR [eax+0x24]
6501be74:	add    bl,bl
6501be76:	sar    bl,1
6501be78:	cmp    bl,0x2
6501be7b:	mov    DWORD PTR [ebp-0x70],esi
6501be7e:	mov    BYTE PTR [ebp-0x71],bl
6501be81:	je     0x6501be88
6501be83:	cmp    bl,0x1
6501be86:	jne    0x6501bebb
6501be88:	mov    ecx,DWORD PTR [ebp+0x524]
6501be8e:	not    ecx
6501be90:	test   cl,0x1
6501be93:	jne    0x6501bebb
6501be95:	call   0x65014593
6501be9a:	xor    esi,esi
6501be9c:	mov    DWORD PTR [eax],esi
6501be9e:	call   0x65014580
6501bea3:	push   esi
6501bea4:	push   esi
6501bea5:	push   esi
6501bea6:	push   esi
6501bea7:	push   esi
6501bea8:	mov    DWORD PTR [eax],0x16
6501beae:	call   0x6501241f
6501beb3:	add    esp,0x14
6501beb6:	jmp    0x6501c3eb
6501bebb:	test   BYTE PTR [eax+0x4],0x20
6501bebf:	je     0x6501bed5
6501bec1:	push   0x2
6501bec3:	push   0x0
6501bec5:	push   0x0
6501bec7:	push   DWORD PTR [ebp+0x51c]
6501becd:	call   0x6501bc50
6501bed2:	add    esp,0x10
6501bed5:	push   DWORD PTR [ebp+0x51c]
6501bedb:	call   0x6501c52e
6501bee0:	test   eax,eax
6501bee2:	pop    ecx
6501bee3:	je     0x6501c122
6501bee9:	mov    eax,DWORD PTR [esi]
6501beeb:	test   BYTE PTR [edi+eax*1+0x4],0x80
6501bef0:	je     0x6501c122
6501bef6:	call   0x650148cb
6501befb:	mov    eax,DWORD PTR [eax+0x6c]
6501befe:	xor    ecx,ecx
6501bf00:	cmp    DWORD PTR [eax+0x14],ecx
6501bf03:	lea    eax,[ebp-0x7c]
6501bf06:	sete   cl
6501bf09:	push   eax
6501bf0a:	mov    eax,DWORD PTR [esi]
6501bf0c:	push   DWORD PTR [edi+eax*1]
6501bf0f:	mov    DWORD PTR [ebp-0x78],ecx
6501bf12:	call   DWORD PTR ds:0x650240a8
6501bf18:	test   eax,eax
6501bf1a:	je     0x6501c122
6501bf20:	xor    ecx,ecx
6501bf22:	cmp    DWORD PTR [ebp-0x78],ecx
6501bf25:	je     0x6501bf2f
6501bf27:	test   bl,bl
6501bf29:	je     0x6501c124
6501bf2f:	call   DWORD PTR ds:0x650240b0
6501bf35:	mov    ebx,DWORD PTR [ebp-0x64]
6501bf38:	mov    DWORD PTR [ebp-0x7c],eax
6501bf3b:	xor    eax,eax
6501bf3d:	cmp    DWORD PTR [ebp+0x524],eax
6501bf43:	mov    DWORD PTR [ebp-0x5c],eax
6501bf46:	jbe    0x6501c393
6501bf4c:	mov    DWORD PTR [ebp-0x54],eax
6501bf4f:	mov    al,BYTE PTR [ebp-0x71]
6501bf52:	test   al,al
6501bf54:	jne    0x6501c097
6501bf5a:	mov    cl,BYTE PTR [ebx]
6501bf5c:	mov    esi,DWORD PTR [ebp-0x70]
6501bf5f:	xor    eax,eax
6501bf61:	cmp    cl,0xa
6501bf64:	sete   al
6501bf67:	mov    DWORD PTR [ebp-0x78],eax
6501bf6a:	mov    eax,DWORD PTR [esi]
6501bf6c:	add    eax,edi
6501bf6e:	cmp    DWORD PTR [eax+0x38],0x0
6501bf72:	je     0x6501bf92
6501bf74:	mov    dl,BYTE PTR [eax+0x34]
6501bf77:	mov    BYTE PTR [ebp+0x508],dl
6501bf7d:	mov    BYTE PTR [ebp+0x509],cl
6501bf83:	and    DWORD PTR [eax+0x38],0x0
6501bf87:	push   0x2
6501bf89:	lea    eax,[ebp+0x508]
6501bf8f:	push   eax
6501bf90:	jmp    0x6501bfd7
6501bf92:	movsx  eax,cl
6501bf95:	push   eax
6501bf96:	call   0x65019c95
6501bf9b:	test   eax,eax
6501bf9d:	pop    ecx
6501bf9e:	je     0x6501bfd4
6501bfa0:	mov    ecx,DWORD PTR [ebp-0x64]
6501bfa3:	sub    ecx,ebx
6501bfa5:	add    ecx,DWORD PTR [ebp+0x524]
6501bfab:	xor    eax,eax
6501bfad:	inc    eax
6501bfae:	cmp    ecx,eax
6501bfb0:	jbe    0x6501c10c
6501bfb6:	push   0x2
6501bfb8:	lea    eax,[ebp-0x58]
6501bfbb:	push   ebx
6501bfbc:	push   eax
6501bfbd:	call   0x6501ca61
6501bfc2:	add    esp,0xc
6501bfc5:	cmp    eax,0xffffffff
6501bfc8:	je     0x6501c38d
6501bfce:	inc    ebx
6501bfcf:	inc    DWORD PTR [ebp-0x54]
6501bfd2:	jmp    0x6501bfec
6501bfd4:	push   0x1
6501bfd6:	push   ebx
6501bfd7:	lea    eax,[ebp-0x58]
6501bfda:	push   eax
6501bfdb:	call   0x6501ca61
6501bfe0:	add    esp,0xc
6501bfe3:	cmp    eax,0xffffffff
6501bfe6:	je     0x6501c38d
6501bfec:	xor    eax,eax
6501bfee:	push   eax
6501bfef:	push   eax
6501bff0:	push   0x5
6501bff2:	lea    ecx,[ebp+0x508]
6501bff8:	push   ecx
6501bff9:	push   0x1
6501bffb:	lea    ecx,[ebp-0x58]
6501bffe:	push   ecx
6501bfff:	push   eax
6501c000:	push   DWORD PTR [ebp-0x7c]
6501c003:	inc    ebx
6501c004:	inc    DWORD PTR [ebp-0x54]
6501c007:	call   DWORD PTR ds:0x65024020
6501c00d:	mov    esi,eax
6501c00f:	test   esi,esi
6501c011:	je     0x6501c38d
6501c017:	push   0x0
6501c019:	lea    eax,[ebp-0x5c]
6501c01c:	push   eax
6501c01d:	push   esi
6501c01e:	lea    eax,[ebp+0x508]
6501c024:	push   eax
6501c025:	mov    eax,DWORD PTR [ebp-0x70]
6501c028:	mov    eax,DWORD PTR [eax]
6501c02a:	push   DWORD PTR [edi+eax*1]
6501c02d:	call   DWORD PTR ds:0x65024080
6501c033:	test   eax,eax
6501c035:	je     0x6501c384
6501c03b:	mov    eax,DWORD PTR [ebp-0x54]
6501c03e:	mov    ecx,DWORD PTR [ebp-0x68]
6501c041:	add    eax,ecx
6501c043:	cmp    DWORD PTR [ebp-0x5c],esi
6501c046:	mov    DWORD PTR [ebp-0x60],eax
6501c049:	jl     0x6501c38d
6501c04f:	cmp    DWORD PTR [ebp-0x78],0x0
6501c053:	je     0x6501c0f8
6501c059:	push   0x0
6501c05b:	lea    eax,[ebp-0x5c]
6501c05e:	push   eax
6501c05f:	push   0x1
6501c061:	lea    eax,[ebp+0x508]
6501c067:	push   eax
6501c068:	mov    eax,DWORD PTR [ebp-0x70]
6501c06b:	mov    eax,DWORD PTR [eax]
6501c06d:	mov    BYTE PTR [ebp+0x508],0xd
6501c074:	push   DWORD PTR [edi+eax*1]
6501c077:	call   DWORD PTR ds:0x65024080
6501c07d:	test   eax,eax
6501c07f:	je     0x6501c384
6501c085:	cmp    DWORD PTR [ebp-0x5c],0x1
6501c089:	jl     0x6501c38d
6501c08f:	inc    DWORD PTR [ebp-0x68]
6501c092:	inc    DWORD PTR [ebp-0x60]
6501c095:	jmp    0x6501c0f8
6501c097:	cmp    al,0x1
6501c099:	je     0x6501c09f
6501c09b:	cmp    al,0x2
6501c09d:	jne    0x6501c0b7
6501c09f:	movzx  esi,WORD PTR [ebx]
6501c0a2:	xor    ecx,ecx
6501c0a4:	cmp    si,0xa
6501c0a8:	sete   cl
6501c0ab:	inc    ebx
6501c0ac:	inc    ebx
6501c0ad:	add    DWORD PTR [ebp-0x54],0x2
6501c0b1:	mov    DWORD PTR [ebp-0x58],esi
6501c0b4:	mov    DWORD PTR [ebp-0x78],ecx
6501c0b7:	cmp    al,0x1
6501c0b9:	je     0x6501c0bf
6501c0bb:	cmp    al,0x2
6501c0bd:	jne    0x6501c0f8
6501c0bf:	push   DWORD PTR [ebp-0x58]
6501c0c2:	call   0x6501dcc2
6501c0c7:	cmp    ax,WORD PTR [ebp-0x58]
6501c0cb:	pop    ecx
6501c0cc:	jne    0x6501c384
6501c0d2:	inc    DWORD PTR [ebp-0x60]
6501c0d5:	cmp    DWORD PTR [ebp-0x78],0x0
6501c0d9:	je     0x6501c0f8
6501c0db:	push   0xd
6501c0dd:	pop    eax
6501c0de:	push   eax
6501c0df:	mov    DWORD PTR [ebp-0x58],eax
6501c0e2:	call   0x6501dcc2
6501c0e7:	cmp    ax,WORD PTR [ebp-0x58]
6501c0eb:	pop    ecx
6501c0ec:	jne    0x6501c384
6501c0f2:	inc    DWORD PTR [ebp-0x60]
6501c0f5:	inc    DWORD PTR [ebp-0x68]
6501c0f8:	mov    eax,DWORD PTR [ebp+0x524]
6501c0fe:	cmp    DWORD PTR [ebp-0x54],eax
6501c101:	jb     0x6501bf4f
6501c107:	jmp    0x6501c38d
6501c10c:	mov    ecx,DWORD PTR [esi]
6501c10e:	mov    dl,BYTE PTR [ebx]
6501c110:	inc    DWORD PTR [ebp-0x60]
6501c113:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6501c117:	mov    ecx,DWORD PTR [esi]
6501c119:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6501c11d:	jmp    0x6501c38d
6501c122:	xor    ecx,ecx
6501c124:	mov    eax,DWORD PTR [esi]
6501c126:	add    eax,edi
6501c128:	test   BYTE PTR [eax+0x4],0x80
6501c12c:	je     0x6501c35d
6501c132:	test   bl,bl
6501c134:	mov    eax,DWORD PTR [ebp-0x64]
6501c137:	mov    DWORD PTR [ebp-0x58],ecx
6501c13a:	jne    0x6501c1d6
6501c140:	cmp    DWORD PTR [ebp+0x524],ecx
6501c146:	mov    DWORD PTR [ebp-0x5c],eax
6501c149:	jbe    0x6501c3c3
6501c14f:	jmp    0x6501c154
6501c151:	mov    esi,DWORD PTR [ebp-0x70]
6501c154:	mov    ecx,DWORD PTR [ebp-0x5c]
6501c157:	and    DWORD PTR [ebp-0x54],0x0
6501c15b:	sub    ecx,DWORD PTR [ebp-0x64]
6501c15e:	lea    eax,[ebp-0x50]
6501c161:	cmp    ecx,DWORD PTR [ebp+0x524]
6501c167:	jae    0x6501c190
6501c169:	mov    edx,DWORD PTR [ebp-0x5c]
6501c16c:	inc    DWORD PTR [ebp-0x5c]
6501c16f:	mov    dl,BYTE PTR [edx]
6501c171:	inc    ecx
6501c172:	cmp    dl,0xa
6501c175:	jne    0x6501c181
6501c177:	inc    DWORD PTR [ebp-0x68]
6501c17a:	mov    BYTE PTR [eax],0xd
6501c17d:	inc    eax
6501c17e:	inc    DWORD PTR [ebp-0x54]
6501c181:	mov    BYTE PTR [eax],dl
6501c183:	inc    eax
6501c184:	inc    DWORD PTR [ebp-0x54]
6501c187:	cmp    DWORD PTR [ebp-0x54],0x400
6501c18e:	jb     0x6501c161
6501c190:	mov    ebx,eax
6501c192:	lea    eax,[ebp-0x50]
6501c195:	sub    ebx,eax
6501c197:	push   0x0
6501c199:	lea    eax,[ebp-0x6c]
6501c19c:	push   eax
6501c19d:	push   ebx
6501c19e:	lea    eax,[ebp-0x50]
6501c1a1:	push   eax
6501c1a2:	mov    eax,DWORD PTR [esi]
6501c1a4:	push   DWORD PTR [edi+eax*1]
6501c1a7:	call   DWORD PTR ds:0x65024080
6501c1ad:	test   eax,eax
6501c1af:	je     0x6501c384
6501c1b5:	mov    eax,DWORD PTR [ebp-0x6c]
6501c1b8:	add    DWORD PTR [ebp-0x60],eax
6501c1bb:	cmp    eax,ebx
6501c1bd:	jl     0x6501c38d
6501c1c3:	mov    eax,DWORD PTR [ebp-0x5c]
6501c1c6:	sub    eax,DWORD PTR [ebp-0x64]
6501c1c9:	cmp    eax,DWORD PTR [ebp+0x524]
6501c1cf:	jb     0x6501c151
6501c1d1:	jmp    0x6501c38d
6501c1d6:	cmp    bl,0x2
6501c1d9:	mov    DWORD PTR [ebp-0x54],eax
6501c1dc:	jne    0x6501c285
6501c1e2:	cmp    DWORD PTR [ebp+0x524],ecx
6501c1e8:	jbe    0x6501c3c3
6501c1ee:	jmp    0x6501c1f3
6501c1f0:	mov    esi,DWORD PTR [ebp-0x70]
6501c1f3:	mov    ecx,DWORD PTR [ebp-0x54]
6501c1f6:	and    DWORD PTR [ebp-0x5c],0x0
6501c1fa:	sub    ecx,DWORD PTR [ebp-0x64]
6501c1fd:	lea    eax,[ebp-0x50]
6501c200:	cmp    ecx,DWORD PTR [ebp+0x524]
6501c206:	jae    0x6501c23b
6501c208:	mov    edx,DWORD PTR [ebp-0x54]
6501c20b:	add    DWORD PTR [ebp-0x54],0x2
6501c20f:	movzx  edx,WORD PTR [edx]
6501c212:	inc    ecx
6501c213:	inc    ecx
6501c214:	cmp    dx,0xa
6501c218:	jne    0x6501c229
6501c21a:	add    DWORD PTR [ebp-0x68],0x2
6501c21e:	mov    WORD PTR [eax],0xd
6501c223:	inc    eax
6501c224:	inc    eax
6501c225:	add    DWORD PTR [ebp-0x5c],0x2
6501c229:	add    DWORD PTR [ebp-0x5c],0x2
6501c22d:	mov    WORD PTR [eax],dx
6501c230:	inc    eax
6501c231:	inc    eax
6501c232:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6501c239:	jb     0x6501c200
6501c23b:	mov    ebx,eax
6501c23d:	lea    eax,[ebp-0x50]
6501c240:	sub    ebx,eax
6501c242:	push   0x0
6501c244:	lea    eax,[ebp-0x6c]
6501c247:	push   eax
6501c248:	push   ebx
6501c249:	lea    eax,[ebp-0x50]
6501c24c:	push   eax
6501c24d:	mov    eax,DWORD PTR [esi]
6501c24f:	push   DWORD PTR [edi+eax*1]
6501c252:	call   DWORD PTR ds:0x65024080
6501c258:	test   eax,eax
6501c25a:	je     0x6501c384
6501c260:	mov    eax,DWORD PTR [ebp-0x6c]
6501c263:	add    DWORD PTR [ebp-0x60],eax
6501c266:	cmp    eax,ebx
6501c268:	jl     0x6501c38d
6501c26e:	mov    eax,DWORD PTR [ebp-0x54]
6501c271:	sub    eax,DWORD PTR [ebp-0x64]
6501c274:	cmp    eax,DWORD PTR [ebp+0x524]
6501c27a:	jb     0x6501c1f0
6501c280:	jmp    0x6501c38d
6501c285:	cmp    DWORD PTR [ebp+0x524],ecx
6501c28b:	jbe    0x6501c3c3
6501c291:	mov    ecx,DWORD PTR [ebp-0x54]
6501c294:	and    DWORD PTR [ebp-0x5c],0x0
6501c298:	sub    ecx,DWORD PTR [ebp-0x64]
6501c29b:	push   0x2
6501c29d:	lea    eax,[ebp+0x3b4]
6501c2a3:	pop    esi
6501c2a4:	cmp    ecx,DWORD PTR [ebp+0x524]
6501c2aa:	jae    0x6501c2d8
6501c2ac:	mov    edx,DWORD PTR [ebp-0x54]
6501c2af:	movzx  edx,WORD PTR [edx]
6501c2b2:	add    DWORD PTR [ebp-0x54],esi
6501c2b5:	add    ecx,esi
6501c2b7:	cmp    dx,0xa
6501c2bb:	jne    0x6501c2c7
6501c2bd:	mov    WORD PTR [eax],0xd
6501c2c2:	add    eax,esi
6501c2c4:	add    DWORD PTR [ebp-0x5c],esi
6501c2c7:	add    DWORD PTR [ebp-0x5c],esi
6501c2ca:	mov    WORD PTR [eax],dx
6501c2cd:	add    eax,esi
6501c2cf:	cmp    DWORD PTR [ebp-0x5c],0x152
6501c2d6:	jb     0x6501c2a4
6501c2d8:	xor    esi,esi
6501c2da:	push   esi
6501c2db:	push   esi
6501c2dc:	push   0x2ab
6501c2e1:	lea    ecx,[ebp+0x104]
6501c2e7:	push   ecx
6501c2e8:	lea    ecx,[ebp+0x3b4]
6501c2ee:	sub    eax,ecx
6501c2f0:	cdq    
6501c2f1:	sub    eax,edx
6501c2f3:	sar    eax,1
6501c2f5:	push   eax
6501c2f6:	mov    eax,ecx
6501c2f8:	push   eax
6501c2f9:	push   esi
6501c2fa:	push   0xfde9
6501c2ff:	call   DWORD PTR ds:0x65024020
6501c305:	mov    ebx,eax
6501c307:	cmp    ebx,esi
6501c309:	je     0x6501c384
6501c30b:	push   0x0
6501c30d:	lea    eax,[ebp-0x6c]
6501c310:	push   eax
6501c311:	mov    eax,ebx
6501c313:	sub    eax,esi
6501c315:	push   eax
6501c316:	lea    eax,[ebp+esi*1+0x104]
6501c31d:	push   eax
6501c31e:	mov    eax,DWORD PTR [ebp-0x70]
6501c321:	mov    eax,DWORD PTR [eax]
6501c323:	push   DWORD PTR [edi+eax*1]
6501c326:	call   DWORD PTR ds:0x65024080
6501c32c:	test   eax,eax
6501c32e:	je     0x6501c339
6501c330:	add    esi,DWORD PTR [ebp-0x6c]
6501c333:	cmp    ebx,esi
6501c335:	jg     0x6501c30b
6501c337:	jmp    0x6501c342
6501c339:	call   DWORD PTR ds:0x6502403c
6501c33f:	mov    DWORD PTR [ebp-0x58],eax
6501c342:	cmp    ebx,esi
6501c344:	jg     0x6501c38d
6501c346:	mov    eax,DWORD PTR [ebp-0x54]
6501c349:	sub    eax,DWORD PTR [ebp-0x64]
6501c34c:	cmp    eax,DWORD PTR [ebp+0x524]
6501c352:	mov    DWORD PTR [ebp-0x60],eax
6501c355:	jb     0x6501c291
6501c35b:	jmp    0x6501c38d
6501c35d:	push   0x0
6501c35f:	lea    ecx,[ebp-0x6c]
6501c362:	push   ecx
6501c363:	push   DWORD PTR [ebp+0x524]
6501c369:	push   DWORD PTR [ebp-0x64]
6501c36c:	push   DWORD PTR [eax]
6501c36e:	call   DWORD PTR ds:0x65024080
6501c374:	test   eax,eax
6501c376:	je     0x6501c384
6501c378:	mov    eax,DWORD PTR [ebp-0x6c]
6501c37b:	and    DWORD PTR [ebp-0x58],0x0
6501c37f:	mov    DWORD PTR [ebp-0x60],eax
6501c382:	jmp    0x6501c38d
6501c384:	call   DWORD PTR ds:0x6502403c
6501c38a:	mov    DWORD PTR [ebp-0x58],eax
6501c38d:	cmp    DWORD PTR [ebp-0x60],0x0
6501c391:	jne    0x6501c3f0
6501c393:	cmp    DWORD PTR [ebp-0x58],0x0
6501c397:	je     0x6501c3c0
6501c399:	push   0x5
6501c39b:	pop    esi
6501c39c:	cmp    DWORD PTR [ebp-0x58],esi
6501c39f:	jne    0x6501c3b5
6501c3a1:	call   0x65014580
6501c3a6:	mov    DWORD PTR [eax],0x9
6501c3ac:	call   0x65014593
6501c3b1:	mov    DWORD PTR [eax],esi
6501c3b3:	jmp    0x6501c3eb
6501c3b5:	push   DWORD PTR [ebp-0x58]
6501c3b8:	call   0x650145a6
6501c3bd:	pop    ecx
6501c3be:	jmp    0x6501c3eb
6501c3c0:	mov    esi,DWORD PTR [ebp-0x70]
6501c3c3:	mov    eax,DWORD PTR [esi]
6501c3c5:	test   BYTE PTR [edi+eax*1+0x4],0x40
6501c3ca:	je     0x6501c3d8
6501c3cc:	mov    eax,DWORD PTR [ebp-0x64]
6501c3cf:	cmp    BYTE PTR [eax],0x1a
6501c3d2:	jne    0x6501c3d8
6501c3d4:	xor    eax,eax
6501c3d6:	jmp    0x6501c3f6
6501c3d8:	call   0x65014580
6501c3dd:	mov    DWORD PTR [eax],0x1c
6501c3e3:	call   0x65014593
6501c3e8:	and    DWORD PTR [eax],0x0
6501c3eb:	or     eax,0xffffffff
6501c3ee:	jmp    0x6501c3f6
6501c3f0:	mov    eax,DWORD PTR [ebp-0x60]
6501c3f3:	sub    eax,DWORD PTR [ebp-0x68]
6501c3f6:	pop    edi
6501c3f7:	pop    ebx
6501c3f8:	mov    ecx,DWORD PTR [ebp+0x510]
6501c3fe:	xor    ecx,ebp
6501c400:	pop    esi
6501c401:	call   0x6501292c
6501c406:	add    ebp,0x514
6501c40c:	leave  
6501c40d:	ret    
6501c40e:	push   0x10
6501c410:	push   0x65029e10
6501c415:	call   0x65013e70
6501c41a:	mov    eax,DWORD PTR [ebp+0x8]
6501c41d:	cmp    eax,0xfffffffe
6501c420:	jne    0x6501c43d
6501c422:	call   0x65014593
6501c427:	and    DWORD PTR [eax],0x0
6501c42a:	call   0x65014580
6501c42f:	mov    DWORD PTR [eax],0x9
6501c435:	or     eax,0xffffffff
6501c438:	jmp    0x6501c4da
6501c43d:	xor    edi,edi
6501c43f:	cmp    eax,edi
6501c441:	jl     0x6501c44b
6501c443:	cmp    eax,DWORD PTR ds:0x65031440
6501c449:	jb     0x6501c46c
6501c44b:	call   0x65014593
6501c450:	mov    DWORD PTR [eax],edi
6501c452:	call   0x65014580
6501c457:	mov    DWORD PTR [eax],0x9
6501c45d:	push   edi
6501c45e:	push   edi
6501c45f:	push   edi
6501c460:	push   edi
6501c461:	push   edi
6501c462:	call   0x6501241f
6501c467:	add    esp,0x14
6501c46a:	jmp    0x6501c435
6501c46c:	mov    ecx,eax
6501c46e:	sar    ecx,0x5
6501c471:	lea    ebx,[ecx*4+0x65031460]
6501c478:	mov    esi,eax
6501c47a:	and    esi,0x1f
6501c47d:	shl    esi,0x6
6501c480:	mov    ecx,DWORD PTR [ebx]
6501c482:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501c487:	and    ecx,0x1
6501c48a:	je     0x6501c44b
6501c48c:	push   eax
6501c48d:	call   0x6501dc00
6501c492:	pop    ecx
6501c493:	mov    DWORD PTR [ebp-0x4],edi
6501c496:	mov    eax,DWORD PTR [ebx]
6501c498:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501c49d:	je     0x6501c4b5
6501c49f:	push   DWORD PTR [ebp+0x10]
6501c4a2:	push   DWORD PTR [ebp+0xc]
6501c4a5:	push   DWORD PTR [ebp+0x8]
6501c4a8:	call   0x6501bdec
6501c4ad:	add    esp,0xc
6501c4b0:	mov    DWORD PTR [ebp-0x1c],eax
6501c4b3:	jmp    0x6501c4cb
6501c4b5:	call   0x65014580
6501c4ba:	mov    DWORD PTR [eax],0x9
6501c4c0:	call   0x65014593
6501c4c5:	mov    DWORD PTR [eax],edi
6501c4c7:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501c4cb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501c4d2:	call   0x6501c4e0
6501c4d7:	mov    eax,DWORD PTR [ebp-0x1c]
6501c4da:	call   0x65013eb5
6501c4df:	ret    
6501c4e0:	push   DWORD PTR [ebp+0x8]
6501c4e3:	call   0x6501dca0
6501c4e8:	pop    ecx
6501c4e9:	ret    
6501c4ea:	inc    DWORD PTR ds:0x6502df74
6501c4f0:	push   0x1000
6501c4f5:	call   0x65015b90
6501c4fa:	test   eax,eax
6501c4fc:	pop    ecx
6501c4fd:	mov    ecx,DWORD PTR [esp+0x4]
6501c501:	mov    DWORD PTR [ecx+0x8],eax
6501c504:	je     0x6501c513
6501c506:	or     DWORD PTR [ecx+0xc],0x8
6501c50a:	mov    DWORD PTR [ecx+0x18],0x1000
6501c511:	jmp    0x6501c524
6501c513:	or     DWORD PTR [ecx+0xc],0x4
6501c517:	lea    eax,[ecx+0x14]
6501c51a:	mov    DWORD PTR [ecx+0x8],eax
6501c51d:	mov    DWORD PTR [ecx+0x18],0x2
6501c524:	mov    eax,DWORD PTR [ecx+0x8]
6501c527:	and    DWORD PTR [ecx+0x4],0x0
6501c52b:	mov    DWORD PTR [ecx],eax
6501c52d:	ret    
6501c52e:	mov    eax,DWORD PTR [esp+0x4]
6501c532:	cmp    eax,0xfffffffe
6501c535:	jne    0x6501c545
6501c537:	call   0x65014580
6501c53c:	mov    DWORD PTR [eax],0x9
6501c542:	xor    eax,eax
6501c544:	ret    
6501c545:	push   esi
6501c546:	xor    esi,esi
6501c548:	cmp    eax,esi
6501c54a:	jl     0x6501c554
6501c54c:	cmp    eax,DWORD PTR ds:0x65031440
6501c552:	jb     0x6501c570
6501c554:	call   0x65014580
6501c559:	push   esi
6501c55a:	push   esi
6501c55b:	push   esi
6501c55c:	push   esi
6501c55d:	push   esi
6501c55e:	mov    DWORD PTR [eax],0x9
6501c564:	call   0x6501241f
6501c569:	add    esp,0x14
6501c56c:	xor    eax,eax
6501c56e:	pop    esi
6501c56f:	ret    
6501c570:	mov    ecx,eax
6501c572:	and    eax,0x1f
6501c575:	sar    ecx,0x5
6501c578:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501c57f:	shl    eax,0x6
6501c582:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6501c587:	and    eax,0x40
6501c58a:	pop    esi
6501c58b:	ret    
6501c58c:	mov    eax,0x6502cc80
6501c591:	ret    
6501c592:	mov    eax,ds:0x65031420
6501c597:	test   eax,eax
6501c599:	push   esi
6501c59a:	push   0x14
6501c59c:	pop    esi
6501c59d:	jne    0x6501c5a6
6501c59f:	mov    eax,0x200
6501c5a4:	jmp    0x6501c5ac
6501c5a6:	cmp    eax,esi
6501c5a8:	jge    0x6501c5b1
6501c5aa:	mov    eax,esi
6501c5ac:	mov    ds:0x65031420,eax
6501c5b1:	push   0x4
6501c5b3:	push   eax
6501c5b4:	call   0x65015bd0
6501c5b9:	test   eax,eax
6501c5bb:	pop    ecx
6501c5bc:	pop    ecx
6501c5bd:	mov    ds:0x65030410,eax
6501c5c2:	jne    0x6501c5e2
6501c5c4:	push   0x4
6501c5c6:	push   esi
6501c5c7:	mov    DWORD PTR ds:0x65031420,esi
6501c5cd:	call   0x65015bd0
6501c5d2:	test   eax,eax
6501c5d4:	pop    ecx
6501c5d5:	pop    ecx
6501c5d6:	mov    ds:0x65030410,eax
6501c5db:	jne    0x6501c5e2
6501c5dd:	push   0x1a
6501c5df:	pop    eax
6501c5e0:	pop    esi
6501c5e1:	ret    
6501c5e2:	xor    edx,edx
6501c5e4:	mov    ecx,0x6502cc80
6501c5e9:	jmp    0x6501c5f0
6501c5eb:	mov    eax,ds:0x65030410
6501c5f0:	mov    DWORD PTR [edx+eax*1],ecx
6501c5f3:	add    ecx,0x20
6501c5f6:	add    edx,0x4
6501c5f9:	cmp    ecx,0x6502cf00
6501c5ff:	jl     0x6501c5eb
6501c601:	push   0xfffffffe
6501c603:	pop    esi
6501c604:	xor    edx,edx
6501c606:	mov    ecx,0x6502cc90
6501c60b:	push   edi
6501c60c:	mov    eax,edx
6501c60e:	sar    eax,0x5
6501c611:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501c618:	mov    edi,edx
6501c61a:	and    edi,0x1f
6501c61d:	shl    edi,0x6
6501c620:	mov    eax,DWORD PTR [edi+eax*1]
6501c623:	cmp    eax,0xffffffff
6501c626:	je     0x6501c630
6501c628:	cmp    eax,esi
6501c62a:	je     0x6501c630
6501c62c:	test   eax,eax
6501c62e:	jne    0x6501c632
6501c630:	mov    DWORD PTR [ecx],esi
6501c632:	add    ecx,0x20
6501c635:	inc    edx
6501c636:	cmp    ecx,0x6502ccf0
6501c63c:	jl     0x6501c60c
6501c63e:	pop    edi
6501c63f:	xor    eax,eax
6501c641:	pop    esi
6501c642:	ret    
6501c643:	call   0x6501dfa1
6501c648:	cmp    BYTE PTR ds:0x6502d92c,0x0
6501c64f:	je     0x6501c656
6501c651:	call   0x6501dd84
6501c656:	push   DWORD PTR ds:0x65030410
6501c65c:	call   0x65013746
6501c661:	pop    ecx
6501c662:	ret    
6501c663:	push   esi
6501c664:	mov    esi,DWORD PTR [esp+0x8]
6501c668:	mov    eax,0x6502cc80
6501c66d:	cmp    esi,eax
6501c66f:	jb     0x6501c693
6501c671:	cmp    esi,0x6502cee0
6501c677:	ja     0x6501c693
6501c679:	mov    ecx,esi
6501c67b:	sub    ecx,eax
6501c67d:	sar    ecx,0x5
6501c680:	add    ecx,0x10
6501c683:	push   ecx
6501c684:	call   0x65019ecf
6501c689:	or     DWORD PTR [esi+0xc],0x8000
6501c690:	pop    ecx
6501c691:	pop    esi
6501c692:	ret    
6501c693:	add    esi,0x20
6501c696:	push   esi
6501c697:	call   DWORD PTR ds:0x65024098
6501c69d:	pop    esi
6501c69e:	ret    
6501c69f:	mov    eax,DWORD PTR [esp+0x4]
6501c6a3:	cmp    eax,0x14
6501c6a6:	jge    0x6501c6be
6501c6a8:	add    eax,0x10
6501c6ab:	push   eax
6501c6ac:	call   0x65019ecf
6501c6b1:	mov    eax,DWORD PTR [esp+0xc]
6501c6b5:	or     DWORD PTR [eax+0xc],0x8000
6501c6bc:	pop    ecx
6501c6bd:	ret    
6501c6be:	mov    eax,DWORD PTR [esp+0x8]
6501c6c2:	add    eax,0x20
6501c6c5:	push   eax
6501c6c6:	call   DWORD PTR ds:0x65024098
6501c6cc:	ret    
6501c6cd:	mov    eax,DWORD PTR [esp+0x4]
6501c6d1:	mov    ecx,0x6502cc80
6501c6d6:	cmp    eax,ecx
6501c6d8:	jb     0x6501c6f8
6501c6da:	cmp    eax,0x6502cee0
6501c6df:	ja     0x6501c6f8
6501c6e1:	and    DWORD PTR [eax+0xc],0xffff7fff
6501c6e8:	sub    eax,ecx
6501c6ea:	sar    eax,0x5
6501c6ed:	add    eax,0x10
6501c6f0:	push   eax
6501c6f1:	call   0x65019df7
6501c6f6:	pop    ecx
6501c6f7:	ret    
6501c6f8:	add    eax,0x20
6501c6fb:	push   eax
6501c6fc:	call   DWORD PTR ds:0x6502409c
6501c702:	ret    
6501c703:	mov    ecx,DWORD PTR [esp+0x4]
6501c707:	cmp    ecx,0x14
6501c70a:	mov    eax,DWORD PTR [esp+0x8]
6501c70e:	jge    0x6501c722
6501c710:	and    DWORD PTR [eax+0xc],0xffff7fff
6501c717:	add    ecx,0x10
6501c71a:	push   ecx
6501c71b:	call   0x65019df7
6501c720:	pop    ecx
6501c721:	ret    
6501c722:	add    eax,0x20
6501c725:	push   eax
6501c726:	call   DWORD PTR ds:0x6502409c
6501c72c:	ret    
6501c72d:	mov    eax,DWORD PTR [esp+0x4]
6501c731:	push   esi
6501c732:	xor    esi,esi
6501c734:	cmp    eax,esi
6501c736:	jne    0x6501c755
6501c738:	call   0x65014580
6501c73d:	push   esi
6501c73e:	push   esi
6501c73f:	push   esi
6501c740:	push   esi
6501c741:	push   esi
6501c742:	mov    DWORD PTR [eax],0x16
6501c748:	call   0x6501241f
6501c74d:	add    esp,0x14
6501c750:	or     eax,0xffffffff
6501c753:	pop    esi
6501c754:	ret    
6501c755:	mov    eax,DWORD PTR [eax+0x10]
6501c758:	pop    esi
6501c759:	ret    
6501c75a:	push   ebp
6501c75b:	mov    ebp,esp
6501c75d:	sub    esp,0x10
6501c760:	mov    eax,ds:0x6502c09c
6501c765:	xor    eax,ebp
6501c767:	mov    DWORD PTR [ebp-0x4],eax
6501c76a:	push   ebx
6501c76b:	push   esi
6501c76c:	mov    esi,DWORD PTR [ebp+0xc]
6501c76f:	test   BYTE PTR [esi+0xc],0x40
6501c773:	push   edi
6501c774:	jne    0x6501c909
6501c77a:	push   esi
6501c77b:	call   0x6501c72d
6501c780:	cmp    eax,0xffffffff
6501c783:	pop    ecx
6501c784:	mov    edi,0x6502c880
6501c789:	je     0x6501c7b9
6501c78b:	push   esi
6501c78c:	call   0x6501c72d
6501c791:	cmp    eax,0xfffffffe
6501c794:	pop    ecx
6501c795:	je     0x6501c7b9
6501c797:	push   esi
6501c798:	call   0x6501c72d
6501c79d:	sar    eax,0x5
6501c7a0:	push   esi
6501c7a1:	lea    ebx,[eax*4+0x65031460]
6501c7a8:	call   0x6501c72d
6501c7ad:	and    eax,0x1f
6501c7b0:	pop    ecx
6501c7b1:	shl    eax,0x6
6501c7b4:	add    eax,DWORD PTR [ebx]
6501c7b6:	pop    ecx
6501c7b7:	jmp    0x6501c7bb
6501c7b9:	mov    eax,edi
6501c7bb:	mov    al,BYTE PTR [eax+0x24]
6501c7be:	and    al,0x7f
6501c7c0:	cmp    al,0x2
6501c7c2:	je     0x6501c909
6501c7c8:	push   esi
6501c7c9:	call   0x6501c72d
6501c7ce:	cmp    eax,0xffffffff
6501c7d1:	pop    ecx
6501c7d2:	je     0x6501c802
6501c7d4:	push   esi
6501c7d5:	call   0x6501c72d
6501c7da:	cmp    eax,0xfffffffe
6501c7dd:	pop    ecx
6501c7de:	je     0x6501c802
6501c7e0:	push   esi
6501c7e1:	call   0x6501c72d
6501c7e6:	sar    eax,0x5
6501c7e9:	push   esi
6501c7ea:	lea    ebx,[eax*4+0x65031460]
6501c7f1:	call   0x6501c72d
6501c7f6:	and    eax,0x1f
6501c7f9:	pop    ecx
6501c7fa:	shl    eax,0x6
6501c7fd:	add    eax,DWORD PTR [ebx]
6501c7ff:	pop    ecx
6501c800:	jmp    0x6501c804
6501c802:	mov    eax,edi
6501c804:	mov    al,BYTE PTR [eax+0x24]
6501c807:	and    al,0x7f
6501c809:	cmp    al,0x1
6501c80b:	jne    0x6501c869
6501c80d:	dec    DWORD PTR [esi+0x4]
6501c810:	mov    ebx,DWORD PTR [ebp+0x8]
6501c813:	js     0x6501c823
6501c815:	mov    eax,DWORD PTR [esi]
6501c817:	mov    BYTE PTR [eax],bl
6501c819:	mov    ecx,DWORD PTR [esi]
6501c81b:	movzx  eax,BYTE PTR [ecx]
6501c81e:	inc    ecx
6501c81f:	mov    DWORD PTR [esi],ecx
6501c821:	jmp    0x6501c82f
6501c823:	movsx  eax,bl
6501c826:	push   esi
6501c827:	push   eax
6501c828:	call   0x650169c5
6501c82d:	pop    ecx
6501c82e:	pop    ecx
6501c82f:	cmp    eax,0xffffffff
6501c832:	jne    0x6501c83d
6501c834:	or     ax,0xffff
6501c838:	jmp    0x6501c929
6501c83d:	dec    DWORD PTR [esi+0x4]
6501c840:	js     0x6501c850
6501c842:	mov    eax,DWORD PTR [esi]
6501c844:	mov    BYTE PTR [eax],bh
6501c846:	mov    ecx,DWORD PTR [esi]
6501c848:	movzx  eax,BYTE PTR [ecx]
6501c84b:	inc    ecx
6501c84c:	mov    DWORD PTR [esi],ecx
6501c84e:	jmp    0x6501c85c
6501c850:	movsx  eax,bh
6501c853:	push   esi
6501c854:	push   eax
6501c855:	call   0x650169c5
6501c85a:	pop    ecx
6501c85b:	pop    ecx
6501c85c:	cmp    eax,0xffffffff
6501c85f:	je     0x6501c834
6501c861:	mov    ax,bx
6501c864:	jmp    0x6501c929
6501c869:	push   esi
6501c86a:	call   0x6501c72d
6501c86f:	cmp    eax,0xffffffff
6501c872:	pop    ecx
6501c873:	je     0x6501c8a3
6501c875:	push   esi
6501c876:	call   0x6501c72d
6501c87b:	cmp    eax,0xfffffffe
6501c87e:	pop    ecx
6501c87f:	je     0x6501c8a3
6501c881:	push   esi
6501c882:	call   0x6501c72d
6501c887:	sar    eax,0x5
6501c88a:	push   esi
6501c88b:	lea    ebx,[eax*4+0x65031460]
6501c892:	call   0x6501c72d
6501c897:	and    eax,0x1f
6501c89a:	pop    ecx
6501c89b:	shl    eax,0x6
6501c89e:	add    eax,DWORD PTR [ebx]
6501c8a0:	pop    ecx
6501c8a1:	jmp    0x6501c8a5
6501c8a3:	mov    eax,edi
6501c8a5:	test   BYTE PTR [eax+0x4],0x80
6501c8a9:	je     0x6501c909
6501c8ab:	push   DWORD PTR [ebp+0x8]
6501c8ae:	lea    eax,[ebp-0xc]
6501c8b1:	push   0x5
6501c8b3:	push   eax
6501c8b4:	lea    eax,[ebp-0x10]
6501c8b7:	push   eax
6501c8b8:	call   0x6501d8a1
6501c8bd:	add    esp,0x10
6501c8c0:	test   eax,eax
6501c8c2:	jne    0x6501c834
6501c8c8:	xor    ebx,ebx
6501c8ca:	cmp    DWORD PTR [ebp-0x10],ebx
6501c8cd:	jle    0x6501c903
6501c8cf:	dec    DWORD PTR [esi+0x4]
6501c8d2:	js     0x6501c8e6
6501c8d4:	mov    eax,DWORD PTR [esi]
6501c8d6:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6501c8da:	mov    BYTE PTR [eax],cl
6501c8dc:	mov    ecx,DWORD PTR [esi]
6501c8de:	movzx  eax,BYTE PTR [ecx]
6501c8e1:	inc    ecx
6501c8e2:	mov    DWORD PTR [esi],ecx
6501c8e4:	jmp    0x6501c8f4
6501c8e6:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6501c8eb:	push   esi
6501c8ec:	push   eax
6501c8ed:	call   0x650169c5
6501c8f2:	pop    ecx
6501c8f3:	pop    ecx
6501c8f4:	cmp    eax,0xffffffff
6501c8f7:	je     0x6501c834
6501c8fd:	inc    ebx
6501c8fe:	cmp    ebx,DWORD PTR [ebp-0x10]
6501c901:	jl     0x6501c8cf
6501c903:	mov    ax,WORD PTR [ebp+0x8]
6501c907:	jmp    0x6501c929
6501c909:	add    DWORD PTR [esi+0x4],0xfffffffe
6501c90d:	js     0x6501c91c
6501c90f:	mov    ecx,DWORD PTR [esi]
6501c911:	mov    eax,DWORD PTR [ebp+0x8]
6501c914:	mov    WORD PTR [ecx],ax
6501c917:	add    DWORD PTR [esi],0x2
6501c91a:	jmp    0x6501c929
6501c91c:	movzx  eax,WORD PTR [ebp+0x8]
6501c920:	push   esi
6501c921:	push   eax
6501c922:	call   0x6501dfaa
6501c927:	pop    ecx
6501c928:	pop    ecx
6501c929:	mov    ecx,DWORD PTR [ebp-0x4]
6501c92c:	pop    edi
6501c92d:	pop    esi
6501c92e:	xor    ecx,ebp
6501c930:	pop    ebx
6501c931:	call   0x6501292c
6501c936:	leave  
6501c937:	ret    
6501c938:	mov    eax,ds:0x6502c09c
6501c93d:	or     eax,0x1
6501c940:	xor    ecx,ecx
6501c942:	cmp    DWORD PTR ds:0x6502df78,eax
6501c948:	sete   cl
6501c94b:	mov    eax,ecx
6501c94d:	ret    
6501c94e:	push   ebp
6501c94f:	mov    ebp,esp
6501c951:	sub    esp,0x10
6501c954:	push   ebx
6501c955:	push   esi
6501c956:	mov    esi,DWORD PTR [ebp+0xc]
6501c959:	xor    ebx,ebx
6501c95b:	cmp    esi,ebx
6501c95d:	je     0x6501c972
6501c95f:	cmp    DWORD PTR [ebp+0x10],ebx
6501c962:	je     0x6501c972
6501c964:	cmp    BYTE PTR [esi],bl
6501c966:	jne    0x6501c978
6501c968:	mov    eax,DWORD PTR [ebp+0x8]
6501c96b:	cmp    eax,ebx
6501c96d:	je     0x6501c972
6501c96f:	mov    WORD PTR [eax],bx
6501c972:	xor    eax,eax
6501c974:	pop    esi
6501c975:	pop    ebx
6501c976:	leave  
6501c977:	ret    
6501c978:	push   DWORD PTR [ebp+0x14]
6501c97b:	lea    ecx,[ebp-0x10]
6501c97e:	call   0x65012acf
6501c983:	mov    eax,DWORD PTR [ebp-0x10]
6501c986:	cmp    DWORD PTR [eax+0x14],ebx
6501c989:	jne    0x6501c9aa
6501c98b:	mov    eax,DWORD PTR [ebp+0x8]
6501c98e:	cmp    eax,ebx
6501c990:	je     0x6501c999
6501c992:	movzx  cx,BYTE PTR [esi]
6501c996:	mov    WORD PTR [eax],cx
6501c999:	cmp    BYTE PTR [ebp-0x4],bl
6501c99c:	je     0x6501c9a5
6501c99e:	mov    eax,DWORD PTR [ebp-0x8]
6501c9a1:	and    DWORD PTR [eax+0x70],0xfffffffd
6501c9a5:	xor    eax,eax
6501c9a7:	inc    eax
6501c9a8:	jmp    0x6501c974
6501c9aa:	lea    eax,[ebp-0x10]
6501c9ad:	push   eax
6501c9ae:	movzx  eax,BYTE PTR [esi]
6501c9b1:	push   eax
6501c9b2:	call   0x65019c5f
6501c9b7:	test   eax,eax
6501c9b9:	pop    ecx
6501c9ba:	pop    ecx
6501c9bb:	je     0x6501ca3a
6501c9bd:	mov    eax,DWORD PTR [ebp-0x10]
6501c9c0:	mov    ecx,DWORD PTR [eax+0xac]
6501c9c6:	cmp    ecx,0x1
6501c9c9:	jle    0x6501c9f0
6501c9cb:	cmp    DWORD PTR [ebp+0x10],ecx
6501c9ce:	jl     0x6501c9f0
6501c9d0:	xor    edx,edx
6501c9d2:	cmp    DWORD PTR [ebp+0x8],ebx
6501c9d5:	setne  dl
6501c9d8:	push   edx
6501c9d9:	push   DWORD PTR [ebp+0x8]
6501c9dc:	push   ecx
6501c9dd:	push   esi
6501c9de:	push   0x9
6501c9e0:	push   DWORD PTR [eax+0x4]
6501c9e3:	call   DWORD PTR ds:0x6502401c
6501c9e9:	test   eax,eax
6501c9eb:	mov    eax,DWORD PTR [ebp-0x10]
6501c9ee:	jne    0x6501ca00
6501c9f0:	mov    ecx,DWORD PTR [ebp+0x10]
6501c9f3:	cmp    ecx,DWORD PTR [eax+0xac]
6501c9f9:	jb     0x6501ca1b
6501c9fb:	cmp    BYTE PTR [esi+0x1],bl
6501c9fe:	je     0x6501ca1b
6501ca00:	cmp    BYTE PTR [ebp-0x4],bl
6501ca03:	mov    eax,DWORD PTR [eax+0xac]
6501ca09:	je     0x6501c974
6501ca0f:	mov    ecx,DWORD PTR [ebp-0x8]
6501ca12:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501ca16:	jmp    0x6501c974
6501ca1b:	call   0x65014580
6501ca20:	mov    DWORD PTR [eax],0x2a
6501ca26:	cmp    BYTE PTR [ebp-0x4],bl
6501ca29:	je     0x6501ca32
6501ca2b:	mov    eax,DWORD PTR [ebp-0x8]
6501ca2e:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ca32:	or     eax,0xffffffff
6501ca35:	jmp    0x6501c974
6501ca3a:	xor    eax,eax
6501ca3c:	cmp    DWORD PTR [ebp+0x8],ebx
6501ca3f:	setne  al
6501ca42:	push   eax
6501ca43:	push   DWORD PTR [ebp+0x8]
6501ca46:	mov    eax,DWORD PTR [ebp-0x10]
6501ca49:	push   0x1
6501ca4b:	push   esi
6501ca4c:	push   0x9
6501ca4e:	push   DWORD PTR [eax+0x4]
6501ca51:	call   DWORD PTR ds:0x6502401c
6501ca57:	test   eax,eax
6501ca59:	jne    0x6501c999
6501ca5f:	jmp    0x6501ca1b
6501ca61:	push   0x0
6501ca63:	push   DWORD PTR [esp+0x10]
6501ca67:	push   DWORD PTR [esp+0x10]
6501ca6b:	push   DWORD PTR [esp+0x10]
6501ca6f:	call   0x6501c94e
6501ca74:	add    esp,0x10
6501ca77:	ret    
6501ca78:	push   ebp
6501ca79:	lea    ebp,[esp-0x1f8]
6501ca80:	sub    esp,0x278
6501ca86:	mov    eax,ds:0x6502c09c
6501ca8b:	xor    eax,ebp
6501ca8d:	mov    DWORD PTR [ebp+0x1f4],eax
6501ca93:	mov    eax,DWORD PTR [ebp+0x200]
6501ca99:	push   ebx
6501ca9a:	mov    ebx,DWORD PTR [ebp+0x204]
6501caa0:	push   esi
6501caa1:	xor    esi,esi
6501caa3:	push   edi
6501caa4:	mov    edi,DWORD PTR [ebp+0x20c]
6501caaa:	push   DWORD PTR [ebp+0x208]
6501cab0:	lea    ecx,[ebp-0x5c]
6501cab3:	mov    DWORD PTR [ebp-0x30],eax
6501cab6:	mov    DWORD PTR [ebp-0x2c],edi
6501cab9:	mov    DWORD PTR [ebp-0x64],esi
6501cabc:	mov    DWORD PTR [ebp-0x18],esi
6501cabf:	mov    DWORD PTR [ebp-0x40],esi
6501cac2:	mov    DWORD PTR [ebp-0x20],esi
6501cac5:	mov    DWORD PTR [ebp-0x3c],esi
6501cac8:	mov    DWORD PTR [ebp-0x68],esi
6501cacb:	mov    DWORD PTR [ebp-0x44],esi
6501cace:	call   0x65012acf
6501cad3:	cmp    DWORD PTR [ebp-0x30],esi
6501cad6:	jne    0x6501cb05
6501cad8:	call   0x65014580
6501cadd:	push   esi
6501cade:	push   esi
6501cadf:	push   esi
6501cae0:	push   esi
6501cae1:	mov    DWORD PTR [eax],0x16
6501cae7:	push   esi
6501cae8:	call   0x6501241f
6501caed:	add    esp,0x14
6501caf0:	cmp    BYTE PTR [ebp-0x50],0x0
6501caf4:	je     0x6501cafd
6501caf6:	mov    eax,DWORD PTR [ebp-0x54]
6501caf9:	and    DWORD PTR [eax+0x70],0xfffffffd
6501cafd:	or     eax,0xffffffff
6501cb00:	jmp    0x6501d3ef
6501cb05:	mov    eax,DWORD PTR [ebp-0x30]
6501cb08:	test   BYTE PTR [eax+0xc],0x40
6501cb0c:	jne    0x6501cbb6
6501cb12:	push   eax
6501cb13:	call   0x6501c72d
6501cb18:	cmp    eax,0xffffffff
6501cb1b:	pop    ecx
6501cb1c:	je     0x6501cb54
6501cb1e:	push   DWORD PTR [ebp-0x30]
6501cb21:	call   0x6501c72d
6501cb26:	cmp    eax,0xfffffffe
6501cb29:	pop    ecx
6501cb2a:	je     0x6501cb54
6501cb2c:	push   DWORD PTR [ebp-0x30]
6501cb2f:	call   0x6501c72d
6501cb34:	push   DWORD PTR [ebp-0x30]
6501cb37:	sar    eax,0x5
6501cb3a:	lea    esi,[eax*4+0x65031460]
6501cb41:	call   0x6501c72d
6501cb46:	and    eax,0x1f
6501cb49:	shl    eax,0x6
6501cb4c:	add    eax,DWORD PTR [esi]
6501cb4e:	pop    ecx
6501cb4f:	pop    ecx
6501cb50:	xor    esi,esi
6501cb52:	jmp    0x6501cb59
6501cb54:	mov    eax,0x6502c880
6501cb59:	test   BYTE PTR [eax+0x24],0x7f
6501cb5d:	jne    0x6501cad8
6501cb63:	push   DWORD PTR [ebp-0x30]
6501cb66:	call   0x6501c72d
6501cb6b:	cmp    eax,0xffffffff
6501cb6e:	pop    ecx
6501cb6f:	je     0x6501cba7
6501cb71:	push   DWORD PTR [ebp-0x30]
6501cb74:	call   0x6501c72d
6501cb79:	cmp    eax,0xfffffffe
6501cb7c:	pop    ecx
6501cb7d:	je     0x6501cba7
6501cb7f:	push   DWORD PTR [ebp-0x30]
6501cb82:	call   0x6501c72d
6501cb87:	push   DWORD PTR [ebp-0x30]
6501cb8a:	sar    eax,0x5
6501cb8d:	lea    esi,[eax*4+0x65031460]
6501cb94:	call   0x6501c72d
6501cb99:	and    eax,0x1f
6501cb9c:	shl    eax,0x6
6501cb9f:	add    eax,DWORD PTR [esi]
6501cba1:	pop    ecx
6501cba2:	pop    ecx
6501cba3:	xor    esi,esi
6501cba5:	jmp    0x6501cbac
6501cba7:	mov    eax,0x6502c880
6501cbac:	test   BYTE PTR [eax+0x24],0x80
6501cbb0:	jne    0x6501cad8
6501cbb6:	cmp    ebx,esi
6501cbb8:	je     0x6501cad8
6501cbbe:	mov    dl,BYTE PTR [ebx]
6501cbc0:	test   dl,dl
6501cbc2:	mov    DWORD PTR [ebp-0x34],esi
6501cbc5:	mov    DWORD PTR [ebp-0x28],esi
6501cbc8:	mov    DWORD PTR [ebp-0x48],esi
6501cbcb:	mov    DWORD PTR [ebp-0x60],esi
6501cbce:	mov    BYTE PTR [ebp-0x19],dl
6501cbd1:	je     0x6501d3df
6501cbd7:	inc    ebx
6501cbd8:	xor    eax,eax
6501cbda:	cmp    DWORD PTR [ebp-0x34],eax
6501cbdd:	mov    DWORD PTR [ebp-0x4c],ebx
6501cbe0:	jl     0x6501d3ce
6501cbe6:	mov    cl,dl
6501cbe8:	sub    cl,0x20
6501cbeb:	cmp    cl,0x58
6501cbee:	ja     0x6501cbfd
6501cbf0:	movsx  eax,dl
6501cbf3:	movzx  eax,BYTE PTR [eax+0x65026488]
6501cbfa:	and    eax,0xf
6501cbfd:	mov    ecx,DWORD PTR [ebp-0x48]
6501cc00:	imul   eax,eax,0x9
6501cc03:	movzx  eax,BYTE PTR [eax+ecx*1+0x650264a8]
6501cc0b:	push   0x8
6501cc0d:	shr    eax,0x4
6501cc10:	pop    esi
6501cc11:	cmp    eax,esi
6501cc13:	mov    DWORD PTR [ebp-0x48],eax
6501cc16:	je     0x6501d3b7
6501cc1c:	push   0x7
6501cc1e:	pop    ecx
6501cc1f:	cmp    eax,ecx
6501cc21:	ja     0x6501d3a1
6501cc27:	jmp    DWORD PTR [eax*4+0x6501d408]
6501cc2e:	xor    eax,eax
6501cc30:	or     DWORD PTR [ebp-0x20],0xffffffff
6501cc34:	mov    DWORD PTR [ebp-0x74],eax
6501cc37:	mov    DWORD PTR [ebp-0x68],eax
6501cc3a:	mov    DWORD PTR [ebp-0x40],eax
6501cc3d:	mov    DWORD PTR [ebp-0x3c],eax
6501cc40:	mov    DWORD PTR [ebp-0x18],eax
6501cc43:	mov    DWORD PTR [ebp-0x44],eax
6501cc46:	jmp    0x6501d3a1
6501cc4b:	movsx  eax,dl
6501cc4e:	sub    eax,0x20
6501cc51:	je     0x6501cc8f
6501cc53:	sub    eax,0x3
6501cc56:	je     0x6501cc83
6501cc58:	sub    eax,esi
6501cc5a:	je     0x6501cc7a
6501cc5c:	dec    eax
6501cc5d:	dec    eax
6501cc5e:	je     0x6501cc71
6501cc60:	sub    eax,0x3
6501cc63:	jne    0x6501d3a1
6501cc69:	or     DWORD PTR [ebp-0x18],esi
6501cc6c:	jmp    0x6501d3a1
6501cc71:	or     DWORD PTR [ebp-0x18],0x4
6501cc75:	jmp    0x6501d3a1
6501cc7a:	or     DWORD PTR [ebp-0x18],0x1
6501cc7e:	jmp    0x6501d3a1
6501cc83:	or     DWORD PTR [ebp-0x18],0x80
6501cc8a:	jmp    0x6501d3a1
6501cc8f:	or     DWORD PTR [ebp-0x18],0x2
6501cc93:	jmp    0x6501d3a1
6501cc98:	cmp    dl,0x2a
6501cc9b:	jne    0x6501ccbd
6501cc9d:	add    edi,0x4
6501cca0:	mov    DWORD PTR [ebp-0x2c],edi
6501cca3:	mov    edi,DWORD PTR [edi-0x4]
6501cca6:	test   edi,edi
6501cca8:	mov    DWORD PTR [ebp-0x40],edi
6501ccab:	jge    0x6501d3a1
6501ccb1:	or     DWORD PTR [ebp-0x18],0x4
6501ccb5:	neg    DWORD PTR [ebp-0x40]
6501ccb8:	jmp    0x6501d3a1
6501ccbd:	mov    eax,DWORD PTR [ebp-0x40]
6501ccc0:	imul   eax,eax,0xa
6501ccc3:	movsx  ecx,dl
6501ccc6:	lea    eax,[eax+ecx*1-0x30]
6501ccca:	mov    DWORD PTR [ebp-0x40],eax
6501cccd:	jmp    0x6501d3a1
6501ccd2:	and    DWORD PTR [ebp-0x20],0x0
6501ccd6:	jmp    0x6501d3a1
6501ccdb:	cmp    dl,0x2a
6501ccde:	jne    0x6501ccfd
6501cce0:	add    edi,0x4
6501cce3:	mov    DWORD PTR [ebp-0x2c],edi
6501cce6:	mov    edi,DWORD PTR [edi-0x4]
6501cce9:	test   edi,edi
6501cceb:	mov    DWORD PTR [ebp-0x20],edi
6501ccee:	jge    0x6501d3a1
6501ccf4:	or     DWORD PTR [ebp-0x20],0xffffffff
6501ccf8:	jmp    0x6501d3a1
6501ccfd:	mov    eax,DWORD PTR [ebp-0x20]
6501cd00:	imul   eax,eax,0xa
6501cd03:	movsx  ecx,dl
6501cd06:	lea    eax,[eax+ecx*1-0x30]
6501cd0a:	mov    DWORD PTR [ebp-0x20],eax
6501cd0d:	jmp    0x6501d3a1
6501cd12:	cmp    dl,0x49
6501cd15:	je     0x6501cd5d
6501cd17:	cmp    dl,0x68
6501cd1a:	je     0x6501cd54
6501cd1c:	cmp    dl,0x6c
6501cd1f:	je     0x6501cd36
6501cd21:	cmp    dl,0x77
6501cd24:	jne    0x6501d3a1
6501cd2a:	or     DWORD PTR [ebp-0x18],0x800
6501cd31:	jmp    0x6501d3a1
6501cd36:	cmp    BYTE PTR [ebx],0x6c
6501cd39:	jne    0x6501cd4b
6501cd3b:	inc    ebx
6501cd3c:	or     DWORD PTR [ebp-0x18],0x1000
6501cd43:	mov    DWORD PTR [ebp-0x4c],ebx
6501cd46:	jmp    0x6501d3a1
6501cd4b:	or     DWORD PTR [ebp-0x18],0x10
6501cd4f:	jmp    0x6501d3a1
6501cd54:	or     DWORD PTR [ebp-0x18],0x20
6501cd58:	jmp    0x6501d3a1
6501cd5d:	mov    al,BYTE PTR [ebx]
6501cd5f:	cmp    al,0x36
6501cd61:	jne    0x6501cd7a
6501cd63:	cmp    BYTE PTR [ebx+0x1],0x34
6501cd67:	jne    0x6501cd7a
6501cd69:	inc    ebx
6501cd6a:	inc    ebx
6501cd6b:	or     DWORD PTR [ebp-0x18],0x8000
6501cd72:	mov    DWORD PTR [ebp-0x4c],ebx
6501cd75:	jmp    0x6501d3a1
6501cd7a:	cmp    al,0x33
6501cd7c:	jne    0x6501cd95
6501cd7e:	cmp    BYTE PTR [ebx+0x1],0x32
6501cd82:	jne    0x6501cd95
6501cd84:	inc    ebx
6501cd85:	inc    ebx
6501cd86:	and    DWORD PTR [ebp-0x18],0xffff7fff
6501cd8d:	mov    DWORD PTR [ebp-0x4c],ebx
6501cd90:	jmp    0x6501d3a1
6501cd95:	cmp    al,0x64
6501cd97:	je     0x6501d3a1
6501cd9d:	cmp    al,0x69
6501cd9f:	je     0x6501d3a1
6501cda5:	cmp    al,0x6f
6501cda7:	je     0x6501d3a1
6501cdad:	cmp    al,0x75
6501cdaf:	je     0x6501d3a1
6501cdb5:	cmp    al,0x78
6501cdb7:	je     0x6501d3a1
6501cdbd:	cmp    al,0x58
6501cdbf:	je     0x6501d3a1
6501cdc5:	and    DWORD PTR [ebp-0x48],0x0
6501cdc9:	and    DWORD PTR [ebp-0x44],0x0
6501cdcd:	lea    eax,[ebp-0x5c]
6501cdd0:	push   eax
6501cdd1:	movzx  eax,dl
6501cdd4:	push   eax
6501cdd5:	call   0x65019c5f
6501cdda:	pop    ecx
6501cddb:	test   eax,eax
6501cddd:	mov    al,BYTE PTR [ebp-0x19]
6501cde0:	pop    ecx
6501cde1:	je     0x6501cdfc
6501cde3:	mov    ecx,DWORD PTR [ebp-0x30]
6501cde6:	lea    esi,[ebp-0x34]
6501cde9:	call   0x65018cf5
6501cdee:	mov    al,BYTE PTR [ebx]
6501cdf0:	inc    ebx
6501cdf1:	test   al,al
6501cdf3:	mov    DWORD PTR [ebp-0x4c],ebx
6501cdf6:	je     0x6501d3b7
6501cdfc:	mov    ecx,DWORD PTR [ebp-0x30]
6501cdff:	lea    esi,[ebp-0x34]
6501ce02:	call   0x65018cf5
6501ce07:	jmp    0x6501d3a1
6501ce0c:	movsx  eax,dl
6501ce0f:	cmp    eax,0x64
6501ce12:	jg     0x6501cf8c
6501ce18:	je     0x6501d007
6501ce1e:	cmp    eax,0x53
6501ce21:	jg     0x6501ced3
6501ce27:	je     0x6501ce84
6501ce29:	sub    eax,0x41
6501ce2c:	je     0x6501ce3e
6501ce2e:	dec    eax
6501ce2f:	dec    eax
6501ce30:	je     0x6501ce73
6501ce32:	dec    eax
6501ce33:	dec    eax
6501ce34:	je     0x6501ce3e
6501ce36:	dec    eax
6501ce37:	dec    eax
6501ce38:	jne    0x6501d289
6501ce3e:	add    dl,0x20
6501ce41:	mov    DWORD PTR [ebp-0x74],0x1
6501ce48:	mov    BYTE PTR [ebp-0x19],dl
6501ce4b:	or     DWORD PTR [ebp-0x18],0x40
6501ce4f:	cmp    DWORD PTR [ebp-0x20],0x0
6501ce53:	lea    ebx,[ebp-0x14]
6501ce56:	mov    eax,0x200
6501ce5b:	mov    DWORD PTR [ebp-0x24],ebx
6501ce5e:	mov    DWORD PTR [ebp-0x6c],eax
6501ce61:	jge    0x6501d02b
6501ce67:	mov    DWORD PTR [ebp-0x20],0x6
6501ce6e:	jmp    0x6501d07a
6501ce73:	test   WORD PTR [ebp-0x18],0x830
6501ce79:	jne    0x6501cef0
6501ce7b:	or     DWORD PTR [ebp-0x18],0x800
6501ce82:	jmp    0x6501cef0
6501ce84:	test   WORD PTR [ebp-0x18],0x830
6501ce8a:	jne    0x6501ce93
6501ce8c:	or     DWORD PTR [ebp-0x18],0x800
6501ce93:	mov    ecx,DWORD PTR [ebp-0x20]
6501ce96:	cmp    ecx,0xffffffff
6501ce99:	jne    0x6501cea0
6501ce9b:	mov    ecx,0x7fffffff
6501cea0:	add    edi,0x4
6501cea3:	test   WORD PTR [ebp-0x18],0x810
6501cea9:	mov    DWORD PTR [ebp-0x2c],edi
6501ceac:	mov    edi,DWORD PTR [edi-0x4]
6501ceaf:	mov    DWORD PTR [ebp-0x24],edi
6501ceb2:	je     0x6501d267
6501ceb8:	test   edi,edi
6501ceba:	jne    0x6501cec4
6501cebc:	mov    eax,ds:0x6502c954
6501cec1:	mov    DWORD PTR [ebp-0x24],eax
6501cec4:	mov    eax,DWORD PTR [ebp-0x24]
6501cec7:	mov    DWORD PTR [ebp-0x44],0x1
6501cece:	jmp    0x6501d25c
6501ced3:	sub    eax,0x58
6501ced6:	je     0x6501d110
6501cedc:	dec    eax
6501cedd:	dec    eax
6501cede:	je     0x6501cf3d
6501cee0:	sub    eax,ecx
6501cee2:	je     0x6501ce4b
6501cee8:	dec    eax
6501cee9:	dec    eax
6501ceea:	jne    0x6501d289
6501cef0:	add    edi,0x4
6501cef3:	test   WORD PTR [ebp-0x18],0x810
6501cef9:	mov    DWORD PTR [ebp-0x2c],edi
6501cefc:	je     0x6501cf25
6501cefe:	movzx  eax,WORD PTR [edi-0x4]
6501cf02:	push   eax
6501cf03:	push   0x200
6501cf08:	lea    eax,[ebp-0x14]
6501cf0b:	push   eax
6501cf0c:	lea    eax,[ebp-0x28]
6501cf0f:	push   eax
6501cf10:	call   0x6501d8a1
6501cf15:	add    esp,0x10
6501cf18:	test   eax,eax
6501cf1a:	je     0x6501cf32
6501cf1c:	mov    DWORD PTR [ebp-0x68],0x1
6501cf23:	jmp    0x6501cf32
6501cf25:	mov    al,BYTE PTR [edi-0x4]
6501cf28:	mov    BYTE PTR [ebp-0x14],al
6501cf2b:	mov    DWORD PTR [ebp-0x28],0x1
6501cf32:	lea    eax,[ebp-0x14]
6501cf35:	mov    DWORD PTR [ebp-0x24],eax
6501cf38:	jmp    0x6501d289
6501cf3d:	mov    eax,DWORD PTR [edi]
6501cf3f:	add    edi,0x4
6501cf42:	test   eax,eax
6501cf44:	mov    DWORD PTR [ebp-0x2c],edi
6501cf47:	je     0x6501cf78
6501cf49:	mov    ecx,DWORD PTR [eax+0x4]
6501cf4c:	test   ecx,ecx
6501cf4e:	je     0x6501cf78
6501cf50:	test   WORD PTR [ebp-0x18],0x800
6501cf56:	movsx  eax,WORD PTR [eax]
6501cf59:	mov    DWORD PTR [ebp-0x24],ecx
6501cf5c:	je     0x6501cf6f
6501cf5e:	cdq    
6501cf5f:	sub    eax,edx
6501cf61:	sar    eax,1
6501cf63:	mov    DWORD PTR [ebp-0x44],0x1
6501cf6a:	jmp    0x6501d286
6501cf6f:	and    DWORD PTR [ebp-0x44],0x0
6501cf73:	jmp    0x6501d286
6501cf78:	mov    eax,ds:0x6502c950
6501cf7d:	mov    DWORD PTR [ebp-0x24],eax
6501cf80:	push   eax
6501cf81:	call   0x65014080
6501cf86:	pop    ecx
6501cf87:	jmp    0x6501d286
6501cf8c:	cmp    eax,0x70
6501cf8f:	jg     0x6501d115
6501cf95:	je     0x6501d10d
6501cf9b:	cmp    eax,0x65
6501cf9e:	jl     0x6501d289
6501cfa4:	cmp    eax,0x67
6501cfa7:	jle    0x6501ce4b
6501cfad:	cmp    eax,0x69
6501cfb0:	je     0x6501d007
6501cfb2:	cmp    eax,0x6e
6501cfb5:	je     0x6501cfd2
6501cfb7:	cmp    eax,0x6f
6501cfba:	jne    0x6501d289
6501cfc0:	test   BYTE PTR [ebp-0x18],0x80
6501cfc4:	mov    DWORD PTR [ebp-0x28],esi
6501cfc7:	je     0x6501d012
6501cfc9:	or     DWORD PTR [ebp-0x18],0x200
6501cfd0:	jmp    0x6501d012
6501cfd2:	mov    esi,DWORD PTR [edi]
6501cfd4:	add    edi,0x4
6501cfd7:	mov    DWORD PTR [ebp-0x2c],edi
6501cfda:	call   0x6501c938
6501cfdf:	test   eax,eax
6501cfe1:	je     0x6501d3b7
6501cfe7:	test   BYTE PTR [ebp-0x18],0x20
6501cfeb:	je     0x6501cff6
6501cfed:	mov    ax,WORD PTR [ebp-0x34]
6501cff1:	mov    WORD PTR [esi],ax
6501cff4:	jmp    0x6501cffb
6501cff6:	mov    eax,DWORD PTR [ebp-0x34]
6501cff9:	mov    DWORD PTR [esi],eax
6501cffb:	mov    DWORD PTR [ebp-0x68],0x1
6501d002:	jmp    0x6501d38e
6501d007:	or     DWORD PTR [ebp-0x18],0x40
6501d00b:	mov    DWORD PTR [ebp-0x28],0xa
6501d012:	mov    ecx,DWORD PTR [ebp-0x18]
6501d015:	test   cx,cx
6501d018:	jns    0x6501d15f
6501d01e:	add    edi,esi
6501d020:	mov    eax,DWORD PTR [edi-0x8]
6501d023:	mov    edx,DWORD PTR [edi-0x4]
6501d026:	jmp    0x6501d194
6501d02b:	jne    0x6501d03b
6501d02d:	cmp    dl,0x67
6501d030:	jne    0x6501d07a
6501d032:	mov    DWORD PTR [ebp-0x20],0x1
6501d039:	jmp    0x6501d07a
6501d03b:	cmp    DWORD PTR [ebp-0x20],eax
6501d03e:	jle    0x6501d043
6501d040:	mov    DWORD PTR [ebp-0x20],eax
6501d043:	cmp    DWORD PTR [ebp-0x20],0xa3
6501d04a:	jle    0x6501d07a
6501d04c:	mov    esi,DWORD PTR [ebp-0x20]
6501d04f:	add    esi,0x15d
6501d055:	push   esi
6501d056:	call   0x65015b90
6501d05b:	test   eax,eax
6501d05d:	mov    dl,BYTE PTR [ebp-0x19]
6501d060:	pop    ecx
6501d061:	mov    DWORD PTR [ebp-0x60],eax
6501d064:	push   0x8
6501d066:	je     0x6501d072
6501d068:	mov    DWORD PTR [ebp-0x24],eax
6501d06b:	mov    DWORD PTR [ebp-0x6c],esi
6501d06e:	mov    ebx,eax
6501d070:	jmp    0x6501d079
6501d072:	mov    DWORD PTR [ebp-0x20],0xa3
6501d079:	pop    esi
6501d07a:	add    edi,esi
6501d07c:	mov    eax,DWORD PTR [edi-0x8]
6501d07f:	mov    DWORD PTR [ebp-0x80],eax
6501d082:	mov    eax,DWORD PTR [edi-0x4]
6501d085:	mov    DWORD PTR [ebp-0x7c],eax
6501d088:	lea    eax,[ebp-0x5c]
6501d08b:	push   eax
6501d08c:	push   DWORD PTR [ebp-0x74]
6501d08f:	movsx  eax,dl
6501d092:	push   DWORD PTR [ebp-0x20]
6501d095:	mov    DWORD PTR [ebp-0x2c],edi
6501d098:	push   eax
6501d099:	push   DWORD PTR [ebp-0x6c]
6501d09c:	lea    eax,[ebp-0x80]
6501d09f:	push   ebx
6501d0a0:	push   eax
6501d0a1:	push   DWORD PTR ds:0x6502cb5c
6501d0a7:	call   0x650146af
6501d0ac:	pop    ecx
6501d0ad:	call   eax
6501d0af:	mov    edi,DWORD PTR [ebp-0x18]
6501d0b2:	add    esp,0x1c
6501d0b5:	and    edi,0x80
6501d0bb:	je     0x6501d0d8
6501d0bd:	cmp    DWORD PTR [ebp-0x20],0x0
6501d0c1:	jne    0x6501d0d8
6501d0c3:	lea    eax,[ebp-0x5c]
6501d0c6:	push   eax
6501d0c7:	push   ebx
6501d0c8:	push   DWORD PTR ds:0x6502cb68
6501d0ce:	call   0x650146af
6501d0d3:	pop    ecx
6501d0d4:	call   eax
6501d0d6:	pop    ecx
6501d0d7:	pop    ecx
6501d0d8:	cmp    BYTE PTR [ebp-0x19],0x67
6501d0dc:	jne    0x6501d0f7
6501d0de:	test   edi,edi
6501d0e0:	jne    0x6501d0f7
6501d0e2:	lea    eax,[ebp-0x5c]
6501d0e5:	push   eax
6501d0e6:	push   ebx
6501d0e7:	push   DWORD PTR ds:0x6502cb64
6501d0ed:	call   0x650146af
6501d0f2:	pop    ecx
6501d0f3:	call   eax
6501d0f5:	pop    ecx
6501d0f6:	pop    ecx
6501d0f7:	cmp    BYTE PTR [ebx],0x2d
6501d0fa:	jne    0x6501d107
6501d0fc:	or     DWORD PTR [ebp-0x18],0x100
6501d103:	inc    ebx
6501d104:	mov    DWORD PTR [ebp-0x24],ebx
6501d107:	push   ebx
6501d108:	jmp    0x6501cf81
6501d10d:	mov    DWORD PTR [ebp-0x20],esi
6501d110:	mov    DWORD PTR [ebp-0x64],ecx
6501d113:	jmp    0x6501d136
6501d115:	sub    eax,0x73
6501d118:	je     0x6501ce93
6501d11e:	dec    eax
6501d11f:	dec    eax
6501d120:	je     0x6501d00b
6501d126:	sub    eax,0x3
6501d129:	jne    0x6501d289
6501d12f:	mov    DWORD PTR [ebp-0x64],0x27
6501d136:	test   BYTE PTR [ebp-0x18],0x80
6501d13a:	mov    DWORD PTR [ebp-0x28],0x10
6501d141:	je     0x6501d012
6501d147:	mov    al,BYTE PTR [ebp-0x64]
6501d14a:	add    al,0x51
6501d14c:	mov    BYTE PTR [ebp-0x38],0x30
6501d150:	mov    BYTE PTR [ebp-0x37],al
6501d153:	mov    DWORD PTR [ebp-0x3c],0x2
6501d15a:	jmp    0x6501d012
6501d15f:	test   cx,0x1000
6501d164:	jne    0x6501d01e
6501d16a:	add    edi,0x4
6501d16d:	test   cl,0x20
6501d170:	je     0x6501d187
6501d172:	test   cl,0x40
6501d175:	mov    DWORD PTR [ebp-0x2c],edi
6501d178:	je     0x6501d180
6501d17a:	movsx  eax,WORD PTR [edi-0x4]
6501d17e:	jmp    0x6501d184
6501d180:	movzx  eax,WORD PTR [edi-0x4]
6501d184:	cdq    
6501d185:	jmp    0x6501d197
6501d187:	test   cl,0x40
6501d18a:	mov    eax,DWORD PTR [edi-0x4]
6501d18d:	je     0x6501d192
6501d18f:	cdq    
6501d190:	jmp    0x6501d194
6501d192:	xor    edx,edx
6501d194:	mov    DWORD PTR [ebp-0x2c],edi
6501d197:	test   cl,0x40
6501d19a:	je     0x6501d1b4
6501d19c:	test   edx,edx
6501d19e:	jg     0x6501d1b4
6501d1a0:	jl     0x6501d1a6
6501d1a2:	test   eax,eax
6501d1a4:	jae    0x6501d1b4
6501d1a6:	neg    eax
6501d1a8:	adc    edx,0x0
6501d1ab:	neg    edx
6501d1ad:	or     DWORD PTR [ebp-0x18],0x100
6501d1b4:	test   WORD PTR [ebp-0x18],0x9000
6501d1ba:	mov    ebx,edx
6501d1bc:	mov    edi,eax
6501d1be:	jne    0x6501d1c2
6501d1c0:	xor    ebx,ebx
6501d1c2:	cmp    DWORD PTR [ebp-0x20],0x0
6501d1c6:	jge    0x6501d1d1
6501d1c8:	mov    DWORD PTR [ebp-0x20],0x1
6501d1cf:	jmp    0x6501d1e2
6501d1d1:	and    DWORD PTR [ebp-0x18],0xfffffff7
6501d1d5:	mov    eax,0x200
6501d1da:	cmp    DWORD PTR [ebp-0x20],eax
6501d1dd:	jle    0x6501d1e2
6501d1df:	mov    DWORD PTR [ebp-0x20],eax
6501d1e2:	mov    eax,edi
6501d1e4:	or     eax,ebx
6501d1e6:	jne    0x6501d1eb
6501d1e8:	and    DWORD PTR [ebp-0x3c],eax
6501d1eb:	lea    esi,[ebp+0x1eb]
6501d1f1:	mov    eax,DWORD PTR [ebp-0x20]
6501d1f4:	dec    DWORD PTR [ebp-0x20]
6501d1f7:	test   eax,eax
6501d1f9:	jg     0x6501d201
6501d1fb:	mov    eax,edi
6501d1fd:	or     eax,ebx
6501d1ff:	je     0x6501d225
6501d201:	mov    eax,DWORD PTR [ebp-0x28]
6501d204:	cdq    
6501d205:	push   edx
6501d206:	push   eax
6501d207:	push   ebx
6501d208:	push   edi
6501d209:	call   0x65018c60
6501d20e:	add    ecx,0x30
6501d211:	cmp    ecx,0x39
6501d214:	mov    DWORD PTR [ebp-0x6c],ebx
6501d217:	mov    edi,eax
6501d219:	mov    ebx,edx
6501d21b:	jle    0x6501d220
6501d21d:	add    ecx,DWORD PTR [ebp-0x64]
6501d220:	mov    BYTE PTR [esi],cl
6501d222:	dec    esi
6501d223:	jmp    0x6501d1f1
6501d225:	lea    eax,[ebp+0x1eb]
6501d22b:	sub    eax,esi
6501d22d:	inc    esi
6501d22e:	test   WORD PTR [ebp-0x18],0x200
6501d234:	mov    DWORD PTR [ebp-0x28],eax
6501d237:	mov    DWORD PTR [ebp-0x24],esi
6501d23a:	je     0x6501d289
6501d23c:	test   eax,eax
6501d23e:	je     0x6501d247
6501d240:	mov    ecx,esi
6501d242:	cmp    BYTE PTR [ecx],0x30
6501d245:	je     0x6501d289
6501d247:	dec    DWORD PTR [ebp-0x24]
6501d24a:	mov    ecx,DWORD PTR [ebp-0x24]
6501d24d:	mov    BYTE PTR [ecx],0x30
6501d250:	inc    eax
6501d251:	jmp    0x6501d286
6501d253:	dec    ecx
6501d254:	cmp    WORD PTR [eax],0x0
6501d258:	je     0x6501d260
6501d25a:	inc    eax
6501d25b:	inc    eax
6501d25c:	test   ecx,ecx
6501d25e:	jne    0x6501d253
6501d260:	sub    eax,DWORD PTR [ebp-0x24]
6501d263:	sar    eax,1
6501d265:	jmp    0x6501d286
6501d267:	test   edi,edi
6501d269:	jne    0x6501d273
6501d26b:	mov    eax,ds:0x6502c950
6501d270:	mov    DWORD PTR [ebp-0x24],eax
6501d273:	mov    eax,DWORD PTR [ebp-0x24]
6501d276:	jmp    0x6501d27f
6501d278:	dec    ecx
6501d279:	cmp    BYTE PTR [eax],0x0
6501d27c:	je     0x6501d283
6501d27e:	inc    eax
6501d27f:	test   ecx,ecx
6501d281:	jne    0x6501d278
6501d283:	sub    eax,DWORD PTR [ebp-0x24]
6501d286:	mov    DWORD PTR [ebp-0x28],eax
6501d289:	cmp    DWORD PTR [ebp-0x68],0x0
6501d28d:	jne    0x6501d38e
6501d293:	mov    eax,DWORD PTR [ebp-0x18]
6501d296:	test   al,0x40
6501d298:	je     0x6501d2bf
6501d29a:	test   ax,0x100
6501d29e:	je     0x6501d2a6
6501d2a0:	mov    BYTE PTR [ebp-0x38],0x2d
6501d2a4:	jmp    0x6501d2b8
6501d2a6:	test   al,0x1
6501d2a8:	je     0x6501d2b0
6501d2aa:	mov    BYTE PTR [ebp-0x38],0x2b
6501d2ae:	jmp    0x6501d2b8
6501d2b0:	test   al,0x2
6501d2b2:	je     0x6501d2bf
6501d2b4:	mov    BYTE PTR [ebp-0x38],0x20
6501d2b8:	mov    DWORD PTR [ebp-0x3c],0x1
6501d2bf:	mov    ebx,DWORD PTR [ebp-0x40]
6501d2c2:	sub    ebx,DWORD PTR [ebp-0x28]
6501d2c5:	sub    ebx,DWORD PTR [ebp-0x3c]
6501d2c8:	test   BYTE PTR [ebp-0x18],0xc
6501d2cc:	jne    0x6501d2df
6501d2ce:	push   DWORD PTR [ebp-0x30]
6501d2d1:	lea    eax,[ebp-0x34]
6501d2d4:	push   ebx
6501d2d5:	push   0x20
6501d2d7:	call   0x65018d28
6501d2dc:	add    esp,0xc
6501d2df:	push   DWORD PTR [ebp-0x3c]
6501d2e2:	mov    edi,DWORD PTR [ebp-0x30]
6501d2e5:	lea    eax,[ebp-0x34]
6501d2e8:	lea    ecx,[ebp-0x38]
6501d2eb:	call   0x65018d4c
6501d2f0:	test   BYTE PTR [ebp-0x18],0x8
6501d2f4:	pop    ecx
6501d2f5:	je     0x6501d30c
6501d2f7:	test   BYTE PTR [ebp-0x18],0x4
6501d2fb:	jne    0x6501d30c
6501d2fd:	push   edi
6501d2fe:	push   ebx
6501d2ff:	push   0x30
6501d301:	lea    eax,[ebp-0x34]
6501d304:	call   0x65018d28
6501d309:	add    esp,0xc
6501d30c:	cmp    DWORD PTR [ebp-0x44],0x0
6501d310:	mov    eax,DWORD PTR [ebp-0x28]
6501d313:	je     0x6501d366
6501d315:	test   eax,eax
6501d317:	jle    0x6501d366
6501d319:	mov    esi,DWORD PTR [ebp-0x24]
6501d31c:	mov    DWORD PTR [ebp-0x6c],eax
6501d31f:	movzx  eax,WORD PTR [esi]
6501d322:	dec    DWORD PTR [ebp-0x6c]
6501d325:	push   eax
6501d326:	push   0x6
6501d328:	lea    eax,[ebp+0x1ec]
6501d32e:	push   eax
6501d32f:	lea    eax,[ebp-0x78]
6501d332:	inc    esi
6501d333:	push   eax
6501d334:	inc    esi
6501d335:	call   0x6501d8a1
6501d33a:	add    esp,0x10
6501d33d:	test   eax,eax
6501d33f:	jne    0x6501d360
6501d341:	cmp    DWORD PTR [ebp-0x78],eax
6501d344:	je     0x6501d360
6501d346:	push   DWORD PTR [ebp-0x78]
6501d349:	lea    eax,[ebp-0x34]
6501d34c:	lea    ecx,[ebp+0x1ec]
6501d352:	call   0x65018d4c
6501d357:	cmp    DWORD PTR [ebp-0x6c],0x0
6501d35b:	pop    ecx
6501d35c:	jne    0x6501d31f
6501d35e:	jmp    0x6501d373
6501d360:	or     DWORD PTR [ebp-0x34],0xffffffff
6501d364:	jmp    0x6501d373
6501d366:	mov    ecx,DWORD PTR [ebp-0x24]
6501d369:	push   eax
6501d36a:	lea    eax,[ebp-0x34]
6501d36d:	call   0x65018d4c
6501d372:	pop    ecx
6501d373:	cmp    DWORD PTR [ebp-0x34],0x0
6501d377:	jl     0x6501d38e
6501d379:	test   BYTE PTR [ebp-0x18],0x4
6501d37d:	je     0x6501d38e
6501d37f:	push   edi
6501d380:	push   ebx
6501d381:	push   0x20
6501d383:	lea    eax,[ebp-0x34]
6501d386:	call   0x65018d28
6501d38b:	add    esp,0xc
6501d38e:	cmp    DWORD PTR [ebp-0x60],0x0
6501d392:	je     0x6501d3a1
6501d394:	push   DWORD PTR [ebp-0x60]
6501d397:	call   0x65013746
6501d39c:	and    DWORD PTR [ebp-0x60],0x0
6501d3a0:	pop    ecx
6501d3a1:	mov    ebx,DWORD PTR [ebp-0x4c]
6501d3a4:	mov    al,BYTE PTR [ebx]
6501d3a6:	test   al,al
6501d3a8:	mov    BYTE PTR [ebp-0x19],al
6501d3ab:	je     0x6501d3ce
6501d3ad:	mov    edi,DWORD PTR [ebp-0x2c]
6501d3b0:	mov    dl,al
6501d3b2:	jmp    0x6501cbd7
6501d3b7:	call   0x65014580
6501d3bc:	mov    DWORD PTR [eax],0x16
6501d3c2:	xor    eax,eax
6501d3c4:	push   eax
6501d3c5:	push   eax
6501d3c6:	push   eax
6501d3c7:	push   eax
6501d3c8:	push   eax
6501d3c9:	jmp    0x6501cae8
6501d3ce:	xor    esi,esi
6501d3d0:	cmp    DWORD PTR [ebp-0x48],esi
6501d3d3:	je     0x6501d3df
6501d3d5:	cmp    DWORD PTR [ebp-0x48],0x7
6501d3d9:	jne    0x6501cad8
6501d3df:	cmp    BYTE PTR [ebp-0x50],0x0
6501d3e3:	je     0x6501d3ec
6501d3e5:	mov    eax,DWORD PTR [ebp-0x54]
6501d3e8:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d3ec:	mov    eax,DWORD PTR [ebp-0x34]
6501d3ef:	mov    ecx,DWORD PTR [ebp+0x1f4]
6501d3f5:	pop    edi
6501d3f6:	pop    esi
6501d3f7:	xor    ecx,ebp
6501d3f9:	pop    ebx
6501d3fa:	call   0x6501292c
6501d3ff:	add    ebp,0x1f8
6501d405:	leave  
6501d406:	ret    
6501d407:	nop
6501d408:	leave  
6501d409:	int    0x1
6501d40b:	gs cs int3 
6501d40e:	add    DWORD PTR [ebp+0x4b],esp
6501d411:	int3   
6501d412:	add    DWORD PTR [ebp-0x68],esp
6501d415:	int3   
6501d416:	add    DWORD PTR [ebp-0x2e],esp
6501d419:	int3   
6501d41a:	add    DWORD PTR [ebp-0x25],esp
6501d41d:	int3   
6501d41e:	add    DWORD PTR [ebp+0x12],esp
6501d421:	int    0x1
6501d423:	gs or  al,0xce
6501d426:	add    DWORD PTR [ebp+0x55],esp
6501d429:	mov    ebp,esp
6501d42b:	sub    esp,0xc
6501d42e:	mov    eax,ds:0x6502c09c
6501d433:	xor    eax,ebp
6501d435:	mov    DWORD PTR [ebp-0x4],eax
6501d438:	push   0x6
6501d43a:	lea    eax,[ebp-0xc]
6501d43d:	push   eax
6501d43e:	push   0x1004
6501d443:	push   DWORD PTR [ebp+0x8]
6501d446:	mov    BYTE PTR [ebp-0x6],0x0
6501d44a:	call   DWORD PTR ds:0x650240d8
6501d450:	test   eax,eax
6501d452:	jne    0x6501d459
6501d454:	or     eax,0xffffffff
6501d457:	jmp    0x6501d463
6501d459:	lea    eax,[ebp-0xc]
6501d45c:	push   eax
6501d45d:	call   0x6501daf4
6501d462:	pop    ecx
6501d463:	mov    ecx,DWORD PTR [ebp-0x4]
6501d466:	xor    ecx,ebp
6501d468:	call   0x6501292c
6501d46d:	leave  
6501d46e:	ret    
6501d46f:	push   ebp
6501d470:	mov    ebp,esp
6501d472:	sub    esp,0x34
6501d475:	mov    eax,ds:0x6502c09c
6501d47a:	xor    eax,ebp
6501d47c:	mov    DWORD PTR [ebp-0x4],eax
6501d47f:	mov    eax,DWORD PTR [ebp+0x10]
6501d482:	mov    ecx,DWORD PTR [ebp+0x18]
6501d485:	mov    DWORD PTR [ebp-0x28],eax
6501d488:	mov    eax,DWORD PTR [ebp+0x14]
6501d48b:	push   ebx
6501d48c:	mov    DWORD PTR [ebp-0x30],eax
6501d48f:	mov    eax,DWORD PTR [eax]
6501d491:	push   esi
6501d492:	mov    DWORD PTR [ebp-0x24],eax
6501d495:	mov    eax,DWORD PTR [ebp+0x8]
6501d498:	push   edi
6501d499:	xor    edi,edi
6501d49b:	cmp    eax,DWORD PTR [ebp+0xc]
6501d49e:	mov    DWORD PTR [ebp-0x34],ecx
6501d4a1:	mov    DWORD PTR [ebp-0x20],edi
6501d4a4:	mov    DWORD PTR [ebp-0x2c],edi
6501d4a7:	je     0x6501d60c
6501d4ad:	mov    esi,DWORD PTR ds:0x65024134
6501d4b3:	lea    ecx,[ebp-0x18]
6501d4b6:	push   ecx
6501d4b7:	push   eax
6501d4b8:	call   esi
6501d4ba:	test   eax,eax
6501d4bc:	mov    ebx,DWORD PTR ds:0x6502401c
6501d4c2:	je     0x6501d522
6501d4c4:	cmp    DWORD PTR [ebp-0x18],0x1
6501d4c8:	jne    0x6501d522
6501d4ca:	lea    eax,[ebp-0x18]
6501d4cd:	push   eax
6501d4ce:	push   DWORD PTR [ebp+0xc]
6501d4d1:	call   esi
6501d4d3:	test   eax,eax
6501d4d5:	je     0x6501d522
6501d4d7:	cmp    DWORD PTR [ebp-0x18],0x1
6501d4db:	jne    0x6501d522
6501d4dd:	mov    esi,DWORD PTR [ebp-0x24]
6501d4e0:	cmp    esi,0xffffffff
6501d4e3:	mov    DWORD PTR [ebp-0x2c],0x1
6501d4ea:	jne    0x6501d4f8
6501d4ec:	push   DWORD PTR [ebp-0x28]
6501d4ef:	call   0x65014080
6501d4f4:	mov    esi,eax
6501d4f6:	pop    ecx
6501d4f7:	inc    esi
6501d4f8:	cmp    esi,edi
6501d4fa:	jle    0x6501d557
6501d4fc:	cmp    esi,0x7ffffff0
6501d502:	ja     0x6501d557
6501d504:	lea    eax,[esi+esi*1+0x8]
6501d508:	cmp    eax,0x400
6501d50d:	ja     0x6501d53e
6501d50f:	call   0x65013030
6501d514:	mov    eax,esp
6501d516:	cmp    eax,edi
6501d518:	je     0x6501d552
6501d51a:	mov    DWORD PTR [eax],0xcccc
6501d520:	jmp    0x6501d54f
6501d522:	push   edi
6501d523:	push   edi
6501d524:	push   DWORD PTR [ebp-0x24]
6501d527:	push   DWORD PTR [ebp-0x28]
6501d52a:	push   0x1
6501d52c:	push   DWORD PTR [ebp+0x8]
6501d52f:	call   ebx
6501d531:	mov    esi,eax
6501d533:	cmp    esi,edi
6501d535:	jne    0x6501d4fa
6501d537:	xor    eax,eax
6501d539:	jmp    0x6501d60f
6501d53e:	push   eax
6501d53f:	call   0x65013823
6501d544:	cmp    eax,edi
6501d546:	pop    ecx
6501d547:	je     0x6501d552
6501d549:	mov    DWORD PTR [eax],0xdddd
6501d54f:	add    eax,0x8
6501d552:	mov    DWORD PTR [ebp-0x1c],eax
6501d555:	jmp    0x6501d55a
6501d557:	mov    DWORD PTR [ebp-0x1c],edi
6501d55a:	cmp    DWORD PTR [ebp-0x1c],edi
6501d55d:	je     0x6501d537
6501d55f:	lea    eax,[esi+esi*1]
6501d562:	push   eax
6501d563:	push   edi
6501d564:	push   DWORD PTR [ebp-0x1c]
6501d567:	call   0x65012fb0
6501d56c:	add    esp,0xc
6501d56f:	push   esi
6501d570:	push   DWORD PTR [ebp-0x1c]
6501d573:	push   DWORD PTR [ebp-0x24]
6501d576:	push   DWORD PTR [ebp-0x28]
6501d579:	push   0x1
6501d57b:	push   DWORD PTR [ebp+0x8]
6501d57e:	call   ebx
6501d580:	test   eax,eax
6501d582:	je     0x6501d603
6501d584:	mov    ebx,DWORD PTR [ebp-0x34]
6501d587:	cmp    ebx,edi
6501d589:	je     0x6501d5a8
6501d58b:	push   edi
6501d58c:	push   edi
6501d58d:	push   DWORD PTR [ebp+0x1c]
6501d590:	push   ebx
6501d591:	push   esi
6501d592:	push   DWORD PTR [ebp-0x1c]
6501d595:	push   edi
6501d596:	push   DWORD PTR [ebp+0xc]
6501d599:	call   DWORD PTR ds:0x65024020
6501d59f:	test   eax,eax
6501d5a1:	je     0x6501d603
6501d5a3:	mov    DWORD PTR [ebp-0x20],ebx
6501d5a6:	jmp    0x6501d603
6501d5a8:	cmp    DWORD PTR [ebp-0x2c],edi
6501d5ab:	mov    ebx,DWORD PTR ds:0x65024020
6501d5b1:	jne    0x6501d5c7
6501d5b3:	push   edi
6501d5b4:	push   edi
6501d5b5:	push   edi
6501d5b6:	push   edi
6501d5b7:	push   esi
6501d5b8:	push   DWORD PTR [ebp-0x1c]
6501d5bb:	push   edi
6501d5bc:	push   DWORD PTR [ebp+0xc]
6501d5bf:	call   ebx
6501d5c1:	mov    esi,eax
6501d5c3:	cmp    esi,edi
6501d5c5:	je     0x6501d603
6501d5c7:	push   esi
6501d5c8:	push   0x1
6501d5ca:	call   0x65015bd0
6501d5cf:	cmp    eax,edi
6501d5d1:	pop    ecx
6501d5d2:	pop    ecx
6501d5d3:	mov    DWORD PTR [ebp-0x20],eax
6501d5d6:	je     0x6501d603
6501d5d8:	push   edi
6501d5d9:	push   edi
6501d5da:	push   esi
6501d5db:	push   eax
6501d5dc:	push   esi
6501d5dd:	push   DWORD PTR [ebp-0x1c]
6501d5e0:	push   edi
6501d5e1:	push   DWORD PTR [ebp+0xc]
6501d5e4:	call   ebx
6501d5e6:	cmp    eax,edi
6501d5e8:	jne    0x6501d5f8
6501d5ea:	push   DWORD PTR [ebp-0x20]
6501d5ed:	call   0x65013746
6501d5f2:	pop    ecx
6501d5f3:	mov    DWORD PTR [ebp-0x20],edi
6501d5f6:	jmp    0x6501d603
6501d5f8:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6501d5fc:	je     0x6501d603
6501d5fe:	mov    ecx,DWORD PTR [ebp-0x30]
6501d601:	mov    DWORD PTR [ecx],eax
6501d603:	push   DWORD PTR [ebp-0x1c]
6501d606:	call   0x65012dc2
6501d60b:	pop    ecx
6501d60c:	mov    eax,DWORD PTR [ebp-0x20]
6501d60f:	lea    esp,[ebp-0x40]
6501d612:	pop    edi
6501d613:	pop    esi
6501d614:	pop    ebx
6501d615:	mov    ecx,DWORD PTR [ebp-0x4]
6501d618:	xor    ecx,ebp
6501d61a:	call   0x6501292c
6501d61f:	leave  
6501d620:	ret    
6501d621:	push   0xc
6501d623:	push   0x65029e30
6501d628:	call   0x65013e70
6501d62d:	and    DWORD PTR [ebp-0x4],0x0
6501d631:	movapd xmm0,xmm1
6501d635:	mov    DWORD PTR [ebp-0x1c],0x1
6501d63c:	jmp    0x6501d661
6501d63e:	mov    eax,DWORD PTR [ebp-0x14]
6501d641:	mov    eax,DWORD PTR [eax]
6501d643:	mov    eax,DWORD PTR [eax]
6501d645:	cmp    eax,0xc0000005
6501d64a:	je     0x6501d656
6501d64c:	cmp    eax,0xc000001d
6501d651:	je     0x6501d656
6501d653:	xor    eax,eax
6501d655:	ret    
6501d656:	xor    eax,eax
6501d658:	inc    eax
6501d659:	ret    
6501d65a:	mov    esp,DWORD PTR [ebp-0x18]
6501d65d:	and    DWORD PTR [ebp-0x1c],0x0
6501d661:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501d668:	mov    eax,DWORD PTR [ebp-0x1c]
6501d66b:	call   0x65013eb5
6501d670:	ret    
6501d671:	push   ebp
6501d672:	mov    ebp,esp
6501d674:	sub    esp,0x18
6501d677:	xor    eax,eax
6501d679:	push   ebx
6501d67a:	mov    DWORD PTR [ebp-0x4],eax
6501d67d:	mov    DWORD PTR [ebp-0xc],eax
6501d680:	mov    DWORD PTR [ebp-0x8],eax
6501d683:	push   ebx
6501d684:	pushf  
6501d685:	pop    eax
6501d686:	mov    ecx,eax
6501d688:	xor    eax,0x200000
6501d68d:	push   eax
6501d68e:	popf   
6501d68f:	pushf  
6501d690:	pop    edx
6501d691:	sub    edx,ecx
6501d693:	je     0x6501d6b4
6501d695:	push   ecx
6501d696:	popf   
6501d697:	xor    eax,eax
6501d699:	cpuid  
6501d69b:	mov    DWORD PTR [ebp-0xc],eax
6501d69e:	mov    DWORD PTR [ebp-0x18],ebx
6501d6a1:	mov    DWORD PTR [ebp-0x14],edx
6501d6a4:	mov    DWORD PTR [ebp-0x10],ecx
6501d6a7:	mov    eax,0x1
6501d6ac:	cpuid  
6501d6ae:	mov    DWORD PTR [ebp-0x4],edx
6501d6b1:	mov    DWORD PTR [ebp-0x8],eax
6501d6b4:	pop    ebx
6501d6b5:	test   DWORD PTR [ebp-0x4],0x4000000
6501d6bc:	je     0x6501d6cc
6501d6be:	call   0x6501d621
6501d6c3:	test   eax,eax
6501d6c5:	je     0x6501d6cc
6501d6c7:	xor    eax,eax
6501d6c9:	inc    eax
6501d6ca:	jmp    0x6501d6ce
6501d6cc:	xor    eax,eax
6501d6ce:	pop    ebx
6501d6cf:	leave  
6501d6d0:	ret    
6501d6d1:	call   0x6501d671
6501d6d6:	mov    ds:0x65031564,eax
6501d6db:	xor    eax,eax
6501d6dd:	ret    
6501d6de:	push   ebp
6501d6df:	mov    ebp,esp
6501d6e1:	sub    esp,0x10
6501d6e4:	push   DWORD PTR [ebp+0x8]
6501d6e7:	lea    ecx,[ebp-0x10]
6501d6ea:	call   0x65012acf
6501d6ef:	movzx  eax,BYTE PTR [ebp+0xc]
6501d6f3:	mov    ecx,DWORD PTR [ebp-0xc]
6501d6f6:	mov    dl,BYTE PTR [ebp+0x14]
6501d6f9:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6501d6fd:	jne    0x6501d71d
6501d6ff:	cmp    DWORD PTR [ebp+0x10],0x0
6501d703:	je     0x6501d717
6501d705:	mov    ecx,DWORD PTR [ebp-0x10]
6501d708:	mov    ecx,DWORD PTR [ecx+0xc8]
6501d70e:	movzx  eax,WORD PTR [ecx+eax*2]
6501d712:	and    eax,DWORD PTR [ebp+0x10]
6501d715:	jmp    0x6501d719
6501d717:	xor    eax,eax
6501d719:	test   eax,eax
6501d71b:	je     0x6501d720
6501d71d:	xor    eax,eax
6501d71f:	inc    eax
6501d720:	cmp    BYTE PTR [ebp-0x4],0x0
6501d724:	je     0x6501d72d
6501d726:	mov    ecx,DWORD PTR [ebp-0x8]
6501d729:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501d72d:	leave  
6501d72e:	ret    
6501d72f:	push   0x4
6501d731:	push   0x0
6501d733:	push   DWORD PTR [esp+0xc]
6501d737:	push   0x0
6501d739:	call   0x6501d6de
6501d73e:	add    esp,0x10
6501d741:	ret    
6501d742:	push   ebp
6501d743:	mov    ebp,esp
6501d745:	sub    esp,0x10
6501d748:	push   ebx
6501d749:	push   esi
6501d74a:	mov    esi,DWORD PTR [ebp+0xc]
6501d74d:	xor    ebx,ebx
6501d74f:	cmp    esi,ebx
6501d751:	push   edi
6501d752:	mov    edi,DWORD PTR [ebp+0x10]
6501d755:	jne    0x6501d768
6501d757:	cmp    edi,ebx
6501d759:	jbe    0x6501d768
6501d75b:	mov    eax,DWORD PTR [ebp+0x8]
6501d75e:	cmp    eax,ebx
6501d760:	je     0x6501d764
6501d762:	mov    DWORD PTR [eax],ebx
6501d764:	xor    eax,eax
6501d766:	jmp    0x6501d7e7
6501d768:	mov    eax,DWORD PTR [ebp+0x8]
6501d76b:	cmp    eax,ebx
6501d76d:	je     0x6501d772
6501d76f:	or     DWORD PTR [eax],0xffffffff
6501d772:	cmp    edi,0x7fffffff
6501d778:	jbe    0x6501d795
6501d77a:	call   0x65014580
6501d77f:	push   0x16
6501d781:	pop    esi
6501d782:	push   ebx
6501d783:	push   ebx
6501d784:	push   ebx
6501d785:	push   ebx
6501d786:	push   ebx
6501d787:	mov    DWORD PTR [eax],esi
6501d789:	call   0x6501241f
6501d78e:	add    esp,0x14
6501d791:	mov    eax,esi
6501d793:	jmp    0x6501d7e7
6501d795:	push   DWORD PTR [ebp+0x18]
6501d798:	lea    ecx,[ebp-0x10]
6501d79b:	call   0x65012acf
6501d7a0:	mov    eax,DWORD PTR [ebp-0x10]
6501d7a3:	cmp    DWORD PTR [eax+0x14],ebx
6501d7a6:	jne    0x6501d840
6501d7ac:	mov    ax,WORD PTR [ebp+0x14]
6501d7b0:	cmp    ax,0xff
6501d7b4:	jbe    0x6501d7ec
6501d7b6:	cmp    esi,ebx
6501d7b8:	je     0x6501d7c9
6501d7ba:	cmp    edi,ebx
6501d7bc:	jbe    0x6501d7c9
6501d7be:	push   edi
6501d7bf:	push   ebx
6501d7c0:	push   esi
6501d7c1:	call   0x65012fb0
6501d7c6:	add    esp,0xc
6501d7c9:	call   0x65014580
6501d7ce:	mov    DWORD PTR [eax],0x2a
6501d7d4:	call   0x65014580
6501d7d9:	cmp    BYTE PTR [ebp-0x4],bl
6501d7dc:	mov    eax,DWORD PTR [eax]
6501d7de:	je     0x6501d7e7
6501d7e0:	mov    ecx,DWORD PTR [ebp-0x8]
6501d7e3:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501d7e7:	pop    edi
6501d7e8:	pop    esi
6501d7e9:	pop    ebx
6501d7ea:	leave  
6501d7eb:	ret    
6501d7ec:	cmp    esi,ebx
6501d7ee:	je     0x6501d81e
6501d7f0:	cmp    edi,ebx
6501d7f2:	ja     0x6501d81c
6501d7f4:	call   0x65014580
6501d7f9:	push   0x22
6501d7fb:	pop    esi
6501d7fc:	push   ebx
6501d7fd:	push   ebx
6501d7fe:	push   ebx
6501d7ff:	push   ebx
6501d800:	push   ebx
6501d801:	mov    DWORD PTR [eax],esi
6501d803:	call   0x6501241f
6501d808:	add    esp,0x14
6501d80b:	cmp    BYTE PTR [ebp-0x4],bl
6501d80e:	je     0x6501d791
6501d810:	mov    eax,DWORD PTR [ebp-0x8]
6501d813:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d817:	jmp    0x6501d791
6501d81c:	mov    BYTE PTR [esi],al
6501d81e:	mov    eax,DWORD PTR [ebp+0x8]
6501d821:	cmp    eax,ebx
6501d823:	je     0x6501d82b
6501d825:	mov    DWORD PTR [eax],0x1
6501d82b:	cmp    BYTE PTR [ebp-0x4],bl
6501d82e:	je     0x6501d764
6501d834:	mov    eax,DWORD PTR [ebp-0x8]
6501d837:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d83b:	jmp    0x6501d764
6501d840:	lea    ecx,[ebp+0xc]
6501d843:	push   ecx
6501d844:	push   ebx
6501d845:	push   edi
6501d846:	push   esi
6501d847:	push   0x1
6501d849:	lea    ecx,[ebp+0x14]
6501d84c:	push   ecx
6501d84d:	push   ebx
6501d84e:	mov    DWORD PTR [ebp+0xc],ebx
6501d851:	push   DWORD PTR [eax+0x4]
6501d854:	call   DWORD PTR ds:0x65024020
6501d85a:	cmp    eax,ebx
6501d85c:	je     0x6501d872
6501d85e:	cmp    DWORD PTR [ebp+0xc],ebx
6501d861:	jne    0x6501d7c9
6501d867:	mov    ecx,DWORD PTR [ebp+0x8]
6501d86a:	cmp    ecx,ebx
6501d86c:	je     0x6501d82b
6501d86e:	mov    DWORD PTR [ecx],eax
6501d870:	jmp    0x6501d82b
6501d872:	call   DWORD PTR ds:0x6502403c
6501d878:	cmp    eax,0x7a
6501d87b:	jne    0x6501d7c9
6501d881:	cmp    esi,ebx
6501d883:	je     0x6501d7f4
6501d889:	cmp    edi,ebx
6501d88b:	jbe    0x6501d7f4
6501d891:	push   edi
6501d892:	push   ebx
6501d893:	push   esi
6501d894:	call   0x65012fb0
6501d899:	add    esp,0xc
6501d89c:	jmp    0x6501d7f4
6501d8a1:	push   0x0
6501d8a3:	push   DWORD PTR [esp+0x14]
6501d8a7:	push   DWORD PTR [esp+0x14]
6501d8ab:	push   DWORD PTR [esp+0x14]
6501d8af:	push   DWORD PTR [esp+0x14]
6501d8b3:	call   0x6501d742
6501d8b8:	add    esp,0x14
6501d8bb:	ret    
6501d8bc:	push   ebp
6501d8bd:	mov    ebp,esp
6501d8bf:	sub    esp,0x20
6501d8c2:	push   ebx
6501d8c3:	push   esi
6501d8c4:	push   edi
6501d8c5:	call   0x650146a6
6501d8ca:	xor    ebx,ebx
6501d8cc:	cmp    DWORD PTR ds:0x6502df7c,ebx
6501d8d2:	mov    DWORD PTR [ebp-0x8],eax
6501d8d5:	mov    DWORD PTR [ebp-0x4],ebx
6501d8d8:	mov    DWORD PTR [ebp-0xc],ebx
6501d8db:	mov    DWORD PTR [ebp-0x10],ebx
6501d8de:	jne    0x6501d992
6501d8e4:	push   0x65026568
6501d8e9:	call   DWORD PTR ds:0x65024180
6501d8ef:	mov    edi,eax
6501d8f1:	cmp    edi,ebx
6501d8f3:	je     0x6501da72
6501d8f9:	mov    esi,DWORD PTR ds:0x6502408c
6501d8ff:	push   0x6502655c
6501d904:	push   edi
6501d905:	call   esi
6501d907:	cmp    eax,ebx
6501d909:	je     0x6501da72
6501d90f:	push   eax
6501d910:	call   0x65014638
6501d915:	mov    DWORD PTR [esp],0x6502654c
6501d91c:	push   edi
6501d91d:	mov    ds:0x6502df7c,eax
6501d922:	call   esi
6501d924:	push   eax
6501d925:	call   0x65014638
6501d92a:	mov    DWORD PTR [esp],0x65026538
6501d931:	push   edi
6501d932:	mov    ds:0x6502df80,eax
6501d937:	call   esi
6501d939:	push   eax
6501d93a:	call   0x65014638
6501d93f:	mov    ds:0x6502df84,eax
6501d944:	lea    eax,[ebp-0xc]
6501d947:	push   eax
6501d948:	call   0x65015daf
6501d94d:	test   eax,eax
6501d94f:	pop    ecx
6501d950:	pop    ecx
6501d951:	je     0x6501d960
6501d953:	push   ebx
6501d954:	push   ebx
6501d955:	push   ebx
6501d956:	push   ebx
6501d957:	push   ebx
6501d958:	call   0x65012323
6501d95d:	add    esp,0x14
6501d960:	cmp    DWORD PTR [ebp-0xc],0x2
6501d964:	jne    0x6501d992
6501d966:	push   0x6502651c
6501d96b:	push   edi
6501d96c:	call   esi
6501d96e:	push   eax
6501d96f:	call   0x65014638
6501d974:	cmp    eax,ebx
6501d976:	pop    ecx
6501d977:	mov    ds:0x6502df8c,eax
6501d97c:	je     0x6501d992
6501d97e:	push   0x65026504
6501d983:	push   edi
6501d984:	call   esi
6501d986:	push   eax
6501d987:	call   0x65014638
6501d98c:	pop    ecx
6501d98d:	mov    ds:0x6502df88,eax
6501d992:	mov    eax,ds:0x6502df88
6501d997:	mov    ecx,DWORD PTR [ebp-0x8]
6501d99a:	cmp    eax,ecx
6501d99c:	je     0x6501da17
6501d99e:	cmp    DWORD PTR ds:0x6502df8c,ecx
6501d9a4:	je     0x6501da17
6501d9a6:	push   eax
6501d9a7:	call   0x650146af
6501d9ac:	push   DWORD PTR ds:0x6502df8c
6501d9b2:	mov    esi,eax
6501d9b4:	call   0x650146af
6501d9b9:	cmp    esi,ebx
6501d9bb:	pop    ecx
6501d9bc:	pop    ecx
6501d9bd:	mov    edi,eax
6501d9bf:	je     0x6501da17
6501d9c1:	cmp    edi,ebx
6501d9c3:	je     0x6501da17
6501d9c5:	call   esi
6501d9c7:	cmp    eax,ebx
6501d9c9:	je     0x6501d9e4
6501d9cb:	lea    ecx,[ebp-0x14]
6501d9ce:	push   ecx
6501d9cf:	push   0xc
6501d9d1:	lea    ecx,[ebp-0x20]
6501d9d4:	push   ecx
6501d9d5:	push   0x1
6501d9d7:	push   eax
6501d9d8:	call   edi
6501d9da:	test   eax,eax
6501d9dc:	je     0x6501d9e4
6501d9de:	test   BYTE PTR [ebp-0x18],0x1
6501d9e2:	jne    0x6501da17
6501d9e4:	lea    eax,[ebp-0x10]
6501d9e7:	push   eax
6501d9e8:	call   0x65015de6
6501d9ed:	test   eax,eax
6501d9ef:	pop    ecx
6501d9f0:	je     0x6501d9ff
6501d9f2:	push   ebx
6501d9f3:	push   ebx
6501d9f4:	push   ebx
6501d9f5:	push   ebx
6501d9f6:	push   ebx
6501d9f7:	call   0x65012323
6501d9fc:	add    esp,0x14
6501d9ff:	cmp    DWORD PTR [ebp-0x10],0x4
6501da03:	jb     0x6501da0e
6501da05:	or     DWORD PTR [ebp+0x10],0x200000
6501da0c:	jmp    0x6501da52
6501da0e:	or     DWORD PTR [ebp+0x10],0x40000
6501da15:	jmp    0x6501da52
6501da17:	mov    eax,ds:0x6502df80
6501da1c:	cmp    eax,DWORD PTR [ebp-0x8]
6501da1f:	je     0x6501da52
6501da21:	push   eax
6501da22:	call   0x650146af
6501da27:	cmp    eax,ebx
6501da29:	pop    ecx
6501da2a:	je     0x6501da52
6501da2c:	call   eax
6501da2e:	cmp    eax,ebx
6501da30:	mov    DWORD PTR [ebp-0x4],eax
6501da33:	je     0x6501da52
6501da35:	mov    eax,ds:0x6502df84
6501da3a:	cmp    eax,DWORD PTR [ebp-0x8]
6501da3d:	je     0x6501da52
6501da3f:	push   eax
6501da40:	call   0x650146af
6501da45:	cmp    eax,ebx
6501da47:	pop    ecx
6501da48:	je     0x6501da52
6501da4a:	push   DWORD PTR [ebp-0x4]
6501da4d:	call   eax
6501da4f:	mov    DWORD PTR [ebp-0x4],eax
6501da52:	push   DWORD PTR ds:0x6502df7c
6501da58:	call   0x650146af
6501da5d:	cmp    eax,ebx
6501da5f:	pop    ecx
6501da60:	je     0x6501da72
6501da62:	push   DWORD PTR [ebp+0x10]
6501da65:	push   DWORD PTR [ebp+0xc]
6501da68:	push   DWORD PTR [ebp+0x8]
6501da6b:	push   DWORD PTR [ebp-0x4]
6501da6e:	call   eax
6501da70:	jmp    0x6501da74
6501da72:	xor    eax,eax
6501da74:	pop    edi
6501da75:	pop    esi
6501da76:	pop    ebx
6501da77:	leave  
6501da78:	ret    
6501da79:	mov    ecx,DWORD PTR [esp+0x4]
6501da7d:	push   esi
6501da7e:	xor    esi,esi
6501da80:	cmp    ecx,esi
6501da82:	jl     0x6501daa2
6501da84:	cmp    ecx,0x2
6501da87:	jle    0x6501da95
6501da89:	cmp    ecx,0x3
6501da8c:	jne    0x6501daa2
6501da8e:	mov    eax,ds:0x6502d59c
6501da93:	pop    esi
6501da94:	ret    
6501da95:	mov    eax,ds:0x6502d59c
6501da9a:	mov    DWORD PTR ds:0x6502d59c,ecx
6501daa0:	pop    esi
6501daa1:	ret    
6501daa2:	call   0x65014580
6501daa7:	push   esi
6501daa8:	push   esi
6501daa9:	push   esi
6501daaa:	push   esi
6501daab:	push   esi
6501daac:	mov    DWORD PTR [eax],0x16
6501dab2:	call   0x6501241f
6501dab7:	add    esp,0x14
6501daba:	or     eax,0xffffffff
6501dabd:	pop    esi
6501dabe:	ret    
6501dabf:	int3   
6501dac0:	mov    eax,DWORD PTR [esp+0x8]
6501dac4:	mov    ecx,DWORD PTR [esp+0x10]
6501dac8:	or     ecx,eax
6501daca:	mov    ecx,DWORD PTR [esp+0xc]
6501dace:	jne    0x6501dad9
6501dad0:	mov    eax,DWORD PTR [esp+0x4]
6501dad4:	mul    ecx
6501dad6:	ret    0x10
6501dad9:	push   ebx
6501dada:	mul    ecx
6501dadc:	mov    ebx,eax
6501dade:	mov    eax,DWORD PTR [esp+0x8]
6501dae2:	mul    DWORD PTR [esp+0x14]
6501dae6:	add    ebx,eax
6501dae8:	mov    eax,DWORD PTR [esp+0x8]
6501daec:	mul    ecx
6501daee:	add    edx,ebx
6501daf0:	pop    ebx
6501daf1:	ret    0x10
6501daf4:	push   0xa
6501daf6:	push   0x0
6501daf8:	push   DWORD PTR [esp+0xc]
6501dafc:	call   0x6501e345
6501db01:	add    esp,0xc
6501db04:	ret    
6501db05:	push   0x2
6501db07:	call   0x65015d06
6501db0c:	pop    ecx
6501db0d:	ret    
6501db0e:	mov    ecx,DWORD PTR [esp+0x4]
6501db12:	push   ebx
6501db13:	xor    ebx,ebx
6501db15:	cmp    ecx,ebx
6501db17:	push   esi
6501db18:	push   edi
6501db19:	jl     0x6501db76
6501db1b:	cmp    ecx,DWORD PTR ds:0x65031440
6501db21:	jae    0x6501db76
6501db23:	mov    eax,ecx
6501db25:	sar    eax,0x5
6501db28:	mov    esi,ecx
6501db2a:	lea    edi,[eax*4+0x65031460]
6501db31:	mov    eax,DWORD PTR [edi]
6501db33:	and    esi,0x1f
6501db36:	shl    esi,0x6
6501db39:	add    eax,esi
6501db3b:	test   BYTE PTR [eax+0x4],0x1
6501db3f:	je     0x6501db76
6501db41:	cmp    DWORD PTR [eax],0xffffffff
6501db44:	je     0x6501db76
6501db46:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501db4d:	jne    0x6501db6c
6501db4f:	sub    ecx,ebx
6501db51:	je     0x6501db63
6501db53:	dec    ecx
6501db54:	je     0x6501db5e
6501db56:	dec    ecx
6501db57:	jne    0x6501db6c
6501db59:	push   ebx
6501db5a:	push   0xfffffff4
6501db5c:	jmp    0x6501db66
6501db5e:	push   ebx
6501db5f:	push   0xfffffff5
6501db61:	jmp    0x6501db66
6501db63:	push   ebx
6501db64:	push   0xfffffff6
6501db66:	call   DWORD PTR ds:0x650240cc
6501db6c:	mov    eax,DWORD PTR [edi]
6501db6e:	or     DWORD PTR [esi+eax*1],0xffffffff
6501db72:	xor    eax,eax
6501db74:	jmp    0x6501db8b
6501db76:	call   0x65014580
6501db7b:	mov    DWORD PTR [eax],0x9
6501db81:	call   0x65014593
6501db86:	mov    DWORD PTR [eax],ebx
6501db88:	or     eax,0xffffffff
6501db8b:	pop    edi
6501db8c:	pop    esi
6501db8d:	pop    ebx
6501db8e:	ret    
6501db8f:	mov    eax,DWORD PTR [esp+0x4]
6501db93:	cmp    eax,0xfffffffe
6501db96:	jne    0x6501dbaf
6501db98:	call   0x65014593
6501db9d:	and    DWORD PTR [eax],0x0
6501dba0:	call   0x65014580
6501dba5:	mov    DWORD PTR [eax],0x9
6501dbab:	or     eax,0xffffffff
6501dbae:	ret    
6501dbaf:	push   esi
6501dbb0:	xor    esi,esi
6501dbb2:	cmp    eax,esi
6501dbb4:	jl     0x6501dbd8
6501dbb6:	cmp    eax,DWORD PTR ds:0x65031440
6501dbbc:	jae    0x6501dbd8
6501dbbe:	mov    ecx,eax
6501dbc0:	and    eax,0x1f
6501dbc3:	sar    ecx,0x5
6501dbc6:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501dbcd:	shl    eax,0x6
6501dbd0:	add    eax,ecx
6501dbd2:	test   BYTE PTR [eax+0x4],0x1
6501dbd6:	jne    0x6501dbfc
6501dbd8:	call   0x65014593
6501dbdd:	mov    DWORD PTR [eax],esi
6501dbdf:	call   0x65014580
6501dbe4:	push   esi
6501dbe5:	push   esi
6501dbe6:	push   esi
6501dbe7:	push   esi
6501dbe8:	push   esi
6501dbe9:	mov    DWORD PTR [eax],0x9
6501dbef:	call   0x6501241f
6501dbf4:	add    esp,0x14
6501dbf7:	or     eax,0xffffffff
6501dbfa:	pop    esi
6501dbfb:	ret    
6501dbfc:	mov    eax,DWORD PTR [eax]
6501dbfe:	pop    esi
6501dbff:	ret    
6501dc00:	push   0xc
6501dc02:	push   0x65029e50
6501dc07:	call   0x65013e70
6501dc0c:	mov    edi,DWORD PTR [ebp+0x8]
6501dc0f:	mov    eax,edi
6501dc11:	sar    eax,0x5
6501dc14:	mov    esi,edi
6501dc16:	and    esi,0x1f
6501dc19:	shl    esi,0x6
6501dc1c:	add    esi,DWORD PTR [eax*4+0x65031460]
6501dc23:	mov    DWORD PTR [ebp-0x1c],0x1
6501dc2a:	xor    ebx,ebx
6501dc2c:	cmp    DWORD PTR [esi+0x8],ebx
6501dc2f:	jne    0x6501dc67
6501dc31:	push   0xa
6501dc33:	call   0x65019ecf
6501dc38:	pop    ecx
6501dc39:	mov    DWORD PTR [ebp-0x4],ebx
6501dc3c:	cmp    DWORD PTR [esi+0x8],ebx
6501dc3f:	jne    0x6501dc5b
6501dc41:	push   0xfa0
6501dc46:	lea    eax,[esi+0xc]
6501dc49:	push   eax
6501dc4a:	call   0x6501b588
6501dc4f:	pop    ecx
6501dc50:	pop    ecx
6501dc51:	test   eax,eax
6501dc53:	jne    0x6501dc58
6501dc55:	mov    DWORD PTR [ebp-0x1c],ebx
6501dc58:	inc    DWORD PTR [esi+0x8]
6501dc5b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501dc62:	call   0x6501dc97
6501dc67:	cmp    DWORD PTR [ebp-0x1c],ebx
6501dc6a:	je     0x6501dc89
6501dc6c:	mov    eax,edi
6501dc6e:	sar    eax,0x5
6501dc71:	and    edi,0x1f
6501dc74:	shl    edi,0x6
6501dc77:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501dc7e:	lea    eax,[eax+edi*1+0xc]
6501dc82:	push   eax
6501dc83:	call   DWORD PTR ds:0x65024098
6501dc89:	mov    eax,DWORD PTR [ebp-0x1c]
6501dc8c:	call   0x65013eb5
6501dc91:	ret    
6501dc92:	xor    ebx,ebx
6501dc94:	mov    edi,DWORD PTR [ebp+0x8]
6501dc97:	push   0xa
6501dc99:	call   0x65019df7
6501dc9e:	pop    ecx
6501dc9f:	ret    
6501dca0:	mov    eax,DWORD PTR [esp+0x4]
6501dca4:	mov    ecx,eax
6501dca6:	and    eax,0x1f
6501dca9:	sar    ecx,0x5
6501dcac:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501dcb3:	shl    eax,0x6
6501dcb6:	lea    eax,[ecx+eax*1+0xc]
6501dcba:	push   eax
6501dcbb:	call   DWORD PTR ds:0x6502409c
6501dcc1:	ret    
6501dcc2:	push   ebp
6501dcc3:	mov    ebp,esp
6501dcc5:	sub    esp,0x10
6501dcc8:	mov    eax,ds:0x6502c09c
6501dccd:	xor    eax,ebp
6501dccf:	mov    DWORD PTR [ebp-0x4],eax
6501dcd2:	push   esi
6501dcd3:	xor    esi,esi
6501dcd5:	cmp    DWORD PTR ds:0x6502cfb0,esi
6501dcdb:	je     0x6501dd2b
6501dcdd:	cmp    DWORD PTR ds:0x6502d024,0xfffffffe
6501dce4:	jne    0x6501dceb
6501dce6:	call   0x6501e3d1
6501dceb:	mov    eax,ds:0x6502d024
6501dcf0:	cmp    eax,0xffffffff
6501dcf3:	jne    0x6501dcfb
6501dcf5:	or     ax,0xffff
6501dcf9:	jmp    0x6501dd6b
6501dcfb:	push   esi
6501dcfc:	lea    ecx,[ebp-0x10]
6501dcff:	push   ecx
6501dd00:	push   0x1
6501dd02:	lea    ecx,[ebp+0x8]
6501dd05:	push   ecx
6501dd06:	push   eax
6501dd07:	call   DWORD PTR ds:0x650240bc
6501dd0d:	test   eax,eax
6501dd0f:	jne    0x6501dd78
6501dd11:	cmp    DWORD PTR ds:0x6502cfb0,0x2
6501dd18:	jne    0x6501dcf5
6501dd1a:	call   DWORD PTR ds:0x6502403c
6501dd20:	cmp    eax,0x78
6501dd23:	jne    0x6501dcf5
6501dd25:	mov    DWORD PTR ds:0x6502cfb0,esi
6501dd2b:	push   esi
6501dd2c:	push   esi
6501dd2d:	push   0x5
6501dd2f:	lea    eax,[ebp-0xc]
6501dd32:	push   eax
6501dd33:	push   0x1
6501dd35:	lea    eax,[ebp+0x8]
6501dd38:	push   eax
6501dd39:	push   esi
6501dd3a:	call   DWORD PTR ds:0x650240c4
6501dd40:	push   eax
6501dd41:	call   DWORD PTR ds:0x65024020
6501dd47:	mov    ecx,DWORD PTR ds:0x6502d024
6501dd4d:	cmp    ecx,0xffffffff
6501dd50:	je     0x6501dcf5
6501dd52:	push   esi
6501dd53:	lea    edx,[ebp-0x10]
6501dd56:	push   edx
6501dd57:	push   eax
6501dd58:	lea    eax,[ebp-0xc]
6501dd5b:	push   eax
6501dd5c:	push   ecx
6501dd5d:	call   DWORD PTR ds:0x650240c8
6501dd63:	test   eax,eax
6501dd65:	je     0x6501dcf5
6501dd67:	mov    ax,WORD PTR [ebp+0x8]
6501dd6b:	mov    ecx,DWORD PTR [ebp-0x4]
6501dd6e:	xor    ecx,ebp
6501dd70:	pop    esi
6501dd71:	call   0x6501292c
6501dd76:	leave  
6501dd77:	ret    
6501dd78:	mov    DWORD PTR ds:0x6502cfb0,0x1
6501dd82:	jmp    0x6501dd67
6501dd84:	push   0x10
6501dd86:	push   0x65029e70
6501dd8b:	call   0x65013e70
6501dd90:	xor    ebx,ebx
6501dd92:	mov    DWORD PTR [ebp-0x1c],ebx
6501dd95:	push   0x1
6501dd97:	call   0x65019ecf
6501dd9c:	pop    ecx
6501dd9d:	mov    DWORD PTR [ebp-0x4],ebx
6501dda0:	push   0x3
6501dda2:	pop    edi
6501dda3:	mov    DWORD PTR [ebp-0x20],edi
6501dda6:	cmp    edi,DWORD PTR ds:0x65031420
6501ddac:	jge    0x6501de05
6501ddae:	mov    esi,edi
6501ddb0:	shl    esi,0x2
6501ddb3:	mov    eax,ds:0x65030410
6501ddb8:	add    eax,esi
6501ddba:	cmp    DWORD PTR [eax],ebx
6501ddbc:	je     0x6501de02
6501ddbe:	mov    eax,DWORD PTR [eax]
6501ddc0:	test   BYTE PTR [eax+0xc],0x83
6501ddc4:	je     0x6501ddd5
6501ddc6:	push   eax
6501ddc7:	call   0x6501e48f
6501ddcc:	pop    ecx
6501ddcd:	cmp    eax,0xffffffff
6501ddd0:	je     0x6501ddd5
6501ddd2:	inc    DWORD PTR [ebp-0x1c]
6501ddd5:	cmp    edi,0x14
6501ddd8:	jl     0x6501de02
6501ddda:	mov    eax,ds:0x65030410
6501dddf:	mov    eax,DWORD PTR [esi+eax*1]
6501dde2:	add    eax,0x20
6501dde5:	push   eax
6501dde6:	call   DWORD PTR ds:0x650240a0
6501ddec:	mov    eax,ds:0x65030410
6501ddf1:	push   DWORD PTR [esi+eax*1]
6501ddf4:	call   0x65013746
6501ddf9:	pop    ecx
6501ddfa:	mov    eax,ds:0x65030410
6501ddff:	mov    DWORD PTR [esi+eax*1],ebx
6501de02:	inc    edi
6501de03:	jmp    0x6501dda3
6501de05:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501de0c:	call   0x6501de1a
6501de11:	mov    eax,DWORD PTR [ebp-0x1c]
6501de14:	call   0x65013eb5
6501de19:	ret    
6501de1a:	push   0x1
6501de1c:	call   0x65019df7
6501de21:	pop    ecx
6501de22:	ret    
6501de23:	push   ebx
6501de24:	push   esi
6501de25:	mov    esi,DWORD PTR [esp+0xc]
6501de29:	mov    eax,DWORD PTR [esi+0xc]
6501de2c:	mov    ecx,eax
6501de2e:	and    cl,0x3
6501de31:	xor    ebx,ebx
6501de33:	cmp    cl,0x2
6501de36:	jne    0x6501de77
6501de38:	test   ax,0x108
6501de3c:	je     0x6501de77
6501de3e:	mov    eax,DWORD PTR [esi+0x8]
6501de41:	push   edi
6501de42:	mov    edi,DWORD PTR [esi]
6501de44:	sub    edi,eax
6501de46:	test   edi,edi
6501de48:	jle    0x6501de76
6501de4a:	push   edi
6501de4b:	push   eax
6501de4c:	push   esi
6501de4d:	call   0x6501c72d
6501de52:	pop    ecx
6501de53:	push   eax
6501de54:	call   0x6501c40e
6501de59:	add    esp,0xc
6501de5c:	cmp    eax,edi
6501de5e:	jne    0x6501de6f
6501de60:	mov    eax,DWORD PTR [esi+0xc]
6501de63:	test   al,al
6501de65:	jns    0x6501de76
6501de67:	and    eax,0xfffffffd
6501de6a:	mov    DWORD PTR [esi+0xc],eax
6501de6d:	jmp    0x6501de76
6501de6f:	or     DWORD PTR [esi+0xc],0x20
6501de73:	or     ebx,0xffffffff
6501de76:	pop    edi
6501de77:	mov    eax,DWORD PTR [esi+0x8]
6501de7a:	and    DWORD PTR [esi+0x4],0x0
6501de7e:	mov    DWORD PTR [esi],eax
6501de80:	pop    esi
6501de81:	mov    eax,ebx
6501de83:	pop    ebx
6501de84:	ret    
6501de85:	push   esi
6501de86:	mov    esi,DWORD PTR [esp+0x8]
6501de8a:	test   esi,esi
6501de8c:	jne    0x6501de97
6501de8e:	push   esi
6501de8f:	call   0x6501dec7
6501de94:	pop    ecx
6501de95:	pop    esi
6501de96:	ret    
6501de97:	push   esi
6501de98:	call   0x6501de23
6501de9d:	test   eax,eax
6501de9f:	pop    ecx
6501dea0:	je     0x6501dea7
6501dea2:	or     eax,0xffffffff
6501dea5:	pop    esi
6501dea6:	ret    
6501dea7:	test   WORD PTR [esi+0xc],0x4000
6501dead:	je     0x6501dec3
6501deaf:	push   esi
6501deb0:	call   0x6501c72d
6501deb5:	push   eax
6501deb6:	call   0x6501e50b
6501debb:	pop    ecx
6501debc:	pop    ecx
6501debd:	neg    eax
6501debf:	sbb    eax,eax
6501dec1:	pop    esi
6501dec2:	ret    
6501dec3:	xor    eax,eax
6501dec5:	pop    esi
6501dec6:	ret    
6501dec7:	push   0x14
6501dec9:	push   0x65029e90
6501dece:	call   0x65013e70
6501ded3:	xor    edi,edi
6501ded5:	mov    DWORD PTR [ebp-0x1c],edi
6501ded8:	mov    DWORD PTR [ebp-0x24],edi
6501dedb:	push   0x1
6501dedd:	call   0x65019ecf
6501dee2:	pop    ecx
6501dee3:	mov    DWORD PTR [ebp-0x4],edi
6501dee6:	xor    esi,esi
6501dee8:	mov    DWORD PTR [ebp-0x20],esi
6501deeb:	cmp    esi,DWORD PTR ds:0x65031420
6501def1:	jge    0x6501df7a
6501def7:	mov    eax,ds:0x65030410
6501defc:	lea    eax,[eax+esi*4]
6501deff:	cmp    DWORD PTR [eax],edi
6501df01:	je     0x6501df61
6501df03:	mov    eax,DWORD PTR [eax]
6501df05:	test   BYTE PTR [eax+0xc],0x83
6501df09:	je     0x6501df61
6501df0b:	push   eax
6501df0c:	push   esi
6501df0d:	call   0x6501c69f
6501df12:	pop    ecx
6501df13:	pop    ecx
6501df14:	xor    edx,edx
6501df16:	inc    edx
6501df17:	mov    DWORD PTR [ebp-0x4],edx
6501df1a:	mov    eax,ds:0x65030410
6501df1f:	mov    eax,DWORD PTR [eax+esi*4]
6501df22:	mov    ecx,DWORD PTR [eax+0xc]
6501df25:	test   cl,0x83
6501df28:	je     0x6501df59
6501df2a:	cmp    DWORD PTR [ebp+0x8],edx
6501df2d:	jne    0x6501df40
6501df2f:	push   eax
6501df30:	call   0x6501de85
6501df35:	pop    ecx
6501df36:	cmp    eax,0xffffffff
6501df39:	je     0x6501df59
6501df3b:	inc    DWORD PTR [ebp-0x1c]
6501df3e:	jmp    0x6501df59
6501df40:	cmp    DWORD PTR [ebp+0x8],edi
6501df43:	jne    0x6501df59
6501df45:	test   cl,0x2
6501df48:	je     0x6501df59
6501df4a:	push   eax
6501df4b:	call   0x6501de85
6501df50:	pop    ecx
6501df51:	cmp    eax,0xffffffff
6501df54:	jne    0x6501df59
6501df56:	or     DWORD PTR [ebp-0x24],eax
6501df59:	mov    DWORD PTR [ebp-0x4],edi
6501df5c:	call   0x6501df69
6501df61:	inc    esi
6501df62:	jmp    0x6501dee8
6501df64:	xor    edi,edi
6501df66:	mov    esi,DWORD PTR [ebp-0x20]
6501df69:	mov    eax,ds:0x65030410
6501df6e:	push   DWORD PTR [eax+esi*4]
6501df71:	push   esi
6501df72:	call   0x6501c703
6501df77:	pop    ecx
6501df78:	pop    ecx
6501df79:	ret    
6501df7a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501df81:	call   0x6501df98
6501df86:	cmp    DWORD PTR [ebp+0x8],0x1
6501df8a:	mov    eax,DWORD PTR [ebp-0x1c]
6501df8d:	je     0x6501df92
6501df8f:	mov    eax,DWORD PTR [ebp-0x24]
6501df92:	call   0x65013eb5
6501df97:	ret    
6501df98:	push   0x1
6501df9a:	call   0x65019df7
6501df9f:	pop    ecx
6501dfa0:	ret    
6501dfa1:	push   0x1
6501dfa3:	call   0x6501dec7
6501dfa8:	pop    ecx
6501dfa9:	ret    
6501dfaa:	push   ebp
6501dfab:	mov    ebp,esp
6501dfad:	push   ecx
6501dfae:	push   esi
6501dfaf:	mov    esi,DWORD PTR [ebp+0xc]
6501dfb2:	push   esi
6501dfb3:	call   0x6501c72d
6501dfb8:	mov    DWORD PTR [ebp+0xc],eax
6501dfbb:	mov    eax,DWORD PTR [esi+0xc]
6501dfbe:	test   al,0x82
6501dfc0:	pop    ecx
6501dfc1:	jne    0x6501dfdc
6501dfc3:	call   0x65014580
6501dfc8:	mov    DWORD PTR [eax],0x9
6501dfce:	or     DWORD PTR [esi+0xc],0x20
6501dfd2:	mov    eax,0xffff
6501dfd7:	jmp    0x6501e117
6501dfdc:	test   al,0x40
6501dfde:	je     0x6501dfed
6501dfe0:	call   0x65014580
6501dfe5:	mov    DWORD PTR [eax],0x22
6501dfeb:	jmp    0x6501dfce
6501dfed:	test   al,0x1
6501dfef:	je     0x6501e008
6501dff1:	and    DWORD PTR [esi+0x4],0x0
6501dff5:	test   al,0x10
6501dff7:	je     0x6501e088
6501dffd:	mov    ecx,DWORD PTR [esi+0x8]
6501e000:	and    eax,0xfffffffe
6501e003:	mov    DWORD PTR [esi],ecx
6501e005:	mov    DWORD PTR [esi+0xc],eax
6501e008:	mov    eax,DWORD PTR [esi+0xc]
6501e00b:	and    DWORD PTR [esi+0x4],0x0
6501e00f:	and    DWORD PTR [ebp-0x4],0x0
6501e013:	push   ebx
6501e014:	push   0x2
6501e016:	and    eax,0xffffffef
6501e019:	pop    ebx
6501e01a:	or     eax,ebx
6501e01c:	test   ax,0x10c
6501e020:	mov    DWORD PTR [esi+0xc],eax
6501e023:	jne    0x6501e051
6501e025:	call   0x6501c58c
6501e02a:	add    eax,0x20
6501e02d:	cmp    esi,eax
6501e02f:	je     0x6501e03d
6501e031:	call   0x6501c58c
6501e036:	add    eax,0x40
6501e039:	cmp    esi,eax
6501e03b:	jne    0x6501e04a
6501e03d:	push   DWORD PTR [ebp+0xc]
6501e040:	call   0x6501c52e
6501e045:	test   eax,eax
6501e047:	pop    ecx
6501e048:	jne    0x6501e051
6501e04a:	push   esi
6501e04b:	call   0x6501c4ea
6501e050:	pop    ecx
6501e051:	test   WORD PTR [esi+0xc],0x108
6501e057:	push   edi
6501e058:	je     0x6501e0e1
6501e05e:	mov    eax,DWORD PTR [esi+0x8]
6501e061:	mov    edi,DWORD PTR [esi]
6501e063:	lea    ecx,[eax+0x2]
6501e066:	mov    DWORD PTR [esi],ecx
6501e068:	mov    ecx,DWORD PTR [esi+0x18]
6501e06b:	sub    edi,eax
6501e06d:	sub    ecx,ebx
6501e06f:	test   edi,edi
6501e071:	mov    DWORD PTR [esi+0x4],ecx
6501e074:	jle    0x6501e093
6501e076:	push   edi
6501e077:	push   eax
6501e078:	push   DWORD PTR [ebp+0xc]
6501e07b:	call   0x6501c40e
6501e080:	add    esp,0xc
6501e083:	mov    DWORD PTR [ebp-0x4],eax
6501e086:	jmp    0x6501e0d6
6501e088:	or     eax,0x20
6501e08b:	mov    DWORD PTR [esi+0xc],eax
6501e08e:	jmp    0x6501dfd2
6501e093:	mov    ecx,DWORD PTR [ebp+0xc]
6501e096:	cmp    ecx,0xffffffff
6501e099:	je     0x6501e0b6
6501e09b:	cmp    ecx,0xfffffffe
6501e09e:	je     0x6501e0b6
6501e0a0:	mov    eax,ecx
6501e0a2:	and    eax,0x1f
6501e0a5:	mov    edx,ecx
6501e0a7:	sar    edx,0x5
6501e0aa:	shl    eax,0x6
6501e0ad:	add    eax,DWORD PTR [edx*4+0x65031460]
6501e0b4:	jmp    0x6501e0bb
6501e0b6:	mov    eax,0x6502c880
6501e0bb:	test   BYTE PTR [eax+0x4],0x20
6501e0bf:	je     0x6501e0d6
6501e0c1:	push   ebx
6501e0c2:	push   0x0
6501e0c4:	push   0x0
6501e0c6:	push   ecx
6501e0c7:	call   0x6501bcd3
6501e0cc:	and    eax,edx
6501e0ce:	add    esp,0x10
6501e0d1:	cmp    eax,0xffffffff
6501e0d4:	je     0x6501e103
6501e0d6:	mov    eax,DWORD PTR [esi+0x8]
6501e0d9:	mov    ebx,DWORD PTR [ebp+0x8]
6501e0dc:	mov    WORD PTR [eax],bx
6501e0df:	jmp    0x6501e0fe
6501e0e1:	push   0x2
6501e0e3:	lea    eax,[ebp-0x4]
6501e0e6:	push   eax
6501e0e7:	push   DWORD PTR [ebp+0xc]
6501e0ea:	mov    edi,ebx
6501e0ec:	mov    ebx,DWORD PTR [ebp+0x8]
6501e0ef:	mov    WORD PTR [ebp-0x4],bx
6501e0f3:	call   0x6501c40e
6501e0f8:	add    esp,0xc
6501e0fb:	mov    DWORD PTR [ebp-0x4],eax
6501e0fe:	cmp    DWORD PTR [ebp-0x4],edi
6501e101:	je     0x6501e10e
6501e103:	or     DWORD PTR [esi+0xc],0x20
6501e107:	mov    eax,0xffff
6501e10c:	jmp    0x6501e115
6501e10e:	mov    eax,ebx
6501e110:	and    eax,0xffff
6501e115:	pop    edi
6501e116:	pop    ebx
6501e117:	pop    esi
6501e118:	leave  
6501e119:	ret    
6501e11a:	push   ebp
6501e11b:	mov    ebp,esp
6501e11d:	sub    esp,0x14
6501e120:	push   esi
6501e121:	push   edi
6501e122:	push   DWORD PTR [ebp+0x8]
6501e125:	lea    ecx,[ebp-0x14]
6501e128:	call   0x65012acf
6501e12d:	mov    eax,DWORD PTR [ebp+0x10]
6501e130:	mov    esi,DWORD PTR [ebp+0xc]
6501e133:	xor    edi,edi
6501e135:	cmp    eax,edi
6501e137:	je     0x6501e13b
6501e139:	mov    DWORD PTR [eax],esi
6501e13b:	cmp    esi,edi
6501e13d:	jne    0x6501e16b
6501e13f:	call   0x65014580
6501e144:	push   edi
6501e145:	push   edi
6501e146:	push   edi
6501e147:	push   edi
6501e148:	push   edi
6501e149:	mov    DWORD PTR [eax],0x16
6501e14f:	call   0x6501241f
6501e154:	add    esp,0x14
6501e157:	cmp    BYTE PTR [ebp-0x8],0x0
6501e15b:	je     0x6501e164
6501e15d:	mov    eax,DWORD PTR [ebp-0xc]
6501e160:	and    DWORD PTR [eax+0x70],0xfffffffd
6501e164:	xor    eax,eax
6501e166:	jmp    0x6501e341
6501e16b:	cmp    DWORD PTR [ebp+0x14],edi
6501e16e:	je     0x6501e17c
6501e170:	cmp    DWORD PTR [ebp+0x14],0x2
6501e174:	jl     0x6501e13f
6501e176:	cmp    DWORD PTR [ebp+0x14],0x24
6501e17a:	jg     0x6501e13f
6501e17c:	mov    ecx,DWORD PTR [ebp-0x14]
6501e17f:	push   ebx
6501e180:	mov    bl,BYTE PTR [esi]
6501e182:	mov    DWORD PTR [ebp-0x4],edi
6501e185:	lea    edi,[esi+0x1]
6501e188:	cmp    DWORD PTR [ecx+0xac],0x1
6501e18f:	jle    0x6501e1a8
6501e191:	lea    eax,[ebp-0x14]
6501e194:	push   eax
6501e195:	movzx  eax,bl
6501e198:	push   0x8
6501e19a:	push   eax
6501e19b:	call   0x65019ca3
6501e1a0:	mov    ecx,DWORD PTR [ebp-0x14]
6501e1a3:	add    esp,0xc
6501e1a6:	jmp    0x6501e1b8
6501e1a8:	mov    edx,DWORD PTR [ecx+0xc8]
6501e1ae:	movzx  eax,bl
6501e1b1:	movzx  eax,BYTE PTR [edx+eax*2]
6501e1b5:	and    eax,0x8
6501e1b8:	test   eax,eax
6501e1ba:	je     0x6501e1c1
6501e1bc:	mov    bl,BYTE PTR [edi]
6501e1be:	inc    edi
6501e1bf:	jmp    0x6501e188
6501e1c1:	cmp    bl,0x2d
6501e1c4:	jne    0x6501e1cc
6501e1c6:	or     DWORD PTR [ebp+0x18],0x2
6501e1ca:	jmp    0x6501e1d1
6501e1cc:	cmp    bl,0x2b
6501e1cf:	jne    0x6501e1d4
6501e1d1:	mov    bl,BYTE PTR [edi]
6501e1d3:	inc    edi
6501e1d4:	mov    eax,DWORD PTR [ebp+0x14]
6501e1d7:	test   eax,eax
6501e1d9:	jl     0x6501e328
6501e1df:	cmp    eax,0x1
6501e1e2:	je     0x6501e328
6501e1e8:	cmp    eax,0x24
6501e1eb:	jg     0x6501e328
6501e1f1:	test   eax,eax
6501e1f3:	jne    0x6501e21f
6501e1f5:	cmp    bl,0x30
6501e1f8:	je     0x6501e203
6501e1fa:	mov    DWORD PTR [ebp+0x14],0xa
6501e201:	jmp    0x6501e237
6501e203:	mov    al,BYTE PTR [edi]
6501e205:	cmp    al,0x78
6501e207:	je     0x6501e216
6501e209:	cmp    al,0x58
6501e20b:	je     0x6501e216
6501e20d:	mov    DWORD PTR [ebp+0x14],0x8
6501e214:	jmp    0x6501e237
6501e216:	mov    DWORD PTR [ebp+0x14],0x10
6501e21d:	jmp    0x6501e229
6501e21f:	cmp    eax,0x10
6501e222:	jne    0x6501e237
6501e224:	cmp    bl,0x30
6501e227:	jne    0x6501e237
6501e229:	mov    al,BYTE PTR [edi]
6501e22b:	cmp    al,0x78
6501e22d:	je     0x6501e233
6501e22f:	cmp    al,0x58
6501e231:	jne    0x6501e237
6501e233:	inc    edi
6501e234:	mov    bl,BYTE PTR [edi]
6501e236:	inc    edi
6501e237:	mov    esi,DWORD PTR [ecx+0xc8]
6501e23d:	or     eax,0xffffffff
6501e240:	xor    edx,edx
6501e242:	div    DWORD PTR [ebp+0x14]
6501e245:	movzx  ecx,bl
6501e248:	movzx  ecx,WORD PTR [esi+ecx*2]
6501e24c:	test   cl,0x4
6501e24f:	je     0x6501e259
6501e251:	movsx  ecx,bl
6501e254:	sub    ecx,0x30
6501e257:	jmp    0x6501e273
6501e259:	test   cx,0x103
6501e25e:	je     0x6501e291
6501e260:	mov    cl,bl
6501e262:	sub    cl,0x61
6501e265:	cmp    cl,0x19
6501e268:	movsx  ecx,bl
6501e26b:	ja     0x6501e270
6501e26d:	sub    ecx,0x20
6501e270:	add    ecx,0xffffffc9
6501e273:	cmp    ecx,DWORD PTR [ebp+0x14]
6501e276:	jae    0x6501e291
6501e278:	or     DWORD PTR [ebp+0x18],0x8
6501e27c:	cmp    DWORD PTR [ebp-0x4],eax
6501e27f:	jb     0x6501e2a8
6501e281:	jne    0x6501e287
6501e283:	cmp    ecx,edx
6501e285:	jbe    0x6501e2a8
6501e287:	or     DWORD PTR [ebp+0x18],0x4
6501e28b:	cmp    DWORD PTR [ebp+0x10],0x0
6501e28f:	jne    0x6501e2b4
6501e291:	mov    eax,DWORD PTR [ebp+0x18]
6501e294:	dec    edi
6501e295:	test   al,0x8
6501e297:	jne    0x6501e2b9
6501e299:	cmp    DWORD PTR [ebp+0x10],0x0
6501e29d:	je     0x6501e2a2
6501e29f:	mov    edi,DWORD PTR [ebp+0xc]
6501e2a2:	and    DWORD PTR [ebp-0x4],0x0
6501e2a6:	jmp    0x6501e304
6501e2a8:	mov    ebx,DWORD PTR [ebp-0x4]
6501e2ab:	imul   ebx,DWORD PTR [ebp+0x14]
6501e2af:	add    ebx,ecx
6501e2b1:	mov    DWORD PTR [ebp-0x4],ebx
6501e2b4:	mov    bl,BYTE PTR [edi]
6501e2b6:	inc    edi
6501e2b7:	jmp    0x6501e245
6501e2b9:	test   al,0x4
6501e2bb:	mov    esi,0x7fffffff
6501e2c0:	jne    0x6501e2dd
6501e2c2:	test   al,0x1
6501e2c4:	jne    0x6501e304
6501e2c6:	and    eax,0x2
6501e2c9:	je     0x6501e2d4
6501e2cb:	cmp    DWORD PTR [ebp-0x4],0x80000000
6501e2d2:	ja     0x6501e2dd
6501e2d4:	test   eax,eax
6501e2d6:	jne    0x6501e304
6501e2d8:	cmp    DWORD PTR [ebp-0x4],esi
6501e2db:	jbe    0x6501e304
6501e2dd:	call   0x65014580
6501e2e2:	test   BYTE PTR [ebp+0x18],0x1
6501e2e6:	mov    DWORD PTR [eax],0x22
6501e2ec:	je     0x6501e2f4
6501e2ee:	or     DWORD PTR [ebp-0x4],0xffffffff
6501e2f2:	jmp    0x6501e304
6501e2f4:	mov    al,BYTE PTR [ebp+0x18]
6501e2f7:	and    al,0x2
6501e2f9:	neg    al
6501e2fb:	sbb    eax,eax
6501e2fd:	neg    eax
6501e2ff:	add    eax,esi
6501e301:	mov    DWORD PTR [ebp-0x4],eax
6501e304:	mov    eax,DWORD PTR [ebp+0x10]
6501e307:	test   eax,eax
6501e309:	je     0x6501e30d
6501e30b:	mov    DWORD PTR [eax],edi
6501e30d:	test   BYTE PTR [ebp+0x18],0x2
6501e311:	je     0x6501e316
6501e313:	neg    DWORD PTR [ebp-0x4]
6501e316:	cmp    BYTE PTR [ebp-0x8],0x0
6501e31a:	je     0x6501e323
6501e31c:	mov    eax,DWORD PTR [ebp-0xc]
6501e31f:	and    DWORD PTR [eax+0x70],0xfffffffd
6501e323:	mov    eax,DWORD PTR [ebp-0x4]
6501e326:	jmp    0x6501e340
6501e328:	mov    eax,DWORD PTR [ebp+0x10]
6501e32b:	test   eax,eax
6501e32d:	je     0x6501e331
6501e32f:	mov    DWORD PTR [eax],esi
6501e331:	cmp    BYTE PTR [ebp-0x8],0x0
6501e335:	je     0x6501e33e
6501e337:	mov    eax,DWORD PTR [ebp-0xc]
6501e33a:	and    DWORD PTR [eax+0x70],0xfffffffd
6501e33e:	xor    eax,eax
6501e340:	pop    ebx
6501e341:	pop    edi
6501e342:	pop    esi
6501e343:	leave  
6501e344:	ret    
6501e345:	push   ebp
6501e346:	mov    ebp,esp
6501e348:	xor    eax,eax
6501e34a:	cmp    DWORD PTR ds:0x6502d954,eax
6501e350:	push   eax
6501e351:	push   DWORD PTR [ebp+0x10]
6501e354:	push   DWORD PTR [ebp+0xc]
6501e357:	push   DWORD PTR [ebp+0x8]
6501e35a:	jne    0x6501e363
6501e35c:	push   0x6502c878
6501e361:	jmp    0x6501e364
6501e363:	push   eax
6501e364:	call   0x6501e11a
6501e369:	add    esp,0x14
6501e36c:	pop    ebp
6501e36d:	ret    
6501e36e:	int3   
6501e36f:	int3   
6501e370:	push   ebp
6501e371:	mov    ebp,esp
6501e373:	push   edi
6501e374:	push   esi
6501e375:	push   ebx
6501e376:	mov    ecx,DWORD PTR [ebp+0x10]
6501e379:	or     ecx,ecx
6501e37b:	je     0x6501e3ca
6501e37d:	mov    esi,DWORD PTR [ebp+0x8]
6501e380:	mov    edi,DWORD PTR [ebp+0xc]
6501e383:	mov    bh,0x41
6501e385:	mov    bl,0x5a
6501e387:	mov    dh,0x20
6501e389:	lea    ecx,[ecx+0x0]
6501e38c:	mov    ah,BYTE PTR [esi]
6501e38e:	or     ah,ah
6501e390:	mov    al,BYTE PTR [edi]
6501e392:	je     0x6501e3bb
6501e394:	or     al,al
6501e396:	je     0x6501e3bb
6501e398:	add    esi,0x1
6501e39b:	add    edi,0x1
6501e39e:	cmp    ah,bh
6501e3a0:	jb     0x6501e3a8
6501e3a2:	cmp    ah,bl
6501e3a4:	ja     0x6501e3a8
6501e3a6:	add    ah,dh
6501e3a8:	cmp    al,bh
6501e3aa:	jb     0x6501e3b2
6501e3ac:	cmp    al,bl
6501e3ae:	ja     0x6501e3b2
6501e3b0:	add    al,dh
6501e3b2:	cmp    ah,al
6501e3b4:	jne    0x6501e3c1
6501e3b6:	sub    ecx,0x1
6501e3b9:	jne    0x6501e38c
6501e3bb:	xor    ecx,ecx
6501e3bd:	cmp    ah,al
6501e3bf:	je     0x6501e3ca
6501e3c1:	mov    ecx,0xffffffff
6501e3c6:	jb     0x6501e3ca
6501e3c8:	neg    ecx
6501e3ca:	mov    eax,ecx
6501e3cc:	pop    ebx
6501e3cd:	pop    esi
6501e3ce:	pop    edi
6501e3cf:	leave  
6501e3d0:	ret    
6501e3d1:	xor    eax,eax
6501e3d3:	push   eax
6501e3d4:	push   eax
6501e3d5:	push   0x3
6501e3d7:	push   eax
6501e3d8:	push   0x3
6501e3da:	push   0x40000000
6501e3df:	push   0x650265b4
6501e3e4:	call   DWORD PTR ds:0x650240ac
6501e3ea:	mov    ds:0x6502d024,eax
6501e3ef:	ret    
6501e3f0:	mov    eax,ds:0x6502d024
6501e3f5:	cmp    eax,0xffffffff
6501e3f8:	push   esi
6501e3f9:	mov    esi,DWORD PTR ds:0x65024038
6501e3ff:	je     0x6501e409
6501e401:	cmp    eax,0xfffffffe
6501e404:	je     0x6501e409
6501e406:	push   eax
6501e407:	call   esi
6501e409:	mov    eax,ds:0x6502d020
6501e40e:	cmp    eax,0xffffffff
6501e411:	je     0x6501e41b
6501e413:	cmp    eax,0xfffffffe
6501e416:	je     0x6501e41b
6501e418:	push   eax
6501e419:	call   esi
6501e41b:	pop    esi
6501e41c:	ret    
6501e41d:	push   ebx
6501e41e:	push   esi
6501e41f:	mov    esi,DWORD PTR [esp+0xc]
6501e423:	push   edi
6501e424:	xor    edi,edi
6501e426:	or     ebx,0xffffffff
6501e429:	cmp    esi,edi
6501e42b:	jne    0x6501e449
6501e42d:	call   0x65014580
6501e432:	push   edi
6501e433:	push   edi
6501e434:	push   edi
6501e435:	push   edi
6501e436:	push   edi
6501e437:	mov    DWORD PTR [eax],0x16
6501e43d:	call   0x6501241f
6501e442:	add    esp,0x14
6501e445:	or     eax,ebx
6501e447:	jmp    0x6501e48b
6501e449:	test   BYTE PTR [esi+0xc],0x83
6501e44d:	je     0x6501e486
6501e44f:	push   esi
6501e450:	call   0x6501de23
6501e455:	push   esi
6501e456:	mov    ebx,eax
6501e458:	call   0x6501e76a
6501e45d:	push   esi
6501e45e:	call   0x6501c72d
6501e463:	push   eax
6501e464:	call   0x6501e69d
6501e469:	add    esp,0x10
6501e46c:	test   eax,eax
6501e46e:	jge    0x6501e475
6501e470:	or     ebx,0xffffffff
6501e473:	jmp    0x6501e486
6501e475:	mov    eax,DWORD PTR [esi+0x1c]
6501e478:	cmp    eax,edi
6501e47a:	je     0x6501e486
6501e47c:	push   eax
6501e47d:	call   0x65013746
6501e482:	pop    ecx
6501e483:	mov    DWORD PTR [esi+0x1c],edi
6501e486:	mov    DWORD PTR [esi+0xc],edi
6501e489:	mov    eax,ebx
6501e48b:	pop    edi
6501e48c:	pop    esi
6501e48d:	pop    ebx
6501e48e:	ret    
6501e48f:	push   0xc
6501e491:	push   0x65029eb8
6501e496:	call   0x65013e70
6501e49b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e49f:	xor    eax,eax
6501e4a1:	mov    esi,DWORD PTR [ebp+0x8]
6501e4a4:	xor    edi,edi
6501e4a6:	cmp    esi,edi
6501e4a8:	setne  al
6501e4ab:	cmp    eax,edi
6501e4ad:	jne    0x6501e4cc
6501e4af:	call   0x65014580
6501e4b4:	mov    DWORD PTR [eax],0x16
6501e4ba:	push   edi
6501e4bb:	push   edi
6501e4bc:	push   edi
6501e4bd:	push   edi
6501e4be:	push   edi
6501e4bf:	call   0x6501241f
6501e4c4:	add    esp,0x14
6501e4c7:	or     eax,0xffffffff
6501e4ca:	jmp    0x6501e4d8
6501e4cc:	test   BYTE PTR [esi+0xc],0x40
6501e4d0:	je     0x6501e4de
6501e4d2:	mov    DWORD PTR [esi+0xc],edi
6501e4d5:	mov    eax,DWORD PTR [ebp-0x1c]
6501e4d8:	call   0x65013eb5
6501e4dd:	ret    
6501e4de:	push   esi
6501e4df:	call   0x6501c663
6501e4e4:	pop    ecx
6501e4e5:	mov    DWORD PTR [ebp-0x4],edi
6501e4e8:	push   esi
6501e4e9:	call   0x6501e41d
6501e4ee:	pop    ecx
6501e4ef:	mov    DWORD PTR [ebp-0x1c],eax
6501e4f2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e4f9:	call   0x6501e503
6501e4fe:	jmp    0x6501e4d5
6501e500:	mov    esi,DWORD PTR [ebp+0x8]
6501e503:	push   esi
6501e504:	call   0x6501c6cd
6501e509:	pop    ecx
6501e50a:	ret    
6501e50b:	push   0x10
6501e50d:	push   0x65029ed8
6501e512:	call   0x65013e70
6501e517:	mov    eax,DWORD PTR [ebp+0x8]
6501e51a:	cmp    eax,0xfffffffe
6501e51d:	jne    0x6501e532
6501e51f:	call   0x65014580
6501e524:	mov    DWORD PTR [eax],0x9
6501e52a:	or     eax,0xffffffff
6501e52d:	jmp    0x6501e5dc
6501e532:	xor    ebx,ebx
6501e534:	cmp    eax,ebx
6501e536:	jl     0x6501e540
6501e538:	cmp    eax,DWORD PTR ds:0x65031440
6501e53e:	jb     0x6501e55a
6501e540:	call   0x65014580
6501e545:	mov    DWORD PTR [eax],0x9
6501e54b:	push   ebx
6501e54c:	push   ebx
6501e54d:	push   ebx
6501e54e:	push   ebx
6501e54f:	push   ebx
6501e550:	call   0x6501241f
6501e555:	add    esp,0x14
6501e558:	jmp    0x6501e52a
6501e55a:	mov    ecx,eax
6501e55c:	sar    ecx,0x5
6501e55f:	lea    edi,[ecx*4+0x65031460]
6501e566:	mov    esi,eax
6501e568:	and    esi,0x1f
6501e56b:	shl    esi,0x6
6501e56e:	mov    ecx,DWORD PTR [edi]
6501e570:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6501e575:	and    ecx,0x1
6501e578:	je     0x6501e540
6501e57a:	push   eax
6501e57b:	call   0x6501dc00
6501e580:	pop    ecx
6501e581:	mov    DWORD PTR [ebp-0x4],ebx
6501e584:	mov    eax,DWORD PTR [edi]
6501e586:	test   BYTE PTR [esi+eax*1+0x4],0x1
6501e58b:	je     0x6501e5be
6501e58d:	push   DWORD PTR [ebp+0x8]
6501e590:	call   0x6501db8f
6501e595:	pop    ecx
6501e596:	push   eax
6501e597:	call   DWORD PTR ds:0x65024088
6501e59d:	test   eax,eax
6501e59f:	jne    0x6501e5ac
6501e5a1:	call   DWORD PTR ds:0x6502403c
6501e5a7:	mov    DWORD PTR [ebp-0x1c],eax
6501e5aa:	jmp    0x6501e5af
6501e5ac:	mov    DWORD PTR [ebp-0x1c],ebx
6501e5af:	cmp    DWORD PTR [ebp-0x1c],ebx
6501e5b2:	je     0x6501e5cd
6501e5b4:	call   0x65014593
6501e5b9:	mov    ecx,DWORD PTR [ebp-0x1c]
6501e5bc:	mov    DWORD PTR [eax],ecx
6501e5be:	call   0x65014580
6501e5c3:	mov    DWORD PTR [eax],0x9
6501e5c9:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e5cd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e5d4:	call   0x6501e5e2
6501e5d9:	mov    eax,DWORD PTR [ebp-0x1c]
6501e5dc:	call   0x65013eb5
6501e5e1:	ret    
6501e5e2:	push   DWORD PTR [ebp+0x8]
6501e5e5:	call   0x6501dca0
6501e5ea:	pop    ecx
6501e5eb:	ret    
6501e5ec:	xor    eax,eax
6501e5ee:	cmp    DWORD PTR [esp+0x8],eax
6501e5f2:	jbe    0x6501e605
6501e5f4:	mov    ecx,DWORD PTR [esp+0x4]
6501e5f8:	cmp    BYTE PTR [ecx],0x0
6501e5fb:	je     0x6501e605
6501e5fd:	inc    eax
6501e5fe:	inc    ecx
6501e5ff:	cmp    eax,DWORD PTR [esp+0x8]
6501e603:	jb     0x6501e5f8
6501e605:	ret    
6501e606:	push   esi
6501e607:	mov    esi,DWORD PTR [esp+0x8]
6501e60b:	push   edi
6501e60c:	push   esi
6501e60d:	call   0x6501db8f
6501e612:	cmp    eax,0xffffffff
6501e615:	pop    ecx
6501e616:	je     0x6501e668
6501e618:	cmp    esi,0x1
6501e61b:	mov    eax,ds:0x65031460
6501e620:	jne    0x6501e62b
6501e622:	test   BYTE PTR [eax+0x84],0x1
6501e629:	jne    0x6501e636
6501e62b:	cmp    esi,0x2
6501e62e:	jne    0x6501e64c
6501e630:	test   BYTE PTR [eax+0x44],0x1
6501e634:	je     0x6501e64c
6501e636:	push   0x2
6501e638:	call   0x6501db8f
6501e63d:	push   0x1
6501e63f:	mov    edi,eax
6501e641:	call   0x6501db8f
6501e646:	cmp    eax,edi
6501e648:	pop    ecx
6501e649:	pop    ecx
6501e64a:	je     0x6501e668
6501e64c:	push   esi
6501e64d:	call   0x6501db8f
6501e652:	pop    ecx
6501e653:	push   eax
6501e654:	call   DWORD PTR ds:0x65024038
6501e65a:	test   eax,eax
6501e65c:	jne    0x6501e668
6501e65e:	call   DWORD PTR ds:0x6502403c
6501e664:	mov    edi,eax
6501e666:	jmp    0x6501e66a
6501e668:	xor    edi,edi
6501e66a:	push   esi
6501e66b:	call   0x6501db0e
6501e670:	mov    eax,esi
6501e672:	sar    eax,0x5
6501e675:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501e67c:	and    esi,0x1f
6501e67f:	shl    esi,0x6
6501e682:	test   edi,edi
6501e684:	pop    ecx
6501e685:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6501e68a:	je     0x6501e698
6501e68c:	push   edi
6501e68d:	call   0x650145a6
6501e692:	pop    ecx
6501e693:	or     eax,0xffffffff
6501e696:	jmp    0x6501e69a
6501e698:	xor    eax,eax
6501e69a:	pop    edi
6501e69b:	pop    esi
6501e69c:	ret    
6501e69d:	push   0x10
6501e69f:	push   0x65029ef8
6501e6a4:	call   0x65013e70
6501e6a9:	mov    eax,DWORD PTR [ebp+0x8]
6501e6ac:	cmp    eax,0xfffffffe
6501e6af:	jne    0x6501e6cc
6501e6b1:	call   0x65014593
6501e6b6:	and    DWORD PTR [eax],0x0
6501e6b9:	call   0x65014580
6501e6be:	mov    DWORD PTR [eax],0x9
6501e6c4:	or     eax,0xffffffff
6501e6c7:	jmp    0x6501e75a
6501e6cc:	xor    edi,edi
6501e6ce:	cmp    eax,edi
6501e6d0:	jl     0x6501e6da
6501e6d2:	cmp    eax,DWORD PTR ds:0x65031440
6501e6d8:	jb     0x6501e6fb
6501e6da:	call   0x65014593
6501e6df:	mov    DWORD PTR [eax],edi
6501e6e1:	call   0x65014580
6501e6e6:	mov    DWORD PTR [eax],0x9
6501e6ec:	push   edi
6501e6ed:	push   edi
6501e6ee:	push   edi
6501e6ef:	push   edi
6501e6f0:	push   edi
6501e6f1:	call   0x6501241f
6501e6f6:	add    esp,0x14
6501e6f9:	jmp    0x6501e6c4
6501e6fb:	mov    ecx,eax
6501e6fd:	sar    ecx,0x5
6501e700:	lea    ebx,[ecx*4+0x65031460]
6501e707:	mov    esi,eax
6501e709:	and    esi,0x1f
6501e70c:	shl    esi,0x6
6501e70f:	mov    ecx,DWORD PTR [ebx]
6501e711:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501e716:	and    ecx,0x1
6501e719:	je     0x6501e6da
6501e71b:	push   eax
6501e71c:	call   0x6501dc00
6501e721:	pop    ecx
6501e722:	mov    DWORD PTR [ebp-0x4],edi
6501e725:	mov    eax,DWORD PTR [ebx]
6501e727:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501e72c:	je     0x6501e73c
6501e72e:	push   DWORD PTR [ebp+0x8]
6501e731:	call   0x6501e606
6501e736:	pop    ecx
6501e737:	mov    DWORD PTR [ebp-0x1c],eax
6501e73a:	jmp    0x6501e74b
6501e73c:	call   0x65014580
6501e741:	mov    DWORD PTR [eax],0x9
6501e747:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e74b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e752:	call   0x6501e760
6501e757:	mov    eax,DWORD PTR [ebp-0x1c]
6501e75a:	call   0x65013eb5
6501e75f:	ret    
6501e760:	push   DWORD PTR [ebp+0x8]
6501e763:	call   0x6501dca0
6501e768:	pop    ecx
6501e769:	ret    
6501e76a:	push   esi
6501e76b:	mov    esi,DWORD PTR [esp+0x8]
6501e76f:	mov    eax,DWORD PTR [esi+0xc]
6501e772:	test   al,0x83
6501e774:	je     0x6501e794
6501e776:	test   al,0x8
6501e778:	je     0x6501e794
6501e77a:	push   DWORD PTR [esi+0x8]
6501e77d:	call   0x65013746
6501e782:	and    DWORD PTR [esi+0xc],0xfffffbf7
6501e789:	xor    eax,eax
6501e78b:	pop    ecx
6501e78c:	mov    DWORD PTR [esi],eax
6501e78e:	mov    DWORD PTR [esi+0x8],eax
6501e791:	mov    DWORD PTR [esi+0x4],eax
6501e794:	pop    esi
6501e795:	ret    
6501e796:	int3   
6501e797:	int3   
6501e798:	int3   
6501e799:	int3   
6501e79a:	int3   
6501e79b:	int3   
6501e79c:	int3   
6501e79d:	int3   
6501e79e:	int3   
6501e79f:	int3   
6501e7a0:	lea    eax,[edx-0x1]
6501e7a3:	pop    ebx
6501e7a4:	ret    
6501e7a5:	lea    esp,[esp+0x0]
6501e7ac:	lea    esp,[esp+0x0]
6501e7b0:	xor    eax,eax
6501e7b2:	mov    al,BYTE PTR [esp+0x8]
6501e7b6:	push   ebx
6501e7b7:	mov    ebx,eax
6501e7b9:	shl    eax,0x8
6501e7bc:	mov    edx,DWORD PTR [esp+0x8]
6501e7c0:	test   edx,0x3
6501e7c6:	je     0x6501e7dd
6501e7c8:	mov    cl,BYTE PTR [edx]
6501e7ca:	add    edx,0x1
6501e7cd:	cmp    cl,bl
6501e7cf:	je     0x6501e7a0
6501e7d1:	test   cl,cl
6501e7d3:	je     0x6501e826
6501e7d5:	test   edx,0x3
6501e7db:	jne    0x6501e7c8
6501e7dd:	or     ebx,eax
6501e7df:	push   edi
6501e7e0:	mov    eax,ebx
6501e7e2:	shl    ebx,0x10
6501e7e5:	push   esi
6501e7e6:	or     ebx,eax
6501e7e8:	mov    ecx,DWORD PTR [edx]
6501e7ea:	mov    edi,0x7efefeff
6501e7ef:	mov    eax,ecx
6501e7f1:	mov    esi,edi
6501e7f3:	xor    ecx,ebx
6501e7f5:	add    esi,eax
6501e7f7:	add    edi,ecx
6501e7f9:	xor    ecx,0xffffffff
6501e7fc:	xor    eax,0xffffffff
6501e7ff:	xor    ecx,edi
6501e801:	xor    eax,esi
6501e803:	add    edx,0x4
6501e806:	and    ecx,0x81010100
6501e80c:	jne    0x6501e82a
6501e80e:	and    eax,0x81010100
6501e813:	je     0x6501e7e8
6501e815:	and    eax,0x1010100
6501e81a:	jne    0x6501e824
6501e81c:	and    esi,0x80000000
6501e822:	jne    0x6501e7e8
6501e824:	pop    esi
6501e825:	pop    edi
6501e826:	pop    ebx
6501e827:	xor    eax,eax
6501e829:	ret    
6501e82a:	mov    eax,DWORD PTR [edx-0x4]
6501e82d:	cmp    al,bl
6501e82f:	je     0x6501e867
6501e831:	test   al,al
6501e833:	je     0x6501e824
6501e835:	cmp    ah,bl
6501e837:	je     0x6501e860
6501e839:	test   ah,ah
6501e83b:	je     0x6501e824
6501e83d:	shr    eax,0x10
6501e840:	cmp    al,bl
6501e842:	je     0x6501e859
6501e844:	test   al,al
6501e846:	je     0x6501e824
6501e848:	cmp    ah,bl
6501e84a:	je     0x6501e852
6501e84c:	test   ah,ah
6501e84e:	je     0x6501e824
6501e850:	jmp    0x6501e7e8
6501e852:	pop    esi
6501e853:	pop    edi
6501e854:	lea    eax,[edx-0x1]
6501e857:	pop    ebx
6501e858:	ret    
6501e859:	lea    eax,[edx-0x2]
6501e85c:	pop    esi
6501e85d:	pop    edi
6501e85e:	pop    ebx
6501e85f:	ret    
6501e860:	lea    eax,[edx-0x3]
6501e863:	pop    esi
6501e864:	pop    edi
6501e865:	pop    ebx
6501e866:	ret    
6501e867:	lea    eax,[edx-0x4]
6501e86a:	pop    esi
6501e86b:	pop    edi
6501e86c:	pop    ebx
6501e86d:	ret    
6501e86e:	int3   
6501e86f:	int3   
6501e870:	push   ebp
6501e871:	mov    ebp,esp
6501e873:	push   0xfffffffe
6501e875:	push   0x65029f18
6501e87a:	push   0x65013ee0
6501e87f:	mov    eax,fs:0x0
6501e885:	push   eax
6501e886:	sub    esp,0x18
6501e889:	mov    eax,ds:0x6502c09c
6501e88e:	xor    DWORD PTR [ebp-0x8],eax
6501e891:	xor    eax,ebp
6501e893:	mov    DWORD PTR [ebp-0x1c],eax
6501e896:	push   ebx
6501e897:	push   esi
6501e898:	push   edi
6501e899:	push   eax
6501e89a:	lea    eax,[ebp-0x10]
6501e89d:	mov    fs:0x0,eax
6501e8a3:	mov    DWORD PTR [ebp-0x18],esp
6501e8a6:	mov    esi,DWORD PTR [ebp+0x8]
6501e8a9:	test   esi,esi
6501e8ab:	je     0x6501e902
6501e8ad:	push   esi
6501e8ae:	call   DWORD PTR ds:0x6502404c
6501e8b4:	mov    edi,eax
6501e8b6:	add    edi,0x1
6501e8b9:	mov    DWORD PTR [ebp-0x20],edi
6501e8bc:	push   0x0
6501e8be:	push   0x0
6501e8c0:	push   edi
6501e8c1:	push   esi
6501e8c2:	push   0x0
6501e8c4:	push   0x0
6501e8c6:	call   DWORD PTR ds:0x6502401c
6501e8cc:	mov    esi,eax
6501e8ce:	mov    DWORD PTR [ebp-0x28],esi
6501e8d1:	test   esi,esi
6501e8d3:	jne    0x6501e909
6501e8d5:	mov    esi,DWORD PTR ds:0x6502403c
6501e8db:	call   esi
6501e8dd:	test   eax,eax
6501e8df:	jg     0x6501e8f0
6501e8e1:	call   esi
6501e8e3:	push   eax
6501e8e4:	call   0x6501ea00
6501e8e9:	xor    eax,eax
6501e8eb:	jmp    0x6501e9d0
6501e8f0:	call   esi
6501e8f2:	and    eax,0xffff
6501e8f7:	or     eax,0x80070000
6501e8fc:	push   eax
6501e8fd:	call   0x6501ea00
6501e902:	xor    eax,eax
6501e904:	jmp    0x6501e9d0
6501e909:	mov    DWORD PTR [ebp-0x4],0x0
6501e910:	lea    eax,[esi+esi*1]
6501e913:	cmp    esi,0x1000
6501e919:	jge    0x6501e933
6501e91b:	call   0x65013030
6501e920:	mov    DWORD PTR [ebp-0x18],esp
6501e923:	mov    eax,esp
6501e925:	mov    ebx,eax
6501e927:	mov    DWORD PTR [ebp-0x24],ebx
6501e92a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e931:	jmp    0x6501e965
6501e933:	push   eax
6501e934:	call   0x65013823
6501e939:	add    esp,0x4
6501e93c:	mov    ebx,eax
6501e93e:	mov    DWORD PTR [ebp-0x24],ebx
6501e941:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e948:	jmp    0x6501e965
6501e94a:	mov    eax,0x1
6501e94f:	ret    
6501e950:	mov    esp,DWORD PTR [ebp-0x18]
6501e953:	xor    ebx,ebx
6501e955:	mov    DWORD PTR [ebp-0x24],ebx
6501e958:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e95f:	mov    edi,DWORD PTR [ebp-0x20]
6501e962:	mov    esi,DWORD PTR [ebp-0x28]
6501e965:	test   ebx,ebx
6501e967:	jne    0x6501e977
6501e969:	push   0x8007000e
6501e96e:	call   0x6501ea00
6501e973:	xor    eax,eax
6501e975:	jmp    0x6501e9d0
6501e977:	push   esi
6501e978:	push   ebx
6501e979:	push   edi
6501e97a:	mov    ecx,DWORD PTR [ebp+0x8]
6501e97d:	push   ecx
6501e97e:	push   0x0
6501e980:	push   0x0
6501e982:	call   DWORD PTR ds:0x6502401c
6501e988:	test   eax,eax
6501e98a:	jne    0x6501e9a6
6501e98c:	cmp    esi,0x1000
6501e992:	jl     0x6501e8d5
6501e998:	push   ebx
6501e999:	call   0x65013746
6501e99e:	add    esp,0x4
6501e9a1:	jmp    0x6501e8d5
6501e9a6:	push   ebx
6501e9a7:	call   DWORD PTR ds:0x6502419c
6501e9ad:	mov    edi,eax
6501e9af:	cmp    esi,0x1000
6501e9b5:	jl     0x6501e9c0
6501e9b7:	push   ebx
6501e9b8:	call   0x65013746
6501e9bd:	add    esp,0x4
6501e9c0:	test   edi,edi
6501e9c2:	jne    0x6501e9ce
6501e9c4:	push   0x8007000e
6501e9c9:	call   0x6501ea00
6501e9ce:	mov    eax,edi
6501e9d0:	lea    esp,[ebp-0x38]
6501e9d3:	mov    ecx,DWORD PTR [ebp-0x10]
6501e9d6:	mov    DWORD PTR fs:0x0,ecx
6501e9dd:	pop    ecx
6501e9de:	pop    edi
6501e9df:	pop    esi
6501e9e0:	pop    ebx
6501e9e1:	mov    ecx,DWORD PTR [ebp-0x1c]
6501e9e4:	xor    ecx,ebp
6501e9e6:	call   0x6501292c
6501e9eb:	mov    esp,ebp
6501e9ed:	pop    ebp
6501e9ee:	ret    0x4
6501e9f1:	int3   
6501e9f2:	int3   
6501e9f3:	int3   
6501e9f4:	int3   
6501e9f5:	int3   
6501e9f6:	int3   
6501e9f7:	int3   
6501e9f8:	int3   
6501e9f9:	int3   
6501e9fa:	int3   
6501e9fb:	int3   
6501e9fc:	int3   
6501e9fd:	int3   
6501e9fe:	int3   
6501e9ff:	int3   
6501ea00:	mov    eax,DWORD PTR [esp+0x4]
6501ea04:	push   0x0
6501ea06:	push   eax
6501ea07:	call   DWORD PTR ds:0x6502d040
6501ea0d:	ret    0x4
6501ea10:	push   esi
6501ea11:	mov    esi,ecx
6501ea13:	mov    eax,DWORD PTR [esi+0x8]
6501ea16:	test   eax,eax
6501ea18:	mov    DWORD PTR [esi],0x650265c0
6501ea1e:	je     0x6501ea28
6501ea20:	mov    ecx,DWORD PTR [eax]
6501ea22:	mov    edx,DWORD PTR [ecx+0x8]
6501ea25:	push   eax
6501ea26:	call   edx
6501ea28:	cmp    DWORD PTR [esi+0xc],0x0
6501ea2c:	je     0x6501ea45
6501ea2e:	call   DWORD PTR ds:0x650240fc
6501ea34:	test   eax,eax
6501ea36:	je     0x6501ea45
6501ea38:	mov    ecx,DWORD PTR [esi+0xc]
6501ea3b:	push   ecx
6501ea3c:	push   0x0
6501ea3e:	push   eax
6501ea3f:	call   DWORD PTR ds:0x650240f0
6501ea45:	pop    esi
6501ea46:	ret    
6501ea47:	int3   
6501ea48:	int3   
6501ea49:	int3   
6501ea4a:	int3   
6501ea4b:	int3   
6501ea4c:	int3   
6501ea4d:	int3   
6501ea4e:	int3   
6501ea4f:	int3   
6501ea50:	sub    esp,0x10
6501ea53:	mov    eax,DWORD PTR [esp+0x14]
6501ea57:	mov    ecx,DWORD PTR [esp+0x18]
6501ea5b:	push   0x65029f34
6501ea60:	lea    edx,[esp+0x4]
6501ea64:	push   edx
6501ea65:	mov    DWORD PTR [esp+0x8],0x650265c0
6501ea6d:	mov    DWORD PTR [esp+0xc],eax
6501ea71:	mov    DWORD PTR [esp+0x10],ecx
6501ea75:	mov    DWORD PTR [esp+0x14],0x0
6501ea7d:	call   0x650124d6
6501ea82:	int3   
6501ea83:	int3   
6501ea84:	int3   
6501ea85:	int3   
6501ea86:	int3   
6501ea87:	int3   
6501ea88:	int3   
6501ea89:	int3   
6501ea8a:	int3   
6501ea8b:	int3   
6501ea8c:	int3   
6501ea8d:	int3   
6501ea8e:	int3   
6501ea8f:	int3   
6501ea90:	mov    eax,DWORD PTR [esp+0x4]
6501ea94:	push   esi
6501ea95:	mov    esi,ecx
6501ea97:	mov    DWORD PTR [esi],0x650265c0
6501ea9d:	mov    ecx,DWORD PTR [eax+0x4]
6501eaa0:	mov    DWORD PTR [esi+0x4],ecx
6501eaa3:	mov    edx,DWORD PTR [eax+0x8]
6501eaa6:	mov    eax,edx
6501eaa8:	test   eax,eax
6501eaaa:	mov    DWORD PTR [esi+0x8],edx
6501eaad:	mov    DWORD PTR [esi+0xc],0x0
6501eab4:	je     0x6501eabe
6501eab6:	mov    ecx,DWORD PTR [eax]
6501eab8:	mov    edx,DWORD PTR [ecx+0x4]
6501eabb:	push   eax
6501eabc:	call   edx
6501eabe:	mov    eax,esi
6501eac0:	pop    esi
6501eac1:	ret    0x4
6501eac4:	int3   
6501eac5:	int3   
6501eac6:	int3   
6501eac7:	int3   
6501eac8:	int3   
6501eac9:	int3   
6501eaca:	int3   
6501eacb:	int3   
6501eacc:	int3   
6501eacd:	int3   
6501eace:	int3   
6501eacf:	int3   
6501ead0:	push   esi
6501ead1:	mov    esi,ecx
6501ead3:	mov    eax,DWORD PTR [esi+0x8]
6501ead6:	test   eax,eax
6501ead8:	mov    DWORD PTR [esi],0x650265c0
6501eade:	je     0x6501eae8
6501eae0:	mov    ecx,DWORD PTR [eax]
6501eae2:	mov    edx,DWORD PTR [ecx+0x8]
6501eae5:	push   eax
6501eae6:	call   edx
6501eae8:	cmp    DWORD PTR [esi+0xc],0x0
6501eaec:	je     0x6501eb05
6501eaee:	call   DWORD PTR ds:0x650240fc
6501eaf4:	test   eax,eax
6501eaf6:	je     0x6501eb05
6501eaf8:	mov    ecx,DWORD PTR [esi+0xc]
6501eafb:	push   ecx
6501eafc:	push   0x0
6501eafe:	push   eax
6501eaff:	call   DWORD PTR ds:0x650240f0
6501eb05:	test   BYTE PTR [esp+0x8],0x1
6501eb0a:	je     0x6501eb15
6501eb0c:	push   esi
6501eb0d:	call   0x650120d2
6501eb12:	add    esp,0x4
6501eb15:	mov    eax,esi
6501eb17:	pop    esi
6501eb18:	ret    0x4
6501eb1b:	int3   
6501eb1c:	jmp    DWORD PTR ds:0x65024110
6501eb22:	push   ebp
6501eb23:	mov    ebp,esp
6501eb25:	sub    esp,0xc
6501eb28:	mov    eax,ds:0x6502c09c
6501eb2d:	xor    eax,ebp
6501eb2f:	mov    DWORD PTR [ebp-0x4],eax
6501eb32:	push   ebx
6501eb33:	push   esi
6501eb34:	push   edi
6501eb35:	mov    edi,DWORD PTR [ebp+0x8]
6501eb38:	xor    ebx,ebx
6501eb3a:	cmp    edi,ebx
6501eb3c:	jne    0x6501eb5a
6501eb3e:	call   0x65014580
6501eb43:	push   0x16
6501eb45:	pop    esi
6501eb46:	push   ebx
6501eb47:	push   ebx
6501eb48:	push   ebx
6501eb49:	push   ebx
6501eb4a:	push   ebx
6501eb4b:	mov    DWORD PTR [eax],esi
6501eb4d:	call   0x6501241f
6501eb52:	add    esp,0x14
6501eb55:	jmp    0x6501ec8f
6501eb5a:	push   DWORD PTR [ebp+0xc]
6501eb5d:	push   edi
6501eb5e:	call   0x6501e5ec
6501eb63:	cmp    eax,DWORD PTR [ebp+0xc]
6501eb66:	pop    ecx
6501eb67:	pop    ecx
6501eb68:	jb     0x6501eb6e
6501eb6a:	mov    BYTE PTR [edi],bl
6501eb6c:	jmp    0x6501eb3e
6501eb6e:	mov    edx,DWORD PTR [ebp+0x10]
6501eb71:	mov    eax,DWORD PTR [edx]
6501eb73:	mov    ecx,DWORD PTR [eax+0x14]
6501eb76:	cmp    ecx,ebx
6501eb78:	jne    0x6501eb9a
6501eb7a:	cmp    BYTE PTR [edi],bl
6501eb7c:	mov    ecx,edi
6501eb7e:	je     0x6501eb93
6501eb80:	mov    al,BYTE PTR [ecx]
6501eb82:	cmp    al,0x41
6501eb84:	jl     0x6501eb8e
6501eb86:	cmp    al,0x5a
6501eb88:	jg     0x6501eb8e
6501eb8a:	add    al,0x20
6501eb8c:	mov    BYTE PTR [ecx],al
6501eb8e:	inc    ecx
6501eb8f:	cmp    BYTE PTR [ecx],bl
6501eb91:	jne    0x6501eb80
6501eb93:	xor    eax,eax
6501eb95:	jmp    0x6501ec91
6501eb9a:	push   0x1
6501eb9c:	push   DWORD PTR [eax+0x4]
6501eb9f:	mov    esi,0x100
6501eba4:	push   ebx
6501eba5:	push   ebx
6501eba6:	push   0xffffffff
6501eba8:	push   edi
6501eba9:	push   esi
6501ebaa:	push   ecx
6501ebab:	push   edx
6501ebac:	call   0x65019c1c
6501ebb1:	mov    ecx,eax
6501ebb3:	add    esp,0x24
6501ebb6:	cmp    ecx,ebx
6501ebb8:	mov    DWORD PTR [ebp-0xc],ecx
6501ebbb:	jne    0x6501ebd4
6501ebbd:	call   0x65014580
6501ebc2:	mov    DWORD PTR [eax],0x2a
6501ebc8:	call   0x65014580
6501ebcd:	mov    eax,DWORD PTR [eax]
6501ebcf:	jmp    0x6501ec91
6501ebd4:	cmp    DWORD PTR [ebp+0xc],ecx
6501ebd7:	jae    0x6501ebe7
6501ebd9:	mov    BYTE PTR [edi],bl
6501ebdb:	call   0x65014580
6501ebe0:	push   0x22
6501ebe2:	jmp    0x6501eb45
6501ebe7:	cmp    ecx,ebx
6501ebe9:	jle    0x6501ec30
6501ebeb:	push   0xffffffe0
6501ebed:	xor    edx,edx
6501ebef:	pop    eax
6501ebf0:	div    ecx
6501ebf2:	cmp    eax,0x1
6501ebf5:	jb     0x6501ec30
6501ebf7:	lea    eax,[ecx+0x8]
6501ebfa:	cmp    eax,0x400
6501ebff:	ja     0x6501ec14
6501ec01:	call   0x65013030
6501ec06:	mov    eax,esp
6501ec08:	cmp    eax,ebx
6501ec0a:	je     0x6501ec28
6501ec0c:	mov    DWORD PTR [eax],0xcccc
6501ec12:	jmp    0x6501ec25
6501ec14:	push   eax
6501ec15:	call   0x65013823
6501ec1a:	cmp    eax,ebx
6501ec1c:	pop    ecx
6501ec1d:	je     0x6501ec28
6501ec1f:	mov    DWORD PTR [eax],0xdddd
6501ec25:	add    eax,0x8
6501ec28:	mov    ecx,DWORD PTR [ebp-0xc]
6501ec2b:	mov    DWORD PTR [ebp-0x8],eax
6501ec2e:	jmp    0x6501ec33
6501ec30:	mov    DWORD PTR [ebp-0x8],ebx
6501ec33:	cmp    DWORD PTR [ebp-0x8],ebx
6501ec36:	jne    0x6501ec45
6501ec38:	call   0x65014580
6501ec3d:	mov    DWORD PTR [eax],0xc
6501ec43:	jmp    0x6501ebc8
6501ec45:	mov    edx,DWORD PTR [ebp+0x10]
6501ec48:	mov    eax,DWORD PTR [edx]
6501ec4a:	push   0x1
6501ec4c:	push   DWORD PTR [eax+0x4]
6501ec4f:	push   ecx
6501ec50:	push   DWORD PTR [ebp-0x8]
6501ec53:	push   0xffffffff
6501ec55:	push   edi
6501ec56:	push   esi
6501ec57:	push   DWORD PTR [eax+0x14]
6501ec5a:	push   edx
6501ec5b:	call   0x65019c1c
6501ec60:	add    esp,0x24
6501ec63:	test   eax,eax
6501ec65:	je     0x6501ec7a
6501ec67:	push   DWORD PTR [ebp-0x8]
6501ec6a:	push   DWORD PTR [ebp+0xc]
6501ec6d:	push   edi
6501ec6e:	call   0x65014174
6501ec73:	add    esp,0xc
6501ec76:	mov    esi,eax
6501ec78:	jmp    0x6501ec86
6501ec7a:	call   0x65014580
6501ec7f:	push   0x2a
6501ec81:	pop    ecx
6501ec82:	mov    DWORD PTR [eax],ecx
6501ec84:	mov    esi,ecx
6501ec86:	push   DWORD PTR [ebp-0x8]
6501ec89:	call   0x65012dc2
6501ec8e:	pop    ecx
6501ec8f:	mov    eax,esi
6501ec91:	lea    esp,[ebp-0x18]
6501ec94:	pop    edi
6501ec95:	pop    esi
6501ec96:	pop    ebx
6501ec97:	mov    ecx,DWORD PTR [ebp-0x4]
6501ec9a:	xor    ecx,ebp
6501ec9c:	call   0x6501292c
6501eca1:	leave  
6501eca2:	ret    
6501eca3:	push   ebp
6501eca4:	mov    ebp,esp
6501eca6:	sub    esp,0x10
6501eca9:	push   DWORD PTR [ebp+0x10]
6501ecac:	lea    ecx,[ebp-0x10]
6501ecaf:	call   0x65012acf
6501ecb4:	lea    eax,[ebp-0x10]
6501ecb7:	push   eax
6501ecb8:	push   DWORD PTR [ebp+0xc]
6501ecbb:	push   DWORD PTR [ebp+0x8]
6501ecbe:	call   0x6501eb22
6501ecc3:	add    esp,0xc
6501ecc6:	cmp    BYTE PTR [ebp-0x4],0x0
6501ecca:	je     0x6501ecd3
6501eccc:	mov    ecx,DWORD PTR [ebp-0x8]
6501eccf:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501ecd3:	leave  
6501ecd4:	ret    
6501ecd5:	push   ebx
6501ecd6:	xor    ebx,ebx
6501ecd8:	cmp    DWORD PTR ds:0x6502d954,ebx
6501ecde:	jne    0x6501ed22
6501ece0:	mov    eax,DWORD PTR [esp+0x8]
6501ece4:	cmp    eax,ebx
6501ece6:	jne    0x6501ed04
6501ece8:	call   0x65014580
6501eced:	push   ebx
6501ecee:	push   ebx
6501ecef:	push   ebx
6501ecf0:	push   ebx
6501ecf1:	push   ebx
6501ecf2:	mov    DWORD PTR [eax],0x16
6501ecf8:	call   0x6501241f
6501ecfd:	add    esp,0x14
6501ed00:	xor    eax,eax
6501ed02:	pop    ebx
6501ed03:	ret    
6501ed04:	cmp    BYTE PTR [eax],bl
6501ed06:	mov    edx,eax
6501ed08:	je     0x6501ed35
6501ed0a:	mov    cl,BYTE PTR [edx]
6501ed0c:	cmp    cl,0x41
6501ed0f:	jl     0x6501ed1b
6501ed11:	cmp    cl,0x5a
6501ed14:	jg     0x6501ed1b
6501ed16:	add    cl,0x20
6501ed19:	mov    BYTE PTR [edx],cl
6501ed1b:	inc    edx
6501ed1c:	cmp    BYTE PTR [edx],bl
6501ed1e:	jne    0x6501ed0a
6501ed20:	pop    ebx
6501ed21:	ret    
6501ed22:	push   ebx
6501ed23:	push   0xffffffff
6501ed25:	push   DWORD PTR [esp+0x10]
6501ed29:	call   0x6501eca3
6501ed2e:	mov    eax,DWORD PTR [esp+0x14]
6501ed32:	add    esp,0xc
6501ed35:	pop    ebx
6501ed36:	ret    
6501ed37:	mov    eax,0x6501f842
6501ed3c:	mov    ds:0x6502cb44,eax
6501ed41:	mov    DWORD PTR ds:0x6502cb48,0x6501ef3e
6501ed4b:	mov    DWORD PTR ds:0x6502cb4c,0x6501eefc
6501ed55:	mov    DWORD PTR ds:0x6502cb50,0x6501ef30
6501ed5f:	mov    DWORD PTR ds:0x6502cb54,0x6501eea6
6501ed69:	mov    ds:0x6502cb58,eax
6501ed6e:	mov    DWORD PTR ds:0x6502cb5c,0x6501f7bc
6501ed78:	mov    DWORD PTR ds:0x6502cb60,0x6501eebc
6501ed82:	mov    DWORD PTR ds:0x6502cb64,0x6501ee26
6501ed8c:	mov    DWORD PTR ds:0x6502cb68,0x6501edb5
6501ed96:	ret    
6501ed97:	call   0x6501ed37
6501ed9c:	call   0x6501f8c8
6501eda1:	cmp    DWORD PTR [esp+0x4],0x0
6501eda6:	mov    ds:0x6502e054,eax
6501edab:	je     0x6501edb2
6501edad:	call   0x6501f863
6501edb2:	fnclex 
6501edb4:	ret    
6501edb5:	push   ebp
6501edb6:	mov    ebp,esp
6501edb8:	sub    esp,0x10
6501edbb:	push   esi
6501edbc:	push   DWORD PTR [ebp+0xc]
6501edbf:	lea    ecx,[ebp-0x10]
6501edc2:	call   0x65012acf
6501edc7:	mov    esi,DWORD PTR [ebp+0x8]
6501edca:	movsx  eax,BYTE PTR [esi]
6501edcd:	push   eax
6501edce:	call   0x650135b0
6501edd3:	cmp    eax,0x65
6501edd6:	jmp    0x6501ede4
6501edd8:	inc    esi
6501edd9:	movzx  eax,BYTE PTR [esi]
6501eddc:	push   eax
6501eddd:	call   0x65013626
6501ede2:	test   eax,eax
6501ede4:	pop    ecx
6501ede5:	jne    0x6501edd8
6501ede7:	movsx  eax,BYTE PTR [esi]
6501edea:	push   eax
6501edeb:	call   0x650135b0
6501edf0:	cmp    eax,0x78
6501edf3:	pop    ecx
6501edf4:	jne    0x6501edf8
6501edf6:	inc    esi
6501edf7:	inc    esi
6501edf8:	mov    ecx,DWORD PTR [ebp-0x10]
6501edfb:	mov    ecx,DWORD PTR [ecx+0xbc]
6501ee01:	mov    ecx,DWORD PTR [ecx]
6501ee03:	mov    al,BYTE PTR [esi]
6501ee05:	mov    cl,BYTE PTR [ecx]
6501ee07:	mov    BYTE PTR [esi],cl
6501ee09:	inc    esi
6501ee0a:	mov    cl,BYTE PTR [esi]
6501ee0c:	mov    BYTE PTR [esi],al
6501ee0e:	mov    al,cl
6501ee10:	mov    cl,BYTE PTR [esi]
6501ee12:	inc    esi
6501ee13:	test   cl,cl
6501ee15:	jne    0x6501ee0a
6501ee17:	cmp    BYTE PTR [ebp-0x4],cl
6501ee1a:	pop    esi
6501ee1b:	je     0x6501ee24
6501ee1d:	mov    eax,DWORD PTR [ebp-0x8]
6501ee20:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ee24:	leave  
6501ee25:	ret    
6501ee26:	push   ebp
6501ee27:	mov    ebp,esp
6501ee29:	sub    esp,0x10
6501ee2c:	push   esi
6501ee2d:	push   DWORD PTR [ebp+0xc]
6501ee30:	lea    ecx,[ebp-0x10]
6501ee33:	call   0x65012acf
6501ee38:	mov    eax,DWORD PTR [ebp+0x8]
6501ee3b:	mov    cl,BYTE PTR [eax]
6501ee3d:	test   cl,cl
6501ee3f:	mov    esi,DWORD PTR [ebp-0x10]
6501ee42:	je     0x6501ee59
6501ee44:	mov    edx,DWORD PTR [esi+0xbc]
6501ee4a:	mov    edx,DWORD PTR [edx]
6501ee4c:	mov    dl,BYTE PTR [edx]
6501ee4e:	cmp    cl,dl
6501ee50:	je     0x6501ee59
6501ee52:	inc    eax
6501ee53:	mov    cl,BYTE PTR [eax]
6501ee55:	test   cl,cl
6501ee57:	jne    0x6501ee4e
6501ee59:	mov    cl,BYTE PTR [eax]
6501ee5b:	inc    eax
6501ee5c:	test   cl,cl
6501ee5e:	je     0x6501ee96
6501ee60:	jmp    0x6501ee6d
6501ee62:	cmp    cl,0x65
6501ee65:	je     0x6501ee73
6501ee67:	cmp    cl,0x45
6501ee6a:	je     0x6501ee73
6501ee6c:	inc    eax
6501ee6d:	mov    cl,BYTE PTR [eax]
6501ee6f:	test   cl,cl
6501ee71:	jne    0x6501ee62
6501ee73:	mov    edx,eax
6501ee75:	dec    eax
6501ee76:	cmp    BYTE PTR [eax],0x30
6501ee79:	je     0x6501ee75
6501ee7b:	mov    ecx,DWORD PTR [esi+0xbc]
6501ee81:	mov    ecx,DWORD PTR [ecx]
6501ee83:	push   ebx
6501ee84:	mov    bl,BYTE PTR [eax]
6501ee86:	cmp    bl,BYTE PTR [ecx]
6501ee88:	pop    ebx
6501ee89:	jne    0x6501ee8c
6501ee8b:	dec    eax
6501ee8c:	mov    cl,BYTE PTR [edx]
6501ee8e:	inc    eax
6501ee8f:	inc    edx
6501ee90:	test   cl,cl
6501ee92:	mov    BYTE PTR [eax],cl
6501ee94:	jne    0x6501ee8c
6501ee96:	cmp    BYTE PTR [ebp-0x4],0x0
6501ee9a:	pop    esi
6501ee9b:	je     0x6501eea4
6501ee9d:	mov    eax,DWORD PTR [ebp-0x8]
6501eea0:	and    DWORD PTR [eax+0x70],0xfffffffd
6501eea4:	leave  
6501eea5:	ret    
6501eea6:	fldz   
6501eea8:	mov    eax,DWORD PTR [esp+0x4]
6501eeac:	fcomp  QWORD PTR [eax]
6501eeae:	fnstsw ax
6501eeb0:	test   ah,0x41
6501eeb3:	jp     0x6501eeb9
6501eeb5:	xor    eax,eax
6501eeb7:	inc    eax
6501eeb8:	ret    
6501eeb9:	xor    eax,eax
6501eebb:	ret    
6501eebc:	push   ebp
6501eebd:	mov    ebp,esp
6501eebf:	push   ecx
6501eec0:	push   ecx
6501eec1:	cmp    DWORD PTR [ebp+0x8],0x0
6501eec5:	push   DWORD PTR [ebp+0x14]
6501eec8:	push   DWORD PTR [ebp+0x10]
6501eecb:	je     0x6501eee6
6501eecd:	lea    eax,[ebp-0x8]
6501eed0:	push   eax
6501eed1:	call   0x6501f92d
6501eed6:	mov    ecx,DWORD PTR [ebp-0x8]
6501eed9:	mov    eax,DWORD PTR [ebp+0xc]
6501eedc:	mov    DWORD PTR [eax],ecx
6501eede:	mov    ecx,DWORD PTR [ebp-0x4]
6501eee1:	mov    DWORD PTR [eax+0x4],ecx
6501eee4:	jmp    0x6501eef7
6501eee6:	lea    eax,[ebp+0x8]
6501eee9:	push   eax
6501eeea:	call   0x6501f9d3
6501eeef:	mov    eax,DWORD PTR [ebp+0xc]
6501eef2:	mov    ecx,DWORD PTR [ebp+0x8]
6501eef5:	mov    DWORD PTR [eax],ecx
6501eef7:	add    esp,0xc
6501eefa:	leave  
6501eefb:	ret    
6501eefc:	push   0x0
6501eefe:	push   DWORD PTR [esp+0x10]
6501ef02:	push   DWORD PTR [esp+0x10]
6501ef06:	push   DWORD PTR [esp+0x10]
6501ef0a:	call   0x6501eebc
6501ef0f:	add    esp,0x10
6501ef12:	ret    
6501ef13:	test   edi,edi
6501ef15:	push   esi
6501ef16:	mov    esi,eax
6501ef18:	je     0x6501ef2e
6501ef1a:	push   esi
6501ef1b:	call   0x65014080
6501ef20:	inc    eax
6501ef21:	push   eax
6501ef22:	push   esi
6501ef23:	add    esi,edi
6501ef25:	push   esi
6501ef26:	call   0x650138f0
6501ef2b:	add    esp,0x10
6501ef2e:	pop    esi
6501ef2f:	ret    
6501ef30:	push   0x0
6501ef32:	push   DWORD PTR [esp+0x8]
6501ef36:	call   0x6501edb5
6501ef3b:	pop    ecx
6501ef3c:	pop    ecx
6501ef3d:	ret    
6501ef3e:	push   0x0
6501ef40:	push   DWORD PTR [esp+0x8]
6501ef44:	call   0x6501ee26
6501ef49:	pop    ecx
6501ef4a:	pop    ecx
6501ef4b:	ret    
6501ef4c:	push   ebp
6501ef4d:	mov    ebp,esp
6501ef4f:	sub    esp,0x10
6501ef52:	push   ebx
6501ef53:	push   esi
6501ef54:	push   edi
6501ef55:	push   DWORD PTR [ebp+0x1c]
6501ef58:	lea    ecx,[ebp-0x10]
6501ef5b:	mov    ebx,eax
6501ef5d:	call   0x65012acf
6501ef62:	xor    esi,esi
6501ef64:	cmp    ebx,esi
6501ef66:	jne    0x6501ef93
6501ef68:	call   0x65014580
6501ef6d:	push   0x16
6501ef6f:	pop    edi
6501ef70:	push   esi
6501ef71:	push   esi
6501ef72:	push   esi
6501ef73:	push   esi
6501ef74:	push   esi
6501ef75:	mov    DWORD PTR [eax],edi
6501ef77:	call   0x6501241f
6501ef7c:	add    esp,0x14
6501ef7f:	cmp    BYTE PTR [ebp-0x4],0x0
6501ef83:	je     0x6501ef8c
6501ef85:	mov    eax,DWORD PTR [ebp-0x8]
6501ef88:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ef8c:	mov    eax,edi
6501ef8e:	jmp    0x6501f0b4
6501ef93:	cmp    DWORD PTR [ebp+0x8],esi
6501ef96:	jbe    0x6501ef68
6501ef98:	cmp    DWORD PTR [ebp+0xc],esi
6501ef9b:	jle    0x6501efa2
6501ef9d:	mov    eax,DWORD PTR [ebp+0xc]
6501efa0:	jmp    0x6501efa4
6501efa2:	xor    eax,eax
6501efa4:	add    eax,0x9
6501efa7:	cmp    DWORD PTR [ebp+0x8],eax
6501efaa:	ja     0x6501efb5
6501efac:	call   0x65014580
6501efb1:	push   0x22
6501efb3:	jmp    0x6501ef6f
6501efb5:	cmp    BYTE PTR [ebp+0x18],0x0
6501efb9:	je     0x6501efd9
6501efbb:	mov    edx,DWORD PTR [ebp+0x14]
6501efbe:	xor    eax,eax
6501efc0:	cmp    DWORD PTR [ebp+0xc],esi
6501efc3:	setg   al
6501efc6:	xor    ecx,ecx
6501efc8:	cmp    DWORD PTR [edx],0x2d
6501efcb:	sete   cl
6501efce:	mov    edi,eax
6501efd0:	add    ecx,ebx
6501efd2:	mov    eax,ecx
6501efd4:	call   0x6501ef13
6501efd9:	mov    edi,DWORD PTR [ebp+0x14]
6501efdc:	cmp    DWORD PTR [edi],0x2d
6501efdf:	mov    esi,ebx
6501efe1:	jne    0x6501efe9
6501efe3:	mov    BYTE PTR [ebx],0x2d
6501efe6:	lea    esi,[ebx+0x1]
6501efe9:	cmp    DWORD PTR [ebp+0xc],0x0
6501efed:	jle    0x6501f007
6501efef:	lea    eax,[esi+0x1]
6501eff2:	mov    cl,BYTE PTR [eax]
6501eff4:	mov    BYTE PTR [esi],cl
6501eff6:	mov    esi,eax
6501eff8:	mov    eax,DWORD PTR [ebp-0x10]
6501effb:	mov    eax,DWORD PTR [eax+0xbc]
6501f001:	mov    eax,DWORD PTR [eax]
6501f003:	mov    al,BYTE PTR [eax]
6501f005:	mov    BYTE PTR [esi],al
6501f007:	xor    eax,eax
6501f009:	cmp    BYTE PTR [ebp+0x18],al
6501f00c:	sete   al
6501f00f:	add    eax,DWORD PTR [ebp+0xc]
6501f012:	add    esi,eax
6501f014:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6501f018:	jne    0x6501f01f
6501f01a:	or     ebx,0xffffffff
6501f01d:	jmp    0x6501f024
6501f01f:	sub    ebx,esi
6501f021:	add    ebx,DWORD PTR [ebp+0x8]
6501f024:	push   0x650265d0
6501f029:	push   ebx
6501f02a:	push   esi
6501f02b:	call   0x65014174
6501f030:	add    esp,0xc
6501f033:	xor    ebx,ebx
6501f035:	test   eax,eax
6501f037:	je     0x6501f046
6501f039:	push   ebx
6501f03a:	push   ebx
6501f03b:	push   ebx
6501f03c:	push   ebx
6501f03d:	push   ebx
6501f03e:	call   0x65012323
6501f043:	add    esp,0x14
6501f046:	cmp    DWORD PTR [ebp+0x10],ebx
6501f049:	lea    ecx,[esi+0x2]
6501f04c:	je     0x6501f051
6501f04e:	mov    BYTE PTR [esi],0x45
6501f051:	mov    eax,DWORD PTR [edi+0xc]
6501f054:	inc    esi
6501f055:	cmp    BYTE PTR [eax],0x30
6501f058:	je     0x6501f088
6501f05a:	mov    eax,DWORD PTR [edi+0x4]
6501f05d:	dec    eax
6501f05e:	jns    0x6501f065
6501f060:	neg    eax
6501f062:	mov    BYTE PTR [esi],0x2d
6501f065:	inc    esi
6501f066:	cmp    eax,0x64
6501f069:	jl     0x6501f075
6501f06b:	cdq    
6501f06c:	push   0x64
6501f06e:	pop    edi
6501f06f:	idiv   edi
6501f071:	add    BYTE PTR [esi],al
6501f073:	mov    eax,edx
6501f075:	inc    esi
6501f076:	cmp    eax,0xa
6501f079:	jl     0x6501f085
6501f07b:	cdq    
6501f07c:	push   0xa
6501f07e:	pop    edi
6501f07f:	idiv   edi
6501f081:	add    BYTE PTR [esi],al
6501f083:	mov    eax,edx
6501f085:	add    BYTE PTR [esi+0x1],al
6501f088:	test   BYTE PTR ds:0x6502e058,0x1
6501f08f:	je     0x6501f0a5
6501f091:	cmp    BYTE PTR [ecx],0x30
6501f094:	jne    0x6501f0a5
6501f096:	push   0x3
6501f098:	lea    eax,[ecx+0x1]
6501f09b:	push   eax
6501f09c:	push   ecx
6501f09d:	call   0x650138f0
6501f0a2:	add    esp,0xc
6501f0a5:	cmp    BYTE PTR [ebp-0x4],0x0
6501f0a9:	je     0x6501f0b2
6501f0ab:	mov    eax,DWORD PTR [ebp-0x8]
6501f0ae:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f0b2:	xor    eax,eax
6501f0b4:	pop    edi
6501f0b5:	pop    esi
6501f0b6:	pop    ebx
6501f0b7:	leave  
6501f0b8:	ret    
6501f0b9:	push   ebp
6501f0ba:	mov    ebp,esp
6501f0bc:	sub    esp,0x2c
6501f0bf:	mov    eax,ds:0x6502c09c
6501f0c4:	xor    eax,ebp
6501f0c6:	mov    DWORD PTR [ebp-0x4],eax
6501f0c9:	mov    eax,DWORD PTR [ebp+0x8]
6501f0cc:	push   ebx
6501f0cd:	push   esi
6501f0ce:	push   edi
6501f0cf:	mov    edi,DWORD PTR [ebp+0xc]
6501f0d2:	push   0x16
6501f0d4:	pop    esi
6501f0d5:	push   esi
6501f0d6:	lea    ecx,[ebp-0x1c]
6501f0d9:	push   ecx
6501f0da:	lea    ecx,[ebp-0x2c]
6501f0dd:	push   ecx
6501f0de:	push   DWORD PTR [eax+0x4]
6501f0e1:	push   DWORD PTR [eax]
6501f0e3:	call   0x6501fbf1
6501f0e8:	xor    ebx,ebx
6501f0ea:	add    esp,0x14
6501f0ed:	cmp    edi,ebx
6501f0ef:	jne    0x6501f109
6501f0f1:	call   0x65014580
6501f0f6:	push   ebx
6501f0f7:	push   ebx
6501f0f8:	push   ebx
6501f0f9:	push   ebx
6501f0fa:	push   ebx
6501f0fb:	mov    DWORD PTR [eax],esi
6501f0fd:	call   0x6501241f
6501f102:	add    esp,0x14
6501f105:	mov    eax,esi
6501f107:	jmp    0x6501f178
6501f109:	mov    eax,DWORD PTR [ebp+0x10]
6501f10c:	cmp    eax,ebx
6501f10e:	jbe    0x6501f0f1
6501f110:	cmp    eax,0xffffffff
6501f113:	mov    esi,DWORD PTR [ebp+0x14]
6501f116:	jne    0x6501f11d
6501f118:	or     eax,0xffffffff
6501f11b:	jmp    0x6501f131
6501f11d:	xor    ecx,ecx
6501f11f:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f123:	sete   cl
6501f126:	sub    eax,ecx
6501f128:	xor    ecx,ecx
6501f12a:	cmp    esi,ebx
6501f12c:	setg   cl
6501f12f:	sub    eax,ecx
6501f131:	lea    ecx,[ebp-0x2c]
6501f134:	push   ecx
6501f135:	lea    ecx,[esi+0x1]
6501f138:	push   ecx
6501f139:	push   eax
6501f13a:	xor    eax,eax
6501f13c:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f140:	sete   al
6501f143:	xor    ecx,ecx
6501f145:	cmp    esi,ebx
6501f147:	setg   cl
6501f14a:	add    eax,edi
6501f14c:	add    ecx,eax
6501f14e:	push   ecx
6501f14f:	call   0x6501fa79
6501f154:	add    esp,0x10
6501f157:	cmp    eax,ebx
6501f159:	je     0x6501f15f
6501f15b:	mov    BYTE PTR [edi],bl
6501f15d:	jmp    0x6501f178
6501f15f:	push   DWORD PTR [ebp+0x1c]
6501f162:	lea    eax,[ebp-0x2c]
6501f165:	push   ebx
6501f166:	push   eax
6501f167:	push   DWORD PTR [ebp+0x18]
6501f16a:	mov    eax,edi
6501f16c:	push   esi
6501f16d:	push   DWORD PTR [ebp+0x10]
6501f170:	call   0x6501ef4c
6501f175:	add    esp,0x18
6501f178:	mov    ecx,DWORD PTR [ebp-0x4]
6501f17b:	pop    edi
6501f17c:	pop    esi
6501f17d:	xor    ecx,ebp
6501f17f:	pop    ebx
6501f180:	call   0x6501292c
6501f185:	leave  
6501f186:	ret    
6501f187:	push   ebp
6501f188:	mov    ebp,esp
6501f18a:	push   0x0
6501f18c:	push   DWORD PTR [ebp+0x18]
6501f18f:	push   DWORD PTR [ebp+0x14]
6501f192:	push   DWORD PTR [ebp+0x10]
6501f195:	push   DWORD PTR [ebp+0xc]
6501f198:	push   DWORD PTR [ebp+0x8]
6501f19b:	call   0x6501f0b9
6501f1a0:	add    esp,0x18
6501f1a3:	pop    ebp
6501f1a4:	ret    
6501f1a5:	push   ebp
6501f1a6:	mov    ebp,esp
6501f1a8:	sub    esp,0x24
6501f1ab:	push   esi
6501f1ac:	push   edi
6501f1ad:	push   DWORD PTR [ebp+0x1c]
6501f1b0:	lea    ecx,[ebp-0x24]
6501f1b3:	mov    DWORD PTR [ebp-0x14],0x3ff
6501f1ba:	xor    edi,edi
6501f1bc:	mov    DWORD PTR [ebp-0x4],0x30
6501f1c3:	call   0x65012acf
6501f1c8:	cmp    DWORD PTR [ebp+0x14],edi
6501f1cb:	jge    0x6501f1d0
6501f1cd:	mov    DWORD PTR [ebp+0x14],edi
6501f1d0:	mov    esi,DWORD PTR [ebp+0xc]
6501f1d3:	cmp    esi,edi
6501f1d5:	jne    0x6501f202
6501f1d7:	call   0x65014580
6501f1dc:	push   0x16
6501f1de:	pop    esi
6501f1df:	push   edi
6501f1e0:	push   edi
6501f1e1:	push   edi
6501f1e2:	push   edi
6501f1e3:	push   edi
6501f1e4:	mov    DWORD PTR [eax],esi
6501f1e6:	call   0x6501241f
6501f1eb:	add    esp,0x14
6501f1ee:	cmp    BYTE PTR [ebp-0x18],0x0
6501f1f2:	je     0x6501f1fb
6501f1f4:	mov    eax,DWORD PTR [ebp-0x1c]
6501f1f7:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f1fb:	mov    eax,esi
6501f1fd:	jmp    0x6501f512
6501f202:	cmp    DWORD PTR [ebp+0x10],edi
6501f205:	jbe    0x6501f1d7
6501f207:	mov    eax,DWORD PTR [ebp+0x14]
6501f20a:	add    eax,0xb
6501f20d:	cmp    DWORD PTR [ebp+0x10],eax
6501f210:	mov    BYTE PTR [esi],0x0
6501f213:	ja     0x6501f21e
6501f215:	call   0x65014580
6501f21a:	push   0x22
6501f21c:	jmp    0x6501f1de
6501f21e:	mov    edi,DWORD PTR [ebp+0x8]
6501f221:	mov    eax,DWORD PTR [edi]
6501f223:	mov    DWORD PTR [ebp-0xc],eax
6501f226:	mov    eax,DWORD PTR [edi+0x4]
6501f229:	mov    ecx,eax
6501f22b:	shr    ecx,0x14
6501f22e:	mov    edx,0x7ff
6501f233:	push   ebx
6501f234:	and    ecx,edx
6501f236:	xor    ebx,ebx
6501f238:	cmp    ecx,edx
6501f23a:	jne    0x6501f2d0
6501f240:	test   ebx,ebx
6501f242:	jne    0x6501f2d0
6501f248:	mov    eax,DWORD PTR [ebp+0x10]
6501f24b:	cmp    eax,0xffffffff
6501f24e:	jne    0x6501f254
6501f250:	or     eax,eax
6501f252:	jmp    0x6501f257
6501f254:	add    eax,0xfffffffe
6501f257:	push   0x0
6501f259:	push   DWORD PTR [ebp+0x14]
6501f25c:	lea    ebx,[esi+0x2]
6501f25f:	push   eax
6501f260:	push   ebx
6501f261:	push   edi
6501f262:	call   0x6501f187
6501f267:	add    esp,0x14
6501f26a:	test   eax,eax
6501f26c:	je     0x6501f287
6501f26e:	cmp    BYTE PTR [ebp-0x18],0x0
6501f272:	mov    BYTE PTR [esi],0x0
6501f275:	je     0x6501f511
6501f27b:	mov    ecx,DWORD PTR [ebp-0x1c]
6501f27e:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501f282:	jmp    0x6501f511
6501f287:	cmp    BYTE PTR [ebx],0x2d
6501f28a:	jne    0x6501f290
6501f28c:	mov    BYTE PTR [esi],0x2d
6501f28f:	inc    esi
6501f290:	mov    BYTE PTR [esi],0x30
6501f293:	inc    esi
6501f294:	cmp    DWORD PTR [ebp+0x18],0x0
6501f298:	push   0x65
6501f29a:	sete   al
6501f29d:	dec    al
6501f29f:	and    al,0xe0
6501f2a1:	add    al,0x78
6501f2a3:	mov    BYTE PTR [esi],al
6501f2a5:	inc    esi
6501f2a6:	push   esi
6501f2a7:	call   0x6501f900
6501f2ac:	test   eax,eax
6501f2ae:	pop    ecx
6501f2af:	pop    ecx
6501f2b0:	je     0x6501f502
6501f2b6:	cmp    DWORD PTR [ebp+0x18],0x0
6501f2ba:	sete   cl
6501f2bd:	dec    cl
6501f2bf:	and    cl,0xe0
6501f2c2:	add    cl,0x70
6501f2c5:	mov    BYTE PTR [eax],cl
6501f2c7:	mov    BYTE PTR [eax+0x3],0x0
6501f2cb:	jmp    0x6501f502
6501f2d0:	and    eax,0x80000000
6501f2d5:	xor    ecx,ecx
6501f2d7:	or     ecx,eax
6501f2d9:	je     0x6501f2df
6501f2db:	mov    BYTE PTR [esi],0x2d
6501f2de:	inc    esi
6501f2df:	mov    ebx,DWORD PTR [ebp+0x18]
6501f2e2:	mov    BYTE PTR [esi],0x30
6501f2e5:	inc    esi
6501f2e6:	test   ebx,ebx
6501f2e8:	sete   al
6501f2eb:	dec    al
6501f2ed:	and    al,0xe0
6501f2ef:	add    al,0x78
6501f2f1:	mov    BYTE PTR [esi],al
6501f2f3:	mov    ecx,DWORD PTR [edi+0x4]
6501f2f6:	inc    esi
6501f2f7:	neg    ebx
6501f2f9:	sbb    ebx,ebx
6501f2fb:	and    ebx,0xffffffe0
6501f2fe:	and    ecx,0x7ff00000
6501f304:	xor    eax,eax
6501f306:	add    ebx,0x27
6501f309:	xor    edx,edx
6501f30b:	or     eax,ecx
6501f30d:	jne    0x6501f330
6501f30f:	mov    BYTE PTR [esi],0x30
6501f312:	mov    ecx,DWORD PTR [edi+0x4]
6501f315:	mov    eax,DWORD PTR [edi]
6501f317:	and    ecx,0xfffff
6501f31d:	inc    esi
6501f31e:	or     eax,ecx
6501f320:	jne    0x6501f327
6501f322:	mov    DWORD PTR [ebp-0x14],edx
6501f325:	jmp    0x6501f334
6501f327:	mov    DWORD PTR [ebp-0x14],0x3fe
6501f32e:	jmp    0x6501f334
6501f330:	mov    BYTE PTR [esi],0x31
6501f333:	inc    esi
6501f334:	mov    eax,esi
6501f336:	inc    esi
6501f337:	cmp    DWORD PTR [ebp+0x14],edx
6501f33a:	mov    DWORD PTR [ebp+0xc],eax
6501f33d:	jne    0x6501f343
6501f33f:	mov    BYTE PTR [eax],dl
6501f341:	jmp    0x6501f352
6501f343:	mov    ecx,DWORD PTR [ebp-0x24]
6501f346:	mov    ecx,DWORD PTR [ecx+0xbc]
6501f34c:	mov    ecx,DWORD PTR [ecx]
6501f34e:	mov    cl,BYTE PTR [ecx]
6501f350:	mov    BYTE PTR [eax],cl
6501f352:	mov    ecx,DWORD PTR [edi+0x4]
6501f355:	mov    eax,DWORD PTR [edi]
6501f357:	and    ecx,0xfffff
6501f35d:	mov    DWORD PTR [ebp-0x8],ecx
6501f360:	ja     0x6501f36a
6501f362:	cmp    eax,edx
6501f364:	jbe    0x6501f41f
6501f36a:	mov    DWORD PTR [ebp-0xc],edx
6501f36d:	mov    DWORD PTR [ebp-0x8],0xf0000
6501f374:	cmp    DWORD PTR [ebp+0x14],0x0
6501f378:	jle    0x6501f3c7
6501f37a:	mov    edx,DWORD PTR [edi+0x4]
6501f37d:	and    edx,DWORD PTR [ebp-0x8]
6501f380:	mov    eax,DWORD PTR [edi]
6501f382:	movsx  ecx,WORD PTR [ebp-0x4]
6501f386:	and    eax,DWORD PTR [ebp-0xc]
6501f389:	and    edx,0xfffff
6501f38f:	call   0x6501fd60
6501f394:	add    ax,0x30
6501f398:	movzx  eax,ax
6501f39b:	cmp    ax,0x39
6501f39f:	jbe    0x6501f3a3
6501f3a1:	add    eax,ebx
6501f3a3:	mov    ecx,DWORD PTR [ebp-0x8]
6501f3a6:	sub    DWORD PTR [ebp-0x4],0x4
6501f3aa:	mov    BYTE PTR [esi],al
6501f3ac:	mov    eax,DWORD PTR [ebp-0xc]
6501f3af:	shrd   eax,ecx,0x4
6501f3b3:	shr    ecx,0x4
6501f3b6:	inc    esi
6501f3b7:	dec    DWORD PTR [ebp+0x14]
6501f3ba:	cmp    WORD PTR [ebp-0x4],0x0
6501f3bf:	mov    DWORD PTR [ebp-0xc],eax
6501f3c2:	mov    DWORD PTR [ebp-0x8],ecx
6501f3c5:	jge    0x6501f374
6501f3c7:	cmp    WORD PTR [ebp-0x4],0x0
6501f3cc:	jl     0x6501f41f
6501f3ce:	mov    edx,DWORD PTR [edi+0x4]
6501f3d1:	and    edx,DWORD PTR [ebp-0x8]
6501f3d4:	mov    eax,DWORD PTR [edi]
6501f3d6:	movsx  ecx,WORD PTR [ebp-0x4]
6501f3da:	and    eax,DWORD PTR [ebp-0xc]
6501f3dd:	and    edx,0xfffff
6501f3e3:	call   0x6501fd60
6501f3e8:	cmp    ax,0x8
6501f3ec:	jbe    0x6501f41f
6501f3ee:	lea    eax,[esi-0x1]
6501f3f1:	mov    cl,BYTE PTR [eax]
6501f3f3:	cmp    cl,0x66
6501f3f6:	je     0x6501f3fd
6501f3f8:	cmp    cl,0x46
6501f3fb:	jne    0x6501f403
6501f3fd:	mov    BYTE PTR [eax],0x30
6501f400:	dec    eax
6501f401:	jmp    0x6501f3f1
6501f403:	cmp    eax,DWORD PTR [ebp+0xc]
6501f406:	je     0x6501f41c
6501f408:	mov    cl,BYTE PTR [eax]
6501f40a:	cmp    cl,0x39
6501f40d:	jne    0x6501f416
6501f40f:	add    bl,0x3a
6501f412:	mov    BYTE PTR [eax],bl
6501f414:	jmp    0x6501f41f
6501f416:	inc    cl
6501f418:	mov    BYTE PTR [eax],cl
6501f41a:	jmp    0x6501f41f
6501f41c:	inc    BYTE PTR [eax-0x1]
6501f41f:	cmp    DWORD PTR [ebp+0x14],0x0
6501f423:	jle    0x6501f436
6501f425:	push   DWORD PTR [ebp+0x14]
6501f428:	push   0x30
6501f42a:	push   esi
6501f42b:	call   0x65012fb0
6501f430:	add    esp,0xc
6501f433:	add    esi,DWORD PTR [ebp+0x14]
6501f436:	mov    eax,DWORD PTR [ebp+0xc]
6501f439:	cmp    BYTE PTR [eax],0x0
6501f43c:	jne    0x6501f440
6501f43e:	mov    esi,eax
6501f440:	cmp    DWORD PTR [ebp+0x18],0x0
6501f444:	mov    cl,0x34
6501f446:	sete   al
6501f449:	dec    al
6501f44b:	and    al,0xe0
6501f44d:	add    al,0x70
6501f44f:	mov    BYTE PTR [esi],al
6501f451:	mov    eax,DWORD PTR [edi]
6501f453:	mov    edx,DWORD PTR [edi+0x4]
6501f456:	inc    esi
6501f457:	call   0x6501fd60
6501f45c:	xor    ebx,ebx
6501f45e:	and    eax,0x7ff
6501f463:	and    edx,ebx
6501f465:	sub    eax,DWORD PTR [ebp-0x14]
6501f468:	push   ebx
6501f469:	pop    ecx
6501f46a:	sbb    edx,ecx
6501f46c:	js     0x6501f47a
6501f46e:	jg     0x6501f474
6501f470:	cmp    eax,ebx
6501f472:	jb     0x6501f47a
6501f474:	mov    BYTE PTR [esi],0x2b
6501f477:	inc    esi
6501f478:	jmp    0x6501f484
6501f47a:	mov    BYTE PTR [esi],0x2d
6501f47d:	inc    esi
6501f47e:	neg    eax
6501f480:	adc    edx,ebx
6501f482:	neg    edx
6501f484:	cmp    edx,ebx
6501f486:	mov    edi,esi
6501f488:	mov    BYTE PTR [esi],0x30
6501f48b:	jl     0x6501f4b1
6501f48d:	mov    ecx,0x3e8
6501f492:	jg     0x6501f498
6501f494:	cmp    eax,ecx
6501f496:	jb     0x6501f4b1
6501f498:	push   ebx
6501f499:	push   ecx
6501f49a:	push   edx
6501f49b:	push   eax
6501f49c:	call   0x6501fc80
6501f4a1:	add    al,0x30
6501f4a3:	mov    BYTE PTR [esi],al
6501f4a5:	inc    esi
6501f4a6:	cmp    esi,edi
6501f4a8:	mov    DWORD PTR [ebp-0x10],edx
6501f4ab:	mov    eax,ecx
6501f4ad:	mov    edx,ebx
6501f4af:	jne    0x6501f4bc
6501f4b1:	test   edx,edx
6501f4b3:	jl     0x6501f4d3
6501f4b5:	jg     0x6501f4bc
6501f4b7:	cmp    eax,0x64
6501f4ba:	jb     0x6501f4d3
6501f4bc:	push   0x0
6501f4be:	push   0x64
6501f4c0:	push   edx
6501f4c1:	push   eax
6501f4c2:	call   0x6501fc80
6501f4c7:	add    al,0x30
6501f4c9:	mov    BYTE PTR [esi],al
6501f4cb:	mov    DWORD PTR [ebp-0x10],edx
6501f4ce:	inc    esi
6501f4cf:	mov    eax,ecx
6501f4d1:	mov    edx,ebx
6501f4d3:	cmp    esi,edi
6501f4d5:	jne    0x6501f4e2
6501f4d7:	test   edx,edx
6501f4d9:	jl     0x6501f4fa
6501f4db:	jg     0x6501f4e2
6501f4dd:	cmp    eax,0xa
6501f4e0:	jb     0x6501f4fa
6501f4e2:	push   0x0
6501f4e4:	push   0xa
6501f4e6:	push   edx
6501f4e7:	push   eax
6501f4e8:	call   0x6501fc80
6501f4ed:	add    al,0x30
6501f4ef:	mov    BYTE PTR [esi],al
6501f4f1:	mov    DWORD PTR [ebp-0x10],edx
6501f4f4:	inc    esi
6501f4f5:	mov    eax,ecx
6501f4f7:	mov    DWORD PTR [ebp-0x10],ebx
6501f4fa:	add    al,0x30
6501f4fc:	mov    BYTE PTR [esi],al
6501f4fe:	mov    BYTE PTR [esi+0x1],0x0
6501f502:	cmp    BYTE PTR [ebp-0x18],0x0
6501f506:	je     0x6501f50f
6501f508:	mov    eax,DWORD PTR [ebp-0x1c]
6501f50b:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f50f:	xor    eax,eax
6501f511:	pop    ebx
6501f512:	pop    edi
6501f513:	pop    esi
6501f514:	leave  
6501f515:	ret    
6501f516:	push   ebp
6501f517:	mov    ebp,esp
6501f519:	sub    esp,0x10
6501f51c:	push   ebx
6501f51d:	push   esi
6501f51e:	push   edi
6501f51f:	push   DWORD PTR [ebp+0x14]
6501f522:	mov    ebx,eax
6501f524:	mov    esi,DWORD PTR [ebx+0x4]
6501f527:	mov    edi,ecx
6501f529:	lea    ecx,[ebp-0x10]
6501f52c:	dec    esi
6501f52d:	call   0x65012acf
6501f532:	test   edi,edi
6501f534:	jne    0x6501f563
6501f536:	call   0x65014580
6501f53b:	push   0x16
6501f53d:	pop    esi
6501f53e:	mov    DWORD PTR [eax],esi
6501f540:	xor    eax,eax
6501f542:	push   eax
6501f543:	push   eax
6501f544:	push   eax
6501f545:	push   eax
6501f546:	push   eax
6501f547:	call   0x6501241f
6501f54c:	add    esp,0x14
6501f54f:	cmp    BYTE PTR [ebp-0x4],0x0
6501f553:	je     0x6501f55c
6501f555:	mov    eax,DWORD PTR [ebp-0x8]
6501f558:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f55c:	mov    eax,esi
6501f55e:	jmp    0x6501f606
6501f563:	cmp    DWORD PTR [ebp+0x8],0x0
6501f567:	jbe    0x6501f536
6501f569:	cmp    BYTE PTR [ebp+0x10],0x0
6501f56d:	je     0x6501f587
6501f56f:	cmp    esi,DWORD PTR [ebp+0xc]
6501f572:	jne    0x6501f587
6501f574:	xor    eax,eax
6501f576:	cmp    DWORD PTR [ebx],0x2d
6501f579:	sete   al
6501f57c:	add    eax,esi
6501f57e:	add    eax,edi
6501f580:	mov    BYTE PTR [eax],0x30
6501f583:	mov    BYTE PTR [eax+0x1],0x0
6501f587:	cmp    DWORD PTR [ebx],0x2d
6501f58a:	mov    esi,edi
6501f58c:	jne    0x6501f594
6501f58e:	mov    BYTE PTR [edi],0x2d
6501f591:	lea    esi,[edi+0x1]
6501f594:	mov    eax,DWORD PTR [ebx+0x4]
6501f597:	xor    edi,edi
6501f599:	inc    edi
6501f59a:	test   eax,eax
6501f59c:	jg     0x6501f5ab
6501f59e:	mov    eax,esi
6501f5a0:	call   0x6501ef13
6501f5a5:	mov    BYTE PTR [esi],0x30
6501f5a8:	inc    esi
6501f5a9:	jmp    0x6501f5ad
6501f5ab:	add    esi,eax
6501f5ad:	cmp    DWORD PTR [ebp+0xc],0x0
6501f5b1:	jle    0x6501f5f7
6501f5b3:	mov    eax,esi
6501f5b5:	call   0x6501ef13
6501f5ba:	mov    eax,DWORD PTR [ebp-0x10]
6501f5bd:	mov    eax,DWORD PTR [eax+0xbc]
6501f5c3:	mov    eax,DWORD PTR [eax]
6501f5c5:	mov    al,BYTE PTR [eax]
6501f5c7:	mov    BYTE PTR [esi],al
6501f5c9:	mov    ebx,DWORD PTR [ebx+0x4]
6501f5cc:	inc    esi
6501f5cd:	test   ebx,ebx
6501f5cf:	jge    0x6501f5f7
6501f5d1:	neg    ebx
6501f5d3:	cmp    BYTE PTR [ebp+0x10],0x0
6501f5d7:	jne    0x6501f5de
6501f5d9:	cmp    DWORD PTR [ebp+0xc],ebx
6501f5dc:	jl     0x6501f5e1
6501f5de:	mov    DWORD PTR [ebp+0xc],ebx
6501f5e1:	mov    edi,DWORD PTR [ebp+0xc]
6501f5e4:	mov    eax,esi
6501f5e6:	call   0x6501ef13
6501f5eb:	push   edi
6501f5ec:	push   0x30
6501f5ee:	push   esi
6501f5ef:	call   0x65012fb0
6501f5f4:	add    esp,0xc
6501f5f7:	cmp    BYTE PTR [ebp-0x4],0x0
6501f5fb:	je     0x6501f604
6501f5fd:	mov    eax,DWORD PTR [ebp-0x8]
6501f600:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f604:	xor    eax,eax
6501f606:	pop    edi
6501f607:	pop    esi
6501f608:	pop    ebx
6501f609:	leave  
6501f60a:	ret    
6501f60b:	push   ebp
6501f60c:	mov    ebp,esp
6501f60e:	sub    esp,0x2c
6501f611:	mov    eax,ds:0x6502c09c
6501f616:	xor    eax,ebp
6501f618:	mov    DWORD PTR [ebp-0x4],eax
6501f61b:	mov    eax,DWORD PTR [ebp+0x8]
6501f61e:	push   ebx
6501f61f:	push   esi
6501f620:	push   edi
6501f621:	mov    edi,DWORD PTR [ebp+0xc]
6501f624:	push   0x16
6501f626:	pop    esi
6501f627:	push   esi
6501f628:	lea    ecx,[ebp-0x1c]
6501f62b:	push   ecx
6501f62c:	lea    ecx,[ebp-0x2c]
6501f62f:	push   ecx
6501f630:	push   DWORD PTR [eax+0x4]
6501f633:	push   DWORD PTR [eax]
6501f635:	call   0x6501fbf1
6501f63a:	xor    ebx,ebx
6501f63c:	add    esp,0x14
6501f63f:	cmp    edi,ebx
6501f641:	jne    0x6501f65b
6501f643:	call   0x65014580
6501f648:	push   ebx
6501f649:	push   ebx
6501f64a:	push   ebx
6501f64b:	push   ebx
6501f64c:	push   ebx
6501f64d:	mov    DWORD PTR [eax],esi
6501f64f:	call   0x6501241f
6501f654:	add    esp,0x14
6501f657:	mov    eax,esi
6501f659:	jmp    0x6501f6b5
6501f65b:	mov    eax,DWORD PTR [ebp+0x10]
6501f65e:	cmp    eax,ebx
6501f660:	jbe    0x6501f643
6501f662:	cmp    eax,0xffffffff
6501f665:	jne    0x6501f66b
6501f667:	or     eax,eax
6501f669:	jmp    0x6501f676
6501f66b:	xor    ecx,ecx
6501f66d:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f671:	sete   cl
6501f674:	sub    eax,ecx
6501f676:	mov    esi,DWORD PTR [ebp+0x14]
6501f679:	lea    ecx,[ebp-0x2c]
6501f67c:	push   ecx
6501f67d:	mov    ecx,DWORD PTR [ebp-0x28]
6501f680:	add    ecx,esi
6501f682:	push   ecx
6501f683:	push   eax
6501f684:	xor    eax,eax
6501f686:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f68a:	sete   al
6501f68d:	add    eax,edi
6501f68f:	push   eax
6501f690:	call   0x6501fa79
6501f695:	add    esp,0x10
6501f698:	cmp    eax,ebx
6501f69a:	je     0x6501f6a0
6501f69c:	mov    BYTE PTR [edi],bl
6501f69e:	jmp    0x6501f6b5
6501f6a0:	push   DWORD PTR [ebp+0x18]
6501f6a3:	lea    eax,[ebp-0x2c]
6501f6a6:	push   ebx
6501f6a7:	push   esi
6501f6a8:	push   DWORD PTR [ebp+0x10]
6501f6ab:	mov    ecx,edi
6501f6ad:	call   0x6501f516
6501f6b2:	add    esp,0x10
6501f6b5:	mov    ecx,DWORD PTR [ebp-0x4]
6501f6b8:	pop    edi
6501f6b9:	pop    esi
6501f6ba:	xor    ecx,ebp
6501f6bc:	pop    ebx
6501f6bd:	call   0x6501292c
6501f6c2:	leave  
6501f6c3:	ret    
6501f6c4:	push   ebp
6501f6c5:	mov    ebp,esp
6501f6c7:	sub    esp,0x30
6501f6ca:	mov    eax,ds:0x6502c09c
6501f6cf:	xor    eax,ebp
6501f6d1:	mov    DWORD PTR [ebp-0x4],eax
6501f6d4:	mov    eax,DWORD PTR [ebp+0x8]
6501f6d7:	push   ebx
6501f6d8:	push   esi
6501f6d9:	mov    esi,DWORD PTR [ebp+0xc]
6501f6dc:	push   edi
6501f6dd:	push   0x16
6501f6df:	pop    edi
6501f6e0:	push   edi
6501f6e1:	lea    ecx,[ebp-0x1c]
6501f6e4:	push   ecx
6501f6e5:	lea    ecx,[ebp-0x30]
6501f6e8:	push   ecx
6501f6e9:	push   DWORD PTR [eax+0x4]
6501f6ec:	push   DWORD PTR [eax]
6501f6ee:	call   0x6501fbf1
6501f6f3:	xor    ebx,ebx
6501f6f5:	add    esp,0x14
6501f6f8:	cmp    esi,ebx
6501f6fa:	jne    0x6501f717
6501f6fc:	call   0x65014580
6501f701:	push   ebx
6501f702:	push   ebx
6501f703:	push   ebx
6501f704:	push   ebx
6501f705:	push   ebx
6501f706:	mov    DWORD PTR [eax],edi
6501f708:	call   0x6501241f
6501f70d:	add    esp,0x14
6501f710:	mov    eax,edi
6501f712:	jmp    0x6501f7ad
6501f717:	mov    ecx,DWORD PTR [ebp+0x10]
6501f71a:	cmp    ecx,ebx
6501f71c:	jbe    0x6501f6fc
6501f71e:	mov    eax,DWORD PTR [ebp-0x2c]
6501f721:	dec    eax
6501f722:	mov    DWORD PTR [ebp-0x20],eax
6501f725:	xor    eax,eax
6501f727:	cmp    DWORD PTR [ebp-0x30],0x2d
6501f72b:	sete   al
6501f72e:	cmp    ecx,0xffffffff
6501f731:	lea    edi,[eax+esi*1]
6501f734:	jne    0x6501f73a
6501f736:	or     ecx,ecx
6501f738:	jmp    0x6501f73c
6501f73a:	sub    ecx,eax
6501f73c:	lea    eax,[ebp-0x30]
6501f73f:	push   eax
6501f740:	push   DWORD PTR [ebp+0x14]
6501f743:	push   ecx
6501f744:	push   edi
6501f745:	call   0x6501fa79
6501f74a:	add    esp,0x10
6501f74d:	cmp    eax,ebx
6501f74f:	je     0x6501f755
6501f751:	mov    BYTE PTR [esi],bl
6501f753:	jmp    0x6501f7ad
6501f755:	mov    eax,DWORD PTR [ebp-0x2c]
6501f758:	dec    eax
6501f759:	cmp    DWORD PTR [ebp-0x20],eax
6501f75c:	setl   cl
6501f75f:	cmp    eax,0xfffffffc
6501f762:	jl     0x6501f791
6501f764:	cmp    eax,DWORD PTR [ebp+0x14]
6501f767:	jge    0x6501f791
6501f769:	cmp    cl,bl
6501f76b:	je     0x6501f777
6501f76d:	mov    al,BYTE PTR [edi]
6501f76f:	inc    edi
6501f770:	test   al,al
6501f772:	jne    0x6501f76d
6501f774:	mov    BYTE PTR [edi-0x2],bl
6501f777:	push   DWORD PTR [ebp+0x1c]
6501f77a:	lea    eax,[ebp-0x30]
6501f77d:	push   0x1
6501f77f:	push   DWORD PTR [ebp+0x14]
6501f782:	mov    ecx,esi
6501f784:	push   DWORD PTR [ebp+0x10]
6501f787:	call   0x6501f516
6501f78c:	add    esp,0x10
6501f78f:	jmp    0x6501f7ad
6501f791:	push   DWORD PTR [ebp+0x1c]
6501f794:	lea    eax,[ebp-0x30]
6501f797:	push   0x1
6501f799:	push   eax
6501f79a:	push   DWORD PTR [ebp+0x18]
6501f79d:	mov    eax,esi
6501f79f:	push   DWORD PTR [ebp+0x14]
6501f7a2:	push   DWORD PTR [ebp+0x10]
6501f7a5:	call   0x6501ef4c
6501f7aa:	add    esp,0x18
6501f7ad:	mov    ecx,DWORD PTR [ebp-0x4]
6501f7b0:	pop    edi
6501f7b1:	pop    esi
6501f7b2:	xor    ecx,ebp
6501f7b4:	pop    ebx
6501f7b5:	call   0x6501292c
6501f7ba:	leave  
6501f7bb:	ret    
6501f7bc:	push   ebp
6501f7bd:	mov    ebp,esp
6501f7bf:	mov    eax,DWORD PTR [ebp+0x14]
6501f7c2:	cmp    eax,0x65
6501f7c5:	je     0x6501f826
6501f7c7:	cmp    eax,0x45
6501f7ca:	je     0x6501f826
6501f7cc:	cmp    eax,0x66
6501f7cf:	jne    0x6501f7ea
6501f7d1:	push   DWORD PTR [ebp+0x20]
6501f7d4:	push   DWORD PTR [ebp+0x18]
6501f7d7:	push   DWORD PTR [ebp+0x10]
6501f7da:	push   DWORD PTR [ebp+0xc]
6501f7dd:	push   DWORD PTR [ebp+0x8]
6501f7e0:	call   0x6501f60b
6501f7e5:	add    esp,0x14
6501f7e8:	pop    ebp
6501f7e9:	ret    
6501f7ea:	cmp    eax,0x61
6501f7ed:	je     0x6501f80d
6501f7ef:	cmp    eax,0x41
6501f7f2:	je     0x6501f80d
6501f7f4:	push   DWORD PTR [ebp+0x20]
6501f7f7:	push   DWORD PTR [ebp+0x1c]
6501f7fa:	push   DWORD PTR [ebp+0x18]
6501f7fd:	push   DWORD PTR [ebp+0x10]
6501f800:	push   DWORD PTR [ebp+0xc]
6501f803:	push   DWORD PTR [ebp+0x8]
6501f806:	call   0x6501f6c4
6501f80b:	jmp    0x6501f83d
6501f80d:	push   DWORD PTR [ebp+0x20]
6501f810:	push   DWORD PTR [ebp+0x1c]
6501f813:	push   DWORD PTR [ebp+0x18]
6501f816:	push   DWORD PTR [ebp+0x10]
6501f819:	push   DWORD PTR [ebp+0xc]
6501f81c:	push   DWORD PTR [ebp+0x8]
6501f81f:	call   0x6501f1a5
6501f824:	jmp    0x6501f83d
6501f826:	push   DWORD PTR [ebp+0x20]
6501f829:	push   DWORD PTR [ebp+0x1c]
6501f82c:	push   DWORD PTR [ebp+0x18]
6501f82f:	push   DWORD PTR [ebp+0x10]
6501f832:	push   DWORD PTR [ebp+0xc]
6501f835:	push   DWORD PTR [ebp+0x8]
6501f838:	call   0x6501f0b9
6501f83d:	add    esp,0x18
6501f840:	pop    ebp
6501f841:	ret    
6501f842:	push   ebp
6501f843:	mov    ebp,esp
6501f845:	push   0x0
6501f847:	push   DWORD PTR [ebp+0x1c]
6501f84a:	push   DWORD PTR [ebp+0x18]
6501f84d:	push   DWORD PTR [ebp+0x14]
6501f850:	push   DWORD PTR [ebp+0x10]
6501f853:	push   DWORD PTR [ebp+0xc]
6501f856:	push   DWORD PTR [ebp+0x8]
6501f859:	call   0x6501f7bc
6501f85e:	add    esp,0x1c
6501f861:	pop    ebp
6501f862:	ret    
6501f863:	push   esi
6501f864:	push   0x30000
6501f869:	push   0x10000
6501f86e:	xor    esi,esi
6501f870:	push   esi
6501f871:	call   0x6501fd7f
6501f876:	add    esp,0xc
6501f879:	test   eax,eax
6501f87b:	je     0x6501f88a
6501f87d:	push   esi
6501f87e:	push   esi
6501f87f:	push   esi
6501f880:	push   esi
6501f881:	push   esi
6501f882:	call   0x65012323
6501f887:	add    esp,0x14
6501f88a:	pop    esi
6501f88b:	ret    
6501f88c:	push   ebp
6501f88d:	mov    ebp,esp
6501f88f:	sub    esp,0x18
6501f892:	fld    QWORD PTR ds:0x650265e0
6501f898:	fstp   QWORD PTR [ebp-0x10]
6501f89b:	fld    QWORD PTR ds:0x650265d8
6501f8a1:	fstp   QWORD PTR [ebp-0x18]
6501f8a4:	fld    QWORD PTR [ebp-0x18]
6501f8a7:	fdiv   QWORD PTR [ebp-0x10]
6501f8aa:	fmul   QWORD PTR [ebp-0x10]
6501f8ad:	fsubr  QWORD PTR [ebp-0x18]
6501f8b0:	fstp   QWORD PTR [ebp-0x8]
6501f8b3:	fld1   
6501f8b5:	fcomp  QWORD PTR [ebp-0x8]
6501f8b8:	fnstsw ax
6501f8ba:	test   ah,0x5
6501f8bd:	jp     0x6501f8c4
6501f8bf:	xor    eax,eax
6501f8c1:	inc    eax
6501f8c2:	leave  
6501f8c3:	ret    
6501f8c4:	xor    eax,eax
6501f8c6:	leave  
6501f8c7:	ret    
6501f8c8:	push   0x65026604
6501f8cd:	call   DWORD PTR ds:0x6502411c
6501f8d3:	test   eax,eax
6501f8d5:	je     0x6501f8ec
6501f8d7:	push   0x650265e8
6501f8dc:	push   eax
6501f8dd:	call   DWORD PTR ds:0x6502408c
6501f8e3:	test   eax,eax
6501f8e5:	je     0x6501f8ec
6501f8e7:	push   0x0
6501f8e9:	call   eax
6501f8eb:	ret    
6501f8ec:	jmp    0x6501f88c
6501f8f1:	int3   
6501f8f2:	int3   
6501f8f3:	int3   
6501f8f4:	int3   
6501f8f5:	int3   
6501f8f6:	int3   
6501f8f7:	int3   
6501f8f8:	int3   
6501f8f9:	int3   
6501f8fa:	int3   
6501f8fb:	int3   
6501f8fc:	int3   
6501f8fd:	int3   
6501f8fe:	int3   
6501f8ff:	int3   
6501f900:	push   ebp
6501f901:	mov    ebp,esp
6501f903:	push   edi
6501f904:	mov    edi,DWORD PTR [ebp+0x8]
6501f907:	xor    eax,eax
6501f909:	or     ecx,0xffffffff
6501f90c:	repnz scas al,BYTE PTR es:[edi]
6501f90e:	add    ecx,0x1
6501f911:	neg    ecx
6501f913:	sub    edi,0x1
6501f916:	mov    al,BYTE PTR [ebp+0xc]
6501f919:	std    
6501f91a:	repnz scas al,BYTE PTR es:[edi]
6501f91c:	add    edi,0x1
6501f91f:	cmp    BYTE PTR [edi],al
6501f921:	je     0x6501f927
6501f923:	xor    eax,eax
6501f925:	jmp    0x6501f929
6501f927:	mov    eax,edi
6501f929:	cld    
6501f92a:	pop    edi
6501f92b:	leave  
6501f92c:	ret    
6501f92d:	push   ebp
6501f92e:	mov    ebp,esp
6501f930:	sub    esp,0x28
6501f933:	mov    eax,ds:0x6502c09c
6501f938:	xor    eax,ebp
6501f93a:	mov    DWORD PTR [ebp-0x4],eax
6501f93d:	push   ebx
6501f93e:	push   esi
6501f93f:	mov    esi,DWORD PTR [ebp+0x8]
6501f942:	push   edi
6501f943:	push   DWORD PTR [ebp+0x10]
6501f946:	mov    edi,DWORD PTR [ebp+0xc]
6501f949:	lea    ecx,[ebp-0x24]
6501f94c:	call   0x65012acf
6501f951:	lea    eax,[ebp-0x24]
6501f954:	push   eax
6501f955:	xor    ebx,ebx
6501f957:	push   ebx
6501f958:	push   ebx
6501f959:	push   ebx
6501f95a:	push   ebx
6501f95b:	push   edi
6501f95c:	lea    eax,[ebp-0x28]
6501f95f:	push   eax
6501f960:	lea    eax,[ebp-0x10]
6501f963:	push   eax
6501f964:	call   0x6502086d
6501f969:	mov    DWORD PTR [ebp-0x14],eax
6501f96c:	lea    eax,[ebp-0x10]
6501f96f:	push   esi
6501f970:	push   eax
6501f971:	call   0x6501fde9
6501f976:	add    esp,0x28
6501f979:	test   BYTE PTR [ebp-0x14],0x3
6501f97d:	jne    0x6501f9aa
6501f97f:	cmp    eax,0x1
6501f982:	jne    0x6501f995
6501f984:	cmp    BYTE PTR [ebp-0x18],bl
6501f987:	je     0x6501f990
6501f989:	mov    eax,DWORD PTR [ebp-0x1c]
6501f98c:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f990:	push   0x3
6501f992:	pop    eax
6501f993:	jmp    0x6501f9c4
6501f995:	cmp    eax,0x2
6501f998:	jne    0x6501f9b6
6501f99a:	cmp    BYTE PTR [ebp-0x18],bl
6501f99d:	je     0x6501f9a6
6501f99f:	mov    eax,DWORD PTR [ebp-0x1c]
6501f9a2:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f9a6:	push   0x4
6501f9a8:	jmp    0x6501f992
6501f9aa:	test   BYTE PTR [ebp-0x14],0x1
6501f9ae:	jne    0x6501f99a
6501f9b0:	test   BYTE PTR [ebp-0x14],0x2
6501f9b4:	jne    0x6501f984
6501f9b6:	cmp    BYTE PTR [ebp-0x18],bl
6501f9b9:	je     0x6501f9c2
6501f9bb:	mov    eax,DWORD PTR [ebp-0x1c]
6501f9be:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f9c2:	xor    eax,eax
6501f9c4:	mov    ecx,DWORD PTR [ebp-0x4]
6501f9c7:	pop    edi
6501f9c8:	pop    esi
6501f9c9:	xor    ecx,ebp
6501f9cb:	pop    ebx
6501f9cc:	call   0x6501292c
6501f9d1:	leave  
6501f9d2:	ret    
6501f9d3:	push   ebp
6501f9d4:	mov    ebp,esp
6501f9d6:	sub    esp,0x28
6501f9d9:	mov    eax,ds:0x6502c09c
6501f9de:	xor    eax,ebp
6501f9e0:	mov    DWORD PTR [ebp-0x4],eax
6501f9e3:	push   ebx
6501f9e4:	push   esi
6501f9e5:	mov    esi,DWORD PTR [ebp+0x8]
6501f9e8:	push   edi
6501f9e9:	push   DWORD PTR [ebp+0x10]
6501f9ec:	mov    edi,DWORD PTR [ebp+0xc]
6501f9ef:	lea    ecx,[ebp-0x24]
6501f9f2:	call   0x65012acf
6501f9f7:	lea    eax,[ebp-0x24]
6501f9fa:	push   eax
6501f9fb:	xor    ebx,ebx
6501f9fd:	push   ebx
6501f9fe:	push   ebx
6501f9ff:	push   ebx
6501fa00:	push   ebx
6501fa01:	push   edi
6501fa02:	lea    eax,[ebp-0x28]
6501fa05:	push   eax
6501fa06:	lea    eax,[ebp-0x10]
6501fa09:	push   eax
6501fa0a:	call   0x6502086d
6501fa0f:	mov    DWORD PTR [ebp-0x14],eax
6501fa12:	lea    eax,[ebp-0x10]
6501fa15:	push   esi
6501fa16:	push   eax
6501fa17:	call   0x6502032b
6501fa1c:	add    esp,0x28
6501fa1f:	test   BYTE PTR [ebp-0x14],0x3
6501fa23:	jne    0x6501fa50
6501fa25:	cmp    eax,0x1
6501fa28:	jne    0x6501fa3b
6501fa2a:	cmp    BYTE PTR [ebp-0x18],bl
6501fa2d:	je     0x6501fa36
6501fa2f:	mov    eax,DWORD PTR [ebp-0x1c]
6501fa32:	and    DWORD PTR [eax+0x70],0xfffffffd
6501fa36:	push   0x3
6501fa38:	pop    eax
6501fa39:	jmp    0x6501fa6a
6501fa3b:	cmp    eax,0x2
6501fa3e:	jne    0x6501fa5c
6501fa40:	cmp    BYTE PTR [ebp-0x18],bl
6501fa43:	je     0x6501fa4c
6501fa45:	mov    eax,DWORD PTR [ebp-0x1c]
6501fa48:	and    DWORD PTR [eax+0x70],0xfffffffd
6501fa4c:	push   0x4
6501fa4e:	jmp    0x6501fa38
6501fa50:	test   BYTE PTR [ebp-0x14],0x1
6501fa54:	jne    0x6501fa40
6501fa56:	test   BYTE PTR [ebp-0x14],0x2
6501fa5a:	jne    0x6501fa2a
6501fa5c:	cmp    BYTE PTR [ebp-0x18],bl
6501fa5f:	je     0x6501fa68
6501fa61:	mov    eax,DWORD PTR [ebp-0x1c]
6501fa64:	and    DWORD PTR [eax+0x70],0xfffffffd
6501fa68:	xor    eax,eax
6501fa6a:	mov    ecx,DWORD PTR [ebp-0x4]
6501fa6d:	pop    edi
6501fa6e:	pop    esi
6501fa6f:	xor    ecx,ebp
6501fa71:	pop    ebx
6501fa72:	call   0x6501292c
6501fa77:	leave  
6501fa78:	ret    
6501fa79:	push   ebp
6501fa7a:	mov    ebp,esp
6501fa7c:	mov    ecx,DWORD PTR [ebp+0x14]
6501fa7f:	push   ebx
6501fa80:	push   esi
6501fa81:	mov    esi,DWORD PTR [ebp+0x8]
6501fa84:	xor    ebx,ebx
6501fa86:	cmp    esi,ebx
6501fa88:	push   edi
6501fa89:	mov    edi,DWORD PTR [ecx+0xc]
6501fa8c:	jne    0x6501faac
6501fa8e:	call   0x65014580
6501fa93:	push   0x16
6501fa95:	pop    esi
6501fa96:	mov    DWORD PTR [eax],esi
6501fa98:	push   ebx
6501fa99:	push   ebx
6501fa9a:	push   ebx
6501fa9b:	push   ebx
6501fa9c:	push   ebx
6501fa9d:	call   0x6501241f
6501faa2:	add    esp,0x14
6501faa5:	mov    eax,esi
6501faa7:	jmp    0x6501fb31
6501faac:	cmp    DWORD PTR [ebp+0xc],ebx
6501faaf:	jbe    0x6501fa8e
6501fab1:	mov    edx,DWORD PTR [ebp+0x10]
6501fab4:	cmp    edx,ebx
6501fab6:	mov    BYTE PTR [esi],bl
6501fab8:	jle    0x6501fabe
6501faba:	mov    eax,edx
6501fabc:	jmp    0x6501fac0
6501fabe:	xor    eax,eax
6501fac0:	inc    eax
6501fac1:	cmp    DWORD PTR [ebp+0xc],eax
6501fac4:	ja     0x6501fad4
6501fac6:	call   0x65014580
6501facb:	push   0x22
6501facd:	pop    ecx
6501face:	mov    DWORD PTR [eax],ecx
6501fad0:	mov    esi,ecx
6501fad2:	jmp    0x6501fa98
6501fad4:	cmp    edx,ebx
6501fad6:	mov    BYTE PTR [esi],0x30
6501fad9:	lea    eax,[esi+0x1]
6501fadc:	jle    0x6501faf8
6501fade:	mov    cl,BYTE PTR [edi]
6501fae0:	cmp    cl,bl
6501fae2:	je     0x6501faea
6501fae4:	movsx  ecx,cl
6501fae7:	inc    edi
6501fae8:	jmp    0x6501faed
6501faea:	push   0x30
6501faec:	pop    ecx
6501faed:	mov    BYTE PTR [eax],cl
6501faef:	inc    eax
6501faf0:	dec    edx
6501faf1:	cmp    edx,ebx
6501faf3:	jg     0x6501fade
6501faf5:	mov    ecx,DWORD PTR [ebp+0x14]
6501faf8:	cmp    edx,ebx
6501fafa:	mov    BYTE PTR [eax],bl
6501fafc:	jl     0x6501fb10
6501fafe:	cmp    BYTE PTR [edi],0x35
6501fb01:	jl     0x6501fb10
6501fb03:	jmp    0x6501fb08
6501fb05:	mov    BYTE PTR [eax],0x30
6501fb08:	dec    eax
6501fb09:	cmp    BYTE PTR [eax],0x39
6501fb0c:	je     0x6501fb05
6501fb0e:	inc    BYTE PTR [eax]
6501fb10:	cmp    BYTE PTR [esi],0x31
6501fb13:	jne    0x6501fb1a
6501fb15:	inc    DWORD PTR [ecx+0x4]
6501fb18:	jmp    0x6501fb2f
6501fb1a:	lea    edi,[esi+0x1]
6501fb1d:	push   edi
6501fb1e:	call   0x65014080
6501fb23:	inc    eax
6501fb24:	push   eax
6501fb25:	push   edi
6501fb26:	push   esi
6501fb27:	call   0x650138f0
6501fb2c:	add    esp,0x10
6501fb2f:	xor    eax,eax
6501fb31:	pop    edi
6501fb32:	pop    esi
6501fb33:	pop    ebx
6501fb34:	pop    ebp
6501fb35:	ret    
6501fb36:	push   ebp
6501fb37:	mov    ebp,esp
6501fb39:	push   ecx
6501fb3a:	mov    edx,DWORD PTR [ebp+0xc]
6501fb3d:	movzx  eax,WORD PTR [edx+0x6]
6501fb41:	push   ebx
6501fb42:	mov    ecx,eax
6501fb44:	push   esi
6501fb45:	push   edi
6501fb46:	shr    ecx,0x4
6501fb49:	and    eax,0x8000
6501fb4e:	mov    edi,0x7ff
6501fb53:	and    ecx,edi
6501fb55:	mov    DWORD PTR [ebp+0xc],eax
6501fb58:	mov    eax,DWORD PTR [edx+0x4]
6501fb5b:	mov    edx,DWORD PTR [edx]
6501fb5d:	movzx  ebx,cx
6501fb60:	mov    esi,0x80000000
6501fb65:	and    eax,0xfffff
6501fb6a:	test   ebx,ebx
6501fb6c:	mov    DWORD PTR [ebp-0x4],esi
6501fb6f:	je     0x6501fb84
6501fb71:	cmp    ebx,edi
6501fb73:	je     0x6501fb7d
6501fb75:	add    ecx,0x3c00
6501fb7b:	jmp    0x6501fba5
6501fb7d:	mov    edi,0x7fff
6501fb82:	jmp    0x6501fba8
6501fb84:	xor    ebx,ebx
6501fb86:	cmp    eax,ebx
6501fb88:	jne    0x6501fb9c
6501fb8a:	cmp    edx,ebx
6501fb8c:	jne    0x6501fb9c
6501fb8e:	mov    eax,DWORD PTR [ebp+0x8]
6501fb91:	mov    cx,WORD PTR [ebp+0xc]
6501fb95:	mov    DWORD PTR [eax+0x4],ebx
6501fb98:	mov    DWORD PTR [eax],ebx
6501fb9a:	jmp    0x6501fbe8
6501fb9c:	add    ecx,0x3c01
6501fba2:	mov    DWORD PTR [ebp-0x4],ebx
6501fba5:	movzx  edi,cx
6501fba8:	mov    ecx,edx
6501fbaa:	shr    ecx,0x15
6501fbad:	shl    eax,0xb
6501fbb0:	or     ecx,eax
6501fbb2:	or     ecx,DWORD PTR [ebp-0x4]
6501fbb5:	mov    eax,DWORD PTR [ebp+0x8]
6501fbb8:	shl    edx,0xb
6501fbbb:	test   esi,ecx
6501fbbd:	mov    DWORD PTR [eax+0x4],ecx
6501fbc0:	mov    DWORD PTR [eax],edx
6501fbc2:	jne    0x6501fbe3
6501fbc4:	mov    ecx,DWORD PTR [eax]
6501fbc6:	mov    edx,DWORD PTR [eax+0x4]
6501fbc9:	mov    ebx,ecx
6501fbcb:	add    edx,edx
6501fbcd:	shr    ebx,0x1f
6501fbd0:	or     edx,ebx
6501fbd2:	add    ecx,ecx
6501fbd4:	add    edi,0xffff
6501fbda:	test   esi,edx
6501fbdc:	mov    DWORD PTR [eax+0x4],edx
6501fbdf:	mov    DWORD PTR [eax],ecx
6501fbe1:	je     0x6501fbc4
6501fbe3:	mov    ecx,DWORD PTR [ebp+0xc]
6501fbe6:	or     ecx,edi
6501fbe8:	pop    edi
6501fbe9:	pop    esi
6501fbea:	mov    WORD PTR [eax+0x8],cx
6501fbee:	pop    ebx
6501fbef:	leave  
6501fbf0:	ret    
6501fbf1:	push   ebp
6501fbf2:	mov    ebp,esp
6501fbf4:	sub    esp,0x30
6501fbf7:	mov    eax,ds:0x6502c09c
6501fbfc:	xor    eax,ebp
6501fbfe:	mov    DWORD PTR [ebp-0x4],eax
6501fc01:	mov    eax,DWORD PTR [ebp+0x14]
6501fc04:	push   ebx
6501fc05:	mov    ebx,DWORD PTR [ebp+0x10]
6501fc08:	push   esi
6501fc09:	mov    DWORD PTR [ebp-0x30],eax
6501fc0c:	push   edi
6501fc0d:	lea    eax,[ebp+0x8]
6501fc10:	push   eax
6501fc11:	lea    eax,[ebp-0x10]
6501fc14:	push   eax
6501fc15:	call   0x6501fb36
6501fc1a:	pop    ecx
6501fc1b:	pop    ecx
6501fc1c:	lea    eax,[ebp-0x2c]
6501fc1f:	push   eax
6501fc20:	push   0x0
6501fc22:	push   0x11
6501fc24:	sub    esp,0xc
6501fc27:	lea    esi,[ebp-0x10]
6501fc2a:	mov    edi,esp
6501fc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fc2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fc2e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6501fc30:	call   0x65020f2d
6501fc35:	mov    esi,DWORD PTR [ebp-0x30]
6501fc38:	mov    DWORD PTR [ebx+0x8],eax
6501fc3b:	movsx  eax,BYTE PTR [ebp-0x2a]
6501fc3f:	mov    DWORD PTR [ebx],eax
6501fc41:	movsx  eax,WORD PTR [ebp-0x2c]
6501fc45:	mov    DWORD PTR [ebx+0x4],eax
6501fc48:	lea    eax,[ebp-0x28]
6501fc4b:	push   eax
6501fc4c:	push   DWORD PTR [ebp+0x18]
6501fc4f:	push   esi
6501fc50:	call   0x65014174
6501fc55:	add    esp,0x24
6501fc58:	test   eax,eax
6501fc5a:	je     0x6501fc6b
6501fc5c:	xor    eax,eax
6501fc5e:	push   eax
6501fc5f:	push   eax
6501fc60:	push   eax
6501fc61:	push   eax
6501fc62:	push   eax
6501fc63:	call   0x65012323
6501fc68:	add    esp,0x14
6501fc6b:	mov    ecx,DWORD PTR [ebp-0x4]
6501fc6e:	pop    edi
6501fc6f:	mov    DWORD PTR [ebx+0xc],esi
6501fc72:	pop    esi
6501fc73:	mov    eax,ebx
6501fc75:	xor    ecx,ebp
6501fc77:	pop    ebx
6501fc78:	call   0x6501292c
6501fc7d:	leave  
6501fc7e:	ret    
6501fc7f:	int3   
6501fc80:	push   edi
6501fc81:	push   esi
6501fc82:	push   ebp
6501fc83:	xor    edi,edi
6501fc85:	xor    ebp,ebp
6501fc87:	mov    eax,DWORD PTR [esp+0x14]
6501fc8b:	or     eax,eax
6501fc8d:	jge    0x6501fca4
6501fc8f:	inc    edi
6501fc90:	inc    ebp
6501fc91:	mov    edx,DWORD PTR [esp+0x10]
6501fc95:	neg    eax
6501fc97:	neg    edx
6501fc99:	sbb    eax,0x0
6501fc9c:	mov    DWORD PTR [esp+0x14],eax
6501fca0:	mov    DWORD PTR [esp+0x10],edx
6501fca4:	mov    eax,DWORD PTR [esp+0x1c]
6501fca8:	or     eax,eax
6501fcaa:	jge    0x6501fcc0
6501fcac:	inc    edi
6501fcad:	mov    edx,DWORD PTR [esp+0x18]
6501fcb1:	neg    eax
6501fcb3:	neg    edx
6501fcb5:	sbb    eax,0x0
6501fcb8:	mov    DWORD PTR [esp+0x1c],eax
6501fcbc:	mov    DWORD PTR [esp+0x18],edx
6501fcc0:	or     eax,eax
6501fcc2:	jne    0x6501fcec
6501fcc4:	mov    ecx,DWORD PTR [esp+0x18]
6501fcc8:	mov    eax,DWORD PTR [esp+0x14]
6501fccc:	xor    edx,edx
6501fcce:	div    ecx
6501fcd0:	mov    ebx,eax
6501fcd2:	mov    eax,DWORD PTR [esp+0x10]
6501fcd6:	div    ecx
6501fcd8:	mov    esi,eax
6501fcda:	mov    eax,ebx
6501fcdc:	mul    DWORD PTR [esp+0x18]
6501fce0:	mov    ecx,eax
6501fce2:	mov    eax,esi
6501fce4:	mul    DWORD PTR [esp+0x18]
6501fce8:	add    edx,ecx
6501fcea:	jmp    0x6501fd33
6501fcec:	mov    ebx,eax
6501fcee:	mov    ecx,DWORD PTR [esp+0x18]
6501fcf2:	mov    edx,DWORD PTR [esp+0x14]
6501fcf6:	mov    eax,DWORD PTR [esp+0x10]
6501fcfa:	shr    ebx,1
6501fcfc:	rcr    ecx,1
6501fcfe:	shr    edx,1
6501fd00:	rcr    eax,1
6501fd02:	or     ebx,ebx
6501fd04:	jne    0x6501fcfa
6501fd06:	div    ecx
6501fd08:	mov    esi,eax
6501fd0a:	mul    DWORD PTR [esp+0x1c]
6501fd0e:	mov    ecx,eax
6501fd10:	mov    eax,DWORD PTR [esp+0x18]
6501fd14:	mul    esi
6501fd16:	add    edx,ecx
6501fd18:	jb     0x6501fd28
6501fd1a:	cmp    edx,DWORD PTR [esp+0x14]
6501fd1e:	ja     0x6501fd28
6501fd20:	jb     0x6501fd31
6501fd22:	cmp    eax,DWORD PTR [esp+0x10]
6501fd26:	jbe    0x6501fd31
6501fd28:	dec    esi
6501fd29:	sub    eax,DWORD PTR [esp+0x18]
6501fd2d:	sbb    edx,DWORD PTR [esp+0x1c]
6501fd31:	xor    ebx,ebx
6501fd33:	sub    eax,DWORD PTR [esp+0x10]
6501fd37:	sbb    edx,DWORD PTR [esp+0x14]
6501fd3b:	dec    ebp
6501fd3c:	jns    0x6501fd45
6501fd3e:	neg    edx
6501fd40:	neg    eax
6501fd42:	sbb    edx,0x0
6501fd45:	mov    ecx,edx
6501fd47:	mov    edx,ebx
6501fd49:	mov    ebx,ecx
6501fd4b:	mov    ecx,eax
6501fd4d:	mov    eax,esi
6501fd4f:	dec    edi
6501fd50:	jne    0x6501fd59
6501fd52:	neg    edx
6501fd54:	neg    eax
6501fd56:	sbb    edx,0x0
6501fd59:	pop    ebp
6501fd5a:	pop    esi
6501fd5b:	pop    edi
6501fd5c:	ret    0x10
6501fd5f:	int3   
6501fd60:	cmp    cl,0x40
6501fd63:	jae    0x6501fd7a
6501fd65:	cmp    cl,0x20
6501fd68:	jae    0x6501fd70
6501fd6a:	shrd   eax,edx,cl
6501fd6d:	shr    edx,cl
6501fd6f:	ret    
6501fd70:	mov    eax,edx
6501fd72:	xor    edx,edx
6501fd74:	and    cl,0x1f
6501fd77:	shr    eax,cl
6501fd79:	ret    
6501fd7a:	xor    eax,eax
6501fd7c:	xor    edx,edx
6501fd7e:	ret    
6501fd7f:	push   ebp
6501fd80:	mov    ebp,esp
6501fd82:	mov    eax,DWORD PTR [ebp+0x10]
6501fd85:	mov    ecx,DWORD PTR [ebp+0xc]
6501fd88:	and    eax,0xfff7ffff
6501fd8d:	and    ecx,eax
6501fd8f:	test   ecx,0xfcf0fce0
6501fd95:	push   esi
6501fd96:	je     0x6501fdc9
6501fd98:	push   edi
6501fd99:	mov    edi,DWORD PTR [ebp+0x8]
6501fd9c:	xor    esi,esi
6501fd9e:	cmp    edi,esi
6501fda0:	je     0x6501fdad
6501fda2:	push   esi
6501fda3:	push   esi
6501fda4:	call   0x65021921
6501fda9:	pop    ecx
6501fdaa:	pop    ecx
6501fdab:	mov    DWORD PTR [edi],eax
6501fdad:	call   0x65014580
6501fdb2:	push   0x16
6501fdb4:	pop    edi
6501fdb5:	push   esi
6501fdb6:	push   esi
6501fdb7:	push   esi
6501fdb8:	push   esi
6501fdb9:	push   esi
6501fdba:	mov    DWORD PTR [eax],edi
6501fdbc:	call   0x6501241f
6501fdc1:	add    esp,0x14
6501fdc4:	mov    eax,edi
6501fdc6:	pop    edi
6501fdc7:	jmp    0x6501fde6
6501fdc9:	mov    esi,DWORD PTR [ebp+0x8]
6501fdcc:	test   esi,esi
6501fdce:	push   eax
6501fdcf:	push   DWORD PTR [ebp+0xc]
6501fdd2:	je     0x6501fddd
6501fdd4:	call   0x65021921
6501fdd9:	mov    DWORD PTR [esi],eax
6501fddb:	jmp    0x6501fde2
6501fddd:	call   0x65021921
6501fde2:	pop    ecx
6501fde3:	pop    ecx
6501fde4:	xor    eax,eax
6501fde6:	pop    esi
6501fde7:	pop    ebp
6501fde8:	ret    
6501fde9:	push   ebp
6501fdea:	mov    ebp,esp
6501fdec:	sub    esp,0x2c
6501fdef:	mov    eax,DWORD PTR [ebp+0x8]
6501fdf2:	movzx  ecx,WORD PTR [eax+0xa]
6501fdf6:	push   ebx
6501fdf7:	mov    ebx,ecx
6501fdf9:	and    ecx,0x8000
6501fdff:	mov    DWORD PTR [ebp-0x14],ecx
6501fe02:	mov    ecx,DWORD PTR [eax+0x6]
6501fe05:	mov    DWORD PTR [ebp-0x20],ecx
6501fe08:	mov    ecx,DWORD PTR [eax+0x2]
6501fe0b:	movzx  eax,WORD PTR [eax]
6501fe0e:	and    ebx,0x7fff
6501fe14:	sub    ebx,0x3fff
6501fe1a:	shl    eax,0x10
6501fe1d:	cmp    ebx,0xffffc001
6501fe23:	push   edi
6501fe24:	mov    DWORD PTR [ebp-0x1c],ecx
6501fe27:	mov    DWORD PTR [ebp-0x18],eax
6501fe2a:	jne    0x6501fe53
6501fe2c:	xor    ebx,ebx
6501fe2e:	xor    eax,eax
6501fe30:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6501fe34:	jne    0x6501fe43
6501fe36:	inc    eax
6501fe37:	cmp    eax,0x3
6501fe3a:	jl     0x6501fe30
6501fe3c:	xor    eax,eax
6501fe3e:	jmp    0x650202e8
6501fe43:	xor    eax,eax
6501fe45:	lea    edi,[ebp-0x20]
6501fe48:	stos   DWORD PTR es:[edi],eax
6501fe49:	stos   DWORD PTR es:[edi],eax
6501fe4a:	push   0x2
6501fe4c:	stos   DWORD PTR es:[edi],eax
6501fe4d:	pop    eax
6501fe4e:	jmp    0x650202e8
6501fe53:	and    DWORD PTR [ebp+0x8],0x0
6501fe57:	push   esi
6501fe58:	lea    esi,[ebp-0x20]
6501fe5b:	lea    edi,[ebp-0x2c]
6501fe5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fe5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fe60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fe61:	mov    esi,DWORD PTR ds:0x6502d078
6501fe67:	dec    esi
6501fe68:	lea    ecx,[esi+0x1]
6501fe6b:	mov    eax,ecx
6501fe6d:	cdq    
6501fe6e:	and    edx,0x1f
6501fe71:	add    eax,edx
6501fe73:	sar    eax,0x5
6501fe76:	mov    edx,ecx
6501fe78:	and    edx,0x8000001f
6501fe7e:	mov    DWORD PTR [ebp-0x10],ebx
6501fe81:	mov    DWORD PTR [ebp-0xc],eax
6501fe84:	jns    0x6501fe8b
6501fe86:	dec    edx
6501fe87:	or     edx,0xffffffe0
6501fe8a:	inc    edx
6501fe8b:	lea    edi,[ebp+eax*4-0x20]
6501fe8f:	push   0x1f
6501fe91:	xor    eax,eax
6501fe93:	pop    ecx
6501fe94:	sub    ecx,edx
6501fe96:	inc    eax
6501fe97:	shl    eax,cl
6501fe99:	mov    DWORD PTR [ebp-0x8],ecx
6501fe9c:	test   DWORD PTR [edi],eax
6501fe9e:	je     0x6501ff31
6501fea4:	mov    eax,DWORD PTR [ebp-0xc]
6501fea7:	or     edx,0xffffffff
6501feaa:	shl    edx,cl
6501feac:	not    edx
6501feae:	test   DWORD PTR [ebp+eax*4-0x20],edx
6501feb2:	jmp    0x6501feb9
6501feb4:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6501feb9:	jne    0x6501fec3
6501febb:	inc    eax
6501febc:	cmp    eax,0x3
6501febf:	jl     0x6501feb4
6501fec1:	jmp    0x6501ff31
6501fec3:	mov    eax,esi
6501fec5:	cdq    
6501fec6:	push   0x1f
6501fec8:	pop    ecx
6501fec9:	and    edx,ecx
6501fecb:	add    eax,edx
6501fecd:	sar    eax,0x5
6501fed0:	and    esi,0x8000001f
6501fed6:	jns    0x6501fedd
6501fed8:	dec    esi
6501fed9:	or     esi,0xffffffe0
6501fedc:	inc    esi
6501fedd:	and    DWORD PTR [ebp-0x4],0x0
6501fee1:	sub    ecx,esi
6501fee3:	xor    edx,edx
6501fee5:	inc    edx
6501fee6:	shl    edx,cl
6501fee8:	lea    ecx,[ebp+eax*4-0x20]
6501feec:	mov    esi,DWORD PTR [ecx]
6501feee:	add    esi,edx
6501fef0:	mov    DWORD PTR [ebp+0x8],esi
6501fef3:	mov    esi,DWORD PTR [ecx]
6501fef5:	cmp    DWORD PTR [ebp+0x8],esi
6501fef8:	jb     0x6501ff1c
6501fefa:	cmp    DWORD PTR [ebp+0x8],edx
6501fefd:	jmp    0x6501ff1a
6501feff:	test   ecx,ecx
6501ff01:	je     0x6501ff2e
6501ff03:	and    DWORD PTR [ebp-0x4],0x0
6501ff07:	lea    ecx,[ebp+eax*4-0x20]
6501ff0b:	mov    edx,DWORD PTR [ecx]
6501ff0d:	lea    esi,[edx+0x1]
6501ff10:	cmp    esi,edx
6501ff12:	mov    DWORD PTR [ebp+0x8],esi
6501ff15:	jb     0x6501ff1c
6501ff17:	cmp    esi,0x1
6501ff1a:	jae    0x6501ff23
6501ff1c:	mov    DWORD PTR [ebp-0x4],0x1
6501ff23:	dec    eax
6501ff24:	mov    edx,DWORD PTR [ebp+0x8]
6501ff27:	mov    DWORD PTR [ecx],edx
6501ff29:	mov    ecx,DWORD PTR [ebp-0x4]
6501ff2c:	jns    0x6501feff
6501ff2e:	mov    DWORD PTR [ebp+0x8],ecx
6501ff31:	mov    ecx,DWORD PTR [ebp-0x8]
6501ff34:	or     eax,0xffffffff
6501ff37:	shl    eax,cl
6501ff39:	and    DWORD PTR [edi],eax
6501ff3b:	mov    eax,DWORD PTR [ebp-0xc]
6501ff3e:	inc    eax
6501ff3f:	cmp    eax,0x3
6501ff42:	jge    0x6501ff51
6501ff44:	push   0x3
6501ff46:	pop    ecx
6501ff47:	lea    edi,[ebp+eax*4-0x20]
6501ff4b:	sub    ecx,eax
6501ff4d:	xor    eax,eax
6501ff4f:	rep stos DWORD PTR es:[edi],eax
6501ff51:	cmp    DWORD PTR [ebp+0x8],0x0
6501ff55:	je     0x6501ff58
6501ff57:	inc    ebx
6501ff58:	mov    eax,ds:0x6502d074
6501ff5d:	mov    ecx,eax
6501ff5f:	sub    ecx,DWORD PTR ds:0x6502d078
6501ff65:	cmp    ebx,ecx
6501ff67:	jge    0x6501ff76
6501ff69:	xor    eax,eax
6501ff6b:	lea    edi,[ebp-0x20]
6501ff6e:	stos   DWORD PTR es:[edi],eax
6501ff6f:	stos   DWORD PTR es:[edi],eax
6501ff70:	stos   DWORD PTR es:[edi],eax
6501ff71:	jmp    0x65020183
6501ff76:	cmp    ebx,eax
6501ff78:	jg     0x6502018d
6501ff7e:	sub    eax,DWORD PTR [ebp-0x10]
6501ff81:	lea    esi,[ebp-0x2c]
6501ff84:	mov    ecx,eax
6501ff86:	lea    edi,[ebp-0x20]
6501ff89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501ff8a:	cdq    
6501ff8b:	and    edx,0x1f
6501ff8e:	add    eax,edx
6501ff90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501ff91:	mov    edx,ecx
6501ff93:	sar    eax,0x5
6501ff96:	and    edx,0x8000001f
6501ff9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501ff9d:	jns    0x6501ffa4
6501ff9f:	dec    edx
6501ffa0:	or     edx,0xffffffe0
6501ffa3:	inc    edx
6501ffa4:	and    DWORD PTR [ebp-0xc],0x0
6501ffa8:	and    DWORD PTR [ebp+0x8],0x0
6501ffac:	or     edi,0xffffffff
6501ffaf:	mov    ecx,edx
6501ffb1:	shl    edi,cl
6501ffb3:	mov    DWORD PTR [ebp-0x4],0x20
6501ffba:	sub    DWORD PTR [ebp-0x4],edx
6501ffbd:	not    edi
6501ffbf:	mov    ebx,DWORD PTR [ebp+0x8]
6501ffc2:	lea    ebx,[ebp+ebx*4-0x20]
6501ffc6:	mov    esi,DWORD PTR [ebx]
6501ffc8:	mov    ecx,esi
6501ffca:	and    ecx,edi
6501ffcc:	mov    DWORD PTR [ebp-0x10],ecx
6501ffcf:	mov    ecx,edx
6501ffd1:	shr    esi,cl
6501ffd3:	mov    ecx,DWORD PTR [ebp-0x4]
6501ffd6:	or     esi,DWORD PTR [ebp-0xc]
6501ffd9:	mov    DWORD PTR [ebx],esi
6501ffdb:	mov    esi,DWORD PTR [ebp-0x10]
6501ffde:	shl    esi,cl
6501ffe0:	inc    DWORD PTR [ebp+0x8]
6501ffe3:	cmp    DWORD PTR [ebp+0x8],0x3
6501ffe7:	mov    DWORD PTR [ebp-0xc],esi
6501ffea:	jl     0x6501ffbf
6501ffec:	mov    esi,eax
6501ffee:	push   0x2
6501fff0:	shl    esi,0x2
6501fff3:	lea    ecx,[ebp-0x18]
6501fff6:	pop    edx
6501fff7:	sub    ecx,esi
6501fff9:	cmp    edx,eax
6501fffb:	jl     0x65020005
6501fffd:	mov    esi,DWORD PTR [ecx]
6501ffff:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020003:	jmp    0x6502000a
65020005:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502000a:	dec    edx
6502000b:	sub    ecx,0x4
6502000e:	test   edx,edx
65020010:	jge    0x6501fff9
65020012:	mov    esi,DWORD PTR ds:0x6502d078
65020018:	dec    esi
65020019:	lea    ecx,[esi+0x1]
6502001c:	mov    eax,ecx
6502001e:	cdq    
6502001f:	and    edx,0x1f
65020022:	add    eax,edx
65020024:	sar    eax,0x5
65020027:	mov    edx,ecx
65020029:	and    edx,0x8000001f
6502002f:	mov    DWORD PTR [ebp-0xc],eax
65020032:	jns    0x65020039
65020034:	dec    edx
65020035:	or     edx,0xffffffe0
65020038:	inc    edx
65020039:	push   0x1f
6502003b:	pop    ecx
6502003c:	sub    ecx,edx
6502003e:	xor    edx,edx
65020040:	inc    edx
65020041:	shl    edx,cl
65020043:	lea    ebx,[ebp+eax*4-0x20]
65020047:	mov    DWORD PTR [ebp-0x10],ecx
6502004a:	test   DWORD PTR [ebx],edx
6502004c:	je     0x650200d4
65020052:	or     edx,0xffffffff
65020055:	shl    edx,cl
65020057:	not    edx
65020059:	test   DWORD PTR [ebp+eax*4-0x20],edx
6502005d:	jmp    0x65020064
6502005f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
65020064:	jne    0x6502006e
65020066:	inc    eax
65020067:	cmp    eax,0x3
6502006a:	jl     0x6502005f
6502006c:	jmp    0x650200d4
6502006e:	mov    eax,esi
65020070:	cdq    
65020071:	push   0x1f
65020073:	pop    ecx
65020074:	and    edx,ecx
65020076:	add    eax,edx
65020078:	sar    eax,0x5
6502007b:	and    esi,0x8000001f
65020081:	jns    0x65020088
65020083:	dec    esi
65020084:	or     esi,0xffffffe0
65020087:	inc    esi
65020088:	and    DWORD PTR [ebp+0x8],0x0
6502008c:	xor    edx,edx
6502008e:	sub    ecx,esi
65020090:	inc    edx
65020091:	shl    edx,cl
65020093:	lea    ecx,[ebp+eax*4-0x20]
65020097:	mov    esi,DWORD PTR [ecx]
65020099:	lea    edi,[esi+edx*1]
6502009c:	cmp    edi,esi
6502009e:	jb     0x650200a4
650200a0:	cmp    edi,edx
650200a2:	jae    0x650200ab
650200a4:	mov    DWORD PTR [ebp+0x8],0x1
650200ab:	mov    DWORD PTR [ecx],edi
650200ad:	mov    ecx,DWORD PTR [ebp+0x8]
650200b0:	jmp    0x650200d1
650200b2:	test   ecx,ecx
650200b4:	je     0x650200d4
650200b6:	lea    ecx,[ebp+eax*4-0x20]
650200ba:	mov    edx,DWORD PTR [ecx]
650200bc:	lea    esi,[edx+0x1]
650200bf:	xor    edi,edi
650200c1:	cmp    esi,edx
650200c3:	jb     0x650200ca
650200c5:	cmp    esi,0x1
650200c8:	jae    0x650200cd
650200ca:	xor    edi,edi
650200cc:	inc    edi
650200cd:	mov    DWORD PTR [ecx],esi
650200cf:	mov    ecx,edi
650200d1:	dec    eax
650200d2:	jns    0x650200b2
650200d4:	mov    ecx,DWORD PTR [ebp-0x10]
650200d7:	or     eax,0xffffffff
650200da:	shl    eax,cl
650200dc:	and    DWORD PTR [ebx],eax
650200de:	mov    eax,DWORD PTR [ebp-0xc]
650200e1:	inc    eax
650200e2:	cmp    eax,0x3
650200e5:	jge    0x650200f4
650200e7:	push   0x3
650200e9:	pop    ecx
650200ea:	lea    edi,[ebp+eax*4-0x20]
650200ee:	sub    ecx,eax
650200f0:	xor    eax,eax
650200f2:	rep stos DWORD PTR es:[edi],eax
650200f4:	mov    ecx,DWORD PTR ds:0x6502d07c
650200fa:	inc    ecx
650200fb:	mov    eax,ecx
650200fd:	cdq    
650200fe:	and    edx,0x1f
65020101:	add    eax,edx
65020103:	mov    edx,ecx
65020105:	sar    eax,0x5
65020108:	and    edx,0x8000001f
6502010e:	jns    0x65020115
65020110:	dec    edx
65020111:	or     edx,0xffffffe0
65020114:	inc    edx
65020115:	and    DWORD PTR [ebp-0xc],0x0
65020119:	and    DWORD PTR [ebp+0x8],0x0
6502011d:	or     edi,0xffffffff
65020120:	mov    ecx,edx
65020122:	shl    edi,cl
65020124:	mov    DWORD PTR [ebp-0x4],0x20
6502012b:	sub    DWORD PTR [ebp-0x4],edx
6502012e:	not    edi
65020130:	mov    ebx,DWORD PTR [ebp+0x8]
65020133:	lea    ebx,[ebp+ebx*4-0x20]
65020137:	mov    esi,DWORD PTR [ebx]
65020139:	mov    ecx,esi
6502013b:	and    ecx,edi
6502013d:	mov    DWORD PTR [ebp-0x10],ecx
65020140:	mov    ecx,edx
65020142:	shr    esi,cl
65020144:	mov    ecx,DWORD PTR [ebp-0x4]
65020147:	or     esi,DWORD PTR [ebp-0xc]
6502014a:	mov    DWORD PTR [ebx],esi
6502014c:	mov    esi,DWORD PTR [ebp-0x10]
6502014f:	shl    esi,cl
65020151:	inc    DWORD PTR [ebp+0x8]
65020154:	cmp    DWORD PTR [ebp+0x8],0x3
65020158:	mov    DWORD PTR [ebp-0xc],esi
6502015b:	jl     0x65020130
6502015d:	mov    esi,eax
6502015f:	push   0x2
65020161:	shl    esi,0x2
65020164:	lea    ecx,[ebp-0x18]
65020167:	pop    edx
65020168:	sub    ecx,esi
6502016a:	cmp    edx,eax
6502016c:	jl     0x65020176
6502016e:	mov    esi,DWORD PTR [ecx]
65020170:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020174:	jmp    0x6502017b
65020176:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502017b:	dec    edx
6502017c:	sub    ecx,0x4
6502017f:	test   edx,edx
65020181:	jge    0x6502016a
65020183:	push   0x2
65020185:	xor    ebx,ebx
65020187:	pop    eax
65020188:	jmp    0x650202e7
6502018d:	cmp    ebx,DWORD PTR ds:0x6502d070
65020193:	mov    ecx,DWORD PTR ds:0x6502d07c
65020199:	jl     0x6502024c
6502019f:	xor    eax,eax
650201a1:	lea    edi,[ebp-0x20]
650201a4:	stos   DWORD PTR es:[edi],eax
650201a5:	stos   DWORD PTR es:[edi],eax
650201a6:	stos   DWORD PTR es:[edi],eax
650201a7:	or     DWORD PTR [ebp-0x20],0x80000000
650201ae:	mov    eax,ecx
650201b0:	cdq    
650201b1:	and    edx,0x1f
650201b4:	add    eax,edx
650201b6:	mov    edx,ecx
650201b8:	sar    eax,0x5
650201bb:	and    edx,0x8000001f
650201c1:	jns    0x650201c8
650201c3:	dec    edx
650201c4:	or     edx,0xffffffe0
650201c7:	inc    edx
650201c8:	and    DWORD PTR [ebp-0xc],0x0
650201cc:	and    DWORD PTR [ebp+0x8],0x0
650201d0:	or     edi,0xffffffff
650201d3:	mov    ecx,edx
650201d5:	shl    edi,cl
650201d7:	mov    DWORD PTR [ebp-0x4],0x20
650201de:	sub    DWORD PTR [ebp-0x4],edx
650201e1:	not    edi
650201e3:	mov    ebx,DWORD PTR [ebp+0x8]
650201e6:	lea    ebx,[ebp+ebx*4-0x20]
650201ea:	mov    esi,DWORD PTR [ebx]
650201ec:	mov    ecx,esi
650201ee:	and    ecx,edi
650201f0:	mov    DWORD PTR [ebp-0x10],ecx
650201f3:	mov    ecx,edx
650201f5:	shr    esi,cl
650201f7:	mov    ecx,DWORD PTR [ebp-0x4]
650201fa:	or     esi,DWORD PTR [ebp-0xc]
650201fd:	mov    DWORD PTR [ebx],esi
650201ff:	mov    esi,DWORD PTR [ebp-0x10]
65020202:	shl    esi,cl
65020204:	inc    DWORD PTR [ebp+0x8]
65020207:	cmp    DWORD PTR [ebp+0x8],0x3
6502020b:	mov    DWORD PTR [ebp-0xc],esi
6502020e:	jl     0x650201e3
65020210:	mov    esi,eax
65020212:	push   0x2
65020214:	shl    esi,0x2
65020217:	lea    ecx,[ebp-0x18]
6502021a:	pop    edx
6502021b:	sub    ecx,esi
6502021d:	cmp    edx,eax
6502021f:	jl     0x65020229
65020221:	mov    esi,DWORD PTR [ecx]
65020223:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020227:	jmp    0x6502022e
65020229:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502022e:	dec    edx
6502022f:	sub    ecx,0x4
65020232:	test   edx,edx
65020234:	jge    0x6502021d
65020236:	mov    eax,ds:0x6502d070
6502023b:	mov    ecx,DWORD PTR ds:0x6502d084
65020241:	lea    ebx,[ecx+eax*1]
65020244:	xor    eax,eax
65020246:	inc    eax
65020247:	jmp    0x650202e7
6502024c:	mov    eax,ds:0x6502d084
65020251:	and    DWORD PTR [ebp-0x20],0x7fffffff
65020258:	add    ebx,eax
6502025a:	mov    eax,ecx
6502025c:	cdq    
6502025d:	and    edx,0x1f
65020260:	add    eax,edx
65020262:	mov    edx,ecx
65020264:	sar    eax,0x5
65020267:	and    edx,0x8000001f
6502026d:	jns    0x65020274
6502026f:	dec    edx
65020270:	or     edx,0xffffffe0
65020273:	inc    edx
65020274:	and    DWORD PTR [ebp-0xc],0x0
65020278:	and    DWORD PTR [ebp+0x8],0x0
6502027c:	or     esi,0xffffffff
6502027f:	mov    ecx,edx
65020281:	shl    esi,cl
65020283:	mov    DWORD PTR [ebp-0x4],0x20
6502028a:	sub    DWORD PTR [ebp-0x4],edx
6502028d:	not    esi
6502028f:	mov    ecx,DWORD PTR [ebp+0x8]
65020292:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
65020296:	mov    ecx,edi
65020298:	and    ecx,esi
6502029a:	mov    DWORD PTR [ebp-0x10],ecx
6502029d:	mov    ecx,edx
6502029f:	shr    edi,cl
650202a1:	mov    ecx,DWORD PTR [ebp+0x8]
650202a4:	or     edi,DWORD PTR [ebp-0xc]
650202a7:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
650202ab:	mov    edi,DWORD PTR [ebp-0x10]
650202ae:	mov    ecx,DWORD PTR [ebp-0x4]
650202b1:	shl    edi,cl
650202b3:	inc    DWORD PTR [ebp+0x8]
650202b6:	cmp    DWORD PTR [ebp+0x8],0x3
650202ba:	mov    DWORD PTR [ebp-0xc],edi
650202bd:	jl     0x6502028f
650202bf:	mov    esi,eax
650202c1:	push   0x2
650202c3:	shl    esi,0x2
650202c6:	lea    ecx,[ebp-0x18]
650202c9:	pop    edx
650202ca:	sub    ecx,esi
650202cc:	cmp    edx,eax
650202ce:	jl     0x650202d8
650202d0:	mov    esi,DWORD PTR [ecx]
650202d2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
650202d6:	jmp    0x650202dd
650202d8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
650202dd:	dec    edx
650202de:	sub    ecx,0x4
650202e1:	test   edx,edx
650202e3:	jge    0x650202cc
650202e5:	xor    eax,eax
650202e7:	pop    esi
650202e8:	push   0x1f
650202ea:	pop    ecx
650202eb:	sub    ecx,DWORD PTR ds:0x6502d07c
650202f1:	shl    ebx,cl
650202f3:	mov    ecx,DWORD PTR [ebp-0x14]
650202f6:	neg    ecx
650202f8:	sbb    ecx,ecx
650202fa:	and    ecx,0x80000000
65020300:	or     ebx,ecx
65020302:	mov    ecx,DWORD PTR ds:0x6502d080
65020308:	or     ebx,DWORD PTR [ebp-0x20]
6502030b:	cmp    ecx,0x40
6502030e:	jne    0x6502031d
65020310:	mov    ecx,DWORD PTR [ebp+0xc]
65020313:	mov    edx,DWORD PTR [ebp-0x1c]
65020316:	mov    DWORD PTR [ecx+0x4],ebx
65020319:	mov    DWORD PTR [ecx],edx
6502031b:	jmp    0x65020327
6502031d:	cmp    ecx,0x20
65020320:	jne    0x65020327
65020322:	mov    ecx,DWORD PTR [ebp+0xc]
65020325:	mov    DWORD PTR [ecx],ebx
65020327:	pop    edi
65020328:	pop    ebx
65020329:	leave  
6502032a:	ret    
6502032b:	push   ebp
6502032c:	mov    ebp,esp
6502032e:	sub    esp,0x2c
65020331:	mov    eax,DWORD PTR [ebp+0x8]
65020334:	movzx  ecx,WORD PTR [eax+0xa]
65020338:	push   ebx
65020339:	mov    ebx,ecx
6502033b:	and    ecx,0x8000
65020341:	mov    DWORD PTR [ebp-0x14],ecx
65020344:	mov    ecx,DWORD PTR [eax+0x6]
65020347:	mov    DWORD PTR [ebp-0x20],ecx
6502034a:	mov    ecx,DWORD PTR [eax+0x2]
6502034d:	movzx  eax,WORD PTR [eax]
65020350:	and    ebx,0x7fff
65020356:	sub    ebx,0x3fff
6502035c:	shl    eax,0x10
6502035f:	cmp    ebx,0xffffc001
65020365:	push   edi
65020366:	mov    DWORD PTR [ebp-0x1c],ecx
65020369:	mov    DWORD PTR [ebp-0x18],eax
6502036c:	jne    0x65020395
6502036e:	xor    ebx,ebx
65020370:	xor    eax,eax
65020372:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
65020376:	jne    0x65020385
65020378:	inc    eax
65020379:	cmp    eax,0x3
6502037c:	jl     0x65020372
6502037e:	xor    eax,eax
65020380:	jmp    0x6502082a
65020385:	xor    eax,eax
65020387:	lea    edi,[ebp-0x20]
6502038a:	stos   DWORD PTR es:[edi],eax
6502038b:	stos   DWORD PTR es:[edi],eax
6502038c:	push   0x2
6502038e:	stos   DWORD PTR es:[edi],eax
6502038f:	pop    eax
65020390:	jmp    0x6502082a
65020395:	and    DWORD PTR [ebp+0x8],0x0
65020399:	push   esi
6502039a:	lea    esi,[ebp-0x20]
6502039d:	lea    edi,[ebp-0x2c]
650203a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650203a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650203a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650203a3:	mov    esi,DWORD PTR ds:0x6502d090
650203a9:	dec    esi
650203aa:	lea    ecx,[esi+0x1]
650203ad:	mov    eax,ecx
650203af:	cdq    
650203b0:	and    edx,0x1f
650203b3:	add    eax,edx
650203b5:	sar    eax,0x5
650203b8:	mov    edx,ecx
650203ba:	and    edx,0x8000001f
650203c0:	mov    DWORD PTR [ebp-0x10],ebx
650203c3:	mov    DWORD PTR [ebp-0xc],eax
650203c6:	jns    0x650203cd
650203c8:	dec    edx
650203c9:	or     edx,0xffffffe0
650203cc:	inc    edx
650203cd:	lea    edi,[ebp+eax*4-0x20]
650203d1:	push   0x1f
650203d3:	xor    eax,eax
650203d5:	pop    ecx
650203d6:	sub    ecx,edx
650203d8:	inc    eax
650203d9:	shl    eax,cl
650203db:	mov    DWORD PTR [ebp-0x8],ecx
650203de:	test   DWORD PTR [edi],eax
650203e0:	je     0x65020473
650203e6:	mov    eax,DWORD PTR [ebp-0xc]
650203e9:	or     edx,0xffffffff
650203ec:	shl    edx,cl
650203ee:	not    edx
650203f0:	test   DWORD PTR [ebp+eax*4-0x20],edx
650203f4:	jmp    0x650203fb
650203f6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
650203fb:	jne    0x65020405
650203fd:	inc    eax
650203fe:	cmp    eax,0x3
65020401:	jl     0x650203f6
65020403:	jmp    0x65020473
65020405:	mov    eax,esi
65020407:	cdq    
65020408:	push   0x1f
6502040a:	pop    ecx
6502040b:	and    edx,ecx
6502040d:	add    eax,edx
6502040f:	sar    eax,0x5
65020412:	and    esi,0x8000001f
65020418:	jns    0x6502041f
6502041a:	dec    esi
6502041b:	or     esi,0xffffffe0
6502041e:	inc    esi
6502041f:	and    DWORD PTR [ebp-0x4],0x0
65020423:	sub    ecx,esi
65020425:	xor    edx,edx
65020427:	inc    edx
65020428:	shl    edx,cl
6502042a:	lea    ecx,[ebp+eax*4-0x20]
6502042e:	mov    esi,DWORD PTR [ecx]
65020430:	add    esi,edx
65020432:	mov    DWORD PTR [ebp+0x8],esi
65020435:	mov    esi,DWORD PTR [ecx]
65020437:	cmp    DWORD PTR [ebp+0x8],esi
6502043a:	jb     0x6502045e
6502043c:	cmp    DWORD PTR [ebp+0x8],edx
6502043f:	jmp    0x6502045c
65020441:	test   ecx,ecx
65020443:	je     0x65020470
65020445:	and    DWORD PTR [ebp-0x4],0x0
65020449:	lea    ecx,[ebp+eax*4-0x20]
6502044d:	mov    edx,DWORD PTR [ecx]
6502044f:	lea    esi,[edx+0x1]
65020452:	cmp    esi,edx
65020454:	mov    DWORD PTR [ebp+0x8],esi
65020457:	jb     0x6502045e
65020459:	cmp    esi,0x1
6502045c:	jae    0x65020465
6502045e:	mov    DWORD PTR [ebp-0x4],0x1
65020465:	dec    eax
65020466:	mov    edx,DWORD PTR [ebp+0x8]
65020469:	mov    DWORD PTR [ecx],edx
6502046b:	mov    ecx,DWORD PTR [ebp-0x4]
6502046e:	jns    0x65020441
65020470:	mov    DWORD PTR [ebp+0x8],ecx
65020473:	mov    ecx,DWORD PTR [ebp-0x8]
65020476:	or     eax,0xffffffff
65020479:	shl    eax,cl
6502047b:	and    DWORD PTR [edi],eax
6502047d:	mov    eax,DWORD PTR [ebp-0xc]
65020480:	inc    eax
65020481:	cmp    eax,0x3
65020484:	jge    0x65020493
65020486:	push   0x3
65020488:	pop    ecx
65020489:	lea    edi,[ebp+eax*4-0x20]
6502048d:	sub    ecx,eax
6502048f:	xor    eax,eax
65020491:	rep stos DWORD PTR es:[edi],eax
65020493:	cmp    DWORD PTR [ebp+0x8],0x0
65020497:	je     0x6502049a
65020499:	inc    ebx
6502049a:	mov    eax,ds:0x6502d08c
6502049f:	mov    ecx,eax
650204a1:	sub    ecx,DWORD PTR ds:0x6502d090
650204a7:	cmp    ebx,ecx
650204a9:	jge    0x650204b8
650204ab:	xor    eax,eax
650204ad:	lea    edi,[ebp-0x20]
650204b0:	stos   DWORD PTR es:[edi],eax
650204b1:	stos   DWORD PTR es:[edi],eax
650204b2:	stos   DWORD PTR es:[edi],eax
650204b3:	jmp    0x650206c5
650204b8:	cmp    ebx,eax
650204ba:	jg     0x650206cf
650204c0:	sub    eax,DWORD PTR [ebp-0x10]
650204c3:	lea    esi,[ebp-0x2c]
650204c6:	mov    ecx,eax
650204c8:	lea    edi,[ebp-0x20]
650204cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650204cc:	cdq    
650204cd:	and    edx,0x1f
650204d0:	add    eax,edx
650204d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650204d3:	mov    edx,ecx
650204d5:	sar    eax,0x5
650204d8:	and    edx,0x8000001f
650204de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650204df:	jns    0x650204e6
650204e1:	dec    edx
650204e2:	or     edx,0xffffffe0
650204e5:	inc    edx
650204e6:	and    DWORD PTR [ebp-0xc],0x0
650204ea:	and    DWORD PTR [ebp+0x8],0x0
650204ee:	or     edi,0xffffffff
650204f1:	mov    ecx,edx
650204f3:	shl    edi,cl
650204f5:	mov    DWORD PTR [ebp-0x4],0x20
650204fc:	sub    DWORD PTR [ebp-0x4],edx
650204ff:	not    edi
65020501:	mov    ebx,DWORD PTR [ebp+0x8]
65020504:	lea    ebx,[ebp+ebx*4-0x20]
65020508:	mov    esi,DWORD PTR [ebx]
6502050a:	mov    ecx,esi
6502050c:	and    ecx,edi
6502050e:	mov    DWORD PTR [ebp-0x10],ecx
65020511:	mov    ecx,edx
65020513:	shr    esi,cl
65020515:	mov    ecx,DWORD PTR [ebp-0x4]
65020518:	or     esi,DWORD PTR [ebp-0xc]
6502051b:	mov    DWORD PTR [ebx],esi
6502051d:	mov    esi,DWORD PTR [ebp-0x10]
65020520:	shl    esi,cl
65020522:	inc    DWORD PTR [ebp+0x8]
65020525:	cmp    DWORD PTR [ebp+0x8],0x3
65020529:	mov    DWORD PTR [ebp-0xc],esi
6502052c:	jl     0x65020501
6502052e:	mov    esi,eax
65020530:	push   0x2
65020532:	shl    esi,0x2
65020535:	lea    ecx,[ebp-0x18]
65020538:	pop    edx
65020539:	sub    ecx,esi
6502053b:	cmp    edx,eax
6502053d:	jl     0x65020547
6502053f:	mov    esi,DWORD PTR [ecx]
65020541:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020545:	jmp    0x6502054c
65020547:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502054c:	dec    edx
6502054d:	sub    ecx,0x4
65020550:	test   edx,edx
65020552:	jge    0x6502053b
65020554:	mov    esi,DWORD PTR ds:0x6502d090
6502055a:	dec    esi
6502055b:	lea    ecx,[esi+0x1]
6502055e:	mov    eax,ecx
65020560:	cdq    
65020561:	and    edx,0x1f
65020564:	add    eax,edx
65020566:	sar    eax,0x5
65020569:	mov    edx,ecx
6502056b:	and    edx,0x8000001f
65020571:	mov    DWORD PTR [ebp-0xc],eax
65020574:	jns    0x6502057b
65020576:	dec    edx
65020577:	or     edx,0xffffffe0
6502057a:	inc    edx
6502057b:	push   0x1f
6502057d:	pop    ecx
6502057e:	sub    ecx,edx
65020580:	xor    edx,edx
65020582:	inc    edx
65020583:	shl    edx,cl
65020585:	lea    ebx,[ebp+eax*4-0x20]
65020589:	mov    DWORD PTR [ebp-0x10],ecx
6502058c:	test   DWORD PTR [ebx],edx
6502058e:	je     0x65020616
65020594:	or     edx,0xffffffff
65020597:	shl    edx,cl
65020599:	not    edx
6502059b:	test   DWORD PTR [ebp+eax*4-0x20],edx
6502059f:	jmp    0x650205a6
650205a1:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
650205a6:	jne    0x650205b0
650205a8:	inc    eax
650205a9:	cmp    eax,0x3
650205ac:	jl     0x650205a1
650205ae:	jmp    0x65020616
650205b0:	mov    eax,esi
650205b2:	cdq    
650205b3:	push   0x1f
650205b5:	pop    ecx
650205b6:	and    edx,ecx
650205b8:	add    eax,edx
650205ba:	sar    eax,0x5
650205bd:	and    esi,0x8000001f
650205c3:	jns    0x650205ca
650205c5:	dec    esi
650205c6:	or     esi,0xffffffe0
650205c9:	inc    esi
650205ca:	and    DWORD PTR [ebp+0x8],0x0
650205ce:	xor    edx,edx
650205d0:	sub    ecx,esi
650205d2:	inc    edx
650205d3:	shl    edx,cl
650205d5:	lea    ecx,[ebp+eax*4-0x20]
650205d9:	mov    esi,DWORD PTR [ecx]
650205db:	lea    edi,[esi+edx*1]
650205de:	cmp    edi,esi
650205e0:	jb     0x650205e6
650205e2:	cmp    edi,edx
650205e4:	jae    0x650205ed
650205e6:	mov    DWORD PTR [ebp+0x8],0x1
650205ed:	mov    DWORD PTR [ecx],edi
650205ef:	mov    ecx,DWORD PTR [ebp+0x8]
650205f2:	jmp    0x65020613
650205f4:	test   ecx,ecx
650205f6:	je     0x65020616
650205f8:	lea    ecx,[ebp+eax*4-0x20]
650205fc:	mov    edx,DWORD PTR [ecx]
650205fe:	lea    esi,[edx+0x1]
65020601:	xor    edi,edi
65020603:	cmp    esi,edx
65020605:	jb     0x6502060c
65020607:	cmp    esi,0x1
6502060a:	jae    0x6502060f
6502060c:	xor    edi,edi
6502060e:	inc    edi
6502060f:	mov    DWORD PTR [ecx],esi
65020611:	mov    ecx,edi
65020613:	dec    eax
65020614:	jns    0x650205f4
65020616:	mov    ecx,DWORD PTR [ebp-0x10]
65020619:	or     eax,0xffffffff
6502061c:	shl    eax,cl
6502061e:	and    DWORD PTR [ebx],eax
65020620:	mov    eax,DWORD PTR [ebp-0xc]
65020623:	inc    eax
65020624:	cmp    eax,0x3
65020627:	jge    0x65020636
65020629:	push   0x3
6502062b:	pop    ecx
6502062c:	lea    edi,[ebp+eax*4-0x20]
65020630:	sub    ecx,eax
65020632:	xor    eax,eax
65020634:	rep stos DWORD PTR es:[edi],eax
65020636:	mov    ecx,DWORD PTR ds:0x6502d094
6502063c:	inc    ecx
6502063d:	mov    eax,ecx
6502063f:	cdq    
65020640:	and    edx,0x1f
65020643:	add    eax,edx
65020645:	mov    edx,ecx
65020647:	sar    eax,0x5
6502064a:	and    edx,0x8000001f
65020650:	jns    0x65020657
65020652:	dec    edx
65020653:	or     edx,0xffffffe0
65020656:	inc    edx
65020657:	and    DWORD PTR [ebp-0xc],0x0
6502065b:	and    DWORD PTR [ebp+0x8],0x0
6502065f:	or     edi,0xffffffff
65020662:	mov    ecx,edx
65020664:	shl    edi,cl
65020666:	mov    DWORD PTR [ebp-0x4],0x20
6502066d:	sub    DWORD PTR [ebp-0x4],edx
65020670:	not    edi
65020672:	mov    ebx,DWORD PTR [ebp+0x8]
65020675:	lea    ebx,[ebp+ebx*4-0x20]
65020679:	mov    esi,DWORD PTR [ebx]
6502067b:	mov    ecx,esi
6502067d:	and    ecx,edi
6502067f:	mov    DWORD PTR [ebp-0x10],ecx
65020682:	mov    ecx,edx
65020684:	shr    esi,cl
65020686:	mov    ecx,DWORD PTR [ebp-0x4]
65020689:	or     esi,DWORD PTR [ebp-0xc]
6502068c:	mov    DWORD PTR [ebx],esi
6502068e:	mov    esi,DWORD PTR [ebp-0x10]
65020691:	shl    esi,cl
65020693:	inc    DWORD PTR [ebp+0x8]
65020696:	cmp    DWORD PTR [ebp+0x8],0x3
6502069a:	mov    DWORD PTR [ebp-0xc],esi
6502069d:	jl     0x65020672
6502069f:	mov    esi,eax
650206a1:	push   0x2
650206a3:	shl    esi,0x2
650206a6:	lea    ecx,[ebp-0x18]
650206a9:	pop    edx
650206aa:	sub    ecx,esi
650206ac:	cmp    edx,eax
650206ae:	jl     0x650206b8
650206b0:	mov    esi,DWORD PTR [ecx]
650206b2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
650206b6:	jmp    0x650206bd
650206b8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
650206bd:	dec    edx
650206be:	sub    ecx,0x4
650206c1:	test   edx,edx
650206c3:	jge    0x650206ac
650206c5:	push   0x2
650206c7:	xor    ebx,ebx
650206c9:	pop    eax
650206ca:	jmp    0x65020829
650206cf:	cmp    ebx,DWORD PTR ds:0x6502d088
650206d5:	mov    ecx,DWORD PTR ds:0x6502d094
650206db:	jl     0x6502078e
650206e1:	xor    eax,eax
650206e3:	lea    edi,[ebp-0x20]
650206e6:	stos   DWORD PTR es:[edi],eax
650206e7:	stos   DWORD PTR es:[edi],eax
650206e8:	stos   DWORD PTR es:[edi],eax
650206e9:	or     DWORD PTR [ebp-0x20],0x80000000
650206f0:	mov    eax,ecx
650206f2:	cdq    
650206f3:	and    edx,0x1f
650206f6:	add    eax,edx
650206f8:	mov    edx,ecx
650206fa:	sar    eax,0x5
650206fd:	and    edx,0x8000001f
65020703:	jns    0x6502070a
65020705:	dec    edx
65020706:	or     edx,0xffffffe0
65020709:	inc    edx
6502070a:	and    DWORD PTR [ebp-0xc],0x0
6502070e:	and    DWORD PTR [ebp+0x8],0x0
65020712:	or     edi,0xffffffff
65020715:	mov    ecx,edx
65020717:	shl    edi,cl
65020719:	mov    DWORD PTR [ebp-0x4],0x20
65020720:	sub    DWORD PTR [ebp-0x4],edx
65020723:	not    edi
65020725:	mov    ebx,DWORD PTR [ebp+0x8]
65020728:	lea    ebx,[ebp+ebx*4-0x20]
6502072c:	mov    esi,DWORD PTR [ebx]
6502072e:	mov    ecx,esi
65020730:	and    ecx,edi
65020732:	mov    DWORD PTR [ebp-0x10],ecx
65020735:	mov    ecx,edx
65020737:	shr    esi,cl
65020739:	mov    ecx,DWORD PTR [ebp-0x4]
6502073c:	or     esi,DWORD PTR [ebp-0xc]
6502073f:	mov    DWORD PTR [ebx],esi
65020741:	mov    esi,DWORD PTR [ebp-0x10]
65020744:	shl    esi,cl
65020746:	inc    DWORD PTR [ebp+0x8]
65020749:	cmp    DWORD PTR [ebp+0x8],0x3
6502074d:	mov    DWORD PTR [ebp-0xc],esi
65020750:	jl     0x65020725
65020752:	mov    esi,eax
65020754:	push   0x2
65020756:	shl    esi,0x2
65020759:	lea    ecx,[ebp-0x18]
6502075c:	pop    edx
6502075d:	sub    ecx,esi
6502075f:	cmp    edx,eax
65020761:	jl     0x6502076b
65020763:	mov    esi,DWORD PTR [ecx]
65020765:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020769:	jmp    0x65020770
6502076b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
65020770:	dec    edx
65020771:	sub    ecx,0x4
65020774:	test   edx,edx
65020776:	jge    0x6502075f
65020778:	mov    eax,ds:0x6502d088
6502077d:	mov    ecx,DWORD PTR ds:0x6502d09c
65020783:	lea    ebx,[ecx+eax*1]
65020786:	xor    eax,eax
65020788:	inc    eax
65020789:	jmp    0x65020829
6502078e:	mov    eax,ds:0x6502d09c
65020793:	and    DWORD PTR [ebp-0x20],0x7fffffff
6502079a:	add    ebx,eax
6502079c:	mov    eax,ecx
6502079e:	cdq    
6502079f:	and    edx,0x1f
650207a2:	add    eax,edx
650207a4:	mov    edx,ecx
650207a6:	sar    eax,0x5
650207a9:	and    edx,0x8000001f
650207af:	jns    0x650207b6
650207b1:	dec    edx
650207b2:	or     edx,0xffffffe0
650207b5:	inc    edx
650207b6:	and    DWORD PTR [ebp-0xc],0x0
650207ba:	and    DWORD PTR [ebp+0x8],0x0
650207be:	or     esi,0xffffffff
650207c1:	mov    ecx,edx
650207c3:	shl    esi,cl
650207c5:	mov    DWORD PTR [ebp-0x4],0x20
650207cc:	sub    DWORD PTR [ebp-0x4],edx
650207cf:	not    esi
650207d1:	mov    ecx,DWORD PTR [ebp+0x8]
650207d4:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
650207d8:	mov    ecx,edi
650207da:	and    ecx,esi
650207dc:	mov    DWORD PTR [ebp-0x10],ecx
650207df:	mov    ecx,edx
650207e1:	shr    edi,cl
650207e3:	mov    ecx,DWORD PTR [ebp+0x8]
650207e6:	or     edi,DWORD PTR [ebp-0xc]
650207e9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
650207ed:	mov    edi,DWORD PTR [ebp-0x10]
650207f0:	mov    ecx,DWORD PTR [ebp-0x4]
650207f3:	shl    edi,cl
650207f5:	inc    DWORD PTR [ebp+0x8]
650207f8:	cmp    DWORD PTR [ebp+0x8],0x3
650207fc:	mov    DWORD PTR [ebp-0xc],edi
650207ff:	jl     0x650207d1
65020801:	mov    esi,eax
65020803:	push   0x2
65020805:	shl    esi,0x2
65020808:	lea    ecx,[ebp-0x18]
6502080b:	pop    edx
6502080c:	sub    ecx,esi
6502080e:	cmp    edx,eax
65020810:	jl     0x6502081a
65020812:	mov    esi,DWORD PTR [ecx]
65020814:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020818:	jmp    0x6502081f
6502081a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502081f:	dec    edx
65020820:	sub    ecx,0x4
65020823:	test   edx,edx
65020825:	jge    0x6502080e
65020827:	xor    eax,eax
65020829:	pop    esi
6502082a:	push   0x1f
6502082c:	pop    ecx
6502082d:	sub    ecx,DWORD PTR ds:0x6502d094
65020833:	shl    ebx,cl
65020835:	mov    ecx,DWORD PTR [ebp-0x14]
65020838:	neg    ecx
6502083a:	sbb    ecx,ecx
6502083c:	and    ecx,0x80000000
65020842:	or     ebx,ecx
65020844:	mov    ecx,DWORD PTR ds:0x6502d098
6502084a:	or     ebx,DWORD PTR [ebp-0x20]
6502084d:	cmp    ecx,0x40
65020850:	jne    0x6502085f
65020852:	mov    ecx,DWORD PTR [ebp+0xc]
65020855:	mov    edx,DWORD PTR [ebp-0x1c]
65020858:	mov    DWORD PTR [ecx+0x4],ebx
6502085b:	mov    DWORD PTR [ecx],edx
6502085d:	jmp    0x65020869
6502085f:	cmp    ecx,0x20
65020862:	jne    0x65020869
65020864:	mov    ecx,DWORD PTR [ebp+0xc]
65020867:	mov    DWORD PTR [ecx],ebx
65020869:	pop    edi
6502086a:	pop    ebx
6502086b:	leave  
6502086c:	ret    
6502086d:	push   ebp
6502086e:	mov    ebp,esp
65020870:	sub    esp,0x7c
65020873:	mov    eax,ds:0x6502c09c
65020878:	xor    eax,ebp
6502087a:	mov    DWORD PTR [ebp-0x4],eax
6502087d:	mov    eax,DWORD PTR [ebp+0x8]
65020880:	push   ebx
65020881:	xor    ebx,ebx
65020883:	push   esi
65020884:	xor    esi,esi
65020886:	mov    DWORD PTR [ebp-0x7c],eax
65020889:	mov    eax,DWORD PTR [ebp+0xc]
6502088c:	inc    esi
6502088d:	xor    ecx,ecx
6502088f:	cmp    DWORD PTR [ebp+0x24],ebx
65020892:	push   edi
65020893:	mov    DWORD PTR [ebp-0x70],eax
65020896:	lea    edi,[ebp-0x20]
65020899:	mov    DWORD PTR [ebp-0x74],ebx
6502089c:	mov    DWORD PTR [ebp-0x68],esi
6502089f:	mov    DWORD PTR [ebp-0x4c],ebx
650208a2:	mov    DWORD PTR [ebp-0x58],ebx
650208a5:	mov    DWORD PTR [ebp-0x5c],ebx
650208a8:	mov    DWORD PTR [ebp-0x60],ebx
650208ab:	mov    DWORD PTR [ebp-0x64],ebx
650208ae:	mov    DWORD PTR [ebp-0x50],ebx
650208b1:	mov    DWORD PTR [ebp-0x6c],ebx
650208b4:	jne    0x650208d5
650208b6:	call   0x65014580
650208bb:	push   ebx
650208bc:	push   ebx
650208bd:	push   ebx
650208be:	push   ebx
650208bf:	push   ebx
650208c0:	mov    DWORD PTR [eax],0x16
650208c6:	call   0x6501241f
650208cb:	add    esp,0x14
650208ce:	xor    eax,eax
650208d0:	jmp    0x65020eee
650208d5:	mov    edx,DWORD PTR [ebp+0x10]
650208d8:	mov    DWORD PTR [ebp-0x54],edx
650208db:	mov    al,BYTE PTR [edx]
650208dd:	cmp    al,0x20
650208df:	je     0x650208ed
650208e1:	cmp    al,0x9
650208e3:	je     0x650208ed
650208e5:	cmp    al,0xa
650208e7:	je     0x650208ed
650208e9:	cmp    al,0xd
650208eb:	jne    0x650208f0
650208ed:	inc    edx
650208ee:	jmp    0x650208db
650208f0:	mov    bl,0x30
650208f2:	mov    al,BYTE PTR [edx]
650208f4:	inc    edx
650208f5:	cmp    ecx,0xb
650208f8:	ja     0x65020b2d
650208fe:	jmp    DWORD PTR [ecx*4+0x65020efd]
65020905:	mov    cl,al
65020907:	sub    cl,0x31
6502090a:	cmp    cl,0x8
6502090d:	ja     0x65020915
6502090f:	push   0x3
65020911:	pop    ecx
65020912:	dec    edx
65020913:	jmp    0x650208f2
65020915:	mov    ecx,DWORD PTR [ebp+0x24]
65020918:	mov    ecx,DWORD PTR [ecx]
6502091a:	mov    ecx,DWORD PTR [ecx+0xbc]
65020920:	mov    ecx,DWORD PTR [ecx]
65020922:	cmp    al,BYTE PTR [ecx]
65020924:	jne    0x6502092b
65020926:	push   0x5
65020928:	pop    ecx
65020929:	jmp    0x650208f2
6502092b:	movsx  eax,al
6502092e:	sub    eax,0x2b
65020931:	je     0x65020950
65020933:	dec    eax
65020934:	dec    eax
65020935:	je     0x65020944
65020937:	sub    eax,0x3
6502093a:	jne    0x65020acb
65020940:	mov    ecx,esi
65020942:	jmp    0x650208f2
65020944:	push   0x2
65020946:	pop    ecx
65020947:	mov    DWORD PTR [ebp-0x74],0x8000
6502094e:	jmp    0x650208f2
65020950:	and    DWORD PTR [ebp-0x74],0x0
65020954:	push   0x2
65020956:	pop    ecx
65020957:	jmp    0x650208f2
65020959:	mov    cl,al
6502095b:	sub    cl,0x31
6502095e:	cmp    cl,0x8
65020961:	mov    DWORD PTR [ebp-0x58],esi
65020964:	jbe    0x6502090f
65020966:	mov    ecx,DWORD PTR [ebp+0x24]
65020969:	mov    ecx,DWORD PTR [ecx]
6502096b:	mov    ecx,DWORD PTR [ecx+0xbc]
65020971:	mov    ecx,DWORD PTR [ecx]
65020973:	cmp    al,BYTE PTR [ecx]
65020975:	jne    0x6502097b
65020977:	push   0x4
65020979:	jmp    0x65020928
6502097b:	cmp    al,0x2b
6502097d:	je     0x650209a7
6502097f:	cmp    al,0x2d
65020981:	je     0x650209a7
65020983:	cmp    al,bl
65020985:	je     0x65020940
65020987:	cmp    al,0x43
65020989:	jle    0x65020acb
6502098f:	cmp    al,0x45
65020991:	jle    0x650209a3
65020993:	cmp    al,0x63
65020995:	jle    0x65020acb
6502099b:	cmp    al,0x65
6502099d:	jg     0x65020acb
650209a3:	push   0x6
650209a5:	jmp    0x65020928
650209a7:	dec    edx
650209a8:	push   0xb
650209aa:	jmp    0x65020928
650209af:	mov    cl,al
650209b1:	sub    cl,0x31
650209b4:	cmp    cl,0x8
650209b7:	jbe    0x6502090f
650209bd:	mov    ecx,DWORD PTR [ebp+0x24]
650209c0:	mov    ecx,DWORD PTR [ecx]
650209c2:	mov    ecx,DWORD PTR [ecx+0xbc]
650209c8:	mov    ecx,DWORD PTR [ecx]
650209ca:	cmp    al,BYTE PTR [ecx]
650209cc:	je     0x65020926
650209d2:	cmp    al,bl
650209d4:	je     0x65020940
650209da:	mov    edx,DWORD PTR [ebp-0x54]
650209dd:	jmp    0x65020af6
650209e2:	mov    DWORD PTR [ebp-0x58],esi
650209e5:	jmp    0x65020a01
650209e7:	cmp    al,0x39
650209e9:	jg     0x65020a05
650209eb:	cmp    DWORD PTR [ebp-0x4c],0x19
650209ef:	jae    0x650209fb
650209f1:	inc    DWORD PTR [ebp-0x4c]
650209f4:	sub    al,bl
650209f6:	mov    BYTE PTR [edi],al
650209f8:	inc    edi
650209f9:	jmp    0x650209fe
650209fb:	inc    DWORD PTR [ebp-0x50]
650209fe:	mov    al,BYTE PTR [edx]
65020a00:	inc    edx
65020a01:	cmp    al,bl
65020a03:	jge    0x650209e7
65020a05:	mov    ecx,DWORD PTR [ebp+0x24]
65020a08:	mov    ecx,DWORD PTR [ecx]
65020a0a:	mov    ecx,DWORD PTR [ecx+0xbc]
65020a10:	mov    ecx,DWORD PTR [ecx]
65020a12:	cmp    al,BYTE PTR [ecx]
65020a14:	je     0x65020977
65020a1a:	cmp    al,0x2b
65020a1c:	je     0x650209a7
65020a1e:	cmp    al,0x2d
65020a20:	je     0x650209a7
65020a22:	jmp    0x65020987
65020a27:	cmp    DWORD PTR [ebp-0x4c],0x0
65020a2b:	mov    DWORD PTR [ebp-0x58],esi
65020a2e:	mov    DWORD PTR [ebp-0x5c],esi
65020a31:	jne    0x65020a59
65020a33:	jmp    0x65020a3b
65020a35:	dec    DWORD PTR [ebp-0x50]
65020a38:	mov    al,BYTE PTR [edx]
65020a3a:	inc    edx
65020a3b:	cmp    al,bl
65020a3d:	je     0x65020a35
65020a3f:	jmp    0x65020a59
65020a41:	cmp    al,0x39
65020a43:	jg     0x65020a1a
65020a45:	cmp    DWORD PTR [ebp-0x4c],0x19
65020a49:	jae    0x65020a56
65020a4b:	inc    DWORD PTR [ebp-0x4c]
65020a4e:	sub    al,bl
65020a50:	mov    BYTE PTR [edi],al
65020a52:	inc    edi
65020a53:	dec    DWORD PTR [ebp-0x50]
65020a56:	mov    al,BYTE PTR [edx]
65020a58:	inc    edx
65020a59:	cmp    al,bl
65020a5b:	jge    0x65020a41
65020a5d:	jmp    0x65020a1a
65020a5f:	sub    al,bl
65020a61:	cmp    al,0x9
65020a63:	mov    DWORD PTR [ebp-0x5c],esi
65020a66:	ja     0x650209da
65020a6c:	push   0x4
65020a6e:	jmp    0x65020911
65020a73:	lea    ecx,[edx-0x2]
65020a76:	mov    DWORD PTR [ebp-0x54],ecx
65020a79:	mov    cl,al
65020a7b:	sub    cl,0x31
65020a7e:	cmp    cl,0x8
65020a81:	ja     0x65020a8a
65020a83:	push   0x9
65020a85:	jmp    0x65020911
65020a8a:	movsx  eax,al
65020a8d:	sub    eax,0x2b
65020a90:	je     0x65020ab2
65020a92:	dec    eax
65020a93:	dec    eax
65020a94:	je     0x65020aa6
65020a96:	sub    eax,0x3
65020a99:	jne    0x650209da
65020a9f:	push   0x8
65020aa1:	jmp    0x65020928
65020aa6:	or     DWORD PTR [ebp-0x68],0xffffffff
65020aaa:	push   0x7
65020aac:	pop    ecx
65020aad:	jmp    0x650208f2
65020ab2:	push   0x7
65020ab4:	jmp    0x65020928
65020ab9:	mov    DWORD PTR [ebp-0x60],esi
65020abc:	jmp    0x65020ac1
65020abe:	mov    al,BYTE PTR [edx]
65020ac0:	inc    edx
65020ac1:	cmp    al,bl
65020ac3:	je     0x65020abe
65020ac5:	sub    al,0x31
65020ac7:	cmp    al,0x8
65020ac9:	jbe    0x65020a83
65020acb:	dec    edx
65020acc:	jmp    0x65020af6
65020ace:	mov    cl,al
65020ad0:	sub    cl,0x31
65020ad3:	cmp    cl,0x8
65020ad6:	jbe    0x65020a83
65020ad8:	cmp    al,bl
65020ada:	jmp    0x65020a99
65020adc:	cmp    DWORD PTR [ebp+0x20],0x0
65020ae0:	je     0x65020b29
65020ae2:	movsx  eax,al
65020ae5:	sub    eax,0x2b
65020ae8:	lea    ecx,[edx-0x1]
65020aeb:	mov    DWORD PTR [ebp-0x54],ecx
65020aee:	je     0x65020ab2
65020af0:	dec    eax
65020af1:	dec    eax
65020af2:	je     0x65020aa6
65020af4:	mov    edx,ecx
65020af6:	cmp    DWORD PTR [ebp-0x58],0x0
65020afa:	mov    eax,DWORD PTR [ebp-0x70]
65020afd:	mov    DWORD PTR [eax],edx
65020aff:	je     0x65020ea9
65020b05:	push   0x18
65020b07:	pop    eax
65020b08:	cmp    DWORD PTR [ebp-0x4c],eax
65020b0b:	jbe    0x65020b1d
65020b0d:	cmp    BYTE PTR [ebp-0x9],0x5
65020b11:	jl     0x65020b16
65020b13:	inc    BYTE PTR [ebp-0x9]
65020b16:	dec    edi
65020b17:	inc    DWORD PTR [ebp-0x50]
65020b1a:	mov    DWORD PTR [ebp-0x4c],eax
65020b1d:	cmp    DWORD PTR [ebp-0x4c],0x0
65020b21:	jbe    0x65020ed0
65020b27:	jmp    0x65020b82
65020b29:	push   0xa
65020b2b:	pop    ecx
65020b2c:	dec    edx
65020b2d:	cmp    ecx,0xa
65020b30:	jne    0x650208f2
65020b36:	jmp    0x65020af6
65020b38:	mov    DWORD PTR [ebp-0x60],esi
65020b3b:	xor    ecx,ecx
65020b3d:	jmp    0x65020b58
65020b3f:	cmp    al,0x39
65020b41:	jg     0x65020b63
65020b43:	imul   ecx,ecx,0xa
65020b46:	movsx  esi,al
65020b49:	lea    ecx,[ecx+esi*1-0x30]
65020b4d:	cmp    ecx,0x1450
65020b53:	jg     0x65020b5e
65020b55:	mov    al,BYTE PTR [edx]
65020b57:	inc    edx
65020b58:	cmp    al,bl
65020b5a:	jge    0x65020b3f
65020b5c:	jmp    0x65020b63
65020b5e:	mov    ecx,0x1451
65020b63:	mov    DWORD PTR [ebp-0x64],ecx
65020b66:	jmp    0x65020b73
65020b68:	cmp    al,0x39
65020b6a:	jg     0x65020acb
65020b70:	mov    al,BYTE PTR [edx]
65020b72:	inc    edx
65020b73:	cmp    al,bl
65020b75:	jge    0x65020b68
65020b77:	jmp    0x65020acb
65020b7c:	dec    DWORD PTR [ebp-0x4c]
65020b7f:	inc    DWORD PTR [ebp-0x50]
65020b82:	dec    edi
65020b83:	cmp    BYTE PTR [edi],0x0
65020b86:	je     0x65020b7c
65020b88:	lea    eax,[ebp-0x3c]
65020b8b:	push   eax
65020b8c:	push   DWORD PTR [ebp-0x4c]
65020b8f:	lea    eax,[ebp-0x20]
65020b92:	push   eax
65020b93:	call   0x65021c24
65020b98:	mov    eax,DWORD PTR [ebp-0x64]
65020b9b:	xor    ecx,ecx
65020b9d:	add    esp,0xc
65020ba0:	cmp    DWORD PTR [ebp-0x68],ecx
65020ba3:	jge    0x65020ba7
65020ba5:	neg    eax
65020ba7:	add    eax,DWORD PTR [ebp-0x50]
65020baa:	cmp    DWORD PTR [ebp-0x60],ecx
65020bad:	jne    0x65020bb2
65020baf:	add    eax,DWORD PTR [ebp+0x18]
65020bb2:	cmp    DWORD PTR [ebp-0x5c],ecx
65020bb5:	jne    0x65020bba
65020bb7:	sub    eax,DWORD PTR [ebp+0x1c]
65020bba:	cmp    eax,0x1450
65020bbf:	jg     0x65020eb2
65020bc5:	cmp    eax,0xffffebb0
65020bca:	jl     0x65020ec9
65020bd0:	mov    esi,0x6502d0a0
65020bd5:	sub    esi,0x60
65020bd8:	cmp    eax,ecx
65020bda:	mov    DWORD PTR [ebp-0x54],eax
65020bdd:	je     0x65020e97
65020be3:	jge    0x65020bf2
65020be5:	neg    eax
65020be7:	mov    esi,0x6502d200
65020bec:	mov    DWORD PTR [ebp-0x54],eax
65020bef:	sub    esi,0x60
65020bf2:	cmp    DWORD PTR [ebp+0x14],ecx
65020bf5:	jne    0x65020bfb
65020bf7:	mov    WORD PTR [ebp-0x3c],cx
65020bfb:	cmp    DWORD PTR [ebp-0x54],ecx
65020bfe:	je     0x65020e97
65020c04:	mov    eax,DWORD PTR [ebp-0x54]
65020c07:	sar    DWORD PTR [ebp-0x54],0x3
65020c0b:	add    esi,0x54
65020c0e:	and    eax,0x7
65020c11:	test   eax,eax
65020c13:	mov    DWORD PTR [ebp-0x4c],esi
65020c16:	je     0x65020e8d
65020c1c:	imul   eax,eax,0xc
65020c1f:	add    eax,esi
65020c21:	mov    ebx,eax
65020c23:	cmp    WORD PTR [ebx],0x8000
65020c28:	mov    DWORD PTR [ebp-0x70],ebx
65020c2b:	jb     0x65020c41
65020c2d:	mov    esi,ebx
65020c2f:	lea    edi,[ebp-0x48]
65020c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020c35:	dec    DWORD PTR [ebp-0x46]
65020c38:	mov    esi,DWORD PTR [ebp-0x4c]
65020c3b:	lea    ebx,[ebp-0x48]
65020c3e:	mov    DWORD PTR [ebp-0x70],ebx
65020c41:	movzx  edx,WORD PTR [ebx+0xa]
65020c45:	mov    ecx,DWORD PTR [ebp-0x32]
65020c48:	xor    eax,eax
65020c4a:	mov    DWORD PTR [ebp-0x50],eax
65020c4d:	mov    DWORD PTR [ebp-0x2c],eax
65020c50:	mov    DWORD PTR [ebp-0x28],eax
65020c53:	mov    DWORD PTR [ebp-0x24],eax
65020c56:	mov    eax,edx
65020c58:	mov    edi,0x7fff
65020c5d:	xor    eax,ecx
65020c5f:	and    ecx,edi
65020c61:	and    edx,edi
65020c63:	and    eax,0x8000
65020c68:	cmp    cx,0x7fff
65020c6d:	lea    edi,[edx+ecx*1]
65020c70:	movzx  edi,di
65020c73:	jae    0x65020e73
65020c79:	cmp    dx,0x7fff
65020c7e:	jae    0x65020e73
65020c84:	cmp    di,0xbffd
65020c89:	ja     0x65020e73
65020c8f:	cmp    di,0x3fbf
65020c94:	ja     0x65020ca3
65020c96:	xor    eax,eax
65020c98:	mov    DWORD PTR [ebp-0x38],eax
65020c9b:	mov    DWORD PTR [ebp-0x3c],eax
65020c9e:	jmp    0x65020e8a
65020ca3:	test   cx,cx
65020ca6:	jne    0x65020cc7
65020ca8:	inc    edi
65020ca9:	test   DWORD PTR [ebp-0x34],0x7fffffff
65020cb0:	jne    0x65020cc7
65020cb2:	cmp    DWORD PTR [ebp-0x38],0x0
65020cb6:	jne    0x65020cc7
65020cb8:	cmp    DWORD PTR [ebp-0x3c],0x0
65020cbc:	jne    0x65020cc7
65020cbe:	and    WORD PTR [ebp-0x32],cx
65020cc2:	jmp    0x65020e8d
65020cc7:	xor    ecx,ecx
65020cc9:	cmp    dx,cx
65020ccc:	jne    0x65020cef
65020cce:	inc    edi
65020ccf:	test   DWORD PTR [ebx+0x8],0x7fffffff
65020cd6:	jne    0x65020cef
65020cd8:	cmp    DWORD PTR [ebx+0x4],ecx
65020cdb:	jne    0x65020cef
65020cdd:	cmp    DWORD PTR [ebx],ecx
65020cdf:	jne    0x65020cef
65020ce1:	mov    DWORD PTR [ebp-0x34],ecx
65020ce4:	mov    DWORD PTR [ebp-0x38],ecx
65020ce7:	mov    DWORD PTR [ebp-0x3c],ecx
65020cea:	jmp    0x65020e8d
65020cef:	and    DWORD PTR [ebp-0x68],ecx
65020cf2:	lea    esi,[ebp-0x28]
65020cf5:	mov    DWORD PTR [ebp-0x58],0x5
65020cfc:	mov    ecx,DWORD PTR [ebp-0x68]
65020cff:	mov    edx,DWORD PTR [ebp-0x58]
65020d02:	add    ecx,ecx
65020d04:	test   edx,edx
65020d06:	mov    DWORD PTR [ebp-0x64],edx
65020d09:	jle    0x65020d60
65020d0b:	lea    ecx,[ebp+ecx*1-0x3c]
65020d0f:	add    ebx,0x8
65020d12:	mov    DWORD PTR [ebp-0x5c],ecx
65020d15:	mov    DWORD PTR [ebp-0x60],ebx
65020d18:	mov    ecx,DWORD PTR [ebp-0x60]
65020d1b:	mov    edx,DWORD PTR [ebp-0x5c]
65020d1e:	movzx  edx,WORD PTR [edx]
65020d21:	movzx  ecx,WORD PTR [ecx]
65020d24:	and    DWORD PTR [ebp-0x78],0x0
65020d28:	imul   ecx,edx
65020d2b:	mov    edx,DWORD PTR [esi-0x4]
65020d2e:	lea    ebx,[edx+ecx*1]
65020d31:	cmp    ebx,edx
65020d33:	jb     0x65020d39
65020d35:	cmp    ebx,ecx
65020d37:	jae    0x65020d40
65020d39:	mov    DWORD PTR [ebp-0x78],0x1
65020d40:	cmp    DWORD PTR [ebp-0x78],0x0
65020d44:	mov    DWORD PTR [esi-0x4],ebx
65020d47:	je     0x65020d4c
65020d49:	inc    WORD PTR [esi]
65020d4c:	add    DWORD PTR [ebp-0x5c],0x2
65020d50:	sub    DWORD PTR [ebp-0x60],0x2
65020d54:	dec    DWORD PTR [ebp-0x64]
65020d57:	cmp    DWORD PTR [ebp-0x64],0x0
65020d5b:	jg     0x65020d18
65020d5d:	mov    ebx,DWORD PTR [ebp-0x70]
65020d60:	inc    esi
65020d61:	inc    esi
65020d62:	inc    DWORD PTR [ebp-0x68]
65020d65:	dec    DWORD PTR [ebp-0x58]
65020d68:	cmp    DWORD PTR [ebp-0x58],0x0
65020d6c:	jg     0x65020cfc
65020d6e:	add    edi,0xc002
65020d74:	test   di,di
65020d77:	jle    0x65020db4
65020d79:	test   DWORD PTR [ebp-0x24],0x80000000
65020d80:	jne    0x65020daf
65020d82:	mov    esi,DWORD PTR [ebp-0x28]
65020d85:	mov    ecx,DWORD PTR [ebp-0x2c]
65020d88:	shl    DWORD PTR [ebp-0x2c],1
65020d8b:	shr    ecx,0x1f
65020d8e:	mov    edx,esi
65020d90:	add    esi,esi
65020d92:	or     esi,ecx
65020d94:	mov    ecx,DWORD PTR [ebp-0x24]
65020d97:	shr    edx,0x1f
65020d9a:	add    ecx,ecx
65020d9c:	or     ecx,edx
65020d9e:	add    edi,0xffff
65020da4:	test   di,di
65020da7:	mov    DWORD PTR [ebp-0x28],esi
65020daa:	mov    DWORD PTR [ebp-0x24],ecx
65020dad:	jg     0x65020d79
65020daf:	test   di,di
65020db2:	jg     0x65020e01
65020db4:	add    edi,0xffff
65020dba:	test   di,di
65020dbd:	jge    0x65020e01
65020dbf:	mov    ecx,edi
65020dc1:	neg    ecx
65020dc3:	movzx  esi,cx
65020dc6:	add    edi,esi
65020dc8:	test   BYTE PTR [ebp-0x2c],0x1
65020dcc:	je     0x65020dd1
65020dce:	inc    DWORD PTR [ebp-0x50]
65020dd1:	mov    ecx,DWORD PTR [ebp-0x24]
65020dd4:	mov    ebx,DWORD PTR [ebp-0x28]
65020dd7:	mov    edx,DWORD PTR [ebp-0x28]
65020dda:	shr    DWORD PTR [ebp-0x24],1
65020ddd:	shl    ecx,0x1f
65020de0:	shr    ebx,1
65020de2:	or     ebx,ecx
65020de4:	mov    ecx,DWORD PTR [ebp-0x2c]
65020de7:	shl    edx,0x1f
65020dea:	shr    ecx,1
65020dec:	or     ecx,edx
65020dee:	dec    esi
65020def:	mov    DWORD PTR [ebp-0x28],ebx
65020df2:	mov    DWORD PTR [ebp-0x2c],ecx
65020df5:	jne    0x65020dc8
65020df7:	cmp    DWORD PTR [ebp-0x50],esi
65020dfa:	je     0x65020e01
65020dfc:	or     WORD PTR [ebp-0x2c],0x1
65020e01:	cmp    WORD PTR [ebp-0x2c],0x8000
65020e07:	ja     0x65020e1a
65020e09:	mov    ecx,DWORD PTR [ebp-0x2c]
65020e0c:	and    ecx,0x1ffff
65020e12:	cmp    ecx,0x18000
65020e18:	jne    0x65020e4d
65020e1a:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
65020e1e:	jne    0x65020e4a
65020e20:	and    DWORD PTR [ebp-0x2a],0x0
65020e24:	cmp    DWORD PTR [ebp-0x26],0xffffffff
65020e28:	jne    0x65020e45
65020e2a:	and    DWORD PTR [ebp-0x26],0x0
65020e2e:	cmp    WORD PTR [ebp-0x22],0xffff
65020e34:	jne    0x65020e3f
65020e36:	mov    WORD PTR [ebp-0x22],0x8000
65020e3c:	inc    edi
65020e3d:	jmp    0x65020e4d
65020e3f:	inc    WORD PTR [ebp-0x22]
65020e43:	jmp    0x65020e4d
65020e45:	inc    DWORD PTR [ebp-0x26]
65020e48:	jmp    0x65020e4d
65020e4a:	inc    DWORD PTR [ebp-0x2a]
65020e4d:	cmp    di,0x7fff
65020e52:	mov    esi,DWORD PTR [ebp-0x4c]
65020e55:	jae    0x65020e73
65020e57:	mov    cx,WORD PTR [ebp-0x2a]
65020e5b:	mov    WORD PTR [ebp-0x3c],cx
65020e5f:	mov    ecx,DWORD PTR [ebp-0x28]
65020e62:	mov    DWORD PTR [ebp-0x3a],ecx
65020e65:	mov    ecx,DWORD PTR [ebp-0x24]
65020e68:	or     edi,eax
65020e6a:	mov    DWORD PTR [ebp-0x36],ecx
65020e6d:	mov    WORD PTR [ebp-0x32],di
65020e71:	jmp    0x65020e8d
65020e73:	neg    ax
65020e76:	sbb    eax,eax
65020e78:	and    DWORD PTR [ebp-0x38],0x0
65020e7c:	and    eax,0x80000000
65020e81:	add    eax,0x7fff8000
65020e86:	and    DWORD PTR [ebp-0x3c],0x0
65020e8a:	mov    DWORD PTR [ebp-0x34],eax
65020e8d:	cmp    DWORD PTR [ebp-0x54],0x0
65020e91:	jne    0x65020c04
65020e97:	mov    eax,DWORD PTR [ebp-0x34]
65020e9a:	movzx  ecx,WORD PTR [ebp-0x3c]
65020e9e:	mov    esi,DWORD PTR [ebp-0x3a]
65020ea1:	mov    edx,DWORD PTR [ebp-0x36]
65020ea4:	shr    eax,0x10
65020ea7:	jmp    0x65020ed8
65020ea9:	mov    DWORD PTR [ebp-0x6c],0x4
65020eb0:	jmp    0x65020ed0
65020eb2:	xor    esi,esi
65020eb4:	mov    eax,0x7fff
65020eb9:	mov    edx,0x80000000
65020ebe:	xor    ecx,ecx
65020ec0:	mov    DWORD PTR [ebp-0x6c],0x2
65020ec7:	jmp    0x65020ed8
65020ec9:	mov    DWORD PTR [ebp-0x6c],0x1
65020ed0:	xor    ecx,ecx
65020ed2:	xor    eax,eax
65020ed4:	xor    edx,edx
65020ed6:	xor    esi,esi
65020ed8:	mov    edi,DWORD PTR [ebp-0x7c]
65020edb:	or     eax,DWORD PTR [ebp-0x74]
65020ede:	mov    WORD PTR [edi],cx
65020ee1:	mov    WORD PTR [edi+0xa],ax
65020ee5:	mov    eax,DWORD PTR [ebp-0x6c]
65020ee8:	mov    DWORD PTR [edi+0x2],esi
65020eeb:	mov    DWORD PTR [edi+0x6],edx
65020eee:	mov    ecx,DWORD PTR [ebp-0x4]
65020ef1:	pop    edi
65020ef2:	pop    esi
65020ef3:	xor    ecx,ebp
65020ef5:	pop    ebx
65020ef6:	call   0x6501292c
65020efb:	leave  
65020efc:	ret    
65020efd:	add    eax,0x59650209
65020f02:	or     DWORD PTR [edx],eax
65020f04:	gs scas eax,DWORD PTR es:[edi]
65020f06:	or     DWORD PTR [edx],eax
65020f08:	gs loop 0x65020f14
65020f0b:	add    ah,BYTE PTR [ebp+0x27]
65020f0e:	or     al,BYTE PTR [edx]
65020f10:	gs pop edi
65020f12:	or     al,BYTE PTR [edx]
65020f14:	gs jae 0x65020f21
65020f17:	add    ah,BYTE PTR [ebp-0x32]
65020f1a:	or     al,BYTE PTR [edx]
65020f1c:	gs mov ecx,0x3865020a
65020f22:	or     eax,DWORD PTR [edx]
65020f24:	gs sub eax,0xdc65020b
65020f2a:	or     al,BYTE PTR [edx]
65020f2c:	gs push ebp
65020f2e:	mov    ebp,esp
65020f30:	sub    esp,0x74
65020f33:	mov    eax,ds:0x6502c09c
65020f38:	xor    eax,ebp
65020f3a:	mov    DWORD PTR [ebp-0x4],eax
65020f3d:	push   ebx
65020f3e:	mov    ebx,DWORD PTR [ebp+0x1c]
65020f41:	push   esi
65020f42:	push   edi
65020f43:	lea    esi,[ebp+0x8]
65020f46:	lea    edi,[ebp-0x10]
65020f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020f4b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
65020f4d:	mov    edx,DWORD PTR [ebp-0x8]
65020f50:	mov    ecx,edx
65020f52:	mov    eax,0x8000
65020f57:	and    ecx,eax
65020f59:	and    edx,0x7fff
65020f5f:	test   cx,cx
65020f62:	mov    DWORD PTR [ebp-0x60],ebx
65020f65:	mov    BYTE PTR [ebp-0x30],0xcc
65020f69:	mov    BYTE PTR [ebp-0x2f],0xcc
65020f6d:	mov    BYTE PTR [ebp-0x2e],0xcc
65020f71:	mov    BYTE PTR [ebp-0x2d],0xcc
65020f75:	mov    BYTE PTR [ebp-0x2c],0xcc
65020f79:	mov    BYTE PTR [ebp-0x2b],0xcc
65020f7d:	mov    BYTE PTR [ebp-0x2a],0xcc
65020f81:	mov    BYTE PTR [ebp-0x29],0xcc
65020f85:	mov    BYTE PTR [ebp-0x28],0xcc
65020f89:	mov    BYTE PTR [ebp-0x27],0xcc
65020f8d:	mov    BYTE PTR [ebp-0x26],0xfb
65020f91:	mov    BYTE PTR [ebp-0x25],0x3f
65020f95:	mov    DWORD PTR [ebp-0x74],0x1
65020f9c:	mov    DWORD PTR [ebp-0x6c],ecx
65020f9f:	je     0x65020fa7
65020fa1:	mov    BYTE PTR [ebx+0x2],0x2d
65020fa5:	jmp    0x65020fab
65020fa7:	mov    BYTE PTR [ebx+0x2],0x20
65020fab:	test   dx,dx
65020fae:	mov    esi,DWORD PTR [ebp-0xc]
65020fb1:	mov    edi,DWORD PTR [ebp-0x10]
65020fb4:	jne    0x65020fe4
65020fb6:	test   esi,esi
65020fb8:	jne    0x65020fe4
65020fba:	test   edi,edi
65020fbc:	jne    0x65020fe4
65020fbe:	and    WORD PTR [ebx],di
65020fc1:	cmp    cx,ax
65020fc4:	setne  al
65020fc7:	dec    al
65020fc9:	and    al,0xd
65020fcb:	add    al,0x20
65020fcd:	mov    BYTE PTR [ebx+0x2],al
65020fd0:	mov    BYTE PTR [ebx+0x3],0x1
65020fd4:	mov    BYTE PTR [ebx+0x4],0x30
65020fd8:	mov    BYTE PTR [ebx+0x5],0x0
65020fdc:	xor    eax,eax
65020fde:	inc    eax
65020fdf:	jmp    0x650217ab
65020fe4:	cmp    dx,0x7fff
65020fe9:	jne    0x6502108d
65020fef:	mov    eax,0x80000000
65020ff4:	cmp    esi,eax
65020ff6:	mov    WORD PTR [ebx],0x1
65020ffb:	jne    0x65021001
65020ffd:	test   edi,edi
65020fff:	je     0x65021010
65021001:	test   esi,0x40000000
65021007:	jne    0x65021010
65021009:	push   0x65026628
6502100e:	jmp    0x65021061
65021010:	test   cx,cx
65021013:	je     0x65021028
65021015:	cmp    esi,0xc0000000
6502101b:	jne    0x65021028
6502101d:	test   edi,edi
6502101f:	jne    0x6502105c
65021021:	push   0x65026620
65021026:	jmp    0x65021035
65021028:	cmp    esi,eax
6502102a:	jne    0x6502105c
6502102c:	test   edi,edi
6502102e:	jne    0x6502105c
65021030:	push   0x65026618
65021035:	lea    eax,[ebx+0x4]
65021038:	push   0x16
6502103a:	push   eax
6502103b:	call   0x65014174
65021040:	add    esp,0xc
65021043:	xor    esi,esi
65021045:	test   eax,eax
65021047:	je     0x65021056
65021049:	push   esi
6502104a:	push   esi
6502104b:	push   esi
6502104c:	push   esi
6502104d:	push   esi
6502104e:	call   0x65012323
65021053:	add    esp,0x14
65021056:	mov    BYTE PTR [ebx+0x3],0x5
6502105a:	jmp    0x65021086
6502105c:	push   0x65026610
65021061:	lea    eax,[ebx+0x4]
65021064:	push   0x16
65021066:	push   eax
65021067:	call   0x65014174
6502106c:	add    esp,0xc
6502106f:	xor    esi,esi
65021071:	test   eax,eax
65021073:	je     0x65021082
65021075:	push   esi
65021076:	push   esi
65021077:	push   esi
65021078:	push   esi
65021079:	push   esi
6502107a:	call   0x65012323
6502107f:	add    esp,0x14
65021082:	mov    BYTE PTR [ebx+0x3],0x6
65021086:	xor    eax,eax
65021088:	jmp    0x650217ab
6502108d:	movzx  ecx,dx
65021090:	mov    ebx,ecx
65021092:	imul   ecx,ecx,0x4d10
65021098:	shr    ebx,0x8
6502109b:	mov    eax,esi
6502109d:	shr    eax,0x18
650210a0:	lea    eax,[ebx+eax*2]
650210a3:	imul   eax,eax,0x4d
650210a6:	lea    eax,[eax+ecx*1-0x134312f4]
650210ad:	sar    eax,0x10
650210b0:	movzx  ecx,ax
650210b3:	movsx  ebx,cx
650210b6:	mov    DWORD PTR [ebp-0x4c],ecx
650210b9:	xor    eax,eax
650210bb:	mov    ecx,0x6502d0a0
650210c0:	neg    ebx
650210c2:	sub    ecx,0x60
650210c5:	cmp    ebx,eax
650210c7:	mov    WORD PTR [ebp-0x16],dx
650210cb:	mov    DWORD PTR [ebp-0x1a],esi
650210ce:	mov    DWORD PTR [ebp-0x1e],edi
650210d1:	mov    WORD PTR [ebp-0x20],ax
650210d5:	mov    DWORD PTR [ebp-0x68],ecx
650210d8:	je     0x6502138c
650210de:	jge    0x650210ed
650210e0:	mov    ecx,0x6502d200
650210e5:	neg    ebx
650210e7:	sub    ecx,0x60
650210ea:	mov    DWORD PTR [ebp-0x68],ecx
650210ed:	cmp    ebx,eax
650210ef:	je     0x6502138c
650210f5:	add    DWORD PTR [ebp-0x68],0x54
650210f9:	mov    ecx,ebx
650210fb:	and    ecx,0x7
650210fe:	sar    ebx,0x3
65021101:	test   ecx,ecx
65021103:	je     0x65021382
65021109:	imul   ecx,ecx,0xc
6502110c:	add    ecx,DWORD PTR [ebp-0x68]
6502110f:	cmp    WORD PTR [ecx],0x8000
65021114:	mov    DWORD PTR [ebp-0x64],ecx
65021117:	jb     0x6502112c
65021119:	mov    esi,ecx
6502111b:	lea    edi,[ebp-0x3c]
6502111e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6502111f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021120:	lea    eax,[ebp-0x3c]
65021123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021124:	dec    DWORD PTR [ebp-0x3a]
65021127:	mov    DWORD PTR [ebp-0x64],eax
6502112a:	mov    ecx,eax
6502112c:	movzx  edi,WORD PTR [ecx+0xa]
65021130:	mov    edx,DWORD PTR [ebp-0x16]
65021133:	xor    eax,eax
65021135:	mov    ecx,edi
65021137:	mov    esi,0x7fff
6502113c:	xor    ecx,edx
6502113e:	and    edx,esi
65021140:	and    edi,esi
65021142:	mov    DWORD PTR [ebp-0x48],eax
65021145:	mov    DWORD PTR [ebp-0x10],eax
65021148:	mov    DWORD PTR [ebp-0xc],eax
6502114b:	mov    DWORD PTR [ebp-0x8],eax
6502114e:	and    ecx,0x8000
65021154:	cmp    dx,si
65021157:	lea    eax,[edi+edx*1]
6502115a:	movzx  eax,ax
6502115d:	jae    0x65021366
65021163:	cmp    di,si
65021166:	jae    0x65021366
6502116c:	cmp    ax,0xbffd
65021170:	ja     0x65021366
65021176:	cmp    ax,0x3fbf
6502117a:	ja     0x6502118c
6502117c:	xor    eax,eax
6502117e:	mov    DWORD PTR [ebp-0x18],eax
65021181:	mov    DWORD PTR [ebp-0x1c],eax
65021184:	mov    DWORD PTR [ebp-0x20],eax
65021187:	jmp    0x65021382
6502118c:	xor    esi,esi
6502118e:	cmp    dx,si
65021191:	jne    0x650211b0
65021193:	inc    eax
65021194:	test   DWORD PTR [ebp-0x18],0x7fffffff
6502119b:	jne    0x650211b0
6502119d:	cmp    DWORD PTR [ebp-0x1c],esi
650211a0:	jne    0x650211b0
650211a2:	cmp    DWORD PTR [ebp-0x20],esi
650211a5:	jne    0x650211b0
650211a7:	mov    WORD PTR [ebp-0x16],si
650211ab:	jmp    0x65021382
650211b0:	cmp    di,si
650211b3:	jne    0x650211d9
650211b5:	mov    edx,DWORD PTR [ebp-0x64]
650211b8:	inc    eax
650211b9:	test   DWORD PTR [edx+0x8],0x7fffffff
650211c0:	jne    0x650211d9
650211c2:	cmp    DWORD PTR [edx+0x4],esi
650211c5:	jne    0x650211d9
650211c7:	cmp    DWORD PTR [edx],esi
650211c9:	jne    0x650211d9
650211cb:	mov    DWORD PTR [ebp-0x18],esi
650211ce:	mov    DWORD PTR [ebp-0x1c],esi
650211d1:	mov    DWORD PTR [ebp-0x20],esi
650211d4:	jmp    0x65021382
650211d9:	lea    edi,[ebp-0xc]
650211dc:	mov    DWORD PTR [ebp-0x5c],esi
650211df:	mov    DWORD PTR [ebp-0x44],edi
650211e2:	mov    DWORD PTR [ebp-0x40],0x5
650211e9:	mov    edx,DWORD PTR [ebp-0x5c]
650211ec:	mov    esi,DWORD PTR [ebp-0x40]
650211ef:	add    edx,edx
650211f1:	test   esi,esi
650211f3:	mov    DWORD PTR [ebp-0x50],esi
650211f6:	jle    0x65021250
650211f8:	lea    edx,[ebp+edx*1-0x20]
650211fc:	mov    DWORD PTR [ebp-0x58],edx
650211ff:	mov    edx,DWORD PTR [ebp-0x64]
65021202:	add    edx,0x8
65021205:	mov    DWORD PTR [ebp-0x54],edx
65021208:	mov    edx,DWORD PTR [ebp-0x58]
6502120b:	mov    esi,DWORD PTR [ebp-0x54]
6502120e:	movzx  esi,WORD PTR [esi]
65021211:	movzx  edx,WORD PTR [edx]
65021214:	mov    edi,DWORD PTR [edi-0x4]
65021217:	imul   edx,esi
6502121a:	and    DWORD PTR [ebp-0x70],0x0
6502121e:	lea    esi,[edi+edx*1]
65021221:	cmp    esi,edi
65021223:	jb     0x65021229
65021225:	cmp    esi,edx
65021227:	jae    0x65021230
65021229:	mov    DWORD PTR [ebp-0x70],0x1
65021230:	cmp    DWORD PTR [ebp-0x70],0x0
65021234:	mov    edi,DWORD PTR [ebp-0x44]
65021237:	mov    DWORD PTR [edi-0x4],esi
6502123a:	je     0x6502123f
6502123c:	inc    WORD PTR [edi]
6502123f:	add    DWORD PTR [ebp-0x58],0x2
65021243:	sub    DWORD PTR [ebp-0x54],0x2
65021247:	dec    DWORD PTR [ebp-0x50]
6502124a:	cmp    DWORD PTR [ebp-0x50],0x0
6502124e:	jg     0x65021208
65021250:	inc    edi
65021251:	inc    edi
65021252:	inc    DWORD PTR [ebp-0x5c]
65021255:	dec    DWORD PTR [ebp-0x40]
65021258:	cmp    DWORD PTR [ebp-0x40],0x0
6502125c:	mov    DWORD PTR [ebp-0x44],edi
6502125f:	jg     0x650211e9
65021261:	add    eax,0xc002
65021266:	test   ax,ax
65021269:	jle    0x650212a6
6502126b:	test   DWORD PTR [ebp-0x8],0x80000000
65021272:	jne    0x650212a1
65021274:	mov    edx,DWORD PTR [ebp-0x10]
65021277:	mov    edi,DWORD PTR [ebp-0xc]
6502127a:	mov    esi,DWORD PTR [ebp-0xc]
6502127d:	shl    DWORD PTR [ebp-0x10],1
65021280:	shr    edx,0x1f
65021283:	add    edi,edi
65021285:	or     edi,edx
65021287:	mov    edx,DWORD PTR [ebp-0x8]
6502128a:	shr    esi,0x1f
6502128d:	add    edx,edx
6502128f:	or     edx,esi
65021291:	add    eax,0xffff
65021296:	test   ax,ax
65021299:	mov    DWORD PTR [ebp-0xc],edi
6502129c:	mov    DWORD PTR [ebp-0x8],edx
6502129f:	jg     0x6502126b
650212a1:	test   ax,ax
650212a4:	jg     0x650212f8
650212a6:	add    eax,0xffff
650212ab:	test   ax,ax
650212ae:	jge    0x650212f8
650212b0:	mov    edx,eax
650212b2:	neg    edx
650212b4:	movzx  edx,dx
650212b7:	mov    DWORD PTR [ebp-0x44],edx
650212ba:	add    eax,edx
650212bc:	test   BYTE PTR [ebp-0x10],0x1
650212c0:	je     0x650212c5
650212c2:	inc    DWORD PTR [ebp-0x48]
650212c5:	mov    edx,DWORD PTR [ebp-0x8]
650212c8:	mov    edi,DWORD PTR [ebp-0xc]
650212cb:	mov    esi,DWORD PTR [ebp-0xc]
650212ce:	shr    DWORD PTR [ebp-0x8],1
650212d1:	shl    edx,0x1f
650212d4:	shr    edi,1
650212d6:	or     edi,edx
650212d8:	mov    edx,DWORD PTR [ebp-0x10]
650212db:	shl    esi,0x1f
650212de:	shr    edx,1
650212e0:	or     edx,esi
650212e2:	dec    DWORD PTR [ebp-0x44]
650212e5:	mov    DWORD PTR [ebp-0xc],edi
650212e8:	mov    DWORD PTR [ebp-0x10],edx
650212eb:	jne    0x650212bc
650212ed:	cmp    DWORD PTR [ebp-0x48],0x0
650212f1:	je     0x650212f8
650212f3:	or     WORD PTR [ebp-0x10],0x1
650212f8:	cmp    WORD PTR [ebp-0x10],0x8000
650212fe:	ja     0x65021311
65021300:	mov    edx,DWORD PTR [ebp-0x10]
65021303:	and    edx,0x1ffff
65021309:	cmp    edx,0x18000
6502130f:	jne    0x65021344
65021311:	cmp    DWORD PTR [ebp-0xe],0xffffffff
65021315:	jne    0x65021341
65021317:	and    DWORD PTR [ebp-0xe],0x0
6502131b:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6502131f:	jne    0x6502133c
65021321:	and    DWORD PTR [ebp-0xa],0x0
65021325:	cmp    WORD PTR [ebp-0x6],0xffff
6502132b:	jne    0x65021336
6502132d:	mov    WORD PTR [ebp-0x6],0x8000
65021333:	inc    eax
65021334:	jmp    0x65021344
65021336:	inc    WORD PTR [ebp-0x6]
6502133a:	jmp    0x65021344
6502133c:	inc    DWORD PTR [ebp-0xa]
6502133f:	jmp    0x65021344
65021341:	inc    DWORD PTR [ebp-0xe]
65021344:	cmp    ax,0x7fff
65021348:	jae    0x65021366
6502134a:	mov    dx,WORD PTR [ebp-0xe]
6502134e:	mov    WORD PTR [ebp-0x20],dx
65021352:	mov    edx,DWORD PTR [ebp-0xc]
65021355:	mov    DWORD PTR [ebp-0x1e],edx
65021358:	mov    edx,DWORD PTR [ebp-0x8]
6502135b:	or     eax,ecx
6502135d:	mov    DWORD PTR [ebp-0x1a],edx
65021360:	mov    WORD PTR [ebp-0x16],ax
65021364:	jmp    0x65021382
65021366:	neg    cx
65021369:	sbb    ecx,ecx
6502136b:	and    DWORD PTR [ebp-0x1c],0x0
6502136f:	and    ecx,0x80000000
65021375:	add    ecx,0x7fff8000
6502137b:	and    DWORD PTR [ebp-0x20],0x0
6502137f:	mov    DWORD PTR [ebp-0x18],ecx
65021382:	test   ebx,ebx
65021384:	jne    0x650210f5
6502138a:	xor    eax,eax
6502138c:	mov    ecx,DWORD PTR [ebp-0x18]
6502138f:	shr    ecx,0x10
65021392:	cmp    cx,0x3fff
65021397:	mov    ebx,0x7fff
6502139c:	jb     0x650215ea
650213a2:	mov    esi,DWORD PTR [ebp-0x26]
650213a5:	inc    DWORD PTR [ebp-0x4c]
650213a8:	movzx  edx,cx
650213ab:	mov    ecx,esi
650213ad:	xor    ecx,edx
650213af:	and    edx,ebx
650213b1:	and    esi,ebx
650213b3:	and    ecx,0x8000
650213b9:	cmp    dx,bx
650213bc:	lea    edi,[esi+edx*1]
650213bf:	mov    DWORD PTR [ebp-0x58],eax
650213c2:	mov    DWORD PTR [ebp-0x10],eax
650213c5:	mov    DWORD PTR [ebp-0xc],eax
650213c8:	mov    DWORD PTR [ebp-0x8],eax
650213cb:	movzx  edi,di
650213ce:	jae    0x650215d0
650213d4:	cmp    si,bx
650213d7:	jae    0x650215d0
650213dd:	cmp    di,0xbffd
650213e2:	ja     0x650215d0
650213e8:	cmp    di,0x3fbf
650213ed:	ja     0x650213f7
650213ef:	mov    DWORD PTR [ebp-0x18],eax
650213f2:	jmp    0x650215e4
650213f7:	cmp    dx,ax
650213fa:	jne    0x65021419
650213fc:	inc    edi
650213fd:	test   DWORD PTR [ebp-0x18],0x7fffffff
65021404:	jne    0x65021419
65021406:	cmp    DWORD PTR [ebp-0x1c],eax
65021409:	jne    0x65021419
6502140b:	cmp    DWORD PTR [ebp-0x20],eax
6502140e:	jne    0x65021419
65021410:	mov    WORD PTR [ebp-0x16],ax
65021414:	jmp    0x650215ea
65021419:	cmp    si,ax
6502141c:	jne    0x65021432
6502141e:	inc    edi
6502141f:	test   DWORD PTR [ebp-0x28],0x7fffffff
65021426:	jne    0x65021432
65021428:	cmp    DWORD PTR [ebp-0x2c],eax
6502142b:	jne    0x65021432
6502142d:	cmp    DWORD PTR [ebp-0x30],eax
65021430:	je     0x650213ef
65021432:	and    DWORD PTR [ebp-0x54],0x0
65021436:	lea    eax,[ebp-0xc]
65021439:	mov    DWORD PTR [ebp-0x40],0x5
65021440:	mov    edx,DWORD PTR [ebp-0x54]
65021443:	mov    esi,DWORD PTR [ebp-0x40]
65021446:	add    edx,edx
65021448:	test   esi,esi
6502144a:	mov    DWORD PTR [ebp-0x50],esi
6502144d:	jle    0x650214a1
6502144f:	lea    esi,[ebp-0x28]
65021452:	lea    edx,[ebp+edx*1-0x20]
65021456:	mov    DWORD PTR [ebp-0x5c],esi
65021459:	mov    DWORD PTR [ebp-0x48],edx
6502145c:	mov    edx,DWORD PTR [ebp-0x5c]
6502145f:	mov    esi,DWORD PTR [ebp-0x48]
65021462:	movzx  esi,WORD PTR [esi]
65021465:	movzx  edx,WORD PTR [edx]
65021468:	and    DWORD PTR [ebp-0x44],0x0
6502146c:	imul   edx,esi
6502146f:	mov    esi,DWORD PTR [eax-0x4]
65021472:	lea    ebx,[esi+edx*1]
65021475:	cmp    ebx,esi
65021477:	jb     0x6502147d
65021479:	cmp    ebx,edx
6502147b:	jae    0x65021484
6502147d:	mov    DWORD PTR [ebp-0x44],0x1
65021484:	cmp    DWORD PTR [ebp-0x44],0x0
65021488:	mov    DWORD PTR [eax-0x4],ebx
6502148b:	je     0x65021490
6502148d:	inc    WORD PTR [eax]
65021490:	add    DWORD PTR [ebp-0x48],0x2
65021494:	sub    DWORD PTR [ebp-0x5c],0x2
65021498:	dec    DWORD PTR [ebp-0x50]
6502149b:	cmp    DWORD PTR [ebp-0x50],0x0
6502149f:	jg     0x6502145c
650214a1:	inc    eax
650214a2:	inc    eax
650214a3:	inc    DWORD PTR [ebp-0x54]
650214a6:	dec    DWORD PTR [ebp-0x40]
650214a9:	cmp    DWORD PTR [ebp-0x40],0x0
650214ad:	jg     0x65021440
650214af:	add    edi,0xc002
650214b5:	xor    eax,eax
650214b7:	cmp    di,ax
650214ba:	jle    0x650214f8
650214bc:	test   DWORD PTR [ebp-0x8],0x80000000
650214c3:	jne    0x650214f3
650214c5:	mov    edx,DWORD PTR [ebp-0x10]
650214c8:	mov    ebx,DWORD PTR [ebp-0xc]
650214cb:	mov    esi,DWORD PTR [ebp-0xc]
650214ce:	shl    DWORD PTR [ebp-0x10],1
650214d1:	shr    edx,0x1f
650214d4:	add    ebx,ebx
650214d6:	or     ebx,edx
650214d8:	mov    edx,DWORD PTR [ebp-0x8]
650214db:	shr    esi,0x1f
650214de:	add    edx,edx
650214e0:	or     edx,esi
650214e2:	add    edi,0xffff
650214e8:	cmp    di,ax
650214eb:	mov    DWORD PTR [ebp-0xc],ebx
650214ee:	mov    DWORD PTR [ebp-0x8],edx
650214f1:	jg     0x650214bc
650214f3:	cmp    di,ax
650214f6:	jg     0x65021545
650214f8:	add    edi,0xffff
650214fe:	cmp    di,ax
65021501:	jge    0x65021545
65021503:	mov    eax,edi
65021505:	neg    eax
65021507:	movzx  eax,ax
6502150a:	add    edi,eax
6502150c:	test   BYTE PTR [ebp-0x10],0x1
65021510:	je     0x65021515
65021512:	inc    DWORD PTR [ebp-0x58]
65021515:	mov    edx,DWORD PTR [ebp-0x8]
65021518:	mov    ebx,DWORD PTR [ebp-0xc]
6502151b:	mov    esi,DWORD PTR [ebp-0xc]
6502151e:	shr    DWORD PTR [ebp-0x8],1
65021521:	shl    edx,0x1f
65021524:	shr    ebx,1
65021526:	or     ebx,edx
65021528:	mov    edx,DWORD PTR [ebp-0x10]
6502152b:	shl    esi,0x1f
6502152e:	shr    edx,1
65021530:	or     edx,esi
65021532:	dec    eax
65021533:	mov    DWORD PTR [ebp-0xc],ebx
65021536:	mov    DWORD PTR [ebp-0x10],edx
65021539:	jne    0x6502150c
6502153b:	cmp    DWORD PTR [ebp-0x58],eax
6502153e:	je     0x65021545
65021540:	or     WORD PTR [ebp-0x10],0x1
65021545:	cmp    WORD PTR [ebp-0x10],0x8000
6502154b:	ja     0x6502155e
6502154d:	mov    edx,DWORD PTR [ebp-0x10]
65021550:	and    edx,0x1ffff
65021556:	cmp    edx,0x18000
6502155c:	jne    0x6502158f
6502155e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
65021562:	jne    0x6502158c
65021564:	cmp    DWORD PTR [ebp-0xa],0xffffffff
65021568:	mov    DWORD PTR [ebp-0xe],eax
6502156b:	jne    0x65021587
6502156d:	cmp    WORD PTR [ebp-0x6],0xffff
65021573:	mov    DWORD PTR [ebp-0xa],eax
65021576:	jne    0x65021581
65021578:	mov    WORD PTR [ebp-0x6],0x8000
6502157e:	inc    edi
6502157f:	jmp    0x6502158f
65021581:	inc    WORD PTR [ebp-0x6]
65021585:	jmp    0x6502158f
65021587:	inc    DWORD PTR [ebp-0xa]
6502158a:	jmp    0x6502158f
6502158c:	inc    DWORD PTR [ebp-0xe]
6502158f:	cmp    di,0x7fff
65021594:	jb     0x650215b4
65021596:	neg    cx
65021599:	mov    DWORD PTR [ebp-0x1c],eax
6502159c:	mov    DWORD PTR [ebp-0x20],eax
6502159f:	sbb    ecx,ecx
650215a1:	and    ecx,0x80000000
650215a7:	add    ecx,0x7fff8000
650215ad:	mov    DWORD PTR [ebp-0x18],ecx
650215b0:	xor    eax,eax
650215b2:	jmp    0x650215ea
650215b4:	mov    ax,WORD PTR [ebp-0xe]
650215b8:	mov    WORD PTR [ebp-0x20],ax
650215bc:	mov    eax,DWORD PTR [ebp-0xc]
650215bf:	mov    DWORD PTR [ebp-0x1e],eax
650215c2:	mov    eax,DWORD PTR [ebp-0x8]
650215c5:	or     edi,ecx
650215c7:	mov    DWORD PTR [ebp-0x1a],eax
650215ca:	mov    WORD PTR [ebp-0x16],di
650215ce:	jmp    0x650215b0
650215d0:	neg    cx
650215d3:	sbb    ecx,ecx
650215d5:	and    ecx,0x80000000
650215db:	add    ecx,0x7fff8000
650215e1:	mov    DWORD PTR [ebp-0x18],ecx
650215e4:	mov    DWORD PTR [ebp-0x1c],eax
650215e7:	mov    DWORD PTR [ebp-0x20],eax
650215ea:	test   BYTE PTR [ebp+0x18],0x1
650215ee:	mov    edx,DWORD PTR [ebp-0x60]
650215f1:	mov    ecx,DWORD PTR [ebp-0x4c]
650215f4:	mov    WORD PTR [edx],cx
650215f7:	je     0x6502162b
650215f9:	movsx  ecx,cx
650215fc:	add    DWORD PTR [ebp+0x14],ecx
650215ff:	cmp    DWORD PTR [ebp+0x14],eax
65021602:	jg     0x6502162b
65021604:	and    WORD PTR [edx],0x0
65021608:	cmp    WORD PTR [ebp-0x6c],0x8000
6502160e:	mov    BYTE PTR [edx+0x3],0x1
65021612:	setne  al
65021615:	dec    al
65021617:	and    al,0xd
65021619:	add    al,0x20
6502161b:	mov    BYTE PTR [edx+0x2],al
6502161e:	mov    BYTE PTR [edx+0x4],0x30
65021622:	mov    BYTE PTR [edx+0x5],0x0
65021626:	jmp    0x65020fdc
6502162b:	push   0x15
6502162d:	pop    ecx
6502162e:	cmp    DWORD PTR [ebp+0x14],ecx
65021631:	jle    0x65021636
65021633:	mov    DWORD PTR [ebp+0x14],ecx
65021636:	mov    esi,DWORD PTR [ebp-0x18]
65021639:	shr    esi,0x10
6502163c:	push   0x8
6502163e:	sub    esi,0x3ffe
65021644:	mov    WORD PTR [ebp-0x16],ax
65021648:	pop    ebx
65021649:	mov    eax,DWORD PTR [ebp-0x20]
6502164c:	mov    edi,DWORD PTR [ebp-0x1c]
6502164f:	mov    ecx,DWORD PTR [ebp-0x1c]
65021652:	shl    DWORD PTR [ebp-0x20],1
65021655:	shr    eax,0x1f
65021658:	add    edi,edi
6502165a:	or     edi,eax
6502165c:	mov    eax,DWORD PTR [ebp-0x18]
6502165f:	shr    ecx,0x1f
65021662:	add    eax,eax
65021664:	or     eax,ecx
65021666:	dec    ebx
65021667:	mov    DWORD PTR [ebp-0x1c],edi
6502166a:	mov    DWORD PTR [ebp-0x18],eax
6502166d:	jne    0x65021649
6502166f:	test   esi,esi
65021671:	jge    0x650216a5
65021673:	neg    esi
65021675:	and    esi,0xff
6502167b:	jle    0x650216a5
6502167d:	mov    eax,DWORD PTR [ebp-0x18]
65021680:	mov    edi,DWORD PTR [ebp-0x1c]
65021683:	mov    ecx,DWORD PTR [ebp-0x1c]
65021686:	shr    DWORD PTR [ebp-0x18],1
65021689:	shl    eax,0x1f
6502168c:	shr    edi,1
6502168e:	or     edi,eax
65021690:	mov    eax,DWORD PTR [ebp-0x20]
65021693:	shl    ecx,0x1f
65021696:	shr    eax,1
65021698:	or     eax,ecx
6502169a:	dec    esi
6502169b:	test   esi,esi
6502169d:	mov    DWORD PTR [ebp-0x1c],edi
650216a0:	mov    DWORD PTR [ebp-0x20],eax
650216a3:	jg     0x6502167d
650216a5:	mov    eax,DWORD PTR [ebp+0x14]
650216a8:	inc    eax
650216a9:	test   eax,eax
650216ab:	lea    ebx,[edx+0x4]
650216ae:	mov    DWORD PTR [ebp-0x40],ebx
650216b1:	mov    DWORD PTR [ebp-0x4c],eax
650216b4:	jle    0x6502176f
650216ba:	mov    edx,DWORD PTR [ebp-0x20]
650216bd:	mov    eax,DWORD PTR [ebp-0x1c]
650216c0:	lea    esi,[ebp-0x20]
650216c3:	lea    edi,[ebp-0x3c]
650216c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650216c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650216c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650216c9:	shl    DWORD PTR [ebp-0x20],1
650216cc:	mov    edi,DWORD PTR [ebp-0x20]
650216cf:	shl    DWORD PTR [ebp-0x20],1
650216d2:	shr    edx,0x1f
650216d5:	lea    ecx,[eax+eax*1]
650216d8:	or     ecx,edx
650216da:	mov    edx,DWORD PTR [ebp-0x18]
650216dd:	mov    esi,eax
650216df:	shr    esi,0x1f
650216e2:	add    edx,edx
650216e4:	or     edx,esi
650216e6:	mov    eax,ecx
650216e8:	lea    esi,[ecx+ecx*1]
650216eb:	shr    eax,0x1f
650216ee:	lea    ecx,[edx+edx*1]
650216f1:	mov    edx,DWORD PTR [ebp-0x3c]
650216f4:	shr    edi,0x1f
650216f7:	or     ecx,eax
650216f9:	mov    eax,DWORD PTR [ebp-0x20]
650216fc:	or     esi,edi
650216fe:	lea    edi,[edx+eax*1]
65021701:	cmp    edi,eax
65021703:	jb     0x65021709
65021705:	cmp    edi,edx
65021707:	jae    0x65021721
65021709:	lea    eax,[esi+0x1]
6502170c:	xor    edx,edx
6502170e:	cmp    eax,esi
65021710:	jb     0x65021717
65021712:	cmp    eax,0x1
65021715:	jae    0x6502171a
65021717:	xor    edx,edx
65021719:	inc    edx
6502171a:	test   edx,edx
6502171c:	mov    esi,eax
6502171e:	je     0x65021721
65021720:	inc    ecx
65021721:	mov    eax,DWORD PTR [ebp-0x38]
65021724:	lea    edx,[eax+esi*1]
65021727:	cmp    edx,esi
65021729:	mov    DWORD PTR [ebp-0x44],edx
6502172c:	jb     0x65021732
6502172e:	cmp    edx,eax
65021730:	jae    0x65021733
65021732:	inc    ecx
65021733:	add    ecx,DWORD PTR [ebp-0x34]
65021736:	shr    edx,0x1f
65021739:	add    ecx,ecx
6502173b:	or     ecx,edx
6502173d:	lea    esi,[edi+edi*1]
65021740:	mov    DWORD PTR [ebp-0x20],esi
65021743:	mov    esi,DWORD PTR [ebp-0x44]
65021746:	mov    DWORD PTR [ebp-0x18],ecx
65021749:	shr    ecx,0x18
6502174c:	add    esi,esi
6502174e:	add    cl,0x30
65021751:	mov    eax,edi
65021753:	shr    eax,0x1f
65021756:	or     esi,eax
65021758:	mov    BYTE PTR [ebx],cl
6502175a:	inc    ebx
6502175b:	dec    DWORD PTR [ebp-0x4c]
6502175e:	cmp    DWORD PTR [ebp-0x4c],0x0
65021762:	mov    DWORD PTR [ebp-0x1c],esi
65021765:	mov    BYTE PTR [ebp-0x15],0x0
65021769:	jg     0x650216ba
6502176f:	dec    ebx
65021770:	mov    al,BYTE PTR [ebx]
65021772:	dec    ebx
65021773:	cmp    al,0x35
65021775:	jge    0x65021785
65021777:	mov    ecx,DWORD PTR [ebp-0x40]
6502177a:	jmp    0x650217c0
6502177c:	cmp    BYTE PTR [ebx],0x39
6502177f:	jne    0x6502178a
65021781:	mov    BYTE PTR [ebx],0x30
65021784:	dec    ebx
65021785:	cmp    ebx,DWORD PTR [ebp-0x40]
65021788:	jae    0x6502177c
6502178a:	cmp    ebx,DWORD PTR [ebp-0x40]
6502178d:	mov    eax,DWORD PTR [ebp-0x60]
65021790:	jae    0x65021796
65021792:	inc    ebx
65021793:	inc    WORD PTR [eax]
65021796:	inc    BYTE PTR [ebx]
65021798:	sub    bl,al
6502179a:	sub    bl,0x3
6502179d:	movsx  ecx,bl
650217a0:	mov    BYTE PTR [eax+0x3],bl
650217a3:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
650217a8:	mov    eax,DWORD PTR [ebp-0x74]
650217ab:	mov    ecx,DWORD PTR [ebp-0x4]
650217ae:	pop    edi
650217af:	pop    esi
650217b0:	xor    ecx,ebp
650217b2:	pop    ebx
650217b3:	call   0x6501292c
650217b8:	leave  
650217b9:	ret    
650217ba:	cmp    BYTE PTR [ebx],0x30
650217bd:	jne    0x650217c4
650217bf:	dec    ebx
650217c0:	cmp    ebx,ecx
650217c2:	jae    0x650217ba
650217c4:	cmp    ebx,ecx
650217c6:	mov    eax,DWORD PTR [ebp-0x60]
650217c9:	jae    0x65021798
650217cb:	and    WORD PTR [eax],0x0
650217cf:	cmp    WORD PTR [ebp-0x6c],0x8000
650217d5:	mov    BYTE PTR [eax+0x3],0x1
650217d9:	setne  dl
650217dc:	dec    dl
650217de:	and    dl,0xd
650217e1:	add    dl,0x20
650217e4:	mov    BYTE PTR [eax+0x2],dl
650217e7:	mov    BYTE PTR [ecx],0x30
650217ea:	mov    BYTE PTR [eax+0x5],0x0
650217ee:	jmp    0x65020fdc
650217f3:	xor    eax,eax
650217f5:	test   bl,0x10
650217f8:	je     0x650217fb
650217fa:	inc    eax
650217fb:	test   bl,0x8
650217fe:	je     0x65021803
65021800:	or     eax,0x4
65021803:	test   bl,0x4
65021806:	je     0x6502180b
65021808:	or     eax,0x8
6502180b:	test   bl,0x2
6502180e:	je     0x65021813
65021810:	or     eax,0x10
65021813:	test   bl,0x1
65021816:	je     0x6502181b
65021818:	or     eax,0x20
6502181b:	test   ebx,0x80000
65021821:	je     0x65021826
65021823:	or     eax,0x2
65021826:	mov    ecx,ebx
65021828:	mov    edx,0x300
6502182d:	and    ecx,edx
6502182f:	push   esi
65021830:	mov    esi,0x200
65021835:	je     0x6502185a
65021837:	cmp    ecx,0x100
6502183d:	je     0x65021855
6502183f:	cmp    ecx,esi
65021841:	je     0x6502184e
65021843:	cmp    ecx,edx
65021845:	jne    0x6502185a
65021847:	or     eax,0xc00
6502184c:	jmp    0x6502185a
6502184e:	or     eax,0x800
65021853:	jmp    0x6502185a
65021855:	or     eax,0x400
6502185a:	mov    ecx,ebx
6502185c:	and    ecx,0x30000
65021862:	je     0x65021870
65021864:	cmp    ecx,0x10000
6502186a:	jne    0x65021872
6502186c:	or     eax,esi
6502186e:	jmp    0x65021872
65021870:	or     eax,edx
65021872:	test   ebx,0x40000
65021878:	pop    esi
65021879:	je     0x65021880
6502187b:	or     eax,0x1000
65021880:	ret    
65021881:	xor    eax,eax
65021883:	test   dl,0x10
65021886:	je     0x6502188d
65021888:	mov    eax,0x80
6502188d:	test   dl,0x8
65021890:	push   ebx
65021891:	push   esi
65021892:	push   edi
65021893:	mov    ebx,0x200
65021898:	je     0x6502189c
6502189a:	or     eax,ebx
6502189c:	test   dl,0x4
6502189f:	je     0x650218a6
650218a1:	or     eax,0x400
650218a6:	test   dl,0x2
650218a9:	je     0x650218b0
650218ab:	or     eax,0x800
650218b0:	test   dl,0x1
650218b3:	je     0x650218ba
650218b5:	or     eax,0x1000
650218ba:	test   edx,0x80000
650218c0:	mov    edi,0x100
650218c5:	je     0x650218c9
650218c7:	or     eax,edi
650218c9:	mov    ecx,edx
650218cb:	mov    esi,0x300
650218d0:	and    ecx,esi
650218d2:	je     0x650218f3
650218d4:	cmp    ecx,edi
650218d6:	je     0x650218ee
650218d8:	cmp    ecx,ebx
650218da:	je     0x650218e7
650218dc:	cmp    ecx,esi
650218de:	jne    0x650218f3
650218e0:	or     eax,0x6000
650218e5:	jmp    0x650218f3
650218e7:	or     eax,0x4000
650218ec:	jmp    0x650218f3
650218ee:	or     eax,0x2000
650218f3:	mov    ecx,0x3000000
650218f8:	pop    edi
650218f9:	and    edx,ecx
650218fb:	cmp    edx,0x1000000
65021901:	pop    esi
65021902:	pop    ebx
65021903:	je     0x6502191b
65021905:	cmp    edx,0x2000000
6502190b:	je     0x65021917
6502190d:	cmp    edx,ecx
6502190f:	jne    0x65021920
65021911:	or     eax,0x8000
65021916:	ret    
65021917:	or     eax,0x40
6502191a:	ret    
6502191b:	or     eax,0x8040
65021920:	ret    
65021921:	sub    esp,0x10
65021924:	push   ebx
65021925:	push   ebp
65021926:	push   esi
65021927:	push   edi
65021928:	fstcw  WORD PTR [esp+0x14]
6502192d:	mov    ebx,DWORD PTR [esp+0x14]
65021931:	xor    edx,edx
65021933:	test   bl,0x1
65021936:	je     0x6502193b
65021938:	push   0x10
6502193a:	pop    edx
6502193b:	test   bl,0x4
6502193e:	je     0x65021943
65021940:	or     edx,0x8
65021943:	test   bl,0x8
65021946:	je     0x6502194b
65021948:	or     edx,0x4
6502194b:	test   bl,0x10
6502194e:	je     0x65021953
65021950:	or     edx,0x2
65021953:	test   bl,0x20
65021956:	je     0x6502195b
65021958:	or     edx,0x1
6502195b:	test   bl,0x2
6502195e:	je     0x65021966
65021960:	or     edx,0x80000
65021966:	movzx  ecx,bx
65021969:	mov    eax,ecx
6502196b:	mov    edi,0xc00
65021970:	and    eax,edi
65021972:	mov    ebp,0x300
65021977:	mov    esi,0x200
6502197c:	je     0x6502199e
6502197e:	cmp    eax,0x400
65021983:	je     0x65021998
65021985:	cmp    eax,0x800
6502198a:	je     0x65021994
6502198c:	cmp    eax,edi
6502198e:	jne    0x6502199e
65021990:	or     edx,ebp
65021992:	jmp    0x6502199e
65021994:	or     edx,esi
65021996:	jmp    0x6502199e
65021998:	or     edx,0x100
6502199e:	and    ecx,ebp
650219a0:	je     0x650219ae
650219a2:	cmp    ecx,esi
650219a4:	jne    0x650219b4
650219a6:	or     edx,0x10000
650219ac:	jmp    0x650219b4
650219ae:	or     edx,0x20000
650219b4:	test   bx,0x1000
650219b9:	je     0x650219c1
650219bb:	or     edx,0x40000
650219c1:	mov    esi,DWORD PTR [esp+0x28]
650219c5:	mov    ecx,DWORD PTR [esp+0x24]
650219c9:	mov    eax,esi
650219cb:	not    eax
650219cd:	and    eax,edx
650219cf:	and    ecx,esi
650219d1:	or     eax,ecx
650219d3:	cmp    eax,edx
650219d5:	mov    DWORD PTR [esp+0x1c],eax
650219d9:	je     0x65021a89
650219df:	mov    ebx,eax
650219e1:	call   0x650217f3
650219e6:	movzx  eax,ax
650219e9:	mov    DWORD PTR [esp+0x10],eax
650219ed:	fldcw  WORD PTR [esp+0x10]
650219f1:	fstcw  WORD PTR [esp+0x10]
650219f6:	mov    ebx,DWORD PTR [esp+0x10]
650219fa:	xor    edx,edx
650219fc:	test   bl,0x1
650219ff:	je     0x65021a04
65021a01:	push   0x10
65021a03:	pop    edx
65021a04:	test   bl,0x4
65021a07:	je     0x65021a0c
65021a09:	or     edx,0x8
65021a0c:	test   bl,0x8
65021a0f:	je     0x65021a14
65021a11:	or     edx,0x4
65021a14:	test   bl,0x10
65021a17:	je     0x65021a1c
65021a19:	or     edx,0x2
65021a1c:	test   bl,0x20
65021a1f:	je     0x65021a24
65021a21:	or     edx,0x1
65021a24:	test   bl,0x2
65021a27:	je     0x65021a2f
65021a29:	or     edx,0x80000
65021a2f:	movzx  ecx,bx
65021a32:	mov    eax,ecx
65021a34:	and    eax,edi
65021a36:	je     0x65021a5c
65021a38:	cmp    eax,0x400
65021a3d:	je     0x65021a56
65021a3f:	cmp    eax,0x800
65021a44:	je     0x65021a4e
65021a46:	cmp    eax,edi
65021a48:	jne    0x65021a5c
65021a4a:	or     edx,ebp
65021a4c:	jmp    0x65021a5c
65021a4e:	or     edx,0x200
65021a54:	jmp    0x65021a5c
65021a56:	or     edx,0x100
65021a5c:	and    ecx,ebp
65021a5e:	je     0x65021a70
65021a60:	cmp    ecx,0x200
65021a66:	jne    0x65021a76
65021a68:	or     edx,0x10000
65021a6e:	jmp    0x65021a76
65021a70:	or     edx,0x20000
65021a76:	test   bx,0x1000
65021a7b:	je     0x65021a83
65021a7d:	or     edx,0x40000
65021a83:	mov    eax,edx
65021a85:	mov    DWORD PTR [esp+0x1c],edx
65021a89:	cmp    DWORD PTR ds:0x65031564,0x0
65021a90:	je     0x65021c1c
65021a96:	and    esi,0x308031f
65021a9c:	mov    edi,esi
65021a9e:	stmxcsr DWORD PTR [esp+0x18]
65021aa3:	mov    eax,DWORD PTR [esp+0x18]
65021aa7:	xor    esi,esi
65021aa9:	test   al,al
65021aab:	jns    0x65021ab0
65021aad:	push   0x10
65021aaf:	pop    esi
65021ab0:	test   ax,0x200
65021ab4:	je     0x65021ab9
65021ab6:	or     esi,0x8
65021ab9:	test   ax,0x400
65021abd:	je     0x65021ac2
65021abf:	or     esi,0x4
65021ac2:	test   ax,0x800
65021ac6:	je     0x65021acb
65021ac8:	or     esi,0x2
65021acb:	test   ax,0x1000
65021acf:	je     0x65021ad4
65021ad1:	or     esi,0x1
65021ad4:	test   ax,0x100
65021ad8:	je     0x65021ae0
65021ada:	or     esi,0x80000
65021ae0:	mov    ecx,eax
65021ae2:	mov    ebp,0x6000
65021ae7:	and    ecx,ebp
65021ae9:	je     0x65021b15
65021aeb:	cmp    ecx,0x2000
65021af1:	je     0x65021b0f
65021af3:	cmp    ecx,0x4000
65021af9:	je     0x65021b07
65021afb:	cmp    ecx,ebp
65021afd:	jne    0x65021b15
65021aff:	or     esi,0x300
65021b05:	jmp    0x65021b15
65021b07:	or     esi,0x200
65021b0d:	jmp    0x65021b15
65021b0f:	or     esi,0x100
65021b15:	mov    ebx,0x8040
65021b1a:	and    eax,ebx
65021b1c:	sub    eax,0x40
65021b1f:	je     0x65021b3d
65021b21:	sub    eax,0x7fc0
65021b26:	je     0x65021b35
65021b28:	sub    eax,0x40
65021b2b:	jne    0x65021b43
65021b2d:	or     esi,0x1000000
65021b33:	jmp    0x65021b43
65021b35:	or     esi,0x3000000
65021b3b:	jmp    0x65021b43
65021b3d:	or     esi,0x2000000
65021b43:	mov    edx,edi
65021b45:	and    edi,DWORD PTR [esp+0x24]
65021b49:	not    edx
65021b4b:	and    edx,esi
65021b4d:	or     edx,edi
65021b4f:	cmp    edx,esi
65021b51:	jne    0x65021b5a
65021b53:	mov    eax,esi
65021b55:	jmp    0x65021c05
65021b5a:	call   0x65021881
65021b5f:	push   eax
65021b60:	mov    DWORD PTR [esp+0x2c],eax
65021b64:	call   0x65021df0
65021b69:	pop    ecx
65021b6a:	stmxcsr DWORD PTR [esp+0x28]
65021b6f:	mov    eax,DWORD PTR [esp+0x28]
65021b73:	xor    edx,edx
65021b75:	test   al,al
65021b77:	jns    0x65021b7c
65021b79:	push   0x10
65021b7b:	pop    edx
65021b7c:	mov    edi,0x200
65021b81:	test   edi,eax
65021b83:	je     0x65021b88
65021b85:	or     edx,0x8
65021b88:	test   ax,0x400
65021b8c:	je     0x65021b91
65021b8e:	or     edx,0x4
65021b91:	test   ax,0x800
65021b95:	je     0x65021b9a
65021b97:	or     edx,0x2
65021b9a:	test   ax,0x1000
65021b9e:	je     0x65021ba3
65021ba0:	or     edx,0x1
65021ba3:	mov    esi,0x100
65021ba8:	test   esi,eax
65021baa:	je     0x65021bb2
65021bac:	or     edx,0x80000
65021bb2:	mov    ecx,eax
65021bb4:	and    ecx,ebp
65021bb6:	je     0x65021bda
65021bb8:	cmp    ecx,0x2000
65021bbe:	je     0x65021bd8
65021bc0:	cmp    ecx,0x4000
65021bc6:	je     0x65021bd4
65021bc8:	cmp    ecx,ebp
65021bca:	jne    0x65021bda
65021bcc:	or     edx,0x300
65021bd2:	jmp    0x65021bda
65021bd4:	or     edx,edi
65021bd6:	jmp    0x65021bda
65021bd8:	or     edx,esi
65021bda:	and    eax,ebx
65021bdc:	sub    eax,0x40
65021bdf:	je     0x65021bfd
65021be1:	sub    eax,0x7fc0
65021be6:	je     0x65021bf5
65021be8:	sub    eax,0x40
65021beb:	jne    0x65021c03
65021bed:	or     edx,0x1000000
65021bf3:	jmp    0x65021c03
65021bf5:	or     edx,0x3000000
65021bfb:	jmp    0x65021c03
65021bfd:	or     edx,0x2000000
65021c03:	mov    eax,edx
65021c05:	mov    ecx,DWORD PTR [esp+0x1c]
65021c09:	mov    edx,eax
65021c0b:	xor    edx,ecx
65021c0d:	or     eax,ecx
65021c0f:	test   edx,0x8031f
65021c15:	je     0x65021c1c
65021c17:	or     eax,0x80000000
65021c1c:	pop    edi
65021c1d:	pop    esi
65021c1e:	pop    ebp
65021c1f:	pop    ebx
65021c20:	add    esp,0x10
65021c23:	ret    
65021c24:	push   ebp
65021c25:	mov    ebp,esp
65021c27:	sub    esp,0x18
65021c2a:	mov    eax,ds:0x6502c09c
65021c2f:	xor    eax,ebp
65021c31:	mov    DWORD PTR [ebp-0x4],eax
65021c34:	mov    eax,DWORD PTR [ebp+0x10]
65021c37:	push   ebx
65021c38:	push   esi
65021c39:	xor    esi,esi
65021c3b:	cmp    DWORD PTR [ebp+0xc],esi
65021c3e:	push   edi
65021c3f:	mov    DWORD PTR [ebp-0x18],0x404e
65021c46:	mov    DWORD PTR [eax],esi
65021c48:	mov    DWORD PTR [eax+0x4],esi
65021c4b:	mov    DWORD PTR [eax+0x8],esi
65021c4e:	jbe    0x65021d9a
65021c54:	mov    edx,DWORD PTR [eax]
65021c56:	mov    ebx,DWORD PTR [eax+0x4]
65021c59:	mov    esi,eax
65021c5b:	lea    edi,[ebp-0x10]
65021c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021c61:	mov    ecx,edx
65021c63:	shr    ecx,0x1f
65021c66:	lea    edi,[edx+edx*1]
65021c69:	lea    edx,[ebx+ebx*1]
65021c6c:	or     edx,ecx
65021c6e:	mov    ecx,DWORD PTR [eax+0x8]
65021c71:	mov    esi,ebx
65021c73:	shr    esi,0x1f
65021c76:	add    ecx,ecx
65021c78:	or     ecx,esi
65021c7a:	mov    DWORD PTR [ebp-0x14],edi
65021c7d:	mov    esi,edi
65021c7f:	and    DWORD PTR [ebp-0x14],0x0
65021c83:	mov    ebx,edx
65021c85:	shr    ebx,0x1f
65021c88:	add    ecx,ecx
65021c8a:	shr    edi,0x1f
65021c8d:	or     ecx,ebx
65021c8f:	mov    ebx,DWORD PTR [ebp-0x10]
65021c92:	add    esi,esi
65021c94:	add    edx,edx
65021c96:	or     edx,edi
65021c98:	lea    edi,[esi+ebx*1]
65021c9b:	cmp    edi,esi
65021c9d:	mov    DWORD PTR [eax],esi
65021c9f:	mov    DWORD PTR [eax+0x4],edx
65021ca2:	mov    DWORD PTR [eax+0x8],ecx
65021ca5:	jb     0x65021cab
65021ca7:	cmp    edi,ebx
65021ca9:	jae    0x65021cb2
65021cab:	mov    DWORD PTR [ebp-0x14],0x1
65021cb2:	xor    ebx,ebx
65021cb4:	cmp    DWORD PTR [ebp-0x14],ebx
65021cb7:	mov    DWORD PTR [eax],edi
65021cb9:	je     0x65021cd5
65021cbb:	lea    esi,[edx+0x1]
65021cbe:	cmp    esi,edx
65021cc0:	jb     0x65021cc7
65021cc2:	cmp    esi,0x1
65021cc5:	jae    0x65021cca
65021cc7:	xor    ebx,ebx
65021cc9:	inc    ebx
65021cca:	test   ebx,ebx
65021ccc:	mov    DWORD PTR [eax+0x4],esi
65021ccf:	je     0x65021cd5
65021cd1:	inc    ecx
65021cd2:	mov    DWORD PTR [eax+0x8],ecx
65021cd5:	mov    ecx,DWORD PTR [eax+0x4]
65021cd8:	mov    edx,DWORD PTR [ebp-0xc]
65021cdb:	lea    ebx,[ecx+edx*1]
65021cde:	xor    esi,esi
65021ce0:	cmp    ebx,ecx
65021ce2:	jb     0x65021ce8
65021ce4:	cmp    ebx,edx
65021ce6:	jae    0x65021ceb
65021ce8:	xor    esi,esi
65021cea:	inc    esi
65021ceb:	test   esi,esi
65021ced:	mov    DWORD PTR [eax+0x4],ebx
65021cf0:	je     0x65021cf5
65021cf2:	inc    DWORD PTR [eax+0x8]
65021cf5:	mov    ecx,DWORD PTR [ebp-0x8]
65021cf8:	add    DWORD PTR [eax+0x8],ecx
65021cfb:	and    DWORD PTR [ebp-0x14],0x0
65021cff:	lea    ecx,[edi+edi*1]
65021d02:	mov    edx,edi
65021d04:	shr    edx,0x1f
65021d07:	lea    edi,[ebx+ebx*1]
65021d0a:	or     edi,edx
65021d0c:	mov    edx,DWORD PTR [eax+0x8]
65021d0f:	mov    esi,ebx
65021d11:	shr    esi,0x1f
65021d14:	lea    ebx,[edx+edx*1]
65021d17:	mov    edx,DWORD PTR [ebp+0x8]
65021d1a:	or     ebx,esi
65021d1c:	mov    DWORD PTR [eax],ecx
65021d1e:	mov    DWORD PTR [eax+0x4],edi
65021d21:	mov    DWORD PTR [eax+0x8],ebx
65021d24:	movsx  edx,BYTE PTR [edx]
65021d27:	lea    esi,[ecx+edx*1]
65021d2a:	cmp    esi,ecx
65021d2c:	mov    DWORD PTR [ebp-0x10],edx
65021d2f:	jb     0x65021d35
65021d31:	cmp    esi,edx
65021d33:	jae    0x65021d3c
65021d35:	mov    DWORD PTR [ebp-0x14],0x1
65021d3c:	cmp    DWORD PTR [ebp-0x14],0x0
65021d40:	mov    DWORD PTR [eax],esi
65021d42:	je     0x65021d60
65021d44:	lea    ecx,[edi+0x1]
65021d47:	xor    edx,edx
65021d49:	cmp    ecx,edi
65021d4b:	jb     0x65021d52
65021d4d:	cmp    ecx,0x1
65021d50:	jae    0x65021d55
65021d52:	xor    edx,edx
65021d54:	inc    edx
65021d55:	test   edx,edx
65021d57:	mov    DWORD PTR [eax+0x4],ecx
65021d5a:	je     0x65021d60
65021d5c:	inc    ebx
65021d5d:	mov    DWORD PTR [eax+0x8],ebx
65021d60:	dec    DWORD PTR [ebp+0xc]
65021d63:	inc    DWORD PTR [ebp+0x8]
65021d66:	cmp    DWORD PTR [ebp+0xc],0x0
65021d6a:	ja     0x65021c54
65021d70:	xor    esi,esi
65021d72:	jmp    0x65021d9a
65021d74:	mov    ecx,DWORD PTR [eax+0x4]
65021d77:	mov    edx,ecx
65021d79:	shr    edx,0x10
65021d7c:	mov    DWORD PTR [eax+0x8],edx
65021d7f:	mov    edx,DWORD PTR [eax]
65021d81:	mov    edi,edx
65021d83:	shl    ecx,0x10
65021d86:	shr    edi,0x10
65021d89:	or     ecx,edi
65021d8b:	shl    edx,0x10
65021d8e:	add    DWORD PTR [ebp-0x18],0xfff0
65021d95:	mov    DWORD PTR [eax+0x4],ecx
65021d98:	mov    DWORD PTR [eax],edx
65021d9a:	cmp    DWORD PTR [eax+0x8],esi
65021d9d:	je     0x65021d74
65021d9f:	mov    ebx,0x8000
65021da4:	test   DWORD PTR [eax+0x8],ebx
65021da7:	jne    0x65021dd9
65021da9:	mov    esi,DWORD PTR [eax]
65021dab:	mov    edi,DWORD PTR [eax+0x4]
65021dae:	add    DWORD PTR [ebp-0x18],0xffff
65021db5:	mov    ecx,esi
65021db7:	add    esi,esi
65021db9:	shr    ecx,0x1f
65021dbc:	mov    DWORD PTR [eax],esi
65021dbe:	lea    esi,[edi+edi*1]
65021dc1:	or     esi,ecx
65021dc3:	mov    ecx,DWORD PTR [eax+0x8]
65021dc6:	mov    edx,edi
65021dc8:	shr    edx,0x1f
65021dcb:	add    ecx,ecx
65021dcd:	or     ecx,edx
65021dcf:	test   ebx,ecx
65021dd1:	mov    DWORD PTR [eax+0x4],esi
65021dd4:	mov    DWORD PTR [eax+0x8],ecx
65021dd7:	je     0x65021da9
65021dd9:	mov    cx,WORD PTR [ebp-0x18]
65021ddd:	mov    WORD PTR [eax+0xa],cx
65021de1:	mov    ecx,DWORD PTR [ebp-0x4]
65021de4:	pop    edi
65021de5:	pop    esi
65021de6:	xor    ecx,ebp
65021de8:	pop    ebx
65021de9:	call   0x6501292c
65021dee:	leave  
65021def:	ret    
65021df0:	push   0x8
65021df2:	push   0x65029f68
65021df7:	call   0x65013e70
65021dfc:	xor    eax,eax
65021dfe:	cmp    DWORD PTR ds:0x65031564,eax
65021e04:	je     0x65021e5c
65021e06:	test   BYTE PTR [ebp+0x8],0x40
65021e0a:	je     0x65021e54
65021e0c:	cmp    DWORD PTR ds:0x6502d374,eax
65021e12:	je     0x65021e54
65021e14:	mov    DWORD PTR [ebp-0x4],eax
65021e17:	ldmxcsr DWORD PTR [ebp+0x8]
65021e1b:	jmp    0x65021e4b
65021e1d:	mov    eax,DWORD PTR [ebp-0x14]
65021e20:	mov    eax,DWORD PTR [eax]
65021e22:	mov    eax,DWORD PTR [eax]
65021e24:	cmp    eax,0xc0000005
65021e29:	je     0x65021e35
65021e2b:	cmp    eax,0xc000001d
65021e30:	je     0x65021e35
65021e32:	xor    eax,eax
65021e34:	ret    
65021e35:	xor    eax,eax
65021e37:	inc    eax
65021e38:	ret    
65021e39:	mov    esp,DWORD PTR [ebp-0x18]
65021e3c:	and    DWORD PTR ds:0x6502d374,0x0
65021e43:	and    DWORD PTR [ebp+0x8],0xffffffbf
65021e47:	ldmxcsr DWORD PTR [ebp+0x8]
65021e4b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65021e52:	jmp    0x65021e5c
65021e54:	and    DWORD PTR [ebp+0x8],0xffffffbf
65021e58:	ldmxcsr DWORD PTR [ebp+0x8]
65021e5c:	call   0x65013eb5
65021e61:	ret    
65021e62:	int3   
65021e63:	int3   
65021e64:	int3   
65021e65:	int3   
65021e66:	int3   
65021e67:	int3   
65021e68:	int3   
65021e69:	int3   
65021e6a:	int3   
65021e6b:	int3   
65021e6c:	int3   
65021e6d:	int3   
65021e6e:	int3   
65021e6f:	int3   
65021e70:	mov    eax,DWORD PTR [ebp-0x10]
65021e73:	and    eax,0x1
65021e76:	je     0x65021e88
65021e7c:	and    DWORD PTR [ebp-0x10],0xfffffffe
65021e80:	mov    ecx,DWORD PTR [ebp+0x4]
65021e83:	jmp    0x65001990
65021e88:	ret    
65021e89:	mov    edx,DWORD PTR [esp+0x8]
65021e8d:	lea    eax,[edx-0xc]
65021e90:	mov    ecx,DWORD PTR [edx-0x10]
65021e93:	xor    ecx,eax
65021e95:	call   0x6501292c
65021e9a:	mov    eax,0x65029528
65021e9f:	jmp    0x650125ee
65021ea4:	int3   
65021ea5:	int3   
65021ea6:	int3   
65021ea7:	int3   
65021ea8:	int3   
65021ea9:	int3   
65021eaa:	int3   
65021eab:	int3   
65021eac:	int3   
65021ead:	int3   
65021eae:	int3   
65021eaf:	int3   
65021eb0:	mov    eax,DWORD PTR [ebp-0x10]
65021eb3:	and    eax,0x1
65021eb6:	je     0x65021ec8
65021ebc:	and    DWORD PTR [ebp-0x10],0xfffffffe
65021ec0:	mov    ecx,DWORD PTR [ebp+0x4]
65021ec3:	jmp    0x65001990
65021ec8:	ret    
65021ec9:	mov    edx,DWORD PTR [esp+0x8]
65021ecd:	lea    eax,[edx-0x10]
65021ed0:	mov    ecx,DWORD PTR [edx-0x14]
65021ed3:	xor    ecx,eax
65021ed5:	call   0x6501292c
65021eda:	mov    eax,0x65029554
65021edf:	jmp    0x650125ee
65021ee4:	int3   
65021ee5:	int3   
65021ee6:	int3   
65021ee7:	int3   
65021ee8:	int3   
65021ee9:	int3   
65021eea:	int3   
65021eeb:	int3   
65021eec:	int3   
65021eed:	int3   
65021eee:	int3   
65021eef:	int3   
65021ef0:	lea    ecx,[ebp-0x50]
65021ef3:	jmp    0x650016b0
65021ef8:	mov    edx,DWORD PTR [esp+0x8]
65021efc:	lea    eax,[edx-0x44]
65021eff:	mov    ecx,DWORD PTR [edx-0x48]
65021f02:	xor    ecx,eax
65021f04:	call   0x6501292c
65021f09:	mov    eax,0x650295d8
65021f0e:	jmp    0x650125ee
65021f13:	int3   
65021f14:	int3   
65021f15:	int3   
65021f16:	int3   
65021f17:	int3   
65021f18:	int3   
65021f19:	int3   
65021f1a:	int3   
65021f1b:	int3   
65021f1c:	int3   
65021f1d:	int3   
65021f1e:	int3   
65021f1f:	int3   
65021f20:	lea    ecx,[ebp-0x98]
65021f26:	jmp    0x6500f7c0
65021f2b:	lea    ecx,[ebp-0x94]
65021f31:	jmp    0x650016b0
65021f36:	lea    ecx,[ebp-0x78]
65021f39:	jmp    0x650016b0
65021f3e:	mov    edx,DWORD PTR [esp+0x8]
65021f42:	lea    eax,[edx-0xa8]
65021f48:	mov    ecx,DWORD PTR [edx-0xac]
65021f4e:	xor    ecx,eax
65021f50:	call   0x6501292c
65021f55:	mov    eax,0x65029624
65021f5a:	jmp    0x650125ee
65021f5f:	int3   
65021f60:	lea    ecx,[ebp+0x38]
65021f63:	jmp    0x6500f940
65021f68:	lea    ecx,[ebp-0x38]
65021f6b:	jmp    0x6500f7e0
65021f70:	lea    ecx,[ebp+0x10]
65021f73:	jmp    0x65001990
65021f78:	lea    ecx,[ebp+0x14]
65021f7b:	jmp    0x65001990
65021f80:	lea    ecx,[ebp+0x18]
65021f83:	jmp    0x65001990
65021f88:	lea    ecx,[ebp+0xc]
65021f8b:	jmp    0x65001990
65021f90:	lea    ecx,[ebp+0x8]
65021f93:	jmp    0x65001990
65021f98:	lea    ecx,[ebp+0x4]
65021f9b:	jmp    0x65001990
65021fa0:	lea    ecx,[ebp+0x1c]
65021fa3:	jmp    0x650016b0
65021fa8:	mov    edx,DWORD PTR [esp+0x8]
65021fac:	lea    eax,[edx+0xc]
65021faf:	mov    ecx,DWORD PTR [edx-0x80]
65021fb2:	xor    ecx,eax
65021fb4:	call   0x6501292c
65021fb9:	mov    ecx,DWORD PTR [edx+0x7c]
65021fbc:	xor    ecx,eax
65021fbe:	call   0x6501292c
65021fc3:	mov    eax,0x65029694
65021fc8:	jmp    0x650125ee
65021fcd:	int3   
65021fce:	int3   
65021fcf:	int3   
65021fd0:	mov    eax,ds:0x6502d4e8
65021fd5:	and    eax,0xfffffffe
65021fd8:	mov    ds:0x6502d4e8,eax
65021fdd:	ret    
65021fde:	mov    edx,DWORD PTR [esp+0x8]
65021fe2:	lea    eax,[edx-0x10]
65021fe5:	mov    ecx,DWORD PTR [edx-0x14]
65021fe8:	xor    ecx,eax
65021fea:	call   0x6501292c
65021fef:	mov    eax,0x65029758
65021ff4:	jmp    0x650125ee
65021ff9:	int3   
65021ffa:	int3   
65021ffb:	int3   
65021ffc:	int3   
65021ffd:	int3   
65021ffe:	int3   
65021fff:	int3   
65022000:	lea    ecx,[ebp-0x14]
65022003:	jmp    0x6500a440
65022008:	mov    edx,DWORD PTR [esp+0x8]
6502200c:	lea    eax,[edx+0xc]
6502200f:	mov    ecx,DWORD PTR [edx-0x18]
65022012:	xor    ecx,eax
65022014:	call   0x6501292c
65022019:	mov    eax,0x650297b8
6502201e:	jmp    0x650125ee
65022023:	int3   
65022024:	int3   
65022025:	int3   
65022026:	int3   
65022027:	int3   
65022028:	int3   
65022029:	int3   
6502202a:	int3   
6502202b:	int3   
6502202c:	int3   
6502202d:	int3   
6502202e:	int3   
6502202f:	int3   
65022030:	lea    ecx,[ebp-0x10]
65022033:	jmp    0x65001990
65022038:	mov    edx,DWORD PTR [esp+0x8]
6502203c:	lea    eax,[edx-0x8]
6502203f:	mov    ecx,DWORD PTR [edx-0xc]
65022042:	xor    ecx,eax
65022044:	call   0x6501292c
65022049:	mov    eax,0x650297e4
6502204e:	jmp    0x650125ee
65022053:	int3   
65022054:	int3   
65022055:	int3   
65022056:	int3   
65022057:	int3   
65022058:	int3   
65022059:	int3   
6502205a:	int3   
6502205b:	int3   
6502205c:	int3   
6502205d:	int3   
6502205e:	int3   
6502205f:	int3   
65022060:	lea    ecx,[ebp-0x10]
65022063:	jmp    0x650016e0
65022068:	lea    ecx,[ebp-0x14]
6502206b:	jmp    0x65001990
65022070:	mov    edx,DWORD PTR [esp+0x8]
65022074:	lea    eax,[edx-0x14]
65022077:	mov    ecx,DWORD PTR [edx-0x18]
6502207a:	xor    ecx,eax
6502207c:	call   0x6501292c
65022081:	mov    eax,0x65029818
65022086:	jmp    0x650125ee
6502208b:	int3   
6502208c:	int3   
6502208d:	int3   
6502208e:	int3   
6502208f:	int3   
65022090:	mov    eax,DWORD PTR [ebp-0x50]
65022093:	and    eax,0x1
65022096:	je     0x650220a8
6502209c:	and    DWORD PTR [ebp-0x50],0xfffffffe
650220a0:	mov    ecx,DWORD PTR [ebp-0x58]
650220a3:	jmp    0x65001990
650220a8:	ret    
650220a9:	lea    ecx,[ebp-0x4c]
650220ac:	jmp    0x65001990
650220b1:	lea    ecx,[ebp-0x54]
650220b4:	jmp    0x65001990
650220b9:	lea    ecx,[ebp-0x10]
650220bc:	jmp    0x65001990
650220c1:	lea    ecx,[ebp-0x10]
650220c4:	jmp    0x65001990
650220c9:	lea    ecx,[ebp-0x28]
650220cc:	jmp    0x65001990
650220d1:	lea    ecx,[ebp-0x48]
650220d4:	jmp    0x65001990
650220d9:	lea    ecx,[ebp-0x24]
650220dc:	jmp    0x65001990
650220e1:	lea    ecx,[ebp-0x14]
650220e4:	jmp    0x65001990
650220e9:	lea    ecx,[ebp-0x18]
650220ec:	jmp    0x65001990
650220f1:	lea    ecx,[ebp-0x10]
650220f4:	jmp    0x65001990
650220f9:	lea    ecx,[ebp-0x10]
650220fc:	jmp    0x65001990
65022101:	lea    ecx,[ebp-0x18]
65022104:	jmp    0x65001990
65022109:	lea    ecx,[ebp-0x14]
6502210c:	jmp    0x65001990
65022111:	lea    ecx,[ebp-0x10]
65022114:	jmp    0x65001990
65022119:	lea    ecx,[ebp-0x3c]
6502211c:	jmp    0x65010660
65022121:	lea    ecx,[ebp-0x14]
65022124:	jmp    0x65001990
65022129:	lea    ecx,[ebp-0x10]
6502212c:	jmp    0x65001990
65022131:	lea    ecx,[ebp-0x20]
65022134:	jmp    0x65001990
65022139:	lea    ecx,[ebp-0x10]
6502213c:	jmp    0x65001990
65022141:	lea    ecx,[ebp-0x18]
65022144:	jmp    0x65001990
65022149:	lea    ecx,[ebp-0x14]
6502214c:	jmp    0x65001990
65022151:	lea    ecx,[ebp-0x10]
65022154:	jmp    0x65001990
65022159:	lea    ecx,[ebp-0x1c]
6502215c:	jmp    0x65001990
65022161:	lea    ecx,[ebp-0x2c]
65022164:	jmp    0x65001990
65022169:	lea    ecx,[ebp-0x18]
6502216c:	jmp    0x65001990
65022171:	lea    ecx,[ebp-0x10]
65022174:	jmp    0x65001990
65022179:	lea    ecx,[ebp-0x2c]
6502217c:	jmp    0x65001990
65022181:	lea    ecx,[ebp-0x1c]
65022184:	jmp    0x65001990
65022189:	lea    ecx,[ebp-0x1c]
6502218c:	jmp    0x65001990
65022191:	mov    edx,DWORD PTR [esp+0x8]
65022195:	lea    eax,[edx+0xc]
65022198:	mov    ecx,DWORD PTR [edx-0xa0]
6502219e:	xor    ecx,eax
650221a0:	call   0x6501292c
650221a5:	mov    ecx,DWORD PTR [edx+0x130]
650221ab:	xor    ecx,eax
650221ad:	call   0x6501292c
650221b2:	mov    eax,0x6502983c
650221b7:	jmp    0x650125ee
650221bc:	int3   
650221bd:	int3   
650221be:	int3   
650221bf:	int3   
650221c0:	lea    ecx,[ebp-0x30]
650221c3:	jmp    0x65001990
650221c8:	lea    ecx,[ebp-0x2c]
650221cb:	jmp    0x650016b0
650221d0:	lea    ecx,[ebp-0x5c]
650221d3:	jmp    0x650016b0
650221d8:	mov    edx,DWORD PTR [esp+0x8]
650221dc:	lea    eax,[edx+0xc]
650221df:	mov    ecx,DWORD PTR [edx-0x60]
650221e2:	xor    ecx,eax
650221e4:	call   0x6501292c
650221e9:	mov    ecx,DWORD PTR [edx-0x4]
650221ec:	xor    ecx,eax
650221ee:	call   0x6501292c
650221f3:	mov    eax,0x65029968
650221f8:	jmp    0x650125ee
650221fd:	lea    ecx,[ebp-0x28]
65022200:	jmp    0x650016b0
65022205:	mov    edx,DWORD PTR [esp+0x8]
65022209:	lea    eax,[edx+0xc]
6502220c:	mov    ecx,DWORD PTR [edx-0x54]
6502220f:	xor    ecx,eax
65022211:	call   0x6501292c
65022216:	mov    eax,0x650299b4
6502221b:	jmp    0x650125ee
65022220:	lea    ecx,[ebp-0x28]
65022223:	jmp    0x650016b0
65022228:	mov    edx,DWORD PTR [esp+0x8]
6502222c:	lea    eax,[edx+0xc]
6502222f:	mov    ecx,DWORD PTR [edx-0x54]
65022232:	xor    ecx,eax
65022234:	call   0x6501292c
65022239:	mov    eax,0x650299e0
6502223e:	jmp    0x650125ee
65022243:	mov    edx,DWORD PTR [esp+0x8]
65022247:	lea    eax,[edx+0xc]
6502224a:	mov    ecx,DWORD PTR [edx-0x14]
6502224d:	xor    ecx,eax
6502224f:	call   0x6501292c
65022254:	mov    eax,0x65029b88
65022259:	jmp    0x650125ee
6502225e:	int3   
6502225f:	int3   
65022260:	mov    eax,DWORD PTR [ebp+0x4]
65022263:	push   eax
65022264:	call   0x650120d2
65022269:	pop    ecx
6502226a:	ret    
6502226b:	mov    edx,DWORD PTR [esp+0x8]
6502226f:	lea    eax,[edx-0x8]
65022272:	mov    ecx,DWORD PTR [edx-0xc]
65022275:	xor    ecx,eax
65022277:	call   0x6501292c
6502227c:	mov    eax,0x6502a0e0
65022281:	jmp    0x650125ee
65022286:	int3   
65022287:	int3   
65022288:	int3   
65022289:	int3   
6502228a:	int3   
6502228b:	int3   
6502228c:	int3   
6502228d:	int3   
6502228e:	int3   
6502228f:	int3   
65022290:	mov    eax,DWORD PTR [ebp+0x4]
65022293:	push   eax
65022294:	call   0x650120d2
65022299:	pop    ecx
6502229a:	ret    
6502229b:	mov    edx,DWORD PTR [esp+0x8]
6502229f:	lea    eax,[edx-0x8]
650222a2:	mov    ecx,DWORD PTR [edx-0xc]
650222a5:	xor    ecx,eax
650222a7:	call   0x6501292c
650222ac:	mov    eax,0x6502a10c
650222b1:	jmp    0x650125ee
650222b6:	int3   
650222b7:	int3   
650222b8:	int3   
650222b9:	int3   
650222ba:	int3   
650222bb:	int3   
650222bc:	int3   
650222bd:	int3   
650222be:	int3   
650222bf:	int3   
650222c0:	mov    eax,DWORD PTR [ebp-0x10]
650222c3:	push   eax
650222c4:	call   0x650120d2
650222c9:	pop    ecx
650222ca:	ret    
650222cb:	mov    edx,DWORD PTR [esp+0x8]
650222cf:	lea    eax,[edx-0x8]
650222d2:	mov    ecx,DWORD PTR [edx-0xc]
650222d5:	xor    ecx,eax
650222d7:	call   0x6501292c
650222dc:	mov    eax,0x6502a138
650222e1:	jmp    0x650125ee
650222e6:	int3   
650222e7:	int3   
650222e8:	int3   
650222e9:	int3   
650222ea:	int3   
650222eb:	int3   
650222ec:	int3   
650222ed:	int3   
650222ee:	int3   
650222ef:	int3   
650222f0:	mov    eax,DWORD PTR [ebp-0x10]
650222f3:	push   eax
650222f4:	call   0x650120d2
650222f9:	pop    ecx
650222fa:	ret    
650222fb:	mov    edx,DWORD PTR [esp+0x8]
650222ff:	lea    eax,[edx-0xc]
65022302:	mov    ecx,DWORD PTR [edx-0x10]
65022305:	xor    ecx,eax
65022307:	call   0x6501292c
6502230c:	mov    eax,0x6502a164
65022311:	jmp    0x650125ee
65022316:	int3   
65022317:	int3   
65022318:	int3   
65022319:	int3   
6502231a:	int3   
6502231b:	int3   
6502231c:	int3   
6502231d:	int3   
6502231e:	int3   
6502231f:	int3   
65022320:	lea    ecx,[ebp-0x144]
65022326:	jmp    0x65002760
6502232b:	mov    edx,DWORD PTR [esp+0x8]
6502232f:	lea    eax,[edx-0x144]
65022335:	mov    ecx,DWORD PTR [edx-0x148]
6502233b:	xor    ecx,eax
6502233d:	call   0x6501292c
65022342:	add    eax,0xc
65022345:	mov    ecx,DWORD PTR [edx-0x4]
65022348:	xor    ecx,eax
6502234a:	call   0x6501292c
6502234f:	mov    eax,0x6502a190
65022354:	jmp    0x650125ee
65022359:	int3   
6502235a:	int3   
6502235b:	int3   
6502235c:	int3   
6502235d:	int3   
6502235e:	int3   
6502235f:	int3   
65022360:	lea    ecx,[ebp-0x20]
65022363:	jmp    0x6500b060
65022368:	mov    edx,DWORD PTR [esp+0x8]
6502236c:	lea    eax,[edx-0x1c]
6502236f:	mov    ecx,DWORD PTR [edx-0x20]
65022372:	xor    ecx,eax
65022374:	call   0x6501292c
65022379:	mov    eax,0x6502a1bc
6502237e:	jmp    0x650125ee
65022383:	int3   
65022384:	int3   
65022385:	int3   
65022386:	int3   
65022387:	int3   
65022388:	int3   
65022389:	int3   
6502238a:	int3   
6502238b:	int3   
6502238c:	int3   
6502238d:	int3   
6502238e:	int3   
6502238f:	int3   
65022390:	mov    eax,DWORD PTR [ebp-0x10]
65022393:	and    eax,0x1
65022396:	je     0x650223a8
6502239c:	and    DWORD PTR [ebp-0x10],0xfffffffe
650223a0:	mov    edi,DWORD PTR [ebp+0x8]
650223a3:	jmp    0x6500acf0
650223a8:	ret    
650223a9:	mov    edx,DWORD PTR [esp+0x8]
650223ad:	lea    eax,[edx-0x8]
650223b0:	mov    ecx,DWORD PTR [edx-0xc]
650223b3:	xor    ecx,eax
650223b5:	call   0x6501292c
650223ba:	mov    eax,0x6502a1e8
650223bf:	jmp    0x650125ee
650223c4:	int3   
650223c5:	int3   
650223c6:	int3   
650223c7:	int3   
650223c8:	int3   
650223c9:	int3   
650223ca:	int3   
650223cb:	int3   
650223cc:	int3   
650223cd:	int3   
650223ce:	int3   
650223cf:	int3   
650223d0:	mov    edx,DWORD PTR [esp+0x8]
650223d4:	lea    eax,[edx+0xc]
650223d7:	mov    ecx,DWORD PTR [edx-0x2c]
650223da:	xor    ecx,eax
650223dc:	call   0x6501292c
650223e1:	mov    eax,0x6502a274
650223e6:	jmp    0x650125ee
650223eb:	int3   
650223ec:	int3   
650223ed:	int3   
650223ee:	int3   
650223ef:	int3   
650223f0:	mov    eax,DWORD PTR [ebp-0x18]
650223f3:	push   eax
650223f4:	mov    ecx,DWORD PTR [ebp-0x1c]
650223f7:	push   ecx
650223f8:	call   0x65002c70
650223fd:	add    esp,0x8
65022400:	ret    
65022401:	mov    edx,DWORD PTR [esp+0x8]
65022405:	lea    eax,[edx+0xc]
65022408:	mov    ecx,DWORD PTR [edx-0x20]
6502240b:	xor    ecx,eax
6502240d:	call   0x6501292c
65022412:	mov    eax,0x6502a2d4
65022417:	jmp    0x650125ee
6502241c:	int3   
6502241d:	int3   
6502241e:	int3   
6502241f:	int3   
65022420:	mov    ecx,DWORD PTR [ebp-0x10]
65022423:	jmp    0x650016b0
65022428:	mov    edx,DWORD PTR [esp+0x8]
6502242c:	lea    eax,[edx-0xc]
6502242f:	mov    ecx,DWORD PTR [edx-0x10]
65022432:	xor    ecx,eax
65022434:	call   0x6501292c
65022439:	mov    eax,0x6502a300
6502243e:	jmp    0x650125ee
65022443:	int3   
65022444:	int3   
65022445:	int3   
65022446:	int3   
65022447:	int3   
65022448:	int3   
65022449:	int3   
6502244a:	int3   
6502244b:	int3   
6502244c:	int3   
6502244d:	int3   
6502244e:	int3   
6502244f:	int3   
65022450:	mov    ecx,DWORD PTR [ebp-0x10]
65022453:	jmp    0x650016b0
65022458:	mov    edx,DWORD PTR [esp+0x8]
6502245c:	lea    eax,[edx-0x10]
6502245f:	mov    ecx,DWORD PTR [edx-0x14]
65022462:	xor    ecx,eax
65022464:	call   0x6501292c
65022469:	mov    eax,0x6502a32c
6502246e:	jmp    0x650125ee
65022473:	int3   
65022474:	int3   
65022475:	int3   
65022476:	int3   
65022477:	int3   
65022478:	int3   
65022479:	int3   
6502247a:	int3   
6502247b:	int3   
6502247c:	int3   
6502247d:	int3   
6502247e:	int3   
6502247f:	int3   
65022480:	lea    ecx,[ebp+0x24]
65022483:	jmp    0x650016b0
65022488:	lea    ecx,[ebp+0x8]
6502248b:	jmp    0x650016b0
65022490:	mov    edx,DWORD PTR [esp+0x8]
65022494:	lea    eax,[edx-0x8]
65022497:	mov    ecx,DWORD PTR [edx-0xc]
6502249a:	xor    ecx,eax
6502249c:	call   0x6501292c
650224a1:	mov    eax,0x6502a360
650224a6:	jmp    0x650125ee
650224ab:	int3   
650224ac:	int3   
650224ad:	int3   
650224ae:	int3   
650224af:	int3   
650224b0:	lea    ecx,[ebp-0x28]
650224b3:	jmp    0x650016b0
650224b8:	mov    edx,DWORD PTR [esp+0x8]
650224bc:	lea    eax,[edx-0x28]
650224bf:	mov    ecx,DWORD PTR [edx-0x2c]
650224c2:	xor    ecx,eax
650224c4:	call   0x6501292c
650224c9:	mov    eax,0x6502a38c
650224ce:	jmp    0x650125ee
650224d3:	int3   
650224d4:	int3   
650224d5:	int3   
650224d6:	int3   
650224d7:	int3   
650224d8:	int3   
650224d9:	int3   
650224da:	int3   
650224db:	int3   
650224dc:	int3   
650224dd:	int3   
650224de:	int3   
650224df:	int3   
650224e0:	mov    ecx,DWORD PTR [ebp-0x10]
650224e3:	jmp    0x650016b0
650224e8:	mov    edx,DWORD PTR [esp+0x8]
650224ec:	lea    eax,[edx-0x10]
650224ef:	mov    ecx,DWORD PTR [edx-0x14]
650224f2:	xor    ecx,eax
650224f4:	call   0x6501292c
650224f9:	mov    eax,0x6502a3b8
650224fe:	jmp    0x650125ee
65022503:	int3   
65022504:	int3   
65022505:	int3   
65022506:	int3   
65022507:	int3   
65022508:	int3   
65022509:	int3   
6502250a:	int3   
6502250b:	int3   
6502250c:	int3   
6502250d:	int3   
6502250e:	int3   
6502250f:	int3   
65022510:	mov    edx,DWORD PTR [esp+0x8]
65022514:	lea    eax,[edx+0xc]
65022517:	mov    ecx,DWORD PTR [edx-0x1c]
6502251a:	xor    ecx,eax
6502251c:	call   0x6501292c
65022521:	mov    eax,0x6502a444
65022526:	jmp    0x650125ee
6502252b:	int3   
6502252c:	int3   
6502252d:	int3   
6502252e:	int3   
6502252f:	int3   
65022530:	mov    eax,DWORD PTR [ebp-0x14]
65022533:	push   eax
65022534:	mov    ecx,DWORD PTR [ebp-0x18]
65022537:	push   ecx
65022538:	call   0x65002c70
6502253d:	add    esp,0x8
65022540:	ret    
65022541:	mov    edx,DWORD PTR [esp+0x8]
65022545:	lea    eax,[edx+0xc]
65022548:	mov    ecx,DWORD PTR [edx-0x1c]
6502254b:	xor    ecx,eax
6502254d:	call   0x6501292c
65022552:	mov    eax,0x6502a4a4
65022557:	jmp    0x650125ee
6502255c:	int3   
6502255d:	int3   
6502255e:	int3   
6502255f:	int3   
65022560:	mov    eax,DWORD PTR [ebp-0x14]
65022563:	push   eax
65022564:	mov    ecx,DWORD PTR [ebp-0x18]
65022567:	push   ecx
65022568:	call   0x65002c70
6502256d:	add    esp,0x8
65022570:	ret    
65022571:	mov    edx,DWORD PTR [esp+0x8]
65022575:	lea    eax,[edx+0xc]
65022578:	mov    ecx,DWORD PTR [edx-0x1c]
6502257b:	xor    ecx,eax
6502257d:	call   0x6501292c
65022582:	mov    eax,0x6502a504
65022587:	jmp    0x650125ee
6502258c:	int3   
6502258d:	int3   
6502258e:	int3   
6502258f:	int3   
65022590:	mov    edx,DWORD PTR [esp+0x8]
65022594:	lea    eax,[edx+0xc]
65022597:	mov    ecx,DWORD PTR [edx-0x1c]
6502259a:	xor    ecx,eax
6502259c:	call   0x6501292c
650225a1:	mov    eax,0x6502a55c
650225a6:	jmp    0x650125ee
650225ab:	int3   
650225ac:	int3   
650225ad:	int3   
650225ae:	int3   
650225af:	int3   
650225b0:	lea    ecx,[ebp+0x8]
650225b3:	jmp    0x65007db0
650225b8:	mov    edx,DWORD PTR [esp+0x8]
650225bc:	lea    eax,[edx-0x14]
650225bf:	mov    ecx,DWORD PTR [edx-0x18]
650225c2:	xor    ecx,eax
650225c4:	call   0x6501292c
650225c9:	mov    eax,0x6502a588
650225ce:	jmp    0x650125ee
650225d3:	int3   
650225d4:	int3   
650225d5:	int3   
650225d6:	int3   
650225d7:	int3   
650225d8:	int3   
650225d9:	int3   
650225da:	int3   
650225db:	int3   
650225dc:	int3   
650225dd:	int3   
650225de:	int3   
650225df:	int3   
650225e0:	lea    ecx,[ebp+0x8]
650225e3:	jmp    0x650016b0
650225e8:	mov    edx,DWORD PTR [esp+0x8]
650225ec:	lea    eax,[edx-0x14]
650225ef:	mov    ecx,DWORD PTR [edx-0x18]
650225f2:	xor    ecx,eax
650225f4:	call   0x6501292c
650225f9:	mov    eax,0x6502a5b4
650225fe:	jmp    0x650125ee
65022603:	int3   
65022604:	int3   
65022605:	int3   
65022606:	int3   
65022607:	int3   
65022608:	int3   
65022609:	int3   
6502260a:	int3   
6502260b:	int3   
6502260c:	int3   
6502260d:	int3   
6502260e:	int3   
6502260f:	int3   
65022610:	mov    ecx,DWORD PTR [ebp-0x10]
65022613:	jmp    0x650121a6
65022618:	mov    edx,DWORD PTR [esp+0x8]
6502261c:	lea    eax,[edx-0xc]
6502261f:	mov    ecx,DWORD PTR [edx-0x10]
65022622:	xor    ecx,eax
65022624:	call   0x6501292c
65022629:	mov    eax,0x6502a5e0
6502262e:	jmp    0x650125ee
65022633:	int3   
65022634:	int3   
65022635:	int3   
65022636:	int3   
65022637:	int3   
65022638:	int3   
65022639:	int3   
6502263a:	int3   
6502263b:	int3   
6502263c:	int3   
6502263d:	int3   
6502263e:	int3   
6502263f:	int3   
65022640:	mov    ecx,DWORD PTR [ebp-0x10]
65022643:	jmp    0x650121a6
65022648:	mov    edx,DWORD PTR [esp+0x8]
6502264c:	lea    eax,[edx-0x8]
6502264f:	mov    ecx,DWORD PTR [edx-0xc]
65022652:	xor    ecx,eax
65022654:	call   0x6501292c
65022659:	mov    eax,0x6502a60c
6502265e:	jmp    0x650125ee
65022663:	int3   
65022664:	int3   
65022665:	int3   
65022666:	int3   
65022667:	int3   
65022668:	int3   
65022669:	int3   
6502266a:	int3   
6502266b:	int3   
6502266c:	int3   
6502266d:	int3   
6502266e:	int3   
6502266f:	int3   
65022670:	mov    ecx,DWORD PTR [ebp-0x10]
65022673:	jmp    0x650121a6
65022678:	mov    edx,DWORD PTR [esp+0x8]
6502267c:	lea    eax,[edx-0xc]
6502267f:	mov    ecx,DWORD PTR [edx-0x10]
65022682:	xor    ecx,eax
65022684:	call   0x6501292c
65022689:	mov    eax,0x6502a638
6502268e:	jmp    0x650125ee
65022693:	int3   
65022694:	int3   
65022695:	int3   
65022696:	int3   
65022697:	int3   
65022698:	int3   
65022699:	int3   
6502269a:	int3   
6502269b:	int3   
6502269c:	int3   
6502269d:	int3   
6502269e:	int3   
6502269f:	int3   
650226a0:	mov    ecx,DWORD PTR [ebp-0x10]
650226a3:	jmp    0x650121a6
650226a8:	mov    edx,DWORD PTR [esp+0x8]
650226ac:	lea    eax,[edx-0x8]
650226af:	mov    ecx,DWORD PTR [edx-0xc]
650226b2:	xor    ecx,eax
650226b4:	call   0x6501292c
650226b9:	mov    eax,0x6502a664
650226be:	jmp    0x650125ee
650226c3:	int3   
650226c4:	int3   
650226c5:	int3   
650226c6:	int3   
650226c7:	int3   
650226c8:	int3   
650226c9:	int3   
650226ca:	int3   
650226cb:	int3   
650226cc:	int3   
650226cd:	int3   
650226ce:	int3   
650226cf:	int3   
650226d0:	mov    eax,DWORD PTR [ebp-0x34]
650226d3:	and    eax,0x1
650226d6:	je     0x650226e8
650226dc:	and    DWORD PTR [ebp-0x34],0xfffffffe
650226e0:	mov    ecx,DWORD PTR [ebp-0x30]
650226e3:	jmp    0x650016b0
650226e8:	ret    
650226e9:	lea    ecx,[ebp-0x2c]
650226ec:	jmp    0x650016b0
650226f1:	lea    ecx,[ebp-0x3c]
650226f4:	jmp    0x65001990
650226f9:	lea    ecx,[ebp-0x2c]
650226fc:	jmp    0x650016b0
65022701:	lea    ecx,[ebp-0x3c]
65022704:	jmp    0x65001990
65022709:	lea    ecx,[ebp-0x2c]
6502270c:	jmp    0x650016b0
65022711:	lea    ecx,[ebp-0x2c]
65022714:	jmp    0x650016b0
65022719:	mov    edx,DWORD PTR [esp+0x8]
6502271d:	lea    eax,[edx-0x40]
65022720:	mov    ecx,DWORD PTR [edx-0x44]
65022723:	xor    ecx,eax
65022725:	call   0x6501292c
6502272a:	add    eax,0x10
6502272d:	mov    ecx,DWORD PTR [edx-0x4]
65022730:	xor    ecx,eax
65022732:	call   0x6501292c
65022737:	mov    eax,0x6502a6c0
6502273c:	jmp    0x650125ee
65022741:	int3   
65022742:	int3   
65022743:	int3   
65022744:	int3   
65022745:	int3   
65022746:	int3   
65022747:	int3   
65022748:	int3   
65022749:	int3   
6502274a:	int3   
6502274b:	int3   
6502274c:	int3   
6502274d:	int3   
6502274e:	int3   
6502274f:	int3   
65022750:	lea    ecx,[ebp-0x30]
65022753:	jmp    0x650016b0
65022758:	mov    eax,DWORD PTR [ebp-0x4c]
6502275b:	push   eax
6502275c:	mov    ecx,DWORD PTR [ebp-0x50]
6502275f:	push   ecx
65022760:	call   0x65002c70
65022765:	add    esp,0x8
65022768:	ret    
65022769:	mov    edx,DWORD PTR [esp+0x8]
6502276d:	lea    eax,[edx+0xc]
65022770:	mov    ecx,DWORD PTR [edx-0x54]
65022773:	xor    ecx,eax
65022775:	call   0x6501292c
6502277a:	mov    ecx,DWORD PTR [edx-0x8]
6502277d:	xor    ecx,eax
6502277f:	call   0x6501292c
65022784:	mov    eax,0x6502a730
65022789:	jmp    0x650125ee
6502278e:	int3   
6502278f:	int3   
65022790:	mov    ecx,DWORD PTR [ebp-0x10]
65022793:	jmp    0x65007db0
65022798:	mov    edx,DWORD PTR [esp+0x8]
6502279c:	lea    eax,[edx-0xc]
6502279f:	mov    ecx,DWORD PTR [edx-0x10]
650227a2:	xor    ecx,eax
650227a4:	call   0x6501292c
650227a9:	mov    eax,0x6502a75c
650227ae:	jmp    0x650125ee
650227b3:	int3   
650227b4:	int3   
650227b5:	int3   
650227b6:	int3   
650227b7:	int3   
650227b8:	int3   
650227b9:	int3   
650227ba:	int3   
650227bb:	int3   
650227bc:	int3   
650227bd:	int3   
650227be:	int3   
650227bf:	int3   
650227c0:	mov    ecx,DWORD PTR [ebp-0x10]
650227c3:	jmp    0x65007db0
650227c8:	mov    edx,DWORD PTR [esp+0x8]
650227cc:	lea    eax,[edx-0x10]
650227cf:	mov    ecx,DWORD PTR [edx-0x14]
650227d2:	xor    ecx,eax
650227d4:	call   0x6501292c
650227d9:	mov    eax,0x6502a788
650227de:	jmp    0x650125ee
650227e3:	int3   
650227e4:	int3   
650227e5:	int3   
650227e6:	int3   
650227e7:	int3   
650227e8:	int3   
650227e9:	int3   
650227ea:	int3   
650227eb:	int3   
650227ec:	int3   
650227ed:	int3   
650227ee:	int3   
650227ef:	int3   
650227f0:	lea    ecx,[ebp+0x24]
650227f3:	jmp    0x65007db0
650227f8:	lea    ecx,[ebp+0x8]
650227fb:	jmp    0x65007db0
65022800:	mov    edx,DWORD PTR [esp+0x8]
65022804:	lea    eax,[edx-0x8]
65022807:	mov    ecx,DWORD PTR [edx-0xc]
6502280a:	xor    ecx,eax
6502280c:	call   0x6501292c
65022811:	mov    eax,0x6502a7bc
65022816:	jmp    0x650125ee
6502281b:	int3   
6502281c:	int3   
6502281d:	int3   
6502281e:	int3   
6502281f:	int3   
65022820:	mov    ecx,DWORD PTR [ebp-0x10]
65022823:	jmp    0x65007db0
65022828:	mov    edx,DWORD PTR [esp+0x8]
6502282c:	lea    eax,[edx-0x10]
6502282f:	mov    ecx,DWORD PTR [edx-0x14]
65022832:	xor    ecx,eax
65022834:	call   0x6501292c
65022839:	mov    eax,0x6502a7e8
6502283e:	jmp    0x650125ee
65022843:	int3   
65022844:	int3   
65022845:	int3   
65022846:	int3   
65022847:	int3   
65022848:	int3   
65022849:	int3   
6502284a:	int3   
6502284b:	int3   
6502284c:	int3   
6502284d:	int3   
6502284e:	int3   
6502284f:	int3   
65022850:	mov    eax,DWORD PTR [ebp-0x14]
65022853:	push   eax
65022854:	mov    ecx,DWORD PTR [ebp-0x18]
65022857:	push   ecx
65022858:	call   0x65002c70
6502285d:	add    esp,0x8
65022860:	ret    
65022861:	mov    edx,DWORD PTR [esp+0x8]
65022865:	lea    eax,[edx+0xc]
65022868:	mov    ecx,DWORD PTR [edx-0x1c]
6502286b:	xor    ecx,eax
6502286d:	call   0x6501292c
65022872:	mov    eax,0x6502a848
65022877:	jmp    0x650125ee
6502287c:	int3   
6502287d:	int3   
6502287e:	int3   
6502287f:	int3   
65022880:	lea    eax,[ebp-0x10]
65022883:	jmp    0x65001710
65022888:	mov    edx,DWORD PTR [esp+0x8]
6502288c:	lea    eax,[edx-0x34]
6502288f:	mov    ecx,DWORD PTR [edx-0x38]
65022892:	xor    ecx,eax
65022894:	call   0x6501292c
65022899:	mov    eax,0x6502a874
6502289e:	jmp    0x650125ee
650228a3:	int3   
650228a4:	int3   
650228a5:	int3   
650228a6:	int3   
650228a7:	int3   
650228a8:	int3   
650228a9:	int3   
650228aa:	int3   
650228ab:	int3   
650228ac:	int3   
650228ad:	int3   
650228ae:	int3   
650228af:	int3   
650228b0:	lea    ecx,[ebp-0x54]
650228b3:	jmp    0x650016b0
650228b8:	mov    edx,DWORD PTR [esp+0x8]
650228bc:	lea    eax,[edx-0x4c]
650228bf:	mov    ecx,DWORD PTR [edx-0x50]
650228c2:	xor    ecx,eax
650228c4:	call   0x6501292c
650228c9:	mov    eax,0x6502a8a0
650228ce:	jmp    0x650125ee
650228d3:	int3   
650228d4:	int3   
650228d5:	int3   
650228d6:	int3   
650228d7:	int3   
650228d8:	int3   
650228d9:	int3   
650228da:	int3   
650228db:	int3   
650228dc:	int3   
650228dd:	int3   
650228de:	int3   
650228df:	int3   
650228e0:	lea    ecx,[ebp-0x30]
650228e3:	jmp    0x650016b0
650228e8:	mov    edx,DWORD PTR [esp+0x8]
650228ec:	lea    eax,[edx+0xc]
650228ef:	mov    ecx,DWORD PTR [edx-0x44]
650228f2:	xor    ecx,eax
650228f4:	call   0x6501292c
650228f9:	mov    ecx,DWORD PTR [edx-0x8]
650228fc:	xor    ecx,eax
650228fe:	call   0x6501292c
65022903:	mov    eax,0x6502a934
65022908:	jmp    0x650125ee
6502290d:	int3   
6502290e:	int3   
6502290f:	int3   
65022910:	lea    ecx,[ebp-0x54]
65022913:	jmp    0x650016b0
65022918:	mov    edx,DWORD PTR [esp+0x8]
6502291c:	lea    eax,[edx-0x5c]
6502291f:	mov    ecx,DWORD PTR [edx-0x60]
65022922:	xor    ecx,eax
65022924:	call   0x6501292c
65022929:	mov    eax,0x6502a960
6502292e:	jmp    0x650125ee
65022933:	int3   
65022934:	int3   
65022935:	int3   
65022936:	int3   
65022937:	int3   
65022938:	int3   
65022939:	int3   
6502293a:	int3   
6502293b:	int3   
6502293c:	int3   
6502293d:	int3   
6502293e:	int3   
6502293f:	int3   
65022940:	lea    ecx,[ebp-0x54]
65022943:	jmp    0x650016b0
65022948:	mov    edx,DWORD PTR [esp+0x8]
6502294c:	lea    eax,[edx-0x5c]
6502294f:	mov    ecx,DWORD PTR [edx-0x60]
65022952:	xor    ecx,eax
65022954:	call   0x6501292c
65022959:	mov    eax,0x6502a98c
6502295e:	jmp    0x650125ee
65022963:	int3   
65022964:	int3   
65022965:	int3   
65022966:	int3   
65022967:	int3   
65022968:	int3   
65022969:	int3   
6502296a:	int3   
6502296b:	int3   
6502296c:	int3   
6502296d:	int3   
6502296e:	int3   
6502296f:	int3   
65022970:	lea    ecx,[ebp-0x54]
65022973:	jmp    0x650016b0
65022978:	mov    edx,DWORD PTR [esp+0x8]
6502297c:	lea    eax,[edx-0x5c]
6502297f:	mov    ecx,DWORD PTR [edx-0x60]
65022982:	xor    ecx,eax
65022984:	call   0x6501292c
65022989:	mov    eax,0x6502a9b8
6502298e:	jmp    0x650125ee
65022993:	int3   
65022994:	int3   
65022995:	int3   
65022996:	int3   
65022997:	int3   
65022998:	int3   
65022999:	int3   
6502299a:	int3   
6502299b:	int3   
6502299c:	int3   
6502299d:	int3   
6502299e:	int3   
6502299f:	int3   
650229a0:	lea    ecx,[ebp-0x54]
650229a3:	jmp    0x650016b0
650229a8:	mov    edx,DWORD PTR [esp+0x8]
650229ac:	lea    eax,[edx-0x5c]
650229af:	mov    ecx,DWORD PTR [edx-0x60]
650229b2:	xor    ecx,eax
650229b4:	call   0x6501292c
650229b9:	mov    eax,0x6502a9e4
650229be:	jmp    0x650125ee
650229c3:	int3   
650229c4:	int3   
650229c5:	int3   
650229c6:	int3   
650229c7:	int3   
650229c8:	int3   
650229c9:	int3   
650229ca:	int3   
650229cb:	int3   
650229cc:	int3   
650229cd:	int3   
650229ce:	int3   
650229cf:	int3   
650229d0:	lea    ecx,[ebp-0x50]
650229d3:	jmp    0x650016b0
650229d8:	mov    edx,DWORD PTR [esp+0x8]
650229dc:	lea    eax,[edx-0x54]
650229df:	mov    ecx,DWORD PTR [edx-0x58]
650229e2:	xor    ecx,eax
650229e4:	call   0x6501292c
650229e9:	mov    eax,0x6502aa10
650229ee:	jmp    0x650125ee
650229f3:	int3   
650229f4:	int3   
650229f5:	int3   
650229f6:	int3   
650229f7:	int3   
650229f8:	int3   
650229f9:	int3   
650229fa:	int3   
650229fb:	int3   
650229fc:	int3   
650229fd:	int3   
650229fe:	int3   
650229ff:	int3   
65022a00:	lea    ecx,[ebp-0x50]
65022a03:	jmp    0x650016b0
65022a08:	mov    edx,DWORD PTR [esp+0x8]
65022a0c:	lea    eax,[edx-0x54]
65022a0f:	mov    ecx,DWORD PTR [edx-0x58]
65022a12:	xor    ecx,eax
65022a14:	call   0x6501292c
65022a19:	mov    eax,0x6502aa3c
65022a1e:	jmp    0x650125ee
65022a23:	int3   
65022a24:	int3   
65022a25:	int3   
65022a26:	int3   
65022a27:	int3   
65022a28:	int3   
65022a29:	int3   
65022a2a:	int3   
65022a2b:	int3   
65022a2c:	int3   
65022a2d:	int3   
65022a2e:	int3   
65022a2f:	int3   
65022a30:	mov    eax,ds:0x65030368
65022a35:	and    eax,0xfffffffe
65022a38:	mov    ds:0x65030368,eax
65022a3d:	ret    
65022a3e:	mov    edx,DWORD PTR [esp+0x8]
65022a42:	lea    eax,[edx]
65022a44:	mov    ecx,DWORD PTR [edx-0x4]
65022a47:	xor    ecx,eax
65022a49:	call   0x6501292c
65022a4e:	mov    eax,0x6502aa68
65022a53:	jmp    0x650125ee
65022a58:	int3   
65022a59:	int3   
65022a5a:	int3   
65022a5b:	int3   
65022a5c:	int3   
65022a5d:	int3   
65022a5e:	int3   
65022a5f:	int3   
65022a60:	mov    eax,ds:0x6503036c
65022a65:	and    eax,0xfffffffe
65022a68:	mov    ds:0x6503036c,eax
65022a6d:	ret    
65022a6e:	mov    edx,DWORD PTR [esp+0x8]
65022a72:	lea    eax,[edx]
65022a74:	mov    ecx,DWORD PTR [edx-0x4]
65022a77:	xor    ecx,eax
65022a79:	call   0x6501292c
65022a7e:	mov    eax,0x6502aa94
65022a83:	jmp    0x650125ee
65022a88:	int3   
65022a89:	int3   
65022a8a:	int3   
65022a8b:	int3   
65022a8c:	int3   
65022a8d:	int3   
65022a8e:	int3   
65022a8f:	int3   
65022a90:	lea    ecx,[ebp-0x4c]
65022a93:	jmp    0x65007db0
65022a98:	lea    ecx,[ebp-0x30]
65022a9b:	jmp    0x65007db0
65022aa0:	mov    ecx,DWORD PTR [ebp-0xc0]
65022aa6:	jmp    0x65007db0
65022aab:	lea    ecx,[ebp-0x84]
65022ab1:	jmp    0x65007300
65022ab6:	lea    ecx,[ebp-0xbc]
65022abc:	jmp    0x65007300
65022ac1:	mov    edx,DWORD PTR [esp+0x8]
65022ac5:	lea    eax,[edx-0xdc]
65022acb:	mov    ecx,DWORD PTR [edx-0xe0]
65022ad1:	xor    ecx,eax
65022ad3:	call   0x6501292c
65022ad8:	add    eax,0xc
65022adb:	mov    ecx,DWORD PTR [edx-0x8]
65022ade:	xor    ecx,eax
65022ae0:	call   0x6501292c
65022ae5:	mov    eax,0x6502aae0
65022aea:	jmp    0x650125ee
65022aef:	int3   
65022af0:	lea    ecx,[ebp-0x4c]
65022af3:	jmp    0x650016b0
65022af8:	lea    ecx,[ebp-0x30]
65022afb:	jmp    0x650016b0
65022b00:	mov    ecx,DWORD PTR [ebp-0xc0]
65022b06:	jmp    0x650016b0
65022b0b:	lea    ecx,[ebp-0x84]
65022b11:	jmp    0x6500f940
65022b16:	lea    ecx,[ebp-0xbc]
65022b1c:	jmp    0x6500f940
65022b21:	mov    edx,DWORD PTR [esp+0x8]
65022b25:	lea    eax,[edx-0xdc]
65022b2b:	mov    ecx,DWORD PTR [edx-0xe0]
65022b31:	xor    ecx,eax
65022b33:	call   0x6501292c
65022b38:	add    eax,0xc
65022b3b:	mov    ecx,DWORD PTR [edx-0x8]
65022b3e:	xor    ecx,eax
65022b40:	call   0x6501292c
65022b45:	mov    eax,0x6502ab2c
65022b4a:	jmp    0x650125ee
65022b4f:	int3   
65022b50:	mov    ecx,DWORD PTR [ebp-0x10]
65022b53:	jmp    0x65001990
65022b58:	mov    edx,DWORD PTR [esp+0x8]
65022b5c:	lea    eax,[edx-0xc]
65022b5f:	mov    ecx,DWORD PTR [edx-0x10]
65022b62:	xor    ecx,eax
65022b64:	call   0x6501292c
65022b69:	mov    eax,0x6502ab58
65022b6e:	jmp    0x650125ee
65022b73:	int3   
65022b74:	int3   
65022b75:	int3   
65022b76:	int3   
65022b77:	int3   
65022b78:	int3   
65022b79:	int3   
65022b7a:	int3   
65022b7b:	int3   
65022b7c:	int3   
65022b7d:	int3   
65022b7e:	int3   
65022b7f:	int3   
65022b80:	lea    ecx,[ebp-0x10]
65022b83:	jmp    0x65001990
65022b88:	mov    edx,DWORD PTR [esp+0x8]
65022b8c:	lea    eax,[edx-0x8]
65022b8f:	mov    ecx,DWORD PTR [edx-0xc]
65022b92:	xor    ecx,eax
65022b94:	call   0x6501292c
65022b99:	mov    eax,0x6502ab84
65022b9e:	jmp    0x650125ee
65022ba3:	int3   
65022ba4:	int3   
65022ba5:	int3   
65022ba6:	int3   
65022ba7:	int3   
65022ba8:	int3   
65022ba9:	int3   
65022baa:	int3   
65022bab:	int3   
65022bac:	int3   
65022bad:	int3   
65022bae:	int3   
65022baf:	int3   
65022bb0:	mov    ecx,DWORD PTR [ebp-0x10]
65022bb3:	jmp    0x65001990
65022bb8:	mov    edx,DWORD PTR [esp+0x8]
65022bbc:	lea    eax,[edx-0xc]
65022bbf:	mov    ecx,DWORD PTR [edx-0x10]
65022bc2:	xor    ecx,eax
65022bc4:	call   0x6501292c
65022bc9:	mov    eax,0x6502abb0
65022bce:	jmp    0x650125ee
65022bd3:	int3   
65022bd4:	int3   
65022bd5:	int3   
65022bd6:	int3   
65022bd7:	int3   
65022bd8:	int3   
65022bd9:	int3   
65022bda:	int3   
65022bdb:	int3   
65022bdc:	int3   
65022bdd:	int3   
65022bde:	int3   
65022bdf:	int3   
65022be0:	lea    edi,[ebp-0x58]
65022be3:	jmp    0x6500acf0
65022be8:	lea    edi,[ebp-0x40]
65022beb:	jmp    0x6500acf0
65022bf0:	lea    edi,[ebp-0x38]
65022bf3:	jmp    0x6500acf0
65022bf8:	lea    edi,[ebp-0x3c]
65022bfb:	jmp    0x6500acf0
65022c00:	lea    edi,[ebp-0x40]
65022c03:	jmp    0x6500acf0
65022c08:	lea    ecx,[ebp-0x24]
65022c0b:	jmp    0x6500b060
65022c10:	mov    edx,DWORD PTR [esp+0x8]
65022c14:	lea    eax,[edx-0x60]
65022c17:	mov    ecx,DWORD PTR [edx-0x64]
65022c1a:	xor    ecx,eax
65022c1c:	call   0x6501292c
65022c21:	mov    eax,0x6502ac04
65022c26:	jmp    0x650125ee
65022c2b:	int3   
65022c2c:	int3   
65022c2d:	int3   
65022c2e:	int3   
65022c2f:	int3   
65022c30:	lea    eax,[ebp-0x24]
65022c33:	jmp    0x6500bbc0
65022c38:	lea    ecx,[ebp-0x10]
65022c3b:	jmp    0x65001990
65022c40:	lea    ecx,[ebp-0x18]
65022c43:	jmp    0x65001990
65022c48:	lea    ecx,[ebp-0x40]
65022c4b:	jmp    0x650016b0
65022c50:	mov    edx,DWORD PTR [esp+0x8]
65022c54:	lea    eax,[edx+0xc]
65022c57:	mov    ecx,DWORD PTR [edx-0x44]
65022c5a:	xor    ecx,eax
65022c5c:	call   0x6501292c
65022c61:	mov    ecx,DWORD PTR [edx+0x294]
65022c67:	xor    ecx,eax
65022c69:	call   0x6501292c
65022c6e:	mov    eax,0x6502ac48
65022c73:	jmp    0x650125ee
65022c78:	int3   
65022c79:	int3   
65022c7a:	int3   
65022c7b:	int3   
65022c7c:	int3   
65022c7d:	int3   
65022c7e:	int3   
65022c7f:	int3   
65022c80:	lea    ecx,[ebp-0x1005c]
65022c86:	jmp    0x650016b0
65022c8b:	lea    ecx,[ebp-0x10074]
65022c91:	jmp    0x65002760
65022c96:	lea    ecx,[ebp-0x10074]
65022c9c:	jmp    0x65002760
65022ca1:	lea    ecx,[ebp-0x1005c]
65022ca7:	jmp    0x650016b0
65022cac:	mov    edx,DWORD PTR [esp+0x8]
65022cb0:	lea    eax,[edx-0x10084]
65022cb6:	mov    ecx,DWORD PTR [edx-0x10088]
65022cbc:	xor    ecx,eax
65022cbe:	call   0x6501292c
65022cc3:	add    eax,0x10
65022cc6:	mov    ecx,DWORD PTR [edx-0x4]
65022cc9:	xor    ecx,eax
65022ccb:	call   0x6501292c
65022cd0:	mov    eax,0x6502ac8c
65022cd5:	jmp    0x650125ee
65022cda:	int3   
65022cdb:	int3   
65022cdc:	int3   
65022cdd:	int3   
65022cde:	int3   
65022cdf:	int3   
65022ce0:	lea    ecx,[ebp-0x30]
65022ce3:	jmp    0x650016b0
65022ce8:	lea    ecx,[ebp-0x5c]
65022ceb:	jmp    0x650016b0
65022cf0:	mov    edx,DWORD PTR [esp+0x8]
65022cf4:	lea    eax,[edx-0x74]
65022cf7:	mov    ecx,DWORD PTR [edx-0x78]
65022cfa:	xor    ecx,eax
65022cfc:	call   0x6501292c
65022d01:	add    eax,0xc
65022d04:	mov    ecx,DWORD PTR [edx-0x8]
65022d07:	xor    ecx,eax
65022d09:	call   0x6501292c
65022d0e:	mov    eax,0x6502acc0
65022d13:	jmp    0x650125ee
65022d18:	int3   
65022d19:	int3   
65022d1a:	int3   
65022d1b:	int3   
65022d1c:	int3   
65022d1d:	int3   
65022d1e:	int3   
65022d1f:	int3   
65022d20:	mov    edx,DWORD PTR [esp+0x8]
65022d24:	lea    eax,[edx+0xc]
65022d27:	mov    ecx,DWORD PTR [edx-0x14]
65022d2a:	xor    ecx,eax
65022d2c:	call   0x6501292c
65022d31:	mov    eax,0x6502ad18
65022d36:	jmp    0x650125ee
65022d3b:	int3   
65022d3c:	int3   
65022d3d:	int3   
65022d3e:	int3   
65022d3f:	int3   
65022d40:	mov    ecx,DWORD PTR [ebp-0x10]
65022d43:	jmp    0x65001990
65022d48:	mov    edx,DWORD PTR [esp+0x8]
65022d4c:	lea    eax,[edx-0xc]
65022d4f:	mov    ecx,DWORD PTR [edx-0x10]
65022d52:	xor    ecx,eax
65022d54:	call   0x6501292c
65022d59:	mov    eax,0x6502ad44
65022d5e:	jmp    0x650125ee
65022d63:	int3   
65022d64:	int3   
65022d65:	int3   
65022d66:	int3   
65022d67:	int3   
65022d68:	int3   
65022d69:	int3   
65022d6a:	int3   
65022d6b:	int3   
65022d6c:	int3   
65022d6d:	int3   
65022d6e:	int3   
65022d6f:	int3   
65022d70:	lea    ecx,[ebp-0x1c]
65022d73:	jmp    0x65001990
65022d78:	mov    edx,DWORD PTR [esp+0x8]
65022d7c:	lea    eax,[edx-0x1c]
65022d7f:	mov    ecx,DWORD PTR [edx-0x20]
65022d82:	xor    ecx,eax
65022d84:	call   0x6501292c
65022d89:	mov    eax,0x6502ad70
65022d8e:	jmp    0x650125ee
65022d93:	int3   
65022d94:	int3   
65022d95:	int3   
65022d96:	int3   
65022d97:	int3   
65022d98:	int3   
65022d99:	int3   
65022d9a:	int3   
65022d9b:	int3   
65022d9c:	int3   
65022d9d:	int3   
65022d9e:	int3   
65022d9f:	int3   
65022da0:	mov    eax,ds:0x650303ec
65022da5:	and    eax,0xfffffffe
65022da8:	mov    ds:0x650303ec,eax
65022dad:	ret    
65022dae:	lea    ecx,[ebp-0x434]
65022db4:	jmp    0x650016b0
65022db9:	lea    ecx,[ebp-0x460]
65022dbf:	jmp    0x650016b0
65022dc4:	mov    edx,DWORD PTR [esp+0x8]
65022dc8:	lea    eax,[edx-0x46c]
65022dce:	mov    ecx,DWORD PTR [edx-0x470]
65022dd4:	xor    ecx,eax
65022dd6:	call   0x6501292c
65022ddb:	add    eax,0xc
65022dde:	mov    ecx,DWORD PTR [edx-0x8]
65022de1:	xor    ecx,eax
65022de3:	call   0x6501292c
65022de8:	mov    eax,0x6502adac
65022ded:	jmp    0x650125ee
65022df2:	int3   
65022df3:	int3   
65022df4:	int3   
65022df5:	int3   
65022df6:	int3   
65022df7:	int3   
65022df8:	int3   
65022df9:	int3   
65022dfa:	int3   
65022dfb:	int3   
65022dfc:	int3   
65022dfd:	int3   
65022dfe:	int3   
65022dff:	int3   
65022e00:	lea    esi,[ebp-0x840]
65022e06:	jmp    0x65002bd0
65022e0b:	lea    ecx,[ebp-0x848]
65022e11:	jmp    0x65001990
65022e16:	mov    edx,DWORD PTR [esp+0x8]
65022e1a:	lea    eax,[edx-0x84c]
65022e20:	mov    ecx,DWORD PTR [edx-0x850]
65022e26:	xor    ecx,eax
65022e28:	call   0x6501292c
65022e2d:	add    eax,0xc
65022e30:	mov    ecx,DWORD PTR [edx-0x8]
65022e33:	xor    ecx,eax
65022e35:	call   0x6501292c
65022e3a:	mov    eax,0x6502ade0
65022e3f:	jmp    0x650125ee
65022e44:	int3   
65022e45:	int3   
65022e46:	int3   
65022e47:	int3   
65022e48:	int3   
65022e49:	int3   
65022e4a:	int3   
65022e4b:	int3   
65022e4c:	int3   
65022e4d:	int3   
65022e4e:	int3   
65022e4f:	int3   
65022e50:	mov    eax,DWORD PTR [ebp-0x54]
65022e53:	and    eax,0x1
65022e56:	je     0x65022e68
65022e5c:	and    DWORD PTR [ebp-0x54],0xfffffffe
65022e60:	mov    ecx,DWORD PTR [ebp+0x4]
65022e63:	jmp    0x65001990
65022e68:	ret    
65022e69:	lea    ecx,[ebp-0x50]
65022e6c:	jmp    0x650016b0
65022e71:	lea    ecx,[ebp-0x50]
65022e74:	jmp    0x650016b0
65022e79:	mov    edx,DWORD PTR [esp+0x8]
65022e7d:	lea    eax,[edx-0x54]
65022e80:	mov    ecx,DWORD PTR [edx-0x58]
65022e83:	xor    ecx,eax
65022e85:	call   0x6501292c
65022e8a:	mov    eax,0x6502ae1c
65022e8f:	jmp    0x650125ee
65022e94:	int3   
65022e95:	int3   
65022e96:	int3   
65022e97:	int3   
65022e98:	int3   
65022e99:	int3   
65022e9a:	int3   
65022e9b:	int3   
65022e9c:	int3   
65022e9d:	int3   
65022e9e:	int3   
65022e9f:	int3   
65022ea0:	lea    ecx,[ebp+0x4]
65022ea3:	jmp    0x65001990
65022ea8:	mov    edx,DWORD PTR [esp+0x8]
65022eac:	lea    eax,[edx-0x30]
65022eaf:	mov    ecx,DWORD PTR [edx-0x34]
65022eb2:	xor    ecx,eax
65022eb4:	call   0x6501292c
65022eb9:	add    eax,0xc
65022ebc:	mov    ecx,DWORD PTR [edx-0x4]
65022ebf:	xor    ecx,eax
65022ec1:	call   0x6501292c
65022ec6:	mov    eax,0x6502ae48
65022ecb:	jmp    0x650125ee
65022ed0:	lea    ecx,[ebp+0x4]
65022ed3:	jmp    0x65001990
65022ed8:	lea    ecx,[ebp-0x58]
65022edb:	jmp    0x650016e0
65022ee0:	lea    ecx,[ebp-0x50]
65022ee3:	jmp    0x650016b0
65022ee8:	lea    ecx,[ebp-0x50]
65022eeb:	jmp    0x650016b0
65022ef0:	mov    edx,DWORD PTR [esp+0x8]
65022ef4:	lea    eax,[edx-0x58]
65022ef7:	mov    ecx,DWORD PTR [edx-0x5c]
65022efa:	xor    ecx,eax
65022efc:	call   0x6501292c
65022f01:	mov    eax,0x6502ae8c
65022f06:	jmp    0x650125ee
65022f0b:	int3   
65022f0c:	int3   
65022f0d:	int3   
65022f0e:	int3   
65022f0f:	int3   
65022f10:	lea    ecx,[ebp-0x434]
65022f16:	jmp    0x65001990
65022f1b:	mov    edx,DWORD PTR [esp+0x8]
65022f1f:	lea    eax,[edx-0x434]
65022f25:	mov    ecx,DWORD PTR [edx-0x438]
65022f2b:	xor    ecx,eax
65022f2d:	call   0x6501292c
65022f32:	add    eax,0xc
65022f35:	mov    ecx,DWORD PTR [edx-0x8]
65022f38:	xor    ecx,eax
65022f3a:	call   0x6501292c
65022f3f:	mov    eax,0x6502aeb8
65022f44:	jmp    0x650125ee
65022f49:	int3   
65022f4a:	int3   
65022f4b:	int3   
65022f4c:	int3   
65022f4d:	int3   
65022f4e:	int3   
65022f4f:	int3   
65022f50:	lea    edi,[ebp-0x18]
65022f53:	jmp    0x6500acf0
65022f58:	lea    edi,[ebp-0x1c]
65022f5b:	jmp    0x6500acf0
65022f60:	lea    edi,[ebp-0x14]
65022f63:	jmp    0x6500acf0
65022f68:	mov    edx,DWORD PTR [esp+0x8]
65022f6c:	lea    eax,[edx-0x1c]
65022f6f:	mov    ecx,DWORD PTR [edx-0x20]
65022f72:	xor    ecx,eax
65022f74:	call   0x6501292c
65022f79:	mov    eax,0x6502af04
65022f7e:	jmp    0x650125ee
65022f83:	int3   
65022f84:	int3   
65022f85:	int3   
65022f86:	int3   
65022f87:	int3   
65022f88:	int3   
65022f89:	int3   
65022f8a:	int3   
65022f8b:	int3   
65022f8c:	int3   
65022f8d:	int3   
65022f8e:	int3   
65022f8f:	int3   
65022f90:	mov    edx,DWORD PTR [esp+0x8]
65022f94:	lea    eax,[edx+0xc]
65022f97:	mov    ecx,DWORD PTR [edx-0x16c]
65022f9d:	xor    ecx,eax
65022f9f:	call   0x6501292c
65022fa4:	mov    ecx,DWORD PTR [edx-0x8]
65022fa7:	xor    ecx,eax
65022fa9:	call   0x6501292c
65022fae:	mov    eax,0x6502af5c
65022fb3:	jmp    0x650125ee
65022fb8:	int3   
65022fb9:	int3   
65022fba:	int3   
65022fbb:	int3   
65022fbc:	int3   
65022fbd:	int3   
65022fbe:	int3   
65022fbf:	int3   
65022fc0:	lea    ecx,[ebp+0x40c]
65022fc6:	jmp    0x65001990
65022fcb:	mov    eax,ds:0x650303fc
65022fd0:	and    eax,0xfffffffe
65022fd3:	mov    ds:0x650303fc,eax
65022fd8:	ret    
65022fd9:	lea    eax,[ebp-0x34]
65022fdc:	jmp    0x65003e50
65022fe1:	lea    ecx,[ebp-0x28]
65022fe4:	jmp    0x650016b0
65022fe9:	lea    ecx,[ebp-0x28]
65022fec:	jmp    0x650016b0
65022ff1:	lea    ecx,[ebp-0x28]
65022ff4:	jmp    0x650016b0
65022ff9:	lea    ecx,[ebp-0x28]
65022ffc:	jmp    0x650016b0
65023001:	lea    ecx,[ebp-0x28]
65023004:	jmp    0x650016b0
65023009:	lea    ecx,[ebp-0x28]
6502300c:	jmp    0x650016b0
65023011:	lea    ecx,[ebp-0x28]
65023014:	jmp    0x650016b0
65023019:	lea    ecx,[ebp-0x28]
6502301c:	jmp    0x650016b0
65023021:	lea    ecx,[ebp-0x28]
65023024:	jmp    0x650016b0
65023029:	lea    ecx,[ebp-0x28]
6502302c:	jmp    0x650016b0
65023031:	lea    ecx,[ebp-0x28]
65023034:	jmp    0x650016b0
65023039:	lea    ecx,[ebp-0x28]
6502303c:	jmp    0x650016b0
65023041:	lea    ecx,[ebp-0x28]
65023044:	jmp    0x650016b0
65023049:	lea    ecx,[ebp-0x28]
6502304c:	jmp    0x650016b0
65023051:	lea    ecx,[ebp-0x28]
65023054:	jmp    0x650016b0
65023059:	lea    ecx,[ebp-0x28]
6502305c:	jmp    0x650016b0
65023061:	lea    ecx,[ebp-0x28]
65023064:	jmp    0x650016b0
65023069:	lea    ecx,[ebp-0x28]
6502306c:	jmp    0x650016b0
65023071:	lea    ecx,[ebp-0x28]
65023074:	jmp    0x650016b0
65023079:	lea    ecx,[ebp-0x28]
6502307c:	jmp    0x650016b0
65023081:	lea    ecx,[ebp-0x28]
65023084:	jmp    0x650016b0
65023089:	lea    ecx,[ebp-0x28]
6502308c:	jmp    0x650016b0
65023091:	lea    ecx,[ebp-0x28]
65023094:	jmp    0x650016b0
65023099:	lea    ecx,[ebp-0x28]
6502309c:	jmp    0x650016b0
650230a1:	lea    ecx,[ebp-0x28]
650230a4:	jmp    0x650016b0
650230a9:	lea    ecx,[ebp-0x28]
650230ac:	jmp    0x650016b0
650230b1:	lea    ecx,[ebp-0x28]
650230b4:	jmp    0x650016b0
650230b9:	lea    ecx,[ebp-0x28]
650230bc:	jmp    0x650016b0
650230c1:	lea    ecx,[ebp-0x28]
650230c4:	jmp    0x650016b0
650230c9:	lea    ecx,[ebp-0x28]
650230cc:	jmp    0x650016b0
650230d1:	lea    ecx,[ebp-0x28]
650230d4:	jmp    0x650016b0
650230d9:	lea    ecx,[ebp-0x28]
650230dc:	jmp    0x650016b0
650230e1:	lea    ecx,[ebp-0x28]
650230e4:	jmp    0x650016b0
650230e9:	lea    ecx,[ebp-0x28]
650230ec:	jmp    0x650016b0
650230f1:	lea    ecx,[ebp-0x28]
650230f4:	jmp    0x650016b0
650230f9:	lea    ecx,[ebp-0x28]
650230fc:	jmp    0x650016b0
65023101:	lea    ecx,[ebp-0x28]
65023104:	jmp    0x650016b0
65023109:	lea    ecx,[ebp-0x28]
6502310c:	jmp    0x650016b0
65023111:	lea    ecx,[ebp-0x28]
65023114:	jmp    0x650016b0
65023119:	lea    ecx,[ebp-0x28]
6502311c:	jmp    0x650016b0
65023121:	lea    ecx,[ebp-0x28]
65023124:	jmp    0x650016b0
65023129:	lea    ecx,[ebp-0x28]
6502312c:	jmp    0x650016b0
65023131:	lea    ecx,[ebp-0x28]
65023134:	jmp    0x650016b0
65023139:	lea    ecx,[ebp-0x28]
6502313c:	jmp    0x650016b0
65023141:	lea    ecx,[ebp-0x28]
65023144:	jmp    0x650016b0
65023149:	lea    ecx,[ebp-0x28]
6502314c:	jmp    0x650016b0
65023151:	lea    ecx,[ebp-0x28]
65023154:	jmp    0x650016b0
65023159:	lea    ecx,[ebp-0x28]
6502315c:	jmp    0x650016b0
65023161:	lea    ecx,[ebp-0x28]
65023164:	jmp    0x650016b0
65023169:	lea    ecx,[ebp-0x28]
6502316c:	jmp    0x650016b0
65023171:	lea    ecx,[ebp-0x28]
65023174:	jmp    0x650016b0
65023179:	lea    ecx,[ebp-0x28]
6502317c:	jmp    0x650016b0
65023181:	lea    ecx,[ebp-0x28]
65023184:	jmp    0x650016b0
65023189:	lea    ecx,[ebp-0x28]
6502318c:	jmp    0x650016b0
65023191:	lea    ecx,[ebp-0x28]
65023194:	jmp    0x650016b0
65023199:	lea    ecx,[ebp-0x28]
6502319c:	jmp    0x650016b0
650231a1:	lea    ecx,[ebp-0x28]
650231a4:	jmp    0x650016b0
650231a9:	lea    ecx,[ebp-0x28]
650231ac:	jmp    0x650016b0
650231b1:	lea    ecx,[ebp-0x28]
650231b4:	jmp    0x650016b0
650231b9:	lea    eax,[ebp-0x40]
650231bc:	jmp    0x65003e50
650231c1:	lea    ecx,[ebp-0x28]
650231c4:	jmp    0x650016b0
650231c9:	mov    edx,DWORD PTR [esp+0x8]
650231cd:	lea    eax,[edx+0xc]
650231d0:	mov    ecx,DWORD PTR [edx-0x4c]
650231d3:	xor    ecx,eax
650231d5:	call   0x6501292c
650231da:	mov    ecx,DWORD PTR [edx+0x40c]
650231e0:	xor    ecx,eax
650231e2:	call   0x6501292c
650231e7:	mov    eax,0x6502b180
650231ec:	jmp    0x650125ee
650231f1:	int3   
650231f2:	int3   
650231f3:	int3   
650231f4:	int3   
650231f5:	int3   
650231f6:	int3   
650231f7:	int3   
650231f8:	int3   
650231f9:	int3   
650231fa:	int3   
650231fb:	int3   
650231fc:	int3   
650231fd:	int3   
650231fe:	int3   
650231ff:	int3   
65023200:	lea    ecx,[ebp+0x40c]
65023206:	jmp    0x65001990
6502320b:	mov    eax,ds:0x6503040c
65023210:	and    eax,0xfffffffe
65023213:	mov    ds:0x6503040c,eax
65023218:	ret    
65023219:	lea    eax,[ebp-0x34]
6502321c:	jmp    0x65003e50
65023221:	lea    ecx,[ebp-0x28]
65023224:	jmp    0x650016b0
65023229:	lea    ecx,[ebp-0x28]
6502322c:	jmp    0x650016b0
65023231:	lea    ecx,[ebp-0x28]
65023234:	jmp    0x650016b0
65023239:	lea    ecx,[ebp-0x28]
6502323c:	jmp    0x650016b0
65023241:	lea    ecx,[ebp-0x28]
65023244:	jmp    0x650016b0
65023249:	lea    ecx,[ebp-0x28]
6502324c:	jmp    0x650016b0
65023251:	lea    ecx,[ebp-0x28]
65023254:	jmp    0x650016b0
65023259:	lea    ecx,[ebp-0x28]
6502325c:	jmp    0x650016b0
65023261:	lea    ecx,[ebp-0x28]
65023264:	jmp    0x650016b0
65023269:	lea    ecx,[ebp-0x28]
6502326c:	jmp    0x650016b0
65023271:	lea    ecx,[ebp-0x28]
65023274:	jmp    0x650016b0
65023279:	lea    ecx,[ebp-0x28]
6502327c:	jmp    0x650016b0
65023281:	lea    ecx,[ebp-0x28]
65023284:	jmp    0x650016b0
65023289:	lea    ecx,[ebp-0x28]
6502328c:	jmp    0x650016b0
65023291:	lea    ecx,[ebp-0x28]
65023294:	jmp    0x650016b0
65023299:	lea    ecx,[ebp-0x28]
6502329c:	jmp    0x650016b0
650232a1:	lea    ecx,[ebp-0x28]
650232a4:	jmp    0x650016b0
650232a9:	lea    ecx,[ebp-0x28]
650232ac:	jmp    0x650016b0
650232b1:	lea    ecx,[ebp-0x28]
650232b4:	jmp    0x650016b0
650232b9:	lea    ecx,[ebp-0x28]
650232bc:	jmp    0x650016b0
650232c1:	lea    ecx,[ebp-0x28]
650232c4:	jmp    0x650016b0
650232c9:	lea    ecx,[ebp-0x28]
650232cc:	jmp    0x650016b0
650232d1:	lea    ecx,[ebp-0x28]
650232d4:	jmp    0x650016b0
650232d9:	lea    ecx,[ebp-0x28]
650232dc:	jmp    0x650016b0
650232e1:	lea    ecx,[ebp-0x28]
650232e4:	jmp    0x650016b0
650232e9:	lea    ecx,[ebp-0x28]
650232ec:	jmp    0x650016b0
650232f1:	lea    ecx,[ebp-0x28]
650232f4:	jmp    0x650016b0
650232f9:	lea    ecx,[ebp-0x28]
650232fc:	jmp    0x650016b0
65023301:	lea    ecx,[ebp-0x28]
65023304:	jmp    0x650016b0
65023309:	lea    ecx,[ebp-0x28]
6502330c:	jmp    0x650016b0
65023311:	lea    ecx,[ebp-0x28]
65023314:	jmp    0x650016b0
65023319:	lea    ecx,[ebp-0x28]
6502331c:	jmp    0x650016b0
65023321:	lea    ecx,[ebp-0x28]
65023324:	jmp    0x650016b0
65023329:	lea    ecx,[ebp-0x28]
6502332c:	jmp    0x650016b0
65023331:	lea    ecx,[ebp-0x28]
65023334:	jmp    0x650016b0
65023339:	lea    ecx,[ebp-0x28]
6502333c:	jmp    0x650016b0
65023341:	lea    ecx,[ebp-0x28]
65023344:	jmp    0x650016b0
65023349:	lea    ecx,[ebp-0x28]
6502334c:	jmp    0x650016b0
65023351:	lea    eax,[ebp-0x40]
65023354:	jmp    0x65003e50
65023359:	lea    ecx,[ebp-0x28]
6502335c:	jmp    0x650016b0
65023361:	mov    edx,DWORD PTR [esp+0x8]
65023365:	lea    eax,[edx+0xc]
65023368:	mov    ecx,DWORD PTR [edx-0x4c]
6502336b:	xor    ecx,eax
6502336d:	call   0x6501292c
65023372:	mov    ecx,DWORD PTR [edx+0x40c]
65023378:	xor    ecx,eax
6502337a:	call   0x6501292c
6502337f:	mov    eax,0x6502b300
65023384:	jmp    0x650125ee
65023389:	int3   
6502338a:	int3   
6502338b:	int3   
6502338c:	int3   
6502338d:	int3   
6502338e:	int3   
6502338f:	int3   
65023390:	mov    eax,DWORD PTR [ebp-0x54]
65023393:	and    eax,0x1
65023396:	je     0x650233a8
6502339c:	and    DWORD PTR [ebp-0x54],0xfffffffe
650233a0:	mov    ecx,DWORD PTR [ebp+0x4]
650233a3:	jmp    0x65001990
650233a8:	ret    
650233a9:	lea    ecx,[ebp-0x50]
650233ac:	jmp    0x650016b0
650233b1:	mov    edx,DWORD PTR [esp+0x8]
650233b5:	lea    eax,[edx-0x58]
650233b8:	mov    ecx,DWORD PTR [edx-0x5c]
650233bb:	xor    ecx,eax
650233bd:	call   0x6501292c
650233c2:	mov    eax,0x6502b334
650233c7:	jmp    0x650125ee
650233cc:	int3   
650233cd:	int3   
650233ce:	int3   
650233cf:	int3   
650233d0:	mov    eax,DWORD PTR [ebp-0x28]
650233d3:	and    eax,0x1
650233d6:	je     0x650233e8
650233dc:	and    DWORD PTR [ebp-0x28],0xfffffffe
650233e0:	mov    ecx,DWORD PTR [ebp+0x4]
650233e3:	jmp    0x65001990
650233e8:	ret    
650233e9:	lea    ecx,[ebp-0x24]
650233ec:	jmp    0x65001990
650233f1:	lea    ecx,[ebp-0x20]
650233f4:	jmp    0x65001990
650233f9:	lea    ecx,[ebp-0x1c]
650233fc:	jmp    0x65001990
65023401:	lea    ecx,[ebp-0x18]
65023404:	jmp    0x65001990
65023409:	lea    ecx,[ebp-0x14]
6502340c:	jmp    0x65001990
65023411:	lea    ecx,[ebp-0x10]
65023414:	jmp    0x65001990
65023419:	mov    edx,DWORD PTR [esp+0x8]
6502341d:	lea    eax,[edx-0x30]
65023420:	mov    ecx,DWORD PTR [edx-0x34]
65023423:	xor    ecx,eax
65023425:	call   0x6501292c
6502342a:	mov    eax,0x6502b390
6502342f:	jmp    0x650125ee
65023434:	int3   
65023435:	int3   
65023436:	int3   
65023437:	int3   
65023438:	int3   
65023439:	int3   
6502343a:	int3   
6502343b:	int3   
6502343c:	int3   
6502343d:	int3   
6502343e:	int3   
6502343f:	int3   
65023440:	mov    eax,DWORD PTR [ebp-0x3c]
65023443:	and    eax,0x1
65023446:	je     0x65023458
6502344c:	and    DWORD PTR [ebp-0x3c],0xfffffffe
65023450:	mov    ecx,DWORD PTR [ebp+0x4]
65023453:	jmp    0x65001990
65023458:	ret    
65023459:	lea    ecx,[ebp-0x50]
6502345c:	jmp    0x65001990
65023461:	lea    ecx,[ebp-0x38]
65023464:	jmp    0x65001990
65023469:	mov    edx,DWORD PTR [esp+0x8]
6502346d:	lea    eax,[edx-0x54]
65023470:	mov    ecx,DWORD PTR [edx-0x58]
65023473:	xor    ecx,eax
65023475:	call   0x6501292c
6502347a:	mov    eax,0x6502b3cc
6502347f:	jmp    0x650125ee
65023484:	int3   
65023485:	int3   
65023486:	int3   
65023487:	int3   
65023488:	int3   
65023489:	int3   
6502348a:	int3   
6502348b:	int3   
6502348c:	int3   
6502348d:	int3   
6502348e:	int3   
6502348f:	int3   
65023490:	lea    ecx,[ebp+0xc]
65023493:	jmp    0x65001990
65023498:	lea    ecx,[ebp-0x28]
6502349b:	jmp    0x650016b0
650234a0:	lea    ecx,[ebp-0x6c]
650234a3:	jmp    0x650016b0
650234a8:	lea    ecx,[ebp-0x88]
650234ae:	jmp    0x650016b0
650234b3:	lea    ecx,[ebp-0xc0]
650234b9:	jmp    0x650016b0
650234be:	lea    ecx,[ebp-0xa4]
650234c4:	jmp    0x650016b0
650234c9:	mov    edx,DWORD PTR [esp+0x8]
650234cd:	lea    eax,[edx+0xc]
650234d0:	mov    ecx,DWORD PTR [edx-0xc4]
650234d6:	xor    ecx,eax
650234d8:	call   0x6501292c
650234dd:	mov    ecx,DWORD PTR [edx+0x80]
650234e3:	xor    ecx,eax
650234e5:	call   0x6501292c
650234ea:	mov    eax,0x6502b420
650234ef:	jmp    0x650125ee
650234f4:	int3   
650234f5:	int3   
650234f6:	int3   
650234f7:	int3   
650234f8:	int3   
650234f9:	int3   
650234fa:	int3   
650234fb:	int3   
650234fc:	int3   
650234fd:	int3   
650234fe:	int3   
650234ff:	int3   
65023500:	mov    ecx,0x6502d4ec
65023505:	call   0x65011d7d
6502350a:	push   0x65023681
6502350f:	call   0x65012a5f
65023514:	pop    ecx
65023515:	ret    
65023516:	mov    ecx,0x6502d528
6502351b:	call   0x65011d57
65023520:	push   0x6502368b
65023525:	call   0x65012a5f
6502352a:	pop    ecx
6502352b:	ret    
6502352c:	call   DWORD PTR ds:0x650240fc
65023532:	push   0x65023695
65023537:	mov    DWORD PTR ds:0x6502d554,0x65024bd8
65023541:	mov    ds:0x6502d558,eax
65023546:	mov    BYTE PTR ds:0x6502d55c,0x0
6502354d:	call   0x65012a5f
65023552:	pop    ecx
65023553:	ret    
65023554:	push   0x6502d554
65023559:	mov    ecx,0x6502d560
6502355e:	call   0x65011ef0
65023563:	push   0x6502369f
65023568:	call   0x65012a5f
6502356d:	pop    ecx
6502356e:	ret    
6502356f:	int3   
65023570:	push   0x650236c0
65023575:	call   0x65012a5f
6502357a:	pop    ecx
6502357b:	ret    
6502357c:	int3   
6502357d:	int3   
6502357e:	int3   
6502357f:	int3   
65023580:	push   ecx
65023581:	mov    eax,0x650303e0
65023586:	call   0x65007af0
6502358b:	pop    ecx
6502358c:	ret    
6502358d:	int3   
6502358e:	int3   
6502358f:	int3   
65023590:	mov    eax,0x65030400
65023595:	jmp    0x65007af0
6502359a:	int3   
6502359b:	int3   
6502359c:	int3   
6502359d:	int3   
6502359e:	int3   
6502359f:	int3   
650235a0:	mov    eax,0x650303f0
650235a5:	jmp    0x65007af0
650235aa:	int3   
650235ab:	int3   
650235ac:	int3   
650235ad:	int3   
650235ae:	int3   
650235af:	int3   
650235b0:	push   ebp
650235b1:	mov    ebp,esp
650235b3:	and    esp,0xfffffff8
650235b6:	mov    eax,ds:0x65030360
650235bb:	mov    edx,DWORD PTR [eax]
650235bd:	sub    esp,0xc
650235c0:	push   esi
650235c1:	push   eax
650235c2:	mov    ecx,0x6503035c
650235c7:	push   ecx
650235c8:	push   edx
650235c9:	mov    esi,ecx
650235cb:	push   esi
650235cc:	lea    eax,[esp+0x18]
650235d0:	push   eax
650235d1:	call   0x65009310
650235d6:	mov    ecx,DWORD PTR ds:0x65030360
650235dc:	push   ecx
650235dd:	call   0x650120d2
650235e2:	add    esp,0x4
650235e5:	xor    eax,eax
650235e7:	mov    ds:0x65030360,eax
650235ec:	mov    ds:0x65030364,eax
650235f1:	pop    esi
650235f2:	mov    esp,ebp
650235f4:	pop    ebp
650235f5:	ret    
650235f6:	int3   
650235f7:	int3   
650235f8:	int3   
650235f9:	int3   
650235fa:	int3   
650235fb:	int3   
650235fc:	int3   
650235fd:	int3   
650235fe:	int3   
650235ff:	int3   
65023600:	push   ebp
65023601:	mov    ebp,esp
65023603:	and    esp,0xfffffff8
65023606:	mov    eax,ds:0x65030354
6502360b:	mov    edx,DWORD PTR [eax]
6502360d:	sub    esp,0xc
65023610:	push   esi
65023611:	push   eax
65023612:	mov    ecx,0x65030350
65023617:	push   ecx
65023618:	push   edx
65023619:	mov    esi,ecx
6502361b:	push   esi
6502361c:	lea    eax,[esp+0x18]
65023620:	push   eax
65023621:	call   0x650090b0
65023626:	mov    ecx,DWORD PTR ds:0x65030354
6502362c:	push   ecx
6502362d:	call   0x650120d2
65023632:	add    esp,0x4
65023635:	xor    eax,eax
65023637:	mov    ds:0x65030354,eax
6502363c:	mov    ds:0x65030358,eax
65023641:	pop    esi
65023642:	mov    esp,ebp
65023644:	pop    ebp
65023645:	ret    
65023646:	int3   
65023647:	int3   
65023648:	int3   
65023649:	int3   
6502364a:	int3   
6502364b:	int3   
6502364c:	int3   
6502364d:	int3   
6502364e:	int3   
6502364f:	int3   
65023650:	mov    eax,ds:0x6502d4dc
65023655:	test   eax,eax
65023657:	je     0x65023662
65023659:	push   eax
6502365a:	call   0x650120d2
6502365f:	add    esp,0x4
65023662:	mov    DWORD PTR ds:0x6502d4dc,0x0
6502366c:	mov    DWORD PTR ds:0x6502d4e0,0x0
65023676:	mov    DWORD PTR ds:0x6502d4e4,0x0
65023680:	ret    
65023681:	mov    ecx,0x6502d4ec
65023686:	jmp    0x65011ceb
6502368b:	mov    ecx,0x6502d528
65023690:	jmp    0x65011e2c
65023695:	mov    ecx,0x6502d554
6502369a:	jmp    0x65011e44
6502369f:	mov    DWORD PTR ds:0x6502d560,0x65024bec
650236a9:	ret    
650236aa:	mov    DWORD PTR ds:0x6502d580,0x65024c08
650236b4:	mov    ecx,0x6502d580
650236b9:	jmp    0x650121a6
650236be:	int3   
650236bf:	int3   
650236c0:	push   0x6502d030
650236c5:	call   DWORD PTR ds:0x6502418c
650236cb:	ret    
