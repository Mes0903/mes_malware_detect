
a2ee6ced440c6878afd68901f0582d9278ca21618fcdecb0ef04457863d1af95.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	nop
  41107b:	mul    ah
  41107d:	jbe    0x411067
  41107f:	mov    ecx,0x697b573d
  411084:	scas   al,BYTE PTR es:[edi]
  411085:	loop   0x411075
  411087:	or     BYTE PTR [edi+ecx*1+0x1bbf07e2],dl
  41108e:	jne    0x411048
  411090:	pusha  
  411091:	leave  
  411092:	into   
  411093:	sub    eax,0xe6d5da3a
  411098:	push   esi
  411099:	call   0xe46e9791
  41109e:	(bad)  
  4110a0:	sti    
  4110a1:	jbe    0x411102
  4110a3:	cdq    
  4110a4:	ins    BYTE PTR es:[edi],dx
  4110a5:	test   BYTE PTR [edx],bh
  4110a7:	inc    ebp
  4110a8:	mov    WORD PTR [eax-0xb],cs
  4110ab:	push   edx
  4110ac:	jl     0x41110b
  4110ae:	xor    eax,0xae5c4d69
  4110b3:	add    al,0x81
  4110b5:	sbb    dh,ah
  4110b7:	std    
  4110b8:	mov    eax,0x9a39cd05
  4110bd:	test   DWORD PTR [esi+0x6],0xdd830114
  4110c4:	mov    eax,ds:0x4d93444
  4110c9:	in     al,0x98
  4110cb:	jmp    0x411093
  4110cd:	or     al,0x28
  4110cf:	nop
  4110d0:	call   0x13b7:0x8f39f0f2
  4110d7:	mov    ch,0x16
  4110d9:	inc    edx
  4110da:	pop    edi
  4110db:	mov    dl,0x78
  4110dd:	popa   
  4110de:	outs   dx,DWORD PTR ds:[esi]
  4110df:	not    BYTE PTR ss:[edx]
  4110e2:	icebp  
  4110e3:	sub    eax,DWORD PTR [eax]
  4110e5:	xchg   esp,eax
  4110e6:	mov    cl,0xc7
  4110e8:	dec    edi
  4110e9:	neg    BYTE PTR [ecx]
  4110eb:	or     esp,DWORD PTR [edi]
  4110ed:	xor    cl,BYTE PTR [ecx]
  4110ef:	push   edx
  4110f0:	jb     0x4110a9
  4110f2:	das    
  4110f3:	xor    DWORD PTR [ebx-0x32cdf34d],ebx
  4110f9:	aad    0x3f
  4110fb:	dec    ebp
  4110fc:	aas    
  4110fd:	or     ah,BYTE PTR [ebx+0x23]
  411100:	mov    al,BYTE PTR [ebp-0x59]
  411103:	je     0x4110b8
  411105:	call   0xa7fb:0x5760dbc
  41110c:	pop    es
  41110d:	je     0x41116c
  41110f:	stc    
  411110:	mov    al,0x13
  411112:	jne    0x41113e
  411114:	rol    BYTE PTR [ecx-0x25],cl
  411117:	add    esi,DWORD PTR [eax-0x6b5946c3]
  41111d:	xor    DWORD PTR [eax],edi
  41111f:	jecxz  0x4110da
  411121:	sahf   
  411122:	aas    
  411123:	mov    ds:0x7877bf39,al
  411128:	xor    BYTE PTR ds:0xae4c187d,ch
  41112e:	xchg   edi,eax
  41112f:	sbb    BYTE PTR [ebp+edx*4+0x4],al
  411133:	aaa    
  411134:	callw  0x142c
  411138:	inc    ebx
  411139:	jmp    0x4110c7
  41113b:	xor    al,0x1b
  41113d:	mov    ebx,0xd8e83967
  411142:	sub    BYTE PTR [ebx+0x34],ah
  411145:	pop    ebx
  411146:	pop    edx
  411147:	pop    edx
  411148:	push   ds
  411149:	out    0x99,al
  41114b:	jp     0x411185
  41114d:	in     eax,0x7f
  41114f:	addr16 sub al,0x76
  411152:	push   cs
  411153:	jge    0x4110f5
  411155:	inc    edx
  411156:	stos   BYTE PTR es:[edi],al
  411157:	hlt    
  411158:	jle    0x4111d6
  41115a:	mov    bl,0x49
  41115c:	aad    0x66
  41115e:	add    al,BYTE PTR [ecx+0x2a555413]
  411164:	push   0xd97d3d7
  411169:	adc    ch,dh
  41116b:	adc    dh,BYTE PTR [ecx]
  41116d:	push   eax
  41116e:	jmp    0x411195
  411170:	ss aaa 
  411172:	imul   edx,DWORD PTR [edx+0x2],0xffffff99
  411176:	jl     0x4111a9
  411178:	mov    ds:0xa462a090,al
  41117d:	std    
  41117e:	mov    edi,0xf234d58a
  411183:	and    eax,esp
  411185:	stos   BYTE PTR es:[edi],al
  411186:	ja     0x41115e
  411188:	and    al,0xfc
  41118a:	sub    BYTE PTR [edx+0x46],al
  41118d:	loop   0x411183
  41118f:	mov    dl,0xcb
  411191:	sbb    al,0x3d
  411193:	add    bh,bh
  411195:	push   edi
  411197:	pop    ecx
  411198:	xor    bl,ah
  41119a:	xor    DWORD PTR [edi+0x5d2100d6],ecx
  4111a0:	jle    0x4111fe
  4111a2:	ss xor eax,0xf40c0c41
  4111a8:	add    eax,0x381a59d0
  4111ad:	xlat   BYTE PTR ds:[ebx]
  4111ae:	shl    cl,1
  4111b0:	pusha  
  4111b1:	ins    DWORD PTR es:[edi],dx
  4111b2:	scas   eax,DWORD PTR es:[edi]
  4111b3:	arpl   cx,bp
  4111b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111b6:	ret    0x4de2
  4111b9:	test   DWORD PTR [ecx+0x7f],0xe9380c8a
  4111c0:	jo     0x4111b9
  4111c2:	aad    0x41
  4111c4:	cs cdq 
  4111c6:	pop    eax
  4111c7:	push   esp
  4111c8:	scas   al,BYTE PTR es:[edi]
  4111c9:	mov    ebp,ebx
  4111cb:	es inc ebp
  4111cd:	ins    BYTE PTR es:[edi],dx
  4111ce:	enter  0xf514,0xdf
  4111d2:	xchg   esp,eax
  4111d3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4111d5:	jmp    0x88bd:0x32b42804
  4111dc:	push   esi
  4111dd:	push   ebx
  4111de:	int3   
  4111df:	cmp    dh,dl
  4111e1:	fwait
  4111e2:	cwde   
  4111e3:	pop    edi
  4111e4:	cli    
  4111e5:	dec    ebp
  4111e6:	loope  0x411262
  4111e8:	shl    DWORD PTR [esi],0x3b
  4111eb:	mov    al,ds:0xd47e165a
  4111f0:	and    DWORD PTR [ebp+0x16],ebp
  4111f3:	pop    esp
  4111f4:	loopne 0x41124e
  4111f6:	je     0x411243
  4111f8:	xlat   BYTE PTR ds:[ebx]
  4111f9:	push   edx
  4111fa:	clc    
  4111fb:	cmp    BYTE PTR [ecx+0x9],bh
  4111fe:	push   ebp
  4111ff:	inc    eax
  411200:	addr16 pushfw 
  411203:	dec    edi
  411204:	les    eax,FWORD PTR [esp+ecx*2-0x3650a84a]
  41120b:	mov    ebp,0xba55bf39
  411210:	mov    ebx,0x11184be3
  411215:	ds push 0x2
  411218:	outs   dx,DWORD PTR ds:[esi]
  411219:	ins    BYTE PTR es:[edi],dx
  41121a:	sbb    DWORD PTR [ebp-0xe],eax
  41121d:	outs   dx,BYTE PTR ds:[esi]
  41121e:	mov    eax,ds:0xaac611fa
  411223:	pop    es
  411224:	imul   eax,DWORD PTR [ebx],0x13
  411227:	fiadd  WORD PTR [edx-0x6b]
  41122a:	mov    BYTE PTR ds:0x77f3c6ff,0x8e
  411231:	outs   dx,DWORD PTR ds:[esi]
  411232:	pop    ebp
  411233:	aaa    
  411234:	mov    cl,BYTE PTR [ecx]
  411236:	dec    eax
  411237:	inc    ebp
  411238:	lods   eax,DWORD PTR cs:[esi]
  41123a:	ret    
  41123b:	xor    bh,dl
  41123d:	mov    dl,0x48
  41123f:	shl    bl,0x67
  411242:	cli    
  411243:	enter  0x7e90,0xd1
  411247:	adc    ebx,eax
  411249:	mov    ebx,0xc768516b
  41124e:	ret    
  41124f:	stos   BYTE PTR es:[edi],al
  411250:	jb     0x411247
  411252:	jmp    0xa272:0xecce6179
  411259:	xor    al,0x6a
  41125b:	lock dec eax
  41125d:	dec    ecx
  41125e:	cmp    DWORD PTR [esi],0xc6228528
  411264:	cld    
  411265:	dec    ecx
  411266:	cdq    
  411267:	mov    edi,esp
  411269:	sbb    BYTE PTR [ecx+0x58],bl
  41126c:	jne    0x41127f
  41126e:	inc    ebp
  41126f:	ficomp DWORD PTR [ebp-0x3c14d292]
  411275:	add    ah,bh
  411277:	or     ch,dl
  411279:	rcl    al,cl
  41127b:	dec    ebx
  41127c:	scas   eax,DWORD PTR es:[edi]
  41127d:	retf   0xdb56
  411280:	loop   0x41120a
  411282:	dec    edi
  411283:	fcmovb st,st(0)
  411285:	ror    BYTE PTR [ecx-0x28a0fb2c],cl
  41128b:	aaa    
  41128c:	call   0x34c3327a
  411291:	repz shl DWORD PTR [ebx+0x53b2b285],0x83
  411299:	in     al,0xa5
  41129b:	test   eax,0x39f01520
  4112a0:	into   
  4112a1:	jp     0x4112af
  4112a3:	stc    
  4112a4:	jmp    0x411291
  4112a6:	inc    ebp
  4112a7:	ret    0x2e02
  4112aa:	pop    esp
  4112ab:	xchg   DWORD PTR [eax+0x47],ebx
  4112ae:	sub    al,0xdc
  4112b0:	popa   
  4112b1:	jae    0x411258
  4112b3:	push   es
  4112b4:	in     eax,dx
  4112b5:	aam    0x3
  4112b7:	mov    dl,0x73
  4112b9:	shl    BYTE PTR [edi+eiz*8-0x44],cl
  4112bd:	and    dl,BYTE PTR [esi-0x2cfdf5c3]
  4112c3:	dec    ecx
  4112c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c5:	pop    eax
  4112c6:	es shl BYTE PTR fs:[ebx],0x8d
  4112cb:	push   ss
  4112cc:	push   ebp
  4112cd:	cli    
  4112ce:	sbb    DWORD PTR [esi-0x7],ebx
  4112d1:	test   edx,ebp
  4112d3:	jae    0x4112fa
  4112d5:	out    dx,eax
  4112d6:	fisub  WORD PTR [ecx-0x67602f34]
  4112dc:	pop    ds
  4112dd:	cmp    DWORD PTR [ecx-0x6c],0xffffffd0
  4112e1:	lods   al,BYTE PTR ds:[esi]
  4112e2:	call   0x5042:0xc987679c
  4112e9:	icebp  
  4112ea:	pop    ebx
  4112eb:	loope  0x411333
  4112ed:	outs   dx,DWORD PTR ds:[esi]
  4112ee:	pusha  
  4112ef:	lods   eax,DWORD PTR ds:[esi]
  4112f0:	sbb    ch,bl
  4112f2:	int3   
  4112f3:	add    ebp,DWORD PTR [edi-0x45]
  4112f6:	push   ecx
  4112f7:	add    DWORD PTR [ebx],0x374948fa
  4112fd:	and    BYTE PTR [ecx+0x6ad8644],dl
  411303:	mov    bl,0xed
  411305:	push   0xffffffaf
  411307:	xor    cl,bl
  411309:	push   edi
  41130a:	lods   al,BYTE PTR ds:[esi]
  41130b:	xchg   ecx,eax
  41130c:	pop    ecx
  41130d:	pop    esi
  41130e:	sbb    DWORD PTR [esi+0x49],esp
  411311:	pop    ecx
  411312:	mov    dh,0x71
  411314:	pop    ds
  411315:	xor    al,ch
  411317:	mov    ecx,0xe1f1340b
  41131c:	xchg   esi,eax
  41131d:	mov    dh,0xbe
  41131f:	shl    BYTE PTR [eax+0x70],1
  411322:	jle    0x4112e3
  411324:	cld    
  411325:	cwde   
  411326:	jbe    0x411318
  411328:	and    DWORD PTR [ebx+eax*8-0x671f9027],ebp
  41132f:	mov    edx,fs
  411331:	mov    eax,DWORD PTR [ebx+0x41]
  411334:	cmc    
  411335:	ins    BYTE PTR es:[edi],dx
  411336:	xchg   esi,eax
  411337:	cdq    
  411338:	mov    ch,0x73
  41133a:	call   0x6a92:0x45c6a6e1
  411341:	stc    
  411342:	dec    esi
  411343:	xor    DWORD PTR ds:0x78ffdc2a,esi
  411349:	hlt    
  41134a:	adc    eax,0x2db5c987
  41134f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411350:	lea    esi,[ecx-0xf6b33aa]
  411356:	aas    
  411357:	add    ch,al
  411359:	sbb    eax,0xb7873541
  41135e:	dec    DWORD PTR [edi-0x256311ed]
  411364:	sub    al,0x59
  411366:	inc    eax
  411367:	push   edi
  411368:	mov    al,0x6e
  41136a:	pop    es
  41136b:	adc    DWORD PTR [esi+edi*4-0x71],0xb3b613df
  411373:	pop    esi
  411374:	and    BYTE PTR [ebx+0x3f],cl
  411377:	fdiv   QWORD PTR [esi+esi*2+0x51]
  41137b:	fist   WORD PTR [ecx-0x54]
  41137e:	pop    ebp
  41137f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411380:	aam    0x53
  411382:	(bad)  
  411384:	or     bh,bh
  411386:	icebp  
  411387:	cdq    
  411388:	(bad)  
  411389:	stos   BYTE PTR es:[edi],al
  41138a:	std    
  41138b:	daa    
  41138c:	pop    esp
  41138d:	dec    edi
  41138e:	jns    0x411366
  411390:	aas    
  411391:	add    DWORD PTR [edx+0x6a],edi
  411394:	fisttp WORD PTR [eiz*1-0x70be19fb]
  41139b:	add    DWORD PTR [ebx-0x45],esi
  41139e:	nop
  41139f:	test   DWORD PTR [ebp+0x18625ae],esi
  4113a5:	mov    cl,0x26
  4113a7:	mov    BYTE PTR [esi+0x3],bh
  4113aa:	xchg   edx,eax
  4113ab:	(bad)  
  4113ac:	fild   WORD PTR [ecx-0xd]
  4113af:	outs   dx,BYTE PTR ds:[esi]
  4113b0:	leave  
  4113b1:	add    eax,DWORD PTR [edi-0x1]
  4113b4:	cmp    bl,bh
  4113b6:	loop   0x41135c
  4113b8:	cld    
  4113b9:	pop    edx
  4113ba:	dec    ecx
  4113bb:	xor    edi,DWORD PTR [edi]
  4113bd:	icebp  
  4113be:	repnz mov al,ds:0xe0813860
  4113c4:	mov    dl,0x11
  4113c6:	mov    al,ds:0x176c5bdd
  4113cb:	or     al,0xae
  4113cd:	icebp  
  4113ce:	mov    bl,cl
  4113d0:	das    
  4113d1:	ds cld 
  4113d3:	jbe    0x41143f
  4113d5:	fwait
  4113d6:	mov    bh,0x4a
  4113d8:	inc    ebx
  4113d9:	fsubr  st,st(0)
  4113db:	cwde   
  4113dc:	or     DWORD PTR ds:0xe62042b8,0xce1d8706
  4113e6:	cdq    
  4113e7:	xchg   edx,eax
  4113e8:	iret   
  4113e9:	cdq    
  4113ea:	or     BYTE PTR [ecx],bh
  4113ec:	dec    DWORD PTR [ebx-0x24]
  4113ef:	cmp    al,0x7a
  4113f1:	mov    edi,0xd36f0e8c
  4113f6:	cmp    eax,0x1bf3f9
  4113fb:	stc    
  4113fc:	imul   DWORD PTR [ebx-0x2]
  4113ff:	add    eax,ebp
  411401:	push   edx
  411402:	mov    bh,0x19
  411404:	sub    al,0x6e
  411406:	sub    edi,ecx
  411408:	sub    eax,0x1004cfa6
  41140d:	push   ebp
  41140e:	dec    esp
  41140f:	fild   WORD PTR [ebx+0x4a]
  411412:	into   
  411413:	lds    esp,FWORD PTR [edi-0x72]
  411416:	lahf   
  411417:	leave  
  411418:	loopne 0x411444
  41141a:	xchg   ebp,eax
  41141b:	jne    0x411466
  41141d:	cdq    
  41141e:	int    0xc5
  411420:	adc    ebx,DWORD PTR [esi-0x448b8f1d]
  411426:	jo     0x4113d8
  411428:	adc    DWORD PTR [ecx+0x76],esp
  41142b:	cmp    al,0xe2
  41142d:	dec    ebx
  41142e:	adc    BYTE PTR [eax-0x6c],dl
  411431:	and    eax,0x2a2cd03d
  411436:	xchg   esi,eax
  411437:	mov    ebp,0xfd7fcb70
  41143c:	sub    eax,0x5bd0e718
  411441:	mov    DWORD PTR [edi+0x7e],eax
  411444:	rcl    al,1
  411446:	pop    edx
  411447:	into   
  411448:	sub    al,0x7
  41144a:	setl   BYTE PTR es:[edi+0x23bcf9e2]
  411452:	retf   0x99e8
  411455:	gs mov ebx,0xebb11fd5
  41145b:	sbb    al,0xe1
  41145d:	add    DWORD PTR fs:[ebx-0x4aba85ef],esp
  411464:	push   edx
  411465:	adc    bl,0x35
  411468:	jmp    0x6ec6:0x310d5b22
  41146f:	outs   dx,BYTE PTR ds:[esi]
  411470:	call   0xfcf2:0xdcb1ff88
  411477:	dec    eax
  411478:	test   DWORD PTR [edx+0x1f],ebp
  41147b:	adc    al,BYTE PTR [edx-0x8ae16a6]
  411481:	add    al,0x30
  411483:	push   es
  411484:	shl    DWORD PTR [esi],cl
  411486:	adc    dh,BYTE PTR [esi-0x1a2d9826]
  41148c:	and    DWORD PTR [ebx+edx*8+0x884de6e],ecx
  411493:	push   es
  411494:	pop    ecx
  411495:	fwait
  411496:	outs   dx,DWORD PTR ds:[esi]
  411497:	push   ss
  411498:	adc    eax,0x4ce91b30
  41149d:	mov    dl,0xc6
  41149f:	mov    edi,0xdfa25ffb
  4114a4:	or     al,0xe4
  4114a6:	sbb    al,0x90
  4114a8:	cld    
  4114a9:	ror    cl,1
  4114ab:	cmp    esi,DWORD PTR [edx-0x5c]
  4114ae:	add    bl,BYTE PTR [ebp+0x514a9e21]
  4114b4:	repnz mov esi,0x8d4d61cd
  4114ba:	push   es
  4114bb:	outs   dx,BYTE PTR ds:[esi]
  4114bc:	mov    edi,0x9ab6e8f5
  4114c1:	or     al,0x2f
  4114c3:	mov    bh,0x8
  4114c5:	jmp    0x3cf40337
  4114ca:	pop    esp
  4114cb:	out    0x24,al
  4114cd:	mov    ebp,0x2f382ea1
  4114d2:	mov    ecx,0x33dc3507
  4114d7:	jg     0x4114c4
  4114d9:	fisubr DWORD PTR [ebx-0x5fc38e14]
  4114df:	sbb    BYTE PTR [edx+0x27],bl
  4114e2:	fnsave [edi+0x21d351fa]
  4114e8:	fisubr WORD PTR [edx]
  4114ea:	inc    edx
  4114eb:	fdivrp st(4),st
  4114ed:	cmp    eax,0x8102350f
  4114f2:	add    eax,0x59d33197
  4114f7:	loop   0x411523
  4114f9:	mov    edi,0xc18d962
  4114fe:	ins    BYTE PTR es:[edi],dx
  4114ff:	popfw  
  411501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411502:	and    eax,0xe7eb7df0
  411507:	seto   BYTE PTR ds:0xfb2d81f7
  41150e:	xchg   ecx,eax
  41150f:	dec    eax
  411510:	push   0x7cd240ee
  411515:	scas   al,BYTE PTR es:[edi]
  411516:	add    DWORD PTR [edx-0xc54ca7b],edx
  41151c:	je     0x4114e7
  41151e:	add    al,0x82
  411520:	enter  0x8213,0xbc
  411524:	scas   eax,DWORD PTR es:[edi]
  411525:	push   esp
  411526:	mov    eax,0xcaceb680
  41152b:	dec    ecx
  41152c:	popf   
  41152d:	sbb    eax,0xe2e72e9b
  411532:	popf   
  411533:	fisubr WORD PTR [edx]
  411535:	or     ebp,edi
  411537:	or     ah,BYTE PTR [edx+0x5]
  41153a:	int    0x4e
  41153c:	dec    edi
  41153d:	fwait
  41153e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41153f:	int3   
  411540:	mov    ebx,0xb1289f2c
  411545:	or     al,0x25
  411547:	and    BYTE PTR [esi+0x7a],ch
  41154a:	jmp    0x41157b
  41154c:	sub    esp,DWORD PTR [ebp+0x4e59c6c8]
  411552:	sti    
  411553:	mov    esi,0xc8d7a037
  411558:	dec    ebx
  411559:	fwait
  41155a:	jecxz  0x411577
  41155c:	cli    
  41155d:	test   eax,0xdebd08fa
  411562:	(bad)  
  411563:	pop    esi
  411564:	mov    dh,cl
  411566:	std    
  411567:	addr16 out 0x5,eax
  41156a:	ja     0x4115c9
  41156c:	adc    BYTE PTR [edi+0x1dd6876],al
  411572:	mov    esp,0x10f2a2ac
  411577:	adc    DWORD PTR [eax+0x34],0x19
  41157b:	popf   
  41157c:	loopne 0x411587
  41157e:	jnp    0x41158f
  411580:	out    0xfb,al
  411582:	inc    eax
  411583:	lahf   
  411584:	add    ebx,DWORD PTR [ecx+0x59]
  411587:	cmp    ch,BYTE PTR [edx]
  411589:	mov    edx,eax
  41158b:	mov    esp,edx
  41158d:	sbb    al,0xc9
  41158f:	mov    WORD PTR [esi+edi*2+0x5f],ds
  411593:	or     ah,BYTE PTR [ebp+0x65b19665]
  411599:	mov    eax,ds:0x192fe65f
  41159e:	jns    0x4115af
  4115a0:	lods   al,BYTE PTR ds:[esi]
  4115a1:	inc    esi
  4115a2:	mov    eax,ds:0xe2b547a6
  4115a7:	mov    bh,0x7e
  4115a9:	mov    DWORD PTR [esp+esi*8-0x15],eax
  4115ad:	mov    BYTE PTR [edx],ch
  4115af:	test   al,0xfe
  4115b1:	sub    BYTE PTR [ecx+0x29],al
  4115b4:	jp     0x4115de
  4115b6:	jmp    0x3a8a12c7
  4115bb:	lea    edx,[ebx+edx*4]
  4115be:	test   DWORD PTR [edx-0x570cb37f],esi
  4115c4:	sti    
  4115c5:	xor    eax,0x8122ca83
  4115ca:	retf   
  4115cb:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4115cd:	or     dh,BYTE PTR [edx]
  4115cf:	add    al,0xe2
  4115d1:	cmp    BYTE PTR [edi-0x2],al
  4115d4:	sub    al,0x57
  4115d6:	inc    esp
  4115d7:	div    BYTE PTR [ebp+0x1]
  4115da:	mov    ds:0x8091c532,eax
  4115df:	xchg   ebx,eax
  4115e0:	fwait
  4115e1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e3:	and    eax,0x878ddb3a
  4115e8:	out    dx,eax
  4115e9:	ret    0x4287
  4115ec:	inc    esp
  4115ed:	inc    edi
  4115ee:	(bad)  
  4115ef:	imul   ebp,DWORD PTR [eax],0xb
  4115f2:	sar    DWORD PTR [edi-0x6b],0x84
  4115f6:	jns    0x411600
  4115f8:	nop
  4115f9:	neg    ebp
  4115fb:	mov    edi,DWORD PTR [edi+0x5a]
  4115fe:	imul   esp,DWORD PTR [esp+ebx*2-0x5d],0x87311db8
  411606:	mov    BYTE PTR ds:0x8ba9da04,ch
  41160c:	daa    
  41160d:	dec    ebp
  41160e:	ds jno 0x411633
  411611:	das    
  411612:	push   ecx
  411613:	popf   
  411614:	cmc    
  411615:	mov    cl,BYTE PTR [eax-0x6c]
  411618:	jmp    0x7360c82
  41161d:	adc    ah,BYTE PTR [edx-0x42ab7c67]
  411623:	xchg   ebx,eax
  411624:	imul   edx,DWORD PTR [edx-0x20],0xffffffb5
  411628:	das    
  411629:	push   eax
  41162a:	icebp  
  41162b:	stos   BYTE PTR es:[edi],al
  41162c:	cmc    
  41162d:	aas    
  41162e:	ds push eax
  411630:	stos   BYTE PTR es:[edi],al
  411631:	push   edx
  411632:	jns    0x4116b1
  411634:	aad    0x84
  411636:	jge    0x411697
  411638:	adc    edi,DWORD PTR [eax]
  41163a:	and    BYTE PTR [edi-0x670ef14],ch
  411640:	ds inc ecx
  411642:	jo     0x4115fa
  411644:	jecxz  0x41169d
  411646:	daa    
  411647:	add    ebp,DWORD PTR [ebx-0x6d]
  41164a:	mov    cl,bh
  41164c:	dec    esi
  41164d:	push   DWORD PTR [ebx-0x26d00d5]
  411653:	mov    ecx,0xbaebac4a
  411658:	test   BYTE PTR [edi+0x5c],dl
  41165b:	pushf  
  41165c:	jmp    0x7f6ece19
  411661:	cdq    
  411662:	xor    cl,BYTE PTR [edi-0x5cab29b9]
  411668:	test   BYTE PTR [ebx],0x8b
  41166b:	iret   
  41166c:	ss push ebp
  41166e:	pop    edx
  41166f:	test   BYTE PTR [ebx-0x7e],bh
  411672:	fxch   st(5)
  411674:	pop    ebx
  411675:	mov    ebx,0x4538d0c5
  41167a:	xor    esp,esi
  41167c:	jmp    0x4dfe06fb
  411681:	inc    esi
  411682:	mov    ebp,0x2f82c3aa
  411687:	js     0x411646
  411689:	in     eax,0xe2
  41168b:	add    edx,DWORD PTR [eax+edx*8+0x7f46bad9]
  411692:	data16 setbe BYTE PTR [esi]
  411696:	shr    dh,0xac
  411699:	inc    edi
  41169a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41169b:	rcl    bl,cl
  41169d:	lock dec edx
  41169f:	inc    esi
  4116a0:	out    dx,eax
  4116a1:	dec    edx
  4116a2:	dec    edx
  4116a3:	test   BYTE PTR [edi+0x16fba61d],ah
  4116a9:	push   eax
  4116aa:	xor    eax,DWORD PTR ds:0x5b2c8f24
  4116b0:	xor    al,0x92
  4116b2:	data16 int3 
  4116b4:	sub    DWORD PTR [ecx+eax*8-0x1a],esp
  4116b8:	adc    esp,DWORD PTR [ebx+ebp*4-0x74154292]
  4116bf:	fbstp  TBYTE PTR [edi]
  4116c1:	pop    edx
  4116c2:	and    esp,DWORD PTR [esi-0x428343ec]
  4116c8:	leave  
  4116c9:	jg     0x41167f
  4116cb:	push   esp
  4116cc:	cwde   
  4116cd:	into   
  4116ce:	pop    ebp
  4116cf:	cld    
  4116d0:	lods   eax,DWORD PTR ds:[esi]
  4116d1:	call   0x3d377f99
  4116d6:	lods   al,BYTE PTR ds:[esi]
  4116d7:	inc    edi
  4116d8:	or     al,0x20
  4116da:	cld    
  4116db:	call   0xa933256d
  4116e0:	push   esi
  4116e1:	mov    DWORD PTR [ebx-0x4e],eax
  4116e4:	dec    ebx
  4116e5:	sub    al,0x4f
  4116e7:	icebp  
  4116e8:	aad    0x7f
  4116ea:	ins    BYTE PTR es:[edi],dx
  4116eb:	sbb    al,0x76
  4116ed:	aas    
  4116ee:	ror    DWORD PTR [eax-0x52247953],cl
  4116f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f5:	xor    ch,BYTE PTR [edi*4-0x75c33289]
  4116fc:	lahf   
  4116fd:	jle    0x41176f
  4116ff:	scas   eax,DWORD PTR es:[edi]
  411700:	ss gs addr16 add al,0x6
  411705:	stos   DWORD PTR es:[edi],eax
  411706:	or     BYTE PTR [esi],ch
  411708:	dec    ebx
  411709:	dec    eax
  41170a:	ret    
  41170b:	push   ss
  41170c:	mov    esp,0x8022ebe4
  411711:	xor    eax,0xba0a224a
  411716:	inc    esi
  411717:	cmp    ah,bl
  411719:	push   edx
  41171a:	jmp    0x4116a5
  41171c:	sti    
  41171d:	jge    0x4116c7
  41171f:	jb     0x4116bf
  411721:	rcl    BYTE PTR [edx+edx*8+0x6a],0xae
  411726:	mov    ebx,0x1cf1e9d1
  41172b:	(bad)  
  41172c:	push   ebx
  41172d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41172e:	mov    DWORD PTR [eax+0x2566d8f3],edx
  411734:	ins    DWORD PTR es:[edi],dx
  411735:	fadd   QWORD PTR [esi]
  411737:	arpl   WORD PTR [esi+0x3c],bp
  41173a:	or     eax,DWORD PTR [esi]
  41173c:	out    dx,al
  41173d:	and    al,0x47
  41173f:	pushf  
  411740:	sbb    dl,BYTE PTR [esi+ebx*1+0x33]
  411744:	lahf   
  411745:	jg     0x411755
  411747:	daa    
  411748:	adc    al,0x56
  41174a:	push   0x2873f5af
  41174f:	lods   al,BYTE PTR ds:[esi]
  411750:	mov    al,ds:0xcfc3ea0b
  411755:	jb     0x4117c9
  411757:	add    eax,0xd7da105e
  41175c:	push   ebp
  41175d:	iret   
  41175e:	in     al,dx
  41175f:	add    eax,0x2046927a
  411764:	jge    0x4117cf
  411766:	pop    ss
  411767:	test   al,0xbc
  411769:	popa   
  41176a:	mov    al,ds:0x1dfa40f2
  41176f:	test   eax,0xe5801b48
  411774:	add    eax,DWORD PTR [ebp+0x37]
  411777:	xchg   esp,eax
  411778:	mov    BYTE PTR [edi],cl
  41177a:	mov    esp,0x6ff62e82
  41177f:	mov    edi,0x28daf4ae
  411784:	xor    BYTE PTR [edi+ebx*8-0x3704d848],cl
  41178b:	xchg   edx,eax
  41178c:	xchg   edx,eax
  41178d:	in     eax,0xe8
  41178f:	pusha  
  411790:	xor    bh,BYTE PTR [ecx+0x5a]
  411793:	mov    bh,0x8f
  411795:	out    0x64,eax
  411797:	mov    esp,DWORD PTR [eax]
  411799:	jne    0x41177a
  41179b:	push   edx
  41179c:	(bad)  
  41179e:	out    0xb0,al
  4117a0:	mov    ebp,0xde715cfc
  4117a5:	into   
  4117a6:	out    dx,eax
  4117a7:	fiadd  WORD PTR [ebp+esi*1+0x4b]
  4117ab:	retf   
  4117ac:	lods   al,BYTE PTR ds:[esi]
  4117ad:	and    cl,BYTE PTR [edi]
  4117af:	pop    ss
  4117b0:	data16 mov al,0x32
  4117b3:	lea    esp,[edi+ebx*2+0x18]
  4117b7:	jns    0x4117f6
  4117b9:	in     al,dx
  4117ba:	ins    DWORD PTR es:[edi],dx
  4117bb:	shl    DWORD PTR [eax+edx*1-0x24],cl
  4117bf:	cli    
  4117c0:	(bad)  
  4117c1:	int3   
  4117c2:	in     al,0xff
  4117c4:	mov    bh,0x89
  4117c6:	xchg   BYTE PTR ds:0x6c954f59,ah
  4117cc:	mov    bl,BYTE PTR [ecx]
  4117ce:	dec    eax
  4117cf:	leave  
  4117d0:	ror    BYTE PTR [eax-0x1af601be],1
  4117d6:	fwait
  4117d7:	adc    al,0x5e
  4117d9:	or     edx,DWORD PTR [esi+0x24]
  4117dc:	dec    ebx
  4117dd:	pop    ds
  4117de:	xchg   ebp,eax
  4117df:	test   BYTE PTR [ebp+eiz*8+0x1d],ah
  4117e3:	inc    eax
  4117e4:	pop    ebx
  4117e5:	out    0x7a,al
  4117e7:	add    al,0xdc
  4117e9:	outs   dx,BYTE PTR ds:[esi]
  4117ea:	and    ebx,DWORD PTR [edi]
  4117ec:	dec    ebx
  4117ed:	(bad)  
  4117ee:	jmp    0x41180c
  4117f0:	push   ss
  4117f1:	jmp    0x598d:0xdd60eccc
  4117f8:	into   
  4117f9:	gs mov al,0xbb
  4117fc:	rol    BYTE PTR [edx-0x7a],0x49
  411800:	aas    
  411801:	jp     0x41185e
  411803:	fistp  DWORD PTR [ebx-0x6e]
  411806:	xor    BYTE PTR [esi-0x2],dl
  411809:	call   FWORD PTR [ebp-0x7c]
  41180c:	sti    
  41180d:	jmp    0x237d:0xc39cf125
  411814:	mov    ?,WORD PTR [ebp-0x4274e8bd]
  41181a:	inc    esp
  41181b:	cli    
  41181c:	out    0x69,al
  41181e:	sub    BYTE PTR [ebx+0x734631cc],cl
  411824:	cmp    eax,0x444bcaed
  411829:	test   DWORD PTR [ecx],0x210fd143
  41182f:	inc    esp
  411830:	ret    0xf736
  411833:	add    al,0x1a
  411835:	sbb    edx,DWORD PTR [esi]
  411837:	lods   al,BYTE PTR ds:[esi]
  411838:	sbb    ebp,DWORD PTR [ebp-0x2b91ce9e]
  41183e:	icebp  
  41183f:	xchg   BYTE PTR [esi-0x3477c9e],al
  411845:	aam    0x75
  411847:	arpl   WORD PTR [eax-0x330a659c],bx
  41184d:	pusha  
  41184e:	xchg   edx,eax
  41184f:	rol    ebx,cl
  411851:	add    ch,BYTE PTR [ecx]
  411853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411854:	test   BYTE PTR [ecx+0x5a],0x5a
  411858:	jl     0x411832
  41185a:	pop    ebx
  41185b:	nop
  41185c:	shr    BYTE PTR [edx+0x3d9ccfb0],cl
  411862:	repnz and DWORD PTR [esp+edx*1-0x6b],ebp
  411867:	dec    edx
  411868:	adc    bl,BYTE PTR [ecx+0x32862bd9]
  41186e:	clc    
  41186f:	gs push esp
  411871:	sub    ebp,DWORD PTR [ebp-0x7f]
  411874:	dec    ebp
  411875:	sbb    ch,dh
  411877:	test   BYTE PTR [edi+ebp*8-0x1],cl
  41187b:	sar    DWORD PTR [edi+0x7c],0x19
  41187f:	mov    ds,WORD PTR [eax-0x60ed9f54]
  411885:	(bad)  
  411886:	outs   dx,DWORD PTR ds:[esi]
  411887:	pop    esi
  411888:	sar    BYTE PTR [ecx+0x1e],cl
  41188b:	add    DWORD PTR [eax+0x69],esp
  41188e:	ins    BYTE PTR es:[edi],dx
  41188f:	dec    edi
  411890:	sbb    dh,bh
  411892:	adc    bh,cl
  411894:	jns    0x411849
  411896:	cmp    al,0xfa
  411898:	mov    ah,0x6
  41189a:	fprem  
  41189c:	pushf  
  41189d:	mov    al,cl
  41189f:	ins    DWORD PTR es:[edi],dx
  4118a0:	jnp    0x411888
  4118a2:	fwait
  4118a3:	or     BYTE PTR [edi-0x4e7ca9c9],dh
  4118a9:	popf   
  4118aa:	iret   
  4118ab:	mov    ds:0xf6db0084,al
  4118b1:	rcl    DWORD PTR [ecx+0x14],0xa4
  4118b5:	imul   eax,DWORD PTR [edi],0x5f253a52
  4118bb:	pop    es
  4118bc:	fmul   DWORD PTR [eax-0x6c96a29d]
  4118c2:	mov    cl,0xb5
  4118c4:	and    DWORD PTR [edx+0x8],edi
  4118c7:	ror    BYTE PTR [ebx+0x4215a601],0x28
  4118ce:	ds ret 
  4118d0:	dec    ebp
  4118d1:	adc    ah,BYTE PTR [eax-0x9]
  4118d4:	inc    esi
  4118d5:	mov    ch,0x42
  4118d7:	and    DWORD PTR [eax+0x4b],ebp
  4118da:	jno    0x4118ca
  4118dc:	fdiv   st,st(0)
  4118de:	mov    BYTE PTR [ecx],0x1a
  4118e1:	push   0x7f2210fd
  4118e6:	mov    ecx,0x93bf660a
  4118eb:	dec    ebx
  4118ec:	cmp    bh,BYTE PTR [ebx]
  4118ee:	adc    al,0xaf
  4118f0:	ret    0x92bd
  4118f3:	and    DWORD PTR [edi-0x26f8be66],0x50537381
  4118fd:	pop    ss
  4118fe:	xchg   edx,eax
  4118ff:	sbb    DWORD PTR [edi+0x7f],ecx
  411902:	into   
  411903:	jmp    0x41191d
  411905:	call   0x5815:0xc3a6a3cf
  41190c:	sub    ecx,esp
  41190e:	and    al,0x79
  411910:	pop    eax
  411911:	jg     0x411986
  411913:	adc    DWORD PTR [eax-0x4b61b465],ebp
  411919:	bound  edi,QWORD PTR [esi+0x373ff882]
  41191f:	xchg   DWORD PTR [edx+0x4],ecx
  411922:	neg    ebx
  411924:	inc    esi
  411925:	mov    ah,0xa5
  411927:	sbb    BYTE PTR [edx+0x2],dl
  41192a:	xor    BYTE PTR [ecx],ah
  41192c:	call   0xf292277
  411931:	add    bl,BYTE PTR [ecx+esi*2+0x44]
  411935:	fstp   TBYTE PTR [eax+0x91b3e20]
  41193b:	sbb    al,0x29
  41193d:	in     al,dx
  41193e:	add    DWORD PTR [edx+0x181d1d71],edi
  411944:	xchg   ebx,eax
  411945:	(bad)  
  411946:	in     eax,0xb9
  411948:	dec    edi
  411949:	lds    ecx,FWORD PTR [esi]
  41194b:	loop   0x41194a
  41194d:	jbe    0x411957
  41194f:	sbb    dl,BYTE PTR [edi+0x42]
  411952:	idiv   BYTE PTR [ebx]
  411954:	inc    edx
  411955:	and    al,0x76
  411957:	ret    0x28b7
  41195a:	push   ebp
  41195b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41195c:	mov    bh,0x6a
  41195e:	sbb    eax,0x9c6ca8ea
  411963:	add    BYTE PTR [eax+0x2],al
  411966:	and    al,0x6d
  411968:	ret    0xbd9e
  41196b:	shr    BYTE PTR [edi-0x26be5dfd],0x66
  411972:	push   0xffffffb8
  411974:	fdivr  QWORD PTR [esi-0x482bbc54]
  41197a:	aaa    
  41197b:	imul   ebx,DWORD PTR ds:0xfa1dc3bd,0xffffffbd
  411982:	pop    edi
  411983:	je     0x411940
  411985:	cmp    BYTE PTR [ebx+0x6b],dl
  411988:	mov    eax,ds:0x1925b38d
  41198d:	sub    eax,0xc1de636a
  411992:	push   esp
  411993:	push   ebx
  411994:	jmp    0xec198709
  411999:	inc    edi
  41199a:	mov    dl,0x87
  41199c:	jmp    0xc052:0x2518b688
  4119a3:	imul   esp,DWORD PTR [ecx-0x5],0x40d15a92
  4119aa:	mov    ah,0xda
  4119ac:	and    esp,edi
  4119ae:	push   esp
  4119af:	cmp    dl,BYTE PTR [eax-0x1bfba870]
  4119b5:	(bad)  
  4119b6:	fsubr  DWORD PTR [ebp+edi*2-0x6]
  4119ba:	fstp   TBYTE PTR ds:0x99be8ddc
  4119c0:	dec    ebp
  4119c1:	nop
  4119c2:	lock jmp 0xa845:0xc21cfdcf
  4119ca:	sbb    ah,BYTE PTR [esi]
  4119cc:	hlt    
  4119cd:	(bad)  
  4119ce:	mov    DWORD PTR [edi-0x1e11574],esp
  4119d4:	(bad)  
  4119d5:	dec    DWORD PTR [eax+0x22f8b6e0]
  4119db:	stos   DWORD PTR es:[edi],eax
  4119dc:	out    dx,eax
  4119dd:	pop    edi
  4119de:	jecxz  0x411a4d
  4119e0:	push   edx
  4119e1:	ficomp DWORD PTR [edi+0x4e69f641]
  4119e7:	(bad)  
  4119e8:	cmp    esi,DWORD PTR fs:[ebx-0x1fee2618]
  4119ef:	mov    DWORD PTR ds:[edi-0x67],ebx
  4119f3:	enter  0x87dd,0x30
  4119f7:	sbb    ch,BYTE PTR [edi+0x1f]
  4119fa:	imul   BYTE PTR [esi-0x30]
  4119fd:	jle    0x41198b
  4119ff:	loop   0x411a39
  411a01:	jb     0x4119f2
  411a03:	jne    0x4119d0
  411a05:	mov    al,0x83
  411a07:	cwde   
  411a08:	and    cl,BYTE PTR [edx+0x6acad2d2]
  411a0e:	xor    dl,BYTE PTR [edx-0x7d]
  411a11:	into   
  411a12:	cld    
  411a13:	mov    ch,0xa9
  411a15:	mov    al,ds:0xe5199492
  411a1a:	out    dx,al
  411a1b:	pop    ebx
  411a1c:	mov    ebx,0xe8d30a6f
  411a21:	ja     0x4119e0
  411a23:	lods   al,BYTE PTR ds:[esi]
  411a24:	xchg   ebp,eax
  411a25:	push   DWORD PTR [eax]
  411a27:	test   al,0x9e
  411a29:	pushf  
  411a2a:	xchg   ebx,eax
  411a2b:	aad    0x56
  411a2d:	push   0x64b43e31
  411a32:	rcr    al,cl
  411a34:	xchg   edi,eax
  411a35:	(bad)  
  411a36:	setne  BYTE PTR [ecx-0x12]
  411a3a:	mov    ds:0x97592149,al
  411a3f:	mov    dh,0x83
  411a41:	icebp  
  411a42:	push   ss
  411a43:	xlat   BYTE PTR ds:[ebx]
  411a44:	out    dx,al
  411a45:	jmp    0x411a48
  411a47:	dec    esp
  411a48:	call   0x9db24362
  411a4d:	sub    eax,0xdda7c98
  411a52:	mov    ah,0xe9
  411a54:	or     BYTE PTR [ebx],dl
  411a56:	in     al,dx
  411a57:	mov    edi,DWORD PTR [edi-0x740e265]
  411a5d:	lods   ax,WORD PTR ds:[esi]
  411a5f:	sti    
  411a60:	rol    edx,1
  411a62:	cmp    ch,cl
  411a64:	cwde   
  411a65:	repz dec eax
  411a67:	sbb    ch,BYTE PTR [edx-0x6219badc]
  411a6d:	arpl   WORD PTR [esi-0x3290e2b],sp
  411a73:	dec    ecx
  411a74:	push   ss
  411a75:	rol    DWORD PTR [ebx],0x65
  411a78:	ds xchg edx,eax
  411a7a:	cwde   
  411a7b:	mov    ds:0xf7789533,al
  411a80:	mov    eax,0xe53412db
  411a85:	inc    ebp
  411a86:	daa    
  411a87:	pop    ebx
  411a88:	xor    DWORD PTR [edi*4+0x6f987ab],0xffffff9d
  411a90:	mov    bl,ch
  411a92:	pop    eax
  411a93:	rcr    BYTE PTR [ecx-0x88561d9],0xb6
  411a9a:	imul   esi,DWORD PTR [ecx+esi*2],0x21
  411a9e:	xor    ecx,edx
  411aa0:	repnz pushf 
  411aa2:	loopne 0x411a42
  411aa4:	iret   
  411aa5:	bound  ebp,QWORD PTR [edi]
  411aa7:	ror    BYTE PTR [ecx+0x69],1
  411aaa:	mov    ch,0x8b
  411aac:	leave  
  411aad:	jns    0x411ae1
  411aaf:	jmp    0xd09c5c4f
  411ab4:	sub    ebp,DWORD PTR [esi+0xfec3899]
  411aba:	out    dx,eax
  411abb:	inc    edx
  411abc:	out    0xa2,al
  411abe:	adc    DWORD PTR [esi-0x2d],0xe66d1052
  411ac5:	xchg   DWORD PTR ds:0x64a8f456,ebp
  411acb:	pop    es
  411acc:	ret    0x694b
  411acf:	sub    ah,bh
  411ad1:	add    bh,BYTE PTR [ecx-0x71438538]
  411ad7:	cmp    DWORD PTR [edx+ebp*4+0x41],edi
  411adb:	add    BYTE PTR [ebx+0x12b2d422],bh
  411ae1:	sbb    DWORD PTR [ecx+0x47c8e67e],edi
  411ae7:	sub    edi,DWORD PTR [edx]
  411ae9:	fidiv  DWORD PTR [edi+edi*1]
  411aec:	in     eax,dx
  411aed:	mov    bh,0x6b
  411aef:	or     al,0x70
  411af1:	inc    ebx
  411af2:	ret    0xce5d
  411af5:	cli    
  411af6:	sub    esi,edx
  411af8:	ror    DWORD PTR [ecx+ebp*1-0x78e6c866],cl
  411aff:	into   
  411b00:	jl     0x411ab1
  411b02:	pop    ebx
  411b03:	dec    esp
  411b04:	in     eax,0xec
  411b06:	push   ebx
  411b07:	and    ah,BYTE PTR cs:0x305926c0
  411b0e:	pop    ss
  411b0f:	wrmsr  
  411b11:	push   eax
  411b12:	addr16 leave 
  411b14:	ins    DWORD PTR es:[edi],dx
  411b15:	sub    BYTE PTR [ebp-0x54],cl
  411b18:	lds    ebx,FWORD PTR [ebx+0x3548448]
  411b1e:	push   0xb1f45777
  411b23:	cmp    eax,DWORD PTR [esi-0x7de879c5]
  411b29:	hlt    
  411b2a:	pop    esi
  411b2b:	fadd   DWORD PTR [esi-0x7690345c]
  411b31:	mov    eax,ds:0xc903a21a
  411b36:	adc    BYTE PTR [ecx-0x6b],dl
  411b39:	push   eax
  411b3a:	js     0x411b39
  411b3c:	mov    ch,0x7
  411b3e:	call   DWORD PTR [eax]
  411b40:	or     dh,BYTE PTR [edx-0x5dd0b8b2]
  411b46:	arpl   WORD PTR [ecx],si
  411b48:	dec    ebx
  411b49:	jno    0x411b7a
  411b4b:	adc    dh,0x6d
  411b4e:	xor    edi,eax
  411b50:	(bad)  
  411b51:	mov    eax,ds:0x3638d9b8
  411b56:	loopne 0x411b00
  411b58:	shl    edi,cl
  411b5a:	inc    ebp
  411b5b:	ficomp WORD PTR gs:[eax-0x39e755e5]
  411b62:	fadd   st,st(3)
  411b64:	(bad)  
  411b65:	imul   edi,DWORD PTR [ecx],0x480f8499
  411b6b:	rcl    DWORD PTR [eax],cl
  411b6d:	push   0x52
  411b6f:	add    esp,DWORD PTR ds:0x67179529
  411b75:	dec    esi
  411b76:	dec    ebx
  411b77:	sub    al,0x6c
  411b79:	xchg   esp,eax
  411b7a:	mov    esi,0x54fa3a44
  411b7f:	fs jmp 0x16f9d550
  411b85:	scas   eax,DWORD PTR es:[edi]
  411b86:	xor    ebx,DWORD PTR [edx]
  411b88:	sti    
  411b89:	pushf  
  411b8a:	and    al,0x5e
  411b8c:	sub    esi,DWORD PTR [eax]
  411b8e:	in     al,dx
  411b8f:	push   ecx
  411b90:	and    bl,BYTE PTR [eax-0x77f73dc2]
  411b96:	xchg   edi,eax
  411b97:	mov    gs,WORD PTR [ecx-0x42674347]
  411b9d:	mov    dh,0xa1
  411b9f:	int    0x41
  411ba1:	arpl   WORD PTR [eax],dx
  411ba3:	add    cl,BYTE PTR [eax]
  411ba5:	add    eax,ebp
  411ba7:	xor    DWORD PTR [ebp-0x10],ecx
  411baa:	popf   
  411bab:	and    ch,bl
  411bad:	cmp    BYTE PTR [ebx],dh
  411baf:	cli    
  411bb0:	into   
  411bb1:	retf   
  411bb2:	lods   eax,DWORD PTR ds:[esi]
  411bb3:	adc    edx,esp
  411bb5:	scas   al,BYTE PTR es:[edi]
  411bb6:	pop    ebp
  411bb7:	inc    esp
  411bb8:	and    eax,ecx
  411bba:	js     0x411b7b
  411bbc:	sbb    esi,ecx
  411bbe:	or     DWORD PTR [esi+0x67],esp
  411bc1:	daa    
  411bc2:	sbb    bh,BYTE PTR ds:0x77db2cea
  411bc8:	push   eax
  411bc9:	or     eax,0xb014470a
  411bce:	push   edi
  411bcf:	lea    ebp,[edx-0x4f37064a]
  411bd5:	pop    edi
  411bd6:	or     ch,BYTE PTR [edx]
  411bd8:	mov    DWORD PTR [ebx],ecx
  411bda:	fidiv  DWORD PTR [edi]
  411bdc:	mov    al,ds:0xb820ce9f
  411be1:	xchg   ebp,eax
  411be2:	dec    ecx
  411be3:	shl    BYTE PTR [eax-0x77f834ff],0x9c
  411bea:	dec    ecx
  411beb:	inc    ebx
  411bec:	dec    ebp
  411bed:	push   esp
  411bee:	mov    ebx,0x31442d69
  411bf3:	or     eax,0x271b76af
  411bf8:	dec    ebp
  411bf9:	(bad)  
  411bfa:	sti    
  411bfb:	and    eax,0x2a48da3a
  411c00:	sub    DWORD PTR [ebx+0x24],ebx
  411c03:	xchg   ebx,eax
  411c04:	pop    ebp
  411c05:	sti    
  411c06:	test   al,0x12
  411c08:	pop    ss
  411c09:	inc    edi
  411c0a:	jb     0x411bb4
  411c0c:	pop    ss
  411c0d:	and    ch,BYTE PTR [eax+edi*1-0x48]
  411c11:	hlt    
  411c12:	pop    ebp
  411c13:	sub    dl,BYTE PTR [esi+0x5]
  411c16:	cmp    al,0x3e
  411c18:	dec    edx
  411c19:	sub    eax,0xe83696b9
  411c1e:	loope  0x411beb
  411c20:	xchg   BYTE PTR [ecx],cl
  411c22:	push   0x5d
  411c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c25:	cmp    bl,bl
  411c27:	or     al,0x63
  411c29:	les    esp,FWORD PTR [edx]
  411c2b:	and    edi,edx
  411c2d:	cmp    al,0x2b
  411c2f:	arpl   WORD PTR [ecx+0x68],bp
  411c32:	les    edx,FWORD PTR [edi]
  411c34:	retf   
  411c35:	cmp    al,0x5
  411c37:	outs   dx,BYTE PTR ds:[esi]
  411c38:	int    0x63
  411c3a:	retf   
  411c3b:	rol    ch,1
  411c3d:	inc    edx
  411c3e:	js     0x411bfd
  411c40:	fist   WORD PTR [ebx-0x29]
  411c43:	fld    DWORD PTR [ebp+0x39]
  411c46:	push   eax
  411c47:	cmovo  ebx,DWORD PTR [esi]
  411c4a:	mov    ds:0x92ebb31c,al
  411c4f:	and    BYTE PTR [esi-0x2c03e5e0],0xa9
  411c56:	test   BYTE PTR [ebx-0x2f],bl
  411c59:	pop    esp
  411c5a:	cmp    dl,BYTE PTR [edi-0x19931efe]
  411c60:	(bad)  
  411c61:	out    dx,eax
  411c62:	push   edi
  411c63:	xlat   BYTE PTR ds:[ebx]
  411c64:	mov    bl,0x15
  411c66:	adc    eax,0x9466f5cd
  411c6b:	inc    ebx
  411c6c:	rcl    esi,cl
  411c6e:	jo     0x411c9a
  411c70:	sbb    al,0x55
  411c72:	cmp    ebp,DWORD PTR [ebp+0x19]
  411c75:	(bad)
  411c78:	int    0x6
  411c7a:	sbb    bl,BYTE PTR [ecx+edx*2-0x2845924e]
  411c81:	outs   dx,BYTE PTR ds:[esi]
  411c82:	jge    0x411c6e
  411c84:	cmc    
  411c85:	enter  0x106f,0xc
  411c89:	loop   0x411cfe
  411c8b:	pushf  
  411c8c:	shr    BYTE PTR [eax+0x70],0xf8
  411c90:	ret    
  411c91:	lds    esi,FWORD PTR [edx]
  411c93:	ficomp WORD PTR [ecx-0x39eca645]
  411c99:	int    0xfe
  411c9b:	pop    es
  411c9c:	test   eax,0xfdb9d842
  411ca1:	inc    esi
  411ca2:	dec    edx
  411ca3:	push   ds
  411ca4:	cmp    al,0xe8
  411ca6:	test   al,0xab
  411ca8:	into   
  411ca9:	adc    eax,edx
  411cab:	popa   
  411cac:	cld    
  411cad:	sar    al,1
  411caf:	call   DWORD PTR [esi-0x31ae7c5a]
  411cb5:	sbb    DWORD PTR [ecx],esp
  411cb7:	xchg   edi,eax
  411cb8:	and    ecx,ecx
  411cba:	push   0x8aaa6d51
  411cbf:	or     DWORD PTR [ecx+0x13],eax
  411cc2:	ret    0x5caf
  411cc5:	out    dx,eax
  411cc6:	repnz xchg esi,eax
  411cc8:	ins    BYTE PTR es:[edi],dx
  411cc9:	iret   
  411cca:	and    dl,BYTE PTR [ecx+0x22f0f38e]
  411cd0:	push   0xb5e728d4
  411cd5:	aaa    
  411cd6:	mov    DWORD PTR [esi+eiz*4+0x59a2120b],eax
  411cdd:	sbb    ch,0x8a
  411ce0:	or     BYTE PTR [edi],al
  411ce2:	mov    ebp,0xd6d5061f
  411ce7:	mov    ch,0x34
  411ce9:	cli    
  411cea:	mov    esp,0x56d4d261
  411cef:	mov    ds:0xe0aa942b,eax
  411cf4:	inc    esi
  411cf5:	cmp    eax,0xc1effb33
  411cfa:	hlt    
  411cfb:	ret    0xbec0
  411cfe:	outs   dx,BYTE PTR ds:[esi]
  411cff:	rcr    bh,0x46
  411d02:	inc    ebx
  411d03:	(bad)  
  411d04:	pop    ss
  411d05:	pop    ecx
  411d06:	add    cl,BYTE PTR [eax+0x77]
  411d09:	je     0x411cd1
  411d0b:	mov    ecx,0xede2a1cf
  411d10:	leave  
  411d11:	cli    
  411d12:	call   0x8f8de20b
  411d17:	btc    DWORD PTR [ebp+0x5f58ff1d],edi
  411d1e:	cld    
  411d1f:	and    eax,0x6db85d62
  411d24:	icebp  
  411d25:	pop    ebp
  411d26:	jl     0x411d5e
  411d28:	sti    
  411d29:	xor    al,0x3c
  411d2b:	pusha  
  411d2c:	ds sbb al,0x63
  411d2f:	push   ebx
  411d30:	xchg   ebp,eax
  411d31:	sub    BYTE PTR [ecx+0x6e02ad85],bh
  411d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d38:	(bad)  
  411d39:	xlat   BYTE PTR ds:[ebx]
  411d3a:	dec    eax
  411d3b:	jns    0x411d5d
  411d3d:	aad    0x58
  411d3f:	retf   0x68e
  411d42:	add    DWORD PTR [ebx],edx
  411d44:	mov    eax,DWORD PTR [edx-0x29]
  411d47:	dec    esp
  411d48:	gs pop edi
  411d4a:	mov    bh,0xa8
  411d4c:	jle    0x411d2f
  411d4e:	add    bl,BYTE PTR [esp+ecx*4]
  411d51:	xchg   BYTE PTR [ebp-0x58],ah
  411d54:	aad    0xde
  411d56:	rcl    BYTE PTR [eax-0x35],0x26
  411d5a:	lods   eax,DWORD PTR ds:[esi]
  411d5b:	loope  0x411d3d
  411d5d:	and    eax,0xb15980ff
  411d62:	jo     0x411d77
  411d64:	imul   eax,DWORD PTR [ebx-0xadbcd57],0xfffffff5
  411d6b:	jmp    0x392bf5ed
  411d70:	into   
  411d71:	add    BYTE PTR fs:[ecx+eiz*2+0x12],cl
  411d76:	rol    DWORD PTR [edx-0x1d],0x62
  411d7a:	jg     0x411d6f
  411d7c:	out    dx,eax
  411d7d:	daa    
  411d7e:	push   esp
  411d7f:	xchg   ebx,eax
  411d80:	push   edx
  411d81:	pop    ss
  411d82:	jbe    0x411df9
  411d84:	jp     0x411db7
  411d86:	or     eax,0x496efbb3
  411d8b:	mov    edx,0xfd104f7c
  411d90:	loope  0x411de8
  411d92:	add    ebp,0x8
  411d95:	jnp    0x411dbc
  411d97:	jg     0x411d3f
  411d99:	ret    0xb505
  411d9c:	pop    ecx
  411d9d:	stos   BYTE PTR es:[edi],al
  411d9e:	mov    bh,0x45
  411da0:	icebp  
  411da1:	std    
  411da2:	fidivr WORD PTR [ebp+0x62591b84]
  411da8:	mov    esi,0xe176235
  411dad:	push   ecx
  411dae:	mov    edx,0x17e8914d
  411db3:	mov    cl,0xf
  411db5:	call   0xd7ecb8a2
  411dba:	adc    BYTE PTR [edx],bh
  411dbc:	arpl   WORD PTR [ebx-0x3a],sp
  411dbf:	(bad)  
  411dc1:	push   esi
  411dc2:	jne    0x411e42
  411dc4:	jg     0x411d4b
  411dc6:	or     dl,BYTE PTR [ecx+0x65]
  411dc9:	jno    0x411dcc
  411dcb:	mov    al,ds:0x6d997ee3
  411dd0:	adc    al,0xd8
  411dd2:	push   ebp
  411dd3:	cli    
  411dd4:	test   al,0xb8
  411dd6:	enter  0x5209,0xbe
  411dda:	sub    cl,BYTE PTR [ecx+eax*2]
  411ddd:	(bad)  [ebp-0x1197d79f]
  411de3:	in     al,dx
  411de4:	inc    edx
  411de5:	and    ecx,ebp
  411de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411de8:	hlt    
  411de9:	pusha  
  411dea:	inc    al
  411dec:	mov    ds:0x299388f9,al
  411df1:	inc    esi
  411df2:	out    dx,al
  411df3:	or     DWORD PTR [edx+ebp*4-0x3c01e18c],ebp
  411dfa:	or     edi,DWORD PTR [ebx+0x514c73bc]
  411e00:	xchg   ebx,eax
  411e01:	xchg   ebp,eax
  411e02:	gs mov dl,0x58
  411e05:	mov    dh,0x4c
  411e07:	cmp    al,0xe2
  411e09:	and    DWORD PTR [esi-0x7e219938],eax
  411e0f:	pop    ebp
  411e10:	xchg   esi,eax
  411e11:	test   BYTE PTR [ecx-0x42c632ff],dh
  411e17:	dec    ebx
  411e18:	dec    ebp
  411e19:	add    eax,0xee548f9
  411e1e:	(bad)  
  411e1f:	mul    esp
  411e21:	xor    al,0x20
  411e23:	mov    edx,0xe0811537
  411e28:	or     DWORD PTR [ebx+0x8],0xa068cfef
  411e2f:	repnz mov ecx,0x38975715
  411e35:	nop
  411e36:	mov    dh,dh
  411e38:	cwde   
  411e39:	inc    ecx
  411e3a:	pop    esi
  411e3b:	add    edx,edx
  411e3d:	or     DWORD PTR ds:0x36f1fa9e,eax
  411e43:	inc    ebp
  411e44:	or     al,0x92
  411e46:	xlat   BYTE PTR ds:[ebx]
  411e47:	int    0x49
  411e49:	clc    
  411e4a:	adc    DWORD PTR [esi+0x38b09256],ebx
  411e50:	clc    
  411e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e52:	sti    
  411e53:	sbb    cl,al
  411e55:	rcl    BYTE PTR [edi+0xc3ea887],1
  411e5b:	inc    esp
  411e5c:	sbb    BYTE PTR [ebx+0x5540ecee],al
  411e62:	cmp    ch,BYTE PTR [esi-0xe5c1c]
  411e68:	push   esp
  411e69:	retf   0x3dc1
  411e6c:	or     BYTE PTR [ecx],cl
  411e6e:	mov    eax,ss:0x5d07fee4
  411e74:	inc    esp
  411e75:	pop    esp
  411e76:	mov    eax,0xc230953b
  411e7b:	sti    
  411e7c:	jecxz  0x411e8e
  411e7e:	inc    edx
  411e7f:	outs   dx,DWORD PTR ds:[esi]
  411e80:	jle    0x411e2d
  411e82:	sbb    dl,bl
  411e84:	sbb    bh,BYTE PTR [ecx+0x16]
  411e87:	sbb    ebp,DWORD PTR [edi+0x60487658]
  411e8d:	or     al,0xff
  411e90:	mov    DWORD PTR [eax],ecx
  411e92:	shr    DWORD PTR [eax],0x8d
  411e95:	in     eax,dx
  411e96:	cmp    esi,DWORD PTR [esi]
  411e98:	add    eax,0xf16b1250
  411e9d:	or     dh,BYTE PTR [ebx]
  411e9f:	pop    es
  411ea0:	into   
  411ea1:	or     BYTE PTR [ebx+0x76],dl
  411ea4:	pop    ecx
  411ea5:	xor    bl,al
  411ea7:	mov    al,BYTE PTR [eax+0x43c48028]
  411ead:	dec    DWORD PTR [edx+edx*2]
  411eb0:	and    al,0x6
  411eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb3:	and    ebx,edi
  411eb5:	imul   ebp,ebx,0xe436e1ef
  411ebb:	loope  0x411eaf
  411ebd:	add    BYTE PTR [esi+ecx*2-0x290f5607],bl
  411ec4:	adc    BYTE PTR [esi+0x5d],ah
  411ec7:	jmp    0xb3423aae
  411ecc:	shl    BYTE PTR [edi-0x6],0x9c
  411ed0:	test   edi,ebp
  411ed2:	pop    edi
  411ed3:	mov    cl,BYTE PTR [ecx+esi*1]
  411ed6:	push   ds
  411ed7:	mov    ds:0x8ae3ffe7,eax
  411edc:	lea    ecx,[esi+esi*1-0x116f937a]
  411ee3:	jae    0x411f3c
  411ee5:	pushf  
  411ee6:	sbb    al,al
  411ee8:	outs   dx,BYTE PTR ds:[esi]
  411ee9:	cmc    
  411eea:	fcom   QWORD PTR [eax]
  411eec:	loope  0x411eb1
  411eee:	add    edx,esi
  411ef0:	hlt    
  411ef1:	jge    0x411f01
  411ef3:	es test cl,cl
  411ef6:	lea    esi,[ebx]
  411ef8:	or     al,0xd8
  411efa:	popf   
  411efb:	mov    cs,WORD PTR [edx+0x4e]
  411efe:	add    al,BYTE PTR [edx-0x2c0f4ed9]
  411f04:	jl     0x411f1c
  411f06:	adc    eax,0xe40775f9
  411f0b:	loope  0x411e93
  411f0d:	pop    es
  411f0e:	and    al,0xb7
  411f10:	and    ecx,DWORD PTR [edi-0x41]
  411f13:	cli    
  411f14:	fwait
  411f15:	cli    
  411f16:	xchg   ah,ah
  411f18:	fwait
  411f19:	push   ds
  411f1a:	jmp    0x6f46:0x7cbbb6f9
  411f21:	mov    edx,0xba1c7694
  411f26:	es ja  0x411f49
  411f29:	pop    esp
  411f2a:	cmp    WORD PTR [edx],ax
  411f2d:	jl     0x411f23
  411f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f30:	rcl    BYTE PTR [edi-0x36],1
  411f33:	or     ebp,edi
  411f35:	mov    esp,0xbd85513f
  411f3a:	jg     0x411f98
  411f3c:	mov    ebx,0xf0b5f581
  411f41:	cli    
  411f42:	push   DWORD PTR [eax+0xf]
  411f45:	sbb    ch,bl
  411f47:	push   es
  411f48:	test   DWORD PTR [ebx-0x48],esi
  411f4b:	push   ss
  411f4c:	inc    eax
  411f4d:	iret   
  411f4e:	sti    
  411f4f:	pop    ecx
  411f50:	call   0x55b22dad
  411f55:	and    eax,0xf84e6af8
  411f5a:	jl     0x411f1c
  411f5c:	push   ds
  411f5d:	push   eax
  411f5e:	pop    edi
  411f5f:	inc    eax
  411f60:	mov    edi,0x4000ff23
  411f65:	sbb    cl,dl
  411f67:	cmp    dh,BYTE PTR [ebx]
  411f69:	jp     0x411f8f
  411f6b:	and    al,ah
  411f6d:	lahf   
  411f6e:	jle    0x411fa8
  411f70:	pop    es
  411f71:	adc    al,0x50
  411f73:	add    al,0xf9
  411f75:	cmp    BYTE PTR [edi],bl
  411f77:	fs and al,0x44
  411f7a:	popf   
  411f7b:	ja     0x411f72
  411f7d:	pusha  
  411f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f7f:	dec    ecx
  411f80:	out    dx,eax
  411f81:	jle    0x411f14
  411f83:	sbb    edx,DWORD PTR [eax+0x7d]
  411f86:	pop    ebx
  411f87:	inc    esp
  411f88:	out    dx,al
  411f89:	popf   
  411f8a:	adc    al,0xda
  411f8c:	mov    dh,BYTE PTR [ecx+edi*2]
  411f8f:	imul   ebp,DWORD PTR cs:[ebx],0x9e0f767a
  411f96:	jp     0x411f6c
  411f98:	into   
  411f99:	fwait
  411f9a:	push   0x24732a64
  411f9f:	rol    DWORD PTR [ecx],cl
  411fa1:	xor    al,0xe3
  411fa3:	out    0xfe,eax
  411fa5:	mov    esp,gs
  411fa7:	jns    0x411fee
  411fa9:	inc    DWORD PTR ds:0xb7e924ff
  411faf:	cmp    al,0xdf
  411fb1:	and    BYTE PTR ds:0x64c414d,ch
  411fb7:	sbb    al,0x91
  411fb9:	out    dx,eax
  411fba:	lock mov bl,0xd0
  411fbd:	jmp    0x61d3f3f3
  411fc2:	dec    edx
  411fc3:	popa   
  411fc4:	sub    BYTE PTR [eax],bl
  411fc6:	shr    DWORD PTR [edx],1
  411fc8:	or     BYTE PTR [edx+0x6c],al
  411fcb:	mov    bl,ch
  411fcd:	dec    edi
  411fce:	jbe    0x411feb
  411fd0:	jo     0x411fbc
  411fd2:	lahf   
  411fd3:	inc    edi
  411fd4:	pop    esp
  411fd5:	push   es
  411fd6:	xchg   ebp,eax
  411fd7:	jmp    0xc03ded32
  411fdc:	pop    ebp
  411fdd:	mov    eax,?
  411fdf:	add    BYTE PTR [esi],cl
  411fe1:	inc    ecx
  411fe2:	adc    ecx,ecx
  411fe4:	lahf   
  411fe5:	mov    ah,BYTE PTR [edi+esi*2+0x72]
  411fe9:	call   0x992a:0x10fb05ad
  411ff0:	ins    BYTE PTR es:[edi],dx
  411ff1:	repnz adc bh,BYTE PTR [esp+edx*1+0x4f]
  411ff6:	arpl   WORD PTR ds:0x9f44af44,dx
  411ffc:	(bad)  
  411ffe:	jnp    0x411f9d
  412000:	or     DWORD PTR [edx],edi
  412002:	jge    0x411fbc
  412004:	and    al,0x5e
  412006:	and    eax,0x77c0358
  41200b:	shl    esp,cl
  41200d:	sbb    DWORD PTR [ecx-0x678f8987],0x25
  412014:	sub    ecx,esi
  412016:	inc    edi
  412017:	adc    esi,edi
  412019:	in     eax,0x6e
  41201b:	sub    eax,esi
  41201d:	xchg   ecx,eax
  41201e:	mov    edi,0xbf2e729f
  412023:	or     BYTE PTR [ebx+0x725fa30e],ch
  412029:	call   DWORD PTR [edx-0x648f6993]
  41202f:	fstp   DWORD PTR [edi+0x3daa314c]
  412035:	pop    es
  412036:	push   edx
  412037:	and    edi,eax
  412039:	sub    ch,BYTE PTR [edx+0x295a56f4]
  41203f:	push   cs
  412040:	add    esi,eax
  412042:	xchg   ebx,eax
  412043:	imul   ecx,edx,0x3b032ff
  412049:	push   eax
  41204a:	dec    edi
  41204b:	fisttp QWORD PTR [edx+0x31f7480f]
  412051:	mov    ebx,0x97f97036
  412056:	rol    esp,1
  412058:	das    
  412059:	dec    ebx
  41205a:	test   al,0xcb
  41205c:	lods   eax,DWORD PTR ds:[esi]
  41205d:	inc    edx
  41205e:	outs   dx,DWORD PTR ds:[esi]
  41205f:	ja     0x4120ae
  412061:	rcr    DWORD PTR [esp+esi*4-0x1e],1
  412065:	rol    DWORD PTR [esi-0x25],cl
  412068:	pop    ebx
  412069:	pop    ebp
  41206a:	jge    0x4120a3
  41206c:	add    WORD PTR ds:0xa4174dac,bp
  412073:	outs   dx,DWORD PTR ds:[esi]
  412074:	push   ecx
  412075:	sbb    eax,0xd2246333
  41207a:	jp     0x4120b3
  41207c:	lea    esp,[eax-0x596bd65b]
  412082:	(bad)  
  412083:	mov    ebp,0xd16d42a7
  412088:	(bad)  
  412089:	adc    edx,DWORD PTR [esi+0x1a]
  41208c:	neg    BYTE PTR [esi]
  41208e:	iret   
  41208f:	mov    edi,0xd2991802
  412094:	int3   
  412095:	or     edx,esi
  412097:	xchg   ebx,eax
  412098:	call   0xd203:0xcfb7c594
  41209f:	mov    WORD PTR [ecx-0x16],?
  4120a2:	scas   al,BYTE PTR es:[edi]
  4120a3:	dec    BYTE PTR [edi+0x2e]
  4120a6:	add    al,0x9a
  4120a8:	xor    al,0x52
  4120aa:	push   0xfffffff8
  4120ac:	inc    edx
  4120ad:	sbb    BYTE PTR [ebp+0x71e71b72],0x16
  4120b4:	ins    DWORD PTR es:[edi],dx
  4120b5:	pop    ds
  4120b6:	icebp  
  4120b7:	mov    cl,0xd3
  4120b9:	arpl   WORD PTR [edi-0x2233afa5],si
  4120bf:	inc    ebp
  4120c0:	call   0x1fe9bb53
  4120c5:	xbegin 0xa2d5cfd9
  4120cb:	outs   dx,DWORD PTR ds:[esi]
  4120cc:	adc    al,0x23
  4120ce:	lods   eax,DWORD PTR ds:[esi]
  4120cf:	dec    esp
  4120d0:	pop    ebp
  4120d1:	jecxz  0x4120d7
  4120d3:	adc    DWORD PTR [ecx],eax
  4120d5:	je     0x41209e
  4120d7:	push   ds
  4120d8:	adc    bl,cl
  4120da:	mov    ebp,0x1e7ef0c
  4120df:	js     0x41213a
  4120e1:	popa   
  4120e2:	mov    ss,WORD PTR [ecx]
  4120e4:	sahf   
  4120e5:	popa   
  4120e6:	pop    esi
  4120e7:	inc    ebp
  4120e8:	js     0x4120ba
  4120ea:	enter  0xa550,0x1c
  4120ee:	push   esp
  4120ef:	jecxz  0x41214f
  4120f1:	ror    BYTE PTR [ebx],0xae
  4120f4:	rol    edi,cl
  4120f6:	fmul   DWORD PTR [ebp+eiz*2-0x28]
  4120fa:	jmp    0xf30e:0xc57c1c02
  412101:	mov    cl,0xb2
  412103:	jne    0x4120a8
  412105:	xchg   ebp,eax
  412106:	dec    eax
  412107:	pop    edi
  412108:	xchg   esi,eax
  412109:	cdq    
  41210a:	arpl   WORD PTR [eax],si
  41210c:	mov    DWORD PTR [edx+0xe1fa2a7],edi
  412112:	fisubr DWORD PTR [edx+0x3e]
  412115:	punpcklwd mm3,mm0
  412118:	adc    al,0xb0
  41211a:	and    DWORD PTR [eax+0x6e5dd5db],0xffffffec
  412121:	mov    bh,0x69
  412123:	ds pop ecx
  412125:	add    ebp,DWORD PTR [eax+0x59]
  412128:	dec    ecx
  412129:	(bad)  
  41212a:	xchg   edi,eax
  41212b:	xor    al,0x7
  41212d:	leave  
  41212e:	test   DWORD PTR [ebp-0x1d],ebp
  412131:	lahf   
  412132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412133:	lods   eax,DWORD PTR ds:[esi]
  412134:	cmp    al,0x61
  412136:	mov    ecx,0x50e03b73
  41213b:	mov    ds:0xae6235d4,al
  412140:	and    esi,esp
  412142:	jecxz  0x41216f
  412144:	jbe    0x412156
  412146:	cmp    eax,0xc71701e
  41214b:	pop    es
  41214c:	sub    DWORD PTR [edx-0x7c9d6670],esp
  412152:	adc    bh,BYTE PTR [eax-0x530e79a9]
  412158:	and    al,0xd2
  41215a:	sbb    dl,al
  41215c:	push   0x60fa7ae7
  412161:	int3   
  412162:	xor    al,0xa1
  412164:	cli    
  412165:	pop    ecx
  412166:	or     eax,0xcdd7c92
  41216b:	lods   eax,DWORD PTR ds:[esi]
  41216c:	inc    ecx
  41216d:	stc    
  41216e:	sbb    DWORD PTR [ecx-0x6f4240ca],esp
  412174:	ret    
  412175:	xchg   edi,eax
  412176:	mov    al,0x30
  412178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412179:	mov    edx,0xc611bc36
  41217e:	fmul   QWORD PTR [edx-0x14c2f2d9]
  412184:	or     esp,0xfffffff6
  412187:	mov    dl,0xc6
  412189:	mov    DWORD PTR [eax-0x6105c10a],edi
  41218f:	in     al,0xbd
  412191:	mov    al,ds:0x8c109b05
  412196:	mov    WORD PTR [edi+0x35],?
  412199:	xor    eax,DWORD PTR [eax]
  41219b:	mov    bh,0x61
  41219d:	scas   eax,DWORD PTR es:[edi]
  41219e:	mov    eax,0x223ebec5
  4121a3:	xchg   edi,esi
  4121a5:	jecxz  0x412180
  4121a7:	adc    ebp,ebx
  4121a9:	xor    DWORD PTR [ebp-0x4d],ebp
  4121ac:	lahf   
  4121ad:	cmp    dh,BYTE PTR ds:0xc3a66b52
  4121b3:	fistp  QWORD PTR [eax+0x6f]
  4121b6:	jo     0x412165
  4121b8:	inc    ebp
  4121b9:	je     0x41218f
  4121bb:	hlt    
  4121bc:	das    
  4121bd:	xchg   esp,eax
  4121be:	(bad)  
  4121bf:	sbb    eax,0xaf227475
  4121c4:	mov    edi,0xbc876a78
  4121c9:	dec    esi
  4121ca:	fs push ebp
  4121cc:	sbb    bh,al
  4121ce:	jo     0x4121fc
  4121d0:	inc    BYTE PTR [edx-0x47]
  4121d3:	(bad)  
  4121d4:	mov    esp,0x768b25c5
  4121d9:	repnz mov ch,0xd5
  4121dc:	aad    0xb4
  4121de:	ss and al,0xf1
  4121e1:	dec    esi
  4121e2:	int3   
  4121e3:	jb     0x4121bf
  4121e5:	pop    ds
  4121e6:	aas    
  4121e7:	into   
  4121e8:	lods   eax,DWORD PTR ds:[esi]
  4121e9:	test   BYTE PTR [ecx],dl
  4121eb:	fs inc esp
  4121ed:	popf   
  4121ee:	mov    ds:0x42a479b2,al
  4121f3:	(bad)  
  4121f4:	int3   
  4121f5:	imul   esi,eax,0xffffffa3
  4121f8:	inc    esp
  4121f9:	(bad)  
  4121fa:	call   0xf11020dc
  4121ff:	sub    eax,0x854a49ba
  412204:	mov    ch,BYTE PTR [ecx]
  412206:	cdq    
  412207:	xchg   ebp,eax
  412208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412209:	retf   0xb982
  41220c:	aad    0xf0
  41220e:	mov    ebp,0xb5dd7b0c
  412213:	or     DWORD PTR [eax],edi
  412215:	shr    BYTE PTR [ebp-0x13],1
  412218:	dec    esi
  412219:	shl    DWORD PTR ds:0x9324ff66,0xb
  412220:	fucomip st,st(1)
  412222:	stc    
  412223:	pop    edx
  412224:	ret    
  412225:	popa   
  412226:	out    0x56,eax
  412228:	les    edi,FWORD PTR [edi+0x50]
  41222b:	dec    edx
  41222c:	adc    BYTE PTR [ecx],bh
  41222e:	jg     0x4121e3
  412230:	iret   
  412231:	or     al,0x17
  412233:	push   esi
  412234:	into   
  412235:	cdq    
  412236:	dec    ebp
  412237:	xor    ebx,esi
  412239:	inc    esp
  41223a:	out    dx,al
  41223b:	in     eax,dx
  41223c:	mov    ch,0x83
  41223e:	dec    ecx
  41223f:	lods   al,BYTE PTR ds:[esi]
  412240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412241:	sub    DWORD PTR [ecx+0x7f8fc25],0xffffffa6
  412248:	mov    dh,0xdf
  41224a:	or     DWORD PTR [ebx+0x68ebc148],0x281c54f4
  412254:	adc    ebp,eax
  412256:	sbb    al,0x16
  412258:	fs in  eax,0xaf
  41225b:	aam    0x77
  41225d:	ret    0x532a
  412260:	mov    cl,0xa9
  412262:	adc    ebp,DWORD PTR [edx]
  412264:	clc    
  412265:	mov    DWORD PTR [edx],ebp
  412267:	push   eax
  412268:	cmc    
  412269:	push   ebp
  41226a:	pushf  
  41226b:	fnstenv [eax+0x68]
  41226e:	ja     0x4122a1
  412270:	aam    0x1c
  412272:	mov    eax,ds:0xc112c75a
  412277:	nop
  412278:	call   0xf45abce9
  41227d:	in     al,dx
  41227e:	fmul   QWORD PTR [edi+eax*8+0x63]
  412282:	xchg   esp,eax
  412283:	add    esi,edi
  412285:	dec    ebp
  412286:	mov    ch,0xcc
  412288:	mov    ecx,0x1cf83810
  41228d:	sbb    eax,0x92a90b5e
  412292:	and    BYTE PTR [ebp-0x7d1491c8],0x7a
  412299:	outs   dx,BYTE PTR ds:[esi]
  41229a:	push   esi
  41229b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41229c:	mov    DWORD PTR [ecx-0x60],ebp
  41229f:	test   DWORD PTR [esi],ebp
  4122a1:	lods   al,BYTE PTR ds:[esi]
  4122a2:	inc    edi
  4122a3:	out    0xfc,al
  4122a5:	cmp    al,0x31
  4122a7:	mov    esp,ebp
  4122a9:	xor    esi,DWORD PTR [eax-0x789e03c]
  4122af:	mov    bl,0x49
  4122b1:	das    
  4122b2:	lods   eax,DWORD PTR ds:[esi]
  4122b3:	xlat   BYTE PTR ds:[ebx]
  4122b4:	mov    eax,ds:0x2adbc09b
  4122b9:	add    DWORD PTR [ebx+0x6de1337a],eax
  4122bf:	in     al,0x5
  4122c1:	lock xchg DWORD PTR [ecx],edx
  4122c4:	mov    ecx,0x28f4fff0
  4122c9:	push   esp
  4122ca:	add    ebx,0x45e5680a
  4122d0:	mov    eax,0x78293085
  4122d5:	retf   
  4122d6:	pop    eax
  4122d7:	ss mov eax,0x99f6ac29
  4122dd:	adc    BYTE PTR [ebp-0x2bc4fd86],0x55
  4122e4:	cmp    al,0xb6
  4122e6:	loopne 0x412311
  4122e8:	mov    ch,0x27
  4122ea:	xor    esp,eax
  4122ec:	mov    eax,ds:0x62d9992c
  4122f1:	jae    0x412292
  4122f3:	mov    al,0xc
  4122f5:	lea    ecx,[ebp+ecx*1-0x65]
  4122f9:	add    esi,edx
  4122fb:	jp     0x412304
  4122fd:	in     al,dx
  4122fe:	pop    edx
  4122ff:	js     0x4122ca
  412301:	fdivp  st(6),st
  412303:	adc    DWORD PTR [ebx-0x362029b9],edx
  412309:	int    0x69
  41230b:	cld    
  41230c:	lock jbe 0x412363
  41230f:	push   es
  412310:	enter  0x5544,0xce
  412314:	loopne 0x41232c
  412316:	mov    WORD PTR [esi-0x6e],fs
  412319:	adc    bh,BYTE PTR [edi-0x14c2cade]
  41231f:	push   0x464fa457
  412324:	lahf   
  412325:	mov    BYTE PTR [eax+0x77],dh
  412328:	add    eax,0x9a4c3305
  41232d:	ds fucomip st,st(5)
  412330:	and    eax,0x19ca8c9
  412335:	dec    ecx
  412336:	frstor [esi]
  412338:	push   ebp
  412339:	fwait
  41233a:	adc    edi,esp
  41233c:	nop
  41233d:	(bad)
  412340:	xchg   esp,eax
  412341:	push   ecx
  412342:	add    eax,DWORD PTR [ebx+ebx*2-0x54]
  412346:	in     al,0x8f
  412348:	ss mov ebx,0x61998124
  41234e:	push   eax
  41234f:	mov    dh,0x38
  412351:	bound  ebx,QWORD PTR [ebx-0x494864be]
  412357:	sub    DWORD PTR [eax+edi*2+0x3d369cb0],ebx
  41235e:	(bad)  
  41235f:	call   0xc331be1
  412364:	(bad)  
  412365:	pusha  
  412366:	(bad)  
  412367:	call   DWORD PTR [edi+0x6a]
  41236a:	gs lock pusha 
  41236d:	test   BYTE PTR [ebx-0x792a456a],ah
  412373:	adc    DWORD PTR [ebp-0x1a1f2089],edi
  412379:	and    eax,0xbf8ab23
  41237e:	das    
  41237f:	sub    BYTE PTR [eax+0x1a4ba6b6],bl
  412385:	pusha  
  412386:	sub    eax,edi
  412388:	mov    eax,0xc8b16428
  41238d:	leave  
  41238e:	lahf   
  41238f:	xchg   esi,ebp
  412391:	mov    DWORD PTR [edi+0x1],edi
  412394:	or     edx,DWORD PTR [ecx]
  412396:	adc    ah,BYTE PTR [edi]
  412398:	jne    0x412331
  41239a:	stc    
  41239b:	out    dx,eax
  41239c:	push   cs
  41239d:	ret    0xdf42
  4123a0:	jl     0x412323
  4123a2:	pop    si
  4123a4:	sbb    BYTE PTR [edx+0x71b08f50],0x79
  4123ab:	adc    eax,0x71e9a073
  4123b0:	add    DWORD PTR [eax+0x1dc70661],ebx
  4123b6:	cli    
  4123b7:	sar    edi,0x61
  4123ba:	xor    ecx,DWORD PTR ds:0x5caba987
  4123c0:	jg     0x4123eb
  4123c2:	xchg   ebp,eax
  4123c3:	scas   al,BYTE PTR es:[edi]
  4123c4:	sbb    BYTE PTR [edx+0x1f],ch
  4123c7:	pop    esi
  4123c8:	jnp    0x412371
  4123ca:	and    DWORD PTR [edi-0x3b],edx
  4123cd:	scas   eax,DWORD PTR es:[edi]
  4123ce:	sub    edi,DWORD PTR [edx+edi*8+0x9be39fb]
  4123d5:	jbe    0x41244d
  4123d7:	mov    dl,0x4c
  4123d9:	fcomp  QWORD PTR [ebp+0x63c214f8]
  4123df:	(bad)  
  4123e0:	cld    
  4123e1:	push   ebx
  4123e2:	or     BYTE PTR [edx-0x2f],0x26
  4123e6:	fild   WORD PTR [esi]
  4123e8:	shl    DWORD PTR [ebx+0x1386e2f3],0x28
  4123ef:	mov    ah,0x62
  4123f1:	xor    edi,DWORD PTR [esp+eiz*4]
  4123f4:	and    eax,0xb974b947
  4123f9:	mov    dh,0xfa
  4123fb:	bound  ecx,QWORD PTR [ebp+0x150e6004]
  412401:	xchg   esi,eax
  412402:	adc    eax,0x5a42c842
  412407:	into   
  412408:	xor    ah,BYTE PTR [ecx-0x37]
  41240b:	mov    bl,0x57
  41240d:	xor    eax,0xefc431ab
  412412:	pop    es
  412413:	xchg   esp,eax
  412414:	mov    edx,0xbeeb4ddc
  412419:	push   esi
  41241a:	xchg   ebx,eax
  41241b:	and    BYTE PTR [edi-0xacec613],0xab
  412422:	inc    esi
  412423:	cmp    eax,0x4cde4945
  412428:	fistp  DWORD PTR es:[esi]
  41242b:	stos   BYTE PTR es:[edi],al
  41242c:	cmp    dl,BYTE PTR ds:0xf26689f6
  412432:	pusha  
  412433:	add    al,0x4b
  412435:	xor    edi,DWORD PTR [edi-0x569fdd3f]
  41243b:	cmc    
  41243c:	jno    0x41242c
  41243e:	adc    al,0x42
  412440:	push   edx
  412441:	stc    
  412442:	gs pop es
  412444:	popa   
  412445:	daa    
  412446:	xor    DWORD PTR [edx-0x62],esi
  412449:	fidivr WORD PTR ds:0x789c9afd
  41244f:	add    DWORD PTR [ebx-0x197cea47],ebp
  412455:	fsub   DWORD PTR [edi]
  412457:	push   es
  412458:	rcr    BYTE PTR [ecx+edi*1-0xeaf8e20],1
  41245f:	inc    esp
  412460:	jp     0x412451
  412462:	adc    DWORD PTR [esi+0x478aa33d],esp
  412468:	jle    0x4124bc
  41246a:	mov    bh,0xbd
  41246c:	dec    esp
  41246d:	push   cs
  41246e:	push   edi
  41246f:	(bad)  
  412470:	jne    0x41243f
  412472:	fld    DWORD PTR [ecx]
  412474:	test   BYTE PTR [ebx],dh
  412476:	rcl    ch,1
  412478:	add    edx,edi
  41247a:	jnp    0x412403
  41247c:	data16 loop 0x4124e4
  41247f:	adc    DWORD PTR [ebx+eiz*1],esi
  412482:	retf   0xc0a6
  412485:	idiv   DWORD PTR [esi]
  412487:	cmc    
  412488:	pop    ss
  412489:	int    0x10
  41248b:	repnz xor eax,0x566a1a30
  412491:	outs   dx,BYTE PTR ds:[esi]
  412492:	scas   al,BYTE PTR es:[edi]
  412493:	dec    eax
  412494:	in     eax,0x68
  412496:	ins    DWORD PTR es:[edi],dx
  412497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412498:	out    0xf6,eax
  41249a:	cmp    eax,0xe7be03b5
  41249f:	mov    bh,0xe5
  4124a1:	das    
  4124a2:	repnz test BYTE PTR [ebx+0x79],dl
  4124a6:	sbb    ebp,DWORD PTR [edx+0x6f]
  4124a9:	ds je  0x4124af
  4124ac:	push   ebx
  4124ad:	sbb    ecx,DWORD PTR ds:0xc6a396b3
  4124b3:	xchg   ecx,eax
  4124b4:	push   ds
  4124b5:	cmp    dl,BYTE PTR [eax-0x2d]
  4124b8:	inc    edi
  4124b9:	pop    ss
  4124ba:	add    BYTE PTR [eax+0x3d06ba26],0xfe
  4124c1:	push   ebp
  4124c2:	inc    esi
  4124c3:	pop    edi
  4124c4:	add    DWORD PTR [ecx-0x7356853e],ebx
  4124ca:	sbb    bh,bl
  4124cc:	pop    esi
  4124cd:	call   0xa111:0x551ef822
  4124d4:	daa    
  4124d5:	pop    ecx
  4124d6:	lds    eax,FWORD PTR [edi+0x29d95e0b]
  4124dc:	into   
  4124dd:	dec    ebx
  4124de:	pop    esi
  4124df:	stos   BYTE PTR es:[edi],al
  4124e0:	les    eax,FWORD PTR [ecx+0x4beec5a3]
  4124e6:	push   es
  4124e7:	test   eax,0x5360f025
  4124ec:	pop    ebx
  4124ed:	and    bl,BYTE PTR [esi]
  4124ef:	sti    
  4124f0:	shr    DWORD PTR ds:0x1f252675,1
  4124f6:	push   ebx
  4124f7:	push   esi
  4124f8:	xchg   DWORD PTR [edx-0x62],ebp
  4124fb:	call   0x2a8ac49e
  412500:	jecxz  0x4124f0
  412502:	cmp    ecx,DWORD PTR [esi]
  412504:	add    cl,dl
  412506:	(bad)
  412509:	xchg   esi,eax
  41250a:	dec    ebx
  41250b:	retf   
  41250c:	pop    es
  41250d:	iret   
  41250e:	push   esi
  41250f:	pop    ds
  412510:	sti    
  412511:	iret   
  412512:	cmc    
  412513:	jecxz  0x4124b7
  412515:	sahf   
  412516:	aad    0x8a
  412518:	test   DWORD PTR [edi-0x5ad3e096],esi
  41251e:	and    bh,al
  412520:	into   
  412521:	adc    dl,BYTE PTR cs:[esi+ebp*8-0x7d]
  412526:	addr16 in eax,dx
  412528:	lods   eax,DWORD PTR ds:[esi]
  412529:	lods   eax,DWORD PTR ds:[esi]
  41252a:	xchg   BYTE PTR [edi+0x9d9131e],dl
  412530:	jae    0x41257d
  412532:	aad    0x75
  412534:	sub    DWORD PTR [esp+ebp*2-0x7c],esi
  412538:	cli    
  412539:	pushf  
  41253a:	and    cl,BYTE PTR [edi+0x57495deb]
  412540:	test   esp,ebx
  412542:	cmp    al,0xa8
  412544:	jo     0x412526
  412546:	je     0x41251c
  412548:	(bad)  
  412549:	jmp    0x696:0xc116e7a2
  412550:	push   ebx
  412551:	in     al,dx
  412552:	mov    bl,0xd4
  412554:	cdq    
  412555:	or     ebx,DWORD PTR [eax*4+0x295c651b]
  41255c:	pop    esi
  41255d:	dec    ebp
  41255e:	aam    0xb8
  412560:	xor    ecx,DWORD PTR ds:0x6a9cd3e0
  412566:	pop    ecx
  412567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412568:	(bad)  
  412569:	subps  xmm1,XMMWORD PTR ds:0x4e47af21
  412570:	jne    0x4125a8
  412572:	or     DWORD PTR [edx-0x628d89ce],0xffffff9f
  412579:	adc    ecx,DWORD PTR [ecx+0x10e22f07]
  41257f:	jae    0x4125e7
  412581:	mov    edx,0x4f01cf21
  412586:	frstor [eax+0x4d906c2a]
  41258c:	fwait
  41258d:	test   eax,0xbe76f2cb
  412592:	pop    ebp
  412593:	cmp    DWORD PTR [ecx],ebx
  412595:	jmp    0x4ea:0x7dc19963
  41259c:	pop    es
  41259d:	jne    0x412522
  41259f:	pop    ss
  4125a0:	add    eax,0x6b56778c
  4125a5:	sub    bh,cl
  4125a7:	je     0x4125cb
  4125a9:	or     al,0xa8
  4125ab:	xor    BYTE PTR [ecx+esi*4],ch
  4125ae:	or     DWORD PTR [edi+esi*1+0x4d69622a],0xb31709c7
  4125b9:	cdq    
  4125ba:	and    eax,0x6e8f40fa
  4125bf:	mov    esp,0x27b41e59
  4125c4:	mov    BYTE PTR [eax+eiz*2+0x1c1f9b68],ch
  4125cb:	sbb    dh,BYTE PTR [edx-0x52d2f9ae]
  4125d1:	loop   0x41264d
  4125d3:	out    dx,eax
  4125d4:	popa   
  4125d5:	lea    esp,[esi]
  4125d7:	loope  0x41261b
  4125d9:	scas   eax,DWORD PTR es:[edi]
  4125da:	ror    esi,1
  4125dc:	pop    edi
  4125dd:	mov    eax,0x5fd8e5af
  4125e2:	outs   dx,DWORD PTR ds:[esi]
  4125e3:	jns    0x43edb18d
  4125e9:	(bad)  
  4125ea:	sub    al,BYTE PTR [ebx-0x79311757]
  4125f0:	scas   al,BYTE PTR es:[edi]
  4125f1:	sti    
  4125f2:	inc    esp
  4125f3:	not    DWORD PTR [ebx-0x8ac835b]
  4125f9:	xor    DWORD PTR [eax+0x41],edx
  4125fc:	cmp    bl,BYTE PTR [esp+edx*4+0x26]
  412600:	pop    eax
  412601:	dec    esi
  412602:	mov    cl,0x42
  412604:	pop    ds
  412605:	iret   
  412606:	enter  0xf35,0x81
  41260a:	push   ebx
  41260b:	lods   eax,DWORD PTR ds:[esi]
  41260c:	push   ds
  41260d:	push   edi
  41260e:	fcomip st,st(5)
  412610:	ss push ecx
  412612:	dec    eax
  412613:	cdq    
  412614:	stc    
  412615:	test   eax,0xb1a3a4f8
  41261a:	int3   
  41261b:	jbe    0x4125ad
  41261d:	inc    ebx
  41261e:	sahf   
  41261f:	xor    ch,BYTE PTR [ebx+0x14]
  412622:	fisub  WORD PTR [edi]
  412624:	stc    
  412625:	fs jb  0x412626
  412628:	jp     0x412676
  41262a:	push   ds
  41262b:	jbe    0x412661
  41262d:	cmp    al,0x7e
  41262f:	jne    0x41266f
  412631:	fincstp 
  412633:	jns    0x4125d2
  412635:	and    al,0xbc
  412637:	or     esp,DWORD PTR [edx]
  412639:	jno    0x412627
  41263b:	out    0x2,eax
  41263d:	lahf   
  41263e:	inc    eax
  41263f:	fld    TBYTE PTR [ebx-0x7e86323d]
  412645:	mov    ecx,0xa8bd2ad8
  41264a:	in     al,0x89
  41264c:	adc    ch,cl
  41264e:	cli    
  41264f:	(bad)  
  412650:	test   bl,0x45
  412653:	clc    
  412654:	retf   
  412655:	sbb    ebx,edx
  412657:	cli    
  412658:	loop   0x412672
  41265a:	popf   
  41265b:	(bad)  
  41265c:	jmp    0x41261a
  41265e:	push   ss
  41265f:	or     ebx,DWORD PTR [edx]
  412661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412662:	dec    esi
  412663:	mov    esi,0xb4096dc5
  412668:	xchg   ebx,eax
  412669:	jno    0x412602
  41266b:	inc    ebp
  41266c:	jmp    0x2f892a3
  412671:	mov    cl,0x3b
  412673:	rcl    esp,0xf1
  412676:	push   es
  412677:	add    BYTE PTR [ecx-0x5fe27967],ch
  41267d:	lea    edx,[ecx+0x611bd5f1]
  412683:	scas   al,BYTE PTR es:[edi]
  412684:	jnp    0x4126c4
  412686:	je     0x412641
  412688:	imul   BYTE PTR [edi+0x2c]
  41268b:	or     al,0x2a
  41268d:	lea    edi,[ebp+esi*8+0x602ca54e]
  412694:	cli    
  412695:	stc    
  412696:	inc    ebp
  412697:	xchg   ebx,eax
  412698:	mov    eax,ds:0xd814ebc0
  41269d:	and    al,0x60
  41269f:	mov    esi,0x232cdbd4
  4126a4:	add    eax,0x3d631545
  4126a9:	in     al,dx
  4126aa:	pop    edx
  4126ab:	cdq    
  4126ac:	inc    eax
  4126ad:	sub    ecx,DWORD PTR [ebx-0x1c]
  4126b0:	dec    ebp
  4126b1:	ins    DWORD PTR es:[edi],dx
  4126b2:	in     al,0x9f
  4126b4:	xor    si,cx
  4126b7:	pop    esi
  4126b8:	fidiv  DWORD PTR [ebp+0x66bf3976]
  4126be:	mov    dl,0x88
  4126c0:	sub    bh,BYTE PTR [edx+0x5f8c61f6]
  4126c6:	jno    0x4126b6
  4126c8:	xchg   edx,eax
  4126c9:	mov    eax,ds:0xd4bb55aa
  4126ce:	sbb    esp,DWORD PTR [edi-0x5edc0a81]
  4126d4:	mov    bl,0xa9
  4126d6:	mov    ebp,0x2301e145
  4126db:	xor    al,0x3d
  4126dd:	dec    eax
  4126de:	shl    DWORD PTR [ebp-0x55ad95eb],1
  4126e4:	loope  0x41275b
  4126e6:	push   0x32c6ed04
  4126eb:	test   eax,0xe9e5c78
  4126f0:	mov    bh,0xdc
  4126f2:	inc    ecx
  4126f3:	repnz xchg ebx,eax
  4126f5:	je     0x4126e2
  4126f7:	aaa    
  4126f8:	fsubr  DWORD PTR [eax-0x4b]
  4126fb:	cmp    eax,0x4a0ff47e
  412700:	xor    edi,DWORD PTR [edi+eax*2-0x4a]
  412704:	inc    esi
  412705:	xchg   edi,eax
  412706:	sub    al,0xdf
  412708:	adc    eax,0x33552c88
  41270d:	lods   al,BYTE PTR ds:[esi]
  41270e:	dec    edx
  41270f:	nop
  412710:	jecxz  0x412726
  412712:	addr16 jne 0x41278b
  412715:	imul   BYTE PTR [ecx+esi*8]
  412718:	mov    BYTE PTR [ebp+ecx*8-0x346e28e6],dl
  41271f:	mov    bh,0x33
  412721:	stos   BYTE PTR es:[edi],al
  412722:	outs   dx,BYTE PTR fs:[esi]
  412724:	in     eax,dx
  412725:	ret    
  412726:	lock mov ?,WORD PTR [ebx+0x41]
  41272a:	inc    eax
  41272b:	ror    DWORD PTR ss:[ecx+esi*2-0x1e],0x9d
  412731:	cmp    al,0xb2
  412733:	stc    
  412734:	imul   edi,DWORD PTR [ebx-0xf],0x81993ca5
  41273b:	inc    ebp
  41273c:	dec    ebx
  41273d:	aam    0xc9
  41273f:	jp     0x412790
  412741:	push   ebp
  412742:	push   ds
  412743:	repz jne 0x412710
  412746:	retf   0x8ccd
  412749:	inc    edx
  41274a:	into   
  41274b:	mov    esi,ecx
  41274d:	stc    
  41274e:	jl     0x4126fa
  412750:	or     ah,BYTE PTR [edi]
  412752:	lock dec ebx
  412754:	leave  
  412755:	and    bh,al
  412757:	mov    eax,0x568945dd
  41275c:	add    BYTE PTR [edx],al
  41275e:	imul   esp,DWORD PTR [ecx+edi*1-0x19276caf],0x11
  412766:	aad    0x6f
  412768:	mov    bp,0x1e8c
  41276c:	xor    al,0xd8
  41276e:	xchg   edx,ebp
  412770:	sbb    BYTE PTR [edx-0x7e],0x74
  412774:	fld    TBYTE PTR [eax-0x7352c942]
  41277a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41277b:	xor    ebx,DWORD PTR [ebp-0x46ba814c]
  412781:	mov    edx,0xc9084522
  412786:	ror    BYTE PTR [edi],cl
  412788:	sbb    al,0x55
  41278a:	ss clc 
  41278c:	inc    ecx
  41278d:	cld    
  41278e:	(bad)  
  41278f:	(bad)  
  412790:	stos   BYTE PTR es:[edi],al
  412791:	mov    esi,0x1a653d3a
  412796:	inc    ebp
  412797:	fwait
  412798:	imul   ebp,DWORD PTR [edx+0x2c05420d],0xffffffc7
  41279f:	pop    ebx
  4127a0:	xchg   ebp,edx
  4127a2:	js     0x412748
  4127a4:	in     eax,0x5a
  4127a6:	push   ecx
  4127a7:	enter  0x7e20,0x60
  4127ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ac:	jno    0x41275a
  4127ae:	pushf  
  4127af:	out    dx,eax
  4127b0:	mov    edi,0xd733442a
  4127b5:	xchg   ecx,eax
  4127b6:	pusha  
  4127b7:	push   ecx
  4127b8:	and    dl,BYTE PTR [esi+0x232ea0b3]
  4127be:	xchg   esi,eax
  4127bf:	inc    dl
  4127c1:	ins    BYTE PTR es:[edi],dx
  4127c2:	xchg   edi,eax
  4127c3:	aad    0x4e
  4127c5:	test   eax,0xbac2317b
  4127ca:	scas   al,BYTE PTR es:[edi]
  4127cb:	jle    0x412838
  4127cd:	cmp    ch,BYTE PTR [esi-0x59324780]
  4127d3:	stos   BYTE PTR es:[edi],al
  4127d4:	jl     0x41283d
  4127d6:	pusha  
  4127d7:	mov    ds,ecx
  4127d9:	mov    ds:0x488afb0a,al
  4127de:	es stc 
  4127e0:	add    BYTE PTR [ebx+0x2b667933],dl
  4127e6:	mov    ebp,0x26820633
  4127eb:	mov    bh,0x7b
  4127ed:	loope  0x412799
  4127ef:	inc    ebx
  4127f0:	stos   BYTE PTR es:[edi],al
  4127f1:	inc    eax
  4127f2:	mov    bl,0xb8
  4127f4:	jmp    0x6567:0xd4469dbd
  4127fb:	in     eax,dx
  4127fc:	mov    al,0x96
  4127fe:	sub    DWORD PTR [ebp+0x2583d818],eax
  412804:	pushf  
  412805:	(bad)  
  412806:	popf   
  412807:	cmc    
  412808:	int    0x5d
  41280a:	pop    es
  41280b:	fs cs add eax,0xdebeee4c
  412812:	dec    edx
  412813:	jge    0x412799
  412815:	mov    ah,0xe3
  412817:	push   ebx
  412818:	test   BYTE PTR [eax],al
  41281a:	fiadd  WORD PTR cs:[esi+0x58588f34]
  412821:	ss in  eax,dx
  412823:	inc    eax
  412824:	std    
  412825:	loopne 0x4127e9
  412827:	outs   dx,BYTE PTR ds:[esi]
  412828:	xchg   ecx,eax
  412829:	popf   
  41282a:	arpl   WORD PTR [ecx],ax
  41282c:	mov    ebx,eax
  41282e:	pushf  
  41282f:	push   ebx
  412830:	pop    ebp
  412831:	jmp    0x412879
  412833:	push   edi
  412834:	and    eax,0x617fb217
  412839:	dec    ecx
  41283a:	or     eax,0x8f3116b2
  41283f:	dec    edx
  412840:	xchg   BYTE PTR [ebp+0x2402cff9],ah
  412846:	fs jge 0x412819
  412849:	add    ch,BYTE PTR [ebx-0x4d]
  41284c:	sub    edi,DWORD PTR [eax]
  41284e:	and    al,0x48
  412850:	aaa    
  412851:	mov    ds:0xbe4f37ed,al
  412856:	mov    al,ds:0xbc11f4e1
  41285b:	mov    edi,0x683fa450
  412860:	pop    es
  412861:	aaa    
  412862:	jmp    FWORD PTR [edx-0x57f3cb12]
  412868:	mov    ds:0xed55d31c,al
  41286d:	push   esi
  41286e:	loop   0x41282b
  412870:	pop    ecx
  412871:	jb     0x412804
  412873:	test   BYTE PTR [ebp-0x3533ddeb],0x1c
  41287a:	popf   
  41287b:	or     DWORD PTR [ebx+0x5872f29e],ebx
  412881:	mov    DWORD PTR gs:[esi-0x709ecd3a],edi
  412888:	cmp    esp,edx
  41288a:	mov    BYTE PTR [eax+0x2ea2825f],cl
  412890:	frstor [eax+0x31]
  412893:	bound  ebp,QWORD PTR [edi]
  412895:	in     eax,dx
  412896:	jle    0x4128c5
  412898:	or     eax,0xd8a66a39
  41289d:	push   0x80fe159e
  4128a2:	mov    ds:0xd09e2966,al
  4128a7:	(bad)  
  4128a8:	(bad)  
  4128a9:	les    ecx,FWORD PTR [ebx-0x53]
  4128ac:	ror    DWORD PTR ds:0xb4dcb27,0xd3
  4128b3:	pop    edx
  4128b4:	fld    TBYTE PTR es:[ebp-0x79]
  4128b8:	or     al,0xa3
  4128ba:	sbb    ah,BYTE PTR [esi+ecx*2+0x1b]
  4128be:	aas    
  4128bf:	fndisi(8087 only) 
  4128c1:	mov    BYTE PTR [ebp-0xd],dh
  4128c4:	std    
  4128c5:	pop    ebx
  4128c6:	mov    al,ds:0xf64cb9a5
  4128cb:	pushf  
  4128cc:	push   0xab4f69a3
  4128d1:	fucomip st,st(2)
  4128d3:	data16 sub al,0x25
  4128d6:	push   eax
  4128d7:	fadd   QWORD PTR [eax+0x2b896db5]
  4128dd:	les    esi,FWORD PTR [esi]
  4128df:	and    DWORD PTR [eax],edi
  4128e1:	fs call 0x3a4e2d9d
  4128e7:	push   eax
  4128e8:	in     eax,0x13
  4128ea:	repz push esp
  4128ec:	inc    ecx
  4128ed:	inc    edi
  4128ee:	jl     0x412920
  4128f0:	(bad)  
  4128f2:	cs repnz dec ebp
  4128f5:	out    dx,eax
  4128f6:	ja     0x4128db
  4128f8:	inc    esp
  4128f9:	inc    ebx
  4128fa:	and    esi,esp
  4128fc:	leave  
  4128fd:	mov    ecx,0x8267ca21
  412902:	call   0x1c4f:0x4d2dc67f
  412909:	das    
  41290a:	popa   
  41290b:	icebp  
  41290c:	pop    es
  41290d:	push   0x817a48d2
  412912:	or     eax,0x3227b62e
  412917:	xor    DWORD PTR [edx+ebp*8],ecx
  41291a:	dec    ebx
  41291b:	push   ds
  41291c:	call   0x104c27c5
  412921:	pop    esi
  412922:	pop    esi
  412923:	mov    cl,0x6d
  412925:	jo     0x41294a
  412927:	xchg   edx,eax
  412928:	dec    esi
  412929:	frstor [ecx]
  41292b:	push   eax
  41292c:	push   ebx
  41292d:	or     DWORD PTR [ebx-0x34d0ccba],0x53
  412934:	adc    DWORD PTR [ecx+0x4fb57484],eax
  41293a:	jbe    0x4128e3
  41293c:	or     eax,0xfe4b7cd2
  412941:	cmp    ecx,ebp
  412943:	mov    WORD PTR [ecx],es
  412945:	push   eax
  412946:	shl    BYTE PTR [edi+ebx*2+0x3d],cl
  41294a:	fidivr DWORD PTR [edi+0x2ac90f20]
  412950:	aam    0xa8
  412952:	push   ds
  412953:	mov    dl,0x27
  412955:	mov    bl,0x2f
  412957:	mov    edi,0x29ce63fb
  41295c:	int    0x53
  41295e:	test   al,0xa
  412960:	sar    BYTE PTR [ebp+esi*2+0x34],0x8
  412965:	sub    ch,BYTE PTR [ecx+ebx*4-0x60]
  412969:	sub    DWORD PTR [ebx-0x3b],esp
  41296c:	fdiv   DWORD PTR [ebx]
  41296e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412970:	inc    ecx
  412971:	std    
  412972:	scas   al,BYTE PTR es:[edi]
  412973:	in     eax,dx
  412974:	fwait
  412975:	sub    DWORD PTR [edi+0x4e429dc4],0x10
  41297c:	adc    al,0xe2
  41297e:	push   cs
  41297f:	mov    bh,0xc3
  412981:	retf   0x46be
  412984:	and    eax,0x8b6fbbb2
  412989:	cwde   
  41298a:	rol    BYTE PTR [ebx+0x128dd607],cl
  412990:	sbb    bh,dh
  412992:	or     al,0x9
  412994:	xchg   ecx,eax
  412995:	ret    
  412996:	(bad)  
  412997:	mov    esp,0x74efa18a
  41299c:	sub    bl,BYTE PTR [edx+edi*1+0x10]
  4129a0:	sar    ah,cl
  4129a2:	enter  0x4dcd,0xaf
  4129a6:	addr16 sahf 
  4129a8:	push   esi
  4129a9:	pop    es
  4129aa:	jle    0x4129ef
  4129ac:	scas   al,BYTE PTR es:[edi]
  4129ad:	and    BYTE PTR [ecx-0x7a],ah
  4129b0:	in     eax,dx
  4129b1:	sub    DWORD PTR [edi+ebx*8+0x2c],esp
  4129b5:	or     ah,bh
  4129b7:	jno    0x4129dc
  4129b9:	xchg   ebp,eax
  4129ba:	sbb    ch,BYTE PTR [eax]
  4129bc:	int    0x96
  4129be:	fild   DWORD PTR [ebp-0xd]
  4129c1:	mov    bx,0x7231
  4129c5:	adc    ah,cl
  4129c7:	xchg   DWORD PTR [esp+edi*1+0x1e],ecx
  4129cb:	or     eax,0xa583aca1
  4129d0:	xor    eax,0x6a5387f7
  4129d5:	imul   ebp,ecx,0xcb1ea8b2
  4129db:	prefetch (bad)
  4129dc:	or     eax,0x133a4fed
  4129e1:	xor    al,0x2e
  4129e3:	mov    WORD PTR [eax],ss
  4129e5:	cmp    ebp,0x5893e230
  4129eb:	cli    
  4129ec:	mov    ?,WORD PTR [eax]
  4129ee:	stc    
  4129ef:	je     0x41299f
  4129f1:	mov    ds:0x52ed0c38,eax
  4129f6:	jmp    0x412a5a
  4129f8:	bound  ebp,QWORD PTR [ecx+0x35]
  4129fb:	ja     0x4129cf
  4129fd:	scas   al,BYTE PTR es:[edi]
  4129fe:	sub    al,0x83
  412a00:	in     eax,0xeb
  412a02:	xor    al,0x94
  412a04:	stc    
  412a05:	pop    ebx
  412a06:	jns    0x412a64
  412a08:	data16 (bad) 
  412a0a:	cdq    
  412a0b:	dec    edi
  412a0c:	push   0xc607d36a
  412a11:	(bad)  
  412a12:	mov    ds:0x10a452bc,al
  412a17:	dec    esp
  412a18:	add    BYTE PTR [eax+ebp*2],bh
  412a1b:	in     al,dx
  412a1c:	jo     0x412a0d
  412a1e:	mov    ch,0xb0
  412a20:	sahf   
  412a21:	loop   0x412a69
  412a23:	and    dl,al
  412a25:	add    eax,DWORD PTR [eax-0x80]
  412a28:	test   BYTE PTR [eax-0x37],0xda
  412a2c:	enter  0x94b5,0x19
  412a30:	xor    al,0x2
  412a32:	adc    BYTE PTR [ebp+0x37],ah
  412a35:	pop    esp
  412a36:	inc    esp
  412a37:	leave  
  412a38:	add    DWORD PTR [esi-0x603041fb],ecx
  412a3e:	aas    
  412a3f:	fidivr WORD PTR [ebx+0x10044d41]
  412a45:	stos   DWORD PTR es:[edi],eax
  412a46:	mov    bl,0xf
  412a48:	jmp    0x4129e6
  412a4a:	dec    eax
  412a4b:	xchg   edx,eax
  412a4c:	(bad)  [esi+0x5bf207c]
  412a52:	jp     0x4129db
  412a54:	loope  0x412a34
  412a56:	icebp  
  412a57:	stos   BYTE PTR es:[edi],al
  412a58:	and    al,0x11
  412a5a:	int3   
  412a5b:	inc    ecx
  412a5c:	das    
  412a5d:	inc    edi
  412a5e:	ret    
  412a5f:	mov    esi,0xb93169cb
  412a64:	mov    cs,WORD PTR [edx+0x168e7928]
  412a6a:	imul   esp,ebp,0x2f
  412a6d:	stos   BYTE PTR es:[edi],al
  412a6e:	push   es
  412a6f:	and    ah,bl
  412a71:	xor    cl,BYTE PTR [ecx+0x3f]
  412a74:	xor    al,0xb7
  412a76:	pop    ss
  412a77:	inc    edx
  412a78:	add    al,BYTE PTR [edx-0x34d6f93b]
  412a7e:	mov    bh,0x40
  412a80:	lods   al,BYTE PTR ds:[esi]
  412a81:	ds js  0x412a61
  412a84:	push   ecx
  412a85:	mov    ah,BYTE PTR [edi-0x7]
  412a88:	std    
  412a89:	adc    eax,0xd66c512e
  412a8e:	and    DWORD PTR [eax+0x6686c75b],esi
  412a94:	mov    edi,0x9119456d
  412a99:	bound  esi,QWORD PTR [eax]
  412a9b:	jbe    0x412a26
  412a9d:	icebp  
  412a9e:	aaa    
  412a9f:	lea    ecx,[edi-0x17]
  412aa2:	shl    BYTE PTR [ebp-0x53],0xc2
  412aa6:	mov    ebx,0x9b5fab01
  412aab:	fwait
  412aac:	sub    DWORD PTR [ebx-0x10],0xffffff82
  412ab0:	mov    al,ds:0xa94d557e
  412ab5:	fiadd  WORD PTR [eax+0x6dcf707]
  412abb:	aam    0xd0
  412abd:	mov    cl,0x7f
  412abf:	sub    dh,BYTE PTR [ecx+edx*4]
  412ac2:	inc    ecx
  412ac3:	ret    0x4b74
  412ac6:	ss jmp 0x99d:0x8cc7797e
  412ace:	push   ebp
  412acf:	lds    eax,FWORD PTR [ebp-0x29]
  412ad2:	int3   
  412ad3:	das    
  412ad4:	enter  0x438d,0x85
  412ad8:	rol    DWORD PTR [esi+0xc19744c],1
  412ade:	push   esp
  412adf:	cmp    BYTE PTR [esi+0x1b],0x8e
  412ae3:	cmp    eax,0x169f9af9
  412ae8:	sbb    al,0xc9
  412aea:	jecxz  0x412ab9
  412aec:	sub    al,BYTE PTR [ecx+0x7c]
  412aef:	mov    DWORD PTR [edx-0x535e9c44],edx
  412af5:	mov    ch,0x66
  412af7:	icebp  
  412af8:	int    0x95
  412afa:	xor    eax,0x7da9a09f
  412aff:	ret    
  412b00:	adc    esp,DWORD PTR [ecx]
  412b02:	cs pop ebx
  412b04:	in     eax,dx
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	cmc    
  412b07:	mov    BYTE PTR [esi-0x6d2ce44c],al
  412b0d:	sbb    eax,0x71d7b1fa
  412b12:	adc    ecx,DWORD PTR [edi+0x3ee81243]
  412b18:	sbb    eax,0x694ce619
  412b1d:	nop
  412b1e:	cli    
  412b1f:	cld    
  412b20:	es (bad) 
  412b22:	imul   eax,DWORD PTR [edx+0x75],0x18
  412b26:	pop    esp
  412b27:	fcomp  DWORD PTR [edi]
  412b29:	adc    DWORD PTR ds:0x5fa1a688,ecx
  412b2f:	jnp    0x412ba3
  412b31:	jp     0x412b96
  412b33:	inc    edx
  412b34:	add    ecx,DWORD PTR [esi-0x44]
  412b37:	sub    esp,DWORD PTR [ebx+0x5b]
  412b3a:	stos   DWORD PTR es:[edi],eax
  412b3b:	test   DWORD PTR [ecx+0x35],edi
  412b3e:	in     eax,dx
  412b3f:	sti    
  412b40:	mov    ebx,0xc40ec835
  412b45:	or     al,0x38
  412b47:	shl    DWORD PTR [ebp-0xf79de5d],0xe1
  412b4e:	loop   0x412b13
  412b50:	out    dx,al
  412b51:	lods   eax,DWORD PTR ds:[esi]
  412b52:	shr    BYTE PTR [esi-0x39],cl
  412b55:	imul   esi,esi,0x43
  412b58:	lahf   
  412b59:	mov    al,0x9f
  412b5b:	and    DWORD PTR [edx],0x991fd285
  412b61:	loopne 0x412b6c
  412b63:	out    dx,al
  412b64:	(bad)  
  412b65:	stc    
  412b66:	push   ds
  412b67:	loop   0x412bb4
  412b69:	mov    ch,0x7f
  412b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6c:	xor    al,0x14
  412b6e:	idiv   DWORD PTR [ecx-0x55cbd4f7]
  412b74:	pop    ss
  412b75:	aaa    
  412b76:	sub    DWORD PTR [ebp+eiz*2+0x7461ba5a],ecx
  412b7d:	inc    esp
  412b7e:	mov    eax,0x18c044f8
  412b83:	inc    ebx
  412b84:	sar    DWORD PTR [ecx-0x3e],1
  412b87:	imul   edx,DWORD PTR [ebx],0x1b808a3c
  412b8d:	cmp    bl,ch
  412b8f:	jl     0x412ba1
  412b91:	jnp    0x412bbf
  412b93:	xor    DWORD PTR [ebx+0x6ec08bc7],ecx
  412b99:	jge    0x412b81
  412b9b:	push   0x659963b5
  412ba0:	call   0x968b:0x6180a99a
  412ba7:	mov    ebx,0x35b65388
  412bac:	adc    DWORD PTR [esi-0x67],edi
  412baf:	retf   
  412bb0:	add    dh,BYTE PTR [ebp+edx*8+0x7e]
  412bb4:	call   0xb4c7ae59
  412bb9:	add    edx,DWORD PTR [eax]
  412bbb:	jmp    0x412baa
  412bbd:	mov    ebx,gs
  412bbf:	jg     0x412be0
  412bc1:	sbb    BYTE PTR [ebp+0x24],cl
  412bc4:	or     eax,0x99d3501e
  412bc9:	mov    ss,edi
  412bcb:	xor    DWORD PTR [ebx],eax
  412bcd:	dec    ebx
  412bce:	repz mov ch,0xa2
  412bd1:	adc    al,0xf6
  412bd3:	jae    0x412bae
  412bd5:	daa    
  412bd6:	or     ebp,DWORD PTR [esi]
  412bd8:	shr    ebp,1
  412bda:	pop    edi
  412bdb:	dec    esp
  412bdc:	jp     0x412b79
  412bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bdf:	cmp    eax,0xf46c19db
  412be4:	add    BYTE PTR [edx-0x37],0x64
  412be8:	mov    cl,0xc8
  412bea:	das    
  412beb:	bswap  ebx
  412bed:	sbb    BYTE PTR [ebx-0x38c74b16],ah
  412bf3:	out    0x33,eax
  412bf5:	mov    dh,0xb1
  412bf7:	add    eax,0x361fb40e
  412bfc:	das    
  412bfd:	retf   
  412bfe:	xor    al,0xc9
  412c00:	xchg   ebp,eax
  412c01:	stos   DWORD PTR es:[edi],eax
  412c02:	daa    
  412c03:	retf   0x94be
  412c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c07:	mov    ds:0xd44f46b1,eax
  412c0c:	imul   eax,DWORD PTR [eax],0x8131988e
  412c12:	sbb    ecx,DWORD PTR gs:[edx-0x58206796]
  412c19:	mov    eax,ds:0xec80da0b
  412c1e:	pop    esi
  412c1f:	xor    BYTE PTR ds:0x62a07c2c,dl
  412c25:	xchg   bh,dh
  412c27:	dec    edx
  412c28:	mov    esi,0x84b957f0
  412c2d:	lea    esp,[ebp-0x3fdcfe54]
  412c33:	xor    ch,0x32
  412c36:	push   ds
  412c37:	mov    ch,ch
  412c39:	dec    esp
  412c3a:	mov    al,ss:0xe0f3359a
  412c40:	daa    
  412c41:	and    DWORD PTR [ebx],0x11
  412c44:	sub    al,0x64
  412c46:	(bad)  
  412c47:	xchg   edi,eax
  412c48:	loop   0x412c68
  412c4a:	sbb    BYTE PTR [ecx+0x50],0x61
  412c4e:	mov    dl,0x2e
  412c50:	jge    0x412c1d
  412c52:	popf   
  412c53:	sub    al,0x91
  412c55:	ins    BYTE PTR es:[edi],dx
  412c56:	ss (bad) 
  412c58:	int    0x37
  412c5a:	push   ebp
  412c5b:	fwait
  412c5c:	(bad)  
  412c5d:	jp     0x412cd7
  412c5f:	jge    0x412cd1
  412c61:	jle    0x412c3d
  412c63:	and    WORD PTR [edi+ecx*2],cx
  412c67:	cmc    
  412c68:	jb     0x412c72
  412c6a:	and    esi,DWORD PTR [eax]
  412c6c:	es sbb eax,0x80c56ea4
  412c72:	pop    es
  412c73:	fisttp WORD PTR [esi]
  412c75:	xchg   edx,eax
  412c76:	or     esp,DWORD PTR [edi+0x40]
  412c79:	jo     0x412c88
  412c7b:	xchg   ebp,eax
  412c7c:	mov    ah,0x63
  412c7e:	loopne 0x412cdd
  412c80:	test   ebx,edi
  412c82:	cwde   
  412c83:	mov    BYTE PTR [edx+0x25],bl
  412c86:	xlat   BYTE PTR ds:[ebx]
  412c87:	cmp    ecx,ebp
  412c89:	jbe    0x412c0d
  412c8b:	mov    dh,0x88
  412c8d:	lock sub eax,0x7fe7c857
  412c93:	mov    ebx,0x79de7c0a
  412c98:	(bad)  
  412c9a:	xchg   edi,eax
  412c9b:	lds    esi,FWORD PTR [esi+0x73]
  412c9e:	sbb    BYTE PTR [edi],bh
  412ca0:	and    esi,ecx
  412ca2:	jg     0x412cdf
  412ca4:	mov    ecx,DWORD PTR [edx+0x5c]
  412ca7:	adc    al,0xa7
  412ca9:	xchg   esp,eax
  412caa:	mov    ebp,0x94991660
  412caf:	ja     0x412c88
  412cb1:	outs   dx,DWORD PTR ds:[esi]
  412cb2:	(bad)  
  412cb3:	mov    dl,BYTE PTR [ecx-0x2a9923fd]
  412cb9:	push   ds
  412cba:	push   esi
  412cbb:	mul    DWORD PTR [edi-0xd441cd9]
  412cc1:	xchg   ebx,eax
  412cc2:	dec    ebx
  412cc3:	pusha  
  412cc4:	inc    ebx
  412cc5:	or     al,0x4a
  412cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc8:	mov    eax,0xa2c9f88d
  412ccd:	outs   dx,BYTE PTR ds:[esi]
  412cce:	int    0x23
  412cd0:	sbb    BYTE PTR [edi-0x59351107],0x73
  412cd7:	lods   eax,DWORD PTR ds:[esi]
  412cd8:	cmp    edx,0xfffffff7
  412cdb:	rcr    BYTE PTR [ecx+eax*1+0x172a8cb],0xfe
  412ce3:	mov    dh,0xbe
  412ce5:	jne    0x412d63
  412ce7:	jl     0x412c9e
  412ce9:	out    0xb6,al
  412ceb:	cmp    eax,DWORD PTR [ebx+edx*1]
  412cee:	into   
  412cef:	xor    eax,0x18099025
  412cf4:	mov    bl,0xc5
  412cf6:	test   DWORD PTR [esi],ebx
  412cf8:	pop    esi
  412cf9:	retf   0x4ef6
  412cfc:	scas   al,BYTE PTR es:[edi]
  412cfd:	cmp    eax,0xdc218416
  412d02:	outs   dx,DWORD PTR ds:[esi]
  412d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d04:	push   ebp
  412d05:	sar    cl,1
  412d07:	dec    edi
  412d08:	stos   BYTE PTR es:[edi],al
  412d09:	and    bl,0xe2
  412d0c:	sub    eax,0x4f48a53c
  412d11:	sub    eax,DWORD PTR [ecx+0x60]
  412d14:	cli    
  412d15:	(bad)  [eax+0x24]
  412d18:	inc    ebp
  412d19:	in     eax,dx
  412d1a:	imul   ebx,DWORD PTR [esi-0x35],0x6f
  412d1e:	add    DWORD PTR [edi+0x6f18fa12],edx
  412d24:	(bad)  
  412d25:	loop   0x412d2c
  412d27:	sub    BYTE PTR [ebx+0x1],dh
  412d2a:	pop    eax
  412d2b:	test   al,0xc1
  412d2d:	cmp    bh,BYTE PTR [ebx-0x12e15fe6]
  412d33:	push   ecx
  412d34:	imul   edx,DWORD PTR [bx+di-0x1c],0xffffffd8
  412d39:	fs cld 
  412d3b:	sbb    edi,esi
  412d3d:	(bad)  
  412d3f:	sub    ebp,0xffffffa1
  412d42:	or     cl,BYTE PTR [ecx+ecx*1+0x62a4e716]
  412d49:	pushf  
  412d4a:	outs   dx,BYTE PTR ds:[esi]
  412d4b:	retf   0xc5e9
  412d4e:	out    dx,eax
  412d4f:	xor    BYTE PTR [edi+0x5f0fb39d],ah
  412d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d56:	lahf   
  412d57:	pop    ss
  412d58:	pop    edi
  412d59:	out    dx,eax
  412d5a:	mov    ebx,0x65773c39
  412d5f:	mov    ch,0xe3
  412d61:	mov    edx,DWORD PTR [eax-0x3d]
  412d64:	std    
  412d65:	dec    edx
  412d66:	push   ebp
  412d67:	shl    DWORD PTR [ebp-0x6],0x95
  412d6b:	xchg   esi,eax
  412d6c:	add    eax,0x4833faff
  412d71:	leave  
  412d72:	outs   dx,BYTE PTR ds:[esi]
  412d73:	enter  0x79f9,0xad
  412d77:	test   al,0xa3
  412d79:	or     DWORD PTR [eax-0x54f10aa1],ebx
  412d7f:	adc    eax,0x1071b396
  412d84:	add    al,0x2d
  412d86:	dec    eax
  412d87:	dec    esi
  412d88:	int3   
  412d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d8a:	not    DWORD PTR [edx]
  412d8c:	dec    ebx
  412d8d:	hlt    
  412d8e:	cdq    
  412d8f:	into   
  412d90:	pop    ebx
  412d91:	ins    BYTE PTR es:[edi],dx
  412d92:	and    al,0x8
  412d94:	push   es
  412d95:	xchg   ecx,eax
  412d96:	scas   eax,DWORD PTR es:[edi]
  412d97:	mov    bl,dl
  412d99:	jns    0x412dde
  412d9b:	sahf   
  412d9c:	cld    
  412d9d:	ret    
  412d9e:	aad    0xf0
  412da0:	retf   
  412da1:	xchg   esp,eax
  412da2:	sar    BYTE PTR [esi-0x4],cl
  412da5:	test   eax,0x820ad076
  412daa:	in     eax,dx
  412dab:	xor    al,0xe1
  412dad:	enter  0x250f,0xfc
  412db1:	and    edx,edi
  412db3:	loope  0x412d38
  412db5:	xlat   BYTE PTR ds:[ebx]
  412db6:	pop    ss
  412db7:	xchg   ebx,eax
  412db8:	lahf   
  412db9:	mov    eax,ds:0xdab03e02
  412dbe:	clc    
  412dbf:	ror    DWORD PTR [ebx+0x2f87366],cl
  412dc5:	xor    al,0x4d
  412dc7:	push   edi
  412dc8:	daa    
  412dc9:	fnstcw WORD PTR [edx]
  412dcb:	pminub mm4,QWORD PTR [esi]
  412dce:	adc    DWORD PTR es:[ebx],0xffffff85
  412dd2:	or     eax,0x2cdd342f
  412dd7:	inc    ebp
  412dd8:	or     eax,0xeddaf919
  412ddd:	or     esi,ebp
  412ddf:	mov    eax,ds:0xea28cc8d
  412de4:	pop    ebp
  412de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412de6:	or     ah,ch
  412de8:	xchg   ecx,eax
  412de9:	mov    al,0x46
  412deb:	xor    esp,DWORD PTR [ecx+0x77]
  412dee:	cmp    ecx,DWORD PTR [esi+ecx*4+0x4403f16e]
  412df5:	mov    bl,0xc2
  412df7:	and    edx,ecx
  412df9:	sti    
  412dfa:	cmp    eax,0xe62906a3
  412dff:	xchg   esi,eax
  412e00:	mov    dh,0xa5
  412e02:	mov    edi,0x9e2196f5
  412e07:	dec    esp
  412e08:	or     al,0x2c
  412e0a:	in     al,dx
  412e0b:	in     al,0x2b
  412e0d:	mov    BYTE PTR [ecx],dh
  412e0f:	xor    eax,0x7954aba1
  412e14:	push   eax
  412e15:	mov    ds:0xd455f5bf,al
  412e1a:	push   es
  412e1b:	jae    0x412df5
  412e1d:	xchg   ebx,eax
  412e1e:	jge    0x412e1e
  412e20:	adc    edx,edx
  412e22:	xor    bh,bl
  412e24:	and    DWORD PTR [edx+0x79],edx
  412e27:	xchg   ecx,eax
  412e28:	sub    al,0x8f
  412e2a:	and    DWORD PTR [ecx-0x65],ebx
  412e2d:	and    DWORD PTR [edi],0xffffff82
  412e30:	repz add dh,BYTE PTR [ebx+0x5eae67d]
  412e37:	pop    eax
  412e38:	(bad)  
  412e39:	cmp    edx,ecx
  412e3b:	leave  
  412e3c:	add    DWORD PTR [ebx+0x75],eax
  412e3f:	jl     0x412e83
  412e41:	inc    ebx
  412e42:	enter  0x5776,0xd3
  412e46:	test   eax,0xab046e7e
  412e4b:	add    ch,cl
  412e4d:	sbb    al,0xca
  412e50:	jmp    0xadcb42ae
  412e55:	shl    edi,0xd7
  412e58:	mov    ah,0x53
  412e5a:	dec    edi
  412e5b:	mov    edi,DWORD PTR [esi+0x1c]
  412e5e:	aas    
  412e5f:	mov    al,ds:0xd263afc1
  412e64:	mov    ebp,0x952477fd
  412e69:	bound  ecx,QWORD PTR ss:[eax+esi*4-0x68cf9c4f]
  412e71:	sbb    eax,0xe12d0c6d
  412e76:	arpl   WORD PTR [edx],sp
  412e78:	push   0x74bae49d
  412e7d:	nop
  412e7e:	repnz daa 
  412e80:	sahf   
  412e81:	mov    cl,0x30
  412e83:	xor    ebp,ebx
  412e85:	sub    eax,0xeb508b1d
  412e8a:	ds pop esi
  412e8c:	sbb    eax,0xc01278ac
  412e91:	les    edi,FWORD PTR [ebx+0x12]
  412e94:	test   eax,0x54262f1
  412e99:	imul   edi,DWORD PTR [esi-0x34a1e421],0xffffff94
  412ea0:	aaa    
  412ea1:	cmp    BYTE PTR ds:0x7cec673e,ch
  412ea7:	inc    esp
  412ea8:	dec    esi
  412ea9:	mov    bh,0xf6
  412eab:	loopne 0x412e69
  412ead:	and    al,0xef
  412eaf:	pop    ebp
  412eb0:	and    dl,dl
  412eb2:	dec    esp
  412eb3:	xor    ah,bh
  412eb5:	aam    0x22
  412eb7:	retf   0xd8d8
  412eba:	adc    al,0xc9
  412ebc:	fiadd  WORD PTR [ecx*1+0x2d8fd8a6]
  412ec3:	mov    edx,0xeca27d97
  412ec8:	ret    0xf7a7
  412ecb:	(bad)  
  412ecc:	loopne 0x412ef7
  412ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ecf:	lahf   
  412ed0:	xor    BYTE PTR [ebx],bl
  412ed2:	push   ecx
  412ed3:	xchg   ecx,eax
  412ed4:	add    BYTE PTR [eax-0x32],bl
  412ed7:	or     al,0x6d
  412ed9:	cmp    bl,BYTE PTR [ebp+0x79406ddb]
  412edf:	mov    gs,WORD PTR [esi]
  412ee1:	aas    
  412ee2:	cmp    edi,DWORD PTR [eax+0x6aa403ba]
  412ee8:	and    BYTE PTR [ebx-0x6d],0x32
  412eec:	dec    eax
  412eed:	out    dx,eax
  412eee:	cmp    bh,ch
  412ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef1:	pop    ebp
  412ef2:	pop    es
  412ef3:	in     eax,dx
  412ef4:	cmc    
  412ef5:	inc    edx
  412ef6:	push   cs
  412ef7:	int3   
  412ef8:	in     eax,dx
  412ef9:	and    al,0x77
  412efb:	mov    ah,0xd2
  412efd:	ins    BYTE PTR es:[edi],dx
  412efe:	xchg   BYTE PTR [ebp-0x4b97039a],cl
  412f04:	shl    BYTE PTR [edx-0x18e2f49d],1
  412f0a:	popf   
  412f0b:	jo     0x2368ae6a
  412f11:	xchg   ebp,eax
  412f12:	icebp  
  412f13:	sub    al,0xe5
  412f15:	mov    ss,WORD PTR [esi]
  412f17:	push   0x4009e89d
  412f1c:	pop    ds
  412f1d:	mov    cl,0x95
  412f1f:	or     dh,BYTE PTR [ebx-0x52]
  412f22:	loop   0x412ee7
  412f24:	dec    eax
  412f25:	stc    
  412f26:	pushf  
  412f27:	test   eax,0xdf6a6ec8
  412f2c:	pop    ecx
  412f2d:	sub    esi,eax
  412f2f:	xor    BYTE PTR [edx+0x409f3a18],bh
  412f35:	les    ecx,FWORD PTR [ecx]
  412f37:	int    0x5b
  412f39:	or     BYTE PTR [esi],dl
  412f3b:	retf   
  412f3c:	imul   edx,DWORD PTR [edx+0x73],0xffffffde
  412f40:	mov    esi,esi
  412f42:	xchg   BYTE PTR [edx],bh
  412f44:	cmp    al,0x7f
  412f46:	add    eax,0x4882ac5b
  412f4b:	scas   al,BYTE PTR es:[edi]
  412f4c:	xchg   edx,eax
  412f4d:	mul    DWORD PTR [ebx]
  412f4f:	je     0x412f9b
  412f51:	out    0x58,eax
  412f53:	mov    ah,0xcf
  412f55:	jae    0x412f99
  412f57:	inc    esi
  412f58:	push   eax
  412f59:	xchg   esp,eax
  412f5a:	or     ch,al
  412f5c:	sahf   
  412f5d:	mov    bl,0xd8
  412f5f:	aad    0x2f
  412f61:	add    eax,0xf70a4d03
  412f66:	je     0x412f9d
  412f68:	xor    dh,ch
  412f6a:	scas   al,BYTE PTR es:[edi]
  412f6b:	mov    ah,0xbe
  412f6d:	imul   esi,edi,0xffffffc1
  412f70:	jp     0x412f41
  412f72:	daa    
  412f73:	and    ah,ch
  412f75:	ror    ebp,cl
  412f77:	mov    eax,ds:0x484ae1e7
  412f7c:	call   0x909b:0xae76e580
  412f83:	mov    bl,0x52
  412f85:	jbe    0x412f1f
  412f87:	sub    esp,DWORD PTR ds:0xbda8a6f6
  412f8d:	push   ss
  412f8e:	inc    edx
  412f8f:	inc    ebx
  412f90:	or     dh,BYTE PTR [edi-0x5ca4e77e]
  412f96:	sub    dl,BYTE PTR [eax]
  412f98:	test   al,0x21
  412f9a:	icebp  
  412f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f9c:	inc    ebx
  412f9d:	(bad)  
  412f9e:	jns    0x412f29
  412fa0:	add    DWORD PTR [edi-0x51],eax
  412fa3:	inc    edx
  412fa4:	shl    BYTE PTR [edi],0xdc
  412fa7:	sbb    DWORD PTR [ebp-0x1b2e3024],ecx
  412fad:	fcmovbe st,st(0)
  412faf:	adc    ch,0x37
  412fb2:	or     eax,0x7a60cf63
  412fb7:	dec    edx
  412fb8:	and    BYTE PTR [ebx],bh
  412fba:	inc    esp
  412fbb:	fdivr  st(6),st
  412fbd:	aad    0xd8
  412fbf:	xchg   dh,ch
  412fc1:	ja     0x412fd8
  412fc3:	dec    ecx
  412fc4:	xor    al,BYTE PTR [edi]
  412fc6:	(bad)  
  412fc7:	mov    bh,0x2e
  412fc9:	or     eax,0x4d6a7c4c
  412fce:	xchg   eax,esi
  412fd0:	push   es
  412fd1:	hlt    
  412fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd3:	sub    ebx,DWORD PTR [ecx+0x3e087361]
  412fd9:	adc    BYTE PTR [edi],dh
  412fdb:	mov    DWORD PTR [ecx-0x5a],ebp
  412fde:	outs   dx,BYTE PTR cs:[esi]
  412fe0:	inc    eax
  412fe1:	inc    esp
  412fe2:	cs fwait
  412fe4:	test   cl,bh
  412fe6:	dec    esi
  412fe7:	and    al,ch
  412fe9:	jg     0x412fd3
  412feb:	out    dx,al
  412fec:	jb     0x413010
  412fee:	push   ebx
  412fef:	xchg   esp,eax
  412ff0:	jne    0x412fc2
  412ff2:	imul   edi,DWORD PTR [eax+0x13],0xffffffda
  412ff6:	cs in  eax,dx
  412ff8:	sub    al,0x70
  412ffa:	add    DWORD PTR [esi],edi
  412ffc:	add    cl,BYTE PTR ds:0x5e29bac5
  413002:	dec    edx
  413003:	pop    ss
  413004:	inc    esi
  413005:	dec    edi
  413006:	add    esp,DWORD PTR [edx]
  413008:	sub    DWORD PTR [ebx+esi*2],0xffffffcc
  41300c:	int3   
  41300d:	add    cl,ch
  41300f:	lds    edx,FWORD PTR [ebp+0x7ee2ccd5]
  413015:	add    BYTE PTR ds:0xe9254f92,dl
  41301b:	cs cld 
  41301d:	std    
  41301e:	stos   DWORD PTR es:[edi],eax
  41301f:	cs hlt 
  413021:	and    al,0x81
  413023:	mov    ecx,ecx
  413025:	jecxz  0x413058
  413027:	sbb    al,0x3d
  413029:	fwait
  41302a:	out    0x6c,eax
  41302c:	icebp  
  41302d:	push   esi
  41302e:	inc    eax
  41302f:	jle    0x4130aa
  413031:	sbb    ch,BYTE PTR [eax+ecx*4]
  413034:	inc    ebx
  413035:	aam    0x2d
  413037:	add    al,ch
  413039:	ja     0x413092
  41303b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41303c:	xchg   esp,eax
  41303d:	pop    ebx
  41303e:	xchg   ebp,eax
  41303f:	xchg   ebp,eax
  413040:	dec    esp
  413041:	bound  edi,QWORD PTR [eax-0x5ba52148]
  413047:	fwait
  413048:	es mov bl,0x52
  41304b:	push   es
  41304c:	jae    0x413015
  41304e:	mov    ecx,DWORD PTR [esi]
  413050:	test   eax,0x4d23630b
  413055:	popa   
  413056:	jbe    0x41308d
  413058:	lock sbb cl,BYTE PTR [esi+eax*2-0x27]
  41305d:	jno    0x41307a
  41305f:	out    0xe,al
  413061:	test   eax,0xbbe6f2a6
  413066:	mov    esp,0x8f5a0cf3
  41306b:	std    
  41306c:	data16 jb 0x4130b5
  41306f:	mov    BYTE PTR [edx-0x150ddc71],al
  413075:	xchg   BYTE PTR [edx],cl
  413077:	pusha  
  413078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413079:	mov    WORD PTR [ebp-0x6c],bx
  41307d:	add    DWORD PTR [ebx+0x7e],esi
  413080:	clc    
  413081:	jnp    0x4130cd
  413083:	jle    0x413051
  413085:	cmp    ah,BYTE PTR [edx-0x51]
  413088:	push   edx
  413089:	dec    esp
  41308a:	imul   edx,DWORD PTR [ecx],0x3e
  41308d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41308f:	pop    es
  413090:	fstp   DWORD PTR [edi+0x3ad1d369]
  413096:	pop    ecx
  413097:	dec    esp
  413098:	sub    BYTE PTR [eax],0xc8
  41309b:	lods   al,BYTE PTR ds:[esi]
  41309c:	mov    cl,0x90
  41309e:	imul   edx,DWORD PTR [edi+0x1a],0x4e00ce12
  4130a5:	or     DWORD PTR [ebx+0x4c1be363],ebx
  4130ab:	mov    ch,0x35
  4130ad:	push   eax
  4130ae:	jo     0x41304b
  4130b0:	(bad)  
  4130b1:	cli    
  4130b2:	loop   0x413110
  4130b4:	mov    bl,0xa3
  4130b6:	lock push esi
  4130b8:	fs push esi
  4130ba:	inc    ebx
  4130bb:	xchg   DWORD PTR [ecx+0x22893f6e],edi
  4130c1:	sbb    dl,0x19
  4130c4:	push   ss
  4130c5:	push   eax
  4130c6:	(bad)  
  4130c7:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4130c9:	test   esp,0xede92e50
  4130cf:	outs   dx,DWORD PTR ds:[esi]
  4130d0:	xchg   ebx,eax
  4130d1:	out    dx,eax
  4130d2:	adc    edx,DWORD PTR [ebx]
  4130d4:	addr16 enter 0xfed5,0xb0
  4130d9:	inc    edi
  4130da:	(bad)  
  4130db:	sub    al,0xa6
  4130dd:	icebp  
  4130de:	mov    dh,0xf3
  4130e0:	jmp    0x413154
  4130e2:	outs   dx,BYTE PTR ds:[esi]
  4130e3:	xor    DWORD PTR [ecx+ebx*4+0x1f],0xffffffce
  4130e8:	dec    ebx
  4130e9:	push   0x7a59b2dc
  4130ee:	scas   eax,DWORD PTR es:[edi]
  4130ef:	push   esp
  4130f0:	mov    WORD PTR [eax+0x38ee46ea],ss
  4130f6:	push   eax
  4130f7:	xchg   DWORD PTR [edx],esp
  4130f9:	dec    eax
  4130fa:	sub    DWORD PTR [eax-0x64],esi
  4130fd:	dec    ebp
  4130fe:	sti    
  4130ff:	rcr    BYTE PTR [esi],1
  413101:	or     DWORD PTR [edi],edx
  413103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413104:	ds hlt 
  413106:	(bad)  
  413107:	jmp    0xb4d:0x9c259ff2
  41310e:	rol    DWORD PTR [eax-0x38490511],cl
  413114:	sahf   
  413115:	push   ss
  413116:	push   cs
  413117:	adc    dl,al
  413119:	bound  edi,QWORD PTR [ebx]
  41311b:	aam    0x17
  41311d:	stos   DWORD PTR es:[edi],eax
  41311e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311f:	fcomp  QWORD PTR [edi]
  413121:	dec    ebp
  413122:	test   DWORD PTR [eax],esp
  413124:	push   cs
  413125:	and    DWORD PTR [edx+esi*1],esp
  413128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413129:	push   ebx
  41312a:	sub    BYTE PTR [ebx+0x31],dh
  41312d:	jns    0x4130d8
  41312f:	pop    edi
  413130:	test   al,0x9e
  413132:	and    eax,0xaa3922f3
  413137:	xchg   BYTE PTR [ebx],ch
  413139:	int    0x3c
  41313b:	sub    bl,BYTE PTR [ebp-0x3c05873]
  413141:	sbb    esp,DWORD PTR ds:0x907d6a35
  413147:	adc    ebx,ebx
  413149:	ins    BYTE PTR es:[edi],dx
  41314a:	mov    ds:0xfb5fe0e8,al
  41314f:	push   edx
  413150:	dec    esi
  413151:	xchg   BYTE PTR [edi-0x1d],ch
  413154:	loopne 0x4130e2
  413156:	add    BYTE PTR [ecx-0x13e22ce2],ch
  41315c:	gs loop 0x41316e
  41315f:	rol    al,1
  413161:	mov    ecx,0xd1402369
  413166:	lahf   
  413167:	mov    esp,0xbbc3ed21
  41316c:	(bad)  
  41316d:	push   edi
  41316e:	add    bl,dl
  413170:	scas   eax,DWORD PTR es:[edi]
  413171:	dec    ebx
  413172:	mov    ebx,0x8f7c896d
  413177:	rol    ch,cl
  413179:	(bad)  
  41317a:	xchg   BYTE PTR [ecx-0x3b],ah
  41317d:	sar    DWORD PTR [ecx],cl
  41317f:	and    bh,0x30
  413182:	mov    ecx,0x5dfb48be
  413187:	inc    ebx
  413188:	pop    es
  413189:	inc    esi
  41318a:	shr    DWORD PTR [ebx],1
  41318c:	scas   al,BYTE PTR es:[edi]
  41318d:	mov    al,0x69
  41318f:	lahf   
  413190:	mov    esi,0x56b04d4f
  413195:	cmp    al,BYTE PTR [edx+0x46]
  413198:	mov    ebp,0x94ecbbed
  41319d:	gs mov dh,0xaa
  4131a0:	out    0xa0,al
  4131a2:	xchg   esp,eax
  4131a3:	xor    DWORD PTR [edi-0x4d00d254],0x3a676b88
  4131ad:	enter  0x2e59,0x99
  4131b1:	adc    edi,DWORD PTR [ebx+0x1eeb4fbd]
  4131b7:	test   esi,0x77218f9e
  4131bd:	(bad)  
  4131be:	lock xor ch,BYTE PTR [esi+ebp*4-0xcc9227]
  4131c6:	or     eax,0x80cd1409
  4131cb:	jb     0xeee247a3
  4131d1:	pop    edx
  4131d2:	inc    WORD PTR [esi+edi*2+0x22135815]
  4131da:	xor    dl,dl
  4131dc:	ret    
  4131dd:	icebp  
  4131de:	sbb    al,0xc8
  4131e0:	mov    ecx,0x98a07d98
  4131e5:	pop    eax
  4131e6:	jmp    0x4131b7
  4131e8:	push   edx
  4131e9:	pushf  
  4131ea:	fwait
  4131eb:	mov    ds:0x21d1d93c,eax
  4131f0:	mov    ebx,0x28864249
  4131f5:	mov    ds:0xecb645d4,al
  4131fa:	(bad)  
  4131fb:	ja     0x41320f
  4131fd:	or     al,0xdf
  4131ff:	jbe    0x413251
  413201:	fwait
  413202:	mov    ebp,eax
  413204:	aas    
  413205:	lods   eax,DWORD PTR ds:[esi]
  413206:	ins    BYTE PTR es:[edi],dx
  413207:	pusha  
  413208:	adc    edi,DWORD PTR [ebp-0x6d]
  41320b:	add    DWORD PTR [edi-0x253947fc],edx
  413211:	scas   eax,DWORD PTR es:[edi]
  413212:	adc    DWORD PTR [ecx+0x46],eax
  413215:	jne    0x4131ff
  413217:	fmul   DWORD PTR [edx+ebp*4-0x3f5959ad]
  41321e:	int    0x2d
  413220:	mov    esi,0x78b6a0e5
  413225:	clc    
  413226:	aad    0x7a
  413228:	push   eax
  413229:	stc    
  41322a:	xor    eax,DWORD PTR [edx+0x62]
  41322d:	imul   esi,DWORD PTR [ebx+0x63],0xa7a4c121
  413234:	int    0xb5
  413236:	push   ebx
  413237:	repnz test al,0x6d
  41323a:	lahf   
  41323b:	lods   eax,DWORD PTR ds:[esi]
  41323c:	mov    dh,0x17
  41323e:	jge    0x4131cf
  413240:	sub    ch,0x1e
  413243:	xchg   esi,eax
  413244:	stos   DWORD PTR es:[edi],eax
  413245:	inc    ebx
  413246:	jns    0x4131c9
  413248:	mov    dl,0x53
  41324a:	arpl   WORD PTR [ebp+edi*1+0x3],ax
  41324e:	mov    BYTE PTR [edx+0x15],bl
  413251:	xor    al,0xe9
  413253:	jp     0x4132cc
  413255:	cdq    
  413256:	inc    ebx
  413257:	lods   al,BYTE PTR ds:[esi]
  413258:	push   eax
  413259:	mov    cl,0x11
  41325b:	mov    al,0x42
  41325d:	jecxz  0x413201
  41325f:	sbb    ebp,ebp
  413261:	adc    ebx,DWORD PTR [edi]
  413263:	jnp    0x4132c8
  413265:	test   BYTE PTR [eiz*2+0x19ee715c],bl
  41326c:	mov    BYTE PTR [edi],bl
  41326e:	(bad)  
  41326f:	pop    ds
  413270:	dec    edx
  413271:	mov    al,ds:0x1b36016b
  413276:	enter  0xb8de,0xdf
  41327a:	test   bl,0xf3
  41327d:	push   0xbd8a9249
  413282:	aam    0x1b
  413284:	mov    al,0x36
  413286:	mov    eax,ds:0x76039c72
  41328b:	or     BYTE PTR [ebp-0x7f6602bb],ah
  413291:	ds pusha 
  413293:	retf   0x5e43
  413296:	mov    edi,0x6acddaf2
  41329b:	(bad)  
  41329c:	lahf   
  41329d:	in     al,0xfd
  41329f:	fdivr  st,st(2)
  4132a1:	ds jecxz 0x413259
  4132a4:	cmp    BYTE PTR [eax-0x4a],0x11
  4132a8:	fidivr WORD PTR fs:[bx+0x23]
  4132ad:	push   0x942b2ff2
  4132b2:	and    BYTE PTR [ebx+0x9],ah
  4132b5:	stos   BYTE PTR es:[edi],al
  4132b6:	or     ah,BYTE PTR [ebp-0x77]
  4132b9:	xchg   edi,eax
  4132ba:	test   DWORD PTR [ebx-0xc],esp
  4132bd:	push   ss
  4132be:	xor    dh,dh
  4132c0:	addr16 or dl,0x25
  4132c4:	jae    0x4132eb
  4132c6:	push   edi
  4132c7:	mov    edi,0x3d7207cc
  4132cc:	in     al,0xa9
  4132ce:	push   edx
  4132cf:	fimul  WORD PTR [esp+ebp*2]
  4132d2:	pop    esp
  4132d3:	adc    dh,BYTE PTR [edi]
  4132d5:	out    0xf0,eax
  4132d7:	loopne 0x413329
  4132d9:	mov    bh,0x40
  4132db:	sar    BYTE PTR [esi-0x24],1
  4132de:	push   ebp
  4132df:	(bad)  
  4132e0:	aad    0x2e
  4132e2:	dec    edi
  4132e3:	fistp  QWORD PTR [esi-0x29fc2f35]
  4132e9:	inc    ebp
  4132ea:	cld    
  4132eb:	mov    esp,es
  4132ed:	iret   
  4132ee:	cmp    ch,BYTE PTR ds:0x2c06e301
  4132f4:	pushf  
  4132f5:	lahf   
  4132f6:	xchg   esi,eax
  4132f7:	shr    dl,0xfd
  4132fa:	xor    al,0xda
  4132fc:	mov    edi,DWORD PTR [ebx+edi*2]
  4132ff:	mov    dl,0x13
  413301:	or     esi,DWORD PTR [eax+0x30]
  413304:	aam    0x36
  413306:	mov    cl,ch
  413308:	jo     0x4132a7
  41330a:	lds    ecx,FWORD PTR [eax+0x6f]
  41330d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330e:	jge    0x413320
  413310:	pop    ss
  413311:	pop    esi
  413312:	loope  0x4132f8
  413314:	jns    0x413348
  413316:	and    ebp,DWORD PTR [edi+0x6788cc00]
  41331c:	dec    edx
  41331d:	stc    
  41331e:	scas   al,BYTE PTR es:[edi]
  41331f:	aaa    
  413320:	dec    esi
  413321:	inc    edi
  413322:	mov    ah,0x69
  413324:	dec    ebx
  413325:	out    dx,al
  413326:	pop    eax
  413327:	dec    ebx
  413328:	je     0x41339b
  41332a:	rol    ebp,0x81
  41332d:	and    edx,edi
  41332f:	cwde   
  413330:	shl    bh,cl
  413332:	mov    ds:0xe9737fb3,eax
  413337:	jge    0x4132fe
  413339:	les    ebp,FWORD PTR [edx+0x2d8e5c5a]
  41333f:	or     DWORD PTR [ecx+0xdd178ba],esi
  413345:	push   es
  413346:	ss idiv DWORD PTR ds:[edi-0x8]
  41334b:	outs   dx,BYTE PTR ds:[esi]
  41334c:	ret    
  41334d:	xor    esi,DWORD PTR [ecx]
  41334f:	loop   0x41333a
  413351:	cmp    al,0xe5
  413353:	add    eax,0x6fb023fe
  413358:	pop    esi
  413359:	fadd   st(3),st
  41335b:	mov    BYTE PTR [ebp-0x7a202633],cl
  413361:	jo     0x413301
  413363:	arpl   si,bp
  413365:	xchg   ecx,eax
  413366:	into   
  413367:	xor    ch,BYTE PTR [eax+0x78]
  41336a:	test   eax,0xa10293a7
  41336f:	cmc    
  413370:	fmul   DWORD PTR [edx]
  413372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413373:	popa   
  413374:	addr16 sbb eax,0x7b3447ef
  41337a:	pop    eax
  41337b:	xlat   BYTE PTR ds:[ebx]
  41337c:	jno    0x4133f7
  41337e:	and    eax,edx
  413380:	in     eax,dx
  413381:	rol    edx,0xe0
  413384:	jns    0x413322
  413386:	fxch   st(4)
  413388:	mov    esp,0x3f7a5622
  41338d:	sbb    dh,cl
  41338f:	add    eax,DWORD PTR gs:[ebx]
  413392:	call   0x9cafafe8
  413397:	cmc    
  413398:	pop    ds
  413399:	dec    edi
  41339a:	in     eax,dx
  41339b:	inc    esi
  41339c:	add    bh,dh
  41339e:	and    DWORD PTR [edx-0x4db80494],ebx
  4133a4:	mov    ?,WORD PTR [edi]
  4133a6:	outs   dx,DWORD PTR ds:[esi]
  4133a7:	ficom  DWORD PTR [edx+0x11]
  4133aa:	loopne 0x41334b
  4133ac:	jno    0x413347
  4133ae:	(bad)  
  4133af:	cmp    ebp,esp
  4133b1:	rol    DWORD PTR gs:[ebx-0x5f],0x45
  4133b6:	stos   DWORD PTR es:[edi],eax
  4133b7:	mov    al,ds:0xde7ce100
  4133bc:	ret    0xfbf3
  4133bf:	xchg   ebp,eax
  4133c0:	cld    
  4133c1:	fsubr  DWORD PTR ss:[eax]
  4133c4:	pop    ebp
  4133c5:	xchg   edx,eax
  4133c6:	je     0x4133ed
  4133c8:	daa    
  4133c9:	jl     0x4133de
  4133cb:	call   0xe6afe995
  4133d0:	stos   DWORD PTR es:[edi],eax
  4133d1:	mov    ebx,0xd7639423
  4133d6:	mov    bh,BYTE PTR [esi-0x69e9d5d8]
  4133dc:	lea    esi,[ebx]
  4133de:	fnsave [ecx]
  4133e0:	daa    
  4133e1:	test   bl,ah
  4133e3:	hlt    
  4133e4:	or     DWORD PTR [edi+0x65],ecx
  4133e7:	jns    0x413392
  4133e9:	xchg   esi,eax
  4133ea:	clc    
  4133eb:	fadd   QWORD PTR [ecx+0x7b44293]
  4133f1:	aad    0x30
  4133f3:	aad    0xe4
  4133f5:	dec    ebx
  4133f6:	out    0x2d,eax
  4133f8:	outs   dx,DWORD PTR ds:[esi]
  4133f9:	mov    WORD PTR [eax-0x7a],ds
  4133fc:	xchg   esp,eax
  4133fd:	cld    
  4133fe:	bound  ebp,QWORD PTR [edi]
  413400:	aas    
  413401:	(bad)  
  413402:	into   
  413403:	lods   al,BYTE PTR ds:[esi]
  413404:	jb     0x743eecd2
  41340a:	or     al,bl
  41340c:	(bad)  
  41340d:	jg     0x41344b
  41340f:	sub    DWORD PTR [esi-0x68],ebx
  413412:	mov    al,0x20
  413414:	mov    eax,ds:0x2d4ad63
  413419:	xchg   ebx,eax
  41341a:	sub    bh,ch
  41341c:	push   ss
  41341d:	mov    ecx,0x43f1aedb
  413422:	sub    eax,0xaac4ee3
  413427:	sbb    al,0x7f
  413429:	push   esp
  41342a:	lds    edi,FWORD PTR [esi+0x35]
  41342d:	pushf  
  41342e:	(bad)  
  41342f:	jp     0x413434
  413431:	lods   al,BYTE PTR ds:[esi]
  413432:	dec    ebp
  413433:	fsubp  st(1),st
  413435:	retf   
  413436:	imul   edx,DWORD PTR [ecx],0x84f874ae
  41343c:	jmp    0x89d84957
  413441:	mov    al,ds:0x1191283b
  413446:	frstor [edx]
  413448:	loopne 0x413412
  41344a:	or     DWORD PTR [ebx],edx
  41344c:	mov    esi,esi
  41344e:	(bad)  
  41344f:	cmp    eax,0x5ec97b04
  413454:	int3   
  413455:	jo     0x41348f
  413457:	pop    edx
  413458:	in     eax,0x2c
  41345a:	xchg   ebp,eax
  41345b:	add    BYTE PTR [eax],dl
  41345d:	sub    cl,bl
  41345f:	or     eax,0x51
  413462:	push   eax
  413463:	ins    DWORD PTR es:[edi],dx
  413464:	or     dl,BYTE PTR ds:[ecx+0x38]
  413468:	push   0x377314fc
  41346d:	bound  edx,QWORD PTR [edx+ebx*8+0x7b40eee3]
  413474:	bnd jg 0x413436
  413477:	mov    ah,0x6f
  413479:	fcmovnu st,st(5)
  41347b:	push   edx
  41347c:	mov    ecx,0x55fe6dfa
  413481:	mov    ch,0x1e
  413483:	jo     0x413437
  413485:	cdq    
  413486:	or     DWORD PTR [esi-0x75],esp
  413489:	jl     0x4134c2
  41348b:	push   cs
  41348c:	aam    0x30
  41348e:	not    BYTE PTR [edi-0x79699d32]
  413494:	jb     0x4134ae
  413496:	pushf  
  413497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413498:	fsub   DWORD PTR [eax-0x27ee21d2]
  41349e:	pop    ss
  41349f:	mov    esp,0x463def32
  4134a4:	call   0x6a8471cd
  4134a9:	(bad)  [esi-0x24da2cf1]
  4134af:	mov    DWORD PTR [eax-0x1c],ebp
  4134b2:	scas   al,BYTE PTR es:[edi]
  4134b3:	call   0x473c:0xe1ba81fa
  4134ba:	push   edx
  4134bb:	dec    ebx
  4134bc:	into   
  4134bd:	adc    al,0x3d
  4134bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c0:	(bad)  
  4134c2:	push   ecx
  4134c3:	lds    eax,FWORD PTR [ebp+0x53]
  4134c6:	xchg   DWORD PTR [ebx-0x53],edx
  4134c9:	nop
  4134ca:	sub    DWORD PTR [ebx-0x7],esi
  4134cd:	(bad)  [ebx+0x65]
  4134d0:	jbe    0x413490
  4134d2:	adc    DWORD PTR [ebx+0x21],esp
  4134d5:	or     eax,0x2e76e0d6
  4134da:	sub    eax,0x78db3ae4
  4134df:	sbb    al,0x88
  4134e1:	stos   DWORD PTR es:[edi],eax
  4134e2:	mov    cl,0x6d
  4134e4:	stos   BYTE PTR es:[edi],al
  4134e5:	adc    BYTE PTR [edx-0x1202c742],al
  4134eb:	and    al,0xaa
  4134ed:	pop    edx
  4134ee:	xor    eax,0x9eb32827
  4134f3:	jp     0x41356b
  4134f5:	add    edx,ecx
  4134f7:	ss gs enter 0x9ce6,0x7
  4134fd:	cld    
  4134fe:	or     ecx,DWORD PTR [ebx+0x18]
  413501:	jmp    0xb3cd:0xa41a54ae
  413508:	arpl   bx,di
  41350a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41350b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	cmc    
  41350e:	shr    DWORD PTR [ecx],cl
  413510:	ins    BYTE PTR es:[edi],dx
  413511:	ror    DWORD PTR [ebx],1
  413513:	outs   dx,BYTE PTR ds:[esi]
  413514:	sahf   
  413515:	push   0x2581733e
  41351a:	sbb    eax,0x466c36a6
  41351f:	(bad)  
  413520:	adc    bh,BYTE PTR [edi+eax*2-0xa]
  413524:	and    ah,cl
  413526:	add    DWORD PTR [edi],eax
  413528:	je     0x41351d
  41352a:	jno    0x4134bc
  41352c:	cmp    al,0x96
  41352e:	inc    eax
  41352f:	mov    esi,0x90a18362
  413534:	and    BYTE PTR [esi+0x77],dh
  413537:	xor    ebp,DWORD PTR [eax+0x27]
  41353a:	pop    edi
  41353b:	cmp    DWORD PTR [ecx-0x64],ebx
  41353e:	pop    esi
  41353f:	jg     0x413553
  413541:	mov    bl,bh
  413543:	adc    DWORD PTR [eax+0x1f],esi
  413546:	loope  0x413541
  413548:	pop    ebp
  413549:	inc    ebp
  41354a:	loope  0x4134e0
  41354c:	out    dx,al
  41354d:	xchg   esp,eax
  41354e:	loopne 0x4134f4
  413550:	sahf   
  413551:	jle    0x41351f
  413553:	jp     0x413552
  413555:	xchg   esp,eax
  413556:	mov    eax,0x4dee5812
  41355b:	mov    ds:0x671b7fd1,eax
  413560:	enterw 0xa37a,0xb5
  413565:	ss popf 
  413567:	or     esp,DWORD PTR [ebp+esi*1-0x4b]
  41356b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41356c:	add    dh,0xea
  41356f:	cmp    al,0x16
  413571:	inc    edx
  413572:	cld    
  413573:	pop    edi
  413574:	mov    edi,eax
  413576:	and    ebp,edi
  413578:	pop    edi
  413579:	dec    edx
  41357a:	out    0xba,al
  41357c:	cmc    
  41357d:	adc    DWORD PTR [edi-0x1cd57155],edi
  413583:	cld    
  413584:	in     eax,dx
  413585:	sbb    ch,BYTE PTR [esi-0x69]
  413588:	push   edi
  413589:	leave  
  41358a:	mov    bh,cl
  41358c:	dec    ecx
  41358d:	outs   dx,BYTE PTR ds:[esi]
  41358e:	push   ds
  41358f:	outs   dx,DWORD PTR ds:[esi]
  413590:	pop    esp
  413591:	pop    ds
  413592:	xor    ah,BYTE PTR [edi]
  413594:	stos   BYTE PTR es:[edi],al
  413595:	lahf   
  413596:	cmp    edi,DWORD PTR [edi+0x33b7eca2]
  41359c:	in     al,dx
  41359d:	push   cs
  41359e:	sub    ah,ah
  4135a0:	data16 loope 0x413558
  4135a3:	mov    al,ds:0x5ced09f6
  4135a8:	lea    edx,[ebp+ebx*1+0x377d7495]
  4135af:	or     BYTE PTR [ebx-0x23813f9],0xf
  4135b6:	lea    edi,[edi+esi*2-0x16b00c9d]
  4135bd:	(bad)  
  4135be:	in     eax,0x37
  4135c0:	cmp    DWORD PTR [esi-0x2d74220a],0x347d826
  4135ca:	sbb    dh,BYTE PTR [ebp+0x28ba7859]
  4135d0:	addr16 pushf 
  4135d2:	fs jle 0x413560
  4135d5:	fdivr  DWORD PTR [esi+ecx*4]
  4135d8:	inc    ecx
  4135d9:	and    edx,ebx
  4135db:	dec    dx
  4135dd:	jbe    0x4135f1
  4135df:	xor    eax,0x4b724cb0
  4135e4:	xchg   esi,eax
  4135e5:	push   esp
  4135e6:	mov    cl,0xe8
  4135e8:	mov    eax,ds:0xff5062a6
  4135ed:	enter  0x95ad,0x72
  4135f1:	leave  
  4135f2:	mov    eax,ds:0xd61e215
  4135f7:	sub    ah,bh
  4135f9:	pop    edx
  4135fa:	and    edi,edi
  4135fc:	neg    DWORD PTR [ebx+0x75]
  4135ff:	inc    eax
  413600:	mov    ebx,0xfa9b6f72
  413605:	add    al,0xa9
  413607:	mov    ebp,0xce0bceda
  41360c:	dec    esp
  41360d:	(bad)  
  41360e:	push   eax
  41360f:	imul   edi,DWORD PTR [eax-0x36c90b3],0xffffff89
  413616:	add    ebp,DWORD PTR [ecx+0x510b3cc]
  41361c:	mov    edi,0xd3f3453a
  413621:	in     eax,dx
  413622:	mov    ds:0x4aa037c4,al
  413627:	and    DWORD PTR [ebp-0x70],eax
  41362a:	test   eax,0xc002f366
  41362f:	fldcw  WORD PTR [esi+0x5c]
  413632:	pop    es
  413633:	icebp  
  413634:	inc    ebx
  413635:	jp     0x41362c
  413637:	in     al,0xe3
  413639:	jns    0x413664
  41363b:	pop    ebp
  41363c:	or     al,BYTE PTR [ecx-0x51]
  41363f:	xchg   edx,eax
  413640:	pop    edi
  413641:	mov    eax,DWORD PTR [ecx+0x61093056]
  413647:	retf   
  413648:	and    eax,0x1c66c105
  41364d:	sbb    al,0xbb
  41364f:	xchg   ebx,eax
  413650:	dec    esp
  413651:	xor    DWORD PTR [edi+0x2664f22],ebx
  413657:	fisttp WORD PTR [eax-0x7d4eb7cd]
  41365d:	xor    eax,0xa5327642
  413662:	fs fs push ds
  413665:	jbe    0x41369b
  413667:	mov    DWORD PTR [ecx+ebp*1],edx
  41366a:	mov    ah,0xa1
  41366c:	and    eax,0x762503c8
  413671:	ins    DWORD PTR es:[edi],dx
  413672:	mov    cl,0x6c
  413674:	aaa    
  413675:	lahf   
  413676:	in     al,0x20
  413678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413679:	std    
  41367a:	mov    ecx,0x2ac8f160
  41367f:	mov    edi,0xfe579e59
  413684:	ins    DWORD PTR es:[edi],dx
  413685:	sbb    ch,dh
  413687:	sub    al,BYTE PTR [ebp-0x2359c880]
  41368d:	je     0x4136f0
  41368f:	in     al,dx
  413690:	jne    0x4136e4
  413692:	push   es
  413693:	xor    BYTE PTR [edx+0x14c20226],bh
  413699:	sub    eax,0x50788b3d
  41369e:	push   0x8fab4587
  4136a3:	mov    al,0x3c
  4136a5:	jno    0x4136d2
  4136a7:	or     cl,BYTE PTR [edx-0x301cabba]
  4136ad:	(bad)  
  4136ae:	jmp    0x413678
  4136b0:	sub    DWORD PTR [eax+0x5c],0x44a33d1
  4136b7:	jno    0x4136d8
  4136b9:	repz xchg ecx,eax
  4136bb:	mov    edx,0x61fbee78
  4136c0:	push   edx
  4136c1:	sub    al,0xc
  4136c3:	enter  0x1970,0x46
  4136c7:	ror    BYTE PTR ds:0x5288d292,1
  4136cd:	not    bh
  4136cf:	inc    edi
  4136d0:	mov    edi,DWORD PTR [ebx+0x47e36f2f]
  4136d6:	mov    dh,0x82
  4136d8:	mov    WORD PTR [ebp+0x28],ds
  4136db:	inc    edx
  4136dc:	ds push 0x30
  4136df:	xchg   esp,eax
  4136e0:	push   ss
  4136e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e2:	and    edx,DWORD PTR [esi+0x4]
  4136e5:	std    
  4136e6:	enter  0xc4e6,0x7
  4136ea:	setl   BYTE PTR [eax+0x39]
  4136ee:	mov    al,0x9a
  4136f0:	mov    ds:0xd5048909,al
  4136f5:	jb     0x41368c
  4136f7:	adc    BYTE PTR [edi+esi*4+0x4],bl
  4136fb:	push   0xffffffdc
  4136fd:	das    
  4136fe:	jmp    0x553b:0xcd0f703b
  413705:	inc    ecx
  413706:	push   es
  413707:	popf   
  413708:	mov    esp,0xab752d5
  41370d:	pop    es
  41370e:	mov    bh,0x38
  413710:	dec    esp
  413711:	sbb    ebx,DWORD PTR [edi]
  413713:	aad    0x4d
  413715:	int    0x6a
  413717:	jecxz  0x413699
  413719:	rep stos DWORD PTR es:[edi],eax
  41371b:	dec    eax
  41371c:	or     ebx,esp
  41371e:	les    ebx,FWORD PTR [ecx]
  413720:	loopne 0x4136b4
  413722:	je     0x41378a
  413724:	call   0x8631ae82
  413729:	mov    ebp,DWORD PTR [edx]
  41372b:	imul   eax
  41372d:	mov    cl,0xa5
  41372f:	shr    BYTE PTR [eax-0x4610c6d1],1
  413735:	gs sbb edx,eax
  413738:	cmp    al,0xd2
  41373a:	jbe    0x4137a8
  41373c:	(bad)  
  41373d:	xchg   edi,eax
  41373e:	inc    edi
  41373f:	xchg   ebx,eax
  413740:	mov    ?,esi
  413742:	out    dx,eax
  413743:	retf   0xaed8
  413746:	pop    eax
  413747:	iret   
  413748:	leave  
  413749:	ja     0x4136d1
  41374b:	inc    ebp
  41374c:	and    BYTE PTR [ebp-0x65],bh
  41374f:	add    DWORD PTR [ecx+0x5],edx
  413752:	sti    
  413753:	lds    edx,FWORD PTR [ebx]
  413755:	pop    eax
  413756:	adc    al,0x20
  413758:	push   0x30
  41375a:	out    dx,al
  41375b:	(bad)  
  41375c:	ins    DWORD PTR es:[edi],dx
  41375d:	sbb    al,0xe3
  41375f:	xor    eax,0x559a651
  413764:	(bad)
  413767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413768:	xchg   BYTE PTR [esi],ch
  41376a:	retf   
  41376b:	inc    eax
  41376c:	stos   DWORD PTR es:[edi],eax
  41376d:	dec    ebp
  41376e:	lahf   
  41376f:	std    
  413770:	hlt    
  413771:	adc    BYTE PTR [eax],dh
  413773:	les    eax,FWORD PTR [ebp+0x3c]
  413776:	jp     0x4137a3
  413778:	xor    DWORD PTR [eax+0x1bcd3304],edi
  41377e:	hlt    
  41377f:	inc    esp
  413780:	mov    ds:0xf3e4bf2d,al
  413785:	add    DWORD PTR [edx+0xc],0xa8185ebf
  41378c:	ficomp WORD PTR [ebx-0x7d7ea87c]
  413792:	popf   
  413793:	mov    bl,BYTE PTR [ebx-0x70]
  413796:	jp     0x4137a8
  413798:	cmc    
  413799:	popa   
  41379a:	jno    0x41376f
  41379c:	popf   
  41379d:	inc    edi
  41379e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41379f:	mov    bl,BYTE PTR [ebx]
  4137a1:	in     eax,dx
  4137a2:	stos   BYTE PTR es:[edi],al
  4137a3:	jmp    0x2dfb:0xd357a7b5
  4137aa:	dec    edx
  4137ab:	lahf   
  4137ac:	stos   BYTE PTR es:[edi],al
  4137ad:	je     0x413795
  4137af:	fst    st(3)
  4137b1:	stos   BYTE PTR es:[edi],al
  4137b2:	clc    
  4137b3:	lods   eax,DWORD PTR ds:[esi]
  4137b4:	ss jnp 0x413831
  4137b7:	sub    al,0xb4
  4137b9:	ins    BYTE PTR es:[edi],dx
  4137ba:	nop
  4137bb:	and    eax,0x1066ef7
  4137c0:	pop    ds
  4137c1:	lahf   
  4137c2:	imul   ecx,DWORD PTR [edi+0x1],0x50ea31ec
  4137c9:	add    edx,0xffffffbd
  4137cc:	add    BYTE PTR [esp+eax*8-0x51],0xf
  4137d1:	dec    esp
  4137d2:	or     DWORD PTR [ebp-0xdb00190],esi
  4137d8:	and    dl,dh
  4137da:	jl     0x413812
  4137dc:	scas   al,BYTE PTR es:[edi]
  4137dd:	rol    bl,0x7c
  4137e0:	stos   DWORD PTR es:[edi],eax
  4137e1:	leave  
  4137e2:	jmp    0x6643164b
  4137e7:	xchg   edi,eax
  4137e8:	pop    ss
  4137e9:	and    eax,0x4944c62b
  4137ee:	pop    ebp
  4137ef:	mov    ecx,0x3047ce0b
  4137f4:	shl    ch,cl
  4137f6:	xchg   ebp,eax
  4137f7:	mov    dh,0xa4
  4137f9:	cwde   
  4137fa:	fnsave [esi+0x29]
  4137fd:	pop    ecx
  4137fe:	or     eax,DWORD PTR [edx-0x69]
  413801:	dec    ebx
  413802:	popf   
  413803:	dec    edx
  413804:	or     dl,dh
  413806:	ret    0x353a
  413809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380a:	in     al,0x51
  41380c:	add    dh,ah
  41380e:	pop    ecx
  41380f:	or     BYTE PTR [eax-0x78],bh
  413812:	xchg   ebp,eax
  413813:	scas   eax,DWORD PTR es:[edi]
  413814:	inc    ecx
  413815:	adc    ch,bh
  413817:	bound  ebp,QWORD PTR [edx-0x77]
  41381a:	iret   
  41381b:	sahf   
  41381c:	pop    ecx
  41381d:	pop    eax
  41381e:	frstor [edx+0x198f4e5e]
  413824:	mov    edi,0xd8217aab
  413829:	and    DWORD PTR [edi+0x34],ecx
  41382c:	adc    al,0x99
  41382e:	fs pop es
  413830:	jns    0x41388f
  413832:	add    al,0x6a
  413834:	fcom   DWORD PTR [eax+0x2a2da462]
  41383a:	pop    edx
  41383b:	or     BYTE PTR [ebp-0x54870cf7],bl
  413841:	inc    eax
  413842:	ud0    eax,edx
  413845:	fwait
  413846:	shl    bl,cl
  413848:	loop   0x41380b
  41384a:	mov    al,ds:0x99af1550
  41384f:	mov    eax,0xce0a6adc
  413854:	mov    ch,0x39
  413856:	mov    ebp,DWORD PTR [ebp+ebx*8-0x31b7d68a]
  41385d:	xchg   BYTE PTR [eax-0x70108d5e],bh
  413863:	cmp    ebx,DWORD PTR [ebp+0x45]
  413866:	hlt    
  413867:	push   edi
  413868:	int3   
  413869:	and    dh,al
  41386b:	mov    ebx,DWORD PTR [ebx-0x47]
  41386e:	(bad)  
  41386f:	stos   DWORD PTR es:[edi],eax
  413870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413871:	jle    0x4138f0
  413873:	ins    BYTE PTR es:[edi],dx
  413874:	mov    al,ds:0x85104dd0
  413879:	cmp    eax,0x352e5194
  41387e:	call   0x5824367b
  413883:	sahf   
  413884:	retf   0xedd2
  413887:	or     ebx,DWORD PTR [esi]
  413889:	add    ebx,ebx
  41388b:	int    0x9f
  41388d:	add    al,0x84
  41388f:	out    dx,al
  413890:	cmp    al,0xe4
  413892:	push   esi
  413893:	loope  0x413900
  413895:	adc    cl,BYTE PTR [ecx+eax*8]
  413898:	jle    0x41390f
  41389a:	mov    dl,0x63
  41389c:	adc    eax,DWORD PTR [ecx-0x23]
  41389f:	or     BYTE PTR [esi],0x20
  4138a2:	aad    0xe2
  4138a4:	jge    0x41382f
  4138a6:	ja     0x4138cf
  4138a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138a9:	fs xchg ebp,eax
  4138ab:	dec    eax
  4138ac:	push   cs
  4138ad:	jmp    0x4138ce
  4138af:	jbe    0x413832
  4138b1:	fwait
  4138b2:	jge    0x413921
  4138b4:	mov    DWORD PTR [edx+0x43],eax
  4138b7:	daa    
  4138b8:	shr    DWORD PTR [ebp-0x14],cl
  4138bb:	loope  0x4138fb
  4138bd:	sbb    eax,0x969dff17
  4138c2:	mov    eax,ds:0x2b3e10ea
  4138c7:	mov    ebp,0xb6cd1e39
  4138cc:	and    DWORD PTR [edx],eax
  4138ce:	push   es
  4138cf:	nop
  4138d0:	sbb    edi,0xffffff9c
  4138d3:	mov    eax,0x492bb6c9
  4138d8:	out    dx,eax
  4138d9:	aas    
  4138da:	adc    BYTE PTR ds:0xd1b92ba4,bl
  4138e0:	lahf   
  4138e1:	push   eax
  4138e2:	mov    dl,0x77
  4138e4:	out    0x12,al
  4138e6:	mov    ch,0x7d
  4138e8:	ror    BYTE PTR ds:0xd7d49c6e,1
  4138ee:	mov    edi,0x137e2390
  4138f3:	cmp    DWORD PTR [eax],0xac0dd840
  4138f9:	mov    bl,0xf7
  4138fb:	inc    ebp
  4138fc:	or     al,0x85
  4138fe:	mov    edx,0xcd1915bb
  413903:	aad    0xb2
  413905:	retf   0x7ed3
  413908:	mov    ?,WORD PTR [ecx-0x74b84204]
  41390e:	js     0x41395a
  413910:	iret   
  413911:	push   edi
  413912:	and    esp,DWORD PTR [ebx-0x6f410281]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	mov    eax,0x8c31c4eb
  41391e:	jbe    0x4138a6
  413920:	retf   0x5b79
  413923:	inc    edi
  413924:	xchg   ecx,eax
  413925:	mov    bl,0x2f
  413927:	push   0x4da7ae60
  41392c:	and    eax,DWORD PTR [edx]
  41392e:	dec    esp
  41392f:	xor    DWORD PTR [edi-0xf159517],esi
  413935:	xor    edx,esp
  413937:	aam    0xf
  413939:	stos   BYTE PTR es:[edi],al
  41393a:	fidivr DWORD PTR [ebx]
  41393c:	push   ds
  41393d:	mov    ecx,0xe3a77baa
  413942:	sbb    al,0x62
  413944:	stos   DWORD PTR es:[edi],eax
  413945:	das    
  413946:	sbb    BYTE PTR [esi+0x267275f0],dh
  41394c:	xchg   esi,eax
  41394d:	push   esp
  41394e:	lock or ch,BYTE PTR [edx-0x771c2a1]
  413955:	cmp    al,0xf6
  413957:	mov    ecx,DWORD PTR [esi-0x475e9874]
  41395d:	or     bl,BYTE PTR [edi-0x20]
  413960:	outs   dx,DWORD PTR ds:[esi]
  413961:	fst    QWORD PTR [ecx]
  413963:	bound  esi,QWORD PTR [esi]
  413965:	sbb    al,0x5b
  413967:	icebp  
  413968:	sbb    BYTE PTR [esp+esi*8+0xc],bl
  41396c:	into   
  41396d:	dec    ebp
  41396e:	inc    edi
  41396f:	mov    esp,0xae80c368
  413974:	js     0x4138f6
  413976:	sbb    eax,0xf0330cab
  41397b:	and    DWORD PTR [edx*4-0x1c2e8b69],0x39
  413983:	push   ss
  413984:	in     eax,0x19
  413986:	dec    eax
  413987:	adc    bh,BYTE PTR [ecx]
  413989:	add    ebp,DWORD PTR [esi]
  41398b:	and    eax,0x19ba3da4
  413990:	jns    0x4139f4
  413992:	jb     0x41394b
  413994:	jge    0x41399e
  413996:	cmp    dl,BYTE PTR [esi]
  413998:	xor    DWORD PTR [ecx+eax*2+0x27],0x30
  41399d:	push   ebx
  41399e:	lahf   
  41399f:	dec    ebx
  4139a0:	cli    
  4139a1:	fistp  DWORD PTR [edx+edi*8]
  4139a4:	(bad)  
  4139a5:	gs cs mov edi,0x58185643
  4139ac:	xor    eax,0x63b114fa
  4139b1:	xchg   ecx,eax
  4139b2:	ret    0xc41f
  4139b5:	es js  0x413a18
  4139b8:	enter  0xc58b,0xa7
  4139bc:	call   0x307db1f2
  4139c1:	pusha  
  4139c2:	jo     0x4139e4
  4139c4:	clc    
  4139c5:	xor    al,0x5c
  4139c7:	mov    al,0xee
  4139c9:	push   ebp
  4139ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139cb:	or     bh,BYTE PTR [edx]
  4139cd:	cmp    al,0xca
  4139cf:	and    al,0x8d
  4139d1:	mov    esp,eax
  4139d3:	and    BYTE PTR [edi-0x23c3fc0],bl
  4139d9:	rcr    DWORD PTR [edx],1
  4139db:	push   edi
  4139dc:	mov    ebp,0xc56004b8
  4139e1:	aaa    
  4139e2:	bound  edx,QWORD PTR [ebx+0x69a8e5e6]
  4139e8:	call   0xaaa7:0x50a56c7e
  4139ef:	jae    0x4139f1
  4139f1:	int    0xf5
  4139f3:	loopne 0x4139cb
  4139f5:	adc    al,cl
  4139f7:	and    dh,BYTE PTR [ecx-0x9188158]
  4139fd:	imul   BYTE PTR ds:0x76290341
  413a03:	in     al,dx
  413a04:	fstp   TBYTE PTR [ebx+0x284a7044]
  413a0a:	fadd   QWORD PTR [esp]
  413a0d:	addr16 idiv esp
  413a10:	rcl    BYTE PTR [ebx+eiz*1],1
  413a13:	ins    BYTE PTR es:[edi],dx
  413a14:	test   DWORD PTR [ebx],edx
  413a16:	mov    bh,0x75
  413a18:	jb     0x413a91
  413a1a:	pop    eax
  413a1b:	sti    
  413a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1d:	adc    al,0x4a
  413a1f:	iret   
  413a20:	lock xchg edi,eax
  413a22:	mov    edx,DWORD PTR [ecx+esi*1]
  413a25:	(bad)  
  413a26:	sbb    ah,BYTE PTR [ebx+0x69]
  413a29:	xchg   edx,ebp
  413a2b:	lock out 0xce,al
  413a2e:	xlat   BYTE PTR ds:[ebx]
  413a2f:	or     edi,DWORD PTR [esp+ecx*8-0x71526039]
  413a36:	mov    WORD PTR [ecx-0x5c],es
  413a39:	in     al,0xf2
  413a3b:	out    0xd4,eax
  413a3d:	jg     0x413a6d
  413a3f:	adc    ecx,DWORD PTR [esi-0x4e3e09b4]
  413a45:	xchg   ecx,eax
  413a47:	pop    esp
  413a48:	mov    ds:0x6d9c756b,al
  413a4d:	mov    eax,DWORD PTR [ebp+0x4d]
  413a50:	pop    esi
  413a51:	cmp    eax,esi
  413a53:	jns    0x413ab7
  413a55:	push   ebx
  413a56:	or     DWORD PTR [eax-0x68ac428d],esp
  413a5c:	jg     0x413aac
  413a5e:	jge    0x413acc
  413a60:	outs   dx,BYTE PTR ds:[esi]
  413a61:	cli    
  413a62:	test   bl,bh
  413a64:	mov    dh,BYTE PTR [ecx+ebp*4+0x44]
  413a68:	mov    dl,0x53
  413a6a:	scas   al,BYTE PTR es:[edi]
  413a6b:	push   0xffffffd7
  413a6d:	(bad)  
  413a6e:	cmp    esp,DWORD PTR [esi-0x7f3bccb9]
  413a74:	push   edi
  413a75:	in     eax,0x82
  413a77:	inc    ebx
  413a78:	dec    esp
  413a79:	(bad)  
  413a7a:	jge    0x413acc
  413a7c:	clc    
  413a7d:	(bad)
  413a80:	ins    DWORD PTR es:[edi],dx
  413a81:	sub    bh,BYTE PTR [esi+0x1dd108c]
  413a87:	mov    eax,0x36db9846
  413a8c:	retf   0xf082
  413a8f:	xor    BYTE PTR [ecx-0x35ae8995],al
  413a95:	pop    ebp
  413a96:	inc    DWORD PTR [edi-0x40]
  413a99:	shl    BYTE PTR [esp+ecx*1+0x20],0xd6
  413a9e:	and    al,0x2f
  413aa0:	cmp    eax,0x1db76a22
  413aa5:	mov    ebp,0xe6b90ca2
  413aaa:	cmc    
  413aab:	arpl   WORD PTR [ebx],sp
  413aad:	outs   dx,DWORD PTR ds:[esi]
  413aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aaf:	(bad)  [esi+ebx*4+0x27]
  413ab3:	mov    ah,0xaa
  413ab5:	mov    DWORD PTR [ebx-0x7d],esp
  413ab8:	retf   
  413ab9:	xchg   edx,eax
  413aba:	pop    ss
  413abb:	xchg   ebx,eax
  413abc:	jge    0x413a65
  413abe:	repnz cs push edi
  413ac1:	push   esp
  413ac2:	pop    esi
  413ac3:	lds    ebx,FWORD PTR [ebx]
  413ac5:	popf   
  413ac6:	nop
  413ac7:	mov    fs,WORD PTR [esi]
  413ac9:	arpl   cx,si
  413acb:	es out dx,al
  413acd:	or     DWORD PTR [eax+0xa0371e3],esi
  413ad3:	inc    ebp
  413ad4:	je     0x413a95
  413ad6:	sahf   
  413ad7:	bound  ecx,QWORD PTR [esi]
  413ad9:	call   0x115b:0x5dbcd7f4
  413ae0:	push   ecx
  413ae1:	sbb    dl,al
  413ae3:	mov    al,ds:0x2072b069
  413ae8:	sub    eax,0x77e02e3
  413aed:	(bad)  
  413aee:	ins    BYTE PTR es:[edi],dx
  413aef:	stos   DWORD PTR es:[edi],eax
  413af0:	jg     0x413b4b
  413af2:	sbb    ecx,DWORD PTR [edi-0x6f]
  413af5:	ins    DWORD PTR es:[edi],dx
  413af6:	mov    cl,0x40
  413af8:	lods   eax,DWORD PTR ds:[esi]
  413af9:	dec    eax
  413afa:	mov    esp,0x7a74ddcd
  413aff:	mov    DWORD PTR cs:[ebp+eax*8-0x440724e2],ebx
  413b07:	clc    
  413b08:	jl     0x413aad
  413b0a:	je     0x413ab1
  413b0c:	aam    0x7a
  413b0e:	jmp    0x215596c6
  413b13:	push   ebx
  413b14:	xor    edi,DWORD PTR [edi]
  413b16:	cmp    eax,0xe3c3ffa9
  413b1b:	dec    esi
  413b1c:	les    edx,FWORD PTR [edi-0x2e]
  413b1f:	add    al,0x48
  413b21:	jl     0x413ab5
  413b23:	mov    al,0x4b
  413b25:	push   ds
  413b26:	sub    eax,0x2196b644
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    eax,edi
  413b2e:	jmp    0xcaac56fe
  413b33:	icebp  
  413b34:	pop    esp
  413b35:	jl     0x413b1c
  413b37:	mov    cs,edx
  413b39:	xor    bl,BYTE PTR [ebx]
  413b3b:	dec    ebp
  413b3c:	sub    esp,DWORD PTR [eax+esi*8+0x17]
  413b40:	pop    ebx
  413b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b42:	dec    ecx
  413b43:	push   cs
  413b44:	sahf   
  413b45:	fwait
  413b46:	xor    al,0x48
  413b48:	xchg   esi,eax
  413b49:	pop    ecx
  413b4a:	imul   ecx,DWORD PTR [esi+0x18],0x6d
  413b4e:	stos   DWORD PTR es:[edi],eax
  413b4f:	dec    ecx
  413b50:	stc    
  413b51:	fidivr WORD PTR [ebx+0x1c]
  413b54:	sub    dh,0x64
  413b57:	dec    edi
  413b58:	sahf   
  413b59:	jno    0x413b08
  413b5b:	cmp    al,0xd7
  413b5d:	hlt    
  413b5e:	push   ds
  413b5f:	xlat   BYTE PTR ds:[ebx]
  413b60:	addps  xmm2,XMMWORD PTR [edi+0x6324021b]
  413b67:	dec    ecx
  413b68:	xor    ebx,DWORD PTR [eax+esi*1-0x2b9fbc87]
  413b6f:	enter  0xa885,0xc4
  413b73:	sbb    DWORD PTR [esi+eax*8-0x18],ebx
  413b77:	nop
  413b78:	ss clc 
  413b7a:	push   cs
  413b7b:	mov    cl,0xeb
  413b7d:	xchg   DWORD PTR [edx],eax
  413b7f:	sub    DWORD PTR [ebx],eax
  413b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b82:	je     0x413b8f
  413b84:	mov    WORD PTR [ebx-0x7b],fs
  413b87:	std    
  413b88:	nop
  413b89:	adc    DWORD PTR [ecx+0x56acfae7],ecx
  413b8f:	and    ebx,DWORD PTR [edi+0x63f53f53]
  413b95:	push   ebp
  413b96:	shl    DWORD PTR [edi+0x46],1
  413b99:	(bad)  
  413b9a:	sti    
  413b9b:	mov    eax,ds:0x8b8ec49c
  413ba0:	mov    edx,0x3d89ba60
  413ba5:	push   esi
  413ba6:	(bad)  
  413ba7:	leave  
  413ba8:	stos   BYTE PTR es:[edi],al
  413ba9:	in     al,0xe0
  413bab:	jl     0x413ba9
  413bad:	mov    esp,?
  413baf:	sbb    edx,ebx
  413bb1:	adc    esi,ebp
  413bb3:	push   edx
  413bb4:	or     esi,DWORD PTR [eax]
  413bb6:	inc    ebx
  413bb7:	jmp    0x413c22
  413bb9:	mov    WORD PTR [eax+eax*4],gs
  413bbc:	mov    edi,0x59780cc8
  413bc1:	dec    esi
  413bc2:	in     eax,dx
  413bc3:	lods   al,BYTE PTR ds:[esi]
  413bc4:	(bad)  
  413bc5:	(bad)  
  413bc6:	cli    
  413bc7:	inc    ebp
  413bc8:	fadd   QWORD PTR [edi]
  413bca:	add    edi,DWORD PTR [ebx]
  413bcc:	mov    ecx,0x9254411
  413bd1:	inc    esp
  413bd2:	adc    DWORD PTR [ebp+0x5aa3aafa],ebp
  413bd8:	jae    0x413bda
  413bda:	imul   ebx,DWORD PTR ds:0x15f24a98,0xcc7715f9
  413be4:	mov    bh,0x58
  413be6:	xor    edx,DWORD PTR [esi-0x10]
  413be9:	outs   dx,DWORD PTR ds:[esi]
  413bea:	test   DWORD PTR [edi],edx
  413bec:	lahf   
  413bed:	shl    esp,1
  413bef:	mov    ah,0xdb
  413bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bf2:	sbb    BYTE PTR [ebx],bh
  413bf4:	add    bh,BYTE PTR [eax+eiz*8-0x12]
  413bf8:	mov    eax,ds:0xd3aa5844
  413bfd:	and    al,0xa9
  413bff:	cli    
  413c00:	add    eax,0xe3caaa7a
  413c05:	push   ds
  413c06:	xchg   BYTE PTR [ebx+0x7e0e77d9],dh
  413c0c:	jmp    0x413c52
  413c0e:	stos   BYTE PTR es:[edi],al
  413c0f:	sub    edx,esp
  413c11:	push   0xffffffd2
  413c13:	and    eax,0xd016c1a1
  413c18:	inc    esp
  413c19:	in     eax,dx
  413c1a:	push   ss
  413c1b:	in     eax,dx
  413c1c:	jnp    0x413bbb
  413c1e:	test   DWORD PTR [edi-0x32dcb933],0xa49c28b5
  413c28:	or     edx,ecx
  413c2a:	xlat   BYTE PTR ds:[ebx]
  413c2b:	leave  
  413c2c:	pop    edi
  413c2d:	je     0x413c14
  413c2f:	sbb    bh,BYTE PTR [edx]
  413c31:	nop
  413c32:	mov    eax,ds:0xc5d6fa9c
  413c37:	pop    ebx
  413c38:	loop   0x413caf
  413c3a:	lahf   
  413c3b:	jo     0x413c18
  413c3d:	sub    eax,0x4311352b
  413c42:	jle    0x413c12
  413c44:	pop    esp
  413c45:	(bad)  [eax+0x44]
  413c48:	mov    ds:0xfde3ba96,al
  413c4d:	fcmovnu st,st(6)
  413c4f:	or     eax,0x32e13be3
  413c54:	aad    0x39
  413c56:	imul   ebp,DWORD PTR [eax+0x690971cd],0x2b
  413c5d:	loop   0x413c7d
  413c5f:	dec    ebx
  413c60:	mov    ecx,0x1c219fc1
  413c65:	dec    DWORD PTR [edx+0x11e985cd]
  413c6b:	jge    0x413c73
  413c6d:	aad    0x95
  413c6f:	or     DWORD PTR [eax-0x1a],edi
  413c72:	xchg   ebx,eax
  413c73:	mov    eax,0xa84bee30
  413c78:	call   0x6282:0xec30b167
  413c7f:	(bad)  
  413c80:	outs   dx,BYTE PTR ds:[esi]
  413c81:	add    DWORD PTR [ebp+0x195a49aa],esi
  413c87:	in     al,0x3d
  413c89:	pop    ebx
  413c8a:	int3   
  413c8b:	mov    cl,0x79
  413c8d:	add    DWORD PTR fs:[edi],esp
  413c90:	jmp    0x413c62
  413c92:	xchg   DWORD PTR [eax],edx
  413c94:	adc    BYTE PTR [ecx+0x3f00d729],0xa9
  413c9b:	push   cs
  413c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9d:	adc    ch,BYTE PTR [ecx]
  413c9f:	repz mov gs,edi
  413ca2:	cmp    ecx,DWORD PTR [esp+eax*8+0x17]
  413ca6:	xor    DWORD PTR [ebp+0x0],eax
  413ca9:	or     al,0xca
  413cab:	cli    
  413cac:	inc    ebx
  413cad:	div    DWORD PTR [ebp+ecx*2+0x78]
  413cb1:	inc    edi
  413cb2:	gs dec edx
  413cb4:	daa    
  413cb5:	and    eax,0xf4b9d1fb
  413cba:	push   ebp
  413cbb:	neg    DWORD PTR cs:[eax]
  413cbe:	add    eax,0x451077ac
  413cc3:	dec    edx
  413cc4:	shr    DWORD PTR [ebp+0x2e],cl
  413cc7:	cmp    eax,0x544dac5
  413ccc:	inc    edi
  413ccd:	or     al,0x39
  413ccf:	cmc    
  413cd0:	stc    
  413cd1:	push   eax
  413cd2:	mov    ds:0xf033fc84,eax
  413cd7:	dec    ebx
  413cd8:	and    BYTE PTR ds:0x93fa43ce,bl
  413cde:	sar    BYTE PTR [ebx+0x2f],0xd5
  413ce2:	les    bx,DWORD PTR [esi-0x62dbc625]
  413ce9:	pop    ss
  413cea:	iret   
  413ceb:	xchg   esi,eax
  413cec:	push   ecx
  413ced:	push   ebx
  413cee:	jns    0x413d3d
  413cf0:	mov    ?,WORD PTR [edi+0x61]
  413cf3:	jl     0x413c95
  413cf5:	push   ebp
  413cf6:	push   ds
  413cf7:	sub    edi,esp
  413cf9:	xchg   edi,eax
  413cfa:	out    dx,eax
  413cfb:	cmp    cl,dh
  413cfd:	hlt    
  413cfe:	pop    ebp
  413cff:	retf   0xe48
  413d02:	loop   0x413c9b
  413d04:	jns    0x413d73
  413d06:	lods   eax,DWORD PTR ds:[esi]
  413d07:	sbb    al,0x8a
  413d09:	mov    ah,0xc
  413d0b:	jp     0x413d1d
  413d0d:	imul   eax,DWORD PTR [ebx],0x21
  413d10:	clc    
  413d11:	xor    BYTE PTR [esi],ah
  413d13:	mov    dh,0xed
  413d15:	cmp    dh,BYTE PTR [ecx+0x3a2ba68d]
  413d1b:	mov    edi,0xd0871318
  413d20:	cmp    DWORD PTR [ebp+0x74],ebx
  413d23:	pusha  
  413d24:	push   cs
  413d25:	jo     0x413d0c
  413d27:	adc    al,dh
  413d29:	pushf  
  413d2a:	or     DWORD PTR [eax+0x47],eax
  413d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d2e:	cli    
  413d2f:	(bad)  
  413d30:	push   edi
  413d31:	push   0x99d7e0c7
  413d36:	dec    esi
  413d37:	pop    ds
  413d38:	jo     0x413cbc
  413d3a:	repnz inc ecx
  413d3c:	and    bh,dh
  413d3e:	jns    0x413cdc
  413d40:	pcmpgtd mm7,QWORD PTR [eax+0x44996fd6]
  413d47:	dec    edx
  413d48:	rol    DWORD PTR [edx+0x53],1
  413d4b:	dec    eax
  413d4c:	dec    ecx
  413d4d:	cmp    BYTE PTR [ecx+edi*8],bh
  413d50:	dec    esi
  413d51:	int3   
  413d52:	imul   BYTE PTR [edi-0x4]
  413d55:	or     DWORD PTR [ebp+0x12],0xb30a41e5
  413d5c:	in     eax,dx
  413d5d:	out    dx,eax
  413d5e:	inc    eax
  413d5f:	rep ins BYTE PTR es:[edi],dx
  413d61:	pop    ds
  413d62:	jno    0x96f9e658
  413d68:	and    esi,DWORD PTR [esi-0x27]
  413d6b:	ins    DWORD PTR es:[edi],dx
  413d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d6d:	repz pop edx
  413d6f:	fwait
  413d70:	add    al,0x24
  413d72:	xor    eax,0x4116e5e5
  413d77:	pushf  
  413d78:	push   esp
  413d79:	out    dx,eax
  413d7a:	pop    ebx
  413d7b:	xchg   esp,eax
  413d7c:	sub    BYTE PTR [ebx],cl
  413d7e:	test   BYTE PTR [ebp-0x31],dh
  413d81:	xchg   BYTE PTR [edx+0x75],bl
  413d84:	pop    ebx
  413d85:	push   esp
  413d86:	xchg   DWORD PTR [eax+edi*2],ebp
  413d89:	jno    0x413d38
  413d8b:	retf   
  413d8c:	loop   0x413d17
  413d8e:	pop    es
  413d8f:	dec    esi
  413d90:	ins    BYTE PTR es:[edi],dx
  413d91:	xor    al,0x8e
  413d93:	and    dl,dl
  413d95:	cli    
  413d96:	mov    al,ds:0x1b536d5e
  413d9b:	mov    edi,gs
  413d9d:	cmp    esp,0x3a97c72
  413da3:	stos   BYTE PTR es:[edi],al
  413da4:	in     al,0x33
  413da6:	cs push edi
  413da8:	jg     0x413d4b
  413daa:	aam    0xce
  413dac:	xchg   ecx,eax
  413dad:	int3   
  413dae:	jae    0x413da0
  413db0:	and    ebx,esp
  413db2:	out    0x9c,al
  413db4:	xchg   edi,eax
  413db5:	cmp    ch,dh
  413db7:	aad    0x1c
  413db9:	mov    ah,0x89
  413dbb:	fsubr  st,st(3)
  413dbd:	push   esp
  413dbe:	adc    dl,BYTE PTR [esi-0x21]
  413dc1:	fstp   DWORD PTR [edi+edi*8]
  413dc4:	(bad)  
  413dc6:	ficomp WORD PTR [ecx]
  413dc8:	sub    eax,0xb6ad97ac
  413dcd:	jno    0x413df3
  413dcf:	mov    ds:0xcb6faf00,eax
  413dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd5:	inc    esp
  413dd6:	fimul  DWORD PTR [ecx-0x63]
  413dd9:	arpl   WORD PTR [ecx-0x5ba8021f],dx
  413ddf:	push   esi
  413de0:	ret    0xb3ab
  413de3:	dec    eax
  413de4:	cwde   
  413de5:	xor    eax,0x9daa6b60
  413dea:	into   
  413deb:	jp     0x413de5
  413ded:	xor    esi,DWORD PTR [ebp-0x72]
  413df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df1:	mov    eax,0xd4348ea3
  413df6:	xchg   ebx,eax
  413df7:	pop    eax
  413df8:	loopne 0x413d95
  413dfa:	jne    0x413d96
  413dfc:	(bad)  
  413dfd:	xchg   ebp,eax
  413dfe:	mov    ah,0x3d
  413e00:	je     0x413e47
  413e02:	pop    ebp
  413e03:	repz jne 0x413db2
  413e06:	inc    eax
  413e07:	cmp    cl,BYTE PTR [ebx+0x5e]
  413e0a:	sahf   
  413e0b:	outs   dx,DWORD PTR fs:[esi]
  413e0d:	ja     0x413e18
  413e0f:	push   esi
  413e10:	into   
  413e11:	sbb    DWORD PTR [ecx],0x34a18bc6
  413e17:	adc    BYTE PTR [ebx+edx*2],cl
  413e1a:	mov    al,0xda
  413e1c:	cmp    al,0x3b
  413e1e:	sbb    BYTE PTR [ebp+0x5b],al
  413e21:	stos   DWORD PTR es:[edi],eax
  413e22:	sahf   
  413e23:	loop   0x413e80
  413e25:	or     ecx,DWORD PTR [edx+edx*8-0x5]
  413e29:	mov    ecx,0x593a7640
  413e2e:	std    
  413e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e30:	jl     0x413e70
  413e32:	ins    DWORD PTR es:[edi],dx
  413e33:	jne    0x3c360567
  413e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e3a:	fistp  QWORD PTR [esp+ebx*1+0x7f]
  413e3e:	pop    es
  413e3f:	mov    bh,0xcb
  413e41:	ret    0x90a8
  413e44:	push   ebx
  413e45:	adc    edx,ecx
  413e47:	jge    0x413dd1
  413e49:	dec    esi
  413e4a:	mov    ds:0x206478c0,eax
  413e4f:	cwde   
  413e50:	jbe    0x413e43
  413e52:	dec    ecx
  413e53:	mov    ds:0x784e7800,al
  413e58:	ret    
  413e59:	xor    al,0x32
  413e5b:	push   0xb134c309
  413e60:	mov    al,0x7e
  413e62:	xor    BYTE PTR [ecx+edx*2],0xc7
  413e66:	mov    gs,ebp
  413e68:	and    bh,BYTE PTR [esi]
  413e6a:	sbb    eax,0xa81785ef
  413e6f:	sti    
  413e70:	pop    esp
  413e71:	stos   DWORD PTR es:[edi],eax
  413e72:	inc    edi
  413e73:	je     0x413e52
  413e75:	fs mov eax,0x7a4433f2
  413e7b:	mov    eax,0x242ddb82
  413e80:	sbb    BYTE PTR [ecx+0x632b4e09],ch
  413e86:	mov    ah,0x22
  413e88:	pop    esi
  413e89:	ret    
  413e8a:	aas    
  413e8b:	fldenv [edi-0x61]
  413e8e:	and    esp,DWORD PTR [eax]
  413e90:	push   esp
  413e91:	outs   dx,BYTE PTR ds:[esi]
  413e92:	test   al,0xe6
  413e94:	mov    ch,0xa2
  413e96:	call   0x7eaf:0x3964eab7
  413e9d:	lea    eax,[ecx+0x7936ccb1]
  413ea3:	pop    ecx
  413ea4:	dec    ebp
  413ea5:	ds cs xchg edx,eax
  413ea8:	cwde   
  413ea9:	cli    
  413eaa:	sub    al,BYTE PTR [eax]
  413eac:	xchg   ebp,eax
  413ead:	jecxz  0x413e34
  413eaf:	(bad)  
  413eb0:	retf   
  413eb1:	loop   0x413e48
  413eb3:	scas   eax,DWORD PTR es:[edi]
  413eb4:	cmp    eax,0x94e82ad8
  413eb9:	imul   ecx,DWORD PTR [edx],0xf3cb81aa
  413ebf:	push   esi
  413ec0:	ftst   
  413ec2:	or     esp,DWORD PTR [edi+ecx*8+0x27]
  413ec6:	mov    esp,0xcf2f6baf
  413ecb:	cmp    al,0x74
  413ecd:	inc    ebx
  413ece:	(bad)  
  413ecf:	push   esp
  413ed0:	sub    DWORD PTR [ebp-0x6d],esi
  413ed3:	loopne 0x413f1a
  413ed5:	cmp    eax,0xa15cc528
  413eda:	mov    dl,BYTE PTR [ebx+0x71]
  413edd:	push   es
  413ede:	dec    ecx
  413edf:	jmp    DWORD PTR [ecx+0x14]
  413ee2:	adc    al,0x57
  413ee4:	shl    ch,1
  413ee6:	cli    
  413ee7:	push   ds
  413ee8:	jmp    DWORD PTR [eax]
  413eea:	ja     0x413f49
  413eec:	test   DWORD PTR [ebp+0x7e76a49a],0x607fe922
  413ef6:	mov    dl,dh
  413ef8:	popa   
  413ef9:	out    0x2b,eax
  413efb:	xor    al,0xa8
  413efd:	or     eax,0x742baab
  413f02:	xchg   BYTE PTR [eax-0x27a529a6],bh
  413f08:	and    DWORD PTR [edi+0x18],ebp
  413f0b:	clc    
  413f0c:	xchg   ebp,eax
  413f0d:	pop    eax
  413f0e:	xor    DWORD PTR [esi+ecx*1+0x18],0xaab1e7a7
  413f16:	xchg   edi,eax
  413f17:	stos   BYTE PTR es:[edi],al
  413f18:	rcl    edi,0x9b
  413f1b:	rol    BYTE PTR [esi+0x4014a82a],0x57
  413f22:	mov    ebx,0x63903fde
  413f27:	stos   BYTE PTR es:[edi],al
  413f28:	fild   QWORD PTR [ebp+ecx*8+0x37ea3451]
  413f2f:	cmp    bl,BYTE PTR [ecx]
  413f31:	das    
  413f32:	imul   esi,DWORD PTR es:[edx+0x4bc0ff72],0x2c
  413f3a:	xchg   edx,eax
  413f3b:	jp     0x413ef0
  413f3d:	pop    edx
  413f3e:	mov    esi,0x1ce148d9
  413f43:	and    edi,esi
  413f45:	repz call 0x1dd16061
  413f4b:	sbb    DWORD PTR [edi],0xbad35b59
  413f51:	dec    eax
  413f52:	pusha  
  413f53:	movaps xmm3,XMMWORD PTR [ebp-0x7f803e1]
  413f5a:	and    BYTE PTR [ebx+0x6c],0x76
  413f5e:	pop    esp
  413f5f:	adc    esi,DWORD PTR [edi+0x18]
  413f62:	and    esi,DWORD PTR ds:0x10a362df
  413f68:	jne    0x413f2f
  413f6a:	or     bl,dh
  413f6c:	ds mov bl,0xcd
  413f6f:	(bad)  
  413f70:	sub    DWORD PTR [eax],ecx
  413f72:	pop    ebp
  413f73:	sbb    al,0x77
  413f75:	adc    edi,DWORD PTR [ebx+0x34]
  413f78:	and    BYTE PTR [esi-0x6f],0x90
  413f7c:	xor    BYTE PTR [esi+0x2470d96b],0x58
  413f83:	push   esi
  413f84:	mov    eax,DWORD PTR [edx-0xa]
  413f87:	add    eax,DWORD PTR [eax+0x3e8da797]
  413f8d:	adc    al,0x59
  413f8f:	cmp    DWORD PTR [eax+0x82a12c9],edi
  413f95:	or     BYTE PTR [ebx-0x7c73f84c],ch
  413f9b:	mov    edi,0xd0c6ab8c
  413fa0:	mov    bl,0x73
  413fa2:	icebp  
  413fa3:	sub    al,0x18
  413fa5:	daa    
  413fa6:	loopne 0x413f39
  413fa8:	pop    ss
  413fa9:	mov    dl,0x4c
  413fab:	int3   
  413fac:	push   eax
  413fad:	push   ebp
  413fae:	(bad)  
  413faf:	hlt    
  413fb0:	int    0x32
  413fb2:	aad    0xa8
  413fb4:	cmp    DWORD PTR [ecx-0x3],ecx
  413fb7:	and    dh,BYTE PTR [esi-0xa]
  413fba:	mov    esi,0xb02320b2
  413fbf:	mov    ebp,0x53569cd
  413fc4:	data16 loop 0x413fb3
  413fc7:	and    ah,dh
  413fc9:	ins    BYTE PTR es:[edi],dx
  413fca:	inc    ecx
  413fcb:	fwait
  413fcc:	mov    ecx,0x6cadeaf1
  413fd1:	mov    esi,0x658fe4fa
  413fd6:	out    dx,eax
  413fd7:	push   esp
  413fd8:	enter  0x8c7e,0xd2
  413fdc:	stos   BYTE PTR es:[edi],al
  413fdd:	and    ebp,DWORD PTR [edx-0xb0805f1]
  413fe3:	aas    
  413fe4:	adc    BYTE PTR [ebp-0xd],dh
  413fe7:	pop    es
  413fe8:	adc    al,0xd3
  413fea:	add    cl,BYTE PTR [eax+edi*2+0x50]
  413fee:	stc    
  413fef:	push   esi
  413ff0:	test   DWORD PTR [eax-0x1c],edi
  413ff3:	popa   
  413ff4:	mov    dh,0x95
  413ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ff7:	cmp    al,0x98
  413ff9:	data16 or al,0x16
  413ffc:	add    DWORD PTR [esi-0x40],ebp
  413fff:	fsubp  st(4),st
  414001:	mul    DWORD PTR [edi+0x3]
  414004:	stos   BYTE PTR es:[edi],al
  414005:	in     al,0xab
  414007:	inc    esi
  414008:	and    eax,DWORD PTR [edi]
  41400a:	addr16 cmp al,0xb2
  41400d:	push   ebp
  41400e:	clc    
  41400f:	test   BYTE PTR [ebx],dl
  414011:	push   0x5b
  414013:	je     0x414039
  414015:	imul   esp,DWORD PTR [ebx],0xb9707841
  41401b:	dec    eax
  41401c:	stos   DWORD PTR es:[edi],eax
  41401d:	and    cl,dl
  41401f:	ja     0x414013
  414021:	dec    ebx
  414022:	(bad)  
  414023:	mov    esi,0x4425e5b7
  414028:	lahf   
  414029:	into   
  41402a:	test   ebp,ebp
  41402c:	sahf   
  41402d:	push   cs
  41402e:	sub    al,0xff
  414030:	pop    eax
  414031:	std    
  414032:	das    
  414033:	dec    edx
  414034:	into   
  414035:	mov    ah,0x1a
  414037:	mov    esp,0x25391b9c
  41403c:	and    dh,BYTE PTR [edx-0x521c959b]
  414042:	mov    eax,ds:0xf2045204
  414047:	jge    0x414029
  414049:	push   ecx
  41404a:	in     eax,dx
  41404b:	pop    ecx
  41404c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404d:	and    BYTE PTR [ebx-0x2b827c3],ch
  414053:	mov    dl,0xca
  414055:	mov    ebp,DWORD PTR [edx]
  414057:	mov    eax,0x907a9928
  41405c:	dec    ecx
  41405d:	mov    esi,0x27222bf3
  414062:	out    0xd0,al
  414064:	and    eax,0xdd5f4260
  414069:	loope  0x41401a
  41406b:	pop    ebx
  41406c:	xchg   esi,eax
  41406d:	push   ecx
  41406e:	ins    BYTE PTR es:[edi],dx
  41406f:	mov    dl,0x42
  414071:	xchg   DWORD PTR [edx-0x79c940c4],ecx
  414077:	inc    eax
  414078:	stos   DWORD PTR es:[edi],eax
  414079:	or     DWORD PTR [edi+0x34],edx
  41407c:	mov    cl,0xec
  41407e:	mov    ebp,es
  414080:	cmp    BYTE PTR [ecx+0xe],ch
  414083:	lahf   
  414084:	adc    DWORD PTR ds:[edx-0x642a5d6c],esp
  41408b:	aaa    
  41408c:	fstp   TBYTE PTR [ebp-0xa67d61a]
  414092:	jmp    0xeaac:0x9b6cfdc1
  414099:	js     0x4140a9
  41409b:	inc    edi
  41409c:	xor    ah,BYTE PTR [edi+0x46699e39]
  4140a2:	sub    BYTE PTR [ebx-0x78b4207b],ch
  4140a8:	outs   dx,DWORD PTR ds:[esi]
  4140a9:	pop    edi
  4140aa:	aam    0xcd
  4140ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ad:	push   0x2cfe3a06
  4140b2:	lods   eax,DWORD PTR ds:[esi]
  4140b3:	adc    eax,DWORD PTR [eax+0x1]
  4140b6:	sub    eax,0xe7c1ec3a
  4140bb:	adc    DWORD PTR [ebx],edi
  4140bd:	dec    ebx
  4140be:	dec    esi
  4140bf:	sbb    eax,0x1fc19694
  4140c4:	and    al,0x48
  4140c6:	adc    BYTE PTR [ebx+ebp*8+0x49c6a03b],cl
  4140cd:	xchg   ebp,eax
  4140ce:	out    0xca,al
  4140d0:	inc    esp
  4140d1:	xchg   ebx,eax
  4140d2:	and    DWORD PTR [ebp+0x1c8b424b],esi
  4140d8:	adc    eax,0xbc92692a
  4140dd:	add    al,0xe3
  4140df:	sbb    DWORD PTR [ecx-0x63805b24],eax
  4140e5:	pop    es
  4140e6:	in     eax,0x55
  4140e8:	leave  
  4140e9:	je     0x4140e3
  4140eb:	dec    ebp
  4140ec:	outs   dx,BYTE PTR ds:[esi]
  4140ed:	imul   ebp,DWORD PTR [eax+0x0],0x5b8e95fa
  4140f4:	jo     0x4140b7
  4140f6:	div    bh
  4140f8:	mov    bh,BYTE PTR [esi+0x6bf2d937]
  4140fe:	scas   eax,DWORD PTR es:[edi]
  4140ff:	jns    0x414138
  414101:	fdivrp st(7),st
  414103:	mov    ds:0xc4ba9f2c,al
  414108:	das    
  414109:	cdq    
  41410a:	xchg   esp,eax
  41410b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41410c:	out    0x45,eax
  41410e:	in     eax,0xf4
  414110:	cld    
  414111:	mov    DWORD PTR [ebp-0x36],edi
  414114:	or     BYTE PTR [edx+ebx*1-0x3f243206],dh
  41411b:	les    edx,FWORD PTR [edi]
  41411d:	loop   0x4140a0
  41411f:	push   esp
  414120:	scas   al,BYTE PTR es:[edi]
  414121:	rol    BYTE PTR [esi+ecx*4],cl
  414124:	xor    cl,BYTE PTR [esi+0x7fa97f7e]
  41412a:	test   eax,0x410e8b0c
  41412f:	arpl   WORD PTR [eax-0x46ac369c],cx
  414135:	aas    
  414136:	push   es
  414137:	inc    esi
  414138:	jb     0x414141
  41413a:	inc    edx
  41413b:	popa   
  41413c:	ins    DWORD PTR es:[edi],dx
  41413d:	xchg   ebx,eax
  41413e:	push   edi
  41413f:	push   0xffffffd6
  414141:	dec    edi
  414142:	sti    
  414143:	inc    edi
  414144:	pop    ds
  414145:	or     BYTE PTR [eax],bh
  414147:	or     ah,ch
  414149:	int    0xcc
  41414b:	cli    
  41414c:	pop    edi
  41414d:	call   0xaa7916df
  414152:	stos   DWORD PTR es:[edi],eax
  414153:	popa   
  414154:	jecxz  0x4140e8
  414156:	fadd   QWORD PTR [edx]
  414158:	cld    
  414159:	fwait
  41415a:	dec    edi
  41415b:	jb     0x4141d9
  41415d:	mov    bh,BYTE PTR [ebp-0x5d]
  414160:	ss push ds
  414162:	inc    ebp
  414163:	retf   
  414164:	dec    esp
  414165:	push   es
  414166:	adc    BYTE PTR [ebx+0x16],dl
  414169:	pop    ds
  41416a:	test   bh,dl
  41416c:	pop    edi
  41416d:	inc    edi
  41416e:	test   BYTE PTR [esi],0x23
  414171:	sub    al,0xc
  414173:	ins    DWORD PTR es:[edi],dx
  414174:	adc    bl,ah
  414176:	xor    al,0xfd
  414178:	mov    dh,0xa6
  41417a:	out    0xc0,al
  41417c:	retf   0x160a
  41417f:	rol    BYTE PTR [ecx-0x4a],0x47
  414183:	and    eax,0xb99717da
  414188:	mov    bl,0x8b
  41418a:	mov    eax,0x3e8f7615
  41418f:	sbb    eax,0xe68537e1
  414194:	into   
  414195:	cmp    eax,DWORD PTR [ebx+0x3c66c3d1]
  41419b:	mov    al,0x1f
  41419d:	xlat   BYTE PTR ds:[ebx]
  41419e:	(bad)  gs:[ebx]
  4141a1:	les    edx,FWORD PTR [ebp-0x20]
  4141a4:	and    dl,BYTE PTR [ecx-0x40122a02]
  4141aa:	dec    edx
  4141ab:	mov    bl,0xd4
  4141ad:	jl     0x414145
  4141af:	arpl   bx,dx
  4141b1:	sbb    al,0xe1
  4141b3:	in     eax,dx
  4141b4:	cmp    esi,ecx
  4141b6:	cmp    BYTE PTR [eax],ah
  4141b8:	sub    al,0xd2
  4141ba:	xor    cl,al
  4141bc:	cdq    
  4141bd:	stc    
  4141be:	mov    cs,edx
  4141c0:	cdq    
  4141c1:	push   0x8f86fced
  4141c6:	push   ebp
  4141c7:	mov    bl,0x74
  4141c9:	or     eax,0x58b5b819
  4141ce:	mov    bh,0xb0
  4141d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d1:	mov    al,ds:0xbb670d0e
  4141d6:	or     ch,BYTE PTR [eax]
  4141d8:	inc    eax
  4141d9:	dec    ecx
  4141da:	or     al,0x1c
  4141dc:	call   FWORD PTR [ecx-0x2f87d440]
  4141e2:	call   0xacf98a27
  4141e7:	nop
  4141e8:	inc    ebp
  4141e9:	xchg   DWORD PTR [eax-0x3465832e],esp
  4141ef:	dec    ebx
  4141f0:	movzx  eax,WORD PTR [ebp+0x3a554f4b]
  4141f7:	mov    ecx,0xbf7df4d4
  4141fc:	adc    eax,0xedcb7f39
  414201:	push   0xffffff8f
  414203:	and    eax,0x6227492a
  414208:	arpl   bx,cx
  41420a:	shl    DWORD PTR [ebp+0x48098241],1
  414210:	add    eax,esi
  414212:	out    dx,eax
  414213:	inc    eax
  414214:	xchg   ebx,eax
  414215:	cmp    esp,DWORD PTR [edi-0x5d]
  414218:	push   ebp
  414219:	jne    0x4141a4
  41421b:	xor    ecx,edx
  41421d:	push   ebx
  41421e:	je     0x414255
  414220:	dec    edx
  414221:	sbb    BYTE PTR [ebp-0x12],bl
  414224:	sbb    eax,0x177efd3c
  414229:	sub    dl,BYTE PTR [ecx+0x5e09392a]
  41422f:	mov    ah,0xc8
  414231:	aaa    
  414232:	test   BYTE PTR [ebx],ah
  414234:	xchg   ecx,eax
  414235:	outs   dx,DWORD PTR ds:[esi]
  414236:	push   0x7190884
  41423b:	jge    0x635d0bad
  414241:	mov    dh,0xc0
  414243:	xchg   edi,eax
  414244:	jl     0x4141ef
  414246:	push   ebp
  414247:	inc    eax
  414248:	sbb    al,0xce
  41424a:	loop   0x41425e
  41424c:	inc    eax
  41424d:	adc    al,BYTE PTR [edi+0x36629919]
  414253:	call   DWORD PTR [edi+eiz*8+0x68ed8937]
  41425a:	mov    esp,0xe1244019
  41425f:	arpl   WORD PTR [edx+0x74278727],bp
  414265:	xor    eax,0x9221e786
  41426a:	mov    ebx,0xf89b67a1
  41426f:	xchg   edi,eax
  414270:	dec    edx
  414271:	xchg   BYTE PTR [edi-0x1c254a51],bl
  414277:	sbb    al,0x83
  414279:	pushf  
  41427a:	adc    al,0xe2
  41427c:	ffreep st(5)
  41427e:	pop    ebx
  41427f:	push   ecx
  414280:	xor    al,0x53
  414282:	pop    ebx
  414283:	dec    edx
  414285:	push   es
  414286:	loopne 0x4142fb
  414288:	inc    eax
  414289:	ins    BYTE PTR es:[edi],dx
  41428a:	daa    
  41428b:	ins    DWORD PTR es:[edi],dx
  41428c:	pop    esp
  41428d:	adc    al,BYTE PTR [edi+0x17]
  414290:	sti    
  414291:	pushf  
  414292:	out    0x58,al
  414294:	mov    eax,esi
  414296:	cli    
  414297:	mov    esi,0x6b302fef
  41429c:	inc    edx
  41429d:	dec    ebx
  41429e:	mov    edi,0xfce1a33b
  4142a3:	ins    DWORD PTR es:[edi],dx
  4142a4:	push   edx
  4142a5:	outs   dx,BYTE PTR ds:[esi]
  4142a6:	cmp    al,0x5d
  4142a8:	add    DWORD PTR [edi],eax
  4142aa:	outs   dx,BYTE PTR ds:[esi]
  4142ab:	mov    esi,0xc5bf0aff
  4142b0:	pusha  
  4142b1:	ins    DWORD PTR es:[edi],dx
  4142b2:	mov    eax,0xede391c3
  4142b7:	push   0x7
  4142b9:	mov    eax,ds:0xf952a3d7
  4142be:	jne    0x414264
  4142c0:	icebp  
  4142c1:	test   eax,0x62f4e4a1
  4142c6:	repz loop 0x414299
  4142c9:	mov    ebx,0x8da010a7
  4142ce:	in     eax,dx
  4142cf:	push   ecx
  4142d0:	sub    al,0xb0
  4142d2:	ins    DWORD PTR es:[edi],dx
  4142d3:	out    dx,eax
  4142d4:	mov    eax,ds:0x3e218735
  4142d9:	inc    edi
  4142da:	dec    esp
  4142db:	push   eax
  4142dc:	pop    ecx
  4142dd:	mov    WORD PTR [eax+0xe],fs
  4142e0:	or     al,0xe
  4142e2:	mov    ebx,0xa1b02a0e
  4142e7:	sub    al,0xd1
  4142e9:	and    DWORD PTR [ecx],0x2aa0824b
  4142ef:	(bad)  
  4142f0:	mov    esp,0x25ce3cb4
  4142f5:	push   es
  4142f6:	or     al,BYTE PTR [ebp-0x46]
  4142f9:	adc    dl,BYTE PTR [ebx-0x5e8639e2]
  4142ff:	les    edx,FWORD PTR [ebx+0xb]
  414302:	jne    0x4142bd
  414304:	or     al,0xc3
  414306:	or     DWORD PTR [ebx],esi
  414308:	ds test eax,0x6c1b4216
  41430e:	adc    bh,0x79
  414311:	stc    
  414312:	ret    
  414313:	lahf   
  414314:	(bad)  
  414315:	sbb    BYTE PTR [edx-0x5dc507e1],bl
  41431b:	shl    DWORD PTR ds:0xaa15e34f,0xb0
  414322:	adc    ebx,DWORD PTR [esp+edx*4-0x69]
  414326:	rcl    DWORD PTR [ebx-0x77f806c],1
  41432c:	jns    0x414349
  41432e:	pushf  
  41432f:	jb     0x414387
  414331:	mov    WORD PTR [ecx+0x23],?
  414334:	xor    BYTE PTR [edx+ecx*4],cl
  414337:	lods   al,BYTE PTR ds:[esi]
  414338:	aas    
  414339:	sub    al,0xdf
  41433b:	inc    cx
  41433d:	pushf  
  41433e:	fadd   QWORD PTR ds:0xaead3dc7
  414344:	push   ecx
  414345:	adc    edx,edx
  414347:	push   edi
  414348:	int    0x3b
  41434a:	mov    edx,0xd3ac2837
  41434f:	mov    bh,0x47
  414351:	push   eax
  414352:	cli    
  414353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414354:	mov    al,0x5a
  414356:	std    
  414357:	push   edx
  414358:	mov    ah,0x54
  41435a:	iret   
  41435b:	add    ebx,DWORD PTR [ecx+0x5b2fecd9]
  414361:	lods   al,BYTE PTR ds:[esi]
  414362:	fistp  WORD PTR [esi+0x7de963d7]
  414368:	stos   DWORD PTR es:[edi],eax
  414369:	mov    ds:0x843249f6,eax
  41436e:	pop    edi
  41436f:	push   ebx
  414370:	fldenv [ebx-0x36]
  414373:	fnstsw WORD PTR [ebp+0xc201c84]
  414379:	mov    ds:0x1a22e26c,eax
  41437e:	ret    0xeb4
  414381:	cli    
  414382:	jno    0x414351
  414384:	jmp    0x47fb34b2
  414389:	cmc    
  41438a:	fwait
  41438b:	je     0x414341
  41438d:	test   ah,cl
  41438f:	int    0xc2
  414391:	and    DWORD PTR [eax+esi*4],0xc5d4a0a4
  414398:	dec    ecx
  414399:	pop    esi
  41439a:	mov    esp,0x86eaef46
  41439f:	icebp  
  4143a0:	daa    
  4143a1:	inc    ecx
  4143a2:	mov    dh,0x86
  4143a4:	fs fsubr st,st(4)
  4143a7:	ss lock je 0x4143a4
  4143ab:	sub    eax,0xd230112a
  4143b0:	inc    esp
  4143b1:	fdivr  DWORD PTR [eax-0x6f]
  4143b4:	ja     0x4143df
  4143b6:	aam    0xdc
  4143b8:	inc    esp
  4143b9:	mov    ds,WORD PTR [edi]
  4143bb:	and    al,0xc2
  4143bd:	ret    0x3918
  4143c0:	popf   
  4143c1:	nop
  4143c2:	(bad)  
  4143c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143c4:	mov    cl,0xc4
  4143c6:	fld    QWORD PTR [edx+0x51]
  4143c9:	pop    esp
  4143ca:	cmp    ah,dl
  4143cc:	gs push ecx
  4143ce:	mov    esp,ebp
  4143d0:	xor    ch,ah
  4143d2:	jle    0x41436e
  4143d4:	mov    al,0x1a
  4143d6:	out    dx,al
  4143d7:	stos   DWORD PTR es:[edi],eax
  4143d8:	jmp    0x4143ef
  4143da:	pop    es
  4143db:	push   esi
  4143dc:	sar    DWORD PTR [esp+ecx*1-0x1d],0x4c
  4143e1:	add    al,0x83
  4143e3:	jl     0x414399
  4143e5:	std    
  4143e6:	jns    0x4143ed
  4143e8:	inc    ecx
  4143e9:	push   ebp
  4143ea:	test   al,0x6e
  4143ec:	fwait
  4143ed:	mov    ah,0x72
  4143ef:	fldenv [eax-0x7]
  4143f2:	mov    ds:0x718ee11f,al
  4143f7:	cmp    al,0x7c
  4143f9:	push   0xf3b82afb
  4143fe:	add    esp,0x28713f1b
  414404:	nop
  414405:	dec    eax
  414406:	in     eax,0xba
  414408:	icebp  
  414409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440a:	out    dx,al
  41440b:	add    DWORD PTR [edi+eax*1+0x5dba9fc5],0xfe61620b
  414416:	adc    DWORD PTR [edx+0x74],eax
  414419:	xor    edi,esp
  41441b:	mov    ds:0x92cb632,al
  414420:	(bad)  
  414421:	sti    
  414422:	std    
  414423:	arpl   si,di
  414425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414426:	mov    edx,0xf69aeaf8
  41442b:	xchg   edx,eax
  41442c:	push   eax
  41442d:	adc    edx,DWORD PTR [esi-0x76]
  414430:	pop    edi
  414431:	pop    ds
  414432:	popf   
  414433:	pminsw mm5,QWORD PTR [edx-0x2]
  414437:	push   esi
  414438:	sub    eax,DWORD PTR [ecx-0x39168fe2]
  41443e:	mov    esi,DWORD PTR [edx]
  414440:	dec    edi
  414441:	mov    edi,0x12f1b858
  414446:	jbe    0x4143c8
  414448:	loope  0x414413
  41444a:	les    edx,FWORD PTR [ecx+0x20]
  41444d:	retf   0x38d0
  414450:	inc    ebx
  414451:	icebp  
  414452:	lods   al,BYTE PTR ds:[esi]
  414453:	dec    edi
  414454:	add    DWORD PTR [ebx],ecx
  414456:	or     DWORD PTR [esi],esp
  414458:	mov    eax,0x510a2abf
  41445d:	add    BYTE PTR [esi+ebx*8-0x7e],ah
  414461:	jge    0x414407
  414463:	add    eax,0xc1c87d9
  414468:	xor    eax,0x4a8b59e7
  41446d:	cmp    eax,0x6f8934f8
  414472:	cmp    DWORD PTR [edi+ebp*1-0x1ec4205e],ebx
  414479:	add    BYTE PTR ds:0x6f3e8393,ch
  41447f:	test   DWORD PTR [esi-0x5841a36a],esp
  414485:	loop   0x41440c
  414487:	cdq    
  414488:	retf   
  414489:	or     al,0x8c
  41448b:	(bad)  
  41448c:	imul   edi,DWORD PTR [edx],0x55d59370
  414492:	add    esp,DWORD PTR [esi+0x24]
  414495:	out    dx,al
  414496:	mov    eax,0x657abcae
  41449b:	sbb    edi,DWORD PTR [ecx+0x44]
  41449e:	jae    0x41449d
  4144a0:	callw  0xc63
  4144a4:	xchg   ecx,eax
  4144a5:	shl    DWORD PTR [ecx+ebx*2-0x58334c1d],0xe2
  4144ad:	dec    edi
  4144ae:	test   eax,0x12f54c5
  4144b3:	inc    esi
  4144b4:	sub    eax,0x54d683d1
  4144b9:	mov    ah,0xbd
  4144bb:	out    dx,al
  4144bc:	jne    0x414519
  4144be:	or     DWORD PTR [eax+0x59],ecx
  4144c1:	mov    ds:0x2589c348,eax
  4144c6:	add    esp,eax
  4144c8:	sub    eax,0xf7b0993e
  4144cd:	xchg   ecx,eax
  4144ce:	sub    BYTE PTR [esi],dl
  4144d0:	jae    0x4144d5
  4144d2:	xor    bh,BYTE PTR [eax+0x4405f6dd]
  4144d8:	repz cdq 
  4144da:	sbb    BYTE PTR [ebx+edx*8-0x3092f1ea],dh
  4144e1:	pop    esp
  4144e2:	mov    ss,WORD PTR [ecx-0x3ec03698]
  4144e8:	or     DWORD PTR [edi],esi
  4144ea:	sub    eax,0x699a72af
  4144ef:	cmp    esp,DWORD PTR [ebx]
  4144f1:	inc    esi
  4144f2:	int    0xe3
  4144f4:	ror    esp,cl
  4144f6:	in     eax,dx
  4144f7:	xchg   ecx,eax
  4144f8:	xchg   esp,eax
  4144f9:	outs   dx,BYTE PTR ds:[esi]
  4144fa:	int3   
  4144fb:	mov    ds:0xc3854918,al
  414500:	pop    es
  414501:	mov    ah,0x60
  414503:	outs   dx,DWORD PTR ds:[esi]
  414504:	xchg   ecx,eax
  414505:	dec    ebp
  414506:	(bad)  
  414507:	bound  ebx,QWORD PTR [ebx+0x60]
  41450a:	mov    dl,cl
  41450c:	repnz mov dh,dl
  41450f:	bound  ebp,QWORD PTR [ebx+0x6d]
  414512:	push   edx
  414513:	aam    0x62
  414515:	push   0x8af317e0
  41451a:	lahf   
  41451b:	xor    al,0xa2
  41451d:	sbb    BYTE PTR [esi+0x35],bh
  414520:	scas   al,BYTE PTR es:[edi]
  414521:	add    al,0xa2
  414523:	test   eax,0x4c7417eb
  414528:	dec    esp
  414529:	or     DWORD PTR [ecx-0x12],edx
  41452c:	not    al
  41452e:	dec    edi
  41452f:	or     al,0x24
  414531:	pop    ecx
  414532:	mov    esi,0x7824acbb
  414537:	xchg   esi,eax
  414538:	dec    esi
  414539:	retf   0x5d05
  41453c:	iret   
  41453d:	outs   dx,DWORD PTR ds:[esi]
  41453e:	xchg   esp,eax
  414540:	mov    edi,eax
  414542:	pop    ds
  414543:	in     al,0xa0
  414545:	xchg   edi,eax
  414546:	or     al,0xd7
  414548:	arpl   WORD PTR gs:[edi-0x6e],di
  41454c:	mov    ds:0xdff5e197,al
  414551:	inc    esp
  414552:	dec    edi
  414553:	repz and al,0xa8
  414556:	test   BYTE PTR [eax+ebx*2-0x39],bl
  41455a:	sbb    ebp,edx
  41455c:	scas   eax,DWORD PTR es:[edi]
  41455d:	fmul   st(2),st
  41455f:	enter  0x8f5e,0xa5
  414563:	inc    eax
  414564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414565:	mov    cl,0xcc
  414567:	call   0x56fa310e
  41456c:	jp     0x4145cc
  41456e:	ret    0x8f6e
  414571:	cmp    edi,edx
  414573:	(bad)  
  414574:	(bad)  
  414575:	mov    ecx,0x5e64157d
  41457a:	sbb    ecx,DWORD PTR [edx+0xc29e4a0]
  414580:	or     ebp,DWORD PTR [ebx-0x59be6204]
  414586:	jnp    0x41456b
  414588:	test   eax,edi
  41458a:	sub    al,0x68
  41458c:	(bad)  [ecx+0x21]
  41458f:	test   al,0x5e
  414591:	lahf   
  414592:	inc    eax
  414593:	aas    
  414594:	daa    
  414595:	lahf   
  414596:	dec    edx
  414597:	aas    
  414598:	xor    cl,dh
  41459a:	push   ecx
  41459b:	in     al,dx
  41459c:	xor    bl,0xd8
  41459f:	cs inc esi
  4145a1:	retf   0xfd6c
  4145a4:	sbb    bl,BYTE PTR [esi-0x4]
  4145a7:	inc    eax
  4145a8:	mov    cl,0x1
  4145aa:	ins    DWORD PTR es:[edi],dx
  4145ab:	gs pop edi
  4145ad:	xchg   ecx,eax
  4145ae:	xchg   ecx,eax
  4145af:	rol    BYTE PTR [ecx],0x17
  4145b2:	add    al,0x4d
  4145b4:	into   
  4145b5:	fst    QWORD PTR [eax-0x4a4582cd]
  4145bb:	inc    edi
  4145bc:	xor    BYTE PTR [ebx-0x6d5d16d1],cl
  4145c2:	pop    ecx
  4145c3:	jno    0x414626
  4145c5:	(bad)
  4145c8:	int    0x70
  4145ca:	xor    DWORD PTR [esi+ebx*8-0x6cc6249f],edi
  4145d1:	push   es
  4145d2:	fadd   st,st(7)
  4145d4:	mov    edi,0xa56e96bf
  4145d9:	add    BYTE PTR [edi-0x77fd7cd6],ch
  4145df:	pop    esi
  4145e0:	jl     0x414652
  4145e2:	je     0x414615
  4145e4:	mov    cl,0xa3
  4145e6:	lds    ebp,FWORD PTR [ecx]
  4145e8:	inc    eax
  4145e9:	fmul   QWORD PTR [ebp+0x3f]
  4145ed:	shl    BYTE PTR ds:0xbe151728,0xf2
  4145f4:	lods   al,BYTE PTR ds:[esi]
  4145f5:	fidivr DWORD PTR [ecx-0x39]
  4145f8:	mov    al,ds:0x3cbc5d98
  4145fd:	adc    BYTE PTR [ebx],al
  4145ff:	pop    edi
  414600:	inc    esi
  414601:	push   ebp
  414602:	and    eax,0x32f11152
  414607:	icebp  
  414608:	sahf   
  414609:	repnz fcmovne st,st(1)
  41460c:	(bad)  
  41460d:	(bad)  
  41460e:	int3   
  41460f:	cmp    BYTE PTR [ebx],0x27
  414612:	jne    0x414638
  414614:	mov    al,0x77
  414616:	addps  xmm0,xmm0
  414619:	xlat   BYTE PTR ds:[ebx]
  41461a:	and    BYTE PTR [edx-0x436f0b9b],ch
  414620:	xcrypt-cfb (bad)
  414621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414622:	daa    
  414623:	adc    DWORD PTR [edx-0x67],ecx
  414626:	(bad)  
  414627:	xchg   edx,eax
  414628:	mov    al,ds:0x20932804
  41462d:	ja     0x4145e0
  41462f:	mov    ebx,0x25aeaa88
  414634:	jns    0x414600
  414636:	push   cs
  414637:	sub    DWORD PTR [eax],esi
  414639:	fucomp st(4)
  41463b:	cmp    eax,0x2bc6d9c2
  414640:	xchg   esp,eax
  414641:	pushf  
  414642:	(bad)
  414645:	pop    edi
  414646:	or     ebx,DWORD PTR [edx+0x39ff6d06]
  41464c:	or     eax,0xacf75a82
  414651:	push   ss
  414652:	sti    
  414653:	push   eax
  414654:	push   es
  414655:	(bad)  
  414657:	out    dx,eax
  414658:	xchg   esi,eax
  414659:	cmp    al,0x9d
  41465b:	or     eax,0xf2aaeef7
  414660:	xlat   BYTE PTR ds:[ebx]
  414661:	ja     0x414618
  414663:	jo     0x4146ac
  414665:	aad    0x62
  414667:	mov    dh,0x35
  414669:	sbb    edx,edx
  41466b:	sbb    ch,BYTE PTR [ebp-0x5a]
  41466e:	jp     0x41464c
  414670:	nop
  414671:	pop    ecx
  414672:	out    dx,eax
  414673:	cwde   
  414674:	hlt    
  414675:	sub    edi,DWORD PTR [edi-0x4c]
  414678:	popf   
  414679:	pop    es
  41467a:	xchg   BYTE PTR [esi],ah
  41467c:	xor    BYTE PTR [ecx],ah
  41467e:	xchg   esp,eax
  41467f:	cld    
  414680:	(bad)  [ecx]
  414682:	sub    al,0x58
  414684:	in     al,dx
  414685:	cli    
  414686:	adc    eax,0x5ce14d74
  41468b:	xlat   BYTE PTR ds:[ebx]
  41468c:	lods   al,BYTE PTR ds:[esi]
  41468d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41468e:	ret    
  41468f:	stc    
  414690:	sbb    al,0x6d
  414692:	lgs    ebp,FWORD PTR [esi]
  414695:	test   BYTE PTR [eax+ecx*2],cl
  414698:	sti    
  414699:	cmp    BYTE PTR [ecx+0x11],ch
  41469c:	ss push edx
  41469e:	xchg   ecx,eax
  41469f:	stc    
  4146a0:	jecxz  0x4146a0
  4146a2:	adc    ecx,DWORD PTR [ebx-0xf5c3160]
  4146a8:	mov    ch,0xf
  4146aa:	cmp    al,BYTE PTR [ebp-0x6d]
  4146ad:	cmp    BYTE PTR [edx-0x28592423],ch
  4146b3:	mov    eax,DWORD PTR [eax]
  4146b5:	and    al,BYTE PTR [ebx+edx*4]
  4146b8:	xchg   ebx,eax
  4146b9:	inc    ebp
  4146ba:	push   ds
  4146bb:	mov    esi,0x7d22ff7f
  4146c0:	jg     0x414675
  4146c2:	mov    WORD PTR [edi],ds
  4146c4:	jae    0x414667
  4146c6:	or     BYTE PTR [edx-0x384aee9],ah
  4146cc:	pop    esp
  4146cd:	aaa    
  4146ce:	jmp    0x330e0bc0
  4146d3:	in     eax,dx
  4146d4:	lds    edx,FWORD PTR [esi+eax*8+0x24]
  4146d8:	or     eax,0xfa2e77fb
  4146dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146de:	int    0x67
  4146e0:	call   FWORD PTR [edi+0x1ddb3cf5]
  4146e6:	mov    dl,0x2a
  4146e8:	sub    dh,bl
  4146ea:	mov    cs,WORD PTR [edi+0x7d]
  4146ed:	jmp    0x6ac8:0x64168567
  4146f4:	fwait
  4146f5:	or     cl,BYTE PTR [edx]
  4146f7:	add    BYTE PTR [ecx],ah
  4146f9:	xchg   ecx,eax
  4146fa:	xchg   edx,eax
  4146fb:	or     al,0x44
  4146fd:	mov    BYTE PTR [esp+edi*8-0x39c81986],dl
  414704:	push   cs
  414705:	sahf   
  414706:	ds inc ebx
  414708:	pop    ds
  414709:	xor    DWORD PTR [eax-0x5fcff795],edx
  41470f:	xchg   ebp,eax
  414710:	dec    esi
  414711:	(bad)  [edi-0x9]
  414714:	and    DWORD PTR [esi-0x53],eax
  414717:	inc    ecx
  414718:	sbb    DWORD PTR [edi],esp
  41471a:	lock and DWORD PTR [ecx+esi*1+0x31],esp
  41471f:	push   edi
  414720:	mov    ah,0xad
  414722:	mov    bh,0x97
  414724:	jg     0x4146df
  414726:	cmp    al,BYTE PTR [edi]
  414728:	jae    0x4146c1
  41472a:	xor    edi,0xccacb47a
  414730:	mov    eax,ds:0x238aef72
  414735:	dec    ecx
  414736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414737:	jnp    0x4146d6
  414739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41473a:	add    al,0x47
  41473c:	adc    ebx,DWORD PTR [ecx]
  41473e:	ja     0x4146fb
  414740:	test   DWORD PTR [ebp+0x7d],ebp
  414743:	push   edi
  414744:	jmp    0x27fd8249
  414749:	sbb    bh,ah
  41474b:	lods   eax,DWORD PTR ds:[esi]
  41474c:	mov    bh,0x6a
  41474e:	mov    ecx,0x392c5ea0
  414753:	push   esi
  414754:	mov    ds:0x767e5fec,al
  414759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41475a:	bound  ebx,QWORD PTR [ebx]
  41475c:	test   eax,0xb5c0f62
  414761:	jge    0x414701
  414763:	mov    ds:0x3eace0ff,eax
  414768:	add    eax,DWORD PTR [edx]
  41476a:	hlt    
  41476b:	add    bh,BYTE PTR [ebx+0x1a]
  41476e:	xchg   ebx,eax
  41476f:	and    BYTE PTR [esi],bl
  414771:	add    esi,edx
  414773:	pusha  
  414774:	retf   0xf0ad
  414777:	pushf  
  414778:	add    esp,DWORD PTR [edx]
  41477a:	scas   al,BYTE PTR es:[edi]
  41477b:	scas   al,BYTE PTR es:[edi]
  41477c:	aaa    
  41477d:	sub    al,0x4c
  41477f:	test   al,0x12
  414781:	shl    dl,1
  414783:	(bad)  
  414784:	iret   
  414785:	jmp    0xb1ef3464
  41478a:	adc    ch,BYTE PTR [ebp+ecx*2-0x4f]
  41478e:	add    bh,bh
  414790:	add    BYTE PTR ds:0x2b579b1d,dl
  414796:	mov    esi,0x9ff6197c
  41479b:	aad    0x4c
  41479d:	gs in  al,dx
  41479f:	adc    DWORD PTR [ebp-0xfe14d3a],edi
  4147a5:	xchg   edx,eax
  4147a6:	jns    0x4147ab
  4147a8:	ins    BYTE PTR es:[edi],dx
  4147a9:	xor    al,0x1
  4147ab:	in     al,0x7a
  4147ad:	aas    
  4147ae:	xchg   edx,eax
  4147af:	and    ecx,DWORD PTR [ebx+eiz*4]
  4147b2:	jmp    0x5419:0x23f500f7
  4147b9:	cmp    esp,DWORD PTR [esi-0x4a07ec53]
  4147bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147c0:	and    BYTE PTR [ecx],0x65
  4147c3:	or     dh,bh
  4147c5:	inc    esp
  4147c6:	mov    DWORD PTR [edi+0x5e],ebp
  4147c9:	push   ecx
  4147ca:	pushf  
  4147cb:	xor    dh,BYTE PTR [edi]
  4147cd:	dec    ebp
  4147ce:	add    al,0x68
  4147d0:	and    al,0x4
  4147d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d3:	sbb    eax,0x9bc5dd66
  4147d8:	ss xchg edx,eax
  4147da:	mov    dl,0x8e
  4147dc:	arpl   WORD PTR [ecx],bp
  4147de:	nop
  4147df:	fs not bh
  4147e2:	mov    ah,0xba
  4147e4:	push   ds
  4147e5:	jbe    0x414856
  4147e7:	cmc    
  4147e8:	sbb    BYTE PTR [eax],bh
  4147ea:	add    ah,BYTE PTR [ebx-0x24]
  4147ed:	pop    eax
  4147ee:	inc    esp
  4147ef:	lahf   
  4147f0:	sbb    ebx,edi
  4147f2:	xchg   edi,eax
  4147f3:	jo     0x414832
  4147f5:	test   BYTE PTR [ebx-0x2e2d0d72],dh
  4147fb:	pop    esp
  4147fc:	(bad)  
  4147fd:	jbe    0x41487b
  4147ff:	dec    esp
  414800:	push   ebx
  414801:	mov    bh,0x69
  414803:	sbb    BYTE PTR [ecx-0x48],ch
  414806:	cld    
  414807:	push   ss
  414808:	icebp  
  414809:	cmp    al,0xfd
  41480b:	cwde   
  41480c:	in     eax,dx
  41480d:	jge    0x41488c
  41480f:	into   
  414810:	out    dx,eax
  414811:	adc    DWORD PTR [edi+0x5b],0x4b
  414815:	scas   eax,DWORD PTR es:[edi]
  414816:	mov    dh,0x91
  414818:	outs   dx,DWORD PTR ds:[esi]
  414819:	cdq    
  41481a:	sti    
  41481b:	inc    ebx
  41481c:	xor    ecx,0xffffffd4
  41481f:	mov    cl,ch
  414821:	xchg   edi,eax
  414822:	fnstsw WORD PTR [esi+ecx*8+0x2559781c]
  414829:	inc    esi
  41482a:	popa   
  41482b:	xchg   esp,eax
  41482c:	stos   DWORD PTR es:[edi],eax
  41482d:	mov    bh,0xe2
  41482f:	nop
  414830:	cli    
  414831:	sub    al,0xaa
  414833:	test   al,0x9a
  414835:	stos   BYTE PTR es:[edi],al
  414836:	sbb    DWORD PTR [edx],edx
  414838:	xchg   ecx,eax
  414839:	or     esp,ebx
  41483b:	jnp    0x414870
  41483d:	and    DWORD PTR [ebp+0x567e8d80],ebx
  414843:	fld    DWORD PTR [edi+0x47]
  414846:	sub    al,0xe8
  414848:	pop    esi
  414849:	fsub   DWORD PTR [ebp+0x27d804e2]
  41484f:	not    BYTE PTR [ecx+edi*8+0x37be298b]
  414856:	ret    0x2a41
  414859:	and    esi,DWORD PTR [eax+0x35]
  41485c:	inc    esi
  41485d:	stc    
  41485e:	mov    bh,0x6e
  414860:	into   
  414861:	sub    esp,ecx
  414863:	inc    esi
  414864:	or     DWORD PTR [ecx+0x7e],esp
  414867:	scas   eax,DWORD PTR es:[edi]
  414868:	pop    ebx
  414869:	pushf  
  41486a:	in     al,dx
  41486b:	retf   
  41486c:	mov    esp,0x1d4462ac
  414871:	mov    dl,0xdc
  414873:	loop   0x4147f5
  414875:	push   ebp
  414876:	add    eax,0x75534934
  41487b:	bound  edi,QWORD PTR [edi+0x5]
  41487e:	jns    0x4148fd
  414880:	xchg   DWORD PTR [ecx],ecx
  414882:	scas   al,BYTE PTR es:[edi]
  414883:	ss or  ah,dh
  414886:	adc    al,0xaf
  414888:	test   al,0x83
  41488a:	push   eax
  41488b:	gs or  eax,0x116e94e5
  414891:	pop    edi
  414892:	add    edx,ecx
  414894:	aas    
  414895:	ja     0x4148d3
  414897:	int3   
  414898:	ins    DWORD PTR es:[edi],dx
  414899:	jmp    0x4148ac
  41489b:	cmc    
  41489c:	sub    al,0x65
  41489e:	(bad)  
  41489f:	cmc    
  4148a0:	cmp    cl,BYTE PTR [ebp+esi*2+0x15]
  4148a4:	rol    BYTE PTR [esi+0x7d41225c],1
  4148aa:	xchg   edx,edx
  4148ac:	mov    esi,0xd1dad718
  4148b1:	fstp   DWORD PTR ds:0x1de75fa2
  4148b7:	int3   
  4148b8:	out    dx,eax
  4148b9:	adc    ecx,DWORD PTR [ebx]
  4148bb:	aam    0x2
  4148bd:	sub    DWORD PTR [edx-0x4f],ebp
  4148c0:	or     eax,0xd3c0403d
  4148c5:	stos   BYTE PTR es:[edi],al
  4148c6:	add    al,0x83
  4148c8:	scas   al,BYTE PTR es:[edi]
  4148c9:	and    eax,0x61b782ea
  4148ce:	cli    
  4148cf:	test   cl,bl
  4148d1:	mov    cl,BYTE PTR [edx+0x6d295a96]
  4148d7:	jno    0x414906
  4148d9:	mov    eax,ds:0x6208a9e1
  4148de:	mov    al,0xa0
  4148e0:	ins    BYTE PTR es:[edi],dx
  4148e1:	mov    ebp,0x87402ee4
  4148e6:	or     ch,BYTE PTR [edx]
  4148e8:	scas   eax,DWORD PTR es:[edi]
  4148e9:	mov    ah,0x44
  4148eb:	(bad)  
  4148ec:	out    0xa3,eax
  4148ee:	outs   dx,DWORD PTR ds:[esi]
  4148ef:	mov    ebp,0xc4c9adec
  4148f4:	(bad)  [edi+0x54]
  4148f7:	lds    eax,FWORD PTR [edi-0x37]
  4148fa:	out    dx,eax
  4148fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148fc:	mov    ecx,0x1093a465
  414901:	mov    bh,0xaf
  414903:	das    
  414904:	jle    0x414960
  414906:	in     al,dx
  414907:	sbb    eax,0xc52cd435
  41490c:	lods   al,BYTE PTR ds:[esi]
  41490d:	(bad)  
  41490e:	mov    ds:0xde7b3883,al
  414913:	mov    edx,0x8b6143b2
  414918:	push   es
  414919:	dec    edx
  41491a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41491b:	jno    0x41489e
  41491d:	sub    eax,0x5aefb9d8
  414922:	add    BYTE PTR [edx+eiz*4-0x2e3b2845],bh
  414929:	mov    dl,0x6
  41492b:	mov    al,0xfe
  41492d:	stos   BYTE PTR es:[edi],al
  41492e:	ins    DWORD PTR es:[edi],dx
  41492f:	sbb    edx,DWORD PTR [edi-0x24]
  414932:	out    0x27,al
  414934:	ret    
  414935:	ja     0x4148c1
  414937:	repz fdiv DWORD PTR [ebx]
  41493a:	xchg   ecx,eax
  41493b:	inc    eax
  41493c:	fs inc edx
  41493e:	cwde   
  41493f:	dec    esp
  414940:	jp     0x414964
  414942:	adc    BYTE PTR [esi+0x50],bh
  414945:	nop
  414946:	shl    DWORD PTR [ebx+0x63],cl
  414949:	pop    ebx
  41494a:	dec    ebx
  41494b:	pushf  
  41494c:	pop    ds
  41494d:	mov    esp,0x1cdcc1e7
  414952:	mov    dl,BYTE PTR [ecx]
  414954:	je     0x414944
  414956:	and    BYTE PTR [ecx+0x5a],bh
  414959:	fistp  WORD PTR [ebx]
  41495b:	and    esi,DWORD PTR [eax+0x2c93e79a]
  414961:	xor    al,0x65
  414963:	mov    al,BYTE PTR ds:0x8afef41c
  414969:	sub    BYTE PTR [esi+0x5e625964],cl
  41496f:	sahf   
  414970:	pop    es
  414971:	hlt    
  414972:	xchg   ch,ch
  414974:	and    ebx,ebx
  414976:	sbb    al,0x4e
  414978:	add    edi,esi
  41497a:	in     eax,0x31
  41497c:	rcl    DWORD PTR [ebp+esi*2+0xb4ef652],1
  414983:	int    0x6c
  414985:	in     al,0x4e
  414987:	sti    
  414988:	xor    BYTE PTR [ecx+esi*4+0x4e1cd880],dh
  41498f:	adc    edx,DWORD PTR [edx]
  414991:	add    edi,DWORD PTR [edi+0x32d7ea0f]
  414997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414998:	mov    al,ds:0x3298cd02
  41499d:	mov    ds:0xe7c2162e,eax
  4149a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a3:	push   eax
  4149a4:	stos   DWORD PTR es:[edi],eax
  4149a5:	icebp  
  4149a6:	or     DWORD PTR [ebp+0x10fc874a],ecx
  4149ac:	pop    esi
  4149ad:	pusha  
  4149ae:	popa   
  4149af:	sbb    BYTE PTR [eax+0x51],dh
  4149b2:	or     BYTE PTR [ebp-0x2a24e535],cl
  4149b8:	int    0x3f
  4149ba:	xor    al,0xf7
  4149bc:	push   es
  4149bd:	rol    edx,0x63
  4149c0:	outs   dx,BYTE PTR ds:[esi]
  4149c1:	cmp    DWORD PTR [esi*8-0x7a58de7b],0x6595a2ce
  4149cc:	or     dl,bh
  4149ce:	jno    0x414952
  4149d0:	sub    dh,bl
  4149d2:	pushf  
  4149d3:	xlat   BYTE PTR ds:[ebx]
  4149d4:	into   
  4149d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149d6:	pop    ecx
  4149d7:	sbb    ecx,DWORD PTR [esp+ebp*2+0x12]
  4149db:	jmp    0xbf01:0x5073476b
  4149e2:	push   ds
  4149e3:	out    dx,eax
  4149e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149e5:	push   0x5fe8be38
  4149ea:	daa    
  4149eb:	push   ebp
  4149ec:	jmp    0x28048520
  4149f1:	add    dl,BYTE PTR [edx]
  4149f3:	xchg   esp,eax
  4149f4:	sbb    DWORD PTR [ebx+ebp*2],0x184ccbcb
  4149fb:	test   al,0xe5
  4149fd:	ss sti 
  4149ff:	jle    0x4149a9
  414a01:	sbb    eax,0xf87884d0
  414a06:	cmp    eax,0x9f0b3265
  414a0b:	push   eax
  414a0c:	into   
  414a0d:	cs push ds
  414a0f:	icebp  
  414a10:	cmp    eax,0xbd530ae9
  414a15:	in     eax,0x52
  414a17:	sbb    DWORD PTR [ebp-0x41],esp
  414a1a:	lea    esi,[esi*1+0x5482def9]
  414a21:	wbinvd 
  414a23:	cwde   
  414a24:	out    0x44,al
  414a26:	push   ss
  414a27:	push   ecx
  414a28:	pop    eax
  414a29:	fcom   DWORD PTR ds:0x5f2b45c9
  414a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a30:	sbb    esp,DWORD PTR [ebp-0x63]
  414a33:	mov    ch,0x6b
  414a35:	js     0x4149e4
  414a37:	mov    edi,0x2eedc1ba
  414a3c:	scas   al,BYTE PTR es:[edi]
  414a3d:	mov    ah,0xd1
  414a3f:	pop    ebp
  414a40:	mov    DWORD PTR [edx+eax*2+0x402fb40],edx
  414a47:	rcl    DWORD PTR [edx],cl
  414a49:	and    eax,0x2e12cfa7
  414a4e:	jmp    0xc9f9454d
  414a53:	out    0x7d,al
  414a55:	fbld   TBYTE PTR [edi+edx*2]
  414a58:	inc    edx
  414a59:	push   0x5e
  414a5b:	adc    ch,BYTE PTR [edx-0x2c6058d]
  414a61:	pop    edi
  414a62:	fild   QWORD PTR [ecx-0x335fd472]
  414a68:	mov    ebp,es
  414a6a:	xchg   DWORD PTR [eax+0x1c],ebp
  414a6d:	sub    al,0x6b
  414a6f:	and    esi,DWORD PTR [edx+0x1315ad62]
  414a75:	popa   
  414a76:	pop    esp
  414a77:	push   es
  414a78:	in     eax,dx
  414a79:	stos   BYTE PTR es:[edi],al
  414a7a:	adc    al,0x67
  414a7c:	cmp    eax,0x98ca40b4
  414a81:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414a83:	std    
  414a84:	pop    ss
  414a85:	add    al,0x33
  414a87:	das    
  414a88:	inc    edi
  414a89:	push   cs
  414a8a:	pop    eax
  414a8b:	xchg   BYTE PTR [ebp-0x2e],cl
  414a8e:	das    
  414a8f:	xchg   BYTE PTR [edx+0x22],cl
  414a92:	and    al,0xf5
  414a94:	pop    esi
  414a95:	pop    esp
  414a96:	mov    edx,0x68bdcf2e
  414a9b:	call   DWORD PTR [esp+ebp*4-0x58]
  414a9f:	mov    esi,0xc846d42e
  414aa4:	iret   
  414aa5:	jmp    0x414b08
  414aa7:	(bad)  
  414aa8:	imul   ebp,DWORD PTR [si],0xffffff93
  414aac:	fmul   st,st(4)
  414aae:	push   ebx
  414aaf:	inc    edi
  414ab0:	outs   dx,DWORD PTR ds:[esi]
  414ab1:	inc    esi
  414ab2:	dec    esi
  414ab3:	ret    
  414ab4:	mov    esi,DWORD PTR [edx+0x35]
  414ab7:	fwait
  414ab8:	repz retf 0x9dd1
  414abc:	je     0x414ae6
  414abe:	fistp  DWORD PTR [ebx+eiz*2+0xcc408e9]
  414ac5:	lds    edx,FWORD PTR [edi-0x72dc6ea]
  414acb:	xchg   ecx,eax
  414acc:	sbb    BYTE PTR ds:0x63f9a132,bh
  414ad2:	push   cs
  414ad3:	pop    DWORD PTR [ebx-0x64fa7211]
  414ad9:	rol    bl,1
  414adb:	and    DWORD PTR [edi-0x6b8813b2],edx
  414ae1:	jmp    0x414b14
  414ae3:	punpcklwd mm5,DWORD PTR [eax]
  414ae6:	shr    DWORD PTR [ecx-0x42],0xe4
  414aea:	sbb    eax,0x473e2e30
  414aef:	sahf   
  414af0:	mov    ebp,0xbaef54d6
  414af5:	ret    0xf9c3
  414af8:	dec    DWORD PTR [ebp+0xfa5c06d]
  414afe:	ror    BYTE PTR [ecx],cl
  414b00:	jmp    0x2ba1:0x37c961f7
  414b07:	scas   al,BYTE PTR es:[edi]
  414b08:	out    0x9e,eax
  414b0a:	push   0x407f1f90
  414b0f:	iret   
  414b10:	loope  0x414af5
  414b12:	push   ds
  414b13:	mov    esp,0x31df19e2
  414b18:	jecxz  0x414abe
  414b1a:	push   esp
  414b1b:	adc    BYTE PTR [edi],bl
  414b1d:	sub    DWORD PTR [eax+0x5],ebp
  414b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b21:	jmp    0x414b07
  414b23:	adc    eax,0x59cf2bff
  414b28:	pop    esi
  414b29:	repz push ebp
  414b2b:	xchg   esi,eax
  414b2c:	add    DWORD PTR [ebx+eiz*4+0x1e],esi
  414b30:	mov    WORD PTR [esp+ebp*1+0x7331e95f],?
  414b37:	or     eax,0x1455a15d
  414b3c:	jae    0x414b7a
  414b3e:	add    eax,0xa6a1ec27
  414b43:	imul   ecx,DWORD PTR [edi],0xffffff93
  414b46:	data16 mov al,ds:0x2faef667
  414b4c:	mov    bh,0x0
  414b4e:	mov    dl,0x3a
  414b50:	ret    
  414b51:	inc    edx
  414b52:	scas   al,BYTE PTR es:[edi]
  414b53:	adc    BYTE PTR [ebp-0x9814622],al
  414b59:	shl    DWORD PTR [eax+0x4a],cl
  414b5c:	popf   
  414b5d:	call   0xe5b2:0x71ee1edc
  414b64:	mov    edx,0x1f131960
  414b69:	scas   al,BYTE PTR es:[edi]
  414b6a:	pop    ss
  414b6b:	(bad)  
  414b6c:	fsub   DWORD PTR [eax+0x63726e69]
  414b72:	in     al,0xbf
  414b74:	scas   al,BYTE PTR es:[edi]
  414b75:	adc    al,0x34
  414b77:	rcr    BYTE PTR [ebp-0x3a1a7c26],0x16
  414b7e:	jmp    0x60952dc1
  414b83:	xor    eax,0x8a5afd89
  414b88:	add    BYTE PTR [ebp+0x1a590ed7],dh
  414b8e:	jae    0x414b4a
  414b90:	out    dx,eax
  414b91:	inc    ebx
  414b92:	lock or eax,0x5323c70b
  414b98:	xchg   edi,eax
  414b99:	or     esi,eax
  414b9b:	mov    eax,ds:0x3d919ff
  414ba0:	out    dx,al
  414ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba2:	push   esp
  414ba3:	aaa    
  414ba4:	shl    BYTE PTR ds:0xcb8237f1,0xf7
  414bab:	sbb    ecx,edx
  414bad:	jns    0x414bd2
  414baf:	sub    eax,0x675de637
  414bb4:	jae    0x414b7e
  414bb6:	(bad)  
  414bb7:	test   DWORD PTR [eax+eiz*2-0x65],0xe51628c9
  414bbf:	retf   
  414bc0:	and    DWORD PTR [edx+0x4332d1cc],edi
  414bc6:	push   ebp
  414bc7:	(bad)
  414bcc:	add    BYTE PTR [edx-0x6aa901f2],bh
  414bd2:	addps  xmm0,XMMWORD PTR [ebp+0x7e]
  414bd6:	add    ecx,DWORD PTR [esi-0x1d]
  414bd9:	fdiv   st,st(2)
  414bdb:	adc    al,0x50
  414bdd:	dec    esp
  414bde:	(bad)  
  414bdf:	out    0x1f,al
  414be1:	js     0x414c05
  414be3:	iret   
  414be4:	loop   0x414ba8
  414be6:	ror    ah,1
  414be8:	cmp    eax,0xd4486144
  414bed:	adc    DWORD PTR fs:[ecx+0x7d8756b],esi
  414bf4:	mov    ah,0x1
  414bf6:	mov    ds:0xb3705957,eax
  414bfb:	or     edi,esi
  414bfd:	push   ebp
  414bfe:	xor    bh,ah
  414c00:	cmp    BYTE PTR [ebp+eax*8+0x6580987a],ch
  414c07:	or     cl,BYTE PTR [esi]
  414c09:	fs inc ecx
  414c0b:	cmp    al,0xb9
  414c0d:	imul   ebp,ecx,0x19
  414c10:	arpl   sp,bx
  414c12:	jne    0x414c09
  414c14:	ins    DWORD PTR es:[edi],dx
  414c15:	les    edi,FWORD PTR [edx-0xff1a42d]
  414c1b:	das    
  414c1c:	mov    esp,0x69cb5a8d
  414c21:	or     ch,bl
  414c23:	mov    al,ds:0xc5f486c3
  414c28:	loopne 0x414c4b
  414c2a:	jbe    0x414c2d
  414c2c:	ret    0x2fcc
  414c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c30:	sub    esi,eax
  414c32:	inc    esi
  414c33:	(bad)  
  414c34:	add    eax,0x7bc3560f
  414c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3a:	jmp    0xebe09ddd
  414c3f:	mov    ecx,DWORD PTR [ebx]
  414c41:	retf   
  414c42:	inc    edi
  414c43:	ret    
  414c44:	bound  esp,QWORD PTR [edx+0x5d36466c]
  414c4a:	lods   al,BYTE PTR ds:[esi]
  414c4b:	inc    edi
  414c4c:	xor    eax,DWORD PTR [ebp-0xd]
  414c4f:	pop    esi
  414c50:	push   cs
  414c51:	hlt    
  414c52:	jl     0x414bea
  414c54:	popf   
  414c55:	mov    ds:0x62a0588c,eax
  414c5a:	cdq    
  414c5b:	shl    dl,1
  414c5d:	js     0x414c6f
  414c5f:	into   
  414c60:	test   BYTE PTR ds:0x9d67baac,cl
  414c66:	das    
  414c67:	add    eax,DWORD PTR [edx+0x2c]
  414c6a:	or     esi,DWORD PTR [edi+ecx*2+0x8581937]
  414c71:	enter  0x2a7c,0x5b
  414c75:	mov    ds:0x96370035,al
  414c7a:	sbb    ecx,0xbb1fffc1
  414c80:	pop    esp
  414c81:	repnz mov esi,0x80a790c8
  414c87:	pop    ecx
  414c88:	ins    DWORD PTR es:[edi],dx
  414c89:	sbb    al,0x3b
  414c8b:	scas   eax,DWORD PTR es:[edi]
  414c8c:	aas    
  414c8d:	mov    WORD PTR [esi-0x5126866e],?
  414c93:	paddb  mm5,QWORD PTR [edi+0x47]
  414c97:	fiadd  DWORD PTR [edx]
  414c99:	retf   0xfbbf
  414c9c:	shr    DWORD PTR [eax],0xbc
  414c9f:	pop    ds
  414ca0:	lahf   
  414ca1:	push   0x8a8331e9
  414ca6:	fild   WORD PTR [esi+edi*4-0x58]
  414caa:	in     eax,dx
  414cab:	jnp    0x414c9d
  414cad:	push   ss
  414cae:	ins    DWORD PTR es:[edi],dx
  414caf:	rcr    BYTE PTR [esi-0x6952a085],1
  414cb5:	xchg   ecx,eax
  414cb6:	enter  0x4465,0x9d
  414cba:	outs   dx,BYTE PTR ds:[esi]
  414cbb:	jne    0x414cb9
  414cbd:	xor    DWORD PTR [edx-0x40e89fb2],0x66
  414cc4:	mov    edi,0xc9ba1ee4
  414cc9:	lahf   
  414cca:	or     eax,0x1fc9f385
  414ccf:	push   ss
  414cd0:	loope  0x414cef
  414cd2:	sbb    al,bl
  414cd4:	dec    ecx
  414cd5:	lods   eax,DWORD PTR ds:[si]
  414cd7:	shr    BYTE PTR [edx+eiz*8],cl
  414cda:	mov    ds:0xa90ca26f,eax
  414ce0:	mov    ?,ebp
  414ce2:	jecxz  0x414cf2
  414ce4:	int    0xdd
  414ce6:	fcmovbe st,st(1)
  414ce8:	(bad)  
  414ce9:	fisubr WORD PTR [ebp-0x6af00a41]
  414cef:	jg     0x414cda
  414cf1:	sub    eax,DWORD PTR [eax+ecx*2-0x7f22a81c]
  414cf8:	mov    bh,0xb5
  414cfa:	ds dec ebx
  414cfc:	push   ecx
  414cfd:	jmp    FWORD PTR [ebx-0x78]
  414d00:	mov    bh,BYTE PTR [edx-0x2222b9a6]
  414d06:	adc    eax,0x430e38a5
  414d0b:	push   esi
  414d0c:	dec    esp
  414d0d:	out    0x87,al
  414d0f:	xor    bl,dl
  414d11:	fs adc esp,esp
  414d14:	adc    DWORD PTR [ecx+0x5],esi
  414d17:	add    BYTE PTR [eax],0x6e
  414d1a:	jl     0x414d5e
  414d1c:	aad    0x57
  414d1e:	repz scas ax,WORD PTR es:[edi]
  414d21:	aaa    
  414d22:	inc    ebp
  414d23:	sbb    al,0x35
  414d25:	bound  esp,QWORD PTR [ebp+eiz*8+0x61]
  414d29:	inc    esi
  414d2a:	mov    ds:0x8a444a84,eax
  414d2f:	lods   eax,DWORD PTR ds:[esi]
  414d30:	cmc    
  414d31:	inc    eax
  414d32:	and    dh,BYTE PTR [eax+0x61]
  414d35:	push   edi
  414d36:	pusha  
  414d37:	daa    
  414d38:	out    0xcf,eax
  414d3a:	sbb    bl,BYTE PTR [ecx-0x26]
  414d3d:	inc    ebx
  414d3e:	adc    ah,cl
  414d40:	stos   DWORD PTR es:[edi],eax
  414d41:	imul   ecx,DWORD PTR cs:[ebp-0x50103ae6],0xd332daf2
  414d4c:	cdq    
  414d4d:	dec    ecx
  414d4e:	adc    DWORD PTR [edx+eax*8-0x32827a65],esp
  414d55:	xchg   esi,eax
  414d56:	push   ds
  414d57:	xor    bh,BYTE PTR [eax-0x40af7ec]
  414d5d:	mov    al,ds:0x70a99182
  414d62:	loop   0x414d3d
  414d64:	jle    0x414d17
  414d66:	pusha  
  414d67:	inc    esi
  414d68:	(bad)  
  414d69:	mov    dl,0xf7
  414d6b:	jo     0x414d25
  414d6d:	inc    esp
  414d6e:	jb     0x414d60
  414d70:	outs   dx,BYTE PTR es:[esi]
  414d72:	xrelease xchg DWORD PTR [ebx+0x7a],edi
  414d76:	pop    ebp
  414d77:	jnp    0x414cfe
  414d79:	cmp    cl,BYTE PTR [ecx]
  414d7b:	fld    QWORD PTR [ebx+ecx*4-0x370ed6c5]
  414d82:	xchg   ebp,eax
  414d83:	lock dec edi
  414d85:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414d87:	and    ah,cl
  414d89:	call   0x5e0b:0x2f10e8cb
  414d90:	push   ss
  414d91:	dec    edx
  414d92:	rcr    DWORD PTR [esi],cl
  414d94:	movlps xmm0,QWORD PTR [edx]
  414d97:	jae    0x414d30
  414d99:	and    bl,ch
  414d9b:	iret   
  414d9c:	sub    cl,BYTE PTR [edx+0xa80d30b]
  414da2:	iret   
  414da3:	jecxz  0x414d26
  414da5:	lea    esi,[ebx]
  414da7:	dec    edx
  414da8:	xor    bl,BYTE PTR [eax-0x44]
  414dab:	jl     0x414d76
  414dad:	inc    edx
  414dae:	cdq    
  414daf:	mov    ch,0x1f
  414db1:	cmp    esp,ebp
  414db3:	iret   
  414db4:	push   0x67c56370
  414db9:	adc    ch,BYTE PTR [edx]
  414dbb:	enter  0xd870,0x90
  414dbf:	div    eax
  414dc1:	jno    0x414ddf
  414dc3:	(bad)  
  414dc4:	leave  
  414dc5:	sbb    eax,0xb5385046
  414dca:	and    bl,BYTE PTR [eax-0x44]
  414dcd:	pushf  
  414dce:	xchg   ebx,eax
  414dcf:	repnz int 0x19
  414dd2:	lods   al,BYTE PTR ds:[esi]
  414dd3:	ins    BYTE PTR es:[edi],dx
  414dd4:	inc    esi
  414dd5:	lds    edi,FWORD PTR [ebp-0x31]
  414dd8:	les    edi,FWORD PTR [edi+ebx*1-0x2fa8606e]
  414ddf:	add    al,0x49
  414de1:	rcr    bl,1
  414de3:	or     DWORD PTR [ebx],ebp
  414de5:	adc    ebx,DWORD PTR [edi-0x75ffc0b0]
  414deb:	xchg   esi,eax
  414dec:	inc    DWORD PTR [ecx]
  414dee:	lods   eax,DWORD PTR ds:[esi]
  414def:	jmp    0xa055f195
  414df4:	bound  edi,QWORD PTR [esi-0x1195f2bd]
  414dfa:	mov    bh,0xfb
  414dfc:	and    al,0x59
  414dfe:	lods   eax,DWORD PTR ds:[esi]
  414dff:	in     al,dx
  414e00:	jge    0x414d90
  414e02:	mov    al,0x9e
  414e04:	mov    edx,DWORD PTR [edi-0x42]
  414e07:	ficom  WORD PTR fs:0xb03ef01b
  414e0e:	xchg   BYTE PTR [ebp+0x1599565e],bl
  414e14:	scas   eax,DWORD PTR es:[edi]
  414e15:	jmp    0x414dcd
  414e17:	xor    edx,DWORD PTR [edx+0xe]
  414e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1b:	adc    bl,dh
  414e1d:	mov    ch,0xdd
  414e1f:	or     ch,0xd2
  414e22:	rcr    BYTE PTR [esp+ebp*4],1
  414e25:	fwait
  414e26:	sbb    al,0x10
  414e28:	or     al,0xae
  414e2a:	loope  0x414dc4
  414e2c:	fidiv  DWORD PTR [edi]
  414e2e:	inc    esp
  414e2f:	pop    edx
  414e30:	stos   BYTE PTR es:[edi],al
  414e31:	(bad)  
  414e32:	call   0x7f44f133
  414e37:	shl    BYTE PTR [eax+0x16],1
  414e3a:	jmp    0xdbdf3be5
  414e3f:	retf   
  414e40:	push   edi
  414e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e42:	push   ecx
  414e43:	shl    BYTE PTR [edi+0x6fdeb235],0xfa
  414e4a:	cmp    bh,bl
  414e4c:	ja     0x414dda
  414e4e:	ja     0x414ea8
  414e50:	ins    BYTE PTR es:[edi],dx
  414e51:	js     0x414e18
  414e53:	pop    edi
  414e54:	mov    ebp,0x63fa6420
  414e59:	enter  0x8c2d,0xf
  414e5d:	adc    al,0x38
  414e5f:	xchg   ecx,eax
  414e60:	mov    eax,0x6d469f53
  414e65:	xchg   esi,eax
  414e66:	mov    ds:0x3ced9d7d,al
  414e6b:	sbb    ch,BYTE PTR [edx]
  414e6d:	sub    DWORD PTR [esi-0x60],edi
  414e70:	lock jnp 0x414e90
  414e73:	popf   
  414e74:	xchg   ecx,eax
  414e75:	push   ebx
  414e76:	xchg   ebx,eax
  414e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e78:	add    eax,0x75626709
  414e7d:	jnp    0x414eab
  414e7f:	xchg   edi,eax
  414e80:	xor    ch,BYTE PTR [edx]
  414e82:	hlt    
  414e83:	stos   DWORD PTR es:[edi],eax
  414e84:	jnp    0x414ecc
  414e86:	and    edx,eax
  414e88:	outs   dx,BYTE PTR ds:[esi]
  414e89:	(bad)  
  414e8a:	sub    cl,BYTE PTR ds:0x1055917a
  414e90:	aad    0xea
  414e92:	je     0x414eef
  414e94:	stos   BYTE PTR es:[edi],al
  414e95:	into   
  414e96:	fcom   QWORD PTR [ecx+0x4a16d1a9]
  414e9c:	jnp    0x414e71
  414e9e:	loopne 0x414f1e
  414ea0:	dec    edi
  414ea1:	pop    ss
  414ea2:	rcr    DWORD PTR [edx+0x5b],1
  414ea5:	xchg   DWORD PTR [ebx-0x28],esp
  414ea8:	mov    edi,0x15f5c4d8
  414ead:	push   ds
  414eae:	mov    bl,BYTE PTR [edx+edi*1-0x4d]
  414eb2:	fist   DWORD PTR [ebx-0x6d2256eb]
  414eb8:	sbb    DWORD PTR [eax],edi
  414eba:	sub    DWORD PTR [bx+si],eax
  414ebd:	mov    eax,ds:0x7cfd8f80
  414ec3:	mov    ds,WORD PTR [edi+ebx*1]
  414ec6:	call   0xa16b26b3
  414ecb:	and    DWORD PTR [ebx],0x45
  414ece:	and    BYTE PTR [ebx-0x4fbf38c0],ah
  414ed4:	out    dx,al
  414ed5:	data16 add dl,BYTE PTR [edx+0x25]
  414ed9:	xor    ecx,DWORD PTR [esi-0x20353da3]
  414edf:	xlat   BYTE PTR ds:[ebx]
  414ee0:	cdq    
  414ee1:	pop    edi
  414ee2:	cmp    ecx,eax
  414ee4:	adc    dh,BYTE PTR [edi-0x4b]
  414ee7:	mov    ah,0x9d
  414ee9:	test   DWORD PTR ds:0x35656d38,0xfbee9bee
  414ef3:	imul   eax,esp,0x375da4ed
  414ef9:	jns    0x414f5d
  414efb:	inc    esp
  414efc:	iret   
  414efd:	les    ecx,FWORD PTR [ebp+0x7d]
  414f00:	mov    cl,0x14
  414f02:	dec    edx
  414f03:	in     al,dx
  414f04:	cmc    
  414f05:	fs xchg ebx,eax
  414f07:	and    BYTE PTR [eax],bl
  414f09:	xchg   ebp,eax
  414f0a:	jo     0x414f50
  414f0c:	stos   BYTE PTR es:[edi],al
  414f0d:	mov    ch,0x1e
  414f0f:	lods   eax,DWORD PTR ds:[esi]
  414f10:	leave  
  414f11:	rcl    DWORD PTR [edi-0x56],1
  414f14:	jo     0x414eb0
  414f16:	sar    DWORD PTR [esi-0x6a82a6cb],cl
  414f1c:	or     al,0xbf
  414f1e:	mov    bh,0x36
  414f20:	sbb    ebx,ebp
  414f22:	mov    dh,0xd5
  414f24:	add    al,0x52
  414f26:	or     al,0xb3
  414f28:	adc    al,0xaf
  414f2a:	mov    dl,0x77
  414f2c:	aam    0x95
  414f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f2f:	push   bx
  414f31:	shl    DWORD PTR [ebp-0x6dca0f7a],0x35
  414f38:	mov    es,WORD PTR [ebx]
  414f3a:	js     0x414f97
  414f3c:	idiv   esi
  414f3e:	push   esp
  414f3f:	out    0x16,eax
  414f41:	out    dx,eax
  414f42:	xor    ah,al
  414f44:	push   edi
  414f45:	pop    ebx
  414f46:	push   ebp
  414f47:	outs   dx,BYTE PTR ds:[esi]
  414f48:	in     eax,dx
  414f49:	int    0xc0
  414f4b:	dec    ebp
  414f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4d:	jmp    0x1909bf6b
  414f52:	cmp    DWORD PTR [eax-0x40],eax
  414f55:	int3   
  414f56:	pop    edx
  414f57:	add    edi,DWORD PTR [esi+ebp*8]
  414f5a:	and    eax,0xe41f9f55
  414f5f:	pusha  
  414f60:	test   bl,al
  414f62:	cli    
  414f63:	fwait
  414f64:	dec    eax
  414f65:	adc    ebp,DWORD PTR [esi]
  414f67:	out    0x65,al
  414f69:	jmp    0x47efa828
  414f6e:	xchg   esi,eax
  414f6f:	mov    bl,0xe
  414f71:	out    0xd5,eax
  414f73:	sbb    eax,0x290f2a8f
  414f78:	push   edx
  414f79:	mov    si,0x738f
  414f7d:	(bad)  
  414f7f:	mov    ebp,0xb1f4c078
  414f84:	call   0x7657:0x28884247
  414f8b:	inc    edi
  414f8c:	sub    eax,0xad8773f3
  414f91:	(bad)  [edi+eax*8-0x4cd1f63c]
  414f98:	test   DWORD PTR [ecx-0x48e08b2f],eax
  414f9e:	out    dx,al
  414f9f:	cmc    
  414fa0:	call   0xf3b99dfd
  414fa5:	hlt    
  414fa6:	xor    eax,0x93eeae74
  414fab:	iret   
  414fac:	retf   0xb5d4
  414faf:	stos   BYTE PTR es:[edi],al
  414fb0:	sub    ah,bl
  414fb2:	fadd   DWORD PTR [ebx]
  414fb4:	ins    DWORD PTR es:[edi],dx
  414fb5:	dec    ebx
  414fb6:	sbb    eax,eax
  414fb8:	or     al,0xde
  414fba:	sub    DWORD PTR [ecx+0xe],ecx
  414fbd:	or     BYTE PTR [esi],ch
  414fbf:	mov    bl,0x6f
  414fc1:	std    
  414fc2:	das    
  414fc3:	js     0x414ffe
  414fc5:	js     0x414f7b
  414fc7:	std    
  414fc8:	dec    edi
  414fc9:	lock dec esi
  414fcb:	mov    al,ds:0x5a3b401d
  414fd0:	ss mov bl,0x43
  414fd3:	scas   eax,DWORD PTR es:[edi]
  414fd4:	and    BYTE PTR [ebp-0x47c3b399],al
  414fda:	or     ch,BYTE PTR [ebp+0x5c27078a]
  414fe0:	outs   dx,DWORD PTR ds:[esi]
  414fe1:	mov    eax,ds:0x7209d29f
  414fe6:	sub    al,0xea
  414fe8:	inc    edi
  414fe9:	or     ebx,DWORD PTR [ebp-0x12fc1c6f]
  414fef:	push   edx
  414ff0:	sbb    edi,esp
  414ff2:	arpl   WORD PTR [ebx+0x2981725d],ax
  414ff8:	push   esp
  414ff9:	push   esp
  414ffa:	xor    DWORD PTR [ecx+edi*2-0x38],0xe94f534f
  415002:	ret    
  415003:	in     al,0xa8
  415005:	fmul   QWORD PTR [ebx-0x3f44f9d9]
  41500b:	rol    BYTE PTR [ebp+0x22],cl
  41500e:	sub    DWORD PTR [edx+0x39],ebx
  415011:	aas    
  415012:	and    eax,0x509ded47
  415017:	xlat   BYTE PTR ds:[ebx]
  415018:	push   ss
  415019:	(bad)  
  41501a:	(bad)  
  41501b:	fisttp DWORD PTR [esi+0x678d55ae]
  415021:	push   esp
  415022:	ja     0x415075
  415024:	jmp    0x35ed6e4d
  415029:	mov    edx,DWORD PTR ds:0xa7c550ee
  41502f:	mov    cl,0x12
  415031:	out    dx,al
  415032:	or     al,0xef
  415034:	pop    edi
  415035:	fs ret 
  415037:	and    bh,BYTE PTR [eax-0x7a]
  41503a:	int3   
  41503b:	mov    esi,0x423b36c7
  415040:	fcomi  st,st(5)
  415042:	jecxz  0x414fce
  415044:	fsubr  st(1),st
  415046:	shr    cl,cl
  415048:	sbb    eax,0x441781c
  41504d:	(bad)  
  41504e:	mov    WORD PTR ds:0x3d313cd7,?
  415054:	adc    DWORD PTR cs:[ebp+0x74],ebx
  415058:	retf   
  415059:	inc    ecx
  41505a:	jge    0x415038
  41505c:	stc    
  41505d:	push   edi
  41505e:	or     BYTE PTR [edi-0x44],0xa8
  415062:	inc    esi
  415063:	xchg   ecx,eax
  415064:	cmp    al,0xd
  415066:	out    0x35,eax
  415068:	hlt    
  415069:	shl    BYTE PTR [edx],cl
  41506b:	jp     0x4150b5
  41506d:	xchg   ebp,eax
  41506e:	dec    ebp
  41506f:	ds jne 0x4150ed
  415072:	test   eax,0x349b036b
  415077:	mov    bh,0x81
  415079:	pop    ds
  41507a:	dec    edx
  41507b:	sbb    al,BYTE PTR [edi]
  41507d:	mov    fs,ebp
  41507f:	adc    bl,BYTE PTR [ebp-0x21]
  415082:	or     edi,DWORD PTR [ebx+0x49]
  415085:	add    al,0x32
  415087:	or     al,0xf9
  415089:	(bad)  [edi]
  41508b:	jbe    0x4150e0
  41508d:	xor    ebp,DWORD PTR [edi+edi*4]
  415090:	jecxz  0x41503e
  415092:	pop    edi
  415093:	xchg   esi,eax
  415094:	das    
  415095:	xor    eax,0xd613743
  41509a:	js     0x4150cd
  41509c:	mov    ds:0x788b059b,al
  4150a1:	bound  ebx,QWORD PTR [eax+ecx*8+0x49]
  4150a5:	sbb    eax,0x651de396
  4150aa:	xchg   edx,eax
  4150ab:	into   
  4150ac:	mov    ch,0xa4
  4150ae:	sbb    al,0x2e
  4150b0:	push   es
  4150b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b2:	out    0xd1,al
  4150b4:	dec    esp
  4150b5:	jmp    0x4150c3
  4150b7:	xor    al,0xef
  4150b9:	xchg   ecx,eax
  4150ba:	sbb    DWORD PTR [ebx],esp
  4150bc:	inc    edx
  4150bd:	adc    dl,BYTE PTR [edi+esi*4]
  4150c0:	push   edx
  4150c1:	add    ecx,ebx
  4150c3:	jle    0x4150ba
  4150c5:	rcr    al,0x82
  4150c8:	test   ebx,ebp
  4150ca:	fucom  st(4)
  4150cc:	push   ecx
  4150cd:	mov    ch,0xc5
  4150cf:	cmp    DWORD PTR [edi+0xc],ebx
  4150d2:	sbb    eax,DWORD PTR [ebx]
  4150d4:	dec    ebx
  4150d5:	mov    DWORD PTR [edx-0x138954ac],esi
  4150db:	jl     0x415107
  4150dd:	or     eax,0x68be2300
  4150e2:	xchg   ebp,eax
  4150e3:	test   al,0xc6
  4150e5:	jne    0x4150ae
  4150e7:	in     al,0x7e
  4150e9:	mov    eax,0x92e32b6f
  4150ee:	or     bh,BYTE PTR [eax]
  4150f0:	daa    
  4150f1:	sahf   
  4150f2:	xor    eax,0x6f5e3d42
  4150f7:	sti    
  4150f8:	mov    al,BYTE PTR [ecx]
  4150fa:	or     ebp,DWORD PTR ds:0xe90ef4b0
  415100:	fchs   
  415102:	mov    ch,0x95
  415104:	ins    DWORD PTR es:[edi],dx
  415105:	ja     0x4150b7
  415107:	push   es
  415108:	xor    ebp,esi
  41510a:	cmp    DWORD PTR [ebx+0x39],eax
  41510d:	cli    
  41510e:	jns    0x4150a2
  415110:	cmp    al,0xf9
  415112:	jge    0x415109
  415114:	xor    al,0x39
  415116:	jecxz  0x415118
  415118:	jp     0x415155
  41511a:	mov    al,ds:0xfce2c5ae
  41511f:	fld    TBYTE PTR [edi]
  415121:	mov    esi,0xd42bd357
  415126:	mov    esi,0xbba9a744
  41512b:	lahf   
  41512c:	mov    ds:0x35db139b,al
  415131:	jp     0x41516c
  415133:	xchg   esp,eax
  415134:	xchg   ebp,eax
  415135:	jl     0x41511a
  415137:	fwait
  415138:	(bad)  
  415139:	push   0x7ce1a0b3
  41513e:	xlat   BYTE PTR ds:[ebx]
  41513f:	aas    
  415140:	mov    ah,0xef
  415142:	div    BYTE PTR [esi+0x3859719]
  415148:	mov    ah,0xd1
  41514a:	and    al,0x8d
  41514c:	xchg   esi,eax
  41514d:	xchg   ecx,eax
  41514e:	(bad)  
  41514f:	sar    ecx,1
  415151:	add    al,0x8
  415153:	or     edx,edi
  415155:	inc    ecx
  415156:	mov    esi,0x9e8ab9d3
  41515b:	pop    eax
  41515c:	popf   
  41515d:	das    
  41515e:	or     cl,BYTE PTR [esi]
  415160:	xchg   ebp,eax
  415161:	cwde   
  415162:	xor    BYTE PTR ds:0x222054d3,0x85
  415169:	mov    ds:0x157fa365,al
  41516e:	fistp  QWORD PTR [edi-0x4a]
  415171:	adc    cl,bh
  415173:	cld    
  415174:	push   edi
  415175:	jno    0x415115
  415177:	jo     0x415122
  415179:	jecxz  0x41515f
  41517b:	push   es
  41517c:	and    ch,BYTE PTR fs:[edi]
  41517f:	loope  0x4151b1
  415181:	sub    ebx,DWORD PTR [eax+0x57]
  415184:	fisub  WORD PTR [edi+0x2e9d0b9f]
  41518a:	sbb    BYTE PTR [ecx],bl
  41518c:	push   esi
  41518d:	add    esp,DWORD PTR [eax-0x7309dfe1]
  415193:	mov    ebx,0x11cfe9f7
  415198:	mov    cl,0xbb
  41519a:	xchg   BYTE PTR [eax+0x7a],bl
  41519d:	sub    BYTE PTR [ebp-0x3d7f3bdd],dl
  4151a3:	add    BYTE PTR [ebx+0x74ebe4ec],dl
  4151a9:	popa   
  4151aa:	sahf   
  4151ab:	scas   eax,DWORD PTR es:[edi]
  4151ac:	push   0x37
  4151ae:	das    
  4151af:	xchg   DWORD PTR [ebx],esi
  4151b1:	xchg   esi,eax
  4151b2:	cmc    
  4151b3:	call   0x5cc2:0x66030934
  4151ba:	bound  ebp,QWORD PTR [ecx+edi*1+0x6c5bf074]
  4151c1:	ja     0x415242
  4151c3:	lods   al,BYTE PTR ds:[esi]
  4151c4:	adc    esi,DWORD PTR [ecx]
  4151c6:	mov    ds:0xb2e3c233,eax
  4151cb:	and    eax,0xc0f8f664
  4151d0:	xor    edi,ecx
  4151d2:	test   BYTE PTR [ebx+0x7d],0xaa
  4151d6:	addr16 xchg ebp,eax
  4151d8:	bound  esp,QWORD PTR [ecx+0x6c7e78df]
  4151de:	in     eax,0x88
  4151e0:	fs pop ss
  4151e2:	mov    edx,0xf8bd1e7d
  4151e7:	int3   
  4151e8:	mov    ds:0x1fde251a,eax
  4151ed:	pop    edi
  4151ee:	cmp    eax,0x1aaef5ac
  4151f3:	fsubr  QWORD PTR [bx+0x733e]
  4151f8:	jb     0x41521c
  4151fa:	aam    0x65
  4151fc:	cmp    dh,BYTE PTR [edx]
  4151fe:	shl    DWORD PTR [edx+ebx*1+0x272daff6],0x9a
  415206:	dec    edi
  415207:	mov    edx,0x18dcf9d0
  41520c:	sbb    al,0x44
  41520e:	cmp    BYTE PTR [eax+0x548b79bf],ah
  415214:	jmp    0x6c4b:0xe83742e5
  41521b:	ins    BYTE PTR es:[edi],dx
  41521c:	mov    BYTE PTR [edx+0x7a],dl
  41521f:	test   eax,0x58067870
  415224:	daa    
  415225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415226:	inc    bp
  415228:	gs xchg edi,eax
  41522a:	sub    al,0xac
  41522c:	mov    esp,ss
  41522e:	sub    eax,0x50bc5bb7
  415233:	popf   
  415234:	mov    WORD PTR [ebx-0x21413c34],ss
  41523a:	das    
  41523b:	add    eax,0x736b59f
  415240:	mov    bl,0x6d
  415242:	mov    ds:0xff452fa5,al
  415247:	sbb    ecx,DWORD PTR [eax]
  415249:	je     0x6d2ae1c6
  41524f:	scas   eax,DWORD PTR es:[edi]
  415250:	sbb    al,0x45
  415252:	xor    BYTE PTR [edx-0x64],al
  415255:	inc    esi
  415256:	ret    
  415257:	cmp    al,0x5f
  415259:	fcmovne st,st(7)
  41525b:	pop    ss
  41525c:	xchg   DWORD PTR [eax-0x3feb1e86],eax
  415262:	and    DWORD PTR [esi+0x4d],edi
  415265:	and    al,0xfe
  415267:	test   DWORD PTR [esi],0xd3d6bf47
  41526d:	jno    0x4152a0
  41526f:	jge    0x415239
  415271:	mov    es,ecx
  415273:	cmp    BYTE PTR [esi+eax*2-0x53e54f46],ah
  41527a:	outs   dx,DWORD PTR ds:[esi]
  41527b:	jecxz  0x41527d
  41527d:	ror    DWORD PTR [esi+0x53],cl
  415280:	mov    al,0xf9
  415282:	lods   al,BYTE PTR ds:[esi]
  415283:	arpl   WORD PTR [esi+0x64],sp
  415286:	sub    edi,DWORD PTR [ebp+0x7fe55790]
  41528c:	jae    0x415293
  41528e:	jmp    0x93bba6a7
  415293:	and    ah,BYTE PTR [esi]
  415295:	and    ebp,esp
  415297:	retf   0xcb86
  41529a:	imul   eax,DWORD PTR [eax-0x3d922d09],0x72
  4152a1:	add    BYTE PTR [eax],bh
  4152a3:	add    al,0x5a
  4152a5:	mov    ah,0x4b
  4152a7:	dec    esi
  4152a8:	icebp  
  4152a9:	jnp    0x4152f0
  4152ab:	inc    esi
  4152ac:	inc    edx
  4152ad:	in     al,0xe
  4152af:	adc    al,0x65
  4152b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b2:	arpl   WORD PTR [esi+edx*2+0x62eae2a],dx
  4152b9:	jae    0x41528b
  4152bb:	xchg   ecx,eax
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	outs   dx,BYTE PTR ds:[esi]
  4152be:	imul   ebp,edi,0x14
  4152c1:	sahf   
  4152c2:	cmp    ecx,DWORD PTR [esi+0x45a15fd6]
  4152c8:	mov    ecx,edx
  4152ca:	inc    ecx
  4152cb:	jge    0x41530c
  4152cd:	loopne 0x4152fa
  4152cf:	fsubp  st(7),st
  4152d1:	push   0xa74e9728
  4152d6:	jbe    0x415273
  4152d8:	scas   al,BYTE PTR es:[edi]
  4152d9:	sub    bh,BYTE PTR [ebp-0x1af514bd]
  4152df:	mov    dl,0xbc
  4152e1:	pop    ss
  4152e2:	ss (bad) 
  4152e4:	(bad)
  4152e8:	jp     0x41527d
  4152ea:	and    esi,esp
  4152ec:	shl    BYTE PTR [edx+0x70],0xf1
  4152f0:	ja     0x415286
  4152f2:	pop    edx
  4152f3:	dec    eax
  4152f4:	pop    ds
  4152f5:	fwait
  4152f6:	jmp    0x415298
  4152f8:	stos   BYTE PTR es:[edi],al
  4152f9:	outs   dx,DWORD PTR ds:[esi]
  4152fa:	mov    esp,0x3dbff2ec
  4152ff:	xchg   esi,eax
  415300:	fsub   st,st(7)
  415302:	out    0xff,al
  415304:	data16 xor al,0xaa
  415307:	sub    ecx,0x32
  41530a:	mov    esi,0xa4133655
  41530f:	xor    bh,BYTE PTR [edx+0x6e]
  415312:	std    
  415313:	mov    WORD PTR [ebp+0x10],gs
  415316:	pop    ecx
  415317:	imul   edx,edx,0x8c59f8a
  41531d:	ja     0x41532c
  41531f:	sub    bl,BYTE PTR [edx]
  415321:	pop    ds
  415322:	and    al,0x9c
  415324:	std    
  415325:	sahf   
  415326:	fwait
  415327:	xchg   ecx,eax
  415328:	sub    DWORD PTR [ebp-0x62],edi
  41532b:	inc    ecx
  41532c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41532d:	sti    
  41532e:	jo     0x415316
  415330:	dec    edi
  415331:	sti    
  415332:	mov    edi,0x546a49e0
  415337:	loope  0x415331
  415339:	and    DWORD PTR [edx+ecx*2],eax
  41533c:	sub    al,0x5c
  41533e:	clc    
  41533f:	je     0x4152c1
  415341:	dec    ecx
  415342:	ins    DWORD PTR es:[edi],dx
  415343:	pop    ds
  415344:	xlat   BYTE PTR ds:[ebx]
  415345:	push   ecx
  415346:	(bad)  
  415348:	out    0x50,eax
  41534a:	std    
  41534b:	jbe    0x415324
  41534d:	adc    ch,al
  41534f:	jmp    0x63a0:0xef96fdb9
  415356:	adc    cl,BYTE PTR [esi-0x50]
  415359:	ret    
  41535a:	xor    al,0xf8
  41535c:	out    0x29,eax
  41535e:	jg     0x41533e
  415360:	icebp  
  415361:	mov    eax,ds:0x2fb39ce5
  415366:	jp     0x415368
  415368:	fistp  QWORD PTR [ebp+ecx*4+0x471b8da3]
  41536f:	(bad)  
  415370:	bound  ecx,QWORD PTR [ebx+0x4024169]
  415376:	ins    BYTE PTR es:[edi],dx
  415377:	retf   
  415378:	add    dl,dh
  41537a:	pop    esp
  41537b:	inc    esi
  41537c:	prefetch BYTE PTR [esi+edi*4-0x65]
  415381:	in     eax,dx
  415382:	pop    ds
  415383:	aaa    
  415384:	mov    BYTE PTR [eax+0x13],cl
  415387:	(bad)
  41538a:	xchg   BYTE PTR [eax+eax*1+0x30],dl
  41538e:	sahf   
  41538f:	jl     0x415364
  415391:	ins    BYTE PTR es:[edi],dx
  415392:	mov    ch,0xf1
  415394:	mov    ebx,0x2c055537
  415399:	test   al,0xfd
  41539b:	call   0x2302:0xda9a0ff2
  4153a2:	outs   dx,DWORD PTR ds:[esi]
  4153a3:	scas   al,BYTE PTR es:[edi]
  4153a4:	mov    ?,WORD PTR [ebx+0x1d]
  4153a7:	push   eax
  4153a8:	push   edx
  4153a9:	popf   
  4153aa:	lods   eax,DWORD PTR ds:[esi]
  4153ab:	fsub   QWORD PTR [ecx-0x1e]
  4153ae:	enter  0xec97,0x58
  4153b2:	push   ds
  4153b3:	cld    
  4153b4:	pop    ecx
  4153b5:	(bad)  
  4153b6:	fsubr  QWORD PTR [ebx-0x37]
  4153b9:	push   eax
  4153ba:	jb     0x4153cc
  4153bc:	aad    0x48
  4153be:	imul   BYTE PTR [esi+0x52]
  4153c1:	sub    bl,BYTE PTR [edi+edi*1]
  4153c4:	jae    0x415388
  4153c6:	push   eax
  4153c7:	(bad)  
  4153c8:	mov    ds:0x8b2913f9,eax
  4153cd:	dec    eax
  4153ce:	stos   BYTE PTR es:[edi],al
  4153cf:	adc    ah,BYTE PTR [eax+0x64]
  4153d2:	std    
  4153d3:	cmc    
  4153d4:	imul   ebx,ebp,0xe8a8bf56
  4153da:	clc    
  4153db:	or     bl,BYTE PTR [ecx-0x74]
  4153de:	xor    BYTE PTR [edx+edi*1+0x53f626dd],al
  4153e5:	in     al,dx
  4153e6:	cdq    
  4153e7:	adc    eax,DWORD PTR [esi]
  4153e9:	cli    
  4153ea:	sbb    dh,BYTE PTR ds:0xf6878faf
  4153f0:	mov    esp,0x5c306acb
  4153f5:	aas    
  4153f6:	jb     0x415408
  4153f8:	inc    esp
  4153f9:	ja     0x4153bd
  4153fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153fc:	aas    
  4153fd:	fadd   DWORD PTR ds:0x8bd78b9b
  415403:	push   0xffffffc6
  415405:	push   0xa17a530
  41540a:	fwait
  41540b:	int3   
  41540c:	shl    bl,cl
  41540e:	call   0x18c6:0x63d64522
  415415:	inc    ebx
  415416:	dec    esi
  415417:	cmp    ch,ch
  415419:	js     0x415480
  41541b:	or     DWORD PTR [ebx-0x77],0x9138c413
  415422:	in     al,dx
  415423:	jns    0x415498
  415425:	mov    dl,0x50
  415427:	jns    0x4153f2
  415429:	push   cs
  41542a:	xor    al,0x49
  41542c:	shr    BYTE PTR cs:[edi],cl
  41542f:	push   ss
  415430:	ret    0x4124
  415433:	add    al,0xe5
  415435:	xor    esp,DWORD PTR [edi+0x691cff8f]
  41543b:	push   0xffffff8f
  41543d:	jl     0x41540a
  41543f:	or     al,0xf3
  415441:	mov    ecx,0x5eba85b5
  415446:	sub    DWORD PTR [edi-0x66],ecx
  415449:	shl    BYTE PTR [esi],cl
  41544b:	pop    ss
  41544c:	and    cl,bh
  41544e:	push   edx
  41544f:	pop    ds
  415450:	xlat   BYTE PTR ds:[ebx]
  415451:	xchg   ecx,eax
  415452:	xor    al,0xd5
  415454:	jmp    0x2cc073b0
  415459:	xor    BYTE PTR [ecx+edi*8],ah
  41545c:	sub    al,0xce
  41545e:	pop    ss
  41545f:	imul   ecx,DWORD PTR [edx],0xffffff9d
  415462:	psllw  mm0,mm0
  415465:	xor    eax,0xad509421
  41546a:	xchg   edx,eax
  41546b:	lods   al,BYTE PTR ds:[esi]
  41546c:	push   es
  41546d:	dec    ebx
  41546e:	ud2    
  415470:	mov    esi,0x6adbf191
  415475:	cmp    al,0x15
  415477:	fistp  DWORD PTR [ecx-0x11]
  41547a:	fidiv  DWORD PTR [ebp-0x67]
  41547d:	push   eax
  41547e:	mov    eax,ds:0x58d64337
  415483:	jmp    0x4898:0x4e818453
  41548a:	mov    ?,WORD PTR [ecx-0x65]
  41548d:	or     eax,0xb04b550a
  415492:	bound  edx,QWORD PTR [ebx+0x2]
  415495:	out    dx,eax
  415496:	push   ebp
  415497:	inc    ecx
  415498:	in     al,0x89
  41549a:	or     ah,BYTE PTR [ebx+ebp*2+0x60]
  41549e:	push   eax
  41549f:	lods   al,BYTE PTR ds:[esi]
  4154a0:	mov    bl,0xc
  4154a2:	in     al,0x5a
  4154a4:	adc    esp,DWORD PTR [edx]
  4154a6:	(bad)  
  4154a7:	pushf  
  4154a8:	dec    eax
  4154a9:	fisub  DWORD PTR [eax-0x76]
  4154ac:	pop    ebx
  4154ad:	push   ebx
  4154ae:	cmp    DWORD PTR [ebp-0x3b],ecx
  4154b1:	mov    ds:0x7843a2bf,eax
  4154b6:	pop    ecx
  4154b7:	sub    al,al
  4154b9:	cli    
  4154ba:	pop    edx
  4154bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154bc:	add    al,0x4
  4154be:	ja     0x415498
  4154c0:	les    esi,FWORD PTR [esi+0x41]
  4154c3:	or     BYTE PTR [esi],bh
  4154c5:	jecxz  0x415459
  4154c7:	ret    0xe863
  4154ca:	adc    bl,BYTE PTR [esi-0x20]
  4154cd:	repnz cmp ch,dh
  4154d0:	push   edi
  4154d1:	in     eax,dx
  4154d2:	mov    ch,0x55
  4154d4:	mov    esp,0x90b619c3
  4154d9:	adc    BYTE PTR [ebx-0x10db3882],bh
  4154df:	add    BYTE PTR [esi+0x59],ch
  4154e2:	push   esp
  4154e3:	mov    ebp,0x20134c10
  4154e8:	(bad)  
  4154e9:	or     ebp,edi
  4154eb:	xchg   ebx,eax
  4154ec:	sub    bh,BYTE PTR [eax+eiz*1+0x6]
  4154f0:	xchg   edx,eax
  4154f1:	jb     0x41554f
  4154f3:	fbstp  TBYTE PTR [edi]
  4154f5:	aad    0xba
  4154f7:	or     cl,BYTE PTR [edx-0x43727f01]
  4154fd:	fsubr  QWORD PTR [esi-0x2]
  415500:	or     BYTE PTR [ecx+0x59],ah
  415503:	cmp    BYTE PTR [edi+eax*8+0x40a3604b],bl
  41550a:	in     eax,dx
  41550b:	push   ebx
  41550c:	sti    
  41550d:	mov    ebp,0xa7150a6d
  415512:	add    DWORD PTR [ecx+0xacebce8],ebp
  415518:	ins    DWORD PTR es:[edi],dx
  415519:	push   ebx
  41551a:	push   edi
  41551b:	sbb    al,BYTE PTR [eax]
  41551d:	call   0x48a56502
  415522:	jmp    0xe997deb1
  415527:	ins    BYTE PTR es:[edi],dx
  415528:	pushf  
  415529:	int    0xd4
  41552b:	aaa    
  41552c:	inc    ebx
  41552d:	cli    
  41552e:	aad    0xb8
  415530:	ret    
  415531:	ret    0xa783
  415534:	mov    al,ds:0x3c6a594a
  415539:	push   ebx
  41553a:	sub    edx,edx
  41553c:	aad    0xc2
  41553e:	lea    esi,[ebx+ebp*2]
  415541:	mov    cl,0xe9
  415543:	jmp    0x5b6c0e9b
  415548:	(bad)  
  415549:	retf   
  41554a:	fsub   DWORD PTR [edx]
  41554c:	ds into 
  41554e:	inc    ebx
  41554f:	daa    
  415550:	imul   edx,DWORD PTR [esi+ebp*1+0x9],0x3e
  415555:	jbe    0x41552f
  415557:	aam    0x24
  415559:	add    DWORD PTR [edx-0x38],edi
  41555c:	test   DWORD PTR [edx-0x2a209e4],esi
  415562:	and    BYTE PTR [ebx],bl
  415564:	push   ebp
  415565:	mov    edi,0xa3cd91fa
  41556a:	and    BYTE PTR [esi-0xd],ah
  41556d:	xchg   ecx,eax
  41556e:	or     DWORD PTR [ecx+0x2a9c218c],edx
  415574:	sub    cl,bl
  415576:	fst    QWORD PTR ds:[edi+eax*4]
  41557a:	fadd   DWORD PTR [edx]
  41557c:	xlat   BYTE PTR ds:[ebx]
  41557d:	push   0x306e8678
  415582:	ds loopne 0x415559
  415585:	jle    0x41558e
  415587:	dec    edi
  415588:	xchg   ecx,eax
  415589:	into   
  41558a:	mov    esp,0x16d94a6b
  41558f:	imul   edx,DWORD PTR [ebp-0x7e],0xa2781ba9
  415596:	pop    ss
  415597:	test   edx,ebp
  415599:	jne    0x4155cc
  41559b:	pop    ss
  41559c:	pusha  
  41559d:	push   eax
  41559e:	sbb    dh,BYTE PTR [edx+0x19]
  4155a1:	shr    BYTE PTR [ebx+0x4b],cl
  4155a4:	out    dx,al
  4155a5:	outs   dx,BYTE PTR ds:[esi]
  4155a6:	push   esp
  4155a7:	(bad)  
  4155a8:	mov    ds:0xc385c087,eax
  4155ad:	dec    eax
  4155ae:	les    ebx,FWORD PTR [ecx+eiz*2-0x1320e062]
  4155b5:	imul   DWORD PTR [ebx-0x621ff579]
  4155bb:	pop    ds
  4155bc:	or     dl,bh
  4155be:	adc    eax,0x30b29107
  4155c4:	mov    ds:0xc1a5b432,al
  4155c9:	xlat   BYTE PTR ds:[ebx]
  4155ca:	pop    ebx
  4155cb:	sbb    DWORD PTR [edi-0x21be272d],0x76
  4155d2:	lea    esi,[edi+ebx*1+0x7037c92d]
  4155d9:	xor    edi,ebp
  4155db:	mov    bh,0x8f
  4155dd:	jp     0x415653
  4155df:	or     al,0xe9
  4155e1:	adc    eax,0x4ae5ae12
  4155e6:	(bad)  [edi-0x68]
  4155e9:	daa    
  4155ea:	add    al,BYTE PTR [ebp-0x5d]
  4155ed:	dec    DWORD PTR [ecx-0x4b]
  4155f0:	dec    ecx
  4155f1:	ret    0x454e
  4155f4:	add    DWORD PTR [ecx],edx
  4155f6:	fsub   DWORD PTR [edx+eiz*4-0x2a]
  4155fa:	cld    
  4155fb:	punpckhwd mm6,mm6
  4155fe:	fsubr  DWORD PTR [esi-0x91a70a8]
  415604:	and    BYTE PTR [eiz*1-0x5fcd9be0],bh
  41560b:	popf   
  41560c:	mov    BYTE PTR [edx-0x6a],0x74
  415610:	fdivp  st(0),st
  415612:	jle    0x415693
  415614:	xchg   edx,eax
  415615:	int3   
  415616:	cmp    DWORD PTR [edi],eax
  415618:	out    0xe0,eax
  41561a:	iret   
  41561b:	push   edx
  41561c:	xchg   ebx,eax
  41561d:	sub    eax,0x9f2c69ee
  415622:	xchg   esp,eax
  415623:	adc    al,0x76
  415625:	add    ecx,DWORD PTR [ecx]
  415627:	push   0x9
  415629:	out    dx,al
  41562a:	in     eax,dx
  41562b:	push   eax
  41562c:	jmp    0x4155f6
  41562e:	inc    ecx
  41562f:	dec    edx
  415630:	sub    bl,BYTE PTR [esi+edx*2]
  415633:	test   cl,ch
  415635:	pop    ss
  415636:	adc    eax,0x3f58193c
  41563b:	jl     0x4155d2
  41563d:	sbb    DWORD PTR [ebx+0x577b76b],0xbb10f621
  415647:	cs xchg bl,cl
  41564a:	jbe    0x4156b1
  41564c:	push   ebp
  41564d:	xchg   ebp,eax
  41564e:	mov    WORD PTR [ecx],es
  415650:	iret   
  415651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415652:	xchg   edx,eax
  415653:	jb     0x415685
  415655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415656:	inc    ebx
  415657:	push   eax
  415658:	sbb    eax,DWORD PTR [ecx+eax*1-0x25a5208c]
  41565f:	pop    eax
  415660:	daa    
  415661:	stos   BYTE PTR es:[edi],al
  415662:	mov    dl,0x80
  415664:	jno    0x415602
  415666:	jg     0x415606
  415668:	and    DWORD PTR [esi-0x7e],0x5
  41566c:	aas    
  41566d:	push   esi
  41566e:	sahf   
  41566f:	clc    
  415670:	sbb    DWORD PTR [edx-0xfb56207],esp
  415676:	and    bh,0x28
  415679:	inc    esp
  41567a:	mov    dh,0xdd
  41567c:	stos   DWORD PTR es:[edi],eax
  41567d:	sbb    bl,BYTE PTR fs:[esi]
  415680:	scas   al,BYTE PTR es:[edi]
  415681:	xlat   BYTE PTR ds:[ebx]
  415682:	and    DWORD PTR [edi-0x51],0xe8e0b66a
  415689:	xchg   BYTE PTR [esi-0x4a135ab2],bh
  41568f:	or     DWORD PTR [ecx-0x63fb0037],0xc4402377
  415699:	aaa    
  41569a:	jmp    0x415625
  41569c:	mov    esp,0xef381b5d
  4156a1:	out    0xfb,al
  4156a3:	std    
  4156a4:	and    ah,BYTE PTR [ecx]
  4156a6:	push   ecx
  4156a7:	sub    ebx,eax
  4156a9:	xor    edx,DWORD PTR [eax+0x69093880]
  4156af:	and    al,0xcb
  4156b1:	and    al,0xfa
  4156b3:	cmp    DWORD PTR [edi],ecx
  4156b5:	ficomp DWORD PTR [esi]
  4156b7:	dec    edx
  4156b8:	ds cmp ecx,edx
  4156bb:	fistp  QWORD PTR [ebx+0x24]
  4156be:	push   ss
  4156bf:	fnstenv [edi]
  4156c1:	pusha  
  4156c2:	xchg   ecx,eax
  4156c3:	(bad)  
  4156c4:	xlat   BYTE PTR ds:[ebx]
  4156c5:	push   ds
  4156c6:	mov    ecx,0x615574e6
  4156cb:	ret    0xab2c
  4156ce:	dec    eax
  4156cf:	jl     0x41568a
  4156d1:	popa   
  4156d2:	retf   
  4156d3:	out    dx,al
  4156d4:	(bad)  
  4156d5:	xor    dh,BYTE PTR ds:0xf06611f4
  4156db:	or     ch,BYTE PTR [edi+0x61]
  4156de:	push   ebx
  4156df:	js     0x415760
  4156e1:	jmp    0x6ed8:0xd804c279
  4156e8:	cmp    ah,BYTE PTR [eax+0x59]
  4156eb:	test   DWORD PTR [ecx],0x8c9d55c1
  4156f1:	aaa    
  4156f2:	inc    edx
  4156f3:	out    dx,al
  4156f4:	mov    ds:0xdbde74c6,al
  4156f9:	jmp    0x30141a48
  4156fe:	xor    BYTE PTR [ecx+0x49a4fa86],0xc0
  415705:	inc    edx
  415706:	mov    eax,ds:0xb5ab78de
  41570b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41570c:	test   eax,0x9fc5025
  415711:	gs cdq 
  415713:	fisub  DWORD PTR [esi]
  415715:	fcomp  st(0)
  415717:	out    dx,eax
  415718:	in     eax,dx
  415719:	(bad)  
  41571a:	dec    edi
  41571b:	jmp    0x1ada:0x36bf47b0
  415722:	dec    edi
  415723:	and    al,0xca
  415725:	inc    esi
  415726:	loope  0x415753
  415728:	test   DWORD PTR [eax+0x32],eax
  41572b:	lods   eax,DWORD PTR ds:[esi]
  41572c:	mov    dh,BYTE PTR [edx]
  41572e:	pop    ds
  41572f:	jg     0x415736
  415731:	mov    ah,0x10
  415733:	inc    esi
  415734:	fnsave [ebx+ecx*4+0x7a94f37c]
  41573b:	aas    
  41573c:	jbe    0x41575d
  41573e:	sub    eax,DWORD PTR [ebp+0x13]
  415741:	mov    BYTE PTR [edi],dh
  415743:	add    edi,DWORD PTR [eax]
  415745:	sub    eax,ebx
  415747:	jmp    0x41570c
  415749:	aad    0xab
  41574b:	shl    BYTE PTR [esi],1
  41574d:	ror    BYTE PTR [ecx],1
  41574f:	jge    0x415743
  415751:	jmp    0x8fb2:0xcab96833
  415758:	loop   0x4156eb
  41575a:	js     0x415715
  41575c:	test   DWORD PTR ds:0x1f42daae,edx
  415762:	ss pop ecx
  415764:	shl    DWORD PTR [eax+edi*8+0x2f225af0],1
  41576b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41576c:	pop    eax
  41576d:	sub    esp,DWORD PTR [edx-0x43]
  415770:	int    0xa6
  415772:	push   ebp
  415773:	daa    
  415774:	outs   dx,DWORD PTR ds:[esi]
  415775:	lds    esp,FWORD PTR [edi+0x757598a3]
  41577b:	or     DWORD PTR [esi],ebp
  41577d:	out    0x56,eax
  41577f:	mov    dh,0x6f
  415781:	mov    eax,ds:0x1a1ef75e
  415786:	into   
  415787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415788:	test   BYTE PTR [ecx],ch
  41578a:	ins    BYTE PTR es:[edi],dx
  41578b:	xor    ebp,DWORD PTR fs:[edi]
  41578e:	ins    BYTE PTR es:[edi],dx
  41578f:	das    
  415790:	enter  0xb83c,0x2f
  415794:	and    eax,DWORD PTR [esi]
  415796:	(bad)  
  415797:	cmp    DWORD PTR [ebp-0x654bbffd],esi
  41579d:	daa    
  41579e:	sbb    bh,bh
  4157a0:	cwde   
  4157a1:	mov    al,0x7b
  4157a3:	fcom   DWORD PTR [ecx]
  4157a5:	fisttp DWORD PTR [edi]
  4157a7:	jl     0x415827
  4157a9:	or     ebp,esp
  4157ab:	inc    eax
  4157ac:	xor    eax,0xd52f4257
  4157b1:	cld    
  4157b2:	mov    bh,0x21
  4157b4:	dec    ebx
  4157b5:	retf   0x3bf1
  4157b8:	sahf   
  4157b9:	call   0xe0d8d998
  4157be:	push   cs
  4157bf:	mov    DWORD PTR [eax],0xfc532ef7
  4157c5:	push   ebp
  4157c6:	sub    BYTE PTR [ecx+0x2ab41255],al
  4157cc:	mov    WORD PTR [ebx+0x19],ds
  4157cf:	out    0xe2,eax
  4157d1:	adc    BYTE PTR [di-0x17f4],al
  4157d6:	enter  0xf28c,0x31
  4157da:	out    dx,al
  4157db:	inc    ebx
  4157dc:	mov    edx,ecx
  4157de:	inc    esi
  4157df:	push   ebx
  4157e0:	in     eax,dx
  4157e1:	(bad)  
  4157e2:	jmp    0x415767
  4157e4:	pop    ebx
  4157e5:	cmc    
  4157e6:	(bad)  [esi-0x14553037]
  4157ec:	push   ss
  4157ed:	inc    eax
  4157ee:	clc    
  4157ef:	lock add eax,0x1a6e7bb9
  4157f5:	push   eax
  4157f6:	mov    al,0x13
  4157f8:	cmp    eax,0x453fb94a
  4157fd:	je     0x415869
  4157ff:	outs   dx,BYTE PTR ds:[esi]
  415800:	pop    ebp
  415801:	mov    ds:0x731a40b1,eax
  415806:	mov    ch,0x91
  415808:	inc    eax
  415809:	xchg   BYTE PTR [edi-0x6c2c471a],dl
  41580f:	loop   0x415838
  415811:	icebp  
  415812:	xchg   DWORD PTR [ecx+0x42d38a25],ecx
  415818:	dec    ebp
  415819:	sub    ebx,edi
  41581b:	jae    0x415841
  41581d:	test   al,0x97
  41581f:	dec    eax
  415820:	scas   al,BYTE PTR es:[edi]
  415821:	dec    ecx
  415822:	jecxz  0x41586e
  415824:	nop
  415825:	imul   edx,DWORD PTR [ebp+0x416cc54e],0x9
  41582c:	in     al,dx
  41582d:	pop    ecx
  41582e:	loop   0x41583f
  415830:	cli    
  415831:	enter  0x1e12,0xc
  415835:	cmp    ebx,eax
  415837:	dec    ebp
  415838:	fmul   QWORD PTR [ebx+ebx*2-0x38]
  41583c:	mov    eax,0x111064cf
  415841:	jns    0x415823
  415843:	jnp    0x4157d9
  415845:	xor    DWORD PTR [ecx+0x1155736e],ebp
  41584b:	imul   DWORD PTR [esi+0x78]
  41584e:	or     al,0xac
  415850:	pop    ds
  415851:	fisub  DWORD PTR [edi]
  415853:	je     0x4157fd
  415855:	inc    esp
  415856:	aas    
  415857:	xor    eax,0x9a0e3522
  41585c:	(bad)  
  41585d:	retf   0x2fba
  415860:	mov    edx,0x79284957
  415865:	xlat   BYTE PTR ds:[ebx]
  415866:	js     0x4158da
  415868:	or     eax,DWORD PTR ds:0x7d58166b
  41586e:	dec    ecx
  41586f:	ret    
  415870:	xchg   esp,eax
  415871:	hlt    
  415872:	fisubr DWORD PTR [eax]
  415874:	push   0xd
  415876:	in     eax,0xfb
  415878:	mov    esi,0xe1520050
  41587d:	cs xor al,0xcc
  415880:	pop    edi
  415881:	adc    dh,BYTE PTR [edi]
  415883:	sbb    dh,cl
  415885:	pop    ss
  415886:	(bad)  
  415887:	in     al,0x92
  415889:	add    BYTE PTR [ebp+ebp*2-0x41],bh
  41588d:	sub    al,0xf2
  41588f:	gs in  eax,0x98
  415892:	outs   dx,BYTE PTR ds:[esi]
  415893:	mov    bh,0xa0
  415895:	test   BYTE PTR [ebp-0x5a692504],bl
  41589b:	mov    ds:0x15988a75,al
  4158a0:	lods   eax,DWORD PTR ds:[esi]
  4158a1:	xor    eax,0x9afdb05a
  4158a6:	cld    
  4158a7:	cmc    
  4158a8:	cwde   
  4158a9:	sub    al,0xbb
  4158ab:	iret   
  4158ac:	dec    ebx
  4158ad:	adc    bl,BYTE PTR ds:0x4e94d339
  4158b3:	mov    dh,0xe
  4158b5:	mov    ebx,0xb6291c4a
  4158ba:	int    0x38
  4158bc:	mov    eax,ds:0xfd25bc06
  4158c1:	adc    eax,0xf014be1d
  4158c6:	stos   BYTE PTR es:[edi],al
  4158c7:	jecxz  0x41587a
  4158c9:	xor    al,0x46
  4158cb:	push   DWORD PTR [ecx+0x29a32175]
  4158d1:	addr16 aam 0x6
  4158d4:	in     al,dx
  4158d5:	mov    esp,?
  4158d7:	ss jno 0x4158d7
  4158da:	into   
  4158db:	or     BYTE PTR [edx],0x25
  4158de:	repz retf 
  4158e0:	ja     0x4158a9
  4158e2:	push   ds
  4158e3:	mov    bl,dh
  4158e5:	test   BYTE PTR [edi+0x19],cl
  4158e8:	or     edx,DWORD PTR [ebp-0x31a4909e]
  4158ee:	(bad)  
  4158f0:	xchg   BYTE PTR [edx-0x49],ah
  4158f3:	mov    ecx,0xd2a39733
  4158f8:	cmc    
  4158f9:	add    DWORD PTR [edx-0xe],edi
  4158fc:	add    al,0x71
  4158fe:	xor    ebp,ebx
  415900:	bound  ecx,QWORD PTR [ebx]
  415902:	push   0x15
  415904:	dec    edi
  415905:	sbb    ebx,DWORD PTR [edx+edx*8+0x51e2364c]
  41590c:	out    0x91,al
  41590e:	and    ch,BYTE PTR [eax-0x5b954a65]
  415914:	scas   eax,DWORD PTR es:[edi]
  415915:	out    dx,al
  415916:	outs   dx,DWORD PTR ds:[esi]
  415917:	into   
  415918:	inc    ebx
  415919:	outs   dx,BYTE PTR ds:[esi]
  41591a:	lods   eax,DWORD PTR ss:[esi]
  41591c:	and    edx,ebx
  41591e:	ret    
  41591f:	adc    dh,BYTE PTR [edi+0x4d]
  415922:	test   DWORD PTR [eax],edx
  415924:	push   ecx
  415925:	loop   0x415959
  415927:	loopne 0x41599e
  415929:	sub    BYTE PTR ds:0x25ab8895,bl
  41592f:	xchg   esi,eax
  415930:	jnp    0x41592d
  415932:	mov    esi,0xcdb6a280
  415937:	xlat   BYTE PTR ds:[ebx]
  415938:	dec    eax
  415939:	ds aam 0x83
  41593c:	mov    ds:0xf9e9e7e5,al
  415941:	scas   eax,DWORD PTR es:[edi]
  415942:	jecxz  0x415951
  415944:	in     al,0x7e
  415946:	lea    eax,[edx]
  415948:	cmp    ch,BYTE PTR [edx+0x3bae44d7]
  41594e:	xor    eax,ebx
  415950:	or     BYTE PTR [ebx],ah
  415952:	xor    DWORD PTR [ebx-0x1a0881cc],esp
  415958:	lahf   
  415959:	cld    
  41595a:	xchg   ecx,eax
  41595b:	mov    ebx,0xb2fbe1fa
  415960:	(bad)  
  415961:	scas   eax,DWORD PTR es:[edi]
  415962:	daa    
  415963:	lahf   
  415964:	and    DWORD PTR [edx],esp
  415966:	mov    al,0xc2
  415968:	sti    
  415969:	out    0x24,eax
  41596b:	push   0x5b
  41596d:	ret    0x2dde
  415970:	(bad)  
  415972:	std    
  415973:	jmp    0x9ba8:0xbbc616fc
  41597a:	inc    edx
  41597b:	outs   dx,BYTE PTR ds:[esi]
  41597c:	jno    0x4159c8
  41597e:	jmp    0x24e3:0x40ab66ef
  415985:	add    DWORD PTR [edi-0x45],0x9ca0db7a
  41598c:	inc    edi
  41598d:	inc    ecx
  41598e:	sbb    edi,ecx
  415990:	outs   dx,BYTE PTR ds:[esi]
  415991:	push   edi
  415992:	sbb    bh,ah
  415994:	das    
  415995:	or     bh,dh
  415997:	xor    DWORD PTR [ecx],ebp
  415999:	adc    eax,0xae6deffe
  41599e:	sub    eax,0xb3e37072
  4159a3:	add    BYTE PTR [edi+0x4e],dh
  4159a6:	add    al,0x1a
  4159a8:	test   BYTE PTR ds:0x2cd21c99,cl
  4159ae:	jmp    0xc776:0x6e4808b3
  4159b5:	jmp    0xf8683bb2
  4159ba:	retf   
  4159bb:	jmp    0xdfa5:0xe3cd5731
  4159c2:	and    edx,DWORD PTR [ebx]
  4159c4:	div    BYTE PTR [ebx-0x22]
  4159c7:	jne    0x415978
  4159c9:	loop   0x415a27
  4159cb:	fbstp  TBYTE PTR [eax]
  4159cd:	aaa    
  4159ce:	test   BYTE PTR [ebp-0x67],al
  4159d1:	bound  edi,QWORD PTR [esi]
  4159d3:	sub    DWORD PTR [ecx],0x33
  4159d6:	enter  0x188d,0x1e
  4159da:	cmp    esp,edx
  4159dc:	repnz mov ebp,0xdcb1065f
  4159e2:	pop    esp
  4159e3:	dec    esi
  4159e4:	iret   
  4159e5:	sub    dl,dl
  4159e7:	jbe    0x4159e7
  4159e9:	ins    DWORD PTR es:[edi],dx
  4159ea:	ret    0x382
  4159ed:	lea    ebp,[ecx-0xb]
  4159f0:	imul   ebp,edi,0x3ca00a74
  4159f6:	add    al,0x5e
  4159f8:	outs   dx,DWORD PTR ds:[esi]
  4159f9:	or     dl,cl
  4159fb:	fiadd  WORD PTR [ebx+edx*8+0x4b]
  4159ff:	fcmovbe st,st(1)
  415a01:	inc    ebx
  415a02:	push   ds
  415a03:	adc    DWORD PTR [ecx-0x20],esi
  415a06:	mov    ch,0x25
  415a08:	inc    ebp
  415a09:	push   ds
  415a0a:	xlat   BYTE PTR ds:[ebx]
  415a0b:	xchg   DWORD PTR [esi],esp
  415a0d:	or     al,0x54
  415a0f:	retf   0x54e2
  415a12:	(bad)  
  415a14:	(bad)  
  415a15:	aam    0x5e
  415a17:	jno    0x415a38
  415a19:	pop    ss
  415a1a:	fild   DWORD PTR [edi+0x23]
  415a1d:	fsub   DWORD PTR [edx]
  415a1f:	push   ebp
  415a20:	sbb    ecx,DWORD PTR cs:[edx+0x5b]
  415a24:	cdq    
  415a25:	push   cs
  415a26:	ins    BYTE PTR es:[edi],dx
  415a27:	pop    ss
  415a28:	aaa    
  415a29:	retf   
  415a2a:	mov    esp,0x3d6af519
  415a2f:	pusha  
  415a30:	loop   0x4159c2
  415a32:	ret    0x24f4
  415a35:	inc    esp
  415a36:	fdivr  DWORD PTR [edx]
  415a38:	pop    ds
  415a39:	or     BYTE PTR [ecx-0x71c6e17d],0xa8
  415a40:	sbb    al,0xbb
  415a42:	cwde   
  415a43:	sub    bh,BYTE PTR [edx]
  415a45:	fidivr DWORD PTR [esp+edi*1-0x36]
  415a49:	fisubr DWORD PTR [ecx-0x2a41a8ff]
  415a4f:	stos   DWORD PTR es:[edi],eax
  415a50:	mov    ecx,0x4957179e
  415a55:	mov    ecx,0x8128ce27
  415a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a5b:	repz or eax,0x2f743183
  415a61:	out    dx,al
  415a62:	shr    BYTE PTR [ecx-0xb],1
  415a65:	leave  
  415a66:	iret   
  415a67:	pop    ss
  415a68:	sar    DWORD PTR [edi],cl
  415a6a:	cmp    bl,BYTE PTR [esi]
  415a6c:	getsec 
  415a6e:	ss sub al,0x6b
  415a71:	add    al,0xb8
  415a73:	ja     0x415ab8
  415a75:	in     eax,0x96
  415a77:	pop    esi
  415a78:	mov    esi,ebx
  415a7a:	mov    ecx,DWORD PTR [ecx+0x7e2a7db7]
  415a80:	sub    eax,0x98ff2bb2
  415a85:	imul   edx,esp,0xfffffff9
  415a88:	repz shl BYTE PTR [esi+eiz*4],0x2b
  415a8d:	jecxz  0x415a88
  415a8f:	inc    esp
  415a90:	xor    al,0x9a
  415a92:	add    al,bh
  415a94:	in     eax,dx
  415a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a97:	cli    
  415a98:	(bad)  
  415a99:	nop
  415a9a:	leave  
  415a9b:	test   BYTE PTR [ebx+edx*1+0x6a],bh
  415a9f:	inc    esp
  415aa0:	loopne 0x415a68
  415aa2:	(bad)  
  415aa3:	push   ds
  415aa4:	mov    ch,0x94
  415aa6:	test   DWORD PTR [ecx],ecx
  415aa8:	xor    al,0x82
  415aaa:	leave  
  415aab:	pushf  
  415aac:	and    cl,BYTE PTR [esp+ebp*1]
  415aaf:	jg     0x415ac7
  415ab1:	sahf   
  415ab2:	vpand  xmm5,xmm3,xmm3
  415ab6:	inc    ebx
  415ab7:	inc    edi
  415ab8:	push   edi
  415ab9:	and    eax,0x6244d63e
  415abe:	xchg   edi,eax
  415abf:	int    0xac
  415ac1:	xchg   esp,eax
  415ac2:	loopne 0x415a44
  415ac4:	dec    ecx
  415ac5:	dec    edi
  415ac6:	xor    esi,DWORD PTR [edx]
  415ac8:	xchg   esi,eax
  415ac9:	out    0xf9,al
  415acb:	jmp    0xc91df70b
  415ad0:	(bad)  
  415ad1:	sbb    dh,ah
  415ad3:	rcl    BYTE PTR [ebp+0x2d1f0fda],0xd0
  415ada:	js     0x415b47
  415adc:	and    BYTE PTR [esi+0xacf8645],dl
  415ae2:	fbstp  TBYTE PTR [edx-0x65]
  415ae5:	and    BYTE PTR [ebx-0x7d],dh
  415ae8:	jg     0x415aaf
  415aea:	ss push ss
  415aec:	adc    eax,0xa35735f2
  415af1:	pushf  
  415af2:	pop    edi
  415af3:	dec    esi
  415af4:	pop    ds
  415af5:	push   es
  415af6:	push   esi
  415af7:	mov    ecx,0x3c677143
  415afc:	inc    edi
  415afd:	sub    DWORD PTR [eax-0x125ede75],ecx
  415b03:	rol    BYTE PTR [edi+0x3c],1
  415b06:	or     eax,0x6f70b3d
  415b0b:	push   es
  415b0c:	adc    edi,esi
  415b0e:	hlt    
  415b0f:	ss retf 
  415b11:	lahf   
  415b12:	dec    esp
  415b13:	mov    esp,0xa39712a3
  415b18:	add    BYTE PTR [ebp+0x58],0x96
  415b1c:	cmp    BYTE PTR [edx+0x4a],bl
  415b1f:	imul   ecx,eax,0x18
  415b22:	sbb    ah,BYTE PTR [edx+ebx*1]
  415b25:	jp     0x415b33
  415b27:	inc    eax
  415b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b29:	aad    0x23
  415b2b:	pop    ss
  415b2c:	mov    al,al
  415b2e:	cmp    esp,ebx
  415b30:	(bad)  
  415b31:	in     eax,dx
  415b32:	fld    DWORD PTR [eax-0x54f21e63]
  415b38:	pusha  
  415b39:	mov    bh,0x67
  415b3b:	cld    
  415b3c:	(bad)  
  415b3d:	outs   dx,DWORD PTR ds:[esi]
  415b3e:	iret   
  415b3f:	mov    esi,0x6cfb9d59
  415b44:	pop    edi
  415b45:	in     al,dx
  415b46:	add    dl,ch
  415b48:	adc    ebx,DWORD PTR [ebp-0x63]
  415b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b4c:	in     eax,dx
  415b4d:	cli    
  415b4e:	jg     0x415b5d
  415b50:	icebp  
  415b51:	jg     0x415ba9
  415b53:	(bad)  
  415b54:	adc    DWORD PTR [ebx+0x67fa120a],ebp
  415b5a:	in     al,0xde
  415b5c:	mov    dh,0x83
  415b5e:	jle    0x415bb0
  415b60:	call   0x53e:0xf8988e43
  415b67:	xchg   esp,eax
  415b68:	adc    al,0xcf
  415b6a:	sbb    al,0x1b
  415b6c:	dec    ebp
  415b6d:	add    DWORD PTR [eax],eax
  415b6f:	(bad)  
  415b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b71:	inc    edi
  415b72:	add    eax,DWORD PTR [edx+0x16]
  415b75:	stc    
  415b76:	pop    DWORD PTR [ebp+eiz*2+0x31]
  415b7a:	cli    
  415b7b:	inc    ebp
  415b7c:	adc    DWORD PTR [ecx-0x1c],edi
  415b7f:	adc    BYTE PTR [eax],bl
  415b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b82:	and    ecx,ecx
  415b84:	and    eax,0xdb376cb7
  415b89:	icebp  
  415b8a:	xor    cl,ah
  415b8c:	outs   dx,DWORD PTR ds:[esi]
  415b8d:	jnp    0x415b8c
  415b8f:	fnstsw WORD PTR [esp-0x6e]
  415b93:	in     eax,0x71
  415b95:	xor    eax,0x6fe3bca0
  415b9a:	pop    esp
  415b9b:	scas   al,BYTE PTR es:[edi]
  415b9c:	cs mov cl,0x75
  415b9f:	call   0x754c:0x19a84cb7
  415ba6:	xchg   ebp,eax
  415ba7:	pop    ds
  415ba8:	imul   ebx,DWORD PTR [ecx-0x55],0x48
  415bac:	sbb    al,0xc7
  415bae:	jne    0x415b9e
  415bb0:	inc    ecx
  415bb1:	sbb    eax,0x9d4897b7
  415bb6:	xchg   edi,eax
  415bb7:	pop    ebp
  415bb8:	cld    
  415bb9:	icebp  
  415bba:	jle    0x415be5
  415bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbd:	pop    DWORD PTR [ebp-0x8a10942]
  415bc3:	repnz add DWORD PTR [ebx],esi
  415bc6:	dec    ebp
  415bc7:	lods   al,BYTE PTR ds:[esi]
  415bc8:	sub    edi,0xb36eec9a
  415bce:	push   edx
  415bcf:	jge    0x415c19
  415bd1:	push   0xa2696e42
  415bd6:	retf   0x236b
  415bd9:	aad    0x1c
  415bdb:	shl    DWORD PTR [ecx],0x21
  415bde:	(bad)  ds:0x94ea579f
  415be4:	clc    
  415be5:	test   DWORD PTR ds:0x85e2fe75,ebp
  415beb:	mov    dl,BYTE PTR [ecx-0x3e]
  415bee:	mov    al,0x7b
  415bf0:	dec    esp
  415bf1:	std    
  415bf2:	lods   eax,DWORD PTR ds:[esi]
  415bf3:	repnz pop ss
  415bf5:	cs pop esi
  415bf7:	loop   0x415ba3
  415bf9:	ins    DWORD PTR es:[edi],dx
  415bfa:	push   esp
  415bfb:	stos   DWORD PTR es:[edi],eax
  415bfc:	push   es
  415bfd:	call   0x3d09:0x28f19b95
  415c04:	mov    dl,0x83
  415c06:	xor    dl,bl
  415c08:	push   edi
  415c09:	xchg   edi,eax
  415c0a:	ss push ss
  415c0c:	adc    dl,BYTE PTR [ebx-0x7a]
  415c0f:	dec    eax
  415c10:	call   0x3b182dfe
  415c15:	fild   QWORD PTR [edx+0x333da742]
  415c1b:	push   esp
  415c1c:	nop
  415c1d:	inc    edi
  415c1e:	stos   DWORD PTR es:[edi],eax
  415c1f:	out    0xa,eax
  415c21:	sti    
  415c22:	not    al
  415c24:	xchg   esp,eax
  415c25:	or     al,BYTE PTR [ebx-0x7bf5cf7e]
  415c2b:	jno    0x415c41
  415c2d:	push   ebp
  415c2e:	add    eax,0x49ebe9b1
  415c33:	popf   
  415c34:	iret   
  415c35:	push   esp
  415c36:	arpl   WORD PTR [edi-0x52],bp
  415c39:	dec    BYTE PTR [ecx+0x3dafc033]
  415c3f:	push   eax
  415c40:	cmp    edi,DWORD PTR [ebx]
  415c42:	es and eax,0x2e60dfbb
  415c48:	in     al,0x69
  415c4a:	cld    
  415c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c4c:	outs   dx,DWORD PTR ds:[esi]
  415c4d:	clc    
  415c4e:	xor    al,0x71
  415c50:	push   0x152d19c7
  415c55:	cli    
  415c56:	fst    DWORD PTR ds:0x9fa6888a
  415c5c:	or     eax,0x441dd659
  415c61:	dec    ecx
  415c62:	test   DWORD PTR [edi-0x57],0xbe75377
  415c69:	inc    eax
  415c6a:	xchg   ebx,eax
  415c6b:	adc    eax,0xca805cc9
  415c70:	iret   
  415c71:	(bad)  
  415c72:	cld    
  415c73:	and    BYTE PTR [edx],ch
  415c75:	and    al,0x45
  415c77:	adc    DWORD PTR [ebp+ecx*8-0x600a3e1f],esi
  415c7e:	std    
  415c7f:	inc    esi
  415c80:	pop    edi
  415c81:	(bad)  
  415c82:	mov    al,ds:0x15c872e0
  415c87:	test   eax,0x309a9a71
  415c8c:	or     esi,DWORD PTR [edi]
  415c8e:	into   
  415c8f:	ror    DWORD PTR [edx],1
  415c91:	out    0x59,al
  415c93:	xor    ah,BYTE PTR [edi-0x1c]
  415c96:	jns    0x415cdb
  415c98:	pop    edi
  415c99:	add    eax,0xd584396f
  415c9e:	ror    DWORD PTR gs:[edx-0x44dd503b],0x28
  415ca6:	cmp    cl,BYTE PTR [esi+ecx*2-0x70]
  415caa:	sar    ah,0x41
  415cad:	jmp    0x1506:0x12704fbc
  415cb4:	or     BYTE PTR [edi],dl
  415cb6:	call   0xf082:0x29edb3d3
  415cbd:	jbe    0x415cb1
  415cbf:	mov    dl,0x7e
  415cc1:	loop   0x415ccc
  415cc3:	push   esp
  415cc4:	jmp    0xdc51a6d6
  415cc9:	dec    esi
  415cca:	(bad)  
  415ccb:	sti    
  415ccc:	pop    ebx
  415ccd:	aam    0x77
  415ccf:	jo     0x415c8b
  415cd1:	adc    BYTE PTR [edx+edi*4+0x45c24acc],ch
  415cd8:	xchg   edi,eax
  415cd9:	xor    ebp,esp
  415cdb:	lods   eax,DWORD PTR ds:[esi]
  415cdc:	test   DWORD PTR [esi+0x57],0xfe8f31fb
  415ce3:	inc    edi
  415ce4:	stc    
  415ce5:	fld    TBYTE PTR [edx]
  415ce7:	xor    ebp,edi
  415ce9:	xlat   BYTE PTR ds:[ebx]
  415cea:	or     BYTE PTR [esi],bl
  415cec:	data16 sbb BYTE PTR [esi],0x5f
  415cf0:	hlt    
  415cf1:	or     eax,0x20f61833
  415cf7:	js     0x415d09
  415cf9:	enter  0xed4d,0xff
  415cfd:	pusha  
  415cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cff:	enter  0x8a7c,0xc6
  415d03:	pushf  
  415d04:	retf   0x5ad1
  415d07:	sbb    eax,0xc6852dd
  415d0c:	xchg   esp,eax
  415d0d:	lods   eax,DWORD PTR ds:[esi]
  415d0e:	lods   al,BYTE PTR ds:[esi]
  415d0f:	cmp    edx,esi
  415d11:	and    dl,al
  415d13:	add    eax,edi
  415d15:	jl     0x415d25
  415d17:	mov    dl,BYTE PTR [esp+ebp*2-0x6dd856fb]
  415d1e:	xchg   ebp,eax
  415d1f:	into   
  415d20:	je     0x415d37
  415d22:	push   ebx
  415d23:	pushf  
  415d24:	push   ds
  415d25:	loop   0x415d69
  415d27:	adc    eax,0x33428fc5
  415d2c:	retf   
  415d2d:	jne    0x415da8
  415d2f:	mov    BYTE PTR [edx+0x6ddc7047],dh
  415d35:	shr    BYTE PTR [eax],0x7f
  415d38:	popf   
  415d39:	fbld   TBYTE PTR ds:0x73103049
  415d3f:	std    
  415d40:	sub    al,0xe7
  415d42:	pop    ss
  415d43:	test   DWORD PTR [eax+0x58778bea],edi
  415d49:	xchg   edx,eax
  415d4a:	add    eax,0x75c949f0
  415d4f:	sub    BYTE PTR [ecx+eax*4],bh
  415d52:	call   0x7136:0x52cd5530
  415d59:	jl     0x415ce5
  415d5b:	add    bh,BYTE PTR [edi]
  415d5d:	and    ebx,ebx
  415d5f:	mov    ds:0xa69f92d8,al
  415d64:	pop    edi
  415d65:	xor    al,0x78
  415d67:	inc    ebp
  415d68:	mov    edx,0x85d30cfd
  415d6d:	test   ebp,ebp
  415d6f:	pushf  
  415d70:	cmp    BYTE PTR [esi-0x10],cl
  415d73:	xlat   BYTE PTR ds:[ebx]
  415d74:	mov    edi,?
  415d76:	mov    ecx,0xcd7c20cc
  415d7b:	icebp  
  415d7c:	jnp    0x415d93
  415d7e:	clc    
  415d7f:	jecxz  0x415d1d
  415d81:	mov    DWORD PTR [esi-0x77a59974],ebp
  415d87:	mov    bl,0x7e
  415d89:	inc    esp
  415d8a:	mov    ds:0x17f0b1a4,al
  415d8f:	je     0x415d2c
  415d91:	adc    al,0xfb
  415d93:	cmp    esi,DWORD PTR [ecx]
  415d95:	adc    eax,0xd80c2e58
  415d9a:	arpl   WORD PTR [ecx+0x1576e330],si
  415da0:	enter  0x99ef,0x79
  415da4:	aaa    
  415da5:	xchg   esi,eax
  415da6:	mov    bh,BYTE PTR [eax]
  415da8:	inc    edx
  415da9:	data16 rcr dl,1
  415dac:	ss test edi,edx
  415daf:	lods   eax,DWORD PTR ds:[esi]
  415db0:	inc    edi
  415db1:	xchg   ecx,eax
  415db2:	stos   DWORD PTR es:[edi],eax
  415db3:	pop    edi
  415db4:	rcr    DWORD PTR [edx+eiz*1+0x2f],0x10
  415db9:	xchg   edi,eax
  415dba:	dec    esi
  415dbb:	fisub  DWORD PTR [ecx+0x1d81712d]
  415dc1:	mov    edx,DWORD PTR [ebp+0x1cd467e8]
  415dc7:	or     al,0x4c
  415dc9:	imul   esi,DWORD PTR [edx-0x723ac47b],0xf60ab00
  415dd3:	test   DWORD PTR [esi],0xa664293
  415dd9:	adc    DWORD PTR [eax+0x77],0xdde3c545
  415de0:	mov    al,ds:0xca658c98
  415de5:	popf   
  415de6:	sbb    BYTE PTR [edi-0x48],cl
  415de9:	cdq    
  415dea:	in     al,dx
  415deb:	push   eax
  415dec:	ins    DWORD PTR es:[edi],dx
  415ded:	pop    ebx
  415dee:	mov    dl,0xdd
  415df0:	mov    bh,0x69
  415df2:	mov    BYTE PTR [esi+0x5b],bh
  415df5:	popf   
  415df6:	add    BYTE PTR [ecx+ebp*8+0x6e],bl
  415dfa:	dec    ebp
  415dfb:	pop    ebp
  415dfc:	pusha  
  415dfd:	sub    DWORD PTR [edx+0x30dcded3],0x2fdf9d00
  415e07:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415e09:	call   0x8e249c0e
  415e0e:	jo     0x415d9b
  415e10:	pop    es
  415e11:	cmc    
  415e12:	sub    DWORD PTR [edi+ebx*8+0x49],ecx
  415e16:	mov    ebx,0x86948678
  415e1b:	push   0xffffffaf
  415e1d:	mov    dl,0x8f
  415e1f:	dec    eax
  415e20:	sti    
  415e21:	lock mov eax,0x3b09c13
  415e27:	sbb    al,0x1d
  415e29:	push   0x3d
  415e2b:	hlt    
  415e2c:	rcr    BYTE PTR [esi-0x36],cl
  415e2f:	sub    DWORD PTR [edi-0x4d9e229],0x2c
  415e36:	mov    ch,0x64
  415e38:	and    DWORD PTR [ebx+ecx*4+0x5f],esi
  415e3c:	adc    al,BYTE PTR [esi+0x3f]
  415e3f:	xlat   BYTE PTR ds:[ebx]
  415e40:	pop    ebx
  415e41:	pop    ss
  415e42:	xchg   edx,eax
  415e43:	shl    ah,cl
  415e45:	xor    ebp,DWORD PTR [eax]
  415e47:	adc    BYTE PTR [edi+0x1b842a5e],ch
  415e4d:	outs   dx,BYTE PTR ds:[esi]
  415e4e:	in     al,dx
  415e4f:	sbb    ch,BYTE PTR [edi]
  415e51:	fwait
  415e52:	pop    ss
  415e53:	scas   al,BYTE PTR es:[edi]
  415e54:	popa   
  415e55:	inc    ebx
  415e56:	mov    al,ds:0xb59c22b4
  415e5b:	pop    eax
  415e5c:	aas    
  415e5d:	xor    eax,0xa016f470
  415e62:	adc    eax,ecx
  415e64:	cwde   
  415e65:	cmc    
  415e66:	sti    
  415e67:	jno    0x415e56
  415e69:	ror    BYTE PTR [ebp-0x61],0xba
  415e6d:	enter  0xe75d,0x93
  415e71:	(bad)  
  415e72:	and    bl,BYTE PTR [ebx]
  415e74:	out    dx,al
  415e75:	cmp    DWORD PTR [ebp+0x2e9d8582],esi
  415e7b:	clc    
  415e7c:	jb     0x415e21
  415e7e:	pusha  
  415e7f:	and    ebp,ecx
  415e81:	mov    ebp,DWORD PTR [ebx+ebx*2+0xa]
  415e85:	cmp    DWORD PTR [eax-0x37e96fd],ecx
  415e8b:	dec    ecx
  415e8c:	leave  
  415e8d:	ja     0x415e72
  415e8f:	mov    ds:0x5950cd9b,eax
  415e94:	or     dh,BYTE PTR [ecx-0x26]
  415e97:	xor    DWORD PTR [edx+0x8f13fcd],ebp
  415e9d:	mov    DWORD PTR ds:0x7c5e8f9,ebp
  415ea3:	or     BYTE PTR [ebx-0x7494ceaa],al
  415ea9:	adc    eax,0x7bf13c19
  415eae:	adc    BYTE PTR [ebp+0x5a],dh
  415eb1:	(bad)
  415eb4:	pmuludq mm3,QWORD PTR [ecx+eax*1]
  415eb8:	jae    0x415e5b
  415eba:	cdq    
  415ebb:	fisubr DWORD PTR [eax-0x40]
  415ebe:	push   esi
  415ebf:	das    
  415ec0:	pop    esi
  415ec1:	fimul  WORD PTR [ebx+esi*8-0x58]
  415ec5:	(bad)  
  415ec6:	in     eax,0x4a
  415ec8:	dec    eax
  415ec9:	and    esi,DWORD PTR [ebx+0x223f8d30]
  415ecf:	fdivr  st,st(6)
  415ed2:	push   ebx
  415ed3:	jle    0x415e9e
  415ed5:	push   cs
  415ed6:	data16 rol BYTE PTR [ecx-0x17],0xdd
  415edb:	xchg   esi,eax
  415edc:	or     ebp,esi
  415ede:	sbb    ecx,edx
  415ee0:	fstp   TBYTE PTR [ecx]
  415ee2:	push   ebx
  415ee3:	xchg   esi,eax
  415ee4:	test   DWORD PTR [esi],esi
  415ee6:	xchg   edi,eax
  415ee7:	ins    BYTE PTR es:[edi],dx
  415ee8:	fdiv   st(1),st
  415eea:	cmp    DWORD PTR [eax],edx
  415eec:	jnp    0x415f06
  415eee:	add    edi,DWORD PTR [edi]
  415ef0:	push   es
  415ef1:	out    0x8b,eax
  415ef3:	mov    ebp,0x20321f5a
  415ef8:	jnp    0x415f0e
  415efa:	fnsave [esi+0x2c]
  415efd:	fbstp  TBYTE PTR [ebx]
  415eff:	pushf  
  415f00:	addr16 xchg ecx,eax
  415f02:	mov    edi,0x91da6568
  415f07:	popa   
  415f08:	arpl   WORD PTR [esi+0x64],si
  415f0b:	xchg   ecx,eax
  415f0c:	sub    al,0x7
  415f0e:	(bad)  
  415f0f:	jg     0x415eb3
  415f11:	hlt    
  415f12:	stc    
  415f13:	adc    eax,0xfaff4cd2
  415f18:	mov    db3,esp
  415f1b:	loop   0x415f79
  415f1d:	in     eax,dx
  415f1e:	jl     0x415f94
  415f20:	inc    eax
  415f21:	retf   0x24f2
  415f24:	fs jl  0x415eca
  415f27:	test   BYTE PTR [ebp+edi*1-0x657d9eb6],cl
  415f2e:	fidiv  DWORD PTR gs:[ebx-0x5e6e4fb4]
  415f35:	pop    ebx
  415f36:	dec    ebp
  415f37:	lods   al,BYTE PTR ds:[esi]
  415f38:	push   0xbe9791da
  415f3d:	sub    DWORD PTR [ebx],ecx
  415f3f:	retf   0xe9a3
  415f42:	mov    ?,WORD PTR [esi+0x64f5da95]
  415f48:	ret    
  415f49:	adc    bl,BYTE PTR [edi-0x6e]
  415f4c:	sahf   
  415f4d:	inc    ecx
  415f4e:	retf   
  415f4f:	mov    al,ds:0x5442e134
  415f54:	xchg   esi,eax
  415f55:	mov    dl,0x4d
  415f57:	mov    eax,ds:0xc78d1c96
  415f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f5d:	fld    DWORD PTR ds:0x8bb88b78
  415f63:	lahf   
  415f64:	mov    al,0x9c
  415f66:	cdq    
  415f67:	hlt    
  415f68:	pusha  
  415f69:	jl     0x415ef9
  415f6b:	ja     0x415f65
  415f6d:	mov    al,ds:0x571b7cd8
  415f72:	fwait
  415f73:	iret   
  415f74:	cld    
  415f75:	jmp    0x678c109a
  415f7a:	aas    
  415f7b:	sbb    edx,0x2b064669
  415f81:	fdivr  QWORD PTR [edi+0x1]
  415f84:	jl     0x415f43
  415f86:	mov    esp,DWORD PTR [eax-0x2dde89e8]
  415f8c:	or     DWORD PTR [edi],ebp
  415f8e:	pop    edx
  415f8f:	jmp    0x9d1:0xb407501f
  415f96:	dec    edx
  415f97:	inc    edx
  415f98:	inc    esi
  415f99:	mov    edi,DWORD PTR [ecx]
  415f9b:	fucomi st,st(4)
  415f9d:	xchg   edx,eax
  415f9e:	scas   al,BYTE PTR es:[edi]
  415f9f:	or     dl,BYTE PTR [ebp+edx*8-0x36]
  415fa3:	dec    edi
  415fa4:	dec    esi
  415fa5:	loope  0x415f2b
  415fa7:	das    
  415fa8:	add    al,BYTE PTR [edx]
  415faa:	lock jo 0x416011
  415fad:	push   0x25
  415faf:	sbb    bh,0xe7
  415fb2:	sub    ebp,edi
  415fb4:	or     bl,0x7b
  415fb7:	push   ebx
  415fb8:	inc    edx
  415fb9:	in     eax,0x23
  415fbb:	or     al,0xf3
  415fbd:	jp     0x415fd4
  415fbf:	pop    es
  415fc0:	xchg   ebx,eax
  415fc1:	(bad)  
  415fc2:	push   ecx
  415fc3:	mov    dl,0x14
  415fc5:	pop    es
  415fc6:	dec    edx
  415fc7:	or     esp,DWORD PTR [edi+0x1f896acc]
  415fcd:	test   BYTE PTR [ecx+0x15b60341],bl
  415fd3:	xchg   esi,eax
  415fd4:	pushf  
  415fd5:	jle    0x415fd7
  415fd7:	or     al,BYTE PTR [ebp+eax*8+0x1e]
  415fdb:	xchg   ebp,eax
  415fdc:	push   esi
  415fdd:	mov    eax,0x4e86f22e
  415fe2:	daa    
  415fe3:	ds jns 0x415fce
  415fe6:	retf   
  415fe7:	mov    edi,0x548020d3
  415fec:	jmp    0x416030
  415fee:	or     eax,0xbd3e864a
  415ff3:	mov    eax,0xf4d6a128
  415ff8:	xchg   edi,eax
  415ff9:	or     DWORD PTR [esi-0x5e],eax
  415ffc:	loop   0x415f9b
  415ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fff:	shr    DWORD PTR [edi-0x59],cl
  416002:	push   cs
  416003:	stos   DWORD PTR es:[edi],eax
  416004:	adc    DWORD PTR [ecx-0xe],esi
  416007:	hlt    
  416008:	shl    ch,0x8e
  41600b:	jns    0x416061
  41600d:	out    0x2,ax
  416010:	cmp    eax,0x69dcdff8
  416015:	push   eax
  416016:	dec    ebx
  416017:	cli    
  416018:	rdtsc  
  41601a:	dec    ecx
  41601b:	mov    BYTE PTR ds:0x2bdfc346,dl
  416021:	sub    ebx,DWORD PTR [edi+edx*4-0x58]
  416025:	arpl   WORD PTR [ecx+0x7a],bp
  416028:	push   edx
  416029:	sbb    BYTE PTR [esi+ebp*1+0x3b19b652],al
  416030:	xrelease xchg DWORD PTR [edi+0x65],edi
  416034:	and    eax,0xfd98857e
  416039:	aas    
  41603a:	das    
  41603b:	arpl   bx,bp
  41603d:	cwde   
  41603e:	xchg   esp,eax
  41603f:	mov    eax,ebx
  416041:	or     dl,BYTE PTR [esp+ebp*1]
  416044:	cmc    
  416045:	ja     0x41601d
  416047:	add    dh,ch
  416049:	call   0x1fd3058e
  41604e:	xchg   esi,eax
  41604f:	dec    edx
  416050:	stos   DWORD PTR es:[edi],eax
  416051:	fiadd  DWORD PTR [edx-0x7001965d]
  416057:	mov    DWORD PTR ss:[edi+0x7910df64],ebp
  41605e:	push   edi
  41605f:	sbb    ecx,esi
  416061:	mov    edi,0x3e6fe95
  416066:	push   ds
  416067:	xchg   edi,eax
  416068:	stos   DWORD PTR es:[edi],eax
  416069:	xchg   ebp,eax
  41606a:	jecxz  0x416079
  41606c:	ss dec edi
  41606e:	(bad)  
  41606f:	pop    ds
  416070:	mov    esp,eax
  416072:	dec    ecx
  416073:	xchg   ebx,eax
  416074:	cdq    
  416075:	fidivr DWORD PTR [ebp+0x1be70250]
  41607b:	leave  
  41607c:	test   al,0xa0
  41607e:	xor    al,0xb4
  416080:	js     0x416035
  416082:	jecxz  0x4160a5
  416084:	leave  
  416085:	gs xchg ebp,eax
  416087:	or     bh,bl
  416089:	scas   eax,DWORD PTR es:[edi]
  41608a:	pusha  
  41608b:	fnstsw WORD PTR [ebp-0x36336066]
  416091:	jnp    0x41604f
  416093:	sbb    BYTE PTR [ecx+0x7a],bh
  416096:	mov    ch,BYTE PTR [edi]
  416098:	mov    eax,DWORD PTR [ecx-0x4e]
  41609b:	adc    esi,ecx
  41609d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41609e:	iret   
  41609f:	sbb    al,0xcd
  4160a1:	inc    esi
  4160a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a3:	sbb    al,0x53
  4160a5:	push   0xffffff8b
  4160a7:	test   al,0x30
  4160a9:	jns    0x416061
  4160ab:	xchg   ebx,eax
  4160ac:	dec    edx
  4160ad:	bound  esi,QWORD PTR [esi+0x55]
  4160b0:	inc    edi
  4160b1:	loopne 0x416122
  4160b3:	xchg   edx,eax
  4160b4:	aad    0x39
  4160b6:	cwde   
  4160b7:	(bad)  
  4160b8:	in     al,0xa5
  4160ba:	adc    BYTE PTR [ecx-0x7a],bh
  4160bd:	adc    al,BYTE PTR [eax]
  4160bf:	in     al,0x16
  4160c1:	ret    0x7df7
  4160c4:	push   edx
  4160c5:	adc    al,dl
  4160c7:	shl    DWORD PTR [eax+ebx*4],1
  4160ca:	fisub  WORD PTR [esi-0x4]
  4160cd:	pop    ss
  4160ce:	lods   eax,DWORD PTR ds:[esi]
  4160cf:	and    ebp,eax
  4160d1:	rep ins BYTE PTR es:[edi],dx
  4160d3:	dec    eax
  4160d4:	(bad)  
  4160d5:	mov    esp,0x91f8b6a6
  4160da:	xor    eax,0x80c9196a
  4160df:	jmp    0xee80:0x1a1d91ee
  4160e6:	dec    edi
  4160e7:	mov    eax,0xc54314c6
  4160ec:	lods   al,BYTE PTR ds:[esi]
  4160ed:	mov    esi,DWORD PTR [eax+0x37fab9b8]
  4160f3:	cmp    dl,BYTE PTR [eax]
  4160f5:	adc    al,0x7
  4160f7:	adc    cl,BYTE PTR ds:0xcb4754c2
  4160fd:	in     eax,dx
  4160fe:	or     DWORD PTR [eax+0x4f],esp
  416101:	dec    ebx
  416102:	inc    esi
  416103:	sub    dh,BYTE PTR [ebx+edx*4-0xa]
  416107:	add    BYTE PTR [esi+ebp*4-0x5b296c7e],bh
  41610e:	imul   eax,DWORD PTR [ecx],0xaaec2eba
  416114:	jns    0x4160a5
  416116:	test   al,0xd5
  416118:	mov    ah,0xd5
  41611a:	mov    eax,DWORD PTR [ebx]
  41611c:	sti    
  41611d:	or     DWORD PTR [esi+0x4a4c4e53],ecx
  416123:	ins    DWORD PTR es:[edi],dx
  416124:	fdiv   QWORD PTR [ebp+eiz*1+0xd57be9f]
  41612b:	ret    
  41612c:	test   DWORD PTR [edx],0xcbad75ad
  416132:	(bad)  
  416134:	pop    eax
  416135:	rol    eax,1
  416137:	dec    eax
  416138:	fcmovb st,st(5)
  41613a:	pop    ebx
  41613b:	loopne 0x41619d
  41613d:	sub    al,0x71
  41613f:	sbb    eax,0x2589aaed
  416144:	nop
  416145:	int    0x3a
  416147:	jp     0x41613a
  416149:	nop
  41614a:	daa    
  41614b:	push   ebp
  41614c:	cmp    al,0x2f
  41614e:	cmp    eax,0x5567d58d
  416153:	inc    eax
  416154:	fistp  WORD PTR [ebx]
  416156:	iret   
  416157:	ror    dh,1
  416159:	sahf   
  41615a:	test   DWORD PTR [ebx+esi*2+0x3a],edi
  41615e:	jae    0x416173
  416160:	outs   dx,BYTE PTR ds:[esi]
  416161:	jge    0x4161a4
  416163:	mov    bl,0xbf
  416165:	mov    bl,0xa5
  416167:	fs lahf 
  416169:	scas   eax,DWORD PTR es:[edi]
  41616a:	push   cs
  41616b:	push   eax
  41616c:	lea    ebx,[edi]
  41616e:	in     eax,0xbb
  416170:	gs adc bl,bh
  416173:	imul   edx,DWORD PTR [ebx+0x145c539],0x34
  41617a:	mov    eax,0x156d8365
  41617f:	fyl2x  
  416181:	rcl    BYTE PTR [ebp+eax*2+0x12],0x9b
  416186:	in     eax,dx
  416187:	scas   al,BYTE PTR es:[edi]
  416188:	repnz or al,0x6e
  41618b:	rcl    BYTE PTR [edx-0x18b2ee34],cl
  416191:	mov    esp,0xfcbc0201
  416196:	out    0xe4,al
  416198:	adc    al,0xf3
  41619a:	xor    BYTE PTR [eax],bh
  41619c:	int    0x7c
  41619e:	mov    ds:0xb3f956cd,eax
  4161a3:	add    eax,0xba8c4457
  4161a8:	pop    ss
  4161a9:	cmp    BYTE PTR [eax],ah
  4161ab:	mov    DWORD PTR [ecx],esi
  4161ad:	sub    eax,0xc33e8a6f
  4161b2:	jo     0x416144
  4161b4:	in     al,0x94
  4161b6:	xchg   BYTE PTR [edi+0x7cd2bab9],bl
  4161bc:	mov    ah,0xe1
  4161be:	mov    DWORD PTR [ebp+0x23028d52],esi
  4161c4:	popa   
  4161c5:	daa    
  4161c6:	ds ins BYTE PTR es:[edi],dx
  4161c8:	mov    DWORD PTR [ecx-0x54],ecx
  4161cb:	jp     0x4161c9
  4161cd:	and    al,0x7b
  4161cf:	or     dh,bl
  4161d1:	or     DWORD PTR [eax],eax
  4161d3:	lods   al,BYTE PTR ds:[esi]
  4161d4:	pop    ebp
  4161d5:	leave  
  4161d6:	mov    esp,0x5f86836d
  4161db:	and    eax,0x7abc7062
  4161e0:	jge    0x4161aa
  4161e2:	mov    ?,WORD PTR [esi-0xc0ec2d]
  4161e8:	daa    
  4161e9:	jp     0x416232
  4161eb:	sbb    DWORD PTR [edi-0x40971f31],ebp
  4161f1:	faddp  st(0),st
  4161f3:	mov    ch,cl
  4161f5:	fimul  WORD PTR [edi]
  4161f7:	pop    ss
  4161f8:	gs pop es
  4161fa:	sub    esi,esp
  4161fc:	les    esp,FWORD PTR [ecx]
  4161fe:	mov    ch,0xf2
  416200:	jne    0x4161e4
  416202:	mov    ds:0xee85f64f,eax
  416207:	mov    esp,0x3533b49f
  41620c:	push   edi
  41620d:	rol    DWORD PTR [ecx-0x7ce855a7],0x43
  416214:	dec    ebx
  416215:	jmp    0x665d:0x99bb6adc
  41621c:	jmp    0xef4e:0x60e53157
  416223:	data16 fs jno 0x416252
  416227:	mov    bl,0x2f
  416229:	push   esp
  41622a:	jmp    0xbf1cf99f
  41622f:	and    BYTE PTR [edi-0x6],dl
  416232:	pop    es
  416233:	xchg   edx,eax
  416234:	mov    edi,0x1865221b
  416239:	or     esi,DWORD PTR [ecx]
  41623b:	jne    0x4162a6
  41623d:	dec    ebx
  41623e:	xor    bh,BYTE PTR cs:[edi+0xb97a383]
  416245:	loop   0x416279
  416247:	or     edx,DWORD PTR [ecx+0x51]
  41624a:	adc    BYTE PTR [esi-0x1d6ce13b],al
  416250:	mov    eax,ds:0xf481c3bc
  416255:	fcomi  st,st(0)
  416257:	outs   dx,BYTE PTR ds:[esi]
  416258:	mov    esi,0x85d136be
  41625d:	push   ss
  41625e:	mov    eax,0x2dc5e320
  416263:	push   ebx
  416264:	adc    BYTE PTR [edi+0x9347fea],dh
  41626a:	mov    al,ds:0x39bbf719
  41626f:	int3   
  416270:	jp     0x41626b
  416272:	push   ss
  416273:	jno    0x41620f
  416275:	out    0x5c,al
  416277:	pop    es
  416278:	jno    0x41629e
  41627a:	cmp    al,0xe5
  41627c:	jb     0x4162e8
  41627e:	jae    0x416246
  416280:	inc    esi
  416281:	xchg   DWORD PTR cs:[ebx],edx
  416284:	cmp    esp,DWORD PTR [edi-0x2b]
  416287:	and    bh,BYTE PTR [ebx-0x25]
  41628a:	mov    ah,0x5d
  41628c:	std    
  41628d:	in     eax,0x74
  41628f:	xor    ecx,ebx
  416291:	(bad)  [ebp-0x35211a90]
  416297:	mov    cl,0xda
  416299:	test   ah,cl
  41629b:	jnp    0x416309
  41629d:	adc    eax,0x5ee9bd34
  4162a2:	cmp    eax,0x451b023c
  4162a7:	cmp    ebx,DWORD PTR [eax-0x73]
  4162aa:	jp     0x41626c
  4162ac:	iret   
  4162ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ae:	mov    cl,0xcf
  4162b0:	in     al,dx
  4162b1:	inc    ebx
  4162b2:	aam    0x82
  4162b4:	mov    ch,0xd4
  4162b6:	hlt    
  4162b7:	ret    
  4162b8:	imul   ebp,DWORD PTR [esi],0x3e
  4162bb:	out    dx,al
  4162bc:	push   ss
  4162bd:	mov    edi,0xd13a55f2
  4162c2:	rcl    al,1
  4162c4:	xchg   ebx,eax
  4162c5:	imul   BYTE PTR [esi-0x3b]
  4162c8:	and    bh,BYTE PTR ss:[ebp+0x3c]
  4162cc:	(bad)  
  4162cd:	ret    0x379e
  4162d0:	fbld   TBYTE PTR [ebp+esi*1-0x17]
  4162d4:	push   edi
  4162d5:	shl    DWORD PTR [eax+0x53c4d4],cl
  4162db:	pusha  
  4162dc:	push   esi
  4162dd:	pop    ecx
  4162de:	dec    edx
  4162df:	test   al,0xd7
  4162e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e2:	mov    DWORD PTR ds:0x1c3c69af,esp
  4162e8:	push   es
  4162e9:	sub    BYTE PTR [esi],bl
  4162eb:	push   0x28
  4162ed:	adc    esi,ebx
  4162ef:	ret    0xed8d
  4162f2:	cmc    
  4162f3:	xor    al,0xca
  4162f5:	ins    BYTE PTR es:[edi],dx
  4162f6:	(bad)  
  4162f7:	dec    eax
  4162f8:	jmp    0x5414fe5d
  4162fd:	cwde   
  4162fe:	mov    al,0x98
  416300:	xchg   ecx,eax
  416301:	out    dx,al
  416302:	int    0x4e
  416304:	adc    ch,BYTE PTR [eax-0x21b2febf]
  41630a:	or     al,0x34
  41630c:	outs   dx,DWORD PTR es:[esi]
  41630e:	ffreep st(2)
  416310:	and    esp,DWORD PTR [esi-0x50bad88a]
  416316:	les    ebx,FWORD PTR [ebx+eiz*4]
  416319:	mov    bl,0x69
  41631b:	sti    
  41631c:	sub    DWORD PTR [edi+0x1],0xd851862
  416323:	mov    ebp,edi
  416325:	jmp    0xf65d:0xb043834e
  41632c:	fcomi  st,st(4)
  41632e:	pop    ebx
  41632f:	mov    esi,0x44617327
  416334:	cmp    ebp,DWORD PTR [eax]
  416336:	stos   BYTE PTR es:[edi],al
  416337:	jp     0x41637e
  416339:	les    ecx,FWORD PTR [edi+0x590a4e84]
  41633f:	jg     0x4162dc
  416341:	add    DWORD PTR [ebp-0x3418a16a],esi
  416347:	cmp    al,BYTE PTR [ebp+0x6ff07cad]
  41634d:	daa    
  41634e:	sub    esp,esp
  416350:	jg     0x416315
  416352:	stc    
  416353:	mov    gs,WORD PTR ds:0x1e3e82fb
  416359:	mov    ecx,0xfc3131bd
  41635e:	push   edx
  41635f:	mov    bh,bl
  416361:	inc    esp
  416362:	std    
  416363:	int3   
  416364:	rcl    DWORD PTR [edx-0x43a04e34],0xaa
  41636b:	xchg   BYTE PTR [edx+ecx*8+0x65b25593],cl
  416372:	int    0x9e
  416374:	js     0x41633a
  416376:	aas    
  416377:	pop    ebx
  416378:	repz cmp bl,BYTE PTR [edi+0x5dd5998d]
  41637f:	call   0x6e8285d0
  416384:	lods   al,BYTE PTR ds:[esi]
  416385:	xchg   ecx,eax
  416386:	jns    0x41630f
  416388:	jmp    0x5016a574
  41638d:	sub    esp,ecx
  41638f:	mov    esi,0xa21b338a
  416394:	xchg   esi,eax
  416395:	lea    esp,[eax-0x5a]
  416398:	push   ss
  416399:	retf   
  41639a:	mov    bl,0xab
  41639c:	fisttp WORD PTR ds:0x103ac46b
  4163a2:	inc    eax
  4163a3:	test   edi,edi
  4163a5:	pusha  
  4163a6:	jb     0x41637f
  4163a8:	popf   
  4163a9:	mov    bl,0x57
  4163ab:	xchg   esi,eax
  4163ac:	aas    
  4163ad:	push   es
  4163ae:	push   0x6339b6bd
  4163b3:	in     al,0xe8
  4163b5:	test   eax,0xb7a17a3c
  4163ba:	adc    al,0xb0
  4163bc:	sbb    al,0x8e
  4163be:	inc    eax
  4163bf:	mov    edi,DWORD PTR [esi]
  4163c1:	shr    DWORD PTR [ebp+0x1d],cl
  4163c4:	pop    ebx
  4163c5:	call   0xc861:0xbc0c6c0
  4163cc:	mov    dl,0x86
  4163ce:	sub    esi,eax
  4163d0:	push   ss
  4163d1:	sbb    dl,ch
  4163d3:	cmc    
  4163d4:	jno    0x4163c6
  4163d6:	cld    
  4163d7:	add    ebp,DWORD PTR [esp+esi*4-0x50]
  4163db:	add    edi,esi
  4163dd:	xor    bl,BYTE PTR [ebp-0x4d]
  4163e0:	add    dh,bh
  4163e2:	shr    BYTE PTR [ebx],1
  4163e4:	mov    eax,0xde73ff0d
  4163e9:	mov    cl,0x17
  4163eb:	pushf  
  4163ec:	leave  
  4163ed:	xor    edx,DWORD PTR [ebx+0x425bef37]
  4163f3:	jmp    0x7face513
  4163f8:	cmp    ax,WORD PTR cs:[esi+0x5ff38dce]
  416400:	into   
  416401:	or     BYTE PTR [ecx+eiz*4+0x4c8d777e],bh
  416408:	mov    esi,0x697a9d2b
  41640d:	rcr    BYTE PTR ds:0xbd1caf34,1
  416413:	add    eax,ebx
  416415:	neg    edx
  416417:	ss dec ebx
  416419:	mov    ecx,0x3bf2910
  41641e:	stc    
  41641f:	mov    bh,0x1a
  416421:	sub    edx,edi
  416423:	repz push eax
  416425:	adc    DWORD PTR [ebp-0x359a6436],edx
  41642b:	mov    eax,ds:0x97517ce5
  416430:	jp     0x442a8a80
  416436:	popf   
  416437:	and    dl,BYTE PTR [esi+0x7739b6a6]
  41643d:	or     BYTE PTR [ebx+0x74fd7359],bh
  416443:	repz fucom st(1)
  416446:	outs   dx,DWORD PTR ds:[esi]
  416447:	outs   dx,DWORD PTR ds:[esi]
  416448:	sub    eax,0xa98b9c39
  41644d:	dec    ebx
  41644e:	out    0x18,al
  416450:	or     BYTE PTR [edi],ch
  416452:	test   eax,0xb7732201
  416457:	ds mov esp,0xa3597f6c
  41645d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41645e:	add    BYTE PTR [edi+0x44],dh
  416461:	cmp    al,0xb4
  416463:	sbb    DWORD PTR [ebx+0x78e93d56],esi
  416469:	inc    ebx
  41646a:	cmp    ah,BYTE PTR [eax]
  41646c:	jbe    0x4164a9
  41646e:	lds    esp,FWORD PTR [edi+0x2b794058]
  416474:	jp     0x416467
  416476:	add    eax,0x810d122d
  41647b:	xchg   ebp,eax
  41647c:	dec    edx
  41647d:	xchg   ebp,eax
  41647e:	ror    edx,0x21
  416481:	jmp    0x41649b
  416483:	cdq    
  416484:	lods   al,BYTE PTR ds:[esi]
  416485:	mov    dl,BYTE PTR ds:0xf66c
  41648a:	imul   ebx,DWORD PTR [si+0xf],0xd47c33f8
  416492:	lock or BYTE PTR [ebp+0x29795f24],al
  416499:	pop    ds
  41649a:	es js  0x4164ee
  41649d:	test   DWORD PTR [eax-0x48],edi
  4164a0:	popa   
  4164a1:	mov    cl,0xed
  4164a3:	(bad)  
  4164a4:	lahf   
  4164a5:	xchg   bh,bl
  4164a7:	pusha  
  4164a8:	sar    DWORD PTR [ecx-0x425ea083],0x5a
  4164af:	pop    ds
  4164b0:	sbb    bl,BYTE PTR [ecx+0x47]
  4164b3:	xchg   ebx,eax
  4164b4:	fs push eax
  4164b6:	push   ds
  4164b7:	aas    
  4164b8:	dec    ecx
  4164b9:	lods   al,BYTE PTR ds:[esi]
  4164ba:	dec    edi
  4164bb:	mov    ah,0xd3
  4164bd:	xchg   ebx,eax
  4164be:	xchg   ebx,eax
  4164bf:	mov    edi,0xeef887a1
  4164c4:	xchg   edi,eax
  4164c5:	retf   0x9343
  4164c8:	xor    eax,0xe909fee9
  4164cd:	sbb    eax,0xc5ad4a3c
  4164d2:	pop    ebp
  4164d3:	mov    ebp,DWORD PTR [eiz*4+0x44e48884]
  4164da:	jmp    0x41645d
  4164dc:	in     eax,dx
  4164dd:	dec    edx
  4164de:	jl     0x416486
  4164e0:	mov    dl,0x79
  4164e2:	in     al,0xfa
  4164e4:	mov    ds:0x9b44dace,eax
  4164e9:	ds sti 
  4164eb:	push   0x5375d40b
  4164f0:	icebp  
  4164f1:	mov    edi,0x3933eff1
  4164f6:	jbe    0x41649b
  4164f8:	ja     0x4164e2
  4164fa:	and    DWORD PTR [ebx-0x21c7da62],0x62
  416501:	add    BYTE PTR [ebx+0x34],bl
  416504:	push   edi
  416505:	push   ecx
  416506:	retf   
  416507:	cdq    
  416508:	sbb    BYTE PTR [edx],al
  41650a:	sub    al,0x1d
  41650c:	dec    ebp
  41650d:	adc    BYTE PTR fs:[esi-0x2f620d22],dh
  416514:	test   DWORD PTR [ecx],esp
  416516:	sub    ch,BYTE PTR [ebp-0x44]
  416519:	mov    ecx,0xdf545d5f
  41651e:	fidiv  WORD PTR [edi+eiz*8+0x31c56599]
  416525:	add    ebp,eax
  416527:	jp     0x4164d7
  416529:	dec    eax
  41652a:	lea    esp,[eax]
  41652c:	xchg   edi,eax
  41652d:	retf   
  41652e:	ret    0x7d56
  416531:	adc    bl,BYTE PTR [ecx]
  416533:	pop    ecx
  416534:	mov    ds:0xed06dff7,eax
  416539:	cmp    cl,bl
  41653b:	leave  
  41653c:	add    BYTE PTR [ecx+ebp*1-0x30],dl
  416540:	mov    ecx,0x8fc4de68
  416545:	int3   
  416546:	and    al,0x7a
  416548:	mov    ds:0x63d4383b,al
  41654d:	pushf  
  41654e:	in     eax,dx
  41654f:	int3   
  416550:	int3   
  416551:	cmp    DWORD PTR [ebx+ebx*4-0x8c02733],0x73624e63
  41655c:	add    DWORD PTR [ebx+ecx*4-0x43],ecx
  416560:	fstp   QWORD PTR [ebx]
  416562:	adc    al,0x12
  416564:	mov    ds:0xac9f1432,al
  416569:	clc    
  41656a:	xchg   DWORD PTR [edi-0x4f023f7a],esp
  416570:	test   al,0xf1
  416572:	or     ebp,DWORD PTR [ebp+edx*1+0x15]
  416576:	(bad)  
  416578:	sub    esi,DWORD PTR [eax-0x5c44299]
  41657e:	outs   dx,BYTE PTR ds:[esi]
  41657f:	xchg   esi,eax
  416580:	inc    ecx
  416581:	call   0x8a37:0x93b1cfe9
  416588:	ffreep st(5)
  41658a:	fwait
  41658b:	mov    edi,0xcf927b4b
  416590:	push   ebx
  416591:	jnp    0x4165a2
  416593:	pop    ds
  416594:	mov    WORD PTR [ebp+0x13e9993b],gs
  41659a:	iret   
  41659b:	imul   eax,ecx,0x5b
  41659e:	pop    esp
  41659f:	cmp    BYTE PTR [eax+ebx*8-0x4a],0x27
  4165a4:	mov    ecx,0x6bf902aa
  4165a9:	push   edx
  4165aa:	(bad)  
  4165ab:	(bad)  
  4165ad:	aad    0x76
  4165af:	add    al,0xc3
  4165b1:	mov    eax,ds:0x6aad25f6
  4165b6:	stos   BYTE PTR es:[edi],al
  4165b7:	dec    esp
  4165b8:	xor    BYTE PTR fs:[eax],cl
  4165bb:	jns    0x4165f5
  4165bd:	mov    al,0x71
  4165bf:	mov    WORD PTR [eax+0x75f3958],?
  4165c5:	adc    BYTE PTR [ebx-0x1c],dl
  4165c8:	(bad)  
  4165c9:	(bad)  
  4165ca:	pop    eax
  4165cb:	and    edi,DWORD PTR [esi-0x69]
  4165ce:	fwait
  4165cf:	mov    eax,DWORD PTR [edi+0x2e]
  4165d2:	mov    BYTE PTR [ebx+eiz*1+0x13aea980],dh
  4165d9:	cwde   
  4165da:	add    al,0x88
  4165dc:	jbe    0x4165a5
  4165de:	aad    0xc2
  4165e0:	adc    eax,0x6cce53d5
  4165e5:	das    
  4165e6:	jno    0x4165c7
  4165e8:	push   eax
  4165e9:	inc    ebp
  4165ea:	inc    esi
  4165eb:	push   edi
  4165ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ed:	adc    DWORD PTR [edi+0x33c51b6e],ebx
  4165f3:	dec    ecx
  4165f4:	cli    
  4165f5:	pop    esp
  4165f6:	cmc    
  4165f7:	shl    BYTE PTR [edx],0xb8
  4165fa:	clc    
  4165fb:	cmp    esp,DWORD PTR [edx+0x67]
  4165fe:	mov    ch,0x2e
  416600:	jns    0x4165cc
  416602:	sub    al,0xe7
  416604:	mov    cl,0x59
  416606:	and    eax,0x14f55071
  41660b:	retf   0x2745
  41660e:	pop    ss
  41660f:	mov    DWORD PTR [ecx+edi*8-0x338a369a],esp
  416616:	ins    DWORD PTR es:[edi],dx
  416617:	xlat   BYTE PTR ds:[ebx]
  416618:	push   es
  416619:	iret   
  41661a:	jnp    0x416638
  41661c:	xor    DWORD PTR [ebx+0x4bf4235e],edi
  416622:	cmp    BYTE PTR [ecx-0x66],al
  416625:	xor    eax,0x89cc169b
  41662a:	xchg   BYTE PTR [eax+0x51a70d57],dl
  416630:	icebp  
  416631:	sbb    esi,esi
  416633:	es mov al,0xb6
  416636:	mov    bl,0xa7
  416638:	(bad)  
  41663a:	rcr    DWORD PTR [ebp+ecx*4+0x1b30be66],1
  416641:	in     al,0x8a
  416643:	jp     0x41661d
  416645:	cmc    
  416646:	fdivr  QWORD PTR [ebx+edx*1-0x66]
  41664a:	icebp  
  41664b:	dec    ebx
  41664c:	std    
  41664d:	push   ebp
  41664e:	xchg   ebx,eax
  41664f:	dec    edi
  416650:	stc    
  416651:	fist   DWORD PTR [eax+0x1f6955cd]
  416657:	pushf  
  416658:	ret    0xfdd8
  41665b:	xchg   edx,eax
  41665c:	push   ebx
  41665d:	mov    al,0x8a
  41665f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416660:	scas   al,BYTE PTR es:[edi]
  416661:	xchg   BYTE PTR [edi-0x22],ch
  416664:	xchg   esi,eax
  416665:	add    edi,ebx
  416667:	imul   eax,DWORD PTR [esi+0x643c1ada],0xffffffea
  41666e:	add    eax,0x3b647a82
  416673:	in     al,dx
  416674:	jmp    0x247e720a
  416679:	cmp    edi,edx
  41667b:	lods   eax,DWORD PTR ds:[esi]
  41667c:	mov    al,0x9a
  41667e:	jo     0x416654
  416680:	add    DWORD PTR [ebx-0x77c5787c],ecx
  416686:	or     eax,0x261d9e73
  41668b:	ins    DWORD PTR es:[edi],dx
  41668c:	and    al,0x31
  41668f:	dec    esp
  416690:	cmc    
  416691:	ret    0xdf69
  416694:	push   ebx
  416695:	cmp    DWORD PTR [edx],ebx
  416697:	retf   
  416698:	aad    0xe6
  41669a:	mov    DWORD PTR [ebp+0x57],ebx
  41669d:	cld    
  41669e:	jge    0x41663f
  4166a0:	or     al,0xbf
  4166a2:	ror    ch,0xce
  4166a5:	mov    ds:0x54c1e7f6,al
  4166aa:	push   0xe59a3178
  4166af:	or     eax,0x1532553
  4166b4:	xlat   BYTE PTR ds:[ebx]
  4166b5:	int3   
  4166b6:	icebp  
  4166b7:	jg     0x416733
  4166b9:	jge    0x4166d8
  4166bb:	dec    edi
  4166bc:	dec    BYTE PTR ds:0x7af857a1
  4166c2:	out    0x0,al
  4166c4:	push   cs
  4166c5:	add    eax,0x7bbd713
  4166ca:	fcom   st(5)
  4166cc:	xor    bl,BYTE PTR [ebx+0x577cb7d6]
  4166d2:	cmp    DWORD PTR [esi-0x30804d34],ebp
  4166d8:	add    DWORD PTR [eax],ebx
  4166da:	(bad)  
  4166db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166dc:	mov    ecx,DWORD PTR [edx+ebx*2-0x77]
  4166e0:	add    esp,edi
  4166e2:	rol    DWORD PTR [ebp-0x4a],cl
  4166e5:	ret    0x22bb
  4166e8:	mov    eax,gs
  4166ea:	adc    bl,BYTE PTR [ecx-0x6]
  4166ed:	icebp  
  4166ee:	jns    0x41667d
  4166f0:	jne    0x4166c7
  4166f2:	xchg   DWORD PTR [ebx],edi
  4166f4:	xchg   esp,eax
  4166f5:	data16 icebp 
  4166f7:	xchg   edi,ecx
  4166f9:	add    ch,BYTE PTR [ebp-0x50]
  4166fc:	mov    bl,0xfa
  4166fe:	add    eax,edx
  416700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416701:	push   eax
  416702:	jmp    0x948d7491
  416707:	(bad)  
  416708:	clc    
  416709:	out    0x96,eax
  41670b:	or     BYTE PTR [esi-0x68],bl
  41670e:	mov    ecx,0x339d1654
  416713:	jno    0x416753
  416715:	lods   al,BYTE PTR ds:[esi]
  416716:	inc    ebp
  416717:	dec    esp
  416718:	mov    al,0xa0
  41671a:	dec    edi
  41671b:	imul   DWORD PTR [ebp+0x11]
  41671e:	loope  0x416720
  416720:	es jle 0x416706
  416723:	addr16 enter 0xb520,0xb
  416728:	mov    BYTE PTR [ebx+0x45ba344c],0x3a
  41672f:	xor    al,0x5c
  416731:	retf   
  416732:	rol    BYTE PTR [ebp+0x50],cl
  416735:	aas    
  416736:	jle    0xff0e4c92
  41673c:	push   cs
  41673d:	sbb    BYTE PTR [esi-0x1c34b046],bh
  416743:	xchg   esp,eax
  416744:	sub    eax,DWORD PTR [edi+0x5d]
  416747:	push   cs
  416748:	in     al,0xc2
  41674a:	xchg   esp,eax
  41674b:	test   BYTE PTR [edx-0x468fa219],bh
  416751:	jmp    0x7990:0xf63ceb1c
  416758:	sub    bh,dh
  41675a:	adc    bh,bh
  41675c:	(bad)  
  41675d:	in     eax,0x52
  41675f:	dec    ebp
  416760:	jns    0x4166e6
  416762:	inc    eax
  416763:	and    BYTE PTR [edi-0x9],bh
  416766:	sahf   
  416767:	add    al,0x33
  416769:	sahf   
  41676a:	mov    bh,0xb2
  41676c:	shl    BYTE PTR [esi],0xad
  41676f:	pop    ebx
  416770:	and    BYTE PTR [esi+edx*1],dh
  416773:	mov    ecx,0x9e7147c1
  416778:	enter  0x95ba,0x21
  41677c:	adc    al,0x45
  41677e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41677f:	fwait
  416780:	dec    eax
  416781:	scas   eax,DWORD PTR es:[edi]
  416782:	iret   
  416783:	idiv   BYTE PTR [ebp+0x40]
  416786:	gs jb  0x4167cd
  416789:	inc    ebx
  41678a:	iret   
  41678b:	imul   eax,DWORD PTR [eax],0x31
  41678e:	mov    edx,0x5fbe2433
  416793:	imul   esp,DWORD PTR [ecx+0x5e],0xffffffef
  416797:	xchg   esi,eax
  416798:	ins    BYTE PTR es:[edi],dx
  416799:	stos   DWORD PTR es:[edi],eax
  41679a:	sub    eax,0x5b14e0e2
  41679f:	pop    ds
  4167a0:	cmp    DWORD PTR [ebx],esp
  4167a2:	dec    esi
  4167a3:	std    
  4167a4:	call   0x5afa4163
  4167a9:	int    0x57
  4167ab:	push   ebx
  4167ac:	(bad)  
  4167ad:	into   
  4167ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167af:	mov    edi,0xeeed6369
  4167b4:	fstp   TBYTE PTR [eax]
  4167b6:	shl    DWORD PTR [ebp+0x8],cl
  4167b9:	add    eax,ebp
  4167bb:	push   esp
  4167bc:	xor    BYTE PTR [esi],dl
  4167be:	jb     0x41681f
  4167c0:	pop    esi
  4167c1:	inc    esp
  4167c2:	jle    0x4167bc
  4167c4:	push   0x2bdc8397
  4167c9:	iret   
  4167ca:	aam    0xcd
  4167cc:	sbb    BYTE PTR [esi-0x18e51b4],bl
  4167d2:	push   edi
  4167d3:	mov    edx,0x48940ed4
  4167d8:	adc    BYTE PTR [ecx],ah
  4167da:	or     eax,0xd94fd7c9
  4167df:	cmp    DWORD PTR [ebp+0x6e],esp
  4167e2:	stos   BYTE PTR es:[edi],al
  4167e3:	jg     0x4167b9
  4167e5:	inc    ecx
  4167e6:	mov    ebx,0xe503e2a9
  4167eb:	jmp    0x5079581f
  4167f0:	and    DWORD PTR [edi-0x40],ebp
  4167f3:	inc    ecx
  4167f4:	sahf   
  4167f5:	outs   dx,BYTE PTR ds:[esi]
  4167f6:	cld    
  4167f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f8:	mov    bh,0x2c
  4167fa:	pop    ebx
  4167fb:	mov    esi,0x209df82e
  416800:	inc    edx
  416801:	xor    DWORD PTR [edi-0x37],esp
  416804:	adc    ah,BYTE PTR [edx-0x112a72b9]
  41680a:	add    edi,DWORD PTR [ecx-0x15]
  41680d:	mov    dl,0x2a
  41680f:	adc    BYTE PTR [ebx-0x46],bh
  416812:	mov    dh,0xa4
  416814:	imul   ecx,esi,0xb10a1053
  41681a:	or     dl,ah
  41681c:	cmp    edx,DWORD PTR [edi]
  41681e:	push   0xfa7df971
  416823:	push   ss
  416824:	jg     0x416859
  416826:	test   BYTE PTR [eax],ah
  416828:	shl    DWORD PTR [ebx],cl
  41682a:	sbb    DWORD PTR [esi],esi
  41682c:	jle    0x4167de
  41682e:	pop    ds
  41682f:	and    al,0x7c
  416831:	pop    es
  416832:	test   al,0x7b
  416834:	cmp    al,0x82
  416836:	sub    al,0x90
  416838:	cs mov al,0x3a
  41683b:	sub    bl,ah
  41683d:	lods   al,BYTE PTR ds:[esi]
  41683e:	push   esi
  416840:	push   0xfffffff4
  416842:	mov    fs,WORD PTR [esi+0x65]
  416845:	fsub   QWORD PTR [edi+edi*2-0x7b97b2aa]
  41684c:	inc    eax
  41684d:	cmp    DWORD PTR ds:0x1d7b0dab,ecx
  416853:	and    edx,DWORD PTR [ebx+edx*8]
  416856:	push   0xffffff83
  416858:	pop    ds
  416859:	fs (bad) 
  41685b:	cmp    eax,0x97961634
  416860:	xchg   DWORD PTR [ebp+ecx*4-0x31],ecx
  416864:	jp     0x4167e8
  416866:	fnstcw WORD PTR [esp+esi*4-0x5d]
  41686a:	mov    BYTE PTR [edx+0x51],ah
  41686d:	mov    ds:0xba44e8cb,al
  416872:	fmul   DWORD PTR [edi]
  416874:	out    dx,eax
  416875:	pop    esp
  416876:	dec    esi
  416877:	imul   ebx,DWORD PTR [edi-0x5cd3ac75],0x53168736
  416881:	xchg   edx,eax
  416882:	repnz in al,dx
  416884:	ficom  DWORD PTR [ebx]
  416886:	(bad)  
  416887:	popf   
  416888:	xchg   BYTE PTR [eax-0x11],bl
  41688b:	out    0x72,al
  41688d:	xor    ch,cl
  41688f:	cs std 
  416891:	leave  
  416892:	jns    0x416901
  416894:	and    al,0xb6
  416896:	cli    
  416897:	adc    esp,ecx
  416899:	ins    DWORD PTR es:[edi],dx
  41689a:	fwait
  41689b:	xchg   edi,eax
  41689c:	mov    al,BYTE PTR [eax]
  41689e:	xlat   BYTE PTR ds:[ebx]
  41689f:	clc    
  4168a0:	mov    eax,esp
  4168a2:	or     al,0x7d
  4168a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168a5:	loop   0x416851
  4168a7:	inc    esp
  4168a8:	and    dl,al
  4168aa:	shl    dh,cl
  4168ac:	add    eax,0x64a69b4f
  4168b1:	fldcw  WORD PTR [eax]
  4168b3:	and    DWORD PTR [ecx],esi
  4168b5:	inc    ebp
  4168b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168b7:	mov    ebp,0xf947ba19
  4168bc:	shl    al,cl
  4168be:	pop    edi
  4168bf:	clc    
  4168c0:	call   0x9fa34ae6
  4168c5:	das    
  4168c6:	in     eax,dx
  4168c7:	test   eax,0x2077824
  4168cc:	out    0xf0,eax
  4168ce:	jg     0x4168fe
  4168d0:	nop
  4168d1:	ror    BYTE PTR [edi+edx*2+0xfadba74],0xd1
  4168d9:	in     al,0x15
  4168db:	and    ecx,edi
  4168dd:	sbb    eax,0xe4381b14
  4168e2:	call   0xf02:0x56158fb2
  4168e9:	mov    ch,0xa5
  4168eb:	outs   dx,DWORD PTR ds:[esi]
  4168ec:	test   DWORD PTR [ebp-0x399066],ebx
  4168f2:	cmp    al,0xde
  4168f4:	sbb    al,0x63
  4168f6:	mov    edx,0xad3aeb40
  4168fb:	push   cs
  4168fc:	jecxz  0x4168ca
  4168fe:	in     eax,dx
  4168ff:	mov    ah,0xc6
  416901:	repnz cmp esi,DWORD PTR [ebx]
  416904:	and    BYTE PTR [esi-0x4],dl
  416907:	test   DWORD PTR [ebx-0x5f],0x31fe2572
  41690e:	outs   dx,DWORD PTR ds:[esi]
  41690f:	repz les ebp,FWORD PTR [edi-0x55e92688]
  416916:	ficom  DWORD PTR [ebp-0x20c0f4d9]
  41691c:	mov    ecx,0xd88d1c50
  416921:	leave  
  416922:	mov    cl,0x61
  416924:	mov    ebx,0xc6f220d6
  416929:	jmp    DWORD PTR [bp+di]
  41692c:	dec    edi
  41692d:	add    al,BYTE PTR [esp+esi*1-0x35f38c7c]
  416934:	std    
  416935:	into   
  416936:	stc    
  416937:	pop    ss
  416938:	mov    dl,0xad
  41693a:	stos   DWORD PTR es:[edi],eax
  41693b:	dec    esp
  41693c:	call   0xa294:0x60b9172
  416943:	push   eax
  416944:	lds    edx,FWORD PTR [ecx+0x3f]
  416947:	(bad)  
  416948:	and    DWORD PTR [esi+0x601c91f9],esi
  41694e:	inc    ebx
  41694f:	ss jbe 0x41694b
  416952:	mov    ds:0x19c5a3dd,al
  416957:	push   esi
  416958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416959:	sbb    eax,0xb250a9da
  41695e:	into   
  41695f:	and    al,0x33
  416961:	daa    
  416962:	fwait
  416963:	adc    al,0xf7
  416965:	xor    DWORD PTR [esi+0xfd88c8d],edx
  41696b:	or     al,0x97
  41696d:	mov    eax,0x649d628f
  416972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416973:	sbb    eax,0x171f2bfc
  416978:	popf   
  416979:	mov    bh,0xe2
  41697b:	in     al,dx
  41697c:	test   eax,0x3a7c2d77
  416981:	out    dx,eax
  416982:	inc    esi
  416983:	fiadd  DWORD PTR [ebp+0x3810afe1]
  416989:	pop    ebx
  41698a:	int3   
  41698b:	sti    
  41698c:	push   es
  41698d:	(bad)  
  41698e:	popf   
  41698f:	(bad)
  416992:	popa   
  416993:	lea    ebx,[edx+ebx*8+0x702bce43]
  41699a:	mov    ecx,0xddb1e4e5
  41699f:	sbb    BYTE PTR [esi-0x16],bh
  4169a2:	sar    BYTE PTR [esi+0x68],1
  4169a5:	fldenv [ebp+0xceec2c7]
  4169ab:	mov    dh,0x4f
  4169ad:	(bad)  
  4169ae:	jmp    esi
  4169b0:	frstor [ecx-0x511bf840]
  4169b6:	push   esi
  4169b7:	pop    edx
  4169b8:	dec    edi
  4169b9:	outs   dx,DWORD PTR ds:[esi]
  4169ba:	dec    ecx
  4169bb:	push   esp
  4169bc:	push   esp
  4169bd:	or     eax,0x86e11d8a
  4169c2:	add    BYTE PTR [edi+0x5bc2346c],dh
  4169c8:	ins    DWORD PTR es:[edi],dx
  4169c9:	xor    DWORD PTR ds:0x9004632f,0x47
  4169d0:	cmp    BYTE PTR [esi-0x68182a4f],bh
  4169d6:	pop    edi
  4169d7:	aad    0xd3
  4169d9:	mov    al,0x39
  4169db:	test   BYTE PTR [ebx],ch
  4169dd:	mov    ah,0x2
  4169df:	jae    0x416a31
  4169e1:	mov    al,0xf2
  4169e3:	jmp    0x9757:0x24d694bb
  4169ea:	mov    ch,0x60
  4169ec:	xchg   BYTE PTR fs:[ecx+0x6fbb7009],ah
  4169f3:	ret    0x246
  4169f6:	mov    bl,0x40
  4169f8:	ds xor ebx,ecx
  4169fb:	jle    0x416a0b
  4169fd:	jg     0x41699c
  4169ff:	inc    ecx
  416a00:	mov    eax,ds:0x6cad680e
  416a05:	adc    BYTE PTR [edx+ebx*4-0x22],bl
  416a09:	pop    eax
  416a0a:	xchg   ebp,eax
  416a0b:	jmp    0xded6b09
  416a10:	jae    0x416a56
  416a12:	outs   dx,BYTE PTR ds:[esi]
  416a13:	(bad)  
  416a14:	mov    ch,0xd4
  416a16:	(bad)  
  416a17:	pop    ebp
  416a18:	dec    DWORD PTR [edx]
  416a1a:	and    al,0x6a
  416a1c:	pop    edx
  416a1d:	cmp    eax,DWORD PTR [ebp+0x72]
  416a20:	push   es
  416a21:	in     al,0x43
  416a23:	push   eax
  416a24:	and    al,0x6d
  416a26:	cmp    DWORD PTR [esi+0x5a],ecx
  416a29:	xor    DWORD PTR [ecx-0x3b2257a1],ebx
  416a2f:	sub    BYTE PTR [ebx+0x16],0x1f
  416a33:	mov    edi,DWORD PTR ds:0xd89538
  416a39:	dec    edx
  416a3a:	shl    BYTE PTR [ebp-0x3204de33],1
  416a40:	adc    ah,BYTE PTR [ecx]
  416a42:	cdq    
  416a43:	jecxz  0x416a04
  416a45:	and    eax,0x83c70b54
  416a4a:	mov    ds:0xf9a56ecb,al
  416a4f:	mov    cl,0x1
  416a51:	ss hlt 
  416a53:	xchg   edx,eax
  416a54:	or     al,0x94
  416a56:	mov    edi,0x1a978953
  416a5b:	jg     0x416a79
  416a5d:	push   ebx
  416a5e:	xchg   edx,eax
  416a5f:	sbb    bl,ch
  416a61:	inc    ebp
  416a62:	jo     0x416a19
  416a64:	pop    esp
  416a65:	ins    DWORD PTR es:[edi],dx
  416a66:	ins    DWORD PTR es:[edi],dx
  416a67:	pop    edi
  416a68:	daa    
  416a69:	and    BYTE PTR [ecx+0x53],0x67
  416a6d:	and    ah,0x2f
  416a70:	jmp    0x498cd058
  416a75:	ja     0x416a26
  416a77:	pop    ss
  416a78:	imul   esp,esp,0xc69675db
  416a7e:	lock test eax,0x85c17098
  416a84:	jge    0x416ab6
  416a86:	pop    edx
  416a87:	rcr    DWORD PTR [edx+0x4d2b8d38],1
  416a8d:	xchg   ebp,esi
  416a8f:	mov    dl,0x39
  416a91:	and    esi,ecx
  416a93:	fild   DWORD PTR [ebx+0x7b]
  416a96:	out    dx,eax
  416a97:	xor    ebx,DWORD PTR [ecx-0x46]
  416a9a:	fist   WORD PTR [esi-0x1928940d]
  416aa0:	(bad)  
  416aa2:	cmp    ecx,DWORD PTR [ebp-0x43]
  416aa5:	or     cl,BYTE PTR [ebx+0x9152381]
  416aab:	dec    edi
  416aac:	lock push cs
  416aae:	stos   BYTE PTR es:[edi],al
  416aaf:	xor    dl,al
  416ab1:	nop
  416ab2:	out    dx,al
  416ab3:	stc    
  416ab4:	mov    esp,0x388bdc00
  416ab9:	jae    0x416b15
  416abb:	mov    ds:0xdf1cbb84,eax
  416ac0:	out    dx,eax
  416ac1:	ror    DWORD PTR [esi+0x764f2faa],1
  416ac7:	lea    edi,[esi]
  416ac9:	in     eax,dx
  416aca:	mov    edx,0xcf5d8f1b
  416acf:	arpl   WORD PTR [eax],bx
  416ad1:	(bad)
  416ad5:	popf   
  416ad6:	ds inc ebp
  416ad8:	lods   al,BYTE PTR ds:[esi]
  416ad9:	shl    ah,cl
  416adb:	imul   edi,DWORD PTR [esi-0x559027df],0x5c470ab6
  416ae5:	mov    dl,0x87
  416ae7:	mov    ebx,0xf67e7104
  416aec:	inc    edx
  416aed:	or     dh,BYTE PTR [edi+0x191336c3]
  416af3:	int3   
  416af4:	jnp    0x416b47
  416af6:	(bad)  
  416af7:	or     al,0xd8
  416af9:	and    al,0xff
  416afb:	daa    
  416afc:	mov    ebx,0xf38b0aff
  416b01:	nop
  416b02:	(bad)  
  416b03:	pop    ebx
  416b04:	mov    al,ds:0xfb184361
  416b09:	cmc    
  416b0a:	mov    cl,0xcd
  416b0c:	aaa    
  416b0d:	shr    DWORD PTR [ebp-0x55],cl
  416b10:	and    ah,dl
  416b12:	sbb    eax,0x36d20808
  416b17:	xor    al,0x6e
  416b19:	repnz jmp 0xd4b8:0x5e09a38d
  416b21:	loopne 0x416afe
  416b23:	mov    cl,0x56
  416b25:	push   edx
  416b26:	mov    dh,0xca
  416b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b29:	jecxz  0x416b8a
  416b2b:	daa    
  416b2c:	jns    0x416ad2
  416b2e:	or     eax,0x78526f98
  416b33:	fbld   TBYTE PTR [eax+0x73]
  416b36:	add    ah,BYTE PTR [edx+0x14]
  416b39:	add    eax,0x7563a875
  416b3e:	jne    0x416b50
  416b40:	inc    eax
  416b41:	pop    edx
  416b42:	jae    0x416b4f
  416b44:	rol    edx,0x88
  416b47:	jno    0x416bae
  416b49:	cmp    eax,0xdbeaddd9
  416b4e:	out    0x6e,al
  416b50:	repnz push esp
  416b52:	(bad)  
  416b53:	fisubr DWORD PTR [esi+0x3ca201da]
  416b59:	mov    ecx,0x318a5269
  416b5e:	lds    ebp,FWORD PTR [ebp-0x3eedc980]
  416b64:	pop    ebp
  416b65:	sub    eax,0x23792222
  416b6a:	pop    ds
  416b6b:	pop    es
  416b6c:	mov    DWORD PTR [ecx+0x3c],ebp
  416b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b70:	sbb    edx,DWORD PTR [eax]
  416b72:	xor    DWORD PTR [esi+0x4e],ecx
  416b75:	arpl   WORD PTR [eax+0x16562d4d],ax
  416b7b:	push   ss
  416b7c:	cmp    esp,esi
  416b7e:	lahf   
  416b7f:	pop    ebx
  416b80:	mov    esi,DWORD PTR [edx+ebx*8]
  416b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b84:	not    DWORD PTR [eax-0x9]
  416b87:	rol    BYTE PTR [edi+0x39],1
  416b8a:	pop    ebx
  416b8b:	mov    esi,0x751043b7
  416b90:	mov    ch,0xa6
  416b92:	mov    esp,0x85424ef9
  416b97:	stc    
  416b98:	out    0xbc,al
  416b9a:	jne    0x416c0c
  416b9c:	aam    0x44
  416b9e:	jb     0x416b2a
  416ba0:	aaa    
  416ba1:	and    DWORD PTR [edi],esi
  416ba3:	jle    0x416bf9
  416ba5:	mov    al,0xb1
  416ba7:	xor    DWORD PTR [ecx-0x64],0x59
  416bab:	outs   dx,DWORD PTR ds:[esi]
  416bad:	fidiv  DWORD PTR [edx]
  416baf:	mov    cl,0x38
  416bb1:	push   ebp
  416bb2:	jg     0x416c1d
  416bb4:	xchg   esp,eax
  416bb5:	fsubr  QWORD PTR [ecx-0x62a75739]
  416bbb:	lock inc ebp
  416bbe:	mov    ah,0x8e
  416bc0:	mov    ds:0x41967b44,eax
  416bc5:	sar    BYTE PTR [edx],cl
  416bc7:	fwait
  416bc8:	loop   0x416c27
  416bca:	popf   
  416bcb:	das    
  416bcc:	sub    ebp,DWORD PTR [edx]
  416bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bcf:	add    eax,0x657e2af6
  416bd4:	test   al,0x6d
  416bd6:	loop   0x416bfd
  416bd8:	pop    esp
  416bd9:	add    BYTE PTR [esi+edx*2],0x85
  416bdd:	sbb    al,0xc8
  416bdf:	push   ebp
  416be0:	je     0x416c60
  416be2:	xor    eax,0x49e1aade
  416be7:	mov    dl,0x9a
  416be9:	mov    ch,0x80
  416beb:	and    eax,0x3ef90f30
  416bf0:	(bad)  
  416bf1:	clc    
  416bf2:	retf   
  416bf3:	shl    BYTE PTR ds:0xe27b196d,cl
  416bf9:	mov    BYTE PTR [ebp-0x2d],dh
  416bfc:	dec    eax
  416bfd:	ins    BYTE PTR es:[edi],dx
  416bfe:	pop    esi
  416bff:	ss popf 
  416c01:	jbe    0x416c11
  416c03:	das    
  416c04:	mov    ebp,0x588c4466
  416c09:	arpl   WORD PTR [edi-0x19],bp
  416c0c:	inc    eax
  416c0d:	mov    gs,WORD PTR [ecx-0x1c]
  416c10:	sbb    eax,0xc5b22c31
  416c15:	add    DWORD PTR [ebp-0x12b68937],0xf7d2fc91
  416c1f:	inc    esp
  416c20:	mov    ah,0x4
  416c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c23:	or     BYTE PTR [ebx+ebp*8],ch
  416c26:	pop    DWORD PTR [ebx+0x24]
  416c29:	jns    0x416c9d
  416c2b:	jo     0x416ca8
  416c2d:	call   0x167c679a
  416c32:	inc    esi
  416c33:	inc    ebx
  416c34:	dec    ebp
  416c35:	cmp    ah,BYTE PTR [esi+0x7b]
  416c38:	cmp    DWORD PTR gs:[edx+0x78],edi
  416c3c:	pop    esi
  416c3d:	pop    edx
  416c3e:	aaa    
  416c3f:	mov    ebx,0x8ba13c9f
  416c44:	adc    DWORD PTR [edx-0x4386db41],eax
  416c4a:	push   esi
  416c4b:	ror    ebx,1
  416c4d:	std    
  416c4e:	pop    eax
  416c4f:	xor    cl,bh
  416c51:	ja     0x416bdf
  416c53:	lods   al,BYTE PTR ds:[esi]
  416c54:	push   es
  416c55:	xchg   ebp,eax
  416c56:	jecxz  0x416bfd
  416c58:	mov    eax,0xa23d072
  416c5d:	push   eax
  416c5e:	dec    ecx
  416c5f:	mov    cl,0xf7
  416c61:	mov    ds:0xb63c6f2,al
  416c66:	retf   
  416c67:	in     al,dx
  416c68:	mov    ah,0xe7
  416c6a:	stos   DWORD PTR es:[edi],eax
  416c6b:	arpl   WORD PTR [ebp-0x706f4a60],ax
  416c71:	jno    0x416c7d
  416c73:	or     DWORD PTR [ebx+0x29],eax
  416c76:	or     DWORD PTR [ecx-0x10e19736],esi
  416c7c:	das    
  416c7d:	xchg   esi,eax
  416c7e:	fwait
  416c7f:	loope  0x416c65
  416c81:	outs   dx,DWORD PTR ds:[esi]
  416c82:	xor    al,0x86
  416c84:	pop    eax
  416c85:	add    dh,cl
  416c87:	cli    
  416c88:	xchg   edx,eax
  416c89:	add    dh,BYTE PTR [eax-0xe]
  416c8c:	sub    DWORD PTR [esi+0x7b],esi
  416c8f:	xchg   edx,eax
  416c90:	(bad)  
  416c91:	adc    cl,dh
  416c93:	mov    dh,0x46
  416c95:	jne    0x416c59
  416c97:	out    dx,al
  416c98:	dec    ecx
  416c99:	and    BYTE PTR [ebp+0x59],al
  416c9c:	mov    esi,0x21cb47d2
  416ca1:	sbb    BYTE PTR [ecx+0x68054f8],0x46
  416ca8:	fisttp DWORD PTR [ecx-0x971bcbf]
  416cae:	int    0xd6
  416cb0:	mov    eax,0xbc3a04d2
  416cb5:	scas   al,BYTE PTR es:[edi]
  416cb6:	fadd   st,st(3)
  416cb8:	pop    ds
  416cb9:	pushf  
  416cba:	xchg   ebp,eax
  416cbb:	push   ebx
  416cbc:	and    DWORD PTR [ebx],ebp
  416cbe:	dec    edx
  416cbf:	test   bl,0x7e
  416cc2:	cmp    al,0xfa
  416cc4:	clc    
  416cc5:	sub    ch,BYTE PTR [ecx]
  416cc7:	push   edi
  416cc8:	int    0xd9
  416cca:	repnz shr DWORD PTR [eax+0x4d],1
  416cce:	pusha  
  416ccf:	js     0x416d24
  416cd1:	sub    edx,esi
  416cd3:	jmp    0x3f5129d
  416cd8:	test   DWORD PTR [ecx],ecx
  416cda:	adc    ch,BYTE PTR [ecx]
  416cdc:	test   ebx,ecx
  416cde:	cli    
  416cdf:	es hlt 
  416ce1:	mov    es,WORD PTR [eax+0x26]
  416ce4:	xchg   BYTE PTR [esi+0x1ba02928],bh
  416cea:	sub    al,0xcc
  416cec:	mov    ch,0x4f
  416cee:	repnz cld 
  416cf0:	out    0x97,al
  416cf2:	or     bh,BYTE PTR [eax+0x67]
  416cf5:	cwde   
  416cf6:	(bad)  
  416cf7:	mov    al,ds:0xc3efd6e7
  416cfc:	lods   al,BYTE PTR ds:[esi]
  416cfd:	mov    cs,WORD PTR [esi-0x6372ea34]
  416d03:	mov    dl,0x75
  416d05:	sbb    cl,BYTE PTR [esi-0x41236235]
  416d0b:	push   ebp
  416d0c:	aam    0x18
  416d0e:	sub    DWORD PTR [ebx],esp
  416d10:	stos   BYTE PTR es:[edi],al
  416d11:	(bad)
  416d15:	xchg   ebp,eax
  416d16:	and    ebx,edx
  416d18:	add    al,0x24
  416d1a:	adc    BYTE PTR [ebx+0x17],ch
  416d1d:	bound  ecx,QWORD PTR [ecx-0x61]
  416d20:	call   0xa5970b59
  416d25:	mov    al,0x2a
  416d27:	sti    
  416d28:	jge    0x416ce4
  416d2a:	mov    ds:0x1f4b77ff,eax
  416d2f:	nop
  416d30:	pop    edi
  416d31:	cmp    eax,0xbb4109ce
  416d36:	call   0xe5a86574
  416d3b:	repnz adc ebp,esp
  416d3e:	aas    
  416d3f:	xor    DWORD PTR [edi+0x5788dc8f],edi
  416d45:	xchg   esp,eax
  416d46:	inc    ebx
  416d47:	ins    DWORD PTR es:[edi],dx
  416d48:	pusha  
  416d49:	and    ah,BYTE PTR [edi+0x57b6a466]
  416d4f:	sbb    edx,DWORD PTR [esi-0x7136e780]
  416d55:	sahf   
  416d56:	retf   0xd666
  416d59:	mov    bh,0x91
  416d5b:	pop    esi
  416d5c:	jg     0x416d28
  416d5e:	je     0x416d09
  416d60:	mov    ecx,0x363b893f
  416d65:	pop    ss
  416d66:	out    0x6a,eax
  416d68:	inc    esp
  416d69:	in     eax,0x4
  416d6b:	jb     0x416da6
  416d6d:	or     DWORD PTR [ebp+0x5c],ecx
  416d70:	test   DWORD PTR [ecx+0x5d],edi
  416d73:	out    0xb8,eax
  416d75:	mov    eax,0xfba6d3b6
  416d7a:	pop    eax
  416d7b:	pop    edi
  416d7c:	mov    BYTE PTR [eax+0x39],ah
  416d7f:	jb     0x416db3
  416d81:	into   
  416d82:	push   DWORD PTR ds:0x7164361f
  416d88:	outs   dx,DWORD PTR ds:[esi]
  416d89:	pop    ecx
  416d8a:	in     al,0xb1
  416d8c:	or     DWORD PTR ds:0x2e29c179,edi
  416d92:	pop    ss
  416d93:	push   edx
  416d94:	pop    eax
  416d95:	mov    bh,BYTE PTR [esi+0x605628bf]
  416d9b:	dec    esp
  416d9c:	or     DWORD PTR [edi+ecx*1],0xffffff97
  416da0:	add    eax,0x2ff6bfd3
  416da5:	cmp    al,0x16
  416da7:	push   ebx
  416da8:	push   cs
  416da9:	pop    esp
  416daa:	jmp    0x6abba139
  416daf:	sub    ah,dh
  416db1:	das    
  416db2:	xor    eax,ebp
  416db4:	in     al,dx
  416db5:	pop    esp
  416db6:	ins    BYTE PTR es:[edi],dx
  416db7:	mov    ds:0xd56d732e,eax
  416dbc:	aam    0x57
  416dbe:	pop    ebp
  416dbf:	xchg   ebx,eax
  416dc0:	aas    
  416dc1:	pop    ebx
  416dc2:	ins    DWORD PTR es:[edi],dx
  416dc3:	jl     0x416de7
  416dc5:	mov    ebp,0x816c93cf
  416dca:	stc    
  416dcb:	leave  
  416dcc:	aaa    
  416dcd:	sub    al,BYTE PTR [ecx-0x28]
  416dd0:	aas    
  416dd1:	push   es
  416dd2:	je     0x416d71
  416dd4:	cmp    eax,0x6dce3964
  416dd9:	fistp  WORD PTR [esi]
  416ddb:	mov    fs,ecx
  416ddd:	pop    ds
  416dde:	xchg   esi,eax
  416ddf:	sti    
  416de0:	cs sbb esi,eax
  416de3:	sub    al,0x1e
  416de5:	mov    WORD PTR [eax],ss
  416de7:	cdq    
  416de8:	sub    eax,0x3b69749f
  416ded:	(bad)  
  416dee:	fst    DWORD PTR [ebx+0x5f366758]
  416df4:	cwde   
  416df5:	inc    ebx
  416df6:	mov    dl,0x39
  416df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df9:	fwait
  416dfa:	jo     0x416dae
  416dfc:	aam    0x8a
  416dfe:	and    al,0xcd
  416e00:	repnz push ebx
  416e02:	(bad)  [ebp-0xd6139c0]
  416e08:	movsx  edi,ch
  416e0b:	fistp  DWORD PTR [edx-0x19]
  416e0e:	or     BYTE PTR [eax+0x3bc7285],0xa
  416e15:	test   al,0xf0
  416e17:	in     eax,0xab
  416e19:	and    al,0xfc
  416e1b:	pop    ds
  416e1c:	xchg   BYTE PTR [ebp-0x30],cl
  416e1f:	cmc    
  416e20:	jp     0x416e31
  416e22:	test   BYTE PTR ds:0xa8ee2d3d,ah
  416e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e29:	xor    al,dh
  416e2b:	test   al,bh
  416e2d:	mov    ss:0x116df058,al
  416e33:	gs sub eax,0xa321742
  416e39:	lods   al,BYTE PTR ds:[esi]
  416e3a:	outs   dx,BYTE PTR ds:[esi]
  416e3b:	je     0x416e06
  416e3d:	ror    DWORD PTR [edi+eax*1],cl
  416e40:	jne    0x416e67
  416e42:	daa    
  416e43:	xor    DWORD PTR [edi],esp
  416e45:	jae    0x416e78
  416e47:	out    dx,eax
  416e48:	loope  0x416e76
  416e4a:	pop    eax
  416e4b:	repnz or al,0xfc
  416e4f:	loopne 0x416dee
  416e51:	iret   
  416e52:	xor    BYTE PTR [ebp+0x401cad9e],0xe1
  416e59:	jno    0x416e04
  416e5b:	cmp    DWORD PTR [ecx],esp
  416e5d:	dec    ebx
  416e5e:	mov    DWORD PTR [edx-0x70],eax
  416e61:	push   edx
  416e62:	imul   edi
  416e64:	mov    ecx,0xdbecbd6d
  416e69:	retf   0x5285
  416e6c:	cmp    al,0x7f
  416e6f:	inc    ebx
  416e70:	mov    bh,0x28
  416e72:	mov    cl,ch
  416e74:	sub    DWORD PTR [edi],ebx
  416e76:	ja     0x416ebb
  416e78:	cmp    DWORD PTR [ecx+0x5076ec72],edx
  416e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7f:	add    DWORD PTR [esi+0x61],esp
  416e82:	pusha  
  416e83:	jge    0x416e58
  416e85:	repnz addr16 fwait
  416e88:	add    ecx,ebp
  416e8a:	addr16 push eax
  416e8c:	fsubr  DWORD PTR [ebx-0x3a07b89]
  416e92:	call   0x5f74:0xbce8c5ed
  416e99:	popf   
  416e9a:	ds jp  0x416e8e
  416e9d:	add    al,0xd8
  416e9f:	inc    eax
  416ea0:	(bad)  
  416ea3:	inc    ebx
  416ea4:	pop    ebp
  416ea5:	sbb    al,0x96
  416ea7:	dec    ecx
  416ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea9:	mov    dl,0x73
  416eab:	mov    dh,0x50
  416ead:	out    dx,al
  416eae:	sahf   
  416eaf:	inc    BYTE PTR [esi]
  416eb1:	mov    ecx,eax
  416eb3:	imul   esp,DWORD PTR [esi+edi*2-0x38],0x32fe33ff
  416ebb:	std    
  416ebc:	push   cs
  416ebd:	jl     0x416eaf
  416ebf:	xchg   ebp,eax
  416ec0:	fdiv   DWORD PTR [edx-0x38]
  416ec3:	call   0x46ca:0xdf1d8129
  416eca:	int    0xb6
  416ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ecd:	xchg   ebx,eax
  416ece:	test   BYTE PTR [eax+ebp*2-0x45],dl
  416ed2:	xchg   edi,eax
  416ed3:	ins    DWORD PTR es:[edi],dx
  416ed4:	test   DWORD PTR [ecx],0x90ce63bd
  416eda:	dec    ecx
  416edb:	aad    0xef
  416edd:	mov    al,ds:0x58eb00e4
  416ee2:	pop    ecx
  416ee3:	pop    ds
  416ee4:	lea    ecx,[edx+0x4688767e]
  416eea:	jge    0x416f22
  416eec:	xchg   ecx,eax
  416eed:	sbb    ch,BYTE PTR [edi+0x7fa35a45]
  416ef3:	ss sub eax,0x7a35c1bc
  416ef9:	les    eax,FWORD PTR [eax-0x6fbc4d49]
  416eff:	loop   0x416eb2
  416f01:	dec    edi
  416f02:	test   DWORD PTR [edx],0xa69a5a8e
  416f08:	xchg   al,ah
  416f0a:	jle    0x416ec0
  416f0c:	pop    edi
  416f0d:	fcom   QWORD PTR [edi]
  416f0f:	sub    eax,0xdf454ec6
  416f14:	push   cs
  416f15:	sub    DWORD PTR [ebp-0x4d2b1d78],esi
  416f1b:	inc    ecx
  416f1c:	sub    DWORD PTR [ecx+0x1b306008],edi
  416f22:	stos   BYTE PTR es:[edi],al
  416f23:	mov    esp,0x4df8cd3b
  416f28:	jae    0x416ece
  416f2a:	mov    fs,eax
  416f2c:	inc    edx
  416f2d:	or     al,0x96
  416f2f:	xchg   esi,eax
  416f30:	fs scas eax,DWORD PTR es:[edi]
  416f32:	loope  0x416f92
  416f34:	jmp    0xaec6b6b9
  416f39:	mov    ebx,0x270160a0
  416f3e:	(bad)
  416f43:	out    dx,al
  416f44:	xchg   ebp,eax
  416f45:	sbb    BYTE PTR [ecx-0x4099ca11],dl
  416f4b:	xchg   esi,eax
  416f4c:	push   0x65
  416f4e:	lods   eax,DWORD PTR ds:[esi]
  416f4f:	push   edx
  416f50:	mov    eax,0x7a166a5f
  416f55:	mov    ecx,0xe742cbee
  416f5a:	mov    ecx,0xd814c382
  416f5f:	cdq    
  416f60:	test   ch,cl
  416f62:	in     eax,0x80
  416f64:	push   cs
  416f65:	stos   BYTE PTR es:[edi],al
  416f66:	cmp    al,0x9e
  416f68:	rcl    ecx,cl
  416f6a:	mov    al,ds:0xc32598f1
  416f6f:	cmp    ecx,DWORD PTR [ecx-0x36]
  416f72:	mov    dh,0x38
  416f74:	and    al,0xb7
  416f76:	aaa    
  416f77:	leave  
  416f78:	rcl    DWORD PTR [edi+0x3c],0x70
  416f7c:	xchg   edx,eax
  416f7d:	aad    0xa0
  416f7f:	shl    dx,cl
  416f82:	ss je  0x416fc1
  416f85:	int    0xc2
  416f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f88:	mov    cl,0x98
  416f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8b:	add    DWORD PTR [ebp+0x291b7b24],esi
  416f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f92:	addr16 ss dec ebp
  416f95:	xor    al,0x86
  416f97:	add    BYTE PTR [eax],ch
  416f99:	fmul   DWORD PTR [eax-0x58]
  416f9c:	mov    ds:0x82e31058,al
  416fa1:	mov    dh,0xeb
  416fa3:	(bad)  
  416fa4:	push   ds
  416fa5:	ins    DWORD PTR es:[edi],dx
  416fa6:	cmp    BYTE PTR fs:[ebp-0x17],al
  416faa:	pop    ebp
  416fab:	adc    ch,bh
  416fad:	popf   
  416fae:	sub    esp,ecx
  416fb0:	push   0x1627ef6
  416fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fb6:	mov    DWORD PTR [ecx+0x52f700be],ebx
  416fbc:	pushf  
  416fbd:	int3   
  416fbe:	inc    edi
  416fbf:	leave  
  416fc0:	popf   
  416fc1:	aam    0xc1
  416fc3:	jge    0x416f5b
  416fc5:	lods   eax,DWORD PTR ds:[esi]
  416fc6:	dec    ecx
  416fc7:	xor    BYTE PTR [eax+ebp*2],bl
  416fca:	pusha  
  416fcb:	mov    ch,0x8
  416fcd:	mov    bl,BYTE PTR [ebx-0x276821fc]
  416fd3:	jo     0x416fe1
  416fd5:	scas   eax,DWORD PTR es:[edi]
  416fd6:	sbb    BYTE PTR [esi-0x2f],ah
  416fd9:	mov    ds:0xc185a436,al
  416fde:	(bad)  
  416fdf:	lahf   
  416fe0:	xor    cl,BYTE PTR [esi+0x75]
  416fe3:	mov    al,ds:0xd763cf9c
  416fe8:	int    0x67
  416fea:	cld    
  416feb:	cli    
  416fec:	mov    ch,0xe6
  416fee:	push   0xb760faa4
  416ff3:	out    dx,eax
  416ff4:	sbb    ecx,DWORD PTR [ebx]
  416ff6:	fs in  eax,0xe8
  416ff9:	xchg   edx,eax
  416ffa:	sahf   
  416ffb:	test   eax,0xd348ee33
  417000:	lock mov eax,ds:0xdca7e81c
  417006:	jle    0x416fdf
  417008:	adc    dl,ch
  41700a:	test   ch,bh
  41700c:	pop    ecx
  41700d:	xor    eax,0x66ca478
  417012:	sub    dh,BYTE PTR [ecx+0x6f]
  417015:	jmp    0x6e66:0x136b2810
  41701c:	fisttp WORD PTR fs:[ebx+0x142bf792]
  417023:	dec    esi
  417024:	mov    ch,0x52
  417026:	sar    BYTE PTR es:[ebx-0x26],0xb3
  41702b:	and    al,BYTE PTR [esi+0x75]
  41702e:	push   ecx
  41702f:	mov    ds:0x3a5c4d6a,eax
  417034:	enter  0x26c5,0x5d
  417038:	fwait
  417039:	jg     0x417024
  41703b:	jne    0x41701d
  41703d:	int    0x27
  41703f:	outs   dx,DWORD PTR ds:[esi]
  417040:	lods   eax,DWORD PTR ds:[esi]
  417041:	test   al,0x45
  417043:	mov    ds:0xb4105ce5,eax
  417048:	es out 0xe,al
  41704b:	stos   BYTE PTR es:[edi],al
  41704c:	in     eax,0xe7
  41704e:	clc    
  41704f:	bound  esp,QWORD PTR [edi+ebx*4-0x18c0c3ec]
  417056:	mov    edi,0xd9890c38
  41705b:	fistp  DWORD PTR [esi]
  41705d:	jo     0x417078
  41705f:	sbb    ebp,DWORD PTR gs:[ecx+0x54]
  417063:	fsubr  DWORD PTR [esi-0x16]
  417066:	dec    eax
  417067:	xor    BYTE PTR [ebx+0x15],ch
  41706a:	loopne 0x417039
  41706c:	loopne 0x417082
  41706e:	and    BYTE PTR [edi],0xef
  417071:	xchg   esp,eax
  417072:	(bad)  
  417074:	sar    BYTE PTR [ecx],cl
  417076:	push   ds
  417077:	sahf   
  417078:	imul   edx,DWORD PTR [ebx],0x6b
  41707b:	add    BYTE PTR [edi],0x45
  41707e:	pop    ebp
  41707f:	mov    bh,bl
  417081:	mov    ecx,0xc65da647
  417086:	sbb    BYTE PTR [edi+0x46],cl
  417089:	fwait
  41708a:	mov    ds:0xdec83ee8,eax
  41708f:	rcr    DWORD PTR [esi-0x3d],cl
  417092:	or     eax,0xccad1e40
  417097:	and    eax,0xf84208e4
  41709c:	mov    al,ds:0x4dbd17c
  4170a1:	cmp    ebx,esp
  4170a3:	mov    ebp,0xf1fd9db5
  4170a8:	xchg   esp,eax
  4170a9:	and    al,0xd4
  4170ab:	jae    0x417059
  4170ad:	test   eax,0x824d0465
  4170b2:	pop    ecx
  4170b3:	push   esp
  4170b4:	mov    bl,0xca
  4170b6:	dec    ebp
  4170b7:	loop   0x41705d
  4170b9:	adc    DWORD PTR [edi],edi
  4170bb:	mov    BYTE PTR [esi],ch
  4170bd:	ja     0x417117
  4170bf:	push   ebp
  4170c0:	(bad)  
  4170c1:	cmp    BYTE PTR [ebx-0x46],bh
  4170c4:	and    DWORD PTR [ebx-0x16],edx
  4170c7:	out    0xa0,eax
  4170c9:	and    eax,0x22463013
  4170ce:	je     0x41711d
  4170d0:	int3   
  4170d1:	inc    esi
  4170d2:	mov    bh,0x7c
  4170d4:	push   es
  4170d5:	aas    
  4170d6:	mov    dh,0x8d
  4170d8:	dec    esp
  4170d9:	addr16 and al,0xe8
  4170dc:	gs dec edi
  4170de:	adc    al,0xeb
  4170e0:	outs   dx,DWORD PTR ds:[esi]
  4170e1:	ja     0x417120
  4170e3:	into   
  4170e4:	and    DWORD PTR cs:[ecx+eax*1+0x12b11e75],edx
  4170ec:	jmp    0x9e:0xad1c6c12
  4170f3:	and    eax,0x19849d17
  4170f8:	mov    esp,0xdd104809
  4170fd:	mov    ch,0x68
  4170ff:	daa    
  417100:	xchg   esi,eax
  417101:	inc    esp
  417102:	dec    esi
  417103:	(bad)  
  417104:	adc    ebx,DWORD PTR [ebp+0x30e55edf]
  41710a:	cmp    esi,esi
  41710c:	lods   eax,DWORD PTR ds:[si]
  41710e:	mov    BYTE PTR [edx+0x1],ah
  417111:	scas   eax,DWORD PTR es:[edi]
  417112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417113:	and    BYTE PTR [eax],0xde
  417116:	(bad)
  417119:	mov    ah,0x59
  41711b:	repz mov eax,0x46503d43
  417121:	ror    BYTE PTR [eax-0x6dbdb6de],cl
  417127:	lods   eax,DWORD PTR ds:[esi]
  417128:	jmp    0x417100
  41712a:	push   0x3adcd606
  41712f:	int    0xc3
  417131:	inc    ebp
  417132:	cwde   
  417133:	push   edx
  417134:	sub    BYTE PTR [esp+ecx*4-0xcbb9f61],dh
  41713b:	push   ebp
  41713c:	dec    ebx
  41713d:	adc    eax,0x26a0153e
  417142:	mov    cl,0xeb
  417144:	pusha  
  417145:	dec    esp
  417146:	gs loope 0x41717b
  417149:	sar    bl,1
  41714b:	xor    BYTE PTR [ebx-0x45],dl
  41714e:	xor    eax,0xeb06909a
  417153:	pop    esp
  417154:	xor    eax,0xf2a8311
  417159:	mov    BYTE PTR [ebp+0x4b],dl
  41715c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41715d:	adc    dh,al
  41715f:	rol    DWORD PTR [edi+ebp*2],cl
  417162:	outs   dx,DWORD PTR ds:[esi]
  417163:	pushf  
  417164:	xchg   BYTE PTR [edi],bh
  417166:	int3   
  417167:	ret    
  417168:	fnsave [ecx]
  41716a:	outs   dx,BYTE PTR ds:[esi]
  41716b:	cmp    BYTE PTR [eax+0x4],bh
  41716e:	aad    0xe
  417170:	mov    al,0xfb
  417172:	pusha  
  417173:	mov    bh,0x5
  417175:	fmul   QWORD PTR [esi]
  417177:	inc    ebp
  417178:	and    ebp,DWORD PTR [edi]
  41717a:	jecxz  0x4171ae
  41717c:	jmp    0x4feb95b4
  417181:	rol    DWORD PTR [ecx],0x67
  417184:	test   eax,0x41e094a8
  417189:	ja     0x41716e
  41718b:	push   ds
  41718c:	dec    esi
  41718d:	adc    ah,BYTE PTR [edx+0x45]
  417190:	inc    edx
  417191:	and    al,0x28
  417193:	(bad)  
  417194:	mov    bh,0x93
  417196:	lods   eax,DWORD PTR ds:[esi]
  417197:	les    ecx,FWORD PTR [eax-0x25]
  41719a:	arpl   WORD PTR [esi-0x53e47bb8],cx
  4171a0:	jle    0x417122
  4171a2:	fmul   DWORD PTR [ecx+0x2f]
  4171a5:	hlt    
  4171a6:	dec    esp
  4171a7:	fucomi st,st(1)
  4171a9:	mov    dh,0xed
  4171ab:	push   0xef84853f
  4171b0:	sub    al,0xf
  4171b2:	out    0xa3,eax
  4171b4:	shl    esp,0x11
  4171b7:	xchg   edx,eax
  4171b8:	gs pop es
  4171ba:	lock mov BYTE PTR [edi-0x1c766e16],bl
  4171c1:	dec    ecx
  4171c2:	aas    
  4171c3:	daa    
  4171c4:	push   edi
  4171c5:	aad    0x59
  4171c7:	inc    ebp
  4171c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c9:	repnz add cx,WORD PTR [ebp-0x21d05edc]
  4171d1:	ror    BYTE PTR [ebx],1
  4171d3:	add    BYTE PTR [esi-0x58],ah
  4171d6:	sbb    al,0x82
  4171d8:	mov    ebx,0xa5608a2e
  4171dd:	addr16 or edx,ecx
  4171e0:	clc    
  4171e1:	and    bh,cl
  4171e3:	jb     0x417186
  4171e5:	outs   dx,BYTE PTR ds:[esi]
  4171e6:	xlat   BYTE PTR ds:[ebx]
  4171e7:	aam    0x42
  4171e9:	dec    eax
  4171ea:	mov    WORD PTR [ebx+0x39b046e4],es
  4171f0:	cdq    
  4171f1:	pop    eax
  4171f2:	cdq    
  4171f3:	add    dh,dl
  4171f5:	enter  0xed26,0x78
  4171f9:	cld    
  4171fa:	sbb    eax,0x9f8bba30
  4171ff:	cmp    ax,0xf06f
  417203:	leave  
  417204:	push   ss
  417205:	sub    eax,0x6697fce3
  41720a:	push   ecx
  41720b:	xchg   ebx,eax
  41720d:	out    0xd5,eax
  41720f:	pusha  
  417210:	push   DWORD PTR [eax+0x2e]
  417213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417214:	xlat   BYTE PTR ds:[ebx]
  417215:	je     0x41727a
  417217:	test   al,0xc4
  417219:	cmp    dl,dl
  41721b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41721c:	ret    
  41721d:	(bad)  
  41721e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41721f:	dec    esi
  417220:	lea    esi,[edx+0x67]
  417223:	ror    BYTE PTR [ebp-0x45],1
  417226:	pop    esp
  417227:	leave  
  417228:	xlat   BYTE PTR ds:[ebx]
  417229:	mov    gs,WORD PTR [eax+edx*8+0x7f090b01]
  417230:	stos   DWORD PTR es:[edi],eax
  417231:	pop    es
  417232:	dec    edx
  417233:	cmp    DWORD PTR [edx+0x53],ebx
  417236:	call   FWORD PTR ds:0x1b88dd43
  41723c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41723d:	lods   eax,DWORD PTR ds:[esi]
  41723e:	cwde   
  41723f:	and    edx,ecx
  417241:	mov    ebx,0xadb16a3e
  417246:	sub    DWORD PTR [eax+esi*1+0x29],edx
  41724a:	cmp    eax,0xada219a8
  41724f:	cli    
  417250:	rcl    DWORD PTR [ebp-0x24],cl
  417253:	mov    cs,WORD PTR [esi]
  417255:	scas   al,BYTE PTR es:[edi]
  417256:	push   eax
  417257:	arpl   cx,bp
  417259:	(bad)  
  41725a:	out    dx,al
  41725b:	loop   0x4172aa
  41725d:	popf   
  41725e:	outs   dx,BYTE PTR ds:[esi]
  41725f:	and    DWORD PTR [eax-0x39],ebp
  417262:	les    eax,FWORD PTR [esi+0x6]
  417265:	or     al,0x8e
  417267:	test   BYTE PTR fs:[edx-0x29],al
  41726b:	sbb    BYTE PTR [ecx],bl
  41726d:	mov    ebx,0x229a580
  417272:	into   
  417273:	mov    esp,0x5ee2edab
  417278:	push   ecx
  417279:	cmp    eax,0x2909830d
  41727e:	xchg   ecx,eax
  41727f:	mov    eax,0x9817b89f
  417284:	cmp    edx,ecx
  417286:	cmp    bh,BYTE PTR [esi]
  417288:	(bad)  
  41728a:	aaa    
  41728b:	mov    cl,0xf4
  41728d:	push   0x5786b605
  417292:	jge    0x4172df
  417294:	fistp  DWORD PTR [ecx+0x24db8755]
  41729a:	inc    eax
  41729b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41729c:	mov    ds:0x394be77e,eax
  4172a1:	shl    DWORD PTR [edi+ebp*1-0x6144ccdc],cl
  4172a8:	enter  0x9627,0x9a
  4172ac:	lds    edi,FWORD PTR fs:[ecx-0xabff65e]
  4172b3:	xchg   ebx,eax
  4172b4:	adc    dl,ah
  4172b6:	xor    eax,0x9c70d763
  4172bb:	in     al,0x2c
  4172bd:	add    bl,0x74
  4172c0:	xor    cl,BYTE PTR [ebp+0x762c7258]
  4172c6:	pop    edx
  4172c7:	push   ebx
  4172c8:	xchg   edx,eax
  4172c9:	push   ebp
  4172ca:	inc    ebp
  4172cb:	dec    ebx
  4172cc:	xor    edi,DWORD PTR [ecx+0x7e]
  4172cf:	inc    ebx
  4172d0:	push   es
  4172d1:	in     al,dx
  4172d2:	mov    BYTE PTR [ecx+ecx*8-0x80],ah
  4172d6:	lea    eax,[edi]
  4172d8:	mov    bh,0xab
  4172da:	push   ds
  4172db:	push   ds
  4172dc:	mov    al,0x60
  4172de:	add    esp,DWORD PTR [ebp+0x13049ac9]
  4172e4:	data16 ins BYTE PTR es:[edi],dx
  4172e6:	push   edi
  4172e7:	(bad)  
  4172e9:	mov    dh,0x3
  4172eb:	jl     0x41726f
  4172ed:	mov    ch,0x7e
  4172ef:	(bad)  
  4172f0:	iret   
  4172f1:	xor    DWORD PTR [eax-0x2],edi
  4172f4:	cmp    DWORD PTR [edx+eax*1-0x1de0f18b],edx
  4172fb:	(bad)  
  4172fc:	cmp    al,0x19
  4172fe:	mov    eax,ds:0xb6db0244
  417303:	mov    ch,0xf5
  417305:	cmp    eax,0x5a6cfc30
  41730a:	fild   WORD PTR [ecx+ebp*1-0x52]
  41730e:	cmp    cl,BYTE PTR [esi-0x7ba1e233]
  417314:	xchg   ebx,eax
  417315:	imul   ebx,esi,0x65
  417318:	test   DWORD PTR [eax],edx
  41731a:	mov    ecx,0x5247aba9
  41731f:	dec    ecx
  417320:	dec    ecx
  417321:	pop    ds
  417322:	mov    ds:0x713ec512,al
  417327:	inc    ebp
  417328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417329:	fnstcw WORD PTR ds:0xb758858f
  41732f:	nop
  417330:	mov    ebp,0x650516d8
  417335:	mov    edx,0xcf5be996
  41733a:	xchg   ebx,eax
  41733b:	sbb    edi,edx
  41733d:	inc    ebx
  41733e:	mov    edx,0x2923694d
  417343:	loope  0x41730d
  417345:	and    eax,0xf3ed0355
  41734a:	adc    al,0xc0
  41734c:	add    al,0xbc
  41734e:	aas    
  41734f:	pop    ecx
  417350:	scas   al,BYTE PTR es:[edi]
  417351:	push   cs
  417352:	dec    esp
  417353:	fsub   DWORD PTR [esi+0xe514925]
  417359:	(bad)  
  41735a:	and    bh,BYTE PTR [esi-0x4f7c4635]
  417360:	jns    0x41734c
  417362:	aam    0x5d
  417364:	sub    BYTE PTR [eax+0x5eb65094],bh
  41736a:	mov    ah,0xf0
  41736c:	inc    ebx
  41736d:	cld    
  41736e:	xchg   BYTE PTR [edi-0x69],bh
  417371:	cmp    cl,BYTE PTR [edx]
  417373:	cmc    
  417374:	jp     0x4173d5
  417376:	or     dh,BYTE PTR [ebx]
  417378:	out    0x36,al
  41737a:	(bad)  
  41737b:	outs   dx,DWORD PTR ds:[esi]
  41737c:	outs   dx,BYTE PTR ds:[esi]
  41737d:	mov    ch,0x17
  41737f:	pop    ss
  417380:	cwde   
  417381:	aad    0x4
  417383:	enter  0xc400,0xf6
  417387:	fstp   DWORD PTR [ecx-0x20]
  41738a:	shr    esp,cl
  41738c:	adc    bl,cl
  41738e:	cwde   
  41738f:	jns    0x417391
  417391:	pushf  
  417392:	rcl    bh,0xe
  417395:	adc    ah,BYTE PTR [ebx+0x430a63d8]
  41739b:	out    0xa3,al
  41739d:	push   cs
  41739e:	or     al,0x28
  4173a0:	in     al,dx
  4173a1:	mov    edi,0x94cfe9af
  4173a6:	lods   eax,DWORD PTR ds:[esi]
  4173a7:	add    DWORD PTR [eax-0x29b4d2a9],ebp
  4173ad:	mov    ch,BYTE PTR [edi]
  4173af:	jbe    0x417390
  4173b1:	xor    DWORD PTR [edi],esp
  4173b3:	lock push ecx
  4173b5:	xchg   edx,eax
  4173b6:	adc    eax,0x42499bbf
  4173bb:	popf   
  4173bc:	dec    edx
  4173bd:	inc    eax
  4173be:	dec    eax
  4173bf:	pop    ebx
  4173c0:	adc    al,0xec
  4173c2:	bound  esi,QWORD PTR [ebx]
  4173c4:	es mov bl,dh
  4173c7:	adc    DWORD PTR [eax-0x56],esp
  4173ca:	add    al,0xc4
  4173cc:	pop    esi
  4173cd:	rcl    DWORD PTR [esi-0x5f],cl
  4173d0:	mov    al,ds:0x33498699
  4173d5:	rcl    DWORD PTR [edx-0x3],0x2c
  4173d9:	xchg   BYTE PTR [ebx],ch
  4173db:	xchg   ebp,eax
  4173dc:	jle    0x4173b3
  4173de:	jno    0x417390
  4173e0:	pop    es
  4173e1:	daa    
  4173e2:	dec    esp
  4173e3:	cs push cs
  4173e5:	mov    BYTE PTR [esi],ah
  4173e7:	(bad)  
  4173e8:	pop    ebx
  4173e9:	hlt    
  4173ea:	fs xchg edi,eax
  4173ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ed:	mov    bh,0x40
  4173ef:	cmc    
  4173f0:	pop    eax
  4173f1:	or     cl,BYTE PTR [ebx+0x37]
  4173f4:	aas    
  4173f5:	xor    al,0x7e
  4173f7:	and    eax,ebx
  4173f9:	pushf  
  4173fa:	lock scas al,BYTE PTR es:[edi]
  4173fc:	ins    DWORD PTR es:[edi],dx
  4173fd:	repnz (bad) 
  417400:	dec    esi
  417401:	dec    esi
  417402:	adc    DWORD PTR [ecx+ebp*4+0x66],ebp
  417406:	mov    al,ds:0x2bd05bf4
  41740b:	int3   
  41740c:	xor    eax,0xf9317bd5
  417411:	sub    al,0xcd
  417413:	jbe    0x417481
  417415:	push   edi
  417416:	sub    cl,ch
  417418:	xchg   ebx,eax
  417419:	jle    0x4173de
  41741b:	retf   0x78b7
  41741e:	imul   esi,edi,0xffffffe1
  417421:	loop   0x4173c0
  417423:	add    bh,ah
  417425:	xchg   ebx,eax
  417426:	iret   
  417427:	pop    esp
  417428:	fwait
  417429:	inc    ebp
  41742a:	lea    ecx,[edx]
  41742c:	data16 dec BYTE PTR [edi]
  41742f:	repnz xchg edx,eax
  417431:	mov    BYTE PTR [ebx],dl
  417433:	mov    ah,0xdd
  417435:	jnp    0x417449
  417437:	cmp    BYTE PTR [esi-0x4e],0x46
  41743b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41743c:	push   ds
  41743d:	pop    ebp
  41743e:	sub    BYTE PTR [ebx],cl
  417440:	mov    ebp,0x8f042610
  417445:	xchg   BYTE PTR [ebx-0x7a],bh
  417448:	int3   
  417449:	(bad)  [esi*4+0x971b272]
  417450:	test   DWORD PTR [esi-0x4],ebx
  417453:	sti    
  417454:	outs   dx,DWORD PTR ds:[esi]
  417455:	mov    ch,BYTE PTR [edx+0x2b]
  417458:	mov    ds,WORD PTR [edx]
  41745a:	xor    eax,0xae84f607
  41745f:	mov    ebp,0x79686da5
  417464:	jmp    0x4174a4
  417466:	add    DWORD PTR [eax],esi
  417468:	mov    ecx,0xe7c00f96
  41746d:	inc    edx
  41746e:	mov    eax,ds:0x613bcc6a
  417473:	loope  0x41749f
  417475:	std    
  417476:	xchg   ebx,eax
  417477:	lahf   
  417478:	mov    dh,0x4
  41747a:	xor    dl,BYTE PTR [edx]
  41747c:	repz dec ebp
  41747e:	add    edi,ebp
  417480:	cmp    al,0x78
  417482:	test   edx,ecx
  417484:	scas   eax,DWORD PTR es:[edi]
  417485:	cs push 0xffffffe4
  417488:	mov    ch,0x9c
  41748a:	jg     0x4174bb
  41748c:	aad    0xd8
  41748e:	stos   DWORD PTR es:[edi],eax
  41748f:	daa    
  417490:	inc    eax
  417491:	mov    cs,WORD PTR [ecx]
  417493:	scas   al,BYTE PTR es:[edi]
  417494:	mov    bh,0x7a
  417496:	retf   0xc42d
  417499:	(bad)  
  41749a:	push   cs
  41749b:	loop   0x417437
  41749d:	xor    al,0x36
  41749f:	dec    dx
  4174a1:	pop    ss
  4174a2:	or     DWORD PTR [edi-0x456a6559],0x4535e975
  4174ac:	(bad)  
  4174ad:	dec    edi
  4174ae:	fstp   QWORD PTR [edx]
  4174b0:	jns    0x417526
  4174b2:	outs   dx,DWORD PTR ds:[esi]
  4174b3:	idiv   BYTE PTR [ebp+0x768e7635]
  4174b9:	fstp   QWORD PTR gs:[ecx+0x2c]
  4174bd:	mov    ebp,0x315dec20
  4174c2:	pop    esi
  4174c3:	or     WORD PTR [ebx+0x5a],ax
  4174c7:	mov    ds:0x23518530,al
  4174cc:	dec    eax
  4174cd:	sar    DWORD PTR [edx-0x1d],1
  4174d0:	sub    ch,bl
  4174d2:	fst    QWORD PTR cs:[eax]
  4174d5:	sub    eax,0x5f7bd358
  4174da:	test   eax,0x171ef041
  4174df:	je     0x41749b
  4174e1:	push   es
  4174e2:	dec    edi
  4174e3:	dec    esp
  4174e4:	fbld   TBYTE PTR [ebp+0x5]
  4174e7:	xchg   edi,eax
  4174e8:	fidivr DWORD PTR [ebp-0x68]
  4174eb:	ss (bad) 
  4174ed:	jno    0x41751f
  4174ef:	inc    edx
  4174f0:	adc    DWORD PTR [ebx+0x73],edx
  4174f3:	stc    
  4174f4:	mov    edi,DWORD PTR [esi-0x5fc25ee6]
  4174fa:	add    al,0x2c
  4174fc:	adc    eax,0xd449cda
  417501:	jecxz  0x4174aa
  417503:	adc    bh,BYTE PTR [ebx]
  417505:	mov    bh,0x56
  417507:	aad    0xab
  417509:	sbb    esp,eax
  41750b:	sbb    dl,BYTE PTR [edx+0x54522737]
  417511:	popa   
  417512:	lea    ecx,[edx+0x48]
  417515:	add    DWORD PTR [ebp+0x32],eax
  417518:	stos   BYTE PTR es:[edi],al
  417519:	fwait
  41751a:	inc    ebp
  41751b:	push   es
  41751c:	mov    esi,0xfdbcaf15
  417521:	or     dl,bh
  417523:	inc    eax
  417524:	jge    0x417513
  417526:	rol    BYTE PTR [esi+edx*1],0xb3
  41752a:	inc    ebx
  41752b:	mov    ebp,esi
  41752d:	sub    al,0x63
  41752f:	fwait
  417530:	daa    
  417531:	ja     0x4174c4
  417533:	out    0xbc,eax
  417535:	jo     0x41750a
  417537:	cmp    BYTE PTR ds:0xa2d34934,0x80
  41753e:	push   esp
  41753f:	pop    ds
  417540:	sub    al,0xd3
  417542:	out    dx,al
  417543:	es std 
  417545:	cwde   
  417546:	jmp    0xa2971be7
  41754b:	push   ebp
  41754c:	xlat   BYTE PTR ds:[ebx]
  41754d:	retf   
  41754e:	xor    edx,ebp
  417550:	call   0xab1b194d
  417555:	mov    al,0x47
  417557:	mov    al,ds:0x10ebd973
  41755c:	cdq    
  41755d:	mov    esi,0xb8ecbb60
  417562:	es ds jns 0x4175d0
  417566:	stos   DWORD PTR es:[edi],eax
  417567:	sub    DWORD PTR [ecx],edi
  417569:	cmp    eax,ebx
  41756b:	cli    
  41756c:	cli    
  41756d:	mov    edi,0x67d8b775
  417572:	cmp    cl,ch
  417574:	jp     0x4175ee
  417576:	or     edi,DWORD PTR [ebx+ebp*8-0x4f]
  41757a:	into   
  41757b:	add    DWORD PTR [ebp-0x72],0x67
  41757f:	out    0x1b,eax
  417581:	or     BYTE PTR [ecx+eax*2-0x2f],bh
  417585:	sub    eax,0x18834e58
  41758a:	add    DWORD PTR ds:0xf83072e,esi
  417590:	(bad)  
  417591:	int3   
  417592:	jg     0x41757f
  417594:	push   ss
  417595:	sbb    eax,0x3458419b
  41759a:	fcmovnu st,st(1)
  41759c:	jb     0x417564
  41759e:	mov    ebx,0x4d7d00e2
  4175a3:	cmp    edi,eax
  4175a5:	xor    eax,0xfee5eece
  4175aa:	inc    eax
  4175ab:	ret    0x7095
  4175ae:	xchg   ebp,eax
  4175af:	mov    al,0x3c
  4175b1:	into   
  4175b2:	retf   0x593
  4175b5:	je     0x4175b8
  4175b7:	jne    0x4175a4
  4175b9:	cmp    al,0x43
  4175bb:	adc    dl,ch
  4175bd:	retf   
  4175be:	pop    esi
  4175bf:	stos   DWORD PTR es:[edi],eax
  4175c0:	or     eax,DWORD PTR [ebx+0x29202ae1]
  4175c6:	mov    al,ds:0xf44e08cd
  4175cb:	or     ecx,DWORD PTR [edi-0x42678d70]
  4175d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d2:	jne    0x41758d
  4175d4:	push   esp
  4175d5:	inc    esi
  4175d6:	jae    0x4175d5
  4175d8:	jecxz  0x41763f
  4175da:	loopne 0x4175dc
  4175dc:	in     eax,dx
  4175dd:	mov    ch,0x2d
  4175df:	mov    ebp,DWORD PTR [esi+eax*2]
  4175e2:	lods   al,BYTE PTR ds:[esi]
  4175e3:	je     0x41759e
  4175e5:	and    dl,ch
  4175e7:	fcmovu st,st(2)
  4175e9:	mov    al,ds:0x3313488a
  4175ee:	sar    ecx,0xc8
  4175f1:	(bad)  
  4175f2:	idiv   DWORD PTR [edx-0x4b]
  4175f5:	lahf   
  4175f6:	pop    ebp
  4175f7:	pop    ecx
  4175f8:	arpl   WORD PTR [ebx+0x20],bx
  4175fb:	bnd jno 0x417677
  4175fe:	rcl    BYTE PTR [ebx],1
  417600:	xchg   ecx,eax
  417601:	aam    0x52
  417603:	popf   
  417604:	into   
  417605:	int3   
  417606:	stos   DWORD PTR es:[edi],eax
  417607:	sar    DWORD PTR [eax+0x1edc04de],0x31
  41760e:	retf   
  41760f:	lods   al,BYTE PTR ds:[esi]
  417610:	xchg   esp,eax
  417611:	sub    al,0xa4
  417613:	sti    
  417614:	repnz push edi
  417616:	adc    DWORD PTR [ecx],ecx
  417618:	cmp    dh,al
  41761a:	push   ds
  41761b:	adc    al,0x88
  41761d:	gs es push ebx
  417620:	jno    0x16cfb088
  417626:	push   esp
  417627:	mov    ebp,0x7fd564b3
  41762c:	div    DWORD PTR [eax+0x37c5cfa7]
  417632:	sbb    ebx,0x7f
  417635:	clc    
  417636:	js     0x41760e
  417638:	jbe    0x4175f5
  41763a:	ins    DWORD PTR es:[edi],dx
  41763b:	out    0x70,al
  41763d:	mov    esi,0xa727326e
  417642:	addr16 test eax,0xe843e351
  417648:	data16 fistp DWORD PTR [eax+0x288bd5ea]
  41764f:	cmc    
  417650:	mov    ebp,0xc593b1fc
  417655:	(bad)  
  417656:	pop    ss
  417657:	or     al,0x59
  417659:	sbb    ebx,0x66
  41765c:	jns    0x417607
  41765e:	mov    WORD PTR [edx+0x3c],ds
  417661:	call   0x9b11:0xc533fea9
  417668:	add    dh,BYTE PTR [edx+0x6958b88c]
  41766e:	jne    0x41764c
  417670:	push   es
  417671:	sbb    dl,BYTE PTR [ecx+0xe817b62]
  417677:	pop    ebp
  417678:	xor    ebx,DWORD PTR [ebp-0x40]
  41767b:	pop    ss
  41767c:	(bad)  
  41767d:	(bad)  
  41767e:	aad    0x4f
  417680:	xchg   esp,eax
  417681:	adc    al,0xad
  417683:	das    
  417684:	(bad)  [eax]
  417686:	addr16 dec esp
  417688:	mov    dh,0xbf
  41768a:	lock fsubr DWORD PTR ds:0x11c410c9
  417691:	clc    
  417692:	rol    BYTE PTR [bx],cl
  417695:	jg     0x417637
  417697:	mov    ah,0x48
  417699:	cli    
  41769a:	jns    0x41765e
  41769c:	push   ecx
  41769d:	push   ss
  41769e:	mov    esi,0xb80addbc
  4176a3:	lods   eax,DWORD PTR ds:[esi]
  4176a4:	jb     0x41771f
  4176a6:	jmp    0x4176c8
  4176a8:	and    al,0x65
  4176aa:	jb     0x4176af
  4176ac:	adc    esp,DWORD PTR [ebp+0x1a]
  4176af:	cld    
  4176b0:	push   ebp
  4176b1:	xlat   BYTE PTR ds:[ebx]
  4176b2:	inc    ebp
  4176b3:	mov    ch,BYTE PTR [esi-0x43c90102]
  4176b9:	daa    
  4176ba:	pop    es
  4176bb:	(bad)  
  4176bc:	in     eax,0xcc
  4176be:	scas   eax,DWORD PTR es:[edi]
  4176bf:	jbe    0x417677
  4176c1:	mov    ah,0xdb
  4176c3:	mov    eax,ds:0x403c1a2e
  4176c8:	bound  ecx,QWORD PTR [edi]
  4176ca:	inc    edx
  4176cb:	add    al,0xd0
  4176cd:	mov    esp,0x88a323c
  4176d2:	shl    esp,0x0
  4176d5:	adc    ah,BYTE PTR [eax]
  4176d7:	inc    esp
  4176d8:	push   edi
  4176d9:	jnp    0x417701
  4176db:	cwde   
  4176dc:	push   edx
  4176dd:	aad    0xf8
  4176df:	loope  0x417689
  4176e1:	in     eax,0xaf
  4176e3:	stos   BYTE PTR es:[edi],al
  4176e4:	inc    eax
  4176e5:	push   esi
  4176e6:	in     al,dx
  4176e7:	cmp    al,0xee
  4176e9:	push   0x2a
  4176eb:	pushf  
  4176ec:	jae    0x41773b
  4176ee:	mov    bl,0x8c
  4176f0:	fcmovu st,st(5)
  4176f2:	repz add al,0xd7
  4176f5:	cmp    al,0x5a
  4176f7:	push   esi
  4176f8:	scas   al,BYTE PTR es:[edi]
  4176f9:	test   eax,0x28ad9fb5
  4176fe:	cmp    al,0xa9
  417700:	mov    ebx,DWORD PTR [ebx+0x5d]
  417703:	jge    0x4176d1
  417705:	sbb    BYTE PTR fs:[esi],ah
  417708:	push   0xd6c25911
  41770d:	ret    
  41770e:	sub    DWORD PTR [edx+ebx*8+0xdf93b8f],eax
  417715:	xchg   ebx,eax
  417716:	push   esi
  417717:	test   eax,0x95f09a96
  41771c:	ret    
  41771d:	xor    edx,DWORD PTR [esi+esi*4-0x55]
  417721:	nop
  417722:	sbb    BYTE PTR [ecx-0x46],cl
  417725:	retf   0x8f57
  417728:	inc    ebx
  417729:	dec    eax
  41772a:	jnp    0x4176dc
  41772c:	add    al,0x31
  41772e:	dec    edx
  41772f:	mov    eax,DWORD PTR [ebx+0x15]
  417732:	xchg   esi,eax
  417733:	cmp    al,0xaa
  417735:	test   DWORD PTR ds:0xd51c1f1,ebp
  41773b:	jmp    0xea94:0xc3eed9cc
  417742:	push   ds
  417743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417744:	jl     0x4177ba
  417746:	xchg   edx,eax
  417747:	ins    BYTE PTR es:[edi],dx
  417748:	adc    DWORD PTR [edi-0x5aaff65d],esp
  41774e:	or     BYTE PTR [esi-0x10],cl
  417751:	inc    ecx
  417752:	imul   edx,esi,0xa6a99b3c
  417758:	inc    ebx
  417759:	das    
  41775a:	fstp   DWORD PTR [ebx+eax*8]
  41775d:	xor    DWORD PTR [edx+edx*8],0x4
  417761:	ins    BYTE PTR es:[edi],dx
  417762:	add    al,dh
  417764:	dec    edx
  417765:	mov    esi,0x84d4dbf4
  41776a:	inc    edi
  41776b:	fxch   st(6)
  41776d:	sti    
  41776e:	mov    al,ds:0xd29c6ea5
  417773:	xlat   BYTE PTR ds:[ebx]
  417774:	push   eax
  417775:	loopne 0x417781
  417777:	mov    esi,0x60beeff8
  41777c:	setns  dl
  41777f:	repz jmp 0x4b85:0xa7f65b82
  417787:	inc    esp
  417788:	xlat   BYTE PTR ds:[ebx]
  417789:	add    al,0x4
  41778b:	gs mov esi,0x47510dcd
  417791:	loop   0x417730
  417793:	in     al,dx
  417794:	xchg   DWORD PTR [ebx],esi
  417796:	xchg   esi,eax
  417797:	mov    edx,0x8816a857
  41779c:	jns    0x417801
  41779e:	not    DWORD PTR [edx-0x13]
  4177a1:	jmp    0x4177a1
  4177a3:	rcl    DWORD PTR [edi+edi*4-0xa277d6f],1
  4177aa:	pop    ss
  4177ab:	lahf   
  4177ac:	frstor [edx+edi*2-0x84fc82e]
  4177b3:	ret    0x6b3f
  4177b6:	in     al,0xf9
  4177b8:	mul    BYTE PTR [eax]
  4177ba:	ret    0xbf98
  4177bd:	jmp    0x11f12e63
  4177c2:	sbb    eax,0x4964a06f
  4177c7:	into   
  4177c8:	or     eax,0x1c83e69
  4177cd:	popf   
  4177ce:	inc    esi
  4177cf:	data16 cld 
  4177d1:	dec    edx
  4177d2:	loop   0x4177df
  4177d4:	std    
  4177d5:	mov    bh,BYTE PTR [eax]
  4177d7:	jecxz  0x417782
  4177d9:	scas   eax,DWORD PTR es:[edi]
  4177da:	in     eax,0x81
  4177dc:	pop    ebp
  4177dd:	mov    ds:0x6494e2ce,al
  4177e2:	mov    cs,WORD PTR [ecx+0x5a]
  4177e5:	xor    eax,0x97fc0be9
  4177ea:	mov    cl,BYTE PTR ds:0x3fc46ff8
  4177f0:	xor    al,0x2d
  4177f2:	xchg   edx,eax
  4177f3:	jge    0x4177f4
  4177f5:	mov    esi,0xbad247b0
  4177fa:	les    ecx,FWORD PTR [eax]
  4177fc:	fmul   DWORD PTR fs:[esi-0x4f]
  417800:	xor    ah,ah
  417802:	frstor ds:0xcffc6a19
  417808:	inc    edi
  417809:	push   es
  41780a:	inc    ebx
  41780b:	cmp    ah,BYTE PTR [ecx+esi*8-0x5c]
  41780f:	dec    esi
  417810:	outs   dx,BYTE PTR ds:[esi]
  417811:	bound  edx,QWORD PTR [edx]
  417813:	cli    
  417814:	and    al,0x9b
  417816:	je     0x4177ea
  417818:	cmp    DWORD PTR [ecx+0x54ef0e15],0x19
  41781f:	xchg   ecx,eax
  417820:	inc    ebx
  417821:	jecxz  0x4177ec
  417823:	add    DWORD PTR [ebx],0x8403af4e
  417829:	xchg   esi,eax
  41782a:	jmp    0x417803
  41782c:	loope  0x4178a4
  41782e:	inc    esi
  41782f:	fisub  DWORD PTR [ecx+ebp*4+0x22]
  417833:	dec    esi
  417834:	cdq    
  417835:	mov    al,0x61
  417837:	test   edi,ecx
  417839:	mov    esp,0xc31ce479
  41783e:	xchg   ebx,eax
  41783f:	push   ebx
  417840:	pop    ebx
  417841:	jg     0x4177f4
  417843:	les    eax,FWORD PTR [eax-0x66]
  417846:	sub    DWORD PTR [esi+0x22fe31a7],ecx
  41784c:	mov    ah,al
  41784e:	adc    BYTE PTR [ebx-0x495420b8],cl
  417854:	lea    edi,[edi]
  417856:	sub    al,0x68
  417858:	inc    dx
  41785a:	rcl    dh,cl
  41785c:	mov    ds:0x84e20c32,al
  417861:	jns    0x41782a
  417863:	lds    ecx,FWORD PTR [esi+0x10345b64]
  417869:	pusha  
  41786a:	fldcw  WORD PTR [ebx]
  41786c:	xchg   esp,eax
  41786d:	jns    0x417862
  41786f:	mov    cl,BYTE PTR [eax]
  417871:	sub    esi,DWORD PTR [edx]
  417873:	xchg   edi,eax
  417874:	or     al,0x87
  417876:	fsubp  st(5),st
  417878:	std    
  417879:	mov    ecx,0x8fb00c53
  41787e:	imul   edi,DWORD PTR [edx+0x75326e51],0xe6e58bf4
  417888:	dec    edx
  417889:	jb     0x4178bc
  41788b:	adc    al,0x28
  41788d:	into   
  41788e:	mov    esp,0xef53898c
  417893:	sti    
  417894:	out    dx,al
  417895:	inc    ecx
  417896:	mov    esi,0x45441607
  41789b:	jmp    0x4178e3
  41789d:	hlt    
  41789e:	outs   dx,BYTE PTR ds:[esi]
  41789f:	jno    0x41785f
  4178a1:	cmp    ch,dl
  4178a3:	xlat   BYTE PTR ds:[ebx]
  4178a4:	inc    esp
  4178a5:	outs   dx,DWORD PTR ds:[esi]
  4178a6:	cmp    eax,0xb9c3d67b
  4178ab:	cmp    DWORD PTR [edi],ecx
  4178ad:	ror    DWORD PTR [edx+0x5e],0x6d
  4178b1:	or     esi,DWORD PTR [eax-0x775db0a7]
  4178b7:	mov    bl,0x25
  4178b9:	sti    
  4178ba:	inc    edi
  4178bb:	adc    eax,DWORD PTR [edi+0x1362b106]
  4178c1:	sti    
  4178c2:	fbstp  TBYTE PTR [edx-0x22]
  4178c5:	xor    edx,eax
  4178c7:	div    BYTE PTR [esi+0x3444df02]
  4178cd:	sbb    ah,ch
  4178cf:	mul    DWORD PTR [ebx]
  4178d1:	sbb    BYTE PTR [ebp+0x34],ch
  4178d4:	or     esp,DWORD PTR [esi+0x0]
  4178d7:	push   esi
  4178d8:	jecxz  0x41785e
  4178da:	shl    DWORD PTR [esi-0x1f093870],1
  4178e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e1:	adc    edi,DWORD PTR [eax]
  4178e3:	fwait
  4178e4:	hlt    
  4178e5:	mov    eax,ds:0x7a7254d3
  4178ea:	cmp    DWORD PTR [ebx+ebx*8],ebp
  4178ed:	xor    al,0x55
  4178ef:	sbb    al,0xa7
  4178f1:	fcom   QWORD PTR [edx]
  4178f3:	push   edi
  4178f4:	adc    BYTE PTR ds:0x2269e5a6,ch
  4178fa:	iret   
  4178fb:	in     eax,dx
  4178fc:	je     0x41794c
  4178fe:	leave  
  4178ff:	mov    ebp,0x78c1b7d5
  417904:	and    al,0xb4
  417906:	daa    
  417907:	push   edi
  417908:	sub    cl,dl
  41790a:	nop
  41790b:	fwait
  41790c:	adc    eax,0x38a8319
  417911:	pushf  
  417912:	(bad)  
  417913:	in     al,dx
  417914:	enter  0xd11d,0x7d
  417918:	inc    edi
  417919:	loopne 0x417964
  41791b:	sahf   
  41791c:	ret    0xd91
  41791f:	lahf   
  417920:	sub    DWORD PTR [esp+edi*4-0x53],esp
  417924:	pop    ecx
  417925:	dec    ecx
  417926:	adc    eax,0xd39bbb86
  41792b:	ins    DWORD PTR es:[edi],dx
  41792c:	cld    
  41792d:	inc    ecx
  41792e:	retf   
  41792f:	fdivr  DWORD PTR [esi-0x34b0a749]
  417935:	cmp    eax,0x8bfa31ad
  41793a:	fdiv   DWORD PTR [edi]
  41793c:	or     dl,ch
  41793e:	retf   
  41793f:	sbb    edi,0xfffffffd
  417942:	sets   BYTE PTR [edx+0xd]
  417946:	jmp    0xaa41:0xea74b0ab
  41794d:	ftst   
  41794f:	xchg   ebx,eax
  417950:	je     0x417919
  417952:	mov    eax,0x7fc41d97
  417957:	lea    edx,[eax-0x7238e6e4]
  41795d:	call   0x39ff34e7
  417962:	jns    0x4179c1
  417964:	cli    
  417965:	push   cs
  417966:	pop    eax
  417967:	sti    
  417968:	cmp    DWORD PTR [edi],ebx
  41796a:	test   BYTE PTR [edx+0x76],bh
  41796d:	mov    ah,0x3d
  41796f:	adc    eax,0x6ae906d9
  417974:	mov    ch,0xd1
  417976:	enter  0x8040,0x85
  41797a:	mov    ebx,0x8ef8b99e
  41797f:	sub    ah,bh
  417981:	xor    edi,edi
  417983:	lock test BYTE PTR [edi+0x1a],bl
  417987:	inc    ebp
  417988:	fwait
  417989:	mov    esp,0x3bb0f095
  41798e:	mov    cl,0xbc
  417990:	jle    0x417930
  417992:	sbb    bh,BYTE PTR [eax]
  417994:	aaa    
  417995:	xor    bl,0x7c
  417998:	adc    DWORD PTR [edx+0x35],eax
  41799b:	mov    esp,0xdbbd2701
  4179a0:	pop    ds
  4179a1:	cli    
  4179a2:	inc    edx
  4179a3:	push   edi
  4179a4:	mov    esp,0x548092b5
  4179a9:	and    DWORD PTR [edi+0x79],0xffffffc2
  4179ad:	inc    edi
  4179ae:	ret    0xcfab
  4179b1:	pusha  
  4179b2:	pop    ds
  4179b3:	mov    WORD PTR [edx],?
  4179b5:	jl     0x4179f6
  4179b7:	popa   
  4179b8:	mov    bh,0xcd
  4179ba:	push   ds
  4179bb:	mov    bl,BYTE PTR [ecx+0x65f95259]
  4179c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c2:	(bad)  
  4179c3:	clc    
  4179c4:	stc    
  4179c5:	ins    BYTE PTR es:[edi],dx
  4179c6:	xor    DWORD PTR [esi-0x6d826063],edi
  4179cc:	out    0xbc,eax
  4179ce:	mov    edi,0x347204bd
  4179d3:	std    
  4179d4:	jbe    0x41797e
  4179d6:	int3   
  4179d7:	stos   BYTE PTR es:[edi],al
  4179d8:	loop   0x417975
  4179da:	mov    edx,0x1e57b8f9
  4179df:	data16 adc ah,BYTE PTR [ebp+0x2f77f338]
  4179e6:	inc    DWORD PTR [edi-0x2a3930ed]
  4179ec:	add    BYTE PTR [ebx-0x22ae044f],ch
  4179f2:	imul   esi,DWORD PTR [ebx],0x3702e917
  4179f8:	cmc    
  4179f9:	ins    DWORD PTR es:[edi],dx
  4179fa:	ret    
  4179fb:	sbb    eax,0xabdad9e9
  417a00:	dec    esp
  417a01:	call   0x7435e49a
  417a06:	outs   dx,BYTE PTR ds:[esi]
  417a07:	jo     0x417a2d
  417a09:	mov    ebp,DWORD PTR [esi]
  417a0b:	mov    DWORD PTR [edx],esp
  417a0d:	ficomp WORD PTR [ebx+ecx*1-0xed8e80b]
  417a14:	or     BYTE PTR ds:0x2454395b,bl
  417a1a:	xchg   edi,eax
  417a1b:	xchg   BYTE PTR [edi+esi*1],bl
  417a1e:	call   0xa4107589
  417a23:	xor    DWORD PTR [esi-0x7e569040],edx
  417a29:	push   esi
  417a2a:	sub    eax,DWORD PTR [ecx-0x112422f5]
  417a30:	or     DWORD PTR [ebx],ebx
  417a32:	push   ds
  417a33:	adc    BYTE PTR [eax],0x9c
  417a36:	mov    edi,0x4cb20034
  417a3b:	mov    DWORD PTR [eax],edx
  417a3d:	loop   0x417aa0
  417a3f:	cmp    al,0x65
  417a41:	loop   0x417aa2
  417a43:	dec    ebx
  417a44:	inc    ebx
  417a45:	push   0xb75fdd12
  417a4a:	out    dx,al
  417a4b:	out    dx,al
  417a4c:	mov    bl,BYTE PTR [edx]
  417a4e:	jp     0x417a29
  417a50:	test   eax,0x4d594de9
  417a55:	idiv   BYTE PTR [edi+0x23cdb917]
  417a5b:	jmp    0x4179ed
  417a5d:	adc    DWORD PTR [edx],eax
  417a5f:	ja     0x417a07
  417a61:	push   ebp
  417a62:	mov    dl,0x1d
  417a64:	imul   ebx,esi,0x15
  417a67:	dec    edi
  417a68:	push   eax
  417a69:	mov    esi,0xce815135
  417a6e:	into   
  417a6f:	jp     0x4179f2
  417a71:	mov    ah,0x9
  417a73:	stos   BYTE PTR es:[edi],al
  417a74:	add    cl,BYTE PTR [edx+0x2a]
  417a77:	out    dx,al
  417a78:	ds out 0x5f,al
  417a7b:	test   BYTE PTR [eax-0x56376a65],0x6f
  417a82:	mov    esi,0xd549803d
  417a87:	pop    ebp
  417a88:	mov    DWORD PTR [ebx-0x55],edx
  417a8b:	in     al,0xc9
  417a8d:	sub    eax,0x51027431
  417a92:	cli    
  417a93:	ins    BYTE PTR es:[edi],dx
  417a94:	adc    BYTE PTR [ebx-0x65],al
  417a97:	addr16 or eax,0x86bd329a
  417a9d:	xchg   DWORD PTR [ecx+0x28],edi
  417aa0:	das    
  417aa1:	mov    ch,0x35
  417aa3:	adc    DWORD PTR [ebp+0x375ce1c4],esi
  417aa9:	lds    ebx,FWORD PTR ds:0x42d2ac41
  417aaf:	data16 ins BYTE PTR es:[edi],dx
  417ab1:	aam    0x8e
  417ab3:	dec    esp
  417ab4:	jecxz  0x417aed
  417ab6:	lahf   
  417ab7:	pop    ebx
  417ab8:	call   0x2fc1:0x7cdc0096
  417abf:	jge    0x417ac6
  417ac1:	jnp    0x417b1e
  417ac3:	cli    
  417ac4:	add    DWORD PTR [ebp+0x426bfc12],edi
  417aca:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  417acc:	daa    
  417acd:	dec    edx
  417ace:	dec    ebx
  417acf:	aas    
  417ad0:	push   esi
  417ad1:	(bad)  
  417ad2:	rol    DWORD PTR [edx+0x77b90d57],1
  417ad8:	lods   al,BYTE PTR ds:[esi]
  417ad9:	sar    DWORD PTR [ecx+0x2314d689],cl
  417adf:	(bad)  
  417ae0:	and    eax,0x22354e7f
  417ae5:	ret    
  417ae6:	pop    ss
  417ae7:	inc    esp
  417ae8:	mov    edx,0x13c8ed24
  417aed:	sbb    cl,BYTE PTR [edi]
  417aef:	fcomi  st,st(6)
  417af1:	js     0x417b33
  417af3:	loop   0x417b68
  417af5:	clc    
  417af6:	xchg   DWORD PTR [ecx-0x4259949d],esp
  417afc:	inc    eax
  417afd:	ins    DWORD PTR es:[edi],dx
  417afe:	icebp  
  417aff:	dec    ebp
  417b00:	dec    edx
  417b01:	fldcw  WORD PTR [edi-0x73b3814]
  417b07:	adc    BYTE PTR [ebp+0x26],ch
  417b0a:	cli    
  417b0b:	daa    
  417b0c:	leave  
  417b0d:	gs push es
  417b0f:	jle    0x417b16
  417b11:	mov    ch,0xaa
  417b13:	sbb    dl,dl
  417b15:	cmp    cl,dh
  417b17:	pop    edx
  417b18:	gs (bad) 
  417b1a:	bound  esp,QWORD PTR ds:0x6559afa5
  417b20:	mov    bl,0x17
  417b22:	xor    BYTE PTR [ebp-0x4f],0x91
  417b26:	and    eax,0x6f4e5444
  417b2b:	pop    ebp
  417b2c:	jnp    0x417ab5
  417b2e:	mov    ebx,0xcb3377d2
  417b33:	ins    DWORD PTR es:[edi],dx
  417b34:	jecxz  0x417b05
  417b36:	inc    ebx
  417b37:	fcmovbe st,st(7)
  417b39:	fistp  QWORD PTR [ecx]
  417b3b:	test   DWORD PTR [edx+esi*8-0x57371a82],esp
  417b42:	add    dl,BYTE PTR [ebx+0x17df2ed7]
  417b48:	push   esi
  417b49:	xlat   BYTE PTR ds:[ebx]
  417b4a:	aad    0x4b
  417b4c:	sbb    esp,DWORD PTR [edx-0x4d6cd609]
  417b52:	gs (bad) 
  417b54:	xor    edx,DWORD PTR [ebp-0x26]
  417b57:	(bad)  
  417b58:	mov    ah,0xe9
  417b5a:	dec    ecx
  417b5b:	inc    eax
  417b5c:	push   0xfb6e9450
  417b61:	ret    
  417b62:	jmp    DWORD PTR [ebx-0x1023c5e4]
  417b68:	pop    edi
  417b69:	je     0x417b1a
  417b6b:	add    al,0x8e
  417b6d:	retf   0xb632
  417b70:	scas   al,BYTE PTR es:[edi]
  417b71:	xchg   ebp,eax
  417b72:	xchg   ebx,eax
  417b73:	(bad)  
  417b74:	cs lds ebx,FWORD PTR cs:[ebx+0x5d1422f]
  417b7c:	add    BYTE PTR [edx+0x2b5c88b1],cl
  417b82:	mov    ch,0xf6
  417b84:	test   BYTE PTR [edi],ch
  417b86:	adc    eax,0xe9339202
  417b8b:	cmp    al,0xb8
  417b8d:	dec    eax
  417b8e:	jle    0x417b8d
  417b90:	clc    
  417b91:	dec    eax
  417b92:	sub    ch,al
  417b94:	sub    dh,ah
  417b96:	fstp   DWORD PTR [edx]
  417b98:	inc    esi
  417b99:	pop    ebx
  417b9a:	push   es
  417b9b:	sbb    al,0x12
  417b9d:	push   ecx
  417b9e:	and    BYTE PTR [eax-0x6a8a959],bl
  417ba4:	pop    es
  417ba5:	jge    0x417c24
  417ba7:	retf   0x118b
  417baa:	(bad)  
  417bab:	pop    ecx
  417bac:	imul   esi,ebp,0x76f91283
  417bb2:	ror    esi,0x52
  417bb5:	mov    bh,al
  417bb7:	fnsave ds:[esi+0x5]
  417bbb:	sub    DWORD PTR [ebx-0x34],edi
  417bbe:	xchg   BYTE PTR ds:0x6d05a039,cl
  417bc4:	and    eax,0xd8500be7
  417bc9:	in     eax,dx
  417bca:	rol    DWORD PTR [edi+ecx*1+0x1554aaf],cl
  417bd1:	int    0x2e
  417bd3:	push   0x917f8890
  417bd8:	pop    ebx
  417bd9:	xlat   BYTE PTR ds:[ebx]
  417bda:	clc    
  417bdb:	jb     0x417b75
  417bdd:	or     bl,BYTE PTR [ebx]
  417bdf:	and    eax,0x2800fe3c
  417be4:	repz push 0x4e278dc3
  417bea:	xchg   esi,eax
  417beb:	ret    0xdce3
  417bee:	not    eax
  417bf0:	mov    esp,0x82a335c1
  417bf5:	add    eax,0x696ed90a
  417bfa:	div    BYTE PTR [esi+0x469c69e5]
  417c00:	mov    dl,0x29
  417c02:	inc    ecx
  417c03:	cdq    
  417c04:	xchg   esi,eax
  417c05:	jb     0x417c5c
  417c07:	push   ss
  417c08:	js     0x417bb6
  417c0a:	dec    ebp
  417c0b:	fdivp  st(4),st
  417c0d:	sub    ch,BYTE PTR [ebx-0x3c]
  417c10:	rcl    DWORD PTR [eax],1
  417c12:	or     DWORD PTR [edx+0x3b1214b5],0x9864fef5
  417c1c:	adc    al,0x46
  417c1f:	ds retf 
  417c21:	in     eax,0x62
  417c23:	popf   
  417c24:	test   al,0xc8
  417c26:	sbb    al,BYTE PTR [ebx+edx*4-0x7735c19d]
  417c2d:	xchg   esp,eax
  417c2e:	and    ah,ch
  417c30:	shl    BYTE PTR [edx+0x57],1
  417c33:	ds mov bh,0x4e
  417c36:	pop    esp
  417c37:	jecxz  0x417bde
  417c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c3a:	pop    ecx
  417c3b:	xchg   esi,eax
  417c3c:	(bad)  
  417c3d:	xchg   edi,eax
  417c3e:	xchg   edx,eax
  417c3f:	(bad)  
  417c40:	fist   DWORD PTR [ecx+0x67]
  417c43:	sub    al,0xab
  417c45:	add    eax,0x14f74897
  417c4a:	mov    esi,0x87ce2e46
  417c4f:	sbb    esp,DWORD PTR [edi-0xa868673]
  417c55:	sbb    DWORD PTR [edi-0x33],ecx
  417c58:	pop    eax
  417c59:	mov    esp,0xdddc6e4
  417c5e:	or     dl,BYTE PTR [ebp-0x502f316e]
  417c64:	dec    ebx
  417c65:	add    DWORD PTR [esi],ecx
  417c67:	mov    ch,0x30
  417c69:	xor    BYTE PTR [eax+0x13f1ec15],dl
  417c6f:	fwait
  417c70:	adc    DWORD PTR [edx-0x571cfef4],ebp
  417c76:	or     DWORD PTR [ebx-0x43],ebp
  417c79:	mov    al,0xd4
  417c7b:	pop    edi
  417c7c:	retf   
  417c7d:	mov    bh,0xf0
  417c7f:	push   ecx
  417c80:	or     BYTE PTR [ecx+edx*2-0x5328cd29],cl
  417c87:	mov    eax,0xff5f2e6a
  417c8c:	dec    eax
  417c8d:	ss push eax
  417c8f:	fild   QWORD PTR [ebp-0x1c]
  417c92:	adc    DWORD PTR [ebx+0x4],edi
  417c95:	sub    al,0xb6
  417c97:	xchg   sp,ax
  417c99:	pop    ecx
  417c9a:	shl    BYTE PTR [ebx+0x57],cl
  417c9d:	in     eax,0xe6
  417c9f:	xchg   BYTE PTR [edx+edi*1+0x7b],dl
  417ca3:	mov    ecx,0x66679141
  417ca8:	dec    esi
  417ca9:	xchg   ebx,eax
  417caa:	adc    DWORD PTR [ebx],ebp
  417cac:	jg     0x417ca3
  417cae:	icebp  
  417caf:	pop    ebp
  417cb0:	jne    0x417c8e
  417cb2:	test   eax,0x71159640
  417cb7:	fsub   QWORD PTR [edx+esi*2-0x22b07f67]
  417cbe:	dec    edi
  417cbf:	cmc    
  417cc0:	xchg   ebx,eax
  417cc1:	xchg   edx,eax
  417cc2:	push   edx
  417cc3:	ret    0x346c
  417cc6:	fcmovbe st,st(3)
  417cc8:	dec    eax
  417cc9:	or     BYTE PTR [edi-0x202ce834],dl
  417ccf:	cmp    esi,esi
  417cd1:	jg     0x417c6d
  417cd3:	clc    
  417cd4:	retf   0x59e
  417cd7:	and    DWORD PTR [ebp-0x6b7fc2f4],ebp
  417cdd:	retf   0x5547
  417ce0:	imul   edx,DWORD PTR [ebx-0x485368fe],0x51c03cef
  417cea:	push   eax
  417ceb:	nop
  417cec:	xchg   esi,eax
  417ced:	mov    edx,0xf4f77245
  417cf2:	dec    ebp
  417cf3:	pusha  
  417cf4:	xlat   BYTE PTR ds:[ebx]
  417cf5:	int    0xe8
  417cf7:	scas   al,BYTE PTR es:[edi]
  417cf8:	cmp    dl,dh
  417cfa:	cmc    
  417cfb:	mov    DWORD PTR [edi+0x7c],edx
  417cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cff:	fs jl  0x417d80
  417d02:	sbb    BYTE PTR [edx+0x7f],dh
  417d05:	cs pop ss
  417d07:	jae    0x417d27
  417d09:	and    DWORD PTR [edi-0x709e361d],ecx
  417d0f:	sbb    bh,BYTE PTR ds:0x918c0230
  417d15:	jae    0x417d7c
  417d17:	pop    esp
  417d18:	(bad)  
  417d19:	jno    0x417d32
  417d1b:	mov    ecx,0x992fe56c
  417d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d21:	push   ebx
  417d22:	push   eax
  417d23:	iret   
  417d24:	jmp    0x417cf5
  417d26:	mov    ebp,0x1f4ddfc5
  417d2b:	(bad)  
  417d2c:	aam    0x99
  417d2e:	add    ah,BYTE PTR [ecx+0x26]
  417d31:	inc    edx
  417d32:	jmp    0x417ce5
  417d34:	jbe    0x417cd1
  417d36:	imul   eax,DWORD PTR [esi-0x34],0x5e
  417d3a:	jbe    0x417d1d
  417d3c:	sub    BYTE PTR [ebx+edi*2-0x21],bh
  417d40:	call   0xbabd4872
  417d45:	sti    
  417d46:	jbe    0x417d21
  417d48:	dec    ch
  417d4a:	adc    al,0x29
  417d4c:	daa    
  417d4d:	ret    0xcc96
  417d50:	jbe    0x417db7
  417d52:	sbb    DWORD PTR [eax+esi*2],edi
  417d55:	nop
  417d56:	or     DWORD PTR [edi],esi
  417d58:	(bad)  
  417d59:	repz sub eax,0xe2d785c4
  417d5f:	mov    ebp,0x9cf7dc6
  417d64:	and    al,BYTE PTR [ecx-0x58025f06]
  417d6a:	outs   dx,BYTE PTR ds:[esi]
  417d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d6c:	xor    DWORD PTR [ecx-0x32],0xffffff96
  417d70:	inc    edi
  417d71:	cs scas al,BYTE PTR es:[edi]
  417d73:	or     al,0xdf
  417d75:	mov    esp,0x910d11d9
  417d7a:	push   es
  417d7b:	arpl   WORD PTR [ebx-0x52],sp
  417d7e:	shr    esi,cl
  417d80:	imul   ecx,DWORD PTR [ebx-0x59],0xffffffec
  417d84:	cld    
  417d85:	int    0xdc
  417d87:	test   eax,0xa5ca1f60
  417d8c:	popf   
  417d8d:	pop    ebp
  417d8e:	lods   eax,DWORD PTR ds:[esi]
  417d8f:	or     al,0x43
  417d91:	add    dh,BYTE PTR [edx-0x5b6991b]
  417d97:	jb     0x417d66
  417d99:	jmp    0x417d82
  417d9b:	inc    ebx
  417d9c:	dec    esi
  417d9d:	add    BYTE PTR [eax],dh
  417d9f:	daa    
  417da0:	idiv   BYTE PTR [ecx+0x23]
  417da3:	std    
  417da4:	mov    DWORD PTR [edi-0x7d],eax
  417da7:	stc    
  417da8:	fwait
  417da9:	scas   al,BYTE PTR es:[edi]
  417daa:	mov    fs,WORD PTR ds:0x6c6a2eb0
  417db0:	pusha  
  417db1:	repnz cmc 
  417db3:	xchg   edi,eax
  417db4:	xchg   DWORD PTR [bp+si],ebx
  417db7:	les    ecx,FWORD PTR [eax]
  417db9:	nop
  417dba:	das    
  417dbb:	ror    ecx,0xfe
  417dbe:	add    DWORD PTR [ecx],0x4417ecc1
  417dc4:	(bad)  
  417dc5:	push   edi
  417dc6:	mov    ebp,0x82dad653
  417dcb:	js     0x417dcb
  417dcd:	add    bh,BYTE PTR [eax+0x7ffff100]
  417dd3:	aas    
  417dd4:	ret    
  417dd5:	jne    0x417db3
  417dd7:	ss inc esp
  417dd9:	mov    DWORD PTR [eax],0x107e6ba2
  417ddf:	inc    ecx
  417de0:	push   0x365c630e
  417de5:	pop    edi
  417de6:	das    
  417de7:	repnz adc esp,DWORD PTR es:[ecx+0x636008da]
  417def:	fcom   QWORD PTR [edi-0x5f]
  417df2:	shl    DWORD PTR [esp+eax*4],0xf7
  417df6:	pop    ss
  417df7:	scas   al,BYTE PTR es:[edi]
  417df8:	in     eax,0x81
  417dfa:	xchg   ebp,eax
  417dfb:	sti    
  417dfc:	shl    DWORD PTR [esi-0x79d4799e],1
  417e02:	ds jl  0x417e4e
  417e05:	mov    al,0x97
  417e07:	arpl   WORD PTR [ebx+eiz*8-0xf],dx
  417e0b:	(bad)  
  417e0c:	dec    edi
  417e0d:	in     eax,0xee
  417e0f:	xchg   BYTE PTR [ecx+ebx*4],dl
  417e12:	cdq    
  417e13:	aas    
  417e14:	stos   BYTE PTR es:[edi],al
  417e15:	mov    WORD PTR [ecx],es
  417e17:	jno    0x417e45
  417e19:	cld    
  417e1a:	or     al,0x21
  417e1c:	into   
  417e1d:	and    BYTE PTR [eax+esi*1+0x55],bh
  417e21:	fsub   QWORD PTR [ebp+0x219d1571]
  417e27:	xor    DWORD PTR [esi+0x123d25ca],ecx
  417e2d:	cmp    al,0x82
  417e2f:	cmovb  eax,ebx
  417e32:	or     ecx,eax
  417e34:	adc    ch,BYTE PTR ds:0xd19ec706
  417e3a:	mov    DWORD PTR [ebp-0x75],eax
  417e3d:	jmp    0x417dfa
  417e3f:	call   0x5abd5e6f
  417e44:	or     eax,edx
  417e46:	mov    bh,0x83
  417e48:	mov    ds:0x9cdc1075,eax
  417e4d:	jns    0x417ec3
  417e4f:	jmp    0x417e5f
  417e51:	ror    edi,cl
  417e53:	sbb    bh,al
  417e55:	lock add BYTE PTR [esi+0x6d],0x21
  417e5a:	(bad)  
  417e5c:	iret   
  417e5d:	(bad)  
  417e5e:	cs xor BYTE PTR ss:[esi+0x288fcf03],dl
  417e66:	sub    DWORD PTR [ecx-0x6786e4cc],ebp
  417e6c:	jbe    0x417e3e
  417e6e:	retf   0x485c
  417e71:	les    edi,FWORD PTR [esi-0x30eaa1d]
  417e77:	xor    ebx,ebp
  417e79:	outs   dx,BYTE PTR ds:[esi]
  417e7a:	mov    ch,0x52
  417e7c:	popa   
  417e7d:	inc    ecx
  417e7e:	out    dx,al
  417e7f:	jnp    0x417ec7
  417e81:	dec    esp
  417e82:	jmp    0x417e91
  417e84:	iret   
  417e85:	retf   
  417e86:	xchg   ebx,eax
  417e87:	push   esi
  417e88:	mov    bl,0xc0
  417e8a:	lahf   
  417e8b:	ins    BYTE PTR es:[edi],dx
  417e8c:	ins    BYTE PTR es:[edi],dx
  417e8d:	imul   BYTE PTR [ecx-0x4d]
  417e90:	into   
  417e91:	fstp   TBYTE PTR [eax]
  417e93:	mov    dh,BYTE PTR es:[esi+eax*4+0x51b0abb4]
  417e9b:	push   ds
  417e9c:	enter  0xd5c6,0x44
  417ea0:	ja     0x417e80
  417ea2:	sub    eax,0x7f3c239a
  417ea7:	mov    ds:0x856b4b02,eax
  417eac:	cmc    
  417ead:	dec    esi
  417eae:	scas   al,BYTE PTR es:[edi]
  417eaf:	inc    ebp
  417eb0:	adc    al,0x65
  417eb2:	call   0x6a7:0xe45f9b7c
  417eb9:	sbb    BYTE PTR [edi+0x5a],dh
  417ebc:	push   cs
  417ebd:	inc    esp
  417ebe:	sub    al,0xcc
  417ec0:	and    bh,dl
  417ec2:	dec    esp
  417ec3:	imul   esp,DWORD PTR [esi],0xfffffff3
  417ec6:	stos   DWORD PTR es:[edi],eax
  417ec7:	push   esp
  417ec8:	out    dx,al
  417ec9:	mov    WORD PTR [ecx],gs
  417ecb:	add    al,0xb
  417ecd:	pop    ebx
  417ece:	inc    eax
  417ecf:	xor    al,0xf1
  417ed1:	push   es
  417ed2:	mov    al,ds:0x31f0908a
  417ed7:	jmp    0xea5db8e0
  417edc:	push   0x62
  417ede:	call   DWORD PTR [edx-0xf]
  417ee1:	aaa    
  417ee2:	add    DWORD PTR ds:0x3ee113b5,0xc31bc8b8
  417eec:	mov    ss,WORD PTR [edi-0x3]
  417eef:	jmp    0x2f56ce31
  417ef4:	loop   0x417f4e
  417ef6:	stos   DWORD PTR es:[edi],eax
  417ef7:	fisttp QWORD PTR [esi+0x106a5f55]
  417efd:	pop    esp
  417efe:	sbb    al,0xaf
  417f00:	rcr    DWORD PTR [ebx],0x9e
  417f03:	js     0x417f5a
  417f05:	enter  0xcdc8,0x84
  417f09:	fld    QWORD PTR [ebp-0x214186c9]
  417f0f:	sub    al,0xb7
  417f11:	mov    esp,0xf393bdd2
  417f16:	adc    eax,0x78c01756
  417f1b:	fadd   DWORD PTR [eax-0x4d]
  417f1e:	sbb    al,0xbc
  417f20:	test   eax,0x315a01ec
  417f25:	push   eax
  417f26:	jno    0x417f25
  417f28:	cmc    
  417f29:	inc    esi
  417f2a:	je     0x417fa9
  417f2c:	sti    
  417f2d:	adc    edx,DWORD PTR [edx]
  417f2f:	dec    ebp
  417f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f31:	inc    eax
  417f32:	pushf  
  417f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f34:	ins    DWORD PTR es:[edi],dx
  417f35:	sbb    eax,0x1c6874a
  417f3a:	or     al,0x49
  417f3c:	sbb    BYTE PTR [ebx],0xaa
  417f3f:	fdivr  QWORD PTR [ecx+0x73]
  417f42:	clc    
  417f43:	mov    bh,0x64
  417f45:	mul    DWORD PTR ds:0xedc01d5f
  417f4b:	adc    al,0xaa
  417f4d:	dec    edx
  417f4e:	xor    al,0x20
  417f50:	xchg   edi,eax
  417f51:	sbb    al,0x87
  417f53:	mov    ?,WORD PTR [ebx+0x7a]
  417f56:	cmp    DWORD PTR [ebp+0x23],ebp
  417f59:	retf   0x724f
  417f5c:	nop
  417f5d:	neg    DWORD PTR [ebx+0x30]
  417f60:	js     0x417f34
  417f62:	rol    DWORD PTR [ebx+0x97d4d4a],1
  417f68:	ret    
  417f69:	aam    0xc6
  417f6b:	push   eax
  417f6c:	(bad)  
  417f6e:	dec    ecx
  417f6f:	out    0x1e,al
  417f71:	inc    edi
  417f72:	push   ebx
  417f73:	xchg   DWORD PTR [esi-0x15],eax
  417f76:	sbb    al,0x49
  417f78:	ds xor eax,0x34d35e43
  417f7e:	les    ecx,FWORD PTR fs:[edi]
  417f81:	cld    
  417f82:	xor    esp,ebp
  417f84:	dec    esp
  417f85:	dec    esi
  417f86:	test   al,0x34
  417f88:	lock mov esi,0xf9d6344c
  417f8e:	add    eax,0x8ce06890
  417f93:	inc    edx
  417f94:	rol    cl,cl
  417f96:	xor    DWORD PTR [edx],esi
  417f98:	ds in  eax,dx
  417f9a:	mov    ch,BYTE PTR [esp+eiz*4]
  417f9d:	pop    ebx
  417f9e:	dec    esi
  417f9f:	sbb    eax,0x3c4734ca
  417fa4:	adc    ch,bh
  417fa6:	dec    edi
  417fa7:	or     al,0x77
  417fa9:	mov    dh,0xd1
  417fab:	retf   
  417fac:	and    eax,0x3ee4ada5
  417fb1:	mov    bl,BYTE PTR ds:0xaf09ce9
  417fb7:	daa    
  417fb8:	rcr    edi,1
  417fba:	ss loop 0x417f99
  417fbd:	mov    esi,0x19a3e0b3
  417fc2:	push   0x7
  417fc4:	(bad)  
  417fc5:	mov    esi,0xaf861ff0
  417fca:	mov    edi,0xf1ae7311
  417fcf:	mov    ebp,0x5e70e5cf
  417fd4:	ret    
  417fd5:	and    al,0x3f
  417fd7:	dec    edi
  417fd8:	jo     0x417fb4
  417fda:	cmp    BYTE PTR [edx+0x3dac7a5c],ah
  417fe0:	mov    WORD PTR [eax],ss
  417fe2:	neg    BYTE PTR [edx]
  417fe4:	and    al,0xe7
  417fe6:	cmp    ah,ah
  417fe8:	mov    ebx,0x530fdb66
  417fed:	push   cs
  417fee:	and    al,0x38
  417ff0:	sub    al,bh
  417ff2:	mov    ds:0x289894f,eax
  417ff7:	sbb    BYTE PTR [ebp+0x388e000],ah
  417ffd:	(bad)  
  417ffe:	xor    al,0xd3
  418000:	cwde   
  418001:	cmp    DWORD PTR [esi-0x73],ecx
  418004:	xchg   edi,eax
  418005:	pop    ss
  418006:	imul   al
  418008:	and    al,0xb6
  41800a:	xchg   ah,dh
  41800c:	cld    
  41800d:	daa    
  41800e:	cld    
  41800f:	add    BYTE PTR [eax],al
  418011:	aam    0xb0
  418013:	or     eax,0x682fb137
  418018:	push   eax
  418019:	fwait
  41801a:	es adc al,0x2b
  41801d:	test   ebp,0x4bee8f04
  418023:	sbb    bl,bh
  418025:	jge    0x418031
  418027:	xchg   edi,eax
  418028:	and    ebp,esp
  41802a:	int    0xe2
  41802c:	push   0xaf496001
  418031:	sbb    BYTE PTR [ebp-0x206693be],cl
  418037:	pop    es
  418038:	ds inc ecx
  41803a:	sbb    DWORD PTR [esi-0x48ba881b],edx
  418040:	xchg   edx,eax
  418041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418042:	sub    al,0x55
  418044:	adc    ah,BYTE PTR [ecx+0x46]
  418047:	std    
  418048:	cwde   
  418049:	in     eax,dx
  41804a:	inc    ebp
  41804b:	popa   
  41804c:	xor    eax,0x976e0df5
  418051:	sub    al,0x2f
  418053:	pop    esp
  418054:	xor    eax,0x7fec327a
  418059:	pop    DWORD PTR [ebx]
  41805b:	mov    ah,0x14
  41805d:	ret    0xc3fd
  418060:	in     eax,dx
  418061:	mov    dl,0x1b
  418063:	cmp    DWORD PTR ds:0x197a87ab,ebx
  418069:	aas    
  41806a:	adc    eax,0x40990219
  41806f:	xor    eax,0x557a7b53
  418074:	jp     0x41805a
  418076:	out    0x5e,al
  418078:	pop    edi
  418079:	push   edi
  41807a:	or     al,0x1c
  41807c:	outs   dx,DWORD PTR ds:[esi]
  41807d:	adc    al,0xe6
  41807f:	mov    ds:0x7730e50a,al
  418084:	mov    bl,0xc9
  418086:	inc    esp
  418087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418088:	jl     0x41800e
  41808a:	ror    BYTE PTR [ecx],cl
  41808c:	popa   
  41808d:	jge    0x418085
  41808f:	sti    
  418090:	popf   
  418091:	out    0x52,eax
  418093:	xor    DWORD PTR [edx-0x12],ebp
  418096:	dec    ebp
  418097:	cmc    
  418098:	iret   
  418099:	jae    0x418030
  41809b:	push   ebx
  41809c:	cmp    al,BYTE PTR [eax]
  41809e:	lock out dx,al
  4180a0:	mov    edx,0xbef425f5
  4180a5:	daa    
  4180a6:	sbb    eax,0x13b8109a
  4180ab:	je     0x7092825
  4180b1:	adc    ebx,ebx
  4180b3:	add    BYTE PTR [ebp+0x388d9af5],dh
  4180b9:	inc    esp
  4180ba:	test   esi,edi
  4180bc:	xor    esp,DWORD PTR [edx-0x2677ac89]
  4180c2:	inc    ebp
  4180c3:	(bad)  
  4180c5:	add    edx,ebp
  4180c7:	xor    al,0x5d
  4180c9:	cmp    ecx,DWORD PTR [ebx+0x4ccfaf3d]
  4180cf:	cmp    dl,ah
  4180d1:	int    0xa
  4180d3:	mov    ds:0xe7af62e4,eax
  4180d8:	mov    al,0x1
  4180da:	xor    al,0x2d
  4180dc:	in     eax,0xc6
  4180de:	jno    0x4180a4
  4180e0:	in     eax,dx
  4180e1:	mov    edi,0x42fd6478
  4180e6:	mov    edi,0x8b98bd6b
  4180eb:	or     BYTE PTR [eax],bh
  4180ed:	jl     0x4180ad
  4180ef:	cmp    eax,0xf49a6cc2
  4180f4:	(bad)  
  4180f5:	ja     0x41816b
  4180f7:	dec    ebx
  4180f8:	retf   
  4180f9:	mov    WORD PTR [ebx-0x40],ss
  4180fc:	jmp    FWORD PTR [edx+0x32]
  4180ff:	pop    edi
  418101:	shl    DWORD PTR [ebx],cl
  418103:	or     BYTE PTR [ebx],0xa7
  418106:	loop   0x41816b
  418108:	jo     0x41814a
  41810a:	mul    ah
  41810c:	cdq    
  41810d:	sub    BYTE PTR cs:[ebx-0x75],ch
  418111:	sub    esp,ecx
  418113:	ss clc 
  418115:	je     0x4180bf
  418117:	ss in  al,dx
  418119:	mov    eax,ds:0x16c004cb
  41811e:	out    0x4e,eax
  418120:	es cmp esp,edi
  418123:	mov    ch,0x29
  418125:	xor    dl,BYTE PTR [ecx-0x5d]
  418128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418129:	adc    al,0x17
  41812b:	mov    edi,0xe35f9a3a
  418130:	xchg   ebp,eax
  418131:	pop    es
  418132:	out    0x6c,al
  418134:	fmul   QWORD PTR [esi-0x29ec5406]
  41813a:	cli    
  41813b:	iret   
  41813c:	dec    esi
  41813d:	pop    ebp
  41813e:	dec    ebp
  41813f:	xchg   ecx,eax
  418140:	rcr    BYTE PTR [ebx+edx*1],cl
  418143:	mov    edx,0xf9e0b865
  418148:	jmp    0x41811e
  41814a:	pop    es
  41814b:	inc    ecx
  41814c:	jl     0x418185
  41814e:	(bad)  
  41814f:	push   ebx
  418150:	sar    BYTE PTR ds:0xab86a94,cl
  418156:	cmc    
  418157:	je     0x41818a
  418159:	(bad)  
  41815a:	mov    ecx,0xace78529
  41815f:	mov    bl,BYTE PTR [ecx]
  418161:	or     bl,BYTE PTR [edi+0x321a3c49]
  418167:	aam    0x83
  418169:	pusha  
  41816a:	dec    ecx
  41816b:	loopne 0x4180fa
  41816d:	pop    ebp
  41816e:	out    0x9a,al
  418170:	adc    bh,BYTE PTR [edx+0x29bd60d7]
  418176:	dec    esi
  418177:	xor    DWORD PTR [esi-0x38],0xd0056b6b
  41817e:	dec    edx
  41817f:	fisubr WORD PTR [ecx+0x18712cab]
  418185:	mov    BYTE PTR [ebx+0x612a4909],al
  41818b:	jmp    0x829021c7
  418190:	fist   WORD PTR [edi+0x61]
  418193:	cmp    al,0x6b
  418195:	(bad)  
  418196:	aas    
  418197:	sahf   
  418198:	fsubr  st,st(4)
  41819a:	rol    al,1
  41819c:	inc    esp
  41819d:	mov    ecx,DWORD PTR [eax+0x1a]
  4181a0:	cli    
  4181a1:	mov    ds:0x711dcffd,eax
  4181a6:	mov    DWORD PTR [ecx+0x779e0db6],eax
  4181ac:	call   0x8021:0x4a7eb109
  4181b3:	lock in eax,0xd2
  4181b6:	mov    cl,BYTE PTR [ecx+0x15]
  4181b9:	mov    ch,0xb3
  4181bb:	fsubr  QWORD PTR [edx+0x449270f3]
  4181c1:	call   0x2412931d
  4181c6:	out    dx,al
  4181c7:	(bad)  
  4181c8:	pop    eax
  4181c9:	cmp    bh,BYTE PTR [edi-0x2]
  4181cc:	sub    al,0x91
  4181ce:	ins    BYTE PTR es:[edi],dx
  4181cf:	dec    edi
  4181d0:	aas    
  4181d1:	addr16 repnz (bad) 
  4181d4:	mov    eax,0x12df62ef
  4181d9:	imul   ebx,DWORD PTR [edx+0x64],0x5a
  4181dd:	icebp  
  4181de:	adc    BYTE PTR [ebx],bl
  4181e0:	fld    DWORD PTR [edi+0x17]
  4181e3:	lahf   
  4181e4:	into   
  4181e5:	push   0xffffff8e
  4181e7:	js     0x4181d4
  4181e9:	cmp    ecx,edi
  4181eb:	mov    edi,0xa0205806
  4181f0:	inc    ebx
  4181f1:	adc    DWORD PTR [eax-0x631d8165],0x7
  4181f8:	push   esi
  4181f9:	pop    ss
  4181fa:	add    ecx,edx
  4181fc:	dec    ecx
  4181fd:	sti    
  4181fe:	mov    ch,0xe3
  418200:	cld    
  418201:	pop    edi
  418202:	loope  0x418258
  418204:	out    dx,al
  418205:	enter  0x2abb,0xc9
  418209:	add    al,0xab
  41820b:	aas    
  41820c:	popf   
  41820d:	fdivr  DWORD PTR [ebx+0x10]
  418210:	jae    0x418246
  418212:	bnd jno 0x418273
  418215:	test   DWORD PTR [edi+0x25],0x6627fdb7
  41821c:	xchg   BYTE PTR [ebx+0x4],ah
  41821f:	inc    edx
  418220:	xchg   DWORD PTR [ebx],esi
  418222:	or     DWORD PTR [esi+0x60d0f2a],0xae03992d
  41822c:	pop    esp
  41822d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41822e:	dec    ecx
  41822f:	ins    BYTE PTR es:[edi],dx
  418230:	sbb    DWORD PTR [edx-0x67],eax
  418233:	xchg   edi,eax
  418234:	rol    BYTE PTR ds:0x530be782,cl
  41823a:	call   0xfe44:0xe2cdc143
  418241:	lahf   
  418242:	sahf   
  418243:	and    BYTE PTR [eax-0x479714fe],0xe6
  41824a:	sti    
  41824b:	push   ds
  41824c:	mov    ds:0xb42006b0,eax
  418251:	add    eax,0x85189ee9
  418256:	jecxz  0x41821d
  418258:	xor    al,0x7d
  41825a:	repnz dec esp
  41825c:	mov    ch,0x27
  41825e:	repnz dec ebp
  418260:	into   
  418261:	in     eax,dx
  418262:	and    eax,0x8f1718c0
  418267:	cli    
  418268:	add    DWORD PTR [esi],esp
  41826a:	(bad)  
  41826b:	cmp    esi,0x6d7d950a
  418271:	gs into 
  418273:	add    cl,dh
  418275:	jp     0x4182e6
  418277:	call   0x2636:0xd87db526
  41827e:	std    
  41827f:	imul   DWORD PTR [ecx+0x5950e588]
  418285:	cmp    BYTE PTR [edx+eiz*2-0x2b],0x51
  41828a:	shl    ebx,cl
  41828c:	mov    cs,WORD PTR [ecx]
  41828e:	pop    edx
  41828f:	dec    ebp
  418290:	and    eax,0x14e53c1a
  418295:	mov    bl,0x7f
  418297:	sbb    ebx,0xa63845d8
  41829d:	dec    esp
  41829e:	dec    ebp
  41829f:	xchg   edx,eax
  4182a0:	sbb    eax,0x5428f793
  4182a5:	ret    
  4182a6:	(bad)  
  4182a8:	push   esp
  4182a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182aa:	pop    ds
  4182ab:	and    DWORD PTR [esi+0x6],esp
  4182ae:	dec    edx
  4182af:	inc    ecx
  4182b0:	and    ecx,ebx
  4182b2:	xchg   esi,eax
  4182b3:	cmp    bl,BYTE PTR [ebp+ebx*1+0x16d58afc]
  4182ba:	dec    esp
  4182bb:	repnz les edi,FWORD PTR [bx]
  4182bf:	mov    WORD PTR [edx-0x59df2217],fs
  4182c5:	jge    0x4182d1
  4182c7:	jp     0x418299
  4182c9:	mov    ds:0x388d87eb,al
  4182ce:	adc    bl,ah
  4182d0:	pop    ss
  4182d1:	jb     0x418324
  4182d3:	sub    BYTE PTR [edx+0x7ac893e4],ch
  4182d9:	push   ds
  4182da:	int3   
  4182db:	or     cl,BYTE PTR [edi]
  4182dd:	xor    edi,DWORD PTR [ebx-0x18]
  4182e0:	mov    al,ds:0xc3b8987d
  4182e5:	pushf  
  4182e6:	add    al,0x2e
  4182e8:	or     eax,0xbf6a8d5d
  4182ed:	lods   eax,DWORD PTR ds:[esi]
  4182ee:	call   0xa25aae0e
  4182f3:	iret   
  4182f4:	xor    dl,BYTE PTR [edx+0x98046bb]
  4182fa:	xor    DWORD PTR [edi],ebp
  4182fc:	jb     0x418319
  4182fe:	loop   0x41837a
  418300:	dec    DWORD PTR [ebx]
  418302:	fistp  QWORD PTR [ecx]
  418304:	int    0x42
  418306:	xor    DWORD PTR [ebp-0x568ea3ff],0xffffff8f
  41830d:	push   ebx
  41830e:	es (bad) 
  418310:	call   0x6fe5:0x6a716450
  418317:	sub    DWORD PTR [eax],0x37
  41831a:	loop   0x4182bb
  41831c:	sbb    al,0x7e
  41831e:	mov    bl,0x97
  418320:	ror    dl,cl
  418322:	mov    esp,ds
  418324:	jg     0x418373
  418326:	shl    ah,0x7c
  418329:	push   ebx
  41832a:	lock xchg dl,al
  41832d:	fidivr DWORD PTR [edx+0x5]
  418330:	mov    DWORD PTR [ebp+0x2d],esi
  418333:	mov    ecx,cr7
  418336:	mov    ecx,0x62727d54
  41833b:	xchg   ebp,eax
  41833c:	in     al,dx
  41833d:	ss push cs
  41833f:	cmp    edx,DWORD PTR [ecx-0x62]
  418342:	mov    eax,ds:0x82a96e41
  418347:	push   ebp
  418348:	(bad)  
  418349:	push   ss
  41834a:	sub    DWORD PTR [ecx+0x54],esi
  41834d:	push   edx
  41834e:	stos   DWORD PTR es:[edi],eax
  41834f:	add    al,0x7d
  418351:	and    BYTE PTR [edi-0x184d4af1],bl
  418357:	shl    DWORD PTR [ebx-0x32bac972],0xb1
  41835e:	stos   DWORD PTR es:[edi],eax
  41835f:	lea    esi,[ecx+0x26aa41b5]
  418365:	sbb    ah,ch
  418367:	push   edi
  418368:	imul   edx,DWORD PTR [ebx+0x1a],0xa9c50a89
  41836f:	int3   
  418370:	mov    ebp,0xec184046
  418375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418376:	adc    BYTE PTR [ecx-0x151a7952],dh
  41837c:	xchg   ebx,eax
  41837d:	dec    edi
  41837e:	ins    BYTE PTR es:[edi],dx
  41837f:	cli    
  418380:	pop    ecx
  418381:	sub    BYTE PTR [edi-0xfbb443b],dl
  418387:	push   0x820696c9
  41838c:	cmp    bl,BYTE PTR [ebx-0x249e094e]
  418392:	xlat   BYTE PTR ds:[ebx]
  418393:	mov    esi,0x4bf9790c
  418398:	rcr    BYTE PTR [ecx+eax*4-0x75ae579b],0xc
  4183a0:	inc    esp
  4183a1:	mov    eax,0x6dbef667
  4183a6:	outs   dx,DWORD PTR ds:[esi]
  4183a7:	(bad)  
  4183a8:	iret   
  4183a9:	popa   
  4183aa:	dec    ebx
  4183ab:	sub    BYTE PTR [edi-0x9],bl
  4183ae:	shl    DWORD PTR ds:0x1165b8f6,cl
  4183b4:	add    DWORD PTR [edx-0x1],eax
  4183b7:	sti    
  4183b8:	or     DWORD PTR [ecx-0x3820d046],ebp
  4183be:	push   edi
  4183bf:	lock xchg DWORD PTR [ebx-0x7cde858c],ebp
  4183c6:	cmp    DWORD PTR [eax-0x1164935b],0x7a
  4183cd:	push   ecx
  4183ce:	(bad)  
  4183cf:	out    0x62,eax
  4183d1:	jo     0x418406
  4183d3:	push   0x63d61c94
  4183d8:	neg    DWORD PTR [ebp+0x68]
  4183db:	sbb    BYTE PTR [ecx],dh
  4183dd:	in     eax,0xf6
  4183df:	xor    eax,0x7f04520d
  4183e4:	int3   
  4183e5:	lds    eax,FWORD PTR [edx-0x1aa69551]
  4183eb:	repz or eax,0x1b20f3fc
  4183f1:	mov    dl,0xed
  4183f3:	mov    edx,0x951a24ef
  4183f8:	xor    DWORD PTR [edx],ebx
  4183fa:	sub    al,0xf9
  4183fc:	std    
  4183fd:	fmul   QWORD PTR [eax]
  4183ff:	adc    eax,0xb8514243
  418404:	pop    esi
  418405:	adc    DWORD PTR [edx+ebp*1+0x6d4c83ab],edi
  41840c:	pusha  
  41840d:	sbb    al,0x24
  41840f:	(bad)  
  418410:	cmc    
  418411:	push   ecx
  418412:	inc    edi
  418413:	inc    esp
  418414:	hlt    
  418415:	jbe    0x4183f8
  418417:	in     eax,0xac
  418419:	push   ds
  41841a:	xchg   BYTE PTR [ecx+0x6c],bl
  41841d:	and    DWORD PTR [ecx-0x24],ebx
  418420:	sbb    DWORD PTR [ecx-0x39],0x21
  418424:	jmp    0x4e5097a1
  418429:	neg    DWORD PTR [ebx-0x5d]
  41842c:	dec    ebx
  41842d:	cmp    al,0x22
  41842f:	daa    
  418430:	test   eax,0xf8ce866d
  418435:	sub    bl,BYTE PTR [ebx+edi*4]
  418438:	mov    BYTE PTR [ebx],bh
  41843a:	xor    ah,BYTE PTR [eax-0xd]
  41843d:	les    ecx,FWORD PTR [ecx+0x1d8c6d8b]
  418443:	cmp    esp,esi
  418445:	rcr    DWORD PTR [edi-0x2293ddf],1
  41844b:	dec    edi
  41844c:	aad    0x7e
  41844e:	aas    
  41844f:	shl    BYTE PTR ds:0xfd1c4327,1
  418455:	ins    BYTE PTR es:[edi],dx
  418456:	call   0xdc44:0x348bade0
  41845d:	push   esp
  41845e:	pop    edi
  41845f:	mov    esi,DWORD PTR [edx-0x68]
  418462:	loop   0x418413
  418464:	pop    ebp
  418465:	iret   
  418466:	(bad)  
  418467:	aaa    
  418468:	jb     0x4184b8
  41846a:	retf   
  41846b:	hlt    
  41846c:	sub    DWORD PTR [edx],0x4b
  41846f:	adc    dh,BYTE PTR [ecx-0x5d7f85de]
  418475:	push   ebx
  418476:	dec    ecx
  418477:	outs   dx,DWORD PTR ds:[esi]
  418478:	out    dx,eax
  418479:	fs push ebx
  41847b:	cmp    DWORD PTR [ecx],ebx
  41847d:	cmp    DWORD PTR [edi],0xfca47358
  418483:	mov    esi,0xf7fb6b2d
  418489:	xchg   esi,eax
  41848a:	xor    BYTE PTR [bp+si],0x4
  41848e:	mov    dl,0x4c
  418490:	adc    al,cl
  418492:	adc    al,0x83
  418494:	pushf  
  418495:	adc    eax,DWORD PTR [esp+ebp*8]
  418498:	outs   dx,BYTE PTR ds:[esi]
  418499:	stos   BYTE PTR es:[edi],al
  41849a:	bound  ebp,QWORD PTR [ebp+0x11d45039]
  4184a0:	adc    eax,0x52e396f8
  4184a5:	sbb    eax,0x5f5bfd42
  4184aa:	xor    bl,ah
  4184ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184ad:	jnp    0x418491
  4184af:	fcomp  QWORD PTR [esi-0x6b6e97d7]
  4184b5:	push   es
  4184b6:	jmp    0x4184fa
  4184b8:	push   ecx
  4184b9:	mov    esi,0x1b47b09
  4184be:	mov    eax,ds:0x5e7f0880
  4184c3:	jno    0x418511
  4184c5:	pushf  
  4184c6:	lods   al,BYTE PTR ds:[esi]
  4184c7:	sub    al,0x17
  4184c9:	cmp    BYTE PTR [ebp-0x1d],cl
  4184cc:	icebp  
  4184cd:	test   BYTE PTR [ecx-0x3be22fc9],bl
  4184d3:	xchg   ecx,eax
  4184d4:	add    eax,0x87d14c5d
  4184d9:	jl     0x4184b4
  4184db:	lods   al,BYTE PTR ds:[esi]
  4184dc:	cmp    BYTE PTR [edi+ebp*1-0x5f6efc2],al
  4184e3:	push   0xbf785e78
  4184e8:	in     al,dx
  4184e9:	sbb    BYTE PTR [esi+0x1c61d647],0x12
  4184f0:	cmp    ch,dh
  4184f2:	inc    esi
  4184f3:	jecxz  0x418509
  4184f5:	(bad)  
  4184f6:	sbb    al,0x62
  4184f8:	inc    esp
  4184f9:	in     al,dx
  4184fa:	and    dh,cl
  4184fc:	fld    TBYTE PTR [edx]
  4184fe:	sahf   
  4184ff:	lods   eax,DWORD PTR ds:[esi]
  418500:	xor    DWORD PTR [eax-0x15a4b725],edi
  418506:	ja     0x4184b3
  418508:	xchg   ecx,eax
  418509:	sbb    dl,bl
  41850b:	pop    esp
  41850c:	out    dx,eax
  41850d:	ins    BYTE PTR es:[edi],dx
  41850e:	ss clc 
  418510:	out    0x20,eax
  418512:	sahf   
  418513:	mov    esi,0x589667f3
  418518:	jnp    0x418560
  41851a:	or     WORD PTR [edx-0x56],bp
  41851e:	retf   
  41851f:	and    edx,edi
  418521:	lock iret 
  418523:	stos   BYTE PTR es:[edi],al
  418524:	and    ecx,esp
  418526:	pop    esp
  418527:	push   es
  418528:	add    BYTE PTR [esi],cl
  41852a:	cdq    
  41852b:	push   ebp
  41852c:	mov    bl,BYTE PTR [ebx]
  41852e:	sub    al,dh
  418530:	sub    BYTE PTR [ecx],0xb
  418533:	push   edi
  418534:	dec    esp
  418535:	add    bh,al
  418537:	cmc    
  418538:	jmp    0x3c3589af
  41853d:	fadd   st,st(6)
  41853f:	pop    ds
  418540:	sar    DWORD PTR [ebx],0x4d
  418543:	xchg   ebx,eax
  418544:	inc    edx
  418545:	fdivrp st(4),st
  418547:	mov    edx,DWORD PTR [edx]
  418549:	out    0x28,eax
  41854b:	pop    ss
  41854c:	cmp    al,0x27
  41854e:	sti    
  41854f:	fisttp DWORD PTR [ecx-0x6d]
  418552:	jmp    0x4d1ddc74
  418557:	mov    ecx,0x808cbb02
  41855c:	jg     0x418515
  41855e:	fidivr WORD PTR [esi+0x133e31f2]
  418564:	dec    ecx
  418565:	cmp    BYTE PTR [edx],0x20
  418568:	outs   dx,DWORD PTR ds:[esi]
  418569:	loope  0x418552
  41856b:	add    eax,DWORD PTR [ebx]
  41856d:	addr16 inc ecx
  41856f:	cmp    DWORD PTR [ebp+0x3c],ebp
  418572:	push   ds
  418573:	lahf   
  418574:	scas   al,BYTE PTR es:[edi]
  418575:	and    ebx,DWORD PTR [eax+0xc0bd7e]
  41857b:	pop    esi
  41857c:	mov    WORD PTR [ebp-0x3fa750d3],cs
  418582:	cmp    dh,BYTE PTR [esi]
  418584:	(bad)  [ebx-0x69]
  418587:	xchg   ebp,eax
  418588:	mov    al,0x18
  41858a:	jg     0x41858c
  41858c:	sub    BYTE PTR [eax+ebp*4],cl
  41858f:	scas   eax,DWORD PTR es:[edi]
  418590:	je     0x41854d
  418592:	or     DWORD PTR [edx-0x18],ebp
  418595:	ss aas 
  418597:	jae    0x418544
  418599:	out    dx,al
  41859a:	jns    0x4185cb
  41859c:	iret   
  41859d:	pop    eax
  41859e:	cmp    al,0x37
  4185a0:	xor    cl,BYTE PTR [edi-0x6d]
  4185a3:	push   es
  4185a4:	sahf   
  4185a5:	inc    eax
  4185a6:	push   cs
  4185a7:	out    dx,al
  4185a8:	enter  0x810a,0x2d
  4185ac:	mov    al,BYTE PTR [edi+0x6f]
  4185af:	les    edi,FWORD PTR [edi]
  4185b1:	jge    0x418629
  4185b3:	and    ebp,DWORD PTR [ebx-0x4b]
  4185b6:	sub    al,0xa4
  4185b8:	mov    ds:0x90c327ad,eax
  4185bd:	repz pop ds
  4185bf:	or     esp,0x43
  4185c2:	adc    edi,ecx
  4185c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185c5:	mov    al,0x9a
  4185c7:	sbb    BYTE PTR [edi],dh
  4185c9:	pop    ecx
  4185ca:	aam    0x8d
  4185cc:	dec    eax
  4185cd:	jge    0x418553
  4185cf:	ja     0x418573
  4185d1:	outs   dx,DWORD PTR ds:[esi]
  4185d2:	loop   0x4185f6
  4185d4:	outs   dx,BYTE PTR ds:[esi]
  4185d5:	xchg   DWORD PTR [eax],edi
  4185d7:	add    eax,0x502f776c
  4185dc:	jecxz  0x41855f
  4185de:	mov    ecx,0xc2d7f856
  4185e4:	in     al,dx
  4185e5:	out    dx,al
  4185e6:	sbb    al,BYTE PTR [eax]
  4185e8:	jl     0x4185b8
  4185ea:	rol    BYTE PTR [edi+0x672a2602],1
  4185f0:	push   esi
  4185f1:	es fwait
  4185f3:	cmp    eax,0xacf268a4
  4185f8:	outs   dx,BYTE PTR ds:[esi]
  4185f9:	fimul  WORD PTR [ecx]
  4185fb:	xchg   edi,eax
  4185fc:	mov    ds:0xba38d73b,al
  418601:	in     eax,dx
  418602:	adc    al,0x8a
  418604:	sub    eax,0x23475fc
  418609:	fwait
  41860a:	sub    BYTE PTR [eax],al
  41860c:	test   BYTE PTR [esi-0x9],bl
  41860f:	or     ah,BYTE PTR [eax+0x2f0452de]
  418615:	fmul   QWORD PTR [ebp+0x5b40050c]
  41861b:	repz aad 0x57
  41861e:	or     BYTE PTR [edi+0x36],dl
  418621:	(bad)  
  418622:	xor    esi,DWORD PTR [edx]
  418624:	xchg   DWORD PTR [ecx+ebx*8-0x1c1f3868],ebx
  41862b:	sbb    al,0x71
  41862d:	clc    
  41862e:	add    dl,BYTE PTR [ecx-0x7a]
  418631:	mov    ah,dh
  418633:	add    DWORD PTR fs:[edx],0xaece413a
  41863a:	add    DWORD PTR cs:[ebx+eax*4-0x3a],edx
  41863f:	ja     0x418661
  418641:	outs   dx,DWORD PTR ds:[esi]
  418642:	into   
  418643:	mov    ebp,edx
  418645:	jne    0x4185dd
  418647:	(bad)  
  418648:	stc    
  418649:	mov    ds,ecx
  41864b:	mov    cl,0xd1
  41864d:	shr    BYTE PTR [ecx],cl
  41864f:	or     BYTE PTR [ecx+0x4d04fe43],0x82
  418656:	pop    ebp
  418657:	mov    dl,bh
  418659:	lods   al,BYTE PTR ds:[esi]
  41865a:	add    al,0xf2
  41865c:	outs   dx,DWORD PTR ds:[esi]
  41865d:	xchg   ecx,eax
  41865e:	mov    ah,ah
  418660:	loopne 0x4186a1
  418662:	mov    edi,0xb370478f
  418667:	in     eax,0x13
  418669:	addr16 fwait
  41866b:	nop
  41866c:	inc    ebp
  41866d:	in     eax,dx
  41866e:	mov    edi,0x6bc88bea
  418673:	fisttp QWORD PTR [edi+edx*1]
  418676:	popf   
  418677:	(bad)  
  418678:	fwait
  418679:	cdq    
  41867a:	jge    0x4186c9
  41867c:	adc    al,0x8c
  41867e:	pop    esi
  41867f:	sub    eax,0x5ae823b9
  418684:	cmp    cl,BYTE PTR [esi+0x2a]
  418687:	sbb    esp,edi
  418689:	pop    ds
  41868a:	pop    es
  41868b:	mov    dl,0xa4
  41868d:	inc    edx
  41868e:	ret    0x18b3
  418691:	jmp    0x4186f4
  418693:	pop    ss
  418694:	or     esp,ebx
  418696:	mov    esp,0xb22b0ea4
  41869b:	fiadd  WORD PTR [esi+0x5e016d32]
  4186a1:	ins    BYTE PTR es:[edi],dx
  4186a2:	(bad)  
  4186a3:	xor    eax,eax
  4186a5:	je     0x4186cc
  4186a7:	scas   eax,DWORD PTR es:[edi]
  4186a8:	pusha  
  4186a9:	pop    ds
  4186aa:	in     al,0xfd
  4186ac:	adc    BYTE PTR [esi],bl
  4186ae:	add    eax,0x1300823d
  4186b3:	ja     0x4186d7
  4186b5:	jne    0x4186d8
  4186b7:	jle    0x41863a
  4186b9:	sbb    eax,0x1fcd2a73
  4186be:	leave  
  4186bf:	mov    edi,0x44c9cf68
  4186c4:	add    edx,ebx
  4186c6:	xor    cl,BYTE PTR [edx]
  4186c8:	jecxz  0x4186a3
  4186ca:	ja     0x4186f5
  4186cc:	xchg   DWORD PTR [ebp-0x508de441],eax
  4186d2:	push   es
  4186d3:	and    eax,0xc1fc5d29
  4186d8:	adc    BYTE PTR [edi-0x6f87180f],dh
  4186de:	fld    DWORD PTR [ebp-0x10ce5fa2]
  4186e4:	and    bl,0x2
  4186e7:	lods   al,BYTE PTR ds:[esi]
  4186e8:	add    al,0x9a
  4186ea:	inc    edx
  4186eb:	xor    cl,ah
  4186ed:	(bad)  
  4186ee:	pushf  
  4186ef:	dec    edi
  4186f0:	out    dx,al
  4186f1:	stos   BYTE PTR es:[edi],al
  4186f2:	sbb    al,0x15
  4186f4:	outs   dx,BYTE PTR ds:[esi]
  4186f5:	les    edi,FWORD PTR [eax+esi*1-0x1d]
  4186f9:	mov    BYTE PTR [edi+0x41],dl
  4186fc:	add    BYTE PTR [ecx+0x2c],ah
  4186ff:	push   ecx
  418700:	pusha  
  418701:	and    bl,ah
  418703:	mov    bh,0xb9
  418705:	xchg   ecx,eax
  418707:	int3   
  418708:	pop    ds
  418709:	outs   dx,DWORD PTR ds:[esi]
  41870a:	mov    dl,0x2f
  41870c:	in     al,dx
  41870d:	dec    ecx
  41870e:	inc    esi
  41870f:	scas   eax,DWORD PTR es:[edi]
  418710:	ret    0xbb10
  418713:	lea    ebp,[ecx]
  418715:	ins    DWORD PTR es:[edi],dx
  418716:	repz sbb bh,BYTE PTR [edi+ebx*2-0x71]
  41871b:	adc    BYTE PTR [ecx],al
  41871d:	xlat   BYTE PTR ds:[ebx]
  41871e:	test   esi,ebp
  418720:	test   DWORD PTR [ebp+esi*1-0x4489a1b2],0x80c3ceca
  41872b:	fwait
  41872c:	mov    ebp,0x3117e445
  418731:	and    DWORD PTR [ebp+0x28f63710],esp
  418737:	adc    DWORD PTR ds:0x4c3a512,esp
  41873d:	rcpps  xmm2,XMMWORD PTR [ecx+ecx*4-0x16697355]
  418745:	xchg   edx,eax
  418746:	(bad)  
  418747:	loopne 0x4186fa
  418749:	pop    es
  41874a:	outs   dx,DWORD PTR ds:[esi]
  41874b:	fs mov cx,di
  41874f:	xchg   ecx,eax
  418750:	cmp    eax,0x59f012e9
  418755:	fisttp DWORD PTR ds:0xc3ce23c7
  41875b:	mov    ds:0x87efae94,eax
  418760:	cmp    eax,0x5eb27348
  418765:	cmp    esp,DWORD PTR [ebp+0x3f]
  418768:	jnp    0x41875f
  41876a:	fwait
  41876b:	mov    ebx,0x9d76226d
  418770:	sbb    BYTE PTR [edx-0x4d],0x60
  418774:	lock scas al,BYTE PTR es:[edi]
  418776:	pop    eax
  418777:	lods   al,BYTE PTR ds:[esi]
  418778:	test   al,bh
  41877a:	ret    
  41877b:	in     al,0xa3
  41877d:	jmp    FWORD PTR [ecx]
  41877f:	in     al,dx
  418780:	lea    edx,[ebx]
  418782:	cdq    
  418783:	lds    esp,FWORD PTR [edx]
  418785:	mov    eax,DWORD PTR [ebx+0x3133b170]
  41878b:	jp     0x4187fa
  41878d:	sbb    al,0x26
  41878f:	arpl   WORD PTR [edx+edx*8],sp
  418792:	jle    0x418792
  418794:	inc    ecx
  418795:	mov    ds:0x53ee6bd7,eax
  41879a:	pop    eax
  41879b:	fiadd  DWORD PTR [esp+ecx*2-0x332be724]
  4187a2:	fisubr WORD PTR [esp+eiz*8]
  4187a5:	mov    dl,0x0
  4187a7:	lea    esp,[ecx]
  4187a9:	pop    esp
  4187aa:	xchg   esi,eax
  4187ab:	scas   eax,DWORD PTR es:[edi]
  4187ac:	push   edx
  4187ad:	lea    ecx,[esi-0x17]
  4187b0:	call   0x54e88644
  4187b5:	inc    ebx
  4187b6:	enter  0xc92b,0x4a
  4187ba:	fiadd  DWORD PTR [edi]
  4187bc:	pop    ss
  4187bd:	push   ebx
  4187be:	imul   esp,esi,0x2e
  4187c1:	mov    eax,ds:0xfd06bdfb
  4187c6:	sbb    DWORD PTR [edx-0x32],ebx
  4187c9:	sbb    DWORD PTR [eax+edi*1-0x33],0xffffffb9
  4187ce:	xchg   ebp,eax
  4187cf:	or     ecx,ebx
  4187d1:	inc    eax
  4187d2:	mov    eax,ds:0xb3c7a9d6
  4187d7:	push   ecx
  4187d8:	xchg   edx,eax
  4187d9:	stos   BYTE PTR es:[edi],al
  4187da:	out    0xd,al
  4187dc:	xchg   BYTE PTR es:[edi-0x337032bf],bh
  4187e3:	and    BYTE PTR [edi],dh
  4187e5:	je     0x4187fe
  4187e7:	shl    ebx,0xde
  4187ea:	sti    
  4187eb:	jle    0x418848
  4187ed:	sbb    esp,DWORD PTR [eax+0x65]
  4187f0:	vpsubb xmm6,xmm2,XMMWORD PTR [esi]
  4187f4:	gs and eax,0x9dd598bf
  4187fa:	add    bl,ch
  4187fc:	xor    al,0xcf
  4187fe:	push   ss
  4187ff:	xor    dh,BYTE PTR [esi]
  418801:	add    al,0x7a
  418803:	sar    BYTE PTR [esi+0x36f8584c],cl
  418809:	jmp    0x4187d3
  41880b:	mov    ah,0x96
  41880d:	and    eax,0x354a4346
  418812:	lahf   
  418813:	ret    0xebc9
  418816:	jg     0x4187ad
  418818:	int3   
  418819:	sbb    esi,edx
  41881b:	imul   edi,DWORD PTR [esi],0xa93c92df
  418821:	push   esp
  418822:	(bad)  
  418823:	cmp    eax,0xa0040878
  418828:	lock and ecx,DWORD PTR [eax+eiz*1]
  41882c:	cmp    al,0x1c
  41882e:	xchg   ecx,eax
  41882f:	in     eax,0xe4
  418831:	push   cs
  418832:	dec    edi
  418833:	lahf   
  418834:	pop    edi
  418835:	push   0xffffffae
  418837:	push   ebp
  418838:	mov    bl,0x91
  41883a:	stc    
  41883b:	pop    edx
  41883c:	fldcw  WORD PTR [ebp+0xa]
  41883f:	or     eax,0xe072b474
  418844:	dec    edx
  418845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418846:	out    dx,al
  418847:	cmp    ch,0x9
  41884a:	pushw  0x8fdb
  41884e:	in     al,0xd8
  418850:	sub    al,0x6a
  418852:	in     eax,0xfd
  418854:	jbe    0x418861
  418856:	mov    al,ds:0xd2586077
  41885b:	iret   
  41885c:	xor    ecx,DWORD PTR [ebx-0x449cf9b5]
  418862:	xchg   esi,eax
  418863:	sub    al,0xc3
  418865:	iret   
  418866:	shl    BYTE PTR [edi],cl
  418868:	jle    0x4187ec
  41886a:	inc    eax
  41886b:	push   ss
  41886c:	dec    esp
  41886d:	in     eax,0x78
  41886f:	push   es
  418870:	arpl   WORD PTR [esi+0x5d],si
  418873:	jmp    0x42fa2f8c
  418878:	std    
  418879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41887a:	jbe    0x418800
  41887c:	dec    eax
  41887d:	fs push edi
  41887f:	aaa    
  418880:	loop   0x41884f
  418882:	fbld   TBYTE PTR [ebx]
  418884:	xor    ch,ch
  418886:	call   0x6b0e:0xc923725d
  41888d:	outs   dx,DWORD PTR ds:[esi]
  41888e:	jb     0x4188b1
  418890:	pop    esp
  418891:	inc    esp
  418892:	int    0x76
  418894:	ds pop ebp
  418896:	clc    
  418897:	mov    ecx,0x8fde8be
  41889c:	xor    BYTE PTR [eax],0xbd
  41889f:	jbe    0x4188f8
  4188a1:	enter  0xc12,0x65
  4188a5:	outs   dx,BYTE PTR ds:[esi]
  4188a6:	in     al,dx
  4188a7:	cld    
  4188a8:	mov    esp,0x7125bdcf
  4188ad:	imul   edi,DWORD PTR [esi+0x31dc9cb9],0xe52b6b80
  4188b7:	out    0x85,eax
  4188b9:	jne    0x41887a
  4188bb:	push   esp
  4188bc:	xchg   ebx,eax
  4188bd:	push   0xb8409927
  4188c2:	fdivr  DWORD PTR [ebx+0x4ce248df]
  4188c8:	xor    bl,BYTE PTR [ecx]
  4188ca:	push   ebp
  4188cb:	dec    ecx
  4188cc:	pushf  
  4188cd:	sub    DWORD PTR [ecx],edi
  4188cf:	je     0x4188ee
  4188d1:	ja     0x41888d
  4188d3:	pop    esi
  4188d4:	ins    DWORD PTR es:[edi],dx
  4188d5:	int    0x59
  4188d7:	out    dx,al
  4188d8:	and    BYTE PTR [edx],ch
  4188da:	cmp    BYTE PTR [eax-0x1259187a],al
  4188e0:	sub    DWORD PTR [edx+0x21],edi
  4188e3:	inc    edx
  4188e4:	lahf   
  4188e5:	repz add esi,esp
  4188e8:	dec    esi
  4188e9:	inc    eax
  4188ea:	mov    ds:0x8bb5e15,al
  4188f0:	in     al,dx
  4188f1:	jno    0x41889f
  4188f3:	sti    
  4188f4:	(bad)  
  4188f5:	cwde   
  4188f6:	das    
  4188f7:	cwde   
  4188f8:	pop    ds
  4188f9:	das    
  4188fa:	cmc    
  4188fb:	mov    ds:0xd6c05cbd,al
  418900:	je     0x41893d
  418902:	loope  0x41896f
  418904:	mov    edx,0xb9e2d803
  418909:	fild   WORD PTR ss:[edi-0x66]
  41890d:	fild   DWORD PTR [esi-0x74d86ca0]
  418913:	gs addr16 mov bh,0xe
  418917:	dec    esi
  418918:	rcr    DWORD PTR ds:0x4170a291,0xda
  41891f:	mov    edi,0xecdef6cc
  418924:	mov    edi,0xd2e7ae6
  418929:	push   ss
  41892a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41892b:	stos   DWORD PTR es:[edi],eax
  41892c:	and    al,0x3c
  41892e:	cmc    
  41892f:	pop    ebp
  418930:	rol    BYTE PTR [ebx],1
  418932:	retf   
  418933:	dec    edi
  418934:	ret    
  418935:	ror    dh,0xef
  418938:	fwait
  418939:	test   DWORD PTR [edx],ecx
  41893b:	pop    esp
  41893c:	mov    ds:0x5fd18607,al
  418941:	int3   
  418942:	ja     0x41897e
  418944:	repnz out dx,al
  418946:	test   BYTE PTR [esi-0x47],dl
  418949:	int    0x95
  41894b:	cmp    BYTE PTR [esi+0x1b2da788],cl
  418951:	xchg   ebx,eax
  418952:	out    0x21,al
  418954:	mov    bh,BYTE PTR [ecx+0x78]
  418957:	mov    dl,0x9c
  418959:	aas    
  41895a:	xchg   edi,eax
  41895b:	and    eax,0xe2afcfd4
  418960:	neg    DWORD PTR [esi+0x6d]
  418963:	jmp    edx
  418965:	retf   
  418966:	shl    DWORD PTR [edi],1
  418968:	fwait
  418969:	pop    edx
  41896a:	dec    esp
  41896b:	loope  0x41898c
  41896d:	sbb    al,0xf8
  41896f:	(bad)  
  418970:	jb     0x418973
  418972:	xor    eax,0x89865f9f
  418977:	sbb    bl,bh
  418979:	pop    ebx
  41897a:	leave  
  41897b:	and    al,0xe8
  41897d:	test   al,0x36
  41897f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418980:	mov    es,WORD PTR [eax-0x7e]
  418983:	pop    ecx
  418984:	int3   
  418985:	mov    ah,0x1a
  418987:	fistp  DWORD PTR [edx+0x44]
  41898a:	icebp  
  41898b:	outs   dx,DWORD PTR ds:[esi]
  41898c:	mov    DWORD PTR [eiz*1+0x141a2e8],edx
  418993:	cmp    edx,DWORD PTR [edi]
  418995:	hlt    
  418996:	cs std 
  418998:	sbb    al,bh
  41899a:	inc    esi
  41899b:	mov    edi,0xb929efa9
  4189a0:	lods   eax,DWORD PTR ds:[esi]
  4189a1:	add    ch,BYTE PTR [edi+0x2c]
  4189a4:	mov    ebx,0x1fbc45b9
  4189a9:	mov    ah,0xda
  4189ab:	pop    edi
  4189ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ad:	bound  ebp,QWORD PTR [ebp+0x132facbc]
  4189b3:	das    
  4189b4:	dec    eax
  4189b5:	jmp    0x4189ad
  4189b7:	or     DWORD PTR [eax],ebp
  4189b9:	aas    
  4189ba:	sub    eax,0x7ec7d2f9
  4189bf:	aam    0xc8
  4189c1:	pop    ebp
  4189c2:	call   0x3e79:0x21a2fe55
  4189c9:	xor    ecx,esp
  4189cb:	sbb    dh,dh
  4189cd:	cld    
  4189ce:	xor    al,0x26
  4189d0:	or     BYTE PTR [ebx+ebp*8-0x6688d048],bl
  4189d7:	fcmovnu st,st(2)
  4189d9:	push   ecx
  4189da:	in     eax,0xf0
  4189dc:	push   ebx
  4189dd:	sbb    al,ch
  4189df:	mov    dl,0xd4
  4189e1:	add    al,0xec
  4189e3:	test   al,0xa0
  4189e5:	aas    
  4189e6:	clc    
  4189e7:	jo     0x4189d4
  4189e9:	aas    
  4189ea:	aad    0xbb
  4189ec:	hlt    
  4189ed:	xor    eax,0x672f3d13
  4189f2:	push   esp
  4189f3:	or     al,0x83
  4189f5:	xor    bh,BYTE PTR [ecx-0x6af35b3b]
  4189fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fc:	jns    0x418a5d
  4189fe:	pop    esi
  4189ff:	(bad)  
  418a00:	jg     0x418994
  418a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a03:	or     cl,ch
  418a05:	push   ss
  418a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a07:	int3   
  418a08:	repz xor ecx,eax
  418a0b:	jge    0x4189d4
  418a0d:	mov    dh,0xb5
  418a0f:	mov    bl,0x6c
  418a11:	or     ch,cl
  418a13:	repz ror BYTE PTR [ebx+0x3bd204df],1
  418a1a:	mov    esi,ebx
  418a1c:	adc    DWORD PTR [edx-0x3f6c935c],edi
  418a22:	fdiv   QWORD PTR [esi-0x1e]
  418a25:	sub    BYTE PTR [ebx-0x4ef4f9dd],ah
  418a2b:	sti    
  418a2c:	inc    ecx
  418a2d:	lods   eax,DWORD PTR ds:[esi]
  418a2e:	adc    DWORD PTR [edx+0x6d5a86a9],edi
  418a34:	lock inc esp
  418a36:	nop
  418a37:	int    0x74
  418a39:	lods   eax,DWORD PTR ds:[esi]
  418a3a:	mov    dh,0x3a
  418a3c:	push   esi
  418a3d:	loopne 0x418a50
  418a3f:	sbb    eax,0xc13654cb
  418a44:	sub    ecx,edx
  418a46:	hlt    
  418a47:	adc    al,0x52
  418a49:	(bad)  
  418a4a:	push   0x6b
  418a4c:	mov    ebp,0xa222c498
  418a51:	xor    eax,0x4a68c2d5
  418a56:	icebp  
  418a57:	lock inc ebx
  418a59:	int3   
  418a5a:	test   BYTE PTR [edx+0x22df3a3d],al
  418a60:	aad    0x53
  418a62:	sub    edi,DWORD PTR [edx-0x1c27ef2]
  418a68:	jne    0x418aad
  418a6a:	inc    ecx
  418a6b:	std    
  418a6c:	ret    
  418a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a6e:	les    esp,FWORD PTR [eax-0x72fd445a]
  418a74:	(bad)  
  418a75:	xor    bh,BYTE PTR [edi+0x75]
  418a78:	scas   al,BYTE PTR es:[edi]
  418a79:	inc    BYTE PTR [esp+ebx*2-0x76]
  418a7d:	mov    dl,0xa5
  418a7f:	ret    
  418a80:	jns    0x418ad3
  418a82:	outs   dx,BYTE PTR ds:[esi]
  418a83:	xor    BYTE PTR [edx-0x1e],0x4b
  418a87:	pop    edi
  418a88:	(bad)  
  418a89:	mov    edx,0xd9600195
  418a8e:	and    ebp,DWORD PTR [ebp-0x15c2a79e]
  418a94:	mov    ebp,0x5560725c
  418a99:	test   edi,ebp
  418a9b:	xor    eax,0x7d0e23a4
  418aa0:	jne    0x418ab9
  418aa2:	rcr    DWORD PTR [ecx-0x2e],0x7
  418aa6:	and    eax,0x9703121a
  418aab:	xor    dl,BYTE PTR [eax]
  418aad:	aad    0x43
  418aaf:	inc    edx
  418ab0:	add    ah,BYTE PTR [esi*4-0x16e4a2aa]
  418ab7:	imul   ebp,DWORD PTR [edi],0x72ebdeb6
  418abd:	adc    esi,DWORD PTR [edi+0x2a]
  418ac0:	ss popf 
  418ac2:	adc    al,0x90
  418ac4:	es and al,0x8b
  418ac7:	push   edx
  418ac8:	repnz cmp BYTE PTR [edi+0x6a8eca94],0x52
  418ad0:	inc    edx
  418ad1:	xchg   DWORD PTR [edx+0x51],ebp
  418ad4:	gs and al,ah
  418ad7:	or     ebx,DWORD PTR [esi+esi*2-0x3f]
  418adb:	dec    ebp
  418adc:	popa   
  418add:	adc    BYTE PTR [esi],bl
  418adf:	sub    esp,ecx
  418ae1:	(bad)  
  418ae2:	jl     0x418b44
  418ae4:	mov    eax,ds:0x3003452d
  418ae9:	into   
  418aea:	test   esp,esi
  418aec:	mov    ebp,0x83c9ae06
  418af1:	cmp    DWORD PTR [esp+edx*2-0x60],0x9c388e0b
  418af9:	iret   
  418afa:	push   ebx
  418afb:	fs push es
  418afd:	pinsrw mm3,WORD PTR [eax-0x72],0x4f
  418b02:	push   ebp
  418b03:	pop    ecx
  418b04:	jle    0x418ab5
  418b06:	push   eax
  418b07:	popa   
  418b08:	jno    0x418b53
  418b0a:	add    bl,BYTE PTR [esi-0x4]
  418b0d:	bound  eax,QWORD PTR [edi-0x2e67a442]
  418b13:	xor    eax,0xb0f04559
  418b18:	in     al,0x75
  418b1a:	jns    0x418b39
  418b1c:	jg     0x418b49
  418b1e:	inc    edi
  418b1f:	add    al,0x55
  418b21:	(bad)  
  418b22:	aam    0x25
  418b24:	cmp    al,0xe7
  418b26:	jae    0x418b79
  418b28:	sub    bh,BYTE PTR [ebx]
  418b2a:	jo     0x418af5
  418b2c:	jle    0x418b47
  418b2e:	push   ebp
  418b2f:	ins    BYTE PTR es:[edi],dx
  418b30:	pop    ds
  418b31:	js     0x418ae5
  418b33:	inc    edi
  418b34:	aas    
  418b35:	mov    ch,0x88
  418b37:	out    dx,al
  418b38:	repnz les ebp,FWORD PTR [ebp+ebp*8+0x64360503]
  418b40:	jno    0x418b50
  418b42:	jmp    0x418b28
  418b44:	xor    cl,BYTE PTR [eax]
  418b46:	stos   BYTE PTR es:[edi],al
  418b47:	stos   DWORD PTR es:[edi],eax
  418b48:	pop    esi
  418b49:	(bad)  
  418b4a:	ficom  DWORD PTR [eax-0x4be21704]
  418b50:	ret    0xcd9c
  418b53:	shr    DWORD PTR [edx+eiz*8+0x3e],cl
  418b57:	pop    ds
  418b58:	adc    dh,al
  418b5a:	or     eax,0x79a695b0
  418b5f:	jl     0x418b72
  418b61:	lea    esi,[esi+0x2f0d5f15]
  418b67:	xor    eax,0x8d649220
  418b6c:	out    0x98,al
  418b6e:	idiv   DWORD PTR [esi+0x42358c0b]
  418b74:	sar    BYTE PTR [edx],1
  418b76:	or     DWORD PTR [edx],eax
  418b78:	jmp    0x2c99d0fe
  418b7d:	(bad)  [ecx-0x2c5b62a3]
  418b83:	mov    dl,0xa8
  418b85:	and    bh,BYTE PTR [ebp-0x2a83f043]
  418b8b:	ss jne 0x418b3a
  418b8e:	hlt    
  418b8f:	pop    edx
  418b90:	sar    dl,1
  418b92:	cwde   
  418b93:	and    ebx,DWORD PTR [ecx+0x73]
  418b96:	cmp    esi,DWORD PTR [ebp-0x3d]
  418b99:	sub    eax,0x7e880013
  418b9e:	lahf   
  418b9f:	pop    es
  418ba0:	in     eax,0xcf
  418ba2:	(bad)  
  418ba3:	ss and eax,0x1ad16d1e
  418ba9:	ret    
  418baa:	adc    eax,0x7042548
  418baf:	test   BYTE PTR fs:[esi+0x19],al
  418bb3:	imul   ebp,DWORD PTR [edx],0xffffffb4
  418bb6:	ins    DWORD PTR es:[edi],dx
  418bb7:	cmp    DWORD PTR [ecx-0x3f],ecx
  418bba:	push   0x4d
  418bbc:	(bad)  
  418bbd:	xor    al,0xb9
  418bbf:	dec    ebp
  418bc0:	xchg   ebp,eax
  418bc1:	add    BYTE PTR [eax-0x6eaccad9],dl
  418bc7:	dec    ecx
  418bc8:	iret   
  418bc9:	adc    BYTE PTR [eax+0x6e],0x2d
  418bcd:	jge    0x418bf9
  418bcf:	push   edx
  418bd0:	mov    ds:0x5e79d7e5,al
  418bd5:	mov    dh,0xec
  418bd7:	gs out dx,eax
  418bd9:	sbb    dh,BYTE PTR [ebx-0x78]
  418bdc:	push   ebx
  418bdd:	jmp    0x418c21
  418bdf:	mov    cl,BYTE PTR [esi-0x6a]
  418be2:	dec    ecx
  418be3:	xchg   ecx,eax
  418be5:	shr    ebp,1
  418be7:	xor    DWORD PTR [edi],ebp
  418be9:	pop    ebx
  418bea:	(bad)  
  418bec:	inc    ebp
  418bed:	push   ebx
  418bee:	cmp    esi,esi
  418bf0:	cwde   
  418bf1:	mov    cl,0x3e
  418bf3:	mov    ch,0xa7
  418bf5:	jne    0x418c5f
  418bf7:	or     edi,DWORD PTR [ebp+0x3c1f77d]
  418bfd:	fimul  WORD PTR [edx]
  418bff:	lods   al,BYTE PTR ds:[esi]
  418c00:	sbb    eax,0xaf54dbfa
  418c05:	dec    esi
  418c06:	jmp    0x418c00
  418c08:	hlt    
  418c09:	gs loope 0x418ba0
  418c0c:	xor    edi,DWORD PTR [ebp-0xfc04bf0]
  418c12:	js     0x418be3
  418c14:	sets   BYTE PTR [ecx+0x4f]
  418c18:	xor    edx,DWORD PTR [edi]
  418c1a:	outs   dx,DWORD PTR ds:[esi]
  418c1b:	data16 repz icebp 
  418c1e:	xchg   ebp,eax
  418c1f:	xchg   esi,eax
  418c20:	test   ebx,0x61662063
  418c26:	dec    edx
  418c27:	es and al,0xce
  418c2a:	rol    al,cl
  418c2c:	xor    edx,DWORD PTR [edx-0x33]
  418c2f:	xor    WORD PTR [ebx+0x11],sp
  418c33:	iret   
  418c34:	mov    WORD PTR [ecx+0x35],ss
  418c37:	icebp  
  418c38:	cmp    ah,al
  418c3a:	sbb    si,dx
  418c3d:	sbb    al,BYTE PTR [edi-0x31a72f37]
  418c43:	pop    eax
  418c44:	or     BYTE PTR [ebp-0x60],dh
  418c47:	xor    ebp,0xf
  418c4a:	imul   ebx,DWORD PTR [eax-0x4d48b350],0x48
  418c51:	xchg   DWORD PTR [eax+0x70],edx
  418c54:	sub    esp,DWORD PTR [edi]
  418c56:	clc    
  418c57:	dec    ecx
  418c58:	fistp  QWORD PTR [ecx+0x6a6fb930]
  418c5e:	adc    DWORD PTR [edx+ecx*8-0x3e02df01],ebx
  418c65:	int    0xb1
  418c67:	inc    esi
  418c68:	dec    eax
  418c69:	xchg   edi,eax
  418c6a:	rcl    DWORD PTR [edx],cl
  418c6c:	cmp    al,0xd9
  418c6e:	xor    DWORD PTR [ecx+0x54],ebp
  418c71:	(bad)  
  418c72:	adc    dl,BYTE PTR [edi+0x786cdbe5]
  418c78:	in     eax,0x3e
  418c7a:	pusha  
  418c7b:	enter  0x9ea9,0xa4
  418c7f:	push   0x16
  418c81:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418c83:	inc    edx
  418c84:	add    bh,cl
  418c86:	(bad)  
  418c87:	sbb    BYTE PTR [ecx],ch
  418c89:	setne  BYTE PTR [edi+0x3059a518]
  418c90:	inc    edx
  418c91:	in     eax,dx
  418c92:	add    esp,DWORD PTR [ecx+0x58bc2928]
  418c98:	cmp    BYTE PTR [ebx],bh
  418c9a:	mov    WORD PTR [edi-0x2a],ss
  418c9d:	es jecxz 0x418c48
  418ca0:	mov    BYTE PTR [edi+edi*8-0x4712590a],dh
  418ca7:	ins    BYTE PTR es:[edi],dx
  418ca8:	retf   
  418ca9:	or     al,0xb8
  418cab:	pop    edi
  418cac:	add    edx,eax
  418cae:	fs inc esp
  418cb0:	and    bh,ah
  418cb2:	xor    BYTE PTR [ebp+0x7359b0a5],al
  418cb8:	sbb    ebp,DWORD PTR [ebx-0xa04032b]
  418cbe:	repnz cwde 
  418cc0:	into   
  418cc1:	xlat   BYTE PTR ds:[ebx]
  418cc2:	sbb    eax,0x22b45bc8
  418cc7:	pop    edi
  418cc8:	dec    esi
  418cc9:	call   0x6d39b26
  418cce:	cdq    
  418ccf:	aas    
  418cd0:	sub    al,0xb5
  418cd2:	fdivr  DWORD PTR [eax-0x79]
  418cd5:	loop   0x418cf0
  418cd7:	xchg   esi,eax
  418cd8:	jne    0x418d05
  418cda:	xlat   BYTE PTR ds:[ebx]
  418cdb:	adc    DWORD PTR [edx],esi
  418cdd:	adc    eax,0x582c3db9
  418ce2:	sub    dl,BYTE PTR [esi]
  418ce4:	or     al,0x63
  418ce6:	rol    DWORD PTR [ebx+0x2d],1
  418ce9:	aad    0x5c
  418ceb:	add    DWORD PTR [edx],ebx
  418ced:	sub    eax,0xe6652bed
  418cf2:	cmp    DWORD PTR fs:[edi],ebp
  418cf5:	mov    BYTE PTR [ebx-0x12111d0],dh
  418cfb:	in     eax,0xa
  418cfd:	(bad)  
  418cfe:	stc    
  418cff:	test   al,0xa3
  418d01:	into   
  418d02:	(bad)  
  418d03:	fstp   QWORD PTR [esi+0x4820774b]
  418d09:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d0b:	sub    BYTE PTR [ecx+0x44e3d8d4],dh
  418d11:	in     al,0xb3
  418d13:	pop    ebx
  418d14:	retf   0x4bd
  418d17:	ds push esi
  418d19:	adc    DWORD PTR [esi-0x49],edx
  418d1c:	fdivr  DWORD PTR fs:[esi+0x57e59c7c]
  418d23:	jmp    0x1a163350
  418d28:	call   0x1ba5:0x75bae4a8
  418d2f:	xchg   ebx,eax
  418d30:	cmp    al,BYTE PTR [edx-0x66]
  418d33:	adc    al,0x8
  418d35:	rcl    DWORD PTR [edx-0x7b16fdd6],cl
  418d3b:	inc    ebx
  418d3c:	imul   edx,DWORD PTR ds:[ecx],0xffffffdd
  418d40:	lahf   
  418d41:	(bad)  
  418d42:	nop
  418d43:	sbb    BYTE PTR [ecx+0x568df0e4],ah
  418d49:	inc    esp
  418d4a:	push   ds
  418d4b:	cmp    DWORD PTR [ebx-0x590a87ef],ebp
  418d51:	sub    dl,ch
  418d53:	outs   dx,BYTE PTR ds:[esi]
  418d54:	pop    ds
  418d55:	adc    cl,BYTE PTR [ecx+0x74]
  418d58:	enter  0x130c,0xcd
  418d5c:	cdq    
  418d5d:	sub    eax,DWORD PTR [edi+0x6d]
  418d60:	mov    bl,0x51
  418d62:	in     eax,0x6f
  418d64:	inc    edi
  418d65:	jne    0x418d98
  418d67:	xor    ebp,esi
  418d69:	xlat   BYTE PTR ds:[ebx]
  418d6a:	adc    al,0xc1
  418d6c:	scas   al,BYTE PTR es:[edi]
  418d6d:	add    BYTE PTR [ebp+edi*4+0x46270015],cl
  418d74:	test   al,0x0
  418d76:	xor    ch,bl
  418d78:	mov    al,0x69
  418d7a:	retf   0x4b4e
  418d7d:	(bad)  
  418d7f:	sbb    edi,DWORD PTR [ebx-0x32d918b4]
  418d85:	jne    0x418d66
  418d87:	call   0x1873:0xa37d10a6
  418d8e:	jecxz  0x418d72
  418d90:	and    eax,0xadfa4f16
  418d95:	fdiv   st(1),st
  418d97:	das    
  418d98:	fdivr  st,st(4)
  418d9a:	shl    ebx,cl
  418d9c:	lods   eax,DWORD PTR ds:[esi]
  418d9d:	mov    BYTE PTR [esi],dh
  418d9f:	inc    esi
  418da0:	inc    edx
  418da1:	test   WORD PTR [eax+0x25],di
  418da5:	xchg   DWORD PTR [eax-0x71],esi
  418da8:	add    al,0xbc
  418daa:	lea    edi,[esi+0x3e]
  418dad:	push   ecx
  418dae:	stc    
  418daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db0:	stc    
  418db1:	jae    0x418dc7
  418db3:	mov    esp,0xdeb56018
  418db8:	inc    esi
  418db9:	rcr    DWORD PTR [ecx+ecx*2-0x44f5fb6c],cl
  418dc0:	loope  0x418dde
  418dc2:	adc    DWORD PTR [ebp+0x11],esi
  418dc5:	dec    edx
  418dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc7:	xchg   edi,eax
  418dc8:	arpl   si,ax
  418dca:	pusha  
  418dcb:	(bad)  
  418dcc:	div    BYTE PTR [ecx+esi*4+0x75]
  418dd0:	ret    0x932
  418dd3:	xchg   esp,eax
  418dd4:	(bad)  
  418dd5:	sub    ch,bh
  418dd7:	sub    ebp,ecx
  418dd9:	(bad)  
  418dda:	xor    BYTE PTR [eax+ebp*4-0x6b],cl
  418dde:	int3   
  418ddf:	jge    0x418d8d
  418de1:	jl     0x418dd4
  418de3:	aaa    
  418de4:	sub    al,0xf7
  418de6:	or     DWORD PTR [eax],ecx
  418de8:	mov    bh,0x13
  418dea:	daa    
  418deb:	push   edi
  418dec:	iret   
  418ded:	adc    ebp,esi
  418def:	(bad)  
  418df0:	(bad)  
  418df1:	sbb    BYTE PTR [edi],bl
  418df3:	pusha  
  418df4:	sub    DWORD PTR [eax-0x5211cb2c],0x319dff61
  418dfe:	push   ss
  418dff:	(bad)  
  418e00:	ja     0x418db8
  418e02:	fiadd  WORD PTR [ecx]
  418e04:	mov    ch,ch
  418e06:	scas   al,BYTE PTR es:[edi]
  418e07:	nop
  418e08:	push   ds
  418e09:	and    eax,0x22324fa9
  418e0e:	adc    esp,ebp
  418e10:	push   edx
  418e11:	fdivr  QWORD PTR [esi+ecx*2-0x764d8879]
  418e18:	jb     0x418e7d
  418e1a:	lods   eax,DWORD PTR ds:[esi]
  418e1b:	cmp    ebp,edx
  418e1d:	add    al,0x71
  418e1f:	in     al,0x30
  418e21:	pop    ebx
  418e22:	xchg   edx,eax
  418e23:	dec    ebx
  418e24:	(bad)  
  418e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e26:	rcl    DWORD PTR [esi-0x427c3bd1],cl
  418e2c:	mov    ds:0x8d597403,eax
  418e31:	(bad)  
  418e32:	icebp  
  418e33:	lea    ecx,[eax-0x7b]
  418e36:	(bad)  
  418e37:	sub    esp,DWORD PTR [ecx+0x23]
  418e3a:	mov    edx,0xa5560307
  418e3f:	dec    esi
  418e40:	push   eax
  418e41:	mov    esi,0xf8d770df
  418e46:	scas   eax,DWORD PTR es:[edi]
  418e47:	mov    eax,0xba305691
  418e4c:	or     bl,BYTE PTR ds:0xeb37bb42
  418e52:	mov    eax,ds:0x875d2c7b
  418e57:	or     ch,al
  418e59:	jne    0x418dec
  418e5b:	dec    ebp
  418e5c:	or     al,0xe9
  418e5e:	ja     0x418de6
  418e60:	mov    eax,0xd3de9c31
  418e65:	push   ds
  418e66:	pop    ds
  418e67:	retf   
  418e68:	or     eax,0xdd648e6c
  418e6d:	dec    ebp
  418e6e:	das    
  418e6f:	adc    eax,0x408a1b69
  418e74:	mov    gs,WORD PTR [ebp-0x45026263]
  418e7a:	outs   dx,DWORD PTR ds:[esi]
  418e7b:	xchg   ecx,eax
  418e7c:	lds    edi,FWORD PTR [ebx]
  418e7e:	addr16 enter 0x562a,0x57
  418e83:	sbb    DWORD PTR [ebx+0x4fe47292],ecx
  418e89:	pop    ebp
  418e8a:	adc    edi,eax
  418e8c:	adc    DWORD PTR [edi+eiz*8],eax
  418e8f:	jae    0x418e94
  418e91:	xor    BYTE PTR [eax-0x1493605c],bh
  418e97:	jge    0x418ee7
  418e99:	enter  0xc2fb,0xdb
  418e9d:	add    ah,0xc
  418ea0:	imul   esi,ebx,0x58364616
  418ea6:	imul   edi,DWORD PTR [ebx+0x38],0x9fd12408
  418ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eae:	inc    BYTE PTR [esi]
  418eb0:	and    ah,BYTE PTR [edx+0x67]
  418eb3:	sbb    esi,ebp
  418eb5:	cmp    eax,0x44ca4e25
  418eba:	dec    BYTE PTR [ebp+0x61b820d8]
  418ec0:	stos   BYTE PTR es:[edi],al
  418ec1:	les    ecx,FWORD PTR [esi+0x7031cde7]
  418ec7:	cmovne edi,DWORD PTR [ebp+eiz*8-0xc]
  418ecc:	fisub  WORD PTR [eax]
  418ece:	arpl   WORD PTR [ebx-0x42],dx
  418ed1:	cli    
  418ed2:	xor    DWORD PTR [eax+0x69],0xffffffa6
  418ed6:	xor    DWORD PTR [edx+0x23],ecx
  418ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418edb:	mov    ds,WORD PTR ss:[edx+0x6bd4feab]
  418ee2:	dec    esi
  418ee3:	popa   
  418ee4:	addr16 pop es
  418ee6:	adc    dl,BYTE PTR [ebx]
  418ee8:	xchg   ecx,eax
  418ee9:	lea    ebp,[ebx]
  418eeb:	adc    BYTE PTR ds:0x5b4bfcbb,al
  418ef1:	mov    ah,0x90
  418ef3:	pop    esi
  418ef4:	inc    ebp
  418ef5:	push   0xffffffb7
  418ef7:	jne    0x418f41
  418ef9:	inc    ecx
  418efa:	retf   
  418efb:	scas   eax,DWORD PTR es:[edi]
  418efc:	mov    ch,0x6f
  418efe:	popa   
  418eff:	xor    edx,DWORD PTR [edx+0x27]
  418f02:	cli    
  418f03:	mov    bh,0xc1
  418f05:	dec    esp
  418f06:	imul   ecx,DWORD PTR [esi],0x6d9c0763
  418f0c:	(bad)  
  418f0d:	sbb    DWORD PTR ds:0xeae285c3,edx
  418f13:	loop   0x418f2e
  418f15:	mov    bl,0x9e
  418f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f18:	pushf  
  418f19:	push   edi
  418f1a:	cmc    
  418f1b:	sbb    esi,0xffffffda
  418f1e:	clc    
  418f1f:	daa    
  418f20:	fwait
  418f21:	dec    ebx
  418f22:	sbb    bx,WORD PTR [edi-0x5c5b646]
  418f29:	sub    dl,BYTE PTR ds:0x3ded7d28
  418f2f:	lea    eax,[edx+0x53]
  418f32:	or     al,0x50
  418f34:	mov    edx,0x5eeba563
  418f39:	sub    al,0xd8
  418f3b:	daa    
  418f3c:	cwde   
  418f3d:	in     eax,dx
  418f3e:	push   ds
  418f3f:	test   BYTE PTR [edi-0x5d3abe1d],ah
  418f45:	mov    eax,0x8d5908d
  418f4a:	dec    edi
  418f4b:	(bad)  
  418f4d:	sti    
  418f4e:	fst    QWORD PTR [ecx+0xb234fe3]
  418f54:	je     0x418f24
  418f56:	mov    esi,0x7e895db0
  418f5b:	push   ss
  418f5c:	outs   dx,DWORD PTR ds:[esi]
  418f5d:	push   edx
  418f5e:	xchg   esi,edx
  418f60:	cmp    BYTE PTR ds:0xdc582e0,dl
  418f66:	popf   
  418f67:	fadd   DWORD PTR [ecx+0x45]
  418f6a:	mov    edx,0xbeb7425
  418f6f:	pop    edi
  418f70:	dec    edx
  418f71:	enter  0xd39b,0x3d
  418f75:	into   
  418f76:	es js  0x418f86
  418f79:	(bad)  
  418f7a:	ins    BYTE PTR es:[edi],dx
  418f7b:	call   0xd115d3fa
  418f80:	push   ecx
  418f81:	or     esi,DWORD PTR [edx+edx*1+0x1bc0f6c0]
  418f88:	push   cs
  418f89:	inc    esp
  418f8a:	mov    DWORD PTR [eax],esp
  418f8c:	cmp    BYTE PTR [ebp-0x6],0xb1
  418f90:	iret   
  418f91:	pop    esp
  418f92:	add    edx,DWORD PTR [eax+ebp*1+0xed1e548]
  418f99:	cmp    dl,BYTE PTR [ebp+0x3c]
  418f9c:	mov    DWORD PTR [edx-0x70],esi
  418f9f:	(bad)  
  418fa0:	sub    edi,DWORD PTR [ecx+0x312b800b]
  418fa6:	aas    
  418fa7:	mov    edx,0xefa5f8e3
  418fac:	aaa    
  418fad:	jp     0x418ffe
  418faf:	jns    0x418fbd
  418fb1:	ja     0x418f8a
  418fb3:	push   0x8e3cb048
  418fb8:	pop    ds
  418fb9:	and    eax,0xdbd1396
  418fbe:	rcl    DWORD PTR [edi+0x31],1
  418fc1:	and    al,0xe
  418fc3:	shl    BYTE PTR [eax-0x17c004f9],0xf2
  418fca:	(bad)  [esi+0x58ecd8e0]
  418fd0:	fld    TBYTE PTR [esi-0x33c1e500]
  418fd6:	jl     0x418fa9
  418fd8:	adc    ebp,edi
  418fda:	cld    
  418fdb:	mov    ecx,0x5d45f5df
  418fe0:	call   0xc31aa842
  418fe5:	mov    al,0x14
  418fe7:	or     al,0x97
  418fe9:	mov    WORD PTR ss:[edx-0x44],fs
  418fed:	jp     0x418f96
  418fef:	stc    
  418ff0:	pop    ss
  418ff1:	mov    ecx,ds
  418ff3:	(bad)  
  418ff5:	les    ecx,FWORD PTR [ebx]
  418ff7:	sti    
  418ff8:	mov    esi,0x37f7b3e4
  418ffd:	push   ebp
  418ffe:	data16 jmp 0x419046
  419001:	cmp    al,0x8a
  419003:	add    al,BYTE PTR [edx+0x79]
  419006:	out    dx,eax
  419007:	add    esi,DWORD PTR [esi-0x48]
  41900a:	aaa    
  41900b:	xchg   ebx,eax
  41900c:	sub    al,0x18
  41900e:	mov    ch,0xf
  419010:	lods   eax,DWORD PTR ds:[esi]
  419011:	mov    ds:0xb927c71d,eax
  419016:	xor    dh,al
  419018:	rcr    DWORD PTR [ebx+eax*4+0x343ef37],0xeb
  419020:	ja     0x419093
  419022:	ds int 0x24
  419025:	add    DWORD PTR [edx-0x7ff19da9],ecx
  41902b:	xor    DWORD PTR [edx+esi*4],esi
  41902e:	inc    ebx
  41902f:	(bad)  
  419030:	xlat   BYTE PTR ds:[ebx]
  419031:	push   edx
  419032:	fdivr  QWORD PTR [esi+0x218cafc0]
  419038:	jp     0x418fd3
  41903a:	inc    esi
  41903b:	ret    
  41903c:	rcr    BYTE PTR [esi-0x28],cl
  41903f:	mov    al,ds:0x40093d7
  419044:	retf   0x61d1
  419047:	dec    eax
  419048:	cmp    eax,0xe0a1fa4e
  41904d:	dec    edi
  41904e:	das    
  41904f:	pop    edx
  419050:	out    dx,eax
  419051:	sti    
  419052:	xor    eax,0x880b11dc
  419057:	call   0xebb6:0x770b7b20
  41905e:	(bad)  
  41905f:	and    BYTE PTR [edx],ch
  419061:	iret   
  419062:	cmp    al,0xd
  419064:	in     eax,0x48
  419066:	sub    eax,0xab39945f
  41906b:	(bad)  
  41906c:	sti    
  41906d:	pop    es
  41906e:	lods   al,BYTE PTR ds:[esi]
  41906f:	dec    ebx
  419070:	mov    ds:0x50871b07,al
  419075:	aaa    
  419076:	push   0xec2e79e7
  41907b:	pop    ebp
  41907c:	dec    esp
  41907d:	ss sub ebx,0xab309c86
  419084:	repnz sub DWORD PTR ds:[edi+ecx*4+0x358ff4b8],edi
  41908d:	ret    
  41908e:	or     BYTE PTR [edx+0x4e],0xcf
  419092:	xor    dh,ah
  419094:	adc    BYTE PTR ds:0x7ebbe34b,dl
  41909a:	sub    ebp,ebp
  41909c:	add    al,0x20
  41909e:	push   ecx
  41909f:	add    eax,ecx
  4190a1:	cmp    DWORD PTR [eax-0x36],0x950aba0c
  4190a8:	xor    ebx,DWORD PTR [edi]
  4190aa:	addr16 jmp 0x419126
  4190ad:	sub    edx,DWORD PTR [edi]
  4190af:	sub    ebp,DWORD PTR [ecx-0x3e]
  4190b2:	shr    BYTE PTR [eax],0x9
  4190b5:	ins    DWORD PTR es:[edi],dx
  4190b6:	mov    ecx,DWORD PTR [eax+edx*4]
  4190b9:	dec    ebp
  4190ba:	and    eax,0xc4536e0e
  4190bf:	shl    ebp,0x13
  4190c2:	and    edx,DWORD PTR [ecx]
  4190c4:	mov    ?,WORD PTR [edi-0x7dff9b04]
  4190ca:	aam    0x8a
  4190cc:	adc    edx,DWORD PTR [edx+0x53]
  4190cf:	pop    esi
  4190d0:	mov    al,ds:0x98f8df1b
  4190d5:	dec    eax
  4190d6:	add    bh,ch
  4190d8:	adc    al,0x92
  4190da:	and    BYTE PTR ds:0x9ec4f7f7,cl
  4190e0:	jle    0x4190cb
  4190e2:	push   ecx
  4190e3:	or     al,0xaa
  4190e5:	clc    
  4190e6:	xor    DWORD PTR [esp+eiz*4],ebp
  4190e9:	add    ch,bh
  4190eb:	mov    bl,0x7a
  4190ed:	jge    0x419167
  4190ef:	(bad)  
  4190f0:	fdivp  st(6),st
  4190f2:	pusha  
  4190f3:	outs   dx,BYTE PTR ds:[esi]
  4190f4:	adc    eax,0x6f0607a2
  4190f9:	xchg   edi,eax
  4190fa:	mov    edi,0xec17262d
  4190ff:	jecxz  0x419081
  419101:	xor    eax,0x56c8f30a
  419106:	sbb    DWORD PTR [eax],esi
  419108:	xor    dl,BYTE PTR [esi-0x777c7cb0]
  41910e:	fild   WORD PTR [esp+eiz*8+0x2f]
  419112:	nop
  419113:	dec    edx
  419114:	cmp    DWORD PTR [edi-0x4f1473d3],ebp
  41911a:	int    0x72
  41911c:	rcr    BYTE PTR [eax-0x46eb0fbb],0x3
  419123:	inc    esp
  419124:	out    0x58,al
  419126:	and    dh,BYTE PTR [ecx-0x43d48d14]
  41912c:	xor    BYTE PTR [eax-0x27bcb2c9],0xc8
  419133:	fsub   QWORD PTR [ecx-0xe]
  419136:	sub    edx,DWORD PTR [ebp-0x13]
  419139:	cmp    al,0xe3
  41913b:	jg     0x419121
  41913d:	sub    BYTE PTR [esi+0x51],0x77
  419141:	adc    al,0x2a
  419143:	or     eax,0xb38e6e3c
  419148:	in     eax,0xd9
  41914a:	imul   DWORD PTR [edi]
  41914c:	pop    ebp
  41914d:	in     al,0xac
  41914f:	int    0x58
  419151:	xchg   DWORD PTR [edx-0x53],ecx
  419154:	sub    ah,dl
  419156:	popa   
  419157:	in     al,0x9c
  419159:	jnp    0x419113
  41915b:	push   eax
  41915c:	push   ebx
  41915d:	mov    ds:0xe811534a,eax
  419162:	add    dl,0x71
  419165:	(bad)  
  419166:	(bad)  
  419167:	shl    BYTE PTR [esp+eax*1+0x55],0x87
  41916c:	shr    BYTE PTR [edx+0x121ff5b2],1
  419172:	jle    0x4191dc
  419174:	loop   0x41917e
  419176:	outs   dx,BYTE PTR ds:[esi]
  419177:	test   BYTE PTR [edx-0x8],ch
  41917a:	or     cl,0x49
  41917d:	jmp    0x4191d2
  41917f:	dec    edx
  419180:	pop    edi
  419181:	adc    BYTE PTR [ecx+0x6b49b6e0],cl
  419187:	dec    ebx
  419188:	popa   
  419189:	mov    ecx,0x7d777754
  41918e:	sbb    BYTE PTR [edx],0x2b
  419191:	xor    BYTE PTR ds:0x97e7cb7a,ah
  419197:	push   cs
  419198:	out    dx,al
  419199:	leave  
  41919a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41919b:	mov    ecx,0x976a3e0a
  4191a0:	cld    
  4191a1:	aam    0xa4
  4191a3:	mov    ah,0x2e
  4191a5:	push   ecx
  4191a6:	outs   dx,DWORD PTR ds:[esi]
  4191a7:	sub    ebx,DWORD PTR [edi+0x4c74b2e1]
  4191ad:	out    0xfb,al
  4191af:	mov    DWORD PTR [edi+0x2c],0x65e2e0bb
  4191b6:	imul   ebp,DWORD PTR [ebx],0x4c220ca9
  4191bc:	xor    ah,dh
  4191be:	ror    DWORD PTR [edx+0x6212ad63],cl
  4191c4:	outs   dx,BYTE PTR ds:[esi]
  4191c5:	sbb    eax,0x257b914
  4191ca:	arpl   WORD PTR [ecx+edx*1],dx
  4191cd:	push   0xffffffad
  4191cf:	xchg   ebp,eax
  4191d0:	stos   BYTE PTR es:[edi],al
  4191d1:	jbe    0x4191b6
  4191d3:	jo     0x4191ee
  4191d5:	xchg   esp,eax
  4191d6:	cmc    
  4191d7:	lea    esi,ds:0x3b467a2
  4191dd:	pop    edi
  4191de:	ret    0x93a6
  4191e1:	js     0x41919a
  4191e3:	and    eax,DWORD PTR [ecx-0xe9bf189]
  4191e9:	mov    ds:0x9c0078e8,al
  4191ee:	(bad)  
  4191ef:	xor    eax,0x8ec82c90
  4191f4:	cmp    al,0x37
  4191f6:	push   esi
  4191f7:	mov    dl,0x3c
  4191f9:	out    dx,eax
  4191fa:	mov    dl,0x87
  4191fc:	mov    bh,0x26
  4191fe:	adc    al,0xcf
  419200:	pop    ds
  419201:	xor    BYTE PTR [eax-0xc6919f],bl
  419207:	jns    0x41927b
  419209:	or     al,0xd9
  41920b:	aas    
  41920c:	xor    eax,eax
  41920e:	enter  0xe97d,0x92
  419212:	sbb    DWORD PTR [esi],ecx
  419214:	hlt    
  419215:	pushf  
  419216:	xchg   edi,eax
  419217:	mov    esp,0x46c1f74c
  41921c:	xlat   BYTE PTR ds:[ebx]
  41921d:	or     eax,0x26472461
  419222:	lahf   
  419223:	adc    bh,bh
  419225:	and    ch,ah
  419227:	and    ah,BYTE PTR [edx-0x711b99a7]
  41922d:	push   esi
  41922e:	stos   BYTE PTR es:[edi],al
  41922f:	ret    
  419230:	adc    BYTE PTR [eax+esi*2+0x2689432c],al
  419237:	out    dx,eax
  419238:	bound  edx,QWORD PTR [edi-0x3ef53cf1]
  41923e:	push   edx
  41923f:	dec    eax
  419240:	cmp    DWORD PTR [ecx-0xe],edx
  419243:	std    
  419244:	cmp    cl,bh
  419246:	or     al,0xcc
  419248:	leave  
  419249:	ins    DWORD PTR es:[edi],dx
  41924a:	sbb    edx,ebp
  41924c:	lods   al,BYTE PTR ds:[esi]
  41924d:	int3   
  41924e:	sbb    eax,ebx
  419250:	mov    ds:0x43d978a3,eax
  419255:	xor    al,BYTE PTR [ebx]
  419257:	jno    0x419236
  419259:	adc    BYTE PTR [ebp+0x61],dl
  41925c:	and    dl,BYTE PTR [edi+0x5e]
  41925f:	es int 0xb7
  419262:	(bad)  
  419263:	cmp    edi,DWORD PTR [eax+0x6b29418e]
  419269:	xacquire xchg DWORD PTR [ecx-0x42],edi
  41926d:	pop    eax
  41926e:	ins    BYTE PTR es:[edi],dx
  41926f:	adc    DWORD PTR [esi],esi
  419271:	test   DWORD PTR [esi-0x40],ebx
  419274:	int    0x24
  419276:	js     0x41921b
  419278:	aaa    
  419279:	adc    ecx,0xffffffd4
  41927c:	xchg   edi,eax
  41927d:	fild   DWORD PTR [eax+ecx*4+0x56]
  419281:	xchg   esi,eax
  419282:	outs   dx,DWORD PTR ds:[esi]
  419283:	push   es
  419284:	xor    eax,0x17fed32d
  419289:	mov    edx,0x1db9556d
  41928e:	adc    al,0x77
  419290:	pop    ecx
  419291:	adc    DWORD PTR [ecx],esi
  419293:	in     eax,0x84
  419295:	jbe    0x4192f3
  419297:	mov    al,ds:0xc92f8f26
  41929c:	jmp    0x74b8a454
  4192a1:	enter  0x207b,0xa7
  4192a5:	int3   
  4192a6:	sbb    al,0xb6
  4192a8:	inc    ebp
  4192a9:	arpl   WORD PTR [esi+edx*4],cx
  4192ac:	pop    ecx
  4192ad:	pusha  
  4192ae:	(bad)  
  4192af:	cmc    
  4192b0:	push   es
  4192b1:	xor    bh,dl
  4192b3:	dec    esi
  4192b4:	xchg   esi,eax
  4192b5:	ret    
  4192b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b7:	(bad)  
  4192b9:	push   ebp
  4192ba:	(bad)  
  4192bb:	popa   
  4192bc:	fild   WORD PTR [edi+edi*2-0x7e]
  4192c0:	aas    
  4192c1:	xchg   eax,ebx
  4192c3:	inc    esi
  4192c4:	pushf  
  4192c5:	retf   0x968d
  4192c8:	inc    edi
  4192c9:	xor    bl,ch
  4192cb:	aas    
  4192cc:	ins    DWORD PTR es:[edi],dx
  4192cd:	and    al,0x89
  4192cf:	inc    ebp
  4192d0:	mov    esi,0xbea6e2f9
  4192d5:	ja     0x419304
  4192d7:	fild   WORD PTR [esp+eax*2-0x80]
  4192db:	sbb    edx,esp
  4192dd:	es ret 
  4192df:	bnd call 0x9cb455f
  4192e5:	jle    0x419302
  4192e7:	imul   eax,DWORD PTR [esi+ecx*8+0x6dd7c70a],0xa1c001fc
  4192f2:	cmp    cl,BYTE PTR [ecx]
  4192f4:	data16 cmp BYTE PTR [eax+0x1f],dl
  4192f8:	mov    edi,0x63ff9b67
  4192fd:	jo     0x4192df
  4192ff:	or     edx,edi
  419301:	jmp    0xded9:0x90305b66
  419308:	xor    ecx,eax
  41930a:	(bad)  
  41930b:	xchg   esp,eax
  41930c:	out    dx,eax
  41930d:	cwde   
  41930e:	xor    edi,DWORD PTR [esi]
  419310:	inc    ebx
  419311:	jae    0x4192e5
  419313:	(bad)  
  419315:	dec    esp
  419316:	es ss inc edx
  419319:	inc    ebp
  41931a:	mul    esp
  41931c:	outs   dx,BYTE PTR ds:[esi]
  41931d:	stos   DWORD PTR es:[edi],eax
  41931e:	pop    ds
  41931f:	jecxz  0x419337
  419321:	jae    0x41930b
  419323:	add    BYTE PTR [ebx+0x35],0x9a
  419327:	or     ebx,DWORD PTR [edi]
  419329:	sub    ch,BYTE PTR [ecx-0x2a06c540]
  41932f:	inc    edx
  419330:	add    BYTE PTR [edx+ebp*2],cl
  419333:	jmp    0x419363
  419335:	sub    ch,BYTE PTR [edi+0x79fbee3e]
  41933b:	dec    esp
  41933c:	aas    
  41933d:	cmp    al,0xcb
  41933f:	push   esp
  419340:	cmp    edx,DWORD PTR [ebx+0x61]
  419343:	dec    esp
  419344:	fistp  QWORD PTR [eax]
  419346:	std    
  419347:	es push ebx
  419349:	sub    al,BYTE PTR [esi]
  41934b:	jp     0x419310
  41934d:	jbe    0x4192d4
  41934f:	imul   ebp,DWORD PTR [edi+0x6a1e55f1],0x88115362
  419359:	sub    DWORD PTR [edx+0x4605129a],edx
  41935f:	or     DWORD PTR [edx+0x7274cc4f],ebx
  419365:	push   0x27
  419367:	fnop   
  419369:	cs push es
  41936b:	add    BYTE PTR [edi+0x0],bl
  41936e:	add    DWORD PTR [edx],edx
  419370:	xchg   edi,eax
  419371:	jmp    0xfcc8bcf2
  419376:	lods   eax,DWORD PTR ds:[esi]
  419377:	sbb    al,0xa
  419379:	jmp    0xdca8ab73
  41937e:	aas    
  41937f:	ret    0xe941
  419382:	(bad)
  419385:	mov    WORD PTR [ebp+0xbfa9cac],gs
  41938b:	(bad)  
  41938c:	mov    edi,0x85e5b66d
  419391:	pop    ebp
  419392:	mov    ds:0x69ba0e76,eax
  419397:	lea    esp,[ebx]
  419399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41939a:	jnp    0x4193c9
  41939c:	scas   eax,DWORD PTR es:[edi]
  41939d:	pop    ebx
  41939e:	cmp    al,0x55
  4193a0:	jmp    0x81daf89a
  4193a5:	fisubr DWORD PTR [ecx]
  4193a7:	mov    eax,DWORD PTR [ebp+0x75]
  4193aa:	rcl    BYTE PTR [edx+0x439325e2],0xde
  4193b1:	sub    bh,al
  4193b3:	mov    ecx,0x5e3b537d
  4193b8:	mov    al,BYTE PTR [ebx-0x50]
  4193bb:	jae    0x41934a
  4193bd:	xchg   BYTE PTR ds:[eax-0x41],cl
  4193c1:	mov    edi,0x50871400
  4193c6:	adc    BYTE PTR [eax+esi*8],dl
  4193c9:	scas   al,BYTE PTR es:[edi]
  4193ca:	sub    dh,al
  4193cc:	shl    DWORD PTR [eax+0x51b25cd2],1
  4193d2:	xchg   BYTE PTR [eax-0x29acefc0],bh
  4193d8:	jl     0x4193e3
  4193da:	sbb    al,0xa5
  4193dc:	xchg   DWORD PTR [edi-0x64bd7f29],edx
  4193e2:	adc    ecx,ebp
  4193e4:	js     0x4193fd
  4193e6:	cli    
  4193e7:	or     DWORD PTR [ecx-0x5c8e0f9c],ebp
  4193ed:	enter  0x7fc,0xe3
  4193f1:	js     0x419387
  4193f3:	mov    bh,0x73
  4193f5:	mov    bh,0x36
  4193f7:	add    al,0xd5
  4193f9:	xlat   BYTE PTR ds:[ebx]
  4193fa:	xchg   edi,eax
  4193fb:	fsubr  QWORD PTR [ecx+0x76]
  4193fe:	out    dx,al
  4193ff:	aaa    
  419400:	iret   
  419401:	adc    bh,dh
  419403:	lock cmp eax,0x4a95b307
  419409:	ret    0xd924
  41940c:	mov    esp,0x243a870f
  419411:	push   edi
  419412:	ja     0x4193a1
  419414:	repz cmp ebp,ebp
  419417:	inc    ebp
  419418:	(bad)  
  419419:	aad    0x4c
  41941b:	cmp    dl,BYTE PTR ds:0x868fa646
  419421:	jo     0x4193ba
  419423:	and    al,0xaa
  419425:	jo     0x41942a
  419427:	cmp    edx,DWORD PTR [eax+0x5a9c59d4]
  41942d:	pop    ss
  41942e:	fwait
  41942f:	popf   
  419430:	pop    esp
  419431:	push   eax
  419432:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419434:	not    BYTE PTR ds:0xa21b3071
  41943a:	out    dx,eax
  41943b:	sahf   
  41943c:	and    ebp,DWORD PTR [ebx]
  41943e:	pop    edi
  41943f:	rol    edi,0x52
  419442:	aas    
  419443:	push   esp
  419444:	cmp    eax,esi
  419446:	jmp    0x41946a
  419448:	cmp    bh,bh
  41944a:	out    0x2,eax
  41944c:	and    al,0x5b
  41944e:	inc    esi
  41944f:	sahf   
  419450:	dec    edi
  419451:	lods   al,BYTE PTR ds:[esi]
  419452:	jb     0x4193fc
  419454:	pop    esi
  419455:	xor    DWORD PTR [ebp-0x6bfe2a5],edi
  41945b:	stos   DWORD PTR es:[edi],eax
  41945c:	sbb    ecx,ebx
  41945e:	loopne 0x419411
  419460:	and    cl,ah
  419462:	in     al,0x28
  419464:	adc    ebx,esi
  419466:	loop   0x41945a
  419468:	fcmove st,st(3)
  41946a:	and    eax,0xa299421c
  41946f:	inc    esp
  419470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419471:	lea    eax,ds:0xfd3c73da
  419477:	sar    DWORD PTR [ebx],cl
  419479:	cdq    
  41947a:	ss push ss
  41947c:	sbb    BYTE PTR gs:[edi-0x636ee834],ah
  419483:	jb     0x419423
  419485:	pop    ds
  419486:	fidivr WORD PTR [edx-0x2e]
  419489:	stos   BYTE PTR es:[edi],al
  41948a:	in     eax,dx
  41948b:	jae    0x419501
  41948d:	daa    
  41948e:	and    al,0xb4
  419490:	jl     0x4194d7
  419492:	and    BYTE PTR [edx+0x30],0x64
  419496:	mov    al,ds:0xedc3dee4
  41949b:	xchg   ebx,eax
  41949c:	loopne 0x419487
  41949e:	xor    DWORD PTR [edi+0x7d],edx
  4194a1:	addr16 iret 
  4194a3:	dec    edx
  4194a4:	cli    
  4194a5:	push   edx
  4194a6:	inc    esp
  4194a7:	dec    eax
  4194a8:	jmp    0x419516
  4194aa:	adc    eax,0x28e959d8
  4194af:	daa    
  4194b0:	xor    al,0x8a
  4194b2:	adc    ebx,ebx
  4194b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b5:	(bad)  
  4194b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b7:	pop    ebp
  4194b8:	mov    ds:0x394fd74,eax
  4194bd:	popa   
  4194be:	cmp    DWORD PTR [ecx-0x7246508a],edi
  4194c4:	icebp  
  4194c5:	mov    eax,ds:0x93283bcf
  4194ca:	jnp    0x41944c
  4194cc:	or     esi,DWORD PTR [edi-0x26801bef]
  4194d2:	xchg   esp,eax
  4194d3:	mov    al,bh
  4194d5:	mov    eax,0x6c2ee15e
  4194da:	mov    bh,0x6f
  4194dc:	out    0xba,al
  4194de:	jnp    0x41951c
  4194e0:	aas    
  4194e1:	ins    BYTE PTR es:[edi],dx
  4194e2:	(bad)  
  4194e3:	mov    edx,0xc4675ef4
  4194e8:	or     eax,DWORD PTR [esi]
  4194ea:	call   0xd87a34fe
  4194ef:	fwait
  4194f0:	cmp    edx,DWORD PTR [ecx]
  4194f2:	sub    DWORD PTR [ebx+0x57],0x7b6e0520
  4194f9:	add    edi,edi
  4194fb:	cmp    eax,0xade10110
  419500:	cmc    
  419501:	call   0x122:0x76e354
  419508:	xor    cl,ch
  41950a:	inc    edx
  41950b:	mov    WORD PTR [ecx+0x79],fs
  41950e:	push   ebx
  41950f:	xor    al,0xc1
  419511:	int3   
  419512:	xor    eax,0xc6588ca4
  419517:	inc    eax
  419518:	jnp    0x419557
  41951a:	aad    0x73
  41951c:	cmp    edi,DWORD PTR [ebp-0x351d5055]
  419522:	int    0x7
  419524:	sbb    DWORD PTR es:[edx],esi
  419527:	outs   dx,DWORD PTR ds:[esi]
  419528:	pushf  
  419529:	in     eax,dx
  41952a:	xor    DWORD PTR [eax],0xffffffa3
  41952d:	pop    ebp
  41952e:	ja     0x4194d6
  419530:	mov    dl,0x80
  419532:	cs test al,0xa
  419535:	push   cs
  419536:	test   al,0xd
  419538:	sbb    BYTE PTR [ebp-0x2ee3ab88],bl
  41953e:	or     al,BYTE PTR [edi]
  419540:	mov    ch,0xc7
  419542:	inc    esi
  419543:	pop    esp
  419544:	sbb    al,0x12
  419546:	mov    bh,0x82
  419548:	(bad)  
  419549:	and    esp,DWORD PTR [ebx-0x73]
  41954c:	mov    edi,0x785a99c9
  419551:	mov    cl,0xad
  419553:	mov    dl,0xac
  419555:	std    
  419556:	scas   eax,DWORD PTR es:[edi]
  419557:	rol    ebx,1
  419559:	stos   DWORD PTR es:[edi],eax
  41955a:	sbb    ah,BYTE PTR [edx-0x2a709f1a]
  419560:	jle    0x419512
  419562:	xor    ch,BYTE PTR [ebx-0x10]
  419565:	mov    eax,0xd4432b7a
  41956a:	rcl    BYTE PTR [edi],0x1f
  41956d:	mov    eax,ecx
  41956f:	mov    BYTE PTR [edi+edi*1+0x2428f4e3],al
  419576:	push   ds
  419577:	lea    esi,[ebx-0x40]
  41957a:	sub    DWORD PTR [esi],esp
  41957c:	imul   esp
  41957e:	pop    ebx
  41957f:	sub    al,0xe1
  419581:	mov    ds:0xda292a11,eax
  419586:	stos   DWORD PTR es:[edi],eax
  419587:	mov    ebx,0x99fd5a50
  41958c:	aam    0x42
  41958e:	dec    esi
  41958f:	std    
  419590:	mov    ebx,0x61ffb2f2
  419595:	jmp    0x7f3c:0x474f572d
  41959c:	jecxz  0x419540
  41959e:	add    DWORD PTR [edi],0x3f
  4195a1:	inc    ecx
  4195a2:	mov    edi,0x908b85c3
  4195a7:	push   ebx
  4195a8:	mov    ds:0xc2d13f1,eax
  4195ad:	call   0xe5ce:0x2d1d83f8
  4195b4:	dec    eax
  4195b5:	ds sbb eax,0xba35b5df
  4195bb:	loope  0x4195b6
  4195bd:	pop    edx
  4195be:	push   ebp
  4195bf:	add    bh,BYTE PTR [ebp-0x2537d6b7]
  4195c5:	jo     0x419579
  4195c7:	fbld   TBYTE PTR [eax+eax*1]
  4195ca:	frstor [edi-0x57]
  4195cd:	pop    edi
  4195ce:	fidivr WORD PTR ds:0x86791618
  4195d4:	dec    BYTE PTR [edi]
  4195d6:	inc    edx
  4195d7:	and    eax,0xed8da5e3
  4195dc:	pop    es
  4195dd:	(bad)  
  4195de:	int3   
  4195df:	outs   dx,DWORD PTR ds:[esi]
  4195e0:	test   DWORD PTR [esi],ecx
  4195e2:	lock jo 0x4195d0
  4195e5:	lds    ebx,FWORD PTR ds:0x644bd6f4
  4195eb:	mov    eax,0x5d6bf06a
  4195f0:	aas    
  4195f1:	pop    ebp
  4195f2:	and    eax,0x7732cf2f
  4195f7:	push   ds
  4195f8:	push   ecx
  4195f9:	xchg   ebx,eax
  4195fa:	jmp    0x419593
  4195fc:	shl    BYTE PTR [eax],1
  4195fe:	push   edx
  4195ff:	push   0x5f
  419601:	mov    ebx,0x9ed879a
  419606:	cdq    
  419607:	push   ebp
  419608:	bound  ebx,QWORD PTR [edi+0x5c]
  41960b:	xchg   ebp,eax
  41960c:	inc    ebx
  41960d:	sahf   
  41960e:	jno    0x41964d
  419610:	fiadd  DWORD PTR [ecx*1+0x699047db]
  419617:	gs (bad) 
  419619:	xor    DWORD PTR [edx+0x4c],ecx
  41961c:	jns    0x4195c7
  41961e:	pop    edx
  41961f:	jle    0x4195b0
  419621:	push   ebp
  419622:	sahf   
  419623:	push   es
  419624:	sub    edi,0xd9183b99
  41962a:	int3   
  41962b:	clc    
  41962c:	dec    esi
  41962d:	inc    ebp
  41962e:	or     al,dl
  419630:	lds    ecx,FWORD PTR [eax+0x5d3f3771]
  419636:	les    ebx,FWORD PTR [ecx+0x77]
  419639:	dec    esp
  41963a:	xchg   esi,eax
  41963b:	nop
  41963c:	inc    edx
  41963d:	mov    ecx,0xffd56279
  419642:	inc    bh
  419644:	mov    ecx,0xd9f3ec8
  419649:	out    dx,al
  41964a:	ss stos DWORD PTR es:[edi],eax
  41964c:	(bad)  
  41964d:	pushf  
  41964e:	xchg   esp,eax
  41964f:	mov    BYTE PTR [ebp+0x4bd922f2],bh
  419655:	lock xchg edx,eax
  419657:	lods   al,BYTE PTR ds:[esi]
  419658:	in     al,dx
  419659:	jnp    0x41965e
  41965b:	adc    ah,al
  41965d:	and    eax,0x2a5f84d0
  419663:	test   DWORD PTR [ecx-0x19c2029a],edi
  419669:	daa    
  41966a:	adc    eax,0xce59e34
  41966f:	adc    BYTE PTR [ebp*1+0x1d0841c6],0xae
  419677:	in     al,0x1f
  419679:	dec    eax
  41967a:	lods   al,BYTE PTR ds:[esi]
  41967b:	push   eax
  41967c:	leave  
  41967d:	xchg   ah,ah
  41967f:	ret    0x41ff
  419682:	inc    esi
  419683:	mov    edi,0x37444f84
  419688:	out    dx,eax
  419689:	pushf  
  41968a:	inc    esi
  41968b:	mov    esi,0x9cf46c86
  419690:	push   ds
  419691:	ins    BYTE PTR es:[edi],dx
  419692:	in     eax,0x89
  419694:	shl    BYTE PTR [edi+ebx*8],1
  419697:	cs inc ebx
  419699:	scas   al,BYTE PTR es:[edi]
  41969a:	add    al,0x64
  41969c:	cwde   
  41969d:	xchg   edx,eax
  41969e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41969f:	jmp    DWORD PTR [edx]
  4196a1:	div    BYTE PTR [esi-0x29]
  4196a4:	add    DWORD PTR [ebx+0x6bfe41e9],ebp
  4196aa:	leave  
  4196ab:	sbb    ebx,DWORD PTR [edi-0x64]
  4196ae:	cmp    dh,dl
  4196b0:	(bad)  
  4196b1:	stos   DWORD PTR es:[edi],eax
  4196b2:	jmp    0x4196a6
  4196b4:	outs   dx,BYTE PTR ds:[esi]
  4196b5:	cli    
  4196b6:	mov    cs,WORD PTR [ebx-0xd96129b]
  4196bc:	xor    dh,bh
  4196be:	sub    al,0x4e
  4196c0:	adc    BYTE PTR [eax+ebp*4],cl
  4196c3:	sbb    ch,bl
  4196c5:	sar    BYTE PTR ss:[edx-0x22218edd],0x2
  4196cd:	retf   
  4196ce:	lds    esi,FWORD PTR es:[ebx+0x715cfd47]
  4196d5:	and    dl,BYTE PTR [esi-0x17]
  4196d8:	lea    ecx,[edi-0x4399fbe9]
  4196de:	push   0xffffffd0
  4196e0:	call   0x8a752345
  4196e5:	fwait
  4196e6:	adc    esp,edx
  4196e8:	scas   al,BYTE PTR es:[edi]
  4196e9:	fiadd  WORD PTR [ebx+ebp*1+0x53ee9349]
  4196f0:	mov    edx,0x404e537c
  4196f5:	ret    
  4196f6:	inc    edi
  4196f7:	sub    ah,cl
  4196f9:	or     DWORD PTR [eax+0x772270c3],0xef8fe135
  419703:	ds in  eax,0x5a
  419706:	xchg   ecx,eax
  419707:	cmp    BYTE PTR [eax-0x8],cl
  41970a:	ins    DWORD PTR es:[edi],dx
  41970b:	push   es
  41970c:	ret    
  41970d:	js     0x41975f
  41970f:	popa   
  419710:	pop    eax
  419711:	jmp    0x4196aa
  419713:	punpckldq mm6,DWORD PTR [eax+0x14]
  419717:	mov    ebp,0x6c5e822b
  41971c:	jl     0x4196ea
  41971e:	pop    esp
  41971f:	int    0x7f
  419721:	inc    ebx
  419722:	out    0xdf,al
  419724:	les    ebx,FWORD PTR [eax+0x1a]
  419727:	or     edi,DWORD PTR [edi]
  419729:	fiadd  WORD PTR [edx-0x2b]
  41972c:	push   0x4f9aa62d
  419731:	jl     0x4196e8
  419733:	fsub   DWORD PTR [edi]
  419735:	add    al,0xc0
  419737:	pop    ds
  419738:	mov    edi,0x7fb6730d
  41973d:	pop    es
  41973e:	(bad)  
  419740:	mov    al,0x92
  419742:	adc    DWORD PTR [edi+ecx*8-0x1f],edi
  419746:	xor    al,0x65
  419748:	imul   esp,DWORD PTR [edi],0x149d81c9
  41974e:	les    eax,FWORD PTR [eax]
  419750:	out    0x2d,eax
  419752:	int3   
  419753:	fstp   TBYTE PTR [esi+ebp*4-0x3]
  419757:	jb     0x419781
  419759:	xchg   ebp,eax
  41975a:	inc    edi
  41975b:	imul   DWORD PTR [esi-0x18a9ba00]
  419761:	xor    DWORD PTR [edi-0x3b14b105],0xa52fc1cd
  41976b:	into   
  41976c:	aas    
  41976d:	inc    DWORD PTR [ebx+edi*1+0x3f2eadeb]
  419774:	jmp    DWORD PTR [ecx+0x3a84f283]
  41977a:	push   edx
  41977b:	mov    ah,0x95
  41977d:	call   0x2ed5:0x612b329
  419784:	mov    esi,0x5aa17ec1
  419789:	fwait
  41978a:	cmp    ah,BYTE PTR ds:0x353d652d
  419790:	xchg   esi,eax
  419791:	clc    
  419792:	xchg   edx,eax
  419793:	ret    0x8389
  419796:	mov    ebx,eax
  419798:	push   0x41
  41979a:	ja     0x41971d
  41979c:	out    0x8,al
  41979e:	add    eax,0x46770101
  4197a3:	and    DWORD PTR [ecx+ebx*4+0x3602ebf2],ebx
  4197aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ab:	mov    DWORD PTR [ecx],esi
  4197ad:	mov    ah,0x6a
  4197af:	pop    ds
  4197b0:	sub    al,0x3d
  4197b2:	and    eax,0x7d74eaa7
  4197b7:	adc    al,dh
  4197b9:	cmp    eax,ecx
  4197bb:	lock jecxz 0x4197e3
  4197be:	not    DWORD PTR [esi]
  4197c0:	stc    
  4197c1:	mov    esi,0xa6b68276
  4197c6:	and    DWORD PTR [ecx],0xfffffff4
  4197c9:	cmp    DWORD PTR [esi+0x60],0xa06c0221
  4197d0:	mov    gs,WORD PTR [ebp+0x34]
  4197d3:	adc    BYTE PTR ds:0xe16126d2,bl
  4197d9:	je     0x41984e
  4197db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197dc:	cmp    eax,0xd9009d92
  4197e1:	jp     0x419771
  4197e3:	dec    ebx
  4197e4:	push   esi
  4197e5:	scas   al,BYTE PTR es:[edi]
  4197e6:	sbb    DWORD PTR [eax+0xb],ebx
  4197e9:	adc    ebp,DWORD PTR [edx+0x43f6cd42]
  4197ef:	shl    ah,1
  4197f1:	xchg   DWORD PTR [ebx],esp
  4197f3:	sub    al,0x0
  4197f5:	sar    ebx,0x31
  4197f8:	std    
  4197f9:	dec    edi
  4197fa:	jecxz  0x419782
  4197fc:	cld    
  4197fd:	dec    esp
  4197fe:	fild   WORD PTR [edx-0x6103ab13]
  419804:	popa   
  419805:	add    dl,0x5a
  419808:	loopne 0x41984d
  41980a:	xchg   esi,eax
  41980b:	aam    0xb5
  41980d:	(bad)  
  41980e:	inc    ebp
  41980f:	or     ecx,DWORD PTR ds:[eiz*2-0x3413c002]
  419817:	fisubr DWORD PTR [ebx]
  419819:	aas    
  41981a:	and    esp,DWORD PTR [edx]
  41981c:	push   ds
  41981d:	dec    esp
  41981e:	sub    eax,0x7a01bf17
  419823:	in     al,0xdd
  419825:	in     eax,dx
  419826:	jmp    0x419880
  419828:	jnp    0x419856
  41982a:	std    
  41982b:	jl     0x4197de
  41982d:	sbb    eax,0xaaa36941
  419832:	pushf  
  419833:	int3   
  419834:	dec    edi
  419835:	sub    al,dh
  419837:	push   ebp
  419838:	shr    BYTE PTR [ebx],0x74
  41983b:	xor    eax,0x56ade7f0
  419840:	cwde   
  419841:	retf   
  419842:	test   edx,ecx
  419844:	les    edi,FWORD PTR [ebp+0x64]
  419847:	scas   al,BYTE PTR es:[edi]
  419848:	or     ebp,ebp
  41984a:	adc    BYTE PTR [ebp+0x2cb5fe22],0xe9
  419851:	sbb    DWORD PTR [esp+ecx*4+0x6445bfe3],ecx
  419858:	xchg   edx,eax
  419859:	call   0x68884bd6
  41985e:	or     al,0xfb
  419860:	push   es
  419861:	imul   DWORD PTR [ebx]
  419863:	adc    edi,DWORD PTR [edx+ecx*8]
  419866:	mov    ds:0xdccb5362,al
  41986b:	inc    esi
  41986c:	pushf  
  41986d:	and    eax,0x21c1b05c
  419872:	adc    al,0xd5
  419874:	pop    ecx
  419875:	jno    0x41981d
  419877:	adc    DWORD PTR [esi],esi
  419879:	and    BYTE PTR [eax+edx*2],al
  41987c:	xchg   DWORD PTR [ecx-0x14],eax
  41987f:	mov    edi,0x3847682a
  419884:	mov    BYTE PTR [edx+0x10],bl
  419887:	out    dx,al
  419888:	rol    DWORD PTR [ebx-0x4],cl
  41988b:	push   edx
  41988c:	outs   dx,BYTE PTR ds:[esi]
  41988d:	retf   0x2e29
  419890:	cli    
  419891:	loop   0x41984c
  419893:	xor    dl,BYTE PTR [edi-0x3b]
  419896:	mov    ah,0x73
  419898:	mov    al,ds:0x6d9e40df
  41989d:	inc    ebp
  41989e:	cmp    dh,BYTE PTR [edi+0x5a9ac82a]
  4198a4:	icebp  
  4198a5:	sar    BYTE PTR [esi],cl
  4198a7:	and    ah,BYTE PTR [edx+esi*4]
  4198aa:	mov    bh,0xb6
  4198ac:	xchg   ebx,eax
  4198ad:	cmp    al,0xa5
  4198af:	jo     0x41989a
  4198b1:	inc    ecx
  4198b2:	or     ch,ch
  4198b4:	dec    ebx
  4198b5:	jo     0x4198b1
  4198b7:	aam    0x52
  4198b9:	xor    DWORD PTR [edx+0x13],edi
  4198bc:	mov    bl,0x4b
  4198be:	sub    ebp,DWORD PTR [edi+ebp*8-0x26ca1d30]
  4198c5:	sbb    ah,dl
  4198c7:	and    DWORD PTR [esi+ebx*4+0x6],edi
  4198cb:	mov    DWORD PTR [ebp+0x3eab75ce],ebx
  4198d1:	mov    ecx,0x7feaf004
  4198d6:	mov    eax,0x6b3ffbb2
  4198db:	pushf  
  4198dc:	out    0x1c,eax
  4198de:	inc    esi
  4198df:	add    dh,BYTE PTR [esi-0x2]
  4198e2:	ss sbb edi,edx
  4198e5:	outs   dx,BYTE PTR ds:[esi]
  4198e6:	xchg   ebx,eax
  4198e7:	cli    
  4198e8:	loop   0x4198ef
  4198ea:	pushf  
  4198eb:	xor    eax,DWORD PTR [edx+0x78]
  4198ee:	add    BYTE PTR [ebx+0x6f],ch
  4198f1:	and    al,0xef
  4198f3:	adc    BYTE PTR [esi+0x74],al
  4198f6:	sub    al,0x7f
  4198f8:	outs   dx,BYTE PTR ds:[esi]
  4198f9:	cmp    ebp,edi
  4198fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fc:	sub    al,0xc8
  4198fe:	xchg   ebp,eax
  4198ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419900:	push   esi
  419901:	pop    ebp
  419902:	mov    esp,DWORD PTR [esi+edi*1]
  419905:	push   0xffffffea
  419907:	int    0xb2
  419909:	fs ss cmp eax,eax
  41990d:	cmp    DWORD PTR [edx+0x5de06bb5],ebp
  419913:	add    al,0x41
  419915:	sub    eax,0xe2f3337f
  41991a:	into   
  41991b:	ins    BYTE PTR es:[edi],dx
  41991c:	loopne 0x4198b5
  41991e:	lods   eax,DWORD PTR ds:[esi]
  41991f:	fadd   DWORD PTR [ebp-0x12]
  419922:	in     al,0x1f
  419924:	pushf  
  419925:	iret   
  419926:	or     bh,dh
  419928:	xchg   ecx,eax
  419929:	and    ch,BYTE PTR [edi+ecx*8-0x73413d42]
  419930:	jmp    0xaf11:0x37a5e5d1
  419937:	(bad)  
  419938:	push   0xffffffc9
  41993a:	sub    al,0xc1
  41993c:	stc    
  41993d:	or     esi,ecx
  41993f:	sub    eax,0x3a260871
  419944:	sbb    al,0x74
  419946:	pop    edx
  419947:	je     0x41992e
  419949:	cwde   
  41994a:	mov    dl,0xc4
  41994c:	xor    al,0xd5
  41994e:	and    DWORD PTR [ecx+0x31],0xfffffffa
  419952:	mov    eax,0x5624f317
  419957:	paddw  mm1,QWORD PTR [esi-0x2e04f28]
  41995e:	push   ss
  41995f:	shr    DWORD PTR [edx-0x7c],cl
  419962:	fimul  WORD PTR [esi+0x2b]
  419965:	dec    edx
  419966:	ret    
  419967:	fst    QWORD PTR [edi]
  419969:	cli    
  41996a:	cdq    
  41996b:	push   esi
  41996c:	mov    ah,0x9b
  41996e:	xor    eax,0xe151f932
  419973:	mov    DWORD PTR [eax+0xab64359],ebx
  419979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41997a:	rcr    BYTE PTR [edi+eax*2+0xf],0x31
  41997f:	test   BYTE PTR ds:0x67d25c42,ch
  419985:	loopne 0x41994a
  419987:	push   esp
  419988:	cmp    BYTE PTR [eax+0x54],ch
  41998b:	popf   
  41998c:	ret    
  41998d:	(bad)  
  41998e:	cld    
  41998f:	out    dx,eax
  419990:	xor    ah,bl
  419992:	pop    ebx
  419993:	repz jbe 0x419925
  419996:	mov    esi,0xa2bf3132
  41999b:	ja     0x419965
  41999d:	cmp    edi,DWORD PTR [ebp-0x66]
  4199a0:	out    0x6e,al
  4199a2:	or     DWORD PTR [ecx+ebp*8],esi
  4199a5:	les    edx,FWORD PTR [edi]
  4199a7:	ret    
  4199a8:	xchg   esp,eax
  4199a9:	adc    BYTE PTR [esp+edi*1-0x47],cl
  4199ad:	cli    
  4199ae:	inc    edi
  4199af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b0:	and    bl,0xb0
  4199b3:	loopne 0x419939
  4199b5:	add    dl,BYTE PTR [edx+0x3630d551]
  4199bb:	loopne 0x4199b2
  4199bd:	sub    al,0xa0
  4199bf:	sub    ah,BYTE PTR [eax]
  4199c1:	aam    0x89
  4199c3:	leave  
  4199c4:	sub    edx,DWORD PTR [edi+0x310f427]
  4199ca:	sbb    ebp,DWORD PTR ds:0x820bec85
  4199d0:	pusha  
  4199d1:	test   BYTE PTR [ebp+0x41],bh
  4199d4:	lock sti 
  4199d6:	js     0x4199e7
  4199d8:	ret    
  4199d9:	ins    BYTE PTR es:[edi],dx
  4199da:	add    DWORD PTR [ebx],esp
  4199dc:	repz iret 
  4199de:	sti    
  4199df:	mov    WORD PTR [edi-0x7e4b0a25],?
  4199e5:	mov    al,ds:0x973004ac
  4199ea:	call   0x526862cd
  4199ef:	push   edx
  4199f0:	sar    DWORD PTR [edx-0x28],cl
  4199f3:	or     al,BYTE PTR [edi-0x25]
  4199f6:	and    al,0x98
  4199f8:	repnz push esi
  4199fa:	enter  0x2245,0x5b
  4199fe:	adc    al,0xd1
  419a00:	fs popa 
  419a02:	push   ecx
  419a03:	fcomi  st,st(7)
  419a05:	dec    edi
  419a06:	or     eax,0x62240604
  419a0b:	xor    ch,BYTE PTR [edi]
  419a0d:	fnsave [edi+0x66d012d0]
  419a13:	js     0x419a59
  419a15:	loop   0x4199f9
  419a17:	scas   eax,DWORD PTR es:[edi]
  419a18:	leave  
  419a19:	stos   BYTE PTR es:[edi],al
  419a1a:	stc    
  419a1b:	shl    DWORD PTR [esp+ecx*1],1
  419a1e:	scas   al,BYTE PTR es:[edi]
  419a1f:	xor    BYTE PTR [esi-0x56],dl
  419a22:	cmp    BYTE PTR [ecx*2-0x2d7b112a],bh
  419a29:	enter  0xbdd0,0x5d
  419a2d:	aas    
  419a2e:	or     bh,dh
  419a30:	dec    BYTE PTR [eax-0x75]
  419a33:	inc    esi
  419a34:	das    
  419a35:	xchg   ebx,eax
  419a36:	or     dh,BYTE PTR [eax-0x5f7de276]
  419a3c:	iret   
  419a3d:	sbb    ah,bh
  419a3f:	mov    esp,0xf2c42e62
  419a44:	mov    eax,0x5dafc978
  419a49:	pop    ss
  419a4a:	addr16 hlt 
  419a4c:	cmp    DWORD PTR [ebp-0x4870071a],esp
  419a52:	cli    
  419a53:	jl     0x419a43
  419a55:	inc    ebp
  419a56:	xchg   esi,eax
  419a57:	ja     0x419a91
  419a59:	mov    WORD PTR [ecx],?
  419a5b:	ins    BYTE PTR es:[edi],dx
  419a5c:	fdivr  DWORD PTR [eax+0x6940a22d]
  419a62:	mov    ch,0x2a
  419a64:	loopne 0x419a86
  419a66:	xchg   ebp,eax
  419a67:	xor    ch,bl
  419a69:	(bad)  
  419a6a:	mov    ecx,0xa75c855c
  419a6f:	xor    al,0xc7
  419a71:	jge    0x419a17
  419a73:	jl     0x419a5e
  419a75:	arpl   cx,si
  419a77:	cmp    al,0xd1
  419a79:	xor    al,0x1f
  419a7b:	jne    0x419aad
  419a7d:	sbb    esi,DWORD PTR [eax+0x1f]
  419a80:	sbb    bl,BYTE PTR [ebx+0x2c]
  419a83:	aam    0x95
  419a85:	xor    al,0xec
  419a87:	mov    BYTE PTR [esi+0x71],al
  419a8a:	mov    dh,0xec
  419a8c:	out    0x93,eax
  419a8e:	(bad)  
  419a8f:	in     eax,dx
  419a90:	add    ax,0x2fd0
  419a94:	add    edx,eax
  419a96:	mov    dl,0xfa
  419a98:	ds inc eax
  419a9a:	rcr    BYTE PTR [eax+0x7f],cl
  419a9d:	icebp  
  419a9e:	call   0x6957:0xb03c0a6b
  419aa5:	inc    eax
  419aa6:	retf   0xfcdd
  419aa9:	shl    BYTE PTR [ebx-0x65e5c6b5],cl
  419aaf:	int    0x82
  419ab1:	inc    ecx
  419ab2:	sub    eax,0xa9127693
  419ab7:	mov    dl,0xe8
  419ab9:	push   ecx
  419aba:	xchg   ecx,eax
  419abb:	test   BYTE PTR [eax],bh
  419abd:	and    al,0x63
  419abf:	pop    ebx
  419ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac1:	sub    BYTE PTR [esi],0x71
  419ac4:	cli    
  419ac5:	dec    ebx
  419ac6:	fsub   DWORD PTR [ebp-0x1b]
  419ac9:	adc    ebp,esp
  419acb:	jmp    0xd2f2:0xa37c20be
  419ad2:	out    dx,al
  419ad3:	fmul   QWORD PTR [ebx+0x61]
  419ad6:	loop   0x419b3d
  419ad8:	in     al,0x74
  419ada:	inc    ebp
  419adb:	mov    al,0xe1
  419add:	mov    al,ds:0x36cb9862
  419ae2:	add    DWORD PTR [eax],ecx
  419ae4:	test   al,0x26
  419ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ae7:	mov    gs,WORD PTR [ebx-0x69f735dd]
  419aed:	repz or eax,0x2ae1ab67
  419af3:	scas   eax,DWORD PTR es:[edi]
  419af4:	fstp   QWORD PTR [esi-0x76be008c]
  419afa:	ja     0x419b68
  419afc:	or     eax,0xd37cbfb8
  419b01:	jbe    0x419a8e
  419b03:	sar    DWORD PTR [edx+0x7937e2f0],0x3
  419b0a:	push   edx
  419b0b:	add    eax,0xa3b6f7fd
  419b10:	(bad)  
  419b11:	sbb    BYTE PTR [ebx-0x233e5c60],dh
  419b17:	(bad)  
  419b18:	push   eax
  419b19:	ja     0x419aef
  419b1b:	fist   WORD PTR [eax]
  419b1d:	jge    0x419ade
  419b1f:	pop    edi
  419b20:	test   al,0x6a
  419b22:	stos   DWORD PTR es:[edi],eax
  419b23:	push   ss
  419b24:	test   al,0xea
  419b26:	xor    al,0x92
  419b28:	mov    esi,0x67e6cab2
  419b2d:	mov    dh,0xc9
  419b2f:	repnz push esi
  419b31:	stos   DWORD PTR es:[edi],eax
  419b32:	jl     0x419b33
  419b34:	les    eax,FWORD PTR ds:0xdb65b2a6
  419b3a:	sbb    ebx,DWORD PTR [ebp+esi*4-0x14]
  419b3e:	mov    edi,DWORD PTR [ecx+ecx*4-0x75e8b609]
  419b45:	ins    DWORD PTR es:[edi],dx
  419b46:	stos   BYTE PTR es:[edi],al
  419b47:	sub    ch,bh
  419b49:	cs or  eax,0xe185bea4
  419b4f:	jmp    0x419b41
  419b51:	mul    DWORD PTR [ebx+esi*1-0x4dcb5857]
  419b58:	stos   DWORD PTR es:[edi],eax
  419b59:	inc    eax
  419b5a:	push   0xffffff8a
  419b5c:	repz jle 0x419bb5
  419b5f:	fs enter 0x4a1b,0x28
  419b64:	dec    edx
  419b65:	stos   DWORD PTR es:[edi],eax
  419b66:	jb     0x419b68
  419b68:	jne    0x419b72
  419b6a:	mov    eax,0xcbee596e
  419b6f:	jbe    0x419ba8
  419b71:	xor    al,0xb9
  419b73:	icebp  
  419b74:	fwait
  419b75:	pop    es
  419b76:	arpl   WORD PTR [esi-0x13],si
  419b79:	push   esp
  419b7a:	pop    ds
  419b7b:	sar    BYTE PTR [ebp+edi*8+0x5d],1
  419b7f:	aas    
  419b80:	jecxz  0x419b23
  419b82:	shl    BYTE PTR [edx+0x56],0x34
  419b86:	jb     0x419b2c
  419b88:	push   esi
  419b89:	aad    0x6
  419b8b:	shr    BYTE PTR [ebx+ebp*1+0x745d9e59],cl
  419b92:	or     ebx,eax
  419b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b95:	jmp    0x740cc89f
  419b9a:	jmp    0x419b6b
  419b9c:	xchg   ebx,eax
  419b9d:	jmp    0x419c1d
  419b9f:	sbb    al,0x17
  419ba1:	ins    DWORD PTR es:[edi],dx
  419ba2:	mov    ss,WORD PTR [ecx+0x68]
  419ba5:	cdq    
  419ba6:	in     al,0xa6
  419ba8:	int3   
  419ba9:	in     eax,0x6a
  419bab:	push   ebx
  419bac:	(bad)  
  419bad:	(bad)  
  419baf:	pop    esp
  419bb0:	psllw  mm1,QWORD PTR [eax+esi*1+0x4b]
  419bb5:	jne    0x419c23
  419bb7:	fdiv   QWORD PTR [edi]
  419bb9:	push   0xffffffb8
  419bbb:	imul   esp,DWORD PTR [eax-0x68],0xffffff91
  419bbf:	shl    BYTE PTR [ebp-0xd],1
  419bc2:	or     eax,0x1c82a661
  419bc7:	out    0xd3,al
  419bc9:	ss aam 0x34
  419bcc:	xor    ecx,0xb
  419bcf:	(bad)  
  419bd0:	push   es
  419bd1:	jo     0x419b82
  419bd3:	ins    DWORD PTR es:[edi],dx
  419bd4:	mov    ds:0xc75e0a37,al
  419bd9:	in     eax,0x74
  419bdb:	push   esi
  419bdc:	outs   dx,DWORD PTR ds:[esi]
  419bdd:	cmp    ch,ch
  419bdf:	in     al,dx
  419be0:	jecxz  0x419b6a
  419be2:	cli    
  419be3:	push   ebx
  419be4:	mul    dh
  419be6:	inc    eax
  419be7:	mov    ecx,0x2f324dac
  419bec:	aas    
  419bed:	cmp    eax,0x651b6e42
  419bf2:	(bad)  
  419bf3:	lods   al,BYTE PTR ds:[esi]
  419bf4:	mov    ds:0xc9491567,eax
  419bf9:	fnsave [esi+eiz*1]
  419bfc:	mov    ah,0x17
  419bfe:	shl    BYTE PTR [edi-0xc],1
  419c01:	ss stc 
  419c03:	jge    0x419c61
  419c05:	inc    esp
  419c06:	add    eax,0x3d03a812
  419c0b:	pushf  
  419c0c:	call   0x26c69a27
  419c11:	jmp    0x419bae
  419c13:	push   0xcf4ced54
  419c18:	inc    edx
  419c19:	mov    DWORD PTR [ecx],ebx
  419c1b:	xchg   ebx,eax
  419c1c:	push   ds
  419c1d:	repz adc edx,ebp
  419c20:	sub    DWORD PTR [edi],0x38
  419c23:	mov    bl,0x2f
  419c25:	dec    edi
  419c26:	test   eax,0x8780243f
  419c2b:	sbb    bh,0x8c
  419c2e:	inc    esi
  419c2f:	mov    eax,0x93bae6db
  419c34:	iret   
  419c35:	mov    ebp,0x7d1574b2
  419c3a:	(bad)  
  419c3b:	jbe    0x419c50
  419c3d:	out    0x76,eax
  419c3f:	xor    eax,0xe2ab7061
  419c44:	mov    bl,0x91
  419c46:	push   ds
  419c47:	stos   DWORD PTR es:[edi],eax
  419c48:	push   0x24
  419c4a:	xor    al,0xfb
  419c4c:	or     eax,0x296fd6eb
  419c51:	jnp    0x419cb1
  419c53:	dec    ecx
  419c54:	loop   0x419bf5
  419c56:	push   ecx
  419c57:	jb     0x419c90
  419c59:	or     ah,BYTE PTR [edi]
  419c5b:	dec    ecx
  419c5c:	inc    esp
  419c5d:	shl    DWORD PTR [ebx-0x3f],cl
  419c60:	mov    al,ds:0x603bda84
  419c65:	fist   DWORD PTR [edx+0x6f]
  419c68:	cmp    bl,ah
  419c6a:	sub    eax,DWORD PTR [edi-0x2c459e68]
  419c70:	mov    edi,0x629075d2
  419c75:	clc    
  419c76:	and    cl,al
  419c78:	push   0xfffffff6
  419c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c7b:	hlt    
  419c7c:	jmp    0x324d:0xa61c1b85
  419c83:	and    eax,0x192eaf39
  419c88:	and    al,0x67
  419c8a:	inc    ebp
  419c8b:	sbb    bl,0x9b
  419c8e:	retf   
  419c8f:	test   DWORD PTR [edi-0x321f7e40],edi
  419c95:	aas    
  419c96:	xor    esi,DWORD PTR [ecx+0xa915f59]
  419c9c:	arpl   WORD PTR [esi+0x36ff1f35],ax
  419ca2:	in     al,dx
  419ca3:	add    DWORD PTR [edx-0x4f],esi
  419ca6:	ja     0x419cae
  419ca8:	das    
  419ca9:	aas    
  419caa:	and    al,0x88
  419cac:	mov    ecx,0x77a39dfd
  419cb1:	sbb    DWORD PTR [ecx+eiz*4+0x6b942bd],esi
  419cb8:	fisub  DWORD PTR [eax]
  419cba:	or     BYTE PTR [esp+eiz*2+0x77cbb550],bh
  419cc1:	mov    al,BYTE PTR [ecx-0x58]
  419cc4:	lahf   
  419cc5:	fs jno 0x419cb0
  419cc8:	shr    ecx,0x36
  419ccb:	int3   
  419ccc:	jnp    0x419cc1
  419cce:	les    edx,FWORD PTR [ebp+0x4e620cfb]
  419cd4:	inc    esi
  419cd5:	(bad)  
  419cd6:	lock daa 
  419cd8:	fstp   QWORD PTR [ebx-0x80]
  419cdb:	jae    0x419cba
  419cdd:	imul   eax,DWORD PTR [edi],0xfffffff5
  419ce0:	dec    eax
  419ce1:	cld    
  419ce2:	xor    bh,BYTE PTR [eax+edi*4-0x42]
  419ce6:	retf   
  419ce7:	mov    edi,0x187e95a4
  419cec:	adc    bh,ah
  419cee:	in     al,dx
  419cef:	stos   DWORD PTR es:[edi],eax
  419cf0:	lods   al,BYTE PTR ds:[esi]
  419cf1:	addr16 pop ecx
  419cf3:	xor    bl,BYTE PTR [eax-0x62286719]
  419cf9:	xchg   esp,eax
  419cfa:	jl     0x419c9f
  419cfc:	jp     0x419d54
  419cfe:	push   edx
  419cff:	sahf   
  419d00:	xor    al,0x81
  419d02:	jnp    0x419d4d
  419d04:	ror    DWORD PTR [ecx+edx*1+0x3d65f571],cl
  419d0b:	outs   dx,BYTE PTR es:[esi]
  419d0d:	shl    DWORD PTR [edx],0x61
  419d10:	sbb    BYTE PTR [esi+0x74889e19],ch
  419d16:	mov    edi,0x3438246b
  419d1b:	outs   dx,DWORD PTR ds:[esi]
  419d1c:	add    DWORD PTR [esp+ebp*1+0x1c],ecx
  419d20:	pop    ecx
  419d21:	xor    BYTE PTR [esi-0x63a38e89],ah
  419d27:	push   0xffffff9b
  419d29:	rcl    DWORD PTR es:[esi+0x1fb5eec6],1
  419d30:	jb     0x419d03
  419d32:	inc    eax
  419d33:	push   eax
  419d34:	push   ss
  419d35:	push   edx
  419d36:	enter  0x583e,0x4b
  419d3a:	push   cs
  419d3b:	jmp    0x419d6d
  419d3d:	loopne 0x419cf9
  419d3f:	sbb    DWORD PTR [ecx+ebx*4+0x4856d7e],ebx
  419d46:	sar    esp,cl
  419d48:	fld    st(2)
  419d4a:	cmc    
  419d4b:	jae    0x419da8
  419d4d:	jl     0x419cf4
  419d4f:	mov    cl,0xec
  419d51:	sbb    esi,esp
  419d53:	mov    al,0x86
  419d55:	jno    0x419ceb
  419d57:	leave  
  419d58:	push   es
  419d59:	mov    dl,0x92
  419d5b:	test   BYTE PTR [ecx-0x30],cl
  419d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d5f:	jecxz  0x419d4a
  419d61:	hlt    
  419d62:	sbb    al,0xa3
  419d64:	pop    ss
  419d65:	or     eax,0xb80650f2
  419d6a:	loop   0x419d0e
  419d6c:	push   edi
  419d6d:	mov    esp,edx
  419d6f:	adc    eax,0xbf55630b
  419d74:	and    eax,0xe32782f3
  419d79:	mov    esi,0x245d8578
  419d7e:	ficom  DWORD PTR [edi-0x5950a4ba]
  419d84:	inc    ebp
  419d85:	outs   dx,DWORD PTR ds:[esi]
  419d86:	push   ecx
  419d87:	jp     0x419d37
  419d89:	or     BYTE PTR [edx+0x2d],al
  419d8c:	retf   0x52c6
  419d8f:	adc    eax,0xca72b19c
  419d94:	sbb    BYTE PTR [edx-0x57],al
  419d97:	data16 neg BYTE PTR [eax]
  419d9a:	cs call 0x6c35:0x689aaf37
  419da2:	mov    bl,0x89
  419da4:	xchg   ebx,eax
  419da5:	retf   0xc16b
  419da8:	xor    BYTE PTR [ebp+0x25],ch
  419dab:	retf   
  419dac:	xchg   ecx,eax
  419dad:	popa   
  419dae:	test   DWORD PTR [edx],eax
  419db0:	in     eax,dx
  419db1:	push   0x9b31ab36
  419db6:	cmp    ebx,DWORD PTR [esi+ecx*2+0x4]
  419dba:	jmp    0x419d40
  419dbc:	lea    ecx,[esi]
  419dbe:	jge    0x419e1c
  419dc0:	stc    
  419dc1:	out    dx,eax
  419dc2:	xchg   ecx,eax
  419dc3:	push   0x8a495548
  419dc8:	ret    
  419dc9:	adc    ebx,DWORD PTR [ecx-0x5c]
  419dcc:	jno    0x419db0
  419dce:	and    BYTE PTR [eax+edi*1-0x1f],ch
  419dd2:	ret    
  419dd3:	scas   al,BYTE PTR es:[edi]
  419dd4:	push   cs
  419dd5:	add    dl,cl
  419dd7:	shr    edx,0x99
  419dda:	mov    eax,0x8f1bc900
  419ddf:	xchg   edi,eax
  419de0:	push   es
  419de1:	loope  0x419d75
  419de3:	jp     0x419e4c
  419de5:	dec    esi
  419de6:	scas   eax,DWORD PTR es:[edi]
  419de7:	jl     0x419da2
  419de9:	inc    esi
  419dea:	jb     0x419db6
  419dec:	sub    ecx,edx
  419dee:	cli    
  419def:	les    esp,FWORD PTR [esi+0x1]
  419df2:	inc    esi
  419df3:	and    eax,0x31107d59
  419df8:	sar    BYTE PTR [esi],cl
  419dfa:	imul   ebx,DWORD PTR [edx-0x1d993024],0x34
  419e01:	mov    ah,0x3f
  419e03:	jp     0x419dc8
  419e05:	sbb    BYTE PTR [edx-0x3ff65cd6],cl
  419e0b:	je     0x419d9d
  419e0d:	jmp    0x419df8
  419e0f:	pop    esp
  419e10:	jg     0x419e23
  419e12:	sbb    DWORD PTR [ebx],edi
  419e14:	pushf  
  419e15:	fimul  WORD PTR [ebx+ecx*8-0x70]
  419e19:	ss ja  0x419df8
  419e1c:	add    al,0x18
  419e1e:	mov    ebx,0x1626c0ff
  419e23:	push   es
  419e24:	ds mov ecx,0x6a667a2f
  419e2a:	xlat   BYTE PTR ds:[ebx]
  419e2b:	jno    0x419dc4
  419e2d:	loopne 0x419e8c
  419e2f:	test   al,0xf7
  419e31:	sahf   
  419e32:	sti    
  419e33:	in     eax,0xbe
  419e35:	inc    edi
  419e36:	mov    edi,0xc3857ada
  419e3b:	(bad)  
  419e3d:	and    DWORD PTR ds:0xbeed83e4,0x626138fb
  419e47:	dec    ecx
  419e48:	inc    edx
  419e49:	stos   BYTE PTR es:[edi],al
  419e4a:	mov    bh,0x17
  419e4c:	sbb    ah,BYTE PTR [esi+0x2198271b]
  419e52:	mov    bh,BYTE PTR [ecx]
  419e54:	mov    dh,0xf9
  419e56:	mov    dl,0x76
  419e58:	bound  ebp,QWORD PTR [ebx+0x6c8f7699]
  419e5e:	pusha  
  419e5f:	xchg   esp,eax
  419e60:	add    edi,DWORD PTR [esi]
  419e62:	mov    bl,0xd4
  419e64:	jb     0x419ecf
  419e66:	aad    0x81
  419e68:	push   ebx
  419e69:	repz push cs
  419e6b:	loope  0x419e0c
  419e6d:	inc    ecx
  419e6e:	ffreep st(7)
  419e70:	mov    ?,WORD PTR [ecx-0x7aa271c2]
  419e76:	loop   0x419ef2
  419e78:	jmp    0x419e11
  419e7a:	jle    0x419ebd
  419e7c:	mov    ds:0x57778954,eax
  419e81:	loop   0x419e2f
  419e83:	pop    ebx
  419e84:	ret    0x1f65
  419e87:	xchg   DWORD PTR [edx],edi
  419e89:	jge    0x419e55
  419e8b:	out    dx,al
  419e8c:	push   0xd83a6e84
  419e91:	mov    ds:0x2b175edc,eax
  419e96:	push   edi
  419e97:	mov    dl,0xee
  419e99:	add    DWORD PTR [edx+0x7a],esp
  419e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e9d:	fdiv   DWORD PTR [edx]
  419e9f:	popf   
  419ea0:	push   ecx
  419ea1:	arpl   WORD PTR [ebx+0x4255c663],di
  419ea7:	xlat   BYTE PTR ds:[ebx]
  419ea8:	inc    eax
  419ea9:	sub    cl,BYTE PTR [edx]
  419eab:	daa    
  419eac:	or     DWORD PTR [esi+0x43],edx
  419eaf:	cmp    dh,dl
  419eb1:	jecxz  0x419eca
  419eb3:	cwde   
  419eb4:	xchg   ecx,eax
  419eb5:	int3   
  419eb6:	cdq    
  419eb7:	xchg   ebx,eax
  419eb8:	fs jnp 0x419eb8
  419ebb:	call   0x5388ee90
  419ec0:	jge    0x419efa
  419ec2:	aas    
  419ec3:	imul   BYTE PTR [edx]
  419ec5:	jg     0x419f03
  419ec7:	mov    WORD PTR [esi+eiz*2],fs
  419eca:	push   ss
  419ecb:	sar    bl,0xa9
  419ece:	inc    eax
  419ecf:	in     eax,0x4f
  419ed1:	enter  0x5bdd,0x45
  419ed5:	and    esi,edx
  419ed7:	sbb    dl,BYTE PTR ds:[edi-0x5884e4c0]
  419ede:	fisubr DWORD PTR [edx-0x657095c]
  419ee4:	int3   
  419ee5:	lahf   
  419ee6:	sbb    bh,bh
  419ee8:	ss loope 0x419ec8
  419eeb:	clc    
  419eec:	xor    BYTE PTR [edi+0x390c67c],cl
  419ef2:	mov    WORD PTR [esi],?
  419ef4:	cdq    
  419ef5:	sbb    dh,BYTE PTR [esi*4+0x443e2d8a]
  419efc:	int    0x97
  419efe:	rol    BYTE PTR [ecx+0x7],cl
  419f01:	mov    dh,0xcd
  419f03:	or     eax,0x4d
  419f06:	sbb    ah,BYTE PTR [edx-0x67f035f6]
  419f0c:	push   eax
  419f0d:	loope  0x419ea0
  419f0f:	sahf   
  419f10:	outs   dx,BYTE PTR ds:[esi]
  419f11:	cld    
  419f12:	mov    WORD PTR [ebx],?
  419f14:	cli    
  419f15:	lea    edi,[edi-0x56bd985f]
  419f1b:	push   ss
  419f1c:	imul   esp,DWORD PTR [ebp-0xa],0xf46ff4ac
  419f23:	test   al,0x1b
  419f25:	retf   
  419f26:	jne    0x419ee1
  419f28:	cmp    BYTE PTR [esi+ebx*8+0x8],dl
  419f2c:	inc    edx
  419f2d:	leave  
  419f2e:	mov    ah,0xf7
  419f30:	push   ss
  419f31:	mov    ch,BYTE PTR [edx+0x2e]
  419f34:	dec    eax
  419f35:	(bad)  
  419f36:	xchg   ecx,eax
  419f37:	pop    es
  419f38:	aaa    
  419f39:	mov    ds:0x859fd9d5,al
  419f3e:	into   
  419f3f:	daa    
  419f40:	aas    
  419f41:	int3   
  419f42:	test   al,0xa5
  419f44:	mov    esp,0xf8cec43c
  419f49:	cmp    ecx,DWORD PTR [eax+0xf]
  419f4c:	xor    al,0x7e
  419f4e:	cdq    
  419f4f:	pop    esp
  419f50:	push   ss
  419f51:	hlt    
  419f52:	in     al,dx
  419f53:	cmp    ch,ah
  419f55:	xchg   ebx,eax
  419f56:	ss (bad) 
  419f58:	ins    BYTE PTR es:[edi],dx
  419f59:	repnz popf 
  419f5b:	push   ebp
  419f5c:	jmp    0x419f98
  419f5e:	ret    
  419f5f:	je     0x419f51
  419f61:	retf   0x6498
  419f64:	lods   eax,DWORD PTR ds:[esi]
  419f65:	mov    ch,0xf8
  419f67:	mov    edx,0xf685eec2
  419f6c:	jmp    0x419ef5
  419f6e:	cli    
  419f6f:	jno    0x419f74
  419f71:	fs xchg esp,eax
  419f73:	sub    BYTE PTR [esi],dh
  419f75:	add    al,0x34
  419f77:	dec    ebx
  419f78:	nop
  419f79:	jmp    0x419f7d
  419f7b:	xor    al,0xda
  419f7d:	pop    edi
  419f7e:	adc    BYTE PTR [eax+0x4895aa70],bh
  419f84:	pusha  
  419f85:	cmc    
  419f86:	std    
  419f87:	pop    esi
  419f88:	jae    0x419f63
  419f8a:	push   esp
  419f8b:	inc    ebp
  419f8c:	xchg   ebp,eax
  419f8d:	in     al,dx
  419f8e:	pop    ecx
  419f8f:	xor    BYTE PTR ds:0x4f1c9b18,ch
  419f95:	pop    es
  419f96:	scas   al,BYTE PTR es:[edi]
  419f97:	bound  ebx,QWORD PTR [eax+0x11]
  419f9a:	dec    esp
  419f9b:	(bad)  
  419f9c:	adc    ah,BYTE PTR [ebx+0x27]
  419f9f:	mov    ch,ah
  419fa1:	ja     0x419f63
  419fa3:	cmp    esi,esi
  419fa5:	push   edx
  419fa6:	cmp    ebp,DWORD PTR [eax+0x38]
  419fa9:	dec    eax
  419faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fab:	dec    ebp
  419fac:	cli    
  419fad:	adc    al,0x22
  419fb0:	and    esp,esi
  419fb2:	adc    edx,ecx
  419fb4:	sub    eax,0x8740d6c6
  419fb9:	push   esi
  419fba:	mov    bh,0xce
  419fbc:	fwait
  419fbd:	mov    al,ds:0x6bf98399
  419fc2:	pushf  
  419fc3:	rdmsr  
  419fc5:	inc    esi
  419fc6:	pop    eax
  419fc7:	imul   ebx,DWORD PTR [edi+0x4142c279],0xffffffa3
  419fce:	mov    dl,0x1e
  419fd0:	mov    WORD PTR [eax-0x15],es
  419fd3:	fsub   QWORD PTR ds:0x62fffe56
  419fd9:	inc    edi
  419fda:	outs   dx,BYTE PTR ds:[esi]
  419fdb:	in     al,0x0
  419fdd:	(bad)  
  419fdf:	popf   
  419fe0:	cdq    
  419fe1:	push   ebx
  419fe2:	and    DWORD PTR [edx],ebx
  419fe4:	cmc    
  419fe5:	mov    WORD PTR [edi-0x7f3a4cc8],?
  419feb:	dec    ecx
  419fec:	xor    DWORD PTR [eax],edx
  419fee:	es mov esi,0xe0e74535
  419ff4:	daa    
  419ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff6:	xchg   DWORD PTR [ebp+0x264a6a70],ebp
  419ffc:	lea    edi,[eax-0x65330a18]
  41a002:	cld    
  41a003:	mov    cl,BYTE PTR [edx+ebp*2+0x1]
  41a007:	jae    0x419fd9
  41a009:	popa   
  41a00a:	ficom  WORD PTR [edx+edx*1-0x74498ac7]
  41a011:	(bad)  
  41a012:	jmp    0xe1ef4502
  41a017:	ins    DWORD PTR es:[edi],dx
  41a018:	aam    0xbb
  41a01a:	data16 (bad) 
  41a01c:	into   
  41a01d:	pop    esi
  41a01e:	out    0x8a,al
  41a020:	push   es
  41a021:	ret    
  41a022:	loope  0x41a07c
  41a024:	aad    0x9c
  41a026:	bound  edx,QWORD PTR [edi-0x30]
  41a029:	or     bh,BYTE PTR [eax-0x3941dd33]
  41a02f:	mul    BYTE PTR [esi-0x2906bef3]
  41a035:	stos   DWORD PTR es:[edi],eax
  41a036:	add    al,0x31
  41a038:	sub    al,0xb2
  41a03a:	adc    ebx,DWORD PTR [ecx]
  41a03c:	sbb    al,0xc2
  41a03e:	loope  0x41a078
  41a040:	xchg   esi,eax
  41a041:	out    0x5d,al
  41a043:	test   dh,dh
  41a045:	pop    ebx
  41a046:	les    esp,FWORD PTR [ebx+edi*1]
  41a049:	push   eax
  41a04a:	in     eax,dx
  41a04b:	(bad)  
  41a04c:	cmp    bh,al
  41a04e:	pop    esi
  41a04f:	push   ebx
  41a050:	lods   al,BYTE PTR ds:[esi]
  41a051:	out    dx,eax
  41a052:	inc    edi
  41a053:	jmp    0x33cc5e85
  41a058:	jne    0x41a036
  41a05a:	inc    eax
  41a05b:	pop    esp
  41a05c:	loopne 0x41a09c
  41a05e:	out    dx,al
  41a05f:	add    edx,eax
  41a061:	xchg   esp,eax
  41a062:	mov    ecx,ds
  41a064:	stc    
  41a065:	pop    esi
  41a066:	mov    ds:0xd975dfd5,al
  41a06b:	add    BYTE PTR [eax],0xe1
  41a06e:	les    edx,FWORD PTR [eax+0x5d77368]
  41a074:	sbb    BYTE PTR [edi-0x4899ed65],bl
  41a07a:	out    dx,al
  41a07b:	push   esi
  41a07c:	ror    BYTE PTR [esi+0x9],1
  41a07f:	dec    edi
  41a080:	repz mov edi,DWORD PTR [ebp+0x3385cb7f]
  41a087:	xor    bh,BYTE PTR [edx+0x48]
  41a08a:	ret    0x86f0
  41a08d:	dec    ebp
  41a08e:	cmp    cl,BYTE PTR [ecx-0x41]
  41a091:	jnp    0x41a072
  41a093:	push   eax
  41a094:	cmp    ah,BYTE PTR [esi]
  41a096:	(bad)  
  41a097:	(bad)  
  41a098:	cwde   
  41a099:	jg     0x41a108
  41a09b:	xor    eax,0x371741bf
  41a0a0:	ja     0x41a0b6
  41a0a2:	retf   0xce86
  41a0a5:	inc    edi
  41a0a6:	push   0xfffffffa
  41a0a8:	loop   0x41a05e
  41a0aa:	mov    dh,0xaa
  41a0ac:	cwde   
  41a0ad:	inc    esi
  41a0ae:	add    eax,0xbcc7e78a
  41a0b3:	inc    ecx
  41a0b4:	jae    0x41a118
  41a0b6:	fdivr  DWORD PTR ds:0xfa9bec02
  41a0bc:	stos   DWORD PTR es:[edi],eax
  41a0bd:	jbe    0x41a125
  41a0bf:	fnstcw WORD PTR [ebx+0x38e76a7c]
  41a0c5:	sti    
  41a0c6:	adc    eax,0x314d0f7f
  41a0cb:	or     DWORD PTR [eax+0x1f],ebp
  41a0ce:	sahf   
  41a0cf:	jbe    0x41a126
  41a0d1:	push   0xffffffd8
  41a0d3:	ret    0x542f
  41a0d6:	mov    al,BYTE PTR [edx-0x15]
  41a0d9:	push   esi
  41a0da:	jmp    0x41a0e3
  41a0dc:	push   0x7f
  41a0de:	mov    dl,0xb8
  41a0e0:	fcomp  QWORD PTR [ecx+0x34407425]
  41a0e6:	mov    eax,ds:0x6041db88
  41a0eb:	leave  
  41a0ec:	mov    WORD PTR ds:[edi-0x60],ds
  41a0f0:	cmc    
  41a0f1:	mov    ebx,0xb109fd80
  41a0f6:	test   BYTE PTR [eax+edi*4],bl
  41a0f9:	mov    ecx,0xf6ebc5d2
  41a0fe:	sbb    BYTE PTR [ebp+ecx*8-0x64],dh
  41a102:	not    ch
  41a104:	cmp    BYTE PTR [edi-0x763284de],bl
  41a10a:	lods   al,BYTE PTR ds:[esi]
  41a10b:	mov    bl,0xa5
  41a10d:	jmp    0x41a14a
  41a10f:	in     al,0x35
  41a111:	jg     0x41a096
  41a113:	add    DWORD PTR [edi],ebp
  41a115:	jle    0x41a193
  41a117:	aad    0x56
  41a119:	inc    eax
  41a11a:	out    0x24,eax
  41a11c:	cli    
  41a11d:	retf   
  41a11e:	cmp    al,0x69
  41a120:	adc    eax,0x1040afc5
  41a125:	push   eax
  41a126:	cmp    BYTE PTR [ebp+0x5c],cl
  41a129:	push   ds
  41a12a:	mov    ch,BYTE PTR [ebx+eax*8+0x3a]
  41a12e:	enter  0xcca8,0xf6
  41a132:	push   0xa328f781
  41a137:	not    DWORD PTR ds:0x2fdeed58
  41a13d:	les    ebp,FWORD PTR [eax+edi*2+0x2c32e090]
  41a144:	inc    esi
  41a145:	in     eax,0x74
  41a147:	cs clc 
  41a149:	les    edi,FWORD PTR [edi-0x5411dc85]
  41a14f:	pop    ss
  41a150:	push   ebx
  41a151:	jge    0x41a1a6
  41a153:	and    ch,al
  41a155:	fimul  WORD PTR [eax-0x15]
  41a158:	xor    DWORD PTR [ebx],edx
  41a15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a15b:	and    cl,ah
  41a15d:	push   0xcc0c3d47
  41a162:	push   ebp
  41a163:	int    0x4e
  41a165:	les    ebx,FWORD PTR [edi-0x52]
  41a168:	mov    dl,0x11
  41a16a:	sub    ebp,DWORD PTR [edx-0x3850523c]
  41a170:	xor    eax,0xa7805667
  41a175:	jl     0x41a1d3
  41a177:	sbb    ecx,ecx
  41a179:	rcpps  xmm3,XMMWORD PTR [esi]
  41a17c:	fstp   DWORD PTR [ebx+ebx*8]
  41a17f:	cmp    esp,0xffffffd2
  41a182:	repz out dx,al
  41a184:	(bad)  
  41a185:	ds mov BYTE PTR cs:[ebp-0x6cbf1d9e],0xdc
  41a18e:	jbe    0x41a12f
  41a190:	stc    
  41a191:	hlt    
  41a192:	rcl    DWORD PTR [edx],1
  41a194:	dec    BYTE PTR [edx-0x43]
  41a197:	aam    0x9c
  41a199:	cs pop edi
  41a19b:	push   0xffffff87
  41a19d:	jbe    0x41a12a
  41a19f:	pusha  
  41a1a0:	(bad)  
  41a1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a2:	into   
  41a1a3:	inc    ebp
  41a1a4:	or     BYTE PTR [edi+0x7f],ch
  41a1a7:	or     esi,esp
  41a1a9:	dec    esp
  41a1aa:	aad    0xcc
  41a1ac:	int3   
  41a1ad:	dec    edi
  41a1ae:	inc    esi
  41a1af:	push   ds
  41a1b0:	sub    BYTE PTR [edx+0xdc08631],dl
  41a1b6:	data16 ja 0x41a218
  41a1b9:	push   ds
  41a1ba:	mov    WORD PTR [eax+esi*1+0x75],?
  41a1be:	fdiv   DWORD PTR [esi+0x30]
  41a1c1:	(bad)  
  41a1c2:	mov    esi,0xdbdb6d89
  41a1c7:	sbb    edx,DWORD PTR [edi-0x8]
  41a1ca:	gs repnz ror DWORD PTR cs:0x92ef833c,1
  41a1d3:	pop    edx
  41a1d4:	jmp    0x41a187
  41a1d6:	fiadd  WORD PTR [ecx+0x22]
  41a1d9:	jbe    0x41a1cf
  41a1db:	cmp    BYTE PTR [ecx+0x406a5a44],al
  41a1e1:	mov    ds:0x2771da7d,al
  41a1e6:	xor    ch,BYTE PTR [esi-0x54]
  41a1e9:	mul    BYTE PTR [ebx-0x7524ae0f]
  41a1ef:	pop    esp
  41a1f0:	ret    
  41a1f1:	xor    bl,bh
  41a1f3:	in     eax,0xda
  41a1f5:	sub    DWORD PTR [ebx-0x66e997bd],0xb42ce3a7
  41a1ff:	mov    ah,bh
  41a201:	sub    esp,ebp
  41a203:	inc    ecx
  41a204:	aad    0xb5
  41a206:	fwait
  41a207:	ret    0xdf69
  41a20a:	inc    edi
  41a20b:	sub    dl,BYTE PTR [ebx]
  41a20d:	dec    ebp
  41a20e:	xchg   ebx,eax
  41a20f:	test   BYTE PTR [eax+0x25bb6b6a],ah
  41a215:	push   es
  41a216:	inc    eax
  41a217:	test   al,0xbf
  41a219:	test   al,0xc3
  41a21b:	(bad)  
  41a21d:	or     eax,0x58ebba9
  41a222:	sbb    eax,0xfbc8af08
  41a227:	mov    ds:0xa04f0770,eax
  41a22c:	ret    0xcb97
  41a22f:	pushf  
  41a230:	stos   BYTE PTR es:[edi],al
  41a231:	jmp    0x9e972c22
  41a236:	xchg   ebx,eax
  41a237:	push   esi
  41a238:	lock int3 
  41a23a:	cmove  esi,DWORD PTR [esi+0x64]
  41a23e:	in     eax,0x5e
  41a240:	fcmovnbe st,st(4)
  41a242:	push   edx
  41a243:	call   0x39d2:0xbbf1e3ae
  41a24a:	jns    0x41a232
  41a24c:	pop    ss
  41a24d:	pop    es
  41a24e:	enter  0x93d7,0xb
  41a252:	out    dx,eax
  41a253:	call   0x596d6e47
  41a258:	or     DWORD PTR [edi-0x30119700],ecx
  41a25e:	mov    ch,0xfa
  41a260:	xor    edx,DWORD PTR [ebx-0x13bc90ab]
  41a266:	xchg   ecx,eax
  41a267:	pop    ds
  41a268:	jo     0x41a1eb
  41a26a:	dec    ebx
  41a26b:	xor    ecx,DWORD PTR [ebx+0x5c]
  41a26e:	and    al,BYTE PTR [eax]
  41a270:	sar    ebx,cl
  41a272:	les    esp,FWORD PTR [ecx]
  41a274:	dec    ebp
  41a275:	cmp    dl,BYTE PTR [ecx-0xa66de8e]
  41a27b:	sub    eax,0x5ce9c11f
  41a280:	xor    eax,0x67bbd0bc
  41a285:	fwait
  41a286:	in     al,0x8a
  41a288:	mov    esp,0x47a88306
  41a28d:	jp     0x41a2d8
  41a28f:	pop    ebx
  41a290:	add    DWORD PTR [ebx-0x58ca72a4],edi
  41a296:	fs daa 
  41a298:	push   ebx
  41a299:	inc    edi
  41a29a:	inc    ecx
  41a29b:	mov    ah,0xab
  41a29d:	adc    eax,0xddea1582
  41a2a2:	int3   
  41a2a3:	push   esi
  41a2a4:	inc    esp
  41a2a5:	add    BYTE PTR [eax+0x7e406bb9],dh
  41a2ab:	xchg   edx,eax
  41a2ac:	(bad)  
  41a2ad:	rcl    DWORD PTR [edi+0x23],cl
  41a2b0:	jl     0x41a30f
  41a2b2:	in     eax,0x37
  41a2b4:	lahf   
  41a2b5:	call   0xe2b70739
  41a2ba:	and    cl,ch
  41a2bc:	sub    al,0x5a
  41a2be:	dec    esp
  41a2bf:	jmp    0xf51b98e8
  41a2c4:	cdq    
  41a2c5:	mov    ds:0xb0b00f8f,al
  41a2ca:	adc    eax,0xd431b62a
  41a2cf:	fwait
  41a2d0:	rcl    BYTE PTR [eax+0x2be74aec],1
  41a2d6:	xchg   DWORD PTR [edx+0x491764c9],edi
  41a2dc:	adc    DWORD PTR [edx-0x4b4bf536],ebx
  41a2e2:	lock mov eax,0x7411faa3
  41a2e8:	outs   dx,BYTE PTR ds:[esi]
  41a2e9:	scas   al,BYTE PTR es:[edi]
  41a2ea:	fild   DWORD PTR [eax-0x7a]
  41a2ed:	rcr    BYTE PTR [esi-0x51],cl
  41a2f0:	ds in  al,0x44
  41a2f3:	inc    ebx
  41a2f4:	rcl    bl,0xec
  41a2f7:	xchg   BYTE PTR [esp+ebx*8-0x6d],ah
  41a2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2fc:	(bad)  [esi+0x79c7c039]
  41a302:	pop    edx
  41a303:	push   ds
  41a304:	push   edi
  41a305:	dec    esp
  41a306:	dec    esp
  41a307:	cmp    bl,BYTE PTR [edx]
  41a309:	mov    ecx,0x17808185
  41a30e:	mov    edx,0x42bc0841
  41a313:	dec    esi
  41a314:	(bad)  
  41a315:	jp     0x41a2be
  41a317:	sub    al,0xb9
  41a319:	push   ebx
  41a31a:	pop    ecx
  41a31b:	add    al,0x65
  41a31d:	xchg   ebp,eax
  41a31e:	mov    ebx,0xa426f716
  41a323:	xchg   ebp,eax
  41a324:	aad    0x72
  41a326:	mov    ?,ebx
  41a328:	stos   DWORD PTR es:[edi],eax
  41a329:	sub    eax,0x1df2290c
  41a32e:	mov    edi,0x928261c7
  41a333:	cmp    dh,bl
  41a335:	add    eax,ebx
  41a337:	(bad)  
  41a338:	pop    ds
  41a339:	aas    
  41a33a:	pop    ss
  41a33b:	pop    esi
  41a33c:	cs cdq 
  41a33e:	shr    DWORD PTR [edi],0x54
  41a341:	and    DWORD PTR [edx],esp
  41a343:	js     0x41a3aa
  41a345:	pop    ebp
  41a346:	aam    0xba
  41a348:	xchg   edi,eax
  41a349:	or     ch,BYTE PTR [eax]
  41a34b:	inc    ebx
  41a34c:	scas   al,BYTE PTR es:[edi]
  41a34d:	das    
  41a34e:	push   esi
  41a34f:	cmp    al,0xe5
  41a351:	retf   0x23f8
  41a354:	int3   
  41a355:	xchg   dh,al
  41a357:	push   edx
  41a358:	popa   
  41a359:	add    al,0x50
  41a35b:	pusha  
  41a35c:	sub    BYTE PTR [ebp+0x58],0x59
  41a360:	mov    ebx,0xc61aea3d
  41a365:	pushf  
  41a366:	and    eax,0x89040486
  41a36b:	dec    esi
  41a36c:	fbld   TBYTE PTR [esi-0x4b]
  41a36f:	or     eax,0x9297a96e
  41a374:	dec    ebp
  41a375:	ret    0xd849
  41a378:	xor    DWORD PTR [ecx-0x12],esi
  41a37b:	xchg   ebp,eax
  41a37c:	pusha  
  41a37d:	push   0xf9d873bc
  41a382:	shr    BYTE PTR [eax+0x61],0x48
  41a386:	iret   
  41a387:	outs   dx,BYTE PTR ds:[esi]
  41a388:	fsubrp st(6),st
  41a38a:	sbb    BYTE PTR [ecx+0x63],0x4b
  41a38e:	cmc    
  41a38f:	mov    ah,0x6d
  41a391:	cs add bh,ch
  41a394:	or     BYTE PTR [ebp+0xe],dh
  41a397:	or     DWORD PTR [edx],ebx
  41a399:	mov    ?,WORD PTR [edx-0x78]
  41a39c:	clc    
  41a39d:	cmp    BYTE PTR ds:0xda623157,ah
  41a3a3:	rol    DWORD PTR [esi-0x5553ebc],cl
  41a3a9:	(bad)
  41a3ad:	ds jns 0x41a357
  41a3b0:	mov    ds:0x695bfe5e,al
  41a3b5:	pop    es
  41a3b6:	sbb    ah,BYTE PTR [edi]
  41a3b8:	repnz push ss
  41a3ba:	dec    ebx
  41a3bb:	outs   dx,DWORD PTR ds:[esi]
  41a3bc:	pushf  
  41a3bd:	xchg   ecx,eax
  41a3be:	iret   
  41a3bf:	test   DWORD PTR [esi-0x1754d721],esp
  41a3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c6:	in     al,0x2f
  41a3c8:	ret    0x33f7
  41a3cb:	icebp  
  41a3cc:	ja     0x41a37b
  41a3ce:	test   DWORD PTR [ebp+0x6b],esi
  41a3d1:	out    0x9d,al
  41a3d3:	xor    eax,0x2f1b9ec0
  41a3d8:	lea    edi,[edi]
  41a3da:	push   edx
  41a3db:	std    
  41a3dc:	xchg   edx,eax
  41a3dd:	or     al,0xcb
  41a3df:	pop    edi
  41a3e0:	stos   DWORD PTR es:[edi],eax
  41a3e1:	mov    gs,edx
  41a3e3:	cmp    eax,0x36667c6b
  41a3e8:	stos   DWORD PTR es:[edi],eax
  41a3e9:	mov    cl,dl
  41a3eb:	mov    ds,eax
  41a3ed:	(bad)  
  41a3ee:	pusha  
  41a3ef:	arpl   WORD PTR [ebx-0x420abd71],bx
  41a3f5:	xor    ebp,ecx
  41a3f7:	test   eax,0xc463db6e
  41a3fc:	xor    DWORD PTR [ebx],esi
  41a3fe:	retf   
  41a3ff:	xor    eax,0x87e2796
  41a404:	dec    edx
  41a405:	mov    ebx,0x4cbf15aa
  41a40a:	imul   esi,DWORD PTR [esi-0xa],0x7
  41a40e:	jb     0x41a3f7
  41a410:	sub    DWORD PTR [ebx],esp
  41a412:	pop    es
  41a413:	and    al,0xfa
  41a415:	lods   eax,DWORD PTR ds:[esi]
  41a416:	repz push edi
  41a418:	in     al,0x74
  41a41a:	add    BYTE PTR [edx+0x28],dl
  41a41d:	sub    ebp,DWORD PTR [esi]
  41a41f:	jmp    0x5a95:0x2e62071a
  41a426:	cli    
  41a427:	mov    dl,0x8d
  41a429:	sub    ch,BYTE PTR [ebx+ecx*1+0x132a640d]
  41a430:	aas    
  41a431:	adc    eax,esp
  41a433:	pop    eax
  41a434:	xchg   esi,eax
  41a435:	mov    dh,0x59
  41a437:	cwde   
  41a438:	shl    BYTE PTR [esi+edi*2],0xe4
  41a43c:	pushf  
  41a43d:	jp     0x41a3fa
  41a43f:	das    
  41a440:	aaa    
  41a441:	mov    edi,0x216f4261
  41a446:	xchg   ecx,eax
  41a447:	rcr    dl,cl
  41a449:	inc    ebx
  41a44a:	xchg   ebp,eax
  41a44b:	mov    esi,0x2bf20c5
  41a450:	xchg   edx,eax
  41a451:	sbb    al,0x53
  41a453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a454:	test   ebp,edx
  41a456:	jmp    0x56ab:0x48cb18f
  41a45d:	mov    bl,0x67
  41a45f:	mov    ah,0xd3
  41a461:	push   ebp
  41a462:	inc    ebp
  41a463:	adc    esp,DWORD PTR [ebx]
  41a465:	push   0x17
  41a467:	add    BYTE PTR [esi-0x2a197c37],ch
  41a46d:	popa   
  41a46e:	arpl   WORD PTR [ebp+ebx*4+0x1d],bp
  41a472:	xchg   ecx,eax
  41a473:	mov    edi,0x3ebc4ac
  41a478:	fist   WORD PTR [edi-0x2]
  41a47b:	cwde   
  41a47c:	xor    eax,0x762b41f3
  41a481:	rcr    DWORD PTR [eax],1
  41a483:	lea    ebp,[ebp+0x2d]
  41a486:	mov    ebp,0xf15c368f
  41a48b:	push   0xc9071b3f
  41a490:	test   DWORD PTR [eax+0x4d],esi
  41a493:	xor    al,0x3f
  41a495:	neg    edi
  41a497:	jne    0x41a42b
  41a499:	jns    0x41a48c
  41a49b:	fsubr  st,st(2)
  41a49d:	xor    edi,DWORD PTR [esi]
  41a49f:	stos   BYTE PTR es:[edi],al
  41a4a0:	out    dx,eax
  41a4a1:	enter  0x662a,0x4e
  41a4a5:	or     DWORD PTR [edx+esi*4+0x27],edx
  41a4a9:	sub    edi,ebp
  41a4ab:	(bad)  
  41a4ac:	jl     0x41a460
  41a4ae:	cs pop ebx
  41a4b0:	mov    ecx,0x33eab4b2
  41a4b5:	xchg   edx,eax
  41a4b6:	hlt    
  41a4b7:	jg     0x41a52c
  41a4b9:	inc    eax
  41a4ba:	mov    ds,WORD PTR [edx]
  41a4bc:	pop    es
  41a4bd:	repz inc esp
  41a4bf:	xor    BYTE PTR ds:0x3812d451,bl
  41a4c5:	fadd   st(5),st
  41a4c7:	pop    edx
  41a4c8:	ror    DWORD PTR [ecx],cl
  41a4ca:	cs or  eax,0x18bfec64
  41a4d0:	sub    dl,BYTE PTR [edx]
  41a4d2:	dec    ebp
  41a4d3:	ret    
  41a4d4:	dec    esp
  41a4d5:	pop    eax
  41a4d6:	add    al,cl
  41a4d8:	mov    esi,0xc5b0848b
  41a4dd:	cmp    BYTE PTR [edx+0x1bcf1e1e],0x2f
  41a4e4:	pushw  0x7530
  41a4e8:	fstp   TBYTE PTR [edi+edi*4-0x3c]
  41a4ec:	cmp    ebp,DWORD PTR [ecx-0x9]
  41a4ef:	and    eax,0x10c8c1fe
  41a4f4:	call   0x2b2cdab8
  41a4f9:	out    dx,eax
  41a4fa:	retf   
  41a4fb:	or     ebp,DWORD PTR [ebx]
  41a4fd:	mov    ch,0xba
  41a4ff:	inc    edx
  41a500:	or     al,0xf1
  41a502:	lock adc al,0x84
  41a505:	cmp    DWORD PTR [eax],ebx
  41a507:	aas    
  41a508:	jmp    0xd9b89df5
  41a50d:	push   eax
  41a50e:	mov    cl,0x43
  41a510:	outs   dx,DWORD PTR ds:[esi]
  41a511:	js     0x41a4ee
  41a513:	mov    edx,0x355524dd
  41a518:	mov    ecx,0x2f394d34
  41a51d:	xor    DWORD PTR [esi],esp
  41a51f:	add    ch,BYTE PTR [eax]
  41a521:	rcl    DWORD PTR [ebx-0xc],0xfa
  41a525:	push   ebx
  41a526:	or     ch,BYTE PTR [ebp+0x45]
  41a529:	std    
  41a52a:	pop    edi
  41a52b:	daa    
  41a52c:	add    eax,0xa00d70d4
  41a531:	les    ebx,FWORD PTR [ebp-0x7f]
  41a534:	or     DWORD PTR [ebx+0x73],ebp
  41a537:	xchg   ebx,eax
  41a538:	mov    ah,0xf0
  41a53a:	enter  0xc4a3,0xa4
  41a53e:	js     0x41a593
  41a540:	outs   dx,BYTE PTR ds:[esi]
  41a541:	shr    esi,0xb5
  41a544:	out    0x25,al
  41a546:	scas   al,BYTE PTR es:[edi]
  41a547:	xchg   esi,eax
  41a548:	in     eax,dx
  41a549:	sahf   
  41a54a:	sub    DWORD PTR [ecx+0x30],esp
  41a54d:	mov    esp,0xda57e976
  41a552:	loope  0x41a594
  41a554:	icebp  
  41a555:	mov    ebp,0xdc460648
  41a55a:	lahf   
  41a55b:	sub    al,0xe4
  41a55d:	or     DWORD PTR [eax*4-0x40e65d6a],edx
  41a564:	push   cs
  41a565:	and    al,BYTE PTR [ebp-0x2b]
  41a568:	jne    0x41a50e
  41a56a:	xor    al,0x80
  41a56c:	cmp    esp,DWORD PTR [edi+0x42]
  41a56f:	jp     0x41a569
  41a571:	in     eax,dx
  41a572:	enter  0xc4d8,0x88
  41a576:	jne    0x41a5b7
  41a578:	punpcklwd mm5,DWORD PTR [ecx-0x29]
  41a57c:	xchg   edi,eax
  41a57d:	in     al,dx
  41a57e:	sti    
  41a57f:	sbb    eax,0xf7c44f9a
  41a584:	test   eax,0x5dd14dad
  41a589:	mov    edx,0xbbfe50b0
  41a58e:	xchg   BYTE PTR [ebp-0x2eaae4d7],dl
  41a594:	jle    0x41a5cd
  41a596:	xchg   DWORD PTR [edx+0x87014d9],edi
  41a59c:	pop    edi
  41a59d:	jbe    0x41a5bb
  41a59f:	xchg   ecx,eax
  41a5a0:	sbb    cl,BYTE PTR [ebp+0x68]
  41a5a3:	jg     0x41a55b
  41a5a5:	xlat   BYTE PTR ds:[ebx]
  41a5a6:	adc    ch,dl
  41a5a8:	mov    cl,al
  41a5aa:	in     eax,0x1
  41a5ac:	and    esi,DWORD PTR [edx+0x47c99679]
  41a5b2:	(bad)
  41a5b6:	xor    eax,edi
  41a5b8:	mov    eax,DWORD PTR [ecx+0xc92be3a]
  41a5be:	dec    edx
  41a5bf:	pop    edx
  41a5c0:	js     0x41a634
  41a5c2:	aaa    
  41a5c3:	push   ds
  41a5c4:	pop    ds
  41a5c5:	mov    es,ebp
  41a5c7:	xor    BYTE PTR [esi],ah
  41a5c9:	push   ds
  41a5ca:	sub    BYTE PTR [edi-0xca369af],dh
  41a5d0:	inc    esp
  41a5d1:	fwait
  41a5d2:	mov    bh,0xf1
  41a5d4:	imul   eax,DWORD PTR [eax+0x4e],0x14
  41a5d8:	(bad)  
  41a5d9:	and    BYTE PTR [edx],bh
  41a5db:	and    dl,0xb4
  41a5de:	add    DWORD PTR [ebx+0x77d004ed],esp
  41a5e4:	xchg   ecx,eax
  41a5e5:	dec    edx
  41a5e6:	gs sti 
  41a5e8:	clc    
  41a5e9:	sar    DWORD PTR [ecx+0x643a813e],1
  41a5ef:	(bad)  
  41a5f1:	adc    bl,bh
  41a5f3:	pop    es
  41a5f4:	xchg   esp,eax
  41a5f5:	sbb    ebx,DWORD PTR [esi]
  41a5f7:	(bad)  
  41a5f8:	cdq    
  41a5f9:	enter  0x82a7,0xa1
  41a5fd:	or     DWORD PTR [eax],edx
  41a5ff:	mov    ss,eax
  41a601:	ret    
  41a602:	jecxz  0x41a5a0
  41a604:	jo     0x41a5f0
  41a606:	sbb    eax,DWORD PTR [edx-0x34]
  41a609:	in     al,dx
  41a60a:	cmc    
  41a60b:	lods   eax,DWORD PTR ds:[esi]
  41a60c:	outs   dx,DWORD PTR ds:[esi]
  41a60d:	push   ss
  41a60e:	fimul  DWORD PTR [ebp+0xe00a171]
  41a614:	aad    0xfe
  41a616:	ret    0xa800
  41a619:	xchg   esp,eax
  41a61a:	push   es
  41a61b:	lea    edx,ds:0x54c9b412
  41a621:	(bad)  
  41a622:	cs pushf 
  41a624:	mov    ah,0x9a
  41a626:	adc    ebp,DWORD PTR [ebx]
  41a628:	xchg   DWORD PTR [eax+0x21160d63],ecx
  41a62e:	mov    esp,0x9d245b22
  41a633:	fcom   DWORD PTR fs:[ebx+0x59]
  41a637:	leave  
  41a638:	adc    cl,dl
  41a63a:	mov    eax,ds:0xbb2fe298
  41a63f:	jnp    0x41a680
  41a641:	or     bh,BYTE PTR [edx-0x5c]
  41a644:	jg     0x41a655
  41a646:	mov    cl,0x7f
  41a648:	cli    
  41a649:	leave  
  41a64a:	mov    al,ds:0x78d2d410
  41a64f:	data16 cmp ch,cl
  41a652:	mov    bh,0x22
  41a654:	inc    edx
  41a655:	lock xor bl,bh
  41a658:	fldlg2 
  41a65a:	xchg   esi,ebp
  41a65c:	sub    esi,esp
  41a65e:	js     0x41a612
  41a660:	xchg   ecx,eax
  41a661:	mov    bl,0x6b
  41a663:	arpl   WORD PTR [ebp-0x54cc7970],ax
  41a669:	or     esi,DWORD PTR [edi]
  41a66b:	adc    al,0xf3
  41a66d:	stc    
  41a66e:	int    0xc9
  41a670:	rcr    BYTE PTR [edi+0x10a0b423],cl
  41a676:	push   ebp
  41a677:	or     eax,DWORD PTR [ebp-0x4021c8a8]
  41a67d:	dec    ecx
  41a67e:	xor    al,0x49
  41a680:	aam    0xb9
  41a682:	loopne 0x41a6a8
  41a684:	jne    0x41a665
  41a686:	aam    0xa3
  41a688:	mov    al,0x9d
  41a68a:	xchg   DWORD PTR fs:[ecx+eiz*4],ebx
  41a68e:	loopne 0x41a61f
  41a690:	and    eax,0x27cfafeb
  41a695:	pop    es
  41a696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a697:	in     eax,0xac
  41a699:	mov    bh,0x3b
  41a69b:	push   esi
  41a69c:	mov    BYTE PTR [ebx+0x66],bl
  41a69f:	sbb    DWORD PTR [edx-0x55],edx
  41a6a2:	add    edx,DWORD PTR [ecx+eax*4+0x3]
  41a6a6:	(bad)  
  41a6a7:	mov    cl,0x60
  41a6a9:	xor    DWORD PTR [esi+esi*2-0x6],edx
  41a6ad:	lods   al,BYTE PTR ds:[esi]
  41a6ae:	jp     0x41a6c1
  41a6b0:	adc    al,0x85
  41a6b2:	call   0x990ac0db
  41a6b7:	xchg   edi,eax
  41a6b8:	xchg   ecx,eax
  41a6b9:	test   BYTE PTR [ecx],ch
  41a6bb:	mov    al,0x9d
  41a6bd:	mov    ebp,0x5355ca92
  41a6c2:	(bad)  [edx-0x4c55b119]
  41a6c8:	int    0xdc
  41a6ca:	icebp  
  41a6cb:	xchg   edi,eax
  41a6cc:	addr16 inc ebp
  41a6ce:	js     0x41a675
  41a6d0:	sub    DWORD PTR [eax-0x3c1323f5],esi
  41a6d6:	sbb    BYTE PTR [eax],bh
  41a6d8:	add    al,BYTE PTR ds:0xdec0d0b8
  41a6de:	and    DWORD PTR [ecx+0x469f3cc6],0x60e1b1a9
  41a6e8:	xlat   BYTE PTR ds:[ebx]
  41a6e9:	xchg   edi,eax
  41a6ea:	loop   0x41a6dd
  41a6ec:	rcr    BYTE PTR [eax],0x53
  41a6ef:	add    BYTE PTR [esi+0x2d],ch
  41a6f2:	mov    ds,WORD PTR [ebp+0x37]
  41a6f5:	mov    esi,0xa000e200
  41a6fa:	fldcw  WORD PTR [ebx]
  41a6fc:	mov    bh,BYTE PTR [ebx+edi*2-0x4f]
  41a700:	inc    edi
  41a701:	prefetcht2 BYTE PTR [ebx-0x55]
  41a705:	(bad)  
  41a706:	sar    DWORD PTR [edi-0x3abeebb7],1
  41a70c:	sbb    DWORD PTR [eax],eax
  41a70e:	xchg   BYTE PTR [ecx+0x51480df4],cl
  41a714:	ror    BYTE PTR [esi-0x65bfd45d],cl
  41a71a:	es push ds
  41a71c:	sub    BYTE PTR [esi],ch
  41a71e:	xor    ebx,DWORD PTR [esi]
  41a720:	lods   eax,DWORD PTR ds:[esi]
  41a721:	bound  edi,QWORD PTR [eax+0x5e77afbf]
  41a727:	cmp    ecx,DWORD PTR [ebx+0x22]
  41a72a:	pop    ebx
  41a72b:	lods   al,BYTE PTR ds:[esi]
  41a72c:	or     bh,bh
  41a72e:	aaa    
  41a72f:	mov    bh,0xe0
  41a731:	mov    ecx,0x78ca32cf
  41a737:	jo     0x41a6fa
  41a739:	mov    esi,0x1b82d22a
  41a73e:	or     ch,BYTE PTR [edi+ecx*2]
  41a741:	jge    0x41a781
  41a743:	shl    BYTE PTR [esi+ebp*8+0x520f2867],cl
  41a74a:	or     BYTE PTR [edi-0x74],0xb3
  41a74e:	xchg   ebp,eax
  41a74f:	jb     0x41a7ba
  41a751:	(bad)  
  41a752:	call   0x35889d81
  41a757:	out    dx,al
  41a758:	(bad)  
  41a759:	mov    ds:0xab152f41,eax
  41a75e:	nop
  41a75f:	test   eax,0xc2e3ce38
  41a764:	lahf   
  41a765:	les    eax,FWORD PTR [edx]
  41a767:	xchg   ebx,eax
  41a768:	ret    0x24d6
  41a76b:	leave  
  41a76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a76d:	inc    edi
  41a76e:	add    dl,BYTE PTR [edi]
  41a770:	mov    ds:0x831b72b3,eax
  41a775:	stos   DWORD PTR es:[edi],eax
  41a776:	mov    dh,0x3
  41a778:	mov    dh,0xa0
  41a77a:	out    dx,al
  41a77b:	jnp    0x41a776
  41a77d:	out    0x5,al
  41a77f:	test   DWORD PTR [edi-0x22],ecx
  41a782:	mov    ds:0x408c11b4,eax
  41a787:	inc    esi
  41a788:	pop    ebp
  41a789:	pop    esp
  41a78a:	or     eax,0x5f7b3376
  41a78f:	popf   
  41a790:	jecxz  0x41a800
  41a792:	test   ah,al
  41a794:	adc    eax,0x362c7f09
  41a799:	(bad)  
  41a79a:	ja     0x41a7a0
  41a79c:	call   0x4c8663ed
  41a7a1:	cld    
  41a7a2:	test   DWORD PTR [ebx+0x54],eax
  41a7a5:	xchg   esp,eax
  41a7a6:	sub    ecx,DWORD PTR [bp+di]
  41a7a9:	add    BYTE PTR [edi+0x3182d338],ah
  41a7af:	ret    
  41a7b0:	ss push es
  41a7b2:	jge    0x41a76f
  41a7b4:	shl    BYTE PTR [eax],cl
  41a7b6:	(bad)  
  41a7b8:	(bad)  
  41a7b9:	xchg   esi,eax
  41a7ba:	sar    BYTE PTR [esi+0x36],1
  41a7bd:	repz sbb edx,edx
  41a7c0:	das    
  41a7c1:	mov    eax,0x830495b2
  41a7c6:	lods   eax,DWORD PTR ds:[esi]
  41a7c7:	lea    ebx,[ebp-0x7545f697]
  41a7cd:	xchg   ebp,eax
  41a7ce:	stc    
  41a7cf:	pop    esp
  41a7d0:	push   cs
  41a7d1:	cmp    eax,0xe57124f3
  41a7d6:	jmp    0x81eeefd3
  41a7db:	mov    ebp,0x7d6626d2
  41a7e0:	and    esp,ecx
  41a7e2:	adc    ch,BYTE PTR [edx-0x63]
  41a7e5:	and    eax,0x36ba8237
  41a7ea:	or     DWORD PTR [ecx],esi
  41a7ec:	test   DWORD PTR [ebx],ebx
  41a7ee:	or     BYTE PTR [ebp+0xae1f2],dl
  41a7f4:	imul   ebx,esp,0x79
  41a7f7:	ror    esi,1
  41a7f9:	neg    ah
  41a7fb:	(bad)  
  41a7fc:	or     eax,0x732bbdbf
  41a801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a802:	mov    ebp,0x33b0a655
  41a807:	mov    ch,0xc
  41a809:	lea    ecx,[edx]
  41a80b:	aam    0xf7
  41a80d:	stos   DWORD PTR es:[edi],eax
  41a80e:	call   0xa0e0:0x72e3ea59
  41a815:	add    bh,al
  41a817:	ins    DWORD PTR es:[edi],dx
  41a818:	dec    DWORD PTR [edi+0x64409ac2]
  41a81e:	aas    
  41a81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a820:	inc    edi
  41a821:	bound  ebx,QWORD PTR [esi+0x44]
  41a824:	or     DWORD PTR [edi],eax
  41a826:	stc    
  41a827:	xchg   edx,eax
  41a828:	inc    edx
  41a829:	jbe    0x41a7ae
  41a82b:	rol    BYTE PTR [eax],1
  41a82d:	out    0x60,al
  41a82f:	cmc    
  41a830:	retf   0xe16c
  41a833:	jmp    0x41a830
  41a835:	das    
  41a836:	mov    esi,0xd3dc8576
  41a83b:	adc    al,0x53
  41a83d:	sar    esi,cl
  41a83f:	int    0xef
  41a841:	scas   eax,DWORD PTR es:[edi]
  41a842:	jnp    0x41a7d7
  41a844:	repnz sar DWORD PTR [ecx+0x5f55ef88],0xfe
  41a84c:	jmp    0x4224:0x612bea09
  41a853:	stos   BYTE PTR es:[edi],al
  41a854:	imul   DWORD PTR [ebp+0x27]
  41a857:	mov    DWORD PTR [edi-0x7e],ecx
  41a85a:	sbb    dl,BYTE PTR [eax+0x279c034f]
  41a860:	push   es
  41a861:	arpl   bp,si
  41a863:	sub    al,BYTE PTR [ebx-0x6a]
  41a866:	add    DWORD PTR [ecx-0x7538400d],esp
  41a86c:	dec    ebp
  41a86d:	cdq    
  41a86e:	in     al,dx
  41a86f:	inc    ebx
  41a870:	adc    BYTE PTR [edi-0x5d4bd986],ch
  41a876:	jecxz  0x41a811
  41a878:	hlt    
  41a879:	dec    esp
  41a87a:	pop    ecx
  41a87b:	repz mov al,0xe2
  41a87e:	popf   
  41a87f:	sub    al,0x6
  41a881:	cs xor ch,0x5f
  41a885:	clc    
  41a886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a887:	xor    eax,0xc48ce4fc
  41a88c:	sbb    DWORD PTR [eax],esi
  41a88e:	ins    BYTE PTR es:[edi],dx
  41a88f:	adc    ch,BYTE PTR [ebp+0x13]
  41a892:	push   ss
  41a893:	das    
  41a894:	push   0x179af460
  41a899:	mov    ebx,0xce4e9153
  41a89e:	push   ebx
  41a89f:	pop    edx
  41a8a0:	ins    BYTE PTR es:[edi],dx
  41a8a1:	sbb    DWORD PTR [ebx],ebp
  41a8a3:	adc    DWORD PTR [esi+ebx*4-0x47d81d84],ebx
  41a8aa:	pop    es
  41a8ab:	loope  0x41a85b
  41a8ad:	mov    bh,0x9a
  41a8af:	sbb    eax,0xdca0e7f5
  41a8b4:	inc    ecx
  41a8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b6:	xor    al,BYTE PTR [esi-0x2e4bb342]
  41a8bc:	mov    ch,0x74
  41a8be:	xor    DWORD PTR [ecx-0x2f97438a],edi
  41a8c4:	test   DWORD PTR [edx-0x2f10c600],0x62d40d7b
  41a8ce:	add    eax,ebp
  41a8d0:	dec    BYTE PTR [ecx-0x54425972]
  41a8d6:	mov    esi,0x46acd869
  41a8db:	push   esp
  41a8dc:	jmp    0x41a93c
  41a8de:	aaa    
  41a8df:	lods   eax,DWORD PTR ds:[esi]
  41a8e0:	mov    edx,0x9008bb7a
  41a8e5:	mov    ecx,0xb68fed36
  41a8ea:	mov    ecx,0xbcb1b57c
  41a8ef:	or     dh,bl
  41a8f1:	ins    BYTE PTR es:[edi],dx
  41a8f2:	jne    0x41a8fe
  41a8f4:	sub    esp,DWORD PTR [edx+0x30]
  41a8f7:	data16 fidivr WORD PTR [edi+0x79]
  41a8fb:	int3   
  41a8fc:	out    0xf8,al
  41a8fe:	call   0x260f2f72
  41a903:	leave  
  41a904:	pop    ecx
  41a905:	call   FWORD PTR [esi+ebp*1]
  41a908:	inc    edx
  41a909:	and    al,0x72
  41a90b:	nop
  41a90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a90d:	xchg   esp,eax
  41a90e:	pop    eax
  41a90f:	call   0x8228:0x9f672af3
  41a916:	data16 jns 0x41a921
  41a919:	and    eax,0x5ff895f7
  41a91e:	dec    eax
  41a91f:	push   ebx
  41a920:	out    0x8d,al
  41a922:	ds aas 
  41a924:	adc    BYTE PTR [esi+0x674f8c60],dl
  41a92a:	sub    edx,0x50
  41a92d:	mov    ah,0xf7
  41a92f:	sbb    dl,BYTE PTR [edx]
  41a931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a932:	bound  edi,QWORD PTR [eax]
  41a934:	nop
  41a935:	popf   
  41a936:	push   eax
  41a937:	sub    DWORD PTR ds:0x9b88c069,ebx
  41a93d:	shr    DWORD PTR [ebp+0x1a],1
  41a940:	out    0x4f,al
  41a942:	inc    edx
  41a943:	(bad)  
  41a944:	adc    eax,0xd2911419
  41a949:	pop    edi
  41a94a:	cmp    esi,DWORD PTR [edx+0x365ea6ce]
  41a950:	jmp    0xa13c5ba8
  41a955:	pop    edx
  41a956:	inc    DWORD PTR [edi-0x7e90be04]
  41a95c:	push   ebx
  41a95d:	cmp    edx,DWORD PTR [ecx]
  41a95f:	push   edi
  41a960:	gs jp  0x41a99c
  41a963:	mov    es,WORD PTR [eax-0x6da0ce3d]
  41a969:	repz mov ds:0xd1af478a,eax
  41a96f:	sbb    al,0x2c
  41a971:	xor    al,0x16
  41a973:	mov    ebx,0xce7c8fd8
  41a978:	cdq    
  41a979:	inc    ecx
  41a97a:	xchg   esp,eax
  41a97b:	lock sub DWORD PTR [eax],ebx
  41a97e:	dec    edi
  41a97f:	mov    esi,0xbbf9a67
  41a984:	lds    esp,FWORD PTR [edx-0x603f8a04]
  41a98a:	movups XMMWORD PTR [edx-0x41adb035],xmm1
  41a991:	in     eax,dx
  41a992:	ret    0xbe0c
  41a995:	cmc    
  41a996:	adc    eax,0x1070e574
  41a99b:	jge    0x41a9e3
  41a99d:	neg    DWORD PTR [ebx-0x5e]
  41a9a0:	jnp    0x41a9e4
  41a9a2:	pop    eax
  41a9a3:	mov    ?,edi
  41a9a5:	in     eax,dx
  41a9a6:	call   0xec57:0xce2692eb
  41a9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ae:	dec    ebx
  41a9af:	cdq    
  41a9b0:	pushf  
  41a9b1:	mov    BYTE PTR [edx+0x12f22102],dl
  41a9b7:	addr16 push ecx
  41a9b9:	cmp    dl,BYTE PTR [edx+esi*8-0x35]
  41a9bd:	push   edi
  41a9be:	push   0xa9c1f43c
  41a9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9c4:	jno    0x41a9ca
  41a9c6:	mov    eax,ds:0xb7a6c1a7
  41a9cb:	sbb    DWORD PTR [eax+edx*1],eax
  41a9ce:	mov    edi,0xefee1296
  41a9d3:	xchg   bl,ch
  41a9d5:	fidiv  WORD PTR [esi+0x4]
  41a9d8:	popf   
  41a9d9:	xor    al,0x6
  41a9db:	pusha  
  41a9dc:	or     DWORD PTR [ebx+edx*8],ebx
  41a9df:	or     DWORD PTR ds:0x6586b38f,esi
  41a9e5:	adc    al,0x33
  41a9e7:	cmp    al,0x21
  41a9e9:	shr    DWORD PTR [eax+0x3aed914b],cl
  41a9ef:	mov    ebp,0x245af2d5
  41a9f4:	aam    0x5d
  41a9f6:	dec    esi
  41a9f7:	out    dx,eax
  41a9f8:	shr    bl,1
  41a9fa:	jg     0x41aa11
  41a9fc:	mov    BYTE PTR [eax-0x7c],0xf6
  41aa00:	or     eax,0x3448168a
  41aa05:	xchg   ecx,eax
  41aa06:	daa    
  41aa07:	imul   edi,DWORD PTR [esi-0x46],0xffffff8f
  41aa0b:	mov    ah,0xc
  41aa0d:	ja     0x41a9b3
  41aa0f:	cld    
  41aa10:	jnp    0x41aa36
  41aa12:	pop    ecx
  41aa13:	iret   
  41aa14:	out    0x13,al
  41aa16:	nop
  41aa17:	mov    bl,0xe1
  41aa19:	mov    dl,0x46
  41aa1b:	dec    eax
  41aa1c:	sub    edx,edx
  41aa1e:	imul   esi,ebp,0x44
  41aa21:	jo     0x41aa17
  41aa23:	(bad)  
  41aa24:	or     BYTE PTR [edx+0x40],0xe4
  41aa28:	add    eax,0x994cd3ad
  41aa2d:	out    0x56,eax
  41aa2f:	fcom   DWORD PTR [edi+0x60]
  41aa32:	pop    es
  41aa33:	adc    edx,DWORD PTR [esi]
  41aa35:	cmp    bl,cl
  41aa37:	(bad)  [esi+0xe]
  41aa3a:	jl     0x41aa69
  41aa3c:	iret   
  41aa3d:	push   ebp
  41aa3e:	adc    eax,0x19751ac5
  41aa43:	mov    ah,0x3
  41aa45:	xchg   edx,eax
  41aa46:	mov    esp,0xf20aa2eb
  41aa4b:	ins    DWORD PTR es:[edi],dx
  41aa4c:	xchg   edi,eax
  41aa4d:	fild   QWORD PTR ds:0xfacfa72b
  41aa53:	push   0xffffff91
  41aa55:	ins    DWORD PTR es:[edi],dx
  41aa56:	fistp  QWORD PTR [edx+0x7d]
  41aa59:	xchg   edx,eax
  41aa5a:	fwait
  41aa5b:	mov    ch,BYTE PTR ds:0xe37be69f
  41aa61:	gs push 0x3c
  41aa64:	add    al,0xf6
  41aa66:	clc    
  41aa67:	fcomp  st(6)
  41aa69:	pop    esp
  41aa6a:	inc    BYTE PTR [eax-0x1ece5324]
  41aa70:	sahf   
  41aa71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa72:	mov    esi,0xef7d6248
  41aa77:	jnp    0x41aab0
  41aa79:	shr    BYTE PTR [eax-0x4a],cl
  41aa7c:	add    ebx,DWORD PTR [edx+ebx*8]
  41aa7f:	jp     0x41aafc
  41aa81:	nop
  41aa82:	mov    ah,BYTE PTR [ebp-0x15]
  41aa85:	(bad)  
  41aa86:	adc    eax,0xcbe38d72
  41aa8b:	ds dec eax
  41aa8d:	shr    cl,1
  41aa8f:	sbb    eax,0xf2c74a41
  41aa94:	ss xchg esp,eax
  41aa96:	push   es
  41aa97:	test   dl,ah
  41aa99:	sti    
  41aa9a:	sbb    dl,ch
  41aa9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa9d:	adc    dh,0x24
  41aaa0:	aas    
  41aaa1:	dec    edi
  41aaa2:	retf   
  41aaa3:	sti    
  41aaa4:	ret    
  41aaa5:	cmp    esp,ebp
  41aaa7:	(bad)  
  41aaa8:	ins    DWORD PTR es:[edi],dx
  41aaa9:	dec    DWORD PTR [esi+0x78]
  41aaac:	pusha  
  41aaad:	sbb    BYTE PTR [edx+0x40],bh
  41aab0:	aad    0x28
  41aab2:	mov    bl,0x18
  41aab4:	jmp    DWORD PTR [esp+ebp*8]
  41aab7:	lds    esi,FWORD PTR [esi]
  41aab9:	aas    
  41aaba:	lock addr16 mov al,ds:0xf551
  41aabf:	dec    ecx
  41aac0:	push   ebx
  41aac1:	rol    BYTE PTR [ecx],0xfa
  41aac4:	mov    edi,0x15dac4e2
  41aac9:	cdq    
  41aaca:	cmp    DWORD PTR [edx+0x4fbf1c2c],0xa35b1357
  41aad4:	fisubr WORD PTR [ecx-0x73]
  41aad7:	and    ebp,DWORD PTR [edx+0x688181bd]
  41aadd:	xchg   edx,eax
  41aade:	stc    
  41aadf:	mov    ch,0xa3
  41aae1:	or     al,0xab
  41aae3:	mov    ah,0x45
  41aae5:	movd   DWORD PTR [esi+0x4a67d35b],mm0
  41aaec:	popa   
  41aaed:	out    dx,al
  41aaee:	pop    eax
  41aaef:	sub    bh,BYTE PTR [esi]
  41aaf1:	fs push 0xfb6b85a
  41aaf7:	clc    
  41aaf8:	fsubp  st(6),st
  41aafa:	sub    al,0xf
  41aafc:	mov    ecx,0xf92bb354
  41ab01:	enter  0xa81e,0x61
  41ab05:	int    0x73
  41ab07:	push   fs
  41ab09:	xchg   edx,esi
  41ab0b:	adc    al,0xd2
  41ab0d:	jge    0x41ab7e
  41ab0f:	inc    ebx
  41ab10:	xlat   BYTE PTR ds:[ebx]
  41ab11:	mov    bh,0x51
  41ab13:	pop    esi
  41ab14:	loope  0x41aabb
  41ab16:	jge    0x41aafd
  41ab18:	dec    edi
  41ab19:	icebp  
  41ab1a:	push   cs
  41ab1b:	sub    al,0xad
  41ab1d:	inc    esp
  41ab1e:	sub    al,ah
  41ab20:	push   es
  41ab21:	push   esp
  41ab22:	sub    eax,DWORD PTR [edx-0x6137f6dc]
  41ab28:	mov    ss,WORD PTR [ebp+esi*8-0x7e]
  41ab2c:	xchg   DWORD PTR ds:0xf6c53b98,ecx
  41ab32:	inc    edx
  41ab33:	cdq    
  41ab34:	sbb    ah,al
  41ab36:	aaa    
  41ab37:	test   bh,ah
  41ab39:	mov    ebx,0x64287777
  41ab3e:	pop    edx
  41ab3f:	call   0x16252d64
  41ab44:	retf   
  41ab45:	mov    ds:0xf462006d,al
  41ab4a:	cld    
  41ab4b:	dec    ebx
  41ab4c:	xchg   DWORD PTR [esi+0x1407e5f9],esp
  41ab52:	ins    DWORD PTR es:[edi],dx
  41ab53:	fnsave [eax+0x4aa21eac]
  41ab59:	int3   
  41ab5a:	popa   
  41ab5b:	mov    cl,0x74
  41ab5d:	sahf   
  41ab5e:	mov    ebp,0xdf266512
  41ab63:	mov    DWORD PTR [edx-0x1c],edi
  41ab66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab67:	pop    ebp
  41ab68:	cwde   
  41ab69:	or     eax,ebx
  41ab6b:	push   esp
  41ab6c:	sub    al,BYTE PTR [ebx+0x26ad7a4c]
  41ab72:	pop    esi
  41ab73:	enter  0x57e0,0x6d
  41ab77:	retf   0xa452
  41ab7a:	inc    esp
  41ab7b:	das    
  41ab7c:	xchg   ebx,eax
  41ab7d:	repnz adc DWORD PTR [ecx+0x5c],eax
  41ab81:	stos   BYTE PTR es:[edi],al
  41ab82:	shl    BYTE PTR [esi+0x2c],0xb5
  41ab86:	mov    bl,0xab
  41ab88:	scas   eax,DWORD PTR es:[edi]
  41ab89:	xor    eax,0xc929612e
  41ab8e:	je     0x41ab19
  41ab90:	mov    esi,0x125d1ee0
  41ab95:	fldcw  WORD PTR [eax-0x39da035f]
  41ab9b:	xlat   BYTE PTR ds:[ebx]
  41ab9c:	retf   
  41ab9d:	mov    dl,0x8b
  41ab9f:	add    cl,BYTE PTR [ecx+0x6c58fb8e]
  41aba5:	pushf  
  41aba6:	sbb    BYTE PTR ds:0x43e5a25d,bl
  41abac:	lahf   
  41abad:	out    0xdb,eax
  41abaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb0:	popa   
  41abb1:	push   esi
  41abb2:	jmp    0x4d0391f6
  41abb7:	out    0xab,al
  41abb9:	adc    al,0xe7
  41abbb:	adc    edi,DWORD PTR ds:0xd6194bba
  41abc1:	mov    bl,0x9
  41abc3:	lods   eax,DWORD PTR ds:[esi]
  41abc4:	push   0x8aff4bbd
  41abc9:	enter  0x5407,0xf9
  41abcd:	mov    dh,0xdd
  41abcf:	sar    ebx,1
  41abd1:	dec    edx
  41abd2:	jbe    0x41ab6e
  41abd4:	mov    ds:0x92fa1fd4,al
  41abd9:	push   edi
  41abda:	push   esi
  41abdb:	push   es
  41abdc:	pop    edi
  41abdd:	jl     0x41ac56
  41abdf:	int    0x29
  41abe1:	loope  0x41ac2d
  41abe3:	sbb    DWORD PTR [esp],0xb9ef336a
  41abea:	repz imul ebx,DWORD PTR [ebx+0x6c2a85b1],0x52b14233
  41abf5:	sub    eax,0x46da135d
  41abfa:	ret    0x5d25
  41abfd:	xchg   ebp,eax
  41abfe:	add    eax,0xf5a641a6
  41ac03:	sbb    DWORD PTR ds:0x5a7e9a7c,0xffffff94
  41ac0a:	retf   
  41ac0b:	retf   0xdc3
  41ac0e:	fistp  QWORD PTR [edx-0x73ccc4db]
  41ac14:	or     ebp,DWORD PTR [ebp+0x58a44135]
  41ac1a:	rol    BYTE PTR [ebp+0x4d],1
  41ac1d:	and    ah,BYTE PTR [esi+0x6]
  41ac20:	out    dx,eax
  41ac21:	xchg   esp,eax
  41ac22:	pop    edi
  41ac23:	(bad)  
  41ac24:	mov    bh,cl
  41ac26:	pop    ss
  41ac27:	rol    BYTE PTR [ebx+0x311f805d],1
  41ac2d:	mov    edi,0xfc392422
  41ac32:	es and edx,ebx
  41ac35:	push   0x1b4650a3
  41ac3a:	jnp    0x41ac4c
  41ac3c:	inc    eax
  41ac3d:	add    al,BYTE PTR [edi+edx*8+0x5422541d]
  41ac44:	cmp    dh,BYTE PTR [ecx+0x7d]
  41ac47:	inc    edi
  41ac48:	lods   eax,DWORD PTR ds:[esi]
  41ac49:	jmp    0xcd87:0x5e86050c
  41ac50:	rol    DWORD PTR [ecx-0x54f78b2],cl
  41ac56:	xchg   ebp,eax
  41ac57:	daa    
  41ac58:	adc    eax,0x827d222
  41ac5d:	leave  
  41ac5e:	scas   eax,DWORD PTR es:[edi]
  41ac5f:	lock fisubr DWORD PTR [ebx]
  41ac62:	pop    es
  41ac63:	call   0xa4bf7320
  41ac68:	ins    BYTE PTR es:[edi],dx
  41ac69:	cld    
  41ac6a:	mov    eax,0x69792568
  41ac6f:	sbb    bl,0x1b
  41ac72:	add    DWORD PTR [edi-0x11],esp
  41ac75:	inc    ebx
  41ac76:	lods   eax,DWORD PTR ds:[esi]
  41ac77:	fbld   TBYTE PTR [edi-0x7d]
  41ac7a:	or     BYTE PTR [esi+0x3ce848df],dl
  41ac80:	jae    0x41ac12
  41ac82:	mov    cl,BYTE PTR [ecx]
  41ac84:	jle    0x41ac64
  41ac86:	fdivr  DWORD PTR [edx+0x6c72fd0c]
  41ac8c:	xchg   ebx,eax
  41ac8d:	or     BYTE PTR [esi],al
  41ac8f:	pop    esp
  41ac90:	fiadd  DWORD PTR [ebx+0x59142996]
  41ac96:	dec    ecx
  41ac97:	xor    ah,0xbd
  41ac9a:	aad    0xde
  41ac9c:	ja     0x41ac93
  41ac9e:	xor    bh,BYTE PTR [ebx+0x61]
  41aca1:	ret    
  41aca2:	mov    cl,0xae
  41aca4:	out    0xf,al
  41aca6:	pop    es
  41aca7:	sti    
  41aca8:	and    bl,BYTE PTR [esi-0x45]
  41acab:	out    0x5c,al
  41acad:	ins    DWORD PTR es:[edi],dx
  41acae:	stos   DWORD PTR es:[edi],eax
  41acaf:	mov    al,ds:0x82bfa817
  41acb4:	fild   QWORD PTR [esi-0x3d]
  41acb7:	sub    BYTE PTR [eax-0x66718e53],bl
  41acbd:	ins    DWORD PTR es:[edi],dx
  41acbe:	ss iret 
  41acc0:	into   
  41acc1:	out    dx,al
  41acc2:	in     al,0x2
  41acc4:	fstp   QWORD PTR [ecx+esi*1-0x74]
  41acc8:	fldenv [ebp+0x6a]
  41accb:	xor    bh,BYTE PTR [eax]
  41accd:	or     BYTE PTR [ebp+0x1b],ch
  41acd0:	add    DWORD PTR [ebp+eiz*1-0x68],esp
  41acd4:	xchg   esp,eax
  41acd5:	nop
  41acd6:	fsub   DWORD PTR [esi+0x3592327d]
  41acdc:	test   eax,0x13544d81
  41ace1:	ror    DWORD PTR [ebx],1
  41ace3:	xor    al,0x99
  41ace5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace6:	pop    esp
  41ace7:	sbb    BYTE PTR [edi],0x49
  41acea:	dec    esp
  41aceb:	(bad)  
  41acec:	push   ebx
  41aced:	xchg   ebp,eax
  41acee:	in     eax,dx
  41acef:	int    0x35
  41acf1:	icebp  
  41acf2:	pusha  
  41acf3:	adc    DWORD PTR [ebx],ebx
  41acf5:	or     al,0x6c
  41acf7:	into   
  41acf8:	jnp    0x41ace5
  41acfa:	shr    BYTE PTR [edi+0x6a],0x66
  41acfe:	add    BYTE PTR [edi],0x1a
  41ad01:	cmp    al,0x4b
  41ad03:	out    dx,al
  41ad04:	inc    ebp
  41ad05:	fisub  DWORD PTR [eax]
  41ad07:	mov    esi,0xfaf3228d
  41ad0c:	push   ebp
  41ad0d:	push   cs
  41ad0e:	mov    WORD PTR [ebp+0x27],?
  41ad11:	repz mov edx,0x3dbdb038
  41ad17:	xchg   esp,eax
  41ad18:	and    DWORD PTR [ebx+edx*1-0x74],edi
  41ad1c:	leave  
  41ad1d:	xchg   esp,eax
  41ad1e:	push   es
  41ad1f:	xor    bh,BYTE PTR [eax]
  41ad21:	sub    edi,DWORD PTR [ecx+eiz*2+0x20]
  41ad25:	rol    BYTE PTR [ecx+eax*1],0x56
  41ad29:	std    
  41ad2a:	jp     0x41ad6d
  41ad2c:	add    al,BYTE PTR [edi]
  41ad2e:	hlt    
  41ad2f:	fimul  WORD PTR [edi-0xf11c2bf]
  41ad35:	xor    ax,0xdc25
  41ad39:	cmp    ebp,ecx
  41ad3b:	enter  0x22dc,0xf5
  41ad3f:	cmp    DWORD PTR [ebx],esp
  41ad41:	pop    esi
  41ad42:	mov    esi,0x9e675c50
  41ad47:	(bad)  
  41ad48:	lds    ecx,FWORD PTR [eax+0x37]
  41ad4b:	test   BYTE PTR [edx-0x1d9313a9],dh
  41ad51:	out    dx,al
  41ad52:	bound  eax,QWORD PTR ds:0x4ccedd51
  41ad58:	inc    edi
  41ad59:	jmp    0x41adbe
  41ad5b:	cmp    DWORD PTR [edx+0x67],esi
  41ad5e:	outs   dx,DWORD PTR ds:[esi]
  41ad5f:	ret    0x2e0
  41ad62:	(bad)  
  41ad64:	iret   
  41ad65:	sub    edi,DWORD PTR [esi-0x55]
  41ad68:	xor    BYTE PTR [ebx+0x44fbac97],bl
  41ad6e:	(bad)  
  41ad6f:	fstp   DWORD PTR [ecx-0x400ed6b5]
  41ad75:	mov    al,0xf9
  41ad77:	sahf   
  41ad78:	sti    
  41ad79:	adc    eax,0x24b00d5a
  41ad7e:	mov    dl,0x6f
  41ad80:	pop    es
  41ad81:	test   DWORD PTR [eax-0x4b],ebp
  41ad84:	out    dx,al
  41ad85:	xchg   ebx,eax
  41ad86:	or     BYTE PTR [eax+ebp*4],bl
  41ad89:	xor    bh,BYTE PTR [esi+edi*1-0x45]
  41ad8d:	jge    0x41ad7a
  41ad8f:	xor    bl,BYTE PTR [ebp-0x23]
  41ad92:	ins    BYTE PTR es:[edi],dx
  41ad93:	ret    
  41ad94:	ficomp DWORD PTR [ecx+0x5c9e42d1]
  41ad9a:	mov    edi,0xc8086222
  41ad9f:	ret    0x70eb
  41ada2:	daa    
  41ada3:	rol    BYTE PTR [edi+0x44],1
  41ada6:	or     al,0xd3
  41ada8:	xor    DWORD PTR [ebx+eax*8-0x7f],edi
  41adac:	jp     0x41ad79
  41adae:	inc    ebx
  41adaf:	push   es
  41adb0:	mov    ah,0xb2
  41adb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb3:	adc    BYTE PTR [ecx-0x5ce0a435],0xef
  41adba:	aam    0xeb
  41adbc:	jmp    0xdc526236
  41adc1:	out    dx,al
  41adc2:	popf   
  41adc3:	cmp    bl,BYTE PTR [ecx-0x44]
  41adc6:	add    eax,0x63391ad8
  41adcb:	icebp  
  41adcc:	clc    
  41adcd:	div    DWORD PTR [edx+0x5cc174df]
  41add3:	push   cs
  41add4:	cmc    
  41add5:	ja     0x41ae51
  41add7:	outs   dx,BYTE PTR ds:[esi]
  41add8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41add9:	imul   esp,DWORD PTR [esi],0xa2f07c76
  41addf:	inc    edi
  41ade0:	repnz mov al,0x9c
  41ade3:	test   eax,0x50692fe0
  41ade8:	enter  0xafe9,0x8f
  41adec:	test   DWORD PTR [eax+0x585416d],edx
  41adf2:	popf   
  41adf3:	or     eax,0x2fcacd91
  41adf8:	jp     0x41ae62
  41adfa:	xor    esi,esi
  41adfc:	lods   eax,DWORD PTR ds:[esi]
  41adfd:	sbb    cl,BYTE PTR es:[ecx-0x79]
  41ae01:	sub    BYTE PTR [ebx+eiz*1-0x15],cl
  41ae05:	icebp  
  41ae06:	mov    ebx,0xaa430d17
  41ae0b:	sbb    esi,DWORD PTR [ebp+0x77]
  41ae0e:	(bad)  
  41ae0f:	push   esp
  41ae10:	aam    0xd8
  41ae12:	rcl    BYTE PTR [esi+0x48],0x92
  41ae16:	in     eax,dx
  41ae17:	das    
  41ae18:	bound  esp,QWORD PTR [edi]
  41ae1a:	inc    edi
  41ae1b:	mov    cs:0xdda65ba7,eax
  41ae21:	cli    
  41ae22:	pop    ds
  41ae23:	inc    eax
  41ae24:	es out 0x1e,eax
  41ae27:	int3   
  41ae28:	adc    bh,al
  41ae2a:	inc    ebp
  41ae2b:	(bad)  [edi-0x1f9c9483]
  41ae31:	jmp    0x3bbf:0x17864c8
  41ae38:	mov    dh,0x59
  41ae3a:	out    dx,al
  41ae3b:	mov    BYTE PTR [eax+edi*1],ah
  41ae3e:	sub    edx,DWORD PTR [eax]
  41ae40:	cmp    eax,0x39532ec4
  41ae45:	rcr    bl,1
  41ae47:	arpl   WORD PTR [ebp-0x39],dx
  41ae4a:	ins    BYTE PTR es:[edi],dx
  41ae4b:	test   eax,0x173fb955
  41ae50:	sbb    BYTE PTR ds:0xdf21f9c9,dh
  41ae56:	(bad)  
  41ae58:	push   es
  41ae59:	or     al,0x61
  41ae5b:	icebp  
  41ae5c:	daa    
  41ae5d:	ds cdq 
  41ae5f:	mov    ecx,0xf2b5c66d
  41ae64:	push   ss
  41ae65:	test   DWORD PTR [eax-0x2354f80],0xcd2b3fbe
  41ae6f:	ret    0x15c3
  41ae72:	mov    esp,0x23946a1a
  41ae77:	jmp    0x25da6d63
  41ae7c:	or     DWORD PTR [eax+0x68d4c8e3],ebp
  41ae82:	adc    bl,BYTE PTR ds:0xa791e5aa
  41ae88:	or     DWORD PTR [edi+ebp*1-0x70252409],esi
  41ae8f:	call   0x7262:0x30d760bc
  41ae96:	push   edi
  41ae97:	mov    eax,edi
  41ae99:	and    al,0x22
  41ae9b:	pop    ecx
  41ae9c:	jp     0x41ae27
  41ae9e:	dec    esp
  41ae9f:	fsub   QWORD PTR [ecx-0x6ca09fb4]
  41aea5:	cmp    al,BYTE PTR [ebp-0x6527024d]
  41aeab:	xor    al,0xa8
  41aead:	test   BYTE PTR [ecx-0x2904b102],bh
  41aeb3:	adc    al,0x1c
  41aeb6:	mov    DWORD PTR [ecx-0x25abe24e],ecx
  41aebc:	repz add ah,bh
  41aebf:	nop
  41aec0:	clc    
  41aec1:	sbb    BYTE PTR [edi+0x77],al
  41aec4:	imul   BYTE PTR [ecx]
  41aec6:	and    DWORD PTR [ebp-0xf],edx
  41aec9:	loopne 0x41af02
  41aecb:	mov    eax,0x204db413
  41aed0:	shl    DWORD PTR [eax],cl
  41aed2:	fistp  QWORD PTR [ebp+0x4f]
  41aed5:	fistp  QWORD PTR [esi]
  41aed7:	sbb    esi,esi
  41aed9:	aam    0x75
  41aedb:	shl    ebp,1
  41aedd:	hlt    
  41aede:	fwait
  41aedf:	arpl   WORD PTR [ebx],sp
  41aee1:	xchg   esp,eax
  41aee3:	stos   DWORD PTR es:[edi],eax
  41aee4:	xor    esi,ecx
  41aee6:	mov    BYTE PTR [eax+0x6d4b6341],al
  41aeec:	mov    eax,0xa8ca1f12
  41aef1:	pop    eax
  41aef2:	push   esp
  41aef3:	loop   0x41aea3
  41aef5:	adc    dh,BYTE PTR [ecx+0x58]
  41aef8:	pop    ss
  41aef9:	inc    eax
  41aefa:	xor    BYTE PTR [esi-0x3fd05774],bh
  41af00:	cs out dx,eax
  41af02:	div    DWORD PTR [edi+0x3887cc09]
  41af08:	rol    bh,0x73
  41af0b:	out    0x45,al
  41af0d:	add    ch,BYTE PTR [ecx]
  41af0f:	pop    edi
  41af10:	or     ebx,DWORD PTR [edi+0x5e]
  41af13:	inc    esp
  41af14:	js     0x41af85
  41af16:	retf   
  41af17:	mov    BYTE PTR [eax+0xb],dh
  41af1a:	pop    ebp
  41af1b:	xor    BYTE PTR [ebx-0x4c4b204],ch
  41af21:	cmp    al,0x7c
  41af23:	mov    dh,0x57
  41af25:	push   ecx
  41af26:	jo     0x41aedf
  41af28:	mov    dh,0x56
  41af2a:	push   ss
  41af2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2c:	ins    BYTE PTR es:[edi],dx
  41af2d:	or     al,cl
  41af2f:	mov    esi,0x9bf9340a
  41af34:	inc    edx
  41af35:	aad    0x20
  41af37:	dec    esi
  41af38:	inc    eax
  41af39:	or     bh,ah
  41af3b:	fptan  
  41af3d:	cmp    ebp,DWORD PTR [ecx+0x14dd4ed7]
  41af43:	(bad)  
  41af45:	inc    esp
  41af46:	jnp    0x41afc2
  41af48:	jp     0x41af44
  41af4a:	and    DWORD PTR [edi],eax
  41af4c:	sahf   
  41af4d:	out    dx,eax
  41af4e:	in     al,dx
  41af4f:	or     DWORD PTR [ebp+0x2e],ebx
  41af52:	in     eax,0x69
  41af54:	dec    ebp
  41af55:	xor    cl,BYTE PTR [eax-0x6a5804ba]
  41af5b:	fidivr WORD PTR [edx]
  41af5d:	add    ecx,DWORD PTR [ecx-0x5eb85e1e]
  41af63:	cdq    
  41af64:	popa   
  41af65:	loope  0x41af1e
  41af67:	add    al,0xa1
  41af69:	iret   
  41af6a:	jo     0x41af89
  41af6c:	int3   
  41af6d:	pop    ebx
  41af6e:	push   es
  41af6f:	loopne 0x41af9e
  41af71:	les    ebx,FWORD PTR [edi+edi*8-0x1801d7d]
  41af78:	jns    0x3ca2fe49
  41af7e:	mov    ebp,DWORD PTR [edi+0x65]
  41af81:	inc    eax
  41af82:	repz jmp 0xb66f27ec
  41af88:	out    0x74,eax
  41af8a:	push   edi
  41af8b:	inc    esi
  41af8c:	cmp    DWORD PTR [edi+esi*1-0x5e],ebp
  41af90:	fdivrp st(1),st
  41af92:	mov    edx,DWORD PTR [ebx]
  41af94:	std    
  41af95:	fiadd  DWORD PTR [esi+0x37]
  41af98:	mov    ebx,0x97373d46
  41af9d:	xchg   ebp,eax
  41af9e:	pop    edi
  41af9f:	sbb    DWORD PTR [edx],edi
  41afa1:	xor    dh,BYTE PTR [ebx+0x2c00c214]
  41afa7:	call   0xc15dbae0
  41afac:	pushf  
  41afad:	pop    es
  41afae:	cmp    al,0x60
  41afb0:	and    bl,BYTE PTR [ebx]
  41afb2:	lds    ebx,FWORD PTR [edi-0x7f]
  41afb5:	mov    edi,0xe0fd53c5
  41afba:	repz or dl,BYTE PTR [ebx]
  41afbd:	mov    ds:0x43143998,al
  41afc2:	xchg   ebp,eax
  41afc3:	lock shl BYTE PTR [edx],cl
  41afc6:	xor    ah,BYTE PTR [edx+eiz*8]
  41afc9:	(bad)  [eax+esi*1+0x76]
  41afcd:	(bad)  
  41afce:	into   
  41afcf:	and    esp,DWORD PTR [edi+0x7c8ad57e]
  41afd5:	add    eax,0xe9562336
  41afda:	pop    ebx
  41afdb:	test   DWORD PTR [edx-0x6c787d29],eax
  41afe1:	ss into 
  41afe3:	pop    eax
  41afe4:	test   BYTE PTR [ecx+0x57],dh
  41afe7:	sub    al,0xbd
  41afe9:	inc    eax
  41afea:	inc    esi
  41afeb:	sub    ebp,ebp
  41afed:	cmc    
  41afee:	mul    esp
  41aff0:	je     0x41afb3
  41aff2:	cld    
  41aff3:	push   ebx
  41aff4:	inc    edi
  41aff5:	lock dec esi
  41aff7:	imul   edi,DWORD PTR [edi+0x6d46d3cd],0xffffff91
  41affe:	inc    esp
  41afff:	outs   dx,BYTE PTR ds:[esi]
  41b000:	adc    cl,dl
  41b002:	mov    dl,0xb1
  41b004:	(bad)  
  41b005:	out    dx,al
  41b006:	repnz out 0xe,eax
  41b009:	dec    BYTE PTR [eax+eax*2]
  41b00c:	cmc    
  41b00d:	shl    BYTE PTR [ebx-0x3c],0x53
  41b011:	adc    bl,BYTE PTR [ebp-0x27]
  41b014:	push   ebp
  41b015:	loopne 0x41aff5
  41b017:	loop   0x41afc7
  41b019:	or     dl,ah
  41b01b:	sbb    eax,edx
  41b01d:	jns    0x41b097
  41b01f:	mov    eax,0x98f345ef
  41b024:	pop    es
  41b025:	mov    cl,0x94
  41b027:	nop
  41b028:	adc    al,0x34
  41b02a:	ret    
  41b02b:	mov    dh,ch
  41b02d:	(bad)  
  41b02e:	sar    BYTE PTR [edx+0x32],cl
  41b031:	popf   
  41b032:	lods   al,BYTE PTR ds:[esi]
  41b033:	jns    0x41afe3
  41b035:	into   
  41b036:	mov    gs:0x49f59e9b,eax
  41b03c:	fimul  WORD PTR [eax+0x2a624c25]
  41b042:	pusha  
  41b043:	ss push ebp
  41b045:	and    eax,0x91684b00
  41b04a:	not    DWORD PTR [edx+0x2d]
  41b04d:	leave  
  41b04e:	push   0xc50ab820
  41b053:	imul   ebx,DWORD PTR [edx+0x5e7351bf],0xffffff81
  41b05a:	xor    BYTE PTR [ebx],0xfc
  41b05d:	std    
  41b05e:	push   edx
  41b05f:	mov    DWORD PTR [ebx-0x36],ebp
  41b062:	fistp  DWORD PTR [ebp-0x2d76287a]
  41b068:	jbe    0x41b045
  41b06a:	sbb    ebx,DWORD PTR [edx]
  41b06c:	stc    
  41b06d:	or     ch,BYTE PTR [ecx+0x7f469caf]
  41b073:	rol    BYTE PTR [edi-0x23],1
  41b076:	scas   al,BYTE PTR es:[edi]
  41b077:	stc    
  41b078:	scas   al,BYTE PTR es:[edi]
  41b079:	mov    esi,0x21cddcf2
  41b07e:	test   BYTE PTR [ecx+0x7ffbf15a],0x31
  41b085:	fcomp  QWORD PTR ds:[ebx+0x12e1a460]
  41b08c:	stc    
  41b08d:	in     eax,dx
  41b08e:	adc    al,0x80
  41b090:	loopne 0x41b08f
  41b092:	or     edi,ebx
  41b094:	stos   DWORD PTR es:[edi],eax
  41b095:	dec    ebp
  41b096:	inc    esi
  41b097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b098:	daa    
  41b099:	and    ah,0xc0
  41b09c:	into   
  41b09d:	mov    dl,0xe4
  41b09f:	test   al,0x7d
  41b0a1:	xor    bh,ch
  41b0a3:	dec    BYTE PTR [edi]
  41b0a5:	jbe    0x41b028
  41b0a7:	fidivr DWORD PTR [edi+0x164de2d7]
  41b0ad:	mov    ds:0x17eba126,al
  41b0b2:	addr16 dec ebx
  41b0b4:	sbb    ah,BYTE PTR [edi-0x7c6398d9]
  41b0ba:	mov    ds:0x73ba5284,eax
  41b0bf:	and    DWORD PTR [ecx+0x525fc69e],edi
  41b0c5:	ret    
  41b0c6:	xor    al,BYTE PTR [edx]
  41b0c8:	jns    0x41b110
  41b0ca:	adc    ecx,DWORD PTR [edi-0x5268e0a4]
  41b0d0:	in     eax,dx
  41b0d1:	xchg   DWORD PTR [esi-0x54],esi
  41b0d4:	xor    al,0xd2
  41b0d6:	adc    BYTE PTR [ebx+ebx*4],ah
  41b0d9:	into   
  41b0da:	cmp    ch,dh
  41b0dc:	popa   
  41b0dd:	sub    eax,DWORD PTR [edi]
  41b0df:	push   es
  41b0e0:	(bad)
  41b0e4:	mov    esi,DWORD PTR [ebx-0x69e32705]
  41b0ea:	xor    DWORD PTR [ebx+0x2e21594a],ecx
  41b0f0:	out    0xf5,eax
  41b0f2:	jp     0x41b12c
  41b0f4:	mov    ch,0x4c
  41b0f6:	ret    
  41b0f7:	or     BYTE PTR [edi+esi*8],ch
  41b0fa:	push   dx
  41b0fc:	aam    0x54
  41b0fe:	mov    esi,0xbc0e8f84
  41b103:	into   
  41b104:	cmp    BYTE PTR [ebx+edx*1],al
  41b107:	sbb    esi,DWORD PTR ds:0x8b76055c
  41b10d:	xchg   DWORD PTR [edi+0x5f],esi
  41b110:	cdq    
  41b111:	fnstsw WORD PTR [edx-0x34]
  41b114:	cld    
  41b115:	test   BYTE PTR [ecx],al
  41b117:	ins    BYTE PTR es:[edi],dx
  41b118:	add    dh,cl
  41b11a:	jmp    FWORD PTR [ebx-0x5d]
  41b11d:	stos   DWORD PTR es:[edi],eax
  41b11e:	dec    esp
  41b11f:	sbb    ebx,DWORD PTR [edx]
  41b121:	jmp    0x41b130
  41b123:	xor    esp,ebx
  41b125:	pop    ecx
  41b126:	xchg   ebx,eax
  41b127:	ins    BYTE PTR es:[edi],dx
  41b128:	mov    ecx,DWORD PTR [edi+0x29]
  41b12b:	or     bh,BYTE PTR [edx-0x24]
  41b12e:	cmp    al,0x99
  41b130:	push   cs
  41b131:	dec    edx
  41b132:	dec    ebx
  41b133:	je     0x41b13c
  41b135:	lods   eax,DWORD PTR ds:[esi]
  41b136:	sar    BYTE PTR [ecx-0x6690417b],cl
  41b13c:	into   
  41b13d:	sbb    eax,0x16d589df
  41b142:	fcom   DWORD PTR [edx-0x6f]
  41b145:	adc    DWORD PTR [ecx-0x4661c028],esi
  41b14b:	sub    DWORD PTR [ecx],0xd0405d88
  41b151:	loop   0x41b13c
  41b153:	push   0xba1c7791
  41b158:	mov    ecx,0x3772d5c0
  41b15d:	or     eax,0xc3201263
  41b162:	inc    edi
  41b163:	pusha  
  41b164:	cli    
  41b165:	gs jne 0x41b107
  41b168:	xchg   ebp,eax
  41b169:	imul   ecx,ebp,0x872d84c9
  41b16f:	test   al,0xe8
  41b171:	inc    eax
  41b172:	and    DWORD PTR [edi+0x5b],0xffffffd7
  41b176:	mov    dl,0x1f
  41b178:	inc    ebx
  41b179:	sbb    al,0x8e
  41b17b:	inc    esp
  41b17c:	mov    ds:0x54634b8e,al
  41b181:	and    ah,ch
  41b183:	lahf   
  41b184:	jg     0x41b1ba
  41b186:	out    0xc7,eax
  41b188:	mov    edi,0x66475a19
  41b18d:	test   DWORD PTR [ecx],ebx
  41b18f:	pusha  
  41b190:	jns    0x41b1ad
  41b192:	adc    esi,DWORD PTR [ecx]
  41b194:	add    al,0x3
  41b196:	pop    edx
  41b197:	mov    ds:0xd08393b,al
  41b19c:	pushf  
  41b19d:	(bad)  
  41b19e:	pop    edi
  41b19f:	jle    0x41b214
  41b1a1:	pop    ebx
  41b1a2:	hlt    
  41b1a3:	add    eax,0x956f1ee5
  41b1a8:	fsubr  QWORD PTR [ebx]
  41b1aa:	push   esi
  41b1ab:	test   eax,0x92ca0e80
  41b1b0:	mov    al,0x71
  41b1b2:	add    al,0x7a
  41b1b4:	add    BYTE PTR [ecx+0x6b6ead8f],0xa9
  41b1bb:	cmp    BYTE PTR [edx],dh
  41b1bd:	push   0xffffffe1
  41b1bf:	scas   eax,DWORD PTR es:[edi]
  41b1c0:	aaa    
  41b1c1:	int    0x25
  41b1c3:	pop    ebp
  41b1c4:	and    eax,eax
  41b1c6:	inc    esp
  41b1c7:	lahf   
  41b1c8:	loope  0x41b169
  41b1ca:	(bad)  
  41b1cb:	daa    
  41b1cc:	sbb    dl,BYTE PTR [ebx-0x1a9cd55f]
  41b1d2:	add    BYTE PTR [eax],bl
  41b1d4:	xchg   edi,eax
  41b1d5:	adc    ah,dl
  41b1d7:	inc    ebx
  41b1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d9:	stc    
  41b1da:	test   eax,0x40c4f6da
  41b1df:	enter  0xbf89,0xb4
  41b1e3:	mov    eax,ds:0xe9893f9f
  41b1e8:	cmp    BYTE PTR [ebx+0x172ec6ea],al
  41b1ee:	mov    edi,0x5d46da5e
  41b1f3:	ds xchg ecx,eax
  41b1f5:	rcl    BYTE PTR [edi-0x40],cl
  41b1f8:	fimul  DWORD PTR [esi-0x34]
  41b1fb:	sub    ecx,DWORD PTR [esi-0x1eccd0f1]
  41b201:	dec    esp
  41b202:	jbe    0x41b219
  41b204:	push   ecx
  41b205:	fcom   DWORD PTR [edx-0x4cd95d2]
  41b20b:	ror    BYTE PTR [ebp-0x14453e5a],0x69
  41b212:	ss inc esp
  41b214:	and    ebp,DWORD PTR [esi]
  41b216:	push   ecx
  41b217:	imul   ebp,DWORD PTR [esi],0xe529806f
  41b21d:	xchg   esp,eax
  41b21e:	inc    edi
  41b21f:	adc    DWORD PTR [edx-0x3f],0xffffff8b
  41b223:	fcom   st(3)
  41b225:	in     al,dx
  41b226:	(bad)  
  41b227:	and    DWORD PTR [eax+0x21],esi
  41b22a:	mov    esi,0xf0f56a7e
  41b22f:	add    BYTE PTR [ebp-0x4b],bh
  41b232:	sti    
  41b233:	xlat   BYTE PTR ds:[ebx]
  41b234:	stos   DWORD PTR es:[edi],eax
  41b235:	push   ds
  41b236:	jno    0x41b230
  41b238:	add    eax,0xed57b0eb
  41b23d:	mov    ds:0xd4dec5f0,eax
  41b242:	mov    cl,0x1e
  41b244:	jns    0x41b256
  41b246:	fs and eax,0x94ccc985
  41b24c:	mov    cl,0xea
  41b24e:	cdq    
  41b24f:	in     al,0x30
  41b251:	inc    esp
  41b252:	aam    0x55
  41b254:	inc    ebp
  41b255:	sub    BYTE PTR [edx],bh
  41b257:	pusha  
  41b258:	leavew 
  41b25a:	mov    edx,0xb78d65f7
  41b25f:	in     eax,0xec
  41b261:	dec    ebx
  41b262:	std    
  41b263:	mov    ebx,DWORD PTR [eax]
  41b265:	dec    esi
  41b266:	jmp    0x41b254
  41b268:	xlat   BYTE PTR ds:[ebx]
  41b269:	mov    ds:0x543f9d5c,al
  41b26e:	bound  esp,QWORD PTR [ecx-0x5f]
  41b271:	pop    es
  41b272:	mov    eax,0x1991021a
  41b277:	gs add ch,cl
  41b27a:	cmp    dl,BYTE PTR [ebp-0x3ca49213]
  41b280:	or     ah,BYTE PTR [esp+esi*8]
  41b283:	leave  
  41b284:	mov    esi,0xae30306b
  41b289:	and    BYTE PTR [ecx-0x231e5fd0],bl
  41b28f:	adc    esp,DWORD PTR [ebx-0x57b978e6]
  41b295:	jne    0x41b2c5
  41b297:	js     0x41b2c8
  41b299:	cmp    ebx,DWORD PTR [eax]
  41b29b:	add    BYTE PTR [eax+eax*2],dl
  41b29e:	inc    esp
  41b2a0:	mov    dh,0xc
  41b2a2:	sub    BYTE PTR [edi-0x20],0xbf
  41b2a6:	aas    
  41b2a7:	popf   
  41b2a8:	sbb    ch,dl
  41b2aa:	xchg   ecx,eax
  41b2ab:	retf   0x3ccc
  41b2ae:	jge    0x41b30d
  41b2b0:	aas    
  41b2b1:	mov    edi,0x1f0b9774
  41b2b6:	and    edx,DWORD PTR [ebx-0x50]
  41b2b9:	clc    
  41b2ba:	adc    eax,0xebbe090c
  41b2bf:	jmp    0x57d1c694
  41b2c4:	push   ebp
  41b2c5:	in     al,0xa4
  41b2c7:	stos   DWORD PTR es:[edi],eax
  41b2c8:	and    esp,DWORD PTR [esi-0x22]
  41b2cb:	add    DWORD PTR [esi+eiz*2],0xffffffaa
  41b2cf:	mov    BYTE PTR [ecx-0x6],al
  41b2d2:	xchg   esi,eax
  41b2d3:	dec    esi
  41b2d4:	jl     0x41b304
  41b2d6:	and    eax,0xd7d8abe6
  41b2db:	loope  0x41b2de
  41b2dd:	repz sbb eax,0xab25c84e
  41b2e3:	sti    
  41b2e4:	cdq    
  41b2e5:	sub    ebx,DWORD PTR [esi-0x4b4e84dc]
  41b2eb:	into   
  41b2ec:	pop    ds
  41b2ed:	call   0x6885:0xde47840b
  41b2f4:	out    0x33,eax
  41b2f6:	add    ebx,ebx
  41b2f8:	les    eax,FWORD PTR [eax-0xbdc14a9]
  41b2fe:	inc    esp
  41b2ff:	push   ds
  41b300:	pushf  
  41b301:	adc    BYTE PTR ds:0xd396d8cb,dh
  41b307:	mov    edx,DWORD PTR ss:[edx-0x5292d244]
  41b30e:	shl    DWORD PTR [edx-0x66e181dc],cl
  41b314:	ror    DWORD PTR [edx-0x356998b1],cl
  41b31a:	test   al,0x2f
  41b31c:	sahf   
  41b31d:	sub    bl,ch
  41b31f:	mov    edi,es
  41b321:	repz pop ebp
  41b323:	or     DWORD PTR [eax],edx
  41b325:	sahf   
  41b326:	lds    edx,FWORD PTR [ebp+ebp*1+0x61]
  41b32a:	lock (bad) 
  41b32c:	cmp    BYTE PTR [ecx+0x22d6f97a],al
  41b332:	arpl   bx,sp
  41b334:	ins    BYTE PTR es:[edi],dx
  41b335:	sbb    al,0x9f
  41b337:	xlat   BYTE PTR ds:[ebx]
  41b338:	add    DWORD PTR [edi+edx*4+0x50cefa1d],esp
  41b33f:	add    al,0xab
  41b341:	inc    edi
  41b342:	jp     0x41b35b
  41b344:	mov    cl,0xd
  41b346:	in     al,0x75
  41b348:	fbld   TBYTE PTR [esi]
  41b34b:	pop    ebp
  41b34c:	mov    dh,0x8a
  41b34e:	out    dx,al
  41b34f:	stos   BYTE PTR es:[edi],al
  41b350:	add    bh,BYTE PTR [edi+0x76d6a35d]
  41b356:	xchg   DWORD PTR [eax-0x385171b1],edx
  41b35c:	mov    ecx,0x7c43f243
  41b361:	push   cs
  41b362:	fidivr WORD PTR [edi-0x64]
  41b365:	cwde   
  41b366:	ret    0x162a
  41b369:	push   esi
  41b36a:	jbe    0x41b3ac
  41b36c:	mul    ebp
  41b36e:	jmp    0x82d95388
  41b373:	mov    bh,0x98
  41b375:	pushf  
  41b376:	(bad)  
  41b377:	bound  ecx,QWORD PTR [esp+ebx*2-0xc2dbc81]
  41b37e:	sbb    bl,BYTE PTR [edx-0x24]
  41b381:	mov    ds:0x56e5c970,eax
  41b386:	ds ret 0x6781
  41b38a:	jae    0x41b3d3
  41b38c:	xchg   ebx,eax
  41b38d:	inc    ebx
  41b38e:	in     eax,0x75
  41b390:	(bad)  
  41b391:	fistp  QWORD PTR [esi-0x3fdf435e]
  41b397:	lods   al,BYTE PTR ds:[esi]
  41b398:	call   0x9354:0xb9d482c2
  41b39f:	xchg   BYTE PTR [esi-0x6d818844],dl
  41b3a5:	xchg   ebx,eax
  41b3a6:	ins    DWORD PTR es:[edi],dx
  41b3a7:	xor    al,0x6e
  41b3a9:	or     DWORD PTR [ebp-0x28],ebp
  41b3ac:	int    0xc7
  41b3ae:	sti    
  41b3af:	add    BYTE PTR [esi-0x6f],bh
  41b3b2:	and    dh,ch
  41b3b4:	aaa    
  41b3b5:	dec    esi
  41b3b6:	fs mov esi,0x170dc5ca
  41b3bc:	mov    bl,0x6b
  41b3be:	dec    esi
  41b3bf:	lods   al,BYTE PTR ds:[esi]
  41b3c0:	ins    BYTE PTR es:[edi],dx
  41b3c1:	mov    WORD PTR [eax],fs
  41b3c3:	pushf  
  41b3c4:	dec    edx
  41b3c5:	not    BYTE PTR [ecx+0x72c97e0d]
  41b3cb:	mov    ah,0x8d
  41b3cd:	loope  0x41b415
  41b3cf:	in     al,0xe8
  41b3d1:	dec    eax
  41b3d2:	loop   0x41b3ea
  41b3d4:	mov    ah,0x4f
  41b3d6:	sub    esi,ecx
  41b3d8:	les    ebp,FWORD PTR [esi+0x1c]
  41b3db:	adc    al,0x1c
  41b3dd:	mov    cl,0xe3
  41b3df:	int3   
  41b3e0:	not    DWORD PTR [edx]
  41b3e2:	pop    esi
  41b3e3:	popa   
  41b3e4:	fldenv [ebx+0x64]
  41b3e7:	add    bl,ah
  41b3e9:	hlt    
  41b3ea:	adc    ch,al
  41b3ec:	adc    al,0x89
  41b3ee:	lea    eax,[ecx]
  41b3f0:	pop    esi
  41b3f1:	dec    ecx
  41b3f2:	cwde   
  41b3f3:	cdq    
  41b3f4:	clc    
  41b3f5:	jns    0x41b385
  41b3f7:	test   al,0x6f
  41b3f9:	xchg   edi,eax
  41b3fa:	xchg   esi,eax
  41b3fb:	test   al,0x27
  41b3fd:	sub    al,0xf9
  41b3ff:	retf   
  41b400:	vpunpckhqdq xmm0,xmm0,XMMWORD PTR [edi+0x3bd74d23]
  41b408:	xor    eax,0xab0fd8e8
  41b40d:	adc    bl,ch
  41b40f:	lds    edx,FWORD PTR [edi-0x76]
  41b412:	repz fsub st(2),st
  41b415:	or     edi,edx
  41b417:	loopne 0x41b43d
  41b419:	adc    al,0x44
  41b41b:	test   esi,ebp
  41b41d:	add    al,0x98
  41b41f:	mov    WORD PTR [ebx+0x14b50940],?
  41b425:	push   esp
  41b426:	cmp    al,BYTE PTR [edx+0x32282996]
  41b42c:	mov    al,0xe8
  41b42e:	(bad)  
  41b42f:	stos   BYTE PTR es:[edi],al
  41b430:	mov    dh,0x9d
  41b432:	xchg   ebp,eax
  41b433:	or     BYTE PTR [edx+ebp*2],bl
  41b436:	sbb    BYTE PTR [ecx],0x37
  41b439:	mov    ah,0x35
  41b43b:	repnz bound edi,QWORD PTR [ebp-0x741aff98]
  41b442:	test   al,0xd2
  41b444:	sub    eax,0xbf1c95c
  41b449:	pop    ebx
  41b44a:	push   0x10e6b69
  41b44f:	out    dx,al
  41b450:	lock sahf 
  41b452:	out    dx,al
  41b453:	sub    eax,0x1b3b4b57
  41b458:	stos   DWORD PTR es:[edi],eax
  41b459:	xor    DWORD PTR [eax+0x7235b410],edx
  41b45f:	mov    esp,DWORD PTR [edx]
  41b461:	ret    
  41b462:	mov    edx,0xc0b46106
  41b467:	inc    eax
  41b468:	mov    edi,0xc98e32b3
  41b46d:	(bad)  
  41b46e:	aas    
  41b46f:	psubusw mm4,QWORD PTR [edi]
  41b472:	mov    ch,0x18
  41b474:	mov    eax,ds:0x6929b958
  41b479:	jge    0x41b49d
  41b47b:	repz xor ebp,DWORD PTR [ebp+eax*4+0x39]
  41b480:	dec    ebp
  41b481:	cmp    al,BYTE PTR [bp+di+0x32]
  41b485:	add    bl,BYTE PTR ds:0x4ba97926
  41b48b:	cmp    al,0x58
  41b48d:	mov    ah,0xed
  41b48f:	xlat   BYTE PTR ds:[ebx]
  41b490:	mov    esi,0x1d2d5603
  41b495:	xor    esp,esp
  41b497:	fdiv   DWORD PTR [esi]
  41b499:	cmp    DWORD PTR [ecx],esi
  41b49b:	and    BYTE PTR [edi+0x70],ah
  41b49e:	cli    
  41b49f:	scas   al,BYTE PTR es:[edi]
  41b4a0:	pushf  
  41b4a1:	mov    esi,0x98540448
  41b4a6:	or     eax,DWORD PTR [edi]
  41b4a8:	fnsave [ecx-0x71]
  41b4ab:	inc    ebx
  41b4ac:	dec    ebx
  41b4ad:	cmc    
  41b4ae:	sub    al,0x38
  41b4b0:	rcr    BYTE PTR [edx],cl
  41b4b2:	dec    eax
  41b4b3:	dec    esp
  41b4b4:	jl     0x41b452
  41b4b6:	out    dx,al
  41b4b7:	fidiv  WORD PTR [edx-0x342fd326]
  41b4bd:	(bad)  
  41b4be:	test   WORD PTR [bx+di],si
  41b4c2:	xor    eax,eax
  41b4c4:	jmp    0x41b454
  41b4c6:	adc    ebx,edi
  41b4c8:	xchg   ebx,eax
  41b4c9:	scas   eax,DWORD PTR es:[edi]
  41b4ca:	xor    eax,0x666506ba
  41b4cf:	fdivr  DWORD PTR [ecx-0x41]
  41b4d2:	mov    al,dh
  41b4d4:	das    
  41b4d5:	cdq    
  41b4d6:	or     BYTE PTR ds:0x2b0b4f5a,bl
  41b4dc:	pop    edi
  41b4dd:	jge    0x41b4bb
  41b4df:	stc    
  41b4e0:	(bad)  
  41b4e1:	cmp    al,0xb9
  41b4e3:	pushf  
  41b4e4:	mov    edi,0xefee6186
  41b4e9:	test   al,0xc
  41b4eb:	mov    al,ds:0x6529dd8d
  41b4f0:	in     eax,0x61
  41b4f2:	xchg   ecx,eax
  41b4f3:	test   esi,ecx
  41b4f5:	mov    edx,0x273a1066
  41b4fa:	out    0xa2,al
  41b4fc:	ds ja  0x41b4ac
  41b4ff:	sbb    DWORD PTR [esi+0x7e],edi
  41b502:	test   al,0x64
  41b504:	stos   BYTE PTR es:[edi],al
  41b505:	jge    0x41b4c9
  41b507:	pop    ss
  41b508:	into   
  41b509:	mov    ch,0xa4
  41b50b:	in     al,dx
  41b50c:	push   esi
  41b50d:	(bad)  
  41b50e:	mov    bh,0xa2
  41b510:	mov    ebx,0xded39e34
  41b515:	loopne 0x41b49a
  41b517:	out    0x7d,al
  41b519:	pop    ebp
  41b51a:	push   edi
  41b51b:	inc    ecx
  41b51c:	cdq    
  41b51d:	push   ecx
  41b51e:	sub    al,0xd3
  41b520:	push   edi
  41b521:	das    
  41b522:	in     eax,0xe
  41b524:	xchg   ebx,eax
  41b525:	popa   
  41b526:	adc    ecx,esi
  41b528:	imul   ebp,DWORD PTR [ebp-0x76],0x76
  41b52c:	mov    esp,DWORD PTR [eax-0x60]
  41b52f:	icebp  
  41b530:	mov    ds:0xfc963115,al
  41b535:	mov    dh,0xde
  41b537:	imul   edi,DWORD PTR [esi-0x31],0xffffffdf
  41b53b:	bts    eax,ebp
  41b53e:	xchg   ebp,eax
  41b53f:	ror    BYTE PTR [ecx-0x12a08049],1
  41b545:	jb     0x41b561
  41b547:	in     eax,dx
  41b548:	mov    WORD PTR [ebp-0x21],ds
  41b54b:	dec    edi
  41b54c:	data16 aaa 
  41b54e:	sub    BYTE PTR ds:0xa3edf004,dh
  41b554:	test   bl,bl
  41b556:	into   
  41b557:	(bad)  
  41b558:	sub    al,0xea
  41b55a:	pop    esi
  41b55b:	mov    ds:0xb5ac898f,al
  41b560:	mov    bl,0xab
  41b562:	xchg   esp,eax
  41b563:	sub    ebx,ecx
  41b565:	or     BYTE PTR [ecx+0x47],ah
  41b568:	fist   DWORD PTR [edx]
  41b56a:	jmp    0x7a153a26
  41b56f:	dec    edi
  41b570:	out    dx,al
  41b571:	imul   DWORD PTR [ebx+0x71]
  41b574:	dec    esi
  41b575:	dec    esi
  41b576:	cdq    
  41b577:	xchg   BYTE PTR [edx+0x44],dh
  41b57a:	xchg   esp,eax
  41b57b:	inc    ebp
  41b57c:	mov    edi,0x7c08bad7
  41b581:	push   ds
  41b582:	jnp    0x41b543
  41b584:	inc    esp
  41b585:	lods   al,BYTE PTR ds:[esi]
  41b586:	fcmovnb st,st(7)
  41b588:	fcomp  QWORD PTR [edi]
  41b58a:	jns    0x41b5db
  41b58c:	test   al,0x70
  41b58e:	(bad)  
  41b590:	cmc    
  41b591:	cmp    eax,0x34f04336
  41b596:	loop   0x41b5cf
  41b598:	cmp    cl,dl
  41b59a:	jmp    0x7b73:0x6d097af9
  41b5a1:	ret    
  41b5a2:	fisttp QWORD PTR [edx-0x5a]
  41b5a5:	dec    esp
  41b5a6:	leave  
  41b5a7:	nop
  41b5a8:	push   0x6828ff9a
  41b5ad:	das    
  41b5ae:	mov    ss,WORD PTR [ebx-0x52]
  41b5b1:	addr16 cwde 
  41b5b3:	and    cl,bl
  41b5b5:	out    0xda,eax
  41b5b7:	sti    
  41b5b8:	dec    ebx
  41b5b9:	jno    0x41b623
  41b5bb:	sbb    bl,BYTE PTR [edi-0x7]
  41b5be:	les    esi,FWORD PTR [edi]
  41b5c0:	or     eax,0x4f132469
  41b5c5:	sbb    bh,dh
  41b5c7:	sub    DWORD PTR [esi],0xffffffad
  41b5ca:	rcr    DWORD PTR [esi],1
  41b5cc:	in     al,0x36
  41b5ce:	jle    0x41b553
  41b5d0:	mov    esi,0x866321
  41b5d5:	aas    
  41b5d6:	dec    ecx
  41b5d7:	cmp    esp,DWORD PTR [ecx+0x1d0dc7dd]
  41b5dd:	clc    
  41b5de:	mov    ds,WORD PTR [edi]
  41b5e0:	clc    
  41b5e1:	jb     0x41b649
  41b5e3:	mov    ebp,0xa576a0bd
  41b5e8:	in     eax,dx
  41b5e9:	clc    
  41b5ea:	inc    esi
  41b5eb:	loopne 0x41b608
  41b5ed:	or     al,0x61
  41b5ef:	sbb    al,al
  41b5f1:	jnp    0x41b5dd
  41b5f3:	test   al,0xaa
  41b5f5:	pop    ecx
  41b5f6:	cwde   
  41b5f7:	push   ebx
  41b5f8:	mov    bh,BYTE PTR [eax+ebx*4-0x25]
  41b5fc:	jns    0x41b652
  41b5fe:	ins    BYTE PTR es:[edi],dx
  41b5ff:	out    dx,al
  41b600:	xlat   BYTE PTR es:[ebx]
  41b602:	sbb    dh,BYTE PTR [esi]
  41b604:	add    DWORD PTR [edi+eax*1],0xffffffdc
  41b608:	jb     0x41b64f
  41b60a:	xchg   BYTE PTR [ebp-0x32],ah
  41b60d:	add    ecx,DWORD PTR [edi]
  41b60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b610:	pop    edx
  41b611:	push   0xd9cc4385
  41b616:	scas   eax,DWORD PTR es:[edi]
  41b617:	ret    0x25ef
  41b61a:	mov    al,ds:0x5d247c77
  41b61f:	fwait
  41b620:	call   esp
  41b622:	and    ebx,DWORD PTR [ecx-0x25]
  41b625:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b627:	adc    al,0xe2
  41b629:	jecxz  0x41b68f
  41b62b:	into   
  41b62c:	pop    ebp
  41b62d:	sti    
  41b62e:	push   ebp
  41b62f:	imul   edx,edx,0x29
  41b632:	and    bh,BYTE PTR ds:0xe61e97eb
  41b638:	xor    esi,edi
  41b63a:	les    esi,FWORD PTR [ecx-0x6d]
  41b63d:	xor    bl,0x25
  41b640:	lds    esi,FWORD PTR [edi-0x43]
  41b643:	add    DWORD PTR [esi+0x59665b20],esi
  41b649:	mov    esp,0x5d2f5043
  41b64e:	cmp    esi,DWORD PTR [eax]
  41b650:	jns    0x41b6a9
  41b652:	jb     0x41b681
  41b654:	lahf   
  41b655:	das    
  41b656:	and    dh,BYTE PTR [edi]
  41b658:	cmp    al,0xd0
  41b65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b65b:	mov    ecx,?
  41b65d:	fs pusha 
  41b65f:	add    DWORD PTR [ebx],edi
  41b661:	and    esi,DWORD PTR [esi+0x33]
  41b664:	ret    
  41b665:	or     DWORD PTR [ecx-0x4e],ebp
  41b668:	arpl   cx,sp
  41b66a:	test   esi,edi
  41b66c:	xor    al,0x97
  41b66e:	pop    esp
  41b66f:	test   al,0x82
  41b671:	add    al,0x18
  41b673:	mov    ds:0x73f64113,al
  41b678:	or     eax,0x8889f3
  41b67d:	push   ebx
  41b67e:	jb     0x41b63a
  41b680:	pop    ebx
  41b681:	dec    esp
  41b682:	push   ss
  41b683:	bound  esi,QWORD PTR [eax-0x1a]
  41b686:	outs   dx,BYTE PTR ds:[esi]
  41b687:	lahf   
  41b688:	sub    edi,0xf367318a
  41b68e:	es scas al,BYTE PTR es:[edi]
  41b690:	or     esp,ebx
  41b692:	lea    esp,[edi+eax*1+0x7462fea8]
  41b699:	nop
  41b69a:	lahf   
  41b69b:	add    ebx,DWORD PTR [ebp+edi*1-0x31]
  41b69f:	gs nop
  41b6a1:	mov    fs,WORD PTR [eax-0x3b14e752]
  41b6a7:	adc    eax,0xa5e1f70f
  41b6ac:	bound  edx,QWORD PTR [ecx-0xe51c21c]
  41b6b2:	mov    cl,0x43
  41b6b4:	jns    0x41b6f9
  41b6b6:	aam    0x35
  41b6b8:	xchg   esi,eax
  41b6b9:	xor    edx,edi
  41b6bb:	cmp    BYTE PTR [edx+0x76],0x6c
  41b6bf:	jg     0x41b6f4
  41b6c1:	jae    0x41b65f
  41b6c3:	aas    
  41b6c4:	xor    al,0x8b
  41b6c6:	xchg   ecx,eax
  41b6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6c8:	test   bl,dh
  41b6ca:	loope  0x41b67b
  41b6cc:	shl    BYTE PTR [ebx],cl
  41b6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6cf:	and    DWORD PTR gs:[ebx-0x27],0xffffffef
  41b6d4:	aam    0x8b
  41b6d6:	enter  0x74af,0x68
  41b6da:	add    DWORD PTR [ecx+ebp*1],esp
  41b6dd:	pop    esp
  41b6de:	inc    ebp
  41b6df:	pop    ss
  41b6e0:	inc    esp
  41b6e1:	add    ebx,DWORD PTR [ecx-0x70c6c658]
  41b6e7:	cmp    DWORD PTR [edi+0x65],esp
  41b6ea:	sbb    eax,0xf5eb8b99
  41b6ef:	sbb    ebx,DWORD PTR [eax-0x6efbc4eb]
  41b6f5:	aad    0x3e
  41b6f7:	(bad)
  41b6fb:	xchg   ecx,eax
  41b6fc:	jmp    0x41b734
  41b6fe:	push   cs
  41b6ff:	(bad)  
  41b700:	daa    
  41b701:	aad    0x47
  41b703:	pop    ebx
  41b704:	ret    
  41b705:	push   cs
  41b706:	inc    cl
  41b708:	dec    edi
  41b709:	sub    DWORD PTR [eax],esi
  41b70b:	out    0x43,al
  41b70d:	cmp    eax,0x9255a52c
  41b712:	lods   al,BYTE PTR ds:[esi]
  41b713:	mov    edi,0xbf53e10b
  41b718:	inc    ebx
  41b719:	shl    DWORD PTR [edx+0x912b14c],cl
  41b71f:	inc    ebp
  41b720:	fidivr DWORD PTR [ecx-0x37b21834]
  41b726:	arpl   WORD PTR [ebx],bx
  41b728:	out    0x62,al
  41b72a:	inc    ebx
  41b72b:	cmp    DWORD PTR [ebx+0x66],ebp
  41b72e:	jle    0x41b6c5
  41b730:	(bad)  
  41b732:	xor    eax,0x57099e94
  41b737:	addr16 (bad) 
  41b739:	jb     0x41b6e5
  41b73b:	jg     0x41b791
  41b73d:	mov    dh,0x8b
  41b73f:	test   eax,0x133ee95f
  41b744:	inc    eax
  41b745:	jb     0x41b728
  41b747:	mov    ebx,0x6c66272a
  41b74c:	in     al,0xbf
  41b74e:	sbb    esi,DWORD PTR [eax]
  41b750:	jl     0x41b6ee
  41b752:	clc    
  41b753:	(bad)  
  41b754:	ds jno 0x41b73d
  41b757:	cld    
  41b758:	jnp    0x41b70c
  41b75a:	or     eax,0xcc5f8a2c
  41b75f:	add    al,0xd1
  41b761:	fstp   TBYTE PTR [ebx+0x7a]
  41b764:	jecxz  0x41b7b8
  41b766:	loope  0x41b774
  41b768:	mov    edi,0xe59dac22
  41b76d:	xlat   BYTE PTR ds:[ebx]
  41b76e:	aad    0x5c
  41b770:	ja     0x41b714
  41b772:	or     BYTE PTR [ecx+0x49372c17],ah
  41b778:	cli    
  41b779:	test   BYTE PTR [ecx+ebx*4-0x3f],dl
  41b77d:	dec    ecx
  41b77e:	imul   ecx,DWORD PTR [edx-0x2b],0xdef9144d
  41b785:	jmp    0xf1bd:0xa51fba8b
  41b78c:	xchg   ebx,eax
  41b78d:	daa    
  41b78e:	pop    ss
  41b78f:	xor    eax,0x8f8febf6
  41b794:	ret    
  41b795:	(bad)  
  41b797:	push   ss
  41b798:	ins    DWORD PTR es:[edi],dx
  41b799:	add    eax,0x4140b47c
  41b79e:	loopne 0x41b81b
  41b7a0:	and    BYTE PTR [eax-0x4d3b2891],0x7c
  41b7a7:	sbb    eax,DWORD PTR [ecx+0x5a13e9e6]
  41b7ad:	sub    ch,BYTE PTR [ecx]
  41b7af:	outs   dx,DWORD PTR ds:[esi]
  41b7b0:	push   eax
  41b7b1:	jl     0x41b79c
  41b7b3:	in     eax,0x16
  41b7b5:	mov    cl,0xe3
  41b7b8:	xchg   ebx,eax
  41b7b9:	call   0x876f:0x57670e4e
  41b7c0:	and    DWORD PTR [edi],ecx
  41b7c2:	push   esp
  41b7c3:	mov    ds:0x684e9f85,eax
  41b7c8:	sub    dh,BYTE PTR [ecx+0x20e4275a]
  41b7ce:	dec    esp
  41b7cf:	ror    BYTE PTR [ebx+0x41],cl
  41b7d2:	cwde   
  41b7d3:	repz and al,0xee
  41b7d6:	int    0x87
  41b7d8:	rcl    DWORD PTR [eax+edx*2],1
  41b7db:	imul   ebp,DWORD PTR [ecx+0xe3faa72],0x6c66b649
  41b7e5:	xor    BYTE PTR [esi],ah
  41b7e7:	dec    eax
  41b7e8:	xor    eax,0xec941363
  41b7ed:	aaa    
  41b7ee:	jg     0x41b851
  41b7f0:	add    al,0xa9
  41b7f2:	repz sbb al,0xa7
  41b7f5:	ins    BYTE PTR es:[edi],dx
  41b7f6:	and    eax,0x31ad199a
  41b7fb:	pop    ds
  41b7fc:	jb     0x41b7be
  41b7fe:	jmp    0x7102:0x2c071330
  41b805:	scas   eax,DWORD PTR es:[edi]
  41b806:	adc    BYTE PTR [edx],0xd5
  41b809:	cli    
  41b80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b80b:	cmp    BYTE PTR [ebp+0x41d9eacc],bl
  41b811:	sub    bl,0x9e
  41b814:	dec    esi
  41b815:	or     al,dh
  41b817:	fnstenv [edi-0x64]
  41b81a:	cmp    eax,0x18d1e5b
  41b81f:	cmp    ebx,DWORD PTR [ebp-0x4c]
  41b822:	add    BYTE PTR [ecx-0x2d],dl
  41b825:	cdq    
  41b826:	mov    WORD PTR ds:0x264b461b,?
  41b82c:	sbb    al,0x2a
  41b82e:	jmp    0xd5cb:0x4dea67ea
  41b835:	in     al,dx
  41b836:	cmp    al,0x1b
  41b838:	cmp    bh,BYTE PTR [ebp-0x2b246afb]
  41b83e:	das    
  41b83f:	xor    ebx,DWORD PTR [ebx+0x1c]
  41b842:	sbb    al,0x2b
  41b844:	and    bh,BYTE PTR [edi+0x4f]
  41b847:	ja     0x41b8a8
  41b849:	dec    edx
  41b84a:	mov    ecx,0x4b7606c1
  41b84f:	push   edx
  41b850:	jne    0x41b7f1
  41b852:	nop
  41b853:	push   0xffffff91
  41b855:	(bad)  
  41b856:	in     al,0x8b
  41b858:	pop    esp
  41b859:	inc    edi
  41b85a:	in     eax,0xfe
  41b85c:	jmp    0x8d8b:0x7fc40aaa
  41b863:	jo     0x41b8b6
  41b865:	call   0x3f5ad7ce
  41b86a:	xor    esi,ebx
  41b86c:	add    eax,0x4160a9e3
  41b871:	into   
  41b872:	jnp    0x41b8e7
  41b874:	push   0x6e2215c2
  41b879:	push   esp
  41b87a:	inc    esp
  41b87b:	sbb    BYTE PTR [esi],dl
  41b87d:	cmp    eax,DWORD PTR [ebp+0x6e5ff312]
  41b883:	inc    ebp
  41b884:	sbb    eax,0x54f57359
  41b889:	cmp    eax,0xf79dc27f
  41b88e:	pushf  
  41b88f:	add    eax,0x4bc94f08
  41b894:	pop    esp
  41b895:	cmp    ah,BYTE PTR [esi]
  41b897:	cmc    
  41b898:	xor    ebp,DWORD PTR [ebx]
  41b89a:	mov    BYTE PTR [edx+0x15847c49],ah
  41b8a0:	loopne 0x41b91d
  41b8a2:	sub    ch,ah
  41b8a4:	fst    QWORD PTR [edi]
  41b8a6:	out    0x9f,eax
  41b8a8:	sbb    bh,ah
  41b8aa:	loope  0x41b868
  41b8ac:	xchg   ebx,eax
  41b8ad:	int3   
  41b8ae:	mov    esp,DWORD PTR [ecx-0x36bab4cd]
  41b8b4:	inc    ebx
  41b8b5:	ret    0x8625
  41b8b8:	scas   eax,DWORD PTR es:[edi]
  41b8b9:	jnp    0x41b875
  41b8bb:	jp     0x41b91f
  41b8bd:	and    BYTE PTR [eax-0x7a6800c2],dh
  41b8c3:	add    DWORD PTR [ebx],0x279417f9
  41b8c9:	mov    ebx,DWORD PTR [ebp+0x32a19c5d]
  41b8cf:	lds    eax,FWORD PTR [esi+0x46]
  41b8d2:	div    BYTE PTR [ecx+esi*2+0x2]
  41b8d6:	loope  0x41b889
  41b8d8:	les    ecx,FWORD PTR [eax+0x26]
  41b8db:	add    ebx,DWORD PTR [edx]
  41b8dd:	adc    ah,BYTE PTR [ecx+ebp*2]
  41b8e0:	popa   
  41b8e1:	cmp    DWORD PTR [eiz*4+0x19e99e53],0x156ff51f
  41b8ec:	mov    dl,0x8b
  41b8ee:	jns    0x41b96b
  41b8f0:	pop    esp
  41b8f1:	and    eax,edx
  41b8f3:	ins    BYTE PTR es:[edi],dx
  41b8f4:	or     cl,cl
  41b8f6:	mov    ebp,0xb0f99b10
  41b8fb:	xor    BYTE PTR [ecx+edi*1+0x7012923b],dh
  41b902:	lods   eax,DWORD PTR ds:[esi]
  41b903:	and    al,0x1f
  41b905:	nop
  41b906:	pop    edi
  41b907:	push   eax
  41b908:	ja     0x41b897
  41b90a:	inc    esi
  41b90b:	add    ah,dl
  41b90d:	inc    ebp
  41b90e:	add    al,BYTE PTR [ebx-0x46]
  41b911:	mov    ebp,0x2c52c0c5
  41b916:	in     eax,0x41
  41b918:	push   esp
  41b919:	xor    BYTE PTR [eax],dl
  41b91b:	push   esp
  41b91c:	fiadd  DWORD PTR [eax+0x5977b12d]
  41b922:	daa    
  41b923:	rcr    DWORD PTR [ebp-0x7935df4a],cl
  41b929:	inc    esp
  41b92a:	mov    eax,ds:0xe5bc1ce4
  41b92f:	cli    
  41b930:	fld    st(7)
  41b932:	pop    eax
  41b933:	push   esi
  41b934:	push   ecx
  41b935:	aam    0x7d
  41b937:	icebp  
  41b938:	cmp    BYTE PTR [esi+0x19],al
  41b93b:	or     DWORD PTR [edi],esi
  41b93d:	jo     0x41b99b
  41b93f:	dec    esp
  41b940:	jno    0x41b8f2
  41b942:	and    eax,0xae902d3f
  41b947:	xchg   BYTE PTR [edx+0xb],ah
  41b94a:	aam    0xed
  41b94c:	test   BYTE PTR [ebp-0x7270c142],ah
  41b952:	pop    ebx
  41b953:	jle    0x41b9d3
  41b955:	push   esi
  41b956:	xchg   esi,eax
  41b957:	adc    edi,ecx
  41b959:	cmc    
  41b95a:	scas   al,BYTE PTR es:[edi]
  41b95b:	ret    0xfde2
  41b95e:	and    al,0x6
  41b960:	dec    ebp
  41b961:	jecxz  0x41b9ca
  41b963:	sbb    eax,0xf43694ee
  41b968:	mov    ch,0x7f
  41b96a:	jecxz  0x41b90f
  41b96c:	or     al,0x1e
  41b96e:	(bad)  
  41b96f:	cdq    
  41b970:	lock iret 
  41b972:	out    dx,al
  41b973:	les    eax,FWORD PTR [esi+0x18185936]
  41b979:	xlat   BYTE PTR ds:[ebx]
  41b97a:	stos   BYTE PTR es:[edi],al
  41b97b:	ja     0x41b96a
  41b97d:	repz pop esi
  41b97f:	sbb    bl,BYTE PTR [esi+0x45]
  41b982:	shl    DWORD PTR [esi+0x76],1
  41b985:	dec    edx
  41b986:	push   edx
  41b987:	enter  0xa51d,0x39
  41b98b:	mov    BYTE PTR [ebp-0x42e76287],bh
  41b991:	mov    ecx,0xd347df76
  41b996:	sbb    al,0xb5
  41b998:	pushf  
  41b999:	ror    bh,0x20
  41b99c:	cmp    al,0xdb
  41b99e:	or     ch,BYTE PTR [ecx]
  41b9a0:	pop    esp
  41b9a1:	jmp    0x41b986
  41b9a3:	mov    eax,ds:0xc8bb6852
  41b9a8:	jmp    0x9ad9:0x9b3bc688
  41b9af:	stc    
  41b9b0:	ret    
  41b9b1:	adc    al,0xa0
  41b9b3:	mov    edx,0x3e9500f
  41b9b8:	sbb    al,0x7
  41b9ba:	push   edi
  41b9bb:	pop    eax
  41b9bc:	ins    BYTE PTR es:[edi],dx
  41b9bd:	dec    ecx
  41b9be:	popa   
  41b9bf:	pushf  
  41b9c0:	mul    DWORD PTR [ebx]
  41b9c2:	add    esi,ecx
  41b9c4:	jo     0x41b99a
  41b9c6:	adc    cl,BYTE PTR [esi+0x21]
  41b9c9:	es add al,0x72
  41b9cc:	mov    eax,cs
  41b9ce:	or     ecx,DWORD PTR [esi+0x4bd52285]
  41b9d4:	push   ebp
  41b9d5:	adc    BYTE PTR [edi],dh
  41b9d7:	pop    edi
  41b9d8:	inc    ebp
  41b9d9:	xor    dh,BYTE PTR [ebx+0x76b4e727]
  41b9df:	inc    eax
  41b9e0:	in     al,0x8
  41b9e2:	jns    0x41ba4d
  41b9e4:	fiadd  WORD PTR [esi+ecx*2+0x24]
  41b9e8:	xor    DWORD PTR [edi+0x62ccbd3a],edx
  41b9ee:	(bad)  
  41b9ef:	iret   
  41b9f0:	xor    bl,cl
  41b9f2:	add    BYTE PTR [esi+0x7e],ch
  41b9f5:	scas   al,BYTE PTR es:[edi]
  41b9f6:	dec    edx
  41b9f7:	ss push ecx
  41b9f9:	aaa    
  41b9fa:	call   0x98ea:0x99f87384
  41ba01:	mov    esp,0xe8488ba2
  41ba06:	xlat   BYTE PTR ds:[ebx]
  41ba07:	in     eax,0x33
  41ba09:	out    0xad,al
  41ba0b:	pop    esi
  41ba0c:	mov    ecx,es
  41ba0e:	jo     0x41ba80
  41ba10:	popa   
  41ba11:	xchg   ebx,eax
  41ba12:	push   0x1b526424
  41ba17:	jmp    0x41b9ae
  41ba19:	or     al,0x24
  41ba1b:	retf   
  41ba1c:	call   0xd78ca249
  41ba21:	leave  
  41ba22:	xor    DWORD PTR [ebx+esi*2],0x94e3393f
  41ba29:	sahf   
  41ba2a:	ja     0x41ba4f
  41ba2c:	jno    0x41ba01
  41ba2e:	pop    edi
  41ba2f:	pop    esi
  41ba30:	adc    DWORD PTR ds:0xa88e4435,eax
  41ba36:	mov    esp,0xaf54c74f
  41ba3b:	jb     0x41ba0e
  41ba3d:	xor    al,0xfb
  41ba3f:	jle    0x41ba80
  41ba41:	repnz stos DWORD PTR es:[edi],eax
  41ba43:	pusha  
  41ba44:	retf   0xd0d
  41ba47:	mov    al,ds:0xfba981cb
  41ba4c:	fisub  DWORD PTR [edi-0x5f]
  41ba4f:	cmp    cl,BYTE PTR [ebx+eiz*8]
  41ba52:	in     eax,0xab
  41ba54:	sub    dh,BYTE PTR [edi+ecx*1]
  41ba57:	mov    eax,ds:0x1e0b8ec8
  41ba5c:	push   ebp
  41ba5d:	imul   esp,DWORD PTR [ecx-0x66],0xffffff96
  41ba61:	(bad)  
  41ba62:	mov    dl,BYTE PTR [ebx]
  41ba64:	add    DWORD PTR gs:[edi],ebp
  41ba67:	sub    eax,0xc78e355c
  41ba6c:	adc    bl,bh
  41ba6e:	xor    BYTE PTR [edi-0x54],dl
  41ba71:	sar    ebp,cl
  41ba73:	fdiv   st,st(4)
  41ba75:	sbb    eax,0xd4948e21
  41ba7a:	fistp  QWORD PTR [ebx+0x5f]
  41ba7d:	repnz push 0xb9c889bd
  41ba83:	(bad)  
  41ba84:	out    dx,eax
  41ba85:	pop    eax
  41ba86:	shl    esi,1
  41ba88:	adc    ch,dl
  41ba8a:	(bad)  
  41ba8d:	int    0xed
  41ba8f:	mov    edi,0xeef2f7a6
  41ba94:	mov    ecx,0xee6e4719
  41ba99:	mov    ecx,DWORD PTR [ecx+esi*4+0x367f676e]
  41baa0:	sub    edx,edi
  41baa2:	xchg   edi,eax
  41baa3:	pop    ds
  41baa4:	das    
  41baa5:	jnp    0x41ba7c
  41baa7:	xor    esp,DWORD PTR [esi-0x441ad240]
  41baad:	and    edx,DWORD PTR [edi+0x2d]
  41bab0:	retf   
  41bab1:	scas   eax,DWORD PTR es:[edi]
  41bab2:	push   eax
  41bab3:	inc    esi
  41bab4:	xor    BYTE PTR [ecx+ecx*8-0x72],0x33
  41bab9:	jmp    0x17e0:0xa0ec8c92
  41bac0:	std    
  41bac1:	mov    al,BYTE PTR [ecx-0x7e]
  41bac4:	(bad)  
  41bac5:	repnz jecxz 0x41ba9c
  41bac8:	xchg   ebp,eax
  41bac9:	out    0xb2,al
  41bacb:	dec    ecx
  41bacc:	scas   al,BYTE PTR es:[edi]
  41bacd:	ficom  DWORD PTR [edi+0x4dc0162]
  41bad3:	xchg   ecx,eax
  41bad4:	daa    
  41bad5:	call   0x1aa0:0xf6ec2c55
  41badc:	adc    edx,ebp
  41bade:	pop    ds
  41badf:	push   esi
  41bae0:	icebp  
  41bae1:	je     0x41bb23
  41bae3:	lds    esi,FWORD PTR [ecx+ebp*2+0x57]
  41bae7:	cld    
  41bae8:	dec    edx
  41bae9:	aad    0x82
  41baeb:	(bad)  
  41baec:	pop    ebx
  41baed:	fisub  WORD PTR [esi+0x25a92180]
  41baf3:	cmp    BYTE PTR [ebx+0x59],ah
  41baf6:	mov    eax,ds:0x91983425
  41bafb:	(bad)  
  41bafc:	mov    esp,0x3a1cfd94
  41bb01:	fwait
  41bb02:	mov    al,0x99
  41bb04:	fadd   st,st(5)
  41bb06:	dec    esp
  41bb07:	jbe    0x41bb64
  41bb09:	fidiv  DWORD PTR [bx]
  41bb0c:	(bad)  
  41bb0d:	(bad)  [eax-0x3ff6dce8]
  41bb13:	dec    eax
  41bb14:	add    eax,0x143777b4
  41bb19:	mov    ebx,0x17af90af
  41bb1e:	outs   dx,DWORD PTR ds:[esi]
  41bb1f:	je     0x41baba
  41bb21:	push   esp
  41bb22:	fiadd  WORD PTR [ecx-0x52da9f0c]
  41bb28:	out    0x7c,al
  41bb2a:	push   es
  41bb2b:	xor    al,0x4c
  41bb2d:	pop    es
  41bb2e:	leave  
  41bb2f:	xor    dl,BYTE PTR [eax-0x5e]
  41bb32:	lods   ax,WORD PTR ds:[esi]
  41bb34:	jbe    0x41bb89
  41bb36:	xchg   bl,al
  41bb38:	pop    edi
  41bb39:	std    
  41bb3a:	ja     0x41bb82
  41bb3c:	and    esp,DWORD PTR gs:[ebp+0x66715c9f]
  41bb43:	adc    bh,bl
  41bb45:	xor    eax,DWORD PTR [ebx+0x34]
  41bb48:	dec    eax
  41bb49:	adc    al,0x99
  41bb4b:	dec    ecx
  41bb4c:	adc    al,0x19
  41bb4e:	cmp    DWORD PTR [eax+0x0],esi
  41bb51:	or     edi,DWORD PTR [eax]
  41bb53:	sub    ecx,DWORD PTR [eax]
  41bb55:	or     eax,0x45f5c484
  41bb5a:	inc    ebp
  41bb5b:	rcr    DWORD PTR [ecx],cl
  41bb5d:	jns    0x41bb93
  41bb5f:	fwait
  41bb60:	mov    ebp,0xbe08ab9f
  41bb65:	imul   BYTE PTR [edx+eiz*2-0x4e2dfdeb]
  41bb6c:	mov    edi,0xe18dbd63
  41bb71:	xor    BYTE PTR [ebx-0x56],bh
  41bb74:	mov    ebp,0x47eb266b
  41bb79:	mov    es,esp
  41bb7b:	les    esp,FWORD PTR [ecx-0x37]
  41bb7e:	pop    edx
  41bb7f:	cli    
  41bb80:	pop    ss
  41bb81:	jp     0x41bb7a
  41bb83:	lods   eax,DWORD PTR ds:[esi]
  41bb84:	xchg   esp,eax
  41bb85:	in     eax,dx
  41bb86:	outs   dx,BYTE PTR ds:[esi]
  41bb87:	loopne 0x41bb25
  41bb89:	push   edx
  41bb8a:	push   esp
  41bb8b:	dec    edx
  41bb8c:	dec    ebp
  41bb8d:	ja     0x41bb1d
  41bb8f:	dec    ebp
  41bb90:	rol    BYTE PTR [ebx-0x27b4e348],0xb6
  41bb97:	ins    BYTE PTR es:[edi],dx
  41bb98:	test   esi,esi
  41bb9a:	cdq    
  41bb9b:	mov    DWORD PTR [ebp-0x71],ecx
  41bb9e:	mov    ch,0xec
  41bba0:	cli    
  41bba1:	cmp    DWORD PTR [eax],esp
  41bba3:	lahf   
  41bba4:	jg     0x41bbec
  41bba6:	sub    al,0x81
  41bba8:	xchg   esi,eax
  41bba9:	inc    esi
  41bbaa:	and    eax,0x8055d392
  41bbaf:	push   ds
  41bbb0:	fcom   DWORD PTR [ecx]
  41bbb2:	les    edi,FWORD PTR [ebp+0x44ca0ee8]
  41bbb8:	ds js  0x41bc18
  41bbbb:	xor    al,0x2b
  41bbbe:	pop    ds
  41bbbf:	inc    ecx
  41bbc0:	imul   esi,DWORD PTR [ecx+0xd],0x1a7303e3
  41bbc7:	pop    ds
  41bbc8:	dec    edi
  41bbc9:	pop    ebp
  41bbca:	mov    edx,0xbd3d853
  41bbcf:	xacquire xchg DWORD PTR [edi-0x37445c59],ecx
  41bbd6:	adc    al,0x96
  41bbd8:	and    ch,ah
  41bbda:	mov    dh,0xe5
  41bbdc:	out    dx,eax
  41bbdd:	out    0xce,al
  41bbdf:	jle    0x41bc39
  41bbe1:	call   FWORD PTR [edi+0x25]
  41bbe4:	dec    edx
  41bbe5:	pop    ebx
  41bbe6:	or     dl,BYTE PTR [ecx+0x7d]
  41bbe9:	pop    es
  41bbea:	out    0xb4,al
  41bbec:	test   al,0x7b
  41bbee:	jge    0x41bc07
  41bbf0:	test   al,ah
  41bbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf3:	aad    0xbf
  41bbf5:	shl    ebx,1
  41bbf7:	sbb    al,0xc1
  41bbf9:	les    edx,FWORD PTR [esi+0xb23ed58]
  41bbff:	or     al,0x2e
  41bc02:	ds push ds
  41bc04:	call   0xa3c:0xa928de01
  41bc0b:	and    cl,BYTE PTR [edx+0x7dbb5a57]
  41bc11:	mov    ds:0xbc3d6b34,al
  41bc16:	das    
  41bc17:	addr16 inc ebp
  41bc19:	popf   
  41bc1a:	and    bh,ah
  41bc1c:	cld    
  41bc1d:	and    eax,DWORD PTR [ebp-0x241abc35]
  41bc23:	call   0x899fe26f
  41bc28:	pusha  
  41bc29:	jmp    0x9956b7f8
  41bc2e:	mov    eax,0xbe397d82
  41bc33:	fist   WORD PTR [edi+0x26]
  41bc36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc37:	xchg   ebx,eax
  41bc38:	or     DWORD PTR [edi-0x3977f838],esi
  41bc3e:	push   ebp
  41bc3f:	add    al,0xcf
  41bc41:	add    DWORD PTR [esi+0x440e0b1b],ecx
  41bc47:	cmp    eax,0x65467e02
  41bc4c:	scas   eax,DWORD PTR es:[edi]
  41bc4d:	je     0x41bcbc
  41bc4f:	pop    ebx
  41bc50:	out    0xf0,al
  41bc52:	jmp    0x41bc8e
  41bc54:	xchg   edx,eax
  41bc55:	push   eax
  41bc56:	not    DWORD PTR [ebx-0xd50a967]
  41bc5c:	and    eax,0x54cf55db
  41bc61:	test   BYTE PTR [ecx-0x26],0xa5
  41bc65:	shr    DWORD PTR [esi-0x54c2a7d5],cl
  41bc6b:	xor    DWORD PTR [esp+ebp*2-0x63],esp
  41bc6f:	jmp    0x41bc78
  41bc71:	xor    DWORD PTR [eax-0x7d32bdba],ebx
  41bc77:	pop    ecx
  41bc78:	test   eax,0x1105ac73
  41bc7d:	lea    esi,[esi+ebp*8+0x90a5538]
  41bc84:	(bad)  
  41bc85:	xchg   esi,eax
  41bc86:	sbb    al,0x6
  41bc88:	and    bl,BYTE PTR [eax+0x4e7d0c48]
  41bc8e:	(bad)  
  41bc8f:	aad    0x1d
  41bc91:	mov    ebx,0xf6ae72be
  41bc96:	xor    eax,0x1765ce6a
  41bc9b:	es ja  0x41bc27
  41bc9e:	and    eax,0xd638eed
  41bca3:	icebp  
  41bca4:	cwde   
  41bca5:	ds mov esp,0x83fdbad2
  41bcab:	add    edi,DWORD PTR [edi+0x2b8cd5bf]
  41bcb1:	cmp    eax,DWORD PTR [ecx+0x25]
  41bcb4:	sub    edx,ebx
  41bcb6:	ror    BYTE PTR [esi-0xe],cl
  41bcb9:	adc    edx,DWORD PTR [ebx]
  41bcbb:	lods   eax,DWORD PTR ds:[esi]
  41bcbc:	into   
  41bcbd:	fcom   QWORD PTR [edx-0x7f]
  41bcc0:	out    0x5c,al
  41bcc2:	sub    eax,0x2b84289c
  41bcc7:	xchg   ecx,eax
  41bcc8:	shl    BYTE PTR [esi],cl
  41bcca:	add    al,0xda
  41bccc:	push   eax
  41bccd:	jnp    0x41bd22
  41bccf:	add    al,0xaf
  41bcd1:	pop    edx
  41bcd2:	mov    edx,0xfa9d0bac
  41bcd7:	or     ecx,0x9b56bbdf
  41bcdd:	adc    DWORD PTR [eax+0x265954b8],edi
  41bce3:	cmp    al,0x22
  41bce5:	in     al,dx
  41bce6:	xor    cl,BYTE PTR [edi+0x13]
  41bce9:	mov    WORD PTR [edx-0x3633f428],cs
  41bcef:	inc    esp
  41bcf0:	fistp  QWORD PTR [ebp+0x798de68a]
  41bcf6:	leave  
  41bcf7:	mov    eax,ds:0x4fc66fdc
  41bcfc:	sub    cl,BYTE PTR [ebp+0x62]
  41bcff:	lds    edi,FWORD PTR [bx-0x52]
  41bd03:	(bad)  
  41bd04:	pop    ebx
  41bd05:	test   eax,0x7f1282d7
  41bd0a:	cmp    dh,BYTE PTR [eax+0x1ad9aa7c]
  41bd10:	jg     0x41bd79
  41bd12:	and    al,0x63
  41bd14:	pop    edi
  41bd15:	dec    ecx
  41bd16:	mov    bl,ah
  41bd18:	ins    BYTE PTR es:[edi],dx
  41bd19:	ds je  0x41bcc5
  41bd1c:	sub    BYTE PTR [esi],dl
  41bd1e:	sub    al,0xef
  41bd20:	jnp    0x41bd63
  41bd22:	sub    eax,0x5204e895
  41bd27:	test   al,0xca
  41bd29:	or     DWORD PTR [eax],0x8fcbca4a
  41bd2f:	fdivr  st,st(7)
  41bd31:	mov    eax,ds:0xdb7db0b9
  41bd36:	xor    eax,0xfd861f07
  41bd3b:	inc    ebx
  41bd3c:	mov    al,0x5
  41bd3e:	ss aam 0x39
  41bd41:	sub    DWORD PTR [eax],eax
  41bd43:	ror    dh,0x3c
  41bd46:	call   0x1357:0x7cf96541
  41bd4d:	loope  0x41bcf2
  41bd4f:	xor    al,0xd3
  41bd51:	xor    esi,ecx
  41bd53:	rol    BYTE PTR [edx-0x22],1
  41bd56:	mov    ebx,0xb1852bde
  41bd5b:	js     0x41bcf3
  41bd5d:	mov    ds:0x8ea19d1e,al
  41bd62:	mov    ecx,0xd1bd848d
  41bd67:	stos   BYTE PTR es:[edi],al
  41bd68:	pop    ebp
  41bd69:	ud0    edi,DWORD PTR [eax-0x77]
  41bd6d:	loope  0x41bd55
  41bd6f:	out    dx,eax
  41bd70:	xchg   edi,eax
  41bd71:	xlat   BYTE PTR ds:[ebx]
  41bd72:	adc    al,0x2f
  41bd74:	fcmovnu st,st(1)
  41bd76:	out    dx,eax
  41bd77:	imul   eax,DWORD PTR [edi+edi*1],0x1
  41bd7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7c:	xor    bl,BYTE PTR [ebx+ecx*4+0x3137193]
  41bd83:	pop    ecx
  41bd84:	in     eax,0xf1
  41bd86:	push   DWORD PTR [ebx]
  41bd88:	into   
  41bd89:	adc    al,0x44
  41bd8b:	sahf   
  41bd8c:	adc    DWORD PTR [edi+0x63047a21],ebp
  41bd92:	imul   esi
  41bd94:	mov    edx,0xf3bcf7d
  41bd99:	cmp    DWORD PTR ds:0x861a7743,eax
  41bd9f:	pop    ss
  41bda0:	mov    al,0xd3
  41bda2:	xchg   esp,eax
  41bda3:	rcr    DWORD PTR gs:[ebp-0x21],0xf0
  41bda8:	popa   
  41bda9:	mov    eax,ds:0x48466d0d
  41bdae:	pop    edx
  41bdaf:	aas    
  41bdb0:	or     BYTE PTR [ebp+0x1c2d9d25],bh
  41bdb6:	mov    ds:0xec7aedd,eax
  41bdbb:	xlat   BYTE PTR ds:[ebx]
  41bdbc:	and    eax,0x18e93361
  41bdc1:	imul   ecx,DWORD PTR [edi-0x1d4b090e],0xffffffa0
  41bdc8:	loopne 0x41be30
  41bdca:	clc    
  41bdcb:	cwde   
  41bdcc:	dec    ebx
  41bdcd:	test   DWORD PTR [ebx+ecx*8],edi
  41bdd0:	push   es
  41bdd1:	sub    eax,ebp
  41bdd3:	adc    eax,0xf156b313
  41bdd8:	hlt    
  41bdd9:	dec    edi
  41bdda:	loope  0x41be3b
  41bddc:	mov    eax,0xff26e75a
  41bde1:	shr    DWORD PTR [edi+0x499fb2e9],1
  41bde7:	push   ebp
  41bde8:	cdq    
  41bde9:	test   DWORD PTR [edx],eax
  41bdeb:	lea    eax,[edi]
  41bded:	adc    BYTE PTR [edi+0x51e168b4],0x60
  41bdf4:	sbb    ah,BYTE PTR [eax+0x56]
  41bdf7:	jg     0x41be1b
  41bdf9:	cmp    dh,bl
  41bdfb:	sbb    esi,DWORD PTR [ebx+0x1dba0e5b]
  41be01:	xor    ebx,DWORD PTR [edx+ecx*1-0x1eecfc16]
  41be08:	fisttp QWORD PTR [edx]
  41be0a:	jnp    0x41bd9b
  41be0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be0d:	es dec eax
  41be0f:	ret    0x51bc
  41be12:	and    DWORD PTR [ecx],ecx
  41be14:	shl    DWORD PTR [edi],0x8b
  41be17:	or     ecx,0x9c208979
  41be1d:	jecxz  0x41be05
  41be1f:	xor    eax,0xb35df879
  41be24:	fld    DWORD PTR [edi-0x6b160e39]
  41be2a:	push   edi
  41be2b:	jle    0x41be5a
  41be2d:	lds    ebp,FWORD PTR [ecx-0x28773de5]
  41be33:	pop    esp
  41be34:	(bad)  
  41be35:	mov    al,0xf9
  41be37:	lahf   
  41be38:	cli    
  41be39:	cli    
  41be3a:	jge    0x41be4b
  41be3c:	daa    
  41be3d:	or     eax,0x4ccb46f0
  41be42:	pop    ds
  41be43:	dec    edi
  41be44:	sbb    dl,BYTE PTR [edx+eiz*1+0x15]
  41be48:	inc    ebp
  41be49:	retf   
  41be4a:	mov    ecx,0x49d94c5
  41be4f:	sub    BYTE PTR [ebx-0x654047d8],0x15
  41be56:	test   edi,ebp
  41be58:	mov    edx,0xa76a7145
  41be5d:	into   
  41be5e:	inc    edx
  41be5f:	sbb    ebx,esp
  41be61:	mov    edi,DWORD PTR [esi-0x9b089f3]
  41be67:	outs   dx,BYTE PTR ds:[esi]
  41be68:	sti    
  41be69:	fldenv [edx+eax*1]
  41be6c:	xchg   ebx,eax
  41be6d:	mov    ds:0x29b031e,al
  41be72:	test   al,0xdd
  41be74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be75:	sbb    ebx,0x82735b8a
  41be7b:	adc    esp,DWORD PTR [ecx]
  41be7d:	push   0xc
  41be7f:	pop    ss
  41be80:	inc    ebp
  41be81:	jl     0x41be3e
  41be83:	push   edi
  41be84:	sbb    ah,BYTE PTR [edx-0x6c5a6a1c]
  41be8a:	ja     0x41be14
  41be8c:	scas   al,BYTE PTR es:[edi]
  41be8d:	dec    BYTE PTR [eax+ecx*2-0x4acc6ea0]
  41be94:	ror    DWORD PTR [edx],1
  41be96:	sbb    bh,BYTE PTR [esi+0xf]
  41be99:	jae    0x41bea7
  41be9b:	sti    
  41be9c:	and    BYTE PTR [edi+0x49],bh
  41be9f:	jp     0x41beb4
  41bea1:	mov    bl,0xa8
  41bea3:	inc    eax
  41bea4:	js     0x41be3f
  41bea6:	adc    cl,cl
  41bea8:	(bad)  
  41beaa:	fisttp DWORD PTR [ecx+0x7d]
  41bead:	hlt    
  41beae:	jo     0x41bebd
  41beb0:	mov    DWORD PTR [ebx],edi
  41beb2:	test   al,0x4a
  41beb4:	push   esi
  41beb5:	shl    DWORD PTR [edi-0x21],cl
  41beb8:	stc    
  41beb9:	js     0x41bf0a
  41bebb:	dec    ebx
  41bebc:	imul   ebp,DWORD PTR [eax+0xe8b44ce],0xe0ba8c9d
  41bec6:	sbb    bl,BYTE PTR [ebx]
  41bec8:	shl    DWORD PTR [ebp+edi*1-0x80],cl
  41becc:	push   0xffffffac
  41bece:	fld    DWORD PTR [edx+0x1a2efbec]
  41bed4:	fild   DWORD PTR ds:0x433b77cf
  41beda:	mov    cl,0x3e
  41bedc:	and    al,0x7
  41bede:	xchg   edi,eax
  41bedf:	ffree  st(0)
  41bee1:	sub    WORD PTR [esi-0x3bd7dd88],bp
  41bee8:	mov    bh,0xfe
  41beea:	ret    0x1a4e
  41beed:	call   esp
  41beef:	mov    esi,0xd4f4babc
  41bef4:	xor    BYTE PTR [edi-0x39],0xbc
  41bef8:	sbb    al,0x8
  41befa:	mov    ds:0x62eed8b8,al
  41beff:	and    DWORD PTR [edi+0xa],eax
  41bf02:	mov    ds:0x4f254e4b,eax
  41bf07:	or     DWORD PTR [esi+0x48b0b6a6],edi
  41bf0d:	mov    dl,cl
  41bf0f:	mov    ch,0x59
  41bf11:	call   0x847ed34e
  41bf16:	adc    al,BYTE PTR [esi+0x6a0c7fe3]
  41bf1c:	lea    ebp,[esi+0x3858ed40]
  41bf22:	int    0xf5
  41bf24:	inc    esi
  41bf25:	inc    ebx
  41bf26:	and    BYTE PTR [ebp+0x59],dl
  41bf29:	xor    bl,BYTE PTR [eax-0x3979e89c]
  41bf2f:	or     DWORD PTR [edi-0x6d],eax
  41bf32:	mov    ah,0xd9
  41bf34:	outs   dx,DWORD PTR ds:[esi]
  41bf35:	mov    WORD PTR [eax],gs
  41bf37:	cli    
  41bf38:	out    dx,al
  41bf39:	minps  xmm3,XMMWORD PTR [edi+0x12]
  41bf3d:	adc    bl,BYTE PTR [edi+0x4]
  41bf40:	dec    al
  41bf42:	call   0xffcd:0xae112c9a
  41bf49:	or     eax,0x25175047
  41bf4e:	(bad)  
  41bf4f:	hlt    
  41bf50:	outs   dx,DWORD PTR ds:[esi]
  41bf51:	popa   
  41bf52:	pop    esp
  41bf53:	mov    ebx,0x3d0bb1d0
  41bf58:	adc    al,0x7c
  41bf5a:	dec    ebx
  41bf5b:	test   BYTE PTR [ecx-0x4a],bh
  41bf5e:	jno    0x41bf6b
  41bf60:	aaa    
  41bf61:	cmp    al,0xd
  41bf63:	outs   dx,DWORD PTR ds:[esi]
  41bf64:	das    
  41bf65:	push   ecx
  41bf66:	jmp    DWORD PTR [eax+0x4f]
  41bf69:	ins    BYTE PTR es:[edi],dx
  41bf6a:	pop    edi
  41bf6b:	cmp    eax,DWORD PTR [ebx+0x45b9188f]
  41bf71:	pextrw ebx,(bad),0xc5
  41bf73:	sbb    eax,0x5d6cf2fa
  41bf78:	shl    DWORD PTR [edi],1
  41bf7a:	lods   al,BYTE PTR ds:[esi]
  41bf7b:	push   esi
  41bf7c:	sub    bl,bh
  41bf7e:	push   ds
  41bf7f:	push   edi
  41bf80:	in     al,dx
  41bf81:	jae    0x41bf9b
  41bf83:	cli    
  41bf84:	and    eax,0x91989efa
  41bf89:	mov    eax,ds:0x3adef4c5
  41bf8e:	adc    BYTE PTR [edx],bh
  41bf90:	in     al,0x8b
  41bf92:	pop    es
  41bf93:	jno    0x41bfb8
  41bf95:	pop    esi
  41bf96:	sub    DWORD PTR [edx+0x4a],ecx
  41bf99:	cmp    eax,0xbdc9b245
  41bf9e:	jmp    0x9b84:0x2a85a3e9
  41bfa5:	mov    ecx,0x11e4155f
  41bfaa:	inc    edi
  41bfab:	cld    
  41bfac:	push   ds
  41bfad:	adc    ecx,DWORD PTR [esi]
  41bfaf:	jbe    0x41bf4e
  41bfb1:	dec    esp
  41bfb2:	adc    DWORD PTR [edx-0x29],edx
  41bfb5:	into   
  41bfb6:	pop    ebx
  41bfb7:	fcom   QWORD PTR [eax+0x40]
  41bfba:	xor    bl,BYTE PTR [edi+0x3ce6a9cd]
  41bfc0:	and    ecx,DWORD PTR [ebx+0x35185565]
  41bfc6:	jecxz  0x41c029
  41bfc8:	inc    edx
  41bfc9:	jo     0x41bf90
  41bfcb:	cmp    eax,0xaff0546b
  41bfd0:	fisub  DWORD PTR [ebp+0x1a]
  41bfd3:	das    
  41bfd4:	add    eax,0xb4eb62ba
  41bfd9:	mov    esi,0xbc925b61
  41bfde:	adc    al,0xa2
  41bfe0:	dec    esp
  41bfe1:	ret    
  41bfe2:	cmp    eax,0x30233cde
  41bfe7:	test   al,0x1
  41bfe9:	pop    es
  41bfea:	icebp  
  41bfeb:	pop    ebx
  41bfec:	scas   al,BYTE PTR es:[edi]
  41bfed:	xor    dl,dl
  41bfef:	xchg   cl,cl
  41bff1:	sub    DWORD PTR [edx+0x3f69e3ac],ebx
  41bff7:	cs movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41bffa:	out    dx,al
  41bffb:	push   ecx
  41bffc:	retf   0x5a1a
  41bfff:	clc    
  41c000:	sub    edx,0xffffffc5
  41c003:	rcl    BYTE PTR [eax+0x5962fba8],1
  41c009:	rcl    BYTE PTR [ebx],cl
  41c00b:	jns    0x41c014
  41c00d:	scas   al,BYTE PTR es:[edi]
  41c00e:	mov    DWORD PTR [edi],ebx
  41c010:	and    BYTE PTR [esi-0x5cccbfe],0xe2
  41c017:	mov    DWORD PTR [edx],0xe68fb418
  41c01d:	and    esp,DWORD PTR [edi]
  41c01f:	mov    al,0x1
  41c021:	pop    esi
  41c022:	jns    0x41bff8
  41c024:	out    dx,eax
  41c025:	adc    esi,edi
  41c027:	mov    dh,0x29
  41c029:	into   
  41c02a:	sub    bl,BYTE PTR [ebp-0x50f25741]
  41c030:	xor    ebp,DWORD PTR [eax-0x6fc8a709]
  41c036:	je     0x41c09d
  41c038:	dec    ebp
  41c039:	mov    dl,0xa0
  41c03b:	cmc    
  41c03c:	cmp    eax,0x2423d701
  41c041:	xchg   esp,eax
  41c042:	lods   al,BYTE PTR ds:[esi]
  41c043:	jp     0x41c07b
  41c045:	push   edx
  41c046:	cwde   
  41c047:	fstp   DWORD PTR cs:[ebx-0x2]
  41c04b:	push   0x82c80cb2
  41c050:	mov    esp,0x2d1f1ab8
  41c055:	in     eax,dx
  41c056:	stos   BYTE PTR es:[edi],al
  41c057:	js     0x41bfdc
  41c059:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41c05b:	adc    cl,BYTE PTR [edx+0x1c]
  41c05e:	enter  0x9b7a,0xf5
  41c062:	ja     0x41c08f
  41c064:	pop    esi
  41c065:	or     DWORD PTR [edi-0x780bcd2f],ebx
  41c06b:	xor    DWORD PTR [ebp+0x7f4cce3e],0x62
  41c072:	push   ebx
  41c073:	push   0xffffffd2
  41c075:	cli    
  41c076:	leave  
  41c077:	or     bl,BYTE PTR [ecx-0x1e]
  41c07a:	jbe    0x41c023
  41c07c:	popa   
  41c07d:	and    BYTE PTR [ecx+eax*2],al
  41c080:	pop    eax
  41c081:	or     eax,0x239dfe09
  41c086:	push   ds
  41c087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c088:	jnp    0x41c050
  41c08a:	sub    edx,DWORD PTR [bx+di]
  41c08d:	rcr    DWORD PTR [ebx+edx*2],1
  41c090:	(bad)  
  41c091:	cmp    al,0x4a
  41c093:	iret   
  41c094:	imul   ecx,DWORD PTR [ecx-0x3c],0xffffffd0
  41c098:	rcr    DWORD PTR ss:[edx],1
  41c09b:	fs cli 
  41c09d:	add    eax,0x7e792254
  41c0a2:	test   al,0xb5
  41c0a4:	push   edi
  41c0a5:	lahf   
  41c0a6:	pop    es
  41c0a7:	xor    eax,0xdf29645b
  41c0ac:	int3   
  41c0ad:	inc    edi
  41c0ae:	cmp    DWORD PTR ss:[edx+0x1bb7651e],ecx
  41c0b5:	iret   
  41c0b6:	mov    esi,0x48ea427
  41c0bb:	ret    
  41c0bc:	adc    al,0x8a
  41c0be:	lds    ecx,FWORD PTR [edi]
  41c0c0:	sbb    ebp,DWORD PTR [ecx]
  41c0c2:	ret    0x7dde
  41c0c5:	in     al,0x45
  41c0c7:	cli    
  41c0c8:	xchg   ebp,eax
  41c0c9:	sbb    al,0x86
  41c0cb:	test   BYTE PTR [ebp-0x20],0x65
  41c0cf:	xchg   ebx,eax
  41c0d0:	push   edx
  41c0d1:	mov    WORD PTR [edx+0xb],?
  41c0d4:	sbb    edi,eax
  41c0d6:	xchg   ecx,eax
  41c0d7:	xchg   esi,eax
  41c0d8:	lods   eax,DWORD PTR ds:[esi]
  41c0d9:	inc    eax
  41c0da:	cli    
  41c0db:	jmp    0x8b75:0x4c7ced6a
  41c0e2:	ror    DWORD PTR [ecx+0x15bc3424],0x37
  41c0e9:	and    al,0x3d
  41c0eb:	xlat   BYTE PTR ds:[ebx]
  41c0ec:	fs adc al,0x9c
  41c0ef:	fs xchg ecx,eax
  41c0f1:	or     edx,DWORD PTR [ecx]
  41c0f3:	ins    DWORD PTR es:[edi],dx
  41c0f4:	outs   dx,DWORD PTR ds:[esi]
  41c0f5:	inc    eax
  41c0f6:	fwait
  41c0f7:	inc    ecx
  41c0f8:	out    0x5,eax
  41c0fa:	(bad)  
  41c0fb:	mov    ds:0xdcf6f2d6,eax
  41c100:	sbb    al,0xd4
  41c102:	push   edx
  41c103:	loope  0x41c101
  41c105:	sub    ch,BYTE PTR [edi-0x5f52390e]
  41c10b:	in     eax,0x7
  41c10d:	outs   dx,BYTE PTR ds:[esi]
  41c10e:	pop    ebx
  41c10f:	or     edx,esi
  41c111:	fnstsw WORD PTR [edi+0x1bb339a1]
  41c117:	in     eax,0xe0
  41c119:	jb     0x41c10a
  41c11b:	inc    eax
  41c11c:	lods   al,BYTE PTR ds:[esi]
  41c11d:	sbb    al,0x2a
  41c11f:	inc    eax
  41c120:	jae    0x41c13e
  41c122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c123:	adc    eax,0x185e2d52
  41c128:	cwde   
  41c129:	cmp    BYTE PTR [ebx+0x51c5e3e2],ah
  41c12f:	pop    esi
  41c130:	xchg   edi,eax
  41c131:	popa   
  41c132:	dec    esi
  41c133:	ret    0x5ccb
  41c136:	sub    esp,DWORD PTR fs:[ebx-0x4]
  41c13a:	mov    esi,0x920cdc47
  41c13f:	fwait
  41c140:	mov    al,BYTE PTR [ebp-0x3]
  41c143:	fyl2xp1 
  41c145:	daa    
  41c146:	(bad)  
  41c147:	mov    ebx,0x34ff5c52
  41c14c:	pop    ebp
  41c14d:	inc    ebp
  41c14e:	sub    bl,0x68
  41c151:	mov    ah,0x1
  41c153:	loopne 0x41c155
  41c155:	or     BYTE PTR [edx+0x5d],al
  41c158:	mov    DWORD PTR [ebx-0xa],edi
  41c15b:	and    ch,0x36
  41c15e:	dec    ebx
  41c15f:	fdiv   st,st(4)
  41c161:	xchg   esi,eax
  41c162:	pop    edx
  41c163:	cmp    al,0xe2
  41c165:	test   al,0xd0
  41c167:	loopne 0x41c12a
  41c169:	mov    edi,0x8da9c84a
  41c16e:	das    
  41c16f:	(bad)  
  41c171:	mov    dl,0xa6
  41c173:	xchg   edx,eax
  41c174:	add    BYTE PTR [eax+0x15],0x9b
  41c178:	cli    
  41c179:	sbb    eax,0xdf4f2b8e
  41c17e:	call   0xd309d36
  41c183:	sti    
  41c184:	xchg   ebx,eax
  41c185:	mov    eax,ds:0xc9d4f3c
  41c18a:	inc    eax
  41c18b:	(bad)  
  41c18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c18d:	xchg   ecx,eax
  41c18e:	icebp  
  41c18f:	push   ecx
  41c190:	(bad)  
  41c191:	gs and eax,0xceb8aebd
  41c197:	cmp    BYTE PTR [ebx+0x1e],bh
  41c19a:	fidiv  DWORD PTR [eax+0x44]
  41c19d:	sbb    DWORD PTR [esp+ecx*1+0x31],0xffffffc4
  41c1a2:	ja     0x41c1be
  41c1a4:	jne    0x41c20c
  41c1a6:	dec    edi
  41c1a7:	adc    BYTE PTR [esi+0x5910ae5e],dl
  41c1ad:	cmp    BYTE PTR [ebx+0x66],cl
  41c1b0:	(bad)  fs:[ebx]
  41c1b3:	mov    ch,0x99
  41c1b5:	ins    DWORD PTR es:[edi],dx
  41c1b6:	pop    ss
  41c1b7:	and    al,0xfb
  41c1b9:	popa   
  41c1ba:	retf   
  41c1bb:	test   DWORD PTR [edx+0x47cb32d1],ebp
  41c1c1:	mov    eax,ss:0x113911c0
  41c1c7:	jg     0x41c21e
  41c1c9:	mov    eax,0x56ec8e89
  41c1ce:	cli    
  41c1cf:	jb     0x41c1c1
  41c1d1:	sbb    eax,0x2f2daf9b
  41c1d6:	call   eax
  41c1d8:	mov    bl,0xba
  41c1da:	cmp    bh,BYTE PTR [edx+ebx*8]
  41c1dd:	xchg   esp,eax
  41c1de:	xor    DWORD PTR [edi-0x2b560322],0x5e
  41c1e5:	push   ss
  41c1e6:	das    
  41c1e7:	aaa    
  41c1e8:	jmp    0x11d7ae91
  41c1ed:	(bad)  
  41c1ef:	mov    dl,ah
  41c1f1:	mov    ds:0xa71b8ed6,al
  41c1f6:	jge    0x41c230
  41c1f8:	(bad)  
  41c1f9:	cli    
  41c1fa:	adc    BYTE PTR [ebx-0x5098dcfc],ch
  41c200:	aaa    
  41c201:	cmovge edx,DWORD PTR ds:0x62db0fb6
  41c208:	inc    esp
  41c209:	pop    ebx
  41c20a:	daa    
  41c20b:	jle    0x41c1de
  41c20d:	ins    BYTE PTR es:[edi],dx
  41c20e:	mulps  xmm5,XMMWORD PTR [edx-0x60]
  41c212:	pusha  
  41c213:	inc    edx
  41c214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c215:	mov    esi,0xfaa9a950
  41c21a:	sub    ebx,esi
  41c21c:	jno    0x41c251
  41c21e:	fidiv  WORD PTR [ecx+edx*1+0x42]
  41c222:	push   esp
  41c223:	dec    ebx
  41c224:	into   
  41c225:	cmp    DWORD PTR [ebp-0x73],ecx
  41c228:	iret   
  41c229:	neg    DWORD PTR [ebx+0x3cda50ce]
  41c22f:	sub    ch,al
  41c231:	pop    ebx
  41c232:	pop    es
  41c233:	or     eax,0x83abbb93
  41c238:	xor    eax,0x4ac41fd1
  41c23d:	stos   DWORD PTR es:[edi],eax
  41c23e:	mov    fs,WORD PTR [ecx+0x19]
  41c241:	jecxz  0x41c20f
  41c243:	mov    bh,0x8f
  41c245:	loopne 0x41c29b
  41c247:	sub    eax,0x66d88f94
  41c24c:	dec    esi
  41c24d:	lahf   
  41c24e:	inc    eax
  41c24f:	iret   
  41c250:	jp     0x41c1e4
  41c252:	dec    ebp
  41c253:	adc    BYTE PTR [edi+0x6d],cl
  41c256:	jg     0x41c263
  41c258:	ins    DWORD PTR es:[edi],dx
  41c259:	mov    esp,0x36fe0b19
  41c25e:	mov    esp,0xa51de26d
  41c263:	test   dl,cl
  41c265:	sub    esp,DWORD PTR [ecx-0x19a42fdf]
  41c26b:	imul   esp,DWORD PTR ds:0xc3ed00b0,0xffffffc3
  41c272:	adc    DWORD PTR [esi-0x24],edi
  41c275:	lock retf 
  41c277:	sub    BYTE PTR [esi-0x1f],bh
  41c27a:	imul   ebp,eax,0x39fe350c
  41c280:	pop    ss
  41c281:	outs   dx,BYTE PTR ds:[esi]
  41c282:	fs ret 0x4e64
  41c286:	push   esi
  41c287:	jmp    0x71b9e9c6
  41c28c:	mov    ds:0x7954d4c8,al
  41c291:	stc    
  41c292:	daa    
  41c293:	loope  0x41c222
  41c295:	sbb    dl,al
  41c297:	stc    
  41c298:	sub    dh,BYTE PTR [eax+ecx*2+0x1a]
  41c29c:	mov    esp,0xb26ebd6
  41c2a1:	ins    DWORD PTR es:[edi],dx
  41c2a2:	int    0x1a
  41c2a4:	adc    al,0xb
  41c2a6:	add    ah,BYTE PTR [edx-0x77ed8217]
  41c2ac:	loope  0x41c239
  41c2ae:	fld    DWORD PTR [ebx-0x63]
  41c2b1:	push   esp
  41c2b2:	mov    al,ds:0x9502fc4
  41c2b7:	mov    ah,0x5a
  41c2b9:	outs   dx,DWORD PTR ds:[esi]
  41c2ba:	ror    BYTE PTR [edi+0x10bb92a3],0x72
  41c2c1:	es mov edx,0x9e60bec3
  41c2c7:	mov    al,0x1c
  41c2c9:	or     eax,0xd6cb3835
  41c2ce:	(bad)  
  41c2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2d1:	(bad)  
  41c2d3:	popa   
  41c2d4:	sbb    al,0x53
  41c2d6:	xor    al,0x33
  41c2d8:	sbb    esi,DWORD PTR [ebp-0x3b201849]
  41c2de:	xchg   BYTE PTR [edi+0x28],dh
  41c2e1:	adc    DWORD PTR [eax+0x37],0x6bbc1d75
  41c2e8:	sub    al,0x15
  41c2ea:	or     DWORD PTR [ebx-0x33],ebx
  41c2ed:	adc    eax,0xd7530ec5
  41c2f2:	pop    edi
  41c2f3:	jo     0x41c36b
  41c2f5:	dec    DWORD PTR [ebx-0x73]
  41c2f8:	mov    BYTE PTR ds:0xf054f21b,ah
  41c2fe:	sub    DWORD PTR [edx-0x6b921db9],eax
  41c304:	(bad)  
  41c305:	xchg   BYTE PTR [edi],dh
  41c307:	xchg   edi,eax
  41c308:	and    DWORD PTR [eax+0x686e9440],edi
  41c30e:	fist   WORD PTR [edi-0x36]
  41c311:	pop    edi
  41c312:	push   ebp
  41c313:	adc    ch,BYTE PTR [ebp+0x4a]
  41c316:	adc    ah,bh
  41c318:	mov    eax,ds:0xe5196bc9
  41c31d:	push   0xd628771c
  41c322:	iret   
  41c323:	sub    bh,BYTE PTR [edi]
  41c325:	pop    esi
  41c326:	push   eax
  41c327:	out    dx,eax
  41c328:	push   ss
  41c329:	sbb    DWORD PTR [esi-0x39],0xc5a9836a
  41c330:	je     0x41c381
  41c332:	and    BYTE PTR [ebp+edx*4-0x1f739c6d],dl
  41c339:	int3   
  41c33a:	and    BYTE PTR [eax],ah
  41c33c:	in     eax,0x7e
  41c33e:	mov    ch,0x6d
  41c340:	xchg   BYTE PTR [edx+ebx*4],al
  41c343:	sahf   
  41c344:	btr    DWORD PTR [esi-0x9],edi
  41c348:	fneni(8087 only) 
  41c34a:	or     eax,0x92b1692e
  41c34f:	mov    ah,BYTE PTR [ebp+0x62838e0]
  41c355:	or     bl,BYTE PTR [ebx+0x63c05d8f]
  41c35b:	loop   0x41c2e7
  41c35d:	pop    esi
  41c35e:	cld    
  41c35f:	pop    esp
  41c360:	pop    ebx
  41c361:	inc    edx
  41c362:	sqrtps xmm0,XMMWORD PTR [ebx+0x4b966525]
  41c369:	ds adc dl,ah
  41c36c:	cs call 0x23de:0xc35efb15
  41c374:	or     al,0xec
  41c376:	jnp    0x41c395
  41c378:	jl     0x41c39c
  41c37a:	jge    0x41c310
  41c37c:	ja     0x41c308
  41c37e:	inc    ebx
  41c37f:	add    ch,0xef
  41c382:	std    
  41c383:	xlat   BYTE PTR ds:[ebx]
  41c384:	jb     0x41c35b
  41c386:	lods   eax,DWORD PTR ds:[esi]
  41c387:	shl    DWORD PTR [ebp+0x2c],cl
  41c38a:	cdq    
  41c38b:	ss cwde 
  41c38d:	dec    esi
  41c38e:	jbe    0x41c37e
  41c390:	out    dx,eax
  41c391:	mov    al,0x55
  41c393:	clc    
  41c394:	mov    dl,0x6e
  41c396:	(bad)  
  41c397:	pop    ds
  41c398:	std    
  41c399:	fidiv  WORD PTR [edx+ebx*4+0x702ac64]
  41c3a0:	loop   0x41c377
  41c3a2:	sbb    esp,DWORD PTR [esi+0x79397ee8]
  41c3a8:	lods   eax,DWORD PTR ds:[esi]
  41c3a9:	push   0xffffffb8
  41c3ab:	ins    BYTE PTR es:[edi],dx
  41c3ac:	pop    ebp
  41c3ad:	jb     0x41c3a8
  41c3af:	loopne 0x41c3d0
  41c3b1:	dec    edi
  41c3b2:	in     eax,dx
  41c3b3:	jbe    0x41c364
  41c3b5:	imul   eax,DWORD PTR [ebx+0x48],0x1
  41c3b9:	stos   BYTE PTR es:[edi],al
  41c3ba:	dec    edx
  41c3bb:	cmp    BYTE PTR [edx+0x3fa3cd3a],dl
  41c3c1:	das    
  41c3c2:	push   eax
  41c3c4:	xor    bl,0x14
  41c3c7:	mov    dh,0x62
  41c3c9:	jl     0x41c398
  41c3cb:	xchg   DWORD PTR [ebp+0x6b],ebp
  41c3ce:	pop    ebp
  41c3cf:	(bad)  
  41c3d0:	iret   
  41c3d1:	mov    ds:0x8ae2c19b,eax
  41c3d6:	add    ecx,DWORD PTR ds:0x9319b945
  41c3dc:	inc    ecx
  41c3dd:	shl    BYTE PTR ds:0x9601f924,1
  41c3e3:	or     eax,0x5b509589
  41c3e8:	cdq    
  41c3e9:	gs clc 
  41c3eb:	add    DWORD PTR [esi],0xf
  41c3ee:	push   esp
  41c3ef:	int    0xa3
  41c3f1:	shl    DWORD PTR [esi-0x20],cl
  41c3f4:	xchg   esp,eax
  41c3f5:	je     0x41c3ec
  41c3f7:	jbe    0x41c444
  41c3f9:	and    BYTE PTR [edx-0x387d3713],0xc
  41c400:	mov    bl,0x8f
  41c402:	mov    al,ds:0xe8ed332f
  41c407:	je     0x41c3f4
  41c409:	cmp    esi,0x28
  41c40c:	arpl   WORD PTR [ebp+0x3b7cbc51],di
  41c412:	test   DWORD PTR [eax+ecx*1+0x1d5cc1bd],edx
  41c419:	into   
  41c41a:	pmuludq mm6,QWORD PTR [edx+0x32e33322]
  41c421:	mov    esi,0xcbf4d080
  41c426:	fisubr DWORD PTR [edx+0x3927da7e]
  41c42c:	cli    
  41c42d:	mov    ds:0x98045d5b,eax
  41c432:	sar    DWORD PTR [esp+esi*4+0x57],1
  41c436:	imul   esi,DWORD PTR [edx-0x1883b7de],0x11
  41c43d:	sbb    esp,DWORD PTR [ebp+0x42]
  41c440:	fimul  WORD PTR ds:0xb464aee5
  41c446:	dec    edx
  41c447:	das    
  41c448:	push   cs
  41c449:	sub    bh,BYTE PTR [bp+si+0x379a]
  41c44e:	int    0x96
  41c450:	pop    ecx
  41c451:	dec    BYTE PTR [ecx+0xa]
  41c454:	pop    ds
  41c455:	push   ebx
  41c456:	jg     0x41c4b1
  41c458:	xlat   BYTE PTR ds:[ebx]
  41c459:	loope  0x41c3f9
  41c45b:	int3   
  41c45c:	jge    0x41c43d
  41c45e:	xor    eax,0x1473e8b2
  41c463:	push   0xffffffe5
  41c465:	cs jl  0x41c464
  41c468:	xchg   ebx,eax
  41c469:	cs jl  0x41c405
  41c46c:	int    0x90
  41c46e:	adc    al,BYTE PTR [eax]
  41c470:	sub    ebx,0x4f
  41c473:	inc    esp
  41c474:	push   esi
  41c475:	xchg   ebp,eax
  41c476:	xchg   esp,eax
  41c477:	jle    0x41c425
  41c479:	mov    esp,0x61aaa4b5
  41c47e:	jno    0x41c4a6
  41c480:	jo     0x41c4fa
  41c482:	inc    eax
  41c483:	mov    ah,al
  41c485:	scas   eax,DWORD PTR es:[edi]
  41c486:	jb     0x41c4c7
  41c488:	jp     0x41c451
  41c48a:	ficom  DWORD PTR [ebp+ecx*2-0x9d8d878]
  41c491:	fcmovne st,st(5)
  41c493:	sbb    al,0x6
  41c495:	mov    al,0x4f
  41c497:	ret    
  41c498:	shl    ebp,cl
  41c49a:	push   edx
  41c49b:	std    
  41c49c:	push   ds
  41c49d:	pusha  
  41c49e:	push   ecx
  41c49f:	adc    edx,esi
  41c4a1:	push   0xd07f1eb0
  41c4a6:	pushf  
  41c4a7:	sbb    al,0x3f
  41c4a9:	sbb    DWORD PTR [edx+ebx*4-0x6f35cb0a],esp
  41c4b0:	cmp    al,0xf2
  41c4b2:	sbb    DWORD PTR [ebp+edi*2+0x7f3d7f25],esp
  41c4b9:	fistp  DWORD PTR [edi]
  41c4bb:	scas   eax,DWORD PTR es:[edi]
  41c4bc:	inc    esi
  41c4bd:	push   ecx
  41c4be:	add    al,0xc8
  41c4c0:	hlt    
  41c4c1:	xchg   ah,bh
  41c4c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4c4:	jge    0x41c45d
  41c4c6:	dec    ecx
  41c4c7:	mov    al,ds:0x8a10ad41
  41c4cc:	mov    ah,bh
  41c4ce:	mov    ds:0xc3d2ac47,eax
  41c4d3:	or     ebp,edx
  41c4d5:	sub    eax,0x2d1b34ce
  41c4da:	xor    ebp,ecx
  41c4dc:	pop    ecx
  41c4dd:	jp     0x41c46b
  41c4df:	jmp    DWORD PTR [eax+0x40]
  41c4e2:	sbb    BYTE PTR [edi-0x10],0x90
  41c4e6:	cmc    
  41c4e7:	(bad)  
  41c4e8:	sub    DWORD PTR [ebp+0x5046d6d],ecx
  41c4ee:	das    
  41c4ef:	pop    es
  41c4f0:	xchg   ebx,eax
  41c4f1:	ret    0x1575
  41c4f4:	jne    0x41c529
  41c4f6:	ins    DWORD PTR es:[edi],dx
  41c4f7:	jo     0x41c4cd
  41c4f9:	jno    0x41c507
  41c4fb:	stos   DWORD PTR es:[edi],eax
  41c4fc:	xor    bl,dl
  41c4fe:	mov    ebp,0x66c0ca01
  41c503:	and    eax,0xb18b3968
  41c508:	cli    
  41c509:	pop    eax
  41c50a:	dec    edx
  41c50b:	imul   edi,DWORD PTR [edi+0x4],0xc6c50bc6
  41c512:	jne    0x41c58c
  41c514:	push   ebx
  41c515:	xor    DWORD PTR [ebx+esi*2],edx
  41c518:	dec    ebx
  41c519:	cmc    
  41c51a:	inc    ecx
  41c51b:	mov    ebx,0x107f0575
  41c520:	stos   DWORD PTR es:[edi],eax
  41c521:	add    al,0xbe
  41c523:	outs   dx,DWORD PTR ds:[esi]
  41c524:	add    BYTE PTR [ebp-0x72],bl
  41c527:	out    0xf5,eax
  41c529:	neg    BYTE PTR [esi]
  41c52b:	jmp    0x3742:0x5ed9e20e
  41c532:	popaw  
  41c534:	sahf   
  41c535:	cmc    
  41c536:	pop    ebx
  41c537:	fidiv  DWORD PTR [eax]
  41c539:	int    0x92
  41c53b:	inc    esi
  41c53c:	call   0x9f590e65
  41c541:	cmp    DWORD PTR [ebp-0x13],edx
  41c544:	mov    ah,0x48
  41c546:	dec    esp
  41c547:	push   edi
  41c548:	or     DWORD PTR [eax+0x6f],esp
  41c54b:	inc    eax
  41c54c:	adc    al,0x18
  41c54e:	sbb    bh,bh
  41c550:	mov    ds:0xfa057667,eax
  41c555:	or     ah,cl
  41c557:	outs   dx,DWORD PTR ds:[esi]
  41c558:	icebp  
  41c559:	xor    al,dl
  41c55b:	test   al,0xca
  41c55d:	ror    BYTE PTR [eax+0x7cb3e081],cl
  41c563:	pop    eax
  41c564:	sahf   
  41c565:	push   edi
  41c566:	adc    edi,eax
  41c568:	cmp    eax,0xd53bd958
  41c56d:	rcl    DWORD PTR [ecx],cl
  41c56f:	shl    DWORD PTR [edi],cl
  41c571:	fs pop edi
  41c573:	out    0x95,al
  41c575:	pusha  
  41c576:	jmp    0x5aeb:0x7c6d3b3d
  41c57d:	sbb    esi,esi
  41c57f:	mov    bh,0x19
  41c581:	adc    eax,DWORD PTR [eax+0x68d05f6]
  41c587:	fnsetpm(287 only) 
  41c589:	icebp  
  41c58a:	pop    ss
  41c58b:	in     eax,dx
  41c58c:	mov    ah,0xbd
  41c58e:	fnstcw WORD PTR [edx+edi*4-0x6a14c864]
  41c595:	es push ebp
  41c597:	xchg   ebx,eax
  41c598:	retf   0x3c
  41c59b:	or     eax,0x2e7d0546
  41c5a0:	das    
  41c5a1:	push   0xffffffd1
  41c5a3:	push   0xf555ea8a
  41c5a8:	fwait
  41c5a9:	bnd data16 jp 0x41c5f6
  41c5ad:	mov    edi,0xfcaab347
  41c5b2:	push   edi
  41c5b3:	(bad)  
  41c5b4:	and    ah,ah
  41c5b6:	rcl    DWORD PTR [edx+0x65541438],cl
  41c5bc:	push   cs
  41c5bd:	and    al,0xd
  41c5bf:	invd   
  41c5c1:	mov    eax,0x183685b7
  41c5c6:	ss jbe 0x41c5a2
  41c5c9:	xor    eax,0x86810ac2
  41c5ce:	out    dx,eax
  41c5cf:	in     al,0xd5
  41c5d1:	scas   eax,DWORD PTR es:[edi]
  41c5d2:	xchg   edx,eax
  41c5d3:	data16 aam 0x21
  41c5d6:	and    eax,0x5db1b27c
  41c5db:	mov    ds:0xdf29f917,al
  41c5e0:	retf   
  41c5e1:	ss sub bl,dl
  41c5e4:	adc    DWORD PTR [ebp-0x23],ebp
  41c5e7:	mov    dh,0xec
  41c5e9:	pushf  
  41c5ea:	adc    cl,BYTE PTR [ecx+0x417a48ce]
  41c5f0:	or     eax,0xa9051aa6
  41c5f5:	pusha  
  41c5f6:	or     eax,DWORD PTR [edx+0x2ee9653e]
  41c5fc:	das    
  41c5fd:	xchg   edx,eax
  41c5fe:	mov    al,ds:0x5b641e4f
  41c603:	mov    DWORD PTR [edx],ecx
  41c605:	push   eax
  41c606:	pop    esp
  41c607:	pop    ss
  41c608:	add    al,0x44
  41c60a:	mov    eax,ds:0x25c3a0fc
  41c60f:	mov    ebp,0xf9c65a04
  41c614:	or     ah,bl
  41c616:	arpl   si,sp
  41c618:	lea    ebp,[edx]
  41c61a:	inc    ebp
  41c61b:	cwde   
  41c61c:	sub    ebx,DWORD PTR [ecx]
  41c61e:	xor    BYTE PTR [edx-0x6b],al
  41c621:	sub    dl,cl
  41c623:	aas    
  41c624:	mov    dh,0x8c
  41c626:	cmc    
  41c627:	sbb    al,0x59
  41c629:	and    DWORD PTR [eax],edx
  41c62b:	into   
  41c62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c62d:	push   eax
  41c62e:	popa   
  41c62f:	daa    
  41c630:	or     eax,0xf77f32c4
  41c635:	xchg   esi,eax
  41c636:	inc    edi
  41c637:	xchg   edi,eax
  41c638:	jecxz  0x41c609
  41c63a:	sbb    eax,0x7598ef0c
  41c63f:	mov    al,0xc0
  41c641:	retf   0x4d8
  41c644:	hlt    
  41c645:	push   cs
  41c646:	adc    BYTE PTR [ebx-0x23da33c4],bl
  41c64c:	call   0x6c57f49e
  41c651:	jmp    0x41c61b
  41c653:	mov    ds,WORD PTR [ebx+ebx*8]
  41c656:	and    DWORD PTR [ecx],eax
  41c658:	or     al,0xf8
  41c65a:	les    eax,FWORD PTR [ebx+esi*8-0x141c3b98]
  41c661:	inc    edx
  41c662:	je     0x41c694
  41c664:	jmp    0x41c687
  41c666:	call   0x50b9:0x209dc218
  41c66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c66e:	test   BYTE PTR [edi+0x7b],dh
  41c671:	invd   
  41c673:	ds sbb eax,ecx
  41c676:	mov    cl,0xec
  41c678:	push   ebx
  41c679:	mov    bh,0xb5
  41c67b:	enter  0x2eb,0xd4
  41c67f:	ja     0x41c6a2
  41c681:	scas   eax,DWORD PTR es:[edi]
  41c682:	fild   QWORD PTR [esi+0x5707e150]
  41c688:	adc    ecx,DWORD PTR [ebp-0x5ffdf299]
  41c68e:	mov    al,ds:0xcf5961cf
  41c693:	sbb    eax,0xb879c8e3
  41c698:	cmp    eax,0x669331c3
  41c69d:	in     al,0xdb
  41c69f:	and    ebp,ebx
  41c6a1:	or     ch,al
  41c6a3:	push   ebx
  41c6a4:	(bad)  
  41c6a5:	fisubr DWORD PTR [edx-0x29]
  41c6a8:	scas   eax,DWORD PTR es:[edi]
  41c6a9:	or     edi,DWORD PTR [eax+0x3632a076]
  41c6af:	sbb    BYTE PTR [ecx+eiz*8+0x69],dh
  41c6b3:	ret    
  41c6b4:	jne    0x41c6e3
  41c6b6:	cmp    edi,DWORD PTR [eax-0x2c]
  41c6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6ba:	pop    esi
  41c6bb:	gs or  ah,bl
  41c6be:	das    
  41c6bf:	cmp    BYTE PTR [ebx+0x77],bl
  41c6c2:	add    DWORD PTR [edx-0x70],esp
  41c6c5:	ret    0xd69
  41c6c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6c9:	scas   al,BYTE PTR es:[edi]
  41c6ca:	inc    esi
  41c6cb:	or     ah,BYTE PTR [bx-0x4b]
  41c6cf:	sub    ebx,ebx
  41c6d1:	dec    ebp
  41c6d2:	mov    ebp,fs
  41c6d4:	adc    BYTE PTR ds:[ebx],dh
  41c6d7:	aam    0xa8
  41c6d9:	xchg   esi,eax
  41c6da:	int    0x61
  41c6dc:	inc    eax
  41c6dd:	lods   al,BYTE PTR ds:[esi]
  41c6de:	xchg   ecx,eax
  41c6df:	imul   esi,ecx,0xffffffbd
  41c6e2:	rcr    BYTE PTR [esi-0x56],cl
  41c6e5:	das    
  41c6e6:	(bad)  
  41c6e7:	hlt    
  41c6e8:	aad    0x6f
  41c6ea:	repz int3 
  41c6ec:	push   ebp
  41c6ed:	popa   
  41c6ee:	bound  ebp,QWORD PTR [ecx-0x36]
  41c6f1:	cmp    DWORD PTR [edi+0x71],esp
  41c6f4:	cmp    dh,bl
  41c6f6:	push   0xffffffef
  41c6f8:	neg    al
  41c6fa:	adc    eax,0xf884327e
  41c6ff:	inc    edx
  41c700:	mov    edx,0x6749ece0
  41c705:	fbstp  TBYTE PTR [edx+0x408dbb6b]
  41c70b:	int3   
  41c70c:	xchg   edi,eax
  41c70d:	inc    esi
  41c70e:	jno    0x41c70f
  41c710:	jl     0x41c749
  41c712:	fist   DWORD PTR [esi+0x3f4a9434]
  41c718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c719:	into   
  41c71a:	push   esi
  41c71b:	xchg   ebx,eax
  41c71c:	pop    eax
  41c71d:	stos   DWORD PTR es:[edi],eax
  41c71e:	fs jmp 0x1f116a24
  41c724:	sbb    esp,DWORD PTR [edi]
  41c726:	jmp    0xefee:0x79c8d47a
  41c72d:	sbb    edx,DWORD PTR [ebp-0x7a]
  41c730:	rol    BYTE PTR [si],0x30
  41c734:	inc    ecx
  41c735:	arpl   WORD PTR [ecx-0x71],bp
  41c738:	outs   dx,BYTE PTR ds:[esi]
  41c739:	mov    eax,0xe297f030
  41c73e:	test   ebp,edi
  41c740:	and    ecx,ecx
  41c742:	and    al,0x5d
  41c744:	xchg   DWORD PTR [ebp+eiz*1+0x1d],ebp
  41c748:	mov    ebx,DWORD PTR [edx-0x3566183f]
  41c74e:	stc    
  41c74f:	or     BYTE PTR [eax-0x77],0xf4
  41c753:	jmp    0x41c78e
  41c755:	mov    ds:0x45c5a6a1,al
  41c75a:	dec    ecx
  41c75b:	dec    esp
  41c75c:	arpl   WORD PTR [edx+ebp*8-0x30b0619a],bx
  41c763:	mov    ecx,0x5196607
  41c768:	and    DWORD PTR [ebp+0x12],0x44
  41c76c:	mov    eax,ds:0x9fdd4e52
  41c771:	cmp    DWORD PTR [ebx+0x5a54d7e8],0xd3f16fe5
  41c77b:	out    0x43,al
  41c77d:	mov    cl,bl
  41c77f:	leave  
  41c780:	cli    
  41c781:	outs   dx,BYTE PTR ds:[esi]
  41c782:	sub    eax,0x5aef3b27
  41c787:	bound  eax,QWORD PTR [edx+0x6c]
  41c78a:	daa    
  41c78b:	mov    bh,0x8e
  41c78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c78e:	mov    dl,0x83
  41c790:	call   DWORD PTR [ebp*1+0x719403da]
  41c797:	imul   edx,edx,0xffffffdc
  41c79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c79b:	imul   ebx,edi,0xffffffe3
  41c79e:	cwde   
  41c79f:	xchg   edx,eax
  41c7a0:	repnz repnz and bl,BYTE PTR [edi-0x5164248b]
  41c7a8:	xchg   BYTE PTR [edx+0x6dbedf08],bl
  41c7ae:	cmp    ebp,eax
  41c7b0:	dec    esp
  41c7b1:	jno    0x41c737
  41c7b3:	adc    dl,BYTE PTR [edx]
  41c7b5:	and    DWORD PTR [ebx+0x7dea977d],edi
  41c7bb:	out    dx,eax
  41c7bc:	es repz push ss
  41c7bf:	mov    bh,0xb5
  41c7c1:	pusha  
  41c7c2:	jmp    0x41c744
  41c7c4:	imul   edx,DWORD PTR [ecx-0x3c25dee6],0x2
  41c7cb:	lock push ds
  41c7cd:	out    0x68,al
  41c7cf:	dec    esi
  41c7d0:	xchg   edx,eax
  41c7d1:	pop    es
  41c7d2:	out    dx,al
  41c7d3:	nop
  41c7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d5:	ror    BYTE PTR [edi],cl
  41c7d7:	das    
  41c7d8:	ja     0x41c80b
  41c7da:	fxtract 
  41c7dc:	outs   dx,BYTE PTR ds:[esi]
  41c7dd:	push   edi
  41c7de:	xchg   edx,eax
  41c7df:	sub    DWORD PTR [eax],ebp
  41c7e1:	sub    bh,cl
  41c7e3:	push   0xc39d24d7
  41c7e8:	mov    ecx,0x62532f68
  41c7ed:	pop    ebp
  41c7ee:	dec    edx
  41c7ef:	sbb    BYTE PTR [esp+ebp*1-0x14a74ada],0xfc
  41c7f7:	or     dl,al
  41c7f9:	jne    0x41c80d
  41c7fb:	icebp  
  41c7fc:	es add eax,0x6c22a9da
  41c802:	int3   
  41c803:	ss in  eax,dx
  41c805:	arpl   WORD PTR [edi+0x518491a1],bp
  41c80b:	cmp    DWORD PTR [esi-0x66b2acf0],esi
  41c811:	dec    edi
  41c812:	loop   0x41c85f
  41c814:	and    al,BYTE PTR [edx+0x71]
  41c817:	push   ss
  41c818:	add    BYTE PTR [ebx+0x2cb6f460],cl
  41c81e:	ret    0xf0e5
  41c821:	mov    ebp,0xa8d78a
  41c826:	(bad)  
  41c827:	(bad)  
  41c828:	push   cs
  41c829:	rcr    BYTE PTR [ebx+0x24],1
  41c82c:	jecxz  0x41c83a
  41c82e:	push   ecx
  41c82f:	out    dx,eax
  41c830:	call   0x7bd0:0x45f9264b
  41c837:	push   0x85a2e584
  41c83c:	ror    DWORD PTR ss:[eax],1
  41c83f:	add    DWORD PTR [esi+0x22],esi
  41c842:	add    DWORD PTR [eax],edi
  41c844:	fild   WORD PTR [edx]
  41c846:	jno    0x41c7eb
  41c848:	inc    ecx
  41c849:	jp     0x41c7dd
  41c84b:	sub    dl,BYTE PTR [eax-0x31]
  41c84e:	jbe    0x41c885
  41c850:	mov    al,ds:0x61440a31
  41c855:	stos   BYTE PTR es:[edi],al
  41c856:	jge    0x41c8ad
  41c858:	sbb    DWORD PTR [esi+0x40],esp
  41c85b:	addr16 cwde 
  41c85d:	or     ah,BYTE PTR [eax-0x16]
  41c860:	lea    edi,[ecx-0x33]
  41c863:	sti    
  41c864:	push   es
  41c865:	sti    
  41c866:	cmp    al,0x13
  41c868:	sbb    eax,0xc82d2fee
  41c86d:	arpl   WORD PTR [edx-0x3a],bx
  41c870:	outs   dx,DWORD PTR ds:[esi]
  41c871:	xor    dl,ch
  41c873:	inc    esi
  41c874:	add    edi,ebp
  41c876:	mov    ebp,0x18724e57
  41c87b:	shl    BYTE PTR [esi+0x5e5f01c1],0xa
  41c882:	(bad)  
  41c883:	fadd   st,st(2)
  41c885:	sbb    dh,ah
  41c887:	cmp    edi,DWORD PTR [edi+0x63]
  41c88a:	xchg   ebp,eax
  41c88b:	pop    ds
  41c88c:	or     al,0xe6
  41c88e:	ficom  WORD PTR [ecx]
  41c890:	jle    0x41c892
  41c892:	pop    ebx
  41c893:	out    dx,al
  41c894:	jne    0x41c8c8
  41c896:	int3   
  41c897:	rol    BYTE PTR [eax],0x1a
  41c89a:	xchg   edi,eax
  41c89b:	std    
  41c89c:	stos   BYTE PTR es:[edi],al
  41c89d:	pop    es
  41c89e:	adc    DWORD PTR [eax+esi*1],ecx
  41c8a1:	in     eax,0x84
  41c8a3:	das    
  41c8a4:	pop    ebx
  41c8a5:	inc    ebx
  41c8a6:	and    DWORD PTR [eax],edx
  41c8a8:	sub    eax,0xbf361112
  41c8ad:	or     ecx,esi
  41c8af:	sbb    eax,0xf1149574
  41c8b4:	sar    DWORD PTR [edx+0x2c],cl
  41c8b7:	pusha  
  41c8b8:	dec    ebx
  41c8b9:	repnz adc al,0x71
  41c8bc:	inc    ebp
  41c8bd:	add    eax,DWORD PTR ds:0x34f29400
  41c8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c4:	add    BYTE PTR [edx+0x43706ecd],cl
  41c8ca:	in     eax,0xd5
  41c8cc:	pop    ss
  41c8cd:	mov    ah,0x17
  41c8cf:	mov    ebp,0xeca1cc38
  41c8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8d5:	pop    ecx
  41c8d6:	test   eax,0xaf71c377
  41c8db:	jg     0x41c8ce
  41c8dd:	xlat   BYTE PTR cs:[ebx]
  41c8df:	ret    0x2a8f
  41c8e2:	add    DWORD PTR [esi],edi
  41c8e4:	push   ss
  41c8e5:	or     ebp,DWORD PTR [eax+0x1]
  41c8e8:	mov    WORD PTR ds:0xd8d27749,ss
  41c8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ef:	aas    
  41c8f0:	ss push 0x5a
  41c8f3:	push   0x8
  41c8f5:	aad    0xf0
  41c8f7:	call   0xb30896d7
  41c8fc:	xchg   ecx,eax
  41c8fd:	mov    al,0x13
  41c8ff:	popa   
  41c900:	inc    ebx
  41c901:	or     eax,0x18776712
  41c906:	icebp  
  41c907:	sbb    edi,DWORD PTR [ecx+0x39b3916a]
  41c90d:	xor    eax,0x74889ace
  41c912:	cmp    edi,DWORD PTR [edi]
  41c914:	outs   dx,DWORD PTR ds:[esi]
  41c915:	mov    al,fs:0x816a20eb
  41c91b:	mov    ecx,0x711cf0c3
  41c920:	es inc eax
  41c922:	out    0x6f,al
  41c924:	addr16 popa 
  41c926:	(bad)  
  41c927:	jge    0x41c95b
  41c929:	pop    ss
  41c92a:	sub    ecx,ebp
  41c92c:	enter  0xa8af,0x3e
  41c930:	xlat   BYTE PTR ds:[ebx]
  41c931:	ins    DWORD PTR es:[edi],dx
  41c932:	imul   edx,DWORD PTR [eax],0xffffffff
  41c935:	ror    DWORD PTR ds:0xc455ed4a,0xb5
  41c93c:	fmul   DWORD PTR [edi-0x69]
  41c93f:	fisubr DWORD PTR [edi]
  41c941:	or     BYTE PTR [edi+0x61],ah
  41c944:	sub    DWORD PTR [ebx+0x7e72d40a],esp
  41c94a:	outs   dx,DWORD PTR ds:[esi]
  41c94b:	fs test ch,bh
  41c94e:	jmp    0xc055:0xe82f2414
  41c955:	in     eax,0x1c
  41c957:	or     DWORD PTR [edx-0x41],edi
  41c95a:	pusha  
  41c95b:	push   ebx
  41c95c:	gs mov edx,0x4791b076
  41c962:	sti    
  41c963:	jb     0x41c8e9
  41c965:	jae    0x41c9c3
  41c967:	xchg   BYTE PTR [esi+0x6f6b502],al
  41c96d:	add    esp,DWORD PTR [ecx]
  41c96f:	repnz in al,dx
  41c971:	daa    
  41c972:	aaa    
  41c973:	repnz ins DWORD PTR es:[edi],dx
  41c975:	add    al,0x7e
  41c977:	cmp    BYTE PTR [ecx+0x68],bl
  41c97a:	dec    ecx
  41c97b:	stos   DWORD PTR es:[edi],eax
  41c97c:	and    BYTE PTR [ebp+eiz*8+0x553cdbf5],ch
  41c983:	push   esi
  41c984:	repnz dec esp
  41c986:	icebp  
  41c987:	adc    DWORD PTR [esi-0x169f3941],ebx
  41c98d:	repnz fstp DWORD PTR ds:0x64e5bb36
  41c994:	sub    eax,0xe7321c57
  41c999:	dec    ebp
  41c99a:	mov    ch,0x2b
  41c99c:	dec    edi
  41c99d:	sti    
  41c99e:	cmp    BYTE PTR ds:0xf6ae7ce5,ah
  41c9a4:	out    dx,al
  41c9a5:	imul   esp,DWORD PTR [ecx+0x7654c26d],0x2c9269ac
  41c9af:	std    
  41c9b0:	cwde   
  41c9b1:	xor    eax,ebx
  41c9b3:	mov    al,0xcb
  41c9b5:	lea    esi,[esi-0x54]
  41c9b8:	adc    cl,BYTE PTR [ecx+0xf072d34]
  41c9be:	lods   al,BYTE PTR ds:[esi]
  41c9bf:	cmp    al,BYTE PTR [edi-0x47c9ff4b]
  41c9c5:	push   0xffffffb3
  41c9c7:	mov    eax,ds:0x35d6bdf7
  41c9cc:	out    0x84,al
  41c9ce:	shl    DWORD PTR [ebp+0x18],1
  41c9d1:	fadd   st(6),st
  41c9d3:	leave  
  41c9d4:	stc    
  41c9d5:	xchg   ebp,eax
  41c9d6:	arpl   WORD PTR [edx-0x1822dbe2],dx
  41c9dc:	dec    edx
  41c9dd:	inc    edx
  41c9de:	sbb    DWORD PTR [edi],esi
  41c9e0:	and    eax,DWORD PTR [edi]
  41c9e2:	adc    al,0xfc
  41c9e4:	or     dl,0x99
  41c9e7:	inc    ebx
  41c9e8:	arpl   bx,si
  41c9ea:	mov    edi,0xa8475119
  41c9ef:	cwde   
  41c9f0:	pusha  
  41c9f1:	push   eax
  41c9f2:	and    eax,0x32bbb2c9
  41c9f7:	fistp  DWORD PTR [ebx]
  41c9f9:	push   es
  41c9fa:	imul   ecx,DWORD PTR [ebp-0x40c687f0],0x28
  41ca01:	adc    DWORD PTR [edi],ebx
  41ca03:	mov    ch,0xc6
  41ca05:	pop    ecx
  41ca06:	push   edi
  41ca07:	test   DWORD PTR [ecx+ecx*4+0x665d2b3d],esi
  41ca0e:	test   eax,0x7357417d
  41ca13:	inc    esi
  41ca14:	lahf   
  41ca15:	mov    eax,0x30079d2
  41ca1a:	add    cl,ah
  41ca1c:	mov    al,0x18
  41ca1e:	jo     0x41ca15
  41ca20:	adc    eax,0xfb4dd392
  41ca25:	icebp  
  41ca26:	sub    eax,0x239879cf
  41ca2b:	stos   DWORD PTR es:[edi],eax
  41ca2c:	adc    DWORD PTR [ebx+eiz*4+0x77],edx
  41ca30:	mov    cl,0xb1
  41ca32:	mov    bl,0xec
  41ca34:	int3   
  41ca35:	mov    ah,0x81
  41ca37:	and    al,0x1e
  41ca39:	into   
  41ca3a:	mov    eax,0x2b178f78
  41ca3f:	fcmovnbe st,st(2)
  41ca41:	add    ecx,edx
  41ca43:	adc    DWORD PTR [esi+0x7704c820],ebp
  41ca49:	mov    bl,0x6b
  41ca4b:	es push esi
  41ca4e:	aas    
  41ca4f:	jmp    0x41cab5
  41ca51:	ss inc edx
  41ca53:	loope  0x41c9e4
  41ca55:	js     0x41ca0a
  41ca57:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ca59:	xchg   ebp,eax
  41ca5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca5b:	mov    al,ds:0xe88fc385
  41ca60:	mov    eax,0x35be223c
  41ca65:	popf   
  41ca66:	(bad)  
  41ca67:	adc    eax,0xf121b263
  41ca6c:	shr    dh,cl
  41ca6e:	xor    al,0xf9
  41ca70:	imul   edi,DWORD PTR [ecx+0x5f],0xe2bab87e
  41ca77:	lods   eax,DWORD PTR ds:[esi]
  41ca78:	inc    ecx
  41ca79:	scas   al,BYTE PTR es:[edi]
  41ca7a:	and    bl,BYTE PTR [ecx+0xe2f30b2]
  41ca80:	bnd jmp DWORD PTR [edx]
  41ca83:	retf   
  41ca84:	mov    ah,0x5e
  41ca86:	adc    DWORD PTR [edx+ebp*8-0x17],ebp
  41ca8a:	outs   dx,BYTE PTR ds:[esi]
  41ca8b:	pop    ebp
  41ca8c:	cli    
  41ca8d:	jae    0x41cadc
  41ca8f:	gs push ecx
  41ca91:	cmp    BYTE PTR [ebx],dh
  41ca93:	adc    al,0xcf
  41ca95:	(bad)
  41ca9a:	cmp    dl,ch
  41ca9c:	pop    ebp
  41ca9d:	mov    esi,0x2a4361b3
  41caa2:	(bad)  
  41caa3:	mov    esp,ebx
  41caa5:	popf   
  41caa6:	adc    ah,ch
  41caa8:	dec    edx
  41caa9:	(bad)  [ecx+0x3c]
  41caac:	das    
  41caad:	xchg   edi,eax
  41caae:	or     bh,BYTE PTR [edi]
  41cab0:	nop
  41cab1:	test   BYTE PTR [eax],0xf5
  41cab4:	test   DWORD PTR [edi+0x5842b076],0xd5748b01
  41cabe:	mov    BYTE PTR [ecx],dl
  41cac0:	gs popf 
  41cac2:	jns    0x41cb04
  41cac4:	pop    ebx
  41cac5:	mov    bl,0xfc
  41cac7:	shr    BYTE PTR [eax+0x6d9a1d35],0x34
  41cace:	lahf   
  41cacf:	pop    esp
  41cad0:	out    0xab,al
  41cad2:	cli    
  41cad3:	std    
  41cad4:	in     al,0xfd
  41cad6:	adc    bl,BYTE PTR [edi]
  41cad8:	jle    0x41caf7
  41cada:	fild   DWORD PTR [esi]
  41cadc:	popf   
  41cadd:	sbb    al,0x71
  41cadf:	scas   al,BYTE PTR es:[edi]
  41cae0:	push   ebx
  41cae1:	push   cs
  41cae2:	mov    al,0x37
  41cae4:	lods   al,BYTE PTR ds:[esi]
  41cae5:	outs   dx,DWORD PTR ds:[esi]
  41cae6:	lock pop ds
  41cae8:	sub    al,BYTE PTR [eax+edi*8+0x52]
  41caec:	sbb    BYTE PTR [ecx],dl
  41caee:	cmc    
  41caef:	dec    ebp
  41caf0:	sub    eax,0x5868d267
  41caf5:	inc    ebx
  41caf6:	out    dx,al
  41caf7:	hlt    
  41caf8:	aaa    
  41caf9:	pop    ebp
  41cafa:	mov    bh,0x17
  41cafc:	fsub   DWORD PTR [ebx+edx*2-0x21]
  41cb00:	mov    eax,0xb99017d8
  41cb05:	pslld  mm1,QWORD PTR fs:[eax+0x4c56ba07]
  41cb0d:	pop    es
  41cb0e:	lock add ch,BYTE PTR [eax-0x68357506]
  41cb15:	dec    ecx
  41cb16:	outs   dx,BYTE PTR ds:[esi]
  41cb17:	(bad)  
  41cb19:	outs   dx,BYTE PTR ds:[esi]
  41cb1a:	popa   
  41cb1b:	fisttp DWORD PTR [eax+0x28]
  41cb1e:	mov    ebp,0x4c53c5d7
  41cb23:	push   ebx
  41cb24:	test   DWORD PTR [edi+0x7f],ecx
  41cb27:	xlat   BYTE PTR ds:[ebx]
  41cb28:	sbb    eax,0x97954a09
  41cb2d:	sbb    DWORD PTR ds:0xd1ae3eec,ebp
  41cb33:	inc    esp
  41cb34:	push   ebx
  41cb36:	adc    ah,BYTE PTR [ecx]
  41cb38:	mov    eax,ds:0x82bdc3cc
  41cb3d:	pop    eax
  41cb3e:	xchg   esi,eax
  41cb3f:	inc    edx
  41cb40:	pushf  
  41cb41:	daa    
  41cb42:	push   edx
  41cb43:	outs   dx,DWORD PTR ds:[esi]
  41cb44:	aaa    
  41cb45:	inc    esi
  41cb46:	les    edx,FWORD PTR [edx+edx*4+0x5f]
  41cb4a:	mov    esi,0xb8710ac2
  41cb4f:	mov    ch,0xf8
  41cb51:	fisub  WORD PTR es:[eax-0x656fc6a]
  41cb58:	jmp    0x38b1f13
  41cb5d:	mov    dh,bh
  41cb5f:	clc    
  41cb60:	inc    eax
  41cb61:	mov    ds:0xe25e0e64,eax
  41cb66:	pop    es
  41cb67:	sbb    BYTE PTR [esi*8-0x6188245d],ch
  41cb6e:	sub    bl,bl
  41cb70:	data16 test al,0xe7
  41cb73:	in     eax,dx
  41cb74:	xchg   esi,eax
  41cb75:	inc    esi
  41cb76:	jecxz  0x41cb9e
  41cb78:	inc    ebx
  41cb79:	mov    bl,0x73
  41cb7b:	cmp    esp,DWORD PTR [edi-0x2b7e70b1]
  41cb81:	imul   edi,DWORD PTR [ebx-0x6d],0xffffffbf
  41cb85:	inc    esi
  41cb86:	mov    eax,ds:0x19ea56d
  41cb8b:	ret    0xecb8
  41cb8e:	punpcklwd mm3,DWORD PTR ds:0xd0686e33
  41cb95:	stos   DWORD PTR es:[edi],eax
  41cb96:	sbb    al,0x43
  41cb98:	sub    bl,0x64
  41cb9b:	aas    
  41cb9c:	popa   
  41cb9d:	imul   ebx,DWORD PTR [ecx+0x6c],0xe57e530e
  41cba4:	cmp    DWORD PTR [esi],ebp
  41cba6:	imul   ebp,DWORD PTR [ecx],0x3c250a1b
  41cbac:	frstor [edi+0x42]
  41cbaf:	adc    edi,DWORD PTR [ebp+0x741a4278]
  41cbb5:	dec    esp
  41cbb6:	and    ah,BYTE PTR [eax-0x4a4f4a3d]
  41cbbc:	sub    eax,DWORD PTR [bx+di+0x1be3]
  41cbc1:	mov    bh,BYTE PTR [ecx+edi*1+0x77975f94]
  41cbc8:	dec    ebx
  41cbc9:	gs xchg esp,eax
  41cbcb:	mov    dl,0xd5
  41cbcd:	mov    bh,0xe1
  41cbcf:	xchg   ebx,eax
  41cbd0:	sbb    BYTE PTR [ebx-0x7],dl
  41cbd3:	xor    eax,DWORD PTR [edi-0x6e]
  41cbd6:	retf   0x3654
  41cbd9:	cmp    al,0x41
  41cbdb:	xor    ecx,DWORD PTR [edi]
  41cbdd:	and    BYTE PTR [eax+ebx*2-0x1b856703],bl
  41cbe4:	shl    DWORD PTR [ebx+0x16],cl
  41cbe7:	mov    eax,ds:0x5b4edb3a
  41cbec:	loopne 0x41cc42
  41cbee:	stc    
  41cbef:	aas    
  41cbf0:	cmp    BYTE PTR [esi-0x14],dl
  41cbf3:	outs   dx,DWORD PTR ds:[esi]
  41cbf4:	mov    dh,0xa1
  41cbf6:	aam    0xec
  41cbf8:	push   0xb711db8b
  41cbfd:	jmp    0x41cc5e
  41cbff:	jle    0x41cbac
  41cc01:	jns    0x41cbc1
  41cc03:	or     esp,DWORD PTR [esi+eiz*4]
  41cc06:	std    
  41cc07:	loopne 0x41cc4c
  41cc09:	cmc    
  41cc0a:	fadd   DWORD PTR [edx-0x13c13723]
  41cc10:	imul   esp,DWORD PTR [eax-0x6],0xcbe4b2a5
  41cc17:	mov    ebp,0xaf028105
  41cc1c:	stos   DWORD PTR es:[edi],eax
  41cc1d:	ret    0x97d1
  41cc20:	pop    es
  41cc21:	xor    al,BYTE PTR [edi-0x7a4cdbed]
  41cc27:	lods   eax,DWORD PTR ds:[esi]
  41cc28:	push   ds
  41cc29:	(bad)  
  41cc2a:	fst    QWORD PTR [esi-0x1d]
  41cc2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2e:	leave  
  41cc2f:	call   0xa61e:0x23aca723
  41cc36:	jl     0x41cc11
  41cc38:	jp     0x41cbc4
  41cc3a:	sbb    eax,0x48f1d837
  41cc3f:	enter  0xdef9,0x40
  41cc43:	adc    BYTE PTR [ebx+0x71],bl
  41cc46:	gs aas 
  41cc48:	xor    bh,bh
  41cc4a:	mov    eax,0x27f0762c
  41cc4f:	dec    edx
  41cc50:	jmp    0x1091680b
  41cc55:	mov    ?,WORD PTR [ecx-0x5d]
  41cc58:	test   al,0x67
  41cc5a:	lock push cs
  41cc5c:	jmp    0xbd49:0xa25e47b4
  41cc63:	jge    0x41cccb
  41cc65:	pusha  
  41cc66:	dec    esp
  41cc67:	loopne 0x41cccc
  41cc69:	iret   
  41cc6a:	inc    edx
  41cc6b:	sbb    bl,BYTE PTR ds:0x6453c23
  41cc71:	fwait
  41cc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc73:	push   cs
  41cc74:	cmp    BYTE PTR [esi],ch
  41cc76:	pop    ebp
  41cc77:	lock jmp 0x9a7e2bf9
  41cc7d:	es pop eax
  41cc7f:	and    ebp,DWORD PTR [esi-0x71]
  41cc82:	out    dx,al
  41cc83:	sub    al,0x95
  41cc85:	sbb    BYTE PTR [edx-0xef55870],0xfb
  41cc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc8d:	repnz inc ebx
  41cc8f:	cmp    ecx,DWORD PTR [ebp+0x5b]
  41cc92:	dec    edi
  41cc93:	aas    
  41cc94:	repnz mov eax,ds:0x46ed8931
  41cc9a:	pusha  
  41cc9b:	mov    esp,0x6144fad9
  41cca0:	int3   
  41cca1:	sub    DWORD PTR [ecx-0x68],eax
  41cca4:	es ins DWORD PTR es:[edi],dx
  41cca6:	add    eax,0xe661a90c
  41ccab:	pusha  
  41ccac:	and    ch,dl
  41ccae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccaf:	adc    BYTE PTR [edx+eax*1-0x3a],ch
  41ccb3:	xchg   ebx,ebx
  41ccb5:	lea    ebp,[ecx+ebx*4+0x1e9e4f77]
  41ccbc:	cdq    
  41ccbd:	mov    edx,0x1208dcb9
  41ccc2:	or     BYTE PTR [edi+ecx*4],dl
  41ccc5:	xchg   ebx,eax
  41ccc6:	mov    al,0xe1
  41ccc8:	sti    
  41ccc9:	ds mov esp,0x15edb766
  41cccf:	outs   dx,BYTE PTR ds:[esi]
  41ccd0:	xor    al,0x6d
  41ccd2:	cwde   
  41ccd3:	mov    esi,0x1e3a5a15
  41ccd8:	cmp    ah,BYTE PTR es:[ebx-0x3422931c]
  41ccdf:	dec    ecx
  41cce0:	jmp    0x41cd3b
  41cce2:	enter  0xe58d,0x7c
  41cce6:	jmp    0x41ccb8
  41cce8:	fnstcw WORD PTR [edi]
  41ccea:	jo     0x41ccd6
  41ccec:	cli    
  41cced:	or     DWORD PTR [eax+0x7],0xd50ace0c
  41ccf4:	or     BYTE PTR [ebx],cl
  41ccf6:	mov    ds:0x20f58a05,eax
  41ccfb:	pop    edi
  41ccfc:	fwait
  41ccfd:	in     eax,0xfa
  41ccff:	daa    
  41cd00:	jbe    0x41cc98
  41cd02:	jmp    0x41ccf2
  41cd04:	std    
  41cd05:	sbb    DWORD PTR [edx],ecx
  41cd07:	mov    cs,WORD PTR [edx]
  41cd09:	or     eax,0x27232bd4
  41cd0e:	div    DWORD PTR [eax+0x6a4bcd8c]
  41cd14:	xchg   BYTE PTR [esi+0x0],cl
  41cd17:	int3   
  41cd18:	js     0x41cd7c
  41cd1a:	and    al,0xaf
  41cd1c:	mov    ds:0xa2d65f4,eax
  41cd21:	lds    esi,FWORD PTR ds:0xebf3ac60
  41cd27:	or     BYTE PTR [esi+0x44550bdf],dh
  41cd2d:	daa    
  41cd2e:	cdq    
  41cd2f:	mov    al,ds:0xb47752fa
  41cd34:	jl     0x41cd51
  41cd36:	(bad)  
  41cd38:	fsub   st(7),st
  41cd3a:	cs stos DWORD PTR es:[edi],eax
  41cd3c:	dec    edx
  41cd3d:	jnp    0x41ccc3
  41cd3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd40:	hlt    
  41cd41:	push   ebp
  41cd42:	push   ds
  41cd43:	jno    0x41cdb6
  41cd45:	push   es
  41cd46:	mov    BYTE PTR [ebx+0x7e83193a],ch
  41cd4c:	adc    cl,BYTE PTR [ecx]
  41cd4e:	or     al,BYTE PTR [esi+0x3c]
  41cd51:	sub    cl,ah
  41cd53:	scas   eax,DWORD PTR es:[edi]
  41cd54:	(bad)  
  41cd56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd57:	jp     0x41cdd6
  41cd59:	jge    0x41cd02
  41cd5b:	sbb    al,0x5a
  41cd5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd5e:	mov    esi,0x6622538d
  41cd63:	mov    ebx,0x54abbd69
  41cd68:	dec    eax
  41cd69:	arpl   WORD PTR [edi],bx
  41cd6b:	xor    DWORD PTR [esi+0x39],edi
  41cd6e:	(bad)  
  41cd6f:	mov    bl,0xfc
  41cd71:	scas   al,BYTE PTR es:[edi]
  41cd72:	or     eax,0xdf2a0a33
  41cd77:	pop    es
  41cd78:	or     cl,0x7a
  41cd7b:	inc    esp
  41cd7c:	cmp    dl,BYTE PTR [esi]
  41cd7e:	enter  0x7372,0x85
  41cd82:	cmc    
  41cd83:	rcr    edi,cl
  41cd85:	clc    
  41cd86:	jns    0x41cda3
  41cd88:	pushf  
  41cd89:	retf   
  41cd8a:	aaa    
  41cd8b:	inc    ecx
  41cd8c:	jl     0x41cd69
  41cd8e:	aam    0xec
  41cd90:	sub    al,0x94
  41cd92:	cmp    dl,bh
  41cd94:	jns    0x41cd81
  41cd96:	mov    eax,0xe4717f5c
  41cd9b:	dec    esp
  41cd9c:	adc    ecx,esi
  41cd9e:	and    DWORD PTR [ebx-0x5d],0xf47fa4be
  41cda5:	iret   
  41cda6:	shl    DWORD PTR [esp+edi*4],0xcc
  41cdaa:	dec    edi
  41cdab:	cld    
  41cdac:	mov    ch,0x75
  41cdae:	nop
  41cdaf:	dec    DWORD PTR [eax-0x60219157]
  41cdb5:	jmp    0xcddc85eb
  41cdba:	push   0x6c74df88
  41cdbf:	mov    al,0xeb
  41cdc1:	arpl   bp,di
  41cdc3:	ret    0xfeae
  41cdc6:	enter  0xe5b,0x5
  41cdca:	pop    eax
  41cdcb:	inc    edi
  41cdcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdcd:	aaa    
  41cdce:	call   0xeba8:0x4ccc0a53
  41cdd5:	adc    DWORD PTR [eax-0x50],0x934b72b8
  41cddc:	sbb    al,BYTE PTR [edi-0x1e6fa786]
  41cde2:	mov    bl,0xda
  41cde4:	and    DWORD PTR [ebp+0xa10f4ac],0x50
  41cdeb:	pop    ebx
  41cdec:	fild   QWORD PTR [edx]
  41cdee:	dec    esp
  41cdef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf0:	scas   eax,DWORD PTR es:[edi]
  41cdf1:	xchg   DWORD PTR [ebx-0x3c],ecx
  41cdf4:	sub    al,BYTE PTR [edi]
  41cdf6:	retf   0x2548
  41cdf9:	push   ss
  41cdfa:	mov    ds:0x70051e38,al
  41cdff:	adc    esi,DWORD PTR [edx-0x4aca6a0b]
  41ce05:	sub    cl,cl
  41ce07:	popf   
  41ce08:	xchg   ecx,eax
  41ce09:	add    BYTE PTR [eax+0x482aa164],dl
  41ce0f:	int3   
  41ce10:	sbb    al,cl
  41ce12:	bound  esi,QWORD PTR [esi+0x7c9f270c]
  41ce18:	sub    DWORD PTR [esi-0x5],ebx
  41ce1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce1c:	jle    0x41cde7
  41ce1e:	inc    edx
  41ce1f:	retf   
  41ce20:	clc    
  41ce21:	push   edi
  41ce22:	ins    DWORD PTR es:[edi],dx
  41ce23:	in     al,dx
  41ce24:	stos   BYTE PTR es:[edi],al
  41ce25:	arpl   dx,dx
  41ce27:	sub    DWORD PTR [ebp+0x51d8534a],edx
  41ce2d:	and    DWORD PTR [esi-0x3238eb1e],edi
  41ce33:	popa   
  41ce34:	cli    
  41ce35:	pop    ss
  41ce36:	mov    ss,ebx
  41ce38:	mov    al,ds:0xa5344066
  41ce3d:	dec    edi
  41ce3e:	mov    al,0x76
  41ce40:	(bad)  
  41ce42:	jns    0x41ce6e
  41ce44:	out    dx,eax
  41ce45:	mov    bh,0x17
  41ce47:	int    0x34
  41ce49:	out    0x29,eax
  41ce4b:	in     al,dx
  41ce4c:	enter  0xdcd6,0x3c
  41ce50:	test   DWORD PTR [ecx+0x6b],ecx
  41ce53:	and    BYTE PTR [ebx+0x62],dh
  41ce56:	call   0x580b4736
  41ce5b:	icebp  
  41ce5c:	pushf  
  41ce5d:	js     0x41ce53
  41ce5f:	lock ret 0x579b
  41ce63:	cmp    bh,bh
  41ce65:	fdiv   QWORD PTR [esi-0x46]
  41ce68:	push   edx
  41ce69:	or     BYTE PTR [ebp+eiz*8-0x10],0x89
  41ce6e:	cmp    esp,edx
  41ce70:	cdq    
  41ce71:	pop    ds
  41ce72:	xor    al,0x97
  41ce74:	(bad)  
  41ce75:	cli    
  41ce76:	mov    dh,0xb7
  41ce78:	loope  0x41ce17
  41ce7a:	pop    esp
  41ce7b:	ins    BYTE PTR es:[edi],dx
  41ce7c:	test   DWORD PTR [edx+0x18],eax
  41ce7f:	fwait
  41ce80:	sub    eax,0x35c796ec
  41ce85:	mov    ebp,0xd0b4e731
  41ce8a:	dec    edx
  41ce8b:	(bad)
  41ce8f:	mov    dh,al
  41ce91:	in     eax,0x79
  41ce93:	xlat   BYTE PTR ds:[ebx]
  41ce94:	xor    BYTE PTR [eax],ch
  41ce96:	scas   eax,DWORD PTR es:[edi]
  41ce97:	mov    ds:0xa60f8393,al
  41ce9c:	ror    esi,cl
  41ce9e:	scas   al,BYTE PTR es:[edi]
  41ce9f:	sar    BYTE PTR [ebx+0x1c],1
  41cea2:	(bad)  
  41cea3:	hlt    
  41cea4:	jne    0x41ce77
  41cea6:	inc    esi
  41cea7:	scas   al,BYTE PTR es:[edi]
  41cea8:	jae    0x41cee8
  41ceaa:	mov    bl,0x82
  41ceac:	pop    edi
  41cead:	(bad)  
  41ceaf:	mov    ah,0x33
  41ceb1:	aas    
  41ceb2:	aad    0xd6
  41ceb4:	aaa    
  41ceb5:	cli    
  41ceb6:	cld    
  41ceb7:	in     eax,0x64
  41ceb9:	imul   esp,DWORD PTR [edx],0xb
  41cebc:	aad    0xbd
  41cebe:	fstp   DWORD PTR [edi]
  41cec0:	adc    al,0x2f
  41cec2:	fist   WORD PTR [edx-0x22]
  41cec5:	push   esi
  41cec6:	or     eax,0x57e9b8ef
  41cecb:	rcr    DWORD PTR [eax],0x2e
  41cece:	sub    al,0x42
  41ced0:	push   cs
  41ced1:	fldenv [edi+0x25]
  41ced4:	lods   al,BYTE PTR ds:[esi]
  41ced5:	in     al,dx
  41ced6:	jbe    0x41cf10
  41ced8:	jmp    0x3cca6ff9
  41cedd:	push   0xbbf1a715
  41cee2:	or     DWORD PTR [ebp+0x5c],0x4bc4d491
  41cee9:	jge    0x41ce9b
  41ceeb:	clc    
  41ceec:	in     eax,0x97
  41ceee:	push   esi
  41ceef:	mov    ebp,0xe123ddb8
  41cef4:	ss mov bh,0x8b
  41cef7:	call   0x2518:0x825de708
  41cefe:	pop    esi
  41ceff:	or     al,0x9
  41cf01:	mov    ch,0xba
  41cf03:	pop    ss
  41cf04:	xchg   edx,eax
  41cf05:	adc    eax,0xda358136
  41cf0a:	ror    bl,1
  41cf0c:	dec    esp
  41cf0d:	mov    ds:0x3b940689,al
  41cf12:	daa    
  41cf13:	(bad)  
  41cf14:	fwait
  41cf15:	lods   al,BYTE PTR ds:[esi]
  41cf16:	pop    ecx
  41cf17:	xchg   esi,eax
  41cf18:	xchg   edx,eax
  41cf19:	and    cl,cl
  41cf1b:	cld    
  41cf1c:	sbb    BYTE PTR [ecx+0x1],al
  41cf1f:	cmp    ecx,DWORD PTR ds:0xb3df1aec
  41cf25:	fdiv   DWORD PTR ss:[edx]
  41cf28:	sub    BYTE PTR ds:0xafd80042,bh
  41cf2e:	jmp    0xcf984a58
  41cf33:	retf   
  41cf34:	retf   0x883a
  41cf37:	sbb    dh,BYTE PTR [ebx]
  41cf39:	push   es
  41cf3a:	jl     0x41cf1e
  41cf3c:	xor    al,0x6
  41cf3e:	jae    0x41cf10
  41cf40:	mov    ebp,0xba183649
  41cf45:	cmp    ebp,ebp
  41cf47:	shr    ebp,0xa8
  41cf4a:	jl     0x41cfac
  41cf4c:	inc    edx
  41cf4d:	daa    
  41cf4e:	jge    0x41cf03
  41cf50:	cdq    
  41cf51:	outs   dx,DWORD PTR ds:[esi]
  41cf52:	cwde   
  41cf53:	xchg   esp,eax
  41cf54:	jp     0x41cfc4
  41cf56:	cli    
  41cf57:	es mov ebp,gs
  41cf5a:	and    DWORD PTR ds:0x3f936fe4,edx
  41cf60:	mov    esi,0x8d827ad7
  41cf65:	add    eax,eax
  41cf67:	pop    edx
  41cf68:	push   cs
  41cf69:	out    dx,eax
  41cf6a:	arpl   WORD PTR [eax],sp
  41cf6c:	and    BYTE PTR [ecx+0x2c],ah
  41cf6f:	or     ebp,ebx
  41cf71:	xor    eax,0x6891465
  41cf76:	mov    ch,0xa8
  41cf78:	push   ds
  41cf79:	jnp    0x41cfc3
  41cf7b:	sub    bl,ah
  41cf7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf7e:	rcr    DWORD PTR ds:0x5f6b6180,1
  41cf84:	in     eax,dx
  41cf85:	sub    eax,0xb2283948
  41cf8a:	ds test eax,esi
  41cf8d:	out    dx,al
  41cf8e:	mov    ?,WORD PTR [esi+0x5fdaec4e]
  41cf94:	sub    al,0x6c
  41cf96:	ret    
  41cf97:	sbb    al,0xcd
  41cf99:	xlat   BYTE PTR ds:[ebx]
  41cf9a:	add    BYTE PTR [edx-0x1340763a],0xd8
  41cfa1:	retf   
  41cfa2:	jo     0x41cf7a
  41cfa4:	inc    ebx
  41cfa5:	inc    ebp
  41cfa6:	xchg   ecx,eax
  41cfa7:	and    DWORD PTR [esi+ecx*4+0x3d4f5879],ebp
  41cfae:	mov    ds:0xfdb25e69,eax
  41cfb3:	cmp    BYTE PTR [ebp+0x474fd193],cl
  41cfb9:	out    0xc,al
  41cfbb:	xor    edi,edi
  41cfbd:	mov    bh,0x2
  41cfbf:	add    ebx,ecx
  41cfc1:	and    edx,DWORD PTR [edx-0x594002f4]
  41cfc7:	dec    ecx
  41cfc8:	push   ebp
  41cfc9:	dec    esp
  41cfca:	pop    ebx
  41cfcb:	ret    0xf9f4
  41cfce:	not    DWORD PTR [edx+0x58f6253a]
  41cfd4:	or     dl,ch
  41cfd6:	test   BYTE PTR [ecx-0x7b],0xfd
  41cfda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfdb:	out    dx,eax
  41cfdc:	daa    
  41cfdd:	xchg   ebx,eax
  41cfde:	jg     0x41cfe1
  41cfe0:	cmp    al,0x9
  41cfe2:	into   
  41cfe3:	sar    eax,0x9e
  41cfe6:	xor    BYTE PTR [ebx],ah
  41cfe8:	xchg   DWORD PTR [edx],edx
  41cfea:	and    DWORD PTR [ecx],ebx
  41cfec:	paddsb mm0,QWORD PTR [esi-0x26]
  41cff0:	aad    0x5c
  41cff2:	sbb    bh,BYTE PTR [ebp+0x69]
  41cff5:	(bad)  
  41cff6:	jmp    0x41cf86
  41cff8:	sub    eax,0x47c9cf19
  41cffd:	push   ds
  41cffe:	std    
  41cfff:	push   0xffffffb8
  41d001:	in     eax,dx
  41d002:	popa   
  41d003:	xchg   ebx,eax
  41d004:	dec    esi
  41d005:	jg     0x41d017
  41d007:	lea    edx,[edi]
  41d009:	add    al,0x50
  41d00b:	(bad)  
  41d00c:	mov    dh,0x51
  41d00e:	xor    BYTE PTR [ebp+0x1779e87c],dh
  41d014:	lea    esp,[eax+ebp*8+0x59]
  41d018:	push   cs
  41d019:	adc    eax,0x458bcd93
  41d01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d01f:	stos   BYTE PTR es:[edi],al
  41d020:	adc    ecx,esp
  41d022:	sbb    DWORD PTR [edi-0x4ce9069a],esp
  41d028:	fmul   st,st(5)
  41d02a:	stos   DWORD PTR es:[edi],eax
  41d02b:	les    esp,FWORD PTR [edi+0x539e3dfe]
  41d031:	int    0xbc
  41d033:	cmp    DWORD PTR [ebp+0x44],eax
  41d036:	and    eax,0x8cd91c55
  41d03b:	cmp    DWORD PTR [edx-0x25],edx
  41d03e:	fsub   QWORD PTR [ecx-0x43]
  41d041:	out    dx,al
  41d042:	cs mov dh,0x87
  41d045:	mov    WORD PTR [edi+0x54],?
  41d048:	push   es
  41d049:	jne    0x41d0b3
  41d04b:	retf   0x187
  41d04e:	aad    0x26
  41d050:	je     0x41d0a3
  41d052:	leave  
  41d053:	sbb    DWORD PTR [esi],0x2a
  41d056:	sbb    edx,0xf123183b
  41d05c:	stos   BYTE PTR es:[edi],al
  41d05d:	jae    0x41d0c3
  41d05f:	popa   
  41d060:	cld    
  41d061:	cli    
  41d062:	mov    BYTE PTR [ecx-0x386aa789],0x7b
  41d069:	or     ch,BYTE PTR [ecx+ecx*4-0x5e4d983a]
  41d070:	and    eax,0xa681fc6c
  41d075:	ficomp WORD PTR ds:0xf0c0ae6c
  41d07b:	scas   al,BYTE PTR es:[edi]
  41d07c:	push   ds
  41d07d:	mov    al,0xd3
  41d07f:	adc    ebp,ecx
  41d081:	add    eax,0x29e88f25
  41d086:	(bad)  
  41d087:	loop   0x41d09a
  41d089:	fadd   QWORD PTR [ebx]
  41d08b:	xchg   edi,eax
  41d08c:	lahf   
  41d08d:	(bad)  
  41d08f:	mov    edx,0x6114a521
  41d094:	dec    edi
  41d095:	lahf   
  41d096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d097:	push   esp
  41d098:	lahf   
  41d099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d09a:	arpl   WORD PTR [eax+0x2109a28d],bp
  41d0a0:	sti    
  41d0a1:	mov    bl,0xf1
  41d0a3:	mov    cl,0xc4
  41d0a5:	sbb    bh,bl
  41d0a7:	gs mov ah,0xd8
  41d0aa:	fstp   QWORD PTR [eax]
  41d0ac:	arpl   WORD PTR [eiz*1+0x300cb39],sp
  41d0b3:	cdq    
  41d0b4:	jg     0x41d0cf
  41d0b6:	mov    esp,0x17e341ea
  41d0bb:	data16 in al,0x61
  41d0be:	and    esi,DWORD PTR [ecx+0x79]
  41d0c1:	(bad)  
  41d0c3:	xchg   edi,esp
  41d0c5:	add    BYTE PTR [ecx-0x14f36c2b],al
  41d0cb:	fstp   TBYTE PTR cs:[eax]
  41d0ce:	outs   dx,BYTE PTR ds:[esi]
  41d0cf:	or     al,BYTE PTR [edi]
  41d0d1:	mov    bl,0xf0
  41d0d3:	out    dx,eax
  41d0d4:	sub    al,0xdb
  41d0d7:	imul   eax,DWORD PTR [esi+ebp*1+0x71e7144c],0x5b
  41d0df:	inc    ecx
  41d0e0:	(bad)  
  41d0e1:	xlat   BYTE PTR ds:[ebx]
  41d0e2:	gs in  eax,0x10
  41d0e5:	ss push ss
  41d0e7:	push   ebp
  41d0e8:	or     eax,edi
  41d0ea:	xor    eax,0xa44405f3
  41d0ef:	mov    eax,0x833d9c57
  41d0f4:	aas    
  41d0f5:	mov    ebx,0x64c914fe
  41d0fa:	loop   0x41d082
  41d0fc:	dec    ecx
  41d0fd:	push   es
  41d0fe:	xor    eax,0xd0485ad5
  41d103:	adc    DWORD PTR [esi-0x55f05627],ebx
  41d109:	or     BYTE PTR [edi],al
  41d10b:	(bad)  
  41d10c:	or     eax,0xc82f2d00
  41d111:	pushf  
  41d112:	push   ecx
  41d113:	sbb    eax,0x5e02a7fb
  41d118:	outs   dx,BYTE PTR ds:[esi]
  41d119:	sub    DWORD PTR [ebp+ebp*2-0x22],edi
  41d11d:	sahf   
  41d11e:	shl    esp,0x42
  41d121:	mov    esp,0xeca82582
  41d126:	js     0x41d0e1
  41d128:	data16 and BYTE PTR [esi-0x1c62d962],cl
  41d12f:	or     al,0xea
  41d131:	push   ebx
  41d132:	imul   DWORD PTR [edx+0x9f8eb09]
  41d138:	retf   
  41d139:	out    0xf6,al
  41d13b:	push   ss
  41d13c:	xor    ecx,ecx
  41d13e:	inc    ebp
  41d13f:	dec    eax
  41d140:	ja     0x41d13a
  41d142:	push   cs
  41d143:	pop    edx
  41d144:	jp     0x41d164
  41d146:	inc    esp
  41d147:	inc    ebp
  41d148:	jmp    0xf1e3:0xc953c193
  41d14f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d150:	add    al,0xe9
  41d152:	les    ebp,FWORD PTR [esi-0x56]
  41d155:	cmp    ch,BYTE PTR [edi]
  41d157:	cmp    DWORD PTR [edx-0x42],edi
  41d15a:	mov    ebp,0x2ca516ab
  41d15f:	mov    ebp,0xb8ab93bb
  41d164:	add    edi,DWORD PTR [ecx-0x45]
  41d167:	hlt    
  41d168:	jbe    0x41d1bf
  41d16a:	add    BYTE PTR [esi+0x4834fd3f],dh
  41d170:	ins    DWORD PTR es:[edi],dx
  41d171:	mov    eax,0x895b757f
  41d176:	mov    ch,BYTE PTR [edi+0x7ad54f9]
  41d17c:	mov    eax,ds:0xd7987d35
  41d181:	out    0x4f,al
  41d183:	mov    edi,0xd8199e96
  41d188:	add    al,ch
  41d18a:	add    bl,BYTE PTR [eax+eiz*8+0x51]
  41d18e:	out    dx,al
  41d18f:	fwait
  41d190:	ja     0x41d147
  41d192:	xlat   BYTE PTR ds:[ebx]
  41d193:	pop    ebx
  41d194:	add    al,0xd9
  41d196:	xor    DWORD PTR [esi+0x29],ebp
  41d199:	inc    edx
  41d19a:	dec    eax
  41d19b:	fistp  QWORD PTR [ebp-0x49]
  41d19e:	mov    ds:0x48316fdc,al
  41d1a3:	add    al,0xa2
  41d1a5:	xor    DWORD PTR [edx],esi
  41d1a7:	jle    0x41d16a
  41d1a9:	jns    0x41d15d
  41d1ab:	jmp    0x8d3f:0xca0e2240
  41d1b2:	int    0x68
  41d1b4:	mov    ah,0x4f
  41d1b6:	xor    edx,DWORD PTR [eax-0x18]
  41d1b9:	(bad)  
  41d1ba:	jecxz  0x41d1c7
  41d1bc:	inc    eax
  41d1bd:	sti    
  41d1be:	jae    0x41d1ba
  41d1c0:	fwait
  41d1c1:	mov    al,es:0x5ca0d6c1
  41d1c7:	pop    edi
  41d1c8:	cmp    ebx,DWORD PTR [ecx+ebp*2-0x74dbb1e2]
  41d1cf:	mov    ebx,?
  41d1d1:	xchg   edi,eax
  41d1d2:	fbld   TBYTE PTR [eax-0x139bf2f1]
  41d1d8:	out    0xb4,eax
  41d1da:	inc    edx
  41d1db:	out    0xdd,al
  41d1dd:	dec    ecx
  41d1de:	mov    edi,ecx
  41d1e0:	sti    
  41d1e1:	mov    ebp,0xc40bfd5c
  41d1e6:	fimul  DWORD PTR [ebx+0x4f]
  41d1e9:	ins    BYTE PTR es:[edi],dx
  41d1ea:	not    DWORD PTR [eax-0x3b443b68]
  41d1f0:	jno    0x41d1d7
  41d1f2:	xchg   ebp,eax
  41d1f3:	loop   0x41d1cc
  41d1f5:	inc    esi
  41d1f6:	push   ebp
  41d1f7:	or     ecx,edi
  41d1f9:	(bad)  
  41d1fb:	mov    edx,DWORD PTR [eax-0x1]
  41d1fe:	daa    
  41d1ff:	out    0x12,eax
  41d201:	ins    DWORD PTR es:[edi],dx
  41d202:	cli    
  41d203:	sub    al,0xdd
  41d205:	xchg   edi,eax
  41d206:	imul   ebp,edx,0x43210400
  41d20c:	outs   dx,DWORD PTR ds:[esi]
  41d20d:	mov    ds,WORD PTR [ecx+0x6cc9ecae]
  41d213:	in     al,0x6d
  41d215:	push   ecx
  41d216:	jg     0x41d214
  41d218:	shr    BYTE PTR [eax],1
  41d21a:	push   edi
  41d21b:	lods   eax,DWORD PTR ds:[esi]
  41d21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d21d:	or     BYTE PTR [ebp+0x35fae06],cl
  41d223:	mov    dl,0xae
  41d225:	mov    ebx,0x2a041e89
  41d22a:	pop    es
  41d22b:	test   dh,bh
  41d22d:	sub    eax,0xb314b73c
  41d232:	mov    bh,0xc
  41d234:	mov    eax,ds:0x1a9dbf79
  41d239:	mov    ecx,0x757745bf
  41d23e:	mov    al,0x25
  41d240:	scas   al,BYTE PTR es:[edi]
  41d241:	add    esi,ebx
  41d243:	mov    ebp,0x9d4d8eef
  41d248:	cs jnp 0x41d21c
  41d24b:	test   DWORD PTR [di+0x483c],esp
  41d250:	cdq    
  41d251:	add    BYTE PTR [ebx+0xf],dl
  41d254:	aam    0x6a
  41d256:	mov    ecx,DWORD PTR [ecx-0x4e]
  41d259:	add    dl,ch
  41d25b:	outs   dx,DWORD PTR ds:[esi]
  41d25c:	fimul  WORD PTR [edx-0x70]
  41d25f:	outs   dx,DWORD PTR ds:[esi]
  41d260:	js     0x41d221
  41d262:	lea    ecx,[eax+0x34]
  41d265:	js     0x41d23a
  41d267:	rcr    DWORD PTR [eax-0x62],cl
  41d26a:	add    eax,0x7b51b445
  41d26f:	mov    ebp,0x56f50acd
  41d274:	push   0xffffffd1
  41d276:	(bad)  
  41d277:	gs in  al,dx
  41d279:	push   ss
  41d27a:	jmp    0x176a:0x1fe6a6e1
  41d281:	clc    
  41d282:	fisttp WORD PTR [edi-0x49]
  41d285:	outs   dx,BYTE PTR ds:[esi]
  41d286:	lods   al,BYTE PTR ds:[esi]
  41d287:	stos   BYTE PTR es:[edi],al
  41d288:	push   es
  41d289:	adc    ch,BYTE PTR [eax]
  41d28b:	inc    eax
  41d28c:	xor    al,0xc2
  41d28e:	stos   BYTE PTR es:[edi],al
  41d28f:	add    BYTE PTR [edx],al
  41d291:	scas   al,BYTE PTR es:[edi]
  41d292:	lods   eax,DWORD PTR ds:[esi]
  41d293:	fldenv [ebp+0x1707f50f]
  41d299:	mov    eax,ds:0x39f6bf59
  41d29e:	mov    esi,0xab598646
  41d2a3:	icebp  
  41d2a4:	sbb    DWORD PTR [ebx-0x43e66471],edx
  41d2aa:	jle    0x41d312
  41d2ac:	es or  esi,ebp
  41d2af:	add    al,0x5f
  41d2b1:	xlat   BYTE PTR ds:[ebx]
  41d2b2:	xor    eax,0x7dd851
  41d2b7:	mov    eax,ds:0xb0df6321
  41d2bc:	sub    DWORD PTR [ecx-0x2a],edx
  41d2bf:	setp   BYTE PTR [ebp+eax*4-0x11]
  41d2c4:	cdq    
  41d2c5:	push   ebx
  41d2c6:	pop    edi
  41d2c7:	daa    
  41d2c8:	(bad)  
  41d2c9:	stc    
  41d2ca:	adc    BYTE PTR [ebx+0x6b],ch
  41d2cd:	scas   al,BYTE PTR es:[edi]
  41d2ce:	mov    esi,0xda6ea756
  41d2d3:	mov    ch,0x9c
  41d2d5:	jp     0x41d338
  41d2d7:	mov    DWORD PTR es:[ebx+0x291a1a90],eax
  41d2de:	mov    eax,ds:0x1134f5d
  41d2e3:	loope  0x41d2b0
  41d2e5:	pop    esp
  41d2e6:	adc    BYTE PTR [edx+ebx*8-0x5d126b84],bl
  41d2ed:	jmp    0xe90d:0xad29149c
  41d2f4:	add    BYTE PTR [ecx-0x2f7b12db],dh
  41d2fa:	lahf   
  41d2fb:	xor    esp,edi
  41d2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2fe:	add    al,0x41
  41d300:	pop    ebp
  41d301:	int    0x83
  41d303:	out    dx,al
  41d304:	mov    ebx,0x8e36290d
  41d309:	xor    DWORD PTR [ebx-0x221ca59c],eax
  41d30f:	jb     0x41d362
  41d311:	sub    DWORD PTR [ebx+0x46],esi
  41d314:	push   edi
  41d315:	jmp    0x43d0:0x5158adff
  41d31c:	lods   al,BYTE PTR ds:[esi]
  41d31d:	shl    edx,0x3f
  41d320:	test   esi,eax
  41d322:	inc    ebp
  41d323:	dec    ebx
  41d324:	cld    
  41d325:	outs   dx,BYTE PTR ds:[esi]
  41d326:	mov    esi,0x338189b9
  41d32b:	push   cs
  41d32c:	(bad)  
  41d32e:	sti    
  41d32f:	inc    ebx
  41d330:	mov    DWORD PTR ds:[edx+ecx*2],ebx
  41d334:	mov    bl,0x45
  41d336:	into   
  41d337:	cmp    cl,BYTE PTR [edx-0x3955a831]
  41d33d:	and    BYTE PTR [esp+0x6f5ed009],ah
  41d344:	push   cs
  41d345:	and    edi,DWORD PTR [edi]
  41d347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d348:	or     BYTE PTR [ecx+0x3e],0x89
  41d34c:	shl    al,0xbd
  41d34f:	cmp    ch,cl
  41d351:	into   
  41d352:	jge    0x41d392
  41d354:	pushf  
  41d355:	sti    
  41d356:	xor    esi,ecx
  41d358:	bound  esp,QWORD PTR [ebp-0x79]
  41d35b:	addr16 int3 
  41d35d:	jns    0x41d34e
  41d35f:	add    DWORD PTR [ebx+0x62f4bde3],eax
  41d365:	sbb    edx,DWORD PTR [edi+0x610d06e1]
  41d36b:	ret    
  41d36c:	mov    cl,0xa1
  41d36e:	mov    al,0x14
  41d370:	push   eax
  41d371:	xchg   ebx,eax
  41d372:	or     cl,BYTE PTR [ebx+0x2532d181]
  41d378:	or     dh,al
  41d37a:	fidiv  WORD PTR [edi]
  41d37c:	sub    BYTE PTR [ecx-0x33],0xbe
  41d380:	lahf   
  41d381:	push   cs
  41d382:	jmp    0xdbdc:0xf17587b9
  41d389:	outs   dx,BYTE PTR ds:[esi]
  41d38a:	dec    eax
  41d38b:	aaa    
  41d38c:	jno    0x41d3bc
  41d38e:	add    esi,DWORD PTR [edx+esi*1]
  41d391:	sub    eax,0xcec013a6
  41d396:	or     BYTE PTR [esi+eiz*1],dl
  41d399:	and    al,0x18
  41d39b:	shl    DWORD PTR [ebx+0x61028c6c],cl
  41d3a1:	sti    
  41d3a2:	jg     0x41d390
  41d3a4:	xchg   edi,eax
  41d3a5:	outs   dx,BYTE PTR ds:[esi]
  41d3a6:	push   ecx
  41d3a7:	inc    esp
  41d3a8:	push   es
  41d3a9:	inc    edi
  41d3ab:	jae    0x41d3a4
  41d3ad:	xchg   edx,eax
  41d3ae:	popf   
  41d3af:	dec    edi
  41d3b0:	hlt    
  41d3b1:	aaa    
  41d3b2:	test   BYTE PTR [edx],cl
  41d3b4:	fdivr  QWORD PTR [edi+0x21]
  41d3b7:	fwait
  41d3b8:	push   eax
  41d3b9:	inc    edi
  41d3ba:	arpl   WORD PTR [esi],ax
  41d3bc:	fwait
  41d3bd:	ret    0x12bd
  41d3c0:	dec    edx
  41d3c1:	xor    al,dl
  41d3c3:	sub    dl,BYTE PTR [esi]
  41d3c5:	ss xchg ecx,eax
  41d3c7:	sti    
  41d3c8:	(bad)  
  41d3ca:	mov    al,ds:0xa5b79fb4
  41d3cf:	retf   
  41d3d0:	mov    esi,0x815e283e
  41d3d5:	or     eax,0xc1049227
  41d3da:	out    dx,eax
  41d3db:	jmp    0xa38c648a
  41d3e0:	pop    edi
  41d3e1:	sahf   
  41d3e2:	cs ret 0x37d5
  41d3e6:	xchg   ecx,eax
  41d3e7:	aam    0x93
  41d3e9:	scas   eax,DWORD PTR es:[edi]
  41d3ea:	dec    eax
  41d3eb:	ins    BYTE PTR es:[edi],dx
  41d3ec:	sbb    ch,BYTE PTR [edx-0x1f]
  41d3ef:	cmp    ah,dh
  41d3f1:	loop   0x41d37a
  41d3f3:	sbb    al,0x35
  41d3f5:	ficomp DWORD PTR [ebx]
  41d3f7:	ss inc ebx
  41d3f9:	jbe    0x41d380
  41d3fb:	(bad)
  41d3fe:	pop    ebx
  41d3ff:	cdq    
  41d400:	jne    0x41d437
  41d402:	bound  ebx,QWORD PTR [edi]
  41d404:	and    BYTE PTR [ebx+0x52],0xa5
  41d408:	es inc ebp
  41d40a:	out    0x70,eax
  41d40c:	ror    DWORD PTR es:[ebx+0x7f],1
  41d410:	xor    edx,ecx
  41d412:	cmc    
  41d413:	jae    0x41d3e8
  41d415:	jo     0x41d481
  41d417:	add    BYTE PTR [ecx+0x1f],al
  41d41a:	imul   DWORD PTR [ebx-0x57]
  41d41d:	push   edx
  41d41e:	aaa    
  41d41f:	mov    ch,0x30
  41d421:	lock inc ebp
  41d423:	mov    ah,0x7b
  41d425:	xchg   ecx,eax
  41d426:	mov    bh,0x23
  41d428:	dec    eax
  41d429:	jl     0x41d3ab
  41d42b:	ja     0x41d4a8
  41d42d:	aas    
  41d42e:	inc    ebx
  41d42f:	call   eax
  41d431:	ds mov dl,0x50
  41d434:	xchg   ebx,eax
  41d435:	or     ch,BYTE PTR [ebx-0x5ec9de1b]
  41d43b:	adc    eax,0x96fdec44
  41d440:	pop    esi
  41d441:	and    dl,ah
  41d443:	shl    DWORD PTR [ebx+edi*4+0x1833ea10],0xb9
  41d44b:	cmp    eax,DWORD PTR [ecx-0x6612a98a]
  41d451:	mov    esp,0x28a49c71
  41d456:	inc    BYTE PTR [ecx]
  41d458:	xchg   ebp,eax
  41d459:	ret    0x1eaf
  41d45c:	out    dx,eax
  41d45d:	xchg   ebx,eax
  41d45e:	inc    ebx
  41d45f:	int3   
  41d460:	push   esp
  41d461:	(bad)  
  41d462:	clc    
  41d463:	mov    ch,BYTE PTR [eax+0x564b99fb]
  41d469:	mov    ds:0x36be880e,eax
  41d46e:	jno    0x41d4b9
  41d470:	ror    BYTE PTR [edi],cl
  41d472:	xchg   ebp,eax
  41d473:	fsubr  st(0),st
  41d475:	lds    esp,FWORD PTR [edi-0x52d326dc]
  41d47b:	lds    ebp,FWORD PTR ds:[ebx+0x21]
  41d47f:	xor    esp,DWORD PTR [eax]
  41d481:	imul   edx,DWORD PTR [edx-0x24],0x9e5ca04f
  41d488:	aas    
  41d489:	scas   al,BYTE PTR es:[edi]
  41d48a:	sub    al,0x1f
  41d48c:	sub    al,0xba
  41d48e:	and    ecx,DWORD PTR [ebx]
  41d490:	arpl   WORD PTR [ebp-0x53384354],sp
  41d496:	jnp    0x41d480
  41d498:	push   edi
  41d499:	push   ecx
  41d49a:	in     al,0x9d
  41d49c:	(bad)  [esi]
  41d49e:	dec    ebp
  41d49f:	push   cs
  41d4a0:	cld    
  41d4a1:	arpl   WORD PTR [ecx],sp
  41d4a3:	push   0x51
  41d4a5:	or     bl,BYTE PTR [ebp-0x53845b67]
  41d4ab:	push   DWORD PTR [ebx-0x63b7d9b1]
  41d4b1:	xchg   edx,eax
  41d4b2:	test   esi,ecx
  41d4b4:	jmp    0x41d51e
  41d4b6:	cmp    BYTE PTR [ebp-0x3e62ee0a],dl
  41d4bc:	jns    0x41d518
  41d4be:	mov    ebp,edi
  41d4c0:	xchg   DWORD PTR [ebp-0x77],ecx
  41d4c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4c4:	stos   BYTE PTR es:[edi],al
  41d4c5:	xchg   BYTE PTR [esi-0x72],dh
  41d4c8:	mov    esi,0xebca6376
  41d4cd:	int    0xa4
  41d4cf:	test   BYTE PTR [edi-0x20],dl
  41d4d2:	adc    al,0x82
  41d4d4:	sub    esp,0x31
  41d4d7:	xor    al,0xad
  41d4d9:	inc    ebx
  41d4da:	test   al,0x3e
  41d4dc:	ret    0xfe6b
  41d4df:	xchg   edi,eax
  41d4e0:	cmp    al,0xb9
  41d4e2:	xchg   BYTE PTR [edi],cl
  41d4e4:	mov    esp,0xe04aae1a
  41d4e9:	jmp    0x70b1:0x441306e
  41d4f0:	mov    bh,0x73
  41d4f2:	call   0xd437:0xab3deee
  41d4f9:	imul   cl
  41d4fb:	pop    ebp
  41d4fc:	int3   
  41d4fd:	aaa    
  41d4fe:	iret   
  41d4ff:	sbb    BYTE PTR [ebp-0x27],ah
  41d502:	or     DWORD PTR [ecx+0x6d57bfcb],edi
  41d508:	sub    al,0x9
  41d50a:	push   ds
  41d50b:	and    DWORD PTR [edi+eiz*4],0x38
  41d50f:	mov    ecx,0x531791f4
  41d514:	ret    0x413d
  41d517:	adc    ebp,ebp
  41d519:	shl    DWORD PTR [ebx-0x11eb97ce],0xec
  41d520:	xchg   ebp,eax
  41d521:	fistp  QWORD PTR [edx-0x66]
  41d524:	cmp    DWORD PTR [ecx+0x2e],ecx
  41d527:	jns    0x41d4e6
  41d529:	sub    BYTE PTR [esi+ebp*8-0x1f],bl
  41d52d:	dec    ecx
  41d52e:	test   dh,ch
  41d530:	or     DWORD PTR [edi-0x6c],0xffffffb0
  41d534:	bound  esi,QWORD PTR ds:0x6eb3b628
  41d53a:	xlat   BYTE PTR ds:[ebx]
  41d53b:	adc    edi,DWORD PTR [ecx+0xb]
  41d53e:	iret   
  41d53f:	jnp    0x41d582
  41d541:	or     edi,DWORD PTR [ebx+0x67ac0d44]
  41d547:	into   
  41d548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d549:	in     eax,0x57
  41d54b:	jl     0x41d4d2
  41d54d:	in     eax,dx
  41d54e:	adc    al,0xc4
  41d550:	and    al,0xf2
  41d552:	(bad)  
  41d554:	mov    bl,0x52
  41d556:	(bad)  
  41d557:	fucomip st,st(6)
  41d559:	dec    esi
  41d55a:	push   ebx
  41d55b:	(bad)  
  41d55c:	inc    ecx
  41d55d:	lods   al,BYTE PTR ds:[esi]
  41d55e:	dec    edi
  41d55f:	push   ss
  41d560:	(bad)  
  41d561:	and    ecx,DWORD PTR [ebx]
  41d563:	add    eax,0x1f595136
  41d568:	xor    bh,BYTE PTR [eax+esi*1+0x3]
  41d56c:	cmp    DWORD PTR [ebx+0x54],ebx
  41d56f:	rcr    eax,0xeb
  41d572:	nop
  41d573:	cwde   
  41d574:	push   cs
  41d575:	mov    ds:0x56f5164f,eax
  41d57a:	mov    bl,BYTE PTR [eax]
  41d57c:	scas   al,BYTE PTR es:[edi]
  41d57d:	pop    esp
  41d57e:	dec    edi
  41d57f:	mov    esp,0x30df73a2
  41d584:	enter  0x9da9,0x9a
  41d588:	sub    DWORD PTR [ebx+edi*2-0x96f4520],ebx
  41d58f:	leave  
  41d590:	pop    edx
  41d591:	lock sub DWORD PTR ds:0xe1320600,edi
  41d598:	xchg   ecx,eax
  41d599:	idiv   BYTE PTR [ebx-0x79b61fd0]
  41d59f:	xor    bh,BYTE PTR [ebx]
  41d5a1:	fwait
  41d5a2:	push   edi
  41d5a3:	inc    edx
  41d5a4:	mov    DWORD PTR [ebx],edi
  41d5a6:	repz pop ebp
  41d5a8:	xchg   edi,eax
  41d5a9:	dec    cl
  41d5ab:	out    0x76,al
  41d5ad:	les    esp,FWORD PTR [esi+0x4fd74916]
  41d5b3:	scas   al,BYTE PTR es:[edi]
  41d5b4:	ss loope 0x41d57c
  41d5b7:	nop
  41d5b8:	imul   ebx,DWORD PTR [ebp+0x9],0x30
  41d5bc:	dec    esi
  41d5bd:	mov    edi,0x29dfbc49
  41d5c2:	xchg   ebp,eax
  41d5c3:	stos   BYTE PTR es:[edi],al
  41d5c4:	push   0x72
  41d5c6:	pusha  
  41d5c7:	mov    ds:0xd949967c,al
  41d5cc:	dec    ebx
  41d5cd:	ret    
  41d5ce:	pop    ss
  41d5cf:	addr16 out 0xca,eax
  41d5d2:	iret   
  41d5d3:	sbb    BYTE PTR [edi],dh
  41d5d5:	mov    edx,0x801a12af
  41d5da:	sub    DWORD PTR ds:0x4bba30af,esp
  41d5e0:	mov    bl,0xbf
  41d5e2:	mov    dh,0x79
  41d5e4:	sbb    DWORD PTR [ebp+0x5dd7c21d],0x6dd172dc
  41d5ee:	es retf 0xb6b5
  41d5f2:	das    
  41d5f3:	scas   al,BYTE PTR es:[edi]
  41d5f4:	icebp  
  41d5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f6:	or     DWORD PTR ds:0x69d2d2b1,edx
  41d5fc:	sti    
  41d5fd:	leave  
  41d5fe:	jecxz  0x41d62f
  41d600:	pop    esi
  41d601:	mov    cs,WORD PTR [ebp+0x63]
  41d604:	(bad)  [ebx]
  41d606:	aad    0xdd
  41d608:	imul   ebp,DWORD PTR [esi+0x7ea0b149],0x3c773b8a
  41d612:	(bad)
  41d615:	cs push ebp
  41d617:	pop    ebx
  41d618:	gs stos DWORD PTR es:[edi],eax
  41d61a:	sub    BYTE PTR [ecx+0x5e084d67],0xdf
  41d621:	fisubr DWORD PTR [esi*8-0x30a96807]
  41d628:	jle    0x41d647
  41d62a:	ret    
  41d62b:	mov    dl,0xfe
  41d62d:	clc    
  41d62e:	cdq    
  41d62f:	jno    0x41d615
  41d631:	dec    ecx
  41d632:	sub    al,dh
  41d634:	dec    esp
  41d635:	xlat   BYTE PTR ds:[ebx]
  41d636:	sti    
  41d637:	xor    ecx,edx
  41d639:	jnp    0x41d5dd
  41d63b:	sbb    DWORD PTR ds:0x190a1d62,ebx
  41d641:	aam    0x9d
  41d643:	in     al,dx
  41d644:	inc    edi
  41d645:	lods   al,BYTE PTR ds:[esi]
  41d646:	retf   0x3a1a
  41d649:	test   cl,0x88
  41d64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d64d:	stos   DWORD PTR es:[edi],eax
  41d64e:	sti    
  41d64f:	mov    dl,BYTE PTR [ebx]
  41d651:	or     al,BYTE PTR [esi+0x35]
  41d654:	pop    ss
  41d655:	xchg   BYTE PTR [edx+0x20],ah
  41d658:	inc    esi
  41d659:	xchg   edx,eax
  41d65a:	out    0xc0,eax
  41d65c:	inc    edi
  41d65d:	(bad)  
  41d65e:	nop
  41d65f:	nop
  41d660:	mov    ebp,0xd5a0ade5
  41d665:	add    edx,edx
  41d667:	sub    BYTE PTR ds:0xa51e2b20,dh
  41d66d:	adc    esi,DWORD PTR [ecx-0x39]
  41d670:	jmp    0x3c0d:0x1588976a
  41d677:	(bad)  
  41d678:	gs push ss
  41d67a:	cwde   
  41d67b:	arpl   WORD PTR [esi+ebx*2-0x7c],di
  41d67f:	pop    edi
  41d680:	test   eax,0xa866d873
  41d685:	mov    dh,0xef
  41d687:	ss addr16 out dx,eax
  41d68a:	movhps xmm7,QWORD PTR [ecx]
  41d68d:	stos   DWORD PTR es:[edi],eax
  41d68e:	in     eax,0x7e
  41d690:	xlat   BYTE PTR ds:[ebx]
  41d691:	cld    
  41d692:	xor    cl,BYTE PTR [edx]
  41d694:	fisubr WORD PTR [esi]
  41d696:	jle    0x41d641
  41d698:	cmc    
  41d699:	sub    al,0x43
  41d69b:	adc    edi,eax
  41d69d:	fdiv   DWORD PTR [esi]
  41d69f:	popf   
  41d6a0:	push   ds
  41d6a1:	ret    
  41d6a2:	fstp   QWORD PTR [eax-0x22]
  41d6a5:	dec    eax
  41d6a6:	lds    esi,FWORD PTR [eax+0x6194ca8a]
  41d6ac:	scas   al,BYTE PTR es:[edi]
  41d6ad:	push   es
  41d6ae:	js     0x41d68c
  41d6b0:	shl    al,1
  41d6b2:	int    0x29
  41d6b4:	sub    eax,0xc8d0f5b9
  41d6b9:	inc    ebp
  41d6ba:	hlt    
  41d6bb:	retf   0x5966
  41d6be:	imul   esi,DWORD PTR [ebp-0x8e67bab],0x7571ba32
  41d6c8:	cmp    BYTE PTR [edx-0x25],0x8
  41d6cc:	push   ecx
  41d6cd:	ds jns 0x41d6c7
  41d6d0:	ret    0xe40e
  41d6d3:	ret    
  41d6d4:	imul   ebp,DWORD PTR [eax+0x59],0x51725e68
  41d6db:	xor    ecx,edi
  41d6dd:	seta   BYTE PTR [ebp-0x16f0551d]
  41d6e4:	mov    cl,0x47
  41d6e6:	(bad)  
  41d6e7:	(bad)  
  41d6e9:	jg     0x41d737
  41d6eb:	mov    al,0x31
  41d6ed:	jmp    0x41d736
  41d6ef:	sub    DWORD PTR [ebp+0x49],esi
  41d6f2:	out    0xe2,eax
  41d6f4:	bswap  esp
  41d6f6:	and    BYTE PTR [ebx-0x71236109],ah
  41d6fc:	sub    DWORD PTR [ecx],0x671317fe
  41d702:	stos   DWORD PTR es:[edi],eax
  41d703:	xchg   DWORD PTR [edi+0x42],ebp
  41d706:	aad    0xe4
  41d708:	push   ebp
  41d709:	in     eax,dx
  41d70a:	std    
  41d70b:	(bad)  
  41d70c:	fiadd  DWORD PTR [edx+0x40]
  41d70f:	(bad)  
  41d710:	mov    bh,0x5e
  41d712:	inc    ebx
  41d713:	(bad)  
  41d714:	sti    
  41d715:	push   es
  41d716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d717:	stos   BYTE PTR es:[edi],al
  41d718:	xchg   ebp,eax
  41d719:	(bad)  
  41d71a:	cdq    
  41d71b:	inc    ebx
  41d71c:	push   esp
  41d71d:	mov    esi,0xbd8e4e54
  41d722:	xchg   edx,eax
  41d723:	test   al,0xde
  41d725:	test   al,0x4a
  41d727:	jbe    0x41d734
  41d729:	outs   dx,DWORD PTR ds:[esi]
  41d72a:	int3   
  41d72b:	rcr    BYTE PTR [edi+0x40f2263b],cl
  41d731:	nop
  41d732:	repz or ah,BYTE PTR [ebp-0x6b]
  41d736:	int    0xb7
  41d738:	retf   0x4dcd
  41d73b:	mov    esp,0x1722e484
  41d740:	cs push ss
  41d742:	sbb    al,0xf5
  41d744:	xchg   ecx,eax
  41d745:	retf   0x1e20
  41d748:	les    ebx,FWORD PTR [edi-0x35]
  41d74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d74c:	inc    ebx
  41d74d:	mov    ds:0x954095ec,eax
  41d752:	jmp    0x926c:0xe9f5b109
  41d759:	push   ebx
  41d75a:	pop    ss
  41d75b:	shr    BYTE PTR [ecx-0x212a2069],0x7
  41d762:	sub    DWORD PTR [ebp+0xb98a71d],esi
  41d768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d769:	mov    al,BYTE PTR [ebp+0x4e]
  41d76c:	fsubr  DWORD PTR [ecx+ecx*4+0x7b]
  41d770:	xor    esi,0xdfd5a724
  41d776:	inc    ebp
  41d777:	ret    0x42
  41d77a:	mov    BYTE PTR [edi+0x53ec2790],al
  41d780:	push   ds
  41d781:	aas    
  41d782:	outs   dx,BYTE PTR ds:[esi]
  41d783:	xchg   ecx,eax
  41d784:	add    bl,al
  41d786:	aaa    
  41d787:	call   0x6e9baa66
  41d78c:	fwait
  41d78d:	mov    cl,0x9f
  41d78f:	aad    0x6d
  41d791:	sub    eax,0x8f77eaf7
  41d796:	mov    esp,DWORD PTR [esp+eax*2]
  41d799:	jo     0x41d818
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	scas   al,BYTE PTR es:[edi]
  41d79d:	test   DWORD PTR ds:0xee5bb615,edx
  41d7a3:	in     al,0xe6
  41d7a5:	ret    0xcc8e
  41d7a8:	jno    0x41d7aa
  41d7aa:	call   0x66f9:0x8910c86
  41d7b1:	in     eax,0xd2
  41d7b3:	sub    BYTE PTR [eax+0x3381f261],ch
  41d7b9:	add    al,0x9
  41d7bb:	xor    ebx,DWORD PTR [edx+0x10]
  41d7be:	push   cs
  41d7bf:	mov    ecx,0xe434de6a
  41d7c4:	out    dx,eax
  41d7c5:	pop    ss
  41d7c6:	mov    eax,ecx
  41d7c8:	jecxz  0x41d784
  41d7ca:	push   eax
  41d7cb:	int    0x57
  41d7cd:	xchg   ch,bl
  41d7cf:	push   ds
  41d7d0:	mov    esp,0xb3874900
  41d7d5:	shr    ecx,1
  41d7d7:	pop    edx
  41d7d8:	pop    ebp
  41d7d9:	jge    0x41d78e
  41d7db:	xlat   BYTE PTR ds:[ebx]
  41d7dc:	fst    QWORD PTR [edi]
  41d7de:	pop    es
  41d7df:	push   ds
  41d7e0:	push   esp
  41d7e1:	test   eax,0xf5a9109e
  41d7e6:	xchg   esp,eax
  41d7e7:	les    edi,FWORD PTR [edx-0x68]
  41d7ea:	call   0x67af:0x450f8bde
  41d7f1:	(bad)  
  41d7f2:	(bad)  
  41d7f3:	sub    eax,0x5696fe57
  41d7f8:	les    edx,FWORD PTR [edx-0x51]
  41d7fb:	jno    0x41d834
  41d7fd:	cdq    
  41d7fe:	adc    eax,0x1ecab460
  41d803:	jmp    0xd2d2ecaf
  41d808:	mov    esp,0x41fce089
  41d80d:	cld    
  41d80e:	xlat   BYTE PTR ds:[ebx]
  41d80f:	inc    esi
  41d810:	jge    0x41d7a9
  41d812:	cmc    
  41d813:	push   esp
  41d814:	icebp  
  41d815:	inc    ebx
  41d816:	clc    
  41d817:	outs   dx,BYTE PTR ds:[esi]
  41d818:	(bad)  
  41d819:	clc    
  41d81a:	scas   eax,DWORD PTR es:[edi]
  41d81b:	aad    0x9e
  41d81d:	and    BYTE PTR [esi*8-0x2c5bd4b7],cl
  41d824:	jge    0x41d815
  41d826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d827:	jmp    0xa462:0xf797411
  41d82e:	sar    eax,0xb7
  41d831:	mov    esp,0x94d10613
  41d836:	pop    ds
  41d837:	or     al,0xf7
  41d839:	gs inc edi
  41d83b:	jo     0x41d7d0
  41d83d:	mov    ah,0x34
  41d83f:	int3   
  41d840:	gs icebp 
  41d842:	xor    DWORD PTR [eax-0x73],esp
  41d845:	push   0xffffffab
  41d847:	dec    edx
  41d848:	cmp    al,0xa6
  41d84a:	in     al,dx
  41d84b:	mov    ecx,0x4f78128c
  41d850:	sub    al,0x5c
  41d852:	sub    al,BYTE PTR ds:0x505ac200
  41d858:	in     eax,0x9
  41d85a:	mov    eax,0xf4582c6
  41d85f:	or     edx,DWORD PTR [edi-0x6e8cc446]
  41d865:	cmp    BYTE PTR [ebp-0x65],0x21
  41d869:	xor    eax,0x83c856de
  41d86e:	jecxz  0x41d886
  41d870:	jnp    0x41d88e
  41d872:	ficom  DWORD PTR [esi+0x5d720cb7]
  41d878:	retf   0x11c1
  41d87b:	mov    al,ds:0x12adbda0
  41d880:	jmp    FWORD PTR [ebp-0x1e]
  41d883:	adc    edi,DWORD PTR [ebp-0x59]
  41d886:	aad    0x15
  41d888:	jne    0x41d89c
  41d88a:	popa   
  41d88b:	hlt    
  41d88c:	mov    ch,0x62
  41d88e:	lods   al,BYTE PTR ds:[esi]
  41d88f:	cmp    bh,BYTE PTR [esi]
  41d891:	mov    cl,BYTE PTR [ebx-0x77]
  41d894:	dec    ecx
  41d895:	in     al,0x2d
  41d897:	inc    ebp
  41d898:	push   0x51415307
  41d89d:	xchg   esp,eax
  41d89e:	inc    edi
  41d89f:	pop    ecx
  41d8a0:	div    BYTE PTR [ebx+0x9]
  41d8a3:	pop    esi
  41d8a4:	fadd   DWORD PTR [ecx-0x3a7165f0]
  41d8aa:	clc    
  41d8ab:	rcl    BYTE PTR [edx-0x7c],0xf0
  41d8af:	cdq    
  41d8b0:	fimul  DWORD PTR [edx-0x3f]
  41d8b3:	cs mov bh,0xd8
  41d8b6:	inc    esp
  41d8b7:	mov    cl,0x56
  41d8b9:	loopne 0x41d844
  41d8bb:	cli    
  41d8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8bd:	push   eax
  41d8be:	out    0xf5,al
  41d8c0:	rol    al,1
  41d8c2:	cmp    DWORD PTR [ebp+0x13c63d40],ebp
  41d8c8:	(bad)  
  41d8c9:	rol    edi,1
  41d8cb:	addr16 enter 0x546d,0x1b
  41d8d0:	iret   
  41d8d1:	jge    0x41d8a0
  41d8d3:	push   cs
  41d8d4:	mov    ds:0xcb008659,al
  41d8d9:	cld    
  41d8da:	leave  
  41d8db:	adc    bl,BYTE PTR [esp+edx*2]
  41d8de:	pop    edi
  41d8df:	psubw  mm5,QWORD PTR [edx+eiz*1+0x2b]
  41d8e4:	into   
  41d8e5:	stos   BYTE PTR es:[edi],al
  41d8e6:	push   edi
  41d8e7:	lods   al,BYTE PTR ds:[esi]
  41d8e8:	cmp    al,dh
  41d8ea:	xchg   ecx,eax
  41d8eb:	jb     0x41d8fd
  41d8ed:	xlat   BYTE PTR ds:[ebx]
  41d8ee:	jb     0x41d90a
  41d8f0:	push   esp
  41d8f1:	inc    edi
  41d8f2:	imul   ebp,DWORD PTR [eax-0x75],0x4
  41d8f6:	cmp    eax,0x33de48b5
  41d8fb:	jge    0x41d958
  41d8fd:	fcomp  DWORD PTR [eax+edx*2+0xfe6389]
  41d904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d905:	mov    ebx,0xc3179e89
  41d90a:	mov    bh,0xcd
  41d90c:	xchg   esi,eax
  41d90d:	push   esi
  41d90e:	aaa    
  41d90f:	in     al,0x8c
  41d911:	push   eax
  41d912:	mov    ds:0x99ccde3f,eax
  41d917:	jle    0x41d981
  41d919:	mov    dh,0x9d
  41d91b:	adc    ah,BYTE PTR [ecx]
  41d91d:	jecxz  0x41d974
  41d91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d920:	push   edi
  41d921:	loop   0x41d939
  41d923:	bound  edx,QWORD PTR [eax+0x106b5420]
  41d929:	or     eax,0x6da0c454
  41d92e:	scas   al,BYTE PTR es:[edi]
  41d92f:	xor    eax,0xcf757be0
  41d934:	mov    DWORD PTR [ebx],ebx
  41d936:	cmp    eax,DWORD PTR [ebp-0x19]
  41d939:	sbb    eax,0x41900662
  41d93e:	ins    DWORD PTR es:[edi],dx
  41d93f:	arpl   WORD PTR [esi+eiz*2-0x196c18eb],sp
  41d946:	jg     0x41d8d6
  41d948:	sbb    dl,BYTE PTR [edi-0x77]
  41d94b:	push   0x5f
  41d94d:	push   esi
  41d94e:	inc    eax
  41d94f:	jne    0x41d8d4
  41d951:	inc    edi
  41d952:	mov    BYTE PTR [ebp+0x75],ah
  41d955:	iret   
  41d956:	cwde   
  41d957:	pop    esi
  41d958:	xor    BYTE PTR [ebx],ah
  41d95a:	mov    eax,0x36b1d534
  41d960:	sub    ebp,DWORD PTR [ebx-0x6b1ec4ea]
  41d966:	jb     0x41d917
  41d968:	xchg   edx,eax
  41d969:	mov    ebp,0x1d0b054a
  41d96e:	ret    0xc4dd
  41d971:	sub    DWORD PTR [ecx+0x1446bc18],edi
  41d977:	or     DWORD PTR [edx+0x5ea0bd63],esp
  41d97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d97e:	and    eax,0xcc7aa4bd
  41d983:	fpatan 
  41d985:	fimul  WORD PTR [ebx]
  41d987:	and    eax,0xab4c237e
  41d98c:	dec    ecx
  41d98d:	clc    
  41d98e:	stos   DWORD PTR es:[edi],eax
  41d98f:	cmp    esp,DWORD PTR [ebp+ebp*4+0x4d]
  41d993:	inc    ebx
  41d994:	loopne 0x41d9db
  41d996:	mov    ss,WORD PTR [edi+ebx*2-0x538bcac1]
  41d99d:	mov    esi,0x34c3cf4a
  41d9a2:	and    al,0xf8
  41d9a4:	test   DWORD PTR [eax+0x68f98dd2],ebx
  41d9aa:	test   bl,cl
  41d9ac:	idiv   BYTE PTR [ecx]
  41d9ae:	sbb    ebx,DWORD PTR [edx]
  41d9b0:	loope  0x41d9ae
  41d9b2:	test   BYTE PTR [ecx-0x44825f64],dl
  41d9b8:	jecxz  0x41da04
  41d9ba:	jg     0x41da22
  41d9bc:	jmp    0x41d9b0
  41d9be:	je     0x41d9ce
  41d9c0:	in     eax,dx
  41d9c1:	mov    cl,0xab
  41d9c3:	jge    0x41d989
  41d9c5:	adc    dl,BYTE PTR [edi-0x3ccc0bdd]
  41d9cb:	cmp    BYTE PTR [esi],0x56
  41d9ce:	adc    BYTE PTR [ecx+0x45a48046],0xa4
  41d9d5:	sbb    BYTE PTR ds:0x3f1b88f5,dh
  41d9db:	retf   0x8bc3
  41d9de:	pop    ecx
  41d9df:	pusha  
  41d9e0:	pushf  
  41d9e1:	fisubr WORD PTR [bp+si]
  41d9e4:	icebp  
  41d9e5:	mov    WORD PTR [eax],es
  41d9e7:	sar    BYTE PTR [eax-0x35],0xcf
  41d9eb:	mov    al,0xe6
  41d9ed:	inc    esi
  41d9ee:	or     al,0x90
  41d9f0:	jo     0x41da36
  41d9f2:	in     al,0x9f
  41d9f4:	pusha  
  41d9f5:	sbb    DWORD PTR [ebp+0x3d06da16],esi
  41d9fb:	dec    ebx
  41d9fc:	rcr    BYTE PTR [ecx],cl
  41d9fe:	dec    edi
  41d9ff:	out    0x0,eax
  41da01:	xchg   esi,eax
  41da02:	add    ch,0xce
  41da05:	xchg   edi,eax
  41da06:	xor    eax,0xcb113bd2
  41da0b:	stos   DWORD PTR es:[edi],eax
  41da0c:	mov    ch,0xd
  41da0e:	fwait
  41da0f:	sbb    al,0xb
  41da11:	pushf  
  41da12:	adc    eax,0x98664acc
  41da17:	sub    BYTE PTR [edx-0x342eb453],bh
  41da1d:	xchg   edi,eax
  41da1e:	rol    DWORD PTR [ebp+0x17],cl
  41da21:	pop    esi
  41da22:	xchg   edi,eax
  41da23:	addr16 inc edi
  41da25:	gs sti 
  41da27:	in     eax,0xec
  41da29:	inc    esp
  41da2a:	jp     0x41da6c
  41da2c:	outs   dx,BYTE PTR ds:[esi]
  41da2d:	xor    ebp,DWORD PTR [ebx+0x7618efc3]
  41da33:	sub    edi,esp
  41da35:	ret    0xedbe
  41da38:	sbb    ebx,0xffffffd3
  41da3b:	pop    esp
  41da3c:	dec    edi
  41da3d:	adc    ecx,DWORD PTR [esp+ebp*8+0x1a]
  41da41:	sbb    ch,BYTE PTR [eax-0x1c1f5231]
  41da47:	mov    WORD PTR [edi+0x43],fs
  41da4a:	ds sbb al,0x31
  41da4d:	xchg   esp,eax
  41da4e:	mov    edi,0xf52ecdf0
  41da53:	xchg   BYTE PTR [eax+0x39],bh
  41da56:	leave  
  41da57:	ja     0x41da42
  41da59:	cdq    
  41da5a:	inc    esp
  41da5b:	pusha  
  41da5c:	out    0x89,eax
  41da5e:	popa   
  41da5f:	stos   BYTE PTR es:[edi],al
  41da60:	lock or ch,dl
  41da63:	sbb    ch,ch
  41da65:	popf   
  41da66:	dec    ebx
  41da67:	outs   dx,BYTE PTR ds:[esi]
  41da68:	inc    esp
  41da69:	jo     0x41da38
  41da6b:	jns    0x41da00
  41da6d:	test   BYTE PTR [edi+0x37f44b1b],0xe0
  41da74:	adc    ch,ah
  41da76:	leave  
  41da77:	add    ecx,DWORD PTR [edx+0x31d91ea]
  41da7d:	xchg   ebx,eax
  41da7e:	clc    
  41da7f:	sahf   
  41da80:	stc    
  41da81:	out    dx,eax
  41da82:	mov    ds:0x80306dbf,eax
  41da87:	jle    0x41da4b
  41da89:	shufps xmm0,xmm4,0x5a
  41da8d:	and    DWORD PTR ds:0x3bb51ff8,ecx
  41da93:	rol    edi,1
  41da95:	adc    BYTE PTR [ecx+0x42ed322b],ah
  41da9b:	push   eax
  41da9c:	mov    eax,ds:0xd724a055
  41daa1:	pop    eax
  41daa2:	mov    eax,ds:0x4e4987cd
  41daa7:	fsubr  QWORD PTR [esi]
  41daa9:	mov    al,0x2e
  41daab:	aaa    
  41daac:	shl    DWORD PTR [ecx+0x188e2851],1
  41dab2:	inc    ebp
  41dab3:	cmp    cl,BYTE PTR [edi+esi*1+0x45]
  41dab7:	inc    esp
  41dab8:	je     0x41dac2
  41daba:	dec    esp
  41dabb:	xchg   edx,eax
  41dabc:	cmp    cl,bh
  41dabe:	in     al,dx
  41dabf:	fild   DWORD PTR [edi+0x27eb17dd]
  41dac5:	adc    edi,DWORD PTR [edi+0x62]
  41dac8:	mov    esi,0x8ff78509
  41dacd:	jo     0x41dacd
  41dacf:	and    DWORD PTR [edi+eiz*1],esi
  41dad2:	adc    ecx,eax
  41dad4:	(bad)  
  41dad6:	repnz xchg esp,eax
  41dad8:	retf   
  41dad9:	ins    BYTE PTR es:[edi],dx
  41dada:	aam    0x15
  41dadc:	outs   dx,BYTE PTR ds:[esi]
  41dadd:	dec    ebx
  41dade:	dec    esi
  41dadf:	mov    eax,ds:0x4562f951
  41dae4:	push   esi
  41dae5:	sub    DWORD PTR [esi-0x75],ebp
  41dae8:	jnp    0x41da6b
  41daea:	mul    cl
  41daec:	sbb    eax,0xf1bbbd14
  41daf1:	inc    ebx
  41daf2:	loop   0x41db09
  41daf4:	xor    esi,esi
  41daf6:	or     eax,DWORD PTR [ecx+0xc2003bf]
  41dafc:	scas   eax,DWORD PTR es:[edi]
  41dafd:	xchg   ebp,eax
  41dafe:	or     esi,DWORD PTR [ebx-0x2ec7fe87]
  41db04:	sbb    eax,edi
  41db06:	(bad)  
  41db07:	pop    ds
  41db08:	sti    
  41db09:	cmp    eax,0x58d5dad6
  41db0e:	cli    
  41db0f:	ds cli 
  41db11:	int    0x8a
  41db13:	int3   
  41db14:	enter  0xb6d7,0xb1
  41db18:	dec    DWORD PTR [ebx-0x2a832df5]
  41db1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db20:	jb     0x41db58
  41db22:	cmp    al,BYTE PTR [ebx-0x18fa018]
  41db28:	lahf   
  41db29:	stos   BYTE PTR es:[edi],al
  41db2a:	jo     0x41db54
  41db2c:	mov    ds:0x7df34df9,al
  41db31:	push   eax
  41db32:	fwait
  41db33:	cld    
  41db34:	(bad)  
  41db35:	neg    BYTE PTR [edi-0x14cc8092]
  41db3b:	nop
  41db3c:	mov    dh,0xdb
  41db3e:	cmp    DWORD PTR [ebx-0x1b6b73d4],ecx
  41db44:	fnsave [edx]
  41db46:	cli    
  41db47:	pop    esi
  41db48:	mov    es,WORD PTR [esi-0x39a690f0]
  41db4e:	iret   
  41db4f:	loopne 0x41db0e
  41db51:	pop    esi
  41db52:	xchg   bl,bh
  41db54:	fst    DWORD PTR [edx-0x629a68eb]
  41db5a:	xor    edx,ebx
  41db5c:	add    eax,0x7e66f36e
  41db61:	aad    0xe9
  41db63:	lea    edx,[ebp+0x4b]
  41db66:	ret    
  41db67:	mov    WORD PTR [edi-0x75ac78b7],fs
  41db6d:	xchg   ebx,eax
  41db6e:	xchg   ebp,eax
  41db6f:	mov    BYTE PTR [ebx],al
  41db71:	imul   ebp,DWORD PTR [esi],0x115b88c
  41db77:	fimul  DWORD PTR [edi+0x0]
  41db7a:	pop    eax
  41db7b:	jns    0x41db35
  41db7d:	push   ss
  41db7e:	sub    ch,bl
  41db80:	sbb    al,BYTE PTR [ebx-0x2d]
  41db83:	mov    WORD PTR [ebx+esi*4-0x1f330a28],es
  41db8a:	loop   0x41db33
  41db8c:	push   es
  41db8d:	jnp    0x41dbc1
  41db8f:	mov    ch,0x97
  41db91:	pusha  
  41db92:	fist   WORD PTR [edx+0x2f]
  41db95:	mov    WORD PTR [ebx-0x58a6aab5],gs
  41db9b:	and    dl,BYTE PTR [ebp+0x3c2b8d29]
  41dba1:	cwde   
  41dba2:	repz fcom st(1)
  41dba5:	lods   eax,DWORD PTR ds:[esi]
  41dba6:	arpl   WORD PTR [ebp+esi*1-0x14],dx
  41dbaa:	push   edx
  41dbab:	dec    ebp
  41dbac:	bound  ebx,QWORD PTR [eax+0x65]
  41dbaf:	or     ah,dl
  41dbb1:	leave  
  41dbb2:	lahf   
  41dbb3:	mov    ds,WORD PTR [edi]
  41dbb5:	inc    edx
  41dbb6:	mov    ebp,0x3b46b4f5
  41dbbb:	clc    
  41dbbc:	dec    ecx
  41dbbd:	push   edi
  41dbbe:	les    ebp,FWORD PTR [esi]
  41dbc0:	sbb    al,0xc0
  41dbc2:	xor    al,0xc
  41dbc4:	lods   al,BYTE PTR ds:[esi]
  41dbc5:	jmp    0x41dbeb
  41dbc7:	dec    ecx
  41dbc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbc9:	ins    BYTE PTR es:[edi],dx
  41dbca:	sbb    dh,BYTE PTR [eax]
  41dbcc:	stos   DWORD PTR es:[edi],eax
  41dbcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbce:	pop    ds
  41dbcf:	push   ebp
  41dbd0:	ss cld 
  41dbd2:	push   edi
  41dbd3:	adc    dh,BYTE PTR [esi-0x3e573e32]
  41dbd9:	stos   DWORD PTR es:[edi],eax
  41dbda:	and    DWORD PTR [ecx],esp
  41dbdc:	jae    0x41dbb1
  41dbde:	fsubr  QWORD PTR [edi-0x64]
  41dbe1:	mov    esi,0x36ac695d
  41dbe6:	inc    ebp
  41dbe7:	jne    0x41dbf9
  41dbe9:	je     0x41dc2e
  41dbeb:	das    
  41dbec:	outs   dx,BYTE PTR ds:[esi]
  41dbed:	xchg   ebp,eax
  41dbee:	inc    edi
  41dbef:	aaa    
  41dbf0:	adc    DWORD PTR [ebx],esi
  41dbf2:	scas   eax,DWORD PTR es:[edi]
  41dbf3:	pop    ds
  41dbf4:	popf   
  41dbf5:	push   esi
  41dbf6:	jns    0x41dc10
  41dbf8:	or     bl,BYTE PTR [esi-0x36a50319]
  41dbfe:	in     al,dx
  41dbff:	pop    esp
  41dc00:	ror    DWORD PTR [ebx],0xf
  41dc03:	and    DWORD PTR [edi+ebx*4],edi
  41dc06:	das    
  41dc07:	pop    ss
  41dc08:	leave  
  41dc09:	(bad)  
  41dc0b:	arpl   dx,cx
  41dc0d:	ins    BYTE PTR es:[edi],dx
  41dc0e:	in     al,dx
  41dc0f:	and    BYTE PTR [ebp+0x4e4ee620],ch
  41dc15:	sub    eax,0x74e7b6eb
  41dc1a:	(bad)  
  41dc1b:	mul    BYTE PTR [ebx+0x51]
  41dc1e:	mov    ch,0x1
  41dc20:	pop    ds
  41dc21:	in     eax,0xe
  41dc23:	sbb    al,0x90
  41dc25:	(bad)  
  41dc26:	loopne 0x41dbd4
  41dc28:	div    DWORD PTR [ebx-0x35c93e76]
  41dc2e:	push   eax
  41dc2f:	push   ebp
  41dc30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc31:	shl    bl,0xe7
  41dc34:	sahf   
  41dc35:	sbb    eax,0xc8862672
  41dc3a:	mov    ebx,0xfa6b1dfe
  41dc3f:	rcl    esp,cl
  41dc41:	mov    dl,0x92
  41dc43:	mov    esp,0x61ecc8e0
  41dc48:	int    0xd3
  41dc4a:	and    DWORD PTR [ecx],ecx
  41dc4c:	mov    ch,0x8e
  41dc4e:	mov    cl,0xf8
  41dc50:	jecxz  0x41dc86
  41dc52:	dec    ebx
  41dc53:	lock adc eax,0xa778299d
  41dc59:	in     eax,dx
  41dc5a:	repnz fcom QWORD PTR [ebp+0x4a037459]
  41dc61:	int    0x9f
  41dc63:	pop    ss
  41dc64:	and    ah,ch
  41dc66:	retf   0xdfc1
  41dc69:	ins    BYTE PTR es:[edi],dx
  41dc6a:	repnz fwait
  41dc6c:	stc    
  41dc6d:	pop    eax
  41dc6e:	cmp    DWORD PTR [edx-0x56be2cab],esp
  41dc74:	sub    BYTE PTR [ecx+0x47],cl
  41dc77:	xor    al,0x2b
  41dc79:	mov    ebx,0x3e0511a5
  41dc7e:	pushf  
  41dc7f:	add    DWORD PTR [eax-0x71b9afb5],0x53
  41dc86:	fwait
  41dc87:	dec    ebx
  41dc88:	mov    DWORD PTR [ecx-0x13311ff1],esi
  41dc8e:	sub    bl,BYTE PTR [ebx+0x45]
  41dc91:	in     eax,0x3b
  41dc93:	out    dx,al
  41dc94:	push   ds
  41dc95:	jno    0x41dc30
  41dc97:	xor    al,BYTE PTR [eax+0x1f]
  41dc9a:	int3   
  41dc9b:	nop
  41dc9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc9d:	int    0x7d
  41dc9f:	pop    eax
  41dca0:	std    
  41dca1:	sti    
  41dca2:	xor    bh,BYTE PTR [ecx+0x5e349554]
  41dca8:	push   ebp
  41dca9:	arpl   WORD PTR ds:0x3c3009,dx
  41dcaf:	xor    esi,DWORD PTR [edx+ebx*2]
  41dcb2:	lea    eax,[ebx]
  41dcb4:	push   es
  41dcb5:	les    eax,FWORD PTR es:[ecx+0x142e3c4b]
  41dcbc:	jmp    0xe462:0x91587297
  41dcc3:	sbb    edi,ecx
  41dcc5:	sbb    ebx,DWORD PTR [esi]
  41dcc7:	sbb    edi,DWORD PTR [ecx-0x79]
  41dcca:	mov    edi,0x70ad89a3
  41dccf:	into   
  41dcd0:	jno    0x41dcd6
  41dcd2:	push   edi
  41dcd3:	mov    ecx,0x7f40b71a
  41dcd8:	pop    ebp
  41dcd9:	inc    esi
  41dcda:	inc    ecx
  41dcdb:	pop    es
  41dcdc:	dec    ecx
  41dcdd:	jb     0x41dc71
  41dcdf:	lea    edi,[ecx+0x1bfb8c7b]
  41dce5:	retf   0x981
  41dce8:	mov    esp,0x3326675c
  41dced:	stc    
  41dcee:	push   ebx
  41dcef:	arpl   WORD PTR [edi+ebx*8],cx
  41dcf2:	out    0x80,eax
  41dcf4:	inc    esi
  41dcf5:	xchg   ecx,eax
  41dcf6:	dec    edx
  41dcf7:	lahf   
  41dcf8:	cmc    
  41dcf9:	jmp    0x9e6d:0x6e427b8d
  41dd00:	das    
  41dd01:	sbb    dh,BYTE PTR [ebx+0x5b]
  41dd04:	push   ebp
  41dd05:	fcmove st,st(6)
  41dd07:	es xor edx,esi
  41dd0a:	out    0xb8,eax
  41dd0c:	out    dx,eax
  41dd0d:	shr    ah,1
  41dd0f:	sar    BYTE PTR [ecx+edi*8-0x41cf7953],0x40
  41dd17:	mov    dh,0x6a
  41dd19:	mov    edx,0xe6ead73f
  41dd1e:	mov    ebp,0x3285f5ab
  41dd23:	sar    cl,1
  41dd25:	ror    BYTE PTR [ebp-0x7ef37be4],cl
  41dd2b:	sub    al,0xe0
  41dd2d:	xchg   ecx,eax
  41dd2e:	in     eax,dx
  41dd2f:	pop    ebp
  41dd30:	dec    eax
  41dd31:	pop    edx
  41dd32:	out    0x4,al
  41dd34:	add    edi,0x40
  41dd37:	jo     0x41dd11
  41dd39:	shr    DWORD PTR [edx-0x6b],1
  41dd3c:	inc    esi
  41dd3d:	aam    0x11
  41dd3f:	psrad  mm0,QWORD PTR [esi+eiz*8]
  41dd43:	rcl    BYTE PTR [esi+0x4e091c96],0xf
  41dd4a:	call   0xb56e:0x24459d8f
  41dd51:	bound  esi,QWORD PTR [eax+0x6a]
  41dd54:	bound  ecx,QWORD PTR gs:[edx-0x8]
  41dd58:	ins    DWORD PTR es:[edi],dx
  41dd59:	mov    edx,0xaf2d7ab7
  41dd5e:	aas    
  41dd5f:	and    cl,BYTE PTR [ecx-0x2c11ea40]
  41dd65:	jmp    0x1e92a3d0
  41dd6a:	retf   0xba7b
  41dd6d:	dec    ebp
  41dd6e:	stc    
  41dd6f:	sbb    BYTE PTR [edx],bh
  41dd71:	idiv   BYTE PTR [ebp+0x7264758a]
  41dd77:	cmp    ch,BYTE PTR [edi+0x6e8ff9fa]
  41dd7d:	sbb    DWORD PTR [ecx],ebp
  41dd7f:	jp     0x41dd90
  41dd81:	pop    edx
  41dd82:	clc    
  41dd83:	push   0x87d088
  41dd88:	mov    esp,0x47b3656d
  41dd8d:	in     eax,dx
  41dd8e:	(bad)  
  41dd8f:	or     esi,DWORD PTR [esi+0x44]
  41dd92:	inc    ecx
  41dd93:	in     al,0xa6
  41dd95:	jmp    0x32da:0xf865e731
  41dd9c:	in     eax,dx
  41dd9d:	mov    ebp,0x21b194b5
  41dda2:	sahf   
  41dda3:	mov    bl,0x18
  41dda5:	cmp    esp,edi
  41dda7:	push   0x8c32a52f
  41ddac:	push   edi
  41ddad:	inc    ebx
  41ddae:	cmp    DWORD PTR [ecx+ebp*4+0x11],esi
  41ddb2:	xchg   edi,eax
  41ddb3:	jb     0x41dd6d
  41ddb5:	xchg   ebx,eax
  41ddb6:	xor    al,0xf0
  41ddb8:	sub    eax,0xd1cf7924
  41ddbd:	add    eax,0xb6c819eb
  41ddc2:	fwait
  41ddc3:	loopne 0x41de11
  41ddc5:	lods   al,BYTE PTR ds:[esi]
  41ddc6:	(bad)  
  41ddc7:	nop
  41ddc8:	jg     0x41dd92
  41ddca:	retf   0xce1e
  41ddcd:	mov    dh,0x78
  41ddcf:	js     0x41de0c
  41ddd1:	add    esi,0xffffffe8
  41ddd4:	dec    esp
  41ddd5:	mov    bh,0x37
  41ddd7:	sbb    eax,0xa6070575
  41dddc:	dec    eax
  41dddd:	scas   al,BYTE PTR es:[edi]
  41ddde:	gs add dl,dl
  41dde1:	out    0xdf,al
  41dde3:	ss retf 0xe0be
  41dde7:	xor    dl,BYTE PTR [edi]
  41dde9:	cmp    ecx,ebp
  41ddeb:	js     0x41ddec
  41dded:	mov    DWORD PTR [edi],0x9b6ce06d
  41ddf3:	mov    edx,0x4938ec82
  41ddf8:	je     0x41de4d
  41ddfa:	jmp    0xe41f:0x65914b2a
  41de01:	push   ebp
  41de02:	xchg   esi,eax
  41de03:	scas   al,BYTE PTR es:[edi]
  41de04:	or     edx,edx
  41de06:	lods   al,BYTE PTR ds:[esi]
  41de07:	push   cs
  41de08:	pop    ebx
  41de09:	in     al,dx
  41de0a:	xor    BYTE PTR [ecx-0x6607140e],0xa1
  41de11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de12:	pop    ebp
  41de13:	icebp  
  41de14:	mov    esp,DWORD PTR [ebx-0x6ea43b70]
  41de1a:	add    eax,0x11b7e9d8
  41de1f:	jge    0x41de45
  41de21:	out    0x21,al
  41de23:	mov    ebp,0x4069471a
  41de28:	clc    
  41de29:	outs   dx,BYTE PTR ds:[esi]
  41de2a:	xchg   ebx,ecx
  41de2c:	ins    BYTE PTR es:[edi],dx
  41de2d:	les    esi,FWORD PTR [esi-0x349ab5a9]
  41de33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de34:	addr16 pop ebp
  41de36:	repz inc eax
  41de38:	icebp  
  41de39:	or     eax,DWORD PTR [edi-0x3b]
  41de3c:	gs loop 0x41dddb
  41de3f:	out    0x93,eax
  41de41:	cmp    eax,DWORD PTR es:[ebp+0x494a454]
  41de48:	imul   ebx,DWORD PTR [esi+ecx*4-0x5c],0xffffffd8
  41de4d:	aas    
  41de4e:	(bad)  
  41de51:	dec    esi
  41de52:	inc    edi
  41de53:	stos   BYTE PTR es:[edi],al
  41de54:	xchg   edx,eax
  41de55:	jmp    0x43c5:0x7dd1a168
  41de5c:	adc    edx,DWORD PTR [ebp+0x1c]
  41de5f:	out    dx,eax
  41de60:	jb     0x41de3f
  41de62:	or     BYTE PTR [ebp+0x3],dl
  41de65:	shl    DWORD PTR [edx+eiz*2+0x6c],cl
  41de69:	fldenv [esi+ebp*1+0x15039b32]
  41de70:	nop
  41de71:	lahf   
  41de72:	mov    ebp,esi
  41de74:	imul   esi,ebx,0xffffffaf
  41de77:	pop    ecx
  41de78:	test   BYTE PTR [eax*2+0x62b8c9f5],ch
  41de7f:	aas    
  41de80:	out    0x63,eax
  41de82:	jg     0x41deb0
  41de84:	push   edx
  41de85:	retf   
  41de86:	cmc    
  41de87:	vpmacsdql ymm3,ymm2,YMMWORD PTR [esi],ymm0
  41de8d:	cmc    
  41de8e:	xor    cl,ah
  41de90:	cwde   
  41de91:	cmp    dl,0xbf
  41de94:	es jecxz 0x41deec
  41de97:	ins    DWORD PTR es:[edi],dx
  41de98:	mov    eax,0x27beb4f8
  41de9d:	push   0xffffffbf
  41de9f:	hlt    
  41dea0:	std    
  41dea1:	shl    DWORD PTR [edx-0x408e9c4f],cl
  41dea7:	dec    ebp
  41dea8:	rcr    BYTE PTR [esi],0x9e
  41deab:	jmp    0x8be95c92
  41deb0:	cmp    al,0x2
  41deb2:	pop    es
  41deb3:	not    BYTE PTR [ecx]
  41deb5:	test   DWORD PTR [ecx],esp
  41deb7:	pop    es
  41deb8:	fild   DWORD PTR [ebp-0x7e0457f8]
  41debe:	add    BYTE PTR [ebp+0x7e],0x1e
  41dec2:	mov    edx,0x690595ea
  41dec7:	push   cs
  41dec8:	or     esp,edi
  41deca:	inc    edx
  41decb:	push   ecx
  41decc:	push   0xad1ea759
  41ded1:	rcl    al,1
  41ded3:	nop
  41ded4:	mov    ecx,0x57c2b4e6
  41ded9:	adc    BYTE PTR [esi],bh
  41dedb:	cli    
  41dedc:	(bad)  
  41dedd:	jp     0x41de7c
  41dedf:	dec    eax
  41dee0:	shl    BYTE PTR [edi-0x2e],0x91
  41dee4:	cli    
  41dee5:	xlat   BYTE PTR ds:[ebx]
  41dee6:	push   eax
  41dee7:	mov    ebp,0x9af41ed7
  41deec:	and    cl,dl
  41deee:	out    0x56,eax
  41def0:	scas   al,BYTE PTR es:[edi]
  41def1:	les    esp,FWORD PTR [ebx-0x23f81192]
  41def7:	pop    ds
  41def8:	retf   0xcf66
  41defb:	cmc    
  41defc:	sub    al,0xb0
  41defe:	aad    0x33
  41df00:	les    edx,FWORD PTR [ecx+0x4f]
  41df03:	fdiv   DWORD PTR [eax-0x48a1fa1f]
  41df09:	clts   
  41df0b:	js     0x41df3d
  41df0d:	dec    esi
  41df0e:	add    BYTE PTR [eax-0x4e2ade37],bh
  41df14:	loop   0x41deae
  41df16:	push   esp
  41df17:	sbb    BYTE PTR [ecx],dl
  41df19:	cld    
  41df1a:	(bad)
  41df1d:	mov    ebx,0x1809d86f
  41df22:	push   es
  41df23:	add    eax,0x879c84f7
  41df28:	xor    eax,DWORD PTR [edx-0xe08d19d]
  41df2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df2f:	frstor [edx]
  41df31:	ja     0x41deca
  41df33:	test   eax,0x66ce66ac
  41df38:	mov    DWORD PTR [esp+eax*8-0x4a],ebx
  41df3c:	pop    eax
  41df3d:	and    BYTE PTR [eax],dh
  41df3f:	push   esi
  41df40:	jp     0x41df78
  41df42:	sbb    DWORD PTR ds:[ecx-0x3cb27e5f],0x365d6cb9
  41df4d:	mov    bl,0xed
  41df4f:	push   ebp
  41df50:	xor    DWORD PTR [edi],edi
  41df52:	stc    
  41df53:	mov    esi,0x3df4b977
  41df58:	pusha  
  41df59:	addr16 jl 0x41df49
  41df5c:	enter  0xfbf4,0xe0
  41df60:	pusha  
  41df61:	sbb    DWORD PTR [edx-0x4cf40302],0xfffffff4
  41df68:	pop    edi
  41df69:	mul    ch
  41df6b:	cmp    ecx,ebp
  41df6d:	mov    eax,ds:0x2cba89b1
  41df72:	(bad)  
  41df73:	and    eax,0xda667e0c
  41df78:	sti    
  41df79:	push   ebp
  41df7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df7b:	or     BYTE PTR [ebx+0x41],0x9d
  41df7f:	(bad)  [eax+0x60]
  41df82:	inc    ebx
  41df83:	pop    ss
  41df84:	pushf  
  41df85:	push   es
  41df86:	in     eax,0x67
  41df88:	imul   edi,DWORD PTR [eax-0x12],0xfbd4092
  41df8f:	(bad)  [ecx]
  41df91:	outs   dx,BYTE PTR ds:[esi]
  41df92:	cmp    DWORD PTR [edi-0x17],edi
  41df95:	repnz pop ecx
  41df97:	inc    eax
  41df98:	ret    
  41df99:	and    eax,0xdd127f4e
  41df9e:	cmp    BYTE PTR [eax-0x61],bh
  41dfa1:	jo     0x41df55
  41dfa3:	add    al,BYTE PTR [edx-0x25217719]
  41dfa9:	sbb    al,0x61
  41dfab:	sub    eax,0x61b32d59
  41dfb0:	mov    ds:0x545f5456,al
  41dfb5:	pop    eax
  41dfb6:	jns    0x41dfc8
  41dfb8:	xchg   ecx,eax
  41dfb9:	xchg   esp,eax
  41dfba:	dec    esi
  41dfbb:	gs inc ebp
  41dfbd:	mov    ds:0xa13951c3,eax
  41dfc2:	das    
  41dfc3:	in     al,0xbe
  41dfc5:	gs ja  0x41dfe9
  41dfc8:	outs   dx,DWORD PTR ds:[esi]
  41dfc9:	sub    DWORD PTR [ecx+0x29],esi
  41dfcc:	ss cmc 
  41dfce:	mov    ebx,0xed220c0a
  41dfd3:	fs (bad) 
  41dfd5:	lods   eax,DWORD PTR ds:[esi]
  41dfd6:	mov    dh,0x10
  41dfd8:	out    dx,al
  41dfd9:	loop   0x41df6e
  41dfdb:	stc    
  41dfdc:	scas   al,BYTE PTR es:[edi]
  41dfdd:	sbb    eax,0xfd41d21a
  41dfe2:	das    
  41dfe3:	sbb    dl,BYTE PTR [eax+0x3c]
  41dfe6:	cmp    al,0x24
  41dfe8:	leave  
  41dfe9:	(bad)  
  41dfea:	fbstp  TBYTE PTR [ebx+0x57]
  41dfed:	ja     0x41df96
  41dfef:	mov    eax,ds:0x27ccb6fc
  41dff4:	out    0xd7,al
  41dff6:	in     al,dx
  41dff7:	inc    eax
  41dff8:	loope  0x41df95
  41dffa:	in     al,dx
  41dffb:	cs into 
  41dffd:	mov    edx,0x952c40e0
  41e002:	lock sbb ebp,DWORD PTR [ecx-0x53c85a3a]
  41e009:	push   ebp
  41e00a:	push   ds
  41e00b:	adc    eax,0x8ca89ba7
  41e010:	je     0x41dfc0
  41e012:	jns    0x41e093
  41e014:	mov    ebp,0x7bfd21b4
  41e019:	ss das 
  41e01b:	daa    
  41e01c:	push   eax
  41e01d:	mov    ss,WORD PTR [edi]
  41e01f:	lods   al,BYTE PTR ds:[esi]
  41e020:	ds daa 
  41e022:	ins    DWORD PTR es:[edi],dx
  41e023:	test   DWORD PTR [eax+0x50],ecx
  41e026:	sbb    BYTE PTR [esp+esi*1-0x1f2aaeeb],ah
  41e02d:	jno    0x41e02d
  41e02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e030:	mov    eax,ds:0x9968e67b
  41e035:	inc    esp
  41e036:	inc    eax
  41e037:	or     eax,0xbfa7153
  41e03c:	ja     0x41e0ba
  41e03e:	out    dx,eax
  41e03f:	mov    esi,0x317f53da
  41e044:	jnp    0x41e093
  41e046:	xchg   ecx,eax
  41e047:	fnstsw WORD PTR [ebp-0x1965b21e]
  41e04d:	ret    0x83cd
  41e050:	daa    
  41e051:	neg    BYTE PTR [ebp-0x35]
  41e054:	dec    ax
  41e056:	daa    
  41e057:	ror    BYTE PTR [ebx+0x11],1
  41e05a:	mov    ecx,0x446028a3
  41e05f:	aas    
  41e060:	mov    edx,0xb0fb1f13
  41e065:	mov    dl,0xba
  41e067:	jo     0x41e08a
  41e069:	jmp    0x51ec:0x5825fa1
  41e070:	test   DWORD PTR [ebp-0x1c],esi
  41e073:	dec    eax
  41e074:	mov    bh,0x55
  41e076:	or     BYTE PTR [edx-0x2c70fe2e],dl
  41e07c:	(bad)  
  41e07d:	dec    edx
  41e07e:	icebp  
  41e07f:	(bad)  
  41e080:	mul    BYTE PTR [edi+eax*1]
  41e083:	cwde   
  41e084:	and    BYTE PTR [ebx],0x9a
  41e087:	fucomip st,st(2)
  41e089:	cmp    al,0x12
  41e08b:	retf   0xeb97
  41e08e:	in     eax,0xb2
  41e090:	lods   al,BYTE PTR ds:[esi]
  41e091:	pop    esp
  41e092:	cmp    al,0xcf
  41e094:	dec    esp
  41e095:	lods   eax,DWORD PTR ds:[esi]
  41e096:	and    BYTE PTR [ebx-0x2088ef0e],dl
  41e09c:	mov    es,WORD PTR [ebp+ebx*4+0x2dcdbe54]
  41e0a3:	and    al,0x98
  41e0a5:	(bad)  
  41e0a6:	pop    ds
  41e0a7:	sub    al,0x97
  41e0a9:	aaa    
  41e0aa:	and    BYTE PTR [ecx+edi*4-0x30a3ce93],bl
  41e0b1:	mov    ds:0x5cbcd1f,al
  41e0b6:	push   0x8459f05e
  41e0bb:	cwde   
  41e0bc:	jmp    0x41e0f5
  41e0be:	sub    al,ch
  41e0c0:	daa    
  41e0c1:	shl    BYTE PTR [eax-0x51],0x81
  41e0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c6:	xor    eax,0xf0fafe52
  41e0cb:	nop
  41e0cc:	cmp    DWORD PTR [ecx+0x74f5f7a7],eax
  41e0d2:	pop    esp
  41e0d3:	neg    DWORD PTR [esi+0x3a5b04a7]
  41e0d9:	cmp    BYTE PTR [esi-0x554e2e65],bl
  41e0df:	mov    ebp,0x32526fac
  41e0e4:	nop
  41e0e5:	xor    BYTE PTR [esi],bl
  41e0e7:	mov    esp,0xf64ccb80
  41e0ec:	lahf   
  41e0ed:	test   DWORD PTR [edi],ebx
  41e0ef:	clc    
  41e0f0:	iret   
  41e0f1:	dec    esi
  41e0f2:	mov    ah,0x5
  41e0f4:	hlt    
  41e0f5:	mov    DWORD PTR [ebx-0x37],0x590bbe05
  41e0fc:	(bad)  
  41e0fd:	into   
  41e0fe:	lea    ebp,[edx*1+0x75c00486]
  41e105:	pop    ecx
  41e106:	mov    eax,0x89598d95
  41e10b:	jge    0x41e0bc
  41e10d:	add    BYTE PTR ds:0x4507c423,dh
  41e113:	enter  0x2ac2,0xd2
  41e117:	mov    ch,0x7d
  41e119:	sub    BYTE PTR [ebx],dh
  41e11b:	pusha  
  41e11c:	shl    DWORD PTR [ebx],0x7a
  41e11f:	mov    esp,0x684efc00
  41e124:	stc    
  41e125:	in     al,0xd
  41e127:	cmp    eax,0xd53db4d8
  41e12c:	icebp  
  41e12d:	xchg   esi,eax
  41e12e:	mov    esp,DWORD PTR [ebp-0x39760135]
  41e134:	pop    edi
  41e135:	inc    BYTE PTR [edi]
  41e137:	sub    bh,BYTE PTR [edx+eiz*4+0x495ea2b7]
  41e13e:	pop    edx
  41e13f:	outs   dx,DWORD PTR ds:[esi]
  41e140:	loopne 0x41e103
  41e142:	sbb    ah,BYTE PTR [ebx+eiz*4-0x8032c99]
  41e149:	mov    eax,DWORD PTR [eax-0x7ce92a91]
  41e14f:	jns    0x41e167
  41e151:	pop    ebp
  41e152:	js     0x41e1d2
  41e154:	aas    
  41e155:	push   edi
  41e156:	lock cmp al,0x92
  41e159:	cmp    esi,DWORD PTR ds:0x6690abea
  41e15f:	clc    
  41e160:	cs xchg edx,eax
  41e162:	aad    0x72
  41e164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e165:	dec    esp
  41e166:	jnp    0x41e15b
  41e168:	inc    edx
  41e169:	sub    eax,0x4605b81c
  41e16e:	retf   0x7c0e
  41e171:	icebp  
  41e172:	or     ecx,DWORD PTR [ebp-0xeb6890a]
  41e178:	mov    bl,BYTE PTR [edi-0xb34e84]
  41e17e:	push   ds
  41e17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e180:	mov    ecx,0xc6d3ce1c
  41e185:	mov    WORD PTR [esi],cs
  41e187:	mov    ebx,0x31adac33
  41e18c:	jecxz  0x41e1af
  41e18e:	xor    DWORD PTR [edi-0x692cf23b],eax
  41e194:	inc    eax
  41e195:	(bad)  
  41e196:	shr    BYTE PTR [ebx-0x3d194375],1
  41e19c:	push   ebx
  41e19d:	jne    0x41e1f5
  41e19f:	xchg   esi,eax
  41e1a0:	lds    esi,FWORD PTR [esi+0x55656c8]
  41e1a6:	out    0xf8,al
  41e1a8:	mov    dl,0xea
  41e1aa:	fmul   st,st(6)
  41e1ac:	lea    esp,[eax+0x72]
  41e1af:	mov    ds:0x879a3d55,al
  41e1b4:	mov    ah,0x55
  41e1b6:	dec    esi
  41e1b7:	push   ecx
  41e1b8:	xchg   esi,eax
  41e1b9:	sbb    ecx,DWORD PTR ds:[ebx-0x2b]
  41e1bd:	xchg   edx,eax
  41e1be:	sbb    eax,0xb0e7aa1
  41e1c3:	out    dx,eax
  41e1c4:	sub    ch,BYTE PTR [edi+0x56932d54]
  41e1ca:	fidiv  WORD PTR [ecx+ebp*4-0xd2da4b3]
  41e1d1:	(bad)  
  41e1d2:	push   ds
  41e1d3:	jmp    0x77adb9d6
  41e1d8:	cmp    dl,bh
  41e1da:	and    ecx,DWORD PTR [esi-0x54]
  41e1dd:	jle    0x41e16a
  41e1df:	jmp    0x41e191
  41e1e1:	mov    dl,0x4a
  41e1e3:	(bad)  
  41e1e4:	dec    eax
  41e1e5:	xor    bh,BYTE PTR [edx-0x43]
  41e1e8:	repnz add ah,BYTE PTR [eax+0x540f951c]
  41e1ef:	jns    0x41e1cb
  41e1f1:	mov    ah,0x3e
  41e1f3:	mov    bh,0xf9
  41e1f5:	or     BYTE PTR [edi],dl
  41e1f7:	inc    edx
  41e1f8:	imul   edi,esi,0xffffffd9
  41e1fb:	push   esp
  41e1fc:	(bad)  
  41e1fd:	int    0xb0
  41e1ff:	sbb    dh,BYTE PTR ds:[ebx+0x34]
  41e203:	pop    eax
  41e204:	outs   dx,DWORD PTR ds:[esi]
  41e205:	mov    al,0x41
  41e207:	loop   0x41e1db
  41e209:	jp     0x41e23c
  41e20b:	leave  
  41e20c:	pusha  
  41e20d:	jno    0x41e1a0
  41e20f:	test   BYTE PTR [ecx+ecx*8-0x680d4c29],dl
  41e216:	xor    BYTE PTR [ecx-0xc528ae2],cl
  41e21c:	xchg   edx,eax
  41e21d:	mov    bl,0xd
  41e21f:	repnz xor eax,0x32d1068b
  41e225:	loop   0x41e1e2
  41e227:	mov    esi,DWORD PTR [eax-0xebd9e05]
  41e22d:	into   
  41e22e:	sbb    eax,0x61900fc8
  41e233:	retf   0x3930
  41e236:	add    eax,esp
  41e238:	push   es
  41e239:	pop    edx
  41e23a:	jne    0x41e278
  41e23c:	loop   0x41e1db
  41e23e:	and    bp,WORD PTR [edx]
  41e241:	das    
  41e242:	cmp    eax,0xefae1fb9
  41e247:	jecxz  0x41e1e2
  41e249:	aam    0xeb
  41e24b:	jg     0x41e27e
  41e24d:	xchg   ebx,eax
  41e24e:	fdiv   DWORD PTR [edx-0x129bef5]
  41e254:	fnstenv [esi-0x66]
  41e257:	int3   
  41e258:	pop    esp
  41e259:	sahf   
  41e25a:	lea    esp,[edx-0x765716bb]
  41e260:	(bad)  
  41e261:	fmul   QWORD PTR [eax+0x61]
  41e264:	arpl   WORD PTR [ebp-0x27c8bfa6],cx
  41e26a:	cmp    DWORD PTR [ebx+0x2],esi
  41e26d:	push   0x67e32ffa
  41e272:	ret    0xe8d9
  41e275:	cmp    edi,esi
  41e277:	cmp    BYTE PTR [edi],dl
  41e279:	push   0xbf19ecd5
  41e27e:	popf   
  41e27f:	idiv   BYTE PTR [ecx-0x35]
  41e282:	cmp    edx,DWORD PTR [edi]
  41e284:	pop    ds
  41e285:	xchg   edx,eax
  41e286:	int3   
  41e287:	jns    0x41e22c
  41e289:	ja     0x41e2ea
  41e28b:	in     eax,dx
  41e28c:	std    
  41e28d:	sub    BYTE PTR [edx],cl
  41e28f:	arpl   WORD PTR [ebp-0x58df17a6],cx
  41e295:	add    esp,DWORD PTR [ecx+edx*2-0x3e2ac7f1]
  41e29c:	xor    al,0x6f
  41e29e:	int3   
  41e29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2a0:	ja     0x41e2aa
  41e2a2:	and    al,0xaf
  41e2a4:	jecxz  0x41e25b
  41e2a6:	adc    DWORD PTR [esi-0x71],ebp
  41e2a9:	mov    ch,0xdc
  41e2ab:	fcomi  st,st(6)
  41e2ad:	add    al,0xb4
  41e2af:	jnp    0x41e24f
  41e2b1:	push   esp
  41e2b2:	lods   eax,DWORD PTR ds:[esi]
  41e2b3:	cmp    BYTE PTR [ebx+0x4f],0xb1
  41e2b7:	call   0x3600:0x4f0d8d4d
  41e2be:	jns    0x41e27c
  41e2c0:	or     eax,0xf051530c
  41e2c5:	ret    0x4795
  41e2c8:	xchg   edx,eax
  41e2c9:	scas   al,BYTE PTR es:[edi]
  41e2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2cb:	aad    0xfa
  41e2cd:	push   edx
  41e2ce:	fcomp  DWORD PTR [esi+0x30]
  41e2d1:	inc    esp
  41e2d2:	jmp    0x89937a92
  41e2d7:	into   
  41e2d8:	or     esi,DWORD PTR [ecx+0x30]
  41e2db:	in     al,0x4
  41e2dd:	adc    esp,ebx
  41e2df:	je     0x41e2cc
  41e2e1:	jbe    0x41e30b
  41e2e3:	gs dec edx
  41e2e5:	mov    dh,0x2d
  41e2e7:	das    
  41e2e8:	das    
  41e2e9:	adc    esi,eax
  41e2eb:	jbe    0x41e2c1
  41e2ed:	xchg   edi,eax
  41e2ee:	xchg   ecx,eax
  41e2ef:	xor    al,0x5e
  41e2f1:	in     al,0xf5
  41e2f3:	dec    ebx
  41e2f4:	ror    DWORD PTR [edx+0x561590e0],1
  41e2fa:	or     eax,0xd77c76ae
  41e2ff:	fucomp st(0)
  41e301:	and    al,0x6b
  41e303:	bnd js 0x41e300
  41e306:	or     eax,0x47b16488
  41e30b:	cmovle esi,DWORD PTR [edi-0x39]
  41e30f:	out    0x5e,eax
  41e311:	lock sti 
  41e313:	call   0x17fb:0x4e664f3f
  41e31a:	jo     0x41e29c
  41e31c:	dec    edi
  41e31d:	shld   DWORD PTR [esi],ebx,cl
  41e320:	inc    esp
  41e321:	call   0xd961:0x72ce02b8
  41e328:	inc    esp
  41e329:	pushf  
  41e32a:	sbb    eax,0x88191354
  41e32f:	inc    eax
  41e330:	adc    al,0x4b
  41e332:	adc    esp,DWORD PTR [ebx-0x6f93cb6c]
  41e338:	pop    eax
  41e339:	not    BYTE PTR [ecx+0xf669047]
  41e33f:	(bad)  
  41e340:	push   edx
  41e341:	sti    
  41e342:	jl     0x41e2d0
  41e344:	mov    bl,0x5f
  41e346:	sub    al,0x77
  41e348:	push   ecx
  41e349:	mov    ss,WORD PTR [ebp+0x2f13cbed]
  41e34f:	inc    ebx
  41e350:	out    0x70,al
  41e352:	cmp    ecx,0xf501a80a
  41e358:	(bad)  
  41e359:	jb     0x41e2e4
  41e35b:	inc    ebp
  41e35c:	js     0x41e3cd
  41e35e:	sub    DWORD PTR [edi-0x25a69ed9],esp
  41e364:	pop    esp
  41e365:	and    edi,DWORD PTR [ecx+0x466d720a]
  41e36b:	push   ecx
  41e36c:	mov    ch,0x61
  41e36e:	sub    ebx,DWORD PTR [ebp-0x7f]
  41e371:	les    ebp,FWORD PTR [edi-0x59]
  41e374:	popf   
  41e375:	or     eax,0x794e83c0
  41e37a:	mov    es,WORD PTR [edi]
  41e37c:	xor    ebx,DWORD PTR [ebx+0x3b]
  41e37f:	out    0xe2,eax
  41e381:	in     al,dx
  41e382:	inc    eax
  41e383:	pop    es
  41e384:	scas   al,BYTE PTR es:[edi]
  41e385:	rcr    esi,cl
  41e387:	mov    ebp,0xa5c2b165
  41e38c:	mov    esp,edx
  41e38e:	push   ss
  41e38f:	fidiv  WORD PTR [eax+0x73edbf91]
  41e395:	sub    eax,ebp
  41e397:	jp     0x41e3c8
  41e399:	loopne 0x41e40c
  41e39b:	test   DWORD PTR [ebx],0x5605c829
  41e3a1:	dec    esp
  41e3a2:	mov    bh,0x81
  41e3a4:	loopne 0x41e3e6
  41e3a6:	sub    BYTE PTR [ebp-0x36b923fb],bh
  41e3ac:	xor    DWORD PTR [eax-0xd],esi
  41e3af:	loope  0x41e407
  41e3b1:	pop    edi
  41e3b2:	dec    ebx
  41e3b3:	push   edi
  41e3b4:	adc    BYTE PTR [esi],bl
  41e3b6:	dec    ebx
  41e3b7:	jo     0x41e388
  41e3b9:	scas   eax,DWORD PTR es:[edi]
  41e3ba:	inc    ebx
  41e3bb:	data16 (bad) 
  41e3bd:	jb     0x41e40c
  41e3bf:	in     al,dx
  41e3c0:	sbb    BYTE PTR [ebp-0x53],al
  41e3c3:	mov    ds:0xef66ddab,eax
  41e3c8:	push   esp
  41e3c9:	(bad)  
  41e3ca:	xor    al,0x55
  41e3cc:	mov    ah,0xa5
  41e3ce:	mov    WORD PTR [ebx],es
  41e3d0:	outs   dx,DWORD PTR ds:[esi]
  41e3d1:	and    eax,0xf4091591
  41e3d6:	xor    dl,ch
  41e3d8:	call   0xbde9ef16
  41e3dd:	lods   eax,DWORD PTR ds:[esi]
  41e3de:	pushf  
  41e3df:	adc    edi,esi
  41e3e1:	fimul  WORD PTR [esp+eiz*2]
  41e3e4:	add    DWORD PTR [ecx-0x18],0x52d42903
  41e3eb:	pop    edx
  41e3ec:	or     cl,BYTE PTR [esi]
  41e3ee:	and    al,0x93
  41e3f0:	imul   edx,DWORD PTR [eax],0xffffffd0
  41e3f3:	jae    0x41e39c
  41e3f5:	lods   eax,DWORD PTR ds:[esi]
  41e3f6:	mov    ah,BYTE PTR [eax]
  41e3f8:	aam    0xde
  41e3fa:	mov    bh,0x2f
  41e3fc:	sbb    ecx,0x2be39fa2
  41e402:	push   0xffffffe3
  41e404:	pop    ds
  41e405:	sti    
  41e406:	aas    
  41e407:	dec    esp
  41e408:	mul    BYTE PTR [esi+esi*8+0xb319654]
  41e40f:	in     eax,dx
  41e410:	mov    ?,WORD PTR [ebx-0x671b9752]
  41e416:	mov    ds:0x5ef89baa,eax
  41e41b:	or     ecx,DWORD PTR ds:0x41e413bd
  41e421:	jecxz  0x41e466
  41e423:	pop    edx
  41e424:	cmp    BYTE PTR [edx+0x7a],cl
  41e427:	cmc    
  41e428:	icebp  
  41e429:	jle    0x41e3ed
  41e42b:	mov    edx,0xf8eb8b79
  41e430:	xor    eax,0x86c4b12a
  41e435:	sub    edx,0xfa540e46
  41e43b:	in     eax,dx
  41e43c:	mov    ebx,0xaa3d8039
  41e441:	push   ds
  41e442:	or     bh,BYTE PTR [edx+ebp*1+0x6f69a3dd]
  41e449:	adc    DWORD PTR [esi-0x39e4a9cf],esp
  41e44f:	dec    ebx
  41e450:	mov    esp,0x79e01698
  41e455:	imul   esi,DWORD PTR [eax+ebp*8+0x77c37979],0xdf9f1bd0
  41e460:	sbb    BYTE PTR [eax],dl
  41e462:	out    0x30,al
  41e464:	mov    ebx,0xa571d6b3
  41e469:	rcr    DWORD PTR [edx+0x7a],1
  41e46c:	loopne 0x41e406
  41e46e:	sar    DWORD PTR [esi+0x56d2b02a],0x38
  41e475:	pmaddwd mm7,mm2
  41e478:	push   eax
  41e479:	std    
  41e47a:	dec    edx
  41e47b:	pop    ebx
  41e47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e47d:	out    0xf6,al
  41e47f:	not    BYTE PTR [ebp*2+0x27878152]
  41e486:	dec    esi
  41e487:	mov    esp,0x6411e7ea
  41e48c:	pop    ds
  41e48d:	popa   
  41e48e:	push   ebp
  41e48f:	mov    ch,0x97
  41e491:	xor    eax,0x74c06b13
  41e496:	jp     0x41e42d
  41e498:	aad    0x76
  41e49a:	(bad)  
  41e49b:	sub    eax,0xfaff100d
  41e4a0:	fistp  WORD PTR [esi+ebp*2-0x2c8d81bd]
  41e4a7:	jp     0x41e482
  41e4a9:	xchg   edx,eax
  41e4aa:	jle    0x41e4c2
  41e4ac:	das    
  41e4ad:	fs cmp eax,0xccaf53a3
  41e4b3:	ins    DWORD PTR es:[edi],dx
  41e4b4:	cs sbb esi,0x66
  41e4b8:	test   al,0xe5
  41e4ba:	dec    esp
  41e4bb:	loope  0x41e4da
  41e4bd:	or     al,BYTE PTR [esi+0x61]
  41e4c0:	fldcw  WORD PTR [esi+ebp*4+0x1]
  41e4c4:	jge    0x41e4f9
  41e4c6:	inc    ecx
  41e4c7:	and    ebp,DWORD PTR [ebp+0x37]
  41e4ca:	inc    DWORD PTR ds:0xccf4831b
  41e4d0:	or     BYTE PTR [edi+0x63e926],dh
  41e4d6:	pop    eax
  41e4d7:	out    0x25,al
  41e4d9:	mov    eax,ds
  41e4db:	repnz sbb al,dl
  41e4de:	fwait
  41e4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e0:	sbb    eax,0xe94945b2
  41e4e5:	or     DWORD PTR [edx+0x2a],esp
  41e4e8:	push   esp
  41e4e9:	cld    
  41e4ea:	xchg   esi,eax
  41e4eb:	retf   
  41e4ec:	inc    ecx
  41e4ed:	outs   dx,DWORD PTR ds:[esi]
  41e4ee:	imul   BYTE PTR [eax+0x69]
  41e4f1:	popa   
  41e4f2:	fimul  WORD PTR [esi-0x3b]
  41e4f5:	and    al,0x64
  41e4f7:	pop    ss
  41e4f8:	jge    0x41e53d
  41e4fa:	cmp    ah,al
  41e4fc:	popa   
  41e4fd:	fidiv  WORD PTR [esi+0x8]
  41e500:	push   esi
  41e501:	mov    edi,0x9df47906
  41e506:	aam    0x38
  41e508:	nop
  41e509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e50a:	pop    ecx
  41e50b:	pop    edi
  41e50c:	mov    al,ds:0xcf2e1bea
  41e511:	xchg   edi,eax
  41e512:	pop    es
  41e513:	sbb    ecx,DWORD PTR [edx+esi*1]
  41e516:	xor    BYTE PTR [edi+edi*1+0x63],0x61
  41e51b:	int3   
  41e51c:	or     cl,BYTE PTR [edx-0x35]
  41e51f:	push   ebp
  41e520:	pop    esp
  41e521:	jge    0x41e4f2
  41e523:	mov    edx,0x6363fc1
  41e528:	ret    0x2524
  41e52b:	mov    ch,0x6b
  41e52d:	cmp    eax,0x22903214
  41e532:	inc    esi
  41e533:	in     eax,dx
  41e534:	call   0x800e:0xf9665d04
  41e53b:	mov    esi,0x6d45df5d
  41e540:	push   ebx
  41e541:	xor    eax,0x985bb07e
  41e546:	mov    BYTE PTR [ebp-0x29],dl
  41e549:	jne    0x41e54d
  41e54b:	je     0x41e54a
  41e54d:	ja     0x41e5b8
  41e54f:	hlt    
  41e550:	add    DWORD PTR [ebx-0x32],esp
  41e553:	call   0xbda0:0x9cb8cdc5
  41e55a:	stc    
  41e55b:	lahf   
  41e55c:	jbe    0x41e564
  41e55e:	sbb    bh,BYTE PTR [esi]
  41e560:	mov    edi,0xf2c23f61
  41e565:	inc    ebp
  41e566:	clc    
  41e567:	pop    ebp
  41e568:	and    BYTE PTR [eax-0x1e],dl
  41e56b:	cwde   
  41e56c:	fnsave [ecx+0x25]
  41e56f:	dec    DWORD PTR [ebp+eiz*8-0x20]
  41e573:	retf   0x7393
  41e576:	adc    cl,BYTE PTR [ebx+0x45]
  41e579:	xor    BYTE PTR [eax+0x2b],al
  41e57c:	int3   
  41e57d:	ss stos DWORD PTR es:[edi],eax
  41e57f:	outs   dx,DWORD PTR ds:[esi]
  41e580:	push   ecx
  41e581:	mov    edi,0xcb18f140
  41e586:	mov    edx,edi
  41e588:	mov    edi,0x254940f5
  41e58d:	aaa    
  41e58e:	jnp    0x41e58a
  41e590:	xchg   ecx,eax
  41e591:	jae    0x41e5c5
  41e593:	mov    ds,edx
  41e595:	retf   
  41e596:	popa   
  41e597:	inc    ebp
  41e598:	cld    
  41e599:	mov    dl,0x79
  41e59b:	imul   edi,ebx,0xd44a50e7
  41e5a1:	jl     0x41e5dc
  41e5a3:	ror    BYTE PTR [edi-0x6],0xba
  41e5a7:	sub    DWORD PTR [esi-0x552decbb],edx
  41e5ad:	popf   
  41e5ae:	pop    ds
  41e5af:	jns    0x41e628
  41e5b1:	dec    esp
  41e5b2:	mov    dl,0xe6
  41e5b4:	push   ds
  41e5b5:	push   ds
  41e5b6:	(bad)  
  41e5b7:	fwait
  41e5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b9:	push   ecx
  41e5ba:	test   eax,0x7c6509c3
  41e5bf:	enter  0x281c,0xe6
  41e5c3:	xor    DWORD PTR [esi+0x4bca0b66],ebp
  41e5c9:	mov    bh,0xd4
  41e5cb:	pop    ebp
  41e5cc:	mov    esp,DWORD PTR [ebp-0x372780dd]
  41e5d2:	xchg   esp,eax
  41e5d3:	xor    BYTE PTR [ebp+0x4e],bl
  41e5d6:	sub    eax,0x2710c870
  41e5db:	dec    esi
  41e5dc:	adc    al,0x61
  41e5de:	lock daa 
  41e5e0:	mov    DWORD PTR [edi-0x23f19b23],edx
  41e5e6:	ret    
  41e5e7:	je     0x41e58f
  41e5e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ea:	aad    0x32
  41e5ec:	mov    eax,0xe572d753
  41e5f1:	push   cs
  41e5f2:	pop    ebp
  41e5f3:	int    0xae
  41e5f5:	pop    esp
  41e5f6:	pusha  
  41e5f7:	(bad)  
  41e5f8:	ds jns 0x41e5a9
  41e5fb:	sbb    al,0xc5
  41e5fe:	pop    ds
  41e5ff:	cwde   
  41e600:	test   edi,ebp
  41e602:	xchg   ebx,eax
  41e603:	push   ss
  41e604:	adc    al,0xd2
  41e606:	fwait
  41e607:	mov    DWORD PTR [esp+eax*1+0x557462ed],eax
  41e60e:	(bad)  
  41e60f:	mov    esp,0x6ea0ac7
  41e614:	mov    edi,0xdc11968a
  41e619:	push   ebx
  41e61a:	test   eax,0xa43e7c69
  41e61f:	addr16 loope 0x41e5d8
  41e622:	mov    WORD PTR [ecx+0x1a],gs
  41e625:	pusha  
  41e626:	fld    QWORD PTR [esp+eiz*8+0x38]
  41e62a:	iret   
  41e62b:	ins    DWORD PTR es:[edi],dx
  41e62c:	and    al,BYTE PTR [esi-0x28]
  41e62f:	push   ds
  41e630:	push   0x47deec7f
  41e635:	jmp    0x41e5bc
  41e637:	mov    edi,0x2e1e8de8
  41e63c:	shl    BYTE PTR [esi],0x3c
  41e63f:	data16 cmp al,0x0
  41e642:	jecxz  0x41e5c6
  41e644:	loope  0x41e652
  41e646:	sbb    al,0x2b
  41e648:	out    0x5c,al
  41e64a:	mov    ecx,0x6d037da3
  41e64f:	rol    BYTE PTR [ecx-0x6023264e],1
  41e655:	aas    
  41e656:	fild   WORD PTR [esi+eiz*1+0xb746875]
  41e65d:	out    0xa1,al
  41e65f:	sbb    al,0x22
  41e661:	sub    al,0xea
  41e663:	loope  0x41e65f
  41e665:	push   eax
  41e666:	and    dl,dl
  41e668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e669:	adc    al,0x5a
  41e66b:	pusha  
  41e66c:	jge    0x41e6c0
  41e66e:	shl    ecx,0xc8
  41e671:	or     DWORD PTR [edx+0x3bd98183],0xd
  41e678:	sub    al,0x27
  41e67a:	jp     0x41e6ad
  41e67c:	xchg   edi,eax
  41e67d:	or     al,0x7c
  41e67f:	xor    eax,0x41834ea0
  41e684:	stos   DWORD PTR es:[edi],eax
  41e685:	imul   dh
  41e687:	cwde   
  41e688:	sub    BYTE PTR [ecx],bl
  41e68a:	sub    eax,DWORD PTR ds:0x1e754d63
  41e690:	sar    DWORD PTR [edi-0x210e1322],1
  41e696:	add    al,0xed
  41e698:	jmp    0x41e684
  41e69a:	cmp    al,0xa6
  41e69c:	call   0xff7f:0xc51747b1
  41e6a3:	repz or al,0x58
  41e6a6:	rcr    edi,cl
  41e6a8:	rcr    DWORD PTR [ecx+edx*8+0x4b],1
  41e6ac:	daa    
  41e6ad:	xor    eax,DWORD PTR [esi+0x2dab71f8]
  41e6b3:	jnp    0x41e6c5
  41e6b5:	fisub  DWORD PTR [eax-0x332a20ae]
  41e6bb:	pop    esp
  41e6bc:	aaa    
  41e6bd:	jg     0x41e6e1
  41e6bf:	xchg   esi,eax
  41e6c0:	pop    ecx
  41e6c1:	loop   0x41e6ab
  41e6c3:	test   BYTE PTR [edx+0x5],dl
  41e6c6:	adc    DWORD PTR ds:0x895aa39f,esp
  41e6cc:	mov    dl,bl
  41e6ce:	sub    DWORD PTR [eax-0x1efd0cee],eax
  41e6d4:	call   0xc057:0x9d42d32
  41e6db:	add    BYTE PTR [ecx-0xe],bl
  41e6de:	aad    0xa2
  41e6e0:	cmp    dl,BYTE PTR [edi]
  41e6e2:	add    eax,0x16d21445
  41e6e7:	aas    
  41e6e8:	cmp    esp,DWORD PTR [edx+0x770ce45e]
  41e6ee:	and    BYTE PTR [esp+edi*2+0x48ac0be3],0x74
  41e6f6:	mov    BYTE PTR [ecx],0xe6
  41e6f9:	pavgw  mm3,QWORD PTR [ecx+0x23ca9518]
  41e700:	mov    edi,0x6137e833
  41e705:	bound  edx,QWORD PTR [ebp+0x7e]
  41e708:	nop
  41e709:	inc    esi
  41e70a:	shr    DWORD PTR [ecx],cl
  41e70c:	add    bh,BYTE PTR [ecx+0x21]
  41e70f:	leave  
  41e710:	ins    BYTE PTR es:[edi],dx
  41e711:	and    edi,DWORD PTR [ecx+0x58]
  41e714:	stos   BYTE PTR es:[edi],al
  41e715:	adc    al,dl
  41e717:	leave  
  41e718:	inc    ebx
  41e719:	inc    ebx
  41e71a:	outs   dx,BYTE PTR ds:[esi]
  41e71b:	jp     0x41e6aa
  41e71d:	xor    BYTE PTR [esi],dl
  41e71f:	sub    BYTE PTR [ecx-0x5d9ee4c7],bl
  41e725:	imul   edx,DWORD PTR [ebp+0x5e24bd27],0xfffffff1
  41e72c:	lea    eax,[esi]
  41e72e:	jmp    edi
  41e730:	add    bh,0x2a
  41e733:	lock add DWORD PTR [ecx],ebx
  41e736:	cmc    
  41e737:	(bad)  [eax]
  41e739:	(bad)
  41e73d:	xor    eax,0xbe7513b1
  41e742:	jns    0x41e6df
  41e744:	das    
  41e745:	mov    eax,0xfd4f9b1a
  41e74a:	stc    
  41e74b:	sbb    DWORD PTR [ebp-0x49fdbaa5],esi
  41e751:	add    BYTE PTR [esi+0x1d566171],cl
  41e757:	xchg   DWORD PTR [ebx+0x2d],eax
  41e75a:	out    0x8e,al
  41e75c:	cdq    
  41e75d:	xor    eax,DWORD PTR [ecx+0x76585f11]
  41e763:	add    eax,eax
  41e765:	jbe    0x41e6fb
  41e767:	adc    al,0xb4
  41e769:	imul   esi,esp,0x2acca1e3
  41e76f:	jo     0x41e7a9
  41e771:	repz sub bh,BYTE PTR [eax-0x75c3715f]
  41e778:	mov    ebx,0xe9d162f3
  41e77d:	into   
  41e77e:	mov    ss,WORD PTR [edx-0x7d]
  41e781:	or     BYTE PTR [eax+ebx*1+0x2554884d],0xcc
  41e789:	pop    edi
  41e78a:	mov    bh,0xf1
  41e78c:	and    al,0xf6
  41e78e:	jb     0x41e752
  41e790:	rol    DWORD PTR [ecx-0x62],0x82
  41e794:	add    dh,al
  41e796:	jle    0x41e78b
  41e798:	pop    ss
  41e799:	jmp    0x41e757
  41e79b:	adc    al,0xea
  41e79d:	or     ebx,ebp
  41e79f:	mov    ds:0x539f7a3e,al
  41e7a4:	push   edi
  41e7a5:	(bad)  
  41e7a6:	not    DWORD PTR [ecx-0x71]
  41e7a9:	cmp    al,ah
  41e7ab:	test   DWORD PTR [edx-0x18],edx
  41e7ae:	popa   
  41e7af:	dec    eax
  41e7b0:	or     eax,0xd74d19d5
  41e7b5:	inc    ebp
  41e7b6:	and    eax,0x80b5ca8e
  41e7bb:	call   0x98fabd04
  41e7c0:	daa    
  41e7c1:	sbb    edi,eax
  41e7c3:	aad    0xa5
  41e7c5:	(bad)  
  41e7c6:	test   BYTE PTR [ebx+edx*2-0x50],0xaa
  41e7cb:	jle    0x41e751
  41e7cd:	push   edx
  41e7ce:	push   ecx
  41e7cf:	adc    ah,BYTE PTR [eax+0x4a]
  41e7d2:	pusha  
  41e7d3:	xchg   edi,eax
  41e7d4:	sub    eax,0x87c10a5
  41e7d9:	lds    ebp,FWORD PTR [eax+0x7d]
  41e7dc:	xlat   BYTE PTR ds:[ebx]
  41e7dd:	push   0xdc3d3288
  41e7e2:	inc    eax
  41e7e3:	jne    0x41e80c
  41e7e5:	pop    esp
  41e7e6:	pushf  
  41e7e7:	aas    
  41e7e8:	xchg   ecx,eax
  41e7e9:	test   DWORD PTR [ebx-0x4f81a325],ecx
  41e7ef:	loop   0x41e824
  41e7f1:	jecxz  0x41e7be
  41e7f3:	xor    ch,BYTE PTR [ecx+edi*1]
  41e7f6:	lods   al,BYTE PTR ds:[esi]
  41e7f7:	add    eax,0x56e5c144
  41e7fc:	dec    eax
  41e7fd:	ins    DWORD PTR es:[edi],dx
  41e7fe:	out    0xda,al
  41e800:	add    bh,BYTE PTR [ebp-0x41]
  41e803:	pusha  
  41e804:	popf   
  41e805:	push   0x6e
  41e807:	add    BYTE PTR [ecx+0x665379ec],dl
  41e80d:	sub    BYTE PTR [edi+eax*4],0xd2
  41e811:	dec    edx
  41e812:	mov    bl,0x7e
  41e814:	push   0xceb2a46b
  41e819:	push   esp
  41e81a:	pop    ebx
  41e81b:	or     DWORD PTR [edx-0x528b9d92],edi
  41e821:	mov    bl,0x86
  41e823:	dec    ebx
  41e824:	test   al,0xc5
  41e826:	xchg   BYTE PTR [eax-0x14],bl
  41e829:	stc    
  41e82a:	or     esi,DWORD PTR [eax+0x3e]
  41e82d:	inc    edx
  41e82e:	sbb    DWORD PTR [ecx],eax
  41e830:	or     DWORD PTR [ecx-0x6cb76305],ebp
  41e836:	xchg   ebp,eax
  41e837:	jo     0x41e835
  41e839:	xchg   esi,eax
  41e83a:	mov    gs,ecx
  41e83c:	fadd   QWORD PTR [edx-0x7f4ce7e2]
  41e842:	jge    0x41e844
  41e844:	aaa    
  41e845:	mov    esp,0x3c07bd1b
  41e84a:	imul   ebx,DWORD PTR [esi-0x2811336],0xf0950c1f
  41e854:	(bad)  
  41e855:	(bad)  
  41e856:	mov    al,0xa6
  41e858:	inc    ecx
  41e859:	cmp    al,0x65
  41e85b:	xor    eax,0x4c7f4f5
  41e860:	jp     0x41e892
  41e862:	sbb    eax,0x5bec0cb3
  41e867:	addr16 xchg ebx,eax
  41e869:	sbb    BYTE PTR [esi-0x3c57ba78],bh
  41e86f:	mov    ah,0xf2
  41e871:	daa    
  41e872:	out    dx,al
  41e873:	jmp    0x4b07593b
  41e878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e879:	scas   eax,DWORD PTR es:[edi]
  41e87a:	jecxz  0x41e869
  41e87c:	xchg   edx,eax
  41e87d:	hlt    
  41e87e:	int    0x5
  41e880:	rcl    BYTE PTR [esi-0x42f2a7b8],1
  41e886:	ss in  eax,0x5
  41e889:	inc    ecx
  41e88a:	arpl   WORD PTR [eax-0x22d42652],bx
  41e890:	xchg   BYTE PTR [edi],dl
  41e892:	pusha  
  41e893:	out    dx,al
  41e894:	into   
  41e895:	jbe    0x41e8ec
  41e897:	jp     0x41e837
  41e899:	not    DWORD PTR [eax-0x22]
  41e89c:	fdivr  QWORD PTR [esi+0x12018fd]
  41e8a2:	pmuludq mm6,mm1
  41e8a5:	scas   eax,DWORD PTR es:[edi]
  41e8a6:	xchg   ebp,eax
  41e8a7:	lds    ebx,FWORD PTR [esi-0x7a]
  41e8aa:	clc    
  41e8ab:	mov    al,ds:0xb98174ac
  41e8b0:	outs   dx,DWORD PTR ds:[esi]
  41e8b1:	daa    
  41e8b2:	stc    
  41e8b3:	popf   
  41e8b4:	pop    edx
  41e8b5:	push   cs
  41e8b6:	cmp    esp,DWORD PTR [ebp-0x506f9240]
  41e8bc:	inc    edx
  41e8bd:	stc    
  41e8be:	sbb    al,0xe6
  41e8c0:	xchg   esi,eax
  41e8c1:	cmp    eax,0x2c2676e
  41e8c6:	jno    0x41e8db
  41e8c8:	sbb    dl,BYTE PTR [edi+eiz*4+0x29]
  41e8cc:	aad    0xf4
  41e8ce:	mov    al,0x58
  41e8d0:	je     0x41e8e0
  41e8d2:	std    
  41e8d3:	cmp    eax,0x68c45fbb
  41e8d8:	jns    0x41e934
  41e8da:	push   edi
  41e8db:	adc    al,0xe1
  41e8dd:	and    DWORD PTR [edx],ebx
  41e8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8e0:	pop    edi
  41e8e1:	fs jae 0x41e8de
  41e8e4:	sub    edx,esp
  41e8e6:	mov    esp,0xca706db4
  41e8eb:	cmp    al,0x82
  41e8ed:	mov    dh,0x11
  41e8ef:	fdivr  QWORD PTR [edx+0x60723d79]
  41e8f5:	sbb    al,0x6e
  41e8f7:	(bad)  
  41e8f8:	in     al,0xc3
  41e8fa:	and    bl,BYTE PTR [ebp-0x43]
  41e8fd:	lahf   
  41e8fe:	jmp    0xaf4a:0x40926fe2
  41e905:	and    bh,BYTE PTR [ebx+0x53]
  41e908:	dec    ebx
  41e909:	mov    eax,0xf4ccde77
  41e90e:	push   esp
  41e90f:	adc    BYTE PTR [edi-0x6aefb9dd],cl
  41e915:	ins    DWORD PTR es:[edi],dx
  41e916:	call   0xe47f:0xb14dccdd
  41e91d:	aas    
  41e91e:	cld    
  41e91f:	rcl    BYTE PTR [edx],cl
  41e921:	adc    al,0x97
  41e923:	push   esp
  41e924:	arpl   WORD PTR [edi-0x385cb289],bp
  41e92a:	enter  0x6dab,0x2a
  41e92e:	fdiv   st,st(2)
  41e930:	mov    al,ds:0x2824e52d
  41e935:	ins    BYTE PTR es:[edi],dx
  41e936:	xchg   esi,eax
  41e937:	clc    
  41e938:	xchg   ecx,eax
  41e939:	lds    edx,FWORD PTR [esi+0x541ef9a2]
  41e93f:	push   esp
  41e940:	loope  0x41e981
  41e942:	stos   DWORD PTR es:[edi],eax
  41e943:	pop    eax
  41e944:	mov    esp,0x696555b1
  41e949:	pusha  
  41e94a:	and    eax,DWORD PTR [ecx]
  41e94c:	dec    ebx
  41e94d:	enter  0x6dcb,0xcb
  41e951:	xchg   edi,eax
  41e952:	and    al,0x9f
  41e954:	shl    BYTE PTR ds:0x8fa824dc,cl
  41e95a:	fadd   st(3),st
  41e95c:	adc    BYTE PTR [eax],ah
  41e95e:	inc    eax
  41e95f:	dec    ecx
  41e960:	(bad)  
  41e961:	sahf   
  41e962:	jg     0x41e987
  41e964:	adc    DWORD PTR [edx-0x4b],ecx
  41e967:	js     0x41e900
  41e969:	js     0x41e987
  41e96b:	sbb    al,0x95
  41e96d:	xchg   ah,ah
  41e96f:	ret    
  41e970:	pop    edi
  41e971:	mov    ecx,0x1ee39d43
  41e976:	sbb    dl,0xb7
  41e979:	inc    ebx
  41e97a:	fcmovb st,st(6)
  41e97c:	fisub  DWORD PTR [edx]
  41e97e:	sub    bl,BYTE PTR [ebp+eiz*4-0x60f10325]
  41e985:	cmc    
  41e986:	(bad)  
  41e987:	fiadd  DWORD PTR [esi+ebx*4-0x477f403b]
  41e98e:	in     al,dx
  41e98f:	dec    esp
  41e990:	in     eax,0xbe
  41e992:	shl    cl,cl
  41e994:	pushf  
  41e995:	push   ecx
  41e996:	push   ds
  41e997:	adc    dl,BYTE PTR [ecx+ebp*1+0xa1eb738]
  41e99e:	and    DWORD PTR ds:0x535a21bf,ebx
  41e9a4:	adc    ecx,DWORD PTR [ebp+0x19]
  41e9a7:	jb     0x41e936
  41e9a9:	jnp    0x41e947
  41e9ab:	ins    DWORD PTR es:[edi],dx
  41e9ac:	push   es
  41e9ad:	dec    ecx
  41e9ae:	lahf   
  41e9af:	lahf   
  41e9b0:	out    dx,al
  41e9b1:	retf   0x6ff9
  41e9b4:	sub    bl,ah
  41e9b6:	or     DWORD PTR gs:[edi-0x5c],ebx
  41e9ba:	hlt    
  41e9bb:	adc    al,BYTE PTR [ebx-0x79133267]
  41e9c1:	sbb    eax,0xa2e47125
  41e9c6:	jl     0x41e9e1
  41e9c8:	retf   
  41e9c9:	lds    edi,FWORD PTR [ecx+0x53]
  41e9cc:	adc    DWORD PTR cs:[eax-0xc976324],ebx
  41e9d3:	shl    BYTE PTR [esi+eiz*2+0x70603658],0xa1
  41e9db:	shr    BYTE PTR [ebx+ecx*4+0x64361efa],0xc
  41e9e3:	ror    dh,1
  41e9e5:	mov    cl,0xfe
  41e9e7:	jne    0x41ea38
  41e9e9:	lods   eax,DWORD PTR ds:[esi]
  41e9ea:	out    0xb6,al
  41e9ec:	jmp    0x7f05:0x4fc125e2
  41e9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f4:	pop    ebp
  41e9f5:	jmp    0x345d:0x1ae008e3
  41e9fc:	lds    ecx,FWORD PTR [eax]
  41e9fe:	loope  0x41e9ae
  41ea00:	cmp    al,0xcd
  41ea02:	loopne 0x41ea7f
  41ea04:	mov    fs,WORD PTR [edx-0x22]
  41ea07:	in     eax,dx
  41ea08:	leave  
  41ea09:	pop    ebp
  41ea0a:	das    
  41ea0b:	outs   dx,DWORD PTR ds:[esi]
  41ea0c:	jnp    0x41ea44
  41ea0e:	jmp    0x20cb:0xa32916cb
  41ea15:	pushf  
  41ea16:	mov    esp,0x33b25f4f
  41ea1b:	fs retf 0xfc85
  41ea1f:	pushf  
  41ea20:	push   ecx
  41ea21:	or     DWORD PTR es:[eax+0xe6f49bb],ecx
  41ea28:	clc    
  41ea29:	adc    ebp,0x26
  41ea2c:	jae    0x41e9cc
  41ea2e:	push   edx
  41ea2f:	dec    edx
  41ea30:	retf   0xb8d9
  41ea33:	fist   DWORD PTR ds:0x8e676253
  41ea39:	mov    ah,0xfe
  41ea3b:	add    dl,BYTE PTR [ebx]
  41ea3d:	add    eax,DWORD PTR [eax-0x115fac1f]
  41ea43:	call   0xdf83581d
  41ea48:	loope  0x41ea61
  41ea4a:	sbb    ch,dl
  41ea4c:	mov    ecx,0x6591614d
  41ea51:	std    
  41ea52:	lea    ebp,[esi+0x476d072f]
  41ea58:	jecxz  0x41e9eb
  41ea5a:	xchg   esp,eax
  41ea5b:	pop    ds
  41ea5c:	push   esi
  41ea5d:	arpl   WORD PTR [ecx],bx
  41ea5f:	out    dx,al
  41ea60:	lds    ebx,FWORD PTR [edi]
  41ea62:	aad    0x7
  41ea64:	mov    dl,0xd4
  41ea66:	push   ss
  41ea67:	inc    edx
  41ea68:	ficom  WORD PTR [edi+ecx*1+0x70]
  41ea6c:	pop    eax
  41ea6d:	dec    esp
  41ea6e:	iret   
  41ea6f:	inc    ecx
  41ea70:	ret    
  41ea71:	dec    ecx
  41ea72:	test   eax,0x9ee49360
  41ea77:	cwde   
  41ea78:	ss aam 0x39
  41ea7b:	lock inc esp
  41ea7d:	loop   0x41eaeb
  41ea7f:	and    al,BYTE PTR [edi]
  41ea81:	sar    BYTE PTR ds:0xd1fcd372,cl
  41ea87:	and    ah,bh
  41ea89:	aaa    
  41ea8a:	mov    esi,DWORD PTR [edi-0x6783413d]
  41ea90:	test   DWORD PTR [ecx-0x3],0x9def7d8b
  41ea97:	or     ch,BYTE PTR [eax]
  41ea99:	adc    eax,0x524877a8
  41ea9e:	pop    ss
  41ea9f:	sbb    edx,DWORD PTR [esi]
  41eaa1:	jmp    0xd75ffe93
  41eaa6:	inc    edx
  41eaa7:	and    DWORD PTR [ecx-0x3f],ebp
  41eaaa:	jnp    0x41ea31
  41eaac:	fstp   TBYTE PTR [ebp+eax*4+0xb6f5ce8]
  41eab3:	pop    ds
  41eab4:	hlt    
  41eab5:	adc    al,0xf2
  41eab7:	int    0xf1
  41eab9:	(bad)  
  41eaba:	push   ss
  41eabb:	imul   ecx,DWORD PTR [edx+0x637e5ec],0xffffffdb
  41eac2:	sub    ebx,esp
  41eac4:	lahf   
  41eac5:	inc    esp
  41eac6:	or     bl,cl
  41eac8:	push   ss
  41eac9:	mov    eax,ds:0xceadc65d
  41eace:	daa    
  41eacf:	mov    dl,0xdd
  41ead1:	cmp    esi,DWORD PTR [ebx+0x17ba512]
  41ead7:	icebp  
  41ead8:	or     al,0x9f
  41eada:	scas   eax,DWORD PTR es:[edi]
  41eadb:	inc    esi
  41eadc:	dec    esi
  41eadd:	or     eax,0x19fd36b9
  41eae2:	sahf   
  41eae3:	ficomp WORD PTR [eax]
  41eae5:	jl     0x41eb60
  41eae7:	std    
  41eae8:	mov    ch,0x75
  41eaea:	jle    0x41eb69
  41eaec:	push   0x3f26472a
  41eaf1:	inc    eax
  41eaf2:	shl    DWORD PTR [ebp+0x71],0xa3
  41eaf6:	les    ebx,FWORD PTR [ebx-0xb]
  41eaf9:	xor    DWORD PTR [ebp-0x64],0xffffffc3
  41eafd:	mov    eax,ds:0x9255397e
  41eb02:	jl     0x41eaeb
  41eb04:	jge    0x41eb35
  41eb06:	jmp    0x41eaf7
  41eb08:	hlt    
  41eb09:	dec    edi
  41eb0a:	mov    BYTE PTR [edx-0x61],al
  41eb0d:	into   
  41eb0e:	ins    DWORD PTR es:[edi],dx
  41eb0f:	or     BYTE PTR [edx],al
  41eb11:	fild   WORD PTR [ebx-0x2e]
  41eb14:	(bad)  
  41eb16:	das    
  41eb17:	mov    bl,0x22
  41eb19:	mov    ds:0xc888e3ba,al
  41eb1e:	dec    ebp
  41eb1f:	aad    0x61
  41eb21:	xor    al,0x2d
  41eb23:	aaa    
  41eb24:	mov    bl,0xe3
  41eb26:	call   0x7cd0:0x7f5ddc5f
  41eb2d:	sar    DWORD PTR [ebx-0x3ab7c1f3],0xdf
  41eb34:	push   esp
  41eb35:	repz hlt 
  41eb37:	adc    BYTE PTR [ebx-0x254e3613],al
  41eb3d:	mov    al,0xdd
  41eb3f:	sub    al,0x2
  41eb41:	pop    ecx
  41eb42:	test   al,0x4d
  41eb44:	cdq    
  41eb45:	in     al,0x45
  41eb47:	sub    esi,DWORD PTR [ebx]
  41eb49:	les    edi,FWORD PTR [esi+ecx*1]
  41eb4c:	(bad)  
  41eb4d:	cmp    DWORD PTR [edi-0x46c0e962],ecx
  41eb53:	dec    esp
  41eb54:	in     al,dx
  41eb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb56:	jle    0x41eb0d
  41eb58:	mov    ds:0xc1e14be4,eax
  41eb5d:	cwde   
  41eb5e:	lock mov DWORD PTR [edx+0x19],ecx
  41eb62:	in     al,dx
  41eb63:	aaa    
  41eb64:	rcr    DWORD PTR [eax-0x32e7de43],1
  41eb6a:	lea    ecx,[eax]
  41eb6c:	aad    0xf6
  41eb6e:	out    dx,eax
  41eb6f:	bound  edi,QWORD PTR [eax+0xfdbeecc]
  41eb75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb76:	xchg   ecx,eax
  41eb77:	ds out dx,al
  41eb79:	repz cmp cl,BYTE PTR [ebp+0x51ad65a7]
  41eb80:	(bad)
  41eb84:	jmp    0x41ec03
  41eb86:	sbb    edx,DWORD PTR [eax+eax*1]
  41eb89:	popf   
  41eb8a:	cmp    edx,eax
  41eb8c:	pop    eax
  41eb8d:	mov    ebp,0xee0c7d90
  41eb92:	js     0x41eb41
  41eb94:	jg     0x41eb64
  41eb96:	outs   dx,DWORD PTR ds:[esi]
  41eb97:	pushf  
  41eb98:	xchg   BYTE PTR [edi+0x3545c741],ah
  41eb9e:	in     al,0x3d
  41eba0:	sub    al,0x16
  41eba2:	add    bh,BYTE PTR [eax-0x30]
  41eba5:	push   eax
  41eba6:	out    dx,eax
  41eba7:	out    0x57,eax
  41eba9:	pop    edx
  41ebaa:	imul   edx,DWORD PTR [ebp-0x6b377f61],0xfffffff0
  41ebb1:	test   cl,bl
  41ebb3:	pop    ebx
  41ebb4:	mov    ebx,0x508c9a62
  41ebb9:	and    ebp,DWORD PTR [eax+eiz*2+0x1b5c55ee]
  41ebc0:	add    BYTE PTR [ecx+0x2c],ah
  41ebc3:	and    ah,BYTE PTR [ebp+edx*4-0x7e]
  41ebc7:	pop    ss
  41ebc8:	inc    ebp
  41ebc9:	inc    ebx
  41ebca:	mov    dh,0xfd
  41ebcc:	push   es
  41ebcd:	xchg   edi,eax
  41ebce:	idiv   ebx
  41ebd0:	lock dec ecx
  41ebd2:	scas   al,BYTE PTR es:[edi]
  41ebd3:	jmp    0x8eab:0xdaeb9c26
  41ebda:	test   al,0x15
  41ebdc:	int3   
  41ebdd:	dec    edx
  41ebde:	cli    
  41ebdf:	cdq    
  41ebe0:	adc    al,0xb4
  41ebe2:	push   ecx
  41ebe3:	xor    eax,0x8698aa9
  41ebe8:	mov    ebx,0x22d33db
  41ebed:	jg     0x41ebc9
  41ebef:	xchg   ebx,eax
  41ebf0:	push   cs
  41ebf1:	out    0x28,eax
  41ebf3:	fisub  DWORD PTR [esi+0x48]
  41ebf6:	and    BYTE PTR [eax],0x1c
  41ebf9:	xor    al,al
  41ebfb:	add    ch,BYTE PTR [ebx+0x362025b3]
  41ec01:	jmp    0x12a3ce6b
  41ec06:	mov    bh,0x60
  41ec08:	inc    eax
  41ec09:	sti    
  41ec0a:	xchg   edx,eax
  41ec0b:	mov    dl,0xc2
  41ec0d:	dec    eax
  41ec0e:	jg     0x41ec61
  41ec10:	and    BYTE PTR [eax],0x88
  41ec13:	into   
  41ec14:	scas   eax,DWORD PTR es:[edi]
  41ec15:	push   ds
  41ec16:	lock loope 0x41ec0c
  41ec19:	add    DWORD PTR [eax+0x7c],0x4d
  41ec1d:	aaa    
  41ec1e:	fs loope 0x41ec38
  41ec21:	adc    bl,BYTE PTR [edx+0x11]
  41ec24:	push   eax
  41ec25:	mov    ecx,0xa7e4337b
  41ec2a:	iret   
  41ec2b:	push   eax
  41ec2c:	sub    edi,DWORD PTR [esi+0x6b]
  41ec2f:	add    ebx,ecx
  41ec31:	xor    dl,BYTE PTR [ebp+0x40]
  41ec34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec35:	push   cs
  41ec36:	dec    DWORD PTR [ebx+esi*8+0x6d]
  41ec3a:	inc    edi
  41ec3b:	loopne 0x41ebd6
  41ec3d:	iret   
  41ec3e:	mov    ecx,0x7c24cd1
  41ec43:	cmp    edi,DWORD PTR [edi-0x16782017]
  41ec49:	cmp    eax,0xbf22a714
  41ec4e:	sub    esp,DWORD PTR [edi]
  41ec50:	or     al,0xe0
  41ec52:	lods   al,BYTE PTR ds:[esi]
  41ec53:	mov    al,ds:0x77e8f4df
  41ec58:	push   ds
  41ec59:	cwde   
  41ec5a:	push   ebp
  41ec5b:	mov    eax,0x8ea89e55
  41ec60:	jb     0x41ec40
  41ec62:	xchg   DWORD PTR ds:0x5b8bd9d5,esi
  41ec68:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41ec6a:	pop    esp
  41ec6b:	les    ebx,FWORD PTR [esi]
  41ec6d:	popf   
  41ec6e:	aam    0x1d
  41ec70:	jo     0x41ecc6
  41ec72:	xchg   DWORD PTR [ecx-0x549f63fb],esi
  41ec78:	hlt    
  41ec79:	jbe    0x41ec56
  41ec7b:	fiadd  DWORD PTR [edi+eiz*8+0x1b]
  41ec7f:	dec    ebp
  41ec80:	call   0x524c0f89
  41ec85:	sub    BYTE PTR [esi-0x34d600aa],al
  41ec8b:	std    
  41ec8c:	sub    DWORD PTR [ecx],eax
  41ec8e:	xchg   edi,eax
  41ec8f:	jno    0x41ec26
  41ec91:	sar    DWORD PTR [esp+eiz*2-0x620fdfd5],cl
  41ec98:	ds imul edx,ecx,0xfc86f425
  41ec9f:	and    BYTE PTR ds:0x6d598f23,al
  41eca5:	cmp    BYTE PTR [ecx+0x23e9c1dc],ah
  41ecab:	cld    
  41ecac:	retf   
  41ecad:	adc    BYTE PTR [ecx-0x2e253466],dl
  41ecb3:	enter  0x7c24,0xa6
  41ecb7:	mov    edi,0x935e0c7d
  41ecbc:	push   sp
  41ecbe:	lods   al,BYTE PTR ds:[esi]
  41ecbf:	imul   ebp,edi,0xf0056734
  41ecc5:	mov    eax,0x6d570f00
  41ecca:	push   cs
  41eccb:	in     al,dx
  41eccc:	push   edi
  41eccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecce:	fmul   DWORD PTR [edx+0x75be04c9]
  41ecd4:	sub    edx,DWORD PTR [edx]
  41ecd6:	es inc esp
  41ecd8:	mov    dh,0x82
  41ecda:	inc    edi
  41ecdb:	shl    BYTE PTR [ebx],cl
  41ecdd:	mov    BYTE PTR [esi],0x8b
  41ece0:	jge    0x41ece5
  41ece2:	(bad)  
  41ece3:	hlt    
  41ece4:	dec    edi
  41ece5:	sar    edx,0xa5
  41ece8:	imul   esi,DWORD PTR [eax-0x10],0x1c
  41ecec:	mov    bl,0x2d
  41ecee:	or     esi,0xffffff98
  41ecf1:	pop    esp
  41ecf2:	xor    al,0xee
  41ecf4:	cmp    ah,BYTE PTR [ebp+0x2f]
  41ecf7:	in     al,0x4f
  41ecf9:	scas   al,BYTE PTR es:[edi]
  41ecfa:	jb     0x41ecd5
  41ecfc:	xor    esi,DWORD PTR [edi]
  41ecfe:	and    BYTE PTR [edi-0x38],0x14
  41ed02:	das    
  41ed03:	or     al,0xbb
  41ed05:	jecxz  0x41ecc3
  41ed07:	mov    eax,0x8a3ffedb
  41ed0c:	gs out 0x28,eax
  41ed0f:	fs in  al,dx
  41ed11:	clc    
  41ed12:	aad    0xfb
  41ed14:	ins    BYTE PTR es:[edi],dx
  41ed15:	dec    esi
  41ed16:	cmp    cl,0x1a
  41ed19:	sub    ecx,DWORD PTR [edi+ebp*8+0x42]
  41ed1d:	inc    eax
  41ed1e:	or     al,0xf9
  41ed20:	shl    DWORD PTR [ecx-0x1389ea90],1
  41ed26:	enter  0xe77b,0xf7
  41ed2a:	jl     0x41ecd7
  41ed2c:	mov    ah,0xe
  41ed2e:	lds    ebp,FWORD PTR [esi]
  41ed30:	ret    
  41ed31:	adc    DWORD PTR [edx+ebx*8],ecx
  41ed34:	repnz ss xchg ecx,eax
  41ed37:	iret   
  41ed38:	inc    ecx
  41ed39:	mov    eax,ds:0x3d70e2f6
  41ed3e:	pop    ecx
  41ed3f:	inc    ecx
  41ed40:	mov    eax,0x20a4c2d6
  41ed45:	cmc    
  41ed46:	into   
  41ed47:	mov    dh,BYTE PTR [ecx-0x2568d0be]
  41ed4d:	aad    0x6
  41ed4f:	mov    dh,0x58
  41ed51:	mov    eax,0xfe22f6d5
  41ed56:	in     eax,0x6c
  41ed58:	push   cs
  41ed59:	inc    edi
  41ed5a:	cld    
  41ed5b:	cmp    BYTE PTR [ebx],bh
  41ed5d:	das    
  41ed5e:	sar    DWORD PTR [edx],1
  41ed60:	(bad)  
  41ed62:	out    dx,eax
  41ed63:	rol    BYTE PTR [edi+0x303dec05],cl
  41ed69:	call   FWORD PTR [ebx]
  41ed6b:	sbb    al,0x5d
  41ed6d:	pop    edx
  41ed6e:	and    BYTE PTR [edi+0x24a5f528],0xfc
  41ed75:	inc    edx
  41ed76:	lock jo 0x41edc8
  41ed79:	xor    BYTE PTR [esi-0x6a],0xf4
  41ed7d:	and    ecx,DWORD PTR [esi]
  41ed7f:	push   ds
  41ed80:	mov    BYTE PTR [eax],dh
  41ed82:	ror    ch,1
  41ed84:	jo     0x41ed78
  41ed86:	dec    ebp
  41ed87:	push   es
  41ed88:	es jg  0x41edd3
  41ed8b:	ror    BYTE PTR [ebx],0x39
  41ed8e:	push   cs
  41ed8f:	push   ebx
  41ed90:	aaa    
  41ed91:	sub    al,0xbb
  41ed93:	sbb    eax,DWORD PTR [ebp+0x78]
  41ed96:	sbb    al,0x80
  41ed98:	hlt    
  41ed99:	cs mov edi,0x8bde2863
  41ed9f:	pop    ebp
  41eda0:	push   esi
  41eda1:	pop    edi
  41eda2:	jae    0x41edc9
  41eda4:	sbb    eax,0x5d188639
  41eda9:	(bad)  
  41edaa:	push   esi
  41edab:	stos   DWORD PTR es:[edi],eax
  41edac:	dec    edi
  41edad:	mul    edi
  41edaf:	outs   dx,DWORD PTR ds:[esi]
  41edb0:	push   edx
  41edb1:	in     eax,dx
  41edb2:	rcl    ch,cl
  41edb4:	cmp    BYTE PTR [ecx],al
  41edb6:	call   0x7eb8e254
  41edbb:	pop    eax
  41edbc:	aam    0xc3
  41edbe:	pop    es
  41edbf:	cmp    al,0x52
  41edc1:	and    esi,esp
  41edc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc4:	out    0xe6,eax
  41edc6:	mov    dh,al
  41edc8:	sub    DWORD PTR [edx-0x51],ebp
  41edcb:	mov    esp,0x7159a453
  41edd0:	jno    0x41ee09
  41edd2:	push   esp
  41edd3:	mov    esi,0xf9dd10c4
  41edd8:	inc    esi
  41edd9:	cmp    edx,DWORD PTR [esi+0x6a]
  41eddc:	(bad)  
  41eddd:	int3   
  41edde:	cli    
  41eddf:	call   0xb5f2:0xde5240b1
  41ede6:	stos   DWORD PTR es:[edi],eax
  41ede7:	inc    ebx
  41ede8:	add    eax,0xee94a99c
  41eded:	daa    
  41edee:	adc    BYTE PTR [esi-0x34cc37fa],0x47
  41edf5:	(bad)  
  41edf7:	test   al,0xea
  41edf9:	xchg   ecx,eax
  41edfa:	leave  
  41edfb:	lods   eax,DWORD PTR ds:[esi]
  41edfc:	addr16 pop ecx
  41edfe:	adc    al,0xba
  41ee00:	pop    edx
  41ee01:	stos   DWORD PTR es:[edi],eax
  41ee02:	fdiv   QWORD PTR [ecx]
  41ee04:	cdq    
  41ee05:	xlat   BYTE PTR ds:[ebx]
  41ee06:	mov    dh,0xac
  41ee08:	lahf   
  41ee09:	shl    ah,0x77
  41ee0c:	out    0x0,eax
  41ee0e:	mov    al,0x64
  41ee10:	das    
  41ee11:	fimul  DWORD PTR [edx]
  41ee13:	inc    ebx
  41ee14:	sub    DWORD PTR [esi-0x74],esi
  41ee17:	add    ch,BYTE PTR [ebp+0x3b431ab3]
  41ee1d:	mov    BYTE PTR [eax+edx*8-0x10787a5d],cl
  41ee24:	jle    0x41ee78
  41ee26:	add    DWORD PTR [edx],0x70
  41ee29:	or     DWORD PTR [ecx+ebp*8-0x322f82b0],esi
  41ee30:	jae    0x41eead
  41ee32:	scas   eax,DWORD PTR es:[edi]
  41ee33:	test   edi,0xb05e7b2e
  41ee39:	or     eax,0xbdc0c450
  41ee3e:	mov    eax,0xa2d6c492
  41ee43:	add    BYTE PTR [edx-0x2b8cadf8],al
  41ee49:	mov    edx,0x920e1ce8
  41ee4e:	xor    dh,ch
  41ee50:	mov    ch,0x54
  41ee52:	test   DWORD PTR [esi*8+0x7b6e9fbe],edi
  41ee59:	test   eax,0x795e9e3a
  41ee5e:	cmp    esp,DWORD PTR [esi]
  41ee60:	fist   DWORD PTR [ebx]
  41ee62:	fadd   DWORD PTR [edx+0x5]
  41ee65:	jbe    0x41ee4c
  41ee67:	adc    esi,esp
  41ee69:	jae    0x41ee33
  41ee6b:	clc    
  41ee6c:	out    0x91,al
  41ee6e:	sub    ebp,DWORD PTR [eax]
  41ee70:	mov    eax,ds:0x2d01965d
  41ee75:	inc    edi
  41ee76:	call   0x881afae7
  41ee7b:	aas    
  41ee7c:	adc    al,0xfa
  41ee7e:	sbb    DWORD PTR [edi+0x18],esp
  41ee81:	fist   DWORD PTR [ecx+ecx*8+0x15bc72f1]
  41ee88:	jo     0x41ee62
  41ee8a:	mov    dl,0x75
  41ee8c:	dec    ebp
  41ee8d:	stc    
  41ee8e:	ja     0x41eed0
  41ee90:	ret    
  41ee91:	xchg   esp,eax
  41ee92:	sbb    eax,0x5eb237cf
  41ee97:	fnstsw WORD PTR ds:0x642613d5
  41ee9d:	sbb    DWORD PTR [esp+eax*4],esp
  41eea0:	shr    DWORD PTR [edi-0x2c],cl
  41eea3:	jmp    0x41eec9
  41eea5:	adc    bl,BYTE PTR [esp+ecx*8]
  41eea8:	fwait
  41eea9:	adc    edi,DWORD PTR [ebp+0x54]
  41eeac:	xchg   esi,eax
  41eead:	repz mov WORD PTR [eax],fs
  41eeb0:	leave  
  41eeb1:	xor    al,0x80
  41eeb3:	mov    dl,0xb2
  41eeb5:	inc    esp
  41eeb6:	jle    0x41ee39
  41eeb8:	add    eax,0xcfa118dd
  41eebd:	pop    ss
  41eebe:	sub    eax,0xb0348901
  41eec3:	test   BYTE PTR [ebp+0x3e],bh
  41eec6:	mov    eax,ds:0x912c3c4a
  41eecb:	sub    eax,DWORD PTR [edi+0x3f4f422d]
  41eed1:	xor    eax,0xb5de336e
  41eed6:	fsubr  DWORD PTR [ebx-0x1]
  41eed9:	and    al,0xc
  41eedb:	sub    BYTE PTR [eax],cl
  41eedd:	lock and eax,0xb9382e24
  41eee3:	mov    ds:0x636a37,eax
  41eee8:	mov    eax,ds:0x8403f5cc
  41eeed:	test   eax,ecx
  41eeef:	pop    ss
  41eef0:	das    
  41eef1:	or     eax,DWORD PTR [edi+0x6f]
  41eef4:	inc    ecx
  41eef5:	jno    0x41ef4d
  41eef7:	rol    BYTE PTR [edi],cl
  41eef9:	cmp    ecx,DWORD PTR [esi-0x7f]
  41eefc:	xchg   bh,dl
  41eefe:	xchg   ebp,eax
  41eeff:	dec    eax
  41ef00:	dec    eax
  41ef01:	in     al,0x7a
  41ef03:	inc    eax
  41ef04:	mov    edx,0x19241365
  41ef09:	inc    ebp
  41ef0a:	sahf   
  41ef0b:	jmp    0x41eecd
  41ef0d:	outs   dx,DWORD PTR ds:[esi]
  41ef0e:	mov    bl,BYTE PTR [edx-0x62da0be9]
  41ef14:	outs   dx,BYTE PTR ds:[esi]
  41ef15:	rcl    DWORD PTR [edi],1
  41ef17:	outs   dx,DWORD PTR ds:[esi]
  41ef18:	push   edx
  41ef19:	xchg   edx,eax
  41ef1a:	cmp    BYTE PTR [eax],ch
  41ef1c:	push   ds
  41ef1d:	in     eax,0x30
  41ef1f:	inc    esp
  41ef20:	pop    ebx
  41ef21:	pusha  
  41ef22:	call   0x95659c7f
  41ef27:	ror    BYTE PTR [edi],cl
  41ef29:	adc    eax,0x74c1bda5
  41ef2e:	das    
  41ef2f:	xchg   edi,eax
  41ef30:	add    BYTE PTR [bx+0x5f06],dl
  41ef35:	push   0xffffffb0
  41ef37:	mov    dl,0xc6
  41ef39:	lea    edi,[ecx]
  41ef3b:	call   0xea35:0x4983e527
  41ef42:	call   0xd9e1:0x3c5b4d6c
  41ef49:	rcr    DWORD PTR [eax+0x2097b7a0],cl
  41ef4f:	sbb    al,BYTE PTR [ebp-0x4580f5ac]
  41ef55:	pop    edi
  41ef56:	xor    al,0x4d
  41ef58:	pop    esp
  41ef59:	cld    
  41ef5a:	repz ja 0x41eeed
  41ef5d:	pop    ebx
  41ef5e:	int    0xea
  41ef60:	lahf   
  41ef61:	fidiv  WORD PTR [ebp+0x67d8f16c]
  41ef67:	ficomp WORD PTR [esp+edx*8-0x42e9de8]
  41ef6e:	adc    bh,BYTE PTR [ecx+0x4e149f00]
  41ef74:	not    esi
  41ef76:	and    eax,0x55f4138a
  41ef7b:	jecxz  0x41ef73
  41ef7d:	and    DWORD PTR [ecx+0x30],edx
  41ef80:	mov    eax,0xdd5a4100
  41ef85:	pop    esi
  41ef86:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef88:	lock in eax,0x8e
  41ef8b:	push   0x5c
  41ef8d:	(bad)  
  41ef8f:	cmp    eax,0xc0821b33
  41ef94:	mov    gs:0x309bb363,al
  41ef9a:	lods   al,BYTE PTR ds:[esi]
  41ef9b:	xchg   esp,eax
  41ef9c:	xor    DWORD PTR [ebp+0xdb88d9a],ecx
  41efa2:	push   esi
  41efa3:	pop    edi
  41efa4:	(bad)  
  41efa5:	scas   al,BYTE PTR es:[edi]
  41efa6:	sub    eax,0x1b1eebc4
  41efab:	test   bl,0x7b
  41efae:	loope  0x41efe3
  41efb0:	push   ds
  41efb1:	js     0x41f02e
  41efb3:	and    al,0xef
  41efb5:	or     ah,BYTE PTR [edi+edx*1-0x36014d76]
  41efbc:	loopne 0x41eff6
  41efbe:	and    eax,0xe1918cdc
  41efc3:	pusha  
  41efc4:	and    al,0x27
  41efc6:	imul   ebp,ecx,0x7e23f213
  41efcc:	adc    eax,0x9d8a913d
  41efd1:	adc    BYTE PTR [ebx-0x20c372f7],0x7d
  41efd8:	cmp    ch,dl
  41efda:	bound  ebx,QWORD PTR [ecx+ebx*1]
  41efdd:	adc    BYTE PTR [edx],dh
  41efdf:	cmp    eax,0x25fba455
  41efe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efe5:	adc    BYTE PTR [ebp+0x5f],0xbd
  41efe9:	mov    bl,0xca
  41efeb:	ret    0xb863
  41efee:	dec    eax
  41efef:	pop    esp
  41eff0:	(bad)  
  41eff1:	jl     0x41ef87
  41eff3:	add    ecx,DWORD PTR [ecx-0x26]
  41eff6:	add    al,BYTE PTR [edi+0x48b8d58f]
  41effc:	mov    es,WORD PTR [eax+0x62e28ec8]
  41f002:	popa   
  41f003:	fs adc al,0x6b
  41f006:	adc    di,di
  41f009:	pop    edx
  41f00a:	push   0x8be87d80
  41f00f:	adc    BYTE PTR [edx],ch
  41f011:	sbb    dl,BYTE PTR [eax-0x4d]
  41f014:	std    
  41f015:	push   0xffffffe9
  41f017:	es xor eax,0x2145b34
  41f01d:	xor    al,bl
  41f01f:	mov    ch,0x4
  41f021:	lods   eax,DWORD PTR ds:[esi]
  41f022:	dec    esi
  41f023:	outs   dx,DWORD PTR ds:[esi]
  41f024:	adc    eax,0xd39ed30d
  41f029:	xchg   ecx,eax
  41f02a:	and    bh,BYTE PTR [esi+0x72175a0c]
  41f030:	lods   eax,DWORD PTR ds:[esi]
  41f031:	loop   0x41f00f
  41f033:	mov    BYTE PTR [ecx],dh
  41f035:	jmp    0x41f089
  41f037:	rcr    DWORD PTR [ecx+0x79],1
  41f03a:	aam    0x82
  41f03c:	add    BYTE PTR [ecx],0xea
  41f03f:	lock retf 
  41f041:	mov    ds:0xaf954218,al
  41f046:	sub    eax,0xb904ce1f
  41f04b:	mov    ah,0x91
  41f04d:	fwait
  41f04e:	cmp    DWORD PTR [ecx-0x4d9bd1d7],eax
  41f054:	and    ecx,eax
  41f056:	sahf   
  41f057:	adc    dh,BYTE PTR [eax]
  41f059:	adc    edi,DWORD PTR [ebp+ebx*4-0x287f296b]
  41f060:	neg    ebx
  41f062:	xchg   esi,eax
  41f063:	rol    BYTE PTR [ebx+0x57ae0d88],cl
  41f069:	sti    
  41f06a:	and    al,0x5c
  41f06c:	mov    eax,0x2daa6f20
  41f071:	ret    0x4ac6
  41f074:	mov    bl,0xbc
  41f076:	sub    ecx,esp
  41f078:	xchg   ebp,eax
  41f079:	loopne 0x41f004
  41f07b:	jmp    0x52fa0d5
  41f080:	repnz mov bl,0x4a
  41f083:	cmp    eax,0x2ae4e8fa
  41f088:	mov    al,0xb8
  41f08a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f08c:	jo     0x41f0bc
  41f08e:	pop    ds
  41f08f:	push   ebx
  41f090:	inc    edi
  41f091:	push   ebx
  41f092:	and    BYTE PTR [eax-0x17e92698],dh
  41f098:	les    ebx,FWORD PTR [esi-0x10a1d6e3]
  41f09e:	mov    esi,0x70eb661d
  41f0a3:	cmc    
  41f0a4:	mov    esi,0xd5d8d92c
  41f0a9:	cmc    
  41f0aa:	xchg   esp,eax
  41f0ab:	xor    al,0x71
  41f0ad:	cmp    BYTE PTR [esi-0x9a5ebc5],cl
  41f0b3:	mov    ah,BYTE PTR [esp+eax*2-0x7c]
  41f0b7:	pop    ecx
  41f0b8:	ret    0x592a
  41f0bb:	mov    edx,0x3b7dfade
  41f0c0:	cli    
  41f0c1:	bound  ebx,QWORD PTR cs:0x43720121
  41f0c8:	add    eax,DWORD PTR [ebx+0x61448859]
  41f0ce:	mov    bl,0xb2
  41f0d0:	jne    0x41f12f
  41f0d2:	jmp    0x6bfa:0xb4133f17
  41f0d9:	pop    esi
  41f0da:	inc    ecx
  41f0db:	mov    gs,WORD PTR [edi-0x4f]
  41f0de:	and    BYTE PTR [ebx],0x47
  41f0e1:	out    0x82,al
  41f0e3:	out    0x36,al
  41f0e5:	mov    al,0x4b
  41f0e7:	hlt    
  41f0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e9:	push   es
  41f0ea:	mov    ebx,0xc6bfb14d
  41f0ef:	or     al,0xc7
  41f0f1:	mov    al,BYTE PTR [ecx-0x36]
  41f0f4:	ret    
  41f0f5:	addr16 xchg edi,eax
  41f0f7:	xchg   ecx,eax
  41f0f8:	and    DWORD PTR [ecx-0x46],esi
  41f0fb:	sbb    BYTE PTR [edi-0x68c847cd],0x40
  41f102:	pavgb  mm7,QWORD PTR [ebp-0x1899af64]
  41f109:	out    0x18,al
  41f10b:	push   es
  41f10c:	lds    edx,FWORD PTR [eax]
  41f10e:	test   al,0x80
  41f110:	dec    ebp
  41f111:	ss scas eax,DWORD PTR es:[edi]
  41f113:	test   BYTE PTR [ecx],0x9d
  41f116:	addr16 dec ebx
  41f118:	nop
  41f119:	(bad)
  41f11c:	inc    edi
  41f11d:	inc    ecx
  41f11e:	pop    ss
  41f11f:	retf   0x73c6
  41f122:	fcom   QWORD PTR [eax+0x3f09ec48]
  41f128:	push   esi
  41f129:	add    edx,DWORD PTR [edi-0x25]
  41f12c:	out    dx,al
  41f12d:	enter  0x6bf3,0x8
  41f131:	std    
  41f132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f133:	das    
  41f134:	jmp    0x41f0da
  41f136:	sbb    bl,BYTE PTR [esi+0xae6ca37]
  41f13c:	cli    
  41f13d:	adc    eax,0x3d8cf9ca
  41f142:	jb     0x41f0d7
  41f144:	jbe    0x41f166
  41f146:	pop    ebx
  41f147:	fistp  QWORD PTR [esi]
  41f149:	cmp    DWORD PTR [esi],edx
  41f14b:	rcl    ecx,cl
  41f14d:	jns    0x41f0e4
  41f14f:	jmp    0x3599:0xebd2cc41
  41f156:	add    ah,BYTE PTR ds:0x7b464dab
  41f15c:	mov    cs,WORD PTR [edx+0x570da4fe]
  41f162:	out    0xbb,al
  41f164:	push   esp
  41f165:	or     BYTE PTR es:[eax],0xa4
  41f169:	sar    ebx,cl
  41f16b:	xchg   esp,eax
  41f16c:	jns    0x41f1c1
  41f16e:	into   
  41f16f:	jmp    0xda6b:0x8e196a97
  41f176:	imul   esp,DWORD PTR [ebp-0x34520946],0xffffffb4
  41f17d:	or     al,0xf1
  41f17f:	jp     0x41f1d6
  41f181:	and    ecx,DWORD PTR [ebx+0x7d]
  41f184:	inc    ebp
  41f185:	mov    cl,0x80
  41f187:	imul   esp,DWORD PTR [esi*1-0x624c2d4f],0x7fac812c
  41f192:	retf   0x4204
  41f195:	mov    cl,0x99
  41f197:	mov    bl,0xbc
  41f199:	add    DWORD PTR [ecx+ebp*4-0x16446ec2],esp
  41f1a0:	in     eax,dx
  41f1a1:	jno    0x41f1c5
  41f1a3:	cli    
  41f1a4:	add    dl,BYTE PTR [ecx]
  41f1a6:	sbb    DWORD PTR [esi],0x62
  41f1a9:	xchg   esi,eax
  41f1aa:	lea    edi,[edx]
  41f1ac:	in     al,dx
  41f1ad:	aam    0x81
  41f1af:	fldz   
  41f1b1:	call   0xfd8b88be
  41f1b6:	pop    ecx
  41f1b7:	xlat   BYTE PTR ds:[ebx]
  41f1b8:	mov    ah,0xa5
  41f1ba:	loopne 0x41f171
  41f1bc:	(bad)  
  41f1bd:	std    
  41f1be:	fs sti 
  41f1c0:	xor    DWORD PTR [ecx+0x7b],edi
  41f1c3:	repnz loope 0x41f190
  41f1c6:	inc    edi
  41f1c7:	xchg   esi,eax
  41f1c8:	dec    esp
  41f1c9:	enter  0x7642,0xa2
  41f1cd:	loop   0x41f160
  41f1cf:	inc    esi
  41f1d0:	gs add bh,cl
  41f1d3:	dec    esp
  41f1d4:	sbb    al,0x94
  41f1d6:	jbe    0x41f1bb
  41f1d8:	xchg   ebx,eax
  41f1d9:	xchg   edi,eax
  41f1da:	mov    bh,dl
  41f1dc:	sub    DWORD PTR [esi],ebp
  41f1de:	jnp    0x41f1db
  41f1e0:	dec    esp
  41f1e1:	xchg   edx,eax
  41f1e2:	pop    ebx
  41f1e3:	xor    edx,DWORD PTR [ecx+0x2a71f355]
  41f1e9:	sub    DWORD PTR [edi-0x60],eax
  41f1ec:	repz mov ah,0x0
  41f1ef:	pop    ss
  41f1f0:	adc    DWORD PTR [ebp-0x16],edi
  41f1f3:	(bad)  
  41f1f4:	(bad)  
  41f1f6:	(bad)  
  41f1f7:	xor    al,bh
  41f1f9:	sub    ch,BYTE PTR [edx+0x1c]
  41f1fc:	into   
  41f1fd:	mul    BYTE PTR [esi+ecx*8+0x3]
  41f201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f202:	lock lods al,BYTE PTR ds:[esi]
  41f204:	(bad)  
  41f205:	xor    edx,DWORD PTR [edi-0x2e]
  41f208:	ins    DWORD PTR es:[edi],dx
  41f209:	jnp    0x41f1e7
  41f20b:	es jno 0x41f1dd
  41f20e:	pop    edi
  41f20f:	xlat   BYTE PTR ds:[ebx]
  41f210:	cli    
  41f211:	lods   al,BYTE PTR ds:[esi]
  41f212:	mov    bh,0x38
  41f214:	mov    dl,0xf3
  41f216:	pop    ecx
  41f217:	push   esi
  41f218:	xor    eax,0x5368552f
  41f21d:	or     al,0xb7
  41f21f:	stos   DWORD PTR es:[edi],eax
  41f220:	pop    eax
  41f221:	int3   
  41f222:	retf   0x9939
  41f225:	xlat   BYTE PTR ds:[ebx]
  41f226:	inc    ebx
  41f227:	out    dx,eax
  41f228:	sub    edi,edx
  41f22a:	mov    edx,0x1912e0f7
  41f22f:	ror    DWORD PTR [ebx+0x2a],1
  41f232:	loop   0x41f239
  41f234:	shr    BYTE PTR es:[esi+ebx*1-0x2f],0xb1
  41f23a:	mov    eax,ss:0xd443676c
  41f240:	dec    eax
  41f241:	enter  0x6a50,0x8a
  41f245:	cs dec edx
  41f247:	sub    BYTE PTR [edx-0x36],dh
  41f24a:	jae    0x41f25c
  41f24c:	lods   eax,DWORD PTR ds:[esi]
  41f24d:	cmp    edx,DWORD PTR [edi-0x3450539f]
  41f253:	add    bl,0xdf
  41f256:	jmp    0x4c68:0xdfe1df4d
  41f25d:	fadd   DWORD PTR [ebx*8-0x53eb370d]
  41f264:	jmp    0x3a3e:0x52cf16e2
  41f26b:	or     bh,BYTE PTR [ebx+0x11228df8]
  41f271:	dec    ebp
  41f272:	and    BYTE PTR [edi+0x5d48dbab],al
  41f278:	and    eax,0xbeb64823
  41f27d:	add    al,0xf1
  41f27f:	lds    edx,FWORD PTR [esi-0x1a]
  41f282:	pop    ebp
  41f283:	cmp    eax,0xa93ec8f
  41f288:	and    al,0xe3
  41f28a:	or     al,0xad
  41f28c:	inc    ebp
  41f28d:	sbb    dh,dl
  41f28f:	int    0x3d
  41f291:	xchg   edi,eax
  41f292:	mov    eax,DWORD PTR [ecx]
  41f294:	adc    edx,DWORD PTR [esi]
  41f296:	ret    
  41f297:	fnstsw WORD PTR [ebx]
  41f299:	xchg   esp,edx
  41f29b:	and    ebx,DWORD PTR [ecx+0x821c2f]
  41f2a1:	dec    eax
  41f2a2:	dec    edx
  41f2a3:	ret    0x359f
  41f2a6:	mov    esi,ecx
  41f2a8:	xlat   BYTE PTR ds:[ebx]
  41f2a9:	or     cl,BYTE PTR [edx-0x56]
  41f2ac:	or     DWORD PTR [ebx],edi
  41f2ae:	and    eax,DWORD PTR [edx+0x5bfa7bfd]
  41f2b4:	push   edx
  41f2b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b6:	xchg   ebp,eax
  41f2b7:	pusha  
  41f2b8:	repnz sbb DWORD PTR fs:[ecx-0x4276c37f],ebx
  41f2c0:	jmp    0xa05b:0x71d34ce0
  41f2c7:	sbb    eax,0x624e28ea
  41f2cc:	sbb    BYTE PTR [edi+0x16],dl
  41f2cf:	jne    0x41f261
  41f2d1:	cwde   
  41f2d2:	pusha  
  41f2d3:	mov    ch,0x98
  41f2d5:	jne    0x41f2ad
  41f2d7:	inc    edi
  41f2d8:	fwait
  41f2d9:	iret   
  41f2da:	mov    al,BYTE PTR [ecx]
  41f2dc:	xlat   BYTE PTR ds:[ebx]
  41f2dd:	adc    esp,eax
  41f2df:	mov    ds:0x536057cd,al
  41f2e4:	es pop eax
  41f2e6:	push   edi
  41f2e7:	mov    ah,0x1
  41f2e9:	in     al,0x9d
  41f2eb:	jge    0x41f355
  41f2ed:	in     al,0xff
  41f2ef:	pop    ecx
  41f2f0:	cmp    ebp,DWORD PTR [esp+esi*1]
  41f2f3:	pop    edi
  41f2f4:	or     DWORD PTR [edi-0x7c],edi
  41f2f7:	idiv   DWORD PTR [ebx+eiz*2-0x80]
  41f2fb:	inc    ebx
  41f2fc:	test   BYTE PTR [ebx+0x7e],cl
  41f2ff:	jmp    FWORD PTR [esi]
  41f301:	inc    eax
  41f302:	push   ds
  41f303:	pop    esp
  41f304:	sahf   
  41f305:	out    0x2b,eax
  41f307:	or     ecx,ebp
  41f309:	ret    
  41f30a:	mov    BYTE PTR [edx],al
  41f30c:	cmp    BYTE PTR [esi-0x357f4ac1],bl
  41f312:	inc    ebx
  41f313:	aaa    
  41f314:	loop   0x41f38b
  41f316:	lahf   
  41f317:	sub    ch,0xc8
  41f31a:	pop    edi
  41f31b:	inc    ebp
  41f31c:	leave  
  41f31d:	ins    DWORD PTR es:[edi],dx
  41f31e:	mov    ebp,0x79737d46
  41f323:	mov    bh,0x47
  41f325:	push   edx
  41f326:	or     BYTE PTR [eax+0x35],bl
  41f329:	ss aad 0x25
  41f32c:	mov    edx,0x8fe8a6d1
  41f331:	inc    eax
  41f332:	xor    ah,BYTE PTR [esi+0x6]
  41f335:	jl     0x41f34f
  41f337:	mov    bl,0x65
  41f339:	dec    ebx
  41f33a:	and    eax,0x41a5be1b
  41f33f:	inc    esp
  41f340:	mov    edi,DWORD PTR [edx]
  41f342:	sbb    dh,BYTE PTR [eax]
  41f344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f345:	mov    al,ds:0xf9eea8c6
  41f34a:	fs ret 0xcbb2
  41f34e:	imul   sp,WORD PTR [esi],0xff99
  41f352:	jb     0x41f32e
  41f354:	jmp    0x1d1a5bdc
  41f359:	add    DWORD PTR [eax-0x7070bab1],edx
  41f35f:	sbb    ah,BYTE PTR [eax+0x286cf296]
  41f365:	mov    edi,0xdcf547ff
  41f36a:	lea    edi,[edi-0xba44e1d]
  41f370:	jb     0x41f3aa
  41f372:	mov    dh,0x77
  41f374:	xchg   edi,eax
  41f375:	jnp    0x41f2f9
  41f377:	xchg   esi,eax
  41f378:	inc    esi
  41f379:	add    eax,0x9dcf4462
  41f37e:	mov    dl,0xcd
  41f380:	jge    0x41f308
  41f382:	sti    
  41f383:	cs pop eax
  41f385:	jl     0x41f404
  41f387:	jg     0x41f34a
  41f389:	adc    eax,0x6a32e667
  41f38e:	mov    ?,WORD PTR [eax+0x19]
  41f391:	ja     0x41f3b2
  41f393:	or     bl,ah
  41f395:	add    WORD PTR [esi],0x6f
  41f399:	lods   al,BYTE PTR ds:[esi]
  41f39a:	cld    
  41f39b:	sbb    DWORD PTR [eax+0x61ee9a1a],esi
  41f3a1:	std    
  41f3a2:	lock scas eax,DWORD PTR es:[edi]
  41f3a4:	out    dx,eax
  41f3a5:	leave  
  41f3a6:	repz push 0xffffffd4
  41f3a9:	(bad)  
  41f3aa:	out    0x53,eax
  41f3ac:	mov    ecx,DWORD PTR [ecx-0x79ac3c3f]
  41f3b2:	in     eax,0x28
  41f3b4:	jno    0x41f413
  41f3b6:	mov    al,ds:0x27eb8e4a
  41f3bb:	aad    0xf5
  41f3bd:	mul    DWORD PTR [edx+0x21]
  41f3c0:	and    al,0x4a
  41f3c2:	jo     0x41f34d
  41f3c4:	sbb    ah,BYTE PTR [ecx]
  41f3c6:	test   BYTE PTR [edx],bl
  41f3c8:	xchg   esp,eax
  41f3c9:	mov    bh,0xe6
  41f3cb:	out    0xf3,al
  41f3cd:	dec    edx
  41f3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3cf:	mov    ecx,0xb04ab401
  41f3d4:	lock xor DWORD PTR [edi+0x8ccb1a],esi
  41f3db:	pop    esi
  41f3dc:	ret    0x98cd
  41f3df:	push   edx
  41f3e0:	inc    ebx
  41f3e1:	fistp  WORD PTR [ebx-0x11a3e9e5]
  41f3e7:	pop    eax
  41f3e8:	addr16 gs retf 
  41f3eb:	sbb    ch,bl
  41f3ed:	mov    dh,cl
  41f3ef:	(bad)  
  41f3f0:	fmul   QWORD PTR [ecx+0x13]
  41f3f3:	or     ebp,DWORD PTR [eax+0x484862a8]
  41f3f9:	inc    ebx
  41f3fa:	push   esp
  41f3fb:	inc    ebx
  41f3fc:	ret    
  41f3fd:	cli    
  41f3fe:	fs gs push esp
  41f401:	mov    esp,0x78a62d87
  41f406:	pop    es
  41f407:	xchg   edi,eax
  41f408:	mov    ah,0x9e
  41f40a:	jne    0x41f3d1
  41f40c:	mov    dh,0xca
  41f40e:	int3   
  41f40f:	push   0x62
  41f411:	jecxz  0x41f405
  41f413:	ins    DWORD PTR es:[edi],dx
  41f414:	sahf   
  41f415:	mov    cl,0x49
  41f417:	xor    bl,BYTE PTR [esi+0x37c68eb4]
  41f41d:	(bad)  
  41f41e:	and    al,dl
  41f420:	jle    0x41f3dc
  41f422:	push   edx
  41f423:	mov    dl,0x24
  41f425:	stc    
  41f426:	je     0x41f3e8
  41f428:	jne    0x41f3f0
  41f42a:	adc    eax,0x33587c46
  41f42f:	or     al,0xba
  41f431:	add    esp,0x53151092
  41f437:	xor    al,0xcf
  41f439:	(bad)  
  41f43a:	fcomi  st,st(5)
  41f43c:	xor    al,0xa4
  41f43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f43f:	dec    edx
  41f440:	mov    ah,0xfb
  41f442:	fdiv   QWORD PTR [edi]
  41f444:	xor    dl,BYTE PTR [ebp+0x43]
  41f447:	out    0x17,eax
  41f449:	push   0xffffffb8
  41f44b:	add    al,0x12
  41f44d:	xor    ah,ch
  41f44f:	xchg   ebp,eax
  41f450:	xchg   ebx,eax
  41f451:	jmp    0x41f452
  41f453:	daa    
  41f454:	mov    ds:0xe9ccfa1c,al
  41f459:	dec    esi
  41f45a:	das    
  41f45b:	(bad)  
  41f45c:	in     eax,dx
  41f45d:	faddp  st(3),st
  41f45f:	cmp    DWORD PTR [ebp+edi*8-0x68],edi
  41f463:	fimul  WORD PTR [ecx+0x7c480852]
  41f469:	xchg   ebx,eax
  41f46a:	sub    DWORD PTR [edx-0x80],eax
  41f46d:	call   0x5b153504
  41f472:	fs jne 0x41f4ac
  41f475:	jae    0x41f42a
  41f477:	or     eax,0x38cc2ad3
  41f47c:	lea    edx,[ebx]
  41f47e:	or     al,0x2
  41f480:	test   eax,0xedc1413f
  41f485:	pop    ebx
  41f486:	inc    edx
  41f487:	push   edi
  41f488:	dec    ebp
  41f489:	pop    ecx
  41f48a:	mov    al,ds:0xb0f51038
  41f48f:	dec    edx
  41f490:	xchg   ecx,eax
  41f491:	sbb    ebx,DWORD PTR ds:0x8acbe81
  41f497:	iret   
  41f498:	(bad)  
  41f499:	pop    edi
  41f49a:	push   esp
  41f49b:	pop    sp
  41f49d:	mov    cl,0x69
  41f49f:	jle    0x41f442
  41f4a1:	inc    esi
  41f4a2:	add    edi,DWORD PTR [ecx]
  41f4a4:	adc    eax,0xbc728f3b
  41f4a9:	mov    esp,0xd658647b
  41f4ae:	or     BYTE PTR [esi+0x0],dh
  41f4b1:	dec    esp
  41f4b2:	mov    DWORD PTR [ecx-0x28],edx
  41f4b5:	out    dx,eax
  41f4b6:	(bad)  
  41f4b7:	mov    edx,0x69b470df
  41f4bc:	mov    dl,0x93
  41f4be:	ins    DWORD PTR es:[edi],dx
  41f4bf:	(bad)  
  41f4c0:	fsubrp st(7),st
  41f4c2:	sbb    al,0x98
  41f4c4:	popa   
  41f4c5:	mov    cs,WORD PTR [ebx-0x38]
  41f4c8:	inc    ecx
  41f4c9:	fisttp QWORD PTR [esi+0x16]
  41f4cc:	enter  0xfc8d,0x2
  41f4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4d1:	fisttp DWORD PTR [esp+edx*8-0x6f9c7e00]
  41f4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4d9:	push   edx
  41f4da:	(bad)  
  41f4db:	mov    ds:0x62d88a9,eax
  41f4e0:	adc    ah,bl
  41f4e2:	adc    bl,BYTE PTR [ebx]
  41f4e4:	sahf   
  41f4e5:	aaa    
  41f4e6:	or     eax,0x69a9c3d1
  41f4eb:	sbb    al,0x1b
  41f4ed:	cmp    DWORD PTR [ebx+ebx*8+0x1a],edi
  41f4f1:	dec    ebx
  41f4f2:	test   BYTE PTR [eax],0x8d
  41f4f5:	sbb    eax,0x9a226c4e
  41f4fa:	pop    ebp
  41f4fb:	hlt    
  41f4fc:	jle    0x41f4af
  41f4fe:	(bad)  
  41f4ff:	pop    esp
  41f500:	xchg   esp,eax
  41f501:	mov    ecx,0xe730efb9
  41f506:	addr16 repnz push esi
  41f509:	cmc    
  41f50a:	clc    
  41f50b:	sar    BYTE PTR [eax],cl
  41f50d:	inc    edi
  41f50e:	pop    edx
  41f50f:	fisub  DWORD PTR [ebx+0x7268ddbb]
  41f515:	enter  0xc1cf,0x42
  41f519:	sub    DWORD PTR [eax-0x75bef7e4],ebx
  41f51f:	sbb    dh,ah
  41f521:	sbb    dl,0xc6
  41f524:	sub    eax,0xa0a75194
  41f529:	mov    ds:0xb069e2b5,al
  41f52e:	cld    
  41f52f:	mov    ds:0xb6737f01,al
  41f534:	dec    eax
  41f535:	aam    0x52
  41f537:	mov    ch,BYTE PTR [esp+ebp*1]
  41f53a:	loop   0x41f51a
  41f53c:	xchg   ecx,eax
  41f53d:	gs stc 
  41f53f:	push   ds
  41f540:	fwait
  41f541:	add    BYTE PTR [ecx-0x32c5abbf],ch
  41f547:	mov    eax,ds:0x3a28292a
  41f54c:	sbb    DWORD PTR [esi+0x3f],edi
  41f54f:	stos   DWORD PTR es:[edi],eax
  41f550:	popf   
  41f551:	rsqrtps xmm1,xmm3
  41f554:	into   
  41f555:	imul   edi,ecx,0x10
  41f558:	aam    0xba
  41f55a:	add    BYTE PTR [ecx],bl
  41f55c:	js     0x41f55d
  41f55e:	sub    DWORD PTR [ebx],eax
  41f560:	pop    es
  41f561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f562:	ret    0xd53a
  41f565:	adc    al,0x25
  41f567:	mov    WORD PTR [ebx+0x54],ss
  41f56a:	mov    edi,0xfac97cf5
  41f56f:	rcr    BYTE PTR [edx],0xa5
  41f572:	jno    0x41f54e
  41f574:	pop    ds
  41f575:	daa    
  41f576:	lock mov bl,0x43
  41f579:	shl    ecx,cl
  41f57b:	xor    BYTE PTR [ecx-0xb],0xdf
  41f57f:	hlt    
  41f580:	fcom   DWORD PTR [eax-0x3f10b833]
  41f586:	add    al,0xa0
  41f588:	mov    al,ds:0xa36f299b
  41f58d:	and    bh,BYTE PTR [ecx+0x19f3a3c6]
  41f593:	adc    BYTE PTR [esi+0x1191ae26],ch
  41f599:	jmp    0x4376:0xdf957c66
  41f5a0:	repz out 0xf0,eax
  41f5a3:	mov    esi,0x900e6ad8
  41f5a8:	mov    BYTE PTR [esi-0x643efcdc],bh
  41f5ae:	mov    bl,0x3c
  41f5b0:	xor    al,0xca
  41f5b2:	push   edi
  41f5b3:	scas   eax,DWORD PTR es:[edi]
  41f5b4:	std    
  41f5b5:	jle    0x41f5e9
  41f5b7:	xor    DWORD PTR [ebx+0x0],edx
  41f5ba:	pop    ecx
  41f5bb:	cdq    
  41f5bc:	dec    ebx
  41f5bd:	push   ecx
  41f5be:	xor    eax,DWORD PTR [edi+0x4a]
  41f5c1:	fmul   QWORD PTR [edx-0x29095a75]
  41f5c7:	xlat   BYTE PTR ds:[ebx]
  41f5c8:	push   cs
  41f5c9:	add    eax,0x46e01301
  41f5ce:	mov    eax,ds:0x88ed971f
  41f5d3:	out    dx,eax
  41f5d4:	pop    esp
  41f5d5:	icebp  
  41f5d6:	icebp  
  41f5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5d8:	jbe    0x41f60d
  41f5da:	lods   al,BYTE PTR ds:[esi]
  41f5db:	mov    edx,0xad94c127
  41f5e0:	add    eax,0x90444028
  41f5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e6:	ss mov edi,0xfaa14bb9
  41f5ec:	lods   al,BYTE PTR ds:[esi]
  41f5ed:	jmp    0x6c25f5cb
  41f5f2:	dec    eax
  41f5f3:	daa    
  41f5f4:	lods   al,BYTE PTR ds:[esi]
  41f5f5:	jecxz  0x41f5ac
  41f5f7:	add    eax,0xa506afcb
  41f5fc:	sbb    ch,BYTE PTR [edi+0x7f]
  41f5ff:	lods   eax,DWORD PTR ds:[esi]
  41f600:	outs   dx,DWORD PTR ds:[esi]
  41f601:	repz xchg si,ax
  41f604:	or     edx,DWORD PTR [esi]
  41f606:	sbb    DWORD PTR gs:[eax-0x5b],edx
  41f60a:	iret   
  41f60b:	shl    BYTE PTR [ecx-0x428f3b50],cl
  41f611:	mov    bl,0x31
  41f613:	es pop edx
  41f615:	aam    0xe
  41f617:	xor    edx,DWORD PTR [ecx+0x3]
  41f61a:	jbe    0x41f5b4
  41f61c:	or     eax,0x7a8d2549
  41f621:	add    BYTE PTR [edx],ch
  41f623:	jecxz  0x41f61f
  41f625:	mov    dl,0xad
  41f627:	or     al,BYTE PTR [edi-0x78]
  41f62a:	popf   
  41f62b:	mov    bl,0xf5
  41f62d:	je     0x41f656
  41f62f:	mov    cl,0x4b
  41f631:	and    DWORD PTR [ebp+0x1b],esi
  41f634:	sti    
  41f635:	and    DWORD PTR [edi],0x2f
  41f638:	sbb    ah,BYTE PTR [ecx+0x3]
  41f63b:	pop    ebx
  41f63c:	xor    eax,0x9622666e
  41f641:	nop
  41f642:	fst    QWORD PTR [edx+0x75]
  41f645:	sub    al,0x36
  41f647:	mov    ds:0xca470dc6,eax
  41f64c:	in     al,0xbd
  41f64e:	pop    ebp
  41f64f:	adc    al,0x52
  41f651:	mov    dl,0xf8
  41f653:	xchg   esi,eax
  41f654:	shr    BYTE PTR [esi],1
  41f656:	or     eax,ecx
  41f658:	lds    edi,FWORD PTR [ebx-0x1dc3d1d]
  41f65e:	sbb    al,BYTE PTR [esi+0x5d]
  41f661:	pop    ds
  41f662:	pop    ss
  41f663:	fldcw  WORD PTR [ebp-0x80]
  41f666:	add    edi,DWORD PTR [edx+edx*4]
  41f669:	jbe    0x41f61f
  41f66b:	mov    edx,DWORD PTR [esi+0x494c2327]
  41f671:	je     0x41f6b4
  41f673:	xchg   ebx,eax
  41f674:	push   ecx
  41f675:	lea    esi,[edx-0xe]
  41f678:	push   ebp
  41f679:	cmp    al,0xbe
  41f67b:	inc    ebp
  41f67c:	cli    
  41f67d:	fs and al,0xb9
  41f680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f681:	sbb    al,0x99
  41f683:	pop    ebp
  41f684:	add    BYTE PTR [ebx-0x3d],dh
  41f687:	ficomp WORD PTR [bp+si-0x78b3]
  41f68c:	mov    ds:0x32239d72,eax
  41f691:	xchg   ecx,eax
  41f692:	bnd jp 0x41f61d
  41f695:	(bad)  
  41f696:	aaa    
  41f697:	cmp    al,0x9f
  41f699:	hlt    
  41f69a:	retf   0xc99f
  41f69d:	js     0x41f668
  41f69f:	mov    WORD PTR [eax-0x46],ds
  41f6a2:	aad    0x15
  41f6a4:	mov    BYTE PTR [ebp+0x7025a58f],bh
  41f6aa:	loope  0x41f706
  41f6ac:	xor    al,0x30
  41f6ae:	aaa    
  41f6af:	fild   DWORD PTR [ebx+eiz*2-0x47]
  41f6b3:	jle    0x41f6a6
  41f6b5:	ja     0x41f6f7
  41f6b7:	loope  0x41f6b6
  41f6b9:	add    BYTE PTR [eax+ebx*4-0x69],0xf7
  41f6be:	push   ds
  41f6bf:	ror    DWORD PTR [edi+0x589c1fde],0xa1
  41f6c6:	cdq    
  41f6c7:	repz add eax,0xd9a55c78
  41f6cd:	lahf   
  41f6ce:	or     ecx,DWORD PTR [ebx-0x10573697]
  41f6d4:	out    dx,al
  41f6d5:	jmp    0x88f7e587
  41f6da:	gs inc ebp
  41f6dc:	ror    BYTE PTR [ecx+0x6d5cd2cd],cl
  41f6e2:	pushf  
  41f6e3:	push   ds
  41f6e4:	mov    eax,ds:0xf6fe1368
  41f6e9:	arpl   WORD PTR [edx+0x51e7f67d],dx
  41f6ef:	dec    edx
  41f6f0:	out    0x10,al
  41f6f2:	(bad)  
  41f6f3:	xchg   ebp,eax
  41f6f4:	pop    esp
  41f6f5:	scas   al,BYTE PTR es:[edi]
  41f6f6:	gs jb  0x41f735
  41f6f9:	mov    esp,0x72d9b993
  41f6fe:	ret    0xe960
  41f701:	pop    edx
  41f702:	push   0xffffffac
  41f704:	loope  0x41f6e0
  41f706:	bound  ebx,QWORD PTR [ecx+ebx*1+0x71]
  41f70a:	jne    0x41f780
  41f70c:	sbb    DWORD PTR [ebx],esi
  41f70e:	jo     0x41f76b
  41f710:	sbb    DWORD PTR [esi+0x41],0xc204f48c
  41f717:	sub    eax,0xcdbfa223
  41f71c:	sti    
  41f71d:	add    edi,esp
  41f71f:	nop
  41f720:	xchg   edx,eax
  41f721:	lods   al,BYTE PTR ds:[esi]
  41f722:	stos   DWORD PTR es:[edi],eax
  41f723:	xor    esp,DWORD PTR [edx+eax*4-0x44]
  41f727:	jge    0x41f75f
  41f729:	hlt    
  41f72a:	cld    
  41f72b:	int    0x21
  41f72d:	std    
  41f72e:	push   ebx
  41f72f:	add    eax,DWORD PTR [eax+esi*8]
  41f732:	xor    ecx,0x99524913
  41f738:	inc    ecx
  41f739:	aam    0x4d
  41f73b:	mov    BYTE PTR [eax+0x65],ch
  41f73e:	enter  0xc6d3,0x48
  41f742:	inc    ecx
  41f743:	xchg   ebp,eax
  41f744:	mov    edi,DWORD PTR [ecx-0x17]
  41f747:	mov    bl,0xa4
  41f749:	inc    ecx
  41f74a:	in     al,0x9b
  41f74c:	or     BYTE PTR [esi],bl
  41f74e:	daa    
  41f74f:	retf   0xdc8
  41f752:	rcr    DWORD PTR [ebp+0x3c5d21fd],1
  41f758:	aad    0xa5
  41f75a:	(bad)  
  41f75b:	mov    ds:0x2e448b45,al
  41f760:	aas    
  41f761:	jmp    0x41f749
  41f763:	and    BYTE PTR [eax+0x55],cl
  41f766:	add    BYTE PTR [ebx],bh
  41f768:	push   eax
  41f769:	adc    DWORD PTR [esp+ecx*1-0x65c438e0],esp
  41f770:	aam    0xd2
  41f772:	dec    edx
  41f773:	add    al,0xef
  41f775:	push   0xfe7ebbd3
  41f77a:	arpl   WORD PTR [esi-0x55],sp
  41f77d:	push   edx
  41f77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f77f:	add    eax,0x3164ebf0
  41f784:	pop    ebx
  41f785:	popa   
  41f786:	xchg   edx,eax
  41f787:	cld    
  41f788:	mov    ds:0xcf610616,al
  41f78d:	out    dx,al
  41f78e:	ins    BYTE PTR es:[edi],dx
  41f78f:	push   esi
  41f790:	into   
  41f791:	lock fnstcw WORD PTR [edi-0x1f]
  41f795:	out    dx,eax
  41f796:	sub    ebp,DWORD PTR [esi-0x28b1cf12]
  41f79c:	repnz xchg esp,eax
  41f79e:	dec    ebx
  41f79f:	addr16 (bad) 
  41f7a2:	sar    al,1
  41f7a4:	jno    0x41f740
  41f7a6:	shl    DWORD PTR [ebp+0x56],0xef
  41f7aa:	sub    al,0x4d
  41f7ac:	push   esi
  41f7ad:	test   al,0x8b
  41f7af:	mov    eax,ds:0xa25b8ed0
  41f7b4:	shl    DWORD PTR [eax+ebx*2],cl
  41f7b7:	les    edi,FWORD PTR [esi-0x25]
  41f7ba:	in     eax,dx
  41f7bb:	push   esp
  41f7bc:	enter  0x88dc,0xb0
  41f7c0:	mov    ebp,0x4be16da0
  41f7c5:	xchg   ebp,eax
  41f7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c7:	maskmovq mm5,(bad)
  41f7c8:	imul   DWORD PTR [ecx]
  41f7ca:	cs inc ecx
  41f7cc:	iret   
  41f7cd:	inc    ebx
  41f7ce:	mov    dl,BYTE PTR [ecx]
  41f7d0:	mov    esi,0x66c87cac
  41f7d5:	add    al,0x66
  41f7d7:	cmp    BYTE PTR [ecx+ebp*2-0x3679f140],al
  41f7de:	(bad)  
  41f7df:	shl    edi,1
  41f7e1:	lahf   
  41f7e2:	pusha  
  41f7e3:	push   cs
  41f7e4:	cmp    BYTE PTR [esi],dh
  41f7e6:	dec    ebp
  41f7e7:	ins    DWORD PTR es:[edi],dx
  41f7e8:	daa    
  41f7e9:	inc    ecx
  41f7ea:	and    ah,BYTE PTR [esi+0x42ac57aa]
  41f7f0:	cmp    dl,BYTE PTR [esi-0x6e39fe54]
  41f7f6:	push   edi
  41f7f7:	push   0xf78f98fe
  41f7fc:	ror    edx,cl
  41f7fe:	cmp    bh,BYTE PTR [ecx-0x7f]
  41f801:	jecxz  0x41f7de
  41f803:	xchg   DWORD PTR [esi+0x6af583ce],esi
  41f809:	and    DWORD PTR [edi],esi
  41f80b:	int3   
  41f80c:	push   cs
  41f80d:	jno    0x41f79f
  41f80f:	sub    ecx,DWORD PTR [esi-0x7f061f89]
  41f815:	xchg   esi,eax
  41f816:	inc    eax
  41f817:	lea    ebx,[eax-0x3a19c575]
  41f81d:	fbstp  TBYTE PTR [edi-0xf]
  41f820:	pop    esi
  41f821:	pop    edx
  41f822:	call   0x9a46:0x1f4a8958
  41f829:	int    0x6f
  41f82b:	cmp    ah,dh
  41f82d:	iret   
  41f82e:	out    0x1a,al
  41f830:	jmp    0x92fee214
  41f835:	mov    ch,0xcc
  41f837:	add    esp,eax
  41f839:	or     dl,BYTE PTR [eax-0x7b9e3018]
  41f83f:	sub    al,0xfd
  41f841:	pusha  
  41f842:	and    eax,0xb0cc6664
  41f847:	mov    bl,0xcd
  41f849:	ins    DWORD PTR es:[edi],dx
  41f84a:	push   ebp
  41f84b:	pop    edx
  41f84c:	loope  0x41f898
  41f84e:	adc    al,0xc
  41f850:	lahf   
  41f851:	fwait
  41f852:	cs jge 0x41f889
  41f855:	in     al,dx
  41f856:	or     BYTE PTR [esi],dh
  41f858:	dec    ebx
  41f859:	sbb    al,0xa
  41f85b:	push   ebp
  41f85c:	jl     0x41f8ba
  41f85e:	sbb    bl,BYTE PTR [ebp+0x1ebe365a]
  41f864:	call   0x279814db
  41f869:	outs   dx,DWORD PTR ds:[esi]
  41f86a:	ret    0x56c4
  41f86d:	fwait
  41f86e:	shr    bh,1
  41f870:	(bad)  
  41f871:	mov    al,ds:0x8d5aa12d
  41f876:	test   eax,0x3c47aed4
  41f87b:	pop    ebx
  41f87c:	call   0x2f26819e
  41f881:	mov    ss,WORD PTR [ecx-0x3bc4f508]
  41f887:	mov    al,ds:0xce5343ba
  41f88c:	jp     0x41f8fa
  41f88e:	add    BYTE PTR [edx+0x4973607b],ch
  41f894:	lock adc ebp,DWORD PTR [ecx]
  41f897:	loopne 0x41f8d3
  41f899:	inc    ebx
  41f89a:	mov    ds:0x41697e05,eax
  41f89f:	cmp    ebx,DWORD PTR [edx+0x53110fe9]
  41f8a5:	retf   0x2af3
  41f8a8:	rcl    ebx,1
  41f8aa:	add    bh,BYTE PTR [esi-0x32df6439]
  41f8b0:	test   BYTE PTR [esi+0x1a],bh
  41f8b3:	iret   
  41f8b4:	rcl    BYTE PTR [edi],cl
  41f8b6:	pop    ebx
  41f8b7:	fldenv [edx+0x4bdcb9d6]
  41f8bd:	sub    dl,BYTE PTR ds:0xbee23271
  41f8c3:	retf   
  41f8c4:	sub    eax,0x320e9daf
  41f8c9:	mov    ds:0x37009515,al
  41f8ce:	into   
  41f8cf:	imul   esp,DWORD PTR [ebp*1+0x3d118ec1],0x19
  41f8d7:	or     al,0x4e
  41f8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8da:	mov    ecx,0xea960026
  41f8df:	fwait
  41f8e0:	sbb    al,0xa2
  41f8e2:	push   esi
  41f8e3:	mov    ebx,DWORD PTR [esi]
  41f8e5:	pop    eax
  41f8e6:	cmc    
  41f8e7:	fcom   QWORD PTR [ebx-0x4c286454]
  41f8ed:	sbb    al,0x5a
  41f8ef:	sub    BYTE PTR [edx-0x6531701],bl
  41f8f5:	(bad)  
  41f8f7:	jg     0x41f893
  41f8f9:	mov    ch,0xa0
  41f8fb:	pop    edi
  41f8fc:	pop    edi
  41f8fd:	neg    BYTE PTR [eax+0xa9c5f50]
  41f903:	pop    ds
  41f904:	daa    
  41f905:	xor    edi,DWORD PTR [ecx-0x39]
  41f908:	bound  ecx,QWORD PTR [ebx+0x55]
  41f90b:	adc    DWORD PTR [ebx],0x6bcf6181
  41f911:	cdq    
  41f912:	pop    edi
  41f913:	sti    
  41f914:	mov    ecx,DWORD PTR [edx]
  41f916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f917:	push   esp
  41f918:	mov    ds:0xef549b54,al
  41f91d:	cmc    
  41f91e:	mov    dh,0xdc
  41f920:	ins    DWORD PTR es:[edi],dx
  41f921:	jbe    0x41f916
  41f923:	mov    edi,0x482e7b17
  41f928:	push   ds
  41f929:	jae    0x41f92a
  41f92b:	adc    DWORD PTR [ebx-0x4fded8fc],0xbf0ca839
  41f935:	sub    DWORD PTR [edi+0x14],eax
  41f938:	pop    ebp
  41f939:	jo     0x41f980
  41f93b:	daa    
  41f93c:	mov    cl,0x13
  41f93e:	jae    0x41f8f8
  41f940:	and    edi,DWORD PTR [esi+0x42]
  41f943:	mov    fs,WORD PTR [edx+0x3b0542d2]
  41f949:	cmp    BYTE PTR [ebp-0x1d2453f4],cl
  41f94f:	or     eax,0x455aed47
  41f954:	or     al,0x36
  41f956:	imul   esp,DWORD PTR [edx-0x5659ba93],0x6ef21b50
  41f960:	push   0x838bde42
  41f965:	and    al,BYTE PTR [ecx+eiz*8-0x41]
  41f969:	dec    ebp
  41f96a:	push   0x66fdfede
  41f96f:	pop    ds
  41f970:	push   0x36
  41f972:	mov    eax,0x4bb9f9e
  41f977:	dec    ebx
  41f978:	jne    0x41f934
  41f97a:	loopne 0x41f9ed
  41f97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f97d:	scas   eax,DWORD PTR es:[edi]
  41f97e:	popf   
  41f97f:	repz jb 0x41f90d
  41f982:	loop   0x41f917
  41f984:	cld    
  41f985:	lea    esi,[ebx+0x3a]
  41f988:	push   edx
  41f989:	lods   al,BYTE PTR ds:[esi]
  41f98a:	sub    edi,ebx
  41f98c:	add    al,0x6c
  41f98e:	dec    eax
  41f98f:	clc    
  41f990:	jmp    0xbaa2:0x9fe91980
  41f997:	(bad)  
  41f998:	push   0xffffffc8
  41f99a:	lahf   
  41f99b:	sbb    DWORD PTR [esi*8+0x4301b01b],ebx
  41f9a2:	lds    ecx,FWORD PTR [edx+0x3c0cb4b1]
  41f9a8:	mov    eax,ds:0x22dfb586
  41f9ad:	arpl   bp,cx
  41f9af:	xor    al,0x2b
  41f9b1:	dec    ebx
  41f9b2:	xchg   ebp,eax
  41f9b3:	test   BYTE PTR [eax-0x5d9d4dd1],bh
  41f9b9:	loop   0x41f97f
  41f9bb:	sbb    DWORD PTR [esi],ebp
  41f9bd:	xor    BYTE PTR [ecx+0x6d],ch
  41f9c0:	lock arpl WORD PTR [esi],cx
  41f9c3:	add    DWORD PTR [edi+0x2a],0xb
  41f9c7:	stc    
  41f9c8:	add    eax,0xcc0ac05f
  41f9cd:	ins    DWORD PTR es:[edi],dx
  41f9ce:	mov    BYTE PTR [eax+ebx*1-0x5c],ch
  41f9d2:	into   
  41f9d3:	aad    0x16
  41f9d5:	inc    esp
  41f9d6:	jle    0x41fa01
  41f9d8:	and    BYTE PTR [esi-0x60],bh
  41f9db:	or     al,0x64
  41f9dd:	mov    ebp,0x74c44a79
  41f9e2:	xchg   esi,eax
  41f9e3:	jp     0x41f9b1
  41f9e5:	jecxz  0x41f9bd
  41f9e7:	mov    bl,ch
  41f9e9:	xchg   esp,eax
  41f9ea:	or     cl,bh
  41f9ec:	in     eax,dx
  41f9ed:	xor    eax,0x8f9342b0
  41f9f2:	mov    dh,0x8e
  41f9f4:	mov    bl,0xd7
  41f9f6:	mov    edi,0x5d8d6e28
  41f9fb:	ret    
  41f9fc:	cmp    eax,0x1af9a772
  41fa01:	xchg   esp,eax
  41fa02:	or     al,0x3
  41fa04:	bound  ebx,QWORD PTR [edi]
  41fa06:	cmp    eax,0xc279e86d
  41fa0b:	jb     0x41fa75
  41fa0d:	xchg   ebp,eax
  41fa0e:	mov    eax,ds:0x79069f64
  41fa13:	in     eax,dx
  41fa14:	mov    edx,0x8d8a29b8
  41fa19:	ds stc 
  41fa1b:	ins    BYTE PTR es:[edi],dx
  41fa1c:	inc    esp
  41fa1d:	cmp    DWORD PTR [edx-0x6e016e25],esi
  41fa23:	cmp    eax,esp
  41fa25:	dec    esp
  41fa26:	(bad)  
  41fa27:	jmp    0xacbf220
  41fa2c:	rcr    DWORD PTR [edx+0x11f4b462],0xe2
  41fa33:	xchg   ebp,eax
  41fa34:	sti    
  41fa35:	adc    al,0x81
  41fa37:	dec    edx
  41fa38:	push   cs
  41fa39:	sbb    ah,0xc3
  41fa3c:	into   
  41fa3d:	sbb    BYTE PTR [edx+0x7ecb0484],dh
  41fa43:	popf   
  41fa44:	sbb    DWORD PTR [eax+edi*1+0x21],ebx
  41fa48:	push   ds
  41fa49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa4a:	inc    ebx
  41fa4b:	fnstenv [eax-0x3]
  41fa4e:	push   edx
  41fa4f:	outs   dx,BYTE PTR ds:[esi]
  41fa50:	add    eax,ebx
  41fa52:	pop    ds
  41fa53:	mul    DWORD PTR [esi+0x4a8c62e6]
  41fa59:	inc    edi
  41fa5a:	jmp    0x47cb:0xdddcb617
  41fa61:	nop
  41fa62:	push   es
  41fa63:	js     0x41fa02
  41fa65:	mov    gs,WORD PTR [edi-0x349b1d28]
  41fa6b:	xlat   BYTE PTR ds:[ebx]
  41fa6c:	push   ebx
  41fa6d:	sbb    al,dl
  41fa6f:	ror    ebp,1
  41fa71:	jns    0x41fab9
  41fa73:	adc    eax,0x3c727445
  41fa78:	and    eax,0xc2117461
  41fa7d:	sub    ch,BYTE PTR [edi-0x39]
  41fa80:	and    eax,0x4def901
  41fa85:	int    0xb9
  41fa87:	aas    
  41fa88:	xor    edi,DWORD PTR [ebx]
  41fa8a:	mov    al,ds:0xe3678226
  41fa8f:	int    0xaf
  41fa91:	jnp    0x41fafe
  41fa93:	sbb    al,0xb0
  41fa95:	push   esp
  41fa96:	pop    ecx
  41fa97:	mov    cl,0x5e
  41fa99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa9a:	out    dx,al
  41fa9b:	lahf   
  41fa9c:	mov    al,0x3
  41fa9e:	bound  ebx,QWORD PTR [esi-0x1b]
  41faa1:	add    edx,DWORD PTR [esi]
  41faa3:	jmp    0xbb51:0x6b272a93
  41faaa:	jo     0x41fa45
  41faac:	mov    al,ds:0x151b787d
  41fab1:	outs   dx,BYTE PTR ds:[esi]
  41fab2:	adc    dl,cl
  41fab4:	adc    eax,0xa80b574c
  41fab9:	cmp    eax,0xba7f0d95
  41fabe:	aas    
  41fabf:	mov    ds:0xf6bb9223,al
  41fac4:	or     DWORD PTR [ebp+0x8ef21e8],0x7b
  41facb:	xlat   BYTE PTR ds:[ebx]
  41facc:	sbb    esp,DWORD PTR [edx+0x32]
  41facf:	cwde   
  41fad0:	int    0xbc
  41fad2:	push   ecx
  41fad3:	inc    edi
  41fad4:	jle    0x41fb38
  41fad6:	and    ah,bh
  41fad8:	or     esi,DWORD PTR [eax+0x11]
  41fadb:	push   edi
  41fadc:	push   esi
  41fadd:	push   ds
  41fade:	cmp    BYTE PTR [esi+0x590b4f61],0x1b
  41fae5:	ins    DWORD PTR es:[edi],dx
  41fae6:	test   BYTE PTR [eax-0x36],cl
  41fae9:	outs   dx,BYTE PTR ds:[esi]
  41faea:	mov    ebp,DWORD PTR [ebp-0x315b5851]
  41faf0:	mov    ds:0x33148eb3,al
  41faf5:	aam    0xc7
  41faf7:	jbe    0x41fab4
  41faf9:	int    0x3a
  41fafb:	sbb    BYTE PTR [ebx+0x44f9415f],ch
  41fb01:	mov    eax,0xe4a0de75
  41fb06:	cwde   
  41fb07:	xchg   ebp,eax
  41fb08:	aaa    
  41fb09:	(bad)  
  41fb0a:	stc    
  41fb0b:	(bad)  
  41fb0c:	push   0xf6118679
  41fb11:	out    0xf2,eax
  41fb13:	stos   DWORD PTR es:[edi],eax
  41fb14:	lock sub al,0x56
  41fb17:	cmp    edi,esp
  41fb19:	xchg   ebp,eax
  41fb1a:	in     al,dx
  41fb1b:	add    esi,edi
  41fb1d:	pusha  
  41fb1e:	sbb    DWORD PTR [eax+0x6f],ecx
  41fb21:	mov    edx,0xc762e3d1
  41fb26:	mov    bl,0xc3
  41fb28:	push   cs
  41fb29:	cdq    
  41fb2a:	cdq    
  41fb2b:	jge    0x41faf6
  41fb2d:	pop    ds
  41fb2e:	xor    DWORD PTR ss:[ebp-0x15],ecx
  41fb32:	dec    ebx
  41fb33:	iret   
  41fb34:	fadd   st,st(4)
  41fb36:	adc    eax,0x6b488522
  41fb3b:	pop    esi
  41fb3c:	clc    
  41fb3d:	sbb    eax,0xd3cc0059
  41fb42:	(bad)  
  41fb43:	popf   
  41fb44:	jp     0x41fb05
  41fb46:	xchg   DWORD PTR [eax],esi
  41fb48:	pop    esp
  41fb49:	mov    dl,0xe8
  41fb4b:	xchg   ebp,eax
  41fb4c:	mov    edi,ecx
  41fb4e:	jb     0x41fad7
  41fb50:	daa    
  41fb51:	xor    ah,BYTE PTR [eax-0x4cd0fa52]
  41fb57:	pop    ds
  41fb58:	retf   0x175d
  41fb5b:	inc    esi
  41fb5c:	neg    DWORD PTR [ebp+0x78004ffb]
  41fb62:	mov    esp,0xa39f234
  41fb67:	ss js  0x41fb4b
  41fb6a:	adc    al,0xaa
  41fb6c:	daa    
  41fb6d:	lds    ebp,FWORD PTR [esi-0x6d]
  41fb70:	or     DWORD PTR ds:0xdd99c967,edx
  41fb76:	inc    ecx
  41fb77:	inc    esi
  41fb78:	cmc    
  41fb79:	js     0x41fb59
  41fb7b:	mov    ah,0xe3
  41fb7d:	cs jne 0x41fb99
  41fb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb81:	adc    cl,BYTE PTR [eax+esi*4]
  41fb84:	xchg   ecx,eax
  41fb85:	sbb    esp,eax
  41fb87:	dec    ebp
  41fb88:	sbb    esp,ebx
  41fb8a:	mov    esp,0xf1716bed
  41fb8f:	mov    ds:0x85740a50,al
  41fb94:	in     al,0x56
  41fb96:	gs scas eax,DWORD PTR es:[edi]
  41fb98:	sbb    eax,0x35eada5c
  41fb9d:	jns    0x41fbb1
  41fb9f:	ficomp WORD PTR [ebp+0x49]
  41fba2:	mov    ch,0xf4
  41fba4:	icebp  
  41fba5:	rol    dh,1
  41fba7:	sti    
  41fba8:	add    al,0x1e
  41fbaa:	(bad)  
  41fbab:	ins    BYTE PTR es:[edi],dx
  41fbac:	(bad)  
  41fbad:	jb     0x41fb54
  41fbaf:	ficom  WORD PTR [esi-0x33]
  41fbb2:	call   0x5c5c:0x63f2cafc
  41fbb9:	jle    0x41fb47
  41fbbb:	es xor al,0xa
  41fbbe:	add    bh,BYTE PTR [ebx]
  41fbc0:	ds pop esp
  41fbc2:	mov    eax,0x4122e864
  41fbc7:	ret    
  41fbc8:	pop    es
  41fbc9:	mov    al,al
  41fbcb:	push   ecx
  41fbcc:	scas   al,BYTE PTR es:[edi]
  41fbcd:	fisub  DWORD PTR [ecx+eax*4+0x6e]
  41fbd1:	popf   
  41fbd2:	popf   
  41fbd3:	dec    eax
  41fbd4:	xor    BYTE PTR fs:[ebx-0x4e],0xfb
  41fbd9:	std    
  41fbda:	fidivr DWORD PTR [ebx]
  41fbdc:	jp     0x41fb99
  41fbde:	push   0xdd7c9965
  41fbe3:	pop    ecx
  41fbe4:	nop
  41fbe5:	xchg   edi,eax
  41fbe6:	enter  0x3912,0x16
  41fbea:	test   al,0xb7
  41fbec:	in     al,0xac
  41fbee:	sub    eax,0x3376adf4
  41fbf3:	out    dx,eax
  41fbf4:	dec    DWORD PTR [ecx-0x37345385]
  41fbfa:	cdq    
  41fbfb:	adc    al,0xc3
  41fbfd:	mov    BYTE PTR [esi+0x56fab2c7],dl
  41fc03:	adc    edx,edx
  41fc05:	retf   
  41fc06:	and    al,dl
  41fc08:	xor    DWORD PTR [edx+edi*4+0x64e80b42],ecx
  41fc0f:	jne    0x41fc20
  41fc11:	adc    esp,esi
  41fc13:	gs pop edi
  41fc15:	add    ch,BYTE PTR ds:0xe10016b4
  41fc1b:	jg     0x41fbd1
  41fc1d:	jb     0x41fbd2
  41fc1f:	sub    cl,dh
  41fc21:	inc    DWORD PTR ds:0x49d7b517
  41fc27:	repz js 0x41fbda
  41fc2a:	jb     0x41fbd7
  41fc2c:	cwde   
  41fc2d:	(bad)  
  41fc2e:	inc    eax
  41fc2f:	(bad)  
  41fc31:	and    eax,0x4a4d0826
  41fc36:	add    eax,0x88d18204
  41fc3b:	les    ecx,FWORD PTR [edx]
  41fc3d:	xchg   esp,eax
  41fc3e:	ret    0x50c8
  41fc41:	repnz int3 
  41fc43:	mov    ?,WORD PTR [eax]
  41fc45:	ja     0x41fc16
  41fc47:	test   BYTE PTR fs:[edi],0x66
  41fc4b:	xor    eax,0x58b08d27
  41fc50:	out    dx,al
  41fc51:	cld    
  41fc52:	dec    edx
  41fc53:	jecxz  0x41fcb5
  41fc55:	jp     0x41fc86
  41fc57:	and    eax,0x87ad1395
  41fc5c:	dec    ecx
  41fc5d:	sbb    al,0x26
  41fc5f:	xor    eax,0x179f0789
  41fc64:	repz cmp ebp,DWORD PTR [edi-0x5a70c521]
  41fc6b:	xchg   DWORD PTR [esp+ecx*4+0x7e],edx
  41fc6f:	adc    eax,0x185726b1
  41fc74:	inc    ebp
  41fc75:	pop    edx
  41fc76:	adc    edx,esi
  41fc78:	mov    ebp,DWORD PTR [ecx-0x5d]
  41fc7b:	out    0x5,al
  41fc7d:	sub    al,0xb8
  41fc7f:	arpl   WORD PTR ds:0x3f00d96b,bx
  41fc85:	dec    eax
  41fc86:	xor    bl,0xd
  41fc89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc8a:	pop    ds
  41fc8b:	ss push eax
  41fc8d:	arpl   WORD PTR [edx+ecx*2+0x509ac45e],di
  41fc94:	push   ebp
  41fc95:	xor    edx,esp
  41fc97:	jmp    0xebaccbf6
  41fc9c:	pop    ecx
  41fc9d:	mov    esp,0x8bdfa2f3
  41fca2:	sbb    al,0x16
  41fca4:	out    dx,eax
  41fca5:	lods   eax,DWORD PTR ds:[esi]
  41fca6:	xor    cl,BYTE PTR fs:[edi+0x28d795f2]
  41fcad:	ja     0x41fd2d
  41fcaf:	xor    BYTE PTR [edx],bl
  41fcb1:	test   eax,eax
  41fcb3:	cmp    al,0x1b
  41fcb5:	or     al,0x28
  41fcb7:	push   ebp
  41fcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcb9:	sar    BYTE PTR [ecx+ebx*1+0x66edb16f],cl
  41fcc0:	xlat   BYTE PTR ds:[ebx]
  41fcc1:	mov    edx,0xa07eb5dd
  41fcc6:	rol    ebp,1
  41fcc8:	loop   0x41fc7d
  41fcca:	ror    DWORD PTR [eax],1
  41fccc:	test   al,0x42
  41fcce:	stos   DWORD PTR es:[edi],eax
  41fccf:	pop    ebp
  41fcd0:	xchg   ebx,eax
  41fcd1:	add    BYTE PTR [edx+0x3a],dh
  41fcd4:	pop    eax
  41fcd5:	sub    al,0x4b
  41fcd7:	jmp    0x2cac:0x6fb50fa1
  41fcde:	xchg   DWORD PTR [esp+eiz*2-0x78],esp
  41fce2:	sub    al,0xe3
  41fce4:	cmp    al,0xa
  41fce6:	pop    esi
  41fce7:	jp     0x41fd03
  41fce9:	in     al,0x64
  41fceb:	lods   eax,DWORD PTR ds:[esi]
  41fcec:	add    eax,0x2d952838
  41fcf1:	int3   
  41fcf2:	sti    
  41fcf3:	retf   
  41fcf4:	dec    eax
  41fcf5:	push   ds
  41fcf6:	stos   BYTE PTR es:[edi],al
  41fcf7:	xor    BYTE PTR [eax],bh
  41fcf9:	sub    DWORD PTR [ecx],esp
  41fcfb:	pop    eax
  41fcfc:	rol    DWORD PTR [esi+0x5d],0x42
  41fd00:	fimul  WORD PTR [ebp-0x69]
  41fd03:	mov    al,0x93
  41fd05:	jmp    0x8e3d6cfd
  41fd0a:	add    BYTE PTR ds:0x19c591b1,bl
  41fd10:	call   0x3064e09
  41fd15:	pusha  
  41fd16:	(bad)  
  41fd17:	jmp    0xcbbb0cdd
  41fd1c:	test   DWORD PTR [edi+0x20],0x24164ce6
  41fd23:	adc    bh,dl
  41fd25:	sub    DWORD PTR [ebp+0x202ed817],ebx
  41fd2b:	popa   
  41fd2c:	enter  0x40be,0xa
  41fd30:	lock xchg edi,eax
  41fd32:	stc    
  41fd33:	pop    edx
  41fd34:	jmp    0xa32a:0x2e2c4049
  41fd3b:	adc    ebp,edi
  41fd3d:	repz shl ah,cl
  41fd40:	repz pop ebp
  41fd42:	stos   BYTE PTR es:[edi],al
  41fd43:	mov    esp,0x60f3f5c3
  41fd48:	mov    bl,0x1
  41fd4a:	lods   eax,DWORD PTR cs:[esi]
  41fd4c:	lods   eax,DWORD PTR ds:[esi]
  41fd4d:	inc    ebp
  41fd4e:	not    DWORD PTR [edi+0x7d]
  41fd51:	mov    al,0xbd
  41fd53:	mov    ecx,DWORD PTR [eax]
  41fd55:	daa    
  41fd56:	jmp    0xd4b:0xf759a190
  41fd5d:	adc    al,0x9f
  41fd5f:	mov    al,0x88
  41fd61:	popf   
  41fd62:	push   es
  41fd63:	lods   eax,DWORD PTR ds:[esi]
  41fd64:	clc    
  41fd65:	adc    ch,BYTE PTR [eax-0x3cd1eb15]
  41fd6b:	inc    esp
  41fd6c:	add    al,0xa0
  41fd6e:	lds    eax,FWORD PTR [edx+0x25]
  41fd71:	sbb    BYTE PTR [edi+0x7f9c0fcd],0x35
  41fd78:	(bad)  
  41fd79:	out    dx,al
  41fd7a:	cmp    DWORD PTR [eax-0xe],ecx
  41fd7d:	dec    esp
  41fd7e:	inc    ebp
  41fd7f:	adc    DWORD PTR [eax-0x1f8336d0],ebx
  41fd85:	adc    al,BYTE PTR [edx]
  41fd87:	and    dl,BYTE PTR [edi+ebp*8+0xea2b3a7]
  41fd8e:	lahf   
  41fd8f:	dec    edx
  41fd90:	in     al,0x3c
  41fd92:	dec    esi
  41fd93:	or     ch,BYTE PTR [ebx-0x54be0e62]
  41fd99:	repz and DWORD PTR [ebx-0x4baf960],ebp
  41fda0:	add    bh,ah
  41fda2:	cmp    BYTE PTR [edi],0x7f
  41fda5:	das    
  41fda6:	sbb    ch,bh
  41fda8:	jmp    0xc1720ee3
  41fdad:	push   esi
  41fdae:	dec    edi
  41fdaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdb0:	out    dx,al
  41fdb1:	jge    0x41fe17
  41fdb3:	lahf   
  41fdb4:	sub    al,0x9d
  41fdb6:	xchg   esi,eax
  41fdb7:	inc    esp
  41fdb8:	call   0x843a:0xcd62eef8
  41fdbf:	mov    WORD PTR [eax-0x2f4f4c3c],ds
  41fdc5:	push   ebx
  41fdc6:	xor    bl,BYTE PTR [ebp+0x3b]
  41fdc9:	and    al,0x5f
  41fdcb:	mov    bl,0xa0
  41fdcd:	inc    edi
  41fdce:	xchg   ebx,eax
  41fdcf:	push   esi
  41fdd0:	mov    eax,ds:0xfa3e14df
  41fdd5:	lock fnsave [ebx+0x37e1ba72]
  41fddc:	in     eax,dx
  41fddd:	dec    ecx
  41fdde:	pop    eax
  41fddf:	pusha  
  41fde0:	mov    eax,0xd7169363
  41fde5:	inc    esi
  41fde6:	in     eax,dx
  41fde7:	xchg   edx,eax
  41fde8:	popa   
  41fde9:	mov    ecx,0xdca25f9a
  41fdee:	jmp    0x41fd84
  41fdf0:	out    dx,eax
  41fdf1:	add    cl,ah
  41fdf3:	leave  
  41fdf4:	fsubp  st(7),st
  41fdf6:	push   0xda663f3b
  41fdfb:	cmp    ecx,ecx
  41fdfd:	out    dx,al
  41fdfe:	xchg   ebp,eax
  41fdff:	in     al,0x98
  41fe01:	adc    eax,0x23884f14
  41fe06:	jo     0x41fe01
  41fe08:	mov    dl,0x3f
  41fe0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe0b:	jbe    0x41fe14
  41fe0d:	push   esp
  41fe0e:	(bad)  
  41fe0f:	dec    ebx
  41fe10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe11:	into   
  41fe12:	test   eax,0x8a908057
  41fe17:	popa   
  41fe18:	dec    ebx
  41fe19:	inc    ebx
  41fe1a:	in     eax,0x4c
  41fe1c:	push   0x15763e7e
  41fe21:	and    al,0xe1
  41fe23:	add    eax,0x51a09ad
  41fe28:	cmc    
  41fe29:	add    al,0xe1
  41fe2b:	pop    esi
  41fe2c:	daa    
  41fe2d:	retf   0xdc63
  41fe30:	adc    eax,0xb05317c2
  41fe35:	mov    edx,0x2354261d
  41fe3a:	mov    al,ds:0xdf326045
  41fe3f:	ret    0xd091
  41fe42:	xlat   BYTE PTR ds:[ebx]
  41fe43:	(bad)  
  41fe44:	mov    edx,0xd72717f8
  41fe49:	ror    ebx,0x21
  41fe4c:	(bad)  
  41fe4e:	cmp    eax,0xdb05fd32
  41fe53:	(bad)  
  41fe56:	jmp    0x5d59d34e
  41fe5b:	dec    ebp
  41fe5c:	and    BYTE PTR [edx-0x7b],ch
  41fe5f:	scas   al,BYTE PTR es:[edi]
  41fe60:	int3   
  41fe61:	mov    DWORD PTR [ebp+0x5a],edx
  41fe64:	cmp    al,BYTE PTR [ebp+0x5dfbb505]
  41fe6a:	push   ss
  41fe6b:	mov    ecx,DWORD PTR [edi-0x5d]
  41fe6e:	dec    edi
  41fe6f:	mov    ebp,ebx
  41fe71:	sbb    edx,DWORD PTR ds:0xd21bdfd5
  41fe77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe78:	and    eax,0xab599eb4
  41fe7d:	lods   al,BYTE PTR ds:[esi]
  41fe7e:	push   es
  41fe7f:	pop    esp
  41fe80:	sub    edx,ecx
  41fe82:	fistp  QWORD PTR [edi-0x2c951aa6]
  41fe88:	nop
  41fe89:	mov    fs:0xa196de10,eax
  41fe8f:	push   ss
  41fe90:	loope  0x41fec4
  41fe92:	js     0x41fe63
  41fe94:	mov    ah,0xf2
  41fe96:	sbb    ecx,DWORD PTR [eax]
  41fe98:	int3   
  41fe99:	add    dl,BYTE PTR [edi+0x2dc2e6ec]
  41fe9f:	sub    BYTE PTR [esi+0x3],0xd4
  41fea3:	scas   eax,DWORD PTR es:[edi]
  41fea4:	jbe    0x41fef1
  41fea6:	inc    DWORD PTR [ebp-0x5f]
  41fea9:	into   
  41feaa:	fadd   QWORD PTR [ecx]
  41feac:	inc    ecx
  41fead:	xchg   esi,eax
  41feae:	mov    WORD PTR [ebp-0xf],?
  41feb1:	pop    ds
  41feb2:	and    edi,DWORD PTR [ebx-0x19]
  41feb5:	shl    BYTE PTR [ecx+0x3be5b249],1
  41febb:	stos   BYTE PTR es:[edi],al
  41febc:	mov    ecx,0x9a5679c4
  41fec1:	std    
  41fec2:	(bad)  
  41fec3:	loopne 0x41fe80
  41fec5:	mov    DWORD PTR [edx],edi
  41fec7:	hlt    
  41fec8:	cmp    ebx,DWORD PTR [ecx+0x7c97801b]
  41fece:	out    dx,al
  41fecf:	push   ebx
  41fed0:	mov    ah,al
  41fed2:	mov    ah,0xf4
  41fed4:	bound  eax,QWORD PTR [eax+esi*1+0x45729def]
  41fedb:	push   edi
  41fedc:	sub    bl,BYTE PTR [edx-0x61f4a956]
  41fee2:	outs   dx,BYTE PTR ds:[esi]
  41fee3:	adc    ebp,DWORD PTR [eax+0x7c]
  41fee6:	stos   DWORD PTR es:[edi],eax
  41fee7:	sub    bh,0xc4
  41feea:	dec    eax
  41feeb:	(bad)  
  41feed:	jmp    0x41fee7
  41feef:	cmp    al,0xc1
  41fef1:	sub    esp,edx
  41fef3:	dec    ecx
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	int3   
  41fef6:	in     al,dx
  41fef7:	mov    esp,0x7828e130
  41fefc:	rcr    BYTE PTR [esi+0x47c23788],0x46
  41ff03:	pusha  
  41ff04:	out    0xef,al
  41ff06:	bound  edi,QWORD PTR [edx-0x10c3c852]
  41ff0c:	pop    ecx
  41ff0d:	mov    cl,0x1e
  41ff0f:	bound  edi,QWORD PTR [ecx]
  41ff11:	xor    ebx,DWORD PTR [eax+0x794a0745]
  41ff17:	pop    esi
  41ff18:	push   ebx
  41ff19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff1a:	pop    es
  41ff1b:	sbb    al,0xe0
  41ff1d:	push   0x10e5bad6
  41ff22:	push   ss
  41ff23:	fistp  WORD PTR [edi]
  41ff25:	jg     0x41fecc
  41ff27:	or     BYTE PTR [esp+ebx*4+0x6a77706d],bh
  41ff2e:	outs   dx,DWORD PTR ds:[esi]
  41ff2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff30:	test   al,0xb
  41ff33:	mov    edx,DWORD PTR [edi-0x2329f8b]
  41ff39:	push   ebx
  41ff3a:	xor    BYTE PTR [edi],dl
  41ff3c:	inc    eax
  41ff3d:	fimul  DWORD PTR [edx-0x70ddce13]
  41ff43:	adc    eax,0x96962382
  41ff48:	jns    0x41ffa3
  41ff4a:	mov    cs,WORD PTR [esi]
  41ff4c:	inc    esi
  41ff4d:	test   DWORD PTR [esp+edx*1-0x77ff0eed],ebp
  41ff54:	test   al,0x21
  41ff56:	cmp    esi,DWORD PTR [ebp-0x746167fe]
  41ff5c:	add    BYTE PTR [esi+0x462a5af9],ch
  41ff62:	push   cs
  41ff63:	sub    ah,BYTE PTR [eax+0x66]
  41ff66:	ds pop edx
  41ff68:	dec    edx
  41ff69:	fist   DWORD PTR [edi-0x22]
  41ff6c:	push   edx
  41ff6d:	or     esi,0xffffff89
  41ff70:	ins    DWORD PTR es:[edi],dx
  41ff71:	scas   al,BYTE PTR es:[edi]
  41ff72:	lahf   
  41ff73:	imul   dl
  41ff75:	xchg   edi,eax
  41ff76:	mov    ebp,0x82407a87
  41ff7b:	test   ebx,0xeb4cb33d
  41ff81:	sub    eax,0x6cf24baa
  41ff86:	jns    0x41ffa1
  41ff88:	aaa    
  41ff89:	add    bl,bl
  41ff8b:	push   edi
  41ff8c:	jmp    0xfec1:0xcfa1a20
  41ff93:	and    edi,ebp
  41ff95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff96:	mov    ebx,0x9928253e
  41ff9b:	mul    BYTE PTR [edi-0x409ec5d3]
  41ffa1:	mov    ebx,0xfcc7f8a
  41ffa6:	lods   eax,DWORD PTR ds:[esi]
  41ffa7:	popa   
  41ffa8:	(bad)  
  41ffa9:	(bad)  
  41ffaa:	pop    edi
  41ffab:	pop    ebp
  41ffac:	push   cs
  41ffad:	mov    ecx,DWORD PTR [eax-0x61993a99]
  41ffb3:	and    eax,0xddfafb32
  41ffb8:	cdq    
  41ffb9:	mul    DWORD PTR [eax]
  41ffbb:	fist   DWORD PTR [ebx-0x29]
  41ffbe:	mov    ds:0x44c4bee0,eax
  41ffc3:	clc    
  41ffc4:	pop    edi
  41ffc5:	mov    dl,0xd4
  41ffc7:	out    0x50,al
  41ffc9:	aam    0xd1
  41ffcb:	pop    ds
  41ffcc:	clc    
  41ffcd:	test   eax,0x4a7428cc
  41ffd2:	retf   0x825c
  41ffd5:	scas   al,BYTE PTR es:[edi]
  41ffd6:	rol    DWORD PTR [ebp-0x70ee2f4d],1
  41ffdc:	mov    al,BYTE PTR [edi-0x6dc71f9c]
  41ffe2:	and    eax,0xc3253745
  41ffe7:	leave  
  41ffe8:	add    BYTE PTR [ecx],0x5d
  41ffeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffec:	rcl    ebp,1
  41ffee:	cld    
  41ffef:	mov    BYTE PTR [ecx+ecx*8],ah
  41fff2:	sbb    al,0x65
  41fff4:	mov    al,ds:0xf7304f30
  41fff9:	sub    edx,DWORD PTR [ecx-0x7a526456]
  41ffff:	fadd   QWORD PTR [ecx]
  420001:	dec    eax
  420002:	add    eax,ebx
  420004:	cwde   
  420005:	loopne 0x41ffc3
  420007:	pop    esp
  420008:	sub    BYTE PTR [edi],bh
  42000a:	jbe    0x41ffda
  42000c:	cmp    ecx,DWORD PTR [ebx+eax*2-0x11d5eee1]
  420013:	sbb    eax,0xbe190cd8
  420018:	jmp    0x6b1bb00b
  42001d:	mov    dh,BYTE PTR [ebx-0x3a]
  420020:	cld    
  420021:	in     eax,dx
  420022:	fs dec esi
  420024:	fbld   TBYTE PTR [ebp-0x8643607]
  42002a:	jno    0x41ffec
  42002c:	cmp    eax,0x72b8add7
  420031:	xlat   BYTE PTR ds:[ebx]
  420032:	sub    ebp,ebx
  420034:	daa    
  420035:	call   0xa8ca:0xcf2b089c
  42003c:	jle    0x420021
  42003e:	data16 sub dl,cl
  420041:	add    BYTE PTR [ebp-0x699f3b7e],0xb9
  420048:	int    0x9f
  42004a:	aad    0xe0
  42004c:	xor    DWORD PTR [edi+edi*2+0x59],edx
  420050:	mov    ecx,0xd18a3d32
  420055:	(bad)  
  420056:	cmp    eax,0x70e875c6
  42005b:	sub    al,0x25
  42005d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42005e:	add    ah,BYTE PTR [edx-0x79]
  420061:	dec    esp
  420062:	inc    ecx
  420063:	fwait
  420064:	test   al,0x4
  420066:	adc    ecx,DWORD PTR [esi+edx*1-0x43]
  42006a:	or     esi,esp
  42006c:	into   
  42006d:	iret   
  42006e:	inc    ecx
  42006f:	push   ebp
  420070:	xor    DWORD PTR [ecx-0x3360bd99],ebx
  420076:	cs aam 0xe4
  420079:	lods   al,BYTE PTR ds:[esi]
  42007a:	inc    esi
  42007b:	pop    ebp
  42007c:	dec    DWORD PTR [edi-0x1d36fb12]
  420082:	popf   
  420083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420084:	(bad)  [edi+ebx*4+0x20]
  420088:	ret    
  420089:	and    ecx,DWORD PTR [ecx]
  42008b:	jno    0x4200ed
  42008d:	stos   BYTE PTR es:[edi],al
  42008e:	sbb    al,0x32
  420090:	out    dx,eax
  420091:	popf   
  420092:	das    
  420093:	div    DWORD PTR [edi+edx*1+0x4c]
  420097:	fisttp WORD PTR [edi+0x2f43e843]
  42009d:	sub    cl,BYTE PTR [edi-0x50]
  4200a0:	nop
  4200a1:	mov    edx,0xaabfcb24
  4200a6:	imul   BYTE PTR [esi]
  4200a8:	add    ebx,DWORD PTR [eax+edi*4-0x12ea228c]
  4200af:	push   0xfffffff0
  4200b1:	push   ss
  4200b2:	es push esp
  4200b4:	inc    ebx
  4200b5:	out    dx,al
  4200b6:	or     BYTE PTR [esi+eax*2],bl
  4200b9:	stos   DWORD PTR es:[edi],eax
  4200ba:	ja     0x420110
  4200bc:	ds xchg ebx,eax
  4200be:	xor    eax,0xed0dee3c
  4200c3:	cs retf 
  4200c5:	jmp    0x4200ba
  4200c7:	mov    cl,0xd4
  4200c9:	fld    DWORD PTR [ebp+ebx*1-0x5da9cfdc]
  4200d0:	pushf  
  4200d1:	push   ds
  4200d2:	sti    
  4200d3:	xchg   DWORD PTR es:[ebp+0x4091ca11],edi
  4200da:	sub    eax,0x5286b09e
  4200df:	dec    esi
  4200e0:	scas   al,BYTE PTR es:[edi]
  4200e1:	cmp    DWORD PTR [esi-0x58],0xffffffde
  4200e5:	sub    BYTE PTR [eax],al
  4200e7:	mov    ah,0x32
  4200e9:	add    edi,edi
  4200eb:	pop    ebx
  4200ec:	fnstsw WORD PTR [ebx]
  4200ee:	iret   
  4200ef:	cs retf 
  4200f1:	and    BYTE PTR [eax+0x49],al
  4200f4:	and    edx,DWORD PTR [ebp-0x7b3d7146]
  4200fa:	mov    cl,0xb3
  4200fc:	cmp    BYTE PTR [ebp+0x5a4cc6e8],al
  420102:	frstor [ebx*2-0x60d34e2a]
  420109:	sahf   
  42010a:	ds popf 
  42010c:	xchg   ecx,eax
  42010d:	cli    
  42010e:	mov    ds:0x35464fa3,al
  420113:	cmp    esp,ebp
  420115:	stos   DWORD PTR es:[edi],eax
  420116:	xor    ah,BYTE PTR [edx-0x27ca6838]
  42011c:	dec    esp
  42011d:	dec    ebx
  42011e:	sbb    esp,ecx
  420120:	cli    
  420121:	je     0x4200ca
  420123:	pop    ds
  420124:	jo     0x42017f
  420126:	mov    edi,0xcf53d0b9
  42012b:	mov    eax,ecx
  42012d:	pop    es
  42012e:	xchg   BYTE PTR [edi+0x4b9c7049],al
  420134:	xor    edi,DWORD PTR [edx]
  420136:	mov    edx,0xb5148c9d
  42013b:	mov    ecx,0x2fb79a72
  420140:	pop    edx
  420141:	pop    ebx
  420142:	in     eax,dx
  420143:	(bad)  
  420144:	lods   eax,DWORD PTR ds:[esi]
  420145:	xor    DWORD PTR [ecx-0x30],ebp
  420148:	loopne 0x420137
  42014a:	rol    BYTE PTR [edx],1
  42014c:	out    dx,eax
  42014d:	jl     0x420188
  42014f:	lock scas eax,DWORD PTR es:[edi]
  420151:	add    BYTE PTR [edx-0x6d],dl
  420154:	pop    ebp
  420155:	mov    eax,ds:0xa68ee39f
  42015a:	and    edi,esp
  42015c:	aam    0x1c
  42015e:	imul   ecx,ecx,0xffffffa7
  420161:	adc    eax,0x5ef7cf35
  420166:	arpl   WORD PTR [edx],di
  420168:	jo     0x42016a
  42016a:	and    eax,0x5a44bb5a
  42016f:	xor    ecx,DWORD PTR [edx-0x487768f8]
  420175:	imul   ebx
  420177:	dec    ebx
  420178:	mov    edi,0x5c6e1ff5
  42017d:	sub    edx,DWORD PTR [esp+edi*1+0x542a7f64]
  420184:	push   0x13
  420186:	add    dh,ch
  420188:	xor    BYTE PTR [eax+0x66a11507],0x14
  42018f:	push   ds
  420190:	jno    0x4201f4
  420192:	push   edi
  420193:	sbb    BYTE PTR [ecx+0x51],bl
  420196:	sbb    ebx,ebx
  420198:	shr    ecx,1
  42019a:	cmp    BYTE PTR [ebx+0x3f],0xbe
  42019e:	les    esp,FWORD PTR [ecx+0xbc99a84]
  4201a4:	push   esi
  4201a5:	mov    ah,cl
  4201a7:	lahf   
  4201a8:	or     eax,0xd28ef54b
  4201ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ae:	xlat   BYTE PTR ds:[ebx]
  4201af:	mov    eax,0xabb019ef
  4201b4:	inc    edx
  4201b5:	arpl   WORD PTR [ecx],ax
  4201b7:	sbb    BYTE PTR ds:0xc1412f22,bl
  4201bd:	inc    ebp
  4201be:	inc    ebp
  4201bf:	mov    ah,0xa5
  4201c1:	mov    DWORD PTR [eax+0x40145728],edx
  4201c7:	jp     0x420192
  4201c9:	in     al,0x47
  4201cb:	sub    bl,dh
  4201cd:	int    0x5d
  4201cf:	rol    DWORD PTR [eax],1
  4201d1:	mov    esp,0xb006c432
  4201d6:	or     DWORD PTR [eax-0xe3353dd],0x47cf4d74
  4201e0:	stos   DWORD PTR es:[edi],eax
  4201e1:	xor    al,0xd
  4201e3:	sbb    eax,0xfef5a742
  4201e8:	daa    
  4201e9:	xchg   ecx,eax
  4201ea:	sar    BYTE PTR fs:[ebx-0x44],0x74
  4201ef:	jecxz  0x4201dd
  4201f1:	xchg   esp,eax
  4201f2:	sbb    DWORD PTR [edi],ecx
  4201f4:	jnp    0x42017c
  4201f6:	push   0x15
  4201f8:	retf   0x18d5
  4201fb:	out    0xbd,al
  4201fd:	xchg   DWORD PTR [ebp+ebp*4+0x59a33253],esp
  420204:	sub    DWORD PTR [esi-0x639ae384],0xffffffff
  42020b:	mov    esp,0xee438e01
  420210:	sub    eax,DWORD PTR [ebp+0x3e]
  420213:	imul   DWORD PTR [ebx]
  420215:	jl     0x42020e
  420217:	add    edi,DWORD PTR [edx+0x54]
  42021a:	cmp    WORD PTR [ecx-0x6d],dx
  42021e:	fdivp  st(6),st
  420220:	stos   DWORD PTR es:[edi],eax
  420221:	dec    edi
  420222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420223:	nop
  420224:	and    al,0x1d
  420226:	mov    ch,0xb7
  420228:	xlat   BYTE PTR ds:[ebx]
  420229:	mov    ds:0xb9fe3472,al
  42022e:	bound  eax,QWORD PTR [ebp-0x2f]
  420231:	add    ch,dh
  420233:	inc    ebx
  420234:	inc    esp
  420235:	ret    
  420236:	inc    edi
  420237:	out    0x89,al
  420239:	sti    
  42023a:	and    DWORD PTR [ebp+0x52d4c628],edx
  420240:	icebp  
  420241:	jns    0x4201c3
  420243:	xor    esi,DWORD PTR [ebp+0x73]
  420246:	outs   dx,BYTE PTR ds:[esi]
  420247:	mov    BYTE PTR [eax-0x7d],dl
  42024a:	xor    DWORD PTR [ebx-0x50],edx
  42024d:	call   0x6b6e9bd6
  420252:	pusha  
  420253:	xor    BYTE PTR [esi-0x2c714ced],ch
  420259:	je     0x42029e
  42025b:	jecxz  0x420241
  42025d:	jbe    0x4202cc
  42025f:	call   0x479c:0xd07f9cde
  420266:	mov    ds:0xfc7fe48f,eax
  42026b:	mov    dh,0x6b
  42026d:	lahf   
  42026e:	xchg   DWORD PTR [edx+0x68503961],edx
  420274:	dec    edi
  420275:	dec    edi
  420276:	sub    al,al
  420278:	rol    cl,1
  42027a:	dec    eax
  42027b:	cmp    eax,0xe52f3660
  420280:	mov    ebp,0x5cefc897
  420285:	push   ss
  420286:	ins    BYTE PTR es:[edi],dx
  420287:	(bad)  [edi]
  420289:	mov    al,0x1d
  42028b:	div    DWORD PTR [eax]
  42028d:	mov    esi,ecx
  42028f:	inc    esi
  420290:	cmp    DWORD PTR [eax-0x68],ebp
  420293:	xchg   ebx,eax
  420294:	test   bh,ch
  420296:	xchg   ebp,eax
  420297:	into   
  420298:	clc    
  420299:	push   cs
  42029a:	and    cl,cl
  42029c:	cli    
  42029d:	test   al,0x67
  42029f:	mov    eax,0x5e33d375
  4202a4:	xor    ch,al
  4202a6:	pop    ebx
  4202a7:	cwde   
  4202a8:	jmp    esp
  4202aa:	ins    DWORD PTR es:[edi],dx
  4202ab:	fild   DWORD PTR [eax]
  4202ad:	inc    edx
  4202ae:	test   BYTE PTR [esi],ch
  4202b0:	push   esp
  4202b1:	sahf   
  4202b2:	std    
  4202b3:	xor    DWORD PTR [edi-0x43028c44],esp
  4202b9:	ret    
  4202ba:	data16 xchg BYTE PTR [edi],bh
  4202bd:	leave  
  4202be:	adc    ebp,eax
  4202c0:	sub    al,0xb6
  4202c2:	sub    DWORD PTR ds:0x606c3200,eax
  4202c8:	into   
  4202c9:	adc    BYTE PTR [ebx-0x7b],0x6a
  4202cd:	in     al,0x52
  4202cf:	int    0xd8
  4202d1:	adc    BYTE PTR [edi-0x15cae0b4],bh
  4202d7:	ds ins DWORD PTR es:[edi],dx
  4202d9:	test   al,0x13
  4202db:	jle    0x4202d9
  4202dd:	cmp    BYTE PTR [edi+0x38f538e0],bh
  4202e3:	xor    ah,BYTE PTR [ebx-0x171668c9]
  4202e9:	adc    ch,bh
  4202eb:	int3   
  4202ec:	jmp    0x76bc2878
  4202f1:	push   cs
  4202f2:	enter  0xffc,0xdb
  4202f6:	ds fwait
  4202f8:	mov    ebx,0xfb303fd0
  4202fd:	std    
  4202fe:	mov    ebx,0xd6d0e363
  420303:	ret    0x9a81
  420306:	inc    edi
  420307:	xor    bl,BYTE PTR [edi+0x38ace2e7]
  42030d:	dec    eax
  42030e:	xchg   BYTE PTR [edi-0x6e],dh
  420311:	sbb    eax,0x4914cbd4
  420316:	cmp    ah,BYTE PTR [ecx+0x20b3505a]
  42031c:	xor    BYTE PTR [ecx+0x244a37eb],0xf6
  420323:	arpl   WORD PTR [eax+0x45],bx
  420326:	xor    ch,cl
  420328:	stos   DWORD PTR es:[edi],eax
  420329:	call   0x5b5cc63b
  42032e:	clc    
  42032f:	bound  esp,QWORD PTR [edi]
  420331:	call   0x124:0x19796517
  420338:	(bad)  
  420339:	addr16 dec edi
  42033b:	mov    dl,0xf0
  42033d:	call   0x5fc4961
  420342:	rol    BYTE PTR [edi-0x70],1
  420345:	lods   eax,DWORD PTR ds:[esi]
  420346:	mov    DWORD PTR [eax+0x1b],esp
  420349:	sub    DWORD PTR [edi],esi
  42034b:	fbld   TBYTE PTR [eax+0x5d]
  42034e:	iret   
  42034f:	pop    esp
  420350:	and    BYTE PTR [esi-0x5707d58f],dh
  420356:	ja     0x420318
  420358:	test   BYTE PTR [esi-0x2834eee4],bl
  42035e:	pop    es
  42035f:	jb     0x4203ad
  420361:	shl    BYTE PTR [edi+eiz*2],0x6b
  420365:	jo     0x4202ee
  420367:	jmp    0x4416a25
  42036c:	pop    ds
  42036d:	cmp    DWORD PTR [ebp+0x6a8b426c],edi
  420373:	and    eax,0x8f429f91
  420378:	shr    DWORD PTR [ebx-0x14],1
  42037b:	nop
  42037c:	mov    al,ds:0x2bb5b44
  420381:	jbe    0x42037f
  420383:	ja     0x420313
  420385:	stc    
  420386:	hlt    
  420387:	cmp    ah,al
  420389:	xor    edi,DWORD PTR [eax+0x4ff2bc1d]
  42038f:	mov    al,cs:0xa0d33d1c
  420395:	xchg   edi,eax
  420396:	loope  0x420385
  420398:	shl    DWORD PTR [edi-0x11],0x90
  42039c:	daa    
  42039d:	cmp    al,0x1a
  42039f:	or     DWORD PTR ds:0x3972440b,0x7d3b88f4
  4203a9:	loopne 0x420411
  4203ab:	hlt    
  4203ac:	js     0x42036b
  4203ae:	push   ecx
  4203af:	out    0x36,eax
  4203b1:	sbb    WORD PTR [ebp+0x46],bp
  4203b5:	scas   al,BYTE PTR es:[edi]
  4203b6:	call   0x10e5:0xb5c720ef
  4203bd:	test   al,0x1
  4203bf:	dec    ebp
  4203c0:	jb     0x4203fd
  4203c2:	sbb    eax,0x91c30f57
  4203c7:	ins    DWORD PTR es:[edi],dx
  4203c8:	test   DWORD PTR [esi],ebp
  4203ca:	fild   WORD PTR [ebx]
  4203cc:	jecxz  0x4203f9
  4203ce:	sub    BYTE PTR [esi+0x7a],al
  4203d1:	push   0xbf946868
  4203d6:	inc    esi
  4203d7:	sub    ebx,DWORD PTR [edi+esi*1]
  4203da:	int3   
  4203db:	jle    0x42042a
  4203dd:	inc    edx
  4203de:	mov    ebp,0x41d58222
  4203e3:	call   0xe3284b4d
  4203e8:	pop    ebp
  4203e9:	stos   DWORD PTR es:[edi],eax
  4203ea:	rol    ah,cl
  4203ec:	add    eax,0x4e9f017c
  4203f1:	call   0x20c6:0xde0dc8ae
  4203f8:	ja     0x42041f
  4203fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203fb:	pop    eax
  4203fc:	data16 mov BYTE PTR [eax],bh
  4203ff:	in     eax,dx
  420400:	test   al,0x7b
  420402:	push   esi
  420403:	(bad)  
  420404:	call   0x7b98aad9
  420409:	xor    BYTE PTR [eax+0x68082fa6],al
  42040f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420410:	jmp    0x6488:0x4b1d3022
  420417:	add    al,0x5
  420419:	mov    ebx,0xa140693a
  42041e:	jecxz  0x420488
  420420:	adc    al,0x56
  420422:	jge    0x42043a
  420424:	fsubr  DWORD PTR [edx]
  420426:	jne    0x4203c5
  420428:	fadd   DWORD PTR [ecx+esi*8-0x1f]
  42042c:	cdq    
  42042d:	lea    esp,[ecx]
  42042f:	imul   esp,DWORD PTR [ebx-0x14],0x4
  420433:	sbb    eax,ebx
  420435:	aaa    
  420436:	mov    dh,0xf4
  420438:	inc    edi
  420439:	lock push ss
  42043b:	push   esp
  42043c:	sub    al,0xea
  42043e:	cmp    bh,cl
  420440:	and    DWORD PTR fs:[edx],edx
  420443:	jmp    FWORD PTR [edi-0x4c]
  420446:	sub    DWORD PTR [esi+0x1dc7d6d5],ecx
  42044c:	aas    
  42044d:	sub    BYTE PTR gs:[esi+0x2b],bh
  420451:	adc    eax,0x2d03ee18
  420456:	mov    ebp,0x692daba8
  42045b:	inc    eax
  42045c:	or     eax,0xd3637fcf
  420461:	sub    ebx,DWORD PTR [edx]
  420463:	fwait
  420464:	sbb    DWORD PTR [eax+0x4b],0x4ae51cdd
  42046b:	xchg   BYTE PTR [edi-0x38],dl
  42046e:	or     al,0x5c
  420470:	frstor [esi+eiz*2-0x43]
  420474:	lods   eax,DWORD PTR ds:[esi]
  420475:	shl    BYTE PTR [edi],cl
  420477:	test   DWORD PTR ds:0x654b7802,ebp
  42047d:	push   esi
  42047e:	repnz add al,0x7c
  420481:	in     eax,dx
  420482:	ins    BYTE PTR es:[edi],dx
  420483:	cmc    
  420484:	pop    ebp
  420485:	shr    edx,1
  420487:	xor    eax,DWORD PTR [ebx+0x5e]
  42048a:	jmp    0x74ce:0x1ebe5d81
  420491:	mov    ebx,0x75b62d00
  420496:	packssdw mm7,QWORD PTR [ecx+ecx*8]
  42049a:	cmp    ebp,ebx
  42049c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42049d:	imul   esi,esp,0xa031dec7
  4204a3:	add    BYTE PTR [edx-0x7d6dca0f],dl
  4204a9:	add    al,0x96
  4204ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ac:	aad    0xdb
  4204ae:	pop    ds
  4204af:	and    DWORD PTR [ebx],esi
  4204b1:	jmp    0x15367c9
  4204b6:	push   cs
  4204b7:	pop    ds
  4204b8:	jge    0x4204f5
  4204ba:	adc    eax,0xbace3023
  4204bf:	xor    ah,BYTE PTR [ecx-0x4d]
  4204c2:	dec    esp
  4204c3:	sub    BYTE PTR [ecx],dl
  4204c5:	sub    cl,dl
  4204c7:	xor    edi,DWORD PTR [edi-0x60abf4d7]
  4204cd:	pop    esi
  4204ce:	stc    
  4204cf:	das    
  4204d0:	mov    bl,0xb8
  4204d2:	sbb    BYTE PTR ds:0x955b6770,bl
  4204d8:	in     eax,dx
  4204d9:	sub    al,0x62
  4204db:	loope  0x420523
  4204dd:	add    al,0x79
  4204df:	aaa    
  4204e0:	nop
  4204e1:	in     al,0x7a
  4204e3:	xchg   BYTE PTR [ebx-0x6f7b45c9],ah
  4204e9:	and    eax,0x3496a80b
  4204ee:	push   esi
  4204ef:	xor    eax,0x3e303572
  4204f4:	push   ss
  4204f5:	mov    ecx,DWORD PTR [esi-0x65d889b3]
  4204fb:	inc    eax
  4204fc:	dec    esp
  4204fd:	(bad)  
  4204fe:	arpl   bx,sp
  420500:	nop
  420501:	inc    BYTE PTR [esi]
  420503:	iret   
  420504:	test   al,0x16
  420506:	fld    st(1)
  420508:	outs   dx,BYTE PTR ds:[esi]
  420509:	dec    esi
  42050a:	pushf  
  42050b:	fisubr WORD PTR [ebx+0x7e1f187]
  420511:	inc    ebx
  420512:	add    cl,BYTE PTR [edi-0x576a3bdf]
  420518:	mov    ebx,0xc86d1db7
  42051d:	or     al,0xf4
  42051f:	sar    DWORD PTR [eax],0xd3
  420522:	and    BYTE PTR [esi+0x3e3e0a9d],cl
  420528:	xchg   ebp,eax
  420529:	or     eax,0x2fe2a746
  42052e:	int3   
  42052f:	in     eax,dx
  420530:	jmp    0xe3f9bf82
  420535:	xchg   bh,dh
  420537:	loopne 0x420514
  420539:	das    
  42053a:	dec    esi
  42053b:	mov    ebx,0xb824c3e4
  420540:	or     edx,DWORD PTR [ecx+0x70]
  420543:	fistp  DWORD PTR [ebx+0x3e]
  420546:	xor    DWORD PTR [eax*2+0x2a02cff6],esp
  42054d:	inc    edx
  42054f:	jp     0x420578
  420551:	xchg   edx,eax
  420552:	jb     0x42051c
  420554:	adc    edx,eax
  420556:	fistp  DWORD PTR [ebp+edi*1+0x7dac4bb2]
  42055d:	lods   al,BYTE PTR ds:[esi]
  42055e:	mov    eax,ds:0x5618989
  420563:	mov    al,0x9f
  420565:	test   BYTE PTR [edx],dh
  420567:	jae    0x42055e
  420569:	popf   
  42056a:	mov    ebp,0x388bbaf9
  42056f:	je     0x4205d8
  420571:	int3   
  420572:	and    ebp,eax
  420574:	mov    eax,0x3451e06
  420579:	mov    WORD PTR [esi-0x53],cs
  42057c:	xchg   ebx,eax
  42057d:	cmp    edx,ebp
  42057f:	lea    eax,[ebx+esi*1]
  420582:	mov    eax,ds:0x99fa0192
  420587:	xlat   BYTE PTR ds:[ebx]
  420588:	jmp    0xec1af1c0
  42058d:	mov    ebp,DWORD PTR [esi-0x29]
  420590:	or     eax,0x534e92b9
  420595:	call   0xbb38:0x556ef052
  42059c:	std    
  42059d:	test   eax,0xf3d472e2
  4205a2:	or     esi,DWORD PTR [ebx-0x7779d274]
  4205a8:	dec    eax
  4205a9:	or     eax,0x3bbb6f24
  4205ae:	mov    ebp,ds
  4205b0:	lods   al,BYTE PTR ds:[esi]
  4205b1:	xchg   ebp,eax
  4205b2:	pop    eax
  4205b3:	rcl    BYTE PTR [edi+0x6947b2f4],0x1d
  4205ba:	cmp    esi,DWORD PTR [esi-0x5c3d0a2e]
  4205c0:	mov    bl,ah
  4205c2:	xor    BYTE PTR [eax-0x5724db92],cl
  4205c8:	mov    ebp,0x470b5f41
  4205cd:	int3   
  4205ce:	into   
  4205cf:	cmp    ebx,0x38111a9d
  4205d5:	(bad)  
  4205d6:	mov    ebp,0x64d0b99c
  4205db:	dec    esi
  4205dc:	cmp    edx,DWORD PTR [ecx-0x40]
  4205df:	(bad)  
  4205e1:	sti    
  4205e2:	enter  0xcaaf,0xda
  4205e6:	icebp  
  4205e7:	test   dl,cl
  4205e9:	pusha  
  4205ea:	jb     0x420580
  4205ec:	test   eax,0x594137e4
  4205f1:	xchg   edx,eax
  4205f2:	xchg   edi,eax
  4205f3:	(bad)  
  4205f4:	pop    ecx
  4205f5:	(bad)  
  4205f6:	and    BYTE PTR [eax-0x41],bl
  4205f9:	hlt    
  4205fa:	popf   
  4205fb:	lea    esp,[edi+edx*2+0x4d03e82e]
  420602:	mov    ch,0x4e
  420604:	cld    
  420605:	mov    BYTE PTR ds:0xa59386ca,ch
  42060b:	sbb    DWORD PTR [edi+0x2613d240],ecx
  420611:	mov    ds:0x8e494152,eax
  420616:	les    esp,FWORD PTR [esp+ecx*4-0x3]
  42061a:	hlt    
  42061b:	jecxz  0x420698
  42061d:	mov    cl,0x35
  42061f:	scas   al,BYTE PTR es:[edi]
  420620:	(bad)  
  420621:	inc    ebx
  420622:	add    BYTE PTR [ebx+ecx*1+0x0],ah
  420626:	dec    eax
  420627:	mov    ebp,0x63b90957
  42062c:	cld    
  42062d:	out    0x52,al
  42062f:	cli    
  420630:	ss push esi
  420632:	shl    BYTE PTR [ecx-0x32],1
  420635:	jl     0x420658
  420637:	xchg   DWORD PTR [edx-0x9410f23],edx
  42063d:	dec    edx
  42063e:	cmp    DWORD PTR [eax-0x534296cf],0x724aa318
  420648:	and    DWORD PTR [ebp-0x39073300],esi
  42064e:	je     0x4206b4
  420650:	jae    0x420659
  420652:	push   edi
  420653:	stc    
  420654:	or     al,0x34
  420656:	add    DWORD PTR [esi+0x2e],edx
  420659:	and    cl,BYTE PTR [ebx-0x78533bea]
  42065f:	push   0x2
  420661:	mov    eax,0xa54da04e
  420666:	or     eax,0x4d7f69e9
  42066b:	cmp    BYTE PTR [edx+0x2f],ah
  42066e:	gs cmc 
  420670:	or     DWORD PTR [ecx-0x787117a6],esp
  420676:	stos   DWORD PTR es:[edi],eax
  420677:	(bad)  
  420678:	sub    eax,0xbec0219
  42067d:	cmp    al,0x84
  42067f:	fbld   TBYTE PTR [ecx-0x7d9f7259]
  420685:	xlat   BYTE PTR ds:[ebx]
  420686:	scas   eax,DWORD PTR es:[edi]
  420687:	fld    DWORD PTR [ebp-0x7]
  42068a:	pop    eax
  42068b:	jne    0x42068e
  42068d:	in     eax,0x39
  42068f:	cmp    BYTE PTR [edi],dl
  420691:	pop    ecx
  420692:	or     eax,0x63c32934
  420697:	test   eax,0x98f98d26
  42069c:	mov    ss,esp
  42069e:	push   esi
  42069f:	cmp    ecx,DWORD PTR ds:0x6d21ab66
  4206a5:	adc    DWORD PTR [eax-0x62],edx
  4206a8:	in     eax,dx
  4206a9:	xchg   ebx,eax
  4206aa:	ds dec ebx
  4206ac:	mov    al,0x1b
  4206ae:	push   eax
  4206af:	enter  0xa575,0x23
  4206b3:	mov    eax,0x76c90486
  4206b8:	pushf  
  4206b9:	pop    esp
  4206ba:	stos   BYTE PTR es:[edi],al
  4206bb:	mov    eax,0xa693a778
  4206c0:	ret    0xa564
  4206c3:	lahf   
  4206c4:	inc    eax
  4206c5:	test   BYTE PTR [ebx],ch
  4206c7:	pusha  
  4206c8:	jne    0x4206a1
  4206ca:	mov    ebx,DWORD PTR [ebp+0x1c209db0]
  4206d0:	leave  
  4206d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206d2:	int3   
  4206d3:	inc    edi
  4206d4:	sub    eax,0x3b245b1f
  4206d9:	popaw  
  4206db:	push   cs
  4206dc:	das    
  4206dd:	push   esi
  4206de:	dec    esi
  4206df:	xchg   esi,eax
  4206e0:	sub    al,0x27
  4206e2:	push   esi
  4206e3:	inc    ebp
  4206e4:	cdq    
  4206e5:	(bad)  
  4206e6:	add    bl,BYTE PTR [ebx-0x5255b3b9]
  4206ec:	int3   
  4206ed:	ss push ax
  4206f0:	aaa    
  4206f1:	add    ch,bh
  4206f3:	outs   dx,DWORD PTR ds:[esi]
  4206f4:	int    0x97
  4206f6:	inc    esp
  4206f7:	fdiv   QWORD PTR [ebx-0x37e6e76f]
  4206fd:	mov    dh,0x7d
  4206ff:	push   esi
  420700:	and    ebx,ecx
  420702:	push   ebx
  420703:	or     BYTE PTR [edx-0x52b01c95],al
  420709:	push   ebx
  42070a:	xor    bh,BYTE PTR [ebx]
  42070c:	(bad)  
  42070d:	in     eax,0xd0
  42070f:	fwait
  420710:	sbb    BYTE PTR [esi+0x84d1829],ah
  420716:	jg     0x4206e6
  420718:	push   0xffffff93
  42071a:	and    al,0x40
  42071c:	pop    edi
  42071d:	stc    
  42071e:	pop    ebx
  42071f:	inc    ebp
  420720:	loop   0x42077f
  420722:	cs retf 
  420724:	mov    edi,0x61b5f8c
  420729:	dec    ecx
  42072a:	gs ret 0x88de
  42072e:	pop    ecx
  42072f:	xlat   BYTE PTR ds:[ebx]
  420730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420731:	inc    ebx
  420732:	movq   mm1,QWORD PTR [ebp-0x77]
  420736:	push   es
  420737:	pushf  
  420738:	xor    al,0x9f
  42073a:	fimul  WORD PTR [ebx+0x7e]
  42073d:	dec    ebp
  42073e:	sub    BYTE PTR [eax+0x1337300a],dh
  420744:	xchg   ecx,eax
  420745:	mov    al,0xc1
  420747:	cs in  eax,0xe5
  42074a:	rcl    DWORD PTR [ecx],1
  42074c:	fnstcw WORD PTR [ecx+eax*8-0x7914c8c5]
  420753:	push   0x62e2f638
  420758:	pop    ss
  420759:	sbb    DWORD PTR [edx],0x604b482b
  42075f:	ret    0xdef7
  420762:	mov    edi,esi
  420764:	cmp    al,0xf2
  420766:	push   esi
  420768:	cmp    DWORD PTR [edx-0x68],esi
  42076b:	test   al,0x92
  42076d:	nop
  42076e:	sbb    BYTE PTR [edi+0x5],cl
  420771:	pop    ds
  420772:	inc    esp
  420773:	inc    ecx
  420774:	jbe    0x4207ec
  420776:	and    eax,0xffffff8f
  420779:	cmp    ebx,eax
  42077b:	scas   eax,DWORD PTR es:[edi]
  42077c:	xchg   esp,esp
  42077e:	frstor [edi]
  420780:	stos   DWORD PTR es:[edi],eax
  420781:	cs int 0xf2
  420784:	sar    BYTE PTR [ecx-0x7e],1
  420787:	jg     0x420720
  420789:	mov    WORD PTR ds:0x54453f42,fs
  42078f:	add    eax,0xa7d29637
  420794:	jno    0x4207c7
  420796:	mov    ah,0xfc
  420798:	xlat   BYTE PTR ds:[ebx]
  420799:	mov    al,0xbd
  42079b:	sub    ah,dl
  42079d:	mov    WORD PTR [eax+0x49],fs
  4207a0:	inc    ebx
  4207a1:	add    DWORD PTR [ecx],esp
  4207a3:	cmp    edx,esp
  4207a5:	push   esp
  4207a6:	add    ch,ah
  4207a8:	xor    DWORD PTR [esi],ebx
  4207aa:	and    ebx,DWORD PTR [esi-0x15]
  4207ad:	push   es
  4207ae:	mov    ecx,0xd89e9db6
  4207b3:	jae    0x4207c9
  4207b5:	dec    esi
  4207b6:	xor    eax,0x2b00eaf7
  4207bb:	add    ah,dl
  4207bd:	pusha  
  4207be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207bf:	dec    BYTE PTR ds:0x9aa197a0
  4207c5:	push   eax
  4207c6:	mov    bl,bl
  4207c8:	and    al,0x1d
  4207ca:	mov    dl,0x68
  4207cc:	xchg   ecx,eax
  4207cd:	call   0x3e5a125
  4207d2:	clc    
  4207d3:	sub    eax,0x6a6be239
  4207d8:	icebp  
  4207d9:	add    BYTE PTR [eax-0x7d79924a],dl
  4207df:	inc    ebx
  4207e0:	aam    0x14
  4207e2:	in     al,dx
  4207e3:	sbb    al,0x22
  4207e5:	ret    
  4207e6:	scas   eax,DWORD PTR es:[edi]
  4207e7:	lods   eax,DWORD PTR ds:[esi]
  4207e8:	leave  
  4207e9:	push   esi
  4207ea:	pop    esp
  4207eb:	lock cmp BYTE PTR [ebp+0x6193967b],ch
  4207f2:	add    BYTE PTR [edx-0x6b4843d9],al
  4207f8:	push   0xffffffd9
  4207fa:	adc    al,0xac
  4207fc:	and    ecx,DWORD PTR [esi+0xce8074d]
  420802:	xchg   ebp,eax
  420803:	and    BYTE PTR [eax-0x28f663f6],ch
  420809:	sbb    eax,0xd75bc9b7
  42080e:	sbb    esp,DWORD PTR [edi+0x7f185325]
  420814:	mov    eax,0x96f3fbc1
  420819:	xchg   BYTE PTR [edi],bl
  42081b:	sbb    al,0x88
  42081d:	popf   
  42081e:	mov    ebp,0x97a3f4d9
  420823:	add    al,0xeb
  420825:	sub    ch,BYTE PTR [ecx-0x74]
  420828:	je     0x4207f2
  42082a:	xchg   ebp,eax
  42082b:	pop    es
  42082c:	gs stos DWORD PTR es:[edi],eax
  42082e:	imul   ebx,DWORD PTR [esi+0x71e2fb1e],0x8b8e8ea6
  420838:	or     BYTE PTR ds:0x761b4227,bl
  42083e:	push   eax
  42083f:	call   0x266604ce
  420844:	(bad)  
  420846:	jp     0x4208ac
  420848:	sbb    edx,esi
  42084a:	std    
  42084b:	inc    ecx
  42084c:	ret    
  42084d:	test   al,0xec
  42084f:	iret   
  420850:	pop    esi
  420851:	cwde   
  420852:	or     dl,BYTE PTR [esi]
  420854:	push   0x523b26af
  420859:	(bad)
  42085d:	pop    ds
  42085e:	push   ss
  42085f:	mov    BYTE PTR [eax],bl
  420861:	out    0xd2,al
  420863:	xchg   ecx,eax
  420864:	fimul  DWORD PTR [edx]
  420866:	mov    dh,0xde
  420868:	push   0x254d35ab
  42086d:	int3   
  42086e:	jl     0x420851
  420870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420871:	xchg   BYTE PTR [ebx-0x4f],dl
  420874:	ins    BYTE PTR es:[edi],dx
  420875:	mov    eax,0x8b641c07
  42087a:	fs push esi
  42087c:	or     bh,BYTE PTR [eax]
  42087e:	mov    ah,0x7f
  420880:	(bad)  
  420881:	sbb    eax,0x4b64f11
  420886:	inc    esi
  420887:	xor    eax,0xcbcb2f10
  42088c:	(bad)  
  42088d:	pop    ds
  42088e:	les    esi,FWORD PTR [ebp-0x67]
  420891:	outs   dx,DWORD PTR ds:[esi]
  420892:	je     0x4208a8
  420894:	push   0x1ab1896a
  420899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089a:	fadd   st,st(7)
  42089c:	(bad)  
  42089d:	setge  ch
  4208a0:	je     0x420843
  4208a2:	dec    edx
  4208a3:	loopne 0x420861
  4208a5:	fdivr  QWORD PTR [esi-0x79507128]
  4208ab:	je     0x42084a
  4208ad:	arpl   WORD PTR [edi-0x2cd3b33],bp
  4208b3:	lods   eax,DWORD PTR ds:[esi]
  4208b4:	adc    al,0x47
  4208b6:	shl    BYTE PTR [edi-0x5612721],cl
  4208bc:	fiadd  WORD PTR [ecx+0x17]
  4208bf:	aas    
  4208c0:	and    dh,BYTE PTR [esi+0x54]
  4208c3:	push   esp
  4208c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208c5:	adc    BYTE PTR [ecx-0x3798f775],ah
  4208cb:	nop
  4208cc:	mov    cl,0x83
  4208ce:	xchg   edi,eax
  4208cf:	into   
  4208d0:	mov    DWORD PTR [ecx-0x2810622],ebp
  4208d6:	add    bh,al
  4208d8:	xor    ch,dl
  4208da:	and    BYTE PTR [esi+0x39],bl
  4208dd:	call   0xe12f:0x5b8e419f
  4208e4:	pop    es
  4208e5:	inc    edi
  4208e6:	mov    bh,0xd4
  4208e8:	jg     0x420919
  4208ea:	xor    DWORD PTR [eax-0x408f47f],0x25e573e
  4208f4:	rol    DWORD PTR [edx+ebp*1-0x6a],1
  4208f8:	repnz test al,0x22
  4208fb:	sbb    esp,DWORD PTR [esi+0x7888c82c]
  420901:	in     eax,0xf
  420903:	ja     0x4208f2
  420905:	and    ecx,esi
  420907:	mov    al,ds:0xa82dd767
  42090c:	ss stc 
  42090e:	mov    esi,DWORD PTR [ebp-0x7248818]
  420914:	ins    BYTE PTR es:[edi],dx
  420915:	lea    ebx,[eax-0x54]
  420918:	lea    edi,[edi]
  42091a:	pushf  
  42091b:	test   BYTE PTR [ebx],bl
  42091d:	cmc    
  42091e:	xchg   edx,eax
  42091f:	xchg   ah,dl
  420921:	pop    ds
  420922:	mov    ecx,0x52346812
  420927:	pop    edi
  420928:	push   0xffffffe6
  42092a:	mov    ah,0x84
  42092c:	rcr    BYTE PTR [esp+ebx*8+0x1d93b330],1
  420933:	mov    eax,0x55ce636d
  420938:	in     eax,0x84
  42093a:	sbb    BYTE PTR [eax],bh
  42093c:	gs mov ecx,0xdf36b9d4
  420942:	inc    esp
  420943:	rcr    BYTE PTR [eax],0xb4
  420946:	push   ebp
  420947:	cmp    sp,WORD PTR [edx]
  42094a:	retf   0xd697
  42094d:	icebp  
  42094e:	xchg   esi,eax
  42094f:	and    dh,BYTE PTR [ecx]
  420951:	inc    ecx
  420952:	mov    ebx,0x7865a654
  420957:	or     al,0xf1
  420959:	pusha  
  42095a:	(bad)  
  42095b:	or     al,0xc4
  42095d:	xchg   esp,eax
  42095e:	imul   eax,DWORD PTR [ebx-0x7762e7c1],0x9ba9cddb
  420968:	call   0xdec1ac0f
  42096d:	das    
  42096e:	push   ss
  42096f:	xor    eax,0xf0915cd3
  420974:	cmp    eax,0xf6f3e479
  420979:	push   edi
  42097a:	dec    eax
  42097b:	jae    0x420987
  42097d:	outs   dx,DWORD PTR ds:[esi]
  42097e:	mov    ebp,0x8b8bd2df
  420983:	and    al,BYTE PTR [esi+0x415814ea]
  420989:	mov    ds:0x7cf8092a,al
  42098e:	jns    0x420934
  420990:	fistp  QWORD PTR [esi-0x17573088]
  420996:	push   cs
  420997:	scas   eax,DWORD PTR es:[edi]
  420998:	fsub   st(6),st
  42099a:	push   cs
  42099b:	or     eax,0xc6167500
  4209a0:	jecxz  0x4209bb
  4209a2:	push   esp
  4209a3:	or     al,0xeb
  4209a5:	aam    0x52
  4209a7:	enter  0x7cfb,0x39
  4209ab:	cdq    
  4209ac:	les    esi,FWORD PTR [edi+0x4b]
  4209af:	into   
  4209b0:	shl    DWORD PTR [eax+0x5a4c890],1
  4209b6:	dec    esp
  4209b7:	mov    ecx,0xaa5560b2
  4209bc:	ja     0x420a14
  4209be:	mov    dl,0x2e
  4209c0:	dec    ebp
  4209c1:	mov    ebx,es
  4209c3:	adc    ebp,DWORD PTR [eax+esi*4]
  4209c6:	dec    ecx
  4209c7:	sbb    ebp,DWORD PTR ds:0x467af484
  4209cd:	lahf   
  4209ce:	cwde   
  4209cf:	mov    ds:0xae14758e,al
  4209d4:	xor    al,bl
  4209d6:	lea    ecx,[edi]
  4209d8:	call   0x2456:0xb68bf995
  4209df:	arpl   WORD PTR [ecx],bp
  4209e1:	fs ins DWORD PTR es:[edi],dx
  4209e3:	nop
  4209e4:	(bad)  
  4209e5:	mov    dl,0xa2
  4209e7:	adc    cl,al
  4209e9:	js     0x420a1a
  4209eb:	inc    edx
  4209ec:	stos   DWORD PTR es:[edi],eax
  4209ed:	in     al,0x6b
  4209ef:	mov    bh,0xc7
  4209f1:	inc    ebx
  4209f2:	mov    bl,0xad
  4209f4:	and    eax,0x83758e7c
  4209f9:	jbe    0x4209ea
  4209fb:	js     0x420a46
  4209fd:	adc    al,0x16
  4209ff:	sub    al,0x5c
  420a01:	je     0x420a24
  420a03:	shr    BYTE PTR [edi],cl
  420a05:	nop
  420a06:	bound  ebp,QWORD PTR [esi-0xb1d72c4]
  420a0c:	(bad)  [ebx-0x47]
  420a0f:	add    dh,BYTE PTR [ecx-0x326dc839]
  420a15:	push   ds
  420a16:	ins    DWORD PTR es:[edi],dx
  420a17:	push   esp
  420a18:	and    DWORD PTR [ebp+edi*2-0x3e],edi
  420a1c:	nop
  420a1d:	aad    0x40
  420a1f:	cli    
  420a20:	xchg   edi,eax
  420a21:	push   ds
  420a22:	add    cl,al
  420a24:	fwait
  420a25:	sub    eax,0x552587fd
  420a2a:	jmp    0x24f8:0x1fc07ef6
  420a31:	dec    ecx
  420a32:	fsubr  DWORD PTR [eax-0x9]
  420a35:	xor    ah,BYTE PTR [ebx+ebp*2-0x2983fcf1]
  420a3c:	add    eax,0x1177ec35
  420a41:	xor    esi,DWORD PTR [edi+0x583d7396]
  420a47:	(bad)  
  420a48:	ret    0xe90e
  420a4b:	lods   al,BYTE PTR ds:[esi]
  420a4c:	adc    BYTE PTR [ebx+0x5209582f],0xd9
  420a53:	in     al,dx
  420a54:	pop    ds
  420a55:	shr    BYTE PTR ds:0x9e701bf3,cl
  420a5b:	sub    al,0x3
  420a5d:	sbb    al,0x2e
  420a5f:	dec    ebp
  420a60:	sbb    al,0xa4
  420a62:	sbb    al,BYTE PTR [ecx-0x794337a4]
  420a68:	mov    al,ch
  420a6a:	das    
  420a6b:	adc    eax,0xfd8aef2f
  420a70:	sub    eax,0x9894dac0
  420a75:	jbe    0x420ae1
  420a77:	cmp    ah,dl
  420a79:	mov    ds:0x3e0c7c9f,eax
  420a7e:	addr16 cmp eax,0xda9d7823
  420a84:	out    0x6a,al
  420a86:	pop    ds
  420a87:	push   ss
  420a88:	pop    es
  420a89:	test   BYTE PTR [edi+0x155ab93e],al
  420a8f:	dec    ebp
  420a90:	arpl   WORD PTR [edx+0x62],sp
  420a93:	les    edx,FWORD PTR [edx+0x49]
  420a96:	int    0x12
  420a98:	outs   dx,DWORD PTR ds:[esi]
  420a99:	clc    
  420a9a:	enter  0x4b13,0xa2
  420a9e:	xchg   esp,eax
  420a9f:	inc    dx
  420aa1:	jo     0x420a73
  420aa3:	loop   0x420a57
  420aa5:	mov    eax,0x2b032609
  420aaa:	lea    ebp,[eax]
  420aac:	xchg   DWORD PTR [ebp-0x4f539405],ebx
  420ab2:	inc    ebx
  420ab3:	sbb    dh,ch
  420ab5:	cdq    
  420ab6:	in     eax,0x8e
  420ab8:	sub    eax,0xacb3b51c
  420abd:	sbb    DWORD PTR [ebx],edi
  420abf:	sub    eax,0xb70090db
  420ac4:	cmc    
  420ac5:	outs   dx,DWORD PTR ds:[esi]
  420ac6:	gs inc ebp
  420ac8:	dec    esi
  420ac9:	loope  0x420a77
  420acb:	dec    ebx
  420acc:	out    dx,al
  420acd:	test   ecx,0x4f78e615
  420ad3:	cmp    DWORD PTR [edx+0x80211bb],ebx
  420ad9:	jo     0x420b18
  420adb:	pop    ss
  420adc:	repz loopne 0x420b5a
  420adf:	(bad)  
  420ae0:	int    0x8c
  420ae2:	outs   dx,DWORD PTR ds:[esi]
  420ae4:	mov    ecx,DWORD PTR [di+0x3a]
  420ae8:	push   0xf3f89424
  420aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aee:	mov    ds:0x8f0b189f,eax
  420af3:	test   DWORD PTR [eax+edi*4],edi
  420af6:	xor    bh,BYTE PTR [ecx+ecx*4]
  420af9:	aaa    
  420afa:	mov    al,ds:0x946b5ce1
  420aff:	push   eax
  420b00:	and    bl,BYTE PTR [edx-0x6737d047]
  420b06:	icebp  
  420b07:	(bad)  
  420b08:	push   ss
  420b09:	xor    eax,0x29515707
  420b0e:	in     al,0x78
  420b10:	cwde   
  420b11:	test   eax,esi
  420b13:	in     eax,dx
  420b14:	and    DWORD PTR [eax+0x49],ebx
  420b17:	cmp    BYTE PTR ds:0x631d641b,0xf5
  420b1e:	mov    ecx,0x4900ebdc
  420b23:	jae    0x420ae9
  420b25:	xor    ebx,edx
  420b27:	call   0x7a6d:0x8348d506
  420b2e:	out    dx,al
  420b2f:	mov    esi,0xce96e41c
  420b34:	out    0xa,eax
  420b36:	or     al,0x24
  420b38:	scas   eax,DWORD PTR es:[edi]
  420b39:	xchg   edi,eax
  420b3a:	das    
  420b3b:	sahf   
  420b3c:	mov    edi,0x393ab893
  420b41:	loopne 0x420ba3
  420b43:	(bad)  
  420b44:	fmul   QWORD PTR [edx-0x11]
  420b47:	sbb    edx,0x6a12fc06
  420b4d:	(bad)  
  420b4e:	push   es
  420b4f:	fstp   TBYTE PTR [esi*8-0x56a7ebf5]
  420b56:	adc    dh,BYTE PTR [edi+ecx*1+0x24b65769]
  420b5d:	shl    BYTE PTR [edi],0x78
  420b60:	(bad)  
  420b61:	dec    ecx
  420b62:	or     al,0x1
  420b64:	mov    bh,dh
  420b66:	pop    DWORD PTR [edx-0x3f486d2f]
  420b6c:	popa   
  420b6d:	test   eax,0x5f2b932
  420b72:	xor    BYTE PTR ds:0x36ac4be4,ch
  420b78:	adc    eax,0x6ef72680
  420b7d:	sub    eax,0x2c8e010a
  420b82:	sub    esi,ebp
  420b84:	xlat   BYTE PTR ds:[ebx]
  420b85:	fs inc bl
  420b88:	xor    ebx,ebx
  420b8a:	jmp    0x1dcb:0xa968bace
  420b91:	in     eax,0xfd
  420b93:	cmp    DWORD PTR [edx+0x28],0xffffffa8
  420b97:	jb     0x420ba3
  420b99:	int    0x94
  420b9b:	xor    DWORD PTR ds:0x7df7ce8b,ebp
  420ba1:	mov    eax,0xf8c0bcbb
  420ba6:	icebp  
  420ba7:	sub    DWORD PTR [edx+0x9b072a5],esi
  420bad:	out    0x31,al
  420baf:	xchg   esi,eax
  420bb0:	sub    al,0xdb
  420bb2:	pop    ebx
  420bb3:	lock fistp QWORD PTR [edi+0x4352b9ed]
  420bba:	xor    edi,ebp
  420bbc:	and    eax,0xba2b1802
  420bc1:	repnz sbb DWORD PTR [esi],edi
  420bc4:	call   0x8d2c318d
  420bc9:	out    dx,eax
  420bca:	sbb    eax,0xe9a246af
  420bcf:	xor    al,0xab
  420bd1:	lock xor ch,BYTE PTR [eax-0x7da7f8d4]
  420bd8:	xchg   edi,eax
  420bd9:	enter  0x1710,0xd
  420bdd:	sbb    al,0x3f
  420bdf:	mov    DWORD PTR [ecx],edx
  420be1:	cmp    eax,0x9f93b890
  420be6:	push   eax
  420be7:	es xor al,0xb6
  420bea:	mov    ah,BYTE PTR [eax]
  420bec:	retf   
  420bed:	jp     0x420c0f
  420bef:	retf   
  420bf0:	inc    eax
  420bf1:	mov    eax,0x83230b06
  420bf6:	pop    edi
  420bf7:	jp     0x420bf6
  420bf9:	test   BYTE PTR [ecx],bh
  420bfb:	lods   al,BYTE PTR ds:[esi]
  420bfc:	jne    0x420bd1
  420bfe:	push   0x79000a26
  420c03:	lahf   
  420c04:	test   al,0x5f
  420c06:	push   ebp
  420c07:	mov    ecx,0x4664069e
  420c0c:	mov    dh,0x8a
  420c0e:	xor    eax,0xd43b70f8
  420c13:	into   
  420c14:	bound  esi,QWORD PTR [eax]
  420c16:	test   al,0xc6
  420c18:	aas    
  420c19:	jne    0x420bd2
  420c1b:	popa   
  420c1c:	push   DWORD PTR [eax]
  420c1e:	push   esp
  420c1f:	jnp    0x420bc6
  420c21:	shl    dl,1
  420c23:	pop    ebx
  420c24:	sbb    DWORD PTR [ebp+edi*1-0x75],0xaf3c06c9
  420c2c:	cdq    
  420c2d:	adc    ebx,DWORD PTR [esp+eax*2-0x185ee62]
  420c34:	das    
  420c35:	ja     0x420bbf
  420c37:	aad    0x62
  420c39:	int    0x58
  420c3b:	sub    DWORD PTR [edi],esp
  420c3d:	test   al,0x75
  420c3f:	(bad)  
  420c40:	mov    esi,0xa20dccea
  420c45:	mov    al,0x25
  420c47:	xchg   esp,eax
  420c48:	push   ss
  420c49:	addr16 jo 0x420c10
  420c4c:	jnp    0x420c66
  420c4e:	fstp   DWORD PTR [edi+0x3]
  420c51:	mov    cl,0xc4
  420c53:	push   ds
  420c54:	repnz and eax,DWORD PTR [ebx+ebp*4+0x110bbd96]
  420c5c:	or     eax,ebx
  420c5e:	pusha  
  420c5f:	dec    ecx
  420c60:	hlt    
  420c61:	outs   dx,DWORD PTR ds:[esi]
  420c62:	dec    esi
  420c63:	icebp  
  420c64:	or     al,0xd2
  420c66:	mov    al,ds:0x2f4e78bc
  420c6b:	outs   dx,BYTE PTR ds:[esi]
  420c6c:	enter  0x8f7d,0xb6
  420c70:	rep stos BYTE PTR es:[edi],al
  420c72:	push   edx
  420c73:	and    al,0xad
  420c75:	call   DWORD PTR [eax]
  420c77:	test   bl,cl
  420c79:	push   0x297b353e
  420c7e:	push   0x4d0f1deb
  420c83:	jl     0x420c95
  420c85:	pop    ebx
  420c86:	ins    DWORD PTR es:[edi],dx
  420c87:	mov    cl,0xe3
  420c89:	mov    ch,0xdb
  420c8b:	call   0xf26dd95
  420c90:	pop    eax
  420c91:	or     dh,ah
  420c93:	cmp    edi,DWORD PTR [ebx+0x215d1f9b]
  420c99:	or     BYTE PTR [eax+edi*4],ch
  420c9c:	mov    ch,0xbd
  420c9e:	call   DWORD PTR [eax]
  420ca0:	dec    ebx
  420ca1:	stos   BYTE PTR es:[edi],al
  420ca2:	sbb    eax,0xf7331c69
  420ca7:	dec    edi
  420ca8:	xor    BYTE PTR [ecx+ecx*1],0x85
  420cac:	inc    eax
  420cad:	sbb    BYTE PTR [ecx],0x2b
  420cb0:	popa   
  420cb1:	adc    BYTE PTR [ecx],0x8b
  420cb4:	and    esp,DWORD PTR [edi-0x3f]
  420cb7:	xor    DWORD PTR [ecx],edi
  420cb9:	mov    esi,0xf3e76b3
  420cbe:	jno    0x420d04
  420cc0:	repnz nop
  420cc2:	in     eax,dx
  420cc3:	sub    DWORD PTR fs:[esi-0x21e17629],0xc35abb45
  420cce:	daa    
  420ccf:	ja     0x420ca3
  420cd1:	fild   QWORD PTR ds:0xf64271c5
  420cd7:	pop    edi
  420cd8:	cmp    eax,esi
  420cda:	out    0xeb,al
  420cdc:	add    BYTE PTR [edi-0x14],ch
  420cdf:	pop    ds
  420ce0:	pop    es
  420ce1:	aaa    
  420ce2:	rol    BYTE PTR [edi],cl
  420ce4:	nop    DWORD PTR [esi]
  420ce7:	iret   
  420ce8:	rol    bl,0x62
  420ceb:	xchg   cx,ax
  420ced:	push   esp
  420cee:	repnz sar DWORD PTR [edx-0x9],1
  420cf2:	xor    edx,DWORD PTR [esi]
  420cf4:	mov    ?,WORD PTR [edi-0x4c406963]
  420cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cfb:	jmp    0xa8eb:0xf3c9ea07
  420d02:	lea    ebp,[ebp-0x51]
  420d05:	push   edx
  420d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d07:	ret    0xac74
  420d0a:	cld    
  420d0b:	cmp    dl,BYTE PTR [ebp-0x3f]
  420d0e:	mov    ebp,0x39be088a
  420d13:	les    esi,FWORD PTR [edx+0x3c]
  420d16:	xchg   edi,eax
  420d17:	push   0x77
  420d19:	xchg   BYTE PTR [esi],dl
  420d1b:	mov    ds:0xf794f80a,eax
  420d20:	es (bad) 
  420d22:	sbb    al,0x74
  420d24:	add    cl,bh
  420d26:	fistp  WORD PTR [edx]
  420d28:	jl     0x420d26
  420d2a:	cmc    
  420d2b:	cwde   
  420d2c:	imul   esi,DWORD PTR [ecx+0x7a],0xffffffc1
  420d30:	mov    al,0x92
  420d32:	pop    ds
  420d33:	clc    
  420d34:	jb     0x420d99
  420d36:	or     eax,0x8770b32d
  420d3b:	arpl   WORD PTR [edi],si
  420d3d:	outs   dx,BYTE PTR ds:[esi]
  420d3e:	std    
  420d3f:	push   edi
  420d40:	jle    0x420d15
  420d42:	lea    edi,[ecx+0x7f]
  420d45:	push   es
  420d46:	inc    edx
  420d47:	sbb    edi,ebp
  420d49:	fistp  QWORD PTR [ebp+edi*1-0x7d]
  420d4d:	in     al,dx
  420d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d4f:	pop    esp
  420d50:	mov    ebx,0xaa475c60
  420d55:	mov    esi,0x584bada9
  420d5a:	xchg   ebx,eax
  420d5b:	jle    0x420d98
  420d5d:	cmp    BYTE PTR [ebp-0x2e],ah
  420d60:	loope  0x420d29
  420d62:	aas    
  420d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d64:	rcl    DWORD PTR [edi+ebp*8+0x38],1
  420d68:	mov    DWORD PTR [ecx+0x14],ebp
  420d6b:	(bad)  
  420d6c:	sub    al,0x97
  420d6e:	das    
  420d6f:	test   DWORD PTR [ebx+0x4d],esp
  420d72:	dec    ebp
  420d73:	out    dx,eax
  420d74:	fwait
  420d75:	icebp  
  420d76:	hlt    
  420d77:	ret    
  420d78:	pushf  
  420d79:	mov    BYTE PTR [edx],bh
  420d7b:	mov    esi,0x6c6ff5f5
  420d80:	mov    ebx,0x45caf303
  420d85:	xchg   esi,ecx
  420d87:	pop    eax
  420d88:	cmp    bl,0xea
  420d8b:	pop    edx
  420d8c:	clc    
  420d8d:	sub    al,0xfc
  420d8f:	rol    DWORD PTR [esi-0x6930307e],0xe1
  420d96:	sub    eax,0x49074a00
  420d9b:	pusha  
  420d9c:	xchg   ebp,eax
  420d9d:	fs push esi
  420d9f:	inc    ebx
  420da0:	ss loopne 0x420dfe
  420da3:	les    ebp,FWORD PTR [esi]
  420da5:	mov    ch,cl
  420da7:	add    DWORD PTR [edi+0x5b],ebp
  420daa:	(bad)  
  420dab:	sbb    ah,0x35
  420dae:	cmp    eax,0xfeaf6fd4
  420db3:	daa    
  420db4:	jecxz  0x420e26
  420db6:	mov    al,0x5e
  420db8:	into   
  420db9:	or     BYTE PTR [eax+0x7ddb10e0],bl
  420dbf:	sbb    cl,BYTE PTR [ebx+0x30]
  420dc2:	sub    ch,BYTE PTR [eax]
  420dc4:	or     eax,0xd6b70426
  420dc9:	dec    ebp
  420dca:	out    0x72,al
  420dcc:	jmp    0x4778:0x2ce7727f
  420dd3:	push   esp
  420dd4:	scas   al,BYTE PTR es:[edi]
  420dd5:	(bad)  
  420dd7:	test   BYTE PTR [edx],ah
  420dd9:	pop    edx
  420dda:	sbb    BYTE PTR [ecx+eiz*1-0x3c655db7],al
  420de1:	cmp    al,0xe1
  420de3:	sbb    eax,DWORD PTR [esp+edi*8]
  420de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420de7:	(bad)
  420deb:	inc    esi
  420dec:	gs xchg edx,eax
  420dee:	cmp    bh,BYTE PTR [esi+edx*1]
  420df1:	aas    
  420df2:	sbb    al,BYTE PTR [eax+eax*1]
  420df5:	shr    DWORD PTR [esi],1
  420df7:	ret    
  420df8:	(bad)  
  420df9:	(bad)
  420dfc:	rcl    BYTE PTR [ebx+0x701f80f3],cl
  420e02:	adc    ebx,DWORD PTR [esi]
  420e04:	cwde   
  420e05:	out    dx,al
  420e06:	or     al,0x8c
  420e08:	shr    DWORD PTR [edi-0x6c532de9],cl
  420e0e:	mov    es,WORD PTR [ebx]
  420e10:	push   cs
  420e11:	stos   BYTE PTR es:[edi],al
  420e12:	in     eax,dx
  420e13:	mov    al,ds:0x8e346176
  420e18:	fiadd  DWORD PTR [ecx]
  420e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e1b:	loop   0x420dad
  420e1d:	(bad)  
  420e1e:	ret    0xbe78
  420e21:	adc    eax,DWORD PTR cs:[edi+0x7e]
  420e25:	jae    0x420e15
  420e27:	push   ebp
  420e28:	out    0x26,al
  420e2a:	sub    ebx,DWORD PTR [ebp-0x6e2d2f1b]
  420e30:	inc    ebx
  420e31:	inc    esi
  420e32:	ror    DWORD PTR [ebx],0x4f
  420e35:	sub    DWORD PTR [eax-0x80],eax
  420e38:	out    dx,eax
  420e39:	xchg   ebx,eax
  420e3a:	jp     0x420de1
  420e3c:	and    ecx,DWORD PTR [ecx+edx*2-0x2d064134]
  420e43:	and    dh,bh
  420e45:	aas    
  420e46:	test   eax,0xf3c5d53a
  420e4b:	(bad)  
  420e4d:	xor    eax,0xa2ca6232
  420e52:	pop    esp
  420e53:	xchg   edi,eax
  420e54:	and    ah,0x93
  420e57:	dec    ebp
  420e58:	fs dec esi
  420e5a:	fcomi  st,st(4)
  420e5c:	add    eax,0x1e341d98
  420e61:	xor    al,0x78
  420e63:	push   es
  420e64:	aas    
  420e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e66:	mov    edi,0xaeaf2ead
  420e6b:	jmp    0x420e4a
  420e6d:	cmp    eax,0x11680d5d
  420e72:	xchg   DWORD PTR [eax-0x1ae66919],edx
  420e78:	cmp    eax,0xa26ab817
  420e7d:	std    
  420e7e:	adc    BYTE PTR [ebx+0x5a3d5704],dl
  420e84:	in     al,dx
  420e85:	cld    
  420e86:	jbe    0x420e54
  420e88:	mov    dh,0x7b
  420e8a:	jmp    DWORD PTR [esi]
  420e8c:	popf   
  420e8d:	and    al,dh
  420e8f:	xor    ah,ch
  420e91:	(bad)  
  420e92:	fst    QWORD PTR [edx]
  420e94:	aad    0x65
  420e96:	xor    BYTE PTR [edx-0x393ba5c4],0x2a
  420e9d:	mov    DWORD PTR [ebx-0x72],edx
  420ea0:	jl     0x420ec0
  420ea2:	xlat   BYTE PTR ds:[ebx]
  420ea3:	sub    eax,0xcad895f
  420ea8:	jae    0x420e4e
  420eaa:	adc    edi,DWORD PTR [edx-0x6e]
  420ead:	into   
  420eae:	repnz cwde 
  420eb0:	xchg   esp,eax
  420eb1:	sbb    eax,0xd89f2b54
  420eb6:	lahf   
  420eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb8:	add    eax,0xb5818f73
  420ebd:	mov    edx,0x70ba6095
  420ec2:	les    ebp,FWORD PTR [ebp-0x21639e46]
  420ec8:	jmp    0x3b78dac
  420ecd:	fisttp QWORD PTR [edi+0x1c4f997c]
  420ed3:	ds pop ecx
  420ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed6:	shl    BYTE PTR [edi],0x48
  420ed9:	in     al,0xde
  420edb:	xchg   esp,eax
  420edc:	adc    eax,0x6f532a4d
  420ee1:	out    0x85,al
  420ee3:	inc    edi
  420ee4:	fcom   st(2)
  420ee6:	mov    bh,0xf4
  420ee8:	in     eax,dx
  420ee9:	or     eax,DWORD PTR [edx-0x40]
  420eec:	jno    0x420f26
  420eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eef:	(bad)  
  420ef0:	out    0xd3,al
  420ef2:	push   edx
  420ef3:	rcr    BYTE PTR [esi],0x54
  420ef6:	cmp    eax,0x5de9dea7
  420efb:	lea    eax,[ebx]
  420efd:	jle    0x420ec8
  420eff:	retf   
  420f00:	stos   DWORD PTR es:[edi],eax
  420f01:	sahf   
  420f02:	add    BYTE PTR [edx+0x2da292ed],ch
  420f08:	dec    esi
  420f09:	icebp  
  420f0a:	sub    BYTE PTR [edx+0x7de2bd2f],0xa1
  420f11:	call   0x5510:0x8e16d884
  420f18:	jecxz  0x420ed7
  420f1a:	sbb    eax,DWORD PTR [edi+0x8e8fb65]
  420f20:	and    ch,cl
  420f22:	push   eax
  420f23:	mov    dl,BYTE PTR [ebp-0x654b8e7a]
  420f29:	stos   BYTE PTR es:[edi],al
  420f2a:	or     eax,0x1132a431
  420f2f:	sbb    al,0xfb
  420f31:	jmp    0xa684ebd8
  420f36:	jl     0x420f2a
  420f38:	push   es
  420f39:	in     al,0xcf
  420f3b:	push   ss
  420f3c:	adc    al,0x9c
  420f3e:	fcomp  DWORD PTR [ebx-0x73581f69]
  420f44:	cmp    edx,0xd351ec7
  420f4a:	cmp    BYTE PTR [ebx+0x6d875ad4],0xa4
  420f51:	pop    esi
  420f52:	inc    edi
  420f53:	test   eax,0x8f0a7b90
  420f58:	call   DWORD PTR [eax+0x670d2888]
  420f5e:	fbld   TBYTE PTR [edi]
  420f60:	in     al,0xf8
  420f62:	gs inc ecx
  420f64:	push   0xffffff9c
  420f66:	sbb    eax,0xbdecc5db
  420f6b:	xchg   edx,eax
  420f6c:	push   esp
  420f6d:	ret    
  420f6e:	jle    0x420fd1
  420f70:	cmp    ah,BYTE PTR [esi+0x3c]
  420f73:	pop    ebx
  420f74:	imul   ebx,DWORD PTR [esi+ecx*1+0x73318546],0x36
  420f7c:	mov    bh,0xc7
  420f7e:	pop    ebp
  420f7f:	ins    BYTE PTR es:[edi],dx
  420f80:	das    
  420f81:	dec    ebx
  420f82:	inc    edi
  420f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f84:	popa   
  420f85:	fsubr  DWORD PTR [edx+ecx*1]
  420f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f89:	jmp    0x4f86:0x446bcd54
  420f90:	aaa    
  420f91:	push   esp
  420f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f93:	xlat   BYTE PTR ds:[ebx]
  420f94:	ret    0xac28
  420f97:	pop    ecx
  420f98:	push   esi
  420f99:	sbb    esi,DWORD PTR [eax-0x63]
  420f9c:	sub    bl,BYTE PTR [edx-0x5]
  420f9f:	push   0x52
  420fa1:	sub    BYTE PTR [edx+0x5],dl
  420fa4:	push   ecx
  420fa5:	and    eax,0xec44be2e
  420faa:	mov    bh,0x4a
  420fac:	test   edi,esi
  420fae:	scas   eax,DWORD PTR es:[edi]
  420faf:	arpl   WORD PTR [edi-0xa],di
  420fb2:	pop    ds
  420fb3:	or     eax,0x5f54b097
  420fb8:	pop    ebx
  420fb9:	jmp    0x29df:0xad0d7931
  420fc0:	imul   ebx,esp,0x15ab91c0
  420fc6:	cmp    ecx,ebp
  420fc8:	aam    0xc2
  420fca:	push   esi
  420fcb:	in     al,0xd4
  420fcd:	aaa    
  420fce:	jge    0x420f71
  420fd0:	and    al,0x93
  420fd2:	dec    edx
  420fd3:	mov    ebx,0x24ec66c5
  420fd8:	mov    ecx,edi
  420fda:	cmp    bl,BYTE PTR [ebx+0x55]
  420fdd:	mov    ah,0x75
  420fdf:	xor    ebp,DWORD PTR [ecx+0x3d]
  420fe2:	push   es
  420fe3:	cli    
  420fe4:	(bad)  [edx+0x50]
  420fe7:	dec    edx
  420fe8:	ss shl DWORD PTR ss:[ebx+0x4b],1
  420fed:	add    esi,DWORD PTR [eax+0x353650ec]
  420ff3:	fwait
  420ff4:	xchg   ebx,eax
  420ff5:	pop    esp
  420ff6:	cmp    DWORD PTR [edx-0x19361ab7],0xffffffee
  420ffd:	call   0x6827e33e
  421002:	addr16 aad 0x7
  421005:	xlat   BYTE PTR ds:[ebx]
  421006:	lds    edx,FWORD PTR [esi+0x76]
  421009:	imul   bl
  42100b:	fmul   DWORD PTR [ebp+0x47]
  42100e:	cmc    
  42100f:	nop
  421010:	or     DWORD PTR [eax+eiz*1-0x47b5940],edi
  421017:	mov    ebx,0x3523bac4
  42101c:	nop
  42101d:	fnstsw WORD PTR [ecx-0x1f75cc0c]
  421023:	add    edx,DWORD PTR [edx+0x6e]
  421026:	mov    ah,bh
  421028:	imul   ecx,ecx,0x3c
  42102b:	imul   eax,DWORD PTR [edx],0x47
  42102e:	and    DWORD PTR [ebx-0x186be2c8],0xed4d148d
  421038:	cdq    
  421039:	mov    ds:0xd1af42e4,eax
  42103e:	cmp    ebp,eax
  421040:	arpl   WORD PTR [edi+0x7c],cx
  421043:	pop    ds
  421044:	pop    ecx
  421045:	xchg   esp,eax
  421046:	sub    eax,0x3042a50d
  42104b:	sub    al,0xa2
  42104d:	test   al,0x8b
  42104f:	out    dx,al
  421050:	mov    edi,DWORD PTR [eax-0xbeb84ca]
  421056:	jl     0x421087
  421058:	xor    BYTE PTR [ebx-0x43],bl
  42105b:	xchg   ebx,eax
  42105c:	call   DWORD PTR [ecx+0x58]
  42105f:	mov    bl,0xfa
  421061:	mov    ebx,0xe49a592a
  421066:	xchg   edx,eax
  421067:	test   eax,0x919c1b64
  42106c:	ds ds (bad) 
  42106f:	std    
  421070:	add    eax,0x16d953fb
  421075:	sti    
  421076:	ret    
  421077:	rcl    cl,cl
  421079:	mov    BYTE PTR ds:0xaf1dc061,ch
  421080:	mov    al,ds:0x578a72b0
  421085:	stos   DWORD PTR es:[edi],eax
  421086:	adc    al,bl
  421088:	xor    BYTE PTR [edi],dl
  42108a:	jle    0x421048
  42108c:	pop    es
  42108d:	dec    ebx
  42108e:	pop    ecx
  42108f:	jg     0x4210b3
  421091:	xchg   ebx,eax
  421092:	jle    0x4210e3
  421094:	int    0x73
  421096:	cs in  eax,dx
  421098:	popf   
  421099:	scas   eax,DWORD PTR es:[edi]
  42109a:	cdq    
  42109b:	and    eax,0x4f2f7961
  4210a0:	push   edi
  4210a1:	jmp    0x29ee:0xd0057666
  4210a8:	ret    0xde03
  4210ab:	xchg   edx,eax
  4210ac:	int3   
  4210ad:	cmp    BYTE PTR [edx-0x7b],dl
  4210b0:	push   eax
  4210b1:	add    al,dl
  4210b3:	mov    eax,ds:0x9a70fde3
  4210b8:	xor    ah,BYTE PTR [ebx-0x6a815348]
  4210be:	xchg   esp,eax
  4210bf:	pop    edx
  4210c0:	jmp    0x4b7e:0x777d345d
  4210c7:	xchg   edx,eax
  4210c8:	cmp    esi,esi
  4210ca:	mov    dh,0xb6
  4210cc:	sub    BYTE PTR [ecx],dh
  4210ce:	das    
  4210cf:	push   edi
  4210d0:	fadd   DWORD PTR ds:0x66cbaf7f
  4210d6:	push   esi
  4210d7:	shr    DWORD PTR [ecx+0x35e64397],0x13
  4210de:	mov    al,0xb1
  4210e0:	sbb    BYTE PTR [ebp+0x27],bh
  4210e3:	cmp    BYTE PTR [ecx+0x3f],0x70
  4210e7:	push   esp
  4210e8:	jne    0x4210ac
  4210ea:	mov    ebp,0x1939449c
  4210ef:	fwait
  4210f0:	jbe    0x421088
  4210f2:	and    BYTE PTR ds:0x23aa6b7b,bh
  4210f8:	js     0x4210a8
  4210fa:	cmp    dh,BYTE PTR [esp]
  4210fd:	(bad)  
  4210fe:	aaa    
  4210ff:	jnp    0x4210c0
  421101:	(bad)  [esi+0x35]
  421104:	enter  0xe340,0x7c
  421108:	mov    cs,WORD PTR [ecx]
  42110a:	mov    DWORD PTR [ebx],eax
  42110c:	fcom   DWORD PTR [ebx-0xe]
  42110f:	cwde   
  421110:	fistp  DWORD PTR [edi]
  421112:	mov    eax,ds:0xd3a952be
  421117:	adc    BYTE PTR [ebx],bh
  421119:	cmp    bl,BYTE PTR [ebx]
  42111b:	add    DWORD PTR [ecx+edx*8-0x7b7be42c],ebx
  421122:	mov    bl,0xc0
  421124:	aaa    
  421125:	add    edi,ecx
  421127:	out    dx,al
  421128:	inc    ebp
  421129:	js     0x4210dc
  42112b:	xor    DWORD PTR [edx-0x48],edx
  42112e:	out    0xcc,al
  421130:	sti    
  421131:	aam    0x5a
  421133:	(bad)  
  421134:	jmp    0x1532:0xd8631bd8
  42113b:	ja     0x4210f3
  42113d:	in     al,0x6a
  42113f:	out    dx,al
  421140:	pop    ecx
  421141:	cmp    al,0x33
  421143:	iret   
  421144:	add    BYTE PTR ds:0x9d69aa43,bh
  42114a:	in     eax,0x4
  42114c:	adc    ebp,0x17
  42114f:	inc    ecx
  421150:	pop    es
  421151:	or     DWORD PTR [edx+0x55796d8c],0xfcae536d
  42115b:	repnz xchg esi,eax
  42115d:	cmp    al,0x7b
  42115f:	adc    cl,BYTE PTR [eax+0x53]
  421162:	loope  0x421166
  421164:	jg     0x4211bd
  421166:	pop    es
  421167:	sahf   
  421168:	sub    BYTE PTR [edx-0x48f80b50],al
  42116e:	stos   BYTE PTR es:[edi],al
  42116f:	and    esp,esi
  421171:	fsin   
  421173:	jbe    0x42110c
  421175:	or     DWORD PTR [ecx],0xb402ec55
  42117b:	bound  edi,QWORD PTR [edx]
  42117d:	ss cmp dl,ah
  421180:	in     eax,0x58
  421182:	les    ebx,FWORD PTR [edi-0x1a6bad3b]
  421188:	scas   al,BYTE PTR es:[edi]
  421189:	leave  
  42118a:	mov    edx,0x23ee3ed9
  42118f:	inc    eax
  421190:	jle    0x4211fd
  421192:	repnz mov ebx,DWORD PTR [esi-0x4c]
  421196:	cld    
  421197:	(bad)  
  421199:	ja     0x421174
  42119b:	leave  
  42119c:	adc    al,0x6e
  42119e:	and    eax,0x81c3edea
  4211a3:	dec    ecx
  4211a4:	xchg   edx,eax
  4211a5:	cwde   
  4211a6:	cwde   
  4211a7:	xor    al,0x31
  4211a9:	(bad)  
  4211aa:	rol    BYTE PTR [ebp+0x5f3b7b31],1
  4211b0:	pop    es
  4211b1:	xchg   ebp,eax
  4211b2:	js     0x421151
  4211b4:	inc    ecx
  4211b5:	lods   al,BYTE PTR ds:[esi]
  4211b6:	stc    
  4211b7:	loop   0x42119d
  4211b9:	mov    edi,edx
  4211bb:	push   esp
  4211bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bd:	jmp    0xb8ecdfa5
  4211c2:	pop    ds
  4211c3:	mov    eax,0xc756fcee
  4211c8:	(bad)  
  4211c9:	cmp    al,BYTE PTR [eax-0x52bc63e4]
  4211cf:	fdivrp st(2),st
  4211d1:	push   ebp
  4211d2:	les    esi,FWORD PTR [ebx]
  4211d4:	ja     0x4211d5
  4211d6:	pop    eax
  4211d7:	adc    DWORD PTR [esp+esi*1+0x5c],eax
  4211db:	mov    al,0x11
  4211dd:	shr    BYTE PTR [edi+edi*4-0xd43df9d],1
  4211e4:	mov    ah,0x20
  4211e6:	cwde   
  4211e7:	dec    edi
  4211e8:	sbb    al,BYTE PTR gs:[edi-0x7db60013]
  4211ef:	push   ebp
  4211f0:	aaa    
  4211f1:	mov    esp,0x61f443fd
  4211f6:	fsubr  QWORD PTR [edx]
  4211f8:	mov    cs,WORD PTR [esi]
  4211fa:	add    eax,0xbada0945
  4211ff:	addr16 xor eax,0x1a5c2af4
  421205:	enter  0xe38a,0x8d
  421209:	fwait
  42120a:	and    eax,0xc13d0ff1
  42120f:	jl     0x421276
  421211:	les    esi,FWORD PTR fs:[ebx]
  421214:	mov    ds:0x8c75ecb7,al
  421219:	add    ebp,DWORD PTR [eax+0x5b6a973f]
  42121f:	mov    ecx,0x62c7dc75
  421224:	xor    al,0xde
  421226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421227:	pop    edi
  421228:	xchg   edi,eax
  421229:	and    bl,bh
  42122b:	into   
  42122c:	xchg   DWORD PTR [edx],ecx
  42122e:	shr    BYTE PTR [esi],cl
  421230:	cmp    bh,BYTE PTR [edx-0x5d]
  421233:	or     al,0x67
  421235:	fs repnz ds addr16 pop eax
  42123a:	lods   eax,DWORD PTR ds:[esi]
  42123b:	outs   dx,DWORD PTR ds:[esi]
  42123c:	mov    ebx,0x6e31d58f
  421241:	sti    
  421242:	leave  
  421243:	fsub   DWORD PTR gs:[ebx-0x3439336b]
  42124a:	sti    
  42124b:	jge    0x421253
  42124d:	add    ch,ah
  42124f:	inc    esp
  421250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421251:	mov    eax,0xa475a6f5
  421256:	(bad)  
  421258:	adc    edi,DWORD PTR [edi-0x6f]
  42125b:	cmp    eax,0xf74bd86
  421260:	in     al,0x6f
  421262:	sub    ch,ch
  421264:	mov    al,ds:0x947a4c49
  421269:	pushf  
  42126a:	or     BYTE PTR [edx+0x4ac51f40],ch
  421270:	pop    ds
  421271:	add    bh,ah
  421273:	bound  ecx,QWORD PTR es:[edx]
  421276:	xchg   esp,eax
  421277:	mov    esi,0xc6f9414
  42127c:	xchg   esp,eax
  42127d:	xor    al,0x1b
  42127f:	inc    esp
  421280:	int3   
  421281:	shr    DWORD PTR [ecx+0x3c38715f],1
  421287:	cmp    eax,0xebdf4c7c
  42128c:	rcl    BYTE PTR [eax-0xf26c8cf],cl
  421292:	cwde   
  421293:	stos   BYTE PTR es:[edi],al
  421294:	ret    
  421295:	mov    esp,0x326faaea
  42129a:	mov    ch,0xd3
  42129c:	(bad)  
  42129d:	mov    ds:0x932e26af,al
  4212a2:	xchg   esi,eax
  4212a3:	mov    bh,0x56
  4212a5:	out    dx,eax
  4212a6:	loopne 0x421262
  4212a8:	out    0x87,al
  4212aa:	lock inc esi
  4212ac:	rol    BYTE PTR [eax+edx*4-0x2d],1
  4212b0:	and    al,0xdd
  4212b2:	enter  0xfb4,0x97
  4212b6:	sbb    BYTE PTR [edi],dh
  4212b8:	out    0xf2,eax
  4212ba:	neg    dh
  4212bc:	in     al,dx
  4212bd:	xchg   DWORD PTR [ebp+0x70490c1c],ebp
  4212c3:	xchg   edx,eax
  4212c4:	lds    eax,FWORD PTR [eax+ebx*8]
  4212c7:	hlt    
  4212c8:	adc    cl,BYTE PTR [ecx+0xa]
  4212cb:	call   DWORD PTR [ecx]
  4212cd:	mov    fs,WORD PTR [esi+0x141aaf4e]
  4212d3:	(bad)  
  4212d4:	jl     0x4212f7
  4212d6:	iret   
  4212d7:	pop    ebp
  4212d8:	mov    dl,ah
  4212da:	sbb    ah,dl
  4212dc:	push   eax
  4212dd:	mov    ecx,ebx
  4212df:	push   DWORD PTR [eax]
  4212e1:	adc    al,0xae
  4212e3:	xchg   BYTE PTR [eax-0x1e],cl
  4212e6:	lock loopne 0x421318
  4212e9:	add    DWORD PTR [ebx],edx
  4212eb:	sub    cl,BYTE PTR [edi+0x6ec1d60a]
  4212f1:	outs   dx,BYTE PTR ds:[esi]
  4212f2:	xchg   edi,eax
  4212f3:	pushf  
  4212f4:	js     0x42127b
  4212f6:	xchg   esp,eax
  4212f7:	aas    
  4212f8:	dec    edi
  4212f9:	lods   al,BYTE PTR ds:[esi]
  4212fa:	ret    
  4212fb:	mov    al,ds:0xbeaa7691
  421300:	fst    st(0)
  421302:	loope  0x42130a
  421304:	int    0x1c
  421306:	ss imul ebx,ecx,0x64
  42130a:	jno    0x421295
  42130c:	and    al,0x7a
  42130e:	cmp    DWORD PTR [edi+0x7b2518a0],ecx
  421314:	pop    es
  421315:	fcmovu st,st(2)
  421317:	sbb    bl,dh
  421319:	cmp    eax,0x57e74dae
  42131e:	push   esi
  42131f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421320:	(bad)  
  421322:	div    edi
  421324:	ret    
  421325:	mov    ds:0x16f46dde,eax
  42132a:	mov    ?,WORD PTR [edx-0x3e]
  42132d:	push   0xffffffb2
  42132f:	cmp    al,0x7c
  421331:	add    DWORD PTR [edx],edi
  421333:	loop   0x42133c
  421335:	dec    ecx
  421336:	das    
  421337:	cmp    al,bh
  421339:	mov    eax,0x6334c911
  42133e:	sbb    al,0x95
  421340:	pop    esi
  421341:	xor    al,0x43
  421343:	call   0x1a00:0xa3a8640d
  42134a:	sbb    BYTE PTR [ecx],dh
  42134c:	jns    0x4212e3
  42134e:	out    dx,al
  42134f:	dec    esp
  421350:	in     al,0x3a
  421352:	lods   eax,DWORD PTR ds:[esi]
  421353:	sub    edx,edx
  421355:	inc    edx
  421356:	push   edi
  421357:	adc    DWORD PTR [eax],ebx
  421359:	std    
  42135a:	lahf   
  42135b:	pop    ss
  42135c:	fld    TBYTE PTR [edi]
  42135e:	mov    ch,0x78
  421360:	pop    ebp
  421361:	loope  0x421339
  421363:	cmp    DWORD PTR [ebx],edi
  421365:	bound  edi,QWORD PTR ds:0x3654011c
  42136b:	and    BYTE PTR ds:[ecx-0x68],0x4a
  421370:	fadd   st(0),st
  421372:	fld    st(4)
  421374:	dec    esi
  421375:	jecxz  0x4213c1
  421377:	dec    esp
  421378:	sbb    DWORD PTR [ecx+0x7a],eax
  42137b:	leave  
  42137c:	jne    0x421364
  42137e:	outs   dx,DWORD PTR ds:[esi]
  42137f:	jbe    0x4213e6
  421381:	mov    dh,0x6
  421383:	inc    edx
  421384:	loopne 0x4213fa
  421386:	xchg   ecx,eax
  421387:	lods   al,BYTE PTR ds:[esi]
  421388:	inc    DWORD PTR [edx+0x24]
  42138b:	sub    eax,0x223377d7
  421390:	cdq    
  421391:	cmp    ch,BYTE PTR [edx+0x6e4d3fb3]
  421397:	mov    WORD PTR [edi+0x47],?
  42139a:	bnd ret 
  42139c:	mov    ecx,0x725b25f4
  4213a1:	or     eax,edi
  4213a3:	cmc    
  4213a4:	dec    eax
  4213a5:	sbb    eax,0xb7d18126
  4213aa:	mov    ds:0xb23e280a,al
  4213af:	xchg   edi,eax
  4213b0:	push   ebp
  4213b1:	pop    edx
  4213b2:	push   es
  4213b3:	cmp    eax,DWORD PTR [esi-0x46]
  4213b6:	out    0xe9,eax
  4213b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213b9:	jecxz  0x4213eb
  4213bb:	jg     0x4213ae
  4213bd:	inc    esp
  4213be:	adc    ebx,edi
  4213c0:	loopne 0x421370
  4213c2:	test   eax,0xd2c1ccef
  4213c7:	mov    al,ds:0x91539478
  4213cc:	sbb    BYTE PTR [eax+0x14],dl
  4213cf:	push   0xffffffb2
  4213d1:	and    esp,ebp
  4213d3:	stos   DWORD PTR es:[edi],eax
  4213d4:	mov    eax,0x24fba69a
  4213d9:	and    al,0xfc
  4213db:	xchg   esp,eax
  4213dc:	push   cs
  4213dd:	xor    eax,0x45c87379
  4213e2:	out    0xa6,al
  4213e4:	inc    edi
  4213e5:	or     dl,BYTE PTR [ecx]
  4213e7:	test   al,0x7f
  4213e9:	aam    0x62
  4213eb:	sub    bl,BYTE PTR [edx-0x6e]
  4213ee:	fwait
  4213ef:	pusha  
  4213f0:	outs   dx,DWORD PTR ds:[esi]
  4213f1:	or     DWORD PTR [edi],0xf5fbbe22
  4213f7:	das    
  4213f8:	jbe    0x4213eb
  4213fa:	sbb    eax,0x1e424f6f
  4213ff:	ror    DWORD PTR [ebp*4-0x16b7a16f],1
  421406:	cwde   
  421407:	sub    eax,0x73fa3b86
  42140c:	(bad)  
  42140d:	xlat   BYTE PTR ds:[ebx]
  42140e:	aad    0xfc
  421410:	mov    al,BYTE PTR [edx+0x13930079]
  421416:	adc    al,0xf2
  421418:	rcl    DWORD PTR [edx+0x789e023e],cl
  42141e:	lea    ebx,[edi-0x425b2abd]
  421424:	clc    
  421425:	in     al,0xdd
  421427:	std    
  421428:	mul    bh
  42142a:	ret    0x39f6
  42142d:	pop    ebx
  42142e:	packsswb mm7,QWORD PTR [ebx]
  421431:	jnp    0x4213e7
  421433:	pop    ecx
  421434:	mov    esi,0xfafbb4a8
  421439:	xor    bh,ah
  42143b:	and    DWORD PTR [ebx],eax
  42143d:	xchg   edi,eax
  42143e:	lods   al,BYTE PTR ds:[esi]
  42143f:	lds    esp,FWORD PTR ss:[eax+edi*2-0x49]
  421444:	push   ebp
  421445:	cmp    DWORD PTR [esi-0x6a],esp
  421448:	lds    ebx,FWORD PTR [ecx]
  42144a:	js     0x4214a0
  42144c:	jmp    0x4213f9
  42144e:	jb     0x421496
  421450:	sbb    esp,edi
  421452:	jmp    FWORD PTR [edx-0x73]
  421455:	je     0x421486
  421457:	dec    eax
  421458:	stc    
  421459:	inc    esp
  42145a:	je     0x421462
  42145c:	shl    esp,1
  42145e:	(bad)  
  421460:	sbb    eax,0x4a6fdf1d
  421465:	pop    edx
  421466:	je     0x421430
  421468:	test   DWORD PTR [edx+0x6275785e],edi
  42146e:	jle    0x4214c5
  421470:	dec    edi
  421471:	push   edx
  421472:	shl    DWORD PTR [esi+edx*4+0x3c8ae9b8],0x51
  42147a:	leave  
  42147b:	inc    edi
  42147c:	sub    dh,BYTE PTR [esi+0x68]
  42147f:	adc    BYTE PTR [esi-0x56],dh
  421482:	and    BYTE PTR [edi],cl
  421484:	and    bh,BYTE PTR [esi+eax*8-0x25dc5e29]
  42148b:	push   0x1d3a13e8
  421490:	inc    DWORD PTR [ebx-0x682c7a4e]
  421496:	js     0x4214d6
  421498:	mov    dh,0x9c
  42149a:	out    0x52,al
  42149c:	rcr    BYTE PTR [edi+0x79],1
  42149f:	push   0x4127e446
  4214a4:	mov    edi,0x4ac22b93
  4214a9:	ret    
  4214aa:	clc    
  4214ab:	cli    
  4214ac:	out    0x11,al
  4214ae:	xor    al,BYTE PTR [edi]
  4214b0:	pop    edi
  4214b1:	sub    al,0x47
  4214b3:	ds retf 
  4214b5:	(bad)  
  4214b6:	fiadd  WORD PTR [ebx-0x6ede7d60]
  4214bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214bd:	aam    0xe1
  4214bf:	push   es
  4214c0:	pop    es
  4214c1:	cmp    ecx,DWORD PTR [esi+0xeb71af5]
  4214c7:	sbb    al,0x45
  4214c9:	add    BYTE PTR [ebx],ah
  4214cb:	mov    al,0x33
  4214cd:	imul   ebx,DWORD PTR [edi-0x7dc9b4e3],0x25
  4214d4:	inc    edi
  4214d5:	stos   BYTE PTR es:[edi],al
  4214d6:	inc    eax
  4214d7:	sbb    DWORD PTR [esi],ebp
  4214d9:	retf   
  4214da:	xchg   ecx,eax
  4214db:	mov    esi,0x77b254bd
  4214e0:	pusha  
  4214e1:	inc    ebx
  4214e2:	or     DWORD PTR [esp+eiz*2],ecx
  4214e5:	add    eax,0xfc13bdea
  4214ea:	test   eax,0x8f8bef3c
  4214ef:	leave  
  4214f0:	stos   BYTE PTR es:[edi],al
  4214f1:	ja     0x4214aa
  4214f3:	mov    ecx,0x1c983e02
  4214f8:	push   ecx
  4214f9:	or     DWORD PTR [ebx+edx*1],ebp
  4214fc:	scas   al,BYTE PTR es:[edi]
  4214fd:	rcr    DWORD PTR [ecx],0x6c
  421500:	sbb    BYTE PTR [edx],bl
  421502:	adc    al,0xea
  421504:	(bad)  [eax-0x2ddbbfd6]
  42150a:	adc    al,0x7d
  42150c:	jmp    0x421526
  42150e:	xchg   esp,eax
  42150f:	push   edx
  421510:	add    BYTE PTR [ecx+eiz*2],dl
  421513:	xchg   esi,eax
  421514:	dec    edx
  421515:	punpckldq mm7,DWORD PTR [ebx]
  421518:	sahf   
  421519:	add    al,0x3b
  42151b:	in     eax,0xc5
  42151d:	sbb    al,0xd
  42151f:	mov    eax,eax
  421521:	aad    0x55
  421523:	and    eax,0x30073025
  421528:	sub    ebp,DWORD PTR [edi-0x10]
  42152b:	mov    esi,0x92a1ed28
  421530:	mov    esi,0x17829c80
  421535:	dec    esi
  421536:	out    0x7b,eax
  421538:	mov    eax,0x5178fff0
  42153d:	mov    bh,0x2c
  42153f:	jge    0x4214fe
  421541:	call   0x599f73b4
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x48],0x0
  42155e:	mov    DWORD PTR [ebp-0x70],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x10],0x0
  421573:	mov    DWORD PTR [ebp-0x14],0x0
  42157a:	mov    DWORD PTR [ebp-0x30],0x0
  421581:	mov    DWORD PTR [ebp-0x58],0x0
  421588:	mov    DWORD PTR [ebp-0x54],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x60],0x0
  42159d:	mov    DWORD PTR [ebp-0x50],0x0
  4215a4:	mov    DWORD PTR [ebp-0xc],0x0
  4215ab:	mov    DWORD PTR [ebp-0x6c],0x0
  4215b2:	mov    DWORD PTR [ebp-0x5c],0x0
  4215b9:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x68],0x0
  4215c7:	mov    DWORD PTR [ebp-0x4],0x0
  4215ce:	mov    DWORD PTR [ebp-0x4c],0x0
  4215d5:	mov    eax,ds:0x428140
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428144
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428148
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42814c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428130
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x428134
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428138
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x42813c
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x42813e
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x2c],0x40
  42162c:	push   0x64
  42162e:	push   0x0
  421630:	call   DWORD PTR ds:0x42801c
  421636:	lea    eax,[ebp-0xc]
  421639:	push   eax
  42163a:	lea    ecx,[ebp-0xc]
  42163d:	push   ecx
  42163e:	lea    edx,[ebp-0x14]
  421641:	push   edx
  421642:	call   DWORD PTR ds:0x428004
  421648:	test   eax,eax
  42164a:	je     0x421661
  42164c:	push   0x0
  42164e:	mov    eax,DWORD PTR [ebp-0x6c]
  421651:	push   eax
  421652:	call   DWORD PTR ds:0x428118
  421658:	mov    ecx,DWORD PTR [ebp-0xc]
  42165b:	add    ecx,0x1
  42165e:	mov    DWORD PTR [ebp-0xc],ecx
  421661:	push   0x0
  421663:	push   0x0
  421665:	push   0x0
  421667:	call   DWORD PTR ds:0x428000
  42166d:	mov    BYTE PTR [ebp-0x40],0x56
  421671:	call   DWORD PTR ds:0x428018
  421677:	mov    DWORD PTR [ebp-0x30],eax
  42167a:	mov    BYTE PTR [ebp-0x3e],0x72
  42167e:	movzx  edx,WORD PTR [ebp-0x30]
  421682:	test   edx,edx
  421684:	jne    0x4216ce
  421686:	mov    BYTE PTR [ebp-0x34],0x0
  42168a:	mov    DWORD PTR [ebp-0x14],0xe0d
  421691:	lea    eax,[ebp-0x28]
  421694:	push   eax
  421695:	call   DWORD PTR ds:0x428014
  42169b:	mov    DWORD PTR [ebp-0x60],eax
  42169e:	mov    DWORD PTR [ebp-0x50],0x3a
  4216a5:	lea    ecx,[ebp-0x40]
  4216a8:	push   ecx
  4216a9:	mov    edx,DWORD PTR [ebp-0x60]
  4216ac:	push   edx
  4216ad:	call   DWORD PTR ds:0x428010
  4216b3:	mov    DWORD PTR [ebp-0x44],eax
  4216b6:	mov    DWORD PTR [ebp-0x8],0x1d5868ec
  4216bd:	push   0xa
  4216bf:	call   DWORD PTR ds:0x42811c
  4216c5:	mov    DWORD PTR [ebp-0x68],0x10d757
  4216cc:	jmp    0x4216e3
  4216ce:	mov    BYTE PTR ds:0x445160,0x0
  4216d5:	mov    BYTE PTR ds:0x42bf40,0x0
  4216dc:	mov    BYTE PTR ds:0x442930,0x0
  4216e3:	push   DWORD PTR [ebp-0x2c]
  4216e6:	push   0x1000
  4216eb:	mov    eax,DWORD PTR [ebp-0x14]
  4216ee:	add    eax,0x23
  4216f1:	add    eax,0x23
  4216f4:	push   eax
  4216f5:	xor    eax,eax
  4216f7:	push   eax
  4216f8:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fb:	call   ecx
  4216fd:	mov    edx,eax
  4216ff:	mov    DWORD PTR [ebp-0x4],edx
  421702:	mov    eax,DWORD PTR [ebp-0x68]
  421705:	sub    eax,0xdae0b
  42170a:	mov    DWORD PTR [ebp-0x68],eax
  42170d:	cmp    DWORD PTR [ebp-0x4],0x0
  421711:	jne    0x421724
  421713:	push   0x0
  421715:	push   0x0
  421717:	call   DWORD PTR ds:0x428120
  42171d:	mov    BYTE PTR ds:0x442930,0x0
  421724:	mov    ecx,DWORD PTR [ebp-0x4]
  421727:	add    ecx,DWORD PTR [ebp-0x14]
  42172a:	mov    edx,DWORD PTR [ebp-0x8]
  42172d:	mov    DWORD PTR [ecx],edx
  42172f:	push   DWORD PTR ds:0x428014
  421735:	pop    edx
  421736:	mov    DWORD PTR [ebp-0x70],edx
  421739:	mov    DWORD PTR [ebp-0x30],0x410000
  421740:	call   DWORD PTR ds:0x42800c
  421746:	mov    eax,DWORD PTR [ebp-0x4]
  421749:	add    eax,DWORD PTR [ebp-0x50]
  42174c:	mov    DWORD PTR [ebp-0x5c],eax
  42174f:	mov    ecx,DWORD PTR ds:0x428010
  421755:	mov    DWORD PTR [ebp-0x4c],ecx
  421758:	mov    edx,DWORD PTR [ebp-0x4]
  42175b:	add    edx,DWORD PTR [ebp-0x14]
  42175e:	mov    eax,DWORD PTR [ebp+0x8]
  421761:	mov    DWORD PTR [edx+0x4],eax
  421764:	mov    ecx,DWORD PTR [ebp-0x4]
  421767:	add    ecx,DWORD PTR [ebp-0x14]
  42176a:	mov    DWORD PTR [ebp-0x10],ecx
  42176d:	push   0x0
  42176f:	push   0x1
  421771:	mov    edx,DWORD PTR [ebp-0x60]
  421774:	push   edx
  421775:	call   DWORD PTR ds:0x428030
  42177b:	cmp    DWORD PTR [ebp-0x68],0x0
  42177f:	jbe    0x42179c
  421781:	mov    eax,DWORD PTR [ebp-0x10]
  421784:	push   eax
  421785:	mov    ecx,DWORD PTR [ebp-0x14]
  421788:	push   ecx
  421789:	mov    edx,DWORD PTR [ebp-0x30]
  42178c:	add    edx,DWORD PTR [ebp-0x68]
  42178f:	push   edx
  421790:	mov    eax,DWORD PTR [ebp-0x4]
  421793:	push   eax
  421794:	call   0x411000
  421799:	add    esp,0x10
  42179c:	call   DWORD PTR ds:0x428044
  4217a2:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217a6:	je     0x4217ba
  4217a8:	mov    ecx,DWORD PTR [ebp-0x4c]
  4217ab:	push   ecx
  4217ac:	push   DWORD PTR [ebp-0x70]
  4217af:	mov    esi,DWORD PTR [ebp-0x5c]
  4217b2:	push   edx
  4217b3:	pop    eax
  4217b4:	push   ecx
  4217b5:	nop
  4217b6:	jmp    esi
  4217b8:	jmp    0x4217cd
  4217ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4217bd:	mov    DWORD PTR [ebp-0x18],ecx
  4217c0:	push   0x0
  4217c2:	push   0x83232
  4217c7:	call   DWORD PTR ds:0x42804c
  4217cd:	mov    eax,0x1
  4217d2:	pop    esi
  4217d3:	mov    esp,ebp
  4217d5:	pop    ebp
  4217d6:	ret    
  4217d7:	int3   
  4217d8:	int3   
  4217d9:	int3   
  4217da:	int3   
  4217db:	int3   
  4217dc:	int3   
  4217dd:	int3   
  4217de:	int3   
  4217df:	int3   
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	sub    esp,0x8
  4217e6:	push   esi
  4217e7:	push   0x0
  4217e9:	push   0x1
  4217eb:	push   0x0
  4217ed:	mov    DWORD PTR [ebp-0x4],0x0
  4217f4:	call   DWORD PTR ds:0x428030
  4217fa:	mov    eax,ds:0x428018
  4217ff:	push   0x0
  421801:	mov    DWORD PTR [ebp-0x8],eax
  421804:	call   DWORD PTR ds:0x428028
  42180a:	push   0x0
  42180c:	push   0x4e
  42180e:	push   0x1e
  421810:	push   0x0
  421812:	push   0xffffffff
  421814:	call   DWORD PTR ds:0x428024
  42181a:	mov    esi,DWORD PTR [ebp-0x8]
  42181d:	call   esi
  42181f:	mov    DWORD PTR [ebp-0x4],eax
  421822:	cmp    DWORD PTR [ebp-0x4],0x57
  421826:	jne    0x42183d
  421828:	push   0x5538600
  42182d:	call   0x421550
  421832:	add    esp,0x4
  421835:	push   0x0
  421837:	call   DWORD PTR ds:0x428020
  42183d:	xor    eax,eax
  42183f:	pop    esi
  421840:	mov    esp,ebp
  421842:	pop    ebp
  421843:	ret    
  421844:	nop
  421845:	nop
  421846:	nop
  421847:	nop
  421848:	nop
  421849:	nop
  42184a:	nop
  42184b:	nop
  42184c:	nop
  42184d:	nop
  42184e:	nop
  42184f:	nop
  421850:	sub    esp,0x10
  421853:	push   esi
  421854:	push   0x3
  421856:	push   0x0
  421858:	push   0x18
  42185a:	push   0x0
  42185c:	call   DWORD PTR ds:0x428128
  421862:	push   0x0
  421864:	push   0x0
  421866:	call   DWORD PTR ds:0x428124
  42186c:	lea    eax,[esp+0x4]
  421870:	push   eax
  421871:	call   DWORD PTR ds:0x428038
  421877:	push   0x0
  421879:	call   DWORD PTR ds:0x428034
  42187f:	cmp    WORD PTR [esp+0x4],0x0
  421885:	mov    esi,DWORD PTR ds:0x428048
  42188b:	push   0x0
  42188d:	je     0x4218a0
  42188f:	call   esi
  421891:	push   0x0
  421893:	call   0x4217e0
  421898:	add    esp,0x4
  42189b:	jmp    0x4229d8
  4218a0:	push   0xa
  4218a2:	push   0x0
  4218a4:	push   0xffffffff
  4218a6:	call   0x422a00
  4218ab:	inc    DWORD PTR [edi+0x5d463e81]
  4218b1:	add    DWORD PTR [edx+0x77749c33],0xdb359489
  4218bb:	scas   al,BYTE PTR es:[edi]
  4218bc:	(bad)  
  4218bd:	pop    esi
  4218be:	add    DWORD PTR [edx+0x77749833],0xdbca6bc9
  4218c8:	scas   al,BYTE PTR es:[edi]
  4218c9:	inc    esi
  4218ca:	pop    esi
  4218cb:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  4218d5:	scas   al,BYTE PTR es:[edi]
  4218d6:	inc    esi
  4218d7:	pop    esi
  4218d8:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  4218e2:	scas   al,BYTE PTR es:[edi]
  4218e3:	inc    esi
  4218e4:	pop    esi
  4218e5:	add    DWORD PTR [edx+0x77746033],0x61d56589
  4218ef:	mov    al,ds:0x4f88ea46
  4218f4:	adc    ah,BYTE PTR [eax]
  4218f6:	jne    0x421933
  4218f8:	inc    esp
  4218f9:	dec    edx
  4218fa:	sahf   
  4218fb:	mov    bl,0xc7
  4218fd:	xor    eax,0x5cf0f17e
  421902:	inc    DWORD PTR [esi]
  421904:	push   ss
  421905:	in     al,0x4b
  421907:	test   eax,0x3128c0ba
  42190c:	cmc    
  42190d:	mov    ds:0x554fd51,al
  421912:	cld    
  421913:	add    eax,0x66c0b2ea
  421918:	sbb    cl,dh
  42191a:	rcl    DWORD PTR [ebx],1
  42191c:	cmc    
  42191d:	sbb    edx,DWORD PTR [ebx]
  42191f:	in     al,dx
  421920:	inc    ebp
  421921:	(bad)  
  421922:	(bad)  
  421923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421924:	bound  ebx,QWORD PTR [esi-0x7f]
  421927:	xor    BYTE PTR [ebx],0x98
  42192a:	je     0x4219a3
  42192c:	mov    ?,edx
  42192e:	ss sub ch,0xbe
  421932:	int3   
  421933:	mov    eax,ecx
  421935:	retf   
  421936:	or     bh,BYTE PTR [esi+0x34]
  421939:	jno    0x421934
  42193b:	rol    BYTE PTR [ebx-0x21abb535],0x7a
  421942:	mov    eax,ds:0xb1122c92
  421947:	popa   
  421948:	or     BYTE PTR [ebx],ah
  42194a:	cmp    al,0x4c
  42194c:	push   es
  42194d:	in     al,0xbb
  42194f:	cmp    eax,esi
  421951:	mov    ebp,fs
  421953:	add    DWORD PTR [edi+0x44],0xffffffe2
  421957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421958:	add    BYTE PTR [esi+0x18798813],ah
  42195e:	gs jge 0x421924
  421961:	xchg   ebx,eax
  421962:	pop    eax
  421963:	shl    esp,1
  421965:	(bad)  
  421966:	pop    edi
  421967:	mov    ebx,edx
  421969:	retf   
  42196a:	or     bh,BYTE PTR [esi+0x34]
  42196d:	jno    0x421967
  42196f:	shl    bl,0x57
  421972:	aam    0x54
  421974:	ds pop edx
  421976:	mov    bl,0x92
  421978:	cmp    DWORD PTR [edi-0x416d9ee5],ecx
  42197e:	xchg   ebx,eax
  42197f:	dec    esp
  421980:	push   esi
  421981:	jns    0x421993
  421983:	cmp    eax,eax
  421985:	adc    DWORD PTR [edi-0x7d],edi
  421988:	sub    DWORD PTR [edx],esi
  42198a:	dec    ecx
  42198b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42198c:	push   ds
  42198d:	cmp    ecx,DWORD PTR [esi-0x199f8e78]
  421993:	jge    0x421970
  421995:	add    ch,BYTE PTR [ecx-0x3341124d]
  42199b:	mov    eax,DWORD PTR [edx+0x77749833]
  4219a1:	mov    DWORD PTR [ebx-0x36],ebp
  4219a4:	mov    ebp,ebx
  4219a6:	inc    esi
  4219a7:	pop    esi
  4219a8:	int    0x83
  4219aa:	xor    DWORD PTR [eax+0x24d69498],ebx
  4219b0:	retf   0xaedb
  4219b3:	inc    esi
  4219b4:	pop    esi
  4219b5:	add    DWORD PTR [edx+0x74747833],0xd1cb6088
  4219bf:	scas   al,BYTE PTR es:[edi]
  4219c0:	inc    esi
  4219c1:	mov    dl,0x85
  4219c3:	xor    BYTE PTR [ebx],0x9c
  4219c6:	jb     0x421a3f
  4219c8:	mov    DWORD PTR [ebx-0x36],ebp
  4219cb:	fld    TBYTE PTR [edi-0x7d7ea105]
  4219d1:	and    ebx,DWORD PTR [eax+0x6e897774]
  4219d7:	retf   0xaedb
  4219da:	pop    es
  4219db:	pop    esi
  4219dc:	adc    DWORD PTR [edx+0x75749833],0xdbcf6b89
  4219e6:	scas   eax,DWORD PTR es:[edi]
  4219e7:	inc    esi
  4219e8:	pop    esi
  4219e9:	add    DWORD PTR [edx+0x76749d33],0xdbca6b89
  4219f3:	scas   al,BYTE PTR es:[edi]
  4219f4:	inc    esi
  4219f5:	fimul  WORD PTR [edx+0x749c3382]
  4219fb:	ja     0x421a31
  4219fd:	pop    edx
  4219fe:	iret   
  4219ff:	fld    TBYTE PTR [esi+eax*2+0x3382015e]
  421a06:	mov    BYTE PTR [edi+esi*2-0x67],dh
  421a0a:	imul   ecx,edx,0xffffffdb
  421a0d:	scas   al,BYTE PTR es:[edi]
  421a0e:	push   esi
  421a0f:	pop    esi
  421a10:	adc    DWORD PTR [edx+0x77749833],0xdbda6b89
  421a1a:	scas   al,BYTE PTR es:[edi]
  421a1b:	inc    esi
  421a1c:	pop    esi
  421a1d:	add    DWORD PTR [edx+0x77749833],0xd0a4ef89
  421a27:	scas   al,BYTE PTR es:[edi]
  421a28:	das    
  421a29:	pop    ebp
  421a2a:	add    DWORD PTR [edx+0x777fa833],0xdbca5646
  421a34:	scas   al,BYTE PTR es:[edi]
  421a35:	inc    esi
  421a36:	pop    esi
  421a37:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a41:	scas   al,BYTE PTR es:[edi]
  421a42:	inc    esi
  421a43:	pop    esi
  421a44:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a4e:	scas   al,BYTE PTR es:[edi]
  421a4f:	inc    esi
  421a50:	pop    esi
  421a51:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a5b:	scas   al,BYTE PTR es:[edi]
  421a5c:	inc    esi
  421a5d:	pop    esi
  421a5e:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a68:	scas   al,BYTE PTR es:[edi]
  421a69:	inc    esi
  421a6a:	pop    esi
  421a6b:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a75:	scas   al,BYTE PTR es:[edi]
  421a76:	inc    esi
  421a77:	pop    esi
  421a78:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a82:	scas   al,BYTE PTR es:[edi]
  421a83:	inc    esi
  421a84:	pop    esi
  421a85:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a8f:	scas   al,BYTE PTR es:[edi]
  421a90:	inc    esi
  421a91:	pop    esi
  421a92:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421a9c:	xor    BYTE PTR [edx],0x3b
  421a9f:	stc    
  421aa0:	div    BYTE PTR [ebx]
  421aa2:	cwde   
  421aa3:	je     0x421b1c
  421aa5:	test   eax,0xbedbca60
  421aaa:	inc    esi
  421aab:	pop    esi
  421aac:	cmp    DWORD PTR [eax+0x73749837],0x9e9a6b89
  421ab6:	in     eax,dx
  421ab7:	je     0x421ac3
  421ab9:	into   
  421aba:	xor    BYTE PTR [ebx],0x98
  421abd:	je     0x421b36
  421abf:	mov    DWORD PTR [ebx-0x36],ecx
  421ac2:	fisttp DWORD PTR [esi+0x68]
  421ac5:	sub    al,0xf2
  421ac7:	lock push eax
  421ac9:	cwde   
  421aca:	je     0x421b43
  421acc:	mov    DWORD PTR [ebx],edi
  421ace:	retf   0xaedb
  421ad1:	jbe    0x421b28
  421ad3:	add    DWORD PTR [edx+0x77749863],0xdbca6fb7
  421add:	scas   al,BYTE PTR es:[edi]
  421ade:	inc    esi
  421adf:	pop    esi
  421ae0:	add    DWORD PTR [edx+0x77749833],0xdbea6b89
  421aea:	scas   al,BYTE PTR es:[edi]
  421aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aec:	pop    esi
  421aed:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421af7:	scas   al,BYTE PTR es:[edi]
  421af8:	inc    esi
  421af9:	pop    esi
  421afa:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b04:	scas   al,BYTE PTR es:[edi]
  421b05:	inc    esi
  421b06:	pop    esi
  421b07:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b11:	scas   al,BYTE PTR es:[edi]
  421b12:	inc    esi
  421b13:	pop    esi
  421b14:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b1e:	scas   al,BYTE PTR es:[edi]
  421b1f:	inc    esi
  421b20:	pop    esi
  421b21:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b2b:	scas   al,BYTE PTR es:[edi]
  421b2c:	inc    esi
  421b2d:	pop    esi
  421b2e:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b38:	scas   al,BYTE PTR es:[edi]
  421b39:	inc    esi
  421b3a:	pop    esi
  421b3b:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b45:	scas   al,BYTE PTR es:[edi]
  421b46:	inc    esi
  421b47:	pop    esi
  421b48:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b52:	scas   al,BYTE PTR es:[edi]
  421b53:	inc    esi
  421b54:	pop    esi
  421b55:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b5f:	scas   al,BYTE PTR es:[edi]
  421b60:	inc    esi
  421b61:	pop    esi
  421b62:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b6c:	scas   al,BYTE PTR es:[edi]
  421b6d:	inc    esi
  421b6e:	pop    esi
  421b6f:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b79:	scas   al,BYTE PTR es:[edi]
  421b7a:	inc    esi
  421b7b:	pop    esi
  421b7c:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b86:	scas   al,BYTE PTR es:[edi]
  421b87:	inc    esi
  421b88:	pop    esi
  421b89:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421b93:	scas   al,BYTE PTR es:[edi]
  421b94:	inc    esi
  421b95:	pop    esi
  421b96:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421ba0:	scas   al,BYTE PTR es:[edi]
  421ba1:	inc    esi
  421ba2:	pop    esi
  421ba3:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421bad:	scas   al,BYTE PTR es:[edi]
  421bae:	inc    esi
  421baf:	pop    esi
  421bb0:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421bba:	scas   al,BYTE PTR es:[edi]
  421bbb:	inc    esi
  421bbc:	pop    esi
  421bbd:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421bc7:	scas   al,BYTE PTR es:[edi]
  421bc8:	inc    esi
  421bc9:	pop    esi
  421bca:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421bd4:	scas   al,BYTE PTR es:[edi]
  421bd5:	inc    esi
  421bd6:	pop    esi
  421bd7:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421be1:	scas   al,BYTE PTR es:[edi]
  421be2:	inc    esi
  421be3:	pop    esi
  421be4:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421bee:	scas   al,BYTE PTR es:[edi]
  421bef:	inc    esi
  421bf0:	pop    esi
  421bf1:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421bfb:	scas   al,BYTE PTR es:[edi]
  421bfc:	inc    esi
  421bfd:	pop    esi
  421bfe:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c08:	scas   al,BYTE PTR es:[edi]
  421c09:	inc    esi
  421c0a:	pop    esi
  421c0b:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c15:	scas   al,BYTE PTR es:[edi]
  421c16:	inc    esi
  421c17:	pop    esi
  421c18:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c22:	scas   al,BYTE PTR es:[edi]
  421c23:	inc    esi
  421c24:	pop    esi
  421c25:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c2f:	scas   al,BYTE PTR es:[edi]
  421c30:	inc    esi
  421c31:	pop    esi
  421c32:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c3c:	scas   al,BYTE PTR es:[edi]
  421c3d:	inc    esi
  421c3e:	pop    esi
  421c3f:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c49:	scas   al,BYTE PTR es:[edi]
  421c4a:	inc    esi
  421c4b:	pop    esi
  421c4c:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c56:	scas   al,BYTE PTR es:[edi]
  421c57:	inc    esi
  421c58:	pop    esi
  421c59:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c63:	scas   al,BYTE PTR es:[edi]
  421c64:	inc    esi
  421c65:	pop    esi
  421c66:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c70:	scas   al,BYTE PTR es:[edi]
  421c71:	inc    esi
  421c72:	pop    esi
  421c73:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c7d:	scas   al,BYTE PTR es:[edi]
  421c7e:	inc    esi
  421c7f:	pop    esi
  421c80:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c8a:	scas   al,BYTE PTR es:[edi]
  421c8b:	inc    esi
  421c8c:	pop    esi
  421c8d:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421c97:	scas   al,BYTE PTR es:[edi]
  421c98:	inc    esi
  421c99:	pop    esi
  421c9a:	add    DWORD PTR [edx+0x77749833],0xdbca6b89
  421ca4:	scas   al,BYTE PTR es:[edi]
  421ca5:	inc    esi
  421ca6:	pop    esi
  421ca7:	add    DWORD PTR [edx+0x30749833],0xf4ca6167
  421cb1:	scas   al,BYTE PTR es:[edi]
  421cb2:	inc    esi
  421cb3:	dec    esi
  421cb4:	add    DWORD PTR [edx+0x6ae3a19],0x45e794ef
  421cbe:	sub    DWORD PTR [esi],edx
  421cc0:	mov    bl,0xb7
  421cc2:	push   0x20
  421cc4:	sub    al,0xe1
  421cc6:	adc    eax,edi
  421cc8:	out    dx,eax
  421cc9:	nop
  421cca:	enter  0xf11f,0x48
  421cce:	in     al,dx
  421ccf:	mov    cx,0xb219
  421cd3:	pop    ecx
  421cd4:	jmp    0x421cd1
  421cd6:	cmc    
  421cd7:	loop   0x421c76
  421cd9:	or     edi,ebp
  421cdb:	xchg   esi,eax
  421cdc:	mov    al,ds:0xffd3bf33
  421ce1:	fdivr  QWORD PTR [edx]
  421ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ce4:	jb     0x421c82
  421ce6:	jnp    0x421c6b
  421ce8:	xchg   ebp,eax
  421ce9:	xor    edx,DWORD PTR [ebx-0x78]
  421cec:	das    
  421ced:	push   ecx
  421cee:	cwde   
  421cef:	test   BYTE PTR [ebx-0x1b5e3d86],ah
  421cf5:	lods   eax,DWORD PTR ds:[esi]
  421cf6:	inc    ebp
  421cf7:	mov    esi,0xf9418acc
  421cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cfd:	push   ebx
  421cfe:	(bad)  [esi]
  421d00:	(bad)  
  421d01:	pop    edx
  421d02:	push   ss
  421d03:	sti    
  421d04:	or     al,0x84
  421d06:	add    DWORD PTR [edx+0x38],ebp
  421d09:	lds    ebx,FWORD PTR ds:0x14017640
  421d0f:	(bad)  
  421d10:	retf   
  421d11:	ds hlt 
  421d13:	into   
  421d14:	std    
  421d15:	test   BYTE PTR [ebx],ah
  421d17:	xor    al,0x3d
  421d19:	pop    ecx
  421d1a:	jnp    0x421d70
  421d1c:	in     al,0xd4
  421d1e:	test   DWORD PTR [ebx-0x16],ebx
  421d21:	mov    bh,0xe9
  421d23:	mov    ebp,0xa44a9881
  421d28:	mov    bh,0x51
  421d2a:	leave  
  421d2b:	mov    al,0x40
  421d2d:	pop    edi
  421d2e:	xlat   BYTE PTR ds:[ebx]
  421d2f:	lea    eax,[eax-0x5b15babf]
  421d35:	mov    ebx,esi
  421d37:	mov    eax,ds:0xa7a7b534
  421d3c:	test   al,0xe
  421d3e:	nop
  421d3f:	xchg   ebx,eax
  421d40:	nop
  421d41:	pop    ss
  421d42:	fisttp QWORD PTR [ebp-0x3f]
  421d45:	out    0x73,eax
  421d47:	jbe    0x421ce8
  421d49:	push   ebx
  421d4a:	mov    eax,ds:0x60838b08
  421d4f:	adc    BYTE PTR [edi],dh
  421d51:	mov    ecx,0xc8b77c4e
  421d56:	or     al,0x3b
  421d58:	push   esp
  421d59:	mov    eax,0x76ef6d9c
  421d5e:	ins    DWORD PTR es:[edi],dx
  421d5f:	into   
  421d60:	popa   
  421d61:	xchg   ebx,eax
  421d62:	test   BYTE PTR [edi],al
  421d64:	mov    al,ds:0x2c83b390
  421d69:	pop    edx
  421d6a:	jnp    0x421d78
  421d6c:	je     0x421d8c
  421d6e:	in     al,dx
  421d6f:	dec    ebp
  421d70:	pop    ss
  421d71:	popf   
  421d72:	ret    
  421d73:	pop    ebp
  421d74:	pop    es
  421d75:	dec    edi
  421d76:	mov    ecx,DWORD PTR [edi+0x21]
  421d79:	xchg   esp,eax
  421d7a:	dec    eax
  421d7b:	mov    al,ds:0x10492c69
  421d80:	add    esi,DWORD PTR [ebp+0x7a]
  421d83:	push   0xffffffb3
  421d85:	outs   dx,BYTE PTR ds:[esi]
  421d86:	push   eax
  421d87:	sub    BYTE PTR [ebx],bl
  421d89:	imul   si,WORD PTR [esi-0x4f],0xff8f
  421d8e:	jp     0x421da4
  421d90:	iret   
  421d91:	lods   al,BYTE PTR ds:[esi]
  421d92:	adc    cl,BYTE PTR [edx]
  421d94:	retf   0xf3e3
  421d97:	inc    edx
  421d98:	mov    eax,0x6de9006c
  421d9d:	add    eax,0x6a814612
  421da2:	fadd   st(5),st
  421da4:	push   edx
  421da5:	xlat   BYTE PTR ds:[ebx]
  421da6:	leave  
  421da7:	or     ch,0x15
  421daa:	in     eax,0x87
  421dac:	add    edi,DWORD PTR [ebp+0x7]
  421daf:	in     eax,dx
  421db0:	adc    al,0x97
  421db2:	push   ss
  421db3:	leave  
  421db4:	push   esp
  421db5:	test   ebp,ebp
  421db7:	xchg   ecx,eax
  421db8:	les    ebx,FWORD PTR [eax+0x1]
  421dbb:	(bad)  
  421dbc:	xor    bh,BYTE PTR [eax]
  421dbe:	cs inc eax
  421dc0:	pop    ebp
  421dc1:	fstp   QWORD PTR [eax-0x39]
  421dc4:	mov    DWORD PTR [edi],ebx
  421dc6:	test   al,0xa2
  421dc8:	or     DWORD PTR [eax+0x5d],ebx
  421dcb:	fldcw  WORD PTR [esi]
  421dcd:	icebp  
  421dce:	inc    ebp
  421dcf:	inc    ecx
  421dd0:	push   ecx
  421dd1:	int    0x6f
  421dd3:	xchg   ecx,eax
  421dd4:	mov    ds,WORD PTR [eax+0x76]
  421dd7:	mov    edi,DWORD PTR [edi-0xa]
  421dda:	scas   al,BYTE PTR es:[edi]
  421ddb:	or     BYTE PTR [edi+esi*4+0x3a],cl
  421ddf:	cwde   
  421de0:	cmp    ebx,esi
  421de2:	popa   
  421de3:	xor    DWORD PTR ds:0xd12f5271,esp
  421de9:	push   ecx
  421dea:	push   0x28
  421dec:	mov    cl,0xf7
  421dee:	fnstcw WORD PTR [ecx+0x2d]
  421df1:	cmp    BYTE PTR [edi-0x58],0x1c
  421df5:	fsub   st(6),st
  421df7:	adc    al,0xf7
  421df9:	jmp    0x48d65b70
  421dfe:	(bad)  
  421dff:	int3   
  421e00:	(bad)  
  421e01:	and    eax,0x15903b1f
  421e06:	jb     0x421e87
  421e08:	dec    ebp
  421e09:	ds test ecx,ecx
  421e0c:	jle    0x421e50
  421e0e:	js     0x421e2a
  421e10:	retf   0xb3d0
  421e13:	and    dh,BYTE PTR [ebx+0x5]
  421e16:	jge    0x421dac
  421e18:	iret   
  421e19:	fninit 
  421e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e1c:	push   0x3355aa35
  421e21:	fnstsw WORD PTR [esi]
  421e23:	add    al,0x67
  421e25:	xchg   BYTE PTR [esp+esi*8],bl
  421e28:	jno    0x421e67
  421e2a:	pop    edi
  421e2b:	xchg   DWORD PTR [esi-0x1],edi
  421e2e:	mov    dh,0x2c
  421e30:	(bad)  
  421e31:	out    dx,al
  421e32:	dec    ebx
  421e33:	or     DWORD PTR [eax],0xffffffe6
  421e36:	cmp    al,BYTE PTR [esp+ecx*1]
  421e39:	cmp    bh,BYTE PTR [ecx+esi*8-0x52199ad4]
  421e40:	les    esi,FWORD PTR [ecx+0x146af2b4]
  421e46:	retf   0x5b3e
  421e49:	push   esp
  421e4a:	pop    ds
  421e4b:	mov    ebp,0x33dcef87
  421e50:	(bad)  
  421e51:	dec    ebp
  421e52:	xchg   ebx,esp
  421e54:	push   ss
  421e55:	retf   0x304f
  421e58:	inc    edx
  421e59:	repnz outs dx,BYTE PTR ds:[esi]
  421e5b:	rcr    edi,1
  421e5d:	ins    BYTE PTR es:[edi],dx
  421e5e:	mov    ebp,0x7d68728
  421e63:	fwait
  421e64:	push   edi
  421e65:	movups xmm4,XMMWORD PTR [ebp+0x43f6b]
  421e6c:	sub    al,0x74
  421e6e:	xor    esi,DWORD PTR [esp+ebx*8+0x69]
  421e72:	lods   eax,DWORD PTR ds:[esi]
  421e73:	push   ebp
  421e74:	aaa    
  421e75:	sbb    ebp,DWORD PTR [edi+ebp*1+0x1d]
  421e79:	loope  0x421e0b
  421e7b:	das    
  421e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e7d:	push   DWORD PTR [ebx+0x716d6bff]
  421e83:	inc    edx
  421e84:	push   es
  421e85:	sub    al,0x7b
  421e87:	ins    BYTE PTR es:[edi],dx
  421e88:	jbe    0x421e55
  421e8a:	xchg   esi,eax
  421e8b:	xchg   ecx,eax
  421e8c:	imul   ecx,edi,0x68
  421e8f:	jne    0x421e45
  421e91:	cs repnz hlt 
  421e94:	stos   BYTE PTR es:[edi],al
  421e95:	or     DWORD PTR [ebx],ebp
  421e97:	cmp    eax,0xdd97b38c
  421e9c:	xchg   ebx,eax
  421e9d:	leave  
  421e9e:	loope  0x421e53
  421ea0:	dec    ebp
  421ea1:	es push ss
  421ea3:	in     eax,dx
  421ea4:	cmp    al,0xdc
  421ea6:	cmp    dl,BYTE PTR [ecx]
  421ea8:	pushf  
  421ea9:	pop    es
  421eaa:	inc    edx
  421eab:	sub    al,0x8c
  421ead:	dec    esi
  421eae:	sbb    ah,0xb1
  421eb1:	retf   0x180e
  421eb4:	retf   
  421eb5:	xchg   ebp,eax
  421eb6:	stos   DWORD PTR es:[edi],eax
  421eb7:	fucom  st(0)
  421eb9:	mov    ch,0x92
  421ebb:	imul   BYTE PTR [edx+0x5]
  421ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ebf:	fiadd  WORD PTR [ecx]
  421ec1:	push   ds
  421ec2:	sub    al,0xa8
  421ec4:	push   esi
  421ec5:	lds    eax,FWORD PTR [ebx-0x549d6e47]
  421ecb:	in     al,dx
  421ecc:	cmp    DWORD PTR [ebx+0x32ba321d],ebx
  421ed2:	or     bh,BYTE PTR [eax+0x734abac5]
  421ed8:	xchg   ebx,eax
  421ed9:	and    DWORD PTR [eax+0x1b],0xfffffff4
  421edd:	and    bl,BYTE PTR [ecx+edx*4-0x131b0e55]
  421ee4:	(bad)
  421ee7:	sub    edi,DWORD PTR [eax+0x40]
  421eea:	icebp  
  421eeb:	int3   
  421eec:	retf   0x2ad1
  421eef:	cli    
  421ef0:	in     eax,dx
  421ef1:	dec    edx
  421ef2:	mov    cl,0xc4
  421ef4:	fidivr WORD PTR [esi-0x7771206e]
  421efa:	pop    ds
  421efb:	or     BYTE PTR [ebp-0x71011aa5],dh
  421f01:	jns    0x421ead
  421f03:	punpckhbw mm0,QWORD PTR [esi+0x26]
  421f07:	rcl    BYTE PTR [edi+edx*4],0xae
  421f0b:	mov    ds:0xc611a54e,eax
  421f10:	push   0x1e
  421f12:	aaa    
  421f13:	add    eax,0x13c2d616
  421f18:	pop    edi
  421f19:	mov    ss,WORD PTR [ecx-0x3db4b5b8]
  421f1f:	sub    eax,DWORD PTR [esi]
  421f21:	push   eax
  421f22:	sub    eax,0x3277d49d
  421f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f28:	in     eax,dx
  421f29:	pop    ebp
  421f2a:	mov    cl,0x5
  421f2c:	sub    eax,0xbdad3dab
  421f31:	xchg   ecx,eax
  421f32:	mov    esi,0xc9eb5f6
  421f37:	popa   
  421f38:	push   dx
  421f3a:	lods   al,BYTE PTR ds:[esi]
  421f3b:	(bad)  
  421f3c:	fisttp WORD PTR [edx]
  421f3e:	lea    ebp,[ecx+0x5e490e71]
  421f44:	jae    0x421ed6
  421f46:	pop    edi
  421f47:	jmp    0x2217:0xf07b9bfa
  421f4e:	cmp    eax,0x7367b14d
  421f53:	gs sbb eax,0x65d0df72
  421f59:	js     0x421f12
  421f5b:	dec    edi
  421f5c:	outs   dx,DWORD PTR ds:[esi]
  421f5d:	inc    ebx
  421f5e:	popf   
  421f5f:	or     BYTE PTR [esi+0x20],ch
  421f62:	adc    dl,ch
  421f64:	dec    esi
  421f65:	adc    BYTE PTR [ecx],bh
  421f67:	loopne 0x421fe6
  421f69:	add    ch,BYTE PTR [esi+0x6a]
  421f6c:	cli    
  421f6d:	daa    
  421f6e:	rol    BYTE PTR [ebp+0x7074e8ce],1
  421f74:	push   esp
  421f75:	cli    
  421f76:	sahf   
  421f77:	pop    ss
  421f78:	mov    ebx,0x4a6751bc
  421f7d:	ins    BYTE PTR es:[edi],dx
  421f7e:	xchg   edx,eax
  421f7f:	leave  
  421f80:	sub    DWORD PTR [eax-0x33348941],edi
  421f86:	out    0x99,al
  421f88:	pop    esp
  421f89:	add    eax,0x75234506
  421f8e:	cmp    al,0x17
  421f90:	sbb    DWORD PTR [ebx+0x70],ebp
  421f93:	enter  0xb632,0xe2
  421f97:	mov    bl,0xae
  421f99:	fst    QWORD PTR [ebp-0x1]
  421f9c:	aas    
  421f9d:	cld    
  421f9e:	cdq    
  421f9f:	into   
  421fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fa1:	test   BYTE PTR [esi],0xe5
  421fa4:	push   0x26d8d2cf
  421fa9:	rcr    DWORD PTR [esi-0x7c],0x29
  421fad:	loopne 0x421f60
  421faf:	imul   ebp,DWORD PTR [ecx-0xbd70fc4],0xf82d17b5
  421fb9:	jecxz  0x42200d
  421fbb:	(bad)  
  421fbc:	pop    edx
  421fbd:	jae    0x422003
  421fbf:	dec    esi
  421fc0:	xchg   edi,eax
  421fc1:	dec    esi
  421fc2:	mov    bl,0x78
  421fc4:	sbb    eax,0x48372a2e
  421fc9:	mov    al,ds:0xa8b11180
  421fce:	xor    eax,0xf340f7d
  421fd3:	xor    BYTE PTR [ecx+0x2aaecf8d],dl
  421fd9:	fisttp QWORD PTR [ebp+0x28269b71]
  421fdf:	pop    ecx
  421fe0:	scas   eax,DWORD PTR es:[edi]
  421fe1:	xchg   ecx,eax
  421fe2:	push   edx
  421fe3:	nop
  421fe4:	ss cli 
  421fe6:	inc    edi
  421fe7:	ja     0x422049
  421fe9:	xor    eax,0x79efd1b8
  421fee:	ror    ah,1
  421ff0:	jae    0x422013
  421ff2:	mov    al,0x6
  421ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ff5:	and    BYTE PTR gs:[ecx+0x1e6bb85a],ch
  421ffc:	jmp    0x9bb6:0xff156f18
  422003:	sub    eax,DWORD PTR [ebx-0x71]
  422006:	(bad)  
  422007:	call   0xc958:0xe38e01fb
  42200e:	pushf  
  42200f:	dec    ebp
  422010:	mov    ah,0xd7
  422012:	clc    
  422013:	cdq    
  422014:	mov    ds:0xbf3a58b0,al
  422019:	push   eax
  42201a:	jmp    0x232fb7c8
  42201f:	retf   0xf9fc
  422022:	into   
  422023:	pop    ss
  422024:	xchg   ebp,eax
  422025:	out    dx,eax
  422026:	jo     0x42206e
  422028:	add    ecx,DWORD PTR [ecx-0x80]
  42202b:	in     al,0x91
  42202d:	shr    eax,cl
  42202f:	xchg   ebx,eax
  422030:	stos   DWORD PTR es:[edi],eax
  422031:	ja     0x421fbf
  422033:	jae    0x4142ff80
  422039:	push   ecx
  42203a:	aaa    
  42203b:	(bad)  
  42203c:	stc    
  42203d:	xchg   edi,eax
  42203e:	sbb    ebx,DWORD PTR [eax]
  422040:	cwde   
  422041:	mov    ah,0xae
  422043:	test   BYTE PTR [ecx-0x6c],bh
  422046:	push   ss
  422047:	cwde   
  422048:	fsubr  st,st(3)
  42204a:	fst    st(5)
  42204c:	sub    BYTE PTR cs:[edx-0x6724762a],ah
  422053:	xchg   ecx,eax
  422054:	rol    bh,cl
  422056:	xchg   ecx,eax
  422057:	cli    
  422058:	fidivr DWORD PTR [eax+0xa]
  42205b:	cwde   
  42205c:	pop    bx
  42205e:	inc    esi
  42205f:	das    
  422060:	mov    ecx,DWORD PTR [ebx+ecx*4+0x31]
  422064:	cwde   
  422065:	xchg   edx,eax
  422066:	xchg   DWORD PTR [ecx],ebx
  422068:	scas   eax,DWORD PTR es:[edi]
  422069:	mov    bl,bl
  42206b:	xchg   ecx,eax
  42206c:	pop    ds
  42206d:	push   edi
  42206e:	jecxz  0x422009
  422070:	dec    ebx
  422071:	pop    es
  422072:	and    DWORD PTR [ebx+0xb],esp
  422075:	push   ecx
  422076:	rcr    DWORD PTR [edx],1
  422078:	mov    ds:0x7d8c9951,al
  42207d:	cmp    DWORD PTR [edi],edi
  42207f:	jecxz  0x4220b4
  422081:	push   ebp
  422082:	xchg   ebp,eax
  422083:	jle    0x422027
  422085:	xchg   DWORD PTR [ecx-0x21],edx
  422088:	mov    edi,0xd3827ddf
  42208d:	or     BYTE PTR [eax],cl
  42208f:	repnz push ecx
  422091:	icebp  
  422092:	jns    0x422068
  422094:	mov    DWORD PTR [ebx],ecx
  422096:	shl    BYTE PTR [eax+0x58d4e93f],1
  42209c:	xchg   DWORD PTR [edi-0x1373202c],ebp
  4220a2:	mov    edi,0x24295ef9
  4220a7:	aad    0xb8
  4220a9:	adc    BYTE PTR [eax-0x3b2a8915],bh
  4220af:	arpl   WORD PTR [ebp+0x7c],bp
  4220b2:	cmp    al,0xc7
  4220b4:	pushf  
  4220b5:	loop   0x422078
  4220b7:	and    ch,BYTE PTR [edi]
  4220b9:	jbe    0x4220ce
  4220bb:	jae    0x4220ff
  4220bd:	inc    esp
  4220be:	mov    ch,0x3c
  4220c0:	jo     0x422063
  4220c2:	jo     0x422068
  4220c4:	push   ss
  4220c5:	pop    es
  4220c6:	xchg   ebp,eax
  4220c7:	pop    edi
  4220c8:	std    
  4220c9:	jl     0x4220e3
  4220cb:	jp     0x422067
  4220cd:	(bad)  
  4220ce:	call   0xeb8:0xf4701a28
  4220d5:	popf   
  4220d6:	cdq    
  4220d7:	mov    bh,0x9e
  4220d9:	sti    
  4220da:	xlat   BYTE PTR ds:[ebx]
  4220db:	adc    bh,BYTE PTR [edi]
  4220dd:	(bad)  
  4220de:	cld    
  4220df:	jecxz  0x4220b6
  4220e1:	xchg   esp,eax
  4220e2:	div    BYTE PTR [eax-0x2c]
  4220e5:	push   ebx
  4220e6:	call   DWORD PTR ss:[eax+0x5]
  4220ea:	add    DWORD PTR [eax],ecx
  4220ec:	sbb    dl,BYTE PTR [eax-0x6]
  4220ef:	xchg   BYTE PTR [edx+edx*4-0x2],bl
  4220f3:	call   0x2343a211
  4220f8:	in     eax,0xa7
  4220fa:	lods   al,BYTE PTR ds:[esi]
  4220fb:	sub    cl,ch
  4220fd:	adc    ebx,0xffffffa5
  422100:	jecxz  0x4220de
  422102:	add    ebx,DWORD PTR es:[ebp+0x31]
  422106:	xlat   BYTE PTR ds:[ebx]
  422108:	push   ebx
  422109:	xchg   ebp,eax
  42210a:	xor    BYTE PTR [edx-0x64],0x1a
  42210e:	shr    BYTE PTR [ecx],1
  422110:	loope  0x4220fe
  422112:	aas    
  422113:	push   ebx
  422114:	in     eax,0xc3
  422116:	ror    ch,1
  422118:	jg     0x42218e
  42211a:	dec    eax
  42211b:	out    0x66,al
  42211d:	xor    BYTE PTR [esi-0x650e6fc6],al
  422123:	je     0x422154
  422125:	or     ebp,ebp
  422127:	fnstsw WORD PTR [edx+0x7]
  42212a:	sbb    eax,0xcc5f871
  42212f:	xor    ch,BYTE PTR [edi-0x57]
  422132:	in     al,0xb6
  422134:	std    
  422135:	adc    BYTE PTR [esi+0x288525fb],al
  42213b:	add    esp,esi
  42213d:	jmp    0x4221a2
  42213f:	cdq    
  422140:	out    0x42,al
  422142:	int    0x64
  422144:	pop    ebx
  422145:	loope  0x42211d
  422147:	adc    DWORD PTR [edx],0x26
  42214a:	push   esp
  42214b:	jmp    0x6c4d4f7a
  422150:	xchg   ebp,eax
  422151:	retf   0x1e2a
  422154:	mov    gs,WORD PTR [eax-0x5a]
  422157:	or     BYTE PTR [ebx],ch
  422159:	dec    ecx
  42215a:	fisttp QWORD PTR [ebp+0x8]
  42215d:	loope  0x422122
  42215f:	(bad)  
  422160:	retf   
  422161:	cmp    eax,0xb4c059ff
  422166:	or     ebp,edi
  422168:	mov    eax,0x5d764b94
  42216d:	aaa    
  42216e:	into   
  42216f:	inc    edi
  422170:	add    al,0xe
  422172:	pop    ecx
  422173:	cld    
  422174:	(bad)  
  422177:	out    0x58,al
  422179:	adc    dl,BYTE PTR [edi-0x78e89552]
  42217f:	cmp    BYTE PTR [si+0x7a],cl
  422183:	lods   al,BYTE PTR ds:[esi]
  422184:	sub    eax,0x95fbc7fd
  422189:	fld    DWORD PTR [ebx-0x20]
  42218c:	mov    ebp,0x5ea1f151
  422191:	mov    ebx,0xf8f567a4
  422196:	push   ecx
  422197:	adc    bl,al
  422199:	popw   ds
  42219b:	xchg   ebp,eax
  42219c:	cmp    edx,DWORD PTR [edi]
  42219e:	in     eax,0x2a
  4221a0:	or     esp,DWORD PTR [edx+0x51]
  4221a3:	jp     0x4221bf
  4221a5:	and    DWORD PTR [edx+0x5c44a620],edi
  4221ab:	sub    edi,DWORD PTR [eax]
  4221ad:	dec    eax
  4221ae:	popa   
  4221af:	cmp    DWORD PTR [ebx-0x6d],ecx
  4221b2:	add    eax,0xffc83e3d
  4221b7:	inc    ecx
  4221b8:	stos   DWORD PTR es:[edi],eax
  4221b9:	je     0x42215c
  4221bb:	or     ebx,edx
  4221bd:	addr16 repz push cs
  4221c0:	xchg   esp,eax
  4221c1:	adc    BYTE PTR [eax+0x20],0x4b
  4221c5:	or     eax,DWORD PTR [ebp+0x7e]
  4221c8:	and    ah,cl
  4221ca:	mov    dl,0x30
  4221cc:	cmp    ecx,ebx
  4221ce:	repz and eax,0x69ae3b77
  4221d4:	mov    edi,DWORD PTR ss:[edx]
  4221d7:	sbb    bl,BYTE PTR [edi]
  4221d9:	ss mov edi,0x450a9fcf
  4221df:	jb     0x42216d
  4221e1:	cmp    al,0x1a
  4221e3:	dec    ebx
  4221e4:	or     DWORD PTR [ebp*4+0x1c10f3d7],edi
  4221eb:	cmp    DWORD PTR [ecx],eax
  4221ed:	xor    eax,0xd3cde98d
  4221f2:	or     ah,ah
  4221f4:	loope  0x4221a5
  4221f6:	and    al,0x85
  4221f8:	dec    ebx
  4221f9:	push   ds
  4221fa:	jecxz  0x4221ed
  4221fc:	cmp    DWORD PTR [ebx],esi
  4221fe:	add    DWORD PTR [eax+0x44],eax
  422201:	popa   
  422202:	inc    ecx
  422203:	daa    
  422204:	out    dx,al
  422205:	stc    
  422206:	loopne 0x422274
  422208:	fstp   TBYTE PTR [edx]
  42220a:	add    eax,0xadb78d25
  42220f:	jbe    0x4221ef
  422211:	inc    ebp
  422212:	addr16 sbb eax,0x1a6d7e10
  422218:	adc    esi,DWORD PTR ds:0x898ddc76
  42221e:	adc    ah,BYTE PTR [edi+0x44d55d4b]
  422224:	xor    dl,BYTE PTR [ecx]
  422226:	cmc    
  422227:	mov    DWORD PTR [esp+eax*1-0x56d77d3b],edi
  42222e:	vcvtsi2ss xmm1,xmm4,DWORD PTR ds:0xa6ed14f9
  422236:	js     0x422297
  422238:	std    
  422239:	sbb    BYTE PTR [esi+eiz*1],cl
  42223c:	in     al,0x46
  42223e:	(bad)  
  42223f:	stc    
  422240:	sbb    al,0x65
  422242:	pop    ebx
  422243:	jne    0x42229d
  422245:	push   eax
  422246:	xor    DWORD PTR [eax+ebx*1+0x210a99ef],ebx
  42224d:	arpl   ax,cx
  42224f:	inc    ebx
  422250:	lds    edx,FWORD PTR [eax]
  422252:	gs cmp eax,0xef384594
  422258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422259:	xor    dl,BYTE PTR [edi+0x4488a343]
  42225f:	dec    esp
  422260:	xor    BYTE PTR [eax+0x2f],al
  422263:	inc    esi
  422264:	or     ah,BYTE PTR [edx+0x35]
  422267:	jl     0x422284
  422269:	push   ebp
  42226a:	dec    ebx
  42226b:	jge    0x422243
  42226d:	push   eax
  42226e:	rcr    DWORD PTR [esi-0x46],0x23
  422272:	popa   
  422273:	mov    DWORD PTR [esi+0x29d7f4bb],edi
  422279:	enter  0x8c5c,0xd2
  42227d:	inc    edx
  42227e:	hlt    
  42227f:	sub    BYTE PTR [ecx],dl
  422281:	or     ch,BYTE PTR [eax+0x465e8a10]
  422287:	arpl   WORD PTR [ebx],bx
  422289:	jns    0x42225d
  42228b:	cwde   
  42228c:	bnd ret 
  42228e:	mov    BYTE PTR [edi+eax*1-0x614e57eb],al
  422295:	xchg   ebp,eax
  422297:	pusha  
  422298:	fnstenv [ebx]
  42229a:	jecxz  0x422252
  42229c:	sub    al,BYTE PTR [esi]
  42229e:	mov    ds:0xb75cba2,eax
  4222a3:	ja     0x422236
  4222a5:	inc    ecx
  4222a6:	inc    ecx
  4222a7:	jge    0x4222c9
  4222a9:	add    ch,BYTE PTR [ebp+edi*8-0x489dc6b9]
  4222b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222b1:	jg     0x422274
  4222b3:	hlt    
  4222b4:	mov    bl,0x56
  4222b6:	pop    esi
  4222b7:	frstor [edi]
  4222b9:	rcl    BYTE PTR [edi],0x1
  4222bc:	dec    esp
  4222bd:	fchs   
  4222bf:	rol    DWORD PTR ds:0x4472abb2,cl
  4222c5:	xchg   esi,eax
  4222c6:	mov    al,ds:0x38f4b4d6
  4222cb:	pop    ebp
  4222cc:	and    esi,DWORD PTR [ebp-0x3a]
  4222cf:	hlt    
  4222d0:	or     esi,DWORD PTR [ecx-0x6e03208d]
  4222d6:	sbb    BYTE PTR [ebp-0xe],dl
  4222d9:	in     eax,0xc4
  4222db:	aaa    
  4222dc:	std    
  4222dd:	add    DWORD PTR [eax-0x24f05982],0x74
  4222e4:	popf   
  4222e5:	xchg   ebx,eax
  4222e6:	retf   0xc6c6
  4222e9:	sub    dl,0xd7
  4222ec:	test   BYTE PTR [ebx-0x5e],cl
  4222ef:	(bad)
  4222f2:	sub    eax,0x7bfeb1fd
  4222f7:	int3   
  4222f8:	fimul  DWORD PTR [eax+0x16]
  4222fb:	in     eax,dx
  4222fc:	stos   BYTE PTR es:[edi],al
  4222fd:	outs   dx,DWORD PTR ds:[esi]
  4222fe:	mov    edi,esp
  422300:	dec    edx
  422301:	jne    0x422363
  422303:	xchg   DWORD PTR [edx+0x40ac35e7],edx
  422309:	jl     0x4222e7
  42230b:	mov    bl,0xe1
  42230d:	popf   
  42230e:	push   esi
  42230f:	adc    edx,DWORD PTR [edx+0xa33e93b]
  422315:	jmp    0x4222d4
  422317:	aas    
  422318:	fs jo  0x422355
  42231b:	lds    ecx,FWORD PTR ds:0xc3c220cb
  422321:	sbb    cl,ah
  422323:	lea    eax,[ebx-0x1fc9a073]
  422329:	xchg   esp,eax
  42232a:	das    
  42232b:	lahf   
  42232c:	xor    al,0xcd
  42232e:	add    bh,BYTE PTR [esi+ecx*4-0x5ab9e53a]
  422335:	inc    ebx
  422336:	addr16 push ecx
  422338:	push   ebx
  422339:	sub    ebx,ecx
  42233b:	leave  
  42233c:	bound  edi,QWORD PTR [edi]
  42233e:	inc    esi
  42233f:	daa    
  422340:	add    bh,BYTE PTR ds:0xede153c0
  422346:	mov    ecx,0x93c93c6f
  42234b:	xor    BYTE PTR [eax],dh
  42234d:	int3   
  42234e:	xlat   BYTE PTR ds:[ebx]
  42234f:	sahf   
  422350:	rcl    dh,cl
  422352:	mov    ?,WORD PTR [edx]
  422354:	clc    
  422355:	inc    ebp
  422356:	jge    0x4223af
  422358:	stc    
  422359:	pop    ecx
  42235a:	mov    eax,0x491d381b
  42235f:	mov    ds:0xf84b093f,al
  422364:	imul   edi,DWORD PTR [eax-0x65],0x9f85af08
  42236b:	mov    al,bh
  42236d:	mov    esi,0x4697b13
  422372:	pop    ebp
  422373:	mov    eax,ds:0x2751ae34
  422378:	jmp    0x42239c
  42237a:	or     esi,ebp
  42237c:	stos   DWORD PTR es:[edi],eax
  42237d:	fdiv   QWORD PTR [ebx+0x1c0fb742]
  422383:	jne    0x422326
  422385:	mov    bh,0xfd
  422387:	shl    DWORD PTR [eax],cl
  422389:	(bad)  
  42238a:	sub    cl,BYTE PTR [esp+eiz*2+0x47]
  42238e:	dec    ebx
  42238f:	in     al,0x60
  422391:	jb     0x42238a
  422393:	mov    al,ds:0x6a469d5e
  422398:	gs ins BYTE PTR es:[edi],dx
  42239a:	stc    
  42239b:	call   0xad8:0x39a0d63
  4223a2:	xchg   edi,eax
  4223a3:	out    0x9d,eax
  4223a5:	dec    ebx
  4223a6:	cmp    bh,BYTE PTR [ecx]
  4223a8:	cli    
  4223a9:	cmc    
  4223aa:	jg     0x422365
  4223ac:	adc    cl,ch
  4223ae:	mov    al,0x7e
  4223b0:	in     eax,0xd4
  4223b2:	xchg   esp,eax
  4223b3:	in     eax,0xbc
  4223b5:	ins    DWORD PTR es:[edi],dx
  4223b6:	pop    ecx
  4223b7:	jns    0x422373
  4223b9:	xlat   BYTE PTR ds:[ebx]
  4223ba:	rol    BYTE PTR [edi],cl
  4223bc:	fdivp  st(6),st
  4223be:	imul   DWORD PTR ds:0x27a21b51
  4223c4:	loop   0x4223b8
  4223c6:	sub    DWORD PTR [ebp+0x5cde804e],ebx
  4223cc:	xor    DWORD PTR [edx],ecx
  4223ce:	cmp    edi,esp
  4223d0:	daa    
  4223d1:	scas   al,BYTE PTR es:[edi]
  4223d2:	sub    bl,BYTE PTR [ecx+0x74de99c7]
  4223d8:	fimul  DWORD PTR ds:0x3434f460
  4223de:	fadd   QWORD PTR [edi-0x1e]
  4223e1:	cmc    
  4223e2:	retf   
  4223e3:	mov    ch,0x78
  4223e5:	pop    ss
  4223e6:	mov    dh,0x71
  4223e8:	int    0xe3
  4223ea:	test   ebp,ebx
  4223ec:	mov    edi,0xfc00c20c
  4223f1:	hlt    
  4223f2:	xchg   edi,eax
  4223f3:	pop    ebx
  4223f4:	or     esp,DWORD PTR [ebx+0x6d]
  4223f7:	in     al,0x97
  4223f9:	stc    
  4223fa:	out    0x14,al
  4223fc:	dec    ebx
  4223fd:	jnp    0x422421
  4223ff:	xchg   edi,eax
  422400:	mov    cl,0xb5
  422402:	loope  0x422458
  422404:	mov    dh,0x8
  422406:	scas   al,BYTE PTR es:[edi]
  422407:	and    BYTE PTR [edi-0x4d],ah
  42240a:	(bad)  
  42240b:	(bad)  
  42240c:	adc    DWORD PTR [ebx-0x6362df17],ecx
  422412:	test   DWORD PTR [edx],edx
  422414:	push   edx
  422415:	dec    esi
  422416:	inc    esi
  422417:	jmp    0x42240c
  422419:	mov    cl,0x3e
  42241b:	out    dx,al
  42241c:	xchg   ecx,eax
  42241d:	loope  0x422426
  42241f:	rcl    DWORD PTR [ebp+0x44ff3b56],1
  422425:	jmp    0x422447
  422427:	int3   
  422428:	cmp    ebx,ebp
  42242a:	add    edx,DWORD PTR [ebx-0x5ca8dfe6]
  422430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422431:	add    BYTE PTR [esi],0xf8
  422434:	or     bh,BYTE PTR [ebx]
  422436:	cmp    al,0xea
  422438:	imul   ecx,ebp,0xffffffed
  42243b:	fs adc eax,0x816fd94
  422441:	aaa    
  422442:	gs jbe 0x4223f2
  422445:	push   es
  422446:	lods   eax,DWORD PTR ds:[esi]
  422447:	stos   DWORD PTR es:[edi],eax
  422448:	(bad)  
  422449:	in     eax,dx
  42244a:	mov    eax,0xf2ad3255
  42244f:	loope  0x422426
  422451:	push   ss
  422452:	xor    eax,0x2130af27
  422457:	jnp    0x4224be
  422459:	ret    0x3166
  42245c:	inc    eax
  42245d:	sbb    BYTE PTR [ebx+0x5e],bh
  422460:	jmp    0x42248f
  422462:	ret    0xd687
  422465:	inc    edx
  422466:	mov    al,0xf9
  422468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422469:	sub    al,0x9d
  42246b:	(bad)  
  42246d:	rcl    BYTE PTR [edx+0x4d21c4dd],0xac
  422474:	hlt    
  422475:	add    cl,BYTE PTR [edi-0x69de3d9f]
  42247b:	inc    ecx
  42247c:	pop    edx
  42247d:	push   ebx
  42247e:	jo     0x422493
  422480:	xlat   BYTE PTR ds:[ebx]
  422481:	(bad)
  422484:	inc    ebx
  422485:	lock jg 0x422472
  422488:	and    dh,bl
  42248a:	retf   0x1c1e
  42248d:	push   edx
  42248e:	dec    edx
  42248f:	into   
  422490:	xlat   BYTE PTR ds:[ebx]
  422491:	hlt    
  422492:	cmc    
  422493:	add    al,0xe1
  422495:	fld    QWORD PTR [ecx]
  422497:	(bad)  
  422498:	clc    
  422499:	popf   
  42249a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42249b:	ins    BYTE PTR es:[edi],dx
  42249c:	pop    esi
  42249d:	push   0xffffffd7
  42249f:	ds iret 
  4224a1:	inc    esi
  4224a2:	retf   
  4224a3:	jecxz  0x4224d4
  4224a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a6:	ror    DWORD PTR [eax+0x69cc1a41],0xdd
  4224ad:	inc    esi
  4224ae:	jle    0x4224fb
  4224b0:	lea    ebp,[edi+0x1c]
  4224b3:	ds xchg ebx,eax
  4224b5:	loope  0x42245d
  4224b7:	and    dh,BYTE PTR [esp+edx*1]
  4224ba:	pop    edx
  4224bb:	les    ebp,FWORD PTR [ecx]
  4224bd:	push   edi
  4224be:	jmp    0xca994958
  4224c3:	push   edi
  4224c4:	stos   DWORD PTR es:[edi],eax
  4224c5:	add    DWORD PTR [eax-0x23],ebp
  4224c8:	inc    ecx
  4224c9:	adc    esp,DWORD PTR gs:[edx]
  4224cc:	dec    esi
  4224cd:	das    
  4224ce:	(bad)  
  4224cf:	cmc    
  4224d0:	lods   al,BYTE PTR ds:[esi]
  4224d1:	and    eax,0xe5a3089c
  4224d6:	or     DWORD PTR [ecx],eax
  4224d8:	jae    0x422492
  4224da:	nop
  4224db:	loop   0x422462
  4224dd:	or     ebx,DWORD PTR ds:0xf32bf1a
  4224e3:	pop    DWORD PTR [edx+0x53]
  4224e6:	repz jns 0x42251f
  4224e9:	pop    es
  4224ea:	jecxz  0x422525
  4224ec:	push   ecx
  4224ed:	or     BYTE PTR [edx],0x89
  4224f0:	or     esi,ebp
  4224f2:	popf   
  4224f3:	arpl   WORD PTR [eax],ax
  4224f5:	and    al,BYTE PTR [edi+eiz*2-0x36]
  4224f9:	test   DWORD PTR [ecx+esi*1+0x3e],eax
  4224fd:	push   0x9b309346
  422502:	sub    ebx,DWORD PTR [ecx+esi*4]
  422505:	in     eax,0x72
  422507:	add    BYTE PTR [ebx-0x71c7ee55],0xfe
  42250e:	outs   dx,BYTE PTR ds:[esi]
  42250f:	cvttps2pi mm4,QWORD PTR [ebx+0x359b7a2d]
  422516:	pushf  
  422517:	jns    0x422531
  422519:	into   
  42251a:	mov    edi,DWORD PTR [ebx+edi*8+0x6a]
  42251e:	cmp    dh,BYTE PTR [edi]
  422520:	les    ebp,FWORD PTR [esi-0x3a50b44c]
  422526:	jge    0x422515
  422528:	fs cwde 
  42252a:	xor    al,0x9c
  42252c:	jmp    0x3d4b:0xd8d8a9b9
  422533:	lods   eax,DWORD PTR ds:[esi]
  422534:	pop    es
  422535:	or     edi,edx
  422537:	and    ch,BYTE PTR [ecx]
  422539:	jo     0x422591
  42253b:	mov    esi,0xff75cfb9
  422540:	xor    ecx,DWORD PTR [edx]
  422542:	sbb    esp,DWORD PTR [edx+0x7a]
  422545:	jbe    0x4224f2
  422547:	scas   eax,DWORD PTR es:[edi]
  422548:	fild   WORD PTR [edi+0x159c71dc]
  42254e:	cmc    
  42254f:	cwde   
  422550:	and    DWORD PTR [esi],esp
  422552:	iret   
  422553:	in     al,dx
  422554:	out    dx,al
  422555:	out    dx,al
  422556:	js     0x4225d2
  422558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422559:	push   ebx
  42255a:	mov    eax,0x94e17161
  42255f:	rcl    cl,1
  422561:	inc    esi
  422562:	pop    ebx
  422563:	xchg   ebp,eax
  422564:	(bad)  
  422565:	ja     0x422572
  422567:	gs or  bl,ch
  42256a:	nop
  42256b:	mov    eax,ds:0xc6a09ffd
  422570:	pusha  
  422571:	out    dx,al
  422572:	jg     0x422515
  422574:	jbe    0x4224fe
  422576:	xor    bl,bh
  422578:	add    cl,BYTE PTR [edi-0x7d]
  42257b:	mov    esp,0xb9d14647
  422580:	scas   al,BYTE PTR es:[edi]
  422581:	dec    eax
  422582:	loop   0x422515
  422584:	enter  0x6ce5,0x8
  422588:	(bad)  
  422589:	sti    
  42258a:	inc    eax
  42258b:	push   eax
  42258c:	std    
  42258d:	ror    BYTE PTR [ecx+0x4f],1
  422590:	data16 int 0xe8
  422593:	inc    ecx
  422594:	(bad)
  422597:	mov    BYTE PTR [edi+0x46771497],ch
  42259d:	(bad)  
  42259e:	call   0xb1e184bd
  4225a3:	push   ss
  4225a4:	pusha  
  4225a5:	xchg   BYTE PTR [edx-0x360f1e53],cl
  4225ab:	ror    DWORD PTR [edi-0x68],cl
  4225ae:	fld    QWORD PTR [edx]
  4225b0:	loop   0x4225af
  4225b2:	cwde   
  4225b3:	and    DWORD PTR [ebp+0xd03540a],esi
  4225b9:	push   edx
  4225ba:	nop
  4225bb:	idiv   BYTE PTR [ecx+0x5cd33d40]
  4225c1:	or     eax,0xe70f8c8c
  4225c6:	int3   
  4225c7:	jns    0x4225b2
  4225c9:	jp     0x4225c4
  4225cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225cc:	add    eax,0x36aede18
  4225d1:	enter  0xaebe,0xe1
  4225d5:	mov    esi,0x23217374
  4225da:	fwait
  4225db:	data16 sub BYTE PTR [ebx],dl
  4225de:	sbb    al,0x9c
  4225e0:	push   eax
  4225e1:	iret   
  4225e2:	shr    BYTE PTR [ebx-0x657e52aa],0x10
  4225e9:	adc    dl,al
  4225eb:	loopne 0x422572
  4225ed:	push   cs
  4225ee:	and    eax,0xaaa2411
  4225f3:	jp     0x422642
  4225f5:	add    esi,eax
  4225f7:	push   esi
  4225f8:	aaa    
  4225f9:	add    al,BYTE PTR [edi-0x69]
  4225fc:	adc    al,0x1b
  4225fe:	not    DWORD PTR [ecx]
  422600:	or     al,bl
  422602:	ins    BYTE PTR es:[edi],dx
  422603:	out    0x5b,al
  422605:	and    DWORD PTR [ebp-0x72ece7c1],ebp
  42260b:	mov    ah,bl
  42260d:	mov    BYTE PTR [ecx+0x7f2f4aae],bl
  422613:	lahf   
  422614:	pop    edi
  422615:	xchg   BYTE PTR [edi+ecx*2],dl
  422618:	hlt    
  422619:	or     al,0x7b
  42261b:	mov    al,0x23
  42261d:	jne    0x4225fe
  42261f:	sub    bh,0x50
  422622:	(bad)  
  422623:	scas   eax,DWORD PTR es:[edi]
  422624:	add    ebx,0xbee3731d
  42262a:	mov    ds:0xb67e9424,eax
  42262f:	imul   ebp,DWORD PTR [edx-0x4],0x70
  422633:	pop    ecx
  422634:	xlat   BYTE PTR ds:[ebx]
  422635:	jb     0x422620
  422637:	sub    eax,0x711086fd
  42263c:	cs jl  0x42266d
  42263f:	add    esp,ebp
  422641:	dec    ebx
  422642:	scas   eax,DWORD PTR es:[edi]
  422643:	aaa    
  422644:	das    
  422645:	push   edi
  422646:	outs   dx,DWORD PTR ds:[esi]
  422647:	jno    0x422605
  422649:	pop    ebp
  42264a:	mov    DWORD PTR [esi-0x70cf46c4],ebx
  422650:	loope  0x422628
  422652:	ins    BYTE PTR es:[edi],dx
  422653:	lock shl BYTE PTR [edi-0x2d],cl
  422657:	cdq    
  422658:	sub    dh,0xb4
  42265b:	call   0xb22c:0xd672bd0d
  422662:	out    dx,eax
  422663:	jae    0x4225f1
  422665:	push   esi
  422666:	pop    edx
  422667:	push   ecx
  422668:	mov    dl,0xaf
  42266a:	push   eax
  42266b:	bound  ecx,QWORD PTR [ecx]
  42266d:	mov    ebp,0x44f5952b
  422672:	cli    
  422673:	call   0x352e:0xe234505b
  42267a:	xchg   DWORD PTR [ecx+0x4d],ebp
  42267d:	loop   0x4226c4
  42267f:	hlt    
  422680:	mov    cl,0x1c
  422682:	cmp    al,0x8e
  422684:	sti    
  422685:	jbe    0x4226bd
  422687:	sbb    esi,ecx
  422689:	and    bl,dl
  42268b:	in     eax,0x42
  42268d:	or     DWORD PTR [ecx+0x7e],edi
  422690:	pop    ebp
  422691:	jno    0x422650
  422693:	retf   0x243f
  422696:	push   edi
  422697:	out    dx,al
  422698:	mov    BYTE PTR [eax+0x137d83aa],cl
  42269e:	aad    0x25
  4226a0:	aad    0xd5
  4226a2:	mov    ebp,0xc25b0f12
  4226a7:	jp     0x422653
  4226a9:	pushf  
  4226aa:	cld    
  4226ab:	jge    0x4226e6
  4226ad:	jb     0x422651
  4226af:	ins    DWORD PTR es:[edi],dx
  4226b0:	add    al,0x52
  4226b2:	lods   al,BYTE PTR ds:[esi]
  4226b3:	sub    edi,eax
  4226b5:	stc    
  4226b6:	clc    
  4226b7:	cmp    DWORD PTR [edx-0x5d],ecx
  4226ba:	aam    0xb5
  4226bc:	in     al,0x95
  4226be:	(bad)  
  4226bf:	das    
  4226c0:	sbb    al,0xdd
  4226c2:	push   ecx
  4226c3:	jmp    FWORD PTR [esi+edx*4+0x2ad6bb6e]
  4226ca:	inc    esp
  4226cb:	pop    esi
  4226cc:	sbb    ebx,DWORD PTR [edi+0x1e982cf2]
  4226d2:	add    eax,0x128693a3
  4226d7:	ficomp DWORD PTR [edi+0x74]
  4226da:	dec    edi
  4226db:	push   ds
  4226dc:	push   0x539d3faf
  4226e1:	ss in  ax,0xe7
  4226e5:	iret   
  4226e6:	mov    esp,DWORD PTR [esi]
  4226e8:	arpl   WORD PTR [esi-0x3f],ax
  4226eb:	jns    0x42270c
  4226ed:	fwait
  4226ee:	pusha  
  4226ef:	mov    ebx,0x4e579179
  4226f4:	hlt    
  4226f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f6:	jno    0x4226b0
  4226f8:	mov    ebp,0x9f650efc
  4226fd:	jmp    0xf527:0x331af4cf
  422704:	mov    dh,0x1b
  422706:	jl     0x422724
  422708:	sbb    BYTE PTR [eax+0x64],0x25
  42270c:	jg     0x4226c2
  42270e:	fisttp QWORD PTR [eax]
  422710:	mov    ch,0xb1
  422712:	out    0xed,eax
  422714:	mov    al,ds:0xe93c1d87
  422719:	pop    es
  42271a:	add    DWORD PTR [ebx+edi*8-0x13fbd6f],ebp
  422721:	movd   DWORD PTR ds:0x661069b6,mm2
  422728:	adc    dl,cl
  42272a:	out    0x81,eax
  42272c:	call   0xdc34:0x73b0b147
  422733:	les    ebp,FWORD PTR [edi+0x12]
  422736:	pop    es
  422737:	xor    al,0xf7
  422739:	(bad)  
  42273a:	clc    
  42273b:	aaa    
  42273c:	es inc esi
  42273e:	call   0x8e01:0x3915ee19
  422745:	shl    BYTE PTR [edx-0x4f],0x5a
  422749:	div    DWORD PTR [edi+0x2006643a]
  42274f:	mov    esp,0x6155a236
  422754:	sub    eax,0x3847945e
  422759:	mov    esp,0xdc636ba0
  42275e:	mov    esi,0xea6607f2
  422763:	push   cs
  422764:	ds leave 
  422766:	add    eax,0xf5279ea3
  42276b:	xlat   BYTE PTR ds:[ebx]
  42276c:	xchg   ebx,eax
  42276d:	les    ebx,FWORD PTR ds:0x74022f0e
  422773:	cmp    DWORD PTR [edi-0x43],ecx
  422776:	into   
  422777:	sub    dh,bl
  422779:	cld    
  42277a:	push   0xffffffe0
  42277c:	test   DWORD PTR [edi],ebp
  42277e:	jle    0x4227d9
  422780:	repz jbe 0x4227dd
  422783:	(bad)  [ecx-0x47]
  422786:	sahf   
  422787:	push   0x42
  422789:	lahf   
  42278a:	cs out 0x26,eax
  42278d:	mov    BYTE PTR [ebp+0x77],0xce
  422791:	loope  0x4227a7
  422793:	test   eax,0x1355da7
  422798:	(bad)
  42279b:	xor    BYTE PTR [ecx],dl
  42279d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279e:	in     eax,0x74
  4227a0:	cld    
  4227a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a2:	and    ah,BYTE PTR [ecx+0x25d6b7a3]
  4227a8:	addr16 mov esp,0xb84aeea0
  4227ae:	imul   esi,ebp,0x4c
  4227b1:	ret    0xb523
  4227b4:	jno    0x4227f1
  4227b6:	mov    ch,0x3d
  4227b8:	call   0x44de:0x77975bf6
  4227bf:	and    DWORD PTR [ebx+0x1e2a2f5e],esi
  4227c5:	dec    edi
  4227c6:	add    eax,0x1f192445
  4227cb:	push   ebx
  4227cc:	hlt    
  4227cd:	and    eax,0x6ed67d65
  4227d2:	add    al,0x46
  4227d4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4227d6:	or     bh,BYTE PTR [ebx+eax*1-0x1655985b]
  4227dd:	jle    0x42278d
  4227df:	sti    
  4227e0:	dec    esp
  4227e1:	ja     0x422838
  4227e3:	pop    esp
  4227e4:	lahf   
  4227e5:	(bad)  
  4227e6:	(bad)  
  4227e7:	pop    esi
  4227e8:	ret    0xc3f2
  4227eb:	push   eax
  4227ec:	xchg   edi,eax
  4227ed:	bound  esi,QWORD PTR [ebx+0x19]
  4227f0:	push   ds
  4227f1:	cmp    DWORD PTR [edi-0x25],ebx
  4227f4:	xchg   ebx,eax
  4227f5:	aad    0xb2
  4227f7:	jbe    0x422781
  4227f9:	cmp    al,0x46
  4227fb:	out    dx,al
  4227fc:	mov    DWORD PTR [ebp-0x7dc21c22],esp
  422802:	ins    DWORD PTR es:[edi],dx
  422803:	xchg   esi,eax
  422804:	inc    ebp
  422805:	addr16 leave 
  422807:	icebp  
  422808:	sbb    dl,BYTE PTR [edx+0x7a9f4cfd]
  42280e:	(bad)  
  422810:	or     eax,DWORD PTR [ebx-0xdf6180f]
  422816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422817:	pushf  
  422818:	add    cl,al
  42281a:	xor    eax,0xbba3078
  42281f:	add    al,0xd
  422821:	sti    
  422822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422823:	jmp    0x4227ff
  422825:	cdq    
  422826:	inc    edi
  422827:	bound  edi,QWORD PTR [ebx+0x16e9978e]
  42282d:	daa    
  42282e:	fcomp  QWORD PTR [ebx+edi*1+0x33]
  422832:	dec    ecx
  422833:	cmp    esi,DWORD PTR [esi+esi*4-0x485570e6]
  42283a:	xor    DWORD PTR [ebx],ebx
  42283c:	in     eax,0xb0
  42283e:	and    DWORD PTR [esp+ebp*2-0x47c1071e],edx
  422845:	jnp    0x42281d
  422847:	in     al,0xe0
  422849:	daa    
  42284a:	mov    ds:0xd1bd639b,al
  42284f:	sbb    eax,0xa077c28f
  422854:	mov    al,ds:0x7188c12d
  422859:	pushf  
  42285a:	cmp    cl,BYTE PTR [edx+0x27b65947]
  422860:	cmc    
  422861:	fadd   st(3),st
  422863:	jle    0x422881
  422865:	mov    ch,0xb0
  422867:	dec    edx
  422868:	jg     0x422881
  42286a:	adc    al,0x87
  42286c:	pop    ss
  42286d:	fdiv   DWORD PTR [edx]
  42286f:	leave  
  422870:	dec    eax
  422871:	leave  
  422872:	into   
  422873:	rcr    DWORD PTR [edi-0x22],1
  422876:	das    
  422877:	xor    dl,bl
  422879:	fadd   DWORD PTR [bx+di]
  42287c:	lds    ebp,FWORD PTR [ebx-0x459de78]
  422882:	sub    al,0x23
  422884:	xor    BYTE PTR [eax],cl
  422886:	push   ebp
  422887:	or     al,0x7f
  422889:	lock mov ebp,DWORD PTR [ebx+edx*4]
  42288d:	mov    eax,ds:0x65872995
  422892:	int3   
  422893:	aad    0x69
  422895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422896:	sub    BYTE PTR [ecx],0x91
  422899:	mov    ebx,0x967ef4
  42289e:	mov    ch,0x7f
  4228a0:	dec    ebx
  4228a1:	mov    eax,0x17f42a70
  4228a6:	lods   al,BYTE PTR ds:[esi]
  4228a7:	(bad)  
  4228a8:	fsubr  DWORD PTR ds:0xaf0e73ba
  4228ae:	ss stos BYTE PTR es:[edi],al
  4228b0:	or     esp,DWORD PTR [ecx+eiz*1+0x2587deff]
  4228b7:	inc    ecx
  4228b8:	mov    esi,0xaf5cacb5
  4228bd:	retf   
  4228be:	push   ecx
  4228bf:	push   esp
  4228c0:	sub    ah,BYTE PTR [ecx-0x27]
  4228c3:	push   ds
  4228c4:	push   edx
  4228c5:	xor    edx,DWORD PTR [edi-0x4d]
  4228c8:	retf   
  4228c9:	adc    al,0x1e
  4228cb:	sbb    dh,bh
  4228cd:	xchg   edx,eax
  4228ce:	sbb    dl,BYTE PTR [edx-0x78]
  4228d1:	mov    al,0x76
  4228d3:	retf   
  4228d4:	in     eax,0x62
  4228d6:	loope  0x4228f6
  4228d8:	mov    edi,0xa3f65a25
  4228dd:	xchg   edx,eax
  4228de:	push   eax
  4228df:	pop    edx
  4228e0:	mov    esi,0xdc5ea3bd
  4228e5:	adc    edi,DWORD PTR [ebp-0x5]
  4228e8:	into   
  4228e9:	adc    BYTE PTR [ecx-0x12],0x31
  4228ed:	(bad)  
  4228ef:	fadd   QWORD PTR [edx+0x56]
  4228f2:	data16 fwait
  4228f4:	pop    esp
  4228f5:	or     DWORD PTR [ebx],eax
  4228f7:	rcr    BYTE PTR [eax+0x8],cl
  4228fa:	xor    ebp,DWORD PTR [eax]
  4228fc:	and    BYTE PTR [ebp+0x75169889],al
  422902:	test   cl,0x40
  422905:	std    
  422906:	fisub  WORD PTR [ecx+0x2e]
  422909:	push   edx
  42290a:	dec    ebx
  42290b:	ins    DWORD PTR es:[edi],dx
  42290c:	fwait
  42290d:	pop    ss
  42290e:	adc    esp,DWORD PTR [edi-0x27]
  422911:	jmp    0x422992
  422913:	fild   DWORD PTR [edi+0x62fbbef]
  422919:	sbb    DWORD PTR [eax+0x52],eax
  42291c:	aaa    
  42291d:	xchg   esi,eax
  42291e:	mov    ch,0x70
  422920:	stos   DWORD PTR es:[edi],eax
  422921:	aas    
  422922:	inc    ecx
  422923:	cli    
  422924:	cmc    
  422925:	sub    eax,ebx
  422927:	cmp    DWORD PTR [eax-0x72],ebx
  42292a:	adc    ah,BYTE PTR [esi]
  42292c:	cmc    
  42292d:	inc    ebp
  42292e:	dec    edi
  42292f:	cwde   
  422930:	idiv   BYTE PTR [edi+edx*4-0x20]
  422934:	ins    BYTE PTR es:[edi],dx
  422935:	cmc    
  422936:	pushf  
  422937:	push   ebx
  422938:	sub    eax,0x119b9dc1
  42293d:	dec    ebp
  42293e:	pop    esp
  42293f:	pusha  
  422940:	xor    eax,0xe814fe86
  422945:	clc    
  422946:	scas   al,BYTE PTR es:[edi]
  422947:	xor    dh,0x2
  42294a:	inc    edi
  42294b:	int    0xde
  42294d:	mov    esp,0x7c033d6d
  422952:	xor    eax,0x415410b8
  422957:	rol    edi,cl
  422959:	pop    DWORD PTR [ebx-0x18]
  42295c:	pop    ebp
  42295d:	nop
  42295e:	ja     0x4229d5
  422960:	(bad)  
  422962:	mov    cl,0x38
  422964:	dec    ebx
  422965:	ins    BYTE PTR es:[edi],dx
  422966:	test   DWORD PTR [edi+0x52],ebp
  422969:	not    DWORD PTR [ebx]
  42296b:	in     eax,0xa0
  42296d:	or     DWORD PTR [edx-0x3ee8d224],0xaab804ba
  422977:	jae    0x42293e
  422979:	jne    0x422927
  42297b:	neg    DWORD PTR [eax+esi*2-0x1f]
  42297f:	sub    eax,0xa1071cd5
  422984:	push   0x5f25b4be
  422989:	adc    eax,0x7274f3df
  42298e:	and    al,0x57
  422990:	xchg   DWORD PTR [edx],edx
  422992:	add    dl,dl
  422994:	js     0x422a06
  422996:	mov    cs,ecx
  422998:	cli    
  422999:	and    DWORD PTR [edi+edx*2+0x54],0xaffbd04d
  4229a1:	sbb    DWORD PTR [ebx+0x56161dd0],ecx
  4229a7:	xchg   ecx,eax
  4229a8:	int    0xaf
  4229aa:	out    dx,al
  4229ab:	dec    esi
  4229ac:	lock inc eax
  4229ae:	test   eax,0x39c2beaf
  4229b3:	mov    bh,0x48
  4229b5:	repnz pop ecx
  4229b7:	mov    edx,0x389ef94d
  4229bc:	jae    0x422a1b
  4229be:	cmp    al,0x24
  4229c0:	mov    esp,0x971ca4e0
  4229c5:	xchg   ecx,eax
  4229c6:	xor    al,0xcd
  4229c8:	jle    0x422a06
  4229ca:	inc    ebp
  4229cb:	mov    al,0xdc
  4229cd:	cs scas eax,DWORD PTR es:[edi]
  4229cf:	mov    eax,0xbfb32d53
  4229d4:	rcr    BYTE PTR [eax-0x74],cl
  4229d7:	jbe    0x422a43
  4229d9:	add    al,0x68
  4229db:	add    BYTE PTR [eax],dl
  4229dd:	add    BYTE PTR [eax],al
  4229df:	push   0x4cf
  4229e4:	push   0x1000
  4229e9:	call   DWORD PTR ds:0x42802c
  4229ef:	push   0x0
  4229f1:	call   esi
  4229f3:	xor    eax,eax
  4229f5:	pop    esi
  4229f6:	add    esp,0x10
  4229f9:	ret    0x10
  4229fc:	nop
  4229fd:	nop
  4229fe:	nop
  4229ff:	nop
  422a00:	jmp    DWORD PTR ds:0x428110
  422a06:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a0d:	jne    0x422a14
  422a0f:	call   0x422f52
  422a14:	push   DWORD PTR [esp+0x4]
  422a18:	call   0x422ddb
  422a1d:	push   0xff
  422a22:	call   DWORD PTR ds:0x45f294
  422a28:	pop    ecx
  422a29:	pop    ecx
  422a2a:	ret    
  422a2b:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a32:	jne    0x422a39
  422a34:	call   0x422f52
  422a39:	push   DWORD PTR [esp+0x4]
  422a3d:	call   0x422ddb
  422a42:	push   0xff
  422a47:	call   0x422c21
  422a4c:	pop    ecx
  422a4d:	pop    ecx
  422a4e:	ret    
  422a4f:	push   0x60
  422a51:	push   0x428150
  422a56:	call   0x423940
  422a5b:	mov    edi,0x94
  422a60:	mov    eax,edi
  422a62:	call   0x423990
  422a67:	mov    DWORD PTR [ebp-0x18],esp
  422a6a:	mov    esi,esp
  422a6c:	mov    DWORD PTR [esi],edi
  422a6e:	push   esi
  422a6f:	call   DWORD PTR ds:0x42805c
  422a75:	mov    ecx,DWORD PTR [esi+0x10]
  422a78:	mov    DWORD PTR ds:0x45fba4,ecx
  422a7e:	mov    eax,DWORD PTR [esi+0x4]
  422a81:	mov    ds:0x45fbb0,eax
  422a86:	mov    edx,DWORD PTR [esi+0x8]
  422a89:	mov    DWORD PTR ds:0x45fbb4,edx
  422a8f:	mov    esi,DWORD PTR [esi+0xc]
  422a92:	and    esi,0x7fff
  422a98:	mov    DWORD PTR ds:0x45fba8,esi
  422a9e:	cmp    ecx,0x2
  422aa1:	je     0x422aaf
  422aa3:	or     esi,0x8000
  422aa9:	mov    DWORD PTR ds:0x45fba8,esi
  422aaf:	shl    eax,0x8
  422ab2:	add    eax,edx
  422ab4:	mov    ds:0x45fbac,eax
  422ab9:	xor    esi,esi
  422abb:	push   esi
  422abc:	mov    edi,DWORD PTR ds:0x428014
  422ac2:	call   edi
  422ac4:	cmp    WORD PTR [eax],0x5a4d
  422ac9:	jne    0x422aea
  422acb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ace:	add    ecx,eax
  422ad0:	cmp    DWORD PTR [ecx],0x4550
  422ad6:	jne    0x422aea
  422ad8:	movzx  eax,WORD PTR [ecx+0x18]
  422adc:	cmp    eax,0x10b
  422ae1:	je     0x422b02
  422ae3:	cmp    eax,0x20b
  422ae8:	je     0x422aef
  422aea:	mov    DWORD PTR [ebp-0x1c],esi
  422aed:	jmp    0x422b16
  422aef:	cmp    DWORD PTR [ecx+0x84],0xe
  422af6:	jbe    0x422aea
  422af8:	xor    eax,eax
  422afa:	cmp    DWORD PTR [ecx+0xf8],esi
  422b00:	jmp    0x422b10
  422b02:	cmp    DWORD PTR [ecx+0x74],0xe
  422b06:	jbe    0x422aea
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b10:	setne  al
  422b13:	mov    DWORD PTR [ebp-0x1c],eax
  422b16:	push   0x1
  422b18:	call   0x4238ed
  422b1d:	pop    ecx
  422b1e:	test   eax,eax
  422b20:	jne    0x422b2a
  422b22:	push   0x1c
  422b24:	call   0x422a2b
  422b29:	pop    ecx
  422b2a:	call   0x423864
  422b2f:	test   eax,eax
  422b31:	jne    0x422b3b
  422b33:	push   0x10
  422b35:	call   0x422a2b
  422b3a:	pop    ecx
  422b3b:	call   0x42374d
  422b40:	mov    DWORD PTR [ebp-0x4],esi
  422b43:	call   0x42354f
  422b48:	test   eax,eax
  422b4a:	jge    0x422b54
  422b4c:	push   0x1b
  422b4e:	call   0x422a06
  422b53:	pop    ecx
  422b54:	call   DWORD PTR ds:0x42800c
  422b5a:	mov    ds:0x460354,eax
  422b5f:	call   0x42342d
  422b64:	mov    ds:0x45fb94,eax
  422b69:	call   0x42338b
  422b6e:	test   eax,eax
  422b70:	jge    0x422b7a
  422b72:	push   0x8
  422b74:	call   0x422a06
  422b79:	pop    ecx
  422b7a:	call   0x423158
  422b7f:	test   eax,eax
  422b81:	jge    0x422b8b
  422b83:	push   0x9
  422b85:	call   0x422a06
  422b8a:	pop    ecx
  422b8b:	call   0x422c63
  422b90:	mov    DWORD PTR [ebp-0x20],eax
  422b93:	cmp    eax,esi
  422b95:	je     0x422b9e
  422b97:	push   eax
  422b98:	call   0x422a06
  422b9d:	pop    ecx
  422b9e:	mov    DWORD PTR [ebp-0x38],esi
  422ba1:	lea    eax,[ebp-0x64]
  422ba4:	push   eax
  422ba5:	call   DWORD PTR ds:0x428058
  422bab:	call   0x4230ef
  422bb0:	mov    DWORD PTR [ebp-0x68],eax
  422bb3:	test   BYTE PTR [ebp-0x38],0x1
  422bb7:	je     0x422bbf
  422bb9:	movzx  eax,WORD PTR [ebp-0x34]
  422bbd:	jmp    0x422bc2
  422bbf:	push   0xa
  422bc1:	pop    eax
  422bc2:	push   eax
  422bc3:	push   DWORD PTR [ebp-0x68]
  422bc6:	push   esi
  422bc7:	push   esi
  422bc8:	call   edi
  422bca:	push   eax
  422bcb:	call   0x421850
  422bd0:	mov    edi,eax
  422bd2:	mov    DWORD PTR [ebp-0x6c],edi
  422bd5:	cmp    DWORD PTR [ebp-0x1c],esi
  422bd8:	jne    0x422be0
  422bda:	push   edi
  422bdb:	call   0x422d9b
  422be0:	call   0x422dbd
  422be5:	jmp    0x422c12
  422be7:	mov    eax,DWORD PTR [ebp-0x14]
  422bea:	mov    ecx,DWORD PTR [eax]
  422bec:	mov    ecx,DWORD PTR [ecx]
  422bee:	mov    DWORD PTR [ebp-0x70],ecx
  422bf1:	push   eax
  422bf2:	push   ecx
  422bf3:	call   0x422f8b
  422bf8:	pop    ecx
  422bf9:	pop    ecx
  422bfa:	ret    
  422bfb:	mov    esp,DWORD PTR [ebp-0x18]
  422bfe:	mov    edi,DWORD PTR [ebp-0x70]
  422c01:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c05:	jne    0x422c0d
  422c07:	push   edi
  422c08:	call   0x422dac
  422c0d:	call   0x422dcc
  422c12:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c16:	mov    eax,edi
  422c18:	lea    esp,[ebp-0x7c]
  422c1b:	call   0x42397b
  422c20:	ret    
  422c21:	push   0x42816c
  422c26:	call   DWORD PTR ds:0x428014
  422c2c:	test   eax,eax
  422c2e:	je     0x422c46
  422c30:	push   0x42815c
  422c35:	push   eax
  422c36:	call   DWORD PTR ds:0x428010
  422c3c:	test   eax,eax
  422c3e:	je     0x422c46
  422c40:	push   DWORD PTR [esp+0x4]
  422c44:	call   eax
  422c46:	push   DWORD PTR [esp+0x4]
  422c4a:	call   DWORD PTR ds:0x428060
  422c50:	int3   
  422c51:	push   0x8
  422c53:	call   0x423aff
  422c58:	pop    ecx
  422c59:	ret    
  422c5a:	push   0x8
  422c5c:	call   0x423a6b
  422c61:	pop    ecx
  422c62:	ret    
  422c63:	mov    eax,ds:0x460350
  422c68:	test   eax,eax
  422c6a:	je     0x422c6e
  422c6c:	call   eax
  422c6e:	push   esi
  422c6f:	push   edi
  422c70:	mov    ecx,0x42a00c
  422c75:	mov    edi,0x42a018
  422c7a:	xor    eax,eax
  422c7c:	cmp    ecx,edi
  422c7e:	mov    esi,ecx
  422c80:	jae    0x422c99
  422c82:	test   eax,eax
  422c84:	jne    0x422cc5
  422c86:	mov    ecx,DWORD PTR [esi]
  422c88:	test   ecx,ecx
  422c8a:	je     0x422c8e
  422c8c:	call   ecx
  422c8e:	add    esi,0x4
  422c91:	cmp    esi,edi
  422c93:	jb     0x422c82
  422c95:	test   eax,eax
  422c97:	jne    0x422cc5
  422c99:	push   0x423791
  422c9e:	call   0x423c10
  422ca3:	mov    esi,0x42a000
  422ca8:	mov    eax,esi
  422caa:	mov    edi,0x42a008
  422caf:	cmp    eax,edi
  422cb1:	pop    ecx
  422cb2:	jae    0x422cc3
  422cb4:	mov    eax,DWORD PTR [esi]
  422cb6:	test   eax,eax
  422cb8:	je     0x422cbc
  422cba:	call   eax
  422cbc:	add    esi,0x4
  422cbf:	cmp    esi,edi
  422cc1:	jb     0x422cb4
  422cc3:	xor    eax,eax
  422cc5:	pop    edi
  422cc6:	pop    esi
  422cc7:	ret    
  422cc8:	push   ebp
  422cc9:	mov    ebp,esp
  422ccb:	push   esi
  422ccc:	push   edi
  422ccd:	push   0x8
  422ccf:	call   0x423aff
  422cd4:	xor    esi,esi
  422cd6:	inc    esi
  422cd7:	cmp    DWORD PTR ds:0x45fbe4,esi
  422cdd:	pop    ecx
  422cde:	jne    0x422cf0
  422ce0:	push   DWORD PTR [ebp+0x8]
  422ce3:	call   DWORD PTR ds:0x428068
  422ce9:	push   eax
  422cea:	call   DWORD PTR ds:0x428064
  422cf0:	cmp    DWORD PTR [ebp+0xc],0x0
  422cf4:	mov    al,BYTE PTR [ebp+0x10]
  422cf7:	mov    DWORD PTR ds:0x45fbe0,esi
  422cfd:	mov    ds:0x45fbdc,al
  422d02:	jne    0x422d56
  422d04:	mov    ecx,DWORD PTR ds:0x460348
  422d0a:	test   ecx,ecx
  422d0c:	je     0x422d37
  422d0e:	mov    eax,ds:0x460344
  422d13:	sub    eax,0x4
  422d16:	cmp    eax,ecx
  422d18:	jmp    0x422d30
  422d1a:	mov    eax,DWORD PTR [eax]
  422d1c:	test   eax,eax
  422d1e:	je     0x422d22
  422d20:	call   eax
  422d22:	mov    eax,ds:0x460344
  422d27:	sub    eax,0x4
  422d2a:	cmp    eax,DWORD PTR ds:0x460348
  422d30:	mov    ds:0x460344,eax
  422d35:	jae    0x422d1a
  422d37:	mov    eax,0x42a01c
  422d3c:	mov    esi,0x42a020
  422d41:	cmp    eax,esi
  422d43:	mov    edi,eax
  422d45:	jae    0x422d56
  422d47:	mov    eax,DWORD PTR [edi]
  422d49:	test   eax,eax
  422d4b:	je     0x422d4f
  422d4d:	call   eax
  422d4f:	add    edi,0x4
  422d52:	cmp    edi,esi
  422d54:	jb     0x422d47
  422d56:	mov    eax,0x42a024
  422d5b:	mov    esi,0x42a028
  422d60:	cmp    eax,esi
  422d62:	mov    edi,eax
  422d64:	jae    0x422d75
  422d66:	mov    eax,DWORD PTR [edi]
  422d68:	test   eax,eax
  422d6a:	je     0x422d6e
  422d6c:	call   eax
  422d6e:	add    edi,0x4
  422d71:	cmp    edi,esi
  422d73:	jb     0x422d66
  422d75:	cmp    DWORD PTR [ebp+0x10],0x0
  422d79:	pop    edi
  422d7a:	pop    esi
  422d7b:	je     0x422d86
  422d7d:	push   0x8
  422d7f:	call   0x423a6b
  422d84:	jmp    0x422d98
  422d86:	push   DWORD PTR [ebp+0x8]
  422d89:	mov    DWORD PTR ds:0x45fbe4,0x1
  422d93:	call   0x422c21
  422d98:	pop    ecx
  422d99:	pop    ebp
  422d9a:	ret    
  422d9b:	push   0x0
  422d9d:	push   0x0
  422d9f:	push   DWORD PTR [esp+0xc]
  422da3:	call   0x422cc8
  422da8:	add    esp,0xc
  422dab:	ret    
  422dac:	push   0x0
  422dae:	push   0x1
  422db0:	push   DWORD PTR [esp+0xc]
  422db4:	call   0x422cc8
  422db9:	add    esp,0xc
  422dbc:	ret    
  422dbd:	push   0x1
  422dbf:	push   0x0
  422dc1:	push   0x0
  422dc3:	call   0x422cc8
  422dc8:	add    esp,0xc
  422dcb:	ret    
  422dcc:	push   0x1
  422dce:	push   0x1
  422dd0:	push   0x0
  422dd2:	call   0x422cc8
  422dd7:	add    esp,0xc
  422dda:	ret    
  422ddb:	push   ebp
  422ddc:	mov    ebp,esp
  422dde:	sub    esp,0x10c
  422de4:	mov    eax,ds:0x45f510
  422de9:	xor    eax,DWORD PTR [ebp+0x4]
  422dec:	mov    ecx,DWORD PTR [ebp+0x8]
  422def:	push   ebx
  422df0:	push   esi
  422df1:	mov    DWORD PTR [ebp-0x4],eax
  422df4:	xor    edx,edx
  422df6:	push   edi
  422df7:	xor    eax,eax
  422df9:	cmp    ecx,DWORD PTR [eax*8+0x45f2a0]
  422e00:	je     0x422e08
  422e02:	inc    eax
  422e03:	cmp    eax,0x12
  422e06:	jb     0x422df9
  422e08:	mov    esi,eax
  422e0a:	shl    esi,0x3
  422e0d:	cmp    ecx,DWORD PTR [esi+0x45f2a0]
  422e13:	jne    0x422f3c
  422e19:	mov    eax,ds:0x45fb9c
  422e1e:	cmp    eax,0x1
  422e21:	je     0x422f17
  422e27:	cmp    eax,edx
  422e29:	jne    0x422e38
  422e2b:	cmp    DWORD PTR ds:0x45f298,0x1
  422e32:	je     0x422f17
  422e38:	cmp    ecx,0xfc
  422e3e:	je     0x422f3c
  422e44:	push   0x104
  422e49:	lea    eax,[ebp-0x10c]
  422e4f:	push   eax
  422e50:	push   edx
  422e51:	mov    BYTE PTR [ebp-0x8],dl
  422e54:	call   DWORD PTR ds:0x428074
  422e5a:	test   eax,eax
  422e5c:	jne    0x422e71
  422e5e:	lea    eax,[ebp-0x10c]
  422e64:	push   0x4284c4
  422e69:	push   eax
  422e6a:	call   0x423d20
  422e6f:	pop    ecx
  422e70:	pop    ecx
  422e71:	lea    eax,[ebp-0x10c]
  422e77:	push   eax
  422e78:	lea    edi,[ebp-0x10c]
  422e7e:	call   0x423f50
  422e83:	inc    eax
  422e84:	cmp    eax,0x3c
  422e87:	pop    ecx
  422e88:	jbe    0x422eb3
  422e8a:	lea    eax,[ebp-0x10c]
  422e90:	push   eax
  422e91:	call   0x423f50
  422e96:	mov    edi,eax
  422e98:	lea    eax,[ebp-0x10c]
  422e9e:	sub    eax,0x3b
  422ea1:	push   0x3
  422ea3:	add    edi,eax
  422ea5:	push   0x4284c0
  422eaa:	push   edi
  422eab:	call   0x423e20
  422eb0:	add    esp,0x10
  422eb3:	push   edi
  422eb4:	call   0x423f50
  422eb9:	push   DWORD PTR [esi+0x45f2a4]
  422ebf:	mov    ebx,eax
  422ec1:	call   0x423f50
  422ec6:	lea    eax,[ebx+eax*1+0x1c]
  422eca:	pop    ecx
  422ecb:	add    eax,0x3
  422ece:	pop    ecx
  422ecf:	and    eax,0xfffffffc
  422ed2:	call   0x423990
  422ed7:	mov    ebx,esp
  422ed9:	push   0x4284a4
  422ede:	push   ebx
  422edf:	call   0x423d20
  422ee4:	push   edi
  422ee5:	push   ebx
  422ee6:	call   0x423d30
  422eeb:	push   0x4284a0
  422ef0:	push   ebx
  422ef1:	call   0x423d30
  422ef6:	push   DWORD PTR [esi+0x45f2a4]
  422efc:	push   ebx
  422efd:	call   0x423d30
  422f02:	push   0x12010
  422f07:	push   0x428478
  422f0c:	push   ebx
  422f0d:	call   0x423c22
  422f12:	add    esp,0x2c
  422f15:	jmp    0x422f3c
  422f17:	push   edx
  422f18:	lea    eax,[ebp+0x8]
  422f1b:	push   eax
  422f1c:	lea    esi,[esi+0x45f2a4]
  422f22:	push   DWORD PTR [esi]
  422f24:	call   0x423f50
  422f29:	pop    ecx
  422f2a:	push   eax
  422f2b:	push   DWORD PTR [esi]
  422f2d:	push   0xfffffff4
  422f2f:	call   DWORD PTR ds:0x428070
  422f35:	push   eax
  422f36:	call   DWORD PTR ds:0x42806c
  422f3c:	lea    esp,[ebp-0x118]
  422f42:	mov    ecx,DWORD PTR [ebp-0x4]
  422f45:	xor    ecx,DWORD PTR [ebp+0x4]
  422f48:	call   0x42400c
  422f4d:	pop    edi
  422f4e:	pop    esi
  422f4f:	pop    ebx
  422f50:	leave  
  422f51:	ret    
  422f52:	mov    eax,ds:0x45fb9c
  422f57:	cmp    eax,0x1
  422f5a:	je     0x422f69
  422f5c:	test   eax,eax
  422f5e:	jne    0x422f8a
  422f60:	cmp    DWORD PTR ds:0x45f298,0x1
  422f67:	jne    0x422f8a
  422f69:	push   0xfc
  422f6e:	call   0x422ddb
  422f73:	mov    eax,ds:0x45fbe8
  422f78:	test   eax,eax
  422f7a:	pop    ecx
  422f7b:	je     0x422f7f
  422f7d:	call   eax
  422f7f:	push   0xff
  422f84:	call   0x422ddb
  422f89:	pop    ecx
  422f8a:	ret    
  422f8b:	push   ebp
  422f8c:	mov    ebp,esp
  422f8e:	push   ecx
  422f8f:	push   ebx
  422f90:	push   esi
  422f91:	push   edi
  422f92:	call   0x4237f3
  422f97:	mov    edi,DWORD PTR [ebp+0x8]
  422f9a:	mov    esi,eax
  422f9c:	mov    edx,DWORD PTR [esi+0x54]
  422f9f:	mov    eax,ds:0x45f3b4
  422fa4:	mov    ecx,edx
  422fa6:	cmp    DWORD PTR [ecx],edi
  422fa8:	je     0x422fb7
  422faa:	lea    ebx,[eax+eax*2]
  422fad:	add    ecx,0xc
  422fb0:	lea    ebx,[edx+ebx*4]
  422fb3:	cmp    ecx,ebx
  422fb5:	jb     0x422fa6
  422fb7:	lea    eax,[eax+eax*2]
  422fba:	lea    eax,[edx+eax*4]
  422fbd:	cmp    ecx,eax
  422fbf:	jae    0x422fc5
  422fc1:	cmp    DWORD PTR [ecx],edi
  422fc3:	je     0x422fc7
  422fc5:	xor    ecx,ecx
  422fc7:	test   ecx,ecx
  422fc9:	je     0x4230e1
  422fcf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fd2:	test   ebx,ebx
  422fd4:	mov    DWORD PTR [ebp+0x8],ebx
  422fd7:	je     0x4230e1
  422fdd:	cmp    ebx,0x5
  422fe0:	jne    0x422fee
  422fe2:	and    DWORD PTR [ecx+0x8],0x0
  422fe6:	xor    eax,eax
  422fe8:	inc    eax
  422fe9:	jmp    0x4230ea
  422fee:	cmp    ebx,0x1
  422ff1:	je     0x4230dc
  422ff7:	mov    eax,DWORD PTR [esi+0x58]
  422ffa:	mov    DWORD PTR [ebp-0x4],eax
  422ffd:	mov    eax,DWORD PTR [ebp+0xc]
  423000:	mov    DWORD PTR [esi+0x58],eax
  423003:	mov    eax,DWORD PTR [ecx+0x4]
  423006:	cmp    eax,0x8
  423009:	jne    0x4230ce
  42300f:	mov    edx,DWORD PTR ds:0x45f3a8
  423015:	mov    eax,ds:0x45f3ac
  42301a:	add    eax,edx
  42301c:	cmp    edx,eax
  42301e:	jge    0x423047
  423020:	lea    eax,[edx+edx*2]
  423023:	shl    eax,0x2
  423026:	mov    edi,DWORD PTR [esi+0x54]
  423029:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42302e:	mov    edi,DWORD PTR ds:0x45f3a8
  423034:	mov    ebx,DWORD PTR ds:0x45f3ac
  42303a:	inc    edx
  42303b:	add    ebx,edi
  42303d:	add    eax,0xc
  423040:	cmp    edx,ebx
  423042:	jl     0x423026
  423044:	mov    ebx,DWORD PTR [ebp+0x8]
  423047:	mov    ecx,DWORD PTR [ecx]
  423049:	cmp    ecx,0xc000008e
  42304f:	mov    edi,DWORD PTR [esi+0x5c]
  423052:	jne    0x42305d
  423054:	mov    DWORD PTR [esi+0x5c],0x83
  42305b:	jmp    0x4230c1
  42305d:	cmp    ecx,0xc0000090
  423063:	jne    0x42306e
  423065:	mov    DWORD PTR [esi+0x5c],0x81
  42306c:	jmp    0x4230c1
  42306e:	cmp    ecx,0xc0000091
  423074:	jne    0x42307f
  423076:	mov    DWORD PTR [esi+0x5c],0x84
  42307d:	jmp    0x4230c1
  42307f:	cmp    ecx,0xc0000093
  423085:	jne    0x423090
  423087:	mov    DWORD PTR [esi+0x5c],0x85
  42308e:	jmp    0x4230c1
  423090:	cmp    ecx,0xc000008d
  423096:	jne    0x4230a1
  423098:	mov    DWORD PTR [esi+0x5c],0x82
  42309f:	jmp    0x4230c1
  4230a1:	cmp    ecx,0xc000008f
  4230a7:	jne    0x4230b2
  4230a9:	mov    DWORD PTR [esi+0x5c],0x86
  4230b0:	jmp    0x4230c1
  4230b2:	cmp    ecx,0xc0000092
  4230b8:	jne    0x4230c1
  4230ba:	mov    DWORD PTR [esi+0x5c],0x8a
  4230c1:	push   DWORD PTR [esi+0x5c]
  4230c4:	push   0x8
  4230c6:	call   ebx
  4230c8:	pop    ecx
  4230c9:	mov    DWORD PTR [esi+0x5c],edi
  4230cc:	jmp    0x4230d5
  4230ce:	and    DWORD PTR [ecx+0x8],0x0
  4230d2:	push   eax
  4230d3:	call   ebx
  4230d5:	mov    eax,DWORD PTR [ebp-0x4]
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x58],eax
  4230dc:	or     eax,0xffffffff
  4230df:	jmp    0x4230ea
  4230e1:	push   DWORD PTR [ebp+0xc]
  4230e4:	call   DWORD PTR ds:0x428078
  4230ea:	pop    edi
  4230eb:	pop    esi
  4230ec:	pop    ebx
  4230ed:	leave  
  4230ee:	ret    
  4230ef:	cmp    DWORD PTR ds:0x46034c,0x0
  4230f6:	jne    0x4230fd
  4230f8:	call   0x42452c
  4230fd:	push   esi
  4230fe:	mov    esi,DWORD PTR ds:0x460354
  423104:	test   esi,esi
  423106:	jne    0x42310f
  423108:	mov    esi,0x4284db
  42310d:	jmp    0x423154
  42310f:	mov    al,BYTE PTR [esi]
  423111:	cmp    al,0x22
  423113:	jne    0x42313d
  423115:	inc    esi
  423116:	mov    al,BYTE PTR [esi]
  423118:	cmp    al,0x22
  42311a:	je     0x42314d
  42311c:	test   al,al
  42311e:	je     0x423136
  423120:	movzx  eax,al
  423123:	push   eax
  423124:	call   0x42404b
  423129:	test   eax,eax
  42312b:	pop    ecx
  42312c:	je     0x42312f
  42312e:	inc    esi
  42312f:	inc    esi
  423130:	mov    al,BYTE PTR [esi]
  423132:	cmp    al,0x22
  423134:	jne    0x42311c
  423136:	cmp    BYTE PTR [esi],0x22
  423139:	jne    0x42314e
  42313b:	jmp    0x42314d
  42313d:	cmp    al,0x20
  42313f:	jbe    0x42314e
  423141:	inc    esi
  423142:	cmp    BYTE PTR [esi],0x20
  423145:	ja     0x423141
  423147:	jmp    0x42314e
  423149:	cmp    al,0x20
  42314b:	ja     0x423154
  42314d:	inc    esi
  42314e:	mov    al,BYTE PTR [esi]
  423150:	test   al,al
  423152:	jne    0x423149
  423154:	mov    eax,esi
  423156:	pop    esi
  423157:	ret    
  423158:	push   ebx
  423159:	xor    ebx,ebx
  42315b:	cmp    DWORD PTR ds:0x46034c,ebx
  423161:	push   esi
  423162:	push   edi
  423163:	jne    0x42316a
  423165:	call   0x42452c
  42316a:	mov    esi,DWORD PTR ds:0x45fb94
  423170:	xor    edi,edi
  423172:	cmp    esi,ebx
  423174:	jne    0x423188
  423176:	jmp    0x4231a8
  423178:	cmp    al,0x3d
  42317a:	je     0x42317d
  42317c:	inc    edi
  42317d:	push   esi
  42317e:	call   0x423f50
  423183:	pop    ecx
  423184:	lea    esi,[esi+eax*1+0x1]
  423188:	mov    al,BYTE PTR [esi]
  42318a:	cmp    al,bl
  42318c:	jne    0x423178
  42318e:	lea    eax,[edi*4+0x4]
  423195:	push   eax
  423196:	call   0x424662
  42319b:	mov    edi,eax
  42319d:	cmp    edi,ebx
  42319f:	pop    ecx
  4231a0:	mov    DWORD PTR ds:0x45fbc4,edi
  4231a6:	jne    0x4231ad
  4231a8:	or     eax,0xffffffff
  4231ab:	jmp    0x423205
  4231ad:	mov    esi,DWORD PTR ds:0x45fb94
  4231b3:	push   ebp
  4231b4:	jmp    0x4231e0
  4231b6:	push   esi
  4231b7:	call   0x423f50
  4231bc:	mov    ebp,eax
  4231be:	inc    ebp
  4231bf:	cmp    BYTE PTR [esi],0x3d
  4231c2:	pop    ecx
  4231c3:	je     0x4231de
  4231c5:	push   ebp
  4231c6:	call   0x424662
  4231cb:	cmp    eax,ebx
  4231cd:	pop    ecx
  4231ce:	mov    DWORD PTR [edi],eax
  4231d0:	je     0x423209
  4231d2:	push   esi
  4231d3:	push   eax
  4231d4:	call   0x423d20
  4231d9:	pop    ecx
  4231da:	pop    ecx
  4231db:	add    edi,0x4
  4231de:	add    esi,ebp
  4231e0:	cmp    BYTE PTR [esi],bl
  4231e2:	jne    0x4231b6
  4231e4:	push   DWORD PTR ds:0x45fb94
  4231ea:	call   0x42454a
  4231ef:	mov    DWORD PTR ds:0x45fb94,ebx
  4231f5:	mov    DWORD PTR [edi],ebx
  4231f7:	mov    DWORD PTR ds:0x460340,0x1
  423201:	xor    eax,eax
  423203:	pop    ecx
  423204:	pop    ebp
  423205:	pop    edi
  423206:	pop    esi
  423207:	pop    ebx
  423208:	ret    
  423209:	push   DWORD PTR ds:0x45fbc4
  42320f:	call   0x42454a
  423214:	mov    DWORD PTR ds:0x45fbc4,ebx
  42321a:	or     eax,0xffffffff
  42321d:	jmp    0x423203
  42321f:	push   ebp
  423220:	mov    ebp,esp
  423222:	push   ecx
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0xc]
  423227:	xor    edx,edx
  423229:	cmp    DWORD PTR [ebp+0x8],edx
  42322c:	push   edi
  42322d:	mov    DWORD PTR [esi],edx
  42322f:	mov    edi,ecx
  423231:	mov    DWORD PTR [ebx],0x1
  423237:	je     0x423242
  423239:	mov    ecx,DWORD PTR [ebp+0x8]
  42323c:	add    DWORD PTR [ebp+0x8],0x4
  423240:	mov    DWORD PTR [ecx],edi
  423242:	cmp    BYTE PTR [eax],0x22
  423245:	jne    0x423255
  423247:	xor    ecx,ecx
  423249:	test   edx,edx
  42324b:	sete   cl
  42324e:	inc    eax
  42324f:	mov    edx,ecx
  423251:	mov    cl,0x22
  423253:	jmp    0x423282
  423255:	inc    DWORD PTR [esi]
  423257:	test   edi,edi
  423259:	je     0x423260
  42325b:	mov    cl,BYTE PTR [eax]
  42325d:	mov    BYTE PTR [edi],cl
  42325f:	inc    edi
  423260:	mov    cl,BYTE PTR [eax]
  423262:	movzx  ebx,cl
  423265:	inc    eax
  423266:	test   BYTE PTR [ebx+0x460001],0x4
  42326d:	je     0x42327b
  42326f:	inc    DWORD PTR [esi]
  423271:	test   edi,edi
  423273:	je     0x42327a
  423275:	mov    bl,BYTE PTR [eax]
  423277:	mov    BYTE PTR [edi],bl
  423279:	inc    edi
  42327a:	inc    eax
  42327b:	test   cl,cl
  42327d:	mov    ebx,DWORD PTR [ebp+0xc]
  423280:	je     0x4232b4
  423282:	test   edx,edx
  423284:	jne    0x423242
  423286:	cmp    cl,0x20
  423289:	je     0x423290
  42328b:	cmp    cl,0x9
  42328e:	jne    0x423242
  423290:	test   edi,edi
  423292:	je     0x423298
  423294:	and    BYTE PTR [edi-0x1],0x0
  423298:	and    DWORD PTR [ebp-0x4],0x0
  42329c:	cmp    BYTE PTR [eax],0x0
  42329f:	je     0x42337b
  4232a5:	mov    cl,BYTE PTR [eax]
  4232a7:	cmp    cl,0x20
  4232aa:	je     0x4232b1
  4232ac:	cmp    cl,0x9
  4232af:	jne    0x4232b7
  4232b1:	inc    eax
  4232b2:	jmp    0x4232a5
  4232b4:	dec    eax
  4232b5:	jmp    0x423298
  4232b7:	cmp    BYTE PTR [eax],0x0
  4232ba:	je     0x42337b
  4232c0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232c4:	je     0x4232cf
  4232c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232c9:	add    DWORD PTR [ebp+0x8],0x4
  4232cd:	mov    DWORD PTR [ecx],edi
  4232cf:	inc    DWORD PTR [ebx]
  4232d1:	xor    ebx,ebx
  4232d3:	inc    ebx
  4232d4:	xor    edx,edx
  4232d6:	jmp    0x4232da
  4232d8:	inc    eax
  4232d9:	inc    edx
  4232da:	cmp    BYTE PTR [eax],0x5c
  4232dd:	je     0x4232d8
  4232df:	cmp    BYTE PTR [eax],0x22
  4232e2:	jne    0x42330a
  4232e4:	test   dl,0x1
  4232e7:	jne    0x423308
  4232e9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232ed:	je     0x4232fb
  4232ef:	lea    ecx,[eax+0x1]
  4232f2:	cmp    BYTE PTR [ecx],0x22
  4232f5:	jne    0x4232fb
  4232f7:	mov    eax,ecx
  4232f9:	jmp    0x4232fd
  4232fb:	xor    ebx,ebx
  4232fd:	xor    ecx,ecx
  4232ff:	cmp    DWORD PTR [ebp-0x4],ecx
  423302:	sete   cl
  423305:	mov    DWORD PTR [ebp-0x4],ecx
  423308:	shr    edx,1
  42330a:	test   edx,edx
  42330c:	je     0x42331b
  42330e:	test   edi,edi
  423310:	je     0x423316
  423312:	mov    BYTE PTR [edi],0x5c
  423315:	inc    edi
  423316:	inc    DWORD PTR [esi]
  423318:	dec    edx
  423319:	jne    0x42330e
  42331b:	mov    cl,BYTE PTR [eax]
  42331d:	test   cl,cl
  42331f:	je     0x423369
  423321:	cmp    DWORD PTR [ebp-0x4],0x0
  423325:	jne    0x423331
  423327:	cmp    cl,0x20
  42332a:	je     0x423369
  42332c:	cmp    cl,0x9
  42332f:	je     0x423369
  423331:	test   ebx,ebx
  423333:	je     0x423363
  423335:	test   edi,edi
  423337:	je     0x423352
  423339:	movzx  edx,cl
  42333c:	test   BYTE PTR [edx+0x460001],0x4
  423343:	je     0x42334b
  423345:	mov    BYTE PTR [edi],cl
  423347:	inc    edi
  423348:	inc    eax
  423349:	inc    DWORD PTR [esi]
  42334b:	mov    cl,BYTE PTR [eax]
  42334d:	mov    BYTE PTR [edi],cl
  42334f:	inc    edi
  423350:	jmp    0x423361
  423352:	movzx  ecx,cl
  423355:	test   BYTE PTR [ecx+0x460001],0x4
  42335c:	je     0x423361
  42335e:	inc    eax
  42335f:	inc    DWORD PTR [esi]
  423361:	inc    DWORD PTR [esi]
  423363:	inc    eax
  423364:	jmp    0x4232d1
  423369:	test   edi,edi
  42336b:	je     0x423371
  42336d:	and    BYTE PTR [edi],0x0
  423370:	inc    edi
  423371:	inc    DWORD PTR [esi]
  423373:	mov    ebx,DWORD PTR [ebp+0xc]
  423376:	jmp    0x42329c
  42337b:	mov    eax,DWORD PTR [ebp+0x8]
  42337e:	test   eax,eax
  423380:	je     0x423385
  423382:	and    DWORD PTR [eax],0x0
  423385:	inc    DWORD PTR [ebx]
  423387:	pop    edi
  423388:	pop    ebx
  423389:	leave  
  42338a:	ret    
  42338b:	push   ebp
  42338c:	mov    ebp,esp
  42338e:	push   ecx
  42338f:	push   ecx
  423390:	push   ebx
  423391:	push   esi
  423392:	push   edi
  423393:	xor    edi,edi
  423395:	cmp    DWORD PTR ds:0x46034c,edi
  42339b:	jne    0x4233a2
  42339d:	call   0x42452c
  4233a2:	and    BYTE PTR ds:0x45fcf4,0x0
  4233a9:	push   0x104
  4233ae:	mov    esi,0x45fbf0
  4233b3:	push   esi
  4233b4:	push   edi
  4233b5:	call   DWORD PTR ds:0x428074
  4233bb:	mov    eax,ds:0x460354
  4233c0:	cmp    eax,edi
  4233c2:	mov    DWORD PTR ds:0x45fbd4,esi
  4233c8:	je     0x4233d1
  4233ca:	cmp    BYTE PTR [eax],0x0
  4233cd:	mov    ebx,eax
  4233cf:	jne    0x4233d3
  4233d1:	mov    ebx,esi
  4233d3:	lea    eax,[ebp-0x4]
  4233d6:	push   eax
  4233d7:	push   edi
  4233d8:	lea    esi,[ebp-0x8]
  4233db:	xor    ecx,ecx
  4233dd:	mov    eax,ebx
  4233df:	call   0x42321f
  4233e4:	mov    esi,DWORD PTR [ebp-0x4]
  4233e7:	mov    eax,DWORD PTR [ebp-0x8]
  4233ea:	shl    esi,0x2
  4233ed:	add    eax,esi
  4233ef:	push   eax
  4233f0:	call   0x424662
  4233f5:	mov    edi,eax
  4233f7:	add    esp,0xc
  4233fa:	test   edi,edi
  4233fc:	jne    0x423403
  4233fe:	or     eax,0xffffffff
  423401:	jmp    0x423428
  423403:	lea    eax,[ebp-0x4]
  423406:	push   eax
  423407:	lea    ecx,[esi+edi*1]
  42340a:	push   edi
  42340b:	lea    esi,[ebp-0x8]
  42340e:	mov    eax,ebx
  423410:	call   0x42321f
  423415:	mov    eax,DWORD PTR [ebp-0x4]
  423418:	dec    eax
  423419:	pop    ecx
  42341a:	mov    ds:0x45fbb8,eax
  42341f:	pop    ecx
  423420:	mov    DWORD PTR ds:0x45fbbc,edi
  423426:	xor    eax,eax
  423428:	pop    edi
  423429:	pop    esi
  42342a:	pop    ebx
  42342b:	leave  
  42342c:	ret    
  42342d:	push   ecx
  42342e:	push   ecx
  42342f:	mov    eax,ds:0x45fcf8
  423434:	push   ebx
  423435:	push   ebp
  423436:	push   esi
  423437:	push   edi
  423438:	mov    edi,DWORD PTR ds:0x42808c
  42343e:	xor    ebx,ebx
  423440:	xor    esi,esi
  423442:	cmp    eax,ebx
  423444:	push   0x2
  423446:	pop    ebp
  423447:	jne    0x423476
  423449:	call   edi
  42344b:	mov    esi,eax
  42344d:	cmp    esi,ebx
  42344f:	je     0x42345d
  423451:	mov    DWORD PTR ds:0x45fcf8,0x1
  42345b:	jmp    0x42347b
  42345d:	call   DWORD PTR ds:0x428018
  423463:	cmp    eax,0x78
  423466:	jne    0x423471
  423468:	mov    eax,ebp
  42346a:	mov    ds:0x45fcf8,eax
  42346f:	jmp    0x423476
  423471:	mov    eax,ds:0x45fcf8
  423476:	cmp    eax,0x1
  423479:	jne    0x4234f8
  42347b:	cmp    esi,ebx
  42347d:	jne    0x423487
  42347f:	call   edi
  423481:	mov    esi,eax
  423483:	cmp    esi,ebx
  423485:	je     0x423500
  423487:	cmp    WORD PTR [esi],bx
  42348a:	mov    eax,esi
  42348c:	je     0x42349c
  42348e:	add    eax,ebp
  423490:	cmp    WORD PTR [eax],bx
  423493:	jne    0x42348e
  423495:	add    eax,ebp
  423497:	cmp    WORD PTR [eax],bx
  42349a:	jne    0x42348e
  42349c:	mov    edi,DWORD PTR ds:0x428088
  4234a2:	push   ebx
  4234a3:	push   ebx
  4234a4:	push   ebx
  4234a5:	sub    eax,esi
  4234a7:	push   ebx
  4234a8:	sar    eax,1
  4234aa:	inc    eax
  4234ab:	push   eax
  4234ac:	push   esi
  4234ad:	push   ebx
  4234ae:	push   ebx
  4234af:	mov    DWORD PTR [esp+0x34],eax
  4234b3:	call   edi
  4234b5:	mov    ebp,eax
  4234b7:	cmp    ebp,ebx
  4234b9:	je     0x4234ed
  4234bb:	push   ebp
  4234bc:	call   0x424662
  4234c1:	cmp    eax,ebx
  4234c3:	pop    ecx
  4234c4:	mov    DWORD PTR [esp+0x10],eax
  4234c8:	je     0x4234ed
  4234ca:	push   ebx
  4234cb:	push   ebx
  4234cc:	push   ebp
  4234cd:	push   eax
  4234ce:	push   DWORD PTR [esp+0x24]
  4234d2:	push   esi
  4234d3:	push   ebx
  4234d4:	push   ebx
  4234d5:	call   edi
  4234d7:	test   eax,eax
  4234d9:	jne    0x4234e9
  4234db:	push   DWORD PTR [esp+0x10]
  4234df:	call   0x42454a
  4234e4:	pop    ecx
  4234e5:	mov    DWORD PTR [esp+0x10],ebx
  4234e9:	mov    ebx,DWORD PTR [esp+0x10]
  4234ed:	push   esi
  4234ee:	call   DWORD PTR ds:0x428084
  4234f4:	mov    eax,ebx
  4234f6:	jmp    0x423548
  4234f8:	cmp    eax,ebp
  4234fa:	je     0x423504
  4234fc:	cmp    eax,ebx
  4234fe:	je     0x423504
  423500:	xor    eax,eax
  423502:	jmp    0x423548
  423504:	call   DWORD PTR ds:0x428080
  42350a:	mov    esi,eax
  42350c:	cmp    esi,ebx
  42350e:	je     0x423500
  423510:	cmp    BYTE PTR [esi],bl
  423512:	je     0x42351e
  423514:	inc    eax
  423515:	cmp    BYTE PTR [eax],bl
  423517:	jne    0x423514
  423519:	inc    eax
  42351a:	cmp    BYTE PTR [eax],bl
  42351c:	jne    0x423514
  42351e:	sub    eax,esi
  423520:	inc    eax
  423521:	mov    ebp,eax
  423523:	push   ebp
  423524:	call   0x424662
  423529:	mov    edi,eax
  42352b:	cmp    edi,ebx
  42352d:	pop    ecx
  42352e:	jne    0x423534
  423530:	xor    edi,edi
  423532:	jmp    0x42353f
  423534:	push   ebp
  423535:	push   esi
  423536:	push   edi
  423537:	call   0x424680
  42353c:	add    esp,0xc
  42353f:	push   esi
  423540:	call   DWORD PTR ds:0x42807c
  423546:	mov    eax,edi
  423548:	pop    edi
  423549:	pop    esi
  42354a:	pop    ebp
  42354b:	pop    ebx
  42354c:	pop    ecx
  42354d:	pop    ecx
  42354e:	ret    
  42354f:	sub    esp,0x48
  423552:	push   ebx
  423553:	mov    ebx,0x480
  423558:	push   ebx
  423559:	call   0x424662
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	jne    0x42356b
  423563:	or     eax,0xffffffff
  423566:	jmp    0x423748
  42356b:	mov    ds:0x460240,eax
  423570:	mov    DWORD PTR ds:0x460228,0x20
  42357a:	lea    ecx,[eax+0x480]
  423580:	jmp    0x4235a0
  423582:	and    BYTE PTR [eax+0x4],0x0
  423586:	or     DWORD PTR [eax],0xffffffff
  423589:	and    DWORD PTR [eax+0x8],0x0
  42358d:	mov    BYTE PTR [eax+0x5],0xa
  423591:	mov    ecx,DWORD PTR ds:0x460240
  423597:	add    eax,0x24
  42359a:	add    ecx,0x480
  4235a0:	cmp    eax,ecx
  4235a2:	jb     0x423582
  4235a4:	push   ebp
  4235a5:	push   esi
  4235a6:	push   edi
  4235a7:	lea    eax,[esp+0x14]
  4235ab:	push   eax
  4235ac:	call   DWORD PTR ds:0x428058
  4235b2:	cmp    WORD PTR [esp+0x46],0x0
  4235b8:	je     0x4236a7
  4235be:	mov    eax,DWORD PTR [esp+0x48]
  4235c2:	test   eax,eax
  4235c4:	je     0x4236a7
  4235ca:	mov    edi,DWORD PTR [eax]
  4235cc:	lea    ebp,[eax+0x4]
  4235cf:	lea    eax,[edi+ebp*1]
  4235d2:	mov    DWORD PTR [esp+0x10],eax
  4235d6:	mov    eax,0x800
  4235db:	cmp    edi,eax
  4235dd:	jl     0x4235e1
  4235df:	mov    edi,eax
  4235e1:	cmp    DWORD PTR ds:0x460228,edi
  4235e7:	jge    0x423637
  4235e9:	mov    esi,0x460244
  4235ee:	push   ebx
  4235ef:	call   0x424662
  4235f4:	test   eax,eax
  4235f6:	pop    ecx
  4235f7:	je     0x423631
  4235f9:	add    DWORD PTR ds:0x460228,0x20
  423600:	mov    DWORD PTR [esi],eax
  423602:	lea    ecx,[eax+0x480]
  423608:	jmp    0x423620
  42360a:	and    BYTE PTR [eax+0x4],0x0
  42360e:	or     DWORD PTR [eax],0xffffffff
  423611:	and    DWORD PTR [eax+0x8],0x0
  423615:	mov    BYTE PTR [eax+0x5],0xa
  423619:	mov    ecx,DWORD PTR [esi]
  42361b:	add    eax,0x24
  42361e:	add    ecx,ebx
  423620:	cmp    eax,ecx
  423622:	jb     0x42360a
  423624:	add    esi,0x4
  423627:	cmp    DWORD PTR ds:0x460228,edi
  42362d:	jl     0x4235ee
  42362f:	jmp    0x423637
  423631:	mov    edi,DWORD PTR ds:0x460228
  423637:	xor    ebx,ebx
  423639:	test   edi,edi
  42363b:	jle    0x4236a7
  42363d:	mov    eax,DWORD PTR [esp+0x10]
  423641:	mov    eax,DWORD PTR [eax]
  423643:	cmp    eax,0xffffffff
  423646:	je     0x42369c
  423648:	mov    cl,BYTE PTR [ebp+0x0]
  42364b:	test   cl,0x1
  42364e:	je     0x42369c
  423650:	test   cl,0x8
  423653:	jne    0x423660
  423655:	push   eax
  423656:	call   DWORD PTR ds:0x428094
  42365c:	test   eax,eax
  42365e:	je     0x42369c
  423660:	mov    ecx,ebx
  423662:	mov    eax,ebx
  423664:	and    eax,0x1f
  423667:	lea    eax,[eax+eax*8]
  42366a:	sar    ecx,0x5
  42366d:	mov    ecx,DWORD PTR [ecx*4+0x460240]
  423674:	lea    esi,[ecx+eax*4]
  423677:	mov    eax,DWORD PTR [esp+0x10]
  42367b:	mov    eax,DWORD PTR [eax]
  42367d:	mov    DWORD PTR [esi],eax
  42367f:	mov    al,BYTE PTR [ebp+0x0]
  423682:	mov    BYTE PTR [esi+0x4],al
  423685:	lea    eax,[esi+0xc]
  423688:	push   0xfa0
  42368d:	push   eax
  42368e:	call   0x4249cd
  423693:	test   eax,eax
  423695:	pop    ecx
  423696:	pop    ecx
  423697:	je     0x4236c7
  423699:	inc    DWORD PTR [esi+0x8]
  42369c:	add    DWORD PTR [esp+0x10],0x4
  4236a1:	inc    ebx
  4236a2:	inc    ebp
  4236a3:	cmp    ebx,edi
  4236a5:	jl     0x42363d
  4236a7:	xor    ebx,ebx
  4236a9:	mov    ecx,DWORD PTR ds:0x460240
  4236af:	lea    eax,[ebx+ebx*8]
  4236b2:	lea    esi,[ecx+eax*4]
  4236b5:	cmp    DWORD PTR [esi],0xffffffff
  4236b8:	jne    0x423729
  4236ba:	test   ebx,ebx
  4236bc:	mov    BYTE PTR [esi+0x4],0x81
  4236c0:	jne    0x4236cc
  4236c2:	push   0xfffffff6
  4236c4:	pop    eax
  4236c5:	jmp    0x4236d6
  4236c7:	or     eax,0xffffffff
  4236ca:	jmp    0x423745
  4236cc:	mov    eax,ebx
  4236ce:	dec    eax
  4236cf:	neg    eax
  4236d1:	sbb    eax,eax
  4236d3:	add    eax,0xfffffff5
  4236d6:	push   eax
  4236d7:	call   DWORD PTR ds:0x428070
  4236dd:	mov    edi,eax
  4236df:	cmp    edi,0xffffffff
  4236e2:	je     0x423723
  4236e4:	push   edi
  4236e5:	call   DWORD PTR ds:0x428094
  4236eb:	test   eax,eax
  4236ed:	je     0x423723
  4236ef:	and    eax,0xff
  4236f4:	cmp    eax,0x2
  4236f7:	mov    DWORD PTR [esi],edi
  4236f9:	jne    0x423701
  4236fb:	or     BYTE PTR [esi+0x4],0x40
  4236ff:	jmp    0x42370a
  423701:	cmp    eax,0x3
  423704:	jne    0x42370a
  423706:	or     BYTE PTR [esi+0x4],0x8
  42370a:	lea    eax,[esi+0xc]
  42370d:	push   0xfa0
  423712:	push   eax
  423713:	call   0x4249cd
  423718:	test   eax,eax
  42371a:	pop    ecx
  42371b:	pop    ecx
  42371c:	je     0x4236c7
  42371e:	inc    DWORD PTR [esi+0x8]
  423721:	jmp    0x42372d
  423723:	or     BYTE PTR [esi+0x4],0x40
  423727:	jmp    0x42372d
  423729:	or     BYTE PTR [esi+0x4],0x80
  42372d:	inc    ebx
  42372e:	cmp    ebx,0x3
  423731:	jl     0x4236a9
  423737:	push   DWORD PTR ds:0x460228
  42373d:	call   DWORD PTR ds:0x428090
  423743:	xor    eax,eax
  423745:	pop    edi
  423746:	pop    esi
  423747:	pop    ebp
  423748:	pop    ebx
  423749:	add    esp,0x48
  42374c:	ret    
  42374d:	push   0xc
  42374f:	push   0x4284e0
  423754:	call   0x423940
  423759:	mov    DWORD PTR [ebp-0x1c],0x428f38
  423760:	cmp    DWORD PTR [ebp-0x1c],0x428f38
  423767:	jae    0x42378b
  423769:	and    DWORD PTR [ebp-0x4],0x0
  42376d:	mov    eax,DWORD PTR [ebp-0x1c]
  423770:	mov    eax,DWORD PTR [eax]
  423772:	test   eax,eax
  423774:	je     0x423781
  423776:	call   eax
  423778:	jmp    0x423781
  42377a:	xor    eax,eax
  42377c:	inc    eax
  42377d:	ret    
  42377e:	mov    esp,DWORD PTR [ebp-0x18]
  423781:	or     DWORD PTR [ebp-0x4],0xffffffff
  423785:	add    DWORD PTR [ebp-0x1c],0x4
  423789:	jmp    0x423760
  42378b:	call   0x42397b
  423790:	ret    
  423791:	push   0xc
  423793:	push   0x4284f0
  423798:	call   0x423940
  42379d:	mov    DWORD PTR [ebp-0x1c],0x428f40
  4237a4:	cmp    DWORD PTR [ebp-0x1c],0x428f40
  4237ab:	jae    0x4237cf
  4237ad:	and    DWORD PTR [ebp-0x4],0x0
  4237b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237b4:	mov    eax,DWORD PTR [eax]
  4237b6:	test   eax,eax
  4237b8:	je     0x4237c5
  4237ba:	call   eax
  4237bc:	jmp    0x4237c5
  4237be:	xor    eax,eax
  4237c0:	inc    eax
  4237c1:	ret    
  4237c2:	mov    esp,DWORD PTR [ebp-0x18]
  4237c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237c9:	add    DWORD PTR [ebp-0x1c],0x4
  4237cd:	jmp    0x4237a4
  4237cf:	call   0x42397b
  4237d4:	ret    
  4237d5:	call   0x423a16
  4237da:	mov    eax,ds:0x45f3dc
  4237df:	cmp    eax,0xffffffff
  4237e2:	je     0x4237f2
  4237e4:	push   eax
  4237e5:	call   DWORD PTR ds:0x42809c
  4237eb:	or     DWORD PTR ds:0x45f3dc,0xffffffff
  4237f2:	ret    
  4237f3:	push   ebx
  4237f4:	push   esi
  4237f5:	call   DWORD PTR ds:0x428018
  4237fb:	push   DWORD PTR ds:0x45f3dc
  423801:	mov    ebx,eax
  423803:	call   DWORD PTR ds:0x4280ac
  423809:	mov    esi,eax
  42380b:	test   esi,esi
  42380d:	jne    0x423858
  42380f:	push   0x88
  423814:	push   0x1
  423816:	call   0x424a58
  42381b:	mov    esi,eax
  42381d:	test   esi,esi
  42381f:	pop    ecx
  423820:	pop    ecx
  423821:	je     0x423850
  423823:	push   esi
  423824:	push   DWORD PTR ds:0x45f3dc
  42382a:	call   DWORD PTR ds:0x4280a8
  423830:	test   eax,eax
  423832:	je     0x423850
  423834:	mov    DWORD PTR [esi+0x54],0x45f330
  42383b:	mov    DWORD PTR [esi+0x14],0x1
  423842:	call   DWORD PTR ds:0x4280a4
  423848:	or     DWORD PTR [esi+0x4],0xffffffff
  42384c:	mov    DWORD PTR [esi],eax
  42384e:	jmp    0x423858
  423850:	push   0x10
  423852:	call   0x422a06
  423857:	pop    ecx
  423858:	push   ebx
  423859:	call   DWORD PTR ds:0x4280a0
  42385f:	mov    eax,esi
  423861:	pop    esi
  423862:	pop    ebx
  423863:	ret    
  423864:	call   0x4239cd
  423869:	test   eax,eax
  42386b:	je     0x42387d
  42386d:	call   DWORD PTR ds:0x4280b0
  423873:	cmp    eax,0xffffffff
  423876:	mov    ds:0x45f3dc,eax
  42387b:	jne    0x423885
  42387d:	call   0x4237d5
  423882:	xor    eax,eax
  423884:	ret    
  423885:	push   esi
  423886:	push   0x88
  42388b:	push   0x1
  42388d:	call   0x424a58
  423892:	mov    esi,eax
  423894:	test   esi,esi
  423896:	pop    ecx
  423897:	pop    ecx
  423898:	je     0x4238ca
  42389a:	push   esi
  42389b:	push   DWORD PTR ds:0x45f3dc
  4238a1:	call   DWORD PTR ds:0x4280a8
  4238a7:	test   eax,eax
  4238a9:	je     0x4238ca
  4238ab:	mov    DWORD PTR [esi+0x54],0x45f330
  4238b2:	mov    DWORD PTR [esi+0x14],0x1
  4238b9:	call   DWORD PTR ds:0x4280a4
  4238bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238c3:	mov    DWORD PTR [esi],eax
  4238c5:	xor    eax,eax
  4238c7:	inc    eax
  4238c8:	pop    esi
  4238c9:	ret    
  4238ca:	call   0x4237d5
  4238cf:	xor    eax,eax
  4238d1:	pop    esi
  4238d2:	ret    
  4238d3:	cmp    DWORD PTR ds:0x45fba4,0x2
  4238da:	jne    0x4238e9
  4238dc:	cmp    DWORD PTR ds:0x45fbb0,0x5
  4238e3:	jb     0x4238e9
  4238e5:	xor    eax,eax
  4238e7:	inc    eax
  4238e8:	ret    
  4238e9:	push   0x3
  4238eb:	pop    eax
  4238ec:	ret    
  4238ed:	xor    eax,eax
  4238ef:	cmp    DWORD PTR [esp+0x4],eax
  4238f3:	push   0x0
  4238f5:	sete   al
  4238f8:	push   0x1000
  4238fd:	push   eax
  4238fe:	call   DWORD PTR ds:0x4280b8
  423904:	test   eax,eax
  423906:	mov    ds:0x460220,eax
  42390b:	je     0x423937
  42390d:	call   0x4238d3
  423912:	cmp    eax,0x3
  423915:	mov    ds:0x460224,eax
  42391a:	jne    0x42393a
  42391c:	push   0x3f8
  423921:	call   0x424cda
  423926:	test   eax,eax
  423928:	pop    ecx
  423929:	jne    0x42393a
  42392b:	push   DWORD PTR ds:0x460220
  423931:	call   DWORD PTR ds:0x4280b4
  423937:	xor    eax,eax
  423939:	ret    
  42393a:	xor    eax,eax
  42393c:	inc    eax
  42393d:	ret    
  42393e:	int3   
  42393f:	int3   
  423940:	push   0x425808
  423945:	mov    eax,fs:0x0
  42394b:	push   eax
  42394c:	mov    eax,DWORD PTR [esp+0x10]
  423950:	mov    DWORD PTR [esp+0x10],ebp
  423954:	lea    ebp,[esp+0x10]
  423958:	sub    esp,eax
  42395a:	push   ebx
  42395b:	push   esi
  42395c:	push   edi
  42395d:	mov    eax,DWORD PTR [ebp-0x8]
  423960:	mov    DWORD PTR [ebp-0x18],esp
  423963:	push   eax
  423964:	mov    eax,DWORD PTR [ebp-0x4]
  423967:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42396e:	mov    DWORD PTR [ebp-0x8],eax
  423971:	lea    eax,[ebp-0x10]
  423974:	mov    fs:0x0,eax
  42397a:	ret    
  42397b:	mov    ecx,DWORD PTR [ebp-0x10]
  42397e:	mov    DWORD PTR fs:0x0,ecx
  423985:	pop    ecx
  423986:	pop    edi
  423987:	pop    esi
  423988:	pop    ebx
  423989:	leave  
  42398a:	push   ecx
  42398b:	ret    
  42398c:	int3   
  42398d:	int3   
  42398e:	int3   
  42398f:	int3   
  423990:	cmp    eax,0x1000
  423995:	jae    0x4239a5
  423997:	neg    eax
  423999:	add    eax,esp
  42399b:	add    eax,0x4
  42399e:	test   DWORD PTR [eax],eax
  4239a0:	xchg   esp,eax
  4239a1:	mov    eax,DWORD PTR [eax]
  4239a3:	push   eax
  4239a4:	ret    
  4239a5:	push   ecx
  4239a6:	lea    ecx,[esp+0x8]
  4239aa:	sub    ecx,0x1000
  4239b0:	sub    eax,0x1000
  4239b5:	test   DWORD PTR [ecx],eax
  4239b7:	cmp    eax,0x1000
  4239bc:	jae    0x4239aa
  4239be:	sub    ecx,eax
  4239c0:	mov    eax,esp
  4239c2:	test   DWORD PTR [ecx],eax
  4239c4:	mov    esp,ecx
  4239c6:	mov    ecx,DWORD PTR [eax]
  4239c8:	mov    eax,DWORD PTR [eax+0x4]
  4239cb:	push   eax
  4239cc:	ret    
  4239cd:	push   esi
  4239ce:	push   edi
  4239cf:	xor    esi,esi
  4239d1:	mov    edi,0x45fd00
  4239d6:	cmp    DWORD PTR [esi*8+0x45f3f4],0x1
  4239de:	jne    0x4239fe
  4239e0:	lea    eax,[esi*8+0x45f3f0]
  4239e7:	mov    DWORD PTR [eax],edi
  4239e9:	push   0xfa0
  4239ee:	push   DWORD PTR [eax]
  4239f0:	add    edi,0x18
  4239f3:	call   0x4249cd
  4239f8:	test   eax,eax
  4239fa:	pop    ecx
  4239fb:	pop    ecx
  4239fc:	je     0x423a0a
  4239fe:	inc    esi
  4239ff:	cmp    esi,0x24
  423a02:	jl     0x4239d6
  423a04:	xor    eax,eax
  423a06:	inc    eax
  423a07:	pop    edi
  423a08:	pop    esi
  423a09:	ret    
  423a0a:	and    DWORD PTR [esi*8+0x45f3f0],0x0
  423a12:	xor    eax,eax
  423a14:	jmp    0x423a07
  423a16:	push   ebx
  423a17:	mov    ebx,DWORD PTR ds:0x428098
  423a1d:	push   esi
  423a1e:	mov    esi,0x45f3f0
  423a23:	push   edi
  423a24:	mov    edi,DWORD PTR [esi]
  423a26:	test   edi,edi
  423a28:	je     0x423a3d
  423a2a:	cmp    DWORD PTR [esi+0x4],0x1
  423a2e:	je     0x423a3d
  423a30:	push   edi
  423a31:	call   ebx
  423a33:	push   edi
  423a34:	call   0x42454a
  423a39:	and    DWORD PTR [esi],0x0
  423a3c:	pop    ecx
  423a3d:	add    esi,0x8
  423a40:	cmp    esi,0x45f510
  423a46:	jl     0x423a24
  423a48:	mov    esi,0x45f3f0
  423a4d:	pop    edi
  423a4e:	mov    eax,DWORD PTR [esi]
  423a50:	test   eax,eax
  423a52:	je     0x423a5d
  423a54:	cmp    DWORD PTR [esi+0x4],0x1
  423a58:	jne    0x423a5d
  423a5a:	push   eax
  423a5b:	call   ebx
  423a5d:	add    esi,0x8
  423a60:	cmp    esi,0x45f510
  423a66:	jl     0x423a4e
  423a68:	pop    esi
  423a69:	pop    ebx
  423a6a:	ret    
  423a6b:	push   ebp
  423a6c:	mov    ebp,esp
  423a6e:	mov    eax,DWORD PTR [ebp+0x8]
  423a71:	push   DWORD PTR [eax*8+0x45f3f0]
  423a78:	call   DWORD PTR ds:0x428020
  423a7e:	pop    ebp
  423a7f:	ret    
  423a80:	push   ebp
  423a81:	mov    ebp,esp
  423a83:	push   esi
  423a84:	mov    esi,DWORD PTR [ebp+0x8]
  423a87:	lea    esi,[esi*8+0x45f3f0]
  423a8e:	cmp    DWORD PTR [esi],0x0
  423a91:	je     0x423a98
  423a93:	xor    eax,eax
  423a95:	inc    eax
  423a96:	jmp    0x423afc
  423a98:	push   edi
  423a99:	push   0x18
  423a9b:	call   0x424662
  423aa0:	mov    edi,eax
  423aa2:	test   edi,edi
  423aa4:	pop    ecx
  423aa5:	jne    0x423ab6
  423aa7:	call   0x4258e0
  423aac:	mov    DWORD PTR [eax],0xc
  423ab2:	xor    eax,eax
  423ab4:	jmp    0x423afb
  423ab6:	push   0xa
  423ab8:	call   0x423aff
  423abd:	cmp    DWORD PTR [esi],0x0
  423ac0:	pop    ecx
  423ac1:	jne    0x423ae9
  423ac3:	push   0xfa0
  423ac8:	push   edi
  423ac9:	call   0x4249cd
  423ace:	test   eax,eax
  423ad0:	pop    ecx
  423ad1:	pop    ecx
  423ad2:	jne    0x423ae5
  423ad4:	push   edi
  423ad5:	call   0x42454a
  423ada:	push   0xa
  423adc:	call   0x423a6b
  423ae1:	pop    ecx
  423ae2:	pop    ecx
  423ae3:	jmp    0x423aa7
  423ae5:	mov    DWORD PTR [esi],edi
  423ae7:	jmp    0x423af0
  423ae9:	push   edi
  423aea:	call   0x42454a
  423aef:	pop    ecx
  423af0:	push   0xa
  423af2:	call   0x423a6b
  423af7:	xor    eax,eax
  423af9:	pop    ecx
  423afa:	inc    eax
  423afb:	pop    edi
  423afc:	pop    esi
  423afd:	pop    ebp
  423afe:	ret    
  423aff:	push   ebp
  423b00:	mov    ebp,esp
  423b02:	mov    eax,DWORD PTR [ebp+0x8]
  423b05:	push   esi
  423b06:	lea    esi,[eax*8+0x45f3f0]
  423b0d:	cmp    DWORD PTR [esi],0x0
  423b10:	jne    0x423b25
  423b12:	push   eax
  423b13:	call   0x423a80
  423b18:	test   eax,eax
  423b1a:	pop    ecx
  423b1b:	jne    0x423b25
  423b1d:	push   0x11
  423b1f:	call   0x422a06
  423b24:	pop    ecx
  423b25:	push   DWORD PTR [esi]
  423b27:	call   DWORD PTR ds:0x4280c4
  423b2d:	pop    esi
  423b2e:	pop    ebp
  423b2f:	ret    
  423b30:	push   esi
  423b31:	push   DWORD PTR ds:0x460348
  423b37:	call   0x425a96
  423b3c:	pop    ecx
  423b3d:	mov    ecx,DWORD PTR ds:0x460344
  423b43:	mov    esi,eax
  423b45:	mov    eax,ds:0x460348
  423b4a:	mov    edx,ecx
  423b4c:	sub    edx,eax
  423b4e:	add    edx,0x4
  423b51:	cmp    esi,edx
  423b53:	jae    0x423ba3
  423b55:	mov    ecx,0x800
  423b5a:	cmp    esi,ecx
  423b5c:	jae    0x423b60
  423b5e:	mov    ecx,esi
  423b60:	add    ecx,esi
  423b62:	push   ecx
  423b63:	push   eax
  423b64:	call   0x4258e9
  423b69:	test   eax,eax
  423b6b:	pop    ecx
  423b6c:	pop    ecx
  423b6d:	jne    0x423b86
  423b6f:	add    esi,0x10
  423b72:	push   esi
  423b73:	push   DWORD PTR ds:0x460348
  423b79:	call   0x4258e9
  423b7e:	test   eax,eax
  423b80:	pop    ecx
  423b81:	pop    ecx
  423b82:	jne    0x423b86
  423b84:	pop    esi
  423b85:	ret    
  423b86:	mov    ecx,DWORD PTR ds:0x460344
  423b8c:	sub    ecx,DWORD PTR ds:0x460348
  423b92:	mov    ds:0x460348,eax
  423b97:	sar    ecx,0x2
  423b9a:	lea    ecx,[eax+ecx*4]
  423b9d:	mov    DWORD PTR ds:0x460344,ecx
  423ba3:	mov    DWORD PTR [ecx],edi
  423ba5:	add    DWORD PTR ds:0x460344,0x4
  423bac:	mov    eax,edi
  423bae:	pop    esi
  423baf:	ret    
  423bb0:	push   0x80
  423bb5:	call   0x424662
  423bba:	test   eax,eax
  423bbc:	pop    ecx
  423bbd:	mov    ds:0x460348,eax
  423bc2:	jne    0x423bc8
  423bc4:	push   0x18
  423bc6:	pop    eax
  423bc7:	ret    
  423bc8:	and    DWORD PTR [eax],0x0
  423bcb:	mov    eax,ds:0x460348
  423bd0:	mov    ds:0x460344,eax
  423bd5:	xor    eax,eax
  423bd7:	ret    
  423bd8:	push   0xc
  423bda:	push   0x428500
  423bdf:	call   0x423940
  423be4:	call   0x422c51
  423be9:	and    DWORD PTR [ebp-0x4],0x0
  423bed:	mov    edi,DWORD PTR [ebp+0x8]
  423bf0:	call   0x423b30
  423bf5:	mov    DWORD PTR [ebp-0x1c],eax
  423bf8:	or     DWORD PTR [ebp-0x4],0xffffffff
  423bfc:	call   0x423c0a
  423c01:	mov    eax,DWORD PTR [ebp-0x1c]
  423c04:	call   0x42397b
  423c09:	ret    
  423c0a:	call   0x422c5a
  423c0f:	ret    
  423c10:	push   DWORD PTR [esp+0x4]
  423c14:	call   0x423bd8
  423c19:	neg    eax
  423c1b:	sbb    eax,eax
  423c1d:	neg    eax
  423c1f:	pop    ecx
  423c20:	dec    eax
  423c21:	ret    
  423c22:	push   ebp
  423c23:	mov    ebp,esp
  423c25:	sub    esp,0x10
  423c28:	push   ebx
  423c29:	xor    ebx,ebx
  423c2b:	cmp    DWORD PTR ds:0x45fe50,ebx
  423c31:	push   esi
  423c32:	push   edi
  423c33:	jne    0x423ca2
  423c35:	push   0x428570
  423c3a:	call   DWORD PTR ds:0x4280c8
  423c40:	mov    edi,eax
  423c42:	cmp    edi,ebx
  423c44:	je     0x423cdd
  423c4a:	mov    esi,DWORD PTR ds:0x428010
  423c50:	push   0x428564
  423c55:	push   edi
  423c56:	call   esi
  423c58:	test   eax,eax
  423c5a:	mov    ds:0x45fe50,eax
  423c5f:	je     0x423cdd
  423c61:	push   0x428554
  423c66:	push   edi
  423c67:	call   esi
  423c69:	push   0x428540
  423c6e:	push   edi
  423c6f:	mov    ds:0x45fe54,eax
  423c74:	call   esi
  423c76:	cmp    DWORD PTR ds:0x45fba4,0x2
  423c7d:	mov    ds:0x45fe58,eax
  423c82:	jne    0x423ca2
  423c84:	push   0x428524
  423c89:	push   edi
  423c8a:	call   esi
  423c8c:	test   eax,eax
  423c8e:	mov    ds:0x45fe60,eax
  423c93:	je     0x423ca2
  423c95:	push   0x42850c
  423c9a:	push   edi
  423c9b:	call   esi
  423c9d:	mov    ds:0x45fe5c,eax
  423ca2:	mov    eax,ds:0x45fe5c
  423ca7:	test   eax,eax
  423ca9:	je     0x423ce7
  423cab:	call   eax
  423cad:	test   eax,eax
  423caf:	je     0x423cce
  423cb1:	lea    ecx,[ebp-0x4]
  423cb4:	push   ecx
  423cb5:	push   0xc
  423cb7:	lea    ecx,[ebp-0x10]
  423cba:	push   ecx
  423cbb:	push   0x1
  423cbd:	push   eax
  423cbe:	call   DWORD PTR ds:0x45fe60
  423cc4:	test   eax,eax
  423cc6:	je     0x423cce
  423cc8:	test   BYTE PTR [ebp-0x8],0x1
  423ccc:	jne    0x423ce7
  423cce:	cmp    DWORD PTR ds:0x45fbb0,0x4
  423cd5:	jb     0x423ce1
  423cd7:	or     BYTE PTR [ebp+0x12],0x20
  423cdb:	jmp    0x423d06
  423cdd:	xor    eax,eax
  423cdf:	jmp    0x423d16
  423ce1:	or     BYTE PTR [ebp+0x12],0x4
  423ce5:	jmp    0x423d06
  423ce7:	mov    eax,ds:0x45fe54
  423cec:	test   eax,eax
  423cee:	je     0x423d06
  423cf0:	call   eax
  423cf2:	mov    ebx,eax
  423cf4:	test   ebx,ebx
  423cf6:	je     0x423d06
  423cf8:	mov    eax,ds:0x45fe58
  423cfd:	test   eax,eax
  423cff:	je     0x423d06
  423d01:	push   ebx
  423d02:	call   eax
  423d04:	mov    ebx,eax
  423d06:	push   DWORD PTR [ebp+0x10]
  423d09:	push   DWORD PTR [ebp+0xc]
  423d0c:	push   DWORD PTR [ebp+0x8]
  423d0f:	push   ebx
  423d10:	call   DWORD PTR ds:0x45fe50
  423d16:	pop    edi
  423d17:	pop    esi
  423d18:	pop    ebx
  423d19:	leave  
  423d1a:	ret    
  423d1b:	int3   
  423d1c:	int3   
  423d1d:	int3   
  423d1e:	int3   
  423d1f:	int3   
  423d20:	push   edi
  423d21:	mov    edi,DWORD PTR [esp+0x8]
  423d25:	jmp    0x423d95
  423d27:	lea    esp,[esp+0x0]
  423d2e:	mov    edi,edi
  423d30:	mov    ecx,DWORD PTR [esp+0x4]
  423d34:	push   edi
  423d35:	test   ecx,0x3
  423d3b:	je     0x423d50
  423d3d:	mov    al,BYTE PTR [ecx]
  423d3f:	add    ecx,0x1
  423d42:	test   al,al
  423d44:	je     0x423d83
  423d46:	test   ecx,0x3
  423d4c:	jne    0x423d3d
  423d4e:	mov    edi,edi
  423d50:	mov    eax,DWORD PTR [ecx]
  423d52:	mov    edx,0x7efefeff
  423d57:	add    edx,eax
  423d59:	xor    eax,0xffffffff
  423d5c:	xor    eax,edx
  423d5e:	add    ecx,0x4
  423d61:	test   eax,0x81010100
  423d66:	je     0x423d50
  423d68:	mov    eax,DWORD PTR [ecx-0x4]
  423d6b:	test   al,al
  423d6d:	je     0x423d92
  423d6f:	test   ah,ah
  423d71:	je     0x423d8d
  423d73:	test   eax,0xff0000
  423d78:	je     0x423d88
  423d7a:	test   eax,0xff000000
  423d7f:	je     0x423d83
  423d81:	jmp    0x423d50
  423d83:	lea    edi,[ecx-0x1]
  423d86:	jmp    0x423d95
  423d88:	lea    edi,[ecx-0x2]
  423d8b:	jmp    0x423d95
  423d8d:	lea    edi,[ecx-0x3]
  423d90:	jmp    0x423d95
  423d92:	lea    edi,[ecx-0x4]
  423d95:	mov    ecx,DWORD PTR [esp+0xc]
  423d99:	test   ecx,0x3
  423d9f:	je     0x423dbe
  423da1:	mov    dl,BYTE PTR [ecx]
  423da3:	add    ecx,0x1
  423da6:	test   dl,dl
  423da8:	je     0x423e10
  423daa:	mov    BYTE PTR [edi],dl
  423dac:	add    edi,0x1
  423daf:	test   ecx,0x3
  423db5:	jne    0x423da1
  423db7:	jmp    0x423dbe
  423db9:	mov    DWORD PTR [edi],edx
  423dbb:	add    edi,0x4
  423dbe:	mov    edx,0x7efefeff
  423dc3:	mov    eax,DWORD PTR [ecx]
  423dc5:	add    edx,eax
  423dc7:	xor    eax,0xffffffff
  423dca:	xor    eax,edx
  423dcc:	mov    edx,DWORD PTR [ecx]
  423dce:	add    ecx,0x4
  423dd1:	test   eax,0x81010100
  423dd6:	je     0x423db9
  423dd8:	test   dl,dl
  423dda:	je     0x423e10
  423ddc:	test   dh,dh
  423dde:	je     0x423e07
  423de0:	test   edx,0xff0000
  423de6:	je     0x423dfa
  423de8:	test   edx,0xff000000
  423dee:	je     0x423df2
  423df0:	jmp    0x423db9
  423df2:	mov    DWORD PTR [edi],edx
  423df4:	mov    eax,DWORD PTR [esp+0x8]
  423df8:	pop    edi
  423df9:	ret    
  423dfa:	mov    WORD PTR [edi],dx
  423dfd:	mov    eax,DWORD PTR [esp+0x8]
  423e01:	mov    BYTE PTR [edi+0x2],0x0
  423e05:	pop    edi
  423e06:	ret    
  423e07:	mov    WORD PTR [edi],dx
  423e0a:	mov    eax,DWORD PTR [esp+0x8]
  423e0e:	pop    edi
  423e0f:	ret    
  423e10:	mov    BYTE PTR [edi],dl
  423e12:	mov    eax,DWORD PTR [esp+0x8]
  423e16:	pop    edi
  423e17:	ret    
  423e18:	int3   
  423e19:	int3   
  423e1a:	int3   
  423e1b:	int3   
  423e1c:	int3   
  423e1d:	int3   
  423e1e:	int3   
  423e1f:	int3   
  423e20:	mov    ecx,DWORD PTR [esp+0xc]
  423e24:	push   edi
  423e25:	test   ecx,ecx
  423e27:	je     0x423ebf
  423e2d:	push   esi
  423e2e:	push   ebx
  423e2f:	mov    ebx,ecx
  423e31:	mov    esi,DWORD PTR [esp+0x14]
  423e35:	test   esi,0x3
  423e3b:	mov    edi,DWORD PTR [esp+0x10]
  423e3f:	jne    0x423e4c
  423e41:	shr    ecx,0x2
  423e44:	jne    0x423ecf
  423e4a:	jmp    0x423e73
  423e4c:	mov    al,BYTE PTR [esi]
  423e4e:	add    esi,0x1
  423e51:	mov    BYTE PTR [edi],al
  423e53:	add    edi,0x1
  423e56:	sub    ecx,0x1
  423e59:	je     0x423e86
  423e5b:	test   al,al
  423e5d:	je     0x423e8e
  423e5f:	test   esi,0x3
  423e65:	jne    0x423e4c
  423e67:	mov    ebx,ecx
  423e69:	shr    ecx,0x2
  423e6c:	jne    0x423ecf
  423e6e:	and    ebx,0x3
  423e71:	je     0x423e86
  423e73:	mov    al,BYTE PTR [esi]
  423e75:	add    esi,0x1
  423e78:	mov    BYTE PTR [edi],al
  423e7a:	add    edi,0x1
  423e7d:	test   al,al
  423e7f:	je     0x423eb8
  423e81:	sub    ebx,0x1
  423e84:	jne    0x423e73
  423e86:	mov    eax,DWORD PTR [esp+0x10]
  423e8a:	pop    ebx
  423e8b:	pop    esi
  423e8c:	pop    edi
  423e8d:	ret    
  423e8e:	test   edi,0x3
  423e94:	je     0x423eac
  423e96:	mov    BYTE PTR [edi],al
  423e98:	add    edi,0x1
  423e9b:	sub    ecx,0x1
  423e9e:	je     0x423f3c
  423ea4:	test   edi,0x3
  423eaa:	jne    0x423e96
  423eac:	mov    ebx,ecx
  423eae:	shr    ecx,0x2
  423eb1:	jne    0x423f27
  423eb3:	mov    BYTE PTR [edi],al
  423eb5:	add    edi,0x1
  423eb8:	sub    ebx,0x1
  423ebb:	jne    0x423eb3
  423ebd:	pop    ebx
  423ebe:	pop    esi
  423ebf:	mov    eax,DWORD PTR [esp+0x8]
  423ec3:	pop    edi
  423ec4:	ret    
  423ec5:	mov    DWORD PTR [edi],edx
  423ec7:	add    edi,0x4
  423eca:	sub    ecx,0x1
  423ecd:	je     0x423e6e
  423ecf:	mov    edx,0x7efefeff
  423ed4:	mov    eax,DWORD PTR [esi]
  423ed6:	add    edx,eax
  423ed8:	xor    eax,0xffffffff
  423edb:	xor    eax,edx
  423edd:	mov    edx,DWORD PTR [esi]
  423edf:	add    esi,0x4
  423ee2:	test   eax,0x81010100
  423ee7:	je     0x423ec5
  423ee9:	test   dl,dl
  423eeb:	je     0x423f19
  423eed:	test   dh,dh
  423eef:	je     0x423f0f
  423ef1:	test   edx,0xff0000
  423ef7:	je     0x423f05
  423ef9:	test   edx,0xff000000
  423eff:	jne    0x423ec5
  423f01:	mov    DWORD PTR [edi],edx
  423f03:	jmp    0x423f1d
  423f05:	and    edx,0xffff
  423f0b:	mov    DWORD PTR [edi],edx
  423f0d:	jmp    0x423f1d
  423f0f:	and    edx,0xff
  423f15:	mov    DWORD PTR [edi],edx
  423f17:	jmp    0x423f1d
  423f19:	xor    edx,edx
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	add    edi,0x4
  423f20:	xor    eax,eax
  423f22:	sub    ecx,0x1
  423f25:	je     0x423f33
  423f27:	xor    eax,eax
  423f29:	mov    DWORD PTR [edi],eax
  423f2b:	add    edi,0x4
  423f2e:	sub    ecx,0x1
  423f31:	jne    0x423f29
  423f33:	and    ebx,0x3
  423f36:	jne    0x423eb3
  423f3c:	mov    eax,DWORD PTR [esp+0x10]
  423f40:	pop    ebx
  423f41:	pop    esi
  423f42:	pop    edi
  423f43:	ret    
  423f44:	int3   
  423f45:	int3   
  423f46:	int3   
  423f47:	int3   
  423f48:	int3   
  423f49:	int3   
  423f4a:	int3   
  423f4b:	int3   
  423f4c:	int3   
  423f4d:	int3   
  423f4e:	int3   
  423f4f:	int3   
  423f50:	mov    ecx,DWORD PTR [esp+0x4]
  423f54:	test   ecx,0x3
  423f5a:	je     0x423f80
  423f5c:	mov    al,BYTE PTR [ecx]
  423f5e:	add    ecx,0x1
  423f61:	test   al,al
  423f63:	je     0x423fb3
  423f65:	test   ecx,0x3
  423f6b:	jne    0x423f5c
  423f6d:	add    eax,0x0
  423f72:	lea    esp,[esp+0x0]
  423f79:	lea    esp,[esp+0x0]
  423f80:	mov    eax,DWORD PTR [ecx]
  423f82:	mov    edx,0x7efefeff
  423f87:	add    edx,eax
  423f89:	xor    eax,0xffffffff
  423f8c:	xor    eax,edx
  423f8e:	add    ecx,0x4
  423f91:	test   eax,0x81010100
  423f96:	je     0x423f80
  423f98:	mov    eax,DWORD PTR [ecx-0x4]
  423f9b:	test   al,al
  423f9d:	je     0x423fd1
  423f9f:	test   ah,ah
  423fa1:	je     0x423fc7
  423fa3:	test   eax,0xff0000
  423fa8:	je     0x423fbd
  423faa:	test   eax,0xff000000
  423faf:	je     0x423fb3
  423fb1:	jmp    0x423f80
  423fb3:	lea    eax,[ecx-0x1]
  423fb6:	mov    ecx,DWORD PTR [esp+0x4]
  423fba:	sub    eax,ecx
  423fbc:	ret    
  423fbd:	lea    eax,[ecx-0x2]
  423fc0:	mov    ecx,DWORD PTR [esp+0x4]
  423fc4:	sub    eax,ecx
  423fc6:	ret    
  423fc7:	lea    eax,[ecx-0x3]
  423fca:	mov    ecx,DWORD PTR [esp+0x4]
  423fce:	sub    eax,ecx
  423fd0:	ret    
  423fd1:	lea    eax,[ecx-0x4]
  423fd4:	mov    ecx,DWORD PTR [esp+0x4]
  423fd8:	sub    eax,ecx
  423fda:	ret    
  423fdb:	push   0x8
  423fdd:	push   0x428580
  423fe2:	call   0x423940
  423fe7:	and    DWORD PTR [ebp-0x4],0x0
  423feb:	push   0x0
  423fed:	push   0x1
  423fef:	call   0x425b62
  423ff4:	pop    ecx
  423ff5:	pop    ecx
  423ff6:	jmp    0x423fff
  423ff8:	xor    eax,eax
  423ffa:	inc    eax
  423ffb:	ret    
  423ffc:	mov    esp,DWORD PTR [ebp-0x18]
  423fff:	or     DWORD PTR [ebp-0x4],0xffffffff
  424003:	push   0x3
  424005:	call   DWORD PTR ds:0x428060
  42400b:	int3   
  42400c:	cmp    ecx,DWORD PTR ds:0x45f510
  424012:	jne    0x424015
  424014:	ret    
  424015:	jmp    0x423fdb
  42401a:	movzx  eax,BYTE PTR [esp+0x4]
  42401f:	mov    cl,BYTE PTR [esp+0xc]
  424023:	test   BYTE PTR [eax+0x460001],cl
  424029:	jne    0x424047
  42402b:	cmp    DWORD PTR [esp+0x8],0x0
  424030:	je     0x424040
  424032:	movzx  eax,WORD PTR [eax*2+0x42897a]
  42403a:	and    eax,DWORD PTR [esp+0x8]
  42403e:	jmp    0x424042
  424040:	xor    eax,eax
  424042:	test   eax,eax
  424044:	jne    0x424047
  424046:	ret    
  424047:	xor    eax,eax
  424049:	inc    eax
  42404a:	ret    
  42404b:	push   0x4
  42404d:	push   0x0
  42404f:	push   DWORD PTR [esp+0xc]
  424053:	call   0x42401a
  424058:	add    esp,0xc
  42405b:	ret    
  42405c:	sub    eax,0x3a4
  424061:	je     0x424085
  424063:	sub    eax,0x4
  424066:	je     0x42407f
  424068:	sub    eax,0xd
  42406b:	je     0x424079
  42406d:	dec    eax
  42406e:	je     0x424073
  424070:	xor    eax,eax
  424072:	ret    
  424073:	mov    eax,0x404
  424078:	ret    
  424079:	mov    eax,0x412
  42407e:	ret    
  42407f:	mov    eax,0x804
  424084:	ret    
  424085:	mov    eax,0x411
  42408a:	ret    
  42408b:	push   edi
  42408c:	push   0x40
  42408e:	xor    eax,eax
  424090:	pop    ecx
  424091:	mov    edi,0x460000
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	stos   BYTE PTR es:[edi],al
  424099:	xor    eax,eax
  42409b:	mov    ds:0x460104,eax
  4240a0:	mov    ds:0x45fffc,eax
  4240a5:	mov    ds:0x45fff4,eax
  4240aa:	mov    edi,0x460110
  4240af:	stos   DWORD PTR es:[edi],eax
  4240b0:	stos   DWORD PTR es:[edi],eax
  4240b1:	stos   DWORD PTR es:[edi],eax
  4240b2:	pop    edi
  4240b3:	ret    
  4240b4:	push   ebp
  4240b5:	mov    ebp,esp
  4240b7:	sub    esp,0x518
  4240bd:	mov    eax,ds:0x45f510
  4240c2:	xor    eax,DWORD PTR [ebp+0x4]
  4240c5:	push   esi
  4240c6:	mov    DWORD PTR [ebp-0x4],eax
  4240c9:	lea    eax,[ebp-0x18]
  4240cc:	push   eax
  4240cd:	push   DWORD PTR ds:0x460104
  4240d3:	call   DWORD PTR ds:0x4280d4
  4240d9:	cmp    eax,0x1
  4240dc:	mov    esi,0x100
  4240e1:	jne    0x4241f4
  4240e7:	xor    eax,eax
  4240e9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  4240f0:	inc    eax
  4240f1:	cmp    eax,esi
  4240f3:	jb     0x4240e9
  4240f5:	mov    al,BYTE PTR [ebp-0x12]
  4240f8:	test   al,al
  4240fa:	mov    BYTE PTR [ebp-0x118],0x20
  424101:	je     0x424139
  424103:	push   ebx
  424104:	lea    edx,[ebp-0x11]
  424107:	push   edi
  424108:	movzx  ecx,BYTE PTR [edx]
  42410b:	movzx  eax,al
  42410e:	cmp    eax,ecx
  424110:	ja     0x42412f
  424112:	sub    ecx,eax
  424114:	inc    ecx
  424115:	mov    ebx,ecx
  424117:	shr    ecx,0x2
  42411a:	lea    edi,[ebp+eax*1-0x118]
  424121:	mov    eax,0x20202020
  424126:	rep stos DWORD PTR es:[edi],eax
  424128:	mov    ecx,ebx
  42412a:	and    ecx,0x3
  42412d:	rep stos BYTE PTR es:[edi],al
  42412f:	inc    edx
  424130:	mov    al,BYTE PTR [edx]
  424132:	inc    edx
  424133:	test   al,al
  424135:	jne    0x424108
  424137:	pop    edi
  424138:	pop    ebx
  424139:	push   0x0
  42413b:	push   DWORD PTR ds:0x45fff4
  424141:	lea    eax,[ebp-0x518]
  424147:	push   DWORD PTR ds:0x460104
  42414d:	push   eax
  42414e:	push   esi
  42414f:	lea    eax,[ebp-0x118]
  424155:	push   eax
  424156:	push   0x1
  424158:	call   0x426068
  42415d:	push   0x0
  42415f:	push   DWORD PTR ds:0x460104
  424165:	lea    eax,[ebp-0x218]
  42416b:	push   esi
  42416c:	push   eax
  42416d:	push   esi
  42416e:	lea    eax,[ebp-0x118]
  424174:	push   eax
  424175:	push   esi
  424176:	push   DWORD PTR ds:0x45fff4
  42417c:	call   0x425cac
  424181:	push   0x0
  424183:	push   DWORD PTR ds:0x460104
  424189:	lea    eax,[ebp-0x318]
  42418f:	push   esi
  424190:	push   eax
  424191:	push   esi
  424192:	lea    eax,[ebp-0x118]
  424198:	push   eax
  424199:	push   0x200
  42419e:	push   DWORD PTR ds:0x45fff4
  4241a4:	call   0x425cac
  4241a9:	add    esp,0x5c
  4241ac:	xor    eax,eax
  4241ae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241b6:	test   cl,0x1
  4241b9:	je     0x4241d1
  4241bb:	or     BYTE PTR [eax+0x460001],0x10
  4241c2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241c9:	mov    BYTE PTR [eax+0x460120],cl
  4241cf:	jmp    0x4241ed
  4241d1:	test   cl,0x2
  4241d4:	je     0x4241e6
  4241d6:	or     BYTE PTR [eax+0x460001],0x20
  4241dd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241e4:	jmp    0x4241c9
  4241e6:	and    BYTE PTR [eax+0x460120],0x0
  4241ed:	inc    eax
  4241ee:	cmp    eax,esi
  4241f0:	jb     0x4241ae
  4241f2:	jmp    0x424238
  4241f4:	xor    eax,eax
  4241f6:	cmp    eax,0x41
  4241f9:	jb     0x424214
  4241fb:	cmp    eax,0x5a
  4241fe:	ja     0x424214
  424200:	or     BYTE PTR [eax+0x460001],0x10
  424207:	mov    cl,al
  424209:	add    cl,0x20
  42420c:	mov    BYTE PTR [eax+0x460120],cl
  424212:	jmp    0x424233
  424214:	cmp    eax,0x61
  424217:	jb     0x42422c
  424219:	cmp    eax,0x7a
  42421c:	ja     0x42422c
  42421e:	or     BYTE PTR [eax+0x460001],0x20
  424225:	mov    cl,al
  424227:	sub    cl,0x20
  42422a:	jmp    0x42420c
  42422c:	and    BYTE PTR [eax+0x460120],0x0
  424233:	inc    eax
  424234:	cmp    eax,esi
  424236:	jb     0x4241f6
  424238:	mov    ecx,DWORD PTR [ebp-0x4]
  42423b:	xor    ecx,DWORD PTR [ebp+0x4]
  42423e:	pop    esi
  42423f:	call   0x42400c
  424244:	leave  
  424245:	ret    
  424246:	push   ebp
  424247:	mov    ebp,esp
  424249:	sub    esp,0x1c
  42424c:	mov    eax,ds:0x45f510
  424251:	xor    eax,DWORD PTR [ebp+0x4]
  424254:	push   ebx
  424255:	push   esi
  424256:	mov    esi,DWORD PTR [ebp+0x8]
  424259:	xor    ebx,ebx
  42425b:	cmp    esi,ebx
  42425d:	mov    DWORD PTR [ebp-0x4],eax
  424260:	push   edi
  424261:	je     0x4243bb
  424267:	xor    edx,edx
  424269:	xor    eax,eax
  42426b:	cmp    DWORD PTR [eax+0x45f520],esi
  424271:	je     0x4242d8
  424273:	add    eax,0x30
  424276:	inc    edx
  424277:	cmp    eax,0xf0
  42427c:	jb     0x42426b
  42427e:	lea    eax,[ebp-0x1c]
  424281:	push   eax
  424282:	push   esi
  424283:	call   DWORD PTR ds:0x4280d4
  424289:	cmp    eax,0x1
  42428c:	jne    0x4243b3
  424292:	push   0x40
  424294:	xor    eax,eax
  424296:	cmp    DWORD PTR [ebp-0x1c],0x1
  42429a:	pop    ecx
  42429b:	mov    edi,0x460000
  4242a0:	rep stos DWORD PTR es:[edi],eax
  4242a2:	stos   BYTE PTR es:[edi],al
  4242a3:	mov    DWORD PTR ds:0x460104,esi
  4242a9:	mov    DWORD PTR ds:0x45fff4,ebx
  4242af:	jbe    0x4243a1
  4242b5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242b9:	je     0x424379
  4242bf:	lea    ecx,[ebp-0x15]
  4242c2:	mov    dl,BYTE PTR [ecx]
  4242c4:	test   dl,dl
  4242c6:	je     0x424379
  4242cc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242d0:	movzx  edx,dl
  4242d3:	jmp    0x424369
  4242d8:	push   0x40
  4242da:	xor    eax,eax
  4242dc:	pop    ecx
  4242dd:	mov    edi,0x460000
  4242e2:	rep stos DWORD PTR es:[edi],eax
  4242e4:	lea    ecx,[edx+edx*2]
  4242e7:	shl    ecx,0x4
  4242ea:	mov    DWORD PTR [ebp-0x8],ebx
  4242ed:	stos   BYTE PTR es:[edi],al
  4242ee:	lea    ebx,[ecx+0x45f530]
  4242f4:	mov    al,BYTE PTR [ebx]
  4242f6:	mov    esi,ebx
  4242f8:	jmp    0x424323
  4242fa:	mov    dl,BYTE PTR [esi+0x1]
  4242fd:	test   dl,dl
  4242ff:	je     0x424327
  424301:	movzx  eax,al
  424304:	movzx  edi,dl
  424307:	cmp    eax,edi
  424309:	ja     0x42431f
  42430b:	mov    edx,DWORD PTR [ebp-0x8]
  42430e:	mov    dl,BYTE PTR [edx+0x45f518]
  424314:	or     BYTE PTR [eax+0x460001],dl
  42431a:	inc    eax
  42431b:	cmp    eax,edi
  42431d:	jbe    0x424314
  42431f:	inc    esi
  424320:	inc    esi
  424321:	mov    al,BYTE PTR [esi]
  424323:	test   al,al
  424325:	jne    0x4242fa
  424327:	inc    DWORD PTR [ebp-0x8]
  42432a:	add    ebx,0x8
  42432d:	cmp    DWORD PTR [ebp-0x8],0x4
  424331:	jb     0x4242f4
  424333:	mov    eax,DWORD PTR [ebp+0x8]
  424336:	mov    ds:0x460104,eax
  42433b:	mov    DWORD PTR ds:0x45fffc,0x1
  424345:	call   0x42405c
  42434a:	lea    ecx,[ecx+0x45f524]
  424350:	mov    esi,ecx
  424352:	mov    edi,0x460110
  424357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424359:	mov    ds:0x45fff4,eax
  42435e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435f:	jmp    0x4243c0
  424361:	or     BYTE PTR [eax+0x460001],0x4
  424368:	inc    eax
  424369:	cmp    eax,edx
  42436b:	jbe    0x424361
  42436d:	inc    ecx
  42436e:	inc    ecx
  42436f:	cmp    BYTE PTR [ecx-0x1],0x0
  424373:	jne    0x4242c2
  424379:	xor    ecx,ecx
  42437b:	inc    ecx
  42437c:	mov    eax,ecx
  42437e:	or     BYTE PTR [eax+0x460001],0x8
  424385:	inc    eax
  424386:	cmp    eax,0xff
  42438b:	jb     0x42437e
  42438d:	mov    eax,esi
  42438f:	call   0x42405c
  424394:	mov    ds:0x45fff4,eax
  424399:	mov    DWORD PTR ds:0x45fffc,ecx
  42439f:	jmp    0x4243a7
  4243a1:	mov    DWORD PTR ds:0x45fffc,ebx
  4243a7:	xor    eax,eax
  4243a9:	mov    edi,0x460110
  4243ae:	stos   DWORD PTR es:[edi],eax
  4243af:	stos   DWORD PTR es:[edi],eax
  4243b0:	stos   DWORD PTR es:[edi],eax
  4243b1:	jmp    0x4243c0
  4243b3:	cmp    DWORD PTR ds:0x45fe64,ebx
  4243b9:	je     0x4243c9
  4243bb:	call   0x42408b
  4243c0:	call   0x4240b4
  4243c5:	xor    eax,eax
  4243c7:	jmp    0x4243cc
  4243c9:	or     eax,0xffffffff
  4243cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243cf:	xor    ecx,DWORD PTR [ebp+0x4]
  4243d2:	pop    edi
  4243d3:	pop    esi
  4243d4:	pop    ebx
  4243d5:	call   0x42400c
  4243da:	leave  
  4243db:	ret    
  4243dc:	push   0x14
  4243de:	push   0x428590
  4243e3:	call   0x423940
  4243e8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243ec:	push   0xd
  4243ee:	call   0x423aff
  4243f3:	pop    ecx
  4243f4:	xor    edi,edi
  4243f6:	mov    DWORD PTR [ebp-0x4],edi
  4243f9:	mov    DWORD PTR ds:0x45fe64,edi
  4243ff:	mov    eax,DWORD PTR [ebp+0x8]
  424402:	cmp    eax,0xfffffffe
  424405:	jne    0x424419
  424407:	mov    DWORD PTR ds:0x45fe64,0x1
  424411:	call   DWORD PTR ds:0x4280d0
  424417:	jmp    0x424444
  424419:	cmp    eax,0xfffffffd
  42441c:	jne    0x424430
  42441e:	mov    DWORD PTR ds:0x45fe64,0x1
  424428:	call   DWORD PTR ds:0x4280cc
  42442e:	jmp    0x424444
  424430:	cmp    eax,0xfffffffc
  424433:	jne    0x424444
  424435:	mov    DWORD PTR ds:0x45fe64,0x1
  42443f:	mov    eax,ds:0x45fe94
  424444:	mov    DWORD PTR [ebp+0x8],eax
  424447:	cmp    eax,DWORD PTR ds:0x460104
  42444d:	je     0x42450e
  424453:	mov    esi,DWORD PTR ds:0x45fff8
  424459:	mov    DWORD PTR [ebp-0x20],esi
  42445c:	cmp    esi,edi
  42445e:	je     0x424464
  424460:	cmp    DWORD PTR [esi],edi
  424462:	je     0x424474
  424464:	push   0x220
  424469:	call   0x424662
  42446e:	pop    ecx
  42446f:	mov    esi,eax
  424471:	mov    DWORD PTR [ebp-0x20],esi
  424474:	cmp    esi,edi
  424476:	je     0x4244f7
  424478:	push   DWORD PTR [ebp+0x8]
  42447b:	call   0x424246
  424480:	pop    ecx
  424481:	mov    DWORD PTR [ebp-0x1c],eax
  424484:	cmp    eax,edi
  424486:	jne    0x4244f7
  424488:	mov    DWORD PTR [esi],edi
  42448a:	mov    eax,ds:0x460104
  42448f:	mov    DWORD PTR [esi+0x4],eax
  424492:	mov    eax,ds:0x45fffc
  424497:	mov    DWORD PTR [esi+0x8],eax
  42449a:	mov    eax,ds:0x45fff4
  42449f:	mov    DWORD PTR [esi+0xc],eax
  4244a2:	xor    eax,eax
  4244a4:	mov    DWORD PTR [ebp-0x24],eax
  4244a7:	cmp    eax,0x5
  4244aa:	jge    0x4244bc
  4244ac:	mov    cx,WORD PTR [eax*2+0x460110]
  4244b4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244b9:	inc    eax
  4244ba:	jmp    0x4244a4
  4244bc:	xor    eax,eax
  4244be:	mov    DWORD PTR [ebp-0x24],eax
  4244c1:	cmp    eax,0x101
  4244c6:	jge    0x4244d5
  4244c8:	mov    cl,BYTE PTR [eax+0x460000]
  4244ce:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244d2:	inc    eax
  4244d3:	jmp    0x4244be
  4244d5:	xor    eax,eax
  4244d7:	mov    DWORD PTR [ebp-0x24],eax
  4244da:	cmp    eax,0x100
  4244df:	jge    0x4244f1
  4244e1:	mov    cl,BYTE PTR [eax+0x460120]
  4244e7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244ee:	inc    eax
  4244ef:	jmp    0x4244d7
  4244f1:	mov    DWORD PTR ds:0x45fff8,esi
  4244f7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4244fb:	jne    0x424511
  4244fd:	cmp    esi,DWORD PTR ds:0x45fff8
  424503:	je     0x424511
  424505:	push   esi
  424506:	call   0x42454a
  42450b:	pop    ecx
  42450c:	jmp    0x424511
  42450e:	mov    DWORD PTR [ebp-0x1c],edi
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x424523
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	call   0x42397b
  424522:	ret    
  424523:	push   0xd
  424525:	call   0x423a6b
  42452a:	pop    ecx
  42452b:	ret    
  42452c:	cmp    DWORD PTR ds:0x46034c,0x0
  424533:	jne    0x424547
  424535:	push   0xfffffffd
  424537:	call   0x4243dc
  42453c:	pop    ecx
  42453d:	mov    DWORD PTR ds:0x46034c,0x1
  424547:	xor    eax,eax
  424549:	ret    
  42454a:	push   0xc
  42454c:	push   0x4285a0
  424551:	call   0x423940
  424556:	mov    esi,DWORD PTR [ebp+0x8]
  424559:	test   esi,esi
  42455b:	je     0x4245b5
  42455d:	cmp    DWORD PTR ds:0x460224,0x3
  424564:	jne    0x4245a6
  424566:	push   0x4
  424568:	call   0x423aff
  42456d:	pop    ecx
  42456e:	and    DWORD PTR [ebp-0x4],0x0
  424572:	push   esi
  424573:	call   0x424d22
  424578:	pop    ecx
  424579:	mov    DWORD PTR [ebp-0x1c],eax
  42457c:	test   eax,eax
  42457e:	je     0x424589
  424580:	push   esi
  424581:	push   eax
  424582:	call   0x424d4d
  424587:	pop    ecx
  424588:	pop    ecx
  424589:	or     DWORD PTR [ebp-0x4],0xffffffff
  42458d:	call   0x42459d
  424592:	cmp    DWORD PTR [ebp-0x1c],0x0
  424596:	jne    0x4245b5
  424598:	push   DWORD PTR [ebp+0x8]
  42459b:	jmp    0x4245a7
  42459d:	push   0x4
  42459f:	call   0x423a6b
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	push   esi
  4245a7:	push   0x0
  4245a9:	push   DWORD PTR ds:0x460220
  4245af:	call   DWORD PTR ds:0x4280c0
  4245b5:	call   0x42397b
  4245ba:	ret    
  4245bb:	push   0xc
  4245bd:	push   0x4285b0
  4245c2:	call   0x423940
  4245c7:	mov    esi,DWORD PTR [ebp+0x8]
  4245ca:	cmp    DWORD PTR ds:0x460224,0x3
  4245d1:	jne    0x424601
  4245d3:	cmp    esi,DWORD PTR ds:0x45ffe4
  4245d9:	ja     0x424601
  4245db:	push   0x4
  4245dd:	call   0x423aff
  4245e2:	pop    ecx
  4245e3:	and    DWORD PTR [ebp-0x4],0x0
  4245e7:	push   esi
  4245e8:	call   0x425501
  4245ed:	pop    ecx
  4245ee:	mov    DWORD PTR [ebp-0x1c],eax
  4245f1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4245f5:	call   0x42462d
  4245fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4245fd:	test   eax,eax
  4245ff:	jne    0x424624
  424601:	test   esi,esi
  424603:	jne    0x424606
  424605:	inc    esi
  424606:	cmp    DWORD PTR ds:0x460224,0x1
  42460d:	je     0x424615
  42460f:	add    esi,0xf
  424612:	and    esi,0xfffffff0
  424615:	push   esi
  424616:	push   0x0
  424618:	push   DWORD PTR ds:0x460220
  42461e:	call   DWORD PTR ds:0x4280d8
  424624:	call   0x42397b
  424629:	ret    
  42462a:	mov    esi,DWORD PTR [ebp+0x8]
  42462d:	push   0x4
  42462f:	call   0x423a6b
  424634:	pop    ecx
  424635:	ret    
  424636:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42463b:	ja     0x42465f
  42463d:	push   DWORD PTR [esp+0x4]
  424641:	call   0x4245bb
  424646:	test   eax,eax
  424648:	pop    ecx
  424649:	jne    0x424661
  42464b:	cmp    DWORD PTR [esp+0x8],eax
  42464f:	je     0x424661
  424651:	push   DWORD PTR [esp+0x4]
  424655:	call   0x426222
  42465a:	test   eax,eax
  42465c:	pop    ecx
  42465d:	jne    0x42463d
  42465f:	xor    eax,eax
  424661:	ret    
  424662:	push   DWORD PTR ds:0x45fea8
  424668:	push   DWORD PTR [esp+0x8]
  42466c:	call   0x424636
  424671:	pop    ecx
  424672:	pop    ecx
  424673:	ret    
  424674:	int3   
  424675:	int3   
  424676:	int3   
  424677:	int3   
  424678:	int3   
  424679:	int3   
  42467a:	int3   
  42467b:	int3   
  42467c:	int3   
  42467d:	int3   
  42467e:	int3   
  42467f:	int3   
  424680:	push   ebp
  424681:	mov    ebp,esp
  424683:	push   edi
  424684:	push   esi
  424685:	mov    esi,DWORD PTR [ebp+0xc]
  424688:	mov    ecx,DWORD PTR [ebp+0x10]
  42468b:	mov    edi,DWORD PTR [ebp+0x8]
  42468e:	mov    eax,ecx
  424690:	mov    edx,ecx
  424692:	add    eax,esi
  424694:	cmp    edi,esi
  424696:	jbe    0x4246a0
  424698:	cmp    edi,eax
  42469a:	jb     0x42481c
  4246a0:	test   edi,0x3
  4246a6:	jne    0x4246bc
  4246a8:	shr    ecx,0x2
  4246ab:	and    edx,0x3
  4246ae:	cmp    ecx,0x8
  4246b1:	jb     0x4246dc
  4246b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246b5:	jmp    DWORD PTR [edx*4+0x4247cc]
  4246bc:	mov    eax,edi
  4246be:	mov    edx,0x3
  4246c3:	sub    ecx,0x4
  4246c6:	jb     0x4246d4
  4246c8:	and    eax,0x3
  4246cb:	add    ecx,eax
  4246cd:	jmp    DWORD PTR [eax*4+0x4246e0]
  4246d4:	jmp    DWORD PTR [ecx*4+0x4247dc]
  4246db:	nop
  4246dc:	jmp    DWORD PTR [ecx*4+0x424760]
  4246e3:	nop
  4246e4:	lock inc esi
  4246e6:	inc    edx
  4246e7:	add    BYTE PTR [edi+eax*2],bl
  4246ea:	inc    edx
  4246eb:	add    BYTE PTR [eax+0x47],al
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx],ah
  4246f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4246f7:	inc    esi
  4246f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4246fe:	add    al,cl
  424700:	jmp    0x289cf07
  424705:	add    esi,0x3
  424708:	add    edi,0x3
  42470b:	cmp    ecx,0x8
  42470e:	jb     0x4246dc
  424710:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424712:	jmp    DWORD PTR [edx*4+0x4247cc]
  424719:	lea    ecx,[ecx+0x0]
  42471c:	and    edx,ecx
  42471e:	mov    al,BYTE PTR [esi]
  424720:	mov    BYTE PTR [edi],al
  424722:	mov    al,BYTE PTR [esi+0x1]
  424725:	shr    ecx,0x2
  424728:	mov    BYTE PTR [edi+0x1],al
  42472b:	add    esi,0x2
  42472e:	add    edi,0x2
  424731:	cmp    ecx,0x8
  424734:	jb     0x4246dc
  424736:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424738:	jmp    DWORD PTR [edx*4+0x4247cc]
  42473f:	nop
  424740:	and    edx,ecx
  424742:	mov    al,BYTE PTR [esi]
  424744:	mov    BYTE PTR [edi],al
  424746:	add    esi,0x1
  424749:	shr    ecx,0x2
  42474c:	add    edi,0x1
  42474f:	cmp    ecx,0x8
  424752:	jb     0x4246dc
  424754:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424756:	jmp    DWORD PTR [edx*4+0x4247cc]
  42475d:	lea    ecx,[ecx+0x0]
  424760:	ret    
  424761:	inc    edi
  424762:	inc    edx
  424763:	add    BYTE PTR [eax-0x57ffbdb9],dh
  424769:	inc    edi
  42476a:	inc    edx
  42476b:	add    BYTE PTR [eax-0x67ffbdb9],ah
  424771:	inc    edi
  424772:	inc    edx
  424773:	add    BYTE PTR [eax-0x77ffbdb9],dl
  424779:	inc    edi
  42477a:	inc    edx
  42477b:	add    BYTE PTR [eax-0x74ffbdb9],al
  424781:	inc    esp
  424782:	mov    fs,esp
  424784:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  424788:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42478c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424790:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424794:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424798:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42479c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247b8:	lea    eax,[ecx*4+0x0]
  4247bf:	add    esi,eax
  4247c1:	add    edi,eax
  4247c3:	jmp    DWORD PTR [edx*4+0x4247cc]
  4247ca:	mov    edi,edi
  4247cc:	fadd   QWORD PTR [edi+0x42]
  4247cf:	add    ah,ah
  4247d1:	inc    edi
  4247d2:	inc    edx
  4247d3:	add    al,dh
  4247d5:	inc    edi
  4247d6:	inc    edx
  4247d7:	add    BYTE PTR [eax+ecx*2],al
  4247da:	inc    edx
  4247db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247e1:	leave  
  4247e2:	ret    
  4247e3:	nop
  4247e4:	mov    al,BYTE PTR [esi]
  4247e6:	mov    BYTE PTR [edi],al
  4247e8:	mov    eax,DWORD PTR [ebp+0x8]
  4247eb:	pop    esi
  4247ec:	pop    edi
  4247ed:	leave  
  4247ee:	ret    
  4247ef:	nop
  4247f0:	mov    al,BYTE PTR [esi]
  4247f2:	mov    BYTE PTR [edi],al
  4247f4:	mov    al,BYTE PTR [esi+0x1]
  4247f7:	mov    BYTE PTR [edi+0x1],al
  4247fa:	mov    eax,DWORD PTR [ebp+0x8]
  4247fd:	pop    esi
  4247fe:	pop    edi
  4247ff:	leave  
  424800:	ret    
  424801:	lea    ecx,[ecx+0x0]
  424804:	mov    al,BYTE PTR [esi]
  424806:	mov    BYTE PTR [edi],al
  424808:	mov    al,BYTE PTR [esi+0x1]
  42480b:	mov    BYTE PTR [edi+0x1],al
  42480e:	mov    al,BYTE PTR [esi+0x2]
  424811:	mov    BYTE PTR [edi+0x2],al
  424814:	mov    eax,DWORD PTR [ebp+0x8]
  424817:	pop    esi
  424818:	pop    edi
  424819:	leave  
  42481a:	ret    
  42481b:	nop
  42481c:	lea    esi,[ecx+esi*1-0x4]
  424820:	lea    edi,[ecx+edi*1-0x4]
  424824:	test   edi,0x3
  42482a:	jne    0x424850
  42482c:	shr    ecx,0x2
  42482f:	and    edx,0x3
  424832:	cmp    ecx,0x8
  424835:	jb     0x424844
  424837:	std    
  424838:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483a:	cld    
  42483b:	jmp    DWORD PTR [edx*4+0x424968]
  424842:	mov    edi,edi
  424844:	neg    ecx
  424846:	jmp    DWORD PTR [ecx*4+0x424918]
  42484d:	lea    ecx,[ecx+0x0]
  424850:	mov    eax,edi
  424852:	mov    edx,0x3
  424857:	cmp    ecx,0x4
  42485a:	jb     0x424868
  42485c:	and    eax,0x3
  42485f:	sub    ecx,eax
  424861:	jmp    DWORD PTR [eax*4+0x42486c]
  424868:	jmp    DWORD PTR [ecx*4+0x424968]
  42486f:	nop
  424870:	jl     0x4248ba
  424872:	inc    edx
  424873:	add    BYTE PTR [eax-0x37ffbdb8],ah
  424879:	dec    eax
  42487a:	inc    edx
  42487b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424881:	mov    BYTE PTR [edi+0x3],al
  424884:	sub    esi,0x1
  424887:	shr    ecx,0x2
  42488a:	sub    edi,0x1
  42488d:	cmp    ecx,0x8
  424890:	jb     0x424844
  424892:	std    
  424893:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424895:	cld    
  424896:	jmp    DWORD PTR [edx*4+0x424968]
  42489d:	lea    ecx,[ecx+0x0]
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	and    edx,ecx
  4248a5:	mov    BYTE PTR [edi+0x3],al
  4248a8:	mov    al,BYTE PTR [esi+0x2]
  4248ab:	shr    ecx,0x2
  4248ae:	mov    BYTE PTR [edi+0x2],al
  4248b1:	sub    esi,0x2
  4248b4:	sub    edi,0x2
  4248b7:	cmp    ecx,0x8
  4248ba:	jb     0x424844
  4248bc:	std    
  4248bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248bf:	cld    
  4248c0:	jmp    DWORD PTR [edx*4+0x424968]
  4248c7:	nop
  4248c8:	mov    al,BYTE PTR [esi+0x3]
  4248cb:	and    edx,ecx
  4248cd:	mov    BYTE PTR [edi+0x3],al
  4248d0:	mov    al,BYTE PTR [esi+0x2]
  4248d3:	mov    BYTE PTR [edi+0x2],al
  4248d6:	mov    al,BYTE PTR [esi+0x1]
  4248d9:	shr    ecx,0x2
  4248dc:	mov    BYTE PTR [edi+0x1],al
  4248df:	sub    esi,0x3
  4248e2:	sub    edi,0x3
  4248e5:	cmp    ecx,0x8
  4248e8:	jb     0x424844
  4248ee:	std    
  4248ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248f1:	cld    
  4248f2:	jmp    DWORD PTR [edx*4+0x424968]
  4248f9:	lea    ecx,[ecx+0x0]
  4248fc:	sbb    al,0x49
  4248fe:	inc    edx
  4248ff:	add    BYTE PTR [ecx+ecx*2],ah
  424902:	inc    edx
  424903:	add    BYTE PTR [ecx+ecx*2],ch
  424906:	inc    edx
  424907:	add    BYTE PTR [ecx+ecx*2],dh
  42490a:	inc    edx
  42490b:	add    BYTE PTR [ecx+ecx*2],bh
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2+0x42],al
  424913:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  424917:	add    BYTE PTR [edi+0x49],bl
  42491a:	inc    edx
  42491b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424921:	inc    esp
  424922:	(bad)  
  424923:	sbb    al,0x8b
  424925:	inc    esp
  424926:	mov    ds,WORD PTR [eax]
  424928:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42492c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424930:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424934:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424938:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424940:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424948:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424950:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424954:	lea    eax,[ecx*4+0x0]
  42495b:	add    esi,eax
  42495d:	add    edi,eax
  42495f:	jmp    DWORD PTR [edx*4+0x424968]
  424966:	mov    edi,edi
  424968:	js     0x4249b3
  42496a:	inc    edx
  42496b:	add    BYTE PTR [eax-0x6fffbdb7],al
  424971:	dec    ecx
  424972:	inc    edx
  424973:	add    BYTE PTR [ecx+ecx*2+0x458b0042],ah
  42497a:	or     BYTE PTR [esi+0x5f],bl
  42497d:	leave  
  42497e:	ret    
  42497f:	nop
  424980:	mov    al,BYTE PTR [esi+0x3]
  424983:	mov    BYTE PTR [edi+0x3],al
  424986:	mov    eax,DWORD PTR [ebp+0x8]
  424989:	pop    esi
  42498a:	pop    edi
  42498b:	leave  
  42498c:	ret    
  42498d:	lea    ecx,[ecx+0x0]
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    al,BYTE PTR [esi+0x2]
  424999:	mov    BYTE PTR [edi+0x2],al
  42499c:	mov    eax,DWORD PTR [ebp+0x8]
  42499f:	pop    esi
  4249a0:	pop    edi
  4249a1:	leave  
  4249a2:	ret    
  4249a3:	nop
  4249a4:	mov    al,BYTE PTR [esi+0x3]
  4249a7:	mov    BYTE PTR [edi+0x3],al
  4249aa:	mov    al,BYTE PTR [esi+0x2]
  4249ad:	mov    BYTE PTR [edi+0x2],al
  4249b0:	mov    al,BYTE PTR [esi+0x1]
  4249b3:	mov    BYTE PTR [edi+0x1],al
  4249b6:	mov    eax,DWORD PTR [ebp+0x8]
  4249b9:	pop    esi
  4249ba:	pop    edi
  4249bb:	leave  
  4249bc:	ret    
  4249bd:	push   DWORD PTR [esp+0x4]
  4249c1:	call   DWORD PTR ds:0x4280dc
  4249c7:	xor    eax,eax
  4249c9:	inc    eax
  4249ca:	ret    0x8
  4249cd:	push   0x10
  4249cf:	push   0x4285f8
  4249d4:	call   0x423940
  4249d9:	mov    eax,ds:0x45fe68
  4249de:	test   eax,eax
  4249e0:	jne    0x424a19
  4249e2:	cmp    DWORD PTR ds:0x45fba4,0x1
  4249e9:	je     0x424a0f
  4249eb:	push   0x4285e4
  4249f0:	call   DWORD PTR ds:0x428014
  4249f6:	test   eax,eax
  4249f8:	je     0x424a0f
  4249fa:	push   0x4285bc
  4249ff:	push   eax
  424a00:	call   DWORD PTR ds:0x428010
  424a06:	mov    ds:0x45fe68,eax
  424a0b:	test   eax,eax
  424a0d:	jne    0x424a19
  424a0f:	mov    eax,0x4249bd
  424a14:	mov    ds:0x45fe68,eax
  424a19:	and    DWORD PTR [ebp-0x4],0x0
  424a1d:	push   DWORD PTR [ebp+0xc]
  424a20:	push   DWORD PTR [ebp+0x8]
  424a23:	call   eax
  424a25:	mov    DWORD PTR [ebp-0x1c],eax
  424a28:	jmp    0x424a4e
  424a2a:	mov    eax,DWORD PTR [ebp-0x14]
  424a2d:	mov    eax,DWORD PTR [eax]
  424a2f:	mov    eax,DWORD PTR [eax]
  424a31:	mov    DWORD PTR [ebp-0x20],eax
  424a34:	xor    eax,eax
  424a36:	inc    eax
  424a37:	ret    
  424a38:	mov    esp,DWORD PTR [ebp-0x18]
  424a3b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a42:	jne    0x424a4c
  424a44:	push   0x8
  424a46:	call   DWORD PTR ds:0x4280a0
  424a4c:	xor    eax,eax
  424a4e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a52:	call   0x42397b
  424a57:	ret    
  424a58:	push   0x10
  424a5a:	push   0x428608
  424a5f:	call   0x423940
  424a64:	mov    esi,DWORD PTR [ebp+0x8]
  424a67:	imul   esi,DWORD PTR [ebp+0xc]
  424a6b:	mov    DWORD PTR [ebp-0x1c],esi
  424a6e:	test   esi,esi
  424a70:	jne    0x424a73
  424a72:	inc    esi
  424a73:	xor    edi,edi
  424a75:	mov    DWORD PTR [ebp-0x20],edi
  424a78:	cmp    esi,0xffffffe0
  424a7b:	ja     0x424ae2
  424a7d:	cmp    DWORD PTR ds:0x460224,0x3
  424a84:	jne    0x424acd
  424a86:	add    esi,0xf
  424a89:	and    esi,0xfffffff0
  424a8c:	mov    DWORD PTR [ebp+0xc],esi
  424a8f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a92:	cmp    ebx,DWORD PTR ds:0x45ffe4
  424a98:	ja     0x424acd
  424a9a:	push   0x4
  424a9c:	call   0x423aff
  424aa1:	pop    ecx
  424aa2:	and    DWORD PTR [ebp-0x4],edi
  424aa5:	push   ebx
  424aa6:	call   0x425501
  424aab:	pop    ecx
  424aac:	mov    DWORD PTR [ebp-0x20],eax
  424aaf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ab3:	call   0x424b02
  424ab8:	mov    edi,DWORD PTR [ebp-0x20]
  424abb:	test   edi,edi
  424abd:	je     0x424ad1
  424abf:	push   DWORD PTR [ebp-0x1c]
  424ac2:	push   0x0
  424ac4:	push   edi
  424ac5:	call   0x426240
  424aca:	add    esp,0xc
  424acd:	test   edi,edi
  424acf:	jne    0x424b0b
  424ad1:	push   esi
  424ad2:	push   0x8
  424ad4:	push   DWORD PTR ds:0x460220
  424ada:	call   DWORD PTR ds:0x4280d8
  424ae0:	mov    edi,eax
  424ae2:	test   edi,edi
  424ae4:	jne    0x424b0b
  424ae6:	cmp    DWORD PTR ds:0x45fea8,edi
  424aec:	je     0x424b0b
  424aee:	push   esi
  424aef:	call   0x426222
  424af4:	pop    ecx
  424af5:	test   eax,eax
  424af7:	jne    0x424a73
  424afd:	jmp    0x424b0d
  424aff:	mov    esi,DWORD PTR [ebp+0xc]
  424b02:	push   0x4
  424b04:	call   0x423a6b
  424b09:	pop    ecx
  424b0a:	ret    
  424b0b:	mov    eax,edi
  424b0d:	call   0x42397b
  424b12:	ret    
  424b13:	push   esi
  424b14:	mov    esi,DWORD PTR [esp+0x8]
  424b18:	mov    eax,DWORD PTR [esi+0x3c]
  424b1b:	push   edi
  424b1c:	xor    edi,edi
  424b1e:	cmp    eax,DWORD PTR ds:0x45feb4
  424b24:	je     0x424b89
  424b26:	cmp    eax,edi
  424b28:	je     0x424b89
  424b2a:	mov    eax,DWORD PTR [esi+0x2c]
  424b2d:	cmp    DWORD PTR [eax],edi
  424b2f:	jne    0x424b89
  424b31:	mov    eax,DWORD PTR [esi+0x34]
  424b34:	cmp    eax,edi
  424b36:	je     0x424b54
  424b38:	cmp    DWORD PTR [eax],edi
  424b3a:	jne    0x424b54
  424b3c:	cmp    eax,DWORD PTR ds:0x45ffd0
  424b42:	je     0x424b54
  424b44:	push   eax
  424b45:	call   0x42454a
  424b4a:	push   DWORD PTR [esi+0x3c]
  424b4d:	call   0x42648f
  424b52:	pop    ecx
  424b53:	pop    ecx
  424b54:	mov    eax,DWORD PTR [esi+0x30]
  424b57:	cmp    eax,edi
  424b59:	je     0x424b77
  424b5b:	cmp    DWORD PTR [eax],edi
  424b5d:	jne    0x424b77
  424b5f:	cmp    eax,DWORD PTR ds:0x45ffd4
  424b65:	je     0x424b77
  424b67:	push   eax
  424b68:	call   0x42454a
  424b6d:	push   DWORD PTR [esi+0x3c]
  424b70:	call   0x426430
  424b75:	pop    ecx
  424b76:	pop    ecx
  424b77:	push   DWORD PTR [esi+0x2c]
  424b7a:	call   0x42454a
  424b7f:	push   DWORD PTR [esi+0x3c]
  424b82:	call   0x42454a
  424b87:	pop    ecx
  424b88:	pop    ecx
  424b89:	mov    eax,DWORD PTR [esi+0x40]
  424b8c:	cmp    eax,DWORD PTR ds:0x45ffcc
  424b92:	je     0x424bac
  424b94:	cmp    eax,edi
  424b96:	je     0x424bac
  424b98:	cmp    DWORD PTR [eax],edi
  424b9a:	jne    0x424bac
  424b9c:	push   eax
  424b9d:	call   0x42454a
  424ba2:	push   DWORD PTR [esi+0x44]
  424ba5:	call   0x42454a
  424baa:	pop    ecx
  424bab:	pop    ecx
  424bac:	mov    eax,DWORD PTR [esi+0x50]
  424baf:	cmp    eax,DWORD PTR ds:0x45feb0
  424bb5:	je     0x424bd3
  424bb7:	cmp    eax,edi
  424bb9:	je     0x424bd3
  424bbb:	cmp    DWORD PTR [eax+0xb4],edi
  424bc1:	jne    0x424bd3
  424bc3:	push   eax
  424bc4:	call   0x4262a0
  424bc9:	push   DWORD PTR [esi+0x50]
  424bcc:	call   0x42454a
  424bd1:	pop    ecx
  424bd2:	pop    ecx
  424bd3:	push   esi
  424bd4:	call   0x42454a
  424bd9:	pop    ecx
  424bda:	pop    edi
  424bdb:	pop    esi
  424bdc:	ret    
  424bdd:	push   esi
  424bde:	call   0x4237f3
  424be3:	mov    esi,eax
  424be5:	mov    eax,DWORD PTR [esi+0x64]
  424be8:	cmp    eax,DWORD PTR ds:0x45f66c
  424bee:	je     0x424c9a
  424bf4:	test   eax,eax
  424bf6:	je     0x424c27
  424bf8:	mov    ecx,DWORD PTR [eax+0x2c]
  424bfb:	dec    DWORD PTR [eax]
  424bfd:	test   ecx,ecx
  424bff:	je     0x424c03
  424c01:	dec    DWORD PTR [ecx]
  424c03:	mov    ecx,DWORD PTR [eax+0x34]
  424c06:	test   ecx,ecx
  424c08:	je     0x424c0c
  424c0a:	dec    DWORD PTR [ecx]
  424c0c:	mov    ecx,DWORD PTR [eax+0x30]
  424c0f:	test   ecx,ecx
  424c11:	je     0x424c15
  424c13:	dec    DWORD PTR [ecx]
  424c15:	mov    ecx,DWORD PTR [eax+0x40]
  424c18:	test   ecx,ecx
  424c1a:	je     0x424c1e
  424c1c:	dec    DWORD PTR [ecx]
  424c1e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c21:	dec    DWORD PTR [ecx+0xb4]
  424c27:	mov    ecx,DWORD PTR ds:0x45f66c
  424c2d:	mov    DWORD PTR [esi+0x64],ecx
  424c30:	mov    ecx,DWORD PTR ds:0x45f66c
  424c36:	inc    DWORD PTR [ecx]
  424c38:	mov    ecx,DWORD PTR ds:0x45f66c
  424c3e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c41:	test   ecx,ecx
  424c43:	je     0x424c47
  424c45:	inc    DWORD PTR [ecx]
  424c47:	mov    ecx,DWORD PTR ds:0x45f66c
  424c4d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c50:	test   ecx,ecx
  424c52:	je     0x424c56
  424c54:	inc    DWORD PTR [ecx]
  424c56:	mov    ecx,DWORD PTR ds:0x45f66c
  424c5c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c5f:	test   ecx,ecx
  424c61:	je     0x424c65
  424c63:	inc    DWORD PTR [ecx]
  424c65:	mov    ecx,DWORD PTR ds:0x45f66c
  424c6b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c6e:	test   ecx,ecx
  424c70:	je     0x424c74
  424c72:	inc    DWORD PTR [ecx]
  424c74:	mov    ecx,DWORD PTR ds:0x45f66c
  424c7a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c7d:	inc    DWORD PTR [ecx+0xb4]
  424c83:	test   eax,eax
  424c85:	je     0x424c9a
  424c87:	cmp    DWORD PTR [eax],0x0
  424c8a:	jne    0x424c9a
  424c8c:	cmp    eax,0x45f618
  424c91:	je     0x424c9a
  424c93:	push   eax
  424c94:	call   0x424b13
  424c99:	pop    ecx
  424c9a:	mov    eax,DWORD PTR [esi+0x64]
  424c9d:	pop    esi
  424c9e:	ret    
  424c9f:	push   0xc
  424ca1:	push   0x428798
  424ca6:	call   0x423940
  424cab:	push   0xc
  424cad:	call   0x423aff
  424cb2:	pop    ecx
  424cb3:	and    DWORD PTR [ebp-0x4],0x0
  424cb7:	call   0x424bdd
  424cbc:	mov    DWORD PTR [ebp-0x1c],eax
  424cbf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cc3:	call   0x424cd1
  424cc8:	mov    eax,DWORD PTR [ebp-0x1c]
  424ccb:	call   0x42397b
  424cd0:	ret    
  424cd1:	push   0xc
  424cd3:	call   0x423a6b
  424cd8:	pop    ecx
  424cd9:	ret    
  424cda:	push   0x140
  424cdf:	push   0x0
  424ce1:	push   DWORD PTR ds:0x460220
  424ce7:	call   DWORD PTR ds:0x4280d8
  424ced:	test   eax,eax
  424cef:	mov    ds:0x45ffe0,eax
  424cf4:	jne    0x424cf7
  424cf6:	ret    
  424cf7:	mov    ecx,DWORD PTR [esp+0x4]
  424cfb:	and    DWORD PTR ds:0x45ffd8,0x0
  424d02:	and    DWORD PTR ds:0x45ffdc,0x0
  424d09:	mov    ds:0x45ffe8,eax
  424d0e:	xor    eax,eax
  424d10:	mov    DWORD PTR ds:0x45ffe4,ecx
  424d16:	mov    DWORD PTR ds:0x45ffec,0x10
  424d20:	inc    eax
  424d21:	ret    
  424d22:	mov    eax,ds:0x45ffdc
  424d27:	lea    ecx,[eax+eax*4]
  424d2a:	mov    eax,ds:0x45ffe0
  424d2f:	lea    ecx,[eax+ecx*4]
  424d32:	jmp    0x424d46
  424d34:	mov    edx,DWORD PTR [esp+0x4]
  424d38:	sub    edx,DWORD PTR [eax+0xc]
  424d3b:	cmp    edx,0x100000
  424d41:	jb     0x424d4c
  424d43:	add    eax,0x14
  424d46:	cmp    eax,ecx
  424d48:	jb     0x424d34
  424d4a:	xor    eax,eax
  424d4c:	ret    
  424d4d:	push   ebp
  424d4e:	mov    ebp,esp
  424d50:	sub    esp,0x10
  424d53:	mov    ecx,DWORD PTR [ebp+0x8]
  424d56:	mov    eax,DWORD PTR [ecx+0x10]
  424d59:	push   esi
  424d5a:	mov    esi,DWORD PTR [ebp+0xc]
  424d5d:	push   edi
  424d5e:	mov    edi,esi
  424d60:	sub    edi,DWORD PTR [ecx+0xc]
  424d63:	add    esi,0xfffffffc
  424d66:	shr    edi,0xf
  424d69:	mov    ecx,edi
  424d6b:	imul   ecx,ecx,0x204
  424d71:	lea    ecx,[ecx+eax*1+0x144]
  424d78:	mov    DWORD PTR [ebp-0x10],ecx
  424d7b:	mov    ecx,DWORD PTR [esi]
  424d7d:	dec    ecx
  424d7e:	test   cl,0x1
  424d81:	mov    DWORD PTR [ebp-0x4],ecx
  424d84:	jne    0x425061
  424d8a:	push   ebx
  424d8b:	lea    ebx,[ecx+esi*1]
  424d8e:	mov    edx,DWORD PTR [ebx]
  424d90:	mov    DWORD PTR [ebp-0xc],edx
  424d93:	mov    edx,DWORD PTR [esi-0x4]
  424d96:	mov    DWORD PTR [ebp-0x8],edx
  424d99:	mov    edx,DWORD PTR [ebp-0xc]
  424d9c:	test   dl,0x1
  424d9f:	mov    DWORD PTR [ebp+0xc],ebx
  424da2:	jne    0x424e18
  424da4:	sar    edx,0x4
  424da7:	dec    edx
  424da8:	cmp    edx,0x3f
  424dab:	jbe    0x424db0
  424dad:	push   0x3f
  424daf:	pop    edx
  424db0:	mov    ecx,DWORD PTR [ebx+0x4]
  424db3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424db6:	jne    0x424dfa
  424db8:	cmp    edx,0x20
  424dbb:	mov    ebx,0x80000000
  424dc0:	jae    0x424ddb
  424dc2:	mov    ecx,edx
  424dc4:	shr    ebx,cl
  424dc6:	lea    ecx,[edx+eax*1+0x4]
  424dca:	not    ebx
  424dcc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424dd0:	dec    BYTE PTR [ecx]
  424dd2:	jne    0x424df7
  424dd4:	mov    ecx,DWORD PTR [ebp+0x8]
  424dd7:	and    DWORD PTR [ecx],ebx
  424dd9:	jmp    0x424df7
  424ddb:	lea    ecx,[edx-0x20]
  424dde:	shr    ebx,cl
  424de0:	lea    ecx,[edx+eax*1+0x4]
  424de4:	not    ebx
  424de6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424ded:	dec    BYTE PTR [ecx]
  424def:	jne    0x424df7
  424df1:	mov    ecx,DWORD PTR [ebp+0x8]
  424df4:	and    DWORD PTR [ecx+0x4],ebx
  424df7:	mov    ebx,DWORD PTR [ebp+0xc]
  424dfa:	mov    edx,DWORD PTR [ebx+0x8]
  424dfd:	mov    ebx,DWORD PTR [ebx+0x4]
  424e00:	mov    ecx,DWORD PTR [ebp-0x4]
  424e03:	add    ecx,DWORD PTR [ebp-0xc]
  424e06:	mov    DWORD PTR [edx+0x4],ebx
  424e09:	mov    edx,DWORD PTR [ebp+0xc]
  424e0c:	mov    ebx,DWORD PTR [edx+0x4]
  424e0f:	mov    edx,DWORD PTR [edx+0x8]
  424e12:	mov    DWORD PTR [ebx+0x8],edx
  424e15:	mov    DWORD PTR [ebp-0x4],ecx
  424e18:	mov    edx,ecx
  424e1a:	sar    edx,0x4
  424e1d:	dec    edx
  424e1e:	cmp    edx,0x3f
  424e21:	jbe    0x424e26
  424e23:	push   0x3f
  424e25:	pop    edx
  424e26:	mov    ebx,DWORD PTR [ebp-0x8]
  424e29:	and    ebx,0x1
  424e2c:	mov    DWORD PTR [ebp-0xc],ebx
  424e2f:	jne    0x424ec4
  424e35:	sub    esi,DWORD PTR [ebp-0x8]
  424e38:	mov    ebx,DWORD PTR [ebp-0x8]
  424e3b:	sar    ebx,0x4
  424e3e:	push   0x3f
  424e40:	mov    DWORD PTR [ebp+0xc],esi
  424e43:	dec    ebx
  424e44:	pop    esi
  424e45:	cmp    ebx,esi
  424e47:	jbe    0x424e4b
  424e49:	mov    ebx,esi
  424e4b:	add    ecx,DWORD PTR [ebp-0x8]
  424e4e:	mov    edx,ecx
  424e50:	sar    edx,0x4
  424e53:	dec    edx
  424e54:	cmp    edx,esi
  424e56:	mov    DWORD PTR [ebp-0x4],ecx
  424e59:	jbe    0x424e5d
  424e5b:	mov    edx,esi
  424e5d:	cmp    ebx,edx
  424e5f:	je     0x424ebf
  424e61:	mov    ecx,DWORD PTR [ebp+0xc]
  424e64:	mov    esi,DWORD PTR [ecx+0x4]
  424e67:	cmp    esi,DWORD PTR [ecx+0x8]
  424e6a:	jne    0x424ea7
  424e6c:	cmp    ebx,0x20
  424e6f:	mov    esi,0x80000000
  424e74:	jae    0x424e8d
  424e76:	mov    ecx,ebx
  424e78:	shr    esi,cl
  424e7a:	not    esi
  424e7c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e80:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e84:	jne    0x424ea7
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	and    DWORD PTR [ecx],esi
  424e8b:	jmp    0x424ea7
  424e8d:	lea    ecx,[ebx-0x20]
  424e90:	shr    esi,cl
  424e92:	not    esi
  424e94:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e9b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e9f:	jne    0x424ea7
  424ea1:	mov    ecx,DWORD PTR [ebp+0x8]
  424ea4:	and    DWORD PTR [ecx+0x4],esi
  424ea7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eaa:	mov    esi,DWORD PTR [ecx+0x8]
  424ead:	mov    ecx,DWORD PTR [ecx+0x4]
  424eb0:	mov    DWORD PTR [esi+0x4],ecx
  424eb3:	mov    ecx,DWORD PTR [ebp+0xc]
  424eb6:	mov    esi,DWORD PTR [ecx+0x4]
  424eb9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ebc:	mov    DWORD PTR [esi+0x8],ecx
  424ebf:	mov    esi,DWORD PTR [ebp+0xc]
  424ec2:	jmp    0x424ec7
  424ec4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ec7:	cmp    DWORD PTR [ebp-0xc],0x0
  424ecb:	jne    0x424ed5
  424ecd:	cmp    ebx,edx
  424ecf:	je     0x424f55
  424ed5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ed8:	lea    ecx,[ecx+edx*8]
  424edb:	mov    ebx,DWORD PTR [ecx+0x4]
  424ede:	mov    DWORD PTR [esi+0x8],ecx
  424ee1:	mov    DWORD PTR [esi+0x4],ebx
  424ee4:	mov    DWORD PTR [ecx+0x4],esi
  424ee7:	mov    ecx,DWORD PTR [esi+0x4]
  424eea:	mov    DWORD PTR [ecx+0x8],esi
  424eed:	mov    ecx,DWORD PTR [esi+0x4]
  424ef0:	cmp    ecx,DWORD PTR [esi+0x8]
  424ef3:	jne    0x424f55
  424ef5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424ef9:	mov    BYTE PTR [ebp+0xf],cl
  424efc:	inc    cl
  424efe:	cmp    edx,0x20
  424f01:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f05:	jae    0x424f2c
  424f07:	cmp    BYTE PTR [ebp+0xf],0x0
  424f0b:	jne    0x424f1b
  424f0d:	mov    ecx,edx
  424f0f:	mov    ebx,0x80000000
  424f14:	shr    ebx,cl
  424f16:	mov    ecx,DWORD PTR [ebp+0x8]
  424f19:	or     DWORD PTR [ecx],ebx
  424f1b:	mov    ebx,0x80000000
  424f20:	mov    ecx,edx
  424f22:	shr    ebx,cl
  424f24:	lea    eax,[eax+edi*4+0x44]
  424f28:	or     DWORD PTR [eax],ebx
  424f2a:	jmp    0x424f55
  424f2c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f30:	jne    0x424f42
  424f32:	lea    ecx,[edx-0x20]
  424f35:	mov    ebx,0x80000000
  424f3a:	shr    ebx,cl
  424f3c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f3f:	or     DWORD PTR [ecx+0x4],ebx
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    edx,0x80000000
  424f4a:	shr    edx,cl
  424f4c:	lea    eax,[eax+edi*4+0xc4]
  424f53:	or     DWORD PTR [eax],edx
  424f55:	mov    eax,DWORD PTR [ebp-0x4]
  424f58:	mov    DWORD PTR [esi],eax
  424f5a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f5e:	mov    eax,DWORD PTR [ebp-0x10]
  424f61:	dec    DWORD PTR [eax]
  424f63:	jne    0x425060
  424f69:	mov    eax,ds:0x45ffd8
  424f6e:	test   eax,eax
  424f70:	je     0x425052
  424f76:	mov    ecx,DWORD PTR ds:0x45fff0
  424f7c:	mov    esi,DWORD PTR ds:0x4280bc
  424f82:	push   0x4000
  424f87:	shl    ecx,0xf
  424f8a:	add    ecx,DWORD PTR [eax+0xc]
  424f8d:	mov    ebx,0x8000
  424f92:	push   ebx
  424f93:	push   ecx
  424f94:	call   esi
  424f96:	mov    ecx,DWORD PTR ds:0x45fff0
  424f9c:	mov    eax,ds:0x45ffd8
  424fa1:	mov    edx,0x80000000
  424fa6:	shr    edx,cl
  424fa8:	or     DWORD PTR [eax+0x8],edx
  424fab:	mov    eax,ds:0x45ffd8
  424fb0:	mov    eax,DWORD PTR [eax+0x10]
  424fb3:	mov    ecx,DWORD PTR ds:0x45fff0
  424fb9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fc1:	mov    eax,ds:0x45ffd8
  424fc6:	mov    eax,DWORD PTR [eax+0x10]
  424fc9:	dec    BYTE PTR [eax+0x43]
  424fcc:	mov    eax,ds:0x45ffd8
  424fd1:	mov    ecx,DWORD PTR [eax+0x10]
  424fd4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fd8:	jne    0x424fe3
  424fda:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fde:	mov    eax,ds:0x45ffd8
  424fe3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424fe7:	jne    0x425052
  424fe9:	push   ebx
  424fea:	push   0x0
  424fec:	push   DWORD PTR [eax+0xc]
  424fef:	call   esi
  424ff1:	mov    eax,ds:0x45ffd8
  424ff6:	push   DWORD PTR [eax+0x10]
  424ff9:	push   0x0
  424ffb:	push   DWORD PTR ds:0x460220
  425001:	call   DWORD PTR ds:0x4280c0
  425007:	mov    eax,ds:0x45ffdc
  42500c:	mov    edx,DWORD PTR ds:0x45ffe0
  425012:	lea    eax,[eax+eax*4]
  425015:	shl    eax,0x2
  425018:	mov    ecx,eax
  42501a:	mov    eax,ds:0x45ffd8
  42501f:	sub    ecx,eax
  425021:	lea    ecx,[ecx+edx*1-0x14]
  425025:	push   ecx
  425026:	lea    ecx,[eax+0x14]
  425029:	push   ecx
  42502a:	push   eax
  42502b:	call   0x426880
  425030:	mov    eax,DWORD PTR [ebp+0x8]
  425033:	add    esp,0xc
  425036:	dec    DWORD PTR ds:0x45ffdc
  42503c:	cmp    eax,DWORD PTR ds:0x45ffd8
  425042:	jbe    0x425048
  425044:	sub    DWORD PTR [ebp+0x8],0x14
  425048:	mov    eax,ds:0x45ffe0
  42504d:	mov    ds:0x45ffe8,eax
  425052:	mov    eax,DWORD PTR [ebp+0x8]
  425055:	mov    ds:0x45ffd8,eax
  42505a:	mov    DWORD PTR ds:0x45fff0,edi
  425060:	pop    ebx
  425061:	pop    edi
  425062:	pop    esi
  425063:	leave  
  425064:	ret    
  425065:	mov    eax,ds:0x45ffdc
  42506a:	mov    ecx,DWORD PTR ds:0x45ffec
  425070:	push   edi
  425071:	xor    edi,edi
  425073:	cmp    eax,ecx
  425075:	jne    0x4250ab
  425077:	lea    eax,[ecx+ecx*4+0x50]
  42507b:	shl    eax,0x2
  42507e:	push   eax
  42507f:	push   DWORD PTR ds:0x45ffe0
  425085:	push   edi
  425086:	push   DWORD PTR ds:0x460220
  42508c:	call   DWORD PTR ds:0x4280e0
  425092:	cmp    eax,edi
  425094:	jne    0x42509a
  425096:	xor    eax,eax
  425098:	pop    edi
  425099:	ret    
  42509a:	add    DWORD PTR ds:0x45ffec,0x10
  4250a1:	mov    ds:0x45ffe0,eax
  4250a6:	mov    eax,ds:0x45ffdc
  4250ab:	mov    ecx,DWORD PTR ds:0x45ffe0
  4250b1:	push   esi
  4250b2:	push   0x41c4
  4250b7:	push   0x8
  4250b9:	push   DWORD PTR ds:0x460220
  4250bf:	lea    eax,[eax+eax*4]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	call   DWORD PTR ds:0x4280d8
  4250cb:	cmp    eax,edi
  4250cd:	mov    DWORD PTR [esi+0x10],eax
  4250d0:	jne    0x4250d6
  4250d2:	xor    eax,eax
  4250d4:	jmp    0x425119
  4250d6:	push   0x4
  4250d8:	push   0x2000
  4250dd:	push   0x100000
  4250e2:	push   edi
  4250e3:	call   DWORD PTR ds:0x42802c
  4250e9:	cmp    eax,edi
  4250eb:	mov    DWORD PTR [esi+0xc],eax
  4250ee:	jne    0x425102
  4250f0:	push   DWORD PTR [esi+0x10]
  4250f3:	push   edi
  4250f4:	push   DWORD PTR ds:0x460220
  4250fa:	call   DWORD PTR ds:0x4280c0
  425100:	jmp    0x4250d2
  425102:	or     DWORD PTR [esi+0x8],0xffffffff
  425106:	mov    DWORD PTR [esi],edi
  425108:	mov    DWORD PTR [esi+0x4],edi
  42510b:	inc    DWORD PTR ds:0x45ffdc
  425111:	mov    eax,DWORD PTR [esi+0x10]
  425114:	or     DWORD PTR [eax],0xffffffff
  425117:	mov    eax,esi
  425119:	pop    esi
  42511a:	pop    edi
  42511b:	ret    
  42511c:	push   ebp
  42511d:	mov    ebp,esp
  42511f:	push   ecx
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp+0x8]
  425124:	mov    eax,DWORD PTR [ecx+0x8]
  425127:	push   ebx
  425128:	push   esi
  425129:	mov    esi,DWORD PTR [ecx+0x10]
  42512c:	push   edi
  42512d:	xor    ebx,ebx
  42512f:	jmp    0x425134
  425131:	shl    eax,1
  425133:	inc    ebx
  425134:	test   eax,eax
  425136:	jge    0x425131
  425138:	mov    eax,ebx
  42513a:	imul   eax,eax,0x204
  425140:	lea    eax,[eax+esi*1+0x144]
  425147:	push   0x3f
  425149:	mov    DWORD PTR [ebp-0x8],eax
  42514c:	pop    edx
  42514d:	mov    DWORD PTR [eax+0x8],eax
  425150:	mov    DWORD PTR [eax+0x4],eax
  425153:	add    eax,0x8
  425156:	dec    edx
  425157:	jne    0x42514d
  425159:	push   0x4
  42515b:	mov    edi,ebx
  42515d:	push   0x1000
  425162:	shl    edi,0xf
  425165:	add    edi,DWORD PTR [ecx+0xc]
  425168:	push   0x8000
  42516d:	push   edi
  42516e:	call   DWORD PTR ds:0x42802c
  425174:	test   eax,eax
  425176:	jne    0x425180
  425178:	or     eax,0xffffffff
  42517b:	jmp    0x42521d
  425180:	lea    edx,[edi+0x7000]
  425186:	cmp    edi,edx
  425188:	mov    DWORD PTR [ebp-0x4],edx
  42518b:	ja     0x4251d0
  42518d:	mov    ecx,edx
  42518f:	sub    ecx,edi
  425191:	shr    ecx,0xc
  425194:	lea    eax,[edi+0x10]
  425197:	inc    ecx
  425198:	or     DWORD PTR [eax-0x8],0xffffffff
  42519c:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251a3:	lea    edx,[eax+0xffc]
  4251a9:	mov    DWORD PTR [eax],edx
  4251ab:	lea    edx,[eax-0x1004]
  4251b1:	mov    DWORD PTR [eax-0x4],0xff0
  4251b8:	mov    DWORD PTR [eax+0x4],edx
  4251bb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251c5:	add    eax,0x1000
  4251ca:	dec    ecx
  4251cb:	jne    0x425198
  4251cd:	mov    edx,DWORD PTR [ebp-0x4]
  4251d0:	mov    eax,DWORD PTR [ebp-0x8]
  4251d3:	add    eax,0x1f8
  4251d8:	lea    ecx,[edi+0xc]
  4251db:	mov    DWORD PTR [eax+0x4],ecx
  4251de:	mov    DWORD PTR [ecx+0x8],eax
  4251e1:	lea    ecx,[edx+0xc]
  4251e4:	mov    DWORD PTR [eax+0x8],ecx
  4251e7:	mov    DWORD PTR [ecx+0x4],eax
  4251ea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ef:	xor    edi,edi
  4251f1:	inc    edi
  4251f2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  4251f9:	mov    al,BYTE PTR [esi+0x43]
  4251fc:	mov    cl,al
  4251fe:	inc    cl
  425200:	test   al,al
  425202:	mov    eax,DWORD PTR [ebp+0x8]
  425205:	mov    BYTE PTR [esi+0x43],cl
  425208:	jne    0x42520d
  42520a:	or     DWORD PTR [eax+0x4],edi
  42520d:	mov    edx,0x80000000
  425212:	mov    ecx,ebx
  425214:	shr    edx,cl
  425216:	not    edx
  425218:	and    DWORD PTR [eax+0x8],edx
  42521b:	mov    eax,ebx
  42521d:	pop    edi
  42521e:	pop    esi
  42521f:	pop    ebx
  425220:	leave  
  425221:	ret    
  425222:	push   ebp
  425223:	mov    ebp,esp
  425225:	sub    esp,0xc
  425228:	mov    ecx,DWORD PTR [ebp+0x8]
  42522b:	mov    eax,DWORD PTR [ecx+0x10]
  42522e:	push   ebx
  42522f:	push   esi
  425230:	mov    esi,DWORD PTR [ebp+0x10]
  425233:	push   edi
  425234:	mov    edi,DWORD PTR [ebp+0xc]
  425237:	mov    edx,edi
  425239:	sub    edx,DWORD PTR [ecx+0xc]
  42523c:	add    esi,0x17
  42523f:	shr    edx,0xf
  425242:	mov    ecx,edx
  425244:	imul   ecx,ecx,0x204
  42524a:	lea    ecx,[ecx+eax*1+0x144]
  425251:	mov    DWORD PTR [ebp-0xc],ecx
  425254:	mov    ecx,DWORD PTR [edi-0x4]
  425257:	and    esi,0xfffffff0
  42525a:	dec    ecx
  42525b:	cmp    esi,ecx
  42525d:	lea    edi,[ecx+edi*1-0x4]
  425261:	mov    ebx,DWORD PTR [edi]
  425263:	mov    DWORD PTR [ebp+0x10],ecx
  425266:	mov    DWORD PTR [ebp-0x4],ebx
  425269:	jle    0x4253c4
  42526f:	test   bl,0x1
  425272:	jne    0x4253bd
  425278:	add    ebx,ecx
  42527a:	cmp    esi,ebx
  42527c:	jg     0x4253bd
  425282:	mov    ecx,DWORD PTR [ebp-0x4]
  425285:	sar    ecx,0x4
  425288:	dec    ecx
  425289:	cmp    ecx,0x3f
  42528c:	mov    DWORD PTR [ebp-0x8],ecx
  42528f:	jbe    0x425297
  425291:	push   0x3f
  425293:	pop    ecx
  425294:	mov    DWORD PTR [ebp-0x8],ecx
  425297:	mov    ebx,DWORD PTR [edi+0x4]
  42529a:	cmp    ebx,DWORD PTR [edi+0x8]
  42529d:	jne    0x4252e2
  42529f:	cmp    ecx,0x20
  4252a2:	mov    ebx,0x80000000
  4252a7:	jae    0x4252c3
  4252a9:	shr    ebx,cl
  4252ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4252ae:	lea    ecx,[ecx+eax*1+0x4]
  4252b2:	not    ebx
  4252b4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252b8:	dec    BYTE PTR [ecx]
  4252ba:	jne    0x4252e2
  4252bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252bf:	and    DWORD PTR [ecx],ebx
  4252c1:	jmp    0x4252e2
  4252c3:	add    ecx,0xffffffe0
  4252c6:	shr    ebx,cl
  4252c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252cb:	lea    ecx,[ecx+eax*1+0x4]
  4252cf:	not    ebx
  4252d1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252d8:	dec    BYTE PTR [ecx]
  4252da:	jne    0x4252e2
  4252dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252df:	and    DWORD PTR [ecx+0x4],ebx
  4252e2:	mov    ecx,DWORD PTR [edi+0x8]
  4252e5:	mov    ebx,DWORD PTR [edi+0x4]
  4252e8:	mov    DWORD PTR [ecx+0x4],ebx
  4252eb:	mov    ecx,DWORD PTR [edi+0x4]
  4252ee:	mov    edi,DWORD PTR [edi+0x8]
  4252f1:	mov    DWORD PTR [ecx+0x8],edi
  4252f4:	mov    ecx,DWORD PTR [ebp+0x10]
  4252f7:	sub    ecx,esi
  4252f9:	add    DWORD PTR [ebp-0x4],ecx
  4252fc:	cmp    DWORD PTR [ebp-0x4],0x0
  425300:	jle    0x4253ab
  425306:	mov    edi,DWORD PTR [ebp-0x4]
  425309:	mov    ecx,DWORD PTR [ebp+0xc]
  42530c:	sar    edi,0x4
  42530f:	dec    edi
  425310:	cmp    edi,0x3f
  425313:	lea    ecx,[ecx+esi*1-0x4]
  425317:	jbe    0x42531c
  425319:	push   0x3f
  42531b:	pop    edi
  42531c:	mov    ebx,DWORD PTR [ebp-0xc]
  42531f:	lea    ebx,[ebx+edi*8]
  425322:	mov    DWORD PTR [ebp+0x10],ebx
  425325:	mov    ebx,DWORD PTR [ebx+0x4]
  425328:	mov    DWORD PTR [ecx+0x4],ebx
  42532b:	mov    ebx,DWORD PTR [ebp+0x10]
  42532e:	mov    DWORD PTR [ecx+0x8],ebx
  425331:	mov    DWORD PTR [ebx+0x4],ecx
  425334:	mov    ebx,DWORD PTR [ecx+0x4]
  425337:	mov    DWORD PTR [ebx+0x8],ecx
  42533a:	mov    ebx,DWORD PTR [ecx+0x4]
  42533d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425340:	jne    0x425399
  425342:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425346:	mov    BYTE PTR [ebp+0x13],cl
  425349:	inc    cl
  42534b:	cmp    edi,0x20
  42534e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425352:	jae    0x425370
  425354:	cmp    BYTE PTR [ebp+0x13],0x0
  425358:	jne    0x425368
  42535a:	mov    ecx,edi
  42535c:	mov    ebx,0x80000000
  425361:	shr    ebx,cl
  425363:	mov    ecx,DWORD PTR [ebp+0x8]
  425366:	or     DWORD PTR [ecx],ebx
  425368:	lea    eax,[eax+edx*4+0x44]
  42536c:	mov    ecx,edi
  42536e:	jmp    0x425390
  425370:	cmp    BYTE PTR [ebp+0x13],0x0
  425374:	jne    0x425386
  425376:	lea    ecx,[edi-0x20]
  425379:	mov    ebx,0x80000000
  42537e:	shr    ebx,cl
  425380:	mov    ecx,DWORD PTR [ebp+0x8]
  425383:	or     DWORD PTR [ecx+0x4],ebx
  425386:	lea    eax,[eax+edx*4+0xc4]
  42538d:	lea    ecx,[edi-0x20]
  425390:	mov    edx,0x80000000
  425395:	shr    edx,cl
  425397:	or     DWORD PTR [eax],edx
  425399:	mov    edx,DWORD PTR [ebp+0xc]
  42539c:	mov    ecx,DWORD PTR [ebp-0x4]
  42539f:	lea    eax,[edx+esi*1-0x4]
  4253a3:	mov    DWORD PTR [eax],ecx
  4253a5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253a9:	jmp    0x4253ae
  4253ab:	mov    edx,DWORD PTR [ebp+0xc]
  4253ae:	lea    eax,[esi+0x1]
  4253b1:	mov    DWORD PTR [edx-0x4],eax
  4253b4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253b8:	jmp    0x4254f9
  4253bd:	xor    eax,eax
  4253bf:	jmp    0x4254fc
  4253c4:	jge    0x4254f9
  4253ca:	mov    ebx,DWORD PTR [ebp+0xc]
  4253cd:	sub    DWORD PTR [ebp+0x10],esi
  4253d0:	lea    ecx,[esi+0x1]
  4253d3:	mov    DWORD PTR [ebx-0x4],ecx
  4253d6:	lea    ebx,[ebx+esi*1-0x4]
  4253da:	mov    esi,DWORD PTR [ebp+0x10]
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	mov    DWORD PTR [ebp+0xc],ebx
  4253e7:	mov    DWORD PTR [ebx-0x4],ecx
  4253ea:	jbe    0x4253ef
  4253ec:	push   0x3f
  4253ee:	pop    esi
  4253ef:	test   BYTE PTR [ebp-0x4],0x1
  4253f3:	jne    0x425479
  4253f9:	mov    esi,DWORD PTR [ebp-0x4]
  4253fc:	sar    esi,0x4
  4253ff:	dec    esi
  425400:	cmp    esi,0x3f
  425403:	jbe    0x425408
  425405:	push   0x3f
  425407:	pop    esi
  425408:	mov    ecx,DWORD PTR [edi+0x4]
  42540b:	cmp    ecx,DWORD PTR [edi+0x8]
  42540e:	jne    0x425452
  425410:	cmp    esi,0x20
  425413:	mov    ebx,0x80000000
  425418:	jae    0x425433
  42541a:	mov    ecx,esi
  42541c:	shr    ebx,cl
  42541e:	lea    esi,[esi+eax*1+0x4]
  425422:	not    ebx
  425424:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425428:	dec    BYTE PTR [esi]
  42542a:	jne    0x42544f
  42542c:	mov    ecx,DWORD PTR [ebp+0x8]
  42542f:	and    DWORD PTR [ecx],ebx
  425431:	jmp    0x42544f
  425433:	lea    ecx,[esi-0x20]
  425436:	shr    ebx,cl
  425438:	lea    ecx,[esi+eax*1+0x4]
  42543c:	not    ebx
  42543e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425445:	dec    BYTE PTR [ecx]
  425447:	jne    0x42544f
  425449:	mov    ecx,DWORD PTR [ebp+0x8]
  42544c:	and    DWORD PTR [ecx+0x4],ebx
  42544f:	mov    ebx,DWORD PTR [ebp+0xc]
  425452:	mov    ecx,DWORD PTR [edi+0x8]
  425455:	mov    esi,DWORD PTR [edi+0x4]
  425458:	mov    DWORD PTR [ecx+0x4],esi
  42545b:	mov    esi,DWORD PTR [edi+0x8]
  42545e:	mov    ecx,DWORD PTR [edi+0x4]
  425461:	mov    DWORD PTR [ecx+0x8],esi
  425464:	mov    esi,DWORD PTR [ebp+0x10]
  425467:	add    esi,DWORD PTR [ebp-0x4]
  42546a:	mov    DWORD PTR [ebp+0x10],esi
  42546d:	sar    esi,0x4
  425470:	dec    esi
  425471:	cmp    esi,0x3f
  425474:	jbe    0x425479
  425476:	push   0x3f
  425478:	pop    esi
  425479:	mov    ecx,DWORD PTR [ebp-0xc]
  42547c:	lea    ecx,[ecx+esi*8]
  42547f:	mov    edi,DWORD PTR [ecx+0x4]
  425482:	mov    DWORD PTR [ebx+0x8],ecx
  425485:	mov    DWORD PTR [ebx+0x4],edi
  425488:	mov    DWORD PTR [ecx+0x4],ebx
  42548b:	mov    ecx,DWORD PTR [ebx+0x4]
  42548e:	mov    DWORD PTR [ecx+0x8],ebx
  425491:	mov    ecx,DWORD PTR [ebx+0x4]
  425494:	cmp    ecx,DWORD PTR [ebx+0x8]
  425497:	jne    0x4254f0
  425499:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42549d:	mov    BYTE PTR [ebp+0xf],cl
  4254a0:	inc    cl
  4254a2:	cmp    esi,0x20
  4254a5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254a9:	jae    0x4254c7
  4254ab:	cmp    BYTE PTR [ebp+0xf],0x0
  4254af:	jne    0x4254bf
  4254b1:	mov    ecx,esi
  4254b3:	mov    edi,0x80000000
  4254b8:	shr    edi,cl
  4254ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4254bd:	or     DWORD PTR [ecx],edi
  4254bf:	lea    eax,[eax+edx*4+0x44]
  4254c3:	mov    ecx,esi
  4254c5:	jmp    0x4254e7
  4254c7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254cb:	jne    0x4254dd
  4254cd:	lea    ecx,[esi-0x20]
  4254d0:	mov    edi,0x80000000
  4254d5:	shr    edi,cl
  4254d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254da:	or     DWORD PTR [ecx+0x4],edi
  4254dd:	lea    eax,[eax+edx*4+0xc4]
  4254e4:	lea    ecx,[esi-0x20]
  4254e7:	mov    edx,0x80000000
  4254ec:	shr    edx,cl
  4254ee:	or     DWORD PTR [eax],edx
  4254f0:	mov    eax,DWORD PTR [ebp+0x10]
  4254f3:	mov    DWORD PTR [ebx],eax
  4254f5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  4254f9:	xor    eax,eax
  4254fb:	inc    eax
  4254fc:	pop    edi
  4254fd:	pop    esi
  4254fe:	pop    ebx
  4254ff:	leave  
  425500:	ret    
  425501:	push   ebp
  425502:	mov    ebp,esp
  425504:	sub    esp,0x14
  425507:	mov    ecx,DWORD PTR [ebp+0x8]
  42550a:	mov    eax,ds:0x45ffdc
  42550f:	mov    edx,DWORD PTR ds:0x45ffe0
  425515:	add    ecx,0x17
  425518:	and    ecx,0xfffffff0
  42551b:	push   ebx
  42551c:	mov    DWORD PTR [ebp-0x10],ecx
  42551f:	sar    ecx,0x4
  425522:	push   esi
  425523:	lea    eax,[eax+eax*4]
  425526:	push   edi
  425527:	dec    ecx
  425528:	cmp    ecx,0x20
  42552b:	lea    edi,[edx+eax*4]
  42552e:	mov    DWORD PTR [ebp-0x4],edi
  425531:	jge    0x42553e
  425533:	or     esi,0xffffffff
  425536:	shr    esi,cl
  425538:	or     DWORD PTR [ebp-0x8],0xffffffff
  42553c:	jmp    0x42554b
  42553e:	add    ecx,0xffffffe0
  425541:	or     eax,0xffffffff
  425544:	xor    esi,esi
  425546:	shr    eax,cl
  425548:	mov    DWORD PTR [ebp-0x8],eax
  42554b:	mov    eax,ds:0x45ffe8
  425550:	mov    ebx,eax
  425552:	mov    DWORD PTR [ebp-0xc],esi
  425555:	cmp    ebx,edi
  425557:	jmp    0x42556d
  425559:	mov    ecx,DWORD PTR [ebx+0x4]
  42555c:	mov    edi,DWORD PTR [ebx]
  42555e:	and    ecx,DWORD PTR [ebp-0x8]
  425561:	and    edi,esi
  425563:	or     ecx,edi
  425565:	jne    0x425572
  425567:	add    ebx,0x14
  42556a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42556d:	mov    DWORD PTR [ebp+0x8],ebx
  425570:	jb     0x425559
  425572:	cmp    ebx,DWORD PTR [ebp-0x4]
  425575:	jne    0x42559b
  425577:	mov    ebx,edx
  425579:	jmp    0x42558c
  42557b:	mov    ecx,DWORD PTR [ebx+0x4]
  42557e:	mov    edi,DWORD PTR [ebx]
  425580:	and    ecx,DWORD PTR [ebp-0x8]
  425583:	and    edi,esi
  425585:	or     ecx,edi
  425587:	jne    0x425593
  425589:	add    ebx,0x14
  42558c:	cmp    ebx,eax
  42558e:	mov    DWORD PTR [ebp+0x8],ebx
  425591:	jb     0x42557b
  425593:	cmp    ebx,eax
  425595:	je     0x42562f
  42559b:	mov    DWORD PTR ds:0x45ffe8,ebx
  4255a1:	mov    eax,DWORD PTR [ebx+0x10]
  4255a4:	mov    edx,DWORD PTR [eax]
  4255a6:	cmp    edx,0xffffffff
  4255a9:	mov    DWORD PTR [ebp-0x4],edx
  4255ac:	je     0x4255c2
  4255ae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255b5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255b9:	and    ecx,DWORD PTR [ebp-0x8]
  4255bc:	and    edi,esi
  4255be:	or     ecx,edi
  4255c0:	jne    0x4255f8
  4255c2:	mov    edx,DWORD PTR [eax+0xc4]
  4255c8:	and    edx,DWORD PTR [ebp-0x8]
  4255cb:	and    DWORD PTR [ebp-0x4],0x0
  4255cf:	lea    ecx,[eax+0x44]
  4255d2:	mov    esi,DWORD PTR [ecx]
  4255d4:	and    esi,DWORD PTR [ebp-0xc]
  4255d7:	or     edx,esi
  4255d9:	mov    esi,DWORD PTR [ebp-0xc]
  4255dc:	jne    0x4255f5
  4255de:	mov    edx,DWORD PTR [ecx+0x84]
  4255e4:	and    edx,DWORD PTR [ebp-0x8]
  4255e7:	inc    DWORD PTR [ebp-0x4]
  4255ea:	add    ecx,0x4
  4255ed:	mov    edi,DWORD PTR [ecx]
  4255ef:	and    edi,esi
  4255f1:	or     edx,edi
  4255f3:	je     0x4255de
  4255f5:	mov    edx,DWORD PTR [ebp-0x4]
  4255f8:	mov    ecx,edx
  4255fa:	imul   ecx,ecx,0x204
  425600:	lea    ecx,[ecx+eax*1+0x144]
  425607:	mov    DWORD PTR [ebp-0xc],ecx
  42560a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42560e:	xor    edi,edi
  425610:	and    ecx,esi
  425612:	jne    0x425681
  425614:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42561b:	and    ecx,DWORD PTR [ebp-0x8]
  42561e:	push   0x20
  425620:	pop    edi
  425621:	jmp    0x425681
  425623:	cmp    DWORD PTR [ebx+0x8],0x0
  425627:	jne    0x425634
  425629:	add    ebx,0x14
  42562c:	mov    DWORD PTR [ebp+0x8],ebx
  42562f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425632:	jb     0x425623
  425634:	cmp    ebx,DWORD PTR [ebp-0x4]
  425637:	jne    0x42565f
  425639:	mov    ebx,edx
  42563b:	jmp    0x425646
  42563d:	cmp    DWORD PTR [ebx+0x8],0x0
  425641:	jne    0x42564d
  425643:	add    ebx,0x14
  425646:	cmp    ebx,eax
  425648:	mov    DWORD PTR [ebp+0x8],ebx
  42564b:	jb     0x42563d
  42564d:	cmp    ebx,eax
  42564f:	jne    0x42565f
  425651:	call   0x425065
  425656:	mov    ebx,eax
  425658:	test   ebx,ebx
  42565a:	mov    DWORD PTR [ebp+0x8],ebx
  42565d:	je     0x425677
  42565f:	push   ebx
  425660:	call   0x42511c
  425665:	pop    ecx
  425666:	mov    ecx,DWORD PTR [ebx+0x10]
  425669:	mov    DWORD PTR [ecx],eax
  42566b:	mov    eax,DWORD PTR [ebx+0x10]
  42566e:	cmp    DWORD PTR [eax],0xffffffff
  425671:	jne    0x42559b
  425677:	xor    eax,eax
  425679:	jmp    0x4257f8
  42567e:	shl    ecx,1
  425680:	inc    edi
  425681:	test   ecx,ecx
  425683:	jge    0x42567e
  425685:	mov    ecx,DWORD PTR [ebp-0xc]
  425688:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42568c:	mov    ecx,DWORD PTR [edx]
  42568e:	sub    ecx,DWORD PTR [ebp-0x10]
  425691:	mov    esi,ecx
  425693:	sar    esi,0x4
  425696:	dec    esi
  425697:	cmp    esi,0x3f
  42569a:	mov    DWORD PTR [ebp-0x8],ecx
  42569d:	jle    0x4256a2
  42569f:	push   0x3f
  4256a1:	pop    esi
  4256a2:	cmp    esi,edi
  4256a4:	je     0x4257ab
  4256aa:	mov    ecx,DWORD PTR [edx+0x4]
  4256ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b0:	jne    0x42570e
  4256b2:	cmp    edi,0x20
  4256b5:	mov    ebx,0x80000000
  4256ba:	jge    0x4256e2
  4256bc:	mov    ecx,edi
  4256be:	shr    ebx,cl
  4256c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256c3:	lea    edi,[eax+edi*1+0x4]
  4256c7:	not    ebx
  4256c9:	mov    DWORD PTR [ebp-0x14],ebx
  4256cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256d4:	dec    BYTE PTR [edi]
  4256d6:	jne    0x42570b
  4256d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256db:	mov    ebx,DWORD PTR [ebp+0x8]
  4256de:	and    DWORD PTR [ebx],ecx
  4256e0:	jmp    0x42570e
  4256e2:	lea    ecx,[edi-0x20]
  4256e5:	shr    ebx,cl
  4256e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256ea:	lea    ecx,[eax+ecx*4+0xc4]
  4256f1:	lea    edi,[eax+edi*1+0x4]
  4256f5:	not    ebx
  4256f7:	and    DWORD PTR [ecx],ebx
  4256f9:	dec    BYTE PTR [edi]
  4256fb:	mov    DWORD PTR [ebp-0x14],ebx
  4256fe:	jne    0x42570b
  425700:	mov    ebx,DWORD PTR [ebp+0x8]
  425703:	mov    ecx,DWORD PTR [ebp-0x14]
  425706:	and    DWORD PTR [ebx+0x4],ecx
  425709:	jmp    0x42570e
  42570b:	mov    ebx,DWORD PTR [ebp+0x8]
  42570e:	cmp    DWORD PTR [ebp-0x8],0x0
  425712:	mov    ecx,DWORD PTR [edx+0x8]
  425715:	mov    edi,DWORD PTR [edx+0x4]
  425718:	mov    DWORD PTR [ecx+0x4],edi
  42571b:	mov    ecx,DWORD PTR [edx+0x4]
  42571e:	mov    edi,DWORD PTR [edx+0x8]
  425721:	mov    DWORD PTR [ecx+0x8],edi
  425724:	je     0x4257b7
  42572a:	mov    ecx,DWORD PTR [ebp-0xc]
  42572d:	lea    ecx,[ecx+esi*8]
  425730:	mov    edi,DWORD PTR [ecx+0x4]
  425733:	mov    DWORD PTR [edx+0x8],ecx
  425736:	mov    DWORD PTR [edx+0x4],edi
  425739:	mov    DWORD PTR [ecx+0x4],edx
  42573c:	mov    ecx,DWORD PTR [edx+0x4]
  42573f:	mov    DWORD PTR [ecx+0x8],edx
  425742:	mov    ecx,DWORD PTR [edx+0x4]
  425745:	cmp    ecx,DWORD PTR [edx+0x8]
  425748:	jne    0x4257a8
  42574a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42574e:	mov    BYTE PTR [ebp+0xb],cl
  425751:	inc    cl
  425753:	cmp    esi,0x20
  425756:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42575a:	jge    0x42577f
  42575c:	cmp    BYTE PTR [ebp+0xb],0x0
  425760:	jne    0x42576d
  425762:	mov    edi,0x80000000
  425767:	mov    ecx,esi
  425769:	shr    edi,cl
  42576b:	or     DWORD PTR [ebx],edi
  42576d:	mov    ecx,esi
  42576f:	mov    edi,0x80000000
  425774:	shr    edi,cl
  425776:	mov    ecx,DWORD PTR [ebp-0x4]
  425779:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42577d:	jmp    0x4257a8
  42577f:	cmp    BYTE PTR [ebp+0xb],0x0
  425783:	jne    0x425792
  425785:	lea    ecx,[esi-0x20]
  425788:	mov    edi,0x80000000
  42578d:	shr    edi,cl
  42578f:	or     DWORD PTR [ebx+0x4],edi
  425792:	mov    ecx,DWORD PTR [ebp-0x4]
  425795:	lea    edi,[eax+ecx*4+0xc4]
  42579c:	lea    ecx,[esi-0x20]
  42579f:	mov    esi,0x80000000
  4257a4:	shr    esi,cl
  4257a6:	or     DWORD PTR [edi],esi
  4257a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ab:	test   ecx,ecx
  4257ad:	je     0x4257ba
  4257af:	mov    DWORD PTR [edx],ecx
  4257b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257b5:	jmp    0x4257ba
  4257b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ba:	mov    esi,DWORD PTR [ebp-0x10]
  4257bd:	add    edx,ecx
  4257bf:	lea    ecx,[esi+0x1]
  4257c2:	mov    DWORD PTR [edx],ecx
  4257c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257c8:	mov    esi,DWORD PTR [ebp-0xc]
  4257cb:	mov    ecx,DWORD PTR [esi]
  4257cd:	test   ecx,ecx
  4257cf:	lea    edi,[ecx+0x1]
  4257d2:	mov    DWORD PTR [esi],edi
  4257d4:	jne    0x4257f0
  4257d6:	cmp    ebx,DWORD PTR ds:0x45ffd8
  4257dc:	jne    0x4257f0
  4257de:	mov    ecx,DWORD PTR [ebp-0x4]
  4257e1:	cmp    ecx,DWORD PTR ds:0x45fff0
  4257e7:	jne    0x4257f0
  4257e9:	and    DWORD PTR ds:0x45ffd8,0x0
  4257f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f3:	mov    DWORD PTR [eax],ecx
  4257f5:	lea    eax,[edx+0x4]
  4257f8:	pop    edi
  4257f9:	pop    esi
  4257fa:	pop    ebx
  4257fb:	leave  
  4257fc:	ret    
  4257fd:	int3   
  4257fe:	int3   
  4257ff:	int3   
  425800:	push   esi
  425801:	inc    ebx
  425802:	xor    dh,BYTE PTR [eax]
  425804:	pop    eax
  425805:	inc    ebx
  425806:	xor    BYTE PTR [eax],dh
  425808:	push   ebp
  425809:	mov    ebp,esp
  42580b:	sub    esp,0x8
  42580e:	push   ebx
  42580f:	push   esi
  425810:	push   edi
  425811:	push   ebp
  425812:	cld    
  425813:	mov    ebx,DWORD PTR [ebp+0xc]
  425816:	mov    eax,DWORD PTR [ebp+0x8]
  425819:	test   DWORD PTR [eax+0x4],0x6
  425820:	jne    0x4258a8
  425826:	mov    DWORD PTR [ebp-0x8],eax
  425829:	mov    eax,DWORD PTR [ebp+0x10]
  42582c:	mov    DWORD PTR [ebp-0x4],eax
  42582f:	lea    eax,[ebp-0x8]
  425832:	mov    DWORD PTR [ebx-0x4],eax
  425835:	mov    esi,DWORD PTR [ebx+0xc]
  425838:	mov    edi,DWORD PTR [ebx+0x8]
  42583b:	cmp    esi,0xffffffff
  42583e:	je     0x4258a1
  425840:	lea    ecx,[esi+esi*2]
  425843:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425848:	je     0x42588f
  42584a:	push   esi
  42584b:	push   ebp
  42584c:	lea    ebp,[ebx+0x10]
  42584f:	call   DWORD PTR [edi+ecx*4+0x4]
  425853:	pop    ebp
  425854:	pop    esi
  425855:	mov    ebx,DWORD PTR [ebp+0xc]
  425858:	or     eax,eax
  42585a:	je     0x42588f
  42585c:	js     0x42589a
  42585e:	mov    edi,DWORD PTR [ebx+0x8]
  425861:	push   ebx
  425862:	call   0x426790
  425867:	add    esp,0x4
  42586a:	lea    ebp,[ebx+0x10]
  42586d:	push   esi
  42586e:	push   ebx
  42586f:	call   0x4267d2
  425874:	add    esp,0x8
  425877:	lea    ecx,[esi+esi*2]
  42587a:	push   0x1
  42587c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425880:	call   0x426866
  425885:	mov    eax,DWORD PTR [edi+ecx*4]
  425888:	mov    DWORD PTR [ebx+0xc],eax
  42588b:	call   DWORD PTR [edi+ecx*4+0x8]
  42588f:	mov    edi,DWORD PTR [ebx+0x8]
  425892:	lea    ecx,[esi+esi*2]
  425895:	mov    esi,DWORD PTR [edi+ecx*4]
  425898:	jmp    0x42583b
  42589a:	mov    eax,0x0
  42589f:	jmp    0x4258bd
  4258a1:	mov    eax,0x1
  4258a6:	jmp    0x4258bd
  4258a8:	push   ebp
  4258a9:	lea    ebp,[ebx+0x10]
  4258ac:	push   0xffffffff
  4258ae:	push   ebx
  4258af:	call   0x4267d2
  4258b4:	add    esp,0x8
  4258b7:	pop    ebp
  4258b8:	mov    eax,0x1
  4258bd:	pop    ebp
  4258be:	pop    edi
  4258bf:	pop    esi
  4258c0:	pop    ebx
  4258c1:	mov    esp,ebp
  4258c3:	pop    ebp
  4258c4:	ret    
  4258c5:	push   ebp
  4258c6:	mov    ecx,DWORD PTR [esp+0x8]
  4258ca:	mov    ebp,DWORD PTR [ecx]
  4258cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258cf:	push   eax
  4258d0:	mov    eax,DWORD PTR [ecx+0x18]
  4258d3:	push   eax
  4258d4:	call   0x4267d2
  4258d9:	add    esp,0x8
  4258dc:	pop    ebp
  4258dd:	ret    0x4
  4258e0:	call   0x4237f3
  4258e5:	add    eax,0x8
  4258e8:	ret    
  4258e9:	push   0x14
  4258eb:	push   0x4287a8
  4258f0:	call   0x423940
  4258f5:	mov    edi,DWORD PTR [ebp+0x8]
  4258f8:	xor    ebx,ebx
  4258fa:	cmp    edi,ebx
  4258fc:	jne    0x42590c
  4258fe:	push   DWORD PTR [ebp+0xc]
  425901:	call   0x424662
  425906:	pop    ecx
  425907:	jmp    0x425a90
  42590c:	mov    esi,DWORD PTR [ebp+0xc]
  42590f:	cmp    esi,ebx
  425911:	jne    0x42591f
  425913:	push   edi
  425914:	call   0x42454a
  425919:	pop    ecx
  42591a:	jmp    0x425a8e
  42591f:	cmp    DWORD PTR ds:0x460224,0x3
  425926:	jne    0x425a5a
  42592c:	mov    DWORD PTR [ebp-0x1c],ebx
  42592f:	cmp    esi,0xffffffe0
  425932:	ja     0x425a29
  425938:	push   0x4
  42593a:	call   0x423aff
  42593f:	pop    ecx
  425940:	mov    DWORD PTR [ebp-0x4],ebx
  425943:	push   edi
  425944:	call   0x424d22
  425949:	pop    ecx
  42594a:	mov    DWORD PTR [ebp-0x20],eax
  42594d:	cmp    eax,ebx
  42594f:	je     0x4259f9
  425955:	cmp    esi,DWORD PTR ds:0x45ffe4
  42595b:	ja     0x4259a9
  42595d:	push   esi
  42595e:	push   edi
  42595f:	push   eax
  425960:	call   0x425222
  425965:	add    esp,0xc
  425968:	test   eax,eax
  42596a:	je     0x425971
  42596c:	mov    DWORD PTR [ebp-0x1c],edi
  42596f:	jmp    0x4259a9
  425971:	push   esi
  425972:	call   0x425501
  425977:	pop    ecx
  425978:	mov    DWORD PTR [ebp-0x1c],eax
  42597b:	cmp    eax,ebx
  42597d:	je     0x4259a9
  42597f:	mov    eax,DWORD PTR [edi-0x4]
  425982:	dec    eax
  425983:	mov    DWORD PTR [ebp-0x24],eax
  425986:	cmp    eax,esi
  425988:	jb     0x42598c
  42598a:	mov    eax,esi
  42598c:	push   eax
  42598d:	push   edi
  42598e:	push   DWORD PTR [ebp-0x1c]
  425991:	call   0x424680
  425996:	push   edi
  425997:	call   0x424d22
  42599c:	mov    DWORD PTR [ebp-0x20],eax
  42599f:	push   edi
  4259a0:	push   eax
  4259a1:	call   0x424d4d
  4259a6:	add    esp,0x18
  4259a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259ac:	jne    0x4259f9
  4259ae:	cmp    esi,ebx
  4259b0:	jne    0x4259b8
  4259b2:	xor    esi,esi
  4259b4:	inc    esi
  4259b5:	mov    DWORD PTR [ebp+0xc],esi
  4259b8:	add    esi,0xf
  4259bb:	and    esi,0xfffffff0
  4259be:	mov    DWORD PTR [ebp+0xc],esi
  4259c1:	push   esi
  4259c2:	push   ebx
  4259c3:	push   DWORD PTR ds:0x460220
  4259c9:	call   DWORD PTR ds:0x4280d8
  4259cf:	mov    DWORD PTR [ebp-0x1c],eax
  4259d2:	cmp    eax,ebx
  4259d4:	je     0x4259f9
  4259d6:	mov    eax,DWORD PTR [edi-0x4]
  4259d9:	dec    eax
  4259da:	mov    DWORD PTR [ebp-0x24],eax
  4259dd:	cmp    eax,esi
  4259df:	jb     0x4259e3
  4259e1:	mov    eax,esi
  4259e3:	push   eax
  4259e4:	push   edi
  4259e5:	push   DWORD PTR [ebp-0x1c]
  4259e8:	call   0x424680
  4259ed:	push   edi
  4259ee:	push   DWORD PTR [ebp-0x20]
  4259f1:	call   0x424d4d
  4259f6:	add    esp,0x14
  4259f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fd:	call   0x425a51
  425a02:	cmp    DWORD PTR [ebp-0x20],ebx
  425a05:	jne    0x425a29
  425a07:	cmp    esi,ebx
  425a09:	jne    0x425a0e
  425a0b:	xor    esi,esi
  425a0d:	inc    esi
  425a0e:	add    esi,0xf
  425a11:	and    esi,0xfffffff0
  425a14:	mov    DWORD PTR [ebp+0xc],esi
  425a17:	push   esi
  425a18:	push   edi
  425a19:	push   ebx
  425a1a:	push   DWORD PTR ds:0x460220
  425a20:	call   DWORD PTR ds:0x4280e0
  425a26:	mov    DWORD PTR [ebp-0x1c],eax
  425a29:	mov    eax,DWORD PTR [ebp-0x1c]
  425a2c:	cmp    eax,ebx
  425a2e:	jne    0x425a90
  425a30:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a36:	je     0x425a90
  425a38:	push   esi
  425a39:	call   0x426222
  425a3e:	pop    ecx
  425a3f:	test   eax,eax
  425a41:	jne    0x42592c
  425a47:	jmp    0x425a8e
  425a49:	xor    ebx,ebx
  425a4b:	mov    esi,DWORD PTR [ebp+0xc]
  425a4e:	mov    edi,DWORD PTR [ebp+0x8]
  425a51:	push   0x4
  425a53:	call   0x423a6b
  425a58:	pop    ecx
  425a59:	ret    
  425a5a:	xor    eax,eax
  425a5c:	cmp    esi,0xffffffe0
  425a5f:	ja     0x425a77
  425a61:	cmp    esi,ebx
  425a63:	jne    0x425a68
  425a65:	xor    esi,esi
  425a67:	inc    esi
  425a68:	push   esi
  425a69:	push   edi
  425a6a:	push   ebx
  425a6b:	push   DWORD PTR ds:0x460220
  425a71:	call   DWORD PTR ds:0x4280e0
  425a77:	cmp    eax,ebx
  425a79:	jne    0x425a90
  425a7b:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a81:	je     0x425a90
  425a83:	push   esi
  425a84:	call   0x426222
  425a89:	pop    ecx
  425a8a:	test   eax,eax
  425a8c:	jne    0x425a5a
  425a8e:	xor    eax,eax
  425a90:	call   0x42397b
  425a95:	ret    
  425a96:	push   0x10
  425a98:	push   0x4287b8
  425a9d:	call   0x423940
  425aa2:	cmp    DWORD PTR ds:0x460224,0x3
  425aa9:	jne    0x425ae5
  425aab:	push   0x4
  425aad:	call   0x423aff
  425ab2:	pop    ecx
  425ab3:	and    DWORD PTR [ebp-0x4],0x0
  425ab7:	mov    esi,DWORD PTR [ebp+0x8]
  425aba:	push   esi
  425abb:	call   0x424d22
  425ac0:	pop    ecx
  425ac1:	mov    DWORD PTR [ebp-0x1c],eax
  425ac4:	test   eax,eax
  425ac6:	je     0x425ad3
  425ac8:	mov    esi,DWORD PTR [esi-0x4]
  425acb:	sub    esi,0x9
  425ace:	mov    DWORD PTR [ebp-0x20],esi
  425ad1:	jmp    0x425ad6
  425ad3:	mov    esi,DWORD PTR [ebp-0x20]
  425ad6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ada:	call   0x425b03
  425adf:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ae3:	jne    0x425af8
  425ae5:	push   DWORD PTR [ebp+0x8]
  425ae8:	push   0x0
  425aea:	push   DWORD PTR ds:0x460220
  425af0:	call   DWORD PTR ds:0x4280e4
  425af6:	mov    esi,eax
  425af8:	mov    eax,esi
  425afa:	call   0x42397b
  425aff:	ret    
  425b00:	mov    esi,DWORD PTR [ebp-0x20]
  425b03:	push   0x4
  425b05:	call   0x423a6b
  425b0a:	pop    ecx
  425b0b:	ret    
  425b0c:	push   ebp
  425b0d:	mov    ebp,esp
  425b0f:	sub    esp,0x10
  425b12:	push   esi
  425b13:	lea    eax,[ebp-0x8]
  425b16:	push   eax
  425b17:	call   DWORD PTR ds:0x4280f0
  425b1d:	mov    esi,DWORD PTR [ebp-0x4]
  425b20:	xor    esi,DWORD PTR [ebp-0x8]
  425b23:	call   DWORD PTR ds:0x428044
  425b29:	xor    esi,eax
  425b2b:	call   DWORD PTR ds:0x4280a4
  425b31:	xor    esi,eax
  425b33:	call   DWORD PTR ds:0x4280ec
  425b39:	xor    esi,eax
  425b3b:	lea    eax,[ebp-0x10]
  425b3e:	push   eax
  425b3f:	call   DWORD PTR ds:0x4280e8
  425b45:	mov    eax,DWORD PTR [ebp-0xc]
  425b48:	xor    eax,DWORD PTR [ebp-0x10]
  425b4b:	xor    esi,eax
  425b4d:	mov    DWORD PTR ds:0x45f510,esi
  425b53:	jne    0x425b5f
  425b55:	mov    DWORD PTR ds:0x45f510,0xbb40e64e
  425b5f:	pop    esi
  425b60:	leave  
  425b61:	ret    
  425b62:	push   0x118
  425b67:	push   0x428968
  425b6c:	call   0x423940
  425b71:	mov    eax,ds:0x45f510
  425b76:	xor    eax,DWORD PTR [ebp+0x4]
  425b79:	mov    DWORD PTR [ebp-0x1c],eax
  425b7c:	mov    eax,ds:0x45fe78
  425b81:	xor    ecx,ecx
  425b83:	cmp    eax,ecx
  425b85:	je     0x425ba6
  425b87:	mov    DWORD PTR [ebp-0x4],ecx
  425b8a:	push   DWORD PTR [ebp+0xc]
  425b8d:	push   DWORD PTR [ebp+0x8]
  425b90:	call   eax
  425b92:	pop    ecx
  425b93:	pop    ecx
  425b94:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b98:	jmp    0x425ca4
  425b9d:	xor    eax,eax
  425b9f:	inc    eax
  425ba0:	ret    
  425ba1:	mov    esp,DWORD PTR [ebp-0x18]
  425ba4:	jmp    0x425b94
  425ba6:	mov    eax,DWORD PTR [ebp+0x8]
  425ba9:	dec    eax
  425baa:	je     0x425bbf
  425bac:	mov    edi,0x428944
  425bb1:	mov    DWORD PTR [ebp-0x20],0x428890
  425bb8:	mov    esi,0xd4
  425bbd:	jmp    0x425bd0
  425bbf:	mov    edi,0x428870
  425bc4:	mov    DWORD PTR [ebp-0x20],0x4287d0
  425bcb:	mov    esi,0xb9
  425bd0:	mov    BYTE PTR [ebp-0x24],cl
  425bd3:	push   0x104
  425bd8:	lea    eax,[ebp-0x128]
  425bde:	push   eax
  425bdf:	push   ecx
  425be0:	call   DWORD PTR ds:0x428074
  425be6:	test   eax,eax
  425be8:	jne    0x425bfd
  425bea:	push   0x4284c4
  425bef:	lea    eax,[ebp-0x128]
  425bf5:	push   eax
  425bf6:	call   0x423d20
  425bfb:	pop    ecx
  425bfc:	pop    ecx
  425bfd:	lea    ebx,[ebp-0x128]
  425c03:	lea    eax,[ebp-0x128]
  425c09:	push   eax
  425c0a:	call   0x423f50
  425c0f:	pop    ecx
  425c10:	add    eax,0xb
  425c13:	cmp    eax,0x3c
  425c16:	jbe    0x425c41
  425c18:	lea    eax,[ebp-0x128]
  425c1e:	push   eax
  425c1f:	call   0x423f50
  425c24:	mov    ebx,eax
  425c26:	lea    eax,[ebp-0x128]
  425c2c:	sub    eax,0x31
  425c2f:	add    ebx,eax
  425c31:	push   0x3
  425c33:	push   0x4284c0
  425c38:	push   ebx
  425c39:	call   0x423e20
  425c3e:	add    esp,0x10
  425c41:	push   ebx
  425c42:	call   0x423f50
  425c47:	pop    ecx
  425c48:	lea    eax,[eax+esi*1+0xc]
  425c4c:	add    eax,0x3
  425c4f:	and    eax,0xfffffffc
  425c52:	call   0x423990
  425c57:	mov    DWORD PTR [ebp-0x18],esp
  425c5a:	mov    esi,esp
  425c5c:	push   edi
  425c5d:	push   esi
  425c5e:	call   0x423d20
  425c63:	mov    edi,0x4284a0
  425c68:	push   edi
  425c69:	push   esi
  425c6a:	call   0x423d30
  425c6f:	push   0x4287c4
  425c74:	push   esi
  425c75:	call   0x423d30
  425c7a:	push   ebx
  425c7b:	push   esi
  425c7c:	call   0x423d30
  425c81:	push   edi
  425c82:	push   esi
  425c83:	call   0x423d30
  425c88:	push   DWORD PTR [ebp-0x20]
  425c8b:	push   esi
  425c8c:	call   0x423d30
  425c91:	push   0x12010
  425c96:	push   0x428478
  425c9b:	push   esi
  425c9c:	call   0x423c22
  425ca1:	add    esp,0x3c
  425ca4:	push   0x3
  425ca6:	call   0x422dac
  425cab:	int3   
  425cac:	push   0x38
  425cae:	push   0x428d88
  425cb3:	call   0x423940
  425cb8:	xor    ebx,ebx
  425cba:	cmp    DWORD PTR ds:0x45fe9c,ebx
  425cc0:	jne    0x425cfa
  425cc2:	push   ebx
  425cc3:	push   ebx
  425cc4:	xor    esi,esi
  425cc6:	inc    esi
  425cc7:	push   esi
  425cc8:	push   0x428d84
  425ccd:	push   0x100
  425cd2:	push   ebx
  425cd3:	call   DWORD PTR ds:0x4280fc
  425cd9:	test   eax,eax
  425cdb:	je     0x425ce5
  425cdd:	mov    DWORD PTR ds:0x45fe9c,esi
  425ce3:	jmp    0x425cfa
  425ce5:	call   DWORD PTR ds:0x428018
  425ceb:	cmp    eax,0x78
  425cee:	jne    0x425cfa
  425cf0:	mov    DWORD PTR ds:0x45fe9c,0x2
  425cfa:	cmp    DWORD PTR [ebp+0x14],ebx
  425cfd:	jle    0x425d1a
  425cff:	mov    ecx,DWORD PTR [ebp+0x14]
  425d02:	mov    eax,DWORD PTR [ebp+0x10]
  425d05:	dec    ecx
  425d06:	cmp    BYTE PTR [eax],bl
  425d08:	je     0x425d12
  425d0a:	inc    eax
  425d0b:	cmp    ecx,ebx
  425d0d:	jne    0x425d05
  425d0f:	or     ecx,0xffffffff
  425d12:	or     eax,0xffffffff
  425d15:	sub    eax,ecx
  425d17:	add    DWORD PTR [ebp+0x14],eax
  425d1a:	mov    eax,ds:0x45fe9c
  425d1f:	cmp    eax,0x2
  425d22:	je     0x425f04
  425d28:	cmp    eax,ebx
  425d2a:	je     0x425f04
  425d30:	cmp    eax,0x1
  425d33:	jne    0x425f37
  425d39:	xor    edi,edi
  425d3b:	mov    DWORD PTR [ebp-0x1c],edi
  425d3e:	mov    DWORD PTR [ebp-0x20],ebx
  425d41:	mov    DWORD PTR [ebp-0x24],ebx
  425d44:	cmp    DWORD PTR [ebp+0x20],ebx
  425d47:	jne    0x425d51
  425d49:	mov    eax,ds:0x45fe94
  425d4e:	mov    DWORD PTR [ebp+0x20],eax
  425d51:	push   ebx
  425d52:	push   ebx
  425d53:	push   DWORD PTR [ebp+0x14]
  425d56:	push   DWORD PTR [ebp+0x10]
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d5e:	setne  al
  425d61:	lea    eax,[eax*8+0x1]
  425d68:	push   eax
  425d69:	push   DWORD PTR [ebp+0x20]
  425d6c:	call   DWORD PTR ds:0x4280f8
  425d72:	mov    esi,eax
  425d74:	mov    DWORD PTR [ebp-0x28],esi
  425d77:	cmp    esi,ebx
  425d79:	je     0x425f37
  425d7f:	mov    DWORD PTR [ebp-0x4],0x1
  425d86:	lea    eax,[esi+esi*1]
  425d89:	add    eax,0x3
  425d8c:	and    eax,0xfffffffc
  425d8f:	call   0x423990
  425d94:	mov    DWORD PTR [ebp-0x18],esp
  425d97:	mov    eax,esp
  425d99:	mov    DWORD PTR [ebp-0x2c],eax
  425d9c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da0:	jmp    0x425dbd
  425da2:	xor    eax,eax
  425da4:	inc    eax
  425da5:	ret    
  425da6:	mov    esp,DWORD PTR [ebp-0x18]
  425da9:	call   0x426dd5
  425dae:	xor    ebx,ebx
  425db0:	mov    DWORD PTR [ebp-0x2c],ebx
  425db3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dba:	mov    esi,DWORD PTR [ebp-0x28]
  425dbd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dc0:	jne    0x425dde
  425dc2:	lea    eax,[esi+esi*1]
  425dc5:	push   eax
  425dc6:	call   0x424662
  425dcb:	pop    ecx
  425dcc:	mov    DWORD PTR [ebp-0x2c],eax
  425dcf:	cmp    eax,ebx
  425dd1:	je     0x425f37
  425dd7:	mov    DWORD PTR [ebp-0x20],0x1
  425dde:	push   esi
  425ddf:	push   DWORD PTR [ebp-0x2c]
  425de2:	push   DWORD PTR [ebp+0x14]
  425de5:	push   DWORD PTR [ebp+0x10]
  425de8:	push   0x1
  425dea:	push   DWORD PTR [ebp+0x20]
  425ded:	call   DWORD PTR ds:0x4280f8
  425df3:	test   eax,eax
  425df5:	je     0x425ee1
  425dfb:	push   ebx
  425dfc:	push   ebx
  425dfd:	push   esi
  425dfe:	push   DWORD PTR [ebp-0x2c]
  425e01:	push   DWORD PTR [ebp+0xc]
  425e04:	push   DWORD PTR [ebp+0x8]
  425e07:	call   DWORD PTR ds:0x4280fc
  425e0d:	mov    edi,eax
  425e0f:	mov    DWORD PTR [ebp-0x1c],edi
  425e12:	cmp    edi,ebx
  425e14:	je     0x425ee1
  425e1a:	test   BYTE PTR [ebp+0xd],0x4
  425e1e:	je     0x425e4d
  425e20:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e23:	je     0x425ee1
  425e29:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e2c:	jg     0x425ee1
  425e32:	push   DWORD PTR [ebp+0x1c]
  425e35:	push   DWORD PTR [ebp+0x18]
  425e38:	push   esi
  425e39:	push   DWORD PTR [ebp-0x2c]
  425e3c:	push   DWORD PTR [ebp+0xc]
  425e3f:	push   DWORD PTR [ebp+0x8]
  425e42:	call   DWORD PTR ds:0x4280fc
  425e48:	jmp    0x425ee1
  425e4d:	mov    DWORD PTR [ebp-0x4],0x2
  425e54:	lea    eax,[edi+edi*1]
  425e57:	add    eax,0x3
  425e5a:	and    eax,0xfffffffc
  425e5d:	call   0x423990
  425e62:	mov    DWORD PTR [ebp-0x18],esp
  425e65:	mov    eax,esp
  425e67:	mov    DWORD PTR [ebp-0x30],eax
  425e6a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e6e:	jmp    0x425e8b
  425e70:	xor    eax,eax
  425e72:	inc    eax
  425e73:	ret    
  425e74:	mov    esp,DWORD PTR [ebp-0x18]
  425e77:	call   0x426dd5
  425e7c:	xor    ebx,ebx
  425e7e:	mov    DWORD PTR [ebp-0x30],ebx
  425e81:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e85:	mov    edi,DWORD PTR [ebp-0x1c]
  425e88:	mov    esi,DWORD PTR [ebp-0x28]
  425e8b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e8e:	jne    0x425ea8
  425e90:	lea    eax,[edi+edi*1]
  425e93:	push   eax
  425e94:	call   0x424662
  425e99:	pop    ecx
  425e9a:	mov    DWORD PTR [ebp-0x30],eax
  425e9d:	cmp    eax,ebx
  425e9f:	je     0x425ee1
  425ea1:	mov    DWORD PTR [ebp-0x24],0x1
  425ea8:	push   edi
  425ea9:	push   DWORD PTR [ebp-0x30]
  425eac:	push   esi
  425ead:	push   DWORD PTR [ebp-0x2c]
  425eb0:	push   DWORD PTR [ebp+0xc]
  425eb3:	push   DWORD PTR [ebp+0x8]
  425eb6:	call   DWORD PTR ds:0x4280fc
  425ebc:	test   eax,eax
  425ebe:	je     0x425ee1
  425ec0:	push   ebx
  425ec1:	push   ebx
  425ec2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ec5:	jne    0x425ecb
  425ec7:	push   ebx
  425ec8:	push   ebx
  425ec9:	jmp    0x425ed1
  425ecb:	push   DWORD PTR [ebp+0x1c]
  425ece:	push   DWORD PTR [ebp+0x18]
  425ed1:	push   edi
  425ed2:	push   DWORD PTR [ebp-0x30]
  425ed5:	push   ebx
  425ed6:	push   DWORD PTR [ebp+0x20]
  425ed9:	call   DWORD PTR ds:0x428088
  425edf:	mov    edi,eax
  425ee1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ee4:	je     0x425eef
  425ee6:	push   DWORD PTR [ebp-0x30]
  425ee9:	call   0x42454a
  425eee:	pop    ecx
  425eef:	cmp    DWORD PTR [ebp-0x20],ebx
  425ef2:	je     0x425efd
  425ef4:	push   DWORD PTR [ebp-0x2c]
  425ef7:	call   0x42454a
  425efc:	pop    ecx
  425efd:	mov    eax,edi
  425eff:	jmp    0x42605f
  425f04:	mov    DWORD PTR [ebp-0x34],ebx
  425f07:	xor    edi,edi
  425f09:	mov    DWORD PTR [ebp-0x38],ebx
  425f0c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f0f:	jne    0x425f19
  425f11:	mov    eax,ds:0x45fe84
  425f16:	mov    DWORD PTR [ebp+0x8],eax
  425f19:	cmp    DWORD PTR [ebp+0x20],ebx
  425f1c:	jne    0x425f26
  425f1e:	mov    eax,ds:0x45fe94
  425f23:	mov    DWORD PTR [ebp+0x20],eax
  425f26:	push   DWORD PTR [ebp+0x8]
  425f29:	call   0x426bbd
  425f2e:	pop    ecx
  425f2f:	mov    DWORD PTR [ebp-0x3c],eax
  425f32:	cmp    eax,0xffffffff
  425f35:	jne    0x425f3e
  425f37:	xor    eax,eax
  425f39:	jmp    0x42605f
  425f3e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f41:	je     0x426035
  425f47:	push   ebx
  425f48:	push   ebx
  425f49:	lea    ecx,[ebp+0x14]
  425f4c:	push   ecx
  425f4d:	push   DWORD PTR [ebp+0x10]
  425f50:	push   eax
  425f51:	push   DWORD PTR [ebp+0x20]
  425f54:	call   0x426c06
  425f59:	add    esp,0x18
  425f5c:	mov    DWORD PTR [ebp-0x34],eax
  425f5f:	cmp    eax,ebx
  425f61:	je     0x425f37
  425f63:	push   ebx
  425f64:	push   ebx
  425f65:	push   DWORD PTR [ebp+0x14]
  425f68:	push   eax
  425f69:	push   DWORD PTR [ebp+0xc]
  425f6c:	push   DWORD PTR [ebp+0x8]
  425f6f:	call   DWORD PTR ds:0x4280f4
  425f75:	mov    esi,eax
  425f77:	mov    DWORD PTR [ebp-0x40],esi
  425f7a:	cmp    esi,ebx
  425f7c:	je     0x426024
  425f82:	mov    DWORD PTR [ebp-0x4],ebx
  425f85:	add    eax,0x3
  425f88:	and    eax,0xfffffffc
  425f8b:	call   0x423990
  425f90:	mov    DWORD PTR [ebp-0x18],esp
  425f93:	mov    edi,esp
  425f95:	mov    DWORD PTR [ebp-0x44],edi
  425f98:	push   esi
  425f99:	push   ebx
  425f9a:	push   edi
  425f9b:	call   0x426240
  425fa0:	add    esp,0xc
  425fa3:	jmp    0x425fb5
  425fa5:	xor    eax,eax
  425fa7:	inc    eax
  425fa8:	ret    
  425fa9:	mov    esp,DWORD PTR [ebp-0x18]
  425fac:	call   0x426dd5
  425fb1:	xor    ebx,ebx
  425fb3:	xor    edi,edi
  425fb5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fb9:	cmp    edi,ebx
  425fbb:	jne    0x425fe0
  425fbd:	push   DWORD PTR [ebp-0x40]
  425fc0:	call   0x424662
  425fc5:	pop    ecx
  425fc6:	mov    edi,eax
  425fc8:	cmp    edi,ebx
  425fca:	je     0x425ffd
  425fcc:	push   DWORD PTR [ebp-0x40]
  425fcf:	push   ebx
  425fd0:	push   edi
  425fd1:	call   0x426240
  425fd6:	add    esp,0xc
  425fd9:	mov    DWORD PTR [ebp-0x38],0x1
  425fe0:	push   DWORD PTR [ebp-0x40]
  425fe3:	push   edi
  425fe4:	push   DWORD PTR [ebp+0x14]
  425fe7:	push   DWORD PTR [ebp-0x34]
  425fea:	push   DWORD PTR [ebp+0xc]
  425fed:	push   DWORD PTR [ebp+0x8]
  425ff0:	call   DWORD PTR ds:0x4280f4
  425ff6:	mov    DWORD PTR [ebp-0x40],eax
  425ff9:	cmp    eax,ebx
  425ffb:	jne    0x426001
  425ffd:	xor    esi,esi
  425fff:	jmp    0x426027
  426001:	push   DWORD PTR [ebp+0x1c]
  426004:	push   DWORD PTR [ebp+0x18]
  426007:	lea    eax,[ebp-0x40]
  42600a:	push   eax
  42600b:	push   edi
  42600c:	push   DWORD PTR [ebp+0x20]
  42600f:	push   DWORD PTR [ebp-0x3c]
  426012:	call   0x426c06
  426017:	add    esp,0x18
  42601a:	mov    esi,eax
  42601c:	neg    esi
  42601e:	sbb    esi,esi
  426020:	neg    esi
  426022:	jmp    0x426027
  426024:	mov    esi,DWORD PTR [ebp-0x48]
  426027:	cmp    DWORD PTR [ebp-0x38],ebx
  42602a:	je     0x42604f
  42602c:	push   edi
  42602d:	call   0x42454a
  426032:	pop    ecx
  426033:	jmp    0x42604f
  426035:	push   DWORD PTR [ebp+0x1c]
  426038:	push   DWORD PTR [ebp+0x18]
  42603b:	push   DWORD PTR [ebp+0x14]
  42603e:	push   DWORD PTR [ebp+0x10]
  426041:	push   DWORD PTR [ebp+0xc]
  426044:	push   DWORD PTR [ebp+0x8]
  426047:	call   DWORD PTR ds:0x4280f4
  42604d:	mov    esi,eax
  42604f:	cmp    DWORD PTR [ebp-0x34],ebx
  426052:	je     0x42605d
  426054:	push   DWORD PTR [ebp-0x34]
  426057:	call   0x42454a
  42605c:	pop    ecx
  42605d:	mov    eax,esi
  42605f:	lea    esp,[ebp-0x54]
  426062:	call   0x42397b
  426067:	ret    
  426068:	push   0x1c
  42606a:	push   0x428db0
  42606f:	call   0x423940
  426074:	xor    esi,esi
  426076:	cmp    DWORD PTR ds:0x45fea0,esi
  42607c:	jne    0x4260b3
  42607e:	lea    eax,[ebp-0x1c]
  426081:	push   eax
  426082:	xor    edi,edi
  426084:	inc    edi
  426085:	push   edi
  426086:	push   0x428d84
  42608b:	push   edi
  42608c:	call   DWORD PTR ds:0x428104
  426092:	test   eax,eax
  426094:	je     0x42609e
  426096:	mov    DWORD PTR ds:0x45fea0,edi
  42609c:	jmp    0x4260b3
  42609e:	call   DWORD PTR ds:0x428018
  4260a4:	cmp    eax,0x78
  4260a7:	jne    0x4260b3
  4260a9:	mov    DWORD PTR ds:0x45fea0,0x2
  4260b3:	mov    eax,ds:0x45fea0
  4260b8:	cmp    eax,0x2
  4260bb:	je     0x4261ab
  4260c1:	cmp    eax,esi
  4260c3:	je     0x4261ab
  4260c9:	cmp    eax,0x1
  4260cc:	jne    0x4261d1
  4260d2:	mov    DWORD PTR [ebp-0x20],esi
  4260d5:	mov    DWORD PTR [ebp-0x24],esi
  4260d8:	cmp    DWORD PTR [ebp+0x18],esi
  4260db:	jne    0x4260e5
  4260dd:	mov    eax,ds:0x45fe94
  4260e2:	mov    DWORD PTR [ebp+0x18],eax
  4260e5:	push   esi
  4260e6:	push   esi
  4260e7:	push   DWORD PTR [ebp+0x10]
  4260ea:	push   DWORD PTR [ebp+0xc]
  4260ed:	xor    eax,eax
  4260ef:	cmp    DWORD PTR [ebp+0x20],esi
  4260f2:	setne  al
  4260f5:	lea    eax,[eax*8+0x1]
  4260fc:	push   eax
  4260fd:	push   DWORD PTR [ebp+0x18]
  426100:	call   DWORD PTR ds:0x4280f8
  426106:	mov    edi,eax
  426108:	mov    DWORD PTR [ebp-0x28],edi
  42610b:	test   edi,edi
  42610d:	je     0x4261d1
  426113:	and    DWORD PTR [ebp-0x4],0x0
  426117:	lea    ebx,[edi+edi*1]
  42611a:	mov    eax,ebx
  42611c:	add    eax,0x3
  42611f:	and    eax,0xfffffffc
  426122:	call   0x423990
  426127:	mov    DWORD PTR [ebp-0x18],esp
  42612a:	mov    esi,esp
  42612c:	mov    DWORD PTR [ebp-0x2c],esi
  42612f:	push   ebx
  426130:	push   0x0
  426132:	push   esi
  426133:	call   0x426240
  426138:	add    esp,0xc
  42613b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42613f:	jmp    0x426156
  426141:	xor    eax,eax
  426143:	inc    eax
  426144:	ret    
  426145:	mov    esp,DWORD PTR [ebp-0x18]
  426148:	call   0x426dd5
  42614d:	xor    esi,esi
  42614f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426153:	mov    edi,DWORD PTR [ebp-0x28]
  426156:	test   esi,esi
  426158:	jne    0x426171
  42615a:	push   edi
  42615b:	push   0x2
  42615d:	call   0x424a58
  426162:	pop    ecx
  426163:	pop    ecx
  426164:	mov    esi,eax
  426166:	test   esi,esi
  426168:	je     0x4261d1
  42616a:	mov    DWORD PTR [ebp-0x24],0x1
  426171:	push   edi
  426172:	push   esi
  426173:	push   DWORD PTR [ebp+0x10]
  426176:	push   DWORD PTR [ebp+0xc]
  426179:	push   0x1
  42617b:	push   DWORD PTR [ebp+0x18]
  42617e:	call   DWORD PTR ds:0x4280f8
  426184:	test   eax,eax
  426186:	je     0x426199
  426188:	push   DWORD PTR [ebp+0x14]
  42618b:	push   eax
  42618c:	push   esi
  42618d:	push   DWORD PTR [ebp+0x8]
  426190:	call   DWORD PTR ds:0x428104
  426196:	mov    DWORD PTR [ebp-0x20],eax
  426199:	cmp    DWORD PTR [ebp-0x24],0x0
  42619d:	je     0x4261a6
  42619f:	push   esi
  4261a0:	call   0x42454a
  4261a5:	pop    ecx
  4261a6:	mov    eax,DWORD PTR [ebp-0x20]
  4261a9:	jmp    0x426219
  4261ab:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261ae:	cmp    ebx,esi
  4261b0:	jne    0x4261b8
  4261b2:	mov    ebx,DWORD PTR ds:0x45fe84
  4261b8:	mov    edi,DWORD PTR [ebp+0x18]
  4261bb:	test   edi,edi
  4261bd:	jne    0x4261c5
  4261bf:	mov    edi,DWORD PTR ds:0x45fe94
  4261c5:	push   ebx
  4261c6:	call   0x426bbd
  4261cb:	pop    ecx
  4261cc:	cmp    eax,0xffffffff
  4261cf:	jne    0x4261d5
  4261d1:	xor    eax,eax
  4261d3:	jmp    0x426219
  4261d5:	cmp    eax,edi
  4261d7:	je     0x4261f7
  4261d9:	push   0x0
  4261db:	push   0x0
  4261dd:	lea    ecx,[ebp+0x10]
  4261e0:	push   ecx
  4261e1:	push   DWORD PTR [ebp+0xc]
  4261e4:	push   eax
  4261e5:	push   edi
  4261e6:	call   0x426c06
  4261eb:	add    esp,0x18
  4261ee:	mov    esi,eax
  4261f0:	test   esi,esi
  4261f2:	je     0x4261d1
  4261f4:	mov    DWORD PTR [ebp+0xc],esi
  4261f7:	push   DWORD PTR [ebp+0x14]
  4261fa:	push   DWORD PTR [ebp+0x10]
  4261fd:	push   DWORD PTR [ebp+0xc]
  426200:	push   DWORD PTR [ebp+0x8]
  426203:	push   ebx
  426204:	call   DWORD PTR ds:0x428100
  42620a:	mov    edi,eax
  42620c:	test   esi,esi
  42620e:	je     0x426217
  426210:	push   esi
  426211:	call   0x42454a
  426216:	pop    ecx
  426217:	mov    eax,edi
  426219:	lea    esp,[ebp-0x38]
  42621c:	call   0x42397b
  426221:	ret    
  426222:	mov    eax,ds:0x45fea4
  426227:	test   eax,eax
  426229:	je     0x42623a
  42622b:	push   DWORD PTR [esp+0x4]
  42622f:	call   eax
  426231:	test   eax,eax
  426233:	pop    ecx
  426234:	je     0x42623a
  426236:	xor    eax,eax
  426238:	inc    eax
  426239:	ret    
  42623a:	xor    eax,eax
  42623c:	ret    
  42623d:	int3   
  42623e:	int3   
  42623f:	int3   
  426240:	mov    edx,DWORD PTR [esp+0xc]
  426244:	mov    ecx,DWORD PTR [esp+0x4]
  426248:	test   edx,edx
  42624a:	je     0x42629b
  42624c:	xor    eax,eax
  42624e:	mov    al,BYTE PTR [esp+0x8]
  426252:	push   edi
  426253:	mov    edi,ecx
  426255:	cmp    edx,0x4
  426258:	jb     0x42628b
  42625a:	neg    ecx
  42625c:	and    ecx,0x3
  42625f:	je     0x42626d
  426261:	sub    edx,ecx
  426263:	mov    BYTE PTR [edi],al
  426265:	add    edi,0x1
  426268:	sub    ecx,0x1
  42626b:	jne    0x426263
  42626d:	mov    ecx,eax
  42626f:	shl    eax,0x8
  426272:	add    eax,ecx
  426274:	mov    ecx,eax
  426276:	shl    eax,0x10
  426279:	add    eax,ecx
  42627b:	mov    ecx,edx
  42627d:	and    edx,0x3
  426280:	shr    ecx,0x2
  426283:	je     0x42628b
  426285:	rep stos DWORD PTR es:[edi],eax
  426287:	test   edx,edx
  426289:	je     0x426295
  42628b:	mov    BYTE PTR [edi],al
  42628d:	add    edi,0x1
  426290:	sub    edx,0x1
  426293:	jne    0x42628b
  426295:	mov    eax,DWORD PTR [esp+0x8]
  426299:	pop    edi
  42629a:	ret    
  42629b:	mov    eax,DWORD PTR [esp+0x4]
  42629f:	ret    
  4262a0:	push   esi
  4262a1:	mov    esi,DWORD PTR [esp+0x8]
  4262a5:	test   esi,esi
  4262a7:	je     0x42642e
  4262ad:	push   DWORD PTR [esi+0x4]
  4262b0:	call   0x42454a
  4262b5:	push   DWORD PTR [esi+0x8]
  4262b8:	call   0x42454a
  4262bd:	push   DWORD PTR [esi+0xc]
  4262c0:	call   0x42454a
  4262c5:	push   DWORD PTR [esi+0x10]
  4262c8:	call   0x42454a
  4262cd:	push   DWORD PTR [esi+0x14]
  4262d0:	call   0x42454a
  4262d5:	push   DWORD PTR [esi+0x18]
  4262d8:	call   0x42454a
  4262dd:	push   DWORD PTR [esi]
  4262df:	call   0x42454a
  4262e4:	push   DWORD PTR [esi+0x20]
  4262e7:	call   0x42454a
  4262ec:	push   DWORD PTR [esi+0x24]
  4262ef:	call   0x42454a
  4262f4:	push   DWORD PTR [esi+0x28]
  4262f7:	call   0x42454a
  4262fc:	push   DWORD PTR [esi+0x2c]
  4262ff:	call   0x42454a
  426304:	push   DWORD PTR [esi+0x30]
  426307:	call   0x42454a
  42630c:	push   DWORD PTR [esi+0x34]
  42630f:	call   0x42454a
  426314:	push   DWORD PTR [esi+0x1c]
  426317:	call   0x42454a
  42631c:	push   DWORD PTR [esi+0x38]
  42631f:	call   0x42454a
  426324:	push   DWORD PTR [esi+0x3c]
  426327:	call   0x42454a
  42632c:	add    esp,0x40
  42632f:	push   DWORD PTR [esi+0x40]
  426332:	call   0x42454a
  426337:	push   DWORD PTR [esi+0x44]
  42633a:	call   0x42454a
  42633f:	push   DWORD PTR [esi+0x48]
  426342:	call   0x42454a
  426347:	push   DWORD PTR [esi+0x4c]
  42634a:	call   0x42454a
  42634f:	push   DWORD PTR [esi+0x50]
  426352:	call   0x42454a
  426357:	push   DWORD PTR [esi+0x54]
  42635a:	call   0x42454a
  42635f:	push   DWORD PTR [esi+0x58]
  426362:	call   0x42454a
  426367:	push   DWORD PTR [esi+0x5c]
  42636a:	call   0x42454a
  42636f:	push   DWORD PTR [esi+0x60]
  426372:	call   0x42454a
  426377:	push   DWORD PTR [esi+0x64]
  42637a:	call   0x42454a
  42637f:	push   DWORD PTR [esi+0x68]
  426382:	call   0x42454a
  426387:	push   DWORD PTR [esi+0x6c]
  42638a:	call   0x42454a
  42638f:	push   DWORD PTR [esi+0x70]
  426392:	call   0x42454a
  426397:	push   DWORD PTR [esi+0x74]
  42639a:	call   0x42454a
  42639f:	push   DWORD PTR [esi+0x78]
  4263a2:	call   0x42454a
  4263a7:	push   DWORD PTR [esi+0x7c]
  4263aa:	call   0x42454a
  4263af:	add    esp,0x40
  4263b2:	push   DWORD PTR [esi+0x80]
  4263b8:	call   0x42454a
  4263bd:	push   DWORD PTR [esi+0x84]
  4263c3:	call   0x42454a
  4263c8:	push   DWORD PTR [esi+0x88]
  4263ce:	call   0x42454a
  4263d3:	push   DWORD PTR [esi+0x8c]
  4263d9:	call   0x42454a
  4263de:	push   DWORD PTR [esi+0x90]
  4263e4:	call   0x42454a
  4263e9:	push   DWORD PTR [esi+0x94]
  4263ef:	call   0x42454a
  4263f4:	push   DWORD PTR [esi+0x98]
  4263fa:	call   0x42454a
  4263ff:	push   DWORD PTR [esi+0x9c]
  426405:	call   0x42454a
  42640a:	push   DWORD PTR [esi+0xa0]
  426410:	call   0x42454a
  426415:	push   DWORD PTR [esi+0xa4]
  42641b:	call   0x42454a
  426420:	push   DWORD PTR [esi+0xa8]
  426426:	call   0x42454a
  42642b:	add    esp,0x2c
  42642e:	pop    esi
  42642f:	ret    
  426430:	push   esi
  426431:	mov    esi,DWORD PTR [esp+0x8]
  426435:	test   esi,esi
  426437:	je     0x42648d
  426439:	mov    eax,DWORD PTR [esi]
  42643b:	mov    ecx,DWORD PTR ds:0x45fa14
  426441:	cmp    eax,DWORD PTR [ecx]
  426443:	je     0x426454
  426445:	cmp    eax,DWORD PTR ds:0x45f9e4
  42644b:	je     0x426454
  42644d:	push   eax
  42644e:	call   0x42454a
  426453:	pop    ecx
  426454:	mov    eax,DWORD PTR [esi+0x4]
  426457:	mov    ecx,DWORD PTR ds:0x45fa14
  42645d:	cmp    eax,DWORD PTR [ecx+0x4]
  426460:	je     0x426471
  426462:	cmp    eax,DWORD PTR ds:0x45f9e8
  426468:	je     0x426471
  42646a:	push   eax
  42646b:	call   0x42454a
  426470:	pop    ecx
  426471:	mov    esi,DWORD PTR [esi+0x8]
  426474:	mov    eax,ds:0x45fa14
  426479:	cmp    esi,DWORD PTR [eax+0x8]
  42647c:	je     0x42648d
  42647e:	cmp    esi,DWORD PTR ds:0x45f9ec
  426484:	je     0x42648d
  426486:	push   esi
  426487:	call   0x42454a
  42648c:	pop    ecx
  42648d:	pop    esi
  42648e:	ret    
  42648f:	push   esi
  426490:	mov    esi,DWORD PTR [esp+0x8]
  426494:	test   esi,esi
  426496:	je     0x426566
  42649c:	mov    eax,DWORD PTR [esi+0xc]
  42649f:	mov    ecx,DWORD PTR ds:0x45fa14
  4264a5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264a8:	je     0x4264b9
  4264aa:	cmp    eax,DWORD PTR ds:0x45f9f0
  4264b0:	je     0x4264b9
  4264b2:	push   eax
  4264b3:	call   0x42454a
  4264b8:	pop    ecx
  4264b9:	mov    eax,DWORD PTR [esi+0x10]
  4264bc:	mov    ecx,DWORD PTR ds:0x45fa14
  4264c2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264c5:	je     0x4264d6
  4264c7:	cmp    eax,DWORD PTR ds:0x45f9f4
  4264cd:	je     0x4264d6
  4264cf:	push   eax
  4264d0:	call   0x42454a
  4264d5:	pop    ecx
  4264d6:	mov    eax,DWORD PTR [esi+0x14]
  4264d9:	mov    ecx,DWORD PTR ds:0x45fa14
  4264df:	cmp    eax,DWORD PTR [ecx+0x14]
  4264e2:	je     0x4264f3
  4264e4:	cmp    eax,DWORD PTR ds:0x45f9f8
  4264ea:	je     0x4264f3
  4264ec:	push   eax
  4264ed:	call   0x42454a
  4264f2:	pop    ecx
  4264f3:	mov    eax,DWORD PTR [esi+0x18]
  4264f6:	mov    ecx,DWORD PTR ds:0x45fa14
  4264fc:	cmp    eax,DWORD PTR [ecx+0x18]
  4264ff:	je     0x426510
  426501:	cmp    eax,DWORD PTR ds:0x45f9fc
  426507:	je     0x426510
  426509:	push   eax
  42650a:	call   0x42454a
  42650f:	pop    ecx
  426510:	mov    eax,DWORD PTR [esi+0x1c]
  426513:	mov    ecx,DWORD PTR ds:0x45fa14
  426519:	cmp    eax,DWORD PTR [ecx+0x1c]
  42651c:	je     0x42652d
  42651e:	cmp    eax,DWORD PTR ds:0x45fa00
  426524:	je     0x42652d
  426526:	push   eax
  426527:	call   0x42454a
  42652c:	pop    ecx
  42652d:	mov    eax,DWORD PTR [esi+0x20]
  426530:	mov    ecx,DWORD PTR ds:0x45fa14
  426536:	cmp    eax,DWORD PTR [ecx+0x20]
  426539:	je     0x42654a
  42653b:	cmp    eax,DWORD PTR ds:0x45fa04
  426541:	je     0x42654a
  426543:	push   eax
  426544:	call   0x42454a
  426549:	pop    ecx
  42654a:	mov    esi,DWORD PTR [esi+0x24]
  42654d:	mov    eax,ds:0x45fa14
  426552:	cmp    esi,DWORD PTR [eax+0x24]
  426555:	je     0x426566
  426557:	cmp    esi,DWORD PTR ds:0x45fa08
  42655d:	je     0x426566
  42655f:	push   esi
  426560:	call   0x42454a
  426565:	pop    ecx
  426566:	pop    esi
  426567:	ret    
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	push   ebp
  426571:	mov    ebp,esp
  426573:	push   esi
  426574:	xor    eax,eax
  426576:	push   eax
  426577:	push   eax
  426578:	push   eax
  426579:	push   eax
  42657a:	push   eax
  42657b:	push   eax
  42657c:	push   eax
  42657d:	push   eax
  42657e:	mov    edx,DWORD PTR [ebp+0xc]
  426581:	lea    ecx,[ecx+0x0]
  426584:	mov    al,BYTE PTR [edx]
  426586:	or     al,al
  426588:	je     0x426593
  42658a:	add    edx,0x1
  42658d:	bts    DWORD PTR [esp],eax
  426591:	jmp    0x426584
  426593:	mov    esi,DWORD PTR [ebp+0x8]
  426596:	or     ecx,0xffffffff
  426599:	lea    ecx,[ecx+0x0]
  42659c:	add    ecx,0x1
  42659f:	mov    al,BYTE PTR [esi]
  4265a1:	or     al,al
  4265a3:	je     0x4265ae
  4265a5:	add    esi,0x1
  4265a8:	bt     DWORD PTR [esp],eax
  4265ac:	jae    0x42659c
  4265ae:	mov    eax,ecx
  4265b0:	add    esp,0x20
  4265b3:	pop    esi
  4265b4:	leave  
  4265b5:	ret    
  4265b6:	int3   
  4265b7:	int3   
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    edx,DWORD PTR [esp+0x4]
  4265c4:	mov    ecx,DWORD PTR [esp+0x8]
  4265c8:	test   edx,0x3
  4265ce:	jne    0x42660c
  4265d0:	mov    eax,DWORD PTR [edx]
  4265d2:	cmp    al,BYTE PTR [ecx]
  4265d4:	jne    0x426604
  4265d6:	or     al,al
  4265d8:	je     0x426600
  4265da:	cmp    ah,BYTE PTR [ecx+0x1]
  4265dd:	jne    0x426604
  4265df:	or     ah,ah
  4265e1:	je     0x426600
  4265e3:	shr    eax,0x10
  4265e6:	cmp    al,BYTE PTR [ecx+0x2]
  4265e9:	jne    0x426604
  4265eb:	or     al,al
  4265ed:	je     0x426600
  4265ef:	cmp    ah,BYTE PTR [ecx+0x3]
  4265f2:	jne    0x426604
  4265f4:	add    ecx,0x4
  4265f7:	add    edx,0x4
  4265fa:	or     ah,ah
  4265fc:	jne    0x4265d0
  4265fe:	mov    edi,edi
  426600:	xor    eax,eax
  426602:	ret    
  426603:	nop
  426604:	sbb    eax,eax
  426606:	shl    eax,1
  426608:	add    eax,0x1
  42660b:	ret    
  42660c:	test   edx,0x1
  426612:	je     0x42662c
  426614:	mov    al,BYTE PTR [edx]
  426616:	add    edx,0x1
  426619:	cmp    al,BYTE PTR [ecx]
  42661b:	jne    0x426604
  42661d:	add    ecx,0x1
  426620:	or     al,al
  426622:	je     0x426600
  426624:	test   edx,0x2
  42662a:	je     0x4265d0
  42662c:	mov    ax,WORD PTR [edx]
  42662f:	add    edx,0x2
  426632:	cmp    al,BYTE PTR [ecx]
  426634:	jne    0x426604
  426636:	or     al,al
  426638:	je     0x426600
  42663a:	cmp    ah,BYTE PTR [ecx+0x1]
  42663d:	jne    0x426604
  42663f:	or     ah,ah
  426641:	je     0x426600
  426643:	add    ecx,0x2
  426646:	jmp    0x4265d0
  426648:	int3   
  426649:	int3   
  42664a:	int3   
  42664b:	int3   
  42664c:	int3   
  42664d:	int3   
  42664e:	int3   
  42664f:	int3   
  426650:	mov    eax,DWORD PTR [esp+0xc]
  426654:	test   eax,eax
  426656:	je     0x4266a2
  426658:	mov    edx,DWORD PTR [esp+0x4]
  42665c:	push   esi
  42665d:	push   edi
  42665e:	mov    esi,edx
  426660:	mov    edi,DWORD PTR [esp+0x10]
  426664:	or     edx,edi
  426666:	and    edx,0x3
  426669:	je     0x4266a3
  42666b:	test   eax,0x1
  426670:	je     0x426683
  426672:	mov    cl,BYTE PTR [esi]
  426674:	cmp    cl,BYTE PTR [edi]
  426676:	jne    0x4266d0
  426678:	add    esi,0x1
  42667b:	add    edi,0x1
  42667e:	sub    eax,0x1
  426681:	je     0x4266a0
  426683:	mov    cl,BYTE PTR [esi]
  426685:	mov    dl,BYTE PTR [edi]
  426687:	cmp    cl,dl
  426689:	jne    0x4266d0
  42668b:	mov    cl,BYTE PTR [esi+0x1]
  42668e:	mov    dl,BYTE PTR [edi+0x1]
  426691:	cmp    cl,dl
  426693:	jne    0x4266d0
  426695:	add    edi,0x2
  426698:	add    esi,0x2
  42669b:	sub    eax,0x2
  42669e:	jne    0x426683
  4266a0:	pop    edi
  4266a1:	pop    esi
  4266a2:	ret    
  4266a3:	mov    ecx,eax
  4266a5:	and    eax,0x3
  4266a8:	shr    ecx,0x2
  4266ab:	je     0x4266d8
  4266ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266af:	je     0x4266d8
  4266b1:	mov    ecx,DWORD PTR [esi-0x4]
  4266b4:	mov    edx,DWORD PTR [edi-0x4]
  4266b7:	cmp    cl,dl
  4266b9:	jne    0x4266cb
  4266bb:	cmp    ch,dh
  4266bd:	jne    0x4266cb
  4266bf:	shr    ecx,0x10
  4266c2:	shr    edx,0x10
  4266c5:	cmp    cl,dl
  4266c7:	jne    0x4266cb
  4266c9:	cmp    ch,dh
  4266cb:	mov    eax,0x0
  4266d0:	sbb    eax,eax
  4266d2:	pop    edi
  4266d3:	sbb    eax,0xffffffff
  4266d6:	pop    esi
  4266d7:	ret    
  4266d8:	test   eax,eax
  4266da:	je     0x4266a0
  4266dc:	mov    edx,DWORD PTR [esi]
  4266de:	mov    ecx,DWORD PTR [edi]
  4266e0:	cmp    dl,cl
  4266e2:	jne    0x4266cb
  4266e4:	sub    eax,0x1
  4266e7:	je     0x426705
  4266e9:	cmp    dh,ch
  4266eb:	jne    0x4266cb
  4266ed:	sub    eax,0x1
  4266f0:	je     0x426705
  4266f2:	and    ecx,0xff0000
  4266f8:	and    edx,0xff0000
  4266fe:	cmp    edx,ecx
  426700:	jne    0x4266cb
  426702:	sub    eax,0x1
  426705:	pop    edi
  426706:	pop    esi
  426707:	ret    
  426708:	int3   
  426709:	int3   
  42670a:	int3   
  42670b:	int3   
  42670c:	int3   
  42670d:	int3   
  42670e:	int3   
  42670f:	int3   
  426710:	push   ebp
  426711:	mov    ebp,esp
  426713:	push   edi
  426714:	push   esi
  426715:	push   ebx
  426716:	mov    ecx,DWORD PTR [ebp+0x10]
  426719:	jecxz  0x426742
  42671b:	mov    ebx,ecx
  42671d:	mov    edi,DWORD PTR [ebp+0x8]
  426720:	mov    esi,edi
  426722:	xor    eax,eax
  426724:	repnz scas al,BYTE PTR es:[edi]
  426726:	neg    ecx
  426728:	add    ecx,ebx
  42672a:	mov    edi,esi
  42672c:	mov    esi,DWORD PTR [ebp+0xc]
  42672f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426731:	mov    al,BYTE PTR [esi-0x1]
  426734:	xor    ecx,ecx
  426736:	cmp    al,BYTE PTR [edi-0x1]
  426739:	ja     0x426740
  42673b:	je     0x426742
  42673d:	sub    ecx,0x2
  426740:	not    ecx
  426742:	mov    eax,ecx
  426744:	pop    ebx
  426745:	pop    esi
  426746:	pop    edi
  426747:	leave  
  426748:	ret    
  426749:	int3   
  42674a:	int3   
  42674b:	int3   
  42674c:	int3   
  42674d:	int3   
  42674e:	int3   
  42674f:	int3   
  426750:	push   ebp
  426751:	mov    ebp,esp
  426753:	push   esi
  426754:	xor    eax,eax
  426756:	push   eax
  426757:	push   eax
  426758:	push   eax
  426759:	push   eax
  42675a:	push   eax
  42675b:	push   eax
  42675c:	push   eax
  42675d:	push   eax
  42675e:	mov    edx,DWORD PTR [ebp+0xc]
  426761:	lea    ecx,[ecx+0x0]
  426764:	mov    al,BYTE PTR [edx]
  426766:	or     al,al
  426768:	je     0x426773
  42676a:	add    edx,0x1
  42676d:	bts    DWORD PTR [esp],eax
  426771:	jmp    0x426764
  426773:	mov    esi,DWORD PTR [ebp+0x8]
  426776:	mov    edi,edi
  426778:	mov    al,BYTE PTR [esi]
  42677a:	or     al,al
  42677c:	je     0x42678a
  42677e:	add    esi,0x1
  426781:	bt     DWORD PTR [esp],eax
  426785:	jae    0x426778
  426787:	lea    eax,[esi-0x1]
  42678a:	add    esp,0x20
  42678d:	pop    esi
  42678e:	leave  
  42678f:	ret    
  426790:	push   ebp
  426791:	mov    ebp,esp
  426793:	push   ebx
  426794:	push   esi
  426795:	push   edi
  426796:	push   ebp
  426797:	push   0x0
  426799:	push   0x0
  42679b:	push   0x4267a8
  4267a0:	push   DWORD PTR [ebp+0x8]
  4267a3:	call   0x42721e
  4267a8:	pop    ebp
  4267a9:	pop    edi
  4267aa:	pop    esi
  4267ab:	pop    ebx
  4267ac:	mov    esp,ebp
  4267ae:	pop    ebp
  4267af:	ret    
  4267b0:	mov    ecx,DWORD PTR [esp+0x4]
  4267b4:	test   DWORD PTR [ecx+0x4],0x6
  4267bb:	mov    eax,0x1
  4267c0:	je     0x4267d1
  4267c2:	mov    eax,DWORD PTR [esp+0x8]
  4267c6:	mov    edx,DWORD PTR [esp+0x10]
  4267ca:	mov    DWORD PTR [edx],eax
  4267cc:	mov    eax,0x3
  4267d1:	ret    
  4267d2:	push   ebx
  4267d3:	push   esi
  4267d4:	push   edi
  4267d5:	mov    eax,DWORD PTR [esp+0x10]
  4267d9:	push   eax
  4267da:	push   0xfffffffe
  4267dc:	push   0x4267b0
  4267e1:	push   DWORD PTR fs:0x0
  4267e8:	mov    DWORD PTR fs:0x0,esp
  4267ef:	mov    eax,DWORD PTR [esp+0x20]
  4267f3:	mov    ebx,DWORD PTR [eax+0x8]
  4267f6:	mov    esi,DWORD PTR [eax+0xc]
  4267f9:	cmp    esi,0xffffffff
  4267fc:	je     0x42682c
  4267fe:	cmp    esi,DWORD PTR [esp+0x24]
  426802:	je     0x42682c
  426804:	lea    esi,[esi+esi*2]
  426807:	mov    ecx,DWORD PTR [ebx+esi*4]
  42680a:	mov    DWORD PTR [esp+0x8],ecx
  42680e:	mov    DWORD PTR [eax+0xc],ecx
  426811:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426816:	jne    0x42682a
  426818:	push   0x101
  42681d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426821:	call   0x426866
  426826:	call   DWORD PTR [ebx+esi*4+0x8]
  42682a:	jmp    0x4267ef
  42682c:	pop    DWORD PTR fs:0x0
  426833:	add    esp,0xc
  426836:	pop    edi
  426837:	pop    esi
  426838:	pop    ebx
  426839:	ret    
  42683a:	xor    eax,eax
  42683c:	mov    ecx,DWORD PTR fs:0x0
  426843:	cmp    DWORD PTR [ecx+0x4],0x4267b0
  42684a:	jne    0x42685c
  42684c:	mov    edx,DWORD PTR [ecx+0xc]
  42684f:	mov    edx,DWORD PTR [edx+0xc]
  426852:	cmp    DWORD PTR [ecx+0x8],edx
  426855:	jne    0x42685c
  426857:	mov    eax,0x1
  42685c:	ret    
  42685d:	push   ebx
  42685e:	push   ecx
  42685f:	mov    ebx,0x45fa2c
  426864:	jmp    0x426870
  426866:	push   ebx
  426867:	push   ecx
  426868:	mov    ebx,0x45fa2c
  42686d:	mov    ecx,DWORD PTR [ebp+0x8]
  426870:	mov    DWORD PTR [ebx+0x8],ecx
  426873:	mov    DWORD PTR [ebx+0x4],eax
  426876:	mov    DWORD PTR [ebx+0xc],ebp
  426879:	pop    ecx
  42687a:	pop    ebx
  42687b:	ret    0x4
  42687e:	int3   
  42687f:	int3   
  426880:	push   ebp
  426881:	mov    ebp,esp
  426883:	push   edi
  426884:	push   esi
  426885:	mov    esi,DWORD PTR [ebp+0xc]
  426888:	mov    ecx,DWORD PTR [ebp+0x10]
  42688b:	mov    edi,DWORD PTR [ebp+0x8]
  42688e:	mov    eax,ecx
  426890:	mov    edx,ecx
  426892:	add    eax,esi
  426894:	cmp    edi,esi
  426896:	jbe    0x4268a0
  426898:	cmp    edi,eax
  42689a:	jb     0x426a1c
  4268a0:	test   edi,0x3
  4268a6:	jne    0x4268bc
  4268a8:	shr    ecx,0x2
  4268ab:	and    edx,0x3
  4268ae:	cmp    ecx,0x8
  4268b1:	jb     0x4268dc
  4268b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b5:	jmp    DWORD PTR [edx*4+0x4269cc]
  4268bc:	mov    eax,edi
  4268be:	mov    edx,0x3
  4268c3:	sub    ecx,0x4
  4268c6:	jb     0x4268d4
  4268c8:	and    eax,0x3
  4268cb:	add    ecx,eax
  4268cd:	jmp    DWORD PTR [eax*4+0x4268e0]
  4268d4:	jmp    DWORD PTR [ecx*4+0x4269dc]
  4268db:	nop
  4268dc:	jmp    DWORD PTR [ecx*4+0x426960]
  4268e3:	nop
  4268e4:	lock push 0x691c0042
  4268ea:	inc    edx
  4268eb:	add    BYTE PTR [eax+0x69],al
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx],ah
  4268f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4268f7:	inc    esi
  4268f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4268fe:	add    al,cl
  426900:	jmp    0x289f107
  426905:	add    esi,0x3
  426908:	add    edi,0x3
  42690b:	cmp    ecx,0x8
  42690e:	jb     0x4268dc
  426910:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426912:	jmp    DWORD PTR [edx*4+0x4269cc]
  426919:	lea    ecx,[ecx+0x0]
  42691c:	and    edx,ecx
  42691e:	mov    al,BYTE PTR [esi]
  426920:	mov    BYTE PTR [edi],al
  426922:	mov    al,BYTE PTR [esi+0x1]
  426925:	shr    ecx,0x2
  426928:	mov    BYTE PTR [edi+0x1],al
  42692b:	add    esi,0x2
  42692e:	add    edi,0x2
  426931:	cmp    ecx,0x8
  426934:	jb     0x4268dc
  426936:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426938:	jmp    DWORD PTR [edx*4+0x4269cc]
  42693f:	nop
  426940:	and    edx,ecx
  426942:	mov    al,BYTE PTR [esi]
  426944:	mov    BYTE PTR [edi],al
  426946:	add    esi,0x1
  426949:	shr    ecx,0x2
  42694c:	add    edi,0x1
  42694f:	cmp    ecx,0x8
  426952:	jb     0x4268dc
  426954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426956:	jmp    DWORD PTR [edx*4+0x4269cc]
  42695d:	lea    ecx,[ecx+0x0]
  426960:	ret    
  426961:	imul   eax,DWORD PTR [edx+0x0],0x4269b0
  426968:	test   al,0x69
  42696a:	inc    edx
  42696b:	add    BYTE PTR [eax-0x67ffbd97],ah
  426971:	imul   eax,DWORD PTR [edx+0x0],0x426990
  426978:	mov    BYTE PTR [ecx+0x42],ch
  42697b:	add    BYTE PTR [eax-0x74ffbd97],al
  426981:	inc    esp
  426982:	mov    fs,esp
  426984:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426988:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42698c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426990:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426994:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269b8:	lea    eax,[ecx*4+0x0]
  4269bf:	add    esi,eax
  4269c1:	add    edi,eax
  4269c3:	jmp    DWORD PTR [edx*4+0x4269cc]
  4269ca:	mov    edi,edi
  4269cc:	fsubr  QWORD PTR [ecx+0x42]
  4269cf:	add    ah,ah
  4269d1:	imul   eax,DWORD PTR [edx+0x0],0x4269f0
  4269d8:	add    al,0x6a
  4269da:	inc    edx
  4269db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269e1:	leave  
  4269e2:	ret    
  4269e3:	nop
  4269e4:	mov    al,BYTE PTR [esi]
  4269e6:	mov    BYTE PTR [edi],al
  4269e8:	mov    eax,DWORD PTR [ebp+0x8]
  4269eb:	pop    esi
  4269ec:	pop    edi
  4269ed:	leave  
  4269ee:	ret    
  4269ef:	nop
  4269f0:	mov    al,BYTE PTR [esi]
  4269f2:	mov    BYTE PTR [edi],al
  4269f4:	mov    al,BYTE PTR [esi+0x1]
  4269f7:	mov    BYTE PTR [edi+0x1],al
  4269fa:	mov    eax,DWORD PTR [ebp+0x8]
  4269fd:	pop    esi
  4269fe:	pop    edi
  4269ff:	leave  
  426a00:	ret    
  426a01:	lea    ecx,[ecx+0x0]
  426a04:	mov    al,BYTE PTR [esi]
  426a06:	mov    BYTE PTR [edi],al
  426a08:	mov    al,BYTE PTR [esi+0x1]
  426a0b:	mov    BYTE PTR [edi+0x1],al
  426a0e:	mov    al,BYTE PTR [esi+0x2]
  426a11:	mov    BYTE PTR [edi+0x2],al
  426a14:	mov    eax,DWORD PTR [ebp+0x8]
  426a17:	pop    esi
  426a18:	pop    edi
  426a19:	leave  
  426a1a:	ret    
  426a1b:	nop
  426a1c:	lea    esi,[ecx+esi*1-0x4]
  426a20:	lea    edi,[ecx+edi*1-0x4]
  426a24:	test   edi,0x3
  426a2a:	jne    0x426a50
  426a2c:	shr    ecx,0x2
  426a2f:	and    edx,0x3
  426a32:	cmp    ecx,0x8
  426a35:	jb     0x426a44
  426a37:	std    
  426a38:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a3a:	cld    
  426a3b:	jmp    DWORD PTR [edx*4+0x426b68]
  426a42:	mov    edi,edi
  426a44:	neg    ecx
  426a46:	jmp    DWORD PTR [ecx*4+0x426b18]
  426a4d:	lea    ecx,[ecx+0x0]
  426a50:	mov    eax,edi
  426a52:	mov    edx,0x3
  426a57:	cmp    ecx,0x4
  426a5a:	jb     0x426a68
  426a5c:	and    eax,0x3
  426a5f:	sub    ecx,eax
  426a61:	jmp    DWORD PTR [eax*4+0x426a6c]
  426a68:	jmp    DWORD PTR [ecx*4+0x426b68]
  426a6f:	nop
  426a70:	jl     0x426adc
  426a72:	inc    edx
  426a73:	add    BYTE PTR [eax-0x37ffbd96],ah
  426a79:	push   0x42
  426a7b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a81:	mov    BYTE PTR [edi+0x3],al
  426a84:	sub    esi,0x1
  426a87:	shr    ecx,0x2
  426a8a:	sub    edi,0x1
  426a8d:	cmp    ecx,0x8
  426a90:	jb     0x426a44
  426a92:	std    
  426a93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a95:	cld    
  426a96:	jmp    DWORD PTR [edx*4+0x426b68]
  426a9d:	lea    ecx,[ecx+0x0]
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	and    edx,ecx
  426aa5:	mov    BYTE PTR [edi+0x3],al
  426aa8:	mov    al,BYTE PTR [esi+0x2]
  426aab:	shr    ecx,0x2
  426aae:	mov    BYTE PTR [edi+0x2],al
  426ab1:	sub    esi,0x2
  426ab4:	sub    edi,0x2
  426ab7:	cmp    ecx,0x8
  426aba:	jb     0x426a44
  426abc:	std    
  426abd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abf:	cld    
  426ac0:	jmp    DWORD PTR [edx*4+0x426b68]
  426ac7:	nop
  426ac8:	mov    al,BYTE PTR [esi+0x3]
  426acb:	and    edx,ecx
  426acd:	mov    BYTE PTR [edi+0x3],al
  426ad0:	mov    al,BYTE PTR [esi+0x2]
  426ad3:	mov    BYTE PTR [edi+0x2],al
  426ad6:	mov    al,BYTE PTR [esi+0x1]
  426ad9:	shr    ecx,0x2
  426adc:	mov    BYTE PTR [edi+0x1],al
  426adf:	sub    esi,0x3
  426ae2:	sub    edi,0x3
  426ae5:	cmp    ecx,0x8
  426ae8:	jb     0x426a44
  426aee:	std    
  426aef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af1:	cld    
  426af2:	jmp    DWORD PTR [edx*4+0x426b68]
  426af9:	lea    ecx,[ecx+0x0]
  426afc:	sbb    al,0x6b
  426afe:	inc    edx
  426aff:	add    BYTE PTR [ebx+ebp*2],ah
  426b02:	inc    edx
  426b03:	add    BYTE PTR [ebx+ebp*2],ch
  426b06:	inc    edx
  426b07:	add    BYTE PTR [ebx+ebp*2],dh
  426b0a:	inc    edx
  426b0b:	add    BYTE PTR [ebx+ebp*2],bh
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b13:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b17:	add    BYTE PTR [edi+0x6b],bl
  426b1a:	inc    edx
  426b1b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b21:	inc    esp
  426b22:	(bad)  
  426b23:	sbb    al,0x8b
  426b25:	inc    esp
  426b26:	mov    ds,WORD PTR [eax]
  426b28:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b2c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b30:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b34:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b40:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b50:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b54:	lea    eax,[ecx*4+0x0]
  426b5b:	add    esi,eax
  426b5d:	add    edi,eax
  426b5f:	jmp    DWORD PTR [edx*4+0x426b68]
  426b66:	mov    edi,edi
  426b68:	js     0x426bd5
  426b6a:	inc    edx
  426b6b:	add    BYTE PTR [eax-0x6fffbd95],al
  426b71:	imul   eax,DWORD PTR [edx+0x0],0xffffffa4
  426b75:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b79:	inc    ebp
  426b7a:	or     BYTE PTR [esi+0x5f],bl
  426b7d:	leave  
  426b7e:	ret    
  426b7f:	nop
  426b80:	mov    al,BYTE PTR [esi+0x3]
  426b83:	mov    BYTE PTR [edi+0x3],al
  426b86:	mov    eax,DWORD PTR [ebp+0x8]
  426b89:	pop    esi
  426b8a:	pop    edi
  426b8b:	leave  
  426b8c:	ret    
  426b8d:	lea    ecx,[ecx+0x0]
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    al,BYTE PTR [esi+0x2]
  426b99:	mov    BYTE PTR [edi+0x2],al
  426b9c:	mov    eax,DWORD PTR [ebp+0x8]
  426b9f:	pop    esi
  426ba0:	pop    edi
  426ba1:	leave  
  426ba2:	ret    
  426ba3:	nop
  426ba4:	mov    al,BYTE PTR [esi+0x3]
  426ba7:	mov    BYTE PTR [edi+0x3],al
  426baa:	mov    al,BYTE PTR [esi+0x2]
  426bad:	mov    BYTE PTR [edi+0x2],al
  426bb0:	mov    al,BYTE PTR [esi+0x1]
  426bb3:	mov    BYTE PTR [edi+0x1],al
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	pop    esi
  426bba:	pop    edi
  426bbb:	leave  
  426bbc:	ret    
  426bbd:	push   ebp
  426bbe:	mov    ebp,esp
  426bc0:	sub    esp,0xc
  426bc3:	mov    eax,ds:0x45f510
  426bc8:	xor    eax,DWORD PTR [ebp+0x4]
  426bcb:	and    BYTE PTR [ebp-0x6],0x0
  426bcf:	push   0x6
  426bd1:	mov    DWORD PTR [ebp-0x4],eax
  426bd4:	lea    eax,[ebp-0xc]
  426bd7:	push   eax
  426bd8:	push   0x1004
  426bdd:	push   DWORD PTR [ebp+0x8]
  426be0:	call   DWORD PTR ds:0x428108
  426be6:	test   eax,eax
  426be8:	jne    0x426bef
  426bea:	or     eax,0xffffffff
  426bed:	jmp    0x426bf9
  426bef:	lea    eax,[ebp-0xc]
  426bf2:	push   eax
  426bf3:	call   0x426efe
  426bf8:	pop    ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	xor    ecx,DWORD PTR [ebp+0x4]
  426bff:	call   0x42400c
  426c04:	leave  
  426c05:	ret    
  426c06:	push   0x38
  426c08:	push   0x428ee8
  426c0d:	call   0x423940
  426c12:	mov    eax,ds:0x45f510
  426c17:	xor    eax,DWORD PTR [ebp+0x4]
  426c1a:	mov    DWORD PTR [ebp-0x1c],eax
  426c1d:	xor    edi,edi
  426c1f:	mov    DWORD PTR [ebp-0x20],edi
  426c22:	mov    DWORD PTR [ebp-0x24],edi
  426c25:	mov    eax,DWORD PTR [ebp+0x14]
  426c28:	mov    ebx,DWORD PTR [eax]
  426c2a:	mov    DWORD PTR [ebp-0x28],ebx
  426c2d:	mov    DWORD PTR [ebp-0x2c],edi
  426c30:	mov    eax,DWORD PTR [ebp+0x8]
  426c33:	cmp    eax,DWORD PTR [ebp+0xc]
  426c36:	je     0x426daf
  426c3c:	lea    ecx,[ebp-0x40]
  426c3f:	push   ecx
  426c40:	push   eax
  426c41:	mov    esi,DWORD PTR ds:0x4280d4
  426c47:	call   esi
  426c49:	test   eax,eax
  426c4b:	je     0x426c6d
  426c4d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c51:	jne    0x426c6d
  426c53:	lea    eax,[ebp-0x40]
  426c56:	push   eax
  426c57:	push   DWORD PTR [ebp+0xc]
  426c5a:	call   esi
  426c5c:	test   eax,eax
  426c5e:	je     0x426c6d
  426c60:	cmp    DWORD PTR [ebp-0x40],0x1
  426c64:	jne    0x426c6d
  426c66:	mov    DWORD PTR [ebp-0x2c],0x1
  426c6d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c70:	je     0x426c8c
  426c72:	cmp    ebx,0xffffffff
  426c75:	je     0x426c7b
  426c77:	mov    esi,ebx
  426c79:	jmp    0x426c87
  426c7b:	push   DWORD PTR [ebp+0x10]
  426c7e:	call   0x423f50
  426c83:	pop    ecx
  426c84:	mov    esi,eax
  426c86:	inc    esi
  426c87:	mov    DWORD PTR [ebp-0x44],esi
  426c8a:	jmp    0x426c8f
  426c8c:	mov    esi,DWORD PTR [ebp-0x44]
  426c8f:	cmp    DWORD PTR [ebp-0x2c],edi
  426c92:	jne    0x426cae
  426c94:	push   edi
  426c95:	push   edi
  426c96:	push   ebx
  426c97:	push   DWORD PTR [ebp+0x10]
  426c9a:	push   0x1
  426c9c:	push   DWORD PTR [ebp+0x8]
  426c9f:	call   DWORD PTR ds:0x4280f8
  426ca5:	mov    esi,eax
  426ca7:	mov    DWORD PTR [ebp-0x44],esi
  426caa:	cmp    esi,edi
  426cac:	je     0x426d06
  426cae:	mov    DWORD PTR [ebp-0x4],edi
  426cb1:	lea    eax,[esi+esi*1]
  426cb4:	add    eax,0x3
  426cb7:	and    eax,0xfffffffc
  426cba:	call   0x423990
  426cbf:	mov    DWORD PTR [ebp-0x18],esp
  426cc2:	mov    ebx,esp
  426cc4:	mov    DWORD PTR [ebp-0x48],ebx
  426cc7:	lea    eax,[esi+esi*1]
  426cca:	push   eax
  426ccb:	push   edi
  426ccc:	push   ebx
  426ccd:	call   0x426240
  426cd2:	add    esp,0xc
  426cd5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cd9:	jmp    0x426cf2
  426cdb:	xor    eax,eax
  426cdd:	inc    eax
  426cde:	ret    
  426cdf:	mov    esp,DWORD PTR [ebp-0x18]
  426ce2:	call   0x426dd5
  426ce7:	xor    edi,edi
  426ce9:	xor    ebx,ebx
  426ceb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cef:	mov    esi,DWORD PTR [ebp-0x44]
  426cf2:	cmp    ebx,edi
  426cf4:	jne    0x426d14
  426cf6:	push   esi
  426cf7:	push   0x2
  426cf9:	call   0x424a58
  426cfe:	pop    ecx
  426cff:	pop    ecx
  426d00:	mov    ebx,eax
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d0d
  426d06:	xor    eax,eax
  426d08:	jmp    0x426dc1
  426d0d:	mov    DWORD PTR [ebp-0x24],0x1
  426d14:	push   esi
  426d15:	push   ebx
  426d16:	push   DWORD PTR [ebp-0x28]
  426d19:	push   DWORD PTR [ebp+0x10]
  426d1c:	push   0x1
  426d1e:	push   DWORD PTR [ebp+0x8]
  426d21:	call   DWORD PTR ds:0x4280f8
  426d27:	test   eax,eax
  426d29:	je     0x426db2
  426d2f:	cmp    DWORD PTR [ebp+0x18],edi
  426d32:	je     0x426d54
  426d34:	push   edi
  426d35:	push   edi
  426d36:	push   DWORD PTR [ebp+0x1c]
  426d39:	push   DWORD PTR [ebp+0x18]
  426d3c:	push   esi
  426d3d:	push   ebx
  426d3e:	push   edi
  426d3f:	push   DWORD PTR [ebp+0xc]
  426d42:	call   DWORD PTR ds:0x428088
  426d48:	test   eax,eax
  426d4a:	je     0x426db2
  426d4c:	mov    eax,DWORD PTR [ebp+0x18]
  426d4f:	mov    DWORD PTR [ebp-0x20],eax
  426d52:	jmp    0x426db2
  426d54:	cmp    DWORD PTR [ebp-0x2c],edi
  426d57:	jne    0x426d6f
  426d59:	push   edi
  426d5a:	push   edi
  426d5b:	push   edi
  426d5c:	push   edi
  426d5d:	push   esi
  426d5e:	push   ebx
  426d5f:	push   edi
  426d60:	push   DWORD PTR [ebp+0xc]
  426d63:	call   DWORD PTR ds:0x428088
  426d69:	mov    esi,eax
  426d6b:	cmp    esi,edi
  426d6d:	je     0x426db2
  426d6f:	push   esi
  426d70:	push   0x1
  426d72:	call   0x424a58
  426d77:	pop    ecx
  426d78:	pop    ecx
  426d79:	mov    DWORD PTR [ebp-0x20],eax
  426d7c:	cmp    eax,edi
  426d7e:	je     0x426db2
  426d80:	push   edi
  426d81:	push   edi
  426d82:	push   esi
  426d83:	push   eax
  426d84:	push   esi
  426d85:	push   ebx
  426d86:	push   edi
  426d87:	push   DWORD PTR [ebp+0xc]
  426d8a:	call   DWORD PTR ds:0x428088
  426d90:	cmp    eax,edi
  426d92:	jne    0x426da2
  426d94:	push   DWORD PTR [ebp-0x20]
  426d97:	call   0x42454a
  426d9c:	pop    ecx
  426d9d:	mov    DWORD PTR [ebp-0x20],edi
  426da0:	jmp    0x426db2
  426da2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426da6:	je     0x426db2
  426da8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dab:	mov    DWORD PTR [ecx],eax
  426dad:	jmp    0x426db2
  426daf:	mov    ebx,DWORD PTR [ebp-0x48]
  426db2:	cmp    DWORD PTR [ebp-0x24],edi
  426db5:	je     0x426dbe
  426db7:	push   ebx
  426db8:	call   0x42454a
  426dbd:	pop    ecx
  426dbe:	mov    eax,DWORD PTR [ebp-0x20]
  426dc1:	lea    esp,[ebp-0x54]
  426dc4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dc7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dca:	call   0x42400c
  426dcf:	call   0x42397b
  426dd4:	ret    
  426dd5:	push   ebp
  426dd6:	mov    ebp,esp
  426dd8:	sub    esp,0x48
  426ddb:	push   ebx
  426ddc:	push   esi
  426ddd:	push   edi
  426dde:	push   0x4
  426de0:	pop    eax
  426de1:	call   0x423990
  426de6:	mov    ebx,esp
  426de8:	push   0x1c
  426dea:	lea    eax,[ebp-0x24]
  426ded:	push   eax
  426dee:	push   ebx
  426def:	call   DWORD PTR ds:0x42803c
  426df5:	test   eax,eax
  426df7:	je     0x426e6a
  426df9:	mov    edi,DWORD PTR [ebp-0x20]
  426dfc:	lea    eax,[ebp-0x48]
  426dff:	push   eax
  426e00:	call   DWORD PTR ds:0x428040
  426e06:	mov    eax,DWORD PTR [ebp-0x44]
  426e09:	lea    esi,[eax-0x1]
  426e0c:	not    esi
  426e0e:	and    esi,ebx
  426e10:	sub    esi,eax
  426e12:	mov    DWORD PTR [ebp-0x4],eax
  426e15:	mov    eax,ds:0x45fba4
  426e1a:	mov    ecx,eax
  426e1c:	dec    ecx
  426e1d:	neg    ecx
  426e1f:	sbb    ecx,ecx
  426e21:	and    ecx,0xffff1000
  426e27:	add    ecx,0x11000
  426e2d:	add    ecx,edi
  426e2f:	cmp    esi,ecx
  426e31:	jb     0x426e6a
  426e33:	cmp    eax,0x1
  426e36:	je     0x426e82
  426e38:	mov    ebx,edi
  426e3a:	mov    edi,0x1000
  426e3f:	push   0x1c
  426e41:	lea    eax,[ebp-0x24]
  426e44:	push   eax
  426e45:	push   ebx
  426e46:	call   DWORD PTR ds:0x42803c
  426e4c:	test   eax,eax
  426e4e:	je     0x426e6a
  426e50:	add    ebx,DWORD PTR [ebp-0x18]
  426e53:	test   DWORD PTR [ebp-0x14],edi
  426e56:	je     0x426e3f
  426e58:	test   BYTE PTR [ebp-0xf],0x1
  426e5c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e5f:	je     0x426e66
  426e61:	xor    eax,eax
  426e63:	inc    eax
  426e64:	jmp    0x426e9e
  426e66:	cmp    esi,ebx
  426e68:	jae    0x426e6e
  426e6a:	xor    eax,eax
  426e6c:	jmp    0x426e9e
  426e6e:	push   0x4
  426e70:	push   edi
  426e71:	push   DWORD PTR [ebp-0x4]
  426e74:	push   ebx
  426e75:	call   DWORD PTR ds:0x42802c
  426e7b:	mov    eax,ds:0x45fba4
  426e80:	jmp    0x426e84
  426e82:	mov    ebx,esi
  426e84:	dec    eax
  426e85:	neg    eax
  426e87:	sbb    eax,eax
  426e89:	and    eax,0x103
  426e8e:	lea    ecx,[ebp-0x8]
  426e91:	push   ecx
  426e92:	inc    eax
  426e93:	push   eax
  426e94:	push   DWORD PTR [ebp-0x4]
  426e97:	push   ebx
  426e98:	call   DWORD PTR ds:0x428050
  426e9e:	lea    esp,[ebp-0x54]
  426ea1:	pop    edi
  426ea2:	pop    esi
  426ea3:	pop    ebx
  426ea4:	leave  
  426ea5:	ret    
  426ea6:	int3   
  426ea7:	int3   
  426ea8:	int3   
  426ea9:	int3   
  426eaa:	int3   
  426eab:	int3   
  426eac:	int3   
  426ead:	int3   
  426eae:	int3   
  426eaf:	int3   
  426eb0:	push   ebp
  426eb1:	mov    ebp,esp
  426eb3:	push   edi
  426eb4:	push   esi
  426eb5:	push   ebx
  426eb6:	mov    esi,DWORD PTR [ebp+0xc]
  426eb9:	mov    edi,DWORD PTR [ebp+0x8]
  426ebc:	mov    al,0xff
  426ebe:	mov    edi,edi
  426ec0:	or     al,al
  426ec2:	je     0x426ef6
  426ec4:	mov    al,BYTE PTR [esi]
  426ec6:	add    esi,0x1
  426ec9:	mov    ah,BYTE PTR [edi]
  426ecb:	add    edi,0x1
  426ece:	cmp    ah,al
  426ed0:	je     0x426ec0
  426ed2:	sub    al,0x41
  426ed4:	cmp    al,0x1a
  426ed6:	sbb    cl,cl
  426ed8:	and    cl,0x20
  426edb:	add    al,cl
  426edd:	add    al,0x41
  426edf:	xchg   al,ah
  426ee1:	sub    al,0x41
  426ee3:	cmp    al,0x1a
  426ee5:	sbb    cl,cl
  426ee7:	and    cl,0x20
  426eea:	add    al,cl
  426eec:	add    al,0x41
  426eee:	cmp    al,ah
  426ef0:	je     0x426ec0
  426ef2:	sbb    al,al
  426ef4:	sbb    al,0xff
  426ef6:	movsx  eax,al
  426ef9:	pop    ebx
  426efa:	pop    esi
  426efb:	pop    edi
  426efc:	leave  
  426efd:	ret    
  426efe:	push   esi
  426eff:	push   edi
  426f00:	call   0x4237f3
  426f05:	mov    edi,DWORD PTR [eax+0x64]
  426f08:	cmp    edi,DWORD PTR ds:0x45f66c
  426f0e:	je     0x426f17
  426f10:	call   0x424c9f
  426f15:	mov    edi,eax
  426f17:	mov    esi,DWORD PTR [esp+0xc]
  426f1b:	cmp    DWORD PTR [edi+0x28],0x1
  426f1f:	movzx  eax,BYTE PTR [esi]
  426f22:	jle    0x426f32
  426f24:	push   0x8
  426f26:	push   eax
  426f27:	push   edi
  426f28:	call   0x426f86
  426f2d:	add    esp,0xc
  426f30:	jmp    0x426f3c
  426f32:	mov    ecx,DWORD PTR [edi+0x48]
  426f35:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f39:	and    eax,0x8
  426f3c:	test   eax,eax
  426f3e:	je     0x426f43
  426f40:	inc    esi
  426f41:	jmp    0x426f1b
  426f43:	movzx  ecx,BYTE PTR [esi]
  426f46:	inc    esi
  426f47:	cmp    ecx,0x2d
  426f4a:	mov    edx,ecx
  426f4c:	je     0x426f53
  426f4e:	cmp    ecx,0x2b
  426f51:	jne    0x426f57
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	xor    eax,eax
  426f59:	cmp    ecx,0x30
  426f5c:	jl     0x426f68
  426f5e:	cmp    ecx,0x39
  426f61:	jg     0x426f68
  426f63:	sub    ecx,0x30
  426f66:	jmp    0x426f6b
  426f68:	or     ecx,0xffffffff
  426f6b:	cmp    ecx,0xffffffff
  426f6e:	je     0x426f7c
  426f70:	lea    eax,[eax+eax*4]
  426f73:	lea    eax,[ecx+eax*2]
  426f76:	movzx  ecx,BYTE PTR [esi]
  426f79:	inc    esi
  426f7a:	jmp    0x426f59
  426f7c:	cmp    edx,0x2d
  426f7f:	pop    edi
  426f80:	pop    esi
  426f81:	jne    0x426f85
  426f83:	neg    eax
  426f85:	ret    
  426f86:	push   ebp
  426f87:	mov    ebp,esp
  426f89:	push   ecx
  426f8a:	mov    eax,DWORD PTR [ebp+0xc]
  426f8d:	lea    ecx,[eax+0x1]
  426f90:	cmp    ecx,0x100
  426f96:	mov    ecx,DWORD PTR [ebp+0x8]
  426f99:	ja     0x426fa4
  426f9b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f9e:	movzx  eax,WORD PTR [ecx+eax*2]
  426fa2:	jmp    0x426ff8
  426fa4:	push   esi
  426fa5:	mov    edx,eax
  426fa7:	sar    edx,0x8
  426faa:	push   edi
  426fab:	mov    edi,DWORD PTR [ecx+0x48]
  426fae:	movzx  esi,dl
  426fb1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fb6:	pop    edi
  426fb7:	pop    esi
  426fb8:	je     0x426fc9
  426fba:	and    BYTE PTR [ebp-0x2],0x0
  426fbe:	push   0x2
  426fc0:	mov    BYTE PTR [ebp-0x3],al
  426fc3:	mov    BYTE PTR [ebp-0x4],dl
  426fc6:	pop    eax
  426fc7:	jmp    0x426fd3
  426fc9:	and    BYTE PTR [ebp-0x3],0x0
  426fcd:	mov    BYTE PTR [ebp-0x4],al
  426fd0:	xor    eax,eax
  426fd2:	inc    eax
  426fd3:	push   0x1
  426fd5:	push   DWORD PTR [ecx+0x14]
  426fd8:	push   DWORD PTR [ecx+0x4]
  426fdb:	lea    ecx,[ebp+0xe]
  426fde:	push   ecx
  426fdf:	push   eax
  426fe0:	lea    eax,[ebp-0x4]
  426fe3:	push   eax
  426fe4:	push   0x1
  426fe6:	call   0x426068
  426feb:	add    esp,0x1c
  426fee:	test   eax,eax
  426ff0:	jne    0x426ff4
  426ff2:	leave  
  426ff3:	ret    
  426ff4:	movzx  eax,WORD PTR [ebp+0xe]
  426ff8:	and    eax,DWORD PTR [ebp+0x10]
  426ffb:	leave  
  426ffc:	ret    
  426ffd:	int3   
  426ffe:	int3   
  426fff:	int3   
  427000:	mov    eax,DWORD PTR [esp+0x8]
  427004:	mov    ecx,DWORD PTR [esp+0x10]
  427008:	or     ecx,eax
  42700a:	mov    ecx,DWORD PTR [esp+0xc]
  42700e:	jne    0x427019
  427010:	mov    eax,DWORD PTR [esp+0x4]
  427014:	mul    ecx
  427016:	ret    0x10
  427019:	push   ebx
  42701a:	mul    ecx
  42701c:	mov    ebx,eax
  42701e:	mov    eax,DWORD PTR [esp+0x8]
  427022:	mul    DWORD PTR [esp+0x14]
  427026:	add    ebx,eax
  427028:	mov    eax,DWORD PTR [esp+0x8]
  42702c:	mul    ecx
  42702e:	add    edx,ebx
  427030:	pop    ebx
  427031:	ret    0x10
  427034:	int3   
  427035:	int3   
  427036:	int3   
  427037:	int3   
  427038:	int3   
  427039:	int3   
  42703a:	int3   
  42703b:	int3   
  42703c:	int3   
  42703d:	int3   
  42703e:	int3   
  42703f:	int3   
  427040:	push   ebp
  427041:	mov    ebp,esp
  427043:	push   edi
  427044:	push   esi
  427045:	push   ebx
  427046:	mov    ecx,DWORD PTR [ebp+0x10]
  427049:	or     ecx,ecx
  42704b:	je     0x42709a
  42704d:	mov    esi,DWORD PTR [ebp+0x8]
  427050:	mov    edi,DWORD PTR [ebp+0xc]
  427053:	mov    bh,0x41
  427055:	mov    bl,0x5a
  427057:	mov    dh,0x20
  427059:	lea    ecx,[ecx+0x0]
  42705c:	mov    ah,BYTE PTR [esi]
  42705e:	or     ah,ah
  427060:	mov    al,BYTE PTR [edi]
  427062:	je     0x42708b
  427064:	or     al,al
  427066:	je     0x42708b
  427068:	add    esi,0x1
  42706b:	add    edi,0x1
  42706e:	cmp    ah,bh
  427070:	jb     0x427078
  427072:	cmp    ah,bl
  427074:	ja     0x427078
  427076:	add    ah,dh
  427078:	cmp    al,bh
  42707a:	jb     0x427082
  42707c:	cmp    al,bl
  42707e:	ja     0x427082
  427080:	add    al,dh
  427082:	cmp    ah,al
  427084:	jne    0x427091
  427086:	sub    ecx,0x1
  427089:	jne    0x42705c
  42708b:	xor    ecx,ecx
  42708d:	cmp    ah,al
  42708f:	je     0x42709a
  427091:	mov    ecx,0xffffffff
  427096:	jb     0x42709a
  427098:	neg    ecx
  42709a:	mov    eax,ecx
  42709c:	pop    ebx
  42709d:	pop    esi
  42709e:	pop    edi
  42709f:	leave  
  4270a0:	ret    
  4270a1:	int3   
  4270a2:	int3   
  4270a3:	int3   
  4270a4:	int3   
  4270a5:	int3   
  4270a6:	int3   
  4270a7:	int3   
  4270a8:	int3   
  4270a9:	int3   
  4270aa:	int3   
  4270ab:	int3   
  4270ac:	int3   
  4270ad:	int3   
  4270ae:	int3   
  4270af:	int3   
  4270b0:	push   esi
  4270b1:	mov    eax,DWORD PTR [esp+0x14]
  4270b5:	or     eax,eax
  4270b7:	jne    0x4270e1
  4270b9:	mov    ecx,DWORD PTR [esp+0x10]
  4270bd:	mov    eax,DWORD PTR [esp+0xc]
  4270c1:	xor    edx,edx
  4270c3:	div    ecx
  4270c5:	mov    ebx,eax
  4270c7:	mov    eax,DWORD PTR [esp+0x8]
  4270cb:	div    ecx
  4270cd:	mov    esi,eax
  4270cf:	mov    eax,ebx
  4270d1:	mul    DWORD PTR [esp+0x10]
  4270d5:	mov    ecx,eax
  4270d7:	mov    eax,esi
  4270d9:	mul    DWORD PTR [esp+0x10]
  4270dd:	add    edx,ecx
  4270df:	jmp    0x427128
  4270e1:	mov    ecx,eax
  4270e3:	mov    ebx,DWORD PTR [esp+0x10]
  4270e7:	mov    edx,DWORD PTR [esp+0xc]
  4270eb:	mov    eax,DWORD PTR [esp+0x8]
  4270ef:	shr    ecx,1
  4270f1:	rcr    ebx,1
  4270f3:	shr    edx,1
  4270f5:	rcr    eax,1
  4270f7:	or     ecx,ecx
  4270f9:	jne    0x4270ef
  4270fb:	div    ebx
  4270fd:	mov    esi,eax
  4270ff:	mul    DWORD PTR [esp+0x14]
  427103:	mov    ecx,eax
  427105:	mov    eax,DWORD PTR [esp+0x10]
  427109:	mul    esi
  42710b:	add    edx,ecx
  42710d:	jb     0x42711d
  42710f:	cmp    edx,DWORD PTR [esp+0xc]
  427113:	ja     0x42711d
  427115:	jb     0x427126
  427117:	cmp    eax,DWORD PTR [esp+0x8]
  42711b:	jbe    0x427126
  42711d:	dec    esi
  42711e:	sub    eax,DWORD PTR [esp+0x10]
  427122:	sbb    edx,DWORD PTR [esp+0x14]
  427126:	xor    ebx,ebx
  427128:	sub    eax,DWORD PTR [esp+0x8]
  42712c:	sbb    edx,DWORD PTR [esp+0xc]
  427130:	neg    edx
  427132:	neg    eax
  427134:	sbb    edx,0x0
  427137:	mov    ecx,edx
  427139:	mov    edx,ebx
  42713b:	mov    ebx,ecx
  42713d:	mov    ecx,eax
  42713f:	mov    eax,esi
  427141:	pop    esi
  427142:	ret    0x10
  427145:	int3   
  427146:	int3   
  427147:	int3   
  427148:	int3   
  427149:	int3   
  42714a:	int3   
  42714b:	int3   
  42714c:	int3   
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	lea    eax,[edx-0x1]
  427153:	pop    ebx
  427154:	ret    
  427155:	lea    esp,[esp+0x0]
  42715c:	lea    esp,[esp+0x0]
  427160:	xor    eax,eax
  427162:	mov    al,BYTE PTR [esp+0x8]
  427166:	push   ebx
  427167:	mov    ebx,eax
  427169:	shl    eax,0x8
  42716c:	mov    edx,DWORD PTR [esp+0x8]
  427170:	test   edx,0x3
  427176:	je     0x42718d
  427178:	mov    cl,BYTE PTR [edx]
  42717a:	add    edx,0x1
  42717d:	cmp    cl,bl
  42717f:	je     0x427150
  427181:	test   cl,cl
  427183:	je     0x4271d6
  427185:	test   edx,0x3
  42718b:	jne    0x427178
  42718d:	or     ebx,eax
  42718f:	push   edi
  427190:	mov    eax,ebx
  427192:	shl    ebx,0x10
  427195:	push   esi
  427196:	or     ebx,eax
  427198:	mov    ecx,DWORD PTR [edx]
  42719a:	mov    edi,0x7efefeff
  42719f:	mov    eax,ecx
  4271a1:	mov    esi,edi
  4271a3:	xor    ecx,ebx
  4271a5:	add    esi,eax
  4271a7:	add    edi,ecx
  4271a9:	xor    ecx,0xffffffff
  4271ac:	xor    eax,0xffffffff
  4271af:	xor    ecx,edi
  4271b1:	xor    eax,esi
  4271b3:	add    edx,0x4
  4271b6:	and    ecx,0x81010100
  4271bc:	jne    0x4271da
  4271be:	and    eax,0x81010100
  4271c3:	je     0x427198
  4271c5:	and    eax,0x1010100
  4271ca:	jne    0x4271d4
  4271cc:	and    esi,0x80000000
  4271d2:	jne    0x427198
  4271d4:	pop    esi
  4271d5:	pop    edi
  4271d6:	pop    ebx
  4271d7:	xor    eax,eax
  4271d9:	ret    
  4271da:	mov    eax,DWORD PTR [edx-0x4]
  4271dd:	cmp    al,bl
  4271df:	je     0x427217
  4271e1:	test   al,al
  4271e3:	je     0x4271d4
  4271e5:	cmp    ah,bl
  4271e7:	je     0x427210
  4271e9:	test   ah,ah
  4271eb:	je     0x4271d4
  4271ed:	shr    eax,0x10
  4271f0:	cmp    al,bl
  4271f2:	je     0x427209
  4271f4:	test   al,al
  4271f6:	je     0x4271d4
  4271f8:	cmp    ah,bl
  4271fa:	je     0x427202
  4271fc:	test   ah,ah
  4271fe:	je     0x4271d4
  427200:	jmp    0x427198
  427202:	pop    esi
  427203:	pop    edi
  427204:	lea    eax,[edx-0x1]
  427207:	pop    ebx
  427208:	ret    
  427209:	lea    eax,[edx-0x2]
  42720c:	pop    esi
  42720d:	pop    edi
  42720e:	pop    ebx
  42720f:	ret    
  427210:	lea    eax,[edx-0x3]
  427213:	pop    esi
  427214:	pop    edi
  427215:	pop    ebx
  427216:	ret    
  427217:	lea    eax,[edx-0x4]
  42721a:	pop    esi
  42721b:	pop    edi
  42721c:	pop    ebx
  42721d:	ret    
  42721e:	jmp    DWORD PTR ds:0x428054
